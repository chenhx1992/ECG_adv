#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sat Jan 12 00:59:46 2019

@author: chenhx1992
"""


import numpy as np
import matplotlib.pyplot as plt
import matplotlib.ticker as mtick

x = np.array([9000,7500,6000,4500,3000,1500])
target_file = np.genfromtxt('./dynamic_result/result_LDMF.csv')
x1 = target_file[0:3,:]
x2 = target_file[3:6,:]
x3 = target_file[6:9,:]
x4 = target_file[9:12,:]
y1 = target_file[12:15,:]
y2 = target_file[15:18,:]
y3 = target_file[18:21,:]
y4 = target_file[21:24,:]

# plt.plot(x.T, x1[0,:], 'k*-')
# plt.xlim(9000, 1500)


fig, axs = plt.subplots(2,2)
line_labels = ['N(filter 1)', 'O(filter 1)', '~(filter 1)', 'N(filter 2)', 'O(filter 2)', '~(filter 2)']
plt.subplots_adjust(left=None, bottom=None, right=None, top=None,wspace=0.5, hspace=0.5)
la = axs[0,0].plot(x.T, x1[0,:], 'rx-')
lb = axs[0,0].plot(x.T, x1[1,:], 'gx-')
lc = axs[0,0].plot(x.T, x1[2,:], 'kx-')
ra = axs[0,0].plot(x.T, y1[0,:], 'b.:')
rb = axs[0,0].plot(x.T, y1[1,:], '.:', color = 'purple')
rc = axs[0,0].plot(x.T, y1[2,:], '.:', color = 'orange')
axs[0,0].set_xlim(9000, 1500)
axs[0,0].yaxis.set_major_formatter(mtick.PercentFormatter(1.0))
axs[0,0].legend(['N(filter 1)', 'O(filter 1)', '~(filter 1)', 'N(filter 2)', 'O(filter 2)', '~(filter 2)'], prop={'size': 8})
axs[0,0].title.set_text('Origin Class: A')
# axs[0,0].set_xticks(x)
axs[0,1].plot(x.T, x2[0,:], 'rx-')
axs[0,1].plot(x.T, x2[1,:], 'gx-')
axs[0,1].plot(x.T, x2[2,:], 'kx-')
axs[0,1].plot(x.T, y2[0,:], 'b.:')
axs[0,1].plot(x.T, y2[1,:], '.:', color = 'purple')
axs[0,1].plot(x.T, y2[2,:], '.:', color = 'orange')
axs[0,1].set_xlim(9000, 1500)
axs[0,1].yaxis.set_major_formatter(mtick.PercentFormatter(1.0))
axs[0,1].legend(['A(filter 1)', 'O(filter 1)', '~(filter 1)', 'A(filter 2)', 'O(filter 2)', '~(filter 2)'], prop={'size': 8})
axs[0,1].title.set_text('Origin Class: N')
#axs[0,1].legend(['N-A', 'N-O', 'N-~'])

axs[1,0].plot(x.T, x3[0,:], 'rx-')
axs[1,0].plot(x.T, x3[1,:], 'gx-')
axs[1,0].plot(x.T, x3[2,:], 'kx-')
axs[1,0].plot(x.T, y3[0,:], 'b.:')
axs[1,0].plot(x.T, y3[1,:], '.:', color = 'purple')
axs[1,0].plot(x.T, y3[2,:], '.:', color = 'orange')
axs[1,0].set_xlim(9000, 1500)
axs[1,0].yaxis.set_major_formatter(mtick.PercentFormatter(1.0))
axs[1,0].legend(['A(filter 1)', 'N(filter 1)', '~(filter 1)', 'A(filter 2)', 'N(filter 2)', '~(filter 2)'], prop={'size': 8})
#axs[1,0].legend(['O-A', 'O-N', 'O-~'])
axs[1,0].title.set_text('Origin Class: O')

axs[1,1].plot(x.T, x4[0,:], 'rx-')
axs[1,1].plot(x.T, x4[1,:], 'gx-')
axs[1,1].plot(x.T, x4[2,:], 'kx-')
axs[1,1].plot(x.T, y4[0,:], 'b.:')
axs[1,1].plot(x.T, y4[1,:], '.:', color = 'purple')
axs[1,1].plot(x.T, y4[2,:], '.:', color = 'orange')
axs[1,1].set_xlim(9000, 1500)
axs[1,1].yaxis.set_major_formatter(mtick.PercentFormatter(1.0))
axs[1,1].legend(['A(filter 1)', 'N(filter 1)', 'O(filter 1)', 'A(filter 2)', 'N(filter 2)', 'O(filter 2)'], prop={'size': 8})
#axs[1,1].legend(['~-A', '~-N', '~-O'])
axs[1,1].title.set_text('Origin Class: ~')
#plt.setp(axs, xticks = [1500,3000,4500,6000,7500,9000])
fig.tight_layout()
#fig.legend([la, lb, lc, ra, rb, rc],     # The line objects
#           labels=line_labels,   # The labels for each line
#           loc="center right",   # Position of legend
#           borderaxespad=0.1,    # Small spacing around legend box
#           )
#plt.subplots_adjust(right=0.8)
plt.show()

#     length = 9000
#     axs[0].plot(sample[0:length,:], color='black', label='Original signal')
# #    axs[0].plot(adv_sample[:,:]-sample[:,:], color='green', label='perturbation')
#     axs[0].set_title('Original signal {}, Index {}'.format(g_label, str(idx)))
#     axs[0].set_ylim([ymin, ymax])
#     axs[0].set_ylabel('signal value')
    
#     axs[1].plot(adv_sample_1[0:length,:], color='forestgreen', label='Adv signal_diff')
#     axs[1].set_title('Adv signal {}, Target {}'.format(r_label_1, t_label))
#     axs[1].set_ylim([ymin, ymax])
#     axs[1].set_ylabel('signal value')
    
#     axs[2].plot(adv_sample_2[0:length,:], color='forestgreen', label='Adv signal_l2')
#     axs[2].set_title('Adv signal {}, Target {}'.format(r_label_2, t_label))
#     axs[2].set_ylim([ymin, ymax])
#     axs[2].set_ylabel('signal value')
    
#     axs[3].plot(adv_sample_3[0:length,:], color='forestgreen', label='Adv signal_l2_diff')
#     axs[3].set_title('Adv signal {}, Target {}'.format(r_label_3, t_label))
#     axs[3].set_ylim([ymin, ymax])
#     axs[3].set_xlabel('index')
#     axs[3].set_ylabel('signal value')
#     fig.tight_layout()