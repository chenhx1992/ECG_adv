Already up-to-date.
Loading model
Loading ground truth file
Attack diff is running...
Loading record A03592
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0753 " + "l1=0.0753" + "l2=0 f=-0.36 shape=(1, 9000, 1)
logits [[ 4.339214  -3.1878815  3.698916  -6.291173 ]]
Iteration 100 of 1000: loss=0.0746 " + "l1=0.0741" + "l2=0.000504 f=-0.357 shape=(1, 9000, 1)
logits [[ 4.284596  -3.12406    3.6476948 -6.23784  ]]
Iteration 200 of 1000: loss=0.0744 " + "l1=0.0739" + "l2=0.000544 f=-0.357 shape=(1, 9000, 1)
logits [[ 4.275163  -3.111288   3.6373632 -6.227884 ]]
Iteration 300 of 1000: loss=0.0743 " + "l1=0.0736" + "l2=0.000648 f=-0.356 shape=(1, 9000, 1)
logits [[ 4.2659645 -3.0987175  3.6270273 -6.2177663]]
Iteration 400 of 1000: loss=0.0742 " + "l1=0.0734" + "l2=0.000763 f=-0.355 shape=(1, 9000, 1)
logits [[ 4.2574816 -3.0863113  3.616792  -6.208359 ]]
Iteration 500 of 1000: loss=0.0741 " + "l1=0.0732" + "l2=0.000865 f=-0.354 shape=(1, 9000, 1)
logits [[ 4.249958  -3.0747726  3.6072612 -6.1996603]]
Iteration 600 of 1000: loss=0.0741 " + "l1=0.0731" + "l2=0.000987 f=-0.354 shape=(1, 9000, 1)
logits [[ 4.2432194 -3.0646017  3.599074  -6.192112 ]]
Iteration 700 of 1000: loss=0.0741 " + "l1=0.0729" + "l2=0.00114 f=-0.353 shape=(1, 9000, 1)
logits [[ 4.237092  -3.0550656  3.5914202 -6.185051 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.753 " + "l1=0.753" + "l2=0 f=-0.36 shape=(1, 9000, 1)
logits [[ 4.339214  -3.1878815  3.698916  -6.291173 ]]
Iteration 100 of 1000: loss=0.684 " + "l1=0.637" + "l2=0.0463 f=-0.34 shape=(1, 9000, 1)
logits [[ 3.7659733 -2.607918   3.2405043 -5.7595263]]
Iteration 200 of 1000: loss=0.657 " + "l1=0.597" + "l2=0.0603 f=-0.332 shape=(1, 9000, 1)
logits [[ 3.5747354 -2.3948798  3.0814219 -5.5884843]]
Iteration 300 of 1000: loss=0.632 " + "l1=0.556" + "l2=0.0763 f=-0.334 shape=(1, 9000, 1)
logits [[ 3.3920293 -2.1683214  2.9061944 -5.467811 ]]
Iteration 400 of 1000: loss=0.61 " + "l1=0.519" + "l2=0.0906 f=-0.335 shape=(1, 9000, 1)
logits [[ 3.2190661 -1.9709696  2.7610679 -5.348568 ]]
Iteration 500 of 1000: loss=0.586 " + "l1=0.483" + "l2=0.104 f=-0.338 shape=(1, 9000, 1)
logits [[ 3.057292  -1.7720617  2.6227796 -5.261252 ]]
Iteration 600 of 1000: loss=0.564 " + "l1=0.448" + "l2=0.115 f=-0.346 shape=(1, 9000, 1)
logits [[ 2.8880966 -1.5958401  2.512513  -5.188809 ]]
Iteration 700 of 1000: loss=0.54 " + "l1=0.412" + "l2=0.128 f=-0.355 shape=(1, 9000, 1)
logits [[ 2.7020779 -1.4144156  2.3934417 -5.1008153]]
Iteration 800 of 1000: loss=0.517 " + "l1=0.38" + "l2=0.137 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.5447497 -1.2589399  2.2973032 -5.035465 ]]
Iteration 900 of 1000: loss=0.5 " + "l1=0.355" + "l2=0.145 f=-0.368 shape=(1, 9000, 1)
logits [[ 2.4004858 -1.1466504  2.2133665 -4.9396915]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.53 " + "l1=7.53" + "l2=0 f=-0.36 shape=(1, 9000, 1)
logits [[ 4.339214  -3.1878815  3.698916  -6.291173 ]]
Iteration 100 of 1000: loss=2.96 " + "l1=1.31" + "l2=1.65 f=-0.38 shape=(1, 9000, 1)
logits [[ 1.2290295  -0.06496016  1.2433963  -3.9268804 ]]
Iteration 200 of 1000: loss=2.09 " + "l1=0.473" + "l2=1.61 f=-0.418 shape=(1, 9000, 1)
logits [[ 0.8644852   0.39215901  0.8656585  -3.7943544 ]]
Iteration 300 of 1000: loss=1.76 " + "l1=0.113" + "l2=1.64 f=-0.436 shape=(1, 9000, 1)
logits [[ 0.63331306  0.55964994  0.6731417  -3.6102638 ]]
Iteration 400 of 1000: loss=1.53 " + "l1=0.0451" + "l2=1.48 f=-0.445 shape=(1, 9000, 1)
logits [[ 0.54198617  0.55251104  0.59762627 -3.4724002 ]]
Iteration 500 of 1000: loss=1.44 " + "l1=0.00298" + "l2=1.43 f=-0.442 shape=(1, 9000, 1)
logits [[ 0.4646218   0.567649    0.57062614 -3.3706396 ]]
Iteration 600 of 1000: loss=1.37 " + "l1=0.007" + "l2=1.36 f=-0.442 shape=(1, 9000, 1)
logits [[ 0.3993527   0.54820925  0.55520684 -3.2703369 ]]
Iteration 700 of 1000: loss=1.32 " + "l1=0" + "l2=1.32 f=-0.439 shape=(1, 9000, 1)
logits [[ 0.35791346  0.5546548   0.5443223  -3.211002  ]]
Iteration 800 of 1000: loss=1.26 " + "l1=0" + "l2=1.26 f=-0.432 shape=(1, 9000, 1)
logits [[ 0.31478003  0.5441812   0.5403497  -3.1271782 ]]
Iteration 900 of 1000: loss=1.2 " + "l1=0" + "l2=1.2 f=-0.425 shape=(1, 9000, 1)
logits [[ 0.2797699  0.5338438  0.532493  -3.0475867]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.14 " + "l1=4.14" + "l2=0 f=-0.36 shape=(1, 9000, 1)
logits [[ 4.339214  -3.1878815  3.698916  -6.291173 ]]
Iteration 100 of 1000: loss=2.27 " + "l1=1.38" + "l2=0.894 f=-0.378 shape=(1, 9000, 1)
logits [[ 1.7681421 -0.7431132  1.7641335 -4.303025 ]]
Iteration 200 of 1000: loss=1.75 " + "l1=0.823" + "l2=0.923 f=-0.404 shape=(1, 9000, 1)
logits [[ 1.3225516  -0.15384243  1.3423464  -4.1263227 ]]
Iteration 300 of 1000: loss=1.54 " + "l1=0.658" + "l2=0.883 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.2131677   0.01632865  1.2031764  -4.0887    ]]
Iteration 400 of 1000: loss=1.42 " + "l1=0.543" + "l2=0.88 f=-0.411 shape=(1, 9000, 1)
logits [[ 1.1074518   0.12100378  1.0979288  -3.9723287 ]]
Iteration 500 of 1000: loss=1.32 " + "l1=0.452" + "l2=0.873 f=-0.408 shape=(1, 9000, 1)
logits [[ 1.0097783   0.19242741  1.0142603  -3.8481612 ]]
Iteration 600 of 1000: loss=1.27 " + "l1=0.412" + "l2=0.86 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.96181434  0.21825719  0.9667143  -3.765652  ]]
Iteration 700 of 1000: loss=1.24 " + "l1=0.38" + "l2=0.861 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.9077318   0.23788361  0.92812324 -3.691546  ]]
Iteration 800 of 1000: loss=1.21 " + "l1=0.343" + "l2=0.866 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.8497394   0.24543788  0.86896956 -3.574165  ]]
Iteration 900 of 1000: loss=1.18 " + "l1=0.302" + "l2=0.879 f=-0.395 shape=(1, 9000, 1)
logits [[ 0.79070735  0.25722092  0.8059841  -3.4320858 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.83 " + "l1=5.83" + "l2=0 f=-0.36 shape=(1, 9000, 1)
logits [[ 4.339214  -3.1878815  3.698916  -6.291173 ]]
Iteration 100 of 1000: loss=2.66 " + "l1=1.38" + "l2=1.28 f=-0.379 shape=(1, 9000, 1)
logits [[ 1.4501442  -0.33083454  1.4520509  -4.0889635 ]]
Iteration 200 of 1000: loss=1.98 " + "l1=0.641" + "l2=1.34 f=-0.405 shape=(1, 9000, 1)
logits [[ 1.0365335  0.2144514  1.0416684 -3.9131122]]
Iteration 300 of 1000: loss=1.72 " + "l1=0.423" + "l2=1.29 f=-0.421 shape=(1, 9000, 1)
logits [[ 0.89447504  0.36116493  0.9065715  -3.847472  ]]
Iteration 400 of 1000: loss=1.58 " + "l1=0.295" + "l2=1.29 f=-0.431 shape=(1, 9000, 1)
logits [[ 0.77936304  0.43501213  0.81519043 -3.7532053 ]]
Iteration 500 of 1000: loss=1.47 " + "l1=0.151" + "l2=1.32 f=-0.436 shape=(1, 9000, 1)
logits [[ 0.6536242  0.4919078  0.6872322 -3.5766487]]
Iteration 600 of 1000: loss=1.39 " + "l1=0.0248" + "l2=1.36 f=-0.442 shape=(1, 9000, 1)
logits [[ 0.44781637  0.5630948   0.5951163  -3.3729467 ]]
Iteration 700 of 1000: loss=1.31 " + "l1=0.0323" + "l2=1.28 f=-0.434 shape=(1, 9000, 1)
logits [[ 0.40550733  0.5408656   0.5825884  -3.2632906 ]]
Iteration 800 of 1000: loss=1.22 " + "l1=0" + "l2=1.22 f=-0.428 shape=(1, 9000, 1)
logits [[ 0.30033705  0.55706626  0.5467587  -3.1167092 ]]
Iteration 900 of 1000: loss=1.13 " + "l1=0.00853" + "l2=1.13 f=-0.425 shape=(1, 9000, 1)
logits [[ 0.2337752   0.53019756  0.5412042  -3.0037994 ]]
--- 267.9823763370514 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0064 " + "l1=0.0064" + "l2=0 f=-0.36 shape=(1, 9000, 1)
logits [[ 4.339214  -3.1878815  3.698916  -6.291173 ]]
Iteration 100 of 1000: loss=0.00609 " + "l1=0.00582" + "l2=0.000262 f=-0.362 shape=(1, 9000, 1)
logits [[ 4.3105206 -3.2104445  3.7281606 -6.274551 ]]
Iteration 200 of 1000: loss=0.00599 " + "l1=0.00574" + "l2=0.000252 f=-0.362 shape=(1, 9000, 1)
logits [[ 4.3080506 -3.2146678  3.7339852 -6.2756267]]
Iteration 300 of 1000: loss=0.00594 " + "l1=0.00563" + "l2=0.000309 f=-0.363 shape=(1, 9000, 1)
logits [[ 4.304077  -3.2202718  3.7411256 -6.275697 ]]
Iteration 400 of 1000: loss=0.00589 " + "l1=0.00552" + "l2=0.000367 f=-0.363 shape=(1, 9000, 1)
logits [[ 4.300407  -3.226217   3.7482896 -6.27587  ]]
Iteration 500 of 1000: loss=0.00586 " + "l1=0.00541" + "l2=0.000454 f=-0.364 shape=(1, 9000, 1)
logits [[ 4.296769  -3.2323427  3.7557976 -6.276513 ]]
Iteration 600 of 1000: loss=0.00581 " + "l1=0.00531" + "l2=0.000508 f=-0.365 shape=(1, 9000, 1)
logits [[ 4.2932663 -3.2379005  3.762664  -6.277001 ]]
Iteration 700 of 1000: loss=0.0058 " + "l1=0.0052" + "l2=0.000597 f=-0.365 shape=(1, 9000, 1)
logits [[ 4.289864  -3.2432556  3.7694252 -6.277706 ]]
Iteration 800 of 1000: loss=0.00584 " + "l1=0.00511" + "l2=0.000733 f=-0.366 shape=(1, 9000, 1)
logits [[ 4.286733  -3.2482595  3.775714  -6.278313 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.064 " + "l1=0.064" + "l2=0 f=-0.36 shape=(1, 9000, 1)
logits [[ 4.339214  -3.1878815  3.698916  -6.291173 ]]
Iteration 100 of 1000: loss=0.0332 " + "l1=0.0151" + "l2=0.0181 f=-0.382 shape=(1, 9000, 1)
logits [[ 4.0757594 -3.3585927  3.9243932 -6.1687493]]
Iteration 200 of 1000: loss=0.023 " + "l1=0.000902" + "l2=0.0221 f=-0.391 shape=(1, 9000, 1)
logits [[ 3.9921446 -3.4120877  3.9831223 -6.1284995]]
Iteration 300 of 1000: loss=0.0174 " + "l1=0" + "l2=0.0174 f=-0.393 shape=(1, 9000, 1)
logits [[ 3.9938202 -3.4274414  3.9967613 -6.1353917]]
Iteration 400 of 1000: loss=0.0145 " + "l1=0" + "l2=0.0145 f=-0.393 shape=(1, 9000, 1)
logits [[ 3.9996986 -3.4354672  4.0010476 -6.137289 ]]
Iteration 500 of 1000: loss=0.0126 " + "l1=2.91e-05" + "l2=0.0126 f=-0.393 shape=(1, 9000, 1)
logits [[ 4.004012  -3.4413383  4.003721  -6.1375446]]
Iteration 600 of 1000: loss=0.0115 " + "l1=0" + "l2=0.0115 f=-0.393 shape=(1, 9000, 1)
logits [[ 4.0045753 -3.4479141  4.009167  -6.137839 ]]
Iteration 700 of 1000: loss=0.0102 " + "l1=0" + "l2=0.0102 f=-0.393 shape=(1, 9000, 1)
logits [[ 4.0118775 -3.4534817  4.012808  -6.1427345]]
Iteration 800 of 1000: loss=0.00964 " + "l1=0" + "l2=0.00964 f=-0.393 shape=(1, 9000, 1)
logits [[ 4.013049  -3.4573967  4.016463  -6.143296 ]]
Iteration 900 of 1000: loss=0.00911 " + "l1=5.76e-05" + "l2=0.00906 f=-0.392 shape=(1, 9000, 1)
logits [[ 4.017611  -3.4582286  4.0170355 -6.145946 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0352 " + "l1=0.0352" + "l2=0 f=-0.36 shape=(1, 9000, 1)
logits [[ 4.339214  -3.1878815  3.698916  -6.291173 ]]
Iteration 100 of 1000: loss=0.026 " + "l1=0.0204" + "l2=0.00564 f=-0.369 shape=(1, 9000, 1)
logits [[ 4.199815  -3.2844687  3.8298113 -6.221116 ]]
Iteration 200 of 1000: loss=0.0225 " + "l1=0.0155" + "l2=0.00695 f=-0.375 shape=(1, 9000, 1)
logits [[ 4.1568933 -3.3191407  3.8742073 -6.213495 ]]
Iteration 300 of 1000: loss=0.0198 " + "l1=0.0117" + "l2=0.0082 f=-0.38 shape=(1, 9000, 1)
logits [[ 4.121739  -3.347388   3.9098728 -6.203544 ]]
Iteration 400 of 1000: loss=0.0174 " + "l1=0.00823" + "l2=0.00922 f=-0.385 shape=(1, 9000, 1)
logits [[ 4.089458 -3.374472  3.939881 -6.192973]]
Iteration 500 of 1000: loss=0.0154 " + "l1=0.00536" + "l2=0.01 f=-0.388 shape=(1, 9000, 1)
logits [[ 4.0618114 -3.3978472  3.9643698 -6.181224 ]]
Iteration 600 of 1000: loss=0.0136 " + "l1=0.00306" + "l2=0.0106 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.0387535 -3.4174001  3.983091  -6.167107 ]]
Iteration 700 of 1000: loss=0.0121 " + "l1=0.000961" + "l2=0.0112 f=-0.392 shape=(1, 9000, 1)
logits [[ 4.0173783 -3.435069   3.999904  -6.151489 ]]
Iteration 800 of 1000: loss=0.0108 " + "l1=0.000307" + "l2=0.0105 f=-0.393 shape=(1, 9000, 1)
logits [[ 4.013729  -3.4449077  4.0081515 -6.148048 ]]
Iteration 900 of 1000: loss=0.0098 " + "l1=0.000597" + "l2=0.00921 f=-0.392 shape=(1, 9000, 1)
logits [[ 4.0218525 -3.449781   4.010993  -6.1523037]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0208 " + "l1=0.0208" + "l2=0 f=-0.36 shape=(1, 9000, 1)
logits [[ 4.339214  -3.1878815  3.698916  -6.291173 ]]
Iteration 100 of 1000: loss=0.0176 " + "l1=0.0156" + "l2=0.002 f=-0.365 shape=(1, 9000, 1)
logits [[ 4.257815  -3.2475033  3.7786145 -6.2470355]]
Iteration 200 of 1000: loss=0.0165 " + "l1=0.0141" + "l2=0.00244 f=-0.367 shape=(1, 9000, 1)
logits [[ 4.2372785 -3.267023   3.8042483 -6.241734 ]]
Iteration 300 of 1000: loss=0.0154 " + "l1=0.0124" + "l2=0.00306 f=-0.371 shape=(1, 9000, 1)
logits [[ 4.2136836 -3.2878888  3.833422  -6.2418222]]
Iteration 400 of 1000: loss=0.0145 " + "l1=0.0111" + "l2=0.00333 f=-0.374 shape=(1, 9000, 1)
logits [[ 4.196522  -3.3051083  3.85402   -6.240187 ]]
Iteration 500 of 1000: loss=0.0137 " + "l1=0.00996" + "l2=0.00374 f=-0.376 shape=(1, 9000, 1)
logits [[ 4.1802254 -3.3208928  3.8736198 -6.238404 ]]
Iteration 600 of 1000: loss=0.013 " + "l1=0.00892" + "l2=0.0041 f=-0.379 shape=(1, 9000, 1)
logits [[ 4.1658344 -3.335749   3.8912792 -6.23594  ]]
Iteration 700 of 1000: loss=0.0124 " + "l1=0.00803" + "l2=0.00439 f=-0.38 shape=(1, 9000, 1)
logits [[ 4.15343   -3.3487697  3.9062018 -6.232202 ]]
Iteration 800 of 1000: loss=0.0118 " + "l1=0.00713" + "l2=0.0047 f=-0.383 shape=(1, 9000, 1)
logits [[ 4.140993  -3.3633347  3.9216967 -6.2295327]]
Iteration 900 of 1000: loss=0.0113 " + "l1=0.00633" + "l2=0.00492 f=-0.384 shape=(1, 9000, 1)
logits [[ 4.129333  -3.374853   3.9345722 -6.2255135]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.028 " + "l1=0.028" + "l2=0 f=-0.36 shape=(1, 9000, 1)
logits [[ 4.339214  -3.1878815  3.698916  -6.291173 ]]
Iteration 100 of 1000: loss=0.0222 " + "l1=0.0186" + "l2=0.00356 f=-0.367 shape=(1, 9000, 1)
logits [[ 4.2297926 -3.2665937  3.8039286 -6.2333617]]
Iteration 200 of 1000: loss=0.02 " + "l1=0.0152" + "l2=0.00472 f=-0.372 shape=(1, 9000, 1)
logits [[ 4.1936827 -3.2964327  3.8453295 -6.2304797]]
Iteration 300 of 1000: loss=0.0181 " + "l1=0.0129" + "l2=0.00528 f=-0.376 shape=(1, 9000, 1)
logits [[ 4.1676226 -3.3192236  3.873547  -6.224642 ]]
Iteration 400 of 1000: loss=0.0167 " + "l1=0.0108" + "l2=0.00585 f=-0.379 shape=(1, 9000, 1)
logits [[ 4.1458683 -3.3398483  3.8989844 -6.2198596]]
Iteration 500 of 1000: loss=0.0153 " + "l1=0.0088" + "l2=0.00647 f=-0.382 shape=(1, 9000, 1)
logits [[ 4.1238956 -3.3615627  3.92275   -6.2139287]]
Iteration 600 of 1000: loss=0.0141 " + "l1=0.00699" + "l2=0.00712 f=-0.385 shape=(1, 9000, 1)
logits [[ 4.1028714 -3.3802643  3.943088  -6.20648  ]]
Iteration 700 of 1000: loss=0.013 " + "l1=0.0054" + "l2=0.00763 f=-0.388 shape=(1, 9000, 1)
logits [[ 4.084208  -3.3966095  3.960824  -6.198446 ]]
Iteration 800 of 1000: loss=0.012 " + "l1=0.00409" + "l2=0.00791 f=-0.389 shape=(1, 9000, 1)
logits [[ 4.067975  -3.4102876  3.9743762 -6.188388 ]]
Iteration 900 of 1000: loss=0.0111 " + "l1=0.00291" + "l2=0.00822 f=-0.39 shape=(1, 9000, 1)
logits [[ 4.053309  -3.4228508  3.9869056 -6.1785316]]
--- 275.8159921169281 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.106 " + "l1=0.106" + "l2=0 f=-0.36 shape=(1, 9000, 1)
logits [[ 4.339214  -3.1878815  3.698916  -6.291173 ]]
Iteration 100 of 1000: loss=0.105 " + "l1=0.105" + "l2=0.000692 f=-0.356 shape=(1, 9000, 1)
logits [[ 4.264953  -3.1567893  3.6626842 -6.1943297]]
Iteration 200 of 1000: loss=0.105 " + "l1=0.104" + "l2=0.000801 f=-0.355 shape=(1, 9000, 1)
logits [[ 4.2501817 -3.1488628  3.653944  -6.174791 ]]
Iteration 300 of 1000: loss=0.105 " + "l1=0.104" + "l2=0.000973 f=-0.354 shape=(1, 9000, 1)
logits [[ 4.2353907 -3.1413298  3.645051  -6.154741 ]]
Iteration 400 of 1000: loss=0.105 " + "l1=0.104" + "l2=0.00114 f=-0.353 shape=(1, 9000, 1)
logits [[ 4.222476  -3.1348584  3.6369061 -6.1368413]]
Iteration 500 of 1000: loss=0.105 " + "l1=0.103" + "l2=0.00134 f=-0.352 shape=(1, 9000, 1)
logits [[ 4.2112584 -3.1293988  3.6298425 -6.120996 ]]
Iteration 600 of 1000: loss=0.105 " + "l1=0.103" + "l2=0.00145 f=-0.352 shape=(1, 9000, 1)
logits [[ 4.200775  -3.123841   3.6229427 -6.1059775]]
Iteration 700 of 1000: loss=0.104 " + "l1=0.103" + "l2=0.00163 f=-0.351 shape=(1, 9000, 1)
logits [[ 4.190926  -3.1188118  3.616576  -6.091921 ]]
Iteration 800 of 1000: loss=0.104 " + "l1=0.103" + "l2=0.00178 f=-0.35 shape=(1, 9000, 1)
logits [[ 4.1820717 -3.1144912  3.6109204 -6.079175 ]]
Iteration 900 of 1000: loss=0.104 " + "l1=0.102" + "l2=0.00189 f=-0.35 shape=(1, 9000, 1)
logits [[ 4.173791  -3.1102862  3.605884  -6.0675864]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.06 " + "l1=1.06" + "l2=0 f=-0.36 shape=(1, 9000, 1)
logits [[ 4.339214  -3.1878815  3.698916  -6.291173 ]]
Iteration 100 of 1000: loss=0.954 " + "l1=0.879" + "l2=0.0745 f=-0.325 shape=(1, 9000, 1)
logits [[ 3.5140195 -2.8565483  3.3212955 -5.2772536]]
Iteration 200 of 1000: loss=0.916 " + "l1=0.818" + "l2=0.0973 f=-0.318 shape=(1, 9000, 1)
logits [[ 3.2526658 -2.7950041  3.2015135 -4.9314995]]
Iteration 300 of 1000: loss=0.885 " + "l1=0.775" + "l2=0.11 f=-0.309 shape=(1, 9000, 1)
logits [[ 3.0827036 -2.7214046  3.0741613 -4.6703897]]
Iteration 400 of 1000: loss=0.853 " + "l1=0.734" + "l2=0.119 f=-0.293 shape=(1, 9000, 1)
logits [[ 2.931581  -2.629136   2.9287488 -4.405057 ]]
Iteration 500 of 1000: loss=0.822 " + "l1=0.695" + "l2=0.127 f=-0.28 shape=(1, 9000, 1)
logits [[ 2.7894704 -2.53539    2.7873123 -4.1601653]]
Iteration 600 of 1000: loss=0.795 " + "l1=0.663" + "l2=0.132 f=-0.274 shape=(1, 9000, 1)
logits [[ 2.653411  -2.4429758  2.6624458 -3.9679084]]
Iteration 700 of 1000: loss=0.776 " + "l1=0.64" + "l2=0.136 f=-0.267 shape=(1, 9000, 1)
logits [[ 2.5600145 -2.3591635  2.5643456 -3.8319514]]
Iteration 800 of 1000: loss=0.758 " + "l1=0.615" + "l2=0.143 f=-0.255 shape=(1, 9000, 1)
logits [[ 2.4704888 -2.2878215  2.4714618 -3.6738236]]
Iteration 900 of 1000: loss=0.738 " + "l1=0.587" + "l2=0.151 f=-0.248 shape=(1, 9000, 1)
logits [[ 2.3488507 -2.233332   2.3824446 -3.4882283]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.6 " + "l1=10.6" + "l2=0 f=-0.36 shape=(1, 9000, 1)
logits [[ 4.339214  -3.1878815  3.698916  -6.291173 ]]
Iteration 100 of 1000: loss=4.19 " + "l1=1.17" + "l2=3.02 f=-0.142 shape=(1, 9000, 1)
logits [[ 0.2520564 -1.1842352  0.7665663 -0.4025707]]
Iteration 200 of 1000: loss=2.58 " + "l1=0.00818" + "l2=2.57 f=-0.177 shape=(1, 9000, 1)
logits [[-0.36144972 -0.7540667   0.20753881  0.19936317]]
Iteration 300 of 1000: loss=2.26 " + "l1=0.0151" + "l2=2.24 f=-0.179 shape=(1, 9000, 1)
logits [[-0.33661056 -0.75554234  0.195907    0.1808469 ]]
Iteration 400 of 1000: loss=2.09 " + "l1=0" + "l2=2.09 f=-0.182 shape=(1, 9000, 1)
logits [[-0.34340438 -0.7565043   0.1777499   0.19353247]]
Iteration 500 of 1000: loss=2.02 " + "l1=0.0906" + "l2=1.93 f=-0.182 shape=(1, 9000, 1)
logits [[-0.29979104 -0.7638289   0.21304893  0.12249366]]
Iteration 600 of 1000: loss=1.89 " + "l1=0.00473" + "l2=1.89 f=-0.178 shape=(1, 9000, 1)
logits [[-0.32639965 -0.7599579   0.18863545  0.18390444]]
Iteration 700 of 1000: loss=1.84 " + "l1=0" + "l2=1.84 f=-0.177 shape=(1, 9000, 1)
logits [[-0.32721633 -0.7589033   0.17978008  0.19864869]]
Iteration 800 of 1000: loss=1.78 " + "l1=0" + "l2=1.78 f=-0.176 shape=(1, 9000, 1)
logits [[-0.31924626 -0.76299906  0.17752427  0.20228168]]
Iteration 900 of 1000: loss=1.73 " + "l1=0.0372" + "l2=1.7 f=-0.174 shape=(1, 9000, 1)
logits [[-0.28494522 -0.777266    0.20257552  0.16541508]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.85 " + "l1=5.85" + "l2=0 f=-0.36 shape=(1, 9000, 1)
logits [[ 4.339214  -3.1878815  3.698916  -6.291173 ]]
Iteration 100 of 1000: loss=3.37 " + "l1=2.23" + "l2=1.14 f=-0.211 shape=(1, 9000, 1)
logits [[ 1.5990143 -1.8339888  1.7217027 -2.3291447]]
Iteration 200 of 1000: loss=2.7 " + "l1=1.22" + "l2=1.48 f=-0.156 shape=(1, 9000, 1)
logits [[ 0.78912824 -1.3630174   1.080921   -1.130709  ]]
Iteration 300 of 1000: loss=2.12 " + "l1=0.368" + "l2=1.75 f=-0.168 shape=(1, 9000, 1)
logits [[ 0.04702746 -0.96492666  0.45677492 -0.21249068]]
Iteration 400 of 1000: loss=1.76 " + "l1=0.0488" + "l2=1.71 f=-0.189 shape=(1, 9000, 1)
logits [[-0.2772972  -0.773732    0.19221908  0.10355973]]
Iteration 500 of 1000: loss=1.55 " + "l1=0.00514" + "l2=1.55 f=-0.197 shape=(1, 9000, 1)
logits [[-0.3400311  -0.74893004  0.15592578  0.14657581]]
Iteration 600 of 1000: loss=1.4 " + "l1=0.00887" + "l2=1.39 f=-0.198 shape=(1, 9000, 1)
logits [[-0.35273105 -0.7739526   0.17522031  0.15909517]]
Iteration 700 of 1000: loss=1.28 " + "l1=0.0257" + "l2=1.26 f=-0.204 shape=(1, 9000, 1)
logits [[-0.3622506  -0.8239674   0.20764989  0.16099924]]
Iteration 800 of 1000: loss=1.19 " + "l1=0.0138" + "l2=1.17 f=-0.206 shape=(1, 9000, 1)
logits [[-0.37961397 -0.8829135   0.2319018   0.20676252]]
Iteration 900 of 1000: loss=1.1 " + "l1=0.00144" + "l2=1.1 f=-0.207 shape=(1, 9000, 1)
logits [[-0.39176902 -0.9341232   0.2500358   0.24741521]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.45 " + "l1=3.45" + "l2=0 f=-0.36 shape=(1, 9000, 1)
logits [[ 4.339214  -3.1878815  3.698916  -6.291173 ]]
Iteration 100 of 1000: loss=2.44 " + "l1=1.94" + "l2=0.5 f=-0.259 shape=(1, 9000, 1)
logits [[ 2.391803  -2.2402298  2.396496  -3.5844452]]
Iteration 200 of 1000: loss=2.15 " + "l1=1.55" + "l2=0.6 f=-0.234 shape=(1, 9000, 1)
logits [[ 1.9122752 -1.9228953  1.9169192 -2.840362 ]]
Iteration 300 of 1000: loss=1.89 " + "l1=1.18" + "l2=0.71 f=-0.203 shape=(1, 9000, 1)
logits [[ 1.4203659 -1.6751758  1.5399568 -2.0977752]]
Iteration 400 of 1000: loss=1.67 " + "l1=0.905" + "l2=0.769 f=-0.192 shape=(1, 9000, 1)
logits [[ 0.9982517 -1.4926711  1.2557054 -1.528714 ]]
Iteration 500 of 1000: loss=1.47 " + "l1=0.596" + "l2=0.877 f=-0.184 shape=(1, 9000, 1)
logits [[ 0.52923864 -1.3473891   0.9574928  -0.8748263 ]]
Iteration 600 of 1000: loss=1.34 " + "l1=0.439" + "l2=0.903 f=-0.184 shape=(1, 9000, 1)
logits [[ 0.28516537 -1.2209828   0.77477384 -0.57616895]]
Iteration 700 of 1000: loss=1.2 " + "l1=0.247" + "l2=0.953 f=-0.196 shape=(1, 9000, 1)
logits [[-0.06093197 -1.078628    0.55826694 -0.2018395 ]]
Iteration 800 of 1000: loss=1.06 " + "l1=0.113" + "l2=0.95 f=-0.214 shape=(1, 9000, 1)
logits [[-0.27821794 -1.0200614   0.3952725   0.0460782 ]]
Iteration 900 of 1000: loss=0.936 " + "l1=0.00965" + "l2=0.926 f=-0.232 shape=(1, 9000, 1)
logits [[-0.46571293 -0.9599289   0.2644588   0.23477119]]
--- 285.65209460258484 seconds ---
Adv result:3
Loading record A03605
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0839 " + "l1=0.0839" + "l2=0 f=-0.567 shape=(1, 9000, 1)
logits [[ 5.0325823 -3.3532596  3.0272927 -6.975376 ]]
Iteration 100 of 1000: loss=0.0832 " + "l1=0.0829" + "l2=0.000345 f=-0.564 shape=(1, 9000, 1)
logits [[ 4.9759245 -3.3131912  2.9969037 -6.9173975]]
Iteration 200 of 1000: loss=0.083 " + "l1=0.0826" + "l2=0.000392 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.9631824 -3.3000066  2.9884682 -6.90376  ]]
Iteration 300 of 1000: loss=0.0829 " + "l1=0.0823" + "l2=0.000531 f=-0.562 shape=(1, 9000, 1)
logits [[ 4.948272  -3.2866738  2.9796662 -6.887921 ]]
Iteration 400 of 1000: loss=0.0828 " + "l1=0.0821" + "l2=0.000686 f=-0.56 shape=(1, 9000, 1)
logits [[ 4.934215  -3.2743287  2.9716377 -6.873144 ]]
Iteration 500 of 1000: loss=0.0827 " + "l1=0.0819" + "l2=0.00081 f=-0.559 shape=(1, 9000, 1)
logits [[ 4.9221387 -3.264517   2.9652493 -6.8608513]]
Iteration 600 of 1000: loss=0.0827 " + "l1=0.0817" + "l2=0.000988 f=-0.559 shape=(1, 9000, 1)
logits [[ 4.912041  -3.2565022  2.960025  -6.8509164]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.839 " + "l1=0.839" + "l2=0 f=-0.567 shape=(1, 9000, 1)
logits [[ 5.0325823 -3.3532596  3.0272927 -6.975376 ]]
Iteration 100 of 1000: loss=0.786 " + "l1=0.764" + "l2=0.0223 f=-0.546 shape=(1, 9000, 1)
logits [[ 4.5932856 -3.044974   2.7957518 -6.527262 ]]
Iteration 200 of 1000: loss=0.759 " + "l1=0.723" + "l2=0.0352 f=-0.526 shape=(1, 9000, 1)
logits [[ 4.352181  -2.8811328  2.6882842 -6.2623715]]
Iteration 300 of 1000: loss=0.742 " + "l1=0.695" + "l2=0.047 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.1703644 -2.781585   2.627913  -6.0658426]]
Iteration 400 of 1000: loss=0.732 " + "l1=0.676" + "l2=0.0568 f=-0.505 shape=(1, 9000, 1)
logits [[ 4.032288  -2.723251   2.590127  -5.9204173]]
Iteration 500 of 1000: loss=0.725 " + "l1=0.66" + "l2=0.0652 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.9214873 -2.6772346  2.567298  -5.8079944]]
Iteration 600 of 1000: loss=0.718 " + "l1=0.648" + "l2=0.0706 f=-0.496 shape=(1, 9000, 1)
logits [[ 3.8341084 -2.6421728  2.5437093 -5.718222 ]]
Iteration 700 of 1000: loss=0.712 " + "l1=0.637" + "l2=0.075 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.7568035 -2.6138487  2.520098  -5.6346855]]
Iteration 800 of 1000: loss=0.705 " + "l1=0.627" + "l2=0.0785 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.6793191 -2.5888193  2.4983897 -5.549392 ]]
Iteration 900 of 1000: loss=0.698 " + "l1=0.615" + "l2=0.0821 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.596409  -2.5583117  2.4677877 -5.458316 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.39 " + "l1=8.39" + "l2=0 f=-0.567 shape=(1, 9000, 1)
logits [[ 5.0325823 -3.3532596  3.0272927 -6.975376 ]]
Iteration 100 of 1000: loss=4.63 " + "l1=3.16" + "l2=1.47 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.7136664 -1.4357461  1.7264926 -3.6123736]]
Iteration 200 of 1000: loss=3.79 " + "l1=2.37" + "l2=1.42 f=-0.398 shape=(1, 9000, 1)
logits [[ 1.3121507 -1.0578574  1.3080347 -3.1533148]]
Iteration 300 of 1000: loss=3.28 " + "l1=1.83" + "l2=1.45 f=-0.39 shape=(1, 9000, 1)
logits [[ 1.0033222 -0.8165699  1.0100383 -2.7561975]]
Iteration 400 of 1000: loss=2.83 " + "l1=1.23" + "l2=1.6 f=-0.379 shape=(1, 9000, 1)
logits [[ 0.6437291  -0.5862108   0.64328027 -2.2168028 ]]
Iteration 500 of 1000: loss=2.39 " + "l1=0.722" + "l2=1.67 f=-0.368 shape=(1, 9000, 1)
logits [[ 0.27575436 -0.37624484  0.34551582 -1.7170238 ]]
Iteration 600 of 1000: loss=2.1 " + "l1=0.434" + "l2=1.66 f=-0.36 shape=(1, 9000, 1)
logits [[ 0.12079363 -0.24407397  0.19033428 -1.5066373 ]]
Iteration 700 of 1000: loss=1.84 " + "l1=0.173" + "l2=1.66 f=-0.365 shape=(1, 9000, 1)
logits [[-0.07500643 -0.10223749  0.07104438 -1.3529942 ]]
Iteration 800 of 1000: loss=1.64 " + "l1=0" + "l2=1.64 f=-0.367 shape=(1, 9000, 1)
logits [[-0.3695081  -0.03566418 -0.03675876 -1.0270643 ]]
Iteration 900 of 1000: loss=1.51 " + "l1=0.00458" + "l2=1.5 f=-0.359 shape=(1, 9000, 1)
logits [[-0.39021406 -0.07040229 -0.06582125 -0.9110847 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.61 " + "l1=4.61" + "l2=0 f=-0.567 shape=(1, 9000, 1)
logits [[ 5.0325823 -3.3532596  3.0272927 -6.975376 ]]
Iteration 100 of 1000: loss=3.3 " + "l1=2.62" + "l2=0.671 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.7255352 -2.046719   2.1273167 -4.5493746]]
Iteration 200 of 1000: loss=2.67 " + "l1=1.89" + "l2=0.784 f=-0.415 shape=(1, 9000, 1)
logits [[ 1.8384604 -1.5963659  1.8376867 -3.7379982]]
Iteration 300 of 1000: loss=2.43 " + "l1=1.64" + "l2=0.782 f=-0.407 shape=(1, 9000, 1)
logits [[ 1.6005473 -1.3867307  1.6038613 -3.4445176]]
Iteration 400 of 1000: loss=2.27 " + "l1=1.41" + "l2=0.856 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.3503923 -1.1980922  1.3700352 -3.1214616]]
Iteration 500 of 1000: loss=2.14 " + "l1=1.25" + "l2=0.889 f=-0.393 shape=(1, 9000, 1)
logits [[ 1.1839348 -1.0823773  1.1952859 -2.8670805]]
Iteration 600 of 1000: loss=2.02 " + "l1=1.07" + "l2=0.946 f=-0.391 shape=(1, 9000, 1)
logits [[ 0.9859344  -0.95880264  0.98620045 -2.5761247 ]]
Iteration 700 of 1000: loss=1.86 " + "l1=0.871" + "l2=0.986 f=-0.383 shape=(1, 9000, 1)
logits [[ 0.7539562  -0.82256025  0.7606634  -2.2250576 ]]
Iteration 800 of 1000: loss=1.7 " + "l1=0.733" + "l2=0.97 f=-0.368 shape=(1, 9000, 1)
logits [[ 0.60875094 -0.7194725   0.613475   -1.9743863 ]]
Iteration 900 of 1000: loss=1.55 " + "l1=0.571" + "l2=0.982 f=-0.349 shape=(1, 9000, 1)
logits [[ 0.4254401  -0.60122794  0.43686086 -1.6566672 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=6.5 " + "l1=6.5" + "l2=0 f=-0.567 shape=(1, 9000, 1)
logits [[ 5.0325823 -3.3532596  3.0272927 -6.975376 ]]
Iteration 100 of 1000: loss=3.97 " + "l1=2.78" + "l2=1.19 f=-0.411 shape=(1, 9000, 1)
logits [[ 1.9185853 -1.6642679  1.8988259 -3.7980728]]
Iteration 200 of 1000: loss=3.3 " + "l1=2.19" + "l2=1.1 f=-0.395 shape=(1, 9000, 1)
logits [[ 1.5456034 -1.2857352  1.5456078 -3.3870318]]
Iteration 300 of 1000: loss=2.92 " + "l1=1.82" + "l2=1.11 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.2684052 -1.064673   1.2818561 -3.0857782]]
Iteration 400 of 1000: loss=2.64 " + "l1=1.45" + "l2=1.18 f=-0.384 shape=(1, 9000, 1)
logits [[ 1.0015209 -0.858199   1.0147814 -2.6947906]]
Iteration 500 of 1000: loss=2.35 " + "l1=1.01" + "l2=1.34 f=-0.372 shape=(1, 9000, 1)
logits [[ 0.6576884  -0.6492051   0.65412486 -2.1489768 ]]
Iteration 600 of 1000: loss=2.1 " + "l1=0.715" + "l2=1.39 f=-0.359 shape=(1, 9000, 1)
logits [[ 0.41546282 -0.47089797  0.4512339  -1.831981  ]]
Iteration 700 of 1000: loss=1.88 " + "l1=0.474" + "l2=1.41 f=-0.346 shape=(1, 9000, 1)
logits [[ 0.23770091 -0.322093    0.28943726 -1.5905097 ]]
Iteration 800 of 1000: loss=1.7 " + "l1=0.352" + "l2=1.35 f=-0.338 shape=(1, 9000, 1)
logits [[ 0.18201493 -0.2653903   0.18927771 -1.4592112 ]]
Iteration 900 of 1000: loss=1.57 " + "l1=0.264" + "l2=1.31 f=-0.332 shape=(1, 9000, 1)
logits [[ 0.10280193 -0.23415218  0.10653575 -1.3015022 ]]
--- 268.76171112060547 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0201 " + "l1=0.0201" + "l2=0 f=-0.567 shape=(1, 9000, 1)
logits [[ 5.0325823 -3.3532596  3.0272927 -6.975376 ]]
Iteration 100 of 1000: loss=0.0198 " + "l1=0.0196" + "l2=0.000192 f=-0.569 shape=(1, 9000, 1)
logits [[ 4.997554  -3.3600104  3.0368154 -6.948432 ]]
Iteration 200 of 1000: loss=0.0197 " + "l1=0.0195" + "l2=0.000172 f=-0.569 shape=(1, 9000, 1)
logits [[ 4.993662  -3.361224   3.0389361 -6.9460406]]
Iteration 300 of 1000: loss=0.0197 " + "l1=0.0195" + "l2=0.000208 f=-0.569 shape=(1, 9000, 1)
logits [[ 4.9872346 -3.3626642  3.0417712 -6.9419146]]
Iteration 400 of 1000: loss=0.0196 " + "l1=0.0194" + "l2=0.000281 f=-0.569 shape=(1, 9000, 1)
logits [[ 4.980723  -3.3642206  3.0445685 -6.9376388]]
Iteration 500 of 1000: loss=0.0196 " + "l1=0.0193" + "l2=0.000357 f=-0.569 shape=(1, 9000, 1)
logits [[ 4.974289  -3.3659103  3.047404  -6.9334188]]
Iteration 600 of 1000: loss=0.0196 " + "l1=0.0192" + "l2=0.000465 f=-0.57 shape=(1, 9000, 1)
logits [[ 4.9681687 -3.3676271  3.0500383 -6.929389 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.201 " + "l1=0.201" + "l2=0 f=-0.567 shape=(1, 9000, 1)
logits [[ 5.0325823 -3.3532596  3.0272927 -6.975376 ]]
Iteration 100 of 1000: loss=0.179 " + "l1=0.169" + "l2=0.00977 f=-0.575 shape=(1, 9000, 1)
logits [[ 4.793506  -3.4047136  3.1061935 -6.796589 ]]
Iteration 200 of 1000: loss=0.164 " + "l1=0.148" + "l2=0.0164 f=-0.579 shape=(1, 9000, 1)
logits [[ 4.647474  -3.4439383  3.1672165 -6.687969 ]]
Iteration 300 of 1000: loss=0.155 " + "l1=0.133" + "l2=0.0218 f=-0.583 shape=(1, 9000, 1)
logits [[ 4.5331483 -3.4785082  3.2056997 -6.594158 ]]
Iteration 400 of 1000: loss=0.147 " + "l1=0.122" + "l2=0.0251 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.4484477 -3.5083055  3.2260783 -6.522245 ]]
Iteration 500 of 1000: loss=0.142 " + "l1=0.113" + "l2=0.0282 f=-0.592 shape=(1, 9000, 1)
logits [[ 4.3729744 -3.527614   3.2382612 -6.451334 ]]
Iteration 600 of 1000: loss=0.137 " + "l1=0.106" + "l2=0.0304 f=-0.594 shape=(1, 9000, 1)
logits [[ 4.310215  -3.5422873  3.2471852 -6.391465 ]]
Iteration 700 of 1000: loss=0.133 " + "l1=0.101" + "l2=0.0321 f=-0.596 shape=(1, 9000, 1)
logits [[ 4.25788   -3.554267   3.2524412 -6.3393955]]
Iteration 800 of 1000: loss=0.129 " + "l1=0.0956" + "l2=0.0333 f=-0.598 shape=(1, 9000, 1)
logits [[ 4.2130156 -3.5654378  3.256771  -6.2957335]]
Iteration 900 of 1000: loss=0.126 " + "l1=0.0912" + "l2=0.0346 f=-0.601 shape=(1, 9000, 1)
logits [[ 4.1749578 -3.5778458  3.2626405 -6.2625604]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.01 " + "l1=2.01" + "l2=0 f=-0.567 shape=(1, 9000, 1)
logits [[ 5.0325823 -3.3532596  3.0272927 -6.975376 ]]
Iteration 100 of 1000: loss=0.448 " + "l1=0" + "l2=0.448 f=-0.595 shape=(1, 9000, 1)
logits [[ 3.3382912 -3.6059706  3.347318  -5.4612265]]
Iteration 200 of 1000: loss=0.264 " + "l1=0" + "l2=0.264 f=-0.588 shape=(1, 9000, 1)
logits [[ 3.3529623 -3.6463637  3.3532174 -5.410496 ]]
Iteration 300 of 1000: loss=0.216 " + "l1=0" + "l2=0.216 f=-0.586 shape=(1, 9000, 1)
logits [[ 3.3537693 -3.655199   3.3541765 -5.3968472]]
Iteration 400 of 1000: loss=0.191 " + "l1=0" + "l2=0.191 f=-0.586 shape=(1, 9000, 1)
logits [[ 3.3413944 -3.6513846  3.3444521 -5.379709 ]]
Iteration 500 of 1000: loss=0.176 " + "l1=0" + "l2=0.176 f=-0.587 shape=(1, 9000, 1)
logits [[ 3.3286722 -3.652421   3.3395038 -5.3619413]]
Iteration 600 of 1000: loss=0.162 " + "l1=0" + "l2=0.162 f=-0.585 shape=(1, 9000, 1)
logits [[ 3.323471  -3.651059   3.3328943 -5.34518  ]]
Iteration 700 of 1000: loss=0.152 " + "l1=0" + "l2=0.152 f=-0.584 shape=(1, 9000, 1)
logits [[ 3.3212733 -3.648571   3.324391  -5.3333697]]
Iteration 800 of 1000: loss=0.145 " + "l1=0" + "l2=0.145 f=-0.584 shape=(1, 9000, 1)
logits [[ 3.316885  -3.6513216  3.3198488 -5.320903 ]]
Iteration 900 of 1000: loss=0.137 " + "l1=0" + "l2=0.137 f=-0.585 shape=(1, 9000, 1)
logits [[ 3.3147361 -3.6596603  3.3205628 -5.3144317]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.1 " + "l1=1.1" + "l2=0 f=-0.567 shape=(1, 9000, 1)
logits [[ 5.0325823 -3.3532596  3.0272927 -6.975376 ]]
Iteration 100 of 1000: loss=0.521 " + "l1=0.313" + "l2=0.208 f=-0.599 shape=(1, 9000, 1)
logits [[ 3.8794425 -3.5727942  3.310151  -6.011568 ]]
Iteration 200 of 1000: loss=0.287 " + "l1=0.00369" + "l2=0.283 f=-0.592 shape=(1, 9000, 1)
logits [[ 3.3599026 -3.6402745  3.3531995 -5.4426413]]
Iteration 300 of 1000: loss=0.218 " + "l1=0.00493" + "l2=0.213 f=-0.588 shape=(1, 9000, 1)
logits [[ 3.3593032 -3.655629   3.3503401 -5.40685  ]]
Iteration 400 of 1000: loss=0.186 " + "l1=0" + "l2=0.186 f=-0.588 shape=(1, 9000, 1)
logits [[ 3.3392518 -3.6531453  3.3409078 -5.3798857]]
Iteration 500 of 1000: loss=0.166 " + "l1=0.000814" + "l2=0.165 f=-0.587 shape=(1, 9000, 1)
logits [[ 3.333498  -3.6516109  3.332018  -5.3628674]]
Iteration 600 of 1000: loss=0.151 " + "l1=0.000465" + "l2=0.151 f=-0.588 shape=(1, 9000, 1)
logits [[ 3.3284898 -3.6544318  3.327645  -5.3522797]]
Iteration 700 of 1000: loss=0.14 " + "l1=0.000158" + "l2=0.14 f=-0.588 shape=(1, 9000, 1)
logits [[ 3.3239777 -3.6562028  3.3236911 -5.3424296]]
Iteration 800 of 1000: loss=0.134 " + "l1=0.00375" + "l2=0.13 f=-0.588 shape=(1, 9000, 1)
logits [[ 3.3317451 -3.6660128  3.3249297 -5.3419633]]
Iteration 900 of 1000: loss=0.124 " + "l1=0" + "l2=0.124 f=-0.588 shape=(1, 9000, 1)
logits [[ 3.3250291 -3.6790752  3.3299048 -5.3285413]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.652 " + "l1=0.652" + "l2=0 f=-0.567 shape=(1, 9000, 1)
logits [[ 5.0325823 -3.3532596  3.0272927 -6.975376 ]]
Iteration 100 of 1000: loss=0.42 " + "l1=0.334" + "l2=0.0857 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.2883887 -3.5192425  3.2591703 -6.3859434]]
Iteration 200 of 1000: loss=0.326 " + "l1=0.203" + "l2=0.123 f=-0.597 shape=(1, 9000, 1)
logits [[ 3.938931  -3.5953956  3.3150082 -6.047153 ]]
Iteration 300 of 1000: loss=0.264 " + "l1=0.105" + "l2=0.159 f=-0.6 shape=(1, 9000, 1)
logits [[ 3.6454928 -3.6234744  3.3223844 -5.743561 ]]
Iteration 400 of 1000: loss=0.209 " + "l1=0.0235" + "l2=0.185 f=-0.599 shape=(1, 9000, 1)
logits [[ 3.4094405 -3.6525693  3.3369842 -5.490834 ]]
Iteration 500 of 1000: loss=0.17 " + "l1=0.00198" + "l2=0.168 f=-0.597 shape=(1, 9000, 1)
logits [[ 3.3384852 -3.658895   3.33239   -5.3997984]]
Iteration 600 of 1000: loss=0.15 " + "l1=0.00014" + "l2=0.15 f=-0.596 shape=(1, 9000, 1)
logits [[ 3.3282788 -3.6601803  3.3278475 -5.380834 ]]
Iteration 700 of 1000: loss=0.137 " + "l1=0" + "l2=0.137 f=-0.595 shape=(1, 9000, 1)
logits [[ 3.3232744 -3.6619475  3.3240736 -5.363658 ]]
Iteration 800 of 1000: loss=0.127 " + "l1=0.00138" + "l2=0.126 f=-0.594 shape=(1, 9000, 1)
logits [[ 3.3285613 -3.6726296  3.3243175 -5.3552384]]
Iteration 900 of 1000: loss=0.118 " + "l1=0.000397" + "l2=0.117 f=-0.593 shape=(1, 9000, 1)
logits [[ 3.3278472 -3.6870275  3.3266249 -5.3392906]]
--- 267.6754696369171 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.12 " + "l1=0.12" + "l2=0 f=-0.567 shape=(1, 9000, 1)
logits [[ 5.0325823 -3.3532596  3.0272927 -6.975376 ]]
Iteration 100 of 1000: loss=0.119 " + "l1=0.118" + "l2=0.000599 f=-0.564 shape=(1, 9000, 1)
logits [[ 4.9523826 -3.3265486  2.9942324 -6.876915 ]]
Iteration 200 of 1000: loss=0.119 " + "l1=0.118" + "l2=0.000747 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.929688  -3.3181288  2.984927  -6.849708 ]]
Iteration 300 of 1000: loss=0.118 " + "l1=0.117" + "l2=0.000971 f=-0.562 shape=(1, 9000, 1)
logits [[ 4.9064546 -3.3093383  2.975631  -6.82173  ]]
Iteration 400 of 1000: loss=0.118 " + "l1=0.117" + "l2=0.00124 f=-0.561 shape=(1, 9000, 1)
logits [[ 4.8854485 -3.3015428  2.9675694 -6.7964716]]
Iteration 500 of 1000: loss=0.118 " + "l1=0.116" + "l2=0.0015 f=-0.56 shape=(1, 9000, 1)
logits [[ 4.866409  -3.2948701  2.960782  -6.7741265]]
Iteration 600 of 1000: loss=0.118 " + "l1=0.116" + "l2=0.00171 f=-0.56 shape=(1, 9000, 1)
logits [[ 4.8498116 -3.2894785  2.9551566 -6.754984 ]]
Iteration 700 of 1000: loss=0.118 " + "l1=0.116" + "l2=0.00189 f=-0.56 shape=(1, 9000, 1)
logits [[ 4.8368645 -3.286184   2.951067  -6.740234 ]]
Iteration 800 of 1000: loss=0.118 " + "l1=0.116" + "l2=0.00212 f=-0.56 shape=(1, 9000, 1)
logits [[ 4.824888  -3.2836032  2.9476404 -6.7269936]]
Iteration 900 of 1000: loss=0.118 " + "l1=0.115" + "l2=0.00225 f=-0.56 shape=(1, 9000, 1)
logits [[ 4.813907  -3.2813292  2.9446054 -6.7154393]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.2 " + "l1=1.2" + "l2=0 f=-0.567 shape=(1, 9000, 1)
logits [[ 5.0325823 -3.3532596  3.0272927 -6.975376 ]]
Iteration 100 of 1000: loss=1.1 " + "l1=1.05" + "l2=0.0481 f=-0.536 shape=(1, 9000, 1)
logits [[ 4.351548  -3.120963   2.7598143 -6.1324487]]
Iteration 200 of 1000: loss=1.04 " + "l1=0.961" + "l2=0.0761 f=-0.51 shape=(1, 9000, 1)
logits [[ 3.9630299 -2.9960127  2.6408086 -5.6490707]]
Iteration 300 of 1000: loss=0.997 " + "l1=0.893" + "l2=0.104 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.65933   -2.9255795  2.5563352 -5.268941 ]]
Iteration 400 of 1000: loss=0.966 " + "l1=0.838" + "l2=0.129 f=-0.486 shape=(1, 9000, 1)
logits [[ 3.4097733 -2.8738515  2.4896538 -4.9678497]]
Iteration 500 of 1000: loss=0.94 " + "l1=0.792" + "l2=0.148 f=-0.48 shape=(1, 9000, 1)
logits [[ 3.205052  -2.8354146  2.4261768 -4.714828 ]]
Iteration 600 of 1000: loss=0.911 " + "l1=0.743" + "l2=0.169 f=-0.475 shape=(1, 9000, 1)
logits [[ 2.9853888 -2.7831352  2.3393466 -4.442312 ]]
Iteration 700 of 1000: loss=0.883 " + "l1=0.694" + "l2=0.189 f=-0.467 shape=(1, 9000, 1)
logits [[ 2.7711587 -2.702252   2.2307754 -4.1658416]]
Iteration 800 of 1000: loss=0.858 " + "l1=0.655" + "l2=0.203 f=-0.456 shape=(1, 9000, 1)
logits [[ 2.6047752 -2.630172   2.143199  -3.9402497]]
Iteration 900 of 1000: loss=0.831 " + "l1=0.619" + "l2=0.212 f=-0.446 shape=(1, 9000, 1)
logits [[ 2.4555976 -2.5775902  2.0677333 -3.7314534]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12 " + "l1=12" + "l2=0 f=-0.567 shape=(1, 9000, 1)
logits [[ 5.0325823 -3.3532596  3.0272927 -6.975376 ]]
Iteration 100 of 1000: loss=5.44 " + "l1=3.32" + "l2=2.12 f=-0.267 shape=(1, 9000, 1)
logits [[ 1.400671  -1.9602231  1.4072068 -1.9147934]]
Iteration 200 of 1000: loss=3.09 " + "l1=0.432" + "l2=2.66 f=-0.14 shape=(1, 9000, 1)
logits [[ 0.12534636 -1.4712149   0.6080686   0.17627254]]
Iteration 300 of 1000: loss=1.96 " + "l1=0" + "l2=1.96 f=-0.149 shape=(1, 9000, 1)
logits [[-0.04524078 -1.3917117   0.4068436   0.43214124]]
Iteration 400 of 1000: loss=1.71 " + "l1=0.00678" + "l2=1.7 f=-0.155 shape=(1, 9000, 1)
logits [[-0.00327723 -1.3945688   0.39237505  0.38559788]]
Iteration 500 of 1000: loss=1.57 " + "l1=0" + "l2=1.57 f=-0.158 shape=(1, 9000, 1)
logits [[-0.00456815 -1.3870418   0.36753285  0.39159608]]
Iteration 600 of 1000: loss=1.47 " + "l1=0.021" + "l2=1.45 f=-0.169 shape=(1, 9000, 1)
logits [[ 0.03210198 -1.4126642   0.36322567  0.34221056]]
Iteration 700 of 1000: loss=1.37 " + "l1=0" + "l2=1.37 f=-0.175 shape=(1, 9000, 1)
logits [[ 0.02550784 -1.4284996   0.3518568   0.3530511 ]]
Iteration 800 of 1000: loss=1.29 " + "l1=0" + "l2=1.29 f=-0.18 shape=(1, 9000, 1)
logits [[ 0.01664039 -1.4512684   0.35608286  0.35729152]]
Iteration 900 of 1000: loss=1.23 " + "l1=0" + "l2=1.23 f=-0.179 shape=(1, 9000, 1)
logits [[-0.01297068 -1.4520992   0.3605063   0.389371  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.6 " + "l1=6.6" + "l2=0 f=-0.567 shape=(1, 9000, 1)
logits [[ 5.0325823 -3.3532596  3.0272927 -6.975376 ]]
Iteration 100 of 1000: loss=3.86 " + "l1=2.78" + "l2=1.07 f=-0.359 shape=(1, 9000, 1)
logits [[ 1.9718212 -2.2855947  1.9628356 -3.0858765]]
Iteration 200 of 1000: loss=2.89 " + "l1=1.75" + "l2=1.15 f=-0.273 shape=(1, 9000, 1)
logits [[ 1.3216306 -1.9995021  1.3790258 -1.7947588]]
Iteration 300 of 1000: loss=2.24 " + "l1=0.802" + "l2=1.43 f=-0.215 shape=(1, 9000, 1)
logits [[ 0.5799058 -1.6906221  0.8557292 -0.6030818]]
Iteration 400 of 1000: loss=1.65 " + "l1=0.0237" + "l2=1.62 f=-0.148 shape=(1, 9000, 1)
logits [[-0.05341401 -1.4280432   0.46555758  0.4225295 ]]
Iteration 500 of 1000: loss=1.43 " + "l1=0.0114" + "l2=1.42 f=-0.149 shape=(1, 9000, 1)
logits [[-0.03905876 -1.4256929   0.44383952  0.4230216 ]]
Iteration 600 of 1000: loss=1.27 " + "l1=0.00214" + "l2=1.27 f=-0.154 shape=(1, 9000, 1)
logits [[-0.01846596 -1.4266073   0.4156926   0.4118039 ]]
Iteration 700 of 1000: loss=1.16 " + "l1=0" + "l2=1.16 f=-0.159 shape=(1, 9000, 1)
logits [[-0.01717996 -1.4515549   0.40897408  0.4218389 ]]
Iteration 800 of 1000: loss=1.07 " + "l1=0.0067" + "l2=1.06 f=-0.166 shape=(1, 9000, 1)
logits [[ 0.00215692 -1.4903095   0.41801515  0.40583295]]
Iteration 900 of 1000: loss=0.996 " + "l1=0.00778" + "l2=0.988 f=-0.17 shape=(1, 9000, 1)
logits [[ 0.00713612 -1.5064671   0.41608626  0.40194282]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.9 " + "l1=3.9" + "l2=0 f=-0.567 shape=(1, 9000, 1)
logits [[ 5.0325823 -3.3532596  3.0272927 -6.975376 ]]
Iteration 100 of 1000: loss=2.85 " + "l1=2.36" + "l2=0.494 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.9247806 -2.7168558  2.3199546 -4.3307977]]
Iteration 200 of 1000: loss=2.27 " + "l1=1.62" + "l2=0.654 f=-0.367 shape=(1, 9000, 1)
logits [[ 1.9433296 -2.3280923  1.9433273 -3.0263457]]
Iteration 300 of 1000: loss=1.96 " + "l1=1.24" + "l2=0.719 f=-0.315 shape=(1, 9000, 1)
logits [[ 1.5580918 -2.1304052  1.5665023 -2.2550561]]
Iteration 400 of 1000: loss=1.76 " + "l1=0.96" + "l2=0.802 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.2603608 -1.9959906  1.2831898 -1.6701776]]
Iteration 500 of 1000: loss=1.56 " + "l1=0.684" + "l2=0.877 f=-0.26 shape=(1, 9000, 1)
logits [[ 0.92555773 -1.8330636   0.9863719  -1.1197791 ]]
Iteration 600 of 1000: loss=1.34 " + "l1=0.359" + "l2=0.98 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.4348563  -1.6355165   0.6914994  -0.41206604]]
Iteration 700 of 1000: loss=1.16 " + "l1=0.128" + "l2=1.03 f=-0.203 shape=(1, 9000, 1)
logits [[ 0.08589599 -1.5570636   0.52770764  0.13298738]]
Iteration 800 of 1000: loss=1.02 " + "l1=0.0039" + "l2=1.02 f=-0.188 shape=(1, 9000, 1)
logits [[-0.04215756 -1.5504115   0.4256211   0.4136175 ]]
Iteration 900 of 1000: loss=0.941 " + "l1=0.00186" + "l2=0.94 f=-0.19 shape=(1, 9000, 1)
logits [[-0.04630744 -1.562928    0.42731577  0.4215923 ]]
--- 291.345410823822 seconds ---
Adv result:3
Loading record A03629
(1, 6940)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0445 " + "l1=0.0445" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.0031908 -1.4435349  1.0828139 -3.8148487]]
Iteration 100 of 1000: loss=0.044 " + "l1=0.0436" + "l2=0.00032 f=-0.297 shape=(1, 9000, 1)
logits [[ 2.9499097 -1.4142408  1.0709518 -3.7964187]]
Iteration 200 of 1000: loss=0.0438 " + "l1=0.0435" + "l2=0.00033 f=-0.298 shape=(1, 9000, 1)
logits [[ 2.9378116 -1.4095316  1.0697335 -3.789498 ]]
Iteration 300 of 1000: loss=0.0437 " + "l1=0.0433" + "l2=0.000396 f=-0.298 shape=(1, 9000, 1)
logits [[ 2.9233046 -1.4033117  1.0678645 -3.7816105]]
Iteration 400 of 1000: loss=0.0436 " + "l1=0.0431" + "l2=0.000509 f=-0.299 shape=(1, 9000, 1)
logits [[ 2.909396  -1.3975816  1.0660939 -3.7728796]]
Iteration 500 of 1000: loss=0.0435 " + "l1=0.0429" + "l2=0.000608 f=-0.299 shape=(1, 9000, 1)
logits [[ 2.8960178 -1.3921088  1.0642422 -3.7638078]]
Iteration 600 of 1000: loss=0.0434 " + "l1=0.0427" + "l2=0.000692 f=-0.299 shape=(1, 9000, 1)
logits [[ 2.8828795 -1.3867397  1.0623783 -3.7539399]]
Iteration 700 of 1000: loss=0.0434 " + "l1=0.0425" + "l2=0.000858 f=-0.299 shape=(1, 9000, 1)
logits [[ 2.870395  -1.3817111  1.060597  -3.7438426]]
Iteration 800 of 1000: loss=0.0433 " + "l1=0.0424" + "l2=0.000958 f=-0.298 shape=(1, 9000, 1)
logits [[ 2.8583949 -1.376943   1.0588762 -3.7336574]]
Iteration 900 of 1000: loss=0.0433 " + "l1=0.0422" + "l2=0.00112 f=-0.298 shape=(1, 9000, 1)
logits [[ 2.8468697 -1.3724824  1.0572416 -3.7234516]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.445 " + "l1=0.445" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.0031908 -1.4435349  1.0828139 -3.8148487]]
Iteration 100 of 1000: loss=0.398 " + "l1=0.37" + "l2=0.0274 f=-0.33 shape=(1, 9000, 1)
logits [[ 2.5375848 -1.165378   0.9852489 -3.6759176]]
Iteration 200 of 1000: loss=0.367 " + "l1=0.319" + "l2=0.0473 f=-0.345 shape=(1, 9000, 1)
logits [[ 2.2189698 -0.9752825  0.928825  -3.5544298]]
Iteration 300 of 1000: loss=0.321 " + "l1=0.246" + "l2=0.0756 f=-0.391 shape=(1, 9000, 1)
logits [[ 1.7257164 -0.7306571  0.8898005 -3.4480655]]
Iteration 400 of 1000: loss=0.287 " + "l1=0.191" + "l2=0.0962 f=-0.427 shape=(1, 9000, 1)
logits [[ 1.3221405  -0.58642715  0.8564232  -3.3003023 ]]
Iteration 500 of 1000: loss=0.252 " + "l1=0.128" + "l2=0.124 f=-0.474 shape=(1, 9000, 1)
logits [[ 0.84977704 -0.42790854  0.7675753  -3.0855043 ]]
Iteration 600 of 1000: loss=0.224 " + "l1=0.102" + "l2=0.122 f=-0.488 shape=(1, 9000, 1)
logits [[ 0.6549303  -0.35852185  0.65909404 -2.9082093 ]]
Iteration 700 of 1000: loss=0.206 " + "l1=0.0889" + "l2=0.117 f=-0.486 shape=(1, 9000, 1)
logits [[ 0.5664744  -0.31723917  0.57130426 -2.7647703 ]]
Iteration 800 of 1000: loss=0.194 " + "l1=0.0804" + "l2=0.113 f=-0.479 shape=(1, 9000, 1)
logits [[ 0.5098366  -0.29383284  0.5079975  -2.6380024 ]]
Iteration 900 of 1000: loss=0.184 " + "l1=0.0735" + "l2=0.111 f=-0.473 shape=(1, 9000, 1)
logits [[ 0.46102855 -0.27411422  0.4581557  -2.5375798 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.45 " + "l1=4.45" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.0031908 -1.4435349  1.0828139 -3.8148487]]
Iteration 100 of 1000: loss=0.562 " + "l1=0.015" + "l2=0.546 f=-0.575 shape=(1, 9000, 1)
logits [[ 0.4151217   0.4000717   0.40540817 -3.5193293 ]]
Iteration 200 of 1000: loss=0.396 " + "l1=0" + "l2=0.396 f=-0.562 shape=(1, 9000, 1)
logits [[ 0.36053756  0.40911028  0.38896078 -3.4060051 ]]
Iteration 300 of 1000: loss=0.327 " + "l1=0" + "l2=0.327 f=-0.54 shape=(1, 9000, 1)
logits [[ 0.3817168   0.39300138  0.3599713  -3.295348  ]]
Iteration 400 of 1000: loss=0.289 " + "l1=0.01" + "l2=0.279 f=-0.529 shape=(1, 9000, 1)
logits [[ 0.3535258   0.34621575  0.35623235 -3.172043  ]]
Iteration 500 of 1000: loss=0.26 " + "l1=0" + "l2=0.26 f=-0.523 shape=(1, 9000, 1)
logits [[ 0.30775875  0.34887818  0.31161186 -3.0622227 ]]
Iteration 600 of 1000: loss=0.243 " + "l1=0" + "l2=0.243 f=-0.521 shape=(1, 9000, 1)
logits [[ 0.2776949   0.32937667  0.29090425 -2.983556  ]]
Iteration 700 of 1000: loss=0.228 " + "l1=0" + "l2=0.228 f=-0.519 shape=(1, 9000, 1)
logits [[ 0.23863956  0.2977454   0.28735206 -2.8984282 ]]
Iteration 800 of 1000: loss=0.214 " + "l1=0" + "l2=0.214 f=-0.506 shape=(1, 9000, 1)
logits [[ 0.25507444  0.26560083  0.25649166 -2.8003075 ]]
Iteration 900 of 1000: loss=0.214 " + "l1=0" + "l2=0.214 f=-0.509 shape=(1, 9000, 1)
logits [[ 0.1649107   0.28589448  0.2257876  -2.7130587 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.45 " + "l1=2.45" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.0031908 -1.4435349  1.0828139 -3.8148487]]
Iteration 100 of 1000: loss=0.512 " + "l1=0" + "l2=0.512 f=-0.576 shape=(1, 9000, 1)
logits [[ 0.42320347  0.42735204  0.42394647 -3.5774844 ]]
Iteration 200 of 1000: loss=0.358 " + "l1=0" + "l2=0.358 f=-0.559 shape=(1, 9000, 1)
logits [[ 0.40486652  0.44720238  0.42789045 -3.517837  ]]
Iteration 300 of 1000: loss=0.294 " + "l1=0" + "l2=0.294 f=-0.543 shape=(1, 9000, 1)
logits [[ 0.37997377  0.4079342   0.38121286 -3.3414633 ]]
Iteration 400 of 1000: loss=0.263 " + "l1=0.0104" + "l2=0.252 f=-0.529 shape=(1, 9000, 1)
logits [[ 0.3727726   0.3538891   0.34256792 -3.1848493 ]]
Iteration 500 of 1000: loss=0.236 " + "l1=0" + "l2=0.236 f=-0.529 shape=(1, 9000, 1)
logits [[ 0.2809581  0.331691   0.3165117 -3.0450153]]
Iteration 600 of 1000: loss=0.22 " + "l1=0.00373" + "l2=0.216 f=-0.515 shape=(1, 9000, 1)
logits [[ 0.29532132  0.2885457   0.28924796 -2.93125   ]]
Iteration 700 of 1000: loss=0.207 " + "l1=8.2e-05" + "l2=0.207 f=-0.509 shape=(1, 9000, 1)
logits [[ 0.25299045  0.26716122  0.26731032 -2.823563  ]]
Iteration 800 of 1000: loss=0.202 " + "l1=0" + "l2=0.202 f=-0.506 shape=(1, 9000, 1)
logits [[ 0.19842498  0.26319957  0.22851042 -2.7127504 ]]
Iteration 900 of 1000: loss=0.192 " + "l1=0" + "l2=0.192 f=-0.494 shape=(1, 9000, 1)
logits [[ 0.2047892   0.22939402  0.20535722 -2.6148193 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.45 " + "l1=1.45" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.0031908 -1.4435349  1.0828139 -3.8148487]]
Iteration 100 of 1000: loss=0.555 " + "l1=0.0728" + "l2=0.482 f=-0.555 shape=(1, 9000, 1)
logits [[ 0.53527224  0.31683832  0.5408744  -3.613166  ]]
Iteration 200 of 1000: loss=0.336 " + "l1=0.000439" + "l2=0.336 f=-0.547 shape=(1, 9000, 1)
logits [[ 0.3935556   0.39729652  0.3986463  -3.3793538 ]]
Iteration 300 of 1000: loss=0.262 " + "l1=0.00316" + "l2=0.259 f=-0.536 shape=(1, 9000, 1)
logits [[ 0.3532378   0.34711152  0.35682368 -3.2024214 ]]
Iteration 400 of 1000: loss=0.235 " + "l1=0" + "l2=0.235 f=-0.531 shape=(1, 9000, 1)
logits [[ 0.28217104  0.32562163  0.31047353 -3.0403483 ]]
Iteration 500 of 1000: loss=0.214 " + "l1=0" + "l2=0.214 f=-0.519 shape=(1, 9000, 1)
logits [[ 0.2758715   0.28662926  0.2851455  -2.9238265 ]]
Iteration 600 of 1000: loss=0.206 " + "l1=0" + "l2=0.206 f=-0.515 shape=(1, 9000, 1)
logits [[ 0.20920736  0.27913198  0.24763428 -2.7979412 ]]
Iteration 700 of 1000: loss=0.191 " + "l1=0.00145" + "l2=0.19 f=-0.506 shape=(1, 9000, 1)
logits [[ 0.21272913  0.22302695  0.22749642 -2.6860476 ]]
Iteration 800 of 1000: loss=0.183 " + "l1=0" + "l2=0.183 f=-0.5 shape=(1, 9000, 1)
logits [[ 0.17543325  0.20173712  0.20069955 -2.577789  ]]
Iteration 900 of 1000: loss=0.176 " + "l1=0" + "l2=0.176 f=-0.489 shape=(1, 9000, 1)
logits [[ 0.16176143  0.1846827   0.16327931 -2.4640603 ]]
--- 280.35372042655945 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0192 " + "l1=0.0192" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.0031908 -1.4435349  1.0828139 -3.8148487]]
Iteration 100 of 1000: loss=0.0189 " + "l1=0.0187" + "l2=0.000218 f=-0.296 shape=(1, 9000, 1)
logits [[ 2.9642384 -1.4370172  1.0956507 -3.8058233]]
Iteration 200 of 1000: loss=0.0188 " + "l1=0.0186" + "l2=0.000211 f=-0.296 shape=(1, 9000, 1)
logits [[ 2.9566789 -1.4349478  1.0970882 -3.8025527]]
Iteration 300 of 1000: loss=0.0187 " + "l1=0.0185" + "l2=0.000252 f=-0.296 shape=(1, 9000, 1)
logits [[ 2.9471068 -1.4326932  1.0994239 -3.7985692]]
Iteration 400 of 1000: loss=0.0187 " + "l1=0.0184" + "l2=0.000322 f=-0.296 shape=(1, 9000, 1)
logits [[ 2.9372075 -1.4304053  1.1017935 -3.7940898]]
Iteration 500 of 1000: loss=0.0187 " + "l1=0.0182" + "l2=0.000416 f=-0.296 shape=(1, 9000, 1)
logits [[ 2.9274023 -1.4281245  1.1040323 -3.7889369]]
Iteration 600 of 1000: loss=0.0186 " + "l1=0.0181" + "l2=0.000499 f=-0.296 shape=(1, 9000, 1)
logits [[ 2.9180224 -1.4258993  1.1059369 -3.783622 ]]
Iteration 700 of 1000: loss=0.0186 " + "l1=0.018" + "l2=0.000563 f=-0.296 shape=(1, 9000, 1)
logits [[ 2.9090202 -1.4238423  1.1078581 -3.7783396]]
Iteration 800 of 1000: loss=0.0186 " + "l1=0.0179" + "l2=0.000677 f=-0.296 shape=(1, 9000, 1)
logits [[ 2.8999307 -1.421872   1.1097442 -3.7727861]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.192 " + "l1=0.192" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.0031908 -1.4435349  1.0828139 -3.8148487]]
Iteration 100 of 1000: loss=0.164 " + "l1=0.148" + "l2=0.0159 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.680463  -1.398669   1.2037024 -3.7777574]]
Iteration 200 of 1000: loss=0.147 " + "l1=0.123" + "l2=0.0241 f=-0.336 shape=(1, 9000, 1)
logits [[ 2.481431  -1.3489691  1.2530408 -3.7305465]]
Iteration 300 of 1000: loss=0.131 " + "l1=0.1" + "l2=0.0315 f=-0.346 shape=(1, 9000, 1)
logits [[ 2.2867043 -1.2983327  1.2863067 -3.6603682]]
Iteration 400 of 1000: loss=0.116 " + "l1=0.0777" + "l2=0.0382 f=-0.355 shape=(1, 9000, 1)
logits [[ 2.0829237 -1.2604433  1.3062409 -3.5504036]]
Iteration 500 of 1000: loss=0.1 " + "l1=0.0564" + "l2=0.0441 f=-0.365 shape=(1, 9000, 1)
logits [[ 1.8843284 -1.2334058  1.3205315 -3.43257  ]]
Iteration 600 of 1000: loss=0.0867 " + "l1=0.0382" + "l2=0.0485 f=-0.37 shape=(1, 9000, 1)
logits [[ 1.7107464 -1.2196429  1.3288745 -3.301381 ]]
Iteration 700 of 1000: loss=0.0724 " + "l1=0.0189" + "l2=0.0534 f=-0.372 shape=(1, 9000, 1)
logits [[ 1.5272595 -1.2179157  1.3377608 -3.1333623]]
Iteration 800 of 1000: loss=0.0592 " + "l1=0.00222" + "l2=0.057 f=-0.377 shape=(1, 9000, 1)
logits [[ 1.361904  -1.2137779  1.3397217 -2.9938912]]
Iteration 900 of 1000: loss=0.0501 " + "l1=0.00149" + "l2=0.0486 f=-0.371 shape=(1, 9000, 1)
logits [[ 1.3302052 -1.2268974  1.315298  -2.902924 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.106 " + "l1=0.106" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.0031908 -1.4435349  1.0828139 -3.8148487]]
Iteration 100 of 1000: loss=0.0973 " + "l1=0.0928" + "l2=0.00446 f=-0.306 shape=(1, 9000, 1)
logits [[ 2.8352866 -1.4197446  1.1479642 -3.7876968]]
Iteration 200 of 1000: loss=0.0935 " + "l1=0.0874" + "l2=0.00608 f=-0.31 shape=(1, 9000, 1)
logits [[ 2.7584033 -1.402434   1.1691139 -3.764518 ]]
Iteration 300 of 1000: loss=0.0898 " + "l1=0.0818" + "l2=0.00802 f=-0.314 shape=(1, 9000, 1)
logits [[ 2.674228  -1.3815832  1.1874067 -3.7344556]]
Iteration 400 of 1000: loss=0.0859 " + "l1=0.0758" + "l2=0.0101 f=-0.317 shape=(1, 9000, 1)
logits [[ 2.587171  -1.3641219  1.2085068 -3.700072 ]]
Iteration 500 of 1000: loss=0.0818 " + "l1=0.0697" + "l2=0.0121 f=-0.32 shape=(1, 9000, 1)
logits [[ 2.496218  -1.3411119  1.2282773 -3.6635957]]
Iteration 600 of 1000: loss=0.0779 " + "l1=0.0641" + "l2=0.0138 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.408369  -1.3219371  1.2428427 -3.615855 ]]
Iteration 700 of 1000: loss=0.0735 " + "l1=0.0577" + "l2=0.0158 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.3055925 -1.3034896  1.2558426 -3.5534043]]
Iteration 800 of 1000: loss=0.0693 " + "l1=0.0518" + "l2=0.0174 f=-0.325 shape=(1, 9000, 1)
logits [[ 2.2075784 -1.288866   1.2652725 -3.4844184]]
Iteration 900 of 1000: loss=0.0651 " + "l1=0.0463" + "l2=0.0189 f=-0.326 shape=(1, 9000, 1)
logits [[ 2.112971  -1.2764566  1.2719053 -3.4114363]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.149 " + "l1=0.149" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.0031908 -1.4435349  1.0828139 -3.8148487]]
Iteration 100 of 1000: loss=0.132 " + "l1=0.123" + "l2=0.00934 f=-0.315 shape=(1, 9000, 1)
logits [[ 2.7597294 -1.4113138  1.1766117 -3.7844067]]
Iteration 200 of 1000: loss=0.124 " + "l1=0.11" + "l2=0.0136 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.6265016 -1.3801311  1.2088019 -3.7479458]]
Iteration 300 of 1000: loss=0.115 " + "l1=0.0962" + "l2=0.0185 f=-0.331 shape=(1, 9000, 1)
logits [[ 2.4850724 -1.3467293  1.2441034 -3.707214 ]]
Iteration 400 of 1000: loss=0.107 " + "l1=0.0843" + "l2=0.0223 f=-0.335 shape=(1, 9000, 1)
logits [[ 2.3557577 -1.3117803  1.2677954 -3.6534677]]
Iteration 500 of 1000: loss=0.0973 " + "l1=0.0708" + "l2=0.0265 f=-0.342 shape=(1, 9000, 1)
logits [[ 2.1965933 -1.2826827  1.2828864 -3.5632722]]
Iteration 600 of 1000: loss=0.0881 " + "l1=0.058" + "l2=0.0301 f=-0.347 shape=(1, 9000, 1)
logits [[ 2.0436554 -1.2605786  1.2954398 -3.468153 ]]
Iteration 700 of 1000: loss=0.0799 " + "l1=0.047" + "l2=0.0329 f=-0.351 shape=(1, 9000, 1)
logits [[ 1.9101899 -1.2462299  1.3034927 -3.3701508]]
Iteration 800 of 1000: loss=0.0724 " + "l1=0.0376" + "l2=0.0347 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.7882011 -1.2348219  1.3024141 -3.2543507]]
Iteration 900 of 1000: loss=0.0648 " + "l1=0.0272" + "l2=0.0376 f=-0.351 shape=(1, 9000, 1)
logits [[ 1.6561073 -1.2283299  1.3050936 -3.1375766]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.17 " + "l1=0.17" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.0031908 -1.4435349  1.0828139 -3.8148487]]
Iteration 100 of 1000: loss=0.148 " + "l1=0.136" + "l2=0.0125 f=-0.319 shape=(1, 9000, 1)
logits [[ 2.7202628 -1.4053167  1.1913239 -3.7830431]]
Iteration 200 of 1000: loss=0.136 " + "l1=0.117" + "l2=0.0189 f=-0.33 shape=(1, 9000, 1)
logits [[ 2.5538545 -1.3662127  1.2325709 -3.739209 ]]
Iteration 300 of 1000: loss=0.124 " + "l1=0.1" + "l2=0.0241 f=-0.339 shape=(1, 9000, 1)
logits [[ 2.3962822 -1.3247101  1.2668637 -3.6940932]]
Iteration 400 of 1000: loss=0.112 " + "l1=0.0822" + "l2=0.0301 f=-0.346 shape=(1, 9000, 1)
logits [[ 2.2164462 -1.2859658  1.2903695 -3.603583 ]]
Iteration 500 of 1000: loss=0.1 " + "l1=0.0654" + "l2=0.0348 f=-0.353 shape=(1, 9000, 1)
logits [[ 2.0402207 -1.2574105  1.3037232 -3.4989347]]
Iteration 600 of 1000: loss=0.0888 " + "l1=0.05" + "l2=0.0388 f=-0.359 shape=(1, 9000, 1)
logits [[ 1.8792685 -1.2386911  1.3153626 -3.3938622]]
Iteration 700 of 1000: loss=0.0785 " + "l1=0.0368" + "l2=0.0418 f=-0.361 shape=(1, 9000, 1)
logits [[ 1.7323978 -1.228809   1.3181542 -3.2648895]]
Iteration 800 of 1000: loss=0.0673 " + "l1=0.0216" + "l2=0.0457 f=-0.363 shape=(1, 9000, 1)
logits [[ 1.5693116 -1.2249203  1.3264486 -3.1218548]]
Iteration 900 of 1000: loss=0.0574 " + "l1=0.00912" + "l2=0.0482 f=-0.366 shape=(1, 9000, 1)
logits [[ 1.4338527 -1.2218801  1.331094  -3.0082376]]
--- 280.26901936531067 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0682 " + "l1=0.0682" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.0031908 -1.4435349  1.0828139 -3.8148487]]
Iteration 100 of 1000: loss=0.0673 " + "l1=0.067" + "l2=0.000364 f=-0.292 shape=(1, 9000, 1)
logits [[ 2.9462488 -1.431161   1.0660601 -3.7492092]]
Iteration 200 of 1000: loss=0.067 " + "l1=0.0665" + "l2=0.000422 f=-0.291 shape=(1, 9000, 1)
logits [[ 2.9290464 -1.428448   1.0615771 -3.7257829]]
Iteration 300 of 1000: loss=0.0666 " + "l1=0.0661" + "l2=0.000539 f=-0.29 shape=(1, 9000, 1)
logits [[ 2.9079242 -1.4252853  1.0561808 -3.6973526]]
Iteration 400 of 1000: loss=0.0662 " + "l1=0.0655" + "l2=0.000674 f=-0.288 shape=(1, 9000, 1)
logits [[ 2.885956  -1.4220358  1.0503002 -3.6662931]]
Iteration 500 of 1000: loss=0.0658 " + "l1=0.065" + "l2=0.00088 f=-0.286 shape=(1, 9000, 1)
logits [[ 2.8632045 -1.4184245  1.043907  -3.6331081]]
Iteration 600 of 1000: loss=0.0655 " + "l1=0.0644" + "l2=0.00108 f=-0.284 shape=(1, 9000, 1)
logits [[ 2.840896  -1.4148545  1.0377647 -3.598405 ]]
Iteration 700 of 1000: loss=0.0651 " + "l1=0.0638" + "l2=0.0013 f=-0.281 shape=(1, 9000, 1)
logits [[ 2.8199313 -1.4110831  1.0316998 -3.564175 ]]
Iteration 800 of 1000: loss=0.0648 " + "l1=0.0633" + "l2=0.00154 f=-0.278 shape=(1, 9000, 1)
logits [[ 2.7985573 -1.4072988  1.0258462 -3.5284224]]
Iteration 900 of 1000: loss=0.0644 " + "l1=0.0626" + "l2=0.00178 f=-0.275 shape=(1, 9000, 1)
logits [[ 2.7725348 -1.4032996  1.0182053 -3.4878848]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.682 " + "l1=0.682" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.0031908 -1.4435349  1.0828139 -3.8148487]]
Iteration 100 of 1000: loss=0.605 " + "l1=0.576" + "l2=0.0289 f=-0.282 shape=(1, 9000, 1)
logits [[ 2.5018573 -1.3378571  0.9612132 -3.254742 ]]
Iteration 200 of 1000: loss=0.537 " + "l1=0.489" + "l2=0.0478 f=-0.291 shape=(1, 9000, 1)
logits [[ 2.0738702 -1.2906327  0.8677902 -2.8139062]]
Iteration 300 of 1000: loss=0.459 " + "l1=0.389" + "l2=0.0698 f=-0.298 shape=(1, 9000, 1)
logits [[ 1.5864253  -1.2060091   0.73258644 -2.3069441 ]]
Iteration 400 of 1000: loss=0.386 " + "l1=0.294" + "l2=0.0924 f=-0.315 shape=(1, 9000, 1)
logits [[ 1.1049057  -1.146169    0.61794204 -1.8355622 ]]
Iteration 500 of 1000: loss=0.332 " + "l1=0.224" + "l2=0.108 f=-0.341 shape=(1, 9000, 1)
logits [[ 0.7215468 -1.116575   0.5470232 -1.5162934]]
Iteration 600 of 1000: loss=0.294 " + "l1=0.179" + "l2=0.115 f=-0.359 shape=(1, 9000, 1)
logits [[ 0.48264644 -1.0917745   0.48039988 -1.3068657 ]]
Iteration 700 of 1000: loss=0.266 " + "l1=0.152" + "l2=0.114 f=-0.355 shape=(1, 9000, 1)
logits [[ 0.40045467 -1.0959328   0.39769942 -1.1211826 ]]
Iteration 800 of 1000: loss=0.24 " + "l1=0.128" + "l2=0.112 f=-0.35 shape=(1, 9000, 1)
logits [[ 0.3268282  -1.1048931   0.32957268 -0.9512121 ]]
Iteration 900 of 1000: loss=0.217 " + "l1=0.107" + "l2=0.11 f=-0.344 shape=(1, 9000, 1)
logits [[ 0.2692153  -1.1146399   0.26672968 -0.7975703 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.82 " + "l1=6.82" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.0031908 -1.4435349  1.0828139 -3.8148487]]
Iteration 100 of 1000: loss=1.62 " + "l1=0.00686" + "l2=1.61 f=-0.335 shape=(1, 9000, 1)
logits [[-0.33391517 -0.40207717 -0.29779917 -0.3046634 ]]
Iteration 200 of 1000: loss=0.889 " + "l1=0" + "l2=0.889 f=-0.318 shape=(1, 9000, 1)
logits [[-0.26274052 -0.4840147  -0.26858884 -0.25677112]]
Iteration 300 of 1000: loss=0.638 " + "l1=0" + "l2=0.638 f=-0.322 shape=(1, 9000, 1)
logits [[-0.26016712 -0.54124147 -0.2432395  -0.24190208]]
Iteration 400 of 1000: loss=0.482 " + "l1=0.00058" + "l2=0.481 f=-0.326 shape=(1, 9000, 1)
logits [[-0.23626673 -0.6028542  -0.23119159 -0.23177129]]
Iteration 500 of 1000: loss=0.41 " + "l1=0" + "l2=0.41 f=-0.338 shape=(1, 9000, 1)
logits [[-0.29841483 -0.6285388  -0.21676138 -0.20924339]]
Iteration 600 of 1000: loss=0.353 " + "l1=0" + "l2=0.353 f=-0.328 shape=(1, 9000, 1)
logits [[-0.21644789 -0.70775175 -0.20816058 -0.179277  ]]
Iteration 700 of 1000: loss=0.317 " + "l1=0" + "l2=0.317 f=-0.324 shape=(1, 9000, 1)
logits [[-0.18813455 -0.7484422  -0.1901449  -0.16948417]]
Iteration 800 of 1000: loss=0.293 " + "l1=0.00167" + "l2=0.292 f=-0.324 shape=(1, 9000, 1)
logits [[-0.19603632 -0.78011394 -0.15840323 -0.16007203]]
Iteration 900 of 1000: loss=0.271 " + "l1=0" + "l2=0.271 f=-0.313 shape=(1, 9000, 1)
logits [[-0.15223818 -0.8345492  -0.14367348 -0.12228585]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.75 " + "l1=3.75" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.0031908 -1.4435349  1.0828139 -3.8148487]]
Iteration 100 of 1000: loss=1.53 " + "l1=0.671" + "l2=0.86 f=-0.357 shape=(1, 9000, 1)
logits [[ 0.10596174 -0.51663095  0.09571034 -1.1138896 ]]
Iteration 200 of 1000: loss=0.772 " + "l1=0.00424" + "l2=0.767 f=-0.319 shape=(1, 9000, 1)
logits [[-0.22939494 -0.5790595  -0.23242638 -0.2371049 ]]
Iteration 300 of 1000: loss=0.479 " + "l1=0" + "l2=0.479 f=-0.318 shape=(1, 9000, 1)
logits [[-0.20389518 -0.6604038  -0.2059545  -0.20206863]]
Iteration 400 of 1000: loss=0.378 " + "l1=0" + "l2=0.378 f=-0.32 shape=(1, 9000, 1)
logits [[-0.19872735 -0.69310737 -0.20291589 -0.18616992]]
Iteration 500 of 1000: loss=0.324 " + "l1=0" + "l2=0.324 f=-0.318 shape=(1, 9000, 1)
logits [[-0.17792267 -0.73447037 -0.19431525 -0.16698754]]
Iteration 600 of 1000: loss=0.292 " + "l1=0.00844" + "l2=0.284 f=-0.319 shape=(1, 9000, 1)
logits [[-0.15967333 -0.791455   -0.154247   -0.16958833]]
Iteration 700 of 1000: loss=0.263 " + "l1=0.00565" + "l2=0.258 f=-0.317 shape=(1, 9000, 1)
logits [[-0.13790238 -0.83819455 -0.14341456 -0.14818338]]
Iteration 800 of 1000: loss=0.239 " + "l1=0" + "l2=0.239 f=-0.316 shape=(1, 9000, 1)
logits [[-0.13320151 -0.8711376  -0.13029899 -0.12825578]]
Iteration 900 of 1000: loss=0.223 " + "l1=0" + "l2=0.223 f=-0.314 shape=(1, 9000, 1)
logits [[-0.12329309 -0.9040353  -0.11924489 -0.10766418]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.22 " + "l1=2.22" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.0031908 -1.4435349  1.0828139 -3.8148487]]
Iteration 100 of 1000: loss=1.32 " + "l1=0.89" + "l2=0.43 f=-0.332 shape=(1, 9000, 1)
logits [[ 0.839305   -0.78639567  0.5171085  -1.8984889 ]]
Iteration 200 of 1000: loss=0.785 " + "l1=0.379" + "l2=0.406 f=-0.354 shape=(1, 9000, 1)
logits [[ 0.11090973 -0.5916701   0.11527803 -1.0522566 ]]
Iteration 300 of 1000: loss=0.454 " + "l1=0.0329" + "l2=0.421 f=-0.329 shape=(1, 9000, 1)
logits [[-0.19339207 -0.63882935 -0.190517   -0.2918886 ]]
Iteration 400 of 1000: loss=0.327 " + "l1=0.00125" + "l2=0.326 f=-0.327 shape=(1, 9000, 1)
logits [[-0.19410577 -0.7383062  -0.1862896  -0.19012603]]
Iteration 500 of 1000: loss=0.281 " + "l1=0.00218" + "l2=0.278 f=-0.323 shape=(1, 9000, 1)
logits [[-0.16204911 -0.7947155  -0.16553482 -0.16876534]]
Iteration 600 of 1000: loss=0.251 " + "l1=0.00153" + "l2=0.25 f=-0.323 shape=(1, 9000, 1)
logits [[-0.14806496 -0.83522934 -0.1556006  -0.15275905]]
Iteration 700 of 1000: loss=0.227 " + "l1=0" + "l2=0.227 f=-0.323 shape=(1, 9000, 1)
logits [[-0.14268449 -0.8766734  -0.14155214 -0.13207057]]
Iteration 800 of 1000: loss=0.206 " + "l1=0.00198" + "l2=0.204 f=-0.323 shape=(1, 9000, 1)
logits [[-0.11835007 -0.9223768  -0.12706587 -0.12445153]]
Iteration 900 of 1000: loss=0.187 " + "l1=0.00104" + "l2=0.186 f=-0.323 shape=(1, 9000, 1)
logits [[-0.1105755  -0.9650425  -0.10618997 -0.10938855]]
--- 292.35830330848694 seconds ---
Adv result:3
Loading record A03634
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0648 " + "l1=0.0648" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.223317  -3.2597854  2.8732288 -5.1373878]]
Iteration 100 of 1000: loss=0.0645 " + "l1=0.0642" + "l2=0.000266 f=-0.571 shape=(1, 9000, 1)
logits [[ 3.1862707 -3.2322655  2.8543725 -5.090667 ]]
Iteration 200 of 1000: loss=0.0643 " + "l1=0.0641" + "l2=0.000264 f=-0.57 shape=(1, 9000, 1)
logits [[ 3.179852  -3.2266133  2.8510692 -5.0823703]]
Iteration 300 of 1000: loss=0.0642 " + "l1=0.0639" + "l2=0.000328 f=-0.568 shape=(1, 9000, 1)
logits [[ 3.1716015 -3.219975   2.8468595 -5.07162  ]]
Iteration 400 of 1000: loss=0.0642 " + "l1=0.0638" + "l2=0.000404 f=-0.567 shape=(1, 9000, 1)
logits [[ 3.1638417 -3.2139049  2.8426268 -5.0613756]]
Iteration 500 of 1000: loss=0.0642 " + "l1=0.0636" + "l2=0.000506 f=-0.566 shape=(1, 9000, 1)
logits [[ 3.1566434 -3.2083497  2.8385823 -5.0517936]]
Iteration 600 of 1000: loss=0.0641 " + "l1=0.0635" + "l2=0.000599 f=-0.565 shape=(1, 9000, 1)
logits [[ 3.1495962 -3.202926   2.8344939 -5.042627 ]]
Iteration 700 of 1000: loss=0.0641 " + "l1=0.0634" + "l2=0.000717 f=-0.565 shape=(1, 9000, 1)
logits [[ 3.1430874 -3.1978605  2.8304653 -5.0345597]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.648 " + "l1=0.648" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.223317  -3.2597854  2.8732288 -5.1373878]]
Iteration 100 of 1000: loss=0.617 " + "l1=0.601" + "l2=0.0162 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.9509387 -3.0590806  2.7318044 -4.809283 ]]
Iteration 200 of 1000: loss=0.605 " + "l1=0.585" + "l2=0.0206 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.8540838 -2.992939   2.678434  -4.6818023]]
Iteration 300 of 1000: loss=0.595 " + "l1=0.571" + "l2=0.024 f=-0.526 shape=(1, 9000, 1)
logits [[ 2.7763133 -2.9341512  2.6253176 -4.5725083]]
Iteration 400 of 1000: loss=0.586 " + "l1=0.558" + "l2=0.0284 f=-0.518 shape=(1, 9000, 1)
logits [[ 2.7033093 -2.8748527  2.571202  -4.4723606]]
Iteration 500 of 1000: loss=0.578 " + "l1=0.544" + "l2=0.0332 f=-0.51 shape=(1, 9000, 1)
logits [[ 2.6326668 -2.8121028  2.5164735 -4.3753905]]
Iteration 600 of 1000: loss=0.569 " + "l1=0.53" + "l2=0.0387 f=-0.5 shape=(1, 9000, 1)
logits [[ 2.5600681 -2.7407246  2.460233  -4.2787223]]
Iteration 700 of 1000: loss=0.56 " + "l1=0.516" + "l2=0.0444 f=-0.49 shape=(1, 9000, 1)
logits [[ 2.482282  -2.6736526  2.4077086 -4.1775546]]
Iteration 800 of 1000: loss=0.552 " + "l1=0.502" + "l2=0.0503 f=-0.484 shape=(1, 9000, 1)
logits [[ 2.4109244 -2.6096916  2.359461  -4.0969133]]
Iteration 900 of 1000: loss=0.545 " + "l1=0.49" + "l2=0.0558 f=-0.48 shape=(1, 9000, 1)
logits [[ 2.3464541 -2.549462   2.312802  -4.0301433]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.48 " + "l1=6.48" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.223317  -3.2597854  2.8732288 -5.1373878]]
Iteration 100 of 1000: loss=4.48 " + "l1=3.67" + "l2=0.815 f=-0.445 shape=(1, 9000, 1)
logits [[ 1.7835151 -1.8766613  1.790101  -3.4783554]]
Iteration 200 of 1000: loss=3.74 " + "l1=2.72" + "l2=1.02 f=-0.408 shape=(1, 9000, 1)
logits [[ 1.3780609 -1.3369693  1.3751999 -3.046866 ]]
Iteration 300 of 1000: loss=3.14 " + "l1=1.97" + "l2=1.17 f=-0.358 shape=(1, 9000, 1)
logits [[ 1.039179   -0.92453784  1.0442741  -2.5893292 ]]
Iteration 400 of 1000: loss=2.61 " + "l1=1.3" + "l2=1.32 f=-0.302 shape=(1, 9000, 1)
logits [[ 0.72895753 -0.5542092   0.7415136  -2.123168  ]]
Iteration 500 of 1000: loss=2.22 " + "l1=0.875" + "l2=1.35 f=-0.285 shape=(1, 9000, 1)
logits [[ 0.49415448 -0.3584731   0.51641434 -1.7906718 ]]
Iteration 600 of 1000: loss=1.88 " + "l1=0.595" + "l2=1.29 f=-0.265 shape=(1, 9000, 1)
logits [[ 0.35109836 -0.21726291  0.37809125 -1.5701284 ]]
Iteration 700 of 1000: loss=1.62 " + "l1=0.365" + "l2=1.25 f=-0.24 shape=(1, 9000, 1)
logits [[ 0.23253557 -0.0885451   0.27678657 -1.3812703 ]]
Iteration 800 of 1000: loss=1.41 " + "l1=0.187" + "l2=1.22 f=-0.216 shape=(1, 9000, 1)
logits [[ 0.1374852  -0.00843615  0.17869993 -1.1723605 ]]
Iteration 900 of 1000: loss=1.25 " + "l1=0.0609" + "l2=1.19 f=-0.2 shape=(1, 9000, 1)
logits [[ 0.06949877  0.04258806  0.10351118 -1.0163939 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.57 " + "l1=3.57" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.223317  -3.2597854  2.8732288 -5.1373878]]
Iteration 100 of 1000: loss=2.85 " + "l1=2.52" + "l2=0.326 f=-0.479 shape=(1, 9000, 1)
logits [[ 2.200437  -2.3824296  2.196889  -3.9322467]]
Iteration 200 of 1000: loss=2.5 " + "l1=2.1" + "l2=0.402 f=-0.449 shape=(1, 9000, 1)
logits [[ 1.8608749 -1.9576589  1.8608532 -3.561985 ]]
Iteration 300 of 1000: loss=2.27 " + "l1=1.82" + "l2=0.448 f=-0.423 shape=(1, 9000, 1)
logits [[ 1.6355202 -1.6738782  1.6338439 -3.2869017]]
Iteration 400 of 1000: loss=2.12 " + "l1=1.62" + "l2=0.492 f=-0.401 shape=(1, 9000, 1)
logits [[ 1.4753561 -1.478896   1.473317  -3.0722423]]
Iteration 500 of 1000: loss=1.99 " + "l1=1.44" + "l2=0.547 f=-0.381 shape=(1, 9000, 1)
logits [[ 1.3163267 -1.2996527  1.3189235 -2.8594768]]
Iteration 600 of 1000: loss=1.85 " + "l1=1.25" + "l2=0.603 f=-0.359 shape=(1, 9000, 1)
logits [[ 1.1438527 -1.1298203  1.1448404 -2.594783 ]]
Iteration 700 of 1000: loss=1.73 " + "l1=1.08" + "l2=0.655 f=-0.336 shape=(1, 9000, 1)
logits [[ 0.99154603 -0.9628639   0.99568367 -2.3699331 ]]
Iteration 800 of 1000: loss=1.58 " + "l1=0.907" + "l2=0.671 f=-0.311 shape=(1, 9000, 1)
logits [[ 0.8446166  -0.8030971   0.84679234 -2.1333113 ]]
Iteration 900 of 1000: loss=1.43 " + "l1=0.729" + "l2=0.705 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.69785064 -0.62086695  0.7048698  -1.9330814 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.02 " + "l1=5.02" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.223317  -3.2597854  2.8732288 -5.1373878]]
Iteration 100 of 1000: loss=3.71 " + "l1=3.15" + "l2=0.558 f=-0.461 shape=(1, 9000, 1)
logits [[ 1.9644374 -2.1027622  1.9655174 -3.672478 ]]
Iteration 200 of 1000: loss=3.17 " + "l1=2.5" + "l2=0.667 f=-0.426 shape=(1, 9000, 1)
logits [[ 1.5986105 -1.6294641  1.5950912 -3.267432 ]]
Iteration 300 of 1000: loss=2.79 " + "l1=2.02" + "l2=0.767 f=-0.395 shape=(1, 9000, 1)
logits [[ 1.3216534 -1.2852842  1.3232691 -2.938026 ]]
Iteration 400 of 1000: loss=2.46 " + "l1=1.59" + "l2=0.87 f=-0.357 shape=(1, 9000, 1)
logits [[ 1.070799  -0.9774259  1.0726418 -2.5925481]]
Iteration 500 of 1000: loss=2.18 " + "l1=1.23" + "l2=0.95 f=-0.319 shape=(1, 9000, 1)
logits [[ 0.8480565 -0.7387596  0.8543868 -2.2388017]]
Iteration 600 of 1000: loss=1.95 " + "l1=0.93" + "l2=1.02 f=-0.29 shape=(1, 9000, 1)
logits [[ 0.6500436  -0.53920794  0.66126823 -1.9328113 ]]
Iteration 700 of 1000: loss=1.69 " + "l1=0.655" + "l2=1.04 f=-0.27 shape=(1, 9000, 1)
logits [[ 0.45725778 -0.35046566  0.49529454 -1.6806642 ]]
Iteration 800 of 1000: loss=1.48 " + "l1=0.468" + "l2=1.02 f=-0.251 shape=(1, 9000, 1)
logits [[ 0.36448038 -0.22739746  0.37590545 -1.5181168 ]]
Iteration 900 of 1000: loss=1.34 " + "l1=0.329" + "l2=1.01 f=-0.232 shape=(1, 9000, 1)
logits [[ 0.2457918  -0.13696702  0.28745311 -1.3262296 ]]
--- 276.3024401664734 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0035 " + "l1=0.0035" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.223317  -3.2597854  2.8732288 -5.1373878]]
Iteration 100 of 1000: loss=0.0034 " + "l1=0.00328" + "l2=0.000112 f=-0.574 shape=(1, 9000, 1)
logits [[ 3.2026036 -3.2593815  2.8742526 -5.112746 ]]
Iteration 200 of 1000: loss=0.00336 " + "l1=0.00327" + "l2=9.32e-05 f=-0.574 shape=(1, 9000, 1)
logits [[ 3.2013452 -3.259051   2.8742101 -5.111154 ]]
Iteration 300 of 1000: loss=0.00335 " + "l1=0.00324" + "l2=0.000107 f=-0.573 shape=(1, 9000, 1)
logits [[ 3.1984057 -3.2587154  2.8741865 -5.1072965]]
Iteration 400 of 1000: loss=0.00339 " + "l1=0.00321" + "l2=0.000179 f=-0.573 shape=(1, 9000, 1)
logits [[ 3.1950414 -3.2582307  2.874066  -5.102817 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.035 " + "l1=0.035" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.223317  -3.2597854  2.8732288 -5.1373878]]
Iteration 100 of 1000: loss=0.0249 " + "l1=0.0193" + "l2=0.00559 f=-0.565 shape=(1, 9000, 1)
logits [[ 3.0798647 -3.256635   2.8869264 -4.969211 ]]
Iteration 200 of 1000: loss=0.0213 " + "l1=0.0136" + "l2=0.00772 f=-0.561 shape=(1, 9000, 1)
logits [[ 3.0277808 -3.2561853  2.8920712 -4.907602 ]]
Iteration 300 of 1000: loss=0.0187 " + "l1=0.00942" + "l2=0.00929 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.9880116 -3.2578716  2.8938515 -4.855777 ]]
Iteration 400 of 1000: loss=0.0167 " + "l1=0.00603" + "l2=0.0107 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.9560983 -3.261646   2.895764  -4.812287 ]]
Iteration 500 of 1000: loss=0.0149 " + "l1=0.00319" + "l2=0.0117 f=-0.554 shape=(1, 9000, 1)
logits [[ 2.9289026 -3.2654514  2.8970177 -4.7759953]]
Iteration 600 of 1000: loss=0.0132 " + "l1=0.000725" + "l2=0.0125 f=-0.553 shape=(1, 9000, 1)
logits [[ 2.9036946 -3.2675886  2.8964474 -4.7429976]]
Iteration 700 of 1000: loss=0.0119 " + "l1=0.000154" + "l2=0.0117 f=-0.553 shape=(1, 9000, 1)
logits [[ 2.895564  -3.2684329  2.8940284 -4.73138  ]]
Iteration 800 of 1000: loss=0.0109 " + "l1=7.3e-05" + "l2=0.0109 f=-0.553 shape=(1, 9000, 1)
logits [[ 2.8930905 -3.27086    2.8923607 -4.726441 ]]
Iteration 900 of 1000: loss=0.0102 " + "l1=0.000207" + "l2=0.00998 f=-0.553 shape=(1, 9000, 1)
logits [[ 2.893474  -3.2738826  2.8914037 -4.724632 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0193 " + "l1=0.0193" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.223317  -3.2597854  2.8732288 -5.1373878]]
Iteration 100 of 1000: loss=0.0162 " + "l1=0.0144" + "l2=0.00173 f=-0.57 shape=(1, 9000, 1)
logits [[ 3.1419523 -3.2582107  2.879767  -5.0415936]]
Iteration 200 of 1000: loss=0.0151 " + "l1=0.0129" + "l2=0.00227 f=-0.567 shape=(1, 9000, 1)
logits [[ 3.1154745 -3.2563992  2.8813934 -5.0092893]]
Iteration 300 of 1000: loss=0.0143 " + "l1=0.0115" + "l2=0.0028 f=-0.565 shape=(1, 9000, 1)
logits [[ 3.0922425 -3.2548492  2.8824081 -4.978796 ]]
Iteration 400 of 1000: loss=0.0136 " + "l1=0.0104" + "l2=0.00328 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.0711117 -3.2541232  2.882752  -4.950444 ]]
Iteration 500 of 1000: loss=0.013 " + "l1=0.0093" + "l2=0.00374 f=-0.561 shape=(1, 9000, 1)
logits [[ 3.0526323 -3.254863   2.8836195 -4.9259896]]
Iteration 600 of 1000: loss=0.0125 " + "l1=0.00845" + "l2=0.00406 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.038066  -3.2568204  2.884456  -4.90637  ]]
Iteration 700 of 1000: loss=0.0121 " + "l1=0.00766" + "l2=0.00442 f=-0.559 shape=(1, 9000, 1)
logits [[ 3.024735  -3.258837   2.8854973 -4.888952 ]]
Iteration 800 of 1000: loss=0.0117 " + "l1=0.00697" + "l2=0.00478 f=-0.559 shape=(1, 9000, 1)
logits [[ 3.0130954 -3.2613564  2.8863645 -4.873818 ]]
Iteration 900 of 1000: loss=0.0114 " + "l1=0.00631" + "l2=0.00507 f=-0.559 shape=(1, 9000, 1)
logits [[ 3.0017724 -3.2637746  2.8870325 -4.8591638]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0271 " + "l1=0.0271" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.223317  -3.2597854  2.8732288 -5.1373878]]
Iteration 100 of 1000: loss=0.021 " + "l1=0.0177" + "l2=0.00336 f=-0.567 shape=(1, 9000, 1)
logits [[ 3.1107504 -3.2569704  2.882616  -5.005415 ]]
Iteration 200 of 1000: loss=0.0189 " + "l1=0.0143" + "l2=0.00467 f=-0.564 shape=(1, 9000, 1)
logits [[ 3.0707414 -3.2554214  2.8867395 -4.9573174]]
Iteration 300 of 1000: loss=0.0173 " + "l1=0.0116" + "l2=0.00563 f=-0.561 shape=(1, 9000, 1)
logits [[ 3.039243  -3.25571    2.8889701 -4.9175386]]
Iteration 400 of 1000: loss=0.016 " + "l1=0.00966" + "l2=0.00634 f=-0.559 shape=(1, 9000, 1)
logits [[ 3.0148218 -3.2578561  2.890129  -4.883781 ]]
Iteration 500 of 1000: loss=0.015 " + "l1=0.00797" + "l2=0.00699 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.9932246 -3.2600386  2.890447  -4.85433  ]]
Iteration 600 of 1000: loss=0.0139 " + "l1=0.00632" + "l2=0.0076 f=-0.557 shape=(1, 9000, 1)
logits [[ 2.9728634 -3.2631567  2.8912745 -4.8271613]]
Iteration 700 of 1000: loss=0.013 " + "l1=0.00489" + "l2=0.0081 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.9548707 -3.266491   2.891761  -4.802242 ]]
Iteration 800 of 1000: loss=0.0123 " + "l1=0.00357" + "l2=0.00869 f=-0.555 shape=(1, 9000, 1)
logits [[ 2.938821  -3.2703025  2.8927011 -4.781121 ]]
Iteration 900 of 1000: loss=0.0113 " + "l1=0.00234" + "l2=0.00899 f=-0.555 shape=(1, 9000, 1)
logits [[ 2.9247236 -3.2746806  2.8945904 -4.763619 ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0311 " + "l1=0.0311" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.223317  -3.2597854  2.8732288 -5.1373878]]
Iteration 100 of 1000: loss=0.0231 " + "l1=0.0187" + "l2=0.00439 f=-0.566 shape=(1, 9000, 1)
logits [[ 3.0953586 -3.2566564  2.8845813 -4.9868703]]
Iteration 200 of 1000: loss=0.0203 " + "l1=0.0141" + "l2=0.00614 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.0486333 -3.2559261  2.8894675 -4.931819 ]]
Iteration 300 of 1000: loss=0.0182 " + "l1=0.0109" + "l2=0.00732 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.014982  -3.257485   2.8920052 -4.887888 ]]
Iteration 400 of 1000: loss=0.0166 " + "l1=0.0082" + "l2=0.00838 f=-0.557 shape=(1, 9000, 1)
logits [[ 2.9850836 -3.2596858  2.892713  -4.847799 ]]
Iteration 500 of 1000: loss=0.0151 " + "l1=0.00585" + "l2=0.0093 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.9600577 -3.2636015  2.8941858 -4.813783 ]]
Iteration 600 of 1000: loss=0.0138 " + "l1=0.00389" + "l2=0.00994 f=-0.554 shape=(1, 9000, 1)
logits [[ 2.9384909 -3.2667615  2.894618  -4.7842283]]
Iteration 700 of 1000: loss=0.0127 " + "l1=0.00209" + "l2=0.0106 f=-0.554 shape=(1, 9000, 1)
logits [[ 2.9179964 -3.2693295  2.894477  -4.757611 ]]
Iteration 800 of 1000: loss=0.0115 " + "l1=0.000524" + "l2=0.011 f=-0.554 shape=(1, 9000, 1)
logits [[ 2.9014053 -3.272948   2.8954997 -4.7380033]]
Iteration 900 of 1000: loss=0.0106 " + "l1=6.49e-05" + "l2=0.0105 f=-0.554 shape=(1, 9000, 1)
logits [[ 2.895625  -3.276293   2.8948936 -4.728461 ]]
--- 260.18810510635376 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0836 " + "l1=0.0836" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.223317  -3.2597854  2.8732288 -5.1373878]]
Iteration 100 of 1000: loss=0.0827 " + "l1=0.0822" + "l2=0.000516 f=-0.567 shape=(1, 9000, 1)
logits [[ 3.1681893 -3.2390437  2.853184  -5.052121 ]]
Iteration 200 of 1000: loss=0.0824 " + "l1=0.0818" + "l2=0.000584 f=-0.565 shape=(1, 9000, 1)
logits [[ 3.1544628 -3.2329242  2.8481042 -5.030137 ]]
Iteration 300 of 1000: loss=0.0822 " + "l1=0.0815" + "l2=0.00072 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.1396973 -3.226833   2.8426206 -5.0060453]]
Iteration 400 of 1000: loss=0.082 " + "l1=0.0811" + "l2=0.000886 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.1261077 -3.2216094  2.8374152 -4.9837027]]
Iteration 500 of 1000: loss=0.0818 " + "l1=0.0808" + "l2=0.00106 f=-0.558 shape=(1, 9000, 1)
logits [[ 3.1136768 -3.2173848  2.8326685 -4.9628   ]]
Iteration 600 of 1000: loss=0.0818 " + "l1=0.0805" + "l2=0.00129 f=-0.557 shape=(1, 9000, 1)
logits [[ 3.1025648 -3.2142236  2.8284898 -4.9437966]]
Iteration 700 of 1000: loss=0.0816 " + "l1=0.0802" + "l2=0.00143 f=-0.555 shape=(1, 9000, 1)
logits [[ 3.0919049 -3.2113512  2.8244486 -4.9257655]]
Iteration 800 of 1000: loss=0.0815 " + "l1=0.0799" + "l2=0.00158 f=-0.554 shape=(1, 9000, 1)
logits [[ 3.08271   -3.2089872  2.8205748 -4.910441 ]]
Iteration 900 of 1000: loss=0.0814 " + "l1=0.0797" + "l2=0.0017 f=-0.553 shape=(1, 9000, 1)
logits [[ 3.0740752 -3.2068012  2.816884  -4.8959546]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.836 " + "l1=0.836" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.223317  -3.2597854  2.8732288 -5.1373878]]
Iteration 100 of 1000: loss=0.762 " + "l1=0.726" + "l2=0.0362 f=-0.519 shape=(1, 9000, 1)
logits [[ 2.789839  -3.1148677  2.7182233 -4.467845 ]]
Iteration 200 of 1000: loss=0.731 " + "l1=0.687" + "l2=0.0436 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.6461887 -3.0572486  2.644186  -4.226325 ]]
Iteration 300 of 1000: loss=0.71 " + "l1=0.664" + "l2=0.0463 f=-0.484 shape=(1, 9000, 1)
logits [[ 2.5692775 -3.0077376  2.56951   -4.067393 ]]
Iteration 400 of 1000: loss=0.691 " + "l1=0.64" + "l2=0.0514 f=-0.471 shape=(1, 9000, 1)
logits [[ 2.4907753 -2.959206   2.4914298 -3.9081762]]
Iteration 500 of 1000: loss=0.672 " + "l1=0.614" + "l2=0.0584 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.3953116 -2.9007185  2.4078622 -3.7299404]]
Iteration 600 of 1000: loss=0.653 " + "l1=0.588" + "l2=0.0643 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.2999034 -2.8614883  2.3370788 -3.5477736]]
Iteration 700 of 1000: loss=0.633 " + "l1=0.56" + "l2=0.0729 f=-0.429 shape=(1, 9000, 1)
logits [[ 2.1873455 -2.8098586  2.255338  -3.34768  ]]
Iteration 800 of 1000: loss=0.613 " + "l1=0.533" + "l2=0.0799 f=-0.42 shape=(1, 9000, 1)
logits [[ 2.0815232 -2.7808948  2.1757226 -3.157872 ]]
Iteration 900 of 1000: loss=0.596 " + "l1=0.511" + "l2=0.0849 f=-0.413 shape=(1, 9000, 1)
logits [[ 1.9937806 -2.7495604  2.1060128 -3.0026665]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.36 " + "l1=8.36" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.223317  -3.2597854  2.8732288 -5.1373878]]
Iteration 100 of 1000: loss=4.83 " + "l1=3.33" + "l2=1.5 f=-0.279 shape=(1, 9000, 1)
logits [[ 1.157189  -2.3365467  1.6961352 -1.630904 ]]
Iteration 200 of 1000: loss=3.32 " + "l1=1.35" + "l2=1.97 f=-0.232 shape=(1, 9000, 1)
logits [[ 0.289857   -1.9054981   1.0210965  -0.33386716]]
Iteration 300 of 1000: loss=2.27 " + "l1=0.244" + "l2=2.03 f=-0.199 shape=(1, 9000, 1)
logits [[-0.1780805  -1.6785958   0.6525101   0.40807855]]
Iteration 400 of 1000: loss=1.66 " + "l1=0" + "l2=1.66 f=-0.187 shape=(1, 9000, 1)
logits [[-0.28512245 -1.5993519   0.56406313  0.5728667 ]]
Iteration 500 of 1000: loss=1.37 " + "l1=0.0267" + "l2=1.35 f=-0.185 shape=(1, 9000, 1)
logits [[-0.2775474  -1.5963931   0.5794796   0.55274624]]
Iteration 600 of 1000: loss=1.2 " + "l1=0.00551" + "l2=1.19 f=-0.183 shape=(1, 9000, 1)
logits [[-0.28055066 -1.5885358   0.5707027   0.56519747]]
Iteration 700 of 1000: loss=1.08 " + "l1=0" + "l2=1.08 f=-0.182 shape=(1, 9000, 1)
logits [[-0.2742833  -1.5820639   0.55930996  0.5694314 ]]
Iteration 800 of 1000: loss=0.997 " + "l1=0" + "l2=0.997 f=-0.182 shape=(1, 9000, 1)
logits [[-0.26052308 -1.5916718   0.5585887   0.56476825]]
Iteration 900 of 1000: loss=0.934 " + "l1=0" + "l2=0.934 f=-0.181 shape=(1, 9000, 1)
logits [[-0.24569616 -1.600583    0.55279434  0.57132256]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.6 " + "l1=4.6" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.223317  -3.2597854  2.8732288 -5.1373878]]
Iteration 100 of 1000: loss=3.26 " + "l1=2.7" + "l2=0.566 f=-0.378 shape=(1, 9000, 1)
logits [[ 1.8643767 -2.6621144  2.094163  -2.8095422]]
Iteration 200 of 1000: loss=2.67 " + "l1=1.99" + "l2=0.684 f=-0.306 shape=(1, 9000, 1)
logits [[ 1.3246168 -2.4187124  1.7388095 -1.8705697]]
Iteration 300 of 1000: loss=2.15 " + "l1=1.36" + "l2=0.788 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.77964747 -2.1260588   1.3508567  -1.1264864 ]]
Iteration 400 of 1000: loss=1.72 " + "l1=0.842" + "l2=0.873 f=-0.253 shape=(1, 9000, 1)
logits [[ 0.38231012 -1.9509432   1.0436887  -0.48756015]]
Iteration 500 of 1000: loss=1.41 " + "l1=0.516" + "l2=0.893 f=-0.228 shape=(1, 9000, 1)
logits [[ 0.1486932  -1.8529261   0.8653947  -0.07325939]]
Iteration 600 of 1000: loss=1.19 " + "l1=0.243" + "l2=0.944 f=-0.216 shape=(1, 9000, 1)
logits [[-0.05893853 -1.7933519   0.7162087   0.27351385]]
Iteration 700 of 1000: loss=0.997 " + "l1=0.0184" + "l2=0.979 f=-0.2 shape=(1, 9000, 1)
logits [[-0.2293809 -1.7275468  0.5951038  0.5616449]]
Iteration 800 of 1000: loss=0.878 " + "l1=0.00466" + "l2=0.873 f=-0.198 shape=(1, 9000, 1)
logits [[-0.23448795 -1.7125237   0.58201206  0.5735397 ]]
Iteration 900 of 1000: loss=0.795 " + "l1=0.00234" + "l2=0.793 f=-0.198 shape=(1, 9000, 1)
logits [[-0.22809038 -1.7151302   0.5786182   0.5743669 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.72 " + "l1=2.72" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.223317  -3.2597854  2.8732288 -5.1373878]]
Iteration 100 of 1000: loss=2.16 " + "l1=1.94" + "l2=0.216 f=-0.445 shape=(1, 9000, 1)
logits [[ 2.311027  -2.8587372  2.37398   -3.60685  ]]
Iteration 200 of 1000: loss=1.95 " + "l1=1.68" + "l2=0.276 f=-0.389 shape=(1, 9000, 1)
logits [[ 1.9853926 -2.6865654  2.152953  -3.0058253]]
Iteration 300 of 1000: loss=1.72 " + "l1=1.39" + "l2=0.331 f=-0.345 shape=(1, 9000, 1)
logits [[ 1.6028103 -2.5498204  1.9145945 -2.3472905]]
Iteration 400 of 1000: loss=1.52 " + "l1=1.16" + "l2=0.365 f=-0.324 shape=(1, 9000, 1)
logits [[ 1.2955577 -2.4189343  1.6920024 -1.8656654]]
Iteration 500 of 1000: loss=1.35 " + "l1=0.932" + "l2=0.418 f=-0.306 shape=(1, 9000, 1)
logits [[ 0.9698768 -2.2421103  1.4581    -1.4083583]]
Iteration 600 of 1000: loss=1.2 " + "l1=0.741" + "l2=0.458 f=-0.284 shape=(1, 9000, 1)
logits [[ 0.7285277 -2.1376266  1.2772636 -1.0025556]]
Iteration 700 of 1000: loss=1.08 " + "l1=0.592" + "l2=0.486 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.54427254 -2.052549    1.13419    -0.68799144]]
Iteration 800 of 1000: loss=0.987 " + "l1=0.486" + "l2=0.501 f=-0.253 shape=(1, 9000, 1)
logits [[ 0.4193521  -2.0042655   1.0328289  -0.46154198]]
Iteration 900 of 1000: loss=0.915 " + "l1=0.399" + "l2=0.517 f=-0.241 shape=(1, 9000, 1)
logits [[ 0.32651258 -1.9520336   0.94368124 -0.2827236 ]]
--- 295.57429027557373 seconds ---
Adv result:3
Loading record A03635
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0516 " + "l1=0.0516" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.4146533 -1.7485962  2.4188392 -6.0085225]]
Iteration 100 of 1000: loss=0.0512 " + "l1=0.0509" + "l2=0.00029 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.3719807 -1.7211003  2.3979564 -5.971348 ]]
Iteration 200 of 1000: loss=0.0511 " + "l1=0.0508" + "l2=0.00028 f=-0.48 shape=(1, 9000, 1)
logits [[ 3.364489  -1.7168581  2.3936923 -5.9619   ]]
Iteration 300 of 1000: loss=0.051 " + "l1=0.0506" + "l2=0.000352 f=-0.48 shape=(1, 9000, 1)
logits [[ 3.3538072 -1.7105914  2.3879566 -5.949915 ]]
Iteration 400 of 1000: loss=0.0509 " + "l1=0.0505" + "l2=0.000407 f=-0.479 shape=(1, 9000, 1)
logits [[ 3.341839  -1.703448   2.3815477 -5.9363728]]
Iteration 500 of 1000: loss=0.0508 " + "l1=0.0503" + "l2=0.00052 f=-0.478 shape=(1, 9000, 1)
logits [[ 3.329241  -1.6957961  2.3749738 -5.9222226]]
Iteration 600 of 1000: loss=0.0506 " + "l1=0.0501" + "l2=0.00059 f=-0.478 shape=(1, 9000, 1)
logits [[ 3.3171806 -1.6884971  2.3687544 -5.908596 ]]
Iteration 700 of 1000: loss=0.0506 " + "l1=0.0499" + "l2=0.000755 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.3045874 -1.6810054  2.3623877 -5.894643 ]]
Iteration 800 of 1000: loss=0.0505 " + "l1=0.0497" + "l2=0.00089 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.292295  -1.6735125  2.3561192 -5.8814774]]
Iteration 900 of 1000: loss=0.0505 " + "l1=0.0495" + "l2=0.000998 f=-0.476 shape=(1, 9000, 1)
logits [[ 3.2810657 -1.6668609  2.350504  -5.8693266]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.516 " + "l1=0.516" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.4146533 -1.7485962  2.4188392 -6.0085225]]
Iteration 100 of 1000: loss=0.477 " + "l1=0.457" + "l2=0.0199 f=-0.482 shape=(1, 9000, 1)
logits [[ 3.0517693 -1.5173712  2.2377973 -5.698901 ]]
Iteration 200 of 1000: loss=0.458 " + "l1=0.432" + "l2=0.0266 f=-0.479 shape=(1, 9000, 1)
logits [[ 2.880201  -1.4358761  2.158631  -5.519139 ]]
Iteration 300 of 1000: loss=0.442 " + "l1=0.409" + "l2=0.0331 f=-0.473 shape=(1, 9000, 1)
logits [[ 2.7226388 -1.3653582  2.0862274 -5.3355484]]
Iteration 400 of 1000: loss=0.428 " + "l1=0.389" + "l2=0.0383 f=-0.466 shape=(1, 9000, 1)
logits [[ 2.584368  -1.3073835  2.0231004 -5.165554 ]]
Iteration 500 of 1000: loss=0.415 " + "l1=0.371" + "l2=0.0436 f=-0.456 shape=(1, 9000, 1)
logits [[ 2.459844  -1.2514764  1.9685856 -5.0023794]]
Iteration 600 of 1000: loss=0.402 " + "l1=0.352" + "l2=0.0499 f=-0.442 shape=(1, 9000, 1)
logits [[ 2.3325853 -1.1844138  1.9086384 -4.8243375]]
Iteration 700 of 1000: loss=0.39 " + "l1=0.334" + "l2=0.0558 f=-0.428 shape=(1, 9000, 1)
logits [[ 2.2141595 -1.1230847  1.8536196 -4.656231 ]]
Iteration 800 of 1000: loss=0.381 " + "l1=0.322" + "l2=0.0592 f=-0.422 shape=(1, 9000, 1)
logits [[ 2.1255682 -1.089809   1.8148143 -4.540306 ]]
Iteration 900 of 1000: loss=0.373 " + "l1=0.312" + "l2=0.0614 f=-0.418 shape=(1, 9000, 1)
logits [[ 2.0557182 -1.0645654  1.783814  -4.4464545]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.16 " + "l1=5.16" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.4146533 -1.7485962  2.4188392 -6.0085225]]
Iteration 100 of 1000: loss=2.55 " + "l1=1.71" + "l2=0.844 f=-0.453 shape=(1, 9000, 1)
logits [[ 1.2725526 -0.4221293  1.2841285 -3.9481218]]
Iteration 200 of 1000: loss=1.95 " + "l1=1.12" + "l2=0.823 f=-0.397 shape=(1, 9000, 1)
logits [[ 0.935426   -0.13637386  0.9865453  -3.3728225 ]]
Iteration 300 of 1000: loss=1.55 " + "l1=0.719" + "l2=0.832 f=-0.367 shape=(1, 9000, 1)
logits [[ 0.54895085  0.0780977   0.79711604 -2.8914568 ]]
Iteration 400 of 1000: loss=1.29 " + "l1=0.446" + "l2=0.841 f=-0.343 shape=(1, 9000, 1)
logits [[ 0.21298513  0.19461061  0.6406073  -2.4218175 ]]
Iteration 500 of 1000: loss=1.04 " + "l1=0.167" + "l2=0.873 f=-0.338 shape=(1, 9000, 1)
logits [[-0.18872592  0.32106036  0.48836622 -1.9713806 ]]
Iteration 600 of 1000: loss=0.864 " + "l1=0.00744" + "l2=0.857 f=-0.334 shape=(1, 9000, 1)
logits [[-0.40341932  0.38722748  0.3946642  -1.7136458 ]]
Iteration 700 of 1000: loss=0.746 " + "l1=0" + "l2=0.746 f=-0.323 shape=(1, 9000, 1)
logits [[-0.43089166  0.36104095  0.35728678 -1.5797704 ]]
Iteration 800 of 1000: loss=0.665 " + "l1=0.00428" + "l2=0.661 f=-0.305 shape=(1, 9000, 1)
logits [[-0.42718482  0.33188632  0.33616808 -1.459634  ]]
Iteration 900 of 1000: loss=0.605 " + "l1=0" + "l2=0.605 f=-0.291 shape=(1, 9000, 1)
logits [[-0.4314139  0.3211165  0.3193463 -1.3724195]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.84 " + "l1=2.84" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.4146533 -1.7485962  2.4188392 -6.0085225]]
Iteration 100 of 1000: loss=1.76 " + "l1=1.3" + "l2=0.457 f=-0.479 shape=(1, 9000, 1)
logits [[ 1.6365618 -0.7317833  1.6306964 -4.4521885]]
Iteration 200 of 1000: loss=1.42 " + "l1=0.993" + "l2=0.427 f=-0.431 shape=(1, 9000, 1)
logits [[ 1.3180193  -0.48715484  1.3186878  -3.874847  ]]
Iteration 300 of 1000: loss=1.21 " + "l1=0.801" + "l2=0.413 f=-0.398 shape=(1, 9000, 1)
logits [[ 1.1054252  -0.33574593  1.120783   -3.4842339 ]]
Iteration 400 of 1000: loss=1.1 " + "l1=0.688" + "l2=0.41 f=-0.373 shape=(1, 9000, 1)
logits [[ 0.9947015  -0.24937843  1.0019319  -3.237656  ]]
Iteration 500 of 1000: loss=1 " + "l1=0.581" + "l2=0.421 f=-0.344 shape=(1, 9000, 1)
logits [[ 0.8203899  -0.16512825  0.89180756 -2.921691  ]]
Iteration 600 of 1000: loss=0.912 " + "l1=0.464" + "l2=0.448 f=-0.328 shape=(1, 9000, 1)
logits [[ 0.5601129  -0.07172748  0.7725273  -2.5745485 ]]
Iteration 700 of 1000: loss=0.827 " + "l1=0.365" + "l2=0.462 f=-0.327 shape=(1, 9000, 1)
logits [[ 0.2965918   0.01337004  0.6775306  -2.2963824 ]]
Iteration 800 of 1000: loss=0.743 " + "l1=0.284" + "l2=0.46 f=-0.32 shape=(1, 9000, 1)
logits [[ 0.11429024  0.07309008  0.5887834  -2.0565255 ]]
Iteration 900 of 1000: loss=0.666 " + "l1=0.205" + "l2=0.461 f=-0.318 shape=(1, 9000, 1)
logits [[-0.04301561  0.1351414   0.5083809  -1.8735694 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4 " + "l1=4" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.4146533 -1.7485962  2.4188392 -6.0085225]]
Iteration 100 of 1000: loss=2.18 " + "l1=1.54" + "l2=0.646 f=-0.456 shape=(1, 9000, 1)
logits [[ 1.4291452 -0.5413409  1.4418926 -4.153348 ]]
Iteration 200 of 1000: loss=1.71 " + "l1=1.1" + "l2=0.612 f=-0.411 shape=(1, 9000, 1)
logits [[ 1.1193247 -0.2925287  1.1295211 -3.5984175]]
Iteration 300 of 1000: loss=1.44 " + "l1=0.829" + "l2=0.61 f=-0.372 shape=(1, 9000, 1)
logits [[ 0.8483519  -0.12065988  0.9485814  -3.1658938 ]]
Iteration 400 of 1000: loss=1.24 " + "l1=0.609" + "l2=0.63 f=-0.344 shape=(1, 9000, 1)
logits [[ 0.55680585  0.00977471  0.7951083  -2.7382405 ]]
Iteration 500 of 1000: loss=1.07 " + "l1=0.423" + "l2=0.651 f=-0.329 shape=(1, 9000, 1)
logits [[ 0.27797678  0.11247634  0.65834355 -2.363546  ]]
Iteration 600 of 1000: loss=0.925 " + "l1=0.242" + "l2=0.682 f=-0.326 shape=(1, 9000, 1)
logits [[-0.0425364   0.21499023  0.52752495 -2.0035682 ]]
Iteration 700 of 1000: loss=0.796 " + "l1=0.127" + "l2=0.669 f=-0.322 shape=(1, 9000, 1)
logits [[-0.24535912  0.2697438   0.43393123 -1.7474246 ]]
Iteration 800 of 1000: loss=0.692 " + "l1=0.0364" + "l2=0.655 f=-0.311 shape=(1, 9000, 1)
logits [[-0.37193382  0.31315255  0.36014694 -1.54447   ]]
Iteration 900 of 1000: loss=0.604 " + "l1=0.00354" + "l2=0.601 f=-0.292 shape=(1, 9000, 1)
logits [[-0.43119773  0.32334802  0.32791355 -1.3882804 ]]
--- 294.62079763412476 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00996 " + "l1=0.00996" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.4146533 -1.7485962  2.4188392 -6.0085225]]
Iteration 100 of 1000: loss=0.00987 " + "l1=0.00974" + "l2=0.00013 f=-0.482 shape=(1, 9000, 1)
logits [[ 3.3904884 -1.7444934  2.4167323 -5.99023  ]]
Iteration 200 of 1000: loss=0.00983 " + "l1=0.00974" + "l2=8.5e-05 f=-0.482 shape=(1, 9000, 1)
logits [[ 3.3903906 -1.7443866  2.416316  -5.9894047]]
Iteration 300 of 1000: loss=0.00981 " + "l1=0.00972" + "l2=9.86e-05 f=-0.482 shape=(1, 9000, 1)
logits [[ 3.3876119 -1.7440169  2.4160764 -5.986641 ]]
Iteration 400 of 1000: loss=0.00984 " + "l1=0.00968" + "l2=0.000156 f=-0.482 shape=(1, 9000, 1)
logits [[ 3.3840866 -1.7435879  2.4156933 -5.98328  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0996 " + "l1=0.0996" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.4146533 -1.7485962  2.4188392 -6.0085225]]
Iteration 100 of 1000: loss=0.0905 " + "l1=0.0854" + "l2=0.00507 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.2683578 -1.7294277  2.414382  -5.9015827]]
Iteration 200 of 1000: loss=0.0866 " + "l1=0.0799" + "l2=0.00674 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.2086604 -1.7235625  2.4095824 -5.844267 ]]
Iteration 300 of 1000: loss=0.0827 " + "l1=0.0744" + "l2=0.00832 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.1479344 -1.7177471  2.404354  -5.7816644]]
Iteration 400 of 1000: loss=0.0785 " + "l1=0.0684" + "l2=0.0101 f=-0.485 shape=(1, 9000, 1)
logits [[ 3.0772474 -1.7070297  2.3931124 -5.7044196]]
Iteration 500 of 1000: loss=0.0739 " + "l1=0.062" + "l2=0.012 f=-0.484 shape=(1, 9000, 1)
logits [[ 2.997667  -1.696795   2.3780787 -5.613607 ]]
Iteration 600 of 1000: loss=0.0689 " + "l1=0.0546" + "l2=0.0143 f=-0.482 shape=(1, 9000, 1)
logits [[ 2.9166124 -1.703527   2.3710377 -5.5112624]]
Iteration 700 of 1000: loss=0.0642 " + "l1=0.0475" + "l2=0.0168 f=-0.48 shape=(1, 9000, 1)
logits [[ 2.8420217 -1.7163831  2.367473  -5.4149237]]
Iteration 800 of 1000: loss=0.0599 " + "l1=0.0413" + "l2=0.0186 f=-0.477 shape=(1, 9000, 1)
logits [[ 2.7740521 -1.7175182  2.3613384 -5.3271933]]
Iteration 900 of 1000: loss=0.0559 " + "l1=0.0356" + "l2=0.0202 f=-0.474 shape=(1, 9000, 1)
logits [[ 2.7071817 -1.709701   2.3506992 -5.2438407]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.996 " + "l1=0.996" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.4146533 -1.7485962  2.4188392 -6.0085225]]
Iteration 100 of 1000: loss=0.178 " + "l1=0" + "l2=0.178 f=-0.492 shape=(1, 9000, 1)
logits [[ 2.476716  -1.7317203  2.482455  -5.1944165]]
Iteration 200 of 1000: loss=0.128 " + "l1=0.00382" + "l2=0.124 f=-0.48 shape=(1, 9000, 1)
logits [[ 2.4625428 -1.7353443  2.4587264 -5.1073556]]
Iteration 300 of 1000: loss=0.101 " + "l1=0" + "l2=0.101 f=-0.47 shape=(1, 9000, 1)
logits [[ 2.4259489 -1.7382519  2.432966  -5.0003586]]
Iteration 400 of 1000: loss=0.0805 " + "l1=0" + "l2=0.0805 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.4084568 -1.7446791  2.410847  -4.928168 ]]
Iteration 500 of 1000: loss=0.0705 " + "l1=0" + "l2=0.0705 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.3779078 -1.744653   2.39642   -4.8658032]]
Iteration 600 of 1000: loss=0.0591 " + "l1=0" + "l2=0.0591 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.367024  -1.7333648  2.376991  -4.8389373]]
Iteration 700 of 1000: loss=0.0511 " + "l1=0" + "l2=0.0511 f=-0.456 shape=(1, 9000, 1)
logits [[ 2.3649533 -1.7320004  2.36574   -4.822664 ]]
Iteration 800 of 1000: loss=0.0465 " + "l1=0" + "l2=0.0465 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.3495808 -1.7289909  2.3536663 -4.795157 ]]
Iteration 900 of 1000: loss=0.0433 " + "l1=0" + "l2=0.0433 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.3276727 -1.7199408  2.3393714 -4.7661386]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.548 " + "l1=0.548" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.4146533 -1.7485962  2.4188392 -6.0085225]]
Iteration 100 of 1000: loss=0.182 " + "l1=0" + "l2=0.182 f=-0.493 shape=(1, 9000, 1)
logits [[ 2.471841  -1.7254692  2.4736567 -5.192923 ]]
Iteration 200 of 1000: loss=0.117 " + "l1=0" + "l2=0.117 f=-0.477 shape=(1, 9000, 1)
logits [[ 2.4504733 -1.7473328  2.451999  -5.062216 ]]
Iteration 300 of 1000: loss=0.0901 " + "l1=0" + "l2=0.0901 f=-0.467 shape=(1, 9000, 1)
logits [[ 2.4296622 -1.7651534  2.4323337 -4.963016 ]]
Iteration 400 of 1000: loss=0.0758 " + "l1=0" + "l2=0.0758 f=-0.46 shape=(1, 9000, 1)
logits [[ 2.3967528 -1.7688035  2.4129522 -4.882219 ]]
Iteration 500 of 1000: loss=0.0624 " + "l1=0.00219" + "l2=0.0603 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.3942065 -1.7605613  2.3902218 -4.854418 ]]
Iteration 600 of 1000: loss=0.0533 " + "l1=0.00112" + "l2=0.0522 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.3762717 -1.7511994  2.3742373 -4.8253794]]
Iteration 700 of 1000: loss=0.0468 " + "l1=0.000581" + "l2=0.0462 f=-0.456 shape=(1, 9000, 1)
logits [[ 2.3626995 -1.7473469  2.3616433 -4.801292 ]]
Iteration 800 of 1000: loss=0.0424 " + "l1=0" + "l2=0.0424 f=-0.456 shape=(1, 9000, 1)
logits [[ 2.3461533 -1.7411752  2.3505316 -4.781012 ]]
Iteration 900 of 1000: loss=0.0389 " + "l1=0.000448" + "l2=0.0385 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.343448  -1.7363341  2.3426332 -4.776056 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.324 " + "l1=0.324" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.4146533 -1.7485962  2.4188392 -6.0085225]]
Iteration 100 of 1000: loss=0.218 " + "l1=0.154" + "l2=0.0644 f=-0.494 shape=(1, 9000, 1)
logits [[ 2.886702  -1.6964306  2.4130611 -5.580949 ]]
Iteration 200 of 1000: loss=0.135 " + "l1=0.0198" + "l2=0.115 f=-0.484 shape=(1, 9000, 1)
logits [[ 2.4972184 -1.7410212  2.4363837 -5.128661 ]]
Iteration 300 of 1000: loss=0.0914 " + "l1=0" + "l2=0.0914 f=-0.469 shape=(1, 9000, 1)
logits [[ 2.42039   -1.7679064  2.4243138 -4.9513564]]
Iteration 400 of 1000: loss=0.071 " + "l1=0" + "l2=0.071 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.3939857 -1.7723218  2.398918  -4.8629775]]
Iteration 500 of 1000: loss=0.0585 " + "l1=0" + "l2=0.0585 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.377584  -1.7675834  2.3830416 -4.8255796]]
Iteration 600 of 1000: loss=0.0494 " + "l1=0" + "l2=0.0494 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.3653507 -1.7598045  2.3679736 -4.802786 ]]
Iteration 700 of 1000: loss=0.0433 " + "l1=0" + "l2=0.0433 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.3531716 -1.7514728  2.3561065 -4.7874346]]
Iteration 800 of 1000: loss=0.0396 " + "l1=0" + "l2=0.0396 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.341597  -1.7436178  2.3478522 -4.778723 ]]
Iteration 900 of 1000: loss=0.0355 " + "l1=0" + "l2=0.0355 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.3377235 -1.7357335  2.3389022 -4.7744036]]
--- 259.8312406539917 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0942 " + "l1=0.0942" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.4146533 -1.7485962  2.4188392 -6.0085225]]
Iteration 100 of 1000: loss=0.0933 " + "l1=0.0929" + "l2=0.000485 f=-0.478 shape=(1, 9000, 1)
logits [[ 3.357301  -1.7320825  2.3904665 -5.9287257]]
Iteration 200 of 1000: loss=0.093 " + "l1=0.0925" + "l2=0.000531 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.343166  -1.7272273  2.3828216 -5.908534 ]]
Iteration 300 of 1000: loss=0.0927 " + "l1=0.0921" + "l2=0.00065 f=-0.476 shape=(1, 9000, 1)
logits [[ 3.325026  -1.7207907  2.373319  -5.882935 ]]
Iteration 400 of 1000: loss=0.0924 " + "l1=0.0916" + "l2=0.000808 f=-0.475 shape=(1, 9000, 1)
logits [[ 3.3057315 -1.7138633  2.363446  -5.8562913]]
Iteration 500 of 1000: loss=0.0922 " + "l1=0.0912" + "l2=0.00101 f=-0.474 shape=(1, 9000, 1)
logits [[ 3.2861667 -1.7068813  2.3533378 -5.8296742]]
Iteration 600 of 1000: loss=0.0919 " + "l1=0.0907" + "l2=0.0012 f=-0.473 shape=(1, 9000, 1)
logits [[ 3.2666254 -1.7006371  2.3433912 -5.802585 ]]
Iteration 700 of 1000: loss=0.0916 " + "l1=0.0902" + "l2=0.00142 f=-0.472 shape=(1, 9000, 1)
logits [[ 3.2449975 -1.6937423  2.3325276 -5.7733607]]
Iteration 800 of 1000: loss=0.0914 " + "l1=0.0897" + "l2=0.00171 f=-0.471 shape=(1, 9000, 1)
logits [[ 3.223098  -1.6871916  2.3218586 -5.7435517]]
Iteration 900 of 1000: loss=0.0911 " + "l1=0.0892" + "l2=0.00195 f=-0.471 shape=(1, 9000, 1)
logits [[ 3.2009501 -1.6806918  2.311497  -5.714064 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.942 " + "l1=0.942" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.4146533 -1.7485962  2.4188392 -6.0085225]]
Iteration 100 of 1000: loss=0.856 " + "l1=0.815" + "l2=0.0408 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.871679  -1.5937724  2.1602905 -5.280713 ]]
Iteration 200 of 1000: loss=0.79 " + "l1=0.729" + "l2=0.0614 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.536383  -1.5689517  2.038428  -4.7490096]]
Iteration 300 of 1000: loss=0.733 " + "l1=0.65" + "l2=0.083 f=-0.413 shape=(1, 9000, 1)
logits [[ 2.2415843 -1.5784156  1.9428661 -4.2578454]]
Iteration 400 of 1000: loss=0.684 " + "l1=0.583" + "l2=0.101 f=-0.386 shape=(1, 9000, 1)
logits [[ 1.9913216 -1.5386719  1.8419143 -3.837493 ]]
Iteration 500 of 1000: loss=0.634 " + "l1=0.51" + "l2=0.123 f=-0.348 shape=(1, 9000, 1)
logits [[ 1.7258184 -1.4675683  1.7249084 -3.375391 ]]
Iteration 600 of 1000: loss=0.601 " + "l1=0.471" + "l2=0.129 f=-0.327 shape=(1, 9000, 1)
logits [[ 1.6182379 -1.4490813  1.6190263 -3.0950391]]
Iteration 700 of 1000: loss=0.573 " + "l1=0.437" + "l2=0.136 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.5317051 -1.4461237  1.5315896 -2.8390908]]
Iteration 800 of 1000: loss=0.545 " + "l1=0.405" + "l2=0.14 f=-0.29 shape=(1, 9000, 1)
logits [[ 1.4422065 -1.4318922  1.4412825 -2.6111922]]
Iteration 900 of 1000: loss=0.516 " + "l1=0.368" + "l2=0.148 f=-0.273 shape=(1, 9000, 1)
logits [[ 1.3390849 -1.4297357  1.3385049 -2.3402352]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.42 " + "l1=9.42" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.4146533 -1.7485962  2.4188392 -6.0085225]]
Iteration 100 of 1000: loss=2.8 " + "l1=0.0409" + "l2=2.76 f=-0.054 shape=(1, 9000, 1)
logits [[-0.04078668 -1.2458556   0.5557444   0.5148864 ]]
Iteration 200 of 1000: loss=1.53 " + "l1=0.0224" + "l2=1.5 f=-0.048 shape=(1, 9000, 1)
logits [[ 1.2019444e-03 -1.2550669e+00  5.4207951e-01  5.1972777e-01]]
Iteration 300 of 1000: loss=1.16 " + "l1=0" + "l2=1.16 f=-0.0414 shape=(1, 9000, 1)
logits [[ 0.01276093 -1.2519574   0.5205652   0.55296284]]
Iteration 400 of 1000: loss=0.987 " + "l1=0.00822" + "l2=0.979 f=-0.0402 shape=(1, 9000, 1)
logits [[ 0.0397103 -1.2403876  0.5240131  0.5157909]]
Iteration 500 of 1000: loss=0.88 " + "l1=0" + "l2=0.88 f=-0.0394 shape=(1, 9000, 1)
logits [[ 0.03700185 -1.2237626   0.50274974  0.52628803]]
Iteration 600 of 1000: loss=0.795 " + "l1=0" + "l2=0.795 f=-0.0379 shape=(1, 9000, 1)
logits [[ 0.05878482 -1.2172357   0.49522904  0.5114952 ]]
Iteration 700 of 1000: loss=0.727 " + "l1=0.00139" + "l2=0.725 f=-0.0417 shape=(1, 9000, 1)
logits [[ 0.05756554 -1.198176    0.48766652  0.4862795 ]]
Iteration 800 of 1000: loss=0.685 " + "l1=0" + "l2=0.685 f=-0.0418 shape=(1, 9000, 1)
logits [[ 0.01160371 -1.1692511   0.46044004  0.53017586]]
Iteration 900 of 1000: loss=0.625 " + "l1=0" + "l2=0.625 f=-0.0549 shape=(1, 9000, 1)
logits [[-0.02844178 -1.143088    0.46704507  0.48486674]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.18 " + "l1=5.18" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.4146533 -1.7485962  2.4188392 -6.0085225]]
Iteration 100 of 1000: loss=2.71 " + "l1=1.67" + "l2=1.04 f=-0.223 shape=(1, 9000, 1)
logits [[ 1.1771743 -1.4304285  1.197331  -1.8369721]]
Iteration 200 of 1000: loss=1.39 " + "l1=0.116" + "l2=1.27 f=-0.0573 shape=(1, 9000, 1)
logits [[ 0.10576712 -1.3008053   0.58803266  0.37778822]]
Iteration 300 of 1000: loss=0.986 " + "l1=0.00671" + "l2=0.979 f=-0.0377 shape=(1, 9000, 1)
logits [[ 0.07331188 -1.2448964   0.5164289   0.504225  ]]
Iteration 400 of 1000: loss=0.828 " + "l1=0" + "l2=0.828 f=-0.0385 shape=(1, 9000, 1)
logits [[ 0.07526046 -1.2314316   0.49257717  0.50972116]]
Iteration 500 of 1000: loss=0.725 " + "l1=0.00424" + "l2=0.721 f=-0.0427 shape=(1, 9000, 1)
logits [[ 0.08959661 -1.2203183   0.48385474  0.47614467]]
Iteration 600 of 1000: loss=0.651 " + "l1=0" + "l2=0.651 f=-0.0454 shape=(1, 9000, 1)
logits [[ 0.04515494 -1.1727624   0.46173763  0.48414576]]
Iteration 700 of 1000: loss=0.585 " + "l1=0.0028" + "l2=0.582 f=-0.0574 shape=(1, 9000, 1)
logits [[-0.03623705 -1.109875    0.46073723  0.45564112]]
Iteration 800 of 1000: loss=0.536 " + "l1=0" + "l2=0.536 f=-0.059 shape=(1, 9000, 1)
logits [[-0.08131019 -1.0714158   0.4381083   0.47871286]]
Iteration 900 of 1000: loss=0.49 " + "l1=0" + "l2=0.49 f=-0.0651 shape=(1, 9000, 1)
logits [[-0.09000202 -1.0391507   0.43177688  0.43713307]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.06 " + "l1=3.06" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.4146533 -1.7485962  2.4188392 -6.0085225]]
Iteration 100 of 1000: loss=2.09 " + "l1=1.62" + "l2=0.467 f=-0.369 shape=(1, 9000, 1)
logits [[ 1.667658  -1.4884838  1.6705523 -3.3252485]]
Iteration 200 of 1000: loss=1.51 " + "l1=0.93" + "l2=0.583 f=-0.206 shape=(1, 9000, 1)
logits [[ 1.157874  -1.4849946  1.182338  -1.6803722]]
Iteration 300 of 1000: loss=1.1 " + "l1=0.336" + "l2=0.759 f=-0.108 shape=(1, 9000, 1)
logits [[ 0.45819768 -1.3698062   0.7573664  -0.27732778]]
Iteration 400 of 1000: loss=0.86 " + "l1=0.0886" + "l2=0.772 f=-0.069 shape=(1, 9000, 1)
logits [[ 0.12263095 -1.2473774   0.5606242   0.28804183]]
Iteration 500 of 1000: loss=0.683 " + "l1=0.00103" + "l2=0.682 f=-0.0607 shape=(1, 9000, 1)
logits [[ 0.03595929 -1.2169104   0.4706842   0.46750185]]
Iteration 600 of 1000: loss=0.576 " + "l1=0" + "l2=0.576 f=-0.0667 shape=(1, 9000, 1)
logits [[-0.01375699 -1.1740347   0.45867205  0.4624447 ]]
Iteration 700 of 1000: loss=0.506 " + "l1=0.00282" + "l2=0.503 f=-0.0793 shape=(1, 9000, 1)
logits [[-0.07389913 -1.1403682   0.452898    0.44422796]]
Iteration 800 of 1000: loss=0.458 " + "l1=0.000638" + "l2=0.458 f=-0.0846 shape=(1, 9000, 1)
logits [[-0.10396618 -1.1244047   0.44588384  0.44392058]]
Iteration 900 of 1000: loss=0.429 " + "l1=0" + "l2=0.429 f=-0.089 shape=(1, 9000, 1)
logits [[-0.12928222 -1.1145785   0.4375111   0.45019653]]
--- 295.5668988227844 seconds ---
Adv result:3
Loading record A03657
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.074 " + "l1=0.074" + "l2=0 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.3911247 -3.0117803  3.285423  -5.99965  ]]
Iteration 100 of 1000: loss=0.0735 " + "l1=0.0732" + "l2=0.000357 f=-0.332 shape=(1, 9000, 1)
logits [[ 4.343716  -2.9745648  3.2584913 -5.954057 ]]
Iteration 200 of 1000: loss=0.0734 " + "l1=0.0731" + "l2=0.000333 f=-0.331 shape=(1, 9000, 1)
logits [[ 4.33759   -2.9690177  3.2556198 -5.9481683]]
Iteration 300 of 1000: loss=0.0733 " + "l1=0.0729" + "l2=0.000396 f=-0.33 shape=(1, 9000, 1)
logits [[ 4.3281264 -2.9616477  3.2512493 -5.939133 ]]
Iteration 400 of 1000: loss=0.0732 " + "l1=0.0727" + "l2=0.000463 f=-0.33 shape=(1, 9000, 1)
logits [[ 4.318056  -2.953846   3.2466435 -5.929684 ]]
Iteration 500 of 1000: loss=0.0731 " + "l1=0.0725" + "l2=0.000562 f=-0.329 shape=(1, 9000, 1)
logits [[ 4.3080597 -2.946087   3.2422025 -5.920501 ]]
Iteration 600 of 1000: loss=0.073 " + "l1=0.0724" + "l2=0.000626 f=-0.328 shape=(1, 9000, 1)
logits [[ 4.2983    -2.9383092  3.2378788 -5.9117036]]
Iteration 700 of 1000: loss=0.0729 " + "l1=0.0722" + "l2=0.000683 f=-0.328 shape=(1, 9000, 1)
logits [[ 4.2884007 -2.9304254  3.2335224 -5.9027762]]
Iteration 800 of 1000: loss=0.0728 " + "l1=0.072" + "l2=0.000791 f=-0.327 shape=(1, 9000, 1)
logits [[ 4.2785554 -2.922508   3.2292826 -5.8939714]]
Iteration 900 of 1000: loss=0.0728 " + "l1=0.0718" + "l2=0.000995 f=-0.327 shape=(1, 9000, 1)
logits [[ 4.26809   -2.9144108  3.2249994 -5.884931 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.74 " + "l1=0.74" + "l2=0 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.3911247 -3.0117803  3.285423  -5.99965  ]]
Iteration 100 of 1000: loss=0.691 " + "l1=0.658" + "l2=0.0324 f=-0.314 shape=(1, 9000, 1)
logits [[ 3.9619918 -2.6215248  2.9949284 -5.589449 ]]
Iteration 200 of 1000: loss=0.666 " + "l1=0.619" + "l2=0.047 f=-0.305 shape=(1, 9000, 1)
logits [[ 3.7567406 -2.4291258  2.8490531 -5.3964977]]
Iteration 300 of 1000: loss=0.642 " + "l1=0.586" + "l2=0.0564 f=-0.301 shape=(1, 9000, 1)
logits [[ 3.5606608 -2.2956514  2.7468896 -5.214365 ]]
Iteration 400 of 1000: loss=0.619 " + "l1=0.554" + "l2=0.0655 f=-0.296 shape=(1, 9000, 1)
logits [[ 3.3723009 -2.1656888  2.6519694 -5.04359  ]]
Iteration 500 of 1000: loss=0.597 " + "l1=0.522" + "l2=0.0743 f=-0.291 shape=(1, 9000, 1)
logits [[ 3.1883798 -2.0361054  2.556899  -4.8718576]]
Iteration 600 of 1000: loss=0.571 " + "l1=0.484" + "l2=0.0871 f=-0.285 shape=(1, 9000, 1)
logits [[ 2.9561036 -1.882891   2.44567   -4.6591735]]
Iteration 700 of 1000: loss=0.547 " + "l1=0.449" + "l2=0.0975 f=-0.279 shape=(1, 9000, 1)
logits [[ 2.747657  -1.7465043  2.3377192 -4.4531555]]
Iteration 800 of 1000: loss=0.524 " + "l1=0.418" + "l2=0.106 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.5702596 -1.6131698  2.2315784 -4.267017 ]]
Iteration 900 of 1000: loss=0.503 " + "l1=0.391" + "l2=0.112 f=-0.26 shape=(1, 9000, 1)
logits [[ 2.4051883 -1.5021415  2.1398466 -4.0829453]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.4 " + "l1=7.4" + "l2=0 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.3911247 -3.0117803  3.285423  -5.99965  ]]
Iteration 100 of 1000: loss=2.73 " + "l1=0.872" + "l2=1.86 f=-0.216 shape=(1, 9000, 1)
logits [[ 0.94988936  0.08231574  0.9539238  -2.848687  ]]
Iteration 200 of 1000: loss=1.61 " + "l1=0.0104" + "l2=1.6 f=-0.239 shape=(1, 9000, 1)
logits [[ 0.55326504  0.550744    0.5611155  -2.6202922 ]]
Iteration 300 of 1000: loss=1.25 " + "l1=0.0103" + "l2=1.24 f=-0.241 shape=(1, 9000, 1)
logits [[ 0.51182735  0.5249684   0.5352892  -2.537004  ]]
Iteration 400 of 1000: loss=0.978 " + "l1=0" + "l2=0.978 f=-0.244 shape=(1, 9000, 1)
logits [[ 0.4721597  0.5049581  0.5008712 -2.453017 ]]
Iteration 500 of 1000: loss=0.806 " + "l1=0" + "l2=0.806 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.46319255  0.49045318  0.48390794 -2.3823376 ]]
Iteration 600 of 1000: loss=0.706 " + "l1=0" + "l2=0.706 f=-0.234 shape=(1, 9000, 1)
logits [[ 0.46102494  0.4658933   0.46477896 -2.3284438 ]]
Iteration 700 of 1000: loss=0.658 " + "l1=0.000392" + "l2=0.658 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.42074314  0.4346161   0.4350081  -2.2138996 ]]
Iteration 800 of 1000: loss=0.629 " + "l1=0.00419" + "l2=0.625 f=-0.227 shape=(1, 9000, 1)
logits [[ 0.387745    0.4139627   0.41815343 -2.128844  ]]
Iteration 900 of 1000: loss=0.602 " + "l1=0" + "l2=0.602 f=-0.225 shape=(1, 9000, 1)
logits [[ 0.37625164  0.39846376  0.39645118 -2.0726187 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.07 " + "l1=4.07" + "l2=0 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.3911247 -3.0117803  3.285423  -5.99965  ]]
Iteration 100 of 1000: loss=2.36 " + "l1=1.46" + "l2=0.905 f=-0.247 shape=(1, 9000, 1)
logits [[ 1.7449657 -0.907779   1.7064799 -3.5303297]]
Iteration 200 of 1000: loss=1.55 " + "l1=0.553" + "l2=0.994 f=-0.218 shape=(1, 9000, 1)
logits [[ 1.0314726   0.03041382  1.0367299  -2.9700637 ]]
Iteration 300 of 1000: loss=1.15 " + "l1=0.241" + "l2=0.906 f=-0.233 shape=(1, 9000, 1)
logits [[ 0.73227185  0.30565658  0.74347526 -2.713766  ]]
Iteration 400 of 1000: loss=0.943 " + "l1=0.0915" + "l2=0.851 f=-0.234 shape=(1, 9000, 1)
logits [[ 0.5440643   0.40580487  0.5720803  -2.4590619 ]]
Iteration 500 of 1000: loss=0.758 " + "l1=0.00264" + "l2=0.755 f=-0.229 shape=(1, 9000, 1)
logits [[ 0.43407652  0.44795838  0.45275745 -2.250727  ]]
Iteration 600 of 1000: loss=0.693 " + "l1=0.0128" + "l2=0.68 f=-0.234 shape=(1, 9000, 1)
logits [[ 0.40769854  0.3913673   0.41472682 -2.1480377 ]]
Iteration 700 of 1000: loss=0.644 " + "l1=0" + "l2=0.644 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.3575958   0.3809935   0.37220225 -2.0535896 ]]
Iteration 800 of 1000: loss=0.614 " + "l1=0.00283" + "l2=0.611 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.34279403  0.3590281   0.3641645  -2.0099084 ]]
Iteration 900 of 1000: loss=0.596 " + "l1=0" + "l2=0.596 f=-0.234 shape=(1, 9000, 1)
logits [[ 0.33507374  0.3498736   0.34931406 -1.9718732 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.41 " + "l1=2.41" + "l2=0 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.3911247 -3.0117803  3.285423  -5.99965  ]]
Iteration 100 of 1000: loss=1.83 " + "l1=1.51" + "l2=0.318 f=-0.303 shape=(1, 9000, 1)
logits [[ 2.8452504 -1.795127   2.3240342 -4.587571 ]]
Iteration 200 of 1000: loss=1.42 " + "l1=0.899" + "l2=0.516 f=-0.24 shape=(1, 9000, 1)
logits [[ 1.8733572 -0.8942917  1.7619224 -3.7005913]]
Iteration 300 of 1000: loss=1.12 " + "l1=0.518" + "l2=0.603 f=-0.215 shape=(1, 9000, 1)
logits [[ 1.2736337  -0.31925935  1.2706993  -3.0846875 ]]
Iteration 400 of 1000: loss=0.932 " + "l1=0.362" + "l2=0.57 f=-0.218 shape=(1, 9000, 1)
logits [[ 1.0263616  -0.08796642  1.0248119  -2.8340843 ]]
Iteration 500 of 1000: loss=0.823 " + "l1=0.26" + "l2=0.563 f=-0.227 shape=(1, 9000, 1)
logits [[ 0.8475493   0.04891839  0.8478957  -2.653243  ]]
Iteration 600 of 1000: loss=0.726 " + "l1=0.185" + "l2=0.541 f=-0.226 shape=(1, 9000, 1)
logits [[ 0.7171485   0.14909975  0.7169085  -2.486633  ]]
Iteration 700 of 1000: loss=0.67 " + "l1=0.135" + "l2=0.535 f=-0.233 shape=(1, 9000, 1)
logits [[ 0.6228421   0.20680854  0.62160003 -2.3825705 ]]
Iteration 800 of 1000: loss=0.627 " + "l1=0.0964" + "l2=0.531 f=-0.238 shape=(1, 9000, 1)
logits [[ 0.56324255  0.2665698   0.5610104  -2.341324  ]]
Iteration 900 of 1000: loss=0.588 " + "l1=0.0652" + "l2=0.523 f=-0.24 shape=(1, 9000, 1)
logits [[ 0.5034033   0.30787888  0.5085503  -2.2808735 ]]
--- 287.81081223487854 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0111 " + "l1=0.0111" + "l2=0 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.3911247 -3.0117803  3.285423  -5.99965  ]]
Iteration 100 of 1000: loss=0.0109 " + "l1=0.0107" + "l2=0.000194 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.360727  -3.0181205  3.2940364 -5.97163  ]]
Iteration 200 of 1000: loss=0.0108 " + "l1=0.0107" + "l2=0.000158 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.359764  -3.017632   3.294597  -5.9717245]]
Iteration 300 of 1000: loss=0.0108 " + "l1=0.0106" + "l2=0.000152 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.356043  -3.0175772  3.295908  -5.9692225]]
Iteration 400 of 1000: loss=0.0108 " + "l1=0.0105" + "l2=0.000214 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.3511057 -3.0175352  3.2973754 -5.965634 ]]
Iteration 500 of 1000: loss=0.0107 " + "l1=0.0105" + "l2=0.000265 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.345939  -3.0174472  3.2989101 -5.961951 ]]
Iteration 600 of 1000: loss=0.0108 " + "l1=0.0104" + "l2=0.000364 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.3407197 -3.0173688  3.3004844 -5.9583344]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.111 " + "l1=0.111" + "l2=0 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.3911247 -3.0117803  3.285423  -5.99965  ]]
Iteration 100 of 1000: loss=0.0928 " + "l1=0.0836" + "l2=0.00915 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.1853323 -3.052893   3.3490644 -5.819298 ]]
Iteration 200 of 1000: loss=0.0849 " + "l1=0.0722" + "l2=0.0127 f=-0.336 shape=(1, 9000, 1)
logits [[ 4.0982604 -3.066132   3.3758876 -5.7532454]]
Iteration 300 of 1000: loss=0.0775 " + "l1=0.0615" + "l2=0.016 f=-0.338 shape=(1, 9000, 1)
logits [[ 4.014651  -3.0758119  3.3993013 -5.6893225]]
Iteration 400 of 1000: loss=0.0702 " + "l1=0.0512" + "l2=0.0189 f=-0.339 shape=(1, 9000, 1)
logits [[ 3.9275627 -3.0778897  3.415212  -5.6211877]]
Iteration 500 of 1000: loss=0.0627 " + "l1=0.0412" + "l2=0.0215 f=-0.34 shape=(1, 9000, 1)
logits [[ 3.8403609 -3.0764773  3.4284053 -5.551186 ]]
Iteration 600 of 1000: loss=0.0548 " + "l1=0.031" + "l2=0.0239 f=-0.339 shape=(1, 9000, 1)
logits [[ 3.7535539 -3.0764322  3.4439242 -5.4778914]]
Iteration 700 of 1000: loss=0.0469 " + "l1=0.0208" + "l2=0.0262 f=-0.34 shape=(1, 9000, 1)
logits [[ 3.6650379 -3.0767436  3.4573517 -5.4045763]]
Iteration 800 of 1000: loss=0.0384 " + "l1=0.00946" + "l2=0.0289 f=-0.34 shape=(1, 9000, 1)
logits [[ 3.5545688 -3.068662   3.4599879 -5.3067718]]
Iteration 900 of 1000: loss=0.0309 " + "l1=0.000364" + "l2=0.0305 f=-0.338 shape=(1, 9000, 1)
logits [[ 3.464396  -3.0562341  3.4607532 -5.2224793]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0608 " + "l1=0.0608" + "l2=0 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.3911247 -3.0117803  3.285423  -5.99965  ]]
Iteration 100 of 1000: loss=0.0555 " + "l1=0.0527" + "l2=0.00278 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.2791357 -3.034304   3.3208966 -5.900704 ]]
Iteration 200 of 1000: loss=0.0534 " + "l1=0.0497" + "l2=0.00371 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.2370954 -3.0380356  3.3339875 -5.869275 ]]
Iteration 300 of 1000: loss=0.0513 " + "l1=0.0466" + "l2=0.00472 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.193955  -3.0416014  3.347548  -5.837726 ]]
Iteration 400 of 1000: loss=0.0492 " + "l1=0.0436" + "l2=0.00552 f=-0.335 shape=(1, 9000, 1)
logits [[ 4.1523724 -3.0437715  3.3590066 -5.8085103]]
Iteration 500 of 1000: loss=0.0471 " + "l1=0.0409" + "l2=0.00627 f=-0.335 shape=(1, 9000, 1)
logits [[ 4.112917  -3.0447187  3.369791  -5.779937 ]]
Iteration 600 of 1000: loss=0.0452 " + "l1=0.0383" + "l2=0.00689 f=-0.336 shape=(1, 9000, 1)
logits [[ 4.07583   -3.0453684  3.379981  -5.754884 ]]
Iteration 700 of 1000: loss=0.0431 " + "l1=0.0357" + "l2=0.00748 f=-0.337 shape=(1, 9000, 1)
logits [[ 4.036548  -3.0444982  3.3880067 -5.7264395]]
Iteration 800 of 1000: loss=0.0411 " + "l1=0.033" + "l2=0.00815 f=-0.337 shape=(1, 9000, 1)
logits [[ 3.9945254 -3.042989   3.3954155 -5.6950803]]
Iteration 900 of 1000: loss=0.0391 " + "l1=0.0303" + "l2=0.0088 f=-0.337 shape=(1, 9000, 1)
logits [[ 3.952942  -3.0409276  3.4027197 -5.6628766]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0857 " + "l1=0.0857" + "l2=0 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.3911247 -3.0117803  3.285423  -5.99965  ]]
Iteration 100 of 1000: loss=0.0751 " + "l1=0.0697" + "l2=0.00537 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.2341204 -3.0424654  3.3343115 -5.8621373]]
Iteration 200 of 1000: loss=0.0704 " + "l1=0.0627" + "l2=0.00775 f=-0.335 shape=(1, 9000, 1)
logits [[ 4.1649647 -3.0517566  3.3562245 -5.809688 ]]
Iteration 300 of 1000: loss=0.0661 " + "l1=0.0567" + "l2=0.00945 f=-0.336 shape=(1, 9000, 1)
logits [[ 4.105428  -3.057568   3.3739522 -5.7659   ]]
Iteration 400 of 1000: loss=0.062 " + "l1=0.051" + "l2=0.011 f=-0.337 shape=(1, 9000, 1)
logits [[ 4.0477543 -3.0612333  3.3900626 -5.72323  ]]
Iteration 500 of 1000: loss=0.0577 " + "l1=0.0451" + "l2=0.0126 f=-0.337 shape=(1, 9000, 1)
logits [[ 3.985271  -3.0622132  3.4028547 -5.674699 ]]
Iteration 600 of 1000: loss=0.0535 " + "l1=0.0393" + "l2=0.0141 f=-0.338 shape=(1, 9000, 1)
logits [[ 3.9216359 -3.0616252  3.4142513 -5.626234 ]]
Iteration 700 of 1000: loss=0.049 " + "l1=0.0333" + "l2=0.0156 f=-0.338 shape=(1, 9000, 1)
logits [[ 3.8553734 -3.0598648  3.425091  -5.572835 ]]
Iteration 800 of 1000: loss=0.0444 " + "l1=0.0274" + "l2=0.017 f=-0.338 shape=(1, 9000, 1)
logits [[ 3.7887428 -3.0593739  3.4358313 -5.517454 ]]
Iteration 900 of 1000: loss=0.0399 " + "l1=0.0218" + "l2=0.018 f=-0.338 shape=(1, 9000, 1)
logits [[ 3.7256463 -3.056553   3.4437468 -5.4648523]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0981 " + "l1=0.0981" + "l2=0 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.3911247 -3.0117803  3.285423  -5.99965  ]]
Iteration 100 of 1000: loss=0.0842 " + "l1=0.0771" + "l2=0.00714 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.209721  -3.0473475  3.3415167 -5.840731 ]]
Iteration 200 of 1000: loss=0.078 " + "l1=0.068" + "l2=0.01 f=-0.336 shape=(1, 9000, 1)
logits [[ 4.131955  -3.0583413  3.3662393 -5.7827153]]
Iteration 300 of 1000: loss=0.0722 " + "l1=0.0597" + "l2=0.0125 f=-0.337 shape=(1, 9000, 1)
logits [[ 4.0593543 -3.0660956  3.3865542 -5.7268887]]
Iteration 400 of 1000: loss=0.0666 " + "l1=0.0518" + "l2=0.0148 f=-0.338 shape=(1, 9000, 1)
logits [[ 3.987206  -3.0708692  3.4040377 -5.6725035]]
Iteration 500 of 1000: loss=0.0609 " + "l1=0.044" + "l2=0.0169 f=-0.339 shape=(1, 9000, 1)
logits [[ 3.9131072 -3.0708697  3.4170809 -5.615295 ]]
Iteration 600 of 1000: loss=0.0549 " + "l1=0.036" + "l2=0.0189 f=-0.339 shape=(1, 9000, 1)
logits [[ 3.8343349 -3.0677676  3.4284701 -5.551287 ]]
Iteration 700 of 1000: loss=0.0487 " + "l1=0.0282" + "l2=0.0205 f=-0.339 shape=(1, 9000, 1)
logits [[ 3.758642  -3.0674415  3.4410882 -5.4875894]]
Iteration 800 of 1000: loss=0.0426 " + "l1=0.0203" + "l2=0.0224 f=-0.339 shape=(1, 9000, 1)
logits [[ 3.6790063 -3.0661583  3.45069   -5.4203315]]
Iteration 900 of 1000: loss=0.0362 " + "l1=0.0116" + "l2=0.0246 f=-0.34 shape=(1, 9000, 1)
logits [[ 3.5833225 -3.058673   3.4529228 -5.3358183]]
--- 270.9563841819763 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.104 " + "l1=0.104" + "l2=0 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.3911247 -3.0117803  3.285423  -5.99965  ]]
Iteration 100 of 1000: loss=0.103 " + "l1=0.103" + "l2=0.000563 f=-0.33 shape=(1, 9000, 1)
logits [[ 4.327696  -2.990324   3.265602  -5.9231677]]
Iteration 200 of 1000: loss=0.103 " + "l1=0.102" + "l2=0.00057 f=-0.329 shape=(1, 9000, 1)
logits [[ 4.3165207 -2.9856386  3.262638  -5.910013 ]]
Iteration 300 of 1000: loss=0.103 " + "l1=0.102" + "l2=0.000674 f=-0.328 shape=(1, 9000, 1)
logits [[ 4.302069  -2.9797165  3.2583878 -5.892948 ]]
Iteration 400 of 1000: loss=0.102 " + "l1=0.102" + "l2=0.000828 f=-0.327 shape=(1, 9000, 1)
logits [[ 4.287401  -2.9738011  3.2541752 -5.8756256]]
Iteration 500 of 1000: loss=0.102 " + "l1=0.101" + "l2=0.000946 f=-0.326 shape=(1, 9000, 1)
logits [[ 4.2731075 -2.9678571  3.250062  -5.8588104]]
Iteration 600 of 1000: loss=0.102 " + "l1=0.101" + "l2=0.00111 f=-0.325 shape=(1, 9000, 1)
logits [[ 4.2589874 -2.9619744  3.2461896 -5.8423715]]
Iteration 700 of 1000: loss=0.102 " + "l1=0.101" + "l2=0.0012 f=-0.324 shape=(1, 9000, 1)
logits [[ 4.2450466 -2.9562457  3.2425795 -5.826443 ]]
Iteration 800 of 1000: loss=0.102 " + "l1=0.1" + "l2=0.00137 f=-0.323 shape=(1, 9000, 1)
logits [[ 4.232072 -2.950676  3.239254 -5.811733]]
Iteration 900 of 1000: loss=0.102 " + "l1=0.1" + "l2=0.00148 f=-0.322 shape=(1, 9000, 1)
logits [[ 4.21906   -2.9449103  3.2358024 -5.797017 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.04 " + "l1=1.04" + "l2=0 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.3911247 -3.0117803  3.285423  -5.99965  ]]
Iteration 100 of 1000: loss=0.958 " + "l1=0.913" + "l2=0.0451 f=-0.306 shape=(1, 9000, 1)
logits [[ 3.8115623 -2.8113136  3.0921957 -5.3184376]]
Iteration 200 of 1000: loss=0.915 " + "l1=0.846" + "l2=0.0689 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.4994612 -2.6763911  2.9697616 -4.963295 ]]
Iteration 300 of 1000: loss=0.874 " + "l1=0.786" + "l2=0.0879 f=-0.277 shape=(1, 9000, 1)
logits [[ 3.220998  -2.5526404  2.8650162 -4.640673 ]]
Iteration 400 of 1000: loss=0.831 " + "l1=0.723" + "l2=0.108 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.9181197 -2.4280782  2.7613692 -4.307208 ]]
Iteration 500 of 1000: loss=0.786 " + "l1=0.664" + "l2=0.122 f=-0.249 shape=(1, 9000, 1)
logits [[ 2.6477282 -2.301834   2.6470747 -3.9882329]]
Iteration 600 of 1000: loss=0.749 " + "l1=0.624" + "l2=0.125 f=-0.229 shape=(1, 9000, 1)
logits [[ 2.477868  -2.1162877  2.4801476 -3.7591548]]
Iteration 700 of 1000: loss=0.72 " + "l1=0.591" + "l2=0.128 f=-0.217 shape=(1, 9000, 1)
logits [[ 2.346855  -1.9951593  2.3462741 -3.5672746]]
Iteration 800 of 1000: loss=0.687 " + "l1=0.55" + "l2=0.137 f=-0.196 shape=(1, 9000, 1)
logits [[ 2.1794715 -1.8312668  2.1808357 -3.3144486]]
Iteration 900 of 1000: loss=0.65 " + "l1=0.508" + "l2=0.142 f=-0.178 shape=(1, 9000, 1)
logits [[ 2.0154374 -1.6958722  2.023072  -3.0565078]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.4 " + "l1=10.4" + "l2=0 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.3911247 -3.0117803  3.285423  -5.99965  ]]
Iteration 100 of 1000: loss=4.04 " + "l1=1.39" + "l2=2.65 f=-0.0726 shape=(1, 9000, 1)
logits [[ 0.17867298 -0.5604207   0.7383409  -0.6469067 ]]
Iteration 200 of 1000: loss=2.14 " + "l1=0.0234" + "l2=2.12 f=-0.0901 shape=(1, 9000, 1)
logits [[-0.46233553 -0.38718063  0.2563127   0.23289242]]
Iteration 300 of 1000: loss=1.66 " + "l1=0" + "l2=1.66 f=-0.0795 shape=(1, 9000, 1)
logits [[-0.42023644 -0.49022895  0.29325655  0.2991562 ]]
Iteration 400 of 1000: loss=1.35 " + "l1=0" + "l2=1.35 f=-0.0695 shape=(1, 9000, 1)
logits [[-0.38140386 -0.5507954   0.30789468  0.3461498 ]]
Iteration 500 of 1000: loss=1.11 " + "l1=0.00911" + "l2=1.1 f=-0.0648 shape=(1, 9000, 1)
logits [[-0.3218239  -0.5640986   0.317838    0.30872655]]
Iteration 600 of 1000: loss=0.968 " + "l1=0" + "l2=0.968 f=-0.0597 shape=(1, 9000, 1)
logits [[-0.28669092 -0.58357483  0.29876885  0.3326124 ]]
Iteration 700 of 1000: loss=0.872 " + "l1=0.0126" + "l2=0.859 f=-0.056 shape=(1, 9000, 1)
logits [[-0.23817086 -0.62624705  0.3265116   0.313902  ]]
Iteration 800 of 1000: loss=0.794 " + "l1=0" + "l2=0.794 f=-0.0518 shape=(1, 9000, 1)
logits [[-0.22677419 -0.64010185  0.32198045  0.33777443]]
Iteration 900 of 1000: loss=0.742 " + "l1=0.00613" + "l2=0.736 f=-0.0494 shape=(1, 9000, 1)
logits [[-0.196121   -0.66507596  0.33480123  0.3286751 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.71 " + "l1=5.71" + "l2=0 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.3911247 -3.0117803  3.285423  -5.99965  ]]
Iteration 100 of 1000: loss=3.39 " + "l1=2.36" + "l2=1.03 f=-0.175 shape=(1, 9000, 1)
logits [[ 1.6560769 -1.4353551  1.6844525 -2.6059308]]
Iteration 200 of 1000: loss=2.16 " + "l1=0.745" + "l2=1.42 f=-0.0711 shape=(1, 9000, 1)
logits [[ 0.22355902 -0.6094517   0.728136   -0.6266717 ]]
Iteration 300 of 1000: loss=1.21 " + "l1=0" + "l2=1.21 f=-0.0497 shape=(1, 9000, 1)
logits [[-0.2867081  -0.54872227  0.31669417  0.32002556]]
Iteration 400 of 1000: loss=0.936 " + "l1=0.0186" + "l2=0.917 f=-0.0304 shape=(1, 9000, 1)
logits [[-0.15158129 -0.6231222   0.34356436  0.3096727 ]]
Iteration 500 of 1000: loss=0.806 " + "l1=0.00964" + "l2=0.796 f=-0.0276 shape=(1, 9000, 1)
logits [[-0.11478323 -0.6570196   0.33937615  0.32184315]]
Iteration 600 of 1000: loss=0.722 " + "l1=0" + "l2=0.722 f=-0.026 shape=(1, 9000, 1)
logits [[-0.11472183 -0.68535817  0.34778932  0.34819   ]]
Iteration 700 of 1000: loss=0.668 " + "l1=0.00202" + "l2=0.666 f=-0.0259 shape=(1, 9000, 1)
logits [[-0.09991165 -0.7243045   0.36222273  0.3585472 ]]
Iteration 800 of 1000: loss=0.635 " + "l1=0.0154" + "l2=0.619 f=-0.0262 shape=(1, 9000, 1)
logits [[-0.09584151 -0.7488891   0.38397607  0.35603788]]
Iteration 900 of 1000: loss=0.591 " + "l1=0" + "l2=0.591 f=-0.0281 shape=(1, 9000, 1)
logits [[-0.13430892 -0.76054305  0.38505605  0.39747143]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.38 " + "l1=3.38" + "l2=0 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.3911247 -3.0117803  3.285423  -5.99965  ]]
Iteration 100 of 1000: loss=2.44 " + "l1=1.96" + "l2=0.485 f=-0.229 shape=(1, 9000, 1)
logits [[ 2.401033  -2.1033509  2.4049325 -3.6187007]]
Iteration 200 of 1000: loss=1.99 " + "l1=1.37" + "l2=0.619 f=-0.158 shape=(1, 9000, 1)
logits [[ 1.6370796 -1.3515133  1.6456463 -2.562994 ]]
Iteration 300 of 1000: loss=1.57 " + "l1=0.846" + "l2=0.726 f=-0.102 shape=(1, 9000, 1)
logits [[ 0.89013934 -0.9372055   1.1205603  -1.4812945 ]]
Iteration 400 of 1000: loss=1.15 " + "l1=0.285" + "l2=0.869 f=-0.0607 shape=(1, 9000, 1)
logits [[ 0.20655353 -0.72831595  0.5776713  -0.2987197 ]]
Iteration 500 of 1000: loss=0.906 " + "l1=0.0696" + "l2=0.836 f=-0.0321 shape=(1, 9000, 1)
logits [[-0.00810583 -0.6994332   0.3965741   0.18237352]]
Iteration 600 of 1000: loss=0.762 " + "l1=0.00242" + "l2=0.76 f=-0.0249 shape=(1, 9000, 1)
logits [[-0.08819628 -0.7320569   0.3640469   0.35659915]]
Iteration 700 of 1000: loss=0.667 " + "l1=0.00442" + "l2=0.662 f=-0.0223 shape=(1, 9000, 1)
logits [[-0.09723305 -0.75766295  0.38963422  0.37603948]]
Iteration 800 of 1000: loss=0.598 " + "l1=0" + "l2=0.598 f=-0.0241 shape=(1, 9000, 1)
logits [[-0.11860029 -0.79788774  0.40686253  0.4133587 ]]
Iteration 900 of 1000: loss=0.543 " + "l1=0.00173" + "l2=0.541 f=-0.0375 shape=(1, 9000, 1)
logits [[-0.12011088 -0.8242383   0.39987522  0.39455953]]
--- 292.1959788799286 seconds ---
Adv result:3
Loading record A03660
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0816 " + "l1=0.0816" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 5.2364016 -2.9260345  3.130357  -8.065467 ]]
Iteration 100 of 1000: loss=0.0814 " + "l1=0.0812" + "l2=0.000225 f=-0.653 shape=(1, 9000, 1)
logits [[ 5.2053475 -2.9103875  3.116627  -8.024709 ]]
Iteration 200 of 1000: loss=0.0813 " + "l1=0.0811" + "l2=0.00019 f=-0.653 shape=(1, 9000, 1)
logits [[ 5.203647  -2.907885   3.1149242 -8.021767 ]]
Iteration 300 of 1000: loss=0.0813 " + "l1=0.081" + "l2=0.000235 f=-0.652 shape=(1, 9000, 1)
logits [[ 5.1993203 -2.9041858  3.1120195 -8.015072 ]]
Iteration 400 of 1000: loss=0.0812 " + "l1=0.0809" + "l2=0.000262 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.194678  -2.9001904  3.1088574 -8.007797 ]]
Iteration 500 of 1000: loss=0.0812 " + "l1=0.0809" + "l2=0.000352 f=-0.65 shape=(1, 9000, 1)
logits [[ 5.1899357 -2.8959172  3.1054838 -8.000267 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.816 " + "l1=0.816" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 5.2364016 -2.9260345  3.130357  -8.065467 ]]
Iteration 100 of 1000: loss=0.793 " + "l1=0.781" + "l2=0.0123 f=-0.635 shape=(1, 9000, 1)
logits [[ 5.0058    -2.8045223  3.031704  -7.7713037]]
Iteration 200 of 1000: loss=0.784 " + "l1=0.767" + "l2=0.0169 f=-0.625 shape=(1, 9000, 1)
logits [[ 4.917116  -2.7529905  2.9904304 -7.6528397]]
Iteration 300 of 1000: loss=0.776 " + "l1=0.755" + "l2=0.0209 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.8433266 -2.7055347  2.953315  -7.548384 ]]
Iteration 400 of 1000: loss=0.768 " + "l1=0.743" + "l2=0.0246 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.77658   -2.656473   2.9165347 -7.45178  ]]
Iteration 500 of 1000: loss=0.758 " + "l1=0.728" + "l2=0.0297 f=-0.592 shape=(1, 9000, 1)
logits [[ 4.697275  -2.5868297  2.8675616 -7.345878 ]]
Iteration 600 of 1000: loss=0.747 " + "l1=0.713" + "l2=0.0338 f=-0.579 shape=(1, 9000, 1)
logits [[ 4.6201687 -2.510586   2.8203392 -7.247892 ]]
Iteration 700 of 1000: loss=0.736 " + "l1=0.699" + "l2=0.0373 f=-0.567 shape=(1, 9000, 1)
logits [[ 4.5469074 -2.4438405  2.7796292 -7.1521597]]
Iteration 800 of 1000: loss=0.725 " + "l1=0.685" + "l2=0.0401 f=-0.556 shape=(1, 9000, 1)
logits [[ 4.475197  -2.3786662  2.7375295 -7.058699 ]]
Iteration 900 of 1000: loss=0.715 " + "l1=0.672" + "l2=0.0426 f=-0.545 shape=(1, 9000, 1)
logits [[ 4.4031205 -2.319794   2.6991074 -6.9629493]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.16 " + "l1=8.16" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 5.2364016 -2.9260345  3.130357  -8.065467 ]]
Iteration 100 of 1000: loss=5.92 " + "l1=4.8" + "l2=1.12 f=-0.549 shape=(1, 9000, 1)
logits [[ 2.8679483 -1.9291973  2.2098145 -5.3426385]]
Iteration 200 of 1000: loss=4.85 " + "l1=3.26" + "l2=1.58 f=-0.473 shape=(1, 9000, 1)
logits [[ 1.9008725 -1.3608003  1.7199728 -4.1506596]]
Iteration 300 of 1000: loss=4.09 " + "l1=2.41" + "l2=1.68 f=-0.427 shape=(1, 9000, 1)
logits [[ 1.4090301 -0.997502   1.4036434 -3.523866 ]]
Iteration 400 of 1000: loss=3.49 " + "l1=1.93" + "l2=1.56 f=-0.388 shape=(1, 9000, 1)
logits [[ 1.1704032  -0.76321536  1.1674322  -3.1253333 ]]
Iteration 500 of 1000: loss=3.04 " + "l1=1.57" + "l2=1.47 f=-0.353 shape=(1, 9000, 1)
logits [[ 0.97829866 -0.59188944  0.9759388  -2.7737257 ]]
Iteration 600 of 1000: loss=2.7 " + "l1=1.3" + "l2=1.4 f=-0.322 shape=(1, 9000, 1)
logits [[ 0.8533083 -0.4426443  0.8549945 -2.5530946]]
Iteration 700 of 1000: loss=2.48 " + "l1=1.12" + "l2=1.36 f=-0.303 shape=(1, 9000, 1)
logits [[ 0.7614648  -0.35829708  0.7626683  -2.3785236 ]]
Iteration 800 of 1000: loss=2.31 " + "l1=0.968" + "l2=1.35 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.67149746 -0.29309398  0.6746885  -2.2717826 ]]
Iteration 900 of 1000: loss=2.18 " + "l1=0.819" + "l2=1.36 f=-0.302 shape=(1, 9000, 1)
logits [[ 0.58875537 -0.22495739  0.59414417 -2.1640015 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=81.6 " + "l1=81.6" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 5.2364016 -2.9260345  3.130357  -8.065467 ]]
Iteration 100 of 1000: loss=17.3 " + "l1=2.67" + "l2=14.7 f=-0.302 shape=(1, 9000, 1)
logits [[ 0.3291866   0.13505653  0.40180367 -2.0744486 ]]
Iteration 200 of 1000: loss=10.5 " + "l1=0.0562" + "l2=10.4 f=-0.291 shape=(1, 9000, 1)
logits [[ 0.2680102   0.28259802  0.2882139  -2.0019114 ]]
Iteration 300 of 1000: loss=8.6 " + "l1=0.0623" + "l2=8.54 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.28745684  0.309749    0.31597447 -2.177546  ]]
Iteration 400 of 1000: loss=7.54 " + "l1=0" + "l2=7.54 f=-0.345 shape=(1, 9000, 1)
logits [[ 0.28259352  0.32746008  0.31342003 -2.3015907 ]]
Iteration 500 of 1000: loss=7.04 " + "l1=0.219" + "l2=6.82 f=-0.349 shape=(1, 9000, 1)
logits [[ 0.33316687  0.31123465  0.31854323 -2.3590503 ]]
Iteration 600 of 1000: loss=6.41 " + "l1=0" + "l2=6.41 f=-0.355 shape=(1, 9000, 1)
logits [[ 0.3054432   0.3091096   0.30750814 -2.3424096 ]]
Iteration 700 of 1000: loss=6.08 " + "l1=0" + "l2=6.08 f=-0.358 shape=(1, 9000, 1)
logits [[ 0.24980795  0.30121478  0.2888997  -2.2717807 ]]
Iteration 800 of 1000: loss=5.76 " + "l1=0.021" + "l2=5.74 f=-0.358 shape=(1, 9000, 1)
logits [[ 0.24496543  0.2849924   0.28709507 -2.2480087 ]]
Iteration 900 of 1000: loss=5.51 " + "l1=0" + "l2=5.51 f=-0.352 shape=(1, 9000, 1)
logits [[ 0.2754372   0.29678842  0.27779377 -2.2571504 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=44.9 " + "l1=44.9" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 5.2364016 -2.9260345  3.130357  -8.065467 ]]
Iteration 100 of 1000: loss=14.9 " + "l1=6.35" + "l2=8.58 f=-0.366 shape=(1, 9000, 1)
logits [[ 0.77049017 -0.36858886  0.7863621  -2.6523223 ]]
Iteration 200 of 1000: loss=8.56 " + "l1=0.0924" + "l2=8.47 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.29357988  0.28115264  0.29796124 -1.9951425 ]]
Iteration 300 of 1000: loss=7 " + "l1=0.00539" + "l2=7 f=-0.302 shape=(1, 9000, 1)
logits [[ 0.2640029   0.28945237  0.2904315  -2.0500698 ]]
Iteration 400 of 1000: loss=6.24 " + "l1=0.0255" + "l2=6.21 f=-0.314 shape=(1, 9000, 1)
logits [[ 0.2755532   0.27786323  0.2825055  -2.0907958 ]]
Iteration 500 of 1000: loss=5.75 " + "l1=0" + "l2=5.75 f=-0.312 shape=(1, 9000, 1)
logits [[ 0.25106093  0.28186694  0.2675368  -2.0468593 ]]
Iteration 600 of 1000: loss=5.32 " + "l1=0" + "l2=5.32 f=-0.309 shape=(1, 9000, 1)
logits [[ 0.2539933   0.27706766  0.26950672 -2.0363564 ]]
Iteration 700 of 1000: loss=4.98 " + "l1=0" + "l2=4.98 f=-0.313 shape=(1, 9000, 1)
logits [[ 0.24850243  0.2729574   0.26241115 -2.0365138 ]]
Iteration 800 of 1000: loss=4.64 " + "l1=0.00119" + "l2=4.64 f=-0.323 shape=(1, 9000, 1)
logits [[ 0.23708388  0.2621016   0.2623186  -2.0518713 ]]
Iteration 900 of 1000: loss=4.38 " + "l1=0" + "l2=4.38 f=-0.328 shape=(1, 9000, 1)
logits [[ 0.23693776  0.256534    0.2504826  -2.0577307 ]]
--- 264.17523741722107 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0211 " + "l1=0.0211" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 5.2364016 -2.9260345  3.130357  -8.065467 ]]
Iteration 100 of 1000: loss=0.0209 " + "l1=0.0208" + "l2=0.000144 f=-0.657 shape=(1, 9000, 1)
logits [[ 5.2120023 -2.9299238  3.1326795 -8.041419 ]]
Iteration 200 of 1000: loss=0.0209 " + "l1=0.0208" + "l2=0.000106 f=-0.657 shape=(1, 9000, 1)
logits [[ 5.2124424 -2.9308016  3.13363   -8.042773 ]]
Iteration 300 of 1000: loss=0.0209 " + "l1=0.0208" + "l2=0.000143 f=-0.657 shape=(1, 9000, 1)
logits [[ 5.2104316 -2.9319048  3.134556  -8.041358 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.211 " + "l1=0.211" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 5.2364016 -2.9260345  3.130357  -8.065467 ]]
Iteration 100 of 1000: loss=0.199 " + "l1=0.193" + "l2=0.00614 f=-0.659 shape=(1, 9000, 1)
logits [[ 5.0759015 -2.9478455  3.1464877 -7.911863 ]]
Iteration 200 of 1000: loss=0.195 " + "l1=0.186" + "l2=0.00889 f=-0.662 shape=(1, 9000, 1)
logits [[ 5.0163593 -2.9653594  3.1580563 -7.8551393]]
Iteration 300 of 1000: loss=0.191 " + "l1=0.179" + "l2=0.0115 f=-0.665 shape=(1, 9000, 1)
logits [[ 4.9623575 -2.986511   3.170394  -7.8050966]]
Iteration 400 of 1000: loss=0.187 " + "l1=0.173" + "l2=0.0137 f=-0.668 shape=(1, 9000, 1)
logits [[ 4.9122834 -3.008743   3.182002  -7.7590475]]
Iteration 500 of 1000: loss=0.183 " + "l1=0.168" + "l2=0.0151 f=-0.671 shape=(1, 9000, 1)
logits [[ 4.87308   -3.0261867  3.1928854 -7.723988 ]]
Iteration 600 of 1000: loss=0.18 " + "l1=0.164" + "l2=0.0161 f=-0.673 shape=(1, 9000, 1)
logits [[ 4.842423  -3.0398376  3.202731  -7.697706 ]]
Iteration 700 of 1000: loss=0.177 " + "l1=0.16" + "l2=0.0168 f=-0.675 shape=(1, 9000, 1)
logits [[ 4.8133745 -3.051813   3.210075  -7.6710987]]
Iteration 800 of 1000: loss=0.174 " + "l1=0.157" + "l2=0.0175 f=-0.677 shape=(1, 9000, 1)
logits [[ 4.783097  -3.0647693  3.2168736 -7.645085 ]]
Iteration 900 of 1000: loss=0.171 " + "l1=0.153" + "l2=0.0184 f=-0.68 shape=(1, 9000, 1)
logits [[ 4.752644  -3.0769298  3.2229154 -7.6189475]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.11 " + "l1=2.11" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 5.2364016 -2.9260345  3.130357  -8.065467 ]]
Iteration 100 of 1000: loss=0.995 " + "l1=0.451" + "l2=0.544 f=-0.697 shape=(1, 9000, 1)
logits [[ 3.6611705 -3.1096282  3.210329  -6.5508947]]
Iteration 200 of 1000: loss=0.586 " + "l1=0" + "l2=0.586 f=-0.724 shape=(1, 9000, 1)
logits [[ 3.2509978 -3.2422163  3.2563245 -6.161234 ]]
Iteration 300 of 1000: loss=0.444 " + "l1=0.000572" + "l2=0.444 f=-0.738 shape=(1, 9000, 1)
logits [[ 3.3027792 -3.304155   3.3022075 -6.251449 ]]
Iteration 400 of 1000: loss=0.375 " + "l1=0.004" + "l2=0.371 f=-0.745 shape=(1, 9000, 1)
logits [[ 3.329483  -3.3387916  3.3254843 -6.296548 ]]
Iteration 500 of 1000: loss=0.329 " + "l1=0.00814" + "l2=0.321 f=-0.747 shape=(1, 9000, 1)
logits [[ 3.3480484 -3.3623214  3.3399053 -6.3137565]]
Iteration 600 of 1000: loss=0.29 " + "l1=0" + "l2=0.29 f=-0.748 shape=(1, 9000, 1)
logits [[ 3.3469965 -3.3742309  3.3530574 -6.3187413]]
Iteration 700 of 1000: loss=0.26 " + "l1=0" + "l2=0.26 f=-0.747 shape=(1, 9000, 1)
logits [[ 3.344883  -3.3757827  3.3544738 -6.3131833]]
Iteration 800 of 1000: loss=0.232 " + "l1=0.000236" + "l2=0.232 f=-0.746 shape=(1, 9000, 1)
logits [[ 3.3498728 -3.3739414  3.349637  -6.3076763]]
Iteration 900 of 1000: loss=0.216 " + "l1=0" + "l2=0.216 f=-0.743 shape=(1, 9000, 1)
logits [[ 3.333746  -3.3646934  3.3374712 -6.2774596]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.16 " + "l1=1.16" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 5.2364016 -2.9260345  3.130357  -8.065467 ]]
Iteration 100 of 1000: loss=0.802 " + "l1=0.618" + "l2=0.184 f=-0.672 shape=(1, 9000, 1)
logits [[ 4.322271  -3.0448146  3.1987758 -7.1634617]]
Iteration 200 of 1000: loss=0.644 " + "l1=0.377" + "l2=0.268 f=-0.69 shape=(1, 9000, 1)
logits [[ 3.9264517 -3.1305254  3.2416394 -6.796619 ]]
Iteration 300 of 1000: loss=0.526 " + "l1=0.205" + "l2=0.321 f=-0.715 shape=(1, 9000, 1)
logits [[ 3.6528287 -3.2290566  3.2809622 -6.5650926]]
Iteration 400 of 1000: loss=0.401 " + "l1=0.0151" + "l2=0.385 f=-0.741 shape=(1, 9000, 1)
logits [[ 3.3567643 -3.3505335  3.3292997 -6.297554 ]]
Iteration 500 of 1000: loss=0.323 " + "l1=0.000577" + "l2=0.322 f=-0.746 shape=(1, 9000, 1)
logits [[ 3.3453274 -3.3697708  3.3442788 -6.3024573]]
Iteration 600 of 1000: loss=0.279 " + "l1=0.00604" + "l2=0.273 f=-0.748 shape=(1, 9000, 1)
logits [[ 3.3619628 -3.3857899  3.3509738 -6.319874 ]]
Iteration 700 of 1000: loss=0.247 " + "l1=0" + "l2=0.247 f=-0.748 shape=(1, 9000, 1)
logits [[ 3.3384705 -3.3893545  3.3512719 -6.291235 ]]
Iteration 800 of 1000: loss=0.219 " + "l1=0" + "l2=0.219 f=-0.746 shape=(1, 9000, 1)
logits [[ 3.3358052 -3.3843946  3.3406665 -6.2770963]]
Iteration 900 of 1000: loss=0.202 " + "l1=0" + "l2=0.202 f=-0.745 shape=(1, 9000, 1)
logits [[ 3.32057   -3.3758194  3.330164  -6.25433  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.684 " + "l1=0.684" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 5.2364016 -2.9260345  3.130357  -8.065467 ]]
Iteration 100 of 1000: loss=0.558 " + "l1=0.492" + "l2=0.0656 f=-0.665 shape=(1, 9000, 1)
logits [[ 4.694724  -3.001526   3.1804464 -7.533705 ]]
Iteration 200 of 1000: loss=0.504 " + "l1=0.408" + "l2=0.0958 f=-0.672 shape=(1, 9000, 1)
logits [[ 4.470584  -3.0637121  3.2143855 -7.307474 ]]
Iteration 300 of 1000: loss=0.461 " + "l1=0.341" + "l2=0.12 f=-0.684 shape=(1, 9000, 1)
logits [[ 4.2843785 -3.1180308  3.234615  -7.1354403]]
Iteration 400 of 1000: loss=0.423 " + "l1=0.287" + "l2=0.136 f=-0.694 shape=(1, 9000, 1)
logits [[ 4.134762  -3.1557052  3.2517555 -7.006825 ]]
Iteration 500 of 1000: loss=0.389 " + "l1=0.243" + "l2=0.146 f=-0.707 shape=(1, 9000, 1)
logits [[ 4.0196877 -3.194808   3.270941  -6.9228654]]
Iteration 600 of 1000: loss=0.354 " + "l1=0.195" + "l2=0.159 f=-0.719 shape=(1, 9000, 1)
logits [[ 3.883412  -3.2361271  3.2833943 -6.808205 ]]
Iteration 700 of 1000: loss=0.315 " + "l1=0.142" + "l2=0.173 f=-0.728 shape=(1, 9000, 1)
logits [[ 3.733934  -3.2724812  3.2961202 -6.6703024]]
Iteration 800 of 1000: loss=0.282 " + "l1=0.1" + "l2=0.181 f=-0.735 shape=(1, 9000, 1)
logits [[ 3.6143942 -3.3046699  3.3057754 -6.5539827]]
Iteration 900 of 1000: loss=0.255 " + "l1=0.068" + "l2=0.187 f=-0.74 shape=(1, 9000, 1)
logits [[ 3.523586  -3.3299928  3.3143182 -6.4682093]]
--- 254.21003675460815 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.133 " + "l1=0.133" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 5.2364016 -2.9260345  3.130357  -8.065467 ]]
Iteration 100 of 1000: loss=0.132 " + "l1=0.132" + "l2=0.000546 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.183597  -2.9161997  3.1130207 -7.9847217]]
Iteration 200 of 1000: loss=0.132 " + "l1=0.131" + "l2=0.000552 f=-0.65 shape=(1, 9000, 1)
logits [[ 5.175547  -2.9139206  3.1098988 -7.9713707]]
Iteration 300 of 1000: loss=0.132 " + "l1=0.131" + "l2=0.000657 f=-0.648 shape=(1, 9000, 1)
logits [[ 5.165401  -2.9110422  3.1056888 -7.953981 ]]
Iteration 400 of 1000: loss=0.132 " + "l1=0.131" + "l2=0.000785 f=-0.647 shape=(1, 9000, 1)
logits [[ 5.1554193 -2.9079218  3.1013339 -7.9361587]]
Iteration 500 of 1000: loss=0.132 " + "l1=0.131" + "l2=0.000908 f=-0.645 shape=(1, 9000, 1)
logits [[ 5.1457    -2.9045265  3.0967958 -7.9182267]]
Iteration 600 of 1000: loss=0.131 " + "l1=0.13" + "l2=0.00104 f=-0.643 shape=(1, 9000, 1)
logits [[ 5.136201  -2.9010835  3.0923133 -7.9005065]]
Iteration 700 of 1000: loss=0.131 " + "l1=0.13" + "l2=0.00121 f=-0.642 shape=(1, 9000, 1)
logits [[ 5.1270547 -2.8976836  3.087855  -7.8833838]]
Iteration 800 of 1000: loss=0.131 " + "l1=0.13" + "l2=0.00135 f=-0.64 shape=(1, 9000, 1)
logits [[ 5.1180587 -2.8940787  3.0832813 -7.8664813]]
Iteration 900 of 1000: loss=0.131 " + "l1=0.13" + "l2=0.00142 f=-0.638 shape=(1, 9000, 1)
logits [[ 5.109397  -2.8906088  3.0789075 -7.8501306]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.33 " + "l1=1.33" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 5.2364016 -2.9260345  3.130357  -8.065467 ]]
Iteration 100 of 1000: loss=1.25 " + "l1=1.21" + "l2=0.0421 f=-0.615 shape=(1, 9000, 1)
logits [[ 4.7590404 -2.8552303  2.9898427 -7.3532677]]
Iteration 200 of 1000: loss=1.22 " + "l1=1.16" + "l2=0.0597 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.562581  -2.8199239  2.932163  -7.0562882]]
Iteration 300 of 1000: loss=1.19 " + "l1=1.12" + "l2=0.0735 f=-0.579 shape=(1, 9000, 1)
logits [[ 4.4008594 -2.7809796  2.8780687 -6.8125825]]
Iteration 400 of 1000: loss=1.17 " + "l1=1.09" + "l2=0.0842 f=-0.564 shape=(1, 9000, 1)
logits [[ 4.2662234 -2.7475758  2.8273935 -6.6019907]]
Iteration 500 of 1000: loss=1.15 " + "l1=1.06" + "l2=0.0914 f=-0.552 shape=(1, 9000, 1)
logits [[ 4.15469   -2.713416   2.7758584 -6.42521  ]]
Iteration 600 of 1000: loss=1.13 " + "l1=1.03" + "l2=0.0971 f=-0.539 shape=(1, 9000, 1)
logits [[ 4.0566993 -2.6747756  2.7236135 -6.2608037]]
Iteration 700 of 1000: loss=1.11 " + "l1=1" + "l2=0.105 f=-0.523 shape=(1, 9000, 1)
logits [[ 3.9429054 -2.6360164  2.6727731 -6.073565 ]]
Iteration 800 of 1000: loss=1.08 " + "l1=0.973" + "l2=0.111 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.834947  -2.5911055  2.6224244 -5.894675 ]]
Iteration 900 of 1000: loss=1.06 " + "l1=0.942" + "l2=0.117 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.714164  -2.5362322  2.5680923 -5.708913 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=13.3 " + "l1=13.3" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 5.2364016 -2.9260345  3.130357  -8.065467 ]]
Iteration 100 of 1000: loss=7.4 " + "l1=4.96" + "l2=2.44 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.8764893 -2.274716   1.880914  -3.0839107]]
Iteration 200 of 1000: loss=5.84 " + "l1=2.98" + "l2=2.86 f=-0.246 shape=(1, 9000, 1)
logits [[ 1.2392876 -1.8650308  1.3113804 -1.6707093]]
Iteration 300 of 1000: loss=4.69 " + "l1=1.56" + "l2=3.14 f=-0.137 shape=(1, 9000, 1)
logits [[ 0.7346545  -1.5747287   0.9230289  -0.63199335]]
Iteration 400 of 1000: loss=3.69 " + "l1=0.499" + "l2=3.19 f=-0.0472 shape=(1, 9000, 1)
logits [[ 0.3633147  -1.4557161   0.70124763  0.20247608]]
Iteration 500 of 1000: loss=2.93 " + "l1=0.0773" + "l2=2.85 f=-0.0155 shape=(1, 9000, 1)
logits [[ 0.22643894 -1.400096    0.5945861   0.51726985]]
Iteration 600 of 1000: loss=2.39 " + "l1=0.0396" + "l2=2.35 f=0.00536 shape=(1, 9000, 1)
logits [[ 0.2720483  -1.3826069   0.58578813  0.5462196 ]]
Iteration 700 of 1000: loss=2.08 " + "l1=0.0104" + "l2=2.07 f=0.0104 shape=(1, 9000, 1)
logits [[ 0.27859366 -1.3811084   0.57723725  0.56686497]]
Iteration 800 of 1000: loss=1.86 " + "l1=0" + "l2=1.86 f=0.0154 shape=(1, 9000, 1)
logits [[ 0.29250976 -1.3905572   0.5788334   0.5808739 ]]
Iteration 900 of 1000: loss=1.7 " + "l1=0" + "l2=1.7 f=0.017 shape=(1, 9000, 1)
logits [[ 0.3048881  -1.3924556   0.57761204  0.57807505]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.32 " + "l1=7.32" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 5.2364016 -2.9260345  3.130357  -8.065467 ]]
Iteration 100 of 1000: loss=5.13 " + "l1=3.97" + "l2=1.16 f=-0.499 shape=(1, 9000, 1)
logits [[ 2.7159452 -2.544754   2.331351  -4.49969  ]]
Iteration 200 of 1000: loss=4.3 " + "l1=2.8" + "l2=1.5 f=-0.396 shape=(1, 9000, 1)
logits [[ 1.9409574 -2.3080554  1.939308  -3.156628 ]]
Iteration 300 of 1000: loss=3.77 " + "l1=2.31" + "l2=1.46 f=-0.31 shape=(1, 9000, 1)
logits [[ 1.6734985 -2.064479   1.6767467 -2.5263703]]
Iteration 400 of 1000: loss=3.28 " + "l1=1.8" + "l2=1.48 f=-0.228 shape=(1, 9000, 1)
logits [[ 1.3908887 -1.8202099  1.3967257 -1.8791893]]
Iteration 500 of 1000: loss=2.81 " + "l1=1.28" + "l2=1.53 f=-0.138 shape=(1, 9000, 1)
logits [[ 1.0829619 -1.596866   1.1464708 -1.1841965]]
Iteration 600 of 1000: loss=2.37 " + "l1=0.816" + "l2=1.56 f=-0.071 shape=(1, 9000, 1)
logits [[ 0.77126557 -1.4753509   0.9518528  -0.53192365]]
Iteration 700 of 1000: loss=2.01 " + "l1=0.457" + "l2=1.56 f=-0.0158 shape=(1, 9000, 1)
logits [[ 0.58012336 -1.4392213   0.81307906 -0.01728942]]
Iteration 800 of 1000: loss=1.77 " + "l1=0.253" + "l2=1.52 f=0.0161 shape=(1, 9000, 1)
logits [[ 0.4981998 -1.4077424  0.7174581  0.256568 ]]
Iteration 900 of 1000: loss=1.57 " + "l1=0.111" + "l2=1.46 f=0.0385 shape=(1, 9000, 1)
logits [[ 0.43259028 -1.3632828   0.6430246   0.4416228 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.32 " + "l1=4.32" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 5.2364016 -2.9260345  3.130357  -8.065467 ]]
Iteration 100 of 1000: loss=3.53 " + "l1=3.09" + "l2=0.435 f=-0.55 shape=(1, 9000, 1)
logits [[ 3.669624 -2.677822  2.65448  -5.845435]]
Iteration 200 of 1000: loss=3.18 " + "l1=2.52" + "l2=0.658 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.9757612 -2.5306447  2.3995988 -4.7695775]]
Iteration 300 of 1000: loss=2.9 " + "l1=2.14" + "l2=0.762 f=-0.431 shape=(1, 9000, 1)
logits [[ 2.5391798 -2.4159784  2.1876943 -4.0364256]]
Iteration 400 of 1000: loss=2.64 " + "l1=1.8" + "l2=0.847 f=-0.38 shape=(1, 9000, 1)
logits [[ 2.133103  -2.271091   2.0095737 -3.393532 ]]
Iteration 500 of 1000: loss=2.4 " + "l1=1.53" + "l2=0.865 f=-0.329 shape=(1, 9000, 1)
logits [[ 1.834139  -2.104407   1.8363047 -2.8816946]]
Iteration 600 of 1000: loss=2.14 " + "l1=1.31" + "l2=0.837 f=-0.268 shape=(1, 9000, 1)
logits [[ 1.6229589 -1.9305651  1.6251433 -2.3905797]]
Iteration 700 of 1000: loss=1.95 " + "l1=1.14" + "l2=0.817 f=-0.213 shape=(1, 9000, 1)
logits [[ 1.473135  -1.7876407  1.4781336 -2.0171807]]
Iteration 800 of 1000: loss=1.8 " + "l1=0.975" + "l2=0.827 f=-0.17 shape=(1, 9000, 1)
logits [[ 1.3163539 -1.6816733  1.3423467 -1.6576786]]
Iteration 900 of 1000: loss=1.67 " + "l1=0.834" + "l2=0.839 f=-0.132 shape=(1, 9000, 1)
logits [[ 1.1560323 -1.6050311  1.2437592 -1.3209455]]
--- 295.55402278900146 seconds ---
Adv result:3
Loading record A03670
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0714 " + "l1=0.0714" + "l2=0 f=-0.5 shape=(1, 9000, 1)
logits [[ 5.6615477 -1.4782339  2.3549702 -8.536414 ]]
Iteration 100 of 1000: loss=0.0707 " + "l1=0.0703" + "l2=0.000369 f=-0.496 shape=(1, 9000, 1)
logits [[ 5.604291  -1.4253278  2.3157854 -8.477941 ]]
Iteration 200 of 1000: loss=0.0704 " + "l1=0.07" + "l2=0.0004 f=-0.494 shape=(1, 9000, 1)
logits [[ 5.592502  -1.4124345  2.3061888 -8.463503 ]]
Iteration 300 of 1000: loss=0.0703 " + "l1=0.0697" + "l2=0.000551 f=-0.493 shape=(1, 9000, 1)
logits [[ 5.5758886 -1.3964163  2.2938979 -8.444348 ]]
Iteration 400 of 1000: loss=0.0701 " + "l1=0.0694" + "l2=0.000682 f=-0.491 shape=(1, 9000, 1)
logits [[ 5.5586066 -1.38087    2.281816  -8.424786 ]]
Iteration 500 of 1000: loss=0.0699 " + "l1=0.0691" + "l2=0.000852 f=-0.49 shape=(1, 9000, 1)
logits [[ 5.5416293 -1.3665845  2.2703066 -8.405429 ]]
Iteration 600 of 1000: loss=0.0698 " + "l1=0.0688" + "l2=0.001 f=-0.489 shape=(1, 9000, 1)
logits [[ 5.5254335 -1.3538086  2.2595568 -8.387176 ]]
Iteration 700 of 1000: loss=0.0697 " + "l1=0.0685" + "l2=0.00117 f=-0.488 shape=(1, 9000, 1)
logits [[ 5.5098124 -1.3426375  2.24984   -8.3696   ]]
Iteration 800 of 1000: loss=0.0695 " + "l1=0.0683" + "l2=0.00127 f=-0.487 shape=(1, 9000, 1)
logits [[ 5.494478  -1.3326513  2.2407355 -8.352443 ]]
Iteration 900 of 1000: loss=0.0695 " + "l1=0.068" + "l2=0.00143 f=-0.487 shape=(1, 9000, 1)
logits [[ 5.479104  -1.3233533  2.2320385 -8.335361 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.714 " + "l1=0.714" + "l2=0 f=-0.5 shape=(1, 9000, 1)
logits [[ 5.6615477 -1.4782339  2.3549702 -8.536414 ]]
Iteration 100 of 1000: loss=0.648 " + "l1=0.623" + "l2=0.0249 f=-0.471 shape=(1, 9000, 1)
logits [[ 5.188477  -1.0452055  2.0308325 -8.057103 ]]
Iteration 200 of 1000: loss=0.611 " + "l1=0.57" + "l2=0.0408 f=-0.47 shape=(1, 9000, 1)
logits [[ 4.8658    -0.8373676  1.8403481 -7.7469316]]
Iteration 300 of 1000: loss=0.577 " + "l1=0.517" + "l2=0.0601 f=-0.471 shape=(1, 9000, 1)
logits [[ 4.52271    -0.64252967  1.6529168  -7.4165406 ]]
Iteration 400 of 1000: loss=0.533 " + "l1=0.448" + "l2=0.0854 f=-0.493 shape=(1, 9000, 1)
logits [[ 4.0390434 -0.4363215  1.4553562 -7.028866 ]]
Iteration 500 of 1000: loss=0.488 " + "l1=0.384" + "l2=0.104 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.5817719 -0.2559272  1.3039737 -6.638003 ]]
Iteration 600 of 1000: loss=0.446 " + "l1=0.324" + "l2=0.122 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.1539712  -0.08969255  1.1860595  -6.287887  ]]
Iteration 700 of 1000: loss=0.408 " + "l1=0.268" + "l2=0.14 f=-0.521 shape=(1, 9000, 1)
logits [[ 2.738273    0.06126099  1.085518   -5.967639  ]]
Iteration 800 of 1000: loss=0.369 " + "l1=0.209" + "l2=0.16 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.2894883  0.1971354  0.9841231 -5.6186047]]
Iteration 900 of 1000: loss=0.332 " + "l1=0.154" + "l2=0.178 f=-0.551 shape=(1, 9000, 1)
logits [[ 1.8862946   0.34227997  0.90035665 -5.3333697 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.14 " + "l1=7.14" + "l2=0 f=-0.5 shape=(1, 9000, 1)
logits [[ 5.6615477 -1.4782339  2.3549702 -8.536414 ]]
Iteration 100 of 1000: loss=1.33 " + "l1=0.0212" + "l2=1.31 f=-0.695 shape=(1, 9000, 1)
logits [[ 0.9854132  0.9641913  0.7289167 -5.458292 ]]
Iteration 200 of 1000: loss=0.897 " + "l1=0.0446" + "l2=0.852 f=-0.653 shape=(1, 9000, 1)
logits [[ 1.0279912   0.98339754  0.63252515 -5.2551804 ]]
Iteration 300 of 1000: loss=0.715 " + "l1=0" + "l2=0.715 f=-0.634 shape=(1, 9000, 1)
logits [[ 0.9652351   1.0156116   0.55174416 -5.067752  ]]
Iteration 400 of 1000: loss=0.624 " + "l1=0" + "l2=0.624 f=-0.626 shape=(1, 9000, 1)
logits [[ 0.94947463  1.0052047   0.51174754 -4.970677  ]]
Iteration 500 of 1000: loss=0.553 " + "l1=0" + "l2=0.553 f=-0.619 shape=(1, 9000, 1)
logits [[ 0.9614669   0.9775453   0.48918495 -4.9049516 ]]
Iteration 600 of 1000: loss=0.502 " + "l1=0" + "l2=0.502 f=-0.615 shape=(1, 9000, 1)
logits [[ 0.9483397   0.96869755  0.46110463 -4.836447  ]]
Iteration 700 of 1000: loss=0.456 " + "l1=0" + "l2=0.456 f=-0.609 shape=(1, 9000, 1)
logits [[ 0.9422686   0.95610917  0.44474015 -4.7791433 ]]
Iteration 800 of 1000: loss=0.422 " + "l1=0" + "l2=0.422 f=-0.606 shape=(1, 9000, 1)
logits [[ 0.899818    0.9585087   0.43368307 -4.714237  ]]
Iteration 900 of 1000: loss=0.378 " + "l1=0" + "l2=0.378 f=-0.594 shape=(1, 9000, 1)
logits [[ 0.9241134   0.93120986  0.44317058 -4.674712  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.93 " + "l1=3.93" + "l2=0 f=-0.5 shape=(1, 9000, 1)
logits [[ 5.6615477 -1.4782339  2.3549702 -8.536414 ]]
Iteration 100 of 1000: loss=1.24 " + "l1=0.0187" + "l2=1.23 f=-0.693 shape=(1, 9000, 1)
logits [[ 0.98565316  0.95170397  0.75929487 -5.46943   ]]
Iteration 200 of 1000: loss=0.72 " + "l1=0" + "l2=0.72 f=-0.675 shape=(1, 9000, 1)
logits [[ 0.9503721   0.9836855   0.62165433 -5.254583  ]]
Iteration 300 of 1000: loss=0.586 " + "l1=0" + "l2=0.586 f=-0.658 shape=(1, 9000, 1)
logits [[ 0.92557573  0.9837376   0.54385036 -5.0840178 ]]
Iteration 400 of 1000: loss=0.505 " + "l1=0.00791" + "l2=0.497 f=-0.641 shape=(1, 9000, 1)
logits [[ 0.96002114  0.945643    0.505398   -4.973809  ]]
Iteration 500 of 1000: loss=0.452 " + "l1=0.02" + "l2=0.432 f=-0.625 shape=(1, 9000, 1)
logits [[ 0.9662948   0.9299862   0.48179492 -4.8762426 ]]
Iteration 600 of 1000: loss=0.384 " + "l1=0" + "l2=0.384 f=-0.615 shape=(1, 9000, 1)
logits [[ 0.92056835  0.93650305  0.46974838 -4.7874475 ]]
Iteration 700 of 1000: loss=0.345 " + "l1=0.00471" + "l2=0.34 f=-0.601 shape=(1, 9000, 1)
logits [[ 0.9283544   0.9197826   0.46864057 -4.720385  ]]
Iteration 800 of 1000: loss=0.308 " + "l1=0" + "l2=0.308 f=-0.592 shape=(1, 9000, 1)
logits [[ 0.90065503  0.91439134  0.46759516 -4.6512966 ]]
Iteration 900 of 1000: loss=0.285 " + "l1=0.00561" + "l2=0.28 f=-0.582 shape=(1, 9000, 1)
logits [[ 0.90505993  0.8948583   0.47371957 -4.601991  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.32 " + "l1=2.32" + "l2=0 f=-0.5 shape=(1, 9000, 1)
logits [[ 5.6615477 -1.4782339  2.3549702 -8.536414 ]]
Iteration 100 of 1000: loss=1.42 " + "l1=0.918" + "l2=0.506 f=-0.551 shape=(1, 9000, 1)
logits [[ 2.9270153   0.10363965  1.2266469  -6.462373  ]]
Iteration 200 of 1000: loss=0.68 " + "l1=0" + "l2=0.68 f=-0.682 shape=(1, 9000, 1)
logits [[ 0.91549623  0.9534249   0.6585175  -5.2563367 ]]
Iteration 300 of 1000: loss=0.522 " + "l1=0.00658" + "l2=0.516 f=-0.652 shape=(1, 9000, 1)
logits [[ 0.95381045  0.9335626   0.55121416 -5.0476947 ]]
Iteration 400 of 1000: loss=0.429 " + "l1=0" + "l2=0.429 f=-0.63 shape=(1, 9000, 1)
logits [[ 0.92971873  0.94520336  0.48527852 -4.8787313 ]]
Iteration 500 of 1000: loss=0.375 " + "l1=0" + "l2=0.375 f=-0.613 shape=(1, 9000, 1)
logits [[ 0.90243363  0.94941825  0.46627182 -4.7702384 ]]
Iteration 600 of 1000: loss=0.334 " + "l1=0.00935" + "l2=0.325 f=-0.598 shape=(1, 9000, 1)
logits [[ 0.9421706   0.91340667  0.4708908  -4.719486  ]]
Iteration 700 of 1000: loss=0.299 " + "l1=0" + "l2=0.299 f=-0.596 shape=(1, 9000, 1)
logits [[ 0.88991773  0.9190358   0.46543506 -4.658875  ]]
Iteration 800 of 1000: loss=0.271 " + "l1=0" + "l2=0.271 f=-0.591 shape=(1, 9000, 1)
logits [[ 0.8848442   0.89867574  0.46819413 -4.6151233 ]]
Iteration 900 of 1000: loss=0.248 " + "l1=0" + "l2=0.248 f=-0.583 shape=(1, 9000, 1)
logits [[ 0.87562263  0.8873718   0.47842023 -4.5747914 ]]
--- 294.71197843551636 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0331 " + "l1=0.0331" + "l2=0 f=-0.5 shape=(1, 9000, 1)
logits [[ 5.6615477 -1.4782339  2.3549702 -8.536414 ]]
Iteration 100 of 1000: loss=0.0329 " + "l1=0.0327" + "l2=0.000201 f=-0.502 shape=(1, 9000, 1)
logits [[ 5.633049  -1.4862963  2.3663378 -8.522328 ]]
Iteration 200 of 1000: loss=0.0328 " + "l1=0.0327" + "l2=0.000156 f=-0.502 shape=(1, 9000, 1)
logits [[ 5.6320434 -1.4862833  2.3660913 -8.521097 ]]
Iteration 300 of 1000: loss=0.0328 " + "l1=0.0326" + "l2=0.000191 f=-0.503 shape=(1, 9000, 1)
logits [[ 5.62799   -1.4869536  2.3668685 -8.518199 ]]
Iteration 400 of 1000: loss=0.0328 " + "l1=0.0326" + "l2=0.000244 f=-0.503 shape=(1, 9000, 1)
logits [[ 5.6233015 -1.4875836  2.3676429 -8.514757 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.331 " + "l1=0.331" + "l2=0 f=-0.5 shape=(1, 9000, 1)
logits [[ 5.6615477 -1.4782339  2.3549702 -8.536414 ]]
Iteration 100 of 1000: loss=0.314 " + "l1=0.306" + "l2=0.00801 f=-0.519 shape=(1, 9000, 1)
logits [[ 5.4861674 -1.5389786  2.4296935 -8.451146 ]]
Iteration 200 of 1000: loss=0.307 " + "l1=0.295" + "l2=0.0119 f=-0.526 shape=(1, 9000, 1)
logits [[ 5.4091587 -1.5677872  2.4618876 -8.406109 ]]
Iteration 300 of 1000: loss=0.3 " + "l1=0.285" + "l2=0.0155 f=-0.535 shape=(1, 9000, 1)
logits [[ 5.3243237 -1.5900923  2.4768493 -8.349247 ]]
Iteration 400 of 1000: loss=0.295 " + "l1=0.276" + "l2=0.0188 f=-0.541 shape=(1, 9000, 1)
logits [[ 5.2398825 -1.5989119  2.4802275 -8.284123 ]]
Iteration 500 of 1000: loss=0.289 " + "l1=0.267" + "l2=0.022 f=-0.549 shape=(1, 9000, 1)
logits [[ 5.1465716 -1.601838   2.4745312 -8.213373 ]]
Iteration 600 of 1000: loss=0.284 " + "l1=0.26" + "l2=0.0245 f=-0.555 shape=(1, 9000, 1)
logits [[ 5.061682  -1.6025298  2.4649708 -8.144783 ]]
Iteration 700 of 1000: loss=0.279 " + "l1=0.253" + "l2=0.0265 f=-0.561 shape=(1, 9000, 1)
logits [[ 4.9773264 -1.5985336  2.4503064 -8.071368 ]]
Iteration 800 of 1000: loss=0.275 " + "l1=0.246" + "l2=0.0286 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.892577  -1.5928788  2.432881  -7.9968543]]
Iteration 900 of 1000: loss=0.27 " + "l1=0.238" + "l2=0.0314 f=-0.574 shape=(1, 9000, 1)
logits [[ 4.793741  -1.5826409  2.4102602 -7.918903 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.31 " + "l1=3.31" + "l2=0 f=-0.5 shape=(1, 9000, 1)
logits [[ 5.6615477 -1.4782339  2.3549702 -8.536414 ]]
Iteration 100 of 1000: loss=0.902 " + "l1=0" + "l2=0.902 f=-0.807 shape=(1, 9000, 1)
logits [[ 2.646472  -1.687959   2.6540246 -6.8412027]]
Iteration 200 of 1000: loss=0.631 " + "l1=0" + "l2=0.631 f=-0.785 shape=(1, 9000, 1)
logits [[ 2.5647416 -1.590584   2.5733085 -6.6872783]]
Iteration 300 of 1000: loss=0.535 " + "l1=0" + "l2=0.535 f=-0.775 shape=(1, 9000, 1)
logits [[ 2.5015883 -1.548681   2.524935  -6.577718 ]]
Iteration 400 of 1000: loss=0.463 " + "l1=0.00102" + "l2=0.462 f=-0.767 shape=(1, 9000, 1)
logits [[ 2.4834964 -1.5080827  2.4824789 -6.5267057]]
Iteration 500 of 1000: loss=0.421 " + "l1=0.00537" + "l2=0.416 f=-0.763 shape=(1, 9000, 1)
logits [[ 2.4587061 -1.4787381  2.4533358 -6.4848633]]
Iteration 600 of 1000: loss=0.386 " + "l1=0.00387" + "l2=0.382 f=-0.76 shape=(1, 9000, 1)
logits [[ 2.429345  -1.4522588  2.4254782 -6.4409294]]
Iteration 700 of 1000: loss=0.355 " + "l1=0" + "l2=0.355 f=-0.757 shape=(1, 9000, 1)
logits [[ 2.3915124 -1.4291735  2.398221  -6.3878856]]
Iteration 800 of 1000: loss=0.332 " + "l1=0" + "l2=0.332 f=-0.755 shape=(1, 9000, 1)
logits [[ 2.352378  -1.4094247  2.374112  -6.3374248]]
Iteration 900 of 1000: loss=0.307 " + "l1=0" + "l2=0.307 f=-0.748 shape=(1, 9000, 1)
logits [[ 2.3277693 -1.3787874  2.344539  -6.286426 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.82 " + "l1=1.82" + "l2=0 f=-0.5 shape=(1, 9000, 1)
logits [[ 5.6615477 -1.4782339  2.3549702 -8.536414 ]]
Iteration 100 of 1000: loss=1.07 " + "l1=0.612" + "l2=0.457 f=-0.719 shape=(1, 9000, 1)
logits [[ 3.6398146 -1.702148   2.5269406 -7.3392057]]
Iteration 200 of 1000: loss=0.578 " + "l1=0.00354" + "l2=0.575 f=-0.79 shape=(1, 9000, 1)
logits [[ 2.601274  -1.6260173  2.5948458 -6.7281938]]
Iteration 300 of 1000: loss=0.448 " + "l1=0.000809" + "l2=0.447 f=-0.773 shape=(1, 9000, 1)
logits [[ 2.5409634 -1.5859855  2.5394917 -6.5869255]]
Iteration 400 of 1000: loss=0.385 " + "l1=0.00029" + "l2=0.384 f=-0.761 shape=(1, 9000, 1)
logits [[ 2.4916952 -1.5268949  2.4911675 -6.499257 ]]
Iteration 500 of 1000: loss=0.34 " + "l1=0" + "l2=0.34 f=-0.754 shape=(1, 9000, 1)
logits [[ 2.4452007 -1.4866089  2.4504461 -6.426786 ]]
Iteration 600 of 1000: loss=0.314 " + "l1=0" + "l2=0.314 f=-0.747 shape=(1, 9000, 1)
logits [[ 2.4067001 -1.4531511  2.4135108 -6.356282 ]]
Iteration 700 of 1000: loss=0.295 " + "l1=0" + "l2=0.295 f=-0.744 shape=(1, 9000, 1)
logits [[ 2.38406   -1.4496328  2.3890178 -6.2977157]]
Iteration 800 of 1000: loss=0.28 " + "l1=0" + "l2=0.28 f=-0.741 shape=(1, 9000, 1)
logits [[ 2.370304  -1.4539415  2.372256  -6.2535863]]
Iteration 900 of 1000: loss=0.262 " + "l1=0.00206" + "l2=0.26 f=-0.735 shape=(1, 9000, 1)
logits [[ 2.350128  -1.4385192  2.3463855 -6.1982465]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.07 " + "l1=1.07" + "l2=0 f=-0.5 shape=(1, 9000, 1)
logits [[ 5.6615477 -1.4782339  2.3549702 -8.536414 ]]
Iteration 100 of 1000: loss=0.881 " + "l1=0.783" + "l2=0.0984 f=-0.582 shape=(1, 9000, 1)
logits [[ 4.9484415 -1.672535   2.5396147 -8.145237 ]]
Iteration 200 of 1000: loss=0.711 " + "l1=0.456" + "l2=0.255 f=-0.697 shape=(1, 9000, 1)
logits [[ 3.9062595 -1.6744572  2.5032005 -7.522658 ]]
Iteration 300 of 1000: loss=0.528 " + "l1=0.211" + "l2=0.317 f=-0.75 shape=(1, 9000, 1)
logits [[ 3.1791887 -1.6613017  2.530573  -7.047745 ]]
Iteration 400 of 1000: loss=0.428 " + "l1=0.0964" + "l2=0.331 f=-0.76 shape=(1, 9000, 1)
logits [[ 2.8109806 -1.6154805  2.514348  -6.7505436]]
Iteration 500 of 1000: loss=0.361 " + "l1=0.0248" + "l2=0.336 f=-0.758 shape=(1, 9000, 1)
logits [[ 2.5713809 -1.5571885  2.4951143 -6.5429807]]
Iteration 600 of 1000: loss=0.32 " + "l1=0.00321" + "l2=0.317 f=-0.752 shape=(1, 9000, 1)
logits [[ 2.46838   -1.5132023  2.458504  -6.4232864]]
Iteration 700 of 1000: loss=0.301 " + "l1=0.000482" + "l2=0.3 f=-0.747 shape=(1, 9000, 1)
logits [[ 2.4279187 -1.4918888  2.426435  -6.3508005]]
Iteration 800 of 1000: loss=0.287 " + "l1=0.00538" + "l2=0.281 f=-0.744 shape=(1, 9000, 1)
logits [[ 2.4147148 -1.4893515  2.398152  -6.298482 ]]
Iteration 900 of 1000: loss=0.268 " + "l1=0.00108" + "l2=0.267 f=-0.743 shape=(1, 9000, 1)
logits [[ 2.383363  -1.4973079  2.380031  -6.239886 ]]
--- 262.510870218277 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.142 " + "l1=0.142" + "l2=0 f=-0.5 shape=(1, 9000, 1)
logits [[ 5.6615477 -1.4782339  2.3549702 -8.536414 ]]
Iteration 100 of 1000: loss=0.141 " + "l1=0.14" + "l2=0.000473 f=-0.496 shape=(1, 9000, 1)
logits [[ 5.5914717 -1.4417139  2.3163705 -8.45098  ]]
Iteration 200 of 1000: loss=0.141 " + "l1=0.14" + "l2=0.000542 f=-0.495 shape=(1, 9000, 1)
logits [[ 5.5716567 -1.4308984  2.3042915 -8.425724 ]]
Iteration 300 of 1000: loss=0.14 " + "l1=0.139" + "l2=0.000718 f=-0.494 shape=(1, 9000, 1)
logits [[ 5.5468464 -1.4179837  2.2897484 -8.394377 ]]
Iteration 400 of 1000: loss=0.14 " + "l1=0.139" + "l2=0.000898 f=-0.493 shape=(1, 9000, 1)
logits [[ 5.522045  -1.405433   2.2751117 -8.36255  ]]
Iteration 500 of 1000: loss=0.139 " + "l1=0.138" + "l2=0.00111 f=-0.492 shape=(1, 9000, 1)
logits [[ 5.4974957 -1.3936453  2.2610233 -8.331141 ]]
Iteration 600 of 1000: loss=0.139 " + "l1=0.138" + "l2=0.00129 f=-0.491 shape=(1, 9000, 1)
logits [[ 5.473195  -1.382953   2.2477229 -8.300228 ]]
Iteration 700 of 1000: loss=0.139 " + "l1=0.137" + "l2=0.00155 f=-0.49 shape=(1, 9000, 1)
logits [[ 5.448596  -1.3726801  2.2346249 -8.269116 ]]
Iteration 800 of 1000: loss=0.138 " + "l1=0.137" + "l2=0.00168 f=-0.489 shape=(1, 9000, 1)
logits [[ 5.423826  -1.3630829  2.221938  -8.238042 ]]
Iteration 900 of 1000: loss=0.138 " + "l1=0.136" + "l2=0.00189 f=-0.488 shape=(1, 9000, 1)
logits [[ 5.398974 -1.353363  2.209486 -8.207381]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.42 " + "l1=1.42" + "l2=0 f=-0.5 shape=(1, 9000, 1)
logits [[ 5.6615477 -1.4782339  2.3549702 -8.536414 ]]
Iteration 100 of 1000: loss=1.3 " + "l1=1.27" + "l2=0.0362 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.96945   -1.1350527  1.9786816 -7.7027416]]
Iteration 200 of 1000: loss=1.22 " + "l1=1.15" + "l2=0.0701 f=-0.466 shape=(1, 9000, 1)
logits [[ 4.437762  -0.9281978  1.7331506 -7.1075425]]
Iteration 300 of 1000: loss=1.13 " + "l1=1.01" + "l2=0.121 f=-0.485 shape=(1, 9000, 1)
logits [[ 3.6981754 -0.6864347  1.4512564 -6.404552 ]]
Iteration 400 of 1000: loss=1.04 " + "l1=0.886" + "l2=0.156 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.079308  -0.4806068  1.2215781 -5.7762637]]
Iteration 500 of 1000: loss=0.962 " + "l1=0.773" + "l2=0.189 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.5239766 -0.2511406  1.0087305 -5.205022 ]]
Iteration 600 of 1000: loss=0.881 " + "l1=0.664" + "l2=0.217 f=-0.484 shape=(1, 9000, 1)
logits [[ 1.9593414  -0.04252319  0.8286026  -4.680231  ]]
Iteration 700 of 1000: loss=0.815 " + "l1=0.582" + "l2=0.233 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.5464724  0.1620952  0.6817978 -4.2713413]]
Iteration 800 of 1000: loss=0.766 " + "l1=0.522" + "l2=0.244 f=-0.468 shape=(1, 9000, 1)
logits [[ 1.2470458   0.299713    0.54902565 -3.9695346 ]]
Iteration 900 of 1000: loss=0.725 " + "l1=0.47" + "l2=0.255 f=-0.481 shape=(1, 9000, 1)
logits [[ 0.96920556  0.411582    0.42856926 -3.734698  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=14.2 " + "l1=14.2" + "l2=0 f=-0.5 shape=(1, 9000, 1)
logits [[ 5.6615477 -1.4782339  2.3549702 -8.536414 ]]
Iteration 100 of 1000: loss=5.42 " + "l1=3.05" + "l2=2.37 f=-0.506 shape=(1, 9000, 1)
logits [[ 0.25620833  0.23648928  0.2677657  -2.786222  ]]
Iteration 200 of 1000: loss=3.12 " + "l1=0.26" + "l2=2.86 f=-0.291 shape=(1, 9000, 1)
logits [[-0.344091   -0.19125482 -0.18405838 -0.4441179 ]]
Iteration 300 of 1000: loss=2.47 " + "l1=0.0291" + "l2=2.44 f=-0.24 shape=(1, 9000, 1)
logits [[-0.27413464 -0.23131017 -0.21267737 -0.24180013]]
Iteration 400 of 1000: loss=2.25 " + "l1=0.0473" + "l2=2.2 f=-0.244 shape=(1, 9000, 1)
logits [[-0.28298584 -0.2131762  -0.21956219 -0.26051566]]
Iteration 500 of 1000: loss=2.06 " + "l1=0" + "l2=2.06 f=-0.236 shape=(1, 9000, 1)
logits [[-0.29623625 -0.22353984 -0.22012633 -0.20521626]]
Iteration 600 of 1000: loss=1.91 " + "l1=0" + "l2=1.91 f=-0.235 shape=(1, 9000, 1)
logits [[-0.29142293 -0.22394298 -0.22251503 -0.20380789]]
Iteration 700 of 1000: loss=1.78 " + "l1=0.0121" + "l2=1.77 f=-0.236 shape=(1, 9000, 1)
logits [[-0.26609993 -0.23140647 -0.21718551 -0.22924191]]
Iteration 800 of 1000: loss=1.67 " + "l1=0" + "l2=1.67 f=-0.236 shape=(1, 9000, 1)
logits [[-0.28254995 -0.22582215 -0.22226684 -0.21470872]]
Iteration 900 of 1000: loss=1.58 " + "l1=0" + "l2=1.58 f=-0.236 shape=(1, 9000, 1)
logits [[-0.2930183  -0.21350537 -0.22577412 -0.21223253]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.81 " + "l1=7.81" + "l2=0 f=-0.5 shape=(1, 9000, 1)
logits [[ 5.6615477 -1.4782339  2.3549702 -8.536414 ]]
Iteration 100 of 1000: loss=4.09 " + "l1=2.59" + "l2=1.5 f=-0.578 shape=(1, 9000, 1)
logits [[ 0.6518024   0.56943804  0.5253877  -4.057239  ]]
Iteration 200 of 1000: loss=2.92 " + "l1=1.62" + "l2=1.3 f=-0.493 shape=(1, 9000, 1)
logits [[ 0.24417344  0.23283266  0.24955772 -2.6975577 ]]
Iteration 300 of 1000: loss=2.34 " + "l1=0.959" + "l2=1.38 f=-0.415 shape=(1, 9000, 1)
logits [[ 0.02226676  0.01272254  0.02344434 -1.7193458 ]]
Iteration 400 of 1000: loss=2.02 " + "l1=0.512" + "l2=1.51 f=-0.342 shape=(1, 9000, 1)
logits [[-0.13890344 -0.0957095  -0.1044686  -1.027428  ]]
Iteration 500 of 1000: loss=1.81 " + "l1=0.282" + "l2=1.53 f=-0.301 shape=(1, 9000, 1)
logits [[-0.2371419  -0.15066738 -0.15477873 -0.66337097]]
Iteration 600 of 1000: loss=1.66 " + "l1=0.132" + "l2=1.53 f=-0.277 shape=(1, 9000, 1)
logits [[-0.2832457  -0.19362773 -0.19626145 -0.43296835]]
Iteration 700 of 1000: loss=1.53 " + "l1=0.0144" + "l2=1.52 f=-0.26 shape=(1, 9000, 1)
logits [[-0.31852052 -0.22949071 -0.23555459 -0.25560135]]
Iteration 800 of 1000: loss=1.42 " + "l1=0.00149" + "l2=1.41 f=-0.258 shape=(1, 9000, 1)
logits [[-0.31853214 -0.2376362  -0.23701029 -0.23971301]]
Iteration 900 of 1000: loss=1.32 " + "l1=0.0215" + "l2=1.3 f=-0.264 shape=(1, 9000, 1)
logits [[-0.2960141  -0.2412289  -0.2404711  -0.27950218]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.61 " + "l1=4.61" + "l2=0 f=-0.5 shape=(1, 9000, 1)
logits [[ 5.6615477 -1.4782339  2.3549702 -8.536414 ]]
Iteration 100 of 1000: loss=3.23 " + "l1=2.52" + "l2=0.702 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.3481233  -0.19372426  1.1943018  -5.416854  ]]
Iteration 200 of 1000: loss=2.25 " + "l1=1.4" + "l2=0.852 f=-0.541 shape=(1, 9000, 1)
logits [[ 0.58372813  0.54975826  0.41635644 -3.713945  ]]
Iteration 300 of 1000: loss=1.88 " + "l1=1.1" + "l2=0.774 f=-0.506 shape=(1, 9000, 1)
logits [[ 0.37736014  0.37985706  0.23341185 -3.0138466 ]]
Iteration 400 of 1000: loss=1.68 " + "l1=0.877" + "l2=0.803 f=-0.483 shape=(1, 9000, 1)
logits [[ 0.19660415  0.1787556   0.19288203 -2.5015748 ]]
Iteration 500 of 1000: loss=1.54 " + "l1=0.726" + "l2=0.814 f=-0.44 shape=(1, 9000, 1)
logits [[ 0.10874547  0.1273296   0.11196551 -2.1067135 ]]
Iteration 600 of 1000: loss=1.43 " + "l1=0.61" + "l2=0.817 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.05446978  0.06357844  0.06057135 -1.8142099 ]]
Iteration 700 of 1000: loss=1.34 " + "l1=0.565" + "l2=0.777 f=-0.38 shape=(1, 9000, 1)
logits [[ 0.05238187  0.05465799  0.05551888 -1.6829877 ]]
Iteration 800 of 1000: loss=1.27 " + "l1=0.529" + "l2=0.74 f=-0.363 shape=(1, 9000, 1)
logits [[ 0.04065792  0.04806598  0.03905725 -1.5790372 ]]
Iteration 900 of 1000: loss=1.19 " + "l1=0.469" + "l2=0.726 f=-0.337 shape=(1, 9000, 1)
logits [[ 0.02659427  0.01668425  0.02427888 -1.4158531 ]]
--- 298.6096773147583 seconds ---
Adv result:3
Loading record A03671
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0862 " + "l1=0.0862" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 5.3534155 -3.2628722  3.8928561 -7.9394107]]
Iteration 100 of 1000: loss=0.0857 " + "l1=0.0854" + "l2=0.000278 f=-0.486 shape=(1, 9000, 1)
logits [[ 5.3112683 -3.2329981  3.86975   -7.8901796]]
Iteration 200 of 1000: loss=0.0856 " + "l1=0.0853" + "l2=0.000262 f=-0.485 shape=(1, 9000, 1)
logits [[ 5.303904 -3.228005  3.864733 -7.880986]]
Iteration 300 of 1000: loss=0.0855 " + "l1=0.0851" + "l2=0.000328 f=-0.484 shape=(1, 9000, 1)
logits [[ 5.2931933 -3.2212627  3.8577206 -7.8674245]]
Iteration 400 of 1000: loss=0.0854 " + "l1=0.085" + "l2=0.000426 f=-0.484 shape=(1, 9000, 1)
logits [[ 5.2813425 -3.2139966  3.8503242 -7.852489 ]]
Iteration 500 of 1000: loss=0.0853 " + "l1=0.0848" + "l2=0.000519 f=-0.483 shape=(1, 9000, 1)
logits [[ 5.2695303 -3.2068958  3.8430545 -7.837427 ]]
Iteration 600 of 1000: loss=0.0852 " + "l1=0.0846" + "l2=0.00065 f=-0.482 shape=(1, 9000, 1)
logits [[ 5.257979  -3.2003438  3.8361793 -7.8225594]]
Iteration 700 of 1000: loss=0.0852 " + "l1=0.0844" + "l2=0.000787 f=-0.481 shape=(1, 9000, 1)
logits [[ 5.2469654 -3.1942992  3.8296936 -7.808204 ]]
Iteration 800 of 1000: loss=0.0852 " + "l1=0.0843" + "l2=0.000898 f=-0.481 shape=(1, 9000, 1)
logits [[ 5.2366557 -3.188816   3.8236666 -7.7946024]]
Iteration 900 of 1000: loss=0.0852 " + "l1=0.0841" + "l2=0.00107 f=-0.48 shape=(1, 9000, 1)
logits [[ 5.2265625 -3.1836534  3.8178    -7.7812166]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.862 " + "l1=0.862" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 5.3534155 -3.2628722  3.8928561 -7.9394107]]
Iteration 100 of 1000: loss=0.824 " + "l1=0.806" + "l2=0.0173 f=-0.467 shape=(1, 9000, 1)
logits [[ 5.0312843 -3.0330229  3.694262  -7.5594687]]
Iteration 200 of 1000: loss=0.795 " + "l1=0.763" + "l2=0.0329 f=-0.458 shape=(1, 9000, 1)
logits [[ 4.761904  -2.8641016  3.4954433 -7.2264223]]
Iteration 300 of 1000: loss=0.771 " + "l1=0.723" + "l2=0.0476 f=-0.459 shape=(1, 9000, 1)
logits [[ 4.5096974 -2.7250013  3.3177092 -6.939856 ]]
Iteration 400 of 1000: loss=0.752 " + "l1=0.693" + "l2=0.059 f=-0.456 shape=(1, 9000, 1)
logits [[ 4.2989616 -2.6297545  3.203277  -6.6984577]]
Iteration 500 of 1000: loss=0.736 " + "l1=0.668" + "l2=0.0684 f=-0.454 shape=(1, 9000, 1)
logits [[ 4.1243863 -2.556623   3.1113915 -6.4946895]]
Iteration 600 of 1000: loss=0.723 " + "l1=0.646" + "l2=0.0765 f=-0.452 shape=(1, 9000, 1)
logits [[ 3.9646223 -2.4990296  3.0308936 -6.304653 ]]
Iteration 700 of 1000: loss=0.709 " + "l1=0.625" + "l2=0.0845 f=-0.453 shape=(1, 9000, 1)
logits [[ 3.8003476 -2.4480615  2.9475813 -6.110639 ]]
Iteration 800 of 1000: loss=0.696 " + "l1=0.605" + "l2=0.0907 f=-0.454 shape=(1, 9000, 1)
logits [[ 3.6585824 -2.394582   2.8617516 -5.9428654]]
Iteration 900 of 1000: loss=0.684 " + "l1=0.589" + "l2=0.0951 f=-0.451 shape=(1, 9000, 1)
logits [[ 3.5465543 -2.3443136  2.7873666 -5.79224  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.62 " + "l1=8.62" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 5.3534155 -3.2628722  3.8928561 -7.9394107]]
Iteration 100 of 1000: loss=5.05 " + "l1=3.7" + "l2=1.35 f=-0.398 shape=(1, 9000, 1)
logits [[ 2.286994  -1.4135035  1.9963092 -4.460323 ]]
Iteration 200 of 1000: loss=3.59 " + "l1=2.01" + "l2=1.58 f=-0.364 shape=(1, 9000, 1)
logits [[ 1.2602952 -0.7515393  1.2618773 -3.2279248]]
Iteration 300 of 1000: loss=2.89 " + "l1=1.26" + "l2=1.63 f=-0.343 shape=(1, 9000, 1)
logits [[ 0.8714013  -0.3768197   0.88305974 -2.7486084 ]]
Iteration 400 of 1000: loss=2.43 " + "l1=0.732" + "l2=1.7 f=-0.322 shape=(1, 9000, 1)
logits [[ 0.61820966 -0.11369231  0.6130512  -2.4064965 ]]
Iteration 500 of 1000: loss=2.18 " + "l1=0.372" + "l2=1.81 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.42354444  0.05221157  0.42402312 -2.1649115 ]]
Iteration 600 of 1000: loss=2 " + "l1=0.188" + "l2=1.81 f=-0.307 shape=(1, 9000, 1)
logits [[ 0.3138226   0.12535197  0.31298482 -1.9787104 ]]
Iteration 700 of 1000: loss=1.74 " + "l1=0.00852" + "l2=1.73 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.20890418  0.20781228  0.21633497 -1.78555   ]]
Iteration 800 of 1000: loss=1.62 " + "l1=0.00266" + "l2=1.62 f=-0.276 shape=(1, 9000, 1)
logits [[ 0.20391932  0.20372577  0.20638727 -1.7181767 ]]
Iteration 900 of 1000: loss=1.54 " + "l1=0.00781" + "l2=1.53 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.19611678  0.19777745  0.20558666 -1.6683953 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.74 " + "l1=4.74" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 5.3534155 -3.2628722  3.8928561 -7.9394107]]
Iteration 100 of 1000: loss=3.43 " + "l1=2.88" + "l2=0.553 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.2571268 -1.9772373  2.5577068 -5.624119 ]]
Iteration 200 of 1000: loss=2.85 " + "l1=2.13" + "l2=0.724 f=-0.4 shape=(1, 9000, 1)
logits [[ 2.3831267 -1.486369   1.9889244 -4.4841814]]
Iteration 300 of 1000: loss=2.43 " + "l1=1.57" + "l2=0.863 f=-0.388 shape=(1, 9000, 1)
logits [[ 1.70965   -1.1467407  1.5829141 -3.6991525]]
Iteration 400 of 1000: loss=2.15 " + "l1=1.25" + "l2=0.893 f=-0.369 shape=(1, 9000, 1)
logits [[ 1.3238637  -0.95644855  1.3229439  -3.165486  ]]
Iteration 500 of 1000: loss=1.97 " + "l1=1.07" + "l2=0.899 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.1519845 -0.79801    1.1490595 -2.9025002]]
Iteration 600 of 1000: loss=1.89 " + "l1=0.973" + "l2=0.915 f=-0.332 shape=(1, 9000, 1)
logits [[ 1.0543456  -0.71494174  1.0517732  -2.720643  ]]
Iteration 700 of 1000: loss=1.81 " + "l1=0.885" + "l2=0.926 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.96416885 -0.6386013   0.9711489  -2.561424  ]]
Iteration 800 of 1000: loss=1.73 " + "l1=0.807" + "l2=0.924 f=-0.301 shape=(1, 9000, 1)
logits [[ 0.88737166 -0.57906014  0.8835418  -2.3950536 ]]
Iteration 900 of 1000: loss=1.65 " + "l1=0.709" + "l2=0.941 f=-0.279 shape=(1, 9000, 1)
logits [[ 0.7785969  -0.50414336  0.7841693  -2.1741247 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=6.68 " + "l1=6.68" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 5.3534155 -3.2628722  3.8928561 -7.9394107]]
Iteration 100 of 1000: loss=4.34 " + "l1=3.41" + "l2=0.929 f=-0.419 shape=(1, 9000, 1)
logits [[ 2.7196174 -1.6801504  2.2468262 -4.960801 ]]
Iteration 200 of 1000: loss=3.26 " + "l1=2.05" + "l2=1.21 f=-0.381 shape=(1, 9000, 1)
logits [[ 1.6037513 -1.0357462  1.5550367 -3.6487138]]
Iteration 300 of 1000: loss=2.68 " + "l1=1.44" + "l2=1.25 f=-0.36 shape=(1, 9000, 1)
logits [[ 1.1434833 -0.7082085  1.1419998 -3.0155807]]
Iteration 400 of 1000: loss=2.35 " + "l1=1.09" + "l2=1.25 f=-0.334 shape=(1, 9000, 1)
logits [[ 0.92044777 -0.49128568  0.9103695  -2.6747906 ]]
Iteration 500 of 1000: loss=2.12 " + "l1=0.796" + "l2=1.33 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.71029437 -0.306633    0.72013235 -2.3858376 ]]
Iteration 600 of 1000: loss=1.94 " + "l1=0.556" + "l2=1.38 f=-0.295 shape=(1, 9000, 1)
logits [[ 0.56090796 -0.1567295   0.5607149  -2.1434617 ]]
Iteration 700 of 1000: loss=1.8 " + "l1=0.404" + "l2=1.4 f=-0.279 shape=(1, 9000, 1)
logits [[ 0.4412751  -0.07608355  0.44496405 -1.9279401 ]]
Iteration 800 of 1000: loss=1.7 " + "l1=0.284" + "l2=1.42 f=-0.269 shape=(1, 9000, 1)
logits [[ 3.6487442e-01 -1.3983455e-03  3.6379224e-01 -1.8021715e+00]]
Iteration 900 of 1000: loss=1.62 " + "l1=0.206" + "l2=1.41 f=-0.263 shape=(1, 9000, 1)
logits [[ 0.3079508   0.04229536  0.30862972 -1.7115581 ]]
--- 294.25744676589966 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0146 " + "l1=0.0146" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 5.3534155 -3.2628722  3.8928561 -7.9394107]]
Iteration 100 of 1000: loss=0.0144 " + "l1=0.0142" + "l2=0.000193 f=-0.49 shape=(1, 9000, 1)
logits [[ 5.32331   -3.269609   3.8992014 -7.9141297]]
Iteration 200 of 1000: loss=0.0144 " + "l1=0.0142" + "l2=0.000141 f=-0.49 shape=(1, 9000, 1)
logits [[ 5.3226523 -3.2700899  3.8992784 -7.9134054]]
Iteration 300 of 1000: loss=0.0144 " + "l1=0.0142" + "l2=0.000177 f=-0.491 shape=(1, 9000, 1)
logits [[ 5.3183503 -3.27095    3.8998327 -7.909417 ]]
Iteration 400 of 1000: loss=0.0143 " + "l1=0.0141" + "l2=0.000201 f=-0.491 shape=(1, 9000, 1)
logits [[ 5.313134  -3.271946   3.9004698 -7.904548 ]]
Iteration 500 of 1000: loss=0.0143 " + "l1=0.0141" + "l2=0.000252 f=-0.491 shape=(1, 9000, 1)
logits [[ 5.307746  -3.2731512  3.900942  -7.89933  ]]
Iteration 600 of 1000: loss=0.0144 " + "l1=0.014" + "l2=0.000374 f=-0.491 shape=(1, 9000, 1)
logits [[ 5.3022313 -3.2745202  3.9014244 -7.8940196]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.146 " + "l1=0.146" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 5.3534155 -3.2628722  3.8928561 -7.9394107]]
Iteration 100 of 1000: loss=0.131 " + "l1=0.123" + "l2=0.00786 f=-0.501 shape=(1, 9000, 1)
logits [[ 5.1635733 -3.3179994  3.935241  -7.785582 ]]
Iteration 200 of 1000: loss=0.124 " + "l1=0.113" + "l2=0.0112 f=-0.506 shape=(1, 9000, 1)
logits [[ 5.0634646 -3.3325326  3.9345305 -7.690841 ]]
Iteration 300 of 1000: loss=0.117 " + "l1=0.103" + "l2=0.0144 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.948093  -3.3399484  3.9225686 -7.5785832]]
Iteration 400 of 1000: loss=0.11 " + "l1=0.0929" + "l2=0.0171 f=-0.518 shape=(1, 9000, 1)
logits [[ 4.83547   -3.3445258  3.9061975 -7.467856 ]]
Iteration 500 of 1000: loss=0.104 " + "l1=0.0838" + "l2=0.0199 f=-0.522 shape=(1, 9000, 1)
logits [[ 4.7337217 -3.3553336  3.8958356 -7.363477 ]]
Iteration 600 of 1000: loss=0.0969 " + "l1=0.0737" + "l2=0.0232 f=-0.527 shape=(1, 9000, 1)
logits [[ 4.6171436 -3.3621001  3.8804357 -7.2437634]]
Iteration 700 of 1000: loss=0.0892 " + "l1=0.0618" + "l2=0.0274 f=-0.533 shape=(1, 9000, 1)
logits [[ 4.4828167 -3.3702235  3.8647573 -7.1099167]]
Iteration 800 of 1000: loss=0.0821 " + "l1=0.0516" + "l2=0.0305 f=-0.54 shape=(1, 9000, 1)
logits [[ 4.3697715 -3.385579   3.8540447 -6.998374 ]]
Iteration 900 of 1000: loss=0.0762 " + "l1=0.0429" + "l2=0.0333 f=-0.546 shape=(1, 9000, 1)
logits [[ 4.2721825 -3.4001105  3.8433633 -6.898084 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.46 " + "l1=1.46" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 5.3534155 -3.2628722  3.8928561 -7.9394107]]
Iteration 100 of 1000: loss=0.231 " + "l1=0" + "l2=0.231 f=-0.574 shape=(1, 9000, 1)
logits [[ 3.9918323 -3.5392375  3.998265  -6.7462573]]
Iteration 200 of 1000: loss=0.152 " + "l1=0" + "l2=0.152 f=-0.577 shape=(1, 9000, 1)
logits [[ 3.9827485 -3.5480485  3.9855835 -6.729291 ]]
Iteration 300 of 1000: loss=0.118 " + "l1=0" + "l2=0.118 f=-0.581 shape=(1, 9000, 1)
logits [[ 3.9548268 -3.5416496  3.959016  -6.6959147]]
Iteration 400 of 1000: loss=0.0991 " + "l1=0.00212" + "l2=0.097 f=-0.582 shape=(1, 9000, 1)
logits [[ 3.9299529 -3.5292861  3.9278283 -6.65807  ]]
Iteration 500 of 1000: loss=0.0829 " + "l1=0" + "l2=0.0829 f=-0.584 shape=(1, 9000, 1)
logits [[ 3.899799  -3.521963   3.9039705 -6.6180425]]
Iteration 600 of 1000: loss=0.0746 " + "l1=0" + "l2=0.0746 f=-0.585 shape=(1, 9000, 1)
logits [[ 3.878691  -3.5214312  3.8906078 -6.5881276]]
Iteration 700 of 1000: loss=0.0669 " + "l1=0.00142" + "l2=0.0655 f=-0.585 shape=(1, 9000, 1)
logits [[ 3.880849  -3.5189378  3.8794246 -6.5821157]]
Iteration 800 of 1000: loss=0.0619 " + "l1=0" + "l2=0.0619 f=-0.587 shape=(1, 9000, 1)
logits [[ 3.8609834 -3.5232422  3.8739882 -6.559005 ]]
Iteration 900 of 1000: loss=0.0584 " + "l1=0" + "l2=0.0584 f=-0.587 shape=(1, 9000, 1)
logits [[ 3.8488429 -3.5243187  3.8672163 -6.541143 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.803 " + "l1=0.803" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 5.3534155 -3.2628722  3.8928561 -7.9394107]]
Iteration 100 of 1000: loss=0.247 " + "l1=0.00705" + "l2=0.24 f=-0.573 shape=(1, 9000, 1)
logits [[ 3.990121 -3.521094  3.977311 -6.738335]]
Iteration 200 of 1000: loss=0.146 " + "l1=0" + "l2=0.146 f=-0.579 shape=(1, 9000, 1)
logits [[ 3.9644256 -3.5358665  3.9652305 -6.7107205]]
Iteration 300 of 1000: loss=0.112 " + "l1=0" + "l2=0.112 f=-0.582 shape=(1, 9000, 1)
logits [[ 3.9310622 -3.5218077  3.9321089 -6.6677275]]
Iteration 400 of 1000: loss=0.0922 " + "l1=0" + "l2=0.0922 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.9021926 -3.5123994  3.9039965 -6.625964 ]]
Iteration 500 of 1000: loss=0.0798 " + "l1=0" + "l2=0.0798 f=-0.584 shape=(1, 9000, 1)
logits [[ 3.874157  -3.5057602  3.8812408 -6.58612  ]]
Iteration 600 of 1000: loss=0.0711 " + "l1=0" + "l2=0.0711 f=-0.586 shape=(1, 9000, 1)
logits [[ 3.857088  -3.5068605  3.8672588 -6.5611806]]
Iteration 700 of 1000: loss=0.0636 " + "l1=0" + "l2=0.0636 f=-0.586 shape=(1, 9000, 1)
logits [[ 3.857428  -3.5090048  3.860426  -6.554622 ]]
Iteration 800 of 1000: loss=0.0588 " + "l1=0" + "l2=0.0588 f=-0.587 shape=(1, 9000, 1)
logits [[ 3.8518794 -3.5113823  3.8544369 -6.542881 ]]
Iteration 900 of 1000: loss=0.0575 " + "l1=0" + "l2=0.0575 f=-0.589 shape=(1, 9000, 1)
logits [[ 3.8260405 -3.5191705  3.8535833 -6.517414 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.475 " + "l1=0.475" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 5.3534155 -3.2628722  3.8928561 -7.9394107]]
Iteration 100 of 1000: loss=0.296 " + "l1=0.2" + "l2=0.0963 f=-0.541 shape=(1, 9000, 1)
logits [[ 4.5673094 -3.4230397  3.9523363 -7.2609625]]
Iteration 200 of 1000: loss=0.175 " + "l1=0.00842" + "l2=0.167 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.9739022 -3.5149076  3.9480093 -6.705202 ]]
Iteration 300 of 1000: loss=0.119 " + "l1=0" + "l2=0.119 f=-0.579 shape=(1, 9000, 1)
logits [[ 3.9167833 -3.5088806  3.9239092 -6.6465178]]
Iteration 400 of 1000: loss=0.0939 " + "l1=0.00301" + "l2=0.0909 f=-0.581 shape=(1, 9000, 1)
logits [[ 3.8991673 -3.497971   3.8899107 -6.6144533]]
Iteration 500 of 1000: loss=0.0798 " + "l1=0.00283" + "l2=0.077 f=-0.581 shape=(1, 9000, 1)
logits [[ 3.8744104 -3.490025   3.8657105 -6.574014 ]]
Iteration 600 of 1000: loss=0.0697 " + "l1=0" + "l2=0.0697 f=-0.584 shape=(1, 9000, 1)
logits [[ 3.8531337 -3.4971087  3.8556376 -6.5461664]]
Iteration 700 of 1000: loss=0.0633 " + "l1=0.000127" + "l2=0.0631 f=-0.585 shape=(1, 9000, 1)
logits [[ 3.8501427 -3.501253   3.849751  -6.5368867]]
Iteration 800 of 1000: loss=0.0582 " + "l1=0.000354" + "l2=0.0579 f=-0.585 shape=(1, 9000, 1)
logits [[ 3.845736  -3.5039978  3.8446467 -6.528237 ]]
Iteration 900 of 1000: loss=0.055 " + "l1=0" + "l2=0.055 f=-0.587 shape=(1, 9000, 1)
logits [[ 3.8337247 -3.5066948  3.8399675 -6.513282 ]]
--- 276.35235500335693 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.133 " + "l1=0.133" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 5.3534155 -3.2628722  3.8928561 -7.9394107]]
Iteration 100 of 1000: loss=0.132 " + "l1=0.131" + "l2=0.00055 f=-0.485 shape=(1, 9000, 1)
logits [[ 5.2865424 -3.2501097  3.86625   -7.8426285]]
Iteration 200 of 1000: loss=0.131 " + "l1=0.131" + "l2=0.000599 f=-0.484 shape=(1, 9000, 1)
logits [[ 5.268549  -3.2455363  3.8576272 -7.817594 ]]
Iteration 300 of 1000: loss=0.131 " + "l1=0.13" + "l2=0.000764 f=-0.483 shape=(1, 9000, 1)
logits [[ 5.2458205 -3.2399702  3.8471725 -7.7856135]]
Iteration 400 of 1000: loss=0.131 " + "l1=0.13" + "l2=0.000979 f=-0.482 shape=(1, 9000, 1)
logits [[ 5.2222037 -3.2342577  3.8363175 -7.7522573]]
Iteration 500 of 1000: loss=0.13 " + "l1=0.129" + "l2=0.00122 f=-0.481 shape=(1, 9000, 1)
logits [[ 5.198009  -3.228572   3.8256543 -7.718144 ]]
Iteration 600 of 1000: loss=0.13 " + "l1=0.129" + "l2=0.00146 f=-0.48 shape=(1, 9000, 1)
logits [[ 5.1734705 -3.2230563  3.815041  -7.683698 ]]
Iteration 700 of 1000: loss=0.13 " + "l1=0.128" + "l2=0.00181 f=-0.478 shape=(1, 9000, 1)
logits [[ 5.1492553 -3.2179701  3.80481   -7.6497116]]
Iteration 800 of 1000: loss=0.13 " + "l1=0.127" + "l2=0.00208 f=-0.477 shape=(1, 9000, 1)
logits [[ 5.12575   -3.2132258  3.7949317 -7.617098 ]]
Iteration 900 of 1000: loss=0.129 " + "l1=0.127" + "l2=0.00231 f=-0.476 shape=(1, 9000, 1)
logits [[ 5.1027975 -3.208879   3.7854118 -7.585325 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.33 " + "l1=1.33" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 5.3534155 -3.2628722  3.8928561 -7.9394107]]
Iteration 100 of 1000: loss=1.21 " + "l1=1.15" + "l2=0.0594 f=-0.47 shape=(1, 9000, 1)
logits [[ 4.61302   -3.1442811  3.5740194 -6.9232163]]
Iteration 200 of 1000: loss=1.13 " + "l1=1.03" + "l2=0.0977 f=-0.468 shape=(1, 9000, 1)
logits [[ 4.0827546 -3.0345602  3.3180027 -6.2381263]]
Iteration 300 of 1000: loss=1.06 " + "l1=0.941" + "l2=0.123 f=-0.454 shape=(1, 9000, 1)
logits [[ 3.69353   -2.9508028  3.1537018 -5.7137985]]
Iteration 400 of 1000: loss=1 " + "l1=0.858" + "l2=0.147 f=-0.452 shape=(1, 9000, 1)
logits [[ 3.336373  -2.9005911  3.0032647 -5.2466173]]
Iteration 500 of 1000: loss=0.957 " + "l1=0.797" + "l2=0.16 f=-0.445 shape=(1, 9000, 1)
logits [[ 3.0790896 -2.8480248  2.882878  -4.8926635]]
Iteration 600 of 1000: loss=0.917 " + "l1=0.744" + "l2=0.173 f=-0.427 shape=(1, 9000, 1)
logits [[ 2.873506  -2.7874928  2.7763429 -4.57148  ]]
Iteration 700 of 1000: loss=0.883 " + "l1=0.698" + "l2=0.185 f=-0.411 shape=(1, 9000, 1)
logits [[ 2.6932392 -2.725926   2.6750567 -4.286142 ]]
Iteration 800 of 1000: loss=0.853 " + "l1=0.662" + "l2=0.191 f=-0.392 shape=(1, 9000, 1)
logits [[ 2.5654411 -2.647126   2.5660887 -4.052478 ]]
Iteration 900 of 1000: loss=0.828 " + "l1=0.635" + "l2=0.193 f=-0.375 shape=(1, 9000, 1)
logits [[ 2.477562  -2.583446   2.4788632 -3.8737428]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=13.3 " + "l1=13.3" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 5.3534155 -3.2628722  3.8928561 -7.9394107]]
Iteration 100 of 1000: loss=6.55 " + "l1=4.44" + "l2=2.11 f=-0.292 shape=(1, 9000, 1)
logits [[ 1.7276015 -1.934245   1.7407962 -2.7008772]]
Iteration 200 of 1000: loss=4.32 " + "l1=1.59" + "l2=2.73 f=-0.181 shape=(1, 9000, 1)
logits [[ 0.6229623  -1.4022403   0.824814   -0.76765263]]
Iteration 300 of 1000: loss=2.87 " + "l1=0" + "l2=2.87 f=-0.124 shape=(1, 9000, 1)
logits [[-0.07794586 -1.2187      0.39974415  0.40043458]]
Iteration 400 of 1000: loss=2.18 " + "l1=0" + "l2=2.18 f=-0.111 shape=(1, 9000, 1)
logits [[-0.04481068 -1.2092983   0.39920825  0.40986562]]
Iteration 500 of 1000: loss=1.81 " + "l1=0.0181" + "l2=1.8 f=-0.111 shape=(1, 9000, 1)
logits [[-0.00334159 -1.240897    0.40827313  0.39016175]]
Iteration 600 of 1000: loss=1.58 " + "l1=0" + "l2=1.58 f=-0.119 shape=(1, 9000, 1)
logits [[ 0.02083584 -1.2762971   0.3866718   0.39255482]]
Iteration 700 of 1000: loss=1.4 " + "l1=0" + "l2=1.4 f=-0.131 shape=(1, 9000, 1)
logits [[ 0.03046563 -1.2877609   0.35809252  0.37687683]]
Iteration 800 of 1000: loss=1.27 " + "l1=0" + "l2=1.27 f=-0.141 shape=(1, 9000, 1)
logits [[ 0.03883114 -1.3005883   0.349072    0.3506461 ]]
Iteration 900 of 1000: loss=1.17 " + "l1=0" + "l2=1.17 f=-0.151 shape=(1, 9000, 1)
logits [[ 0.0310833  -1.3095399   0.33380672  0.34204358]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.31 " + "l1=7.31" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 5.3534155 -3.2628722  3.8928561 -7.9394107]]
Iteration 100 of 1000: loss=4.48 " + "l1=3.58" + "l2=0.906 f=-0.397 shape=(1, 9000, 1)
logits [[ 2.4929817 -2.571745   2.4962656 -4.003847 ]]
Iteration 200 of 1000: loss=3.46 " + "l1=2.35" + "l2=1.1 f=-0.278 shape=(1, 9000, 1)
logits [[ 1.6918705 -1.9202678  1.6973537 -2.5799003]]
Iteration 300 of 1000: loss=2.81 " + "l1=1.6" + "l2=1.21 f=-0.219 shape=(1, 9000, 1)
logits [[ 1.1935132 -1.640505   1.2430795 -1.6738634]]
Iteration 400 of 1000: loss=2.25 " + "l1=0.811" + "l2=1.43 f=-0.178 shape=(1, 9000, 1)
logits [[ 0.6064608  -1.4832393   0.8200495  -0.65515614]]
Iteration 500 of 1000: loss=1.79 " + "l1=0.265" + "l2=1.53 f=-0.137 shape=(1, 9000, 1)
logits [[ 0.20923695 -1.4055283   0.5644254   0.08271324]]
Iteration 600 of 1000: loss=1.51 " + "l1=0" + "l2=1.51 f=-0.125 shape=(1, 9000, 1)
logits [[ 0.05277904 -1.3792728   0.4092304   0.4175159 ]]
Iteration 700 of 1000: loss=1.32 " + "l1=0.00238" + "l2=1.32 f=-0.136 shape=(1, 9000, 1)
logits [[ 0.09562628 -1.400926    0.3828841   0.37855697]]
Iteration 800 of 1000: loss=1.2 " + "l1=0" + "l2=1.2 f=-0.148 shape=(1, 9000, 1)
logits [[ 0.08108875 -1.3832035   0.3495899   0.3621437 ]]
Iteration 900 of 1000: loss=1.1 " + "l1=0.00334" + "l2=1.1 f=-0.158 shape=(1, 9000, 1)
logits [[ 0.08127623 -1.3728352   0.33379176  0.32772282]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.32 " + "l1=4.32" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 5.3534155 -3.2628722  3.8928561 -7.9394107]]
Iteration 100 of 1000: loss=3.06 " + "l1=2.51" + "l2=0.552 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.9351358 -2.9148424  2.9424965 -4.7679462]]
Iteration 200 of 1000: loss=2.56 " + "l1=2" + "l2=0.565 f=-0.37 shape=(1, 9000, 1)
logits [[ 2.3786073 -2.4726763  2.3798716 -3.766986 ]]
Iteration 300 of 1000: loss=2.21 " + "l1=1.58" + "l2=0.624 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.9172091 -2.1241646  1.9215586 -2.9470983]]
Iteration 400 of 1000: loss=1.97 " + "l1=1.29" + "l2=0.675 f=-0.272 shape=(1, 9000, 1)
logits [[ 1.6130061 -1.9608318  1.6186615 -2.359425 ]]
Iteration 500 of 1000: loss=1.79 " + "l1=1.03" + "l2=0.754 f=-0.249 shape=(1, 9000, 1)
logits [[ 1.3555417 -1.8872896  1.3596867 -1.823328 ]]
Iteration 600 of 1000: loss=1.65 " + "l1=0.831" + "l2=0.814 f=-0.23 shape=(1, 9000, 1)
logits [[ 1.1600419 -1.8540269  1.1660447 -1.3919309]]
Iteration 700 of 1000: loss=1.54 " + "l1=0.691" + "l2=0.85 f=-0.214 shape=(1, 9000, 1)
logits [[ 1.0017489 -1.7962024  1.03267   -1.0934232]]
Iteration 800 of 1000: loss=1.46 " + "l1=0.572" + "l2=0.888 f=-0.194 shape=(1, 9000, 1)
logits [[ 0.8505403  -1.7224703   0.9283648  -0.83228934]]
Iteration 900 of 1000: loss=1.37 " + "l1=0.431" + "l2=0.938 f=-0.177 shape=(1, 9000, 1)
logits [[ 0.65725887 -1.6793257   0.8190593  -0.50666463]]
--- 298.8457758426666 seconds ---
Adv result:3
Loading record A03707
(1, 3494)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0453 " + "l1=0.0453" + "l2=0 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.124772  -1.4045218 -0.8423516 -2.8488238]]
Iteration 100 of 1000: loss=0.0439 " + "l1=0.0433" + "l2=0.000589 f=-0.493 shape=(1, 9000, 1)
logits [[ 2.9870787 -1.3437393 -0.8631269 -2.7529032]]
Iteration 200 of 1000: loss=0.0433 " + "l1=0.0425" + "l2=0.000745 f=-0.494 shape=(1, 9000, 1)
logits [[ 2.9286761  -1.3230386  -0.87281185 -2.7090886 ]]
Iteration 300 of 1000: loss=0.0426 " + "l1=0.0416" + "l2=0.000956 f=-0.495 shape=(1, 9000, 1)
logits [[ 2.8613892 -1.299681  -0.8835706 -2.6584396]]
Iteration 400 of 1000: loss=0.0419 " + "l1=0.0407" + "l2=0.00118 f=-0.496 shape=(1, 9000, 1)
logits [[ 2.790329   -1.2770232  -0.89403874 -2.6033347 ]]
Iteration 500 of 1000: loss=0.0411 " + "l1=0.0397" + "l2=0.00139 f=-0.497 shape=(1, 9000, 1)
logits [[ 2.7184427 -1.2545403 -0.9052261 -2.5471172]]
Iteration 600 of 1000: loss=0.0405 " + "l1=0.0388" + "l2=0.00166 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.6503222 -1.2346596 -0.915394  -2.4929435]]
Iteration 700 of 1000: loss=0.04 " + "l1=0.0381" + "l2=0.00188 f=-0.499 shape=(1, 9000, 1)
logits [[ 2.5902874 -1.2185667 -0.923056  -2.44289  ]]
Iteration 800 of 1000: loss=0.0396 " + "l1=0.0375" + "l2=0.00208 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.5414333  -1.2065148  -0.92815423 -2.3999765 ]]
Iteration 900 of 1000: loss=0.0392 " + "l1=0.037" + "l2=0.00229 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.4981031 -1.1970261 -0.9322949 -2.3600636]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.453 " + "l1=0.453" + "l2=0 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.124772  -1.4045218 -0.8423516 -2.8488238]]
Iteration 100 of 1000: loss=0.318 " + "l1=0.25" + "l2=0.0682 f=-0.487 shape=(1, 9000, 1)
logits [[ 1.7045511 -0.795855  -0.9365542 -1.9196682]]
Iteration 200 of 1000: loss=0.203 " + "l1=0.0617" + "l2=0.141 f=-0.47 shape=(1, 9000, 1)
logits [[ 0.40563685 -0.21183479 -0.6662352  -1.4061029 ]]
Iteration 300 of 1000: loss=0.145 " + "l1=0" + "l2=0.145 f=-0.471 shape=(1, 9000, 1)
logits [[-0.10778986 -0.09959906 -0.7770929  -0.9001249 ]]
Iteration 400 of 1000: loss=0.114 " + "l1=0.00232" + "l2=0.112 f=-0.457 shape=(1, 9000, 1)
logits [[-0.14311473 -0.16632298 -0.8397017  -0.67985654]]
Iteration 500 of 1000: loss=0.0942 " + "l1=4.57e-05" + "l2=0.0942 f=-0.453 shape=(1, 9000, 1)
logits [[-0.21089388 -0.21135117 -0.90235984 -0.4882476 ]]
Iteration 600 of 1000: loss=0.081 " + "l1=0" + "l2=0.081 f=-0.453 shape=(1, 9000, 1)
logits [[-0.25216308 -0.25155187 -0.962299   -0.3442796 ]]
Iteration 700 of 1000: loss=0.0705 " + "l1=0" + "l2=0.0705 f=-0.451 shape=(1, 9000, 1)
logits [[-0.27680492 -0.27252653 -0.9823714  -0.27368832]]
Iteration 800 of 1000: loss=0.0633 " + "l1=0" + "l2=0.0633 f=-0.45 shape=(1, 9000, 1)
logits [[-0.2646737  -0.26340094 -0.99058974 -0.28251433]]
Iteration 900 of 1000: loss=0.0585 " + "l1=0.00159" + "l2=0.0569 f=-0.447 shape=(1, 9000, 1)
logits [[-0.24937934 -0.26526287 -0.9945824  -0.27988708]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.249 " + "l1=0.249" + "l2=0 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.124772  -1.4045218 -0.8423516 -2.8488238]]
Iteration 100 of 1000: loss=0.211 " + "l1=0.195" + "l2=0.0163 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.4297323  -1.1134269  -0.94610614 -2.3626242 ]]
Iteration 200 of 1000: loss=0.192 " + "l1=0.168" + "l2=0.0233 f=-0.497 shape=(1, 9000, 1)
logits [[ 2.0599957  -0.999366   -0.99136543 -2.0562618 ]]
Iteration 300 of 1000: loss=0.158 " + "l1=0.117" + "l2=0.0415 f=-0.482 shape=(1, 9000, 1)
logits [[ 1.4254345  -0.6951211  -0.87138003 -1.7873352 ]]
Iteration 400 of 1000: loss=0.134 " + "l1=0.0869" + "l2=0.0468 f=-0.458 shape=(1, 9000, 1)
logits [[ 0.99673784 -0.58248407 -0.73981196 -1.506362  ]]
Iteration 500 of 1000: loss=0.116 " + "l1=0.0671" + "l2=0.0488 f=-0.454 shape=(1, 9000, 1)
logits [[ 0.69786483 -0.52279663 -0.7357275  -1.2570612 ]]
Iteration 600 of 1000: loss=0.1 " + "l1=0.0456" + "l2=0.0544 f=-0.454 shape=(1, 9000, 1)
logits [[ 0.38183132 -0.44672182 -0.79560786 -0.9549375 ]]
Iteration 700 of 1000: loss=0.0863 " + "l1=0.0301" + "l2=0.0562 f=-0.45 shape=(1, 9000, 1)
logits [[ 0.14097455 -0.4059567  -0.85340565 -0.6799327 ]]
Iteration 800 of 1000: loss=0.0738 " + "l1=0.0167" + "l2=0.0572 f=-0.446 shape=(1, 9000, 1)
logits [[-0.06504442 -0.3680268  -0.9314709  -0.41931686]]
Iteration 900 of 1000: loss=0.0639 " + "l1=0.00759" + "l2=0.0563 f=-0.444 shape=(1, 9000, 1)
logits [[-0.19897301 -0.33697805 -0.97987247 -0.26008692]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.351 " + "l1=0.351" + "l2=0 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.124772  -1.4045218 -0.8423516 -2.8488238]]
Iteration 100 of 1000: loss=0.277 " + "l1=0.244" + "l2=0.0328 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.1456401  -1.0083944  -0.98320633 -2.146983  ]]
Iteration 200 of 1000: loss=0.211 " + "l1=0.141" + "l2=0.0695 f=-0.484 shape=(1, 9000, 1)
logits [[ 1.2350799  -0.5898076  -0.87152666 -1.710354  ]]
Iteration 300 of 1000: loss=0.161 " + "l1=0.0625" + "l2=0.0989 f=-0.459 shape=(1, 9000, 1)
logits [[ 0.4916676  -0.31539857 -0.7039552  -1.3099283 ]]
Iteration 400 of 1000: loss=0.126 " + "l1=0.0218" + "l2=0.105 f=-0.459 shape=(1, 9000, 1)
logits [[ 0.06550601 -0.21632047 -0.767239   -0.91883945]]
Iteration 500 of 1000: loss=0.1 " + "l1=0.00106" + "l2=0.0992 f=-0.454 shape=(1, 9000, 1)
logits [[-0.18224597 -0.19589564 -0.87391526 -0.5655815 ]]
Iteration 600 of 1000: loss=0.0838 " + "l1=0" + "l2=0.0838 f=-0.451 shape=(1, 9000, 1)
logits [[-0.2483258  -0.23808913 -0.94856757 -0.36958572]]
Iteration 700 of 1000: loss=0.0714 " + "l1=0.00132" + "l2=0.0701 f=-0.451 shape=(1, 9000, 1)
logits [[-0.25720534 -0.27419809 -0.9809928  -0.29149222]]
Iteration 800 of 1000: loss=0.0629 " + "l1=0.000169" + "l2=0.0627 f=-0.451 shape=(1, 9000, 1)
logits [[-0.26233083 -0.2645121  -0.99623334 -0.28164083]]
Iteration 900 of 1000: loss=0.0574 " + "l1=0.000481" + "l2=0.0569 f=-0.449 shape=(1, 9000, 1)
logits [[-0.25763473 -0.26383477 -0.9998304  -0.27356207]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.3 " + "l1=0.3" + "l2=0 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.124772  -1.4045218 -0.8423516 -2.8488238]]
Iteration 100 of 1000: loss=0.246 " + "l1=0.222" + "l2=0.0239 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.2846286  -1.0599031  -0.96616054 -2.2525315 ]]
Iteration 200 of 1000: loss=0.203 " + "l1=0.154" + "l2=0.0496 f=-0.488 shape=(1, 9000, 1)
logits [[ 1.5787168  -0.74169374 -0.88891375 -1.9019166 ]]
Iteration 300 of 1000: loss=0.164 " + "l1=0.1" + "l2=0.0636 f=-0.46 shape=(1, 9000, 1)
logits [[ 0.9758186 -0.5369222 -0.7432901 -1.5357845]]
Iteration 400 of 1000: loss=0.137 " + "l1=0.063" + "l2=0.0741 f=-0.456 shape=(1, 9000, 1)
logits [[ 0.53783226 -0.41238695 -0.73209363 -1.2156539 ]]
Iteration 500 of 1000: loss=0.111 " + "l1=0.0292" + "l2=0.0815 f=-0.454 shape=(1, 9000, 1)
logits [[ 0.14478557 -0.2967136  -0.77045923 -0.8928076 ]]
Iteration 600 of 1000: loss=0.0918 " + "l1=0.00895" + "l2=0.0829 f=-0.45 shape=(1, 9000, 1)
logits [[-0.12799224 -0.26308835 -0.8758584  -0.53269476]]
Iteration 700 of 1000: loss=0.0755 " + "l1=0.00113" + "l2=0.0743 f=-0.447 shape=(1, 9000, 1)
logits [[-0.2491478  -0.26612946 -0.94754213 -0.32673517]]
Iteration 800 of 1000: loss=0.0658 " + "l1=0.000558" + "l2=0.0653 f=-0.448 shape=(1, 9000, 1)
logits [[-0.26191482 -0.2703442  -0.97318375 -0.28577903]]
Iteration 900 of 1000: loss=0.0593 " + "l1=0.00146" + "l2=0.0578 f=-0.448 shape=(1, 9000, 1)
logits [[-0.25345817 -0.2754308  -0.9897926  -0.27241436]]
--- 299.25722193717957 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0397 " + "l1=0.0397" + "l2=0 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.124772  -1.4045218 -0.8423516 -2.8488238]]
Iteration 100 of 1000: loss=0.039 " + "l1=0.0387" + "l2=0.000293 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.027946  -1.3790632 -0.8399756 -2.7779093]]
Iteration 200 of 1000: loss=0.0387 " + "l1=0.0383" + "l2=0.000338 f=-0.492 shape=(1, 9000, 1)
logits [[ 2.9912992  -1.3709152  -0.84115523 -2.7490351 ]]
Iteration 300 of 1000: loss=0.0383 " + "l1=0.0379" + "l2=0.00042 f=-0.493 shape=(1, 9000, 1)
logits [[ 2.948875  -1.3623406 -0.8425305 -2.7145777]]
Iteration 400 of 1000: loss=0.038 " + "l1=0.0375" + "l2=0.000501 f=-0.493 shape=(1, 9000, 1)
logits [[ 2.903651  -1.3535229 -0.8440558 -2.6772332]]
Iteration 500 of 1000: loss=0.0376 " + "l1=0.037" + "l2=0.000637 f=-0.493 shape=(1, 9000, 1)
logits [[ 2.853358   -1.3444788  -0.84650695 -2.6345205 ]]
Iteration 600 of 1000: loss=0.0372 " + "l1=0.0364" + "l2=0.0008 f=-0.494 shape=(1, 9000, 1)
logits [[ 2.795587  -1.337252  -0.8471542 -2.5870721]]
Iteration 700 of 1000: loss=0.0368 " + "l1=0.0358" + "l2=0.000974 f=-0.495 shape=(1, 9000, 1)
logits [[ 2.7363837  -1.3309577  -0.84688467 -2.5378742 ]]
Iteration 800 of 1000: loss=0.0364 " + "l1=0.0352" + "l2=0.00116 f=-0.496 shape=(1, 9000, 1)
logits [[ 2.6761942  -1.3250768  -0.84611636 -2.4879105 ]]
Iteration 900 of 1000: loss=0.0361 " + "l1=0.0346" + "l2=0.00144 f=-0.497 shape=(1, 9000, 1)
logits [[ 2.6182976 -1.3211402 -0.8446198 -2.4388385]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.397 " + "l1=0.397" + "l2=0 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.124772  -1.4045218 -0.8423516 -2.8488238]]
Iteration 100 of 1000: loss=0.306 " + "l1=0.252" + "l2=0.0538 f=-0.436 shape=(1, 9000, 1)
logits [[ 1.993686   -1.098665   -0.52490914 -2.115184  ]]
Iteration 200 of 1000: loss=0.212 " + "l1=0.129" + "l2=0.0827 f=-0.409 shape=(1, 9000, 1)
logits [[ 1.092328   -1.0092857  -0.19967231 -1.5185342 ]]
Iteration 300 of 1000: loss=0.16 " + "l1=0.0761" + "l2=0.0839 f=-0.414 shape=(1, 9000, 1)
logits [[ 0.6169281 -1.0212412 -0.1437483 -1.1084343]]
Iteration 400 of 1000: loss=0.122 " + "l1=0.0306" + "l2=0.0915 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.20057106 -0.9294034  -0.10570095 -0.78645974]]
Iteration 500 of 1000: loss=0.0864 " + "l1=0.0013" + "l2=0.0851 f=-0.377 shape=(1, 9000, 1)
logits [[-0.03880612 -0.99623793 -0.05181539 -0.42014912]]
Iteration 600 of 1000: loss=0.0654 " + "l1=0" + "l2=0.0654 f=-0.351 shape=(1, 9000, 1)
logits [[-0.04032497 -1.1149229  -0.03324394 -0.2146593 ]]
Iteration 700 of 1000: loss=0.0551 " + "l1=0" + "l2=0.0551 f=-0.336 shape=(1, 9000, 1)
logits [[-0.02186709 -1.1714588  -0.02029429 -0.12907586]]
Iteration 800 of 1000: loss=0.0487 " + "l1=0" + "l2=0.0487 f=-0.324 shape=(1, 9000, 1)
logits [[-0.02150786 -1.1974443  -0.01798339 -0.06075561]]
Iteration 900 of 1000: loss=0.0441 " + "l1=0" + "l2=0.0441 f=-0.313 shape=(1, 9000, 1)
logits [[-1.7703827e-03 -1.2070080e+00 -1.6485481e-04 -4.3665774e-02]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.218 " + "l1=0.218" + "l2=0 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.124772  -1.4045218 -0.8423516 -2.8488238]]
Iteration 100 of 1000: loss=0.2 " + "l1=0.192" + "l2=0.00794 f=-0.489 shape=(1, 9000, 1)
logits [[ 2.6599858  -1.2853849  -0.83017147 -2.5019531 ]]
Iteration 200 of 1000: loss=0.181 " + "l1=0.163" + "l2=0.0183 f=-0.476 shape=(1, 9000, 1)
logits [[ 2.2352273 -1.2063855 -0.720968  -2.2117937]]
Iteration 300 of 1000: loss=0.152 " + "l1=0.121" + "l2=0.0306 f=-0.453 shape=(1, 9000, 1)
logits [[ 1.722531   -1.1551259  -0.48421302 -1.8940604 ]]
Iteration 400 of 1000: loss=0.124 " + "l1=0.0942" + "l2=0.0298 f=-0.438 shape=(1, 9000, 1)
logits [[ 1.3791555 -1.1561846 -0.3341918 -1.6416265]]
Iteration 500 of 1000: loss=0.103 " + "l1=0.0716" + "l2=0.0318 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.0512153 -1.0902035 -0.2501731 -1.3688176]]
Iteration 600 of 1000: loss=0.0844 " + "l1=0.0521" + "l2=0.0323 f=-0.408 shape=(1, 9000, 1)
logits [[ 0.7650576  -1.041528   -0.18239242 -1.1714959 ]]
Iteration 700 of 1000: loss=0.0695 " + "l1=0.0368" + "l2=0.0327 f=-0.387 shape=(1, 9000, 1)
logits [[ 0.53941065 -1.0319742  -0.1294186  -0.9272967 ]]
Iteration 800 of 1000: loss=0.0554 " + "l1=0.0205" + "l2=0.0349 f=-0.358 shape=(1, 9000, 1)
logits [[ 0.31139666 -1.0573336  -0.0614323  -0.6236554 ]]
Iteration 900 of 1000: loss=0.0415 " + "l1=0.00474" + "l2=0.0368 f=-0.311 shape=(1, 9000, 1)
logits [[ 0.09328206 -1.128671    0.00704116 -0.21578583]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.129 " + "l1=0.129" + "l2=0 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.124772  -1.4045218 -0.8423516 -2.8488238]]
Iteration 100 of 1000: loss=0.123 " + "l1=0.12" + "l2=0.00257 f=-0.491 shape=(1, 9000, 1)
logits [[ 2.8554327 -1.3311654 -0.8357    -2.6523356]]
Iteration 200 of 1000: loss=0.118 " + "l1=0.115" + "l2=0.00374 f=-0.492 shape=(1, 9000, 1)
logits [[ 2.6893196 -1.2988379 -0.8409316 -2.519498 ]]
Iteration 300 of 1000: loss=0.113 " + "l1=0.108" + "l2=0.00507 f=-0.494 shape=(1, 9000, 1)
logits [[ 2.4973607  -1.2757674  -0.83812606 -2.3611605 ]]
Iteration 400 of 1000: loss=0.108 " + "l1=0.101" + "l2=0.00696 f=-0.493 shape=(1, 9000, 1)
logits [[ 2.2908862  -1.262208   -0.81377494 -2.188231  ]]
Iteration 500 of 1000: loss=0.0972 " + "l1=0.0844" + "l2=0.0128 f=-0.468 shape=(1, 9000, 1)
logits [[ 1.9672318  -1.2087145  -0.62910193 -2.0024033 ]]
Iteration 600 of 1000: loss=0.0843 " + "l1=0.0681" + "l2=0.0162 f=-0.455 shape=(1, 9000, 1)
logits [[ 1.646595   -1.2045571  -0.44943944 -1.8132178 ]]
Iteration 700 of 1000: loss=0.0729 " + "l1=0.0553" + "l2=0.0176 f=-0.423 shape=(1, 9000, 1)
logits [[ 1.4025145  -1.1597219  -0.29923704 -1.6366173 ]]
Iteration 800 of 1000: loss=0.0641 " + "l1=0.0459" + "l2=0.0182 f=-0.411 shape=(1, 9000, 1)
logits [[ 1.1749014  -1.1021845  -0.23849754 -1.4773431 ]]
Iteration 900 of 1000: loss=0.0568 " + "l1=0.0381" + "l2=0.0187 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.9844712  -1.0732119  -0.18795104 -1.3334168 ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.174 " + "l1=0.174" + "l2=0 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.124772  -1.4045218 -0.8423516 -2.8488238]]
Iteration 100 of 1000: loss=0.162 " + "l1=0.157" + "l2=0.00474 f=-0.49 shape=(1, 9000, 1)
logits [[ 2.7612145  -1.3075845  -0.83407265 -2.5811386 ]]
Iteration 200 of 1000: loss=0.153 " + "l1=0.146" + "l2=0.00764 f=-0.493 shape=(1, 9000, 1)
logits [[ 2.4998658 -1.2653191 -0.8328344 -2.372357 ]]
Iteration 300 of 1000: loss=0.141 " + "l1=0.126" + "l2=0.0142 f=-0.479 shape=(1, 9000, 1)
logits [[ 2.163751  -1.2172835 -0.7263048 -2.1373723]]
Iteration 400 of 1000: loss=0.121 " + "l1=0.101" + "l2=0.0205 f=-0.457 shape=(1, 9000, 1)
logits [[ 1.7658719 -1.1747086 -0.5323085 -1.8859235]]
Iteration 500 of 1000: loss=0.099 " + "l1=0.0753" + "l2=0.0237 f=-0.427 shape=(1, 9000, 1)
logits [[ 1.4029236  -1.1325788  -0.31906334 -1.6577655 ]]
Iteration 600 of 1000: loss=0.0849 " + "l1=0.0603" + "l2=0.0246 f=-0.412 shape=(1, 9000, 1)
logits [[ 1.1312456 -1.0838631 -0.2470482 -1.4486063]]
Iteration 700 of 1000: loss=0.0728 " + "l1=0.0482" + "l2=0.0246 f=-0.407 shape=(1, 9000, 1)
logits [[ 0.89589506 -1.0486261  -0.20503137 -1.2705904 ]]
Iteration 800 of 1000: loss=0.0624 " + "l1=0.0374" + "l2=0.025 f=-0.391 shape=(1, 9000, 1)
logits [[ 0.7106358  -1.0412891  -0.14347456 -1.0915524 ]]
Iteration 900 of 1000: loss=0.0537 " + "l1=0.0275" + "l2=0.0262 f=-0.368 shape=(1, 9000, 1)
logits [[ 0.5389214  -1.0525179  -0.08861774 -0.87125784]]
--- 300.83192706108093 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0597 " + "l1=0.0597" + "l2=0 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.124772  -1.4045218 -0.8423516 -2.8488238]]
Iteration 100 of 1000: loss=0.057 " + "l1=0.0561" + "l2=0.000904 f=-0.491 shape=(1, 9000, 1)
logits [[ 2.9439297 -1.3632957 -0.8737347 -2.6698797]]
Iteration 200 of 1000: loss=0.0556 " + "l1=0.0543" + "l2=0.00129 f=-0.491 shape=(1, 9000, 1)
logits [[ 2.8497393  -1.3467222  -0.88962346 -2.5767014 ]]
Iteration 300 of 1000: loss=0.0538 " + "l1=0.0521" + "l2=0.00172 f=-0.491 shape=(1, 9000, 1)
logits [[ 2.738229   -1.3285007  -0.90640104 -2.4682047 ]]
Iteration 400 of 1000: loss=0.0519 " + "l1=0.0497" + "l2=0.00221 f=-0.492 shape=(1, 9000, 1)
logits [[ 2.6173465  -1.3124154  -0.92293185 -2.350346  ]]
Iteration 500 of 1000: loss=0.05 " + "l1=0.0472" + "l2=0.00276 f=-0.493 shape=(1, 9000, 1)
logits [[ 2.4928348  -1.2999573  -0.93853194 -2.2264047 ]]
Iteration 600 of 1000: loss=0.0481 " + "l1=0.0448" + "l2=0.00333 f=-0.493 shape=(1, 9000, 1)
logits [[ 2.377154   -1.2945051  -0.94937944 -2.1037223 ]]
Iteration 700 of 1000: loss=0.0463 " + "l1=0.0423" + "l2=0.00394 f=-0.492 shape=(1, 9000, 1)
logits [[ 2.2604299  -1.2914209  -0.96137154 -1.9736928 ]]
Iteration 800 of 1000: loss=0.0445 " + "l1=0.04" + "l2=0.00455 f=-0.49 shape=(1, 9000, 1)
logits [[ 2.1499336 -1.2888067 -0.9752578 -1.8451049]]
Iteration 900 of 1000: loss=0.0429 " + "l1=0.038" + "l2=0.00495 f=-0.488 shape=(1, 9000, 1)
logits [[ 2.0584435  -1.2855208  -0.98769474 -1.73737   ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.597 " + "l1=0.597" + "l2=0 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.124772  -1.4045218 -0.8423516 -2.8488238]]
Iteration 100 of 1000: loss=0.309 " + "l1=0.159" + "l2=0.15 f=-0.424 shape=(1, 9000, 1)
logits [[ 0.98419356 -1.0092098  -1.0628717  -0.6066244 ]]
Iteration 200 of 1000: loss=0.13 " + "l1=0" + "l2=0.13 f=-0.42 shape=(1, 9000, 1)
logits [[ 0.16857037 -0.8112777  -1.2105182   0.17296034]]
Iteration 300 of 1000: loss=0.0771 " + "l1=0" + "l2=0.0771 f=-0.411 shape=(1, 9000, 1)
logits [[ 0.11961555 -0.8543444  -1.054456    0.14393488]]
Iteration 400 of 1000: loss=0.0544 " + "l1=0.000175" + "l2=0.0542 f=-0.402 shape=(1, 9000, 1)
logits [[ 0.15262693 -0.92712873 -0.98451114  0.15087378]]
Iteration 500 of 1000: loss=0.0425 " + "l1=0" + "l2=0.0425 f=-0.389 shape=(1, 9000, 1)
logits [[ 0.16455668 -0.9845256  -0.9172792   0.1792489 ]]
Iteration 600 of 1000: loss=0.0337 " + "l1=0" + "l2=0.0337 f=-0.378 shape=(1, 9000, 1)
logits [[ 0.1880925  -1.0400038  -0.8584018   0.19897294]]
Iteration 700 of 1000: loss=0.0283 " + "l1=0" + "l2=0.0283 f=-0.368 shape=(1, 9000, 1)
logits [[ 0.19334418 -1.0774008  -0.823491    0.23388684]]
Iteration 800 of 1000: loss=0.0237 " + "l1=0" + "l2=0.0237 f=-0.361 shape=(1, 9000, 1)
logits [[ 0.22189134 -1.120676   -0.7918404   0.24800602]]
Iteration 900 of 1000: loss=0.0204 " + "l1=0" + "l2=0.0204 f=-0.353 shape=(1, 9000, 1)
logits [[ 0.23563978 -1.1477392  -0.7687468   0.2683843 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.329 " + "l1=0.329" + "l2=0 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.124772  -1.4045218 -0.8423516 -2.8488238]]
Iteration 100 of 1000: loss=0.247 " + "l1=0.213" + "l2=0.0345 f=-0.485 shape=(1, 9000, 1)
logits [[ 2.0663817 -1.1953058 -1.0074165 -1.8035474]]
Iteration 200 of 1000: loss=0.183 " + "l1=0.123" + "l2=0.059 f=-0.456 shape=(1, 9000, 1)
logits [[ 1.3035567  -1.0970796  -1.0872276  -0.94184196]]
Iteration 300 of 1000: loss=0.113 " + "l1=0.0347" + "l2=0.0783 f=-0.423 shape=(1, 9000, 1)
logits [[ 0.5070144  -0.92923564 -1.1461798  -0.1230636 ]]
Iteration 400 of 1000: loss=0.0635 " + "l1=0" + "l2=0.0635 f=-0.413 shape=(1, 9000, 1)
logits [[ 0.1491575  -0.8958086  -1.0607709   0.15556744]]
Iteration 500 of 1000: loss=0.0462 " + "l1=0" + "l2=0.0462 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.16383356 -0.9594379  -0.99758184  0.17960376]]
Iteration 600 of 1000: loss=0.0359 " + "l1=0" + "l2=0.0359 f=-0.392 shape=(1, 9000, 1)
logits [[ 0.1813915  -1.0139444  -0.9395966   0.20373702]]
Iteration 700 of 1000: loss=0.0287 " + "l1=0.000717" + "l2=0.028 f=-0.381 shape=(1, 9000, 1)
logits [[ 0.22069924 -1.0704824  -0.88041943  0.20765498]]
Iteration 800 of 1000: loss=0.0237 " + "l1=0" + "l2=0.0237 f=-0.372 shape=(1, 9000, 1)
logits [[ 0.2197822 -1.1037687 -0.8631712  0.2588418]]
Iteration 900 of 1000: loss=0.0201 " + "l1=0" + "l2=0.0201 f=-0.367 shape=(1, 9000, 1)
logits [[ 0.24655995 -1.1338143  -0.8487696   0.26779962]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.194 " + "l1=0.194" + "l2=0 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.124772  -1.4045218 -0.8423516 -2.8488238]]
Iteration 100 of 1000: loss=0.167 " + "l1=0.156" + "l2=0.0109 f=-0.488 shape=(1, 9000, 1)
logits [[ 2.5299966 -1.280672  -0.935586  -2.2668402]]
Iteration 200 of 1000: loss=0.145 " + "l1=0.129" + "l2=0.0168 f=-0.488 shape=(1, 9000, 1)
logits [[ 2.115198  -1.2266032 -1.0022709 -1.8394314]]
Iteration 300 of 1000: loss=0.125 " + "l1=0.103" + "l2=0.0219 f=-0.481 shape=(1, 9000, 1)
logits [[ 1.7440575 -1.1903061 -1.0562774 -1.4214995]]
Iteration 400 of 1000: loss=0.101 " + "l1=0.0694" + "l2=0.0317 f=-0.45 shape=(1, 9000, 1)
logits [[ 1.2708029  -1.1302689  -1.074735   -0.86383486]]
Iteration 500 of 1000: loss=0.0777 " + "l1=0.0393" + "l2=0.0384 f=-0.426 shape=(1, 9000, 1)
logits [[ 0.81679875 -1.0491104  -1.0762838  -0.39344302]]
Iteration 600 of 1000: loss=0.0554 " + "l1=0.0116" + "l2=0.0438 f=-0.41 shape=(1, 9000, 1)
logits [[ 0.34929615 -0.9691763  -1.0121758  -0.0079991 ]]
Iteration 700 of 1000: loss=0.0379 " + "l1=0.000364" + "l2=0.0375 f=-0.394 shape=(1, 9000, 1)
logits [[ 0.19908497 -1.0069301  -0.95730406  0.18787098]]
Iteration 800 of 1000: loss=0.0284 " + "l1=0" + "l2=0.0284 f=-0.383 shape=(1, 9000, 1)
logits [[ 0.21367598 -1.0629823  -0.89999044  0.2172012 ]]
Iteration 900 of 1000: loss=0.0231 " + "l1=0" + "l2=0.0231 f=-0.376 shape=(1, 9000, 1)
logits [[ 0.23931402 -1.1043829  -0.8785232   0.2408829 ]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.127 " + "l1=0.127" + "l2=0 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.124772  -1.4045218 -0.8423516 -2.8488238]]
Iteration 100 of 1000: loss=0.115 " + "l1=0.111" + "l2=0.00431 f=-0.489 shape=(1, 9000, 1)
logits [[ 2.7475388 -1.3215128 -0.9041581 -2.4782448]]
Iteration 200 of 1000: loss=0.107 " + "l1=0.1" + "l2=0.00679 f=-0.491 shape=(1, 9000, 1)
logits [[ 2.4844086 -1.2804252 -0.9464797 -2.2217703]]
Iteration 300 of 1000: loss=0.0978 " + "l1=0.0887" + "l2=0.00906 f=-0.49 shape=(1, 9000, 1)
logits [[ 2.2244494  -1.2530414  -0.98313636 -1.9500766 ]]
Iteration 400 of 1000: loss=0.0891 " + "l1=0.0782" + "l2=0.0109 f=-0.487 shape=(1, 9000, 1)
logits [[ 1.9908433 -1.237161  -1.0147285 -1.6871905]]
Iteration 500 of 1000: loss=0.0809 " + "l1=0.0679" + "l2=0.0131 f=-0.481 shape=(1, 9000, 1)
logits [[ 1.7673327 -1.2165098 -1.0487018 -1.4259083]]
Iteration 600 of 1000: loss=0.0727 " + "l1=0.0564" + "l2=0.0163 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.515617  -1.1862161 -1.0686167 -1.1397022]]
Iteration 700 of 1000: loss=0.0627 " + "l1=0.0415" + "l2=0.0212 f=-0.444 shape=(1, 9000, 1)
logits [[ 1.181323  -1.1458097 -1.0412595 -0.7707512]]
Iteration 800 of 1000: loss=0.0523 " + "l1=0.028" + "l2=0.0243 f=-0.425 shape=(1, 9000, 1)
logits [[ 0.85302895 -1.0843424  -1.0073074  -0.46304607]]
Iteration 900 of 1000: loss=0.042 " + "l1=0.0157" + "l2=0.0264 f=-0.411 shape=(1, 9000, 1)
logits [[ 0.5408182  -1.0491613  -0.9371298  -0.19734749]]
--- 304.6237905025482 seconds ---
Adv result:3
Loading model
Loading ground truth file
Attack diff is running...
Loading record A03760
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.135 " + "l1=0.135" + "l2=0 f=-1.06 shape=(1, 9000, 1)
logits [[  6.8149996  -6.6728644   6.2102222 -10.575477 ]]
Iteration 100 of 1000: loss=0.134 " + "l1=0.134" + "l2=0.000433 f=-1.05 shape=(1, 9000, 1)
logits [[  6.773436   -6.6174793   6.16344   -10.519235 ]]
Iteration 200 of 1000: loss=0.134 " + "l1=0.134" + "l2=0.000431 f=-1.05 shape=(1, 9000, 1)
logits [[  6.767297  -6.612031   6.158276 -10.510633]]
Iteration 300 of 1000: loss=0.134 " + "l1=0.134" + "l2=0.000504 f=-1.05 shape=(1, 9000, 1)
logits [[  6.7598915  -6.604603    6.151374  -10.500377 ]]
Iteration 400 of 1000: loss=0.134 " + "l1=0.133" + "l2=0.000617 f=-1.05 shape=(1, 9000, 1)
logits [[  6.75258    -6.5968814   6.144249  -10.490261 ]]
Iteration 500 of 1000: loss=0.134 " + "l1=0.133" + "l2=0.000678 f=-1.05 shape=(1, 9000, 1)
logits [[  6.7458014  -6.5896373   6.1374607 -10.480976 ]]
Iteration 600 of 1000: loss=0.134 " + "l1=0.133" + "l2=0.000806 f=-1.05 shape=(1, 9000, 1)
logits [[  6.739566   -6.5828953   6.131141  -10.472498 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.35 " + "l1=1.35" + "l2=0 f=-1.06 shape=(1, 9000, 1)
logits [[  6.8149996  -6.6728644   6.2102222 -10.575477 ]]
Iteration 100 of 1000: loss=1.29 " + "l1=1.25" + "l2=0.0403 f=-0.987 shape=(1, 9000, 1)
logits [[ 6.403315 -6.113309  5.746356 -9.984179]]
Iteration 200 of 1000: loss=1.27 " + "l1=1.22" + "l2=0.0519 f=-0.964 shape=(1, 9000, 1)
logits [[ 6.2414618 -5.9500484  5.605507  -9.751788 ]]
Iteration 300 of 1000: loss=1.24 " + "l1=1.18" + "l2=0.0642 f=-0.934 shape=(1, 9000, 1)
logits [[ 6.0459743 -5.75655    5.457342  -9.484737 ]]
Iteration 400 of 1000: loss=1.22 " + "l1=1.13" + "l2=0.0834 f=-0.9 shape=(1, 9000, 1)
logits [[ 5.8348746 -5.506172   5.2589655 -9.188244 ]]
Iteration 500 of 1000: loss=1.19 " + "l1=1.09" + "l2=0.103 f=-0.859 shape=(1, 9000, 1)
logits [[ 5.6061134 -5.2624755  5.0659156 -8.846907 ]]
Iteration 600 of 1000: loss=1.17 " + "l1=1.05" + "l2=0.117 f=-0.826 shape=(1, 9000, 1)
logits [[ 5.4045434 -5.1013613  4.9382987 -8.545024 ]]
Iteration 700 of 1000: loss=1.15 " + "l1=1.02" + "l2=0.124 f=-0.799 shape=(1, 9000, 1)
logits [[ 5.246129  -4.980052   4.8429337 -8.303887 ]]
Iteration 800 of 1000: loss=1.13 " + "l1=0.997" + "l2=0.13 f=-0.772 shape=(1, 9000, 1)
logits [[ 5.097422  -4.8716254  4.7538953 -8.066342 ]]
Iteration 900 of 1000: loss=1.11 " + "l1=0.975" + "l2=0.133 f=-0.747 shape=(1, 9000, 1)
logits [[ 4.9572077 -4.7911196  4.6835585 -7.836086 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=13.5 " + "l1=13.5" + "l2=0 f=-1.06 shape=(1, 9000, 1)
logits [[  6.8149996  -6.6728644   6.2102222 -10.575477 ]]
Iteration 100 of 1000: loss=8.22 " + "l1=6.03" + "l2=2.19 f=-0.439 shape=(1, 9000, 1)
logits [[ 3.304232  -2.7261288  2.9213028 -5.257303 ]]
Iteration 200 of 1000: loss=6.49 " + "l1=3.88" + "l2=2.62 f=-0.271 shape=(1, 9000, 1)
logits [[ 2.052504  -1.8236572  2.0486896 -3.3611994]]
Iteration 300 of 1000: loss=5.77 " + "l1=3.15" + "l2=2.62 f=-0.22 shape=(1, 9000, 1)
logits [[ 1.6394683 -1.50331    1.6476763 -2.6619852]]
Iteration 400 of 1000: loss=5.3 " + "l1=2.4" + "l2=2.9 f=-0.173 shape=(1, 9000, 1)
logits [[ 1.1975709 -1.2031969  1.1998762 -1.8869083]]
Iteration 500 of 1000: loss=4.89 " + "l1=1.86" + "l2=3.03 f=-0.124 shape=(1, 9000, 1)
logits [[ 0.8895334 -0.9633813  0.8928948 -1.3157724]]
Iteration 600 of 1000: loss=4.5 " + "l1=1.4" + "l2=3.1 f=-0.087 shape=(1, 9000, 1)
logits [[ 0.6082526  -0.7921086   0.60947543 -0.77367926]]
Iteration 700 of 1000: loss=4.06 " + "l1=0.902" + "l2=3.15 f=-0.0476 shape=(1, 9000, 1)
logits [[ 0.30305123 -0.5938326   0.30819926 -0.20765316]]
Iteration 800 of 1000: loss=3.83 " + "l1=0.727" + "l2=3.1 f=-0.0242 shape=(1, 9000, 1)
logits [[ 0.16496089 -0.55072206  0.17676465  0.11203858]]
Iteration 900 of 1000: loss=3.66 " + "l1=0.71" + "l2=2.95 f=-0.0255 shape=(1, 9000, 1)
logits [[ 0.15849122 -0.54538983  0.16436028  0.12037235]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=135 " + "l1=135" + "l2=0 f=-1.06 shape=(1, 9000, 1)
logits [[  6.8149996  -6.6728644   6.2102222 -10.575477 ]]
Iteration 100 of 1000: loss=26.8 " + "l1=8.58" + "l2=18.2 f=-0.0393 shape=(1, 9000, 1)
logits [[ 0.40156442 -0.36675164  0.49097747 -0.68287945]]
Iteration 200 of 1000: loss=13.1 " + "l1=0.161" + "l2=12.9 f=-0.0285 shape=(1, 9000, 1)
logits [[-0.07195712  0.0331118   0.04922094 -0.12420396]]
Iteration 300 of 1000: loss=10.1 " + "l1=0" + "l2=10.1 f=-0.0335 shape=(1, 9000, 1)
logits [[-0.01853656  0.06691024  0.05716015 -0.23947832]]
Iteration 400 of 1000: loss=8.99 " + "l1=0.0419" + "l2=8.95 f=-0.0249 shape=(1, 9000, 1)
logits [[ 0.01365963  0.04974601  0.05393366 -0.2169399 ]]
Iteration 500 of 1000: loss=8.26 " + "l1=0" + "l2=8.26 f=-0.0097 shape=(1, 9000, 1)
logits [[-0.03639451  0.05932283  0.03964558 -0.10136265]]
Iteration 600 of 1000: loss=7.69 " + "l1=0.076" + "l2=7.61 f=0.000616 shape=(1, 9000, 1)
logits [[ 0.04134685  0.03789232  0.04548782 -0.1222639 ]]
Iteration 700 of 1000: loss=7.27 " + "l1=0.0631" + "l2=7.21 f=0.00448 shape=(1, 9000, 1)
logits [[ 0.04453211  0.04268393  0.0489907  -0.11829799]]
Iteration 800 of 1000: loss=7.04 " + "l1=0" + "l2=7.04 f=0.00926 shape=(1, 9000, 1)
logits [[-0.04426479  0.05593586  0.01618756  0.00919157]]
Iteration 900 of 1000: loss=6.7 " + "l1=0.0103" + "l2=6.69 f=0.00686 shape=(1, 9000, 1)
logits [[ 0.03633764  0.03530622  0.03472958 -0.07893205]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=74.2 " + "l1=74.2" + "l2=0 f=-1.06 shape=(1, 9000, 1)
logits [[  6.8149996  -6.6728644   6.2102222 -10.575477 ]]
Iteration 100 of 1000: loss=21.2 " + "l1=9.41" + "l2=11.7 f=-0.0965 shape=(1, 9000, 1)
logits [[ 0.97079873 -0.7333274   0.977048   -1.6005025 ]]
Iteration 200 of 1000: loss=10.9 " + "l1=0.024" + "l2=10.9 f=-0.0231 shape=(1, 9000, 1)
logits [[-0.07477669  0.0421657   0.04652491 -0.10636293]]
Iteration 300 of 1000: loss=8.41 " + "l1=0" + "l2=8.41 f=-0.0172 shape=(1, 9000, 1)
logits [[-0.02844552  0.03233844  0.02858842 -0.10110946]]
Iteration 400 of 1000: loss=7.32 " + "l1=0" + "l2=7.32 f=-0.00706 shape=(1, 9000, 1)
logits [[ 0.00807227  0.01725086  0.01519653 -0.06874564]]
Iteration 500 of 1000: loss=6.84 " + "l1=0.0619" + "l2=6.78 f=-0.00517 shape=(1, 9000, 1)
logits [[-0.01479912  0.008835    0.02009589 -0.03480952]]
Iteration 600 of 1000: loss=6.53 " + "l1=0" + "l2=6.53 f=-0.00769 shape=(1, 9000, 1)
logits [[ 0.03266005  0.0390745   0.03350894 -0.1360032 ]]
Iteration 700 of 1000: loss=6.29 " + "l1=0" + "l2=6.29 f=-0.00287 shape=(1, 9000, 1)
logits [[-0.01471141  0.03081562  0.02282307 -0.05039372]]
Iteration 800 of 1000: loss=6.07 " + "l1=0" + "l2=6.07 f=0.000713 shape=(1, 9000, 1)
logits [[ 0.0019652   0.02971585  0.02639564 -0.05522338]]
Iteration 900 of 1000: loss=5.92 " + "l1=0.0555" + "l2=5.87 f=0.00139 shape=(1, 9000, 1)
logits [[ 0.00905631  0.02115791  0.03125389 -0.05589274]]
--- 263.8826949596405 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00605 " + "l1=0.00605" + "l2=0 f=-1.06 shape=(1, 9000, 1)
logits [[  6.8149996  -6.6728644   6.2102222 -10.575477 ]]
Iteration 100 of 1000: loss=0.00581 " + "l1=0.00559" + "l2=0.000212 f=-1.06 shape=(1, 9000, 1)
logits [[  6.7948995  -6.698375    6.2354293 -10.569404 ]]
Iteration 200 of 1000: loss=0.00575 " + "l1=0.00556" + "l2=0.000182 f=-1.06 shape=(1, 9000, 1)
logits [[  6.7928586  -6.699456    6.236521  -10.568057 ]]
Iteration 300 of 1000: loss=0.00572 " + "l1=0.0055" + "l2=0.000221 f=-1.06 shape=(1, 9000, 1)
logits [[  6.7893558  -6.7026057   6.2396736 -10.566106 ]]
Iteration 400 of 1000: loss=0.00569 " + "l1=0.00543" + "l2=0.000263 f=-1.06 shape=(1, 9000, 1)
logits [[  6.7856307  -6.7060485   6.2430754 -10.564058 ]]
Iteration 500 of 1000: loss=0.00565 " + "l1=0.00535" + "l2=0.000302 f=-1.06 shape=(1, 9000, 1)
logits [[  6.7816916  -6.7094254   6.2463856 -10.561779 ]]
Iteration 600 of 1000: loss=0.00571 " + "l1=0.00528" + "l2=0.000426 f=-1.06 shape=(1, 9000, 1)
logits [[  6.7777786  -6.7127457   6.249528  -10.559438 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0605 " + "l1=0.0605" + "l2=0 f=-1.06 shape=(1, 9000, 1)
logits [[  6.8149996  -6.6728644   6.2102222 -10.575477 ]]
Iteration 100 of 1000: loss=0.0402 " + "l1=0.0301" + "l2=0.0101 f=-1.08 shape=(1, 9000, 1)
logits [[  6.6723013  -6.837775    6.3711767 -10.5265875]]
Iteration 200 of 1000: loss=0.0319 " + "l1=0.0168" + "l2=0.0151 f=-1.09 shape=(1, 9000, 1)
logits [[  6.5908833  -6.89367     6.4232717 -10.469453 ]]
Iteration 300 of 1000: loss=0.0246 " + "l1=0.00568" + "l2=0.0189 f=-1.09 shape=(1, 9000, 1)
logits [[  6.5103693  -6.9256053   6.453584  -10.407414 ]]
Iteration 400 of 1000: loss=0.0185 " + "l1=0.000246" + "l2=0.0183 f=-1.09 shape=(1, 9000, 1)
logits [[  6.45964    -6.9280996   6.4571786 -10.358562 ]]
Iteration 500 of 1000: loss=0.0151 " + "l1=6.22e-05" + "l2=0.015 f=-1.09 shape=(1, 9000, 1)
logits [[  6.444337  -6.912876   6.443715 -10.333467]]
Iteration 600 of 1000: loss=0.0133 " + "l1=0.000371" + "l2=0.0129 f=-1.09 shape=(1, 9000, 1)
logits [[  6.435409   -6.901413    6.4317026 -10.315673 ]]
Iteration 700 of 1000: loss=0.0117 " + "l1=2.93e-05" + "l2=0.0117 f=-1.09 shape=(1, 9000, 1)
logits [[  6.4244304  -6.8954573   6.424137  -10.298859 ]]
Iteration 800 of 1000: loss=0.0112 " + "l1=0.000232" + "l2=0.011 f=-1.09 shape=(1, 9000, 1)
logits [[  6.418254  -6.890212   6.415934 -10.287074]]
Iteration 900 of 1000: loss=0.0105 " + "l1=0" + "l2=0.0105 f=-1.09 shape=(1, 9000, 1)
logits [[  6.4109287  -6.8899612   6.4121037 -10.277071 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0333 " + "l1=0.0333" + "l2=0 f=-1.06 shape=(1, 9000, 1)
logits [[  6.8149996  -6.6728644   6.2102222 -10.575477 ]]
Iteration 100 of 1000: loss=0.0269 " + "l1=0.0236" + "l2=0.0033 f=-1.07 shape=(1, 9000, 1)
logits [[  6.736295   -6.7712855   6.3071146 -10.552916 ]]
Iteration 200 of 1000: loss=0.0248 " + "l1=0.0204" + "l2=0.0044 f=-1.07 shape=(1, 9000, 1)
logits [[  6.7003145  -6.7956624   6.3300204 -10.529429 ]]
Iteration 300 of 1000: loss=0.0228 " + "l1=0.0173" + "l2=0.00552 f=-1.08 shape=(1, 9000, 1)
logits [[  6.6652813  -6.8164897   6.3503003 -10.504872 ]]
Iteration 400 of 1000: loss=0.021 " + "l1=0.0144" + "l2=0.00655 f=-1.08 shape=(1, 9000, 1)
logits [[  6.630231   -6.8346176   6.367675  -10.478197 ]]
Iteration 500 of 1000: loss=0.0192 " + "l1=0.0118" + "l2=0.00745 f=-1.08 shape=(1, 9000, 1)
logits [[  6.59572   -6.849707   6.381447 -10.450761]]
Iteration 600 of 1000: loss=0.0175 " + "l1=0.00914" + "l2=0.00841 f=-1.08 shape=(1, 9000, 1)
logits [[  6.5608068  -6.864393    6.3947024 -10.42264  ]]
Iteration 700 of 1000: loss=0.0158 " + "l1=0.00651" + "l2=0.00929 f=-1.08 shape=(1, 9000, 1)
logits [[  6.52435    -6.877679    6.4059753 -10.391756 ]]
Iteration 800 of 1000: loss=0.0142 " + "l1=0.00423" + "l2=0.00997 f=-1.09 shape=(1, 9000, 1)
logits [[  6.49125    -6.8875628   6.414295  -10.361928 ]]
Iteration 900 of 1000: loss=0.0128 " + "l1=0.00208" + "l2=0.0108 f=-1.09 shape=(1, 9000, 1)
logits [[  6.4588084  -6.895666    6.4209595 -10.332957 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0197 " + "l1=0.0197" + "l2=0 f=-1.06 shape=(1, 9000, 1)
logits [[  6.8149996  -6.6728644   6.2102222 -10.575477 ]]
Iteration 100 of 1000: loss=0.0173 " + "l1=0.016" + "l2=0.00129 f=-1.06 shape=(1, 9000, 1)
logits [[  6.7662773  -6.7364798   6.2731667 -10.562503 ]]
Iteration 200 of 1000: loss=0.0167 " + "l1=0.0151" + "l2=0.00157 f=-1.07 shape=(1, 9000, 1)
logits [[  6.749647   -6.7493234   6.28524   -10.552616 ]]
Iteration 300 of 1000: loss=0.016 " + "l1=0.0141" + "l2=0.00191 f=-1.07 shape=(1, 9000, 1)
logits [[  6.731389  -6.761239   6.296429 -10.540653]]
Iteration 400 of 1000: loss=0.0155 " + "l1=0.0132" + "l2=0.00222 f=-1.07 shape=(1, 9000, 1)
logits [[  6.714085   -6.771754    6.3064914 -10.528641 ]]
Iteration 500 of 1000: loss=0.015 " + "l1=0.0124" + "l2=0.00257 f=-1.07 shape=(1, 9000, 1)
logits [[  6.697407   -6.7808194   6.31532   -10.516168 ]]
Iteration 600 of 1000: loss=0.0145 " + "l1=0.0116" + "l2=0.00285 f=-1.07 shape=(1, 9000, 1)
logits [[  6.6812277  -6.7888327   6.3229384 -10.503797 ]]
Iteration 700 of 1000: loss=0.0141 " + "l1=0.0109" + "l2=0.00319 f=-1.07 shape=(1, 9000, 1)
logits [[  6.6646757  -6.797026    6.33034   -10.490482 ]]
Iteration 800 of 1000: loss=0.0136 " + "l1=0.0101" + "l2=0.00355 f=-1.07 shape=(1, 9000, 1)
logits [[  6.647351  -6.805355   6.337794 -10.476399]]
Iteration 900 of 1000: loss=0.0132 " + "l1=0.00928" + "l2=0.00396 f=-1.08 shape=(1, 9000, 1)
logits [[  6.629829   -6.8130474   6.3444214 -10.462138 ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0265 " + "l1=0.0265" + "l2=0 f=-1.06 shape=(1, 9000, 1)
logits [[  6.8149996  -6.6728644   6.2102222 -10.575477 ]]
Iteration 100 of 1000: loss=0.0224 " + "l1=0.0202" + "l2=0.00217 f=-1.07 shape=(1, 9000, 1)
logits [[  6.7511754  -6.753603    6.289745  -10.557519 ]]
Iteration 200 of 1000: loss=0.0211 " + "l1=0.0182" + "l2=0.00283 f=-1.07 shape=(1, 9000, 1)
logits [[  6.725524   -6.7736154   6.3085394 -10.54217  ]]
Iteration 300 of 1000: loss=0.0199 " + "l1=0.0165" + "l2=0.00342 f=-1.07 shape=(1, 9000, 1)
logits [[  6.698832   -6.7884316   6.322433  -10.522909 ]]
Iteration 400 of 1000: loss=0.0188 " + "l1=0.0148" + "l2=0.00401 f=-1.07 shape=(1, 9000, 1)
logits [[  6.673972   -6.8015437   6.3353353 -10.50477  ]]
Iteration 500 of 1000: loss=0.0178 " + "l1=0.0132" + "l2=0.00463 f=-1.08 shape=(1, 9000, 1)
logits [[  6.649143   -6.8143797   6.347572  -10.485354 ]]
Iteration 600 of 1000: loss=0.0168 " + "l1=0.0116" + "l2=0.00518 f=-1.08 shape=(1, 9000, 1)
logits [[  6.62341   -6.826356   6.358563 -10.464875]]
Iteration 700 of 1000: loss=0.0158 " + "l1=0.01" + "l2=0.00583 f=-1.08 shape=(1, 9000, 1)
logits [[  6.596199  -6.837372   6.367741 -10.442317]]
Iteration 800 of 1000: loss=0.0149 " + "l1=0.00845" + "l2=0.00644 f=-1.08 shape=(1, 9000, 1)
logits [[  6.569866   -6.8484583   6.376712  -10.420716 ]]
Iteration 900 of 1000: loss=0.014 " + "l1=0.00696" + "l2=0.00703 f=-1.08 shape=(1, 9000, 1)
logits [[  6.5440707  -6.858746    6.3849874 -10.399646 ]]
--- 263.8764977455139 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.174 " + "l1=0.174" + "l2=0 f=-1.06 shape=(1, 9000, 1)
logits [[  6.8149996  -6.6728644   6.2102222 -10.575477 ]]
Iteration 100 of 1000: loss=0.173 " + "l1=0.172" + "l2=0.000557 f=-1.05 shape=(1, 9000, 1)
logits [[  6.756146  -6.638958   6.171251 -10.482783]]
Iteration 200 of 1000: loss=0.173 " + "l1=0.172" + "l2=0.000644 f=-1.05 shape=(1, 9000, 1)
logits [[  6.7426167  -6.634566    6.16482   -10.461948 ]]
Iteration 300 of 1000: loss=0.172 " + "l1=0.172" + "l2=0.000807 f=-1.05 shape=(1, 9000, 1)
logits [[  6.7275863  -6.6302037   6.1577277 -10.438655 ]]
Iteration 400 of 1000: loss=0.172 " + "l1=0.171" + "l2=0.000977 f=-1.04 shape=(1, 9000, 1)
logits [[  6.7134905  -6.626181    6.150995  -10.416632 ]]
Iteration 500 of 1000: loss=0.172 " + "l1=0.171" + "l2=0.00115 f=-1.04 shape=(1, 9000, 1)
logits [[  6.700165  -6.622956   6.1448   -10.395803]]
Iteration 600 of 1000: loss=0.172 " + "l1=0.171" + "l2=0.00133 f=-1.04 shape=(1, 9000, 1)
logits [[  6.6873507  -6.6199083   6.139     -10.375579 ]]
Iteration 700 of 1000: loss=0.172 " + "l1=0.17" + "l2=0.00157 f=-1.04 shape=(1, 9000, 1)
logits [[  6.6749067  -6.6173706   6.1334763 -10.355975 ]]
Iteration 800 of 1000: loss=0.172 " + "l1=0.17" + "l2=0.00168 f=-1.04 shape=(1, 9000, 1)
logits [[  6.6625643  -6.6150284   6.1281185 -10.337037 ]]
Iteration 900 of 1000: loss=0.172 " + "l1=0.17" + "l2=0.0019 f=-1.04 shape=(1, 9000, 1)
logits [[  6.650567  -6.613141   6.122954 -10.318453]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.74 " + "l1=1.74" + "l2=0 f=-1.06 shape=(1, 9000, 1)
logits [[  6.8149996  -6.6728644   6.2102222 -10.575477 ]]
Iteration 100 of 1000: loss=1.64 " + "l1=1.57" + "l2=0.0618 f=-0.965 shape=(1, 9000, 1)
logits [[ 6.1754136 -6.2265706  5.752575  -9.5616045]]
Iteration 200 of 1000: loss=1.57 " + "l1=1.48" + "l2=0.0971 f=-0.92 shape=(1, 9000, 1)
logits [[ 5.7974906 -6.093661   5.593816  -8.979436 ]]
Iteration 300 of 1000: loss=1.51 " + "l1=1.38" + "l2=0.127 f=-0.88 shape=(1, 9000, 1)
logits [[ 5.4266486 -5.9562354  5.4264455 -8.414938 ]]
Iteration 400 of 1000: loss=1.46 " + "l1=1.31" + "l2=0.147 f=-0.824 shape=(1, 9000, 1)
logits [[ 5.1821632 -5.7330446  5.1860156 -7.931466 ]]
Iteration 500 of 1000: loss=1.41 " + "l1=1.25" + "l2=0.165 f=-0.77 shape=(1, 9000, 1)
logits [[ 4.954224  -5.5057154  4.965833  -7.4926877]]
Iteration 600 of 1000: loss=1.37 " + "l1=1.18" + "l2=0.184 f=-0.714 shape=(1, 9000, 1)
logits [[ 4.728694  -5.321803   4.7794857 -7.043782 ]]
Iteration 700 of 1000: loss=1.32 " + "l1=1.12" + "l2=0.2 f=-0.666 shape=(1, 9000, 1)
logits [[ 4.4855437 -5.1921086  4.6284585 -6.5856147]]
Iteration 800 of 1000: loss=1.27 " + "l1=1.05" + "l2=0.22 f=-0.611 shape=(1, 9000, 1)
logits [[ 4.195133 -5.025641  4.439419 -6.051834]]
Iteration 900 of 1000: loss=1.22 " + "l1=0.975" + "l2=0.243 f=-0.552 shape=(1, 9000, 1)
logits [[ 3.9002533 -4.842982   4.2409773 -5.506383 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=17.4 " + "l1=17.4" + "l2=0 f=-1.06 shape=(1, 9000, 1)
logits [[  6.8149996  -6.6728644   6.2102222 -10.575477 ]]
Iteration 100 of 1000: loss=8.94 " + "l1=5.75" + "l2=3.19 f=-0.288 shape=(1, 9000, 1)
logits [[ 2.5424922 -3.1382678  2.5986168 -3.1552212]]
Iteration 200 of 1000: loss=5.82 " + "l1=1.63" + "l2=4.19 f=-0.0163 shape=(1, 9000, 1)
logits [[ 0.955295   -2.032061    1.3220643  -0.31049213]]
Iteration 300 of 1000: loss=4.21 " + "l1=0.00451" + "l2=4.21 f=0.0355 shape=(1, 9000, 1)
logits [[ 0.2441785  -1.7047944   0.8034663   0.79895663]]
Iteration 400 of 1000: loss=3.62 " + "l1=0.0125" + "l2=3.61 f=0.0314 shape=(1, 9000, 1)
logits [[ 0.25776818 -1.7186214   0.79947793  0.7869859 ]]
Iteration 500 of 1000: loss=3.21 " + "l1=0" + "l2=3.21 f=0.0179 shape=(1, 9000, 1)
logits [[ 0.2338672  -1.7279991   0.7699274   0.79561436]]
Iteration 600 of 1000: loss=2.88 " + "l1=0" + "l2=2.88 f=0.0042 shape=(1, 9000, 1)
logits [[ 0.23148066 -1.7443982   0.7636486   0.7660742 ]]
Iteration 700 of 1000: loss=2.65 " + "l1=0" + "l2=2.65 f=-0.00823 shape=(1, 9000, 1)
logits [[ 0.18819447 -1.760584    0.76153356  0.7779307 ]]
Iteration 800 of 1000: loss=2.45 " + "l1=0" + "l2=2.45 f=-0.0225 shape=(1, 9000, 1)
logits [[ 0.15531683 -1.8056643   0.77905566  0.78122604]]
Iteration 900 of 1000: loss=2.27 " + "l1=0" + "l2=2.27 f=-0.0375 shape=(1, 9000, 1)
logits [[ 0.10388207 -1.8456471   0.79403144  0.79772466]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=9.56 " + "l1=9.56" + "l2=0 f=-1.06 shape=(1, 9000, 1)
logits [[  6.8149996  -6.6728644   6.2102222 -10.575477 ]]
Iteration 100 of 1000: loss=6.22 " + "l1=4.73" + "l2=1.5 f=-0.479 shape=(1, 9000, 1)
logits [[ 3.553513  -3.9823422  3.5550244 -5.040913 ]]
Iteration 200 of 1000: loss=4.83 " + "l1=2.89" + "l2=1.94 f=-0.245 shape=(1, 9000, 1)
logits [[ 2.310744  -3.098148   2.5282617 -2.7189631]]
Iteration 300 of 1000: loss=3.94 " + "l1=1.7" + "l2=2.25 f=-0.133 shape=(1, 9000, 1)
logits [[ 1.4531648 -2.5329266  1.8164221 -1.2676368]]
Iteration 400 of 1000: loss=3.31 " + "l1=0.881" + "l2=2.43 f=-0.0511 shape=(1, 9000, 1)
logits [[ 0.8949229 -2.089427   1.2961514 -0.3060351]]
Iteration 500 of 1000: loss=2.79 " + "l1=0.227" + "l2=2.56 f=0.00114 shape=(1, 9000, 1)
logits [[ 0.4282484  -1.7929707   0.8907951   0.47850543]]
Iteration 600 of 1000: loss=2.36 " + "l1=0.0234" + "l2=2.34 f=0.000332 shape=(1, 9000, 1)
logits [[ 0.23133546 -1.7333703   0.7729794   0.73038256]]
Iteration 700 of 1000: loss=2.06 " + "l1=0.00367" + "l2=2.06 f=-0.0209 shape=(1, 9000, 1)
logits [[ 0.14478366 -1.7648109   0.7715244   0.7648578 ]]
Iteration 800 of 1000: loss=1.84 " + "l1=0.006" + "l2=1.83 f=-0.0489 shape=(1, 9000, 1)
logits [[ 0.0546259  -1.8149807   0.7879127   0.77701175]]
Iteration 900 of 1000: loss=1.68 " + "l1=0.00253" + "l2=1.68 f=-0.0672 shape=(1, 9000, 1)
logits [[-0.00344479 -1.8209536   0.78013486  0.77552897]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.65 " + "l1=5.65" + "l2=0 f=-1.06 shape=(1, 9000, 1)
logits [[  6.8149996  -6.6728644   6.2102222 -10.575477 ]]
Iteration 100 of 1000: loss=4.37 " + "l1=3.73" + "l2=0.647 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.53992   -4.9359045  4.541868  -6.92626  ]]
Iteration 200 of 1000: loss=3.71 " + "l1=2.73" + "l2=0.978 f=-0.456 shape=(1, 9000, 1)
logits [[ 3.5170932 -4.0085464  3.533047  -4.867167 ]]
Iteration 300 of 1000: loss=3.32 " + "l1=2.22" + "l2=1.1 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.9087563 -3.644052   3.0593748 -3.7759027]]
Iteration 400 of 1000: loss=2.93 " + "l1=1.76" + "l2=1.17 f=-0.294 shape=(1, 9000, 1)
logits [[ 2.2797132 -3.3501701  2.6487277 -2.755126 ]]
Iteration 500 of 1000: loss=2.6 " + "l1=1.38" + "l2=1.23 f=-0.233 shape=(1, 9000, 1)
logits [[ 1.8614199 -2.9839785  2.21435   -2.0254061]]
Iteration 600 of 1000: loss=2.34 " + "l1=1.11" + "l2=1.23 f=-0.18 shape=(1, 9000, 1)
logits [[ 1.5760657 -2.71467    1.9200476 -1.4998759]]
Iteration 700 of 1000: loss=2.12 " + "l1=0.891" + "l2=1.23 f=-0.147 shape=(1, 9000, 1)
logits [[ 1.3095249 -2.537821   1.6899893 -1.050918 ]]
Iteration 800 of 1000: loss=1.9 " + "l1=0.662" + "l2=1.24 f=-0.111 shape=(1, 9000, 1)
logits [[ 1.017053  -2.335745   1.4559115 -0.5810846]]
Iteration 900 of 1000: loss=1.67 " + "l1=0.403" + "l2=1.27 f=-0.0741 shape=(1, 9000, 1)
logits [[ 0.68682766 -2.0883582   1.1723728  -0.06710692]]
--- 287.48359394073486 seconds ---
Adv result:3
Loading record A03792
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0205 " + "l1=0.0205" + "l2=0 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.8081346  -0.24275462  1.5730603  -5.020155  ]]
Iteration 100 of 1000: loss=0.0194 " + "l1=0.0186" + "l2=0.000741 f=-0.477 shape=(1, 9000, 1)
logits [[ 1.7009314  -0.16308823  1.5197705  -4.9638586 ]]
Iteration 200 of 1000: loss=0.0191 " + "l1=0.0183" + "l2=0.000864 f=-0.477 shape=(1, 9000, 1)
logits [[ 1.6803887  -0.14646594  1.5082222  -4.9513516 ]]
Iteration 300 of 1000: loss=0.019 " + "l1=0.0179" + "l2=0.00104 f=-0.478 shape=(1, 9000, 1)
logits [[ 1.6609242  -0.13105188  1.4977931  -4.9385915 ]]
Iteration 400 of 1000: loss=0.0188 " + "l1=0.0176" + "l2=0.00123 f=-0.478 shape=(1, 9000, 1)
logits [[ 1.6430616  -0.11682986  1.4884804  -4.926516  ]]
Iteration 500 of 1000: loss=0.0187 " + "l1=0.0173" + "l2=0.0014 f=-0.478 shape=(1, 9000, 1)
logits [[ 1.6280365  -0.10416969  1.480256   -4.9152966 ]]
Iteration 600 of 1000: loss=0.0186 " + "l1=0.0171" + "l2=0.00156 f=-0.477 shape=(1, 9000, 1)
logits [[ 1.6149545  -0.09279254  1.4732985  -4.905068  ]]
Iteration 700 of 1000: loss=0.0186 " + "l1=0.0169" + "l2=0.00174 f=-0.477 shape=(1, 9000, 1)
logits [[ 1.6038678  -0.08228894  1.4669983  -4.8964767 ]]
Iteration 800 of 1000: loss=0.0186 " + "l1=0.0167" + "l2=0.00192 f=-0.476 shape=(1, 9000, 1)
logits [[ 1.5954074  -0.07379109  1.462165   -4.8886333 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.205 " + "l1=0.205" + "l2=0 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.8081346  -0.24275462  1.5730603  -5.020155  ]]
Iteration 100 of 1000: loss=0.12 " + "l1=0.0821" + "l2=0.038 f=-0.495 shape=(1, 9000, 1)
logits [[ 1.1649826   0.34493566  1.1659671  -4.6574855 ]]
Iteration 200 of 1000: loss=0.102 " + "l1=0.0585" + "l2=0.0434 f=-0.481 shape=(1, 9000, 1)
logits [[ 1.0790454   0.49392664  1.0739739  -4.572515  ]]
Iteration 300 of 1000: loss=0.0877 " + "l1=0.0389" + "l2=0.0488 f=-0.473 shape=(1, 9000, 1)
logits [[ 0.9970379   0.61696446  1.0062621  -4.513199  ]]
Iteration 400 of 1000: loss=0.0787 " + "l1=0.0236" + "l2=0.0552 f=-0.47 shape=(1, 9000, 1)
logits [[ 0.9391085   0.71215713  0.948052   -4.48085   ]]
Iteration 500 of 1000: loss=0.0709 " + "l1=0.00939" + "l2=0.0615 f=-0.468 shape=(1, 9000, 1)
logits [[ 0.8842857   0.7946215   0.88854456 -4.4401865 ]]
Iteration 600 of 1000: loss=0.0638 " + "l1=0.000722" + "l2=0.0631 f=-0.471 shape=(1, 9000, 1)
logits [[ 0.84211284  0.84004635  0.8472687  -4.413932  ]]
Iteration 700 of 1000: loss=0.0599 " + "l1=0.00051" + "l2=0.0594 f=-0.47 shape=(1, 9000, 1)
logits [[ 0.84512293  0.8400276   0.8423927  -4.407146  ]]
Iteration 800 of 1000: loss=0.0576 " + "l1=0.00189" + "l2=0.0558 f=-0.47 shape=(1, 9000, 1)
logits [[ 0.8455788  0.8298965  0.8488154 -4.4042387]]
Iteration 900 of 1000: loss=0.0556 " + "l1=0.00173" + "l2=0.0539 f=-0.469 shape=(1, 9000, 1)
logits [[ 0.84698296  0.8297315   0.84584236 -4.3989167 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.113 " + "l1=0.113" + "l2=0 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.8081346  -0.24275462  1.5730603  -5.020155  ]]
Iteration 100 of 1000: loss=0.0826 " + "l1=0.0665" + "l2=0.016 f=-0.502 shape=(1, 9000, 1)
logits [[ 1.3251297   0.11667179  1.3260156  -4.7755327 ]]
Iteration 200 of 1000: loss=0.0754 " + "l1=0.0574" + "l2=0.018 f=-0.494 shape=(1, 9000, 1)
logits [[ 1.2568438   0.21296959  1.257043   -4.704058  ]]
Iteration 300 of 1000: loss=0.0706 " + "l1=0.0512" + "l2=0.0194 f=-0.487 shape=(1, 9000, 1)
logits [[ 1.2113472  0.2809481  1.2101057 -4.6487265]]
Iteration 400 of 1000: loss=0.0671 " + "l1=0.0462" + "l2=0.0209 f=-0.48 shape=(1, 9000, 1)
logits [[ 1.1769959   0.33713844  1.1738375  -4.6065016 ]]
Iteration 500 of 1000: loss=0.0641 " + "l1=0.0412" + "l2=0.023 f=-0.475 shape=(1, 9000, 1)
logits [[ 1.1428245   0.39400417  1.1404377  -4.575982  ]]
Iteration 600 of 1000: loss=0.0615 " + "l1=0.0369" + "l2=0.0246 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.1131754   0.44216344  1.1138474  -4.548328  ]]
Iteration 700 of 1000: loss=0.0597 " + "l1=0.034" + "l2=0.0258 f=-0.466 shape=(1, 9000, 1)
logits [[ 1.0952668   0.47790214  1.093871   -4.532108  ]]
Iteration 800 of 1000: loss=0.0583 " + "l1=0.0322" + "l2=0.0261 f=-0.466 shape=(1, 9000, 1)
logits [[ 1.0849841   0.49895227  1.0834717  -4.530721  ]]
Iteration 900 of 1000: loss=0.0573 " + "l1=0.0308" + "l2=0.0265 f=-0.465 shape=(1, 9000, 1)
logits [[ 1.0750886  0.5161066  1.0753376 -4.527588 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.159 " + "l1=0.159" + "l2=0 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.8081346  -0.24275462  1.5730603  -5.020155  ]]
Iteration 100 of 1000: loss=0.104 " + "l1=0.0781" + "l2=0.0258 f=-0.497 shape=(1, 9000, 1)
logits [[ 1.242216    0.23492824  1.2408136  -4.7071414 ]]
Iteration 200 of 1000: loss=0.0919 " + "l1=0.0624" + "l2=0.0295 f=-0.49 shape=(1, 9000, 1)
logits [[ 1.1589471  0.3561503  1.1610295 -4.635953 ]]
Iteration 300 of 1000: loss=0.0832 " + "l1=0.0503" + "l2=0.0329 f=-0.479 shape=(1, 9000, 1)
logits [[ 1.1013451   0.45457807  1.1041876  -4.575138  ]]
Iteration 400 of 1000: loss=0.0762 " + "l1=0.0392" + "l2=0.0371 f=-0.471 shape=(1, 9000, 1)
logits [[ 1.0438141  0.5457702  1.0510309 -4.526322 ]]
Iteration 500 of 1000: loss=0.0717 " + "l1=0.0327" + "l2=0.039 f=-0.468 shape=(1, 9000, 1)
logits [[ 1.0183504  0.5980455  1.0201536 -4.5069265]]
Iteration 600 of 1000: loss=0.0688 " + "l1=0.0274" + "l2=0.0415 f=-0.465 shape=(1, 9000, 1)
logits [[ 0.99228823  0.64068645  0.99396247 -4.48823   ]]
Iteration 700 of 1000: loss=0.0661 " + "l1=0.0214" + "l2=0.0447 f=-0.464 shape=(1, 9000, 1)
logits [[ 0.964725    0.68937004  0.9654527  -4.4755116 ]]
Iteration 800 of 1000: loss=0.063 " + "l1=0.0151" + "l2=0.0479 f=-0.462 shape=(1, 9000, 1)
logits [[ 0.9333713   0.73850036  0.93355197 -4.4549904 ]]
Iteration 900 of 1000: loss=0.061 " + "l1=0.0102" + "l2=0.0508 f=-0.464 shape=(1, 9000, 1)
logits [[ 0.90096545  0.7747528   0.9070095  -4.438207  ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.182 " + "l1=0.182" + "l2=0 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.8081346  -0.24275462  1.5730603  -5.020155  ]]
Iteration 100 of 1000: loss=0.113 " + "l1=0.0808" + "l2=0.0319 f=-0.497 shape=(1, 9000, 1)
logits [[ 1.1986626   0.29118577  1.2015508  -4.6776195 ]]
Iteration 200 of 1000: loss=0.0977 " + "l1=0.0613" + "l2=0.0364 f=-0.486 shape=(1, 9000, 1)
logits [[ 1.1177768   0.42758387  1.1171523  -4.606511  ]]
Iteration 300 of 1000: loss=0.086 " + "l1=0.0438" + "l2=0.0421 f=-0.474 shape=(1, 9000, 1)
logits [[ 1.0396343   0.55047554  1.0442971  -4.531664  ]]
Iteration 400 of 1000: loss=0.0782 " + "l1=0.0335" + "l2=0.0447 f=-0.469 shape=(1, 9000, 1)
logits [[ 1.0031871   0.62583274  1.0007463  -4.505256  ]]
Iteration 500 of 1000: loss=0.073 " + "l1=0.0238" + "l2=0.0492 f=-0.468 shape=(1, 9000, 1)
logits [[ 0.95590895  0.69301295  0.9612492  -4.4834347 ]]
Iteration 600 of 1000: loss=0.0681 " + "l1=0.0129" + "l2=0.0553 f=-0.467 shape=(1, 9000, 1)
logits [[ 0.90283203  0.7667288   0.9119263  -4.4479856 ]]
Iteration 700 of 1000: loss=0.064 " + "l1=0.00463" + "l2=0.0594 f=-0.469 shape=(1, 9000, 1)
logits [[ 0.86001253  0.8201286   0.8723091  -4.4266853 ]]
Iteration 800 of 1000: loss=0.0592 " + "l1=0.000168" + "l2=0.0591 f=-0.469 shape=(1, 9000, 1)
logits [[ 0.8440471   0.84420425  0.84609663 -4.4116244 ]]
Iteration 900 of 1000: loss=0.0566 " + "l1=0.000278" + "l2=0.0563 f=-0.469 shape=(1, 9000, 1)
logits [[ 0.8422656   0.8413231   0.84445417 -4.4042335 ]]
--- 275.4130549430847 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00235 " + "l1=0.00235" + "l2=0 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.8081346  -0.24275462  1.5730603  -5.020155  ]]
Iteration 100 of 1000: loss=0.00197 " + "l1=0.0017" + "l2=0.000267 f=-0.478 shape=(1, 9000, 1)
logits [[ 1.7498857  -0.24031393  1.5797398  -5.0021605 ]]
Iteration 200 of 1000: loss=0.00186 " + "l1=0.0016" + "l2=0.000264 f=-0.48 shape=(1, 9000, 1)
logits [[ 1.7423621  -0.24332426  1.5827943  -5.0010176 ]]
Iteration 300 of 1000: loss=0.00178 " + "l1=0.00146" + "l2=0.000314 f=-0.482 shape=(1, 9000, 1)
logits [[ 1.7327235 -0.2463954  1.5864661 -4.999596 ]]
Iteration 400 of 1000: loss=0.0017 " + "l1=0.00131" + "l2=0.000389 f=-0.484 shape=(1, 9000, 1)
logits [[ 1.7226086  -0.25060314  1.5912442  -4.9978833 ]]
Iteration 500 of 1000: loss=0.00163 " + "l1=0.00117" + "l2=0.000462 f=-0.486 shape=(1, 9000, 1)
logits [[ 1.7136743  -0.25549784  1.5964736  -4.9974303 ]]
Iteration 600 of 1000: loss=0.00157 " + "l1=0.00102" + "l2=0.000552 f=-0.488 shape=(1, 9000, 1)
logits [[ 1.7048647  -0.26128802  1.6026447  -4.9969864 ]]
Iteration 700 of 1000: loss=0.00153 " + "l1=0.000875" + "l2=0.000651 f=-0.49 shape=(1, 9000, 1)
logits [[ 1.6968745  -0.26763016  1.6093436  -4.997494  ]]
Iteration 800 of 1000: loss=0.00145 " + "l1=0.000739" + "l2=0.000715 f=-0.492 shape=(1, 9000, 1)
logits [[ 1.6890315  -0.27296484  1.6151654  -4.997778  ]]
Iteration 900 of 1000: loss=0.0015 " + "l1=0.000594" + "l2=0.000902 f=-0.494 shape=(1, 9000, 1)
logits [[ 1.6806235 -0.2784091  1.6212732 -4.9978714]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0235 " + "l1=0.0235" + "l2=0 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.8081346  -0.24275462  1.5730603  -5.020155  ]]
Iteration 100 of 1000: loss=0.00352 " + "l1=0" + "l2=0.00352 f=-0.498 shape=(1, 9000, 1)
logits [[ 1.6082256  -0.24709542  1.6110612  -4.964323  ]]
Iteration 200 of 1000: loss=0.00233 " + "l1=0" + "l2=0.00233 f=-0.499 shape=(1, 9000, 1)
logits [[ 1.6108932  -0.25699174  1.6149904  -4.9662294 ]]
Iteration 300 of 1000: loss=0.00175 " + "l1=0" + "l2=0.00175 f=-0.5 shape=(1, 9000, 1)
logits [[ 1.6165533  -0.26678246  1.6198374  -4.9701004 ]]
Iteration 400 of 1000: loss=0.00157 " + "l1=0" + "l2=0.00157 f=-0.501 shape=(1, 9000, 1)
logits [[ 1.6190385 -0.2746175  1.6260731 -4.974539 ]]
Iteration 500 of 1000: loss=0.00137 " + "l1=0" + "l2=0.00137 f=-0.501 shape=(1, 9000, 1)
logits [[ 1.6281115  -0.28140256  1.6308407  -4.9805236 ]]
Iteration 600 of 1000: loss=0.00132 " + "l1=0" + "l2=0.00132 f=-0.502 shape=(1, 9000, 1)
logits [[ 1.6281772  -0.28814587  1.6375499  -4.9842167 ]]
Iteration 700 of 1000: loss=0.0013 " + "l1=0" + "l2=0.0013 f=-0.502 shape=(1, 9000, 1)
logits [[ 1.6319197  -0.29367164  1.6426973  -4.988902  ]]
Iteration 800 of 1000: loss=0.0013 " + "l1=0" + "l2=0.0013 f=-0.502 shape=(1, 9000, 1)
logits [[ 1.6356934  -0.29887554  1.6475033  -4.9935203 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0129 " + "l1=0.0129" + "l2=0 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.8081346  -0.24275462  1.5730603  -5.020155  ]]
Iteration 100 of 1000: loss=0.00369 " + "l1=0.000163" + "l2=0.00353 f=-0.498 shape=(1, 9000, 1)
logits [[ 1.6127203  -0.24602707  1.6097547  -4.9671993 ]]
Iteration 200 of 1000: loss=0.00232 " + "l1=0" + "l2=0.00232 f=-0.499 shape=(1, 9000, 1)
logits [[ 1.6131138  -0.25597304  1.6145222  -4.968221  ]]
Iteration 300 of 1000: loss=0.0018 " + "l1=0" + "l2=0.0018 f=-0.5 shape=(1, 9000, 1)
logits [[ 1.6160649  -0.26608256  1.6198652  -4.9711003 ]]
Iteration 400 of 1000: loss=0.00142 " + "l1=0" + "l2=0.00142 f=-0.501 shape=(1, 9000, 1)
logits [[ 1.6233346  -0.27406657  1.6248711  -4.976196  ]]
Iteration 500 of 1000: loss=0.00125 " + "l1=0" + "l2=0.00125 f=-0.501 shape=(1, 9000, 1)
logits [[ 1.6282685 -0.2810043  1.6304934 -4.980974 ]]
Iteration 600 of 1000: loss=0.00123 " + "l1=0" + "l2=0.00123 f=-0.502 shape=(1, 9000, 1)
logits [[ 1.6293172 -0.287974   1.6371351 -4.985089 ]]
Iteration 700 of 1000: loss=0.00113 " + "l1=0.000119" + "l2=0.00101 f=-0.501 shape=(1, 9000, 1)
logits [[ 1.6422559  -0.29341882  1.6400849  -4.9918065 ]]
Iteration 800 of 1000: loss=0.00129 " + "l1=0" + "l2=0.00129 f=-0.502 shape=(1, 9000, 1)
logits [[ 1.6369202 -0.298502   1.6467366 -4.994207 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00764 " + "l1=0.00764" + "l2=0 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.8081346  -0.24275462  1.5730603  -5.020155  ]]
Iteration 100 of 1000: loss=0.00418 " + "l1=0.00227" + "l2=0.00192 f=-0.49 shape=(1, 9000, 1)
logits [[ 1.6642251  -0.23994116  1.5944505  -4.979611  ]]
Iteration 200 of 1000: loss=0.00278 " + "l1=0.000286" + "l2=0.00249 f=-0.498 shape=(1, 9000, 1)
logits [[ 1.6189692  -0.25031042  1.6101832  -4.969561  ]]
Iteration 300 of 1000: loss=0.00195 " + "l1=4.17e-05" + "l2=0.00191 f=-0.499 shape=(1, 9000, 1)
logits [[ 1.6178262 -0.2619326  1.616543  -4.9704256]]
Iteration 400 of 1000: loss=0.00152 " + "l1=0" + "l2=0.00152 f=-0.5 shape=(1, 9000, 1)
logits [[ 1.6222508  -0.27145162  1.6225297  -4.97469   ]]
Iteration 500 of 1000: loss=0.00128 " + "l1=0" + "l2=0.00128 f=-0.501 shape=(1, 9000, 1)
logits [[ 1.6273297  -0.27884603  1.6282153  -4.9797716 ]]
Iteration 600 of 1000: loss=0.00121 " + "l1=0" + "l2=0.00121 f=-0.501 shape=(1, 9000, 1)
logits [[ 1.6316279  -0.28570333  1.63399    -4.9845266 ]]
Iteration 700 of 1000: loss=0.00114 " + "l1=0" + "l2=0.00114 f=-0.502 shape=(1, 9000, 1)
logits [[ 1.6351502 -0.2915197  1.6392478 -4.9890666]]
Iteration 800 of 1000: loss=0.00117 " + "l1=0" + "l2=0.00117 f=-0.502 shape=(1, 9000, 1)
logits [[ 1.6405395  -0.29717886  1.6440701  -4.993742  ]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.005 " + "l1=0.005" + "l2=0 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.8081346  -0.24275462  1.5730603  -5.020155  ]]
Iteration 100 of 1000: loss=0.00342 " + "l1=0.00253" + "l2=0.000889 f=-0.484 shape=(1, 9000, 1)
logits [[ 1.7056082  -0.23983477  1.5866402  -4.9899096 ]]
Iteration 200 of 1000: loss=0.0029 " + "l1=0.00182" + "l2=0.00107 f=-0.489 shape=(1, 9000, 1)
logits [[ 1.6807632  -0.24657224  1.5949118  -4.9843044 ]]
Iteration 300 of 1000: loss=0.00236 " + "l1=0.00106" + "l2=0.0013 f=-0.493 shape=(1, 9000, 1)
logits [[ 1.6546973  -0.25415364  1.6046056  -4.978824  ]]
Iteration 400 of 1000: loss=0.00186 " + "l1=0.000308" + "l2=0.00155 f=-0.498 shape=(1, 9000, 1)
logits [[ 1.6310232  -0.26474804  1.6165186  -4.976026  ]]
Iteration 500 of 1000: loss=0.00139 " + "l1=1.08e-05" + "l2=0.00138 f=-0.501 shape=(1, 9000, 1)
logits [[ 1.6257138  -0.27481484  1.6252075  -4.978598  ]]
Iteration 600 of 1000: loss=0.00125 " + "l1=0" + "l2=0.00125 f=-0.501 shape=(1, 9000, 1)
logits [[ 1.6307855  -0.28256255  1.6310786  -4.983377  ]]
Iteration 700 of 1000: loss=0.00116 " + "l1=0" + "l2=0.00116 f=-0.501 shape=(1, 9000, 1)
logits [[ 1.636484  -0.2896442  1.6367458 -4.9885907]]
Iteration 800 of 1000: loss=0.00118 " + "l1=0" + "l2=0.00118 f=-0.501 shape=(1, 9000, 1)
logits [[ 1.6405851 -0.2952581  1.6417047 -4.99297  ]]
--- 236.60209393501282 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0683 " + "l1=0.0683" + "l2=0 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.8081346  -0.24275462  1.5730603  -5.020155  ]]
Iteration 100 of 1000: loss=0.0669 " + "l1=0.0661" + "l2=0.000818 f=-0.471 shape=(1, 9000, 1)
logits [[ 1.6966255 -0.1942134  1.5276845 -4.913178 ]]
Iteration 200 of 1000: loss=0.0666 " + "l1=0.0657" + "l2=0.000952 f=-0.471 shape=(1, 9000, 1)
logits [[ 1.6738598  -0.18412404  1.5187289  -4.891353  ]]
Iteration 300 of 1000: loss=0.0664 " + "l1=0.0652" + "l2=0.00115 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.6521637  -0.17597099  1.5117683  -4.868307  ]]
Iteration 400 of 1000: loss=0.0662 " + "l1=0.0648" + "l2=0.00135 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.6336203  -0.16924904  1.5063063  -4.8487873 ]]
Iteration 500 of 1000: loss=0.0661 " + "l1=0.0645" + "l2=0.00161 f=-0.469 shape=(1, 9000, 1)
logits [[ 1.6153336  -0.16213225  1.5005221  -4.8296824 ]]
Iteration 600 of 1000: loss=0.066 " + "l1=0.0641" + "l2=0.00186 f=-0.468 shape=(1, 9000, 1)
logits [[ 1.5993015  -0.15704736  1.4963783  -4.8121886 ]]
Iteration 700 of 1000: loss=0.0659 " + "l1=0.0638" + "l2=0.00208 f=-0.468 shape=(1, 9000, 1)
logits [[ 1.5832907 -0.1514784  1.4918803 -4.795445 ]]
Iteration 800 of 1000: loss=0.0658 " + "l1=0.0635" + "l2=0.00229 f=-0.468 shape=(1, 9000, 1)
logits [[ 1.5693449  -0.14679359  1.4883684  -4.780922  ]]
Iteration 900 of 1000: loss=0.0658 " + "l1=0.0632" + "l2=0.00257 f=-0.467 shape=(1, 9000, 1)
logits [[ 1.5554315  -0.14170621  1.4847797  -4.767438  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.683 " + "l1=0.683" + "l2=0 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.8081346  -0.24275462  1.5730603  -5.020155  ]]
Iteration 100 of 1000: loss=0.581 " + "l1=0.532" + "l2=0.0485 f=-0.431 shape=(1, 9000, 1)
logits [[ 1.1756167   0.07089362  1.1767875  -4.145518  ]]
Iteration 200 of 1000: loss=0.555 " + "l1=0.498" + "l2=0.0571 f=-0.408 shape=(1, 9000, 1)
logits [[ 1.0643468   0.13819699  1.0730728  -3.906242  ]]
Iteration 300 of 1000: loss=0.536 " + "l1=0.471" + "l2=0.0655 f=-0.384 shape=(1, 9000, 1)
logits [[ 0.9984524   0.16834633  1.002435   -3.7061744 ]]
Iteration 400 of 1000: loss=0.523 " + "l1=0.453" + "l2=0.0694 f=-0.372 shape=(1, 9000, 1)
logits [[ 0.9431349   0.20452115  0.9504878  -3.5842984 ]]
Iteration 500 of 1000: loss=0.511 " + "l1=0.434" + "l2=0.0765 f=-0.359 shape=(1, 9000, 1)
logits [[ 0.8843247   0.23462166  0.8938059  -3.449373  ]]
Iteration 600 of 1000: loss=0.5 " + "l1=0.416" + "l2=0.0842 f=-0.349 shape=(1, 9000, 1)
logits [[ 0.8248155  0.2650836  0.8347728 -3.3202543]]
Iteration 700 of 1000: loss=0.49 " + "l1=0.403" + "l2=0.0878 f=-0.339 shape=(1, 9000, 1)
logits [[ 0.7933619   0.27397677  0.80158126 -3.2240796 ]]
Iteration 800 of 1000: loss=0.482 " + "l1=0.39" + "l2=0.0917 f=-0.331 shape=(1, 9000, 1)
logits [[ 0.7543379   0.29564026  0.7642018  -3.1370463 ]]
Iteration 900 of 1000: loss=0.473 " + "l1=0.378" + "l2=0.0946 f=-0.323 shape=(1, 9000, 1)
logits [[ 0.7253778   0.31346527  0.72611314 -3.0580153 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.83 " + "l1=6.83" + "l2=0 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.8081346  -0.24275462  1.5730603  -5.020155  ]]
Iteration 100 of 1000: loss=2.24 " + "l1=0.538" + "l2=1.7 f=-0.28 shape=(1, 9000, 1)
logits [[-0.7499459   0.05785028  0.05167066 -0.48011768]]
Iteration 200 of 1000: loss=1.46 " + "l1=0.0132" + "l2=1.45 f=-0.243 shape=(1, 9000, 1)
logits [[-0.7911863  -0.07028709 -0.0495318  -0.06275958]]
Iteration 300 of 1000: loss=1.24 " + "l1=0" + "l2=1.24 f=-0.228 shape=(1, 9000, 1)
logits [[-0.7334161  -0.07016763 -0.05438435 -0.05319695]]
Iteration 400 of 1000: loss=1.15 " + "l1=0.00659" + "l2=1.14 f=-0.218 shape=(1, 9000, 1)
logits [[-0.6838091  -0.09117971 -0.04589305 -0.05248748]]
Iteration 500 of 1000: loss=1.07 " + "l1=0" + "l2=1.07 f=-0.214 shape=(1, 9000, 1)
logits [[-0.674296   -0.08391285 -0.0507472  -0.04805256]]
Iteration 600 of 1000: loss=1.01 " + "l1=0.00204" + "l2=1.01 f=-0.211 shape=(1, 9000, 1)
logits [[-0.652503   -0.10867057 -0.04064046 -0.04268242]]
Iteration 700 of 1000: loss=0.948 " + "l1=0" + "l2=0.948 f=-0.219 shape=(1, 9000, 1)
logits [[-0.6963297  -0.07280722 -0.05478126 -0.05355211]]
Iteration 800 of 1000: loss=0.89 " + "l1=0.0115" + "l2=0.879 f=-0.223 shape=(1, 9000, 1)
logits [[-0.71517026 -0.10954206 -0.02759095 -0.03906371]]
Iteration 900 of 1000: loss=0.827 " + "l1=0" + "l2=0.827 f=-0.231 shape=(1, 9000, 1)
logits [[-0.76834106 -0.06512795 -0.04768135 -0.04288702]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.76 " + "l1=3.76" + "l2=0 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.8081346  -0.24275462  1.5730603  -5.020155  ]]
Iteration 100 of 1000: loss=1.91 " + "l1=1.06" + "l2=0.851 f=-0.298 shape=(1, 9000, 1)
logits [[-0.2507208   0.29632884  0.34501442 -1.581167  ]]
Iteration 200 of 1000: loss=1.49 " + "l1=0.559" + "l2=0.926 f=-0.255 shape=(1, 9000, 1)
logits [[-0.46116278  0.12372863  0.16685924 -0.850144  ]]
Iteration 300 of 1000: loss=1.23 " + "l1=0.205" + "l2=1.02 f=-0.206 shape=(1, 9000, 1)
logits [[-0.58499825  0.01683624  0.05783979 -0.31456304]]
Iteration 400 of 1000: loss=1.08 " + "l1=0.0497" + "l2=1.03 f=-0.206 shape=(1, 9000, 1)
logits [[-0.64571613 -0.04527469 -0.02167631 -0.11207724]]
Iteration 500 of 1000: loss=0.959 " + "l1=0.0016" + "l2=0.958 f=-0.214 shape=(1, 9000, 1)
logits [[-0.7183154  -0.06041492 -0.03705446 -0.03996915]]
Iteration 600 of 1000: loss=0.873 " + "l1=0.00458" + "l2=0.868 f=-0.218 shape=(1, 9000, 1)
logits [[-0.75509894 -0.05070825 -0.02894039 -0.03727433]]
Iteration 700 of 1000: loss=0.806 " + "l1=0.014" + "l2=0.792 f=-0.218 shape=(1, 9000, 1)
logits [[-0.7725836  -0.04592604 -0.01367958 -0.03920305]]
Iteration 800 of 1000: loss=0.744 " + "l1=0" + "l2=0.744 f=-0.215 shape=(1, 9000, 1)
logits [[-0.7818931  -0.03255626 -0.03209699 -0.01178656]]
Iteration 900 of 1000: loss=0.7 " + "l1=0" + "l2=0.7 f=-0.217 shape=(1, 9000, 1)
logits [[-0.77728176 -0.05267615 -0.02308255 -0.01585537]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.22 " + "l1=2.22" + "l2=0 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.8081346  -0.24275462  1.5730603  -5.020155  ]]
Iteration 100 of 1000: loss=1.44 " + "l1=1.09" + "l2=0.352 f=-0.328 shape=(1, 9000, 1)
logits [[ 0.4295045  0.3388042  0.6396401 -2.720835 ]]
Iteration 200 of 1000: loss=1.27 " + "l1=0.868" + "l2=0.399 f=-0.29 shape=(1, 9000, 1)
logits [[ 0.17126974  0.34077418  0.5002586  -2.1712193 ]]
Iteration 300 of 1000: loss=1.13 " + "l1=0.654" + "l2=0.478 f=-0.268 shape=(1, 9000, 1)
logits [[-0.07996664  0.29692635  0.36034787 -1.6512465 ]]
Iteration 400 of 1000: loss=0.998 " + "l1=0.485" + "l2=0.513 f=-0.24 shape=(1, 9000, 1)
logits [[-0.17038636  0.17800276  0.2616174  -1.2294593 ]]
Iteration 500 of 1000: loss=0.905 " + "l1=0.371" + "l2=0.535 f=-0.227 shape=(1, 9000, 1)
logits [[-0.28802645  0.17627597  0.16958545 -0.9643085 ]]
Iteration 600 of 1000: loss=0.828 " + "l1=0.287" + "l2=0.541 f=-0.208 shape=(1, 9000, 1)
logits [[-0.31186244  0.09139702  0.1354941  -0.7478872 ]]
Iteration 700 of 1000: loss=0.766 " + "l1=0.215" + "l2=0.551 f=-0.208 shape=(1, 9000, 1)
logits [[-0.40095326  0.06506327  0.08125854 -0.57922304]]
Iteration 800 of 1000: loss=0.724 " + "l1=0.166" + "l2=0.558 f=-0.207 shape=(1, 9000, 1)
logits [[-0.44956568  0.02019467  0.05555579 -0.45594904]]
Iteration 900 of 1000: loss=0.693 " + "l1=0.125" + "l2=0.568 f=-0.203 shape=(1, 9000, 1)
logits [[-0.48985007  0.01257645  0.02499612 -0.35911408]]
--- 283.8417913913727 seconds ---
Adv result:3
Loading record A03827
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0915 " + "l1=0.0915" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 6.103176  -3.0487263  3.6954823 -9.629276 ]]
Iteration 100 of 1000: loss=0.0912 " + "l1=0.091" + "l2=0.000246 f=-0.718 shape=(1, 9000, 1)
logits [[ 6.064318  -3.0308752  3.683057  -9.590401 ]]
Iteration 200 of 1000: loss=0.0911 " + "l1=0.0909" + "l2=0.000217 f=-0.718 shape=(1, 9000, 1)
logits [[ 6.060712  -3.0277028  3.680942  -9.586984 ]]
Iteration 300 of 1000: loss=0.091 " + "l1=0.0908" + "l2=0.000268 f=-0.718 shape=(1, 9000, 1)
logits [[ 6.0539927 -3.0233562  3.6780624 -9.580594 ]]
Iteration 400 of 1000: loss=0.091 " + "l1=0.0907" + "l2=0.000309 f=-0.718 shape=(1, 9000, 1)
logits [[ 6.047036  -3.0188498  3.6751351 -9.57426  ]]
Iteration 500 of 1000: loss=0.091 " + "l1=0.0905" + "l2=0.000414 f=-0.718 shape=(1, 9000, 1)
logits [[ 6.0401316 -3.0144382  3.672271  -9.568215 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.915 " + "l1=0.915" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 6.103176  -3.0487263  3.6954823 -9.629276 ]]
Iteration 100 of 1000: loss=0.885 " + "l1=0.869" + "l2=0.0166 f=-0.706 shape=(1, 9000, 1)
logits [[ 5.793914  -2.8925965  3.5874329 -9.311828 ]]
Iteration 200 of 1000: loss=0.866 " + "l1=0.84" + "l2=0.0265 f=-0.693 shape=(1, 9000, 1)
logits [[ 5.616848  -2.7830124  3.5119948 -9.115884 ]]
Iteration 300 of 1000: loss=0.85 " + "l1=0.814" + "l2=0.0356 f=-0.682 shape=(1, 9000, 1)
logits [[ 5.4551973 -2.6857884  3.4433146 -8.940046 ]]
Iteration 400 of 1000: loss=0.836 " + "l1=0.792" + "l2=0.0439 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.314749  -2.6040063  3.3823833 -8.784496 ]]
Iteration 500 of 1000: loss=0.824 " + "l1=0.774" + "l2=0.0494 f=-0.667 shape=(1, 9000, 1)
logits [[ 5.201668  -2.5411282  3.3358896 -8.663512 ]]
Iteration 600 of 1000: loss=0.812 " + "l1=0.758" + "l2=0.0541 f=-0.661 shape=(1, 9000, 1)
logits [[ 5.1031394 -2.479705   3.2918022 -8.558158 ]]
Iteration 700 of 1000: loss=0.801 " + "l1=0.742" + "l2=0.059 f=-0.655 shape=(1, 9000, 1)
logits [[ 5.0019193 -2.415053   3.2497013 -8.457421 ]]
Iteration 800 of 1000: loss=0.789 " + "l1=0.725" + "l2=0.0636 f=-0.65 shape=(1, 9000, 1)
logits [[ 4.895574  -2.3540967  3.2082922 -8.348843 ]]
Iteration 900 of 1000: loss=0.776 " + "l1=0.709" + "l2=0.067 f=-0.644 shape=(1, 9000, 1)
logits [[ 4.7955985 -2.2984495  3.1695654 -8.240963 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.15 " + "l1=9.15" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 6.103176  -3.0487263  3.6954823 -9.629276 ]]
Iteration 100 of 1000: loss=6.1 " + "l1=4.66" + "l2=1.44 f=-0.556 shape=(1, 9000, 1)
logits [[ 3.0154629 -1.6466866  2.6960275 -6.2869387]]
Iteration 200 of 1000: loss=5.1 " + "l1=3.63" + "l2=1.46 f=-0.52 shape=(1, 9000, 1)
logits [[ 2.3465738 -1.2865552  2.335364  -5.4748816]]
Iteration 300 of 1000: loss=4.46 " + "l1=3.02" + "l2=1.44 f=-0.499 shape=(1, 9000, 1)
logits [[ 2.0629554  -0.95772487  2.0514848  -5.1517677 ]]
Iteration 400 of 1000: loss=4.07 " + "l1=2.66" + "l2=1.41 f=-0.489 shape=(1, 9000, 1)
logits [[ 1.8848913  -0.78007525  1.8796227  -4.9386764 ]]
Iteration 500 of 1000: loss=3.79 " + "l1=2.38" + "l2=1.42 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.7599986 -0.616373   1.7592784 -4.755047 ]]
Iteration 600 of 1000: loss=3.63 " + "l1=2.19" + "l2=1.44 f=-0.44 shape=(1, 9000, 1)
logits [[ 1.688151   -0.50603354  1.6775776  -4.6214786 ]]
Iteration 700 of 1000: loss=3.51 " + "l1=2.07" + "l2=1.44 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.6183794  -0.44447356  1.6254067  -4.481335  ]]
Iteration 800 of 1000: loss=3.43 " + "l1=1.99" + "l2=1.43 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.5870317  -0.40602997  1.5852277  -4.3661156 ]]
Iteration 900 of 1000: loss=3.34 " + "l1=1.91" + "l2=1.44 f=-0.379 shape=(1, 9000, 1)
logits [[ 1.5495522  -0.35802683  1.5498068  -4.2585964 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=91.5 " + "l1=91.5" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 6.103176  -3.0487263  3.6954823 -9.629276 ]]
Iteration 100 of 1000: loss=22.8 " + "l1=9.84" + "l2=12.9 f=-0.423 shape=(1, 9000, 1)
logits [[ 1.0769135  0.1049927  1.0894094 -3.965232 ]]
Iteration 200 of 1000: loss=11.7 " + "l1=0.12" + "l2=11.6 f=-0.475 shape=(1, 9000, 1)
logits [[ 0.5034134   0.588339    0.60038793 -3.5930808 ]]
Iteration 300 of 1000: loss=9.97 " + "l1=0.0799" + "l2=9.89 f=-0.503 shape=(1, 9000, 1)
logits [[ 0.5944726  0.5864865  0.5934586 -3.7863305]]
Iteration 400 of 1000: loss=9.27 " + "l1=0" + "l2=9.27 f=-0.516 shape=(1, 9000, 1)
logits [[ 0.5171476   0.63601303  0.59254056 -3.8084717 ]]
Iteration 500 of 1000: loss=8.53 " + "l1=0" + "l2=8.53 f=-0.523 shape=(1, 9000, 1)
logits [[ 0.5913462  0.6120861  0.6049375 -3.8986132]]
Iteration 600 of 1000: loss=8.07 " + "l1=0" + "l2=8.07 f=-0.522 shape=(1, 9000, 1)
logits [[ 0.6049656   0.60686225  0.60209906 -3.900983  ]]
Iteration 700 of 1000: loss=7.79 " + "l1=0" + "l2=7.79 f=-0.521 shape=(1, 9000, 1)
logits [[ 0.4841732  0.6370461  0.6082285 -3.8118176]]
Iteration 800 of 1000: loss=7.39 " + "l1=0.0355" + "l2=7.35 f=-0.522 shape=(1, 9000, 1)
logits [[ 0.51754004  0.6177611   0.6213132  -3.8432307 ]]
Iteration 900 of 1000: loss=7.11 " + "l1=0" + "l2=7.11 f=-0.52 shape=(1, 9000, 1)
logits [[ 0.47852013  0.637768    0.61673146 -3.8147218 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=50.3 " + "l1=50.3" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 6.103176  -3.0487263  3.6954823 -9.629276 ]]
Iteration 100 of 1000: loss=17.2 " + "l1=9.38" + "l2=7.82 f=-0.458 shape=(1, 9000, 1)
logits [[ 1.4366013  -0.26321143  1.4427398  -4.446751  ]]
Iteration 200 of 1000: loss=10.4 " + "l1=0.0686" + "l2=10.4 f=-0.465 shape=(1, 9000, 1)
logits [[ 0.5997916  0.6326904  0.6451568 -3.7376273]]
Iteration 300 of 1000: loss=8.82 " + "l1=0.0244" + "l2=8.79 f=-0.492 shape=(1, 9000, 1)
logits [[ 0.6547353  0.6503054  0.6494413 -3.9215155]]
Iteration 400 of 1000: loss=7.99 " + "l1=0" + "l2=7.99 f=-0.495 shape=(1, 9000, 1)
logits [[ 0.6429325  0.6684874  0.6546737 -3.9444423]]
Iteration 500 of 1000: loss=7.39 " + "l1=0" + "l2=7.39 f=-0.499 shape=(1, 9000, 1)
logits [[ 0.6241139   0.68048453  0.6739008  -3.9725637 ]]
Iteration 600 of 1000: loss=6.86 " + "l1=0" + "l2=6.86 f=-0.499 shape=(1, 9000, 1)
logits [[ 0.64692694  0.70478225  0.6926252  -4.0399685 ]]
Iteration 700 of 1000: loss=6.35 " + "l1=0" + "l2=6.35 f=-0.5 shape=(1, 9000, 1)
logits [[ 0.7069119  0.7081497  0.7063094 -4.120235 ]]
Iteration 800 of 1000: loss=6.02 " + "l1=0" + "l2=6.02 f=-0.501 shape=(1, 9000, 1)
logits [[ 0.68903387  0.72179174  0.70076334 -4.1164694 ]]
Iteration 900 of 1000: loss=5.67 " + "l1=0" + "l2=5.67 f=-0.5 shape=(1, 9000, 1)
logits [[ 0.64282143  0.72356766  0.7147828  -4.079394  ]]
--- 262.5096244812012 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0241 " + "l1=0.0241" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 6.103176  -3.0487263  3.6954823 -9.629276 ]]
Iteration 100 of 1000: loss=0.0239 " + "l1=0.0237" + "l2=0.000174 f=-0.721 shape=(1, 9000, 1)
logits [[ 6.071529  -3.05199    3.6990352 -9.602896 ]]
Iteration 200 of 1000: loss=0.0238 " + "l1=0.0237" + "l2=0.000136 f=-0.721 shape=(1, 9000, 1)
logits [[ 6.0702233 -3.052455   3.6995986 -9.603157 ]]
Iteration 300 of 1000: loss=0.0238 " + "l1=0.0237" + "l2=0.000189 f=-0.722 shape=(1, 9000, 1)
logits [[ 6.0657325 -3.0533266  3.7006037 -9.60067  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.241 " + "l1=0.241" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 6.103176  -3.0487263  3.6954823 -9.629276 ]]
Iteration 100 of 1000: loss=0.225 " + "l1=0.216" + "l2=0.00862 f=-0.727 shape=(1, 9000, 1)
logits [[ 5.8808064 -3.065901   3.7159033 -9.43975  ]]
Iteration 200 of 1000: loss=0.219 " + "l1=0.208" + "l2=0.0114 f=-0.73 shape=(1, 9000, 1)
logits [[ 5.7968316 -3.0690353  3.7207189 -9.367508 ]]
Iteration 300 of 1000: loss=0.213 " + "l1=0.198" + "l2=0.015 f=-0.733 shape=(1, 9000, 1)
logits [[ 5.6977983 -3.067944   3.7211583 -9.281512 ]]
Iteration 400 of 1000: loss=0.206 " + "l1=0.189" + "l2=0.0178 f=-0.735 shape=(1, 9000, 1)
logits [[ 5.608178  -3.0647929  3.7225628 -9.206597 ]]
Iteration 500 of 1000: loss=0.2 " + "l1=0.178" + "l2=0.0215 f=-0.738 shape=(1, 9000, 1)
logits [[ 5.5083833 -3.061068   3.7236402 -9.121542 ]]
Iteration 600 of 1000: loss=0.193 " + "l1=0.168" + "l2=0.0254 f=-0.74 shape=(1, 9000, 1)
logits [[ 5.4032593 -3.0560553  3.7245781 -9.033653 ]]
Iteration 700 of 1000: loss=0.187 " + "l1=0.159" + "l2=0.0279 f=-0.742 shape=(1, 9000, 1)
logits [[ 5.3216085 -3.0526772  3.7294033 -8.9673605]]
Iteration 800 of 1000: loss=0.181 " + "l1=0.151" + "l2=0.0299 f=-0.745 shape=(1, 9000, 1)
logits [[ 5.243584  -3.0494328  3.7342727 -8.908067 ]]
Iteration 900 of 1000: loss=0.175 " + "l1=0.142" + "l2=0.0321 f=-0.748 shape=(1, 9000, 1)
logits [[ 5.166624  -3.0460591  3.7418497 -8.852967 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.41 " + "l1=2.41" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 6.103176  -3.0487263  3.6954823 -9.629276 ]]
Iteration 100 of 1000: loss=0.728 " + "l1=0.00437" + "l2=0.724 f=-0.734 shape=(1, 9000, 1)
logits [[ 3.8688533 -3.0242436  3.8644814 -7.646601 ]]
Iteration 200 of 1000: loss=0.464 " + "l1=0.00629" + "l2=0.458 f=-0.73 shape=(1, 9000, 1)
logits [[ 3.8536563 -2.998128   3.8473687 -7.6238995]]
Iteration 300 of 1000: loss=0.353 " + "l1=0" + "l2=0.353 f=-0.736 shape=(1, 9000, 1)
logits [[ 3.8297014 -2.997767   3.8340497 -7.608632 ]]
Iteration 400 of 1000: loss=0.291 " + "l1=0.0105" + "l2=0.28 f=-0.738 shape=(1, 9000, 1)
logits [[ 3.8473845 -3.0134132  3.8368487 -7.622307 ]]
Iteration 500 of 1000: loss=0.246 " + "l1=0.00785" + "l2=0.238 f=-0.736 shape=(1, 9000, 1)
logits [[ 3.855619  -3.0220003  3.8477657 -7.6251774]]
Iteration 600 of 1000: loss=0.211 " + "l1=0" + "l2=0.211 f=-0.733 shape=(1, 9000, 1)
logits [[ 3.856409  -3.0324388  3.8572788 -7.613157 ]]
Iteration 700 of 1000: loss=0.192 " + "l1=0" + "l2=0.192 f=-0.731 shape=(1, 9000, 1)
logits [[ 3.8437624 -3.0459936  3.8670712 -7.5900126]]
Iteration 800 of 1000: loss=0.172 " + "l1=0.00592" + "l2=0.166 f=-0.73 shape=(1, 9000, 1)
logits [[ 3.8716922 -3.053601   3.865769  -7.60481  ]]
Iteration 900 of 1000: loss=0.158 " + "l1=0" + "l2=0.158 f=-0.731 shape=(1, 9000, 1)
logits [[ 3.8378298 -3.0579848  3.8611524 -7.564513 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.32 " + "l1=1.32" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 6.103176  -3.0487263  3.6954823 -9.629276 ]]
Iteration 100 of 1000: loss=0.768 " + "l1=0.478" + "l2=0.29 f=-0.74 shape=(1, 9000, 1)
logits [[ 4.6486683 -3.0675187  3.7789383 -8.321935 ]]
Iteration 200 of 1000: loss=0.509 " + "l1=0.125" + "l2=0.384 f=-0.731 shape=(1, 9000, 1)
logits [[ 4.07841   -3.0410533  3.85071   -7.8120766]]
Iteration 300 of 1000: loss=0.325 " + "l1=0" + "l2=0.325 f=-0.734 shape=(1, 9000, 1)
logits [[ 3.8457062 -3.0316951  3.8510315 -7.599216 ]]
Iteration 400 of 1000: loss=0.247 " + "l1=0" + "l2=0.247 f=-0.73 shape=(1, 9000, 1)
logits [[ 3.8556075 -3.0406282  3.8565924 -7.5931005]]
Iteration 500 of 1000: loss=0.203 " + "l1=0.000118" + "l2=0.203 f=-0.729 shape=(1, 9000, 1)
logits [[ 3.8764548 -3.0652788  3.87624   -7.604883 ]]
Iteration 600 of 1000: loss=0.177 " + "l1=0.00322" + "l2=0.174 f=-0.729 shape=(1, 9000, 1)
logits [[ 3.8849354 -3.0821404  3.879083  -7.5963836]]
Iteration 700 of 1000: loss=0.158 " + "l1=0.00156" + "l2=0.156 f=-0.728 shape=(1, 9000, 1)
logits [[ 3.8788233 -3.0950322  3.8759801 -7.572676 ]]
Iteration 800 of 1000: loss=0.144 " + "l1=0.00167" + "l2=0.142 f=-0.729 shape=(1, 9000, 1)
logits [[ 3.8678303 -3.0988126  3.864786  -7.5514107]]
Iteration 900 of 1000: loss=0.134 " + "l1=0.00221" + "l2=0.132 f=-0.728 shape=(1, 9000, 1)
logits [[ 3.8588178 -3.0978513  3.854797  -7.5286984]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.783 " + "l1=0.783" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 6.103176  -3.0487263  3.6954823 -9.629276 ]]
Iteration 100 of 1000: loss=0.588 " + "l1=0.47" + "l2=0.119 f=-0.73 shape=(1, 9000, 1)
logits [[ 5.1933236 -3.0691736  3.7476647 -8.792376 ]]
Iteration 200 of 1000: loss=0.494 " + "l1=0.345" + "l2=0.149 f=-0.727 shape=(1, 9000, 1)
logits [[ 4.847825  -3.0747333  3.7849228 -8.466407 ]]
Iteration 300 of 1000: loss=0.413 " + "l1=0.228" + "l2=0.185 f=-0.73 shape=(1, 9000, 1)
logits [[ 4.5201607 -3.0650866  3.8199358 -8.196125 ]]
Iteration 400 of 1000: loss=0.327 " + "l1=0.118" + "l2=0.209 f=-0.734 shape=(1, 9000, 1)
logits [[ 4.209464  -3.0573633  3.845032  -7.9311714]]
Iteration 500 of 1000: loss=0.245 " + "l1=0.0188" + "l2=0.227 f=-0.728 shape=(1, 9000, 1)
logits [[ 3.940975  -3.079969   3.8831666 -7.657023 ]]
Iteration 600 of 1000: loss=0.187 " + "l1=0.00274" + "l2=0.184 f=-0.724 shape=(1, 9000, 1)
logits [[ 3.9017544 -3.1013393  3.893331  -7.589731 ]]
Iteration 700 of 1000: loss=0.158 " + "l1=0.00117" + "l2=0.157 f=-0.721 shape=(1, 9000, 1)
logits [[ 3.8919983 -3.105619   3.8883944 -7.559856 ]]
Iteration 800 of 1000: loss=0.142 " + "l1=0" + "l2=0.142 f=-0.721 shape=(1, 9000, 1)
logits [[ 3.8714347 -3.1058307  3.874188  -7.5228662]]
Iteration 900 of 1000: loss=0.13 " + "l1=0" + "l2=0.13 f=-0.722 shape=(1, 9000, 1)
logits [[ 3.853515 -3.100446  3.855432 -7.497421]]
--- 249.76000499725342 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.157 " + "l1=0.157" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 6.103176  -3.0487263  3.6954823 -9.629276 ]]
Iteration 100 of 1000: loss=0.156 " + "l1=0.156" + "l2=0.000571 f=-0.718 shape=(1, 9000, 1)
logits [[ 6.041905  -3.041848   3.6806512 -9.550815 ]]
Iteration 200 of 1000: loss=0.156 " + "l1=0.156" + "l2=0.000596 f=-0.717 shape=(1, 9000, 1)
logits [[ 6.030935  -3.03983    3.6776896 -9.537844 ]]
Iteration 300 of 1000: loss=0.156 " + "l1=0.155" + "l2=0.000705 f=-0.717 shape=(1, 9000, 1)
logits [[ 6.017782  -3.0374825  3.6739957 -9.521191 ]]
Iteration 400 of 1000: loss=0.156 " + "l1=0.155" + "l2=0.000851 f=-0.716 shape=(1, 9000, 1)
logits [[ 6.0050845 -3.0349038  3.6702225 -9.504966 ]]
Iteration 500 of 1000: loss=0.156 " + "l1=0.155" + "l2=0.000985 f=-0.716 shape=(1, 9000, 1)
logits [[ 5.9930024 -3.0324857  3.6667004 -9.489521 ]]
Iteration 600 of 1000: loss=0.156 " + "l1=0.155" + "l2=0.00112 f=-0.715 shape=(1, 9000, 1)
logits [[ 5.9811745 -3.0300994  3.6632183 -9.474634 ]]
Iteration 700 of 1000: loss=0.156 " + "l1=0.154" + "l2=0.00135 f=-0.715 shape=(1, 9000, 1)
logits [[ 5.9690313 -3.027916   3.659774  -9.459726 ]]
Iteration 800 of 1000: loss=0.156 " + "l1=0.154" + "l2=0.00151 f=-0.714 shape=(1, 9000, 1)
logits [[ 5.9568954 -3.0257328  3.656382  -9.444937 ]]
Iteration 900 of 1000: loss=0.155 " + "l1=0.154" + "l2=0.00163 f=-0.714 shape=(1, 9000, 1)
logits [[ 5.9453616 -3.0235965  3.6532044 -9.430784 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.57 " + "l1=1.57" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 6.103176  -3.0487263  3.6954823 -9.629276 ]]
Iteration 100 of 1000: loss=1.49 " + "l1=1.43" + "l2=0.0536 f=-0.701 shape=(1, 9000, 1)
logits [[ 5.4710336 -2.9698994  3.5397923 -8.846331 ]]
Iteration 200 of 1000: loss=1.43 " + "l1=1.35" + "l2=0.0797 f=-0.68 shape=(1, 9000, 1)
logits [[ 5.132122  -2.8984346  3.461661  -8.414865 ]]
Iteration 300 of 1000: loss=1.4 " + "l1=1.3" + "l2=0.101 f=-0.656 shape=(1, 9000, 1)
logits [[ 4.8806543 -2.8282394  3.394825  -8.069979 ]]
Iteration 400 of 1000: loss=1.36 " + "l1=1.24" + "l2=0.122 f=-0.635 shape=(1, 9000, 1)
logits [[ 4.65853  -2.758633  3.321277 -7.759348]]
Iteration 500 of 1000: loss=1.33 " + "l1=1.2" + "l2=0.131 f=-0.615 shape=(1, 9000, 1)
logits [[ 4.4964566 -2.6923985  3.2554069 -7.518891 ]]
Iteration 600 of 1000: loss=1.3 " + "l1=1.16" + "l2=0.14 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.343785  -2.6359622  3.1923344 -7.2800846]]
Iteration 700 of 1000: loss=1.27 " + "l1=1.12" + "l2=0.151 f=-0.578 shape=(1, 9000, 1)
logits [[ 4.1799936 -2.5936425  3.137276  -7.036421 ]]
Iteration 800 of 1000: loss=1.24 " + "l1=1.08" + "l2=0.161 f=-0.561 shape=(1, 9000, 1)
logits [[ 4.003337  -2.5636575  3.0918744 -6.775937 ]]
Iteration 900 of 1000: loss=1.21 " + "l1=1.04" + "l2=0.169 f=-0.545 shape=(1, 9000, 1)
logits [[ 3.839979  -2.5301273  3.0550103 -6.5432677]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=15.7 " + "l1=15.7" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 6.103176  -3.0487263  3.6954823 -9.629276 ]]
Iteration 100 of 1000: loss=9.13 " + "l1=6.48" + "l2=2.65 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.2836235 -2.1406553  2.2783988 -4.1925864]]
Iteration 200 of 1000: loss=7.47 " + "l1=4.68" + "l2=2.79 f=-0.311 shape=(1, 9000, 1)
logits [[ 1.7763247 -1.90046    1.7812277 -2.899464 ]]
Iteration 300 of 1000: loss=6.61 " + "l1=3.72" + "l2=2.89 f=-0.237 shape=(1, 9000, 1)
logits [[ 1.4913771 -1.775138   1.5293075 -2.1927629]]
Iteration 400 of 1000: loss=5.86 " + "l1=2.73" + "l2=3.14 f=-0.174 shape=(1, 9000, 1)
logits [[ 1.1785123 -1.7480032  1.2999866 -1.4256542]]
Iteration 500 of 1000: loss=5.05 " + "l1=1.93" + "l2=3.12 f=-0.14 shape=(1, 9000, 1)
logits [[ 0.90883684 -1.6976337   1.0815449  -0.8520015 ]]
Iteration 600 of 1000: loss=4.3 " + "l1=1.15" + "l2=3.14 f=-0.105 shape=(1, 9000, 1)
logits [[ 0.60518086 -1.5965003   0.8635645  -0.29061204]]
Iteration 700 of 1000: loss=3.67 " + "l1=0.603" + "l2=3.07 f=-0.0773 shape=(1, 9000, 1)
logits [[ 0.4132457  -1.5621456   0.7215269   0.11814456]]
Iteration 800 of 1000: loss=2.88 " + "l1=0.0251" + "l2=2.85 f=-0.0771 shape=(1, 9000, 1)
logits [[ 0.19229884 -1.5887609   0.5565299   0.5314696 ]]
Iteration 900 of 1000: loss=2.47 " + "l1=0" + "l2=2.47 f=-0.0877 shape=(1, 9000, 1)
logits [[ 0.16616172 -1.626574    0.55131376  0.5584932 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=8.65 " + "l1=8.65" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 6.103176  -3.0487263  3.6954823 -9.629276 ]]
Iteration 100 of 1000: loss=6.04 " + "l1=4.65" + "l2=1.39 f=-0.559 shape=(1, 9000, 1)
logits [[ 2.9168673 -2.4553223  2.8474677 -5.5432134]]
Iteration 200 of 1000: loss=5.16 " + "l1=3.81" + "l2=1.35 f=-0.464 shape=(1, 9000, 1)
logits [[ 2.4233313 -2.2063208  2.4236271 -4.4965525]]
Iteration 300 of 1000: loss=4.59 " + "l1=3.19" + "l2=1.4 f=-0.376 shape=(1, 9000, 1)
logits [[ 2.1120567 -2.0393875  2.1144745 -3.6892955]]
Iteration 400 of 1000: loss=4.25 " + "l1=2.86" + "l2=1.39 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.9743279 -1.972413   1.9734553 -3.2245564]]
Iteration 500 of 1000: loss=3.95 " + "l1=2.5" + "l2=1.45 f=-0.246 shape=(1, 9000, 1)
logits [[ 1.8108512 -1.8990397  1.8256277 -2.71951  ]]
Iteration 600 of 1000: loss=3.68 " + "l1=2.22" + "l2=1.46 f=-0.188 shape=(1, 9000, 1)
logits [[ 1.7079508 -1.8528258  1.7183272 -2.325558 ]]
Iteration 700 of 1000: loss=3.43 " + "l1=1.98" + "l2=1.45 f=-0.144 shape=(1, 9000, 1)
logits [[ 1.6115987 -1.8134874  1.6155486 -1.9880472]]
Iteration 800 of 1000: loss=3.2 " + "l1=1.77" + "l2=1.43 f=-0.118 shape=(1, 9000, 1)
logits [[ 1.4857374 -1.8097281  1.5357095 -1.6844698]]
Iteration 900 of 1000: loss=2.99 " + "l1=1.58" + "l2=1.4 f=-0.103 shape=(1, 9000, 1)
logits [[ 1.3277693 -1.8075953  1.4729087 -1.40557  ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=12.2 " + "l1=12.2" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 6.103176  -3.0487263  3.6954823 -9.629276 ]]
Iteration 100 of 1000: loss=7.67 " + "l1=5.65" + "l2=2.03 f=-0.497 shape=(1, 9000, 1)
logits [[ 2.520121  -2.291465   2.5354452 -4.751975 ]]
Iteration 200 of 1000: loss=6.45 " + "l1=4.41" + "l2=2.04 f=-0.374 shape=(1, 9000, 1)
logits [[ 2.0735457 -2.036027   2.0764472 -3.6084797]]
Iteration 300 of 1000: loss=5.74 " + "l1=3.67" + "l2=2.06 f=-0.292 shape=(1, 9000, 1)
logits [[ 1.8216448 -1.9137099  1.8314313 -2.9093313]]
Iteration 400 of 1000: loss=5.19 " + "l1=3.14" + "l2=2.05 f=-0.24 shape=(1, 9000, 1)
logits [[ 1.6267502 -1.8081394  1.637901  -2.4181774]]
Iteration 500 of 1000: loss=4.71 " + "l1=2.61" + "l2=2.1 f=-0.184 shape=(1, 9000, 1)
logits [[ 1.4535685 -1.7473791  1.4607719 -1.9020351]]
Iteration 600 of 1000: loss=4.24 " + "l1=2.05" + "l2=2.19 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.2898071 -1.7442768  1.3011949 -1.3458604]]
Iteration 700 of 1000: loss=3.87 " + "l1=1.61" + "l2=2.26 f=-0.0868 shape=(1, 9000, 1)
logits [[ 1.1095016 -1.7542511  1.1863434 -0.8889534]]
Iteration 800 of 1000: loss=3.51 " + "l1=1.2" + "l2=2.31 f=-0.0524 shape=(1, 9000, 1)
logits [[ 0.93892825 -1.7477007   1.0759848  -0.47693223]]
Iteration 900 of 1000: loss=3.18 " + "l1=0.882" + "l2=2.3 f=-0.0289 shape=(1, 9000, 1)
logits [[ 0.7441162  -1.6968274   0.98735905 -0.15009418]]
--- 290.13027930259705 seconds ---
Adv result:3
Loading record A03836
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0896 " + "l1=0.0896" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.7261686 -4.2350674  4.2423444 -7.410003 ]]
Iteration 100 of 1000: loss=0.0892 " + "l1=0.0889" + "l2=0.000285 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.6877785 -4.202481   4.216881  -7.37815  ]]
Iteration 200 of 1000: loss=0.0891 " + "l1=0.0888" + "l2=0.000271 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.6815867 -4.1973186  4.212317  -7.3712015]]
Iteration 300 of 1000: loss=0.089 " + "l1=0.0886" + "l2=0.000347 f=-0.668 shape=(1, 9000, 1)
logits [[ 4.673054  -4.189636   4.206134  -7.3626595]]
Iteration 400 of 1000: loss=0.0889 " + "l1=0.0885" + "l2=0.000407 f=-0.668 shape=(1, 9000, 1)
logits [[ 4.664027  -4.1815324  4.1996393 -7.353637 ]]
Iteration 500 of 1000: loss=0.0888 " + "l1=0.0883" + "l2=0.000504 f=-0.667 shape=(1, 9000, 1)
logits [[ 4.6549125 -4.173335   4.1930237 -7.344333 ]]
Iteration 600 of 1000: loss=0.0888 " + "l1=0.0881" + "l2=0.000671 f=-0.667 shape=(1, 9000, 1)
logits [[ 4.645491  -4.1651874  4.1863236 -7.3343797]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.896 " + "l1=0.896" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.7261686 -4.2350674  4.2423444 -7.410003 ]]
Iteration 100 of 1000: loss=0.859 " + "l1=0.841" + "l2=0.0183 f=-0.666 shape=(1, 9000, 1)
logits [[ 4.4244084 -3.9808006  4.0409093 -7.149171 ]]
Iteration 200 of 1000: loss=0.839 " + "l1=0.812" + "l2=0.0267 f=-0.659 shape=(1, 9000, 1)
logits [[ 4.2729974 -3.8475158  3.930006  -6.9922576]]
Iteration 300 of 1000: loss=0.819 " + "l1=0.784" + "l2=0.0348 f=-0.65 shape=(1, 9000, 1)
logits [[ 4.12634   -3.7180908  3.8192177 -6.828535 ]]
Iteration 400 of 1000: loss=0.801 " + "l1=0.757" + "l2=0.0435 f=-0.642 shape=(1, 9000, 1)
logits [[ 3.9851751 -3.5883484  3.6981428 -6.6630516]]
Iteration 500 of 1000: loss=0.783 " + "l1=0.735" + "l2=0.0486 f=-0.631 shape=(1, 9000, 1)
logits [[ 3.8684301 -3.4795578  3.5974903 -6.5108685]]
Iteration 600 of 1000: loss=0.766 " + "l1=0.71" + "l2=0.0555 f=-0.617 shape=(1, 9000, 1)
logits [[ 3.745784  -3.3552456  3.4890351 -6.3471556]]
Iteration 700 of 1000: loss=0.746 " + "l1=0.682" + "l2=0.0646 f=-0.6 shape=(1, 9000, 1)
logits [[ 3.6025245 -3.2146664  3.363133  -6.1508656]]
Iteration 800 of 1000: loss=0.727 " + "l1=0.655" + "l2=0.0725 f=-0.582 shape=(1, 9000, 1)
logits [[ 3.464152  -3.082136   3.241225  -5.9503503]]
Iteration 900 of 1000: loss=0.707 " + "l1=0.626" + "l2=0.0808 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.3222106 -2.9408412  3.1118178 -5.745524 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.96 " + "l1=8.96" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.7261686 -4.2350674  4.2423444 -7.410003 ]]
Iteration 100 of 1000: loss=4.8 " + "l1=2.97" + "l2=1.82 f=-0.552 shape=(1, 9000, 1)
logits [[ 1.7289172 -1.2452911  1.7262372 -4.4194145]]
Iteration 200 of 1000: loss=3.25 " + "l1=1.23" + "l2=2.03 f=-0.539 shape=(1, 9000, 1)
logits [[ 0.8401267  -0.36454663  0.8630673  -3.4937189 ]]
Iteration 300 of 1000: loss=2.4 " + "l1=0.311" + "l2=2.09 f=-0.529 shape=(1, 9000, 1)
logits [[ 0.09153546  0.07285668  0.3842227  -2.6658914 ]]
Iteration 400 of 1000: loss=1.97 " + "l1=0.00973" + "l2=1.96 f=-0.524 shape=(1, 9000, 1)
logits [[-0.17655441  0.23332103  0.24304907 -2.3946311 ]]
Iteration 500 of 1000: loss=1.72 " + "l1=0" + "l2=1.72 f=-0.51 shape=(1, 9000, 1)
logits [[-0.1213624   0.2250514   0.21829684 -2.360014  ]]
Iteration 600 of 1000: loss=1.55 " + "l1=0.00218" + "l2=1.55 f=-0.491 shape=(1, 9000, 1)
logits [[-0.05328812  0.20539363  0.20757517 -2.3227909 ]]
Iteration 700 of 1000: loss=1.45 " + "l1=0" + "l2=1.45 f=-0.479 shape=(1, 9000, 1)
logits [[-0.02314468  0.20245405  0.18914746 -2.2830215 ]]
Iteration 800 of 1000: loss=1.38 " + "l1=0.00731" + "l2=1.37 f=-0.467 shape=(1, 9000, 1)
logits [[ 0.01537083  0.17711313  0.1844241  -2.2450042 ]]
Iteration 900 of 1000: loss=1.32 " + "l1=0" + "l2=1.32 f=-0.454 shape=(1, 9000, 1)
logits [[ 0.03412202  0.1738786   0.16530848 -2.1897702 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.93 " + "l1=4.93" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.7261686 -4.2350674  4.2423444 -7.410003 ]]
Iteration 100 of 1000: loss=3.48 " + "l1=2.66" + "l2=0.821 f=-0.583 shape=(1, 9000, 1)
logits [[ 2.5311277 -2.3075418  2.525815  -5.0833354]]
Iteration 200 of 1000: loss=2.9 " + "l1=1.89" + "l2=1.01 f=-0.532 shape=(1, 9000, 1)
logits [[ 1.874873  -1.5580763  1.8644414 -4.308361 ]]
Iteration 300 of 1000: loss=2.36 " + "l1=1.18" + "l2=1.18 f=-0.481 shape=(1, 9000, 1)
logits [[ 1.2959032  -0.84224683  1.311199   -3.6893773 ]]
Iteration 400 of 1000: loss=2 " + "l1=0.765" + "l2=1.24 f=-0.483 shape=(1, 9000, 1)
logits [[ 0.9130993  -0.47654754  0.9142229  -3.2840428 ]]
Iteration 500 of 1000: loss=1.78 " + "l1=0.573" + "l2=1.2 f=-0.487 shape=(1, 9000, 1)
logits [[ 0.70310026 -0.32728213  0.714013   -3.0364711 ]]
Iteration 600 of 1000: loss=1.61 " + "l1=0.413" + "l2=1.2 f=-0.489 shape=(1, 9000, 1)
logits [[ 0.52213347 -0.21370986  0.5378766  -2.802158  ]]
Iteration 700 of 1000: loss=1.48 " + "l1=0.295" + "l2=1.18 f=-0.481 shape=(1, 9000, 1)
logits [[ 0.36744502 -0.12308838  0.41317865 -2.5831454 ]]
Iteration 800 of 1000: loss=1.38 " + "l1=0.213" + "l2=1.17 f=-0.473 shape=(1, 9000, 1)
logits [[ 0.2795677  -0.0599529   0.32712886 -2.440302  ]]
Iteration 900 of 1000: loss=1.32 " + "l1=0.171" + "l2=1.15 f=-0.465 shape=(1, 9000, 1)
logits [[ 0.21566007 -0.02989491  0.28020307 -2.3245308 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=6.94 " + "l1=6.94" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.7261686 -4.2350674  4.2423444 -7.410003 ]]
Iteration 100 of 1000: loss=4.32 " + "l1=3.07" + "l2=1.25 f=-0.563 shape=(1, 9000, 1)
logits [[ 2.1186206 -1.8436602  2.1190524 -4.6479926]]
Iteration 200 of 1000: loss=3.09 " + "l1=1.47" + "l2=1.62 f=-0.527 shape=(1, 9000, 1)
logits [[ 1.1894498  -0.69714004  1.1946064  -3.7948449 ]]
Iteration 300 of 1000: loss=2.43 " + "l1=0.761" + "l2=1.67 f=-0.516 shape=(1, 9000, 1)
logits [[ 0.6870865  -0.25987223  0.72188914 -3.214878  ]]
Iteration 400 of 1000: loss=2.02 " + "l1=0.365" + "l2=1.66 f=-0.505 shape=(1, 9000, 1)
logits [[ 0.30723244 -0.02281177  0.44855708 -2.7537334 ]]
Iteration 500 of 1000: loss=1.74 " + "l1=0.121" + "l2=1.62 f=-0.506 shape=(1, 9000, 1)
logits [[ 0.04237073  0.13065368  0.2871868  -2.4846063 ]]
Iteration 600 of 1000: loss=1.55 " + "l1=0" + "l2=1.55 f=-0.498 shape=(1, 9000, 1)
logits [[-0.07162024  0.20374082  0.19651544 -2.320799  ]]
Iteration 700 of 1000: loss=1.42 " + "l1=0" + "l2=1.42 f=-0.484 shape=(1, 9000, 1)
logits [[-0.02644723  0.18434288  0.17550117 -2.2711427 ]]
Iteration 800 of 1000: loss=1.33 " + "l1=0.00592" + "l2=1.32 f=-0.461 shape=(1, 9000, 1)
logits [[ 0.0377484   0.15691878  0.16456126 -2.2020288 ]]
Iteration 900 of 1000: loss=1.26 " + "l1=0.0168" + "l2=1.24 f=-0.451 shape=(1, 9000, 1)
logits [[ 0.04807299  0.12792109  0.14954287 -2.1310673 ]]
--- 268.9260833263397 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00484 " + "l1=0.00484" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.7261686 -4.2350674  4.2423444 -7.410003 ]]
Iteration 100 of 1000: loss=0.00463 " + "l1=0.00445" + "l2=0.000188 f=-0.67 shape=(1, 9000, 1)
logits [[ 4.6993046 -4.2460065  4.254702  -7.388228 ]]
Iteration 200 of 1000: loss=0.00457 " + "l1=0.00442" + "l2=0.000154 f=-0.67 shape=(1, 9000, 1)
logits [[ 4.698069  -4.2467613  4.2560444 -7.3868375]]
Iteration 300 of 1000: loss=0.00456 " + "l1=0.00436" + "l2=0.000204 f=-0.67 shape=(1, 9000, 1)
logits [[ 4.694554  -4.2485504  4.2586527 -7.3837867]]
Iteration 400 of 1000: loss=0.00454 " + "l1=0.00429" + "l2=0.000245 f=-0.67 shape=(1, 9000, 1)
logits [[ 4.690747  -4.250395   4.2613354 -7.3805795]]
Iteration 500 of 1000: loss=0.00457 " + "l1=0.00423" + "l2=0.000336 f=-0.67 shape=(1, 9000, 1)
logits [[ 4.687073  -4.25202    4.263758  -7.3774624]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0484 " + "l1=0.0484" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.7261686 -4.2350674  4.2423444 -7.410003 ]]
Iteration 100 of 1000: loss=0.0317 " + "l1=0.0238" + "l2=0.00784 f=-0.675 shape=(1, 9000, 1)
logits [[ 4.5602307 -4.3038692  4.322071  -7.2772646]]
Iteration 200 of 1000: loss=0.0246 " + "l1=0.0131" + "l2=0.0114 f=-0.674 shape=(1, 9000, 1)
logits [[ 4.490311  -4.329176   4.3588333 -7.2141414]]
Iteration 300 of 1000: loss=0.0193 " + "l1=0.00502" + "l2=0.0142 f=-0.672 shape=(1, 9000, 1)
logits [[ 4.436248  -4.3434196  4.386044  -7.1651893]]
Iteration 400 of 1000: loss=0.0157 " + "l1=0.000353" + "l2=0.0153 f=-0.67 shape=(1, 9000, 1)
logits [[ 4.4079    -4.349256   4.4043717 -7.141724 ]]
Iteration 500 of 1000: loss=0.0136 " + "l1=3.12e-05" + "l2=0.0136 f=-0.668 shape=(1, 9000, 1)
logits [[ 4.406392  -4.3451676  4.4060802 -7.1395235]]
Iteration 600 of 1000: loss=0.0125 " + "l1=0" + "l2=0.0125 f=-0.667 shape=(1, 9000, 1)
logits [[ 4.4035935 -4.3405156  4.4047036 -7.135362 ]]
Iteration 700 of 1000: loss=0.0116 " + "l1=0" + "l2=0.0116 f=-0.666 shape=(1, 9000, 1)
logits [[ 4.399782  -4.3340282  4.4003773 -7.1307497]]
Iteration 800 of 1000: loss=0.0108 " + "l1=6.71e-05" + "l2=0.0108 f=-0.665 shape=(1, 9000, 1)
logits [[ 4.3964005 -4.327946   4.3957295 -7.125958 ]]
Iteration 900 of 1000: loss=0.0105 " + "l1=0" + "l2=0.0105 f=-0.665 shape=(1, 9000, 1)
logits [[ 4.3904424 -4.3222146  4.3911724 -7.119342 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0266 " + "l1=0.0266" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.7261686 -4.2350674  4.2423444 -7.410003 ]]
Iteration 100 of 1000: loss=0.0213 " + "l1=0.0187" + "l2=0.00259 f=-0.672 shape=(1, 9000, 1)
logits [[ 4.630329  -4.2762475  4.290277  -7.3337507]]
Iteration 200 of 1000: loss=0.0194 " + "l1=0.0158" + "l2=0.00351 f=-0.672 shape=(1, 9000, 1)
logits [[ 4.5975637 -4.2908983  4.3095565 -7.3049526]]
Iteration 300 of 1000: loss=0.0177 " + "l1=0.0132" + "l2=0.00448 f=-0.672 shape=(1, 9000, 1)
logits [[ 4.5667396 -4.3024826  4.3271866 -7.277488 ]]
Iteration 400 of 1000: loss=0.0162 " + "l1=0.0107" + "l2=0.00549 f=-0.67 shape=(1, 9000, 1)
logits [[ 4.5372653 -4.3104873  4.341919  -7.250531 ]]
Iteration 500 of 1000: loss=0.0151 " + "l1=0.00871" + "l2=0.00635 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.511599 -4.31531   4.353315 -7.226967]]
Iteration 600 of 1000: loss=0.0141 " + "l1=0.00706" + "l2=0.007 f=-0.668 shape=(1, 9000, 1)
logits [[ 4.4902897 -4.317598   4.361935  -7.207944 ]]
Iteration 700 of 1000: loss=0.0133 " + "l1=0.0058" + "l2=0.00747 f=-0.668 shape=(1, 9000, 1)
logits [[ 4.4737105 -4.317739   4.368342  -7.1947083]]
Iteration 800 of 1000: loss=0.0126 " + "l1=0.00467" + "l2=0.00789 f=-0.667 shape=(1, 9000, 1)
logits [[ 4.458635  -4.3182154  4.3736796 -7.182624 ]]
Iteration 900 of 1000: loss=0.012 " + "l1=0.00364" + "l2=0.00832 f=-0.667 shape=(1, 9000, 1)
logits [[ 4.44375   -4.319039   4.3775716 -7.1690392]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0375 " + "l1=0.0375" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.7261686 -4.2350674  4.2423444 -7.410003 ]]
Iteration 100 of 1000: loss=0.0273 " + "l1=0.0224" + "l2=0.00488 f=-0.674 shape=(1, 9000, 1)
logits [[ 4.5952272 -4.2898464  4.30627   -7.305742 ]]
Iteration 200 of 1000: loss=0.0232 " + "l1=0.0163" + "l2=0.00689 f=-0.673 shape=(1, 9000, 1)
logits [[ 4.5442348 -4.310209   4.334148  -7.2599874]]
Iteration 300 of 1000: loss=0.0197 " + "l1=0.0109" + "l2=0.00882 f=-0.671 shape=(1, 9000, 1)
logits [[ 4.498292 -4.324547  4.357929 -7.21739 ]]
Iteration 400 of 1000: loss=0.0171 " + "l1=0.0067" + "l2=0.0104 f=-0.67 shape=(1, 9000, 1)
logits [[ 4.462089  -4.3319826  4.3756385 -7.1852326]]
Iteration 500 of 1000: loss=0.0151 " + "l1=0.00363" + "l2=0.0115 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.43669   -4.3364124  4.389906  -7.1658244]]
Iteration 600 of 1000: loss=0.0134 " + "l1=0.000803" + "l2=0.0126 f=-0.668 shape=(1, 9000, 1)
logits [[ 4.4112563 -4.3406725  4.4008937 -7.14306  ]]
Iteration 700 of 1000: loss=0.0121 " + "l1=0.000145" + "l2=0.012 f=-0.666 shape=(1, 9000, 1)
logits [[ 4.403503  -4.3369865  4.4016285 -7.133645 ]]
Iteration 800 of 1000: loss=0.0113 " + "l1=0.00031" + "l2=0.011 f=-0.666 shape=(1, 9000, 1)
logits [[ 4.4008045 -4.3299813  4.3968024 -7.129643 ]]
Iteration 900 of 1000: loss=0.0106 " + "l1=1.16e-05" + "l2=0.0106 f=-0.665 shape=(1, 9000, 1)
logits [[ 4.3934865 -4.3253417  4.3933363 -7.1217   ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0321 " + "l1=0.0321" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.7261686 -4.2350674  4.2423444 -7.410003 ]]
Iteration 100 of 1000: loss=0.0245 " + "l1=0.0208" + "l2=0.00364 f=-0.673 shape=(1, 9000, 1)
logits [[ 4.6128073 -4.282752   4.298176  -7.320101 ]]
Iteration 200 of 1000: loss=0.0216 " + "l1=0.0166" + "l2=0.00504 f=-0.673 shape=(1, 9000, 1)
logits [[ 4.5715647 -4.300617   4.3215475 -7.2830815]]
Iteration 300 of 1000: loss=0.0191 " + "l1=0.0125" + "l2=0.00654 f=-0.671 shape=(1, 9000, 1)
logits [[ 4.5320735 -4.3138843  4.342751  -7.246802 ]]
Iteration 400 of 1000: loss=0.017 " + "l1=0.00921" + "l2=0.0078 f=-0.67 shape=(1, 9000, 1)
logits [[ 4.4985547 -4.322335   4.35947   -7.2158747]]
Iteration 500 of 1000: loss=0.0155 " + "l1=0.00664" + "l2=0.00883 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.4716415 -4.3260345  4.371488  -7.1923904]]
Iteration 600 of 1000: loss=0.0141 " + "l1=0.00465" + "l2=0.00949 f=-0.668 shape=(1, 9000, 1)
logits [[ 4.4518485 -4.3283267  4.3815923 -7.1778235]]
Iteration 700 of 1000: loss=0.0131 " + "l1=0.00278" + "l2=0.0103 f=-0.668 shape=(1, 9000, 1)
logits [[ 4.431092  -4.3304186  4.3891463 -7.1599393]]
Iteration 800 of 1000: loss=0.012 " + "l1=0.0011" + "l2=0.0109 f=-0.667 shape=(1, 9000, 1)
logits [[ 4.4110146 -4.3312345  4.3944597 -7.140666 ]]
Iteration 900 of 1000: loss=0.0112 " + "l1=0.000263" + "l2=0.0109 f=-0.665 shape=(1, 9000, 1)
logits [[ 4.3984103 -4.3279834  4.394448  -7.126718 ]]
--- 263.83920335769653 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.121 " + "l1=0.121" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.7261686 -4.2350674  4.2423444 -7.410003 ]]
Iteration 100 of 1000: loss=0.121 " + "l1=0.12" + "l2=0.00043 f=-0.668 shape=(1, 9000, 1)
logits [[ 4.671536  -4.225679   4.2270393 -7.345555 ]]
Iteration 200 of 1000: loss=0.12 " + "l1=0.12" + "l2=0.000477 f=-0.668 shape=(1, 9000, 1)
logits [[ 4.658993  -4.2222157  4.2226343 -7.3296585]]
Iteration 300 of 1000: loss=0.12 " + "l1=0.12" + "l2=0.000585 f=-0.667 shape=(1, 9000, 1)
logits [[ 4.6449533 -4.2176704  4.2173915 -7.3112283]]
Iteration 400 of 1000: loss=0.12 " + "l1=0.119" + "l2=0.000753 f=-0.666 shape=(1, 9000, 1)
logits [[ 4.63047  -4.21257   4.211627 -7.291978]]
Iteration 500 of 1000: loss=0.12 " + "l1=0.119" + "l2=0.000866 f=-0.665 shape=(1, 9000, 1)
logits [[ 4.6161976 -4.2072206  4.2056537 -7.2726955]]
Iteration 600 of 1000: loss=0.12 " + "l1=0.119" + "l2=0.001 f=-0.663 shape=(1, 9000, 1)
logits [[ 4.6019316 -4.201481   4.1992817 -7.253166 ]]
Iteration 700 of 1000: loss=0.119 " + "l1=0.118" + "l2=0.00122 f=-0.662 shape=(1, 9000, 1)
logits [[ 4.5874977 -4.195593   4.192528  -7.233187 ]]
Iteration 800 of 1000: loss=0.119 " + "l1=0.118" + "l2=0.00125 f=-0.661 shape=(1, 9000, 1)
logits [[ 4.5737853 -4.1895127  4.1857934 -7.2140546]]
Iteration 900 of 1000: loss=0.119 " + "l1=0.118" + "l2=0.00147 f=-0.66 shape=(1, 9000, 1)
logits [[ 4.560396 -4.183476  4.179122 -7.195307]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.21 " + "l1=1.21" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.7261686 -4.2350674  4.2423444 -7.410003 ]]
Iteration 100 of 1000: loss=1.15 " + "l1=1.11" + "l2=0.031 f=-0.658 shape=(1, 9000, 1)
logits [[ 4.276499  -4.1269655  4.085197  -6.865893 ]]
Iteration 200 of 1000: loss=1.11 " + "l1=1.06" + "l2=0.0481 f=-0.646 shape=(1, 9000, 1)
logits [[ 4.0390444 -4.0359826  3.978718  -6.5673113]]
Iteration 300 of 1000: loss=1.07 " + "l1=1.02" + "l2=0.055 f=-0.632 shape=(1, 9000, 1)
logits [[ 3.8642666 -3.9305851  3.862557  -6.3250456]]
Iteration 400 of 1000: loss=1.04 " + "l1=0.983" + "l2=0.0605 f=-0.619 shape=(1, 9000, 1)
logits [[ 3.7168682 -3.7982323  3.7179914 -6.1116166]]
Iteration 500 of 1000: loss=1.01 " + "l1=0.941" + "l2=0.0707 f=-0.605 shape=(1, 9000, 1)
logits [[ 3.5495481 -3.658123   3.5486135 -5.860875 ]]
Iteration 600 of 1000: loss=0.982 " + "l1=0.901" + "l2=0.0804 f=-0.585 shape=(1, 9000, 1)
logits [[ 3.3982918 -3.52377    3.3966303 -5.612818 ]]
Iteration 700 of 1000: loss=0.951 " + "l1=0.86" + "l2=0.0904 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.2452054 -3.383081   3.2449937 -5.3561916]]
Iteration 800 of 1000: loss=0.919 " + "l1=0.818" + "l2=0.101 f=-0.54 shape=(1, 9000, 1)
logits [[ 3.0875652 -3.2384176  3.0881717 -5.0954423]]
Iteration 900 of 1000: loss=0.886 " + "l1=0.772" + "l2=0.114 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.9086385 -3.072636   2.9101186 -4.8138585]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.1 " + "l1=12.1" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.7261686 -4.2350674  4.2423444 -7.410003 ]]
Iteration 100 of 1000: loss=6.22 " + "l1=3.43" + "l2=2.79 f=-0.473 shape=(1, 9000, 1)
logits [[ 0.8674024 -2.1835825  1.4269179 -2.0036247]]
Iteration 200 of 1000: loss=3.61 " + "l1=0.0336" + "l2=3.57 f=-0.317 shape=(1, 9000, 1)
logits [[-0.5599779  -1.2148988   0.27079752  0.23723549]]
Iteration 300 of 1000: loss=2.81 " + "l1=0" + "l2=2.81 f=-0.303 shape=(1, 9000, 1)
logits [[-0.5732162  -1.0431314   0.19563873  0.20906016]]
Iteration 400 of 1000: loss=2.46 " + "l1=0" + "l2=2.46 f=-0.296 shape=(1, 9000, 1)
logits [[-0.5244995  -0.97038835  0.15343808  0.15607291]]
Iteration 500 of 1000: loss=2.21 " + "l1=0" + "l2=2.21 f=-0.303 shape=(1, 9000, 1)
logits [[-0.51292276 -0.9193973   0.10845858  0.11379637]]
Iteration 600 of 1000: loss=2.03 " + "l1=0.0182" + "l2=2.01 f=-0.316 shape=(1, 9000, 1)
logits [[-0.5158825  -0.91820544  0.09482424  0.0766295 ]]
Iteration 700 of 1000: loss=1.86 " + "l1=0" + "l2=1.86 f=-0.318 shape=(1, 9000, 1)
logits [[-0.5450876  -0.9013525   0.07891564  0.09713706]]
Iteration 800 of 1000: loss=1.73 " + "l1=0.00962" + "l2=1.72 f=-0.313 shape=(1, 9000, 1)
logits [[-0.5221623  -0.9026404   0.09147602  0.08185317]]
Iteration 900 of 1000: loss=1.6 " + "l1=0" + "l2=1.6 f=-0.303 shape=(1, 9000, 1)
logits [[-0.52317995 -0.909382    0.10114434  0.11858649]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.67 " + "l1=6.67" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.7261686 -4.2350674  4.2423444 -7.410003 ]]
Iteration 100 of 1000: loss=4.58 " + "l1=3.53" + "l2=1.05 f=-0.541 shape=(1, 9000, 1)
logits [[ 2.3211706 -2.7595499  2.3417983 -4.0674186]]
Iteration 200 of 1000: loss=3.67 " + "l1=2.23" + "l2=1.44 f=-0.467 shape=(1, 9000, 1)
logits [[ 1.2145085 -2.1251595  1.5534391 -2.509146 ]]
Iteration 300 of 1000: loss=2.87 " + "l1=1.08" + "l2=1.79 f=-0.402 shape=(1, 9000, 1)
logits [[ 0.23591259 -1.582239    0.85041165 -1.1121739 ]]
Iteration 400 of 1000: loss=2.26 " + "l1=0.375" + "l2=1.89 f=-0.341 shape=(1, 9000, 1)
logits [[-0.289775   -1.1468077   0.3779313  -0.30391043]]
Iteration 500 of 1000: loss=1.89 " + "l1=0.018" + "l2=1.87 f=-0.31 shape=(1, 9000, 1)
logits [[-0.59063214 -0.94562405  0.16517103  0.13242108]]
Iteration 600 of 1000: loss=1.64 " + "l1=0.00386" + "l2=1.63 f=-0.298 shape=(1, 9000, 1)
logits [[-0.6027117  -0.918093    0.16720869  0.16019595]]
Iteration 700 of 1000: loss=1.48 " + "l1=0.0015" + "l2=1.48 f=-0.282 shape=(1, 9000, 1)
logits [[-0.5666591  -0.931827    0.18658666  0.18385518]]
Iteration 800 of 1000: loss=1.38 " + "l1=0" + "l2=1.38 f=-0.267 shape=(1, 9000, 1)
logits [[-0.545464   -0.94277453  0.20326537  0.21777606]]
Iteration 900 of 1000: loss=1.28 " + "l1=0.000533" + "l2=1.28 f=-0.245 shape=(1, 9000, 1)
logits [[-0.50552815 -0.9570052   0.24213445  0.24116543]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.94 " + "l1=3.94" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.7261686 -4.2350674  4.2423444 -7.410003 ]]
Iteration 100 of 1000: loss=3.2 " + "l1=2.79" + "l2=0.412 f=-0.617 shape=(1, 9000, 1)
logits [[ 3.192267  -3.4512165  3.1929092 -5.400653 ]]
Iteration 200 of 1000: loss=2.78 " + "l1=2.18" + "l2=0.603 f=-0.528 shape=(1, 9000, 1)
logits [[ 2.4548678 -2.7942004  2.4622087 -4.236375 ]]
Iteration 300 of 1000: loss=2.46 " + "l1=1.8" + "l2=0.664 f=-0.476 shape=(1, 9000, 1)
logits [[ 1.99365   -2.4048557  2.0161793 -3.5074656]]
Iteration 400 of 1000: loss=2.17 " + "l1=1.45" + "l2=0.726 f=-0.428 shape=(1, 9000, 1)
logits [[ 1.5371848 -2.0870867  1.6457406 -2.805905 ]]
Iteration 500 of 1000: loss=1.91 " + "l1=1.09" + "l2=0.817 f=-0.386 shape=(1, 9000, 1)
logits [[ 1.0468355 -1.8045117  1.2844678 -2.0723813]]
Iteration 600 of 1000: loss=1.72 " + "l1=0.862" + "l2=0.857 f=-0.35 shape=(1, 9000, 1)
logits [[ 0.7532259 -1.5937485  1.0455053 -1.6067569]]
Iteration 700 of 1000: loss=1.55 " + "l1=0.652" + "l2=0.896 f=-0.321 shape=(1, 9000, 1)
logits [[ 0.4693466 -1.4361837  0.8441376 -1.161653 ]]
Iteration 800 of 1000: loss=1.39 " + "l1=0.489" + "l2=0.902 f=-0.294 shape=(1, 9000, 1)
logits [[ 0.27742985 -1.3562348   0.7044084  -0.8002036 ]]
Iteration 900 of 1000: loss=1.24 " + "l1=0.347" + "l2=0.89 f=-0.272 shape=(1, 9000, 1)
logits [[ 0.10591532 -1.3225571   0.59831226 -0.4706173 ]]
--- 291.01248502731323 seconds ---
Adv result:3
Loading record A03844
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0248 " + "l1=0.0248" + "l2=0 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.7461182  -0.73709923  1.29843    -3.4304335 ]]
Iteration 100 of 1000: loss=0.0239 " + "l1=0.0232" + "l2=0.000674 f=-0.286 shape=(1, 9000, 1)
logits [[ 1.6479256 -0.6709265  1.2555308 -3.3752697]]
Iteration 200 of 1000: loss=0.0236 " + "l1=0.0229" + "l2=0.000764 f=-0.287 shape=(1, 9000, 1)
logits [[ 1.629457   -0.65784895  1.246573   -3.3642585 ]]
Iteration 300 of 1000: loss=0.0235 " + "l1=0.0226" + "l2=0.000906 f=-0.287 shape=(1, 9000, 1)
logits [[ 1.6111723 -0.64485    1.2380968 -3.3538911]]
Iteration 400 of 1000: loss=0.0233 " + "l1=0.0223" + "l2=0.00105 f=-0.288 shape=(1, 9000, 1)
logits [[ 1.5947897 -0.6310538  1.2302508 -3.3453016]]
Iteration 500 of 1000: loss=0.0232 " + "l1=0.022" + "l2=0.00122 f=-0.288 shape=(1, 9000, 1)
logits [[ 1.5805061 -0.6190172  1.2231574 -3.337453 ]]
Iteration 600 of 1000: loss=0.0231 " + "l1=0.0218" + "l2=0.0013 f=-0.288 shape=(1, 9000, 1)
logits [[ 1.5681077  -0.60856175  1.2169483  -3.3303158 ]]
Iteration 700 of 1000: loss=0.023 " + "l1=0.0216" + "l2=0.00148 f=-0.289 shape=(1, 9000, 1)
logits [[ 1.5572699  -0.59901476  1.2112464  -3.3245518 ]]
Iteration 800 of 1000: loss=0.0229 " + "l1=0.0214" + "l2=0.00155 f=-0.289 shape=(1, 9000, 1)
logits [[ 1.5463516 -0.5903932  1.205776  -3.3186069]]
Iteration 900 of 1000: loss=0.0229 " + "l1=0.0212" + "l2=0.00169 f=-0.29 shape=(1, 9000, 1)
logits [[ 1.5355631 -0.5819032  1.2008216 -3.31296  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.248 " + "l1=0.248" + "l2=0 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.7461182  -0.73709923  1.29843    -3.4304335 ]]
Iteration 100 of 1000: loss=0.123 " + "l1=0.0565" + "l2=0.0662 f=-0.368 shape=(1, 9000, 1)
logits [[ 0.6716578   0.10954068  0.67491996 -2.9264393 ]]
Iteration 200 of 1000: loss=0.1 " + "l1=0.0313" + "l2=0.0689 f=-0.386 shape=(1, 9000, 1)
logits [[ 0.5420943   0.23479365  0.54794985 -2.8676784 ]]
Iteration 300 of 1000: loss=0.0894 " + "l1=0.017" + "l2=0.0725 f=-0.394 shape=(1, 9000, 1)
logits [[ 0.4653884   0.30601805  0.4756916  -2.8246996 ]]
Iteration 400 of 1000: loss=0.0796 " + "l1=0.00463" + "l2=0.075 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.3545262   0.373213    0.41946658 -2.7665236 ]]
Iteration 500 of 1000: loss=0.0702 " + "l1=0.000924" + "l2=0.0693 f=-0.406 shape=(1, 9000, 1)
logits [[ 0.32080153  0.39198637  0.40122452 -2.73712   ]]
Iteration 600 of 1000: loss=0.0625 " + "l1=0.000655" + "l2=0.0618 f=-0.402 shape=(1, 9000, 1)
logits [[ 0.32335007  0.39099035  0.39754468 -2.7212281 ]]
Iteration 700 of 1000: loss=0.0563 " + "l1=0.00217" + "l2=0.0541 f=-0.397 shape=(1, 9000, 1)
logits [[ 0.34133783  0.37948295  0.4012202  -2.7104318 ]]
Iteration 800 of 1000: loss=0.0512 " + "l1=0.00214" + "l2=0.049 f=-0.395 shape=(1, 9000, 1)
logits [[ 0.3423481   0.37407136  0.3954484  -2.691623  ]]
Iteration 900 of 1000: loss=0.0462 " + "l1=0.00073" + "l2=0.0455 f=-0.394 shape=(1, 9000, 1)
logits [[ 0.32645634  0.37523842  0.3825362  -2.6620111 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.137 " + "l1=0.137" + "l2=0 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.7461182  -0.73709923  1.29843    -3.4304335 ]]
Iteration 100 of 1000: loss=0.102 " + "l1=0.0767" + "l2=0.0257 f=-0.324 shape=(1, 9000, 1)
logits [[ 1.1075039  -0.28688735  1.0061626  -3.1210394 ]]
Iteration 200 of 1000: loss=0.0859 " + "l1=0.0489" + "l2=0.037 f=-0.352 shape=(1, 9000, 1)
logits [[ 0.8232938  -0.06574056  0.8227452  -2.98712   ]]
Iteration 300 of 1000: loss=0.0784 " + "l1=0.0399" + "l2=0.0385 f=-0.36 shape=(1, 9000, 1)
logits [[ 0.74932665  0.02329559  0.747616   -2.9593241 ]]
Iteration 400 of 1000: loss=0.0741 " + "l1=0.0356" + "l2=0.0384 f=-0.363 shape=(1, 9000, 1)
logits [[ 0.71250176  0.06452469  0.71079147 -2.939217  ]]
Iteration 500 of 1000: loss=0.0706 " + "l1=0.0331" + "l2=0.0375 f=-0.364 shape=(1, 9000, 1)
logits [[ 0.68939257  0.08814058  0.6884725  -2.921237  ]]
Iteration 600 of 1000: loss=0.0668 " + "l1=0.0291" + "l2=0.0377 f=-0.367 shape=(1, 9000, 1)
logits [[ 0.64854383  0.12314703  0.6525948  -2.892783  ]]
Iteration 700 of 1000: loss=0.0629 " + "l1=0.0252" + "l2=0.0377 f=-0.369 shape=(1, 9000, 1)
logits [[ 0.61752987  0.15975572  0.6175907  -2.8711848 ]]
Iteration 800 of 1000: loss=0.0592 " + "l1=0.0216" + "l2=0.0376 f=-0.371 shape=(1, 9000, 1)
logits [[ 0.5846964   0.19186294  0.58487916 -2.845172  ]]
Iteration 900 of 1000: loss=0.0557 " + "l1=0.018" + "l2=0.0376 f=-0.375 shape=(1, 9000, 1)
logits [[ 0.5402266  0.2224561  0.5501312 -2.813182 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.192 " + "l1=0.192" + "l2=0 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.7461182  -0.73709923  1.29843    -3.4304335 ]]
Iteration 100 of 1000: loss=0.115 " + "l1=0.0622" + "l2=0.053 f=-0.355 shape=(1, 9000, 1)
logits [[ 0.78223443 -0.01850511  0.7839043  -2.9670336 ]]
Iteration 200 of 1000: loss=0.0952 " + "l1=0.0415" + "l2=0.0537 f=-0.371 shape=(1, 9000, 1)
logits [[ 0.65129006  0.12395001  0.65911096 -2.9196565 ]]
Iteration 300 of 1000: loss=0.0869 " + "l1=0.0324" + "l2=0.0546 f=-0.376 shape=(1, 9000, 1)
logits [[ 0.6003513   0.18294941  0.60053587 -2.8868365 ]]
Iteration 400 of 1000: loss=0.0805 " + "l1=0.0254" + "l2=0.0551 f=-0.381 shape=(1, 9000, 1)
logits [[ 0.5459505  0.2262687  0.554649  -2.8505325]]
Iteration 500 of 1000: loss=0.074 " + "l1=0.0198" + "l2=0.0543 f=-0.383 shape=(1, 9000, 1)
logits [[ 0.5128518   0.26212752  0.51724005 -2.8250623 ]]
Iteration 600 of 1000: loss=0.0675 " + "l1=0.0128" + "l2=0.0547 f=-0.388 shape=(1, 9000, 1)
logits [[ 0.46159902  0.30682653  0.4721081  -2.7906988 ]]
Iteration 700 of 1000: loss=0.0608 " + "l1=0.00596" + "l2=0.0548 f=-0.393 shape=(1, 9000, 1)
logits [[ 0.39277688  0.35372204  0.43059283 -2.7501273 ]]
Iteration 800 of 1000: loss=0.0545 " + "l1=0.00122" + "l2=0.0532 f=-0.398 shape=(1, 9000, 1)
logits [[ 0.33595902  0.383307    0.39903536 -2.711465  ]]
Iteration 900 of 1000: loss=0.049 " + "l1=0.000609" + "l2=0.0484 f=-0.397 shape=(1, 9000, 1)
logits [[ 0.32778713  0.38087055  0.38872707 -2.6853912 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.165 " + "l1=0.165" + "l2=0 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.7461182  -0.73709923  1.29843    -3.4304335 ]]
Iteration 100 of 1000: loss=0.11 " + "l1=0.0668" + "l2=0.0427 f=-0.345 shape=(1, 9000, 1)
logits [[ 0.88081086 -0.12804984  0.8774919  -3.012102  ]]
Iteration 200 of 1000: loss=0.0909 " + "l1=0.0451" + "l2=0.0458 f=-0.363 shape=(1, 9000, 1)
logits [[ 0.72383386  0.04389201  0.7250059  -2.9444468 ]]
Iteration 300 of 1000: loss=0.0835 " + "l1=0.0369" + "l2=0.0466 f=-0.37 shape=(1, 9000, 1)
logits [[ 0.6594843   0.11148369  0.66830677 -2.9188168 ]]
Iteration 400 of 1000: loss=0.0783 " + "l1=0.0315" + "l2=0.0468 f=-0.372 shape=(1, 9000, 1)
logits [[ 0.6242703   0.15339783  0.6287523  -2.8958075 ]]
Iteration 500 of 1000: loss=0.0732 " + "l1=0.0263" + "l2=0.0469 f=-0.375 shape=(1, 9000, 1)
logits [[ 0.5868837   0.19381921  0.5908269  -2.8708007 ]]
Iteration 600 of 1000: loss=0.0681 " + "l1=0.0216" + "l2=0.0465 f=-0.379 shape=(1, 9000, 1)
logits [[ 0.5452773  0.2261983  0.5528643 -2.838452 ]]
Iteration 700 of 1000: loss=0.0631 " + "l1=0.0168" + "l2=0.0463 f=-0.381 shape=(1, 9000, 1)
logits [[ 0.5092534   0.26340318  0.5165724  -2.8123844 ]]
Iteration 800 of 1000: loss=0.0581 " + "l1=0.0124" + "l2=0.0457 f=-0.382 shape=(1, 9000, 1)
logits [[ 0.47870234  0.2940975   0.48185354 -2.7837715 ]]
Iteration 900 of 1000: loss=0.0532 " + "l1=0.00741" + "l2=0.0458 f=-0.387 shape=(1, 9000, 1)
logits [[ 0.4184337   0.33122206  0.44310975 -2.7423577 ]]
--- 292.34182572364807 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00448 " + "l1=0.00448" + "l2=0 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.7461182  -0.73709923  1.29843    -3.4304335 ]]
Iteration 100 of 1000: loss=0.00411 " + "l1=0.00384" + "l2=0.000271 f=-0.286 shape=(1, 9000, 1)
logits [[ 1.6887281 -0.734099   1.3043829 -3.401331 ]]
Iteration 200 of 1000: loss=0.00403 " + "l1=0.00376" + "l2=0.000268 f=-0.286 shape=(1, 9000, 1)
logits [[ 1.6830758 -0.7345235  1.3072076 -3.4010046]]
Iteration 300 of 1000: loss=0.00397 " + "l1=0.00365" + "l2=0.000313 f=-0.287 shape=(1, 9000, 1)
logits [[ 1.6756561 -0.7350236  1.3102236 -3.3992338]]
Iteration 400 of 1000: loss=0.00394 " + "l1=0.00355" + "l2=0.000383 f=-0.288 shape=(1, 9000, 1)
logits [[ 1.6683183 -0.7355448  1.313023  -3.3971648]]
Iteration 500 of 1000: loss=0.00392 " + "l1=0.00345" + "l2=0.000472 f=-0.289 shape=(1, 9000, 1)
logits [[ 1.6611606  -0.73628527  1.315885   -3.3952034 ]]
Iteration 600 of 1000: loss=0.00387 " + "l1=0.00335" + "l2=0.00052 f=-0.289 shape=(1, 9000, 1)
logits [[ 1.6540504  -0.73717767  1.3190548  -3.3937485 ]]
Iteration 700 of 1000: loss=0.00388 " + "l1=0.00325" + "l2=0.000638 f=-0.29 shape=(1, 9000, 1)
logits [[ 1.6469278  -0.73807096  1.3222243  -3.3923771 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0448 " + "l1=0.0448" + "l2=0 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.7461182  -0.73709923  1.29843    -3.4304335 ]]
Iteration 100 of 1000: loss=0.0129 " + "l1=0.000119" + "l2=0.0128 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.3625587 -0.7175526  1.3613727 -3.2536826]]
Iteration 200 of 1000: loss=0.00889 " + "l1=1.78e-05" + "l2=0.00887 f=-0.313 shape=(1, 9000, 1)
logits [[ 1.3717717  -0.72123796  1.3715942  -3.272631  ]]
Iteration 300 of 1000: loss=0.00708 " + "l1=2.86e-05" + "l2=0.00705 f=-0.313 shape=(1, 9000, 1)
logits [[ 1.3788757  -0.72493285  1.37859    -3.283892  ]]
Iteration 400 of 1000: loss=0.00615 " + "l1=0" + "l2=0.00615 f=-0.314 shape=(1, 9000, 1)
logits [[ 1.380491  -0.730739   1.3885615 -3.2926183]]
Iteration 500 of 1000: loss=0.00511 " + "l1=0.000154" + "l2=0.00496 f=-0.313 shape=(1, 9000, 1)
logits [[ 1.3961724 -0.7372543  1.3946307 -3.3057199]]
Iteration 600 of 1000: loss=0.00469 " + "l1=0" + "l2=0.00469 f=-0.314 shape=(1, 9000, 1)
logits [[ 1.390622  -0.7427267  1.4025699 -3.307985 ]]
Iteration 700 of 1000: loss=0.00406 " + "l1=0.000241" + "l2=0.00382 f=-0.314 shape=(1, 9000, 1)
logits [[ 1.407866   -0.74799275  1.4054527  -3.3201268 ]]
Iteration 800 of 1000: loss=0.00366 " + "l1=0" + "l2=0.00366 f=-0.314 shape=(1, 9000, 1)
logits [[ 1.4095143  -0.75187135  1.409824   -3.3244731 ]]
Iteration 900 of 1000: loss=0.00345 " + "l1=0" + "l2=0.00345 f=-0.315 shape=(1, 9000, 1)
logits [[ 1.4081193 -0.7555529  1.4142355 -3.3272822]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0246 " + "l1=0.0246" + "l2=0 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.7461182  -0.73709923  1.29843    -3.4304335 ]]
Iteration 100 of 1000: loss=0.0145 " + "l1=0.00844" + "l2=0.00603 f=-0.302 shape=(1, 9000, 1)
logits [[ 1.4920751 -0.7270906  1.3385389 -3.3106096]]
Iteration 200 of 1000: loss=0.0106 " + "l1=0.00228" + "l2=0.00831 f=-0.309 shape=(1, 9000, 1)
logits [[ 1.4059066 -0.7246286  1.3644562 -3.2829382]]
Iteration 300 of 1000: loss=0.00774 " + "l1=0" + "l2=0.00774 f=-0.313 shape=(1, 9000, 1)
logits [[ 1.3762664 -0.7245819  1.3776152 -3.281525 ]]
Iteration 400 of 1000: loss=0.00628 " + "l1=0.000151" + "l2=0.00612 f=-0.313 shape=(1, 9000, 1)
logits [[ 1.3878964  -0.73017544  1.3851455  -3.2943    ]]
Iteration 500 of 1000: loss=0.00523 " + "l1=0" + "l2=0.00523 f=-0.313 shape=(1, 9000, 1)
logits [[ 1.3923203 -0.7364976  1.394585  -3.303704 ]]
Iteration 600 of 1000: loss=0.00473 " + "l1=1.69e-05" + "l2=0.00472 f=-0.313 shape=(1, 9000, 1)
logits [[ 1.4007859 -0.7422584  1.4004788 -3.312927 ]]
Iteration 700 of 1000: loss=0.00409 " + "l1=0.000126" + "l2=0.00397 f=-0.314 shape=(1, 9000, 1)
logits [[ 1.4080315 -0.7476049  1.405744  -3.3211064]]
Iteration 800 of 1000: loss=0.00381 " + "l1=0" + "l2=0.00381 f=-0.315 shape=(1, 9000, 1)
logits [[ 1.4024305 -0.7513065  1.4114985 -3.3221798]]
Iteration 900 of 1000: loss=0.00327 " + "l1=0.000109" + "l2=0.00316 f=-0.315 shape=(1, 9000, 1)
logits [[ 1.4153591 -0.7552706  1.4133862 -3.3317287]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0145 " + "l1=0.0145" + "l2=0 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.7461182  -0.73709923  1.29843    -3.4304335 ]]
Iteration 100 of 1000: loss=0.011 " + "l1=0.00889" + "l2=0.00211 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.5928081 -0.7308668  1.3191413 -3.3532672]]
Iteration 200 of 1000: loss=0.00988 " + "l1=0.00719" + "l2=0.00268 f=-0.297 shape=(1, 9000, 1)
logits [[ 1.5526346  -0.73039883  1.3313007  -3.3423932 ]]
Iteration 300 of 1000: loss=0.0088 " + "l1=0.00541" + "l2=0.00338 f=-0.3 shape=(1, 9000, 1)
logits [[ 1.5144632 -0.7314302  1.3478942 -3.3326495]]
Iteration 400 of 1000: loss=0.0078 " + "l1=0.00385" + "l2=0.00396 f=-0.304 shape=(1, 9000, 1)
logits [[ 1.4781542 -0.7318254  1.3598464 -3.322615 ]]
Iteration 500 of 1000: loss=0.00681 " + "l1=0.00224" + "l2=0.00456 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.4424388 -0.733097   1.3734049 -3.314138 ]]
Iteration 600 of 1000: loss=0.00573 " + "l1=0.000597" + "l2=0.00513 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.4067532  -0.73557323  1.388385   -3.3065424 ]]
Iteration 700 of 1000: loss=0.00471 " + "l1=1.96e-05" + "l2=0.00469 f=-0.313 shape=(1, 9000, 1)
logits [[ 1.3993782  -0.74112064  1.3987751  -3.3104577 ]]
Iteration 800 of 1000: loss=0.00416 " + "l1=8.56e-05" + "l2=0.00407 f=-0.314 shape=(1, 9000, 1)
logits [[ 1.4074563 -0.7468398  1.4048237 -3.3203835]]
Iteration 900 of 1000: loss=0.00365 " + "l1=0" + "l2=0.00365 f=-0.314 shape=(1, 9000, 1)
logits [[ 1.4095083  -0.75125843  1.4097006  -3.3255417 ]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00951 " + "l1=0.00951" + "l2=0 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.7461182  -0.73709923  1.29843    -3.4304335 ]]
Iteration 100 of 1000: loss=0.00798 " + "l1=0.00704" + "l2=0.000943 f=-0.289 shape=(1, 9000, 1)
logits [[ 1.6421587  -0.73253506  1.3110738  -3.3766863 ]]
Iteration 200 of 1000: loss=0.00753 " + "l1=0.00637" + "l2=0.00117 f=-0.291 shape=(1, 9000, 1)
logits [[ 1.6184467  -0.73246807  1.3188818  -3.370199  ]]
Iteration 300 of 1000: loss=0.00716 " + "l1=0.00573" + "l2=0.00143 f=-0.294 shape=(1, 9000, 1)
logits [[ 1.5965667 -0.7332827  1.3269321 -3.3655195]]
Iteration 400 of 1000: loss=0.00679 " + "l1=0.00514" + "l2=0.00164 f=-0.296 shape=(1, 9000, 1)
logits [[ 1.5768408 -0.7340152  1.3348658 -3.3607843]]
Iteration 500 of 1000: loss=0.00641 " + "l1=0.00457" + "l2=0.00183 f=-0.298 shape=(1, 9000, 1)
logits [[ 1.5594229 -0.7363337  1.3441321 -3.3572626]]
Iteration 600 of 1000: loss=0.00607 " + "l1=0.00402" + "l2=0.00205 f=-0.299 shape=(1, 9000, 1)
logits [[ 1.5418922  -0.73839045  1.3526406  -3.353473  ]]
Iteration 700 of 1000: loss=0.00574 " + "l1=0.00348" + "l2=0.00226 f=-0.301 shape=(1, 9000, 1)
logits [[ 1.5239744 -0.7397993  1.3600664 -3.3492436]]
Iteration 800 of 1000: loss=0.00546 " + "l1=0.00297" + "l2=0.00249 f=-0.303 shape=(1, 9000, 1)
logits [[ 1.5067422 -0.7415011  1.3670801 -3.344849 ]]
Iteration 900 of 1000: loss=0.00501 " + "l1=0.00234" + "l2=0.00267 f=-0.306 shape=(1, 9000, 1)
logits [[ 1.4863567  -0.74344754  1.3763099  -3.3417723 ]]
--- 276.235812664032 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0518 " + "l1=0.0518" + "l2=0 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.7461182  -0.73709923  1.29843    -3.4304335 ]]
Iteration 100 of 1000: loss=0.0505 " + "l1=0.0497" + "l2=0.000856 f=-0.285 shape=(1, 9000, 1)
logits [[ 1.6326269 -0.7016838  1.2601277 -3.332998 ]]
Iteration 200 of 1000: loss=0.0502 " + "l1=0.0493" + "l2=0.000978 f=-0.286 shape=(1, 9000, 1)
logits [[ 1.6115135 -0.6944791  1.251806  -3.3141391]]
Iteration 300 of 1000: loss=0.05 " + "l1=0.0489" + "l2=0.00114 f=-0.287 shape=(1, 9000, 1)
logits [[ 1.5919888 -0.6873581  1.2436794 -3.296939 ]]
Iteration 400 of 1000: loss=0.0499 " + "l1=0.0486" + "l2=0.00132 f=-0.288 shape=(1, 9000, 1)
logits [[ 1.5740529  -0.68093866  1.2366825  -3.2811089 ]]
Iteration 500 of 1000: loss=0.0497 " + "l1=0.0483" + "l2=0.00146 f=-0.288 shape=(1, 9000, 1)
logits [[ 1.5593718 -0.6759003  1.2315792 -3.2682216]]
Iteration 600 of 1000: loss=0.0496 " + "l1=0.048" + "l2=0.00154 f=-0.289 shape=(1, 9000, 1)
logits [[ 1.5455348 -0.6717079  1.2269748 -3.255507 ]]
Iteration 700 of 1000: loss=0.0495 " + "l1=0.0478" + "l2=0.00176 f=-0.289 shape=(1, 9000, 1)
logits [[ 1.5324204 -0.6676476  1.222239  -3.2430491]]
Iteration 800 of 1000: loss=0.0493 " + "l1=0.0475" + "l2=0.00183 f=-0.289 shape=(1, 9000, 1)
logits [[ 1.5196611 -0.6637317  1.217575  -3.2308238]]
Iteration 900 of 1000: loss=0.0492 " + "l1=0.0473" + "l2=0.00198 f=-0.29 shape=(1, 9000, 1)
logits [[ 1.5077341  -0.66017675  1.2131968  -3.2189999 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.518 " + "l1=0.518" + "l2=0 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.7461182  -0.73709923  1.29843    -3.4304335 ]]
Iteration 100 of 1000: loss=0.396 " + "l1=0.329" + "l2=0.0667 f=-0.339 shape=(1, 9000, 1)
logits [[ 0.7284661 -0.2607795  0.7334761 -2.5587509]]
Iteration 200 of 1000: loss=0.37 " + "l1=0.294" + "l2=0.0754 f=-0.343 shape=(1, 9000, 1)
logits [[ 0.5683212  -0.15384942  0.57892096 -2.3635826 ]]
Iteration 300 of 1000: loss=0.351 " + "l1=0.267" + "l2=0.084 f=-0.344 shape=(1, 9000, 1)
logits [[ 0.45425102 -0.08616481  0.46109495 -2.2071078 ]]
Iteration 400 of 1000: loss=0.335 " + "l1=0.25" + "l2=0.0843 f=-0.339 shape=(1, 9000, 1)
logits [[ 0.3912039  -0.04907755  0.40149197 -2.1002402 ]]
Iteration 500 of 1000: loss=0.315 " + "l1=0.229" + "l2=0.0859 f=-0.34 shape=(1, 9000, 1)
logits [[ 0.30457994 -0.01670575  0.31978586 -1.9686315 ]]
Iteration 600 of 1000: loss=0.294 " + "l1=0.207" + "l2=0.0869 f=-0.343 shape=(1, 9000, 1)
logits [[ 0.21249148  0.02304122  0.2298978  -1.8385409 ]]
Iteration 700 of 1000: loss=0.275 " + "l1=0.189" + "l2=0.0855 f=-0.343 shape=(1, 9000, 1)
logits [[ 0.15380171  0.04394811  0.16026199 -1.73196   ]]
Iteration 800 of 1000: loss=0.257 " + "l1=0.171" + "l2=0.086 f=-0.348 shape=(1, 9000, 1)
logits [[ 0.06837902  0.07524769  0.08654161 -1.6240664 ]]
Iteration 900 of 1000: loss=0.242 " + "l1=0.163" + "l2=0.0789 f=-0.342 shape=(1, 9000, 1)
logits [[ 0.07102014  0.04115371  0.07496507 -1.5533925 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.18 " + "l1=5.18" + "l2=0 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.7461182  -0.73709923  1.29843    -3.4304335 ]]
Iteration 100 of 1000: loss=0.947 " + "l1=0" + "l2=0.947 f=-0.32 shape=(1, 9000, 1)
logits [[-0.5982468  -0.22915685 -0.23360282 -0.21885824]]
Iteration 200 of 1000: loss=0.771 " + "l1=0" + "l2=0.771 f=-0.303 shape=(1, 9000, 1)
logits [[-0.5337329  -0.22006154 -0.2407706  -0.2176382 ]]
Iteration 300 of 1000: loss=0.682 " + "l1=0.011" + "l2=0.671 f=-0.295 shape=(1, 9000, 1)
logits [[-0.47258922 -0.23759548 -0.2289405  -0.23992237]]
Iteration 400 of 1000: loss=0.624 " + "l1=0" + "l2=0.624 f=-0.29 shape=(1, 9000, 1)
logits [[-0.4706164  -0.22210515 -0.2584797  -0.20934018]]
Iteration 500 of 1000: loss=0.577 " + "l1=0.011" + "l2=0.566 f=-0.278 shape=(1, 9000, 1)
logits [[-0.3887711  -0.26515812 -0.2226766  -0.23370054]]
Iteration 600 of 1000: loss=0.526 " + "l1=0" + "l2=0.526 f=-0.269 shape=(1, 9000, 1)
logits [[-0.35116634 -0.25161093 -0.2463517  -0.2274045 ]]
Iteration 700 of 1000: loss=0.497 " + "l1=0" + "l2=0.497 f=-0.263 shape=(1, 9000, 1)
logits [[-0.33843252 -0.24005722 -0.26809373 -0.20666501]]
Iteration 800 of 1000: loss=0.456 " + "l1=0" + "l2=0.456 f=-0.262 shape=(1, 9000, 1)
logits [[-0.3079047  -0.25769714 -0.256465   -0.22480944]]
Iteration 900 of 1000: loss=0.42 " + "l1=0" + "l2=0.42 f=-0.263 shape=(1, 9000, 1)
logits [[-0.30419895 -0.24808852 -0.26046544 -0.23734692]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.85 " + "l1=2.85" + "l2=0 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.7461182  -0.73709923  1.29843    -3.4304335 ]]
Iteration 100 of 1000: loss=1 " + "l1=0.373" + "l2=0.628 f=-0.336 shape=(1, 9000, 1)
logits [[-0.41202074 -0.0945733  -0.07952936 -0.75690293]]
Iteration 200 of 1000: loss=0.731 " + "l1=0.00976" + "l2=0.721 f=-0.303 shape=(1, 9000, 1)
logits [[-0.5588095  -0.20856915 -0.21734606 -0.22632185]]
Iteration 300 of 1000: loss=0.615 " + "l1=0" + "l2=0.615 f=-0.293 shape=(1, 9000, 1)
logits [[-0.51737493 -0.219453   -0.21964271 -0.21607107]]
Iteration 400 of 1000: loss=0.546 " + "l1=0.0129" + "l2=0.533 f=-0.284 shape=(1, 9000, 1)
logits [[-0.47793242 -0.2264701  -0.2034947  -0.22701395]]
Iteration 500 of 1000: loss=0.481 " + "l1=0.0144" + "l2=0.467 f=-0.274 shape=(1, 9000, 1)
logits [[-0.4342947  -0.21324497 -0.21038595 -0.2365208 ]]
Iteration 600 of 1000: loss=0.424 " + "l1=0" + "l2=0.424 f=-0.265 shape=(1, 9000, 1)
logits [[-0.42203414 -0.2234652  -0.21396387 -0.19868216]]
Iteration 700 of 1000: loss=0.379 " + "l1=7.69e-05" + "l2=0.379 f=-0.261 shape=(1, 9000, 1)
logits [[-0.39539897 -0.2502654  -0.19876029 -0.19890013]]
Iteration 800 of 1000: loss=0.341 " + "l1=0" + "l2=0.341 f=-0.267 shape=(1, 9000, 1)
logits [[-0.4396211  -0.20455502 -0.22610448 -0.19740394]]
Iteration 900 of 1000: loss=0.305 " + "l1=0.00123" + "l2=0.304 f=-0.269 shape=(1, 9000, 1)
logits [[-0.45844606 -0.20008749 -0.21586782 -0.20232922]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.68 " + "l1=1.68" + "l2=0 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.7461182  -0.73709923  1.29843    -3.4304335 ]]
Iteration 100 of 1000: loss=0.829 " + "l1=0.495" + "l2=0.334 f=-0.361 shape=(1, 9000, 1)
logits [[-0.14298022  0.07437088  0.07251795 -1.4497106 ]]
Iteration 200 of 1000: loss=0.702 " + "l1=0.339" + "l2=0.363 f=-0.335 shape=(1, 9000, 1)
logits [[-0.26730764 -0.00706284 -0.01512858 -1.0489377 ]]
Iteration 300 of 1000: loss=0.612 " + "l1=0.254" + "l2=0.358 f=-0.312 shape=(1, 9000, 1)
logits [[-0.26968113 -0.07730015 -0.05894693 -0.8411586 ]]
Iteration 400 of 1000: loss=0.526 " + "l1=0.162" + "l2=0.364 f=-0.295 shape=(1, 9000, 1)
logits [[-0.3574776  -0.10464431 -0.11413242 -0.6030082 ]]
Iteration 500 of 1000: loss=0.42 " + "l1=0.0594" + "l2=0.361 f=-0.281 shape=(1, 9000, 1)
logits [[-0.44516623 -0.16573985 -0.16545738 -0.3482898 ]]
Iteration 600 of 1000: loss=0.309 " + "l1=0.00723" + "l2=0.302 f=-0.278 shape=(1, 9000, 1)
logits [[-0.49736112 -0.20016722 -0.19684954 -0.21910372]]
Iteration 700 of 1000: loss=0.24 " + "l1=0.00106" + "l2=0.239 f=-0.286 shape=(1, 9000, 1)
logits [[-0.5323979  -0.20032786 -0.2096688  -0.203576  ]]
Iteration 800 of 1000: loss=0.197 " + "l1=0.00112" + "l2=0.195 f=-0.29 shape=(1, 9000, 1)
logits [[-0.53048253 -0.21244577 -0.20711173 -0.21055079]]
Iteration 900 of 1000: loss=0.171 " + "l1=0" + "l2=0.171 f=-0.294 shape=(1, 9000, 1)
logits [[-0.5404832  -0.21988627 -0.20908006 -0.20582566]]
--- 295.3066873550415 seconds ---
Adv result:3
Loading record A03852
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0486 " + "l1=0.0486" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.613465  -2.2491531  2.3315732 -4.436306 ]]
Iteration 100 of 1000: loss=0.0482 " + "l1=0.0479" + "l2=0.000298 f=-0.432 shape=(1, 9000, 1)
logits [[ 2.5681953 -2.2235425  2.309439  -4.3836536]]
Iteration 200 of 1000: loss=0.0481 " + "l1=0.0478" + "l2=0.000285 f=-0.432 shape=(1, 9000, 1)
logits [[ 2.5615463 -2.2200644  2.3061125 -4.374735 ]]
Iteration 300 of 1000: loss=0.048 " + "l1=0.0477" + "l2=0.000349 f=-0.431 shape=(1, 9000, 1)
logits [[ 2.5523171 -2.2152555  2.3016927 -4.3629684]]
Iteration 400 of 1000: loss=0.048 " + "l1=0.0475" + "l2=0.000421 f=-0.43 shape=(1, 9000, 1)
logits [[ 2.543011  -2.2103014  2.297126  -4.351176 ]]
Iteration 500 of 1000: loss=0.0479 " + "l1=0.0474" + "l2=0.000502 f=-0.43 shape=(1, 9000, 1)
logits [[ 2.5337825 -2.2054486  2.29257   -4.339356 ]]
Iteration 600 of 1000: loss=0.0478 " + "l1=0.0473" + "l2=0.000577 f=-0.429 shape=(1, 9000, 1)
logits [[ 2.524773  -2.2006488  2.2880747 -4.327876 ]]
Iteration 700 of 1000: loss=0.0478 " + "l1=0.0471" + "l2=0.000695 f=-0.428 shape=(1, 9000, 1)
logits [[ 2.5162878 -2.1961145  2.283829  -4.3171983]]
Iteration 800 of 1000: loss=0.0478 " + "l1=0.047" + "l2=0.000796 f=-0.428 shape=(1, 9000, 1)
logits [[ 2.5083914 -2.1922512  2.2802367 -4.307722 ]]
Iteration 900 of 1000: loss=0.0479 " + "l1=0.0469" + "l2=0.00097 f=-0.427 shape=(1, 9000, 1)
logits [[ 2.5008817 -2.188487   2.276829  -4.2988386]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.486 " + "l1=0.486" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.613465  -2.2491531  2.3315732 -4.436306 ]]
Iteration 100 of 1000: loss=0.453 " + "l1=0.435" + "l2=0.0179 f=-0.416 shape=(1, 9000, 1)
logits [[ 2.2853568 -2.0654228  2.1692824 -4.0531363]]
Iteration 200 of 1000: loss=0.438 " + "l1=0.414" + "l2=0.024 f=-0.408 shape=(1, 9000, 1)
logits [[ 2.1533263 -1.9915851  2.099699  -3.8952408]]
Iteration 300 of 1000: loss=0.424 " + "l1=0.394" + "l2=0.0297 f=-0.4 shape=(1, 9000, 1)
logits [[ 2.023045  -1.9189714  2.0207949 -3.7251475]]
Iteration 400 of 1000: loss=0.41 " + "l1=0.378" + "l2=0.0318 f=-0.397 shape=(1, 9000, 1)
logits [[ 1.9354676 -1.845172   1.9370419 -3.6137412]]
Iteration 500 of 1000: loss=0.398 " + "l1=0.362" + "l2=0.0359 f=-0.396 shape=(1, 9000, 1)
logits [[ 1.8507293 -1.7667625  1.848263  -3.516375 ]]
Iteration 600 of 1000: loss=0.384 " + "l1=0.343" + "l2=0.0409 f=-0.397 shape=(1, 9000, 1)
logits [[ 1.7536011 -1.676079   1.7516294 -3.4172668]]
Iteration 700 of 1000: loss=0.371 " + "l1=0.327" + "l2=0.044 f=-0.399 shape=(1, 9000, 1)
logits [[ 1.6731699 -1.5956647  1.6734205 -3.3459294]]
Iteration 800 of 1000: loss=0.359 " + "l1=0.312" + "l2=0.0471 f=-0.403 shape=(1, 9000, 1)
logits [[ 1.5949725 -1.5244546  1.595449  -3.2786322]]
Iteration 900 of 1000: loss=0.349 " + "l1=0.299" + "l2=0.0499 f=-0.406 shape=(1, 9000, 1)
logits [[ 1.5272547 -1.4634157  1.5279481 -3.21692  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.86 " + "l1=4.86" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.613465  -2.2491531  2.3315732 -4.436306 ]]
Iteration 100 of 1000: loss=2.83 " + "l1=2.13" + "l2=0.695 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.0769839 -1.0230666  1.1076771 -2.6635072]]
Iteration 200 of 1000: loss=1.91 " + "l1=1.11" + "l2=0.805 f=-0.401 shape=(1, 9000, 1)
logits [[ 0.23758051 -0.5129848   0.59555626 -1.922529  ]]
Iteration 300 of 1000: loss=1.28 " + "l1=0.415" + "l2=0.861 f=-0.421 shape=(1, 9000, 1)
logits [[-0.33618462 -0.1959918   0.21939741 -1.3703425 ]]
Iteration 400 of 1000: loss=0.828 " + "l1=0.00616" + "l2=0.822 f=-0.448 shape=(1, 9000, 1)
logits [[-0.676057    0.00659273  0.0127479  -1.1366705 ]]
Iteration 500 of 1000: loss=0.679 " + "l1=0.00442" + "l2=0.674 f=-0.454 shape=(1, 9000, 1)
logits [[-0.6749277   0.00409004  0.00851307 -1.1544628 ]]
Iteration 600 of 1000: loss=0.605 " + "l1=0.00967" + "l2=0.595 f=-0.452 shape=(1, 9000, 1)
logits [[-0.6317075  -0.0084723   0.00119478 -1.1708759 ]]
Iteration 700 of 1000: loss=0.553 " + "l1=0.00103" + "l2=0.552 f=-0.446 shape=(1, 9000, 1)
logits [[-0.634828   -0.00634657 -0.00531987 -1.1360916 ]]
Iteration 800 of 1000: loss=0.515 " + "l1=0.00175" + "l2=0.514 f=-0.438 shape=(1, 9000, 1)
logits [[-0.6197717  -0.01191529 -0.01016577 -1.1097115 ]]
Iteration 900 of 1000: loss=0.49 " + "l1=0" + "l2=0.49 f=-0.435 shape=(1, 9000, 1)
logits [[-0.63886815 -0.00947736 -0.01783527 -1.0747061 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.67 " + "l1=2.67" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.613465  -2.2491531  2.3315732 -4.436306 ]]
Iteration 100 of 1000: loss=1.9 " + "l1=1.61" + "l2=0.289 f=-0.378 shape=(1, 9000, 1)
logits [[ 1.5099757 -1.4163167  1.5198197 -3.125859 ]]
Iteration 200 of 1000: loss=1.52 " + "l1=1.18" + "l2=0.345 f=-0.395 shape=(1, 9000, 1)
logits [[ 1.0760758 -1.0301317  1.1125821 -2.7393491]]
Iteration 300 of 1000: loss=1.23 " + "l1=0.832" + "l2=0.396 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.56205004 -0.7291376   0.7841589  -2.2537081 ]]
Iteration 400 of 1000: loss=0.946 " + "l1=0.462" + "l2=0.485 f=-0.435 shape=(1, 9000, 1)
logits [[ 0.07677187 -0.4173656   0.42211732 -1.8200568 ]]
Iteration 500 of 1000: loss=0.781 " + "l1=0.3" + "l2=0.481 f=-0.447 shape=(1, 9000, 1)
logits [[-0.11538497 -0.2597918   0.2862043  -1.6980702 ]]
Iteration 600 of 1000: loss=0.681 " + "l1=0.202" + "l2=0.479 f=-0.447 shape=(1, 9000, 1)
logits [[-0.29143643 -0.17397852  0.19273698 -1.5144753 ]]
Iteration 700 of 1000: loss=0.599 " + "l1=0.122" + "l2=0.478 f=-0.443 shape=(1, 9000, 1)
logits [[-0.437883   -0.10360923  0.11765163 -1.3467969 ]]
Iteration 800 of 1000: loss=0.54 " + "l1=0.057" + "l2=0.483 f=-0.443 shape=(1, 9000, 1)
logits [[-0.56116897 -0.04911126  0.05453778 -1.2163401 ]]
Iteration 900 of 1000: loss=0.5 " + "l1=0.0152" + "l2=0.485 f=-0.445 shape=(1, 9000, 1)
logits [[-0.640023   -0.01835364  0.00936104 -1.1328275 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.58 " + "l1=1.58" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.613465  -2.2491531  2.3315732 -4.436306 ]]
Iteration 100 of 1000: loss=1.26 " + "l1=1.13" + "l2=0.139 f=-0.391 shape=(1, 9000, 1)
logits [[ 1.7794908 -1.6801286  1.783208  -3.4477682]]
Iteration 200 of 1000: loss=1.13 " + "l1=0.976" + "l2=0.154 f=-0.385 shape=(1, 9000, 1)
logits [[ 1.5425053 -1.4612653  1.540484  -3.1610668]]
Iteration 300 of 1000: loss=1.02 " + "l1=0.857" + "l2=0.165 f=-0.39 shape=(1, 9000, 1)
logits [[ 1.3412495 -1.2877231  1.3500847 -2.9628243]]
Iteration 400 of 1000: loss=0.889 " + "l1=0.687" + "l2=0.202 f=-0.407 shape=(1, 9000, 1)
logits [[ 1.0235119 -1.0255973  1.0868152 -2.711086 ]]
Iteration 500 of 1000: loss=0.756 " + "l1=0.523" + "l2=0.234 f=-0.436 shape=(1, 9000, 1)
logits [[ 0.64308715 -0.79056185  0.81784123 -2.4152124 ]]
Iteration 600 of 1000: loss=0.636 " + "l1=0.372" + "l2=0.264 f=-0.451 shape=(1, 9000, 1)
logits [[ 0.3056716  -0.5760127   0.56972516 -2.1028192 ]]
Iteration 700 of 1000: loss=0.551 " + "l1=0.279" + "l2=0.272 f=-0.461 shape=(1, 9000, 1)
logits [[ 0.09522044 -0.44074255  0.41800544 -1.9148624 ]]
Iteration 800 of 1000: loss=0.504 " + "l1=0.226" + "l2=0.277 f=-0.458 shape=(1, 9000, 1)
logits [[-0.0220273  -0.36217114  0.33403608 -1.7837261 ]]
Iteration 900 of 1000: loss=0.473 " + "l1=0.186" + "l2=0.287 f=-0.454 shape=(1, 9000, 1)
logits [[-0.14215912 -0.30340943  0.26872334 -1.6402274 ]]
--- 289.1678156852722 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00282 " + "l1=0.00282" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.613465  -2.2491531  2.3315732 -4.436306 ]]
Iteration 100 of 1000: loss=0.00263 " + "l1=0.00245" + "l2=0.000175 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.5828352 -2.2531219  2.3378663 -4.408621 ]]
Iteration 200 of 1000: loss=0.00257 " + "l1=0.00242" + "l2=0.000148 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.5807118 -2.253471   2.338579  -4.4067016]]
Iteration 300 of 1000: loss=0.00256 " + "l1=0.00236" + "l2=0.000201 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.575883  -2.2540958  2.339932  -4.4025326]]
Iteration 400 of 1000: loss=0.00251 " + "l1=0.0023" + "l2=0.000219 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.57086   -2.2546363  2.341303  -4.3982253]]
Iteration 500 of 1000: loss=0.00254 " + "l1=0.00223" + "l2=0.000308 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.5658371 -2.255253   2.3427095 -4.393816 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0282 " + "l1=0.0282" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.613465  -2.2491531  2.3315732 -4.436306 ]]
Iteration 100 of 1000: loss=0.011 " + "l1=0.00175" + "l2=0.00921 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.406717  -2.2846522  2.38919   -4.2451057]]
Iteration 200 of 1000: loss=0.0064 " + "l1=8.1e-05" + "l2=0.00632 f=-0.432 shape=(1, 9000, 1)
logits [[ 2.3889384 -2.2853537  2.3881285 -4.2207203]]
Iteration 300 of 1000: loss=0.00498 " + "l1=0" + "l2=0.00498 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.3899357 -2.286129   2.3901055 -4.224005 ]]
Iteration 400 of 1000: loss=0.00431 " + "l1=0" + "l2=0.00431 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.3896813 -2.2855215  2.3914344 -4.226136 ]]
Iteration 500 of 1000: loss=0.00379 " + "l1=0" + "l2=0.00379 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.3903937 -2.2863746  2.3930283 -4.2276635]]
Iteration 600 of 1000: loss=0.00351 " + "l1=0" + "l2=0.00351 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.3938682 -2.2868268  2.3939586 -4.2311363]]
Iteration 700 of 1000: loss=0.00324 " + "l1=0" + "l2=0.00324 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.3934727 -2.289147   2.3965406 -4.231466 ]]
Iteration 800 of 1000: loss=0.00294 " + "l1=4.44e-05" + "l2=0.00289 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.3981314 -2.29056    2.3976872 -4.2360806]]
Iteration 900 of 1000: loss=0.00297 " + "l1=0.000252" + "l2=0.00272 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.4013672 -2.2922754  2.3988473 -4.2391887]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0155 " + "l1=0.0155" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.613465  -2.2491531  2.3315732 -4.436306 ]]
Iteration 100 of 1000: loss=0.0103 " + "l1=0.00749" + "l2=0.00281 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.4981177 -2.2681704  2.3618789 -4.3323035]]
Iteration 200 of 1000: loss=0.00826 " + "l1=0.00456" + "l2=0.0037 f=-0.434 shape=(1, 9000, 1)
logits [[ 2.4562852 -2.274975   2.3733666 -4.290691 ]]
Iteration 300 of 1000: loss=0.00634 " + "l1=0.00162" + "l2=0.00472 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.4121134 -2.2800405  2.3826349 -4.2461624]]
Iteration 400 of 1000: loss=0.00479 " + "l1=5.59e-05" + "l2=0.00473 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.3907328 -2.2851043  2.3897157 -4.2257485]]
Iteration 500 of 1000: loss=0.00412 " + "l1=1.21e-05" + "l2=0.00411 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.3910096 -2.2847824  2.3907897 -4.227899 ]]
Iteration 600 of 1000: loss=0.00365 " + "l1=0" + "l2=0.00365 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.3918955 -2.2855585  2.3924038 -4.2293673]]
Iteration 700 of 1000: loss=0.00332 " + "l1=1.51e-05" + "l2=0.00331 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.394499  -2.2870226  2.3942242 -4.2322674]]
Iteration 800 of 1000: loss=0.00349 " + "l1=3.19e-05" + "l2=0.00346 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.3966782 -2.2888298  2.3960981 -4.2346816]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00916 " + "l1=0.00916" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.613465  -2.2491531  2.3315732 -4.436306 ]]
Iteration 100 of 1000: loss=0.00727 " + "l1=0.0062" + "l2=0.00108 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.5403183 -2.2603288  2.349702  -4.371447 ]]
Iteration 200 of 1000: loss=0.00667 " + "l1=0.00539" + "l2=0.00129 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.5209084 -2.2637484  2.3552084 -4.3529034]]
Iteration 300 of 1000: loss=0.00608 " + "l1=0.0045" + "l2=0.00158 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.4990368 -2.2666087  2.3606508 -4.3316817]]
Iteration 400 of 1000: loss=0.00557 " + "l1=0.00365" + "l2=0.00192 f=-0.434 shape=(1, 9000, 1)
logits [[ 2.47784   -2.2690005  2.3655922 -4.311114 ]]
Iteration 500 of 1000: loss=0.00507 " + "l1=0.00279" + "l2=0.00228 f=-0.434 shape=(1, 9000, 1)
logits [[ 2.4568076 -2.2717745  2.3709893 -4.2910666]]
Iteration 600 of 1000: loss=0.00464 " + "l1=0.00196" + "l2=0.00267 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.4359694 -2.2744677  2.3755078 -4.270147 ]]
Iteration 700 of 1000: loss=0.00419 " + "l1=0.00135" + "l2=0.00284 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.4223006 -2.2771852  2.380633  -4.257431 ]]
Iteration 800 of 1000: loss=0.00388 " + "l1=0.000738" + "l2=0.00314 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.4084113 -2.2815058  2.3857026 -4.2441416]]
Iteration 900 of 1000: loss=0.00351 " + "l1=6.25e-05" + "l2=0.00345 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.3941011 -2.286142   2.3921766 -4.230714 ]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00599 " + "l1=0.00599" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.613465  -2.2491531  2.3315732 -4.436306 ]]
Iteration 100 of 1000: loss=0.00515 " + "l1=0.00462" + "l2=0.000526 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.5613487 -2.2567801  2.3437204 -4.389731 ]]
Iteration 200 of 1000: loss=0.0049 " + "l1=0.00434" + "l2=0.000561 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.5507286 -2.2582474  2.3464978 -4.379842 ]]
Iteration 300 of 1000: loss=0.0047 " + "l1=0.00401" + "l2=0.00069 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.5383797 -2.260051   2.3498838 -4.3686347]]
Iteration 400 of 1000: loss=0.00452 " + "l1=0.00367" + "l2=0.000854 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.5257986 -2.2618232  2.3532968 -4.3569884]]
Iteration 500 of 1000: loss=0.00434 " + "l1=0.00334" + "l2=0.000994 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.5136108 -2.2632535  2.356234  -4.345419 ]]
Iteration 600 of 1000: loss=0.00419 " + "l1=0.00303" + "l2=0.00116 f=-0.434 shape=(1, 9000, 1)
logits [[ 2.5019267 -2.2647943  2.359175  -4.3341765]]
Iteration 700 of 1000: loss=0.00405 " + "l1=0.00274" + "l2=0.00131 f=-0.434 shape=(1, 9000, 1)
logits [[ 2.4906707 -2.266235   2.3617368 -4.3227677]]
Iteration 800 of 1000: loss=0.00399 " + "l1=0.00245" + "l2=0.00154 f=-0.434 shape=(1, 9000, 1)
logits [[ 2.479629  -2.2677996  2.3645382 -4.3115773]]
Iteration 900 of 1000: loss=0.00386 " + "l1=0.00218" + "l2=0.00168 f=-0.434 shape=(1, 9000, 1)
logits [[ 2.4697404 -2.269491   2.3673742 -4.302029 ]]
--- 247.95604991912842 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0705 " + "l1=0.0705" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.613465  -2.2491531  2.3315732 -4.436306 ]]
Iteration 100 of 1000: loss=0.0694 " + "l1=0.0687" + "l2=0.000644 f=-0.429 shape=(1, 9000, 1)
logits [[ 2.5422318 -2.2323856  2.3042023 -4.3307896]]
Iteration 200 of 1000: loss=0.069 " + "l1=0.0683" + "l2=0.000727 f=-0.428 shape=(1, 9000, 1)
logits [[ 2.5250661 -2.228756   2.2975497 -4.3040366]]
Iteration 300 of 1000: loss=0.0687 " + "l1=0.0678" + "l2=0.000884 f=-0.426 shape=(1, 9000, 1)
logits [[ 2.5057304 -2.2248344  2.290203  -4.274135 ]]
Iteration 400 of 1000: loss=0.0684 " + "l1=0.0673" + "l2=0.0011 f=-0.424 shape=(1, 9000, 1)
logits [[ 2.4862995 -2.2209258  2.2827945 -4.2442946]]
Iteration 500 of 1000: loss=0.0681 " + "l1=0.0668" + "l2=0.00129 f=-0.423 shape=(1, 9000, 1)
logits [[ 2.4676719 -2.2175999  2.2756083 -4.2159033]]
Iteration 600 of 1000: loss=0.0679 " + "l1=0.0664" + "l2=0.00153 f=-0.421 shape=(1, 9000, 1)
logits [[ 2.4498625 -2.214686   2.2686787 -4.1889124]]
Iteration 700 of 1000: loss=0.0677 " + "l1=0.066" + "l2=0.00172 f=-0.42 shape=(1, 9000, 1)
logits [[ 2.4355779 -2.2124777  2.262531  -4.1667333]]
Iteration 800 of 1000: loss=0.0676 " + "l1=0.0657" + "l2=0.00194 f=-0.419 shape=(1, 9000, 1)
logits [[ 2.4220762 -2.210616   2.2560642 -4.145433 ]]
Iteration 900 of 1000: loss=0.0675 " + "l1=0.0653" + "l2=0.00219 f=-0.419 shape=(1, 9000, 1)
logits [[ 2.4083893 -2.2089922  2.2496896 -4.124203 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.705 " + "l1=0.705" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.613465  -2.2491531  2.3315732 -4.436306 ]]
Iteration 100 of 1000: loss=0.609 " + "l1=0.569" + "l2=0.0397 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.0876448 -2.1240869  2.0878162 -3.6017592]]
Iteration 200 of 1000: loss=0.57 " + "l1=0.52" + "l2=0.0497 f=-0.367 shape=(1, 9000, 1)
logits [[ 1.9215508 -2.0657084  1.9386874 -3.2616968]]
Iteration 300 of 1000: loss=0.533 " + "l1=0.468" + "l2=0.0645 f=-0.347 shape=(1, 9000, 1)
logits [[ 1.7117019 -2.0023031  1.7914358 -2.88954  ]]
Iteration 400 of 1000: loss=0.5 " + "l1=0.42" + "l2=0.0801 f=-0.327 shape=(1, 9000, 1)
logits [[ 1.5292093 -1.9331746  1.6489179 -2.5535047]]
Iteration 500 of 1000: loss=0.474 " + "l1=0.38" + "l2=0.0933 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.3824027 -1.8488951  1.5106581 -2.2930548]]
Iteration 600 of 1000: loss=0.452 " + "l1=0.346" + "l2=0.105 f=-0.301 shape=(1, 9000, 1)
logits [[ 1.2518415 -1.7787882  1.392615  -2.0715606]]
Iteration 700 of 1000: loss=0.435 " + "l1=0.323" + "l2=0.112 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.164643  -1.7260385  1.3089046 -1.9213986]]
Iteration 800 of 1000: loss=0.42 " + "l1=0.302" + "l2=0.119 f=-0.287 shape=(1, 9000, 1)
logits [[ 1.0767368 -1.6840838  1.237025  -1.7780662]]
Iteration 900 of 1000: loss=0.407 " + "l1=0.28" + "l2=0.127 f=-0.28 shape=(1, 9000, 1)
logits [[ 0.9928615 -1.6346184  1.1628425 -1.6417859]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.05 " + "l1=7.05" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.613465  -2.2491531  2.3315732 -4.436306 ]]
Iteration 100 of 1000: loss=2.06 " + "l1=0.134" + "l2=1.93 f=-0.107 shape=(1, 9000, 1)
logits [[-0.05444007 -1.3580317   0.55885214  0.42527032]]
Iteration 200 of 1000: loss=1.14 " + "l1=0" + "l2=1.14 f=-0.111 shape=(1, 9000, 1)
logits [[-0.039871   -1.2842108   0.43705064  0.4418574 ]]
Iteration 300 of 1000: loss=0.873 " + "l1=0" + "l2=0.873 f=-0.125 shape=(1, 9000, 1)
logits [[-0.06071127 -1.2375212   0.3906963   0.4071365 ]]
Iteration 400 of 1000: loss=0.737 " + "l1=0" + "l2=0.737 f=-0.131 shape=(1, 9000, 1)
logits [[-0.0565018  -1.1999776   0.36159903  0.36930987]]
Iteration 500 of 1000: loss=0.659 " + "l1=0" + "l2=0.659 f=-0.133 shape=(1, 9000, 1)
logits [[-0.05765709 -1.1661083   0.33570012  0.35741937]]
Iteration 600 of 1000: loss=0.599 " + "l1=0" + "l2=0.599 f=-0.135 shape=(1, 9000, 1)
logits [[-0.05837603 -1.1490977   0.32317194  0.3433358 ]]
Iteration 700 of 1000: loss=0.553 " + "l1=0.00936" + "l2=0.543 f=-0.138 shape=(1, 9000, 1)
logits [[-0.05374394 -1.1333057   0.32135049  0.31199044]]
Iteration 800 of 1000: loss=0.509 " + "l1=0.00578" + "l2=0.504 f=-0.138 shape=(1, 9000, 1)
logits [[-0.06477629 -1.1183438   0.31793892  0.3121563 ]]
Iteration 900 of 1000: loss=0.479 " + "l1=0" + "l2=0.479 f=-0.14 shape=(1, 9000, 1)
logits [[-0.09187374 -1.1040535   0.30818412  0.32741976]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.88 " + "l1=3.88" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.613465  -2.2491531  2.3315732 -4.436306 ]]
Iteration 100 of 1000: loss=1.94 " + "l1=1.15" + "l2=0.793 f=-0.206 shape=(1, 9000, 1)
logits [[ 0.6178378  -1.6357225   1.1441423  -0.94962496]]
Iteration 200 of 1000: loss=1.05 " + "l1=0.0731" + "l2=0.981 f=-0.128 shape=(1, 9000, 1)
logits [[-1.1168774e-03 -1.3108081e+00  4.6645695e-01  3.3358717e-01]]
Iteration 300 of 1000: loss=0.722 " + "l1=0" + "l2=0.722 f=-0.135 shape=(1, 9000, 1)
logits [[-0.04719736 -1.2164392   0.35809714  0.36639416]]
Iteration 400 of 1000: loss=0.585 " + "l1=0" + "l2=0.585 f=-0.143 shape=(1, 9000, 1)
logits [[-0.05503581 -1.1596353   0.31858554  0.3257209 ]]
Iteration 500 of 1000: loss=0.518 " + "l1=0" + "l2=0.518 f=-0.15 shape=(1, 9000, 1)
logits [[-0.07194363 -1.1283501   0.29667416  0.30329248]]
Iteration 600 of 1000: loss=0.482 " + "l1=0.00554" + "l2=0.477 f=-0.159 shape=(1, 9000, 1)
logits [[-0.093987   -1.1007332   0.28353575  0.27346772]]
Iteration 700 of 1000: loss=0.458 " + "l1=0" + "l2=0.458 f=-0.163 shape=(1, 9000, 1)
logits [[-0.13819447 -1.0787237   0.2659849   0.30038872]]
Iteration 800 of 1000: loss=0.431 " + "l1=0" + "l2=0.431 f=-0.166 shape=(1, 9000, 1)
logits [[-0.14787805 -1.0758004   0.27116367  0.28900006]]
Iteration 900 of 1000: loss=0.409 " + "l1=0.0018" + "l2=0.407 f=-0.169 shape=(1, 9000, 1)
logits [[-0.16174972 -1.0728579   0.2800444   0.2767795 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.29 " + "l1=2.29" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.613465  -2.2491531  2.3315732 -4.436306 ]]
Iteration 100 of 1000: loss=1.49 " + "l1=1.16" + "l2=0.335 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.2081155 -1.8536897  1.5198947 -2.0460687]]
Iteration 200 of 1000: loss=1.12 " + "l1=0.696" + "l2=0.427 f=-0.229 shape=(1, 9000, 1)
logits [[ 0.67930526 -1.6279323   1.0873239  -1.0556707 ]]
Iteration 300 of 1000: loss=0.867 " + "l1=0.334" + "l2=0.533 f=-0.197 shape=(1, 9000, 1)
logits [[ 0.22959152 -1.420979    0.7152243  -0.31369615]]
Iteration 400 of 1000: loss=0.618 " + "l1=0.0125" + "l2=0.606 f=-0.174 shape=(1, 9000, 1)
logits [[-0.12465923 -1.1849612   0.32519802  0.286649  ]]
Iteration 500 of 1000: loss=0.499 " + "l1=0.00221" + "l2=0.497 f=-0.187 shape=(1, 9000, 1)
logits [[-0.17290737 -1.131037    0.28052253  0.27371603]]
Iteration 600 of 1000: loss=0.444 " + "l1=0" + "l2=0.444 f=-0.186 shape=(1, 9000, 1)
logits [[-0.22116636 -1.0888681   0.27601916  0.28849506]]
Iteration 700 of 1000: loss=0.408 " + "l1=0" + "l2=0.408 f=-0.187 shape=(1, 9000, 1)
logits [[-0.25122848 -1.0647064   0.27748272  0.29016262]]
Iteration 800 of 1000: loss=0.382 " + "l1=0.00178" + "l2=0.38 f=-0.186 shape=(1, 9000, 1)
logits [[-0.26230073 -1.0569513   0.2897807   0.28429034]]
Iteration 900 of 1000: loss=0.363 " + "l1=0" + "l2=0.363 f=-0.185 shape=(1, 9000, 1)
logits [[-0.27736956 -1.0549109   0.2888782   0.3052676 ]]
--- 294.5801134109497 seconds ---
Adv result:3
Loading record A03863
(1, 6094)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0728 " + "l1=0.0728" + "l2=0 f=-0.687 shape=(1, 9000, 1)
logits [[ 3.9442525 -3.3405561  2.4777143 -5.827428 ]]
Iteration 100 of 1000: loss=0.0724 " + "l1=0.0721" + "l2=0.000311 f=-0.681 shape=(1, 9000, 1)
logits [[ 3.9029918 -3.307446   2.4511971 -5.7711153]]
Iteration 200 of 1000: loss=0.0723 " + "l1=0.072" + "l2=0.00032 f=-0.68 shape=(1, 9000, 1)
logits [[ 3.8967617 -3.3016272  2.4472122 -5.763077 ]]
Iteration 300 of 1000: loss=0.0722 " + "l1=0.0718" + "l2=0.000383 f=-0.679 shape=(1, 9000, 1)
logits [[ 3.8896542 -3.2950675  2.4419742 -5.753474 ]]
Iteration 400 of 1000: loss=0.0722 " + "l1=0.0717" + "l2=0.000472 f=-0.678 shape=(1, 9000, 1)
logits [[ 3.8824418 -3.2888026  2.4372265 -5.7441425]]
Iteration 500 of 1000: loss=0.0721 " + "l1=0.0716" + "l2=0.00055 f=-0.677 shape=(1, 9000, 1)
logits [[ 3.875375  -3.2829673  2.4330204 -5.735338 ]]
Iteration 600 of 1000: loss=0.0721 " + "l1=0.0715" + "l2=0.000642 f=-0.677 shape=(1, 9000, 1)
logits [[ 3.8683481 -3.2771688  2.4292238 -5.727117 ]]
Iteration 700 of 1000: loss=0.0721 " + "l1=0.0713" + "l2=0.000744 f=-0.676 shape=(1, 9000, 1)
logits [[ 3.86171   -3.2720778  2.4263153 -5.7198615]]
Iteration 800 of 1000: loss=0.072 " + "l1=0.0712" + "l2=0.000799 f=-0.675 shape=(1, 9000, 1)
logits [[ 3.855069 -3.267206  2.423855 -5.712951]]
Iteration 900 of 1000: loss=0.072 " + "l1=0.0711" + "l2=0.000884 f=-0.675 shape=(1, 9000, 1)
logits [[ 3.8484304 -3.2624981  2.4217136 -5.706355 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.728 " + "l1=0.728" + "l2=0 f=-0.687 shape=(1, 9000, 1)
logits [[ 3.9442525 -3.3405561  2.4777143 -5.827428 ]]
Iteration 100 of 1000: loss=0.688 " + "l1=0.666" + "l2=0.0223 f=-0.643 shape=(1, 9000, 1)
logits [[ 3.606245  -3.0505648  2.2479975 -5.3769093]]
Iteration 200 of 1000: loss=0.67 " + "l1=0.637" + "l2=0.0335 f=-0.623 shape=(1, 9000, 1)
logits [[ 3.4504714 -2.9175887  2.141487  -5.1674423]]
Iteration 300 of 1000: loss=0.655 " + "l1=0.614" + "l2=0.0413 f=-0.61 shape=(1, 9000, 1)
logits [[ 3.3183897 -2.8196585  2.061137  -4.997969 ]]
Iteration 400 of 1000: loss=0.64 " + "l1=0.59" + "l2=0.0504 f=-0.601 shape=(1, 9000, 1)
logits [[ 3.1678028 -2.7298913  1.9873945 -4.8285685]]
Iteration 500 of 1000: loss=0.623 " + "l1=0.565" + "l2=0.0575 f=-0.597 shape=(1, 9000, 1)
logits [[ 3.0021012 -2.6521409  1.9260763 -4.664848 ]]
Iteration 600 of 1000: loss=0.602 " + "l1=0.536" + "l2=0.0655 f=-0.593 shape=(1, 9000, 1)
logits [[ 2.8044875 -2.5565085  1.8612239 -4.4795065]]
Iteration 700 of 1000: loss=0.579 " + "l1=0.509" + "l2=0.0701 f=-0.59 shape=(1, 9000, 1)
logits [[ 2.6169724 -2.4690757  1.7889675 -4.297832 ]]
Iteration 800 of 1000: loss=0.549 " + "l1=0.472" + "l2=0.0767 f=-0.598 shape=(1, 9000, 1)
logits [[ 2.3685412 -2.3539374  1.6888402 -4.0943   ]]
Iteration 900 of 1000: loss=0.505 " + "l1=0.412" + "l2=0.093 f=-0.597 shape=(1, 9000, 1)
logits [[ 1.9966736 -2.1183765  1.6148388 -3.8829186]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.28 " + "l1=7.28" + "l2=0 f=-0.687 shape=(1, 9000, 1)
logits [[ 3.9442525 -3.3405561  2.4777143 -5.827428 ]]
Iteration 100 of 1000: loss=3.31 " + "l1=1.46" + "l2=1.86 f=-0.379 shape=(1, 9000, 1)
logits [[ 0.73944366 -0.7175652   0.7281249  -2.2669346 ]]
Iteration 200 of 1000: loss=2.17 " + "l1=0.3" + "l2=1.87 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.3233349   0.04255196  0.34260875 -1.8601549 ]]
Iteration 300 of 1000: loss=1.57 " + "l1=0" + "l2=1.57 f=-0.254 shape=(1, 9000, 1)
logits [[ 0.18497206  0.19839226  0.19449581 -1.59481   ]]
Iteration 400 of 1000: loss=1.31 " + "l1=0.00211" + "l2=1.31 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.15432772  0.18235381  0.18446685 -1.5480757 ]]
Iteration 500 of 1000: loss=1.14 " + "l1=0" + "l2=1.14 f=-0.259 shape=(1, 9000, 1)
logits [[ 0.15312341  0.15745243  0.1563056  -1.5047961 ]]
Iteration 600 of 1000: loss=1.03 " + "l1=0.00173" + "l2=1.03 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.12421881  0.13293177  0.13465863 -1.4550937 ]]
Iteration 700 of 1000: loss=0.954 " + "l1=0.0155" + "l2=0.939 f=-0.268 shape=(1, 9000, 1)
logits [[ 0.09730081  0.09601923  0.11151426 -1.3788116 ]]
Iteration 800 of 1000: loss=0.888 " + "l1=0" + "l2=0.888 f=-0.261 shape=(1, 9000, 1)
logits [[ 0.07934976  0.09467713  0.08620816 -1.3056526 ]]
Iteration 900 of 1000: loss=0.842 " + "l1=0.00115" + "l2=0.841 f=-0.261 shape=(1, 9000, 1)
logits [[ 0.06671332  0.08080263  0.08195718 -1.2730597 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.01 " + "l1=4.01" + "l2=0 f=-0.687 shape=(1, 9000, 1)
logits [[ 3.9442525 -3.3405561  2.4777143 -5.827428 ]]
Iteration 100 of 1000: loss=2.8 " + "l1=2.13" + "l2=0.668 f=-0.485 shape=(1, 9000, 1)
logits [[ 1.9826686 -1.8859464  1.268686  -3.304874 ]]
Iteration 200 of 1000: loss=1.99 " + "l1=1.04" + "l2=0.951 f=-0.44 shape=(1, 9000, 1)
logits [[ 0.85261637 -1.0360533   0.843581   -2.4218647 ]]
Iteration 300 of 1000: loss=1.54 " + "l1=0.697" + "l2=0.848 f=-0.394 shape=(1, 9000, 1)
logits [[ 0.6276463  -0.63802373  0.62855893 -2.1937983 ]]
Iteration 400 of 1000: loss=1.25 " + "l1=0.411" + "l2=0.838 f=-0.34 shape=(1, 9000, 1)
logits [[ 0.4571024  -0.27972227  0.46689388 -2.0054193 ]]
Iteration 500 of 1000: loss=1.02 " + "l1=0.191" + "l2=0.827 f=-0.311 shape=(1, 9000, 1)
logits [[ 0.27093846 -0.06903003  0.27771336 -1.7216604 ]]
Iteration 600 of 1000: loss=0.893 " + "l1=0.0969" + "l2=0.796 f=-0.289 shape=(1, 9000, 1)
logits [[ 0.17374599  0.00212541  0.17827334 -1.5108654 ]]
Iteration 700 of 1000: loss=0.792 " + "l1=0.0144" + "l2=0.778 f=-0.285 shape=(1, 9000, 1)
logits [[ 0.07723439  0.05191553  0.07810505 -1.3487399 ]]
Iteration 800 of 1000: loss=0.717 " + "l1=0.00637" + "l2=0.711 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.03901983  0.02839453  0.03996938 -1.256397  ]]
Iteration 900 of 1000: loss=0.657 " + "l1=0" + "l2=0.657 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.02212811  0.02456902  0.0226724  -1.221509  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.37 " + "l1=2.37" + "l2=0 f=-0.687 shape=(1, 9000, 1)
logits [[ 3.9442525 -3.3405561  2.4777143 -5.827428 ]]
Iteration 100 of 1000: loss=1.94 " + "l1=1.7" + "l2=0.237 f=-0.544 shape=(1, 9000, 1)
logits [[ 2.8104222 -2.420853   1.6969519 -4.263474 ]]
Iteration 200 of 1000: loss=1.69 " + "l1=1.34" + "l2=0.344 f=-0.496 shape=(1, 9000, 1)
logits [[ 2.1277587 -1.9988321  1.3785615 -3.4900918]]
Iteration 300 of 1000: loss=1.4 " + "l1=0.959" + "l2=0.442 f=-0.5 shape=(1, 9000, 1)
logits [[ 1.3884506 -1.5614995  1.112307  -2.9391477]]
Iteration 400 of 1000: loss=1.14 " + "l1=0.69" + "l2=0.446 f=-0.464 shape=(1, 9000, 1)
logits [[ 0.9456141 -1.17659    0.9456805 -2.5691416]]
Iteration 500 of 1000: loss=0.988 " + "l1=0.552" + "l2=0.437 f=-0.427 shape=(1, 9000, 1)
logits [[ 0.8119691  -0.8811016   0.81641614 -2.4560914 ]]
Iteration 600 of 1000: loss=0.837 " + "l1=0.378" + "l2=0.459 f=-0.385 shape=(1, 9000, 1)
logits [[ 0.61302984 -0.548109    0.6157446  -2.219783  ]]
Iteration 700 of 1000: loss=0.732 " + "l1=0.28" + "l2=0.451 f=-0.352 shape=(1, 9000, 1)
logits [[ 0.48123834 -0.37594345  0.48689637 -1.9992564 ]]
Iteration 800 of 1000: loss=0.642 " + "l1=0.195" + "l2=0.447 f=-0.321 shape=(1, 9000, 1)
logits [[ 0.3588722  -0.23379715  0.3667322  -1.7746347 ]]
Iteration 900 of 1000: loss=0.58 " + "l1=0.143" + "l2=0.437 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.2706348  -0.15735862  0.28340662 -1.6176691 ]]
--- 294.732941865921 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0147 " + "l1=0.0147" + "l2=0 f=-0.687 shape=(1, 9000, 1)
logits [[ 3.9442525 -3.3405561  2.4777143 -5.827428 ]]
Iteration 100 of 1000: loss=0.0144 " + "l1=0.0143" + "l2=0.000174 f=-0.688 shape=(1, 9000, 1)
logits [[ 3.9184208 -3.35117    2.492468  -5.813265 ]]
Iteration 200 of 1000: loss=0.0144 " + "l1=0.0142" + "l2=0.000159 f=-0.689 shape=(1, 9000, 1)
logits [[ 3.9155357 -3.3523135  2.4944701 -5.8117404]]
Iteration 300 of 1000: loss=0.0143 " + "l1=0.0141" + "l2=0.000196 f=-0.689 shape=(1, 9000, 1)
logits [[ 3.9113584 -3.3543866  2.4973435 -5.8099732]]
Iteration 400 of 1000: loss=0.0143 " + "l1=0.0141" + "l2=0.000232 f=-0.689 shape=(1, 9000, 1)
logits [[ 3.9067204 -3.356306   2.5000691 -5.807748 ]]
Iteration 500 of 1000: loss=0.0143 " + "l1=0.014" + "l2=0.000305 f=-0.69 shape=(1, 9000, 1)
logits [[ 3.902147  -3.3578997  2.502387  -5.8054852]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.147 " + "l1=0.147" + "l2=0 f=-0.687 shape=(1, 9000, 1)
logits [[ 3.9442525 -3.3405561  2.4777143 -5.827428 ]]
Iteration 100 of 1000: loss=0.129 " + "l1=0.12" + "l2=0.00889 f=-0.702 shape=(1, 9000, 1)
logits [[ 3.7702603 -3.4129112  2.5692875 -5.7363577]]
Iteration 200 of 1000: loss=0.122 " + "l1=0.11" + "l2=0.0122 f=-0.71 shape=(1, 9000, 1)
logits [[ 3.6968024 -3.4486916  2.6016264 -5.6897674]]
Iteration 300 of 1000: loss=0.115 " + "l1=0.0995" + "l2=0.0155 f=-0.719 shape=(1, 9000, 1)
logits [[ 3.6242414 -3.4839342  2.6288924 -5.6450934]]
Iteration 400 of 1000: loss=0.108 " + "l1=0.0893" + "l2=0.0188 f=-0.728 shape=(1, 9000, 1)
logits [[ 3.5474958 -3.521814   2.6541615 -5.592126 ]]
Iteration 500 of 1000: loss=0.0998 " + "l1=0.0766" + "l2=0.0232 f=-0.738 shape=(1, 9000, 1)
logits [[ 3.4434235 -3.5563998  2.6773777 -5.5148067]]
Iteration 600 of 1000: loss=0.0881 " + "l1=0.0596" + "l2=0.0285 f=-0.751 shape=(1, 9000, 1)
logits [[ 3.3031142 -3.6037147  2.7073312 -5.409756 ]]
Iteration 700 of 1000: loss=0.0753 " + "l1=0.042" + "l2=0.0333 f=-0.761 shape=(1, 9000, 1)
logits [[ 3.1679597 -3.6547153  2.7475977 -5.304964 ]]
Iteration 800 of 1000: loss=0.063 " + "l1=0.0259" + "l2=0.0371 f=-0.761 shape=(1, 9000, 1)
logits [[ 3.0364473 -3.6815596  2.7778246 -5.1767793]]
Iteration 900 of 1000: loss=0.0538 " + "l1=0.0149" + "l2=0.0389 f=-0.764 shape=(1, 9000, 1)
logits [[ 2.9338274 -3.6989503  2.7853236 -5.076107 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.47 " + "l1=1.47" + "l2=0 f=-0.687 shape=(1, 9000, 1)
logits [[ 3.9442525 -3.3405561  2.4777143 -5.827428 ]]
Iteration 100 of 1000: loss=0.243 " + "l1=0" + "l2=0.243 f=-0.807 shape=(1, 9000, 1)
logits [[ 2.7986584 -3.694928   2.8010318 -5.1324077]]
Iteration 200 of 1000: loss=0.15 " + "l1=0" + "l2=0.15 f=-0.798 shape=(1, 9000, 1)
logits [[ 2.8119528 -3.7293158  2.8159091 -5.091485 ]]
Iteration 300 of 1000: loss=0.111 " + "l1=0" + "l2=0.111 f=-0.795 shape=(1, 9000, 1)
logits [[ 2.7927248 -3.7353282  2.8022673 -5.039461 ]]
Iteration 400 of 1000: loss=0.0843 " + "l1=0" + "l2=0.0843 f=-0.792 shape=(1, 9000, 1)
logits [[ 2.7899055 -3.7458727  2.7945528 -5.007713 ]]
Iteration 500 of 1000: loss=0.0708 " + "l1=0.00249" + "l2=0.0683 f=-0.789 shape=(1, 9000, 1)
logits [[ 2.787291  -3.7435858  2.7847986 -4.9829316]]
Iteration 600 of 1000: loss=0.0586 " + "l1=0" + "l2=0.0586 f=-0.783 shape=(1, 9000, 1)
logits [[ 2.7750635 -3.7411351  2.7824774 -4.9473352]]
Iteration 700 of 1000: loss=0.0529 " + "l1=0" + "l2=0.0529 f=-0.779 shape=(1, 9000, 1)
logits [[ 2.7673938 -3.7402651  2.7820044 -4.9242325]]
Iteration 800 of 1000: loss=0.0468 " + "l1=0" + "l2=0.0468 f=-0.774 shape=(1, 9000, 1)
logits [[ 2.766292  -3.7290306  2.772371  -4.907446 ]]
Iteration 900 of 1000: loss=0.0439 " + "l1=0" + "l2=0.0439 f=-0.772 shape=(1, 9000, 1)
logits [[ 2.7529945 -3.7227564  2.7704704 -4.8890014]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.807 " + "l1=0.807" + "l2=0 f=-0.687 shape=(1, 9000, 1)
logits [[ 3.9442525 -3.3405561  2.4777143 -5.827428 ]]
Iteration 100 of 1000: loss=0.252 " + "l1=0.00336" + "l2=0.249 f=-0.797 shape=(1, 9000, 1)
logits [[ 2.8026788 -3.7068229  2.7965767 -5.080371 ]]
Iteration 200 of 1000: loss=0.138 " + "l1=0.00276" + "l2=0.136 f=-0.784 shape=(1, 9000, 1)
logits [[ 2.8089998 -3.7417006  2.803982  -5.0081415]]
Iteration 300 of 1000: loss=0.0962 " + "l1=0" + "l2=0.0962 f=-0.793 shape=(1, 9000, 1)
logits [[ 2.7964976 -3.7502244  2.808839  -5.0265045]]
Iteration 400 of 1000: loss=0.0731 " + "l1=0" + "l2=0.0731 f=-0.788 shape=(1, 9000, 1)
logits [[ 2.7902606 -3.747908   2.7926345 -4.987069 ]]
Iteration 500 of 1000: loss=0.0631 " + "l1=0" + "l2=0.0631 f=-0.786 shape=(1, 9000, 1)
logits [[ 2.7672892 -3.7511454  2.788543  -4.94686  ]]
Iteration 600 of 1000: loss=0.0535 " + "l1=0" + "l2=0.0535 f=-0.78 shape=(1, 9000, 1)
logits [[ 2.7638302 -3.7391157  2.7758193 -4.920649 ]]
Iteration 700 of 1000: loss=0.0475 " + "l1=0" + "l2=0.0475 f=-0.774 shape=(1, 9000, 1)
logits [[ 2.75759   -3.7269664  2.7672946 -4.894686 ]]
Iteration 800 of 1000: loss=0.0432 " + "l1=0" + "l2=0.0432 f=-0.769 shape=(1, 9000, 1)
logits [[ 2.7517493 -3.712171   2.7581453 -4.8720174]]
Iteration 900 of 1000: loss=0.0412 " + "l1=0.00139" + "l2=0.0398 f=-0.765 shape=(1, 9000, 1)
logits [[ 2.750933  -3.6957765  2.7484086 -4.862054 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.477 " + "l1=0.477" + "l2=0 f=-0.687 shape=(1, 9000, 1)
logits [[ 3.9442525 -3.3405561  2.4777143 -5.827428 ]]
Iteration 100 of 1000: loss=0.288 " + "l1=0.189" + "l2=0.0983 f=-0.745 shape=(1, 9000, 1)
logits [[ 3.2934885 -3.5723162  2.7110896 -5.412699 ]]
Iteration 200 of 1000: loss=0.164 " + "l1=0.021" + "l2=0.143 f=-0.783 shape=(1, 9000, 1)
logits [[ 2.885595  -3.7412171  2.820918  -5.096138 ]]
Iteration 300 of 1000: loss=0.0945 " + "l1=0" + "l2=0.0945 f=-0.786 shape=(1, 9000, 1)
logits [[ 2.846275  -3.7675772  2.8497946 -5.0727334]]
Iteration 400 of 1000: loss=0.0697 " + "l1=0" + "l2=0.0697 f=-0.784 shape=(1, 9000, 1)
logits [[ 2.8368974 -3.770589   2.8377655 -5.0392365]]
Iteration 500 of 1000: loss=0.0576 " + "l1=0.000634" + "l2=0.0569 f=-0.782 shape=(1, 9000, 1)
logits [[ 2.8232586 -3.7621574  2.8213093 -5.0109406]]
Iteration 600 of 1000: loss=0.0498 " + "l1=0" + "l2=0.0498 f=-0.779 shape=(1, 9000, 1)
logits [[ 2.8059294 -3.7536275  2.8089943 -4.9754524]]
Iteration 700 of 1000: loss=0.0441 " + "l1=0" + "l2=0.0441 f=-0.773 shape=(1, 9000, 1)
logits [[ 2.7884808 -3.7333572  2.7904704 -4.9376273]]
Iteration 800 of 1000: loss=0.0397 " + "l1=0" + "l2=0.0397 f=-0.766 shape=(1, 9000, 1)
logits [[ 2.771586  -3.7122352  2.7734516 -4.8962564]]
Iteration 900 of 1000: loss=0.0368 " + "l1=0" + "l2=0.0368 f=-0.761 shape=(1, 9000, 1)
logits [[ 2.7545109 -3.6919453  2.7568283 -4.863259 ]]
--- 269.0900032520294 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0977 " + "l1=0.0977" + "l2=0 f=-0.687 shape=(1, 9000, 1)
logits [[ 3.9442525 -3.3405561  2.4777143 -5.827428 ]]
Iteration 100 of 1000: loss=0.0967 " + "l1=0.0961" + "l2=0.000582 f=-0.679 shape=(1, 9000, 1)
logits [[ 3.8823445 -3.31609    2.4460766 -5.7276864]]
Iteration 200 of 1000: loss=0.0964 " + "l1=0.0958" + "l2=0.000664 f=-0.678 shape=(1, 9000, 1)
logits [[ 3.869068  -3.31145    2.4393861 -5.7070146]]
Iteration 300 of 1000: loss=0.0962 " + "l1=0.0954" + "l2=0.000811 f=-0.676 shape=(1, 9000, 1)
logits [[ 3.8550255 -3.3066068  2.4315975 -5.684712 ]]
Iteration 400 of 1000: loss=0.096 " + "l1=0.095" + "l2=0.000974 f=-0.675 shape=(1, 9000, 1)
logits [[ 3.841186  -3.3023515  2.424478  -5.6630964]]
Iteration 500 of 1000: loss=0.0958 " + "l1=0.0947" + "l2=0.00113 f=-0.674 shape=(1, 9000, 1)
logits [[ 3.8281527 -3.298525   2.4182663 -5.6433406]]
Iteration 600 of 1000: loss=0.0957 " + "l1=0.0944" + "l2=0.00131 f=-0.673 shape=(1, 9000, 1)
logits [[ 3.8146152 -3.2952282  2.41246   -5.623545 ]]
Iteration 700 of 1000: loss=0.0956 " + "l1=0.094" + "l2=0.00152 f=-0.672 shape=(1, 9000, 1)
logits [[ 3.799882  -3.2928896  2.407577  -5.6037827]]
Iteration 800 of 1000: loss=0.0954 " + "l1=0.0937" + "l2=0.00164 f=-0.672 shape=(1, 9000, 1)
logits [[ 3.786264  -3.2910743  2.4035506 -5.5854144]]
Iteration 900 of 1000: loss=0.0952 " + "l1=0.0934" + "l2=0.00177 f=-0.671 shape=(1, 9000, 1)
logits [[ 3.7733233 -3.2895646  2.4001594 -5.568184 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.977 " + "l1=0.977" + "l2=0 f=-0.687 shape=(1, 9000, 1)
logits [[ 3.9442525 -3.3405561  2.4777143 -5.827428 ]]
Iteration 100 of 1000: loss=0.875 " + "l1=0.819" + "l2=0.0564 f=-0.621 shape=(1, 9000, 1)
logits [[ 3.32657   -3.0987403  2.1518013 -4.8633823]]
Iteration 200 of 1000: loss=0.82 " + "l1=0.731" + "l2=0.0894 f=-0.6 shape=(1, 9000, 1)
logits [[ 2.965032  -3.014384   1.9909089 -4.3418374]]
Iteration 300 of 1000: loss=0.763 " + "l1=0.649" + "l2=0.114 f=-0.594 shape=(1, 9000, 1)
logits [[ 2.616863  -2.9716063  1.8532541 -3.8731537]]
Iteration 400 of 1000: loss=0.704 " + "l1=0.57" + "l2=0.134 f=-0.588 shape=(1, 9000, 1)
logits [[ 2.2792618 -2.942942   1.729645  -3.419019 ]]
Iteration 500 of 1000: loss=0.648 " + "l1=0.495" + "l2=0.153 f=-0.588 shape=(1, 9000, 1)
logits [[ 1.9458916 -2.8933032  1.5960386 -2.9996002]]
Iteration 600 of 1000: loss=0.58 " + "l1=0.403" + "l2=0.177 f=-0.584 shape=(1, 9000, 1)
logits [[ 1.5349357 -2.8170042  1.4383409 -2.4933896]]
Iteration 700 of 1000: loss=0.519 " + "l1=0.342" + "l2=0.177 f=-0.562 shape=(1, 9000, 1)
logits [[ 1.3017764 -2.738288   1.3024554 -2.1146939]]
Iteration 800 of 1000: loss=0.474 " + "l1=0.3" + "l2=0.174 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.1715443 -2.6905568  1.1728301 -1.828063 ]]
Iteration 900 of 1000: loss=0.435 " + "l1=0.264" + "l2=0.171 f=-0.525 shape=(1, 9000, 1)
logits [[ 1.0641308 -2.6596851  1.066907  -1.5709239]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.77 " + "l1=9.77" + "l2=0 f=-0.687 shape=(1, 9000, 1)
logits [[ 3.9442525 -3.3405561  2.4777143 -5.827428 ]]
Iteration 100 of 1000: loss=2.46 " + "l1=0.0148" + "l2=2.44 f=-0.28 shape=(1, 9000, 1)
logits [[ 0.2564932  -1.8738376   0.2536957   0.24168554]]
Iteration 200 of 1000: loss=1.45 " + "l1=0" + "l2=1.45 f=-0.307 shape=(1, 9000, 1)
logits [[ 0.22689411 -1.9266405   0.23571531  0.23758957]]
Iteration 300 of 1000: loss=1.12 " + "l1=0" + "l2=1.12 f=-0.322 shape=(1, 9000, 1)
logits [[ 0.20459187 -1.9563253   0.23105697  0.2311686 ]]
Iteration 400 of 1000: loss=0.927 " + "l1=0.022" + "l2=0.905 f=-0.331 shape=(1, 9000, 1)
logits [[ 0.21919891 -1.9916841   0.23609313  0.21410936]]
Iteration 500 of 1000: loss=0.769 " + "l1=0" + "l2=0.769 f=-0.332 shape=(1, 9000, 1)
logits [[ 0.21306367 -2.0277798   0.21867085  0.26644492]]
Iteration 600 of 1000: loss=0.657 " + "l1=0.02" + "l2=0.637 f=-0.341 shape=(1, 9000, 1)
logits [[ 0.24777675 -2.0869715   0.24608879  0.22773474]]
Iteration 700 of 1000: loss=0.563 " + "l1=0" + "l2=0.563 f=-0.341 shape=(1, 9000, 1)
logits [[ 0.22471482 -2.1106448   0.23022304  0.29293498]]
Iteration 800 of 1000: loss=0.477 " + "l1=0" + "l2=0.477 f=-0.346 shape=(1, 9000, 1)
logits [[ 0.25871316 -2.170343    0.25614536  0.27237386]]
Iteration 900 of 1000: loss=0.421 " + "l1=0" + "l2=0.421 f=-0.354 shape=(1, 9000, 1)
logits [[ 0.25349373 -2.2499907   0.2704749   0.3112853 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.37 " + "l1=5.37" + "l2=0 f=-0.687 shape=(1, 9000, 1)
logits [[ 3.9442525 -3.3405561  2.4777143 -5.827428 ]]
Iteration 100 of 1000: loss=2.44 " + "l1=1.01" + "l2=1.43 f=-0.391 shape=(1, 9000, 1)
logits [[ 0.84034276 -2.2372777   0.8314838  -0.9981845 ]]
Iteration 200 of 1000: loss=1.31 " + "l1=0.00692" + "l2=1.31 f=-0.317 shape=(1, 9000, 1)
logits [[ 0.22350255 -1.9356467   0.22787358  0.2152988 ]]
Iteration 300 of 1000: loss=0.92 " + "l1=0" + "l2=0.92 f=-0.325 shape=(1, 9000, 1)
logits [[ 0.17899922 -1.9350388   0.2094497   0.24737114]]
Iteration 400 of 1000: loss=0.712 " + "l1=0" + "l2=0.712 f=-0.336 shape=(1, 9000, 1)
logits [[ 0.18819247 -1.995644    0.20627388  0.25592688]]
Iteration 500 of 1000: loss=0.558 " + "l1=0" + "l2=0.558 f=-0.348 shape=(1, 9000, 1)
logits [[ 0.22864524 -2.0764444   0.22620249  0.22976896]]
Iteration 600 of 1000: loss=0.466 " + "l1=0" + "l2=0.466 f=-0.356 shape=(1, 9000, 1)
logits [[ 0.23230755 -2.1338134   0.2350587   0.24262998]]
Iteration 700 of 1000: loss=0.404 " + "l1=0" + "l2=0.404 f=-0.362 shape=(1, 9000, 1)
logits [[ 0.22385845 -2.1801953   0.242076    0.26555383]]
Iteration 800 of 1000: loss=0.353 " + "l1=0.00396" + "l2=0.349 f=-0.363 shape=(1, 9000, 1)
logits [[ 0.26034188 -2.2218463   0.25493333  0.25314394]]
Iteration 900 of 1000: loss=0.31 " + "l1=0" + "l2=0.31 f=-0.37 shape=(1, 9000, 1)
logits [[ 0.24252656 -2.2559175   0.26452008  0.2686957 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.18 " + "l1=3.18" + "l2=0 f=-0.687 shape=(1, 9000, 1)
logits [[ 3.9442525 -3.3405561  2.4777143 -5.827428 ]]
Iteration 100 of 1000: loss=2.03 " + "l1=1.41" + "l2=0.623 f=-0.481 shape=(1, 9000, 1)
logits [[ 1.8285805 -2.5967844  1.3577038 -2.514817 ]]
Iteration 200 of 1000: loss=1.38 " + "l1=0.616" + "l2=0.769 f=-0.417 shape=(1, 9000, 1)
logits [[ 0.83628255 -2.2887871   0.84030825 -1.0562774 ]]
Iteration 300 of 1000: loss=1.02 " + "l1=0.275" + "l2=0.744 f=-0.375 shape=(1, 9000, 1)
logits [[ 0.4887618  -2.1198144   0.4896495  -0.35703143]]
Iteration 400 of 1000: loss=0.714 " + "l1=0.0266" + "l2=0.688 f=-0.353 shape=(1, 9000, 1)
logits [[ 0.23378971 -2.0365074   0.23541658  0.153624  ]]
Iteration 500 of 1000: loss=0.55 " + "l1=0.0137" + "l2=0.536 f=-0.363 shape=(1, 9000, 1)
logits [[ 0.2310586  -2.106893    0.23243725  0.19035882]]
Iteration 600 of 1000: loss=0.434 " + "l1=0.00142" + "l2=0.433 f=-0.369 shape=(1, 9000, 1)
logits [[ 0.22548762 -2.1806002   0.24271797  0.23835102]]
Iteration 700 of 1000: loss=0.361 " + "l1=0.00119" + "l2=0.36 f=-0.374 shape=(1, 9000, 1)
logits [[ 0.23295513 -2.237045    0.25587454  0.25222242]]
Iteration 800 of 1000: loss=0.313 " + "l1=0.00591" + "l2=0.307 f=-0.377 shape=(1, 9000, 1)
logits [[ 0.25806907 -2.2728202   0.26247418  0.24428752]]
Iteration 900 of 1000: loss=0.273 " + "l1=0" + "l2=0.273 f=-0.378 shape=(1, 9000, 1)
logits [[ 0.2468858  -2.2944214   0.26400018  0.27284747]]
--- 298.67214345932007 seconds ---
Adv result:3
Loading record A03905
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0702 " + "l1=0.0702" + "l2=0 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.0740466 -2.94987    2.7684724 -6.0142703]]
Iteration 100 of 1000: loss=0.07 " + "l1=0.0698" + "l2=0.000205 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.0462236 -2.93597    2.7574837 -5.9860497]]
Iteration 200 of 1000: loss=0.07 " + "l1=0.0698" + "l2=0.000177 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.044691  -2.9355803  2.7569337 -5.9847074]]
Iteration 300 of 1000: loss=0.07 " + "l1=0.0698" + "l2=0.000215 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.0414    -2.934406   2.7559476 -5.981435 ]]
Iteration 400 of 1000: loss=0.07 " + "l1=0.0697" + "l2=0.00025 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.0379553 -2.933131   2.7549741 -5.9779425]]
Iteration 500 of 1000: loss=0.0699 " + "l1=0.0697" + "l2=0.000285 f=-0.529 shape=(1, 9000, 1)
logits [[ 4.0345135 -2.9318655  2.7540364 -5.9744983]]
Iteration 600 of 1000: loss=0.07 " + "l1=0.0696" + "l2=0.000368 f=-0.529 shape=(1, 9000, 1)
logits [[ 4.031205  -2.9306846  2.753196  -5.9712334]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.702 " + "l1=0.702" + "l2=0 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.0740466 -2.94987    2.7684724 -6.0142703]]
Iteration 100 of 1000: loss=0.684 " + "l1=0.675" + "l2=0.00955 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.8933187 -2.8524098  2.6910129 -5.8312764]]
Iteration 200 of 1000: loss=0.678 " + "l1=0.663" + "l2=0.0143 f=-0.522 shape=(1, 9000, 1)
logits [[ 3.8189585 -2.8145468  2.6600935 -5.751619 ]]
Iteration 300 of 1000: loss=0.672 " + "l1=0.654" + "l2=0.0182 f=-0.518 shape=(1, 9000, 1)
logits [[ 3.7582238 -2.7827802  2.6345644 -5.6833673]]
Iteration 400 of 1000: loss=0.667 " + "l1=0.647" + "l2=0.0208 f=-0.515 shape=(1, 9000, 1)
logits [[ 3.708345  -2.7576077  2.6163917 -5.6256757]]
Iteration 500 of 1000: loss=0.662 " + "l1=0.639" + "l2=0.0233 f=-0.51 shape=(1, 9000, 1)
logits [[ 3.6596518 -2.7286408  2.5964432 -5.5683966]]
Iteration 600 of 1000: loss=0.654 " + "l1=0.625" + "l2=0.0298 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.5899158 -2.6564062  2.5457811 -5.4934216]]
Iteration 700 of 1000: loss=0.645 " + "l1=0.608" + "l2=0.0376 f=-0.497 shape=(1, 9000, 1)
logits [[ 3.508388  -2.569173   2.4821978 -5.410818 ]]
Iteration 800 of 1000: loss=0.638 " + "l1=0.599" + "l2=0.0394 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.4550428 -2.5337088  2.4554431 -5.348588 ]]
Iteration 900 of 1000: loss=0.631 " + "l1=0.59" + "l2=0.0418 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.3971136 -2.499517   2.4271836 -5.2799973]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.02 " + "l1=7.02" + "l2=0 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.0740466 -2.94987    2.7684724 -6.0142703]]
Iteration 100 of 1000: loss=4.9 " + "l1=3.75" + "l2=1.15 f=-0.396 shape=(1, 9000, 1)
logits [[ 2.0444725 -1.7026495  1.8698752 -3.7945888]]
Iteration 200 of 1000: loss=4.2 " + "l1=2.92" + "l2=1.28 f=-0.384 shape=(1, 9000, 1)
logits [[ 1.5558044 -1.3626002  1.5573967 -3.2852986]]
Iteration 300 of 1000: loss=3.77 " + "l1=2.56" + "l2=1.22 f=-0.384 shape=(1, 9000, 1)
logits [[ 1.3729587 -1.1827303  1.3704873 -3.09816  ]]
Iteration 400 of 1000: loss=3.4 " + "l1=2.21" + "l2=1.19 f=-0.38 shape=(1, 9000, 1)
logits [[ 1.1892889 -1.0094831  1.1981056 -2.8976061]]
Iteration 500 of 1000: loss=3.02 " + "l1=1.75" + "l2=1.27 f=-0.375 shape=(1, 9000, 1)
logits [[ 0.9620059 -0.7852384  0.9617892 -2.6369274]]
Iteration 600 of 1000: loss=2.74 " + "l1=1.49" + "l2=1.25 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.812749   -0.6751435   0.81722164 -2.4161704 ]]
Iteration 700 of 1000: loss=2.53 " + "l1=1.3" + "l2=1.24 f=-0.355 shape=(1, 9000, 1)
logits [[ 0.7090297 -0.5870072  0.7092499 -2.2505856]]
Iteration 800 of 1000: loss=2.35 " + "l1=1.13" + "l2=1.22 f=-0.339 shape=(1, 9000, 1)
logits [[ 0.5914774 -0.524454   0.6031431 -2.0262945]]
Iteration 900 of 1000: loss=2.18 " + "l1=0.996" + "l2=1.19 f=-0.323 shape=(1, 9000, 1)
logits [[ 0.50765544 -0.47461748  0.52152157 -1.8476195 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=70.2 " + "l1=70.2" + "l2=0 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.0740466 -2.94987    2.7684724 -6.0142703]]
Iteration 100 of 1000: loss=13.4 " + "l1=0" + "l2=13.4 f=-0.342 shape=(1, 9000, 1)
logits [[-0.41165754 -0.02494813 -0.04752297 -0.8825668 ]]
Iteration 200 of 1000: loss=8.92 " + "l1=0" + "l2=8.92 f=-0.361 shape=(1, 9000, 1)
logits [[-0.39131716 -0.01102994 -0.02064832 -1.0214852 ]]
Iteration 300 of 1000: loss=7.75 " + "l1=0" + "l2=7.75 f=-0.357 shape=(1, 9000, 1)
logits [[-0.3456112  -0.00388891 -0.00458555 -1.0757824 ]]
Iteration 400 of 1000: loss=7.09 " + "l1=0" + "l2=7.09 f=-0.349 shape=(1, 9000, 1)
logits [[-0.31096333  0.01223914  0.00319533 -1.1015425 ]]
Iteration 500 of 1000: loss=6.65 " + "l1=0.176" + "l2=6.48 f=-0.346 shape=(1, 9000, 1)
logits [[-0.24917984  0.00886982  0.02645455 -1.170641  ]]
Iteration 600 of 1000: loss=6.13 " + "l1=0" + "l2=6.13 f=-0.345 shape=(1, 9000, 1)
logits [[-0.23703475  0.02977975  0.02854762 -1.200348  ]]
Iteration 700 of 1000: loss=5.83 " + "l1=0.0561" + "l2=5.77 f=-0.349 shape=(1, 9000, 1)
logits [[-0.21782306  0.03428409  0.03989072 -1.2534647 ]]
Iteration 800 of 1000: loss=5.51 " + "l1=0.0245" + "l2=5.49 f=-0.354 shape=(1, 9000, 1)
logits [[-0.22379681  0.04088903  0.04333697 -1.2749875 ]]
Iteration 900 of 1000: loss=5.27 " + "l1=0" + "l2=5.27 f=-0.361 shape=(1, 9000, 1)
logits [[-0.23550776  0.0694932   0.04911125 -1.3253157 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=38.6 " + "l1=38.6" + "l2=0 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.0740466 -2.94987    2.7684724 -6.0142703]]
Iteration 100 of 1000: loss=11.9 " + "l1=4.23" + "l2=7.69 f=-0.361 shape=(1, 9000, 1)
logits [[ 0.2539991  -0.41142857  0.35841194 -1.6435463 ]]
Iteration 200 of 1000: loss=7.64 " + "l1=0.0153" + "l2=7.63 f=-0.356 shape=(1, 9000, 1)
logits [[-0.32472315  0.00568743  0.00847475 -1.113357  ]]
Iteration 300 of 1000: loss=6.51 " + "l1=0.00782" + "l2=6.51 f=-0.36 shape=(1, 9000, 1)
logits [[-0.2962794   0.02216885  0.02359054 -1.1892807 ]]
Iteration 400 of 1000: loss=5.87 " + "l1=0.00719" + "l2=5.86 f=-0.367 shape=(1, 9000, 1)
logits [[-0.27198657  0.03105572  0.03236367 -1.2578051 ]]
Iteration 500 of 1000: loss=5.33 " + "l1=0.119" + "l2=5.21 f=-0.378 shape=(1, 9000, 1)
logits [[-0.24613065  0.03529929  0.0570046  -1.3574114 ]]
Iteration 600 of 1000: loss=4.83 " + "l1=0" + "l2=4.83 f=-0.373 shape=(1, 9000, 1)
logits [[-0.25260216  0.05978201  0.05761652 -1.3585615 ]]
Iteration 700 of 1000: loss=4.5 " + "l1=0.00108" + "l2=4.5 f=-0.369 shape=(1, 9000, 1)
logits [[-0.22830082  0.05255299  0.0527491  -1.3533746 ]]
Iteration 800 of 1000: loss=4.25 " + "l1=0.00682" + "l2=4.24 f=-0.366 shape=(1, 9000, 1)
logits [[-0.21707803  0.04459659  0.04583663 -1.3355196 ]]
Iteration 900 of 1000: loss=4.04 " + "l1=0.0458" + "l2=4 f=-0.362 shape=(1, 9000, 1)
logits [[-0.2107085   0.03390327  0.04223533 -1.3119296 ]]
--- 276.07351541519165 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0131 " + "l1=0.0131" + "l2=0 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.0740466 -2.94987    2.7684724 -6.0142703]]
Iteration 100 of 1000: loss=0.0129 " + "l1=0.0128" + "l2=0.000146 f=-0.531 shape=(1, 9000, 1)
logits [[ 4.0513134 -2.9535801  2.7722945 -5.9922347]]
Iteration 200 of 1000: loss=0.0129 " + "l1=0.0128" + "l2=0.00011 f=-0.531 shape=(1, 9000, 1)
logits [[ 4.0510573 -2.953851   2.7723882 -5.9923377]]
Iteration 300 of 1000: loss=0.0129 " + "l1=0.0128" + "l2=0.000135 f=-0.531 shape=(1, 9000, 1)
logits [[ 4.0486846 -2.954358   2.7727869 -5.990555 ]]
Iteration 400 of 1000: loss=0.0129 " + "l1=0.0127" + "l2=0.000176 f=-0.531 shape=(1, 9000, 1)
logits [[ 4.045874  -2.9548876  2.7732217 -5.9884214]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.131 " + "l1=0.131" + "l2=0 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.0740466 -2.94987    2.7684724 -6.0142703]]
Iteration 100 of 1000: loss=0.12 " + "l1=0.116" + "l2=0.00462 f=-0.531 shape=(1, 9000, 1)
logits [[ 3.949318  -2.9711053  2.7913706 -5.8947825]]
Iteration 200 of 1000: loss=0.117 " + "l1=0.11" + "l2=0.00687 f=-0.532 shape=(1, 9000, 1)
logits [[ 3.8960094 -2.9775052  2.7965689 -5.8449936]]
Iteration 300 of 1000: loss=0.114 " + "l1=0.105" + "l2=0.00863 f=-0.534 shape=(1, 9000, 1)
logits [[ 3.8508325 -2.9811122  2.7992086 -5.806447 ]]
Iteration 400 of 1000: loss=0.111 " + "l1=0.101" + "l2=0.00996 f=-0.536 shape=(1, 9000, 1)
logits [[ 3.8134644 -2.9849315  2.8031218 -5.7768106]]
Iteration 500 of 1000: loss=0.108 " + "l1=0.0971" + "l2=0.011 f=-0.538 shape=(1, 9000, 1)
logits [[ 3.780034  -2.991065   2.8089962 -5.75069  ]]
Iteration 600 of 1000: loss=0.105 " + "l1=0.0929" + "l2=0.0121 f=-0.54 shape=(1, 9000, 1)
logits [[ 3.745918  -2.99932    2.817288  -5.7231717]]
Iteration 700 of 1000: loss=0.101 " + "l1=0.0882" + "l2=0.0133 f=-0.542 shape=(1, 9000, 1)
logits [[ 3.708658  -3.009308   2.8269966 -5.692768 ]]
Iteration 800 of 1000: loss=0.0982 " + "l1=0.0841" + "l2=0.0142 f=-0.544 shape=(1, 9000, 1)
logits [[ 3.6732872 -3.0163531  2.8327675 -5.664024 ]]
Iteration 900 of 1000: loss=0.0949 " + "l1=0.0804" + "l2=0.0145 f=-0.545 shape=(1, 9000, 1)
logits [[ 3.6384428 -3.0205538  2.8346105 -5.6339855]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.31 " + "l1=1.31" + "l2=0 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.0740466 -2.94987    2.7684724 -6.0142703]]
Iteration 100 of 1000: loss=0.384 " + "l1=0.00387" + "l2=0.38 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.9122918 -3.1194942  2.9084227 -4.8459373]]
Iteration 200 of 1000: loss=0.258 " + "l1=0.00296" + "l2=0.255 f=-0.539 shape=(1, 9000, 1)
logits [[ 2.9233272 -3.1282508  2.9203718 -4.872367 ]]
Iteration 300 of 1000: loss=0.207 " + "l1=0" + "l2=0.207 f=-0.54 shape=(1, 9000, 1)
logits [[ 2.9358704 -3.1392708  2.946688  -4.9041643]]
Iteration 400 of 1000: loss=0.165 " + "l1=0" + "l2=0.165 f=-0.539 shape=(1, 9000, 1)
logits [[ 2.9614944 -3.1422017  2.9674997 -4.9434195]]
Iteration 500 of 1000: loss=0.137 " + "l1=0" + "l2=0.137 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.9679341 -3.145283   2.978098  -4.9454265]]
Iteration 600 of 1000: loss=0.114 " + "l1=0" + "l2=0.114 f=-0.534 shape=(1, 9000, 1)
logits [[ 2.9779506 -3.147277   2.980364  -4.9465795]]
Iteration 700 of 1000: loss=0.0982 " + "l1=0.00135" + "l2=0.0968 f=-0.532 shape=(1, 9000, 1)
logits [[ 2.9798937 -3.1484425  2.9785419 -4.9393387]]
Iteration 800 of 1000: loss=0.0847 " + "l1=0.00047" + "l2=0.0842 f=-0.532 shape=(1, 9000, 1)
logits [[ 2.97451   -3.1486835  2.9740398 -4.925945 ]]
Iteration 900 of 1000: loss=0.0769 " + "l1=0" + "l2=0.0769 f=-0.532 shape=(1, 9000, 1)
logits [[ 2.959088  -3.151589   2.9704592 -4.9057426]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.718 " + "l1=0.718" + "l2=0 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.0740466 -2.94987    2.7684724 -6.0142703]]
Iteration 100 of 1000: loss=0.434 " + "l1=0.289" + "l2=0.145 f=-0.541 shape=(1, 9000, 1)
logits [[ 3.3716133 -3.0403697  2.846159  -5.3396926]]
Iteration 200 of 1000: loss=0.288 " + "l1=0.0592" + "l2=0.229 f=-0.543 shape=(1, 9000, 1)
logits [[ 3.0247624 -3.1219728  2.9171174 -4.993853 ]]
Iteration 300 of 1000: loss=0.197 " + "l1=0.00182" + "l2=0.195 f=-0.539 shape=(1, 9000, 1)
logits [[ 2.958326  -3.143014   2.9550257 -4.9277005]]
Iteration 400 of 1000: loss=0.152 " + "l1=0.00219" + "l2=0.149 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.9789033 -3.1485739  2.974925  -4.9476743]]
Iteration 500 of 1000: loss=0.12 " + "l1=0.000601" + "l2=0.12 f=-0.532 shape=(1, 9000, 1)
logits [[ 2.987319  -3.158294   2.9862256 -4.943201 ]]
Iteration 600 of 1000: loss=0.101 " + "l1=0" + "l2=0.101 f=-0.53 shape=(1, 9000, 1)
logits [[ 2.9841843 -3.1657584  2.9892476 -4.9282336]]
Iteration 700 of 1000: loss=0.0859 " + "l1=0" + "l2=0.0859 f=-0.53 shape=(1, 9000, 1)
logits [[ 2.9789915 -3.1662984  2.9797678 -4.9138107]]
Iteration 800 of 1000: loss=0.0756 " + "l1=0" + "l2=0.0756 f=-0.531 shape=(1, 9000, 1)
logits [[ 2.9671571 -3.166846   2.9723449 -4.89491  ]]
Iteration 900 of 1000: loss=0.0671 " + "l1=0" + "l2=0.0671 f=-0.53 shape=(1, 9000, 1)
logits [[ 2.9599292 -3.1635368  2.9654248 -4.883675 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.424 " + "l1=0.424" + "l2=0 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.0740466 -2.94987    2.7684724 -6.0142703]]
Iteration 100 of 1000: loss=0.326 " + "l1=0.278" + "l2=0.048 f=-0.535 shape=(1, 9000, 1)
logits [[ 3.6745892 -3.0040064  2.8200183 -5.629741 ]]
Iteration 200 of 1000: loss=0.283 " + "l1=0.211" + "l2=0.0715 f=-0.539 shape=(1, 9000, 1)
logits [[ 3.4795315 -3.023672   2.829905  -5.4400764]]
Iteration 300 of 1000: loss=0.24 " + "l1=0.144" + "l2=0.0955 f=-0.543 shape=(1, 9000, 1)
logits [[ 3.310355  -3.060125   2.8658864 -5.2877645]]
Iteration 400 of 1000: loss=0.197 " + "l1=0.0865" + "l2=0.111 f=-0.544 shape=(1, 9000, 1)
logits [[ 3.1800213 -3.103823   2.9138005 -5.166396 ]]
Iteration 500 of 1000: loss=0.153 " + "l1=0.0277" + "l2=0.125 f=-0.54 shape=(1, 9000, 1)
logits [[ 3.0420992 -3.1430748  2.9567194 -5.0151143]]
Iteration 600 of 1000: loss=0.113 " + "l1=0.000203" + "l2=0.113 f=-0.532 shape=(1, 9000, 1)
logits [[ 2.9778848 -3.1658256  2.977261  -4.9168024]]
Iteration 700 of 1000: loss=0.0917 " + "l1=0.000203" + "l2=0.0915 f=-0.531 shape=(1, 9000, 1)
logits [[ 2.9784515 -3.1762471  2.9778278 -4.903647 ]]
Iteration 800 of 1000: loss=0.0781 " + "l1=0" + "l2=0.0781 f=-0.531 shape=(1, 9000, 1)
logits [[ 2.9681706 -3.18103    2.9683967 -4.8789406]]
Iteration 900 of 1000: loss=0.0684 " + "l1=0" + "l2=0.0684 f=-0.531 shape=(1, 9000, 1)
logits [[ 2.9549236 -3.1813567  2.956099  -4.852077 ]]
--- 263.3188109397888 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.101 " + "l1=0.101" + "l2=0 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.0740466 -2.94987    2.7684724 -6.0142703]]
Iteration 100 of 1000: loss=0.1 " + "l1=0.0998" + "l2=0.000425 f=-0.529 shape=(1, 9000, 1)
logits [[ 4.0292716 -2.947713   2.7572787 -5.9529977]]
Iteration 200 of 1000: loss=0.1 " + "l1=0.0997" + "l2=0.000459 f=-0.528 shape=(1, 9000, 1)
logits [[ 4.0219603 -2.9475815  2.7559028 -5.943652 ]]
Iteration 300 of 1000: loss=0.1 " + "l1=0.0995" + "l2=0.000542 f=-0.528 shape=(1, 9000, 1)
logits [[ 4.0131445 -2.9472752  2.7541285 -5.932078 ]]
Iteration 400 of 1000: loss=0.0999 " + "l1=0.0993" + "l2=0.000641 f=-0.528 shape=(1, 9000, 1)
logits [[ 4.0051584 -2.9469862  2.7524383 -5.9213347]]
Iteration 500 of 1000: loss=0.0998 " + "l1=0.0991" + "l2=0.00072 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.9985633 -2.9466372  2.7508376 -5.9119167]]
Iteration 600 of 1000: loss=0.0997 " + "l1=0.0989" + "l2=0.000808 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.9918728 -2.9462416  2.749196  -5.902309 ]]
Iteration 700 of 1000: loss=0.0997 " + "l1=0.0988" + "l2=0.000936 f=-0.526 shape=(1, 9000, 1)
logits [[ 3.9853296 -2.9458766  2.7474687 -5.8928094]]
Iteration 800 of 1000: loss=0.0996 " + "l1=0.0986" + "l2=0.000986 f=-0.526 shape=(1, 9000, 1)
logits [[ 3.9786973 -2.9455457  2.7456965 -5.8831496]]
Iteration 900 of 1000: loss=0.0995 " + "l1=0.0985" + "l2=0.00108 f=-0.526 shape=(1, 9000, 1)
logits [[ 3.9721723 -2.9452605  2.7438827 -5.873554 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.01 " + "l1=1.01" + "l2=0 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.0740466 -2.94987    2.7684724 -6.0142703]]
Iteration 100 of 1000: loss=0.955 " + "l1=0.929" + "l2=0.0261 f=-0.514 shape=(1, 9000, 1)
logits [[ 3.7395728 -2.9231904  2.676954  -5.54937  ]]
Iteration 200 of 1000: loss=0.932 " + "l1=0.89" + "l2=0.0426 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.575407  -2.9118626  2.633743  -5.321107 ]]
Iteration 300 of 1000: loss=0.914 " + "l1=0.858" + "l2=0.0559 f=-0.497 shape=(1, 9000, 1)
logits [[ 3.4465961 -2.8987978  2.5963025 -5.1339707]]
Iteration 400 of 1000: loss=0.895 " + "l1=0.83" + "l2=0.0655 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.3339348 -2.8816752  2.5593429 -4.9622517]]
Iteration 500 of 1000: loss=0.873 " + "l1=0.799" + "l2=0.0732 f=-0.478 shape=(1, 9000, 1)
logits [[ 3.2152522 -2.860903   2.5124452 -4.777505 ]]
Iteration 600 of 1000: loss=0.849 " + "l1=0.77" + "l2=0.0786 f=-0.465 shape=(1, 9000, 1)
logits [[ 3.1047022 -2.8301642  2.4612312 -4.595827 ]]
Iteration 700 of 1000: loss=0.821 " + "l1=0.737" + "l2=0.0839 f=-0.452 shape=(1, 9000, 1)
logits [[ 2.9812555 -2.7892594  2.392812  -4.3934903]]
Iteration 800 of 1000: loss=0.791 " + "l1=0.702" + "l2=0.0887 f=-0.44 shape=(1, 9000, 1)
logits [[ 2.8416016 -2.7215652  2.296818  -4.177105 ]]
Iteration 900 of 1000: loss=0.757 " + "l1=0.664" + "l2=0.0933 f=-0.427 shape=(1, 9000, 1)
logits [[ 2.693862  -2.6562772  2.2006583 -3.9454052]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.1 " + "l1=10.1" + "l2=0 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.0740466 -2.94987    2.7684724 -6.0142703]]
Iteration 100 of 1000: loss=5.5 " + "l1=3.51" + "l2=1.99 f=-0.287 shape=(1, 9000, 1)
logits [[ 1.5389597 -2.2628694  1.5402675 -1.965953 ]]
Iteration 200 of 1000: loss=4.13 " + "l1=1.51" + "l2=2.62 f=-0.21 shape=(1, 9000, 1)
logits [[ 0.7787578 -1.9367652  0.9121731 -0.594284 ]]
Iteration 300 of 1000: loss=3.33 " + "l1=0.451" + "l2=2.87 f=-0.168 shape=(1, 9000, 1)
logits [[ 0.37171903 -1.7675908   0.58734107  0.13584188]]
Iteration 400 of 1000: loss=2.58 " + "l1=0.00822" + "l2=2.57 f=-0.144 shape=(1, 9000, 1)
logits [[ 0.22733983 -1.623434    0.4138402   0.40562174]]
Iteration 500 of 1000: loss=2.09 " + "l1=0.0155" + "l2=2.07 f=-0.145 shape=(1, 9000, 1)
logits [[ 0.24666458 -1.6234585   0.40559286  0.3901127 ]]
Iteration 600 of 1000: loss=1.75 " + "l1=0.0172" + "l2=1.74 f=-0.146 shape=(1, 9000, 1)
logits [[ 0.25364953 -1.6424983   0.41077918  0.39354205]]
Iteration 700 of 1000: loss=1.49 " + "l1=0.00856" + "l2=1.48 f=-0.149 shape=(1, 9000, 1)
logits [[ 0.24642739 -1.6578141   0.4118165   0.40325335]]
Iteration 800 of 1000: loss=1.24 " + "l1=0" + "l2=1.24 f=-0.154 shape=(1, 9000, 1)
logits [[ 0.26548693 -1.6749282   0.395857    0.3966249 ]]
Iteration 900 of 1000: loss=1.08 " + "l1=0.0156" + "l2=1.06 f=-0.156 shape=(1, 9000, 1)
logits [[ 0.29013106 -1.68845     0.39531803  0.37976   ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.55 " + "l1=5.55" + "l2=0 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.0740466 -2.94987    2.7684724 -6.0142703]]
Iteration 100 of 1000: loss=3.87 " + "l1=3.03" + "l2=0.836 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.2289107 -2.7089295  2.2071357 -3.2792068]]
Iteration 200 of 1000: loss=3.23 " + "l1=2.1" + "l2=1.14 f=-0.286 shape=(1, 9000, 1)
logits [[ 1.6509477 -2.2860303  1.6525276 -2.1609936]]
Iteration 300 of 1000: loss=2.72 " + "l1=1.59" + "l2=1.13 f=-0.233 shape=(1, 9000, 1)
logits [[ 1.3736889 -2.1619823  1.3728874 -1.5165411]]
Iteration 400 of 1000: loss=2.16 " + "l1=1.07" + "l2=1.1 f=-0.197 shape=(1, 9000, 1)
logits [[ 1.0795351  -2.111172    1.0939916  -0.84850055]]
Iteration 500 of 1000: loss=1.67 " + "l1=0.562" + "l2=1.11 f=-0.187 shape=(1, 9000, 1)
logits [[ 0.68797046 -1.9552317   0.7702656  -0.25139773]]
Iteration 600 of 1000: loss=1.28 " + "l1=0.262" + "l2=1.02 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.43631127 -1.8758568   0.5945917   0.11886161]]
Iteration 700 of 1000: loss=0.93 " + "l1=0.00634" + "l2=0.924 f=-0.178 shape=(1, 9000, 1)
logits [[ 0.26533234 -1.8407435   0.4371486   0.42561895]]
Iteration 800 of 1000: loss=0.724 " + "l1=0" + "l2=0.724 f=-0.179 shape=(1, 9000, 1)
logits [[ 0.272232   -1.8773377   0.44285768  0.44794002]]
Iteration 900 of 1000: loss=0.592 " + "l1=0" + "l2=0.592 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.28636733 -1.9096924   0.44720072  0.4477757 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.28 " + "l1=3.28" + "l2=0 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.0740466 -2.94987    2.7684724 -6.0142703]]
Iteration 100 of 1000: loss=2.65 " + "l1=2.32" + "l2=0.333 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.866523  -2.8301554  2.4177084 -4.2749376]]
Iteration 200 of 1000: loss=2.4 " + "l1=1.88" + "l2=0.515 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.3461072 -2.7653794  2.2538905 -3.444599 ]]
Iteration 300 of 1000: loss=2.18 " + "l1=1.62" + "l2=0.556 f=-0.353 shape=(1, 9000, 1)
logits [[ 2.0801156 -2.6726518  2.0810494 -2.9009428]]
Iteration 400 of 1000: loss=1.86 " + "l1=1.28" + "l2=0.587 f=-0.278 shape=(1, 9000, 1)
logits [[ 1.7742518 -2.5140579  1.7766798 -2.1504853]]
Iteration 500 of 1000: loss=1.53 " + "l1=0.939" + "l2=0.596 f=-0.241 shape=(1, 9000, 1)
logits [[ 1.4191866 -2.3315985  1.4200944 -1.4700509]]
Iteration 600 of 1000: loss=1.25 " + "l1=0.703" + "l2=0.546 f=-0.223 shape=(1, 9000, 1)
logits [[ 1.1608365 -2.2209783  1.1665459 -0.9975961]]
Iteration 700 of 1000: loss=1.02 " + "l1=0.521" + "l2=0.499 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.9176537  -2.1078663   0.95654863 -0.64614606]]
Iteration 800 of 1000: loss=0.831 " + "l1=0.337" + "l2=0.494 f=-0.218 shape=(1, 9000, 1)
logits [[ 0.6792409 -2.0519652  0.7678763 -0.2691045]]
Iteration 900 of 1000: loss=0.69 " + "l1=0.188" + "l2=0.502 f=-0.213 shape=(1, 9000, 1)
logits [[ 0.505222  -2.01895    0.6212537  0.0424316]]
--- 298.17717933654785 seconds ---
Adv result:3
Loading record A03954
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0853 " + "l1=0.0853" + "l2=0 f=-0.56 shape=(1, 9000, 1)
logits [[ 5.6251874 -2.906807   3.196078  -8.155447 ]]
Iteration 100 of 1000: loss=0.0851 " + "l1=0.0849" + "l2=0.000199 f=-0.559 shape=(1, 9000, 1)
logits [[ 5.5975666 -2.8943696  3.1864743 -8.126557 ]]
Iteration 200 of 1000: loss=0.0851 " + "l1=0.0849" + "l2=0.000169 f=-0.559 shape=(1, 9000, 1)
logits [[ 5.596071 -2.893676  3.186123 -8.125459]]
Iteration 300 of 1000: loss=0.085 " + "l1=0.0848" + "l2=0.000205 f=-0.559 shape=(1, 9000, 1)
logits [[ 5.5924244 -2.891899   3.1850257 -8.122221 ]]
Iteration 400 of 1000: loss=0.085 " + "l1=0.0848" + "l2=0.000223 f=-0.559 shape=(1, 9000, 1)
logits [[ 5.588336  -2.8898768  3.1837    -8.118607 ]]
Iteration 500 of 1000: loss=0.085 " + "l1=0.0847" + "l2=0.000286 f=-0.559 shape=(1, 9000, 1)
logits [[ 5.58407  -2.887761  3.182292 -8.115001]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.853 " + "l1=0.853" + "l2=0 f=-0.56 shape=(1, 9000, 1)
logits [[ 5.6251874 -2.906807   3.196078  -8.155447 ]]
Iteration 100 of 1000: loss=0.835 " + "l1=0.825" + "l2=0.0108 f=-0.551 shape=(1, 9000, 1)
logits [[ 5.429795  -2.8157887  3.1243    -7.94408  ]]
Iteration 200 of 1000: loss=0.83 " + "l1=0.817" + "l2=0.0124 f=-0.549 shape=(1, 9000, 1)
logits [[ 5.3838153 -2.790083   3.1055617 -7.895048 ]]
Iteration 300 of 1000: loss=0.824 " + "l1=0.81" + "l2=0.0141 f=-0.547 shape=(1, 9000, 1)
logits [[ 5.3373523 -2.7658184  3.0864596 -7.84743  ]]
Iteration 400 of 1000: loss=0.819 " + "l1=0.803" + "l2=0.0162 f=-0.547 shape=(1, 9000, 1)
logits [[ 5.286929  -2.7410882  3.0634477 -7.7973313]]
Iteration 500 of 1000: loss=0.813 " + "l1=0.795" + "l2=0.0185 f=-0.547 shape=(1, 9000, 1)
logits [[ 5.2314434 -2.7141984  3.0370626 -7.7422895]]
Iteration 600 of 1000: loss=0.807 " + "l1=0.787" + "l2=0.0205 f=-0.548 shape=(1, 9000, 1)
logits [[ 5.176321  -2.6898293  3.0112076 -7.6891217]]
Iteration 700 of 1000: loss=0.801 " + "l1=0.779" + "l2=0.0223 f=-0.549 shape=(1, 9000, 1)
logits [[ 5.1212177 -2.667925   2.9878874 -7.6378517]]
Iteration 800 of 1000: loss=0.795 " + "l1=0.771" + "l2=0.024 f=-0.551 shape=(1, 9000, 1)
logits [[ 5.064354  -2.647178   2.9658484 -7.586645 ]]
Iteration 900 of 1000: loss=0.789 " + "l1=0.762" + "l2=0.0267 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.9943767 -2.6257591  2.939381  -7.5230093]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.53 " + "l1=8.53" + "l2=0 f=-0.56 shape=(1, 9000, 1)
logits [[ 5.6251874 -2.906807   3.196078  -8.155447 ]]
Iteration 100 of 1000: loss=6.88 " + "l1=5.79" + "l2=1.09 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.6671488 -2.121915   2.414782  -5.9774847]]
Iteration 200 of 1000: loss=6.22 " + "l1=4.83" + "l2=1.4 f=-0.496 shape=(1, 9000, 1)
logits [[ 2.9629292 -1.8633416  2.15189   -5.235466 ]]
Iteration 300 of 1000: loss=5.6 " + "l1=3.89" + "l2=1.7 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.4309373 -1.4639312  1.8515472 -4.6452847]]
Iteration 400 of 1000: loss=4.87 " + "l1=2.99" + "l2=1.88 f=-0.429 shape=(1, 9000, 1)
logits [[ 1.8760794 -1.1160829  1.5219327 -3.9986203]]
Iteration 500 of 1000: loss=4.39 " + "l1=2.36" + "l2=2.03 f=-0.387 shape=(1, 9000, 1)
logits [[ 1.4147199 -0.9437467  1.3285409 -3.3493774]]
Iteration 600 of 1000: loss=3.97 " + "l1=1.98" + "l2=1.99 f=-0.358 shape=(1, 9000, 1)
logits [[ 1.1753175 -0.8046161  1.1685709 -2.9696589]]
Iteration 700 of 1000: loss=3.6 " + "l1=1.76" + "l2=1.84 f=-0.315 shape=(1, 9000, 1)
logits [[ 1.0610337 -0.7025737  1.062328  -2.6800742]]
Iteration 800 of 1000: loss=3.31 " + "l1=1.58" + "l2=1.74 f=-0.259 shape=(1, 9000, 1)
logits [[ 0.9648541  -0.61038935  0.96139747 -2.3538275 ]]
Iteration 900 of 1000: loss=3.16 " + "l1=1.46" + "l2=1.7 f=-0.232 shape=(1, 9000, 1)
logits [[ 0.89933026 -0.56260836  0.89668083 -2.159709  ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=85.3 " + "l1=85.3" + "l2=0 f=-0.56 shape=(1, 9000, 1)
logits [[ 5.6251874 -2.906807   3.196078  -8.155447 ]]
Iteration 100 of 1000: loss=23.2 " + "l1=7.96" + "l2=15.2 f=-0.278 shape=(1, 9000, 1)
logits [[ 0.6798148  -0.10795475  0.68843    -2.3713136 ]]
Iteration 200 of 1000: loss=12.5 " + "l1=0.0397" + "l2=12.4 f=-0.269 shape=(1, 9000, 1)
logits [[ 0.34833035  0.34626597  0.35023138 -2.1220493 ]]
Iteration 300 of 1000: loss=10.4 " + "l1=0" + "l2=10.4 f=-0.314 shape=(1, 9000, 1)
logits [[ 0.31048363  0.36385047  0.35363486 -2.282209  ]]
Iteration 400 of 1000: loss=9.27 " + "l1=0" + "l2=9.27 f=-0.346 shape=(1, 9000, 1)
logits [[ 0.35460594  0.3829354   0.367932   -2.4885488 ]]
Iteration 500 of 1000: loss=8.57 " + "l1=0" + "l2=8.57 f=-0.357 shape=(1, 9000, 1)
logits [[ 0.36565945  0.39713672  0.38563105 -2.5747778 ]]
Iteration 600 of 1000: loss=8.12 " + "l1=0" + "l2=8.12 f=-0.364 shape=(1, 9000, 1)
logits [[ 0.3672233   0.40134037  0.39240846 -2.6183624 ]]
Iteration 700 of 1000: loss=7.82 " + "l1=0.0788" + "l2=7.75 f=-0.374 shape=(1, 9000, 1)
logits [[ 0.36053792  0.39142853  0.399305   -2.6453793 ]]
Iteration 800 of 1000: loss=7.5 " + "l1=0.00586" + "l2=7.5 f=-0.382 shape=(1, 9000, 1)
logits [[ 0.37028363  0.39306617  0.39365253 -2.6832805 ]]
Iteration 900 of 1000: loss=7.32 " + "l1=0" + "l2=7.32 f=-0.389 shape=(1, 9000, 1)
logits [[ 0.34397236  0.39647174  0.38278437 -2.6778405 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=46.9 " + "l1=46.9" + "l2=0 f=-0.56 shape=(1, 9000, 1)
logits [[ 5.6251874 -2.906807   3.196078  -8.155447 ]]
Iteration 100 of 1000: loss=17.8 " + "l1=7.56" + "l2=10.3 f=-0.313 shape=(1, 9000, 1)
logits [[ 0.929586   -0.43667924  0.93809986 -2.6847312 ]]
Iteration 200 of 1000: loss=11.3 " + "l1=1.49" + "l2=9.83 f=-0.299 shape=(1, 9000, 1)
logits [[ 0.47130895  0.20181711  0.4732258  -2.3439126 ]]
Iteration 300 of 1000: loss=8.75 " + "l1=0.017" + "l2=8.73 f=-0.351 shape=(1, 9000, 1)
logits [[ 0.3493732   0.3744463   0.37753662 -2.5048022 ]]
Iteration 400 of 1000: loss=7.7 " + "l1=0" + "l2=7.7 f=-0.378 shape=(1, 9000, 1)
logits [[ 0.38944152  0.3969969   0.39652818 -2.6938605 ]]
Iteration 500 of 1000: loss=7.26 " + "l1=0.0276" + "l2=7.23 f=-0.383 shape=(1, 9000, 1)
logits [[ 0.39849603  0.39347783  0.3905081  -2.7161248 ]]
Iteration 600 of 1000: loss=6.87 " + "l1=0.0221" + "l2=6.85 f=-0.402 shape=(1, 9000, 1)
logits [[ 0.38248605  0.38828623  0.39230758 -2.7727294 ]]
Iteration 700 of 1000: loss=6.54 " + "l1=0.0221" + "l2=6.52 f=-0.416 shape=(1, 9000, 1)
logits [[ 0.370454   0.387225   0.3912433 -2.8128257]]
Iteration 800 of 1000: loss=6.26 " + "l1=0.00391" + "l2=6.26 f=-0.42 shape=(1, 9000, 1)
logits [[ 0.3693729   0.3865336   0.38724455 -2.8227801 ]]
Iteration 900 of 1000: loss=6.06 " + "l1=0.0354" + "l2=6.02 f=-0.423 shape=(1, 9000, 1)
logits [[ 0.35194802  0.37709302  0.38352525 -2.8054106 ]]
--- 269.7936339378357 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0243 " + "l1=0.0243" + "l2=0 f=-0.56 shape=(1, 9000, 1)
logits [[ 5.6251874 -2.906807   3.196078  -8.155447 ]]
Iteration 100 of 1000: loss=0.0242 " + "l1=0.0241" + "l2=0.000126 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.604918  -2.9063892  3.1965694 -8.137671 ]]
Iteration 200 of 1000: loss=0.0242 " + "l1=0.0241" + "l2=9.3e-05 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.605554  -2.906489   3.1969695 -8.1390295]]
Iteration 300 of 1000: loss=0.0242 " + "l1=0.0241" + "l2=0.000114 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.603562  -2.906355   3.1972096 -8.137906 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.243 " + "l1=0.243" + "l2=0 f=-0.56 shape=(1, 9000, 1)
logits [[ 5.6251874 -2.906807   3.196078  -8.155447 ]]
Iteration 100 of 1000: loss=0.235 " + "l1=0.23" + "l2=0.00479 f=-0.562 shape=(1, 9000, 1)
logits [[ 5.5001116 -2.9016364  3.2013845 -8.047615 ]]
Iteration 200 of 1000: loss=0.232 " + "l1=0.226" + "l2=0.00598 f=-0.563 shape=(1, 9000, 1)
logits [[ 5.4678125 -2.9020998  3.2058814 -8.022966 ]]
Iteration 300 of 1000: loss=0.23 " + "l1=0.223" + "l2=0.00654 f=-0.564 shape=(1, 9000, 1)
logits [[ 5.44652   -2.903499   3.2116146 -8.010451 ]]
Iteration 400 of 1000: loss=0.228 " + "l1=0.221" + "l2=0.00748 f=-0.565 shape=(1, 9000, 1)
logits [[ 5.4204125 -2.9036767  3.2138836 -7.9919505]]
Iteration 500 of 1000: loss=0.226 " + "l1=0.218" + "l2=0.00826 f=-0.567 shape=(1, 9000, 1)
logits [[ 5.3953533 -2.9041364  3.2149568 -7.9747405]]
Iteration 600 of 1000: loss=0.224 " + "l1=0.215" + "l2=0.00908 f=-0.569 shape=(1, 9000, 1)
logits [[ 5.368947  -2.904282   3.2147894 -7.955261 ]]
Iteration 700 of 1000: loss=0.223 " + "l1=0.213" + "l2=0.00989 f=-0.571 shape=(1, 9000, 1)
logits [[ 5.3445373 -2.9044945  3.2149966 -7.9385934]]
Iteration 800 of 1000: loss=0.221 " + "l1=0.21" + "l2=0.0109 f=-0.573 shape=(1, 9000, 1)
logits [[ 5.316228  -2.9039805  3.2143435 -7.916763 ]]
Iteration 900 of 1000: loss=0.219 " + "l1=0.208" + "l2=0.0116 f=-0.574 shape=(1, 9000, 1)
logits [[ 5.2921815 -2.9034078  3.2151647 -7.899294 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.43 " + "l1=2.43" + "l2=0 f=-0.56 shape=(1, 9000, 1)
logits [[ 5.6251874 -2.906807   3.196078  -8.155447 ]]
Iteration 100 of 1000: loss=1.7 " + "l1=1.27" + "l2=0.425 f=-0.579 shape=(1, 9000, 1)
logits [[ 4.524183  -2.9632905  3.2501569 -7.12677  ]]
Iteration 200 of 1000: loss=1.4 " + "l1=0.844" + "l2=0.559 f=-0.592 shape=(1, 9000, 1)
logits [[ 4.137855  -3.0291774  3.293377  -6.7705765]]
Iteration 300 of 1000: loss=1.14 " + "l1=0.436" + "l2=0.707 f=-0.609 shape=(1, 9000, 1)
logits [[ 3.7755435 -3.0909536  3.3392386 -6.459172 ]]
Iteration 400 of 1000: loss=0.884 " + "l1=0.0508" + "l2=0.833 f=-0.616 shape=(1, 9000, 1)
logits [[ 3.4354122 -3.133776   3.3845675 -6.1488943]]
Iteration 500 of 1000: loss=0.698 " + "l1=0.0071" + "l2=0.691 f=-0.624 shape=(1, 9000, 1)
logits [[ 3.3928902 -3.1207185  3.385791  -6.153487 ]]
Iteration 600 of 1000: loss=0.566 " + "l1=0.0131" + "l2=0.553 f=-0.63 shape=(1, 9000, 1)
logits [[ 3.4168468 -3.117494   3.4037495 -6.223211 ]]
Iteration 700 of 1000: loss=0.481 " + "l1=0" + "l2=0.481 f=-0.634 shape=(1, 9000, 1)
logits [[ 3.404353  -3.1119099  3.4133735 -6.242383 ]]
Iteration 800 of 1000: loss=0.417 " + "l1=0" + "l2=0.417 f=-0.633 shape=(1, 9000, 1)
logits [[ 3.4023275 -3.1041615  3.4095466 -6.2381897]]
Iteration 900 of 1000: loss=0.359 " + "l1=0.00571" + "l2=0.353 f=-0.63 shape=(1, 9000, 1)
logits [[ 3.4168253 -3.1032388  3.4111142 -6.245947 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.34 " + "l1=1.34" + "l2=0 f=-0.56 shape=(1, 9000, 1)
logits [[ 5.6251874 -2.906807   3.196078  -8.155447 ]]
Iteration 100 of 1000: loss=1.12 " + "l1=0.988" + "l2=0.13 f=-0.573 shape=(1, 9000, 1)
logits [[ 5.025328  -2.9284682  3.2295907 -7.617326 ]]
Iteration 200 of 1000: loss=1.02 " + "l1=0.84" + "l2=0.184 f=-0.579 shape=(1, 9000, 1)
logits [[ 4.7911415 -2.9615722  3.2639637 -7.4095764]]
Iteration 300 of 1000: loss=0.941 " + "l1=0.725" + "l2=0.216 f=-0.582 shape=(1, 9000, 1)
logits [[ 4.6054816 -2.9822023  3.2878892 -7.2378907]]
Iteration 400 of 1000: loss=0.867 " + "l1=0.623" + "l2=0.244 f=-0.592 shape=(1, 9000, 1)
logits [[ 4.4375606 -3.006446   3.3042223 -7.102206 ]]
Iteration 500 of 1000: loss=0.808 " + "l1=0.542" + "l2=0.266 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.295294  -3.0234056  3.3089473 -6.9972396]]
Iteration 600 of 1000: loss=0.747 " + "l1=0.456" + "l2=0.291 f=-0.617 shape=(1, 9000, 1)
logits [[ 4.1486516 -3.0379033  3.3194351 -6.8989897]]
Iteration 700 of 1000: loss=0.677 " + "l1=0.374" + "l2=0.303 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.0048175 -3.0418851  3.3242583 -6.799074 ]]
Iteration 800 of 1000: loss=0.606 " + "l1=0.293" + "l2=0.313 f=-0.638 shape=(1, 9000, 1)
logits [[ 3.8694556 -3.048668   3.3375332 -6.710689 ]]
Iteration 900 of 1000: loss=0.514 " + "l1=0.183" + "l2=0.331 f=-0.644 shape=(1, 9000, 1)
logits [[ 3.687906  -3.0559149  3.354477  -6.564057 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.88 " + "l1=1.88" + "l2=0 f=-0.56 shape=(1, 9000, 1)
logits [[ 5.6251874 -2.906807   3.196078  -8.155447 ]]
Iteration 100 of 1000: loss=1.44 " + "l1=1.17" + "l2=0.272 f=-0.575 shape=(1, 9000, 1)
logits [[ 4.764563  -2.9503922  3.253631  -7.368178 ]]
Iteration 200 of 1000: loss=1.26 " + "l1=0.907" + "l2=0.349 f=-0.581 shape=(1, 9000, 1)
logits [[ 4.456143  -2.9922624  3.2862964 -7.073139 ]]
Iteration 300 of 1000: loss=1.11 " + "l1=0.692" + "l2=0.415 f=-0.603 shape=(1, 9000, 1)
logits [[ 4.198534  -3.0359612  3.3054972 -6.8797116]]
Iteration 400 of 1000: loss=0.982 " + "l1=0.512" + "l2=0.47 f=-0.62 shape=(1, 9000, 1)
logits [[ 3.9938517 -3.0747483  3.3331254 -6.7309   ]]
Iteration 500 of 1000: loss=0.843 " + "l1=0.326" + "l2=0.517 f=-0.634 shape=(1, 9000, 1)
logits [[ 3.7762587 -3.0972326  3.356066  -6.5709524]]
Iteration 600 of 1000: loss=0.67 " + "l1=0.0847" + "l2=0.585 f=-0.642 shape=(1, 9000, 1)
logits [[ 3.5199485 -3.1389863  3.410673  -6.359387 ]]
Iteration 700 of 1000: loss=0.513 " + "l1=0.00532" + "l2=0.508 f=-0.645 shape=(1, 9000, 1)
logits [[ 3.4537995 -3.144051   3.4469411 -6.3361235]]
Iteration 800 of 1000: loss=0.427 " + "l1=0.00726" + "l2=0.42 f=-0.645 shape=(1, 9000, 1)
logits [[ 3.4453006 -3.1327083  3.4359307 -6.3265796]]
Iteration 900 of 1000: loss=0.355 " + "l1=0" + "l2=0.355 f=-0.643 shape=(1, 9000, 1)
logits [[ 3.4374022 -3.1401281  3.4389448 -6.3101277]]
--- 260.9518985748291 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.138 " + "l1=0.138" + "l2=0 f=-0.56 shape=(1, 9000, 1)
logits [[ 5.6251874 -2.906807   3.196078  -8.155447 ]]
Iteration 100 of 1000: loss=0.137 " + "l1=0.137" + "l2=0.000432 f=-0.558 shape=(1, 9000, 1)
logits [[ 5.5834966 -2.8974662  3.1834266 -8.101618 ]]
Iteration 200 of 1000: loss=0.137 " + "l1=0.137" + "l2=0.000422 f=-0.558 shape=(1, 9000, 1)
logits [[ 5.5787706 -2.8963554  3.1822193 -8.095712 ]]
Iteration 300 of 1000: loss=0.137 " + "l1=0.137" + "l2=0.000477 f=-0.557 shape=(1, 9000, 1)
logits [[ 5.5723305 -2.894867   3.1803493 -8.087471 ]]
Iteration 400 of 1000: loss=0.137 " + "l1=0.136" + "l2=0.000554 f=-0.557 shape=(1, 9000, 1)
logits [[ 5.5657187 -2.8932996  3.1782403 -8.079081 ]]
Iteration 500 of 1000: loss=0.137 " + "l1=0.136" + "l2=0.000678 f=-0.557 shape=(1, 9000, 1)
logits [[ 5.5587792 -2.8916173  3.1759324 -8.070412 ]]
Iteration 600 of 1000: loss=0.137 " + "l1=0.136" + "l2=0.000742 f=-0.557 shape=(1, 9000, 1)
logits [[ 5.551853  -2.889905   3.1735983 -8.061822 ]]
Iteration 700 of 1000: loss=0.137 " + "l1=0.136" + "l2=0.000829 f=-0.556 shape=(1, 9000, 1)
logits [[ 5.5451207 -2.8883073  3.171306  -8.053494 ]]
Iteration 800 of 1000: loss=0.137 " + "l1=0.136" + "l2=0.000858 f=-0.556 shape=(1, 9000, 1)
logits [[ 5.5395103 -2.886826   3.1692939 -8.046458 ]]
Iteration 900 of 1000: loss=0.137 " + "l1=0.136" + "l2=0.00102 f=-0.556 shape=(1, 9000, 1)
logits [[ 5.53417   -2.8853626  3.1670668 -8.039617 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.38 " + "l1=1.38" + "l2=0 f=-0.56 shape=(1, 9000, 1)
logits [[ 5.6251874 -2.906807   3.196078  -8.155447 ]]
Iteration 100 of 1000: loss=1.33 " + "l1=1.3" + "l2=0.0284 f=-0.541 shape=(1, 9000, 1)
logits [[ 5.310197  -2.832449   3.0878322 -7.728952 ]]
Iteration 200 of 1000: loss=1.32 " + "l1=1.28" + "l2=0.0381 f=-0.534 shape=(1, 9000, 1)
logits [[ 5.198611  -2.8157146  3.0527272 -7.571385 ]]
Iteration 300 of 1000: loss=1.3 " + "l1=1.25" + "l2=0.0448 f=-0.528 shape=(1, 9000, 1)
logits [[ 5.0997796 -2.7966602  3.0164526 -7.4304137]]
Iteration 400 of 1000: loss=1.28 " + "l1=1.23" + "l2=0.0517 f=-0.523 shape=(1, 9000, 1)
logits [[ 5.0018225 -2.7740963  2.973082  -7.293282 ]]
Iteration 500 of 1000: loss=1.26 " + "l1=1.2" + "l2=0.059 f=-0.52 shape=(1, 9000, 1)
logits [[ 4.889754  -2.7466636  2.9223108 -7.1438627]]
Iteration 600 of 1000: loss=1.24 " + "l1=1.17" + "l2=0.0678 f=-0.518 shape=(1, 9000, 1)
logits [[ 4.7566953 -2.7184682  2.8637288 -6.9756646]]
Iteration 700 of 1000: loss=1.22 " + "l1=1.15" + "l2=0.0741 f=-0.518 shape=(1, 9000, 1)
logits [[ 4.6378746 -2.6987329  2.8061318 -6.818247 ]]
Iteration 800 of 1000: loss=1.2 " + "l1=1.12" + "l2=0.0813 f=-0.519 shape=(1, 9000, 1)
logits [[ 4.530221  -2.681938   2.7436485 -6.6692567]]
Iteration 900 of 1000: loss=1.18 " + "l1=1.1" + "l2=0.0884 f=-0.517 shape=(1, 9000, 1)
logits [[ 4.435748  -2.668942   2.6936152 -6.5278516]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=13.8 " + "l1=13.8" + "l2=0 f=-0.56 shape=(1, 9000, 1)
logits [[ 5.6251874 -2.906807   3.196078  -8.155447 ]]
Iteration 100 of 1000: loss=9.08 " + "l1=6.34" + "l2=2.74 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.5027163 -2.3629637  2.1476324 -3.8411505]]
Iteration 200 of 1000: loss=7.27 " + "l1=4.34" + "l2=2.93 f=-0.317 shape=(1, 9000, 1)
logits [[ 1.7965715 -2.3134837  1.7935796 -2.5441654]]
Iteration 300 of 1000: loss=6.32 " + "l1=3.44" + "l2=2.88 f=-0.264 shape=(1, 9000, 1)
logits [[ 1.5190976 -2.1838598  1.5240138 -1.9165702]]
Iteration 400 of 1000: loss=5.43 " + "l1=2.54" + "l2=2.89 f=-0.221 shape=(1, 9000, 1)
logits [[ 1.2235447 -2.0391831  1.2338105 -1.3038136]]
Iteration 500 of 1000: loss=4.54 " + "l1=1.53" + "l2=3 f=-0.188 shape=(1, 9000, 1)
logits [[ 0.886381  -1.890389   0.8926491 -0.6407235]]
Iteration 600 of 1000: loss=3.82 " + "l1=0.981" + "l2=2.83 f=-0.149 shape=(1, 9000, 1)
logits [[ 0.7138087  -1.763894    0.7183229  -0.26307118]]
Iteration 700 of 1000: loss=2.96 " + "l1=0.174" + "l2=2.78 f=-0.0699 shape=(1, 9000, 1)
logits [[ 0.49558315 -1.623931    0.5114274   0.33714613]]
Iteration 800 of 1000: loss=2.22 " + "l1=0.000925" + "l2=2.22 f=-0.0329 shape=(1, 9000, 1)
logits [[ 0.49186417 -1.6091694   0.49333164  0.49240622]]
Iteration 900 of 1000: loss=1.87 " + "l1=0.00852" + "l2=1.87 f=-0.0302 shape=(1, 9000, 1)
logits [[ 0.50813586 -1.6543076   0.5168639   0.5083415 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.58 " + "l1=7.58" + "l2=0 f=-0.56 shape=(1, 9000, 1)
logits [[ 5.6251874 -2.906807   3.196078  -8.155447 ]]
Iteration 100 of 1000: loss=6.06 " + "l1=5.02" + "l2=1.03 f=-0.474 shape=(1, 9000, 1)
logits [[ 3.6421478 -2.5354803  2.4917316 -5.4932203]]
Iteration 200 of 1000: loss=5.38 " + "l1=3.96" + "l2=1.41 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.8579237 -2.486771   2.2363667 -4.3461914]]
Iteration 300 of 1000: loss=4.81 " + "l1=3.16" + "l2=1.65 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.3066983 -2.4836621  2.0617867 -3.4375055]]
Iteration 400 of 1000: loss=4.3 " + "l1=2.53" + "l2=1.76 f=-0.343 shape=(1, 9000, 1)
logits [[ 1.8867295 -2.419613   1.8792334 -2.717785 ]]
Iteration 500 of 1000: loss=3.9 " + "l1=2.16" + "l2=1.73 f=-0.3 shape=(1, 9000, 1)
logits [[ 1.6908624 -2.3578942  1.6975855 -2.2307994]]
Iteration 600 of 1000: loss=3.57 " + "l1=1.88" + "l2=1.69 f=-0.258 shape=(1, 9000, 1)
logits [[ 1.5698086 -2.3196056  1.5691432 -1.8506116]]
Iteration 700 of 1000: loss=3.26 " + "l1=1.62" + "l2=1.63 f=-0.22 shape=(1, 9000, 1)
logits [[ 1.4417442 -2.2561216  1.442147  -1.5083275]]
Iteration 800 of 1000: loss=2.93 " + "l1=1.38" + "l2=1.55 f=-0.183 shape=(1, 9000, 1)
logits [[ 1.322808  -2.1958535  1.327219  -1.1871705]]
Iteration 900 of 1000: loss=2.51 " + "l1=0.998" + "l2=1.51 f=-0.133 shape=(1, 9000, 1)
logits [[ 1.1189978 -2.0811622  1.1230923 -0.6922671]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=10.7 " + "l1=10.7" + "l2=0 f=-0.56 shape=(1, 9000, 1)
logits [[ 5.6251874 -2.906807   3.196078  -8.155447 ]]
Iteration 100 of 1000: loss=7.74 " + "l1=5.95" + "l2=1.78 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.043699  -2.4419835  2.3160658 -4.63545  ]]
Iteration 200 of 1000: loss=6.34 " + "l1=3.87" + "l2=2.47 f=-0.361 shape=(1, 9000, 1)
logits [[ 1.9889071 -2.4128652  1.9835186 -3.0036519]]
Iteration 300 of 1000: loss=5.6 " + "l1=3.28" + "l2=2.32 f=-0.325 shape=(1, 9000, 1)
logits [[ 1.7563535 -2.3386014  1.7579101 -2.474879 ]]
Iteration 400 of 1000: loss=4.95 " + "l1=2.65" + "l2=2.3 f=-0.267 shape=(1, 9000, 1)
logits [[ 1.522559  -2.2240303  1.5233307 -1.891504 ]]
Iteration 500 of 1000: loss=4.4 " + "l1=2.11" + "l2=2.29 f=-0.222 shape=(1, 9000, 1)
logits [[ 1.3349053 -2.1768353  1.3395828 -1.3847005]]
Iteration 600 of 1000: loss=3.87 " + "l1=1.55" + "l2=2.32 f=-0.175 shape=(1, 9000, 1)
logits [[ 1.1201007  -2.0688581   1.1231807  -0.87455374]]
Iteration 700 of 1000: loss=3.3 " + "l1=1.04" + "l2=2.26 f=-0.14 shape=(1, 9000, 1)
logits [[ 0.9067124 -1.963654   0.9178747 -0.421754 ]]
Iteration 800 of 1000: loss=2.59 " + "l1=0.48" + "l2=2.11 f=-0.0723 shape=(1, 9000, 1)
logits [[ 0.7200317  -1.8371989   0.7237641   0.10408998]]
Iteration 900 of 1000: loss=1.97 " + "l1=0.0109" + "l2=1.96 f=-0.0453 shape=(1, 9000, 1)
logits [[ 0.52901256 -1.766662    0.53536266  0.52128524]]
--- 293.49640130996704 seconds ---
Adv result:3
Loading record A03983
(1, 5360)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0685 " + "l1=0.0685" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 4.212144  -2.6405485  1.347997  -4.8981037]]
Iteration 100 of 1000: loss=0.068 " + "l1=0.0677" + "l2=0.000282 f=-0.497 shape=(1, 9000, 1)
logits [[ 4.16048   -2.6080937  1.3236753 -4.8622036]]
Iteration 200 of 1000: loss=0.0678 " + "l1=0.0674" + "l2=0.000317 f=-0.498 shape=(1, 9000, 1)
logits [[ 4.1452303 -2.5992825  1.3164803 -4.8524594]]
Iteration 300 of 1000: loss=0.0676 " + "l1=0.0672" + "l2=0.000413 f=-0.499 shape=(1, 9000, 1)
logits [[ 4.1272826 -2.5894268  1.3083879 -4.841027 ]]
Iteration 400 of 1000: loss=0.0674 " + "l1=0.0669" + "l2=0.000512 f=-0.5 shape=(1, 9000, 1)
logits [[ 4.10964   -2.5800767  1.3009679 -4.8294463]]
Iteration 500 of 1000: loss=0.0673 " + "l1=0.0666" + "l2=0.000689 f=-0.501 shape=(1, 9000, 1)
logits [[ 4.0920515 -2.5711074  1.2939795 -4.818469 ]]
Iteration 600 of 1000: loss=0.0672 " + "l1=0.0664" + "l2=0.000846 f=-0.502 shape=(1, 9000, 1)
logits [[ 4.0749407 -2.5625267  1.2875258 -4.808046 ]]
Iteration 700 of 1000: loss=0.0671 " + "l1=0.0661" + "l2=0.001 f=-0.503 shape=(1, 9000, 1)
logits [[ 4.0577226 -2.5541532  1.2816145 -4.798127 ]]
Iteration 800 of 1000: loss=0.067 " + "l1=0.0659" + "l2=0.00114 f=-0.504 shape=(1, 9000, 1)
logits [[ 4.0429664 -2.5472999  1.2769822 -4.789526 ]]
Iteration 900 of 1000: loss=0.0671 " + "l1=0.0657" + "l2=0.00141 f=-0.505 shape=(1, 9000, 1)
logits [[ 4.028744 -2.54074   1.272757 -4.781667]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.685 " + "l1=0.685" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 4.212144  -2.6405485  1.347997  -4.8981037]]
Iteration 100 of 1000: loss=0.634 " + "l1=0.612" + "l2=0.0225 f=-0.508 shape=(1, 9000, 1)
logits [[ 3.757339  -2.3594782  1.1464837 -4.576994 ]]
Iteration 200 of 1000: loss=0.605 " + "l1=0.571" + "l2=0.0338 f=-0.516 shape=(1, 9000, 1)
logits [[ 3.4986644 -2.2120788  1.0445127 -4.3957844]]
Iteration 300 of 1000: loss=0.576 " + "l1=0.529" + "l2=0.047 f=-0.523 shape=(1, 9000, 1)
logits [[ 3.2374747  -2.0534554   0.92938745 -4.2054815 ]]
Iteration 400 of 1000: loss=0.544 " + "l1=0.477" + "l2=0.0667 f=-0.522 shape=(1, 9000, 1)
logits [[ 2.9308097  -1.8395094   0.78036624 -3.9605675 ]]
Iteration 500 of 1000: loss=0.508 " + "l1=0.422" + "l2=0.0857 f=-0.52 shape=(1, 9000, 1)
logits [[ 2.607162   -1.6123861   0.63241404 -3.7078538 ]]
Iteration 600 of 1000: loss=0.476 " + "l1=0.376" + "l2=0.1 f=-0.533 shape=(1, 9000, 1)
logits [[ 2.3074594 -1.4495806  0.5440786 -3.5349991]]
Iteration 700 of 1000: loss=0.443 " + "l1=0.326" + "l2=0.116 f=-0.546 shape=(1, 9000, 1)
logits [[ 1.9883769  -1.2763691   0.46638793 -3.3610334 ]]
Iteration 800 of 1000: loss=0.408 " + "l1=0.275" + "l2=0.133 f=-0.549 shape=(1, 9000, 1)
logits [[ 1.6816564  -1.0693517   0.38613504 -3.1926162 ]]
Iteration 900 of 1000: loss=0.375 " + "l1=0.229" + "l2=0.146 f=-0.552 shape=(1, 9000, 1)
logits [[ 1.4000227  -0.8909008   0.26952013 -2.985545  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.85 " + "l1=6.85" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 4.212144  -2.6405485  1.347997  -4.8981037]]
Iteration 100 of 1000: loss=2.04 " + "l1=0.0915" + "l2=1.94 f=-0.5 shape=(1, 9000, 1)
logits [[ 0.26962048  0.17807767  0.117205   -2.5654218 ]]
Iteration 200 of 1000: loss=1.18 " + "l1=0" + "l2=1.18 f=-0.526 shape=(1, 9000, 1)
logits [[ 0.2239832   0.2502189   0.17213434 -2.7516577 ]]
Iteration 300 of 1000: loss=0.894 " + "l1=0" + "l2=0.894 f=-0.525 shape=(1, 9000, 1)
logits [[ 0.1968919   0.21720518  0.21452737 -2.7295098 ]]
Iteration 400 of 1000: loss=0.748 " + "l1=0" + "l2=0.748 f=-0.517 shape=(1, 9000, 1)
logits [[ 0.18207078  0.20115946  0.1399973  -2.591687  ]]
Iteration 500 of 1000: loss=0.641 " + "l1=0" + "l2=0.641 f=-0.509 shape=(1, 9000, 1)
logits [[ 0.16455191  0.20240553  0.17834349 -2.5811787 ]]
Iteration 600 of 1000: loss=0.575 " + "l1=0" + "l2=0.575 f=-0.511 shape=(1, 9000, 1)
logits [[ 0.10796236  0.22558007  0.17407565 -2.553305  ]]
Iteration 700 of 1000: loss=0.497 " + "l1=0" + "l2=0.497 f=-0.509 shape=(1, 9000, 1)
logits [[ 0.14078996  0.19389503  0.1754451  -2.5473795 ]]
Iteration 800 of 1000: loss=0.44 " + "l1=0" + "l2=0.44 f=-0.507 shape=(1, 9000, 1)
logits [[ 0.1534839   0.17933163  0.1427739  -2.5053403 ]]
Iteration 900 of 1000: loss=0.419 " + "l1=0.0234" + "l2=0.396 f=-0.508 shape=(1, 9000, 1)
logits [[ 0.17201105  0.14865014  0.10594925 -2.4587336 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.77 " + "l1=3.77" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 4.212144  -2.6405485  1.347997  -4.8981037]]
Iteration 100 of 1000: loss=2.1 " + "l1=1.19" + "l2=0.906 f=-0.474 shape=(1, 9000, 1)
logits [[ 1.4814074  -0.6894726   0.26689926 -2.9562352 ]]
Iteration 200 of 1000: loss=0.943 " + "l1=0.00838" + "l2=0.935 f=-0.555 shape=(1, 9000, 1)
logits [[ 0.08200095  0.06676556 -0.06636685 -2.3033283 ]]
Iteration 300 of 1000: loss=0.65 " + "l1=0.00423" + "l2=0.645 f=-0.555 shape=(1, 9000, 1)
logits [[ 0.01058691  0.00290047 -0.06026209 -2.1721537 ]]
Iteration 400 of 1000: loss=0.525 " + "l1=0" + "l2=0.525 f=-0.552 shape=(1, 9000, 1)
logits [[-0.0462583  -0.01759848 -0.06389092 -2.0810156 ]]
Iteration 500 of 1000: loss=0.438 " + "l1=0" + "l2=0.438 f=-0.554 shape=(1, 9000, 1)
logits [[-0.05645394 -0.03911897 -0.07552873 -2.0447607 ]]
Iteration 600 of 1000: loss=0.371 " + "l1=0" + "l2=0.371 f=-0.548 shape=(1, 9000, 1)
logits [[-0.01306579 -0.00905574 -0.05885604 -2.112228  ]]
Iteration 700 of 1000: loss=0.328 " + "l1=0.000223" + "l2=0.328 f=-0.544 shape=(1, 9000, 1)
logits [[ 0.01281372  0.01240813 -0.05327586 -2.146316  ]]
Iteration 800 of 1000: loss=0.302 " + "l1=0" + "l2=0.302 f=-0.545 shape=(1, 9000, 1)
logits [[-0.00881602  0.02114095 -0.08443641 -2.1067994 ]]
Iteration 900 of 1000: loss=0.279 " + "l1=0" + "l2=0.279 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.1766348e-03  1.8941982e-02 -9.0946041e-02 -2.1048594e+00]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.23 " + "l1=2.23" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 4.212144  -2.6405485  1.347997  -4.8981037]]
Iteration 100 of 1000: loss=1.63 " + "l1=1.31" + "l2=0.318 f=-0.473 shape=(1, 9000, 1)
logits [[ 2.5866752 -1.4554976  0.5917198 -3.6159842]]
Iteration 200 of 1000: loss=1.17 " + "l1=0.682" + "l2=0.488 f=-0.52 shape=(1, 9000, 1)
logits [[ 1.3842456  -0.71516687  0.24031581 -2.9883907 ]]
Iteration 300 of 1000: loss=0.704 " + "l1=0.0407" + "l2=0.663 f=-0.546 shape=(1, 9000, 1)
logits [[ 0.08916038 -0.03592045 -0.09260636 -2.1448534 ]]
Iteration 400 of 1000: loss=0.492 " + "l1=0.00371" + "l2=0.488 f=-0.541 shape=(1, 9000, 1)
logits [[-0.04567052 -0.05708466 -0.11857428 -1.9419048 ]]
Iteration 500 of 1000: loss=0.391 " + "l1=0" + "l2=0.391 f=-0.549 shape=(1, 9000, 1)
logits [[-0.07406457 -0.05808539 -0.15326837 -1.9090014 ]]
Iteration 600 of 1000: loss=0.332 " + "l1=0" + "l2=0.332 f=-0.547 shape=(1, 9000, 1)
logits [[-0.05108663 -0.01733436 -0.15427029 -1.9653814 ]]
Iteration 700 of 1000: loss=0.293 " + "l1=0" + "l2=0.293 f=-0.542 shape=(1, 9000, 1)
logits [[-0.0229086   0.0058441  -0.14401087 -2.0077012 ]]
Iteration 800 of 1000: loss=0.269 " + "l1=0" + "l2=0.269 f=-0.543 shape=(1, 9000, 1)
logits [[-0.00996898  0.00277328 -0.15522972 -2.0097127 ]]
Iteration 900 of 1000: loss=0.255 " + "l1=0" + "l2=0.255 f=-0.541 shape=(1, 9000, 1)
logits [[-0.01225522 -0.00670697 -0.16067356 -1.984471  ]]
--- 296.3613803386688 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0286 " + "l1=0.0286" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 4.212144  -2.6405485  1.347997  -4.8981037]]
Iteration 100 of 1000: loss=0.0285 " + "l1=0.0283" + "l2=0.00014 f=-0.496 shape=(1, 9000, 1)
logits [[ 4.1820135 -2.637386   1.350571  -4.877462 ]]
Iteration 200 of 1000: loss=0.0284 " + "l1=0.0283" + "l2=0.00012 f=-0.496 shape=(1, 9000, 1)
logits [[ 4.177083  -2.6360288  1.3501992 -4.874195 ]]
Iteration 300 of 1000: loss=0.0284 " + "l1=0.0282" + "l2=0.000155 f=-0.496 shape=(1, 9000, 1)
logits [[ 4.169886  -2.6346502  1.3500817 -4.86929  ]]
Iteration 400 of 1000: loss=0.0283 " + "l1=0.0281" + "l2=0.000214 f=-0.496 shape=(1, 9000, 1)
logits [[ 4.1621    -2.633215   1.3500115 -4.8639903]]
Iteration 500 of 1000: loss=0.0283 " + "l1=0.028" + "l2=0.000249 f=-0.497 shape=(1, 9000, 1)
logits [[ 4.1539664 -2.6317704  1.350036  -4.8584766]]
Iteration 600 of 1000: loss=0.0283 " + "l1=0.028" + "l2=0.000326 f=-0.497 shape=(1, 9000, 1)
logits [[ 4.1454034 -2.6302273  1.3499938 -4.852669 ]]
Iteration 700 of 1000: loss=0.0283 " + "l1=0.0279" + "l2=0.000435 f=-0.497 shape=(1, 9000, 1)
logits [[ 4.1367173 -2.628685   1.3500432 -4.8468595]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.286 " + "l1=0.286" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 4.212144  -2.6405485  1.347997  -4.8981037]]
Iteration 100 of 1000: loss=0.271 " + "l1=0.263" + "l2=0.00753 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.9977446 -2.6124103  1.3668869 -4.749908 ]]
Iteration 200 of 1000: loss=0.262 " + "l1=0.251" + "l2=0.0104 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.8757637 -2.5869088  1.3612901 -4.667296 ]]
Iteration 300 of 1000: loss=0.253 " + "l1=0.24" + "l2=0.013 f=-0.51 shape=(1, 9000, 1)
logits [[ 3.7600226 -2.5629258  1.3563802 -4.594476 ]]
Iteration 400 of 1000: loss=0.245 " + "l1=0.229" + "l2=0.0157 f=-0.517 shape=(1, 9000, 1)
logits [[ 3.6441784 -2.5413084  1.354458  -4.5254903]]
Iteration 500 of 1000: loss=0.234 " + "l1=0.214" + "l2=0.0195 f=-0.526 shape=(1, 9000, 1)
logits [[ 3.507834  -2.5189917  1.3658469 -4.459662 ]]
Iteration 600 of 1000: loss=0.22 " + "l1=0.195" + "l2=0.0248 f=-0.541 shape=(1, 9000, 1)
logits [[ 3.3370013 -2.495961   1.3861    -4.3898015]]
Iteration 700 of 1000: loss=0.206 " + "l1=0.178" + "l2=0.0285 f=-0.552 shape=(1, 9000, 1)
logits [[ 3.1793728 -2.4756794  1.4030851 -4.3154883]]
Iteration 800 of 1000: loss=0.195 " + "l1=0.162" + "l2=0.0327 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.0382953 -2.4600158  1.4196583 -4.247358 ]]
Iteration 900 of 1000: loss=0.183 " + "l1=0.146" + "l2=0.037 f=-0.569 shape=(1, 9000, 1)
logits [[ 2.901999  -2.4444492  1.4378847 -4.1706123]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.86 " + "l1=2.86" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 4.212144  -2.6405485  1.347997  -4.8981037]]
Iteration 100 of 1000: loss=1.05 " + "l1=0.0609" + "l2=0.992 f=-0.588 shape=(1, 9000, 1)
logits [[ 2.0182586 -2.6151092  1.9573951 -3.7120757]]
Iteration 200 of 1000: loss=0.481 " + "l1=0" + "l2=0.481 f=-0.587 shape=(1, 9000, 1)
logits [[ 2.0437841 -2.6316075  2.044333  -3.8053417]]
Iteration 300 of 1000: loss=0.351 " + "l1=0" + "l2=0.351 f=-0.6 shape=(1, 9000, 1)
logits [[ 1.9988885 -2.6127057  2.0031276 -3.7876496]]
Iteration 400 of 1000: loss=0.283 " + "l1=0" + "l2=0.283 f=-0.602 shape=(1, 9000, 1)
logits [[ 2.0081224 -2.6405718  2.017328  -3.792523 ]]
Iteration 500 of 1000: loss=0.233 " + "l1=0.00124" + "l2=0.231 f=-0.598 shape=(1, 9000, 1)
logits [[ 2.0382407 -2.6594706  2.0370035 -3.8067634]]
Iteration 600 of 1000: loss=0.193 " + "l1=0" + "l2=0.193 f=-0.586 shape=(1, 9000, 1)
logits [[ 2.0614347 -2.687788   2.0680726 -3.7846549]]
Iteration 700 of 1000: loss=0.159 " + "l1=0" + "l2=0.159 f=-0.563 shape=(1, 9000, 1)
logits [[ 2.1507494 -2.7933278  2.1627934 -3.7737806]]
Iteration 800 of 1000: loss=0.137 " + "l1=0" + "l2=0.137 f=-0.547 shape=(1, 9000, 1)
logits [[ 2.1561332 -2.7889853  2.1668384 -3.7235513]]
Iteration 900 of 1000: loss=0.122 " + "l1=0" + "l2=0.122 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.1522653 -2.7937524  2.1679292 -3.674146 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.58 " + "l1=1.58" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 4.212144  -2.6405485  1.347997  -4.8981037]]
Iteration 100 of 1000: loss=1.08 " + "l1=0.829" + "l2=0.248 f=-0.563 shape=(1, 9000, 1)
logits [[ 2.9789388 -2.4981008  1.4714082 -4.202557 ]]
Iteration 200 of 1000: loss=0.669 " + "l1=0.298" + "l2=0.371 f=-0.622 shape=(1, 9000, 1)
logits [[ 2.0172355 -2.252955   1.4753641 -3.727005 ]]
Iteration 300 of 1000: loss=0.299 " + "l1=0" + "l2=0.299 f=-0.618 shape=(1, 9000, 1)
logits [[ 1.9273918 -2.5356631  1.9286958 -3.7921247]]
Iteration 400 of 1000: loss=0.226 " + "l1=0" + "l2=0.226 f=-0.615 shape=(1, 9000, 1)
logits [[ 1.9401608 -2.575683   1.9500545 -3.7752302]]
Iteration 500 of 1000: loss=0.173 " + "l1=0" + "l2=0.173 f=-0.606 shape=(1, 9000, 1)
logits [[ 1.954279  -2.6157706  1.9571693 -3.719807 ]]
Iteration 600 of 1000: loss=0.138 " + "l1=0" + "l2=0.138 f=-0.586 shape=(1, 9000, 1)
logits [[ 1.9484855 -2.6256857  1.9508691 -3.6193755]]
Iteration 700 of 1000: loss=0.115 " + "l1=0" + "l2=0.115 f=-0.573 shape=(1, 9000, 1)
logits [[ 1.9484261 -2.6458652  1.9524975 -3.5479572]]
Iteration 800 of 1000: loss=0.101 " + "l1=0" + "l2=0.101 f=-0.565 shape=(1, 9000, 1)
logits [[ 1.940253  -2.6688106  1.9638304 -3.4956946]]
Iteration 900 of 1000: loss=0.0875 " + "l1=0" + "l2=0.0875 f=-0.561 shape=(1, 9000, 1)
logits [[ 1.9621532 -2.6914682  1.9674369 -3.4820058]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.931 " + "l1=0.931" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 4.212144  -2.6405485  1.347997  -4.8981037]]
Iteration 100 of 1000: loss=0.763 " + "l1=0.683" + "l2=0.08 f=-0.52 shape=(1, 9000, 1)
logits [[ 3.4884148 -2.531061   1.3880352 -4.4260163]]
Iteration 200 of 1000: loss=0.63 " + "l1=0.502" + "l2=0.128 f=-0.575 shape=(1, 9000, 1)
logits [[ 2.9823182 -2.490047   1.4362847 -4.230244 ]]
Iteration 300 of 1000: loss=0.487 " + "l1=0.326" + "l2=0.161 f=-0.622 shape=(1, 9000, 1)
logits [[ 2.4421444 -2.3860056  1.4398052 -3.9831932]]
Iteration 400 of 1000: loss=0.297 " + "l1=0.0467" + "l2=0.25 f=-0.623 shape=(1, 9000, 1)
logits [[ 1.9668698 -2.5052323  1.8232614 -3.7770224]]
Iteration 500 of 1000: loss=0.187 " + "l1=0.00295" + "l2=0.184 f=-0.603 shape=(1, 9000, 1)
logits [[ 1.9555808 -2.59964    1.9464911 -3.714652 ]]
Iteration 600 of 1000: loss=0.14 " + "l1=0.00305" + "l2=0.137 f=-0.58 shape=(1, 9000, 1)
logits [[ 1.9419702 -2.5998716  1.9325968 -3.5944114]]
Iteration 700 of 1000: loss=0.113 " + "l1=0" + "l2=0.113 f=-0.565 shape=(1, 9000, 1)
logits [[ 1.9165686 -2.5991783  1.9188913 -3.4944456]]
Iteration 800 of 1000: loss=0.097 " + "l1=0" + "l2=0.097 f=-0.561 shape=(1, 9000, 1)
logits [[ 1.9099153 -2.6215498  1.9168626 -3.4492455]]
Iteration 900 of 1000: loss=0.0857 " + "l1=0.000121" + "l2=0.0856 f=-0.559 shape=(1, 9000, 1)
logits [[ 1.9088566 -2.6315517  1.9084835 -3.4199054]]
--- 283.61576652526855 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0911 " + "l1=0.0911" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 4.212144  -2.6405485  1.347997  -4.8981037]]
Iteration 100 of 1000: loss=0.0902 " + "l1=0.0898" + "l2=0.000431 f=-0.493 shape=(1, 9000, 1)
logits [[ 4.148045  -2.6173236  1.3260478 -4.8305416]]
Iteration 200 of 1000: loss=0.0899 " + "l1=0.0894" + "l2=0.000502 f=-0.494 shape=(1, 9000, 1)
logits [[ 4.1286182 -2.6098566  1.3187468 -4.8127227]]
Iteration 300 of 1000: loss=0.0896 " + "l1=0.089" + "l2=0.000641 f=-0.494 shape=(1, 9000, 1)
logits [[ 4.1060667 -2.601921   1.3111511 -4.7922597]]
Iteration 400 of 1000: loss=0.0894 " + "l1=0.0885" + "l2=0.000828 f=-0.495 shape=(1, 9000, 1)
logits [[ 4.0829315 -2.5941317  1.3038486 -4.7715707]]
Iteration 500 of 1000: loss=0.0891 " + "l1=0.0881" + "l2=0.00103 f=-0.495 shape=(1, 9000, 1)
logits [[ 4.060519  -2.5867894  1.2971824 -4.751688 ]]
Iteration 600 of 1000: loss=0.0889 " + "l1=0.0877" + "l2=0.0012 f=-0.496 shape=(1, 9000, 1)
logits [[ 4.038988  -2.5799398  1.2911655 -4.7325172]]
Iteration 700 of 1000: loss=0.0888 " + "l1=0.0874" + "l2=0.00146 f=-0.496 shape=(1, 9000, 1)
logits [[ 4.019463  -2.5740378  1.2860559 -4.715595 ]]
Iteration 800 of 1000: loss=0.0887 " + "l1=0.087" + "l2=0.0017 f=-0.496 shape=(1, 9000, 1)
logits [[ 4.0011606 -2.5689628  1.2819294 -4.699951 ]]
Iteration 900 of 1000: loss=0.0886 " + "l1=0.0867" + "l2=0.00189 f=-0.497 shape=(1, 9000, 1)
logits [[ 3.9840255 -2.5648603  1.2790909 -4.6853538]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.911 " + "l1=0.911" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 4.212144  -2.6405485  1.347997  -4.8981037]]
Iteration 100 of 1000: loss=0.832 " + "l1=0.796" + "l2=0.0358 f=-0.483 shape=(1, 9000, 1)
logits [[ 3.643898  -2.42102    1.1594313 -4.3139215]]
Iteration 200 of 1000: loss=0.787 " + "l1=0.733" + "l2=0.0536 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.322426  -2.2950747  1.0339077 -4.0091047]]
Iteration 300 of 1000: loss=0.744 " + "l1=0.672" + "l2=0.072 f=-0.485 shape=(1, 9000, 1)
logits [[ 3.014361   -2.1604524   0.91233623 -3.7051525 ]]
Iteration 400 of 1000: loss=0.691 " + "l1=0.591" + "l2=0.1 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.638595   -1.9182718   0.70923376 -3.2736967 ]]
Iteration 500 of 1000: loss=0.646 " + "l1=0.529" + "l2=0.117 f=-0.465 shape=(1, 9000, 1)
logits [[ 2.3018231 -1.7850659  0.6067933 -2.9839056]]
Iteration 600 of 1000: loss=0.599 " + "l1=0.459" + "l2=0.14 f=-0.468 shape=(1, 9000, 1)
logits [[ 1.926567  -1.6600415  0.5275275 -2.6666954]]
Iteration 700 of 1000: loss=0.552 " + "l1=0.391" + "l2=0.161 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.5659658 -1.5646819  0.4611044 -2.3406765]]
Iteration 800 of 1000: loss=0.511 " + "l1=0.332" + "l2=0.179 f=-0.474 shape=(1, 9000, 1)
logits [[ 1.2515843  -1.4892188   0.40744606 -2.0650392 ]]
Iteration 900 of 1000: loss=0.461 " + "l1=0.26" + "l2=0.201 f=-0.472 shape=(1, 9000, 1)
logits [[ 0.8856943  -1.3781433   0.31476766 -1.7107483 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.11 " + "l1=9.11" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 4.212144  -2.6405485  1.347997  -4.8981037]]
Iteration 100 of 1000: loss=2.89 " + "l1=0.0555" + "l2=2.84 f=-0.286 shape=(1, 9000, 1)
logits [[-0.06029204 -0.9048037  -0.06145317 -0.11577312]]
Iteration 200 of 1000: loss=1.81 " + "l1=0" + "l2=1.81 f=-0.325 shape=(1, 9000, 1)
logits [[-0.10720363 -0.9927586  -0.10384659 -0.09632923]]
Iteration 300 of 1000: loss=1.34 " + "l1=0.0128" + "l2=1.33 f=-0.329 shape=(1, 9000, 1)
logits [[-0.07232244 -1.104037   -0.06363226 -0.07640859]]
Iteration 400 of 1000: loss=1.04 " + "l1=0.0125" + "l2=1.03 f=-0.337 shape=(1, 9000, 1)
logits [[-0.04941087 -1.1978892  -0.04346121 -0.05595472]]
Iteration 500 of 1000: loss=0.856 " + "l1=0" + "l2=0.856 f=-0.334 shape=(1, 9000, 1)
logits [[-0.11405236 -1.2354853  -0.03699489  0.05149088]]
Iteration 600 of 1000: loss=0.695 " + "l1=0" + "l2=0.695 f=-0.341 shape=(1, 9000, 1)
logits [[-0.04835039 -1.2828915  -0.01994188 -0.01307558]]
Iteration 700 of 1000: loss=0.6 " + "l1=0.0102" + "l2=0.589 f=-0.351 shape=(1, 9000, 1)
logits [[-0.0249846  -1.3150265  -0.02686946 -0.03518335]]
Iteration 800 of 1000: loss=0.529 " + "l1=0" + "l2=0.529 f=-0.356 shape=(1, 9000, 1)
logits [[-0.05638532 -1.3254974  -0.05412087  0.01208126]]
Iteration 900 of 1000: loss=0.476 " + "l1=0" + "l2=0.476 f=-0.361 shape=(1, 9000, 1)
logits [[-0.05232182 -1.3571545  -0.03057769 -0.00355621]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.01 " + "l1=5.01" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 4.212144  -2.6405485  1.347997  -4.8981037]]
Iteration 100 of 1000: loss=2.7 " + "l1=1.34" + "l2=1.35 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.9168825  -1.1608574   0.30972138 -1.5252653 ]]
Iteration 200 of 1000: loss=1.55 " + "l1=0.183" + "l2=1.37 f=-0.358 shape=(1, 9000, 1)
logits [[-0.06446815 -0.92801005 -0.05413219 -0.38647935]]
Iteration 300 of 1000: loss=0.963 " + "l1=0.0164" + "l2=0.947 f=-0.347 shape=(1, 9000, 1)
logits [[-0.14847544 -0.8994124  -0.16360448 -0.17821601]]
Iteration 400 of 1000: loss=0.721 " + "l1=0.00521" + "l2=0.716 f=-0.358 shape=(1, 9000, 1)
logits [[-0.16864902 -0.9308917  -0.16238944 -0.17185336]]
Iteration 500 of 1000: loss=0.609 " + "l1=0" + "l2=0.609 f=-0.36 shape=(1, 9000, 1)
logits [[-0.1527546  -0.98190343 -0.1671171  -0.13672662]]
Iteration 600 of 1000: loss=0.536 " + "l1=0.0126" + "l2=0.524 f=-0.353 shape=(1, 9000, 1)
logits [[-0.12103143 -1.0174572  -0.12994304 -0.14386773]]
Iteration 700 of 1000: loss=0.457 " + "l1=0" + "l2=0.457 f=-0.35 shape=(1, 9000, 1)
logits [[-0.12276809 -1.0438238  -0.12395577 -0.10972181]]
Iteration 800 of 1000: loss=0.4 " + "l1=0" + "l2=0.4 f=-0.357 shape=(1, 9000, 1)
logits [[-0.12113886 -1.1052991  -0.12487898 -0.07646804]]
Iteration 900 of 1000: loss=0.35 " + "l1=0" + "l2=0.35 f=-0.366 shape=(1, 9000, 1)
logits [[-0.1079721  -1.1940793  -0.0980734  -0.06501408]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.96 " + "l1=2.96" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 4.212144  -2.6405485  1.347997  -4.8981037]]
Iteration 100 of 1000: loss=2.12 " + "l1=1.68" + "l2=0.448 f=-0.415 shape=(1, 9000, 1)
logits [[ 2.3000033  -1.6979494   0.59422046 -2.8570325 ]]
Iteration 200 of 1000: loss=1.55 " + "l1=0.882" + "l2=0.67 f=-0.428 shape=(1, 9000, 1)
logits [[ 0.9677222 -1.2146795  0.280999  -1.7460357]]
Iteration 300 of 1000: loss=0.994 " + "l1=0.25" + "l2=0.744 f=-0.406 shape=(1, 9000, 1)
logits [[ 0.00995698 -0.8834133   0.00780802 -0.75933033]]
Iteration 400 of 1000: loss=0.651 " + "l1=0" + "l2=0.651 f=-0.393 shape=(1, 9000, 1)
logits [[-0.2763322  -0.74623555 -0.27564192 -0.27425757]]
Iteration 500 of 1000: loss=0.528 " + "l1=0.00951" + "l2=0.519 f=-0.401 shape=(1, 9000, 1)
logits [[-0.26547757 -0.7611471  -0.2844089  -0.29473442]]
Iteration 600 of 1000: loss=0.428 " + "l1=0" + "l2=0.428 f=-0.405 shape=(1, 9000, 1)
logits [[-0.28362572 -0.7998167  -0.27762556 -0.2590695 ]]
Iteration 700 of 1000: loss=0.368 " + "l1=0.00307" + "l2=0.365 f=-0.406 shape=(1, 9000, 1)
logits [[-0.250919   -0.85429525 -0.26023084 -0.26037863]]
Iteration 800 of 1000: loss=0.33 " + "l1=0" + "l2=0.33 f=-0.409 shape=(1, 9000, 1)
logits [[-0.26333067 -0.8834838  -0.26110497 -0.22616354]]
Iteration 900 of 1000: loss=0.302 " + "l1=0.00261" + "l2=0.299 f=-0.415 shape=(1, 9000, 1)
logits [[-0.2389532  -0.9208945  -0.25180566 -0.24699003]]
--- 300.8431739807129 seconds ---
Adv result:3
