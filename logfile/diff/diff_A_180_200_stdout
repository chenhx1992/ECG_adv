Already up-to-date.
Loading model
Loading ground truth file
Attack diff is running...
Loading record A03187
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0842 " + "l1=0.0842" + "l2=0 f=-0.574 shape=(1, 9000, 1)
logits [[ 5.530461  -2.8908513  3.26788   -8.204507 ]]
Iteration 100 of 1000: loss=0.0839 " + "l1=0.0837" + "l2=0.000206 f=-0.574 shape=(1, 9000, 1)
logits [[ 5.4946446 -2.8789227  3.2536283 -8.16389  ]]
Iteration 200 of 1000: loss=0.0839 " + "l1=0.0837" + "l2=0.000184 f=-0.574 shape=(1, 9000, 1)
logits [[ 5.4895506 -2.8779697  3.2512968 -8.157628 ]]
Iteration 300 of 1000: loss=0.0838 " + "l1=0.0836" + "l2=0.000215 f=-0.574 shape=(1, 9000, 1)
logits [[ 5.481607  -2.876201   3.2477798 -8.147857 ]]
Iteration 400 of 1000: loss=0.0837 " + "l1=0.0835" + "l2=0.000271 f=-0.574 shape=(1, 9000, 1)
logits [[ 5.4728847 -2.8742623  3.2439098 -8.136979 ]]
Iteration 500 of 1000: loss=0.0837 " + "l1=0.0834" + "l2=0.000328 f=-0.574 shape=(1, 9000, 1)
logits [[ 5.4637733 -2.8722825  3.2398226 -8.125436 ]]
Iteration 600 of 1000: loss=0.0837 " + "l1=0.0832" + "l2=0.000458 f=-0.573 shape=(1, 9000, 1)
logits [[ 5.4545755 -2.8703566  3.235662  -8.113631 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.842 " + "l1=0.842" + "l2=0 f=-0.574 shape=(1, 9000, 1)
logits [[ 5.530461  -2.8908513  3.26788   -8.204507 ]]
Iteration 100 of 1000: loss=0.818 " + "l1=0.805" + "l2=0.0129 f=-0.571 shape=(1, 9000, 1)
logits [[ 5.2502046 -2.7968664  3.1539528 -7.8910804]]
Iteration 200 of 1000: loss=0.806 " + "l1=0.788" + "l2=0.0178 f=-0.57 shape=(1, 9000, 1)
logits [[ 5.113694  -2.765287   3.0997016 -7.728097 ]]
Iteration 300 of 1000: loss=0.794 " + "l1=0.772" + "l2=0.0219 f=-0.568 shape=(1, 9000, 1)
logits [[ 4.986195  -2.7361023  3.0448139 -7.566229 ]]
Iteration 400 of 1000: loss=0.781 " + "l1=0.755" + "l2=0.0263 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.85301   -2.6981761  2.9798117 -7.3935475]]
Iteration 500 of 1000: loss=0.767 " + "l1=0.735" + "l2=0.032 f=-0.559 shape=(1, 9000, 1)
logits [[ 4.701146  -2.6517193  2.9130037 -7.1979127]]
Iteration 600 of 1000: loss=0.755 " + "l1=0.718" + "l2=0.0372 f=-0.555 shape=(1, 9000, 1)
logits [[ 4.561485  -2.616734   2.8581898 -7.0211453]]
Iteration 700 of 1000: loss=0.744 " + "l1=0.701" + "l2=0.0425 f=-0.55 shape=(1, 9000, 1)
logits [[ 4.4299407 -2.582125   2.7995908 -6.848828 ]]
Iteration 800 of 1000: loss=0.732 " + "l1=0.685" + "l2=0.0469 f=-0.547 shape=(1, 9000, 1)
logits [[ 4.3060822 -2.5485039  2.7449942 -6.6925516]]
Iteration 900 of 1000: loss=0.721 " + "l1=0.668" + "l2=0.0525 f=-0.545 shape=(1, 9000, 1)
logits [[ 4.1730967 -2.5112655  2.6866763 -6.529383 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.42 " + "l1=8.42" + "l2=0 f=-0.574 shape=(1, 9000, 1)
logits [[ 5.530461  -2.8908513  3.26788   -8.204507 ]]
Iteration 100 of 1000: loss=6.07 " + "l1=4.89" + "l2=1.18 f=-0.519 shape=(1, 9000, 1)
logits [[ 2.8451202 -2.0436578  2.3223474 -5.200188 ]]
Iteration 200 of 1000: loss=4.93 " + "l1=3.47" + "l2=1.45 f=-0.495 shape=(1, 9000, 1)
logits [[ 1.7845511 -1.689843   1.779906  -3.854293 ]]
Iteration 300 of 1000: loss=4.05 " + "l1=2.58" + "l2=1.48 f=-0.474 shape=(1, 9000, 1)
logits [[ 1.2322178 -1.3436099  1.2262065 -3.0103185]]
Iteration 400 of 1000: loss=3.53 " + "l1=2.12" + "l2=1.41 f=-0.453 shape=(1, 9000, 1)
logits [[ 0.95273846 -1.1710372   0.9448378  -2.5393145 ]]
Iteration 500 of 1000: loss=3.22 " + "l1=1.84" + "l2=1.39 f=-0.429 shape=(1, 9000, 1)
logits [[ 0.7819518 -1.0554065  0.7796723 -2.2235265]]
Iteration 600 of 1000: loss=2.98 " + "l1=1.56" + "l2=1.42 f=-0.407 shape=(1, 9000, 1)
logits [[ 0.6293746 -0.9308166  0.6285089 -1.9548318]]
Iteration 700 of 1000: loss=2.78 " + "l1=1.36" + "l2=1.42 f=-0.387 shape=(1, 9000, 1)
logits [[ 0.52357787 -0.8355852   0.52393925 -1.7583771 ]]
Iteration 800 of 1000: loss=2.55 " + "l1=1.15" + "l2=1.41 f=-0.379 shape=(1, 9000, 1)
logits [[ 0.412217   -0.7348543   0.41094634 -1.6025708 ]]
Iteration 900 of 1000: loss=2.43 " + "l1=1.01" + "l2=1.42 f=-0.364 shape=(1, 9000, 1)
logits [[ 0.32300553 -0.6718872   0.3337099  -1.4391739 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=84.2 " + "l1=84.2" + "l2=0 f=-0.574 shape=(1, 9000, 1)
logits [[ 5.530461  -2.8908513  3.26788   -8.204507 ]]
Iteration 100 of 1000: loss=23.3 " + "l1=10.6" + "l2=12.7 f=-0.313 shape=(1, 9000, 1)
logits [[ 0.47258624 -0.53721845  0.5256212  -1.7143488 ]]
Iteration 200 of 1000: loss=11.7 " + "l1=0" + "l2=11.7 f=-0.273 shape=(1, 9000, 1)
logits [[-0.02701569  0.03137303  0.00182171 -1.0970395 ]]
Iteration 300 of 1000: loss=9.12 " + "l1=0" + "l2=9.12 f=-0.276 shape=(1, 9000, 1)
logits [[-0.04106911  0.02424695  0.0082068  -1.0963043 ]]
Iteration 400 of 1000: loss=7.82 " + "l1=0" + "l2=7.82 f=-0.286 shape=(1, 9000, 1)
logits [[-5.1701546e-02  9.5865298e-03  9.0257498e-04 -1.1011187e+00]]
Iteration 500 of 1000: loss=7 " + "l1=0" + "l2=7 f=-0.287 shape=(1, 9000, 1)
logits [[-0.03475274  0.00312665 -0.00164283 -1.115248  ]]
Iteration 600 of 1000: loss=6.4 " + "l1=0" + "l2=6.4 f=-0.286 shape=(1, 9000, 1)
logits [[-0.01292591  0.0017841  -0.01401916 -1.1201668 ]]
Iteration 700 of 1000: loss=5.98 " + "l1=0" + "l2=5.98 f=-0.285 shape=(1, 9000, 1)
logits [[-0.07200053 -0.00633944 -0.0331219  -1.0301714 ]]
Iteration 800 of 1000: loss=5.59 " + "l1=0" + "l2=5.59 f=-0.284 shape=(1, 9000, 1)
logits [[-0.07586052 -0.02355943 -0.04610116 -0.99134296]]
Iteration 900 of 1000: loss=5.34 " + "l1=0" + "l2=5.34 f=-0.282 shape=(1, 9000, 1)
logits [[-0.1073498  -0.02115969 -0.06322236 -0.9374124 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=46.3 " + "l1=46.3" + "l2=0 f=-0.574 shape=(1, 9000, 1)
logits [[ 5.530461  -2.8908513  3.26788   -8.204507 ]]
Iteration 100 of 1000: loss=17.9 " + "l1=10.3" + "l2=7.55 f=-0.365 shape=(1, 9000, 1)
logits [[ 1.0155396  -0.85361487  1.0277086  -2.65034   ]]
Iteration 200 of 1000: loss=10.5 " + "l1=1.21" + "l2=9.33 f=-0.284 shape=(1, 9000, 1)
logits [[ 0.09004708 -0.11749712  0.10212104 -1.210281  ]]
Iteration 300 of 1000: loss=7.44 " + "l1=0" + "l2=7.44 f=-0.284 shape=(1, 9000, 1)
logits [[-0.03287787  0.00908912  0.00158053 -1.1154599 ]]
Iteration 400 of 1000: loss=6.3 " + "l1=0.0513" + "l2=6.25 f=-0.287 shape=(1, 9000, 1)
logits [[-0.00308776 -0.01242328 -0.00877014 -1.1237646 ]]
Iteration 500 of 1000: loss=5.65 " + "l1=0" + "l2=5.65 f=-0.282 shape=(1, 9000, 1)
logits [[-0.0540566  -0.01900623 -0.03878172 -1.0180696 ]]
Iteration 600 of 1000: loss=5.21 " + "l1=0.0573" + "l2=5.15 f=-0.28 shape=(1, 9000, 1)
logits [[-0.03487652 -0.0453025  -0.05643965 -0.9837648 ]]
Iteration 700 of 1000: loss=4.81 " + "l1=0.0192" + "l2=4.79 f=-0.279 shape=(1, 9000, 1)
logits [[-0.05805679 -0.0615499  -0.06322545 -0.93513393]]
Iteration 800 of 1000: loss=4.59 " + "l1=0" + "l2=4.59 f=-0.281 shape=(1, 9000, 1)
logits [[-0.11512057 -0.05940139 -0.08940321 -0.85837644]]
Iteration 900 of 1000: loss=4.33 " + "l1=0" + "l2=4.33 f=-0.284 shape=(1, 9000, 1)
logits [[-0.1027277  -0.07427409 -0.08879539 -0.86923575]]
--- 266.01083183288574 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0226 " + "l1=0.0226" + "l2=0 f=-0.574 shape=(1, 9000, 1)
logits [[ 5.530461  -2.8908513  3.26788   -8.204507 ]]
Iteration 100 of 1000: loss=0.0225 " + "l1=0.0224" + "l2=0.000151 f=-0.575 shape=(1, 9000, 1)
logits [[ 5.504554  -2.892522   3.2688885 -8.179357 ]]
Iteration 200 of 1000: loss=0.0225 " + "l1=0.0224" + "l2=0.000114 f=-0.575 shape=(1, 9000, 1)
logits [[ 5.5036697 -2.8922627  3.268033  -8.177967 ]]
Iteration 300 of 1000: loss=0.0225 " + "l1=0.0223" + "l2=0.000132 f=-0.575 shape=(1, 9000, 1)
logits [[ 5.5001097 -2.8919995  3.2670927 -8.173693 ]]
Iteration 400 of 1000: loss=0.0225 " + "l1=0.0223" + "l2=0.000179 f=-0.575 shape=(1, 9000, 1)
logits [[ 5.4958787 -2.8917372  3.2660708 -8.168587 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.226 " + "l1=0.226" + "l2=0 f=-0.574 shape=(1, 9000, 1)
logits [[ 5.530461  -2.8908513  3.26788   -8.204507 ]]
Iteration 100 of 1000: loss=0.215 " + "l1=0.208" + "l2=0.00681 f=-0.579 shape=(1, 9000, 1)
logits [[ 5.352577  -2.906062   3.2748053 -8.037184 ]]
Iteration 200 of 1000: loss=0.211 " + "l1=0.201" + "l2=0.00963 f=-0.579 shape=(1, 9000, 1)
logits [[ 5.278754  -2.9081018  3.2699208 -7.9584746]]
Iteration 300 of 1000: loss=0.207 " + "l1=0.195" + "l2=0.0116 f=-0.579 shape=(1, 9000, 1)
logits [[ 5.2119565 -2.9059248  3.2586865 -7.8812704]]
Iteration 400 of 1000: loss=0.204 " + "l1=0.19" + "l2=0.0131 f=-0.578 shape=(1, 9000, 1)
logits [[ 5.1496506 -2.9022737  3.24556   -7.804558 ]]
Iteration 500 of 1000: loss=0.2 " + "l1=0.186" + "l2=0.0146 f=-0.577 shape=(1, 9000, 1)
logits [[ 5.0874743 -2.8975666  3.2301006 -7.726241 ]]
Iteration 600 of 1000: loss=0.197 " + "l1=0.181" + "l2=0.0159 f=-0.575 shape=(1, 9000, 1)
logits [[ 5.0287576 -2.8934226  3.2143753 -7.6498775]]
Iteration 700 of 1000: loss=0.195 " + "l1=0.178" + "l2=0.0167 f=-0.574 shape=(1, 9000, 1)
logits [[ 4.988841  -2.892383   3.2049172 -7.5992174]]
Iteration 800 of 1000: loss=0.193 " + "l1=0.175" + "l2=0.0177 f=-0.574 shape=(1, 9000, 1)
logits [[ 4.946768  -2.8911915  3.1939707 -7.544034 ]]
Iteration 900 of 1000: loss=0.191 " + "l1=0.172" + "l2=0.0189 f=-0.572 shape=(1, 9000, 1)
logits [[ 4.9039845 -2.8889554  3.182738  -7.4877152]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.26 " + "l1=2.26" + "l2=0 f=-0.574 shape=(1, 9000, 1)
logits [[ 5.530461  -2.8908513  3.26788   -8.204507 ]]
Iteration 100 of 1000: loss=1.04 " + "l1=0.366" + "l2=0.672 f=-0.586 shape=(1, 9000, 1)
logits [[ 3.6597006 -2.9992387  3.2932103 -6.2994714]]
Iteration 200 of 1000: loss=0.619 " + "l1=0.00166" + "l2=0.617 f=-0.573 shape=(1, 9000, 1)
logits [[ 3.1824632 -2.9851735  3.1808002 -5.669986 ]]
Iteration 300 of 1000: loss=0.505 " + "l1=0.0116" + "l2=0.494 f=-0.566 shape=(1, 9000, 1)
logits [[ 3.1024387 -2.9506419  3.0908191 -5.5064945]]
Iteration 400 of 1000: loss=0.43 " + "l1=0.000335" + "l2=0.43 f=-0.558 shape=(1, 9000, 1)
logits [[ 3.0326624 -2.9261923  3.032327  -5.369099 ]]
Iteration 500 of 1000: loss=0.388 " + "l1=0" + "l2=0.388 f=-0.553 shape=(1, 9000, 1)
logits [[ 2.9907942 -2.9137077  2.9911983 -5.278579 ]]
Iteration 600 of 1000: loss=0.356 " + "l1=0.000205" + "l2=0.356 f=-0.55 shape=(1, 9000, 1)
logits [[ 2.9526293 -2.897492   2.952424  -5.2059855]]
Iteration 700 of 1000: loss=0.334 " + "l1=0" + "l2=0.334 f=-0.547 shape=(1, 9000, 1)
logits [[ 2.9338503 -2.8946784  2.937222  -5.166259 ]]
Iteration 800 of 1000: loss=0.309 " + "l1=0" + "l2=0.309 f=-0.547 shape=(1, 9000, 1)
logits [[ 2.9160793 -2.894756   2.9190295 -5.1294565]]
Iteration 900 of 1000: loss=0.291 " + "l1=0" + "l2=0.291 f=-0.544 shape=(1, 9000, 1)
logits [[ 2.911553  -2.901067   2.9164314 -5.1023316]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.24 " + "l1=1.24" + "l2=0 f=-0.574 shape=(1, 9000, 1)
logits [[ 5.530461  -2.8908513  3.26788   -8.204507 ]]
Iteration 100 of 1000: loss=0.863 " + "l1=0.653" + "l2=0.21 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.480594  -2.9468637  3.2938464 -7.183625 ]]
Iteration 200 of 1000: loss=0.698 " + "l1=0.379" + "l2=0.319 f=-0.591 shape=(1, 9000, 1)
logits [[ 3.9320357 -2.9726028  3.2430508 -6.566475 ]]
Iteration 300 of 1000: loss=0.551 " + "l1=0.164" + "l2=0.386 f=-0.574 shape=(1, 9000, 1)
logits [[ 3.4200296 -2.9294522  3.121273  -5.908156 ]]
Iteration 400 of 1000: loss=0.441 " + "l1=0.0141" + "l2=0.427 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.0599797 -2.9135125  3.0342834 -5.420099 ]]
Iteration 500 of 1000: loss=0.376 " + "l1=0.000714" + "l2=0.375 f=-0.552 shape=(1, 9000, 1)
logits [[ 2.9843516 -2.9001122  2.9830534 -5.2743926]]
Iteration 600 of 1000: loss=0.339 " + "l1=0.00961" + "l2=0.33 f=-0.55 shape=(1, 9000, 1)
logits [[ 2.96153   -2.8921785  2.9440553 -5.214491 ]]
Iteration 700 of 1000: loss=0.308 " + "l1=0" + "l2=0.308 f=-0.549 shape=(1, 9000, 1)
logits [[ 2.919948  -2.8913577  2.9224517 -5.1482043]]
Iteration 800 of 1000: loss=0.282 " + "l1=0" + "l2=0.282 f=-0.545 shape=(1, 9000, 1)
logits [[ 2.9195747 -2.8922677  2.921146  -5.1266937]]
Iteration 900 of 1000: loss=0.261 " + "l1=0.00214" + "l2=0.259 f=-0.541 shape=(1, 9000, 1)
logits [[ 2.9249828 -2.900707   2.9210906 -5.1090765]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.735 " + "l1=0.735" + "l2=0 f=-0.574 shape=(1, 9000, 1)
logits [[ 5.530461  -2.8908513  3.26788   -8.204507 ]]
Iteration 100 of 1000: loss=0.609 " + "l1=0.537" + "l2=0.0721 f=-0.59 shape=(1, 9000, 1)
logits [[ 4.92709   -2.930823   3.2758484 -7.632485 ]]
Iteration 200 of 1000: loss=0.552 " + "l1=0.439" + "l2=0.112 f=-0.587 shape=(1, 9000, 1)
logits [[ 4.6147566 -2.935887   3.2629707 -7.2882824]]
Iteration 300 of 1000: loss=0.51 " + "l1=0.375" + "l2=0.135 f=-0.584 shape=(1, 9000, 1)
logits [[ 4.3824615 -2.9291754  3.228141  -7.0189447]]
Iteration 400 of 1000: loss=0.462 " + "l1=0.299" + "l2=0.162 f=-0.58 shape=(1, 9000, 1)
logits [[ 4.089259 -2.913895  3.167888 -6.661748]]
Iteration 500 of 1000: loss=0.421 " + "l1=0.239" + "l2=0.182 f=-0.571 shape=(1, 9000, 1)
logits [[ 3.8275895 -2.8827267  3.092171  -6.3225036]]
Iteration 600 of 1000: loss=0.382 " + "l1=0.184" + "l2=0.198 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.5848079 -2.8627677  3.019707  -5.991179 ]]
Iteration 700 of 1000: loss=0.35 " + "l1=0.145" + "l2=0.205 f=-0.555 shape=(1, 9000, 1)
logits [[ 3.4179387 -2.8506122  2.9720263 -5.7578173]]
Iteration 800 of 1000: loss=0.327 " + "l1=0.12" + "l2=0.207 f=-0.55 shape=(1, 9000, 1)
logits [[ 3.3121715 -2.849032   2.94261   -5.606945 ]]
Iteration 900 of 1000: loss=0.308 " + "l1=0.0989" + "l2=0.209 f=-0.546 shape=(1, 9000, 1)
logits [[ 3.2271948 -2.8512952  2.9228232 -5.4842505]]
--- 255.69746947288513 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.137 " + "l1=0.137" + "l2=0 f=-0.574 shape=(1, 9000, 1)
logits [[ 5.530461  -2.8908513  3.26788   -8.204507 ]]
Iteration 100 of 1000: loss=0.136 " + "l1=0.136" + "l2=0.000505 f=-0.573 shape=(1, 9000, 1)
logits [[ 5.4718657 -2.8840797  3.2478228 -8.125988 ]]
Iteration 200 of 1000: loss=0.136 " + "l1=0.136" + "l2=0.000535 f=-0.573 shape=(1, 9000, 1)
logits [[ 5.4567676 -2.8825824  3.2417192 -8.106159 ]]
Iteration 300 of 1000: loss=0.136 " + "l1=0.135" + "l2=0.000643 f=-0.572 shape=(1, 9000, 1)
logits [[ 5.437936  -2.8805935  3.2338352 -8.080107 ]]
Iteration 400 of 1000: loss=0.135 " + "l1=0.135" + "l2=0.000778 f=-0.572 shape=(1, 9000, 1)
logits [[ 5.4177957 -2.8784869  3.225288  -8.051669 ]]
Iteration 500 of 1000: loss=0.135 " + "l1=0.134" + "l2=0.000932 f=-0.571 shape=(1, 9000, 1)
logits [[ 5.396622  -2.8760154  3.216354  -8.021754 ]]
Iteration 600 of 1000: loss=0.135 " + "l1=0.134" + "l2=0.00109 f=-0.571 shape=(1, 9000, 1)
logits [[ 5.3748    -2.8736553  3.2072704 -7.9906945]]
Iteration 700 of 1000: loss=0.134 " + "l1=0.133" + "l2=0.00131 f=-0.57 shape=(1, 9000, 1)
logits [[ 5.3527355 -2.8713002  3.1980069 -7.959098 ]]
Iteration 800 of 1000: loss=0.134 " + "l1=0.133" + "l2=0.00167 f=-0.569 shape=(1, 9000, 1)
logits [[ 5.330738  -2.868843   3.1884968 -7.9275427]]
Iteration 900 of 1000: loss=0.134 " + "l1=0.132" + "l2=0.0019 f=-0.569 shape=(1, 9000, 1)
logits [[ 5.309794  -2.8666546  3.179438  -7.8968744]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.37 " + "l1=1.37" + "l2=0 f=-0.574 shape=(1, 9000, 1)
logits [[ 5.530461  -2.8908513  3.26788   -8.204507 ]]
Iteration 100 of 1000: loss=1.29 " + "l1=1.24" + "l2=0.0433 f=-0.561 shape=(1, 9000, 1)
logits [[ 4.9761252 -2.8289723  3.074943  -7.4675536]]
Iteration 200 of 1000: loss=1.24 " + "l1=1.18" + "l2=0.0622 f=-0.555 shape=(1, 9000, 1)
logits [[ 4.683212  -2.7929423  2.958248  -7.0688972]]
Iteration 300 of 1000: loss=1.18 " + "l1=1.11" + "l2=0.0783 f=-0.546 shape=(1, 9000, 1)
logits [[ 4.3890495 -2.745336   2.8359814 -6.662291 ]]
Iteration 400 of 1000: loss=1.13 " + "l1=1.03" + "l2=0.0953 f=-0.536 shape=(1, 9000, 1)
logits [[ 4.0827975 -2.694364   2.7170238 -6.2502832]]
Iteration 500 of 1000: loss=1.08 " + "l1=0.961" + "l2=0.115 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.7760012 -2.6563427  2.6032763 -5.829024 ]]
Iteration 600 of 1000: loss=1.03 " + "l1=0.895" + "l2=0.134 f=-0.522 shape=(1, 9000, 1)
logits [[ 3.5030434 -2.6219308  2.47882   -5.4470935]]
Iteration 700 of 1000: loss=0.988 " + "l1=0.84" + "l2=0.148 f=-0.521 shape=(1, 9000, 1)
logits [[ 3.2776756 -2.5946252  2.3564641 -5.1230416]]
Iteration 800 of 1000: loss=0.945 " + "l1=0.777" + "l2=0.168 f=-0.52 shape=(1, 9000, 1)
logits [[ 3.0232997 -2.5548964  2.1988807 -4.7470007]]
Iteration 900 of 1000: loss=0.904 " + "l1=0.715" + "l2=0.189 f=-0.513 shape=(1, 9000, 1)
logits [[ 2.7792304 -2.507204   2.0493374 -4.371979 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=13.7 " + "l1=13.7" + "l2=0 f=-0.574 shape=(1, 9000, 1)
logits [[ 5.530461  -2.8908513  3.26788   -8.204507 ]]
Iteration 100 of 1000: loss=7.26 " + "l1=4.81" + "l2=2.45 f=-0.377 shape=(1, 9000, 1)
logits [[ 1.8908377 -2.399061   1.9055831 -2.9052486]]
Iteration 200 of 1000: loss=5 " + "l1=2.06" + "l2=2.94 f=-0.308 shape=(1, 9000, 1)
logits [[ 0.8378017 -2.108658   1.0483797 -1.0107491]]
Iteration 300 of 1000: loss=3.36 " + "l1=0.296" + "l2=3.06 f=-0.225 shape=(1, 9000, 1)
logits [[ 0.14153631 -1.7213361   0.48853037  0.19257155]]
Iteration 400 of 1000: loss=2.64 " + "l1=0" + "l2=2.64 f=-0.208 shape=(1, 9000, 1)
logits [[ 0.03010559 -1.6725667   0.4012225   0.40882203]]
Iteration 500 of 1000: loss=2.26 " + "l1=0" + "l2=2.26 f=-0.207 shape=(1, 9000, 1)
logits [[ 0.03979053 -1.671973    0.40019378  0.40407702]]
Iteration 600 of 1000: loss=2.02 " + "l1=0.0122" + "l2=2 f=-0.213 shape=(1, 9000, 1)
logits [[ 0.04112333 -1.6861266   0.4020784   0.38985208]]
Iteration 700 of 1000: loss=1.85 " + "l1=0.0104" + "l2=1.84 f=-0.217 shape=(1, 9000, 1)
logits [[ 0.02304354 -1.6949754   0.40740865  0.39700562]]
Iteration 800 of 1000: loss=1.73 " + "l1=0.00602" + "l2=1.72 f=-0.217 shape=(1, 9000, 1)
logits [[ 0.01064406 -1.7059535   0.41749522  0.41147214]]
Iteration 900 of 1000: loss=1.64 " + "l1=0" + "l2=1.64 f=-0.217 shape=(1, 9000, 1)
logits [[-0.00392913 -1.7152709   0.42149252  0.43150222]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.55 " + "l1=7.55" + "l2=0 f=-0.574 shape=(1, 9000, 1)
logits [[ 5.530461  -2.8908513  3.26788   -8.204507 ]]
Iteration 100 of 1000: loss=5.04 " + "l1=3.66" + "l2=1.39 f=-0.475 shape=(1, 9000, 1)
logits [[ 2.5011203 -2.5613437  2.3063016 -4.147267 ]]
Iteration 200 of 1000: loss=3.95 " + "l1=2.53" + "l2=1.41 f=-0.413 shape=(1, 9000, 1)
logits [[ 1.7771441 -2.3817267  1.7787793 -2.825686 ]]
Iteration 300 of 1000: loss=3.04 " + "l1=1.62" + "l2=1.42 f=-0.367 shape=(1, 9000, 1)
logits [[ 1.1964685 -2.13231    1.2102518 -1.7404536]]
Iteration 400 of 1000: loss=2.48 " + "l1=1.05" + "l2=1.43 f=-0.314 shape=(1, 9000, 1)
logits [[ 0.83313674 -1.9156929   0.8679735  -1.0424984 ]]
Iteration 500 of 1000: loss=2.15 " + "l1=0.696" + "l2=1.45 f=-0.282 shape=(1, 9000, 1)
logits [[ 0.56139773 -1.8244847   0.7008319  -0.564722  ]]
Iteration 600 of 1000: loss=1.88 " + "l1=0.377" + "l2=1.5 f=-0.26 shape=(1, 9000, 1)
logits [[ 0.28282562 -1.7686914   0.5664062  -0.11931581]]
Iteration 700 of 1000: loss=1.69 " + "l1=0.178" + "l2=1.51 f=-0.244 shape=(1, 9000, 1)
logits [[ 0.10432497 -1.7260101   0.48544762  0.16201133]]
Iteration 800 of 1000: loss=1.54 " + "l1=0.0254" + "l2=1.51 f=-0.229 shape=(1, 9000, 1)
logits [[-0.03298916 -1.6897203   0.42630175  0.3800398 ]]
Iteration 900 of 1000: loss=1.42 " + "l1=0.00847" + "l2=1.41 f=-0.227 shape=(1, 9000, 1)
logits [[-0.05001377 -1.6964886   0.42778134  0.4123724 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.46 " + "l1=4.46" + "l2=0 f=-0.574 shape=(1, 9000, 1)
logits [[ 5.530461  -2.8908513  3.26788   -8.204507 ]]
Iteration 100 of 1000: loss=3.53 " + "l1=3.04" + "l2=0.491 f=-0.523 shape=(1, 9000, 1)
logits [[ 3.6344967 -2.6821582  2.665157  -5.7094727]]
Iteration 200 of 1000: loss=2.98 " + "l1=2.27" + "l2=0.706 f=-0.485 shape=(1, 9000, 1)
logits [[ 2.6486692 -2.5641136  2.3100677 -4.3360996]]
Iteration 300 of 1000: loss=2.45 " + "l1=1.63" + "l2=0.816 f=-0.462 shape=(1, 9000, 1)
logits [[ 1.8849145 -2.4882078  1.8862323 -3.1318767]]
Iteration 400 of 1000: loss=2.09 " + "l1=1.31" + "l2=0.781 f=-0.427 shape=(1, 9000, 1)
logits [[ 1.5525382 -2.3296828  1.5483125 -2.478387 ]]
Iteration 500 of 1000: loss=1.88 " + "l1=1.09" + "l2=0.79 f=-0.388 shape=(1, 9000, 1)
logits [[ 1.3259392 -2.2049303  1.3366092 -2.011614 ]]
Iteration 600 of 1000: loss=1.73 " + "l1=0.939" + "l2=0.788 f=-0.365 shape=(1, 9000, 1)
logits [[ 1.1774594 -2.1206326  1.1862588 -1.7041067]]
Iteration 700 of 1000: loss=1.61 " + "l1=0.821" + "l2=0.791 f=-0.347 shape=(1, 9000, 1)
logits [[ 1.0587596 -2.0515907  1.0650797 -1.4608898]]
Iteration 800 of 1000: loss=1.52 " + "l1=0.735" + "l2=0.789 f=-0.33 shape=(1, 9000, 1)
logits [[ 0.9643853 -1.9888483  0.9840716 -1.2777847]]
Iteration 900 of 1000: loss=1.45 " + "l1=0.655" + "l2=0.792 f=-0.315 shape=(1, 9000, 1)
logits [[ 0.8599549 -1.9295262  0.9119344 -1.1029273]]
--- 291.36367750167847 seconds ---
Adv result:3
Loading record A03212
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0606 " + "l1=0.0606" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.5216088 -2.543248   2.4502947 -5.3949275]]
Iteration 100 of 1000: loss=0.0603 " + "l1=0.06" + "l2=0.000278 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.4772787 -2.5226884  2.4323955 -5.3405952]]
Iteration 200 of 1000: loss=0.0602 " + "l1=0.0599" + "l2=0.000265 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.472016  -2.5202618  2.4296286 -5.3334064]]
Iteration 300 of 1000: loss=0.0601 " + "l1=0.0598" + "l2=0.000314 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.4640083 -2.5167358  2.4261959 -5.322625 ]]
Iteration 400 of 1000: loss=0.0601 " + "l1=0.0597" + "l2=0.000386 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.455801  -2.5132437  2.422838  -5.3114448]]
Iteration 500 of 1000: loss=0.06 " + "l1=0.0596" + "l2=0.000458 f=-0.486 shape=(1, 9000, 1)
logits [[ 3.4473577 -2.50996    2.4195008 -5.2997813]]
Iteration 600 of 1000: loss=0.06 " + "l1=0.0595" + "l2=0.000504 f=-0.485 shape=(1, 9000, 1)
logits [[ 3.4389434 -2.5068822  2.4162335 -5.288151 ]]
Iteration 700 of 1000: loss=0.06 " + "l1=0.0593" + "l2=0.000626 f=-0.484 shape=(1, 9000, 1)
logits [[ 3.4302385 -2.5037742  2.412981  -5.27588  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.606 " + "l1=0.606" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.5216088 -2.543248   2.4502947 -5.3949275]]
Iteration 100 of 1000: loss=0.574 " + "l1=0.556" + "l2=0.0181 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.1726866 -2.389585   2.3107126 -4.9715276]]
Iteration 200 of 1000: loss=0.563 " + "l1=0.54" + "l2=0.023 f=-0.462 shape=(1, 9000, 1)
logits [[ 3.0594115 -2.3452337  2.2645378 -4.826845 ]]
Iteration 300 of 1000: loss=0.553 " + "l1=0.526" + "l2=0.0275 f=-0.453 shape=(1, 9000, 1)
logits [[ 2.9517157 -2.3048832  2.2177145 -4.6782994]]
Iteration 400 of 1000: loss=0.543 " + "l1=0.513" + "l2=0.0304 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.8588977 -2.2672365  2.1752715 -4.538842 ]]
Iteration 500 of 1000: loss=0.533 " + "l1=0.499" + "l2=0.0338 f=-0.431 shape=(1, 9000, 1)
logits [[ 2.7627528 -2.2277486  2.129953  -4.390907 ]]
Iteration 600 of 1000: loss=0.523 " + "l1=0.486" + "l2=0.037 f=-0.42 shape=(1, 9000, 1)
logits [[ 2.6620927 -2.192956   2.0825737 -4.2325683]]
Iteration 700 of 1000: loss=0.512 " + "l1=0.472" + "l2=0.0397 f=-0.41 shape=(1, 9000, 1)
logits [[ 2.556251  -2.1645153  2.0338287 -4.0654354]]
Iteration 800 of 1000: loss=0.501 " + "l1=0.457" + "l2=0.0437 f=-0.401 shape=(1, 9000, 1)
logits [[ 2.436006  -2.1347425  1.9754994 -3.8808763]]
Iteration 900 of 1000: loss=0.49 " + "l1=0.442" + "l2=0.048 f=-0.392 shape=(1, 9000, 1)
logits [[ 2.3128088 -2.1081266  1.9196103 -3.6936712]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.06 " + "l1=6.06" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.5216088 -2.543248   2.4502947 -5.3949275]]
Iteration 100 of 1000: loss=3.72 " + "l1=2.76" + "l2=0.959 f=-0.317 shape=(1, 9000, 1)
logits [[ 1.3023427 -1.4589484  1.2971063 -2.4096072]]
Iteration 200 of 1000: loss=2.93 " + "l1=1.83" + "l2=1.1 f=-0.256 shape=(1, 9000, 1)
logits [[ 0.8175505  -0.9978455   0.83099717 -1.6727556 ]]
Iteration 300 of 1000: loss=2.34 " + "l1=1.04" + "l2=1.3 f=-0.263 shape=(1, 9000, 1)
logits [[ 0.45616156 -0.58669424  0.4551666  -1.3778713 ]]
Iteration 400 of 1000: loss=1.89 " + "l1=0.611" + "l2=1.28 f=-0.294 shape=(1, 9000, 1)
logits [[ 0.28602573 -0.3251927   0.28303805 -1.4198291 ]]
Iteration 500 of 1000: loss=1.54 " + "l1=0.33" + "l2=1.21 f=-0.292 shape=(1, 9000, 1)
logits [[ 0.1505285  -0.17945352  0.1500667  -1.2897537 ]]
Iteration 600 of 1000: loss=1.29 " + "l1=0.134" + "l2=1.16 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.04116694 -0.08761789  0.04621457 -1.1524339 ]]
Iteration 700 of 1000: loss=1.13 " + "l1=0.00865" + "l2=1.12 f=-0.295 shape=(1, 9000, 1)
logits [[-0.02680988 -0.02992299 -0.02127206 -1.102607  ]]
Iteration 800 of 1000: loss=1 " + "l1=0.013" + "l2=0.989 f=-0.303 shape=(1, 9000, 1)
logits [[-0.02470497 -0.03772889 -0.02472661 -1.1245062 ]]
Iteration 900 of 1000: loss=0.938 " + "l1=0" + "l2=0.938 f=-0.313 shape=(1, 9000, 1)
logits [[-0.06295571 -0.03352903 -0.04033808 -1.1141963 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.34 " + "l1=3.34" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.5216088 -2.543248   2.4502947 -5.3949275]]
Iteration 100 of 1000: loss=2.44 " + "l1=1.98" + "l2=0.455 f=-0.36 shape=(1, 9000, 1)
logits [[ 1.7669613 -1.8376575  1.7311181 -3.1012895]]
Iteration 200 of 1000: loss=2.13 " + "l1=1.65" + "l2=0.48 f=-0.327 shape=(1, 9000, 1)
logits [[ 1.4203207 -1.5841281  1.4171032 -2.5632322]]
Iteration 300 of 1000: loss=1.91 " + "l1=1.39" + "l2=0.516 f=-0.296 shape=(1, 9000, 1)
logits [[ 1.1425965 -1.3884406  1.1460043 -2.0844321]]
Iteration 400 of 1000: loss=1.72 " + "l1=1.18" + "l2=0.538 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.91024935 -1.2378986   0.90939426 -1.7045813 ]]
Iteration 500 of 1000: loss=1.52 " + "l1=0.96" + "l2=0.559 f=-0.273 shape=(1, 9000, 1)
logits [[ 0.6860581 -1.0519994  0.6933513 -1.4202443]]
Iteration 600 of 1000: loss=1.37 " + "l1=0.826" + "l2=0.54 f=-0.278 shape=(1, 9000, 1)
logits [[ 0.56463295 -0.93698573  0.56517464 -1.3064842 ]]
Iteration 700 of 1000: loss=1.27 " + "l1=0.735" + "l2=0.535 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.48330894 -0.8536026   0.48344514 -1.2442042 ]]
Iteration 800 of 1000: loss=1.19 " + "l1=0.624" + "l2=0.568 f=-0.274 shape=(1, 9000, 1)
logits [[ 0.38014963 -0.7456491   0.3880312  -1.1201036 ]]
Iteration 900 of 1000: loss=1.1 " + "l1=0.44" + "l2=0.657 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.2641699  -0.5333531   0.26700008 -1.149548  ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.7 " + "l1=4.7" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.5216088 -2.543248   2.4502947 -5.3949275]]
Iteration 100 of 1000: loss=3.12 " + "l1=2.46" + "l2=0.658 f=-0.337 shape=(1, 9000, 1)
logits [[ 1.5287607 -1.6511735  1.5249788 -2.7499914]]
Iteration 200 of 1000: loss=2.63 " + "l1=1.86" + "l2=0.772 f=-0.294 shape=(1, 9000, 1)
logits [[ 1.0898727 -1.302552   1.0922778 -2.0546176]]
Iteration 300 of 1000: loss=2.29 " + "l1=1.49" + "l2=0.802 f=-0.261 shape=(1, 9000, 1)
logits [[ 0.8063513  -1.11316     0.81084925 -1.5467588 ]]
Iteration 400 of 1000: loss=1.97 " + "l1=1.11" + "l2=0.859 f=-0.244 shape=(1, 9000, 1)
logits [[ 0.5681789 -0.8601413  0.566874  -1.2527921]]
Iteration 500 of 1000: loss=1.67 " + "l1=0.819" + "l2=0.847 f=-0.252 shape=(1, 9000, 1)
logits [[ 0.42464903 -0.6320365   0.41929653 -1.2180579 ]]
Iteration 600 of 1000: loss=1.39 " + "l1=0.477" + "l2=0.914 f=-0.278 shape=(1, 9000, 1)
logits [[ 0.23637208 -0.37170267  0.2440763  -1.2187829 ]]
Iteration 700 of 1000: loss=1.21 " + "l1=0.345" + "l2=0.86 f=-0.294 shape=(1, 9000, 1)
logits [[ 0.14971745 -0.29007426  0.1552581  -1.190677  ]]
Iteration 800 of 1000: loss=1.08 " + "l1=0.237" + "l2=0.845 f=-0.297 shape=(1, 9000, 1)
logits [[ 0.0742626  -0.22207153  0.08317902 -1.1238399 ]]
Iteration 900 of 1000: loss=0.988 " + "l1=0.158" + "l2=0.83 f=-0.294 shape=(1, 9000, 1)
logits [[ 0.01798415 -0.17840156  0.02530697 -1.040017  ]]
--- 275.3707480430603 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0107 " + "l1=0.0107" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.5216088 -2.543248   2.4502947 -5.3949275]]
Iteration 100 of 1000: loss=0.0106 " + "l1=0.0104" + "l2=0.000164 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.4912024 -2.542614   2.4508376 -5.3583345]]
Iteration 200 of 1000: loss=0.0105 " + "l1=0.0104" + "l2=0.000119 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.490384 -2.542719  2.450517 -5.357122]]
Iteration 300 of 1000: loss=0.0105 " + "l1=0.0104" + "l2=0.00013 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.4863362 -2.5428784  2.4504507 -5.352265 ]]
Iteration 400 of 1000: loss=0.0105 " + "l1=0.0103" + "l2=0.000197 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.481673  -2.543049   2.4504395 -5.346691 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.107 " + "l1=0.107" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.5216088 -2.543248   2.4502947 -5.3949275]]
Iteration 100 of 1000: loss=0.0933 " + "l1=0.0854" + "l2=0.00788 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.3084147 -2.5473785  2.4546325 -5.1389346]]
Iteration 200 of 1000: loss=0.088 " + "l1=0.0773" + "l2=0.0107 f=-0.478 shape=(1, 9000, 1)
logits [[ 3.230223  -2.5535235  2.457082  -5.0454135]]
Iteration 300 of 1000: loss=0.0826 " + "l1=0.0692" + "l2=0.0134 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.1525238 -2.5676184  2.4603589 -4.9513745]]
Iteration 400 of 1000: loss=0.0762 " + "l1=0.0594" + "l2=0.0168 f=-0.478 shape=(1, 9000, 1)
logits [[ 3.0586975 -2.5894184  2.4645793 -4.8455033]]
Iteration 500 of 1000: loss=0.0698 " + "l1=0.0514" + "l2=0.0184 f=-0.48 shape=(1, 9000, 1)
logits [[ 2.9840996 -2.6080189  2.4696486 -4.7640047]]
Iteration 600 of 1000: loss=0.0643 " + "l1=0.0443" + "l2=0.02 f=-0.48 shape=(1, 9000, 1)
logits [[ 2.9115632 -2.6197343  2.4685686 -4.679731 ]]
Iteration 700 of 1000: loss=0.0594 " + "l1=0.0395" + "l2=0.0199 f=-0.478 shape=(1, 9000, 1)
logits [[ 2.8570945 -2.6209488  2.4620943 -4.608787 ]]
Iteration 800 of 1000: loss=0.0547 " + "l1=0.0344" + "l2=0.0203 f=-0.475 shape=(1, 9000, 1)
logits [[ 2.7985182 -2.623098   2.4546108 -4.5293593]]
Iteration 900 of 1000: loss=0.0502 " + "l1=0.0296" + "l2=0.0206 f=-0.473 shape=(1, 9000, 1)
logits [[ 2.7382145 -2.6230085  2.4419794 -4.448525 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.07 " + "l1=1.07" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.5216088 -2.543248   2.4502947 -5.3949275]]
Iteration 100 of 1000: loss=0.169 " + "l1=0" + "l2=0.169 f=-0.46 shape=(1, 9000, 1)
logits [[ 2.49861   -2.63444    2.5063052 -4.2108755]]
Iteration 200 of 1000: loss=0.122 " + "l1=0" + "l2=0.122 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.4856634 -2.6469524  2.496012  -4.1669827]]
Iteration 300 of 1000: loss=0.0964 " + "l1=0.00394" + "l2=0.0925 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.484857  -2.6530163  2.480919  -4.1427975]]
Iteration 400 of 1000: loss=0.082 " + "l1=0.00639" + "l2=0.0756 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.465751  -2.651964   2.459365  -4.1055236]]
Iteration 500 of 1000: loss=0.0655 " + "l1=0.00068" + "l2=0.0648 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.4408233 -2.651279   2.440143  -4.0668635]]
Iteration 600 of 1000: loss=0.0602 " + "l1=0.00469" + "l2=0.0555 f=-0.46 shape=(1, 9000, 1)
logits [[ 2.429349  -2.6453109  2.424657  -4.049803 ]]
Iteration 700 of 1000: loss=0.0551 " + "l1=0" + "l2=0.0551 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.385074  -2.6442833  2.4132726 -3.9845417]]
Iteration 800 of 1000: loss=0.047 " + "l1=0" + "l2=0.047 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.3846545 -2.6374757  2.3978016 -3.9813538]]
Iteration 900 of 1000: loss=0.0425 " + "l1=0.00111" + "l2=0.0414 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.3837106 -2.634642   2.3826013 -3.9742377]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.589 " + "l1=0.589" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.5216088 -2.543248   2.4502947 -5.3949275]]
Iteration 100 of 1000: loss=0.166 " + "l1=0.000261" + "l2=0.166 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.5110931 -2.644147   2.5106182 -4.2310476]]
Iteration 200 of 1000: loss=0.115 " + "l1=0.00416" + "l2=0.111 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.5091834 -2.6580238  2.5016139 -4.205159 ]]
Iteration 300 of 1000: loss=0.0884 " + "l1=0" + "l2=0.0884 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.4780672 -2.6638467  2.4827464 -4.143984 ]]
Iteration 400 of 1000: loss=0.0752 " + "l1=0" + "l2=0.0752 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.4415345 -2.655822   2.4574716 -4.086792 ]]
Iteration 500 of 1000: loss=0.0625 " + "l1=0.00297" + "l2=0.0596 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.4437504 -2.65266    2.438358  -4.076133 ]]
Iteration 600 of 1000: loss=0.0533 " + "l1=0" + "l2=0.0533 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.4222088 -2.64984    2.428329  -4.045442 ]]
Iteration 700 of 1000: loss=0.0465 " + "l1=0" + "l2=0.0465 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.4106863 -2.646272   2.4113033 -4.0212555]]
Iteration 800 of 1000: loss=0.0438 " + "l1=0" + "l2=0.0438 f=-0.46 shape=(1, 9000, 1)
logits [[ 2.3801272 -2.6434453  2.3953376 -3.971553 ]]
Iteration 900 of 1000: loss=0.0396 " + "l1=0.00124" + "l2=0.0384 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.3832083 -2.6404076  2.3809516 -3.9691274]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.348 " + "l1=0.348" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.5216088 -2.543248   2.4502947 -5.3949275]]
Iteration 100 of 1000: loss=0.189 " + "l1=0.102" + "l2=0.0874 f=-0.473 shape=(1, 9000, 1)
logits [[ 2.7926342 -2.6161063  2.4797904 -4.5469384]]
Iteration 200 of 1000: loss=0.122 " + "l1=0.00363" + "l2=0.119 f=-0.464 shape=(1, 9000, 1)
logits [[ 2.5139437 -2.654551   2.5027878 -4.219863 ]]
Iteration 300 of 1000: loss=0.0903 " + "l1=0.00309" + "l2=0.0872 f=-0.464 shape=(1, 9000, 1)
logits [[ 2.4973462 -2.6639733  2.4878244 -4.1790123]]
Iteration 400 of 1000: loss=0.0718 " + "l1=0.000425" + "l2=0.0714 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.4656608 -2.6570492  2.4643545 -4.1252823]]
Iteration 500 of 1000: loss=0.0595 " + "l1=0.00175" + "l2=0.0577 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.446892  -2.6513717  2.4415195 -4.0839863]]
Iteration 600 of 1000: loss=0.051 " + "l1=0.00127" + "l2=0.0498 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.4318054 -2.6479518  2.4279053 -4.0589457]]
Iteration 700 of 1000: loss=0.0452 " + "l1=0.00195" + "l2=0.0433 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.4165947 -2.6459198  2.4106069 -4.026263 ]]
Iteration 800 of 1000: loss=0.0408 " + "l1=0" + "l2=0.0408 f=-0.46 shape=(1, 9000, 1)
logits [[ 2.389371  -2.643775   2.3951473 -3.98075  ]]
Iteration 900 of 1000: loss=0.0374 " + "l1=0.000574" + "l2=0.0368 f=-0.46 shape=(1, 9000, 1)
logits [[ 2.3834786 -2.6413379  2.381713  -3.9657013]]
--- 257.23957204818726 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0892 " + "l1=0.0892" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.5216088 -2.543248   2.4502947 -5.3949275]]
Iteration 100 of 1000: loss=0.088 " + "l1=0.0873" + "l2=0.000709 f=-0.485 shape=(1, 9000, 1)
logits [[ 3.4456131 -2.5287936  2.427365  -5.285207 ]]
Iteration 200 of 1000: loss=0.0877 " + "l1=0.0869" + "l2=0.000763 f=-0.484 shape=(1, 9000, 1)
logits [[ 3.430145  -2.5261438  2.4219215 -5.2618756]]
Iteration 300 of 1000: loss=0.0874 " + "l1=0.0865" + "l2=0.000894 f=-0.482 shape=(1, 9000, 1)
logits [[ 3.412796  -2.5235534  2.4164965 -5.2347527]]
Iteration 400 of 1000: loss=0.087 " + "l1=0.086" + "l2=0.00101 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.3947988 -2.5211833  2.410882  -5.206563 ]]
Iteration 500 of 1000: loss=0.0867 " + "l1=0.0855" + "l2=0.00114 f=-0.479 shape=(1, 9000, 1)
logits [[ 3.3762739 -2.518902   2.405095  -5.1771173]]
Iteration 600 of 1000: loss=0.0863 " + "l1=0.085" + "l2=0.00127 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.3568091 -2.5170465  2.3988974 -5.1457424]]
Iteration 700 of 1000: loss=0.086 " + "l1=0.0845" + "l2=0.00149 f=-0.475 shape=(1, 9000, 1)
logits [[ 3.3380146 -2.5154047  2.392677  -5.11509  ]]
Iteration 800 of 1000: loss=0.0856 " + "l1=0.084" + "l2=0.00164 f=-0.473 shape=(1, 9000, 1)
logits [[ 3.317939  -2.513555   2.3862526 -5.0828724]]
Iteration 900 of 1000: loss=0.0853 " + "l1=0.0835" + "l2=0.00181 f=-0.471 shape=(1, 9000, 1)
logits [[ 3.2980387 -2.5108306  2.379636  -5.051657 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.892 " + "l1=0.892" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.5216088 -2.543248   2.4502947 -5.3949275]]
Iteration 100 of 1000: loss=0.782 " + "l1=0.72" + "l2=0.0616 f=-0.438 shape=(1, 9000, 1)
logits [[ 2.821524  -2.4412096  2.2476964 -4.3798456]]
Iteration 200 of 1000: loss=0.724 " + "l1=0.638" + "l2=0.0857 f=-0.409 shape=(1, 9000, 1)
logits [[ 2.499397  -2.4097288  2.15306   -3.8801198]]
Iteration 300 of 1000: loss=0.663 " + "l1=0.562" + "l2=0.102 f=-0.385 shape=(1, 9000, 1)
logits [[ 2.2075741 -2.380442   2.0425737 -3.4085817]]
Iteration 400 of 1000: loss=0.609 " + "l1=0.501" + "l2=0.108 f=-0.37 shape=(1, 9000, 1)
logits [[ 1.9733902 -2.357918   1.944968  -3.0392191]]
Iteration 500 of 1000: loss=0.566 " + "l1=0.462" + "l2=0.104 f=-0.363 shape=(1, 9000, 1)
logits [[ 1.825546  -2.3112931  1.8260461 -2.7935355]]
Iteration 600 of 1000: loss=0.533 " + "l1=0.434" + "l2=0.0988 f=-0.362 shape=(1, 9000, 1)
logits [[ 1.7169658 -2.2629983  1.7204493 -2.6217115]]
Iteration 700 of 1000: loss=0.508 " + "l1=0.413" + "l2=0.0953 f=-0.364 shape=(1, 9000, 1)
logits [[ 1.6309538 -2.22007    1.631174  -2.4963398]]
Iteration 800 of 1000: loss=0.49 " + "l1=0.392" + "l2=0.0975 f=-0.362 shape=(1, 9000, 1)
logits [[ 1.540415  -2.1843905  1.5595797 -2.361714 ]]
Iteration 900 of 1000: loss=0.476 " + "l1=0.376" + "l2=0.1 f=-0.358 shape=(1, 9000, 1)
logits [[ 1.4642389 -2.1575773  1.508879  -2.2481954]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.92 " + "l1=8.92" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.5216088 -2.543248   2.4502947 -5.3949275]]
Iteration 100 of 1000: loss=3 " + "l1=0.671" + "l2=2.32 f=-0.156 shape=(1, 9000, 1)
logits [[ 0.24810287 -1.6613442   0.73089033  0.05985779]]
Iteration 200 of 1000: loss=1.9 " + "l1=0.0436" + "l2=1.85 f=-0.146 shape=(1, 9000, 1)
logits [[-0.02585947 -1.4843764   0.4850516   0.44146928]]
Iteration 300 of 1000: loss=1.5 " + "l1=0" + "l2=1.5 f=-0.163 shape=(1, 9000, 1)
logits [[-0.05002265 -1.4479437   0.4119707   0.4342333 ]]
Iteration 400 of 1000: loss=1.28 " + "l1=0.00209" + "l2=1.28 f=-0.175 shape=(1, 9000, 1)
logits [[-0.04583185 -1.4386237   0.39274666  0.3906566 ]]
Iteration 500 of 1000: loss=1.13 " + "l1=0.00304" + "l2=1.13 f=-0.179 shape=(1, 9000, 1)
logits [[-0.04977077 -1.4269253   0.3819885   0.37894705]]
Iteration 600 of 1000: loss=1.01 " + "l1=0" + "l2=1.01 f=-0.183 shape=(1, 9000, 1)
logits [[-0.05874565 -1.4190162   0.37197813  0.37564248]]
Iteration 700 of 1000: loss=0.923 " + "l1=0.00648" + "l2=0.917 f=-0.187 shape=(1, 9000, 1)
logits [[-0.06436627 -1.4122529   0.36824277  0.36175987]]
Iteration 800 of 1000: loss=0.845 " + "l1=0" + "l2=0.845 f=-0.19 shape=(1, 9000, 1)
logits [[-0.08505717 -1.4012663   0.35778737  0.36922678]]
Iteration 900 of 1000: loss=0.779 " + "l1=0" + "l2=0.779 f=-0.195 shape=(1, 9000, 1)
logits [[-0.09778306 -1.4010705   0.35353836  0.36406553]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.9 " + "l1=4.9" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.5216088 -2.543248   2.4502947 -5.3949275]]
Iteration 100 of 1000: loss=2.58 " + "l1=1.63" + "l2=0.949 f=-0.259 shape=(1, 9000, 1)
logits [[ 1.2060789 -1.9241549  1.3235344 -1.6406373]]
Iteration 200 of 1000: loss=1.81 " + "l1=0.667" + "l2=1.14 f=-0.217 shape=(1, 9000, 1)
logits [[ 0.46755052 -1.683492    0.78119    -0.43153957]]
Iteration 300 of 1000: loss=1.35 " + "l1=0.154" + "l2=1.2 f=-0.176 shape=(1, 9000, 1)
logits [[ 0.08900118 -1.5329527   0.5099521   0.23067155]]
Iteration 400 of 1000: loss=1.06 " + "l1=0.00824" + "l2=1.05 f=-0.164 shape=(1, 9000, 1)
logits [[-0.01096608 -1.4954575   0.43219802  0.41721174]]
Iteration 500 of 1000: loss=0.876 " + "l1=0.00253" + "l2=0.874 f=-0.169 shape=(1, 9000, 1)
logits [[-0.02229014 -1.4744983   0.4134082   0.4088162 ]]
Iteration 600 of 1000: loss=0.747 " + "l1=0" + "l2=0.747 f=-0.182 shape=(1, 9000, 1)
logits [[-0.0390314  -1.4657282   0.3877865   0.38914075]]
Iteration 700 of 1000: loss=0.673 " + "l1=0" + "l2=0.673 f=-0.194 shape=(1, 9000, 1)
logits [[-0.05844428 -1.4705713   0.3718932   0.3816604 ]]
Iteration 800 of 1000: loss=0.626 " + "l1=0.00779" + "l2=0.618 f=-0.207 shape=(1, 9000, 1)
logits [[-0.07164864 -1.4876341   0.37355286  0.3593873 ]]
Iteration 900 of 1000: loss=0.589 " + "l1=0.00347" + "l2=0.585 f=-0.212 shape=(1, 9000, 1)
logits [[-0.08547851 -1.4996108   0.37189725  0.3655797 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.9 " + "l1=2.9" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.5216088 -2.543248   2.4502947 -5.3949275]]
Iteration 100 of 1000: loss=1.87 " + "l1=1.47" + "l2=0.4 f=-0.327 shape=(1, 9000, 1)
logits [[ 1.7961582 -2.1858184  1.7975072 -2.7165434]]
Iteration 200 of 1000: loss=1.54 " + "l1=1.09" + "l2=0.444 f=-0.287 shape=(1, 9000, 1)
logits [[ 1.3739674 -2.0229895  1.4333129 -1.9335549]]
Iteration 300 of 1000: loss=1.25 " + "l1=0.75" + "l2=0.504 f=-0.262 shape=(1, 9000, 1)
logits [[ 0.9175825 -1.8776171  1.1097403 -1.1972505]]
Iteration 400 of 1000: loss=1.05 " + "l1=0.527" + "l2=0.526 f=-0.246 shape=(1, 9000, 1)
logits [[ 0.591769   -1.7815876   0.91473955 -0.7076537 ]]
Iteration 500 of 1000: loss=0.916 " + "l1=0.365" + "l2=0.551 f=-0.224 shape=(1, 9000, 1)
logits [[ 0.3857369  -1.6985483   0.76847875 -0.35342592]]
Iteration 600 of 1000: loss=0.806 " + "l1=0.247" + "l2=0.559 f=-0.21 shape=(1, 9000, 1)
logits [[ 0.23943654 -1.6539422   0.6672595  -0.09360672]]
Iteration 700 of 1000: loss=0.711 " + "l1=0.122" + "l2=0.589 f=-0.196 shape=(1, 9000, 1)
logits [[ 0.08510789 -1.5969527   0.5508653   0.17531678]]
Iteration 800 of 1000: loss=0.639 " + "l1=0.0437" + "l2=0.595 f=-0.186 shape=(1, 9000, 1)
logits [[-0.02104707 -1.5671629   0.4893879   0.35487264]]
Iteration 900 of 1000: loss=0.59 " + "l1=0.000125" + "l2=0.59 f=-0.18 shape=(1, 9000, 1)
logits [[-0.08340381 -1.5553327   0.45954022  0.45915484]]
--- 292.24060249328613 seconds ---
Adv result:3
Loading record A03223
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0626 " + "l1=0.0626" + "l2=0 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.4417982 -2.8206637  2.8027437 -5.2207785]]
Iteration 100 of 1000: loss=0.0621 " + "l1=0.0617" + "l2=0.00035 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.3907773 -2.7825596  2.7759886 -5.1707735]]
Iteration 200 of 1000: loss=0.0619 " + "l1=0.0616" + "l2=0.000342 f=-0.446 shape=(1, 9000, 1)
logits [[ 3.3833835 -2.7759905  2.7709405 -5.16278  ]]
Iteration 300 of 1000: loss=0.0618 " + "l1=0.0614" + "l2=0.000396 f=-0.445 shape=(1, 9000, 1)
logits [[ 3.3729308 -2.7668085  2.764003  -5.1515617]]
Iteration 400 of 1000: loss=0.0617 " + "l1=0.0612" + "l2=0.000465 f=-0.445 shape=(1, 9000, 1)
logits [[ 3.3614774 -2.7570674  2.7563868 -5.1391625]]
Iteration 500 of 1000: loss=0.0615 " + "l1=0.061" + "l2=0.000573 f=-0.444 shape=(1, 9000, 1)
logits [[ 3.3499253 -2.7465084  2.748474  -5.126591 ]]
Iteration 600 of 1000: loss=0.0614 " + "l1=0.0607" + "l2=0.000659 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.3374631 -2.7360833  2.7403865 -5.112999 ]]
Iteration 700 of 1000: loss=0.0613 " + "l1=0.0605" + "l2=0.000789 f=-0.442 shape=(1, 9000, 1)
logits [[ 3.3242352 -2.7258117  2.7321255 -5.098449 ]]
Iteration 800 of 1000: loss=0.0612 " + "l1=0.0602" + "l2=0.000957 f=-0.441 shape=(1, 9000, 1)
logits [[ 3.309702  -2.7144833  2.7231457 -5.083279 ]]
Iteration 900 of 1000: loss=0.061 " + "l1=0.06" + "l2=0.00103 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.2952132 -2.703678   2.714381  -5.067196 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.626 " + "l1=0.626" + "l2=0 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.4417982 -2.8206637  2.8027437 -5.2207785]]
Iteration 100 of 1000: loss=0.577 " + "l1=0.552" + "l2=0.0254 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.020941  -2.4967759  2.5934746 -4.8203073]]
Iteration 200 of 1000: loss=0.551 " + "l1=0.518" + "l2=0.0333 f=-0.419 shape=(1, 9000, 1)
logits [[ 2.817865  -2.3605218  2.4913921 -4.6263394]]
Iteration 300 of 1000: loss=0.526 " + "l1=0.486" + "l2=0.0401 f=-0.415 shape=(1, 9000, 1)
logits [[ 2.62502  -2.233535  2.390083 -4.442553]]
Iteration 400 of 1000: loss=0.501 " + "l1=0.455" + "l2=0.0462 f=-0.405 shape=(1, 9000, 1)
logits [[ 2.434568  -2.114412   2.2909324 -4.231191 ]]
Iteration 500 of 1000: loss=0.475 " + "l1=0.423" + "l2=0.0517 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.2314012 -2.001388   2.2039979 -3.985416 ]]
Iteration 600 of 1000: loss=0.452 " + "l1=0.398" + "l2=0.0532 f=-0.378 shape=(1, 9000, 1)
logits [[ 2.1047654 -1.8792107  2.1056268 -3.8420196]]
Iteration 700 of 1000: loss=0.429 " + "l1=0.374" + "l2=0.0559 f=-0.368 shape=(1, 9000, 1)
logits [[ 1.9949129 -1.7395589  1.9956803 -3.7232227]]
Iteration 800 of 1000: loss=0.403 " + "l1=0.34" + "l2=0.063 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.8380058 -1.5565852  1.8401036 -3.5321703]]
Iteration 900 of 1000: loss=0.365 " + "l1=0.295" + "l2=0.0706 f=-0.335 shape=(1, 9000, 1)
logits [[ 1.6393743 -1.3092686  1.6374316 -3.305659 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.26 " + "l1=6.26" + "l2=0 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.4417982 -2.8206637  2.8027437 -5.2207785]]
Iteration 100 of 1000: loss=2.83 " + "l1=1.78" + "l2=1.05 f=-0.342 shape=(1, 9000, 1)
logits [[ 1.1944225  -0.57146096  1.2042347  -3.1947684 ]]
Iteration 200 of 1000: loss=1.9 " + "l1=0.783" + "l2=1.11 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.65671164 -0.09544159  0.6873371  -2.314444  ]]
Iteration 300 of 1000: loss=1.44 " + "l1=0.403" + "l2=1.04 f=-0.233 shape=(1, 9000, 1)
logits [[ 0.40286276  0.0499457   0.45275554 -1.8368005 ]]
Iteration 400 of 1000: loss=1.17 " + "l1=0.103" + "l2=1.06 f=-0.209 shape=(1, 9000, 1)
logits [[ 0.14513746  0.15402362  0.25733784 -1.391979  ]]
Iteration 500 of 1000: loss=1.03 " + "l1=0.0133" + "l2=1.01 f=-0.199 shape=(1, 9000, 1)
logits [[ 0.03173584  0.1759943   0.18927035 -1.1943963 ]]
Iteration 600 of 1000: loss=0.925 " + "l1=0.00222" + "l2=0.922 f=-0.19 shape=(1, 9000, 1)
logits [[-0.00724628  0.14598505  0.14820078 -1.0467912 ]]
Iteration 700 of 1000: loss=0.839 " + "l1=0" + "l2=0.839 f=-0.173 shape=(1, 9000, 1)
logits [[-0.02863717  0.11195173  0.11022574 -0.8858205 ]]
Iteration 800 of 1000: loss=0.768 " + "l1=0.000548" + "l2=0.767 f=-0.156 shape=(1, 9000, 1)
logits [[-0.04702813  0.08848506  0.0890335  -0.7525743 ]]
Iteration 900 of 1000: loss=0.71 " + "l1=0" + "l2=0.71 f=-0.148 shape=(1, 9000, 1)
logits [[-0.07624064  0.07194526  0.07023619 -0.65607625]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.44 " + "l1=3.44" + "l2=0 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.4417982 -2.8206637  2.8027437 -5.2207785]]
Iteration 100 of 1000: loss=2.05 " + "l1=1.48" + "l2=0.571 f=-0.374 shape=(1, 9000, 1)
logits [[ 1.5779135 -1.0999019  1.5847442 -3.5585325]]
Iteration 200 of 1000: loss=1.55 " + "l1=0.961" + "l2=0.589 f=-0.326 shape=(1, 9000, 1)
logits [[ 1.1416256 -0.5933346  1.154119  -3.007159 ]]
Iteration 300 of 1000: loss=1.27 " + "l1=0.669" + "l2=0.599 f=-0.285 shape=(1, 9000, 1)
logits [[ 0.84653604 -0.35991204  0.8557179  -2.4822953 ]]
Iteration 400 of 1000: loss=1.1 " + "l1=0.501" + "l2=0.599 f=-0.247 shape=(1, 9000, 1)
logits [[ 0.6610939  -0.23561381  0.6752559  -2.0898685 ]]
Iteration 500 of 1000: loss=0.96 " + "l1=0.389" + "l2=0.571 f=-0.219 shape=(1, 9000, 1)
logits [[ 0.5409927  -0.16272527  0.54517955 -1.7981782 ]]
Iteration 600 of 1000: loss=0.861 " + "l1=0.321" + "l2=0.54 f=-0.202 shape=(1, 9000, 1)
logits [[ 0.44526377 -0.11095398  0.47254446 -1.61331   ]]
Iteration 700 of 1000: loss=0.757 " + "l1=0.264" + "l2=0.493 f=-0.185 shape=(1, 9000, 1)
logits [[ 0.3741623  -0.07101562  0.40871105 -1.4537346 ]]
Iteration 800 of 1000: loss=0.655 " + "l1=0.185" + "l2=0.47 f=-0.169 shape=(1, 9000, 1)
logits [[ 0.2679085  -0.03124713  0.30472094 -1.2165632 ]]
Iteration 900 of 1000: loss=0.579 " + "l1=0.122" + "l2=0.457 f=-0.163 shape=(1, 9000, 1)
logits [[ 0.13581888 -0.01904898  0.20285921 -0.97211474]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.85 " + "l1=4.85" + "l2=0 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.4417982 -2.8206637  2.8027437 -5.2207785]]
Iteration 100 of 1000: loss=2.47 " + "l1=1.65" + "l2=0.822 f=-0.359 shape=(1, 9000, 1)
logits [[ 1.3510582 -0.7682379  1.3608675 -3.3798501]]
Iteration 200 of 1000: loss=1.77 " + "l1=0.949" + "l2=0.824 f=-0.292 shape=(1, 9000, 1)
logits [[ 0.8919078  -0.30977365  0.9144089  -2.664732  ]]
Iteration 300 of 1000: loss=1.42 " + "l1=0.565" + "l2=0.855 f=-0.252 shape=(1, 9000, 1)
logits [[ 0.5825203  -0.09804126  0.63121605 -2.1241264 ]]
Iteration 400 of 1000: loss=1.21 " + "l1=0.364" + "l2=0.851 f=-0.218 shape=(1, 9000, 1)
logits [[ 0.43531793 -0.00804023  0.46110258 -1.7589796 ]]
Iteration 500 of 1000: loss=1.05 " + "l1=0.241" + "l2=0.805 f=-0.201 shape=(1, 9000, 1)
logits [[ 0.3026956   0.03422296  0.34477857 -1.4845116 ]]
Iteration 600 of 1000: loss=0.893 " + "l1=0.136" + "l2=0.757 f=-0.186 shape=(1, 9000, 1)
logits [[ 0.18615294  0.06970116  0.24563764 -1.2434975 ]]
Iteration 700 of 1000: loss=0.768 " + "l1=0.0683" + "l2=0.7 f=-0.167 shape=(1, 9000, 1)
logits [[ 0.09943244  0.08323347  0.17130284 -1.0211358 ]]
Iteration 800 of 1000: loss=0.658 " + "l1=0.0169" + "l2=0.641 f=-0.152 shape=(1, 9000, 1)
logits [[ 0.00534506  0.07861991  0.10036516 -0.7916881 ]]
Iteration 900 of 1000: loss=0.596 " + "l1=0.00441" + "l2=0.591 f=-0.15 shape=(1, 9000, 1)
logits [[-0.03020169  0.06628304  0.07197958 -0.709802  ]]
--- 292.98474645614624 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00639 " + "l1=0.00639" + "l2=0 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.4417982 -2.8206637  2.8027437 -5.2207785]]
Iteration 100 of 1000: loss=0.00612 " + "l1=0.00592" + "l2=0.000208 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.4030094 -2.8311398  2.8114479 -5.1796193]]
Iteration 200 of 1000: loss=0.00606 " + "l1=0.00588" + "l2=0.000182 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.3998148 -2.8324165  2.8123026 -5.1768837]]
Iteration 300 of 1000: loss=0.00603 " + "l1=0.0058" + "l2=0.000224 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.3941858 -2.8349245  2.8140984 -5.1719584]]
Iteration 400 of 1000: loss=0.00599 " + "l1=0.00572" + "l2=0.000273 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.3875368 -2.8375573  2.816006  -5.165944 ]]
Iteration 500 of 1000: loss=0.00597 " + "l1=0.00563" + "l2=0.000342 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.3808594 -2.8400505  2.8178895 -5.1599874]]
Iteration 600 of 1000: loss=0.00598 " + "l1=0.00554" + "l2=0.000432 f=-0.451 shape=(1, 9000, 1)
logits [[ 3.3740668 -2.8423767  2.8196511 -5.1538377]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0639 " + "l1=0.0639" + "l2=0 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.4417982 -2.8206637  2.8027437 -5.2207785]]
Iteration 100 of 1000: loss=0.0408 " + "l1=0.0283" + "l2=0.0125 f=-0.448 shape=(1, 9000, 1)
logits [[ 3.157682  -2.902506   2.8748205 -4.923674 ]]
Iteration 200 of 1000: loss=0.0311 " + "l1=0.0134" + "l2=0.0178 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.042776  -2.943036   2.9090075 -4.807642 ]]
Iteration 300 of 1000: loss=0.0231 " + "l1=0.0017" + "l2=0.0214 f=-0.449 shape=(1, 9000, 1)
logits [[ 2.9520266 -2.9678075  2.9349992 -4.7143908]]
Iteration 400 of 1000: loss=0.017 " + "l1=0.000221" + "l2=0.0168 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.936686  -2.9615674  2.9344776 -4.7031198]]
Iteration 500 of 1000: loss=0.0134 " + "l1=0" + "l2=0.0134 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.927969  -2.947797   2.93014   -4.7042937]]
Iteration 600 of 1000: loss=0.0109 " + "l1=0" + "l2=0.0109 f=-0.449 shape=(1, 9000, 1)
logits [[ 2.9226458 -2.9343123  2.9240339 -4.7073183]]
Iteration 700 of 1000: loss=0.00893 " + "l1=0.000325" + "l2=0.00861 f=-0.449 shape=(1, 9000, 1)
logits [[ 2.9210877 -2.9222822  2.91784   -4.7131777]]
Iteration 800 of 1000: loss=0.00751 " + "l1=0" + "l2=0.00751 f=-0.449 shape=(1, 9000, 1)
logits [[ 2.9090528 -2.9111888  2.9143286 -4.708928 ]]
Iteration 900 of 1000: loss=0.00633 " + "l1=9.57e-05" + "l2=0.00624 f=-0.449 shape=(1, 9000, 1)
logits [[ 2.9094045 -2.8988914  2.908448  -4.7165084]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0351 " + "l1=0.0351" + "l2=0 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.4417982 -2.8206637  2.8027437 -5.2207785]]
Iteration 100 of 1000: loss=0.0281 " + "l1=0.0243" + "l2=0.0038 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.2843218 -2.867815   2.8419263 -5.054126 ]]
Iteration 200 of 1000: loss=0.0255 " + "l1=0.0203" + "l2=0.00523 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.2257752 -2.885905   2.8568063 -4.99553  ]]
Iteration 300 of 1000: loss=0.0232 " + "l1=0.0168" + "l2=0.00638 f=-0.451 shape=(1, 9000, 1)
logits [[ 3.1753786 -2.9052942  2.8702025 -4.945044 ]]
Iteration 400 of 1000: loss=0.0208 " + "l1=0.0135" + "l2=0.00738 f=-0.452 shape=(1, 9000, 1)
logits [[ 3.1276565 -2.922052   2.8829405 -4.8975096]]
Iteration 500 of 1000: loss=0.0187 " + "l1=0.0108" + "l2=0.00788 f=-0.452 shape=(1, 9000, 1)
logits [[ 3.0891826 -2.9295125  2.8923662 -4.8605123]]
Iteration 600 of 1000: loss=0.0164 " + "l1=0.00757" + "l2=0.00885 f=-0.452 shape=(1, 9000, 1)
logits [[ 3.0413651 -2.936968   2.903768  -4.815215 ]]
Iteration 700 of 1000: loss=0.0138 " + "l1=0.00393" + "l2=0.00982 f=-0.45 shape=(1, 9000, 1)
logits [[ 2.9854145 -2.9378388  2.9139    -4.7623134]]
Iteration 800 of 1000: loss=0.0109 " + "l1=0.000603" + "l2=0.0103 f=-0.449 shape=(1, 9000, 1)
logits [[ 2.9329286 -2.937036   2.9219582 -4.7128344]]
Iteration 900 of 1000: loss=0.00849 " + "l1=2.81e-05" + "l2=0.00846 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.91943   -2.926536   2.9189184 -4.70562  ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0208 " + "l1=0.0208" + "l2=0 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.4417982 -2.8206637  2.8027437 -5.2207785]]
Iteration 100 of 1000: loss=0.0183 " + "l1=0.0169" + "l2=0.00139 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.345491  -2.8494134  2.826358  -5.1187954]]
Iteration 200 of 1000: loss=0.0175 " + "l1=0.0157" + "l2=0.00175 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.3177648 -2.8599386  2.8341565 -5.091374 ]]
Iteration 300 of 1000: loss=0.0167 " + "l1=0.0146" + "l2=0.00213 f=-0.451 shape=(1, 9000, 1)
logits [[ 3.2911303 -2.8698533  2.8415172 -5.0654564]]
Iteration 400 of 1000: loss=0.016 " + "l1=0.0135" + "l2=0.00251 f=-0.451 shape=(1, 9000, 1)
logits [[ 3.2636514 -2.878243   2.8481274 -5.039452 ]]
Iteration 500 of 1000: loss=0.0153 " + "l1=0.0125" + "l2=0.00285 f=-0.452 shape=(1, 9000, 1)
logits [[ 3.2378283 -2.8863747  2.854135  -5.0148087]]
Iteration 600 of 1000: loss=0.0146 " + "l1=0.0114" + "l2=0.00311 f=-0.453 shape=(1, 9000, 1)
logits [[ 3.211651  -2.894656   2.8595896 -4.989124 ]]
Iteration 700 of 1000: loss=0.0138 " + "l1=0.0103" + "l2=0.00343 f=-0.454 shape=(1, 9000, 1)
logits [[ 3.182989  -2.9024103  2.8649073 -4.9607186]]
Iteration 800 of 1000: loss=0.013 " + "l1=0.00934" + "l2=0.0037 f=-0.454 shape=(1, 9000, 1)
logits [[ 3.157214  -2.90697    2.8697295 -4.936028 ]]
Iteration 900 of 1000: loss=0.0123 " + "l1=0.00847" + "l2=0.00384 f=-0.454 shape=(1, 9000, 1)
logits [[ 3.134048  -2.9090288  2.873467  -4.9139843]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.028 " + "l1=0.028" + "l2=0 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.4417982 -2.8206637  2.8027437 -5.2207785]]
Iteration 100 of 1000: loss=0.0235 " + "l1=0.0211" + "l2=0.00243 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.3158467 -2.8590252  2.8344252 -5.0874796]]
Iteration 200 of 1000: loss=0.022 " + "l1=0.0187" + "l2=0.00325 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.2729971 -2.8734853  2.8455207 -5.0444098]]
Iteration 300 of 1000: loss=0.0205 " + "l1=0.0165" + "l2=0.00399 f=-0.451 shape=(1, 9000, 1)
logits [[ 3.233177  -2.8863294  2.8559747 -5.0058465]]
Iteration 400 of 1000: loss=0.0191 " + "l1=0.0145" + "l2=0.00458 f=-0.452 shape=(1, 9000, 1)
logits [[ 3.197176  -2.899223   2.8651044 -4.969992 ]]
Iteration 500 of 1000: loss=0.0177 " + "l1=0.0125" + "l2=0.00519 f=-0.453 shape=(1, 9000, 1)
logits [[ 3.1599383 -2.911581   2.8740432 -4.9344707]]
Iteration 600 of 1000: loss=0.0163 " + "l1=0.0108" + "l2=0.00551 f=-0.453 shape=(1, 9000, 1)
logits [[ 3.128368  -2.9188194  2.8820086 -4.904614 ]]
Iteration 700 of 1000: loss=0.015 " + "l1=0.00922" + "l2=0.00576 f=-0.453 shape=(1, 9000, 1)
logits [[ 3.0975354 -2.9210854  2.8868763 -4.876175 ]]
Iteration 800 of 1000: loss=0.0135 " + "l1=0.00714" + "l2=0.00635 f=-0.453 shape=(1, 9000, 1)
logits [[ 3.0580418 -2.9232075  2.8948276 -4.8407617]]
Iteration 900 of 1000: loss=0.0118 " + "l1=0.00486" + "l2=0.00692 f=-0.452 shape=(1, 9000, 1)
logits [[ 3.013126  -2.9225433  2.9021127 -4.798826 ]]
--- 271.5444371700287 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0866 " + "l1=0.0866" + "l2=0 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.4417982 -2.8206637  2.8027437 -5.2207785]]
Iteration 100 of 1000: loss=0.0853 " + "l1=0.0845" + "l2=0.000722 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.3567607 -2.8155632  2.7820153 -5.096814 ]]
Iteration 200 of 1000: loss=0.0848 " + "l1=0.084" + "l2=0.000813 f=-0.442 shape=(1, 9000, 1)
logits [[ 3.3360758 -2.8147817  2.7751653 -5.0647345]]
Iteration 300 of 1000: loss=0.0844 " + "l1=0.0834" + "l2=0.00098 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.3116677 -2.813317   2.7667592 -5.0265193]]
Iteration 400 of 1000: loss=0.0839 " + "l1=0.0827" + "l2=0.00116 f=-0.439 shape=(1, 9000, 1)
logits [[ 3.2860966 -2.8114126  2.7571795 -4.9861865]]
Iteration 500 of 1000: loss=0.0834 " + "l1=0.0821" + "l2=0.00134 f=-0.437 shape=(1, 9000, 1)
logits [[ 3.260639  -2.8089666  2.746995  -4.946025 ]]
Iteration 600 of 1000: loss=0.0829 " + "l1=0.0814" + "l2=0.00149 f=-0.435 shape=(1, 9000, 1)
logits [[ 3.2344182 -2.805628   2.7361357 -4.9045095]]
Iteration 700 of 1000: loss=0.0824 " + "l1=0.0807" + "l2=0.00173 f=-0.433 shape=(1, 9000, 1)
logits [[ 3.2075803 -2.8026392  2.7254608 -4.8614473]]
Iteration 800 of 1000: loss=0.0819 " + "l1=0.08" + "l2=0.00187 f=-0.431 shape=(1, 9000, 1)
logits [[ 3.1807265 -2.799383   2.7147422 -4.81815  ]]
Iteration 900 of 1000: loss=0.0814 " + "l1=0.0793" + "l2=0.0021 f=-0.428 shape=(1, 9000, 1)
logits [[ 3.1548374 -2.7946084  2.703931  -4.775545 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.866 " + "l1=0.866" + "l2=0 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.4417982 -2.8206637  2.8027437 -5.2207785]]
Iteration 100 of 1000: loss=0.723 " + "l1=0.662" + "l2=0.0613 f=-0.386 shape=(1, 9000, 1)
logits [[ 2.6113243 -2.7509801  2.6001315 -4.0045633]]
Iteration 200 of 1000: loss=0.656 " + "l1=0.594" + "l2=0.062 f=-0.352 shape=(1, 9000, 1)
logits [[ 2.3882246 -2.6404173  2.3927772 -3.5497506]]
Iteration 300 of 1000: loss=0.602 " + "l1=0.534" + "l2=0.0682 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.17412   -2.5377996  2.2081852 -3.13183  ]]
Iteration 400 of 1000: loss=0.558 " + "l1=0.483" + "l2=0.0749 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.9778398 -2.4584556  2.0659263 -2.7646537]]
Iteration 500 of 1000: loss=0.518 " + "l1=0.437" + "l2=0.0814 f=-0.264 shape=(1, 9000, 1)
logits [[ 1.8122743 -2.3817444  1.9394608 -2.4264479]]
Iteration 600 of 1000: loss=0.481 " + "l1=0.393" + "l2=0.0874 f=-0.23 shape=(1, 9000, 1)
logits [[ 1.6739558 -2.2991292  1.8186948 -2.113282 ]]
Iteration 700 of 1000: loss=0.443 " + "l1=0.35" + "l2=0.0928 f=-0.193 shape=(1, 9000, 1)
logits [[ 1.5421313 -2.2115564  1.6973636 -1.8000491]]
Iteration 800 of 1000: loss=0.406 " + "l1=0.309" + "l2=0.0973 f=-0.154 shape=(1, 9000, 1)
logits [[ 1.4205326 -2.1228254  1.5890068 -1.5012718]]
Iteration 900 of 1000: loss=0.37 " + "l1=0.266" + "l2=0.104 f=-0.108 shape=(1, 9000, 1)
logits [[ 1.3010892 -2.0006685  1.4657518 -1.1975521]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.66 " + "l1=8.66" + "l2=0 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.4417982 -2.8206637  2.8027437 -5.2207785]]
Iteration 100 of 1000: loss=2.2 " + "l1=0.00199" + "l2=2.2 f=0.03 shape=(1, 9000, 1)
logits [[-0.01612871 -1.5835263   0.8607762   0.8587826 ]]
Iteration 200 of 1000: loss=1.25 " + "l1=0" + "l2=1.25 f=0.0292 shape=(1, 9000, 1)
logits [[ 0.03543297 -1.3185159   0.6865209   0.71317345]]
Iteration 300 of 1000: loss=1.02 " + "l1=0" + "l2=1.02 f=0.024 shape=(1, 9000, 1)
logits [[ 0.0499256 -1.252215   0.6460333  0.6523093]]
Iteration 400 of 1000: loss=0.903 " + "l1=0" + "l2=0.903 f=0.0222 shape=(1, 9000, 1)
logits [[ 0.04543949 -1.2364937   0.636761    0.64311117]]
Iteration 500 of 1000: loss=0.831 " + "l1=0.0161" + "l2=0.815 f=0.0165 shape=(1, 9000, 1)
logits [[ 0.0411453 -1.2240921  0.6324855  0.6163503]]
Iteration 600 of 1000: loss=0.76 " + "l1=0" + "l2=0.76 f=0.0165 shape=(1, 9000, 1)
logits [[ 0.0247637 -1.222338   0.6200648  0.6436846]]
Iteration 700 of 1000: loss=0.703 " + "l1=0" + "l2=0.703 f=0.0163 shape=(1, 9000, 1)
logits [[ 0.0253133  -1.2219816   0.62329894  0.6384875 ]]
Iteration 800 of 1000: loss=0.656 " + "l1=0" + "l2=0.656 f=0.0173 shape=(1, 9000, 1)
logits [[ 0.02720068 -1.218594    0.61846995  0.64215434]]
Iteration 900 of 1000: loss=0.621 " + "l1=0" + "l2=0.621 f=0.0201 shape=(1, 9000, 1)
logits [[ 0.02443905 -1.2094061   0.60651326  0.6589342 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.76 " + "l1=4.76" + "l2=0 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.4417982 -2.8206637  2.8027437 -5.2207785]]
Iteration 100 of 1000: loss=2.22 " + "l1=1.14" + "l2=1.09 f=-0.104 shape=(1, 9000, 1)
logits [[ 0.7496482  -1.9150519   1.4082257  -0.65724856]]
Iteration 200 of 1000: loss=1.15 " + "l1=0.0115" + "l2=1.14 f=0.0208 shape=(1, 9000, 1)
logits [[ 0.05250013 -1.3326283   0.6921629   0.67128104]]
Iteration 300 of 1000: loss=0.867 " + "l1=0" + "l2=0.867 f=0.0108 shape=(1, 9000, 1)
logits [[ 0.03658811 -1.2258112   0.6133471   0.61924225]]
Iteration 400 of 1000: loss=0.751 " + "l1=0" + "l2=0.751 f=0.0173 shape=(1, 9000, 1)
logits [[ 0.04324038 -1.2127097   0.608676    0.62986237]]
Iteration 500 of 1000: loss=0.663 " + "l1=0" + "l2=0.663 f=0.0187 shape=(1, 9000, 1)
logits [[ 0.05409093 -1.2106063   0.61095613  0.6202042 ]]
Iteration 600 of 1000: loss=0.595 " + "l1=0.0015" + "l2=0.594 f=0.0214 shape=(1, 9000, 1)
logits [[ 0.07450031 -1.2146907   0.61426425  0.61153674]]
Iteration 700 of 1000: loss=0.546 " + "l1=0" + "l2=0.546 f=0.0242 shape=(1, 9000, 1)
logits [[ 0.08732446 -1.2314793   0.61504924  0.6260931 ]]
Iteration 800 of 1000: loss=0.51 " + "l1=0" + "l2=0.51 f=0.028 shape=(1, 9000, 1)
logits [[ 0.09540685 -1.2387073   0.61056006  0.6445873 ]]
Iteration 900 of 1000: loss=0.475 " + "l1=0" + "l2=0.475 f=0.0297 shape=(1, 9000, 1)
logits [[ 0.11938509 -1.2537229   0.6188644   0.6344408 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.82 " + "l1=2.82" + "l2=0 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.4417982 -2.8206637  2.8027437 -5.2207785]]
Iteration 100 of 1000: loss=1.78 " + "l1=1.39" + "l2=0.394 f=-0.275 shape=(1, 9000, 1)
logits [[ 1.6237543 -2.3562608  1.9482281 -2.3160632]]
Iteration 200 of 1000: loss=1.33 " + "l1=0.793" + "l2=0.538 f=-0.13 shape=(1, 9000, 1)
logits [[ 0.957636  -1.9219546  1.4416457 -0.999258 ]]
Iteration 300 of 1000: loss=0.951 " + "l1=0.286" + "l2=0.665 f=-0.00855 shape=(1, 9000, 1)
logits [[ 0.4548444 -1.4876846  0.9386412  0.059999 ]]
Iteration 400 of 1000: loss=0.678 " + "l1=0.00689" + "l2=0.671 f=0.0128 shape=(1, 9000, 1)
logits [[ 0.11546086 -1.2306541   0.5938674   0.57265884]]
Iteration 500 of 1000: loss=0.549 " + "l1=0.00255" + "l2=0.546 f=0.0211 shape=(1, 9000, 1)
logits [[ 0.14092809 -1.2320695   0.5916042   0.5837438 ]]
Iteration 600 of 1000: loss=0.469 " + "l1=0" + "l2=0.469 f=0.0273 shape=(1, 9000, 1)
logits [[ 0.18163282 -1.2464886   0.5836893   0.59041536]]
Iteration 700 of 1000: loss=0.41 " + "l1=0" + "l2=0.41 f=0.0302 shape=(1, 9000, 1)
logits [[ 0.22840102 -1.2567174   0.5733955   0.575767  ]]
Iteration 800 of 1000: loss=0.371 " + "l1=0.00314" + "l2=0.368 f=0.033 shape=(1, 9000, 1)
logits [[ 0.26442984 -1.2796078   0.57846683  0.5688085 ]]
Iteration 900 of 1000: loss=0.339 " + "l1=0" + "l2=0.339 f=0.0365 shape=(1, 9000, 1)
logits [[ 0.28341395 -1.2973534   0.5780688   0.5817667 ]]
--- 293.5733184814453 seconds ---
Adv result:3
Loading record A03246
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0815 " + "l1=0.0815" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 4.9758024 -3.17056    3.475053  -7.9821324]]
Iteration 100 of 1000: loss=0.081 " + "l1=0.0807" + "l2=0.000328 f=-0.673 shape=(1, 9000, 1)
logits [[ 4.942906  -3.1262558  3.442289  -7.949252 ]]
Iteration 200 of 1000: loss=0.0809 " + "l1=0.0806" + "l2=0.000343 f=-0.672 shape=(1, 9000, 1)
logits [[ 4.9378285 -3.1190717  3.4362824 -7.9436016]]
Iteration 300 of 1000: loss=0.0808 " + "l1=0.0804" + "l2=0.000412 f=-0.672 shape=(1, 9000, 1)
logits [[ 4.931209  -3.1119494  3.4304652 -7.9364567]]
Iteration 400 of 1000: loss=0.0808 " + "l1=0.0803" + "l2=0.000486 f=-0.671 shape=(1, 9000, 1)
logits [[ 4.924628  -3.1059344  3.4257426 -7.92948  ]]
Iteration 500 of 1000: loss=0.0808 " + "l1=0.0802" + "l2=0.000592 f=-0.671 shape=(1, 9000, 1)
logits [[ 4.9181457 -3.1007915  3.421787  -7.9227605]]
Iteration 600 of 1000: loss=0.0807 " + "l1=0.0801" + "l2=0.000665 f=-0.671 shape=(1, 9000, 1)
logits [[ 4.9115987 -3.096015   3.4180994 -7.9161143]]
Iteration 700 of 1000: loss=0.0807 " + "l1=0.08" + "l2=0.000768 f=-0.67 shape=(1, 9000, 1)
logits [[ 4.9051237 -3.0917637  3.4147818 -7.9096203]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.815 " + "l1=0.815" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 4.9758024 -3.17056    3.475053  -7.9821324]]
Iteration 100 of 1000: loss=0.775 " + "l1=0.751" + "l2=0.0241 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.709047  -2.7978344  3.1972184 -7.728399 ]]
Iteration 200 of 1000: loss=0.758 " + "l1=0.722" + "l2=0.0356 f=-0.647 shape=(1, 9000, 1)
logits [[ 4.569599  -2.6516225  3.0823789 -7.5880814]]
Iteration 300 of 1000: loss=0.744 " + "l1=0.699" + "l2=0.0453 f=-0.637 shape=(1, 9000, 1)
logits [[ 4.452975  -2.5364645  2.9980788 -7.4627967]]
Iteration 400 of 1000: loss=0.733 " + "l1=0.681" + "l2=0.0517 f=-0.63 shape=(1, 9000, 1)
logits [[ 4.3523464 -2.461073   2.939336  -7.3510594]]
Iteration 500 of 1000: loss=0.723 " + "l1=0.667" + "l2=0.0565 f=-0.624 shape=(1, 9000, 1)
logits [[ 4.266594  -2.4034252  2.8935356 -7.253883 ]]
Iteration 600 of 1000: loss=0.714 " + "l1=0.652" + "l2=0.0613 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.1729684 -2.350566   2.848218  -7.1495066]]
Iteration 700 of 1000: loss=0.704 " + "l1=0.638" + "l2=0.0655 f=-0.616 shape=(1, 9000, 1)
logits [[ 4.0826106 -2.2997692  2.8045876 -7.0503836]]
Iteration 800 of 1000: loss=0.691 " + "l1=0.621" + "l2=0.0704 f=-0.614 shape=(1, 9000, 1)
logits [[ 3.963495  -2.2475996  2.7564325 -6.929452 ]]
Iteration 900 of 1000: loss=0.678 " + "l1=0.602" + "l2=0.0759 f=-0.613 shape=(1, 9000, 1)
logits [[ 3.8306193 -2.1922843  2.7073064 -6.7971354]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.15 " + "l1=8.15" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 4.9758024 -3.17056    3.475053  -7.9821324]]
Iteration 100 of 1000: loss=4.63 " + "l1=2.61" + "l2=2.02 f=-0.572 shape=(1, 9000, 1)
logits [[ 1.9531708 -0.6522782  1.6951089 -5.2847695]]
Iteration 200 of 1000: loss=3.11 " + "l1=1.13" + "l2=1.98 f=-0.577 shape=(1, 9000, 1)
logits [[ 1.13208     0.02112059  1.1478201  -4.6106343 ]]
Iteration 300 of 1000: loss=2.33 " + "l1=0.53" + "l2=1.8 f=-0.564 shape=(1, 9000, 1)
logits [[ 0.7874974   0.28112894  0.8114385  -4.137562  ]]
Iteration 400 of 1000: loss=1.88 " + "l1=0.159" + "l2=1.72 f=-0.56 shape=(1, 9000, 1)
logits [[ 0.50960684  0.40931556  0.56814885 -3.7270684 ]]
Iteration 500 of 1000: loss=1.57 " + "l1=0.0197" + "l2=1.55 f=-0.542 shape=(1, 9000, 1)
logits [[ 0.4282249   0.44431466  0.46398678 -3.5041142 ]]
Iteration 600 of 1000: loss=1.41 " + "l1=0.00687" + "l2=1.41 f=-0.531 shape=(1, 9000, 1)
logits [[ 0.38984996  0.41243368  0.41930062 -3.3469696 ]]
Iteration 700 of 1000: loss=1.27 " + "l1=0.00135" + "l2=1.27 f=-0.524 shape=(1, 9000, 1)
logits [[ 0.3657737   0.37467825  0.3760235  -3.211814  ]]
Iteration 800 of 1000: loss=1.14 " + "l1=0" + "l2=1.14 f=-0.52 shape=(1, 9000, 1)
logits [[ 0.32676658  0.35642737  0.34840575 -3.1099727 ]]
Iteration 900 of 1000: loss=1.03 " + "l1=0.0019" + "l2=1.03 f=-0.51 shape=(1, 9000, 1)
logits [[ 0.32761738  0.33157945  0.3334771  -3.0339212 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.48 " + "l1=4.48" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 4.9758024 -3.17056    3.475053  -7.9821324]]
Iteration 100 of 1000: loss=3.39 " + "l1=2.84" + "l2=0.549 f=-0.586 shape=(1, 9000, 1)
logits [[ 3.4713256 -1.699517   2.3978937 -6.514549 ]]
Iteration 200 of 1000: loss=2.77 " + "l1=1.83" + "l2=0.942 f=-0.572 shape=(1, 9000, 1)
logits [[ 2.3186035 -1.005652   1.9704176 -5.569519 ]]
Iteration 300 of 1000: loss=2.13 " + "l1=1.11" + "l2=1.02 f=-0.562 shape=(1, 9000, 1)
logits [[ 1.5205842 -0.5019894  1.5128953 -4.7787266]]
Iteration 400 of 1000: loss=1.72 " + "l1=0.703" + "l2=1.02 f=-0.563 shape=(1, 9000, 1)
logits [[ 1.0912942  -0.17879386  1.1001785  -4.2645707 ]]
Iteration 500 of 1000: loss=1.42 " + "l1=0.466" + "l2=0.95 f=-0.56 shape=(1, 9000, 1)
logits [[ 0.81713766 -0.02073329  0.8272077  -3.8634675 ]]
Iteration 600 of 1000: loss=1.24 " + "l1=0.358" + "l2=0.879 f=-0.542 shape=(1, 9000, 1)
logits [[ 0.6772446   0.03582636  0.68608093 -3.5676084 ]]
Iteration 700 of 1000: loss=1.12 " + "l1=0.29" + "l2=0.829 f=-0.521 shape=(1, 9000, 1)
logits [[ 0.5733627   0.06772939  0.5941276  -3.3185005 ]]
Iteration 800 of 1000: loss=1.02 " + "l1=0.239" + "l2=0.777 f=-0.51 shape=(1, 9000, 1)
logits [[ 0.50007236  0.08350286  0.5174582  -3.142122  ]]
Iteration 900 of 1000: loss=0.875 " + "l1=0.121" + "l2=0.755 f=-0.498 shape=(1, 9000, 1)
logits [[ 0.36211     0.16909327  0.38834807 -2.9116719 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.65 " + "l1=2.65" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 4.9758024 -3.17056    3.475053  -7.9821324]]
Iteration 100 of 1000: loss=2.23 " + "l1=2" + "l2=0.222 f=-0.615 shape=(1, 9000, 1)
logits [[ 4.033033  -2.1357532  2.7126591 -7.0685673]]
Iteration 200 of 1000: loss=2.06 " + "l1=1.77" + "l2=0.294 f=-0.596 shape=(1, 9000, 1)
logits [[ 3.592924  -1.8392456  2.4838552 -6.620498 ]]
Iteration 300 of 1000: loss=1.89 " + "l1=1.51" + "l2=0.374 f=-0.581 shape=(1, 9000, 1)
logits [[ 3.0906315 -1.5631194  2.3063898 -6.1571417]]
Iteration 400 of 1000: loss=1.67 " + "l1=1.2" + "l2=0.47 f=-0.569 shape=(1, 9000, 1)
logits [[ 2.4538543 -1.2249931  2.0182462 -5.523325 ]]
Iteration 500 of 1000: loss=1.43 " + "l1=0.867" + "l2=0.56 f=-0.559 shape=(1, 9000, 1)
logits [[ 1.7811081 -0.8852046  1.7333058 -4.8645563]]
Iteration 600 of 1000: loss=1.17 " + "l1=0.623" + "l2=0.549 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.3579483 -0.5516118  1.3647422 -4.3452435]]
Iteration 700 of 1000: loss=1.02 " + "l1=0.468" + "l2=0.554 f=-0.526 shape=(1, 9000, 1)
logits [[ 1.098166   -0.34130433  1.0998348  -3.9587467 ]]
Iteration 800 of 1000: loss=0.938 " + "l1=0.394" + "l2=0.544 f=-0.517 shape=(1, 9000, 1)
logits [[ 0.94860315 -0.25527194  0.95719373 -3.717536  ]]
Iteration 900 of 1000: loss=0.884 " + "l1=0.356" + "l2=0.528 f=-0.505 shape=(1, 9000, 1)
logits [[ 0.8742517  -0.22258958  0.87021935 -3.543052  ]]
--- 276.56325459480286 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.015 " + "l1=0.015" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 4.9758024 -3.17056    3.475053  -7.9821324]]
Iteration 100 of 1000: loss=0.0148 " + "l1=0.0146" + "l2=0.000214 f=-0.677 shape=(1, 9000, 1)
logits [[ 4.953281  -3.1933184  3.4971697 -7.9650598]]
Iteration 200 of 1000: loss=0.0147 " + "l1=0.0145" + "l2=0.0002 f=-0.677 shape=(1, 9000, 1)
logits [[ 4.952636  -3.1958742  3.5002787 -7.9641576]]
Iteration 300 of 1000: loss=0.0147 " + "l1=0.0145" + "l2=0.000238 f=-0.677 shape=(1, 9000, 1)
logits [[ 4.950017  -3.198643   3.5036817 -7.962244 ]]
Iteration 400 of 1000: loss=0.0147 " + "l1=0.0144" + "l2=0.000315 f=-0.677 shape=(1, 9000, 1)
logits [[ 4.946993  -3.2011297  3.5068705 -7.960126 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.15 " + "l1=0.15" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 4.9758024 -3.17056    3.475053  -7.9821324]]
Iteration 100 of 1000: loss=0.124 " + "l1=0.111" + "l2=0.0138 f=-0.684 shape=(1, 9000, 1)
logits [[ 4.8018327 -3.3823264  3.6953697 -7.8506126]]
Iteration 200 of 1000: loss=0.118 " + "l1=0.0998" + "l2=0.0178 f=-0.685 shape=(1, 9000, 1)
logits [[ 4.7476926 -3.4260073  3.7498536 -7.8099155]]
Iteration 300 of 1000: loss=0.113 " + "l1=0.0915" + "l2=0.0211 f=-0.684 shape=(1, 9000, 1)
logits [[ 4.6913495 -3.436767   3.77628   -7.767499 ]]
Iteration 400 of 1000: loss=0.108 " + "l1=0.0843" + "l2=0.0236 f=-0.684 shape=(1, 9000, 1)
logits [[ 4.639113  -3.4411051  3.7962494 -7.7296786]]
Iteration 500 of 1000: loss=0.103 " + "l1=0.0772" + "l2=0.0261 f=-0.684 shape=(1, 9000, 1)
logits [[ 4.583844  -3.4427295  3.8116844 -7.6892915]]
Iteration 600 of 1000: loss=0.0987 " + "l1=0.0702" + "l2=0.0285 f=-0.686 shape=(1, 9000, 1)
logits [[ 4.5274005 -3.4469626  3.8251827 -7.648137 ]]
Iteration 700 of 1000: loss=0.0942 " + "l1=0.0634" + "l2=0.0308 f=-0.688 shape=(1, 9000, 1)
logits [[ 4.4708357 -3.4486592  3.8369446 -7.610148 ]]
Iteration 800 of 1000: loss=0.0896 " + "l1=0.0567" + "l2=0.033 f=-0.689 shape=(1, 9000, 1)
logits [[ 4.4143577 -3.4490006  3.8477962 -7.569068 ]]
Iteration 900 of 1000: loss=0.0846 " + "l1=0.0496" + "l2=0.0349 f=-0.689 shape=(1, 9000, 1)
logits [[ 4.350982  -3.4397392  3.854558  -7.522226 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.5 " + "l1=1.5" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 4.9758024 -3.17056    3.475053  -7.9821324]]
Iteration 100 of 1000: loss=0.242 " + "l1=0" + "l2=0.242 f=-0.704 shape=(1, 9000, 1)
logits [[ 4.0691814 -3.662063   4.0767555 -7.3001976]]
Iteration 200 of 1000: loss=0.163 " + "l1=0" + "l2=0.163 f=-0.699 shape=(1, 9000, 1)
logits [[ 4.088976  -3.6331282  4.089707  -7.341916 ]]
Iteration 300 of 1000: loss=0.14 " + "l1=0.0103" + "l2=0.13 f=-0.694 shape=(1, 9000, 1)
logits [[ 4.087126  -3.5955172  4.076811  -7.3431478]]
Iteration 400 of 1000: loss=0.113 " + "l1=0" + "l2=0.113 f=-0.69 shape=(1, 9000, 1)
logits [[ 4.05985   -3.5627048  4.062867  -7.3182106]]
Iteration 500 of 1000: loss=0.0993 " + "l1=0.00157" + "l2=0.0977 f=-0.685 shape=(1, 9000, 1)
logits [[ 4.039359 -3.525576  4.037789 -7.292026]]
Iteration 600 of 1000: loss=0.0865 " + "l1=0.000725" + "l2=0.0858 f=-0.682 shape=(1, 9000, 1)
logits [[ 4.010324  -3.4900224  4.0095987 -7.2566094]]
Iteration 700 of 1000: loss=0.0776 " + "l1=0" + "l2=0.0776 f=-0.68 shape=(1, 9000, 1)
logits [[ 3.9700606 -3.458847   3.9824178 -7.2116456]]
Iteration 800 of 1000: loss=0.069 " + "l1=0" + "l2=0.069 f=-0.677 shape=(1, 9000, 1)
logits [[ 3.9453247 -3.4263783  3.949424  -7.175446 ]]
Iteration 900 of 1000: loss=0.0642 " + "l1=0" + "l2=0.0642 f=-0.673 shape=(1, 9000, 1)
logits [[ 3.9036393 -3.4018044  3.9265409 -7.1197753]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.825 " + "l1=0.825" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 4.9758024 -3.17056    3.475053  -7.9821324]]
Iteration 100 of 1000: loss=0.252 " + "l1=0.0155" + "l2=0.237 f=-0.697 shape=(1, 9000, 1)
logits [[ 4.0865693 -3.6374135  4.0583963 -7.2942204]]
Iteration 200 of 1000: loss=0.159 " + "l1=0.000247" + "l2=0.159 f=-0.694 shape=(1, 9000, 1)
logits [[ 4.0826216 -3.6131845  4.0821724 -7.326862 ]]
Iteration 300 of 1000: loss=0.127 " + "l1=0.002" + "l2=0.125 f=-0.69 shape=(1, 9000, 1)
logits [[ 4.073992  -3.5756862  4.0703526 -7.3268   ]]
Iteration 400 of 1000: loss=0.111 " + "l1=0" + "l2=0.111 f=-0.688 shape=(1, 9000, 1)
logits [[ 4.032745 -3.546473  4.056902 -7.294218]]
Iteration 500 of 1000: loss=0.091 " + "l1=0" + "l2=0.091 f=-0.685 shape=(1, 9000, 1)
logits [[ 4.019527  -3.5074577  4.021549  -7.272624 ]]
Iteration 600 of 1000: loss=0.0792 " + "l1=0" + "l2=0.0792 f=-0.683 shape=(1, 9000, 1)
logits [[ 3.9889812 -3.4724152  3.9909704 -7.2410684]]
Iteration 700 of 1000: loss=0.0713 " + "l1=0.00242" + "l2=0.0689 f=-0.681 shape=(1, 9000, 1)
logits [[ 3.9598405 -3.4358714  3.9554472 -7.203368 ]]
Iteration 800 of 1000: loss=0.0627 " + "l1=0" + "l2=0.0627 f=-0.678 shape=(1, 9000, 1)
logits [[ 3.927552  -3.4109235  3.931889  -7.159748 ]]
Iteration 900 of 1000: loss=0.0585 " + "l1=0.00222" + "l2=0.0563 f=-0.674 shape=(1, 9000, 1)
logits [[ 3.9120655 -3.381295   3.908029  -7.133478 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.488 " + "l1=0.488" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 4.9758024 -3.17056    3.475053  -7.9821324]]
Iteration 100 of 1000: loss=0.269 " + "l1=0.167" + "l2=0.102 f=-0.688 shape=(1, 9000, 1)
logits [[ 4.425515  -3.538005   3.911745  -7.5531664]]
Iteration 200 of 1000: loss=0.191 " + "l1=0.0477" + "l2=0.143 f=-0.693 shape=(1, 9000, 1)
logits [[ 4.1817427 -3.5949016  4.0350747 -7.394955 ]]
Iteration 300 of 1000: loss=0.136 " + "l1=0.00485" + "l2=0.131 f=-0.69 shape=(1, 9000, 1)
logits [[ 4.077193  -3.577753   4.0622706 -7.32324  ]]
Iteration 400 of 1000: loss=0.109 " + "l1=0.00291" + "l2=0.106 f=-0.688 shape=(1, 9000, 1)
logits [[ 4.047716  -3.5375319  4.038748  -7.3003817]]
Iteration 500 of 1000: loss=0.0899 " + "l1=0" + "l2=0.0899 f=-0.687 shape=(1, 9000, 1)
logits [[ 4.0072165 -3.5000463  4.0079694 -7.2615266]]
Iteration 600 of 1000: loss=0.0782 " + "l1=0" + "l2=0.0782 f=-0.685 shape=(1, 9000, 1)
logits [[ 3.9722366 -3.4675388  3.979683  -7.2239227]]
Iteration 700 of 1000: loss=0.0682 " + "l1=0" + "l2=0.0682 f=-0.683 shape=(1, 9000, 1)
logits [[ 3.9409165 -3.4313025  3.948532  -7.1910024]]
Iteration 800 of 1000: loss=0.0614 " + "l1=0" + "l2=0.0614 f=-0.68 shape=(1, 9000, 1)
logits [[ 3.9086814 -3.404957   3.925612  -7.1486793]]
Iteration 900 of 1000: loss=0.0552 " + "l1=0" + "l2=0.0552 f=-0.676 shape=(1, 9000, 1)
logits [[ 3.8956876 -3.3794525  3.9065351 -7.125874 ]]
--- 259.6555209159851 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.13 " + "l1=0.13" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 4.9758024 -3.17056    3.475053  -7.9821324]]
Iteration 100 of 1000: loss=0.129 " + "l1=0.128" + "l2=0.00044 f=-0.673 shape=(1, 9000, 1)
logits [[ 4.9263444 -3.1595716  3.4598262 -7.918373 ]]
Iteration 200 of 1000: loss=0.129 " + "l1=0.128" + "l2=0.000465 f=-0.672 shape=(1, 9000, 1)
logits [[ 4.9170504 -3.1543295  3.4543998 -7.905502 ]]
Iteration 300 of 1000: loss=0.129 " + "l1=0.128" + "l2=0.000574 f=-0.671 shape=(1, 9000, 1)
logits [[ 4.905541  -3.149653   3.4488063 -7.889621 ]]
Iteration 400 of 1000: loss=0.128 " + "l1=0.128" + "l2=0.000691 f=-0.67 shape=(1, 9000, 1)
logits [[ 4.8944626 -3.1459274  3.443913  -7.874231 ]]
Iteration 500 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.000871 f=-0.67 shape=(1, 9000, 1)
logits [[ 4.883704  -3.1428375  3.4394002 -7.8593574]]
Iteration 600 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.000979 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.873268  -3.1394572  3.434615  -7.8453317]]
Iteration 700 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.00107 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.8628097 -3.1361413  3.4297585 -7.8313804]]
Iteration 800 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.00123 f=-0.668 shape=(1, 9000, 1)
logits [[ 4.852754  -3.1326053  3.4246345 -7.818012 ]]
Iteration 900 of 1000: loss=0.128 " + "l1=0.126" + "l2=0.00143 f=-0.668 shape=(1, 9000, 1)
logits [[ 4.842907  -3.1292486  3.419811  -7.8050795]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.3 " + "l1=1.3" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 4.9758024 -3.17056    3.475053  -7.9821324]]
Iteration 100 of 1000: loss=1.23 " + "l1=1.2" + "l2=0.0334 f=-0.654 shape=(1, 9000, 1)
logits [[ 4.5575404 -3.064464   3.3307817 -7.439063 ]]
Iteration 200 of 1000: loss=1.2 " + "l1=1.15" + "l2=0.0489 f=-0.638 shape=(1, 9000, 1)
logits [[ 4.356043  -2.9989712  3.2463765 -7.1565113]]
Iteration 300 of 1000: loss=1.17 " + "l1=1.11" + "l2=0.0627 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.187912  -2.9387283  3.1690326 -6.9038877]]
Iteration 400 of 1000: loss=1.14 " + "l1=1.07" + "l2=0.0768 f=-0.605 shape=(1, 9000, 1)
logits [[ 4.019727  -2.894926   3.1066086 -6.6506658]]
Iteration 500 of 1000: loss=1.12 " + "l1=1.03" + "l2=0.0883 f=-0.59 shape=(1, 9000, 1)
logits [[ 3.8591156 -2.8648217  3.0576816 -6.4107895]]
Iteration 600 of 1000: loss=1.08 " + "l1=0.977" + "l2=0.103 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.650734  -2.8307     3.0018725 -6.12128  ]]
Iteration 700 of 1000: loss=1.03 " + "l1=0.913" + "l2=0.121 f=-0.559 shape=(1, 9000, 1)
logits [[ 3.3785822 -2.7824154  2.9251785 -5.756228 ]]
Iteration 800 of 1000: loss=0.961 " + "l1=0.818" + "l2=0.143 f=-0.534 shape=(1, 9000, 1)
logits [[ 2.958363  -2.6704595  2.797066  -5.2219977]]
Iteration 900 of 1000: loss=0.886 " + "l1=0.732" + "l2=0.154 f=-0.512 shape=(1, 9000, 1)
logits [[ 2.5779023 -2.4633062  2.5790093 -4.7418904]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=13 " + "l1=13" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 4.9758024 -3.17056    3.475053  -7.9821324]]
Iteration 100 of 1000: loss=7.63 " + "l1=5.21" + "l2=2.41 f=-0.398 shape=(1, 9000, 1)
logits [[ 1.8028556 -1.8337157  1.8250613 -3.38728  ]]
Iteration 200 of 1000: loss=5.47 " + "l1=2.61" + "l2=2.85 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.78139377 -1.0790685   0.8467963  -1.767628  ]]
Iteration 300 of 1000: loss=3.26 " + "l1=0.313" + "l2=2.95 f=-0.276 shape=(1, 9000, 1)
logits [[-0.37421867 -0.617153    0.099626   -0.21315926]]
Iteration 400 of 1000: loss=2.31 " + "l1=0" + "l2=2.31 f=-0.259 shape=(1, 9000, 1)
logits [[-0.43510142 -0.61657757  0.00398923  0.01130456]]
Iteration 500 of 1000: loss=1.9 " + "l1=0.00167" + "l2=1.9 f=-0.257 shape=(1, 9000, 1)
logits [[-0.3975061  -0.6563205   0.01463634  0.0129694 ]]
Iteration 600 of 1000: loss=1.6 " + "l1=0" + "l2=1.6 f=-0.257 shape=(1, 9000, 1)
logits [[-0.39442566 -0.6748915   0.01347835  0.02777291]]
Iteration 700 of 1000: loss=1.4 " + "l1=0.0091" + "l2=1.39 f=-0.253 shape=(1, 9000, 1)
logits [[-0.35224465 -0.735593    0.04159181  0.03249643]]
Iteration 800 of 1000: loss=1.27 " + "l1=0" + "l2=1.27 f=-0.245 shape=(1, 9000, 1)
logits [[-0.33138314 -0.78141916  0.06145944  0.07059383]]
Iteration 900 of 1000: loss=1.16 " + "l1=0" + "l2=1.16 f=-0.24 shape=(1, 9000, 1)
logits [[-0.2958382  -0.8122744   0.07097073  0.07682598]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.13 " + "l1=7.13" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 4.9758024 -3.17056    3.475053  -7.9821324]]
Iteration 100 of 1000: loss=5.19 " + "l1=4.06" + "l2=1.13 f=-0.503 shape=(1, 9000, 1)
logits [[ 2.6260524 -2.4108772  2.539246  -4.7644897]]
Iteration 200 of 1000: loss=4.15 " + "l1=2.93" + "l2=1.22 f=-0.401 shape=(1, 9000, 1)
logits [[ 1.8520285 -1.8300446  1.8498106 -3.4752762]]
Iteration 300 of 1000: loss=3.19 " + "l1=1.89" + "l2=1.3 f=-0.332 shape=(1, 9000, 1)
logits [[ 1.0939951 -1.364916   1.1871731 -2.2454321]]
Iteration 400 of 1000: loss=2.31 " + "l1=0.889" + "l2=1.42 f=-0.302 shape=(1, 9000, 1)
logits [[ 0.29322293 -0.9182748   0.5158645  -1.1007897 ]]
Iteration 500 of 1000: loss=1.74 " + "l1=0.229" + "l2=1.51 f=-0.293 shape=(1, 9000, 1)
logits [[-0.329092   -0.7804966   0.17702347 -0.23947057]]
Iteration 600 of 1000: loss=1.38 " + "l1=0.00356" + "l2=1.38 f=-0.273 shape=(1, 9000, 1)
logits [[-0.4566413  -0.8603651   0.11658949  0.11011105]]
Iteration 700 of 1000: loss=1.17 " + "l1=0.00832" + "l2=1.16 f=-0.272 shape=(1, 9000, 1)
logits [[-0.41313154 -0.9486509   0.1453232   0.1301921 ]]
Iteration 800 of 1000: loss=1.03 " + "l1=0" + "l2=1.03 f=-0.271 shape=(1, 9000, 1)
logits [[-0.40212026 -0.9938409   0.15399335  0.1592589 ]]
Iteration 900 of 1000: loss=0.928 " + "l1=0" + "l2=0.928 f=-0.26 shape=(1, 9000, 1)
logits [[-0.35006952 -1.0542718   0.18026024  0.18316022]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.21 " + "l1=4.21" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 4.9758024 -3.17056    3.475053  -7.9821324]]
Iteration 100 of 1000: loss=3.51 " + "l1=3.11" + "l2=0.397 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.5410058 -2.7421863  2.927291  -6.027282 ]]
Iteration 200 of 1000: loss=3.1 " + "l1=2.52" + "l2=0.575 f=-0.511 shape=(1, 9000, 1)
logits [[ 2.7763395 -2.4778671  2.6388187 -4.982936 ]]
Iteration 300 of 1000: loss=2.63 " + "l1=2.02" + "l2=0.613 f=-0.456 shape=(1, 9000, 1)
logits [[ 2.1537378 -2.0992246  2.1660597 -4.0440736]]
Iteration 400 of 1000: loss=2.18 " + "l1=1.53" + "l2=0.657 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.5306404 -1.7166482  1.6379925 -3.0585186]]
Iteration 500 of 1000: loss=1.81 " + "l1=1.09" + "l2=0.721 f=-0.387 shape=(1, 9000, 1)
logits [[ 0.8930189 -1.546014   1.2297758 -2.1248915]]
Iteration 600 of 1000: loss=1.48 " + "l1=0.669" + "l2=0.814 f=-0.374 shape=(1, 9000, 1)
logits [[ 0.27394745 -1.4203081   0.85513544 -1.2042549 ]]
Iteration 700 of 1000: loss=1.2 " + "l1=0.372" + "l2=0.831 f=-0.354 shape=(1, 9000, 1)
logits [[-0.08874803 -1.3159139   0.56584054 -0.57823616]]
Iteration 800 of 1000: loss=0.972 " + "l1=0.163" + "l2=0.809 f=-0.335 shape=(1, 9000, 1)
logits [[-0.35481703 -1.1397449   0.32708594 -0.1736443 ]]
Iteration 900 of 1000: loss=0.773 " + "l1=0.00256" + "l2=0.771 f=-0.302 shape=(1, 9000, 1)
logits [[-0.52506894 -1.0210623   0.17238444  0.16451046]]
--- 295.641729593277 seconds ---
Adv result:3
Loading record A03295
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0701 " + "l1=0.0701" + "l2=0 f=-0.721 shape=(1, 9000, 1)
logits [[ 4.413954  -2.5948863  2.856436  -7.5575533]]
Iteration 100 of 1000: loss=0.0698 " + "l1=0.0695" + "l2=0.000248 f=-0.719 shape=(1, 9000, 1)
logits [[ 4.3802524 -2.5720224  2.836084  -7.520724 ]]
Iteration 200 of 1000: loss=0.0697 " + "l1=0.0695" + "l2=0.000235 f=-0.719 shape=(1, 9000, 1)
logits [[ 4.3773365 -2.568536   2.8331935 -7.516994 ]]
Iteration 300 of 1000: loss=0.0696 " + "l1=0.0694" + "l2=0.000271 f=-0.718 shape=(1, 9000, 1)
logits [[ 4.372431  -2.564073   2.8294187 -7.5112824]]
Iteration 400 of 1000: loss=0.0696 " + "l1=0.0693" + "l2=0.000355 f=-0.718 shape=(1, 9000, 1)
logits [[ 4.367257  -2.5596035  2.8255317 -7.5052667]]
Iteration 500 of 1000: loss=0.0696 " + "l1=0.0692" + "l2=0.000416 f=-0.718 shape=(1, 9000, 1)
logits [[ 4.3623204 -2.5556297  2.8219068 -7.4995213]]
Iteration 600 of 1000: loss=0.0696 " + "l1=0.0691" + "l2=0.000543 f=-0.717 shape=(1, 9000, 1)
logits [[ 4.357438  -2.5518262  2.8184202 -7.4938526]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.701 " + "l1=0.701" + "l2=0 f=-0.721 shape=(1, 9000, 1)
logits [[ 4.413954  -2.5948863  2.856436  -7.5575533]]
Iteration 100 of 1000: loss=0.671 " + "l1=0.651" + "l2=0.0194 f=-0.71 shape=(1, 9000, 1)
logits [[ 4.1183896 -2.3932548  2.6803527 -7.2466087]]
Iteration 200 of 1000: loss=0.658 " + "l1=0.631" + "l2=0.0271 f=-0.707 shape=(1, 9000, 1)
logits [[ 3.9985867 -2.3102744  2.6016083 -7.1183834]]
Iteration 300 of 1000: loss=0.647 " + "l1=0.614" + "l2=0.0327 f=-0.704 shape=(1, 9000, 1)
logits [[ 3.8994093 -2.2428362  2.5332847 -7.005319 ]]
Iteration 400 of 1000: loss=0.637 " + "l1=0.599" + "l2=0.0386 f=-0.701 shape=(1, 9000, 1)
logits [[ 3.8009784 -2.1862366  2.472953  -6.8925467]]
Iteration 500 of 1000: loss=0.628 " + "l1=0.584" + "l2=0.0445 f=-0.697 shape=(1, 9000, 1)
logits [[ 3.706358  -2.1291404  2.4117863 -6.775734 ]]
Iteration 600 of 1000: loss=0.62 " + "l1=0.57" + "l2=0.0494 f=-0.691 shape=(1, 9000, 1)
logits [[ 3.6206212 -2.0818017  2.3625395 -6.6657305]]
Iteration 700 of 1000: loss=0.613 " + "l1=0.559" + "l2=0.0533 f=-0.685 shape=(1, 9000, 1)
logits [[ 3.5509396 -2.0426793  2.3200796 -6.5693297]]
Iteration 800 of 1000: loss=0.606 " + "l1=0.549" + "l2=0.0568 f=-0.683 shape=(1, 9000, 1)
logits [[ 3.4758296 -2.0179958  2.2918851 -6.4804654]]
Iteration 900 of 1000: loss=0.599 " + "l1=0.538" + "l2=0.061 f=-0.68 shape=(1, 9000, 1)
logits [[ 3.3846982 -1.9977473  2.2664983 -6.373665 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.01 " + "l1=7.01" + "l2=0 f=-0.721 shape=(1, 9000, 1)
logits [[ 4.413954  -2.5948863  2.856436  -7.5575533]]
Iteration 100 of 1000: loss=3.59 " + "l1=2" + "l2=1.59 f=-0.576 shape=(1, 9000, 1)
logits [[ 1.3673156 -0.637398   1.3615267 -4.3964167]]
Iteration 200 of 1000: loss=2.9 " + "l1=1.35" + "l2=1.55 f=-0.553 shape=(1, 9000, 1)
logits [[ 1.0699341  -0.27372426  1.0769826  -4.0855665 ]]
Iteration 300 of 1000: loss=2.53 " + "l1=0.985" + "l2=1.55 f=-0.527 shape=(1, 9000, 1)
logits [[ 0.9181672  -0.06440305  0.92103285 -3.8813555 ]]
Iteration 400 of 1000: loss=2.34 " + "l1=0.808" + "l2=1.53 f=-0.514 shape=(1, 9000, 1)
logits [[ 0.84080637  0.04673958  0.85514903 -3.79862   ]]
Iteration 500 of 1000: loss=2.22 " + "l1=0.687" + "l2=1.53 f=-0.499 shape=(1, 9000, 1)
logits [[ 0.7886406   0.11605075  0.8035252  -3.703988  ]]
Iteration 600 of 1000: loss=2.13 " + "l1=0.611" + "l2=1.51 f=-0.485 shape=(1, 9000, 1)
logits [[ 0.76435673  0.16721609  0.7782451  -3.6495063 ]]
Iteration 700 of 1000: loss=2.04 " + "l1=0.537" + "l2=1.5 f=-0.476 shape=(1, 9000, 1)
logits [[ 0.7313194   0.21967374  0.75645113 -3.6116958 ]]
Iteration 800 of 1000: loss=1.95 " + "l1=0.482" + "l2=1.47 f=-0.469 shape=(1, 9000, 1)
logits [[ 0.7370532   0.25558832  0.7371804  -3.606235  ]]
Iteration 900 of 1000: loss=1.89 " + "l1=0.438" + "l2=1.45 f=-0.463 shape=(1, 9000, 1)
logits [[ 0.7155358   0.27853143  0.7167048  -3.5630305 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=70.1 " + "l1=70.1" + "l2=0 f=-0.721 shape=(1, 9000, 1)
logits [[ 4.413954  -2.5948863  2.856436  -7.5575533]]
Iteration 100 of 1000: loss=6.79 " + "l1=0.0282" + "l2=6.77 f=-0.468 shape=(1, 9000, 1)
logits [[ 0.23025295  0.4993862   0.5022043  -3.1035407 ]]
Iteration 200 of 1000: loss=4.65 " + "l1=0" + "l2=4.65 f=-0.467 shape=(1, 9000, 1)
logits [[ 0.39897418  0.5152724   0.5142564  -3.296799  ]]
Iteration 300 of 1000: loss=3.97 " + "l1=0" + "l2=3.97 f=-0.472 shape=(1, 9000, 1)
logits [[ 0.5070133   0.53847796  0.5287238  -3.4620209 ]]
Iteration 400 of 1000: loss=3.69 " + "l1=0" + "l2=3.69 f=-0.476 shape=(1, 9000, 1)
logits [[ 0.47165355  0.5615749   0.5240219  -3.4608839 ]]
Iteration 500 of 1000: loss=3.6 " + "l1=0" + "l2=3.6 f=-0.477 shape=(1, 9000, 1)
logits [[ 0.3211137  0.620728   0.5413376 -3.3907378]]
Iteration 600 of 1000: loss=3.24 " + "l1=0" + "l2=3.24 f=-0.481 shape=(1, 9000, 1)
logits [[ 0.5219399   0.5756629   0.56300324 -3.5852232 ]]
Iteration 700 of 1000: loss=3.21 " + "l1=0" + "l2=3.21 f=-0.483 shape=(1, 9000, 1)
logits [[ 0.43188486  0.61670154  0.5705007  -3.5527265 ]]
Iteration 800 of 1000: loss=3.15 " + "l1=0" + "l2=3.15 f=-0.485 shape=(1, 9000, 1)
logits [[ 0.377169    0.63207805  0.57617164 -3.5242712 ]]
Iteration 900 of 1000: loss=3.02 " + "l1=0" + "l2=3.02 f=-0.483 shape=(1, 9000, 1)
logits [[ 0.43590137  0.6200855   0.5814864  -3.569633  ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=38.5 " + "l1=38.5" + "l2=0 f=-0.721 shape=(1, 9000, 1)
logits [[ 4.413954  -2.5948863  2.856436  -7.5575533]]
Iteration 100 of 1000: loss=5.81 " + "l1=0.136" + "l2=5.68 f=-0.481 shape=(1, 9000, 1)
logits [[ 0.42830682  0.4717764   0.49642968 -3.320256  ]]
Iteration 200 of 1000: loss=4.04 " + "l1=0.0992" + "l2=3.95 f=-0.477 shape=(1, 9000, 1)
logits [[ 0.5340078   0.5159797   0.52284205 -3.4826252 ]]
Iteration 300 of 1000: loss=3.53 " + "l1=0" + "l2=3.53 f=-0.484 shape=(1, 9000, 1)
logits [[ 0.50938964  0.5509243   0.52956593 -3.52439   ]]
Iteration 400 of 1000: loss=3.29 " + "l1=0" + "l2=3.29 f=-0.485 shape=(1, 9000, 1)
logits [[ 0.44808993  0.5689521   0.54302794 -3.4993856 ]]
Iteration 500 of 1000: loss=3.08 " + "l1=0" + "l2=3.08 f=-0.489 shape=(1, 9000, 1)
logits [[ 0.45683393  0.57309484  0.56310403 -3.5492456 ]]
Iteration 600 of 1000: loss=2.95 " + "l1=0.0262" + "l2=2.92 f=-0.487 shape=(1, 9000, 1)
logits [[ 0.5642795  0.5595161  0.5607378 -3.632454 ]]
Iteration 700 of 1000: loss=2.84 " + "l1=0" + "l2=2.84 f=-0.482 shape=(1, 9000, 1)
logits [[ 0.46059215  0.5908536   0.5886021  -3.5664527 ]]
Iteration 800 of 1000: loss=2.78 " + "l1=0" + "l2=2.78 f=-0.479 shape=(1, 9000, 1)
logits [[ 0.43220377  0.6106646   0.5949945  -3.5533423 ]]
Iteration 900 of 1000: loss=2.66 " + "l1=0" + "l2=2.66 f=-0.481 shape=(1, 9000, 1)
logits [[ 0.54405963  0.5864945   0.58359075 -3.6390488 ]]
--- 273.2891843318939 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0156 " + "l1=0.0156" + "l2=0 f=-0.721 shape=(1, 9000, 1)
logits [[ 4.413954  -2.5948863  2.856436  -7.5575533]]
Iteration 100 of 1000: loss=0.0154 " + "l1=0.0152" + "l2=0.000198 f=-0.724 shape=(1, 9000, 1)
logits [[ 4.386542  -2.6046422  2.8695767 -7.5464377]]
Iteration 200 of 1000: loss=0.0153 " + "l1=0.0151" + "l2=0.000163 f=-0.724 shape=(1, 9000, 1)
logits [[ 4.3862376 -2.6069183  2.8727653 -7.548515 ]]
Iteration 300 of 1000: loss=0.0153 " + "l1=0.0151" + "l2=0.000204 f=-0.725 shape=(1, 9000, 1)
logits [[ 4.3830523 -2.6096945  2.8767607 -7.549038 ]]
Iteration 400 of 1000: loss=0.0152 " + "l1=0.015" + "l2=0.000242 f=-0.725 shape=(1, 9000, 1)
logits [[ 4.3792458 -2.6125576  2.8811002 -7.549354 ]]
Iteration 500 of 1000: loss=0.0152 " + "l1=0.0149" + "l2=0.000316 f=-0.726 shape=(1, 9000, 1)
logits [[ 4.3753767 -2.6154814  2.8854597 -7.5497375]]
Iteration 600 of 1000: loss=0.0152 " + "l1=0.0148" + "l2=0.000398 f=-0.727 shape=(1, 9000, 1)
logits [[ 4.371411  -2.6182888  2.8897147 -7.549974 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.156 " + "l1=0.156" + "l2=0 f=-0.721 shape=(1, 9000, 1)
logits [[ 4.413954  -2.5948863  2.856436  -7.5575533]]
Iteration 100 of 1000: loss=0.136 " + "l1=0.126" + "l2=0.0104 f=-0.747 shape=(1, 9000, 1)
logits [[ 4.2262444 -2.6766102  2.9684372 -7.5060606]]
Iteration 200 of 1000: loss=0.129 " + "l1=0.115" + "l2=0.0139 f=-0.757 shape=(1, 9000, 1)
logits [[ 4.1617293 -2.7099817  3.011595  -7.49114  ]]
Iteration 300 of 1000: loss=0.123 " + "l1=0.105" + "l2=0.0173 f=-0.764 shape=(1, 9000, 1)
logits [[ 4.09839   -2.736011   3.0443053 -7.4641423]]
Iteration 400 of 1000: loss=0.117 " + "l1=0.097" + "l2=0.0202 f=-0.771 shape=(1, 9000, 1)
logits [[ 4.038746  -2.7572637  3.0692055 -7.433562 ]]
Iteration 500 of 1000: loss=0.113 " + "l1=0.0901" + "l2=0.0226 f=-0.775 shape=(1, 9000, 1)
logits [[ 3.9860368 -2.7693107  3.0854855 -7.4010563]]
Iteration 600 of 1000: loss=0.109 " + "l1=0.0846" + "l2=0.0241 f=-0.776 shape=(1, 9000, 1)
logits [[ 3.937427  -2.7714944  3.091089  -7.361673 ]]
Iteration 700 of 1000: loss=0.105 " + "l1=0.0795" + "l2=0.0257 f=-0.777 shape=(1, 9000, 1)
logits [[ 3.8898535 -2.772771   3.0951393 -7.3192616]]
Iteration 800 of 1000: loss=0.102 " + "l1=0.0739" + "l2=0.0276 f=-0.778 shape=(1, 9000, 1)
logits [[ 3.842506  -2.778276   3.103124  -7.2804093]]
Iteration 900 of 1000: loss=0.0976 " + "l1=0.068" + "l2=0.0295 f=-0.78 shape=(1, 9000, 1)
logits [[ 3.793013  -2.784795   3.1128356 -7.2423067]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.56 " + "l1=1.56" + "l2=0 f=-0.721 shape=(1, 9000, 1)
logits [[ 4.413954  -2.5948863  2.856436  -7.5575533]]
Iteration 100 of 1000: loss=0.294 " + "l1=0.00608" + "l2=0.288 f=-0.792 shape=(1, 9000, 1)
logits [[ 3.1400852 -2.7872503  3.1340039 -6.6536436]]
Iteration 200 of 1000: loss=0.214 " + "l1=0" + "l2=0.214 f=-0.794 shape=(1, 9000, 1)
logits [[ 3.1414726 -2.8103492  3.1484582 -6.6564016]]
Iteration 300 of 1000: loss=0.182 " + "l1=0" + "l2=0.182 f=-0.795 shape=(1, 9000, 1)
logits [[ 3.1362157 -2.829811   3.1537523 -6.639567 ]]
Iteration 400 of 1000: loss=0.158 " + "l1=0" + "l2=0.158 f=-0.795 shape=(1, 9000, 1)
logits [[ 3.1410122 -2.8372889  3.1492183 -6.633155 ]]
Iteration 500 of 1000: loss=0.151 " + "l1=0.00983" + "l2=0.141 f=-0.795 shape=(1, 9000, 1)
logits [[ 3.1558824 -2.8380706  3.1460497 -6.6425056]]
Iteration 600 of 1000: loss=0.14 " + "l1=0.00998" + "l2=0.13 f=-0.794 shape=(1, 9000, 1)
logits [[ 3.1546211 -2.836655   3.144641  -6.638962 ]]
Iteration 700 of 1000: loss=0.125 " + "l1=0" + "l2=0.125 f=-0.795 shape=(1, 9000, 1)
logits [[ 3.1285222 -2.83546    3.140615  -6.6128464]]
Iteration 800 of 1000: loss=0.115 " + "l1=0.000418" + "l2=0.115 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.132083  -2.8295105  3.1316645 -6.608027 ]]
Iteration 900 of 1000: loss=0.113 " + "l1=0" + "l2=0.113 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.1008887 -2.8267674  3.1267428 -6.574174 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.857 " + "l1=0.857" + "l2=0 f=-0.721 shape=(1, 9000, 1)
logits [[ 4.413954  -2.5948863  2.856436  -7.5575533]]
Iteration 100 of 1000: loss=0.292 " + "l1=0.00193" + "l2=0.29 f=-0.794 shape=(1, 9000, 1)
logits [[ 3.1694884 -2.8023794  3.1659753 -6.7087073]]
Iteration 200 of 1000: loss=0.2 " + "l1=0" + "l2=0.2 f=-0.797 shape=(1, 9000, 1)
logits [[ 3.1724102 -2.8263755  3.1790726 -6.7126665]]
Iteration 300 of 1000: loss=0.164 " + "l1=0.00211" + "l2=0.162 f=-0.797 shape=(1, 9000, 1)
logits [[ 3.1831093 -2.8437529  3.1792815 -6.705487 ]]
Iteration 400 of 1000: loss=0.146 " + "l1=0.00413" + "l2=0.142 f=-0.796 shape=(1, 9000, 1)
logits [[ 3.1811678 -2.8495674  3.1736627 -6.6903124]]
Iteration 500 of 1000: loss=0.131 " + "l1=0.00168" + "l2=0.129 f=-0.795 shape=(1, 9000, 1)
logits [[ 3.1705244 -2.8474784  3.1674657 -6.6709332]]
Iteration 600 of 1000: loss=0.122 " + "l1=0.00419" + "l2=0.118 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.1710954 -2.8455367  3.163478  -6.6614637]]
Iteration 700 of 1000: loss=0.113 " + "l1=0" + "l2=0.113 f=-0.792 shape=(1, 9000, 1)
logits [[ 3.1540923 -2.8436265  3.160735  -6.6391683]]
Iteration 800 of 1000: loss=0.106 " + "l1=0" + "l2=0.106 f=-0.79 shape=(1, 9000, 1)
logits [[ 3.1503172 -2.83869    3.1543608 -6.6261554]]
Iteration 900 of 1000: loss=0.0998 " + "l1=0" + "l2=0.0998 f=-0.788 shape=(1, 9000, 1)
logits [[ 3.131247  -2.827246   3.1378927 -6.5931773]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.506 " + "l1=0.506" + "l2=0 f=-0.721 shape=(1, 9000, 1)
logits [[ 4.413954  -2.5948863  2.856436  -7.5575533]]
Iteration 100 of 1000: loss=0.305 " + "l1=0.195" + "l2=0.111 f=-0.788 shape=(1, 9000, 1)
logits [[ 3.727645  -2.7969418  3.129174  -7.213232 ]]
Iteration 200 of 1000: loss=0.227 " + "l1=0.0739" + "l2=0.153 f=-0.794 shape=(1, 9000, 1)
logits [[ 3.398457  -2.822826   3.171066  -6.9245625]]
Iteration 300 of 1000: loss=0.166 " + "l1=0.00173" + "l2=0.164 f=-0.795 shape=(1, 9000, 1)
logits [[ 3.2130032 -2.8456717  3.2076864 -6.755258 ]]
Iteration 400 of 1000: loss=0.139 " + "l1=0.00141" + "l2=0.138 f=-0.792 shape=(1, 9000, 1)
logits [[ 3.2007587 -2.8431876  3.1964204 -6.723644 ]]
Iteration 500 of 1000: loss=0.124 " + "l1=0.00264" + "l2=0.121 f=-0.789 shape=(1, 9000, 1)
logits [[ 3.1904807 -2.8348842  3.1823707 -6.695395 ]]
Iteration 600 of 1000: loss=0.113 " + "l1=0" + "l2=0.113 f=-0.786 shape=(1, 9000, 1)
logits [[ 3.1728935 -2.8281136  3.175604  -6.665108 ]]
Iteration 700 of 1000: loss=0.105 " + "l1=0" + "l2=0.105 f=-0.782 shape=(1, 9000, 1)
logits [[ 3.1661284 -2.8183827  3.1677744 -6.645066 ]]
Iteration 800 of 1000: loss=0.0994 " + "l1=0" + "l2=0.0994 f=-0.777 shape=(1, 9000, 1)
logits [[ 3.1582136 -2.807847   3.1644242 -6.62283  ]]
Iteration 900 of 1000: loss=0.0933 " + "l1=0" + "l2=0.0933 f=-0.773 shape=(1, 9000, 1)
logits [[ 3.1558177 -2.800994   3.1620018 -6.610003 ]]
--- 270.96124482154846 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.12 " + "l1=0.12" + "l2=0 f=-0.721 shape=(1, 9000, 1)
logits [[ 4.413954  -2.5948863  2.856436  -7.5575533]]
Iteration 100 of 1000: loss=0.119 " + "l1=0.119" + "l2=0.000493 f=-0.719 shape=(1, 9000, 1)
logits [[ 4.3621492 -2.5820935  2.833906  -7.4886127]]
Iteration 200 of 1000: loss=0.119 " + "l1=0.118" + "l2=0.000517 f=-0.718 shape=(1, 9000, 1)
logits [[ 4.354574  -2.579389   2.8300674 -7.478211 ]]
Iteration 300 of 1000: loss=0.119 " + "l1=0.118" + "l2=0.000597 f=-0.718 shape=(1, 9000, 1)
logits [[ 4.3448243 -2.5765994  2.8252077 -7.464277 ]]
Iteration 400 of 1000: loss=0.119 " + "l1=0.118" + "l2=0.000712 f=-0.717 shape=(1, 9000, 1)
logits [[ 4.335085  -2.5738654  2.8202825 -7.450081 ]]
Iteration 500 of 1000: loss=0.118 " + "l1=0.118" + "l2=0.00083 f=-0.717 shape=(1, 9000, 1)
logits [[ 4.325564  -2.5711436  2.8155634 -7.436105 ]]
Iteration 600 of 1000: loss=0.118 " + "l1=0.117" + "l2=0.000995 f=-0.716 shape=(1, 9000, 1)
logits [[ 4.3166027 -2.568598   2.8110514 -7.422672 ]]
Iteration 700 of 1000: loss=0.118 " + "l1=0.117" + "l2=0.00114 f=-0.715 shape=(1, 9000, 1)
logits [[ 4.307953  -2.5659661  2.8064668 -7.4097223]]
Iteration 800 of 1000: loss=0.118 " + "l1=0.117" + "l2=0.00122 f=-0.715 shape=(1, 9000, 1)
logits [[ 4.299997  -2.5635223  2.8021119 -7.3974967]]
Iteration 900 of 1000: loss=0.118 " + "l1=0.117" + "l2=0.00144 f=-0.714 shape=(1, 9000, 1)
logits [[ 4.2923794 -2.561134   2.7978811 -7.3857007]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.2 " + "l1=1.2" + "l2=0 f=-0.721 shape=(1, 9000, 1)
logits [[ 4.413954  -2.5948863  2.856436  -7.5575533]]
Iteration 100 of 1000: loss=1.13 " + "l1=1.08" + "l2=0.0471 f=-0.701 shape=(1, 9000, 1)
logits [[ 3.9022686 -2.449967   2.628503  -6.886799 ]]
Iteration 200 of 1000: loss=1.09 " + "l1=1.02" + "l2=0.0686 f=-0.693 shape=(1, 9000, 1)
logits [[ 3.6581943 -2.3968918  2.5288591 -6.563068 ]]
Iteration 300 of 1000: loss=1.05 " + "l1=0.964" + "l2=0.091 f=-0.68 shape=(1, 9000, 1)
logits [[ 3.411256  -2.3490396  2.44144   -6.225096 ]]
Iteration 400 of 1000: loss=1.02 " + "l1=0.905" + "l2=0.114 f=-0.666 shape=(1, 9000, 1)
logits [[ 3.164959  -2.3015845  2.3542788 -5.8811646]]
Iteration 500 of 1000: loss=0.989 " + "l1=0.858" + "l2=0.131 f=-0.649 shape=(1, 9000, 1)
logits [[ 2.984724  -2.249647   2.2648468 -5.5964723]]
Iteration 600 of 1000: loss=0.961 " + "l1=0.816" + "l2=0.145 f=-0.633 shape=(1, 9000, 1)
logits [[ 2.8200374 -2.2104247  2.1982343 -5.341571 ]]
Iteration 700 of 1000: loss=0.933 " + "l1=0.776" + "l2=0.157 f=-0.616 shape=(1, 9000, 1)
logits [[ 2.663067 -2.179408  2.143391 -5.092294]]
Iteration 800 of 1000: loss=0.904 " + "l1=0.742" + "l2=0.162 f=-0.6 shape=(1, 9000, 1)
logits [[ 2.5394974 -2.1540213  2.0895288 -4.8758926]]
Iteration 900 of 1000: loss=0.873 " + "l1=0.702" + "l2=0.171 f=-0.583 shape=(1, 9000, 1)
logits [[ 2.395712  -2.125108   2.0219111 -4.624514 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12 " + "l1=12" + "l2=0 f=-0.721 shape=(1, 9000, 1)
logits [[ 4.413954  -2.5948863  2.856436  -7.5575533]]
Iteration 100 of 1000: loss=5.43 " + "l1=2.6" + "l2=2.82 f=-0.379 shape=(1, 9000, 1)
logits [[ 0.6125825 -1.5332476  1.0037649 -1.5992573]]
Iteration 200 of 1000: loss=3.7 " + "l1=0.526" + "l2=3.17 f=-0.328 shape=(1, 9000, 1)
logits [[-0.23559594 -1.2588241   0.35443258 -0.1713664 ]]
Iteration 300 of 1000: loss=2.79 " + "l1=0" + "l2=2.79 f=-0.318 shape=(1, 9000, 1)
logits [[-0.46930614 -1.1579927   0.17192262  0.18325475]]
Iteration 400 of 1000: loss=2.28 " + "l1=0.0083" + "l2=2.27 f=-0.321 shape=(1, 9000, 1)
logits [[-0.4972554  -1.1692679   0.19621627  0.1879144 ]]
Iteration 500 of 1000: loss=2.01 " + "l1=0" + "l2=2.01 f=-0.323 shape=(1, 9000, 1)
logits [[-0.49564606 -1.1996127   0.19607311  0.20808285]]
Iteration 600 of 1000: loss=1.83 " + "l1=0" + "l2=1.83 f=-0.326 shape=(1, 9000, 1)
logits [[-0.47944972 -1.2478728   0.20707233  0.21457908]]
Iteration 700 of 1000: loss=1.69 " + "l1=0.00485" + "l2=1.69 f=-0.326 shape=(1, 9000, 1)
logits [[-0.47077265 -1.2642245   0.21732639  0.21247324]]
Iteration 800 of 1000: loss=1.57 " + "l1=0.00974" + "l2=1.56 f=-0.323 shape=(1, 9000, 1)
logits [[-0.4578993  -1.2695516   0.22202243  0.21228376]]
Iteration 900 of 1000: loss=1.46 " + "l1=0" + "l2=1.46 f=-0.327 shape=(1, 9000, 1)
logits [[-0.47374314 -1.2771742   0.22132082  0.2218886 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.58 " + "l1=6.58" + "l2=0 f=-0.721 shape=(1, 9000, 1)
logits [[ 4.413954  -2.5948863  2.856436  -7.5575533]]
Iteration 100 of 1000: loss=3.97 " + "l1=2.78" + "l2=1.19 f=-0.494 shape=(1, 9000, 1)
logits [[ 1.6239425 -1.8123296  1.633695  -3.4205213]]
Iteration 200 of 1000: loss=3.23 " + "l1=1.96" + "l2=1.27 f=-0.403 shape=(1, 9000, 1)
logits [[ 1.1527892 -1.6432043  1.2225277 -2.3458009]]
Iteration 300 of 1000: loss=2.67 " + "l1=1.32" + "l2=1.36 f=-0.359 shape=(1, 9000, 1)
logits [[ 0.64928216 -1.5471289   0.9277389  -1.4644115 ]]
Iteration 400 of 1000: loss=2.24 " + "l1=0.809" + "l2=1.43 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.22715421 -1.4356755   0.68838286 -0.7819554 ]]
Iteration 500 of 1000: loss=1.93 " + "l1=0.505" + "l2=1.43 f=-0.318 shape=(1, 9000, 1)
logits [[-0.04089572 -1.3903738   0.5388806  -0.37931594]]
Iteration 600 of 1000: loss=1.69 " + "l1=0.226" + "l2=1.46 f=-0.308 shape=(1, 9000, 1)
logits [[-0.27132758 -1.3263658   0.38892844 -0.02199959]]
Iteration 700 of 1000: loss=1.49 " + "l1=0.0468" + "l2=1.44 f=-0.302 shape=(1, 9000, 1)
logits [[-0.40352044 -1.3166994   0.2991886   0.2140817 ]]
Iteration 800 of 1000: loss=1.34 " + "l1=0.0015" + "l2=1.34 f=-0.302 shape=(1, 9000, 1)
logits [[-0.4622641  -1.2995834   0.2774675   0.27474746]]
Iteration 900 of 1000: loss=1.22 " + "l1=0" + "l2=1.22 f=-0.299 shape=(1, 9000, 1)
logits [[-0.44967467 -1.3026239   0.2783255   0.27913034]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.89 " + "l1=3.89" + "l2=0 f=-0.721 shape=(1, 9000, 1)
logits [[ 4.413954  -2.5948863  2.856436  -7.5575533]]
Iteration 100 of 1000: loss=2.85 " + "l1=2.13" + "l2=0.723 f=-0.562 shape=(1, 9000, 1)
logits [[ 2.1077027 -2.0044274  2.0777884 -4.4309745]]
Iteration 200 of 1000: loss=2.44 " + "l1=1.73" + "l2=0.713 f=-0.511 shape=(1, 9000, 1)
logits [[ 1.7003797 -1.8458682  1.7046176 -3.6031883]]
Iteration 300 of 1000: loss=2.15 " + "l1=1.42" + "l2=0.733 f=-0.46 shape=(1, 9000, 1)
logits [[ 1.4229898 -1.7669238  1.4312238 -2.9275398]]
Iteration 400 of 1000: loss=1.91 " + "l1=1.18" + "l2=0.734 f=-0.431 shape=(1, 9000, 1)
logits [[ 1.1931562 -1.7167917  1.2110518 -2.412548 ]]
Iteration 500 of 1000: loss=1.73 " + "l1=1" + "l2=0.732 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.97505677 -1.6620522   1.0748488  -2.006749  ]]
Iteration 600 of 1000: loss=1.56 " + "l1=0.824" + "l2=0.732 f=-0.376 shape=(1, 9000, 1)
logits [[ 0.74586   -1.605343   0.9457997 -1.5905133]]
Iteration 700 of 1000: loss=1.4 " + "l1=0.664" + "l2=0.731 f=-0.348 shape=(1, 9000, 1)
logits [[ 0.562595   -1.5573183   0.82342666 -1.2208304 ]]
Iteration 800 of 1000: loss=1.3 " + "l1=0.563" + "l2=0.733 f=-0.331 shape=(1, 9000, 1)
logits [[ 0.4400253  -1.5352992   0.75077343 -0.9803863 ]]
Iteration 900 of 1000: loss=1.2 " + "l1=0.463" + "l2=0.742 f=-0.314 shape=(1, 9000, 1)
logits [[ 0.31028005 -1.5159589   0.6886967  -0.73711485]]
--- 289.01423740386963 seconds ---
Adv result:3
Loading record A03306
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.042 " + "l1=0.042" + "l2=0 f=-0.129 shape=(1, 9000, 1)
logits [[ 2.3840163 -1.8190206  1.7807078 -2.861774 ]]
Iteration 100 of 1000: loss=0.0412 " + "l1=0.0406" + "l2=0.000554 f=-0.13 shape=(1, 9000, 1)
logits [[ 2.3004785 -1.7638469  1.734309  -2.7896063]]
Iteration 200 of 1000: loss=0.041 " + "l1=0.0404" + "l2=0.000577 f=-0.13 shape=(1, 9000, 1)
logits [[ 2.285684  -1.7528362  1.725141  -2.7790346]]
Iteration 300 of 1000: loss=0.0408 " + "l1=0.0401" + "l2=0.000688 f=-0.131 shape=(1, 9000, 1)
logits [[ 2.2687662 -1.7404966  1.7146865 -2.766063 ]]
Iteration 400 of 1000: loss=0.0406 " + "l1=0.0398" + "l2=0.000801 f=-0.131 shape=(1, 9000, 1)
logits [[ 2.2538736 -1.72911    1.7054565 -2.7543006]]
Iteration 500 of 1000: loss=0.0406 " + "l1=0.0396" + "l2=0.000999 f=-0.131 shape=(1, 9000, 1)
logits [[ 2.239358  -1.7179049  1.696429  -2.742884 ]]
Iteration 600 of 1000: loss=0.0405 " + "l1=0.0393" + "l2=0.00112 f=-0.132 shape=(1, 9000, 1)
logits [[ 2.2254837 -1.7074139  1.6878752 -2.7321217]]
Iteration 700 of 1000: loss=0.0404 " + "l1=0.0391" + "l2=0.00128 f=-0.132 shape=(1, 9000, 1)
logits [[ 2.2130048 -1.6984093  1.6807604 -2.722235 ]]
Iteration 800 of 1000: loss=0.0403 " + "l1=0.0389" + "l2=0.00142 f=-0.132 shape=(1, 9000, 1)
logits [[ 2.201273  -1.6898705  1.6741499 -2.7130466]]
Iteration 900 of 1000: loss=0.0403 " + "l1=0.0387" + "l2=0.00155 f=-0.132 shape=(1, 9000, 1)
logits [[ 2.1904807 -1.6824582  1.668277  -2.704216 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.42 " + "l1=0.42" + "l2=0 f=-0.129 shape=(1, 9000, 1)
logits [[ 2.3840163 -1.8190206  1.7807078 -2.861774 ]]
Iteration 100 of 1000: loss=0.342 " + "l1=0.294" + "l2=0.0477 f=-0.139 shape=(1, 9000, 1)
logits [[ 1.6025429 -1.3412797  1.401417  -2.2177832]]
Iteration 200 of 1000: loss=0.304 " + "l1=0.241" + "l2=0.0623 f=-0.15 shape=(1, 9000, 1)
logits [[ 1.2694608 -1.1426184  1.2640153 -1.991636 ]]
Iteration 300 of 1000: loss=0.283 " + "l1=0.224" + "l2=0.0597 f=-0.148 shape=(1, 9000, 1)
logits [[ 1.1808085 -1.0413117  1.1944135 -1.9274517]]
Iteration 400 of 1000: loss=0.269 " + "l1=0.211" + "l2=0.0585 f=-0.142 shape=(1, 9000, 1)
logits [[ 1.1461192 -0.9612028  1.1411269 -1.8950573]]
Iteration 500 of 1000: loss=0.26 " + "l1=0.201" + "l2=0.0591 f=-0.141 shape=(1, 9000, 1)
logits [[ 1.0928761  -0.90467143  1.1016029  -1.85462   ]]
Iteration 600 of 1000: loss=0.253 " + "l1=0.194" + "l2=0.0587 f=-0.14 shape=(1, 9000, 1)
logits [[ 1.0715318 -0.8669794  1.0722826 -1.8365132]]
Iteration 700 of 1000: loss=0.246 " + "l1=0.183" + "l2=0.0632 f=-0.143 shape=(1, 9000, 1)
logits [[ 1.0117916  -0.80970967  1.0173607  -1.7917837 ]]
Iteration 800 of 1000: loss=0.238 " + "l1=0.169" + "l2=0.0697 f=-0.149 shape=(1, 9000, 1)
logits [[ 0.9310406  -0.74022305  0.9468351  -1.7342134 ]]
Iteration 900 of 1000: loss=0.231 " + "l1=0.154" + "l2=0.0774 f=-0.157 shape=(1, 9000, 1)
logits [[ 0.84269   -0.671045   0.8702684 -1.6685258]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.2 " + "l1=4.2" + "l2=0 f=-0.129 shape=(1, 9000, 1)
logits [[ 2.3840163 -1.8190206  1.7807078 -2.861774 ]]
Iteration 100 of 1000: loss=0.765 " + "l1=0.00195" + "l2=0.763 f=-0.254 shape=(1, 9000, 1)
logits [[-0.43953213  0.11841678  0.12036794 -0.8170026 ]]
Iteration 200 of 1000: loss=0.478 " + "l1=0" + "l2=0.478 f=-0.276 shape=(1, 9000, 1)
logits [[-0.5117078   0.14972797  0.12784387 -0.8706207 ]]
Iteration 300 of 1000: loss=0.378 " + "l1=0" + "l2=0.378 f=-0.295 shape=(1, 9000, 1)
logits [[-0.58758056  0.14968653  0.14632744 -0.88764805]]
Iteration 400 of 1000: loss=0.337 " + "l1=0" + "l2=0.337 f=-0.326 shape=(1, 9000, 1)
logits [[-0.7206711   0.17430691  0.151114   -0.90726566]]
Iteration 500 of 1000: loss=0.305 " + "l1=0" + "l2=0.305 f=-0.327 shape=(1, 9000, 1)
logits [[-0.7110405   0.16520607  0.16426747 -0.92798316]]
Iteration 600 of 1000: loss=0.303 " + "l1=0" + "l2=0.303 f=-0.341 shape=(1, 9000, 1)
logits [[-0.7854753   0.2039085   0.14265439 -0.92457944]]
Iteration 700 of 1000: loss=0.283 " + "l1=0.00969" + "l2=0.274 f=-0.332 shape=(1, 9000, 1)
logits [[-0.71382236  0.1627271   0.17241634 -0.9510617 ]]
Iteration 800 of 1000: loss=0.275 " + "l1=0" + "l2=0.275 f=-0.34 shape=(1, 9000, 1)
logits [[-0.76695263  0.19699822  0.14939581 -0.93870246]]
Iteration 900 of 1000: loss=0.259 " + "l1=0" + "l2=0.259 f=-0.334 shape=(1, 9000, 1)
logits [[-0.7243192   0.17712034  0.16165146 -0.95228416]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.31 " + "l1=2.31" + "l2=0 f=-0.129 shape=(1, 9000, 1)
logits [[ 2.3840163 -1.8190206  1.7807078 -2.861774 ]]
Iteration 100 of 1000: loss=0.799 " + "l1=0.298" + "l2=0.501 f=-0.211 shape=(1, 9000, 1)
logits [[ 0.09477103 -0.20362759  0.33782682 -1.071878  ]]
Iteration 200 of 1000: loss=0.457 " + "l1=0" + "l2=0.457 f=-0.274 shape=(1, 9000, 1)
logits [[-0.42980054  0.15934551  0.15018477 -0.9737402 ]]
Iteration 300 of 1000: loss=0.353 " + "l1=0" + "l2=0.353 f=-0.301 shape=(1, 9000, 1)
logits [[-0.5698048   0.17810364  0.17053978 -0.98257524]]
Iteration 400 of 1000: loss=0.312 " + "l1=0" + "l2=0.312 f=-0.309 shape=(1, 9000, 1)
logits [[-0.5939358   0.17941983  0.1777977  -0.9986184 ]]
Iteration 500 of 1000: loss=0.291 " + "l1=0.00275" + "l2=0.288 f=-0.313 shape=(1, 9000, 1)
logits [[-0.5927862   0.17594175  0.18093757 -1.0142787 ]]
Iteration 600 of 1000: loss=0.272 " + "l1=0.000947" + "l2=0.271 f=-0.312 shape=(1, 9000, 1)
logits [[-0.58707196  0.174956    0.1766785  -1.0123821 ]]
Iteration 700 of 1000: loss=0.262 " + "l1=0" + "l2=0.262 f=-0.314 shape=(1, 9000, 1)
logits [[-0.5973708   0.18199654  0.16969286 -1.0103818 ]]
Iteration 800 of 1000: loss=0.248 " + "l1=0" + "l2=0.248 f=-0.313 shape=(1, 9000, 1)
logits [[-0.5862204   0.17622966  0.16803743 -1.0094699 ]]
Iteration 900 of 1000: loss=0.24 " + "l1=0.00678" + "l2=0.233 f=-0.309 shape=(1, 9000, 1)
logits [[-0.5522137   0.1625237   0.17485394 -1.0207037 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.37 " + "l1=1.37" + "l2=0 f=-0.129 shape=(1, 9000, 1)
logits [[ 2.3840163 -1.8190206  1.7807078 -2.861774 ]]
Iteration 100 of 1000: loss=0.691 " + "l1=0.392" + "l2=0.299 f=-0.192 shape=(1, 9000, 1)
logits [[ 0.58331704 -0.57419163  0.631285   -1.408682  ]]
Iteration 200 of 1000: loss=0.516 " + "l1=0.223" + "l2=0.293 f=-0.213 shape=(1, 9000, 1)
logits [[ 0.26170126 -0.27663025  0.409281   -1.2459515 ]]
Iteration 300 of 1000: loss=0.399 " + "l1=0.0891" + "l2=0.31 f=-0.248 shape=(1, 9000, 1)
logits [[-0.17222968 -0.01707175  0.2572306  -1.0591719 ]]
Iteration 400 of 1000: loss=0.327 " + "l1=0.0049" + "l2=0.322 f=-0.3 shape=(1, 9000, 1)
logits [[-0.5595213   0.16927736  0.18435563 -0.99258846]]
Iteration 500 of 1000: loss=0.292 " + "l1=0" + "l2=0.292 f=-0.314 shape=(1, 9000, 1)
logits [[-0.6235873   0.18943934  0.17837413 -0.99860364]]
Iteration 600 of 1000: loss=0.265 " + "l1=0.00136" + "l2=0.263 f=-0.322 shape=(1, 9000, 1)
logits [[-0.6566882   0.18618913  0.19038878 -1.0092034 ]]
Iteration 700 of 1000: loss=0.246 " + "l1=0" + "l2=0.246 f=-0.323 shape=(1, 9000, 1)
logits [[-0.6631632   0.18869723  0.18808182 -1.0043621 ]]
Iteration 800 of 1000: loss=0.232 " + "l1=0" + "l2=0.232 f=-0.322 shape=(1, 9000, 1)
logits [[-0.6617944   0.19289197  0.18627961 -1.0051049 ]]
Iteration 900 of 1000: loss=0.219 " + "l1=0" + "l2=0.219 f=-0.319 shape=(1, 9000, 1)
logits [[-0.6574805   0.18962555  0.18585409 -0.99366945]]
--- 297.49734473228455 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00603 " + "l1=0.00603" + "l2=0 f=-0.129 shape=(1, 9000, 1)
logits [[ 2.3840163 -1.8190206  1.7807078 -2.861774 ]]
Iteration 100 of 1000: loss=0.00584 " + "l1=0.00565" + "l2=0.000188 f=-0.129 shape=(1, 9000, 1)
logits [[ 2.3426716 -1.8176937  1.7771757 -2.8196628]]
Iteration 200 of 1000: loss=0.00579 " + "l1=0.00564" + "l2=0.000153 f=-0.13 shape=(1, 9000, 1)
logits [[ 2.341346  -1.8173498  1.7774996 -2.8199255]]
Iteration 300 of 1000: loss=0.00578 " + "l1=0.00559" + "l2=0.000193 f=-0.13 shape=(1, 9000, 1)
logits [[ 2.3366168 -1.8173753  1.777934  -2.816678 ]]
Iteration 400 of 1000: loss=0.00577 " + "l1=0.00553" + "l2=0.000236 f=-0.13 shape=(1, 9000, 1)
logits [[ 2.3313258 -1.8173674  1.77831   -2.8129494]]
Iteration 500 of 1000: loss=0.00574 " + "l1=0.00548" + "l2=0.000264 f=-0.13 shape=(1, 9000, 1)
logits [[ 2.3263562 -1.8173252  1.7785978 -2.8094957]]
Iteration 600 of 1000: loss=0.0058 " + "l1=0.00542" + "l2=0.000374 f=-0.131 shape=(1, 9000, 1)
logits [[ 2.3210618 -1.8171146  1.7786165 -2.805724 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0603 " + "l1=0.0603" + "l2=0 f=-0.129 shape=(1, 9000, 1)
logits [[ 2.3840163 -1.8190206  1.7807078 -2.861774 ]]
Iteration 100 of 1000: loss=0.043 " + "l1=0.0327" + "l2=0.0103 f=-0.134 shape=(1, 9000, 1)
logits [[ 2.08544   -1.8112217  1.7586968 -2.5682337]]
Iteration 200 of 1000: loss=0.0366 " + "l1=0.0229" + "l2=0.0137 f=-0.137 shape=(1, 9000, 1)
logits [[ 1.9865415 -1.8053502  1.7573632 -2.4847322]]
Iteration 300 of 1000: loss=0.0308 " + "l1=0.0137" + "l2=0.0171 f=-0.141 shape=(1, 9000, 1)
logits [[ 1.8853892 -1.793452   1.7487911 -2.4056747]]
Iteration 400 of 1000: loss=0.0263 " + "l1=0.0071" + "l2=0.0192 f=-0.144 shape=(1, 9000, 1)
logits [[ 1.814575  -1.7863898  1.7435815 -2.3468246]]
Iteration 500 of 1000: loss=0.0212 " + "l1=0.000465" + "l2=0.0207 f=-0.148 shape=(1, 9000, 1)
logits [[ 1.738537  -1.7648714  1.7338915 -2.3011394]]
Iteration 600 of 1000: loss=0.0161 " + "l1=0" + "l2=0.0161 f=-0.151 shape=(1, 9000, 1)
logits [[ 1.7373389 -1.745639   1.7383087 -2.3320374]]
Iteration 700 of 1000: loss=0.0137 " + "l1=0" + "l2=0.0137 f=-0.151 shape=(1, 9000, 1)
logits [[ 1.7359033 -1.7370846  1.7408153 -2.3423123]]
Iteration 800 of 1000: loss=0.0119 " + "l1=0.000376" + "l2=0.0115 f=-0.15 shape=(1, 9000, 1)
logits [[ 1.7463157 -1.7315092  1.7425525 -2.3580325]]
Iteration 900 of 1000: loss=0.0105 " + "l1=0.000122" + "l2=0.0104 f=-0.15 shape=(1, 9000, 1)
logits [[ 1.7454951 -1.7276628  1.7442732 -2.3617184]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0332 " + "l1=0.0332" + "l2=0 f=-0.129 shape=(1, 9000, 1)
logits [[ 2.3840163 -1.8190206  1.7807078 -2.861774 ]]
Iteration 100 of 1000: loss=0.0278 " + "l1=0.0247" + "l2=0.00316 f=-0.132 shape=(1, 9000, 1)
logits [[ 2.2166452 -1.8140928  1.7679263 -2.698823 ]]
Iteration 200 of 1000: loss=0.0261 " + "l1=0.0222" + "l2=0.00397 f=-0.134 shape=(1, 9000, 1)
logits [[ 2.170775  -1.8128867  1.7679131 -2.6602259]]
Iteration 300 of 1000: loss=0.0247 " + "l1=0.02" + "l2=0.00475 f=-0.134 shape=(1, 9000, 1)
logits [[ 2.1346712 -1.8143268  1.771491  -2.6294115]]
Iteration 400 of 1000: loss=0.0234 " + "l1=0.0176" + "l2=0.00572 f=-0.136 shape=(1, 9000, 1)
logits [[ 2.091707  -1.8105785  1.7711643 -2.5965424]]
Iteration 500 of 1000: loss=0.0221 " + "l1=0.0154" + "l2=0.00669 f=-0.138 shape=(1, 9000, 1)
logits [[ 2.0502467 -1.8064502  1.7701654 -2.5662549]]
Iteration 600 of 1000: loss=0.021 " + "l1=0.0136" + "l2=0.00743 f=-0.14 shape=(1, 9000, 1)
logits [[ 2.01538   -1.8023194  1.7689295 -2.541431 ]]
Iteration 700 of 1000: loss=0.0199 " + "l1=0.012" + "l2=0.00783 f=-0.141 shape=(1, 9000, 1)
logits [[ 1.9878681 -1.8010448  1.7692055 -2.5195062]]
Iteration 800 of 1000: loss=0.0189 " + "l1=0.0105" + "l2=0.00833 f=-0.141 shape=(1, 9000, 1)
logits [[ 1.9602473 -1.7972051  1.7689915 -2.496377 ]]
Iteration 900 of 1000: loss=0.0176 " + "l1=0.00835" + "l2=0.00927 f=-0.144 shape=(1, 9000, 1)
logits [[ 1.9145943 -1.7865353  1.7628013 -2.4650078]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0468 " + "l1=0.0468" + "l2=0 f=-0.129 shape=(1, 9000, 1)
logits [[ 2.3840163 -1.8190206  1.7807078 -2.861774 ]]
Iteration 100 of 1000: loss=0.0364 " + "l1=0.0302" + "l2=0.00614 f=-0.133 shape=(1, 9000, 1)
logits [[ 2.1530156 -1.812221   1.7631598 -2.6374588]]
Iteration 200 of 1000: loss=0.0328 " + "l1=0.0246" + "l2=0.00813 f=-0.135 shape=(1, 9000, 1)
logits [[ 2.0820513 -1.8117582  1.7640344 -2.5731323]]
Iteration 300 of 1000: loss=0.0295 " + "l1=0.0195" + "l2=0.01 f=-0.137 shape=(1, 9000, 1)
logits [[ 2.0141578 -1.8052621  1.7627295 -2.5213819]]
Iteration 400 of 1000: loss=0.0266 " + "l1=0.015" + "l2=0.0116 f=-0.14 shape=(1, 9000, 1)
logits [[ 1.9548107 -1.7999759  1.7614441 -2.47633  ]]
Iteration 500 of 1000: loss=0.0241 " + "l1=0.0111" + "l2=0.0129 f=-0.142 shape=(1, 9000, 1)
logits [[ 1.9023868 -1.7961649  1.7585623 -2.4340873]]
Iteration 600 of 1000: loss=0.0217 " + "l1=0.00734" + "l2=0.0143 f=-0.145 shape=(1, 9000, 1)
logits [[ 1.8466737 -1.7843382  1.7520133 -2.392786 ]]
Iteration 700 of 1000: loss=0.0182 " + "l1=0.00189" + "l2=0.0163 f=-0.148 shape=(1, 9000, 1)
logits [[ 1.7655144 -1.764916   1.741163  -2.3356583]]
Iteration 800 of 1000: loss=0.014 " + "l1=1.77e-05" + "l2=0.014 f=-0.15 shape=(1, 9000, 1)
logits [[ 1.744016  -1.7479893  1.743788  -2.3388517]]
Iteration 900 of 1000: loss=0.012 " + "l1=2.93e-05" + "l2=0.012 f=-0.15 shape=(1, 9000, 1)
logits [[ 1.745213  -1.7387185  1.7448355 -2.3501804]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.04 " + "l1=0.04" + "l2=0 f=-0.129 shape=(1, 9000, 1)
logits [[ 2.3840163 -1.8190206  1.7807078 -2.861774 ]]
Iteration 100 of 1000: loss=0.0323 " + "l1=0.0278" + "l2=0.00446 f=-0.133 shape=(1, 9000, 1)
logits [[ 2.1855814 -1.8135172  1.7654517 -2.668857 ]]
Iteration 200 of 1000: loss=0.0297 " + "l1=0.0239" + "l2=0.00586 f=-0.134 shape=(1, 9000, 1)
logits [[ 2.1273415 -1.8131872  1.7667806 -2.61678  ]]
Iteration 300 of 1000: loss=0.0275 " + "l1=0.0202" + "l2=0.0073 f=-0.136 shape=(1, 9000, 1)
logits [[ 2.0709515 -1.8090103  1.7664115 -2.5720942]]
Iteration 400 of 1000: loss=0.0254 " + "l1=0.0167" + "l2=0.00868 f=-0.139 shape=(1, 9000, 1)
logits [[ 2.0181508 -1.8039992  1.7655988 -2.5346527]]
Iteration 500 of 1000: loss=0.0235 " + "l1=0.0139" + "l2=0.00963 f=-0.141 shape=(1, 9000, 1)
logits [[ 1.9748812 -1.8016326  1.7648561 -2.5009947]]
Iteration 600 of 1000: loss=0.022 " + "l1=0.0114" + "l2=0.0106 f=-0.142 shape=(1, 9000, 1)
logits [[ 1.9359566 -1.7984533  1.7641904 -2.4682443]]
Iteration 700 of 1000: loss=0.0201 " + "l1=0.00859" + "l2=0.0115 f=-0.143 shape=(1, 9000, 1)
logits [[ 1.8879918 -1.7880166  1.7583877 -2.4307952]]
Iteration 800 of 1000: loss=0.0181 " + "l1=0.00563" + "l2=0.0124 f=-0.146 shape=(1, 9000, 1)
logits [[ 1.834718  -1.7759376  1.7496879 -2.3930054]]
Iteration 900 of 1000: loss=0.0144 " + "l1=3.14e-06" + "l2=0.0144 f=-0.149 shape=(1, 9000, 1)
logits [[ 1.7447938 -1.7521125  1.7447463 -2.3344908]]
--- 276.42996191978455 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0525 " + "l1=0.0525" + "l2=0 f=-0.129 shape=(1, 9000, 1)
logits [[ 2.3840163 -1.8190206  1.7807078 -2.861774 ]]
Iteration 100 of 1000: loss=0.0509 " + "l1=0.0499" + "l2=0.00103 f=-0.126 shape=(1, 9000, 1)
logits [[ 2.270428  -1.7867801  1.732473  -2.7201154]]
Iteration 200 of 1000: loss=0.0506 " + "l1=0.0494" + "l2=0.00113 f=-0.126 shape=(1, 9000, 1)
logits [[ 2.2475872 -1.7780699  1.7212387 -2.6944418]]
Iteration 300 of 1000: loss=0.0502 " + "l1=0.0489" + "l2=0.0013 f=-0.125 shape=(1, 9000, 1)
logits [[ 2.225719  -1.7697072  1.7106546 -2.6681433]]
Iteration 400 of 1000: loss=0.05 " + "l1=0.0485" + "l2=0.0015 f=-0.125 shape=(1, 9000, 1)
logits [[ 2.2051632 -1.761527   1.7005993 -2.6433697]]
Iteration 500 of 1000: loss=0.0498 " + "l1=0.0481" + "l2=0.00172 f=-0.124 shape=(1, 9000, 1)
logits [[ 2.185509  -1.7535051  1.6909158 -2.6203   ]]
Iteration 600 of 1000: loss=0.0496 " + "l1=0.0477" + "l2=0.00192 f=-0.124 shape=(1, 9000, 1)
logits [[ 2.1673787 -1.7460722  1.6817702 -2.5991611]]
Iteration 700 of 1000: loss=0.0494 " + "l1=0.0473" + "l2=0.00211 f=-0.124 shape=(1, 9000, 1)
logits [[ 2.1505306 -1.7399443  1.6735796 -2.5791018]]
Iteration 800 of 1000: loss=0.0493 " + "l1=0.0469" + "l2=0.00233 f=-0.123 shape=(1, 9000, 1)
logits [[ 2.13364   -1.7339274  1.6659092 -2.5594983]]
Iteration 900 of 1000: loss=0.0492 " + "l1=0.0466" + "l2=0.00258 f=-0.123 shape=(1, 9000, 1)
logits [[ 2.1176207 -1.7287171  1.6587895 -2.540781 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.525 " + "l1=0.525" + "l2=0 f=-0.129 shape=(1, 9000, 1)
logits [[ 2.3840163 -1.8190206  1.7807078 -2.861774 ]]
Iteration 100 of 1000: loss=0.379 " + "l1=0.302" + "l2=0.0768 f=-0.106 shape=(1, 9000, 1)
logits [[ 1.3756831 -1.5264482  1.3741678 -1.647794 ]]
Iteration 200 of 1000: loss=0.343 " + "l1=0.264" + "l2=0.0796 f=-0.0886 shape=(1, 9000, 1)
logits [[ 1.2284964 -1.4091158  1.2312727 -1.4048703]]
Iteration 300 of 1000: loss=0.317 " + "l1=0.238" + "l2=0.0788 f=-0.0762 shape=(1, 9000, 1)
logits [[ 1.1329844 -1.3494319  1.1480243 -1.2365704]]
Iteration 400 of 1000: loss=0.298 " + "l1=0.214" + "l2=0.0845 f=-0.0666 shape=(1, 9000, 1)
logits [[ 1.0254308 -1.2994189  1.0732692 -1.0658805]]
Iteration 500 of 1000: loss=0.282 " + "l1=0.184" + "l2=0.0971 f=-0.0583 shape=(1, 9000, 1)
logits [[ 0.90551364 -1.2509961   0.9783194  -0.86621904]]
Iteration 600 of 1000: loss=0.267 " + "l1=0.165" + "l2=0.103 f=-0.0533 shape=(1, 9000, 1)
logits [[ 0.83053166 -1.2240586   0.9143963  -0.73407775]]
Iteration 700 of 1000: loss=0.255 " + "l1=0.147" + "l2=0.108 f=-0.0547 shape=(1, 9000, 1)
logits [[ 0.7424512 -1.1836085  0.8454727 -0.6232837]]
Iteration 800 of 1000: loss=0.241 " + "l1=0.125" + "l2=0.116 f=-0.0576 shape=(1, 9000, 1)
logits [[ 0.6342654  -1.1431221   0.7658649  -0.48758015]]
Iteration 900 of 1000: loss=0.222 " + "l1=0.0931" + "l2=0.129 f=-0.0623 shape=(1, 9000, 1)
logits [[ 0.48872724 -1.0455642   0.61934334 -0.3117663 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.25 " + "l1=5.25" + "l2=0 f=-0.129 shape=(1, 9000, 1)
logits [[ 2.3840163 -1.8190206  1.7807078 -2.861774 ]]
Iteration 100 of 1000: loss=0.677 " + "l1=0" + "l2=0.677 f=-0.0627 shape=(1, 9000, 1)
logits [[-0.01138804 -0.89256454  0.32585335  0.32712623]]
Iteration 200 of 1000: loss=0.521 " + "l1=0.0121" + "l2=0.508 f=-0.0699 shape=(1, 9000, 1)
logits [[-0.01099115 -0.8556919   0.29966167  0.2875505 ]]
Iteration 300 of 1000: loss=0.435 " + "l1=0" + "l2=0.435 f=-0.0791 shape=(1, 9000, 1)
logits [[-0.01909728 -0.8379078   0.26280776  0.27794924]]
Iteration 400 of 1000: loss=0.377 " + "l1=0" + "l2=0.377 f=-0.0795 shape=(1, 9000, 1)
logits [[ 0.00523684 -0.8472344   0.25401258  0.269953  ]]
Iteration 500 of 1000: loss=0.339 " + "l1=0" + "l2=0.339 f=-0.0744 shape=(1, 9000, 1)
logits [[ 0.03520576 -0.8571825   0.24843957  0.27591005]]
Iteration 600 of 1000: loss=0.311 " + "l1=0" + "l2=0.311 f=-0.0735 shape=(1, 9000, 1)
logits [[ 0.05251235 -0.8697397   0.2575876   0.2657043 ]]
Iteration 700 of 1000: loss=0.298 " + "l1=0.00933" + "l2=0.288 f=-0.0702 shape=(1, 9000, 1)
logits [[ 0.07808536 -0.88965106  0.26995865  0.26062912]]
Iteration 800 of 1000: loss=0.277 " + "l1=0" + "l2=0.277 f=-0.0674 shape=(1, 9000, 1)
logits [[ 0.0717793  -0.89428735  0.2671873   0.28583634]]
Iteration 900 of 1000: loss=0.264 " + "l1=0" + "l2=0.264 f=-0.0641 shape=(1, 9000, 1)
logits [[ 0.08173899 -0.9065793   0.2735734   0.2950521 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.89 " + "l1=2.89" + "l2=0 f=-0.129 shape=(1, 9000, 1)
logits [[ 2.3840163 -1.8190206  1.7807078 -2.861774 ]]
Iteration 100 of 1000: loss=0.628 " + "l1=0" + "l2=0.628 f=-0.0696 shape=(1, 9000, 1)
logits [[-0.02789852 -0.8841382   0.31055674  0.32322943]]
Iteration 200 of 1000: loss=0.451 " + "l1=0" + "l2=0.451 f=-0.0665 shape=(1, 9000, 1)
logits [[-0.0022145  -0.84118545  0.28661412  0.29093832]]
Iteration 300 of 1000: loss=0.381 " + "l1=0" + "l2=0.381 f=-0.0713 shape=(1, 9000, 1)
logits [[ 0.00559433 -0.84398144  0.25995108  0.29337484]]
Iteration 400 of 1000: loss=0.333 " + "l1=0" + "l2=0.333 f=-0.0705 shape=(1, 9000, 1)
logits [[ 0.02799872 -0.8535794   0.26233187  0.28141865]]
Iteration 500 of 1000: loss=0.301 " + "l1=0.00102" + "l2=0.3 f=-0.0693 shape=(1, 9000, 1)
logits [[ 0.05949339 -0.8741927   0.26972792  0.2678796 ]]
Iteration 600 of 1000: loss=0.281 " + "l1=0.00574" + "l2=0.275 f=-0.0682 shape=(1, 9000, 1)
logits [[ 0.07818372 -0.8800341   0.26978776  0.25935543]]
Iteration 700 of 1000: loss=0.266 " + "l1=0.0104" + "l2=0.256 f=-0.0659 shape=(1, 9000, 1)
logits [[ 0.08639802 -0.8811984   0.27498925  0.25605518]]
Iteration 800 of 1000: loss=0.25 " + "l1=0.00722" + "l2=0.243 f=-0.0663 shape=(1, 9000, 1)
logits [[ 0.07490088 -0.87770045  0.2754248   0.26230496]]
Iteration 900 of 1000: loss=0.235 " + "l1=0" + "l2=0.235 f=-0.0627 shape=(1, 9000, 1)
logits [[ 0.07505277 -0.87592727  0.26336703  0.28653336]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.7 " + "l1=1.7" + "l2=0 f=-0.129 shape=(1, 9000, 1)
logits [[ 2.3840163 -1.8190206  1.7807078 -2.861774 ]]
Iteration 100 of 1000: loss=0.648 " + "l1=0.177" + "l2=0.471 f=-0.0961 shape=(1, 9000, 1)
logits [[ 0.185292   -0.97473043  0.47426    -0.06909678]]
Iteration 200 of 1000: loss=0.418 " + "l1=0.0114" + "l2=0.407 f=-0.0705 shape=(1, 9000, 1)
logits [[ 0.01017204 -0.84044653  0.29165053  0.2566691 ]]
Iteration 300 of 1000: loss=0.334 " + "l1=0.00602" + "l2=0.328 f=-0.0756 shape=(1, 9000, 1)
logits [[ 0.01880699 -0.8442484   0.27078462  0.25226098]]
Iteration 400 of 1000: loss=0.293 " + "l1=0" + "l2=0.293 f=-0.0715 shape=(1, 9000, 1)
logits [[ 0.0324382  -0.8670212   0.27383682  0.27467456]]
Iteration 500 of 1000: loss=0.268 " + "l1=0" + "l2=0.268 f=-0.0694 shape=(1, 9000, 1)
logits [[ 0.04168006 -0.8660388   0.26863572  0.27832022]]
Iteration 600 of 1000: loss=0.248 " + "l1=0.00399" + "l2=0.244 f=-0.0652 shape=(1, 9000, 1)
logits [[ 0.06958784 -0.8752872   0.27849385  0.2662317 ]]
Iteration 700 of 1000: loss=0.229 " + "l1=0" + "l2=0.229 f=-0.062 shape=(1, 9000, 1)
logits [[ 0.06886093 -0.8754914   0.27486607  0.2838621 ]]
Iteration 800 of 1000: loss=0.213 " + "l1=0" + "l2=0.213 f=-0.0576 shape=(1, 9000, 1)
logits [[ 0.07916385 -0.87996656  0.28183997  0.28841636]]
Iteration 900 of 1000: loss=0.202 " + "l1=0" + "l2=0.202 f=-0.0528 shape=(1, 9000, 1)
logits [[ 0.08235773 -0.8812813   0.28972304  0.29801625]]
--- 301.0741238594055 seconds ---
Adv result:3
Loading record A03310
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0914 " + "l1=0.0914" + "l2=0 f=-0.74 shape=(1, 9000, 1)
logits [[ 5.612026  -3.5247166  3.1504042 -8.196163 ]]
Iteration 100 of 1000: loss=0.0909 " + "l1=0.0906" + "l2=0.000333 f=-0.738 shape=(1, 9000, 1)
logits [[ 5.574414  -3.4808848  3.1096938 -8.15522  ]]
Iteration 200 of 1000: loss=0.0908 " + "l1=0.0904" + "l2=0.000334 f=-0.737 shape=(1, 9000, 1)
logits [[ 5.5698056 -3.4720194  3.1013718 -8.148943 ]]
Iteration 300 of 1000: loss=0.0907 " + "l1=0.0902" + "l2=0.00042 f=-0.737 shape=(1, 9000, 1)
logits [[ 5.5629625 -3.4614675  3.0916898 -8.140823 ]]
Iteration 400 of 1000: loss=0.0906 " + "l1=0.0901" + "l2=0.000528 f=-0.736 shape=(1, 9000, 1)
logits [[ 5.556293  -3.4514093  3.0825458 -8.132991 ]]
Iteration 500 of 1000: loss=0.0906 " + "l1=0.0899" + "l2=0.000649 f=-0.736 shape=(1, 9000, 1)
logits [[ 5.550064  -3.4427466  3.0746667 -8.125876 ]]
Iteration 600 of 1000: loss=0.0905 " + "l1=0.0898" + "l2=0.000723 f=-0.736 shape=(1, 9000, 1)
logits [[ 5.5444756 -3.435291   3.0679278 -8.119694 ]]
Iteration 700 of 1000: loss=0.0906 " + "l1=0.0897" + "l2=0.000883 f=-0.735 shape=(1, 9000, 1)
logits [[ 5.539446  -3.4283602  3.0617912 -8.114137 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.914 " + "l1=0.914" + "l2=0 f=-0.74 shape=(1, 9000, 1)
logits [[ 5.612026  -3.5247166  3.1504042 -8.196163 ]]
Iteration 100 of 1000: loss=0.865 " + "l1=0.838" + "l2=0.0277 f=-0.71 shape=(1, 9000, 1)
logits [[ 5.3068933 -3.0684016  2.7643118 -7.8445444]]
Iteration 200 of 1000: loss=0.844 " + "l1=0.806" + "l2=0.0382 f=-0.694 shape=(1, 9000, 1)
logits [[ 5.1809034 -2.8813028  2.6078625 -7.6824865]]
Iteration 300 of 1000: loss=0.827 " + "l1=0.772" + "l2=0.0559 f=-0.675 shape=(1, 9000, 1)
logits [[ 5.031119  -2.6843228  2.4609988 -7.5064387]]
Iteration 400 of 1000: loss=0.813 " + "l1=0.747" + "l2=0.0667 f=-0.66 shape=(1, 9000, 1)
logits [[ 4.9154954 -2.551094   2.3592932 -7.3636007]]
Iteration 500 of 1000: loss=0.799 " + "l1=0.723" + "l2=0.0757 f=-0.647 shape=(1, 9000, 1)
logits [[ 4.7936053 -2.4379933  2.2736168 -7.219178 ]]
Iteration 600 of 1000: loss=0.782 " + "l1=0.697" + "l2=0.0849 f=-0.635 shape=(1, 9000, 1)
logits [[ 4.6449018 -2.3219     2.1853154 -7.046808 ]]
Iteration 700 of 1000: loss=0.759 " + "l1=0.664" + "l2=0.0954 f=-0.615 shape=(1, 9000, 1)
logits [[ 4.4724174 -2.1672885  2.0777013 -6.842482 ]]
Iteration 800 of 1000: loss=0.73 " + "l1=0.618" + "l2=0.112 f=-0.605 shape=(1, 9000, 1)
logits [[ 4.205134  -1.9764271  1.9491781 -6.598597 ]]
Iteration 900 of 1000: loss=0.701 " + "l1=0.576" + "l2=0.124 f=-0.591 shape=(1, 9000, 1)
logits [[ 3.9533563 -1.8097175  1.8420941 -6.349536 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.14 " + "l1=9.14" + "l2=0 f=-0.74 shape=(1, 9000, 1)
logits [[ 5.612026  -3.5247166  3.1504042 -8.196163 ]]
Iteration 100 of 1000: loss=4.12 " + "l1=1.65" + "l2=2.47 f=-0.617 shape=(1, 9000, 1)
logits [[ 1.3274041  -0.32233083  1.1445322  -4.616014  ]]
Iteration 200 of 1000: loss=2.6 " + "l1=0.487" + "l2=2.12 f=-0.609 shape=(1, 9000, 1)
logits [[ 0.7189108   0.24529956  0.7324239  -4.132894  ]]
Iteration 300 of 1000: loss=2.08 " + "l1=0.142" + "l2=1.94 f=-0.588 shape=(1, 9000, 1)
logits [[ 0.5077853   0.41290697  0.5546262  -3.8272552 ]]
Iteration 400 of 1000: loss=1.77 " + "l1=0" + "l2=1.77 f=-0.567 shape=(1, 9000, 1)
logits [[ 0.4070981   0.44987252  0.44796202 -3.5746067 ]]
Iteration 500 of 1000: loss=1.58 " + "l1=0.0144" + "l2=1.56 f=-0.558 shape=(1, 9000, 1)
logits [[ 0.40771285  0.39853528  0.4129075  -3.4527376 ]]
Iteration 600 of 1000: loss=1.45 " + "l1=0" + "l2=1.45 f=-0.557 shape=(1, 9000, 1)
logits [[ 0.35142103  0.37518477  0.37457094 -3.3287556 ]]
Iteration 700 of 1000: loss=1.3 " + "l1=0" + "l2=1.3 f=-0.554 shape=(1, 9000, 1)
logits [[ 0.28938606  0.32648623  0.310971   -3.1427522 ]]
Iteration 800 of 1000: loss=1.16 " + "l1=0.0113" + "l2=1.15 f=-0.545 shape=(1, 9000, 1)
logits [[ 0.287005    0.28364527  0.2948979  -3.04466   ]]
Iteration 900 of 1000: loss=1.07 " + "l1=0.00274" + "l2=1.06 f=-0.533 shape=(1, 9000, 1)
logits [[ 0.2561828   0.2741464   0.27688938 -2.938204  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.03 " + "l1=5.03" + "l2=0 f=-0.74 shape=(1, 9000, 1)
logits [[ 5.612026  -3.5247166  3.1504042 -8.196163 ]]
Iteration 100 of 1000: loss=3.4 " + "l1=2.49" + "l2=0.915 f=-0.596 shape=(1, 9000, 1)
logits [[ 3.2284772 -1.291336   1.5550984 -5.874965 ]]
Iteration 200 of 1000: loss=2.43 " + "l1=1.07" + "l2=1.36 f=-0.59 shape=(1, 9000, 1)
logits [[ 1.5603355  -0.38665384  1.1189761  -4.652328  ]]
Iteration 300 of 1000: loss=1.89 " + "l1=0.578" + "l2=1.31 f=-0.577 shape=(1, 9000, 1)
logits [[ 0.9274074  -0.11239248  0.9376169  -4.062532  ]]
Iteration 400 of 1000: loss=1.53 " + "l1=0.457" + "l2=1.08 f=-0.53 shape=(1, 9000, 1)
logits [[ 0.81441534 -0.01457743  0.8171918  -3.7351978 ]]
Iteration 500 of 1000: loss=1.35 " + "l1=0.371" + "l2=0.98 f=-0.502 shape=(1, 9000, 1)
logits [[ 0.70958674  0.05167548  0.72599274 -3.494981  ]]
Iteration 600 of 1000: loss=1.22 " + "l1=0.29" + "l2=0.926 f=-0.478 shape=(1, 9000, 1)
logits [[ 0.6385874  0.1141725  0.6406197 -3.3066185]]
Iteration 700 of 1000: loss=1.12 " + "l1=0.224" + "l2=0.891 f=-0.463 shape=(1, 9000, 1)
logits [[ 0.53901535  0.14799707  0.55441076 -3.0946336 ]]
Iteration 800 of 1000: loss=1.01 " + "l1=0.133" + "l2=0.874 f=-0.445 shape=(1, 9000, 1)
logits [[ 0.41604033  0.19533655  0.43680742 -2.828202  ]]
Iteration 900 of 1000: loss=0.891 " + "l1=0.0618" + "l2=0.829 f=-0.418 shape=(1, 9000, 1)
logits [[ 0.33516598  0.2307655   0.3431396  -2.5800426 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.97 " + "l1=2.97" + "l2=0 f=-0.74 shape=(1, 9000, 1)
logits [[ 5.612026  -3.5247166  3.1504042 -8.196163 ]]
Iteration 100 of 1000: loss=2.41 " + "l1=2.11" + "l2=0.303 f=-0.616 shape=(1, 9000, 1)
logits [[ 4.4518576 -2.0398266  2.0206535 -6.8969073]]
Iteration 200 of 1000: loss=2.05 " + "l1=1.53" + "l2=0.522 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.387759  -1.317203   1.5603008 -5.9316278]]
Iteration 300 of 1000: loss=1.72 " + "l1=1.08" + "l2=0.641 f=-0.551 shape=(1, 9000, 1)
logits [[ 2.5169666  -0.81616575  1.2851219  -5.190205  ]]
Iteration 400 of 1000: loss=1.48 " + "l1=0.779" + "l2=0.7 f=-0.549 shape=(1, 9000, 1)
logits [[ 1.8318794 -0.5648522  1.142872  -4.6048317]]
Iteration 500 of 1000: loss=1.28 " + "l1=0.521" + "l2=0.756 f=-0.529 shape=(1, 9000, 1)
logits [[ 1.2631736  -0.33869117  1.0586278  -4.099013  ]]
Iteration 600 of 1000: loss=1.11 " + "l1=0.397" + "l2=0.713 f=-0.491 shape=(1, 9000, 1)
logits [[ 1.0069133  -0.21452403  0.9975324  -3.7546196 ]]
Iteration 700 of 1000: loss=1.02 " + "l1=0.361" + "l2=0.656 f=-0.465 shape=(1, 9000, 1)
logits [[ 0.950416   -0.16126879  0.94838464 -3.5985775 ]]
Iteration 800 of 1000: loss=0.949 " + "l1=0.338" + "l2=0.611 f=-0.444 shape=(1, 9000, 1)
logits [[ 0.91445076 -0.11968962  0.9196564  -3.4884539 ]]
Iteration 900 of 1000: loss=0.88 " + "l1=0.304" + "l2=0.576 f=-0.419 shape=(1, 9000, 1)
logits [[ 0.84759396 -0.06947576  0.8658768  -3.3215954 ]]
--- 282.15436029434204 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0246 " + "l1=0.0246" + "l2=0 f=-0.74 shape=(1, 9000, 1)
logits [[ 5.612026  -3.5247166  3.1504042 -8.196163 ]]
Iteration 100 of 1000: loss=0.0244 " + "l1=0.0242" + "l2=0.000194 f=-0.742 shape=(1, 9000, 1)
logits [[ 5.5945573 -3.5468903  3.1705585 -8.18655  ]]
Iteration 200 of 1000: loss=0.0244 " + "l1=0.0242" + "l2=0.000165 f=-0.742 shape=(1, 9000, 1)
logits [[ 5.595641  -3.5498242  3.173209  -8.187768 ]]
Iteration 300 of 1000: loss=0.0244 " + "l1=0.0242" + "l2=0.000197 f=-0.742 shape=(1, 9000, 1)
logits [[ 5.5947533 -3.5536866  3.1768177 -8.187793 ]]
Iteration 400 of 1000: loss=0.0244 " + "l1=0.0241" + "l2=0.000215 f=-0.743 shape=(1, 9000, 1)
logits [[ 5.5933723 -3.5568342  3.179734  -8.187355 ]]
Iteration 500 of 1000: loss=0.0244 " + "l1=0.0241" + "l2=0.000285 f=-0.743 shape=(1, 9000, 1)
logits [[ 5.591854 -3.559638  3.182297 -8.186818]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.246 " + "l1=0.246" + "l2=0 f=-0.74 shape=(1, 9000, 1)
logits [[ 5.612026  -3.5247166  3.1504042 -8.196163 ]]
Iteration 100 of 1000: loss=0.23 " + "l1=0.22" + "l2=0.0093 f=-0.755 shape=(1, 9000, 1)
logits [[ 5.491273  -3.6717677  3.2874582 -8.127885 ]]
Iteration 200 of 1000: loss=0.225 " + "l1=0.213" + "l2=0.0121 f=-0.758 shape=(1, 9000, 1)
logits [[ 5.457424 -3.714607  3.328663 -8.105119]]
Iteration 300 of 1000: loss=0.221 " + "l1=0.206" + "l2=0.0145 f=-0.761 shape=(1, 9000, 1)
logits [[ 5.422838  -3.7441573  3.3578553 -8.0809355]]
Iteration 400 of 1000: loss=0.217 " + "l1=0.201" + "l2=0.0166 f=-0.763 shape=(1, 9000, 1)
logits [[ 5.386629  -3.7660015  3.3806865 -8.05361  ]]
Iteration 500 of 1000: loss=0.214 " + "l1=0.195" + "l2=0.0187 f=-0.765 shape=(1, 9000, 1)
logits [[ 5.352763  -3.7867115  3.4045484 -8.028968 ]]
Iteration 600 of 1000: loss=0.21 " + "l1=0.189" + "l2=0.0206 f=-0.766 shape=(1, 9000, 1)
logits [[ 5.3168564 -3.8014908  3.4234765 -8.002885 ]]
Iteration 700 of 1000: loss=0.206 " + "l1=0.183" + "l2=0.0229 f=-0.767 shape=(1, 9000, 1)
logits [[ 5.2778463 -3.8159347  3.443828  -7.9738064]]
Iteration 800 of 1000: loss=0.203 " + "l1=0.178" + "l2=0.0247 f=-0.767 shape=(1, 9000, 1)
logits [[ 5.241373  -3.8252761  3.4605556 -7.9464536]]
Iteration 900 of 1000: loss=0.199 " + "l1=0.173" + "l2=0.0263 f=-0.767 shape=(1, 9000, 1)
logits [[ 5.2030306 -3.8293402  3.4725463 -7.9142847]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.46 " + "l1=2.46" + "l2=0 f=-0.74 shape=(1, 9000, 1)
logits [[ 5.612026  -3.5247166  3.1504042 -8.196163 ]]
Iteration 100 of 1000: loss=0.998 " + "l1=0.258" + "l2=0.74 f=-0.84 shape=(1, 9000, 1)
logits [[ 3.9940376 -4.1113234  3.7362945 -6.97745  ]]
Iteration 200 of 1000: loss=0.565 " + "l1=0" + "l2=0.565 f=-0.832 shape=(1, 9000, 1)
logits [[ 3.7516387 -4.0902033  3.752847  -6.7411594]]
Iteration 300 of 1000: loss=0.411 " + "l1=0.0159" + "l2=0.395 f=-0.817 shape=(1, 9000, 1)
logits [[ 3.76648   -4.0598826  3.7506106 -6.723874 ]]
Iteration 400 of 1000: loss=0.331 " + "l1=0" + "l2=0.331 f=-0.807 shape=(1, 9000, 1)
logits [[ 3.7159646 -4.026859   3.7324793 -6.649739 ]]
Iteration 500 of 1000: loss=0.287 " + "l1=0" + "l2=0.287 f=-0.794 shape=(1, 9000, 1)
logits [[ 3.682874  -3.9858418  3.7039323 -6.5769777]]
Iteration 600 of 1000: loss=0.252 " + "l1=0" + "l2=0.252 f=-0.777 shape=(1, 9000, 1)
logits [[ 3.6523564 -3.9279246  3.6654005 -6.4990916]]
Iteration 700 of 1000: loss=0.217 " + "l1=0" + "l2=0.217 f=-0.752 shape=(1, 9000, 1)
logits [[ 3.6221988 -3.8457701  3.6243522 -6.408882 ]]
Iteration 800 of 1000: loss=0.193 " + "l1=0" + "l2=0.193 f=-0.729 shape=(1, 9000, 1)
logits [[ 3.5857553 -3.7869785  3.6021938 -6.3150907]]
Iteration 900 of 1000: loss=0.178 " + "l1=0" + "l2=0.178 f=-0.713 shape=(1, 9000, 1)
logits [[ 3.5423179 -3.7373345  3.5816767 -6.237119 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.35 " + "l1=1.35" + "l2=0 f=-0.74 shape=(1, 9000, 1)
logits [[ 5.612026  -3.5247166  3.1504042 -8.196163 ]]
Iteration 100 of 1000: loss=0.886 " + "l1=0.618" + "l2=0.269 f=-0.815 shape=(1, 9000, 1)
logits [[ 4.7476406 -4.0084033  3.624335  -7.622454 ]]
Iteration 200 of 1000: loss=0.673 " + "l1=0.293" + "l2=0.38 f=-0.827 shape=(1, 9000, 1)
logits [[ 4.223905  -4.0574155  3.6918325 -7.1679707]]
Iteration 300 of 1000: loss=0.433 " + "l1=0.0119" + "l2=0.421 f=-0.828 shape=(1, 9000, 1)
logits [[ 3.738055  -4.0568023  3.7164032 -6.711596 ]]
Iteration 400 of 1000: loss=0.313 " + "l1=0.00665" + "l2=0.306 f=-0.818 shape=(1, 9000, 1)
logits [[ 3.6714177 -3.97407    3.659324  -6.6275215]]
Iteration 500 of 1000: loss=0.255 " + "l1=0" + "l2=0.255 f=-0.816 shape=(1, 9000, 1)
logits [[ 3.6000962 -3.8995004  3.6055834 -6.5702724]]
Iteration 600 of 1000: loss=0.21 " + "l1=0" + "l2=0.21 f=-0.818 shape=(1, 9000, 1)
logits [[ 3.5346768 -3.808505   3.5415225 -6.5388007]]
Iteration 700 of 1000: loss=0.181 " + "l1=0" + "l2=0.181 f=-0.812 shape=(1, 9000, 1)
logits [[ 3.4803662 -3.7454588  3.4883626 -6.469417 ]]
Iteration 800 of 1000: loss=0.162 " + "l1=0" + "l2=0.162 f=-0.802 shape=(1, 9000, 1)
logits [[ 3.433411  -3.700076   3.4570942 -6.399785 ]]
Iteration 900 of 1000: loss=0.143 " + "l1=0" + "l2=0.143 f=-0.791 shape=(1, 9000, 1)
logits [[ 3.4133203 -3.6447906  3.4221623 -6.3543954]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.8 " + "l1=0.8" + "l2=0 f=-0.74 shape=(1, 9000, 1)
logits [[ 5.612026  -3.5247166  3.1504042 -8.196163 ]]
Iteration 100 of 1000: loss=0.637 " + "l1=0.546" + "l2=0.0915 f=-0.78 shape=(1, 9000, 1)
logits [[ 5.1602774 -3.8689532  3.4813821 -7.8928494]]
Iteration 200 of 1000: loss=0.576 " + "l1=0.444" + "l2=0.132 f=-0.795 shape=(1, 9000, 1)
logits [[ 4.9491835 -3.9521484  3.5834816 -7.76018  ]]
Iteration 300 of 1000: loss=0.516 " + "l1=0.356" + "l2=0.159 f=-0.802 shape=(1, 9000, 1)
logits [[ 4.7278047 -3.9894085  3.631265  -7.578346 ]]
Iteration 400 of 1000: loss=0.44 " + "l1=0.245" + "l2=0.195 f=-0.801 shape=(1, 9000, 1)
logits [[ 4.4160542 -3.991478   3.6635308 -7.2935553]]
Iteration 500 of 1000: loss=0.358 " + "l1=0.137" + "l2=0.221 f=-0.795 shape=(1, 9000, 1)
logits [[ 4.1008387 -3.9775548  3.6784174 -6.983179 ]]
Iteration 600 of 1000: loss=0.303 " + "l1=0.0646" + "l2=0.238 f=-0.792 shape=(1, 9000, 1)
logits [[ 3.837839  -3.9238994  3.6391265 -6.722554 ]]
Iteration 700 of 1000: loss=0.241 " + "l1=0.00203" + "l2=0.239 f=-0.772 shape=(1, 9000, 1)
logits [[ 3.5957367 -3.836744   3.5894954 -6.4363565]]
Iteration 800 of 1000: loss=0.193 " + "l1=0.000477" + "l2=0.192 f=-0.741 shape=(1, 9000, 1)
logits [[ 3.5602355 -3.743877   3.5587668 -6.340849 ]]
Iteration 900 of 1000: loss=0.157 " + "l1=0.000161" + "l2=0.157 f=-0.717 shape=(1, 9000, 1)
logits [[ 3.5273528 -3.6598673  3.5268588 -6.260541 ]]
--- 272.2910659313202 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.138 " + "l1=0.138" + "l2=0 f=-0.74 shape=(1, 9000, 1)
logits [[ 5.612026  -3.5247166  3.1504042 -8.196163 ]]
Iteration 100 of 1000: loss=0.137 " + "l1=0.137" + "l2=0.000459 f=-0.739 shape=(1, 9000, 1)
logits [[ 5.5600386 -3.505007   3.1212244 -8.130774 ]]
Iteration 200 of 1000: loss=0.137 " + "l1=0.137" + "l2=0.000487 f=-0.738 shape=(1, 9000, 1)
logits [[ 5.5517054 -3.4994917  3.113555  -8.119508 ]]
Iteration 300 of 1000: loss=0.137 " + "l1=0.136" + "l2=0.000622 f=-0.738 shape=(1, 9000, 1)
logits [[ 5.5413237 -3.4936051  3.1051936 -8.105648 ]]
Iteration 400 of 1000: loss=0.137 " + "l1=0.136" + "l2=0.000734 f=-0.738 shape=(1, 9000, 1)
logits [[ 5.531538  -3.4881175  3.0973847 -8.092432 ]]
Iteration 500 of 1000: loss=0.137 " + "l1=0.136" + "l2=0.000858 f=-0.738 shape=(1, 9000, 1)
logits [[ 5.5229783 -3.483447   3.0908706 -8.0807295]]
Iteration 600 of 1000: loss=0.137 " + "l1=0.136" + "l2=0.000994 f=-0.737 shape=(1, 9000, 1)
logits [[ 5.5151467 -3.479485   3.0851674 -8.07011  ]]
Iteration 700 of 1000: loss=0.137 " + "l1=0.136" + "l2=0.00114 f=-0.737 shape=(1, 9000, 1)
logits [[ 5.507873  -3.4761405  3.0801327 -8.060515 ]]
Iteration 800 of 1000: loss=0.137 " + "l1=0.136" + "l2=0.00126 f=-0.737 shape=(1, 9000, 1)
logits [[ 5.501051  -3.4731567  3.0754862 -8.051569 ]]
Iteration 900 of 1000: loss=0.137 " + "l1=0.135" + "l2=0.00142 f=-0.737 shape=(1, 9000, 1)
logits [[ 5.494724  -3.4706874  3.0714004 -8.043279 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.38 " + "l1=1.38" + "l2=0 f=-0.74 shape=(1, 9000, 1)
logits [[ 5.612026  -3.5247166  3.1504042 -8.196163 ]]
Iteration 100 of 1000: loss=1.31 " + "l1=1.28" + "l2=0.037 f=-0.73 shape=(1, 9000, 1)
logits [[ 5.145026  -3.3384142  2.888696  -7.6141357]]
Iteration 200 of 1000: loss=1.28 " + "l1=1.22" + "l2=0.0565 f=-0.717 shape=(1, 9000, 1)
logits [[ 4.925159  -3.2112312  2.7373946 -7.320314 ]]
Iteration 300 of 1000: loss=1.25 " + "l1=1.18" + "l2=0.0761 f=-0.706 shape=(1, 9000, 1)
logits [[ 4.7211914 -3.1025598  2.606911  -7.050323 ]]
Iteration 400 of 1000: loss=1.22 " + "l1=1.13" + "l2=0.0967 f=-0.696 shape=(1, 9000, 1)
logits [[ 4.496278  -2.9944813  2.4970443 -6.7817903]]
Iteration 500 of 1000: loss=1.19 " + "l1=1.07" + "l2=0.121 f=-0.687 shape=(1, 9000, 1)
logits [[ 4.2238045 -2.9023309  2.4023478 -6.4713383]]
Iteration 600 of 1000: loss=1.15 " + "l1=1.01" + "l2=0.141 f=-0.684 shape=(1, 9000, 1)
logits [[ 3.9225392 -2.8229184  2.3141797 -6.149729 ]]
Iteration 700 of 1000: loss=1.1 " + "l1=0.949" + "l2=0.153 f=-0.673 shape=(1, 9000, 1)
logits [[ 3.6498601 -2.7256653  2.2228794 -5.8395796]]
Iteration 800 of 1000: loss=1.05 " + "l1=0.877" + "l2=0.168 f=-0.652 shape=(1, 9000, 1)
logits [[ 3.3270955 -2.6115174  2.121894  -5.446491 ]]
Iteration 900 of 1000: loss=0.987 " + "l1=0.807" + "l2=0.18 f=-0.624 shape=(1, 9000, 1)
logits [[ 3.0285413 -2.523279   2.0445893 -5.0453706]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=13.8 " + "l1=13.8" + "l2=0 f=-0.74 shape=(1, 9000, 1)
logits [[ 5.612026  -3.5247166  3.1504042 -8.196163 ]]
Iteration 100 of 1000: loss=7.15 " + "l1=4.07" + "l2=3.08 f=-0.481 shape=(1, 9000, 1)
logits [[ 1.2114005 -1.483689   1.2056843 -2.8583937]]
Iteration 200 of 1000: loss=4.68 " + "l1=1.29" + "l2=3.39 f=-0.342 shape=(1, 9000, 1)
logits [[ 0.1624386  -0.9262974   0.3428395  -0.94659746]]
Iteration 300 of 1000: loss=3.1 " + "l1=0.0232" + "l2=3.07 f=-0.256 shape=(1, 9000, 1)
logits [[-0.2755421  -0.6796177  -0.02270927 -0.04594814]]
Iteration 400 of 1000: loss=2.38 " + "l1=0" + "l2=2.38 f=-0.213 shape=(1, 9000, 1)
logits [[-0.12507144 -0.76291037  0.01259716  0.02313858]]
Iteration 500 of 1000: loss=2.01 " + "l1=0.0168" + "l2=1.99 f=-0.174 shape=(1, 9000, 1)
logits [[-0.00284648 -0.8126481   0.06853284  0.05170757]]
Iteration 600 of 1000: loss=1.73 " + "l1=0.0283" + "l2=1.71 f=-0.134 shape=(1, 9000, 1)
logits [[ 0.10987417 -0.91869694  0.1508729   0.12259986]]
Iteration 700 of 1000: loss=1.49 " + "l1=0" + "l2=1.49 f=-0.104 shape=(1, 9000, 1)
logits [[ 0.17408818 -0.97368866  0.18282638  0.19969878]]
Iteration 800 of 1000: loss=1.3 " + "l1=0" + "l2=1.3 f=-0.0939 shape=(1, 9000, 1)
logits [[ 0.19348668 -1.0257818   0.21785663  0.23874491]]
Iteration 900 of 1000: loss=1.18 " + "l1=0" + "l2=1.18 f=-0.0845 shape=(1, 9000, 1)
logits [[ 0.19016317 -1.0330918   0.21260037  0.29232395]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.59 " + "l1=7.59" + "l2=0 f=-0.74 shape=(1, 9000, 1)
logits [[ 5.612026  -3.5247166  3.1504042 -8.196163 ]]
Iteration 100 of 1000: loss=5.25 " + "l1=3.91" + "l2=1.34 f=-0.602 shape=(1, 9000, 1)
logits [[ 2.525206  -2.162326   1.8098495 -4.5826516]]
Iteration 200 of 1000: loss=4.02 " + "l1=2.26" + "l2=1.76 f=-0.49 shape=(1, 9000, 1)
logits [[ 1.248141  -1.5925107  1.2453172 -2.8628542]]
Iteration 300 of 1000: loss=3.21 " + "l1=1.45" + "l2=1.76 f=-0.384 shape=(1, 9000, 1)
logits [[ 0.7406214 -1.1315548  0.7429318 -1.8881215]]
Iteration 400 of 1000: loss=2.58 " + "l1=0.85" + "l2=1.73 f=-0.307 shape=(1, 9000, 1)
logits [[ 0.27576753 -0.91661423  0.480125   -1.0659448 ]]
Iteration 500 of 1000: loss=1.91 " + "l1=0.139" + "l2=1.77 f=-0.211 shape=(1, 9000, 1)
logits [[-0.11281564 -0.7232519   0.12124456 -0.13092288]]
Iteration 600 of 1000: loss=1.37 " + "l1=0.00939" + "l2=1.36 f=-0.144 shape=(1, 9000, 1)
logits [[ 0.00458497 -0.76757556  0.10198896  0.08492119]]
Iteration 700 of 1000: loss=1.08 " + "l1=0.0108" + "l2=1.07 f=-0.117 shape=(1, 9000, 1)
logits [[ 0.08676098 -0.7869584   0.12576196  0.10616669]]
Iteration 800 of 1000: loss=0.909 " + "l1=0" + "l2=0.909 f=-0.112 shape=(1, 9000, 1)
logits [[ 0.10521584 -0.81639755  0.12855265  0.13280669]]
Iteration 900 of 1000: loss=0.799 " + "l1=0.00554" + "l2=0.793 f=-0.113 shape=(1, 9000, 1)
logits [[ 0.13133043 -0.8734178   0.14998779  0.13991016]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.49 " + "l1=4.49" + "l2=0 f=-0.74 shape=(1, 9000, 1)
logits [[ 5.612026  -3.5247166  3.1504042 -8.196163 ]]
Iteration 100 of 1000: loss=3.68 " + "l1=3.18" + "l2=0.492 f=-0.669 shape=(1, 9000, 1)
logits [[ 3.794076  -2.7460797  2.2769933 -6.001246 ]]
Iteration 200 of 1000: loss=3.13 " + "l1=2.38" + "l2=0.755 f=-0.609 shape=(1, 9000, 1)
logits [[ 2.6526618 -2.2419364  1.8159465 -4.6611967]]
Iteration 300 of 1000: loss=2.61 " + "l1=1.7" + "l2=0.905 f=-0.513 shape=(1, 9000, 1)
logits [[ 1.7701783 -1.9272119  1.5691026 -3.463248 ]]
Iteration 400 of 1000: loss=2.05 " + "l1=1.13" + "l2=0.914 f=-0.388 shape=(1, 9000, 1)
logits [[ 1.1365474 -1.4791805  1.1398337 -2.3485062]]
Iteration 500 of 1000: loss=1.68 " + "l1=0.829" + "l2=0.85 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.85869884 -1.2662293   0.8714304  -1.6780514 ]]
Iteration 600 of 1000: loss=1.41 " + "l1=0.554" + "l2=0.851 f=-0.232 shape=(1, 9000, 1)
logits [[ 0.5490935 -1.124265   0.6757014 -1.029836 ]]
Iteration 700 of 1000: loss=1.16 " + "l1=0.332" + "l2=0.824 f=-0.178 shape=(1, 9000, 1)
logits [[ 0.2974976  -0.97072667  0.49037683 -0.52971   ]]
Iteration 800 of 1000: loss=0.936 " + "l1=0.147" + "l2=0.789 f=-0.148 shape=(1, 9000, 1)
logits [[ 0.10831837 -0.83380055  0.29230204 -0.15873158]]
Iteration 900 of 1000: loss=0.757 " + "l1=0.0042" + "l2=0.753 f=-0.126 shape=(1, 9000, 1)
logits [[-0.0228469  -0.76393944  0.14784615  0.13491005]]
--- 296.91214776039124 seconds ---
Adv result:3
Loading record A03319
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0554 " + "l1=0.0554" + "l2=0 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.2245324 -2.320288   2.1252263 -5.055952 ]]
Iteration 100 of 1000: loss=0.0545 " + "l1=0.054" + "l2=0.000572 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.1553237 -2.2419677  2.080433  -4.997037 ]]
Iteration 200 of 1000: loss=0.0543 " + "l1=0.0536" + "l2=0.000683 f=-0.5 shape=(1, 9000, 1)
logits [[ 3.138203  -2.2227523  2.0694325 -4.98423  ]]
Iteration 300 of 1000: loss=0.0541 " + "l1=0.0533" + "l2=0.00087 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.1208358 -2.2046442  2.0586386 -4.970808 ]]
Iteration 400 of 1000: loss=0.054 " + "l1=0.053" + "l2=0.00101 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.1058145 -2.1907513  2.050051  -4.9592624]]
Iteration 500 of 1000: loss=0.0539 " + "l1=0.0527" + "l2=0.00117 f=-0.498 shape=(1, 9000, 1)
logits [[ 3.091573  -2.178156   2.0421782 -4.948274 ]]
Iteration 600 of 1000: loss=0.0538 " + "l1=0.0524" + "l2=0.00133 f=-0.498 shape=(1, 9000, 1)
logits [[ 3.0776987 -2.1664445  2.0347934 -4.9376936]]
Iteration 700 of 1000: loss=0.0537 " + "l1=0.0522" + "l2=0.00149 f=-0.498 shape=(1, 9000, 1)
logits [[ 3.0642173 -2.155631   2.028171  -4.927849 ]]
Iteration 800 of 1000: loss=0.0536 " + "l1=0.052" + "l2=0.00162 f=-0.498 shape=(1, 9000, 1)
logits [[ 3.0515437 -2.1460934  2.0223002 -4.9189167]]
Iteration 900 of 1000: loss=0.0535 " + "l1=0.0518" + "l2=0.00174 f=-0.498 shape=(1, 9000, 1)
logits [[ 3.0386786 -2.1367917  2.01674   -4.9102397]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.554 " + "l1=0.554" + "l2=0 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.2245324 -2.320288   2.1252263 -5.055952 ]]
Iteration 100 of 1000: loss=0.472 " + "l1=0.43" + "l2=0.0425 f=-0.469 shape=(1, 9000, 1)
logits [[ 2.6333206 -1.6658342  1.7612296 -4.603818 ]]
Iteration 200 of 1000: loss=0.438 " + "l1=0.373" + "l2=0.0653 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.3200853 -1.4065906  1.672418  -4.421977 ]]
Iteration 300 of 1000: loss=0.409 " + "l1=0.335" + "l2=0.0743 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.0925763 -1.2562032  1.5737203 -4.2530246]]
Iteration 400 of 1000: loss=0.386 " + "l1=0.303" + "l2=0.0833 f=-0.466 shape=(1, 9000, 1)
logits [[ 1.8939948 -1.131801   1.4647089 -4.089286 ]]
Iteration 500 of 1000: loss=0.364 " + "l1=0.27" + "l2=0.0942 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.695111  -1.0025055  1.3468394 -3.9207444]]
Iteration 600 of 1000: loss=0.342 " + "l1=0.237" + "l2=0.105 f=-0.476 shape=(1, 9000, 1)
logits [[ 1.4954128 -0.8749466  1.2125268 -3.7361631]]
Iteration 700 of 1000: loss=0.321 " + "l1=0.204" + "l2=0.117 f=-0.485 shape=(1, 9000, 1)
logits [[ 1.2872696 -0.7522175  1.0865233 -3.5614693]]
Iteration 800 of 1000: loss=0.298 " + "l1=0.167" + "l2=0.131 f=-0.49 shape=(1, 9000, 1)
logits [[ 1.0624037  -0.61095846  0.94294524 -3.356377  ]]
Iteration 900 of 1000: loss=0.277 " + "l1=0.135" + "l2=0.142 f=-0.495 shape=(1, 9000, 1)
logits [[ 0.8662373 -0.4863082  0.8397831 -3.1979625]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.54 " + "l1=5.54" + "l2=0 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.2245324 -2.320288   2.1252263 -5.055952 ]]
Iteration 100 of 1000: loss=1.01 " + "l1=0" + "l2=1.01 f=-0.513 shape=(1, 9000, 1)
logits [[ 0.25194064  0.3289259   0.32289743 -2.953992  ]]
Iteration 200 of 1000: loss=0.583 " + "l1=0" + "l2=0.583 f=-0.536 shape=(1, 9000, 1)
logits [[ 0.32075515  0.36175388  0.3495929  -3.1773055 ]]
Iteration 300 of 1000: loss=0.469 " + "l1=0" + "l2=0.469 f=-0.538 shape=(1, 9000, 1)
logits [[ 0.32559565  0.3646388   0.34304336 -3.185329  ]]
Iteration 400 of 1000: loss=0.393 " + "l1=0.00451" + "l2=0.388 f=-0.534 shape=(1, 9000, 1)
logits [[ 0.33530208  0.34697717  0.35148707 -3.1684759 ]]
Iteration 500 of 1000: loss=0.344 " + "l1=0" + "l2=0.344 f=-0.53 shape=(1, 9000, 1)
logits [[ 0.32164937  0.36192188  0.32550463 -3.1281228 ]]
Iteration 600 of 1000: loss=0.316 " + "l1=0" + "l2=0.316 f=-0.535 shape=(1, 9000, 1)
logits [[ 0.24942377  0.377027    0.3170476  -3.0831356 ]]
Iteration 700 of 1000: loss=0.289 " + "l1=0" + "l2=0.289 f=-0.53 shape=(1, 9000, 1)
logits [[ 0.2612937   0.36137295  0.3136489  -3.0572546 ]]
Iteration 800 of 1000: loss=0.267 " + "l1=0" + "l2=0.267 f=-0.522 shape=(1, 9000, 1)
logits [[ 0.3127176   0.33510914  0.30523214 -3.0390856 ]]
Iteration 900 of 1000: loss=0.259 " + "l1=0" + "l2=0.259 f=-0.53 shape=(1, 9000, 1)
logits [[ 0.23967823  0.35010153  0.3031766  -3.0123894 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.05 " + "l1=3.05" + "l2=0 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.2245324 -2.320288   2.1252263 -5.055952 ]]
Iteration 100 of 1000: loss=1.05 " + "l1=0.295" + "l2=0.751 f=-0.488 shape=(1, 9000, 1)
logits [[ 0.57219684  0.05419749  0.59099287 -3.1711736 ]]
Iteration 200 of 1000: loss=0.503 " + "l1=0.0137" + "l2=0.489 f=-0.533 shape=(1, 9000, 1)
logits [[ 0.3635754   0.33865955  0.3577283  -3.1934268 ]]
Iteration 300 of 1000: loss=0.396 " + "l1=0" + "l2=0.396 f=-0.539 shape=(1, 9000, 1)
logits [[ 0.30584708  0.34754813  0.33736485 -3.1466417 ]]
Iteration 400 of 1000: loss=0.341 " + "l1=5.33e-05" + "l2=0.341 f=-0.533 shape=(1, 9000, 1)
logits [[ 0.28523615  0.32566333  0.3257602  -3.068183  ]]
Iteration 500 of 1000: loss=0.311 " + "l1=0" + "l2=0.311 f=-0.525 shape=(1, 9000, 1)
logits [[ 0.28516725  0.3186381   0.29973426 -3.0021    ]]
Iteration 600 of 1000: loss=0.293 " + "l1=0.00991" + "l2=0.283 f=-0.514 shape=(1, 9000, 1)
logits [[ 0.30646452  0.28844848  0.28917822 -2.9387023 ]]
Iteration 700 of 1000: loss=0.273 " + "l1=0" + "l2=0.273 f=-0.511 shape=(1, 9000, 1)
logits [[ 0.25008062  0.2984943   0.27191383 -2.8653643 ]]
Iteration 800 of 1000: loss=0.26 " + "l1=0.00453" + "l2=0.255 f=-0.507 shape=(1, 9000, 1)
logits [[ 0.25069484  0.27201617  0.28025568 -2.8297176 ]]
Iteration 900 of 1000: loss=0.253 " + "l1=0.00757" + "l2=0.246 f=-0.497 shape=(1, 9000, 1)
logits [[ 0.27468657  0.26092336  0.26371783 -2.789113  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.8 " + "l1=1.8" + "l2=0 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.2245324 -2.320288   2.1252263 -5.055952 ]]
Iteration 100 of 1000: loss=0.978 " + "l1=0.569" + "l2=0.409 f=-0.458 shape=(1, 9000, 1)
logits [[ 1.2018293  -0.54954594  1.1613166  -3.6452167 ]]
Iteration 200 of 1000: loss=0.651 " + "l1=0.19" + "l2=0.461 f=-0.487 shape=(1, 9000, 1)
logits [[ 0.56138396 -0.01134698  0.57182324 -3.0696754 ]]
Iteration 300 of 1000: loss=0.39 " + "l1=0" + "l2=0.39 f=-0.53 shape=(1, 9000, 1)
logits [[ 0.30489078  0.3304847   0.32398608 -3.0787127 ]]
Iteration 400 of 1000: loss=0.325 " + "l1=0.00313" + "l2=0.322 f=-0.523 shape=(1, 9000, 1)
logits [[ 0.31419232  0.30456007  0.31389353 -3.0263913 ]]
Iteration 500 of 1000: loss=0.293 " + "l1=0.00025" + "l2=0.293 f=-0.521 shape=(1, 9000, 1)
logits [[ 0.2816851  0.2951415  0.2959095 -2.9574807]]
Iteration 600 of 1000: loss=0.272 " + "l1=0" + "l2=0.272 f=-0.515 shape=(1, 9000, 1)
logits [[ 0.25867465  0.2856713   0.27635795 -2.879827  ]]
Iteration 700 of 1000: loss=0.258 " + "l1=0.00411" + "l2=0.254 f=-0.51 shape=(1, 9000, 1)
logits [[ 0.2648361   0.26410466  0.2767414  -2.8443437 ]]
Iteration 800 of 1000: loss=0.246 " + "l1=0" + "l2=0.246 f=-0.504 shape=(1, 9000, 1)
logits [[ 0.2507131   0.26646677  0.25871542 -2.7923708 ]]
Iteration 900 of 1000: loss=0.239 " + "l1=0" + "l2=0.239 f=-0.501 shape=(1, 9000, 1)
logits [[ 0.2329418   0.25922874  0.24805288 -2.742328  ]]
--- 303.9624321460724 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.011 " + "l1=0.011" + "l2=0 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.2245324 -2.320288   2.1252263 -5.055952 ]]
Iteration 100 of 1000: loss=0.0107 " + "l1=0.0105" + "l2=0.000206 f=-0.508 shape=(1, 9000, 1)
logits [[ 3.1896577 -2.3234549  2.1356933 -5.0355287]]
Iteration 200 of 1000: loss=0.0107 " + "l1=0.0105" + "l2=0.000198 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.186663  -2.3256528  2.1382444 -5.0344477]]
Iteration 300 of 1000: loss=0.0107 " + "l1=0.0104" + "l2=0.000241 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.181613  -2.3269732  2.1401548 -5.031257 ]]
Iteration 400 of 1000: loss=0.0107 " + "l1=0.0103" + "l2=0.000306 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.1763945 -2.3279033  2.1415088 -5.027542 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.11 " + "l1=0.11" + "l2=0 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.2245324 -2.320288   2.1252263 -5.055952 ]]
Iteration 100 of 1000: loss=0.0879 " + "l1=0.076" + "l2=0.0119 f=-0.519 shape=(1, 9000, 1)
logits [[ 2.9665067 -2.331514   2.2067761 -4.915919 ]]
Iteration 200 of 1000: loss=0.0781 " + "l1=0.0607" + "l2=0.0175 f=-0.528 shape=(1, 9000, 1)
logits [[ 2.8622627 -2.358453   2.255535  -4.8693724]]
Iteration 300 of 1000: loss=0.0703 " + "l1=0.0485" + "l2=0.0218 f=-0.534 shape=(1, 9000, 1)
logits [[ 2.7731254 -2.3747606  2.2876515 -4.821336 ]]
Iteration 400 of 1000: loss=0.0635 " + "l1=0.0372" + "l2=0.0263 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.680073  -2.356793   2.3081193 -4.774024 ]]
Iteration 500 of 1000: loss=0.0532 " + "l1=0.0163" + "l2=0.037 f=-0.534 shape=(1, 9000, 1)
logits [[ 2.5135026 -2.2987764  2.3506775 -4.7021484]]
Iteration 600 of 1000: loss=0.0407 " + "l1=0.000142" + "l2=0.0405 f=-0.541 shape=(1, 9000, 1)
logits [[ 2.384376  -2.2725177  2.382956  -4.660804 ]]
Iteration 700 of 1000: loss=0.0363 " + "l1=0.000427" + "l2=0.0359 f=-0.541 shape=(1, 9000, 1)
logits [[ 2.3714004 -2.26128    2.3671324 -4.642382 ]]
Iteration 800 of 1000: loss=0.0334 " + "l1=5.6e-05" + "l2=0.0334 f=-0.541 shape=(1, 9000, 1)
logits [[ 2.3604283 -2.2518916  2.3598685 -4.6335826]]
Iteration 900 of 1000: loss=0.0314 " + "l1=0.000417" + "l2=0.031 f=-0.541 shape=(1, 9000, 1)
logits [[ 2.3556437 -2.2479172  2.3514767 -4.6230307]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0605 " + "l1=0.0605" + "l2=0 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.2245324 -2.320288   2.1252263 -5.055952 ]]
Iteration 100 of 1000: loss=0.0538 " + "l1=0.0501" + "l2=0.00368 f=-0.513 shape=(1, 9000, 1)
logits [[ 3.079805  -2.3279417  2.1690326 -4.9731975]]
Iteration 200 of 1000: loss=0.0514 " + "l1=0.0465" + "l2=0.00493 f=-0.517 shape=(1, 9000, 1)
logits [[ 3.0351267 -2.340962   2.1899467 -4.9534445]]
Iteration 300 of 1000: loss=0.0492 " + "l1=0.0429" + "l2=0.00628 f=-0.521 shape=(1, 9000, 1)
logits [[ 2.9903069 -2.3523264  2.2096555 -4.933355 ]]
Iteration 400 of 1000: loss=0.0474 " + "l1=0.0399" + "l2=0.00754 f=-0.524 shape=(1, 9000, 1)
logits [[ 2.9468193 -2.3554788  2.2219326 -4.9109325]]
Iteration 500 of 1000: loss=0.0458 " + "l1=0.0373" + "l2=0.00859 f=-0.526 shape=(1, 9000, 1)
logits [[ 2.9053981 -2.3525193  2.2280798 -4.883839 ]]
Iteration 600 of 1000: loss=0.0443 " + "l1=0.035" + "l2=0.00929 f=-0.527 shape=(1, 9000, 1)
logits [[ 2.8685293 -2.3501432  2.2319317 -4.85874  ]]
Iteration 700 of 1000: loss=0.0427 " + "l1=0.0323" + "l2=0.0103 f=-0.529 shape=(1, 9000, 1)
logits [[ 2.8290727 -2.3521736  2.2415345 -4.8328156]]
Iteration 800 of 1000: loss=0.0413 " + "l1=0.0301" + "l2=0.0111 f=-0.529 shape=(1, 9000, 1)
logits [[ 2.793701  -2.346224   2.2457922 -4.810139 ]]
Iteration 900 of 1000: loss=0.0395 " + "l1=0.0275" + "l2=0.0121 f=-0.53 shape=(1, 9000, 1)
logits [[ 2.7487347 -2.33719    2.2495105 -4.78112  ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0852 " + "l1=0.0852" + "l2=0 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.2245324 -2.320288   2.1252263 -5.055952 ]]
Iteration 100 of 1000: loss=0.0721 " + "l1=0.0651" + "l2=0.00697 f=-0.516 shape=(1, 9000, 1)
logits [[ 3.0274825 -2.3324933  2.1872635 -4.946577 ]]
Iteration 200 of 1000: loss=0.0667 " + "l1=0.0566" + "l2=0.01 f=-0.522 shape=(1, 9000, 1)
logits [[ 2.9511273 -2.3440552  2.2204773 -4.9137425]]
Iteration 300 of 1000: loss=0.0624 " + "l1=0.0503" + "l2=0.0121 f=-0.526 shape=(1, 9000, 1)
logits [[ 2.8925877 -2.3548787  2.243636  -4.885044 ]]
Iteration 400 of 1000: loss=0.0585 " + "l1=0.0437" + "l2=0.0148 f=-0.529 shape=(1, 9000, 1)
logits [[ 2.8312404 -2.3667006  2.2670841 -4.849493 ]]
Iteration 500 of 1000: loss=0.0545 " + "l1=0.0371" + "l2=0.0174 f=-0.533 shape=(1, 9000, 1)
logits [[ 2.755729  -2.3598394  2.2771354 -4.806449 ]]
Iteration 600 of 1000: loss=0.0505 " + "l1=0.0304" + "l2=0.0201 f=-0.533 shape=(1, 9000, 1)
logits [[ 2.683788  -2.3449593  2.2921014 -4.7631965]]
Iteration 700 of 1000: loss=0.0462 " + "l1=0.0237" + "l2=0.0226 f=-0.534 shape=(1, 9000, 1)
logits [[ 2.6075914 -2.3278375  2.3023279 -4.719292 ]]
Iteration 800 of 1000: loss=0.0392 " + "l1=0.00807" + "l2=0.0311 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.4517794 -2.2748764  2.3476999 -4.668814 ]]
Iteration 900 of 1000: loss=0.035 " + "l1=0.00233" + "l2=0.0326 f=-0.54 shape=(1, 9000, 1)
logits [[ 2.3881361 -2.2701674  2.358035  -4.637813 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0728 " + "l1=0.0728" + "l2=0 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.2245324 -2.320288   2.1252263 -5.055952 ]]
Iteration 100 of 1000: loss=0.0632 " + "l1=0.0579" + "l2=0.00524 f=-0.515 shape=(1, 9000, 1)
logits [[ 3.053665  -2.3319252  2.1793184 -4.960116 ]]
Iteration 200 of 1000: loss=0.0595 " + "l1=0.0523" + "l2=0.00713 f=-0.52 shape=(1, 9000, 1)
logits [[ 2.9964871 -2.3473833  2.2064257 -4.934731 ]]
Iteration 300 of 1000: loss=0.0562 " + "l1=0.047" + "l2=0.0092 f=-0.524 shape=(1, 9000, 1)
logits [[ 2.9367223 -2.3525429  2.227289  -4.906172 ]]
Iteration 400 of 1000: loss=0.0536 " + "l1=0.0428" + "l2=0.0108 f=-0.526 shape=(1, 9000, 1)
logits [[ 2.8865526 -2.3563726  2.2411196 -4.876131 ]]
Iteration 500 of 1000: loss=0.051 " + "l1=0.0385" + "l2=0.0125 f=-0.529 shape=(1, 9000, 1)
logits [[ 2.8356385 -2.3595366  2.2537665 -4.844555 ]]
Iteration 600 of 1000: loss=0.0486 " + "l1=0.0349" + "l2=0.0137 f=-0.53 shape=(1, 9000, 1)
logits [[ 2.7884111 -2.355413   2.2616332 -4.816176 ]]
Iteration 700 of 1000: loss=0.0458 " + "l1=0.0302" + "l2=0.0156 f=-0.532 shape=(1, 9000, 1)
logits [[ 2.7254264 -2.345825   2.2693243 -4.7767057]]
Iteration 800 of 1000: loss=0.043 " + "l1=0.0257" + "l2=0.0173 f=-0.533 shape=(1, 9000, 1)
logits [[ 2.6659546 -2.3344371  2.2783523 -4.7414927]]
Iteration 900 of 1000: loss=0.0404 " + "l1=0.0213" + "l2=0.0191 f=-0.534 shape=(1, 9000, 1)
logits [[ 2.606694  -2.322954   2.2849467 -4.7058077]]
--- 267.6783766746521 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0828 " + "l1=0.0828" + "l2=0 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.2245324 -2.320288   2.1252263 -5.055952 ]]
Iteration 100 of 1000: loss=0.0818 " + "l1=0.0811" + "l2=0.000635 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.1466804 -2.273939   2.091212  -4.9672728]]
Iteration 200 of 1000: loss=0.0815 " + "l1=0.0807" + "l2=0.000736 f=-0.5 shape=(1, 9000, 1)
logits [[ 3.1264865 -2.2618716  2.0822296 -4.9455633]]
Iteration 300 of 1000: loss=0.0812 " + "l1=0.0803" + "l2=0.000907 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.1058297 -2.2512975  2.073443  -4.922144 ]]
Iteration 400 of 1000: loss=0.0809 " + "l1=0.0799" + "l2=0.00107 f=-0.498 shape=(1, 9000, 1)
logits [[ 3.0864782 -2.2424803  2.0653467 -4.899957 ]]
Iteration 500 of 1000: loss=0.0807 " + "l1=0.0795" + "l2=0.00129 f=-0.497 shape=(1, 9000, 1)
logits [[ 3.0676951 -2.2349627  2.0576482 -4.878562 ]]
Iteration 600 of 1000: loss=0.0806 " + "l1=0.0791" + "l2=0.00147 f=-0.497 shape=(1, 9000, 1)
logits [[ 3.0501363 -2.2286568  2.0505087 -4.8586564]]
Iteration 700 of 1000: loss=0.0804 " + "l1=0.0787" + "l2=0.00167 f=-0.496 shape=(1, 9000, 1)
logits [[ 3.0334344 -2.2223015  2.0436363 -4.8405623]]
Iteration 800 of 1000: loss=0.0803 " + "l1=0.0784" + "l2=0.00188 f=-0.496 shape=(1, 9000, 1)
logits [[ 3.0170958 -2.2169716  2.0375342 -4.8233843]]
Iteration 900 of 1000: loss=0.0801 " + "l1=0.0781" + "l2=0.00199 f=-0.497 shape=(1, 9000, 1)
logits [[ 3.0022683 -2.2131085  2.0322301 -4.8080683]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.828 " + "l1=0.828" + "l2=0 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.2245324 -2.320288   2.1252263 -5.055952 ]]
Iteration 100 of 1000: loss=0.737 " + "l1=0.693" + "l2=0.0442 f=-0.465 shape=(1, 9000, 1)
logits [[ 2.579272  -1.9386582  1.8444906 -4.346063 ]]
Iteration 200 of 1000: loss=0.695 " + "l1=0.631" + "l2=0.0636 f=-0.452 shape=(1, 9000, 1)
logits [[ 2.283701  -1.7689167  1.7016933 -4.0256476]]
Iteration 300 of 1000: loss=0.651 " + "l1=0.564" + "l2=0.0873 f=-0.442 shape=(1, 9000, 1)
logits [[ 1.9310794 -1.5836582  1.5935388 -3.709645 ]]
Iteration 400 of 1000: loss=0.605 " + "l1=0.495" + "l2=0.111 f=-0.442 shape=(1, 9000, 1)
logits [[ 1.5735905 -1.4227649  1.4537678 -3.371742 ]]
Iteration 500 of 1000: loss=0.563 " + "l1=0.437" + "l2=0.126 f=-0.442 shape=(1, 9000, 1)
logits [[ 1.3085048 -1.2887943  1.2755994 -3.0623477]]
Iteration 600 of 1000: loss=0.53 " + "l1=0.396" + "l2=0.134 f=-0.438 shape=(1, 9000, 1)
logits [[ 1.1302506 -1.1759651  1.119425  -2.8276927]]
Iteration 700 of 1000: loss=0.507 " + "l1=0.368" + "l2=0.139 f=-0.436 shape=(1, 9000, 1)
logits [[ 1.0118109 -1.1034708  1.0133795 -2.6639688]]
Iteration 800 of 1000: loss=0.491 " + "l1=0.348" + "l2=0.142 f=-0.429 shape=(1, 9000, 1)
logits [[ 0.9417821 -1.0527413  0.9345197 -2.5403018]]
Iteration 900 of 1000: loss=0.476 " + "l1=0.327" + "l2=0.149 f=-0.421 shape=(1, 9000, 1)
logits [[ 0.86339206 -0.9974498   0.85857886 -2.4083118 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.28 " + "l1=8.28" + "l2=0 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.2245324 -2.320288   2.1252263 -5.055952 ]]
Iteration 100 of 1000: loss=2.55 " + "l1=0.794" + "l2=1.75 f=-0.333 shape=(1, 9000, 1)
logits [[-0.27815396 -0.3699011   0.05532692 -0.73859626]]
Iteration 200 of 1000: loss=1.34 " + "l1=0" + "l2=1.34 f=-0.264 shape=(1, 9000, 1)
logits [[-0.37855023 -0.27039248 -0.20754336 -0.20018834]]
Iteration 300 of 1000: loss=1.04 " + "l1=0" + "l2=1.04 f=-0.25 shape=(1, 9000, 1)
logits [[-0.2887078  -0.28897244 -0.21385475 -0.20934719]]
Iteration 400 of 1000: loss=0.895 " + "l1=0.00285" + "l2=0.892 f=-0.245 shape=(1, 9000, 1)
logits [[-0.26740646 -0.2355028  -0.23929618 -0.23835036]]
Iteration 500 of 1000: loss=0.801 " + "l1=0" + "l2=0.801 f=-0.239 shape=(1, 9000, 1)
logits [[-0.26598752 -0.23960154 -0.23437883 -0.21525764]]
Iteration 600 of 1000: loss=0.725 " + "l1=0.00384" + "l2=0.721 f=-0.237 shape=(1, 9000, 1)
logits [[-0.29421696 -0.21679038 -0.21615963 -0.22000274]]
Iteration 700 of 1000: loss=0.67 " + "l1=0" + "l2=0.67 f=-0.223 shape=(1, 9000, 1)
logits [[-0.25970647 -0.23547837 -0.20103668 -0.19450703]]
Iteration 800 of 1000: loss=0.626 " + "l1=0" + "l2=0.626 f=-0.208 shape=(1, 9000, 1)
logits [[-0.25039583 -0.24706541 -0.17396277 -0.16003564]]
Iteration 900 of 1000: loss=0.575 " + "l1=0" + "l2=0.575 f=-0.193 shape=(1, 9000, 1)
logits [[-0.26183814 -0.17924953 -0.17395255 -0.15859017]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.55 " + "l1=4.55" + "l2=0 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.2245324 -2.320288   2.1252263 -5.055952 ]]
Iteration 100 of 1000: loss=2.19 " + "l1=1.28" + "l2=0.909 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.506546  -0.7020183  0.5301663 -1.795294 ]]
Iteration 200 of 1000: loss=1.41 " + "l1=0.487" + "l2=0.925 f=-0.321 shape=(1, 9000, 1)
logits [[-0.04871242 -0.37654603  0.01397998 -0.87131345]]
Iteration 300 of 1000: loss=0.994 " + "l1=0.088" + "l2=0.906 f=-0.258 shape=(1, 9000, 1)
logits [[-0.25325373 -0.23491256 -0.19118698 -0.3512619 ]]
Iteration 400 of 1000: loss=0.767 " + "l1=0.000968" + "l2=0.766 f=-0.233 shape=(1, 9000, 1)
logits [[-0.24912499 -0.25108024 -0.21509568 -0.21685496]]
Iteration 500 of 1000: loss=0.671 " + "l1=0.00784" + "l2=0.663 f=-0.214 shape=(1, 9000, 1)
logits [[-0.23541552 -0.21512689 -0.19621882 -0.21046641]]
Iteration 600 of 1000: loss=0.604 " + "l1=0.00521" + "l2=0.599 f=-0.191 shape=(1, 9000, 1)
logits [[-0.20361942 -0.26144317 -0.14496157 -0.15443951]]
Iteration 700 of 1000: loss=0.557 " + "l1=0.000625" + "l2=0.556 f=-0.175 shape=(1, 9000, 1)
logits [[-0.14434822 -0.2795296  -0.13809599 -0.13923281]]
Iteration 800 of 1000: loss=0.522 " + "l1=0.0054" + "l2=0.517 f=-0.162 shape=(1, 9000, 1)
logits [[-0.1241249  -0.3017399  -0.10644466 -0.1162666 ]]
Iteration 900 of 1000: loss=0.489 " + "l1=0" + "l2=0.489 f=-0.155 shape=(1, 9000, 1)
logits [[-0.1309401  -0.33327937 -0.08041127 -0.07579512]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.69 " + "l1=2.69" + "l2=0 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.2245324 -2.320288   2.1252263 -5.055952 ]]
Iteration 100 of 1000: loss=1.73 " + "l1=1.27" + "l2=0.459 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.1167805 -1.0315542  1.0957689 -2.7820868]]
Iteration 200 of 1000: loss=1.26 " + "l1=0.729" + "l2=0.529 f=-0.371 shape=(1, 9000, 1)
logits [[ 0.48855135 -0.7145833   0.49255392 -1.7493098 ]]
Iteration 300 of 1000: loss=1.01 " + "l1=0.481" + "l2=0.532 f=-0.343 shape=(1, 9000, 1)
logits [[ 0.20820047 -0.51409596  0.2063524  -1.2731651 ]]
Iteration 400 of 1000: loss=0.845 " + "l1=0.287" + "l2=0.558 f=-0.306 shape=(1, 9000, 1)
logits [[ 0.01467465 -0.41040146  0.0279328  -0.855899  ]]
Iteration 500 of 1000: loss=0.709 " + "l1=0.153" + "l2=0.556 f=-0.259 shape=(1, 9000, 1)
logits [[-0.07781307 -0.3364001  -0.07549135 -0.54522234]]
Iteration 600 of 1000: loss=0.628 " + "l1=0.0651" + "l2=0.563 f=-0.226 shape=(1, 9000, 1)
logits [[-0.13725771 -0.32111883 -0.12204497 -0.32248244]]
Iteration 700 of 1000: loss=0.555 " + "l1=0.000397" + "l2=0.555 f=-0.19 shape=(1, 9000, 1)
logits [[-0.18281123 -0.3492582  -0.11364976 -0.1148724 ]]
Iteration 800 of 1000: loss=0.507 " + "l1=0.00257" + "l2=0.504 f=-0.179 shape=(1, 9000, 1)
logits [[-0.16487685 -0.3814664  -0.08058069 -0.0884733 ]]
Iteration 900 of 1000: loss=0.466 " + "l1=0.00112" + "l2=0.465 f=-0.168 shape=(1, 9000, 1)
logits [[-0.13863808 -0.4017057  -0.064517   -0.06797246]]
--- 305.2448673248291 seconds ---
Adv result:3
Loading record A03382
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0784 " + "l1=0.0784" + "l2=0 f=-0.634 shape=(1, 9000, 1)
logits [[ 5.0902333 -2.7533722  2.8660839 -7.7390537]]
Iteration 100 of 1000: loss=0.0782 " + "l1=0.078" + "l2=0.000208 f=-0.632 shape=(1, 9000, 1)
logits [[ 5.0603733 -2.7404718  2.857361  -7.706365 ]]
Iteration 200 of 1000: loss=0.0782 " + "l1=0.078" + "l2=0.000178 f=-0.632 shape=(1, 9000, 1)
logits [[ 5.058858  -2.7391636  2.856507  -7.704511 ]]
Iteration 300 of 1000: loss=0.0782 " + "l1=0.0779" + "l2=0.000236 f=-0.632 shape=(1, 9000, 1)
logits [[ 5.0552306 -2.7370605  2.8553417 -7.700591 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.784 " + "l1=0.784" + "l2=0 f=-0.634 shape=(1, 9000, 1)
logits [[ 5.0902333 -2.7533722  2.8660839 -7.7390537]]
Iteration 100 of 1000: loss=0.764 " + "l1=0.751" + "l2=0.0127 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.8587236 -2.6544776  2.7952366 -7.4847035]]
Iteration 200 of 1000: loss=0.757 " + "l1=0.739" + "l2=0.0183 f=-0.615 shape=(1, 9000, 1)
logits [[ 4.7739797 -2.6124125  2.768421  -7.390086 ]]
Iteration 300 of 1000: loss=0.751 " + "l1=0.728" + "l2=0.0225 f=-0.611 shape=(1, 9000, 1)
logits [[ 4.707354  -2.576569   2.7484941 -7.3221617]]
Iteration 400 of 1000: loss=0.745 " + "l1=0.719" + "l2=0.0258 f=-0.607 shape=(1, 9000, 1)
logits [[ 4.650512  -2.5437703  2.726926  -7.259697 ]]
Iteration 500 of 1000: loss=0.74 " + "l1=0.711" + "l2=0.0286 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.6014333 -2.5134728  2.7077055 -7.2042603]]
Iteration 600 of 1000: loss=0.735 " + "l1=0.704" + "l2=0.0308 f=-0.598 shape=(1, 9000, 1)
logits [[ 4.5574923 -2.4865205  2.6901999 -7.155074 ]]
Iteration 700 of 1000: loss=0.73 " + "l1=0.697" + "l2=0.033 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.511596  -2.4586542  2.6717422 -7.102838 ]]
Iteration 800 of 1000: loss=0.724 " + "l1=0.689" + "l2=0.0356 f=-0.59 shape=(1, 9000, 1)
logits [[ 4.4609547 -2.4277246  2.650842  -7.045295 ]]
Iteration 900 of 1000: loss=0.719 " + "l1=0.681" + "l2=0.0376 f=-0.587 shape=(1, 9000, 1)
logits [[ 4.415047  -2.3989325  2.6288528 -6.992616 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.84 " + "l1=7.84" + "l2=0 f=-0.634 shape=(1, 9000, 1)
logits [[ 5.0902333 -2.7533722  2.8660839 -7.7390537]]
Iteration 100 of 1000: loss=5.5 " + "l1=4.09" + "l2=1.41 f=-0.453 shape=(1, 9000, 1)
logits [[ 2.4619129 -1.6316589  1.9586701 -4.6028748]]
Iteration 200 of 1000: loss=4.69 " + "l1=2.96" + "l2=1.73 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.679233  -1.2795705  1.6558912 -3.71085  ]]
Iteration 300 of 1000: loss=4.27 " + "l1=2.5" + "l2=1.77 f=-0.403 shape=(1, 9000, 1)
logits [[ 1.4368058 -1.0632232  1.4394044 -3.424699 ]]
Iteration 400 of 1000: loss=4.01 " + "l1=2.25" + "l2=1.76 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.309194  -0.9430449  1.2951733 -3.161431 ]]
Iteration 500 of 1000: loss=3.81 " + "l1=2.07" + "l2=1.74 f=-0.363 shape=(1, 9000, 1)
logits [[ 1.2172232  -0.85214424  1.2165623  -3.0320642 ]]
Iteration 600 of 1000: loss=3.57 " + "l1=1.77" + "l2=1.79 f=-0.344 shape=(1, 9000, 1)
logits [[ 1.0629755 -0.7066348  1.0678318 -2.799409 ]]
Iteration 700 of 1000: loss=3.39 " + "l1=1.62" + "l2=1.77 f=-0.336 shape=(1, 9000, 1)
logits [[ 0.9861647 -0.6334169  0.9878888 -2.68388  ]]
Iteration 800 of 1000: loss=3.29 " + "l1=1.52" + "l2=1.76 f=-0.321 shape=(1, 9000, 1)
logits [[ 0.93302345 -0.58458966  0.9379327  -2.5709913 ]]
Iteration 900 of 1000: loss=3.19 " + "l1=1.42" + "l2=1.76 f=-0.306 shape=(1, 9000, 1)
logits [[ 0.889832  -0.533961   0.8832609 -2.4612203]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=78.4 " + "l1=78.4" + "l2=0 f=-0.634 shape=(1, 9000, 1)
logits [[ 5.0902333 -2.7533722  2.8660839 -7.7390537]]
Iteration 100 of 1000: loss=12.8 " + "l1=0.0651" + "l2=12.7 f=-0.32 shape=(1, 9000, 1)
logits [[ 0.28043297  0.27392286  0.24272522 -2.0787416 ]]
Iteration 200 of 1000: loss=8.39 " + "l1=0" + "l2=8.39 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.24347758  0.29050633  0.27352342 -2.2691827 ]]
Iteration 300 of 1000: loss=7.27 " + "l1=0" + "l2=7.27 f=-0.37 shape=(1, 9000, 1)
logits [[ 0.23251492  0.28510222  0.2686032  -2.2648165 ]]
Iteration 400 of 1000: loss=6.62 " + "l1=0" + "l2=6.62 f=-0.369 shape=(1, 9000, 1)
logits [[ 0.25158554  0.2804177   0.26508728 -2.2720313 ]]
Iteration 500 of 1000: loss=6.21 " + "l1=0" + "l2=6.21 f=-0.367 shape=(1, 9000, 1)
logits [[ 0.26063207  0.27996933  0.26040813 -2.2705514 ]]
Iteration 600 of 1000: loss=5.86 " + "l1=0" + "l2=5.86 f=-0.363 shape=(1, 9000, 1)
logits [[ 0.24143091  0.26890388  0.26267323 -2.22543   ]]
Iteration 700 of 1000: loss=5.65 " + "l1=0" + "l2=5.65 f=-0.36 shape=(1, 9000, 1)
logits [[ 0.20271966  0.27488053  0.25630316 -2.1724534 ]]
Iteration 800 of 1000: loss=5.48 " + "l1=0" + "l2=5.48 f=-0.353 shape=(1, 9000, 1)
logits [[ 0.17016226  0.2865662   0.24353369 -2.1133122 ]]
Iteration 900 of 1000: loss=5.23 " + "l1=0.0867" + "l2=5.14 f=-0.346 shape=(1, 9000, 1)
logits [[ 0.2644727   0.25580737  0.2636885  -2.1666467 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=43.1 " + "l1=43.1" + "l2=0 f=-0.634 shape=(1, 9000, 1)
logits [[ 5.0902333 -2.7533722  2.8660839 -7.7390537]]
Iteration 100 of 1000: loss=11.9 " + "l1=3.45" + "l2=8.49 f=-0.355 shape=(1, 9000, 1)
logits [[ 0.5546923  -0.07105792  0.55687505 -2.4598897 ]]
Iteration 200 of 1000: loss=7.28 " + "l1=0.106" + "l2=7.17 f=-0.366 shape=(1, 9000, 1)
logits [[ 0.28892988  0.26963168  0.27170095 -2.2961519 ]]
Iteration 300 of 1000: loss=6.24 " + "l1=0" + "l2=6.24 f=-0.375 shape=(1, 9000, 1)
logits [[ 0.23061964  0.26618987  0.25096235 -2.2475812 ]]
Iteration 400 of 1000: loss=5.7 " + "l1=0.0624" + "l2=5.64 f=-0.374 shape=(1, 9000, 1)
logits [[ 0.25286722  0.26654977  0.27788636 -2.2913806 ]]
Iteration 500 of 1000: loss=5.29 " + "l1=0" + "l2=5.29 f=-0.37 shape=(1, 9000, 1)
logits [[ 0.2347953   0.27452862  0.27077746 -2.2583401 ]]
Iteration 600 of 1000: loss=5.01 " + "l1=0.0466" + "l2=4.96 f=-0.363 shape=(1, 9000, 1)
logits [[ 0.23932311  0.26027563  0.26874223 -2.2191188 ]]
Iteration 700 of 1000: loss=4.75 " + "l1=0" + "l2=4.75 f=-0.357 shape=(1, 9000, 1)
logits [[ 0.22271101  0.27000436  0.25553036 -2.1754684 ]]
Iteration 800 of 1000: loss=4.56 " + "l1=0" + "l2=4.56 f=-0.351 shape=(1, 9000, 1)
logits [[ 0.20644136  0.27142125  0.24598728 -2.1269445 ]]
Iteration 900 of 1000: loss=4.34 " + "l1=0" + "l2=4.34 f=-0.353 shape=(1, 9000, 1)
logits [[ 0.18910262  0.2534253   0.24711539 -2.1023028 ]]
--- 262.79088973999023 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0222 " + "l1=0.0222" + "l2=0 f=-0.634 shape=(1, 9000, 1)
logits [[ 5.0902333 -2.7533722  2.8660839 -7.7390537]]
Iteration 100 of 1000: loss=0.0221 " + "l1=0.0219" + "l2=0.000165 f=-0.635 shape=(1, 9000, 1)
logits [[ 5.0647593 -2.7560654  2.87135   -7.718108 ]]
Iteration 200 of 1000: loss=0.0221 " + "l1=0.0219" + "l2=0.000134 f=-0.635 shape=(1, 9000, 1)
logits [[ 5.0646734 -2.7562861  2.8721673 -7.719133 ]]
Iteration 300 of 1000: loss=0.022 " + "l1=0.0219" + "l2=0.000158 f=-0.635 shape=(1, 9000, 1)
logits [[ 5.062316  -2.7567787  2.8733797 -7.718324 ]]
Iteration 400 of 1000: loss=0.0221 " + "l1=0.0218" + "l2=0.000204 f=-0.635 shape=(1, 9000, 1)
logits [[ 5.0595326 -2.75726    2.8746073 -7.7170787]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.222 " + "l1=0.222" + "l2=0 f=-0.634 shape=(1, 9000, 1)
logits [[ 5.0902333 -2.7533722  2.8660839 -7.7390537]]
Iteration 100 of 1000: loss=0.209 " + "l1=0.201" + "l2=0.00802 f=-0.641 shape=(1, 9000, 1)
logits [[ 4.9146733 -2.778725   2.9077904 -7.6084642]]
Iteration 200 of 1000: loss=0.204 " + "l1=0.192" + "l2=0.0113 f=-0.645 shape=(1, 9000, 1)
logits [[ 4.8486967 -2.791616   2.9263177 -7.563511 ]]
Iteration 300 of 1000: loss=0.199 " + "l1=0.185" + "l2=0.0138 f=-0.648 shape=(1, 9000, 1)
logits [[ 4.795138  -2.8041513  2.9436502 -7.527373 ]]
Iteration 400 of 1000: loss=0.195 " + "l1=0.179" + "l2=0.0164 f=-0.651 shape=(1, 9000, 1)
logits [[ 4.7490687 -2.8172657  2.9617567 -7.498042 ]]
Iteration 500 of 1000: loss=0.192 " + "l1=0.174" + "l2=0.0182 f=-0.653 shape=(1, 9000, 1)
logits [[ 4.7142906 -2.8279152  2.9784276 -7.4772778]]
Iteration 600 of 1000: loss=0.189 " + "l1=0.169" + "l2=0.0196 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.6848693 -2.8358805  2.9922621 -7.4605765]]
Iteration 700 of 1000: loss=0.186 " + "l1=0.166" + "l2=0.0206 f=-0.657 shape=(1, 9000, 1)
logits [[ 4.6610556 -2.8446453  3.005135  -7.448198 ]]
Iteration 800 of 1000: loss=0.184 " + "l1=0.162" + "l2=0.0215 f=-0.659 shape=(1, 9000, 1)
logits [[ 4.636673  -2.8529572  3.0157845 -7.433789 ]]
Iteration 900 of 1000: loss=0.181 " + "l1=0.159" + "l2=0.0223 f=-0.661 shape=(1, 9000, 1)
logits [[ 4.61501   -2.86168    3.0265536 -7.423305 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.22 " + "l1=2.22" + "l2=0 f=-0.634 shape=(1, 9000, 1)
logits [[ 5.0902333 -2.7533722  2.8660839 -7.7390537]]
Iteration 100 of 1000: loss=0.795 " + "l1=0" + "l2=0.795 f=-0.642 shape=(1, 9000, 1)
logits [[ 3.3430023 -3.2030725  3.3511686 -6.060637 ]]
Iteration 200 of 1000: loss=0.583 " + "l1=0" + "l2=0.583 f=-0.655 shape=(1, 9000, 1)
logits [[ 3.3465283 -3.1823187  3.352253  -6.138427 ]]
Iteration 300 of 1000: loss=0.51 " + "l1=0" + "l2=0.51 f=-0.657 shape=(1, 9000, 1)
logits [[ 3.3586388 -3.182915   3.3636167 -6.166786 ]]
Iteration 400 of 1000: loss=0.476 " + "l1=0" + "l2=0.476 f=-0.654 shape=(1, 9000, 1)
logits [[ 3.354307  -3.1827676  3.3707662 -6.15851  ]]
Iteration 500 of 1000: loss=0.436 " + "l1=0.000243" + "l2=0.436 f=-0.653 shape=(1, 9000, 1)
logits [[ 3.3678875 -3.1732988  3.3676443 -6.1748176]]
Iteration 600 of 1000: loss=0.405 " + "l1=0" + "l2=0.405 f=-0.652 shape=(1, 9000, 1)
logits [[ 3.3787239 -3.172648   3.380535  -6.196351 ]]
Iteration 700 of 1000: loss=0.382 " + "l1=0" + "l2=0.382 f=-0.651 shape=(1, 9000, 1)
logits [[ 3.3788881 -3.1720808  3.3921924 -6.202906 ]]
Iteration 800 of 1000: loss=0.355 " + "l1=0" + "l2=0.355 f=-0.649 shape=(1, 9000, 1)
logits [[ 3.3861842 -3.1613774  3.3873641 -6.208905 ]]
Iteration 900 of 1000: loss=0.336 " + "l1=0" + "l2=0.336 f=-0.649 shape=(1, 9000, 1)
logits [[ 3.3776243 -3.164942   3.3858542 -6.1959968]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.22 " + "l1=1.22" + "l2=0 f=-0.634 shape=(1, 9000, 1)
logits [[ 5.0902333 -2.7533722  2.8660839 -7.7390537]]
Iteration 100 of 1000: loss=0.787 " + "l1=0.546" + "l2=0.241 f=-0.659 shape=(1, 9000, 1)
logits [[ 4.092797  -2.940383   3.0997791 -6.8892403]]
Iteration 200 of 1000: loss=0.646 " + "l1=0.313" + "l2=0.333 f=-0.657 shape=(1, 9000, 1)
logits [[ 3.802652  -3.0460129  3.2339592 -6.6183324]]
Iteration 300 of 1000: loss=0.513 " + "l1=0.0697" + "l2=0.444 f=-0.653 shape=(1, 9000, 1)
logits [[ 3.5018077 -3.1605318  3.3750908 -6.3300633]]
Iteration 400 of 1000: loss=0.426 " + "l1=0.0049" + "l2=0.421 f=-0.651 shape=(1, 9000, 1)
logits [[ 3.3918922 -3.1597693  3.3829772 -6.2186446]]
Iteration 500 of 1000: loss=0.362 " + "l1=0.00136" + "l2=0.36 f=-0.647 shape=(1, 9000, 1)
logits [[ 3.363591  -3.1198993  3.3611248 -6.193689 ]]
Iteration 600 of 1000: loss=0.325 " + "l1=0" + "l2=0.325 f=-0.644 shape=(1, 9000, 1)
logits [[ 3.3440263 -3.1115246  3.3525305 -6.16171  ]]
Iteration 700 of 1000: loss=0.292 " + "l1=0" + "l2=0.292 f=-0.644 shape=(1, 9000, 1)
logits [[ 3.3276036 -3.1076236  3.3316014 -6.126568 ]]
Iteration 800 of 1000: loss=0.266 " + "l1=0" + "l2=0.266 f=-0.643 shape=(1, 9000, 1)
logits [[ 3.3167999 -3.103787   3.3202972 -6.106238 ]]
Iteration 900 of 1000: loss=0.248 " + "l1=0" + "l2=0.248 f=-0.642 shape=(1, 9000, 1)
logits [[ 3.3035712 -3.0998642  3.30838   -6.0783515]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.723 " + "l1=0.723" + "l2=0 f=-0.634 shape=(1, 9000, 1)
logits [[ 5.0902333 -2.7533722  2.8660839 -7.7390537]]
Iteration 100 of 1000: loss=0.562 " + "l1=0.461" + "l2=0.101 f=-0.663 shape=(1, 9000, 1)
logits [[ 4.439416  -2.8790727  3.0202873 -7.231429 ]]
Iteration 200 of 1000: loss=0.511 " + "l1=0.393" + "l2=0.119 f=-0.66 shape=(1, 9000, 1)
logits [[ 4.279166  -2.9054646  3.0706792 -7.0842514]]
Iteration 300 of 1000: loss=0.476 " + "l1=0.336" + "l2=0.14 f=-0.659 shape=(1, 9000, 1)
logits [[ 4.1631465 -2.934509   3.1283228 -6.993262 ]]
Iteration 400 of 1000: loss=0.444 " + "l1=0.282" + "l2=0.162 f=-0.657 shape=(1, 9000, 1)
logits [[ 4.0499597 -2.974256   3.1822305 -6.8877635]]
Iteration 500 of 1000: loss=0.415 " + "l1=0.241" + "l2=0.174 f=-0.661 shape=(1, 9000, 1)
logits [[ 3.9752526 -3.0110538  3.2334378 -6.8424673]]
Iteration 600 of 1000: loss=0.389 " + "l1=0.208" + "l2=0.181 f=-0.662 shape=(1, 9000, 1)
logits [[ 3.8954256 -3.0300422  3.254067  -6.7691073]]
Iteration 700 of 1000: loss=0.362 " + "l1=0.165" + "l2=0.198 f=-0.663 shape=(1, 9000, 1)
logits [[ 3.790164  -3.0585225  3.2827787 -6.6683683]]
Iteration 800 of 1000: loss=0.328 " + "l1=0.116" + "l2=0.212 f=-0.657 shape=(1, 9000, 1)
logits [[ 3.657462  -3.071692   3.3004327 -6.5129247]]
Iteration 900 of 1000: loss=0.288 " + "l1=0.0618" + "l2=0.226 f=-0.648 shape=(1, 9000, 1)
logits [[ 3.5080628 -3.0778003  3.3180587 -6.338607 ]]
--- 268.433828830719 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.128 " + "l1=0.128" + "l2=0 f=-0.634 shape=(1, 9000, 1)
logits [[ 5.0902333 -2.7533722  2.8660839 -7.7390537]]
Iteration 100 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.000494 f=-0.631 shape=(1, 9000, 1)
logits [[ 5.0419254 -2.745878   2.8549705 -7.676674 ]]
Iteration 200 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.000503 f=-0.631 shape=(1, 9000, 1)
logits [[ 5.036235  -2.744171   2.8535397 -7.668915 ]]
Iteration 300 of 1000: loss=0.127 " + "l1=0.127" + "l2=0.00059 f=-0.63 shape=(1, 9000, 1)
logits [[ 5.0292377 -2.742483   2.8518841 -7.6596746]]
Iteration 400 of 1000: loss=0.127 " + "l1=0.127" + "l2=0.000672 f=-0.63 shape=(1, 9000, 1)
logits [[ 5.0227623 -2.7409296  2.8503025 -7.651094 ]]
Iteration 500 of 1000: loss=0.127 " + "l1=0.127" + "l2=0.000735 f=-0.629 shape=(1, 9000, 1)
logits [[ 5.016957  -2.7396245  2.8489842 -7.643444 ]]
Iteration 600 of 1000: loss=0.127 " + "l1=0.126" + "l2=0.000854 f=-0.629 shape=(1, 9000, 1)
logits [[ 5.0112147 -2.738346   2.847573  -7.635908 ]]
Iteration 700 of 1000: loss=0.127 " + "l1=0.126" + "l2=0.000947 f=-0.629 shape=(1, 9000, 1)
logits [[ 5.0057893 -2.7371109  2.8461044 -7.6288104]]
Iteration 800 of 1000: loss=0.127 " + "l1=0.126" + "l2=0.00111 f=-0.628 shape=(1, 9000, 1)
logits [[ 5.0006313 -2.7359073  2.8446088 -7.6218243]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.28 " + "l1=1.28" + "l2=0 f=-0.634 shape=(1, 9000, 1)
logits [[ 5.0902333 -2.7533722  2.8660839 -7.7390537]]
Iteration 100 of 1000: loss=1.22 " + "l1=1.18" + "l2=0.0413 f=-0.609 shape=(1, 9000, 1)
logits [[ 4.6433043 -2.688604   2.7571735 -7.146345 ]]
Iteration 200 of 1000: loss=1.2 " + "l1=1.14" + "l2=0.0596 f=-0.597 shape=(1, 9000, 1)
logits [[ 4.469702  -2.6659403  2.722438  -6.9157443]]
Iteration 300 of 1000: loss=1.18 " + "l1=1.11" + "l2=0.0705 f=-0.587 shape=(1, 9000, 1)
logits [[ 4.354847  -2.6422346  2.6933367 -6.7528014]]
Iteration 400 of 1000: loss=1.16 " + "l1=1.09" + "l2=0.0791 f=-0.575 shape=(1, 9000, 1)
logits [[ 4.2565665 -2.6145263  2.65849   -6.6001477]]
Iteration 500 of 1000: loss=1.15 " + "l1=1.06" + "l2=0.0842 f=-0.564 shape=(1, 9000, 1)
logits [[ 4.177119  -2.5826294  2.6173346 -6.4674964]]
Iteration 600 of 1000: loss=1.13 " + "l1=1.04" + "l2=0.0936 f=-0.552 shape=(1, 9000, 1)
logits [[ 4.0705166 -2.5460637  2.5609856 -6.2942824]]
Iteration 700 of 1000: loss=1.11 " + "l1=1" + "l2=0.104 f=-0.54 shape=(1, 9000, 1)
logits [[ 3.9447994 -2.51966    2.5035157 -6.0872664]]
Iteration 800 of 1000: loss=1.09 " + "l1=0.972" + "l2=0.114 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.8287861 -2.5009964  2.464617  -5.892871 ]]
Iteration 900 of 1000: loss=1.06 " + "l1=0.936" + "l2=0.127 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.6908627 -2.4793353  2.4247487 -5.6657796]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.8 " + "l1=12.8" + "l2=0 f=-0.634 shape=(1, 9000, 1)
logits [[ 5.0902333 -2.7533722  2.8660839 -7.7390537]]
Iteration 100 of 1000: loss=6.5 " + "l1=3.65" + "l2=2.85 f=-0.288 shape=(1, 9000, 1)
logits [[ 1.4577689 -2.0466607  1.5429049 -2.105772 ]]
Iteration 200 of 1000: loss=5.17 " + "l1=1.89" + "l2=3.28 f=-0.223 shape=(1, 9000, 1)
logits [[ 0.81097555 -1.9926616   1.0901035  -0.80045027]]
Iteration 300 of 1000: loss=4.32 " + "l1=0.74" + "l2=3.58 f=-0.157 shape=(1, 9000, 1)
logits [[ 0.38599154 -1.7650968   0.74563855  0.00607729]]
Iteration 400 of 1000: loss=3.88 " + "l1=0.416" + "l2=3.47 f=-0.125 shape=(1, 9000, 1)
logits [[ 0.32826248 -1.7132494   0.6504388   0.23443794]]
Iteration 500 of 1000: loss=3.54 " + "l1=0.0967" + "l2=3.44 f=-0.0912 shape=(1, 9000, 1)
logits [[ 0.23517069 -1.6453245   0.5709941   0.47429407]]
Iteration 600 of 1000: loss=3.17 " + "l1=0.0394" + "l2=3.13 f=-0.0854 shape=(1, 9000, 1)
logits [[ 0.22865534 -1.6249417   0.54708517  0.50771785]]
Iteration 700 of 1000: loss=2.77 " + "l1=0.0588" + "l2=2.71 f=-0.0969 shape=(1, 9000, 1)
logits [[ 0.22745484 -1.6280633   0.5357982   0.47704345]]
Iteration 800 of 1000: loss=2.44 " + "l1=0.000903" + "l2=2.44 f=-0.111 shape=(1, 9000, 1)
logits [[ 0.1490306  -1.6050544   0.5070663   0.50616366]]
Iteration 900 of 1000: loss=2.26 " + "l1=0.0278" + "l2=2.24 f=-0.127 shape=(1, 9000, 1)
logits [[ 0.11388025 -1.6130457   0.509821    0.4820372 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.06 " + "l1=7.06" + "l2=0 f=-0.634 shape=(1, 9000, 1)
logits [[ 5.0902333 -2.7533722  2.8660839 -7.7390537]]
Iteration 100 of 1000: loss=4.66 " + "l1=3.08" + "l2=1.58 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.1208827 -2.3049142  2.1126318 -3.4774475]]
Iteration 200 of 1000: loss=3.98 " + "l1=2.4" + "l2=1.58 f=-0.314 shape=(1, 9000, 1)
logits [[ 1.7466792 -2.1704836  1.765639  -2.5966687]]
Iteration 300 of 1000: loss=3.62 " + "l1=2.04" + "l2=1.58 f=-0.286 shape=(1, 9000, 1)
logits [[ 1.5793827 -2.1698906  1.5816244 -2.1346369]]
Iteration 400 of 1000: loss=3.41 " + "l1=1.79" + "l2=1.62 f=-0.263 shape=(1, 9000, 1)
logits [[ 1.4474694 -2.17429    1.4642279 -1.791012 ]]
Iteration 500 of 1000: loss=3.24 " + "l1=1.6" + "l2=1.63 f=-0.252 shape=(1, 9000, 1)
logits [[ 1.3461924 -2.1624503  1.3629974 -1.5543383]]
Iteration 600 of 1000: loss=3.07 " + "l1=1.44" + "l2=1.63 f=-0.244 shape=(1, 9000, 1)
logits [[ 1.2319217 -2.15449    1.2839689 -1.3367138]]
Iteration 700 of 1000: loss=2.91 " + "l1=1.3" + "l2=1.61 f=-0.231 shape=(1, 9000, 1)
logits [[ 1.1358815 -2.1187613  1.2152842 -1.1548493]]
Iteration 800 of 1000: loss=2.74 " + "l1=1.14" + "l2=1.6 f=-0.212 shape=(1, 9000, 1)
logits [[ 1.0065084  -2.023764    1.1177462  -0.94685745]]
Iteration 900 of 1000: loss=2.53 " + "l1=0.999" + "l2=1.54 f=-0.197 shape=(1, 9000, 1)
logits [[ 0.92358387 -1.972458    1.0384401  -0.777486  ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=9.94 " + "l1=9.94" + "l2=0 f=-0.634 shape=(1, 9000, 1)
logits [[ 5.0902333 -2.7533722  2.8660839 -7.7390537]]
Iteration 100 of 1000: loss=5.65 " + "l1=3.54" + "l2=2.12 f=-0.325 shape=(1, 9000, 1)
logits [[ 1.7916045 -2.118206   1.7936054 -2.7684503]]
Iteration 200 of 1000: loss=4.71 " + "l1=2.48" + "l2=2.23 f=-0.263 shape=(1, 9000, 1)
logits [[ 1.3876481 -2.060121   1.4087731 -1.7864532]]
Iteration 300 of 1000: loss=4.14 " + "l1=1.8" + "l2=2.34 f=-0.229 shape=(1, 9000, 1)
logits [[ 1.0924048 -2.0715315  1.1940238 -1.1327837]]
Iteration 400 of 1000: loss=3.77 " + "l1=1.37" + "l2=2.41 f=-0.203 shape=(1, 9000, 1)
logits [[ 0.86276084 -2.0507512   1.0700128  -0.6959111 ]]
Iteration 500 of 1000: loss=3.52 " + "l1=1.05" + "l2=2.46 f=-0.18 shape=(1, 9000, 1)
logits [[ 0.70765066 -1.9714953   0.9502773  -0.40816307]]
Iteration 600 of 1000: loss=3.21 " + "l1=0.601" + "l2=2.61 f=-0.153 shape=(1, 9000, 1)
logits [[ 0.46256655 -1.7856557   0.7441503  -0.03142346]]
Iteration 700 of 1000: loss=2.9 " + "l1=0.266" + "l2=2.64 f=-0.115 shape=(1, 9000, 1)
logits [[ 0.30701652 -1.655277    0.6152433   0.27149582]]
Iteration 800 of 1000: loss=2.53 " + "l1=0.0435" + "l2=2.48 f=-0.0994 shape=(1, 9000, 1)
logits [[ 0.15466993 -1.5914584   0.54773     0.49161977]]
Iteration 900 of 1000: loss=2.2 " + "l1=0.00674" + "l2=2.2 f=-0.121 shape=(1, 9000, 1)
logits [[ 0.06371737 -1.5866864   0.5231737   0.51447743]]
--- 285.7761330604553 seconds ---
Adv result:3
Loading record A03437
(1, 4324)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0356 " + "l1=0.0356" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.8881469  -0.6736681   0.37315688 -4.7333326 ]]
Iteration 100 of 1000: loss=0.0349 " + "l1=0.0344" + "l2=0.000492 f=-0.54 shape=(1, 9000, 1)
logits [[ 2.826311   -0.6145039   0.35142103 -4.721865  ]]
Iteration 200 of 1000: loss=0.0347 " + "l1=0.0341" + "l2=0.000553 f=-0.541 shape=(1, 9000, 1)
logits [[ 2.8131118  -0.6009748   0.34617338 -4.7208705 ]]
Iteration 300 of 1000: loss=0.0345 " + "l1=0.0339" + "l2=0.000634 f=-0.542 shape=(1, 9000, 1)
logits [[ 2.800902   -0.5866377   0.34003073 -4.7207327 ]]
Iteration 400 of 1000: loss=0.0343 " + "l1=0.0336" + "l2=0.000737 f=-0.542 shape=(1, 9000, 1)
logits [[ 2.7897317  -0.5711832   0.33351967 -4.7219214 ]]
Iteration 500 of 1000: loss=0.0342 " + "l1=0.0333" + "l2=0.000852 f=-0.543 shape=(1, 9000, 1)
logits [[ 2.77838   -0.5555331  0.327083  -4.722866 ]]
Iteration 600 of 1000: loss=0.034 " + "l1=0.0331" + "l2=0.000932 f=-0.544 shape=(1, 9000, 1)
logits [[ 2.7673037  -0.5401337   0.32111412 -4.7243996 ]]
Iteration 700 of 1000: loss=0.0339 " + "l1=0.0328" + "l2=0.0011 f=-0.545 shape=(1, 9000, 1)
logits [[ 2.7558472  -0.5230714   0.31442744 -4.726178  ]]
Iteration 800 of 1000: loss=0.0337 " + "l1=0.0324" + "l2=0.0013 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.7429037  -0.4996655   0.30519187 -4.7308354 ]]
Iteration 900 of 1000: loss=0.0335 " + "l1=0.0321" + "l2=0.00139 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.7299767 -0.4786902  0.2974614 -4.7331333]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.356 " + "l1=0.356" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.8881469  -0.6736681   0.37315688 -4.7333326 ]]
Iteration 100 of 1000: loss=0.279 " + "l1=0.228" + "l2=0.051 f=-0.573 shape=(1, 9000, 1)
logits [[ 2.2043898  -0.07204043  0.14383106 -4.5677557 ]]
Iteration 200 of 1000: loss=0.242 " + "l1=0.171" + "l2=0.0717 f=-0.582 shape=(1, 9000, 1)
logits [[ 1.9437267   0.2365655   0.01033081 -4.5177107 ]]
Iteration 300 of 1000: loss=0.2 " + "l1=0.106" + "l2=0.094 f=-0.581 shape=(1, 9000, 1)
logits [[ 1.6212568   0.5600678  -0.13643104 -4.366937  ]]
Iteration 400 of 1000: loss=0.14 " + "l1=0.00569" + "l2=0.134 f=-0.601 shape=(1, 9000, 1)
logits [[ 1.0525331  0.9956451 -0.326037  -4.127949 ]]
Iteration 500 of 1000: loss=0.103 " + "l1=0" + "l2=0.103 f=-0.585 shape=(1, 9000, 1)
logits [[ 1.0016549   1.0025462  -0.32226965 -4.0199428 ]]
Iteration 600 of 1000: loss=0.0736 " + "l1=0.00169" + "l2=0.0719 f=-0.568 shape=(1, 9000, 1)
logits [[ 0.9838275   0.96688324 -0.31021884 -3.912743  ]]
Iteration 700 of 1000: loss=0.0554 " + "l1=0.00158" + "l2=0.0538 f=-0.562 shape=(1, 9000, 1)
logits [[ 0.9472294   0.93143183 -0.3129175  -3.8141909 ]]
Iteration 800 of 1000: loss=0.0459 " + "l1=0.000426" + "l2=0.0455 f=-0.561 shape=(1, 9000, 1)
logits [[ 0.9076981   0.90344286 -0.31958547 -3.7344208 ]]
Iteration 900 of 1000: loss=0.0409 " + "l1=0" + "l2=0.0409 f=-0.559 shape=(1, 9000, 1)
logits [[ 0.87642205  0.8770367  -0.32241875 -3.667101  ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.196 " + "l1=0.196" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.8881469  -0.6736681   0.37315688 -4.7333326 ]]
Iteration 100 of 1000: loss=0.174 " + "l1=0.16" + "l2=0.0142 f=-0.554 shape=(1, 9000, 1)
logits [[ 2.5478222 -0.3535428  0.2531818 -4.662531 ]]
Iteration 200 of 1000: loss=0.164 " + "l1=0.145" + "l2=0.0188 f=-0.562 shape=(1, 9000, 1)
logits [[ 2.4282534  -0.2144437   0.19975425 -4.6609616 ]]
Iteration 300 of 1000: loss=0.155 " + "l1=0.132" + "l2=0.023 f=-0.569 shape=(1, 9000, 1)
logits [[ 2.3196526  -0.08702595  0.14418198 -4.6539197 ]]
Iteration 400 of 1000: loss=0.146 " + "l1=0.12" + "l2=0.0263 f=-0.574 shape=(1, 9000, 1)
logits [[ 2.2175457   0.03546739  0.09634778 -4.6434903 ]]
Iteration 500 of 1000: loss=0.136 " + "l1=0.106" + "l2=0.0298 f=-0.577 shape=(1, 9000, 1)
logits [[ 2.0886939   0.16271967  0.04263144 -4.6025577 ]]
Iteration 600 of 1000: loss=0.122 " + "l1=0.0873" + "l2=0.0344 f=-0.574 shape=(1, 9000, 1)
logits [[ 1.9037789   0.31682697 -0.02011467 -4.497088  ]]
Iteration 700 of 1000: loss=0.107 " + "l1=0.0697" + "l2=0.0372 f=-0.569 shape=(1, 9000, 1)
logits [[ 1.7203      0.4530807  -0.08141962 -4.366275  ]]
Iteration 800 of 1000: loss=0.0894 " + "l1=0.0478" + "l2=0.0416 f=-0.561 shape=(1, 9000, 1)
logits [[ 1.4672625   0.5978476  -0.15614264 -4.151056  ]]
Iteration 900 of 1000: loss=0.0627 " + "l1=0.012" + "l2=0.0507 f=-0.557 shape=(1, 9000, 1)
logits [[ 1.0537714  0.835509  -0.2608123 -3.856126 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.116 " + "l1=0.116" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.8881469  -0.6736681   0.37315688 -4.7333326 ]]
Iteration 100 of 1000: loss=0.108 " + "l1=0.104" + "l2=0.00451 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.700309   -0.49903482  0.307458   -4.6919875 ]]
Iteration 200 of 1000: loss=0.105 " + "l1=0.0991" + "l2=0.00633 f=-0.551 shape=(1, 9000, 1)
logits [[ 2.6344328  -0.41397613  0.27176535 -4.697668  ]]
Iteration 300 of 1000: loss=0.102 " + "l1=0.095" + "l2=0.00746 f=-0.555 shape=(1, 9000, 1)
logits [[ 2.580513   -0.34216955  0.2440205  -4.7037463 ]]
Iteration 400 of 1000: loss=0.0997 " + "l1=0.091" + "l2=0.00875 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.5235968  -0.27598035  0.21840385 -4.699568  ]]
Iteration 500 of 1000: loss=0.097 " + "l1=0.0872" + "l2=0.00979 f=-0.561 shape=(1, 9000, 1)
logits [[ 2.4683323  -0.21369557  0.194358   -4.692862  ]]
Iteration 600 of 1000: loss=0.0939 " + "l1=0.083" + "l2=0.0109 f=-0.564 shape=(1, 9000, 1)
logits [[ 2.4043953  -0.14960489  0.16933613 -4.6796856 ]]
Iteration 700 of 1000: loss=0.0903 " + "l1=0.0784" + "l2=0.012 f=-0.567 shape=(1, 9000, 1)
logits [[ 2.329713   -0.08152148  0.141327   -4.6566443 ]]
Iteration 800 of 1000: loss=0.0865 " + "l1=0.0735" + "l2=0.013 f=-0.569 shape=(1, 9000, 1)
logits [[ 2.245887   -0.01493956  0.11348848 -4.6185064 ]]
Iteration 900 of 1000: loss=0.082 " + "l1=0.0674" + "l2=0.0145 f=-0.57 shape=(1, 9000, 1)
logits [[ 2.1481738   0.07346932  0.07279187 -4.5728064 ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.156 " + "l1=0.156" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.8881469  -0.6736681   0.37315688 -4.7333326 ]]
Iteration 100 of 1000: loss=0.142 " + "l1=0.133" + "l2=0.00876 f=-0.55 shape=(1, 9000, 1)
logits [[ 2.624859  -0.4232627  0.2780279 -4.67986  ]]
Iteration 200 of 1000: loss=0.136 " + "l1=0.124" + "l2=0.0118 f=-0.557 shape=(1, 9000, 1)
logits [[ 2.530823   -0.30979732  0.23501606 -4.6829863 ]]
Iteration 300 of 1000: loss=0.131 " + "l1=0.117" + "l2=0.0141 f=-0.561 shape=(1, 9000, 1)
logits [[ 2.4520767  -0.21451758  0.19740994 -4.6807137 ]]
Iteration 400 of 1000: loss=0.126 " + "l1=0.109" + "l2=0.0165 f=-0.566 shape=(1, 9000, 1)
logits [[ 2.3722632  -0.12251569  0.15831713 -4.6735725 ]]
Iteration 500 of 1000: loss=0.12 " + "l1=0.101" + "l2=0.0186 f=-0.57 shape=(1, 9000, 1)
logits [[ 2.287675   -0.0240312   0.12043822 -4.6655116 ]]
Iteration 600 of 1000: loss=0.113 " + "l1=0.093" + "l2=0.0203 f=-0.572 shape=(1, 9000, 1)
logits [[ 2.1910858   0.06556959  0.08516558 -4.630054  ]]
Iteration 700 of 1000: loss=0.105 " + "l1=0.0813" + "l2=0.0233 f=-0.573 shape=(1, 9000, 1)
logits [[ 2.0470338   0.18811528  0.03315031 -4.558988  ]]
Iteration 800 of 1000: loss=0.0945 " + "l1=0.0685" + "l2=0.0259 f=-0.571 shape=(1, 9000, 1)
logits [[ 1.8792082   0.3129705  -0.02570926 -4.451054  ]]
Iteration 900 of 1000: loss=0.0853 " + "l1=0.0576" + "l2=0.0277 f=-0.568 shape=(1, 9000, 1)
logits [[ 1.7165016   0.39990026 -0.06669372 -4.322938  ]]
--- 300.71699261665344 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0251 " + "l1=0.0251" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.8881469  -0.6736681   0.37315688 -4.7333326 ]]
Iteration 100 of 1000: loss=0.0248 " + "l1=0.0245" + "l2=0.000265 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.8429382  -0.67612433  0.39005938 -4.7029915 ]]
Iteration 200 of 1000: loss=0.0247 " + "l1=0.0244" + "l2=0.000285 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.8353214  -0.6778911   0.39342204 -4.696906  ]]
Iteration 300 of 1000: loss=0.0246 " + "l1=0.0243" + "l2=0.000329 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.8275838  -0.6787598   0.39611545 -4.6916313 ]]
Iteration 400 of 1000: loss=0.0246 " + "l1=0.0242" + "l2=0.00039 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.8202512  -0.68004143  0.39900422 -4.6863866 ]]
Iteration 500 of 1000: loss=0.0245 " + "l1=0.0241" + "l2=0.000426 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.812791   -0.6818048   0.40215853 -4.6808777 ]]
Iteration 600 of 1000: loss=0.0245 " + "l1=0.024" + "l2=0.000519 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.8058069  -0.68281525  0.40504098 -4.6763663 ]]
Iteration 700 of 1000: loss=0.0245 " + "l1=0.0239" + "l2=0.000632 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.7982733  -0.6834276   0.40784922 -4.6714153 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.251 " + "l1=0.251" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.8881469  -0.6736681   0.37315688 -4.7333326 ]]
Iteration 100 of 1000: loss=0.217 " + "l1=0.197" + "l2=0.0196 f=-0.54 shape=(1, 9000, 1)
logits [[ 2.4498203  -0.6548077   0.47654763 -4.4323454 ]]
Iteration 200 of 1000: loss=0.203 " + "l1=0.177" + "l2=0.0261 f=-0.547 shape=(1, 9000, 1)
logits [[ 2.2644458 -0.6505447  0.4961208 -4.298425 ]]
Iteration 300 of 1000: loss=0.186 " + "l1=0.152" + "l2=0.0338 f=-0.552 shape=(1, 9000, 1)
logits [[ 2.0362306  -0.65098447  0.51498306 -4.1085267 ]]
Iteration 400 of 1000: loss=0.166 " + "l1=0.125" + "l2=0.0403 f=-0.549 shape=(1, 9000, 1)
logits [[ 1.8033438  -0.6740344   0.54868746 -3.8741512 ]]
Iteration 500 of 1000: loss=0.146 " + "l1=0.102" + "l2=0.0447 f=-0.541 shape=(1, 9000, 1)
logits [[ 1.6043017  -0.7098451   0.58817834 -3.6483045 ]]
Iteration 600 of 1000: loss=0.126 " + "l1=0.0752" + "l2=0.0505 f=-0.517 shape=(1, 9000, 1)
logits [[ 1.4203246  -0.7813502   0.66866577 -3.3761268 ]]
Iteration 700 of 1000: loss=0.106 " + "l1=0.055" + "l2=0.0512 f=-0.499 shape=(1, 9000, 1)
logits [[ 1.2969002 -0.8513207  0.7472609 -3.1902196]]
Iteration 800 of 1000: loss=0.0861 " + "l1=0.0341" + "l2=0.052 f=-0.483 shape=(1, 9000, 1)
logits [[ 1.1541555 -0.9046133  0.812837  -2.9954758]]
Iteration 900 of 1000: loss=0.0598 " + "l1=0.00631" + "l2=0.0535 f=-0.464 shape=(1, 9000, 1)
logits [[ 0.9385076  -0.9554436   0.87544113 -2.7145126 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.138 " + "l1=0.138" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.8881469  -0.6736681   0.37315688 -4.7333326 ]]
Iteration 100 of 1000: loss=0.128 " + "l1=0.122" + "l2=0.00649 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.6578066 -0.6764241  0.4477791 -4.5755196]]
Iteration 200 of 1000: loss=0.124 " + "l1=0.116" + "l2=0.00871 f=-0.54 shape=(1, 9000, 1)
logits [[ 2.5672486  -0.6811396   0.46618417 -4.5104046 ]]
Iteration 300 of 1000: loss=0.121 " + "l1=0.11" + "l2=0.0105 f=-0.543 shape=(1, 9000, 1)
logits [[ 2.482388  -0.6886297  0.4793179 -4.4454417]]
Iteration 400 of 1000: loss=0.117 " + "l1=0.105" + "l2=0.0118 f=-0.545 shape=(1, 9000, 1)
logits [[ 2.408131   -0.6984153   0.49433473 -4.383356  ]]
Iteration 500 of 1000: loss=0.113 " + "l1=0.1" + "l2=0.0132 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.3275018  -0.70335305  0.5097957  -4.316802  ]]
Iteration 600 of 1000: loss=0.108 " + "l1=0.0926" + "l2=0.0154 f=-0.547 shape=(1, 9000, 1)
logits [[ 2.2062902  -0.7088821   0.52208745 -4.2068686 ]]
Iteration 700 of 1000: loss=0.102 " + "l1=0.0847" + "l2=0.0171 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.082443   -0.72419757  0.5421926  -4.0829396 ]]
Iteration 800 of 1000: loss=0.0957 " + "l1=0.077" + "l2=0.0187 f=-0.542 shape=(1, 9000, 1)
logits [[ 1.9631953  -0.74612373  0.56323844 -3.9472053 ]]
Iteration 900 of 1000: loss=0.0894 " + "l1=0.0693" + "l2=0.0201 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.8450756  -0.7746004   0.58598083 -3.8017416 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.195 " + "l1=0.195" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.8881469  -0.6736681   0.37315688 -4.7333326 ]]
Iteration 100 of 1000: loss=0.174 " + "l1=0.162" + "l2=0.0123 f=-0.538 shape=(1, 9000, 1)
logits [[ 2.5532324  -0.6686646   0.46637174 -4.501136  ]]
Iteration 200 of 1000: loss=0.166 " + "l1=0.15" + "l2=0.0165 f=-0.544 shape=(1, 9000, 1)
logits [[ 2.4116006  -0.6694048   0.48236713 -4.400646  ]]
Iteration 300 of 1000: loss=0.158 " + "l1=0.139" + "l2=0.0194 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.2952263  -0.6749465   0.50177425 -4.3073545 ]]
Iteration 400 of 1000: loss=0.148 " + "l1=0.125" + "l2=0.024 f=-0.549 shape=(1, 9000, 1)
logits [[ 2.1246278 -0.6765876  0.5180842 -4.1618247]]
Iteration 500 of 1000: loss=0.136 " + "l1=0.109" + "l2=0.0279 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.943507   -0.69470984  0.5429897  -3.9810193 ]]
Iteration 600 of 1000: loss=0.124 " + "l1=0.0931" + "l2=0.0309 f=-0.542 shape=(1, 9000, 1)
logits [[ 1.779435   -0.73207223  0.5779154  -3.793577  ]]
Iteration 700 of 1000: loss=0.113 " + "l1=0.0802" + "l2=0.0326 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.6447061  -0.76421     0.60936767 -3.634859  ]]
Iteration 800 of 1000: loss=0.1 " + "l1=0.0641" + "l2=0.0361 f=-0.517 shape=(1, 9000, 1)
logits [[ 1.4966986  -0.8214211   0.66917485 -3.4133954 ]]
Iteration 900 of 1000: loss=0.0853 " + "l1=0.0472" + "l2=0.038 f=-0.496 shape=(1, 9000, 1)
logits [[ 1.3568473 -0.8813874  0.7475735 -3.2052927]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.223 " + "l1=0.223" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.8881469  -0.6736681   0.37315688 -4.7333326 ]]
Iteration 100 of 1000: loss=0.196 " + "l1=0.18" + "l2=0.0157 f=-0.539 shape=(1, 9000, 1)
logits [[ 2.5017157  -0.66212744  0.47166586 -4.466728  ]]
Iteration 200 of 1000: loss=0.185 " + "l1=0.164" + "l2=0.021 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.337022   -0.6585257   0.48876113 -4.350002  ]]
Iteration 300 of 1000: loss=0.174 " + "l1=0.149" + "l2=0.0255 f=-0.549 shape=(1, 9000, 1)
logits [[ 2.1810322 -0.6606509  0.5072132 -4.22287  ]]
Iteration 400 of 1000: loss=0.158 " + "l1=0.126" + "l2=0.0323 f=-0.55 shape=(1, 9000, 1)
logits [[ 1.9531639  -0.6737735   0.53343326 -4.011832  ]]
Iteration 500 of 1000: loss=0.142 " + "l1=0.106" + "l2=0.0365 f=-0.546 shape=(1, 9000, 1)
logits [[ 1.7605014  -0.7092399   0.56951755 -3.8032153 ]]
Iteration 600 of 1000: loss=0.128 " + "l1=0.0889" + "l2=0.0389 f=-0.539 shape=(1, 9000, 1)
logits [[ 1.6029067 -0.7383322  0.6017701 -3.6206737]]
Iteration 700 of 1000: loss=0.112 " + "l1=0.0692" + "l2=0.0426 f=-0.517 shape=(1, 9000, 1)
logits [[ 1.452111  -0.8073592  0.6720829 -3.3836925]]
Iteration 800 of 1000: loss=0.0947 " + "l1=0.05" + "l2=0.0448 f=-0.497 shape=(1, 9000, 1)
logits [[ 1.3170074 -0.8731363  0.7540897 -3.1847382]]
Iteration 900 of 1000: loss=0.0753 " + "l1=0.0299" + "l2=0.0454 f=-0.48 shape=(1, 9000, 1)
logits [[ 1.1547074  -0.9206854   0.81787497 -2.9724882 ]]
--- 281.9112057685852 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0762 " + "l1=0.0762" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.8881469  -0.6736681   0.37315688 -4.7333326 ]]
Iteration 100 of 1000: loss=0.0752 " + "l1=0.0746" + "l2=0.00062 f=-0.532 shape=(1, 9000, 1)
logits [[ 2.8159592  -0.67276466  0.36901897 -4.6412373 ]]
Iteration 200 of 1000: loss=0.0749 " + "l1=0.0742" + "l2=0.000734 f=-0.532 shape=(1, 9000, 1)
logits [[ 2.7981806  -0.67402345  0.3692883  -4.620438  ]]
Iteration 300 of 1000: loss=0.0747 " + "l1=0.0738" + "l2=0.000883 f=-0.531 shape=(1, 9000, 1)
logits [[ 2.7815204  -0.67549616  0.36844227 -4.598531  ]]
Iteration 400 of 1000: loss=0.0745 " + "l1=0.0734" + "l2=0.00102 f=-0.53 shape=(1, 9000, 1)
logits [[ 2.7657893  -0.67761457  0.36737266 -4.577476  ]]
Iteration 500 of 1000: loss=0.0742 " + "l1=0.073" + "l2=0.00119 f=-0.53 shape=(1, 9000, 1)
logits [[ 2.7489507  -0.67980313  0.36616287 -4.554722  ]]
Iteration 600 of 1000: loss=0.074 " + "l1=0.0726" + "l2=0.00138 f=-0.529 shape=(1, 9000, 1)
logits [[ 2.7312653  -0.68277013  0.36538586 -4.5308986 ]]
Iteration 700 of 1000: loss=0.0737 " + "l1=0.0722" + "l2=0.00154 f=-0.529 shape=(1, 9000, 1)
logits [[ 2.7126846  -0.6853006   0.36426297 -4.5061707 ]]
Iteration 800 of 1000: loss=0.0734 " + "l1=0.0717" + "l2=0.00169 f=-0.528 shape=(1, 9000, 1)
logits [[ 2.6933     -0.68808985  0.36275077 -4.480407  ]]
Iteration 900 of 1000: loss=0.0731 " + "l1=0.0712" + "l2=0.0019 f=-0.528 shape=(1, 9000, 1)
logits [[ 2.6715252  -0.69055724  0.3609704  -4.4522867 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.762 " + "l1=0.762" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.8881469  -0.6736681   0.37315688 -4.7333326 ]]
Iteration 100 of 1000: loss=0.646 " + "l1=0.577" + "l2=0.0685 f=-0.513 shape=(1, 9000, 1)
logits [[ 2.0027199 -0.5529399  0.2656444 -3.7677357]]
Iteration 200 of 1000: loss=0.545 " + "l1=0.418" + "l2=0.127 f=-0.488 shape=(1, 9000, 1)
logits [[ 1.3121325  -0.5407009   0.14890167 -2.870509  ]]
Iteration 300 of 1000: loss=0.441 " + "l1=0.273" + "l2=0.167 f=-0.43 shape=(1, 9000, 1)
logits [[ 0.7606201  -0.5330027   0.02519652 -1.972075  ]]
Iteration 400 of 1000: loss=0.341 " + "l1=0.144" + "l2=0.197 f=-0.367 shape=(1, 9000, 1)
logits [[ 0.35111937 -0.5678178  -0.16485094 -1.0855353 ]]
Iteration 500 of 1000: loss=0.224 " + "l1=0" + "l2=0.224 f=-0.341 shape=(1, 9000, 1)
logits [[-0.1448733  -0.67604065 -0.40958017 -0.13304433]]
Iteration 600 of 1000: loss=0.143 " + "l1=0" + "l2=0.143 f=-0.367 shape=(1, 9000, 1)
logits [[-0.10469598 -0.89732486 -0.38450834 -0.08234829]]
Iteration 700 of 1000: loss=0.106 " + "l1=0.000216" + "l2=0.106 f=-0.359 shape=(1, 9000, 1)
logits [[-0.04194215 -0.9977022  -0.35252336 -0.04410222]]
Iteration 800 of 1000: loss=0.0865 " + "l1=0.00204" + "l2=0.0844 f=-0.351 shape=(1, 9000, 1)
logits [[-0.00675659 -1.0437106  -0.32633716 -0.02716774]]
Iteration 900 of 1000: loss=0.0701 " + "l1=0.000356" + "l2=0.0697 f=-0.345 shape=(1, 9000, 1)
logits [[ 0.00488897 -1.0848411  -0.30161002  0.00132772]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.419 " + "l1=0.419" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.8881469  -0.6736681   0.37315688 -4.7333326 ]]
Iteration 100 of 1000: loss=0.387 " + "l1=0.367" + "l2=0.0197 f=-0.523 shape=(1, 9000, 1)
logits [[ 2.439526   -0.6373786   0.33993512 -4.2336183 ]]
Iteration 200 of 1000: loss=0.369 " + "l1=0.339" + "l2=0.0295 f=-0.52 shape=(1, 9000, 1)
logits [[ 2.2024114  -0.61476266  0.3012943  -3.9683607 ]]
Iteration 300 of 1000: loss=0.345 " + "l1=0.305" + "l2=0.0397 f=-0.512 shape=(1, 9000, 1)
logits [[ 1.9245055  -0.62199396  0.27187762 -3.6207602 ]]
Iteration 400 of 1000: loss=0.312 " + "l1=0.26" + "l2=0.0522 f=-0.492 shape=(1, 9000, 1)
logits [[ 1.5930862 -0.6809159  0.2455301 -3.1253204]]
Iteration 500 of 1000: loss=0.28 " + "l1=0.221" + "l2=0.0591 f=-0.462 shape=(1, 9000, 1)
logits [[ 1.3405397  -0.722741    0.21237987 -2.6771505 ]]
Iteration 600 of 1000: loss=0.252 " + "l1=0.187" + "l2=0.0654 f=-0.435 shape=(1, 9000, 1)
logits [[ 1.1327468  -0.7657728   0.15376437 -2.259293  ]]
Iteration 700 of 1000: loss=0.219 " + "l1=0.144" + "l2=0.0748 f=-0.402 shape=(1, 9000, 1)
logits [[ 0.8992272  -0.8431179   0.05408128 -1.7178458 ]]
Iteration 800 of 1000: loss=0.175 " + "l1=0.0883" + "l2=0.0869 f=-0.387 shape=(1, 9000, 1)
logits [[ 0.53635234 -0.93159705 -0.08284005 -1.068232  ]]
Iteration 900 of 1000: loss=0.107 " + "l1=0.0104" + "l2=0.0963 f=-0.359 shape=(1, 9000, 1)
logits [[-0.01224521 -0.99721235 -0.22394691 -0.20202258]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.248 " + "l1=0.248" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.8881469  -0.6736681   0.37315688 -4.7333326 ]]
Iteration 100 of 1000: loss=0.237 " + "l1=0.231" + "l2=0.00638 f=-0.527 shape=(1, 9000, 1)
logits [[ 2.6470473  -0.66043264  0.358785   -4.4522057 ]]
Iteration 200 of 1000: loss=0.233 " + "l1=0.223" + "l2=0.00917 f=-0.526 shape=(1, 9000, 1)
logits [[ 2.5417275  -0.66299945  0.3518344  -4.333151  ]]
Iteration 300 of 1000: loss=0.228 " + "l1=0.216" + "l2=0.0116 f=-0.524 shape=(1, 9000, 1)
logits [[ 2.4360652  -0.6649696   0.33841974 -4.2066135 ]]
Iteration 400 of 1000: loss=0.222 " + "l1=0.207" + "l2=0.0144 f=-0.52 shape=(1, 9000, 1)
logits [[ 2.3234992  -0.6700963   0.32750282 -4.0589685 ]]
Iteration 500 of 1000: loss=0.215 " + "l1=0.196" + "l2=0.0184 f=-0.516 shape=(1, 9000, 1)
logits [[ 2.1674778  -0.6708661   0.30849686 -3.870471  ]]
Iteration 600 of 1000: loss=0.204 " + "l1=0.182" + "l2=0.0225 f=-0.51 shape=(1, 9000, 1)
logits [[ 1.9700872  -0.6805964   0.29275227 -3.6208293 ]]
Iteration 700 of 1000: loss=0.193 " + "l1=0.167" + "l2=0.0261 f=-0.5 shape=(1, 9000, 1)
logits [[ 1.7850808  -0.71596277  0.2771184  -3.3461244 ]]
Iteration 800 of 1000: loss=0.181 " + "l1=0.15" + "l2=0.0302 f=-0.48 shape=(1, 9000, 1)
logits [[ 1.6059169  -0.7691203   0.26582494 -3.0232651 ]]
Iteration 900 of 1000: loss=0.17 " + "l1=0.137" + "l2=0.0324 f=-0.464 shape=(1, 9000, 1)
logits [[ 1.4582264  -0.7884285   0.23757857 -2.7631965 ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.333 " + "l1=0.333" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.8881469  -0.6736681   0.37315688 -4.7333326 ]]
Iteration 100 of 1000: loss=0.314 " + "l1=0.302" + "l2=0.0121 f=-0.524 shape=(1, 9000, 1)
logits [[ 2.5470788  -0.65195817  0.35247397 -4.3447847 ]]
Iteration 200 of 1000: loss=0.304 " + "l1=0.286" + "l2=0.0175 f=-0.523 shape=(1, 9000, 1)
logits [[ 2.3816152  -0.64665353  0.33294883 -4.160386  ]]
Iteration 300 of 1000: loss=0.292 " + "l1=0.269" + "l2=0.0236 f=-0.519 shape=(1, 9000, 1)
logits [[ 2.199383   -0.6374742   0.30420563 -3.9416893 ]]
Iteration 400 of 1000: loss=0.276 " + "l1=0.245" + "l2=0.0307 f=-0.511 shape=(1, 9000, 1)
logits [[ 1.9600514  -0.6521844   0.28514576 -3.6367595 ]]
Iteration 500 of 1000: loss=0.255 " + "l1=0.217" + "l2=0.0383 f=-0.498 shape=(1, 9000, 1)
logits [[ 1.6986401  -0.6967191   0.26525164 -3.259195  ]]
Iteration 600 of 1000: loss=0.234 " + "l1=0.19" + "l2=0.0441 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.4824215  -0.75613177  0.24658182 -2.8540928 ]]
Iteration 700 of 1000: loss=0.216 " + "l1=0.17" + "l2=0.0466 f=-0.454 shape=(1, 9000, 1)
logits [[ 1.3184552  -0.77669585  0.20083031 -2.5593698 ]]
Iteration 800 of 1000: loss=0.198 " + "l1=0.148" + "l2=0.0499 f=-0.433 shape=(1, 9000, 1)
logits [[ 1.1599433 -0.8223054  0.1501544 -2.221116 ]]
Iteration 900 of 1000: loss=0.174 " + "l1=0.117" + "l2=0.0564 f=-0.407 shape=(1, 9000, 1)
logits [[ 0.9441636  -0.9151401   0.08073622 -1.7383871 ]]
--- 302.78424429893494 seconds ---
Adv result:3
Loading model
Loading ground truth file
Attack diff is running...
Loading record A03446
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0905 " + "l1=0.0905" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[  6.425007   -2.6239285   3.1725483 -10.110462 ]]
Iteration 100 of 1000: loss=0.0899 " + "l1=0.0896" + "l2=0.000361 f=-0.783 shape=(1, 9000, 1)
logits [[  6.371085   -2.5870705   3.1432369 -10.059785 ]]
Iteration 200 of 1000: loss=0.0898 " + "l1=0.0894" + "l2=0.000369 f=-0.783 shape=(1, 9000, 1)
logits [[  6.360727   -2.5799928   3.1369393 -10.049604 ]]
Iteration 300 of 1000: loss=0.0896 " + "l1=0.0892" + "l2=0.000447 f=-0.783 shape=(1, 9000, 1)
logits [[  6.347511   -2.5703907   3.128506  -10.036887 ]]
Iteration 400 of 1000: loss=0.0895 " + "l1=0.0889" + "l2=0.000539 f=-0.783 shape=(1, 9000, 1)
logits [[  6.3343897  -2.5604668   3.1199565 -10.024847 ]]
Iteration 500 of 1000: loss=0.0894 " + "l1=0.0887" + "l2=0.000681 f=-0.783 shape=(1, 9000, 1)
logits [[  6.321813   -2.551295    3.1121511 -10.014152 ]]
Iteration 600 of 1000: loss=0.0893 " + "l1=0.0885" + "l2=0.0008 f=-0.783 shape=(1, 9000, 1)
logits [[  6.3104396  -2.5425787   3.1049085 -10.005189 ]]
Iteration 700 of 1000: loss=0.0893 " + "l1=0.0883" + "l2=0.000954 f=-0.783 shape=(1, 9000, 1)
logits [[ 6.2985945 -2.5336485  3.097485  -9.996028 ]]
Iteration 800 of 1000: loss=0.0892 " + "l1=0.0881" + "l2=0.00106 f=-0.784 shape=(1, 9000, 1)
logits [[ 6.286978  -2.5251255  3.0905473 -9.987303 ]]
Iteration 900 of 1000: loss=0.0891 " + "l1=0.088" + "l2=0.00116 f=-0.784 shape=(1, 9000, 1)
logits [[ 6.277338  -2.5185025  3.0862505 -9.981455 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.905 " + "l1=0.905" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[  6.425007   -2.6239285   3.1725483 -10.110462 ]]
Iteration 100 of 1000: loss=0.857 " + "l1=0.83" + "l2=0.0263 f=-0.776 shape=(1, 9000, 1)
logits [[ 5.9739375 -2.3283339  2.9358919 -9.686068 ]]
Iteration 200 of 1000: loss=0.834 " + "l1=0.797" + "l2=0.0365 f=-0.77 shape=(1, 9000, 1)
logits [[ 5.772576  -2.2017772  2.8324025 -9.483171 ]]
Iteration 300 of 1000: loss=0.812 " + "l1=0.765" + "l2=0.0472 f=-0.768 shape=(1, 9000, 1)
logits [[ 5.577625  -2.0705426  2.71433   -9.293463 ]]
Iteration 400 of 1000: loss=0.794 " + "l1=0.737" + "l2=0.057 f=-0.771 shape=(1, 9000, 1)
logits [[ 5.4023867 -1.9669834  2.6198852 -9.138104 ]]
Iteration 500 of 1000: loss=0.778 " + "l1=0.713" + "l2=0.0654 f=-0.772 shape=(1, 9000, 1)
logits [[ 5.249264  -1.8795197  2.5457354 -9.002105 ]]
Iteration 600 of 1000: loss=0.763 " + "l1=0.69" + "l2=0.0735 f=-0.77 shape=(1, 9000, 1)
logits [[ 5.1043735 -1.7949369  2.4769614 -8.865614 ]]
Iteration 700 of 1000: loss=0.749 " + "l1=0.668" + "l2=0.0809 f=-0.767 shape=(1, 9000, 1)
logits [[ 4.9629526 -1.7168953  2.4191594 -8.7325535]]
Iteration 800 of 1000: loss=0.734 " + "l1=0.647" + "l2=0.0878 f=-0.764 shape=(1, 9000, 1)
logits [[ 4.8162193 -1.6489055  2.3736773 -8.5973835]]
Iteration 900 of 1000: loss=0.72 " + "l1=0.627" + "l2=0.0933 f=-0.761 shape=(1, 9000, 1)
logits [[ 4.6800275 -1.5900446  2.3408754 -8.47436  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.05 " + "l1=9.05" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[  6.425007   -2.6239285   3.1725483 -10.110462 ]]
Iteration 100 of 1000: loss=4.37 " + "l1=1.92" + "l2=2.45 f=-0.733 shape=(1, 9000, 1)
logits [[ 1.5423666  -0.37476027  1.2684838  -5.367461  ]]
Iteration 200 of 1000: loss=3 " + "l1=0.739" + "l2=2.26 f=-0.665 shape=(1, 9000, 1)
logits [[ 0.8206972   0.08384281  0.8226057  -4.3856883 ]]
Iteration 300 of 1000: loss=2.55 " + "l1=0.393" + "l2=2.16 f=-0.629 shape=(1, 9000, 1)
logits [[ 0.6366464   0.24414612  0.6273312  -4.022478  ]]
Iteration 400 of 1000: loss=2.23 " + "l1=0.158" + "l2=2.07 f=-0.614 shape=(1, 9000, 1)
logits [[ 0.48786232  0.3301339   0.48586905 -3.7605708 ]]
Iteration 500 of 1000: loss=1.94 " + "l1=0.00816" + "l2=1.93 f=-0.603 shape=(1, 9000, 1)
logits [[ 0.3820997   0.37875998  0.38691816 -3.560132  ]]
Iteration 600 of 1000: loss=1.79 " + "l1=0.0112" + "l2=1.78 f=-0.582 shape=(1, 9000, 1)
logits [[ 0.36638623  0.35688186  0.36810884 -3.4201298 ]]
Iteration 700 of 1000: loss=1.69 " + "l1=0" + "l2=1.69 f=-0.566 shape=(1, 9000, 1)
logits [[ 0.3410935   0.346938    0.34603804 -3.299348  ]]
Iteration 800 of 1000: loss=1.62 " + "l1=0.0266" + "l2=1.59 f=-0.556 shape=(1, 9000, 1)
logits [[ 0.34695727  0.32039616  0.3360884  -3.2279341 ]]
Iteration 900 of 1000: loss=1.54 " + "l1=0.00975" + "l2=1.53 f=-0.544 shape=(1, 9000, 1)
logits [[ 0.3161334   0.30670467  0.31645092 -3.116643  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.98 " + "l1=4.98" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[  6.425007   -2.6239285   3.1725483 -10.110462 ]]
Iteration 100 of 1000: loss=3.4 " + "l1=2.44" + "l2=0.956 f=-0.748 shape=(1, 9000, 1)
logits [[ 3.3724332 -1.0660121  1.8735533 -7.1738515]]
Iteration 200 of 1000: loss=2.67 " + "l1=1.46" + "l2=1.21 f=-0.698 shape=(1, 9000, 1)
logits [[ 2.0541935 -0.5977685  1.4716938 -5.7188253]]
Iteration 300 of 1000: loss=2.26 " + "l1=0.914" + "l2=1.34 f=-0.681 shape=(1, 9000, 1)
logits [[ 1.3565133  -0.30573407  1.2205282  -4.994843  ]]
Iteration 400 of 1000: loss=1.94 " + "l1=0.647" + "l2=1.3 f=-0.667 shape=(1, 9000, 1)
logits [[ 1.0144858  -0.16146962  1.0030818  -4.5255146 ]]
Iteration 500 of 1000: loss=1.73 " + "l1=0.493" + "l2=1.24 f=-0.656 shape=(1, 9000, 1)
logits [[ 0.8354259  -0.06152818  0.83267754 -4.2298975 ]]
Iteration 600 of 1000: loss=1.62 " + "l1=0.423" + "l2=1.19 f=-0.647 shape=(1, 9000, 1)
logits [[ 0.74889404 -0.01932918  0.750617   -4.0663033 ]]
Iteration 700 of 1000: loss=1.54 " + "l1=0.397" + "l2=1.14 f=-0.651 shape=(1, 9000, 1)
logits [[ 0.7120965  -0.0096042   0.70578945 -4.010479  ]]
Iteration 800 of 1000: loss=1.45 " + "l1=0.36" + "l2=1.09 f=-0.656 shape=(1, 9000, 1)
logits [[ 0.66151965  0.00664972  0.6537553  -3.9456625 ]]
Iteration 900 of 1000: loss=1.37 " + "l1=0.301" + "l2=1.07 f=-0.653 shape=(1, 9000, 1)
logits [[ 0.5809216   0.03279511  0.5714114  -3.796026  ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=7.01 " + "l1=7.01" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[  6.425007   -2.6239285   3.1725483 -10.110462 ]]
Iteration 100 of 1000: loss=4.04 " + "l1=2.41" + "l2=1.63 f=-0.744 shape=(1, 9000, 1)
logits [[ 2.3954728 -0.712024   1.5513713 -6.210166 ]]
Iteration 200 of 1000: loss=2.86 " + "l1=0.964" + "l2=1.9 f=-0.675 shape=(1, 9000, 1)
logits [[ 1.0745623 -0.169056   1.0644025 -4.668991 ]]
Iteration 300 of 1000: loss=2.44 " + "l1=0.71" + "l2=1.73 f=-0.633 shape=(1, 9000, 1)
logits [[ 0.892882   -0.0227169   0.88122666 -4.2851477 ]]
Iteration 400 of 1000: loss=2.16 " + "l1=0.475" + "l2=1.68 f=-0.616 shape=(1, 9000, 1)
logits [[ 0.69802815  0.08548009  0.6976342  -3.944461  ]]
Iteration 500 of 1000: loss=1.9 " + "l1=0.261" + "l2=1.64 f=-0.603 shape=(1, 9000, 1)
logits [[ 0.5312248   0.19712815  0.5342002  -3.6730542 ]]
Iteration 600 of 1000: loss=1.75 " + "l1=0.126" + "l2=1.63 f=-0.567 shape=(1, 9000, 1)
logits [[ 0.40991798  0.26612362  0.42914099 -3.3737729 ]]
Iteration 700 of 1000: loss=1.64 " + "l1=0.0349" + "l2=1.6 f=-0.546 shape=(1, 9000, 1)
logits [[ 0.32784355  0.29922158  0.34424636 -3.1566687 ]]
Iteration 800 of 1000: loss=1.54 " + "l1=0.00168" + "l2=1.54 f=-0.532 shape=(1, 9000, 1)
logits [[ 0.28197062  0.29631242  0.29848245 -3.0043983 ]]
Iteration 900 of 1000: loss=1.44 " + "l1=0" + "l2=1.44 f=-0.523 shape=(1, 9000, 1)
logits [[ 0.26831087  0.27681896  0.2752754  -2.911414  ]]
--- 282.7742209434509 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0325 " + "l1=0.0325" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[  6.425007   -2.6239285   3.1725483 -10.110462 ]]
Iteration 100 of 1000: loss=0.0323 " + "l1=0.0321" + "l2=0.000205 f=-0.784 shape=(1, 9000, 1)
logits [[  6.3923516  -2.6284962   3.1841667 -10.083626 ]]
Iteration 200 of 1000: loss=0.0322 " + "l1=0.032" + "l2=0.000184 f=-0.784 shape=(1, 9000, 1)
logits [[  6.390116   -2.6282754   3.1853664 -10.082724 ]]
Iteration 300 of 1000: loss=0.0322 " + "l1=0.032" + "l2=0.000222 f=-0.784 shape=(1, 9000, 1)
logits [[  6.385769   -2.6286821   3.1879482 -10.080269 ]]
Iteration 400 of 1000: loss=0.0322 " + "l1=0.0319" + "l2=0.000286 f=-0.784 shape=(1, 9000, 1)
logits [[  6.3811455  -2.629242    3.1909966 -10.077962 ]]
Iteration 500 of 1000: loss=0.0322 " + "l1=0.0318" + "l2=0.000345 f=-0.784 shape=(1, 9000, 1)
logits [[  6.376381   -2.6298375   3.194265  -10.075809 ]]
Iteration 600 of 1000: loss=0.0321 " + "l1=0.0317" + "l2=0.000412 f=-0.784 shape=(1, 9000, 1)
logits [[  6.3713737  -2.6303136   3.1975765 -10.073615 ]]
Iteration 700 of 1000: loss=0.0321 " + "l1=0.0317" + "l2=0.000451 f=-0.784 shape=(1, 9000, 1)
logits [[  6.366344   -2.6306887   3.2008789 -10.071525 ]]
Iteration 800 of 1000: loss=0.0321 " + "l1=0.0316" + "l2=0.000569 f=-0.784 shape=(1, 9000, 1)
logits [[  6.361313   -2.6309624   3.2041287 -10.069526 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.325 " + "l1=0.325" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[  6.425007   -2.6239285   3.1725483 -10.110462 ]]
Iteration 100 of 1000: loss=0.304 " + "l1=0.293" + "l2=0.0113 f=-0.782 shape=(1, 9000, 1)
logits [[ 6.191454  -2.6622076  3.2621915 -9.920771 ]]
Iteration 200 of 1000: loss=0.295 " + "l1=0.28" + "l2=0.0156 f=-0.78 shape=(1, 9000, 1)
logits [[ 6.104921  -2.6803794  3.3059697 -9.849934 ]]
Iteration 300 of 1000: loss=0.286 " + "l1=0.266" + "l2=0.0203 f=-0.777 shape=(1, 9000, 1)
logits [[ 6.0167737 -2.7026339  3.3606026 -9.781871 ]]
Iteration 400 of 1000: loss=0.275 " + "l1=0.249" + "l2=0.0262 f=-0.77 shape=(1, 9000, 1)
logits [[ 5.9102383 -2.7256703  3.4218423 -9.687154 ]]
Iteration 500 of 1000: loss=0.264 " + "l1=0.233" + "l2=0.0307 f=-0.764 shape=(1, 9000, 1)
logits [[ 5.807085  -2.736449   3.4725676 -9.5986395]]
Iteration 600 of 1000: loss=0.255 " + "l1=0.222" + "l2=0.0329 f=-0.759 shape=(1, 9000, 1)
logits [[ 5.7309957 -2.7394922  3.5123675 -9.540285 ]]
Iteration 700 of 1000: loss=0.245 " + "l1=0.209" + "l2=0.036 f=-0.756 shape=(1, 9000, 1)
logits [[ 5.649741  -2.74832    3.5593193 -9.482893 ]]
Iteration 800 of 1000: loss=0.234 " + "l1=0.196" + "l2=0.0386 f=-0.751 shape=(1, 9000, 1)
logits [[ 5.558946  -2.7524624  3.6015284 -9.411166 ]]
Iteration 900 of 1000: loss=0.223 " + "l1=0.183" + "l2=0.0406 f=-0.744 shape=(1, 9000, 1)
logits [[ 5.4631166 -2.7556689  3.637559  -9.321211 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.25 " + "l1=3.25" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[  6.425007   -2.6239285   3.1725483 -10.110462 ]]
Iteration 100 of 1000: loss=0.899 " + "l1=0.0123" + "l2=0.886 f=-0.759 shape=(1, 9000, 1)
logits [[ 3.9308743 -2.9998646  3.918525  -7.886341 ]]
Iteration 200 of 1000: loss=0.608 " + "l1=0" + "l2=0.608 f=-0.752 shape=(1, 9000, 1)
logits [[ 3.9496307 -3.0412233  3.9620986 -7.879099 ]]
Iteration 300 of 1000: loss=0.511 " + "l1=0.00793" + "l2=0.503 f=-0.741 shape=(1, 9000, 1)
logits [[ 4.0113816 -3.06827    4.003452  -7.911792 ]]
Iteration 400 of 1000: loss=0.464 " + "l1=0" + "l2=0.464 f=-0.738 shape=(1, 9000, 1)
logits [[ 4.0124607 -3.1016297  4.04655   -7.909607 ]]
Iteration 500 of 1000: loss=0.407 " + "l1=0" + "l2=0.407 f=-0.732 shape=(1, 9000, 1)
logits [[ 4.036133  -3.1013432  4.0501213 -7.914846 ]]
Iteration 600 of 1000: loss=0.375 " + "l1=0" + "l2=0.375 f=-0.73 shape=(1, 9000, 1)
logits [[ 4.0076556 -3.0994318  4.054097  -7.884129 ]]
Iteration 700 of 1000: loss=0.332 " + "l1=0.01" + "l2=0.322 f=-0.73 shape=(1, 9000, 1)
logits [[ 4.050619  -3.0856478  4.040617  -7.926076 ]]
Iteration 800 of 1000: loss=0.298 " + "l1=0.00222" + "l2=0.296 f=-0.73 shape=(1, 9000, 1)
logits [[ 4.034626  -3.0777826  4.032403  -7.907754 ]]
Iteration 900 of 1000: loss=0.275 " + "l1=0" + "l2=0.275 f=-0.73 shape=(1, 9000, 1)
logits [[ 4.012299  -3.0719242  4.026731  -7.8859277]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.79 " + "l1=1.79" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[  6.425007   -2.6239285   3.1725483 -10.110462 ]]
Iteration 100 of 1000: loss=0.982 " + "l1=0.511" + "l2=0.472 f=-0.743 shape=(1, 9000, 1)
logits [[ 4.6880403 -2.8824117  3.759322  -8.538007 ]]
Iteration 200 of 1000: loss=0.633 " + "l1=0.0585" + "l2=0.575 f=-0.738 shape=(1, 9000, 1)
logits [[ 4.0440817 -2.9911816  3.9376473 -7.941147 ]]
Iteration 300 of 1000: loss=0.467 " + "l1=0.00232" + "l2=0.464 f=-0.737 shape=(1, 9000, 1)
logits [[ 4.029744  -3.0704873  4.025518  -7.9323616]]
Iteration 400 of 1000: loss=0.386 " + "l1=0.00516" + "l2=0.381 f=-0.731 shape=(1, 9000, 1)
logits [[ 4.07852   -3.0944061  4.069145  -7.9770584]]
Iteration 500 of 1000: loss=0.325 " + "l1=0" + "l2=0.325 f=-0.728 shape=(1, 9000, 1)
logits [[ 4.083075  -3.0998702  4.0860467 -7.980966 ]]
Iteration 600 of 1000: loss=0.285 " + "l1=0.00171" + "l2=0.283 f=-0.726 shape=(1, 9000, 1)
logits [[ 4.0635686 -3.0798287  4.060467  -7.950098 ]]
Iteration 700 of 1000: loss=0.252 " + "l1=0.00232" + "l2=0.25 f=-0.724 shape=(1, 9000, 1)
logits [[ 4.0434246 -3.0627284  4.039209  -7.916688 ]]
Iteration 800 of 1000: loss=0.226 " + "l1=0" + "l2=0.226 f=-0.725 shape=(1, 9000, 1)
logits [[ 4.0183277 -3.0530562  4.023859  -7.8896613]]
Iteration 900 of 1000: loss=0.205 " + "l1=0" + "l2=0.205 f=-0.726 shape=(1, 9000, 1)
logits [[ 3.9999032 -3.0400188  4.004304  -7.8696074]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.06 " + "l1=1.06" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[  6.425007   -2.6239285   3.1725483 -10.110462 ]]
Iteration 100 of 1000: loss=0.799 " + "l1=0.65" + "l2=0.149 f=-0.764 shape=(1, 9000, 1)
logits [[ 5.524527  -2.7909048  3.5248284 -9.315358 ]]
Iteration 200 of 1000: loss=0.639 " + "l1=0.409" + "l2=0.23 f=-0.742 shape=(1, 9000, 1)
logits [[ 5.00834   -2.8796003  3.749269  -8.846331 ]]
Iteration 300 of 1000: loss=0.53 " + "l1=0.263" + "l2=0.267 f=-0.741 shape=(1, 9000, 1)
logits [[ 4.6836133 -2.9555066  3.8729565 -8.565562 ]]
Iteration 400 of 1000: loss=0.443 " + "l1=0.16" + "l2=0.283 f=-0.736 shape=(1, 9000, 1)
logits [[ 4.471366  -3.0169609  3.9782553 -8.374912 ]]
Iteration 500 of 1000: loss=0.343 " + "l1=0.0397" + "l2=0.303 f=-0.725 shape=(1, 9000, 1)
logits [[ 4.201847  -3.084726   4.0795817 -8.096914 ]]
Iteration 600 of 1000: loss=0.265 " + "l1=0.00238" + "l2=0.263 f=-0.712 shape=(1, 9000, 1)
logits [[ 4.0917907 -3.0731485  4.084459  -7.949543 ]]
Iteration 700 of 1000: loss=0.214 " + "l1=0.00127" + "l2=0.213 f=-0.707 shape=(1, 9000, 1)
logits [[ 4.053148  -3.0161772  4.0492373 -7.9145274]]
Iteration 800 of 1000: loss=0.185 " + "l1=0.00229" + "l2=0.183 f=-0.706 shape=(1, 9000, 1)
logits [[ 4.0198703 -2.9817317  4.01281   -7.8753133]]
Iteration 900 of 1000: loss=0.166 " + "l1=0" + "l2=0.166 f=-0.711 shape=(1, 9000, 1)
logits [[ 3.9746351 -2.9611473  3.9785454 -7.8351645]]
--- 274.8505947589874 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.165 " + "l1=0.165" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[  6.425007   -2.6239285   3.1725483 -10.110462 ]]
Iteration 100 of 1000: loss=0.164 " + "l1=0.164" + "l2=0.000674 f=-0.778 shape=(1, 9000, 1)
logits [[  6.3484483  -2.6001112   3.1422067 -10.004427 ]]
Iteration 200 of 1000: loss=0.164 " + "l1=0.163" + "l2=0.000792 f=-0.777 shape=(1, 9000, 1)
logits [[ 6.3292885 -2.5936368  3.1338854 -9.978714 ]]
Iteration 300 of 1000: loss=0.164 " + "l1=0.163" + "l2=0.00102 f=-0.776 shape=(1, 9000, 1)
logits [[ 6.309072  -2.5861685  3.1244786 -9.950951 ]]
Iteration 400 of 1000: loss=0.163 " + "l1=0.162" + "l2=0.00124 f=-0.775 shape=(1, 9000, 1)
logits [[ 6.2908735 -2.579139   3.1157613 -9.925868 ]]
Iteration 500 of 1000: loss=0.163 " + "l1=0.162" + "l2=0.00139 f=-0.773 shape=(1, 9000, 1)
logits [[ 6.2743907 -2.571798   3.1071374 -9.903566 ]]
Iteration 600 of 1000: loss=0.163 " + "l1=0.161" + "l2=0.00158 f=-0.772 shape=(1, 9000, 1)
logits [[ 6.2599797 -2.5656567  3.1003256 -9.884584 ]]
Iteration 700 of 1000: loss=0.163 " + "l1=0.161" + "l2=0.00176 f=-0.772 shape=(1, 9000, 1)
logits [[ 6.2467275 -2.5601315  3.0943315 -9.867376 ]]
Iteration 800 of 1000: loss=0.163 " + "l1=0.161" + "l2=0.002 f=-0.771 shape=(1, 9000, 1)
logits [[ 6.2336    -2.555034   3.0887735 -9.85064  ]]
Iteration 900 of 1000: loss=0.163 " + "l1=0.161" + "l2=0.00214 f=-0.77 shape=(1, 9000, 1)
logits [[ 6.2211747 -2.55069    3.0841386 -9.835291 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.65 " + "l1=1.65" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[  6.425007   -2.6239285   3.1725483 -10.110462 ]]
Iteration 100 of 1000: loss=1.55 " + "l1=1.49" + "l2=0.0569 f=-0.732 shape=(1, 9000, 1)
logits [[ 5.743562  -2.4179678  2.921077  -9.17602  ]]
Iteration 200 of 1000: loss=1.49 " + "l1=1.4" + "l2=0.0903 f=-0.699 shape=(1, 9000, 1)
logits [[ 5.382073  -2.3239744  2.7879574 -8.641348 ]]
Iteration 300 of 1000: loss=1.44 " + "l1=1.31" + "l2=0.131 f=-0.658 shape=(1, 9000, 1)
logits [[ 5.0018725 -2.2277672  2.693002  -8.099742 ]]
Iteration 400 of 1000: loss=1.39 " + "l1=1.23" + "l2=0.166 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.660249  -2.1471682  2.6202016 -7.6102777]]
Iteration 500 of 1000: loss=1.35 " + "l1=1.16" + "l2=0.186 f=-0.59 shape=(1, 9000, 1)
logits [[ 4.4055843 -2.0858004  2.5493236 -7.228298 ]]
Iteration 600 of 1000: loss=1.31 " + "l1=1.11" + "l2=0.2 f=-0.573 shape=(1, 9000, 1)
logits [[ 4.1861463 -2.0409474  2.4796855 -6.9149084]]
Iteration 700 of 1000: loss=1.27 " + "l1=1.05" + "l2=0.219 f=-0.556 shape=(1, 9000, 1)
logits [[ 3.9336758 -2.0125575  2.4124608 -6.557806 ]]
Iteration 800 of 1000: loss=1.23 " + "l1=0.999" + "l2=0.234 f=-0.544 shape=(1, 9000, 1)
logits [[ 3.7279701 -1.9992915  2.357864  -6.2611885]]
Iteration 900 of 1000: loss=1.19 " + "l1=0.945" + "l2=0.25 f=-0.535 shape=(1, 9000, 1)
logits [[ 3.4985101 -1.9825215  2.2894142 -5.9469953]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=16.5 " + "l1=16.5" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[  6.425007   -2.6239285   3.1725483 -10.110462 ]]
Iteration 100 of 1000: loss=6.51 " + "l1=2.56" + "l2=3.96 f=-0.394 shape=(1, 9000, 1)
logits [[ 0.5370998  -0.78879446  0.6163183  -1.940647  ]]
Iteration 200 of 1000: loss=3.83 " + "l1=0.032" + "l2=3.8 f=-0.259 shape=(1, 9000, 1)
logits [[-0.3374995  -0.4694724  -0.09846187 -0.13049906]]
Iteration 300 of 1000: loss=3.18 " + "l1=0.0131" + "l2=3.16 f=-0.233 shape=(1, 9000, 1)
logits [[-0.23885006 -0.4984774  -0.09172382 -0.1048414 ]]
Iteration 400 of 1000: loss=2.88 " + "l1=0" + "l2=2.88 f=-0.223 shape=(1, 9000, 1)
logits [[-0.18843327 -0.48617297 -0.11468492 -0.10394453]]
Iteration 500 of 1000: loss=2.66 " + "l1=0.000733" + "l2=2.66 f=-0.216 shape=(1, 9000, 1)
logits [[-0.13038824 -0.49882537 -0.11766397 -0.11839738]]
Iteration 600 of 1000: loss=2.5 " + "l1=0" + "l2=2.5 f=-0.212 shape=(1, 9000, 1)
logits [[-0.11063127 -0.5229548  -0.10840606 -0.10694501]]
Iteration 700 of 1000: loss=2.37 " + "l1=0.0135" + "l2=2.36 f=-0.212 shape=(1, 9000, 1)
logits [[-0.0965745  -0.5545433  -0.09226007 -0.10575043]]
Iteration 800 of 1000: loss=2.26 " + "l1=0" + "l2=2.26 f=-0.212 shape=(1, 9000, 1)
logits [[-0.10020377 -0.5757585  -0.08929021 -0.08363085]]
Iteration 900 of 1000: loss=2.16 " + "l1=0.0204" + "l2=2.14 f=-0.218 shape=(1, 9000, 1)
logits [[-0.07910932 -0.6131081  -0.07975069 -0.09947012]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=9.09 " + "l1=9.09" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[  6.425007   -2.6239285   3.1725483 -10.110462 ]]
Iteration 100 of 1000: loss=5.25 " + "l1=3.28" + "l2=1.97 f=-0.525 shape=(1, 9000, 1)
logits [[ 1.833429  -1.4475595  1.6472672 -4.134372 ]]
Iteration 200 of 1000: loss=3.8 " + "l1=1.65" + "l2=2.15 f=-0.391 shape=(1, 9000, 1)
logits [[ 0.77146286 -0.8825112   0.7706389  -2.2241945 ]]
Iteration 300 of 1000: loss=3.09 " + "l1=0.764" + "l2=2.33 f=-0.299 shape=(1, 9000, 1)
logits [[ 0.26348928 -0.6473129   0.2885964  -1.1006162 ]]
Iteration 400 of 1000: loss=2.66 " + "l1=0.279" + "l2=2.38 f=-0.271 shape=(1, 9000, 1)
logits [[-0.02152077 -0.5752824   0.01087167 -0.4968751 ]]
Iteration 500 of 1000: loss=2.3 " + "l1=0.0303" + "l2=2.27 f=-0.251 shape=(1, 9000, 1)
logits [[-0.18936938 -0.54514265 -0.10692418 -0.16203639]]
Iteration 600 of 1000: loss=2.05 " + "l1=0.0134" + "l2=2.04 f=-0.251 shape=(1, 9000, 1)
logits [[-0.18256474 -0.5784417  -0.10940082 -0.1337409 ]]
Iteration 700 of 1000: loss=1.91 " + "l1=0.0334" + "l2=1.88 f=-0.25 shape=(1, 9000, 1)
logits [[-0.13513534 -0.6211061  -0.09128308 -0.15200245]]
Iteration 800 of 1000: loss=1.81 " + "l1=0.0156" + "l2=1.79 f=-0.246 shape=(1, 9000, 1)
logits [[-0.13276029 -0.65377724 -0.08361468 -0.11204956]]
Iteration 900 of 1000: loss=1.72 " + "l1=0.0137" + "l2=1.71 f=-0.245 shape=(1, 9000, 1)
logits [[-0.128003   -0.6813851  -0.07369644 -0.09867666]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.37 " + "l1=5.37" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[  6.425007   -2.6239285   3.1725483 -10.110462 ]]
Iteration 100 of 1000: loss=3.97 " + "l1=3.12" + "l2=0.847 f=-0.593 shape=(1, 9000, 1)
logits [[ 3.4262314 -1.8418084  2.2288833 -6.184303 ]]
Iteration 200 of 1000: loss=3.27 " + "l1=2.09" + "l2=1.18 f=-0.512 shape=(1, 9000, 1)
logits [[ 2.0999565 -1.5412879  1.7322824 -4.3380713]]
Iteration 300 of 1000: loss=2.81 " + "l1=1.44" + "l2=1.37 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.253107  -1.2054293  1.2582756 -3.1582544]]
Iteration 400 of 1000: loss=2.55 " + "l1=1.13" + "l2=1.42 f=-0.423 shape=(1, 9000, 1)
logits [[ 0.92707956 -0.99970657  0.9194725  -2.5396826 ]]
Iteration 500 of 1000: loss=2.31 " + "l1=0.85" + "l2=1.46 f=-0.393 shape=(1, 9000, 1)
logits [[ 0.6333818  -0.85588187  0.63059795 -1.9813377 ]]
Iteration 600 of 1000: loss=2.08 " + "l1=0.659" + "l2=1.42 f=-0.358 shape=(1, 9000, 1)
logits [[ 0.45840016 -0.7928284   0.46404135 -1.5630339 ]]
Iteration 700 of 1000: loss=1.91 " + "l1=0.519" + "l2=1.39 f=-0.332 shape=(1, 9000, 1)
logits [[ 0.3529336  -0.78808355  0.35077795 -1.2449715 ]]
Iteration 800 of 1000: loss=1.77 " + "l1=0.39" + "l2=1.38 f=-0.31 shape=(1, 9000, 1)
logits [[ 0.24613193 -0.7896413   0.25142175 -0.9496952 ]]
Iteration 900 of 1000: loss=1.67 " + "l1=0.319" + "l2=1.35 f=-0.299 shape=(1, 9000, 1)
logits [[ 0.19942635 -0.8218382   0.20392159 -0.7761301 ]]
--- 286.7300980091095 seconds ---
Adv result:3
Loading record A03469
(1, 3804)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0577 " + "l1=0.0577" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 3.4618027 -2.3105764 -1.079666  -2.770088 ]]
Iteration 100 of 1000: loss=0.0559 " + "l1=0.0551" + "l2=0.000818 f=-0.67 shape=(1, 9000, 1)
logits [[ 3.293063  -2.213996  -1.0564837 -2.7041996]]
Iteration 200 of 1000: loss=0.0551 " + "l1=0.054" + "l2=0.00109 f=-0.666 shape=(1, 9000, 1)
logits [[ 3.2277005 -2.171536  -1.0346358 -2.6872933]]
Iteration 300 of 1000: loss=0.0542 " + "l1=0.0529" + "l2=0.0014 f=-0.662 shape=(1, 9000, 1)
logits [[ 3.15725   -2.1277723 -1.012675  -2.6663432]]
Iteration 400 of 1000: loss=0.0534 " + "l1=0.0517" + "l2=0.00172 f=-0.659 shape=(1, 9000, 1)
logits [[ 3.0826228 -2.0855777 -0.9924198 -2.6394565]]
Iteration 500 of 1000: loss=0.0525 " + "l1=0.0506" + "l2=0.00194 f=-0.656 shape=(1, 9000, 1)
logits [[ 3.0103612  -2.0473566  -0.97406036 -2.6109848 ]]
Iteration 600 of 1000: loss=0.0516 " + "l1=0.0495" + "l2=0.00217 f=-0.652 shape=(1, 9000, 1)
logits [[ 2.9366646 -2.010189  -0.9549966 -2.5782917]]
Iteration 700 of 1000: loss=0.0508 " + "l1=0.0482" + "l2=0.00255 f=-0.647 shape=(1, 9000, 1)
logits [[ 2.8535964 -1.9690746 -0.9342899 -2.5385203]]
Iteration 800 of 1000: loss=0.0498 " + "l1=0.0469" + "l2=0.00291 f=-0.642 shape=(1, 9000, 1)
logits [[ 2.7652783  -1.9276825  -0.91678053 -2.4876292 ]]
Iteration 900 of 1000: loss=0.0488 " + "l1=0.0456" + "l2=0.00316 f=-0.637 shape=(1, 9000, 1)
logits [[ 2.6743104 -1.8878118 -0.9031088 -2.431681 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.577 " + "l1=0.577" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 3.4618027 -2.3105764 -1.079666  -2.770088 ]]
Iteration 100 of 1000: loss=0.408 " + "l1=0.334" + "l2=0.0748 f=-0.632 shape=(1, 9000, 1)
logits [[ 1.8520504  -1.4847988  -0.85096806 -2.0458665 ]]
Iteration 200 of 1000: loss=0.301 " + "l1=0.193" + "l2=0.108 f=-0.605 shape=(1, 9000, 1)
logits [[ 0.86185336 -1.0705345  -0.67645156 -1.5348731 ]]
Iteration 300 of 1000: loss=0.187 " + "l1=0.0537" + "l2=0.133 f=-0.566 shape=(1, 9000, 1)
logits [[-0.10381135 -0.6410716  -0.80759823 -0.71185046]]
Iteration 400 of 1000: loss=0.106 " + "l1=0.000877" + "l2=0.105 f=-0.526 shape=(1, 9000, 1)
logits [[-0.4106241  -0.4193972  -0.8630475  -0.41140574]]
Iteration 500 of 1000: loss=0.0809 " + "l1=0.000377" + "l2=0.0805 f=-0.51 shape=(1, 9000, 1)
logits [[-0.37650317 -0.38027737 -0.8965053  -0.38796356]]
Iteration 600 of 1000: loss=0.0687 " + "l1=0" + "l2=0.0687 f=-0.502 shape=(1, 9000, 1)
logits [[-0.3627503  -0.35809848 -0.91666764 -0.3719664 ]]
Iteration 700 of 1000: loss=0.0615 " + "l1=0.000163" + "l2=0.0613 f=-0.497 shape=(1, 9000, 1)
logits [[-0.34563377 -0.34726176 -0.93219215 -0.36095953]]
Iteration 800 of 1000: loss=0.0563 " + "l1=7.37e-05" + "l2=0.0562 f=-0.489 shape=(1, 9000, 1)
logits [[-0.3337007  -0.33443722 -0.9306596  -0.3583573 ]]
Iteration 900 of 1000: loss=0.0514 " + "l1=0" + "l2=0.0514 f=-0.485 shape=(1, 9000, 1)
logits [[-0.33354264 -0.33180347 -0.9336844  -0.34015837]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.317 " + "l1=0.317" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 3.4618027 -2.3105764 -1.079666  -2.770088 ]]
Iteration 100 of 1000: loss=0.266 " + "l1=0.244" + "l2=0.0217 f=-0.651 shape=(1, 9000, 1)
logits [[ 2.6018016  -1.834478   -0.92299443 -2.4500468 ]]
Iteration 200 of 1000: loss=0.235 " + "l1=0.202" + "l2=0.033 f=-0.63 shape=(1, 9000, 1)
logits [[ 2.0879912 -1.578899  -0.7799516 -2.2498586]]
Iteration 300 of 1000: loss=0.203 " + "l1=0.16" + "l2=0.0429 f=-0.607 shape=(1, 9000, 1)
logits [[ 1.5650903 -1.3381561 -0.6755502 -1.9808214]]
Iteration 400 of 1000: loss=0.169 " + "l1=0.121" + "l2=0.0484 f=-0.588 shape=(1, 9000, 1)
logits [[ 1.0656754  -1.1323881  -0.68485993 -1.5993131 ]]
Iteration 500 of 1000: loss=0.135 " + "l1=0.0803" + "l2=0.0548 f=-0.561 shape=(1, 9000, 1)
logits [[ 0.5217161  -0.93829757 -0.76250774 -1.0648137 ]]
Iteration 600 of 1000: loss=0.103 " + "l1=0.0423" + "l2=0.0604 f=-0.526 shape=(1, 9000, 1)
logits [[ 0.01676563 -0.75187963 -0.86879027 -0.49840462]]
Iteration 700 of 1000: loss=0.0795 " + "l1=0.0233" + "l2=0.0562 f=-0.503 shape=(1, 9000, 1)
logits [[-0.22607091 -0.64682156 -0.91681707 -0.22345135]]
Iteration 800 of 1000: loss=0.0695 " + "l1=0.0191" + "l2=0.0504 f=-0.493 shape=(1, 9000, 1)
logits [[-0.23032565 -0.57793367 -0.9141048  -0.24893403]]
Iteration 900 of 1000: loss=0.0627 " + "l1=0.0132" + "l2=0.0496 f=-0.482 shape=(1, 9000, 1)
logits [[-0.25124878 -0.49070233 -0.91347945 -0.2715115 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.447 " + "l1=0.447" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 3.4618027 -2.3105764 -1.079666  -2.770088 ]]
Iteration 100 of 1000: loss=0.344 " + "l1=0.3" + "l2=0.0447 f=-0.642 shape=(1, 9000, 1)
logits [[ 2.2170832 -1.6496105 -0.8713264 -2.2649267]]
Iteration 200 of 1000: loss=0.28 " + "l1=0.211" + "l2=0.0685 f=-0.612 shape=(1, 9000, 1)
logits [[ 1.4419583 -1.2865663 -0.6737087 -1.9306214]]
Iteration 300 of 1000: loss=0.218 " + "l1=0.139" + "l2=0.0796 f=-0.591 shape=(1, 9000, 1)
logits [[ 0.767045   -1.0211005  -0.67364836 -1.4364958 ]]
Iteration 400 of 1000: loss=0.149 " + "l1=0.0551" + "l2=0.0939 f=-0.55 shape=(1, 9000, 1)
logits [[ 0.01355087 -0.69728434 -0.79028076 -0.724948  ]]
Iteration 500 of 1000: loss=0.0976 " + "l1=0.0116" + "l2=0.086 f=-0.513 shape=(1, 9000, 1)
logits [[-0.35670593 -0.4970836  -0.85104465 -0.34696305]]
Iteration 600 of 1000: loss=0.0766 " + "l1=0.000996" + "l2=0.0756 f=-0.498 shape=(1, 9000, 1)
logits [[-0.38251647 -0.3744794  -0.8734508  -0.36163408]]
Iteration 700 of 1000: loss=0.065 " + "l1=0.000497" + "l2=0.0645 f=-0.484 shape=(1, 9000, 1)
logits [[-0.33755514 -0.34396714 -0.89146405 -0.3641465 ]]
Iteration 800 of 1000: loss=0.0584 " + "l1=0" + "l2=0.0584 f=-0.479 shape=(1, 9000, 1)
logits [[-0.3344902  -0.32840726 -0.9109746  -0.34179765]]
Iteration 900 of 1000: loss=0.0548 " + "l1=0.00013" + "l2=0.0547 f=-0.471 shape=(1, 9000, 1)
logits [[-0.33341008 -0.31439382 -0.9237126  -0.31271297]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.382 " + "l1=0.382" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 3.4618027 -2.3105764 -1.079666  -2.770088 ]]
Iteration 100 of 1000: loss=0.306 " + "l1=0.273" + "l2=0.033 f=-0.646 shape=(1, 9000, 1)
logits [[ 2.3933365  -1.7345401  -0.89206123 -2.3524196 ]]
Iteration 200 of 1000: loss=0.261 " + "l1=0.213" + "l2=0.0487 f=-0.62 shape=(1, 9000, 1)
logits [[ 1.7742234  -1.4352522  -0.72224575 -2.0960534 ]]
Iteration 300 of 1000: loss=0.214 " + "l1=0.153" + "l2=0.0617 f=-0.599 shape=(1, 9000, 1)
logits [[ 1.1378902  -1.1659046  -0.64954907 -1.717617  ]]
Iteration 400 of 1000: loss=0.166 " + "l1=0.0976" + "l2=0.0685 f=-0.571 shape=(1, 9000, 1)
logits [[ 0.5450966 -0.928804  -0.723361  -1.1753727]]
Iteration 500 of 1000: loss=0.117 " + "l1=0.0385" + "l2=0.078 f=-0.533 shape=(1, 9000, 1)
logits [[-0.10255729 -0.6842421  -0.8553441  -0.49145842]]
Iteration 600 of 1000: loss=0.0857 " + "l1=0.0175" + "l2=0.0683 f=-0.509 shape=(1, 9000, 1)
logits [[-0.2890078  -0.5526645  -0.90286404 -0.29295754]]
Iteration 700 of 1000: loss=0.0713 " + "l1=0.00754" + "l2=0.0637 f=-0.497 shape=(1, 9000, 1)
logits [[-0.32082853 -0.4347117  -0.9046356  -0.32704425]]
Iteration 800 of 1000: loss=0.0624 " + "l1=0.00138" + "l2=0.061 f=-0.485 shape=(1, 9000, 1)
logits [[-0.32353586 -0.344312   -0.90851235 -0.3647715 ]]
Iteration 900 of 1000: loss=0.0568 " + "l1=0.000659" + "l2=0.0561 f=-0.477 shape=(1, 9000, 1)
logits [[-0.3289686  -0.3310148  -0.9276036  -0.32106066]]
--- 285.8977952003479 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0454 " + "l1=0.0454" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 3.4618027 -2.3105764 -1.079666  -2.770088 ]]
Iteration 100 of 1000: loss=0.044 " + "l1=0.0434" + "l2=0.00064 f=-0.671 shape=(1, 9000, 1)
logits [[ 3.3167386 -2.2594314 -1.0206523 -2.719478 ]]
Iteration 200 of 1000: loss=0.0434 " + "l1=0.0425" + "l2=0.000857 f=-0.667 shape=(1, 9000, 1)
logits [[ 3.2633016 -2.2331321 -0.9874524 -2.7104077]]
Iteration 300 of 1000: loss=0.0427 " + "l1=0.0415" + "l2=0.0012 f=-0.663 shape=(1, 9000, 1)
logits [[ 3.1991916 -2.2054024 -0.9492844 -2.6955495]]
Iteration 400 of 1000: loss=0.042 " + "l1=0.0405" + "l2=0.00153 f=-0.659 shape=(1, 9000, 1)
logits [[ 3.1333568 -2.1794965 -0.9136032 -2.677683 ]]
Iteration 500 of 1000: loss=0.0413 " + "l1=0.0394" + "l2=0.00185 f=-0.656 shape=(1, 9000, 1)
logits [[ 3.065108  -2.1548514 -0.8786641 -2.657001 ]]
Iteration 600 of 1000: loss=0.0406 " + "l1=0.0383" + "l2=0.00226 f=-0.653 shape=(1, 9000, 1)
logits [[ 2.9923573 -2.1270103 -0.841261  -2.634689 ]]
Iteration 700 of 1000: loss=0.0398 " + "l1=0.0372" + "l2=0.00257 f=-0.649 shape=(1, 9000, 1)
logits [[ 2.9176023 -2.0985994 -0.8068687 -2.60973  ]]
Iteration 800 of 1000: loss=0.0391 " + "l1=0.0362" + "l2=0.00289 f=-0.647 shape=(1, 9000, 1)
logits [[ 2.8429346 -2.0699766 -0.7746101 -2.5867305]]
Iteration 900 of 1000: loss=0.0384 " + "l1=0.0351" + "l2=0.00327 f=-0.645 shape=(1, 9000, 1)
logits [[ 2.769303   -2.0442965  -0.74539155 -2.5596664 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.454 " + "l1=0.454" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 3.4618027 -2.3105764 -1.079666  -2.770088 ]]
Iteration 100 of 1000: loss=0.304 " + "l1=0.243" + "l2=0.0605 f=-0.616 shape=(1, 9000, 1)
logits [[ 2.0216968  -1.8647165  -0.40981904 -2.2116969 ]]
Iteration 200 of 1000: loss=0.223 " + "l1=0.15" + "l2=0.0736 f=-0.602 shape=(1, 9000, 1)
logits [[ 1.3283243  -1.6686094  -0.16853233 -1.8995658 ]]
Iteration 300 of 1000: loss=0.166 " + "l1=0.0857" + "l2=0.0807 f=-0.58 shape=(1, 9000, 1)
logits [[ 0.767412   -1.5624845  -0.08938174 -1.4341019 ]]
Iteration 400 of 1000: loss=0.113 " + "l1=0.0259" + "l2=0.0874 f=-0.532 shape=(1, 9000, 1)
logits [[ 0.17804095 -1.4997501  -0.08108514 -0.7252167 ]]
Iteration 500 of 1000: loss=0.0749 " + "l1=0.000865" + "l2=0.074 f=-0.493 shape=(1, 9000, 1)
logits [[-0.13423385 -1.502971   -0.14288135 -0.19355047]]
Iteration 600 of 1000: loss=0.0594 " + "l1=0" + "l2=0.0594 f=-0.483 shape=(1, 9000, 1)
logits [[-0.12511645 -1.559678   -0.12087897 -0.1279732 ]]
Iteration 700 of 1000: loss=0.0507 " + "l1=0.000689" + "l2=0.05 f=-0.473 shape=(1, 9000, 1)
logits [[-0.09049553 -1.6042856  -0.09738654 -0.10111956]]
Iteration 800 of 1000: loss=0.0454 " + "l1=4.45e-05" + "l2=0.0454 f=-0.467 shape=(1, 9000, 1)
logits [[-0.06509413 -1.6468238  -0.06553882 -0.08934689]]
Iteration 900 of 1000: loss=0.0427 " + "l1=0.00104" + "l2=0.0416 f=-0.463 shape=(1, 9000, 1)
logits [[-0.04265776 -1.6749706  -0.05304076 -0.08189954]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.25 " + "l1=0.25" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 3.4618027 -2.3105764 -1.079666  -2.770088 ]]
Iteration 100 of 1000: loss=0.205 " + "l1=0.187" + "l2=0.0171 f=-0.655 shape=(1, 9000, 1)
logits [[ 2.6825635  -2.062744   -0.72513956 -2.5130882 ]]
Iteration 200 of 1000: loss=0.175 " + "l1=0.147" + "l2=0.0282 f=-0.643 shape=(1, 9000, 1)
logits [[ 2.2020822  -1.8944829  -0.46703392 -2.4118137 ]]
Iteration 300 of 1000: loss=0.147 " + "l1=0.109" + "l2=0.038 f=-0.624 shape=(1, 9000, 1)
logits [[ 1.714103   -1.7625753  -0.27159008 -2.1763868 ]]
Iteration 400 of 1000: loss=0.124 " + "l1=0.0835" + "l2=0.0403 f=-0.596 shape=(1, 9000, 1)
logits [[ 1.3325381  -1.7130842  -0.18474811 -1.8178333 ]]
Iteration 500 of 1000: loss=0.106 " + "l1=0.0658" + "l2=0.0406 f=-0.576 shape=(1, 9000, 1)
logits [[ 1.0251307  -1.6850181  -0.17172264 -1.4717616 ]]
Iteration 600 of 1000: loss=0.0865 " + "l1=0.043" + "l2=0.0435 f=-0.547 shape=(1, 9000, 1)
logits [[ 0.6344144  -1.6628498  -0.14799803 -1.0119638 ]]
Iteration 700 of 1000: loss=0.0704 " + "l1=0.0261" + "l2=0.0443 f=-0.525 shape=(1, 9000, 1)
logits [[ 0.3255976  -1.6629828  -0.14873126 -0.6158556 ]]
Iteration 800 of 1000: loss=0.0556 " + "l1=0.00961" + "l2=0.046 f=-0.501 shape=(1, 9000, 1)
logits [[ 0.02053408 -1.6886615  -0.1542049  -0.1810711 ]]
Iteration 900 of 1000: loss=0.0445 " + "l1=0.00343" + "l2=0.0411 f=-0.486 shape=(1, 9000, 1)
logits [[-0.04795656 -1.7225664  -0.11027697 -0.0647226 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.352 " + "l1=0.352" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 3.4618027 -2.3105764 -1.079666  -2.770088 ]]
Iteration 100 of 1000: loss=0.263 " + "l1=0.23" + "l2=0.0333 f=-0.648 shape=(1, 9000, 1)
logits [[ 2.3790734  -1.9715621  -0.58809197 -2.4110053 ]]
Iteration 200 of 1000: loss=0.2 " + "l1=0.149" + "l2=0.0514 f=-0.61 shape=(1, 9000, 1)
logits [[ 1.6800308  -1.7501253  -0.23641971 -2.1338003 ]]
Iteration 300 of 1000: loss=0.161 " + "l1=0.103" + "l2=0.0576 f=-0.589 shape=(1, 9000, 1)
logits [[ 1.193048   -1.6593863  -0.14059043 -1.7508255 ]]
Iteration 400 of 1000: loss=0.128 " + "l1=0.0671" + "l2=0.0613 f=-0.569 shape=(1, 9000, 1)
logits [[ 0.7472449  -1.5767769  -0.11805491 -1.3299489 ]]
Iteration 500 of 1000: loss=0.0949 " + "l1=0.0307" + "l2=0.0642 f=-0.526 shape=(1, 9000, 1)
logits [[ 0.2911125  -1.5520843  -0.10506487 -0.7375199 ]]
Iteration 600 of 1000: loss=0.0681 " + "l1=0.00238" + "l2=0.0658 f=-0.493 shape=(1, 9000, 1)
logits [[-0.09542416 -1.5496517  -0.12610143 -0.201392  ]]
Iteration 700 of 1000: loss=0.0542 " + "l1=6.55e-05" + "l2=0.0542 f=-0.48 shape=(1, 9000, 1)
logits [[-0.11072797 -1.5878795  -0.11146351 -0.11061803]]
Iteration 800 of 1000: loss=0.0476 " + "l1=0.000761" + "l2=0.0469 f=-0.469 shape=(1, 9000, 1)
logits [[-0.07203201 -1.6251705  -0.08185572 -0.09645681]]
Iteration 900 of 1000: loss=0.0432 " + "l1=8.36e-05" + "l2=0.0432 f=-0.464 shape=(1, 9000, 1)
logits [[-0.06205814 -1.6548679  -0.06313747 -0.07550091]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.301 " + "l1=0.301" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 3.4618027 -2.3105764 -1.079666  -2.770088 ]]
Iteration 100 of 1000: loss=0.235 " + "l1=0.211" + "l2=0.0246 f=-0.653 shape=(1, 9000, 1)
logits [[ 2.5262413  -2.016543   -0.65399027 -2.4674623 ]]
Iteration 200 of 1000: loss=0.188 " + "l1=0.144" + "l2=0.0432 f=-0.619 shape=(1, 9000, 1)
logits [[ 1.8823187 -1.7956772 -0.296629  -2.2657971]]
Iteration 300 of 1000: loss=0.154 " + "l1=0.108" + "l2=0.0467 f=-0.6 shape=(1, 9000, 1)
logits [[ 1.4389946  -1.7063885  -0.18493824 -1.9489956 ]]
Iteration 400 of 1000: loss=0.129 " + "l1=0.0803" + "l2=0.0488 f=-0.577 shape=(1, 9000, 1)
logits [[ 1.0612758  -1.6437368  -0.15145443 -1.5733577 ]]
Iteration 500 of 1000: loss=0.103 " + "l1=0.0497" + "l2=0.0533 f=-0.534 shape=(1, 9000, 1)
logits [[ 0.64425766 -1.616827   -0.10565108 -1.0563902 ]]
Iteration 600 of 1000: loss=0.0797 " + "l1=0.0257" + "l2=0.0539 f=-0.507 shape=(1, 9000, 1)
logits [[ 0.27193704 -1.5916514  -0.11654232 -0.5925265 ]]
Iteration 700 of 1000: loss=0.0609 " + "l1=0.00559" + "l2=0.0554 f=-0.482 shape=(1, 9000, 1)
logits [[-0.05910698 -1.5849073  -0.14354323 -0.14148587]]
Iteration 800 of 1000: loss=0.0505 " + "l1=0.00152" + "l2=0.049 f=-0.468 shape=(1, 9000, 1)
logits [[-0.07385387 -1.6160967  -0.0967309  -0.08525069]]
Iteration 900 of 1000: loss=0.0443 " + "l1=0.000156" + "l2=0.0441 f=-0.46 shape=(1, 9000, 1)
logits [[-0.05418633 -1.6459519  -0.0565432  -0.08489972]]
--- 286.3195278644562 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0623 " + "l1=0.0623" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 3.4618027 -2.3105764 -1.079666  -2.770088 ]]
Iteration 100 of 1000: loss=0.06 " + "l1=0.059" + "l2=0.00103 f=-0.673 shape=(1, 9000, 1)
logits [[ 3.2780344 -2.2685933 -1.0778596 -2.6225154]]
Iteration 200 of 1000: loss=0.0591 " + "l1=0.0578" + "l2=0.00133 f=-0.672 shape=(1, 9000, 1)
logits [[ 3.2128665 -2.256746  -1.0747949 -2.5680087]]
Iteration 300 of 1000: loss=0.0581 " + "l1=0.0564" + "l2=0.00171 f=-0.67 shape=(1, 9000, 1)
logits [[ 3.1362958 -2.244448  -1.0704128 -2.5021553]]
Iteration 400 of 1000: loss=0.0569 " + "l1=0.0547" + "l2=0.00212 f=-0.668 shape=(1, 9000, 1)
logits [[ 3.0483432 -2.226192  -1.0676341 -2.4262881]]
Iteration 500 of 1000: loss=0.0553 " + "l1=0.0527" + "l2=0.0026 f=-0.664 shape=(1, 9000, 1)
logits [[ 2.9434733 -2.2058983 -1.0648377 -2.3298562]]
Iteration 600 of 1000: loss=0.0536 " + "l1=0.0504" + "l2=0.00316 f=-0.659 shape=(1, 9000, 1)
logits [[ 2.8242729 -2.1801672 -1.0624533 -2.2184505]]
Iteration 700 of 1000: loss=0.0516 " + "l1=0.0478" + "l2=0.00374 f=-0.653 shape=(1, 9000, 1)
logits [[ 2.692548  -2.1488647 -1.0640202 -2.0919766]]
Iteration 800 of 1000: loss=0.0496 " + "l1=0.0451" + "l2=0.00451 f=-0.646 shape=(1, 9000, 1)
logits [[ 2.549987  -2.1113598 -1.0662756 -1.9568228]]
Iteration 900 of 1000: loss=0.0473 " + "l1=0.0422" + "l2=0.00513 f=-0.638 shape=(1, 9000, 1)
logits [[ 2.4036443 -2.0701895 -1.0715345 -1.815254 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.623 " + "l1=0.623" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 3.4618027 -2.3105764 -1.079666  -2.770088 ]]
Iteration 100 of 1000: loss=0.352 " + "l1=0.215" + "l2=0.137 f=-0.619 shape=(1, 9000, 1)
logits [[ 1.2961172 -1.7488841 -1.1728264 -0.8502184]]
Iteration 200 of 1000: loss=0.138 " + "l1=0.000192" + "l2=0.138 f=-0.495 shape=(1, 9000, 1)
logits [[ 0.3485514  -1.6079906  -1.0671259   0.34662652]]
Iteration 300 of 1000: loss=0.067 " + "l1=0" + "l2=0.067 f=-0.495 shape=(1, 9000, 1)
logits [[ 0.3454881 -1.6651843 -1.0193198  0.3594862]]
Iteration 400 of 1000: loss=0.0428 " + "l1=0" + "l2=0.0428 f=-0.494 shape=(1, 9000, 1)
logits [[ 0.35658678 -1.6883769  -1.0192575   0.37533197]]
Iteration 500 of 1000: loss=0.0309 " + "l1=0" + "l2=0.0309 f=-0.491 shape=(1, 9000, 1)
logits [[ 0.37746677 -1.698598   -1.0257852   0.38485795]]
Iteration 600 of 1000: loss=0.025 " + "l1=0" + "l2=0.025 f=-0.489 shape=(1, 9000, 1)
logits [[ 0.37784    -1.7045059  -1.042567    0.41421303]]
Iteration 700 of 1000: loss=0.0212 " + "l1=0" + "l2=0.0212 f=-0.488 shape=(1, 9000, 1)
logits [[ 0.39535898 -1.7133623  -1.0570139   0.4214849 ]]
Iteration 800 of 1000: loss=0.0189 " + "l1=0" + "l2=0.0189 f=-0.487 shape=(1, 9000, 1)
logits [[ 0.39338535 -1.7137417  -1.0720202   0.44596457]]
Iteration 900 of 1000: loss=0.0171 " + "l1=0" + "l2=0.0171 f=-0.486 shape=(1, 9000, 1)
logits [[ 0.40234414 -1.7178     -1.0858519   0.45675534]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.343 " + "l1=0.343" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 3.4618027 -2.3105764 -1.079666  -2.770088 ]]
Iteration 100 of 1000: loss=0.268 " + "l1=0.231" + "l2=0.0374 f=-0.658 shape=(1, 9000, 1)
logits [[ 2.3524046 -2.0467525 -1.0949653 -1.8408501]]
Iteration 200 of 1000: loss=0.208 " + "l1=0.151" + "l2=0.0572 f=-0.619 shape=(1, 9000, 1)
logits [[ 1.6081891 -1.857594  -1.0924293 -1.1325831]]
Iteration 300 of 1000: loss=0.121 " + "l1=0.0425" + "l2=0.0784 f=-0.524 shape=(1, 9000, 1)
logits [[ 0.70828164 -1.6990558  -1.0413628  -0.065032  ]]
Iteration 400 of 1000: loss=0.0536 " + "l1=2.67e-05" + "l2=0.0536 f=-0.487 shape=(1, 9000, 1)
logits [[ 0.35832912 -1.6493708  -1.0165024   0.35784423]]
Iteration 500 of 1000: loss=0.0353 " + "l1=0" + "l2=0.0353 f=-0.484 shape=(1, 9000, 1)
logits [[ 0.36985436 -1.6708075  -1.0185215   0.38304135]]
Iteration 600 of 1000: loss=0.0264 " + "l1=0" + "l2=0.0264 f=-0.483 shape=(1, 9000, 1)
logits [[ 0.3862402 -1.6867722 -1.031587   0.400764 ]]
Iteration 700 of 1000: loss=0.0218 " + "l1=0" + "l2=0.0218 f=-0.482 shape=(1, 9000, 1)
logits [[ 0.39076173 -1.6967684  -1.0507488   0.4273038 ]]
Iteration 800 of 1000: loss=0.0186 " + "l1=0" + "l2=0.0186 f=-0.482 shape=(1, 9000, 1)
logits [[ 0.41363806 -1.704881   -1.0640614   0.42670846]]
Iteration 900 of 1000: loss=0.0167 " + "l1=0.000238" + "l2=0.0165 f=-0.483 shape=(1, 9000, 1)
logits [[ 0.43374273 -1.7149997  -1.079013    0.4294144 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.203 " + "l1=0.203" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 3.4618027 -2.3105764 -1.079666  -2.770088 ]]
Iteration 100 of 1000: loss=0.178 " + "l1=0.166" + "l2=0.0123 f=-0.67 shape=(1, 9000, 1)
logits [[ 2.8501115 -2.1963263 -1.0737112 -2.2598689]]
Iteration 200 of 1000: loss=0.162 " + "l1=0.144" + "l2=0.0178 f=-0.657 shape=(1, 9000, 1)
logits [[ 2.488977  -2.0986009 -1.0664971 -1.9507239]]
Iteration 300 of 1000: loss=0.14 " + "l1=0.116" + "l2=0.0236 f=-0.634 shape=(1, 9000, 1)
logits [[ 2.040235  -1.9931787 -1.0542494 -1.5285597]]
Iteration 400 of 1000: loss=0.11 " + "l1=0.0782" + "l2=0.0318 f=-0.586 shape=(1, 9000, 1)
logits [[ 1.4872344  -1.8819242  -1.0285124  -0.91949654]]
Iteration 500 of 1000: loss=0.0761 " + "l1=0.0369" + "l2=0.0392 f=-0.534 shape=(1, 9000, 1)
logits [[ 0.89965284 -1.7757009  -1.023778   -0.23608804]]
Iteration 600 of 1000: loss=0.0395 " + "l1=0.000366" + "l2=0.0391 f=-0.484 shape=(1, 9000, 1)
logits [[ 0.39055428 -1.6793092  -1.0267328   0.37927824]]
Iteration 700 of 1000: loss=0.0271 " + "l1=8.56e-05" + "l2=0.027 f=-0.484 shape=(1, 9000, 1)
logits [[ 0.4055226 -1.6909211 -1.0516921  0.4028896]]
Iteration 800 of 1000: loss=0.0215 " + "l1=8.57e-05" + "l2=0.0214 f=-0.484 shape=(1, 9000, 1)
logits [[ 0.42192212 -1.7029668  -1.073908    0.41928422]]
Iteration 900 of 1000: loss=0.0185 " + "l1=0" + "l2=0.0185 f=-0.484 shape=(1, 9000, 1)
logits [[ 0.43119606 -1.7121278  -1.0948052   0.44002196]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.132 " + "l1=0.132" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 3.4618027 -2.3105764 -1.079666  -2.770088 ]]
Iteration 100 of 1000: loss=0.122 " + "l1=0.117" + "l2=0.0051 f=-0.672 shape=(1, 9000, 1)
logits [[ 3.071139  -2.2442873 -1.0712198 -2.4447472]]
Iteration 200 of 1000: loss=0.117 " + "l1=0.11" + "l2=0.007 f=-0.668 shape=(1, 9000, 1)
logits [[ 2.8764923 -2.2020054 -1.0661114 -2.2817414]]
Iteration 300 of 1000: loss=0.109 " + "l1=0.1" + "l2=0.00893 f=-0.659 shape=(1, 9000, 1)
logits [[ 2.6434937 -2.1466205 -1.0595737 -2.073648 ]]
Iteration 400 of 1000: loss=0.0995 " + "l1=0.0878" + "l2=0.0116 f=-0.647 shape=(1, 9000, 1)
logits [[ 2.3406515 -2.0780761 -1.0572844 -1.7922719]]
Iteration 500 of 1000: loss=0.0887 " + "l1=0.0741" + "l2=0.0147 f=-0.629 shape=(1, 9000, 1)
logits [[ 2.0132453 -1.9946254 -1.0612699 -1.4715934]]
Iteration 600 of 1000: loss=0.0762 " + "l1=0.0583" + "l2=0.0179 f=-0.604 shape=(1, 9000, 1)
logits [[ 1.6497467 -1.9086578 -1.0617583 -1.0940539]]
Iteration 700 of 1000: loss=0.0606 " + "l1=0.0384" + "l2=0.0222 f=-0.56 shape=(1, 9000, 1)
logits [[ 1.2196467 -1.8381137 -1.0327872 -0.5890201]]
Iteration 800 of 1000: loss=0.0434 " + "l1=0.0183" + "l2=0.0252 f=-0.518 shape=(1, 9000, 1)
logits [[ 0.7933655  -1.7659601  -1.0309114  -0.06657863]]
Iteration 900 of 1000: loss=0.027 " + "l1=6.59e-05" + "l2=0.027 f=-0.483 shape=(1, 9000, 1)
logits [[ 0.41650257 -1.7025039  -1.0585159   0.4134021 ]]
--- 290.03024339675903 seconds ---
Adv result:3
Loading record A03498
(1, 3018)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0801 " + "l1=0.0801" + "l2=0 f=-0.919 shape=(1, 9000, 1)
logits [[ 4.5696073 -3.4439678 -2.2051249 -2.595039 ]]
Iteration 100 of 1000: loss=0.0793 " + "l1=0.0788" + "l2=0.000497 f=-0.914 shape=(1, 9000, 1)
logits [[ 4.4797063 -3.4033089 -2.2170134 -2.51728  ]]
Iteration 200 of 1000: loss=0.079 " + "l1=0.0785" + "l2=0.000582 f=-0.913 shape=(1, 9000, 1)
logits [[ 4.453617  -3.3917575 -2.2205536 -2.4926262]]
Iteration 300 of 1000: loss=0.0788 " + "l1=0.0781" + "l2=0.000704 f=-0.911 shape=(1, 9000, 1)
logits [[ 4.4271903 -3.380501  -2.223863  -2.4668102]]
Iteration 400 of 1000: loss=0.0785 " + "l1=0.0777" + "l2=0.00083 f=-0.909 shape=(1, 9000, 1)
logits [[ 4.400507  -3.3698862 -2.2271075 -2.4400496]]
Iteration 500 of 1000: loss=0.0783 " + "l1=0.0773" + "l2=0.00102 f=-0.907 shape=(1, 9000, 1)
logits [[ 4.3711057 -3.359944  -2.228811  -2.4102938]]
Iteration 600 of 1000: loss=0.0781 " + "l1=0.0769" + "l2=0.0012 f=-0.905 shape=(1, 9000, 1)
logits [[ 4.342721  -3.351067  -2.229213  -2.3810816]]
Iteration 700 of 1000: loss=0.078 " + "l1=0.0766" + "l2=0.00139 f=-0.902 shape=(1, 9000, 1)
logits [[ 4.3149915 -3.3421369 -2.2297668 -2.3519158]]
Iteration 800 of 1000: loss=0.0778 " + "l1=0.0762" + "l2=0.00158 f=-0.9 shape=(1, 9000, 1)
logits [[ 4.289647  -3.3337271 -2.2299142 -2.3245528]]
Iteration 900 of 1000: loss=0.0776 " + "l1=0.0759" + "l2=0.00172 f=-0.897 shape=(1, 9000, 1)
logits [[ 4.2660413 -3.325937  -2.2284632 -2.2994812]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.801 " + "l1=0.801" + "l2=0 f=-0.919 shape=(1, 9000, 1)
logits [[ 4.5696073 -3.4439678 -2.2051249 -2.595039 ]]
Iteration 100 of 1000: loss=0.633 " + "l1=0.525" + "l2=0.108 f=-0.762 shape=(1, 9000, 1)
logits [[ 2.6728218 -2.5802667 -1.2730248 -1.8683617]]
Iteration 200 of 1000: loss=0.566 " + "l1=0.439" + "l2=0.128 f=-0.701 shape=(1, 9000, 1)
logits [[ 2.0903802 -2.298468  -1.1370114 -1.4586974]]
Iteration 300 of 1000: loss=0.525 " + "l1=0.398" + "l2=0.126 f=-0.666 shape=(1, 9000, 1)
logits [[ 1.7444975 -2.238765  -0.9727269 -1.1952919]]
Iteration 400 of 1000: loss=0.49 " + "l1=0.353" + "l2=0.137 f=-0.625 shape=(1, 9000, 1)
logits [[ 1.4036367  -2.1275725  -0.84437567 -0.9318909 ]]
Iteration 500 of 1000: loss=0.465 " + "l1=0.324" + "l2=0.141 f=-0.59 shape=(1, 9000, 1)
logits [[ 1.1705034 -2.069985  -0.8248394 -0.6360906]]
Iteration 600 of 1000: loss=0.435 " + "l1=0.287" + "l2=0.147 f=-0.542 shape=(1, 9000, 1)
logits [[ 0.8874237  -1.9837636  -0.7848781  -0.28556255]]
Iteration 700 of 1000: loss=0.396 " + "l1=0.237" + "l2=0.158 f=-0.443 shape=(1, 9000, 1)
logits [[ 0.46314535 -1.9094819  -0.59838563  0.27381784]]
Iteration 800 of 1000: loss=0.373 " + "l1=0.224" + "l2=0.149 f=-0.413 shape=(1, 9000, 1)
logits [[ 0.43165785 -1.803379   -0.7004127   0.42009678]]
Iteration 900 of 1000: loss=0.353 " + "l1=0.202" + "l2=0.15 f=-0.395 shape=(1, 9000, 1)
logits [[ 0.34590146 -1.6758329  -0.5646099   0.3140962 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.01 " + "l1=8.01" + "l2=0 f=-0.919 shape=(1, 9000, 1)
logits [[ 4.5696073 -3.4439678 -2.2051249 -2.595039 ]]
Iteration 100 of 1000: loss=1.03 " + "l1=0" + "l2=1.03 f=-0.459 shape=(1, 9000, 1)
logits [[-0.19855341 -0.16191871 -0.84376544 -0.63242483]]
Iteration 200 of 1000: loss=0.703 " + "l1=0.015" + "l2=0.688 f=-0.473 shape=(1, 9000, 1)
logits [[-0.1108491  -0.12583558 -0.73747754 -0.91969323]]
Iteration 300 of 1000: loss=0.559 " + "l1=0.0141" + "l2=0.544 f=-0.482 shape=(1, 9000, 1)
logits [[-0.10163391 -0.11575451 -0.6085327  -1.1026754 ]]
Iteration 400 of 1000: loss=0.489 " + "l1=0" + "l2=0.489 f=-0.485 shape=(1, 9000, 1)
logits [[-0.18377869 -0.11295878 -0.55126315 -1.0902525 ]]
Iteration 500 of 1000: loss=0.444 " + "l1=0" + "l2=0.444 f=-0.49 shape=(1, 9000, 1)
logits [[-0.19095366 -0.11524308 -0.5268033  -1.1283834 ]]
Iteration 600 of 1000: loss=0.412 " + "l1=0" + "l2=0.412 f=-0.489 shape=(1, 9000, 1)
logits [[-0.24791639 -0.12817617 -0.50996476 -1.0687474 ]]
Iteration 700 of 1000: loss=0.366 " + "l1=0" + "l2=0.366 f=-0.495 shape=(1, 9000, 1)
logits [[-0.21326175 -0.17783853 -0.51677233 -1.0732944 ]]
Iteration 800 of 1000: loss=0.345 " + "l1=0" + "l2=0.345 f=-0.49 shape=(1, 9000, 1)
logits [[-0.26118192 -0.2175655  -0.53389215 -0.9471849 ]]
Iteration 900 of 1000: loss=0.327 " + "l1=0" + "l2=0.327 f=-0.48 shape=(1, 9000, 1)
logits [[-0.30452892 -0.2726596  -0.54844385 -0.79436255]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.41 " + "l1=4.41" + "l2=0 f=-0.919 shape=(1, 9000, 1)
logits [[ 4.5696073 -3.4439678 -2.2051249 -2.595039 ]]
Iteration 100 of 1000: loss=0.962 " + "l1=0.0114" + "l2=0.95 f=-0.444 shape=(1, 9000, 1)
logits [[-0.14571184 -0.16652556 -1.0756108  -0.3861575 ]]
Iteration 200 of 1000: loss=0.63 " + "l1=0" + "l2=0.63 f=-0.446 shape=(1, 9000, 1)
logits [[-0.22470722 -0.20192084 -0.8254728  -0.5300387 ]]
Iteration 300 of 1000: loss=0.523 " + "l1=0" + "l2=0.523 f=-0.455 shape=(1, 9000, 1)
logits [[-0.2450186  -0.23104453 -0.82680947 -0.5183215 ]]
Iteration 400 of 1000: loss=0.467 " + "l1=0" + "l2=0.467 f=-0.456 shape=(1, 9000, 1)
logits [[-0.26518697 -0.24599932 -0.8390143  -0.4733452 ]]
Iteration 500 of 1000: loss=0.423 " + "l1=0" + "l2=0.423 f=-0.45 shape=(1, 9000, 1)
logits [[-0.26753435 -0.21961205 -0.8397749  -0.47189352]]
Iteration 600 of 1000: loss=0.378 " + "l1=0" + "l2=0.378 f=-0.445 shape=(1, 9000, 1)
logits [[-0.2540178  -0.24061362 -0.85966116 -0.42559236]]
Iteration 700 of 1000: loss=0.348 " + "l1=0" + "l2=0.348 f=-0.439 shape=(1, 9000, 1)
logits [[-0.2797568  -0.2528397  -0.9047129  -0.31876972]]
Iteration 800 of 1000: loss=0.317 " + "l1=0" + "l2=0.317 f=-0.443 shape=(1, 9000, 1)
logits [[-0.22518706 -0.20372568 -0.86832625 -0.47675434]]
Iteration 900 of 1000: loss=0.289 " + "l1=0" + "l2=0.289 f=-0.436 shape=(1, 9000, 1)
logits [[-0.2519449  -0.24537139 -0.9000104  -0.348381  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.6 " + "l1=2.6" + "l2=0 f=-0.919 shape=(1, 9000, 1)
logits [[ 4.5696073 -3.4439678 -2.2051249 -2.595039 ]]
Iteration 100 of 1000: loss=0.913 " + "l1=0.281" + "l2=0.631 f=-0.491 shape=(1, 9000, 1)
logits [[ 0.26820394 -0.59740305 -1.2292695  -0.40409818]]
Iteration 200 of 1000: loss=0.564 " + "l1=0.0033" + "l2=0.561 f=-0.471 shape=(1, 9000, 1)
logits [[-0.24878821 -0.25893703 -1.0215966  -0.3531998 ]]
Iteration 300 of 1000: loss=0.461 " + "l1=0.00539" + "l2=0.456 f=-0.48 shape=(1, 9000, 1)
logits [[-0.258088   -0.27466726 -1.002132   -0.38565367]]
Iteration 400 of 1000: loss=0.408 " + "l1=0" + "l2=0.408 f=-0.491 shape=(1, 9000, 1)
logits [[-0.30995998 -0.29296702 -1.0115091  -0.34817287]]
Iteration 500 of 1000: loss=0.367 " + "l1=0.00184" + "l2=0.365 f=-0.5 shape=(1, 9000, 1)
logits [[-0.29235607 -0.29801238 -0.98324406 -0.4280956 ]]
Iteration 600 of 1000: loss=0.328 " + "l1=0" + "l2=0.328 f=-0.491 shape=(1, 9000, 1)
logits [[-0.3404247  -0.33280098 -0.9559495  -0.33541366]]
Iteration 700 of 1000: loss=0.307 " + "l1=0" + "l2=0.307 f=-0.489 shape=(1, 9000, 1)
logits [[-0.32930332 -0.31852168 -0.9100909  -0.39906654]]
Iteration 800 of 1000: loss=0.28 " + "l1=0" + "l2=0.28 f=-0.483 shape=(1, 9000, 1)
logits [[-0.33786598 -0.31656373 -0.817887   -0.46041185]]
Iteration 900 of 1000: loss=0.256 " + "l1=0.000703" + "l2=0.255 f=-0.464 shape=(1, 9000, 1)
logits [[-0.42158255 -0.37657428 -0.6852142  -0.3744123 ]]
--- 289.311066865921 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0677 " + "l1=0.0677" + "l2=0 f=-0.919 shape=(1, 9000, 1)
logits [[ 4.5696073 -3.4439678 -2.2051249 -2.595039 ]]
Iteration 100 of 1000: loss=0.0672 " + "l1=0.0669" + "l2=0.00029 f=-0.915 shape=(1, 9000, 1)
logits [[ 4.4995093 -3.4353614 -2.193285  -2.5303426]]
Iteration 200 of 1000: loss=0.067 " + "l1=0.0667" + "l2=0.000335 f=-0.913 shape=(1, 9000, 1)
logits [[ 4.4808683 -3.433272  -2.1885753 -2.5118816]]
Iteration 300 of 1000: loss=0.0668 " + "l1=0.0664" + "l2=0.000411 f=-0.911 shape=(1, 9000, 1)
logits [[ 4.4604034 -3.431248  -2.1830409 -2.4906967]]
Iteration 400 of 1000: loss=0.0667 " + "l1=0.0661" + "l2=0.000521 f=-0.909 shape=(1, 9000, 1)
logits [[ 4.4381905 -3.429374  -2.1760561 -2.4679632]]
Iteration 500 of 1000: loss=0.0665 " + "l1=0.0658" + "l2=0.000676 f=-0.907 shape=(1, 9000, 1)
logits [[ 4.4144564 -3.4279683 -2.1686156 -2.4439063]]
Iteration 600 of 1000: loss=0.0663 " + "l1=0.0654" + "l2=0.000906 f=-0.902 shape=(1, 9000, 1)
logits [[ 4.3844604 -3.4234433 -2.1536374 -2.41701  ]]
Iteration 700 of 1000: loss=0.066 " + "l1=0.0647" + "l2=0.0013 f=-0.896 shape=(1, 9000, 1)
logits [[ 4.344623  -3.4142184 -2.1267114 -2.386715 ]]
Iteration 800 of 1000: loss=0.0648 " + "l1=0.0624" + "l2=0.00245 f=-0.869 shape=(1, 9000, 1)
logits [[ 4.2373195 -3.362224  -1.9994026 -2.3533573]]
Iteration 900 of 1000: loss=0.0628 " + "l1=0.0592" + "l2=0.0036 f=-0.837 shape=(1, 9000, 1)
logits [[ 4.105393  -3.3190155 -1.818826  -2.3170745]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.677 " + "l1=0.677" + "l2=0 f=-0.919 shape=(1, 9000, 1)
logits [[ 4.5696073 -3.4439678 -2.2051249 -2.595039 ]]
Iteration 100 of 1000: loss=0.392 " + "l1=0.242" + "l2=0.15 f=-0.581 shape=(1, 9000, 1)
logits [[ 2.1760738  -2.7594705  -0.24711895 -1.4918861 ]]
Iteration 200 of 1000: loss=0.329 " + "l1=0.19" + "l2=0.138 f=-0.56 shape=(1, 9000, 1)
logits [[ 1.8234965  -2.851487   -0.08103973 -1.1328608 ]]
Iteration 300 of 1000: loss=0.274 " + "l1=0.135" + "l2=0.14 f=-0.539 shape=(1, 9000, 1)
logits [[ 1.4528903  -2.8445625   0.10441999 -0.86889505]]
Iteration 400 of 1000: loss=0.213 " + "l1=0.0816" + "l2=0.132 f=-0.514 shape=(1, 9000, 1)
logits [[ 1.0843698  -2.8354564   0.26794535 -0.5740172 ]]
Iteration 500 of 1000: loss=0.169 " + "l1=0.0403" + "l2=0.129 f=-0.476 shape=(1, 9000, 1)
logits [[ 0.79968286 -2.859651    0.39716962 -0.2407201 ]]
Iteration 600 of 1000: loss=0.135 " + "l1=0.0117" + "l2=0.123 f=-0.441 shape=(1, 9000, 1)
logits [[ 0.6338416  -2.8877032   0.517066   -0.02640686]]
Iteration 700 of 1000: loss=0.108 " + "l1=0.000829" + "l2=0.107 f=-0.418 shape=(1, 9000, 1)
logits [[ 0.5686232  -2.8934786   0.5603285   0.09384876]]
Iteration 800 of 1000: loss=0.0845 " + "l1=0.000414" + "l2=0.084 f=-0.41 shape=(1, 9000, 1)
logits [[ 0.5425254  -2.9100113   0.5383838   0.18986738]]
Iteration 900 of 1000: loss=0.0739 " + "l1=0.000972" + "l2=0.073 f=-0.406 shape=(1, 9000, 1)
logits [[ 0.51986235 -2.912274    0.51014465  0.2581736 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.373 " + "l1=0.373" + "l2=0 f=-0.919 shape=(1, 9000, 1)
logits [[ 4.5696073 -3.4439678 -2.2051249 -2.595039 ]]
Iteration 100 of 1000: loss=0.333 " + "l1=0.3" + "l2=0.033 f=-0.8 shape=(1, 9000, 1)
logits [[ 3.8359668 -3.2129724 -1.6140296 -2.2074094]]
Iteration 200 of 1000: loss=0.261 " + "l1=0.188" + "l2=0.0729 f=-0.66 shape=(1, 9000, 1)
logits [[ 2.766957  -2.916934  -0.6476204 -1.8408027]]
Iteration 300 of 1000: loss=0.213 " + "l1=0.147" + "l2=0.0666 f=-0.602 shape=(1, 9000, 1)
logits [[ 2.3447158 -2.9165218 -0.3210934 -1.5139737]]
Iteration 400 of 1000: loss=0.189 " + "l1=0.119" + "l2=0.0697 f=-0.58 shape=(1, 9000, 1)
logits [[ 2.0328305  -2.863709   -0.13904108 -1.3483169 ]]
Iteration 500 of 1000: loss=0.164 " + "l1=0.0954" + "l2=0.0683 f=-0.553 shape=(1, 9000, 1)
logits [[ 1.7568562 -2.9086976  0.0230884 -1.0829823]]
Iteration 600 of 1000: loss=0.142 " + "l1=0.0768" + "l2=0.0657 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.5366873  -2.903139    0.13981727 -0.9181564 ]]
Iteration 700 of 1000: loss=0.126 " + "l1=0.0603" + "l2=0.0661 f=-0.509 shape=(1, 9000, 1)
logits [[ 1.3341373  -2.884817    0.23797631 -0.72329205]]
Iteration 800 of 1000: loss=0.112 " + "l1=0.0461" + "l2=0.0661 f=-0.484 shape=(1, 9000, 1)
logits [[ 1.15565    -2.9002218   0.31725895 -0.50921243]]
Iteration 900 of 1000: loss=0.0968 " + "l1=0.0352" + "l2=0.0616 f=-0.467 shape=(1, 9000, 1)
logits [[ 0.98056126 -2.9166355   0.34069306 -0.27409086]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.525 " + "l1=0.525" + "l2=0 f=-0.919 shape=(1, 9000, 1)
logits [[ 4.5696073 -3.4439678 -2.2051249 -2.595039 ]]
Iteration 100 of 1000: loss=0.385 " + "l1=0.278" + "l2=0.107 f=-0.69 shape=(1, 9000, 1)
logits [[ 2.8659766  -2.935937   -0.72137284 -1.9676359 ]]
Iteration 200 of 1000: loss=0.294 " + "l1=0.189" + "l2=0.105 f=-0.584 shape=(1, 9000, 1)
logits [[ 2.188345   -2.9001245  -0.24924842 -1.3760364 ]]
Iteration 300 of 1000: loss=0.256 " + "l1=0.151" + "l2=0.105 f=-0.561 shape=(1, 9000, 1)
logits [[ 1.8532445  -2.8926315  -0.09229288 -1.1137865 ]]
Iteration 400 of 1000: loss=0.211 " + "l1=0.107" + "l2=0.104 f=-0.539 shape=(1, 9000, 1)
logits [[ 1.4853756  -2.818121    0.11060451 -0.9334137 ]]
Iteration 500 of 1000: loss=0.182 " + "l1=0.0773" + "l2=0.105 f=-0.523 shape=(1, 9000, 1)
logits [[ 1.2209291  -2.8422728   0.22398405 -0.6943366 ]]
Iteration 600 of 1000: loss=0.155 " + "l1=0.055" + "l2=0.1 f=-0.499 shape=(1, 9000, 1)
logits [[ 1.0064976  -2.8916397   0.29694375 -0.4095205 ]]
Iteration 700 of 1000: loss=0.126 " + "l1=0.0287" + "l2=0.0973 f=-0.458 shape=(1, 9000, 1)
logits [[ 0.7740187  -2.9274962   0.40367305 -0.0814256 ]]
Iteration 800 of 1000: loss=0.0989 " + "l1=0.01" + "l2=0.0889 f=-0.44 shape=(1, 9000, 1)
logits [[ 0.59582025 -2.9188352   0.4668502   0.09453121]]
Iteration 900 of 1000: loss=0.0798 " + "l1=0.00051" + "l2=0.0793 f=-0.417 shape=(1, 9000, 1)
logits [[ 0.5053523  -2.8728      0.4987723   0.20076272]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.449 " + "l1=0.449" + "l2=0 f=-0.919 shape=(1, 9000, 1)
logits [[ 4.5696073 -3.4439678 -2.2051249 -2.595039 ]]
Iteration 100 of 1000: loss=0.367 " + "l1=0.315" + "l2=0.0527 f=-0.77 shape=(1, 9000, 1)
logits [[ 3.4317079 -3.0780456 -1.3171897 -2.1158519]]
Iteration 200 of 1000: loss=0.271 " + "l1=0.179" + "l2=0.0921 f=-0.598 shape=(1, 9000, 1)
logits [[ 2.3734667  -2.9070513  -0.33359668 -1.5239552 ]]
Iteration 300 of 1000: loss=0.239 " + "l1=0.154" + "l2=0.0852 f=-0.58 shape=(1, 9000, 1)
logits [[ 2.1129353  -2.920887   -0.20874384 -1.3016342 ]]
Iteration 400 of 1000: loss=0.202 " + "l1=0.112" + "l2=0.0899 f=-0.551 shape=(1, 9000, 1)
logits [[ 1.7025405  -2.83474     0.01269575 -1.0853047 ]]
Iteration 500 of 1000: loss=0.176 " + "l1=0.0919" + "l2=0.0839 f=-0.539 shape=(1, 9000, 1)
logits [[ 1.4984416  -2.871148    0.11186503 -0.8949386 ]]
Iteration 600 of 1000: loss=0.152 " + "l1=0.0682" + "l2=0.0838 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.2652363  -2.919149    0.23511831 -0.6528353 ]]
Iteration 700 of 1000: loss=0.126 " + "l1=0.0459" + "l2=0.0798 f=-0.491 shape=(1, 9000, 1)
logits [[ 1.0372283  -2.9360943   0.34489053 -0.41074818]]
Iteration 800 of 1000: loss=0.105 " + "l1=0.0322" + "l2=0.0732 f=-0.464 shape=(1, 9000, 1)
logits [[ 0.8716308  -2.9111323   0.3857035  -0.20036393]]
Iteration 900 of 1000: loss=0.0893 " + "l1=0.0166" + "l2=0.0728 f=-0.443 shape=(1, 9000, 1)
logits [[ 0.70918864 -2.906875    0.4591572  -0.03229085]]
--- 288.8987126350403 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0716 " + "l1=0.0716" + "l2=0 f=-0.919 shape=(1, 9000, 1)
logits [[ 4.5696073 -3.4439678 -2.2051249 -2.595039 ]]
Iteration 100 of 1000: loss=0.0696 " + "l1=0.0686" + "l2=0.00103 f=-0.912 shape=(1, 9000, 1)
logits [[ 4.4238715 -3.4198709 -2.2162173 -2.4363422]]
Iteration 200 of 1000: loss=0.0688 " + "l1=0.0674" + "l2=0.00134 f=-0.909 shape=(1, 9000, 1)
logits [[ 4.3712535 -3.4136813 -2.2207103 -2.373359 ]]
Iteration 300 of 1000: loss=0.0679 " + "l1=0.0663" + "l2=0.00161 f=-0.906 shape=(1, 9000, 1)
logits [[ 4.3207016 -3.407865  -2.2240474 -2.3113115]]
Iteration 400 of 1000: loss=0.0671 " + "l1=0.0652" + "l2=0.00193 f=-0.902 shape=(1, 9000, 1)
logits [[ 4.26997   -3.4020023 -2.2266731 -2.2479775]]
Iteration 500 of 1000: loss=0.0663 " + "l1=0.064" + "l2=0.0023 f=-0.898 shape=(1, 9000, 1)
logits [[ 4.2158365 -3.3967597 -2.2286303 -2.1809688]]
Iteration 600 of 1000: loss=0.0654 " + "l1=0.0627" + "l2=0.0027 f=-0.893 shape=(1, 9000, 1)
logits [[ 4.1612377 -3.3913944 -2.2282221 -2.1133249]]
Iteration 700 of 1000: loss=0.0647 " + "l1=0.0615" + "l2=0.00316 f=-0.888 shape=(1, 9000, 1)
logits [[ 4.1070104 -3.3867528 -2.2270873 -2.0447297]]
Iteration 800 of 1000: loss=0.0638 " + "l1=0.0603" + "l2=0.00354 f=-0.883 shape=(1, 9000, 1)
logits [[ 4.0522    -3.3832967 -2.2257032 -1.9752913]]
Iteration 900 of 1000: loss=0.063 " + "l1=0.059" + "l2=0.00401 f=-0.878 shape=(1, 9000, 1)
logits [[ 3.9960666 -3.37954   -2.224609  -1.9051169]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.716 " + "l1=0.716" + "l2=0 f=-0.919 shape=(1, 9000, 1)
logits [[ 4.5696073 -3.4439678 -2.2051249 -2.595039 ]]
Iteration 100 of 1000: loss=0.448 " + "l1=0.266" + "l2=0.181 f=-0.666 shape=(1, 9000, 1)
logits [[ 2.0656369 -2.8473377 -1.2860807 -0.5975819]]
Iteration 200 of 1000: loss=0.299 " + "l1=0.101" + "l2=0.198 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.2096595 -2.729547  -0.8532499  0.1974811]]
Iteration 300 of 1000: loss=0.172 " + "l1=0.00255" + "l2=0.169 f=-0.478 shape=(1, 9000, 1)
logits [[ 0.8293272  -2.682379   -0.86462736  0.8037901 ]]
Iteration 400 of 1000: loss=0.115 " + "l1=0.00237" + "l2=0.113 f=-0.48 shape=(1, 9000, 1)
logits [[ 0.88714564 -2.6995661  -0.97062814  0.86347383]]
Iteration 500 of 1000: loss=0.0844 " + "l1=0" + "l2=0.0844 f=-0.486 shape=(1, 9000, 1)
logits [[ 0.8522913  -2.7218754  -0.97623795  0.90157145]]
Iteration 600 of 1000: loss=0.0623 " + "l1=0" + "l2=0.0623 f=-0.497 shape=(1, 9000, 1)
logits [[ 0.8564775 -2.7027297 -1.022713   0.881738 ]]
Iteration 700 of 1000: loss=0.0503 " + "l1=0" + "l2=0.0503 f=-0.503 shape=(1, 9000, 1)
logits [[ 0.8767619 -2.733034  -1.0353848  0.8781503]]
Iteration 800 of 1000: loss=0.0446 " + "l1=0" + "l2=0.0446 f=-0.499 shape=(1, 9000, 1)
logits [[ 0.84328437 -2.748264   -1.0265236   0.9344814 ]]
Iteration 900 of 1000: loss=0.0374 " + "l1=0" + "l2=0.0374 f=-0.498 shape=(1, 9000, 1)
logits [[ 0.89304894 -2.7861829  -1.0185186   0.91873324]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.394 " + "l1=0.394" + "l2=0 f=-0.919 shape=(1, 9000, 1)
logits [[ 4.5696073 -3.4439678 -2.2051249 -2.595039 ]]
Iteration 100 of 1000: loss=0.332 " + "l1=0.294" + "l2=0.0376 f=-0.88 shape=(1, 9000, 1)
logits [[ 3.6987157 -3.2798486 -2.28866   -1.6485705]]
Iteration 200 of 1000: loss=0.292 " + "l1=0.234" + "l2=0.0581 f=-0.816 shape=(1, 9000, 1)
logits [[ 3.1891103 -3.2230723 -2.1656442 -1.0656968]]
Iteration 300 of 1000: loss=0.218 " + "l1=0.127" + "l2=0.0911 f=-0.629 shape=(1, 9000, 1)
logits [[ 1.8320613  -2.7522006  -1.1234276  -0.47303838]]
Iteration 400 of 1000: loss=0.168 " + "l1=0.0829" + "l2=0.0856 f=-0.581 shape=(1, 9000, 1)
logits [[ 1.4754031  -2.82384    -0.94213563 -0.03182286]]
Iteration 500 of 1000: loss=0.105 " + "l1=0.0159" + "l2=0.0895 f=-0.515 shape=(1, 9000, 1)
logits [[ 1.0043067  -2.8521397  -0.92712057  0.7157968 ]]
Iteration 600 of 1000: loss=0.063 " + "l1=0" + "l2=0.063 f=-0.505 shape=(1, 9000, 1)
logits [[ 0.93694735 -2.898102   -0.9964692   0.93819976]]
Iteration 700 of 1000: loss=0.0469 " + "l1=0.000957" + "l2=0.0459 f=-0.499 shape=(1, 9000, 1)
logits [[ 0.95310545 -2.9129403  -0.97051543  0.9357031 ]]
Iteration 800 of 1000: loss=0.0385 " + "l1=0.000413" + "l2=0.0381 f=-0.502 shape=(1, 9000, 1)
logits [[ 0.9432573  -2.9351227  -0.9514078   0.93575174]]
Iteration 900 of 1000: loss=0.0336 " + "l1=0" + "l2=0.0336 f=-0.506 shape=(1, 9000, 1)
logits [[ 0.92382896 -2.962508   -0.93748105  0.95167255]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.233 " + "l1=0.233" + "l2=0 f=-0.919 shape=(1, 9000, 1)
logits [[ 4.5696073 -3.4439678 -2.2051249 -2.595039 ]]
Iteration 100 of 1000: loss=0.212 " + "l1=0.2" + "l2=0.012 f=-0.899 shape=(1, 9000, 1)
logits [[ 4.079032  -3.356769  -2.2539582 -2.06281  ]]
Iteration 200 of 1000: loss=0.201 " + "l1=0.184" + "l2=0.0167 f=-0.882 shape=(1, 9000, 1)
logits [[ 3.8619938 -3.3262444 -2.2623556 -1.8016795]]
Iteration 300 of 1000: loss=0.189 " + "l1=0.168" + "l2=0.0209 f=-0.861 shape=(1, 9000, 1)
logits [[ 3.6330616 -3.2951128 -2.241183  -1.5418417]]
Iteration 400 of 1000: loss=0.175 " + "l1=0.148" + "l2=0.0264 f=-0.823 shape=(1, 9000, 1)
logits [[ 3.3058796 -3.2235346 -2.1177206 -1.2546693]]
Iteration 500 of 1000: loss=0.148 " + "l1=0.109" + "l2=0.0388 f=-0.705 shape=(1, 9000, 1)
logits [[ 2.5434005  -3.0084987  -1.5368032  -0.81914645]]
Iteration 600 of 1000: loss=0.115 " + "l1=0.0719" + "l2=0.0435 f=-0.622 shape=(1, 9000, 1)
logits [[ 1.867699   -2.9036684  -1.1054397  -0.34507212]]
Iteration 700 of 1000: loss=0.0841 " + "l1=0.0389" + "l2=0.0452 f=-0.554 shape=(1, 9000, 1)
logits [[ 1.4003799 -2.9246838 -0.8962881  0.2035408]]
Iteration 800 of 1000: loss=0.058 " + "l1=0.0113" + "l2=0.0467 f=-0.508 shape=(1, 9000, 1)
logits [[ 1.0390203  -2.9164643  -0.847744    0.69163615]]
Iteration 900 of 1000: loss=0.042 " + "l1=0" + "l2=0.042 f=-0.486 shape=(1, 9000, 1)
logits [[ 0.9067397 -2.923317  -0.8405296  0.9122183]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.152 " + "l1=0.152" + "l2=0 f=-0.919 shape=(1, 9000, 1)
logits [[ 4.5696073 -3.4439678 -2.2051249 -2.595039 ]]
Iteration 100 of 1000: loss=0.143 " + "l1=0.138" + "l2=0.00484 f=-0.905 shape=(1, 9000, 1)
logits [[ 4.258264  -3.387093  -2.2350266 -2.2580914]]
Iteration 200 of 1000: loss=0.139 " + "l1=0.132" + "l2=0.00659 f=-0.897 shape=(1, 9000, 1)
logits [[ 4.1281843 -3.3726795 -2.243244  -2.101793 ]]
Iteration 300 of 1000: loss=0.135 " + "l1=0.127" + "l2=0.00804 f=-0.887 shape=(1, 9000, 1)
logits [[ 4.005527  -3.359254  -2.2430737 -1.9516598]]
Iteration 400 of 1000: loss=0.13 " + "l1=0.12" + "l2=0.00962 f=-0.876 shape=(1, 9000, 1)
logits [[ 3.875458  -3.3447626 -2.2401757 -1.7951117]]
Iteration 500 of 1000: loss=0.125 " + "l1=0.113" + "l2=0.0117 f=-0.862 shape=(1, 9000, 1)
logits [[ 3.7183826 -3.323326  -2.2253022 -1.6158508]]
Iteration 600 of 1000: loss=0.119 " + "l1=0.105" + "l2=0.0143 f=-0.839 shape=(1, 9000, 1)
logits [[ 3.5220232 -3.289718  -2.164406  -1.424726 ]]
Iteration 700 of 1000: loss=0.111 " + "l1=0.0932" + "l2=0.0179 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.2044284 -3.21686   -1.9772673 -1.1813767]]
Iteration 800 of 1000: loss=0.0951 " + "l1=0.0692" + "l2=0.0259 f=-0.688 shape=(1, 9000, 1)
logits [[ 2.4322774  -2.9666395  -1.3964294  -0.82224786]]
Iteration 900 of 1000: loss=0.0788 " + "l1=0.0509" + "l2=0.0279 f=-0.622 shape=(1, 9000, 1)
logits [[ 1.9662561 -2.921039  -1.1030138 -0.4282837]]
--- 289.0263707637787 seconds ---
Adv result:3
Loading record A03501
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0681 " + "l1=0.0681" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.461248  -2.3479602  2.5273194 -6.85354  ]]
Iteration 100 of 1000: loss=0.0677 " + "l1=0.0674" + "l2=0.000256 f=-0.549 shape=(1, 9000, 1)
logits [[ 4.4218626 -2.322252   2.511544  -6.805764 ]]
Iteration 200 of 1000: loss=0.0676 " + "l1=0.0673" + "l2=0.000253 f=-0.547 shape=(1, 9000, 1)
logits [[ 4.415733  -2.3163352  2.5083842 -6.7969785]]
Iteration 300 of 1000: loss=0.0675 " + "l1=0.0672" + "l2=0.000321 f=-0.546 shape=(1, 9000, 1)
logits [[ 4.407013  -2.3093367  2.5046527 -6.7851157]]
Iteration 400 of 1000: loss=0.0674 " + "l1=0.067" + "l2=0.000395 f=-0.544 shape=(1, 9000, 1)
logits [[ 4.398206  -2.3023517  2.5009868 -6.773216 ]]
Iteration 500 of 1000: loss=0.0673 " + "l1=0.0668" + "l2=0.000494 f=-0.543 shape=(1, 9000, 1)
logits [[ 4.3894544 -2.2954457  2.4973495 -6.7615805]]
Iteration 600 of 1000: loss=0.0673 " + "l1=0.0667" + "l2=0.000596 f=-0.541 shape=(1, 9000, 1)
logits [[ 4.3812175 -2.2890384  2.4939244 -6.751195 ]]
Iteration 700 of 1000: loss=0.0673 " + "l1=0.0666" + "l2=0.00072 f=-0.54 shape=(1, 9000, 1)
logits [[ 4.3732014 -2.2826133  2.4905107 -6.74113  ]]
Iteration 800 of 1000: loss=0.0673 " + "l1=0.0664" + "l2=0.000829 f=-0.539 shape=(1, 9000, 1)
logits [[ 4.3657627 -2.2764907  2.487344  -6.7321553]]
Iteration 900 of 1000: loss=0.0673 " + "l1=0.0663" + "l2=0.000959 f=-0.538 shape=(1, 9000, 1)
logits [[ 4.358815  -2.2708685  2.4844103 -6.724078 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.681 " + "l1=0.681" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.461248  -2.3479602  2.5273194 -6.85354  ]]
Iteration 100 of 1000: loss=0.647 " + "l1=0.631" + "l2=0.016 f=-0.525 shape=(1, 9000, 1)
logits [[ 4.152985  -2.1561427  2.408062  -6.503806 ]]
Iteration 200 of 1000: loss=0.631 " + "l1=0.607" + "l2=0.024 f=-0.508 shape=(1, 9000, 1)
logits [[ 4.004167  -2.067363   2.3550043 -6.323449 ]]
Iteration 300 of 1000: loss=0.619 " + "l1=0.588" + "l2=0.031 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.8784504 -2.002431   2.3198707 -6.1767716]]
Iteration 400 of 1000: loss=0.609 " + "l1=0.573" + "l2=0.0363 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.774426  -1.957176   2.2876012 -6.0605745]]
Iteration 500 of 1000: loss=0.601 " + "l1=0.562" + "l2=0.0395 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.6926804 -1.9253204  2.2575364 -5.9717884]]
Iteration 600 of 1000: loss=0.594 " + "l1=0.551" + "l2=0.043 f=-0.485 shape=(1, 9000, 1)
logits [[ 3.6082683 -1.8974732  2.231543  -5.8841515]]
Iteration 700 of 1000: loss=0.586 " + "l1=0.54" + "l2=0.0457 f=-0.485 shape=(1, 9000, 1)
logits [[ 3.5298336 -1.8744367  2.21259   -5.808131 ]]
Iteration 800 of 1000: loss=0.579 " + "l1=0.531" + "l2=0.0479 f=-0.485 shape=(1, 9000, 1)
logits [[ 3.4571726 -1.8538346  2.1964312 -5.739132 ]]
Iteration 900 of 1000: loss=0.572 " + "l1=0.522" + "l2=0.0496 f=-0.484 shape=(1, 9000, 1)
logits [[ 3.3874447 -1.8369287  2.1881256 -5.675054 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.81 " + "l1=6.81" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.461248  -2.3479602  2.5273194 -6.85354  ]]
Iteration 100 of 1000: loss=3.89 " + "l1=2.38" + "l2=1.52 f=-0.457 shape=(1, 9000, 1)
logits [[ 1.5721128 -0.806797   1.3634459 -3.956635 ]]
Iteration 200 of 1000: loss=2.8 " + "l1=1.26" + "l2=1.54 f=-0.455 shape=(1, 9000, 1)
logits [[ 0.92613447 -0.32596812  0.9322634  -3.3510997 ]]
Iteration 300 of 1000: loss=2.35 " + "l1=0.736" + "l2=1.62 f=-0.434 shape=(1, 9000, 1)
logits [[ 0.6860271  -0.05011354  0.6807211  -3.0528092 ]]
Iteration 400 of 1000: loss=2.14 " + "l1=0.513" + "l2=1.62 f=-0.427 shape=(1, 9000, 1)
logits [[ 0.57233536  0.0686449   0.58128667 -2.9320767 ]]
Iteration 500 of 1000: loss=1.97 " + "l1=0.369" + "l2=1.6 f=-0.427 shape=(1, 9000, 1)
logits [[ 0.505638    0.15139012  0.52086043 -2.8863647 ]]
Iteration 600 of 1000: loss=1.88 " + "l1=0.309" + "l2=1.57 f=-0.42 shape=(1, 9000, 1)
logits [[ 0.4930047   0.18844852  0.4969993  -2.856812  ]]
Iteration 700 of 1000: loss=1.81 " + "l1=0.259" + "l2=1.56 f=-0.42 shape=(1, 9000, 1)
logits [[ 0.4468467   0.22450082  0.48319885 -2.8354673 ]]
Iteration 800 of 1000: loss=1.74 " + "l1=0.212" + "l2=1.53 f=-0.419 shape=(1, 9000, 1)
logits [[ 0.46146432  0.25021055  0.46213794 -2.8488271 ]]
Iteration 900 of 1000: loss=1.71 " + "l1=0.163" + "l2=1.55 f=-0.417 shape=(1, 9000, 1)
logits [[ 0.3824276   0.28187606  0.44513118 -2.7786696 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=68.1 " + "l1=68.1" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.461248  -2.3479602  2.5273194 -6.85354  ]]
Iteration 100 of 1000: loss=6.95 " + "l1=0" + "l2=6.95 f=-0.388 shape=(1, 9000, 1)
logits [[ 0.23324049  0.38303614  0.3748595  -2.5429337 ]]
Iteration 200 of 1000: loss=4.91 " + "l1=0" + "l2=4.91 f=-0.411 shape=(1, 9000, 1)
logits [[ 0.2993833  0.3581753  0.3350807 -2.6369138]]
Iteration 300 of 1000: loss=4.09 " + "l1=0" + "l2=4.09 f=-0.431 shape=(1, 9000, 1)
logits [[ 0.28360575  0.37384045  0.3522087  -2.7327406 ]]
Iteration 400 of 1000: loss=3.57 " + "l1=0" + "l2=3.57 f=-0.439 shape=(1, 9000, 1)
logits [[ 0.30769652  0.38459012  0.38214302 -2.8292067 ]]
Iteration 500 of 1000: loss=3.23 " + "l1=0" + "l2=3.23 f=-0.436 shape=(1, 9000, 1)
logits [[ 0.38510257  0.38569734  0.38259014 -2.8980155 ]]
Iteration 600 of 1000: loss=3.08 " + "l1=0" + "l2=3.08 f=-0.447 shape=(1, 9000, 1)
logits [[ 0.2428669   0.41602135  0.391121   -2.836314  ]]
Iteration 700 of 1000: loss=2.9 " + "l1=0" + "l2=2.9 f=-0.45 shape=(1, 9000, 1)
logits [[ 0.22748029  0.41846395  0.39194468 -2.8395002 ]]
Iteration 800 of 1000: loss=2.74 " + "l1=0" + "l2=2.74 f=-0.443 shape=(1, 9000, 1)
logits [[ 0.30735838  0.4181537   0.38239276 -2.8810093 ]]
Iteration 900 of 1000: loss=2.63 " + "l1=0" + "l2=2.63 f=-0.442 shape=(1, 9000, 1)
logits [[ 0.31935155  0.42641675  0.37480298 -2.88829   ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=37.5 " + "l1=37.5" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.461248  -2.3479602  2.5273194 -6.85354  ]]
Iteration 100 of 1000: loss=5.92 " + "l1=0" + "l2=5.92 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.25598606  0.38341305  0.37878034 -2.6339173 ]]
Iteration 200 of 1000: loss=4.03 " + "l1=0" + "l2=4.03 f=-0.433 shape=(1, 9000, 1)
logits [[ 0.31930006  0.37039694  0.36816326 -2.788137  ]]
Iteration 300 of 1000: loss=3.4 " + "l1=0" + "l2=3.4 f=-0.439 shape=(1, 9000, 1)
logits [[ 0.30763733  0.39081097  0.37245387 -2.8252213 ]]
Iteration 400 of 1000: loss=2.99 " + "l1=0" + "l2=2.99 f=-0.436 shape=(1, 9000, 1)
logits [[ 0.36736143  0.38309938  0.38077617 -2.8743513 ]]
Iteration 500 of 1000: loss=2.79 " + "l1=0" + "l2=2.79 f=-0.443 shape=(1, 9000, 1)
logits [[ 0.29627955  0.40010062  0.38171107 -2.8483832 ]]
Iteration 600 of 1000: loss=2.64 " + "l1=0" + "l2=2.64 f=-0.445 shape=(1, 9000, 1)
logits [[ 0.27920708  0.41702166  0.37328658 -2.850144  ]]
Iteration 700 of 1000: loss=2.45 " + "l1=0" + "l2=2.45 f=-0.438 shape=(1, 9000, 1)
logits [[ 0.36542362  0.39257905  0.37342104 -2.8820455 ]]
Iteration 800 of 1000: loss=2.33 " + "l1=0.0191" + "l2=2.31 f=-0.437 shape=(1, 9000, 1)
logits [[ 0.35187382  0.38461068  0.38808492 -2.8738441 ]]
Iteration 900 of 1000: loss=2.24 " + "l1=0" + "l2=2.24 f=-0.437 shape=(1, 9000, 1)
logits [[ 0.29726294  0.39090297  0.3899513  -2.82508   ]]
--- 285.13859391212463 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0193 " + "l1=0.0193" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.461248  -2.3479602  2.5273194 -6.85354  ]]
Iteration 100 of 1000: loss=0.0192 " + "l1=0.019" + "l2=0.000151 f=-0.552 shape=(1, 9000, 1)
logits [[ 4.433675  -2.3495147  2.5307825 -6.8238115]]
Iteration 200 of 1000: loss=0.0191 " + "l1=0.019" + "l2=0.000128 f=-0.552 shape=(1, 9000, 1)
logits [[ 4.4322095 -2.3486755  2.5307767 -6.8223796]]
Iteration 300 of 1000: loss=0.0191 " + "l1=0.019" + "l2=0.00016 f=-0.552 shape=(1, 9000, 1)
logits [[ 4.428419  -2.3479834  2.5310814 -6.8183913]]
Iteration 400 of 1000: loss=0.0191 " + "l1=0.0189" + "l2=0.000188 f=-0.551 shape=(1, 9000, 1)
logits [[ 4.42435   -2.347346   2.531459  -6.8140993]]
Iteration 500 of 1000: loss=0.0191 " + "l1=0.0189" + "l2=0.000241 f=-0.551 shape=(1, 9000, 1)
logits [[ 4.42021   -2.3467402  2.5318542 -6.8097873]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.193 " + "l1=0.193" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.461248  -2.3479602  2.5273194 -6.85354  ]]
Iteration 100 of 1000: loss=0.179 " + "l1=0.172" + "l2=0.00776 f=-0.55 shape=(1, 9000, 1)
logits [[ 4.2689734 -2.3597794  2.5516942 -6.659593 ]]
Iteration 200 of 1000: loss=0.174 " + "l1=0.164" + "l2=0.0107 f=-0.548 shape=(1, 9000, 1)
logits [[ 4.1947083 -2.3520472  2.5590243 -6.5925345]]
Iteration 300 of 1000: loss=0.169 " + "l1=0.156" + "l2=0.0137 f=-0.548 shape=(1, 9000, 1)
logits [[ 4.1268535 -2.3489327  2.5691185 -6.538133 ]]
Iteration 400 of 1000: loss=0.165 " + "l1=0.149" + "l2=0.0161 f=-0.549 shape=(1, 9000, 1)
logits [[ 4.0656934 -2.348722   2.5760324 -6.4901414]]
Iteration 500 of 1000: loss=0.16 " + "l1=0.141" + "l2=0.0193 f=-0.552 shape=(1, 9000, 1)
logits [[ 3.9969707 -2.3486829  2.5869834 -6.4415417]]
Iteration 600 of 1000: loss=0.155 " + "l1=0.133" + "l2=0.0223 f=-0.554 shape=(1, 9000, 1)
logits [[ 3.926832  -2.3468869  2.598407  -6.394169 ]]
Iteration 700 of 1000: loss=0.15 " + "l1=0.127" + "l2=0.0233 f=-0.556 shape=(1, 9000, 1)
logits [[ 3.8759212 -2.3466947  2.605207  -6.358196 ]]
Iteration 800 of 1000: loss=0.146 " + "l1=0.123" + "l2=0.0231 f=-0.558 shape=(1, 9000, 1)
logits [[ 3.8396084 -2.3470733  2.6063437 -6.329386 ]]
Iteration 900 of 1000: loss=0.143 " + "l1=0.119" + "l2=0.0239 f=-0.559 shape=(1, 9000, 1)
logits [[ 3.7983196 -2.3483887  2.607513  -6.292808 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.93 " + "l1=1.93" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.461248  -2.3479602  2.5273194 -6.85354  ]]
Iteration 100 of 1000: loss=0.549 " + "l1=0.012" + "l2=0.537 f=-0.589 shape=(1, 9000, 1)
logits [[ 2.6317399 -2.5287137  2.6197395 -5.0784416]]
Iteration 200 of 1000: loss=0.388 " + "l1=0" + "l2=0.388 f=-0.585 shape=(1, 9000, 1)
logits [[ 2.6041555 -2.5060513  2.6086717 -5.0472217]]
Iteration 300 of 1000: loss=0.34 " + "l1=0.00763" + "l2=0.332 f=-0.58 shape=(1, 9000, 1)
logits [[ 2.5961494 -2.476427   2.5885172 -5.0284286]]
Iteration 400 of 1000: loss=0.307 " + "l1=0" + "l2=0.307 f=-0.583 shape=(1, 9000, 1)
logits [[ 2.554943  -2.4528077  2.5719008 -5.004648 ]]
Iteration 500 of 1000: loss=0.274 " + "l1=0.00699" + "l2=0.267 f=-0.581 shape=(1, 9000, 1)
logits [[ 2.5694847 -2.430013   2.5624979 -5.024367 ]]
Iteration 600 of 1000: loss=0.249 " + "l1=0.00821" + "l2=0.241 f=-0.578 shape=(1, 9000, 1)
logits [[ 2.5727744 -2.42311    2.5645666 -5.027466 ]]
Iteration 700 of 1000: loss=0.222 " + "l1=0" + "l2=0.222 f=-0.577 shape=(1, 9000, 1)
logits [[ 2.5624897 -2.4167402  2.5667958 -5.019066 ]]
Iteration 800 of 1000: loss=0.205 " + "l1=0" + "l2=0.205 f=-0.577 shape=(1, 9000, 1)
logits [[ 2.5456843 -2.4091372  2.5647323 -5.008205 ]]
Iteration 900 of 1000: loss=0.184 " + "l1=0" + "l2=0.184 f=-0.575 shape=(1, 9000, 1)
logits [[ 2.5545216 -2.400152   2.5590098 -5.0116596]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.06 " + "l1=1.06" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.461248  -2.3479602  2.5273194 -6.85354  ]]
Iteration 100 of 1000: loss=0.599 " + "l1=0.351" + "l2=0.247 f=-0.57 shape=(1, 9000, 1)
logits [[ 3.2655175 -2.4505644  2.6267407 -5.721122 ]]
Iteration 200 of 1000: loss=0.422 " + "l1=0.0792" + "l2=0.342 f=-0.587 shape=(1, 9000, 1)
logits [[ 2.7821734 -2.5157173  2.638103  -5.252767 ]]
Iteration 300 of 1000: loss=0.329 " + "l1=0" + "l2=0.329 f=-0.591 shape=(1, 9000, 1)
logits [[ 2.6233253 -2.5183616  2.6274924 -5.0952435]]
Iteration 400 of 1000: loss=0.28 " + "l1=0" + "l2=0.28 f=-0.592 shape=(1, 9000, 1)
logits [[ 2.6030414 -2.4970083  2.6078696 -5.082354 ]]
Iteration 500 of 1000: loss=0.24 " + "l1=0.000768" + "l2=0.24 f=-0.591 shape=(1, 9000, 1)
logits [[ 2.6015992 -2.4809854  2.6002038 -5.0859504]]
Iteration 600 of 1000: loss=0.213 " + "l1=0" + "l2=0.213 f=-0.588 shape=(1, 9000, 1)
logits [[ 2.5933719 -2.4626637  2.5941384 -5.075772 ]]
Iteration 700 of 1000: loss=0.192 " + "l1=0.00296" + "l2=0.189 f=-0.584 shape=(1, 9000, 1)
logits [[ 2.5861735 -2.441538   2.5807974 -5.060574 ]]
Iteration 800 of 1000: loss=0.176 " + "l1=0" + "l2=0.176 f=-0.584 shape=(1, 9000, 1)
logits [[ 2.5696192 -2.4336739  2.5720215 -5.042004 ]]
Iteration 900 of 1000: loss=0.169 " + "l1=0.00588" + "l2=0.163 f=-0.58 shape=(1, 9000, 1)
logits [[ 2.5718677 -2.4216611  2.5611851 -5.0327535]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.629 " + "l1=0.629" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.461248  -2.3479602  2.5273194 -6.85354  ]]
Iteration 100 of 1000: loss=0.465 " + "l1=0.371" + "l2=0.0944 f=-0.555 shape=(1, 9000, 1)
logits [[ 3.7491233 -2.38355    2.6083252 -6.1931868]]
Iteration 200 of 1000: loss=0.396 " + "l1=0.272" + "l2=0.124 f=-0.566 shape=(1, 9000, 1)
logits [[ 3.4676688 -2.4171085  2.631674  -5.9454494]]
Iteration 300 of 1000: loss=0.349 " + "l1=0.194" + "l2=0.156 f=-0.574 shape=(1, 9000, 1)
logits [[ 3.227662  -2.4522793  2.6317508 -5.7045884]]
Iteration 400 of 1000: loss=0.309 " + "l1=0.13" + "l2=0.179 f=-0.58 shape=(1, 9000, 1)
logits [[ 3.0157511 -2.4689667  2.6171768 -5.483636 ]]
Iteration 500 of 1000: loss=0.279 " + "l1=0.0853" + "l2=0.193 f=-0.578 shape=(1, 9000, 1)
logits [[ 2.858578  -2.458952   2.5959914 -5.3081174]]
Iteration 600 of 1000: loss=0.244 " + "l1=0.036" + "l2=0.208 f=-0.576 shape=(1, 9000, 1)
logits [[ 2.6882799 -2.4478443  2.5773785 -5.1210337]]
Iteration 700 of 1000: loss=0.212 " + "l1=0.00472" + "l2=0.207 f=-0.574 shape=(1, 9000, 1)
logits [[ 2.5835252 -2.429414   2.5690029 -5.0180593]]
Iteration 800 of 1000: loss=0.187 " + "l1=0" + "l2=0.187 f=-0.572 shape=(1, 9000, 1)
logits [[ 2.5598736 -2.414359   2.5606177 -4.99393  ]]
Iteration 900 of 1000: loss=0.172 " + "l1=0.00118" + "l2=0.171 f=-0.569 shape=(1, 9000, 1)
logits [[ 2.5563607 -2.4048388  2.5527341 -4.9816804]]
--- 263.0722484588623 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.113 " + "l1=0.113" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.461248  -2.3479602  2.5273194 -6.85354  ]]
Iteration 100 of 1000: loss=0.112 " + "l1=0.112" + "l2=0.000552 f=-0.546 shape=(1, 9000, 1)
logits [[ 4.399536  -2.333598   2.5110245 -6.762707 ]]
Iteration 200 of 1000: loss=0.112 " + "l1=0.111" + "l2=0.000651 f=-0.544 shape=(1, 9000, 1)
logits [[ 4.3853464 -2.32691    2.5063167 -6.7397685]]
Iteration 300 of 1000: loss=0.112 " + "l1=0.111" + "l2=0.000781 f=-0.541 shape=(1, 9000, 1)
logits [[ 4.370289  -2.319848   2.5010712 -6.7162356]]
Iteration 400 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.000975 f=-0.539 shape=(1, 9000, 1)
logits [[ 4.3558574 -2.3128474  2.4958866 -6.6936965]]
Iteration 500 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.00113 f=-0.536 shape=(1, 9000, 1)
logits [[ 4.342168  -2.3062778  2.4911032 -6.672945 ]]
Iteration 600 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.00134 f=-0.534 shape=(1, 9000, 1)
logits [[ 4.329308  -2.299871   2.4864264 -6.653845 ]]
Iteration 700 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.00151 f=-0.533 shape=(1, 9000, 1)
logits [[ 4.3170886 -2.2937438  2.4818177 -6.6357846]]
Iteration 800 of 1000: loss=0.111 " + "l1=0.109" + "l2=0.00168 f=-0.531 shape=(1, 9000, 1)
logits [[ 4.306275  -2.2885604  2.4778235 -6.61969  ]]
Iteration 900 of 1000: loss=0.111 " + "l1=0.109" + "l2=0.0019 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.295772  -2.2836847  2.4739616 -6.604265 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.13 " + "l1=1.13" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.461248  -2.3479602  2.5273194 -6.85354  ]]
Iteration 100 of 1000: loss=1.05 " + "l1=1" + "l2=0.0432 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.922468  -2.2266178  2.3902676 -6.095207 ]]
Iteration 200 of 1000: loss=1 " + "l1=0.939" + "l2=0.0654 f=-0.475 shape=(1, 9000, 1)
logits [[ 3.666293  -2.1494408  2.309257  -5.7246523]]
Iteration 300 of 1000: loss=0.971 " + "l1=0.886" + "l2=0.085 f=-0.46 shape=(1, 9000, 1)
logits [[ 3.4438229 -2.1073143  2.2401328 -5.4177227]]
Iteration 400 of 1000: loss=0.943 " + "l1=0.841" + "l2=0.102 f=-0.451 shape=(1, 9000, 1)
logits [[ 3.2532167 -2.087881   2.1865146 -5.155806 ]]
Iteration 500 of 1000: loss=0.913 " + "l1=0.792" + "l2=0.121 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.039004  -2.0728407  2.1286683 -4.881188 ]]
Iteration 600 of 1000: loss=0.88 " + "l1=0.74" + "l2=0.14 f=-0.442 shape=(1, 9000, 1)
logits [[ 2.8186758 -2.0908086  2.0845106 -4.5805507]]
Iteration 700 of 1000: loss=0.846 " + "l1=0.69" + "l2=0.157 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.608668  -2.1066835  2.0479827 -4.2892494]]
Iteration 800 of 1000: loss=0.816 " + "l1=0.649" + "l2=0.168 f=-0.427 shape=(1, 9000, 1)
logits [[ 2.4366336 -2.109906   2.0158002 -4.0507717]]
Iteration 900 of 1000: loss=0.788 " + "l1=0.606" + "l2=0.182 f=-0.417 shape=(1, 9000, 1)
logits [[ 2.2588222 -2.0964866  1.9759927 -3.8060725]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.3 " + "l1=11.3" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.461248  -2.3479602  2.5273194 -6.85354  ]]
Iteration 100 of 1000: loss=4.86 " + "l1=2.4" + "l2=2.46 f=-0.285 shape=(1, 9000, 1)
logits [[ 0.7335139 -1.7875334  1.1579775 -1.2443113]]
Iteration 200 of 1000: loss=3.23 " + "l1=0.412" + "l2=2.82 f=-0.275 shape=(1, 9000, 1)
logits [[-0.36988166 -1.6707051   0.6755783   0.2638164 ]]
Iteration 300 of 1000: loss=2.59 " + "l1=0.0085" + "l2=2.58 f=-0.241 shape=(1, 9000, 1)
logits [[-0.50457615 -1.6156006   0.58181113  0.5733146 ]]
Iteration 400 of 1000: loss=2.38 " + "l1=0" + "l2=2.38 f=-0.225 shape=(1, 9000, 1)
logits [[-0.47354445 -1.6051917   0.58171463  0.59722316]]
Iteration 500 of 1000: loss=2.17 " + "l1=0" + "l2=2.17 f=-0.208 shape=(1, 9000, 1)
logits [[-0.44118482 -1.5974602   0.60241866  0.6058928 ]]
Iteration 600 of 1000: loss=1.92 " + "l1=0" + "l2=1.92 f=-0.18 shape=(1, 9000, 1)
logits [[-0.41851386 -1.5661436   0.62365896  0.6415087 ]]
Iteration 700 of 1000: loss=1.7 " + "l1=0.0135" + "l2=1.69 f=-0.153 shape=(1, 9000, 1)
logits [[-0.34167513 -1.5547365   0.6494835   0.635974  ]]
Iteration 800 of 1000: loss=1.51 " + "l1=0.00699" + "l2=1.51 f=-0.141 shape=(1, 9000, 1)
logits [[-0.3027631  -1.5612376   0.65433866  0.64735365]]
Iteration 900 of 1000: loss=1.36 " + "l1=0" + "l2=1.36 f=-0.132 shape=(1, 9000, 1)
logits [[-0.2606586  -1.5708036   0.64761126  0.65569127]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.22 " + "l1=6.22" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.461248  -2.3479602  2.5273194 -6.85354  ]]
Iteration 100 of 1000: loss=3.64 " + "l1=2.55" + "l2=1.09 f=-0.344 shape=(1, 9000, 1)
logits [[ 1.7465383 -1.9927346  1.751947  -2.8816733]]
Iteration 200 of 1000: loss=2.89 " + "l1=1.59" + "l2=1.3 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.9538458 -1.7787286  1.2434474 -1.6403677]]
Iteration 300 of 1000: loss=2.51 " + "l1=1.08" + "l2=1.43 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.4626092 -1.6678029  1.0133629 -0.9566113]]
Iteration 400 of 1000: loss=2.24 " + "l1=0.742" + "l2=1.49 f=-0.263 shape=(1, 9000, 1)
logits [[ 0.13213295 -1.5934982   0.87940496 -0.4693185 ]]
Iteration 500 of 1000: loss=1.87 " + "l1=0.263" + "l2=1.61 f=-0.228 shape=(1, 9000, 1)
logits [[-0.23393565 -1.588509    0.6953194   0.2166237 ]]
Iteration 600 of 1000: loss=1.41 " + "l1=0" + "l2=1.41 f=-0.174 shape=(1, 9000, 1)
logits [[-0.36738372 -1.5756394   0.6216668   0.626697  ]]
Iteration 700 of 1000: loss=1.1 " + "l1=0.0102" + "l2=1.09 f=-0.131 shape=(1, 9000, 1)
logits [[-0.27441204 -1.6434963   0.7071555   0.688563  ]]
Iteration 800 of 1000: loss=0.945 " + "l1=0" + "l2=0.945 f=-0.117 shape=(1, 9000, 1)
logits [[-0.25794548 -1.7121108   0.7503124   0.7507585 ]]
Iteration 900 of 1000: loss=0.864 " + "l1=0.00287" + "l2=0.861 f=-0.11 shape=(1, 9000, 1)
logits [[-0.23099121 -1.7604336   0.7783148   0.7730889 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.68 " + "l1=3.68" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.461248  -2.3479602  2.5273194 -6.85354  ]]
Iteration 100 of 1000: loss=2.69 " + "l1=2.13" + "l2=0.563 f=-0.421 shape=(1, 9000, 1)
logits [[ 2.4579804 -2.1236122  2.0780804 -4.096023 ]]
Iteration 200 of 1000: loss=2.23 " + "l1=1.56" + "l2=0.678 f=-0.358 shape=(1, 9000, 1)
logits [[ 1.7763605 -1.9740212  1.7767735 -3.0103238]]
Iteration 300 of 1000: loss=2.03 " + "l1=1.33" + "l2=0.692 f=-0.326 shape=(1, 9000, 1)
logits [[ 1.5610883 -1.9187411  1.579487  -2.5277023]]
Iteration 400 of 1000: loss=1.91 " + "l1=1.19" + "l2=0.724 f=-0.304 shape=(1, 9000, 1)
logits [[ 1.3849003 -1.8775296  1.4686092 -2.1919916]]
Iteration 500 of 1000: loss=1.81 " + "l1=1.06" + "l2=0.749 f=-0.287 shape=(1, 9000, 1)
logits [[ 1.1971122 -1.8817698  1.4043782 -1.869346 ]]
Iteration 600 of 1000: loss=1.71 " + "l1=0.926" + "l2=0.782 f=-0.279 shape=(1, 9000, 1)
logits [[ 1.0169504 -1.9075729  1.3106151 -1.5376117]]
Iteration 700 of 1000: loss=1.61 " + "l1=0.795" + "l2=0.814 f=-0.285 shape=(1, 9000, 1)
logits [[ 0.8097857 -1.9680191  1.2316065 -1.215356 ]]
Iteration 800 of 1000: loss=1.51 " + "l1=0.626" + "l2=0.887 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.54876244 -2.0042207   1.1293532  -0.7973396 ]]
Iteration 900 of 1000: loss=1.36 " + "l1=0.391" + "l2=0.967 f=-0.243 shape=(1, 9000, 1)
logits [[ 0.2450133  -2.0232463   1.0053378  -0.19889137]]
--- 292.0125324726105 seconds ---
Adv result:3
Loading record A03502
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0563 " + "l1=0.0563" + "l2=0 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.4190903 -2.2077408  1.89322   -4.8078566]]
Iteration 100 of 1000: loss=0.056 " + "l1=0.0558" + "l2=0.000228 f=-0.424 shape=(1, 9000, 1)
logits [[ 3.3898637 -2.1854837  1.8785307 -4.7769203]]
Iteration 200 of 1000: loss=0.0559 " + "l1=0.0557" + "l2=0.000203 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.3865416 -2.1818805  1.8764943 -4.773049 ]]
Iteration 300 of 1000: loss=0.0558 " + "l1=0.0556" + "l2=0.000261 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.380915  -2.1767123  1.8734096 -4.766906 ]]
Iteration 400 of 1000: loss=0.0558 " + "l1=0.0555" + "l2=0.000313 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.374714  -2.171085   1.8700423 -4.760218 ]]
Iteration 500 of 1000: loss=0.0557 " + "l1=0.0553" + "l2=0.000382 f=-0.421 shape=(1, 9000, 1)
logits [[ 3.3685212 -2.1655915  1.8667078 -4.75355  ]]
Iteration 600 of 1000: loss=0.0557 " + "l1=0.0552" + "l2=0.000449 f=-0.42 shape=(1, 9000, 1)
logits [[ 3.362228  -2.1598432  1.8632486 -4.7466497]]
Iteration 700 of 1000: loss=0.0557 " + "l1=0.0551" + "l2=0.000558 f=-0.42 shape=(1, 9000, 1)
logits [[ 3.3559868 -2.1541393  1.8597784 -4.739819 ]]
Iteration 800 of 1000: loss=0.0556 " + "l1=0.055" + "l2=0.00063 f=-0.419 shape=(1, 9000, 1)
logits [[ 3.349621  -2.14845    1.8563397 -4.7327676]]
Iteration 900 of 1000: loss=0.0556 " + "l1=0.0549" + "l2=0.000746 f=-0.418 shape=(1, 9000, 1)
logits [[ 3.3434277 -2.1431212  1.8530791 -4.725557 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.563 " + "l1=0.563" + "l2=0 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.4190903 -2.2077408  1.89322   -4.8078566]]
Iteration 100 of 1000: loss=0.536 " + "l1=0.523" + "l2=0.0132 f=-0.404 shape=(1, 9000, 1)
logits [[ 3.203966  -2.0285313  1.7892599 -4.581078 ]]
Iteration 200 of 1000: loss=0.524 " + "l1=0.504" + "l2=0.02 f=-0.391 shape=(1, 9000, 1)
logits [[ 3.0975628 -1.940219   1.7432593 -4.4644537]]
Iteration 300 of 1000: loss=0.512 " + "l1=0.487" + "l2=0.0248 f=-0.381 shape=(1, 9000, 1)
logits [[ 2.9992468 -1.8682307  1.7063484 -4.3625813]]
Iteration 400 of 1000: loss=0.501 " + "l1=0.472" + "l2=0.0283 f=-0.377 shape=(1, 9000, 1)
logits [[ 2.9102523 -1.8145076  1.6741914 -4.278343 ]]
Iteration 500 of 1000: loss=0.49 " + "l1=0.456" + "l2=0.0335 f=-0.373 shape=(1, 9000, 1)
logits [[ 2.8084445 -1.7539992  1.6380407 -4.1853704]]
Iteration 600 of 1000: loss=0.478 " + "l1=0.441" + "l2=0.0376 f=-0.368 shape=(1, 9000, 1)
logits [[ 2.70847   -1.6976829  1.6089827 -4.089797 ]]
Iteration 700 of 1000: loss=0.466 " + "l1=0.424" + "l2=0.0415 f=-0.364 shape=(1, 9000, 1)
logits [[ 2.6050346 -1.636668   1.5752043 -3.9991224]]
Iteration 800 of 1000: loss=0.451 " + "l1=0.404" + "l2=0.0475 f=-0.359 shape=(1, 9000, 1)
logits [[ 2.4855194 -1.5540895  1.5387547 -3.907675 ]]
Iteration 900 of 1000: loss=0.44 " + "l1=0.388" + "l2=0.0521 f=-0.354 shape=(1, 9000, 1)
logits [[ 2.3884711 -1.4934837  1.5081688 -3.8203661]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.63 " + "l1=5.63" + "l2=0 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.4190903 -2.2077408  1.89322   -4.8078566]]
Iteration 100 of 1000: loss=3.29 " + "l1=2.28" + "l2=1.02 f=-0.336 shape=(1, 9000, 1)
logits [[ 1.3728617  -0.90318716  1.2587187  -3.0712633 ]]
Iteration 200 of 1000: loss=2.72 " + "l1=1.77" + "l2=0.95 f=-0.31 shape=(1, 9000, 1)
logits [[ 1.0855948 -0.6786811  1.0871723 -2.734536 ]]
Iteration 300 of 1000: loss=2.44 " + "l1=1.54" + "l2=0.9 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.97895074 -0.5602194   0.97580385 -2.541782  ]]
Iteration 400 of 1000: loss=2.25 " + "l1=1.33" + "l2=0.92 f=-0.264 shape=(1, 9000, 1)
logits [[ 0.85775024 -0.4651632   0.86226577 -2.3126035 ]]
Iteration 500 of 1000: loss=2.11 " + "l1=1.21" + "l2=0.901 f=-0.243 shape=(1, 9000, 1)
logits [[ 0.7807526  -0.4271124   0.78101236 -2.1050384 ]]
Iteration 600 of 1000: loss=1.99 " + "l1=1.08" + "l2=0.913 f=-0.226 shape=(1, 9000, 1)
logits [[ 0.6980618 -0.3806798  0.7000726 -1.92166  ]]
Iteration 700 of 1000: loss=1.88 " + "l1=0.951" + "l2=0.927 f=-0.208 shape=(1, 9000, 1)
logits [[ 0.61854476 -0.33077708  0.6202044  -1.7412956 ]]
Iteration 800 of 1000: loss=1.75 " + "l1=0.788" + "l2=0.958 f=-0.204 shape=(1, 9000, 1)
logits [[ 0.5234721  -0.25877044  0.5296992  -1.6093735 ]]
Iteration 900 of 1000: loss=1.6 " + "l1=0.646" + "l2=0.953 f=-0.185 shape=(1, 9000, 1)
logits [[ 0.44850346 -0.19452561  0.45169553 -1.446341  ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=56.3 " + "l1=56.3" + "l2=0 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.4190903 -2.2077408  1.89322   -4.8078566]]
Iteration 100 of 1000: loss=7.44 " + "l1=0.11" + "l2=7.33 f=-0.302 shape=(1, 9000, 1)
logits [[ 0.11825816  0.33866882  0.3497016  -2.0153897 ]]
Iteration 200 of 1000: loss=4.87 " + "l1=0.0499" + "l2=4.82 f=-0.302 shape=(1, 9000, 1)
logits [[ 0.22287309  0.2968073   0.30179974 -2.0278544 ]]
Iteration 300 of 1000: loss=4.13 " + "l1=0.0555" + "l2=4.07 f=-0.298 shape=(1, 9000, 1)
logits [[ 0.27973273  0.2741803   0.2685526  -2.0130723 ]]
Iteration 400 of 1000: loss=3.68 " + "l1=0" + "l2=3.68 f=-0.296 shape=(1, 9000, 1)
logits [[ 0.22478753  0.27264968  0.2590522  -1.9390941 ]]
Iteration 500 of 1000: loss=3.44 " + "l1=0" + "l2=3.44 f=-0.296 shape=(1, 9000, 1)
logits [[ 0.15739568  0.2812307   0.25324997 -1.8748524 ]]
Iteration 600 of 1000: loss=3.19 " + "l1=0" + "l2=3.19 f=-0.292 shape=(1, 9000, 1)
logits [[ 0.16538367  0.26228356  0.24421597 -1.8398832 ]]
Iteration 700 of 1000: loss=2.96 " + "l1=0" + "l2=2.96 f=-0.286 shape=(1, 9000, 1)
logits [[ 0.21351701  0.24034865  0.23458028 -1.8340193 ]]
Iteration 800 of 1000: loss=2.84 " + "l1=0" + "l2=2.84 f=-0.285 shape=(1, 9000, 1)
logits [[ 0.15971528  0.23643626  0.23329422 -1.7706432 ]]
Iteration 900 of 1000: loss=2.7 " + "l1=0" + "l2=2.7 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.16277394  0.22489326  0.2178841  -1.7294837 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=30.9 " + "l1=30.9" + "l2=0 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.4190903 -2.2077408  1.89322   -4.8078566]]
Iteration 100 of 1000: loss=6.99 " + "l1=1.55" + "l2=5.44 f=-0.297 shape=(1, 9000, 1)
logits [[ 0.4273757   0.14852892  0.43013838 -2.193948  ]]
Iteration 200 of 1000: loss=4.19 " + "l1=0" + "l2=4.19 f=-0.297 shape=(1, 9000, 1)
logits [[ 0.22910802  0.2820169   0.27781987 -1.9756757 ]]
Iteration 300 of 1000: loss=3.55 " + "l1=0.0324" + "l2=3.52 f=-0.295 shape=(1, 9000, 1)
logits [[ 0.22096539  0.2596505   0.26554072 -1.9274188 ]]
Iteration 400 of 1000: loss=3.17 " + "l1=0" + "l2=3.17 f=-0.291 shape=(1, 9000, 1)
logits [[ 0.22043973  0.2495808   0.23994066 -1.8747057 ]]
Iteration 500 of 1000: loss=2.93 " + "l1=0" + "l2=2.93 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.1901468   0.2425109   0.23130722 -1.8121026 ]]
Iteration 600 of 1000: loss=2.72 " + "l1=0" + "l2=2.72 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.18907073  0.22207935  0.22061895 -1.7553512 ]]
Iteration 700 of 1000: loss=2.55 " + "l1=0" + "l2=2.55 f=-0.273 shape=(1, 9000, 1)
logits [[ 0.18944561  0.21674824  0.21427211 -1.7119675 ]]
Iteration 800 of 1000: loss=2.46 " + "l1=0" + "l2=2.46 f=-0.272 shape=(1, 9000, 1)
logits [[ 0.14774278  0.22815685  0.19599287 -1.659784  ]]
Iteration 900 of 1000: loss=2.28 " + "l1=0.00371" + "l2=2.28 f=-0.263 shape=(1, 9000, 1)
logits [[ 0.19424579  0.19644558  0.19711944 -1.6406636 ]]
--- 286.68730092048645 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0153 " + "l1=0.0153" + "l2=0 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.4190903 -2.2077408  1.89322   -4.8078566]]
Iteration 100 of 1000: loss=0.0152 " + "l1=0.0151" + "l2=0.000112 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.4012983 -2.2079437  1.8961918 -4.791167 ]]
Iteration 200 of 1000: loss=0.0151 " + "l1=0.015" + "l2=7.83e-05 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.4011304 -2.2082853  1.896414  -4.790935 ]]
Iteration 300 of 1000: loss=0.0151 " + "l1=0.015" + "l2=8.65e-05 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.3989058 -2.2084954  1.8970586 -4.7887816]]
Iteration 400 of 1000: loss=0.0151 " + "l1=0.015" + "l2=0.000136 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.3961859 -2.2086878  1.8978407 -4.7861633]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.153 " + "l1=0.153" + "l2=0 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.4190903 -2.2077408  1.89322   -4.8078566]]
Iteration 100 of 1000: loss=0.144 " + "l1=0.14" + "l2=0.00406 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.3186069 -2.2070072  1.9152652 -4.718912 ]]
Iteration 200 of 1000: loss=0.141 " + "l1=0.135" + "l2=0.00547 f=-0.421 shape=(1, 9000, 1)
logits [[ 3.276856  -2.2053742  1.9225311 -4.678593 ]]
Iteration 300 of 1000: loss=0.138 " + "l1=0.131" + "l2=0.00683 f=-0.419 shape=(1, 9000, 1)
logits [[ 3.233789  -2.2012513  1.9269105 -4.634051 ]]
Iteration 400 of 1000: loss=0.134 " + "l1=0.126" + "l2=0.00816 f=-0.416 shape=(1, 9000, 1)
logits [[ 3.1901395 -2.1942616  1.9288939 -4.5886893]]
Iteration 500 of 1000: loss=0.131 " + "l1=0.121" + "l2=0.00957 f=-0.413 shape=(1, 9000, 1)
logits [[ 3.1459687 -2.1873226  1.9314063 -4.54056  ]]
Iteration 600 of 1000: loss=0.128 " + "l1=0.118" + "l2=0.0108 f=-0.41 shape=(1, 9000, 1)
logits [[ 3.108531  -2.182232   1.9318504 -4.4980607]]
Iteration 700 of 1000: loss=0.126 " + "l1=0.114" + "l2=0.0118 f=-0.407 shape=(1, 9000, 1)
logits [[ 3.073883  -2.1764672  1.9322184 -4.4591794]]
Iteration 800 of 1000: loss=0.124 " + "l1=0.111" + "l2=0.0129 f=-0.405 shape=(1, 9000, 1)
logits [[ 3.04152   -2.1720014  1.9333653 -4.4239044]]
Iteration 900 of 1000: loss=0.122 " + "l1=0.107" + "l2=0.0141 f=-0.403 shape=(1, 9000, 1)
logits [[ 3.009399  -2.1685593  1.934761  -4.3860044]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.53 " + "l1=1.53" + "l2=0 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.4190903 -2.2077408  1.89322   -4.8078566]]
Iteration 100 of 1000: loss=0.739 " + "l1=0.362" + "l2=0.377 f=-0.38 shape=(1, 9000, 1)
logits [[ 2.3790648 -2.1129231  2.016734  -3.802071 ]]
Iteration 200 of 1000: loss=0.413 " + "l1=0" + "l2=0.413 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.104893  -2.280217   2.1108034 -3.54528  ]]
Iteration 300 of 1000: loss=0.298 " + "l1=0.00558" + "l2=0.293 f=-0.393 shape=(1, 9000, 1)
logits [[ 2.1280236 -2.3091395  2.122441  -3.5117278]]
Iteration 400 of 1000: loss=0.225 " + "l1=0" + "l2=0.225 f=-0.382 shape=(1, 9000, 1)
logits [[ 2.1372406 -2.311073   2.1382234 -3.4912176]]
Iteration 500 of 1000: loss=0.183 " + "l1=0" + "l2=0.183 f=-0.374 shape=(1, 9000, 1)
logits [[ 2.1435928 -2.3091655  2.147265  -3.4782233]]
Iteration 600 of 1000: loss=0.158 " + "l1=0" + "l2=0.158 f=-0.367 shape=(1, 9000, 1)
logits [[ 2.1407013 -2.3054688  2.1510372 -3.4553962]]
Iteration 700 of 1000: loss=0.136 " + "l1=0" + "l2=0.136 f=-0.361 shape=(1, 9000, 1)
logits [[ 2.143527  -2.2964609  2.1463192 -3.4354937]]
Iteration 800 of 1000: loss=0.123 " + "l1=0" + "l2=0.123 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.1375833 -2.2943401  2.1454172 -3.416545 ]]
Iteration 900 of 1000: loss=0.111 " + "l1=0" + "l2=0.111 f=-0.354 shape=(1, 9000, 1)
logits [[ 2.137126  -2.29207    2.1427002 -3.4033306]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.839 " + "l1=0.839" + "l2=0 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.4190903 -2.2077408  1.89322   -4.8078566]]
Iteration 100 of 1000: loss=0.589 " + "l1=0.464" + "l2=0.125 f=-0.396 shape=(1, 9000, 1)
logits [[ 2.8256495 -2.1554694  1.9818652 -4.2361317]]
Iteration 200 of 1000: loss=0.484 " + "l1=0.317" + "l2=0.167 f=-0.394 shape=(1, 9000, 1)
logits [[ 2.586135  -2.1785767  2.0093203 -3.9944446]]
Iteration 300 of 1000: loss=0.396 " + "l1=0.204" + "l2=0.192 f=-0.39 shape=(1, 9000, 1)
logits [[ 2.4027593 -2.2026005  2.0324101 -3.7923586]]
Iteration 400 of 1000: loss=0.294 " + "l1=0.0542" + "l2=0.24 f=-0.365 shape=(1, 9000, 1)
logits [[ 2.1816185 -2.1987896  2.0831032 -3.524142 ]]
Iteration 500 of 1000: loss=0.194 " + "l1=0" + "l2=0.194 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.1169367 -2.2609973  2.127074  -3.4335673]]
Iteration 600 of 1000: loss=0.152 " + "l1=0" + "l2=0.152 f=-0.359 shape=(1, 9000, 1)
logits [[ 2.1248767 -2.2754872  2.129237  -3.4143574]]
Iteration 700 of 1000: loss=0.129 " + "l1=0.00218" + "l2=0.126 f=-0.356 shape=(1, 9000, 1)
logits [[ 2.134257  -2.281331   2.1302893 -3.407053 ]]
Iteration 800 of 1000: loss=0.111 " + "l1=0.00269" + "l2=0.109 f=-0.351 shape=(1, 9000, 1)
logits [[ 2.1251838 -2.2676232  2.1202912 -3.381123 ]]
Iteration 900 of 1000: loss=0.0964 " + "l1=0" + "l2=0.0964 f=-0.347 shape=(1, 9000, 1)
logits [[ 2.1127436 -2.2583034  2.1164806 -3.359113 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.496 " + "l1=0.496" + "l2=0 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.4190903 -2.2077408  1.89322   -4.8078566]]
Iteration 100 of 1000: loss=0.409 " + "l1=0.364" + "l2=0.0449 f=-0.408 shape=(1, 9000, 1)
logits [[ 3.0750575 -2.1798766  1.9550638 -4.482872 ]]
Iteration 200 of 1000: loss=0.367 " + "l1=0.303" + "l2=0.0641 f=-0.397 shape=(1, 9000, 1)
logits [[ 2.9025643 -2.1690784  1.9710234 -4.292769 ]]
Iteration 300 of 1000: loss=0.334 " + "l1=0.261" + "l2=0.0732 f=-0.394 shape=(1, 9000, 1)
logits [[ 2.7741606 -2.168016   1.972421  -4.1526513]]
Iteration 400 of 1000: loss=0.301 " + "l1=0.217" + "l2=0.0842 f=-0.394 shape=(1, 9000, 1)
logits [[ 2.652092  -2.1823378  1.9851465 -4.030233 ]]
Iteration 500 of 1000: loss=0.268 " + "l1=0.175" + "l2=0.0929 f=-0.389 shape=(1, 9000, 1)
logits [[ 2.5507114 -2.20692    2.0117    -3.9110053]]
Iteration 600 of 1000: loss=0.234 " + "l1=0.131" + "l2=0.103 f=-0.376 shape=(1, 9000, 1)
logits [[ 2.442401  -2.2172356  2.0387216 -3.7668593]]
Iteration 700 of 1000: loss=0.185 " + "l1=0.0613" + "l2=0.123 f=-0.359 shape=(1, 9000, 1)
logits [[ 2.2848465 -2.2299197  2.0961008 -3.5881307]]
Iteration 800 of 1000: loss=0.138 " + "l1=0.00167" + "l2=0.136 f=-0.35 shape=(1, 9000, 1)
logits [[ 2.1316178 -2.2504058  2.1264946 -3.4088044]]
Iteration 900 of 1000: loss=0.109 " + "l1=0.000296" + "l2=0.109 f=-0.347 shape=(1, 9000, 1)
logits [[ 2.1224492 -2.250517   2.121538  -3.3823717]]
--- 258.69399857521057 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0823 " + "l1=0.0823" + "l2=0 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.4190903 -2.2077408  1.89322   -4.8078566]]
Iteration 100 of 1000: loss=0.0817 " + "l1=0.0814" + "l2=0.000336 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.3800657 -2.193134   1.8792986 -4.757056 ]]
Iteration 200 of 1000: loss=0.0815 " + "l1=0.0812" + "l2=0.000343 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.3729486 -2.1900249  1.876333  -4.7470055]]
Iteration 300 of 1000: loss=0.0814 " + "l1=0.081" + "l2=0.000444 f=-0.421 shape=(1, 9000, 1)
logits [[ 3.363484  -2.1861298  1.8728112 -4.733826 ]]
Iteration 400 of 1000: loss=0.0813 " + "l1=0.0807" + "l2=0.000512 f=-0.42 shape=(1, 9000, 1)
logits [[ 3.3539245 -2.1822855  1.8693379 -4.720392 ]]
Iteration 500 of 1000: loss=0.0811 " + "l1=0.0805" + "l2=0.000634 f=-0.419 shape=(1, 9000, 1)
logits [[ 3.3445048 -2.1784213  1.8660034 -4.7070756]]
Iteration 600 of 1000: loss=0.081 " + "l1=0.0803" + "l2=0.000771 f=-0.417 shape=(1, 9000, 1)
logits [[ 3.3345408 -2.173867   1.8624803 -4.692956 ]]
Iteration 700 of 1000: loss=0.0809 " + "l1=0.08" + "l2=0.000884 f=-0.416 shape=(1, 9000, 1)
logits [[ 3.3243802 -2.1690443  1.8588973 -4.6787677]]
Iteration 800 of 1000: loss=0.0808 " + "l1=0.0798" + "l2=0.00101 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.3142526 -2.164349   1.8554507 -4.6647377]]
Iteration 900 of 1000: loss=0.0807 " + "l1=0.0796" + "l2=0.00119 f=-0.414 shape=(1, 9000, 1)
logits [[ 3.3045373 -2.1600864  1.8522729 -4.651224 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.823 " + "l1=0.823" + "l2=0 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.4190903 -2.2077408  1.89322   -4.8078566]]
Iteration 100 of 1000: loss=0.771 " + "l1=0.746" + "l2=0.0251 f=-0.393 shape=(1, 9000, 1)
logits [[ 3.0869718 -2.0613577  1.7755888 -4.371754 ]]
Iteration 200 of 1000: loss=0.744 " + "l1=0.705" + "l2=0.0382 f=-0.373 shape=(1, 9000, 1)
logits [[ 2.9169116 -1.9921232  1.7196825 -4.137331 ]]
Iteration 300 of 1000: loss=0.721 " + "l1=0.673" + "l2=0.0476 f=-0.362 shape=(1, 9000, 1)
logits [[ 2.7796376 -1.9482524  1.6750108 -3.9551342]]
Iteration 400 of 1000: loss=0.701 " + "l1=0.647" + "l2=0.0536 f=-0.352 shape=(1, 9000, 1)
logits [[ 2.6644828 -1.9063118  1.6392586 -3.8053684]]
Iteration 500 of 1000: loss=0.681 " + "l1=0.622" + "l2=0.059 f=-0.342 shape=(1, 9000, 1)
logits [[ 2.5557873 -1.8640573  1.6027793 -3.6625566]]
Iteration 600 of 1000: loss=0.661 " + "l1=0.596" + "l2=0.0653 f=-0.33 shape=(1, 9000, 1)
logits [[ 2.444525  -1.8165109  1.5658543 -3.5129282]]
Iteration 700 of 1000: loss=0.642 " + "l1=0.569" + "l2=0.0729 f=-0.318 shape=(1, 9000, 1)
logits [[ 2.3285    -1.7663332  1.5283171 -3.3637178]]
Iteration 800 of 1000: loss=0.622 " + "l1=0.538" + "l2=0.0835 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.1925206 -1.703756   1.4858135 -3.1915123]]
Iteration 900 of 1000: loss=0.603 " + "l1=0.509" + "l2=0.0931 f=-0.289 shape=(1, 9000, 1)
logits [[ 2.0674453 -1.6486214  1.4529974 -3.0265598]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.23 " + "l1=8.23" + "l2=0 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.4190903 -2.2077408  1.89322   -4.8078566]]
Iteration 100 of 1000: loss=4.38 " + "l1=2.9" + "l2=1.48 f=-0.221 shape=(1, 9000, 1)
logits [[ 1.1244853 -1.3661566  1.1272714 -1.7694635]]
Iteration 200 of 1000: loss=3.25 " + "l1=1.76" + "l2=1.49 f=-0.116 shape=(1, 9000, 1)
logits [[ 0.8126072  -1.1545608   0.81603575 -0.9389888 ]]
Iteration 300 of 1000: loss=2.39 " + "l1=0.746" + "l2=1.65 f=-0.034 shape=(1, 9000, 1)
logits [[ 0.54035664 -1.0207008   0.545344   -0.20086247]]
Iteration 400 of 1000: loss=1.57 " + "l1=0.00224" + "l2=1.57 f=0.00208 shape=(1, 9000, 1)
logits [[ 0.3395461  -1.0314296   0.35122302  0.3489815 ]]
Iteration 500 of 1000: loss=1.21 " + "l1=0.0157" + "l2=1.19 f=0.0056 shape=(1, 9000, 1)
logits [[ 0.37393287 -1.0874826   0.37581137  0.36013544]]
Iteration 600 of 1000: loss=1.04 " + "l1=0.0189" + "l2=1.02 f=0.0131 shape=(1, 9000, 1)
logits [[ 0.38592735 -1.1072065   0.39627734  0.37739694]]
Iteration 700 of 1000: loss=0.934 " + "l1=0.00133" + "l2=0.932 f=0.0178 shape=(1, 9000, 1)
logits [[ 0.3825129  -1.1071377   0.3986489   0.39732307]]
Iteration 800 of 1000: loss=0.876 " + "l1=0.0104" + "l2=0.865 f=0.0148 shape=(1, 9000, 1)
logits [[ 0.3748576  -1.1317048   0.4132438   0.40282407]]
Iteration 900 of 1000: loss=0.819 " + "l1=0" + "l2=0.819 f=0.0147 shape=(1, 9000, 1)
logits [[ 0.36300516 -1.1478091   0.4203117   0.4234484 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.52 " + "l1=4.52" + "l2=0 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.4190903 -2.2077408  1.89322   -4.8078566]]
Iteration 100 of 1000: loss=3.04 " + "l1=2.32" + "l2=0.714 f=-0.278 shape=(1, 9000, 1)
logits [[ 1.655988  -1.5188214  1.3180518 -2.5686665]]
Iteration 200 of 1000: loss=2.44 " + "l1=1.63" + "l2=0.812 f=-0.213 shape=(1, 9000, 1)
logits [[ 1.1586372 -1.366739   1.1587336 -1.8034096]]
Iteration 300 of 1000: loss=2.02 " + "l1=1.22" + "l2=0.798 f=-0.142 shape=(1, 9000, 1)
logits [[ 0.9622874  -1.2337667   0.95932055 -1.2577943 ]]
Iteration 400 of 1000: loss=1.67 " + "l1=0.865" + "l2=0.807 f=-0.0855 shape=(1, 9000, 1)
logits [[ 0.77191067 -1.1573516   0.8076391  -0.76420784]]
Iteration 500 of 1000: loss=1.23 " + "l1=0.21" + "l2=1.02 f=0.00977 shape=(1, 9000, 1)
logits [[ 0.4715101  -1.085473    0.51781243  0.13524845]]
Iteration 600 of 1000: loss=0.981 " + "l1=0.00475" + "l2=0.976 f=0.0286 shape=(1, 9000, 1)
logits [[ 0.36316457 -1.0852803   0.42259395  0.4139597 ]]
Iteration 700 of 1000: loss=0.838 " + "l1=0.0115" + "l2=0.826 f=0.0242 shape=(1, 9000, 1)
logits [[ 0.3602275  -1.1359751   0.44672692  0.42584333]]
Iteration 800 of 1000: loss=0.723 " + "l1=0" + "l2=0.723 f=0.0174 shape=(1, 9000, 1)
logits [[ 0.36725256 -1.1857384   0.4426994   0.44520804]]
Iteration 900 of 1000: loss=0.638 " + "l1=0.00265" + "l2=0.635 f=0.0105 shape=(1, 9000, 1)
logits [[ 0.38105103 -1.2376744   0.45180032  0.44697535]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.67 " + "l1=2.67" + "l2=0 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.4190903 -2.2077408  1.89322   -4.8078566]]
Iteration 100 of 1000: loss=2.12 " + "l1=1.83" + "l2=0.291 f=-0.328 shape=(1, 9000, 1)
logits [[ 2.2703593 -1.7338505  1.4979252 -3.3465714]]
Iteration 200 of 1000: loss=1.82 " + "l1=1.42" + "l2=0.404 f=-0.278 shape=(1, 9000, 1)
logits [[ 1.709493  -1.506102   1.3386583 -2.6548126]]
Iteration 300 of 1000: loss=1.59 " + "l1=1.14" + "l2=0.448 f=-0.25 shape=(1, 9000, 1)
logits [[ 1.3252592 -1.3837454  1.2434727 -2.1847093]]
Iteration 400 of 1000: loss=1.41 " + "l1=0.96" + "l2=0.45 f=-0.209 shape=(1, 9000, 1)
logits [[ 1.148217  -1.3234631  1.1464294 -1.8066783]]
Iteration 500 of 1000: loss=1.27 " + "l1=0.81" + "l2=0.462 f=-0.152 shape=(1, 9000, 1)
logits [[ 1.0580145 -1.2981753  1.0621701 -1.4287716]]
Iteration 600 of 1000: loss=1.12 " + "l1=0.55" + "l2=0.569 f=-0.0773 shape=(1, 9000, 1)
logits [[ 0.8854368  -1.2719733   0.88530546 -0.8080028 ]]
Iteration 700 of 1000: loss=0.973 " + "l1=0.351" + "l2=0.622 f=-0.0315 shape=(1, 9000, 1)
logits [[ 0.75156015 -1.2981917   0.75020075 -0.32960138]]
Iteration 800 of 1000: loss=0.891 " + "l1=0.267" + "l2=0.624 f=-0.0157 shape=(1, 9000, 1)
logits [[ 0.6746487  -1.2854573   0.684226   -0.13606912]]
Iteration 900 of 1000: loss=0.82 " + "l1=0.188" + "l2=0.633 f=-0.00377 shape=(1, 9000, 1)
logits [[ 0.578358   -1.2746204   0.6297535   0.05144815]]
--- 292.72963428497314 seconds ---
Adv result:3
Loading record A03508
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.056 " + "l1=0.056" + "l2=0 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.9675348 -2.6324189  2.2753494 -4.1620765]]
Iteration 100 of 1000: loss=0.0556 " + "l1=0.0554" + "l2=0.000233 f=-0.384 shape=(1, 9000, 1)
logits [[ 2.9336312 -2.6056228  2.2544146 -4.119595 ]]
Iteration 200 of 1000: loss=0.0555 " + "l1=0.0553" + "l2=0.000247 f=-0.384 shape=(1, 9000, 1)
logits [[ 2.927538  -2.5996737  2.2500517 -4.112245 ]]
Iteration 300 of 1000: loss=0.0554 " + "l1=0.0551" + "l2=0.000305 f=-0.383 shape=(1, 9000, 1)
logits [[ 2.9199085 -2.5928583  2.244902  -4.102636 ]]
Iteration 400 of 1000: loss=0.0554 " + "l1=0.055" + "l2=0.000392 f=-0.382 shape=(1, 9000, 1)
logits [[ 2.9122663 -2.5863523  2.239952  -4.092945 ]]
Iteration 500 of 1000: loss=0.0553 " + "l1=0.0549" + "l2=0.000491 f=-0.381 shape=(1, 9000, 1)
logits [[ 2.9047544 -2.580301   2.2353745 -4.083442 ]]
Iteration 600 of 1000: loss=0.0553 " + "l1=0.0547" + "l2=0.000594 f=-0.38 shape=(1, 9000, 1)
logits [[ 2.8975942 -2.5747764  2.2311718 -4.074406 ]]
Iteration 700 of 1000: loss=0.0553 " + "l1=0.0546" + "l2=0.000705 f=-0.379 shape=(1, 9000, 1)
logits [[ 2.8906863 -2.5695245  2.227114  -4.065527 ]]
Iteration 800 of 1000: loss=0.0553 " + "l1=0.0545" + "l2=0.000784 f=-0.379 shape=(1, 9000, 1)
logits [[ 2.88404   -2.5647438  2.2233305 -4.0569415]]
Iteration 900 of 1000: loss=0.0553 " + "l1=0.0544" + "l2=0.000929 f=-0.378 shape=(1, 9000, 1)
logits [[ 2.87757   -2.5601382  2.2196696 -4.0485587]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.56 " + "l1=0.56" + "l2=0 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.9675348 -2.6324189  2.2753494 -4.1620765]]
Iteration 100 of 1000: loss=0.526 " + "l1=0.509" + "l2=0.0169 f=-0.36 shape=(1, 9000, 1)
logits [[ 2.687556  -2.40478    2.104704  -3.8258362]]
Iteration 200 of 1000: loss=0.509 " + "l1=0.485" + "l2=0.0243 f=-0.346 shape=(1, 9000, 1)
logits [[ 2.5561435 -2.2905035  2.0189312 -3.6702566]]
Iteration 300 of 1000: loss=0.497 " + "l1=0.468" + "l2=0.0287 f=-0.336 shape=(1, 9000, 1)
logits [[ 2.4634604 -2.2190895  1.9603106 -3.5495887]]
Iteration 400 of 1000: loss=0.487 " + "l1=0.453" + "l2=0.0336 f=-0.326 shape=(1, 9000, 1)
logits [[ 2.3784323 -2.1533773  1.9044088 -3.4320664]]
Iteration 500 of 1000: loss=0.478 " + "l1=0.44" + "l2=0.0374 f=-0.318 shape=(1, 9000, 1)
logits [[ 2.3026097 -2.1005661  1.854589  -3.3271651]]
Iteration 600 of 1000: loss=0.469 " + "l1=0.428" + "l2=0.0411 f=-0.309 shape=(1, 9000, 1)
logits [[ 2.2297685 -2.0512     1.8063604 -3.2210503]]
Iteration 700 of 1000: loss=0.461 " + "l1=0.416" + "l2=0.0449 f=-0.299 shape=(1, 9000, 1)
logits [[ 2.1637025 -1.9975773  1.7562826 -3.1173306]]
Iteration 800 of 1000: loss=0.454 " + "l1=0.406" + "l2=0.0482 f=-0.288 shape=(1, 9000, 1)
logits [[ 2.113415  -1.9430358  1.7068715 -3.0309107]]
Iteration 900 of 1000: loss=0.447 " + "l1=0.395" + "l2=0.0517 f=-0.277 shape=(1, 9000, 1)
logits [[ 2.0667427 -1.8879713  1.6549113 -2.9419928]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.6 " + "l1=5.6" + "l2=0 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.9675348 -2.6324189  2.2753494 -4.1620765]]
Iteration 100 of 1000: loss=3.08 " + "l1=2.05" + "l2=1.03 f=-0.177 shape=(1, 9000, 1)
logits [[ 0.9850414 -1.0573303  0.9885496 -1.6232823]]
Iteration 200 of 1000: loss=2.22 " + "l1=1.09" + "l2=1.13 f=-0.175 shape=(1, 9000, 1)
logits [[ 0.50162613 -0.58867365  0.50629115 -1.1190417 ]]
Iteration 300 of 1000: loss=1.87 " + "l1=0.741" + "l2=1.13 f=-0.193 shape=(1, 9000, 1)
logits [[ 0.31286693 -0.4269233   0.3140732  -0.97196126]]
Iteration 400 of 1000: loss=1.69 " + "l1=0.582" + "l2=1.11 f=-0.198 shape=(1, 9000, 1)
logits [[ 0.21681511 -0.35931402  0.22232023 -0.870218  ]]
Iteration 500 of 1000: loss=1.55 " + "l1=0.413" + "l2=1.14 f=-0.196 shape=(1, 9000, 1)
logits [[ 0.12749714 -0.28376263  0.1293288  -0.75710034]]
Iteration 600 of 1000: loss=1.42 " + "l1=0.239" + "l2=1.18 f=-0.192 shape=(1, 9000, 1)
logits [[ 0.02109721 -0.20711443  0.03183696 -0.61548305]]
Iteration 700 of 1000: loss=1.3 " + "l1=0.139" + "l2=1.16 f=-0.184 shape=(1, 9000, 1)
logits [[-0.03295695 -0.16250014 -0.02372538 -0.5179433 ]]
Iteration 800 of 1000: loss=1.16 " + "l1=0.0244" + "l2=1.13 f=-0.183 shape=(1, 9000, 1)
logits [[-0.11647669 -0.12211939 -0.09774558 -0.39602187]]
Iteration 900 of 1000: loss=1.05 " + "l1=0.00477" + "l2=1.05 f=-0.181 shape=(1, 9000, 1)
logits [[-0.12282743 -0.11342058 -0.10865243 -0.3807381 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.08 " + "l1=3.08" + "l2=0 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.9675348 -2.6324189  2.2753494 -4.1620765]]
Iteration 100 of 1000: loss=2.17 " + "l1=1.7" + "l2=0.467 f=-0.262 shape=(1, 9000, 1)
logits [[ 1.4698607 -1.6205797  1.462172  -2.360224 ]]
Iteration 200 of 1000: loss=1.77 " + "l1=1.19" + "l2=0.577 f=-0.188 shape=(1, 9000, 1)
logits [[ 1.0321723 -1.1399348  1.0252259 -1.6687005]]
Iteration 300 of 1000: loss=1.52 " + "l1=0.872" + "l2=0.647 f=-0.168 shape=(1, 9000, 1)
logits [[ 0.7383703 -0.8465018  0.7369938 -1.3026652]]
Iteration 400 of 1000: loss=1.39 " + "l1=0.744" + "l2=0.646 f=-0.173 shape=(1, 9000, 1)
logits [[ 0.6102969  -0.7376451   0.61567265 -1.1803432 ]]
Iteration 500 of 1000: loss=1.29 " + "l1=0.641" + "l2=0.648 f=-0.179 shape=(1, 9000, 1)
logits [[ 0.51550806 -0.6442662   0.5214856  -1.1089871 ]]
Iteration 600 of 1000: loss=1.19 " + "l1=0.549" + "l2=0.645 f=-0.189 shape=(1, 9000, 1)
logits [[ 0.42120013 -0.5717618   0.42639896 -1.0317285 ]]
Iteration 700 of 1000: loss=1.14 " + "l1=0.494" + "l2=0.649 f=-0.192 shape=(1, 9000, 1)
logits [[ 0.3671488  -0.52644014  0.3711376  -0.97964996]]
Iteration 800 of 1000: loss=1.12 " + "l1=0.466" + "l2=0.652 f=-0.191 shape=(1, 9000, 1)
logits [[ 0.3441625  -0.50241125  0.33988935 -0.94564134]]
Iteration 900 of 1000: loss=1.09 " + "l1=0.427" + "l2=0.662 f=-0.191 shape=(1, 9000, 1)
logits [[ 0.3031082 -0.4692591  0.3067362 -0.9032706]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.34 " + "l1=4.34" + "l2=0 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.9675348 -2.6324189  2.2753494 -4.1620765]]
Iteration 100 of 1000: loss=2.68 " + "l1=1.95" + "l2=0.736 f=-0.209 shape=(1, 9000, 1)
logits [[ 1.1982119 -1.312782   1.2005911 -1.9224838]]
Iteration 200 of 1000: loss=2.02 " + "l1=1.14" + "l2=0.873 f=-0.17 shape=(1, 9000, 1)
logits [[ 0.7016264  -0.77241427  0.7038935  -1.3142833 ]]
Iteration 300 of 1000: loss=1.72 " + "l1=0.837" + "l2=0.888 f=-0.181 shape=(1, 9000, 1)
logits [[ 0.4892954 -0.5903222  0.4862721 -1.1086011]]
Iteration 400 of 1000: loss=1.57 " + "l1=0.674" + "l2=0.897 f=-0.186 shape=(1, 9000, 1)
logits [[ 0.37011236 -0.5000235   0.3671791  -0.9831619 ]]
Iteration 500 of 1000: loss=1.46 " + "l1=0.574" + "l2=0.885 f=-0.188 shape=(1, 9000, 1)
logits [[ 0.28739712 -0.4411367   0.2989755  -0.8965464 ]]
Iteration 600 of 1000: loss=1.37 " + "l1=0.508" + "l2=0.859 f=-0.186 shape=(1, 9000, 1)
logits [[ 0.24928346 -0.40667996  0.24612649 -0.8312786 ]]
Iteration 700 of 1000: loss=1.27 " + "l1=0.389" + "l2=0.877 f=-0.19 shape=(1, 9000, 1)
logits [[ 0.15612352 -0.34308875  0.15826587 -0.7296079 ]]
Iteration 800 of 1000: loss=1.17 " + "l1=0.274" + "l2=0.901 f=-0.195 shape=(1, 9000, 1)
logits [[ 0.06105082 -0.28187072  0.07127139 -0.6316321 ]]
Iteration 900 of 1000: loss=1.07 " + "l1=0.121" + "l2=0.949 f=-0.191 shape=(1, 9000, 1)
logits [[-0.04361113 -0.1932754  -0.03775277 -0.48860735]]
--- 287.8383438587189 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00692 " + "l1=0.00692" + "l2=0 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.9675348 -2.6324189  2.2753494 -4.1620765]]
Iteration 100 of 1000: loss=0.00678 " + "l1=0.00665" + "l2=0.000123 f=-0.389 shape=(1, 9000, 1)
logits [[ 2.9456155 -2.63788    2.2802527 -4.144595 ]]
Iteration 200 of 1000: loss=0.00673 " + "l1=0.00662" + "l2=0.000103 f=-0.389 shape=(1, 9000, 1)
logits [[ 2.9441106 -2.6391423  2.2817488 -4.1446385]]
Iteration 300 of 1000: loss=0.00671 " + "l1=0.00657" + "l2=0.000136 f=-0.39 shape=(1, 9000, 1)
logits [[ 2.940777  -2.6404965  2.2835162 -4.1427045]]
Iteration 400 of 1000: loss=0.00669 " + "l1=0.00652" + "l2=0.000174 f=-0.39 shape=(1, 9000, 1)
logits [[ 2.936997  -2.6417575  2.2851841 -4.140222 ]]
Iteration 500 of 1000: loss=0.00667 " + "l1=0.00646" + "l2=0.00021 f=-0.39 shape=(1, 9000, 1)
logits [[ 2.9330447 -2.6428697  2.2866516 -4.137475 ]]
Iteration 600 of 1000: loss=0.00672 " + "l1=0.00641" + "l2=0.000306 f=-0.39 shape=(1, 9000, 1)
logits [[ 2.9290853 -2.6437173  2.2878172 -4.134544 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0692 " + "l1=0.0692" + "l2=0 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.9675348 -2.6324189  2.2753494 -4.1620765]]
Iteration 100 of 1000: loss=0.0568 " + "l1=0.051" + "l2=0.00584 f=-0.397 shape=(1, 9000, 1)
logits [[ 2.8302364 -2.6745603  2.320139  -4.0644956]]
Iteration 200 of 1000: loss=0.051 " + "l1=0.0423" + "l2=0.00866 f=-0.401 shape=(1, 9000, 1)
logits [[ 2.7759843 -2.7024012  2.3525593 -4.0297775]]
Iteration 300 of 1000: loss=0.0462 " + "l1=0.0353" + "l2=0.011 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.7281206 -2.7205238  2.3755243 -3.991565 ]]
Iteration 400 of 1000: loss=0.0423 " + "l1=0.0291" + "l2=0.0132 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.685297  -2.7337162  2.3944528 -3.9552362]]
Iteration 500 of 1000: loss=0.0385 " + "l1=0.0226" + "l2=0.0159 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.6433809 -2.7498493  2.4178581 -3.918395 ]]
Iteration 600 of 1000: loss=0.0351 " + "l1=0.0169" + "l2=0.0182 f=-0.401 shape=(1, 9000, 1)
logits [[ 2.5955598 -2.752877   2.426207  -3.8717978]]
Iteration 700 of 1000: loss=0.032 " + "l1=0.0117" + "l2=0.0203 f=-0.399 shape=(1, 9000, 1)
logits [[ 2.5483847 -2.7532706  2.4316728 -3.8241098]]
Iteration 800 of 1000: loss=0.0287 " + "l1=0.006" + "l2=0.0227 f=-0.397 shape=(1, 9000, 1)
logits [[ 2.4993112 -2.7510428  2.4393375 -3.7739797]]
Iteration 900 of 1000: loss=0.0256 " + "l1=0.000546" + "l2=0.025 f=-0.394 shape=(1, 9000, 1)
logits [[ 2.4546227 -2.7530859  2.4491596 -3.7281394]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0381 " + "l1=0.0381" + "l2=0 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.9675348 -2.6324189  2.2753494 -4.1620765]]
Iteration 100 of 1000: loss=0.0342 " + "l1=0.0324" + "l2=0.0018 f=-0.393 shape=(1, 9000, 1)
logits [[ 2.8887312 -2.6549437  2.298748  -4.105465 ]]
Iteration 200 of 1000: loss=0.0326 " + "l1=0.0301" + "l2=0.00256 f=-0.395 shape=(1, 9000, 1)
logits [[ 2.861586  -2.6672573  2.3144212 -4.0891485]]
Iteration 300 of 1000: loss=0.0312 " + "l1=0.028" + "l2=0.00328 f=-0.396 shape=(1, 9000, 1)
logits [[ 2.8361454 -2.6768897  2.3276315 -4.0720887]]
Iteration 400 of 1000: loss=0.03 " + "l1=0.0259" + "l2=0.00405 f=-0.397 shape=(1, 9000, 1)
logits [[ 2.8107252 -2.685655   2.3393116 -4.052787 ]]
Iteration 500 of 1000: loss=0.0289 " + "l1=0.0242" + "l2=0.0047 f=-0.397 shape=(1, 9000, 1)
logits [[ 2.7863145 -2.6906013  2.3471498 -4.032259 ]]
Iteration 600 of 1000: loss=0.028 " + "l1=0.0226" + "l2=0.00536 f=-0.397 shape=(1, 9000, 1)
logits [[ 2.7626576 -2.6928244  2.351959  -4.01024  ]]
Iteration 700 of 1000: loss=0.0272 " + "l1=0.0212" + "l2=0.00598 f=-0.397 shape=(1, 9000, 1)
logits [[ 2.741405  -2.6942713  2.3557746 -3.9903877]]
Iteration 800 of 1000: loss=0.0265 " + "l1=0.0199" + "l2=0.00658 f=-0.397 shape=(1, 9000, 1)
logits [[ 2.7220697 -2.695796   2.3594058 -3.9725657]]
Iteration 900 of 1000: loss=0.0259 " + "l1=0.0188" + "l2=0.00715 f=-0.396 shape=(1, 9000, 1)
logits [[ 2.702165  -2.6950617  2.3610187 -3.9528313]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0536 " + "l1=0.0536" + "l2=0 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.9675348 -2.6324189  2.2753494 -4.1620765]]
Iteration 100 of 1000: loss=0.0461 " + "l1=0.0425" + "l2=0.00359 f=-0.395 shape=(1, 9000, 1)
logits [[ 2.8592644 -2.6658585  2.310817  -4.0850024]]
Iteration 200 of 1000: loss=0.0427 " + "l1=0.0376" + "l2=0.00518 f=-0.398 shape=(1, 9000, 1)
logits [[ 2.8173797 -2.6833646  2.3328593 -4.0577264]]
Iteration 300 of 1000: loss=0.0398 " + "l1=0.0331" + "l2=0.00668 f=-0.399 shape=(1, 9000, 1)
logits [[ 2.780859  -2.6998074  2.3537784 -4.03193  ]]
Iteration 400 of 1000: loss=0.0373 " + "l1=0.0294" + "l2=0.00794 f=-0.399 shape=(1, 9000, 1)
logits [[ 2.7459195 -2.7084436  2.3667135 -4.001465 ]]
Iteration 500 of 1000: loss=0.0353 " + "l1=0.0262" + "l2=0.00911 f=-0.399 shape=(1, 9000, 1)
logits [[ 2.714237  -2.713998   2.3763769 -3.9732046]]
Iteration 600 of 1000: loss=0.0336 " + "l1=0.0232" + "l2=0.0104 f=-0.399 shape=(1, 9000, 1)
logits [[ 2.6828973 -2.7164993  2.3832307 -3.9439607]]
Iteration 700 of 1000: loss=0.0318 " + "l1=0.0198" + "l2=0.012 f=-0.398 shape=(1, 9000, 1)
logits [[ 2.6499712 -2.7228723  2.3941112 -3.912232 ]]
Iteration 800 of 1000: loss=0.0301 " + "l1=0.0167" + "l2=0.0134 f=-0.397 shape=(1, 9000, 1)
logits [[ 2.6159854 -2.7261524  2.4010363 -3.8784769]]
Iteration 900 of 1000: loss=0.0285 " + "l1=0.0139" + "l2=0.0146 f=-0.396 shape=(1, 9000, 1)
logits [[ 2.5838306 -2.7266026  2.4041889 -3.845485 ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0614 " + "l1=0.0614" + "l2=0 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.9675348 -2.6324189  2.2753494 -4.1620765]]
Iteration 100 of 1000: loss=0.0516 " + "l1=0.047" + "l2=0.00463 f=-0.396 shape=(1, 9000, 1)
logits [[ 2.8451076 -2.6703942  2.3155906 -4.0749235]]
Iteration 200 of 1000: loss=0.0471 " + "l1=0.0404" + "l2=0.00675 f=-0.399 shape=(1, 9000, 1)
logits [[ 2.797795  -2.692038   2.3429432 -4.0448956]]
Iteration 300 of 1000: loss=0.0433 " + "l1=0.0348" + "l2=0.00857 f=-0.401 shape=(1, 9000, 1)
logits [[ 2.7558284 -2.7096481  2.364279  -4.0130467]]
Iteration 400 of 1000: loss=0.0401 " + "l1=0.0297" + "l2=0.0104 f=-0.401 shape=(1, 9000, 1)
logits [[ 2.715535  -2.7207973  2.3805578 -3.977644 ]]
Iteration 500 of 1000: loss=0.0375 " + "l1=0.0251" + "l2=0.0123 f=-0.4 shape=(1, 9000, 1)
logits [[ 2.6795864 -2.7310548  2.3962185 -3.946524 ]]
Iteration 600 of 1000: loss=0.0348 " + "l1=0.0205" + "l2=0.0143 f=-0.399 shape=(1, 9000, 1)
logits [[ 2.6423426 -2.7393925  2.4111364 -3.9114776]]
Iteration 700 of 1000: loss=0.0322 " + "l1=0.0164" + "l2=0.0158 f=-0.398 shape=(1, 9000, 1)
logits [[ 2.601532  -2.740468   2.4163117 -3.8710616]]
Iteration 800 of 1000: loss=0.0302 " + "l1=0.0128" + "l2=0.0174 f=-0.397 shape=(1, 9000, 1)
logits [[ 2.5621386 -2.7382445  2.4178615 -3.8316543]]
Iteration 900 of 1000: loss=0.028 " + "l1=0.0094" + "l2=0.0186 f=-0.396 shape=(1, 9000, 1)
logits [[ 2.5242333 -2.7333074  2.4182966 -3.7918143]]
--- 270.8193953037262 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0713 " + "l1=0.0713" + "l2=0 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.9675348 -2.6324189  2.2753494 -4.1620765]]
Iteration 100 of 1000: loss=0.0705 " + "l1=0.0701" + "l2=0.000433 f=-0.384 shape=(1, 9000, 1)
logits [[ 2.9170887 -2.6145384  2.2522657 -4.0896587]]
Iteration 200 of 1000: loss=0.0703 " + "l1=0.0698" + "l2=0.000477 f=-0.383 shape=(1, 9000, 1)
logits [[ 2.9052148 -2.6097143  2.2467434 -4.072588 ]]
Iteration 300 of 1000: loss=0.07 " + "l1=0.0694" + "l2=0.000579 f=-0.381 shape=(1, 9000, 1)
logits [[ 2.8919256 -2.6045365  2.240522  -4.052557 ]]
Iteration 400 of 1000: loss=0.0698 " + "l1=0.0691" + "l2=0.000711 f=-0.38 shape=(1, 9000, 1)
logits [[ 2.8784316 -2.5995314  2.2343168 -4.0319147]]
Iteration 500 of 1000: loss=0.0697 " + "l1=0.0688" + "l2=0.000939 f=-0.378 shape=(1, 9000, 1)
logits [[ 2.864669  -2.5945733  2.2281892 -4.0108204]]
Iteration 600 of 1000: loss=0.0695 " + "l1=0.0684" + "l2=0.00106 f=-0.377 shape=(1, 9000, 1)
logits [[ 2.8513577 -2.590207   2.2224724 -3.9903393]]
Iteration 700 of 1000: loss=0.0694 " + "l1=0.0681" + "l2=0.0013 f=-0.375 shape=(1, 9000, 1)
logits [[ 2.838749  -2.586221   2.2171924 -3.9709015]]
Iteration 800 of 1000: loss=0.0693 " + "l1=0.0678" + "l2=0.00146 f=-0.374 shape=(1, 9000, 1)
logits [[ 2.8266084 -2.5822997  2.2120874 -3.9522254]]
Iteration 900 of 1000: loss=0.0692 " + "l1=0.0675" + "l2=0.00168 f=-0.373 shape=(1, 9000, 1)
logits [[ 2.8146224 -2.5782456  2.206969  -3.933678 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.713 " + "l1=0.713" + "l2=0 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.9675348 -2.6324189  2.2753494 -4.1620765]]
Iteration 100 of 1000: loss=0.643 " + "l1=0.607" + "l2=0.0358 f=-0.353 shape=(1, 9000, 1)
logits [[ 2.521764  -2.4607267  2.0727122 -3.545755 ]]
Iteration 200 of 1000: loss=0.601 " + "l1=0.546" + "l2=0.0544 f=-0.333 shape=(1, 9000, 1)
logits [[ 2.2741356 -2.3817534  1.9658413 -3.1899345]]
Iteration 300 of 1000: loss=0.566 " + "l1=0.496" + "l2=0.0695 f=-0.312 shape=(1, 9000, 1)
logits [[ 2.075947  -2.3279068  1.8904843 -2.8863533]]
Iteration 400 of 1000: loss=0.533 " + "l1=0.45" + "l2=0.0831 f=-0.294 shape=(1, 9000, 1)
logits [[ 1.8933171 -2.287478   1.8273592 -2.6081767]]
Iteration 500 of 1000: loss=0.508 " + "l1=0.417" + "l2=0.0905 f=-0.274 shape=(1, 9000, 1)
logits [[ 1.7761538 -2.247452   1.7727456 -2.3959465]]
Iteration 600 of 1000: loss=0.49 " + "l1=0.397" + "l2=0.0931 f=-0.254 shape=(1, 9000, 1)
logits [[ 1.716745  -2.1954265  1.7166846 -2.252015 ]]
Iteration 700 of 1000: loss=0.476 " + "l1=0.38" + "l2=0.0953 f=-0.235 shape=(1, 9000, 1)
logits [[ 1.6706206 -2.1492007  1.6692939 -2.1318958]]
Iteration 800 of 1000: loss=0.463 " + "l1=0.364" + "l2=0.0989 f=-0.22 shape=(1, 9000, 1)
logits [[ 1.623048  -2.1095672  1.6233412 -2.0151668]]
Iteration 900 of 1000: loss=0.45 " + "l1=0.348" + "l2=0.102 f=-0.206 shape=(1, 9000, 1)
logits [[ 1.5776138 -2.0769613  1.5781823 -1.9032903]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.13 " + "l1=7.13" + "l2=0 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.9675348 -2.6324189  2.2753494 -4.1620765]]
Iteration 100 of 1000: loss=2.41 " + "l1=0.668" + "l2=1.74 f=-0.0857 shape=(1, 9000, 1)
logits [[ 0.5459578  -1.3841236   0.58145833 -0.08618071]]
Iteration 200 of 1000: loss=1.39 " + "l1=0.0252" + "l2=1.37 f=-0.0717 shape=(1, 9000, 1)
logits [[ 0.32755032 -1.2636222   0.33719236  0.3120374 ]]
Iteration 300 of 1000: loss=1.11 " + "l1=0.00153" + "l2=1.11 f=-0.0641 shape=(1, 9000, 1)
logits [[ 0.3373645  -1.2832907   0.34552288  0.343992  ]]
Iteration 400 of 1000: loss=0.992 " + "l1=0" + "l2=0.992 f=-0.0689 shape=(1, 9000, 1)
logits [[ 0.32934368 -1.2967305   0.3429754   0.3489964 ]]
Iteration 500 of 1000: loss=0.914 " + "l1=0" + "l2=0.914 f=-0.0725 shape=(1, 9000, 1)
logits [[ 0.3262228  -1.3123097   0.34142792  0.35472462]]
Iteration 600 of 1000: loss=0.851 " + "l1=0.00379" + "l2=0.847 f=-0.0728 shape=(1, 9000, 1)
logits [[ 0.3443219  -1.32411     0.34618577  0.3423999 ]]
Iteration 700 of 1000: loss=0.803 " + "l1=0" + "l2=0.803 f=-0.0709 shape=(1, 9000, 1)
logits [[ 0.34004065 -1.3230283   0.34576088  0.3538183 ]]
Iteration 800 of 1000: loss=0.761 " + "l1=0.00323" + "l2=0.758 f=-0.0726 shape=(1, 9000, 1)
logits [[ 0.34249008 -1.3361257   0.35319436  0.34996092]]
Iteration 900 of 1000: loss=0.733 " + "l1=0" + "l2=0.733 f=-0.0737 shape=(1, 9000, 1)
logits [[ 0.32052338 -1.338468    0.351084    0.37202823]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.92 " + "l1=3.92" + "l2=0 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.9675348 -2.6324189  2.2753494 -4.1620765]]
Iteration 100 of 1000: loss=2.06 " + "l1=1.33" + "l2=0.736 f=-0.204 shape=(1, 9000, 1)
logits [[ 1.1346312 -1.835339   1.1504213 -1.263884 ]]
Iteration 200 of 1000: loss=1.41 " + "l1=0.557" + "l2=0.857 f=-0.117 shape=(1, 9000, 1)
logits [[ 0.6645123  -1.4715842   0.6753945  -0.33799756]]
Iteration 300 of 1000: loss=1.08 " + "l1=0.145" + "l2=0.932 f=-0.0834 shape=(1, 9000, 1)
logits [[ 0.40832853 -1.3193705   0.42070827  0.15655872]]
Iteration 400 of 1000: loss=0.893 " + "l1=0.00444" + "l2=0.888 f=-0.0796 shape=(1, 9000, 1)
logits [[ 0.3134919  -1.2971809   0.33660278  0.328529  ]]
Iteration 500 of 1000: loss=0.803 " + "l1=0" + "l2=0.803 f=-0.077 shape=(1, 9000, 1)
logits [[ 0.3265754  -1.3208017   0.33892584  0.3473112 ]]
Iteration 600 of 1000: loss=0.734 " + "l1=0.00127" + "l2=0.733 f=-0.077 shape=(1, 9000, 1)
logits [[ 0.34131494 -1.339777    0.34646448  0.34415716]]
Iteration 700 of 1000: loss=0.685 " + "l1=0" + "l2=0.685 f=-0.0765 shape=(1, 9000, 1)
logits [[ 0.34204844 -1.3574089   0.35153693  0.35783523]]
Iteration 800 of 1000: loss=0.647 " + "l1=0" + "l2=0.647 f=-0.0764 shape=(1, 9000, 1)
logits [[ 0.34241623 -1.3621448   0.3528345   0.36138746]]
Iteration 900 of 1000: loss=0.619 " + "l1=0.00119" + "l2=0.618 f=-0.0755 shape=(1, 9000, 1)
logits [[ 0.33748114 -1.3648263   0.36375073  0.36158618]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.32 " + "l1=2.32" + "l2=0 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.9675348 -2.6324189  2.2753494 -4.1620765]]
Iteration 100 of 1000: loss=1.55 " + "l1=1.21" + "l2=0.337 f=-0.278 shape=(1, 9000, 1)
logits [[ 1.5801874 -2.1314483  1.57665   -2.1378524]]
Iteration 200 of 1000: loss=1.24 " + "l1=0.818" + "l2=0.425 f=-0.2 shape=(1, 9000, 1)
logits [[ 1.1962042 -1.8793197  1.2003875 -1.3166367]]
Iteration 300 of 1000: loss=1.04 " + "l1=0.574" + "l2=0.471 f=-0.153 shape=(1, 9000, 1)
logits [[ 0.9481799  -1.6954474   0.9514014  -0.81458396]]
Iteration 400 of 1000: loss=0.917 " + "l1=0.423" + "l2=0.494 f=-0.127 shape=(1, 9000, 1)
logits [[ 0.796257  -1.6038156  0.7994395 -0.5007433]]
Iteration 500 of 1000: loss=0.83 " + "l1=0.316" + "l2=0.514 f=-0.117 shape=(1, 9000, 1)
logits [[ 0.6775174  -1.5291418   0.6781466  -0.29292774]]
Iteration 600 of 1000: loss=0.761 " + "l1=0.218" + "l2=0.543 f=-0.11 shape=(1, 9000, 1)
logits [[ 0.56071514 -1.4643807   0.56631523 -0.10335732]]
Iteration 700 of 1000: loss=0.7 " + "l1=0.131" + "l2=0.568 f=-0.112 shape=(1, 9000, 1)
logits [[ 0.44487712 -1.4094934   0.46088314  0.05661533]]
Iteration 800 of 1000: loss=0.647 " + "l1=0.0685" + "l2=0.579 f=-0.102 shape=(1, 9000, 1)
logits [[ 0.35883626 -1.3767456   0.4100736   0.19923699]]
Iteration 900 of 1000: loss=0.605 " + "l1=0.0187" + "l2=0.587 f=-0.0933 shape=(1, 9000, 1)
logits [[ 0.2788451  -1.3505144   0.3779778   0.32043537]]
--- 295.42056226730347 seconds ---
Adv result:3
Loading record A03548
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0682 " + "l1=0.0682" + "l2=0 f=-0.881 shape=(1, 9000, 1)
logits [[  5.9386306   -0.88371736   2.5614028  -11.138874  ]]
Iteration 100 of 1000: loss=0.0677 " + "l1=0.0674" + "l2=0.000348 f=-0.882 shape=(1, 9000, 1)
logits [[  5.8929663  -0.8452084   2.552114  -11.127324 ]]
Iteration 200 of 1000: loss=0.0676 " + "l1=0.0672" + "l2=0.000365 f=-0.882 shape=(1, 9000, 1)
logits [[  5.886572   -0.8383747   2.5498757 -11.125592 ]]
Iteration 300 of 1000: loss=0.0675 " + "l1=0.0671" + "l2=0.000446 f=-0.882 shape=(1, 9000, 1)
logits [[  5.879027   -0.8305382   2.5476131 -11.123527 ]]
Iteration 400 of 1000: loss=0.0675 " + "l1=0.067" + "l2=0.00052 f=-0.882 shape=(1, 9000, 1)
logits [[  5.87223     -0.82353187   2.5455952  -11.121356  ]]
Iteration 500 of 1000: loss=0.0674 " + "l1=0.0668" + "l2=0.000608 f=-0.882 shape=(1, 9000, 1)
logits [[  5.8660016  -0.8170539   2.5436206 -11.119159 ]]
Iteration 600 of 1000: loss=0.0675 " + "l1=0.0667" + "l2=0.000745 f=-0.882 shape=(1, 9000, 1)
logits [[  5.8601475  -0.8110378   2.5416713 -11.116819 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.682 " + "l1=0.682" + "l2=0 f=-0.881 shape=(1, 9000, 1)
logits [[  5.9386306   -0.88371736   2.5614028  -11.138874  ]]
Iteration 100 of 1000: loss=0.635 " + "l1=0.607" + "l2=0.0277 f=-0.89 shape=(1, 9000, 1)
logits [[  5.5314045   -0.53810453   2.4737232  -11.0287285 ]]
Iteration 200 of 1000: loss=0.616 " + "l1=0.575" + "l2=0.0409 f=-0.891 shape=(1, 9000, 1)
logits [[  5.365351    -0.38515866   2.4243295  -10.969503  ]]
Iteration 300 of 1000: loss=0.601 " + "l1=0.547" + "l2=0.0546 f=-0.891 shape=(1, 9000, 1)
logits [[  5.2209296   -0.24627142   2.3766615  -10.9161215 ]]
Iteration 400 of 1000: loss=0.584 " + "l1=0.515" + "l2=0.0685 f=-0.884 shape=(1, 9000, 1)
logits [[  5.065844    -0.08791097   2.312948   -10.826822  ]]
Iteration 500 of 1000: loss=0.566 " + "l1=0.486" + "l2=0.0801 f=-0.877 shape=(1, 9000, 1)
logits [[  4.9079657    0.05056905   2.2634966  -10.730954  ]]
Iteration 600 of 1000: loss=0.55 " + "l1=0.458" + "l2=0.0917 f=-0.871 shape=(1, 9000, 1)
logits [[  4.7545266    0.17119797   2.221958   -10.632473  ]]
Iteration 700 of 1000: loss=0.534 " + "l1=0.434" + "l2=0.0995 f=-0.865 shape=(1, 9000, 1)
logits [[  4.609473    0.2659775   2.1882856 -10.522811 ]]
Iteration 800 of 1000: loss=0.52 " + "l1=0.411" + "l2=0.109 f=-0.863 shape=(1, 9000, 1)
logits [[  4.458162     0.35225216   2.1537583  -10.4180565 ]]
Iteration 900 of 1000: loss=0.507 " + "l1=0.388" + "l2=0.119 f=-0.863 shape=(1, 9000, 1)
logits [[  4.308002     0.42710912   2.1175683  -10.303768  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.82 " + "l1=6.82" + "l2=0 f=-0.881 shape=(1, 9000, 1)
logits [[  5.9386306   -0.88371736   2.5614028  -11.138874  ]]
Iteration 100 of 1000: loss=1.52 " + "l1=0.00875" + "l2=1.51 f=-1.12 shape=(1, 9000, 1)
logits [[ 1.8470476  1.8382941  1.8423849 -9.990692 ]]
Iteration 200 of 1000: loss=1.15 " + "l1=0" + "l2=1.15 f=-1.11 shape=(1, 9000, 1)
logits [[ 1.8069758  1.8180854  1.795925  -9.875052 ]]
Iteration 300 of 1000: loss=1.04 " + "l1=0" + "l2=1.04 f=-1.11 shape=(1, 9000, 1)
logits [[ 1.7813821  1.7910949  1.7856127 -9.780688 ]]
Iteration 400 of 1000: loss=0.977 " + "l1=0.00319" + "l2=0.973 f=-1.09 shape=(1, 9000, 1)
logits [[ 1.7631775  1.7680819  1.7712723 -9.682022 ]]
Iteration 500 of 1000: loss=0.957 " + "l1=0.0332" + "l2=0.924 f=-1.08 shape=(1, 9000, 1)
logits [[ 1.7719703  1.7387307  1.7540551 -9.590211 ]]
Iteration 600 of 1000: loss=0.901 " + "l1=0" + "l2=0.901 f=-1.07 shape=(1, 9000, 1)
logits [[ 1.6793635  1.7514429  1.7457571 -9.470566 ]]
Iteration 700 of 1000: loss=0.845 " + "l1=0.00855" + "l2=0.837 f=-1.05 shape=(1, 9000, 1)
logits [[ 1.7271312  1.7185861  1.721674  -9.375758 ]]
Iteration 800 of 1000: loss=0.797 " + "l1=0" + "l2=0.797 f=-1.04 shape=(1, 9000, 1)
logits [[ 1.6927109  1.7154224  1.7016176 -9.270742 ]]
Iteration 900 of 1000: loss=0.758 " + "l1=0" + "l2=0.758 f=-1.03 shape=(1, 9000, 1)
logits [[ 1.6615033  1.7002187  1.6901876 -9.162248 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.75 " + "l1=3.75" + "l2=0 f=-0.881 shape=(1, 9000, 1)
logits [[  5.9386306   -0.88371736   2.5614028  -11.138874  ]]
Iteration 100 of 1000: loss=1.55 " + "l1=0.337" + "l2=1.21 f=-1.07 shape=(1, 9000, 1)
logits [[ 2.106871   1.4934765  2.083203  -9.975985 ]]
Iteration 200 of 1000: loss=1.07 " + "l1=0.0105" + "l2=1.06 f=-1.1 shape=(1, 9000, 1)
logits [[ 1.8371894  1.8181616  1.8274577 -9.867249 ]]
Iteration 300 of 1000: loss=0.947 " + "l1=0" + "l2=0.947 f=-1.08 shape=(1, 9000, 1)
logits [[ 1.7931457  1.8036892  1.7966522 -9.724874 ]]
Iteration 400 of 1000: loss=0.865 " + "l1=0.000119" + "l2=0.865 f=-1.07 shape=(1, 9000, 1)
logits [[ 1.7791725  1.7789557  1.7774512 -9.606431 ]]
Iteration 500 of 1000: loss=0.796 " + "l1=0.003" + "l2=0.793 f=-1.06 shape=(1, 9000, 1)
logits [[ 1.7639252  1.7584656  1.7521137 -9.500547 ]]
Iteration 600 of 1000: loss=0.733 " + "l1=0.00334" + "l2=0.73 f=-1.04 shape=(1, 9000, 1)
logits [[ 1.7357391  1.7296634  1.7349842 -9.379654 ]]
Iteration 700 of 1000: loss=0.688 " + "l1=0" + "l2=0.688 f=-1.04 shape=(1, 9000, 1)
logits [[ 1.6892061  1.7185022  1.7119724 -9.265682 ]]
Iteration 800 of 1000: loss=0.644 " + "l1=0" + "l2=0.644 f=-1.03 shape=(1, 9000, 1)
logits [[ 1.6881946  1.6909195  1.690277  -9.174549 ]]
Iteration 900 of 1000: loss=0.618 " + "l1=0.00892" + "l2=0.609 f=-1.02 shape=(1, 9000, 1)
logits [[ 1.6816221  1.6653991  1.6719232 -9.079862 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.22 " + "l1=2.22" + "l2=0 f=-0.881 shape=(1, 9000, 1)
logits [[  5.9386306   -0.88371736   2.5614028  -11.138874  ]]
Iteration 100 of 1000: loss=1.52 " + "l1=1.01" + "l2=0.51 f=-0.932 shape=(1, 9000, 1)
logits [[  3.8066232    0.69800025   2.182347   -10.415423  ]]
Iteration 200 of 1000: loss=1.13 " + "l1=0.303" + "l2=0.823 f=-1.05 shape=(1, 9000, 1)
logits [[ 2.3230417  1.389763   2.100423  -9.99956  ]]
Iteration 300 of 1000: loss=0.906 " + "l1=0.123" + "l2=0.783 f=-1.06 shape=(1, 9000, 1)
logits [[ 1.9720881  1.5979508  1.9754527 -9.790377 ]]
Iteration 400 of 1000: loss=0.756 " + "l1=0.0608" + "l2=0.695 f=-1.06 shape=(1, 9000, 1)
logits [[ 1.8591292  1.6810721  1.8680363 -9.64338  ]]
Iteration 500 of 1000: loss=0.653 " + "l1=0.0176" + "l2=0.636 f=-1.05 shape=(1, 9000, 1)
logits [[ 1.7673223  1.7190745  1.7732143 -9.465699 ]]
Iteration 600 of 1000: loss=0.597 " + "l1=0.00924" + "l2=0.587 f=-1.04 shape=(1, 9000, 1)
logits [[ 1.7367842  1.7083483  1.7177134 -9.312562 ]]
Iteration 700 of 1000: loss=0.557 " + "l1=0.00599" + "l2=0.551 f=-1.03 shape=(1, 9000, 1)
logits [[ 1.6843363  1.6830581  1.701481  -9.196414 ]]
Iteration 800 of 1000: loss=0.526 " + "l1=0.00851" + "l2=0.517 f=-1.02 shape=(1, 9000, 1)
logits [[ 1.6883906  1.6622192  1.6750964 -9.11312  ]]
Iteration 900 of 1000: loss=0.5 " + "l1=0.00988" + "l2=0.49 f=-1.01 shape=(1, 9000, 1)
logits [[ 1.6619755  1.6315695  1.6558627 -9.006255 ]]
--- 273.27279472351074 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0338 " + "l1=0.0338" + "l2=0 f=-0.881 shape=(1, 9000, 1)
logits [[  5.9386306   -0.88371736   2.5614028  -11.138874  ]]
Iteration 100 of 1000: loss=0.0336 " + "l1=0.0334" + "l2=0.00019 f=-0.882 shape=(1, 9000, 1)
logits [[  5.9086494   -0.87234396   2.5664306  -11.131927  ]]
Iteration 200 of 1000: loss=0.0336 " + "l1=0.0334" + "l2=0.000151 f=-0.882 shape=(1, 9000, 1)
logits [[  5.9082704  -0.871363    2.5663722 -11.132677 ]]
Iteration 300 of 1000: loss=0.0336 " + "l1=0.0334" + "l2=0.000182 f=-0.883 shape=(1, 9000, 1)
logits [[  5.905662   -0.8698942   2.5668232 -11.132841 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.338 " + "l1=0.338" + "l2=0 f=-0.881 shape=(1, 9000, 1)
logits [[  5.9386306   -0.88371736   2.5614028  -11.138874  ]]
Iteration 100 of 1000: loss=0.321 " + "l1=0.311" + "l2=0.0107 f=-0.893 shape=(1, 9000, 1)
logits [[  5.707877   -0.8060019   2.602     -11.076551 ]]
Iteration 200 of 1000: loss=0.316 " + "l1=0.302" + "l2=0.0145 f=-0.898 shape=(1, 9000, 1)
logits [[  5.6294284   -0.76976585   2.6119208  -11.065141  ]]
Iteration 300 of 1000: loss=0.313 " + "l1=0.295" + "l2=0.0176 f=-0.903 shape=(1, 9000, 1)
logits [[  5.571284   -0.7443029   2.6201394 -11.057195 ]]
Iteration 400 of 1000: loss=0.31 " + "l1=0.29" + "l2=0.0199 f=-0.905 shape=(1, 9000, 1)
logits [[  5.5308137   -0.72629756   2.6279852  -11.053059  ]]
Iteration 500 of 1000: loss=0.308 " + "l1=0.286" + "l2=0.0217 f=-0.907 shape=(1, 9000, 1)
logits [[  5.49781   -0.712531   2.634133 -11.046995]]
Iteration 600 of 1000: loss=0.306 " + "l1=0.283" + "l2=0.0232 f=-0.908 shape=(1, 9000, 1)
logits [[  5.468608    -0.69986206   2.6396515  -11.0408325 ]]
Iteration 700 of 1000: loss=0.304 " + "l1=0.28" + "l2=0.0244 f=-0.909 shape=(1, 9000, 1)
logits [[  5.4438844  -0.6883966   2.646501  -11.0374155]]
Iteration 800 of 1000: loss=0.301 " + "l1=0.276" + "l2=0.0256 f=-0.91 shape=(1, 9000, 1)
logits [[  5.4114056   -0.67326546   2.652789   -11.032752  ]]
Iteration 900 of 1000: loss=0.299 " + "l1=0.271" + "l2=0.0275 f=-0.913 shape=(1, 9000, 1)
logits [[  5.3671265  -0.6554622   2.6572294 -11.021636 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.38 " + "l1=3.38" + "l2=0 f=-0.881 shape=(1, 9000, 1)
logits [[  5.9386306   -0.88371736   2.5614028  -11.138874  ]]
Iteration 100 of 1000: loss=1.03 " + "l1=0.000839" + "l2=1.03 f=-1.07 shape=(1, 9000, 1)
logits [[  3.0481484   -0.31097606   3.0473096  -10.082067  ]]
Iteration 200 of 1000: loss=0.771 " + "l1=0.00683" + "l2=0.764 f=-1.08 shape=(1, 9000, 1)
logits [[  3.0296557   -0.28421104   3.0228226  -10.095712  ]]
Iteration 300 of 1000: loss=0.7 " + "l1=0.0319" + "l2=0.668 f=-1.08 shape=(1, 9000, 1)
logits [[  3.0412626   -0.27698013   3.0093472  -10.080242  ]]
Iteration 400 of 1000: loss=0.611 " + "l1=0" + "l2=0.611 f=-1.07 shape=(1, 9000, 1)
logits [[  2.9967115   -0.25029445   2.998832   -10.041519  ]]
Iteration 500 of 1000: loss=0.563 " + "l1=0.0128" + "l2=0.551 f=-1.07 shape=(1, 9000, 1)
logits [[  2.985625    -0.21987474   2.972816   -10.013448  ]]
Iteration 600 of 1000: loss=0.507 " + "l1=0" + "l2=0.507 f=-1.06 shape=(1, 9000, 1)
logits [[ 2.9487963  -0.17913413  2.9496439  -9.975701  ]]
Iteration 700 of 1000: loss=0.461 " + "l1=0" + "l2=0.461 f=-1.06 shape=(1, 9000, 1)
logits [[ 2.9089103  -0.14548391  2.911499   -9.91757   ]]
Iteration 800 of 1000: loss=0.426 " + "l1=0" + "l2=0.426 f=-1.07 shape=(1, 9000, 1)
logits [[ 2.8394487  -0.12420375  2.8762305  -9.854124  ]]
Iteration 900 of 1000: loss=0.379 " + "l1=0" + "l2=0.379 f=-1.06 shape=(1, 9000, 1)
logits [[ 2.825401   -0.12180194  2.8331225  -9.796319  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.86 " + "l1=1.86" + "l2=0 f=-0.881 shape=(1, 9000, 1)
logits [[  5.9386306   -0.88371736   2.5614028  -11.138874  ]]
Iteration 100 of 1000: loss=1.18 " + "l1=0.693" + "l2=0.483 f=-0.989 shape=(1, 9000, 1)
logits [[  4.120763    -0.47826666   2.86066    -10.46023   ]]
Iteration 200 of 1000: loss=0.755 " + "l1=0.0291" + "l2=0.726 f=-1.06 shape=(1, 9000, 1)
logits [[  3.1071546   -0.32510012   3.0542     -10.089805  ]]
Iteration 300 of 1000: loss=0.628 " + "l1=0" + "l2=0.628 f=-1.06 shape=(1, 9000, 1)
logits [[  3.0439193   -0.30913153   3.058553   -10.046753  ]]
Iteration 400 of 1000: loss=0.553 " + "l1=0" + "l2=0.553 f=-1.06 shape=(1, 9000, 1)
logits [[  3.0258238   -0.28123474   3.0342946  -10.003127  ]]
Iteration 500 of 1000: loss=0.492 " + "l1=0.0137" + "l2=0.478 f=-1.05 shape=(1, 9000, 1)
logits [[ 3.006845   -0.23238249  2.9820201  -9.949175  ]]
Iteration 600 of 1000: loss=0.43 " + "l1=0" + "l2=0.43 f=-1.05 shape=(1, 9000, 1)
logits [[ 2.9308875  -0.18479952  2.9424956  -9.872481  ]]
Iteration 700 of 1000: loss=0.377 " + "l1=0" + "l2=0.377 f=-1.05 shape=(1, 9000, 1)
logits [[ 2.8766205 -0.163423   2.8861392 -9.789739 ]]
Iteration 800 of 1000: loss=0.331 " + "l1=0.00788" + "l2=0.323 f=-1.05 shape=(1, 9000, 1)
logits [[ 2.8568125  -0.17612891  2.842489   -9.725621  ]]
Iteration 900 of 1000: loss=0.287 " + "l1=0" + "l2=0.287 f=-1.05 shape=(1, 9000, 1)
logits [[ 2.786661  -0.1768893  2.8046906 -9.625398 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.1 " + "l1=1.1" + "l2=0 f=-0.881 shape=(1, 9000, 1)
logits [[  5.9386306   -0.88371736   2.5614028  -11.138874  ]]
Iteration 100 of 1000: loss=0.893 " + "l1=0.749" + "l2=0.144 f=-0.931 shape=(1, 9000, 1)
logits [[  5.0175614  -0.6316047   2.7116194 -10.823343 ]]
Iteration 200 of 1000: loss=0.78 " + "l1=0.53" + "l2=0.251 f=-0.978 shape=(1, 9000, 1)
logits [[  4.423535   -0.4797365   2.794147  -10.648821 ]]
Iteration 300 of 1000: loss=0.703 " + "l1=0.399" + "l2=0.304 f=-0.995 shape=(1, 9000, 1)
logits [[  4.0634193   -0.39170438   2.835153   -10.486014  ]]
Iteration 400 of 1000: loss=0.633 " + "l1=0.274" + "l2=0.359 f=-1.01 shape=(1, 9000, 1)
logits [[  3.7380226  -0.3052944   2.8957245 -10.348994 ]]
Iteration 500 of 1000: loss=0.564 " + "l1=0.167" + "l2=0.397 f=-1 shape=(1, 9000, 1)
logits [[  3.44835     -0.23041521   2.933012   -10.168734  ]]
Iteration 600 of 1000: loss=0.479 " + "l1=0.0264" + "l2=0.452 f=-1.03 shape=(1, 9000, 1)
logits [[ 3.0490139  -0.15811923  2.9677796  -9.959378  ]]
Iteration 700 of 1000: loss=0.402 " + "l1=0.00466" + "l2=0.398 f=-1.03 shape=(1, 9000, 1)
logits [[ 2.9265907  -0.12743564  2.9122648  -9.812044  ]]
Iteration 800 of 1000: loss=0.33 " + "l1=0.00813" + "l2=0.321 f=-1.03 shape=(1, 9000, 1)
logits [[ 2.8611321  -0.14164102  2.836105   -9.655773  ]]
Iteration 900 of 1000: loss=0.274 " + "l1=0.00228" + "l2=0.272 f=-1.02 shape=(1, 9000, 1)
logits [[ 2.7558472  -0.13139829  2.7488437  -9.46442   ]]
--- 258.18930983543396 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.171 " + "l1=0.171" + "l2=0 f=-0.881 shape=(1, 9000, 1)
logits [[  5.9386306   -0.88371736   2.5614028  -11.138874  ]]
Iteration 100 of 1000: loss=0.17 " + "l1=0.17" + "l2=0.000442 f=-0.877 shape=(1, 9000, 1)
logits [[  5.893751    -0.87138045   2.5495892  -11.080139  ]]
Iteration 200 of 1000: loss=0.17 " + "l1=0.17" + "l2=0.000441 f=-0.876 shape=(1, 9000, 1)
logits [[  5.888717   -0.8681511   2.546836  -11.072322 ]]
Iteration 300 of 1000: loss=0.17 " + "l1=0.169" + "l2=0.000529 f=-0.875 shape=(1, 9000, 1)
logits [[  5.8821034   -0.86499804   2.5437677  -11.0624    ]]
Iteration 400 of 1000: loss=0.17 " + "l1=0.169" + "l2=0.000607 f=-0.875 shape=(1, 9000, 1)
logits [[  5.875802   -0.861987    2.5407293 -11.052574 ]]
Iteration 500 of 1000: loss=0.17 " + "l1=0.169" + "l2=0.00071 f=-0.874 shape=(1, 9000, 1)
logits [[  5.8697605  -0.85919     2.5376277 -11.042585 ]]
Iteration 600 of 1000: loss=0.17 " + "l1=0.169" + "l2=0.000845 f=-0.873 shape=(1, 9000, 1)
logits [[  5.864041   -0.8566591   2.534536  -11.032666 ]]
Iteration 700 of 1000: loss=0.17 " + "l1=0.169" + "l2=0.000921 f=-0.872 shape=(1, 9000, 1)
logits [[  5.85855    -0.8542343   2.5314658 -11.022791 ]]
Iteration 800 of 1000: loss=0.17 " + "l1=0.169" + "l2=0.000991 f=-0.871 shape=(1, 9000, 1)
logits [[  5.853149    -0.85186803   2.5283844  -11.01298   ]]
Iteration 900 of 1000: loss=0.17 " + "l1=0.169" + "l2=0.00116 f=-0.87 shape=(1, 9000, 1)
logits [[  5.847511   -0.8493971   2.5252192 -11.003057 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.71 " + "l1=1.71" + "l2=0 f=-0.881 shape=(1, 9000, 1)
logits [[  5.9386306   -0.88371736   2.5614028  -11.138874  ]]
Iteration 100 of 1000: loss=1.65 " + "l1=1.61" + "l2=0.0354 f=-0.854 shape=(1, 9000, 1)
logits [[  5.522841   -0.7782499   2.4591582 -10.619107 ]]
Iteration 200 of 1000: loss=1.63 " + "l1=1.57" + "l2=0.0515 f=-0.844 shape=(1, 9000, 1)
logits [[  5.331063   -0.6982303   2.399549  -10.407582 ]]
Iteration 300 of 1000: loss=1.6 " + "l1=1.54" + "l2=0.0667 f=-0.831 shape=(1, 9000, 1)
logits [[  5.1616535  -0.6290433   2.344507  -10.201413 ]]
Iteration 400 of 1000: loss=1.58 " + "l1=1.49" + "l2=0.0824 f=-0.815 shape=(1, 9000, 1)
logits [[ 4.9837203  -0.56789094  2.286722   -9.963318  ]]
Iteration 500 of 1000: loss=1.54 " + "l1=1.44" + "l2=0.102 f=-0.799 shape=(1, 9000, 1)
logits [[ 4.739501   -0.48632398  2.2238078  -9.67288   ]]
Iteration 600 of 1000: loss=1.5 " + "l1=1.37" + "l2=0.126 f=-0.771 shape=(1, 9000, 1)
logits [[ 4.4395685  -0.35074812  2.127566   -9.301768  ]]
Iteration 700 of 1000: loss=1.46 " + "l1=1.3" + "l2=0.153 f=-0.749 shape=(1, 9000, 1)
logits [[ 4.0949345  -0.20028993  2.0377336  -8.928559  ]]
Iteration 800 of 1000: loss=1.41 " + "l1=1.22" + "l2=0.186 f=-0.722 shape=(1, 9000, 1)
logits [[ 3.7059839  -0.02355548  1.9290695  -8.497767  ]]
Iteration 900 of 1000: loss=1.36 " + "l1=1.16" + "l2=0.209 f=-0.7 shape=(1, 9000, 1)
logits [[ 3.4039733   0.10356737  1.8370448  -8.1464405 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=17.1 " + "l1=17.1" + "l2=0 f=-0.881 shape=(1, 9000, 1)
logits [[  5.9386306   -0.88371736   2.5614028  -11.138874  ]]
Iteration 100 of 1000: loss=9.75 " + "l1=6.34" + "l2=3.41 f=-0.621 shape=(1, 9000, 1)
logits [[ 1.1709828  0.3148874  1.1834261 -5.153562 ]]
Iteration 200 of 1000: loss=7.28 " + "l1=2.93" + "l2=4.34 f=-0.396 shape=(1, 9000, 1)
logits [[ 4.1567186e-01  1.8812064e-03  4.6568319e-01 -2.4687982e+00]]
Iteration 300 of 1000: loss=5.48 " + "l1=0.771" + "l2=4.7 f=-0.278 shape=(1, 9000, 1)
logits [[-0.18845013 -0.2651624   0.05567836 -0.7151177 ]]
Iteration 400 of 1000: loss=4.39 " + "l1=0.00558" + "l2=4.38 f=-0.268 shape=(1, 9000, 1)
logits [[-0.38273415 -0.40671337 -0.1384595  -0.1440438 ]]
Iteration 500 of 1000: loss=3.7 " + "l1=0.00669" + "l2=3.69 f=-0.284 shape=(1, 9000, 1)
logits [[-0.3869436  -0.41527304 -0.16336967 -0.17005876]]
Iteration 600 of 1000: loss=3.24 " + "l1=0.009" + "l2=3.23 f=-0.272 shape=(1, 9000, 1)
logits [[-0.31500006 -0.4573147  -0.1532403  -0.16224256]]
Iteration 700 of 1000: loss=2.87 " + "l1=0.0113" + "l2=2.86 f=-0.249 shape=(1, 9000, 1)
logits [[-0.2661263  -0.46549553 -0.12705545 -0.13838148]]
Iteration 800 of 1000: loss=2.62 " + "l1=0" + "l2=2.62 f=-0.236 shape=(1, 9000, 1)
logits [[-0.22705448 -0.4842831  -0.1172967  -0.1160211 ]]
Iteration 900 of 1000: loss=2.42 " + "l1=0.0071" + "l2=2.41 f=-0.232 shape=(1, 9000, 1)
logits [[-0.22784795 -0.45550856 -0.11905281 -0.12615651]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=9.39 " + "l1=9.39" + "l2=0 f=-0.881 shape=(1, 9000, 1)
logits [[  5.9386306   -0.88371736   2.5614028  -11.138874  ]]
Iteration 100 of 1000: loss=6.74 " + "l1=5.02" + "l2=1.72 f=-0.824 shape=(1, 9000, 1)
logits [[ 1.7766801   0.44634682  1.8054162  -7.3254986 ]]
Iteration 200 of 1000: loss=5.56 " + "l1=3.82" + "l2=1.74 f=-0.669 shape=(1, 9000, 1)
logits [[ 1.2928212  0.4105326  1.2785132 -5.6569076]]
Iteration 300 of 1000: loss=4.68 " + "l1=2.69" + "l2=1.99 f=-0.533 shape=(1, 9000, 1)
logits [[ 0.80373555  0.32336873  0.8156962  -4.074554  ]]
Iteration 400 of 1000: loss=3.92 " + "l1=1.77" + "l2=2.14 f=-0.431 shape=(1, 9000, 1)
logits [[ 0.44723454  0.13658649  0.45714548 -2.7650318 ]]
Iteration 500 of 1000: loss=3.31 " + "l1=1.15" + "l2=2.16 f=-0.357 shape=(1, 9000, 1)
logits [[ 0.2211666  -0.01980851  0.22775778 -1.8589226 ]]
Iteration 600 of 1000: loss=2.91 " + "l1=0.779" + "l2=2.13 f=-0.321 shape=(1, 9000, 1)
logits [[ 0.09712002 -0.16044126  0.0970189  -1.3190653 ]]
Iteration 700 of 1000: loss=2.54 " + "l1=0.309" + "l2=2.23 f=-0.269 shape=(1, 9000, 1)
logits [[-0.06692334 -0.34211254 -0.05334041 -0.61451334]]
Iteration 800 of 1000: loss=2.25 " + "l1=0.0156" + "l2=2.24 f=-0.246 shape=(1, 9000, 1)
logits [[-0.20551714 -0.3725035  -0.18966684 -0.21803877]]
Iteration 900 of 1000: loss=2.09 " + "l1=0.00889" + "l2=2.08 f=-0.242 shape=(1, 9000, 1)
logits [[-0.21958447 -0.34880856 -0.1917143  -0.20786971]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.55 " + "l1=5.55" + "l2=0 f=-0.881 shape=(1, 9000, 1)
logits [[  5.9386306   -0.88371736   2.5614028  -11.138874  ]]
Iteration 100 of 1000: loss=4.72 " + "l1=4.12" + "l2=0.597 f=-0.788 shape=(1, 9000, 1)
logits [[ 3.8019576  -0.12337642  2.0567255  -8.888646  ]]
Iteration 200 of 1000: loss=4.09 " + "l1=3.05" + "l2=1.03 f=-0.805 shape=(1, 9000, 1)
logits [[ 1.992115   0.3913897  1.8009489 -7.405679 ]]
Iteration 300 of 1000: loss=3.57 " + "l1=2.51" + "l2=1.06 f=-0.719 shape=(1, 9000, 1)
logits [[ 1.4265304  0.5805099  1.4164306 -6.2987766]]
Iteration 400 of 1000: loss=3.18 " + "l1=2.09" + "l2=1.09 f=-0.649 shape=(1, 9000, 1)
logits [[ 1.0863045  0.5803278  1.0855112 -5.3494515]]
Iteration 500 of 1000: loss=2.85 " + "l1=1.7" + "l2=1.15 f=-0.591 shape=(1, 9000, 1)
logits [[ 0.78722525  0.48939416  0.7911871  -4.432631  ]]
Iteration 600 of 1000: loss=2.56 " + "l1=1.33" + "l2=1.23 f=-0.521 shape=(1, 9000, 1)
logits [[ 0.54884243  0.3448817   0.55638826 -3.532426  ]]
Iteration 700 of 1000: loss=2.33 " + "l1=1.06" + "l2=1.28 f=-0.452 shape=(1, 9000, 1)
logits [[ 0.41051075  0.21351823  0.41323447 -2.8462093 ]]
Iteration 800 of 1000: loss=2.15 " + "l1=0.851" + "l2=1.3 f=-0.406 shape=(1, 9000, 1)
logits [[ 0.30222437  0.07358775  0.30886278 -2.3100138 ]]
Iteration 900 of 1000: loss=2.05 " + "l1=0.762" + "l2=1.29 f=-0.382 shape=(1, 9000, 1)
logits [[ 0.27377623  0.00392457  0.26586026 -2.0711122 ]]
--- 292.0936851501465 seconds ---
Adv result:3
Loading record A03569
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0476 " + "l1=0.0476" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 4.618332   -0.14147085  1.7693795  -8.315762  ]]
Iteration 100 of 1000: loss=0.0465 " + "l1=0.0457" + "l2=0.000819 f=-0.527 shape=(1, 9000, 1)
logits [[ 4.503678   -0.06319879  1.7461271  -8.292898  ]]
Iteration 200 of 1000: loss=0.0463 " + "l1=0.0453" + "l2=0.000956 f=-0.528 shape=(1, 9000, 1)
logits [[ 4.482849   -0.04887102  1.7426237  -8.29009   ]]
Iteration 300 of 1000: loss=0.0462 " + "l1=0.045" + "l2=0.00113 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.465493   -0.03632344  1.7399604  -8.287167  ]]
Iteration 400 of 1000: loss=0.046 " + "l1=0.0448" + "l2=0.00125 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.4526     -0.02712615  1.7383121  -8.284851  ]]
Iteration 500 of 1000: loss=0.046 " + "l1=0.0446" + "l2=0.00141 f=-0.531 shape=(1, 9000, 1)
logits [[ 4.4421406  -0.01943046  1.7371243  -8.282965  ]]
Iteration 600 of 1000: loss=0.046 " + "l1=0.0445" + "l2=0.00154 f=-0.531 shape=(1, 9000, 1)
logits [[ 4.432611   -0.01259353  1.7362465  -8.2810335 ]]
Iteration 700 of 1000: loss=0.046 " + "l1=0.0443" + "l2=0.00168 f=-0.531 shape=(1, 9000, 1)
logits [[ 4.4240408e+00 -6.4900201e-03  1.7354554e+00 -8.2788773e+00]]
Iteration 800 of 1000: loss=0.0459 " + "l1=0.0442" + "l2=0.00176 f=-0.532 shape=(1, 9000, 1)
logits [[ 4.4162378e+00 -6.3416176e-04  1.7346829e+00 -8.2767324e+00]]
Iteration 900 of 1000: loss=0.046 " + "l1=0.044" + "l2=0.00191 f=-0.532 shape=(1, 9000, 1)
logits [[ 4.4089365e+00  4.5678038e-03  1.7339711e+00 -8.2745600e+00]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.476 " + "l1=0.476" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 4.618332   -0.14147085  1.7693795  -8.315762  ]]
Iteration 100 of 1000: loss=0.363 " + "l1=0.277" + "l2=0.0858 f=-0.627 shape=(1, 9000, 1)
logits [[ 3.385218   0.6141022  1.5827144 -8.089676 ]]
Iteration 200 of 1000: loss=0.317 " + "l1=0.178" + "l2=0.14 f=-0.7 shape=(1, 9000, 1)
logits [[ 2.7702708  0.9938524  1.5058018 -8.069589 ]]
Iteration 300 of 1000: loss=0.276 " + "l1=0.0847" + "l2=0.191 f=-0.79 shape=(1, 9000, 1)
logits [[ 2.17433    1.3269018  1.464334  -8.124618 ]]
Iteration 400 of 1000: loss=0.247 " + "l1=0.0214" + "l2=0.225 f=-0.843 shape=(1, 9000, 1)
logits [[ 1.7610214  1.5469593  1.4621887 -8.143527 ]]
Iteration 500 of 1000: loss=0.221 " + "l1=0.0045" + "l2=0.216 f=-0.855 shape=(1, 9000, 1)
logits [[ 1.6378322  1.5928528  1.4602017 -8.110969 ]]
Iteration 600 of 1000: loss=0.205 " + "l1=0.00263" + "l2=0.202 f=-0.859 shape=(1, 9000, 1)
logits [[ 1.6099935  1.5836941  1.4526093 -8.084207 ]]
Iteration 700 of 1000: loss=0.195 " + "l1=0.00222" + "l2=0.193 f=-0.861 shape=(1, 9000, 1)
logits [[ 1.5834987  1.5612501  1.4495901 -8.040299 ]]
Iteration 800 of 1000: loss=0.187 " + "l1=0.000205" + "l2=0.187 f=-0.862 shape=(1, 9000, 1)
logits [[ 1.5471506  1.5450976  1.448887  -7.9884114]]
Iteration 900 of 1000: loss=0.181 " + "l1=0.00177" + "l2=0.179 f=-0.858 shape=(1, 9000, 1)
logits [[ 1.5419165  1.5242238  1.4476925 -7.947773 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.262 " + "l1=0.262" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 4.618332   -0.14147085  1.7693795  -8.315762  ]]
Iteration 100 of 1000: loss=0.231 " + "l1=0.211" + "l2=0.0197 f=-0.564 shape=(1, 9000, 1)
logits [[ 4.0573277   0.21928121  1.6676884  -8.202078  ]]
Iteration 200 of 1000: loss=0.222 " + "l1=0.193" + "l2=0.0289 f=-0.582 shape=(1, 9000, 1)
logits [[ 3.861037    0.34293342  1.6457077  -8.178279  ]]
Iteration 300 of 1000: loss=0.216 " + "l1=0.179" + "l2=0.0367 f=-0.595 shape=(1, 9000, 1)
logits [[ 3.6998503   0.44515553  1.6300088  -8.1538315 ]]
Iteration 400 of 1000: loss=0.21 " + "l1=0.167" + "l2=0.0435 f=-0.606 shape=(1, 9000, 1)
logits [[ 3.5654433   0.53060853  1.6181475  -8.140043  ]]
Iteration 500 of 1000: loss=0.206 " + "l1=0.157" + "l2=0.0483 f=-0.616 shape=(1, 9000, 1)
logits [[ 3.4539068  0.593954   1.6110951 -8.123641 ]]
Iteration 600 of 1000: loss=0.201 " + "l1=0.15" + "l2=0.0516 f=-0.624 shape=(1, 9000, 1)
logits [[ 3.3621597  0.6415075  1.599638  -8.098185 ]]
Iteration 700 of 1000: loss=0.197 " + "l1=0.143" + "l2=0.0545 f=-0.631 shape=(1, 9000, 1)
logits [[ 3.2781527  0.6842155  1.5873508 -8.071893 ]]
Iteration 800 of 1000: loss=0.194 " + "l1=0.136" + "l2=0.0573 f=-0.637 shape=(1, 9000, 1)
logits [[ 3.2005203  0.7224581  1.5756027 -8.047769 ]]
Iteration 900 of 1000: loss=0.19 " + "l1=0.13" + "l2=0.0598 f=-0.646 shape=(1, 9000, 1)
logits [[ 3.1242845   0.75412065  1.5563897  -8.01846   ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.369 " + "l1=0.369" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 4.618332   -0.14147085  1.7693795  -8.315762  ]]
Iteration 100 of 1000: loss=0.305 " + "l1=0.26" + "l2=0.0456 f=-0.593 shape=(1, 9000, 1)
logits [[ 3.7501779   0.40099925  1.6278895  -8.152223  ]]
Iteration 200 of 1000: loss=0.282 " + "l1=0.212" + "l2=0.0705 f=-0.623 shape=(1, 9000, 1)
logits [[ 3.3702786   0.63730633  1.5956635  -8.096888  ]]
Iteration 300 of 1000: loss=0.267 " + "l1=0.177" + "l2=0.0893 f=-0.655 shape=(1, 9000, 1)
logits [[ 3.0939412  0.8049107  1.5635004 -8.080572 ]]
Iteration 400 of 1000: loss=0.25 " + "l1=0.137" + "l2=0.113 f=-0.703 shape=(1, 9000, 1)
logits [[ 2.7694747   0.99981767  1.5085322  -8.091639  ]]
Iteration 500 of 1000: loss=0.233 " + "l1=0.108" + "l2=0.125 f=-0.739 shape=(1, 9000, 1)
logits [[ 2.5202649  1.1261489  1.4908988 -8.091908 ]]
Iteration 600 of 1000: loss=0.219 " + "l1=0.0825" + "l2=0.137 f=-0.768 shape=(1, 9000, 1)
logits [[ 2.2953403  1.2303444  1.4812531 -8.078595 ]]
Iteration 700 of 1000: loss=0.208 " + "l1=0.0669" + "l2=0.141 f=-0.784 shape=(1, 9000, 1)
logits [[ 2.151754   1.2884518  1.4710157 -8.048307 ]]
Iteration 800 of 1000: loss=0.199 " + "l1=0.05" + "l2=0.149 f=-0.804 shape=(1, 9000, 1)
logits [[ 1.9983704  1.3528327  1.448421  -8.017541 ]]
Iteration 900 of 1000: loss=0.192 " + "l1=0.0332" + "l2=0.159 f=-0.824 shape=(1, 9000, 1)
logits [[ 1.8381867  1.4102331  1.4324449 -7.9777474]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.422 " + "l1=0.422" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 4.618332   -0.14147085  1.7693795  -8.315762  ]]
Iteration 100 of 1000: loss=0.337 " + "l1=0.275" + "l2=0.0618 f=-0.609 shape=(1, 9000, 1)
logits [[ 3.5902882  0.4930214  1.6066146 -8.124369 ]]
Iteration 200 of 1000: loss=0.305 " + "l1=0.207" + "l2=0.0978 f=-0.652 shape=(1, 9000, 1)
logits [[ 3.1175168   0.78777957  1.5580877  -8.070126  ]]
Iteration 300 of 1000: loss=0.276 " + "l1=0.138" + "l2=0.138 f=-0.724 shape=(1, 9000, 1)
logits [[ 2.6340482  1.0793878  1.4908863 -8.100873 ]]
Iteration 400 of 1000: loss=0.25 " + "l1=0.0913" + "l2=0.159 f=-0.768 shape=(1, 9000, 1)
logits [[ 2.2885633  1.25948    1.4837747 -8.102588 ]]
Iteration 500 of 1000: loss=0.23 " + "l1=0.052" + "l2=0.178 f=-0.807 shape=(1, 9000, 1)
logits [[ 1.9917092  1.4059503  1.4681786 -8.094163 ]]
Iteration 600 of 1000: loss=0.212 " + "l1=0.0165" + "l2=0.196 f=-0.845 shape=(1, 9000, 1)
logits [[ 1.7225189  1.5365547  1.4471118 -8.086211 ]]
Iteration 700 of 1000: loss=0.2 " + "l1=0.0102" + "l2=0.19 f=-0.851 shape=(1, 9000, 1)
logits [[ 1.6561382  1.5414253  1.4462667 -8.045988 ]]
Iteration 800 of 1000: loss=0.19 " + "l1=0.000319" + "l2=0.19 f=-0.862 shape=(1, 9000, 1)
logits [[ 1.5574067  1.553815   1.4420217 -8.00096  ]]
Iteration 900 of 1000: loss=0.184 " + "l1=0" + "l2=0.184 f=-0.861 shape=(1, 9000, 1)
logits [[ 1.530288   1.5368891  1.4414676 -7.9531555]]
--- 293.2600271701813 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0285 " + "l1=0.0285" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 4.618332   -0.14147085  1.7693795  -8.315762  ]]
Iteration 100 of 1000: loss=0.0281 " + "l1=0.0278" + "l2=0.000339 f=-0.522 shape=(1, 9000, 1)
logits [[ 4.5508585  -0.11240312  1.7737814  -8.301725  ]]
Iteration 200 of 1000: loss=0.028 " + "l1=0.0277" + "l2=0.000343 f=-0.523 shape=(1, 9000, 1)
logits [[ 4.542442   -0.10742006  1.773684   -8.301278  ]]
Iteration 300 of 1000: loss=0.028 " + "l1=0.0276" + "l2=0.000419 f=-0.524 shape=(1, 9000, 1)
logits [[ 4.533436   -0.10276238  1.7745962  -8.300407  ]]
Iteration 400 of 1000: loss=0.028 " + "l1=0.0275" + "l2=0.000497 f=-0.524 shape=(1, 9000, 1)
logits [[ 4.5255103  -0.09854684  1.775748   -8.299709  ]]
Iteration 500 of 1000: loss=0.028 " + "l1=0.0274" + "l2=0.00057 f=-0.525 shape=(1, 9000, 1)
logits [[ 4.5191975 -0.0952526  1.777116  -8.299217 ]]
Iteration 600 of 1000: loss=0.028 " + "l1=0.0273" + "l2=0.000637 f=-0.525 shape=(1, 9000, 1)
logits [[ 4.512892   -0.09194412  1.7785758  -8.298832  ]]
Iteration 700 of 1000: loss=0.028 " + "l1=0.0273" + "l2=0.000774 f=-0.525 shape=(1, 9000, 1)
logits [[ 4.507714   -0.08936347  1.7801648  -8.298538  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.285 " + "l1=0.285" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 4.618332   -0.14147085  1.7693795  -8.315762  ]]
Iteration 100 of 1000: loss=0.243 " + "l1=0.214" + "l2=0.0288 f=-0.569 shape=(1, 9000, 1)
logits [[ 3.9680974   0.11811502  1.8258684  -8.186778  ]]
Iteration 200 of 1000: loss=0.229 " + "l1=0.188" + "l2=0.041 f=-0.592 shape=(1, 9000, 1)
logits [[ 3.7341995   0.20206788  1.8533722  -8.158574  ]]
Iteration 300 of 1000: loss=0.219 " + "l1=0.166" + "l2=0.0527 f=-0.611 shape=(1, 9000, 1)
logits [[ 3.535285   0.2811745  1.8723173 -8.132339 ]]
Iteration 400 of 1000: loss=0.21 " + "l1=0.148" + "l2=0.0625 f=-0.627 shape=(1, 9000, 1)
logits [[ 3.3634214   0.35933194  1.8879112  -8.117532  ]]
Iteration 500 of 1000: loss=0.201 " + "l1=0.129" + "l2=0.0723 f=-0.641 shape=(1, 9000, 1)
logits [[ 3.199224   0.4195945  1.9092731 -8.093755 ]]
Iteration 600 of 1000: loss=0.192 " + "l1=0.111" + "l2=0.0814 f=-0.657 shape=(1, 9000, 1)
logits [[ 3.0428839   0.46644342  1.9357682  -8.072856  ]]
Iteration 700 of 1000: loss=0.182 " + "l1=0.0928" + "l2=0.0889 f=-0.673 shape=(1, 9000, 1)
logits [[ 2.8904169   0.50620633  1.9627763  -8.050749  ]]
Iteration 800 of 1000: loss=0.17 " + "l1=0.0777" + "l2=0.0922 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.749935    0.55292183  1.9724438  -8.015838  ]]
Iteration 900 of 1000: loss=0.16 " + "l1=0.0656" + "l2=0.094 f=-0.695 shape=(1, 9000, 1)
logits [[ 2.6324887  0.583516   1.9768666 -7.974375 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.85 " + "l1=2.85" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 4.618332   -0.14147085  1.7693795  -8.315762  ]]
Iteration 100 of 1000: loss=0.392 " + "l1=0" + "l2=0.392 f=-0.808 shape=(1, 9000, 1)
logits [[ 1.8712479  0.9890446  1.905188  -7.9993186]]
Iteration 200 of 1000: loss=0.312 " + "l1=0" + "l2=0.312 f=-0.816 shape=(1, 9000, 1)
logits [[ 1.8370305  1.06219    1.881975  -8.044608 ]]
Iteration 300 of 1000: loss=0.266 " + "l1=0" + "l2=0.266 f=-0.813 shape=(1, 9000, 1)
logits [[ 1.8686882  1.0645425  1.8729813 -8.060083 ]]
Iteration 400 of 1000: loss=0.26 " + "l1=0" + "l2=0.26 f=-0.823 shape=(1, 9000, 1)
logits [[ 1.7839311  1.1099447  1.8760037 -8.060634 ]]
Iteration 500 of 1000: loss=0.231 " + "l1=0" + "l2=0.231 f=-0.813 shape=(1, 9000, 1)
logits [[ 1.8449792  1.0889109  1.8684042 -8.055103 ]]
Iteration 600 of 1000: loss=0.219 " + "l1=0" + "l2=0.219 f=-0.812 shape=(1, 9000, 1)
logits [[ 1.8507273  1.0821072  1.8712355 -8.051261 ]]
Iteration 700 of 1000: loss=0.212 " + "l1=0" + "l2=0.212 f=-0.813 shape=(1, 9000, 1)
logits [[ 1.8266162  1.0875765  1.8767939 -8.044372 ]]
Iteration 800 of 1000: loss=0.195 " + "l1=0" + "l2=0.195 f=-0.806 shape=(1, 9000, 1)
logits [[ 1.8708967  1.0604603  1.8765683 -8.030969 ]]
Iteration 900 of 1000: loss=0.188 " + "l1=0" + "l2=0.188 f=-0.806 shape=(1, 9000, 1)
logits [[ 1.8532476  1.0568795  1.8836226 -8.017935 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.57 " + "l1=1.57" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 4.618332   -0.14147085  1.7693795  -8.315762  ]]
Iteration 100 of 1000: loss=0.37 " + "l1=0" + "l2=0.37 f=-0.799 shape=(1, 9000, 1)
logits [[ 1.8789852   0.97359586  1.9230326  -7.9730334 ]]
Iteration 200 of 1000: loss=0.284 " + "l1=0" + "l2=0.284 f=-0.803 shape=(1, 9000, 1)
logits [[ 1.8841301  1.0228401  1.9042616 -8.021342 ]]
Iteration 300 of 1000: loss=0.249 " + "l1=0.00633" + "l2=0.243 f=-0.802 shape=(1, 9000, 1)
logits [[ 1.9068413  1.0278066  1.8953289 -8.036655 ]]
Iteration 400 of 1000: loss=0.228 " + "l1=0" + "l2=0.228 f=-0.806 shape=(1, 9000, 1)
logits [[ 1.8720517  1.053323   1.8899323 -8.037615 ]]
Iteration 500 of 1000: loss=0.21 " + "l1=0" + "l2=0.21 f=-0.806 shape=(1, 9000, 1)
logits [[ 1.8691808  1.0596751  1.8856456 -8.037207 ]]
Iteration 600 of 1000: loss=0.201 " + "l1=0" + "l2=0.201 f=-0.808 shape=(1, 9000, 1)
logits [[ 1.834923   1.0692905  1.8885969 -8.025958 ]]
Iteration 700 of 1000: loss=0.185 " + "l1=0" + "l2=0.185 f=-0.803 shape=(1, 9000, 1)
logits [[ 1.8648986  1.0451422  1.8900492 -8.01158  ]]
Iteration 800 of 1000: loss=0.181 " + "l1=0" + "l2=0.181 f=-0.804 shape=(1, 9000, 1)
logits [[ 1.8273467  1.0485455  1.8930432 -7.9868026]]
Iteration 900 of 1000: loss=0.172 " + "l1=0" + "l2=0.172 f=-0.803 shape=(1, 9000, 1)
logits [[ 1.826036   1.033506   1.8926709 -7.964895 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.926 " + "l1=0.926" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 4.618332   -0.14147085  1.7693795  -8.315762  ]]
Iteration 100 of 1000: loss=0.36 " + "l1=0" + "l2=0.36 f=-0.781 shape=(1, 9000, 1)
logits [[ 1.9365178  0.9017263  1.9605377 -7.9222875]]
Iteration 200 of 1000: loss=0.266 " + "l1=0.00389" + "l2=0.263 f=-0.786 shape=(1, 9000, 1)
logits [[ 1.9394646   0.97018665  1.9274825  -7.979729  ]]
Iteration 300 of 1000: loss=0.235 " + "l1=0.00876" + "l2=0.226 f=-0.788 shape=(1, 9000, 1)
logits [[ 1.9488627  0.9907422  1.9219192 -8.011976 ]]
Iteration 400 of 1000: loss=0.205 " + "l1=0.000118" + "l2=0.205 f=-0.798 shape=(1, 9000, 1)
logits [[ 1.9063852  1.0146234  1.9060218 -8.019966 ]]
Iteration 500 of 1000: loss=0.193 " + "l1=0" + "l2=0.193 f=-0.801 shape=(1, 9000, 1)
logits [[ 1.8741682  1.0241586  1.90205   -8.005844 ]]
Iteration 600 of 1000: loss=0.179 " + "l1=0" + "l2=0.179 f=-0.799 shape=(1, 9000, 1)
logits [[ 1.8808668  1.0125307  1.9010172 -7.990807 ]]
Iteration 700 of 1000: loss=0.166 " + "l1=0" + "l2=0.166 f=-0.795 shape=(1, 9000, 1)
logits [[ 1.9001595   0.99065155  1.9056326  -7.974509  ]]
Iteration 800 of 1000: loss=0.159 " + "l1=0" + "l2=0.159 f=-0.795 shape=(1, 9000, 1)
logits [[ 1.8945029  0.973947   1.9099426 -7.9576845]]
Iteration 900 of 1000: loss=0.15 " + "l1=0" + "l2=0.15 f=-0.795 shape=(1, 9000, 1)
logits [[ 1.9020296   0.95297307  1.9109569  -7.944465  ]]
--- 282.4740340709686 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.129 " + "l1=0.129" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 4.618332   -0.14147085  1.7693795  -8.315762  ]]
Iteration 100 of 1000: loss=0.129 " + "l1=0.128" + "l2=0.000622 f=-0.522 shape=(1, 9000, 1)
logits [[ 4.526481   -0.10036999  1.7508391  -8.263941  ]]
Iteration 200 of 1000: loss=0.128 " + "l1=0.128" + "l2=0.000688 f=-0.523 shape=(1, 9000, 1)
logits [[ 4.5103087  -0.09275024  1.7474484  -8.256661  ]]
Iteration 300 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.000808 f=-0.524 shape=(1, 9000, 1)
logits [[ 4.4962177  -0.08631382  1.7444257  -8.2487755 ]]
Iteration 400 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.000925 f=-0.524 shape=(1, 9000, 1)
logits [[ 4.484331   -0.08118507  1.7414515  -8.240805  ]]
Iteration 500 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.00106 f=-0.524 shape=(1, 9000, 1)
logits [[ 4.475417   -0.07793715  1.7390053  -8.233309  ]]
Iteration 600 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.00117 f=-0.524 shape=(1, 9000, 1)
logits [[ 4.4668274  -0.07463975  1.7364208  -8.225892  ]]
Iteration 700 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.00126 f=-0.524 shape=(1, 9000, 1)
logits [[ 4.458688   -0.07164746  1.7338657  -8.218455  ]]
Iteration 800 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.00138 f=-0.524 shape=(1, 9000, 1)
logits [[ 4.4510875 -0.0689401  1.7312587 -8.211014 ]]
Iteration 900 of 1000: loss=0.128 " + "l1=0.126" + "l2=0.0015 f=-0.524 shape=(1, 9000, 1)
logits [[ 4.444042   -0.06666486  1.7288187  -8.203748  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.29 " + "l1=1.29" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 4.618332   -0.14147085  1.7693795  -8.315762  ]]
Iteration 100 of 1000: loss=1.21 " + "l1=1.14" + "l2=0.0622 f=-0.569 shape=(1, 9000, 1)
logits [[ 3.6498396   0.23579995  1.6233855  -7.78343   ]]
Iteration 200 of 1000: loss=1.17 " + "l1=1.08" + "l2=0.0908 f=-0.591 shape=(1, 9000, 1)
logits [[ 3.2583566   0.37520346  1.5702939  -7.5658703 ]]
Iteration 300 of 1000: loss=1.15 " + "l1=1.04" + "l2=0.106 f=-0.606 shape=(1, 9000, 1)
logits [[ 3.0215695  0.4296169  1.5184653 -7.3927174]]
Iteration 400 of 1000: loss=1.12 " + "l1=0.993" + "l2=0.125 f=-0.632 shape=(1, 9000, 1)
logits [[ 2.730286   0.4974374  1.4447058 -7.202067 ]]
Iteration 500 of 1000: loss=1.08 " + "l1=0.944" + "l2=0.141 f=-0.656 shape=(1, 9000, 1)
logits [[ 2.4479947   0.54470307  1.3722459  -6.987879  ]]
Iteration 600 of 1000: loss=1.04 " + "l1=0.888" + "l2=0.155 f=-0.68 shape=(1, 9000, 1)
logits [[ 2.147771    0.57222605  1.294793   -6.7350287 ]]
Iteration 700 of 1000: loss=1 " + "l1=0.841" + "l2=0.162 f=-0.693 shape=(1, 9000, 1)
logits [[ 1.9213879   0.56009066  1.2313339  -6.485861  ]]
Iteration 800 of 1000: loss=0.963 " + "l1=0.782" + "l2=0.181 f=-0.713 shape=(1, 9000, 1)
logits [[ 1.6223652  0.5651298  1.1596783 -6.19983  ]]
Iteration 900 of 1000: loss=0.925 " + "l1=0.727" + "l2=0.198 f=-0.729 shape=(1, 9000, 1)
logits [[ 1.3357424   0.57718563  1.1017256  -5.9297247 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.9 " + "l1=12.9" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 4.618332   -0.14147085  1.7693795  -8.315762  ]]
Iteration 100 of 1000: loss=6.53 " + "l1=4.04" + "l2=2.49 f=-0.54 shape=(1, 9000, 1)
logits [[ 0.4628143   0.44834873  0.48244536 -3.5526407 ]]
Iteration 200 of 1000: loss=5.06 " + "l1=1.96" + "l2=3.1 f=-0.436 shape=(1, 9000, 1)
logits [[ 0.04355533  0.05765491  0.05546052 -1.9024546 ]]
Iteration 300 of 1000: loss=4.17 " + "l1=1.12" + "l2=3.04 f=-0.402 shape=(1, 9000, 1)
logits [[-0.13642065 -0.11021977 -0.12536108 -1.2342218 ]]
Iteration 400 of 1000: loss=3.31 " + "l1=0.286" + "l2=3.03 f=-0.363 shape=(1, 9000, 1)
logits [[-0.31420067 -0.27924278 -0.29376897 -0.56569177]]
Iteration 500 of 1000: loss=2.6 " + "l1=0.0268" + "l2=2.57 f=-0.36 shape=(1, 9000, 1)
logits [[-0.35871544 -0.3715658  -0.34168005 -0.36850417]]
Iteration 600 of 1000: loss=2.1 " + "l1=0.00942" + "l2=2.09 f=-0.388 shape=(1, 9000, 1)
logits [[-0.4024544  -0.38641796 -0.37685636 -0.3862784 ]]
Iteration 700 of 1000: loss=1.87 " + "l1=0.0221" + "l2=1.85 f=-0.402 shape=(1, 9000, 1)
logits [[-0.4231935  -0.38542807 -0.3899312  -0.40751523]]
Iteration 800 of 1000: loss=1.71 " + "l1=0" + "l2=1.71 f=-0.404 shape=(1, 9000, 1)
logits [[-0.42555672 -0.4126444  -0.39342228 -0.38421378]]
Iteration 900 of 1000: loss=1.61 " + "l1=0" + "l2=1.61 f=-0.411 shape=(1, 9000, 1)
logits [[-0.45460296 -0.4047122  -0.41432652 -0.37210923]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.11 " + "l1=7.11" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 4.618332   -0.14147085  1.7693795  -8.315762  ]]
Iteration 100 of 1000: loss=4.63 " + "l1=3.47" + "l2=1.15 f=-0.681 shape=(1, 9000, 1)
logits [[ 0.9124529  0.8674687  0.8968654 -5.4017763]]
Iteration 200 of 1000: loss=4.02 " + "l1=2.69" + "l2=1.33 f=-0.592 shape=(1, 9000, 1)
logits [[ 0.62326944  0.64335054  0.6174993  -4.2512894 ]]
Iteration 300 of 1000: loss=3.55 " + "l1=2.12" + "l2=1.43 f=-0.521 shape=(1, 9000, 1)
logits [[ 0.45832288  0.40889314  0.4387971  -3.3908963 ]]
Iteration 400 of 1000: loss=3.11 " + "l1=1.6" + "l2=1.51 f=-0.472 shape=(1, 9000, 1)
logits [[ 0.2562317   0.25259152  0.25340933 -2.6490972 ]]
Iteration 500 of 1000: loss=2.69 " + "l1=1.12" + "l2=1.57 f=-0.43 shape=(1, 9000, 1)
logits [[ 0.06826246  0.08287814  0.07840382 -1.9505459 ]]
Iteration 600 of 1000: loss=2.22 " + "l1=0.526" + "l2=1.7 f=-0.405 shape=(1, 9000, 1)
logits [[-0.1678806  -0.16960333 -0.16281255 -1.1184119 ]]
Iteration 700 of 1000: loss=1.83 " + "l1=0.163" + "l2=1.67 f=-0.384 shape=(1, 9000, 1)
logits [[-0.3173751  -0.30616355 -0.30945042 -0.6026333 ]]
Iteration 800 of 1000: loss=1.5 " + "l1=0.00331" + "l2=1.5 f=-0.394 shape=(1, 9000, 1)
logits [[-0.40080887 -0.3925148  -0.38879457 -0.39481825]]
Iteration 900 of 1000: loss=1.32 " + "l1=0.012" + "l2=1.31 f=-0.403 shape=(1, 9000, 1)
logits [[-0.39969265 -0.41896123 -0.38603887 -0.40790915]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.2 " + "l1=4.2" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 4.618332   -0.14147085  1.7693795  -8.315762  ]]
Iteration 100 of 1000: loss=3.17 " + "l1=2.55" + "l2=0.623 f=-0.762 shape=(1, 9000, 1)
logits [[ 1.2519499  1.0224012  1.2638013 -6.5868797]]
Iteration 200 of 1000: loss=2.89 " + "l1=2.23" + "l2=0.658 f=-0.709 shape=(1, 9000, 1)
logits [[ 1.0360934  0.9207034  1.0342764 -5.826039 ]]
Iteration 300 of 1000: loss=2.64 " + "l1=1.91" + "l2=0.731 f=-0.668 shape=(1, 9000, 1)
logits [[ 0.79760444  0.7907174   0.8119097  -5.0720425 ]]
Iteration 400 of 1000: loss=2.4 " + "l1=1.65" + "l2=0.75 f=-0.621 shape=(1, 9000, 1)
logits [[ 0.6618623   0.61717093  0.6556545  -4.4173784 ]]
Iteration 500 of 1000: loss=2.17 " + "l1=1.37" + "l2=0.802 f=-0.561 shape=(1, 9000, 1)
logits [[ 0.47776696  0.49644083  0.4984015  -3.717263  ]]
Iteration 600 of 1000: loss=1.96 " + "l1=1.14" + "l2=0.82 f=-0.501 shape=(1, 9000, 1)
logits [[ 0.3701206  0.381739   0.3599135 -3.1160157]]
Iteration 700 of 1000: loss=1.76 " + "l1=0.922" + "l2=0.837 f=-0.463 shape=(1, 9000, 1)
logits [[ 0.25160727  0.24139921  0.2395667  -2.5862145 ]]
Iteration 800 of 1000: loss=1.56 " + "l1=0.7" + "l2=0.863 f=-0.452 shape=(1, 9000, 1)
logits [[ 0.08404458  0.08522653  0.08806634 -2.0658097 ]]
Iteration 900 of 1000: loss=1.4 " + "l1=0.527" + "l2=0.876 f=-0.445 shape=(1, 9000, 1)
logits [[-0.06048107 -0.03137313 -0.03577403 -1.6513793 ]]
--- 298.19139337539673 seconds ---
Adv result:3
Loading record A03576
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0519 " + "l1=0.0519" + "l2=0 f=-0.278 shape=(1, 9000, 1)
logits [[ 3.057729  -2.134085   2.3647468 -4.3989086]]
Iteration 100 of 1000: loss=0.0518 " + "l1=0.0516" + "l2=0.000178 f=-0.277 shape=(1, 9000, 1)
logits [[ 3.033697  -2.1236148  2.3555493 -4.3737946]]
Iteration 200 of 1000: loss=0.0517 " + "l1=0.0516" + "l2=0.000144 f=-0.277 shape=(1, 9000, 1)
logits [[ 3.033062  -2.122564   2.3544135 -4.373972 ]]
Iteration 300 of 1000: loss=0.0517 " + "l1=0.0515" + "l2=0.000177 f=-0.277 shape=(1, 9000, 1)
logits [[ 3.0301905 -2.1207669  2.3527505 -4.37162  ]]
Iteration 400 of 1000: loss=0.0517 " + "l1=0.0515" + "l2=0.000198 f=-0.277 shape=(1, 9000, 1)
logits [[ 3.0269592 -2.1188254  2.3510444 -4.3688974]]
Iteration 500 of 1000: loss=0.0517 " + "l1=0.0514" + "l2=0.000249 f=-0.277 shape=(1, 9000, 1)
logits [[ 3.0236478 -2.1168754  2.349333  -4.366076 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.519 " + "l1=0.519" + "l2=0 f=-0.278 shape=(1, 9000, 1)
logits [[ 3.057729  -2.134085   2.3647468 -4.3989086]]
Iteration 100 of 1000: loss=0.503 " + "l1=0.494" + "l2=0.00923 f=-0.274 shape=(1, 9000, 1)
logits [[ 2.8804634 -2.0613573  2.3005135 -4.21499  ]]
Iteration 200 of 1000: loss=0.498 " + "l1=0.485" + "l2=0.0121 f=-0.274 shape=(1, 9000, 1)
logits [[ 2.8233936 -2.0315297  2.2763512 -4.1623383]]
Iteration 300 of 1000: loss=0.492 " + "l1=0.478" + "l2=0.0144 f=-0.274 shape=(1, 9000, 1)
logits [[ 2.7725234 -2.0057065  2.2546792 -4.1188326]]
Iteration 400 of 1000: loss=0.487 " + "l1=0.471" + "l2=0.0162 f=-0.274 shape=(1, 9000, 1)
logits [[ 2.7260914 -1.9842807  2.2392516 -4.078494 ]]
Iteration 500 of 1000: loss=0.483 " + "l1=0.465" + "l2=0.0175 f=-0.274 shape=(1, 9000, 1)
logits [[ 2.6872783 -1.96481    2.225394  -4.0453024]]
Iteration 600 of 1000: loss=0.479 " + "l1=0.459" + "l2=0.0194 f=-0.274 shape=(1, 9000, 1)
logits [[ 2.6467488 -1.9453924  2.2107053 -4.0064588]]
Iteration 700 of 1000: loss=0.475 " + "l1=0.453" + "l2=0.0213 f=-0.272 shape=(1, 9000, 1)
logits [[ 2.6074305 -1.9257581  2.1967845 -3.9647837]]
Iteration 800 of 1000: loss=0.47 " + "l1=0.447" + "l2=0.0233 f=-0.269 shape=(1, 9000, 1)
logits [[ 2.5655484 -1.905452   2.1818874 -3.9162712]]
Iteration 900 of 1000: loss=0.466 " + "l1=0.441" + "l2=0.0251 f=-0.266 shape=(1, 9000, 1)
logits [[ 2.5229712 -1.8869785  2.1649184 -3.866422 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.19 " + "l1=5.19" + "l2=0 f=-0.278 shape=(1, 9000, 1)
logits [[ 3.057729  -2.134085   2.3647468 -4.3989086]]
Iteration 100 of 1000: loss=3.73 " + "l1=3.16" + "l2=0.565 f=-0.222 shape=(1, 9000, 1)
logits [[ 1.7218292 -1.4412941  1.7194943 -2.88903  ]]
Iteration 200 of 1000: loss=3.35 " + "l1=2.67" + "l2=0.686 f=-0.217 shape=(1, 9000, 1)
logits [[ 1.488609  -1.176747   1.4918267 -2.6733916]]
Iteration 300 of 1000: loss=3.11 " + "l1=2.34" + "l2=0.768 f=-0.211 shape=(1, 9000, 1)
logits [[ 1.3238956 -1.0091478  1.3282281 -2.4853313]]
Iteration 400 of 1000: loss=2.87 " + "l1=1.99" + "l2=0.883 f=-0.197 shape=(1, 9000, 1)
logits [[ 1.1605154  -0.82815695  1.1575205  -2.2775903 ]]
Iteration 500 of 1000: loss=2.62 " + "l1=1.66" + "l2=0.958 f=-0.191 shape=(1, 9000, 1)
logits [[ 0.9865557  -0.6753279   0.98824155 -2.0635898 ]]
Iteration 600 of 1000: loss=2.41 " + "l1=1.38" + "l2=1.03 f=-0.191 shape=(1, 9000, 1)
logits [[ 0.8312764  -0.5472672   0.83293045 -1.8797256 ]]
Iteration 700 of 1000: loss=2.22 " + "l1=1.15" + "l2=1.08 f=-0.198 shape=(1, 9000, 1)
logits [[ 0.7045821  -0.43608674  0.7101749  -1.7706003 ]]
Iteration 800 of 1000: loss=2.1 " + "l1=0.977" + "l2=1.12 f=-0.198 shape=(1, 9000, 1)
logits [[ 0.619862   -0.3515014   0.62519014 -1.6865951 ]]
Iteration 900 of 1000: loss=1.98 " + "l1=0.85" + "l2=1.13 f=-0.188 shape=(1, 9000, 1)
logits [[ 0.5592914  -0.29066595  0.55634534 -1.5772471 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=51.9 " + "l1=51.9" + "l2=0 f=-0.278 shape=(1, 9000, 1)
logits [[ 3.057729  -2.134085   2.3647468 -4.3989086]]
Iteration 100 of 1000: loss=9.7 " + "l1=0" + "l2=9.7 f=-0.218 shape=(1, 9000, 1)
logits [[ 0.11058849  0.14469576  0.12405492 -1.2494646 ]]
Iteration 200 of 1000: loss=6.34 " + "l1=0" + "l2=6.34 f=-0.25 shape=(1, 9000, 1)
logits [[ 0.11833665  0.16347025  0.14639147 -1.4264014 ]]
Iteration 300 of 1000: loss=5.29 " + "l1=0.00762" + "l2=5.28 f=-0.259 shape=(1, 9000, 1)
logits [[ 0.13419142  0.16372392  0.16448571 -1.4975111 ]]
Iteration 400 of 1000: loss=4.75 " + "l1=0" + "l2=4.75 f=-0.271 shape=(1, 9000, 1)
logits [[ 0.11542097  0.17183271  0.15861386 -1.5297234 ]]
Iteration 500 of 1000: loss=4.32 " + "l1=0" + "l2=4.32 f=-0.278 shape=(1, 9000, 1)
logits [[ 0.1521056   0.16598912  0.1559722  -1.5863639 ]]
Iteration 600 of 1000: loss=4.01 " + "l1=0" + "l2=4.01 f=-0.277 shape=(1, 9000, 1)
logits [[ 0.15393329  0.17585747  0.1669781  -1.6049227 ]]
Iteration 700 of 1000: loss=3.74 " + "l1=0" + "l2=3.74 f=-0.28 shape=(1, 9000, 1)
logits [[ 0.16735876  0.17623521  0.17009772 -1.6330864 ]]
Iteration 800 of 1000: loss=3.51 " + "l1=0" + "l2=3.51 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.17281131  0.1791314   0.16566618 -1.6426045 ]]
Iteration 900 of 1000: loss=3.31 " + "l1=0" + "l2=3.31 f=-0.279 shape=(1, 9000, 1)
logits [[ 0.16312996  0.17507572  0.16812177 -1.6230384 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=28.6 " + "l1=28.6" + "l2=0 f=-0.278 shape=(1, 9000, 1)
logits [[ 3.057729  -2.134085   2.3647468 -4.3989086]]
Iteration 100 of 1000: loss=9.28 " + "l1=2.6" + "l2=6.68 f=-0.244 shape=(1, 9000, 1)
logits [[ 0.34848392 -0.11238257  0.36042872 -1.5720831 ]]
Iteration 200 of 1000: loss=5.24 " + "l1=0.0455" + "l2=5.2 f=-0.279 shape=(1, 9000, 1)
logits [[ 0.09416597  0.16553305  0.17380388 -1.5513482 ]]
Iteration 300 of 1000: loss=4.4 " + "l1=0" + "l2=4.4 f=-0.286 shape=(1, 9000, 1)
logits [[ 0.14504656  0.170433    0.15706068 -1.6156033 ]]
Iteration 400 of 1000: loss=3.95 " + "l1=0" + "l2=3.95 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.14403763  0.17995228  0.16477516 -1.639997  ]]
Iteration 500 of 1000: loss=3.52 " + "l1=0" + "l2=3.52 f=-0.284 shape=(1, 9000, 1)
logits [[ 0.16232833  0.18691874  0.1839112  -1.6684246 ]]
Iteration 600 of 1000: loss=3.24 " + "l1=0" + "l2=3.24 f=-0.279 shape=(1, 9000, 1)
logits [[ 0.13662794  0.204001    0.18969294 -1.6473944 ]]
Iteration 700 of 1000: loss=2.97 " + "l1=0.0487" + "l2=2.92 f=-0.271 shape=(1, 9000, 1)
logits [[ 0.16967806  0.20269234  0.211541   -1.6679999 ]]
Iteration 800 of 1000: loss=2.71 " + "l1=0" + "l2=2.71 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.15873712  0.22471747  0.22104463 -1.667448  ]]
Iteration 900 of 1000: loss=2.52 " + "l1=0" + "l2=2.52 f=-0.262 shape=(1, 9000, 1)
logits [[ 0.16872665  0.22415347  0.22254182 -1.6616901 ]]
--- 270.91360902786255 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00693 " + "l1=0.00693" + "l2=0 f=-0.278 shape=(1, 9000, 1)
logits [[ 3.057729  -2.134085   2.3647468 -4.3989086]]
Iteration 100 of 1000: loss=0.00687 " + "l1=0.00675" + "l2=0.000122 f=-0.277 shape=(1, 9000, 1)
logits [[ 3.040422  -2.1348944  2.365635  -4.3808203]]
Iteration 200 of 1000: loss=0.00683 " + "l1=0.00676" + "l2=7.41e-05 f=-0.278 shape=(1, 9000, 1)
logits [[ 3.0419347 -2.1347432  2.3658864 -4.383133 ]]
Iteration 300 of 1000: loss=0.00685 " + "l1=0.00675" + "l2=0.0001 f=-0.278 shape=(1, 9000, 1)
logits [[ 3.040941  -2.1347513  2.3661928 -4.3826637]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0693 " + "l1=0.0693" + "l2=0 f=-0.278 shape=(1, 9000, 1)
logits [[ 3.057729  -2.134085   2.3647468 -4.3989086]]
Iteration 100 of 1000: loss=0.0619 " + "l1=0.057" + "l2=0.00485 f=-0.278 shape=(1, 9000, 1)
logits [[ 2.9411242 -2.137739   2.3708673 -4.285757 ]]
Iteration 200 of 1000: loss=0.0596 " + "l1=0.0536" + "l2=0.00603 f=-0.278 shape=(1, 9000, 1)
logits [[ 2.9124863 -2.1372647  2.376521  -4.2641673]]
Iteration 300 of 1000: loss=0.0575 " + "l1=0.0504" + "l2=0.0071 f=-0.279 shape=(1, 9000, 1)
logits [[ 2.8865073 -2.1364307  2.382336  -4.2464867]]
Iteration 400 of 1000: loss=0.0554 " + "l1=0.0473" + "l2=0.00806 f=-0.279 shape=(1, 9000, 1)
logits [[ 2.8602579 -2.1349564  2.3868506 -4.229459 ]]
Iteration 500 of 1000: loss=0.0534 " + "l1=0.0445" + "l2=0.00894 f=-0.28 shape=(1, 9000, 1)
logits [[ 2.8348153 -2.1330295  2.3899412 -4.2130003]]
Iteration 600 of 1000: loss=0.0514 " + "l1=0.0416" + "l2=0.00977 f=-0.281 shape=(1, 9000, 1)
logits [[ 2.8080916 -2.1301193  2.3921728 -4.194634 ]]
Iteration 700 of 1000: loss=0.0494 " + "l1=0.0391" + "l2=0.0103 f=-0.281 shape=(1, 9000, 1)
logits [[ 2.7862728 -2.1276112  2.3952787 -4.1797066]]
Iteration 800 of 1000: loss=0.0476 " + "l1=0.0368" + "l2=0.0108 f=-0.282 shape=(1, 9000, 1)
logits [[ 2.7634683 -2.124669   2.3959417 -4.1640563]]
Iteration 900 of 1000: loss=0.0457 " + "l1=0.0345" + "l2=0.0112 f=-0.283 shape=(1, 9000, 1)
logits [[ 2.7413042 -2.122481   2.396271  -4.148984 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.693 " + "l1=0.693" + "l2=0 f=-0.278 shape=(1, 9000, 1)
logits [[ 3.057729  -2.134085   2.3647468 -4.3989086]]
Iteration 100 of 1000: loss=0.14 " + "l1=0.00174" + "l2=0.138 f=-0.267 shape=(1, 9000, 1)
logits [[ 2.4056485 -2.1273332  2.4039037 -3.7490652]]
Iteration 200 of 1000: loss=0.104 " + "l1=0" + "l2=0.104 f=-0.267 shape=(1, 9000, 1)
logits [[ 2.399464  -2.11896    2.4089205 -3.7562752]]
Iteration 300 of 1000: loss=0.086 " + "l1=0.00406" + "l2=0.0819 f=-0.272 shape=(1, 9000, 1)
logits [[ 2.4144514 -2.120821   2.4103935 -3.7902906]]
Iteration 400 of 1000: loss=0.0734 " + "l1=0" + "l2=0.0734 f=-0.276 shape=(1, 9000, 1)
logits [[ 2.404735  -2.122481   2.4113421 -3.796744 ]]
Iteration 500 of 1000: loss=0.0646 " + "l1=0" + "l2=0.0646 f=-0.279 shape=(1, 9000, 1)
logits [[ 2.4048903 -2.122418   2.4102037 -3.8082962]]
Iteration 600 of 1000: loss=0.0574 " + "l1=0" + "l2=0.0574 f=-0.28 shape=(1, 9000, 1)
logits [[ 2.40269   -2.1191385  2.4080594 -3.8135898]]
Iteration 700 of 1000: loss=0.0551 " + "l1=0" + "l2=0.0551 f=-0.28 shape=(1, 9000, 1)
logits [[ 2.3873038 -2.1145031  2.4084792 -3.8007839]]
Iteration 800 of 1000: loss=0.0472 " + "l1=0" + "l2=0.0472 f=-0.279 shape=(1, 9000, 1)
logits [[ 2.4014556 -2.1117935  2.4097004 -3.816792 ]]
Iteration 900 of 1000: loss=0.0426 " + "l1=0" + "l2=0.0426 f=-0.278 shape=(1, 9000, 1)
logits [[ 2.4050024 -2.1081574  2.410461  -3.8208613]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.381 " + "l1=0.381" + "l2=0 f=-0.278 shape=(1, 9000, 1)
logits [[ 3.057729  -2.134085   2.3647468 -4.3989086]]
Iteration 100 of 1000: loss=0.153 " + "l1=0.0195" + "l2=0.134 f=-0.271 shape=(1, 9000, 1)
logits [[ 2.4402544 -2.1318264  2.404871  -3.7989273]]
Iteration 200 of 1000: loss=0.0999 " + "l1=0" + "l2=0.0999 f=-0.272 shape=(1, 9000, 1)
logits [[ 2.4134598 -2.1250832  2.4156587 -3.7904866]]
Iteration 300 of 1000: loss=0.0806 " + "l1=0.000527" + "l2=0.08 f=-0.274 shape=(1, 9000, 1)
logits [[ 2.4199986 -2.123992   2.41904   -3.8125863]]
Iteration 400 of 1000: loss=0.0702 " + "l1=0.00171" + "l2=0.0685 f=-0.278 shape=(1, 9000, 1)
logits [[ 2.4245412 -2.1255167  2.4214268 -3.8304894]]
Iteration 500 of 1000: loss=0.0611 " + "l1=0.000603" + "l2=0.0605 f=-0.279 shape=(1, 9000, 1)
logits [[ 2.4208868 -2.1213248  2.41979   -3.8370697]]
Iteration 600 of 1000: loss=0.0545 " + "l1=0" + "l2=0.0545 f=-0.281 shape=(1, 9000, 1)
logits [[ 2.4128969 -2.1146193  2.4152074 -3.8360333]]
Iteration 700 of 1000: loss=0.0485 " + "l1=0" + "l2=0.0485 f=-0.28 shape=(1, 9000, 1)
logits [[ 2.4159014 -2.1102302  2.4167454 -3.8407328]]
Iteration 800 of 1000: loss=0.044 " + "l1=0.00203" + "l2=0.042 f=-0.279 shape=(1, 9000, 1)
logits [[ 2.4204645 -2.1058333  2.4167774 -3.8478363]]
Iteration 900 of 1000: loss=0.0396 " + "l1=0.00167" + "l2=0.038 f=-0.279 shape=(1, 9000, 1)
logits [[ 2.416887  -2.1012619  2.413846  -3.846715 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.225 " + "l1=0.225" + "l2=0 f=-0.278 shape=(1, 9000, 1)
logits [[ 3.057729  -2.134085   2.3647468 -4.3989086]]
Iteration 100 of 1000: loss=0.145 " + "l1=0.0954" + "l2=0.0493 f=-0.276 shape=(1, 9000, 1)
logits [[ 2.684993  -2.1355982  2.391495  -4.0442276]]
Iteration 200 of 1000: loss=0.117 " + "l1=0.0544" + "l2=0.0622 f=-0.275 shape=(1, 9000, 1)
logits [[ 2.5750144 -2.133022   2.407754  -3.9514043]]
Iteration 300 of 1000: loss=0.0931 " + "l1=0.016" + "l2=0.0771 f=-0.275 shape=(1, 9000, 1)
logits [[ 2.468603  -2.127348   2.4193683 -3.860131 ]]
Iteration 400 of 1000: loss=0.0738 " + "l1=0.000745" + "l2=0.073 f=-0.275 shape=(1, 9000, 1)
logits [[ 2.4267628 -2.1234283  2.4244719 -3.8288898]]
Iteration 500 of 1000: loss=0.0634 " + "l1=0.000828" + "l2=0.0626 f=-0.277 shape=(1, 9000, 1)
logits [[ 2.4265914 -2.1198268  2.4240444 -3.840427 ]]
Iteration 600 of 1000: loss=0.0546 " + "l1=0.00105" + "l2=0.0536 f=-0.278 shape=(1, 9000, 1)
logits [[ 2.4274518 -2.1126494  2.424226  -3.8495052]]
Iteration 700 of 1000: loss=0.0484 " + "l1=0.00227" + "l2=0.0462 f=-0.278 shape=(1, 9000, 1)
logits [[ 2.4298286 -2.1072235  2.422837  -3.856396 ]]
Iteration 800 of 1000: loss=0.0419 " + "l1=0" + "l2=0.0419 f=-0.278 shape=(1, 9000, 1)
logits [[ 2.4157252 -2.1007988  2.4196954 -3.8462915]]
Iteration 900 of 1000: loss=0.037 " + "l1=0.000656" + "l2=0.0364 f=-0.278 shape=(1, 9000, 1)
logits [[ 2.4160218 -2.0958867  2.4140034 -3.8481095]]
--- 259.1824724674225 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0746 " + "l1=0.0746" + "l2=0 f=-0.278 shape=(1, 9000, 1)
logits [[ 3.057729  -2.134085   2.3647468 -4.3989086]]
Iteration 100 of 1000: loss=0.0741 " + "l1=0.0737" + "l2=0.000421 f=-0.276 shape=(1, 9000, 1)
logits [[ 3.0195863 -2.12854    2.3532145 -4.347542 ]]
Iteration 200 of 1000: loss=0.074 " + "l1=0.0736" + "l2=0.000388 f=-0.276 shape=(1, 9000, 1)
logits [[ 3.016628  -2.127754   2.351862  -4.3442307]]
Iteration 300 of 1000: loss=0.0739 " + "l1=0.0735" + "l2=0.000445 f=-0.276 shape=(1, 9000, 1)
logits [[ 3.0117335 -2.1264772  2.3500652 -4.3381777]]
Iteration 400 of 1000: loss=0.0739 " + "l1=0.0734" + "l2=0.000504 f=-0.276 shape=(1, 9000, 1)
logits [[ 3.006532  -2.1250472  2.3481085 -4.331949 ]]
Iteration 500 of 1000: loss=0.0739 " + "l1=0.0733" + "l2=0.000613 f=-0.275 shape=(1, 9000, 1)
logits [[ 3.0012906 -2.1235354  2.3461194 -4.3257165]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.746 " + "l1=0.746" + "l2=0 f=-0.278 shape=(1, 9000, 1)
logits [[ 3.057729  -2.134085   2.3647468 -4.3989086]]
Iteration 100 of 1000: loss=0.7 " + "l1=0.669" + "l2=0.0305 f=-0.259 shape=(1, 9000, 1)
logits [[ 2.7345402 -2.0822496  2.2695816 -3.9568381]]
Iteration 200 of 1000: loss=0.686 " + "l1=0.645" + "l2=0.0409 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.632739  -2.0514975  2.232905  -3.8203177]]
Iteration 300 of 1000: loss=0.671 " + "l1=0.618" + "l2=0.0527 f=-0.248 shape=(1, 9000, 1)
logits [[ 2.511488  -2.0141292  2.1825187 -3.6719978]]
Iteration 400 of 1000: loss=0.656 " + "l1=0.595" + "l2=0.0613 f=-0.243 shape=(1, 9000, 1)
logits [[ 2.4063954 -1.9843706  2.1438785 -3.5386305]]
Iteration 500 of 1000: loss=0.642 " + "l1=0.574" + "l2=0.0672 f=-0.24 shape=(1, 9000, 1)
logits [[ 2.3206673 -1.9527667  2.0968192 -3.4229457]]
Iteration 600 of 1000: loss=0.627 " + "l1=0.554" + "l2=0.0728 f=-0.232 shape=(1, 9000, 1)
logits [[ 2.2344513 -1.9181916  2.06073   -3.3057654]]
Iteration 700 of 1000: loss=0.611 " + "l1=0.533" + "l2=0.0781 f=-0.225 shape=(1, 9000, 1)
logits [[ 2.1451652 -1.8883264  2.0296774 -3.1860087]]
Iteration 800 of 1000: loss=0.597 " + "l1=0.515" + "l2=0.0813 f=-0.217 shape=(1, 9000, 1)
logits [[ 2.0725315 -1.8636926  2.0049503 -3.0814009]]
Iteration 900 of 1000: loss=0.583 " + "l1=0.498" + "l2=0.0848 f=-0.209 shape=(1, 9000, 1)
logits [[ 2.0054367 -1.8442159  1.9830313 -2.9786057]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.46 " + "l1=7.46" + "l2=0 f=-0.278 shape=(1, 9000, 1)
logits [[ 3.057729  -2.134085   2.3647468 -4.3989086]]
Iteration 100 of 1000: loss=4.36 " + "l1=3.08" + "l2=1.28 f=-0.133 shape=(1, 9000, 1)
logits [[ 1.2241431 -1.6802101  1.5032725 -1.5778742]]
Iteration 200 of 1000: loss=3.66 " + "l1=2.07" + "l2=1.59 f=-0.0946 shape=(1, 9000, 1)
logits [[ 0.8420537  -1.5288218   1.1901578  -0.88181597]]
Iteration 300 of 1000: loss=3.19 " + "l1=1.49" + "l2=1.69 f=-0.0762 shape=(1, 9000, 1)
logits [[ 0.62801254 -1.4424355   1.001991   -0.4925627 ]]
Iteration 400 of 1000: loss=2.65 " + "l1=0.745" + "l2=1.9 f=-0.03 shape=(1, 9000, 1)
logits [[ 0.40596437 -1.294316    0.75654924  0.01168992]]
Iteration 500 of 1000: loss=1.93 " + "l1=0.00952" + "l2=1.92 f=0.0307 shape=(1, 9000, 1)
logits [[ 0.29887345 -1.2191864   0.52637726  0.51685923]]
Iteration 600 of 1000: loss=1.57 " + "l1=0.013" + "l2=1.56 f=0.0415 shape=(1, 9000, 1)
logits [[ 0.32872573 -1.2095686   0.53002316  0.5170131 ]]
Iteration 700 of 1000: loss=1.31 " + "l1=0.00774" + "l2=1.31 f=0.0414 shape=(1, 9000, 1)
logits [[ 0.333793   -1.182228    0.5108958   0.50315285]]
Iteration 800 of 1000: loss=1.15 " + "l1=0" + "l2=1.15 f=0.0465 shape=(1, 9000, 1)
logits [[ 0.32491437 -1.1780698   0.51071334  0.5285734 ]]
Iteration 900 of 1000: loss=1.02 " + "l1=0" + "l2=1.02 f=0.0533 shape=(1, 9000, 1)
logits [[ 0.33823302 -1.1921246   0.53042597  0.53646785]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.1 " + "l1=4.1" + "l2=0 f=-0.278 shape=(1, 9000, 1)
logits [[ 3.057729  -2.134085   2.3647468 -4.3989086]]
Iteration 100 of 1000: loss=2.88 " + "l1=2.36" + "l2=0.517 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.7810061 -1.7893567  1.796956  -2.4913776]]
Iteration 200 of 1000: loss=2.62 " + "l1=2.04" + "l2=0.578 f=-0.155 shape=(1, 9000, 1)
logits [[ 1.5427262 -1.7284083  1.6379327 -2.072178 ]]
Iteration 300 of 1000: loss=2.41 " + "l1=1.77" + "l2=0.639 f=-0.132 shape=(1, 9000, 1)
logits [[ 1.359506  -1.6736448  1.502085  -1.7169052]]
Iteration 400 of 1000: loss=2.22 " + "l1=1.54" + "l2=0.678 f=-0.116 shape=(1, 9000, 1)
logits [[ 1.2041912 -1.6296018  1.3783318 -1.4174218]]
Iteration 500 of 1000: loss=2.02 " + "l1=1.3" + "l2=0.72 f=-0.103 shape=(1, 9000, 1)
logits [[ 1.0264283 -1.5849226  1.2538614 -1.107044 ]]
Iteration 600 of 1000: loss=1.83 " + "l1=1.1" + "l2=0.735 f=-0.0828 shape=(1, 9000, 1)
logits [[ 0.89147156 -1.5286579   1.1511185  -0.84505117]]
Iteration 700 of 1000: loss=1.6 " + "l1=0.772" + "l2=0.825 f=-0.0425 shape=(1, 9000, 1)
logits [[ 0.6782659  -1.4220465   0.9887946  -0.41492626]]
Iteration 800 of 1000: loss=1.28 " + "l1=0.396" + "l2=0.886 f=0.0128 shape=(1, 9000, 1)
logits [[ 0.45745668 -1.3091832   0.81130517  0.09174687]]
Iteration 900 of 1000: loss=0.995 " + "l1=0.00795" + "l2=0.987 f=0.0571 shape=(1, 9000, 1)
logits [[ 0.25255966 -1.2548635   0.62255394  0.608092  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.42 " + "l1=2.42" + "l2=0 f=-0.278 shape=(1, 9000, 1)
logits [[ 3.057729  -2.134085   2.3647468 -4.3989086]]
Iteration 100 of 1000: loss=1.9 " + "l1=1.6" + "l2=0.293 f=-0.206 shape=(1, 9000, 1)
logits [[ 2.0016437 -1.8917077  2.0002282 -2.9346347]]
Iteration 200 of 1000: loss=1.77 " + "l1=1.48" + "l2=0.293 f=-0.188 shape=(1, 9000, 1)
logits [[ 1.8660231 -1.814872   1.8680419 -2.6727154]]
Iteration 300 of 1000: loss=1.68 " + "l1=1.38" + "l2=0.297 f=-0.172 shape=(1, 9000, 1)
logits [[ 1.7801992 -1.7731138  1.782856  -2.4775937]]
Iteration 400 of 1000: loss=1.6 " + "l1=1.31" + "l2=0.291 f=-0.158 shape=(1, 9000, 1)
logits [[ 1.7073712 -1.7296641  1.7118806 -2.3203104]]
Iteration 500 of 1000: loss=1.52 " + "l1=1.22" + "l2=0.3 f=-0.145 shape=(1, 9000, 1)
logits [[ 1.6058351 -1.6979831  1.6390889 -2.1282659]]
Iteration 600 of 1000: loss=1.45 " + "l1=1.14" + "l2=0.312 f=-0.133 shape=(1, 9000, 1)
logits [[ 1.5106876 -1.671749   1.5675976 -1.9365448]]
Iteration 700 of 1000: loss=1.38 " + "l1=1.06" + "l2=0.321 f=-0.123 shape=(1, 9000, 1)
logits [[ 1.4137366 -1.6466771  1.4989268 -1.7561141]]
Iteration 800 of 1000: loss=1.31 " + "l1=0.984" + "l2=0.33 f=-0.112 shape=(1, 9000, 1)
logits [[ 1.323314  -1.6175935  1.4380769 -1.5907586]]
Iteration 900 of 1000: loss=1.25 " + "l1=0.913" + "l2=0.333 f=-0.103 shape=(1, 9000, 1)
logits [[ 1.2375227 -1.5870845  1.37353   -1.4342681]]
--- 271.42797112464905 seconds ---
Adv result:3
Loading record A03584
(1, 6012)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0575 " + "l1=0.0575" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.369817  -2.3778791  2.1500056 -5.1645904]]
Iteration 100 of 1000: loss=0.0568 " + "l1=0.0564" + "l2=0.000411 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.3196063 -2.321669   2.1181083 -5.135445 ]]
Iteration 200 of 1000: loss=0.0566 " + "l1=0.0562" + "l2=0.000421 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.3096132 -2.310155   2.112016  -5.12801  ]]
Iteration 300 of 1000: loss=0.0565 " + "l1=0.056" + "l2=0.000513 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.2975838 -2.2974458  2.1048954 -5.1202507]]
Iteration 400 of 1000: loss=0.0563 " + "l1=0.0557" + "l2=0.000598 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.2858129 -2.2852755  2.0979664 -5.1127467]]
Iteration 500 of 1000: loss=0.0562 " + "l1=0.0555" + "l2=0.000746 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.274811  -2.275028   2.0919876 -5.1063557]]
Iteration 600 of 1000: loss=0.0561 " + "l1=0.0553" + "l2=0.000848 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.264291  -2.2654452  2.0864875 -5.100658 ]]
Iteration 700 of 1000: loss=0.0561 " + "l1=0.0551" + "l2=0.000953 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.254079  -2.25678    2.081589  -5.0953317]]
Iteration 800 of 1000: loss=0.056 " + "l1=0.0549" + "l2=0.0011 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.2448006 -2.249762   2.0775561 -5.090608 ]]
Iteration 900 of 1000: loss=0.056 " + "l1=0.0548" + "l2=0.00125 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.2361555 -2.2437603  2.0738149 -5.08598  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.575 " + "l1=0.575" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.369817  -2.3778791  2.1500056 -5.1645904]]
Iteration 100 of 1000: loss=0.522 " + "l1=0.497" + "l2=0.0253 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.9787495 -1.9898437  1.9392216 -4.950794 ]]
Iteration 200 of 1000: loss=0.504 " + "l1=0.471" + "l2=0.0332 f=-0.505 shape=(1, 9000, 1)
logits [[ 2.840645  -1.8703288  1.8694718 -4.8601522]]
Iteration 300 of 1000: loss=0.49 " + "l1=0.45" + "l2=0.0398 f=-0.501 shape=(1, 9000, 1)
logits [[ 2.7249196 -1.7745615  1.8125445 -4.7675247]]
Iteration 400 of 1000: loss=0.477 " + "l1=0.43" + "l2=0.0475 f=-0.495 shape=(1, 9000, 1)
logits [[ 2.6192107 -1.6799754  1.7579925 -4.677225 ]]
Iteration 500 of 1000: loss=0.466 " + "l1=0.409" + "l2=0.0567 f=-0.493 shape=(1, 9000, 1)
logits [[ 2.5108325 -1.5813048  1.6874539 -4.5879254]]
Iteration 600 of 1000: loss=0.454 " + "l1=0.388" + "l2=0.0658 f=-0.49 shape=(1, 9000, 1)
logits [[ 2.398364  -1.4823478  1.6244016 -4.5003724]]
Iteration 700 of 1000: loss=0.439 " + "l1=0.361" + "l2=0.0774 f=-0.488 shape=(1, 9000, 1)
logits [[ 2.250404  -1.3617854  1.5466005 -4.3887153]]
Iteration 800 of 1000: loss=0.421 " + "l1=0.332" + "l2=0.0892 f=-0.487 shape=(1, 9000, 1)
logits [[ 2.0868945 -1.2321117  1.4594969 -4.260651 ]]
Iteration 900 of 1000: loss=0.395 " + "l1=0.291" + "l2=0.103 f=-0.5 shape=(1, 9000, 1)
logits [[ 1.8519194 -1.0592474  1.3984298 -4.1919317]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.75 " + "l1=5.75" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.369817  -2.3778791  2.1500056 -5.1645904]]
Iteration 100 of 1000: loss=1.77 " + "l1=0.328" + "l2=1.44 f=-0.572 shape=(1, 9000, 1)
logits [[ 0.7813581   0.45600623  0.78417534 -4.310611  ]]
Iteration 200 of 1000: loss=1.06 " + "l1=0.00291" + "l2=1.05 f=-0.594 shape=(1, 9000, 1)
logits [[ 0.5862115   0.58488405  0.5877983  -4.1342587 ]]
Iteration 300 of 1000: loss=0.843 " + "l1=0" + "l2=0.843 f=-0.588 shape=(1, 9000, 1)
logits [[ 0.5381226   0.56965643  0.55571735 -4.0137854 ]]
Iteration 400 of 1000: loss=0.702 " + "l1=0" + "l2=0.702 f=-0.583 shape=(1, 9000, 1)
logits [[ 0.50312847  0.5197658   0.519547   -3.8763916 ]]
Iteration 500 of 1000: loss=0.62 " + "l1=0" + "l2=0.62 f=-0.571 shape=(1, 9000, 1)
logits [[ 0.48348203  0.51526415  0.4865392  -3.7683399 ]]
Iteration 600 of 1000: loss=0.551 " + "l1=0" + "l2=0.551 f=-0.569 shape=(1, 9000, 1)
logits [[ 0.48780707  0.50828266  0.4771639  -3.7512226 ]]
Iteration 700 of 1000: loss=0.502 " + "l1=0" + "l2=0.502 f=-0.567 shape=(1, 9000, 1)
logits [[ 0.46074846  0.48458418  0.47961956 -3.6910224 ]]
Iteration 800 of 1000: loss=0.474 " + "l1=0" + "l2=0.474 f=-0.563 shape=(1, 9000, 1)
logits [[ 0.45514467  0.47023106  0.46402064 -3.6417243 ]]
Iteration 900 of 1000: loss=0.45 " + "l1=0" + "l2=0.45 f=-0.56 shape=(1, 9000, 1)
logits [[ 0.4347488   0.45599586  0.45033577 -3.5815623 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.16 " + "l1=3.16" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.369817  -2.3778791  2.1500056 -5.1645904]]
Iteration 100 of 1000: loss=1.66 " + "l1=0.904" + "l2=0.76 f=-0.576 shape=(1, 9000, 1)
logits [[ 1.2148379  -0.42149112  1.2214812  -4.3206916 ]]
Iteration 200 of 1000: loss=1.08 " + "l1=0.276" + "l2=0.804 f=-0.586 shape=(1, 9000, 1)
logits [[ 0.7712871   0.26983982  0.7645842  -4.1490984 ]]
Iteration 300 of 1000: loss=0.738 " + "l1=0" + "l2=0.738 f=-0.582 shape=(1, 9000, 1)
logits [[ 0.49134186  0.49195144  0.4917563  -3.801202  ]]
Iteration 400 of 1000: loss=0.586 " + "l1=0.00607" + "l2=0.58 f=-0.566 shape=(1, 9000, 1)
logits [[ 0.4718926   0.46334207  0.47437188 -3.674734  ]]
Iteration 500 of 1000: loss=0.517 " + "l1=0.00947" + "l2=0.507 f=-0.563 shape=(1, 9000, 1)
logits [[ 0.4604738  0.4432569  0.4503625 -3.6077933]]
Iteration 600 of 1000: loss=0.464 " + "l1=0.00597" + "l2=0.458 f=-0.567 shape=(1, 9000, 1)
logits [[ 0.44358343  0.43273395  0.439143   -3.581719  ]]
Iteration 700 of 1000: loss=0.432 " + "l1=0" + "l2=0.432 f=-0.566 shape=(1, 9000, 1)
logits [[ 0.41676047  0.42027384  0.41423467 -3.5144975 ]]
Iteration 800 of 1000: loss=0.409 " + "l1=0.00278" + "l2=0.407 f=-0.564 shape=(1, 9000, 1)
logits [[ 0.39311543  0.39952958  0.40458512 -3.4531019 ]]
Iteration 900 of 1000: loss=0.386 " + "l1=0" + "l2=0.386 f=-0.559 shape=(1, 9000, 1)
logits [[ 0.38868538  0.38937882  0.38699052 -3.400186  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.87 " + "l1=1.87" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.369817  -2.3778791  2.1500056 -5.1645904]]
Iteration 100 of 1000: loss=1.37 " + "l1=1.12" + "l2=0.25 f=-0.526 shape=(1, 9000, 1)
logits [[ 2.1591442 -1.2920187  1.5477159 -4.5173244]]
Iteration 200 of 1000: loss=1.06 " + "l1=0.594" + "l2=0.463 f=-0.56 shape=(1, 9000, 1)
logits [[ 1.3010781  -0.52576524  1.1757414  -4.1923637 ]]
Iteration 300 of 1000: loss=0.831 " + "l1=0.368" + "l2=0.463 f=-0.557 shape=(1, 9000, 1)
logits [[ 0.9795581 -0.1519299  0.9772158 -4.0343103]]
Iteration 400 of 1000: loss=0.691 " + "l1=0.222" + "l2=0.469 f=-0.549 shape=(1, 9000, 1)
logits [[ 0.7528752   0.06918918  0.74822545 -3.7680287 ]]
Iteration 500 of 1000: loss=0.57 " + "l1=0.106" + "l2=0.465 f=-0.538 shape=(1, 9000, 1)
logits [[ 0.56974834  0.2442869   0.56862533 -3.535311  ]]
Iteration 600 of 1000: loss=0.473 " + "l1=0.0035" + "l2=0.469 f=-0.549 shape=(1, 9000, 1)
logits [[ 0.41073194  0.41436496  0.42514017 -3.4442616 ]]
Iteration 700 of 1000: loss=0.416 " + "l1=0.00105" + "l2=0.415 f=-0.54 shape=(1, 9000, 1)
logits [[ 0.38274652  0.38649333  0.38972867 -3.319745  ]]
Iteration 800 of 1000: loss=0.374 " + "l1=0" + "l2=0.374 f=-0.534 shape=(1, 9000, 1)
logits [[ 0.35285205  0.37890154  0.37481013 -3.2439964 ]]
Iteration 900 of 1000: loss=0.325 " + "l1=0.00137" + "l2=0.323 f=-0.527 shape=(1, 9000, 1)
logits [[ 0.33642253  0.3499776   0.35418797 -3.1487076 ]]
--- 296.6149215698242 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0122 " + "l1=0.0122" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.369817  -2.3778791  2.1500056 -5.1645904]]
Iteration 100 of 1000: loss=0.012 " + "l1=0.0119" + "l2=0.00014 f=-0.508 shape=(1, 9000, 1)
logits [[ 3.347788  -2.3803487  2.1587882 -5.158769 ]]
Iteration 200 of 1000: loss=0.012 " + "l1=0.0119" + "l2=0.00012 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.3452327 -2.3806744  2.1598942 -5.159233 ]]
Iteration 300 of 1000: loss=0.012 " + "l1=0.0118" + "l2=0.000159 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.3409128 -2.380811   2.1614633 -5.159092 ]]
Iteration 400 of 1000: loss=0.0119 " + "l1=0.0117" + "l2=0.000172 f=-0.51 shape=(1, 9000, 1)
logits [[ 3.336447  -2.3808053  2.1630263 -5.158793 ]]
Iteration 500 of 1000: loss=0.0119 " + "l1=0.0117" + "l2=0.000244 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.33173   -2.3805091  2.1645324 -5.158377 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.122 " + "l1=0.122" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.369817  -2.3778791  2.1500056 -5.1645904]]
Iteration 100 of 1000: loss=0.105 " + "l1=0.097" + "l2=0.00841 f=-0.528 shape=(1, 9000, 1)
logits [[ 3.201676  -2.4123673  2.2321098 -5.1353183]]
Iteration 200 of 1000: loss=0.0954 " + "l1=0.0822" + "l2=0.0133 f=-0.542 shape=(1, 9000, 1)
logits [[ 3.1407003 -2.4814868  2.3190818 -5.1475654]]
Iteration 300 of 1000: loss=0.0885 " + "l1=0.0732" + "l2=0.0154 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.0852268 -2.5009744  2.3536792 -5.1355515]]
Iteration 400 of 1000: loss=0.0826 " + "l1=0.0651" + "l2=0.0175 f=-0.555 shape=(1, 9000, 1)
logits [[ 3.029294  -2.509991   2.3779414 -5.116279 ]]
Iteration 500 of 1000: loss=0.077 " + "l1=0.0576" + "l2=0.0195 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.9714854 -2.509707   2.3956552 -5.090532 ]]
Iteration 600 of 1000: loss=0.0707 " + "l1=0.0492" + "l2=0.0216 f=-0.563 shape=(1, 9000, 1)
logits [[ 2.9035375 -2.5091958  2.4119194 -5.059686 ]]
Iteration 700 of 1000: loss=0.0642 " + "l1=0.0407" + "l2=0.0235 f=-0.57 shape=(1, 9000, 1)
logits [[ 2.831689  -2.50558    2.4242346 -5.0287633]]
Iteration 800 of 1000: loss=0.0566 " + "l1=0.0316" + "l2=0.025 f=-0.575 shape=(1, 9000, 1)
logits [[ 2.751598  -2.4889448  2.4356427 -4.9999146]]
Iteration 900 of 1000: loss=0.047 " + "l1=0.0196" + "l2=0.0274 f=-0.587 shape=(1, 9000, 1)
logits [[ 2.6540542 -2.4416308  2.4581177 -5.019803 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.22 " + "l1=1.22" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.369817  -2.3778791  2.1500056 -5.1645904]]
Iteration 100 of 1000: loss=0.181 " + "l1=0" + "l2=0.181 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.5315425 -2.5540612  2.5319529 -4.890013 ]]
Iteration 200 of 1000: loss=0.115 " + "l1=0" + "l2=0.115 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.5264988 -2.55087    2.5273871 -4.8835983]]
Iteration 300 of 1000: loss=0.0902 " + "l1=0" + "l2=0.0902 f=-0.598 shape=(1, 9000, 1)
logits [[ 2.5077107 -2.5326147  2.516217  -4.881821 ]]
Iteration 400 of 1000: loss=0.0717 " + "l1=0" + "l2=0.0717 f=-0.604 shape=(1, 9000, 1)
logits [[ 2.4959207 -2.475569   2.507258  -4.9418106]]
Iteration 500 of 1000: loss=0.0599 " + "l1=0" + "l2=0.0599 f=-0.606 shape=(1, 9000, 1)
logits [[ 2.4963799 -2.4528596  2.4989927 -4.966889 ]]
Iteration 600 of 1000: loss=0.0529 " + "l1=0" + "l2=0.0529 f=-0.609 shape=(1, 9000, 1)
logits [[ 2.4831371 -2.4417567  2.496509  -4.9740043]]
Iteration 700 of 1000: loss=0.0455 " + "l1=0" + "l2=0.0455 f=-0.609 shape=(1, 9000, 1)
logits [[ 2.4732556 -2.419504   2.4860272 -4.974871 ]]
Iteration 800 of 1000: loss=0.0385 " + "l1=0" + "l2=0.0385 f=-0.608 shape=(1, 9000, 1)
logits [[ 2.4722264 -2.4019673  2.4738185 -4.974466 ]]
Iteration 900 of 1000: loss=0.0355 " + "l1=0" + "l2=0.0355 f=-0.609 shape=(1, 9000, 1)
logits [[ 2.456508  -2.3955545  2.4704459 -4.9677253]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.671 " + "l1=0.671" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.369817  -2.3778791  2.1500056 -5.1645904]]
Iteration 100 of 1000: loss=0.198 " + "l1=0.00717" + "l2=0.19 f=-0.594 shape=(1, 9000, 1)
logits [[ 2.5530827 -2.556776   2.540039  -4.910796 ]]
Iteration 200 of 1000: loss=0.113 " + "l1=0" + "l2=0.113 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.5248046 -2.5616133  2.5324636 -4.874013 ]]
Iteration 300 of 1000: loss=0.085 " + "l1=0.00248" + "l2=0.0825 f=-0.596 shape=(1, 9000, 1)
logits [[ 2.51295   -2.5290346  2.5084484 -4.877727 ]]
Iteration 400 of 1000: loss=0.0654 " + "l1=0.000821" + "l2=0.0646 f=-0.603 shape=(1, 9000, 1)
logits [[ 2.4951923 -2.4689224  2.4936993 -4.930152 ]]
Iteration 500 of 1000: loss=0.0549 " + "l1=0" + "l2=0.0549 f=-0.606 shape=(1, 9000, 1)
logits [[ 2.487769 -2.445333  2.492687 -4.95933 ]]
Iteration 600 of 1000: loss=0.0466 " + "l1=0" + "l2=0.0466 f=-0.607 shape=(1, 9000, 1)
logits [[ 2.4807744 -2.4268248  2.4819753 -4.96379  ]]
Iteration 700 of 1000: loss=0.0397 " + "l1=0.000202" + "l2=0.0395 f=-0.607 shape=(1, 9000, 1)
logits [[ 2.4693146 -2.40586    2.468947  -4.9614997]]
Iteration 800 of 1000: loss=0.0354 " + "l1=0.000998" + "l2=0.0344 f=-0.609 shape=(1, 9000, 1)
logits [[ 2.4633224 -2.39399    2.4615073 -4.9649444]]
Iteration 900 of 1000: loss=0.0312 " + "l1=0" + "l2=0.0312 f=-0.61 shape=(1, 9000, 1)
logits [[ 2.452212  -2.3882012  2.4585254 -4.9616423]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.396 " + "l1=0.396" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.369817  -2.3778791  2.1500056 -5.1645904]]
Iteration 100 of 1000: loss=0.215 " + "l1=0.131" + "l2=0.0834 f=-0.57 shape=(1, 9000, 1)
logits [[ 2.8459678 -2.5217738  2.4418821 -5.048034 ]]
Iteration 200 of 1000: loss=0.137 " + "l1=0.0231" + "l2=0.114 f=-0.59 shape=(1, 9000, 1)
logits [[ 2.5929828 -2.5641482  2.5218627 -4.9121633]]
Iteration 300 of 1000: loss=0.0888 " + "l1=0.000975" + "l2=0.0879 f=-0.598 shape=(1, 9000, 1)
logits [[ 2.512526  -2.5529547  2.5095274 -4.8596334]]
Iteration 400 of 1000: loss=0.0683 " + "l1=0" + "l2=0.0683 f=-0.6 shape=(1, 9000, 1)
logits [[ 2.4826334 -2.5118837  2.4849062 -4.85554  ]]
Iteration 500 of 1000: loss=0.0551 " + "l1=0" + "l2=0.0551 f=-0.601 shape=(1, 9000, 1)
logits [[ 2.4712243 -2.4831228  2.473684  -4.867666 ]]
Iteration 600 of 1000: loss=0.0456 " + "l1=0" + "l2=0.0456 f=-0.602 shape=(1, 9000, 1)
logits [[ 2.462504 -2.455472  2.467376 -4.882398]]
Iteration 700 of 1000: loss=0.0385 " + "l1=0" + "l2=0.0385 f=-0.604 shape=(1, 9000, 1)
logits [[ 2.454922  -2.4470558  2.45937   -4.882558 ]]
Iteration 800 of 1000: loss=0.0329 " + "l1=0" + "l2=0.0329 f=-0.605 shape=(1, 9000, 1)
logits [[ 2.4492576 -2.442145   2.449994  -4.8759074]]
Iteration 900 of 1000: loss=0.029 " + "l1=0" + "l2=0.029 f=-0.605 shape=(1, 9000, 1)
logits [[ 2.4426234 -2.4361634  2.4445548 -4.8716135]]
--- 273.08696031570435 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0853 " + "l1=0.0853" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.369817  -2.3778791  2.1500056 -5.1645904]]
Iteration 100 of 1000: loss=0.0847 " + "l1=0.0843" + "l2=0.000397 f=-0.503 shape=(1, 9000, 1)
logits [[ 3.3201094 -2.3464172  2.1231086 -5.1089635]]
Iteration 200 of 1000: loss=0.0845 " + "l1=0.0841" + "l2=0.000424 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.3099813 -2.3399181  2.1174119 -5.0968075]]
Iteration 300 of 1000: loss=0.0843 " + "l1=0.0838" + "l2=0.000525 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.2976863 -2.3317447  2.1101794 -5.082518 ]]
Iteration 400 of 1000: loss=0.0842 " + "l1=0.0835" + "l2=0.000632 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.2858593 -2.3241937  2.1031208 -5.0687356]]
Iteration 500 of 1000: loss=0.0841 " + "l1=0.0833" + "l2=0.000757 f=-0.5 shape=(1, 9000, 1)
logits [[ 3.2742925 -2.317271   2.0965044 -5.0551105]]
Iteration 600 of 1000: loss=0.0839 " + "l1=0.083" + "l2=0.000867 f=-0.5 shape=(1, 9000, 1)
logits [[ 3.2626047 -2.310614   2.0902536 -5.0419474]]
Iteration 700 of 1000: loss=0.0839 " + "l1=0.0828" + "l2=0.00106 f=-0.5 shape=(1, 9000, 1)
logits [[ 3.2510026 -2.3047204  2.0845008 -5.0294566]]
Iteration 800 of 1000: loss=0.0838 " + "l1=0.0826" + "l2=0.00126 f=-0.5 shape=(1, 9000, 1)
logits [[ 3.239814  -2.2995343  2.0793183 -5.0176606]]
Iteration 900 of 1000: loss=0.0838 " + "l1=0.0823" + "l2=0.00142 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.2282295 -2.2946548  2.0742648 -5.0054145]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.853 " + "l1=0.853" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.369817  -2.3778791  2.1500056 -5.1645904]]
Iteration 100 of 1000: loss=0.796 " + "l1=0.768" + "l2=0.0277 f=-0.484 shape=(1, 9000, 1)
logits [[ 2.9741113 -2.155048   1.9529063 -4.706412 ]]
Iteration 200 of 1000: loss=0.767 " + "l1=0.724" + "l2=0.0431 f=-0.469 shape=(1, 9000, 1)
logits [[ 2.7835927 -2.0873537  1.8810463 -4.452596 ]]
Iteration 300 of 1000: loss=0.742 " + "l1=0.688" + "l2=0.0543 f=-0.456 shape=(1, 9000, 1)
logits [[ 2.632016  -2.0391006  1.8292925 -4.2480145]]
Iteration 400 of 1000: loss=0.72 " + "l1=0.655" + "l2=0.0649 f=-0.444 shape=(1, 9000, 1)
logits [[ 2.490088  -1.9929312  1.7864602 -4.059035 ]]
Iteration 500 of 1000: loss=0.696 " + "l1=0.619" + "l2=0.0765 f=-0.429 shape=(1, 9000, 1)
logits [[ 2.3402522 -1.9451531  1.7410694 -3.8528395]]
Iteration 600 of 1000: loss=0.669 " + "l1=0.581" + "l2=0.0884 f=-0.417 shape=(1, 9000, 1)
logits [[ 2.1750278 -1.8977712  1.6888666 -3.634718 ]]
Iteration 700 of 1000: loss=0.641 " + "l1=0.54" + "l2=0.1 f=-0.406 shape=(1, 9000, 1)
logits [[ 2.0066826 -1.8435026  1.6113355 -3.3978317]]
Iteration 800 of 1000: loss=0.604 " + "l1=0.489" + "l2=0.115 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.7765708 -1.7599845  1.4960538 -3.1129875]]
Iteration 900 of 1000: loss=0.562 " + "l1=0.432" + "l2=0.13 f=-0.405 shape=(1, 9000, 1)
logits [[ 1.5023818 -1.6656687  1.360354  -2.8178809]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.53 " + "l1=8.53" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.369817  -2.3778791  2.1500056 -5.1645904]]
Iteration 100 of 1000: loss=3.88 " + "l1=1.96" + "l2=1.92 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.70796216 -1.3818749   0.7070402  -1.2493783 ]]
Iteration 200 of 1000: loss=1.77 " + "l1=0.0098" + "l2=1.76 f=-0.237 shape=(1, 9000, 1)
logits [[ 0.09617033 -1.2925078   0.12969474  0.11989836]]
Iteration 300 of 1000: loss=1.23 " + "l1=0" + "l2=1.23 f=-0.261 shape=(1, 9000, 1)
logits [[ 0.09767923 -1.3724217   0.11342926  0.11846494]]
Iteration 400 of 1000: loss=1.01 " + "l1=0" + "l2=1.01 f=-0.279 shape=(1, 9000, 1)
logits [[ 0.06882365 -1.4089518   0.10285085  0.12165832]]
Iteration 500 of 1000: loss=0.871 " + "l1=0" + "l2=0.871 f=-0.282 shape=(1, 9000, 1)
logits [[ 0.09034686 -1.4297279   0.09938905  0.11165869]]
Iteration 600 of 1000: loss=0.786 " + "l1=0" + "l2=0.786 f=-0.285 shape=(1, 9000, 1)
logits [[ 0.07123557 -1.4222871   0.07786746  0.13342288]]
Iteration 700 of 1000: loss=0.702 " + "l1=0" + "l2=0.702 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.07603026 -1.4155506   0.07865779  0.10741638]]
Iteration 800 of 1000: loss=0.652 " + "l1=0.0182" + "l2=0.634 f=-0.29 shape=(1, 9000, 1)
logits [[ 0.10420865 -1.4142138   0.06556533  0.08603211]]
Iteration 900 of 1000: loss=0.582 " + "l1=0" + "l2=0.582 f=-0.297 shape=(1, 9000, 1)
logits [[ 0.06414225 -1.4025024   0.06837569  0.08255968]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.69 " + "l1=4.69" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.369817  -2.3778791  2.1500056 -5.1645904]]
Iteration 100 of 1000: loss=3.06 " + "l1=2.31" + "l2=0.757 f=-0.383 shape=(1, 9000, 1)
logits [[ 1.505891  -1.6901731  1.3389456 -2.6879425]]
Iteration 200 of 1000: loss=1.93 " + "l1=0.77" + "l2=1.16 f=-0.27 shape=(1, 9000, 1)
logits [[ 0.55839205 -1.3731325   0.5671184  -0.8329162 ]]
Iteration 300 of 1000: loss=1.01 " + "l1=0.00414" + "l2=1.01 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.08733573 -1.299494    0.09592023  0.08838794]]
Iteration 400 of 1000: loss=0.799 " + "l1=0" + "l2=0.799 f=-0.282 shape=(1, 9000, 1)
logits [[ 0.04389777 -1.3038099   0.06318086  0.07007025]]
Iteration 500 of 1000: loss=0.678 " + "l1=0" + "l2=0.678 f=-0.286 shape=(1, 9000, 1)
logits [[ 0.0549494  -1.309387    0.05254874  0.05689987]]
Iteration 600 of 1000: loss=0.594 " + "l1=0" + "l2=0.594 f=-0.294 shape=(1, 9000, 1)
logits [[ 0.02842886 -1.3055886   0.05047201  0.05234241]]
Iteration 700 of 1000: loss=0.522 " + "l1=0" + "l2=0.522 f=-0.292 shape=(1, 9000, 1)
logits [[ 0.03736582 -1.2873248   0.03886059  0.04226064]]
Iteration 800 of 1000: loss=0.465 " + "l1=0" + "l2=0.465 f=-0.292 shape=(1, 9000, 1)
logits [[ 0.03604601 -1.3000385   0.0368584   0.05934621]]
Iteration 900 of 1000: loss=0.415 " + "l1=0" + "l2=0.415 f=-0.295 shape=(1, 9000, 1)
logits [[ 0.03894565 -1.3290509   0.04444245  0.06473558]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.77 " + "l1=2.77" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.369817  -2.3778791  2.1500056 -5.1645904]]
Iteration 100 of 1000: loss=2.16 " + "l1=1.85" + "l2=0.303 f=-0.427 shape=(1, 9000, 1)
logits [[ 2.1164076 -1.8435928  1.6073034 -3.5865695]]
Iteration 200 of 1000: loss=1.79 " + "l1=1.33" + "l2=0.463 f=-0.371 shape=(1, 9000, 1)
logits [[ 1.4866098 -1.7418808  1.3719049 -2.6006699]]
Iteration 300 of 1000: loss=1.38 " + "l1=0.779" + "l2=0.605 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.90188825 -1.5232466   0.89870334 -1.494075  ]]
Iteration 400 of 1000: loss=0.921 " + "l1=0.115" + "l2=0.805 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.20990184 -1.2855384   0.21858987 -0.13601172]]
Iteration 500 of 1000: loss=0.658 " + "l1=0.00663" + "l2=0.651 f=-0.268 shape=(1, 9000, 1)
logits [[ 0.04629954 -1.1882738   0.04416424  0.02590441]]
Iteration 600 of 1000: loss=0.548 " + "l1=0.00223" + "l2=0.545 f=-0.279 shape=(1, 9000, 1)
logits [[ 0.01270673 -1.1534153   0.01634016  0.00946492]]
Iteration 700 of 1000: loss=0.474 " + "l1=0" + "l2=0.474 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.01426329 -1.1974324   0.01533183  0.01964897]]
Iteration 800 of 1000: loss=0.417 " + "l1=0.00194" + "l2=0.415 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.02943088 -1.2392404   0.03348085  0.02752119]]
Iteration 900 of 1000: loss=0.371 " + "l1=0" + "l2=0.371 f=-0.292 shape=(1, 9000, 1)
logits [[ 0.02402771 -1.281075    0.0401635   0.04999676]]
--- 301.8301498889923 seconds ---
Adv result:3
