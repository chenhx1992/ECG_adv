Updating 7b65ebe..8764e12
Fast-forward
 EOT_adv/EOTtile_eval.py | 16 +++++++---------
 EOT_tile-test.py        | 20 ++++++++++----------
 EOT_tile.py             |  7 ++++---
 EOT_tile_tf.py          |  7 ++++---
 4 files changed, 25 insertions(+), 25 deletions(-)
Loading model
Loading ground truth file
Attack diff is running...
Loading record A06687
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0593 " + "l1=0.0593" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.0191653 -2.907858   2.730435  -4.69492  ]]
Iteration 100 of 1000: loss=0.059 " + "l1=0.0588" + "l2=0.000215 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.9877672 -2.8927033  2.7223978 -4.663033 ]]
Iteration 200 of 1000: loss=0.0589 " + "l1=0.0587" + "l2=0.000186 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.9839346 -2.8906524  2.7214975 -4.659693 ]]
Iteration 300 of 1000: loss=0.0589 " + "l1=0.0587" + "l2=0.000241 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.9778533 -2.8875318  2.720179  -4.653775 ]]
Iteration 400 of 1000: loss=0.0588 " + "l1=0.0586" + "l2=0.000268 f=-0.46 shape=(1, 9000, 1)
logits [[ 2.9712594 -2.884177   2.7188287 -4.6472397]]
Iteration 500 of 1000: loss=0.0588 " + "l1=0.0585" + "l2=0.000347 f=-0.46 shape=(1, 9000, 1)
logits [[ 2.964823  -2.8807383  2.7175002 -4.641049 ]]
Iteration 600 of 1000: loss=0.0588 " + "l1=0.0584" + "l2=0.000445 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.9583411 -2.8770444  2.7161193 -4.63482  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.593 " + "l1=0.593" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.0191653 -2.907858   2.730435  -4.69492  ]]
Iteration 100 of 1000: loss=0.57 " + "l1=0.557" + "l2=0.0133 f=-0.446 shape=(1, 9000, 1)
logits [[ 2.7794914 -2.7887716  2.6793473 -4.4549026]]
Iteration 200 of 1000: loss=0.561 " + "l1=0.545" + "l2=0.0159 f=-0.44 shape=(1, 9000, 1)
logits [[ 2.706883  -2.7477713  2.6640096 -4.382388 ]]
Iteration 300 of 1000: loss=0.553 " + "l1=0.536" + "l2=0.0174 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.6491833 -2.7083476  2.6477926 -4.3211617]]
Iteration 400 of 1000: loss=0.547 " + "l1=0.531" + "l2=0.0167 f=-0.427 shape=(1, 9000, 1)
logits [[ 2.628915  -2.6770494  2.628296  -4.2895236]]
Iteration 500 of 1000: loss=0.543 " + "l1=0.525" + "l2=0.0175 f=-0.421 shape=(1, 9000, 1)
logits [[ 2.604438  -2.643374   2.6069114 -4.253237 ]]
Iteration 600 of 1000: loss=0.538 " + "l1=0.52" + "l2=0.0183 f=-0.417 shape=(1, 9000, 1)
logits [[ 2.5850556 -2.6137428  2.586468  -4.226004 ]]
Iteration 700 of 1000: loss=0.534 " + "l1=0.515" + "l2=0.019 f=-0.413 shape=(1, 9000, 1)
logits [[ 2.566811  -2.5863996  2.566216  -4.198017 ]]
Iteration 800 of 1000: loss=0.531 " + "l1=0.511" + "l2=0.0198 f=-0.409 shape=(1, 9000, 1)
logits [[ 2.5479627 -2.563974   2.547616  -4.1691656]]
Iteration 900 of 1000: loss=0.528 " + "l1=0.507" + "l2=0.0205 f=-0.406 shape=(1, 9000, 1)
logits [[ 2.5283036 -2.5429153  2.5311143 -4.1402607]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.93 " + "l1=5.93" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.0191653 -2.907858   2.730435  -4.69492  ]]
Iteration 100 of 1000: loss=4.67 " + "l1=4.1" + "l2=0.571 f=-0.315 shape=(1, 9000, 1)
logits [[ 2.1255105 -1.971571   2.131973  -3.5466151]]
Iteration 200 of 1000: loss=4.24 " + "l1=3.46" + "l2=0.787 f=-0.254 shape=(1, 9000, 1)
logits [[ 1.847014  -1.6035116  1.8521358 -3.113364 ]]
Iteration 300 of 1000: loss=4.04 " + "l1=3.22" + "l2=0.816 f=-0.232 shape=(1, 9000, 1)
logits [[ 1.7149571 -1.4624959  1.7616832 -2.9438539]]
Iteration 400 of 1000: loss=3.9 " + "l1=3.03" + "l2=0.869 f=-0.213 shape=(1, 9000, 1)
logits [[ 1.5515594 -1.3631867  1.6717542 -2.7119157]]
Iteration 500 of 1000: loss=3.69 " + "l1=2.69" + "l2=1 f=-0.197 shape=(1, 9000, 1)
logits [[ 1.2993718 -1.2166082  1.4728321 -2.3445013]]
Iteration 600 of 1000: loss=3.49 " + "l1=2.45" + "l2=1.05 f=-0.187 shape=(1, 9000, 1)
logits [[ 1.1221566 -1.1161876  1.3307134 -2.0845022]]
Iteration 700 of 1000: loss=3.27 " + "l1=2.09" + "l2=1.18 f=-0.18 shape=(1, 9000, 1)
logits [[ 0.896062   -0.93280166  1.1540585  -1.8358504 ]]
Iteration 800 of 1000: loss=3.09 " + "l1=1.83" + "l2=1.26 f=-0.173 shape=(1, 9000, 1)
logits [[ 0.73183906 -0.80840683  1.0258299  -1.642255  ]]
Iteration 900 of 1000: loss=2.92 " + "l1=1.66" + "l2=1.27 f=-0.162 shape=(1, 9000, 1)
logits [[ 0.6298434  -0.71812165  0.9376609  -1.499362  ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=59.3 " + "l1=59.3" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.0191653 -2.907858   2.730435  -4.69492  ]]
Iteration 100 of 1000: loss=18.3 " + "l1=6.8" + "l2=11.5 f=-0.234 shape=(1, 9000, 1)
logits [[-0.29668385 -0.14858977  0.53097767 -1.02215   ]]
Iteration 200 of 1000: loss=9.3 " + "l1=0" + "l2=9.3 f=-0.303 shape=(1, 9000, 1)
logits [[-1.1760001   0.15774293  0.15751955 -0.3523252 ]]
Iteration 300 of 1000: loss=7.8 " + "l1=0" + "l2=7.8 f=-0.317 shape=(1, 9000, 1)
logits [[-1.2952412   0.18884654  0.16008978 -0.32232997]]
Iteration 400 of 1000: loss=6.85 " + "l1=0.064" + "l2=6.78 f=-0.32 shape=(1, 9000, 1)
logits [[-1.3237026   0.17765056  0.18405306 -0.31715593]]
Iteration 500 of 1000: loss=6.27 " + "l1=0" + "l2=6.27 f=-0.329 shape=(1, 9000, 1)
logits [[-1.3640795   0.1803229   0.15653905 -0.28695643]]
Iteration 600 of 1000: loss=5.79 " + "l1=0.0311" + "l2=5.76 f=-0.332 shape=(1, 9000, 1)
logits [[-1.3371494   0.17156647  0.17467202 -0.3357854 ]]
Iteration 700 of 1000: loss=5.43 " + "l1=0.0258" + "l2=5.41 f=-0.333 shape=(1, 9000, 1)
logits [[-1.3281708   0.16529886  0.1678805  -0.33542514]]
Iteration 800 of 1000: loss=5.21 " + "l1=0.0956" + "l2=5.11 f=-0.332 shape=(1, 9000, 1)
logits [[-1.3241549   0.15422757  0.16378714 -0.3199659 ]]
Iteration 900 of 1000: loss=4.89 " + "l1=0" + "l2=4.89 f=-0.329 shape=(1, 9000, 1)
logits [[-1.3381222   0.1596269   0.14232841 -0.28054455]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=32.6 " + "l1=32.6" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.0191653 -2.907858   2.730435  -4.69492  ]]
Iteration 100 of 1000: loss=14.7 " + "l1=9.05" + "l2=5.63 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.5019889  -0.59943664  1.0459486  -1.8728781 ]]
Iteration 200 of 1000: loss=8.18 " + "l1=0.16" + "l2=8.02 f=-0.309 shape=(1, 9000, 1)
logits [[-1.0678536   0.24127154  0.27035508 -0.67995566]]
Iteration 300 of 1000: loss=6.6 " + "l1=0.108" + "l2=6.49 f=-0.334 shape=(1, 9000, 1)
logits [[-1.2087238   0.28398964  0.30363822 -0.71641797]]
Iteration 400 of 1000: loss=5.85 " + "l1=0.0496" + "l2=5.8 f=-0.342 shape=(1, 9000, 1)
logits [[-1.2523216   0.28904676  0.29807025 -0.7034262 ]]
Iteration 500 of 1000: loss=5.33 " + "l1=0" + "l2=5.33 f=-0.356 shape=(1, 9000, 1)
logits [[-1.296839    0.2859939   0.2737177  -0.68778116]]
Iteration 600 of 1000: loss=4.98 " + "l1=0" + "l2=4.98 f=-0.359 shape=(1, 9000, 1)
logits [[-1.3222979   0.28013223  0.25786152 -0.651417  ]]
Iteration 700 of 1000: loss=4.67 " + "l1=0" + "l2=4.67 f=-0.363 shape=(1, 9000, 1)
logits [[-1.3336502   0.25508815  0.23431383 -0.6080787 ]]
Iteration 800 of 1000: loss=4.47 " + "l1=0" + "l2=4.47 f=-0.358 shape=(1, 9000, 1)
logits [[-1.3380682   0.24240302  0.2262119  -0.5627955 ]]
Iteration 900 of 1000: loss=4.29 " + "l1=0" + "l2=4.29 f=-0.352 shape=(1, 9000, 1)
logits [[-1.3135691   0.22827761  0.21944794 -0.5403133 ]]
--- 261.5816795825958 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00289 " + "l1=0.00289" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.0191653 -2.907858   2.730435  -4.69492  ]]
Iteration 100 of 1000: loss=0.00278 " + "l1=0.00265" + "l2=0.000123 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.995906  -2.904187   2.7304168 -4.673801 ]]
Iteration 200 of 1000: loss=0.00274 " + "l1=0.00264" + "l2=9.05e-05 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.9950125 -2.9043238  2.7305148 -4.673516 ]]
Iteration 300 of 1000: loss=0.00274 " + "l1=0.00261" + "l2=0.000126 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.991509  -2.903801   2.7306077 -4.670608 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0289 " + "l1=0.0289" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.0191653 -2.907858   2.730435  -4.69492  ]]
Iteration 100 of 1000: loss=0.0179 " + "l1=0.0116" + "l2=0.00627 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.8545766 -2.879912   2.7382658 -4.5479836]]
Iteration 200 of 1000: loss=0.0134 " + "l1=0.00507" + "l2=0.0083 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.79538   -2.8706932  2.7446916 -4.498882 ]]
Iteration 300 of 1000: loss=0.00941 " + "l1=0.000177" + "l2=0.00923 f=-0.456 shape=(1, 9000, 1)
logits [[ 2.7514508 -2.8643684  2.7496774 -4.4610453]]
Iteration 400 of 1000: loss=0.00726 " + "l1=0.000102" + "l2=0.00716 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.7527983 -2.8623917  2.7517784 -4.4630337]]
Iteration 500 of 1000: loss=0.00632 " + "l1=0" + "l2=0.00632 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.7517803 -2.8596656  2.753288  -4.4635143]]
Iteration 600 of 1000: loss=0.0059 " + "l1=0" + "l2=0.0059 f=-0.454 shape=(1, 9000, 1)
logits [[ 2.7535822 -2.856502   2.754049  -4.4662347]]
Iteration 700 of 1000: loss=0.00539 " + "l1=5.31e-05" + "l2=0.00534 f=-0.453 shape=(1, 9000, 1)
logits [[ 2.7551672 -2.8537853  2.7546358 -4.468744 ]]
Iteration 800 of 1000: loss=0.00513 " + "l1=0" + "l2=0.00513 f=-0.453 shape=(1, 9000, 1)
logits [[ 2.7535498 -2.850837   2.7551131 -4.468888 ]]
Iteration 900 of 1000: loss=0.00468 " + "l1=0" + "l2=0.00468 f=-0.453 shape=(1, 9000, 1)
logits [[ 2.755342  -2.848856   2.7554548 -4.471955 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0159 " + "l1=0.0159" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.0191653 -2.907858   2.730435  -4.69492  ]]
Iteration 100 of 1000: loss=0.0125 " + "l1=0.0105" + "l2=0.00205 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.9235687 -2.891719   2.7334764 -4.608614 ]]
Iteration 200 of 1000: loss=0.0112 " + "l1=0.00879" + "l2=0.00246 f=-0.46 shape=(1, 9000, 1)
logits [[ 2.8955414 -2.8878927  2.735777  -4.5846963]]
Iteration 300 of 1000: loss=0.0101 " + "l1=0.00719" + "l2=0.00294 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.8691757 -2.8831434  2.738425  -4.5617695]]
Iteration 400 of 1000: loss=0.00914 " + "l1=0.00559" + "l2=0.00355 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.8425999 -2.8771653  2.7409787 -4.5386024]]
Iteration 500 of 1000: loss=0.00817 " + "l1=0.00396" + "l2=0.00421 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.816048  -2.8711023  2.7440739 -4.5156965]]
Iteration 600 of 1000: loss=0.00723 " + "l1=0.0024" + "l2=0.00482 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.7912872 -2.865136   2.7475712 -4.495447 ]]
Iteration 700 of 1000: loss=0.00648 " + "l1=0.00112" + "l2=0.00536 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.7705173 -2.859595   2.7501533 -4.4792223]]
Iteration 800 of 1000: loss=0.00573 " + "l1=0.000109" + "l2=0.00562 f=-0.454 shape=(1, 9000, 1)
logits [[ 2.7545044 -2.8545442  2.752526  -4.466937 ]]
Iteration 900 of 1000: loss=0.00524 " + "l1=5.74e-05" + "l2=0.00518 f=-0.453 shape=(1, 9000, 1)
logits [[ 2.7544105 -2.8511562  2.7533665 -4.4683466]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00938 " + "l1=0.00938" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.0191653 -2.907858   2.730435  -4.69492  ]]
Iteration 100 of 1000: loss=0.00818 " + "l1=0.00741" + "l2=0.000769 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.959612  -2.8977935  2.7315168 -4.6407166]]
Iteration 200 of 1000: loss=0.00777 " + "l1=0.00689" + "l2=0.000885 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.9446428 -2.8956907  2.7326899 -4.6281905]]
Iteration 300 of 1000: loss=0.0074 " + "l1=0.00633" + "l2=0.00107 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.9285924 -2.8932498  2.7339282 -4.6143107]]
Iteration 400 of 1000: loss=0.00709 " + "l1=0.00577" + "l2=0.00132 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.9127078 -2.890112   2.7351675 -4.6005015]]
Iteration 500 of 1000: loss=0.0068 " + "l1=0.00529" + "l2=0.0015 f=-0.46 shape=(1, 9000, 1)
logits [[ 2.8993514 -2.8867042  2.7364845 -4.5892315]]
Iteration 600 of 1000: loss=0.00663 " + "l1=0.00484" + "l2=0.00179 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.8865874 -2.8830204  2.7377958 -4.5785584]]
Iteration 700 of 1000: loss=0.00638 " + "l1=0.00439" + "l2=0.00199 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.874248  -2.879128   2.7391171 -4.568454 ]]
Iteration 800 of 1000: loss=0.00616 " + "l1=0.00396" + "l2=0.0022 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.8622544 -2.8754632  2.740409  -4.559147 ]]
Iteration 900 of 1000: loss=0.00591 " + "l1=0.00354" + "l2=0.00237 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.8507655 -2.871951   2.741777  -4.550515 ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0126 " + "l1=0.0126" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.0191653 -2.907858   2.730435  -4.69492  ]]
Iteration 100 of 1000: loss=0.0105 " + "l1=0.00917" + "l2=0.00132 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.9417322 -2.8946273  2.732223  -4.624811 ]]
Iteration 200 of 1000: loss=0.00969 " + "l1=0.00809" + "l2=0.0016 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.9190378 -2.8915796  2.7340868 -4.6053133]]
Iteration 300 of 1000: loss=0.009 " + "l1=0.00708" + "l2=0.00192 f=-0.46 shape=(1, 9000, 1)
logits [[ 2.897687  -2.887872   2.7358458 -4.5869994]]
Iteration 400 of 1000: loss=0.00838 " + "l1=0.00611" + "l2=0.00226 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.8778005 -2.883695   2.738052  -4.5697603]]
Iteration 500 of 1000: loss=0.00783 " + "l1=0.00519" + "l2=0.00264 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.8584964 -2.8783782  2.7398353 -4.5531135]]
Iteration 600 of 1000: loss=0.00731 " + "l1=0.00425" + "l2=0.00305 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.8390646 -2.873617   2.7418528 -4.5366516]]
Iteration 700 of 1000: loss=0.00687 " + "l1=0.00337" + "l2=0.0035 f=-0.456 shape=(1, 9000, 1)
logits [[ 2.8211427 -2.868876   2.744091  -4.5219336]]
Iteration 800 of 1000: loss=0.00637 " + "l1=0.00252" + "l2=0.00385 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.8042855 -2.8641357  2.746695  -4.5080395]]
Iteration 900 of 1000: loss=0.00593 " + "l1=0.00178" + "l2=0.00415 f=-0.454 shape=(1, 9000, 1)
logits [[ 2.789255  -2.8595939  2.7486649 -4.49625  ]]
--- 247.20450592041016 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0771 " + "l1=0.0771" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.0191653 -2.907858   2.730435  -4.69492  ]]
Iteration 100 of 1000: loss=0.0765 " + "l1=0.0761" + "l2=0.000425 f=-0.46 shape=(1, 9000, 1)
logits [[ 2.9737263 -2.8955123  2.7196553 -4.6363864]]
Iteration 200 of 1000: loss=0.0763 " + "l1=0.0759" + "l2=0.000437 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.965012  -2.8934512  2.7180073 -4.6254015]]
Iteration 300 of 1000: loss=0.0762 " + "l1=0.0757" + "l2=0.000512 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.9543045 -2.890657   2.7158725 -4.6115174]]
Iteration 400 of 1000: loss=0.0761 " + "l1=0.0754" + "l2=0.000656 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.9437802 -2.8877244  2.7136056 -4.5975547]]
Iteration 500 of 1000: loss=0.0759 " + "l1=0.0752" + "l2=0.000737 f=-0.456 shape=(1, 9000, 1)
logits [[ 2.9334888 -2.8846452  2.7114553 -4.5838156]]
Iteration 600 of 1000: loss=0.0758 " + "l1=0.0749" + "l2=0.00089 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.9237845 -2.8816056  2.7093353 -4.5708694]]
Iteration 700 of 1000: loss=0.0758 " + "l1=0.0747" + "l2=0.00108 f=-0.454 shape=(1, 9000, 1)
logits [[ 2.9149034 -2.878508   2.7072954 -4.5592203]]
Iteration 800 of 1000: loss=0.0757 " + "l1=0.0745" + "l2=0.00112 f=-0.453 shape=(1, 9000, 1)
logits [[ 2.9063265 -2.8754115  2.7052782 -4.547783 ]]
Iteration 900 of 1000: loss=0.0757 " + "l1=0.0744" + "l2=0.00134 f=-0.452 shape=(1, 9000, 1)
logits [[ 2.8982847 -2.8723896  2.7034087 -4.5369015]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.771 " + "l1=0.771" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.0191653 -2.907858   2.730435  -4.69492  ]]
Iteration 100 of 1000: loss=0.718 " + "l1=0.688" + "l2=0.0296 f=-0.428 shape=(1, 9000, 1)
logits [[ 2.658875  -2.8084762  2.6592677 -4.2207184]]
Iteration 200 of 1000: loss=0.701 " + "l1=0.674" + "l2=0.027 f=-0.415 shape=(1, 9000, 1)
logits [[ 2.624508  -2.7915924  2.624003  -4.115011 ]]
Iteration 300 of 1000: loss=0.688 " + "l1=0.659" + "l2=0.0286 f=-0.401 shape=(1, 9000, 1)
logits [[ 2.587431  -2.776795   2.5897179 -4.004778 ]]
Iteration 400 of 1000: loss=0.677 " + "l1=0.645" + "l2=0.0322 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.547776  -2.7580254  2.5546517 -3.8911805]]
Iteration 500 of 1000: loss=0.666 " + "l1=0.629" + "l2=0.0369 f=-0.374 shape=(1, 9000, 1)
logits [[ 2.4889617 -2.7306247  2.5168648 -3.7693036]]
Iteration 600 of 1000: loss=0.656 " + "l1=0.615" + "l2=0.0409 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.434014  -2.7042277  2.484814  -3.6661837]]
Iteration 700 of 1000: loss=0.647 " + "l1=0.602" + "l2=0.0451 f=-0.353 shape=(1, 9000, 1)
logits [[ 2.3825295 -2.6814828  2.4516835 -3.5659554]]
Iteration 800 of 1000: loss=0.638 " + "l1=0.589" + "l2=0.0492 f=-0.345 shape=(1, 9000, 1)
logits [[ 2.3350487 -2.6616209  2.4166627 -3.4714837]]
Iteration 900 of 1000: loss=0.629 " + "l1=0.577" + "l2=0.0523 f=-0.339 shape=(1, 9000, 1)
logits [[ 2.293422  -2.6427493  2.381528  -3.3876023]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.71 " + "l1=7.71" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.0191653 -2.907858   2.730435  -4.69492  ]]
Iteration 100 of 1000: loss=5.03 " + "l1=3.81" + "l2=1.22 f=-0.224 shape=(1, 9000, 1)
logits [[ 1.3058197 -2.313643   1.9602774 -1.8495189]]
Iteration 200 of 1000: loss=4.03 " + "l1=2.32" + "l2=1.7 f=-0.134 shape=(1, 9000, 1)
logits [[ 0.7266258 -2.10674    1.5846623 -0.7400145]]
Iteration 300 of 1000: loss=3.02 " + "l1=0.855" + "l2=2.17 f=-0.0533 shape=(1, 9000, 1)
logits [[ 0.26846513 -1.858791    1.1161033   0.26092142]]
Iteration 400 of 1000: loss=2.06 " + "l1=0.0151" + "l2=2.04 f=-0.0195 shape=(1, 9000, 1)
logits [[ 0.09355818 -1.7324115   0.78794014  0.77287835]]
Iteration 500 of 1000: loss=1.65 " + "l1=0" + "l2=1.65 f=-0.0234 shape=(1, 9000, 1)
logits [[ 0.09301046 -1.7055686   0.7532162   0.7657519 ]]
Iteration 600 of 1000: loss=1.4 " + "l1=0" + "l2=1.4 f=-0.0339 shape=(1, 9000, 1)
logits [[ 0.08400038 -1.709299    0.7406374   0.74903786]]
Iteration 700 of 1000: loss=1.22 " + "l1=0.000534" + "l2=1.22 f=-0.0488 shape=(1, 9000, 1)
logits [[ 0.078767   -1.7249573   0.72584975  0.7253156 ]]
Iteration 800 of 1000: loss=1.09 " + "l1=0.00485" + "l2=1.08 f=-0.0589 shape=(1, 9000, 1)
logits [[ 0.08141089 -1.7441663   0.71603316  0.71118623]]
Iteration 900 of 1000: loss=0.973 " + "l1=0" + "l2=0.973 f=-0.0639 shape=(1, 9000, 1)
logits [[ 0.07680658 -1.7675135   0.7146437   0.72034484]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.24 " + "l1=4.24" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.0191653 -2.907858   2.730435  -4.69492  ]]
Iteration 100 of 1000: loss=3.26 " + "l1=2.84" + "l2=0.424 f=-0.306 shape=(1, 9000, 1)
logits [[ 1.9636592 -2.5439227  2.258613  -2.903977 ]]
Iteration 200 of 1000: loss=2.94 " + "l1=2.41" + "l2=0.53 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.6634872 -2.447707   2.0669537 -2.3210151]]
Iteration 300 of 1000: loss=2.66 " + "l1=2.01" + "l2=0.652 f=-0.205 shape=(1, 9000, 1)
logits [[ 1.4006395 -2.3419344  1.8906065 -1.7675945]]
Iteration 400 of 1000: loss=2.34 " + "l1=1.58" + "l2=0.764 f=-0.132 shape=(1, 9000, 1)
logits [[ 1.1448461 -2.1776178  1.6849096 -1.1796699]]
Iteration 500 of 1000: loss=1.92 " + "l1=0.999" + "l2=0.923 f=-0.086 shape=(1, 9000, 1)
logits [[ 0.78540325 -2.018393    1.3525324  -0.46364614]]
Iteration 600 of 1000: loss=1.46 " + "l1=0.294" + "l2=1.17 f=-0.0323 shape=(1, 9000, 1)
logits [[ 0.41930905 -1.8806177   0.9330289   0.39898565]]
Iteration 700 of 1000: loss=1.08 " + "l1=0.000482" + "l2=1.08 f=-0.034 shape=(1, 9000, 1)
logits [[ 0.17705487 -1.7894553   0.73867375  0.7377975 ]]
Iteration 800 of 1000: loss=0.83 " + "l1=0" + "l2=0.83 f=-0.0484 shape=(1, 9000, 1)
logits [[ 0.14869428 -1.8180946   0.7367101   0.7390705 ]]
Iteration 900 of 1000: loss=0.683 " + "l1=0" + "l2=0.683 f=-0.0503 shape=(1, 9000, 1)
logits [[ 0.13198006 -1.850653    0.7583541   0.7591524 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.51 " + "l1=2.51" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.0191653 -2.907858   2.730435  -4.69492  ]]
Iteration 100 of 1000: loss=2.11 " + "l1=1.93" + "l2=0.175 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.3288445 -2.6812894  2.4351444 -3.5135765]]
Iteration 200 of 1000: loss=1.98 " + "l1=1.77" + "l2=0.21 f=-0.319 shape=(1, 9000, 1)
logits [[ 2.1454635 -2.6142457  2.3162677 -3.1252823]]
Iteration 300 of 1000: loss=1.87 " + "l1=1.62" + "l2=0.244 f=-0.29 shape=(1, 9000, 1)
logits [[ 1.9627637 -2.5405247  2.2083104 -2.7892685]]
Iteration 400 of 1000: loss=1.77 " + "l1=1.49" + "l2=0.273 f=-0.266 shape=(1, 9000, 1)
logits [[ 1.7978829 -2.4886336  2.1121001 -2.4872823]]
Iteration 500 of 1000: loss=1.66 " + "l1=1.34" + "l2=0.315 f=-0.236 shape=(1, 9000, 1)
logits [[ 1.5982916 -2.3864558  1.9871919 -2.14453  ]]
Iteration 600 of 1000: loss=1.55 " + "l1=1.19" + "l2=0.356 f=-0.203 shape=(1, 9000, 1)
logits [[ 1.4215657 -2.302285   1.8699803 -1.801295 ]]
Iteration 700 of 1000: loss=1.45 " + "l1=1.05" + "l2=0.401 f=-0.182 shape=(1, 9000, 1)
logits [[ 1.2368308 -2.255524   1.7568276 -1.4648328]]
Iteration 800 of 1000: loss=1.34 " + "l1=0.887" + "l2=0.45 f=-0.161 shape=(1, 9000, 1)
logits [[ 1.0599602 -2.2064798  1.6152389 -1.1137844]]
Iteration 900 of 1000: loss=1.21 " + "l1=0.72" + "l2=0.489 f=-0.141 shape=(1, 9000, 1)
logits [[ 0.88247657 -2.1433642   1.4566133  -0.7579856 ]]
--- 280.254998922348 seconds ---
Adv result:3
Loading record A06690
(1, 15386)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0678 " + "l1=0.0678" + "l2=0 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.5287466 -2.2528777  3.270315  -8.029677 ]]
Iteration 100 of 1000: loss=0.0676 " + "l1=0.0673" + "l2=0.000225 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.4997954 -2.2351494  3.2574506 -8.004554 ]]
Iteration 200 of 1000: loss=0.0675 " + "l1=0.0673" + "l2=0.000192 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.497592  -2.2335687  3.2562332 -8.002581 ]]
Iteration 300 of 1000: loss=0.0675 " + "l1=0.0672" + "l2=0.000236 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.493186  -2.2307527  3.2541835 -7.9987674]]
Iteration 400 of 1000: loss=0.0675 " + "l1=0.0672" + "l2=0.000327 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.48851   -2.2278965  3.2521358 -7.9947925]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.678 " + "l1=0.678" + "l2=0 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.5287466 -2.2528777  3.270315  -8.029677 ]]
Iteration 100 of 1000: loss=0.655 " + "l1=0.64" + "l2=0.0144 f=-0.622 shape=(1, 9000, 1)
logits [[ 4.2797685 -2.1237082  3.170129  -7.813693 ]]
Iteration 200 of 1000: loss=0.645 " + "l1=0.625" + "l2=0.0201 f=-0.623 shape=(1, 9000, 1)
logits [[ 4.174519  -2.07732    3.1280944 -7.7156253]]
Iteration 300 of 1000: loss=0.637 " + "l1=0.613" + "l2=0.0243 f=-0.623 shape=(1, 9000, 1)
logits [[ 4.087808  -2.0383005  3.0918398 -7.634373 ]]
Iteration 400 of 1000: loss=0.628 " + "l1=0.6" + "l2=0.0286 f=-0.627 shape=(1, 9000, 1)
logits [[ 3.9985466 -2.0001566  3.05103   -7.556887 ]]
Iteration 500 of 1000: loss=0.618 " + "l1=0.584" + "l2=0.0335 f=-0.634 shape=(1, 9000, 1)
logits [[ 3.880127  -1.9604098  3.0062637 -7.461275 ]]
Iteration 600 of 1000: loss=0.605 " + "l1=0.566" + "l2=0.0389 f=-0.639 shape=(1, 9000, 1)
logits [[ 3.7487636 -1.9145334  2.9607224 -7.3509517]]
Iteration 700 of 1000: loss=0.593 " + "l1=0.55" + "l2=0.0434 f=-0.642 shape=(1, 9000, 1)
logits [[ 3.6185026 -1.8770114  2.9266648 -7.2342334]]
Iteration 800 of 1000: loss=0.583 " + "l1=0.536" + "l2=0.0476 f=-0.643 shape=(1, 9000, 1)
logits [[ 3.514352  -1.8437982  2.893869  -7.1346393]]
Iteration 900 of 1000: loss=0.577 " + "l1=0.526" + "l2=0.0501 f=-0.643 shape=(1, 9000, 1)
logits [[ 3.4415643 -1.8230318  2.8731592 -7.063977 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.78 " + "l1=6.78" + "l2=0 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.5287466 -2.2528777  3.270315  -8.029677 ]]
Iteration 100 of 1000: loss=4.17 " + "l1=2.98" + "l2=1.19 f=-0.622 shape=(1, 9000, 1)
logits [[ 2.0799992 -0.9018319  2.0780342 -5.745112 ]]
Iteration 200 of 1000: loss=3.46 " + "l1=2.14" + "l2=1.32 f=-0.612 shape=(1, 9000, 1)
logits [[ 1.6772846  -0.45913664  1.675715   -5.3410616 ]]
Iteration 300 of 1000: loss=3.08 " + "l1=1.73" + "l2=1.35 f=-0.599 shape=(1, 9000, 1)
logits [[ 1.4551598  -0.26798943  1.4635566  -5.048053  ]]
Iteration 400 of 1000: loss=2.79 " + "l1=1.4" + "l2=1.38 f=-0.586 shape=(1, 9000, 1)
logits [[ 1.2678595  -0.12315852  1.2803056  -4.768418  ]]
Iteration 500 of 1000: loss=2.61 " + "l1=1.23" + "l2=1.38 f=-0.564 shape=(1, 9000, 1)
logits [[ 1.1851038 -0.0490545  1.1817288 -4.575623 ]]
Iteration 600 of 1000: loss=2.48 " + "l1=1.08" + "l2=1.39 f=-0.538 shape=(1, 9000, 1)
logits [[ 1.0810122  0.0287391  1.1110393 -4.3739085]]
Iteration 700 of 1000: loss=2.35 " + "l1=0.937" + "l2=1.41 f=-0.515 shape=(1, 9000, 1)
logits [[ 1.0067165   0.11212058  1.0496187  -4.22729   ]]
Iteration 800 of 1000: loss=2.24 " + "l1=0.826" + "l2=1.42 f=-0.493 shape=(1, 9000, 1)
logits [[ 0.98604894  0.16868608  0.99439025 -4.1212115 ]]
Iteration 900 of 1000: loss=2.18 " + "l1=0.798" + "l2=1.38 f=-0.488 shape=(1, 9000, 1)
logits [[ 0.9658674   0.17748792  0.9758321  -4.0705795 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=67.8 " + "l1=67.8" + "l2=0 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.5287466 -2.2528777  3.270315  -8.029677 ]]
Iteration 100 of 1000: loss=9.41 " + "l1=0.131" + "l2=9.28 f=-0.577 shape=(1, 9000, 1)
logits [[ 0.15995325  0.6152337   0.6283328  -3.7110074 ]]
Iteration 200 of 1000: loss=6.3 " + "l1=0.0782" + "l2=6.22 f=-0.616 shape=(1, 9000, 1)
logits [[ 0.14689605  0.6280346   0.6358538  -3.8740122 ]]
Iteration 300 of 1000: loss=5.4 " + "l1=0.064" + "l2=5.33 f=-0.6 shape=(1, 9000, 1)
logits [[ 0.18612675  0.59785205  0.60425615 -3.7885113 ]]
Iteration 400 of 1000: loss=4.87 " + "l1=0.0457" + "l2=4.82 f=-0.591 shape=(1, 9000, 1)
logits [[ 0.1852673  0.5826536  0.5872208 -3.7185833]]
Iteration 500 of 1000: loss=4.51 " + "l1=0.0197" + "l2=4.49 f=-0.586 shape=(1, 9000, 1)
logits [[ 0.19562888  0.5708478   0.5728201  -3.6837654 ]]
Iteration 600 of 1000: loss=4.3 " + "l1=0" + "l2=4.3 f=-0.581 shape=(1, 9000, 1)
logits [[ 0.18451825  0.5761775   0.5597058  -3.6452436 ]]
Iteration 700 of 1000: loss=4.09 " + "l1=0" + "l2=4.09 f=-0.574 shape=(1, 9000, 1)
logits [[ 0.20674555  0.56430346  0.5604627  -3.6283731 ]]
Iteration 800 of 1000: loss=3.93 " + "l1=0" + "l2=3.93 f=-0.569 shape=(1, 9000, 1)
logits [[ 0.1994237   0.56216145  0.55755854 -3.5971372 ]]
Iteration 900 of 1000: loss=3.84 " + "l1=0" + "l2=3.84 f=-0.564 shape=(1, 9000, 1)
logits [[ 0.17142992  0.5675003   0.5494275  -3.5454133 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=37.3 " + "l1=37.3" + "l2=0 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.5287466 -2.2528777  3.270315  -8.029677 ]]
Iteration 100 of 1000: loss=8.63 " + "l1=1.52" + "l2=7.11 f=-0.582 shape=(1, 9000, 1)
logits [[ 0.49969038  0.47033072  0.74701756 -4.045557  ]]
Iteration 200 of 1000: loss=5.42 " + "l1=0" + "l2=5.42 f=-0.604 shape=(1, 9000, 1)
logits [[ 0.18447874  0.6226688   0.60812503 -3.8295557 ]]
Iteration 300 of 1000: loss=4.62 " + "l1=0.0574" + "l2=4.57 f=-0.592 shape=(1, 9000, 1)
logits [[ 0.22209243  0.5839549   0.59439135 -3.7699227 ]]
Iteration 400 of 1000: loss=4.28 " + "l1=0" + "l2=4.28 f=-0.582 shape=(1, 9000, 1)
logits [[ 0.1958031   0.57918495  0.55241734 -3.6559615 ]]
Iteration 500 of 1000: loss=3.99 " + "l1=0.0598" + "l2=3.93 f=-0.574 shape=(1, 9000, 1)
logits [[ 0.22295053  0.5511761   0.56205285 -3.6328826 ]]
Iteration 600 of 1000: loss=3.77 " + "l1=0" + "l2=3.77 f=-0.567 shape=(1, 9000, 1)
logits [[ 0.19851978  0.5599249   0.5524306  -3.577921  ]]
Iteration 700 of 1000: loss=3.61 " + "l1=0" + "l2=3.61 f=-0.559 shape=(1, 9000, 1)
logits [[ 0.19312647  0.55907434  0.5507208  -3.5386183 ]]
Iteration 800 of 1000: loss=3.48 " + "l1=0" + "l2=3.48 f=-0.555 shape=(1, 9000, 1)
logits [[ 0.19354868  0.56021273  0.55564773 -3.53102   ]]
Iteration 900 of 1000: loss=3.36 " + "l1=0" + "l2=3.36 f=-0.55 shape=(1, 9000, 1)
logits [[ 0.20884882  0.57335603  0.5671732  -3.550946  ]]
--- 258.2956283092499 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0126 " + "l1=0.0126" + "l2=0 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.5287466 -2.2528777  3.270315  -8.029677 ]]
Iteration 100 of 1000: loss=0.0124 " + "l1=0.0122" + "l2=0.000192 f=-0.622 shape=(1, 9000, 1)
logits [[ 4.50459   -2.2588413  3.2814405 -8.013844 ]]
Iteration 200 of 1000: loss=0.0124 " + "l1=0.0122" + "l2=0.000143 f=-0.622 shape=(1, 9000, 1)
logits [[ 4.5046725 -2.2591527  3.2819076 -8.01448  ]]
Iteration 300 of 1000: loss=0.0123 " + "l1=0.0122" + "l2=0.000161 f=-0.622 shape=(1, 9000, 1)
logits [[ 4.50184   -2.260114   3.2834547 -8.013243 ]]
Iteration 400 of 1000: loss=0.0123 " + "l1=0.0121" + "l2=0.000191 f=-0.622 shape=(1, 9000, 1)
logits [[ 4.498333  -2.2612402  3.2851167 -8.011547 ]]
Iteration 500 of 1000: loss=0.0123 " + "l1=0.0121" + "l2=0.000262 f=-0.623 shape=(1, 9000, 1)
logits [[ 4.4945965 -2.26246    3.2868643 -8.0096655]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.126 " + "l1=0.126" + "l2=0 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.5287466 -2.2528777  3.270315  -8.029677 ]]
Iteration 100 of 1000: loss=0.109 " + "l1=0.099" + "l2=0.0105 f=-0.626 shape=(1, 9000, 1)
logits [[ 4.342666  -2.2923672  3.352677  -7.905896 ]]
Iteration 200 of 1000: loss=0.103 " + "l1=0.088" + "l2=0.0147 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.2650223 -2.3102813  3.38535   -7.8525014]]
Iteration 300 of 1000: loss=0.0955 " + "l1=0.0775" + "l2=0.018 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.1886625 -2.3304713  3.4138527 -7.8042026]]
Iteration 400 of 1000: loss=0.0885 " + "l1=0.0686" + "l2=0.0199 f=-0.639 shape=(1, 9000, 1)
logits [[ 4.1280193 -2.3541973  3.4420993 -7.7726316]]
Iteration 500 of 1000: loss=0.0808 " + "l1=0.0576" + "l2=0.0233 f=-0.645 shape=(1, 9000, 1)
logits [[ 4.053346  -2.382492   3.477832  -7.7275157]]
Iteration 600 of 1000: loss=0.0729 " + "l1=0.0478" + "l2=0.0252 f=-0.649 shape=(1, 9000, 1)
logits [[ 3.982644  -2.4040978  3.5047987 -7.6810713]]
Iteration 700 of 1000: loss=0.0662 " + "l1=0.0398" + "l2=0.0264 f=-0.653 shape=(1, 9000, 1)
logits [[ 3.9194052 -2.4214337  3.5216403 -7.6321745]]
Iteration 800 of 1000: loss=0.0598 " + "l1=0.0314" + "l2=0.0284 f=-0.66 shape=(1, 9000, 1)
logits [[ 3.8519926 -2.4418378  3.538126  -7.587772 ]]
Iteration 900 of 1000: loss=0.0525 " + "l1=0.0209" + "l2=0.0316 f=-0.671 shape=(1, 9000, 1)
logits [[ 3.7628818 -2.4582279  3.554083  -7.5446835]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.26 " + "l1=1.26" + "l2=0 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.5287466 -2.2528777  3.270315  -8.029677 ]]
Iteration 100 of 1000: loss=0.184 " + "l1=0.00363" + "l2=0.181 f=-0.678 shape=(1, 9000, 1)
logits [[ 3.5840433 -2.4838498  3.5804148 -7.3917737]]
Iteration 200 of 1000: loss=0.136 " + "l1=0.00278" + "l2=0.133 f=-0.684 shape=(1, 9000, 1)
logits [[ 3.587467  -2.502004   3.5846846 -7.406601 ]]
Iteration 300 of 1000: loss=0.107 " + "l1=0" + "l2=0.107 f=-0.69 shape=(1, 9000, 1)
logits [[ 3.5814688 -2.5097873  3.5843356 -7.4169507]]
Iteration 400 of 1000: loss=0.0952 " + "l1=0" + "l2=0.0952 f=-0.698 shape=(1, 9000, 1)
logits [[ 3.551964  -2.5187223  3.5857635 -7.4102826]]
Iteration 500 of 1000: loss=0.0744 " + "l1=0" + "l2=0.0744 f=-0.7 shape=(1, 9000, 1)
logits [[ 3.5669656 -2.5073175  3.5706532 -7.4298697]]
Iteration 600 of 1000: loss=0.0643 " + "l1=0" + "l2=0.0643 f=-0.703 shape=(1, 9000, 1)
logits [[ 3.5520048 -2.5048623  3.561246  -7.4187756]]
Iteration 700 of 1000: loss=0.0554 " + "l1=0" + "l2=0.0554 f=-0.705 shape=(1, 9000, 1)
logits [[ 3.5436525 -2.5009503  3.551497  -7.4126143]]
Iteration 800 of 1000: loss=0.0503 " + "l1=0" + "l2=0.0503 f=-0.706 shape=(1, 9000, 1)
logits [[ 3.5281005 -2.4987183  3.5433161 -7.3971286]]
Iteration 900 of 1000: loss=0.0443 " + "l1=0" + "l2=0.0443 f=-0.706 shape=(1, 9000, 1)
logits [[ 3.5245218 -2.4942203  3.533993  -7.3870173]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.692 " + "l1=0.692" + "l2=0 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.5287466 -2.2528777  3.270315  -8.029677 ]]
Iteration 100 of 1000: loss=0.179 " + "l1=0" + "l2=0.179 f=-0.676 shape=(1, 9000, 1)
logits [[ 3.5752783 -2.4865584  3.5787902 -7.369983 ]]
Iteration 200 of 1000: loss=0.125 " + "l1=0.000443" + "l2=0.125 f=-0.684 shape=(1, 9000, 1)
logits [[ 3.5807102 -2.5000794  3.5799053 -7.396385 ]]
Iteration 300 of 1000: loss=0.0965 " + "l1=0" + "l2=0.0965 f=-0.691 shape=(1, 9000, 1)
logits [[ 3.5714335 -2.5046902  3.5742214 -7.406009 ]]
Iteration 400 of 1000: loss=0.0772 " + "l1=0" + "l2=0.0772 f=-0.698 shape=(1, 9000, 1)
logits [[ 3.5608323 -2.5063696  3.5662465 -7.412762 ]]
Iteration 500 of 1000: loss=0.0636 " + "l1=0" + "l2=0.0636 f=-0.702 shape=(1, 9000, 1)
logits [[ 3.5515838 -2.5046566  3.5566118 -7.410831 ]]
Iteration 600 of 1000: loss=0.0559 " + "l1=0.0026" + "l2=0.0533 f=-0.704 shape=(1, 9000, 1)
logits [[ 3.5480664 -2.4998555  3.543334  -7.4070153]]
Iteration 700 of 1000: loss=0.0472 " + "l1=0" + "l2=0.0472 f=-0.706 shape=(1, 9000, 1)
logits [[ 3.5302358 -2.4975362  3.5335824 -7.3911376]]
Iteration 800 of 1000: loss=0.043 " + "l1=0" + "l2=0.043 f=-0.706 shape=(1, 9000, 1)
logits [[ 3.5174124 -2.4936762  3.5254335 -7.3749037]]
Iteration 900 of 1000: loss=0.0405 " + "l1=0" + "l2=0.0405 f=-0.707 shape=(1, 9000, 1)
logits [[ 3.4957087 -2.4929087  3.5221446 -7.3545094]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.409 " + "l1=0.409" + "l2=0 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.5287466 -2.2528777  3.270315  -8.029677 ]]
Iteration 100 of 1000: loss=0.2 " + "l1=0.0636" + "l2=0.136 f=-0.65 shape=(1, 9000, 1)
logits [[ 3.752294  -2.4271765  3.5565176 -7.4808483]]
Iteration 200 of 1000: loss=0.127 " + "l1=0.00041" + "l2=0.127 f=-0.679 shape=(1, 9000, 1)
logits [[ 3.5824711 -2.4900746  3.58121   -7.391202 ]]
Iteration 300 of 1000: loss=0.0923 " + "l1=0.00111" + "l2=0.0912 f=-0.69 shape=(1, 9000, 1)
logits [[ 3.5777142 -2.5038548  3.5743008 -7.407825 ]]
Iteration 400 of 1000: loss=0.0715 " + "l1=3.79e-05" + "l2=0.0715 f=-0.698 shape=(1, 9000, 1)
logits [[ 3.5664792 -2.5088947  3.5663626 -7.4142227]]
Iteration 500 of 1000: loss=0.0609 " + "l1=0" + "l2=0.0609 f=-0.702 shape=(1, 9000, 1)
logits [[ 3.5449767 -2.5093322  3.5570035 -7.401482 ]]
Iteration 600 of 1000: loss=0.0517 " + "l1=0" + "l2=0.0517 f=-0.704 shape=(1, 9000, 1)
logits [[ 3.536788  -2.504792   3.5433958 -7.391098 ]]
Iteration 700 of 1000: loss=0.0461 " + "l1=0.00179" + "l2=0.0443 f=-0.704 shape=(1, 9000, 1)
logits [[ 3.53529   -2.497555   3.5297785 -7.3822837]]
Iteration 800 of 1000: loss=0.0404 " + "l1=0" + "l2=0.0404 f=-0.704 shape=(1, 9000, 1)
logits [[ 3.5181758 -2.4912107  3.5209932 -7.364253 ]]
Iteration 900 of 1000: loss=0.0376 " + "l1=0" + "l2=0.0376 f=-0.705 shape=(1, 9000, 1)
logits [[ 3.5046225 -2.4881995  3.5176463 -7.3525167]]
--- 262.6823809146881 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.126 " + "l1=0.126" + "l2=0 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.5287466 -2.2528777  3.270315  -8.029677 ]]
Iteration 100 of 1000: loss=0.125 " + "l1=0.125" + "l2=0.000444 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.483422  -2.2480428  3.2599528 -7.971253 ]]
Iteration 200 of 1000: loss=0.125 " + "l1=0.124" + "l2=0.000438 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.4771943 -2.2468987  3.2577868 -7.9635324]]
Iteration 300 of 1000: loss=0.125 " + "l1=0.124" + "l2=0.000545 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.468738  -2.2458122  3.2552378 -7.952971 ]]
Iteration 400 of 1000: loss=0.125 " + "l1=0.124" + "l2=0.000636 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.4599504 -2.2447698  3.2525759 -7.9422116]]
Iteration 500 of 1000: loss=0.125 " + "l1=0.124" + "l2=0.000735 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.4512734 -2.243749   3.249973  -7.931801 ]]
Iteration 600 of 1000: loss=0.124 " + "l1=0.124" + "l2=0.000848 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.442745  -2.2428653  3.2475684 -7.921932 ]]
Iteration 700 of 1000: loss=0.124 " + "l1=0.123" + "l2=0.00101 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.434458  -2.2418315  3.2452054 -7.912443 ]]
Iteration 800 of 1000: loss=0.124 " + "l1=0.123" + "l2=0.00111 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.4258866 -2.2407322  3.2427342 -7.9027643]]
Iteration 900 of 1000: loss=0.124 " + "l1=0.123" + "l2=0.00124 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.4173956 -2.2395942  3.2402992 -7.8933153]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.26 " + "l1=1.26" + "l2=0 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.5287466 -2.2528777  3.270315  -8.029677 ]]
Iteration 100 of 1000: loss=1.19 " + "l1=1.15" + "l2=0.0431 f=-0.609 shape=(1, 9000, 1)
logits [[ 4.044248  -2.1941168  3.147457  -7.43397  ]]
Iteration 200 of 1000: loss=1.16 " + "l1=1.1" + "l2=0.0645 f=-0.607 shape=(1, 9000, 1)
logits [[ 3.8120317 -2.1745288  3.088258  -7.1546173]]
Iteration 300 of 1000: loss=1.13 " + "l1=1.05" + "l2=0.0836 f=-0.615 shape=(1, 9000, 1)
logits [[ 3.5647795 -2.160813   3.027467  -6.893184 ]]
Iteration 400 of 1000: loss=1.1 " + "l1=0.997" + "l2=0.0999 f=-0.621 shape=(1, 9000, 1)
logits [[ 3.328277  -2.1433132  2.9735816 -6.6431136]]
Iteration 500 of 1000: loss=1.07 " + "l1=0.95" + "l2=0.115 f=-0.624 shape=(1, 9000, 1)
logits [[ 3.1043723 -2.1146488  2.9136138 -6.3979244]]
Iteration 600 of 1000: loss=1.04 " + "l1=0.916" + "l2=0.124 f=-0.622 shape=(1, 9000, 1)
logits [[ 2.946916  -2.1042738  2.8779025 -6.2098417]]
Iteration 700 of 1000: loss=1.02 " + "l1=0.892" + "l2=0.126 f=-0.619 shape=(1, 9000, 1)
logits [[ 2.8464613 -2.0954592  2.8448288 -6.0709424]]
Iteration 800 of 1000: loss=1 " + "l1=0.876" + "l2=0.124 f=-0.611 shape=(1, 9000, 1)
logits [[ 2.7966685 -2.078566   2.79786   -5.959982 ]]
Iteration 900 of 1000: loss=0.983 " + "l1=0.858" + "l2=0.125 f=-0.601 shape=(1, 9000, 1)
logits [[ 2.7435873 -2.0604517  2.7448947 -5.8322253]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.6 " + "l1=12.6" + "l2=0 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.5287466 -2.2528777  3.270315  -8.029677 ]]
Iteration 100 of 1000: loss=7.32 " + "l1=5.12" + "l2=2.21 f=-0.461 shape=(1, 9000, 1)
logits [[ 1.3231843 -1.5910004  1.7697113 -3.3457649]]
Iteration 200 of 1000: loss=5.61 " + "l1=2.86" + "l2=2.75 f=-0.417 shape=(1, 9000, 1)
logits [[ 0.28378525 -1.4212016   1.1640973  -1.695375  ]]
Iteration 300 of 1000: loss=4.35 " + "l1=1.48" + "l2=2.88 f=-0.4 shape=(1, 9000, 1)
logits [[-0.3905308  -1.3048579   0.78484654 -0.6901584 ]]
Iteration 400 of 1000: loss=3.46 " + "l1=0.54" + "l2=2.93 f=-0.384 shape=(1, 9000, 1)
logits [[-0.8221289  -1.2198999   0.52190876 -0.01771592]]
Iteration 500 of 1000: loss=2.92 " + "l1=0.147" + "l2=2.77 f=-0.381 shape=(1, 9000, 1)
logits [[-0.95570976 -1.238921    0.40791878  0.26108432]]
Iteration 600 of 1000: loss=2.5 " + "l1=0.00824" + "l2=2.49 f=-0.374 shape=(1, 9000, 1)
logits [[-0.9123386  -1.3371831   0.3815558   0.37331375]]
Iteration 700 of 1000: loss=2.27 " + "l1=0" + "l2=2.27 f=-0.382 shape=(1, 9000, 1)
logits [[-0.89686066 -1.4153297   0.39256337  0.39295295]]
Iteration 800 of 1000: loss=2.11 " + "l1=0" + "l2=2.11 f=-0.384 shape=(1, 9000, 1)
logits [[-0.9071197  -1.4510294   0.41066697  0.41158253]]
Iteration 900 of 1000: loss=2.02 " + "l1=0.0145" + "l2=2 f=-0.385 shape=(1, 9000, 1)
logits [[-0.9138745  -1.4749876   0.43194422  0.41748407]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.91 " + "l1=6.91" + "l2=0 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.5287466 -2.2528777  3.270315  -8.029677 ]]
Iteration 100 of 1000: loss=4.91 " + "l1=4.04" + "l2=0.876 f=-0.52 shape=(1, 9000, 1)
logits [[ 2.3614402 -1.8291366  2.3644316 -4.9778595]]
Iteration 200 of 1000: loss=4.27 " + "l1=3.14" + "l2=1.13 f=-0.466 shape=(1, 9000, 1)
logits [[ 1.7099094 -1.6364188  1.8826214 -3.8207397]]
Iteration 300 of 1000: loss=3.62 " + "l1=2.3" + "l2=1.33 f=-0.434 shape=(1, 9000, 1)
logits [[ 0.99060345 -1.5372504   1.4940611  -2.6844249 ]]
Iteration 400 of 1000: loss=3.04 " + "l1=1.64" + "l2=1.4 f=-0.41 shape=(1, 9000, 1)
logits [[ 0.41215265 -1.4405715   1.1872226  -1.7979997 ]]
Iteration 500 of 1000: loss=2.7 " + "l1=1.3" + "l2=1.4 f=-0.413 shape=(1, 9000, 1)
logits [[ 0.09965178 -1.4096559   1.0107588  -1.3541846 ]]
Iteration 600 of 1000: loss=2.48 " + "l1=1.08" + "l2=1.4 f=-0.41 shape=(1, 9000, 1)
logits [[-0.07765345 -1.3828233   0.88973457 -1.0676622 ]]
Iteration 700 of 1000: loss=2.27 " + "l1=0.849" + "l2=1.42 f=-0.397 shape=(1, 9000, 1)
logits [[-0.25907332 -1.340119    0.7777878  -0.7653066 ]]
Iteration 800 of 1000: loss=2.01 " + "l1=0.566" + "l2=1.45 f=-0.39 shape=(1, 9000, 1)
logits [[-0.54664093 -1.3337269   0.675211   -0.3540435 ]]
Iteration 900 of 1000: loss=1.65 " + "l1=0.232" + "l2=1.42 f=-0.388 shape=(1, 9000, 1)
logits [[-0.9233362  -1.2675129   0.53046817  0.10813355]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.08 " + "l1=4.08" + "l2=0 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.5287466 -2.2528777  3.270315  -8.029677 ]]
Iteration 100 of 1000: loss=3.26 " + "l1=2.81" + "l2=0.455 f=-0.579 shape=(1, 9000, 1)
logits [[ 2.772924  -2.0007613  2.7707367 -5.858001 ]]
Iteration 200 of 1000: loss=2.99 " + "l1=2.52" + "l2=0.47 f=-0.553 shape=(1, 9000, 1)
logits [[ 2.4667687 -1.8750107  2.469019  -5.273645 ]]
Iteration 300 of 1000: loss=2.76 " + "l1=2.22" + "l2=0.54 f=-0.526 shape=(1, 9000, 1)
logits [[ 2.1692142 -1.7854961  2.1779518 -4.6656833]]
Iteration 400 of 1000: loss=2.54 " + "l1=1.96" + "l2=0.581 f=-0.499 shape=(1, 9000, 1)
logits [[ 1.8745747 -1.6931295  1.9271468 -4.1061764]]
Iteration 500 of 1000: loss=2.37 " + "l1=1.71" + "l2=0.661 f=-0.496 shape=(1, 9000, 1)
logits [[ 1.4896939 -1.6358103  1.7135905 -3.5502174]]
Iteration 600 of 1000: loss=2.21 " + "l1=1.48" + "l2=0.726 f=-0.501 shape=(1, 9000, 1)
logits [[ 1.1495492 -1.6249189  1.5201246 -3.0469465]]
Iteration 700 of 1000: loss=2.07 " + "l1=1.3" + "l2=0.768 f=-0.495 shape=(1, 9000, 1)
logits [[ 0.9122803 -1.6326802  1.3719927 -2.6303916]]
Iteration 800 of 1000: loss=1.89 " + "l1=1.09" + "l2=0.795 f=-0.465 shape=(1, 9000, 1)
logits [[ 0.6471854 -1.5941366  1.2275921 -2.1399567]]
Iteration 900 of 1000: loss=1.7 " + "l1=0.884" + "l2=0.815 f=-0.457 shape=(1, 9000, 1)
logits [[ 0.28489247 -1.5423603   1.0739762  -1.6464776 ]]
--- 293.1650478839874 seconds ---
Adv result:3
Loading record A06695
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0735 " + "l1=0.0735" + "l2=0 f=-0.432 shape=(1, 9000, 1)
logits [[ 5.321592  -2.0308297  2.972322  -7.9916377]]
Iteration 100 of 1000: loss=0.0727 " + "l1=0.0721" + "l2=0.000537 f=-0.432 shape=(1, 9000, 1)
logits [[ 5.2326427 -1.9797882  2.941235  -7.92012  ]]
Iteration 200 of 1000: loss=0.0724 " + "l1=0.0719" + "l2=0.000583 f=-0.431 shape=(1, 9000, 1)
logits [[ 5.2139926 -1.9716947  2.9351888 -7.900853 ]]
Iteration 300 of 1000: loss=0.0722 " + "l1=0.0715" + "l2=0.000687 f=-0.43 shape=(1, 9000, 1)
logits [[ 5.192546  -1.9619073  2.928104  -7.8785715]]
Iteration 400 of 1000: loss=0.072 " + "l1=0.0712" + "l2=0.000795 f=-0.429 shape=(1, 9000, 1)
logits [[ 5.1709948 -1.9526868  2.9210234 -7.8554115]]
Iteration 500 of 1000: loss=0.0719 " + "l1=0.071" + "l2=0.000929 f=-0.428 shape=(1, 9000, 1)
logits [[ 5.151999  -1.9441528  2.9141922 -7.8352466]]
Iteration 600 of 1000: loss=0.0718 " + "l1=0.0707" + "l2=0.00105 f=-0.428 shape=(1, 9000, 1)
logits [[ 5.1345663 -1.9367391  2.907832  -7.816815 ]]
Iteration 700 of 1000: loss=0.0717 " + "l1=0.0705" + "l2=0.00126 f=-0.427 shape=(1, 9000, 1)
logits [[ 5.1172805 -1.9297407  2.9016664 -7.7983985]]
Iteration 800 of 1000: loss=0.0716 " + "l1=0.0702" + "l2=0.0014 f=-0.427 shape=(1, 9000, 1)
logits [[ 5.0996227 -1.9224974  2.8953261 -7.7795806]]
Iteration 900 of 1000: loss=0.0715 " + "l1=0.07" + "l2=0.00155 f=-0.426 shape=(1, 9000, 1)
logits [[ 5.082305  -1.9156599  2.888916  -7.76113  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.735 " + "l1=0.735" + "l2=0 f=-0.432 shape=(1, 9000, 1)
logits [[ 5.321592  -2.0308297  2.972322  -7.9916377]]
Iteration 100 of 1000: loss=0.659 " + "l1=0.617" + "l2=0.0423 f=-0.438 shape=(1, 9000, 1)
logits [[ 4.530136  -1.6396564  2.7208486 -7.3647337]]
Iteration 200 of 1000: loss=0.631 " + "l1=0.577" + "l2=0.054 f=-0.435 shape=(1, 9000, 1)
logits [[ 4.2393975 -1.525825   2.6140542 -7.069264 ]]
Iteration 300 of 1000: loss=0.606 " + "l1=0.541" + "l2=0.0649 f=-0.428 shape=(1, 9000, 1)
logits [[ 3.9780664 -1.4288908  2.5149753 -6.775501 ]]
Iteration 400 of 1000: loss=0.582 " + "l1=0.507" + "l2=0.0751 f=-0.417 shape=(1, 9000, 1)
logits [[ 3.7368507 -1.3295605  2.421531  -6.495212 ]]
Iteration 500 of 1000: loss=0.561 " + "l1=0.477" + "l2=0.0836 f=-0.408 shape=(1, 9000, 1)
logits [[ 3.5376737 -1.2332274  2.3287106 -6.2664905]]
Iteration 600 of 1000: loss=0.542 " + "l1=0.453" + "l2=0.0887 f=-0.405 shape=(1, 9000, 1)
logits [[ 3.3703449 -1.1609052  2.2464137 -6.075862 ]]
Iteration 700 of 1000: loss=0.523 " + "l1=0.429" + "l2=0.0938 f=-0.403 shape=(1, 9000, 1)
logits [[ 3.194169  -1.0970529  2.1625016 -5.869623 ]]
Iteration 800 of 1000: loss=0.505 " + "l1=0.407" + "l2=0.0984 f=-0.404 shape=(1, 9000, 1)
logits [[ 3.0310922 -1.0390297  2.080213  -5.6890297]]
Iteration 900 of 1000: loss=0.49 " + "l1=0.389" + "l2=0.1 f=-0.405 shape=(1, 9000, 1)
logits [[ 2.901904   -0.99224216  2.0080824  -5.538773  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.35 " + "l1=7.35" + "l2=0 f=-0.432 shape=(1, 9000, 1)
logits [[ 5.321592  -2.0308297  2.972322  -7.9916377]]
Iteration 100 of 1000: loss=3.08 " + "l1=1.66" + "l2=1.42 f=-0.472 shape=(1, 9000, 1)
logits [[ 1.4614081  -0.19032465  1.4703496  -4.629576  ]]
Iteration 200 of 1000: loss=2.43 " + "l1=1.11" + "l2=1.32 f=-0.446 shape=(1, 9000, 1)
logits [[ 1.1896598   0.07844573  1.1841946  -4.234869  ]]
Iteration 300 of 1000: loss=2.12 " + "l1=0.842" + "l2=1.28 f=-0.432 shape=(1, 9000, 1)
logits [[ 1.0375768  0.1987558  1.0406793 -4.00662  ]]
Iteration 400 of 1000: loss=1.87 " + "l1=0.561" + "l2=1.31 f=-0.422 shape=(1, 9000, 1)
logits [[ 0.8712647   0.32661515  0.88740623 -3.7714608 ]]
Iteration 500 of 1000: loss=1.66 " + "l1=0.307" + "l2=1.35 f=-0.418 shape=(1, 9000, 1)
logits [[ 0.66828895  0.407836    0.71487457 -3.462174  ]]
Iteration 600 of 1000: loss=1.5 " + "l1=0.212" + "l2=1.28 f=-0.413 shape=(1, 9000, 1)
logits [[ 0.6271417  0.4345201  0.6462113 -3.3583794]]
Iteration 700 of 1000: loss=1.31 " + "l1=0.0159" + "l2=1.29 f=-0.427 shape=(1, 9000, 1)
logits [[ 0.38012213  0.47385353  0.48972985 -3.050513  ]]
Iteration 800 of 1000: loss=1.16 " + "l1=0" + "l2=1.16 f=-0.42 shape=(1, 9000, 1)
logits [[ 0.3465425   0.44579753  0.44227645 -2.9151716 ]]
Iteration 900 of 1000: loss=1.05 " + "l1=0.000182" + "l2=1.05 f=-0.407 shape=(1, 9000, 1)
logits [[ 0.34383976  0.42439708  0.42457947 -2.8219178 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.04 " + "l1=4.04" + "l2=0 f=-0.432 shape=(1, 9000, 1)
logits [[ 5.321592  -2.0308297  2.972322  -7.9916377]]
Iteration 100 of 1000: loss=2.28 " + "l1=1.49" + "l2=0.789 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.079386   -0.62465215  1.9063597  -5.1514764 ]]
Iteration 200 of 1000: loss=1.8 " + "l1=1.05" + "l2=0.748 f=-0.438 shape=(1, 9000, 1)
logits [[ 1.5566235  -0.35144988  1.5387673  -4.49579   ]]
Iteration 300 of 1000: loss=1.57 " + "l1=0.826" + "l2=0.74 f=-0.427 shape=(1, 9000, 1)
logits [[ 1.3399279  -0.15615298  1.345      -4.237364  ]]
Iteration 400 of 1000: loss=1.43 " + "l1=0.726" + "l2=0.703 f=-0.417 shape=(1, 9000, 1)
logits [[ 1.2488731  -0.07196674  1.2460836  -4.089423  ]]
Iteration 500 of 1000: loss=1.34 " + "l1=0.637" + "l2=0.698 f=-0.408 shape=(1, 9000, 1)
logits [[ 1.1554667e+00 -2.8678384e-03  1.1562014e+00 -3.9403665e+00]]
Iteration 600 of 1000: loss=1.26 " + "l1=0.563" + "l2=0.693 f=-0.397 shape=(1, 9000, 1)
logits [[ 1.077943    0.05421856  1.0713369  -3.7922654 ]]
Iteration 700 of 1000: loss=1.18 " + "l1=0.493" + "l2=0.684 f=-0.394 shape=(1, 9000, 1)
logits [[ 0.98414457  0.08747304  0.9832108  -3.6313796 ]]
Iteration 800 of 1000: loss=1.1 " + "l1=0.414" + "l2=0.685 f=-0.394 shape=(1, 9000, 1)
logits [[ 0.8416472   0.10646777  0.8599931  -3.386104  ]]
Iteration 900 of 1000: loss=1.02 " + "l1=0.365" + "l2=0.655 f=-0.389 shape=(1, 9000, 1)
logits [[ 0.7760001   0.11720084  0.7812072  -3.2316911 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.7 " + "l1=5.7" + "l2=0 f=-0.432 shape=(1, 9000, 1)
logits [[ 5.321592  -2.0308297  2.972322  -7.9916377]]
Iteration 100 of 1000: loss=2.69 " + "l1=1.61" + "l2=1.08 f=-0.461 shape=(1, 9000, 1)
logits [[ 1.6896367  -0.39405364  1.6807185  -4.818815  ]]
Iteration 200 of 1000: loss=2.11 " + "l1=1.08" + "l2=1.03 f=-0.44 shape=(1, 9000, 1)
logits [[ 1.3176125  -0.07413433  1.3130038  -4.3181143 ]]
Iteration 300 of 1000: loss=1.86 " + "l1=0.893" + "l2=0.965 f=-0.429 shape=(1, 9000, 1)
logits [[ 1.1862477   0.03343256  1.1795803  -4.1133795 ]]
Iteration 400 of 1000: loss=1.68 " + "l1=0.731" + "l2=0.949 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.0420371  0.1168127  1.0603614 -3.9045842]]
Iteration 500 of 1000: loss=1.53 " + "l1=0.572" + "l2=0.961 f=-0.414 shape=(1, 9000, 1)
logits [[ 0.9117461   0.18929458  0.9279817  -3.6860948 ]]
Iteration 600 of 1000: loss=1.38 " + "l1=0.381" + "l2=0.994 f=-0.423 shape=(1, 9000, 1)
logits [[ 0.70863473  0.24167033  0.73325825 -3.3761373 ]]
Iteration 700 of 1000: loss=1.24 " + "l1=0.255" + "l2=0.988 f=-0.423 shape=(1, 9000, 1)
logits [[ 0.59370387  0.2654551   0.5945151  -3.1437693 ]]
Iteration 800 of 1000: loss=1.11 " + "l1=0.12" + "l2=0.989 f=-0.429 shape=(1, 9000, 1)
logits [[ 0.45137754  0.31942165  0.4737046  -2.9605753 ]]
Iteration 900 of 1000: loss=0.962 " + "l1=0.00638" + "l2=0.956 f=-0.413 shape=(1, 9000, 1)
logits [[ 0.3029305  0.3597687  0.3679952 -2.6817982]]
--- 294.91173553466797 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0235 " + "l1=0.0235" + "l2=0 f=-0.432 shape=(1, 9000, 1)
logits [[ 5.321592  -2.0308297  2.972322  -7.9916377]]
Iteration 100 of 1000: loss=0.0232 " + "l1=0.0229" + "l2=0.000245 f=-0.432 shape=(1, 9000, 1)
logits [[ 5.264897  -2.020025   2.9715297 -7.944845 ]]
Iteration 200 of 1000: loss=0.0231 " + "l1=0.0229" + "l2=0.000227 f=-0.432 shape=(1, 9000, 1)
logits [[ 5.256987  -2.0185828  2.9708924 -7.9361625]]
Iteration 300 of 1000: loss=0.023 " + "l1=0.0228" + "l2=0.000279 f=-0.431 shape=(1, 9000, 1)
logits [[ 5.245511  -2.016482   2.9704328 -7.924207 ]]
Iteration 400 of 1000: loss=0.023 " + "l1=0.0226" + "l2=0.000339 f=-0.431 shape=(1, 9000, 1)
logits [[ 5.233781  -2.0143406  2.969978  -7.911716 ]]
Iteration 500 of 1000: loss=0.0229 " + "l1=0.0225" + "l2=0.000414 f=-0.43 shape=(1, 9000, 1)
logits [[ 5.2224655 -2.0121648  2.9695177 -7.899501 ]]
Iteration 600 of 1000: loss=0.023 " + "l1=0.0224" + "l2=0.000575 f=-0.429 shape=(1, 9000, 1)
logits [[ 5.2116637 -2.0100725  2.9690368 -7.8877606]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.235 " + "l1=0.235" + "l2=0 f=-0.432 shape=(1, 9000, 1)
logits [[ 5.321592  -2.0308297  2.972322  -7.9916377]]
Iteration 100 of 1000: loss=0.207 " + "l1=0.189" + "l2=0.0171 f=-0.442 shape=(1, 9000, 1)
logits [[ 4.853567  -1.9396678  2.9598632 -7.6404843]]
Iteration 200 of 1000: loss=0.195 " + "l1=0.171" + "l2=0.0236 f=-0.444 shape=(1, 9000, 1)
logits [[ 4.6656704 -1.9184519  2.954124  -7.476458 ]]
Iteration 300 of 1000: loss=0.185 " + "l1=0.157" + "l2=0.0282 f=-0.443 shape=(1, 9000, 1)
logits [[ 4.5173416 -1.9044614  2.9480157 -7.3309703]]
Iteration 400 of 1000: loss=0.177 " + "l1=0.144" + "l2=0.0326 f=-0.44 shape=(1, 9000, 1)
logits [[ 4.3828144 -1.8938866  2.9405074 -7.1899734]]
Iteration 500 of 1000: loss=0.169 " + "l1=0.132" + "l2=0.0375 f=-0.437 shape=(1, 9000, 1)
logits [[ 4.25023   -1.8828055  2.9327424 -7.0479774]]
Iteration 600 of 1000: loss=0.16 " + "l1=0.117" + "l2=0.0435 f=-0.432 shape=(1, 9000, 1)
logits [[ 4.103794  -1.8813072  2.9348378 -6.885943 ]]
Iteration 700 of 1000: loss=0.153 " + "l1=0.105" + "l2=0.0478 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.989242  -1.8806161  2.9415166 -6.767178 ]]
Iteration 800 of 1000: loss=0.145 " + "l1=0.0953" + "l2=0.0499 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.899831  -1.8769083  2.94699   -6.672714 ]]
Iteration 900 of 1000: loss=0.139 " + "l1=0.0884" + "l2=0.0506 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.8330011 -1.8733383  2.949214  -6.600042 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.35 " + "l1=2.35" + "l2=0 f=-0.432 shape=(1, 9000, 1)
logits [[ 5.321592  -2.0308297  2.972322  -7.9916377]]
Iteration 100 of 1000: loss=0.416 " + "l1=0.0231" + "l2=0.393 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.0535038 -1.9096533  3.0304155 -6.12765  ]]
Iteration 200 of 1000: loss=0.305 " + "l1=0" + "l2=0.305 f=-0.477 shape=(1, 9000, 1)
logits [[ 2.9759312 -1.9203032  3.019767  -5.9852834]]
Iteration 300 of 1000: loss=0.246 " + "l1=0" + "l2=0.246 f=-0.465 shape=(1, 9000, 1)
logits [[ 3.000979  -1.9219778  3.0125    -5.9503736]]
Iteration 400 of 1000: loss=0.217 " + "l1=0" + "l2=0.217 f=-0.456 shape=(1, 9000, 1)
logits [[ 2.9928975 -1.9129753  3.0040517 -5.9063277]]
Iteration 500 of 1000: loss=0.201 " + "l1=0" + "l2=0.201 f=-0.45 shape=(1, 9000, 1)
logits [[ 2.9837093 -1.9071567  3.0043073 -5.8814645]]
Iteration 600 of 1000: loss=0.184 " + "l1=0" + "l2=0.184 f=-0.447 shape=(1, 9000, 1)
logits [[ 2.9854198 -1.9038982  3.0035846 -5.8719277]]
Iteration 700 of 1000: loss=0.171 " + "l1=0" + "l2=0.171 f=-0.444 shape=(1, 9000, 1)
logits [[ 2.9971445 -1.8961174  3.00292   -5.8782554]]
Iteration 800 of 1000: loss=0.17 " + "l1=0" + "l2=0.17 f=-0.444 shape=(1, 9000, 1)
logits [[ 2.9595852 -1.8951094  3.0101018 -5.850813 ]]
Iteration 900 of 1000: loss=0.154 " + "l1=0" + "l2=0.154 f=-0.441 shape=(1, 9000, 1)
logits [[ 2.9916635 -1.8905402  3.0074573 -5.8727994]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.29 " + "l1=1.29" + "l2=0 f=-0.432 shape=(1, 9000, 1)
logits [[ 5.321592  -2.0308297  2.972322  -7.9916377]]
Iteration 100 of 1000: loss=0.395 " + "l1=0.00151" + "l2=0.394 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.024833  -1.8991092  3.0220883 -6.098114 ]]
Iteration 200 of 1000: loss=0.272 " + "l1=0.00755" + "l2=0.264 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.0217752 -1.9083562  3.0080488 -5.9972954]]
Iteration 300 of 1000: loss=0.224 " + "l1=0" + "l2=0.224 f=-0.456 shape=(1, 9000, 1)
logits [[ 2.9928389 -1.9007238  3.0013518 -5.9193983]]
Iteration 400 of 1000: loss=0.199 " + "l1=0" + "l2=0.199 f=-0.45 shape=(1, 9000, 1)
logits [[ 2.9865582 -1.8981103  3.0052066 -5.8927984]]
Iteration 500 of 1000: loss=0.182 " + "l1=0" + "l2=0.182 f=-0.446 shape=(1, 9000, 1)
logits [[ 2.9779797 -1.8932853  3.0010529 -5.868434 ]]
Iteration 600 of 1000: loss=0.172 " + "l1=0.0101" + "l2=0.162 f=-0.441 shape=(1, 9000, 1)
logits [[ 3.0189772 -1.8856974  3.0005856 -5.8977323]]
Iteration 700 of 1000: loss=0.156 " + "l1=0" + "l2=0.156 f=-0.44 shape=(1, 9000, 1)
logits [[ 2.9957438 -1.8796649  3.0034602 -5.877786 ]]
Iteration 800 of 1000: loss=0.151 " + "l1=0.00782" + "l2=0.144 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.0157895 -1.871851   3.0015686 -5.8901286]]
Iteration 900 of 1000: loss=0.141 " + "l1=0" + "l2=0.141 f=-0.437 shape=(1, 9000, 1)
logits [[ 2.98627   -1.8757261  3.006687  -5.8636036]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.764 " + "l1=0.764" + "l2=0 f=-0.432 shape=(1, 9000, 1)
logits [[ 5.321592  -2.0308297  2.972322  -7.9916377]]
Iteration 100 of 1000: loss=0.443 " + "l1=0.263" + "l2=0.181 f=-0.475 shape=(1, 9000, 1)
logits [[ 3.7687838 -1.8377225  2.9599156 -6.78905  ]]
Iteration 200 of 1000: loss=0.296 " + "l1=0.0407" + "l2=0.255 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.1389318 -1.888694   3.0135999 -6.1393747]]
Iteration 300 of 1000: loss=0.224 " + "l1=0.00355" + "l2=0.22 f=-0.456 shape=(1, 9000, 1)
logits [[ 3.0114546 -1.8924192  3.000538  -5.9444113]]
Iteration 400 of 1000: loss=0.192 " + "l1=0.00453" + "l2=0.187 f=-0.448 shape=(1, 9000, 1)
logits [[ 3.0137396 -1.8932756  2.9998016 -5.9110217]]
Iteration 500 of 1000: loss=0.174 " + "l1=0" + "l2=0.174 f=-0.444 shape=(1, 9000, 1)
logits [[ 2.9917507 -1.8885275  3.000792  -5.8787484]]
Iteration 600 of 1000: loss=0.161 " + "l1=0.00488" + "l2=0.156 f=-0.439 shape=(1, 9000, 1)
logits [[ 3.013619  -1.8795501  2.9985926 -5.887311 ]]
Iteration 700 of 1000: loss=0.149 " + "l1=0.00222" + "l2=0.146 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.0052898 -1.8718809  2.9984546 -5.8772736]]
Iteration 800 of 1000: loss=0.138 " + "l1=0" + "l2=0.138 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.9972217 -1.8739519  3.0004778 -5.8631234]]
Iteration 900 of 1000: loss=0.129 " + "l1=0" + "l2=0.129 f=-0.434 shape=(1, 9000, 1)
logits [[ 3.0027876 -1.8762723  3.0047536 -5.866347 ]]
--- 271.69988799095154 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.133 " + "l1=0.133" + "l2=0 f=-0.432 shape=(1, 9000, 1)
logits [[ 5.321592  -2.0308297  2.972322  -7.9916377]]
Iteration 100 of 1000: loss=0.131 " + "l1=0.131" + "l2=0.000877 f=-0.428 shape=(1, 9000, 1)
logits [[ 5.201399  -1.9968938  2.9389539 -7.8573985]]
Iteration 200 of 1000: loss=0.131 " + "l1=0.13" + "l2=0.00103 f=-0.426 shape=(1, 9000, 1)
logits [[ 5.1666822 -1.9879328  2.9297032 -7.8139706]]
Iteration 300 of 1000: loss=0.13 " + "l1=0.129" + "l2=0.00126 f=-0.424 shape=(1, 9000, 1)
logits [[ 5.1313777 -1.9785713  2.9191794 -7.7696114]]
Iteration 400 of 1000: loss=0.13 " + "l1=0.128" + "l2=0.00155 f=-0.422 shape=(1, 9000, 1)
logits [[ 5.0969753 -1.9698488  2.9085355 -7.7251344]]
Iteration 500 of 1000: loss=0.129 " + "l1=0.127" + "l2=0.00182 f=-0.42 shape=(1, 9000, 1)
logits [[ 5.0633063 -1.9613775  2.8977954 -7.680765 ]]
Iteration 600 of 1000: loss=0.129 " + "l1=0.127" + "l2=0.00219 f=-0.418 shape=(1, 9000, 1)
logits [[ 5.0299454 -1.9525427  2.8865137 -7.63754  ]]
Iteration 700 of 1000: loss=0.128 " + "l1=0.126" + "l2=0.00246 f=-0.417 shape=(1, 9000, 1)
logits [[ 4.99839   -1.9446516  2.8757815 -7.595861 ]]
Iteration 800 of 1000: loss=0.128 " + "l1=0.125" + "l2=0.00279 f=-0.415 shape=(1, 9000, 1)
logits [[ 4.9678626 -1.9375165  2.8654668 -7.555307 ]]
Iteration 900 of 1000: loss=0.128 " + "l1=0.125" + "l2=0.00309 f=-0.413 shape=(1, 9000, 1)
logits [[ 4.939256  -1.930787   2.8554113 -7.5172415]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.33 " + "l1=1.33" + "l2=0 f=-0.432 shape=(1, 9000, 1)
logits [[ 5.321592  -2.0308297  2.972322  -7.9916377]]
Iteration 100 of 1000: loss=1.17 " + "l1=1.08" + "l2=0.0842 f=-0.416 shape=(1, 9000, 1)
logits [[ 4.1393285 -1.7381603  2.6449437 -6.7095456]]
Iteration 200 of 1000: loss=1.08 " + "l1=0.956" + "l2=0.126 f=-0.395 shape=(1, 9000, 1)
logits [[ 3.5597587 -1.6493748  2.5079746 -5.9967976]]
Iteration 300 of 1000: loss=1.02 " + "l1=0.866" + "l2=0.15 f=-0.377 shape=(1, 9000, 1)
logits [[ 3.1773725 -1.5970162  2.3939285 -5.4814734]]
Iteration 400 of 1000: loss=0.961 " + "l1=0.785" + "l2=0.176 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.8402038 -1.545729   2.265943  -5.0134783]]
Iteration 500 of 1000: loss=0.91 " + "l1=0.709" + "l2=0.201 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.5224247 -1.5113777  2.128187  -4.569224 ]]
Iteration 600 of 1000: loss=0.861 " + "l1=0.635" + "l2=0.226 f=-0.356 shape=(1, 9000, 1)
logits [[ 2.2008536 -1.4709935  1.9995004 -4.152653 ]]
Iteration 700 of 1000: loss=0.816 " + "l1=0.579" + "l2=0.237 f=-0.351 shape=(1, 9000, 1)
logits [[ 1.9699595 -1.4344313  1.8804649 -3.819182 ]]
Iteration 800 of 1000: loss=0.771 " + "l1=0.53" + "l2=0.242 f=-0.347 shape=(1, 9000, 1)
logits [[ 1.7768748 -1.4158388  1.7721591 -3.5218236]]
Iteration 900 of 1000: loss=0.731 " + "l1=0.498" + "l2=0.232 f=-0.347 shape=(1, 9000, 1)
logits [[ 1.6642432 -1.3882735  1.6560872 -3.3193865]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=13.3 " + "l1=13.3" + "l2=0 f=-0.432 shape=(1, 9000, 1)
logits [[ 5.321592  -2.0308297  2.972322  -7.9916377]]
Iteration 100 of 1000: loss=4.61 " + "l1=1.36" + "l2=3.25 f=-0.191 shape=(1, 9000, 1)
logits [[ 0.17265502 -1.1295038   0.7750551  -0.5816677 ]]
Iteration 200 of 1000: loss=2.89 " + "l1=0.0231" + "l2=2.87 f=-0.204 shape=(1, 9000, 1)
logits [[-0.5303387  -0.99868447  0.3680474   0.3449378 ]]
Iteration 300 of 1000: loss=2.35 " + "l1=0" + "l2=2.35 f=-0.214 shape=(1, 9000, 1)
logits [[-0.5619683  -0.9656987   0.334042    0.33780777]]
Iteration 400 of 1000: loss=2.07 " + "l1=0" + "l2=2.07 f=-0.206 shape=(1, 9000, 1)
logits [[-0.5362935  -0.96447235  0.3316789   0.34579936]]
Iteration 500 of 1000: loss=1.87 " + "l1=0.000572" + "l2=1.87 f=-0.201 shape=(1, 9000, 1)
logits [[-0.5264155  -0.97423786  0.34802467  0.34745273]]
Iteration 600 of 1000: loss=1.74 " + "l1=0" + "l2=1.74 f=-0.197 shape=(1, 9000, 1)
logits [[-0.53389984 -0.9825457   0.3509602   0.37941393]]
Iteration 700 of 1000: loss=1.6 " + "l1=0.0188" + "l2=1.59 f=-0.195 shape=(1, 9000, 1)
logits [[-0.5050677  -0.9925919   0.36871138  0.34986222]]
Iteration 800 of 1000: loss=1.48 " + "l1=0.0183" + "l2=1.46 f=-0.191 shape=(1, 9000, 1)
logits [[-0.49910673 -1.0013542   0.3776902   0.35935956]]
Iteration 900 of 1000: loss=1.38 " + "l1=0" + "l2=1.38 f=-0.187 shape=(1, 9000, 1)
logits [[-0.5008163  -1.0209919   0.3839941   0.38998312]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.32 " + "l1=7.32" + "l2=0 f=-0.432 shape=(1, 9000, 1)
logits [[ 5.321592  -2.0308297  2.972322  -7.9916377]]
Iteration 100 of 1000: loss=3.79 " + "l1=2.56" + "l2=1.23 f=-0.325 shape=(1, 9000, 1)
logits [[ 1.497688  -1.4301342  1.6438198 -3.011832 ]]
Iteration 200 of 1000: loss=2.79 " + "l1=1.13" + "l2=1.67 f=-0.237 shape=(1, 9000, 1)
logits [[ 0.3714948  -1.1802983   0.95453525 -1.0926224 ]]
Iteration 300 of 1000: loss=2.16 " + "l1=0.407" + "l2=1.75 f=-0.228 shape=(1, 9000, 1)
logits [[-0.23574269 -0.99140364  0.5270471  -0.21288073]]
Iteration 400 of 1000: loss=1.74 " + "l1=0.0104" + "l2=1.73 f=-0.221 shape=(1, 9000, 1)
logits [[-0.56453335 -0.966582    0.333579    0.31474707]]
Iteration 500 of 1000: loss=1.51 " + "l1=0.00524" + "l2=1.51 f=-0.216 shape=(1, 9000, 1)
logits [[-0.564581   -0.9842914   0.34764954  0.33811608]]
Iteration 600 of 1000: loss=1.35 " + "l1=0.0178" + "l2=1.33 f=-0.207 shape=(1, 9000, 1)
logits [[-0.53651875 -1.0239551   0.38148504  0.34907636]]
Iteration 700 of 1000: loss=1.23 " + "l1=0.00955" + "l2=1.22 f=-0.204 shape=(1, 9000, 1)
logits [[-0.54664946 -1.02928     0.38858593  0.37121534]]
Iteration 800 of 1000: loss=1.14 " + "l1=0" + "l2=1.14 f=-0.202 shape=(1, 9000, 1)
logits [[-0.55775213 -1.025921    0.38557315  0.39190423]]
Iteration 900 of 1000: loss=1.08 " + "l1=0.0115" + "l2=1.07 f=-0.199 shape=(1, 9000, 1)
logits [[-0.5519341  -1.0265701   0.40171638  0.3808695 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.33 " + "l1=4.33" + "l2=0 f=-0.432 shape=(1, 9000, 1)
logits [[ 5.321592  -2.0308297  2.972322  -7.9916377]]
Iteration 100 of 1000: loss=2.72 " + "l1=1.99" + "l2=0.729 f=-0.364 shape=(1, 9000, 1)
logits [[ 2.0650482 -1.5347239  2.066086  -4.050632 ]]
Iteration 200 of 1000: loss=2.28 " + "l1=1.58" + "l2=0.695 f=-0.322 shape=(1, 9000, 1)
logits [[ 1.6207753 -1.4012406  1.6798798 -3.1886456]]
Iteration 300 of 1000: loss=1.98 " + "l1=1.21" + "l2=0.769 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.0443491 -1.2653246  1.3571304 -2.356037 ]]
Iteration 400 of 1000: loss=1.72 " + "l1=0.822" + "l2=0.899 f=-0.289 shape=(1, 9000, 1)
logits [[ 0.48450968 -1.1312451   1.0110658  -1.5189458 ]]
Iteration 500 of 1000: loss=1.49 " + "l1=0.506" + "l2=0.984 f=-0.271 shape=(1, 9000, 1)
logits [[ 0.07124529 -1.0255071   0.71231824 -0.8430881 ]]
Iteration 600 of 1000: loss=1.29 " + "l1=0.286" + "l2=1 f=-0.268 shape=(1, 9000, 1)
logits [[-0.23119998 -0.980117    0.5112984  -0.37008184]]
Iteration 700 of 1000: loss=1.1 " + "l1=0.107" + "l2=0.989 f=-0.255 shape=(1, 9000, 1)
logits [[-0.44674194 -0.9062413   0.33040503  0.00140003]]
Iteration 800 of 1000: loss=0.979 " + "l1=0.00481" + "l2=0.974 f=-0.248 shape=(1, 9000, 1)
logits [[-0.5956335  -0.88258564  0.2508687   0.2360605 ]]
Iteration 900 of 1000: loss=0.915 " + "l1=0.00823" + "l2=0.907 f=-0.251 shape=(1, 9000, 1)
logits [[-0.62517023 -0.88060623  0.26258564  0.23725262]]
--- 294.5354161262512 seconds ---
Adv result:3
Loading record A06699
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0231 " + "l1=0.0231" + "l2=0 f=-0.466 shape=(1, 9000, 1)
logits [[ 1.3346539 -0.9725676  1.0170424 -3.2437866]]
Iteration 100 of 1000: loss=0.0225 " + "l1=0.022" + "l2=0.000441 f=-0.465 shape=(1, 9000, 1)
logits [[ 1.2782699  -0.9243067   0.98906213 -3.20316   ]]
Iteration 200 of 1000: loss=0.0223 " + "l1=0.0218" + "l2=0.000462 f=-0.464 shape=(1, 9000, 1)
logits [[ 1.2690215 -0.9139082  0.9821675 -3.1933877]]
Iteration 300 of 1000: loss=0.0222 " + "l1=0.0216" + "l2=0.000576 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.255924   -0.90179193  0.97435594 -3.18218   ]]
Iteration 400 of 1000: loss=0.022 " + "l1=0.0213" + "l2=0.000674 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.2427158 -0.8910954  0.9677391 -3.1715434]]
Iteration 500 of 1000: loss=0.0219 " + "l1=0.0212" + "l2=0.000756 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.2314324  -0.8841522   0.96349007 -3.163313  ]]
Iteration 600 of 1000: loss=0.0219 " + "l1=0.021" + "l2=0.000897 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.2198857  -0.87646055  0.95878464 -3.154983  ]]
Iteration 700 of 1000: loss=0.0218 " + "l1=0.0208" + "l2=0.000973 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.2083622 -0.8693681  0.9546104 -3.1469138]]
Iteration 800 of 1000: loss=0.0217 " + "l1=0.0206" + "l2=0.00115 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.1963891 -0.8623035  0.9505221 -3.1385148]]
Iteration 900 of 1000: loss=0.0216 " + "l1=0.0204" + "l2=0.00117 f=-0.464 shape=(1, 9000, 1)
logits [[ 1.1854174  -0.85559565  0.94648457 -3.1307607 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.231 " + "l1=0.231" + "l2=0 f=-0.466 shape=(1, 9000, 1)
logits [[ 1.3346539 -0.9725676  1.0170424 -3.2437866]]
Iteration 100 of 1000: loss=0.169 " + "l1=0.135" + "l2=0.0347 f=-0.456 shape=(1, 9000, 1)
logits [[ 0.837074   -0.50975806  0.7596927  -2.9110177 ]]
Iteration 200 of 1000: loss=0.149 " + "l1=0.109" + "l2=0.0407 f=-0.45 shape=(1, 9000, 1)
logits [[ 0.6941511  -0.39096817  0.6929137  -2.7964869 ]]
Iteration 300 of 1000: loss=0.139 " + "l1=0.0972" + "l2=0.042 f=-0.443 shape=(1, 9000, 1)
logits [[ 0.64668137 -0.3255549   0.6422963  -2.7371225 ]]
Iteration 400 of 1000: loss=0.131 " + "l1=0.0837" + "l2=0.0471 f=-0.438 shape=(1, 9000, 1)
logits [[ 0.58471435 -0.24873205  0.5884439  -2.6770604 ]]
Iteration 500 of 1000: loss=0.124 " + "l1=0.0729" + "l2=0.0512 f=-0.432 shape=(1, 9000, 1)
logits [[ 0.5466998  -0.18165259  0.54748255 -2.6396708 ]]
Iteration 600 of 1000: loss=0.12 " + "l1=0.0681" + "l2=0.0524 f=-0.43 shape=(1, 9000, 1)
logits [[ 0.5251584  -0.15417437  0.5267565  -2.61925   ]]
Iteration 700 of 1000: loss=0.118 " + "l1=0.0656" + "l2=0.0526 f=-0.43 shape=(1, 9000, 1)
logits [[ 0.5158078  -0.14033408  0.513115   -2.6104248 ]]
Iteration 800 of 1000: loss=0.116 " + "l1=0.0629" + "l2=0.0531 f=-0.431 shape=(1, 9000, 1)
logits [[ 0.49753037 -0.1251456   0.5036452  -2.5990252 ]]
Iteration 900 of 1000: loss=0.114 " + "l1=0.0614" + "l2=0.0525 f=-0.43 shape=(1, 9000, 1)
logits [[ 0.49551466 -0.11759903  0.49636254 -2.592802  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.31 " + "l1=2.31" + "l2=0 f=-0.466 shape=(1, 9000, 1)
logits [[ 1.3346539 -0.9725676  1.0170424 -3.2437866]]
Iteration 100 of 1000: loss=0.257 " + "l1=0" + "l2=0.257 f=-0.432 shape=(1, 9000, 1)
logits [[ 0.2683762   0.30588305  0.30380073 -2.6079364 ]]
Iteration 200 of 1000: loss=0.192 " + "l1=0" + "l2=0.192 f=-0.432 shape=(1, 9000, 1)
logits [[ 0.2904314   0.2932973   0.29202992 -2.6046937 ]]
Iteration 300 of 1000: loss=0.166 " + "l1=0" + "l2=0.166 f=-0.436 shape=(1, 9000, 1)
logits [[ 0.25187823  0.306       0.28704965 -2.5908916 ]]
Iteration 400 of 1000: loss=0.145 " + "l1=0" + "l2=0.145 f=-0.435 shape=(1, 9000, 1)
logits [[ 0.27560046  0.28985062  0.28843898 -2.595417  ]]
Iteration 500 of 1000: loss=0.141 " + "l1=0" + "l2=0.141 f=-0.443 shape=(1, 9000, 1)
logits [[ 0.20146784  0.32140926  0.28529298 -2.5819952 ]]
Iteration 600 of 1000: loss=0.128 " + "l1=0.003" + "l2=0.125 f=-0.442 shape=(1, 9000, 1)
logits [[ 0.23004667  0.2915133   0.29451242 -2.5834637 ]]
Iteration 700 of 1000: loss=0.122 " + "l1=0" + "l2=0.122 f=-0.441 shape=(1, 9000, 1)
logits [[ 0.22275472  0.29941157  0.28478205 -2.571811  ]]
Iteration 800 of 1000: loss=0.118 " + "l1=0" + "l2=0.118 f=-0.44 shape=(1, 9000, 1)
logits [[ 0.22647917  0.2992272   0.27716404 -2.5648224 ]]
Iteration 900 of 1000: loss=0.116 " + "l1=0" + "l2=0.116 f=-0.436 shape=(1, 9000, 1)
logits [[ 0.25240767  0.2983589   0.26765126 -2.5633104 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.27 " + "l1=1.27" + "l2=0 f=-0.466 shape=(1, 9000, 1)
logits [[ 1.3346539 -0.9725676  1.0170424 -3.2437866]]
Iteration 100 of 1000: loss=0.24 " + "l1=0" + "l2=0.24 f=-0.434 shape=(1, 9000, 1)
logits [[ 0.28532577  0.30371103  0.3017379  -2.6257997 ]]
Iteration 200 of 1000: loss=0.173 " + "l1=0" + "l2=0.173 f=-0.434 shape=(1, 9000, 1)
logits [[ 0.2769268  0.3106554  0.2986385 -2.6236   ]]
Iteration 300 of 1000: loss=0.142 " + "l1=0.00124" + "l2=0.141 f=-0.434 shape=(1, 9000, 1)
logits [[ 0.2857046   0.30076882  0.30302444 -2.6268716 ]]
Iteration 400 of 1000: loss=0.132 " + "l1=0" + "l2=0.132 f=-0.437 shape=(1, 9000, 1)
logits [[ 0.26597345  0.31306577  0.29488328 -2.622225  ]]
Iteration 500 of 1000: loss=0.123 " + "l1=0" + "l2=0.123 f=-0.438 shape=(1, 9000, 1)
logits [[ 0.2684266   0.30051196  0.2909717  -2.6103442 ]]
Iteration 600 of 1000: loss=0.117 " + "l1=0" + "l2=0.117 f=-0.437 shape=(1, 9000, 1)
logits [[ 0.2730789   0.28989413  0.28721616 -2.596472  ]]
Iteration 700 of 1000: loss=0.114 " + "l1=0" + "l2=0.114 f=-0.435 shape=(1, 9000, 1)
logits [[ 0.27605483  0.28922155  0.28021985 -2.5864968 ]]
Iteration 800 of 1000: loss=0.114 " + "l1=0.00507" + "l2=0.109 f=-0.434 shape=(1, 9000, 1)
logits [[ 0.28613627  0.27691725  0.2794657  -2.5791025 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.75 " + "l1=0.75" + "l2=0 f=-0.466 shape=(1, 9000, 1)
logits [[ 1.3346539 -0.9725676  1.0170424 -3.2437866]]
Iteration 100 of 1000: loss=0.247 " + "l1=0.0392" + "l2=0.208 f=-0.43 shape=(1, 9000, 1)
logits [[ 0.33681485  0.22835429  0.34894416 -2.6334612 ]]
Iteration 200 of 1000: loss=0.153 " + "l1=0" + "l2=0.153 f=-0.431 shape=(1, 9000, 1)
logits [[ 0.30336794  0.3153373   0.31076175 -2.6535902 ]]
Iteration 300 of 1000: loss=0.134 " + "l1=0.00313" + "l2=0.131 f=-0.436 shape=(1, 9000, 1)
logits [[ 0.2796944   0.30114815  0.3107789  -2.6337836 ]]
Iteration 400 of 1000: loss=0.123 " + "l1=0.000856" + "l2=0.122 f=-0.433 shape=(1, 9000, 1)
logits [[ 0.30040208  0.29776824  0.29852858 -2.6292431 ]]
Iteration 500 of 1000: loss=0.12 " + "l1=0" + "l2=0.12 f=-0.437 shape=(1, 9000, 1)
logits [[ 0.26113594  0.301634    0.2919289  -2.6041107 ]]
Iteration 600 of 1000: loss=0.114 " + "l1=0" + "l2=0.114 f=-0.436 shape=(1, 9000, 1)
logits [[ 0.27248305  0.2902375   0.28758287 -2.595218  ]]
Iteration 700 of 1000: loss=0.11 " + "l1=0.000146" + "l2=0.11 f=-0.435 shape=(1, 9000, 1)
logits [[ 0.28270623  0.282768    0.28321645 -2.5893478 ]]
Iteration 800 of 1000: loss=0.11 " + "l1=0" + "l2=0.11 f=-0.436 shape=(1, 9000, 1)
logits [[ 0.269041    0.29087067  0.27669486 -2.5789382 ]]
Iteration 900 of 1000: loss=0.106 " + "l1=0.00218" + "l2=0.104 f=-0.436 shape=(1, 9000, 1)
logits [[ 0.27314183  0.27331012  0.28001943 -2.5685954 ]]
--- 283.3277323246002 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00318 " + "l1=0.00318" + "l2=0 f=-0.466 shape=(1, 9000, 1)
logits [[ 1.3346539 -0.9725676  1.0170424 -3.2437866]]
Iteration 100 of 1000: loss=0.00295 " + "l1=0.00273" + "l2=0.000215 f=-0.471 shape=(1, 9000, 1)
logits [[ 1.2994078 -0.9769686  1.0263481 -3.2309663]]
Iteration 200 of 1000: loss=0.00288 " + "l1=0.0027" + "l2=0.000177 f=-0.471 shape=(1, 9000, 1)
logits [[ 1.2968612  -0.97767675  1.0270026  -3.2294035 ]]
Iteration 300 of 1000: loss=0.00283 " + "l1=0.00262" + "l2=0.000208 f=-0.471 shape=(1, 9000, 1)
logits [[ 1.2905635 -0.9783413  1.028364  -3.2265167]]
Iteration 400 of 1000: loss=0.0028 " + "l1=0.00254" + "l2=0.000264 f=-0.472 shape=(1, 9000, 1)
logits [[ 1.2832532  -0.97872424  1.0297389  -3.2230554 ]]
Iteration 500 of 1000: loss=0.00276 " + "l1=0.00245" + "l2=0.000313 f=-0.473 shape=(1, 9000, 1)
logits [[ 1.2756019 -0.9789115  1.0310676 -3.2193804]]
Iteration 600 of 1000: loss=0.00275 " + "l1=0.00235" + "l2=0.000395 f=-0.474 shape=(1, 9000, 1)
logits [[ 1.2678456 -0.9790269  1.0324824 -3.2157283]]
Iteration 700 of 1000: loss=0.00275 " + "l1=0.00227" + "l2=0.00048 f=-0.474 shape=(1, 9000, 1)
logits [[ 1.2606461  -0.97875506  1.0337511  -3.2124486 ]]
Iteration 800 of 1000: loss=0.00274 " + "l1=0.00219" + "l2=0.000554 f=-0.475 shape=(1, 9000, 1)
logits [[ 1.2537082 -0.9786124  1.0351272 -3.209357 ]]
Iteration 900 of 1000: loss=0.00274 " + "l1=0.0021" + "l2=0.000645 f=-0.475 shape=(1, 9000, 1)
logits [[ 1.2464687 -0.9785516  1.0366708 -3.2061243]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0318 " + "l1=0.0318" + "l2=0 f=-0.466 shape=(1, 9000, 1)
logits [[ 1.3346539 -0.9725676  1.0170424 -3.2437866]]
Iteration 100 of 1000: loss=0.0105 " + "l1=0.000144" + "l2=0.0104 f=-0.499 shape=(1, 9000, 1)
logits [[ 1.0895226 -1.0150557  1.0880848 -3.1582563]]
Iteration 200 of 1000: loss=0.00652 " + "l1=0.000109" + "l2=0.00641 f=-0.498 shape=(1, 9000, 1)
logits [[ 1.0799501 -1.0040498  1.0788635 -3.1474557]]
Iteration 300 of 1000: loss=0.00476 " + "l1=0" + "l2=0.00476 f=-0.498 shape=(1, 9000, 1)
logits [[ 1.0758708 -1.0018259  1.076095  -3.1401415]]
Iteration 400 of 1000: loss=0.00416 " + "l1=0.000415" + "l2=0.00375 f=-0.496 shape=(1, 9000, 1)
logits [[ 1.0765935  -0.99851173  1.0724465  -3.134733  ]]
Iteration 500 of 1000: loss=0.00348 " + "l1=4.65e-05" + "l2=0.00344 f=-0.495 shape=(1, 9000, 1)
logits [[ 1.0725554  -0.99622613  1.0720904  -3.129526  ]]
Iteration 600 of 1000: loss=0.00304 " + "l1=0" + "l2=0.00304 f=-0.495 shape=(1, 9000, 1)
logits [[ 1.0706452 -0.9945151  1.0722797 -3.1267   ]]
Iteration 700 of 1000: loss=0.00283 " + "l1=0" + "l2=0.00283 f=-0.494 shape=(1, 9000, 1)
logits [[ 1.0695838 -0.9920661  1.0721881 -3.1251385]]
Iteration 800 of 1000: loss=0.00271 " + "l1=0" + "l2=0.00271 f=-0.493 shape=(1, 9000, 1)
logits [[ 1.0716007 -0.9896937  1.0718732 -3.1254685]]
Iteration 900 of 1000: loss=0.00264 " + "l1=0" + "l2=0.00264 f=-0.493 shape=(1, 9000, 1)
logits [[ 1.064894   -0.98896724  1.0744969  -3.1230931 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0175 " + "l1=0.0175" + "l2=0 f=-0.466 shape=(1, 9000, 1)
logits [[ 1.3346539 -0.9725676  1.0170424 -3.2437866]]
Iteration 100 of 1000: loss=0.0109 " + "l1=0.00733" + "l2=0.00361 f=-0.485 shape=(1, 9000, 1)
logits [[ 1.1949297 -1.0012679  1.061696  -3.195049 ]]
Iteration 200 of 1000: loss=0.00849 " + "l1=0.00387" + "l2=0.00462 f=-0.49 shape=(1, 9000, 1)
logits [[ 1.1402416 -1.0028356  1.0698519 -3.1691647]]
Iteration 300 of 1000: loss=0.0059 " + "l1=9.35e-05" + "l2=0.0058 f=-0.498 shape=(1, 9000, 1)
logits [[ 1.0817524 -1.0069373  1.0800515 -3.1450932]]
Iteration 400 of 1000: loss=0.00432 " + "l1=4.95e-05" + "l2=0.00427 f=-0.497 shape=(1, 9000, 1)
logits [[ 1.0767846 -1.0018594  1.0758837 -3.1373167]]
Iteration 500 of 1000: loss=0.00351 " + "l1=0" + "l2=0.00351 f=-0.496 shape=(1, 9000, 1)
logits [[ 1.0734208 -0.998957   1.0738597 -3.1315742]]
Iteration 600 of 1000: loss=0.00316 " + "l1=3.78e-05" + "l2=0.00312 f=-0.495 shape=(1, 9000, 1)
logits [[ 1.073551  -0.9962893  1.0728632 -3.1291902]]
Iteration 700 of 1000: loss=0.00287 " + "l1=0" + "l2=0.00287 f=-0.494 shape=(1, 9000, 1)
logits [[ 1.0724171 -0.9938008  1.0727538 -3.1273987]]
Iteration 800 of 1000: loss=0.00277 " + "l1=0" + "l2=0.00277 f=-0.493 shape=(1, 9000, 1)
logits [[ 1.0708814  -0.99190265  1.0732176  -3.126134  ]]
Iteration 900 of 1000: loss=0.00255 " + "l1=0.000103" + "l2=0.00245 f=-0.492 shape=(1, 9000, 1)
logits [[ 1.0743978  -0.98914367  1.0725204  -3.1274343 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0103 " + "l1=0.0103" + "l2=0 f=-0.466 shape=(1, 9000, 1)
logits [[ 1.3346539 -0.9725676  1.0170424 -3.2437866]]
Iteration 100 of 1000: loss=0.008 " + "l1=0.00664" + "l2=0.00136 f=-0.477 shape=(1, 9000, 1)
logits [[ 1.247058  -0.9869675  1.0426625 -3.212525 ]]
Iteration 200 of 1000: loss=0.0072 " + "l1=0.00555" + "l2=0.00165 f=-0.48 shape=(1, 9000, 1)
logits [[ 1.2200384 -0.9906842  1.0492641 -3.2002773]]
Iteration 300 of 1000: loss=0.00643 " + "l1=0.00449" + "l2=0.00194 f=-0.483 shape=(1, 9000, 1)
logits [[ 1.1927495 -0.9927735  1.0546371 -3.187364 ]]
Iteration 400 of 1000: loss=0.0057 " + "l1=0.00344" + "l2=0.00226 f=-0.486 shape=(1, 9000, 1)
logits [[ 1.1654266 -0.9946924  1.059465  -3.1742365]]
Iteration 500 of 1000: loss=0.00494 " + "l1=0.00236" + "l2=0.00258 f=-0.489 shape=(1, 9000, 1)
logits [[ 1.136667  -0.9960763  1.0640267 -3.1593425]]
Iteration 600 of 1000: loss=0.00419 " + "l1=0.00119" + "l2=0.003 f=-0.492 shape=(1, 9000, 1)
logits [[ 1.1057674 -0.9974342  1.0691422 -3.1439447]]
Iteration 700 of 1000: loss=0.00341 " + "l1=4.28e-05" + "l2=0.00336 f=-0.495 shape=(1, 9000, 1)
logits [[ 1.0755807 -0.9978563  1.0742625 -3.1306887]]
Iteration 800 of 1000: loss=0.00301 " + "l1=3.92e-05" + "l2=0.00297 f=-0.494 shape=(1, 9000, 1)
logits [[ 1.074517   -0.99477834  1.0733106  -3.1287143 ]]
Iteration 900 of 1000: loss=0.00267 " + "l1=2.06e-05" + "l2=0.00265 f=-0.493 shape=(1, 9000, 1)
logits [[ 1.0737008  -0.99227685  1.0730658  -3.1272213 ]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00675 " + "l1=0.00675" + "l2=0 f=-0.466 shape=(1, 9000, 1)
logits [[ 1.3346539 -0.9725676  1.0170424 -3.2437866]]
Iteration 100 of 1000: loss=0.00574 " + "l1=0.00509" + "l2=0.000648 f=-0.474 shape=(1, 9000, 1)
logits [[ 1.2737256 -0.9817952  1.0340692 -3.2219248]]
Iteration 200 of 1000: loss=0.00543 " + "l1=0.00472" + "l2=0.000708 f=-0.475 shape=(1, 9000, 1)
logits [[ 1.2590065  -0.98322034  1.0369431  -3.2146237 ]]
Iteration 300 of 1000: loss=0.00512 " + "l1=0.00427" + "l2=0.00085 f=-0.477 shape=(1, 9000, 1)
logits [[ 1.2416775 -0.9845432  1.0406286 -3.2066774]]
Iteration 400 of 1000: loss=0.00483 " + "l1=0.00384" + "l2=0.000995 f=-0.479 shape=(1, 9000, 1)
logits [[ 1.2245003 -0.9854061  1.0438977 -3.1985493]]
Iteration 500 of 1000: loss=0.00455 " + "l1=0.0034" + "l2=0.00115 f=-0.481 shape=(1, 9000, 1)
logits [[ 1.2076353 -0.987377   1.0477978 -3.1908855]]
Iteration 600 of 1000: loss=0.00425 " + "l1=0.00296" + "l2=0.00129 f=-0.482 shape=(1, 9000, 1)
logits [[ 1.1907283  -0.98868734  1.0513378  -3.1827736 ]]
Iteration 700 of 1000: loss=0.00414 " + "l1=0.00255" + "l2=0.00159 f=-0.484 shape=(1, 9000, 1)
logits [[ 1.173666  -0.9879443  1.0538353 -3.1743562]]
Iteration 800 of 1000: loss=0.00379 " + "l1=0.00213" + "l2=0.00166 f=-0.485 shape=(1, 9000, 1)
logits [[ 1.1570688 -0.9881733  1.0568573 -3.1664202]]
Iteration 900 of 1000: loss=0.00362 " + "l1=0.00171" + "l2=0.00191 f=-0.487 shape=(1, 9000, 1)
logits [[ 1.1405287  -0.98848706  1.0600404  -3.1586387 ]]
--- 287.0275881290436 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0458 " + "l1=0.0458" + "l2=0 f=-0.466 shape=(1, 9000, 1)
logits [[ 1.3346539 -0.9725676  1.0170424 -3.2437866]]
Iteration 100 of 1000: loss=0.045 " + "l1=0.0444" + "l2=0.000531 f=-0.465 shape=(1, 9000, 1)
logits [[ 1.2679924 -0.9456143  0.9913906 -3.1743498]]
Iteration 200 of 1000: loss=0.0447 " + "l1=0.0441" + "l2=0.000572 f=-0.465 shape=(1, 9000, 1)
logits [[ 1.2540616 -0.9391319  0.9860103 -3.1595263]]
Iteration 300 of 1000: loss=0.0445 " + "l1=0.0438" + "l2=0.000697 f=-0.464 shape=(1, 9000, 1)
logits [[ 1.2372394  -0.93245995  0.9800786  -3.1421795 ]]
Iteration 400 of 1000: loss=0.0443 " + "l1=0.0435" + "l2=0.000827 f=-0.464 shape=(1, 9000, 1)
logits [[ 1.2206743  -0.92721206  0.974926   -3.1253574 ]]
Iteration 500 of 1000: loss=0.0441 " + "l1=0.0431" + "l2=0.000998 f=-0.464 shape=(1, 9000, 1)
logits [[ 1.203068   -0.92118895  0.9691154  -3.1078944 ]]
Iteration 600 of 1000: loss=0.0439 " + "l1=0.0428" + "l2=0.00113 f=-0.464 shape=(1, 9000, 1)
logits [[ 1.1864823  -0.91528946  0.9633439  -3.0911937 ]]
Iteration 700 of 1000: loss=0.0438 " + "l1=0.0425" + "l2=0.00135 f=-0.464 shape=(1, 9000, 1)
logits [[ 1.1703976  -0.91056126  0.9581958  -3.075556  ]]
Iteration 800 of 1000: loss=0.0436 " + "l1=0.0422" + "l2=0.00149 f=-0.465 shape=(1, 9000, 1)
logits [[ 1.1548918 -0.9061071  0.9535867 -3.0605943]]
Iteration 900 of 1000: loss=0.0435 " + "l1=0.0419" + "l2=0.00162 f=-0.465 shape=(1, 9000, 1)
logits [[ 1.1408304 -0.9027788  0.9497525 -3.0470507]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.458 " + "l1=0.458" + "l2=0 f=-0.466 shape=(1, 9000, 1)
logits [[ 1.3346539 -0.9725676  1.0170424 -3.2437866]]
Iteration 100 of 1000: loss=0.382 " + "l1=0.345" + "l2=0.037 f=-0.45 shape=(1, 9000, 1)
logits [[ 0.7831865  -0.70322955  0.78359056 -2.6652353 ]]
Iteration 200 of 1000: loss=0.353 " + "l1=0.309" + "l2=0.0443 f=-0.421 shape=(1, 9000, 1)
logits [[ 0.66765326 -0.6028033   0.66956353 -2.4184315 ]]
Iteration 300 of 1000: loss=0.332 " + "l1=0.282" + "l2=0.0501 f=-0.402 shape=(1, 9000, 1)
logits [[ 0.5872734  -0.55608106  0.58941805 -2.2288756 ]]
Iteration 400 of 1000: loss=0.313 " + "l1=0.255" + "l2=0.0584 f=-0.383 shape=(1, 9000, 1)
logits [[ 0.51038814 -0.5323237   0.51916134 -2.0279496 ]]
Iteration 500 of 1000: loss=0.295 " + "l1=0.23" + "l2=0.0659 f=-0.368 shape=(1, 9000, 1)
logits [[ 0.40729776 -0.51398134  0.4658391  -1.8302375 ]]
Iteration 600 of 1000: loss=0.279 " + "l1=0.209" + "l2=0.0699 f=-0.355 shape=(1, 9000, 1)
logits [[ 0.3315489  -0.5258278   0.43451428 -1.6597264 ]]
Iteration 700 of 1000: loss=0.26 " + "l1=0.184" + "l2=0.0764 f=-0.333 shape=(1, 9000, 1)
logits [[ 0.25015107 -0.5338855   0.3951438  -1.4417721 ]]
Iteration 800 of 1000: loss=0.242 " + "l1=0.161" + "l2=0.0804 f=-0.31 shape=(1, 9000, 1)
logits [[ 0.19234905 -0.5536815   0.36821377 -1.2459478 ]]
Iteration 900 of 1000: loss=0.225 " + "l1=0.142" + "l2=0.0833 f=-0.294 shape=(1, 9000, 1)
logits [[ 0.14071974 -0.58745986  0.3443577  -1.0742403 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.58 " + "l1=4.58" + "l2=0 f=-0.466 shape=(1, 9000, 1)
logits [[ 1.3346539 -0.9725676  1.0170424 -3.2437866]]
Iteration 100 of 1000: loss=1.07 " + "l1=0.0312" + "l2=1.04 f=-0.278 shape=(1, 9000, 1)
logits [[-0.51488876 -0.22481118 -0.16971697 -0.20092314]]
Iteration 200 of 1000: loss=0.598 " + "l1=0" + "l2=0.598 f=-0.278 shape=(1, 9000, 1)
logits [[-0.49863735 -0.37037376 -0.12283425 -0.12153905]]
Iteration 300 of 1000: loss=0.44 " + "l1=0" + "l2=0.44 f=-0.283 shape=(1, 9000, 1)
logits [[-0.48247713 -0.49444085 -0.0817726  -0.07339512]]
Iteration 400 of 1000: loss=0.366 " + "l1=0" + "l2=0.366 f=-0.286 shape=(1, 9000, 1)
logits [[-0.4890015  -0.57128245 -0.05990982 -0.02354966]]
Iteration 500 of 1000: loss=0.308 " + "l1=0" + "l2=0.308 f=-0.289 shape=(1, 9000, 1)
logits [[-0.47660255 -0.63398397 -0.03153597 -0.01325094]]
Iteration 600 of 1000: loss=0.273 " + "l1=0.00331" + "l2=0.27 f=-0.289 shape=(1, 9000, 1)
logits [[-0.46664393 -0.67408174 -0.00689708 -0.0102055 ]]
Iteration 700 of 1000: loss=0.247 " + "l1=0" + "l2=0.247 f=-0.287 shape=(1, 9000, 1)
logits [[-0.47513244 -0.6949936   0.00634845  0.01533484]]
Iteration 800 of 1000: loss=0.23 " + "l1=0" + "l2=0.23 f=-0.284 shape=(1, 9000, 1)
logits [[-0.48231834 -0.704935    0.01368213  0.03952485]]
Iteration 900 of 1000: loss=0.215 " + "l1=0" + "l2=0.215 f=-0.281 shape=(1, 9000, 1)
logits [[-0.47783175 -0.7178432   0.02767046  0.04397454]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.52 " + "l1=2.52" + "l2=0 f=-0.466 shape=(1, 9000, 1)
logits [[ 1.3346539 -0.9725676  1.0170424 -3.2437866]]
Iteration 100 of 1000: loss=1.12 " + "l1=0.636" + "l2=0.483 f=-0.304 shape=(1, 9000, 1)
logits [[-0.02798532 -0.2634741   0.1151318  -1.0412617 ]]
Iteration 200 of 1000: loss=0.535 " + "l1=0" + "l2=0.535 f=-0.27 shape=(1, 9000, 1)
logits [[-0.49313727 -0.4121933  -0.08915091 -0.08662547]]
Iteration 300 of 1000: loss=0.363 " + "l1=0" + "l2=0.363 f=-0.281 shape=(1, 9000, 1)
logits [[-0.48617586 -0.5865621  -0.02936574 -0.02074321]]
Iteration 400 of 1000: loss=0.289 " + "l1=0" + "l2=0.289 f=-0.28 shape=(1, 9000, 1)
logits [[-0.4783027  -0.6540356   0.00084854  0.01058104]]
Iteration 500 of 1000: loss=0.25 " + "l1=0" + "l2=0.25 f=-0.277 shape=(1, 9000, 1)
logits [[-0.46880347 -0.6815968   0.02100106  0.02320692]]
Iteration 600 of 1000: loss=0.234 " + "l1=0" + "l2=0.234 f=-0.273 shape=(1, 9000, 1)
logits [[-0.48280182 -0.6993292   0.02394881  0.06784378]]
Iteration 700 of 1000: loss=0.21 " + "l1=0" + "l2=0.21 f=-0.271 shape=(1, 9000, 1)
logits [[-0.4623991  -0.7182476   0.047048    0.04984515]]
Iteration 800 of 1000: loss=0.2 " + "l1=0" + "l2=0.2 f=-0.268 shape=(1, 9000, 1)
logits [[-0.46377066 -0.73088646  0.05490277  0.06859496]]
Iteration 900 of 1000: loss=0.191 " + "l1=0" + "l2=0.191 f=-0.267 shape=(1, 9000, 1)
logits [[-0.46543697 -0.74248475  0.06039675  0.0809757 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.49 " + "l1=1.49" + "l2=0 f=-0.466 shape=(1, 9000, 1)
logits [[ 1.3346539 -0.9725676  1.0170424 -3.2437866]]
Iteration 100 of 1000: loss=0.885 " + "l1=0.655" + "l2=0.23 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.28997755 -0.33184758  0.33501127 -1.6813064 ]]
Iteration 200 of 1000: loss=0.668 " + "l1=0.386" + "l2=0.282 f=-0.301 shape=(1, 9000, 1)
logits [[ 0.01585805 -0.3629241   0.16500713 -1.0233167 ]]
Iteration 300 of 1000: loss=0.424 " + "l1=0.0395" + "l2=0.385 f=-0.261 shape=(1, 9000, 1)
logits [[-0.40845427 -0.502799   -0.0048968  -0.1264432 ]]
Iteration 400 of 1000: loss=0.291 " + "l1=0.00899" + "l2=0.282 f=-0.26 shape=(1, 9000, 1)
logits [[-0.41387329 -0.63355255  0.01836852 -0.0092985 ]]
Iteration 500 of 1000: loss=0.243 " + "l1=0.000343" + "l2=0.243 f=-0.257 shape=(1, 9000, 1)
logits [[-0.41908544 -0.6799781   0.03539978  0.03434336]]
Iteration 600 of 1000: loss=0.216 " + "l1=0" + "l2=0.216 f=-0.264 shape=(1, 9000, 1)
logits [[-0.4416399  -0.72516346  0.05372047  0.05665189]]
Iteration 700 of 1000: loss=0.2 " + "l1=0.0033" + "l2=0.196 f=-0.265 shape=(1, 9000, 1)
logits [[-0.43692422 -0.75889486  0.07200307  0.06184261]]
Iteration 800 of 1000: loss=0.187 " + "l1=0.00209" + "l2=0.185 f=-0.266 shape=(1, 9000, 1)
logits [[-0.44094804 -0.7760587   0.07945971  0.07303938]]
Iteration 900 of 1000: loss=0.176 " + "l1=0" + "l2=0.176 f=-0.267 shape=(1, 9000, 1)
logits [[-0.45099103 -0.8003961   0.08265234  0.09995732]]
--- 294.6357362270355 seconds ---
Adv result:3
Loading record A06700
(1, 9132)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0487 " + "l1=0.0487" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.8691099 -1.9961547  2.3436377 -5.048406 ]]
Iteration 100 of 1000: loss=0.048 " + "l1=0.0475" + "l2=0.000424 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.7995594 -1.955092   2.3114889 -4.989972 ]]
Iteration 200 of 1000: loss=0.0478 " + "l1=0.0473" + "l2=0.000464 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.7853456 -1.9462541  2.304569  -4.9784865]]
Iteration 300 of 1000: loss=0.0476 " + "l1=0.0471" + "l2=0.000556 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.769526  -1.9360206  2.2969012 -4.9660697]]
Iteration 400 of 1000: loss=0.0474 " + "l1=0.0468" + "l2=0.000653 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.7543075 -1.9253705  2.2895901 -4.9548826]]
Iteration 500 of 1000: loss=0.0473 " + "l1=0.0466" + "l2=0.000785 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.739927  -1.9150755  2.282837  -4.9445786]]
Iteration 600 of 1000: loss=0.0472 " + "l1=0.0463" + "l2=0.000921 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.7260594 -1.9051048  2.2766008 -4.9344296]]
Iteration 700 of 1000: loss=0.0472 " + "l1=0.0461" + "l2=0.00109 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.7125237 -1.8954194  2.2707005 -4.924334 ]]
Iteration 800 of 1000: loss=0.0471 " + "l1=0.0459" + "l2=0.00126 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.7003968 -1.8865778  2.2656796 -4.914549 ]]
Iteration 900 of 1000: loss=0.0471 " + "l1=0.0457" + "l2=0.00143 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.6884303 -1.8778934  2.2609594 -4.9049196]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.487 " + "l1=0.487" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.8691099 -1.9961547  2.3436377 -5.048406 ]]
Iteration 100 of 1000: loss=0.424 " + "l1=0.388" + "l2=0.0362 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.2600138 -1.6220293  2.0718164 -4.5535836]]
Iteration 200 of 1000: loss=0.394 " + "l1=0.346" + "l2=0.0478 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.0053368 -1.4589512  1.9740841 -4.370937 ]]
Iteration 300 of 1000: loss=0.372 " + "l1=0.321" + "l2=0.0508 f=-0.464 shape=(1, 9000, 1)
logits [[ 1.8875204 -1.3259702  1.8872402 -4.3051996]]
Iteration 400 of 1000: loss=0.358 " + "l1=0.305" + "l2=0.0524 f=-0.462 shape=(1, 9000, 1)
logits [[ 1.815984  -1.2382708  1.8159132 -4.2424173]]
Iteration 500 of 1000: loss=0.346 " + "l1=0.288" + "l2=0.0576 f=-0.461 shape=(1, 9000, 1)
logits [[ 1.7301252 -1.1507558  1.7263812 -4.149246 ]]
Iteration 600 of 1000: loss=0.334 " + "l1=0.269" + "l2=0.0652 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.6234065 -1.0588146  1.6262854 -4.0433555]]
Iteration 700 of 1000: loss=0.326 " + "l1=0.257" + "l2=0.0684 f=-0.464 shape=(1, 9000, 1)
logits [[ 1.5670927 -1.0018336  1.5711375 -3.9911063]]
Iteration 800 of 1000: loss=0.32 " + "l1=0.251" + "l2=0.069 f=-0.462 shape=(1, 9000, 1)
logits [[ 1.5323578 -0.97051    1.538454  -3.946417 ]]
Iteration 900 of 1000: loss=0.315 " + "l1=0.246" + "l2=0.0692 f=-0.458 shape=(1, 9000, 1)
logits [[ 1.5123612  -0.94738966  1.5128633  -3.9102066 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.87 " + "l1=4.87" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.8691099 -1.9961547  2.3436377 -5.048406 ]]
Iteration 100 of 1000: loss=2.04 " + "l1=1.19" + "l2=0.848 f=-0.494 shape=(1, 9000, 1)
logits [[ 0.7653763 -0.185457   1.0066382 -3.5625536]]
Iteration 200 of 1000: loss=1.6 " + "l1=0.795" + "l2=0.8 f=-0.506 shape=(1, 9000, 1)
logits [[ 0.45449698  0.01414573  0.80921227 -3.3007703 ]]
Iteration 300 of 1000: loss=1.34 " + "l1=0.52" + "l2=0.821 f=-0.507 shape=(1, 9000, 1)
logits [[ 0.22594076  0.14780281  0.66773355 -3.0697908 ]]
Iteration 400 of 1000: loss=1.15 " + "l1=0.296" + "l2=0.856 f=-0.514 shape=(1, 9000, 1)
logits [[ 0.0310324   0.27583122  0.57182    -2.9348605 ]]
Iteration 500 of 1000: loss=1 " + "l1=0.153" + "l2=0.85 f=-0.516 shape=(1, 9000, 1)
logits [[-0.09435343  0.3537631   0.50658804 -2.8313205 ]]
Iteration 600 of 1000: loss=0.878 " + "l1=0.0273" + "l2=0.85 f=-0.531 shape=(1, 9000, 1)
logits [[-0.2746495   0.4038062   0.43109217 -2.6838336 ]]
Iteration 700 of 1000: loss=0.8 " + "l1=0.018" + "l2=0.782 f=-0.524 shape=(1, 9000, 1)
logits [[-0.30464184  0.38285396  0.40088308 -2.5752006 ]]
Iteration 800 of 1000: loss=0.749 " + "l1=0.0123" + "l2=0.737 f=-0.514 shape=(1, 9000, 1)
logits [[-0.3065206  0.3708052  0.3831485 -2.5048542]]
Iteration 900 of 1000: loss=0.71 " + "l1=0.00775" + "l2=0.703 f=-0.505 shape=(1, 9000, 1)
logits [[-0.3242653   0.36025828  0.36801037 -2.4250584 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.68 " + "l1=2.68" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.8691099 -1.9961547  2.3436377 -5.048406 ]]
Iteration 100 of 1000: loss=1.47 " + "l1=1.07" + "l2=0.402 f=-0.473 shape=(1, 9000, 1)
logits [[ 1.3041164 -0.6193193  1.3270024 -3.9023402]]
Iteration 200 of 1000: loss=1.2 " + "l1=0.79" + "l2=0.41 f=-0.472 shape=(1, 9000, 1)
logits [[ 1.003092   -0.32831687  1.1077378  -3.6699367 ]]
Iteration 300 of 1000: loss=1.08 " + "l1=0.66" + "l2=0.416 f=-0.472 shape=(1, 9000, 1)
logits [[ 0.8415183  -0.2103947   0.98947257 -3.5087326 ]]
Iteration 400 of 1000: loss=0.985 " + "l1=0.571" + "l2=0.414 f=-0.476 shape=(1, 9000, 1)
logits [[ 0.7069122  -0.14375566  0.8940376  -3.3592324 ]]
Iteration 500 of 1000: loss=0.909 " + "l1=0.504" + "l2=0.405 f=-0.47 shape=(1, 9000, 1)
logits [[ 0.5836666  -0.09939349  0.8171906  -3.1797163 ]]
Iteration 600 of 1000: loss=0.829 " + "l1=0.406" + "l2=0.423 f=-0.475 shape=(1, 9000, 1)
logits [[ 0.4017031  -0.02103887  0.7175298  -2.998464  ]]
Iteration 700 of 1000: loss=0.764 " + "l1=0.335" + "l2=0.429 f=-0.472 shape=(1, 9000, 1)
logits [[ 0.29993513  0.03714888  0.6467339  -2.8709855 ]]
Iteration 800 of 1000: loss=0.716 " + "l1=0.266" + "l2=0.45 f=-0.469 shape=(1, 9000, 1)
logits [[ 0.15118468  0.08899857  0.572162   -2.6894197 ]]
Iteration 900 of 1000: loss=0.678 " + "l1=0.22" + "l2=0.458 f=-0.468 shape=(1, 9000, 1)
logits [[ 0.07159244  0.1313425   0.5311449  -2.6074328 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.77 " + "l1=3.77" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.8691099 -1.9961547  2.3436377 -5.048406 ]]
Iteration 100 of 1000: loss=1.79 " + "l1=1.15" + "l2=0.643 f=-0.477 shape=(1, 9000, 1)
logits [[ 1.0179329 -0.3436815  1.136179  -3.7172372]]
Iteration 200 of 1000: loss=1.43 " + "l1=0.828" + "l2=0.605 f=-0.486 shape=(1, 9000, 1)
logits [[ 0.73577964 -0.13024805  0.9380053  -3.4866679 ]]
Iteration 300 of 1000: loss=1.24 " + "l1=0.632" + "l2=0.604 f=-0.489 shape=(1, 9000, 1)
logits [[ 0.5127434  -0.01625855  0.7993704  -3.2527332 ]]
Iteration 400 of 1000: loss=1.11 " + "l1=0.49" + "l2=0.617 f=-0.494 shape=(1, 9000, 1)
logits [[ 0.3273044   0.06539837  0.69779104 -3.0653453 ]]
Iteration 500 of 1000: loss=0.992 " + "l1=0.36" + "l2=0.632 f=-0.491 shape=(1, 9000, 1)
logits [[ 0.15905005  0.12705594  0.5913064  -2.8411374 ]]
Iteration 600 of 1000: loss=0.889 " + "l1=0.26" + "l2=0.629 f=-0.497 shape=(1, 9000, 1)
logits [[ 0.01928736  0.19473056  0.5308338  -2.7315707 ]]
Iteration 700 of 1000: loss=0.815 " + "l1=0.185" + "l2=0.629 f=-0.494 shape=(1, 9000, 1)
logits [[-0.11151496  0.23530458  0.47463486 -2.5751731 ]]
Iteration 800 of 1000: loss=0.759 " + "l1=0.135" + "l2=0.624 f=-0.493 shape=(1, 9000, 1)
logits [[-0.17018956  0.26412868  0.43852755 -2.5057156 ]]
Iteration 900 of 1000: loss=0.721 " + "l1=0.0971" + "l2=0.624 f=-0.489 shape=(1, 9000, 1)
logits [[-0.2121626  0.2832018  0.4084709 -2.4347026]]
--- 294.46342945098877 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00525 " + "l1=0.00525" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.8691099 -1.9961547  2.3436377 -5.048406 ]]
Iteration 100 of 1000: loss=0.00506 " + "l1=0.00489" + "l2=0.000171 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.8308804 -1.99099    2.341776  -5.017543 ]]
Iteration 200 of 1000: loss=0.00501 " + "l1=0.00486" + "l2=0.00015 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.8269649 -1.9897033  2.340662  -5.0141025]]
Iteration 300 of 1000: loss=0.005 " + "l1=0.00481" + "l2=0.000187 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.8212435 -1.9882284  2.3399832 -5.009629 ]]
Iteration 400 of 1000: loss=0.00497 " + "l1=0.00476" + "l2=0.000206 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.8155353 -1.9864672  2.3394206 -5.00552  ]]
Iteration 500 of 1000: loss=0.00498 " + "l1=0.00471" + "l2=0.000275 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.809751  -1.9847271  2.338935  -5.0015116]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0525 " + "l1=0.0525" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.8691099 -1.9961547  2.3436377 -5.048406 ]]
Iteration 100 of 1000: loss=0.0369 " + "l1=0.0278" + "l2=0.00913 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.6065974 -1.9554058  2.3289576 -4.8289704]]
Iteration 200 of 1000: loss=0.0314 " + "l1=0.0195" + "l2=0.0119 f=-0.464 shape=(1, 9000, 1)
logits [[ 2.5115798 -1.9316406  2.3166068 -4.7545176]]
Iteration 300 of 1000: loss=0.0254 " + "l1=0.00995" + "l2=0.0155 f=-0.466 shape=(1, 9000, 1)
logits [[ 2.4076006 -1.9032415  2.3081317 -4.675461 ]]
Iteration 400 of 1000: loss=0.0201 " + "l1=0.00191" + "l2=0.0182 f=-0.466 shape=(1, 9000, 1)
logits [[ 2.3220735 -1.8766276  2.3029706 -4.610671 ]]
Iteration 500 of 1000: loss=0.0162 " + "l1=1.57e-05" + "l2=0.0162 f=-0.464 shape=(1, 9000, 1)
logits [[ 2.299388  -1.8633747  2.299231  -4.5897746]]
Iteration 600 of 1000: loss=0.0143 " + "l1=0.000183" + "l2=0.0142 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.300042  -1.8553542  2.2982109 -4.5917163]]
Iteration 700 of 1000: loss=0.0127 " + "l1=7.44e-06" + "l2=0.0127 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.2964113 -1.8475916  2.296337  -4.588141 ]]
Iteration 800 of 1000: loss=0.0119 " + "l1=0.000148" + "l2=0.0118 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.2974756 -1.8417323  2.2959952 -4.5866036]]
Iteration 900 of 1000: loss=0.0111 " + "l1=0.000164" + "l2=0.0109 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.2968888 -1.8352153  2.2952485 -4.583863 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0289 " + "l1=0.0289" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.8691099 -1.9961547  2.3436377 -5.048406 ]]
Iteration 100 of 1000: loss=0.0239 " + "l1=0.021" + "l2=0.0029 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.717216  -1.9726405  2.3347793 -4.9221444]]
Iteration 200 of 1000: loss=0.0225 " + "l1=0.0189" + "l2=0.00353 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.6745024 -1.963276   2.3301582 -4.8883214]]
Iteration 300 of 1000: loss=0.0212 " + "l1=0.0171" + "l2=0.00409 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.6357038 -1.952985   2.3252301 -4.8601832]]
Iteration 400 of 1000: loss=0.0198 " + "l1=0.015" + "l2=0.00478 f=-0.464 shape=(1, 9000, 1)
logits [[ 2.5932443 -1.9389157  2.3197238 -4.8301454]]
Iteration 500 of 1000: loss=0.0186 " + "l1=0.0131" + "l2=0.00543 f=-0.464 shape=(1, 9000, 1)
logits [[ 2.5537643 -1.924086   2.3149981 -4.8023915]]
Iteration 600 of 1000: loss=0.0174 " + "l1=0.011" + "l2=0.00639 f=-0.464 shape=(1, 9000, 1)
logits [[ 2.51056   -1.9084649  2.3101206 -4.7698464]]
Iteration 700 of 1000: loss=0.0161 " + "l1=0.00904" + "l2=0.00703 f=-0.464 shape=(1, 9000, 1)
logits [[ 2.4719994 -1.8955404  2.307693  -4.74184  ]]
Iteration 800 of 1000: loss=0.0149 " + "l1=0.00729" + "l2=0.00763 f=-0.464 shape=(1, 9000, 1)
logits [[ 2.4385686 -1.8821741  2.3061013 -4.7174773]]
Iteration 900 of 1000: loss=0.0138 " + "l1=0.00552" + "l2=0.00827 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.405348  -1.8704684  2.3050241 -4.6909227]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0407 " + "l1=0.0407" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.8691099 -1.9961547  2.3436377 -5.048406 ]]
Iteration 100 of 1000: loss=0.0311 " + "l1=0.0256" + "l2=0.0055 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.662533  -1.9637814  2.3316772 -4.876314 ]]
Iteration 200 of 1000: loss=0.0281 " + "l1=0.0212" + "l2=0.00695 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.5960398 -1.948716   2.3230402 -4.8230567]]
Iteration 300 of 1000: loss=0.0251 " + "l1=0.0167" + "l2=0.00839 f=-0.465 shape=(1, 9000, 1)
logits [[ 2.5302627 -1.9275694  2.3148878 -4.7759256]]
Iteration 400 of 1000: loss=0.0219 " + "l1=0.0115" + "l2=0.0104 f=-0.466 shape=(1, 9000, 1)
logits [[ 2.4561694 -1.9042443  2.3081317 -4.722294 ]]
Iteration 500 of 1000: loss=0.019 " + "l1=0.00704" + "l2=0.012 f=-0.465 shape=(1, 9000, 1)
logits [[ 2.3950825 -1.8849256  2.3043065 -4.676393 ]]
Iteration 600 of 1000: loss=0.0163 " + "l1=0.00316" + "l2=0.0132 f=-0.465 shape=(1, 9000, 1)
logits [[ 2.3410544 -1.8656236  2.3002393 -4.634417 ]]
Iteration 700 of 1000: loss=0.0141 " + "l1=0" + "l2=0.0141 f=-0.464 shape=(1, 9000, 1)
logits [[ 2.2965586 -1.8513521  2.2968686 -4.5963707]]
Iteration 800 of 1000: loss=0.0126 " + "l1=0.000268" + "l2=0.0124 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.2984412 -1.8441486  2.294984  -4.595603 ]]
Iteration 900 of 1000: loss=0.0114 " + "l1=0" + "l2=0.0114 f=-0.46 shape=(1, 9000, 1)
logits [[ 2.2936525 -1.8374784  2.2943754 -4.588683 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0348 " + "l1=0.0348" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.8691099 -1.9961547  2.3436377 -5.048406 ]]
Iteration 100 of 1000: loss=0.0277 " + "l1=0.0236" + "l2=0.0041 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.6906915 -1.9683765  2.3340714 -4.900606 ]]
Iteration 200 of 1000: loss=0.0256 " + "l1=0.0206" + "l2=0.00498 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.638088  -1.9562079  2.3270135 -4.8577986]]
Iteration 300 of 1000: loss=0.0235 " + "l1=0.0174" + "l2=0.00606 f=-0.464 shape=(1, 9000, 1)
logits [[ 2.5826256 -1.9395739  2.319394  -4.816841 ]]
Iteration 400 of 1000: loss=0.0214 " + "l1=0.0144" + "l2=0.00708 f=-0.465 shape=(1, 9000, 1)
logits [[ 2.530763  -1.9220757  2.31387   -4.7815423]]
Iteration 500 of 1000: loss=0.0194 " + "l1=0.0109" + "l2=0.00851 f=-0.465 shape=(1, 9000, 1)
logits [[ 2.4725056 -1.9025307  2.3080556 -4.738088 ]]
Iteration 600 of 1000: loss=0.0174 " + "l1=0.00782" + "l2=0.00957 f=-0.465 shape=(1, 9000, 1)
logits [[ 2.4237676 -1.8854544  2.3056679 -4.703256 ]]
Iteration 700 of 1000: loss=0.0156 " + "l1=0.005" + "l2=0.0106 f=-0.464 shape=(1, 9000, 1)
logits [[ 2.3790672 -1.870392   2.3036034 -4.669176 ]]
Iteration 800 of 1000: loss=0.014 " + "l1=0.00272" + "l2=0.0113 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.341997  -1.8579324  2.3009987 -4.6378093]]
Iteration 900 of 1000: loss=0.0125 " + "l1=0.000685" + "l2=0.0119 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.3079805 -1.8463998  2.2976444 -4.6056776]]
--- 265.07795691490173 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0792 " + "l1=0.0792" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.8691099 -1.9961547  2.3436377 -5.048406 ]]
Iteration 100 of 1000: loss=0.0779 " + "l1=0.0771" + "l2=0.000785 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.7755444 -1.9690028  2.3064349 -4.932119 ]]
Iteration 200 of 1000: loss=0.0775 " + "l1=0.0766" + "l2=0.000913 f=-0.454 shape=(1, 9000, 1)
logits [[ 2.753567  -1.9618456  2.2966769 -4.9052725]]
Iteration 300 of 1000: loss=0.0772 " + "l1=0.0761" + "l2=0.0011 f=-0.453 shape=(1, 9000, 1)
logits [[ 2.7318702 -1.954444   2.2870808 -4.8784237]]
Iteration 400 of 1000: loss=0.0769 " + "l1=0.0756" + "l2=0.00127 f=-0.453 shape=(1, 9000, 1)
logits [[ 2.7117403 -1.9472289  2.2779646 -4.8529487]]
Iteration 500 of 1000: loss=0.0767 " + "l1=0.0752" + "l2=0.00148 f=-0.452 shape=(1, 9000, 1)
logits [[ 2.6923172 -1.9399539  2.269223  -4.828408 ]]
Iteration 600 of 1000: loss=0.0764 " + "l1=0.0748" + "l2=0.00165 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.6740952 -1.9330941  2.2609742 -4.8048563]]
Iteration 700 of 1000: loss=0.0762 " + "l1=0.0744" + "l2=0.00186 f=-0.45 shape=(1, 9000, 1)
logits [[ 2.6566055 -1.9266496  2.253105  -4.7815847]]
Iteration 800 of 1000: loss=0.0761 " + "l1=0.074" + "l2=0.00207 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.6403544 -1.9207988  2.245965  -4.7589436]]
Iteration 900 of 1000: loss=0.0758 " + "l1=0.0736" + "l2=0.00218 f=-0.447 shape=(1, 9000, 1)
logits [[ 2.6259272 -1.9153576  2.239511  -4.738333 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.792 " + "l1=0.792" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.8691099 -1.9961547  2.3436377 -5.048406 ]]
Iteration 100 of 1000: loss=0.672 " + "l1=0.604" + "l2=0.0682 f=-0.427 shape=(1, 9000, 1)
logits [[ 2.030535  -1.7579335  2.031235  -4.0116944]]
Iteration 200 of 1000: loss=0.633 " + "l1=0.573" + "l2=0.0602 f=-0.416 shape=(1, 9000, 1)
logits [[ 1.9249017 -1.7105547  1.924529  -3.8045962]]
Iteration 300 of 1000: loss=0.605 " + "l1=0.541" + "l2=0.0633 f=-0.406 shape=(1, 9000, 1)
logits [[ 1.8103292 -1.6563835  1.8185151 -3.5964277]]
Iteration 400 of 1000: loss=0.578 " + "l1=0.509" + "l2=0.0693 f=-0.399 shape=(1, 9000, 1)
logits [[ 1.6872269 -1.5861744  1.6974669 -3.3948562]]
Iteration 500 of 1000: loss=0.555 " + "l1=0.479" + "l2=0.0769 f=-0.395 shape=(1, 9000, 1)
logits [[ 1.568266  -1.5156376  1.5772535 -3.2084591]]
Iteration 600 of 1000: loss=0.535 " + "l1=0.45" + "l2=0.0843 f=-0.385 shape=(1, 9000, 1)
logits [[ 1.4541768 -1.47058    1.4898179 -3.0147254]]
Iteration 700 of 1000: loss=0.516 " + "l1=0.429" + "l2=0.0867 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.362184  -1.4456482  1.4366229 -2.8513439]]
Iteration 800 of 1000: loss=0.498 " + "l1=0.407" + "l2=0.0904 f=-0.366 shape=(1, 9000, 1)
logits [[ 1.2674431 -1.4161319  1.378774  -2.692451 ]]
Iteration 900 of 1000: loss=0.48 " + "l1=0.387" + "l2=0.0932 f=-0.358 shape=(1, 9000, 1)
logits [[ 1.1923487 -1.3880287  1.3193532 -2.5537317]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.92 " + "l1=7.92" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.8691099 -1.9961547  2.3436377 -5.048406 ]]
Iteration 100 of 1000: loss=2.55 " + "l1=0.277" + "l2=2.28 f=-0.2 shape=(1, 9000, 1)
logits [[-0.45174578 -0.9851147   0.456934    0.18026799]]
Iteration 200 of 1000: loss=1.68 " + "l1=0" + "l2=1.68 f=-0.18 shape=(1, 9000, 1)
logits [[-0.4543668  -0.9864492   0.35578823  0.36521417]]
Iteration 300 of 1000: loss=1.41 " + "l1=0.0258" + "l2=1.38 f=-0.182 shape=(1, 9000, 1)
logits [[-0.40462086 -1.0132896   0.35795593  0.33217555]]
Iteration 400 of 1000: loss=1.24 " + "l1=0" + "l2=1.24 f=-0.186 shape=(1, 9000, 1)
logits [[-0.41122648 -1.0493717   0.35449925  0.36171246]]
Iteration 500 of 1000: loss=1.12 " + "l1=0" + "l2=1.12 f=-0.192 shape=(1, 9000, 1)
logits [[-0.4071311  -1.0830503   0.3511931   0.36921507]]
Iteration 600 of 1000: loss=1.03 " + "l1=0" + "l2=1.03 f=-0.196 shape=(1, 9000, 1)
logits [[-0.39109805 -1.1110545   0.3563278   0.3612697 ]]
Iteration 700 of 1000: loss=0.96 " + "l1=0" + "l2=0.96 f=-0.197 shape=(1, 9000, 1)
logits [[-0.37815076 -1.1340975   0.3590003   0.36462182]]
Iteration 800 of 1000: loss=0.9 " + "l1=0.0035" + "l2=0.897 f=-0.198 shape=(1, 9000, 1)
logits [[-0.36263445 -1.1492627   0.36193684  0.35843697]]
Iteration 900 of 1000: loss=0.868 " + "l1=0" + "l2=0.868 f=-0.195 shape=(1, 9000, 1)
logits [[-0.3718508  -1.1558001   0.34802037  0.40123212]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.35 " + "l1=4.35" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.8691099 -1.9961547  2.3436377 -5.048406 ]]
Iteration 100 of 1000: loss=2.28 " + "l1=1.4" + "l2=0.88 f=-0.296 shape=(1, 9000, 1)
logits [[ 0.44920817 -1.244039    1.076208   -1.4668391 ]]
Iteration 200 of 1000: loss=1.66 " + "l1=0.633" + "l2=1.02 f=-0.237 shape=(1, 9000, 1)
logits [[-0.04563165 -1.1401259   0.6929477  -0.4570993 ]]
Iteration 300 of 1000: loss=1.28 " + "l1=0.128" + "l2=1.15 f=-0.198 shape=(1, 9000, 1)
logits [[-0.36039028 -1.0918925   0.44699612  0.2145733 ]]
Iteration 400 of 1000: loss=1.04 " + "l1=0.0132" + "l2=1.02 f=-0.198 shape=(1, 9000, 1)
logits [[-0.42041785 -1.1161352   0.38491544  0.36091402]]
Iteration 500 of 1000: loss=0.887 " + "l1=0.00127" + "l2=0.886 f=-0.201 shape=(1, 9000, 1)
logits [[-0.41022673 -1.1525869   0.38021368  0.37791336]]
Iteration 600 of 1000: loss=0.815 " + "l1=0" + "l2=0.815 f=-0.197 shape=(1, 9000, 1)
logits [[-0.3981298 -1.173137   0.3790455  0.4035812]]
Iteration 700 of 1000: loss=0.748 " + "l1=0.00464" + "l2=0.744 f=-0.191 shape=(1, 9000, 1)
logits [[-0.35733527 -1.1868949   0.39398047  0.3855409 ]]
Iteration 800 of 1000: loss=0.705 " + "l1=0" + "l2=0.705 f=-0.185 shape=(1, 9000, 1)
logits [[-0.34820065 -1.1801636   0.3860023   0.40177447]]
Iteration 900 of 1000: loss=0.667 " + "l1=0" + "l2=0.667 f=-0.181 shape=(1, 9000, 1)
logits [[-0.33522204 -1.182489    0.39242584  0.40083104]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.57 " + "l1=2.57" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.8691099 -1.9961547  2.3436377 -5.048406 ]]
Iteration 100 of 1000: loss=1.72 " + "l1=1.39" + "l2=0.328 f=-0.356 shape=(1, 9000, 1)
logits [[ 1.289912  -1.4327337  1.4987913 -2.781327 ]]
Iteration 200 of 1000: loss=1.41 " + "l1=0.965" + "l2=0.449 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.69948053 -1.3158219   1.1605403  -1.809066  ]]
Iteration 300 of 1000: loss=1.21 " + "l1=0.673" + "l2=0.537 f=-0.289 shape=(1, 9000, 1)
logits [[ 0.35866886 -1.2761499   0.91495275 -1.1549854 ]]
Iteration 400 of 1000: loss=1.06 " + "l1=0.505" + "l2=0.558 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.19364297 -1.2394121   0.7660585  -0.7890846 ]]
Iteration 500 of 1000: loss=0.956 " + "l1=0.367" + "l2=0.589 f=-0.251 shape=(1, 9000, 1)
logits [[ 0.0469941  -1.2191526   0.64840674 -0.48072422]]
Iteration 600 of 1000: loss=0.869 " + "l1=0.236" + "l2=0.632 f=-0.233 shape=(1, 9000, 1)
logits [[-0.09164168 -1.2131381   0.5506535  -0.17637828]]
Iteration 700 of 1000: loss=0.79 " + "l1=0.129" + "l2=0.661 f=-0.209 shape=(1, 9000, 1)
logits [[-0.19387087 -1.1719103   0.46389574  0.06654346]]
Iteration 800 of 1000: loss=0.728 " + "l1=0.0489" + "l2=0.679 f=-0.197 shape=(1, 9000, 1)
logits [[-0.27756494 -1.1485131   0.39437047  0.24376783]]
Iteration 900 of 1000: loss=0.676 " + "l1=0.026" + "l2=0.65 f=-0.194 shape=(1, 9000, 1)
logits [[-0.2887623  -1.1494639   0.37193397  0.29191244]]
--- 295.1921195983887 seconds ---
Adv result:3
Loading record A06713
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0567 " + "l1=0.0567" + "l2=0 f=-0.321 shape=(1, 9000, 1)
logits [[ 3.416084  -2.2577634  2.881642  -5.3228583]]
Iteration 100 of 1000: loss=0.0564 " + "l1=0.0562" + "l2=0.000254 f=-0.32 shape=(1, 9000, 1)
logits [[ 3.377107  -2.2386827  2.867704  -5.284455 ]]
Iteration 200 of 1000: loss=0.0563 " + "l1=0.0561" + "l2=0.000246 f=-0.319 shape=(1, 9000, 1)
logits [[ 3.3719175 -2.2358987  2.8654475 -5.279272 ]]
Iteration 300 of 1000: loss=0.0562 " + "l1=0.056" + "l2=0.00028 f=-0.319 shape=(1, 9000, 1)
logits [[ 3.3644006 -2.2321706  2.8623788 -5.2718215]]
Iteration 400 of 1000: loss=0.0562 " + "l1=0.0558" + "l2=0.000373 f=-0.319 shape=(1, 9000, 1)
logits [[ 3.3565888 -2.2281618  2.8591433 -5.264006 ]]
Iteration 500 of 1000: loss=0.0562 " + "l1=0.0557" + "l2=0.000438 f=-0.319 shape=(1, 9000, 1)
logits [[ 3.3486874 -2.2240782  2.855812  -5.2561784]]
Iteration 600 of 1000: loss=0.0561 " + "l1=0.0556" + "l2=0.000535 f=-0.319 shape=(1, 9000, 1)
logits [[ 3.3409665 -2.2198684  2.8525138 -5.248579 ]]
Iteration 700 of 1000: loss=0.0561 " + "l1=0.0555" + "l2=0.000638 f=-0.319 shape=(1, 9000, 1)
logits [[ 3.3335056 -2.2157075  2.8492653 -5.2412267]]
Iteration 800 of 1000: loss=0.0561 " + "l1=0.0554" + "l2=0.000763 f=-0.318 shape=(1, 9000, 1)
logits [[ 3.3266048 -2.211738   2.8461483 -5.234452 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.567 " + "l1=0.567" + "l2=0 f=-0.321 shape=(1, 9000, 1)
logits [[ 3.416084  -2.2577634  2.881642  -5.3228583]]
Iteration 100 of 1000: loss=0.538 " + "l1=0.52" + "l2=0.0178 f=-0.313 shape=(1, 9000, 1)
logits [[ 3.1018162 -2.0988135  2.7639236 -5.020295 ]]
Iteration 200 of 1000: loss=0.527 " + "l1=0.506" + "l2=0.0206 f=-0.311 shape=(1, 9000, 1)
logits [[ 3.0039544 -2.059691   2.7325857 -4.921571 ]]
Iteration 300 of 1000: loss=0.518 " + "l1=0.494" + "l2=0.0242 f=-0.31 shape=(1, 9000, 1)
logits [[ 2.9132216 -2.0263376  2.7032917 -4.8305182]]
Iteration 400 of 1000: loss=0.51 " + "l1=0.482" + "l2=0.0285 f=-0.308 shape=(1, 9000, 1)
logits [[ 2.8276827 -1.98989    2.6738663 -4.743664 ]]
Iteration 500 of 1000: loss=0.503 " + "l1=0.47" + "l2=0.0327 f=-0.306 shape=(1, 9000, 1)
logits [[ 2.74407   -1.9555061  2.6414614 -4.6546373]]
Iteration 600 of 1000: loss=0.496 " + "l1=0.46" + "l2=0.0364 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.6731212 -1.9236971  2.6097698 -4.5781984]]
Iteration 700 of 1000: loss=0.49 " + "l1=0.451" + "l2=0.0391 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.616237  -1.8967249  2.5824707 -4.5160475]]
Iteration 800 of 1000: loss=0.485 " + "l1=0.443" + "l2=0.042 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.559681  -1.8705497  2.554981  -4.4514995]]
Iteration 900 of 1000: loss=0.48 " + "l1=0.438" + "l2=0.042 f=-0.299 shape=(1, 9000, 1)
logits [[ 2.5319564 -1.847696   2.5302866 -4.4125447]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.67 " + "l1=5.67" + "l2=0 f=-0.321 shape=(1, 9000, 1)
logits [[ 3.416084  -2.2577634  2.881642  -5.3228583]]
Iteration 100 of 1000: loss=4.07 " + "l1=3.48" + "l2=0.59 f=-0.253 shape=(1, 9000, 1)
logits [[ 2.1220784 -1.3419113  2.142253  -3.935972 ]]
Iteration 200 of 1000: loss=3.61 " + "l1=2.84" + "l2=0.77 f=-0.22 shape=(1, 9000, 1)
logits [[ 1.7591782 -1.0446419  1.7932546 -3.3891037]]
Iteration 300 of 1000: loss=3.18 " + "l1=2.24" + "l2=0.934 f=-0.205 shape=(1, 9000, 1)
logits [[ 1.2824376  -0.83795947  1.4042535  -2.6678882 ]]
Iteration 400 of 1000: loss=2.78 " + "l1=1.72" + "l2=1.06 f=-0.208 shape=(1, 9000, 1)
logits [[ 0.96489805 -0.64025545  1.0782118  -2.233841  ]]
Iteration 500 of 1000: loss=2.46 " + "l1=1.38" + "l2=1.08 f=-0.187 shape=(1, 9000, 1)
logits [[ 0.7377    -0.4837984  0.892372  -1.8948247]]
Iteration 600 of 1000: loss=2.11 " + "l1=0.891" + "l2=1.22 f=-0.129 shape=(1, 9000, 1)
logits [[ 0.37264234 -0.23791467  0.65345836 -1.3038428 ]]
Iteration 700 of 1000: loss=1.79 " + "l1=0.5" + "l2=1.29 f=-0.0858 shape=(1, 9000, 1)
logits [[ 0.0751709  -0.05895124  0.44119552 -0.8004224 ]]
Iteration 800 of 1000: loss=1.57 " + "l1=0.241" + "l2=1.32 f=-0.0621 shape=(1, 9000, 1)
logits [[-0.15971752  0.05805162  0.29899135 -0.4456701 ]]
Iteration 900 of 1000: loss=1.42 " + "l1=0.0843" + "l2=1.34 f=-0.0669 shape=(1, 9000, 1)
logits [[-0.3100789   0.12497387  0.20926772 -0.2918346 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.12 " + "l1=3.12" + "l2=0 f=-0.321 shape=(1, 9000, 1)
logits [[ 3.416084  -2.2577634  2.881642  -5.3228583]]
Iteration 100 of 1000: loss=2.48 " + "l1=2.24" + "l2=0.245 f=-0.277 shape=(1, 9000, 1)
logits [[ 2.414705  -1.6485745  2.4169037 -4.2894316]]
Iteration 200 of 1000: loss=2.32 " + "l1=2.04" + "l2=0.281 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.2161925 -1.4693818  2.2345037 -4.0614347]]
Iteration 300 of 1000: loss=2.2 " + "l1=1.88" + "l2=0.32 f=-0.256 shape=(1, 9000, 1)
logits [[ 2.0522656 -1.3454489  2.0798185 -3.8100767]]
Iteration 400 of 1000: loss=2.11 " + "l1=1.73" + "l2=0.379 f=-0.235 shape=(1, 9000, 1)
logits [[ 1.8491993 -1.2234635  1.9151323 -3.4797273]]
Iteration 500 of 1000: loss=2.02 " + "l1=1.62" + "l2=0.401 f=-0.234 shape=(1, 9000, 1)
logits [[ 1.6911455 -1.1558586  1.7960945 -3.2666128]]
Iteration 600 of 1000: loss=1.95 " + "l1=1.49" + "l2=0.459 f=-0.235 shape=(1, 9000, 1)
logits [[ 1.5065527 -1.0624475  1.6427741 -3.026522 ]]
Iteration 700 of 1000: loss=1.83 " + "l1=1.27" + "l2=0.557 f=-0.231 shape=(1, 9000, 1)
logits [[ 1.2058439  -0.90113276  1.4078209  -2.6377857 ]]
Iteration 800 of 1000: loss=1.65 " + "l1=1.04" + "l2=0.613 f=-0.237 shape=(1, 9000, 1)
logits [[ 0.90342873 -0.7338483   1.1505798  -2.268613  ]]
Iteration 900 of 1000: loss=1.52 " + "l1=0.884" + "l2=0.633 f=-0.238 shape=(1, 9000, 1)
logits [[ 0.7096932 -0.5978759  1.0095239 -2.0719597]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.4 " + "l1=4.4" + "l2=0 f=-0.321 shape=(1, 9000, 1)
logits [[ 3.416084  -2.2577634  2.881642  -5.3228583]]
Iteration 100 of 1000: loss=3.31 " + "l1=2.91" + "l2=0.408 f=-0.261 shape=(1, 9000, 1)
logits [[ 2.2604682 -1.4815031  2.2682345 -4.0901785]]
Iteration 200 of 1000: loss=3.03 " + "l1=2.53" + "l2=0.492 f=-0.247 shape=(1, 9000, 1)
logits [[ 1.9989848 -1.2473227  2.0223672 -3.7606494]]
Iteration 300 of 1000: loss=2.79 " + "l1=2.17" + "l2=0.62 f=-0.222 shape=(1, 9000, 1)
logits [[ 1.6730576 -1.0557809  1.7445501 -3.2495062]]
Iteration 400 of 1000: loss=2.57 " + "l1=1.82" + "l2=0.752 f=-0.207 shape=(1, 9000, 1)
logits [[ 1.3291811  -0.89973634  1.4492605  -2.7063737 ]]
Iteration 500 of 1000: loss=2.33 " + "l1=1.49" + "l2=0.832 f=-0.207 shape=(1, 9000, 1)
logits [[ 1.0453761 -0.7508374  1.1776854 -2.301618 ]]
Iteration 600 of 1000: loss=2.09 " + "l1=1.24" + "l2=0.843 f=-0.195 shape=(1, 9000, 1)
logits [[ 0.83234924 -0.60292846  1.0014197  -2.0112407 ]]
Iteration 700 of 1000: loss=1.88 " + "l1=0.981" + "l2=0.894 f=-0.163 shape=(1, 9000, 1)
logits [[ 0.60608363 -0.4205065   0.84559417 -1.6846848 ]]
Iteration 800 of 1000: loss=1.67 " + "l1=0.678" + "l2=0.993 f=-0.118 shape=(1, 9000, 1)
logits [[ 0.31961474 -0.23811008  0.63688505 -1.1909418 ]]
Iteration 900 of 1000: loss=1.5 " + "l1=0.482" + "l2=1.02 f=-0.0925 shape=(1, 9000, 1)
logits [[ 0.09215914 -0.12694585  0.49498662 -0.8303209 ]]
--- 283.8995132446289 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00534 " + "l1=0.00534" + "l2=0 f=-0.321 shape=(1, 9000, 1)
logits [[ 3.416084  -2.2577634  2.881642  -5.3228583]]
Iteration 100 of 1000: loss=0.00524 " + "l1=0.00512" + "l2=0.000122 f=-0.321 shape=(1, 9000, 1)
logits [[ 3.3911235 -2.2547948  2.8795066 -5.2990727]]
Iteration 200 of 1000: loss=0.00521 " + "l1=0.00511" + "l2=9.65e-05 f=-0.321 shape=(1, 9000, 1)
logits [[ 3.3901684 -2.25434    2.879157  -5.297881 ]]
Iteration 300 of 1000: loss=0.0052 " + "l1=0.00508" + "l2=0.000113 f=-0.321 shape=(1, 9000, 1)
logits [[ 3.38698   -2.2536385  2.8786035 -5.2945886]]
Iteration 400 of 1000: loss=0.00521 " + "l1=0.00506" + "l2=0.000153 f=-0.321 shape=(1, 9000, 1)
logits [[ 3.3835328 -2.2529273  2.8779814 -5.2909937]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0534 " + "l1=0.0534" + "l2=0 f=-0.321 shape=(1, 9000, 1)
logits [[ 3.416084  -2.2577634  2.881642  -5.3228583]]
Iteration 100 of 1000: loss=0.0435 " + "l1=0.0374" + "l2=0.00603 f=-0.322 shape=(1, 9000, 1)
logits [[ 3.2403834 -2.2357085  2.8661861 -5.16078  ]]
Iteration 200 of 1000: loss=0.0402 " + "l1=0.0328" + "l2=0.00741 f=-0.322 shape=(1, 9000, 1)
logits [[ 3.1865616 -2.2271988  2.8583467 -5.10766  ]]
Iteration 300 of 1000: loss=0.0374 " + "l1=0.0281" + "l2=0.00924 f=-0.322 shape=(1, 9000, 1)
logits [[ 3.130786  -2.2172167  2.8496606 -5.0530047]]
Iteration 400 of 1000: loss=0.0352 " + "l1=0.0245" + "l2=0.0108 f=-0.322 shape=(1, 9000, 1)
logits [[ 3.0869284 -2.211814   2.8422568 -5.0073466]]
Iteration 500 of 1000: loss=0.0335 " + "l1=0.0213" + "l2=0.0123 f=-0.323 shape=(1, 9000, 1)
logits [[ 3.0481877 -2.2071624  2.8355873 -4.9669805]]
Iteration 600 of 1000: loss=0.0319 " + "l1=0.0183" + "l2=0.0136 f=-0.323 shape=(1, 9000, 1)
logits [[ 3.0148919 -2.2046032  2.8314934 -4.931972 ]]
Iteration 700 of 1000: loss=0.0305 " + "l1=0.0158" + "l2=0.0148 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.9851322 -2.20242    2.8274167 -4.8992996]]
Iteration 800 of 1000: loss=0.0292 " + "l1=0.0132" + "l2=0.016 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.9558337 -2.2016623  2.8241117 -4.8666043]]
Iteration 900 of 1000: loss=0.0279 " + "l1=0.0108" + "l2=0.0171 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.9289181 -2.2017303  2.8211863 -4.83657  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.534 " + "l1=0.534" + "l2=0 f=-0.321 shape=(1, 9000, 1)
logits [[ 3.416084  -2.2577634  2.881642  -5.3228583]]
Iteration 100 of 1000: loss=0.0661 " + "l1=0" + "l2=0.0661 f=-0.327 shape=(1, 9000, 1)
logits [[ 2.8240833 -2.1997676  2.8328118 -4.7657285]]
Iteration 200 of 1000: loss=0.0467 " + "l1=0" + "l2=0.0467 f=-0.325 shape=(1, 9000, 1)
logits [[ 2.8212826 -2.198282   2.8268769 -4.748395 ]]
Iteration 300 of 1000: loss=0.0389 " + "l1=0.00138" + "l2=0.0375 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.818024  -2.191365   2.8166416 -4.738447 ]]
Iteration 400 of 1000: loss=0.0348 " + "l1=0" + "l2=0.0348 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.8034544 -2.1867023  2.8095288 -4.7158465]]
Iteration 500 of 1000: loss=0.0319 " + "l1=0" + "l2=0.0319 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.8011625 -2.1836305  2.8039467 -4.707915 ]]
Iteration 600 of 1000: loss=0.03 " + "l1=0" + "l2=0.03 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.7883542 -2.1792471  2.795927  -4.691688 ]]
Iteration 700 of 1000: loss=0.0305 " + "l1=0.0036" + "l2=0.0269 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.7931728 -2.177878   2.7895765 -4.693649 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.294 " + "l1=0.294" + "l2=0 f=-0.321 shape=(1, 9000, 1)
logits [[ 3.416084  -2.2577634  2.881642  -5.3228583]]
Iteration 100 of 1000: loss=0.0649 " + "l1=0.00321" + "l2=0.0617 f=-0.327 shape=(1, 9000, 1)
logits [[ 2.8399298 -2.200035   2.8341014 -4.7826595]]
Iteration 200 of 1000: loss=0.0471 " + "l1=0.00309" + "l2=0.044 f=-0.325 shape=(1, 9000, 1)
logits [[ 2.8338237 -2.1968408  2.82821   -4.7648644]]
Iteration 300 of 1000: loss=0.0399 " + "l1=0.00367" + "l2=0.0362 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.8252113 -2.1907904  2.8185318 -4.748878 ]]
Iteration 400 of 1000: loss=0.0339 " + "l1=0" + "l2=0.0339 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.8076284 -2.1854677  2.8118124 -4.7232604]]
Iteration 500 of 1000: loss=0.0314 " + "l1=0" + "l2=0.0314 f=-0.321 shape=(1, 9000, 1)
logits [[ 2.8016691 -2.183624   2.8075438 -4.710976 ]]
Iteration 600 of 1000: loss=0.0288 " + "l1=0" + "l2=0.0288 f=-0.321 shape=(1, 9000, 1)
logits [[ 2.800582  -2.1823847  2.801589  -4.70559  ]]
Iteration 700 of 1000: loss=0.027 " + "l1=0" + "l2=0.027 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.7944875 -2.181445   2.7945142 -4.696754 ]]
Iteration 800 of 1000: loss=0.0272 " + "l1=0" + "l2=0.0272 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.7753003 -2.1816583  2.7908914 -4.6768007]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.174 " + "l1=0.174" + "l2=0 f=-0.321 shape=(1, 9000, 1)
logits [[ 3.416084  -2.2577634  2.881642  -5.3228583]]
Iteration 100 of 1000: loss=0.0688 " + "l1=0.00438" + "l2=0.0644 f=-0.328 shape=(1, 9000, 1)
logits [[ 2.8502252 -2.2034917  2.8367527 -4.7963996]]
Iteration 200 of 1000: loss=0.0458 " + "l1=0.000622" + "l2=0.0451 f=-0.325 shape=(1, 9000, 1)
logits [[ 2.8318205 -2.1968837  2.8299057 -4.7659984]]
Iteration 300 of 1000: loss=0.0373 " + "l1=0.000426" + "l2=0.0369 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.8225563 -2.190716   2.8212454 -4.750377 ]]
Iteration 400 of 1000: loss=0.0351 " + "l1=0.00357" + "l2=0.0315 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.8275273 -2.1882184  2.8165448 -4.7441616]]
Iteration 500 of 1000: loss=0.0304 " + "l1=0.000345" + "l2=0.0301 f=-0.321 shape=(1, 9000, 1)
logits [[ 2.8139393 -2.187207   2.812879  -4.725236 ]]
Iteration 600 of 1000: loss=0.0282 " + "l1=0" + "l2=0.0282 f=-0.321 shape=(1, 9000, 1)
logits [[ 2.809763  -2.1895325  2.8100784 -4.7153788]]
Iteration 700 of 1000: loss=0.0278 " + "l1=0" + "l2=0.0278 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.788204  -2.1867461  2.8013263 -4.6939797]]
Iteration 800 of 1000: loss=0.0259 " + "l1=0.00161" + "l2=0.0243 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.8040357 -2.1912696  2.7990675 -4.7051616]]
Iteration 900 of 1000: loss=0.0234 " + "l1=5.73e-06" + "l2=0.0234 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.7964232 -2.1949582  2.7964056 -4.69553  ]]
--- 232.52685809135437 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0874 " + "l1=0.0874" + "l2=0 f=-0.321 shape=(1, 9000, 1)
logits [[ 3.416084  -2.2577634  2.881642  -5.3228583]]
Iteration 100 of 1000: loss=0.0866 " + "l1=0.0861" + "l2=0.000489 f=-0.318 shape=(1, 9000, 1)
logits [[ 3.3587708 -2.2459178  2.8630965 -5.2480054]]
Iteration 200 of 1000: loss=0.0863 " + "l1=0.0858" + "l2=0.000533 f=-0.317 shape=(1, 9000, 1)
logits [[ 3.3469539 -2.2430322  2.8584929 -5.2321997]]
Iteration 300 of 1000: loss=0.0861 " + "l1=0.0855" + "l2=0.000658 f=-0.317 shape=(1, 9000, 1)
logits [[ 3.333159  -2.239911   2.8533397 -5.2133436]]
Iteration 400 of 1000: loss=0.0859 " + "l1=0.0851" + "l2=0.000786 f=-0.316 shape=(1, 9000, 1)
logits [[ 3.3193865 -2.2365718  2.847941  -5.194329 ]]
Iteration 500 of 1000: loss=0.0858 " + "l1=0.0848" + "l2=0.000962 f=-0.315 shape=(1, 9000, 1)
logits [[ 3.3059604 -2.233287   2.8425949 -5.1755095]]
Iteration 600 of 1000: loss=0.0857 " + "l1=0.0845" + "l2=0.00115 f=-0.314 shape=(1, 9000, 1)
logits [[ 3.2932737 -2.2303865  2.8374765 -5.15737  ]]
Iteration 700 of 1000: loss=0.0855 " + "l1=0.0842" + "l2=0.00133 f=-0.313 shape=(1, 9000, 1)
logits [[ 3.2815585 -2.2275934  2.8325264 -5.1404343]]
Iteration 800 of 1000: loss=0.0854 " + "l1=0.0839" + "l2=0.00148 f=-0.313 shape=(1, 9000, 1)
logits [[ 3.2701612 -2.2247472  2.8275447 -5.124166 ]]
Iteration 900 of 1000: loss=0.0854 " + "l1=0.0837" + "l2=0.0017 f=-0.312 shape=(1, 9000, 1)
logits [[ 3.2599792 -2.2222242  2.8227522 -5.1092467]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.874 " + "l1=0.874" + "l2=0 f=-0.321 shape=(1, 9000, 1)
logits [[ 3.416084  -2.2577634  2.881642  -5.3228583]]
Iteration 100 of 1000: loss=0.798 " + "l1=0.756" + "l2=0.0421 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.8951764 -2.1405272  2.7055287 -4.6647587]]
Iteration 200 of 1000: loss=0.762 " + "l1=0.704" + "l2=0.0583 f=-0.291 shape=(1, 9000, 1)
logits [[ 2.6805184 -2.1169605  2.629631  -4.3562727]]
Iteration 300 of 1000: loss=0.732 " + "l1=0.672" + "l2=0.0602 f=-0.281 shape=(1, 9000, 1)
logits [[ 2.570203  -2.1100597  2.569811  -4.152543 ]]
Iteration 400 of 1000: loss=0.713 " + "l1=0.653" + "l2=0.0601 f=-0.272 shape=(1, 9000, 1)
logits [[ 2.5166311 -2.1073759  2.5183332 -4.014295 ]]
Iteration 500 of 1000: loss=0.699 " + "l1=0.634" + "l2=0.0646 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.45062   -2.1034834  2.4687781 -3.8713791]]
Iteration 600 of 1000: loss=0.687 " + "l1=0.617" + "l2=0.0701 f=-0.258 shape=(1, 9000, 1)
logits [[ 2.3785424 -2.099389   2.4262168 -3.7391608]]
Iteration 700 of 1000: loss=0.676 " + "l1=0.601" + "l2=0.075 f=-0.253 shape=(1, 9000, 1)
logits [[ 2.3182335 -2.0983548  2.390072  -3.6229715]]
Iteration 800 of 1000: loss=0.667 " + "l1=0.586" + "l2=0.0807 f=-0.248 shape=(1, 9000, 1)
logits [[ 2.2554476 -2.094916   2.3538914 -3.507081 ]]
Iteration 900 of 1000: loss=0.656 " + "l1=0.568" + "l2=0.0879 f=-0.243 shape=(1, 9000, 1)
logits [[ 2.177974  -2.0887456  2.3122528 -3.3717444]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.74 " + "l1=8.74" + "l2=0 f=-0.321 shape=(1, 9000, 1)
logits [[ 3.416084  -2.2577634  2.881642  -5.3228583]]
Iteration 100 of 1000: loss=3.55 " + "l1=0.946" + "l2=2.61 f=-0.0276 shape=(1, 9000, 1)
logits [[-0.00258619 -1.7241693   1.2811222   0.335213  ]]
Iteration 200 of 1000: loss=1.88 " + "l1=0.0873" + "l2=1.79 f=-0.0271 shape=(1, 9000, 1)
logits [[-0.3245201  -1.6824398   0.99293405  0.90559536]]
Iteration 300 of 1000: loss=1.44 " + "l1=0.0306" + "l2=1.41 f=-0.0399 shape=(1, 9000, 1)
logits [[-0.33037594 -1.6746817   0.9379233   0.9073453 ]]
Iteration 400 of 1000: loss=1.27 " + "l1=0" + "l2=1.27 f=-0.0488 shape=(1, 9000, 1)
logits [[-0.35232925 -1.6730019   0.91033876  0.9198903 ]]
Iteration 500 of 1000: loss=1.17 " + "l1=0" + "l2=1.17 f=-0.0533 shape=(1, 9000, 1)
logits [[-0.37063408 -1.6634339   0.9051917   0.9157411 ]]
Iteration 600 of 1000: loss=1.1 " + "l1=0" + "l2=1.1 f=-0.0545 shape=(1, 9000, 1)
logits [[-0.39045605 -1.6597905   0.8955713   0.93667775]]
Iteration 700 of 1000: loss=1.02 " + "l1=0.0115" + "l2=1.01 f=-0.0574 shape=(1, 9000, 1)
logits [[-0.36975145 -1.6613107   0.90642166  0.89489037]]
Iteration 800 of 1000: loss=0.959 " + "l1=0" + "l2=0.959 f=-0.0552 shape=(1, 9000, 1)
logits [[-0.37413028 -1.6608844   0.9007474   0.9134075 ]]
Iteration 900 of 1000: loss=0.91 " + "l1=0" + "l2=0.91 f=-0.054 shape=(1, 9000, 1)
logits [[-0.3725786  -1.6558516   0.89477926  0.91783714]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.81 " + "l1=4.81" + "l2=0 f=-0.321 shape=(1, 9000, 1)
logits [[ 3.416084  -2.2577634  2.881642  -5.3228583]]
Iteration 100 of 1000: loss=3.08 " + "l1=2.29" + "l2=0.797 f=-0.196 shape=(1, 9000, 1)
logits [[ 1.3255329 -1.9000155  1.9733609 -2.1822572]]
Iteration 200 of 1000: loss=2.19 " + "l1=1.09" + "l2=1.11 f=-0.158 shape=(1, 9000, 1)
logits [[ 0.24584737 -1.8184756   1.4606024  -0.51898915]]
Iteration 300 of 1000: loss=1.37 " + "l1=0.00763" + "l2=1.36 f=-0.0765 shape=(1, 9000, 1)
logits [[-0.41120982 -1.6661935   0.892735    0.8788566 ]]
Iteration 400 of 1000: loss=1.12 " + "l1=0.0187" + "l2=1.1 f=-0.0696 shape=(1, 9000, 1)
logits [[-0.33728465 -1.6684792   0.8806658   0.84674644]]
Iteration 500 of 1000: loss=0.997 " + "l1=0" + "l2=0.997 f=-0.0635 shape=(1, 9000, 1)
logits [[-0.3380394 -1.6739985  0.8778537  0.8802144]]
Iteration 600 of 1000: loss=0.93 " + "l1=0" + "l2=0.93 f=-0.0625 shape=(1, 9000, 1)
logits [[-0.33830515 -1.6720384   0.87044793  0.88971436]]
Iteration 700 of 1000: loss=0.871 " + "l1=0" + "l2=0.871 f=-0.0609 shape=(1, 9000, 1)
logits [[-0.3304981  -1.6735247   0.87522024  0.8853958 ]]
Iteration 800 of 1000: loss=0.826 " + "l1=0" + "l2=0.826 f=-0.0595 shape=(1, 9000, 1)
logits [[-0.3501243 -1.6755352  0.8715772  0.9159211]]
Iteration 900 of 1000: loss=0.78 " + "l1=0" + "l2=0.78 f=-0.0588 shape=(1, 9000, 1)
logits [[-0.35793132 -1.6797595   0.8729726   0.9297032 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.84 " + "l1=2.84" + "l2=0 f=-0.321 shape=(1, 9000, 1)
logits [[ 3.416084  -2.2577634  2.881642  -5.3228583]]
Iteration 100 of 1000: loss=2.17 " + "l1=1.88" + "l2=0.289 f=-0.233 shape=(1, 9000, 1)
logits [[ 2.1452732 -2.0020773  2.353642  -3.4272697]]
Iteration 200 of 1000: loss=1.86 " + "l1=1.44" + "l2=0.417 f=-0.204 shape=(1, 9000, 1)
logits [[ 1.5057868 -1.9220699  2.021301  -2.422137 ]]
Iteration 300 of 1000: loss=1.59 " + "l1=1.03" + "l2=0.556 f=-0.19 shape=(1, 9000, 1)
logits [[ 0.9070844 -1.8540502  1.6791637 -1.4928448]]
Iteration 400 of 1000: loss=1.37 " + "l1=0.71" + "l2=0.661 f=-0.176 shape=(1, 9000, 1)
logits [[ 0.41123623 -1.8127934   1.4412918  -0.7439912 ]]
Iteration 500 of 1000: loss=1.13 " + "l1=0.318" + "l2=0.815 f=-0.126 shape=(1, 9000, 1)
logits [[-0.07224818 -1.6834365   1.1159453   0.13709259]]
Iteration 600 of 1000: loss=0.896 " + "l1=0.0213" + "l2=0.874 f=-0.0894 shape=(1, 9000, 1)
logits [[-0.371956  -1.650008   0.8649857  0.7995717]]
Iteration 700 of 1000: loss=0.761 " + "l1=0.00729" + "l2=0.754 f=-0.0708 shape=(1, 9000, 1)
logits [[-0.3557918  -1.6623904   0.87875926  0.85631603]]
Iteration 800 of 1000: loss=0.671 " + "l1=0" + "l2=0.671 f=-0.0653 shape=(1, 9000, 1)
logits [[-0.3601044  -1.6667238   0.8818041   0.88401204]]
Iteration 900 of 1000: loss=0.606 " + "l1=0.000899" + "l2=0.605 f=-0.061 shape=(1, 9000, 1)
logits [[-0.35435942 -1.6705538   0.89193743  0.8891712 ]]
--- 295.712521314621 seconds ---
Adv result:3
Loading record A06725
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0454 " + "l1=0.0454" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.192866  -1.3466728  1.7728323 -5.642143 ]]
Iteration 100 of 1000: loss=0.0448 " + "l1=0.0444" + "l2=0.000351 f=-0.503 shape=(1, 9000, 1)
logits [[ 3.133348  -1.3115752  1.7555819 -5.5904446]]
Iteration 200 of 1000: loss=0.0446 " + "l1=0.0443" + "l2=0.000385 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.12169   -1.304115   1.7525059 -5.5796614]]
Iteration 300 of 1000: loss=0.0445 " + "l1=0.044" + "l2=0.000467 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.1081526 -1.2956545  1.7491044 -5.568032 ]]
Iteration 400 of 1000: loss=0.0444 " + "l1=0.0438" + "l2=0.000582 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.09524   -1.2879514  1.7460538 -5.556979 ]]
Iteration 500 of 1000: loss=0.0443 " + "l1=0.0436" + "l2=0.000703 f=-0.5 shape=(1, 9000, 1)
logits [[ 3.0834105 -1.2808539  1.7434026 -5.547419 ]]
Iteration 600 of 1000: loss=0.0442 " + "l1=0.0435" + "l2=0.00076 f=-0.5 shape=(1, 9000, 1)
logits [[ 3.0725079 -1.2744919  1.7411572 -5.5390644]]
Iteration 700 of 1000: loss=0.0443 " + "l1=0.0433" + "l2=0.000956 f=-0.5 shape=(1, 9000, 1)
logits [[ 3.0627942 -1.268948   1.7393868 -5.532007 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.454 " + "l1=0.454" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.192866  -1.3466728  1.7728323 -5.642143 ]]
Iteration 100 of 1000: loss=0.404 " + "l1=0.378" + "l2=0.0259 f=-0.485 shape=(1, 9000, 1)
logits [[ 2.7171197 -1.0662942  1.6188629 -5.2079816]]
Iteration 200 of 1000: loss=0.383 " + "l1=0.344" + "l2=0.0384 f=-0.475 shape=(1, 9000, 1)
logits [[ 2.493143   -0.95067734  1.5370718  -4.9789033 ]]
Iteration 300 of 1000: loss=0.367 " + "l1=0.317" + "l2=0.0492 f=-0.473 shape=(1, 9000, 1)
logits [[ 2.3065145  -0.86777544  1.4727863  -4.8029914 ]]
Iteration 400 of 1000: loss=0.352 " + "l1=0.293" + "l2=0.0585 f=-0.471 shape=(1, 9000, 1)
logits [[ 2.135222  -0.795314   1.4245038 -4.6503534]]
Iteration 500 of 1000: loss=0.337 " + "l1=0.272" + "l2=0.0656 f=-0.467 shape=(1, 9000, 1)
logits [[ 1.9824436 -0.7347722  1.3864169 -4.5036917]]
Iteration 600 of 1000: loss=0.325 " + "l1=0.254" + "l2=0.0716 f=-0.466 shape=(1, 9000, 1)
logits [[ 1.8494359  -0.68707603  1.3573077  -4.38358   ]]
Iteration 700 of 1000: loss=0.313 " + "l1=0.232" + "l2=0.0816 f=-0.472 shape=(1, 9000, 1)
logits [[ 1.6829565 -0.6352017  1.3222209 -4.2562103]]
Iteration 800 of 1000: loss=0.302 " + "l1=0.214" + "l2=0.088 f=-0.48 shape=(1, 9000, 1)
logits [[ 1.5435632 -0.5945299  1.2906064 -4.160007 ]]
Iteration 900 of 1000: loss=0.29 " + "l1=0.196" + "l2=0.0943 f=-0.487 shape=(1, 9000, 1)
logits [[ 1.408881   -0.54911065  1.2536666  -4.0626554 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.54 " + "l1=4.54" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.192866  -1.3466728  1.7728323 -5.642143 ]]
Iteration 100 of 1000: loss=1.45 " + "l1=0.571" + "l2=0.881 f=-0.431 shape=(1, 9000, 1)
logits [[ 0.6665395   0.09575847  0.6640729  -3.1510513 ]]
Iteration 200 of 1000: loss=0.892 " + "l1=0.00104" + "l2=0.891 f=-0.426 shape=(1, 9000, 1)
logits [[ 0.2941851   0.38991973  0.3909629  -2.780862  ]]
Iteration 300 of 1000: loss=0.707 " + "l1=0.00694" + "l2=0.7 f=-0.424 shape=(1, 9000, 1)
logits [[ 0.33209467  0.37664694  0.38358882 -2.7893171 ]]
Iteration 400 of 1000: loss=0.617 " + "l1=0.000776" + "l2=0.617 f=-0.424 shape=(1, 9000, 1)
logits [[ 0.31643778  0.373155    0.3739315  -2.7591054 ]]
Iteration 500 of 1000: loss=0.56 " + "l1=0.00702" + "l2=0.553 f=-0.423 shape=(1, 9000, 1)
logits [[ 0.34726712  0.3615138   0.36853012 -2.7694697 ]]
Iteration 600 of 1000: loss=0.515 " + "l1=0.000558" + "l2=0.515 f=-0.422 shape=(1, 9000, 1)
logits [[ 0.35084456  0.3599181   0.36047617 -2.757666  ]]
Iteration 700 of 1000: loss=0.491 " + "l1=0" + "l2=0.491 f=-0.42 shape=(1, 9000, 1)
logits [[ 0.3452988   0.36124033  0.35720482 -2.743027  ]]
Iteration 800 of 1000: loss=0.467 " + "l1=0" + "l2=0.467 f=-0.417 shape=(1, 9000, 1)
logits [[ 0.33634853  0.3591841   0.35900822 -2.7238405 ]]
Iteration 900 of 1000: loss=0.45 " + "l1=0" + "l2=0.45 f=-0.417 shape=(1, 9000, 1)
logits [[ 0.32417253  0.36320364  0.35382634 -2.7080789 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.5 " + "l1=2.5" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.192866  -1.3466728  1.7728323 -5.642143 ]]
Iteration 100 of 1000: loss=1.18 " + "l1=0.668" + "l2=0.508 f=-0.457 shape=(1, 9000, 1)
logits [[ 0.9965466  -0.21843879  0.9886073  -3.5953133 ]]
Iteration 200 of 1000: loss=0.874 " + "l1=0.356" + "l2=0.518 f=-0.433 shape=(1, 9000, 1)
logits [[ 0.6692274   0.04901572  0.69702846 -3.1461892 ]]
Iteration 300 of 1000: loss=0.704 " + "l1=0.198" + "l2=0.506 f=-0.422 shape=(1, 9000, 1)
logits [[ 0.55669093  0.19717148  0.5521414  -2.9930112 ]]
Iteration 400 of 1000: loss=0.602 " + "l1=0.103" + "l2=0.5 f=-0.428 shape=(1, 9000, 1)
logits [[ 0.44295684  0.28259695  0.4692607  -2.907708  ]]
Iteration 500 of 1000: loss=0.526 " + "l1=0.00743" + "l2=0.518 f=-0.431 shape=(1, 9000, 1)
logits [[ 0.26888633  0.37128246  0.38479075 -2.748941  ]]
Iteration 600 of 1000: loss=0.477 " + "l1=0.00226" + "l2=0.475 f=-0.427 shape=(1, 9000, 1)
logits [[ 0.2772152   0.3691591   0.37327066 -2.7266893 ]]
Iteration 700 of 1000: loss=0.446 " + "l1=0.0023" + "l2=0.444 f=-0.424 shape=(1, 9000, 1)
logits [[ 0.28407344  0.36478424  0.36896884 -2.7147422 ]]
Iteration 800 of 1000: loss=0.421 " + "l1=0.00539" + "l2=0.416 f=-0.421 shape=(1, 9000, 1)
logits [[ 0.28030774  0.36159694  0.37140223 -2.6986303 ]]
Iteration 900 of 1000: loss=0.398 " + "l1=0" + "l2=0.398 f=-0.417 shape=(1, 9000, 1)
logits [[ 0.25816482  0.36932984  0.36924946 -2.6632318 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.48 " + "l1=1.48" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.192866  -1.3466728  1.7728323 -5.642143 ]]
Iteration 100 of 1000: loss=0.951 " + "l1=0.667" + "l2=0.285 f=-0.471 shape=(1, 9000, 1)
logits [[ 1.5383104 -0.5131457  1.2380263 -4.1466208]]
Iteration 200 of 1000: loss=0.736 " + "l1=0.423" + "l2=0.313 f=-0.457 shape=(1, 9000, 1)
logits [[ 1.0224298  -0.27905586  1.0136498  -3.5857987 ]]
Iteration 300 of 1000: loss=0.636 " + "l1=0.334" + "l2=0.303 f=-0.453 shape=(1, 9000, 1)
logits [[ 0.8699822  -0.15513302  0.8721911  -3.3990638 ]]
Iteration 400 of 1000: loss=0.57 " + "l1=0.268" + "l2=0.302 f=-0.45 shape=(1, 9000, 1)
logits [[ 0.75443745 -0.04908787  0.77418214 -3.280811  ]]
Iteration 500 of 1000: loss=0.518 " + "l1=0.208" + "l2=0.31 f=-0.454 shape=(1, 9000, 1)
logits [[ 0.6686987   0.04221482  0.68354744 -3.2101243 ]]
Iteration 600 of 1000: loss=0.479 " + "l1=0.167" + "l2=0.313 f=-0.451 shape=(1, 9000, 1)
logits [[ 0.61750376  0.10794562  0.6207875  -3.1496525 ]]
Iteration 700 of 1000: loss=0.453 " + "l1=0.144" + "l2=0.309 f=-0.442 shape=(1, 9000, 1)
logits [[ 0.58046913  0.14446418  0.5880846  -3.07927   ]]
Iteration 800 of 1000: loss=0.426 " + "l1=0.122" + "l2=0.305 f=-0.428 shape=(1, 9000, 1)
logits [[ 0.54979974  0.18178089  0.5567321  -3.0000548 ]]
Iteration 900 of 1000: loss=0.402 " + "l1=0.106" + "l2=0.296 f=-0.419 shape=(1, 9000, 1)
logits [[ 0.52782065  0.20964643  0.534783   -2.9501817 ]]
--- 279.2483410835266 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0142 " + "l1=0.0142" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.192866  -1.3466728  1.7728323 -5.642143 ]]
Iteration 100 of 1000: loss=0.014 " + "l1=0.0138" + "l2=0.000175 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.1537836 -1.3367082  1.7714803 -5.6067677]]
Iteration 200 of 1000: loss=0.0139 " + "l1=0.0138" + "l2=0.000148 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.1497438 -1.3348728  1.7713616 -5.6037164]]
Iteration 300 of 1000: loss=0.0139 " + "l1=0.0137" + "l2=0.000186 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.1427958 -1.3326231  1.7711847 -5.598101 ]]
Iteration 400 of 1000: loss=0.0139 " + "l1=0.0136" + "l2=0.000228 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.1354456 -1.3305372  1.7710835 -5.592273 ]]
Iteration 500 of 1000: loss=0.0139 " + "l1=0.0136" + "l2=0.000305 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.128288  -1.3286146  1.7711333 -5.586836 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.142 " + "l1=0.142" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.192866  -1.3466728  1.7728323 -5.642143 ]]
Iteration 100 of 1000: loss=0.125 " + "l1=0.116" + "l2=0.00818 f=-0.497 shape=(1, 9000, 1)
logits [[ 2.9290857 -1.2760935  1.7645544 -5.4073186]]
Iteration 200 of 1000: loss=0.118 " + "l1=0.106" + "l2=0.0116 f=-0.495 shape=(1, 9000, 1)
logits [[ 2.8210378 -1.2561923  1.7606945 -5.3062677]]
Iteration 300 of 1000: loss=0.111 " + "l1=0.097" + "l2=0.0144 f=-0.496 shape=(1, 9000, 1)
logits [[ 2.7267828 -1.2427346  1.7570051 -5.2238326]]
Iteration 400 of 1000: loss=0.105 " + "l1=0.0884" + "l2=0.0168 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.6395981 -1.2335033  1.7559652 -5.1525936]]
Iteration 500 of 1000: loss=0.0992 " + "l1=0.0805" + "l2=0.0187 f=-0.502 shape=(1, 9000, 1)
logits [[ 2.5642383 -1.232638   1.7590262 -5.099567 ]]
Iteration 600 of 1000: loss=0.0933 " + "l1=0.0726" + "l2=0.0207 f=-0.508 shape=(1, 9000, 1)
logits [[ 2.4903898 -1.2364137  1.7646948 -5.0518637]]
Iteration 700 of 1000: loss=0.0863 " + "l1=0.0631" + "l2=0.0232 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.4048345 -1.2440138  1.7740486 -4.9941826]]
Iteration 800 of 1000: loss=0.0792 " + "l1=0.0533" + "l2=0.0259 f=-0.521 shape=(1, 9000, 1)
logits [[ 2.3148396 -1.2484405  1.7822146 -4.932234 ]]
Iteration 900 of 1000: loss=0.0718 " + "l1=0.0425" + "l2=0.0293 f=-0.529 shape=(1, 9000, 1)
logits [[ 2.2171981 -1.2583961  1.7921269 -4.866275 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.42 " + "l1=1.42" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.192866  -1.3466728  1.7728323 -5.642143 ]]
Iteration 100 of 1000: loss=0.269 " + "l1=0" + "l2=0.269 f=-0.494 shape=(1, 9000, 1)
logits [[ 1.7376345 -1.15699    1.7527114 -4.310711 ]]
Iteration 200 of 1000: loss=0.179 " + "l1=0" + "l2=0.179 f=-0.492 shape=(1, 9000, 1)
logits [[ 1.744648  -1.1715411  1.7501959 -4.2925973]]
Iteration 300 of 1000: loss=0.141 " + "l1=0" + "l2=0.141 f=-0.499 shape=(1, 9000, 1)
logits [[ 1.7235775 -1.1845587  1.7510571 -4.2862864]]
Iteration 400 of 1000: loss=0.115 " + "l1=0" + "l2=0.115 f=-0.508 shape=(1, 9000, 1)
logits [[ 1.7196529 -1.1967427  1.7502816 -4.304818 ]]
Iteration 500 of 1000: loss=0.0924 " + "l1=0" + "l2=0.0924 f=-0.517 shape=(1, 9000, 1)
logits [[ 1.7363361 -1.2078162  1.7513945 -4.3472567]]
Iteration 600 of 1000: loss=0.0785 " + "l1=0" + "l2=0.0785 f=-0.526 shape=(1, 9000, 1)
logits [[ 1.7392025 -1.219125   1.7560202 -4.380823 ]]
Iteration 700 of 1000: loss=0.0666 " + "l1=0" + "l2=0.0666 f=-0.534 shape=(1, 9000, 1)
logits [[ 1.7566737 -1.2303153  1.7600068 -4.421894 ]]
Iteration 800 of 1000: loss=0.0599 " + "l1=0" + "l2=0.0599 f=-0.542 shape=(1, 9000, 1)
logits [[ 1.7480385 -1.2435688  1.7661288 -4.4374275]]
Iteration 900 of 1000: loss=0.0525 " + "l1=0" + "l2=0.0525 f=-0.548 shape=(1, 9000, 1)
logits [[ 1.7634451 -1.2616136  1.7750438 -4.469942 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.781 " + "l1=0.781" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.192866  -1.3466728  1.7728323 -5.642143 ]]
Iteration 100 of 1000: loss=0.257 " + "l1=0.00932" + "l2=0.247 f=-0.485 shape=(1, 9000, 1)
logits [[ 1.7720196 -1.1445519  1.7550752 -4.3241177]]
Iteration 200 of 1000: loss=0.151 " + "l1=0.00385" + "l2=0.147 f=-0.494 shape=(1, 9000, 1)
logits [[ 1.7628634 -1.1888603  1.7558565 -4.3043523]]
Iteration 300 of 1000: loss=0.111 " + "l1=0.000263" + "l2=0.111 f=-0.507 shape=(1, 9000, 1)
logits [[ 1.7546719 -1.2052     1.7541932 -4.33043  ]]
Iteration 400 of 1000: loss=0.0877 " + "l1=0" + "l2=0.0877 f=-0.521 shape=(1, 9000, 1)
logits [[ 1.7459477 -1.2151462  1.7520918 -4.366448 ]]
Iteration 500 of 1000: loss=0.0716 " + "l1=0" + "l2=0.0716 f=-0.534 shape=(1, 9000, 1)
logits [[ 1.757535  -1.2393129  1.761893  -4.415125 ]]
Iteration 600 of 1000: loss=0.0618 " + "l1=0.00112" + "l2=0.0606 f=-0.54 shape=(1, 9000, 1)
logits [[ 1.7725756 -1.2531521  1.77054   -4.451425 ]]
Iteration 700 of 1000: loss=0.054 " + "l1=0" + "l2=0.054 f=-0.545 shape=(1, 9000, 1)
logits [[ 1.7768807 -1.27045    1.7826426 -4.4696198]]
Iteration 800 of 1000: loss=0.0483 " + "l1=0" + "l2=0.0483 f=-0.55 shape=(1, 9000, 1)
logits [[ 1.7877963 -1.2847432  1.7936406 -4.49679  ]]
Iteration 900 of 1000: loss=0.0441 " + "l1=0" + "l2=0.0441 f=-0.553 shape=(1, 9000, 1)
logits [[ 1.796761  -1.2978735  1.801247  -4.511504 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.462 " + "l1=0.462" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.192866  -1.3466728  1.7728323 -5.642143 ]]
Iteration 100 of 1000: loss=0.29 " + "l1=0.2" + "l2=0.0892 f=-0.488 shape=(1, 9000, 1)
logits [[ 2.3602173 -1.1681622  1.7437711 -4.886579 ]]
Iteration 200 of 1000: loss=0.18 " + "l1=0.0211" + "l2=0.159 f=-0.49 shape=(1, 9000, 1)
logits [[ 1.8198488 -1.1573303  1.7548896 -4.3763237]]
Iteration 300 of 1000: loss=0.111 " + "l1=0.00177" + "l2=0.109 f=-0.51 shape=(1, 9000, 1)
logits [[ 1.7616286 -1.2015     1.7561691 -4.354578 ]]
Iteration 400 of 1000: loss=0.0822 " + "l1=0" + "l2=0.0822 f=-0.528 shape=(1, 9000, 1)
logits [[ 1.7567271 -1.2294759  1.7602222 -4.3981133]]
Iteration 500 of 1000: loss=0.0674 " + "l1=0.00116" + "l2=0.0663 f=-0.537 shape=(1, 9000, 1)
logits [[ 1.7743497 -1.2523224  1.7707777 -4.4427614]]
Iteration 600 of 1000: loss=0.0591 " + "l1=0" + "l2=0.0591 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.7629651 -1.2659227  1.7801194 -4.4532194]]
Iteration 700 of 1000: loss=0.0515 " + "l1=0" + "l2=0.0515 f=-0.549 shape=(1, 9000, 1)
logits [[ 1.7777165 -1.2789929  1.7889444 -4.482591 ]]
Iteration 800 of 1000: loss=0.0464 " + "l1=0" + "l2=0.0464 f=-0.552 shape=(1, 9000, 1)
logits [[ 1.7846516 -1.293551   1.7978982 -4.497125 ]]
Iteration 900 of 1000: loss=0.0411 " + "l1=0.000119" + "l2=0.041 f=-0.555 shape=(1, 9000, 1)
logits [[ 1.8048173 -1.3086609  1.8044512 -4.522607 ]]
--- 267.1046679019928 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0884 " + "l1=0.0884" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.192866  -1.3466728  1.7728323 -5.642143 ]]
Iteration 100 of 1000: loss=0.0872 " + "l1=0.0866" + "l2=0.000623 f=-0.5 shape=(1, 9000, 1)
logits [[ 3.114681  -1.3198509  1.7538781 -5.5472164]]
Iteration 200 of 1000: loss=0.0869 " + "l1=0.0862" + "l2=0.000749 f=-0.498 shape=(1, 9000, 1)
logits [[ 3.0950406 -1.312817   1.7493303 -5.5229654]]
Iteration 300 of 1000: loss=0.0867 " + "l1=0.0857" + "l2=0.000941 f=-0.496 shape=(1, 9000, 1)
logits [[ 3.0749366 -1.3057619  1.7447141 -5.4990387]]
Iteration 400 of 1000: loss=0.0865 " + "l1=0.0853" + "l2=0.00114 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.0564928 -1.2996022  1.740694  -5.477518 ]]
Iteration 500 of 1000: loss=0.0863 " + "l1=0.085" + "l2=0.00134 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.039219  -1.2941593  1.7372068 -5.45765  ]]
Iteration 600 of 1000: loss=0.0862 " + "l1=0.0846" + "l2=0.00154 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.0229917 -1.2892948  1.7341017 -5.43958  ]]
Iteration 700 of 1000: loss=0.0861 " + "l1=0.0843" + "l2=0.00178 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.0074406 -1.2847033  1.7313141 -5.422749 ]]
Iteration 800 of 1000: loss=0.0859 " + "l1=0.084" + "l2=0.0019 f=-0.491 shape=(1, 9000, 1)
logits [[ 2.992853  -1.2805573  1.7290074 -5.4071865]]
Iteration 900 of 1000: loss=0.0858 " + "l1=0.0837" + "l2=0.0021 f=-0.491 shape=(1, 9000, 1)
logits [[ 2.9796166 -1.277411   1.727121  -5.392723 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.884 " + "l1=0.884" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.192866  -1.3466728  1.7728323 -5.642143 ]]
Iteration 100 of 1000: loss=0.78 " + "l1=0.726" + "l2=0.0547 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.497047  -1.0923762  1.5805651 -4.7584457]]
Iteration 200 of 1000: loss=0.734 " + "l1=0.65" + "l2=0.0843 f=-0.418 shape=(1, 9000, 1)
logits [[ 2.157075  -0.9739316  1.4860401 -4.3400216]]
Iteration 300 of 1000: loss=0.697 " + "l1=0.587" + "l2=0.11 f=-0.407 shape=(1, 9000, 1)
logits [[ 1.8646412  -0.88212085  1.3986611  -4.007186  ]]
Iteration 400 of 1000: loss=0.658 " + "l1=0.525" + "l2=0.133 f=-0.405 shape=(1, 9000, 1)
logits [[ 1.5573695  -0.80786765  1.3256531  -3.6963153 ]]
Iteration 500 of 1000: loss=0.621 " + "l1=0.467" + "l2=0.153 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.2589576 -0.7550632  1.2564547 -3.4160073]]
Iteration 600 of 1000: loss=0.597 " + "l1=0.451" + "l2=0.146 f=-0.41 shape=(1, 9000, 1)
logits [[ 1.1959727 -0.7232642  1.1985002 -3.3126369]]
Iteration 700 of 1000: loss=0.579 " + "l1=0.435" + "l2=0.143 f=-0.404 shape=(1, 9000, 1)
logits [[ 1.1446879 -0.7020753  1.1467109 -3.2055984]]
Iteration 800 of 1000: loss=0.561 " + "l1=0.42" + "l2=0.141 f=-0.397 shape=(1, 9000, 1)
logits [[ 1.1023514 -0.6880368  1.1008903 -3.1019702]]
Iteration 900 of 1000: loss=0.546 " + "l1=0.405" + "l2=0.141 f=-0.388 shape=(1, 9000, 1)
logits [[ 1.0521771 -0.6804891  1.0636184 -2.9886622]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.84 " + "l1=8.84" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.192866  -1.3466728  1.7728323 -5.642143 ]]
Iteration 100 of 1000: loss=2.77 " + "l1=0.458" + "l2=2.31 f=-0.252 shape=(1, 9000, 1)
logits [[-0.7919823  -0.26677135  0.25408977 -0.20365876]]
Iteration 200 of 1000: loss=1.73 " + "l1=0.0271" + "l2=1.7 f=-0.238 shape=(1, 9000, 1)
logits [[-0.8929953  -0.3433934   0.15498489  0.1278941 ]]
Iteration 300 of 1000: loss=1.42 " + "l1=0.00151" + "l2=1.42 f=-0.249 shape=(1, 9000, 1)
logits [[-0.85835826 -0.38345748  0.12268455  0.12117273]]
Iteration 400 of 1000: loss=1.24 " + "l1=0" + "l2=1.24 f=-0.257 shape=(1, 9000, 1)
logits [[-0.84390527 -0.4170781   0.11497941  0.11717349]]
Iteration 500 of 1000: loss=1.11 " + "l1=0" + "l2=1.11 f=-0.261 shape=(1, 9000, 1)
logits [[-0.8368201  -0.45161736  0.10923035  0.13467142]]
Iteration 600 of 1000: loss=1.01 " + "l1=0" + "l2=1.01 f=-0.266 shape=(1, 9000, 1)
logits [[-0.82356817 -0.46827066  0.10476565  0.12144288]]
Iteration 700 of 1000: loss=0.935 " + "l1=0" + "l2=0.935 f=-0.269 shape=(1, 9000, 1)
logits [[-0.8194529  -0.4876417   0.09694421  0.13386342]]
Iteration 800 of 1000: loss=0.856 " + "l1=0" + "l2=0.856 f=-0.269 shape=(1, 9000, 1)
logits [[-0.7862761  -0.50355357  0.103507    0.10886037]]
Iteration 900 of 1000: loss=0.81 " + "l1=0" + "l2=0.81 f=-0.271 shape=(1, 9000, 1)
logits [[-0.8134094  -0.49881458  0.08254904  0.14757216]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.86 " + "l1=4.86" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.192866  -1.3466728  1.7728323 -5.642143 ]]
Iteration 100 of 1000: loss=2.42 " + "l1=1.54" + "l2=0.886 f=-0.298 shape=(1, 9000, 1)
logits [[ 0.56580627 -0.44012514  0.7404178  -2.0575826 ]]
Iteration 200 of 1000: loss=1.78 " + "l1=0.546" + "l2=1.24 f=-0.25 shape=(1, 9000, 1)
logits [[-0.4275818  -0.30427346  0.36264604 -0.62998885]]
Iteration 300 of 1000: loss=1.24 " + "l1=0.011" + "l2=1.23 f=-0.25 shape=(1, 9000, 1)
logits [[-0.8813732  -0.36393392  0.13252698  0.11253117]]
Iteration 400 of 1000: loss=1.01 " + "l1=0.017" + "l2=0.993 f=-0.262 shape=(1, 9000, 1)
logits [[-0.8478726  -0.41241533  0.12228523  0.09132684]]
Iteration 500 of 1000: loss=0.871 " + "l1=0" + "l2=0.871 f=-0.266 shape=(1, 9000, 1)
logits [[-0.8464757  -0.44670576  0.10785261  0.12013871]]
Iteration 600 of 1000: loss=0.785 " + "l1=0" + "l2=0.785 f=-0.268 shape=(1, 9000, 1)
logits [[-0.8516514  -0.4414062   0.10239847  0.11803666]]
Iteration 700 of 1000: loss=0.723 " + "l1=0" + "l2=0.723 f=-0.272 shape=(1, 9000, 1)
logits [[-0.85683453 -0.44129944  0.10055371  0.10972369]]
Iteration 800 of 1000: loss=0.678 " + "l1=0" + "l2=0.678 f=-0.274 shape=(1, 9000, 1)
logits [[-0.8593853  -0.45355254  0.10036324  0.11521176]]
Iteration 900 of 1000: loss=0.638 " + "l1=0.00506" + "l2=0.633 f=-0.274 shape=(1, 9000, 1)
logits [[-0.8381037  -0.4718493   0.11143979  0.10223766]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.87 " + "l1=2.87" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.192866  -1.3466728  1.7728323 -5.642143 ]]
Iteration 100 of 1000: loss=1.78 " + "l1=1.28" + "l2=0.494 f=-0.355 shape=(1, 9000, 1)
logits [[ 1.0485564 -0.6168612  1.0490619 -2.9000695]]
Iteration 200 of 1000: loss=1.51 " + "l1=0.997" + "l2=0.515 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.7089286  -0.45490077  0.7966142  -2.2723157 ]]
Iteration 300 of 1000: loss=1.36 " + "l1=0.79" + "l2=0.573 f=-0.279 shape=(1, 9000, 1)
logits [[ 0.39129186 -0.39394158  0.65938574 -1.7711042 ]]
Iteration 400 of 1000: loss=1.17 " + "l1=0.46" + "l2=0.707 f=-0.269 shape=(1, 9000, 1)
logits [[-0.21108945 -0.35357887  0.4505707  -0.9636934 ]]
Iteration 500 of 1000: loss=0.93 " + "l1=0.157" + "l2=0.773 f=-0.272 shape=(1, 9000, 1)
logits [[-0.6579318  -0.4349091   0.24389641 -0.24023676]]
Iteration 600 of 1000: loss=0.734 " + "l1=0.0208" + "l2=0.713 f=-0.279 shape=(1, 9000, 1)
logits [[-0.81436896 -0.46631142  0.11401676  0.04994021]]
Iteration 700 of 1000: loss=0.635 " + "l1=0.00668" + "l2=0.628 f=-0.28 shape=(1, 9000, 1)
logits [[-0.83066785 -0.49421394  0.11235693  0.09179122]]
Iteration 800 of 1000: loss=0.572 " + "l1=0" + "l2=0.572 f=-0.276 shape=(1, 9000, 1)
logits [[-0.8438472  -0.5032042   0.11932801  0.12552713]]
Iteration 900 of 1000: loss=0.532 " + "l1=0.0108" + "l2=0.522 f=-0.269 shape=(1, 9000, 1)
logits [[-0.8132808  -0.52120423  0.14565575  0.11230565]]
--- 295.615864276886 seconds ---
Adv result:3
Loading record A06734
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0993 " + "l1=0.0993" + "l2=0 f=-0.892 shape=(1, 9000, 1)
logits [[ 4.5616655 -5.3696213  4.515437  -7.2737994]]
Iteration 100 of 1000: loss=0.0983 " + "l1=0.0978" + "l2=0.000535 f=-0.882 shape=(1, 9000, 1)
logits [[ 4.4884934 -5.292045   4.4477196 -7.1725006]]
Iteration 200 of 1000: loss=0.098 " + "l1=0.0974" + "l2=0.000594 f=-0.88 shape=(1, 9000, 1)
logits [[ 4.471025  -5.273961   4.4306006 -7.148079 ]]
Iteration 300 of 1000: loss=0.0978 " + "l1=0.0971" + "l2=0.000737 f=-0.878 shape=(1, 9000, 1)
logits [[ 4.4529514 -5.252809   4.4112215 -7.1225076]]
Iteration 400 of 1000: loss=0.0975 " + "l1=0.0967" + "l2=0.000861 f=-0.876 shape=(1, 9000, 1)
logits [[ 4.4358387 -5.232035   4.392176  -7.098095 ]]
Iteration 500 of 1000: loss=0.0973 " + "l1=0.0963" + "l2=0.000993 f=-0.873 shape=(1, 9000, 1)
logits [[ 4.420566  -5.212168   4.373975  -7.0755296]]
Iteration 600 of 1000: loss=0.0972 " + "l1=0.096" + "l2=0.00121 f=-0.871 shape=(1, 9000, 1)
logits [[ 4.405969  -5.1933355  4.3565965 -7.0538735]]
Iteration 700 of 1000: loss=0.097 " + "l1=0.0957" + "l2=0.00128 f=-0.869 shape=(1, 9000, 1)
logits [[ 4.39202   -5.1749287  4.339786  -7.0333014]]
Iteration 800 of 1000: loss=0.0968 " + "l1=0.0954" + "l2=0.00148 f=-0.867 shape=(1, 9000, 1)
logits [[ 4.37913   -5.1573935  4.323969  -7.013997 ]]
Iteration 900 of 1000: loss=0.0968 " + "l1=0.0951" + "l2=0.00171 f=-0.865 shape=(1, 9000, 1)
logits [[ 4.3671255 -5.140775   4.3090663 -6.995985 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.993 " + "l1=0.993" + "l2=0 f=-0.892 shape=(1, 9000, 1)
logits [[ 4.5616655 -5.3696213  4.515437  -7.2737994]]
Iteration 100 of 1000: loss=0.917 " + "l1=0.88" + "l2=0.0371 f=-0.818 shape=(1, 9000, 1)
logits [[ 4.01545   -4.7842054  4.0155    -6.5175376]]
Iteration 200 of 1000: loss=0.878 " + "l1=0.82" + "l2=0.0585 f=-0.782 shape=(1, 9000, 1)
logits [[ 3.7497683 -4.448603   3.7392862 -6.167858 ]]
Iteration 300 of 1000: loss=0.846 " + "l1=0.772" + "l2=0.074 f=-0.751 shape=(1, 9000, 1)
logits [[ 3.533127  -4.1915274  3.5097878 -5.8534617]]
Iteration 400 of 1000: loss=0.819 " + "l1=0.734" + "l2=0.0854 f=-0.724 shape=(1, 9000, 1)
logits [[ 3.3551285 -3.9841137  3.3246198 -5.5935326]]
Iteration 500 of 1000: loss=0.796 " + "l1=0.701" + "l2=0.0954 f=-0.702 shape=(1, 9000, 1)
logits [[ 3.1856995 -3.8196344  3.1784947 -5.353271 ]]
Iteration 600 of 1000: loss=0.768 " + "l1=0.66" + "l2=0.108 f=-0.676 shape=(1, 9000, 1)
logits [[ 2.9878838 -3.6089442  2.9837906 -5.068155 ]]
Iteration 700 of 1000: loss=0.719 " + "l1=0.594" + "l2=0.125 f=-0.656 shape=(1, 9000, 1)
logits [[ 2.6693418 -3.2734714  2.6621237 -4.680259 ]]
Iteration 800 of 1000: loss=0.687 " + "l1=0.554" + "l2=0.133 f=-0.64 shape=(1, 9000, 1)
logits [[ 2.4619982 -3.0779877  2.4587305 -4.401502 ]]
Iteration 900 of 1000: loss=0.67 " + "l1=0.532" + "l2=0.138 f=-0.629 shape=(1, 9000, 1)
logits [[ 2.3495982 -2.9735055  2.3498793 -4.2411547]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.93 " + "l1=9.93" + "l2=0 f=-0.892 shape=(1, 9000, 1)
logits [[ 4.5616655 -5.3696213  4.515437  -7.2737994]]
Iteration 100 of 1000: loss=4.44 " + "l1=2.38" + "l2=2.06 f=-0.454 shape=(1, 9000, 1)
logits [[ 0.994318   -1.3843361   0.99987596 -2.4239595 ]]
Iteration 200 of 1000: loss=3.3 " + "l1=1.35" + "l2=1.95 f=-0.422 shape=(1, 9000, 1)
logits [[ 0.43336055 -0.9108347   0.4392731  -1.6510242 ]]
Iteration 300 of 1000: loss=2.62 " + "l1=0.762" + "l2=1.86 f=-0.408 shape=(1, 9000, 1)
logits [[ 0.09889178 -0.64028305  0.12185638 -1.2111964 ]]
Iteration 400 of 1000: loss=2.2 " + "l1=0.362" + "l2=1.84 f=-0.388 shape=(1, 9000, 1)
logits [[-0.15924895 -0.45421994 -0.09270555 -0.844555  ]]
Iteration 500 of 1000: loss=1.88 " + "l1=0.0257" + "l2=1.85 f=-0.369 shape=(1, 9000, 1)
logits [[-0.40988746 -0.31531793 -0.28962934 -0.4620319 ]]
Iteration 600 of 1000: loss=1.62 " + "l1=0.0273" + "l2=1.6 f=-0.365 shape=(1, 9000, 1)
logits [[-0.34864116 -0.3687178  -0.34144983 -0.402356  ]]
Iteration 700 of 1000: loss=1.49 " + "l1=0.00519" + "l2=1.49 f=-0.373 shape=(1, 9000, 1)
logits [[-0.3914875  -0.3622486  -0.35705557 -0.38295385]]
Iteration 800 of 1000: loss=1.42 " + "l1=0.0155" + "l2=1.4 f=-0.377 shape=(1, 9000, 1)
logits [[-0.36061743 -0.37572595 -0.36020428 -0.41035828]]
Iteration 900 of 1000: loss=1.36 " + "l1=0" + "l2=1.36 f=-0.374 shape=(1, 9000, 1)
logits [[-0.3803753  -0.36591592 -0.3757742  -0.3721849 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.46 " + "l1=5.46" + "l2=0 f=-0.892 shape=(1, 9000, 1)
logits [[ 4.5616655 -5.3696213  4.515437  -7.2737994]]
Iteration 100 of 1000: loss=3.42 " + "l1=2.39" + "l2=1.03 f=-0.595 shape=(1, 9000, 1)
logits [[ 1.9576044 -2.3879762  1.9418293 -3.8918495]]
Iteration 200 of 1000: loss=2.51 " + "l1=1.44" + "l2=1.08 f=-0.502 shape=(1, 9000, 1)
logits [[ 1.080405  -1.5279115  1.0818994 -2.6427298]]
Iteration 300 of 1000: loss=2.14 " + "l1=1.15" + "l2=0.985 f=-0.475 shape=(1, 9000, 1)
logits [[ 0.8071661  -1.2904973   0.80808526 -2.223662  ]]
Iteration 400 of 1000: loss=1.93 " + "l1=0.907" + "l2=1.03 f=-0.454 shape=(1, 9000, 1)
logits [[ 0.5648815 -1.0807661  0.5688943 -1.868573 ]]
Iteration 500 of 1000: loss=1.77 " + "l1=0.726" + "l2=1.04 f=-0.431 shape=(1, 9000, 1)
logits [[ 0.3904256  -0.92876613  0.3918826  -1.5764625 ]]
Iteration 600 of 1000: loss=1.63 " + "l1=0.61" + "l2=1.02 f=-0.417 shape=(1, 9000, 1)
logits [[ 0.26202255 -0.8454864   0.263288   -1.3466592 ]]
Iteration 700 of 1000: loss=1.51 " + "l1=0.48" + "l2=1.03 f=-0.406 shape=(1, 9000, 1)
logits [[ 0.09653264 -0.759245    0.11372051 -1.0734648 ]]
Iteration 800 of 1000: loss=1.4 " + "l1=0.385" + "l2=1.02 f=-0.406 shape=(1, 9000, 1)
logits [[-0.02272183 -0.710813   -0.0115724  -0.8800443 ]]
Iteration 900 of 1000: loss=1.29 " + "l1=0.28" + "l2=1.01 f=-0.393 shape=(1, 9000, 1)
logits [[-0.16169482 -0.6567653  -0.14799865 -0.604146  ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=7.7 " + "l1=7.7" + "l2=0 f=-0.892 shape=(1, 9000, 1)
logits [[ 4.5616655 -5.3696213  4.515437  -7.2737994]]
Iteration 100 of 1000: loss=3.98 " + "l1=2.38" + "l2=1.61 f=-0.506 shape=(1, 9000, 1)
logits [[ 1.3227768 -1.7426504  1.324956  -2.9280121]]
Iteration 200 of 1000: loss=2.97 " + "l1=1.53" + "l2=1.45 f=-0.461 shape=(1, 9000, 1)
logits [[ 0.75745285 -1.1993865   0.7691766  -2.1696777 ]]
Iteration 300 of 1000: loss=2.45 " + "l1=1.03" + "l2=1.41 f=-0.435 shape=(1, 9000, 1)
logits [[ 0.410979   -0.9171614   0.41745397 -1.6521975 ]]
Iteration 400 of 1000: loss=2.13 " + "l1=0.712" + "l2=1.42 f=-0.41 shape=(1, 9000, 1)
logits [[ 0.17839365 -0.72492105  0.19434752 -1.2865411 ]]
Iteration 500 of 1000: loss=1.89 " + "l1=0.457" + "l2=1.43 f=-0.402 shape=(1, 9000, 1)
logits [[-0.044773   -0.59627026 -0.00650194 -0.961456  ]]
Iteration 600 of 1000: loss=1.66 " + "l1=0.253" + "l2=1.41 f=-0.399 shape=(1, 9000, 1)
logits [[-0.28893283 -0.5144421  -0.18753779 -0.60388714]]
Iteration 700 of 1000: loss=1.49 " + "l1=0.0782" + "l2=1.41 f=-0.397 shape=(1, 9000, 1)
logits [[-0.4332752  -0.44983807 -0.34895012 -0.35604715]]
Iteration 800 of 1000: loss=1.4 " + "l1=0.0677" + "l2=1.33 f=-0.402 shape=(1, 9000, 1)
logits [[-0.3840792  -0.44651183 -0.35913908 -0.4190749 ]]
Iteration 900 of 1000: loss=1.34 " + "l1=0.0417" + "l2=1.3 f=-0.398 shape=(1, 9000, 1)
logits [[-0.397023   -0.42941102 -0.38951796 -0.37561637]]
--- 297.62743496894836 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.000462 " + "l1=0.000462" + "l2=0 f=-0.892 shape=(1, 9000, 1)
logits [[ 4.5616655 -5.3696213  4.515437  -7.2737994]]
Iteration 100 of 1000: loss=0.00017 " + "l1=1.58e-06" + "l2=0.000169 f=-0.894 shape=(1, 9000, 1)
logits [[ 4.5358906 -5.3884406  4.5357323 -7.2588964]]
Iteration 200 of 1000: loss=0.000113 " + "l1=3.77e-07" + "l2=0.000113 f=-0.894 shape=(1, 9000, 1)
logits [[ 4.5368505 -5.389827   4.536813  -7.2603292]]
Iteration 300 of 1000: loss=0.000112 " + "l1=7.63e-07" + "l2=0.000111 f=-0.894 shape=(1, 9000, 1)
logits [[ 4.5381074 -5.3913703  4.538031  -7.262179 ]]
Iteration 400 of 1000: loss=0.000141 " + "l1=0" + "l2=0.000141 f=-0.895 shape=(1, 9000, 1)
logits [[ 4.5389442 -5.392658   4.538973  -7.263537 ]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.000231 " + "l1=0.000231" + "l2=0 f=-0.892 shape=(1, 9000, 1)
logits [[ 4.5616655 -5.3696213  4.515437  -7.2737994]]
Iteration 100 of 1000: loss=0.000159 " + "l1=5.21e-05" + "l2=0.000106 f=-0.893 shape=(1, 9000, 1)
logits [[ 4.5420175 -5.3847795  4.5315895 -7.262497 ]]
Iteration 200 of 1000: loss=0.000129 " + "l1=4.69e-05" + "l2=8.21e-05 f=-0.894 shape=(1, 9000, 1)
logits [[ 4.5419188 -5.385809   4.532529  -7.263078 ]]
Iteration 300 of 1000: loss=0.000107 " + "l1=2.45e-05" + "l2=8.29e-05 f=-0.894 shape=(1, 9000, 1)
logits [[ 4.5403004 -5.3887124  4.535391  -7.2630906]]
Iteration 400 of 1000: loss=0.000136 " + "l1=8.96e-07" + "l2=0.000136 f=-0.894 shape=(1, 9000, 1)
logits [[ 4.538566  -5.391859   4.538387  -7.2630234]]
const [0.0025]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.000116 " + "l1=0.000116" + "l2=0 f=-0.892 shape=(1, 9000, 1)
logits [[ 4.5616655 -5.3696213  4.515437  -7.2737994]]
Iteration 100 of 1000: loss=0.000115 " + "l1=4.65e-05" + "l2=6.82e-05 f=-0.893 shape=(1, 9000, 1)
logits [[ 4.5466413 -5.38169    4.528032  -7.2650642]]
Iteration 200 of 1000: loss=9.16e-05 " + "l1=5.62e-05" + "l2=3.55e-05 f=-0.893 shape=(1, 9000, 1)
logits [[ 4.5492086 -5.3805943  4.526743  -7.2670093]]
Iteration 300 of 1000: loss=9.6e-05 " + "l1=5.54e-05" + "l2=4.06e-05 f=-0.893 shape=(1, 9000, 1)
logits [[ 4.5495205 -5.381267   4.5273604 -7.2677517]]
const [0.00125]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.78e-05 " + "l1=5.78e-05" + "l2=0 f=-0.892 shape=(1, 9000, 1)
logits [[ 4.5616655 -5.3696213  4.515437  -7.2737994]]
Iteration 100 of 1000: loss=8.05e-05 " + "l1=2.96e-05" + "l2=5.08e-05 f=-0.893 shape=(1, 9000, 1)
logits [[ 4.5496445 -5.3798227  4.5259504 -7.2667828]]
const [0.000625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.89e-05 " + "l1=2.89e-05" + "l2=0 f=-0.892 shape=(1, 9000, 1)
logits [[ 4.5616655 -5.3696213  4.515437  -7.2737994]]
Iteration 100 of 1000: loss=5.42e-05 " + "l1=1.71e-05" + "l2=3.71e-05 f=-0.893 shape=(1, 9000, 1)
logits [[ 4.551803  -5.378388   4.5244493 -7.2681775]]
--- 88.62006974220276 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.118 " + "l1=0.118" + "l2=0 f=-0.892 shape=(1, 9000, 1)
logits [[ 4.5616655 -5.3696213  4.515437  -7.2737994]]
Iteration 100 of 1000: loss=0.117 " + "l1=0.116" + "l2=0.000872 f=-0.88 shape=(1, 9000, 1)
logits [[ 4.4591765 -5.310348   4.450572  -7.1210537]]
Iteration 200 of 1000: loss=0.116 " + "l1=0.115" + "l2=0.00106 f=-0.878 shape=(1, 9000, 1)
logits [[ 4.4303885 -5.2923446  4.43037   -7.0794187]]
Iteration 300 of 1000: loss=0.116 " + "l1=0.115" + "l2=0.00123 f=-0.875 shape=(1, 9000, 1)
logits [[ 4.408079  -5.272502   4.4080124 -7.043028 ]]
Iteration 400 of 1000: loss=0.115 " + "l1=0.114" + "l2=0.00143 f=-0.872 shape=(1, 9000, 1)
logits [[ 4.385823  -5.252814   4.3855433 -7.007065 ]]
Iteration 500 of 1000: loss=0.115 " + "l1=0.113" + "l2=0.00167 f=-0.869 shape=(1, 9000, 1)
logits [[ 4.3641825 -5.2342505  4.364233  -6.972038 ]]
Iteration 600 of 1000: loss=0.115 " + "l1=0.113" + "l2=0.0019 f=-0.867 shape=(1, 9000, 1)
logits [[ 4.3436074 -5.216265   4.343497  -6.9379916]]
Iteration 700 of 1000: loss=0.114 " + "l1=0.112" + "l2=0.00219 f=-0.864 shape=(1, 9000, 1)
logits [[ 4.3236613 -5.1987705  4.3234806 -6.904881 ]]
Iteration 800 of 1000: loss=0.114 " + "l1=0.112" + "l2=0.00242 f=-0.862 shape=(1, 9000, 1)
logits [[ 4.3047314 -5.182383   4.3046913 -6.873181 ]]
Iteration 900 of 1000: loss=0.114 " + "l1=0.111" + "l2=0.00271 f=-0.859 shape=(1, 9000, 1)
logits [[ 4.2873864 -5.1673574  4.2870626 -6.8432646]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.18 " + "l1=1.18" + "l2=0 f=-0.892 shape=(1, 9000, 1)
logits [[ 4.5616655 -5.3696213  4.515437  -7.2737994]]
Iteration 100 of 1000: loss=1.06 " + "l1=1.01" + "l2=0.0551 f=-0.784 shape=(1, 9000, 1)
logits [[ 3.9122696 -4.8143487  3.9123998 -6.14745  ]]
Iteration 200 of 1000: loss=1 " + "l1=0.923" + "l2=0.0789 f=-0.733 shape=(1, 9000, 1)
logits [[ 3.610726  -4.539378   3.6126802 -5.614331 ]]
Iteration 300 of 1000: loss=0.948 " + "l1=0.848" + "l2=0.101 f=-0.685 shape=(1, 9000, 1)
logits [[ 3.3439078 -4.299373   3.3448122 -5.1307073]]
Iteration 400 of 1000: loss=0.903 " + "l1=0.783" + "l2=0.121 f=-0.643 shape=(1, 9000, 1)
logits [[ 3.113218  -4.100369   3.1208043 -4.707071 ]]
Iteration 500 of 1000: loss=0.859 " + "l1=0.72" + "l2=0.139 f=-0.599 shape=(1, 9000, 1)
logits [[ 2.8938088 -3.8945615  2.9017916 -4.2972174]]
Iteration 600 of 1000: loss=0.816 " + "l1=0.658" + "l2=0.158 f=-0.559 shape=(1, 9000, 1)
logits [[ 2.6503928 -3.7039251  2.6991856 -3.8835595]]
Iteration 700 of 1000: loss=0.778 " + "l1=0.599" + "l2=0.179 f=-0.533 shape=(1, 9000, 1)
logits [[ 2.3811104 -3.533649   2.5041618 -3.4844577]]
Iteration 800 of 1000: loss=0.747 " + "l1=0.551" + "l2=0.196 f=-0.516 shape=(1, 9000, 1)
logits [[ 2.1582859 -3.4116218  2.3508716 -3.1601841]]
Iteration 900 of 1000: loss=0.723 " + "l1=0.513" + "l2=0.21 f=-0.501 shape=(1, 9000, 1)
logits [[ 1.9926519 -3.3317444  2.2333007 -2.8984725]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.8 " + "l1=11.8" + "l2=0 f=-0.892 shape=(1, 9000, 1)
logits [[ 4.5616655 -5.3696213  4.515437  -7.2737994]]
Iteration 100 of 1000: loss=3.32 " + "l1=0.038" + "l2=3.29 f=-0.241 shape=(1, 9000, 1)
logits [[-0.09366428 -1.621973    0.3955736   0.3576116 ]]
Iteration 200 of 1000: loss=2.25 " + "l1=0" + "l2=2.25 f=-0.268 shape=(1, 9000, 1)
logits [[-0.14077951 -1.5752802   0.30770028  0.3373492 ]]
Iteration 300 of 1000: loss=1.9 " + "l1=0.0332" + "l2=1.87 f=-0.306 shape=(1, 9000, 1)
logits [[-0.14251272 -1.6059998   0.27883667  0.24562234]]
Iteration 400 of 1000: loss=1.68 " + "l1=0.0365" + "l2=1.65 f=-0.329 shape=(1, 9000, 1)
logits [[-0.14360179 -1.63745     0.2516814   0.21522942]]
Iteration 500 of 1000: loss=1.51 " + "l1=0.0212" + "l2=1.49 f=-0.333 shape=(1, 9000, 1)
logits [[-0.13895355 -1.645635    0.23715113  0.21595463]]
Iteration 600 of 1000: loss=1.34 " + "l1=0" + "l2=1.34 f=-0.329 shape=(1, 9000, 1)
logits [[-0.15053362 -1.6276267   0.21253039  0.25111258]]
Iteration 700 of 1000: loss=1.17 " + "l1=0" + "l2=1.17 f=-0.324 shape=(1, 9000, 1)
logits [[-0.1039147  -1.6487697   0.22068097  0.23516479]]
Iteration 800 of 1000: loss=1.04 " + "l1=0.00281" + "l2=1.04 f=-0.32 shape=(1, 9000, 1)
logits [[-0.06133423 -1.6579417   0.22136049  0.21855521]]
Iteration 900 of 1000: loss=0.952 " + "l1=0" + "l2=0.952 f=-0.308 shape=(1, 9000, 1)
logits [[-0.02148438 -1.6467531   0.20414768  0.23133299]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.51 " + "l1=6.51" + "l2=0 f=-0.892 shape=(1, 9000, 1)
logits [[ 4.5616655 -5.3696213  4.515437  -7.2737994]]
Iteration 100 of 1000: loss=3.51 " + "l1=2.01" + "l2=1.49 f=-0.395 shape=(1, 9000, 1)
logits [[ 1.381165  -2.678142   1.6886978 -1.9710021]]
Iteration 200 of 1000: loss=2.22 " + "l1=0.389" + "l2=1.83 f=-0.252 shape=(1, 9000, 1)
logits [[ 0.22048706 -1.8457539   0.6611387  -0.04530386]]
Iteration 300 of 1000: loss=1.46 " + "l1=0.00787" + "l2=1.45 f=-0.276 shape=(1, 9000, 1)
logits [[-0.04223254 -1.6462774   0.29973543  0.28542554]]
Iteration 400 of 1000: loss=1.11 " + "l1=0.0131" + "l2=1.1 f=-0.31 shape=(1, 9000, 1)
logits [[-0.07688954 -1.6481981   0.25404507  0.23018253]]
Iteration 500 of 1000: loss=0.95 " + "l1=0" + "l2=0.95 f=-0.311 shape=(1, 9000, 1)
logits [[-0.0553081  -1.6553811   0.22853266  0.2400021 ]]
Iteration 600 of 1000: loss=0.839 " + "l1=0.000765" + "l2=0.839 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.00778472 -1.6594267   0.21821621  0.21682483]]
Iteration 700 of 1000: loss=0.766 " + "l1=0" + "l2=0.766 f=-0.295 shape=(1, 9000, 1)
logits [[ 0.0413768  -1.6572461   0.20542882  0.23102024]]
Iteration 800 of 1000: loss=0.698 " + "l1=0.0085" + "l2=0.689 f=-0.29 shape=(1, 9000, 1)
logits [[ 0.09878325 -1.6711385   0.21470109  0.19924843]]
Iteration 900 of 1000: loss=0.637 " + "l1=0.00432" + "l2=0.633 f=-0.29 shape=(1, 9000, 1)
logits [[ 0.1253562  -1.6882684   0.20532596  0.19747728]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.85 " + "l1=3.85" + "l2=0 f=-0.892 shape=(1, 9000, 1)
logits [[ 4.5616655 -5.3696213  4.515437  -7.2737994]]
Iteration 100 of 1000: loss=2.71 " + "l1=2.15" + "l2=0.554 f=-0.561 shape=(1, 9000, 1)
logits [[ 2.6478593 -3.5731306  2.6521623 -3.969634 ]]
Iteration 200 of 1000: loss=2.14 " + "l1=1.37" + "l2=0.773 f=-0.43 shape=(1, 9000, 1)
logits [[ 1.6244777 -2.9245715  1.8923099 -2.3139586]]
Iteration 300 of 1000: loss=1.65 " + "l1=0.754" + "l2=0.891 f=-0.352 shape=(1, 9000, 1)
logits [[ 0.8177488 -2.4728613  1.2842344 -1.0354748]]
Iteration 400 of 1000: loss=1.34 " + "l1=0.376" + "l2=0.965 f=-0.297 shape=(1, 9000, 1)
logits [[ 0.3708792  -2.1989276   0.89762896 -0.25815743]]
Iteration 500 of 1000: loss=1.1 " + "l1=0.118" + "l2=0.984 f=-0.268 shape=(1, 9000, 1)
logits [[ 0.11212391 -2.0485523   0.61397296  0.24988139]]
Iteration 600 of 1000: loss=0.871 " + "l1=0.0015" + "l2=0.87 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.11087537 -1.9123554   0.38837323  0.3837728 ]]
Iteration 700 of 1000: loss=0.731 " + "l1=0" + "l2=0.731 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.13654912 -1.8469348   0.288932    0.29836872]]
Iteration 800 of 1000: loss=0.633 " + "l1=0.00581" + "l2=0.628 f=-0.303 shape=(1, 9000, 1)
logits [[ 0.15787545 -1.8382665   0.2440235   0.22614545]]
Iteration 900 of 1000: loss=0.567 " + "l1=0.000804" + "l2=0.566 f=-0.309 shape=(1, 9000, 1)
logits [[ 0.16116595 -1.8564544   0.23055142  0.22807825]]
--- 301.0820188522339 seconds ---
Adv result:3
Loading record A06736
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0705 " + "l1=0.0705" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.6412625 -2.4053633  2.957482  -7.6730576]]
Iteration 100 of 1000: loss=0.0701 " + "l1=0.0699" + "l2=0.000254 f=-0.618 shape=(1, 9000, 1)
logits [[ 4.603745  -2.3856287  2.9413335 -7.632848 ]]
Iteration 200 of 1000: loss=0.0701 " + "l1=0.0698" + "l2=0.000239 f=-0.618 shape=(1, 9000, 1)
logits [[ 4.5997796 -2.3823216  2.938546  -7.6289363]]
Iteration 300 of 1000: loss=0.07 " + "l1=0.0697" + "l2=0.000302 f=-0.618 shape=(1, 9000, 1)
logits [[ 4.593408  -2.3776784  2.934686  -7.622212 ]]
Iteration 400 of 1000: loss=0.07 " + "l1=0.0696" + "l2=0.000386 f=-0.618 shape=(1, 9000, 1)
logits [[ 4.5868125 -2.3728733  2.9307046 -7.615077 ]]
Iteration 500 of 1000: loss=0.0699 " + "l1=0.0695" + "l2=0.000459 f=-0.617 shape=(1, 9000, 1)
logits [[ 4.580033  -2.367941   2.9266548 -7.607573 ]]
Iteration 600 of 1000: loss=0.0699 " + "l1=0.0694" + "l2=0.000569 f=-0.617 shape=(1, 9000, 1)
logits [[ 4.5734143 -2.36316    2.9228034 -7.6002674]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.705 " + "l1=0.705" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.6412625 -2.4053633  2.957482  -7.6730576]]
Iteration 100 of 1000: loss=0.671 " + "l1=0.649" + "l2=0.0223 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.286854  -2.2004778  2.7953234 -7.296674 ]]
Iteration 200 of 1000: loss=0.653 " + "l1=0.623" + "l2=0.0306 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.138921  -2.0881834  2.7012823 -7.130895 ]]
Iteration 300 of 1000: loss=0.638 " + "l1=0.601" + "l2=0.0367 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.0172105 -1.996956   2.6267674 -6.998725 ]]
Iteration 400 of 1000: loss=0.625 " + "l1=0.58" + "l2=0.0448 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.8855143 -1.9122292  2.5598495 -6.8633103]]
Iteration 500 of 1000: loss=0.613 " + "l1=0.562" + "l2=0.0514 f=-0.577 shape=(1, 9000, 1)
logits [[ 3.7716787 -1.8470526  2.5081425 -6.742081 ]]
Iteration 600 of 1000: loss=0.604 " + "l1=0.547" + "l2=0.0565 f=-0.573 shape=(1, 9000, 1)
logits [[ 3.6762283 -1.7948244  2.4691057 -6.641537 ]]
Iteration 700 of 1000: loss=0.595 " + "l1=0.534" + "l2=0.0614 f=-0.567 shape=(1, 9000, 1)
logits [[ 3.586956  -1.750359   2.4359577 -6.5413837]]
Iteration 800 of 1000: loss=0.586 " + "l1=0.521" + "l2=0.0653 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.5036173 -1.7067373  2.4083464 -6.4470706]]
Iteration 900 of 1000: loss=0.578 " + "l1=0.508" + "l2=0.0692 f=-0.555 shape=(1, 9000, 1)
logits [[ 3.4249272 -1.6593281  2.3781097 -6.3631263]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.05 " + "l1=7.05" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.6412625 -2.4053633  2.957482  -7.6730576]]
Iteration 100 of 1000: loss=3.98 " + "l1=2.67" + "l2=1.32 f=-0.58 shape=(1, 9000, 1)
logits [[ 1.7340153  -0.92602026  1.7423607  -4.871488  ]]
Iteration 200 of 1000: loss=3.25 " + "l1=1.93" + "l2=1.31 f=-0.553 shape=(1, 9000, 1)
logits [[ 1.3984979  -0.52868915  1.4038451  -4.4874415 ]]
Iteration 300 of 1000: loss=2.85 " + "l1=1.51" + "l2=1.34 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.1982776  -0.30243537  1.2028664  -4.2218423 ]]
Iteration 400 of 1000: loss=2.64 " + "l1=1.32" + "l2=1.32 f=-0.513 shape=(1, 9000, 1)
logits [[ 1.1010104  -0.20997266  1.109307   -4.0507007 ]]
Iteration 500 of 1000: loss=2.49 " + "l1=1.2" + "l2=1.29 f=-0.501 shape=(1, 9000, 1)
logits [[ 1.0410489  -0.14873351  1.0478839  -3.9460201 ]]
Iteration 600 of 1000: loss=2.37 " + "l1=1.12" + "l2=1.25 f=-0.488 shape=(1, 9000, 1)
logits [[ 1.0008832  -0.11573195  1.0009483  -3.8390198 ]]
Iteration 700 of 1000: loss=2.26 " + "l1=1.05" + "l2=1.2 f=-0.482 shape=(1, 9000, 1)
logits [[ 0.93267465 -0.1064726   0.9463629  -3.6996224 ]]
Iteration 800 of 1000: loss=2.13 " + "l1=0.958" + "l2=1.17 f=-0.487 shape=(1, 9000, 1)
logits [[ 0.84116435 -0.10979383  0.84830743 -3.5260365 ]]
Iteration 900 of 1000: loss=1.88 " + "l1=0.686" + "l2=1.19 f=-0.495 shape=(1, 9000, 1)
logits [[ 0.59096533 -0.08612692  0.59944224 -3.083529  ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=70.5 " + "l1=70.5" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.6412625 -2.4053633  2.957482  -7.6730576]]
Iteration 100 of 1000: loss=10.3 " + "l1=0.0101" + "l2=10.2 f=-0.478 shape=(1, 9000, 1)
logits [[ 0.11387211  0.5521721   0.55318105 -3.1302938 ]]
Iteration 200 of 1000: loss=6.5 " + "l1=0.017" + "l2=6.49 f=-0.509 shape=(1, 9000, 1)
logits [[ 0.45715055  0.5251202   0.52681607 -3.5455277 ]]
Iteration 300 of 1000: loss=5.49 " + "l1=0" + "l2=5.49 f=-0.53 shape=(1, 9000, 1)
logits [[ 0.36412993  0.5448838   0.5334663  -3.5627732 ]]
Iteration 400 of 1000: loss=4.83 " + "l1=0.033" + "l2=4.79 f=-0.522 shape=(1, 9000, 1)
logits [[ 0.5112173   0.51954746  0.5228427  -3.6405168 ]]
Iteration 500 of 1000: loss=4.4 " + "l1=0" + "l2=4.4 f=-0.52 shape=(1, 9000, 1)
logits [[ 0.47433358  0.52486324  0.51223123 -3.5918202 ]]
Iteration 600 of 1000: loss=4.09 " + "l1=0.0725" + "l2=4.01 f=-0.513 shape=(1, 9000, 1)
logits [[ 0.5032042   0.51709443  0.52434874 -3.5979223 ]]
Iteration 700 of 1000: loss=3.8 " + "l1=0.00811" + "l2=3.79 f=-0.51 shape=(1, 9000, 1)
logits [[ 0.49056497  0.52057856  0.5213896  -3.5730045 ]]
Iteration 800 of 1000: loss=3.65 " + "l1=0" + "l2=3.65 f=-0.509 shape=(1, 9000, 1)
logits [[ 0.4678435  0.517849   0.5132932 -3.5364084]]
Iteration 900 of 1000: loss=3.51 " + "l1=0.0101" + "l2=3.5 f=-0.505 shape=(1, 9000, 1)
logits [[ 0.48044118  0.5132991   0.51431406 -3.5269365 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=38.8 " + "l1=38.8" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.6412625 -2.4053633  2.957482  -7.6730576]]
Iteration 100 of 1000: loss=9.33 " + "l1=3.42" + "l2=5.91 f=-0.498 shape=(1, 9000, 1)
logits [[ 0.84309715  0.22116543  0.843579   -3.8995335 ]]
Iteration 200 of 1000: loss=5.48 " + "l1=0" + "l2=5.48 f=-0.538 shape=(1, 9000, 1)
logits [[ 0.49249813  0.5458207   0.54368407 -3.7352057 ]]
Iteration 300 of 1000: loss=4.44 " + "l1=0" + "l2=4.44 f=-0.531 shape=(1, 9000, 1)
logits [[ 0.47097644  0.52569616  0.52147645 -3.6402805 ]]
Iteration 400 of 1000: loss=3.89 " + "l1=0.0532" + "l2=3.84 f=-0.524 shape=(1, 9000, 1)
logits [[ 0.4947358   0.50562483  0.515292   -3.610909  ]]
Iteration 500 of 1000: loss=3.58 " + "l1=0" + "l2=3.58 f=-0.519 shape=(1, 9000, 1)
logits [[ 0.46662015  0.50538146  0.5030064  -3.5504913 ]]
Iteration 600 of 1000: loss=3.36 " + "l1=0.00249" + "l2=3.36 f=-0.513 shape=(1, 9000, 1)
logits [[ 0.4611916   0.5028216   0.50327367 -3.5206666 ]]
Iteration 700 of 1000: loss=3.19 " + "l1=0" + "l2=3.19 f=-0.498 shape=(1, 9000, 1)
logits [[ 0.42787954  0.5053652   0.49971494 -3.4263883 ]]
Iteration 800 of 1000: loss=3 " + "l1=0" + "l2=3 f=-0.488 shape=(1, 9000, 1)
logits [[ 0.41373566  0.49791846  0.4968755  -3.3616104 ]]
Iteration 900 of 1000: loss=2.85 " + "l1=0.0136" + "l2=2.83 f=-0.479 shape=(1, 9000, 1)
logits [[ 0.39377472  0.49660578  0.4990873  -3.3069904 ]]
--- 275.3405499458313 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0168 " + "l1=0.0168" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.6412625 -2.4053633  2.957482  -7.6730576]]
Iteration 100 of 1000: loss=0.0166 " + "l1=0.0165" + "l2=0.00017 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.6120734 -2.411209   2.9643207 -7.6442103]]
Iteration 200 of 1000: loss=0.0166 " + "l1=0.0164" + "l2=0.000152 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.610562  -2.4125738  2.9656355 -7.6427474]]
Iteration 300 of 1000: loss=0.0166 " + "l1=0.0164" + "l2=0.000176 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.6067276 -2.4141047  2.9673    -7.6389365]]
Iteration 400 of 1000: loss=0.0166 " + "l1=0.0163" + "l2=0.000236 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.6026626 -2.4155324  2.9689996 -7.634784 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.168 " + "l1=0.168" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.6412625 -2.4053633  2.957482  -7.6730576]]
Iteration 100 of 1000: loss=0.151 " + "l1=0.141" + "l2=0.0102 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.412165  -2.4491553  3.000983  -7.447975 ]]
Iteration 200 of 1000: loss=0.144 " + "l1=0.129" + "l2=0.0145 f=-0.622 shape=(1, 9000, 1)
logits [[ 4.3215013 -2.4789925  3.0272672 -7.3569055]]
Iteration 300 of 1000: loss=0.136 " + "l1=0.117" + "l2=0.0193 f=-0.625 shape=(1, 9000, 1)
logits [[ 4.2296352 -2.5207891  3.0639136 -7.2743363]]
Iteration 400 of 1000: loss=0.13 " + "l1=0.107" + "l2=0.0227 f=-0.626 shape=(1, 9000, 1)
logits [[ 4.1579256 -2.5457606  3.086553  -7.201145 ]]
Iteration 500 of 1000: loss=0.125 " + "l1=0.1" + "l2=0.0246 f=-0.624 shape=(1, 9000, 1)
logits [[ 4.105386  -2.5592003  3.1008236 -7.1412497]]
Iteration 600 of 1000: loss=0.121 " + "l1=0.095" + "l2=0.0261 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.059565  -2.56682    3.109407  -7.0850015]]
Iteration 700 of 1000: loss=0.118 " + "l1=0.0898" + "l2=0.0278 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.0145903 -2.5746477  3.1163282 -7.031787 ]]
Iteration 800 of 1000: loss=0.114 " + "l1=0.0854" + "l2=0.0291 f=-0.618 shape=(1, 9000, 1)
logits [[ 3.9759705 -2.5822654  3.1222737 -6.9881887]]
Iteration 900 of 1000: loss=0.111 " + "l1=0.0807" + "l2=0.0306 f=-0.617 shape=(1, 9000, 1)
logits [[ 3.9337795 -2.5868435  3.1265876 -6.940764 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.68 " + "l1=1.68" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.6412625 -2.4053633  2.957482  -7.6730576]]
Iteration 100 of 1000: loss=0.344 " + "l1=0" + "l2=0.344 f=-0.639 shape=(1, 9000, 1)
logits [[ 3.1178977 -2.6570055  3.1259565 -6.1417203]]
Iteration 200 of 1000: loss=0.247 " + "l1=0" + "l2=0.247 f=-0.634 shape=(1, 9000, 1)
logits [[ 3.1514878 -2.695478   3.1534028 -6.14705  ]]
Iteration 300 of 1000: loss=0.208 " + "l1=0" + "l2=0.208 f=-0.631 shape=(1, 9000, 1)
logits [[ 3.1616542 -2.7129297  3.1666348 -6.1375356]]
Iteration 400 of 1000: loss=0.188 " + "l1=0" + "l2=0.188 f=-0.629 shape=(1, 9000, 1)
logits [[ 3.1471558 -2.7166452  3.1693006 -6.114235 ]]
Iteration 500 of 1000: loss=0.162 " + "l1=0" + "l2=0.162 f=-0.625 shape=(1, 9000, 1)
logits [[ 3.166796  -2.7050762  3.1673393 -6.1305895]]
Iteration 600 of 1000: loss=0.15 " + "l1=0" + "l2=0.15 f=-0.623 shape=(1, 9000, 1)
logits [[ 3.1583068 -2.6963797  3.1673484 -6.1204157]]
Iteration 700 of 1000: loss=0.138 " + "l1=0" + "l2=0.138 f=-0.621 shape=(1, 9000, 1)
logits [[ 3.156239  -2.686638   3.1649117 -6.1174097]]
Iteration 800 of 1000: loss=0.134 " + "l1=0" + "l2=0.134 f=-0.619 shape=(1, 9000, 1)
logits [[ 3.1285899 -2.683097   3.164796  -6.0858684]]
Iteration 900 of 1000: loss=0.119 " + "l1=0" + "l2=0.119 f=-0.617 shape=(1, 9000, 1)
logits [[ 3.1503124 -2.6713731  3.1606157 -6.105867 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.926 " + "l1=0.926" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.6412625 -2.4053633  2.957482  -7.6730576]]
Iteration 100 of 1000: loss=0.366 " + "l1=0.0582" + "l2=0.307 f=-0.639 shape=(1, 9000, 1)
logits [[ 3.2280145 -2.6467292  3.1221266 -6.259361 ]]
Iteration 200 of 1000: loss=0.236 " + "l1=0.00748" + "l2=0.229 f=-0.636 shape=(1, 9000, 1)
logits [[ 3.1782572 -2.7122326  3.1646519 -6.176538 ]]
Iteration 300 of 1000: loss=0.192 " + "l1=0" + "l2=0.192 f=-0.63 shape=(1, 9000, 1)
logits [[ 3.169432  -2.719617   3.1715984 -6.142862 ]]
Iteration 400 of 1000: loss=0.167 " + "l1=5.64e-06" + "l2=0.167 f=-0.626 shape=(1, 9000, 1)
logits [[ 3.1702557 -2.7070599  3.1702454 -6.135822 ]]
Iteration 500 of 1000: loss=0.151 " + "l1=0" + "l2=0.151 f=-0.621 shape=(1, 9000, 1)
logits [[ 3.1588433 -2.6926348  3.1670246 -6.1192145]]
Iteration 600 of 1000: loss=0.137 " + "l1=0.00304" + "l2=0.134 f=-0.618 shape=(1, 9000, 1)
logits [[ 3.169421  -2.6785953  3.1638987 -6.127021 ]]
Iteration 700 of 1000: loss=0.127 " + "l1=0" + "l2=0.127 f=-0.615 shape=(1, 9000, 1)
logits [[ 3.151152  -2.6735544  3.1647568 -6.1039214]]
Iteration 800 of 1000: loss=0.113 " + "l1=0" + "l2=0.113 f=-0.614 shape=(1, 9000, 1)
logits [[ 3.1599574 -2.662569   3.1623363 -6.114377 ]]
Iteration 900 of 1000: loss=0.105 " + "l1=0" + "l2=0.105 f=-0.613 shape=(1, 9000, 1)
logits [[ 3.1470563 -2.6529527  3.1568882 -6.1019707]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.547 " + "l1=0.547" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.6412625 -2.4053633  2.957482  -7.6730576]]
Iteration 100 of 1000: loss=0.343 " + "l1=0.224" + "l2=0.119 f=-0.631 shape=(1, 9000, 1)
logits [[ 3.7717664 -2.5639946  3.0820818 -6.814665 ]]
Iteration 200 of 1000: loss=0.265 " + "l1=0.111" + "l2=0.153 f=-0.631 shape=(1, 9000, 1)
logits [[ 3.4807496 -2.6490812  3.137912  -6.4928246]]
Iteration 300 of 1000: loss=0.208 " + "l1=0.0333" + "l2=0.175 f=-0.629 shape=(1, 9000, 1)
logits [[ 3.26307   -2.7028844  3.160685  -6.2384577]]
Iteration 400 of 1000: loss=0.169 " + "l1=0.00291" + "l2=0.166 f=-0.624 shape=(1, 9000, 1)
logits [[ 3.1852305 -2.7123196  3.17628   -6.14327  ]]
Iteration 500 of 1000: loss=0.148 " + "l1=0" + "l2=0.148 f=-0.621 shape=(1, 9000, 1)
logits [[ 3.170161  -2.6964772  3.1713638 -6.128755 ]]
Iteration 600 of 1000: loss=0.132 " + "l1=0.00147" + "l2=0.131 f=-0.619 shape=(1, 9000, 1)
logits [[ 3.1700127 -2.680172   3.165499  -6.129548 ]]
Iteration 700 of 1000: loss=0.118 " + "l1=0.000386" + "l2=0.118 f=-0.617 shape=(1, 9000, 1)
logits [[ 3.1639092 -2.6714704  3.1627214 -6.1236544]]
Iteration 800 of 1000: loss=0.106 " + "l1=0" + "l2=0.106 f=-0.615 shape=(1, 9000, 1)
logits [[ 3.154792  -2.6576517  3.1555212 -6.1140904]]
Iteration 900 of 1000: loss=0.0967 " + "l1=0.00221" + "l2=0.0945 f=-0.616 shape=(1, 9000, 1)
logits [[ 3.157878  -2.6474955  3.1510777 -6.1235027]]
--- 263.25052309036255 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.123 " + "l1=0.123" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.6412625 -2.4053633  2.957482  -7.6730576]]
Iteration 100 of 1000: loss=0.122 " + "l1=0.122" + "l2=0.000556 f=-0.617 shape=(1, 9000, 1)
logits [[ 4.580768  -2.3956528  2.9452562 -7.5965486]]
Iteration 200 of 1000: loss=0.122 " + "l1=0.122" + "l2=0.000608 f=-0.616 shape=(1, 9000, 1)
logits [[ 4.56933   -2.3941343  2.9427493 -7.581967 ]]
Iteration 300 of 1000: loss=0.122 " + "l1=0.121" + "l2=0.000722 f=-0.615 shape=(1, 9000, 1)
logits [[ 4.5564814 -2.3920097  2.939703  -7.565349 ]]
Iteration 400 of 1000: loss=0.122 " + "l1=0.121" + "l2=0.000867 f=-0.615 shape=(1, 9000, 1)
logits [[ 4.543798  -2.3896976  2.9366217 -7.548939 ]]
Iteration 500 of 1000: loss=0.122 " + "l1=0.121" + "l2=0.000979 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.531741  -2.3874269  2.9334993 -7.53339  ]]
Iteration 600 of 1000: loss=0.122 " + "l1=0.12" + "l2=0.00113 f=-0.613 shape=(1, 9000, 1)
logits [[ 4.5201397 -2.3852284  2.9304597 -7.518418 ]]
Iteration 700 of 1000: loss=0.121 " + "l1=0.12" + "l2=0.00128 f=-0.613 shape=(1, 9000, 1)
logits [[ 4.5089793 -2.3830082  2.9273958 -7.5040393]]
Iteration 800 of 1000: loss=0.121 " + "l1=0.12" + "l2=0.00147 f=-0.612 shape=(1, 9000, 1)
logits [[ 4.498066  -2.3807735  2.9243798 -7.4900002]]
Iteration 900 of 1000: loss=0.121 " + "l1=0.12" + "l2=0.00157 f=-0.611 shape=(1, 9000, 1)
logits [[ 4.4873657 -2.3786137  2.9214814 -7.4761696]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.23 " + "l1=1.23" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.6412625 -2.4053633  2.957482  -7.6730576]]
Iteration 100 of 1000: loss=1.14 " + "l1=1.08" + "l2=0.0611 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.9697292 -2.2739232  2.7980654 -6.8256316]]
Iteration 200 of 1000: loss=1.1 " + "l1=1.01" + "l2=0.0843 f=-0.572 shape=(1, 9000, 1)
logits [[ 3.6812966 -2.2409518  2.7142756 -6.442017 ]]
Iteration 300 of 1000: loss=1.06 " + "l1=0.964" + "l2=0.0951 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.478306  -2.2070792  2.640568  -6.1633625]]
Iteration 400 of 1000: loss=1.03 " + "l1=0.923" + "l2=0.106 f=-0.556 shape=(1, 9000, 1)
logits [[ 3.302642  -2.1598413  2.5627213 -5.9292574]]
Iteration 500 of 1000: loss=1 " + "l1=0.89" + "l2=0.112 f=-0.551 shape=(1, 9000, 1)
logits [[ 3.156019  -2.1153388  2.4937356 -5.7399807]]
Iteration 600 of 1000: loss=0.975 " + "l1=0.853" + "l2=0.122 f=-0.544 shape=(1, 9000, 1)
logits [[ 2.9984055 -2.0750837  2.4335938 -5.532925 ]]
Iteration 700 of 1000: loss=0.947 " + "l1=0.814" + "l2=0.133 f=-0.533 shape=(1, 9000, 1)
logits [[ 2.8311791 -2.019752   2.3637846 -5.3072934]]
Iteration 800 of 1000: loss=0.913 " + "l1=0.766" + "l2=0.147 f=-0.526 shape=(1, 9000, 1)
logits [[ 2.624291  -1.9739435  2.2824795 -5.0355577]]
Iteration 900 of 1000: loss=0.87 " + "l1=0.706" + "l2=0.164 f=-0.52 shape=(1, 9000, 1)
logits [[ 2.3666117 -1.9252268  2.176848  -4.6978297]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.3 " + "l1=12.3" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.6412625 -2.4053633  2.957482  -7.6730576]]
Iteration 100 of 1000: loss=6.44 " + "l1=4.29" + "l2=2.15 f=-0.401 shape=(1, 9000, 1)
logits [[ 1.1956297 -1.60468    1.5467414 -2.7419727]]
Iteration 200 of 1000: loss=4.26 " + "l1=1.42" + "l2=2.84 f=-0.303 shape=(1, 9000, 1)
logits [[-0.09503074 -1.3106407   0.8074701  -0.6143599 ]]
Iteration 300 of 1000: loss=2.71 " + "l1=0" + "l2=2.71 f=-0.256 shape=(1, 9000, 1)
logits [[-0.65062207 -1.1886992   0.4002829   0.4146869 ]]
Iteration 400 of 1000: loss=2.12 " + "l1=0.0285" + "l2=2.09 f=-0.268 shape=(1, 9000, 1)
logits [[-0.61025    -1.2386984   0.40254653  0.37401816]]
Iteration 500 of 1000: loss=1.82 " + "l1=0" + "l2=1.82 f=-0.268 shape=(1, 9000, 1)
logits [[-0.6308653  -1.2501292   0.38845643  0.41933405]]
Iteration 600 of 1000: loss=1.64 " + "l1=0" + "l2=1.64 f=-0.271 shape=(1, 9000, 1)
logits [[-0.6223251  -1.2619171   0.3893373   0.40977597]]
Iteration 700 of 1000: loss=1.52 " + "l1=0.00555" + "l2=1.51 f=-0.276 shape=(1, 9000, 1)
logits [[-0.6059071  -1.273007    0.39110607  0.38555327]]
Iteration 800 of 1000: loss=1.42 " + "l1=0" + "l2=1.42 f=-0.277 shape=(1, 9000, 1)
logits [[-0.61020756 -1.2718999   0.3782244   0.395921  ]]
Iteration 900 of 1000: loss=1.32 " + "l1=0.0131" + "l2=1.31 f=-0.279 shape=(1, 9000, 1)
logits [[-0.58929974 -1.2797921   0.38233474  0.3692203 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.77 " + "l1=6.77" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.6412625 -2.4053633  2.957482  -7.6730576]]
Iteration 100 of 1000: loss=4.37 " + "l1=3.36" + "l2=1.01 f=-0.473 shape=(1, 9000, 1)
logits [[ 2.017435  -1.8358768  2.0207872 -4.0935793]]
Iteration 200 of 1000: loss=3.7 " + "l1=2.61" + "l2=1.1 f=-0.409 shape=(1, 9000, 1)
logits [[ 1.5101418 -1.6541942  1.6235859 -3.1145978]]
Iteration 300 of 1000: loss=2.97 " + "l1=1.6" + "l2=1.37 f=-0.386 shape=(1, 9000, 1)
logits [[ 0.6358249 -1.4705937  1.10045   -1.8104149]]
Iteration 400 of 1000: loss=2.29 " + "l1=0.817" + "l2=1.48 f=-0.345 shape=(1, 9000, 1)
logits [[-0.01641676 -1.3138559   0.7170855  -0.76831716]]
Iteration 500 of 1000: loss=1.82 " + "l1=0.241" + "l2=1.58 f=-0.317 shape=(1, 9000, 1)
logits [[-0.52341765 -1.2228702   0.45857736  0.02007731]]
Iteration 600 of 1000: loss=1.53 " + "l1=0.0104" + "l2=1.52 f=-0.294 shape=(1, 9000, 1)
logits [[-0.6552428 -1.1786532  0.3383179  0.3193419]]
Iteration 700 of 1000: loss=1.37 " + "l1=0.0184" + "l2=1.35 f=-0.296 shape=(1, 9000, 1)
logits [[-0.6222824  -1.1904287   0.33115494  0.2976571 ]]
Iteration 800 of 1000: loss=1.24 " + "l1=0" + "l2=1.24 f=-0.289 shape=(1, 9000, 1)
logits [[-0.61106837 -1.1943538   0.3202549   0.330455  ]]
Iteration 900 of 1000: loss=1.14 " + "l1=0" + "l2=1.14 f=-0.282 shape=(1, 9000, 1)
logits [[-0.5791839  -1.1938864   0.31214216  0.33189696]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4 " + "l1=4" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.6412625 -2.4053633  2.957482  -7.6730576]]
Iteration 100 of 1000: loss=3.02 " + "l1=2.46" + "l2=0.566 f=-0.541 shape=(1, 9000, 1)
logits [[ 2.5384188 -2.081713   2.3999748 -5.021582 ]]
Iteration 200 of 1000: loss=2.67 " + "l1=2.08" + "l2=0.596 f=-0.489 shape=(1, 9000, 1)
logits [[ 2.117887  -1.9236073  2.1189559 -4.2688675]]
Iteration 300 of 1000: loss=2.44 " + "l1=1.83" + "l2=0.608 f=-0.456 shape=(1, 9000, 1)
logits [[ 1.8617944 -1.7910818  1.8640281 -3.7587056]]
Iteration 400 of 1000: loss=2.16 " + "l1=1.51" + "l2=0.655 f=-0.435 shape=(1, 9000, 1)
logits [[ 1.4321266 -1.6593337  1.5640068 -3.0775552]]
Iteration 500 of 1000: loss=1.85 " + "l1=1.12" + "l2=0.736 f=-0.429 shape=(1, 9000, 1)
logits [[ 0.9051233 -1.5126077  1.1620296 -2.2702482]]
Iteration 600 of 1000: loss=1.64 " + "l1=0.867" + "l2=0.772 f=-0.41 shape=(1, 9000, 1)
logits [[ 0.5591034  -1.4179949   0.94343865 -1.7256529 ]]
Iteration 700 of 1000: loss=1.48 " + "l1=0.679" + "l2=0.801 f=-0.394 shape=(1, 9000, 1)
logits [[ 0.29038033 -1.3487723   0.7867495  -1.3039482 ]]
Iteration 800 of 1000: loss=1.35 " + "l1=0.522" + "l2=0.826 f=-0.378 shape=(1, 9000, 1)
logits [[ 0.08086471 -1.2694365   0.6410285  -0.9654964 ]]
Iteration 900 of 1000: loss=1.23 " + "l1=0.386" + "l2=0.845 f=-0.36 shape=(1, 9000, 1)
logits [[-0.0821391  -1.2072498   0.51762354 -0.66962475]]
--- 300.13489985466003 seconds ---
Adv result:3
Loading record A06755
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0783 " + "l1=0.0783" + "l2=0 f=-0.49 shape=(1, 9000, 1)
logits [[ 5.499071  -2.326351   2.9872034 -8.120969 ]]
Iteration 100 of 1000: loss=0.0779 " + "l1=0.0777" + "l2=0.000259 f=-0.488 shape=(1, 9000, 1)
logits [[ 5.46396   -2.3025084  2.970393  -8.083892 ]]
Iteration 200 of 1000: loss=0.0778 " + "l1=0.0776" + "l2=0.000256 f=-0.488 shape=(1, 9000, 1)
logits [[ 5.460771  -2.298137   2.9670398 -8.0803995]]
Iteration 300 of 1000: loss=0.0778 " + "l1=0.0775" + "l2=0.000302 f=-0.487 shape=(1, 9000, 1)
logits [[ 5.45574   -2.2932477  2.963395  -8.074939 ]]
Iteration 400 of 1000: loss=0.0778 " + "l1=0.0774" + "l2=0.000357 f=-0.487 shape=(1, 9000, 1)
logits [[ 5.4508677 -2.2891297  2.9603696 -8.069684 ]]
Iteration 500 of 1000: loss=0.0778 " + "l1=0.0773" + "l2=0.000434 f=-0.487 shape=(1, 9000, 1)
logits [[ 5.4463067 -2.2856274  2.9578412 -8.064795 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.783 " + "l1=0.783" + "l2=0 f=-0.49 shape=(1, 9000, 1)
logits [[ 5.499071  -2.326351   2.9872034 -8.120969 ]]
Iteration 100 of 1000: loss=0.754 " + "l1=0.736" + "l2=0.0182 f=-0.471 shape=(1, 9000, 1)
logits [[ 5.22714   -2.128984   2.8420587 -7.824432 ]]
Iteration 200 of 1000: loss=0.744 " + "l1=0.72" + "l2=0.0242 f=-0.466 shape=(1, 9000, 1)
logits [[ 5.138645  -2.0564623  2.7848432 -7.731657 ]]
Iteration 300 of 1000: loss=0.736 " + "l1=0.706" + "l2=0.0298 f=-0.461 shape=(1, 9000, 1)
logits [[ 5.065127  -1.9926804  2.736533  -7.654828 ]]
Iteration 400 of 1000: loss=0.728 " + "l1=0.692" + "l2=0.0358 f=-0.457 shape=(1, 9000, 1)
logits [[ 4.9946885 -1.9292047  2.69257   -7.5871406]]
Iteration 500 of 1000: loss=0.722 " + "l1=0.681" + "l2=0.0412 f=-0.453 shape=(1, 9000, 1)
logits [[ 4.929633  -1.8825761  2.6587746 -7.5188637]]
Iteration 600 of 1000: loss=0.717 " + "l1=0.672" + "l2=0.0453 f=-0.45 shape=(1, 9000, 1)
logits [[ 4.870265  -1.845452   2.6336393 -7.456884 ]]
Iteration 700 of 1000: loss=0.712 " + "l1=0.664" + "l2=0.0487 f=-0.447 shape=(1, 9000, 1)
logits [[ 4.817276  -1.8181963  2.6143029 -7.402428 ]]
Iteration 800 of 1000: loss=0.708 " + "l1=0.657" + "l2=0.0509 f=-0.445 shape=(1, 9000, 1)
logits [[ 4.769935  -1.8011968  2.603312  -7.353077 ]]
Iteration 900 of 1000: loss=0.704 " + "l1=0.65" + "l2=0.0534 f=-0.443 shape=(1, 9000, 1)
logits [[ 4.7218957 -1.7810231  2.5914536 -7.3031626]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.83 " + "l1=7.83" + "l2=0 f=-0.49 shape=(1, 9000, 1)
logits [[ 5.499071  -2.326351   2.9872034 -8.120969 ]]
Iteration 100 of 1000: loss=5.3 " + "l1=3.98" + "l2=1.32 f=-0.398 shape=(1, 9000, 1)
logits [[ 2.986131  -0.9979505  2.011995  -5.593873 ]]
Iteration 200 of 1000: loss=4.56 " + "l1=3.05" + "l2=1.51 f=-0.373 shape=(1, 9000, 1)
logits [[ 2.3727245 -0.6764195  1.7656761 -4.955764 ]]
Iteration 300 of 1000: loss=4.06 " + "l1=2.27" + "l2=1.78 f=-0.346 shape=(1, 9000, 1)
logits [[ 1.8047365  -0.46889985  1.576836   -4.2956796 ]]
Iteration 400 of 1000: loss=3.6 " + "l1=1.74" + "l2=1.87 f=-0.333 shape=(1, 9000, 1)
logits [[ 1.4542205  -0.28535163  1.4197685  -3.921107  ]]
Iteration 500 of 1000: loss=3.28 " + "l1=1.48" + "l2=1.8 f=-0.323 shape=(1, 9000, 1)
logits [[ 1.3306118  -0.15328786  1.3232002  -3.7907414 ]]
Iteration 600 of 1000: loss=3.04 " + "l1=1.25" + "l2=1.79 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.2216626  -0.02754778  1.2155187  -3.639714  ]]
Iteration 700 of 1000: loss=2.87 " + "l1=1.13" + "l2=1.74 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.1529453  0.0201038  1.1444298 -3.5489902]]
Iteration 800 of 1000: loss=2.72 " + "l1=0.956" + "l2=1.77 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.0334707   0.07886384  1.0351516  -3.393711  ]]
Iteration 900 of 1000: loss=2.6 " + "l1=0.829" + "l2=1.77 f=-0.311 shape=(1, 9000, 1)
logits [[ 0.9437675   0.11741179  0.946148   -3.2527478 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=78.3 " + "l1=78.3" + "l2=0 f=-0.49 shape=(1, 9000, 1)
logits [[ 5.499071  -2.326351   2.9872034 -8.120969 ]]
Iteration 100 of 1000: loss=13.1 " + "l1=0.532" + "l2=12.6 f=-0.318 shape=(1, 9000, 1)
logits [[ 0.50861377  0.51274395  0.5659792  -2.8574364 ]]
Iteration 200 of 1000: loss=8.78 " + "l1=0" + "l2=8.78 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.5324128   0.57181174  0.56047916 -2.9290245 ]]
Iteration 300 of 1000: loss=7.66 " + "l1=0" + "l2=7.66 f=-0.323 shape=(1, 9000, 1)
logits [[ 0.5753198   0.58644897  0.57726145 -3.0292714 ]]
Iteration 400 of 1000: loss=7.07 " + "l1=0" + "l2=7.07 f=-0.315 shape=(1, 9000, 1)
logits [[ 0.54601383  0.5994664   0.5809203  -2.985418  ]]
Iteration 500 of 1000: loss=6.53 " + "l1=0" + "l2=6.53 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.562179    0.59643555  0.59000915 -3.0122957 ]]
Iteration 600 of 1000: loss=6.18 " + "l1=0" + "l2=6.18 f=-0.314 shape=(1, 9000, 1)
logits [[ 0.54878783  0.59587413  0.59347045 -2.9926605 ]]
Iteration 700 of 1000: loss=5.91 " + "l1=0.0587" + "l2=5.85 f=-0.31 shape=(1, 9000, 1)
logits [[ 0.5901155   0.591297    0.59716654 -3.0179274 ]]
Iteration 800 of 1000: loss=5.68 " + "l1=0" + "l2=5.68 f=-0.309 shape=(1, 9000, 1)
logits [[ 0.58227414  0.6136768   0.592353   -3.0258782 ]]
Iteration 900 of 1000: loss=5.45 " + "l1=0" + "l2=5.45 f=-0.313 shape=(1, 9000, 1)
logits [[ 0.5794805  0.6061613  0.6000752 -3.038533 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=43 " + "l1=43" + "l2=0 f=-0.49 shape=(1, 9000, 1)
logits [[ 5.499071  -2.326351   2.9872034 -8.120969 ]]
Iteration 100 of 1000: loss=12.1 " + "l1=4.06" + "l2=8.03 f=-0.341 shape=(1, 9000, 1)
logits [[ 0.9286009   0.2089148   0.94742715 -3.4483516 ]]
Iteration 200 of 1000: loss=7.7 " + "l1=0.0604" + "l2=7.64 f=-0.329 shape=(1, 9000, 1)
logits [[ 0.5699254  0.5619561  0.5729463 -3.021241 ]]
Iteration 300 of 1000: loss=6.67 " + "l1=0.137" + "l2=6.53 f=-0.322 shape=(1, 9000, 1)
logits [[ 0.5527511   0.56692606  0.59189194 -2.9976454 ]]
Iteration 400 of 1000: loss=5.99 " + "l1=0" + "l2=5.99 f=-0.311 shape=(1, 9000, 1)
logits [[ 0.57432735  0.60265726  0.5878024  -3.0083396 ]]
Iteration 500 of 1000: loss=5.57 " + "l1=0" + "l2=5.57 f=-0.311 shape=(1, 9000, 1)
logits [[ 0.59607893  0.6039052   0.597583   -3.0427055 ]]
Iteration 600 of 1000: loss=5.33 " + "l1=0.0396" + "l2=5.29 f=-0.314 shape=(1, 9000, 1)
logits [[ 0.59575015  0.59876436  0.60596716 -3.0557327 ]]
Iteration 700 of 1000: loss=5.11 " + "l1=0" + "l2=5.11 f=-0.315 shape=(1, 9000, 1)
logits [[ 0.5718011   0.61194474  0.60207987 -3.046539  ]]
Iteration 800 of 1000: loss=4.89 " + "l1=0.000224" + "l2=4.89 f=-0.315 shape=(1, 9000, 1)
logits [[ 0.58471245  0.6085995   0.60864025 -3.0632174 ]]
Iteration 900 of 1000: loss=4.76 " + "l1=0" + "l2=4.76 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.57418835  0.6112221   0.60657775 -3.057006  ]]
--- 274.01082015037537 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0251 " + "l1=0.0251" + "l2=0 f=-0.49 shape=(1, 9000, 1)
logits [[ 5.499071  -2.326351   2.9872034 -8.120969 ]]
Iteration 100 of 1000: loss=0.025 " + "l1=0.0249" + "l2=0.000144 f=-0.491 shape=(1, 9000, 1)
logits [[ 5.4758687 -2.3281686  2.9896414 -8.100226 ]]
Iteration 200 of 1000: loss=0.025 " + "l1=0.0249" + "l2=0.000102 f=-0.491 shape=(1, 9000, 1)
logits [[ 5.4765887 -2.3287218  2.9903111 -8.101415 ]]
Iteration 300 of 1000: loss=0.025 " + "l1=0.0248" + "l2=0.000128 f=-0.491 shape=(1, 9000, 1)
logits [[ 5.474871  -2.3294473  2.9910638 -8.100262 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.251 " + "l1=0.251" + "l2=0 f=-0.49 shape=(1, 9000, 1)
logits [[ 5.499071  -2.326351   2.9872034 -8.120969 ]]
Iteration 100 of 1000: loss=0.241 " + "l1=0.235" + "l2=0.00592 f=-0.493 shape=(1, 9000, 1)
logits [[ 5.3560805 -2.343748   3.0042045 -7.9899898]]
Iteration 200 of 1000: loss=0.238 " + "l1=0.23" + "l2=0.00766 f=-0.495 shape=(1, 9000, 1)
logits [[ 5.3169703 -2.3561003  3.0147517 -7.9558635]]
Iteration 300 of 1000: loss=0.235 " + "l1=0.226" + "l2=0.00901 f=-0.496 shape=(1, 9000, 1)
logits [[ 5.2846484 -2.3665447  3.0241632 -7.9278536]]
Iteration 400 of 1000: loss=0.232 " + "l1=0.222" + "l2=0.0102 f=-0.497 shape=(1, 9000, 1)
logits [[ 5.2552977 -2.3753133  3.0329676 -7.902084 ]]
Iteration 500 of 1000: loss=0.23 " + "l1=0.219" + "l2=0.0112 f=-0.498 shape=(1, 9000, 1)
logits [[ 5.2274003 -2.3818119  3.0397549 -7.8769608]]
Iteration 600 of 1000: loss=0.227 " + "l1=0.215" + "l2=0.0124 f=-0.498 shape=(1, 9000, 1)
logits [[ 5.197113  -2.387702   3.0463922 -7.848118 ]]
Iteration 700 of 1000: loss=0.225 " + "l1=0.211" + "l2=0.0135 f=-0.498 shape=(1, 9000, 1)
logits [[ 5.1681848 -2.393378   3.0532224 -7.821203 ]]
Iteration 800 of 1000: loss=0.223 " + "l1=0.208" + "l2=0.0144 f=-0.498 shape=(1, 9000, 1)
logits [[ 5.139712  -2.3970637  3.0585148 -7.7950697]]
Iteration 900 of 1000: loss=0.22 " + "l1=0.205" + "l2=0.0154 f=-0.498 shape=(1, 9000, 1)
logits [[ 5.1110945 -2.3989978  3.0621245 -7.7675357]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.51 " + "l1=2.51" + "l2=0 f=-0.49 shape=(1, 9000, 1)
logits [[ 5.499071  -2.326351   2.9872034 -8.120969 ]]
Iteration 100 of 1000: loss=1.41 " + "l1=0.769" + "l2=0.644 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.8629966 -2.4520717  3.0943894 -6.45239  ]]
Iteration 200 of 1000: loss=1.07 " + "l1=0.245" + "l2=0.824 f=-0.473 shape=(1, 9000, 1)
logits [[ 3.5088797 -2.6248798  3.2638748 -6.039204 ]]
Iteration 300 of 1000: loss=0.76 " + "l1=0.0024" + "l2=0.757 f=-0.465 shape=(1, 9000, 1)
logits [[ 3.3167586 -2.6840305  3.3143601 -5.808497 ]]
Iteration 400 of 1000: loss=0.607 " + "l1=0.00817" + "l2=0.599 f=-0.468 shape=(1, 9000, 1)
logits [[ 3.2996054 -2.676089   3.2914383 -5.7856793]]
Iteration 500 of 1000: loss=0.517 " + "l1=0" + "l2=0.517 f=-0.47 shape=(1, 9000, 1)
logits [[ 3.2721872 -2.6719558  3.272876  -5.7526035]]
Iteration 600 of 1000: loss=0.466 " + "l1=0" + "l2=0.466 f=-0.468 shape=(1, 9000, 1)
logits [[ 3.2500463 -2.6525161  3.2534506 -5.721991 ]]
Iteration 700 of 1000: loss=0.427 " + "l1=0.007" + "l2=0.42 f=-0.465 shape=(1, 9000, 1)
logits [[ 3.2491772 -2.6389372  3.2421722 -5.711172 ]]
Iteration 800 of 1000: loss=0.39 " + "l1=0" + "l2=0.39 f=-0.46 shape=(1, 9000, 1)
logits [[ 3.2293746 -2.6316416  3.2331505 -5.6716375]]
Iteration 900 of 1000: loss=0.357 " + "l1=0" + "l2=0.357 f=-0.457 shape=(1, 9000, 1)
logits [[ 3.230042  -2.6315997  3.2313478 -5.65702  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.38 " + "l1=1.38" + "l2=0 f=-0.49 shape=(1, 9000, 1)
logits [[ 5.499071  -2.326351   2.9872034 -8.120969 ]]
Iteration 100 of 1000: loss=1.05 " + "l1=0.821" + "l2=0.228 f=-0.508 shape=(1, 9000, 1)
logits [[ 4.5518174 -2.4463053  3.0590637 -7.1970315]]
Iteration 200 of 1000: loss=0.92 " + "l1=0.618" + "l2=0.302 f=-0.503 shape=(1, 9000, 1)
logits [[ 4.252242  -2.502623   3.1287973 -6.8916664]]
Iteration 300 of 1000: loss=0.797 " + "l1=0.475" + "l2=0.322 f=-0.498 shape=(1, 9000, 1)
logits [[ 4.058834  -2.5594194  3.1944237 -6.687576 ]]
Iteration 400 of 1000: loss=0.676 " + "l1=0.348" + "l2=0.328 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.915027  -2.6227374  3.2823586 -6.5301394]]
Iteration 500 of 1000: loss=0.575 " + "l1=0.223" + "l2=0.352 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.707219  -2.6402922  3.3026376 -6.2775154]]
Iteration 600 of 1000: loss=0.476 " + "l1=0.0904" + "l2=0.386 f=-0.457 shape=(1, 9000, 1)
logits [[ 3.4678662 -2.6440237  3.30351   -5.9558167]]
Iteration 700 of 1000: loss=0.373 " + "l1=0.00237" + "l2=0.371 f=-0.428 shape=(1, 9000, 1)
logits [[ 3.3021927 -2.6235929  3.297878  -5.686526 ]]
Iteration 800 of 1000: loss=0.317 " + "l1=0" + "l2=0.317 f=-0.409 shape=(1, 9000, 1)
logits [[ 3.2752323 -2.5931282  3.275845  -5.5944037]]
Iteration 900 of 1000: loss=0.286 " + "l1=0.00153" + "l2=0.285 f=-0.398 shape=(1, 9000, 1)
logits [[ 3.2542856 -2.5646544  3.25151   -5.532725 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.816 " + "l1=0.816" + "l2=0 f=-0.49 shape=(1, 9000, 1)
logits [[ 5.499071  -2.326351   2.9872034 -8.120969 ]]
Iteration 100 of 1000: loss=0.709 " + "l1=0.64" + "l2=0.0689 f=-0.5 shape=(1, 9000, 1)
logits [[ 4.999669  -2.384713   3.0304613 -7.6449084]]
Iteration 200 of 1000: loss=0.665 " + "l1=0.564" + "l2=0.101 f=-0.508 shape=(1, 9000, 1)
logits [[ 4.8098955 -2.4440088  3.0745773 -7.4717374]]
Iteration 300 of 1000: loss=0.626 " + "l1=0.511" + "l2=0.115 f=-0.511 shape=(1, 9000, 1)
logits [[ 4.6854773 -2.4819562  3.112647  -7.359924 ]]
Iteration 400 of 1000: loss=0.587 " + "l1=0.462" + "l2=0.125 f=-0.51 shape=(1, 9000, 1)
logits [[ 4.5627675 -2.5058856  3.1409242 -7.2390018]]
Iteration 500 of 1000: loss=0.544 " + "l1=0.399" + "l2=0.144 f=-0.501 shape=(1, 9000, 1)
logits [[ 4.398514  -2.520655   3.1694112 -7.0524297]]
Iteration 600 of 1000: loss=0.501 " + "l1=0.338" + "l2=0.163 f=-0.492 shape=(1, 9000, 1)
logits [[ 4.236438  -2.5361931  3.1967142 -6.866203 ]]
Iteration 700 of 1000: loss=0.46 " + "l1=0.281" + "l2=0.18 f=-0.479 shape=(1, 9000, 1)
logits [[ 4.097081  -2.5487034  3.2332075 -6.6970115]]
Iteration 800 of 1000: loss=0.429 " + "l1=0.242" + "l2=0.187 f=-0.472 shape=(1, 9000, 1)
logits [[ 3.9731338 -2.542471   3.2286186 -6.5456285]]
Iteration 900 of 1000: loss=0.394 " + "l1=0.201" + "l2=0.193 f=-0.46 shape=(1, 9000, 1)
logits [[ 3.8433485 -2.528311   3.225981  -6.3824706]]
--- 258.17010045051575 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.136 " + "l1=0.136" + "l2=0 f=-0.49 shape=(1, 9000, 1)
logits [[ 5.499071  -2.326351   2.9872034 -8.120969 ]]
Iteration 100 of 1000: loss=0.136 " + "l1=0.135" + "l2=0.000487 f=-0.487 shape=(1, 9000, 1)
logits [[ 5.448794  -2.3103545  2.9702191 -8.057319 ]]
Iteration 200 of 1000: loss=0.135 " + "l1=0.135" + "l2=0.000487 f=-0.487 shape=(1, 9000, 1)
logits [[ 5.4425063 -2.3077283  2.967088  -8.0495615]]
Iteration 300 of 1000: loss=0.135 " + "l1=0.135" + "l2=0.000555 f=-0.486 shape=(1, 9000, 1)
logits [[ 5.4345202 -2.3049862  2.9636912 -8.0391445]]
Iteration 400 of 1000: loss=0.135 " + "l1=0.135" + "l2=0.000672 f=-0.486 shape=(1, 9000, 1)
logits [[ 5.4266586 -2.30256    2.9605818 -8.028702 ]]
Iteration 500 of 1000: loss=0.135 " + "l1=0.134" + "l2=0.000764 f=-0.486 shape=(1, 9000, 1)
logits [[ 5.4191313 -2.3005843  2.9579296 -8.018601 ]]
Iteration 600 of 1000: loss=0.135 " + "l1=0.134" + "l2=0.0009 f=-0.485 shape=(1, 9000, 1)
logits [[ 5.4118667 -2.2989547  2.9554977 -8.008952 ]]
Iteration 700 of 1000: loss=0.135 " + "l1=0.134" + "l2=0.000988 f=-0.485 shape=(1, 9000, 1)
logits [[ 5.404942  -2.297627   2.9533935 -7.9997706]]
Iteration 800 of 1000: loss=0.135 " + "l1=0.134" + "l2=0.00111 f=-0.484 shape=(1, 9000, 1)
logits [[ 5.3982735 -2.2964823  2.9515448 -7.9910283]]
Iteration 900 of 1000: loss=0.135 " + "l1=0.134" + "l2=0.00126 f=-0.484 shape=(1, 9000, 1)
logits [[ 5.391968  -2.2955248  2.9499898 -7.9828396]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.36 " + "l1=1.36" + "l2=0 f=-0.49 shape=(1, 9000, 1)
logits [[ 5.499071  -2.326351   2.9872034 -8.120969 ]]
Iteration 100 of 1000: loss=1.3 " + "l1=1.26" + "l2=0.0407 f=-0.463 shape=(1, 9000, 1)
logits [[ 5.0558352 -2.1885197  2.8347638 -7.5555263]]
Iteration 200 of 1000: loss=1.28 " + "l1=1.23" + "l2=0.053 f=-0.456 shape=(1, 9000, 1)
logits [[ 4.914195  -2.1440547  2.781799  -7.376777 ]]
Iteration 300 of 1000: loss=1.27 " + "l1=1.2" + "l2=0.0618 f=-0.448 shape=(1, 9000, 1)
logits [[ 4.8059263 -2.1049614  2.7383616 -7.2329183]]
Iteration 400 of 1000: loss=1.25 " + "l1=1.18" + "l2=0.0692 f=-0.44 shape=(1, 9000, 1)
logits [[ 4.7077127 -2.0682006  2.6989489 -7.0995693]]
Iteration 500 of 1000: loss=1.23 " + "l1=1.16" + "l2=0.0766 f=-0.431 shape=(1, 9000, 1)
logits [[ 4.6072383 -2.0409265  2.6661458 -6.956604 ]]
Iteration 600 of 1000: loss=1.22 " + "l1=1.13" + "l2=0.087 f=-0.423 shape=(1, 9000, 1)
logits [[ 4.4917116 -2.0120337  2.634705  -6.8059525]]
Iteration 700 of 1000: loss=1.2 " + "l1=1.11" + "l2=0.0958 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.3828816 -1.9933397  2.6102855 -6.6705694]]
Iteration 800 of 1000: loss=1.19 " + "l1=1.08" + "l2=0.104 f=-0.41 shape=(1, 9000, 1)
logits [[ 4.2778034 -1.9724596  2.583776  -6.531023 ]]
Iteration 900 of 1000: loss=1.17 " + "l1=1.05" + "l2=0.112 f=-0.405 shape=(1, 9000, 1)
logits [[ 4.156166  -1.9547435  2.5543861 -6.377626 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=13.6 " + "l1=13.6" + "l2=0 f=-0.49 shape=(1, 9000, 1)
logits [[ 5.499071  -2.326351   2.9872034 -8.120969 ]]
Iteration 100 of 1000: loss=8.11 " + "l1=5.36" + "l2=2.76 f=-0.261 shape=(1, 9000, 1)
logits [[ 1.9538352 -1.5514313  1.9544854 -3.4008863]]
Iteration 200 of 1000: loss=6.72 " + "l1=3.81" + "l2=2.91 f=-0.189 shape=(1, 9000, 1)
logits [[ 1.4552335 -1.3147444  1.4561619 -2.350748 ]]
Iteration 300 of 1000: loss=5.65 " + "l1=2.47" + "l2=3.18 f=-0.094 shape=(1, 9000, 1)
logits [[ 1.0498189 -1.1484532  1.0953829 -1.3728429]]
Iteration 400 of 1000: loss=4.68 " + "l1=1.1" + "l2=3.58 f=-0.00339 shape=(1, 9000, 1)
logits [[ 0.5914374  -1.0116241   0.75187564 -0.34525877]]
Iteration 500 of 1000: loss=3.89 " + "l1=0.411" + "l2=3.48 f=0.0242 shape=(1, 9000, 1)
logits [[ 0.34865096 -0.9854688   0.5723712   0.16125867]]
Iteration 600 of 1000: loss=3.29 " + "l1=0.0227" + "l2=3.27 f=0.0425 shape=(1, 9000, 1)
logits [[ 0.24494779 -0.97796094  0.46286145  0.4401814 ]]
Iteration 700 of 1000: loss=2.78 " + "l1=0.0464" + "l2=2.74 f=0.046 shape=(1, 9000, 1)
logits [[ 0.32358193 -1.0429455   0.47482312  0.42842558]]
Iteration 800 of 1000: loss=2.42 " + "l1=0" + "l2=2.42 f=0.0445 shape=(1, 9000, 1)
logits [[ 0.32322824 -1.0982823   0.46871537  0.4842024 ]]
Iteration 900 of 1000: loss=2.11 " + "l1=0.00691" + "l2=2.1 f=0.0431 shape=(1, 9000, 1)
logits [[ 0.35479864 -1.1579866   0.49126574  0.48435795]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.49 " + "l1=7.49" + "l2=0 f=-0.49 shape=(1, 9000, 1)
logits [[ 5.499071  -2.326351   2.9872034 -8.120969 ]]
Iteration 100 of 1000: loss=5.6 " + "l1=4.4" + "l2=1.2 f=-0.346 shape=(1, 9000, 1)
logits [[ 3.0301254 -1.7447822  2.3082044 -4.9764433]]
Iteration 200 of 1000: loss=4.93 " + "l1=3.38" + "l2=1.55 f=-0.279 shape=(1, 9000, 1)
logits [[ 2.269446  -1.5890199  2.0819113 -3.87712  ]]
Iteration 300 of 1000: loss=4.33 " + "l1=2.82" + "l2=1.51 f=-0.245 shape=(1, 9000, 1)
logits [[ 1.8815429 -1.4949846  1.8829302 -3.2497666]]
Iteration 400 of 1000: loss=3.96 " + "l1=2.42" + "l2=1.54 f=-0.22 shape=(1, 9000, 1)
logits [[ 1.6194046 -1.3512536  1.6305201 -2.7779636]]
Iteration 500 of 1000: loss=3.7 " + "l1=2.15" + "l2=1.55 f=-0.192 shape=(1, 9000, 1)
logits [[ 1.4738925 -1.2774179  1.4721258 -2.4377344]]
Iteration 600 of 1000: loss=3.43 " + "l1=1.81" + "l2=1.61 f=-0.165 shape=(1, 9000, 1)
logits [[ 1.270539  -1.2038106  1.2862293 -2.013617 ]]
Iteration 700 of 1000: loss=3.02 " + "l1=1.32" + "l2=1.7 f=-0.138 shape=(1, 9000, 1)
logits [[ 0.94600034 -1.1133273   1.0060121  -1.3887794 ]]
Iteration 800 of 1000: loss=2.57 " + "l1=0.85" + "l2=1.72 f=-0.106 shape=(1, 9000, 1)
logits [[ 0.6805917  -1.0800266   0.7598533  -0.78515226]]
Iteration 900 of 1000: loss=2.23 " + "l1=0.489" + "l2=1.74 f=-0.0822 shape=(1, 9000, 1)
logits [[ 0.43979928 -1.096696    0.6088088  -0.28060362]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=10.6 " + "l1=10.6" + "l2=0 f=-0.49 shape=(1, 9000, 1)
logits [[ 5.499071  -2.326351   2.9872034 -8.120969 ]]
Iteration 100 of 1000: loss=7.01 " + "l1=4.95" + "l2=2.06 f=-0.294 shape=(1, 9000, 1)
logits [[ 2.3446527 -1.6323084  2.1515715 -4.041839 ]]
Iteration 200 of 1000: loss=5.9 " + "l1=3.71" + "l2=2.2 f=-0.238 shape=(1, 9000, 1)
logits [[ 1.7608372 -1.4545276  1.7626797 -3.0203466]]
Iteration 300 of 1000: loss=5.16 " + "l1=2.98" + "l2=2.18 f=-0.188 shape=(1, 9000, 1)
logits [[ 1.461676  -1.2909739  1.4614322 -2.383544 ]]
Iteration 400 of 1000: loss=4.62 " + "l1=2.3" + "l2=2.32 f=-0.128 shape=(1, 9000, 1)
logits [[ 1.1906056 -1.1754508  1.2231956 -1.7498032]]
Iteration 500 of 1000: loss=4.06 " + "l1=1.37" + "l2=2.69 f=-0.0661 shape=(1, 9000, 1)
logits [[ 0.7200488 -1.0665036  0.9262757 -0.8442936]]
Iteration 600 of 1000: loss=3.45 " + "l1=0.695" + "l2=2.76 f=-0.0271 shape=(1, 9000, 1)
logits [[ 0.45353374 -1.0124806   0.6734191  -0.2230056 ]]
Iteration 700 of 1000: loss=2.81 " + "l1=0.157" + "l2=2.65 f=-0.00593 shape=(1, 9000, 1)
logits [[ 0.28040817 -1.0117816   0.45498884  0.25265846]]
Iteration 800 of 1000: loss=2.29 " + "l1=0" + "l2=2.29 f=0.00489 shape=(1, 9000, 1)
logits [[ 0.25532007 -1.0637882   0.41106847  0.41694945]]
Iteration 900 of 1000: loss=1.99 " + "l1=0.0223" + "l2=1.97 f=0.00346 shape=(1, 9000, 1)
logits [[ 0.28896794 -1.1375011   0.44560376  0.4167652 ]]
--- 295.12463331222534 seconds ---
Adv result:3
Loading model
Loading ground truth file
Attack diff is running...
Loading record A06766
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0866 " + "l1=0.0866" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 5.498606  -3.163685   3.4318945 -8.016471 ]]
Iteration 100 of 1000: loss=0.0864 " + "l1=0.0861" + "l2=0.000219 f=-0.562 shape=(1, 9000, 1)
logits [[ 5.466671  -3.147067   3.419546  -7.9855666]]
Iteration 200 of 1000: loss=0.0863 " + "l1=0.0861" + "l2=0.000204 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.4638333 -3.1435997  3.4176922 -7.982851 ]]
Iteration 300 of 1000: loss=0.0862 " + "l1=0.086" + "l2=0.000227 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.458447  -3.1390197  3.4150028 -7.977967 ]]
Iteration 400 of 1000: loss=0.0862 " + "l1=0.0859" + "l2=0.000291 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.452696  -3.1343133  3.4121988 -7.9728084]]
Iteration 500 of 1000: loss=0.0861 " + "l1=0.0858" + "l2=0.000331 f=-0.56 shape=(1, 9000, 1)
logits [[ 5.446894  -3.1297514  3.4092982 -7.967573 ]]
Iteration 600 of 1000: loss=0.0862 " + "l1=0.0857" + "l2=0.000497 f=-0.56 shape=(1, 9000, 1)
logits [[ 5.4413037 -3.1255867  3.406595  -7.962796 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.866 " + "l1=0.866" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 5.498606  -3.163685   3.4318945 -8.016471 ]]
Iteration 100 of 1000: loss=0.843 " + "l1=0.831" + "l2=0.0122 f=-0.556 shape=(1, 9000, 1)
logits [[ 5.262572  -3.0444293  3.3421905 -7.7834377]]
Iteration 200 of 1000: loss=0.832 " + "l1=0.815" + "l2=0.017 f=-0.552 shape=(1, 9000, 1)
logits [[ 5.165953  -2.9856744  3.3059149 -7.695879 ]]
Iteration 300 of 1000: loss=0.822 " + "l1=0.801" + "l2=0.0213 f=-0.549 shape=(1, 9000, 1)
logits [[ 5.078824  -2.9280832  3.2700963 -7.6175294]]
Iteration 400 of 1000: loss=0.813 " + "l1=0.788" + "l2=0.0251 f=-0.548 shape=(1, 9000, 1)
logits [[ 4.9965024 -2.8809404  3.2306406 -7.5383334]]
Iteration 500 of 1000: loss=0.804 " + "l1=0.774" + "l2=0.0299 f=-0.547 shape=(1, 9000, 1)
logits [[ 4.906595  -2.8338304  3.1903706 -7.449406 ]]
Iteration 600 of 1000: loss=0.794 " + "l1=0.761" + "l2=0.0332 f=-0.546 shape=(1, 9000, 1)
logits [[ 4.81686   -2.7943716  3.154515  -7.360619 ]]
Iteration 700 of 1000: loss=0.783 " + "l1=0.745" + "l2=0.0381 f=-0.546 shape=(1, 9000, 1)
logits [[ 4.699039  -2.7472749  3.108269  -7.2453055]]
Iteration 800 of 1000: loss=0.772 " + "l1=0.73" + "l2=0.0415 f=-0.547 shape=(1, 9000, 1)
logits [[ 4.5947814 -2.7086618  3.0686445 -7.1414824]]
Iteration 900 of 1000: loss=0.761 " + "l1=0.716" + "l2=0.0454 f=-0.548 shape=(1, 9000, 1)
logits [[ 4.486057  -2.673311   3.0282588 -7.032138 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.66 " + "l1=8.66" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 5.498606  -3.163685   3.4318945 -8.016471 ]]
Iteration 100 of 1000: loss=6.44 " + "l1=5.26" + "l2=1.19 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.0593345 -2.1962657  2.57756   -5.4601116]]
Iteration 200 of 1000: loss=5.57 " + "l1=4.16" + "l2=1.41 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.2676673 -1.8933423  2.267325  -4.63195  ]]
Iteration 300 of 1000: loss=4.97 " + "l1=3.6" + "l2=1.37 f=-0.462 shape=(1, 9000, 1)
logits [[ 1.9219487 -1.6795928  1.9242544 -4.0155873]]
Iteration 400 of 1000: loss=4.46 " + "l1=2.93" + "l2=1.53 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.5612774 -1.3654006  1.5690308 -3.448123 ]]
Iteration 500 of 1000: loss=3.73 " + "l1=2.1" + "l2=1.63 f=-0.406 shape=(1, 9000, 1)
logits [[ 1.1874015 -0.9147114  1.1872929 -3.0849862]]
Iteration 600 of 1000: loss=3.34 " + "l1=1.67" + "l2=1.67 f=-0.391 shape=(1, 9000, 1)
logits [[ 0.9538427  -0.71193534  0.9562281  -2.7612283 ]]
Iteration 700 of 1000: loss=3.1 " + "l1=1.48" + "l2=1.62 f=-0.375 shape=(1, 9000, 1)
logits [[ 0.8555806  -0.6251537   0.85386676 -2.582944  ]]
Iteration 800 of 1000: loss=2.95 " + "l1=1.35" + "l2=1.6 f=-0.362 shape=(1, 9000, 1)
logits [[ 0.7766934 -0.5675593  0.785321  -2.4428568]]
Iteration 900 of 1000: loss=2.82 " + "l1=1.24" + "l2=1.59 f=-0.342 shape=(1, 9000, 1)
logits [[ 0.7141324  -0.52100605  0.71267617 -2.274896  ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=86.6 " + "l1=86.6" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 5.498606  -3.163685   3.4318945 -8.016471 ]]
Iteration 100 of 1000: loss=23.9 " + "l1=9.7" + "l2=14.2 f=-0.229 shape=(1, 9000, 1)
logits [[ 0.7713803  -0.19898671  0.7696332  -2.2589183 ]]
Iteration 200 of 1000: loss=11.2 " + "l1=0" + "l2=11.2 f=-0.212 shape=(1, 9000, 1)
logits [[ 0.18801436  0.30065456  0.2667025  -1.6047986 ]]
Iteration 300 of 1000: loss=9.39 " + "l1=0" + "l2=9.39 f=-0.232 shape=(1, 9000, 1)
logits [[ 0.25243756  0.32492557  0.26003292 -1.7644008 ]]
Iteration 400 of 1000: loss=8 " + "l1=0" + "l2=8 f=-0.265 shape=(1, 9000, 1)
logits [[ 0.28848517  0.31809747  0.29727557 -1.9629376 ]]
Iteration 500 of 1000: loss=7.18 " + "l1=0" + "l2=7.18 f=-0.285 shape=(1, 9000, 1)
logits [[ 0.2661976   0.32381645  0.31538573 -2.0447006 ]]
Iteration 600 of 1000: loss=6.72 " + "l1=0" + "l2=6.72 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.28222498  0.32913134  0.30428687 -2.065878  ]]
Iteration 700 of 1000: loss=6.37 " + "l1=0" + "l2=6.37 f=-0.293 shape=(1, 9000, 1)
logits [[ 0.26557568  0.3301267   0.30152366 -2.0710597 ]]
Iteration 800 of 1000: loss=6.03 " + "l1=0" + "l2=6.03 f=-0.297 shape=(1, 9000, 1)
logits [[ 0.21129262  0.3268466   0.31954664 -2.0466511 ]]
Iteration 900 of 1000: loss=5.83 " + "l1=0.0695" + "l2=5.76 f=-0.296 shape=(1, 9000, 1)
logits [[ 0.22817615  0.3129093   0.3198603  -2.0469275 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=47.6 " + "l1=47.6" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 5.498606  -3.163685   3.4318945 -8.016471 ]]
Iteration 100 of 1000: loss=19.1 " + "l1=10.9" + "l2=8.16 f=-0.322 shape=(1, 9000, 1)
logits [[ 1.2797983  -0.70655257  1.276623   -3.138628  ]]
Iteration 200 of 1000: loss=9.53 " + "l1=0.115" + "l2=9.42 f=-0.193 shape=(1, 9000, 1)
logits [[ 0.26507008  0.27005294  0.290992   -1.5980778 ]]
Iteration 300 of 1000: loss=7.11 " + "l1=0.0482" + "l2=7.06 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.30580592  0.2970455   0.30535665 -1.8538959 ]]
Iteration 400 of 1000: loss=6.18 " + "l1=0" + "l2=6.18 f=-0.254 shape=(1, 9000, 1)
logits [[ 0.20703514  0.31486443  0.3143086  -1.8518696 ]]
Iteration 500 of 1000: loss=5.69 " + "l1=0" + "l2=5.69 f=-0.255 shape=(1, 9000, 1)
logits [[ 0.28034693  0.29996476  0.29479325 -1.8959153 ]]
Iteration 600 of 1000: loss=5.38 " + "l1=0" + "l2=5.38 f=-0.255 shape=(1, 9000, 1)
logits [[ 0.27204213  0.28697553  0.28367615 -1.8630332 ]]
Iteration 700 of 1000: loss=5.14 " + "l1=0" + "l2=5.14 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.2490584   0.28375277  0.2790734  -1.8389935 ]]
Iteration 800 of 1000: loss=4.94 " + "l1=0" + "l2=4.94 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.24087867  0.27660295  0.27566585 -1.820103  ]]
Iteration 900 of 1000: loss=4.78 " + "l1=0.0483" + "l2=4.73 f=-0.255 shape=(1, 9000, 1)
logits [[ 0.23577237  0.2656656   0.27444938 -1.7945652 ]]
--- 261.9972298145294 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0207 " + "l1=0.0207" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 5.498606  -3.163685   3.4318945 -8.016471 ]]
Iteration 100 of 1000: loss=0.0206 " + "l1=0.0204" + "l2=0.000138 f=-0.563 shape=(1, 9000, 1)
logits [[ 5.4776053 -3.163446   3.4356747 -8.000727 ]]
Iteration 200 of 1000: loss=0.0205 " + "l1=0.0204" + "l2=0.000116 f=-0.563 shape=(1, 9000, 1)
logits [[ 5.4781837 -3.1630385  3.4368777 -8.002224 ]]
Iteration 300 of 1000: loss=0.0205 " + "l1=0.0204" + "l2=0.000138 f=-0.562 shape=(1, 9000, 1)
logits [[ 5.476384  -3.1623452  3.4381213 -8.001853 ]]
Iteration 400 of 1000: loss=0.0205 " + "l1=0.0203" + "l2=0.000195 f=-0.562 shape=(1, 9000, 1)
logits [[ 5.4740887 -3.1616294  3.439324  -8.000984 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.207 " + "l1=0.207" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 5.498606  -3.163685   3.4318945 -8.016471 ]]
Iteration 100 of 1000: loss=0.196 " + "l1=0.189" + "l2=0.00657 f=-0.565 shape=(1, 9000, 1)
logits [[ 5.3528485 -3.1610181  3.4633884 -7.9159374]]
Iteration 200 of 1000: loss=0.191 " + "l1=0.182" + "l2=0.0089 f=-0.564 shape=(1, 9000, 1)
logits [[ 5.3068314 -3.1537995  3.482885  -7.890558 ]]
Iteration 300 of 1000: loss=0.188 " + "l1=0.179" + "l2=0.00995 f=-0.563 shape=(1, 9000, 1)
logits [[ 5.273462  -3.1511896  3.4883785 -7.8624797]]
Iteration 400 of 1000: loss=0.186 " + "l1=0.174" + "l2=0.0115 f=-0.565 shape=(1, 9000, 1)
logits [[ 5.2394667 -3.1552892  3.49522   -7.838464 ]]
Iteration 500 of 1000: loss=0.184 " + "l1=0.171" + "l2=0.0129 f=-0.566 shape=(1, 9000, 1)
logits [[ 5.2074122 -3.1583757  3.5012414 -7.814794 ]]
Iteration 600 of 1000: loss=0.181 " + "l1=0.167" + "l2=0.0142 f=-0.567 shape=(1, 9000, 1)
logits [[ 5.175263  -3.1606028  3.5066035 -7.7887735]]
Iteration 700 of 1000: loss=0.178 " + "l1=0.163" + "l2=0.0156 f=-0.567 shape=(1, 9000, 1)
logits [[ 5.1432915 -3.1648412  3.5144083 -7.762105 ]]
Iteration 800 of 1000: loss=0.176 " + "l1=0.159" + "l2=0.0167 f=-0.568 shape=(1, 9000, 1)
logits [[ 5.1107736 -3.1698697  3.5205138 -7.734112 ]]
Iteration 900 of 1000: loss=0.173 " + "l1=0.155" + "l2=0.0178 f=-0.569 shape=(1, 9000, 1)
logits [[ 5.076872  -3.1743982  3.5249083 -7.7043896]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.07 " + "l1=2.07" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 5.498606  -3.163685   3.4318945 -8.016471 ]]
Iteration 100 of 1000: loss=0.746 " + "l1=0.0151" + "l2=0.731 f=-0.652 shape=(1, 9000, 1)
logits [[ 3.7070549 -3.4224286  3.691915  -6.5847907]]
Iteration 200 of 1000: loss=0.553 " + "l1=0" + "l2=0.553 f=-0.642 shape=(1, 9000, 1)
logits [[ 3.6945114 -3.4339378  3.7030902 -6.53145  ]]
Iteration 300 of 1000: loss=0.462 " + "l1=0" + "l2=0.462 f=-0.637 shape=(1, 9000, 1)
logits [[ 3.7114952 -3.4353194  3.7154808 -6.5411935]]
Iteration 400 of 1000: loss=0.414 " + "l1=0" + "l2=0.414 f=-0.636 shape=(1, 9000, 1)
logits [[ 3.723184  -3.4457211  3.7243433 -6.5456495]]
Iteration 500 of 1000: loss=0.38 " + "l1=0.00164" + "l2=0.379 f=-0.634 shape=(1, 9000, 1)
logits [[ 3.7382488 -3.4555836  3.7366138 -6.556925 ]]
Iteration 600 of 1000: loss=0.353 " + "l1=0" + "l2=0.353 f=-0.634 shape=(1, 9000, 1)
logits [[ 3.731876  -3.4585772  3.734403  -6.5433817]]
Iteration 700 of 1000: loss=0.33 " + "l1=0.00484" + "l2=0.325 f=-0.633 shape=(1, 9000, 1)
logits [[ 3.7344139 -3.4595222  3.729578  -6.5356116]]
Iteration 800 of 1000: loss=0.305 " + "l1=2.91e-05" + "l2=0.305 f=-0.63 shape=(1, 9000, 1)
logits [[ 3.7190435 -3.4517407  3.7190144 -6.5053964]]
Iteration 900 of 1000: loss=0.291 " + "l1=0" + "l2=0.291 f=-0.628 shape=(1, 9000, 1)
logits [[ 3.6885624 -3.4449086  3.70724   -6.462272 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.14 " + "l1=1.14" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 5.498606  -3.163685   3.4318945 -8.016471 ]]
Iteration 100 of 1000: loss=0.742 " + "l1=0.474" + "l2=0.269 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.456214  -3.3110204  3.595038  -7.2523937]]
Iteration 200 of 1000: loss=0.592 " + "l1=0.238" + "l2=0.354 f=-0.643 shape=(1, 9000, 1)
logits [[ 4.074192  -3.381475   3.6420593 -6.9076195]]
Iteration 300 of 1000: loss=0.485 " + "l1=0.0788" + "l2=0.406 f=-0.644 shape=(1, 9000, 1)
logits [[ 3.8368611 -3.4338822  3.6935601 -6.673104 ]]
Iteration 400 of 1000: loss=0.403 " + "l1=0.00461" + "l2=0.398 f=-0.642 shape=(1, 9000, 1)
logits [[ 3.729845  -3.4598377  3.7214622 -6.560814 ]]
Iteration 500 of 1000: loss=0.348 " + "l1=0.000434" + "l2=0.347 f=-0.639 shape=(1, 9000, 1)
logits [[ 3.7256393 -3.4540417  3.724851  -6.552844 ]]
Iteration 600 of 1000: loss=0.312 " + "l1=0" + "l2=0.312 f=-0.635 shape=(1, 9000, 1)
logits [[ 3.7083638 -3.4495022  3.7175677 -6.5176105]]
Iteration 700 of 1000: loss=0.279 " + "l1=0.00789" + "l2=0.271 f=-0.633 shape=(1, 9000, 1)
logits [[ 3.7144644 -3.4423456  3.7001166 -6.506077 ]]
Iteration 800 of 1000: loss=0.252 " + "l1=0" + "l2=0.252 f=-0.631 shape=(1, 9000, 1)
logits [[ 3.6781776 -3.4311697  3.6836908 -6.4528337]]
Iteration 900 of 1000: loss=0.232 " + "l1=0.00345" + "l2=0.229 f=-0.627 shape=(1, 9000, 1)
logits [[ 3.6719575 -3.4165664  3.665691  -6.427585 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.672 " + "l1=0.672" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 5.498606  -3.163685   3.4318945 -8.016471 ]]
Iteration 100 of 1000: loss=0.548 " + "l1=0.471" + "l2=0.0769 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.9633102 -3.2001143  3.5129733 -7.6339407]]
Iteration 200 of 1000: loss=0.493 " + "l1=0.371" + "l2=0.122 f=-0.608 shape=(1, 9000, 1)
logits [[ 4.7098293 -3.2631855  3.5676093 -7.447952 ]]
Iteration 300 of 1000: loss=0.446 " + "l1=0.296" + "l2=0.15 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.5044703 -3.3013399  3.5929546 -7.277502 ]]
Iteration 400 of 1000: loss=0.41 " + "l1=0.25" + "l2=0.16 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.3578515 -3.3130345  3.5875785 -7.1432223]]
Iteration 500 of 1000: loss=0.377 " + "l1=0.208" + "l2=0.169 f=-0.631 shape=(1, 9000, 1)
logits [[ 4.231563  -3.322556   3.5903873 -7.022092 ]]
Iteration 600 of 1000: loss=0.345 " + "l1=0.172" + "l2=0.173 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.136402  -3.344986   3.6057708 -6.927901 ]]
Iteration 700 of 1000: loss=0.315 " + "l1=0.133" + "l2=0.182 f=-0.634 shape=(1, 9000, 1)
logits [[ 4.038531  -3.375142   3.6307485 -6.828334 ]]
Iteration 800 of 1000: loss=0.286 " + "l1=0.0964" + "l2=0.189 f=-0.633 shape=(1, 9000, 1)
logits [[ 3.9385877 -3.3854501  3.641998  -6.728026 ]]
Iteration 900 of 1000: loss=0.259 " + "l1=0.0653" + "l2=0.193 f=-0.632 shape=(1, 9000, 1)
logits [[ 3.8508341 -3.3876536  3.6499844 -6.6396356]]
--- 253.0608892440796 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.135 " + "l1=0.135" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 5.498606  -3.163685   3.4318945 -8.016471 ]]
Iteration 100 of 1000: loss=0.135 " + "l1=0.134" + "l2=0.000468 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.4518013 -3.1534305  3.4138193 -7.955597 ]]
Iteration 200 of 1000: loss=0.134 " + "l1=0.134" + "l2=0.000473 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.4451776 -3.1505377  3.4101782 -7.9471827]]
Iteration 300 of 1000: loss=0.134 " + "l1=0.134" + "l2=0.000533 f=-0.56 shape=(1, 9000, 1)
logits [[ 5.4370694 -3.1471188  3.405845  -7.9366617]]
Iteration 400 of 1000: loss=0.134 " + "l1=0.134" + "l2=0.000595 f=-0.56 shape=(1, 9000, 1)
logits [[ 5.429057  -3.1439319  3.4016037 -7.926323 ]]
Iteration 500 of 1000: loss=0.134 " + "l1=0.133" + "l2=0.000742 f=-0.56 shape=(1, 9000, 1)
logits [[ 5.4212856 -3.1409254  3.397455  -7.9165316]]
Iteration 600 of 1000: loss=0.134 " + "l1=0.133" + "l2=0.000862 f=-0.559 shape=(1, 9000, 1)
logits [[ 5.4134893 -3.1379073  3.3934658 -7.9068246]]
Iteration 700 of 1000: loss=0.134 " + "l1=0.133" + "l2=0.000955 f=-0.559 shape=(1, 9000, 1)
logits [[ 5.4058194 -3.1350167  3.3896363 -7.8972363]]
Iteration 800 of 1000: loss=0.134 " + "l1=0.133" + "l2=0.00104 f=-0.559 shape=(1, 9000, 1)
logits [[ 5.398485  -3.132335   3.3860734 -7.8883414]]
Iteration 900 of 1000: loss=0.134 " + "l1=0.133" + "l2=0.0012 f=-0.559 shape=(1, 9000, 1)
logits [[ 5.3914843 -3.12984    3.3828185 -7.8798003]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.35 " + "l1=1.35" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 5.498606  -3.163685   3.4318945 -8.016471 ]]
Iteration 100 of 1000: loss=1.29 " + "l1=1.25" + "l2=0.0396 f=-0.551 shape=(1, 9000, 1)
logits [[ 5.0681653 -3.0805345  3.2711802 -7.4642324]]
Iteration 200 of 1000: loss=1.27 " + "l1=1.21" + "l2=0.0566 f=-0.549 shape=(1, 9000, 1)
logits [[ 4.891319  -3.0466964  3.202995  -7.244916 ]]
Iteration 300 of 1000: loss=1.25 " + "l1=1.18" + "l2=0.0692 f=-0.547 shape=(1, 9000, 1)
logits [[ 4.735572  -3.005698   3.1411228 -7.057693 ]]
Iteration 400 of 1000: loss=1.23 " + "l1=1.15" + "l2=0.0817 f=-0.542 shape=(1, 9000, 1)
logits [[ 4.5825057 -2.963978   3.08268   -6.8689356]]
Iteration 500 of 1000: loss=1.2 " + "l1=1.11" + "l2=0.0919 f=-0.538 shape=(1, 9000, 1)
logits [[ 4.4229593 -2.9186196  3.0196488 -6.6767364]]
Iteration 600 of 1000: loss=1.17 " + "l1=1.07" + "l2=0.105 f=-0.54 shape=(1, 9000, 1)
logits [[ 4.226301  -2.884788   2.9518454 -6.4519525]]
Iteration 700 of 1000: loss=1.15 " + "l1=1.03" + "l2=0.114 f=-0.541 shape=(1, 9000, 1)
logits [[ 4.0553417 -2.8472486  2.8857663 -6.256862 ]]
Iteration 800 of 1000: loss=1.12 " + "l1=0.99" + "l2=0.126 f=-0.541 shape=(1, 9000, 1)
logits [[ 3.8663356 -2.8092544  2.8096423 -6.031613 ]]
Iteration 900 of 1000: loss=1.09 " + "l1=0.951" + "l2=0.136 f=-0.539 shape=(1, 9000, 1)
logits [[ 3.6929522 -2.7678902  2.7330267 -5.8124638]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=13.5 " + "l1=13.5" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 5.498606  -3.163685   3.4318945 -8.016471 ]]
Iteration 100 of 1000: loss=8.15 " + "l1=5.82" + "l2=2.33 f=-0.397 shape=(1, 9000, 1)
logits [[ 2.2606275 -2.5515046  2.261499  -3.5569549]]
Iteration 200 of 1000: loss=6.68 " + "l1=4.22" + "l2=2.45 f=-0.36 shape=(1, 9000, 1)
logits [[ 1.6187034 -2.3491607  1.7582395 -2.4665596]]
Iteration 300 of 1000: loss=5.39 " + "l1=2.53" + "l2=2.86 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.8627584 -2.0230913  1.2330496 -1.2927053]]
Iteration 400 of 1000: loss=4.46 " + "l1=1.25" + "l2=3.21 f=-0.24 shape=(1, 9000, 1)
logits [[ 0.25983894 -1.6365762   0.8312748  -0.41480166]]
Iteration 500 of 1000: loss=3.84 " + "l1=0.607" + "l2=3.23 f=-0.204 shape=(1, 9000, 1)
logits [[-0.05078577 -1.4754119   0.6580581   0.05082028]]
Iteration 600 of 1000: loss=3.45 " + "l1=0.352" + "l2=3.09 f=-0.189 shape=(1, 9000, 1)
logits [[-0.14587991 -1.3855385   0.5634839   0.21137217]]
Iteration 700 of 1000: loss=3.08 " + "l1=0.113" + "l2=2.97 f=-0.17 shape=(1, 9000, 1)
logits [[-0.22171313 -1.3081088   0.48123175  0.36801916]]
Iteration 800 of 1000: loss=2.7 " + "l1=0.0317" + "l2=2.67 f=-0.157 shape=(1, 9000, 1)
logits [[-0.19812408 -1.2382131   0.41904625  0.38734356]]
Iteration 900 of 1000: loss=2.42 " + "l1=0.0191" + "l2=2.4 f=-0.162 shape=(1, 9000, 1)
logits [[-0.20046479 -1.2207361   0.39691123  0.3778207 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.43 " + "l1=7.43" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 5.498606  -3.163685   3.4318945 -8.016471 ]]
Iteration 100 of 1000: loss=5.48 " + "l1=4.36" + "l2=1.13 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.047576  -2.7569842  2.7057319 -4.8716702]]
Iteration 200 of 1000: loss=4.68 " + "l1=3.38" + "l2=1.3 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.3283317 -2.5759466  2.3247287 -3.8085876]]
Iteration 300 of 1000: loss=4 " + "l1=2.67" + "l2=1.33 f=-0.401 shape=(1, 9000, 1)
logits [[ 1.8558728 -2.3108003  1.8523104 -3.0021029]]
Iteration 400 of 1000: loss=3.63 " + "l1=2.19" + "l2=1.43 f=-0.365 shape=(1, 9000, 1)
logits [[ 1.5418557 -2.106536   1.5450921 -2.4423306]]
Iteration 500 of 1000: loss=3.36 " + "l1=1.86" + "l2=1.5 f=-0.346 shape=(1, 9000, 1)
logits [[ 1.3256403 -1.9727654  1.323454  -2.0604198]]
Iteration 600 of 1000: loss=3.11 " + "l1=1.6" + "l2=1.5 f=-0.318 shape=(1, 9000, 1)
logits [[ 1.1694599 -1.877902   1.1763251 -1.7406491]]
Iteration 700 of 1000: loss=2.84 " + "l1=1.41" + "l2=1.43 f=-0.29 shape=(1, 9000, 1)
logits [[ 1.052792  -1.7781512  1.0671697 -1.5001341]]
Iteration 800 of 1000: loss=2.6 " + "l1=1.17" + "l2=1.43 f=-0.26 shape=(1, 9000, 1)
logits [[ 0.88640356 -1.6347417   0.91690886 -1.2090561 ]]
Iteration 900 of 1000: loss=2.38 " + "l1=0.93" + "l2=1.45 f=-0.237 shape=(1, 9000, 1)
logits [[ 0.71659565 -1.5210137   0.77379537 -0.9176996 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=10.5 " + "l1=10.5" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 5.498606  -3.163685   3.4318945 -8.016471 ]]
Iteration 100 of 1000: loss=6.88 " + "l1=5.08" + "l2=1.8 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.491067  -2.6543546  2.492658  -4.061673 ]]
Iteration 200 of 1000: loss=5.74 " + "l1=3.94" + "l2=1.81 f=-0.395 shape=(1, 9000, 1)
logits [[ 1.9725215 -2.4377935  1.982566  -3.0974808]]
Iteration 300 of 1000: loss=4.84 " + "l1=3.01" + "l2=1.84 f=-0.362 shape=(1, 9000, 1)
logits [[ 1.5165688 -2.2134767  1.5658256 -2.315228 ]]
Iteration 400 of 1000: loss=4.17 " + "l1=2.04" + "l2=2.13 f=-0.313 shape=(1, 9000, 1)
logits [[ 1.0391527 -1.8880445  1.1115516 -1.5164189]]
Iteration 500 of 1000: loss=3.74 " + "l1=1.53" + "l2=2.22 f=-0.268 shape=(1, 9000, 1)
logits [[ 0.7618177 -1.69655    0.9165868 -1.0528961]]
Iteration 600 of 1000: loss=3.38 " + "l1=1.06" + "l2=2.32 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.437694  -1.5359749  0.7708324 -0.5963879]]
Iteration 700 of 1000: loss=3 " + "l1=0.717" + "l2=2.28 f=-0.211 shape=(1, 9000, 1)
logits [[ 0.21750379 -1.4400834   0.6506686  -0.27397642]]
Iteration 800 of 1000: loss=2.69 " + "l1=0.506" + "l2=2.18 f=-0.194 shape=(1, 9000, 1)
logits [[ 0.12150761 -1.3755423   0.5653232  -0.08769354]]
Iteration 900 of 1000: loss=2.41 " + "l1=0.257" + "l2=2.16 f=-0.176 shape=(1, 9000, 1)
logits [[ 0.01653428 -1.267979    0.44014505  0.1084772 ]]
--- 280.08864641189575 seconds ---
Adv result:3
Loading record A06774
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0785 " + "l1=0.0785" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.6934023 -3.1558213  3.681242  -7.43219  ]]
Iteration 100 of 1000: loss=0.0778 " + "l1=0.0774" + "l2=0.000415 f=-0.552 shape=(1, 9000, 1)
logits [[ 4.6365705 -3.1036737  3.6458232 -7.385907 ]]
Iteration 200 of 1000: loss=0.0776 " + "l1=0.0772" + "l2=0.000455 f=-0.551 shape=(1, 9000, 1)
logits [[ 4.6244617 -3.0922413  3.6382008 -7.3738775]]
Iteration 300 of 1000: loss=0.0775 " + "l1=0.0769" + "l2=0.000559 f=-0.55 shape=(1, 9000, 1)
logits [[ 4.6109    -3.0789125  3.629194  -7.36009  ]]
Iteration 400 of 1000: loss=0.0773 " + "l1=0.0767" + "l2=0.000661 f=-0.549 shape=(1, 9000, 1)
logits [[ 4.5988383 -3.0672858  3.6211777 -7.3471303]]
Iteration 500 of 1000: loss=0.0773 " + "l1=0.0764" + "l2=0.000807 f=-0.548 shape=(1, 9000, 1)
logits [[ 4.5880404 -3.0569422  3.6138668 -7.335224 ]]
Iteration 600 of 1000: loss=0.0772 " + "l1=0.0763" + "l2=0.000965 f=-0.547 shape=(1, 9000, 1)
logits [[ 4.578046  -3.0474126  3.6070347 -7.3237505]]
Iteration 700 of 1000: loss=0.0772 " + "l1=0.0761" + "l2=0.00109 f=-0.545 shape=(1, 9000, 1)
logits [[ 4.5685787 -3.0378804  3.600629  -7.312622 ]]
Iteration 800 of 1000: loss=0.0772 " + "l1=0.0759" + "l2=0.00127 f=-0.544 shape=(1, 9000, 1)
logits [[ 4.559864  -3.0292418  3.5947855 -7.301738 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.785 " + "l1=0.785" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.6934023 -3.1558213  3.681242  -7.43219  ]]
Iteration 100 of 1000: loss=0.714 " + "l1=0.668" + "l2=0.0461 f=-0.532 shape=(1, 9000, 1)
logits [[ 4.1589637 -2.520922   3.2390878 -7.0045834]]
Iteration 200 of 1000: loss=0.665 " + "l1=0.592" + "l2=0.0728 f=-0.53 shape=(1, 9000, 1)
logits [[ 3.8038623 -2.114284   2.9505908 -6.759135 ]]
Iteration 300 of 1000: loss=0.625 " + "l1=0.532" + "l2=0.0924 f=-0.517 shape=(1, 9000, 1)
logits [[ 3.5078926 -1.8148916  2.7586403 -6.5201154]]
Iteration 400 of 1000: loss=0.603 " + "l1=0.498" + "l2=0.104 f=-0.518 shape=(1, 9000, 1)
logits [[ 3.2850542 -1.6985855  2.662523  -6.3209558]]
Iteration 500 of 1000: loss=0.586 " + "l1=0.471" + "l2=0.115 f=-0.517 shape=(1, 9000, 1)
logits [[ 3.103039  -1.6096474  2.5842907 -6.144778 ]]
Iteration 600 of 1000: loss=0.569 " + "l1=0.444" + "l2=0.126 f=-0.513 shape=(1, 9000, 1)
logits [[ 2.954103  -1.4834933  2.4941366 -6.0172086]]
Iteration 700 of 1000: loss=0.552 " + "l1=0.428" + "l2=0.125 f=-0.511 shape=(1, 9000, 1)
logits [[ 2.8616815 -1.4142877  2.4466054 -5.9380574]]
Iteration 800 of 1000: loss=0.533 " + "l1=0.412" + "l2=0.121 f=-0.511 shape=(1, 9000, 1)
logits [[ 2.759607  -1.3598626  2.4048877 -5.8483925]]
Iteration 900 of 1000: loss=0.517 " + "l1=0.392" + "l2=0.125 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.6370885 -1.2816894  2.3441706 -5.7374573]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.85 " + "l1=7.85" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.6934023 -3.1558213  3.681242  -7.43219  ]]
Iteration 100 of 1000: loss=2.42 " + "l1=0.859" + "l2=1.56 f=-0.554 shape=(1, 9000, 1)
logits [[ 1.2424022   0.41338983  1.272572   -5.1445665 ]]
Iteration 200 of 1000: loss=1.39 " + "l1=0.00855" + "l2=1.38 f=-0.546 shape=(1, 9000, 1)
logits [[ 0.700648   0.7714514  0.7799981 -4.4359527]]
Iteration 300 of 1000: loss=1.13 " + "l1=0.0106" + "l2=1.11 f=-0.546 shape=(1, 9000, 1)
logits [[ 0.6623484   0.7137457   0.72438353 -4.2831197 ]]
Iteration 400 of 1000: loss=1.04 " + "l1=0.00724" + "l2=1.03 f=-0.542 shape=(1, 9000, 1)
logits [[ 0.63150406  0.68841493  0.6956534  -4.183486  ]]
Iteration 500 of 1000: loss=0.98 " + "l1=0" + "l2=0.98 f=-0.537 shape=(1, 9000, 1)
logits [[ 0.606876    0.68345284  0.6768494  -4.116588  ]]
Iteration 600 of 1000: loss=0.934 " + "l1=0.000475" + "l2=0.934 f=-0.531 shape=(1, 9000, 1)
logits [[ 0.61190665  0.6714932   0.67196804 -4.0787416 ]]
Iteration 700 of 1000: loss=0.91 " + "l1=0" + "l2=0.91 f=-0.527 shape=(1, 9000, 1)
logits [[ 0.5960384  0.6775097  0.6571821 -4.0395803]]
Iteration 800 of 1000: loss=0.882 " + "l1=0" + "l2=0.882 f=-0.525 shape=(1, 9000, 1)
logits [[ 0.59734464  0.669534    0.65280855 -4.0178523 ]]
Iteration 900 of 1000: loss=0.863 " + "l1=0.0104" + "l2=0.853 f=-0.525 shape=(1, 9000, 1)
logits [[ 0.59300375  0.650715    0.66114044 -4.0035295 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.32 " + "l1=4.32" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.6934023 -3.1558213  3.681242  -7.43219  ]]
Iteration 100 of 1000: loss=1.96 " + "l1=1.02" + "l2=0.948 f=-0.557 shape=(1, 9000, 1)
logits [[ 1.7068024  -0.13701506  1.7103417  -5.5094957 ]]
Iteration 200 of 1000: loss=1.4 " + "l1=0.493" + "l2=0.91 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.2472397   0.35161293  1.2403711  -5.0261683 ]]
Iteration 300 of 1000: loss=1.14 " + "l1=0.265" + "l2=0.875 f=-0.538 shape=(1, 9000, 1)
logits [[ 0.98826706  0.5057112   0.9871215  -4.6321316 ]]
Iteration 400 of 1000: loss=1.01 " + "l1=0.0924" + "l2=0.921 f=-0.541 shape=(1, 9000, 1)
logits [[ 0.75575626  0.5985514   0.76658076 -4.283326  ]]
Iteration 500 of 1000: loss=0.931 " + "l1=0.0124" + "l2=0.918 f=-0.531 shape=(1, 9000, 1)
logits [[ 0.64760584  0.65072715  0.6733491  -4.0961165 ]]
Iteration 600 of 1000: loss=0.88 " + "l1=0.00478" + "l2=0.875 f=-0.528 shape=(1, 9000, 1)
logits [[ 0.61918306  0.6511416   0.6598273  -4.0404716 ]]
Iteration 700 of 1000: loss=0.852 " + "l1=0.0178" + "l2=0.834 f=-0.521 shape=(1, 9000, 1)
logits [[ 0.652849    0.6205014   0.65049547 -4.0082817 ]]
Iteration 800 of 1000: loss=0.807 " + "l1=0.0052" + "l2=0.802 f=-0.521 shape=(1, 9000, 1)
logits [[ 0.572352   0.5963135  0.6057612 -3.8598816]]
Iteration 900 of 1000: loss=0.762 " + "l1=0.00829" + "l2=0.753 f=-0.519 shape=(1, 9000, 1)
logits [[ 0.55013174  0.561635    0.57670003 -3.7658978 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.55 " + "l1=2.55" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.6934023 -3.1558213  3.681242  -7.43219  ]]
Iteration 100 of 1000: loss=1.61 " + "l1=1.1" + "l2=0.512 f=-0.548 shape=(1, 9000, 1)
logits [[ 2.5027425 -0.8796869  2.1853158 -6.001244 ]]
Iteration 200 of 1000: loss=1.24 " + "l1=0.633" + "l2=0.606 f=-0.561 shape=(1, 9000, 1)
logits [[ 1.7432462  -0.20488156  1.737529   -5.5180717 ]]
Iteration 300 of 1000: loss=1.06 " + "l1=0.449" + "l2=0.615 f=-0.542 shape=(1, 9000, 1)
logits [[ 1.4514337   0.06926791  1.4517702  -5.139975  ]]
Iteration 400 of 1000: loss=0.959 " + "l1=0.344" + "l2=0.615 f=-0.525 shape=(1, 9000, 1)
logits [[ 1.262728    0.21435854  1.2720282  -4.8487186 ]]
Iteration 500 of 1000: loss=0.917 " + "l1=0.296" + "l2=0.62 f=-0.522 shape=(1, 9000, 1)
logits [[ 1.1823084  0.2700866  1.1762055 -4.715899 ]]
Iteration 600 of 1000: loss=0.886 " + "l1=0.263" + "l2=0.623 f=-0.521 shape=(1, 9000, 1)
logits [[ 1.1047174  0.3075904  1.1177251 -4.6150546]]
Iteration 700 of 1000: loss=0.859 " + "l1=0.23" + "l2=0.63 f=-0.522 shape=(1, 9000, 1)
logits [[ 1.019901    0.34470072  1.0512033  -4.5048676 ]]
Iteration 800 of 1000: loss=0.83 " + "l1=0.199" + "l2=0.631 f=-0.522 shape=(1, 9000, 1)
logits [[ 0.9690466   0.36125118  0.9750294  -4.3943067 ]]
Iteration 900 of 1000: loss=0.81 " + "l1=0.181" + "l2=0.629 f=-0.521 shape=(1, 9000, 1)
logits [[ 0.91804653  0.36549723  0.923363   -4.291013  ]]
--- 276.57791781425476 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0101 " + "l1=0.0101" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.6934023 -3.1558213  3.681242  -7.43219  ]]
Iteration 100 of 1000: loss=0.00988 " + "l1=0.00969" + "l2=0.00019 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.6620884 -3.162798   3.6925974 -7.4084   ]]
Iteration 200 of 1000: loss=0.00981 " + "l1=0.00964" + "l2=0.000171 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.6585608 -3.1636906  3.6943598 -7.4051113]]
Iteration 300 of 1000: loss=0.00976 " + "l1=0.00956" + "l2=0.000201 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.6532083 -3.1653278  3.696881  -7.399956 ]]
Iteration 400 of 1000: loss=0.00976 " + "l1=0.00948" + "l2=0.000281 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.647636  -3.1670172  3.6994548 -7.3943186]]
Iteration 500 of 1000: loss=0.00973 " + "l1=0.0094" + "l2=0.000335 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.641915  -3.1685505  3.701978  -7.388482 ]]
Iteration 600 of 1000: loss=0.00975 " + "l1=0.00932" + "l2=0.000432 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.6361146 -3.169756   3.7043283 -7.3825593]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.101 " + "l1=0.101" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.6934023 -3.1558213  3.681242  -7.43219  ]]
Iteration 100 of 1000: loss=0.0779 " + "l1=0.0655" + "l2=0.0124 f=-0.569 shape=(1, 9000, 1)
logits [[ 4.446623  -3.2286518  3.791584  -7.2844467]]
Iteration 200 of 1000: loss=0.0653 " + "l1=0.0459" + "l2=0.0194 f=-0.583 shape=(1, 9000, 1)
logits [[ 4.301918  -3.2729757  3.8431542 -7.203052 ]]
Iteration 300 of 1000: loss=0.0543 " + "l1=0.029" + "l2=0.0254 f=-0.591 shape=(1, 9000, 1)
logits [[ 4.1710067 -3.3041866  3.8814409 -7.1123533]]
Iteration 400 of 1000: loss=0.0433 " + "l1=0.0117" + "l2=0.0317 f=-0.594 shape=(1, 9000, 1)
logits [[ 4.0334864 -3.3299985  3.9166813 -6.9972115]]
Iteration 500 of 1000: loss=0.0337 " + "l1=0.000728" + "l2=0.033 f=-0.596 shape=(1, 9000, 1)
logits [[ 3.9461052 -3.3488224  3.9388292 -6.920956 ]]
Iteration 600 of 1000: loss=0.028 " + "l1=0" + "l2=0.028 f=-0.592 shape=(1, 9000, 1)
logits [[ 3.9376173 -3.3500173  3.9386995 -6.893516 ]]
Iteration 700 of 1000: loss=0.0247 " + "l1=0.000208" + "l2=0.0245 f=-0.588 shape=(1, 9000, 1)
logits [[ 3.9361439 -3.34552    3.934059  -6.8756776]]
Iteration 800 of 1000: loss=0.0222 " + "l1=5.92e-05" + "l2=0.0221 f=-0.585 shape=(1, 9000, 1)
logits [[ 3.93164   -3.3403518  3.9310474 -6.8614063]]
Iteration 900 of 1000: loss=0.0203 " + "l1=0.000194" + "l2=0.0201 f=-0.582 shape=(1, 9000, 1)
logits [[ 3.9292367 -3.3349936  3.927301  -6.8498054]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0557 " + "l1=0.0557" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.6934023 -3.1558213  3.681242  -7.43219  ]]
Iteration 100 of 1000: loss=0.0488 " + "l1=0.0449" + "l2=0.00382 f=-0.56 shape=(1, 9000, 1)
logits [[ 4.5587516 -3.1926558  3.7417126 -7.3473644]]
Iteration 200 of 1000: loss=0.0457 " + "l1=0.0404" + "l2=0.00529 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.4997334 -3.2079813  3.7646976 -7.307744 ]]
Iteration 300 of 1000: loss=0.0428 " + "l1=0.0357" + "l2=0.00707 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.438263  -3.227447   3.7884588 -7.261677 ]]
Iteration 400 of 1000: loss=0.0402 " + "l1=0.0317" + "l2=0.0085 f=-0.569 shape=(1, 9000, 1)
logits [[ 4.384246  -3.2455788  3.80807   -7.2222767]]
Iteration 500 of 1000: loss=0.0378 " + "l1=0.0279" + "l2=0.00988 f=-0.572 shape=(1, 9000, 1)
logits [[ 4.3329396 -3.2617586  3.8257809 -7.183446 ]]
Iteration 600 of 1000: loss=0.0354 " + "l1=0.0242" + "l2=0.0111 f=-0.574 shape=(1, 9000, 1)
logits [[ 4.2832723 -3.274892   3.842426  -7.145342 ]]
Iteration 700 of 1000: loss=0.0328 " + "l1=0.0202" + "l2=0.0126 f=-0.576 shape=(1, 9000, 1)
logits [[ 4.2272544 -3.2887764  3.8599303 -7.1028476]]
Iteration 800 of 1000: loss=0.0302 " + "l1=0.0163" + "l2=0.0139 f=-0.578 shape=(1, 9000, 1)
logits [[ 4.1695695 -3.297352   3.8729649 -7.0567493]]
Iteration 900 of 1000: loss=0.0279 " + "l1=0.0132" + "l2=0.0147 f=-0.578 shape=(1, 9000, 1)
logits [[ 4.1220775 -3.3022094  3.8823028 -7.0141816]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0784 " + "l1=0.0784" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.6934023 -3.1558213  3.681242  -7.43219  ]]
Iteration 100 of 1000: loss=0.0646 " + "l1=0.0571" + "l2=0.00753 f=-0.564 shape=(1, 9000, 1)
logits [[ 4.5039597 -3.2109156  3.7674232 -7.317437 ]]
Iteration 200 of 1000: loss=0.0578 " + "l1=0.0466" + "l2=0.0111 f=-0.571 shape=(1, 9000, 1)
logits [[ 4.405443  -3.2406976  3.8036714 -7.254359 ]]
Iteration 300 of 1000: loss=0.0515 " + "l1=0.0371" + "l2=0.0145 f=-0.579 shape=(1, 9000, 1)
logits [[ 4.314416  -3.2689044  3.8361583 -7.197036 ]]
Iteration 400 of 1000: loss=0.0458 " + "l1=0.0282" + "l2=0.0176 f=-0.584 shape=(1, 9000, 1)
logits [[ 4.2275395 -3.2923958  3.8639314 -7.1342387]]
Iteration 500 of 1000: loss=0.0399 " + "l1=0.0193" + "l2=0.0206 f=-0.586 shape=(1, 9000, 1)
logits [[ 4.136884 -3.308838  3.887641 -7.059944]]
Iteration 600 of 1000: loss=0.0344 " + "l1=0.0113" + "l2=0.0231 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.0515037 -3.3208082  3.9051394 -6.987376 ]]
Iteration 700 of 1000: loss=0.0288 " + "l1=0.002" + "l2=0.0268 f=-0.591 shape=(1, 9000, 1)
logits [[ 3.9588199 -3.3437421  3.9330409 -6.910257 ]]
Iteration 800 of 1000: loss=0.0246 " + "l1=0.000346" + "l2=0.0242 f=-0.587 shape=(1, 9000, 1)
logits [[ 3.936809  -3.3427207  3.9323394 -6.8747683]]
Iteration 900 of 1000: loss=0.0217 " + "l1=2e-05" + "l2=0.0217 f=-0.584 shape=(1, 9000, 1)
logits [[ 3.930371  -3.338764   3.9301124 -6.8581653]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0671 " + "l1=0.0671" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.6934023 -3.1558213  3.681242  -7.43219  ]]
Iteration 100 of 1000: loss=0.057 " + "l1=0.0514" + "l2=0.00552 f=-0.562 shape=(1, 9000, 1)
logits [[ 4.531672  -3.2015553  3.7552645 -7.3327975]]
Iteration 200 of 1000: loss=0.0524 " + "l1=0.0446" + "l2=0.00782 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.4565754 -3.2216334  3.783318  -7.2829113]]
Iteration 300 of 1000: loss=0.0479 " + "l1=0.0376" + "l2=0.0104 f=-0.572 shape=(1, 9000, 1)
logits [[ 4.3783765 -3.2478719  3.8113778 -7.2292757]]
Iteration 400 of 1000: loss=0.044 " + "l1=0.0314" + "l2=0.0126 f=-0.577 shape=(1, 9000, 1)
logits [[ 4.310774  -3.2703583  3.8370907 -7.185454 ]]
Iteration 500 of 1000: loss=0.0402 " + "l1=0.0253" + "l2=0.0149 f=-0.581 shape=(1, 9000, 1)
logits [[ 4.2422147 -3.28968    3.8601236 -7.134951 ]]
Iteration 600 of 1000: loss=0.0361 " + "l1=0.0192" + "l2=0.0169 f=-0.583 shape=(1, 9000, 1)
logits [[ 4.17019   -3.3042977  3.8806472 -7.0765786]]
Iteration 700 of 1000: loss=0.0322 " + "l1=0.014" + "l2=0.0182 f=-0.584 shape=(1, 9000, 1)
logits [[ 4.103559  -3.3126676  3.8927948 -7.0193877]]
Iteration 800 of 1000: loss=0.0288 " + "l1=0.00902" + "l2=0.0198 f=-0.585 shape=(1, 9000, 1)
logits [[ 4.044318  -3.3247428  3.9081855 -6.9664016]]
Iteration 900 of 1000: loss=0.0255 " + "l1=0.00347" + "l2=0.022 f=-0.586 shape=(1, 9000, 1)
logits [[ 3.9766796 -3.3356414  3.9242978 -6.908671 ]]
--- 263.7967722415924 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.121 " + "l1=0.121" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.6934023 -3.1558213  3.681242  -7.43219  ]]
Iteration 100 of 1000: loss=0.12 " + "l1=0.12" + "l2=0.000523 f=-0.55 shape=(1, 9000, 1)
logits [[ 4.622787  -3.1306522  3.6536186 -7.3462224]]
Iteration 200 of 1000: loss=0.12 " + "l1=0.119" + "l2=0.000605 f=-0.549 shape=(1, 9000, 1)
logits [[ 4.6027074 -3.123162   3.6465206 -7.320261 ]]
Iteration 300 of 1000: loss=0.119 " + "l1=0.119" + "l2=0.000785 f=-0.547 shape=(1, 9000, 1)
logits [[ 4.580313  -3.115304   3.6384423 -7.2900977]]
Iteration 400 of 1000: loss=0.119 " + "l1=0.118" + "l2=0.00101 f=-0.545 shape=(1, 9000, 1)
logits [[ 4.558465  -3.1078384  3.6304078 -7.2594037]]
Iteration 500 of 1000: loss=0.119 " + "l1=0.118" + "l2=0.00122 f=-0.543 shape=(1, 9000, 1)
logits [[ 4.53733   -3.102224   3.6234484 -7.2300076]]
Iteration 600 of 1000: loss=0.119 " + "l1=0.117" + "l2=0.00143 f=-0.541 shape=(1, 9000, 1)
logits [[ 4.517642  -3.097407   3.6170754 -7.202337 ]]
Iteration 700 of 1000: loss=0.118 " + "l1=0.117" + "l2=0.00163 f=-0.54 shape=(1, 9000, 1)
logits [[ 4.499251  -3.0928867  3.610902  -7.1756887]]
Iteration 800 of 1000: loss=0.118 " + "l1=0.116" + "l2=0.00182 f=-0.538 shape=(1, 9000, 1)
logits [[ 4.481939  -3.0888515  3.605106  -7.1498346]]
Iteration 900 of 1000: loss=0.118 " + "l1=0.116" + "l2=0.00207 f=-0.536 shape=(1, 9000, 1)
logits [[ 4.464501  -3.0847197  3.5994642 -7.1238766]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.21 " + "l1=1.21" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.6934023 -3.1558213  3.681242  -7.43219  ]]
Iteration 100 of 1000: loss=1.11 " + "l1=1.06" + "l2=0.0512 f=-0.533 shape=(1, 9000, 1)
logits [[ 3.9708834 -2.9149861  3.4006124 -6.5887165]]
Iteration 200 of 1000: loss=1.04 " + "l1=0.953" + "l2=0.0849 f=-0.52 shape=(1, 9000, 1)
logits [[ 3.4977615 -2.755476   3.214156  -6.0351424]]
Iteration 300 of 1000: loss=0.977 " + "l1=0.87" + "l2=0.107 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.122275  -2.622271   3.0474882 -5.5824394]]
Iteration 400 of 1000: loss=0.93 " + "l1=0.812" + "l2=0.119 f=-0.493 shape=(1, 9000, 1)
logits [[ 2.8807745 -2.493581   2.8779643 -5.2373757]]
Iteration 500 of 1000: loss=0.897 " + "l1=0.774" + "l2=0.123 f=-0.48 shape=(1, 9000, 1)
logits [[ 2.7433352 -2.4058206  2.7400434 -4.9992776]]
Iteration 600 of 1000: loss=0.867 " + "l1=0.738" + "l2=0.13 f=-0.468 shape=(1, 9000, 1)
logits [[ 2.6093457 -2.3265631  2.6099696 -4.7653923]]
Iteration 700 of 1000: loss=0.839 " + "l1=0.702" + "l2=0.136 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.4801555 -2.2583532  2.4825652 -4.539201 ]]
Iteration 800 of 1000: loss=0.812 " + "l1=0.67" + "l2=0.142 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.3633358 -2.1939547  2.364571  -4.3385205]]
Iteration 900 of 1000: loss=0.787 " + "l1=0.644" + "l2=0.143 f=-0.441 shape=(1, 9000, 1)
logits [[ 2.268588  -2.1366947  2.26941   -4.1668015]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.1 " + "l1=12.1" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.6934023 -3.1558213  3.681242  -7.43219  ]]
Iteration 100 of 1000: loss=6.07 " + "l1=3.72" + "l2=2.35 f=-0.379 shape=(1, 9000, 1)
logits [[ 1.0099063 -1.1300198  1.1622058 -2.5593252]]
Iteration 200 of 1000: loss=3.24 " + "l1=0.278" + "l2=2.97 f=-0.239 shape=(1, 9000, 1)
logits [[-0.57384276 -0.38922557  0.14311405 -0.135248  ]]
Iteration 300 of 1000: loss=2.37 " + "l1=0.0294" + "l2=2.34 f=-0.225 shape=(1, 9000, 1)
logits [[-0.53842825 -0.48220697  0.07417077  0.04475116]]
Iteration 400 of 1000: loss=1.95 " + "l1=0.00383" + "l2=1.94 f=-0.235 shape=(1, 9000, 1)
logits [[-0.47628796 -0.52367514  0.03267501  0.02884705]]
Iteration 500 of 1000: loss=1.64 " + "l1=0" + "l2=1.64 f=-0.248 shape=(1, 9000, 1)
logits [[-0.39354017 -0.6239921   0.01117605  0.01390407]]
Iteration 600 of 1000: loss=1.43 " + "l1=0.0324" + "l2=1.4 f=-0.257 shape=(1, 9000, 1)
logits [[-0.33225596 -0.67735475  0.00640261 -0.02600995]]
Iteration 700 of 1000: loss=1.24 " + "l1=0" + "l2=1.24 f=-0.262 shape=(1, 9000, 1)
logits [[-3.2595971e-01 -7.3389548e-01 -6.5737637e-04  1.2553625e-02]]
Iteration 800 of 1000: loss=1.1 " + "l1=0" + "l2=1.1 f=-0.266 shape=(1, 9000, 1)
logits [[-0.29675528 -0.79374355  0.00963221  0.01719202]]
Iteration 900 of 1000: loss=0.983 " + "l1=0" + "l2=0.983 f=-0.268 shape=(1, 9000, 1)
logits [[-0.2616917  -0.86130244  0.02215254  0.0272888 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.67 " + "l1=6.67" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.6934023 -3.1558213  3.681242  -7.43219  ]]
Iteration 100 of 1000: loss=4.3 " + "l1=3.39" + "l2=0.909 f=-0.449 shape=(1, 9000, 1)
logits [[ 2.0503042 -1.7830741  2.0519662 -4.1171193]]
Iteration 200 of 1000: loss=3.25 " + "l1=2.02" + "l2=1.22 f=-0.402 shape=(1, 9000, 1)
logits [[ 0.9083411  -0.97045934  1.0650307  -2.6094074 ]]
Iteration 300 of 1000: loss=2.43 " + "l1=1.02" + "l2=1.41 f=-0.307 shape=(1, 9000, 1)
logits [[ 0.09831383 -0.54868746  0.53700644 -1.3140167 ]]
Iteration 400 of 1000: loss=1.74 " + "l1=0.239" + "l2=1.5 f=-0.258 shape=(1, 9000, 1)
logits [[-0.32876235 -0.59328705  0.16230115 -0.27164075]]
Iteration 500 of 1000: loss=1.21 " + "l1=0.00607" + "l2=1.2 f=-0.266 shape=(1, 9000, 1)
logits [[-0.40495533 -0.71955687  0.03552147  0.02447788]]
Iteration 600 of 1000: loss=0.937 " + "l1=0.00378" + "l2=0.933 f=-0.268 shape=(1, 9000, 1)
logits [[-0.33375773 -0.8341416   0.05080595  0.04392457]]
Iteration 700 of 1000: loss=0.801 " + "l1=0" + "l2=0.801 f=-0.273 shape=(1, 9000, 1)
logits [[-0.31089032 -0.9336171   0.07105976  0.08271163]]
Iteration 800 of 1000: loss=0.709 " + "l1=0" + "l2=0.709 f=-0.274 shape=(1, 9000, 1)
logits [[-0.27347004 -1.0087582   0.08771726  0.0972764 ]]
Iteration 900 of 1000: loss=0.648 " + "l1=0" + "l2=0.648 f=-0.269 shape=(1, 9000, 1)
logits [[-0.2567674  -1.0427842   0.09357909  0.12885274]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.94 " + "l1=3.94" + "l2=0 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.6934023 -3.1558213  3.681242  -7.43219  ]]
Iteration 100 of 1000: loss=2.93 " + "l1=2.53" + "l2=0.408 f=-0.494 shape=(1, 9000, 1)
logits [[ 2.7127633 -2.3416753  2.7085922 -5.0572815]]
Iteration 200 of 1000: loss=2.54 " + "l1=2.02" + "l2=0.526 f=-0.466 shape=(1, 9000, 1)
logits [[ 2.1022444 -1.9864082  2.1136267 -4.0926633]]
Iteration 300 of 1000: loss=2.23 " + "l1=1.62" + "l2=0.619 f=-0.437 shape=(1, 9000, 1)
logits [[ 1.6122602 -1.6359485  1.6225497 -3.347805 ]]
Iteration 400 of 1000: loss=1.91 " + "l1=1.15" + "l2=0.755 f=-0.377 shape=(1, 9000, 1)
logits [[ 0.9271384 -1.104392   1.111056  -2.4421349]]
Iteration 500 of 1000: loss=1.54 " + "l1=0.672" + "l2=0.868 f=-0.289 shape=(1, 9000, 1)
logits [[ 0.38894346 -0.6923039   0.60603267 -1.4605806 ]]
Iteration 600 of 1000: loss=1.18 " + "l1=0.304" + "l2=0.875 f=-0.279 shape=(1, 9000, 1)
logits [[-0.01467651 -0.75040054  0.29313707 -0.64251226]]
Iteration 700 of 1000: loss=0.905 " + "l1=0.0582" + "l2=0.847 f=-0.28 shape=(1, 9000, 1)
logits [[-0.3185612  -0.8367341   0.10691437 -0.07209908]]
Iteration 800 of 1000: loss=0.737 " + "l1=0.00137" + "l2=0.735 f=-0.275 shape=(1, 9000, 1)
logits [[-0.35686275 -0.9037804   0.08318748  0.07895821]]
Iteration 900 of 1000: loss=0.638 " + "l1=0.00153" + "l2=0.637 f=-0.269 shape=(1, 9000, 1)
logits [[-0.3020265  -0.9428527   0.08721282  0.0824993 ]]
--- 285.7649519443512 seconds ---
Adv result:3
Loading record A06779
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0587 " + "l1=0.0587" + "l2=0 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.677396  -2.1880655  2.6048074 -6.19296  ]]
Iteration 100 of 1000: loss=0.0582 " + "l1=0.0579" + "l2=0.000346 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.6409585 -2.1479785  2.5788894 -6.1793957]]
Iteration 200 of 1000: loss=0.0581 " + "l1=0.0578" + "l2=0.00034 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.6370084 -2.1433825  2.5758734 -6.179067 ]]
Iteration 300 of 1000: loss=0.0581 " + "l1=0.0577" + "l2=0.000385 f=-0.528 shape=(1, 9000, 1)
logits [[ 3.6319022 -2.1376655  2.571807  -6.1775146]]
Iteration 400 of 1000: loss=0.058 " + "l1=0.0576" + "l2=0.000444 f=-0.528 shape=(1, 9000, 1)
logits [[ 3.6271188 -2.1328642  2.5685883 -6.175265 ]]
Iteration 500 of 1000: loss=0.058 " + "l1=0.0575" + "l2=0.000522 f=-0.528 shape=(1, 9000, 1)
logits [[ 3.6222887 -2.1281867  2.5656586 -6.172923 ]]
Iteration 600 of 1000: loss=0.058 " + "l1=0.0574" + "l2=0.000578 f=-0.528 shape=(1, 9000, 1)
logits [[ 3.6177301 -2.1238031  2.5629632 -6.1704574]]
Iteration 700 of 1000: loss=0.058 " + "l1=0.0573" + "l2=0.000665 f=-0.528 shape=(1, 9000, 1)
logits [[ 3.613428  -2.1197345  2.5605104 -6.1679397]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.587 " + "l1=0.587" + "l2=0 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.677396  -2.1880655  2.6048074 -6.19296  ]]
Iteration 100 of 1000: loss=0.55 " + "l1=0.529" + "l2=0.021 f=-0.535 shape=(1, 9000, 1)
logits [[ 3.4009905 -1.8874998  2.41375   -6.0660195]]
Iteration 200 of 1000: loss=0.537 " + "l1=0.508" + "l2=0.0289 f=-0.538 shape=(1, 9000, 1)
logits [[ 3.2920616 -1.7844241  2.3377078 -5.9962587]]
Iteration 300 of 1000: loss=0.524 " + "l1=0.489" + "l2=0.0347 f=-0.541 shape=(1, 9000, 1)
logits [[ 3.1930645 -1.6987995  2.2722328 -5.929651 ]]
Iteration 400 of 1000: loss=0.511 " + "l1=0.473" + "l2=0.0381 f=-0.539 shape=(1, 9000, 1)
logits [[ 3.0992339 -1.6322148  2.22378   -5.8486977]]
Iteration 500 of 1000: loss=0.497 " + "l1=0.455" + "l2=0.0422 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.9888384 -1.558821   2.1779695 -5.7571974]]
Iteration 600 of 1000: loss=0.484 " + "l1=0.437" + "l2=0.0465 f=-0.534 shape=(1, 9000, 1)
logits [[ 2.8826158 -1.4883395  2.1387253 -5.6697917]]
Iteration 700 of 1000: loss=0.469 " + "l1=0.415" + "l2=0.0543 f=-0.534 shape=(1, 9000, 1)
logits [[ 2.7496226 -1.3978593  2.0931814 -5.5814924]]
Iteration 800 of 1000: loss=0.452 " + "l1=0.39" + "l2=0.0618 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.5991979 -1.3015803  2.0508823 -5.4935107]]
Iteration 900 of 1000: loss=0.436 " + "l1=0.369" + "l2=0.0669 f=-0.535 shape=(1, 9000, 1)
logits [[ 2.4715388 -1.2218994  2.0067215 -5.398217 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.87 " + "l1=5.87" + "l2=0 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.677396  -2.1880655  2.6048074 -6.19296  ]]
Iteration 100 of 1000: loss=2.39 " + "l1=0.973" + "l2=1.42 f=-0.619 shape=(1, 9000, 1)
logits [[ 1.0590706   0.10083731  1.0739406  -4.708517  ]]
Iteration 200 of 1000: loss=1.66 " + "l1=0.181" + "l2=1.47 f=-0.628 shape=(1, 9000, 1)
logits [[ 0.6316105  0.4644897  0.645231  -4.252007 ]]
Iteration 300 of 1000: loss=1.31 " + "l1=0" + "l2=1.31 f=-0.6 shape=(1, 9000, 1)
logits [[ 0.50159967  0.52463746  0.51892835 -3.9461007 ]]
Iteration 400 of 1000: loss=1.11 " + "l1=0" + "l2=1.11 f=-0.581 shape=(1, 9000, 1)
logits [[ 0.46358898  0.5090757   0.5052342  -3.8013816 ]]
Iteration 500 of 1000: loss=0.941 " + "l1=0.00679" + "l2=0.934 f=-0.57 shape=(1, 9000, 1)
logits [[ 0.41105187  0.49828696  0.5050726  -3.6927116 ]]
Iteration 600 of 1000: loss=0.827 " + "l1=0" + "l2=0.827 f=-0.556 shape=(1, 9000, 1)
logits [[ 0.3638409   0.5002879   0.49968752 -3.587831  ]]
Iteration 700 of 1000: loss=0.755 " + "l1=0" + "l2=0.755 f=-0.54 shape=(1, 9000, 1)
logits [[ 0.34500322  0.49927932  0.4958919  -3.499204  ]]
Iteration 800 of 1000: loss=0.7 " + "l1=1.26e-05" + "l2=0.7 f=-0.527 shape=(1, 9000, 1)
logits [[ 0.33045775  0.49664992  0.49666256 -3.4299133 ]]
Iteration 900 of 1000: loss=0.66 " + "l1=0" + "l2=0.66 f=-0.516 shape=(1, 9000, 1)
logits [[ 0.29431385  0.4926987   0.4876352  -3.3400388 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.23 " + "l1=3.23" + "l2=0 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.677396  -2.1880655  2.6048074 -6.19296  ]]
Iteration 100 of 1000: loss=1.92 " + "l1=1.12" + "l2=0.796 f=-0.602 shape=(1, 9000, 1)
logits [[ 1.5948888 -0.449552   1.5656346 -5.116972 ]]
Iteration 200 of 1000: loss=1.51 " + "l1=0.681" + "l2=0.83 f=-0.614 shape=(1, 9000, 1)
logits [[ 1.2030351  -0.03427229  1.1988814  -4.8231688 ]]
Iteration 300 of 1000: loss=1.29 " + "l1=0.452" + "l2=0.84 f=-0.599 shape=(1, 9000, 1)
logits [[ 0.97821134  0.15589836  0.9726566  -4.5033174 ]]
Iteration 400 of 1000: loss=1.08 " + "l1=0.29" + "l2=0.789 f=-0.583 shape=(1, 9000, 1)
logits [[ 0.80350494  0.28777498  0.81449676 -4.2388916 ]]
Iteration 500 of 1000: loss=0.904 " + "l1=0.174" + "l2=0.73 f=-0.572 shape=(1, 9000, 1)
logits [[ 0.63303906  0.39058354  0.7078423  -4.0186296 ]]
Iteration 600 of 1000: loss=0.781 " + "l1=0.0617" + "l2=0.719 f=-0.559 shape=(1, 9000, 1)
logits [[ 0.3855625   0.49667555  0.6089086  -3.7267754 ]]
Iteration 700 of 1000: loss=0.699 " + "l1=0.000956" + "l2=0.698 f=-0.542 shape=(1, 9000, 1)
logits [[ 0.26777467  0.5412869   0.5430247  -3.518602  ]]
Iteration 800 of 1000: loss=0.649 " + "l1=0.00397" + "l2=0.645 f=-0.529 shape=(1, 9000, 1)
logits [[ 0.25392777  0.5376319   0.54484314 -3.452053  ]]
Iteration 900 of 1000: loss=0.613 " + "l1=0" + "l2=0.613 f=-0.519 shape=(1, 9000, 1)
logits [[ 0.22337295  0.53684765  0.5342993  -3.371235  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.91 " + "l1=1.91" + "l2=0 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.677396  -2.1880655  2.6048074 -6.19296  ]]
Iteration 100 of 1000: loss=1.48 " + "l1=1.21" + "l2=0.275 f=-0.551 shape=(1, 9000, 1)
logits [[ 2.5782611 -1.1435262  1.996115  -5.636188 ]]
Iteration 200 of 1000: loss=1.27 " + "l1=0.863" + "l2=0.41 f=-0.575 shape=(1, 9000, 1)
logits [[ 1.9508859 -0.7031854  1.7392972 -5.2863083]]
Iteration 300 of 1000: loss=1.12 " + "l1=0.682" + "l2=0.439 f=-0.578 shape=(1, 9000, 1)
logits [[ 1.6004578  -0.49791145  1.5954152  -5.011062  ]]
Iteration 400 of 1000: loss=0.973 " + "l1=0.559" + "l2=0.414 f=-0.564 shape=(1, 9000, 1)
logits [[ 1.4189817 -0.2910662  1.4274272 -4.811306 ]]
Iteration 500 of 1000: loss=0.831 " + "l1=0.457" + "l2=0.374 f=-0.552 shape=(1, 9000, 1)
logits [[ 1.2889339  -0.11113921  1.2944145  -4.6784034 ]]
Iteration 600 of 1000: loss=0.747 " + "l1=0.396" + "l2=0.351 f=-0.538 shape=(1, 9000, 1)
logits [[ 1.1967944  -0.02038386  1.1977715  -4.524553  ]]
Iteration 700 of 1000: loss=0.695 " + "l1=0.368" + "l2=0.327 f=-0.525 shape=(1, 9000, 1)
logits [[ 1.1400723   0.00802866  1.1399113  -4.386317  ]]
Iteration 800 of 1000: loss=0.661 " + "l1=0.339" + "l2=0.321 f=-0.513 shape=(1, 9000, 1)
logits [[ 1.0742252   0.04544728  1.089222   -4.26247   ]]
Iteration 900 of 1000: loss=0.632 " + "l1=0.315" + "l2=0.317 f=-0.504 shape=(1, 9000, 1)
logits [[ 1.0074786   0.08285986  1.0523876  -4.158766  ]]
--- 271.6040678024292 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0107 " + "l1=0.0107" + "l2=0 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.677396  -2.1880655  2.6048074 -6.19296  ]]
Iteration 100 of 1000: loss=0.0106 " + "l1=0.0105" + "l2=0.000158 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.6603951 -2.1929116  2.6134622 -6.181319 ]]
Iteration 200 of 1000: loss=0.0106 " + "l1=0.0105" + "l2=0.000122 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.6609683 -2.1922505  2.6134396 -6.1823225]]
Iteration 300 of 1000: loss=0.0106 " + "l1=0.0105" + "l2=0.000134 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.6598928 -2.1923978  2.6142707 -6.1818347]]
Iteration 400 of 1000: loss=0.0106 " + "l1=0.0104" + "l2=0.000147 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.6584587 -2.1927326  2.6152298 -6.180851 ]]
Iteration 500 of 1000: loss=0.0106 " + "l1=0.0104" + "l2=0.000176 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.6568925 -2.1930568  2.6161582 -6.17973  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.107 " + "l1=0.107" + "l2=0 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.677396  -2.1880655  2.6048074 -6.19296  ]]
Iteration 100 of 1000: loss=0.0972 " + "l1=0.0913" + "l2=0.0059 f=-0.532 shape=(1, 9000, 1)
logits [[ 3.5707748 -2.2194526  2.6574802 -6.137587 ]]
Iteration 200 of 1000: loss=0.0946 " + "l1=0.0869" + "l2=0.00763 f=-0.533 shape=(1, 9000, 1)
logits [[ 3.5420573 -2.2282543  2.6727517 -6.1190405]]
Iteration 300 of 1000: loss=0.092 " + "l1=0.083" + "l2=0.00899 f=-0.534 shape=(1, 9000, 1)
logits [[ 3.51506   -2.2351432  2.6849463 -6.1008844]]
Iteration 400 of 1000: loss=0.0893 " + "l1=0.0788" + "l2=0.0105 f=-0.535 shape=(1, 9000, 1)
logits [[ 3.4870646 -2.2426958  2.6987023 -6.0823145]]
Iteration 500 of 1000: loss=0.0863 " + "l1=0.0744" + "l2=0.0119 f=-0.535 shape=(1, 9000, 1)
logits [[ 3.4555333 -2.2486684  2.71132   -6.0601244]]
Iteration 600 of 1000: loss=0.0833 " + "l1=0.07" + "l2=0.0132 f=-0.536 shape=(1, 9000, 1)
logits [[ 3.422775  -2.2556708  2.722359  -6.0347424]]
Iteration 700 of 1000: loss=0.0799 " + "l1=0.0652" + "l2=0.0147 f=-0.537 shape=(1, 9000, 1)
logits [[ 3.3868477 -2.264496   2.7348309 -6.0052443]]
Iteration 800 of 1000: loss=0.0765 " + "l1=0.0601" + "l2=0.0164 f=-0.539 shape=(1, 9000, 1)
logits [[ 3.3489118 -2.2782876  2.7480304 -5.9736986]]
Iteration 900 of 1000: loss=0.0733 " + "l1=0.0552" + "l2=0.0181 f=-0.54 shape=(1, 9000, 1)
logits [[ 3.3098552 -2.2890115  2.7577276 -5.938419 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.07 " + "l1=1.07" + "l2=0 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.677396  -2.1880655  2.6048074 -6.19296  ]]
Iteration 100 of 1000: loss=0.239 " + "l1=0.00622" + "l2=0.233 f=-0.579 shape=(1, 9000, 1)
logits [[ 2.8415766 -2.325845   2.8353548 -5.6661854]]
Iteration 200 of 1000: loss=0.173 " + "l1=0.00513" + "l2=0.168 f=-0.58 shape=(1, 9000, 1)
logits [[ 2.8314373 -2.3150036  2.8263113 -5.661684 ]]
Iteration 300 of 1000: loss=0.138 " + "l1=0" + "l2=0.138 f=-0.58 shape=(1, 9000, 1)
logits [[ 2.8178804 -2.3211696  2.8222964 -5.640744 ]]
Iteration 400 of 1000: loss=0.115 " + "l1=0" + "l2=0.115 f=-0.581 shape=(1, 9000, 1)
logits [[ 2.8162668 -2.3361194  2.8216295 -5.623935 ]]
Iteration 500 of 1000: loss=0.0993 " + "l1=0" + "l2=0.0993 f=-0.579 shape=(1, 9000, 1)
logits [[ 2.8077822 -2.3556285  2.825073  -5.593404 ]]
Iteration 600 of 1000: loss=0.0811 " + "l1=0" + "l2=0.0811 f=-0.574 shape=(1, 9000, 1)
logits [[ 2.8188777 -2.3702939  2.8234568 -5.568759 ]]
Iteration 700 of 1000: loss=0.0693 " + "l1=0.000455" + "l2=0.0688 f=-0.57 shape=(1, 9000, 1)
logits [[ 2.8206499 -2.381785   2.8201947 -5.5380864]]
Iteration 800 of 1000: loss=0.0617 " + "l1=0" + "l2=0.0617 f=-0.566 shape=(1, 9000, 1)
logits [[ 2.8084905 -2.3886147  2.8179839 -5.502984 ]]
Iteration 900 of 1000: loss=0.0551 " + "l1=0" + "l2=0.0551 f=-0.563 shape=(1, 9000, 1)
logits [[ 2.80666   -2.3947845  2.812982  -5.476365 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.59 " + "l1=0.59" + "l2=0 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.677396  -2.1880655  2.6048074 -6.19296  ]]
Iteration 100 of 1000: loss=0.268 " + "l1=0.0789" + "l2=0.189 f=-0.573 shape=(1, 9000, 1)
logits [[ 2.965804  -2.3309786  2.8223047 -5.7487917]]
Iteration 200 of 1000: loss=0.167 " + "l1=0.00285" + "l2=0.164 f=-0.577 shape=(1, 9000, 1)
logits [[ 2.8324242 -2.3181489  2.8272364 -5.649145 ]]
Iteration 300 of 1000: loss=0.123 " + "l1=0" + "l2=0.123 f=-0.575 shape=(1, 9000, 1)
logits [[ 2.8207211 -2.3257575  2.8225327 -5.6184993]]
Iteration 400 of 1000: loss=0.0962 " + "l1=0" + "l2=0.0962 f=-0.573 shape=(1, 9000, 1)
logits [[ 2.811377  -2.3335185  2.814485  -5.5845423]]
Iteration 500 of 1000: loss=0.076 " + "l1=0" + "l2=0.076 f=-0.567 shape=(1, 9000, 1)
logits [[ 2.8027134 -2.331986   2.8041694 -5.5426273]]
Iteration 600 of 1000: loss=0.063 " + "l1=0" + "l2=0.063 f=-0.562 shape=(1, 9000, 1)
logits [[ 2.7849627 -2.3258183  2.7917361 -5.499711 ]]
Iteration 700 of 1000: loss=0.0557 " + "l1=0.0025" + "l2=0.0532 f=-0.557 shape=(1, 9000, 1)
logits [[ 2.7829466 -2.3184335  2.7784028 -5.4728894]]
Iteration 800 of 1000: loss=0.0488 " + "l1=0" + "l2=0.0488 f=-0.554 shape=(1, 9000, 1)
logits [[ 2.7684703 -2.318998   2.772461  -5.439901 ]]
Iteration 900 of 1000: loss=0.0469 " + "l1=0" + "l2=0.0469 f=-0.553 shape=(1, 9000, 1)
logits [[ 2.7442424 -2.3248043  2.7721837 -5.4044676]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.349 " + "l1=0.349" + "l2=0 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.677396  -2.1880655  2.6048074 -6.19296  ]]
Iteration 100 of 1000: loss=0.239 " + "l1=0.171" + "l2=0.0684 f=-0.554 shape=(1, 9000, 1)
logits [[ 3.2847505 -2.2868347  2.7595227 -5.9717712]]
Iteration 200 of 1000: loss=0.196 " + "l1=0.098" + "l2=0.0977 f=-0.564 shape=(1, 9000, 1)
logits [[ 3.0914938 -2.2967837  2.7899194 -5.8396797]]
Iteration 300 of 1000: loss=0.153 " + "l1=0.0412" + "l2=0.112 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.944091  -2.3235812  2.8173862 -5.720394 ]]
Iteration 400 of 1000: loss=0.106 " + "l1=0" + "l2=0.106 f=-0.572 shape=(1, 9000, 1)
logits [[ 2.8221228 -2.332219   2.8231888 -5.600133 ]]
Iteration 500 of 1000: loss=0.0763 " + "l1=0.000963" + "l2=0.0753 f=-0.565 shape=(1, 9000, 1)
logits [[ 2.803458  -2.3170784  2.8004954 -5.546376 ]]
Iteration 600 of 1000: loss=0.0609 " + "l1=0" + "l2=0.0609 f=-0.56 shape=(1, 9000, 1)
logits [[ 2.7772295 -2.3046334  2.7839603 -5.4985275]]
Iteration 700 of 1000: loss=0.0519 " + "l1=0" + "l2=0.0519 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.7712457 -2.3056524  2.7761884 -5.4666104]]
Iteration 800 of 1000: loss=0.0456 " + "l1=0" + "l2=0.0456 f=-0.552 shape=(1, 9000, 1)
logits [[ 2.7712257 -2.3114738  2.7717772 -5.441439 ]]
Iteration 900 of 1000: loss=0.0428 " + "l1=0" + "l2=0.0428 f=-0.551 shape=(1, 9000, 1)
logits [[ 2.7614257 -2.31861    2.768099  -5.416092 ]]
--- 258.3555414676666 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0987 " + "l1=0.0987" + "l2=0 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.677396  -2.1880655  2.6048074 -6.19296  ]]
Iteration 100 of 1000: loss=0.0982 " + "l1=0.0978" + "l2=0.00037 f=-0.522 shape=(1, 9000, 1)
logits [[ 3.6413312 -2.1775448  2.5910196 -6.1417694]]
Iteration 200 of 1000: loss=0.0981 " + "l1=0.0977" + "l2=0.000369 f=-0.521 shape=(1, 9000, 1)
logits [[ 3.6371827 -2.1764438  2.5886385 -6.134466 ]]
Iteration 300 of 1000: loss=0.098 " + "l1=0.0976" + "l2=0.000409 f=-0.521 shape=(1, 9000, 1)
logits [[ 3.6312823 -2.1748805  2.5856783 -6.1247473]]
Iteration 400 of 1000: loss=0.0979 " + "l1=0.0974" + "l2=0.000491 f=-0.52 shape=(1, 9000, 1)
logits [[ 3.6249475 -2.1732993  2.5826225 -6.1140213]]
Iteration 500 of 1000: loss=0.0978 " + "l1=0.0972" + "l2=0.000618 f=-0.519 shape=(1, 9000, 1)
logits [[ 3.618589  -2.171763   2.5795429 -6.1030564]]
Iteration 600 of 1000: loss=0.0977 " + "l1=0.097" + "l2=0.000687 f=-0.518 shape=(1, 9000, 1)
logits [[ 3.6122003 -2.1701117  2.5763304 -6.0919924]]
Iteration 700 of 1000: loss=0.0977 " + "l1=0.0969" + "l2=0.000808 f=-0.518 shape=(1, 9000, 1)
logits [[ 3.605962  -2.168473   2.5730863 -6.0809507]]
Iteration 800 of 1000: loss=0.0976 " + "l1=0.0967" + "l2=0.000929 f=-0.517 shape=(1, 9000, 1)
logits [[ 3.599745  -2.1669345  2.5700064 -6.0699606]]
Iteration 900 of 1000: loss=0.0976 " + "l1=0.0965" + "l2=0.00105 f=-0.516 shape=(1, 9000, 1)
logits [[ 3.59366   -2.1656163  2.567116  -6.059146 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.987 " + "l1=0.987" + "l2=0 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.677396  -2.1880655  2.6048074 -6.19296  ]]
Iteration 100 of 1000: loss=0.939 " + "l1=0.911" + "l2=0.0281 f=-0.498 shape=(1, 9000, 1)
logits [[ 3.3612447 -2.0829837  2.4798732 -5.7499504]]
Iteration 200 of 1000: loss=0.915 " + "l1=0.873" + "l2=0.0415 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.204731  -2.0337088  2.4073377 -5.5259414]]
Iteration 300 of 1000: loss=0.889 " + "l1=0.839" + "l2=0.0508 f=-0.476 shape=(1, 9000, 1)
logits [[ 3.0716715 -2.0010011  2.3397098 -5.314979 ]]
Iteration 400 of 1000: loss=0.862 " + "l1=0.8" + "l2=0.0615 f=-0.467 shape=(1, 9000, 1)
logits [[ 2.92019   -1.9733642  2.270128  -5.083102 ]]
Iteration 500 of 1000: loss=0.828 " + "l1=0.752" + "l2=0.076 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.71371   -1.9428945  2.2092237 -4.801843 ]]
Iteration 600 of 1000: loss=0.792 " + "l1=0.706" + "l2=0.0858 f=-0.445 shape=(1, 9000, 1)
logits [[ 2.524824  -1.9144807  2.1446717 -4.535838 ]]
Iteration 700 of 1000: loss=0.75 " + "l1=0.651" + "l2=0.0996 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.2945101 -1.8766468  2.057415  -4.213462 ]]
Iteration 800 of 1000: loss=0.713 " + "l1=0.604" + "l2=0.109 f=-0.424 shape=(1, 9000, 1)
logits [[ 2.0935507 -1.831619   1.9833077 -3.942084 ]]
Iteration 900 of 1000: loss=0.679 " + "l1=0.561" + "l2=0.118 f=-0.415 shape=(1, 9000, 1)
logits [[ 1.9102849 -1.7779032  1.9095869 -3.7018015]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.87 " + "l1=9.87" + "l2=0 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.677396  -2.1880655  2.6048074 -6.19296  ]]
Iteration 100 of 1000: loss=5.31 " + "l1=3.08" + "l2=2.23 f=-0.334 shape=(1, 9000, 1)
logits [[ 0.9466137  -1.1517055   0.97612315 -2.1050978 ]]
Iteration 200 of 1000: loss=2.9 " + "l1=0.0045" + "l2=2.89 f=-0.23 shape=(1, 9000, 1)
logits [[-0.18183494 -0.6884174  -0.02232982 -0.02683018]]
Iteration 300 of 1000: loss=1.98 " + "l1=0" + "l2=1.98 f=-0.221 shape=(1, 9000, 1)
logits [[-0.19767606 -0.65392756 -0.02396967 -0.00714499]]
Iteration 400 of 1000: loss=1.58 " + "l1=0.00324" + "l2=1.57 f=-0.211 shape=(1, 9000, 1)
logits [[-0.16450828 -0.6878292   0.0062845   0.00304838]]
Iteration 500 of 1000: loss=1.37 " + "l1=0" + "l2=1.37 f=-0.207 shape=(1, 9000, 1)
logits [[-0.15202554 -0.7162087   0.01582643  0.02436899]]
Iteration 600 of 1000: loss=1.23 " + "l1=0" + "l2=1.23 f=-0.202 shape=(1, 9000, 1)
logits [[-0.14086357 -0.74775225  0.03064912  0.0505557 ]]
Iteration 700 of 1000: loss=1.09 " + "l1=0" + "l2=1.09 f=-0.206 shape=(1, 9000, 1)
logits [[-0.16419564 -0.75230354  0.03834552  0.05556097]]
Iteration 800 of 1000: loss=0.986 " + "l1=0" + "l2=0.986 f=-0.206 shape=(1, 9000, 1)
logits [[-0.16142315 -0.7649424   0.04572086  0.05534657]]
Iteration 900 of 1000: loss=0.909 " + "l1=0" + "l2=0.909 f=-0.203 shape=(1, 9000, 1)
logits [[-0.18067825 -0.7720668   0.06549843  0.07710038]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.43 " + "l1=5.43" + "l2=0 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.677396  -2.1880655  2.6048074 -6.19296  ]]
Iteration 100 of 1000: loss=3.79 " + "l1=2.97" + "l2=0.82 f=-0.406 shape=(1, 9000, 1)
logits [[ 1.7821896 -1.5742311  1.7851429 -3.6154935]]
Iteration 200 of 1000: loss=3.09 " + "l1=2.11" + "l2=0.981 f=-0.325 shape=(1, 9000, 1)
logits [[ 1.2849004 -1.3221978  1.2818003 -2.5456467]]
Iteration 300 of 1000: loss=2.31 " + "l1=1.14" + "l2=1.17 f=-0.222 shape=(1, 9000, 1)
logits [[ 0.72550863 -1.0151446   0.73915285 -1.3380766 ]]
Iteration 400 of 1000: loss=1.52 " + "l1=0.0904" + "l2=1.43 f=-0.184 shape=(1, 9000, 1)
logits [[ 0.00396276 -0.81982964  0.12191705 -0.04246683]]
Iteration 500 of 1000: loss=1.17 " + "l1=0.0174" + "l2=1.15 f=-0.197 shape=(1, 9000, 1)
logits [[-0.1033045  -0.83985883  0.09388486  0.06222434]]
Iteration 600 of 1000: loss=0.964 " + "l1=0.0112" + "l2=0.953 f=-0.2 shape=(1, 9000, 1)
logits [[-0.15317008 -0.84898263  0.11191663  0.09153784]]
Iteration 700 of 1000: loss=0.81 " + "l1=0.003" + "l2=0.807 f=-0.198 shape=(1, 9000, 1)
logits [[-0.17926762 -0.8564225   0.1244738   0.11902034]]
Iteration 800 of 1000: loss=0.696 " + "l1=0" + "l2=0.696 f=-0.202 shape=(1, 9000, 1)
logits [[-0.208689   -0.8268753   0.11198233  0.11661989]]
Iteration 900 of 1000: loss=0.612 " + "l1=0" + "l2=0.612 f=-0.202 shape=(1, 9000, 1)
logits [[-0.21329123 -0.82729703  0.10569341  0.12782145]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.21 " + "l1=3.21" + "l2=0 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.677396  -2.1880655  2.6048074 -6.19296  ]]
Iteration 100 of 1000: loss=2.61 " + "l1=2.28" + "l2=0.337 f=-0.442 shape=(1, 9000, 1)
logits [[ 2.469433  -1.8277752  2.1262236 -4.5360293]]
Iteration 200 of 1000: loss=2.29 " + "l1=1.82" + "l2=0.472 f=-0.407 shape=(1, 9000, 1)
logits [[ 1.8742167 -1.6609023  1.8730216 -3.7128868]]
Iteration 300 of 1000: loss=1.97 " + "l1=1.48" + "l2=0.499 f=-0.345 shape=(1, 9000, 1)
logits [[ 1.5464634 -1.4795855  1.5469011 -2.9921985]]
Iteration 400 of 1000: loss=1.63 " + "l1=1.06" + "l2=0.573 f=-0.261 shape=(1, 9000, 1)
logits [[ 1.1429996 -1.2222303  1.1443468 -2.1088002]]
Iteration 500 of 1000: loss=1.34 " + "l1=0.714" + "l2=0.626 f=-0.196 shape=(1, 9000, 1)
logits [[ 0.7988703  -0.98819464  0.8011701  -1.3952929 ]]
Iteration 600 of 1000: loss=1.06 " + "l1=0.349" + "l2=0.708 f=-0.177 shape=(1, 9000, 1)
logits [[ 0.29467884 -0.7836401   0.42697364 -0.6459622 ]]
Iteration 700 of 1000: loss=0.856 " + "l1=0.107" + "l2=0.749 f=-0.161 shape=(1, 9000, 1)
logits [[-0.01513453 -0.74471194  0.22315197 -0.10549077]]
Iteration 800 of 1000: loss=0.704 " + "l1=0.00269" + "l2=0.701 f=-0.16 shape=(1, 9000, 1)
logits [[-0.14994448 -0.7588982   0.13928397  0.13100526]]
Iteration 900 of 1000: loss=0.604 " + "l1=0" + "l2=0.604 f=-0.156 shape=(1, 9000, 1)
logits [[-0.17315237 -0.7756039   0.16059947  0.16521844]]
--- 285.71160101890564 seconds ---
Adv result:3
Loading record A06804
(1, 5062)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.065 " + "l1=0.065" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.075014  -2.4227552  2.0116124 -5.3359537]]
Iteration 100 of 1000: loss=0.0642 " + "l1=0.0638" + "l2=0.000392 f=-0.419 shape=(1, 9000, 1)
logits [[ 4.01241   -2.3669848  1.9748769 -5.294409 ]]
Iteration 200 of 1000: loss=0.0639 " + "l1=0.0634" + "l2=0.00046 f=-0.419 shape=(1, 9000, 1)
logits [[ 3.9939847 -2.350593   1.9640708 -5.282889 ]]
Iteration 300 of 1000: loss=0.0637 " + "l1=0.0631" + "l2=0.000591 f=-0.419 shape=(1, 9000, 1)
logits [[ 3.9742336 -2.3333452  1.9527161 -5.2701974]]
Iteration 400 of 1000: loss=0.0635 " + "l1=0.0627" + "l2=0.000733 f=-0.419 shape=(1, 9000, 1)
logits [[ 3.9554174 -2.3178427  1.9427463 -5.2581563]]
Iteration 500 of 1000: loss=0.0633 " + "l1=0.0624" + "l2=0.000898 f=-0.42 shape=(1, 9000, 1)
logits [[ 3.9353547 -2.3021548  1.9329609 -5.245843 ]]
Iteration 600 of 1000: loss=0.0631 " + "l1=0.062" + "l2=0.00109 f=-0.42 shape=(1, 9000, 1)
logits [[ 3.9152575 -2.286903   1.9238079 -5.2339272]]
Iteration 700 of 1000: loss=0.0629 " + "l1=0.0617" + "l2=0.00126 f=-0.421 shape=(1, 9000, 1)
logits [[ 3.8963392 -2.2729714  1.9151921 -5.222579 ]]
Iteration 800 of 1000: loss=0.0628 " + "l1=0.0614" + "l2=0.00146 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.8782938 -2.2597082  1.9069283 -5.211598 ]]
Iteration 900 of 1000: loss=0.0626 " + "l1=0.0611" + "l2=0.00156 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.861092  -2.2474842  1.899041  -5.200497 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.65 " + "l1=0.65" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.075014  -2.4227552  2.0116124 -5.3359537]]
Iteration 100 of 1000: loss=0.574 " + "l1=0.536" + "l2=0.038 f=-0.432 shape=(1, 9000, 1)
logits [[ 3.4470358 -1.9139966  1.6749512 -4.937848 ]]
Iteration 200 of 1000: loss=0.522 " + "l1=0.451" + "l2=0.0717 f=-0.453 shape=(1, 9000, 1)
logits [[ 2.9599805 -1.545146   1.4140942 -4.6411834]]
Iteration 300 of 1000: loss=0.469 " + "l1=0.372" + "l2=0.0972 f=-0.467 shape=(1, 9000, 1)
logits [[ 2.5809972 -1.1377206  1.0750939 -4.385066 ]]
Iteration 400 of 1000: loss=0.427 " + "l1=0.301" + "l2=0.126 f=-0.487 shape=(1, 9000, 1)
logits [[ 2.1575525 -0.8511244  0.9148613 -4.1674123]]
Iteration 500 of 1000: loss=0.388 " + "l1=0.238" + "l2=0.15 f=-0.49 shape=(1, 9000, 1)
logits [[ 1.7617658 -0.6183417  0.837528  -3.9412532]]
Iteration 600 of 1000: loss=0.335 " + "l1=0.158" + "l2=0.177 f=-0.489 shape=(1, 9000, 1)
logits [[ 1.2648772  -0.31554535  0.7493864  -3.6540396 ]]
Iteration 700 of 1000: loss=0.27 " + "l1=0.0656" + "l2=0.205 f=-0.483 shape=(1, 9000, 1)
logits [[ 6.4862776e-01 -1.0511661e-03  6.5459043e-01 -3.2359135e+00]]
Iteration 800 of 1000: loss=0.237 " + "l1=0.0588" + "l2=0.178 f=-0.45 shape=(1, 9000, 1)
logits [[ 0.60256815  0.02654544  0.6145024  -3.0451891 ]]
Iteration 900 of 1000: loss=0.214 " + "l1=0.0578" + "l2=0.156 f=-0.438 shape=(1, 9000, 1)
logits [[ 5.7718706e-01  2.5130855e-03  5.8079928e-01 -2.9130440e+00]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.5 " + "l1=6.5" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.075014  -2.4227552  2.0116124 -5.3359537]]
Iteration 100 of 1000: loss=1.05 " + "l1=0.0149" + "l2=1.04 f=-0.627 shape=(1, 9000, 1)
logits [[ 0.5079908  0.5041446  0.5190615 -4.0396276]]
Iteration 200 of 1000: loss=0.719 " + "l1=0" + "l2=0.719 f=-0.615 shape=(1, 9000, 1)
logits [[ 0.45100203  0.47761318  0.46532196 -3.8547807 ]]
Iteration 300 of 1000: loss=0.592 " + "l1=0" + "l2=0.592 f=-0.59 shape=(1, 9000, 1)
logits [[ 0.42377284  0.47102696  0.43954676 -3.6925883 ]]
Iteration 400 of 1000: loss=0.532 " + "l1=0" + "l2=0.532 f=-0.567 shape=(1, 9000, 1)
logits [[ 0.37134743  0.47816     0.42939457 -3.5469685 ]]
Iteration 500 of 1000: loss=0.46 " + "l1=6.93e-05" + "l2=0.46 f=-0.542 shape=(1, 9000, 1)
logits [[ 0.41682473  0.42875022  0.42881954 -3.4431    ]]
Iteration 600 of 1000: loss=0.422 " + "l1=0" + "l2=0.422 f=-0.524 shape=(1, 9000, 1)
logits [[ 0.40083182  0.43034488  0.41326597 -3.3410962 ]]
Iteration 700 of 1000: loss=0.385 " + "l1=0" + "l2=0.385 f=-0.508 shape=(1, 9000, 1)
logits [[ 0.39232346  0.41452876  0.3983001  -3.236766  ]]
Iteration 800 of 1000: loss=0.355 " + "l1=0" + "l2=0.355 f=-0.491 shape=(1, 9000, 1)
logits [[ 0.3852376   0.41259432  0.38505882 -3.1487863 ]]
Iteration 900 of 1000: loss=0.332 " + "l1=0.0116" + "l2=0.32 f=-0.479 shape=(1, 9000, 1)
logits [[ 0.39200333  0.38041824  0.38377008 -3.073862  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.57 " + "l1=3.57" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.075014  -2.4227552  2.0116124 -5.3359537]]
Iteration 100 of 1000: loss=0.936 " + "l1=0.00248" + "l2=0.934 f=-0.638 shape=(1, 9000, 1)
logits [[ 0.4795262   0.47501287  0.47820815 -3.9838252 ]]
Iteration 200 of 1000: loss=0.619 " + "l1=0" + "l2=0.619 f=-0.603 shape=(1, 9000, 1)
logits [[ 0.42700878  0.4474868   0.43747258 -3.72384   ]]
Iteration 300 of 1000: loss=0.501 " + "l1=0" + "l2=0.501 f=-0.565 shape=(1, 9000, 1)
logits [[ 0.43771902  0.4525059   0.44257867 -3.593088  ]]
Iteration 400 of 1000: loss=0.429 " + "l1=0" + "l2=0.429 f=-0.538 shape=(1, 9000, 1)
logits [[ 0.4292421   0.44572878  0.43951157 -3.4647188 ]]
Iteration 500 of 1000: loss=0.383 " + "l1=0" + "l2=0.383 f=-0.513 shape=(1, 9000, 1)
logits [[ 0.42506638  0.43410844  0.42679197 -3.3368924 ]]
Iteration 600 of 1000: loss=0.348 " + "l1=0" + "l2=0.348 f=-0.49 shape=(1, 9000, 1)
logits [[ 0.40749487  0.4362117   0.40966228 -3.212771  ]]
Iteration 700 of 1000: loss=0.32 " + "l1=0" + "l2=0.32 f=-0.472 shape=(1, 9000, 1)
logits [[ 0.3892819   0.42694023  0.40931296 -3.1142747 ]]
Iteration 800 of 1000: loss=0.299 " + "l1=0" + "l2=0.299 f=-0.462 shape=(1, 9000, 1)
logits [[ 0.38007164  0.40605405  0.3910561  -3.0239787 ]]
Iteration 900 of 1000: loss=0.286 " + "l1=0" + "l2=0.286 f=-0.458 shape=(1, 9000, 1)
logits [[ 0.33239183  0.40081477  0.37212    -2.9372709 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.11 " + "l1=2.11" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.075014  -2.4227552  2.0116124 -5.3359537]]
Iteration 100 of 1000: loss=0.995 " + "l1=0.322" + "l2=0.673 f=-0.595 shape=(1, 9000, 1)
logits [[ 1.0167665   0.02677537  0.69401044 -4.117077  ]]
Iteration 200 of 1000: loss=0.567 " + "l1=0.00691" + "l2=0.56 f=-0.603 shape=(1, 9000, 1)
logits [[ 0.44788018  0.4266276   0.4442679  -3.7296526 ]]
Iteration 300 of 1000: loss=0.44 " + "l1=0" + "l2=0.44 f=-0.556 shape=(1, 9000, 1)
logits [[ 0.42649022  0.4347996   0.4342608  -3.519847  ]]
Iteration 400 of 1000: loss=0.376 " + "l1=0" + "l2=0.376 f=-0.519 shape=(1, 9000, 1)
logits [[ 0.41969493  0.44824553  0.43987623 -3.3848221 ]]
Iteration 500 of 1000: loss=0.341 " + "l1=0.0106" + "l2=0.33 f=-0.492 shape=(1, 9000, 1)
logits [[ 0.4451555   0.41250223  0.432948   -3.2572186 ]]
Iteration 600 of 1000: loss=0.308 " + "l1=0.000303" + "l2=0.308 f=-0.473 shape=(1, 9000, 1)
logits [[ 0.4148362   0.41999316  0.42092595 -3.146103  ]]
Iteration 700 of 1000: loss=0.283 " + "l1=0" + "l2=0.283 f=-0.458 shape=(1, 9000, 1)
logits [[ 0.4010484   0.4142668   0.41104427 -3.059768  ]]
Iteration 800 of 1000: loss=0.259 " + "l1=0" + "l2=0.259 f=-0.451 shape=(1, 9000, 1)
logits [[ 0.38171807  0.39190242  0.3893528  -2.968141  ]]
Iteration 900 of 1000: loss=0.237 " + "l1=0" + "l2=0.237 f=-0.447 shape=(1, 9000, 1)
logits [[ 0.3564521   0.36880943  0.36123762 -2.8757932 ]]
--- 286.90711545944214 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0206 " + "l1=0.0206" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.075014  -2.4227552  2.0116124 -5.3359537]]
Iteration 100 of 1000: loss=0.0204 " + "l1=0.0202" + "l2=0.000175 f=-0.421 shape=(1, 9000, 1)
logits [[ 4.044972  -2.4246998  2.0241048 -5.3272686]]
Iteration 200 of 1000: loss=0.0203 " + "l1=0.0201" + "l2=0.000154 f=-0.421 shape=(1, 9000, 1)
logits [[ 4.0405583 -2.4245322  2.0259352 -5.326693 ]]
Iteration 300 of 1000: loss=0.0202 " + "l1=0.02" + "l2=0.000196 f=-0.422 shape=(1, 9000, 1)
logits [[ 4.033721  -2.4244106  2.028807  -5.3252244]]
Iteration 400 of 1000: loss=0.0202 " + "l1=0.0199" + "l2=0.000236 f=-0.422 shape=(1, 9000, 1)
logits [[ 4.026461  -2.4242811  2.0319817 -5.3233924]]
Iteration 500 of 1000: loss=0.0201 " + "l1=0.0198" + "l2=0.000282 f=-0.423 shape=(1, 9000, 1)
logits [[ 4.018607  -2.4237204  2.03517   -5.321198 ]]
Iteration 600 of 1000: loss=0.0201 " + "l1=0.0197" + "l2=0.000351 f=-0.423 shape=(1, 9000, 1)
logits [[ 4.0105805 -2.4227624  2.0383122 -5.318732 ]]
Iteration 700 of 1000: loss=0.0201 " + "l1=0.0196" + "l2=0.000447 f=-0.424 shape=(1, 9000, 1)
logits [[ 4.0024443 -2.4219785  2.0414922 -5.316156 ]]
Iteration 800 of 1000: loss=0.0201 " + "l1=0.0195" + "l2=0.000592 f=-0.424 shape=(1, 9000, 1)
logits [[ 3.9943767 -2.4212613  2.0448456 -5.313445 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.206 " + "l1=0.206" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.075014  -2.4227552  2.0116124 -5.3359537]]
Iteration 100 of 1000: loss=0.186 " + "l1=0.177" + "l2=0.00929 f=-0.435 shape=(1, 9000, 1)
logits [[ 3.849217  -2.4087975  2.0815322 -5.2619934]]
Iteration 200 of 1000: loss=0.176 " + "l1=0.163" + "l2=0.0123 f=-0.442 shape=(1, 9000, 1)
logits [[ 3.7364395 -2.3933625  2.10326   -5.2129574]]
Iteration 300 of 1000: loss=0.165 " + "l1=0.149" + "l2=0.0156 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.6086774 -2.3767333  2.1187413 -5.138166 ]]
Iteration 400 of 1000: loss=0.154 " + "l1=0.135" + "l2=0.0187 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.4876301 -2.3749936  2.1401005 -5.05304  ]]
Iteration 500 of 1000: loss=0.142 " + "l1=0.12" + "l2=0.022 f=-0.451 shape=(1, 9000, 1)
logits [[ 3.363649  -2.3832824  2.1636236 -4.9480653]]
Iteration 600 of 1000: loss=0.129 " + "l1=0.103" + "l2=0.0255 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.2266173 -2.3983083  2.1955905 -4.8100843]]
Iteration 700 of 1000: loss=0.113 " + "l1=0.0833" + "l2=0.0294 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.0577154 -2.4095001  2.224796  -4.6181774]]
Iteration 800 of 1000: loss=0.0856 " + "l1=0.0482" + "l2=0.0375 f=-0.421 shape=(1, 9000, 1)
logits [[ 2.7326798 -2.4102721  2.2511284 -4.256798 ]]
Iteration 900 of 1000: loss=0.045 " + "l1=3.42e-05" + "l2=0.0449 f=-0.408 shape=(1, 9000, 1)
logits [[ 2.2490132 -2.3751357  2.2486713 -3.7530427]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.113 " + "l1=0.113" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.075014  -2.4227552  2.0116124 -5.3359537]]
Iteration 100 of 1000: loss=0.107 " + "l1=0.104" + "l2=0.00295 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.9489918 -2.4190435  2.0553932 -5.299611 ]]
Iteration 200 of 1000: loss=0.104 " + "l1=0.1" + "l2=0.00384 f=-0.433 shape=(1, 9000, 1)
logits [[ 3.8932905 -2.4115028  2.0687969 -5.280827 ]]
Iteration 300 of 1000: loss=0.101 " + "l1=0.0964" + "l2=0.0048 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.8341334 -2.4061532  2.0823004 -5.2539997]]
Iteration 400 of 1000: loss=0.0981 " + "l1=0.0925" + "l2=0.00561 f=-0.438 shape=(1, 9000, 1)
logits [[ 3.7767754 -2.4017358  2.0947876 -5.2232695]]
Iteration 500 of 1000: loss=0.0949 " + "l1=0.0883" + "l2=0.00656 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.7117708 -2.3960557  2.1061077 -5.182816 ]]
Iteration 600 of 1000: loss=0.0916 " + "l1=0.0841" + "l2=0.00749 f=-0.441 shape=(1, 9000, 1)
logits [[ 3.6467822 -2.3898938  2.117972  -5.138696 ]]
Iteration 700 of 1000: loss=0.0882 " + "l1=0.0798" + "l2=0.0084 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.5783896 -2.3844078  2.1282194 -5.083966 ]]
Iteration 800 of 1000: loss=0.0846 " + "l1=0.0755" + "l2=0.00917 f=-0.439 shape=(1, 9000, 1)
logits [[ 3.5101795 -2.3815484  2.1379728 -5.0225077]]
Iteration 900 of 1000: loss=0.0809 " + "l1=0.071" + "l2=0.00989 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.437274  -2.3779895  2.1468735 -4.951364 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.16 " + "l1=0.16" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.075014  -2.4227552  2.0116124 -5.3359537]]
Iteration 100 of 1000: loss=0.148 " + "l1=0.142" + "l2=0.00565 f=-0.432 shape=(1, 9000, 1)
logits [[ 3.8995688 -2.4145076  2.069265  -5.2825537]]
Iteration 200 of 1000: loss=0.141 " + "l1=0.134" + "l2=0.00755 f=-0.437 shape=(1, 9000, 1)
logits [[ 3.814698  -2.4027646  2.087426  -5.248327 ]]
Iteration 300 of 1000: loss=0.135 " + "l1=0.126" + "l2=0.00945 f=-0.442 shape=(1, 9000, 1)
logits [[ 3.7259262 -2.3939857  2.10359   -5.2027206]]
Iteration 400 of 1000: loss=0.129 " + "l1=0.117" + "l2=0.0113 f=-0.445 shape=(1, 9000, 1)
logits [[ 3.6284158 -2.3811486  2.1153648 -5.141493 ]]
Iteration 500 of 1000: loss=0.122 " + "l1=0.109" + "l2=0.0132 f=-0.446 shape=(1, 9000, 1)
logits [[ 3.5340552 -2.3776448  2.1318827 -5.072364 ]]
Iteration 600 of 1000: loss=0.115 " + "l1=0.1" + "l2=0.0149 f=-0.446 shape=(1, 9000, 1)
logits [[ 3.4390163 -2.3798497  2.1476696 -4.9917336]]
Iteration 700 of 1000: loss=0.107 " + "l1=0.0906" + "l2=0.0169 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.333831  -2.3808951  2.1652133 -4.8917723]]
Iteration 800 of 1000: loss=0.0985 " + "l1=0.0795" + "l2=0.0189 f=-0.438 shape=(1, 9000, 1)
logits [[ 3.2155776 -2.391812   2.189454  -4.7636275]]
Iteration 900 of 1000: loss=0.088 " + "l1=0.0669" + "l2=0.0211 f=-0.428 shape=(1, 9000, 1)
logits [[ 3.0694551 -2.3935547  2.2068527 -4.5949574]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.183 " + "l1=0.183" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.075014  -2.4227552  2.0116124 -5.3359537]]
Iteration 100 of 1000: loss=0.167 " + "l1=0.16" + "l2=0.00734 f=-0.434 shape=(1, 9000, 1)
logits [[ 3.8742223 -2.4117396  2.0752406 -5.2723317]]
Iteration 200 of 1000: loss=0.159 " + "l1=0.149" + "l2=0.00988 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.7745376 -2.399103   2.0962558 -5.229857 ]]
Iteration 300 of 1000: loss=0.15 " + "l1=0.138" + "l2=0.0124 f=-0.444 shape=(1, 9000, 1)
logits [[ 3.666012  -2.3856416  2.1121318 -5.1701126]]
Iteration 400 of 1000: loss=0.142 " + "l1=0.127" + "l2=0.015 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.5548933 -2.3770585  2.1287048 -5.095928 ]]
Iteration 500 of 1000: loss=0.133 " + "l1=0.116" + "l2=0.0173 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.4513662 -2.3817647  2.1491942 -5.0148726]]
Iteration 600 of 1000: loss=0.123 " + "l1=0.103" + "l2=0.0198 f=-0.448 shape=(1, 9000, 1)
logits [[ 3.3325295 -2.3854423  2.1680021 -4.9063954]]
Iteration 700 of 1000: loss=0.112 " + "l1=0.0891" + "l2=0.0227 f=-0.442 shape=(1, 9000, 1)
logits [[ 3.2047684 -2.4017668  2.2003086 -4.769697 ]]
Iteration 800 of 1000: loss=0.0984 " + "l1=0.0725" + "l2=0.0258 f=-0.431 shape=(1, 9000, 1)
logits [[ 3.0370264 -2.403591   2.2196207 -4.57804  ]]
Iteration 900 of 1000: loss=0.075 " + "l1=0.0424" + "l2=0.0325 f=-0.417 shape=(1, 9000, 1)
logits [[ 2.720098  -2.3968477  2.2418134 -4.2315207]]
--- 276.7046060562134 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0941 " + "l1=0.0941" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.075014  -2.4227552  2.0116124 -5.3359537]]
Iteration 100 of 1000: loss=0.0932 " + "l1=0.0928" + "l2=0.000416 f=-0.416 shape=(1, 9000, 1)
logits [[ 4.0099072 -2.3867166  1.9796345 -5.2674494]]
Iteration 200 of 1000: loss=0.0929 " + "l1=0.0924" + "l2=0.000489 f=-0.416 shape=(1, 9000, 1)
logits [[ 3.9907665 -2.3758767  1.9685161 -5.247415 ]]
Iteration 300 of 1000: loss=0.0926 " + "l1=0.0919" + "l2=0.000643 f=-0.416 shape=(1, 9000, 1)
logits [[ 3.96864   -2.3640842  1.9566708 -5.2240496]]
Iteration 400 of 1000: loss=0.0923 " + "l1=0.0915" + "l2=0.000819 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.946613  -2.3531442  1.9461604 -5.2007146]]
Iteration 500 of 1000: loss=0.0921 " + "l1=0.091" + "l2=0.00104 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.924253  -2.3426394  1.9364321 -5.1777396]]
Iteration 600 of 1000: loss=0.0918 " + "l1=0.0906" + "l2=0.00124 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.9008858 -2.332321   1.9273045 -5.154309 ]]
Iteration 700 of 1000: loss=0.0916 " + "l1=0.0901" + "l2=0.00147 f=-0.414 shape=(1, 9000, 1)
logits [[ 3.8781173 -2.3224854  1.9185733 -5.1315665]]
Iteration 800 of 1000: loss=0.0913 " + "l1=0.0897" + "l2=0.00162 f=-0.414 shape=(1, 9000, 1)
logits [[ 3.8559287 -2.313166   1.9104992 -5.1092887]]
Iteration 900 of 1000: loss=0.0911 " + "l1=0.0892" + "l2=0.00189 f=-0.414 shape=(1, 9000, 1)
logits [[ 3.8328571 -2.3036532  1.9023491 -5.0860615]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.941 " + "l1=0.941" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.075014  -2.4227552  2.0116124 -5.3359537]]
Iteration 100 of 1000: loss=0.856 " + "l1=0.815" + "l2=0.0409 f=-0.411 shape=(1, 9000, 1)
logits [[ 3.4269814 -2.0585358  1.7083793 -4.7219853]]
Iteration 200 of 1000: loss=0.791 " + "l1=0.726" + "l2=0.065 f=-0.404 shape=(1, 9000, 1)
logits [[ 2.9853997 -1.8345213  1.5034199 -4.2714596]]
Iteration 300 of 1000: loss=0.727 " + "l1=0.638" + "l2=0.0889 f=-0.392 shape=(1, 9000, 1)
logits [[ 2.5588539 -1.6435058  1.3338579 -3.8175786]]
Iteration 400 of 1000: loss=0.645 " + "l1=0.512" + "l2=0.132 f=-0.371 shape=(1, 9000, 1)
logits [[ 1.9505075 -1.403703   1.1396198 -3.172345 ]]
Iteration 500 of 1000: loss=0.542 " + "l1=0.376" + "l2=0.165 f=-0.355 shape=(1, 9000, 1)
logits [[ 1.295116   -1.1923795   0.94566244 -2.4671423 ]]
Iteration 600 of 1000: loss=0.418 " + "l1=0.251" + "l2=0.167 f=-0.343 shape=(1, 9000, 1)
logits [[ 0.76790446 -1.1650401   0.76716805 -1.7431406 ]]
Iteration 700 of 1000: loss=0.326 " + "l1=0.168" + "l2=0.158 f=-0.331 shape=(1, 9000, 1)
logits [[ 0.52902883 -1.2532344   0.53908604 -1.1371503 ]]
Iteration 800 of 1000: loss=0.239 " + "l1=0.0876" + "l2=0.152 f=-0.31 shape=(1, 9000, 1)
logits [[ 0.23988184 -1.2522128   0.32509443 -0.5508768 ]]
Iteration 900 of 1000: loss=0.152 " + "l1=0.00105" + "l2=0.151 f=-0.275 shape=(1, 9000, 1)
logits [[-0.1224144  -1.2055925   0.1197001   0.10924505]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.518 " + "l1=0.518" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.075014  -2.4227552  2.0116124 -5.3359537]]
Iteration 100 of 1000: loss=0.493 " + "l1=0.482" + "l2=0.011 f=-0.413 shape=(1, 9000, 1)
logits [[ 3.7503252 -2.2391844  1.8570824 -5.019418 ]]
Iteration 200 of 1000: loss=0.477 " + "l1=0.46" + "l2=0.0173 f=-0.411 shape=(1, 9000, 1)
logits [[ 3.5495026 -2.1310492  1.7540125 -4.817657 ]]
Iteration 300 of 1000: loss=0.461 " + "l1=0.436" + "l2=0.0248 f=-0.411 shape=(1, 9000, 1)
logits [[ 3.3274593 -2.0250683  1.6493942 -4.594416 ]]
Iteration 400 of 1000: loss=0.444 " + "l1=0.411" + "l2=0.0326 f=-0.408 shape=(1, 9000, 1)
logits [[ 3.1101363 -1.9252561  1.5504314 -4.3662887]]
Iteration 500 of 1000: loss=0.427 " + "l1=0.387" + "l2=0.0396 f=-0.404 shape=(1, 9000, 1)
logits [[ 2.9018524 -1.8443274  1.4702669 -4.1435595]]
Iteration 600 of 1000: loss=0.409 " + "l1=0.363" + "l2=0.0462 f=-0.399 shape=(1, 9000, 1)
logits [[ 2.6876824 -1.7690889  1.3955727 -3.9089305]]
Iteration 700 of 1000: loss=0.387 " + "l1=0.334" + "l2=0.0532 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.4481397 -1.6832204  1.3123156 -3.6282284]]
Iteration 800 of 1000: loss=0.357 " + "l1=0.293" + "l2=0.0639 f=-0.371 shape=(1, 9000, 1)
logits [[ 2.1084685 -1.5813785  1.2095399 -3.2188632]]
Iteration 900 of 1000: loss=0.315 " + "l1=0.241" + "l2=0.0737 f=-0.368 shape=(1, 9000, 1)
logits [[ 1.6463332 -1.4795583  1.0969661 -2.7353654]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.729 " + "l1=0.729" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.075014  -2.4227552  2.0116124 -5.3359537]]
Iteration 100 of 1000: loss=0.68 " + "l1=0.657" + "l2=0.0232 f=-0.412 shape=(1, 9000, 1)
logits [[ 3.5957272 -2.1509182  1.7833456 -4.876812 ]]
Iteration 200 of 1000: loss=0.643 " + "l1=0.605" + "l2=0.0382 f=-0.411 shape=(1, 9000, 1)
logits [[ 3.2625859 -1.9818217  1.6208066 -4.5468917]]
Iteration 300 of 1000: loss=0.607 " + "l1=0.554" + "l2=0.0527 f=-0.404 shape=(1, 9000, 1)
logits [[ 2.943243  -1.8289386  1.476255  -4.207456 ]]
Iteration 400 of 1000: loss=0.57 " + "l1=0.502" + "l2=0.0682 f=-0.396 shape=(1, 9000, 1)
logits [[ 2.6195023 -1.6992761  1.3548964 -3.8606226]]
Iteration 500 of 1000: loss=0.527 " + "l1=0.44" + "l2=0.0875 f=-0.382 shape=(1, 9000, 1)
logits [[ 2.2422595 -1.566711   1.2296005 -3.4329295]]
Iteration 600 of 1000: loss=0.466 " + "l1=0.355" + "l2=0.11 f=-0.359 shape=(1, 9000, 1)
logits [[ 1.7336236 -1.406658   1.0878525 -2.8526745]]
Iteration 700 of 1000: loss=0.386 " + "l1=0.252" + "l2=0.134 f=-0.358 shape=(1, 9000, 1)
logits [[ 1.0809085 -1.3138603  0.9742016 -2.172809 ]]
Iteration 800 of 1000: loss=0.309 " + "l1=0.188" + "l2=0.121 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.7874686 -1.3400662  0.7942541 -1.628054 ]]
Iteration 900 of 1000: loss=0.245 " + "l1=0.135" + "l2=0.109 f=-0.343 shape=(1, 9000, 1)
logits [[ 0.58511496 -1.3899608   0.58894825 -1.1574141 ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.835 " + "l1=0.835" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.075014  -2.4227552  2.0116124 -5.3359537]]
Iteration 100 of 1000: loss=0.769 " + "l1=0.738" + "l2=0.031 f=-0.412 shape=(1, 9000, 1)
logits [[ 3.5146842 -2.1055286  1.7468323 -4.8029532]]
Iteration 200 of 1000: loss=0.719 " + "l1=0.668" + "l2=0.0513 f=-0.408 shape=(1, 9000, 1)
logits [[ 3.1191185 -1.9050138  1.5604862 -4.407011 ]]
Iteration 300 of 1000: loss=0.67 " + "l1=0.6" + "l2=0.0699 f=-0.399 shape=(1, 9000, 1)
logits [[ 2.7489264 -1.7388816  1.4063078 -4.01124  ]]
Iteration 400 of 1000: loss=0.617 " + "l1=0.523" + "l2=0.0938 f=-0.386 shape=(1, 9000, 1)
logits [[ 2.3339665 -1.5798893  1.2642137 -3.5623713]]
Iteration 500 of 1000: loss=0.543 " + "l1=0.417" + "l2=0.126 f=-0.364 shape=(1, 9000, 1)
logits [[ 1.7630589 -1.3721722  1.0888709 -2.9345512]]
Iteration 600 of 1000: loss=0.448 " + "l1=0.292" + "l2=0.157 f=-0.361 shape=(1, 9000, 1)
logits [[ 1.0592533 -1.1886269  0.9144607 -2.2294405]]
Iteration 700 of 1000: loss=0.354 " + "l1=0.211" + "l2=0.142 f=-0.346 shape=(1, 9000, 1)
logits [[ 0.7416296  -1.2325977   0.74403715 -1.6376315 ]]
Iteration 800 of 1000: loss=0.278 " + "l1=0.144" + "l2=0.133 f=-0.341 shape=(1, 9000, 1)
logits [[ 0.5034167  -1.3008142   0.52824587 -1.0962272 ]]
Iteration 900 of 1000: loss=0.204 " + "l1=0.077" + "l2=0.127 f=-0.319 shape=(1, 9000, 1)
logits [[ 0.19507918 -1.2672505   0.33163908 -0.53586394]]
--- 287.0326681137085 seconds ---
Adv result:3
Loading record A06860
(1, 15690)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.072 " + "l1=0.072" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.5179493 -3.6776137  3.137019  -4.935086 ]]
Iteration 100 of 1000: loss=0.0715 " + "l1=0.0712" + "l2=0.000255 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.4678853 -3.6568525  3.118846  -4.8806562]]
Iteration 200 of 1000: loss=0.0713 " + "l1=0.0711" + "l2=0.000251 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.4567378 -3.6527348  3.114546  -4.8686705]]
Iteration 300 of 1000: loss=0.0712 " + "l1=0.0709" + "l2=0.000302 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.4429722 -3.6484435  3.1096478 -4.8541994]]
Iteration 400 of 1000: loss=0.0711 " + "l1=0.0707" + "l2=0.000394 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.42898   -3.644467   3.1047213 -4.839593 ]]
Iteration 500 of 1000: loss=0.071 " + "l1=0.0706" + "l2=0.000478 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.4146755 -3.640514   3.099554  -4.8245196]]
Iteration 600 of 1000: loss=0.0709 " + "l1=0.0704" + "l2=0.000586 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.399561  -3.6360447  3.0938597 -4.808221 ]]
Iteration 700 of 1000: loss=0.0709 " + "l1=0.0702" + "l2=0.000683 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.3852699 -3.6317914  3.0884051 -4.7927737]]
Iteration 800 of 1000: loss=0.0708 " + "l1=0.07" + "l2=0.00084 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.3712413 -3.627696   3.0831292 -4.7775517]]
Iteration 900 of 1000: loss=0.0707 " + "l1=0.0698" + "l2=0.000884 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.3580494 -3.6238987  3.0780902 -4.7633314]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.72 " + "l1=0.72" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.5179493 -3.6776137  3.137019  -4.935086 ]]
Iteration 100 of 1000: loss=0.684 " + "l1=0.667" + "l2=0.0167 f=-0.476 shape=(1, 9000, 1)
logits [[ 3.1477008 -3.5269635  2.9974346 -4.523464 ]]
Iteration 200 of 1000: loss=0.665 " + "l1=0.641" + "l2=0.0246 f=-0.471 shape=(1, 9000, 1)
logits [[ 2.9514208 -3.454035   2.9184842 -4.2980943]]
Iteration 300 of 1000: loss=0.65 " + "l1=0.624" + "l2=0.0259 f=-0.464 shape=(1, 9000, 1)
logits [[ 2.8540876 -3.3872168  2.8508964 -4.175721 ]]
Iteration 400 of 1000: loss=0.639 " + "l1=0.612" + "l2=0.0269 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.789444  -3.330227   2.7917242 -4.095892 ]]
Iteration 500 of 1000: loss=0.629 " + "l1=0.601" + "l2=0.0283 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.7353632 -3.2752473  2.7345595 -4.026393 ]]
Iteration 600 of 1000: loss=0.621 " + "l1=0.591" + "l2=0.0301 f=-0.456 shape=(1, 9000, 1)
logits [[ 2.6783814 -3.226742   2.6812534 -3.9562252]]
Iteration 700 of 1000: loss=0.613 " + "l1=0.58" + "l2=0.0329 f=-0.454 shape=(1, 9000, 1)
logits [[ 2.626226  -3.1730247  2.62669   -3.8939483]]
Iteration 800 of 1000: loss=0.605 " + "l1=0.569" + "l2=0.0362 f=-0.449 shape=(1, 9000, 1)
logits [[ 2.5722046 -3.1150599  2.5728528 -3.8277395]]
Iteration 900 of 1000: loss=0.597 " + "l1=0.558" + "l2=0.0396 f=-0.445 shape=(1, 9000, 1)
logits [[ 2.51644   -3.0581732  2.5185027 -3.7575796]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.2 " + "l1=7.2" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.5179493 -3.6776137  3.137019  -4.935086 ]]
Iteration 100 of 1000: loss=4.91 " + "l1=3.77" + "l2=1.14 f=-0.272 shape=(1, 9000, 1)
logits [[ 1.6876595 -2.0087454  1.7574719 -2.5240386]]
Iteration 200 of 1000: loss=3.18 " + "l1=1.89" + "l2=1.3 f=-0.256 shape=(1, 9000, 1)
logits [[ 0.88134086 -0.97762764  0.90874434 -1.8356075 ]]
Iteration 300 of 1000: loss=2.5 " + "l1=1.29" + "l2=1.2 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.33888862 -0.71632475  0.57524115 -1.4607834 ]]
Iteration 400 of 1000: loss=1.94 " + "l1=0.664" + "l2=1.28 f=-0.318 shape=(1, 9000, 1)
logits [[-0.21196854 -0.40259045  0.26179174 -0.9181643 ]]
Iteration 500 of 1000: loss=1.34 " + "l1=0.0158" + "l2=1.32 f=-0.334 shape=(1, 9000, 1)
logits [[-0.7753102  -0.10790536 -0.09212402 -0.36155212]]
Iteration 600 of 1000: loss=1.11 " + "l1=0.00833" + "l2=1.1 f=-0.332 shape=(1, 9000, 1)
logits [[-0.80043495 -0.09474035 -0.08641271 -0.34605935]]
Iteration 700 of 1000: loss=1.01 " + "l1=0.00199" + "l2=1.01 f=-0.334 shape=(1, 9000, 1)
logits [[-0.8123394  -0.09220014 -0.09020884 -0.3405584 ]]
Iteration 800 of 1000: loss=0.959 " + "l1=0.00419" + "l2=0.955 f=-0.336 shape=(1, 9000, 1)
logits [[-0.80681807 -0.10172542 -0.09754037 -0.3363971 ]]
Iteration 900 of 1000: loss=0.916 " + "l1=0" + "l2=0.916 f=-0.339 shape=(1, 9000, 1)
logits [[-0.8098291  -0.10022411 -0.10152283 -0.34300125]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.96 " + "l1=3.96" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.5179493 -3.6776137  3.137019  -4.935086 ]]
Iteration 100 of 1000: loss=3.17 " + "l1=2.83" + "l2=0.342 f=-0.369 shape=(1, 9000, 1)
logits [[ 2.379307  -2.7597191  2.3838181 -3.4813848]]
Iteration 200 of 1000: loss=2.69 " + "l1=2.06" + "l2=0.626 f=-0.297 shape=(1, 9000, 1)
logits [[ 1.7629555 -1.9824694  1.7715195 -2.7390618]]
Iteration 300 of 1000: loss=2.03 " + "l1=1.3" + "l2=0.734 f=-0.294 shape=(1, 9000, 1)
logits [[ 1.1281117 -1.2226065  1.1381395 -2.2179646]]
Iteration 400 of 1000: loss=1.78 " + "l1=1.12" + "l2=0.665 f=-0.329 shape=(1, 9000, 1)
logits [[ 0.97041625 -1.050648    0.98309386 -2.2187638 ]]
Iteration 500 of 1000: loss=1.58 " + "l1=0.954" + "l2=0.63 f=-0.33 shape=(1, 9000, 1)
logits [[ 0.74540126 -0.8914334   0.8429996  -2.0187178 ]]
Iteration 600 of 1000: loss=1.39 " + "l1=0.771" + "l2=0.624 f=-0.33 shape=(1, 9000, 1)
logits [[ 0.4624246  -0.7047046   0.69710433 -1.7762451 ]]
Iteration 700 of 1000: loss=1.24 " + "l1=0.544" + "l2=0.693 f=-0.327 shape=(1, 9000, 1)
logits [[ 0.13414538 -0.50176305  0.48750448 -1.426383  ]]
Iteration 800 of 1000: loss=1.11 " + "l1=0.361" + "l2=0.744 f=-0.318 shape=(1, 9000, 1)
logits [[-0.16094425 -0.37198505  0.28452694 -1.0221041 ]]
Iteration 900 of 1000: loss=0.989 " + "l1=0.203" + "l2=0.786 f=-0.306 shape=(1, 9000, 1)
logits [[-0.4273423  -0.2599189   0.10917784 -0.6457239 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.58 " + "l1=5.58" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.5179493 -3.6776137  3.137019  -4.935086 ]]
Iteration 100 of 1000: loss=4.15 " + "l1=3.53" + "l2=0.621 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.1179535 -2.4356265  2.1201797 -3.0912323]]
Iteration 200 of 1000: loss=2.85 " + "l1=1.78" + "l2=1.07 f=-0.256 shape=(1, 9000, 1)
logits [[ 1.1011286 -1.1797868  1.1174968 -2.061215 ]]
Iteration 300 of 1000: loss=2.31 " + "l1=1.44" + "l2=0.87 f=-0.311 shape=(1, 9000, 1)
logits [[ 0.9037444  -0.94204456  0.9135074  -2.1180613 ]]
Iteration 400 of 1000: loss=2 " + "l1=1.15" + "l2=0.856 f=-0.337 shape=(1, 9000, 1)
logits [[ 0.5259787 -0.7392299  0.7386526 -1.8738521]]
Iteration 500 of 1000: loss=1.64 " + "l1=0.74" + "l2=0.903 f=-0.335 shape=(1, 9000, 1)
logits [[ 0.02536353 -0.49607962  0.45833787 -1.3289465 ]]
Iteration 600 of 1000: loss=1.27 " + "l1=0.276" + "l2=0.994 f=-0.32 shape=(1, 9000, 1)
logits [[-0.45047006 -0.24271663  0.1133767  -0.6989084 ]]
Iteration 700 of 1000: loss=1.02 " + "l1=0.0121" + "l2=1.01 f=-0.329 shape=(1, 9000, 1)
logits [[-0.78071433 -0.09825004 -0.08261538 -0.3562246 ]]
Iteration 800 of 1000: loss=0.935 " + "l1=0.00677" + "l2=0.928 f=-0.334 shape=(1, 9000, 1)
logits [[-0.7928921  -0.09461707 -0.08587985 -0.36281165]]
Iteration 900 of 1000: loss=0.887 " + "l1=0.0112" + "l2=0.875 f=-0.333 shape=(1, 9000, 1)
logits [[-0.79821014 -0.11097396 -0.09653286 -0.32437342]]
--- 287.2953197956085 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00381 " + "l1=0.00381" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.5179493 -3.6776137  3.137019  -4.935086 ]]
Iteration 100 of 1000: loss=0.0036 " + "l1=0.00344" + "l2=0.000164 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.4795587 -3.6786897  3.1355405 -4.8977284]]
Iteration 200 of 1000: loss=0.00355 " + "l1=0.0034" + "l2=0.000149 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.4745667 -3.6784666  3.1349046 -4.8933125]]
Iteration 300 of 1000: loss=0.00352 " + "l1=0.00333" + "l2=0.000188 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.4666934 -3.6778767  3.1339264 -4.885772 ]]
Iteration 400 of 1000: loss=0.00348 " + "l1=0.00325" + "l2=0.000222 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.458106  -3.677067   3.1327832 -4.877426 ]]
Iteration 500 of 1000: loss=0.00344 " + "l1=0.00317" + "l2=0.000263 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.4489582 -3.6762428  3.1315029 -4.86839  ]]
Iteration 600 of 1000: loss=0.00348 " + "l1=0.0031" + "l2=0.000384 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.4402213 -3.6755998  3.130304  -4.8595915]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0381 " + "l1=0.0381" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.5179493 -3.6776137  3.137019  -4.935086 ]]
Iteration 100 of 1000: loss=0.0212 " + "l1=0.0135" + "l2=0.00776 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.2634654 -3.7024386  3.1288953 -4.693452 ]]
Iteration 200 of 1000: loss=0.0143 " + "l1=0.00361" + "l2=0.0107 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.1552508 -3.7040534  3.1191795 -4.5879135]]
Iteration 300 of 1000: loss=0.00952 " + "l1=0.000277" + "l2=0.00924 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.1113303 -3.696777   3.1085618 -4.543616 ]]
Iteration 400 of 1000: loss=0.0073 " + "l1=0" + "l2=0.0073 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.0996554 -3.6878617  3.1017795 -4.529677 ]]
Iteration 500 of 1000: loss=0.00602 " + "l1=0" + "l2=0.00602 f=-0.503 shape=(1, 9000, 1)
logits [[ 3.096338 -3.682146  3.098173 -4.523303]]
Iteration 600 of 1000: loss=0.0054 " + "l1=0.000208" + "l2=0.00519 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.0973198 -3.677718   3.0952363 -4.5208926]]
Iteration 700 of 1000: loss=0.00476 " + "l1=0" + "l2=0.00476 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.0923789 -3.675123   3.0934484 -4.5134935]]
Iteration 800 of 1000: loss=0.00453 " + "l1=0" + "l2=0.00453 f=-0.5 shape=(1, 9000, 1)
logits [[ 3.0894616 -3.672805   3.0918338 -4.5077534]]
Iteration 900 of 1000: loss=0.00416 " + "l1=2.94e-05" + "l2=0.00413 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.0909872 -3.670628   3.090693  -4.50696  ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.021 " + "l1=0.021" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.5179493 -3.6776137  3.137019  -4.935086 ]]
Iteration 100 of 1000: loss=0.0156 " + "l1=0.0129" + "l2=0.00266 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.3681643 -3.6899693  3.1334553 -4.792661 ]]
Iteration 200 of 1000: loss=0.0134 " + "l1=0.00983" + "l2=0.00357 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.3069255 -3.6947558  3.1281133 -4.7356763]]
Iteration 300 of 1000: loss=0.0116 " + "l1=0.00755" + "l2=0.00405 f=-0.5 shape=(1, 9000, 1)
logits [[ 3.2596664 -3.6930022  3.1224236 -4.6890144]]
Iteration 400 of 1000: loss=0.00995 " + "l1=0.00535" + "l2=0.0046 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.2124078 -3.6903417  3.115202  -4.6412387]]
Iteration 500 of 1000: loss=0.00834 " + "l1=0.0031" + "l2=0.00524 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.1641455 -3.687718   3.1078198 -4.5924277]]
Iteration 600 of 1000: loss=0.00683 " + "l1=0.000903" + "l2=0.00593 f=-0.503 shape=(1, 9000, 1)
logits [[ 3.116671  -3.6844976  3.1002588 -4.542635 ]]
Iteration 700 of 1000: loss=0.00552 " + "l1=4.93e-05" + "l2=0.00547 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.096604  -3.6799922  3.0957084 -4.5190763]]
Iteration 800 of 1000: loss=0.00508 " + "l1=0" + "l2=0.00508 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.0929115 -3.6762912  3.0930421 -4.5120773]]
Iteration 900 of 1000: loss=0.0046 " + "l1=4.32e-05" + "l2=0.00456 f=-0.5 shape=(1, 9000, 1)
logits [[ 3.092008 -3.673488  3.091223 -4.508366]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0124 " + "l1=0.0124" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.5179493 -3.6776137  3.137019  -4.935086 ]]
Iteration 100 of 1000: loss=0.0104 " + "l1=0.00938" + "l2=0.00102 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.4232786 -3.6835818  3.1347115 -4.8443804]]
Iteration 200 of 1000: loss=0.0097 " + "l1=0.00846" + "l2=0.00124 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.3928466 -3.6844678  3.1325133 -4.8162355]]
Iteration 300 of 1000: loss=0.00909 " + "l1=0.00753" + "l2=0.00155 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.3608809 -3.6850865  3.12912   -4.785547 ]]
Iteration 400 of 1000: loss=0.00845 " + "l1=0.00665" + "l2=0.00181 f=-0.496 shape=(1, 9000, 1)
logits [[ 3.3293552 -3.6853712  3.1248863 -4.754142 ]]
Iteration 500 of 1000: loss=0.00792 " + "l1=0.00584" + "l2=0.00208 f=-0.497 shape=(1, 9000, 1)
logits [[ 3.2997098 -3.6848629  3.1201055 -4.7244954]]
Iteration 600 of 1000: loss=0.00733 " + "l1=0.00506" + "l2=0.00227 f=-0.498 shape=(1, 9000, 1)
logits [[ 3.2714026 -3.6833909  3.1156693 -4.6959825]]
Iteration 700 of 1000: loss=0.00689 " + "l1=0.00434" + "l2=0.00256 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.2450824 -3.681735   3.1115725 -4.6690707]]
Iteration 800 of 1000: loss=0.00645 " + "l1=0.0036" + "l2=0.00285 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.2184112 -3.6804414  3.107704  -4.6415973]]
Iteration 900 of 1000: loss=0.0061 " + "l1=0.00297" + "l2=0.00313 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.1958122 -3.67796    3.1043742 -4.6171126]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0167 " + "l1=0.0167" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.5179493 -3.6776137  3.137019  -4.935086 ]]
Iteration 100 of 1000: loss=0.0132 " + "l1=0.0115" + "l2=0.00173 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.3959594 -3.6865356  3.1342242 -4.81885  ]]
Iteration 200 of 1000: loss=0.0119 " + "l1=0.00962" + "l2=0.00226 f=-0.496 shape=(1, 9000, 1)
logits [[ 3.3504386 -3.688892   3.1306376 -4.7766247]]
Iteration 300 of 1000: loss=0.0106 " + "l1=0.00785" + "l2=0.00279 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.3047879 -3.6913366  3.1254144 -4.7331376]]
Iteration 400 of 1000: loss=0.00955 " + "l1=0.00632" + "l2=0.00322 f=-0.5 shape=(1, 9000, 1)
logits [[ 3.2641163 -3.6902275  3.1195774 -4.6930013]]
Iteration 500 of 1000: loss=0.00857 " + "l1=0.00517" + "l2=0.0034 f=-0.5 shape=(1, 9000, 1)
logits [[ 3.2325912 -3.6862133  3.1144588 -4.659916 ]]
Iteration 600 of 1000: loss=0.00761 " + "l1=0.0039" + "l2=0.00371 f=-0.5 shape=(1, 9000, 1)
logits [[ 3.1980188 -3.6832075  3.1089199 -4.624231 ]]
Iteration 700 of 1000: loss=0.00676 " + "l1=0.0026" + "l2=0.00415 f=-0.5 shape=(1, 9000, 1)
logits [[ 3.1628249 -3.6806378  3.103315  -4.5871167]]
Iteration 800 of 1000: loss=0.00598 " + "l1=0.00131" + "l2=0.00467 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.1280856 -3.678797   3.0982149 -4.550351 ]]
Iteration 900 of 1000: loss=0.00522 " + "l1=0.000144" + "l2=0.00508 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.097107  -3.6769567  3.0938263 -4.5165105]]
--- 266.49632811546326 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0845 " + "l1=0.0845" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.5179493 -3.6776137  3.137019  -4.935086 ]]
Iteration 100 of 1000: loss=0.0832 " + "l1=0.0826" + "l2=0.000626 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.4336448 -3.6679242  3.1124375 -4.8278184]]
Iteration 200 of 1000: loss=0.0828 " + "l1=0.082" + "l2=0.000728 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.4083717 -3.665436   3.1043193 -4.796625 ]]
Iteration 300 of 1000: loss=0.0823 " + "l1=0.0814" + "l2=0.000893 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.3798447 -3.6625786  3.0947845 -4.7610803]]
Iteration 400 of 1000: loss=0.0818 " + "l1=0.0808" + "l2=0.00108 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.3509688 -3.658611   3.0843015 -4.724768 ]]
Iteration 500 of 1000: loss=0.0814 " + "l1=0.0801" + "l2=0.00132 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.323024  -3.6550665  3.0740955 -4.6897516]]
Iteration 600 of 1000: loss=0.0811 " + "l1=0.0795" + "l2=0.00157 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.2948093 -3.652235   3.0641189 -4.6550765]]
Iteration 700 of 1000: loss=0.0808 " + "l1=0.0789" + "l2=0.00186 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.2671607 -3.6488729  3.0545545 -4.6218915]]
Iteration 800 of 1000: loss=0.0804 " + "l1=0.0783" + "l2=0.00213 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.2401783 -3.644931   3.0453265 -4.589391 ]]
Iteration 900 of 1000: loss=0.0801 " + "l1=0.0777" + "l2=0.00236 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.2153215 -3.6412463  3.0363564 -4.5585713]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.845 " + "l1=0.845" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.5179493 -3.6776137  3.137019  -4.935086 ]]
Iteration 100 of 1000: loss=0.74 " + "l1=0.704" + "l2=0.0365 f=-0.472 shape=(1, 9000, 1)
logits [[ 2.911334  -3.5882115  2.9127183 -4.1254425]]
Iteration 200 of 1000: loss=0.705 " + "l1=0.66" + "l2=0.0455 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.6991014 -3.5276937  2.7888336 -3.8109844]]
Iteration 300 of 1000: loss=0.676 " + "l1=0.619" + "l2=0.0573 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.4850419 -3.4807255  2.677229  -3.50835  ]]
Iteration 400 of 1000: loss=0.65 " + "l1=0.583" + "l2=0.0664 f=-0.446 shape=(1, 9000, 1)
logits [[ 2.3170261 -3.4219847  2.577162  -3.2550204]]
Iteration 500 of 1000: loss=0.626 " + "l1=0.551" + "l2=0.0754 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.1687691 -3.3739352  2.4870687 -3.0206127]]
Iteration 600 of 1000: loss=0.605 " + "l1=0.523" + "l2=0.0821 f=-0.423 shape=(1, 9000, 1)
logits [[ 2.0457473 -3.3328724  2.41335   -2.819287 ]]
Iteration 700 of 1000: loss=0.587 " + "l1=0.495" + "l2=0.0911 f=-0.412 shape=(1, 9000, 1)
logits [[ 1.9188418 -3.2873528  2.3384125 -2.6162689]]
Iteration 800 of 1000: loss=0.568 " + "l1=0.467" + "l2=0.101 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.7886906 -3.2423768  2.261986  -2.4085279]]
Iteration 900 of 1000: loss=0.547 " + "l1=0.433" + "l2=0.114 f=-0.384 shape=(1, 9000, 1)
logits [[ 1.6292568 -3.1860857  2.1761162 -2.153995 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.45 " + "l1=8.45" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.5179493 -3.6776137  3.137019  -4.935086 ]]
Iteration 100 of 1000: loss=3.28 " + "l1=1.16" + "l2=2.13 f=-0.221 shape=(1, 9000, 1)
logits [[ 0.00846311 -2.4643257   1.3662305   0.20739546]]
Iteration 200 of 1000: loss=1.93 " + "l1=0.0323" + "l2=1.89 f=-0.153 shape=(1, 9000, 1)
logits [[-0.41212103 -1.9077266   0.870065    0.8377844 ]]
Iteration 300 of 1000: loss=1.51 " + "l1=0" + "l2=1.51 f=-0.142 shape=(1, 9000, 1)
logits [[-0.39353487 -1.7600429   0.7760487   0.8088427 ]]
Iteration 400 of 1000: loss=1.29 " + "l1=0.0109" + "l2=1.28 f=-0.149 shape=(1, 9000, 1)
logits [[-0.37900594 -1.7260315   0.7597388   0.7488367 ]]
Iteration 500 of 1000: loss=1.18 " + "l1=0" + "l2=1.18 f=-0.147 shape=(1, 9000, 1)
logits [[-0.40176898 -1.7160507   0.7428492   0.78725684]]
Iteration 600 of 1000: loss=1.09 " + "l1=0.00997" + "l2=1.08 f=-0.154 shape=(1, 9000, 1)
logits [[-0.38598612 -1.7662628   0.77382255  0.7638499 ]]
Iteration 700 of 1000: loss=1.03 " + "l1=0.0154" + "l2=1.02 f=-0.156 shape=(1, 9000, 1)
logits [[-0.3869171  -1.7904413   0.78384167  0.76845306]]
Iteration 800 of 1000: loss=0.975 " + "l1=0" + "l2=0.975 f=-0.16 shape=(1, 9000, 1)
logits [[-0.3999286  -1.807178    0.78327197  0.7834291 ]]
Iteration 900 of 1000: loss=0.938 " + "l1=0.0032" + "l2=0.935 f=-0.162 shape=(1, 9000, 1)
logits [[-0.40212873 -1.8259602   0.7914477   0.7882474 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.65 " + "l1=4.65" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.5179493 -3.6776137  3.137019  -4.935086 ]]
Iteration 100 of 1000: loss=2.63 " + "l1=1.63" + "l2=0.991 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.9133287 -2.9629972  1.9025633 -1.069727 ]]
Iteration 200 of 1000: loss=1.94 " + "l1=0.867" + "l2=1.07 f=-0.25 shape=(1, 9000, 1)
logits [[ 0.24273881 -2.6416037   1.4876988  -0.08879215]]
Iteration 300 of 1000: loss=1.52 " + "l1=0.339" + "l2=1.18 f=-0.213 shape=(1, 9000, 1)
logits [[-0.19196373 -2.3754077   1.1656433   0.5487275 ]]
Iteration 400 of 1000: loss=1.11 " + "l1=0" + "l2=1.11 f=-0.16 shape=(1, 9000, 1)
logits [[-0.40447542 -1.9323969   0.84026724  0.8585832 ]]
Iteration 500 of 1000: loss=0.932 " + "l1=0.00132" + "l2=0.931 f=-0.159 shape=(1, 9000, 1)
logits [[-0.39351937 -1.9158931   0.8378154   0.8354203 ]]
Iteration 600 of 1000: loss=0.859 " + "l1=0" + "l2=0.859 f=-0.158 shape=(1, 9000, 1)
logits [[-0.4108776 -1.918907   0.838806   0.8588506]]
Iteration 700 of 1000: loss=0.801 " + "l1=0.00327" + "l2=0.798 f=-0.157 shape=(1, 9000, 1)
logits [[-0.4087828  -1.9323447   0.85876065  0.8528161 ]]
Iteration 800 of 1000: loss=0.764 " + "l1=0" + "l2=0.764 f=-0.153 shape=(1, 9000, 1)
logits [[-0.42040035 -1.9252547   0.86044574  0.87328815]]
Iteration 900 of 1000: loss=0.728 " + "l1=0" + "l2=0.728 f=-0.15 shape=(1, 9000, 1)
logits [[-0.4263823  -1.9138014   0.8614835   0.87709117]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.75 " + "l1=2.75" + "l2=0 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.5179493 -3.6776137  3.137019  -4.935086 ]]
Iteration 100 of 1000: loss=1.97 " + "l1=1.64" + "l2=0.334 f=-0.401 shape=(1, 9000, 1)
logits [[ 1.9125477 -3.3066063  2.4167354 -2.627098 ]]
Iteration 200 of 1000: loss=1.62 " + "l1=1.12" + "l2=0.498 f=-0.341 shape=(1, 9000, 1)
logits [[ 1.1347742 -3.0711489  2.011493  -1.440731 ]]
Iteration 300 of 1000: loss=1.37 " + "l1=0.811" + "l2=0.556 f=-0.3 shape=(1, 9000, 1)
logits [[ 0.6824581 -2.9202044  1.7668734 -0.729364 ]]
Iteration 400 of 1000: loss=1.2 " + "l1=0.627" + "l2=0.568 f=-0.277 shape=(1, 9000, 1)
logits [[ 0.41467184 -2.7878997   1.5963035  -0.33249155]]
Iteration 500 of 1000: loss=1.03 " + "l1=0.429" + "l2=0.605 f=-0.244 shape=(1, 9000, 1)
logits [[ 0.14426278 -2.632263    1.4163533   0.0973954 ]]
Iteration 600 of 1000: loss=0.891 " + "l1=0.246" + "l2=0.645 f=-0.204 shape=(1, 9000, 1)
logits [[-0.09160332 -2.4817796   1.2562187   0.4996585 ]]
Iteration 700 of 1000: loss=0.721 " + "l1=0.00883" + "l2=0.712 f=-0.164 shape=(1, 9000, 1)
logits [[-0.32633832 -2.1309102   0.9142207   0.88704747]]
Iteration 800 of 1000: loss=0.629 " + "l1=0" + "l2=0.629 f=-0.155 shape=(1, 9000, 1)
logits [[-0.3097777 -1.9529938  0.82079    0.8221504]]
Iteration 900 of 1000: loss=0.59 " + "l1=0" + "l2=0.59 f=-0.148 shape=(1, 9000, 1)
logits [[-0.31811145 -1.8756391   0.79261684  0.80853164]]
--- 290.15783762931824 seconds ---
Adv result:3
Loading record A06868
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0369 " + "l1=0.0369" + "l2=0 f=-0.437 shape=(1, 9000, 1)
logits [[ 1.8394709 -1.8514322  1.3903978 -3.124928 ]]
Iteration 100 of 1000: loss=0.0364 " + "l1=0.0361" + "l2=0.000307 f=-0.432 shape=(1, 9000, 1)
logits [[ 1.7927039 -1.8198705  1.3708682 -3.070586 ]]
Iteration 200 of 1000: loss=0.0363 " + "l1=0.036" + "l2=0.000311 f=-0.431 shape=(1, 9000, 1)
logits [[ 1.7838964 -1.8147621  1.3681213 -3.0609112]]
Iteration 300 of 1000: loss=0.0362 " + "l1=0.0358" + "l2=0.000378 f=-0.43 shape=(1, 9000, 1)
logits [[ 1.7726041 -1.8082355  1.3646729 -3.0480018]]
Iteration 400 of 1000: loss=0.0361 " + "l1=0.0356" + "l2=0.000433 f=-0.429 shape=(1, 9000, 1)
logits [[ 1.760881  -1.8015643  1.3612858 -3.0347934]]
Iteration 500 of 1000: loss=0.036 " + "l1=0.0354" + "l2=0.000569 f=-0.427 shape=(1, 9000, 1)
logits [[ 1.7490638 -1.7947464  1.357973  -3.0217655]]
Iteration 600 of 1000: loss=0.0359 " + "l1=0.0353" + "l2=0.000626 f=-0.426 shape=(1, 9000, 1)
logits [[ 1.7374241 -1.7876971  1.3546456 -3.009237 ]]
Iteration 700 of 1000: loss=0.0359 " + "l1=0.0351" + "l2=0.000835 f=-0.425 shape=(1, 9000, 1)
logits [[ 1.7259954 -1.7805489  1.3513727 -2.9969926]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.369 " + "l1=0.369" + "l2=0 f=-0.437 shape=(1, 9000, 1)
logits [[ 1.8394709 -1.8514322  1.3903978 -3.124928 ]]
Iteration 100 of 1000: loss=0.326 " + "l1=0.305" + "l2=0.0212 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.4544659 -1.5951712  1.2422044 -2.7015517]]
Iteration 200 of 1000: loss=0.303 " + "l1=0.265" + "l2=0.0382 f=-0.379 shape=(1, 9000, 1)
logits [[ 1.2093357 -1.4402753  1.1581045 -2.4447362]]
Iteration 300 of 1000: loss=0.286 " + "l1=0.247" + "l2=0.0382 f=-0.372 shape=(1, 9000, 1)
logits [[ 1.1054696 -1.3666731  1.1064501 -2.3322766]]
Iteration 400 of 1000: loss=0.273 " + "l1=0.235" + "l2=0.0374 f=-0.368 shape=(1, 9000, 1)
logits [[ 1.0477368 -1.3071731  1.0467926 -2.2587833]]
Iteration 500 of 1000: loss=0.262 " + "l1=0.224" + "l2=0.0377 f=-0.364 shape=(1, 9000, 1)
logits [[ 0.99038506 -1.2482092   0.9910252  -2.190203  ]]
Iteration 600 of 1000: loss=0.252 " + "l1=0.214" + "l2=0.0379 f=-0.361 shape=(1, 9000, 1)
logits [[ 0.9417599 -1.1996198  0.9422877 -2.127155 ]]
Iteration 700 of 1000: loss=0.243 " + "l1=0.204" + "l2=0.0394 f=-0.356 shape=(1, 9000, 1)
logits [[ 0.8887418  -1.149464    0.88851917 -2.0534258 ]]
Iteration 800 of 1000: loss=0.235 " + "l1=0.194" + "l2=0.041 f=-0.351 shape=(1, 9000, 1)
logits [[ 0.8400794  -1.100604    0.84148026 -1.9859574 ]]
Iteration 900 of 1000: loss=0.228 " + "l1=0.186" + "l2=0.0423 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.79523355 -1.0584365   0.79806334 -1.9219873 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.69 " + "l1=3.69" + "l2=0 f=-0.437 shape=(1, 9000, 1)
logits [[ 1.8394709 -1.8514322  1.3903978 -3.124928 ]]
Iteration 100 of 1000: loss=1.55 " + "l1=0.868" + "l2=0.679 f=-0.329 shape=(1, 9000, 1)
logits [[ 0.10774107 -0.57018024  0.29737654 -1.1523476 ]]
Iteration 200 of 1000: loss=0.993 " + "l1=0.203" + "l2=0.79 f=-0.301 shape=(1, 9000, 1)
logits [[-0.24624819 -0.24394332 -0.04062393 -0.6724315 ]]
Iteration 300 of 1000: loss=0.708 " + "l1=0.016" + "l2=0.692 f=-0.292 shape=(1, 9000, 1)
logits [[-0.31587192 -0.15890598 -0.14291152 -0.55010253]]
Iteration 400 of 1000: loss=0.603 " + "l1=0" + "l2=0.603 f=-0.291 shape=(1, 9000, 1)
logits [[-0.3202134  -0.15585655 -0.15794761 -0.53093034]]
Iteration 500 of 1000: loss=0.532 " + "l1=0" + "l2=0.532 f=-0.295 shape=(1, 9000, 1)
logits [[-0.31504267 -0.16839086 -0.17141165 -0.5269978 ]]
Iteration 600 of 1000: loss=0.482 " + "l1=0" + "l2=0.482 f=-0.298 shape=(1, 9000, 1)
logits [[-0.30547184 -0.18248488 -0.1870043  -0.51768214]]
Iteration 700 of 1000: loss=0.445 " + "l1=0.00199" + "l2=0.443 f=-0.3 shape=(1, 9000, 1)
logits [[-0.2916701  -0.18902881 -0.18704362 -0.5321092 ]]
Iteration 800 of 1000: loss=0.416 " + "l1=0" + "l2=0.416 f=-0.303 shape=(1, 9000, 1)
logits [[-0.29387733 -0.18505307 -0.19268079 -0.5399065 ]]
Iteration 900 of 1000: loss=0.386 " + "l1=0" + "l2=0.386 f=-0.304 shape=(1, 9000, 1)
logits [[-0.29011527 -0.18417872 -0.19049068 -0.55106384]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.03 " + "l1=2.03" + "l2=0 f=-0.437 shape=(1, 9000, 1)
logits [[ 1.8394709 -1.8514322  1.3903978 -3.124928 ]]
Iteration 100 of 1000: loss=1.14 " + "l1=0.866" + "l2=0.276 f=-0.353 shape=(1, 9000, 1)
logits [[ 0.62513965 -0.92896074  0.64565825 -1.7527001 ]]
Iteration 200 of 1000: loss=0.931 " + "l1=0.633" + "l2=0.298 f=-0.323 shape=(1, 9000, 1)
logits [[ 0.4132344  -0.7220076   0.42937216 -1.4141755 ]]
Iteration 300 of 1000: loss=0.775 " + "l1=0.435" + "l2=0.34 f=-0.297 shape=(1, 9000, 1)
logits [[ 0.22038478 -0.5417821   0.24991725 -1.1175978 ]]
Iteration 400 of 1000: loss=0.676 " + "l1=0.34" + "l2=0.336 f=-0.273 shape=(1, 9000, 1)
logits [[ 0.15852621 -0.45515087  0.16315266 -0.9596428 ]]
Iteration 500 of 1000: loss=0.574 " + "l1=0.193" + "l2=0.381 f=-0.251 shape=(1, 9000, 1)
logits [[-0.03491531 -0.3121461   0.03964623 -0.69691145]]
Iteration 600 of 1000: loss=0.479 " + "l1=0.0509" + "l2=0.428 f=-0.247 shape=(1, 9000, 1)
logits [[-0.20612046 -0.18252358 -0.08989192 -0.50803524]]
Iteration 700 of 1000: loss=0.409 " + "l1=0.00115" + "l2=0.407 f=-0.247 shape=(1, 9000, 1)
logits [[-0.26977912 -0.13645007 -0.13435452 -0.44819775]]
Iteration 800 of 1000: loss=0.377 " + "l1=0.00243" + "l2=0.374 f=-0.252 shape=(1, 9000, 1)
logits [[-0.2624605  -0.15218583 -0.14777608 -0.44702935]]
Iteration 900 of 1000: loss=0.355 " + "l1=0.00547" + "l2=0.349 f=-0.257 shape=(1, 9000, 1)
logits [[-0.25796258 -0.16768907 -0.15775211 -0.44653592]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.2 " + "l1=1.2" + "l2=0 f=-0.437 shape=(1, 9000, 1)
logits [[ 1.8394709 -1.8514322  1.3903978 -3.124928 ]]
Iteration 100 of 1000: loss=0.806 " + "l1=0.676" + "l2=0.13 f=-0.367 shape=(1, 9000, 1)
logits [[ 0.9052359 -1.1704413  0.9090191 -2.1120784]]
Iteration 200 of 1000: loss=0.703 " + "l1=0.55" + "l2=0.153 f=-0.351 shape=(1, 9000, 1)
logits [[ 0.70489204 -0.988084    0.7051687  -1.8279614 ]]
Iteration 300 of 1000: loss=0.63 " + "l1=0.465" + "l2=0.166 f=-0.335 shape=(1, 9000, 1)
logits [[ 0.55336046 -0.8564501   0.5735005  -1.6100243 ]]
Iteration 400 of 1000: loss=0.567 " + "l1=0.392" + "l2=0.175 f=-0.322 shape=(1, 9000, 1)
logits [[ 0.44712114 -0.7493206   0.45698005 -1.4408127 ]]
Iteration 500 of 1000: loss=0.519 " + "l1=0.342" + "l2=0.177 f=-0.307 shape=(1, 9000, 1)
logits [[ 0.37439534 -0.6733576   0.37865415 -1.3096478 ]]
Iteration 600 of 1000: loss=0.483 " + "l1=0.304" + "l2=0.18 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.31283364 -0.61981833  0.31491122 -1.1590681 ]]
Iteration 700 of 1000: loss=0.449 " + "l1=0.258" + "l2=0.192 f=-0.269 shape=(1, 9000, 1)
logits [[ 0.23196676 -0.551008    0.24199544 -0.9989714 ]]
Iteration 800 of 1000: loss=0.425 " + "l1=0.23" + "l2=0.195 f=-0.263 shape=(1, 9000, 1)
logits [[ 0.18998003 -0.50889236  0.19751452 -0.92890966]]
Iteration 900 of 1000: loss=0.406 " + "l1=0.202" + "l2=0.204 f=-0.258 shape=(1, 9000, 1)
logits [[ 0.14247015 -0.4709454   0.15128784 -0.8540827 ]]
--- 272.708505153656 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00449 " + "l1=0.00449" + "l2=0 f=-0.437 shape=(1, 9000, 1)
logits [[ 1.8394709 -1.8514322  1.3903978 -3.124928 ]]
Iteration 100 of 1000: loss=0.0043 " + "l1=0.00414" + "l2=0.000157 f=-0.434 shape=(1, 9000, 1)
logits [[ 1.8077013 -1.8490918  1.3938568 -3.0899317]]
Iteration 200 of 1000: loss=0.00422 " + "l1=0.0041" + "l2=0.000124 f=-0.434 shape=(1, 9000, 1)
logits [[ 1.8043469 -1.8489958  1.3943318 -3.0861785]]
Iteration 300 of 1000: loss=0.00419 " + "l1=0.00403" + "l2=0.000159 f=-0.434 shape=(1, 9000, 1)
logits [[ 1.7984055 -1.8488243  1.3954512 -3.0792353]]
Iteration 400 of 1000: loss=0.00415 " + "l1=0.00395" + "l2=0.000205 f=-0.433 shape=(1, 9000, 1)
logits [[ 1.7916949 -1.8485825  1.3968226 -3.0715477]]
Iteration 500 of 1000: loss=0.00412 " + "l1=0.00386" + "l2=0.000255 f=-0.432 shape=(1, 9000, 1)
logits [[ 1.7847373 -1.8482473  1.3983333 -3.0635784]]
Iteration 600 of 1000: loss=0.00413 " + "l1=0.00378" + "l2=0.00035 f=-0.431 shape=(1, 9000, 1)
logits [[ 1.7779498 -1.8479071  1.399948  -3.0558696]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0449 " + "l1=0.0449" + "l2=0 f=-0.437 shape=(1, 9000, 1)
logits [[ 1.8394709 -1.8514322  1.3903978 -3.124928 ]]
Iteration 100 of 1000: loss=0.0296 " + "l1=0.0233" + "l2=0.00623 f=-0.422 shape=(1, 9000, 1)
logits [[ 1.6463058 -1.8367114  1.4130226 -2.9107401]]
Iteration 200 of 1000: loss=0.0217 " + "l1=0.0128" + "l2=0.00893 f=-0.415 shape=(1, 9000, 1)
logits [[ 1.551777  -1.8282889  1.4240706 -2.8085136]]
Iteration 300 of 1000: loss=0.014 " + "l1=0.00232" + "l2=0.0117 f=-0.408 shape=(1, 9000, 1)
logits [[ 1.4635545 -1.8217974  1.440345  -2.7150598]]
Iteration 400 of 1000: loss=0.00923 " + "l1=0" + "l2=0.00923 f=-0.406 shape=(1, 9000, 1)
logits [[ 1.4500424 -1.8285929  1.4503251 -2.6972768]]
Iteration 500 of 1000: loss=0.00723 " + "l1=0.00013" + "l2=0.0071 f=-0.406 shape=(1, 9000, 1)
logits [[ 1.4590474 -1.8364477  1.4577473 -2.7036214]]
Iteration 600 of 1000: loss=0.00618 " + "l1=0.000106" + "l2=0.00607 f=-0.406 shape=(1, 9000, 1)
logits [[ 1.4634889 -1.8403962  1.4624243 -2.7092144]]
Iteration 700 of 1000: loss=0.00528 " + "l1=0" + "l2=0.00528 f=-0.406 shape=(1, 9000, 1)
logits [[ 1.4642141 -1.8415191  1.4660376 -2.7121663]]
Iteration 800 of 1000: loss=0.00493 " + "l1=0" + "l2=0.00493 f=-0.406 shape=(1, 9000, 1)
logits [[ 1.4676241 -1.8415515  1.4679296 -2.7183588]]
Iteration 900 of 1000: loss=0.00457 " + "l1=0" + "l2=0.00457 f=-0.406 shape=(1, 9000, 1)
logits [[ 1.4696095 -1.8413758  1.4698045 -2.7230752]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0247 " + "l1=0.0247" + "l2=0 f=-0.437 shape=(1, 9000, 1)
logits [[ 1.8394709 -1.8514322  1.3903978 -3.124928 ]]
Iteration 100 of 1000: loss=0.0198 " + "l1=0.0178" + "l2=0.00199 f=-0.428 shape=(1, 9000, 1)
logits [[ 1.727631  -1.8429538  1.4034206 -3.000296 ]]
Iteration 200 of 1000: loss=0.0176 " + "l1=0.0149" + "l2=0.0027 f=-0.424 shape=(1, 9000, 1)
logits [[ 1.6820363 -1.8394629  1.4111265 -2.949821 ]]
Iteration 300 of 1000: loss=0.0154 " + "l1=0.0119" + "l2=0.00351 f=-0.42 shape=(1, 9000, 1)
logits [[ 1.6358346 -1.8361251  1.4193982 -2.8980994]]
Iteration 400 of 1000: loss=0.0133 " + "l1=0.00904" + "l2=0.00425 f=-0.416 shape=(1, 9000, 1)
logits [[ 1.593443  -1.8365875  1.4290383 -2.8496428]]
Iteration 500 of 1000: loss=0.0111 " + "l1=0.00615" + "l2=0.00499 f=-0.412 shape=(1, 9000, 1)
logits [[ 1.5513377 -1.8360494  1.4394907 -2.8033817]]
Iteration 600 of 1000: loss=0.00907 " + "l1=0.00316" + "l2=0.00591 f=-0.409 shape=(1, 9000, 1)
logits [[ 1.5069985 -1.8370903  1.4495887 -2.7565181]]
Iteration 700 of 1000: loss=0.00694 " + "l1=0.000136" + "l2=0.0068 f=-0.406 shape=(1, 9000, 1)
logits [[ 1.462482  -1.837709   1.4600132 -2.7096472]]
Iteration 800 of 1000: loss=0.00567 " + "l1=9.75e-05" + "l2=0.00557 f=-0.406 shape=(1, 9000, 1)
logits [[ 1.4671369 -1.8413489  1.4653636 -2.7166657]]
Iteration 900 of 1000: loss=0.00495 " + "l1=0" + "l2=0.00495 f=-0.406 shape=(1, 9000, 1)
logits [[ 1.4673525 -1.8418545  1.4680505 -2.7187934]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0146 " + "l1=0.0146" + "l2=0 f=-0.437 shape=(1, 9000, 1)
logits [[ 1.8394709 -1.8514322  1.3903978 -3.124928 ]]
Iteration 100 of 1000: loss=0.0128 " + "l1=0.012" + "l2=0.00082 f=-0.431 shape=(1, 9000, 1)
logits [[ 1.7662594 -1.8457539  1.3984593 -3.04336  ]]
Iteration 200 of 1000: loss=0.0121 " + "l1=0.0111" + "l2=0.00096 f=-0.429 shape=(1, 9000, 1)
logits [[ 1.7442111 -1.8440892  1.4020075 -3.0185452]]
Iteration 300 of 1000: loss=0.0114 " + "l1=0.0101" + "l2=0.00121 f=-0.427 shape=(1, 9000, 1)
logits [[ 1.7195168 -1.8430406  1.4072093 -2.9904015]]
Iteration 400 of 1000: loss=0.0106 " + "l1=0.00917" + "l2=0.00147 f=-0.424 shape=(1, 9000, 1)
logits [[ 1.6954498 -1.8426878  1.4132283 -2.9631877]]
Iteration 500 of 1000: loss=0.00998 " + "l1=0.00819" + "l2=0.00179 f=-0.422 shape=(1, 9000, 1)
logits [[ 1.6712856 -1.841732   1.4192725 -2.936179 ]]
Iteration 600 of 1000: loss=0.00937 " + "l1=0.00725" + "l2=0.00212 f=-0.42 shape=(1, 9000, 1)
logits [[ 1.6485099 -1.8417931  1.4253366 -2.9106843]]
Iteration 700 of 1000: loss=0.00871 " + "l1=0.00627" + "l2=0.00243 f=-0.417 shape=(1, 9000, 1)
logits [[ 1.6245275 -1.8419863  1.431491  -2.8839316]]
Iteration 800 of 1000: loss=0.00812 " + "l1=0.00529" + "l2=0.00283 f=-0.415 shape=(1, 9000, 1)
logits [[ 1.6005576 -1.8416067  1.4379276 -2.8574157]]
Iteration 900 of 1000: loss=0.00752 " + "l1=0.00436" + "l2=0.00317 f=-0.413 shape=(1, 9000, 1)
logits [[ 1.5778738 -1.8420815  1.4438722 -2.8331478]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0196 " + "l1=0.0196" + "l2=0 f=-0.437 shape=(1, 9000, 1)
logits [[ 1.8394709 -1.8514322  1.3903978 -3.124928 ]]
Iteration 100 of 1000: loss=0.0165 " + "l1=0.0151" + "l2=0.00132 f=-0.429 shape=(1, 9000, 1)
logits [[ 1.7468598 -1.8436774  1.4007431 -3.0216265]]
Iteration 200 of 1000: loss=0.0151 " + "l1=0.0134" + "l2=0.00173 f=-0.426 shape=(1, 9000, 1)
logits [[ 1.7127404 -1.8415804  1.4066706 -2.9836698]]
Iteration 300 of 1000: loss=0.0138 " + "l1=0.0116" + "l2=0.00219 f=-0.423 shape=(1, 9000, 1)
logits [[ 1.6785374 -1.8400954  1.4137455 -2.9452498]]
Iteration 400 of 1000: loss=0.0124 " + "l1=0.00973" + "l2=0.00271 f=-0.42 shape=(1, 9000, 1)
logits [[ 1.6439996 -1.8384709  1.4215767 -2.9064903]]
Iteration 500 of 1000: loss=0.0112 " + "l1=0.00791" + "l2=0.00325 f=-0.417 shape=(1, 9000, 1)
logits [[ 1.6103785 -1.8388343  1.429604  -2.8682342]]
Iteration 600 of 1000: loss=0.00987 " + "l1=0.00606" + "l2=0.00381 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.5768605 -1.838838   1.4382889 -2.8311787]]
Iteration 700 of 1000: loss=0.00869 " + "l1=0.00431" + "l2=0.00438 f=-0.411 shape=(1, 9000, 1)
logits [[ 1.54508   -1.8402799  1.4465536 -2.7972243]]
Iteration 800 of 1000: loss=0.00751 " + "l1=0.00248" + "l2=0.00503 f=-0.409 shape=(1, 9000, 1)
logits [[ 1.5107428 -1.8403659  1.453987  -2.7618933]]
Iteration 900 of 1000: loss=0.00604 " + "l1=0.000578" + "l2=0.00547 f=-0.407 shape=(1, 9000, 1)
logits [[ 1.4757992 -1.8399328  1.4625927 -2.7274277]]
--- 267.9595696926117 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0496 " + "l1=0.0496" + "l2=0 f=-0.437 shape=(1, 9000, 1)
logits [[ 1.8394709 -1.8514322  1.3903978 -3.124928 ]]
Iteration 100 of 1000: loss=0.0484 " + "l1=0.0479" + "l2=0.00058 f=-0.427 shape=(1, 9000, 1)
logits [[ 1.7686311 -1.8302364  1.3698663 -3.0180082]]
Iteration 200 of 1000: loss=0.0481 " + "l1=0.0474" + "l2=0.000664 f=-0.425 shape=(1, 9000, 1)
logits [[ 1.7498635 -1.8262619  1.3650783 -2.9889793]]
Iteration 300 of 1000: loss=0.0477 " + "l1=0.0469" + "l2=0.000844 f=-0.422 shape=(1, 9000, 1)
logits [[ 1.7288336 -1.8217735  1.3597357 -2.9565132]]
Iteration 400 of 1000: loss=0.0473 " + "l1=0.0463" + "l2=0.00102 f=-0.42 shape=(1, 9000, 1)
logits [[ 1.7080512 -1.8172771  1.3549526 -2.9247181]]
Iteration 500 of 1000: loss=0.0471 " + "l1=0.0458" + "l2=0.00128 f=-0.417 shape=(1, 9000, 1)
logits [[ 1.6876425 -1.8134861  1.3506464 -2.8934424]]
Iteration 600 of 1000: loss=0.0468 " + "l1=0.0453" + "l2=0.00151 f=-0.415 shape=(1, 9000, 1)
logits [[ 1.6678524 -1.8098017  1.3464009 -2.8636186]]
Iteration 700 of 1000: loss=0.0466 " + "l1=0.0448" + "l2=0.00176 f=-0.413 shape=(1, 9000, 1)
logits [[ 1.6479692 -1.8059039  1.3421606 -2.8344352]]
Iteration 800 of 1000: loss=0.0463 " + "l1=0.0444" + "l2=0.00199 f=-0.41 shape=(1, 9000, 1)
logits [[ 1.6286343 -1.8018641  1.3382226 -2.806437 ]]
Iteration 900 of 1000: loss=0.0461 " + "l1=0.0439" + "l2=0.00219 f=-0.408 shape=(1, 9000, 1)
logits [[ 1.6098118 -1.7980202  1.3343445 -2.7795496]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.496 " + "l1=0.496" + "l2=0 f=-0.437 shape=(1, 9000, 1)
logits [[ 1.8394709 -1.8514322  1.3903978 -3.124928 ]]
Iteration 100 of 1000: loss=0.39 " + "l1=0.336" + "l2=0.0534 f=-0.358 shape=(1, 9000, 1)
logits [[ 1.1857045 -1.6109674  1.1700071 -2.1753676]]
Iteration 200 of 1000: loss=0.344 " + "l1=0.286" + "l2=0.0579 f=-0.327 shape=(1, 9000, 1)
logits [[ 1.027463  -1.5436529  1.033644  -1.8266696]]
Iteration 300 of 1000: loss=0.31 " + "l1=0.241" + "l2=0.0685 f=-0.294 shape=(1, 9000, 1)
logits [[ 0.89260966 -1.4944834   0.9190548  -1.4927554 ]]
Iteration 400 of 1000: loss=0.277 " + "l1=0.195" + "l2=0.0817 f=-0.263 shape=(1, 9000, 1)
logits [[ 0.7470824  -1.4375265   0.79655445 -1.1571828 ]]
Iteration 500 of 1000: loss=0.245 " + "l1=0.15" + "l2=0.0942 f=-0.232 shape=(1, 9000, 1)
logits [[ 0.6045602 -1.3986431  0.6837694 -0.8190041]]
Iteration 600 of 1000: loss=0.213 " + "l1=0.107" + "l2=0.106 f=-0.198 shape=(1, 9000, 1)
logits [[ 0.47763202 -1.3483593   0.5748913  -0.49578214]]
Iteration 700 of 1000: loss=0.187 " + "l1=0.072" + "l2=0.115 f=-0.167 shape=(1, 9000, 1)
logits [[ 0.38112286 -1.3125716   0.49165446 -0.22861075]]
Iteration 800 of 1000: loss=0.168 " + "l1=0.047" + "l2=0.121 f=-0.15 shape=(1, 9000, 1)
logits [[ 0.31978625 -1.3061926   0.42882273 -0.04073679]]
Iteration 900 of 1000: loss=0.151 " + "l1=0.0264" + "l2=0.125 f=-0.14 shape=(1, 9000, 1)
logits [[ 0.2629744  -1.3129346   0.37755367  0.11360919]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.96 " + "l1=4.96" + "l2=0 f=-0.437 shape=(1, 9000, 1)
logits [[ 1.8394709 -1.8514322  1.3903978 -3.124928 ]]
Iteration 100 of 1000: loss=0.731 " + "l1=0" + "l2=0.731 f=-0.163 shape=(1, 9000, 1)
logits [[ 0.04140655 -1.2749481   0.2895059   0.2915005 ]]
Iteration 200 of 1000: loss=0.467 " + "l1=0" + "l2=0.467 f=-0.152 shape=(1, 9000, 1)
logits [[ 0.11837389 -1.3009508   0.28159767  0.294041  ]]
Iteration 300 of 1000: loss=0.366 " + "l1=0" + "l2=0.366 f=-0.146 shape=(1, 9000, 1)
logits [[ 0.13798112 -1.2979732   0.26842612  0.30914587]]
Iteration 400 of 1000: loss=0.302 " + "l1=0" + "l2=0.302 f=-0.143 shape=(1, 9000, 1)
logits [[ 0.1700251 -1.3031523  0.2676091  0.2921755]]
Iteration 500 of 1000: loss=0.265 " + "l1=0" + "l2=0.265 f=-0.144 shape=(1, 9000, 1)
logits [[ 0.17752212 -1.2964011   0.2587882   0.2858237 ]]
Iteration 600 of 1000: loss=0.235 " + "l1=0" + "l2=0.235 f=-0.143 shape=(1, 9000, 1)
logits [[ 0.19291183 -1.298671    0.2612615   0.2712971 ]]
Iteration 700 of 1000: loss=0.216 " + "l1=0" + "l2=0.216 f=-0.141 shape=(1, 9000, 1)
logits [[ 0.18552417 -1.3002067   0.26091632  0.28890374]]
Iteration 800 of 1000: loss=0.197 " + "l1=0" + "l2=0.197 f=-0.139 shape=(1, 9000, 1)
logits [[ 0.18760183 -1.3060805   0.27265257  0.2891703 ]]
Iteration 900 of 1000: loss=0.189 " + "l1=0.00842" + "l2=0.181 f=-0.138 shape=(1, 9000, 1)
logits [[ 0.18857542 -1.3097172   0.28925806  0.28083903]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.73 " + "l1=2.73" + "l2=0 f=-0.437 shape=(1, 9000, 1)
logits [[ 1.8394709 -1.8514322  1.3903978 -3.124928 ]]
Iteration 100 of 1000: loss=0.666 " + "l1=0.00468" + "l2=0.661 f=-0.161 shape=(1, 9000, 1)
logits [[ 0.06178988 -1.2931229   0.29832718  0.2898114 ]]
Iteration 200 of 1000: loss=0.403 " + "l1=0" + "l2=0.403 f=-0.148 shape=(1, 9000, 1)
logits [[ 0.11797048 -1.306368    0.28899294  0.3079885 ]]
Iteration 300 of 1000: loss=0.306 " + "l1=0.00203" + "l2=0.304 f=-0.145 shape=(1, 9000, 1)
logits [[ 0.15771243 -1.3171197   0.29242596  0.28873968]]
Iteration 400 of 1000: loss=0.255 " + "l1=0" + "l2=0.255 f=-0.142 shape=(1, 9000, 1)
logits [[ 0.16509306 -1.313683    0.2809122   0.29954857]]
Iteration 500 of 1000: loss=0.217 " + "l1=0" + "l2=0.217 f=-0.141 shape=(1, 9000, 1)
logits [[ 0.1703187  -1.3099353   0.28649208  0.29047048]]
Iteration 600 of 1000: loss=0.194 " + "l1=0" + "l2=0.194 f=-0.137 shape=(1, 9000, 1)
logits [[ 0.16585454 -1.3059759   0.29147643  0.3016225 ]]
Iteration 700 of 1000: loss=0.176 " + "l1=0" + "l2=0.176 f=-0.132 shape=(1, 9000, 1)
logits [[ 0.15585035 -1.3029968   0.30136552  0.31612572]]
Iteration 800 of 1000: loss=0.16 " + "l1=0" + "l2=0.16 f=-0.128 shape=(1, 9000, 1)
logits [[ 0.15662839 -1.3034041   0.3152577   0.3209536 ]]
Iteration 900 of 1000: loss=0.15 " + "l1=0" + "l2=0.15 f=-0.122 shape=(1, 9000, 1)
logits [[ 0.1468471  -1.302332    0.32275125  0.3431581 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.61 " + "l1=1.61" + "l2=0 f=-0.437 shape=(1, 9000, 1)
logits [[ 1.8394709 -1.8514322  1.3903978 -3.124928 ]]
Iteration 100 of 1000: loss=0.733 " + "l1=0.394" + "l2=0.339 f=-0.229 shape=(1, 9000, 1)
logits [[ 0.42559487 -1.3212444   0.59580207 -0.615374  ]]
Iteration 200 of 1000: loss=0.395 " + "l1=0.00492" + "l2=0.391 f=-0.147 shape=(1, 9000, 1)
logits [[ 0.12079379 -1.2886404   0.29721498  0.2820667 ]]
Iteration 300 of 1000: loss=0.273 " + "l1=0.00332" + "l2=0.269 f=-0.133 shape=(1, 9000, 1)
logits [[ 0.14578217 -1.2803309   0.3055467   0.2953168 ]]
Iteration 400 of 1000: loss=0.217 " + "l1=0" + "l2=0.217 f=-0.126 shape=(1, 9000, 1)
logits [[ 0.15146156 -1.2718253   0.3068257   0.3087573 ]]
Iteration 500 of 1000: loss=0.189 " + "l1=0" + "l2=0.189 f=-0.122 shape=(1, 9000, 1)
logits [[ 0.15054199 -1.2719752   0.30687335  0.32584473]]
Iteration 600 of 1000: loss=0.166 " + "l1=0.00105" + "l2=0.165 f=-0.121 shape=(1, 9000, 1)
logits [[ 0.16194187 -1.2772735   0.31686327  0.31362405]]
Iteration 700 of 1000: loss=0.151 " + "l1=0.000515" + "l2=0.151 f=-0.121 shape=(1, 9000, 1)
logits [[ 0.16358414 -1.2826558   0.31923378  0.3176486 ]]
Iteration 800 of 1000: loss=0.141 " + "l1=0" + "l2=0.141 f=-0.12 shape=(1, 9000, 1)
logits [[ 0.15665607 -1.2867194   0.31750968  0.33159494]]
Iteration 900 of 1000: loss=0.131 " + "l1=0" + "l2=0.131 f=-0.12 shape=(1, 9000, 1)
logits [[ 0.15823448 -1.2902577   0.3235508   0.32661182]]
--- 290.6074528694153 seconds ---
Adv result:3
Loading record A06869
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.104 " + "l1=0.104" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 5.40511   -4.988644   4.9517603 -7.6984353]]
Iteration 100 of 1000: loss=0.103 " + "l1=0.103" + "l2=0.000415 f=-0.58 shape=(1, 9000, 1)
logits [[ 5.365479 -4.927006  4.901614 -7.660741]]
Iteration 200 of 1000: loss=0.103 " + "l1=0.103" + "l2=0.000472 f=-0.579 shape=(1, 9000, 1)
logits [[ 5.35862  -4.909875  4.887115 -7.653663]]
Iteration 300 of 1000: loss=0.103 " + "l1=0.102" + "l2=0.000578 f=-0.579 shape=(1, 9000, 1)
logits [[ 5.3503637 -4.891786   4.8720374 -7.646475 ]]
Iteration 400 of 1000: loss=0.103 " + "l1=0.102" + "l2=0.000728 f=-0.579 shape=(1, 9000, 1)
logits [[ 5.341085  -4.8704057  4.8544064 -7.639207 ]]
Iteration 500 of 1000: loss=0.103 " + "l1=0.102" + "l2=0.000893 f=-0.578 shape=(1, 9000, 1)
logits [[ 5.3307066 -4.8449273  4.8332124 -7.631657 ]]
Iteration 600 of 1000: loss=0.102 " + "l1=0.101" + "l2=0.00112 f=-0.578 shape=(1, 9000, 1)
logits [[ 5.315498 -4.80516   4.800759 -7.621622]]
Iteration 700 of 1000: loss=0.102 " + "l1=0.1" + "l2=0.00145 f=-0.578 shape=(1, 9000, 1)
logits [[ 5.290748  -4.7401805  4.7465854 -7.608206 ]]
Iteration 800 of 1000: loss=0.101 " + "l1=0.0991" + "l2=0.00206 f=-0.579 shape=(1, 9000, 1)
logits [[ 5.257878  -4.6516953  4.67114   -7.5919967]]
Iteration 900 of 1000: loss=0.1 " + "l1=0.0977" + "l2=0.00261 f=-0.581 shape=(1, 9000, 1)
logits [[ 5.217131  -4.552333   4.5861816 -7.5745964]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.04 " + "l1=1.04" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 5.40511   -4.988644   4.9517603 -7.6984353]]
Iteration 100 of 1000: loss=0.959 " + "l1=0.919" + "l2=0.0398 f=-0.575 shape=(1, 9000, 1)
logits [[ 4.987063  -4.200547   4.2935123 -7.380938 ]]
Iteration 200 of 1000: loss=0.916 " + "l1=0.872" + "l2=0.0444 f=-0.576 shape=(1, 9000, 1)
logits [[ 4.8078628 -3.9123406  4.04652   -7.2462344]]
Iteration 300 of 1000: loss=0.889 " + "l1=0.837" + "l2=0.0523 f=-0.572 shape=(1, 9000, 1)
logits [[ 4.668066  -3.6996715  3.8676958 -7.1236963]]
Iteration 400 of 1000: loss=0.868 " + "l1=0.804" + "l2=0.0643 f=-0.564 shape=(1, 9000, 1)
logits [[ 4.5164294 -3.5198693  3.7182763 -6.9689717]]
Iteration 500 of 1000: loss=0.85 " + "l1=0.773" + "l2=0.0769 f=-0.557 shape=(1, 9000, 1)
logits [[ 4.3786454 -3.3476682  3.5747895 -6.8320646]]
Iteration 600 of 1000: loss=0.834 " + "l1=0.743" + "l2=0.0911 f=-0.555 shape=(1, 9000, 1)
logits [[ 4.231298  -3.2023604  3.4530776 -6.7030067]]
Iteration 700 of 1000: loss=0.815 " + "l1=0.709" + "l2=0.106 f=-0.556 shape=(1, 9000, 1)
logits [[ 4.057261  -3.0307379  3.314454  -6.5661864]]
Iteration 800 of 1000: loss=0.794 " + "l1=0.679" + "l2=0.115 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.893723  -2.8951201  3.2038252 -6.4552937]]
Iteration 900 of 1000: loss=0.78 " + "l1=0.659" + "l2=0.122 f=-0.564 shape=(1, 9000, 1)
logits [[ 3.754755  -2.8339226  3.1225946 -6.2996645]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.4 " + "l1=10.4" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 5.40511   -4.988644   4.9517603 -7.6984353]]
Iteration 100 of 1000: loss=4.73 " + "l1=2.45" + "l2=2.29 f=-0.573 shape=(1, 9000, 1)
logits [[ 1.7675909 -0.6794947  1.7388556 -5.1207967]]
Iteration 200 of 1000: loss=3.06 " + "l1=0.736" + "l2=2.32 f=-0.633 shape=(1, 9000, 1)
logits [[ 0.8867006   0.15112518  0.88417345 -4.4553676 ]]
Iteration 300 of 1000: loss=2.32 " + "l1=0.229" + "l2=2.09 f=-0.624 shape=(1, 9000, 1)
logits [[ 0.5722169   0.35020688  0.5792444  -3.9987538 ]]
Iteration 400 of 1000: loss=1.79 " + "l1=0" + "l2=1.79 f=-0.612 shape=(1, 9000, 1)
logits [[ 0.36624664  0.37942272  0.37883577 -3.5731509 ]]
Iteration 500 of 1000: loss=1.53 " + "l1=0" + "l2=1.53 f=-0.608 shape=(1, 9000, 1)
logits [[ 0.26196566  0.31375077  0.31069878 -3.3201718 ]]
Iteration 600 of 1000: loss=1.39 " + "l1=0.0018" + "l2=1.38 f=-0.603 shape=(1, 9000, 1)
logits [[ 0.25181216  0.2555804   0.25738046 -3.176101  ]]
Iteration 700 of 1000: loss=1.29 " + "l1=0" + "l2=1.29 f=-0.596 shape=(1, 9000, 1)
logits [[ 0.20527744  0.22475974  0.21902487 -3.0335362 ]]
Iteration 800 of 1000: loss=1.23 " + "l1=0" + "l2=1.23 f=-0.587 shape=(1, 9000, 1)
logits [[ 0.16793777  0.20509876  0.19126046 -2.911965  ]]
Iteration 900 of 1000: loss=1.18 " + "l1=0" + "l2=1.18 f=-0.577 shape=(1, 9000, 1)
logits [[ 0.14266063  0.1913049   0.16760764 -2.8105085 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.72 " + "l1=5.72" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 5.40511   -4.988644   4.9517603 -7.6984353]]
Iteration 100 of 1000: loss=3.73 " + "l1=2.84" + "l2=0.884 f=-0.537 shape=(1, 9000, 1)
logits [[ 3.2093954 -1.9597645  2.7084515 -6.1074634]]
Iteration 200 of 1000: loss=2.84 " + "l1=1.63" + "l2=1.21 f=-0.589 shape=(1, 9000, 1)
logits [[ 1.9875345 -0.9803564  1.965946  -5.3276567]]
Iteration 300 of 1000: loss=2.29 " + "l1=1.15" + "l2=1.15 f=-0.599 shape=(1, 9000, 1)
logits [[ 1.4939973 -0.5944822  1.4749392 -4.7721367]]
Iteration 400 of 1000: loss=1.94 " + "l1=0.776" + "l2=1.17 f=-0.588 shape=(1, 9000, 1)
logits [[ 1.0904016 -0.3177206  1.0925035 -4.2165694]]
Iteration 500 of 1000: loss=1.69 " + "l1=0.556" + "l2=1.14 f=-0.58 shape=(1, 9000, 1)
logits [[ 0.80382186 -0.19799827  0.8136839  -3.7390919 ]]
Iteration 600 of 1000: loss=1.53 " + "l1=0.393" + "l2=1.14 f=-0.584 shape=(1, 9000, 1)
logits [[ 0.5827531  -0.12667234  0.5872598  -3.3811934 ]]
Iteration 700 of 1000: loss=1.39 " + "l1=0.27" + "l2=1.12 f=-0.581 shape=(1, 9000, 1)
logits [[ 0.42883378 -0.05782278  0.43279922 -3.1260114 ]]
Iteration 800 of 1000: loss=1.28 " + "l1=0.181" + "l2=1.1 f=-0.569 shape=(1, 9000, 1)
logits [[ 3.1915706e-01 -2.0333063e-03  3.2620665e-01 -2.9200623e+00]]
Iteration 900 of 1000: loss=1.19 " + "l1=0.0828" + "l2=1.11 f=-0.557 shape=(1, 9000, 1)
logits [[ 0.20680094  0.06064659  0.21123493 -2.708301  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.38 " + "l1=3.38" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 5.40511   -4.988644   4.9517603 -7.6984353]]
Iteration 100 of 1000: loss=2.6 " + "l1=2.22" + "l2=0.386 f=-0.55 shape=(1, 9000, 1)
logits [[ 4.0836797 -2.7379704  3.2519977 -6.7958035]]
Iteration 200 of 1000: loss=2.24 " + "l1=1.66" + "l2=0.588 f=-0.541 shape=(1, 9000, 1)
logits [[ 3.2416594 -1.8512506  2.6066206 -6.159091 ]]
Iteration 300 of 1000: loss=1.94 " + "l1=1.24" + "l2=0.692 f=-0.559 shape=(1, 9000, 1)
logits [[ 2.4624963 -1.3664122  2.2262115 -5.5596275]]
Iteration 400 of 1000: loss=1.65 " + "l1=0.91" + "l2=0.736 f=-0.565 shape=(1, 9000, 1)
logits [[ 1.8195009 -0.9792707  1.8188243 -4.9188175]]
Iteration 500 of 1000: loss=1.49 " + "l1=0.739" + "l2=0.748 f=-0.567 shape=(1, 9000, 1)
logits [[ 1.5123447 -0.7623096  1.5080256 -4.524144 ]]
Iteration 600 of 1000: loss=1.4 " + "l1=0.639" + "l2=0.758 f=-0.567 shape=(1, 9000, 1)
logits [[ 1.3016531  -0.66309583  1.3037992  -4.2114224 ]]
Iteration 700 of 1000: loss=1.32 " + "l1=0.553" + "l2=0.766 f=-0.566 shape=(1, 9000, 1)
logits [[ 1.1080288 -0.5932024  1.1022351 -3.881654 ]]
Iteration 800 of 1000: loss=1.24 " + "l1=0.472" + "l2=0.765 f=-0.576 shape=(1, 9000, 1)
logits [[ 0.8983449  -0.54637194  0.9045739  -3.5622222 ]]
Iteration 900 of 1000: loss=1.18 " + "l1=0.426" + "l2=0.756 f=-0.574 shape=(1, 9000, 1)
logits [[ 0.8081088  -0.50023824  0.809684   -3.4152508 ]]
--- 290.81485509872437 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00453 " + "l1=0.00453" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 5.40511   -4.988644   4.9517603 -7.6984353]]
Iteration 100 of 1000: loss=0.00415 " + "l1=0.00387" + "l2=0.000276 f=-0.584 shape=(1, 9000, 1)
logits [[ 5.380896  -5.0215764  4.9937177 -7.687426 ]]
Iteration 200 of 1000: loss=0.00406 " + "l1=0.00377" + "l2=0.000286 f=-0.584 shape=(1, 9000, 1)
logits [[ 5.3788896 -5.028036   5.001898  -7.6869802]]
Iteration 300 of 1000: loss=0.004 " + "l1=0.00365" + "l2=0.000355 f=-0.584 shape=(1, 9000, 1)
logits [[ 5.37578   -5.035515   5.011197  -7.6860056]]
Iteration 400 of 1000: loss=0.00397 " + "l1=0.00353" + "l2=0.000444 f=-0.584 shape=(1, 9000, 1)
logits [[ 5.372673  -5.0427094  5.019758  -7.68479  ]]
Iteration 500 of 1000: loss=0.00395 " + "l1=0.00342" + "l2=0.000524 f=-0.584 shape=(1, 9000, 1)
logits [[ 5.36976   -5.0495114  5.027509  -7.6836457]]
Iteration 600 of 1000: loss=0.00396 " + "l1=0.00333" + "l2=0.000626 f=-0.584 shape=(1, 9000, 1)
logits [[ 5.3671207 -5.0553927  5.034109  -7.6826367]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0453 " + "l1=0.0453" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 5.40511   -4.988644   4.9517603 -7.6984353]]
Iteration 100 of 1000: loss=0.0145 " + "l1=0.00026" + "l2=0.0142 f=-0.585 shape=(1, 9000, 1)
logits [[ 5.2300754 -5.187578   5.227473  -7.6110497]]
Iteration 200 of 1000: loss=0.01 " + "l1=0" + "l2=0.01 f=-0.585 shape=(1, 9000, 1)
logits [[ 5.2404866 -5.202639   5.2429676 -7.6190596]]
Iteration 300 of 1000: loss=0.00846 " + "l1=1.32e-05" + "l2=0.00844 f=-0.585 shape=(1, 9000, 1)
logits [[ 5.246554  -5.2094975  5.246422  -7.6225023]]
Iteration 400 of 1000: loss=0.00788 " + "l1=0" + "l2=0.00788 f=-0.585 shape=(1, 9000, 1)
logits [[ 5.246902  -5.2142215  5.2480736 -7.6224575]]
Iteration 500 of 1000: loss=0.00758 " + "l1=0.00027" + "l2=0.00731 f=-0.587 shape=(1, 9000, 1)
logits [[ 5.2488813 -5.217004   5.2461815 -7.624297 ]]
Iteration 600 of 1000: loss=0.00752 " + "l1=0" + "l2=0.00752 f=-0.588 shape=(1, 9000, 1)
logits [[ 5.243471  -5.2258296  5.2538548 -7.622971 ]]
Iteration 700 of 1000: loss=0.00681 " + "l1=0" + "l2=0.00681 f=-0.589 shape=(1, 9000, 1)
logits [[ 5.247571 -5.225012  5.247592 -7.625545]]
Iteration 800 of 1000: loss=0.00694 " + "l1=0" + "l2=0.00694 f=-0.59 shape=(1, 9000, 1)
logits [[ 5.2449903 -5.2299156  5.249997  -7.6240067]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0249 " + "l1=0.0249" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 5.40511   -4.988644   4.9517603 -7.6984353]]
Iteration 100 of 1000: loss=0.015 " + "l1=0.00996" + "l2=0.00506 f=-0.585 shape=(1, 9000, 1)
logits [[ 5.3048425 -5.1173577  5.1238184 -7.6510005]]
Iteration 200 of 1000: loss=0.0118 " + "l1=0.00478" + "l2=0.007 f=-0.585 shape=(1, 9000, 1)
logits [[ 5.274495  -5.164544   5.187652  -7.6359987]]
Iteration 300 of 1000: loss=0.0094 " + "l1=0.000724" + "l2=0.00868 f=-0.585 shape=(1, 9000, 1)
logits [[ 5.249163  -5.2018623  5.235991  -7.6229725]]
Iteration 400 of 1000: loss=0.00811 " + "l1=9.69e-05" + "l2=0.00801 f=-0.585 shape=(1, 9000, 1)
logits [[ 5.248203  -5.212134   5.2464414 -7.6231565]]
Iteration 500 of 1000: loss=0.00763 " + "l1=0.000274" + "l2=0.00736 f=-0.586 shape=(1, 9000, 1)
logits [[ 5.2499514 -5.2151575  5.2449675 -7.6242757]]
Iteration 600 of 1000: loss=0.00721 " + "l1=0.000343" + "l2=0.00687 f=-0.587 shape=(1, 9000, 1)
logits [[ 5.250523  -5.2183585  5.2442884 -7.625906 ]]
Iteration 700 of 1000: loss=0.00691 " + "l1=0" + "l2=0.00691 f=-0.589 shape=(1, 9000, 1)
logits [[ 5.247006  -5.2245865  5.2486205 -7.6250825]]
Iteration 800 of 1000: loss=0.0068 " + "l1=0.000178" + "l2=0.00662 f=-0.589 shape=(1, 9000, 1)
logits [[ 5.2485185 -5.2252703  5.245286  -7.6257668]]
Iteration 900 of 1000: loss=0.00665 " + "l1=0" + "l2=0.00665 f=-0.59 shape=(1, 9000, 1)
logits [[ 5.246335  -5.2302475  5.2472653 -7.6242204]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0147 " + "l1=0.0147" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 5.40511   -4.988644   4.9517603 -7.6984353]]
Iteration 100 of 1000: loss=0.0111 " + "l1=0.00909" + "l2=0.00199 f=-0.585 shape=(1, 9000, 1)
logits [[ 5.341461 -5.073258  5.06175  -7.66912 ]]
Iteration 200 of 1000: loss=0.00998 " + "l1=0.00746" + "l2=0.00251 f=-0.585 shape=(1, 9000, 1)
logits [[ 5.32707   -5.09978    5.0973783 -7.662674 ]]
Iteration 300 of 1000: loss=0.00913 " + "l1=0.0061" + "l2=0.00304 f=-0.585 shape=(1, 9000, 1)
logits [[ 5.3152127 -5.1234536  5.127629  -7.6576204]]
Iteration 400 of 1000: loss=0.00853 " + "l1=0.00493" + "l2=0.0036 f=-0.585 shape=(1, 9000, 1)
logits [[ 5.304327  -5.1434703  5.152483  -7.651891 ]]
Iteration 500 of 1000: loss=0.00805 " + "l1=0.00393" + "l2=0.00413 f=-0.585 shape=(1, 9000, 1)
logits [[ 5.2940145 -5.160942   5.173196  -7.6464515]]
Iteration 600 of 1000: loss=0.0077 " + "l1=0.00314" + "l2=0.00455 f=-0.586 shape=(1, 9000, 1)
logits [[ 5.285112  -5.1746063  5.188398  -7.6413584]]
Iteration 700 of 1000: loss=0.00745 " + "l1=0.00249" + "l2=0.00495 f=-0.587 shape=(1, 9000, 1)
logits [[ 5.277476  -5.1865883  5.200804  -7.6381297]]
Iteration 800 of 1000: loss=0.00721 " + "l1=0.00198" + "l2=0.00523 f=-0.588 shape=(1, 9000, 1)
logits [[ 5.270959  -5.196707   5.2100444 -7.634415 ]]
Iteration 900 of 1000: loss=0.00703 " + "l1=0.00152" + "l2=0.00551 f=-0.589 shape=(1, 9000, 1)
logits [[ 5.2648973 -5.205642   5.2179823 -7.6313386]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0198 " + "l1=0.0198" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 5.40511   -4.988644   4.9517603 -7.6984353]]
Iteration 100 of 1000: loss=0.0134 " + "l1=0.01" + "l2=0.00337 f=-0.585 shape=(1, 9000, 1)
logits [[ 5.322545  -5.095232   5.0932775 -7.659897 ]]
Iteration 200 of 1000: loss=0.0114 " + "l1=0.00699" + "l2=0.0044 f=-0.585 shape=(1, 9000, 1)
logits [[ 5.3027215 -5.1334133  5.1429257 -7.6507187]]
Iteration 300 of 1000: loss=0.00988 " + "l1=0.00435" + "l2=0.00552 f=-0.584 shape=(1, 9000, 1)
logits [[ 5.2828574 -5.163903   5.183318  -7.64015  ]]
Iteration 400 of 1000: loss=0.00876 " + "l1=0.00221" + "l2=0.00655 f=-0.585 shape=(1, 9000, 1)
logits [[ 5.265931  -5.1894984  5.2153087 -7.631488 ]]
Iteration 500 of 1000: loss=0.00793 " + "l1=0.000623" + "l2=0.00731 f=-0.586 shape=(1, 9000, 1)
logits [[ 5.2519403 -5.2087073  5.2376957 -7.6239185]]
Iteration 600 of 1000: loss=0.00733 " + "l1=0.000162" + "l2=0.00717 f=-0.587 shape=(1, 9000, 1)
logits [[ 5.248991  -5.2175064  5.2452817 -7.623616 ]]
Iteration 700 of 1000: loss=0.00717 " + "l1=9.11e-05" + "l2=0.00708 f=-0.588 shape=(1, 9000, 1)
logits [[ 5.248276  -5.221679   5.2461944 -7.6243725]]
Iteration 800 of 1000: loss=0.0069 " + "l1=0.000278" + "l2=0.00662 f=-0.589 shape=(1, 9000, 1)
logits [[ 5.2496414 -5.222846   5.243286  -7.6253524]]
Iteration 900 of 1000: loss=0.00666 " + "l1=4.28e-05" + "l2=0.00662 f=-0.59 shape=(1, 9000, 1)
logits [[ 5.2468123 -5.227869   5.245834  -7.6235743]]
--- 257.7513527870178 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.131 " + "l1=0.131" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 5.40511   -4.988644   4.9517603 -7.6984353]]
Iteration 100 of 1000: loss=0.13 " + "l1=0.13" + "l2=0.000494 f=-0.578 shape=(1, 9000, 1)
logits [[ 5.3534465 -4.9684796  4.928784  -7.627642 ]]
Iteration 200 of 1000: loss=0.13 " + "l1=0.13" + "l2=0.000553 f=-0.578 shape=(1, 9000, 1)
logits [[ 5.3433733 -4.962625   4.9224396 -7.6135087]]
Iteration 300 of 1000: loss=0.13 " + "l1=0.129" + "l2=0.000671 f=-0.577 shape=(1, 9000, 1)
logits [[ 5.331881  -4.957082   4.915786  -7.5975475]]
Iteration 400 of 1000: loss=0.13 " + "l1=0.129" + "l2=0.000765 f=-0.576 shape=(1, 9000, 1)
logits [[ 5.3220153 -4.952687   4.9099627 -7.5836544]]
Iteration 500 of 1000: loss=0.13 " + "l1=0.129" + "l2=0.000915 f=-0.575 shape=(1, 9000, 1)
logits [[ 5.3124948 -4.948576   4.90432   -7.569949 ]]
Iteration 600 of 1000: loss=0.13 " + "l1=0.129" + "l2=0.00104 f=-0.575 shape=(1, 9000, 1)
logits [[ 5.303198  -4.944394   4.8986044 -7.5565095]]
Iteration 700 of 1000: loss=0.13 " + "l1=0.128" + "l2=0.00114 f=-0.574 shape=(1, 9000, 1)
logits [[ 5.294841  -4.941661   4.894245  -7.5445027]]
Iteration 800 of 1000: loss=0.129 " + "l1=0.128" + "l2=0.00129 f=-0.574 shape=(1, 9000, 1)
logits [[ 5.2873363 -4.9397206  4.890813  -7.5333157]]
Iteration 900 of 1000: loss=0.129 " + "l1=0.128" + "l2=0.00143 f=-0.573 shape=(1, 9000, 1)
logits [[ 5.2802434 -4.9365907  4.8864174 -7.5224257]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.31 " + "l1=1.31" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 5.40511   -4.988644   4.9517603 -7.6984353]]
Iteration 100 of 1000: loss=1.25 " + "l1=1.21" + "l2=0.0343 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.9891267 -4.8007     4.739353  -7.137945 ]]
Iteration 200 of 1000: loss=1.22 " + "l1=1.17" + "l2=0.0503 f=-0.547 shape=(1, 9000, 1)
logits [[ 4.769746  -4.621485   4.5601025 -6.898183 ]]
Iteration 300 of 1000: loss=1.17 " + "l1=1.1" + "l2=0.0695 f=-0.544 shape=(1, 9000, 1)
logits [[ 4.450156  -4.2862344  4.2529087 -6.5926747]]
Iteration 400 of 1000: loss=1.13 " + "l1=1.05" + "l2=0.0846 f=-0.534 shape=(1, 9000, 1)
logits [[ 4.1947594 -4.1490817  4.1231155 -6.3050823]]
Iteration 500 of 1000: loss=1.1 " + "l1=1" + "l2=0.0944 f=-0.519 shape=(1, 9000, 1)
logits [[ 3.992072  -4.023756   3.98815   -6.0329933]]
Iteration 600 of 1000: loss=1.06 " + "l1=0.955" + "l2=0.106 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.799466  -3.8643773  3.7980077 -5.7529445]]
Iteration 700 of 1000: loss=1.02 " + "l1=0.902" + "l2=0.123 f=-0.498 shape=(1, 9000, 1)
logits [[ 3.5745413 -3.6870098  3.5709894 -5.4487934]]
Iteration 800 of 1000: loss=0.991 " + "l1=0.853" + "l2=0.138 f=-0.484 shape=(1, 9000, 1)
logits [[ 3.3725395 -3.5206041  3.3656726 -5.154052 ]]
Iteration 900 of 1000: loss=0.949 " + "l1=0.791" + "l2=0.158 f=-0.462 shape=(1, 9000, 1)
logits [[ 3.1287751 -3.3307538  3.1299284 -4.777498 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=13.1 " + "l1=13.1" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 5.40511   -4.988644   4.9517603 -7.6984353]]
Iteration 100 of 1000: loss=7.71 " + "l1=4.92" + "l2=2.79 f=-0.387 shape=(1, 9000, 1)
logits [[ 1.695723  -1.7561992  1.7154076 -3.2041893]]
Iteration 200 of 1000: loss=4.5 " + "l1=0.766" + "l2=3.73 f=-0.375 shape=(1, 9000, 1)
logits [[-0.21968839 -0.93893504  0.21297373 -0.55274844]]
Iteration 300 of 1000: loss=2.87 " + "l1=0.00841" + "l2=2.86 f=-0.392 shape=(1, 9000, 1)
logits [[-0.5240742  -0.87707067 -0.07838964 -0.08679562]]
Iteration 400 of 1000: loss=2.26 " + "l1=0.0124" + "l2=2.25 f=-0.408 shape=(1, 9000, 1)
logits [[-0.49918866 -0.97274333 -0.07464311 -0.08699507]]
Iteration 500 of 1000: loss=1.86 " + "l1=0.0178" + "l2=1.85 f=-0.409 shape=(1, 9000, 1)
logits [[-0.44512507 -1.108127   -0.03311291 -0.05094097]]
Iteration 600 of 1000: loss=1.57 " + "l1=0" + "l2=1.57 f=-0.401 shape=(1, 9000, 1)
logits [[-4.1677648e-01 -1.1857601e+00 -3.1012199e-03  5.6939200e-04]]
Iteration 700 of 1000: loss=1.39 " + "l1=0" + "l2=1.39 f=-0.396 shape=(1, 9000, 1)
logits [[-0.4149365  -1.2303712   0.02514867  0.03730047]]
Iteration 800 of 1000: loss=1.26 " + "l1=0" + "l2=1.26 f=-0.383 shape=(1, 9000, 1)
logits [[-0.3958917  -1.2734749   0.06864246  0.06971093]]
Iteration 900 of 1000: loss=1.17 " + "l1=0" + "l2=1.17 f=-0.371 shape=(1, 9000, 1)
logits [[-0.4022839  -1.2855436   0.09435263  0.11035796]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.21 " + "l1=7.21" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 5.40511   -4.988644   4.9517603 -7.6984353]]
Iteration 100 of 1000: loss=5.38 " + "l1=4.45" + "l2=0.933 f=-0.468 shape=(1, 9000, 1)
logits [[ 3.1176052 -3.1374912  3.1161325 -4.966265 ]]
Iteration 200 of 1000: loss=4.4 " + "l1=3.12" + "l2=1.27 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.0579536 -2.2645438  2.0584388 -3.6225932]]
Iteration 300 of 1000: loss=3.41 " + "l1=1.91" + "l2=1.5 f=-0.412 shape=(1, 9000, 1)
logits [[ 1.101374  -1.6984828  1.2071891 -2.2567627]]
Iteration 400 of 1000: loss=2.36 " + "l1=0.768" + "l2=1.59 f=-0.39 shape=(1, 9000, 1)
logits [[ 0.19472681 -1.3854487   0.51269406 -0.88312453]]
Iteration 500 of 1000: loss=1.68 " + "l1=0.117" + "l2=1.56 f=-0.376 shape=(1, 9000, 1)
logits [[-0.34796983 -1.201578    0.1296968  -0.08251266]]
Iteration 600 of 1000: loss=1.28 " + "l1=0" + "l2=1.28 f=-0.36 shape=(1, 9000, 1)
logits [[-0.3998929  -1.2107708   0.08524637  0.08583228]]
Iteration 700 of 1000: loss=1.12 " + "l1=0.0066" + "l2=1.11 f=-0.341 shape=(1, 9000, 1)
logits [[-0.3528399  -1.2570097   0.12939596  0.11739243]]
Iteration 800 of 1000: loss=1.02 " + "l1=0.00412" + "l2=1.02 f=-0.314 shape=(1, 9000, 1)
logits [[-0.3065006  -1.3106397   0.18510357  0.17761627]]
Iteration 900 of 1000: loss=0.942 " + "l1=0.000305" + "l2=0.941 f=-0.291 shape=(1, 9000, 1)
logits [[-0.27799413 -1.3341174   0.22532277  0.22476792]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.26 " + "l1=4.26" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 5.40511   -4.988644   4.9517603 -7.6984353]]
Iteration 100 of 1000: loss=3.56 " + "l1=3.2" + "l2=0.367 f=-0.514 shape=(1, 9000, 1)
logits [[ 3.9187727 -3.9748957  3.9112866 -5.9123983]]
Iteration 200 of 1000: loss=3.14 " + "l1=2.63" + "l2=0.51 f=-0.478 shape=(1, 9000, 1)
logits [[ 3.1228788 -3.2090762  3.134666  -4.960716 ]]
Iteration 300 of 1000: loss=2.72 " + "l1=2.08" + "l2=0.642 f=-0.464 shape=(1, 9000, 1)
logits [[ 2.3738222 -2.581488   2.3761947 -4.0246115]]
Iteration 400 of 1000: loss=2.29 " + "l1=1.55" + "l2=0.746 f=-0.425 shape=(1, 9000, 1)
logits [[ 1.6739887 -2.186624   1.7866619 -2.9732745]]
Iteration 500 of 1000: loss=1.86 " + "l1=1.03" + "l2=0.834 f=-0.393 shape=(1, 9000, 1)
logits [[ 0.97066903 -1.8692318   1.2446653  -1.9200779 ]]
Iteration 600 of 1000: loss=1.51 " + "l1=0.625" + "l2=0.882 f=-0.392 shape=(1, 9000, 1)
logits [[ 0.41200933 -1.6821188   0.8136584  -1.1105189 ]]
Iteration 700 of 1000: loss=1.28 " + "l1=0.407" + "l2=0.876 f=-0.361 shape=(1, 9000, 1)
logits [[ 0.17362133 -1.5305228   0.58434    -0.6694745 ]]
Iteration 800 of 1000: loss=1.1 " + "l1=0.22" + "l2=0.881 f=-0.322 shape=(1, 9000, 1)
logits [[-0.03282716 -1.4029009   0.41177607 -0.26465192]]
Iteration 900 of 1000: loss=0.934 " + "l1=0.0288" + "l2=0.905 f=-0.279 shape=(1, 9000, 1)
logits [[-0.23070699 -1.3069862   0.25520504  0.16666698]]
--- 293.10484504699707 seconds ---
Adv result:3
Loading record A06885
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0348 " + "l1=0.0348" + "l2=0 f=-0.741 shape=(1, 9000, 1)
logits [[ 2.3465958 -1.1366191  2.2601414 -6.4326415]]
Iteration 100 of 1000: loss=0.0344 " + "l1=0.034" + "l2=0.000385 f=-0.742 shape=(1, 9000, 1)
logits [[ 2.296408  -1.1002048  2.2487526 -6.4121685]]
Iteration 200 of 1000: loss=0.0342 " + "l1=0.0339" + "l2=0.000369 f=-0.742 shape=(1, 9000, 1)
logits [[ 2.2906327 -1.0953763  2.2468147 -6.4099836]]
Iteration 300 of 1000: loss=0.0341 " + "l1=0.0337" + "l2=0.000453 f=-0.742 shape=(1, 9000, 1)
logits [[ 2.2814674 -1.0880893  2.243938  -6.406027 ]]
Iteration 400 of 1000: loss=0.034 " + "l1=0.0335" + "l2=0.000505 f=-0.742 shape=(1, 9000, 1)
logits [[ 2.2729392 -1.0812308  2.2412882 -6.401784 ]]
Iteration 500 of 1000: loss=0.034 " + "l1=0.0334" + "l2=0.000613 f=-0.742 shape=(1, 9000, 1)
logits [[ 2.2648227 -1.0747049  2.2387564 -6.397797 ]]
Iteration 600 of 1000: loss=0.034 " + "l1=0.0332" + "l2=0.000704 f=-0.742 shape=(1, 9000, 1)
logits [[ 2.2566767 -1.0681642  2.2362022 -6.3943415]]
Iteration 700 of 1000: loss=0.0339 " + "l1=0.0331" + "l2=0.000772 f=-0.743 shape=(1, 9000, 1)
logits [[ 2.249384  -1.0624297  2.234024  -6.391331 ]]
Iteration 800 of 1000: loss=0.034 " + "l1=0.033" + "l2=0.000959 f=-0.743 shape=(1, 9000, 1)
logits [[ 2.2431884 -1.0575792  2.2323685 -6.3887415]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.348 " + "l1=0.348" + "l2=0 f=-0.741 shape=(1, 9000, 1)
logits [[ 2.3465958 -1.1366191  2.2601414 -6.4326415]]
Iteration 100 of 1000: loss=0.316 " + "l1=0.304" + "l2=0.0124 f=-0.74 shape=(1, 9000, 1)
logits [[ 2.1446047 -0.8955946  2.144729  -6.352297 ]]
Iteration 200 of 1000: loss=0.306 " + "l1=0.287" + "l2=0.0182 f=-0.731 shape=(1, 9000, 1)
logits [[ 2.0818815  -0.79040104  2.0824215  -6.297772  ]]
Iteration 300 of 1000: loss=0.298 " + "l1=0.275" + "l2=0.0229 f=-0.726 shape=(1, 9000, 1)
logits [[ 2.0325353  -0.71215653  2.037438   -6.2629147 ]]
Iteration 400 of 1000: loss=0.291 " + "l1=0.265" + "l2=0.026 f=-0.722 shape=(1, 9000, 1)
logits [[ 1.9994929 -0.6533058  1.999504  -6.2320685]]
Iteration 500 of 1000: loss=0.286 " + "l1=0.256" + "l2=0.0301 f=-0.719 shape=(1, 9000, 1)
logits [[ 1.9565392 -0.5944469  1.9634343 -6.201911 ]]
Iteration 600 of 1000: loss=0.281 " + "l1=0.249" + "l2=0.0324 f=-0.717 shape=(1, 9000, 1)
logits [[ 1.9191874 -0.5497059  1.9406505 -6.1786466]]
Iteration 700 of 1000: loss=0.278 " + "l1=0.243" + "l2=0.0351 f=-0.715 shape=(1, 9000, 1)
logits [[ 1.8816605 -0.506681   1.9204559 -6.1564217]]
Iteration 800 of 1000: loss=0.274 " + "l1=0.236" + "l2=0.038 f=-0.715 shape=(1, 9000, 1)
logits [[ 1.8390932 -0.4634166  1.9007071 -6.137734 ]]
Iteration 900 of 1000: loss=0.271 " + "l1=0.231" + "l2=0.0405 f=-0.716 shape=(1, 9000, 1)
logits [[ 1.7985585 -0.4244194  1.8819782 -6.1216183]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.48 " + "l1=3.48" + "l2=0 f=-0.741 shape=(1, 9000, 1)
logits [[ 2.3465958 -1.1366191  2.2601414 -6.4326415]]
Iteration 100 of 1000: loss=1.27 " + "l1=0.415" + "l2=0.856 f=-0.742 shape=(1, 9000, 1)
logits [[ 0.37996283  0.957345    1.3719319  -5.677883  ]]
Iteration 200 of 1000: loss=0.871 " + "l1=0" + "l2=0.871 f=-0.763 shape=(1, 9000, 1)
logits [[ 0.00795466  1.2424457   1.238156   -5.540692  ]]
Iteration 300 of 1000: loss=0.756 " + "l1=0.00348" + "l2=0.753 f=-0.746 shape=(1, 9000, 1)
logits [[-0.01464706  1.2169884   1.2204715  -5.4081593 ]]
Iteration 400 of 1000: loss=0.701 " + "l1=0" + "l2=0.701 f=-0.733 shape=(1, 9000, 1)
logits [[-0.03202361  1.2056432   1.2027985  -5.3066616 ]]
Iteration 500 of 1000: loss=0.664 " + "l1=0.00606" + "l2=0.658 f=-0.724 shape=(1, 9000, 1)
logits [[-0.03004008  1.1834084   1.1894656  -5.237948  ]]
Iteration 600 of 1000: loss=0.631 " + "l1=0.00191" + "l2=0.63 f=-0.718 shape=(1, 9000, 1)
logits [[-0.03991612  1.1740359   1.1759418  -5.1806107 ]]
Iteration 700 of 1000: loss=0.603 " + "l1=0.00624" + "l2=0.597 f=-0.712 shape=(1, 9000, 1)
logits [[-0.03676855  1.1598058   1.1660488  -5.1385674 ]]
Iteration 800 of 1000: loss=0.573 " + "l1=0.00232" + "l2=0.571 f=-0.701 shape=(1, 9000, 1)
logits [[-0.01846705  1.1483934   1.1507109  -5.0849853 ]]
Iteration 900 of 1000: loss=0.542 " + "l1=0.00344" + "l2=0.538 f=-0.694 shape=(1, 9000, 1)
logits [[-0.01514754  1.1299897   1.1334342  -5.0255375 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.92 " + "l1=1.92" + "l2=0 f=-0.741 shape=(1, 9000, 1)
logits [[ 2.3465958 -1.1366191  2.2601414 -6.4326415]]
Iteration 100 of 1000: loss=1.1 " + "l1=0.733" + "l2=0.371 f=-0.719 shape=(1, 9000, 1)
logits [[ 1.1309056  0.280563   1.6132088 -5.9003386]]
Iteration 200 of 1000: loss=0.875 " + "l1=0.392" + "l2=0.483 f=-0.736 shape=(1, 9000, 1)
logits [[ 0.6870795  0.705306   1.4176178 -5.7535906]]
Iteration 300 of 1000: loss=0.764 " + "l1=0.237" + "l2=0.527 f=-0.721 shape=(1, 9000, 1)
logits [[ 0.4901974  0.8694019  1.2996069 -5.5414147]]
Iteration 400 of 1000: loss=0.673 " + "l1=0.122" + "l2=0.551 f=-0.712 shape=(1, 9000, 1)
logits [[ 0.2835601  1.002269   1.2245294 -5.3579917]]
Iteration 500 of 1000: loss=0.597 " + "l1=0.0232" + "l2=0.574 f=-0.707 shape=(1, 9000, 1)
logits [[ 0.04621457  1.1416541   1.1839259  -5.1998    ]]
Iteration 600 of 1000: loss=0.554 " + "l1=0.00698" + "l2=0.547 f=-0.706 shape=(1, 9000, 1)
logits [[-0.03332118  1.1637416   1.1764387  -5.13195   ]]
Iteration 700 of 1000: loss=0.526 " + "l1=0" + "l2=0.526 f=-0.704 shape=(1, 9000, 1)
logits [[-0.05549397  1.1749357   1.1711425  -5.1054673 ]]
Iteration 800 of 1000: loss=0.504 " + "l1=0.00291" + "l2=0.501 f=-0.698 shape=(1, 9000, 1)
logits [[-0.04374189  1.1644626   1.1697549  -5.083354  ]]
Iteration 900 of 1000: loss=0.487 " + "l1=0.000271" + "l2=0.486 f=-0.694 shape=(1, 9000, 1)
logits [[-0.05034653  1.1711575   1.17165    -5.067162  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.13 " + "l1=1.13" + "l2=0 f=-0.741 shape=(1, 9000, 1)
logits [[ 2.3465958 -1.1366191  2.2601414 -6.4326415]]
Iteration 100 of 1000: loss=0.829 " + "l1=0.68" + "l2=0.149 f=-0.707 shape=(1, 9000, 1)
logits [[ 1.6860925  -0.27386227  1.81899    -6.0609646 ]]
Iteration 200 of 1000: loss=0.717 " + "l1=0.504" + "l2=0.214 f=-0.707 shape=(1, 9000, 1)
logits [[ 1.3631612   0.09999362  1.6498749  -5.9400945 ]]
Iteration 300 of 1000: loss=0.65 " + "l1=0.42" + "l2=0.23 f=-0.698 shape=(1, 9000, 1)
logits [[ 1.1763954  0.262789   1.5536466 -5.78364  ]]
Iteration 400 of 1000: loss=0.604 " + "l1=0.375" + "l2=0.229 f=-0.69 shape=(1, 9000, 1)
logits [[ 1.0557957   0.34604815  1.5007308  -5.6624594 ]]
Iteration 500 of 1000: loss=0.573 " + "l1=0.334" + "l2=0.239 f=-0.688 shape=(1, 9000, 1)
logits [[ 0.9227919   0.43837398  1.4661075  -5.57729   ]]
Iteration 600 of 1000: loss=0.547 " + "l1=0.308" + "l2=0.239 f=-0.68 shape=(1, 9000, 1)
logits [[ 0.86883265  0.48181286  1.4293164  -5.497984  ]]
Iteration 700 of 1000: loss=0.522 " + "l1=0.282" + "l2=0.24 f=-0.675 shape=(1, 9000, 1)
logits [[ 0.7968053   0.53054684  1.3972855  -5.425307  ]]
Iteration 800 of 1000: loss=0.501 " + "l1=0.249" + "l2=0.252 f=-0.67 shape=(1, 9000, 1)
logits [[ 0.70852906  0.5991002   1.3651584  -5.3531294 ]]
Iteration 900 of 1000: loss=0.483 " + "l1=0.221" + "l2=0.262 f=-0.664 shape=(1, 9000, 1)
logits [[ 0.6520074  0.6545578  1.3334974 -5.294887 ]]
--- 281.36420798301697 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.000865 " + "l1=0.000865" + "l2=0 f=-0.741 shape=(1, 9000, 1)
logits [[ 2.3465958 -1.1366191  2.2601414 -6.4326415]]
Iteration 100 of 1000: loss=0.000662 " + "l1=0.000442" + "l2=0.00022 f=-0.743 shape=(1, 9000, 1)
logits [[ 2.310503  -1.1295105  2.2663262 -6.4211493]]
Iteration 200 of 1000: loss=0.000608 " + "l1=0.000435" + "l2=0.000174 f=-0.744 shape=(1, 9000, 1)
logits [[ 2.3099117 -1.129117   2.2664616 -6.4216413]]
Iteration 300 of 1000: loss=0.00059 " + "l1=0.000389" + "l2=0.000201 f=-0.744 shape=(1, 9000, 1)
logits [[ 2.3060489 -1.1281782  2.26715   -6.420718 ]]
Iteration 400 of 1000: loss=0.000607 " + "l1=0.000339" + "l2=0.000268 f=-0.744 shape=(1, 9000, 1)
logits [[ 2.3017952 -1.127257   2.2679076 -6.419523 ]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.000432 " + "l1=0.000432" + "l2=0 f=-0.741 shape=(1, 9000, 1)
logits [[ 2.3465958 -1.1366191  2.2601414 -6.4326415]]
Iteration 100 of 1000: loss=0.000401 " + "l1=0.000284" + "l2=0.000117 f=-0.743 shape=(1, 9000, 1)
logits [[ 2.3212473 -1.1320174  2.2644904 -6.424788 ]]
Iteration 200 of 1000: loss=0.000371 " + "l1=0.000303" + "l2=6.88e-05 f=-0.743 shape=(1, 9000, 1)
logits [[ 2.3245132 -1.1324058  2.2639787 -6.426271 ]]
Iteration 300 of 1000: loss=0.000383 " + "l1=0.0003" + "l2=8.26e-05 f=-0.743 shape=(1, 9000, 1)
logits [[ 2.3240814 -1.1320986  2.2640834 -6.4262557]]
const [0.0075]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.000648 " + "l1=0.000648" + "l2=0 f=-0.741 shape=(1, 9000, 1)
logits [[ 2.3465958 -1.1366191  2.2601414 -6.4326415]]
Iteration 100 of 1000: loss=0.000541 " + "l1=0.000377" + "l2=0.000165 f=-0.743 shape=(1, 9000, 1)
logits [[ 2.3156474 -1.1306791  2.2654333 -6.422795 ]]
Iteration 200 of 1000: loss=0.000499 " + "l1=0.00039" + "l2=0.000109 f=-0.743 shape=(1, 9000, 1)
logits [[ 2.3172007 -1.130763   2.265227  -6.423905 ]]
Iteration 300 of 1000: loss=0.00049 " + "l1=0.000372" + "l2=0.000118 f=-0.743 shape=(1, 9000, 1)
logits [[ 2.3151717 -1.130169   2.2656326 -6.42352  ]]
Iteration 400 of 1000: loss=0.000508 " + "l1=0.000347" + "l2=0.000161 f=-0.743 shape=(1, 9000, 1)
logits [[ 2.3124259 -1.1295186  2.2661347 -6.422837 ]]
const [0.00625]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00054 " + "l1=0.00054" + "l2=0 f=-0.741 shape=(1, 9000, 1)
logits [[ 2.3465958 -1.1366191  2.2601414 -6.4326415]]
Iteration 100 of 1000: loss=0.000473 " + "l1=0.000333" + "l2=0.000141 f=-0.743 shape=(1, 9000, 1)
logits [[ 2.3181968 -1.1312904  2.264975  -6.423618 ]]
Iteration 200 of 1000: loss=0.000446 " + "l1=0.000351" + "l2=9.49e-05 f=-0.743 shape=(1, 9000, 1)
logits [[ 2.3207512 -1.1315624  2.264625  -6.424993 ]]
Iteration 300 of 1000: loss=0.000444 " + "l1=0.000342" + "l2=0.000103 f=-0.743 shape=(1, 9000, 1)
logits [[ 2.31955   -1.1311268  2.264866  -6.4248247]]
Iteration 400 of 1000: loss=0.000432 " + "l1=0.000327" + "l2=0.000105 f=-0.743 shape=(1, 9000, 1)
logits [[ 2.3175087 -1.1306151  2.2652435 -6.4243164]]
Iteration 500 of 1000: loss=0.000478 " + "l1=0.00031" + "l2=0.000167 f=-0.743 shape=(1, 9000, 1)
logits [[ 2.3152616 -1.1300869  2.2656276 -6.423756 ]]
const [0.006875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.000594 " + "l1=0.000594" + "l2=0 f=-0.741 shape=(1, 9000, 1)
logits [[ 2.3465958 -1.1366191  2.2601414 -6.4326415]]
Iteration 100 of 1000: loss=0.000508 " + "l1=0.000356" + "l2=0.000152 f=-0.743 shape=(1, 9000, 1)
logits [[ 2.3169498 -1.1309583  2.2651958 -6.4232197]]
Iteration 200 of 1000: loss=0.000477 " + "l1=0.000372" + "l2=0.000105 f=-0.743 shape=(1, 9000, 1)
logits [[ 2.3189826 -1.131156   2.2649243 -6.424454 ]]
Iteration 300 of 1000: loss=0.000469 " + "l1=0.000358" + "l2=0.000111 f=-0.743 shape=(1, 9000, 1)
logits [[ 2.317321  -1.1306542  2.265263  -6.424171 ]]
Iteration 400 of 1000: loss=0.000495 " + "l1=0.000339" + "l2=0.000157 f=-0.743 shape=(1, 9000, 1)
logits [[ 2.3149533 -1.130066   2.2656982 -6.4235716]]
--- 125.8155517578125 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0878 " + "l1=0.0878" + "l2=0 f=-0.741 shape=(1, 9000, 1)
logits [[ 2.3465958 -1.1366191  2.2601414 -6.4326415]]
Iteration 100 of 1000: loss=0.0872 " + "l1=0.0867" + "l2=0.000435 f=-0.736 shape=(1, 9000, 1)
logits [[ 2.2976003 -1.118576   2.2505028 -6.375397 ]]
Iteration 200 of 1000: loss=0.087 " + "l1=0.0866" + "l2=0.000421 f=-0.736 shape=(1, 9000, 1)
logits [[ 2.291084  -1.1152647  2.249001  -6.368178 ]]
Iteration 300 of 1000: loss=0.0869 " + "l1=0.0864" + "l2=0.000518 f=-0.735 shape=(1, 9000, 1)
logits [[ 2.281971  -1.111029   2.2464676 -6.356714 ]]
Iteration 400 of 1000: loss=0.0868 " + "l1=0.0862" + "l2=0.000633 f=-0.734 shape=(1, 9000, 1)
logits [[ 2.2729428 -1.1066618  2.2436433 -6.345339 ]]
Iteration 500 of 1000: loss=0.0867 " + "l1=0.086" + "l2=0.000751 f=-0.733 shape=(1, 9000, 1)
logits [[ 2.264625  -1.1027572  2.2410226 -6.334856 ]]
Iteration 600 of 1000: loss=0.0867 " + "l1=0.0858" + "l2=0.0009 f=-0.732 shape=(1, 9000, 1)
logits [[ 2.2570136 -1.0990921  2.238602  -6.325382 ]]
Iteration 700 of 1000: loss=0.0867 " + "l1=0.0857" + "l2=0.001 f=-0.732 shape=(1, 9000, 1)
logits [[ 2.250026  -1.09582    2.2363992 -6.3170676]]
Iteration 800 of 1000: loss=0.0867 " + "l1=0.0855" + "l2=0.00114 f=-0.731 shape=(1, 9000, 1)
logits [[ 2.2436361 -1.0928289  2.2344618 -6.3098917]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.878 " + "l1=0.878" + "l2=0 f=-0.741 shape=(1, 9000, 1)
logits [[ 2.3465958 -1.1366191  2.2601414 -6.4326415]]
Iteration 100 of 1000: loss=0.84 " + "l1=0.826" + "l2=0.0137 f=-0.702 shape=(1, 9000, 1)
logits [[ 2.1634982 -1.0361993  2.1638794 -6.098322 ]]
Iteration 200 of 1000: loss=0.825 " + "l1=0.804" + "l2=0.0213 f=-0.678 shape=(1, 9000, 1)
logits [[ 2.1018727  -0.98583317  2.1066813  -5.9329243 ]]
Iteration 300 of 1000: loss=0.813 " + "l1=0.784" + "l2=0.0293 f=-0.656 shape=(1, 9000, 1)
logits [[ 2.0487525 -0.9415362  2.052129  -5.784779 ]]
Iteration 400 of 1000: loss=0.803 " + "l1=0.766" + "l2=0.0373 f=-0.639 shape=(1, 9000, 1)
logits [[ 1.990289   -0.90147054  2.006731   -5.6504564 ]]
Iteration 500 of 1000: loss=0.795 " + "l1=0.75" + "l2=0.045 f=-0.624 shape=(1, 9000, 1)
logits [[ 1.9329487 -0.8603673  1.9654009 -5.532019 ]]
Iteration 600 of 1000: loss=0.788 " + "l1=0.736" + "l2=0.0522 f=-0.611 shape=(1, 9000, 1)
logits [[ 1.8830994 -0.8228278  1.9281716 -5.4329414]]
Iteration 700 of 1000: loss=0.783 " + "l1=0.725" + "l2=0.0582 f=-0.602 shape=(1, 9000, 1)
logits [[ 1.8409092  -0.79733855  1.8982526  -5.3495317 ]]
Iteration 800 of 1000: loss=0.778 " + "l1=0.714" + "l2=0.0641 f=-0.594 shape=(1, 9000, 1)
logits [[ 1.8012272 -0.7756238  1.8713862 -5.2713737]]
Iteration 900 of 1000: loss=0.773 " + "l1=0.703" + "l2=0.0701 f=-0.586 shape=(1, 9000, 1)
logits [[ 1.7560748 -0.7520572  1.8427676 -5.1901937]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.78 " + "l1=8.78" + "l2=0 f=-0.741 shape=(1, 9000, 1)
logits [[ 2.3465958 -1.1366191  2.2601414 -6.4326415]]
Iteration 100 of 1000: loss=5.62 " + "l1=4.22" + "l2=1.4 f=-0.397 shape=(1, 9000, 1)
logits [[ 0.5103698  -0.10048347  1.110741   -3.110245  ]]
Iteration 200 of 1000: loss=4.26 " + "l1=2.38" + "l2=1.88 f=-0.306 shape=(1, 9000, 1)
logits [[-0.28808472  0.13584284  0.6550959  -1.724893  ]]
Iteration 300 of 1000: loss=3.26 " + "l1=1.21" + "l2=2.05 f=-0.274 shape=(1, 9000, 1)
logits [[-0.79111016  0.13155128  0.38808382 -0.8235764 ]]
Iteration 400 of 1000: loss=2.37 " + "l1=0.166" + "l2=2.2 f=-0.239 shape=(1, 9000, 1)
logits [[-1.0305752  -0.10312201  0.17220075  0.00582788]]
Iteration 500 of 1000: loss=1.73 " + "l1=0.00371" + "l2=1.72 f=-0.181 shape=(1, 9000, 1)
logits [[-0.9109287 -0.2426322  0.2171441  0.2134305]]
Iteration 600 of 1000: loss=1.47 " + "l1=0.00208" + "l2=1.47 f=-0.169 shape=(1, 9000, 1)
logits [[-0.869858   -0.32315394  0.2592873   0.25720417]]
Iteration 700 of 1000: loss=1.29 " + "l1=0" + "l2=1.29 f=-0.172 shape=(1, 9000, 1)
logits [[-0.8757887  -0.39607766  0.28777567  0.29576036]]
Iteration 800 of 1000: loss=1.16 " + "l1=0.0189" + "l2=1.14 f=-0.178 shape=(1, 9000, 1)
logits [[-0.878433   -0.4434161   0.31461057  0.29570866]]
Iteration 900 of 1000: loss=1.05 " + "l1=0" + "l2=1.05 f=-0.188 shape=(1, 9000, 1)
logits [[-0.92668885 -0.4777712   0.32349727  0.32740638]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.83 " + "l1=4.83" + "l2=0 f=-0.741 shape=(1, 9000, 1)
logits [[ 2.3465958 -1.1366191  2.2601414 -6.4326415]]
Iteration 100 of 1000: loss=3.75 " + "l1=3.22" + "l2=0.53 f=-0.502 shape=(1, 9000, 1)
logits [[ 1.1923828 -0.4220472  1.5343187 -4.312955 ]]
Iteration 200 of 1000: loss=3.23 " + "l1=2.47" + "l2=0.755 f=-0.397 shape=(1, 9000, 1)
logits [[ 0.7146047  -0.15353951  1.17187    -3.3206449 ]]
Iteration 300 of 1000: loss=2.76 " + "l1=1.76" + "l2=0.998 f=-0.327 shape=(1, 9000, 1)
logits [[ 0.10343666  0.01741424  0.88308674 -2.3124557 ]]
Iteration 400 of 1000: loss=2.31 " + "l1=1.24" + "l2=1.07 f=-0.299 shape=(1, 9000, 1)
logits [[-0.24580353 -0.03315828  0.668428   -1.5852445 ]]
Iteration 500 of 1000: loss=2.02 " + "l1=0.915" + "l2=1.11 f=-0.28 shape=(1, 9000, 1)
logits [[-0.41634485 -0.19393241  0.5771921  -1.086085  ]]
Iteration 600 of 1000: loss=1.77 " + "l1=0.659" + "l2=1.11 f=-0.259 shape=(1, 9000, 1)
logits [[-0.56742847 -0.3276462   0.52896154 -0.66967946]]
Iteration 700 of 1000: loss=1.47 " + "l1=0.351" + "l2=1.12 f=-0.203 shape=(1, 9000, 1)
logits [[-0.6909636  -0.42446238  0.46959445 -0.16771138]]
Iteration 800 of 1000: loss=1.11 " + "l1=0.00691" + "l2=1.1 f=-0.136 shape=(1, 9000, 1)
logits [[-0.7743269  -0.61009264  0.4264859   0.4139304 ]]
Iteration 900 of 1000: loss=0.881 " + "l1=0.00185" + "l2=0.879 f=-0.14 shape=(1, 9000, 1)
logits [[-0.80227643 -0.7102341   0.47817993  0.47481698]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.85 " + "l1=2.85" + "l2=0 f=-0.741 shape=(1, 9000, 1)
logits [[ 2.3465958 -1.1366191  2.2601414 -6.4326415]]
Iteration 100 of 1000: loss=2.47 " + "l1=2.27" + "l2=0.195 f=-0.587 shape=(1, 9000, 1)
logits [[ 1.6918515 -0.6808176  1.8150876 -5.1760263]]
Iteration 200 of 1000: loss=2.28 " + "l1=2" + "l2=0.279 f=-0.519 shape=(1, 9000, 1)
logits [[ 1.3534741 -0.5124997  1.6255364 -4.5416393]]
Iteration 300 of 1000: loss=2.14 " + "l1=1.78" + "l2=0.359 f=-0.465 shape=(1, 9000, 1)
logits [[ 1.0743082 -0.3670321  1.452644  -4.021552 ]]
Iteration 400 of 1000: loss=2 " + "l1=1.56" + "l2=0.441 f=-0.416 shape=(1, 9000, 1)
logits [[ 0.7958689  -0.23213981  1.2910428  -3.516822  ]]
Iteration 500 of 1000: loss=1.82 " + "l1=1.31" + "l2=0.512 f=-0.351 shape=(1, 9000, 1)
logits [[ 0.57373697 -0.18267147  1.1147777  -2.9084954 ]]
Iteration 600 of 1000: loss=1.65 " + "l1=1.08" + "l2=0.575 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.33307043 -0.21328032  0.94678736 -2.360946  ]]
Iteration 700 of 1000: loss=1.54 " + "l1=0.94" + "l2=0.597 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.165476   -0.27463493  0.8923684  -1.9999473 ]]
Iteration 800 of 1000: loss=1.44 " + "l1=0.828" + "l2=0.609 f=-0.304 shape=(1, 9000, 1)
logits [[-0.02397556 -0.36311445  0.8595605  -1.6884178 ]]
Iteration 900 of 1000: loss=1.34 " + "l1=0.705" + "l2=0.639 f=-0.305 shape=(1, 9000, 1)
logits [[-0.2136508  -0.44482797  0.8048314  -1.365233  ]]
--- 282.732102394104 seconds ---
Adv result:3
Loading record A06900
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.084 " + "l1=0.084" + "l2=0 f=-0.688 shape=(1, 9000, 1)
logits [[ 5.914447  -2.4824312  3.0473266 -9.23017  ]]
Iteration 100 of 1000: loss=0.0834 " + "l1=0.083" + "l2=0.000389 f=-0.687 shape=(1, 9000, 1)
logits [[ 5.8642697 -2.43848    3.0198314 -9.194581 ]]
Iteration 200 of 1000: loss=0.0833 " + "l1=0.0829" + "l2=0.000403 f=-0.687 shape=(1, 9000, 1)
logits [[ 5.8565774 -2.428463   3.0122104 -9.188717 ]]
Iteration 300 of 1000: loss=0.0831 " + "l1=0.0826" + "l2=0.000517 f=-0.687 shape=(1, 9000, 1)
logits [[ 5.845159  -2.4154992  3.0029898 -9.181258 ]]
Iteration 400 of 1000: loss=0.083 " + "l1=0.0824" + "l2=0.000645 f=-0.687 shape=(1, 9000, 1)
logits [[ 5.8338766 -2.4029126  2.9941928 -9.174229 ]]
Iteration 500 of 1000: loss=0.0829 " + "l1=0.0821" + "l2=0.000813 f=-0.687 shape=(1, 9000, 1)
logits [[ 5.821283  -2.3888059  2.984693  -9.167079 ]]
Iteration 600 of 1000: loss=0.0828 " + "l1=0.0818" + "l2=0.00103 f=-0.688 shape=(1, 9000, 1)
logits [[ 5.8083534 -2.3738823  2.9749866 -9.160415 ]]
Iteration 700 of 1000: loss=0.0828 " + "l1=0.0816" + "l2=0.00118 f=-0.688 shape=(1, 9000, 1)
logits [[ 5.797208  -2.360986   2.9668849 -9.155068 ]]
Iteration 800 of 1000: loss=0.0828 " + "l1=0.0814" + "l2=0.00143 f=-0.688 shape=(1, 9000, 1)
logits [[ 5.7867794 -2.3491201  2.9593234 -9.150158 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.84 " + "l1=0.84" + "l2=0 f=-0.688 shape=(1, 9000, 1)
logits [[ 5.914447  -2.4824312  3.0473266 -9.23017  ]]
Iteration 100 of 1000: loss=0.756 " + "l1=0.701" + "l2=0.0558 f=-0.702 shape=(1, 9000, 1)
logits [[ 5.171593  -1.8340179  2.6581404 -8.802806 ]]
Iteration 200 of 1000: loss=0.685 " + "l1=0.575" + "l2=0.111 f=-0.755 shape=(1, 9000, 1)
logits [[ 4.4337583 -1.3123851  2.3749774 -8.515815 ]]
Iteration 300 of 1000: loss=0.625 " + "l1=0.462" + "l2=0.164 f=-0.804 shape=(1, 9000, 1)
logits [[ 3.735067  -0.8820286  2.174297  -8.245295 ]]
Iteration 400 of 1000: loss=0.577 " + "l1=0.379" + "l2=0.198 f=-0.829 shape=(1, 9000, 1)
logits [[ 3.2262373 -0.5652816  2.044949  -8.02283  ]]
Iteration 500 of 1000: loss=0.527 " + "l1=0.296" + "l2=0.23 f=-0.849 shape=(1, 9000, 1)
logits [[ 2.7163846  -0.24840038  1.9204206  -7.785968  ]]
Iteration 600 of 1000: loss=0.457 " + "l1=0.17" + "l2=0.287 f=-0.887 shape=(1, 9000, 1)
logits [[ 1.9294263  0.2276931  1.7717298 -7.4752107]]
Iteration 700 of 1000: loss=0.404 " + "l1=0.133" + "l2=0.271 f=-0.89 shape=(1, 9000, 1)
logits [[ 1.6907952  0.3582358  1.6898324 -7.2978454]]
Iteration 800 of 1000: loss=0.37 " + "l1=0.124" + "l2=0.246 f=-0.886 shape=(1, 9000, 1)
logits [[ 1.6354996   0.39239413  1.6328334  -7.2053022 ]]
Iteration 900 of 1000: loss=0.346 " + "l1=0.118" + "l2=0.228 f=-0.881 shape=(1, 9000, 1)
logits [[ 1.5820148   0.41245872  1.5892314  -7.109438  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.4 " + "l1=8.4" + "l2=0 f=-0.688 shape=(1, 9000, 1)
logits [[ 5.914447  -2.4824312  3.0473266 -9.23017  ]]
Iteration 100 of 1000: loss=1.45 " + "l1=0.0195" + "l2=1.43 f=-1.04 shape=(1, 9000, 1)
logits [[ 0.35418525  1.4581357   1.4776077  -7.443365  ]]
Iteration 200 of 1000: loss=0.892 " + "l1=0" + "l2=0.892 f=-0.993 shape=(1, 9000, 1)
logits [[ 0.5845209  1.3379443  1.3370154 -7.23134  ]]
Iteration 300 of 1000: loss=0.722 " + "l1=0" + "l2=0.722 f=-0.967 shape=(1, 9000, 1)
logits [[ 0.6172098  1.2861751  1.2571468 -7.0304055]]
Iteration 400 of 1000: loss=0.631 " + "l1=0" + "l2=0.631 f=-0.951 shape=(1, 9000, 1)
logits [[ 0.68353164  1.2143301   1.2063159  -6.9082284 ]]
Iteration 500 of 1000: loss=0.568 " + "l1=0" + "l2=0.568 f=-0.941 shape=(1, 9000, 1)
logits [[ 0.7129515  1.1677352  1.1668115 -6.812717 ]]
Iteration 600 of 1000: loss=0.533 " + "l1=0" + "l2=0.533 f=-0.94 shape=(1, 9000, 1)
logits [[ 0.6738469  1.1665272  1.1343011 -6.7348185]]
Iteration 700 of 1000: loss=0.494 " + "l1=0.00531" + "l2=0.488 f=-0.922 shape=(1, 9000, 1)
logits [[ 0.7486956  1.1163337  1.1216449 -6.6745567]]
Iteration 800 of 1000: loss=0.463 " + "l1=0" + "l2=0.463 f=-0.909 shape=(1, 9000, 1)
logits [[ 0.7331853  1.1315266  1.098056  -6.600473 ]]
Iteration 900 of 1000: loss=0.433 " + "l1=0.00788" + "l2=0.426 f=-0.886 shape=(1, 9000, 1)
logits [[ 0.8228553  1.0785512  1.0864359 -6.5322824]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.62 " + "l1=4.62" + "l2=0 f=-0.688 shape=(1, 9000, 1)
logits [[ 5.914447  -2.4824312  3.0473266 -9.23017  ]]
Iteration 100 of 1000: loss=1.46 " + "l1=0.555" + "l2=0.904 f=-0.938 shape=(1, 9000, 1)
logits [[ 1.5592206  0.6516136  1.6615912 -7.625865 ]]
Iteration 200 of 1000: loss=0.793 " + "l1=0" + "l2=0.793 f=-0.99 shape=(1, 9000, 1)
logits [[ 0.6162263  1.3486799  1.3395616 -7.2663946]]
Iteration 300 of 1000: loss=0.631 " + "l1=0" + "l2=0.631 f=-0.968 shape=(1, 9000, 1)
logits [[ 0.6315926  1.2610407  1.2449819 -7.007749 ]]
Iteration 400 of 1000: loss=0.561 " + "l1=0.00206" + "l2=0.559 f=-0.95 shape=(1, 9000, 1)
logits [[ 0.6654272  1.1787789  1.1825305 -6.826109 ]]
Iteration 500 of 1000: loss=0.517 " + "l1=0.0043" + "l2=0.513 f=-0.936 shape=(1, 9000, 1)
logits [[ 0.683831   1.1438808  1.1517066 -6.72419  ]]
Iteration 600 of 1000: loss=0.477 " + "l1=0.000129" + "l2=0.477 f=-0.925 shape=(1, 9000, 1)
logits [[ 0.67977107  1.1275929   1.1278269  -6.633712  ]]
Iteration 700 of 1000: loss=0.44 " + "l1=0" + "l2=0.44 f=-0.909 shape=(1, 9000, 1)
logits [[ 0.70581245  1.1048182   1.1027902  -6.547592  ]]
Iteration 800 of 1000: loss=0.407 " + "l1=0" + "l2=0.407 f=-0.889 shape=(1, 9000, 1)
logits [[ 0.72752476  1.0931141   1.0783602  -6.4545093 ]]
Iteration 900 of 1000: loss=0.369 " + "l1=0" + "l2=0.369 f=-0.859 shape=(1, 9000, 1)
logits [[ 0.8192255  1.047601   1.0466812 -6.35073  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.73 " + "l1=2.73" + "l2=0 f=-0.688 shape=(1, 9000, 1)
logits [[ 5.914447  -2.4824312  3.0473266 -9.23017  ]]
Iteration 100 of 1000: loss=1.23 " + "l1=0.522" + "l2=0.711 f=-0.912 shape=(1, 9000, 1)
logits [[ 1.8940499   0.29836237  1.9052896  -7.7459016 ]]
Iteration 200 of 1000: loss=0.856 " + "l1=0.276" + "l2=0.58 f=-0.928 shape=(1, 9000, 1)
logits [[ 1.5108949   0.72664446  1.5750966  -7.5239267 ]]
Iteration 300 of 1000: loss=0.657 " + "l1=0.0517" + "l2=0.606 f=-0.964 shape=(1, 9000, 1)
logits [[ 0.8041741  1.1580149  1.3171185 -7.1370735]]
Iteration 400 of 1000: loss=0.549 " + "l1=0.00996" + "l2=0.539 f=-0.954 shape=(1, 9000, 1)
logits [[ 0.6264725  1.1877564  1.2184072 -6.8468294]]
Iteration 500 of 1000: loss=0.489 " + "l1=0.00496" + "l2=0.484 f=-0.938 shape=(1, 9000, 1)
logits [[ 0.6439808  1.1465968  1.1618736 -6.70292  ]]
Iteration 600 of 1000: loss=0.441 " + "l1=0" + "l2=0.441 f=-0.926 shape=(1, 9000, 1)
logits [[ 0.6155584  1.149242   1.141695  -6.6112504]]
Iteration 700 of 1000: loss=0.402 " + "l1=0" + "l2=0.402 f=-0.913 shape=(1, 9000, 1)
logits [[ 0.6333511  1.1284056  1.1206445 -6.533783 ]]
Iteration 800 of 1000: loss=0.367 " + "l1=0" + "l2=0.367 f=-0.889 shape=(1, 9000, 1)
logits [[ 0.6628863  1.1145958  1.097779  -6.4320755]]
Iteration 900 of 1000: loss=0.329 " + "l1=0" + "l2=0.329 f=-0.865 shape=(1, 9000, 1)
logits [[ 0.716223   1.0752041  1.0679876 -6.319252 ]]
--- 282.0513961315155 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0287 " + "l1=0.0287" + "l2=0 f=-0.688 shape=(1, 9000, 1)
logits [[ 5.914447  -2.4824312  3.0473266 -9.23017  ]]
Iteration 100 of 1000: loss=0.0285 " + "l1=0.0284" + "l2=0.00018 f=-0.688 shape=(1, 9000, 1)
logits [[ 5.891657  -2.4785676  3.055023  -9.2193985]]
Iteration 200 of 1000: loss=0.0285 " + "l1=0.0284" + "l2=0.000127 f=-0.688 shape=(1, 9000, 1)
logits [[ 5.893565  -2.478461   3.0553606 -9.221807 ]]
Iteration 300 of 1000: loss=0.0285 " + "l1=0.0284" + "l2=0.000169 f=-0.688 shape=(1, 9000, 1)
logits [[ 5.892286  -2.4778748  3.0563784 -9.2221155]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.287 " + "l1=0.287" + "l2=0 f=-0.688 shape=(1, 9000, 1)
logits [[ 5.914447  -2.4824312  3.0473266 -9.23017  ]]
Iteration 100 of 1000: loss=0.274 " + "l1=0.266" + "l2=0.00821 f=-0.688 shape=(1, 9000, 1)
logits [[ 5.748643  -2.445671   3.0913827 -9.144607 ]]
Iteration 200 of 1000: loss=0.27 " + "l1=0.258" + "l2=0.0115 f=-0.689 shape=(1, 9000, 1)
logits [[ 5.693822  -2.4248595  3.110497  -9.1336155]]
Iteration 300 of 1000: loss=0.266 " + "l1=0.252" + "l2=0.0137 f=-0.689 shape=(1, 9000, 1)
logits [[ 5.646615  -2.4033902  3.1216917 -9.12007  ]]
Iteration 400 of 1000: loss=0.263 " + "l1=0.247" + "l2=0.0157 f=-0.689 shape=(1, 9000, 1)
logits [[ 5.603761  -2.3828216  3.1295547 -9.105243 ]]
Iteration 500 of 1000: loss=0.26 " + "l1=0.243" + "l2=0.0176 f=-0.689 shape=(1, 9000, 1)
logits [[ 5.5573316 -2.3609998  3.1311605 -9.084049 ]]
Iteration 600 of 1000: loss=0.257 " + "l1=0.237" + "l2=0.0202 f=-0.69 shape=(1, 9000, 1)
logits [[ 5.5034523 -2.3394668  3.1383185 -9.062951 ]]
Iteration 700 of 1000: loss=0.252 " + "l1=0.229" + "l2=0.0231 f=-0.692 shape=(1, 9000, 1)
logits [[ 5.43967   -2.3173714  3.1477213 -9.038025 ]]
Iteration 800 of 1000: loss=0.248 " + "l1=0.223" + "l2=0.025 f=-0.694 shape=(1, 9000, 1)
logits [[ 5.3671746 -2.284176   3.1350129 -8.994904 ]]
Iteration 900 of 1000: loss=0.243 " + "l1=0.214" + "l2=0.0287 f=-0.698 shape=(1, 9000, 1)
logits [[ 5.2549834 -2.2310004  3.1105149 -8.927882 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.87 " + "l1=2.87" + "l2=0 f=-0.688 shape=(1, 9000, 1)
logits [[ 5.914447  -2.4824312  3.0473266 -9.23017  ]]
Iteration 100 of 1000: loss=0.684 " + "l1=0" + "l2=0.684 f=-0.84 shape=(1, 9000, 1)
logits [[ 2.7622347 -1.1752813  2.7830606 -7.7291093]]
Iteration 200 of 1000: loss=0.498 " + "l1=0.0281" + "l2=0.47 f=-0.863 shape=(1, 9000, 1)
logits [[ 2.6689537  -0.97762173  2.640885   -7.784102  ]]
Iteration 300 of 1000: loss=0.416 " + "l1=0" + "l2=0.416 f=-0.868 shape=(1, 9000, 1)
logits [[ 2.5717492 -0.8823976  2.5777504 -7.74093  ]]
Iteration 400 of 1000: loss=0.379 " + "l1=0" + "l2=0.379 f=-0.869 shape=(1, 9000, 1)
logits [[ 2.529995  -0.8447696  2.5472777 -7.7091537]]
Iteration 500 of 1000: loss=0.361 " + "l1=0" + "l2=0.361 f=-0.871 shape=(1, 9000, 1)
logits [[ 2.461926  -0.7921172  2.513756  -7.6689477]]
Iteration 600 of 1000: loss=0.34 " + "l1=0" + "l2=0.34 f=-0.866 shape=(1, 9000, 1)
logits [[ 2.4191318  -0.77736133  2.498314   -7.605996  ]]
Iteration 700 of 1000: loss=0.312 " + "l1=0" + "l2=0.312 f=-0.862 shape=(1, 9000, 1)
logits [[ 2.4331622  -0.77980965  2.48138    -7.5809617 ]]
Iteration 800 of 1000: loss=0.293 " + "l1=0.0111" + "l2=0.282 f=-0.851 shape=(1, 9000, 1)
logits [[ 2.4842575 -0.8011819  2.4731367 -7.5595098]]
Iteration 900 of 1000: loss=0.268 " + "l1=0" + "l2=0.268 f=-0.85 shape=(1, 9000, 1)
logits [[ 2.4345868 -0.7666305  2.462364  -7.529112 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.58 " + "l1=1.58" + "l2=0 f=-0.688 shape=(1, 9000, 1)
logits [[ 5.914447  -2.4824312  3.0473266 -9.23017  ]]
Iteration 100 of 1000: loss=0.765 " + "l1=0.185" + "l2=0.579 f=-0.809 shape=(1, 9000, 1)
logits [[ 3.253079  -1.4876715  2.916155  -7.917504 ]]
Iteration 200 of 1000: loss=0.446 " + "l1=0" + "l2=0.446 f=-0.865 shape=(1, 9000, 1)
logits [[ 2.673776  -1.0041465  2.674182  -7.80561  ]]
Iteration 300 of 1000: loss=0.38 " + "l1=0" + "l2=0.38 f=-0.862 shape=(1, 9000, 1)
logits [[ 2.596871  -0.9068417  2.598021  -7.7370896]]
Iteration 400 of 1000: loss=0.344 " + "l1=0" + "l2=0.344 f=-0.856 shape=(1, 9000, 1)
logits [[ 2.5106847 -0.8095974  2.53358   -7.656965 ]]
Iteration 500 of 1000: loss=0.308 " + "l1=0" + "l2=0.308 f=-0.851 shape=(1, 9000, 1)
logits [[ 2.4913871 -0.7815179  2.502814  -7.6185627]]
Iteration 600 of 1000: loss=0.28 " + "l1=0.00333" + "l2=0.277 f=-0.847 shape=(1, 9000, 1)
logits [[ 2.5002918  -0.78748655  2.4942417  -7.593326  ]]
Iteration 700 of 1000: loss=0.257 " + "l1=0" + "l2=0.257 f=-0.842 shape=(1, 9000, 1)
logits [[ 2.4554155  -0.76273024  2.4890382  -7.548478  ]]
Iteration 800 of 1000: loss=0.229 " + "l1=0" + "l2=0.229 f=-0.839 shape=(1, 9000, 1)
logits [[ 2.4622328  -0.77459794  2.4826214  -7.5245404 ]]
Iteration 900 of 1000: loss=0.208 " + "l1=0.00875" + "l2=0.2 f=-0.834 shape=(1, 9000, 1)
logits [[ 2.4903498 -0.8052487  2.4744496 -7.496041 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.932 " + "l1=0.932" + "l2=0 f=-0.688 shape=(1, 9000, 1)
logits [[ 5.914447  -2.4824312  3.0473266 -9.23017  ]]
Iteration 100 of 1000: loss=0.756 " + "l1=0.617" + "l2=0.139 f=-0.698 shape=(1, 9000, 1)
logits [[ 4.995251  -2.1612823  3.095506  -8.722116 ]]
Iteration 200 of 1000: loss=0.583 " + "l1=0.268" + "l2=0.315 f=-0.785 shape=(1, 9000, 1)
logits [[ 3.7945266 -1.7105753  2.96872   -8.191271 ]]
Iteration 300 of 1000: loss=0.441 " + "l1=0.072" + "l2=0.369 f=-0.841 shape=(1, 9000, 1)
logits [[ 3.0512495 -1.3575693  2.829626  -7.8868384]]
Iteration 400 of 1000: loss=0.349 " + "l1=0.0087" + "l2=0.34 f=-0.874 shape=(1, 9000, 1)
logits [[ 2.671157  -1.0350386  2.6443765 -7.776248 ]]
Iteration 500 of 1000: loss=0.292 " + "l1=0.00423" + "l2=0.288 f=-0.874 shape=(1, 9000, 1)
logits [[ 2.583758   -0.95567775  2.5707378  -7.6957445 ]]
Iteration 600 of 1000: loss=0.245 " + "l1=0.00276" + "l2=0.242 f=-0.875 shape=(1, 9000, 1)
logits [[ 2.5414312 -0.932166   2.5329387 -7.643046 ]]
Iteration 700 of 1000: loss=0.2 " + "l1=0" + "l2=0.2 f=-0.865 shape=(1, 9000, 1)
logits [[ 2.5250616 -0.9365882  2.5296838 -7.576325 ]]
Iteration 800 of 1000: loss=0.165 " + "l1=0" + "l2=0.165 f=-0.849 shape=(1, 9000, 1)
logits [[ 2.5124536 -0.9305781  2.515726  -7.49309  ]]
Iteration 900 of 1000: loss=0.143 " + "l1=0.000413" + "l2=0.143 f=-0.834 shape=(1, 9000, 1)
logits [[ 2.4966757 -0.9246481  2.4954064 -7.4046054]]
--- 254.17477226257324 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.151 " + "l1=0.151" + "l2=0 f=-0.688 shape=(1, 9000, 1)
logits [[ 5.914447  -2.4824312  3.0473266 -9.23017  ]]
Iteration 100 of 1000: loss=0.151 " + "l1=0.15" + "l2=0.000476 f=-0.686 shape=(1, 9000, 1)
logits [[ 5.8623214 -2.4521022  3.0225825 -9.175429 ]]
Iteration 200 of 1000: loss=0.151 " + "l1=0.15" + "l2=0.000469 f=-0.686 shape=(1, 9000, 1)
logits [[ 5.8552675 -2.4443269  3.0156589 -9.169339 ]]
Iteration 300 of 1000: loss=0.151 " + "l1=0.15" + "l2=0.000568 f=-0.686 shape=(1, 9000, 1)
logits [[ 5.8451614 -2.4353259  3.0074358 -9.15956  ]]
Iteration 400 of 1000: loss=0.151 " + "l1=0.15" + "l2=0.000681 f=-0.686 shape=(1, 9000, 1)
logits [[ 5.8352947 -2.426962   2.999718  -9.150053 ]]
Iteration 500 of 1000: loss=0.151 " + "l1=0.15" + "l2=0.000855 f=-0.685 shape=(1, 9000, 1)
logits [[ 5.8261447 -2.4194696  2.9927084 -9.141351 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.51 " + "l1=1.51" + "l2=0 f=-0.688 shape=(1, 9000, 1)
logits [[ 5.914447  -2.4824312  3.0473266 -9.23017  ]]
Iteration 100 of 1000: loss=1.43 " + "l1=1.37" + "l2=0.061 f=-0.693 shape=(1, 9000, 1)
logits [[ 5.155398  -2.0686283  2.7187757 -8.576746 ]]
Iteration 200 of 1000: loss=1.39 " + "l1=1.29" + "l2=0.096 f=-0.717 shape=(1, 9000, 1)
logits [[ 4.64659   -1.7706598  2.5119684 -8.254298 ]]
Iteration 300 of 1000: loss=1.33 " + "l1=1.2" + "l2=0.132 f=-0.746 shape=(1, 9000, 1)
logits [[ 4.0702467 -1.4258178  2.318123  -7.9452047]]
Iteration 400 of 1000: loss=1.29 " + "l1=1.13" + "l2=0.161 f=-0.765 shape=(1, 9000, 1)
logits [[ 3.582187  -1.1306746  2.1562042 -7.6690392]]
Iteration 500 of 1000: loss=1.23 " + "l1=1.04" + "l2=0.191 f=-0.775 shape=(1, 9000, 1)
logits [[ 3.0709457  -0.84024113  1.9970821  -7.329335  ]]
Iteration 600 of 1000: loss=1.17 " + "l1=0.948" + "l2=0.221 f=-0.761 shape=(1, 9000, 1)
logits [[ 2.548138   -0.52838516  1.8704141  -6.934072  ]]
Iteration 700 of 1000: loss=1.11 " + "l1=0.855" + "l2=0.251 f=-0.759 shape=(1, 9000, 1)
logits [[ 1.9984     -0.25522014  1.7724425  -6.549673  ]]
Iteration 800 of 1000: loss=1.05 " + "l1=0.79" + "l2=0.258 f=-0.751 shape=(1, 9000, 1)
logits [[ 1.6822599  -0.12811889  1.6641859  -6.2203593 ]]
Iteration 900 of 1000: loss=1.01 " + "l1=0.758" + "l2=0.249 f=-0.736 shape=(1, 9000, 1)
logits [[ 1.5840234  -0.10699929  1.5737163  -5.99416   ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=15.1 " + "l1=15.1" + "l2=0 f=-0.688 shape=(1, 9000, 1)
logits [[ 5.914447  -2.4824312  3.0473266 -9.23017  ]]
Iteration 100 of 1000: loss=8.28 " + "l1=6.09" + "l2=2.2 f=-0.607 shape=(1, 9000, 1)
logits [[ 1.1326497   0.06802795  1.2295779  -4.858405  ]]
Iteration 200 of 1000: loss=5.17 " + "l1=1.35" + "l2=3.82 f=-0.273 shape=(1, 9000, 1)
logits [[-0.10291305  0.09920596  0.13132346 -1.2201582 ]]
Iteration 300 of 1000: loss=3.52 " + "l1=0.00497" + "l2=3.51 f=-0.241 shape=(1, 9000, 1)
logits [[-0.506199   -0.13372117 -0.18533312 -0.13868749]]
Iteration 400 of 1000: loss=2.9 " + "l1=0.00619" + "l2=2.89 f=-0.222 shape=(1, 9000, 1)
logits [[-0.34797755 -0.20854902 -0.16351052 -0.16970527]]
Iteration 500 of 1000: loss=2.54 " + "l1=0.00898" + "l2=2.53 f=-0.229 shape=(1, 9000, 1)
logits [[-0.35315514 -0.16900326 -0.21649982 -0.1779835 ]]
Iteration 600 of 1000: loss=2.27 " + "l1=0" + "l2=2.27 f=-0.23 shape=(1, 9000, 1)
logits [[-0.31921706 -0.20951119 -0.2329679  -0.15825212]]
Iteration 700 of 1000: loss=2.03 " + "l1=0" + "l2=2.03 f=-0.235 shape=(1, 9000, 1)
logits [[-0.29357126 -0.22960255 -0.2193437  -0.19598505]]
Iteration 800 of 1000: loss=1.83 " + "l1=0" + "l2=1.83 f=-0.237 shape=(1, 9000, 1)
logits [[-0.2977489  -0.21624933 -0.21747304 -0.21569055]]
Iteration 900 of 1000: loss=1.67 " + "l1=0" + "l2=1.67 f=-0.228 shape=(1, 9000, 1)
logits [[-0.31462535 -0.21996321 -0.20691387 -0.17233154]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=8.33 " + "l1=8.33" + "l2=0 f=-0.688 shape=(1, 9000, 1)
logits [[ 5.914447  -2.4824312  3.0473266 -9.23017  ]]
Iteration 100 of 1000: loss=5.48 " + "l1=4.42" + "l2=1.07 f=-0.766 shape=(1, 9000, 1)
logits [[ 1.7005007  -0.12170803  1.692962   -6.334693  ]]
Iteration 200 of 1000: loss=4.46 " + "l1=3.3" + "l2=1.16 f=-0.612 shape=(1, 9000, 1)
logits [[ 1.0830977   0.22274016  1.121895   -4.8770924 ]]
Iteration 300 of 1000: loss=3.69 " + "l1=2.35" + "l2=1.33 f=-0.545 shape=(1, 9000, 1)
logits [[ 0.4961631   0.39094177  0.6048947  -3.6735616 ]]
Iteration 400 of 1000: loss=2.93 " + "l1=1.27" + "l2=1.66 f=-0.359 shape=(1, 9000, 1)
logits [[ 0.14155264  0.23367679  0.24937157 -2.0605602 ]]
Iteration 500 of 1000: loss=2.18 " + "l1=0.185" + "l2=2 f=-0.249 shape=(1, 9000, 1)
logits [[-0.39607623 -0.08966419 -0.08752134 -0.4233582 ]]
Iteration 600 of 1000: loss=1.81 " + "l1=0.03" + "l2=1.78 f=-0.238 shape=(1, 9000, 1)
logits [[-0.41037548 -0.16503008 -0.1617725  -0.21627888]]
Iteration 700 of 1000: loss=1.61 " + "l1=0" + "l2=1.61 f=-0.216 shape=(1, 9000, 1)
logits [[-0.3566395  -0.18576247 -0.16980393 -0.149892  ]]
Iteration 800 of 1000: loss=1.45 " + "l1=0" + "l2=1.45 f=-0.209 shape=(1, 9000, 1)
logits [[-0.3076004  -0.17417164 -0.1849142  -0.16950679]]
Iteration 900 of 1000: loss=1.33 " + "l1=0.00621" + "l2=1.32 f=-0.202 shape=(1, 9000, 1)
logits [[-0.27138045 -0.17597152 -0.17496783 -0.18625215]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.92 " + "l1=4.92" + "l2=0 f=-0.688 shape=(1, 9000, 1)
logits [[ 5.914447  -2.4824312  3.0473266 -9.23017  ]]
Iteration 100 of 1000: loss=3.74 " + "l1=3.02" + "l2=0.726 f=-0.798 shape=(1, 9000, 1)
logits [[ 2.2431815 -0.423521   2.033027  -7.04284  ]]
Iteration 200 of 1000: loss=3.2 " + "l1=2.55" + "l2=0.65 f=-0.74 shape=(1, 9000, 1)
logits [[ 1.6474845  -0.04210821  1.646829   -6.21045   ]]
Iteration 300 of 1000: loss=2.83 " + "l1=2.11" + "l2=0.722 f=-0.648 shape=(1, 9000, 1)
logits [[ 1.2087      0.16735698  1.2615818  -5.22961   ]]
Iteration 400 of 1000: loss=2.56 " + "l1=1.74" + "l2=0.82 f=-0.59 shape=(1, 9000, 1)
logits [[ 0.8598946   0.34130868  0.89574945 -4.4579067 ]]
Iteration 500 of 1000: loss=2.31 " + "l1=1.39" + "l2=0.921 f=-0.524 shape=(1, 9000, 1)
logits [[ 0.5533609   0.42850193  0.6012996  -3.6796427 ]]
Iteration 600 of 1000: loss=2.04 " + "l1=1.05" + "l2=0.995 f=-0.45 shape=(1, 9000, 1)
logits [[ 0.32642588  0.3590638   0.3655675  -2.8511677 ]]
Iteration 700 of 1000: loss=1.66 " + "l1=0.571" + "l2=1.09 f=-0.33 shape=(1, 9000, 1)
logits [[ 0.07733218  0.12131087  0.11854504 -1.635516  ]]
Iteration 800 of 1000: loss=1.38 " + "l1=0.297" + "l2=1.08 f=-0.259 shape=(1, 9000, 1)
logits [[-0.04924946 -0.02657564 -0.02339628 -0.9365307 ]]
Iteration 900 of 1000: loss=1.16 " + "l1=0.0761" + "l2=1.08 f=-0.221 shape=(1, 9000, 1)
logits [[-0.24193184 -0.13823375 -0.13431475 -0.3685482 ]]
--- 266.11946845054626 seconds ---
Adv result:3
Loading record A06905
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0352 " + "l1=0.0352" + "l2=0 f=-0.261 shape=(1, 9000, 1)
logits [[ 2.2713764 -1.2468151  1.5260507 -3.594392 ]]
Iteration 100 of 1000: loss=0.0345 " + "l1=0.0339" + "l2=0.000502 f=-0.263 shape=(1, 9000, 1)
logits [[ 2.2052755 -1.1895089  1.4796996 -3.5480273]]
Iteration 200 of 1000: loss=0.0342 " + "l1=0.0337" + "l2=0.000531 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.1914818 -1.1780522  1.4695802 -3.5375762]]
Iteration 300 of 1000: loss=0.0341 " + "l1=0.0334" + "l2=0.00065 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.1756346 -1.1654971  1.4585241 -3.52483  ]]
Iteration 400 of 1000: loss=0.0339 " + "l1=0.0331" + "l2=0.000777 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.1599617 -1.1534406  1.4478551 -3.5115004]]
Iteration 500 of 1000: loss=0.0338 " + "l1=0.0329" + "l2=0.000892 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.145909  -1.1432173  1.4383373 -3.498358 ]]
Iteration 600 of 1000: loss=0.0337 " + "l1=0.0327" + "l2=0.00107 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.1332557 -1.1344993  1.4297562 -3.4856675]]
Iteration 700 of 1000: loss=0.0336 " + "l1=0.0325" + "l2=0.00114 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.12108   -1.1268543  1.4219502 -3.473505 ]]
Iteration 800 of 1000: loss=0.0336 " + "l1=0.0323" + "l2=0.00129 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.1098504 -1.1205223  1.4153717 -3.4620864]]
Iteration 900 of 1000: loss=0.0335 " + "l1=0.0321" + "l2=0.00137 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.0986836 -1.1143382  1.4090545 -3.451062 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.352 " + "l1=0.352" + "l2=0 f=-0.261 shape=(1, 9000, 1)
logits [[ 2.2713764 -1.2468151  1.5260507 -3.594392 ]]
Iteration 100 of 1000: loss=0.291 " + "l1=0.257" + "l2=0.034 f=-0.278 shape=(1, 9000, 1)
logits [[ 1.7332551 -0.8350843  1.2017106 -3.2101338]]
Iteration 200 of 1000: loss=0.266 " + "l1=0.222" + "l2=0.0439 f=-0.278 shape=(1, 9000, 1)
logits [[ 1.5179178  -0.70538014  1.0847034  -3.009105  ]]
Iteration 300 of 1000: loss=0.248 " + "l1=0.195" + "l2=0.0527 f=-0.278 shape=(1, 9000, 1)
logits [[ 1.3366795 -0.618164   1.0020442 -2.8342822]]
Iteration 400 of 1000: loss=0.233 " + "l1=0.172" + "l2=0.0608 f=-0.277 shape=(1, 9000, 1)
logits [[ 1.1761686  -0.54692924  0.9301998  -2.6671357 ]]
Iteration 500 of 1000: loss=0.218 " + "l1=0.146" + "l2=0.0717 f=-0.275 shape=(1, 9000, 1)
logits [[ 1.0052687  -0.45915696  0.8459355  -2.4931316 ]]
Iteration 600 of 1000: loss=0.204 " + "l1=0.123" + "l2=0.0811 f=-0.272 shape=(1, 9000, 1)
logits [[ 0.84633154 -0.3813685   0.7697281  -2.3236437 ]]
Iteration 700 of 1000: loss=0.191 " + "l1=0.102" + "l2=0.089 f=-0.268 shape=(1, 9000, 1)
logits [[ 0.7084487  -0.3092413   0.70167685 -2.1721482 ]]
Iteration 800 of 1000: loss=0.178 " + "l1=0.0905" + "l2=0.0876 f=-0.254 shape=(1, 9000, 1)
logits [[ 0.6482102  -0.25678444  0.64784503 -2.056124  ]]
Iteration 900 of 1000: loss=0.169 " + "l1=0.0837" + "l2=0.0856 f=-0.251 shape=(1, 9000, 1)
logits [[ 0.61198276 -0.22367005  0.61312026 -2.005111  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.52 " + "l1=3.52" + "l2=0 f=-0.261 shape=(1, 9000, 1)
logits [[ 2.2713764 -1.2468151  1.5260507 -3.594392 ]]
Iteration 100 of 1000: loss=0.52 " + "l1=0" + "l2=0.52 f=-0.299 shape=(1, 9000, 1)
logits [[ 0.23058918  0.25786507  0.24337253 -1.9265202 ]]
Iteration 200 of 1000: loss=0.366 " + "l1=0" + "l2=0.366 f=-0.307 shape=(1, 9000, 1)
logits [[ 0.1902738   0.23544873  0.21109845 -1.8645844 ]]
Iteration 300 of 1000: loss=0.304 " + "l1=0.00423" + "l2=0.3 f=-0.307 shape=(1, 9000, 1)
logits [[ 0.19254902  0.19874932  0.20297734 -1.8218826 ]]
Iteration 400 of 1000: loss=0.275 " + "l1=0.00577" + "l2=0.269 f=-0.306 shape=(1, 9000, 1)
logits [[ 0.18957818  0.18963051  0.19540125 -1.7978559 ]]
Iteration 500 of 1000: loss=0.261 " + "l1=0" + "l2=0.261 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.17858365  0.20298338  0.16915964 -1.7648149 ]]
Iteration 600 of 1000: loss=0.251 " + "l1=0.00676" + "l2=0.244 f=-0.301 shape=(1, 9000, 1)
logits [[ 0.18455833  0.18184063  0.18859881 -1.7597513 ]]
Iteration 700 of 1000: loss=0.251 " + "l1=0.0135" + "l2=0.237 f=-0.297 shape=(1, 9000, 1)
logits [[ 0.19630575  0.18285249  0.17602167 -1.7450557 ]]
Iteration 800 of 1000: loss=0.243 " + "l1=0" + "l2=0.243 f=-0.301 shape=(1, 9000, 1)
logits [[ 0.12092695  0.2108578   0.16346146 -1.6974158 ]]
Iteration 900 of 1000: loss=0.232 " + "l1=0" + "l2=0.232 f=-0.294 shape=(1, 9000, 1)
logits [[ 0.17406628  0.19403581  0.16493846 -1.7107099 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.94 " + "l1=1.94" + "l2=0 f=-0.261 shape=(1, 9000, 1)
logits [[ 2.2713764 -1.2468151  1.5260507 -3.594392 ]]
Iteration 100 of 1000: loss=0.476 " + "l1=0.00654" + "l2=0.469 f=-0.307 shape=(1, 9000, 1)
logits [[ 0.24848628  0.23659776  0.23772533 -1.951246  ]]
Iteration 200 of 1000: loss=0.323 " + "l1=0.00497" + "l2=0.318 f=-0.314 shape=(1, 9000, 1)
logits [[ 0.19941354  0.20442574  0.21346484 -1.8722519 ]]
Iteration 300 of 1000: loss=0.281 " + "l1=0.0105" + "l2=0.271 f=-0.312 shape=(1, 9000, 1)
logits [[ 0.20553252  0.18648432  0.1967501  -1.835311  ]]
Iteration 400 of 1000: loss=0.254 " + "l1=0.000672" + "l2=0.253 f=-0.31 shape=(1, 9000, 1)
logits [[ 0.18518752  0.1878635   0.18908508 -1.801237  ]]
Iteration 500 of 1000: loss=0.243 " + "l1=0.000495" + "l2=0.243 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.18007214  0.18495785  0.18585761 -1.7709994 ]]
Iteration 600 of 1000: loss=0.242 " + "l1=0" + "l2=0.242 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.13288596  0.20200337  0.18048628 -1.7364677 ]]
Iteration 700 of 1000: loss=0.228 " + "l1=0" + "l2=0.228 f=-0.298 shape=(1, 9000, 1)
logits [[ 0.17230734  0.18770023  0.18135385 -1.7337923 ]]
Iteration 800 of 1000: loss=0.223 " + "l1=0.00262" + "l2=0.22 f=-0.294 shape=(1, 9000, 1)
logits [[ 0.18358639  0.1793537   0.18410872 -1.7227931 ]]
Iteration 900 of 1000: loss=0.219 " + "l1=0.00126" + "l2=0.218 f=-0.291 shape=(1, 9000, 1)
logits [[ 0.1848799   0.18259029  0.1748726  -1.7051036 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.14 " + "l1=1.14" + "l2=0 f=-0.261 shape=(1, 9000, 1)
logits [[ 2.2713764 -1.2468151  1.5260507 -3.594392 ]]
Iteration 100 of 1000: loss=0.525 " + "l1=0.202" + "l2=0.324 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.54440874 -0.07667097  0.5364632  -2.2188857 ]]
Iteration 200 of 1000: loss=0.313 " + "l1=0.000519" + "l2=0.312 f=-0.322 shape=(1, 9000, 1)
logits [[ 0.1965529   0.19951029  0.20110838 -1.8871698 ]]
Iteration 300 of 1000: loss=0.265 " + "l1=0" + "l2=0.265 f=-0.317 shape=(1, 9000, 1)
logits [[ 0.19608185  0.19707413  0.18973999 -1.8499801 ]]
Iteration 400 of 1000: loss=0.242 " + "l1=0.00144" + "l2=0.241 f=-0.31 shape=(1, 9000, 1)
logits [[ 0.19212413  0.18770292  0.19140638 -1.8095257 ]]
Iteration 500 of 1000: loss=0.231 " + "l1=0" + "l2=0.231 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.18502867  0.1955276   0.18588278 -1.7822503 ]]
Iteration 600 of 1000: loss=0.223 " + "l1=0" + "l2=0.223 f=-0.3 shape=(1, 9000, 1)
logits [[ 0.1772303   0.19652885  0.1837403  -1.7581607 ]]
Iteration 700 of 1000: loss=0.214 " + "l1=0.000938" + "l2=0.213 f=-0.295 shape=(1, 9000, 1)
logits [[ 0.18928257  0.18755491  0.19044146 -1.74672   ]]
Iteration 800 of 1000: loss=0.213 " + "l1=0.00602" + "l2=0.207 f=-0.291 shape=(1, 9000, 1)
logits [[ 0.1991109   0.18058272  0.18999256 -1.7340636 ]]
Iteration 900 of 1000: loss=0.206 " + "l1=0.0011" + "l2=0.205 f=-0.29 shape=(1, 9000, 1)
logits [[ 0.17703748  0.18729581  0.19068636 -1.7148179 ]]
--- 296.2257754802704 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00745 " + "l1=0.00745" + "l2=0 f=-0.261 shape=(1, 9000, 1)
logits [[ 2.2713764 -1.2468151  1.5260507 -3.594392 ]]
Iteration 100 of 1000: loss=0.00729 " + "l1=0.00714" + "l2=0.000151 f=-0.262 shape=(1, 9000, 1)
logits [[ 2.2463517 -1.2493492  1.5319247 -3.57885  ]]
Iteration 200 of 1000: loss=0.00724 " + "l1=0.00712" + "l2=0.000122 f=-0.262 shape=(1, 9000, 1)
logits [[ 2.2450538 -1.2498915  1.5328362 -3.577799 ]]
Iteration 300 of 1000: loss=0.00722 " + "l1=0.00707" + "l2=0.000148 f=-0.262 shape=(1, 9000, 1)
logits [[ 2.2416701 -1.2502308  1.5341839 -3.5753946]]
Iteration 400 of 1000: loss=0.00722 " + "l1=0.00702" + "l2=0.000197 f=-0.262 shape=(1, 9000, 1)
logits [[ 2.237723  -1.2504404  1.535625  -3.572635 ]]
Iteration 500 of 1000: loss=0.00723 " + "l1=0.00697" + "l2=0.000263 f=-0.262 shape=(1, 9000, 1)
logits [[ 2.2337112 -1.2504624  1.5369719 -3.569737 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0745 " + "l1=0.0745" + "l2=0 f=-0.261 shape=(1, 9000, 1)
logits [[ 2.2713764 -1.2468151  1.5260507 -3.594392 ]]
Iteration 100 of 1000: loss=0.0597 " + "l1=0.051" + "l2=0.00863 f=-0.274 shape=(1, 9000, 1)
logits [[ 2.0828233 -1.2613063  1.5723697 -3.4879954]]
Iteration 200 of 1000: loss=0.0528 " + "l1=0.0405" + "l2=0.0123 f=-0.278 shape=(1, 9000, 1)
logits [[ 1.9943728 -1.2670809  1.5894728 -3.4275565]]
Iteration 300 of 1000: loss=0.0452 " + "l1=0.0294" + "l2=0.0158 f=-0.282 shape=(1, 9000, 1)
logits [[ 1.8995901 -1.2695795  1.6057919 -3.3633044]]
Iteration 400 of 1000: loss=0.0376 " + "l1=0.0183" + "l2=0.0193 f=-0.286 shape=(1, 9000, 1)
logits [[ 1.8072753 -1.274174   1.6244779 -3.3000069]]
Iteration 500 of 1000: loss=0.0302 " + "l1=0.0073" + "l2=0.0229 f=-0.288 shape=(1, 9000, 1)
logits [[ 1.7165946 -1.276895   1.643627  -3.233928 ]]
Iteration 600 of 1000: loss=0.0232 " + "l1=0.000105" + "l2=0.0231 f=-0.287 shape=(1, 9000, 1)
logits [[ 1.6597526 -1.2727269  1.6587024 -3.1955574]]
Iteration 700 of 1000: loss=0.0195 " + "l1=0.00021" + "l2=0.0193 f=-0.283 shape=(1, 9000, 1)
logits [[ 1.657651  -1.2570056  1.655555  -3.18982  ]]
Iteration 800 of 1000: loss=0.0173 " + "l1=0.000139" + "l2=0.0172 f=-0.279 shape=(1, 9000, 1)
logits [[ 1.6538119 -1.24479    1.6524209 -3.1790926]]
Iteration 900 of 1000: loss=0.0156 " + "l1=0" + "l2=0.0156 f=-0.277 shape=(1, 9000, 1)
logits [[ 1.6481853 -1.233344   1.6489308 -3.1712596]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.041 " + "l1=0.041" + "l2=0 f=-0.261 shape=(1, 9000, 1)
logits [[ 2.2713764 -1.2468151  1.5260507 -3.594392 ]]
Iteration 100 of 1000: loss=0.0365 " + "l1=0.0339" + "l2=0.0026 f=-0.267 shape=(1, 9000, 1)
logits [[ 2.170117  -1.256356   1.5532942 -3.536011 ]]
Iteration 200 of 1000: loss=0.0349 " + "l1=0.0316" + "l2=0.00332 f=-0.268 shape=(1, 9000, 1)
logits [[ 2.1376941 -1.2600044  1.5627018 -3.5142927]]
Iteration 300 of 1000: loss=0.0334 " + "l1=0.0294" + "l2=0.00401 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.10531   -1.2605903  1.5702366 -3.4932463]]
Iteration 400 of 1000: loss=0.0316 " + "l1=0.0267" + "l2=0.00485 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.0664353 -1.2612193  1.5801176 -3.466092 ]]
Iteration 500 of 1000: loss=0.0298 " + "l1=0.0239" + "l2=0.00583 f=-0.271 shape=(1, 9000, 1)
logits [[ 2.0239277 -1.2592906  1.5885298 -3.43679  ]]
Iteration 600 of 1000: loss=0.0279 " + "l1=0.0211" + "l2=0.00679 f=-0.272 shape=(1, 9000, 1)
logits [[ 1.9794276 -1.2549114  1.5949221 -3.4074087]]
Iteration 700 of 1000: loss=0.0261 " + "l1=0.0184" + "l2=0.00773 f=-0.273 shape=(1, 9000, 1)
logits [[ 1.9355127 -1.2500042  1.6014282 -3.3795748]]
Iteration 800 of 1000: loss=0.0243 " + "l1=0.0157" + "l2=0.00868 f=-0.273 shape=(1, 9000, 1)
logits [[ 1.8949388 -1.2477071  1.6100861 -3.349393 ]]
Iteration 900 of 1000: loss=0.0226 " + "l1=0.013" + "l2=0.00957 f=-0.273 shape=(1, 9000, 1)
logits [[ 1.8532352 -1.242849   1.617109  -3.31909  ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0578 " + "l1=0.0578" + "l2=0 f=-0.261 shape=(1, 9000, 1)
logits [[ 2.2713764 -1.2468151  1.5260507 -3.594392 ]]
Iteration 100 of 1000: loss=0.0488 " + "l1=0.0436" + "l2=0.00525 f=-0.271 shape=(1, 9000, 1)
logits [[ 2.125273  -1.2583547  1.5628949 -3.512027 ]]
Iteration 200 of 1000: loss=0.0455 " + "l1=0.0387" + "l2=0.0068 f=-0.273 shape=(1, 9000, 1)
logits [[ 2.0703797 -1.2590375  1.5715361 -3.4763975]]
Iteration 300 of 1000: loss=0.0413 " + "l1=0.0324" + "l2=0.00893 f=-0.276 shape=(1, 9000, 1)
logits [[ 2.0038626 -1.2621045  1.5858864 -3.4309533]]
Iteration 400 of 1000: loss=0.0371 " + "l1=0.0263" + "l2=0.0108 f=-0.278 shape=(1, 9000, 1)
logits [[ 1.9399695 -1.2666801  1.6001563 -3.3843489]]
Iteration 500 of 1000: loss=0.033 " + "l1=0.0201" + "l2=0.0129 f=-0.28 shape=(1, 9000, 1)
logits [[ 1.8713202 -1.2651513  1.6118525 -3.3383715]]
Iteration 600 of 1000: loss=0.0288 " + "l1=0.0139" + "l2=0.015 f=-0.283 shape=(1, 9000, 1)
logits [[ 1.7998354 -1.259273   1.6208488 -3.292197 ]]
Iteration 700 of 1000: loss=0.0245 " + "l1=0.0075" + "l2=0.017 f=-0.284 shape=(1, 9000, 1)
logits [[ 1.7317324 -1.2576032  1.635022  -3.246242 ]]
Iteration 800 of 1000: loss=0.0205 " + "l1=0.0016" + "l2=0.0189 f=-0.284 shape=(1, 9000, 1)
logits [[ 1.666155  -1.2493435  1.6455705 -3.2001321]]
Iteration 900 of 1000: loss=0.0174 " + "l1=0" + "l2=0.0174 f=-0.282 shape=(1, 9000, 1)
logits [[ 1.6438807 -1.237769   1.6441497 -3.1775658]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0494 " + "l1=0.0494" + "l2=0 f=-0.261 shape=(1, 9000, 1)
logits [[ 2.2713764 -1.2468151  1.5260507 -3.594392 ]]
Iteration 100 of 1000: loss=0.0429 " + "l1=0.0391" + "l2=0.00378 f=-0.269 shape=(1, 9000, 1)
logits [[ 2.1491652 -1.257988   1.5585155 -3.5240698]]
Iteration 200 of 1000: loss=0.0405 " + "l1=0.0357" + "l2=0.00486 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.1066947 -1.2607574  1.568387  -3.4962564]]
Iteration 300 of 1000: loss=0.038 " + "l1=0.0319" + "l2=0.00612 f=-0.272 shape=(1, 9000, 1)
logits [[ 2.059267  -1.2611965  1.578331  -3.464865 ]]
Iteration 400 of 1000: loss=0.0351 " + "l1=0.0276" + "l2=0.00745 f=-0.274 shape=(1, 9000, 1)
logits [[ 2.007898  -1.2623856  1.5906281 -3.430267 ]]
Iteration 500 of 1000: loss=0.0322 " + "l1=0.0233" + "l2=0.0089 f=-0.275 shape=(1, 9000, 1)
logits [[ 1.953218  -1.2614921  1.6011822 -3.392193 ]]
Iteration 600 of 1000: loss=0.0294 " + "l1=0.0192" + "l2=0.0103 f=-0.276 shape=(1, 9000, 1)
logits [[ 1.8994833 -1.2582891  1.6102049 -3.3570058]]
Iteration 700 of 1000: loss=0.0267 " + "l1=0.0148" + "l2=0.0118 f=-0.277 shape=(1, 9000, 1)
logits [[ 1.8431549 -1.2535462  1.6190832 -3.3179376]]
Iteration 800 of 1000: loss=0.0236 " + "l1=0.0104" + "l2=0.0132 f=-0.279 shape=(1, 9000, 1)
logits [[ 1.7845923 -1.2469176  1.6268975 -3.2787232]]
Iteration 900 of 1000: loss=0.0208 " + "l1=0.0062" + "l2=0.0146 f=-0.28 shape=(1, 9000, 1)
logits [[ 1.732355  -1.2417341  1.6386974 -3.2474647]]
--- 269.9558081626892 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0587 " + "l1=0.0587" + "l2=0 f=-0.261 shape=(1, 9000, 1)
logits [[ 2.2713764 -1.2468151  1.5260507 -3.594392 ]]
Iteration 100 of 1000: loss=0.0576 " + "l1=0.057" + "l2=0.000612 f=-0.26 shape=(1, 9000, 1)
logits [[ 2.1950123 -1.2142947  1.4810127 -3.5012581]]
Iteration 200 of 1000: loss=0.0572 " + "l1=0.0565" + "l2=0.000685 f=-0.26 shape=(1, 9000, 1)
logits [[ 2.1755462 -1.2067561  1.4686122 -3.477218 ]]
Iteration 300 of 1000: loss=0.0569 " + "l1=0.056" + "l2=0.000833 f=-0.26 shape=(1, 9000, 1)
logits [[ 2.1539092 -1.1990962  1.4547443 -3.4492722]]
Iteration 400 of 1000: loss=0.0565 " + "l1=0.0555" + "l2=0.00101 f=-0.26 shape=(1, 9000, 1)
logits [[ 2.1314123 -1.1919649  1.4406104 -3.420057 ]]
Iteration 500 of 1000: loss=0.0562 " + "l1=0.055" + "l2=0.00123 f=-0.26 shape=(1, 9000, 1)
logits [[ 2.1093059 -1.1852518  1.4268671 -3.391063 ]]
Iteration 600 of 1000: loss=0.0559 " + "l1=0.0545" + "l2=0.00142 f=-0.26 shape=(1, 9000, 1)
logits [[ 2.0873544 -1.180086   1.4145203 -3.3633752]]
Iteration 700 of 1000: loss=0.0557 " + "l1=0.054" + "l2=0.00167 f=-0.261 shape=(1, 9000, 1)
logits [[ 2.0654037 -1.1754869  1.4028804 -3.3355138]]
Iteration 800 of 1000: loss=0.0555 " + "l1=0.0535" + "l2=0.00193 f=-0.261 shape=(1, 9000, 1)
logits [[ 2.044038  -1.1714542  1.3931605 -3.3095503]]
Iteration 900 of 1000: loss=0.0552 " + "l1=0.0531" + "l2=0.00214 f=-0.261 shape=(1, 9000, 1)
logits [[ 2.0244994 -1.1679974  1.38474   -3.2858727]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.587 " + "l1=0.587" + "l2=0 f=-0.261 shape=(1, 9000, 1)
logits [[ 2.2713764 -1.2468151  1.5260507 -3.594392 ]]
Iteration 100 of 1000: loss=0.484 " + "l1=0.427" + "l2=0.0561 f=-0.25 shape=(1, 9000, 1)
logits [[ 1.536648   -0.97842455  1.1769549  -2.7371058 ]]
Iteration 200 of 1000: loss=0.42 " + "l1=0.33" + "l2=0.09 f=-0.25 shape=(1, 9000, 1)
logits [[ 1.0904746  -0.8691921   0.99024254 -2.2096577 ]]
Iteration 300 of 1000: loss=0.362 " + "l1=0.265" + "l2=0.0974 f=-0.24 shape=(1, 9000, 1)
logits [[ 0.8297746 -0.8058769  0.8332034 -1.8156278]]
Iteration 400 of 1000: loss=0.324 " + "l1=0.225" + "l2=0.0989 f=-0.227 shape=(1, 9000, 1)
logits [[ 0.7053241  -0.77006644  0.7039138  -1.5465113 ]]
Iteration 500 of 1000: loss=0.296 " + "l1=0.191" + "l2=0.105 f=-0.219 shape=(1, 9000, 1)
logits [[ 0.5841449  -0.74446905  0.595549   -1.3094832 ]]
Iteration 600 of 1000: loss=0.273 " + "l1=0.155" + "l2=0.118 f=-0.218 shape=(1, 9000, 1)
logits [[ 0.42448586 -0.7123575   0.48422638 -1.0695935 ]]
Iteration 700 of 1000: loss=0.256 " + "l1=0.127" + "l2=0.128 f=-0.217 shape=(1, 9000, 1)
logits [[ 0.28552356 -0.6938586   0.4056169  -0.8658886 ]]
Iteration 800 of 1000: loss=0.242 " + "l1=0.104" + "l2=0.138 f=-0.215 shape=(1, 9000, 1)
logits [[ 0.17449492 -0.681358    0.34471926 -0.69592375]]
Iteration 900 of 1000: loss=0.23 " + "l1=0.0806" + "l2=0.149 f=-0.212 shape=(1, 9000, 1)
logits [[ 0.05578556 -0.6754097   0.28823924 -0.51737934]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.87 " + "l1=5.87" + "l2=0 f=-0.261 shape=(1, 9000, 1)
logits [[ 2.2713764 -1.2468151  1.5260507 -3.594392 ]]
Iteration 100 of 1000: loss=0.855 " + "l1=0" + "l2=0.855 f=-0.188 shape=(1, 9000, 1)
logits [[-0.28612164 -0.18810345 -0.14931925 -0.12939718]]
Iteration 200 of 1000: loss=0.589 " + "l1=0" + "l2=0.589 f=-0.212 shape=(1, 9000, 1)
logits [[-0.3121875  -0.23029456 -0.16494311 -0.1403194 ]]
Iteration 300 of 1000: loss=0.471 " + "l1=0.00337" + "l2=0.468 f=-0.225 shape=(1, 9000, 1)
logits [[-0.2927511  -0.27117565 -0.16634479 -0.16971678]]
Iteration 400 of 1000: loss=0.407 " + "l1=0.00276" + "l2=0.405 f=-0.233 shape=(1, 9000, 1)
logits [[-0.29233047 -0.29813483 -0.16939403 -0.17215657]]
Iteration 500 of 1000: loss=0.368 " + "l1=0" + "l2=0.368 f=-0.237 shape=(1, 9000, 1)
logits [[-0.29946876 -0.3110183  -0.17448466 -0.16383454]]
Iteration 600 of 1000: loss=0.342 " + "l1=0.00366" + "l2=0.339 f=-0.24 shape=(1, 9000, 1)
logits [[-0.28855315 -0.32827955 -0.16948141 -0.1731425 ]]
Iteration 700 of 1000: loss=0.339 " + "l1=0" + "l2=0.339 f=-0.243 shape=(1, 9000, 1)
logits [[-0.3500071  -0.3192591  -0.20737989 -0.09599888]]
Iteration 800 of 1000: loss=0.314 " + "l1=0" + "l2=0.314 f=-0.244 shape=(1, 9000, 1)
logits [[-0.32644933 -0.3407314  -0.18820667 -0.12130108]]
Iteration 900 of 1000: loss=0.291 " + "l1=0" + "l2=0.291 f=-0.243 shape=(1, 9000, 1)
logits [[-0.2992628  -0.35823542 -0.16722216 -0.14619493]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.23 " + "l1=3.23" + "l2=0 f=-0.261 shape=(1, 9000, 1)
logits [[ 2.2713764 -1.2468151  1.5260507 -3.594392 ]]
Iteration 100 of 1000: loss=0.781 " + "l1=0.00352" + "l2=0.778 f=-0.205 shape=(1, 9000, 1)
logits [[-0.31110677 -0.1920478  -0.15599129 -0.16239095]]
Iteration 200 of 1000: loss=0.504 " + "l1=0" + "l2=0.504 f=-0.233 shape=(1, 9000, 1)
logits [[-0.34308055 -0.23686339 -0.1954319  -0.15531564]]
Iteration 300 of 1000: loss=0.407 " + "l1=0.00378" + "l2=0.403 f=-0.238 shape=(1, 9000, 1)
logits [[-0.30583355 -0.27616614 -0.18130274 -0.188176  ]]
Iteration 400 of 1000: loss=0.362 " + "l1=0" + "l2=0.362 f=-0.241 shape=(1, 9000, 1)
logits [[-0.32166478 -0.30258006 -0.1880265  -0.15067682]]
Iteration 500 of 1000: loss=0.331 " + "l1=0" + "l2=0.331 f=-0.242 shape=(1, 9000, 1)
logits [[-0.32231364 -0.3244778  -0.17754325 -0.14297181]]
Iteration 600 of 1000: loss=0.303 " + "l1=0" + "l2=0.303 f=-0.239 shape=(1, 9000, 1)
logits [[-0.3000585  -0.34425142 -0.15706241 -0.15445438]]
Iteration 700 of 1000: loss=0.288 " + "l1=0" + "l2=0.288 f=-0.237 shape=(1, 9000, 1)
logits [[-0.312188   -0.3554744  -0.15712065 -0.12305883]]
Iteration 800 of 1000: loss=0.277 " + "l1=0.0123" + "l2=0.265 f=-0.236 shape=(1, 9000, 1)
logits [[-0.27728227 -0.37774792 -0.13346924 -0.15580145]]
Iteration 900 of 1000: loss=0.26 " + "l1=0.00688" + "l2=0.253 f=-0.234 shape=(1, 9000, 1)
logits [[-0.273833   -0.39306518 -0.12779528 -0.14031279]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.91 " + "l1=1.91" + "l2=0 f=-0.261 shape=(1, 9000, 1)
logits [[ 2.2713764 -1.2468151  1.5260507 -3.594392 ]]
Iteration 100 of 1000: loss=0.861 " + "l1=0.385" + "l2=0.476 f=-0.214 shape=(1, 9000, 1)
logits [[ 0.2299618  -0.4057916   0.25169662 -0.9314977 ]]
Iteration 200 of 1000: loss=0.473 " + "l1=0" + "l2=0.473 f=-0.238 shape=(1, 9000, 1)
logits [[-0.36593705 -0.26854813 -0.16729961 -0.15149927]]
Iteration 300 of 1000: loss=0.37 " + "l1=0.00687" + "l2=0.363 f=-0.236 shape=(1, 9000, 1)
logits [[-0.30990455 -0.32688838 -0.14252475 -0.16365251]]
Iteration 400 of 1000: loss=0.318 " + "l1=0.000398" + "l2=0.317 f=-0.23 shape=(1, 9000, 1)
logits [[-0.31106302 -0.35895556 -0.12484923 -0.12607262]]
Iteration 500 of 1000: loss=0.29 " + "l1=0.00483" + "l2=0.286 f=-0.223 shape=(1, 9000, 1)
logits [[-0.28806973 -0.3853472  -0.10106433 -0.11591295]]
Iteration 600 of 1000: loss=0.267 " + "l1=0" + "l2=0.267 f=-0.218 shape=(1, 9000, 1)
logits [[-0.28043327 -0.40207118 -0.09664735 -0.09271123]]
Iteration 700 of 1000: loss=0.251 " + "l1=0" + "l2=0.251 f=-0.214 shape=(1, 9000, 1)
logits [[-0.26984796 -0.43145257 -0.07701832 -0.0764927 ]]
Iteration 800 of 1000: loss=0.238 " + "l1=0.00142" + "l2=0.237 f=-0.212 shape=(1, 9000, 1)
logits [[-0.26389113 -0.45820007 -0.06094945 -0.06533339]]
Iteration 900 of 1000: loss=0.232 " + "l1=0" + "l2=0.232 f=-0.213 shape=(1, 9000, 1)
logits [[-0.2796118  -0.46766233 -0.07082501 -0.03326219]]
--- 299.0766384601593 seconds ---
Adv result:3
