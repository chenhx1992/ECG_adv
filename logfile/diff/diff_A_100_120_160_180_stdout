Already up-to-date.
Loading model
Loading ground truth file
Attack diff is running...
Loading record A01747
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0723 " + "l1=0.0723" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 4.6534405 -2.572927   2.9133613 -7.1782546]]
Iteration 100 of 1000: loss=0.0719 " + "l1=0.0717" + "l2=0.000219 f=-0.544 shape=(1, 9000, 1)
logits [[ 4.6163616 -2.5567293  2.902661  -7.137363 ]]
Iteration 200 of 1000: loss=0.0718 " + "l1=0.0716" + "l2=0.000195 f=-0.543 shape=(1, 9000, 1)
logits [[ 4.6096277 -2.5543373  2.9001493 -7.1284146]]
Iteration 300 of 1000: loss=0.0717 " + "l1=0.0715" + "l2=0.000237 f=-0.543 shape=(1, 9000, 1)
logits [[ 4.599042  -2.5506508  2.8968158 -7.1152816]]
Iteration 400 of 1000: loss=0.0716 " + "l1=0.0713" + "l2=0.000305 f=-0.542 shape=(1, 9000, 1)
logits [[ 4.5873494 -2.5467794  2.8933177 -7.100839 ]]
Iteration 500 of 1000: loss=0.0716 " + "l1=0.0712" + "l2=0.000381 f=-0.541 shape=(1, 9000, 1)
logits [[ 4.5749474 -2.542735   2.8896744 -7.085658 ]]
Iteration 600 of 1000: loss=0.0715 " + "l1=0.071" + "l2=0.000464 f=-0.54 shape=(1, 9000, 1)
logits [[ 4.562227  -2.5387025  2.8858986 -7.070066 ]]
Iteration 700 of 1000: loss=0.0714 " + "l1=0.0708" + "l2=0.000606 f=-0.539 shape=(1, 9000, 1)
logits [[ 4.549181  -2.534756   2.8820689 -7.054085 ]]
Iteration 800 of 1000: loss=0.0714 " + "l1=0.0707" + "l2=0.000716 f=-0.539 shape=(1, 9000, 1)
logits [[ 4.536057  -2.5308614  2.8782933 -7.037946 ]]
Iteration 900 of 1000: loss=0.0713 " + "l1=0.0705" + "l2=0.000786 f=-0.538 shape=(1, 9000, 1)
logits [[ 4.5229564 -2.5270712  2.8745987 -7.0218325]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.723 " + "l1=0.723" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 4.6534405 -2.572927   2.9133613 -7.1782546]]
Iteration 100 of 1000: loss=0.695 " + "l1=0.683" + "l2=0.0125 f=-0.528 shape=(1, 9000, 1)
logits [[ 4.374485  -2.453642   2.8356802 -6.869984 ]]
Iteration 200 of 1000: loss=0.679 " + "l1=0.66" + "l2=0.0183 f=-0.516 shape=(1, 9000, 1)
logits [[ 4.213208  -2.3911424  2.7905467 -6.676069 ]]
Iteration 300 of 1000: loss=0.662 " + "l1=0.638" + "l2=0.024 f=-0.502 shape=(1, 9000, 1)
logits [[ 4.047936  -2.3326213  2.7382898 -6.4611735]]
Iteration 400 of 1000: loss=0.645 " + "l1=0.615" + "l2=0.0299 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.8783324 -2.2732518  2.6806254 -6.238433 ]]
Iteration 500 of 1000: loss=0.63 " + "l1=0.594" + "l2=0.0354 f=-0.475 shape=(1, 9000, 1)
logits [[ 3.7222123 -2.2227693  2.628721  -6.0293508]]
Iteration 600 of 1000: loss=0.615 " + "l1=0.574" + "l2=0.0412 f=-0.459 shape=(1, 9000, 1)
logits [[ 3.5759254 -2.1653671  2.5725765 -5.820423 ]]
Iteration 700 of 1000: loss=0.601 " + "l1=0.554" + "l2=0.0468 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.433179 -2.111719  2.514685 -5.606421]]
Iteration 800 of 1000: loss=0.589 " + "l1=0.537" + "l2=0.0522 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.3004625 -2.0648422  2.4565997 -5.3973503]]
Iteration 900 of 1000: loss=0.577 " + "l1=0.519" + "l2=0.0577 f=-0.416 shape=(1, 9000, 1)
logits [[ 3.1695702 -2.0230348  2.3966231 -5.2080355]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.23 " + "l1=7.23" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 4.6534405 -2.572927   2.9133613 -7.1782546]]
Iteration 100 of 1000: loss=4.69 " + "l1=3.64" + "l2=1.05 f=-0.407 shape=(1, 9000, 1)
logits [[ 2.0948365 -1.5473018  2.092993  -4.2694063]]
Iteration 200 of 1000: loss=3.82 " + "l1=2.74" + "l2=1.09 f=-0.363 shape=(1, 9000, 1)
logits [[ 1.6311114 -1.1060753  1.6261919 -3.60424  ]]
Iteration 300 of 1000: loss=3.26 " + "l1=2.15" + "l2=1.11 f=-0.332 shape=(1, 9000, 1)
logits [[ 1.3128705 -0.8336554  1.3137131 -3.122203 ]]
Iteration 400 of 1000: loss=2.98 " + "l1=1.9" + "l2=1.08 f=-0.306 shape=(1, 9000, 1)
logits [[ 1.1721994  -0.72270167  1.1799562  -2.8533819 ]]
Iteration 500 of 1000: loss=2.84 " + "l1=1.81" + "l2=1.03 f=-0.296 shape=(1, 9000, 1)
logits [[ 1.1179928  -0.67791265  1.1293614  -2.7553494 ]]
Iteration 600 of 1000: loss=2.72 " + "l1=1.66" + "l2=1.06 f=-0.278 shape=(1, 9000, 1)
logits [[ 1.0348563 -0.6163032  1.0467836 -2.5788887]]
Iteration 700 of 1000: loss=2.62 " + "l1=1.54" + "l2=1.08 f=-0.261 shape=(1, 9000, 1)
logits [[ 0.9604704 -0.5724302  0.9716733 -2.4044597]]
Iteration 800 of 1000: loss=2.56 " + "l1=1.51" + "l2=1.05 f=-0.255 shape=(1, 9000, 1)
logits [[ 0.9329741 -0.5711067  0.9391641 -2.321118 ]]
Iteration 900 of 1000: loss=2.5 " + "l1=1.46" + "l2=1.04 f=-0.25 shape=(1, 9000, 1)
logits [[ 0.88113177 -0.5771261   0.8798426  -2.1855001 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=72.3 " + "l1=72.3" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 4.6534405 -2.572927   2.9133613 -7.1782546]]
Iteration 100 of 1000: loss=17.3 " + "l1=7.36" + "l2=9.91 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.59788716 -0.0734937   0.6621761  -2.1312635 ]]
Iteration 200 of 1000: loss=8.66 " + "l1=0" + "l2=8.66 f=-0.196 shape=(1, 9000, 1)
logits [[ 0.25307226  0.372922    0.36903673 -1.7783831 ]]
Iteration 300 of 1000: loss=7.12 " + "l1=0" + "l2=7.12 f=-0.207 shape=(1, 9000, 1)
logits [[ 0.29835016  0.36566135  0.35937217 -1.852992  ]]
Iteration 400 of 1000: loss=6.55 " + "l1=0" + "l2=6.55 f=-0.201 shape=(1, 9000, 1)
logits [[ 0.3316983   0.36049798  0.35496446 -1.8509597 ]]
Iteration 500 of 1000: loss=6.18 " + "l1=0" + "l2=6.18 f=-0.197 shape=(1, 9000, 1)
logits [[ 0.3298409   0.3551169   0.35225472 -1.8253987 ]]
Iteration 600 of 1000: loss=5.83 " + "l1=0" + "l2=5.83 f=-0.197 shape=(1, 9000, 1)
logits [[ 0.31481507  0.3450577   0.345054   -1.7919021 ]]
Iteration 700 of 1000: loss=5.61 " + "l1=0" + "l2=5.61 f=-0.195 shape=(1, 9000, 1)
logits [[ 0.2869495  0.3493756  0.3355184 -1.7500393]]
Iteration 800 of 1000: loss=5.4 " + "l1=0" + "l2=5.4 f=-0.191 shape=(1, 9000, 1)
logits [[ 0.28603598  0.33645043  0.33323884 -1.7202228 ]]
Iteration 900 of 1000: loss=5.3 " + "l1=0" + "l2=5.3 f=-0.181 shape=(1, 9000, 1)
logits [[ 0.27829713  0.33640808  0.3271386  -1.6677631 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=39.7 " + "l1=39.7" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 4.6534405 -2.572927   2.9133613 -7.1782546]]
Iteration 100 of 1000: loss=13.3 " + "l1=7.47" + "l2=5.79 f=-0.298 shape=(1, 9000, 1)
logits [[ 0.9334795 -0.4142025  0.9438347 -2.6551309]]
Iteration 200 of 1000: loss=7.77 " + "l1=1.18" + "l2=6.59 f=-0.207 shape=(1, 9000, 1)
logits [[ 0.37573633  0.21063678  0.4245068  -1.8395957 ]]
Iteration 300 of 1000: loss=6.14 " + "l1=0.0227" + "l2=6.12 f=-0.217 shape=(1, 9000, 1)
logits [[ 0.2672777   0.3406525   0.34478244 -1.8188627 ]]
Iteration 400 of 1000: loss=5.62 " + "l1=0.0208" + "l2=5.6 f=-0.212 shape=(1, 9000, 1)
logits [[ 0.2723005  0.3407855  0.3445642 -1.8051949]]
Iteration 500 of 1000: loss=5.24 " + "l1=0.000504" + "l2=5.24 f=-0.206 shape=(1, 9000, 1)
logits [[ 0.24937394  0.33659112  0.33668277 -1.7472622 ]]
Iteration 600 of 1000: loss=4.93 " + "l1=0.0115" + "l2=4.92 f=-0.198 shape=(1, 9000, 1)
logits [[ 0.25775567  0.32332456  0.3254109  -1.6969527 ]]
Iteration 700 of 1000: loss=4.68 " + "l1=0.0135" + "l2=4.66 f=-0.186 shape=(1, 9000, 1)
logits [[ 0.25213477  0.30689278  0.30933893 -1.6116182 ]]
Iteration 800 of 1000: loss=4.52 " + "l1=0.0455" + "l2=4.47 f=-0.175 shape=(1, 9000, 1)
logits [[ 0.25340727  0.2943446   0.3026248  -1.5499742 ]]
Iteration 900 of 1000: loss=4.37 " + "l1=0.0217" + "l2=4.35 f=-0.167 shape=(1, 9000, 1)
logits [[ 0.24333826  0.28638777  0.29033214 -1.4865816 ]]
--- 296.4035460948944 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0174 " + "l1=0.0174" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 4.6534405 -2.572927   2.9133613 -7.1782546]]
Iteration 100 of 1000: loss=0.0172 " + "l1=0.017" + "l2=0.000178 f=-0.545 shape=(1, 9000, 1)
logits [[ 4.619151  -2.5749893  2.9164407 -7.1406417]]
Iteration 200 of 1000: loss=0.0171 " + "l1=0.017" + "l2=0.000141 f=-0.545 shape=(1, 9000, 1)
logits [[ 4.6160994 -2.5748215  2.916122  -7.1375523]]
Iteration 300 of 1000: loss=0.0171 " + "l1=0.0169" + "l2=0.000155 f=-0.545 shape=(1, 9000, 1)
logits [[ 4.609315  -2.5751522  2.9161513 -7.13025  ]]
Iteration 400 of 1000: loss=0.017 " + "l1=0.0169" + "l2=0.000194 f=-0.545 shape=(1, 9000, 1)
logits [[ 4.6012254 -2.5755954  2.916114  -7.1213927]]
Iteration 500 of 1000: loss=0.017 " + "l1=0.0168" + "l2=0.00028 f=-0.545 shape=(1, 9000, 1)
logits [[ 4.5927243 -2.5760524  2.9159904 -7.1120367]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.174 " + "l1=0.174" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 4.6534405 -2.572927   2.9133613 -7.1782546]]
Iteration 100 of 1000: loss=0.158 " + "l1=0.15" + "l2=0.00778 f=-0.541 shape=(1, 9000, 1)
logits [[ 4.434849  -2.592587   2.9367046 -6.9444284]]
Iteration 200 of 1000: loss=0.149 " + "l1=0.138" + "l2=0.0109 f=-0.539 shape=(1, 9000, 1)
logits [[ 4.3227215 -2.5938513  2.938907  -6.822856 ]]
Iteration 300 of 1000: loss=0.141 " + "l1=0.127" + "l2=0.0139 f=-0.535 shape=(1, 9000, 1)
logits [[ 4.2110577 -2.594612   2.9374623 -6.694285 ]]
Iteration 400 of 1000: loss=0.134 " + "l1=0.118" + "l2=0.0164 f=-0.532 shape=(1, 9000, 1)
logits [[ 4.106976  -2.5929072  2.9290297 -6.572198 ]]
Iteration 500 of 1000: loss=0.127 " + "l1=0.108" + "l2=0.019 f=-0.53 shape=(1, 9000, 1)
logits [[ 3.998351  -2.590893   2.915857  -6.4424424]]
Iteration 600 of 1000: loss=0.122 " + "l1=0.101" + "l2=0.0211 f=-0.529 shape=(1, 9000, 1)
logits [[ 3.9111764 -2.589719   2.9044068 -6.3400435]]
Iteration 700 of 1000: loss=0.117 " + "l1=0.0945" + "l2=0.023 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.8381696 -2.58598    2.8935938 -6.253465 ]]
Iteration 800 of 1000: loss=0.114 " + "l1=0.0887" + "l2=0.0249 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.7689967 -2.578571   2.8819768 -6.1729054]]
Iteration 900 of 1000: loss=0.11 " + "l1=0.0833" + "l2=0.0268 f=-0.524 shape=(1, 9000, 1)
logits [[ 3.705041 -2.573719  2.87194  -6.099077]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.74 " + "l1=1.74" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 4.6534405 -2.572927   2.9133613 -7.1782546]]
Iteration 100 of 1000: loss=0.38 " + "l1=0" + "l2=0.38 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.0345342 -2.724277   3.0364194 -5.446157 ]]
Iteration 200 of 1000: loss=0.251 " + "l1=0.000893" + "l2=0.25 f=-0.522 shape=(1, 9000, 1)
logits [[ 3.0061226 -2.691515   3.0052292 -5.4084706]]
Iteration 300 of 1000: loss=0.206 " + "l1=0" + "l2=0.206 f=-0.519 shape=(1, 9000, 1)
logits [[ 2.9619641 -2.6650422  2.9754019 -5.3500905]]
Iteration 400 of 1000: loss=0.173 " + "l1=0" + "l2=0.173 f=-0.521 shape=(1, 9000, 1)
logits [[ 2.935693  -2.6359806  2.9358566 -5.3177056]]
Iteration 500 of 1000: loss=0.162 " + "l1=0.00929" + "l2=0.153 f=-0.522 shape=(1, 9000, 1)
logits [[ 2.9219298 -2.6214163  2.9126384 -5.3026924]]
Iteration 600 of 1000: loss=0.144 " + "l1=0" + "l2=0.144 f=-0.523 shape=(1, 9000, 1)
logits [[ 2.8832827 -2.6110687  2.89229   -5.2568865]]
Iteration 700 of 1000: loss=0.134 " + "l1=0" + "l2=0.134 f=-0.524 shape=(1, 9000, 1)
logits [[ 2.8601    -2.5975468  2.8672273 -5.22743  ]]
Iteration 800 of 1000: loss=0.125 " + "l1=0.00133" + "l2=0.123 f=-0.525 shape=(1, 9000, 1)
logits [[ 2.844435  -2.5891118  2.8431096 -5.199456 ]]
Iteration 900 of 1000: loss=0.119 " + "l1=0.00336" + "l2=0.116 f=-0.525 shape=(1, 9000, 1)
logits [[ 2.8272    -2.5864062  2.823844  -5.1643186]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.957 " + "l1=0.957" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 4.6534405 -2.572927   2.9133613 -7.1782546]]
Iteration 100 of 1000: loss=0.439 " + "l1=0.179" + "l2=0.26 f=-0.533 shape=(1, 9000, 1)
logits [[ 3.356683  -2.7108529  3.031321  -5.8090577]]
Iteration 200 of 1000: loss=0.253 " + "l1=0.0123" + "l2=0.241 f=-0.524 shape=(1, 9000, 1)
logits [[ 3.0109832 -2.6863117  2.9886734 -5.407964 ]]
Iteration 300 of 1000: loss=0.194 " + "l1=0.00409" + "l2=0.19 f=-0.52 shape=(1, 9000, 1)
logits [[ 2.9614577 -2.6545277  2.954023  -5.3420157]]
Iteration 400 of 1000: loss=0.161 " + "l1=0" + "l2=0.161 f=-0.522 shape=(1, 9000, 1)
logits [[ 2.9143653 -2.6285453  2.9147186 -5.289898 ]]
Iteration 500 of 1000: loss=0.149 " + "l1=0" + "l2=0.149 f=-0.523 shape=(1, 9000, 1)
logits [[ 2.8691993 -2.613256   2.8849304 -5.231891 ]]
Iteration 600 of 1000: loss=0.134 " + "l1=0.00306" + "l2=0.131 f=-0.523 shape=(1, 9000, 1)
logits [[ 2.857003  -2.5941198  2.8514318 -5.206767 ]]
Iteration 700 of 1000: loss=0.123 " + "l1=0" + "l2=0.123 f=-0.523 shape=(1, 9000, 1)
logits [[ 2.8259332 -2.5857239  2.8278675 -5.1595592]]
Iteration 800 of 1000: loss=0.116 " + "l1=0" + "l2=0.116 f=-0.523 shape=(1, 9000, 1)
logits [[ 2.8064184 -2.5819504  2.8087778 -5.1262994]]
Iteration 900 of 1000: loss=0.109 " + "l1=0" + "l2=0.109 f=-0.523 shape=(1, 9000, 1)
logits [[ 2.7881851 -2.5828788  2.79417   -5.09218  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.566 " + "l1=0.566" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 4.6534405 -2.572927   2.9133613 -7.1782546]]
Iteration 100 of 1000: loss=0.387 " + "l1=0.298" + "l2=0.0894 f=-0.523 shape=(1, 9000, 1)
logits [[ 3.9124331 -2.6304264  2.9961267 -6.3708625]]
Iteration 200 of 1000: loss=0.294 " + "l1=0.163" + "l2=0.131 f=-0.526 shape=(1, 9000, 1)
logits [[ 3.4909058 -2.6536317  2.9896243 -5.929428 ]]
Iteration 300 of 1000: loss=0.23 " + "l1=0.0765" + "l2=0.154 f=-0.523 shape=(1, 9000, 1)
logits [[ 3.1989958 -2.6564703  2.9634721 -5.5977073]]
Iteration 400 of 1000: loss=0.178 " + "l1=0.00426" + "l2=0.174 f=-0.519 shape=(1, 9000, 1)
logits [[ 2.9221714 -2.6228476  2.9090486 -5.2860026]]
Iteration 500 of 1000: loss=0.15 " + "l1=0.00155" + "l2=0.149 f=-0.521 shape=(1, 9000, 1)
logits [[ 2.8785605 -2.6054623  2.873784  -5.232468 ]]
Iteration 600 of 1000: loss=0.134 " + "l1=0.000785" + "l2=0.133 f=-0.522 shape=(1, 9000, 1)
logits [[ 2.838623  -2.5898793  2.8362086 -5.1723266]]
Iteration 700 of 1000: loss=0.123 " + "l1=0" + "l2=0.123 f=-0.522 shape=(1, 9000, 1)
logits [[ 2.8014286 -2.5777795  2.8055503 -5.1185093]]
Iteration 800 of 1000: loss=0.114 " + "l1=0.00112" + "l2=0.113 f=-0.524 shape=(1, 9000, 1)
logits [[ 2.783486  -2.573822   2.7800362 -5.085911 ]]
Iteration 900 of 1000: loss=0.107 " + "l1=0" + "l2=0.107 f=-0.526 shape=(1, 9000, 1)
logits [[ 2.7589319 -2.5783281  2.7643716 -5.047516 ]]
--- 272.8255863189697 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.118 " + "l1=0.118" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 4.6534405 -2.572927   2.9133613 -7.1782546]]
Iteration 100 of 1000: loss=0.117 " + "l1=0.117" + "l2=0.000542 f=-0.541 shape=(1, 9000, 1)
logits [[ 4.587641  -2.5677388  2.9010055 -7.0868134]]
Iteration 200 of 1000: loss=0.117 " + "l1=0.116" + "l2=0.000564 f=-0.54 shape=(1, 9000, 1)
logits [[ 4.5693393 -2.5653589  2.896316  -7.0614934]]
Iteration 300 of 1000: loss=0.116 " + "l1=0.116" + "l2=0.000697 f=-0.539 shape=(1, 9000, 1)
logits [[ 4.5455246 -2.562705   2.8904064 -7.027716 ]]
Iteration 400 of 1000: loss=0.116 " + "l1=0.115" + "l2=0.000867 f=-0.537 shape=(1, 9000, 1)
logits [[ 4.5194263 -2.5599887  2.883855  -6.9907255]]
Iteration 500 of 1000: loss=0.116 " + "l1=0.114" + "l2=0.00108 f=-0.535 shape=(1, 9000, 1)
logits [[ 4.49212   -2.5571065  2.8769999 -6.9523597]]
Iteration 600 of 1000: loss=0.115 " + "l1=0.114" + "l2=0.00133 f=-0.533 shape=(1, 9000, 1)
logits [[ 4.463779  -2.5540597  2.8697536 -6.9126935]]
Iteration 700 of 1000: loss=0.115 " + "l1=0.113" + "l2=0.00152 f=-0.532 shape=(1, 9000, 1)
logits [[ 4.4355392 -2.55111    2.8625343 -6.873349 ]]
Iteration 800 of 1000: loss=0.114 " + "l1=0.112" + "l2=0.00185 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.4072003 -2.5480618  2.8549435 -6.8335495]]
Iteration 900 of 1000: loss=0.114 " + "l1=0.112" + "l2=0.00212 f=-0.528 shape=(1, 9000, 1)
logits [[ 4.378607  -2.5449958  2.847264  -6.7936583]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.18 " + "l1=1.18" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 4.6534405 -2.572927   2.9133613 -7.1782546]]
Iteration 100 of 1000: loss=1.09 " + "l1=1.04" + "l2=0.0465 f=-0.502 shape=(1, 9000, 1)
logits [[ 4.05443   -2.5280368  2.799067  -6.332785 ]]
Iteration 200 of 1000: loss=1.02 " + "l1=0.952" + "l2=0.067 f=-0.473 shape=(1, 9000, 1)
logits [[ 3.69721   -2.4763212  2.7060566 -5.820689 ]]
Iteration 300 of 1000: loss=0.955 " + "l1=0.87" + "l2=0.085 f=-0.444 shape=(1, 9000, 1)
logits [[ 3.3755708 -2.418979   2.5956495 -5.3281565]]
Iteration 400 of 1000: loss=0.89 " + "l1=0.78" + "l2=0.11 f=-0.414 shape=(1, 9000, 1)
logits [[ 3.0232348 -2.344215   2.443725  -4.7772646]]
Iteration 500 of 1000: loss=0.831 " + "l1=0.7" + "l2=0.131 f=-0.386 shape=(1, 9000, 1)
logits [[ 2.7174494 -2.2746475  2.2966075 -4.281881 ]]
Iteration 600 of 1000: loss=0.783 " + "l1=0.632" + "l2=0.151 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.468367  -2.2079692  2.1628475 -3.8525174]]
Iteration 700 of 1000: loss=0.739 " + "l1=0.572" + "l2=0.167 f=-0.334 shape=(1, 9000, 1)
logits [[ 2.244722  -2.1521318  2.0462995 -3.4766412]]
Iteration 800 of 1000: loss=0.704 " + "l1=0.522" + "l2=0.181 f=-0.319 shape=(1, 9000, 1)
logits [[ 2.0491695 -2.1043751  1.9531748 -3.1749907]]
Iteration 900 of 1000: loss=0.672 " + "l1=0.474" + "l2=0.198 f=-0.304 shape=(1, 9000, 1)
logits [[ 1.859711  -2.0595458  1.86023   -2.8756433]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.8 " + "l1=11.8" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 4.6534405 -2.572927   2.9133613 -7.1782546]]
Iteration 100 of 1000: loss=5.63 " + "l1=3.5" + "l2=2.13 f=-0.221 shape=(1, 9000, 1)
logits [[ 1.3525232 -2.0244274  1.6424607 -1.8556669]]
Iteration 200 of 1000: loss=3.66 " + "l1=1.12" + "l2=2.54 f=-0.0864 shape=(1, 9000, 1)
logits [[ 0.39871952 -1.628598    1.0021056  -0.11769115]]
Iteration 300 of 1000: loss=2.37 " + "l1=0.0426" + "l2=2.32 f=-0.0361 shape=(1, 9000, 1)
logits [[-0.02135295 -1.5031445   0.7113989   0.66878086]]
Iteration 400 of 1000: loss=1.79 " + "l1=0.00554" + "l2=1.78 f=-0.036 shape=(1, 9000, 1)
logits [[-0.02075647 -1.5326415   0.7074912   0.70194715]]
Iteration 500 of 1000: loss=1.52 " + "l1=0.00118" + "l2=1.51 f=-0.0335 shape=(1, 9000, 1)
logits [[ 0.00551845 -1.580091    0.7209113   0.7197345 ]]
Iteration 600 of 1000: loss=1.32 " + "l1=0" + "l2=1.32 f=-0.0337 shape=(1, 9000, 1)
logits [[ 0.0265591 -1.6188972  0.7280557  0.7294781]]
Iteration 700 of 1000: loss=1.15 " + "l1=0.00562" + "l2=1.14 f=-0.0387 shape=(1, 9000, 1)
logits [[ 0.03216993 -1.6568027   0.73781574  0.73219913]]
Iteration 800 of 1000: loss=1.02 " + "l1=0" + "l2=1.02 f=-0.0482 shape=(1, 9000, 1)
logits [[ 0.00455527 -1.6806777   0.73043555  0.75277877]]
Iteration 900 of 1000: loss=0.912 " + "l1=0" + "l2=0.912 f=-0.0609 shape=(1, 9000, 1)
logits [[-0.01199046 -1.7032781   0.7305829   0.7412702 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.51 " + "l1=6.51" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 4.6534405 -2.572927   2.9133613 -7.1782546]]
Iteration 100 of 1000: loss=3.92 " + "l1=2.9" + "l2=1.02 f=-0.328 shape=(1, 9000, 1)
logits [[ 2.067431  -2.255467   2.0725899 -3.194696 ]]
Iteration 200 of 1000: loss=3.02 " + "l1=1.99" + "l2=1.03 f=-0.225 shape=(1, 9000, 1)
logits [[ 1.4668119 -1.9985744  1.628327  -1.9980791]]
Iteration 300 of 1000: loss=2.32 " + "l1=1.22" + "l2=1.1 f=-0.151 shape=(1, 9000, 1)
logits [[ 0.90960234 -1.8043803   1.2575669  -0.9658669 ]]
Iteration 400 of 1000: loss=1.81 " + "l1=0.656" + "l2=1.15 f=-0.0951 shape=(1, 9000, 1)
logits [[ 0.54851794 -1.6908329   0.9777884  -0.21577212]]
Iteration 500 of 1000: loss=1.45 " + "l1=0.282" + "l2=1.17 f=-0.0692 shape=(1, 9000, 1)
logits [[ 0.30391046 -1.6606154   0.7959579   0.28394356]]
Iteration 600 of 1000: loss=1.14 " + "l1=0.00478" + "l2=1.13 f=-0.0517 shape=(1, 9000, 1)
logits [[ 0.11932129 -1.6303545   0.6565267   0.64783335]]
Iteration 700 of 1000: loss=0.962 " + "l1=0.0088" + "l2=0.954 f=-0.0489 shape=(1, 9000, 1)
logits [[ 0.14399391 -1.6215594   0.6489092   0.6329151 ]]
Iteration 800 of 1000: loss=0.867 " + "l1=0.0118" + "l2=0.855 f=-0.0489 shape=(1, 9000, 1)
logits [[ 0.14589536 -1.6310922   0.6554087   0.6339892 ]]
Iteration 900 of 1000: loss=0.797 " + "l1=0.00339" + "l2=0.793 f=-0.0541 shape=(1, 9000, 1)
logits [[ 0.11658442 -1.6440676   0.65869904  0.6525359 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.85 " + "l1=3.85" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 4.6534405 -2.572927   2.9133613 -7.1782546]]
Iteration 100 of 1000: loss=2.77 " + "l1=2.2" + "l2=0.567 f=-0.393 shape=(1, 9000, 1)
logits [[ 2.5826008 -2.4105532  2.4483118 -4.1933413]]
Iteration 200 of 1000: loss=2.25 " + "l1=1.71" + "l2=0.547 f=-0.311 shape=(1, 9000, 1)
logits [[ 2.0593348 -2.1754901  2.0610707 -3.1873515]]
Iteration 300 of 1000: loss=1.9 " + "l1=1.37" + "l2=0.536 f=-0.245 shape=(1, 9000, 1)
logits [[ 1.7293309 -1.9963292  1.7467915 -2.460716 ]]
Iteration 400 of 1000: loss=1.61 " + "l1=1.03" + "l2=0.581 f=-0.207 shape=(1, 9000, 1)
logits [[ 1.2862663 -1.8558654  1.4499329 -1.7074764]]
Iteration 500 of 1000: loss=1.36 " + "l1=0.751" + "l2=0.612 f=-0.167 shape=(1, 9000, 1)
logits [[ 0.983624  -1.7854034  1.2218813 -1.0895253]]
Iteration 600 of 1000: loss=1.17 " + "l1=0.523" + "l2=0.646 f=-0.138 shape=(1, 9000, 1)
logits [[ 0.7549421 -1.7035875  1.0023686 -0.6070353]]
Iteration 700 of 1000: loss=1.04 " + "l1=0.356" + "l2=0.683 f=-0.111 shape=(1, 9000, 1)
logits [[ 0.5773906  -1.6471938   0.8610732  -0.23449951]]
Iteration 800 of 1000: loss=0.956 " + "l1=0.27" + "l2=0.686 f=-0.0968 shape=(1, 9000, 1)
logits [[ 0.48871687 -1.6434133   0.79886305 -0.03140833]]
Iteration 900 of 1000: loss=0.888 " + "l1=0.199" + "l2=0.689 f=-0.0877 shape=(1, 9000, 1)
logits [[ 0.4029026 -1.6470567  0.7521579  0.1412138]]
--- 302.7064538002014 seconds ---
Adv result:3
Loading record A01753
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0644 " + "l1=0.0644" + "l2=0 f=-0.465 shape=(1, 9000, 1)
logits [[ 5.3304205 -1.1080875  1.5275067 -7.6105795]]
Iteration 100 of 1000: loss=0.0636 " + "l1=0.0631" + "l2=0.000468 f=-0.463 shape=(1, 9000, 1)
logits [[ 5.255807  -1.054367   1.4961044 -7.5509253]]
Iteration 200 of 1000: loss=0.0633 " + "l1=0.0628" + "l2=0.000529 f=-0.462 shape=(1, 9000, 1)
logits [[ 5.2394466 -1.0390388  1.4883776 -7.538109 ]]
Iteration 300 of 1000: loss=0.0631 " + "l1=0.0624" + "l2=0.000678 f=-0.461 shape=(1, 9000, 1)
logits [[ 5.2196503 -1.0227507  1.4801744 -7.522588 ]]
Iteration 400 of 1000: loss=0.0629 " + "l1=0.0621" + "l2=0.000832 f=-0.461 shape=(1, 9000, 1)
logits [[ 5.2005124 -1.0081483  1.4724365 -7.5070777]]
Iteration 500 of 1000: loss=0.0628 " + "l1=0.0618" + "l2=0.000995 f=-0.46 shape=(1, 9000, 1)
logits [[ 5.181607  -0.994561   1.4652755 -7.491562 ]]
Iteration 600 of 1000: loss=0.0626 " + "l1=0.0614" + "l2=0.00119 f=-0.459 shape=(1, 9000, 1)
logits [[ 5.162452  -0.9818396  1.4584205 -7.4758606]]
Iteration 700 of 1000: loss=0.0624 " + "l1=0.0612" + "l2=0.00129 f=-0.459 shape=(1, 9000, 1)
logits [[ 5.144614  -0.9710428  1.4523364 -7.460904 ]]
Iteration 800 of 1000: loss=0.0623 " + "l1=0.0609" + "l2=0.00144 f=-0.458 shape=(1, 9000, 1)
logits [[ 5.1267056 -0.9608622  1.4465215 -7.445831 ]]
Iteration 900 of 1000: loss=0.0623 " + "l1=0.0606" + "l2=0.00165 f=-0.458 shape=(1, 9000, 1)
logits [[ 5.1094217 -0.9518034  1.4412044 -7.4309506]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.644 " + "l1=0.644" + "l2=0 f=-0.465 shape=(1, 9000, 1)
logits [[ 5.3304205 -1.1080875  1.5275067 -7.6105795]]
Iteration 100 of 1000: loss=0.562 " + "l1=0.525" + "l2=0.0376 f=-0.46 shape=(1, 9000, 1)
logits [[ 4.62007    -0.62741244  1.281983   -7.1143723 ]]
Iteration 200 of 1000: loss=0.526 " + "l1=0.472" + "l2=0.0542 f=-0.461 shape=(1, 9000, 1)
logits [[ 4.2599397 -0.460952   1.1807817 -6.824229 ]]
Iteration 300 of 1000: loss=0.498 " + "l1=0.425" + "l2=0.0729 f=-0.464 shape=(1, 9000, 1)
logits [[ 3.9234147 -0.3290261  1.0933627 -6.544154 ]]
Iteration 400 of 1000: loss=0.471 " + "l1=0.379" + "l2=0.0929 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.5757387  -0.20945065  0.9962049  -6.2711215 ]]
Iteration 500 of 1000: loss=0.442 " + "l1=0.332" + "l2=0.11 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.2272367  -0.09576142  0.9046613  -6.0097876 ]]
Iteration 600 of 1000: loss=0.412 " + "l1=0.288" + "l2=0.123 f=-0.507 shape=(1, 9000, 1)
logits [[ 2.8942595   0.01034834  0.82203484 -5.756008  ]]
Iteration 700 of 1000: loss=0.379 " + "l1=0.247" + "l2=0.132 f=-0.521 shape=(1, 9000, 1)
logits [[ 2.5796404   0.10594004  0.7598407  -5.528224  ]]
Iteration 800 of 1000: loss=0.346 " + "l1=0.198" + "l2=0.147 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.2073786   0.22383223  0.6932956  -5.2744994 ]]
Iteration 900 of 1000: loss=0.305 " + "l1=0.137" + "l2=0.168 f=-0.559 shape=(1, 9000, 1)
logits [[ 1.7537087   0.38626137  0.62632054 -5.0011377 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.44 " + "l1=6.44" + "l2=0 f=-0.465 shape=(1, 9000, 1)
logits [[ 5.3304205 -1.1080875  1.5275067 -7.6105795]]
Iteration 100 of 1000: loss=0.991 " + "l1=0" + "l2=0.991 f=-0.641 shape=(1, 9000, 1)
logits [[ 0.85782456  0.86999387  0.49829015 -4.789921  ]]
Iteration 200 of 1000: loss=0.713 " + "l1=0" + "l2=0.713 f=-0.628 shape=(1, 9000, 1)
logits [[ 0.8459353   0.8693382   0.46623728 -4.6931562 ]]
Iteration 300 of 1000: loss=0.596 " + "l1=0" + "l2=0.596 f=-0.62 shape=(1, 9000, 1)
logits [[ 0.84514844  0.8521876   0.45064202 -4.6272817 ]]
Iteration 400 of 1000: loss=0.55 " + "l1=0" + "l2=0.55 f=-0.623 shape=(1, 9000, 1)
logits [[ 0.7264749   0.8857164   0.43755746 -4.5411077 ]]
Iteration 500 of 1000: loss=0.479 " + "l1=0" + "l2=0.479 f=-0.609 shape=(1, 9000, 1)
logits [[ 0.79119754  0.8436265   0.44819337 -4.517717  ]]
Iteration 600 of 1000: loss=0.44 " + "l1=0" + "l2=0.44 f=-0.604 shape=(1, 9000, 1)
logits [[ 0.77297926  0.84515256  0.46145093 -4.4956927 ]]
Iteration 700 of 1000: loss=0.407 " + "l1=0" + "l2=0.407 f=-0.601 shape=(1, 9000, 1)
logits [[ 0.7614981   0.84038603  0.4753313  -4.4828634 ]]
Iteration 800 of 1000: loss=0.375 " + "l1=0" + "l2=0.375 f=-0.598 shape=(1, 9000, 1)
logits [[ 0.7686244   0.8312769   0.49074796 -4.4817815 ]]
Iteration 900 of 1000: loss=0.351 " + "l1=0" + "l2=0.351 f=-0.597 shape=(1, 9000, 1)
logits [[ 0.75409204  0.83603215  0.5069794  -4.486775  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.54 " + "l1=3.54" + "l2=0 f=-0.465 shape=(1, 9000, 1)
logits [[ 5.3304205 -1.1080875  1.5275067 -7.6105795]]
Iteration 100 of 1000: loss=0.924 " + "l1=0.0179" + "l2=0.907 f=-0.637 shape=(1, 9000, 1)
logits [[ 0.9024134   0.8699402   0.50188136 -4.821447  ]]
Iteration 200 of 1000: loss=0.638 " + "l1=0" + "l2=0.638 f=-0.628 shape=(1, 9000, 1)
logits [[ 0.85407305  0.8608043   0.46521795 -4.694029  ]]
Iteration 300 of 1000: loss=0.531 " + "l1=0" + "l2=0.531 f=-0.618 shape=(1, 9000, 1)
logits [[ 0.839609    0.8498794   0.44999567 -4.6113863 ]]
Iteration 400 of 1000: loss=0.474 " + "l1=0" + "l2=0.474 f=-0.613 shape=(1, 9000, 1)
logits [[ 0.7752803   0.8573224   0.44837633 -4.5331182 ]]
Iteration 500 of 1000: loss=0.417 " + "l1=0" + "l2=0.417 f=-0.607 shape=(1, 9000, 1)
logits [[ 0.8035742   0.83611125  0.46897092 -4.5382886 ]]
Iteration 600 of 1000: loss=0.376 " + "l1=0" + "l2=0.376 f=-0.604 shape=(1, 9000, 1)
logits [[ 0.8032604  0.819618   0.4844099 -4.5243316]]
Iteration 700 of 1000: loss=0.348 " + "l1=0.00926" + "l2=0.339 f=-0.603 shape=(1, 9000, 1)
logits [[ 0.81573904  0.7989115   0.5049405  -4.5299554 ]]
Iteration 800 of 1000: loss=0.313 " + "l1=0" + "l2=0.313 f=-0.605 shape=(1, 9000, 1)
logits [[ 0.7655736  0.8052175  0.5267686 -4.518249 ]]
Iteration 900 of 1000: loss=0.285 " + "l1=0" + "l2=0.285 f=-0.603 shape=(1, 9000, 1)
logits [[ 0.7488916   0.79644924  0.5489223  -4.506633  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.09 " + "l1=2.09" + "l2=0 f=-0.465 shape=(1, 9000, 1)
logits [[ 5.3304205 -1.1080875  1.5275067 -7.6105795]]
Iteration 100 of 1000: loss=1.15 " + "l1=0.624" + "l2=0.522 f=-0.561 shape=(1, 9000, 1)
logits [[ 2.2174573   0.29896292  0.66027415 -5.419556  ]]
Iteration 200 of 1000: loss=0.626 " + "l1=0.0101" + "l2=0.616 f=-0.623 shape=(1, 9000, 1)
logits [[ 0.88026035  0.84925896  0.45908177 -4.6786985 ]]
Iteration 300 of 1000: loss=0.5 " + "l1=0" + "l2=0.5 f=-0.615 shape=(1, 9000, 1)
logits [[ 0.8148016   0.85357285  0.44372085 -4.5728583 ]]
Iteration 400 of 1000: loss=0.423 " + "l1=0" + "l2=0.423 f=-0.61 shape=(1, 9000, 1)
logits [[ 0.8244463   0.83208436  0.4484935  -4.5460343 ]]
Iteration 500 of 1000: loss=0.368 " + "l1=0" + "l2=0.368 f=-0.611 shape=(1, 9000, 1)
logits [[ 0.80962     0.8243968   0.48034176 -4.558913  ]]
Iteration 600 of 1000: loss=0.324 " + "l1=0" + "l2=0.324 f=-0.613 shape=(1, 9000, 1)
logits [[ 0.7912116  0.803446   0.5064889 -4.553688 ]]
Iteration 700 of 1000: loss=0.289 " + "l1=0" + "l2=0.289 f=-0.613 shape=(1, 9000, 1)
logits [[ 0.76416874  0.7877218   0.53060937 -4.534703  ]]
Iteration 800 of 1000: loss=0.261 " + "l1=0" + "l2=0.261 f=-0.614 shape=(1, 9000, 1)
logits [[ 0.7446189  0.7808248  0.5578664 -4.5396266]]
Iteration 900 of 1000: loss=0.238 " + "l1=0.00186" + "l2=0.236 f=-0.614 shape=(1, 9000, 1)
logits [[ 0.7631418   0.75741273  0.58696467 -4.562271  ]]
--- 308.2558844089508 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.038 " + "l1=0.038" + "l2=0 f=-0.465 shape=(1, 9000, 1)
logits [[ 5.3304205 -1.1080875  1.5275067 -7.6105795]]
Iteration 100 of 1000: loss=0.0378 " + "l1=0.0376" + "l2=0.000182 f=-0.467 shape=(1, 9000, 1)
logits [[ 5.288354  -1.1007375  1.5242766 -7.5784745]]
Iteration 200 of 1000: loss=0.0378 " + "l1=0.0376" + "l2=0.000139 f=-0.466 shape=(1, 9000, 1)
logits [[ 5.2848763 -1.0995804  1.5234745 -7.57459  ]]
Iteration 300 of 1000: loss=0.0377 " + "l1=0.0375" + "l2=0.000168 f=-0.466 shape=(1, 9000, 1)
logits [[ 5.277819  -1.0982077  1.5228566 -7.568228 ]]
Iteration 400 of 1000: loss=0.0377 " + "l1=0.0375" + "l2=0.000241 f=-0.466 shape=(1, 9000, 1)
logits [[ 5.270051  -1.096824   1.5222471 -7.5611978]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.38 " + "l1=0.38" + "l2=0 f=-0.465 shape=(1, 9000, 1)
logits [[ 5.3304205 -1.1080875  1.5275067 -7.6105795]]
Iteration 100 of 1000: loss=0.363 " + "l1=0.354" + "l2=0.00858 f=-0.473 shape=(1, 9000, 1)
logits [[ 5.0543566 -1.0504147  1.5123782 -7.4074173]]
Iteration 200 of 1000: loss=0.354 " + "l1=0.342" + "l2=0.0125 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.91752   -1.0107698  1.4983548 -7.296898 ]]
Iteration 300 of 1000: loss=0.346 " + "l1=0.329" + "l2=0.0165 f=-0.474 shape=(1, 9000, 1)
logits [[ 4.770332  -0.9628268  1.480476  -7.1833334]]
Iteration 400 of 1000: loss=0.337 " + "l1=0.317" + "l2=0.0202 f=-0.477 shape=(1, 9000, 1)
logits [[ 4.623777   -0.92419946  1.4580401  -7.0673513 ]]
Iteration 500 of 1000: loss=0.327 " + "l1=0.302" + "l2=0.025 f=-0.48 shape=(1, 9000, 1)
logits [[ 4.4537086 -0.8650634  1.4309828 -6.940087 ]]
Iteration 600 of 1000: loss=0.317 " + "l1=0.287" + "l2=0.0299 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.279975  -0.8081835  1.4073838 -6.8165827]]
Iteration 700 of 1000: loss=0.308 " + "l1=0.272" + "l2=0.0353 f=-0.491 shape=(1, 9000, 1)
logits [[ 4.112919  -0.7597825  1.3888693 -6.704708 ]]
Iteration 800 of 1000: loss=0.298 " + "l1=0.258" + "l2=0.0404 f=-0.498 shape=(1, 9000, 1)
logits [[ 3.9488757  -0.71598715  1.3715926  -6.5957727 ]]
Iteration 900 of 1000: loss=0.288 " + "l1=0.242" + "l2=0.0455 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.7771587 -0.6859743  1.3552451 -6.4747653]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.8 " + "l1=3.8" + "l2=0 f=-0.465 shape=(1, 9000, 1)
logits [[ 5.3304205 -1.1080875  1.5275067 -7.6105795]]
Iteration 100 of 1000: loss=1.04 " + "l1=0.0226" + "l2=1.01 f=-0.721 shape=(1, 9000, 1)
logits [[ 1.331557   -0.30307886  1.308934   -5.2232566 ]]
Iteration 200 of 1000: loss=0.666 " + "l1=0" + "l2=0.666 f=-0.743 shape=(1, 9000, 1)
logits [[ 1.2355272 -0.2591165  1.2474787 -5.19513  ]]
Iteration 300 of 1000: loss=0.549 " + "l1=0.00538" + "l2=0.543 f=-0.743 shape=(1, 9000, 1)
logits [[ 1.2265593  -0.24734978  1.2211761  -5.1740265 ]]
Iteration 400 of 1000: loss=0.486 " + "l1=0.00706" + "l2=0.479 f=-0.745 shape=(1, 9000, 1)
logits [[ 1.2021877  -0.24046026  1.195131   -5.1369967 ]]
Iteration 500 of 1000: loss=0.454 " + "l1=0.0255" + "l2=0.429 f=-0.739 shape=(1, 9000, 1)
logits [[ 1.2015934  -0.24211334  1.1760935  -5.0920854 ]]
Iteration 600 of 1000: loss=0.396 " + "l1=0" + "l2=0.396 f=-0.735 shape=(1, 9000, 1)
logits [[ 1.1455517  -0.21657507  1.1497118  -5.017548  ]]
Iteration 700 of 1000: loss=0.374 " + "l1=0" + "l2=0.374 f=-0.731 shape=(1, 9000, 1)
logits [[ 1.0667679  -0.18525691  1.1300607  -4.9365788 ]]
Iteration 800 of 1000: loss=0.332 " + "l1=0" + "l2=0.332 f=-0.722 shape=(1, 9000, 1)
logits [[ 1.1133727  -0.19065033  1.1146631  -4.9235883 ]]
Iteration 900 of 1000: loss=0.315 " + "l1=0.0116" + "l2=0.304 f=-0.718 shape=(1, 9000, 1)
logits [[ 1.1174772  -0.19156349  1.1058751  -4.902166  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.09 " + "l1=2.09" + "l2=0 f=-0.465 shape=(1, 9000, 1)
logits [[ 5.3304205 -1.1080875  1.5275067 -7.6105795]]
Iteration 100 of 1000: loss=1.34 " + "l1=0.886" + "l2=0.449 f=-0.561 shape=(1, 9000, 1)
logits [[ 2.932599  -0.4927516  1.3219234 -6.004172 ]]
Iteration 200 of 1000: loss=0.638 " + "l1=0" + "l2=0.638 f=-0.751 shape=(1, 9000, 1)
logits [[ 1.2831401 -0.3096262  1.2944804 -5.273014 ]]
Iteration 300 of 1000: loss=0.48 " + "l1=0" + "l2=0.48 f=-0.762 shape=(1, 9000, 1)
logits [[ 1.2476331  -0.28993592  1.2525077  -5.2598667 ]]
Iteration 400 of 1000: loss=0.404 " + "l1=5.49e-05" + "l2=0.404 f=-0.758 shape=(1, 9000, 1)
logits [[ 1.233791   -0.28093204  1.2336912  -5.219203  ]]
Iteration 500 of 1000: loss=0.359 " + "l1=0.0126" + "l2=0.346 f=-0.753 shape=(1, 9000, 1)
logits [[ 1.2486029 -0.2888811  1.225631  -5.195703 ]]
Iteration 600 of 1000: loss=0.313 " + "l1=0" + "l2=0.313 f=-0.753 shape=(1, 9000, 1)
logits [[ 1.2153318  -0.29769838  1.2248694  -5.153827  ]]
Iteration 700 of 1000: loss=0.283 " + "l1=0" + "l2=0.283 f=-0.756 shape=(1, 9000, 1)
logits [[ 1.1876603  -0.29814106  1.2089343  -5.122714  ]]
Iteration 800 of 1000: loss=0.254 " + "l1=0.004" + "l2=0.25 f=-0.752 shape=(1, 9000, 1)
logits [[ 1.1916803  -0.28394115  1.1843987  -5.0997396 ]]
Iteration 900 of 1000: loss=0.229 " + "l1=0.000911" + "l2=0.228 f=-0.751 shape=(1, 9000, 1)
logits [[ 1.176361   -0.27160764  1.1747054  -5.082526  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.24 " + "l1=1.24" + "l2=0 f=-0.465 shape=(1, 9000, 1)
logits [[ 5.3304205 -1.1080875  1.5275067 -7.6105795]]
Iteration 100 of 1000: loss=1.01 " + "l1=0.876" + "l2=0.132 f=-0.501 shape=(1, 9000, 1)
logits [[ 4.1111627  -0.79152495  1.4168038  -6.739394  ]]
Iteration 200 of 1000: loss=0.843 " + "l1=0.63" + "l2=0.213 f=-0.545 shape=(1, 9000, 1)
logits [[ 3.2541268 -0.549549   1.3157705 -6.199874 ]]
Iteration 300 of 1000: loss=0.618 " + "l1=0.264" + "l2=0.353 f=-0.658 shape=(1, 9000, 1)
logits [[ 2.1625805  -0.45252198  1.3491201  -5.6896167 ]]
Iteration 400 of 1000: loss=0.409 " + "l1=0.00244" + "l2=0.406 f=-0.755 shape=(1, 9000, 1)
logits [[ 1.3339962 -0.3844228  1.3264778 -5.294764 ]]
Iteration 500 of 1000: loss=0.321 " + "l1=0.00439" + "l2=0.316 f=-0.753 shape=(1, 9000, 1)
logits [[ 1.3253106 -0.3760333  1.3117981 -5.2750154]]
Iteration 600 of 1000: loss=0.274 " + "l1=0.00421" + "l2=0.269 f=-0.751 shape=(1, 9000, 1)
logits [[ 1.3098781  -0.36305335  1.2969309  -5.247891  ]]
Iteration 700 of 1000: loss=0.244 " + "l1=0" + "l2=0.244 f=-0.746 shape=(1, 9000, 1)
logits [[ 1.2858732  -0.35958284  1.2895112  -5.1980205 ]]
Iteration 800 of 1000: loss=0.224 " + "l1=0" + "l2=0.224 f=-0.741 shape=(1, 9000, 1)
logits [[ 1.2658359 -0.3549128  1.2697006 -5.1428733]]
Iteration 900 of 1000: loss=0.208 " + "l1=0" + "l2=0.208 f=-0.736 shape=(1, 9000, 1)
logits [[ 1.2255096  -0.32572854  1.2292739  -5.0739756 ]]
--- 268.047180891037 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.129 " + "l1=0.129" + "l2=0 f=-0.465 shape=(1, 9000, 1)
logits [[ 5.3304205 -1.1080875  1.5275067 -7.6105795]]
Iteration 100 of 1000: loss=0.128 " + "l1=0.128" + "l2=0.000603 f=-0.464 shape=(1, 9000, 1)
logits [[ 5.239575  -1.077563   1.493479  -7.5107594]]
Iteration 200 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.000693 f=-0.463 shape=(1, 9000, 1)
logits [[ 5.2159257 -1.069453   1.4838301 -7.482903 ]]
Iteration 300 of 1000: loss=0.127 " + "l1=0.126" + "l2=0.000879 f=-0.462 shape=(1, 9000, 1)
logits [[ 5.188314  -1.060172   1.4734192 -7.4499755]]
Iteration 400 of 1000: loss=0.127 " + "l1=0.126" + "l2=0.00109 f=-0.461 shape=(1, 9000, 1)
logits [[ 5.1601033 -1.0515325  1.4632546 -7.4156632]]
Iteration 500 of 1000: loss=0.126 " + "l1=0.125" + "l2=0.00129 f=-0.46 shape=(1, 9000, 1)
logits [[ 5.1317906 -1.0438638  1.4533328 -7.3806458]]
Iteration 600 of 1000: loss=0.126 " + "l1=0.125" + "l2=0.0015 f=-0.459 shape=(1, 9000, 1)
logits [[ 5.1041284 -1.0371549  1.4440459 -7.3463616]]
Iteration 700 of 1000: loss=0.126 " + "l1=0.124" + "l2=0.00172 f=-0.458 shape=(1, 9000, 1)
logits [[ 5.077344  -1.0313234  1.4352285 -7.312814 ]]
Iteration 800 of 1000: loss=0.125 " + "l1=0.123" + "l2=0.00197 f=-0.457 shape=(1, 9000, 1)
logits [[ 5.050299  -1.0254118  1.4265531 -7.2795224]]
Iteration 900 of 1000: loss=0.125 " + "l1=0.123" + "l2=0.00229 f=-0.456 shape=(1, 9000, 1)
logits [[ 5.023075  -1.0194937  1.4179937 -7.2465515]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.29 " + "l1=1.29" + "l2=0 f=-0.465 shape=(1, 9000, 1)
logits [[ 5.3304205 -1.1080875  1.5275067 -7.6105795]]
Iteration 100 of 1000: loss=1.15 " + "l1=1.09" + "l2=0.0597 f=-0.455 shape=(1, 9000, 1)
logits [[ 4.3583055  -0.80645317  1.1942148  -6.5665765 ]]
Iteration 200 of 1000: loss=1.07 " + "l1=0.97" + "l2=0.0976 f=-0.446 shape=(1, 9000, 1)
logits [[ 3.7642708  -0.6047706   0.99202794 -5.936896  ]]
Iteration 300 of 1000: loss=0.985 " + "l1=0.837" + "l2=0.148 f=-0.452 shape=(1, 9000, 1)
logits [[ 3.1071517 -0.4465722  0.7924714 -5.2598267]]
Iteration 400 of 1000: loss=0.91 " + "l1=0.726" + "l2=0.184 f=-0.467 shape=(1, 9000, 1)
logits [[ 2.5501087  -0.34325147  0.6363192  -4.7129846 ]]
Iteration 500 of 1000: loss=0.848 " + "l1=0.636" + "l2=0.212 f=-0.47 shape=(1, 9000, 1)
logits [[ 2.1113534  -0.26726767  0.5215473  -4.245009  ]]
Iteration 600 of 1000: loss=0.784 " + "l1=0.543" + "l2=0.24 f=-0.468 shape=(1, 9000, 1)
logits [[ 1.663816  -0.1738979  0.4091897 -3.77088  ]]
Iteration 700 of 1000: loss=0.722 " + "l1=0.457" + "l2=0.265 f=-0.459 shape=(1, 9000, 1)
logits [[ 1.2491965  -0.07275251  0.30776617 -3.3209238 ]]
Iteration 800 of 1000: loss=0.659 " + "l1=0.359" + "l2=0.3 f=-0.442 shape=(1, 9000, 1)
logits [[ 0.7847485   0.06152973  0.19583188 -2.8090944 ]]
Iteration 900 of 1000: loss=0.599 " + "l1=0.281" + "l2=0.318 f=-0.423 shape=(1, 9000, 1)
logits [[ 0.3974859   0.20801724  0.11576697 -2.4128523 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.9 " + "l1=12.9" + "l2=0 f=-0.465 shape=(1, 9000, 1)
logits [[ 5.3304205 -1.1080875  1.5275067 -7.6105795]]
Iteration 100 of 1000: loss=3.86 " + "l1=1.63" + "l2=2.23 f=-0.345 shape=(1, 9000, 1)
logits [[ 0.04897573  0.0868198   0.03113103 -1.546351  ]]
Iteration 200 of 1000: loss=1.99 " + "l1=0" + "l2=1.99 f=-0.2 shape=(1, 9000, 1)
logits [[-0.22628233 -0.1763684  -0.22448872 -0.17266828]]
Iteration 300 of 1000: loss=1.51 " + "l1=0.0121" + "l2=1.49 f=-0.2 shape=(1, 9000, 1)
logits [[-0.17489871 -0.18410923 -0.25333822 -0.18697983]]
Iteration 400 of 1000: loss=1.31 " + "l1=0" + "l2=1.31 f=-0.201 shape=(1, 9000, 1)
logits [[-0.18004072 -0.16921012 -0.29728943 -0.15785691]]
Iteration 500 of 1000: loss=1.2 " + "l1=0.00466" + "l2=1.19 f=-0.207 shape=(1, 9000, 1)
logits [[-0.21746337 -0.1450477  -0.31647664 -0.14970669]]
Iteration 600 of 1000: loss=1.1 " + "l1=0" + "l2=1.1 f=-0.205 shape=(1, 9000, 1)
logits [[-0.18935621 -0.15702927 -0.32442847 -0.14926913]]
Iteration 700 of 1000: loss=1.04 " + "l1=0" + "l2=1.04 f=-0.204 shape=(1, 9000, 1)
logits [[-0.19368288 -0.1554714  -0.335253   -0.129655  ]]
Iteration 800 of 1000: loss=0.982 " + "l1=0" + "l2=0.982 f=-0.2 shape=(1, 9000, 1)
logits [[-0.21110168 -0.143489   -0.34434152 -0.10245476]]
Iteration 900 of 1000: loss=0.919 " + "l1=0" + "l2=0.919 f=-0.199 shape=(1, 9000, 1)
logits [[-0.19162714 -0.15758969 -0.33720183 -0.10836107]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.12 " + "l1=7.12" + "l2=0 f=-0.465 shape=(1, 9000, 1)
logits [[ 5.3304205 -1.1080875  1.5275067 -7.6105795]]
Iteration 100 of 1000: loss=2.99 " + "l1=1.57" + "l2=1.41 f=-0.422 shape=(1, 9000, 1)
logits [[ 0.31127027  0.3176694   0.22753869 -2.545161  ]]
Iteration 200 of 1000: loss=2.03 " + "l1=0.674" + "l2=1.36 f=-0.33 shape=(1, 9000, 1)
logits [[-0.03477901  0.00793943 -0.0779467  -1.2169026 ]]
Iteration 300 of 1000: loss=1.34 " + "l1=0.0191" + "l2=1.32 f=-0.208 shape=(1, 9000, 1)
logits [[-0.18198231 -0.15751135 -0.29834864 -0.19228098]]
Iteration 400 of 1000: loss=1.11 " + "l1=0" + "l2=1.11 f=-0.211 shape=(1, 9000, 1)
logits [[-0.19779819 -0.16369979 -0.32127997 -0.16195002]]
Iteration 500 of 1000: loss=0.973 " + "l1=0" + "l2=0.973 f=-0.211 shape=(1, 9000, 1)
logits [[-0.17581975 -0.1788843  -0.32140893 -0.16931129]]
Iteration 600 of 1000: loss=0.878 " + "l1=0.000425" + "l2=0.878 f=-0.211 shape=(1, 9000, 1)
logits [[-0.19792897 -0.16413079 -0.31688395 -0.16490287]]
Iteration 700 of 1000: loss=0.801 " + "l1=0.00339" + "l2=0.798 f=-0.21 shape=(1, 9000, 1)
logits [[-0.18494017 -0.1764345  -0.29474315 -0.18259838]]
Iteration 800 of 1000: loss=0.741 " + "l1=0" + "l2=0.741 f=-0.205 shape=(1, 9000, 1)
logits [[-0.18813324 -0.1928495  -0.2781681  -0.16055024]]
Iteration 900 of 1000: loss=0.684 " + "l1=0" + "l2=0.684 f=-0.208 shape=(1, 9000, 1)
logits [[-0.20981643 -0.18434666 -0.25840122 -0.17909646]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.21 " + "l1=4.21" + "l2=0 f=-0.465 shape=(1, 9000, 1)
logits [[ 5.3304205 -1.1080875  1.5275067 -7.6105795]]
Iteration 100 of 1000: loss=2.48 " + "l1=1.58" + "l2=0.903 f=-0.489 shape=(1, 9000, 1)
logits [[ 1.1950821   0.12682213  0.39106998 -3.6705465 ]]
Iteration 200 of 1000: loss=1.72 " + "l1=0.845" + "l2=0.877 f=-0.429 shape=(1, 9000, 1)
logits [[ 0.25965     0.23183343  0.13532318 -2.3416789 ]]
Iteration 300 of 1000: loss=1.39 " + "l1=0.523" + "l2=0.864 f=-0.373 shape=(1, 9000, 1)
logits [[ 0.03859479  0.06578568 -0.05126454 -1.5431743 ]]
Iteration 400 of 1000: loss=1.11 " + "l1=0.246" + "l2=0.869 f=-0.279 shape=(1, 9000, 1)
logits [[-0.05012234 -0.03946734 -0.23095246 -0.7949686 ]]
Iteration 500 of 1000: loss=0.943 " + "l1=0.0784" + "l2=0.865 f=-0.237 shape=(1, 9000, 1)
logits [[-0.13596553 -0.13577572 -0.3007159  -0.3770015 ]]
Iteration 600 of 1000: loss=0.823 " + "l1=0" + "l2=0.823 f=-0.213 shape=(1, 9000, 1)
logits [[-0.18848568 -0.17324492 -0.32640237 -0.16382635]]
Iteration 700 of 1000: loss=0.732 " + "l1=0.00301" + "l2=0.729 f=-0.213 shape=(1, 9000, 1)
logits [[-0.18287042 -0.17974183 -0.29920304 -0.18900195]]
Iteration 800 of 1000: loss=0.66 " + "l1=0" + "l2=0.66 f=-0.211 shape=(1, 9000, 1)
logits [[-0.20553297 -0.17934719 -0.28879833 -0.16866344]]
Iteration 900 of 1000: loss=0.596 " + "l1=0.00402" + "l2=0.592 f=-0.211 shape=(1, 9000, 1)
logits [[-0.21033986 -0.17649986 -0.26629788 -0.18887547]]
--- 300.30293560028076 seconds ---
Adv result:3
Loading record A01776
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0866 " + "l1=0.0866" + "l2=0 f=-0.725 shape=(1, 9000, 1)
logits [[ 5.9449563 -2.714528   3.372197  -9.503922 ]]
Iteration 100 of 1000: loss=0.086 " + "l1=0.0856" + "l2=0.000419 f=-0.722 shape=(1, 9000, 1)
logits [[ 5.8932524 -2.6636808  3.3293638 -9.446426 ]]
Iteration 200 of 1000: loss=0.0858 " + "l1=0.0854" + "l2=0.000462 f=-0.722 shape=(1, 9000, 1)
logits [[ 5.8825607 -2.6555128  3.3214736 -9.4349575]]
Iteration 300 of 1000: loss=0.0857 " + "l1=0.0852" + "l2=0.000553 f=-0.721 shape=(1, 9000, 1)
logits [[ 5.871649  -2.6466854  3.3129256 -9.423381 ]]
Iteration 400 of 1000: loss=0.0856 " + "l1=0.085" + "l2=0.000642 f=-0.721 shape=(1, 9000, 1)
logits [[ 5.8612103 -2.638423   3.3046827 -9.412517 ]]
Iteration 500 of 1000: loss=0.0856 " + "l1=0.0848" + "l2=0.000756 f=-0.721 shape=(1, 9000, 1)
logits [[ 5.850894  -2.6303923  3.2966087 -9.402027 ]]
Iteration 600 of 1000: loss=0.0855 " + "l1=0.0846" + "l2=0.000854 f=-0.721 shape=(1, 9000, 1)
logits [[ 5.8412204 -2.6232066  3.2892897 -9.392346 ]]
Iteration 700 of 1000: loss=0.0854 " + "l1=0.0845" + "l2=0.000961 f=-0.721 shape=(1, 9000, 1)
logits [[ 5.8318324 -2.6168058  3.2826812 -9.383134 ]]
Iteration 800 of 1000: loss=0.0854 " + "l1=0.0843" + "l2=0.00109 f=-0.721 shape=(1, 9000, 1)
logits [[ 5.8227234 -2.611356   3.277186  -9.374285 ]]
Iteration 900 of 1000: loss=0.0855 " + "l1=0.0842" + "l2=0.00126 f=-0.722 shape=(1, 9000, 1)
logits [[ 5.813769  -2.605849   3.2715666 -9.365613 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.866 " + "l1=0.866" + "l2=0 f=-0.725 shape=(1, 9000, 1)
logits [[ 5.9449563 -2.714528   3.372197  -9.503922 ]]
Iteration 100 of 1000: loss=0.811 " + "l1=0.779" + "l2=0.0321 f=-0.709 shape=(1, 9000, 1)
logits [[ 5.466113  -2.3257844  3.0249343 -9.002861 ]]
Iteration 200 of 1000: loss=0.791 " + "l1=0.746" + "l2=0.0444 f=-0.703 shape=(1, 9000, 1)
logits [[ 5.2755847 -2.1889093  2.9004567 -8.7981415]]
Iteration 300 of 1000: loss=0.775 " + "l1=0.72" + "l2=0.0547 f=-0.698 shape=(1, 9000, 1)
logits [[ 5.117237  -2.082394   2.8008761 -8.6266   ]]
Iteration 400 of 1000: loss=0.758 " + "l1=0.697" + "l2=0.0619 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.961461  -2.0043495  2.7243886 -8.460663 ]]
Iteration 500 of 1000: loss=0.743 " + "l1=0.676" + "l2=0.0668 f=-0.696 shape=(1, 9000, 1)
logits [[ 4.8160334 -1.947613   2.6582208 -8.309913 ]]
Iteration 600 of 1000: loss=0.725 " + "l1=0.653" + "l2=0.0728 f=-0.7 shape=(1, 9000, 1)
logits [[ 4.6380606 -1.8881541  2.5839798 -8.133524 ]]
Iteration 700 of 1000: loss=0.708 " + "l1=0.63" + "l2=0.0775 f=-0.703 shape=(1, 9000, 1)
logits [[ 4.45702   -1.8441669  2.5157223 -7.9400573]]
Iteration 800 of 1000: loss=0.69 " + "l1=0.607" + "l2=0.083 f=-0.705 shape=(1, 9000, 1)
logits [[ 4.263466  -1.8021666  2.4437091 -7.725554 ]]
Iteration 900 of 1000: loss=0.671 " + "l1=0.582" + "l2=0.0883 f=-0.703 shape=(1, 9000, 1)
logits [[ 4.063253  -1.7592721  2.3842428 -7.5012207]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.66 " + "l1=8.66" + "l2=0 f=-0.725 shape=(1, 9000, 1)
logits [[ 5.9449563 -2.714528   3.372197  -9.503922 ]]
Iteration 100 of 1000: loss=3.95 " + "l1=1.75" + "l2=2.2 f=-0.752 shape=(1, 9000, 1)
logits [[ 1.5793633  -0.16977243  1.5274311  -5.9435234 ]]
Iteration 200 of 1000: loss=2.76 " + "l1=0.661" + "l2=2.09 f=-0.723 shape=(1, 9000, 1)
logits [[ 1.0418417   0.38112468  1.0251853  -5.340874  ]]
Iteration 300 of 1000: loss=1.97 " + "l1=0.0184" + "l2=1.95 f=-0.726 shape=(1, 9000, 1)
logits [[ 0.6231821  0.616657   0.6350213 -4.7802157]]
Iteration 400 of 1000: loss=1.66 " + "l1=0" + "l2=1.66 f=-0.728 shape=(1, 9000, 1)
logits [[ 0.57026815  0.594916    0.5786041  -4.6561513 ]]
Iteration 500 of 1000: loss=1.47 " + "l1=0.031" + "l2=1.44 f=-0.734 shape=(1, 9000, 1)
logits [[ 0.56493163  0.54167587  0.57267517 -4.6172748 ]]
Iteration 600 of 1000: loss=1.34 " + "l1=0" + "l2=1.34 f=-0.736 shape=(1, 9000, 1)
logits [[ 0.5225045   0.55742353  0.54848546 -4.573619  ]]
Iteration 700 of 1000: loss=1.26 " + "l1=0.0134" + "l2=1.25 f=-0.73 shape=(1, 9000, 1)
logits [[ 0.5296103   0.52652967  0.53997624 -4.514972  ]]
Iteration 800 of 1000: loss=1.19 " + "l1=0.0325" + "l2=1.16 f=-0.725 shape=(1, 9000, 1)
logits [[ 0.5179668   0.50305426  0.5355959  -4.457818  ]]
Iteration 900 of 1000: loss=1.09 " + "l1=0" + "l2=1.09 f=-0.723 shape=(1, 9000, 1)
logits [[ 0.46262237  0.5149205   0.5033813  -4.374007  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.76 " + "l1=4.76" + "l2=0 f=-0.725 shape=(1, 9000, 1)
logits [[ 5.9449563 -2.714528   3.372197  -9.503922 ]]
Iteration 100 of 1000: loss=3.3 " + "l1=2.54" + "l2=0.759 f=-0.704 shape=(1, 9000, 1)
logits [[ 3.3625517 -1.2582711  2.0500503 -6.9703197]]
Iteration 200 of 1000: loss=2.34 " + "l1=1.06" + "l2=1.28 f=-0.761 shape=(1, 9000, 1)
logits [[ 1.5843041  -0.33585107  1.5816191  -5.8752894 ]]
Iteration 300 of 1000: loss=1.89 " + "l1=0.704" + "l2=1.19 f=-0.75 shape=(1, 9000, 1)
logits [[ 1.2155124  -0.06360716  1.2156963  -5.368758  ]]
Iteration 400 of 1000: loss=1.62 " + "l1=0.447" + "l2=1.18 f=-0.748 shape=(1, 9000, 1)
logits [[ 0.9380431   0.13487788  0.9479588  -5.0136385 ]]
Iteration 500 of 1000: loss=1.37 " + "l1=0.222" + "l2=1.15 f=-0.749 shape=(1, 9000, 1)
logits [[ 0.7192014   0.326451    0.73089254 -4.770897  ]]
Iteration 600 of 1000: loss=1.18 " + "l1=0.0586" + "l2=1.12 f=-0.733 shape=(1, 9000, 1)
logits [[ 0.5458685   0.45219684  0.5586796  -4.4890523 ]]
Iteration 700 of 1000: loss=1.03 " + "l1=0.0121" + "l2=1.02 f=-0.717 shape=(1, 9000, 1)
logits [[ 0.47250333  0.47694933  0.49887428 -4.3171296 ]]
Iteration 800 of 1000: loss=0.933 " + "l1=0.0301" + "l2=0.903 f=-0.7 shape=(1, 9000, 1)
logits [[ 0.48425755  0.42973864  0.48453915 -4.197443  ]]
Iteration 900 of 1000: loss=0.865 " + "l1=0" + "l2=0.865 f=-0.693 shape=(1, 9000, 1)
logits [[ 0.40864673  0.4417273   0.4389955  -4.0619493 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.81 " + "l1=2.81" + "l2=0 f=-0.725 shape=(1, 9000, 1)
logits [[ 5.9449563 -2.714528   3.372197  -9.503922 ]]
Iteration 100 of 1000: loss=2.26 " + "l1=1.98" + "l2=0.277 f=-0.682 shape=(1, 9000, 1)
logits [[ 4.44518   -1.6574032  2.4362147 -7.951539 ]]
Iteration 200 of 1000: loss=2.04 " + "l1=1.65" + "l2=0.385 f=-0.678 shape=(1, 9000, 1)
logits [[ 3.7269914 -1.3550539  2.114329  -7.196594 ]]
Iteration 300 of 1000: loss=1.82 " + "l1=1.29" + "l2=0.523 f=-0.697 shape=(1, 9000, 1)
logits [[ 2.865095  -1.1150544  1.9123688 -6.4520235]]
Iteration 400 of 1000: loss=1.56 " + "l1=0.858" + "l2=0.7 f=-0.771 shape=(1, 9000, 1)
logits [[ 1.7857153  -0.85430753  1.7071215  -5.723843  ]]
Iteration 500 of 1000: loss=1.36 " + "l1=0.683" + "l2=0.673 f=-0.78 shape=(1, 9000, 1)
logits [[ 1.4336851  -0.66702956  1.4340221  -5.321922  ]]
Iteration 600 of 1000: loss=1.24 " + "l1=0.558" + "l2=0.683 f=-0.77 shape=(1, 9000, 1)
logits [[ 1.2256796  -0.48027605  1.237416   -5.0645423 ]]
Iteration 700 of 1000: loss=1.13 " + "l1=0.435" + "l2=0.695 f=-0.751 shape=(1, 9000, 1)
logits [[ 1.0371984 -0.3012063  1.0308219 -4.7713466]]
Iteration 800 of 1000: loss=1.03 " + "l1=0.327" + "l2=0.702 f=-0.729 shape=(1, 9000, 1)
logits [[ 0.88263273 -0.12212635  0.8740203  -4.550198  ]]
Iteration 900 of 1000: loss=0.861 " + "l1=0.177" + "l2=0.684 f=-0.695 shape=(1, 9000, 1)
logits [[ 0.6781031   0.13877328  0.6822694  -4.280543  ]]
--- 298.6245038509369 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0257 " + "l1=0.0257" + "l2=0 f=-0.725 shape=(1, 9000, 1)
logits [[ 5.9449563 -2.714528   3.372197  -9.503922 ]]
Iteration 100 of 1000: loss=0.0255 " + "l1=0.0253" + "l2=0.000212 f=-0.728 shape=(1, 9000, 1)
logits [[ 5.915159  -2.7335014  3.385025  -9.47973  ]]
Iteration 200 of 1000: loss=0.0255 " + "l1=0.0253" + "l2=0.000183 f=-0.728 shape=(1, 9000, 1)
logits [[ 5.912426  -2.7337854  3.385394  -9.477462 ]]
Iteration 300 of 1000: loss=0.0254 " + "l1=0.0252" + "l2=0.000207 f=-0.729 shape=(1, 9000, 1)
logits [[ 5.907922  -2.7360368  3.3869965 -9.47378  ]]
Iteration 400 of 1000: loss=0.0254 " + "l1=0.0251" + "l2=0.000261 f=-0.729 shape=(1, 9000, 1)
logits [[ 5.9034677 -2.7385497  3.3887205 -9.470271 ]]
Iteration 500 of 1000: loss=0.0254 " + "l1=0.0251" + "l2=0.000333 f=-0.73 shape=(1, 9000, 1)
logits [[ 5.899119  -2.7407808  3.3901668 -9.466921 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.257 " + "l1=0.257" + "l2=0 f=-0.725 shape=(1, 9000, 1)
logits [[ 5.9449563 -2.714528   3.372197  -9.503922 ]]
Iteration 100 of 1000: loss=0.236 " + "l1=0.223" + "l2=0.0128 f=-0.748 shape=(1, 9000, 1)
logits [[ 5.7050877 -2.8571775  3.471793  -9.309814 ]]
Iteration 200 of 1000: loss=0.228 " + "l1=0.211" + "l2=0.0172 f=-0.753 shape=(1, 9000, 1)
logits [[ 5.6173882 -2.9055474  3.5069416 -9.231632 ]]
Iteration 300 of 1000: loss=0.222 " + "l1=0.201" + "l2=0.0209 f=-0.758 shape=(1, 9000, 1)
logits [[ 5.5389795 -2.9443483  3.5324345 -9.158752 ]]
Iteration 400 of 1000: loss=0.216 " + "l1=0.192" + "l2=0.0241 f=-0.761 shape=(1, 9000, 1)
logits [[ 5.464449  -2.971527   3.5478737 -9.085359 ]]
Iteration 500 of 1000: loss=0.21 " + "l1=0.184" + "l2=0.0265 f=-0.764 shape=(1, 9000, 1)
logits [[ 5.3946376 -2.9934304  3.5576224 -9.0143175]]
Iteration 600 of 1000: loss=0.205 " + "l1=0.177" + "l2=0.0281 f=-0.768 shape=(1, 9000, 1)
logits [[ 5.3292403 -3.015325   3.5630162 -8.948625 ]]
Iteration 700 of 1000: loss=0.199 " + "l1=0.168" + "l2=0.0307 f=-0.771 shape=(1, 9000, 1)
logits [[ 5.2502728 -3.0358882  3.568148  -8.867804 ]]
Iteration 800 of 1000: loss=0.192 " + "l1=0.158" + "l2=0.0334 f=-0.773 shape=(1, 9000, 1)
logits [[ 5.1459026 -3.045703   3.563024  -8.756654 ]]
Iteration 900 of 1000: loss=0.183 " + "l1=0.147" + "l2=0.0361 f=-0.776 shape=(1, 9000, 1)
logits [[ 5.0236115 -3.0523727  3.5542102 -8.627697 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.57 " + "l1=2.57" + "l2=0 f=-0.725 shape=(1, 9000, 1)
logits [[ 5.9449563 -2.714528   3.372197  -9.503922 ]]
Iteration 100 of 1000: loss=0.639 " + "l1=0.00294" + "l2=0.636 f=-0.869 shape=(1, 9000, 1)
logits [[ 4.0055857 -3.6103618  4.0026436 -7.874604 ]]
Iteration 200 of 1000: loss=0.437 " + "l1=0" + "l2=0.437 f=-0.844 shape=(1, 9000, 1)
logits [[ 3.9834886 -3.5583787  3.9876077 -7.788033 ]]
Iteration 300 of 1000: loss=0.339 " + "l1=0" + "l2=0.339 f=-0.829 shape=(1, 9000, 1)
logits [[ 3.9444258 -3.5092094  3.9468439 -7.6965604]]
Iteration 400 of 1000: loss=0.289 " + "l1=0" + "l2=0.289 f=-0.819 shape=(1, 9000, 1)
logits [[ 3.90691   -3.4716048  3.917817  -7.6310067]]
Iteration 500 of 1000: loss=0.251 " + "l1=0" + "l2=0.251 f=-0.812 shape=(1, 9000, 1)
logits [[ 3.8435698 -3.4130225  3.8594785 -7.5387063]]
Iteration 600 of 1000: loss=0.226 " + "l1=0" + "l2=0.226 f=-0.81 shape=(1, 9000, 1)
logits [[ 3.7827942 -3.3697114  3.8121955 -7.4655004]]
Iteration 700 of 1000: loss=0.208 " + "l1=0" + "l2=0.208 f=-0.808 shape=(1, 9000, 1)
logits [[ 3.7374845 -3.336046   3.775975  -7.410542 ]]
Iteration 800 of 1000: loss=0.184 " + "l1=0" + "l2=0.184 f=-0.804 shape=(1, 9000, 1)
logits [[ 3.7175827 -3.2851145  3.7236073 -7.372927 ]]
Iteration 900 of 1000: loss=0.18 " + "l1=0" + "l2=0.18 f=-0.805 shape=(1, 9000, 1)
logits [[ 3.63717   -3.254359   3.6880944 -7.292885 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.42 " + "l1=1.42" + "l2=0 f=-0.725 shape=(1, 9000, 1)
logits [[ 5.9449563 -2.714528   3.372197  -9.503922 ]]
Iteration 100 of 1000: loss=0.696 " + "l1=0.24" + "l2=0.456 f=-0.86 shape=(1, 9000, 1)
logits [[ 4.3554764 -3.503283   3.9193373 -8.211131 ]]
Iteration 200 of 1000: loss=0.408 " + "l1=0.0136" + "l2=0.394 f=-0.84 shape=(1, 9000, 1)
logits [[ 4.014093  -3.5438643  3.9893696 -7.8212485]]
Iteration 300 of 1000: loss=0.309 " + "l1=0" + "l2=0.309 f=-0.827 shape=(1, 9000, 1)
logits [[ 3.9404874 -3.5017562  3.947186  -7.6922026]]
Iteration 400 of 1000: loss=0.257 " + "l1=0" + "l2=0.257 f=-0.815 shape=(1, 9000, 1)
logits [[ 3.8754165 -3.439367   3.8837595 -7.5792923]]
Iteration 500 of 1000: loss=0.217 " + "l1=0" + "l2=0.217 f=-0.808 shape=(1, 9000, 1)
logits [[ 3.813674  -3.3674333  3.815333  -7.4917703]]
Iteration 600 of 1000: loss=0.199 " + "l1=0.00762" + "l2=0.192 f=-0.803 shape=(1, 9000, 1)
logits [[ 3.7739072 -3.3129313  3.7600527 -7.4310875]]
Iteration 700 of 1000: loss=0.175 " + "l1=0.000254" + "l2=0.175 f=-0.799 shape=(1, 9000, 1)
logits [[ 3.6955795 -3.2522476  3.695117  -7.334325 ]]
Iteration 800 of 1000: loss=0.161 " + "l1=0" + "l2=0.161 f=-0.797 shape=(1, 9000, 1)
logits [[ 3.652164  -3.2214584  3.656652  -7.2769713]]
Iteration 900 of 1000: loss=0.151 " + "l1=0.00359" + "l2=0.148 f=-0.794 shape=(1, 9000, 1)
logits [[ 3.635727  -3.1980858  3.6292038 -7.243738 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.836 " + "l1=0.836" + "l2=0 f=-0.725 shape=(1, 9000, 1)
logits [[ 5.9449563 -2.714528   3.372197  -9.503922 ]]
Iteration 100 of 1000: loss=0.605 " + "l1=0.465" + "l2=0.14 f=-0.796 shape=(1, 9000, 1)
logits [[ 5.1013737 -3.1737447  3.671476  -8.7814045]]
Iteration 200 of 1000: loss=0.48 " + "l1=0.258" + "l2=0.223 f=-0.832 shape=(1, 9000, 1)
logits [[ 4.62458   -3.3935614  3.8321683 -8.393054 ]]
Iteration 300 of 1000: loss=0.365 " + "l1=0.0899" + "l2=0.275 f=-0.835 shape=(1, 9000, 1)
logits [[ 4.17848   -3.4709177  3.901745  -7.949782 ]]
Iteration 400 of 1000: loss=0.273 " + "l1=0" + "l2=0.273 f=-0.823 shape=(1, 9000, 1)
logits [[ 3.8924923 -3.4612172  3.8996494 -7.6222014]]
Iteration 500 of 1000: loss=0.219 " + "l1=0" + "l2=0.219 f=-0.811 shape=(1, 9000, 1)
logits [[ 3.8094442 -3.3730297  3.8129883 -7.491942 ]]
Iteration 600 of 1000: loss=0.19 " + "l1=0.000246" + "l2=0.19 f=-0.804 shape=(1, 9000, 1)
logits [[ 3.7487526 -3.309867   3.747995  -7.40184  ]]
Iteration 700 of 1000: loss=0.168 " + "l1=0.00118" + "l2=0.167 f=-0.798 shape=(1, 9000, 1)
logits [[ 3.6743608 -3.2368464  3.6707315 -7.3007812]]
Iteration 800 of 1000: loss=0.155 " + "l1=0.00391" + "l2=0.151 f=-0.795 shape=(1, 9000, 1)
logits [[ 3.6411314 -3.201074   3.629114  -7.249937 ]]
Iteration 900 of 1000: loss=0.141 " + "l1=0.00037" + "l2=0.141 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.607828  -3.1803052  3.606691  -7.20784  ]]
--- 272.44792318344116 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.154 " + "l1=0.154" + "l2=0 f=-0.725 shape=(1, 9000, 1)
logits [[ 5.9449563 -2.714528   3.372197  -9.503922 ]]
Iteration 100 of 1000: loss=0.153 " + "l1=0.153" + "l2=0.000708 f=-0.724 shape=(1, 9000, 1)
logits [[ 5.8628187 -2.6931186  3.337798  -9.404626 ]]
Iteration 200 of 1000: loss=0.153 " + "l1=0.152" + "l2=0.000811 f=-0.724 shape=(1, 9000, 1)
logits [[ 5.844529  -2.686357   3.3287237 -9.382535 ]]
Iteration 300 of 1000: loss=0.153 " + "l1=0.152" + "l2=0.000973 f=-0.724 shape=(1, 9000, 1)
logits [[ 5.8257136 -2.6803434  3.3193429 -9.3590355]]
Iteration 400 of 1000: loss=0.153 " + "l1=0.151" + "l2=0.00116 f=-0.723 shape=(1, 9000, 1)
logits [[ 5.8082857 -2.675853   3.3110065 -9.337054 ]]
Iteration 500 of 1000: loss=0.152 " + "l1=0.151" + "l2=0.00128 f=-0.723 shape=(1, 9000, 1)
logits [[ 5.7907124 -2.6712818  3.3023963 -9.315336 ]]
Iteration 600 of 1000: loss=0.152 " + "l1=0.151" + "l2=0.00154 f=-0.723 shape=(1, 9000, 1)
logits [[ 5.7743073 -2.666944   3.2944436 -9.295202 ]]
Iteration 700 of 1000: loss=0.152 " + "l1=0.15" + "l2=0.00171 f=-0.723 shape=(1, 9000, 1)
logits [[ 5.7583046 -2.6629865  3.2871602 -9.275814 ]]
Iteration 800 of 1000: loss=0.152 " + "l1=0.15" + "l2=0.00188 f=-0.723 shape=(1, 9000, 1)
logits [[ 5.7429614 -2.659317   3.2803197 -9.257329 ]]
Iteration 900 of 1000: loss=0.152 " + "l1=0.15" + "l2=0.00193 f=-0.723 shape=(1, 9000, 1)
logits [[ 5.7274857 -2.6554496  3.2733    -9.238815 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.54 " + "l1=1.54" + "l2=0 f=-0.725 shape=(1, 9000, 1)
logits [[ 5.9449563 -2.714528   3.372197  -9.503922 ]]
Iteration 100 of 1000: loss=1.43 " + "l1=1.37" + "l2=0.0655 f=-0.717 shape=(1, 9000, 1)
logits [[ 5.1423063 -2.5174365  3.0581334 -8.5521   ]]
Iteration 200 of 1000: loss=1.38 " + "l1=1.29" + "l2=0.0924 f=-0.705 shape=(1, 9000, 1)
logits [[ 4.778439  -2.4388254  2.9285655 -8.088642 ]]
Iteration 300 of 1000: loss=1.32 " + "l1=1.21" + "l2=0.115 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.424338  -2.3671553  2.8032627 -7.638793 ]]
Iteration 400 of 1000: loss=1.25 " + "l1=1.11" + "l2=0.142 f=-0.678 shape=(1, 9000, 1)
logits [[ 4.0018744 -2.2666166  2.6646996 -7.111781 ]]
Iteration 500 of 1000: loss=1.18 " + "l1=1.02" + "l2=0.167 f=-0.672 shape=(1, 9000, 1)
logits [[ 3.5718114 -2.1768     2.5037596 -6.585471 ]]
Iteration 600 of 1000: loss=1.12 " + "l1=0.928" + "l2=0.19 f=-0.679 shape=(1, 9000, 1)
logits [[ 3.161116  -2.0936499  2.3308516 -6.1161065]]
Iteration 700 of 1000: loss=1.07 " + "l1=0.869" + "l2=0.202 f=-0.687 shape=(1, 9000, 1)
logits [[ 2.8843818 -2.030415   2.2046843 -5.806592 ]]
Iteration 800 of 1000: loss=1.03 " + "l1=0.815" + "l2=0.218 f=-0.697 shape=(1, 9000, 1)
logits [[ 2.6299353 -1.9843136  2.0871248 -5.5218363]]
Iteration 900 of 1000: loss=1 " + "l1=0.766" + "l2=0.233 f=-0.702 shape=(1, 9000, 1)
logits [[ 2.405269  -1.9435116  1.9867171 -5.2574186]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=15.4 " + "l1=15.4" + "l2=0 f=-0.725 shape=(1, 9000, 1)
logits [[ 5.9449563 -2.714528   3.372197  -9.503922 ]]
Iteration 100 of 1000: loss=7.66 " + "l1=4.76" + "l2=2.9 f=-0.551 shape=(1, 9000, 1)
logits [[ 1.3434062 -1.4776118  1.3454784 -3.4155042]]
Iteration 200 of 1000: loss=5.1 " + "l1=1.39" + "l2=3.71 f=-0.443 shape=(1, 9000, 1)
logits [[-0.13479066 -0.911565    0.33343393 -1.0582681 ]]
Iteration 300 of 1000: loss=3.74 " + "l1=0.0188" + "l2=3.72 f=-0.393 shape=(1, 9000, 1)
logits [[-0.7002518  -0.6103178  -0.12229389 -0.14110044]]
Iteration 400 of 1000: loss=3.11 " + "l1=0.0257" + "l2=3.08 f=-0.373 shape=(1, 9000, 1)
logits [[-0.5864741  -0.5975687  -0.14046055 -0.16617247]]
Iteration 500 of 1000: loss=2.73 " + "l1=0.0123" + "l2=2.72 f=-0.367 shape=(1, 9000, 1)
logits [[-0.5685407  -0.5683945  -0.15988465 -0.1721364 ]]
Iteration 600 of 1000: loss=2.48 " + "l1=0.0375" + "l2=2.44 f=-0.363 shape=(1, 9000, 1)
logits [[-0.5174461  -0.57956636 -0.15928476 -0.19681513]]
Iteration 700 of 1000: loss=2.23 " + "l1=0.0152" + "l2=2.21 f=-0.361 shape=(1, 9000, 1)
logits [[-0.499104   -0.5530565  -0.1886343  -0.20381406]]
Iteration 800 of 1000: loss=2.03 " + "l1=0.0211" + "l2=2.01 f=-0.359 shape=(1, 9000, 1)
logits [[-0.46093127 -0.5526511  -0.20039688 -0.22153425]]
Iteration 900 of 1000: loss=1.87 " + "l1=0" + "l2=1.87 f=-0.357 shape=(1, 9000, 1)
logits [[-0.4309371  -0.5799513  -0.21442844 -0.20279008]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=8.5 " + "l1=8.5" + "l2=0 f=-0.725 shape=(1, 9000, 1)
logits [[ 5.9449563 -2.714528   3.372197  -9.503922 ]]
Iteration 100 of 1000: loss=5.31 " + "l1=3.74" + "l2=1.58 f=-0.653 shape=(1, 9000, 1)
logits [[ 2.0513716 -1.972404   2.0491693 -4.741421 ]]
Iteration 200 of 1000: loss=4.23 " + "l1=2.6" + "l2=1.63 f=-0.542 shape=(1, 9000, 1)
logits [[ 1.3016659 -1.4078205  1.3333826 -3.3953454]]
Iteration 300 of 1000: loss=3.45 " + "l1=1.75" + "l2=1.7 f=-0.491 shape=(1, 9000, 1)
logits [[ 0.7169376 -1.0136571  0.758029  -2.4262261]]
Iteration 400 of 1000: loss=2.87 " + "l1=1.06" + "l2=1.81 f=-0.468 shape=(1, 9000, 1)
logits [[ 0.1570968  -0.79085153  0.34358096 -1.5808249 ]]
Iteration 500 of 1000: loss=2.43 " + "l1=0.502" + "l2=1.92 f=-0.424 shape=(1, 9000, 1)
logits [[-0.289951   -0.63704467  0.07244887 -0.8402811 ]]
Iteration 600 of 1000: loss=2.08 " + "l1=0.095" + "l2=1.98 f=-0.38 shape=(1, 9000, 1)
logits [[-0.5716786  -0.57015073 -0.1031853  -0.27599525]]
Iteration 700 of 1000: loss=1.85 " + "l1=0.0181" + "l2=1.83 f=-0.354 shape=(1, 9000, 1)
logits [[-0.5610665  -0.54346704 -0.13846968 -0.17137566]]
Iteration 800 of 1000: loss=1.68 " + "l1=0.0152" + "l2=1.66 f=-0.345 shape=(1, 9000, 1)
logits [[-0.50804096 -0.5616896  -0.14228237 -0.1698555 ]]
Iteration 900 of 1000: loss=1.57 " + "l1=0" + "l2=1.57 f=-0.337 shape=(1, 9000, 1)
logits [[-0.42549917 -0.6067323  -0.1614277  -0.15559378]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.02 " + "l1=5.02" + "l2=0 f=-0.725 shape=(1, 9000, 1)
logits [[ 5.9449563 -2.714528   3.372197  -9.503922 ]]
Iteration 100 of 1000: loss=3.8 " + "l1=3.08" + "l2=0.719 f=-0.685 shape=(1, 9000, 1)
logits [[ 3.2437325 -2.2470934  2.5073853 -6.24321  ]]
Iteration 200 of 1000: loss=3.13 " + "l1=2.25" + "l2=0.883 f=-0.654 shape=(1, 9000, 1)
logits [[ 2.094928  -1.9821203  2.0870147 -4.815951 ]]
Iteration 300 of 1000: loss=2.64 " + "l1=1.77" + "l2=0.87 f=-0.594 shape=(1, 9000, 1)
logits [[ 1.5470581 -1.578458   1.5428494 -3.88785  ]]
Iteration 400 of 1000: loss=2.36 " + "l1=1.46" + "l2=0.899 f=-0.569 shape=(1, 9000, 1)
logits [[ 1.1622385 -1.3238981  1.1847894 -3.300631 ]]
Iteration 500 of 1000: loss=2.12 " + "l1=1.19" + "l2=0.935 f=-0.535 shape=(1, 9000, 1)
logits [[ 0.8658921 -1.1066259  0.8778775 -2.775897 ]]
Iteration 600 of 1000: loss=1.96 " + "l1=1.01" + "l2=0.957 f=-0.503 shape=(1, 9000, 1)
logits [[ 0.69070864 -0.98805803  0.69238734 -2.4062293 ]]
Iteration 700 of 1000: loss=1.84 " + "l1=0.845" + "l2=0.991 f=-0.477 shape=(1, 9000, 1)
logits [[ 0.50449204 -0.8662246   0.5268391  -2.0738003 ]]
Iteration 800 of 1000: loss=1.7 " + "l1=0.693" + "l2=1.01 f=-0.437 shape=(1, 9000, 1)
logits [[ 0.365665   -0.7526766   0.38482353 -1.7469295 ]]
Iteration 900 of 1000: loss=1.6 " + "l1=0.558" + "l2=1.04 f=-0.408 shape=(1, 9000, 1)
logits [[ 0.2382912  -0.6941464   0.27086988 -1.4463998 ]]
--- 303.1623275279999 seconds ---
Adv result:3
Loading record A01786
(1, 3392)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0406 " + "l1=0.0406" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.0752847 -1.9847213 -1.0769548 -1.391818 ]]
Iteration 100 of 1000: loss=0.0385 " + "l1=0.0379" + "l2=0.000621 f=-0.591 shape=(1, 9000, 1)
logits [[ 1.8846884 -1.90378   -1.0841906 -1.2618392]]
Iteration 200 of 1000: loss=0.0374 " + "l1=0.0365" + "l2=0.000925 f=-0.59 shape=(1, 9000, 1)
logits [[ 1.7836515 -1.8642613 -1.0898533 -1.1878966]]
Iteration 300 of 1000: loss=0.0362 " + "l1=0.0348" + "l2=0.00137 f=-0.588 shape=(1, 9000, 1)
logits [[ 1.6641194 -1.817841  -1.0963733 -1.1022667]]
Iteration 400 of 1000: loss=0.0349 " + "l1=0.033" + "l2=0.00186 f=-0.586 shape=(1, 9000, 1)
logits [[ 1.5353706 -1.7678164 -1.1016237 -1.0095096]]
Iteration 500 of 1000: loss=0.0335 " + "l1=0.0312" + "l2=0.00233 f=-0.583 shape=(1, 9000, 1)
logits [[ 1.4037999 -1.7172344 -1.1060976 -0.9142515]]
Iteration 600 of 1000: loss=0.0321 " + "l1=0.0292" + "l2=0.00294 f=-0.58 shape=(1, 9000, 1)
logits [[ 1.258194  -1.6603055 -1.1038043 -0.8152358]]
Iteration 700 of 1000: loss=0.0301 " + "l1=0.0264" + "l2=0.00367 f=-0.569 shape=(1, 9000, 1)
logits [[ 1.0744436  -1.5679115  -1.0622993  -0.71999663]]
Iteration 800 of 1000: loss=0.0254 " + "l1=0.0193" + "l2=0.00605 f=-0.537 shape=(1, 9000, 1)
logits [[ 0.6463895 -1.2884172 -0.8622662 -0.6453333]]
Iteration 900 of 1000: loss=0.0222 " + "l1=0.016" + "l2=0.00613 f=-0.527 shape=(1, 9000, 1)
logits [[ 0.43393403 -1.1706767  -0.7989034  -0.5730716 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.406 " + "l1=0.406" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.0752847 -1.9847213 -1.0769548 -1.391818 ]]
Iteration 100 of 1000: loss=0.14 " + "l1=0.0573" + "l2=0.0828 f=-0.53 shape=(1, 9000, 1)
logits [[-0.2555783  -0.8286748  -0.77060306 -0.26630443]]
Iteration 200 of 1000: loss=0.0691 " + "l1=0.00142" + "l2=0.0677 f=-0.519 shape=(1, 9000, 1)
logits [[-0.5169433  -0.5288248  -0.51458514 -0.5169018 ]]
Iteration 300 of 1000: loss=0.0493 " + "l1=0.0011" + "l2=0.0482 f=-0.515 shape=(1, 9000, 1)
logits [[-0.4986687  -0.50966436 -0.53346723 -0.5173675 ]]
Iteration 400 of 1000: loss=0.0384 " + "l1=0.000475" + "l2=0.038 f=-0.509 shape=(1, 9000, 1)
logits [[-0.5020974  -0.5068378  -0.5267261  -0.50209075]]
Iteration 500 of 1000: loss=0.0332 " + "l1=0" + "l2=0.0332 f=-0.506 shape=(1, 9000, 1)
logits [[-0.50954473 -0.5013505  -0.5064514  -0.5056858 ]]
Iteration 600 of 1000: loss=0.0307 " + "l1=0.000537" + "l2=0.0302 f=-0.503 shape=(1, 9000, 1)
logits [[-0.4914556  -0.49682844 -0.5029963  -0.5210323 ]]
Iteration 700 of 1000: loss=0.0279 " + "l1=6.34e-05" + "l2=0.0278 f=-0.501 shape=(1, 9000, 1)
logits [[-0.49878636 -0.49942082 -0.50801516 -0.49943483]]
Iteration 800 of 1000: loss=0.0262 " + "l1=0" + "l2=0.0262 f=-0.501 shape=(1, 9000, 1)
logits [[-0.49947292 -0.4993677  -0.5046329  -0.5006029 ]]
Iteration 900 of 1000: loss=0.0244 " + "l1=0" + "l2=0.0244 f=-0.499 shape=(1, 9000, 1)
logits [[-0.5009682  -0.4893201  -0.49418685 -0.50960356]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.223 " + "l1=0.223" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.0752847 -1.9847213 -1.0769548 -1.391818 ]]
Iteration 100 of 1000: loss=0.134 " + "l1=0.078" + "l2=0.0557 f=-0.525 shape=(1, 9000, 1)
logits [[ 0.3474389  -1.0711458  -0.7511719  -0.62315136]]
Iteration 200 of 1000: loss=0.0863 " + "l1=0.0367" + "l2=0.0496 f=-0.526 shape=(1, 9000, 1)
logits [[-0.20911735 -0.8762506  -0.8068509  -0.21222764]]
Iteration 300 of 1000: loss=0.0633 " + "l1=0.0256" + "l2=0.0376 f=-0.52 shape=(1, 9000, 1)
logits [[-0.29893413 -0.7652828  -0.71085805 -0.30334193]]
Iteration 400 of 1000: loss=0.0409 " + "l1=0.00834" + "l2=0.0325 f=-0.504 shape=(1, 9000, 1)
logits [[-0.44045028 -0.5921328  -0.53275925 -0.44884402]]
Iteration 500 of 1000: loss=0.0302 " + "l1=0.000245" + "l2=0.03 f=-0.502 shape=(1, 9000, 1)
logits [[-0.5032753  -0.503011   -0.50483155 -0.49855775]]
Iteration 600 of 1000: loss=0.0233 " + "l1=0.000367" + "l2=0.0229 f=-0.501 shape=(1, 9000, 1)
logits [[-0.49495345 -0.50162184 -0.50500584 -0.50045097]]
Iteration 700 of 1000: loss=0.0196 " + "l1=6.2e-05" + "l2=0.0195 f=-0.501 shape=(1, 9000, 1)
logits [[-0.49920925 -0.50033706 -0.499771   -0.50636804]]
Iteration 800 of 1000: loss=0.0178 " + "l1=0.000218" + "l2=0.0176 f=-0.502 shape=(1, 9000, 1)
logits [[-0.50557864 -0.50193864 -0.5041498  -0.49797362]]
Iteration 900 of 1000: loss=0.0164 " + "l1=0.000121" + "l2=0.0163 f=-0.503 shape=(1, 9000, 1)
logits [[-0.50725394 -0.49938124 -0.506679   -0.4971782 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.132 " + "l1=0.132" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.0752847 -1.9847213 -1.0769548 -1.391818 ]]
Iteration 100 of 1000: loss=0.109 " + "l1=0.101" + "l2=0.00775 f=-0.585 shape=(1, 9000, 1)
logits [[ 1.4131731  -1.7091739  -1.1151208  -0.92936164]]
Iteration 200 of 1000: loss=0.0933 " + "l1=0.0796" + "l2=0.0137 f=-0.572 shape=(1, 9000, 1)
logits [[ 0.93296725 -1.5170208  -1.1236866  -0.57985103]]
Iteration 300 of 1000: loss=0.064 " + "l1=0.0396" + "l2=0.0245 f=-0.532 shape=(1, 9000, 1)
logits [[ 0.15703851 -1.0607144  -0.8599598  -0.36315212]]
Iteration 400 of 1000: loss=0.0447 " + "l1=0.022" + "l2=0.0227 f=-0.52 shape=(1, 9000, 1)
logits [[-0.20629501 -0.88308084 -0.78193176 -0.20900127]]
Iteration 500 of 1000: loss=0.0351 " + "l1=0.0167" + "l2=0.0184 f=-0.512 shape=(1, 9000, 1)
logits [[-0.2855594 -0.7984519 -0.6743065 -0.2913113]]
Iteration 600 of 1000: loss=0.0277 " + "l1=0.01" + "l2=0.0177 f=-0.505 shape=(1, 9000, 1)
logits [[-0.38641477 -0.6940657  -0.55219615 -0.38833207]]
Iteration 700 of 1000: loss=0.0234 " + "l1=0.0062" + "l2=0.0172 f=-0.507 shape=(1, 9000, 1)
logits [[-0.4390119  -0.6297479  -0.5208055  -0.43998718]]
Iteration 800 of 1000: loss=0.0201 " + "l1=0.00357" + "l2=0.0166 f=-0.508 shape=(1, 9000, 1)
logits [[-0.47186455 -0.5815584  -0.49985233 -0.47860193]]
Iteration 900 of 1000: loss=0.0182 " + "l1=0.00189" + "l2=0.0163 f=-0.509 shape=(1, 9000, 1)
logits [[-0.49616876 -0.549988   -0.49840966 -0.49179304]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.178 " + "l1=0.178" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.0752847 -1.9847213 -1.0769548 -1.391818 ]]
Iteration 100 of 1000: loss=0.134 " + "l1=0.118" + "l2=0.0159 f=-0.577 shape=(1, 9000, 1)
logits [[ 1.1087371 -1.5861472 -1.1272464 -0.704734 ]]
Iteration 200 of 1000: loss=0.086 " + "l1=0.0468" + "l2=0.0392 f=-0.531 shape=(1, 9000, 1)
logits [[ 0.06236304 -1.006545   -0.82836396 -0.35164705]]
Iteration 300 of 1000: loss=0.0647 " + "l1=0.0289" + "l2=0.0358 f=-0.527 shape=(1, 9000, 1)
logits [[-0.21413316 -0.87483525 -0.8030552  -0.215455  ]]
Iteration 400 of 1000: loss=0.043 " + "l1=0.0179" + "l2=0.0251 f=-0.502 shape=(1, 9000, 1)
logits [[-0.33357018 -0.743106   -0.5985894  -0.33452633]]
Iteration 500 of 1000: loss=0.0315 " + "l1=0.0078" + "l2=0.0237 f=-0.502 shape=(1, 9000, 1)
logits [[-0.43688396 -0.6136828  -0.52324396 -0.4354344 ]]
Iteration 600 of 1000: loss=0.0243 " + "l1=0.00186" + "l2=0.0225 f=-0.505 shape=(1, 9000, 1)
logits [[-0.49308038 -0.5356885  -0.4943864  -0.49516147]]
Iteration 700 of 1000: loss=0.0203 " + "l1=0.000175" + "l2=0.0202 f=-0.505 shape=(1, 9000, 1)
logits [[-0.50249976 -0.50649756 -0.50376946 -0.50668085]]
Iteration 800 of 1000: loss=0.0181 " + "l1=1.86e-06" + "l2=0.0181 f=-0.505 shape=(1, 9000, 1)
logits [[-0.5035207 -0.5035633 -0.5041482 -0.5076317]]
Iteration 900 of 1000: loss=0.0165 " + "l1=0" + "l2=0.0165 f=-0.505 shape=(1, 9000, 1)
logits [[-0.5062109  -0.50305134 -0.5055331  -0.5039615 ]]
--- 301.8944661617279 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0315 " + "l1=0.0315" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.0752847 -1.9847213 -1.0769548 -1.391818 ]]
Iteration 100 of 1000: loss=0.0302 " + "l1=0.0297" + "l2=0.000461 f=-0.592 shape=(1, 9000, 1)
logits [[ 1.9187422 -1.9478683 -1.0543151 -1.2854909]]
Iteration 200 of 1000: loss=0.0296 " + "l1=0.029" + "l2=0.000604 f=-0.591 shape=(1, 9000, 1)
logits [[ 1.8455509 -1.9283789 -1.0494735 -1.2299998]]
Iteration 300 of 1000: loss=0.0289 " + "l1=0.028" + "l2=0.000829 f=-0.589 shape=(1, 9000, 1)
logits [[ 1.7575551 -1.9042423 -1.0445682 -1.1643543]]
Iteration 400 of 1000: loss=0.0281 " + "l1=0.027" + "l2=0.00106 f=-0.587 shape=(1, 9000, 1)
logits [[ 1.6638167 -1.8793988 -1.0391563 -1.0925196]]
Iteration 500 of 1000: loss=0.0273 " + "l1=0.0259" + "l2=0.00141 f=-0.584 shape=(1, 9000, 1)
logits [[ 1.5587761 -1.8520398 -1.0320458 -1.0114427]]
Iteration 600 of 1000: loss=0.0265 " + "l1=0.0248" + "l2=0.0017 f=-0.581 shape=(1, 9000, 1)
logits [[ 1.4519837 -1.8222264 -1.0249723 -0.9306199]]
Iteration 700 of 1000: loss=0.0254 " + "l1=0.0232" + "l2=0.00221 f=-0.576 shape=(1, 9000, 1)
logits [[ 1.3170677 -1.7737036 -1.0022886 -0.8465037]]
Iteration 800 of 1000: loss=0.0232 " + "l1=0.0195" + "l2=0.00364 f=-0.556 shape=(1, 9000, 1)
logits [[ 1.0587319  -1.6350833  -0.8959078  -0.75216717]]
Iteration 900 of 1000: loss=0.0193 " + "l1=0.014" + "l2=0.00529 f=-0.532 shape=(1, 9000, 1)
logits [[ 0.6841412  -1.4124368  -0.7144669  -0.68383247]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.315 " + "l1=0.315" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.0752847 -1.9847213 -1.0769548 -1.391818 ]]
Iteration 100 of 1000: loss=0.0832 " + "l1=0.00474" + "l2=0.0784 f=-0.509 shape=(1, 9000, 1)
logits [[-0.226597   -1.1826906  -0.27397093 -0.35418713]]
Iteration 200 of 1000: loss=0.0412 " + "l1=0.000693" + "l2=0.0405 f=-0.51 shape=(1, 9000, 1)
logits [[-0.27201614 -1.1915843  -0.27894613 -0.29598454]]
Iteration 300 of 1000: loss=0.0286 " + "l1=0" + "l2=0.0286 f=-0.501 shape=(1, 9000, 1)
logits [[-0.25163805 -1.2192819  -0.25153905 -0.2823167 ]]
Iteration 400 of 1000: loss=0.0229 " + "l1=0" + "l2=0.0229 f=-0.496 shape=(1, 9000, 1)
logits [[-0.23559053 -1.2504253  -0.22996178 -0.26865   ]]
Iteration 500 of 1000: loss=0.0205 " + "l1=0" + "l2=0.0205 f=-0.495 shape=(1, 9000, 1)
logits [[-0.25908524 -1.2536902  -0.21332683 -0.25317985]]
Iteration 600 of 1000: loss=0.0172 " + "l1=0" + "l2=0.0172 f=-0.493 shape=(1, 9000, 1)
logits [[-0.23051116 -1.2682736  -0.22250953 -0.24989423]]
Iteration 700 of 1000: loss=0.0149 " + "l1=0.000159" + "l2=0.0147 f=-0.487 shape=(1, 9000, 1)
logits [[-0.22721814 -1.2831769  -0.21919523 -0.21760985]]
Iteration 800 of 1000: loss=0.0135 " + "l1=0" + "l2=0.0135 f=-0.482 shape=(1, 9000, 1)
logits [[-0.21248113 -1.2933099  -0.20586419 -0.21623221]]
Iteration 900 of 1000: loss=0.0119 " + "l1=0" + "l2=0.0119 f=-0.478 shape=(1, 9000, 1)
logits [[-0.2125107  -1.2941282  -0.19715877 -0.2090298 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.173 " + "l1=0.173" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.0752847 -1.9847213 -1.0769548 -1.391818 ]]
Iteration 100 of 1000: loss=0.111 " + "l1=0.0685" + "l2=0.0421 f=-0.544 shape=(1, 9000, 1)
logits [[ 0.6290281  -1.3536799  -0.61616737 -0.8337631 ]]
Iteration 200 of 1000: loss=0.0464 " + "l1=0.000153" + "l2=0.0462 f=-0.515 shape=(1, 9000, 1)
logits [[-0.27197817 -1.2163684  -0.2747554  -0.2964974 ]]
Iteration 300 of 1000: loss=0.0295 " + "l1=0" + "l2=0.0295 f=-0.513 shape=(1, 9000, 1)
logits [[-0.27426958 -1.2373143  -0.26594403 -0.2754017 ]]
Iteration 400 of 1000: loss=0.0219 " + "l1=5.47e-05" + "l2=0.0219 f=-0.505 shape=(1, 9000, 1)
logits [[-0.26403627 -1.2609061  -0.24719806 -0.24620277]]
Iteration 500 of 1000: loss=0.0176 " + "l1=0" + "l2=0.0176 f=-0.497 shape=(1, 9000, 1)
logits [[-0.24443021 -1.2592113  -0.23809487 -0.24534377]]
Iteration 600 of 1000: loss=0.0152 " + "l1=0" + "l2=0.0152 f=-0.493 shape=(1, 9000, 1)
logits [[-0.24031055 -1.2632892  -0.22885852 -0.23832849]]
Iteration 700 of 1000: loss=0.0127 " + "l1=5.8e-06" + "l2=0.0127 f=-0.486 shape=(1, 9000, 1)
logits [[-0.22228503 -1.2755327  -0.22239046 -0.22362018]]
Iteration 800 of 1000: loss=0.0107 " + "l1=0" + "l2=0.0107 f=-0.484 shape=(1, 9000, 1)
logits [[-0.2309384  -1.265066   -0.21463056 -0.22379547]]
Iteration 900 of 1000: loss=0.00911 " + "l1=0" + "l2=0.00911 f=-0.484 shape=(1, 9000, 1)
logits [[-0.22631243 -1.2560649  -0.21690638 -0.23699403]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.102 " + "l1=0.102" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.0752847 -1.9847213 -1.0769548 -1.391818 ]]
Iteration 100 of 1000: loss=0.0894 " + "l1=0.085" + "l2=0.00438 f=-0.588 shape=(1, 9000, 1)
logits [[ 1.597348  -1.8688749 -1.019457  -1.0597397]]
Iteration 200 of 1000: loss=0.0704 " + "l1=0.0533" + "l2=0.0171 f=-0.545 shape=(1, 9000, 1)
logits [[ 0.8712957  -1.512965   -0.76921    -0.77111083]]
Iteration 300 of 1000: loss=0.0424 " + "l1=0.0108" + "l2=0.0316 f=-0.51 shape=(1, 9000, 1)
logits [[-0.00603794 -1.2689507  -0.33853424 -0.42609924]]
Iteration 400 of 1000: loss=0.0263 " + "l1=0.000162" + "l2=0.0262 f=-0.508 shape=(1, 9000, 1)
logits [[-0.25554082 -1.2405154  -0.26053655 -0.2745484 ]]
Iteration 500 of 1000: loss=0.0199 " + "l1=0.000171" + "l2=0.0197 f=-0.5 shape=(1, 9000, 1)
logits [[-0.24194399 -1.2531023  -0.24721836 -0.2573498 ]]
Iteration 600 of 1000: loss=0.0162 " + "l1=0" + "l2=0.0162 f=-0.493 shape=(1, 9000, 1)
logits [[-0.23792176 -1.2588875  -0.23695798 -0.23812556]]
Iteration 700 of 1000: loss=0.0135 " + "l1=0" + "l2=0.0135 f=-0.487 shape=(1, 9000, 1)
logits [[-0.22820377 -1.2652282  -0.22477849 -0.22857952]]
Iteration 800 of 1000: loss=0.0106 " + "l1=0" + "l2=0.0106 f=-0.484 shape=(1, 9000, 1)
logits [[-0.2272293  -1.258546   -0.22468026 -0.22733873]]
Iteration 900 of 1000: loss=0.00894 " + "l1=5.86e-05" + "l2=0.00888 f=-0.486 shape=(1, 9000, 1)
logits [[-0.23067783 -1.2473435  -0.23247968 -0.23421413]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.067 " + "l1=0.067" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.0752847 -1.9847213 -1.0769548 -1.391818 ]]
Iteration 100 of 1000: loss=0.0614 " + "l1=0.0596" + "l2=0.0018 f=-0.59 shape=(1, 9000, 1)
logits [[ 1.7698618 -1.9116791 -1.0363356 -1.183679 ]]
Iteration 200 of 1000: loss=0.0579 " + "l1=0.0551" + "l2=0.0028 f=-0.586 shape=(1, 9000, 1)
logits [[ 1.5699688 -1.8573303 -1.0242995 -1.0318315]]
Iteration 300 of 1000: loss=0.0534 " + "l1=0.0485" + "l2=0.00488 f=-0.576 shape=(1, 9000, 1)
logits [[ 1.300722   -1.769948   -0.98057157 -0.85357547]]
Iteration 400 of 1000: loss=0.0411 " + "l1=0.0301" + "l2=0.011 f=-0.538 shape=(1, 9000, 1)
logits [[ 0.69070745 -1.4429098  -0.7243376  -0.677333  ]]
Iteration 500 of 1000: loss=0.0287 " + "l1=0.0146" + "l2=0.0141 f=-0.512 shape=(1, 9000, 1)
logits [[ 0.19548789 -1.3028934  -0.49354285 -0.44613194]]
Iteration 600 of 1000: loss=0.0172 " + "l1=0.00217" + "l2=0.015 f=-0.49 shape=(1, 9000, 1)
logits [[-0.19932808 -1.2361174  -0.3012907  -0.22330305]]
Iteration 700 of 1000: loss=0.0124 " + "l1=0" + "l2=0.0124 f=-0.493 shape=(1, 9000, 1)
logits [[-0.25007915 -1.2239472  -0.24787699 -0.24906522]]
Iteration 800 of 1000: loss=0.0101 " + "l1=2.48e-05" + "l2=0.0101 f=-0.494 shape=(1, 9000, 1)
logits [[-0.24707864 -1.2283165  -0.24824397 -0.2507952 ]]
Iteration 900 of 1000: loss=0.00892 " + "l1=2.96e-05" + "l2=0.00889 f=-0.491 shape=(1, 9000, 1)
logits [[-0.24899262 -1.2242178  -0.24627294 -0.24488178]]
--- 304.6378481388092 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0347 " + "l1=0.0347" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.0752847 -1.9847213 -1.0769548 -1.391818 ]]
Iteration 100 of 1000: loss=0.0306 " + "l1=0.0295" + "l2=0.00114 f=-0.589 shape=(1, 9000, 1)
logits [[ 1.8054389 -1.9254594 -1.0916433 -1.1450528]]
Iteration 200 of 1000: loss=0.0281 " + "l1=0.0262" + "l2=0.00186 f=-0.586 shape=(1, 9000, 1)
logits [[ 1.6342989 -1.8864721 -1.1048224 -0.9867262]]
Iteration 300 of 1000: loss=0.0251 " + "l1=0.0223" + "l2=0.00282 f=-0.582 shape=(1, 9000, 1)
logits [[ 1.4333397 -1.8429731 -1.1213585 -0.7965382]]
Iteration 400 of 1000: loss=0.022 " + "l1=0.0182" + "l2=0.00387 f=-0.577 shape=(1, 9000, 1)
logits [[ 1.2198272  -1.8018345  -1.1297501  -0.59576434]]
Iteration 500 of 1000: loss=0.019 " + "l1=0.0143" + "l2=0.00477 f=-0.571 shape=(1, 9000, 1)
logits [[ 1.024202   -1.7699844  -1.1347655  -0.40250003]]
Iteration 600 of 1000: loss=0.0163 " + "l1=0.0109" + "l2=0.00545 f=-0.565 shape=(1, 9000, 1)
logits [[ 0.85538274 -1.747253   -1.1381959  -0.23028368]]
Iteration 700 of 1000: loss=0.0135 " + "l1=0.00746" + "l2=0.00606 f=-0.56 shape=(1, 9000, 1)
logits [[ 0.6812502  -1.7196176  -1.1368676  -0.06491444]]
Iteration 800 of 1000: loss=0.0104 " + "l1=0.00345" + "l2=0.00695 f=-0.553 shape=(1, 9000, 1)
logits [[ 0.4689823  -1.6808823  -1.1237209   0.12375634]]
Iteration 900 of 1000: loss=0.00705 " + "l1=1.13e-05" + "l2=0.00704 f=-0.533 shape=(1, 9000, 1)
logits [[ 0.24573329 -1.5850812  -1.0386391   0.24460024]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0173 " + "l1=0.0173" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.0752847 -1.9847213 -1.0769548 -1.391818 ]]
Iteration 100 of 1000: loss=0.0162 " + "l1=0.0159" + "l2=0.00032 f=-0.591 shape=(1, 9000, 1)
logits [[ 1.9273818 -1.9516205 -1.0841063 -1.2569535]]
Iteration 200 of 1000: loss=0.0157 " + "l1=0.0153" + "l2=0.00044 f=-0.59 shape=(1, 9000, 1)
logits [[ 1.8610145 -1.9365028 -1.0885142 -1.1962698]]
Iteration 300 of 1000: loss=0.0152 " + "l1=0.0145" + "l2=0.000629 f=-0.588 shape=(1, 9000, 1)
logits [[ 1.7830153 -1.9186863 -1.0934764 -1.1246616]]
Iteration 400 of 1000: loss=0.0145 " + "l1=0.0137" + "l2=0.000845 f=-0.587 shape=(1, 9000, 1)
logits [[ 1.6957515 -1.9000622 -1.0987312 -1.0430875]]
Iteration 500 of 1000: loss=0.0139 " + "l1=0.0128" + "l2=0.00109 f=-0.584 shape=(1, 9000, 1)
logits [[ 1.602697  -1.8808861 -1.1041832 -0.9546033]]
Iteration 600 of 1000: loss=0.0132 " + "l1=0.0119" + "l2=0.00135 f=-0.582 shape=(1, 9000, 1)
logits [[ 1.50902   -1.8627198 -1.1097976 -0.863745 ]]
Iteration 700 of 1000: loss=0.0125 " + "l1=0.0109" + "l2=0.00158 f=-0.579 shape=(1, 9000, 1)
logits [[ 1.4136827  -1.8438668  -1.1142216  -0.77237856]]
Iteration 800 of 1000: loss=0.0118 " + "l1=0.0099" + "l2=0.0019 f=-0.577 shape=(1, 9000, 1)
logits [[ 1.3073992 -1.825711  -1.1154149 -0.6726379]]
Iteration 900 of 1000: loss=0.0111 " + "l1=0.00897" + "l2=0.00214 f=-0.574 shape=(1, 9000, 1)
logits [[ 1.2129682 -1.8112644 -1.1170655 -0.5800943]]
const [0.0075]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.026 " + "l1=0.026" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.0752847 -1.9847213 -1.0769548 -1.391818 ]]
Iteration 100 of 1000: loss=0.0237 " + "l1=0.023" + "l2=0.000664 f=-0.59 shape=(1, 9000, 1)
logits [[ 1.8677913 -1.9386597 -1.0876712 -1.202297 ]]
Iteration 200 of 1000: loss=0.0224 " + "l1=0.0214" + "l2=0.00101 f=-0.588 shape=(1, 9000, 1)
logits [[ 1.753019  -1.9121852 -1.0955545 -1.0979941]]
Iteration 300 of 1000: loss=0.0209 " + "l1=0.0194" + "l2=0.00149 f=-0.585 shape=(1, 9000, 1)
logits [[ 1.6184125  -1.8829471  -1.1050661  -0.97142196]]
Iteration 400 of 1000: loss=0.0193 " + "l1=0.0173" + "l2=0.00204 f=-0.582 shape=(1, 9000, 1)
logits [[ 1.4732261 -1.8527528 -1.1155474 -0.8328622]]
Iteration 500 of 1000: loss=0.0176 " + "l1=0.015" + "l2=0.00264 f=-0.578 shape=(1, 9000, 1)
logits [[ 1.315027  -1.8210522 -1.122047  -0.6854394]]
Iteration 600 of 1000: loss=0.016 " + "l1=0.0128" + "l2=0.00313 f=-0.574 shape=(1, 9000, 1)
logits [[ 1.1683843  -1.7966634  -1.1246467  -0.54384184]]
Iteration 700 of 1000: loss=0.0144 " + "l1=0.0107" + "l2=0.00364 f=-0.569 shape=(1, 9000, 1)
logits [[ 1.0292344  -1.7764369  -1.1270881  -0.40337893]]
Iteration 800 of 1000: loss=0.0128 " + "l1=0.00887" + "l2=0.0039 f=-0.565 shape=(1, 9000, 1)
logits [[ 0.9056941  -1.760623   -1.1291054  -0.27641475]]
Iteration 900 of 1000: loss=0.0114 " + "l1=0.0071" + "l2=0.00428 f=-0.562 shape=(1, 9000, 1)
logits [[ 0.78665376 -1.7434005  -1.131051   -0.15999302]]
const [0.00875]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0303 " + "l1=0.0303" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.0752847 -1.9847213 -1.0769548 -1.391818 ]]
Iteration 100 of 1000: loss=0.0273 " + "l1=0.0264" + "l2=0.000861 f=-0.59 shape=(1, 9000, 1)
logits [[ 1.8397765 -1.933327  -1.089054  -1.1763847]]
Iteration 200 of 1000: loss=0.0254 " + "l1=0.024" + "l2=0.00138 f=-0.587 shape=(1, 9000, 1)
logits [[ 1.6985577 -1.9013022 -1.0992972 -1.0468063]]
Iteration 300 of 1000: loss=0.0233 " + "l1=0.0212" + "l2=0.00205 f=-0.584 shape=(1, 9000, 1)
logits [[ 1.5329735 -1.8655134 -1.1120145 -0.8899157]]
Iteration 400 of 1000: loss=0.021 " + "l1=0.0182" + "l2=0.00286 f=-0.58 shape=(1, 9000, 1)
logits [[ 1.3545241  -1.828971   -1.1237605  -0.72032285]]
Iteration 500 of 1000: loss=0.0187 " + "l1=0.015" + "l2=0.00365 f=-0.575 shape=(1, 9000, 1)
logits [[ 1.1713674 -1.7964716 -1.1275102 -0.5470978]]
Iteration 600 of 1000: loss=0.0164 " + "l1=0.0121" + "l2=0.00433 f=-0.569 shape=(1, 9000, 1)
logits [[ 1.0045872  -1.7715827  -1.1309141  -0.37875605]]
Iteration 700 of 1000: loss=0.0144 " + "l1=0.0096" + "l2=0.00475 f=-0.564 shape=(1, 9000, 1)
logits [[ 0.8629662  -1.7530539  -1.133243   -0.23461068]]
Iteration 800 of 1000: loss=0.0123 " + "l1=0.00702" + "l2=0.00525 f=-0.56 shape=(1, 9000, 1)
logits [[ 0.7116485  -1.7294459  -1.132904   -0.09044819]]
Iteration 900 of 1000: loss=0.00996 " + "l1=0.00408" + "l2=0.00588 f=-0.555 shape=(1, 9000, 1)
logits [[ 0.5355928  -1.699444   -1.1233721   0.06915455]]
const [0.009375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0325 " + "l1=0.0325" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.0752847 -1.9847213 -1.0769548 -1.391818 ]]
Iteration 100 of 1000: loss=0.029 " + "l1=0.028" + "l2=0.000974 f=-0.59 shape=(1, 9000, 1)
logits [[ 1.826576  -1.9307078 -1.0899673 -1.1640104]]
Iteration 200 of 1000: loss=0.0269 " + "l1=0.0253" + "l2=0.00156 f=-0.587 shape=(1, 9000, 1)
logits [[ 1.6744388 -1.896689  -1.1011902 -1.0233202]]
Iteration 300 of 1000: loss=0.0244 " + "l1=0.022" + "l2=0.00233 f=-0.583 shape=(1, 9000, 1)
logits [[ 1.4967458 -1.8587844 -1.11508   -0.8545818]]
Iteration 400 of 1000: loss=0.0217 " + "l1=0.0184" + "l2=0.00327 f=-0.579 shape=(1, 9000, 1)
logits [[ 1.2993693  -1.8189344  -1.1261463  -0.66841286]]
Iteration 500 of 1000: loss=0.019 " + "l1=0.0149" + "l2=0.0041 f=-0.573 shape=(1, 9000, 1)
logits [[ 1.1083753  -1.7863905  -1.1306633  -0.48399284]]
Iteration 600 of 1000: loss=0.0164 " + "l1=0.0116" + "l2=0.00485 f=-0.567 shape=(1, 9000, 1)
logits [[ 0.9315671  -1.7615309  -1.1340945  -0.30283326]]
Iteration 700 of 1000: loss=0.0141 " + "l1=0.00882" + "l2=0.00527 f=-0.563 shape=(1, 9000, 1)
logits [[ 0.7836155  -1.7399925  -1.1370171  -0.15743622]]
Iteration 800 of 1000: loss=0.0116 " + "l1=0.0056" + "l2=0.00595 f=-0.557 shape=(1, 9000, 1)
logits [[ 0.6049534 -1.7106059 -1.1313084  0.0078594]]
Iteration 900 of 1000: loss=0.0086 " + "l1=0.00171" + "l2=0.00689 f=-0.547 shape=(1, 9000, 1)
logits [[ 0.37763843 -1.6582916  -1.101132    0.19513148]]
--- 308.0005121231079 seconds ---
Adv result:3
Loading record A01811
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0579 " + "l1=0.0579" + "l2=0 f=-0.971 shape=(1, 9000, 1)
logits [[  4.877372   -0.9156662   3.0491636 -10.8934965]]
Iteration 100 of 1000: loss=0.0572 " + "l1=0.0568" + "l2=0.000448 f=-0.974 shape=(1, 9000, 1)
logits [[  4.814855    -0.86529166   3.0307043  -10.876895  ]]
Iteration 200 of 1000: loss=0.057 " + "l1=0.0566" + "l2=0.000488 f=-0.975 shape=(1, 9000, 1)
logits [[  4.8019295  -0.8540083   3.0256436 -10.874742 ]]
Iteration 300 of 1000: loss=0.0569 " + "l1=0.0563" + "l2=0.000615 f=-0.976 shape=(1, 9000, 1)
logits [[  4.7869797  -0.8413907   3.0198903 -10.870418 ]]
Iteration 400 of 1000: loss=0.0568 " + "l1=0.056" + "l2=0.000765 f=-0.977 shape=(1, 9000, 1)
logits [[  4.773556    -0.83063865   3.0146568  -10.865155  ]]
Iteration 500 of 1000: loss=0.0567 " + "l1=0.0558" + "l2=0.000886 f=-0.977 shape=(1, 9000, 1)
logits [[  4.760888   -0.8209124   3.0097747 -10.859234 ]]
Iteration 600 of 1000: loss=0.0567 " + "l1=0.0556" + "l2=0.00105 f=-0.978 shape=(1, 9000, 1)
logits [[  4.7490015  -0.8124944   3.005248  -10.852548 ]]
Iteration 700 of 1000: loss=0.0566 " + "l1=0.0554" + "l2=0.00114 f=-0.978 shape=(1, 9000, 1)
logits [[  4.737361   -0.804916    3.0008957 -10.845606 ]]
Iteration 800 of 1000: loss=0.0565 " + "l1=0.0552" + "l2=0.00128 f=-0.978 shape=(1, 9000, 1)
logits [[  4.72656     -0.79829925   2.9967766  -10.838289  ]]
Iteration 900 of 1000: loss=0.0565 " + "l1=0.0551" + "l2=0.00142 f=-0.978 shape=(1, 9000, 1)
logits [[  4.7164564  -0.7925274   2.9929776 -10.830813 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.579 " + "l1=0.579" + "l2=0 f=-0.971 shape=(1, 9000, 1)
logits [[  4.877372   -0.9156662   3.0491636 -10.8934965]]
Iteration 100 of 1000: loss=0.513 " + "l1=0.476" + "l2=0.037 f=-1.02 shape=(1, 9000, 1)
logits [[  4.2832904   -0.47785974   2.8694885  -10.754539  ]]
Iteration 200 of 1000: loss=0.484 " + "l1=0.429" + "l2=0.0548 f=-1.04 shape=(1, 9000, 1)
logits [[  3.9927268  -0.2969489   2.7802382 -10.642096 ]]
Iteration 300 of 1000: loss=0.461 " + "l1=0.389" + "l2=0.0716 f=-1.06 shape=(1, 9000, 1)
logits [[  3.7315373   -0.15898524   2.7094636  -10.524755  ]]
Iteration 400 of 1000: loss=0.442 " + "l1=0.357" + "l2=0.0853 f=-1.07 shape=(1, 9000, 1)
logits [[  3.5201964   -0.04958408   2.6493275  -10.402838  ]]
Iteration 500 of 1000: loss=0.428 " + "l1=0.335" + "l2=0.0933 f=-1.07 shape=(1, 9000, 1)
logits [[  3.3746178    0.02590291   2.5995708  -10.289988  ]]
Iteration 600 of 1000: loss=0.416 " + "l1=0.319" + "l2=0.0973 f=-1.07 shape=(1, 9000, 1)
logits [[  3.2695026    0.08303063   2.556283   -10.18768   ]]
Iteration 700 of 1000: loss=0.404 " + "l1=0.303" + "l2=0.101 f=-1.07 shape=(1, 9000, 1)
logits [[  3.171445     0.14041023   2.509619   -10.08159   ]]
Iteration 800 of 1000: loss=0.393 " + "l1=0.289" + "l2=0.104 f=-1.06 shape=(1, 9000, 1)
logits [[ 3.0780678   0.18755803  2.4703312  -9.971996  ]]
Iteration 900 of 1000: loss=0.382 " + "l1=0.271" + "l2=0.111 f=-1.05 shape=(1, 9000, 1)
logits [[ 2.9582133   0.25095743  2.423587   -9.849153  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.79 " + "l1=5.79" + "l2=0 f=-0.971 shape=(1, 9000, 1)
logits [[  4.877372   -0.9156662   3.0491636 -10.8934965]]
Iteration 100 of 1000: loss=1.5 " + "l1=0.173" + "l2=1.33 f=-1.14 shape=(1, 9000, 1)
logits [[ 1.7536081  1.5855317  1.7584976 -9.660444 ]]
Iteration 200 of 1000: loss=1.04 " + "l1=0" + "l2=1.04 f=-1.12 shape=(1, 9000, 1)
logits [[ 1.677384   1.7079104  1.7069644 -9.560251 ]]
Iteration 300 of 1000: loss=0.846 " + "l1=0.00419" + "l2=0.842 f=-1.1 shape=(1, 9000, 1)
logits [[ 1.6599357  1.6911082  1.6952947 -9.45004  ]]
Iteration 400 of 1000: loss=0.738 " + "l1=0" + "l2=0.738 f=-1.09 shape=(1, 9000, 1)
logits [[ 1.6505378  1.685848   1.6854216 -9.37062  ]]
Iteration 500 of 1000: loss=0.668 " + "l1=0" + "l2=0.668 f=-1.08 shape=(1, 9000, 1)
logits [[ 1.6369007  1.6829895  1.6777905 -9.311953 ]]
Iteration 600 of 1000: loss=0.612 " + "l1=0" + "l2=0.612 f=-1.07 shape=(1, 9000, 1)
logits [[ 1.6482166  1.6695644  1.6681017 -9.279123 ]]
Iteration 700 of 1000: loss=0.57 " + "l1=0" + "l2=0.57 f=-1.07 shape=(1, 9000, 1)
logits [[ 1.6350305  1.6613203  1.6603222 -9.225139 ]]
Iteration 800 of 1000: loss=0.548 " + "l1=0" + "l2=0.548 f=-1.06 shape=(1, 9000, 1)
logits [[ 1.5761626  1.678939   1.6477324 -9.156261 ]]
Iteration 900 of 1000: loss=0.509 " + "l1=0" + "l2=0.509 f=-1.06 shape=(1, 9000, 1)
logits [[ 1.5681648  1.6535933  1.6422818 -9.085909 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.19 " + "l1=3.19" + "l2=0 f=-0.971 shape=(1, 9000, 1)
logits [[  4.877372   -0.9156662   3.0491636 -10.8934965]]
Iteration 100 of 1000: loss=1.37 " + "l1=0.625" + "l2=0.74 f=-1.14 shape=(1, 9000, 1)
logits [[ 2.1527405  1.0168494  2.1446743 -9.889959 ]]
Iteration 200 of 1000: loss=0.973 " + "l1=0.22" + "l2=0.753 f=-1.12 shape=(1, 9000, 1)
logits [[ 1.8463076  1.4510496  1.850919  -9.629334 ]]
Iteration 300 of 1000: loss=0.687 " + "l1=0.0125" + "l2=0.675 f=-1.11 shape=(1, 9000, 1)
logits [[ 1.6861749  1.6665213  1.6892676 -9.468242 ]]
Iteration 400 of 1000: loss=0.586 " + "l1=0" + "l2=0.586 f=-1.1 shape=(1, 9000, 1)
logits [[ 1.6434546  1.6907812  1.6793376 -9.395253 ]]
Iteration 500 of 1000: loss=0.52 " + "l1=0.00546" + "l2=0.514 f=-1.09 shape=(1, 9000, 1)
logits [[ 1.6772406  1.6690589  1.678983  -9.36828  ]]
Iteration 600 of 1000: loss=0.473 " + "l1=0" + "l2=0.473 f=-1.08 shape=(1, 9000, 1)
logits [[ 1.6476178  1.6792507  1.6759018 -9.319817 ]]
Iteration 700 of 1000: loss=0.433 " + "l1=0.000336" + "l2=0.433 f=-1.07 shape=(1, 9000, 1)
logits [[ 1.6410437  1.6672963  1.6679064 -9.255308 ]]
Iteration 800 of 1000: loss=0.399 " + "l1=0.000964" + "l2=0.398 f=-1.06 shape=(1, 9000, 1)
logits [[ 1.6450171  1.647439   1.6491911 -9.171324 ]]
Iteration 900 of 1000: loss=0.368 " + "l1=0" + "l2=0.368 f=-1.04 shape=(1, 9000, 1)
logits [[ 1.6360316  1.6372828  1.6344064 -9.081844 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.88 " + "l1=1.88" + "l2=0 f=-0.971 shape=(1, 9000, 1)
logits [[  4.877372   -0.9156662   3.0491636 -10.8934965]]
Iteration 100 of 1000: loss=1.13 " + "l1=0.672" + "l2=0.456 f=-1.15 shape=(1, 9000, 1)
logits [[  2.570453    0.5035783   2.4624848 -10.125665 ]]
Iteration 200 of 1000: loss=0.873 " + "l1=0.432" + "l2=0.441 f=-1.14 shape=(1, 9000, 1)
logits [[ 2.22218    0.894455   2.2237666 -9.901355 ]]
Iteration 300 of 1000: loss=0.727 " + "l1=0.271" + "l2=0.457 f=-1.13 shape=(1, 9000, 1)
logits [[ 2.0028179  1.1713638  2.004065  -9.680611 ]]
Iteration 400 of 1000: loss=0.617 " + "l1=0.158" + "l2=0.459 f=-1.11 shape=(1, 9000, 1)
logits [[ 1.842974   1.3703893  1.8575393 -9.518514 ]]
Iteration 500 of 1000: loss=0.533 " + "l1=0.0462" + "l2=0.486 f=-1.1 shape=(1, 9000, 1)
logits [[ 1.6901873  1.5787277  1.7210109 -9.373669 ]]
Iteration 600 of 1000: loss=0.455 " + "l1=0.00206" + "l2=0.453 f=-1.08 shape=(1, 9000, 1)
logits [[ 1.6523309  1.6545293  1.6608647 -9.286276 ]]
Iteration 700 of 1000: loss=0.402 " + "l1=0.0012" + "l2=0.401 f=-1.07 shape=(1, 9000, 1)
logits [[ 1.6353419  1.6506945  1.6543992 -9.201336 ]]
Iteration 800 of 1000: loss=0.363 " + "l1=0" + "l2=0.363 f=-1.05 shape=(1, 9000, 1)
logits [[ 1.6166015  1.6456794  1.6397187 -9.101572 ]]
Iteration 900 of 1000: loss=0.329 " + "l1=0.00259" + "l2=0.326 f=-1.03 shape=(1, 9000, 1)
logits [[ 1.6135124  1.6263858  1.6343467 -8.999904 ]]
--- 309.3296103477478 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0183 " + "l1=0.0183" + "l2=0 f=-0.971 shape=(1, 9000, 1)
logits [[  4.877372   -0.9156662   3.0491636 -10.8934965]]
Iteration 100 of 1000: loss=0.018 " + "l1=0.0177" + "l2=0.000267 f=-0.975 shape=(1, 9000, 1)
logits [[  4.8337803  -0.9106949   3.062085  -10.883341 ]]
Iteration 200 of 1000: loss=0.0179 " + "l1=0.0177" + "l2=0.000232 f=-0.975 shape=(1, 9000, 1)
logits [[  4.830637   -0.9099105   3.0626614 -10.882405 ]]
Iteration 300 of 1000: loss=0.0179 " + "l1=0.0176" + "l2=0.000277 f=-0.975 shape=(1, 9000, 1)
logits [[  4.8241353  -0.9085307   3.0641892 -10.880586 ]]
Iteration 400 of 1000: loss=0.0178 " + "l1=0.0175" + "l2=0.000326 f=-0.976 shape=(1, 9000, 1)
logits [[  4.817553    -0.90711576   3.065789   -10.878656  ]]
Iteration 500 of 1000: loss=0.0178 " + "l1=0.0174" + "l2=0.000386 f=-0.976 shape=(1, 9000, 1)
logits [[  4.8111067   -0.90587264   3.0673547  -10.876547  ]]
Iteration 600 of 1000: loss=0.0178 " + "l1=0.0174" + "l2=0.000471 f=-0.976 shape=(1, 9000, 1)
logits [[  4.8052597  -0.9048521   3.0687754 -10.874489 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.183 " + "l1=0.183" + "l2=0 f=-0.971 shape=(1, 9000, 1)
logits [[  4.877372   -0.9156662   3.0491636 -10.8934965]]
Iteration 100 of 1000: loss=0.156 " + "l1=0.14" + "l2=0.0161 f=-1.01 shape=(1, 9000, 1)
logits [[  4.5318694  -0.8652484   3.1360812 -10.832545 ]]
Iteration 200 of 1000: loss=0.146 " + "l1=0.124" + "l2=0.022 f=-1.02 shape=(1, 9000, 1)
logits [[  4.399365   -0.8403768   3.1583133 -10.806716 ]]
Iteration 300 of 1000: loss=0.138 " + "l1=0.11" + "l2=0.0282 f=-1.03 shape=(1, 9000, 1)
logits [[  4.2748837   -0.81297094   3.1763206  -10.775959  ]]
Iteration 400 of 1000: loss=0.131 " + "l1=0.099" + "l2=0.0321 f=-1.04 shape=(1, 9000, 1)
logits [[  4.1764503  -0.7882372   3.1860356 -10.743967 ]]
Iteration 500 of 1000: loss=0.125 " + "l1=0.0897" + "l2=0.0351 f=-1.05 shape=(1, 9000, 1)
logits [[  4.089778   -0.7667404   3.1928322 -10.707179 ]]
Iteration 600 of 1000: loss=0.118 " + "l1=0.0801" + "l2=0.038 f=-1.05 shape=(1, 9000, 1)
logits [[  3.9947982   -0.74337023   3.1940331  -10.657737  ]]
Iteration 700 of 1000: loss=0.11 " + "l1=0.0669" + "l2=0.0429 f=-1.06 shape=(1, 9000, 1)
logits [[  3.861121    -0.72131336   3.1919782  -10.57684   ]]
Iteration 800 of 1000: loss=0.102 " + "l1=0.0571" + "l2=0.045 f=-1.06 shape=(1, 9000, 1)
logits [[  3.7646043  -0.7104357   3.1932364 -10.493053 ]]
Iteration 900 of 1000: loss=0.0958 " + "l1=0.0478" + "l2=0.0481 f=-1.06 shape=(1, 9000, 1)
logits [[  3.6676612   -0.70286363   3.1900058  -10.398552  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.83 " + "l1=1.83" + "l2=0 f=-0.971 shape=(1, 9000, 1)
logits [[  4.877372   -0.9156662   3.0491636 -10.8934965]]
Iteration 100 of 1000: loss=0.253 " + "l1=0" + "l2=0.253 f=-1.14 shape=(1, 9000, 1)
logits [[  3.298626    -0.66984004   3.3120642  -10.492437  ]]
Iteration 200 of 1000: loss=0.188 " + "l1=0" + "l2=0.188 f=-1.14 shape=(1, 9000, 1)
logits [[  3.2711349  -0.6160236   3.2742007 -10.473111 ]]
Iteration 300 of 1000: loss=0.16 " + "l1=0" + "l2=0.16 f=-1.13 shape=(1, 9000, 1)
logits [[  3.244373    -0.60233706   3.251382   -10.415666  ]]
Iteration 400 of 1000: loss=0.143 " + "l1=0" + "l2=0.143 f=-1.12 shape=(1, 9000, 1)
logits [[  3.217436    -0.59279317   3.2337847  -10.350861  ]]
Iteration 500 of 1000: loss=0.14 " + "l1=0.0157" + "l2=0.125 f=-1.11 shape=(1, 9000, 1)
logits [[  3.2288477   -0.59399444   3.2131836  -10.30274   ]]
Iteration 600 of 1000: loss=0.115 " + "l1=0" + "l2=0.115 f=-1.11 shape=(1, 9000, 1)
logits [[  3.204381   -0.5950582   3.2062373 -10.240135 ]]
Iteration 700 of 1000: loss=0.109 " + "l1=0" + "l2=0.109 f=-1.1 shape=(1, 9000, 1)
logits [[  3.1795642  -0.6001221   3.1997893 -10.170914 ]]
Iteration 800 of 1000: loss=0.0997 " + "l1=0" + "l2=0.0997 f=-1.09 shape=(1, 9000, 1)
logits [[  3.1698039   -0.60870177   3.1888244  -10.09714   ]]
Iteration 900 of 1000: loss=0.0918 " + "l1=0" + "l2=0.0918 f=-1.08 shape=(1, 9000, 1)
logits [[  3.1628702   -0.61767477   3.181006   -10.02936   ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.01 " + "l1=1.01" + "l2=0 f=-0.971 shape=(1, 9000, 1)
logits [[  4.877372   -0.9156662   3.0491636 -10.8934965]]
Iteration 100 of 1000: loss=0.245 " + "l1=0" + "l2=0.245 f=-1.14 shape=(1, 9000, 1)
logits [[  3.2960498   -0.65011466   3.3068678  -10.518054  ]]
Iteration 200 of 1000: loss=0.179 " + "l1=0.0011" + "l2=0.178 f=-1.14 shape=(1, 9000, 1)
logits [[  3.2769356  -0.6007974   3.2749338 -10.501502 ]]
Iteration 300 of 1000: loss=0.152 " + "l1=0" + "l2=0.152 f=-1.13 shape=(1, 9000, 1)
logits [[  3.245945    -0.58776194   3.2519386  -10.439912  ]]
Iteration 400 of 1000: loss=0.133 " + "l1=0" + "l2=0.133 f=-1.12 shape=(1, 9000, 1)
logits [[  3.2268708   -0.58843845   3.2350008  -10.36993   ]]
Iteration 500 of 1000: loss=0.119 " + "l1=0" + "l2=0.119 f=-1.12 shape=(1, 9000, 1)
logits [[  3.2089753  -0.5886817   3.2215207 -10.305775 ]]
Iteration 600 of 1000: loss=0.107 " + "l1=0" + "l2=0.107 f=-1.11 shape=(1, 9000, 1)
logits [[  3.205796   -0.5977811   3.210157  -10.239369 ]]
Iteration 700 of 1000: loss=0.0982 " + "l1=0" + "l2=0.0982 f=-1.09 shape=(1, 9000, 1)
logits [[  3.1915116   -0.60462993   3.200182   -10.163485  ]]
Iteration 800 of 1000: loss=0.0902 " + "l1=0" + "l2=0.0902 f=-1.08 shape=(1, 9000, 1)
logits [[  3.1797743  -0.6159933   3.1937296 -10.081989 ]]
Iteration 900 of 1000: loss=0.0852 " + "l1=0" + "l2=0.0852 f=-1.07 shape=(1, 9000, 1)
logits [[ 3.1535432 -0.6288544  3.1869605 -9.997775 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.594 " + "l1=0.594" + "l2=0 f=-0.971 shape=(1, 9000, 1)
logits [[  4.877372   -0.9156662   3.0491636 -10.8934965]]
Iteration 100 of 1000: loss=0.275 " + "l1=0.0708" + "l2=0.204 f=-1.12 shape=(1, 9000, 1)
logits [[  3.5036566  -0.7014659   3.2859333 -10.580183 ]]
Iteration 200 of 1000: loss=0.181 " + "l1=0.00828" + "l2=0.172 f=-1.14 shape=(1, 9000, 1)
logits [[  3.3032503  -0.6012052   3.277788  -10.532219 ]]
Iteration 300 of 1000: loss=0.148 " + "l1=0.00365" + "l2=0.144 f=-1.13 shape=(1, 9000, 1)
logits [[  3.2672715  -0.5767797   3.2560458 -10.474162 ]]
Iteration 400 of 1000: loss=0.126 " + "l1=0" + "l2=0.126 f=-1.12 shape=(1, 9000, 1)
logits [[  3.2363343  -0.5784167   3.2373748 -10.391054 ]]
Iteration 500 of 1000: loss=0.113 " + "l1=0.00181" + "l2=0.111 f=-1.11 shape=(1, 9000, 1)
logits [[  3.230444    -0.59244907   3.224867   -10.317251  ]]
Iteration 600 of 1000: loss=0.102 " + "l1=0" + "l2=0.102 f=-1.1 shape=(1, 9000, 1)
logits [[  3.2093756  -0.6011993   3.2162876 -10.230106 ]]
Iteration 700 of 1000: loss=0.0916 " + "l1=0.00106" + "l2=0.0905 f=-1.09 shape=(1, 9000, 1)
logits [[  3.2086413   -0.61646456   3.2053668  -10.148149  ]]
Iteration 800 of 1000: loss=0.0826 " + "l1=0" + "l2=0.0826 f=-1.07 shape=(1, 9000, 1)
logits [[  3.1914291   -0.63300663   3.1978793  -10.054288  ]]
Iteration 900 of 1000: loss=0.0757 " + "l1=0.00199" + "l2=0.0737 f=-1.06 shape=(1, 9000, 1)
logits [[ 3.1971834  -0.65232724  3.1910655  -9.98403   ]]
--- 283.5226833820343 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.158 " + "l1=0.158" + "l2=0 f=-0.971 shape=(1, 9000, 1)
logits [[  4.877372   -0.9156662   3.0491636 -10.8934965]]
Iteration 100 of 1000: loss=0.157 " + "l1=0.157" + "l2=0.000424 f=-0.97 shape=(1, 9000, 1)
logits [[  4.818164   -0.8977694   3.0338995 -10.834289 ]]
Iteration 200 of 1000: loss=0.157 " + "l1=0.156" + "l2=0.000441 f=-0.97 shape=(1, 9000, 1)
logits [[  4.8059044  -0.8943301   3.0297241 -10.820338 ]]
Iteration 300 of 1000: loss=0.156 " + "l1=0.156" + "l2=0.000532 f=-0.969 shape=(1, 9000, 1)
logits [[  4.7910013   -0.89015245   3.0243225  -10.803132  ]]
Iteration 400 of 1000: loss=0.156 " + "l1=0.156" + "l2=0.000651 f=-0.969 shape=(1, 9000, 1)
logits [[  4.7761984  -0.8861224   3.0184598 -10.784822 ]]
Iteration 500 of 1000: loss=0.156 " + "l1=0.155" + "l2=0.000781 f=-0.969 shape=(1, 9000, 1)
logits [[  4.7609096   -0.88217217   3.0122888  -10.765291  ]]
Iteration 600 of 1000: loss=0.156 " + "l1=0.155" + "l2=0.000927 f=-0.968 shape=(1, 9000, 1)
logits [[  4.7457933  -0.8785017   3.0060403 -10.74486  ]]
Iteration 700 of 1000: loss=0.156 " + "l1=0.155" + "l2=0.00107 f=-0.967 shape=(1, 9000, 1)
logits [[  4.731196  -0.875327   2.999789 -10.724068]]
Iteration 800 of 1000: loss=0.155 " + "l1=0.154" + "l2=0.00129 f=-0.966 shape=(1, 9000, 1)
logits [[  4.7161765   -0.87216586   2.9932897  -10.7026    ]]
Iteration 900 of 1000: loss=0.155 " + "l1=0.154" + "l2=0.00139 f=-0.966 shape=(1, 9000, 1)
logits [[  4.7003465  -0.8688568   2.986619  -10.680178 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.58 " + "l1=1.58" + "l2=0 f=-0.971 shape=(1, 9000, 1)
logits [[  4.877372   -0.9156662   3.0491636 -10.8934965]]
Iteration 100 of 1000: loss=1.5 " + "l1=1.47" + "l2=0.0388 f=-0.976 shape=(1, 9000, 1)
logits [[  4.306504   -0.7660718   2.9094787 -10.353478 ]]
Iteration 200 of 1000: loss=1.46 " + "l1=1.4" + "l2=0.0597 f=-0.981 shape=(1, 9000, 1)
logits [[  3.9677005  -0.680589    2.8018699 -10.014597 ]]
Iteration 300 of 1000: loss=1.4 " + "l1=1.32" + "l2=0.0818 f=-0.98 shape=(1, 9000, 1)
logits [[ 3.586557   -0.60571736  2.6778407  -9.580465  ]]
Iteration 400 of 1000: loss=1.34 " + "l1=1.24" + "l2=0.0977 f=-0.959 shape=(1, 9000, 1)
logits [[ 3.2849889 -0.5676346  2.5824027 -9.134632 ]]
Iteration 500 of 1000: loss=1.28 " + "l1=1.16" + "l2=0.117 f=-0.933 shape=(1, 9000, 1)
logits [[ 2.9654038 -0.5392353  2.4879892 -8.646841 ]]
Iteration 600 of 1000: loss=1.22 " + "l1=1.09" + "l2=0.133 f=-0.902 shape=(1, 9000, 1)
logits [[ 2.685628  -0.5069993  2.395745  -8.183356 ]]
Iteration 700 of 1000: loss=1.16 " + "l1=1.01" + "l2=0.149 f=-0.883 shape=(1, 9000, 1)
logits [[ 2.3883672 -0.4753778  2.2807083 -7.723809 ]]
Iteration 800 of 1000: loss=1.09 " + "l1=0.933" + "l2=0.161 f=-0.863 shape=(1, 9000, 1)
logits [[ 2.0937219  -0.40391746  2.0953443  -7.2386107 ]]
Iteration 900 of 1000: loss=1.04 " + "l1=0.871" + "l2=0.167 f=-0.842 shape=(1, 9000, 1)
logits [[ 1.8963425  -0.34629363  1.8986256  -6.815837  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=15.8 " + "l1=15.8" + "l2=0 f=-0.971 shape=(1, 9000, 1)
logits [[  4.877372   -0.9156662   3.0491636 -10.8934965]]
Iteration 100 of 1000: loss=9.34 " + "l1=6.86" + "l2=2.48 f=-0.71 shape=(1, 9000, 1)
logits [[ 1.4182429 -0.2721693  1.4382684 -5.4258647]]
Iteration 200 of 1000: loss=5.91 " + "l1=1.48" + "l2=4.44 f=-0.429 shape=(1, 9000, 1)
logits [[-0.49502414 -0.29528934  0.27571282 -1.2011845 ]]
Iteration 300 of 1000: loss=3.93 " + "l1=0.0274" + "l2=3.9 f=-0.334 shape=(1, 9000, 1)
logits [[-0.9626868  -0.15257892 -0.09600197 -0.12341205]]
Iteration 400 of 1000: loss=3.22 " + "l1=0.0217" + "l2=3.19 f=-0.339 shape=(1, 9000, 1)
logits [[-0.9732789  -0.1816456  -0.08953097 -0.11127862]]
Iteration 500 of 1000: loss=2.72 " + "l1=0.0313" + "l2=2.69 f=-0.353 shape=(1, 9000, 1)
logits [[-0.9770624  -0.20795749 -0.09735493 -0.12870258]]
Iteration 600 of 1000: loss=2.38 " + "l1=0.031" + "l2=2.35 f=-0.36 shape=(1, 9000, 1)
logits [[-0.9726819  -0.22303016 -0.10622933 -0.13725844]]
Iteration 700 of 1000: loss=2.13 " + "l1=0.0142" + "l2=2.11 f=-0.36 shape=(1, 9000, 1)
logits [[-0.9814301  -0.20860644 -0.11704553 -0.13122201]]
Iteration 800 of 1000: loss=1.94 " + "l1=0.013" + "l2=1.93 f=-0.358 shape=(1, 9000, 1)
logits [[-0.9744006  -0.20255004 -0.12154976 -0.13454595]]
Iteration 900 of 1000: loss=1.79 " + "l1=0" + "l2=1.79 f=-0.356 shape=(1, 9000, 1)
logits [[-0.97775716 -0.1956187  -0.12806249 -0.12178484]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=8.67 " + "l1=8.67" + "l2=0 f=-0.971 shape=(1, 9000, 1)
logits [[  4.877372   -0.9156662   3.0491636 -10.8934965]]
Iteration 100 of 1000: loss=6.21 " + "l1=5.12" + "l2=1.09 f=-0.88 shape=(1, 9000, 1)
logits [[ 2.0284624 -0.3216337  2.0375545 -7.2654724]]
Iteration 200 of 1000: loss=5.1 " + "l1=3.82" + "l2=1.29 f=-0.721 shape=(1, 9000, 1)
logits [[ 1.4356304  -0.26632679  1.4459304  -5.4980392 ]]
Iteration 300 of 1000: loss=4.06 " + "l1=2.41" + "l2=1.65 f=-0.621 shape=(1, 9000, 1)
logits [[ 0.40610623 -0.05270483  0.77425814 -3.6124372 ]]
Iteration 400 of 1000: loss=3.08 " + "l1=1.06" + "l2=2.02 f=-0.515 shape=(1, 9000, 1)
logits [[-0.61428475  0.01352239  0.23457381 -1.6941676 ]]
Iteration 500 of 1000: loss=2.43 " + "l1=0.448" + "l2=1.98 f=-0.425 shape=(1, 9000, 1)
logits [[-0.84473455 -0.01748162 -0.0121313  -0.8275369 ]]
Iteration 600 of 1000: loss=1.9 " + "l1=0.0143" + "l2=1.88 f=-0.358 shape=(1, 9000, 1)
logits [[-0.8637076  -0.18984747 -0.17654137 -0.20248863]]
Iteration 700 of 1000: loss=1.65 " + "l1=0.027" + "l2=1.62 f=-0.366 shape=(1, 9000, 1)
logits [[-0.8306969  -0.19926207 -0.19226186 -0.24136394]]
Iteration 800 of 1000: loss=1.51 " + "l1=0" + "l2=1.51 f=-0.365 shape=(1, 9000, 1)
logits [[-0.81075823 -0.2260909  -0.21199554 -0.21069142]]
Iteration 900 of 1000: loss=1.41 " + "l1=0" + "l2=1.41 f=-0.36 shape=(1, 9000, 1)
logits [[-0.79411167 -0.22646473 -0.21213688 -0.20869929]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.13 " + "l1=5.13" + "l2=0 f=-0.971 shape=(1, 9000, 1)
logits [[  4.877372   -0.9156662   3.0491636 -10.8934965]]
Iteration 100 of 1000: loss=4.15 " + "l1=3.57" + "l2=0.572 f=-0.989 shape=(1, 9000, 1)
logits [[ 2.485461   -0.41050053  2.480729   -8.510444  ]]
Iteration 200 of 1000: loss=3.61 " + "l1=3.02" + "l2=0.591 f=-0.885 shape=(1, 9000, 1)
logits [[ 2.0294175 -0.3458784  2.0262861 -7.2504296]]
Iteration 300 of 1000: loss=3.19 " + "l1=2.52" + "l2=0.662 f=-0.788 shape=(1, 9000, 1)
logits [[ 1.6211666  -0.26464698  1.6268829  -6.136226  ]]
Iteration 400 of 1000: loss=2.76 " + "l1=2" + "l2=0.762 f=-0.716 shape=(1, 9000, 1)
logits [[ 1.0826427  -0.09487143  1.1443658  -4.9943695 ]]
Iteration 500 of 1000: loss=2.38 " + "l1=1.53" + "l2=0.849 f=-0.653 shape=(1, 9000, 1)
logits [[ 0.49087444  0.13793705  0.7344318  -3.9736354 ]]
Iteration 600 of 1000: loss=2.04 " + "l1=1.19" + "l2=0.853 f=-0.592 shape=(1, 9000, 1)
logits [[ 0.1403948   0.25129074  0.44677475 -3.2046137 ]]
Iteration 700 of 1000: loss=1.79 " + "l1=0.951" + "l2=0.842 f=-0.533 shape=(1, 9000, 1)
logits [[-0.02185679  0.26526535  0.2750263  -2.6496522 ]]
Iteration 800 of 1000: loss=1.58 " + "l1=0.752" + "l2=0.831 f=-0.467 shape=(1, 9000, 1)
logits [[ 0.00771967  0.12582165  0.15667044 -2.1580493 ]]
Iteration 900 of 1000: loss=1.43 " + "l1=0.598" + "l2=0.829 f=-0.429 shape=(1, 9000, 1)
logits [[-0.09709793  0.07283059  0.07307173 -1.7660131 ]]
--- 309.9358081817627 seconds ---
Adv result:3
Loading record A01824
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.088 " + "l1=0.088" + "l2=0 f=-0.581 shape=(1, 9000, 1)
logits [[  6.9277825  -1.8730296   3.0510871 -10.431368 ]]
Iteration 100 of 1000: loss=0.0874 " + "l1=0.087" + "l2=0.000449 f=-0.583 shape=(1, 9000, 1)
logits [[  6.8740826  -1.8221861   3.0130744 -10.395121 ]]
Iteration 200 of 1000: loss=0.0873 " + "l1=0.0868" + "l2=0.000486 f=-0.583 shape=(1, 9000, 1)
logits [[  6.866024   -1.8141327   3.007672  -10.391502 ]]
Iteration 300 of 1000: loss=0.0872 " + "l1=0.0866" + "l2=0.000586 f=-0.584 shape=(1, 9000, 1)
logits [[  6.8566236  -1.806206    3.0027368 -10.388226 ]]
Iteration 400 of 1000: loss=0.0871 " + "l1=0.0865" + "l2=0.000661 f=-0.585 shape=(1, 9000, 1)
logits [[  6.848285   -1.7999166   2.9990757 -10.385537 ]]
Iteration 500 of 1000: loss=0.0871 " + "l1=0.0864" + "l2=0.000743 f=-0.585 shape=(1, 9000, 1)
logits [[  6.841069  -1.794909   2.996312 -10.383408]]
Iteration 600 of 1000: loss=0.0871 " + "l1=0.0862" + "l2=0.000906 f=-0.586 shape=(1, 9000, 1)
logits [[  6.833972   -1.7901602   2.9937148 -10.38149  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.88 " + "l1=0.88" + "l2=0 f=-0.581 shape=(1, 9000, 1)
logits [[  6.9277825  -1.8730296   3.0510871 -10.431368 ]]
Iteration 100 of 1000: loss=0.825 " + "l1=0.793" + "l2=0.0324 f=-0.591 shape=(1, 9000, 1)
logits [[  6.4657516  -1.4636708   2.746348  -10.111307 ]]
Iteration 200 of 1000: loss=0.807 " + "l1=0.761" + "l2=0.0466 f=-0.599 shape=(1, 9000, 1)
logits [[  6.2807693  -1.327705    2.660988  -10.009567 ]]
Iteration 300 of 1000: loss=0.795 " + "l1=0.738" + "l2=0.0563 f=-0.605 shape=(1, 9000, 1)
logits [[ 6.144098  -1.2402402  2.605892  -9.930192 ]]
Iteration 400 of 1000: loss=0.784 " + "l1=0.721" + "l2=0.0629 f=-0.611 shape=(1, 9000, 1)
logits [[ 6.0337267 -1.1771321  2.5675554 -9.868683 ]]
Iteration 500 of 1000: loss=0.773 " + "l1=0.706" + "l2=0.0675 f=-0.618 shape=(1, 9000, 1)
logits [[ 5.932148  -1.1229309  2.5320654 -9.811831 ]]
Iteration 600 of 1000: loss=0.761 " + "l1=0.69" + "l2=0.0717 f=-0.624 shape=(1, 9000, 1)
logits [[ 5.824234  -1.0727422  2.4999971 -9.746673 ]]
Iteration 700 of 1000: loss=0.749 " + "l1=0.673" + "l2=0.0761 f=-0.63 shape=(1, 9000, 1)
logits [[ 5.708291  -1.0216414  2.4624996 -9.670307 ]]
Iteration 800 of 1000: loss=0.736 " + "l1=0.656" + "l2=0.0801 f=-0.639 shape=(1, 9000, 1)
logits [[ 5.5828404 -0.9735966  2.4170651 -9.58176  ]]
Iteration 900 of 1000: loss=0.722 " + "l1=0.638" + "l2=0.0841 f=-0.646 shape=(1, 9000, 1)
logits [[ 5.4500723  -0.92680174  2.3708446  -9.478255  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.8 " + "l1=8.8" + "l2=0 f=-0.581 shape=(1, 9000, 1)
logits [[  6.9277825  -1.8730296   3.0510871 -10.431368 ]]
Iteration 100 of 1000: loss=3.29 " + "l1=0.0291" + "l2=3.26 f=-0.808 shape=(1, 9000, 1)
logits [[ 1.1085935  1.0794958  1.0939788 -6.515191 ]]
Iteration 200 of 1000: loss=2.69 " + "l1=0.00351" + "l2=2.69 f=-0.822 shape=(1, 9000, 1)
logits [[ 1.1330949  1.1295841  1.1323818 -6.6847215]]
Iteration 300 of 1000: loss=2.5 " + "l1=0.0461" + "l2=2.46 f=-0.821 shape=(1, 9000, 1)
logits [[ 1.1446562  1.0985609  1.115864  -6.6442804]]
Iteration 400 of 1000: loss=2.34 " + "l1=0" + "l2=2.34 f=-0.819 shape=(1, 9000, 1)
logits [[ 1.0650443  1.0773491  1.076903  -6.4954047]]
Iteration 500 of 1000: loss=2.24 " + "l1=0.0126" + "l2=2.23 f=-0.813 shape=(1, 9000, 1)
logits [[ 1.059605   1.0470309  1.0421411 -6.399907 ]]
Iteration 600 of 1000: loss=2.14 " + "l1=0" + "l2=2.14 f=-0.81 shape=(1, 9000, 1)
logits [[ 1.0193985  1.0295777  1.02336   -6.313492 ]]
Iteration 700 of 1000: loss=2.05 " + "l1=0" + "l2=2.05 f=-0.804 shape=(1, 9000, 1)
logits [[ 0.9852617  1.0168855  0.9996522 -6.2165513]]
Iteration 800 of 1000: loss=1.95 " + "l1=0.0152" + "l2=1.94 f=-0.795 shape=(1, 9000, 1)
logits [[ 1.0028054   0.98758906  0.99583364 -6.1651955 ]]
Iteration 900 of 1000: loss=1.87 " + "l1=0.00374" + "l2=1.87 f=-0.792 shape=(1, 9000, 1)
logits [[ 0.947699    0.98326474  0.98700756 -6.0849032 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.84 " + "l1=4.84" + "l2=0 f=-0.581 shape=(1, 9000, 1)
logits [[  6.9277825  -1.8730296   3.0510871 -10.431368 ]]
Iteration 100 of 1000: loss=3.2 " + "l1=2.07" + "l2=1.12 f=-0.667 shape=(1, 9000, 1)
logits [[ 3.7797093   0.00843421  1.6444955  -8.0992775 ]]
Iteration 200 of 1000: loss=2.52 " + "l1=0.72" + "l2=1.8 f=-0.761 shape=(1, 9000, 1)
logits [[ 2.0013137   0.69198483  1.3118378  -7.051054  ]]
Iteration 300 of 1000: loss=2.03 " + "l1=0.0798" + "l2=1.95 f=-0.804 shape=(1, 9000, 1)
logits [[ 1.1066946  0.9674489  1.1125996 -6.4017806]]
Iteration 400 of 1000: loss=1.74 " + "l1=0.00126" + "l2=1.74 f=-0.785 shape=(1, 9000, 1)
logits [[ 0.97195673  0.9696705   0.9704815  -6.0513763 ]]
Iteration 500 of 1000: loss=1.55 " + "l1=0.0125" + "l2=1.54 f=-0.757 shape=(1, 9000, 1)
logits [[ 0.933046   0.9103903  0.9173234 -5.7870474]]
Iteration 600 of 1000: loss=1.43 " + "l1=0.00226" + "l2=1.43 f=-0.726 shape=(1, 9000, 1)
logits [[ 0.8551766   0.86147696  0.86557746 -5.486888  ]]
Iteration 700 of 1000: loss=1.32 " + "l1=5.08e-05" + "l2=1.32 f=-0.693 shape=(1, 9000, 1)
logits [[ 0.8042593   0.81298095  0.8130733  -5.202304  ]]
Iteration 800 of 1000: loss=1.23 " + "l1=0" + "l2=1.23 f=-0.668 shape=(1, 9000, 1)
logits [[ 0.75350267  0.76707137  0.75924313 -4.950142  ]]
Iteration 900 of 1000: loss=1.12 " + "l1=0.0162" + "l2=1.1 f=-0.638 shape=(1, 9000, 1)
logits [[ 0.7251731  0.6956881  0.7131131 -4.6842585]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.86 " + "l1=2.86" + "l2=0 f=-0.581 shape=(1, 9000, 1)
logits [[  6.9277825  -1.8730296   3.0510871 -10.431368 ]]
Iteration 100 of 1000: loss=2.29 " + "l1=1.95" + "l2=0.343 f=-0.618 shape=(1, 9000, 1)
logits [[ 5.2905693 -0.7098329  2.190662  -9.244136 ]]
Iteration 200 of 1000: loss=2.08 " + "l1=1.56" + "l2=0.523 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.481437  -0.3212671  1.878926  -8.657576 ]]
Iteration 300 of 1000: loss=1.9 " + "l1=1.27" + "l2=0.633 f=-0.686 shape=(1, 9000, 1)
logits [[ 3.8258092  -0.06869567  1.6906427  -8.190903  ]]
Iteration 400 of 1000: loss=1.71 " + "l1=0.972" + "l2=0.737 f=-0.714 shape=(1, 9000, 1)
logits [[ 3.149755    0.15787251  1.5059435  -7.6713142 ]]
Iteration 500 of 1000: loss=1.5 " + "l1=0.648" + "l2=0.855 f=-0.727 shape=(1, 9000, 1)
logits [[ 2.4006565   0.40532985  1.2969207  -7.0121107 ]]
Iteration 600 of 1000: loss=1.27 " + "l1=0.321" + "l2=0.949 f=-0.721 shape=(1, 9000, 1)
logits [[ 1.5883608  0.5993677  1.0963595 -6.168095 ]]
Iteration 700 of 1000: loss=1.02 " + "l1=0.0977" + "l2=0.92 f=-0.707 shape=(1, 9000, 1)
logits [[ 0.962112    0.66143644  0.9482752  -5.3987174 ]]
Iteration 800 of 1000: loss=0.921 " + "l1=0.0785" + "l2=0.843 f=-0.68 shape=(1, 9000, 1)
logits [[ 0.851599    0.62634826  0.8678774  -5.0645013 ]]
Iteration 900 of 1000: loss=0.85 " + "l1=0.0715" + "l2=0.778 f=-0.652 shape=(1, 9000, 1)
logits [[ 0.81268    0.5926341  0.8052522 -4.819251 ]]
--- 284.686181306839 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0388 " + "l1=0.0388" + "l2=0 f=-0.581 shape=(1, 9000, 1)
logits [[  6.9277825  -1.8730296   3.0510871 -10.431368 ]]
Iteration 100 of 1000: loss=0.0386 " + "l1=0.0384" + "l2=0.000187 f=-0.584 shape=(1, 9000, 1)
logits [[  6.9059644  -1.8785151   3.065458  -10.427983 ]]
Iteration 200 of 1000: loss=0.0385 " + "l1=0.0384" + "l2=0.000154 f=-0.584 shape=(1, 9000, 1)
logits [[  6.9047213  -1.8774881   3.0655265 -10.428232 ]]
Iteration 300 of 1000: loss=0.0385 " + "l1=0.0383" + "l2=0.000182 f=-0.584 shape=(1, 9000, 1)
logits [[  6.901579   -1.8767742   3.0666437 -10.428    ]]
Iteration 400 of 1000: loss=0.0385 " + "l1=0.0383" + "l2=0.000217 f=-0.584 shape=(1, 9000, 1)
logits [[  6.8982224  -1.8760034   3.0677772 -10.427666 ]]
Iteration 500 of 1000: loss=0.0385 " + "l1=0.0383" + "l2=0.000274 f=-0.585 shape=(1, 9000, 1)
logits [[  6.894763   -1.8752122   3.0688882 -10.427229 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.388 " + "l1=0.388" + "l2=0 f=-0.581 shape=(1, 9000, 1)
logits [[  6.9277825  -1.8730296   3.0510871 -10.431368 ]]
Iteration 100 of 1000: loss=0.371 " + "l1=0.361" + "l2=0.0103 f=-0.602 shape=(1, 9000, 1)
logits [[  6.761399  -1.918071   3.154339 -10.405094]]
Iteration 200 of 1000: loss=0.366 " + "l1=0.352" + "l2=0.0136 f=-0.61 shape=(1, 9000, 1)
logits [[  6.7026277  -1.9233023   3.182932  -10.404069 ]]
Iteration 300 of 1000: loss=0.361 " + "l1=0.344" + "l2=0.0165 f=-0.618 shape=(1, 9000, 1)
logits [[  6.648169   -1.9227206   3.2035835 -10.40022  ]]
Iteration 400 of 1000: loss=0.357 " + "l1=0.338" + "l2=0.0186 f=-0.623 shape=(1, 9000, 1)
logits [[  6.599321   -1.9182439   3.219808  -10.393044 ]]
Iteration 500 of 1000: loss=0.352 " + "l1=0.331" + "l2=0.0212 f=-0.629 shape=(1, 9000, 1)
logits [[  6.5451922  -1.910991    3.2346308 -10.385852 ]]
Iteration 600 of 1000: loss=0.348 " + "l1=0.325" + "l2=0.0228 f=-0.634 shape=(1, 9000, 1)
logits [[  6.4970155  -1.9013542   3.243334  -10.375884 ]]
Iteration 700 of 1000: loss=0.344 " + "l1=0.32" + "l2=0.0241 f=-0.64 shape=(1, 9000, 1)
logits [[  6.4491487  -1.8957847   3.2494504 -10.362638 ]]
Iteration 800 of 1000: loss=0.34 " + "l1=0.314" + "l2=0.0256 f=-0.645 shape=(1, 9000, 1)
logits [[  6.3971334  -1.8880063   3.2529025 -10.341626 ]]
Iteration 900 of 1000: loss=0.336 " + "l1=0.309" + "l2=0.0266 f=-0.649 shape=(1, 9000, 1)
logits [[  6.3465614  -1.8791444   3.2523928 -10.3165655]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.88 " + "l1=3.88" + "l2=0 f=-0.581 shape=(1, 9000, 1)
logits [[  6.9277825  -1.8730296   3.0510871 -10.431368 ]]
Iteration 100 of 1000: loss=1.88 " + "l1=0.448" + "l2=1.43 f=-0.842 shape=(1, 9000, 1)
logits [[ 4.372444  -2.5967913  3.9247646 -9.067833 ]]
Iteration 200 of 1000: loss=1.31 " + "l1=0.0216" + "l2=1.29 f=-0.891 shape=(1, 9000, 1)
logits [[ 3.89543   -2.3695807  3.8737974 -8.964274 ]]
Iteration 300 of 1000: loss=1.13 " + "l1=0.0298" + "l2=1.1 f=-0.891 shape=(1, 9000, 1)
logits [[ 3.8724258 -2.3378022  3.8426228 -8.942273 ]]
Iteration 400 of 1000: loss=1.03 " + "l1=0.0169" + "l2=1.02 f=-0.889 shape=(1, 9000, 1)
logits [[ 3.818708  -2.3168323  3.8018289 -8.859626 ]]
Iteration 500 of 1000: loss=0.974 " + "l1=0.0143" + "l2=0.96 f=-0.886 shape=(1, 9000, 1)
logits [[ 3.7773435 -2.2925777  3.7630155 -8.7909   ]]
Iteration 600 of 1000: loss=0.93 " + "l1=0.014" + "l2=0.916 f=-0.882 shape=(1, 9000, 1)
logits [[ 3.7429636 -2.2710063  3.7289863 -8.729056 ]]
Iteration 700 of 1000: loss=0.889 " + "l1=0.0155" + "l2=0.873 f=-0.877 shape=(1, 9000, 1)
logits [[ 3.711821  -2.258666   3.6962976 -8.659435 ]]
Iteration 800 of 1000: loss=0.849 " + "l1=0.0166" + "l2=0.832 f=-0.882 shape=(1, 9000, 1)
logits [[ 3.6347198 -2.1850111  3.618079  -8.594409 ]]
Iteration 900 of 1000: loss=0.781 " + "l1=0" + "l2=0.781 f=-0.886 shape=(1, 9000, 1)
logits [[ 3.5116987 -2.0751355  3.52667   -8.506418 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.13 " + "l1=2.13" + "l2=0 f=-0.581 shape=(1, 9000, 1)
logits [[  6.9277825  -1.8730296   3.0510871 -10.431368 ]]
Iteration 100 of 1000: loss=1.55 " + "l1=1.17" + "l2=0.381 f=-0.707 shape=(1, 9000, 1)
logits [[ 5.7396626 -2.2147994  3.6108377 -9.9623785]]
Iteration 200 of 1000: loss=1.31 " + "l1=0.807" + "l2=0.499 f=-0.77 shape=(1, 9000, 1)
logits [[ 5.091514  -2.2549458  3.6250153 -9.542059 ]]
Iteration 300 of 1000: loss=1.1 " + "l1=0.452" + "l2=0.649 f=-0.831 shape=(1, 9000, 1)
logits [[ 4.478665  -2.2839236  3.656042  -9.17602  ]]
Iteration 400 of 1000: loss=0.906 " + "l1=0.105" + "l2=0.801 f=-0.902 shape=(1, 9000, 1)
logits [[ 3.7835915 -2.1793966  3.592037  -8.803754 ]]
Iteration 500 of 1000: loss=0.725 " + "l1=0.00752" + "l2=0.717 f=-0.904 shape=(1, 9000, 1)
logits [[ 3.5057838 -2.0661666  3.492105  -8.547079 ]]
Iteration 600 of 1000: loss=0.609 " + "l1=0.00709" + "l2=0.602 f=-0.889 shape=(1, 9000, 1)
logits [[ 3.4495752 -2.0288951  3.4366863 -8.41137  ]]
Iteration 700 of 1000: loss=0.498 " + "l1=0.00518" + "l2=0.492 f=-0.861 shape=(1, 9000, 1)
logits [[ 3.3954096 -2.024494   3.3859932 -8.202584 ]]
Iteration 800 of 1000: loss=0.43 " + "l1=0" + "l2=0.43 f=-0.842 shape=(1, 9000, 1)
logits [[ 3.3080835 -1.9885119  3.3169296 -8.003755 ]]
Iteration 900 of 1000: loss=0.383 " + "l1=0.00693" + "l2=0.376 f=-0.816 shape=(1, 9000, 1)
logits [[ 3.2419534 -1.9144161  3.2293475 -7.822037 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.26 " + "l1=1.26" + "l2=0 f=-0.581 shape=(1, 9000, 1)
logits [[  6.9277825  -1.8730296   3.0510871 -10.431368 ]]
Iteration 100 of 1000: loss=1.06 " + "l1=0.931" + "l2=0.133 f=-0.656 shape=(1, 9000, 1)
logits [[  6.2779756  -2.0507627   3.412555  -10.263102 ]]
Iteration 200 of 1000: loss=0.987 " + "l1=0.811" + "l2=0.177 f=-0.684 shape=(1, 9000, 1)
logits [[  6.013761   -2.1045895   3.5199115 -10.166707 ]]
Iteration 300 of 1000: loss=0.915 " + "l1=0.684" + "l2=0.231 f=-0.716 shape=(1, 9000, 1)
logits [[ 5.684643  -2.153559   3.5786664 -9.972671 ]]
Iteration 400 of 1000: loss=0.854 " + "l1=0.593" + "l2=0.26 f=-0.742 shape=(1, 9000, 1)
logits [[ 5.3694105 -2.1190422  3.543381  -9.761203 ]]
Iteration 500 of 1000: loss=0.803 " + "l1=0.53" + "l2=0.273 f=-0.763 shape=(1, 9000, 1)
logits [[ 5.141304  -2.0811088  3.5101175 -9.621254 ]]
Iteration 600 of 1000: loss=0.76 " + "l1=0.481" + "l2=0.279 f=-0.775 shape=(1, 9000, 1)
logits [[ 4.939368 -2.034937  3.459968 -9.46544 ]]
Iteration 700 of 1000: loss=0.707 " + "l1=0.414" + "l2=0.293 f=-0.789 shape=(1, 9000, 1)
logits [[ 4.671705  -2.0174685  3.3992007 -9.210464 ]]
Iteration 800 of 1000: loss=0.646 " + "l1=0.344" + "l2=0.302 f=-0.794 shape=(1, 9000, 1)
logits [[ 4.4255795 -2.0610573  3.365748  -8.905195 ]]
Iteration 900 of 1000: loss=0.588 " + "l1=0.262" + "l2=0.326 f=-0.789 shape=(1, 9000, 1)
logits [[ 4.1558204 -2.1308622  3.3500247 -8.529202 ]]
--- 279.4091811180115 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.174 " + "l1=0.174" + "l2=0 f=-0.581 shape=(1, 9000, 1)
logits [[  6.9277825  -1.8730296   3.0510871 -10.431368 ]]
Iteration 100 of 1000: loss=0.173 " + "l1=0.172" + "l2=0.00054 f=-0.578 shape=(1, 9000, 1)
logits [[  6.872804   -1.8406773   3.0175192 -10.363459 ]]
Iteration 200 of 1000: loss=0.173 " + "l1=0.172" + "l2=0.00058 f=-0.578 shape=(1, 9000, 1)
logits [[  6.8649163  -1.8356833   3.0126176 -10.355161 ]]
Iteration 300 of 1000: loss=0.173 " + "l1=0.172" + "l2=0.000665 f=-0.578 shape=(1, 9000, 1)
logits [[  6.8562636  -1.8310704   3.0079553 -10.345698 ]]
Iteration 400 of 1000: loss=0.173 " + "l1=0.172" + "l2=0.000787 f=-0.578 shape=(1, 9000, 1)
logits [[  6.848502   -1.8274657   3.004199  -10.337372 ]]
Iteration 500 of 1000: loss=0.173 " + "l1=0.172" + "l2=0.000884 f=-0.578 shape=(1, 9000, 1)
logits [[  6.8412766  -1.8245444   3.0011656 -10.329794 ]]
Iteration 600 of 1000: loss=0.173 " + "l1=0.172" + "l2=0.000954 f=-0.578 shape=(1, 9000, 1)
logits [[  6.8346176  -1.8222935   2.9988666 -10.322953 ]]
Iteration 700 of 1000: loss=0.172 " + "l1=0.171" + "l2=0.00103 f=-0.578 shape=(1, 9000, 1)
logits [[  6.8281884  -1.8203062   2.9968946 -10.316676 ]]
Iteration 800 of 1000: loss=0.173 " + "l1=0.171" + "l2=0.00124 f=-0.578 shape=(1, 9000, 1)
logits [[  6.821578   -1.8184279   2.995221  -10.310565 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.74 " + "l1=1.74" + "l2=0 f=-0.581 shape=(1, 9000, 1)
logits [[  6.9277825  -1.8730296   3.0510871 -10.431368 ]]
Iteration 100 of 1000: loss=1.67 " + "l1=1.62" + "l2=0.0504 f=-0.548 shape=(1, 9000, 1)
logits [[ 6.4037614 -1.590477   2.7437792 -9.750982 ]]
Iteration 200 of 1000: loss=1.64 " + "l1=1.57" + "l2=0.0711 f=-0.539 shape=(1, 9000, 1)
logits [[ 6.195968  -1.483703   2.6339195 -9.502879 ]]
Iteration 300 of 1000: loss=1.62 " + "l1=1.53" + "l2=0.0897 f=-0.536 shape=(1, 9000, 1)
logits [[ 6.0205135 -1.4165868  2.5480218 -9.29624  ]]
Iteration 400 of 1000: loss=1.6 " + "l1=1.5" + "l2=0.103 f=-0.536 shape=(1, 9000, 1)
logits [[ 5.8754425 -1.3701575  2.4817722 -9.130666 ]]
Iteration 500 of 1000: loss=1.58 " + "l1=1.47" + "l2=0.117 f=-0.542 shape=(1, 9000, 1)
logits [[ 5.7056947 -1.3236334  2.4134488 -8.961618 ]]
Iteration 600 of 1000: loss=1.56 " + "l1=1.43" + "l2=0.131 f=-0.545 shape=(1, 9000, 1)
logits [[ 5.523093  -1.2817723  2.3479996 -8.768776 ]]
Iteration 700 of 1000: loss=1.53 " + "l1=1.39" + "l2=0.143 f=-0.549 shape=(1, 9000, 1)
logits [[ 5.341072  -1.235222   2.2788463 -8.581633 ]]
Iteration 800 of 1000: loss=1.51 " + "l1=1.35" + "l2=0.154 f=-0.552 shape=(1, 9000, 1)
logits [[ 5.144408  -1.1821216  2.203132  -8.372091 ]]
Iteration 900 of 1000: loss=1.47 " + "l1=1.31" + "l2=0.167 f=-0.549 shape=(1, 9000, 1)
logits [[ 4.935049  -1.1305032  2.1244657 -8.12573  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=17.4 " + "l1=17.4" + "l2=0 f=-0.581 shape=(1, 9000, 1)
logits [[  6.9277825  -1.8730296   3.0510871 -10.431368 ]]
Iteration 100 of 1000: loss=8.23 " + "l1=2.89" + "l2=5.34 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.37419602  0.3143823   0.36283213 -2.5129702 ]]
Iteration 200 of 1000: loss=6.67 " + "l1=1.39" + "l2=5.28 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.06023166  0.10659938  0.09328971 -1.2880728 ]]
Iteration 300 of 1000: loss=5.88 " + "l1=0.751" + "l2=5.13 f=-0.203 shape=(1, 9000, 1)
logits [[-0.01698403 -0.01682738 -0.01434898 -0.76516867]]
Iteration 400 of 1000: loss=5.3 " + "l1=0.253" + "l2=5.05 f=-0.158 shape=(1, 9000, 1)
logits [[-0.09253956 -0.10108071 -0.0916628  -0.34488106]]
Iteration 500 of 1000: loss=4.74 " + "l1=0.0364" + "l2=4.71 f=-0.126 shape=(1, 9000, 1)
logits [[-0.11574832 -0.14167325 -0.10457813 -0.14098692]]
Iteration 600 of 1000: loss=4.21 " + "l1=0.00853" + "l2=4.2 f=-0.129 shape=(1, 9000, 1)
logits [[-0.15450019 -0.11297659 -0.12776127 -0.12151098]]
Iteration 700 of 1000: loss=3.66 " + "l1=0.0191" + "l2=3.64 f=-0.15 shape=(1, 9000, 1)
logits [[-0.15499002 -0.14567703 -0.14041476 -0.15948117]]
Iteration 800 of 1000: loss=3.33 " + "l1=0.0232" + "l2=3.3 f=-0.158 shape=(1, 9000, 1)
logits [[-0.18998384 -0.16702601 -0.1268588  -0.15007299]]
Iteration 900 of 1000: loss=3.12 " + "l1=0" + "l2=3.12 f=-0.153 shape=(1, 9000, 1)
logits [[-0.1728467  -0.19448724 -0.15452877 -0.09157077]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=9.55 " + "l1=9.55" + "l2=0 f=-0.581 shape=(1, 9000, 1)
logits [[  6.9277825  -1.8730296   3.0510871 -10.431368 ]]
Iteration 100 of 1000: loss=6.78 " + "l1=4.57" + "l2=2.2 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.7805116 -0.4033985  1.3143896 -5.53566  ]]
Iteration 200 of 1000: loss=5.71 " + "l1=2.56" + "l2=3.15 f=-0.48 shape=(1, 9000, 1)
logits [[ 0.9133632   0.03358055  0.87593764 -3.7431839 ]]
Iteration 300 of 1000: loss=4.84 " + "l1=1.88" + "l2=2.96 f=-0.407 shape=(1, 9000, 1)
logits [[ 0.57936573  0.05876503  0.57736504 -2.842712  ]]
Iteration 400 of 1000: loss=4.19 " + "l1=1.25" + "l2=2.94 f=-0.328 shape=(1, 9000, 1)
logits [[ 0.29931745  0.04533631  0.3114783  -1.9695095 ]]
Iteration 500 of 1000: loss=3.6 " + "l1=0.748" + "l2=2.86 f=-0.245 shape=(1, 9000, 1)
logits [[ 0.11892176  0.02583252  0.11695089 -1.2417579 ]]
Iteration 600 of 1000: loss=3.15 " + "l1=0.463" + "l2=2.69 f=-0.208 shape=(1, 9000, 1)
logits [[ 0.04265262 -0.12437775  0.04544088 -0.79547787]]
Iteration 700 of 1000: loss=2.79 " + "l1=0.212" + "l2=2.57 f=-0.166 shape=(1, 9000, 1)
logits [[ 0.0003895  -0.30090895  0.01034404 -0.37421826]]
Iteration 800 of 1000: loss=2.42 " + "l1=0" + "l2=2.42 f=-0.135 shape=(1, 9000, 1)
logits [[-0.06628313 -0.3856371  -0.04820648 -0.04109813]]
Iteration 900 of 1000: loss=2.14 " + "l1=0.0177" + "l2=2.12 f=-0.13 shape=(1, 9000, 1)
logits [[-0.01254801 -0.4464561  -0.01494694 -0.04476105]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.64 " + "l1=5.64" + "l2=0 f=-0.581 shape=(1, 9000, 1)
logits [[  6.9277825  -1.8730296   3.0510871 -10.431368 ]]
Iteration 100 of 1000: loss=4.74 " + "l1=4.05" + "l2=0.693 f=-0.48 shape=(1, 9000, 1)
logits [[ 4.7738256 -1.0311782  2.0201087 -7.682191 ]]
Iteration 200 of 1000: loss=4.34 " + "l1=3.36" + "l2=0.983 f=-0.483 shape=(1, 9000, 1)
logits [[ 3.7373862  -0.63068926  1.5545292  -6.5941267 ]]
Iteration 300 of 1000: loss=4 " + "l1=2.88" + "l2=1.13 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.039493   -0.48115274  1.302336   -5.8085213 ]]
Iteration 400 of 1000: loss=3.54 " + "l1=2.08" + "l2=1.46 f=-0.485 shape=(1, 9000, 1)
logits [[ 1.8735774  -0.29409763  0.9978469  -4.517803  ]]
Iteration 500 of 1000: loss=2.86 " + "l1=1.27" + "l2=1.59 f=-0.469 shape=(1, 9000, 1)
logits [[ 0.7550321  -0.22571273  0.7585576  -3.162993  ]]
Iteration 600 of 1000: loss=2.33 " + "l1=0.883" + "l2=1.45 f=-0.381 shape=(1, 9000, 1)
logits [[ 0.49126402 -0.2958004   0.4979293  -2.2186313 ]]
Iteration 700 of 1000: loss=1.92 " + "l1=0.573" + "l2=1.34 f=-0.336 shape=(1, 9000, 1)
logits [[ 0.21054697 -0.24092613  0.22536898 -1.538852  ]]
Iteration 800 of 1000: loss=1.61 " + "l1=0.288" + "l2=1.32 f=-0.328 shape=(1, 9000, 1)
logits [[-0.12372613 -0.1827964  -0.05985051 -0.9455955 ]]
Iteration 900 of 1000: loss=1.38 " + "l1=0.112" + "l2=1.27 f=-0.333 shape=(1, 9000, 1)
logits [[-0.39875197 -0.20946172 -0.18835671 -0.5335296 ]]
--- 300.17956590652466 seconds ---
Adv result:3
Loading record A01828
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0471 " + "l1=0.0471" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.6422334 -2.0644538  2.4581451 -5.0976286]]
Iteration 100 of 1000: loss=0.047 " + "l1=0.0468" + "l2=0.000129 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.6283097 -2.0560958  2.4557738 -5.0876527]]
Iteration 200 of 1000: loss=0.0469 " + "l1=0.0468" + "l2=0.000106 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.6282167 -2.0557616  2.455477  -5.08784  ]]
Iteration 300 of 1000: loss=0.0469 " + "l1=0.0468" + "l2=0.000127 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.6269586 -2.054808   2.4550598 -5.0872016]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.471 " + "l1=0.471" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.6422334 -2.0644538  2.4581451 -5.0976286]]
Iteration 100 of 1000: loss=0.461 " + "l1=0.455" + "l2=0.00602 f=-0.512 shape=(1, 9000, 1)
logits [[ 2.5428786 -2.0033457  2.4410958 -5.029903 ]]
Iteration 200 of 1000: loss=0.457 " + "l1=0.449" + "l2=0.00824 f=-0.512 shape=(1, 9000, 1)
logits [[ 2.5104532 -1.9802582  2.4325814 -5.0099316]]
Iteration 300 of 1000: loss=0.455 " + "l1=0.445" + "l2=0.0101 f=-0.511 shape=(1, 9000, 1)
logits [[ 2.4853795 -1.9612906  2.4250717 -4.994924 ]]
Iteration 400 of 1000: loss=0.452 " + "l1=0.441" + "l2=0.0116 f=-0.511 shape=(1, 9000, 1)
logits [[ 2.4643826 -1.9445074  2.4185815 -4.983357 ]]
Iteration 500 of 1000: loss=0.451 " + "l1=0.438" + "l2=0.0129 f=-0.511 shape=(1, 9000, 1)
logits [[ 2.446568  -1.9305049  2.414478  -4.9748464]]
Iteration 600 of 1000: loss=0.449 " + "l1=0.434" + "l2=0.0144 f=-0.511 shape=(1, 9000, 1)
logits [[ 2.4272199 -1.9153628  2.4103203 -4.9672294]]
Iteration 700 of 1000: loss=0.447 " + "l1=0.431" + "l2=0.0156 f=-0.511 shape=(1, 9000, 1)
logits [[ 2.4089317 -1.9019245  2.406806  -4.959435 ]]
Iteration 800 of 1000: loss=0.445 " + "l1=0.429" + "l2=0.0159 f=-0.511 shape=(1, 9000, 1)
logits [[ 2.4003842 -1.8897405  2.4006357 -4.957163 ]]
Iteration 900 of 1000: loss=0.443 " + "l1=0.427" + "l2=0.0158 f=-0.512 shape=(1, 9000, 1)
logits [[ 2.3946493 -1.8790823  2.3941905 -4.956335 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.71 " + "l1=4.71" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.6422334 -2.0644538  2.4581451 -5.0976286]]
Iteration 100 of 1000: loss=4.06 " + "l1=3.78" + "l2=0.275 f=-0.494 shape=(1, 9000, 1)
logits [[ 2.1913712 -1.583082   2.1983995 -4.7829986]]
Iteration 200 of 1000: loss=3.83 " + "l1=3.47" + "l2=0.365 f=-0.486 shape=(1, 9000, 1)
logits [[ 2.0808814 -1.3831855  2.0870302 -4.7278266]]
Iteration 300 of 1000: loss=3.67 " + "l1=3.22" + "l2=0.451 f=-0.477 shape=(1, 9000, 1)
logits [[ 1.9825301 -1.2299548  1.9870851 -4.6465683]]
Iteration 400 of 1000: loss=3.51 " + "l1=2.98" + "l2=0.525 f=-0.486 shape=(1, 9000, 1)
logits [[ 1.8798699 -1.096022   1.8888316 -4.6174297]]
Iteration 500 of 1000: loss=3.42 " + "l1=2.85" + "l2=0.566 f=-0.493 shape=(1, 9000, 1)
logits [[ 1.8125101 -1.023853   1.82646   -4.588678 ]]
Iteration 600 of 1000: loss=3.35 " + "l1=2.76" + "l2=0.589 f=-0.5 shape=(1, 9000, 1)
logits [[ 1.7632779 -0.9833607  1.7809316 -4.5598598]]
Iteration 700 of 1000: loss=3.3 " + "l1=2.69" + "l2=0.607 f=-0.507 shape=(1, 9000, 1)
logits [[ 1.7206892  -0.95223933  1.7401774  -4.534718  ]]
Iteration 800 of 1000: loss=3.24 " + "l1=2.63" + "l2=0.614 f=-0.521 shape=(1, 9000, 1)
logits [[ 1.6802087  -0.92701036  1.7012768  -4.5376496 ]]
Iteration 900 of 1000: loss=3.2 " + "l1=2.56" + "l2=0.637 f=-0.525 shape=(1, 9000, 1)
logits [[ 1.6300935 -0.8988411  1.6613325 -4.4945116]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=47.1 " + "l1=47.1" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.6422334 -2.0644538  2.4581451 -5.0976286]]
Iteration 100 of 1000: loss=20 " + "l1=9.2" + "l2=10.8 f=-0.543 shape=(1, 9000, 1)
logits [[ 0.62317723  0.04311977  0.96328264 -3.7998765 ]]
Iteration 200 of 1000: loss=10.8 " + "l1=0" + "l2=10.8 f=-0.621 shape=(1, 9000, 1)
logits [[-0.08627332  0.62997466  0.6291996  -3.655896  ]]
Iteration 300 of 1000: loss=9.4 " + "l1=0" + "l2=9.4 f=-0.636 shape=(1, 9000, 1)
logits [[-0.10421783  0.63308156  0.619604   -3.6935997 ]]
Iteration 400 of 1000: loss=8.63 " + "l1=0" + "l2=8.63 f=-0.646 shape=(1, 9000, 1)
logits [[-0.1444776   0.6415506   0.62334365 -3.7053375 ]]
Iteration 500 of 1000: loss=8.1 " + "l1=0" + "l2=8.1 f=-0.655 shape=(1, 9000, 1)
logits [[-0.17960939  0.6387244   0.63238466 -3.71047   ]]
Iteration 600 of 1000: loss=7.73 " + "l1=0.0128" + "l2=7.72 f=-0.664 shape=(1, 9000, 1)
logits [[-0.21567893  0.6383403   0.6396169  -3.7185822 ]]
Iteration 700 of 1000: loss=7.45 " + "l1=0.0244" + "l2=7.43 f=-0.677 shape=(1, 9000, 1)
logits [[-0.25294173  0.639036    0.6414801  -3.7349718 ]]
Iteration 800 of 1000: loss=7.16 " + "l1=0" + "l2=7.16 f=-0.685 shape=(1, 9000, 1)
logits [[-0.2954325  0.6499334  0.6403305 -3.7367766]]
Iteration 900 of 1000: loss=6.9 " + "l1=0" + "l2=6.9 f=-0.687 shape=(1, 9000, 1)
logits [[-0.3161874  0.648239   0.6393569 -3.7197976]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=25.9 " + "l1=25.9" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.6422334 -2.0644538  2.4581451 -5.0976286]]
Iteration 100 of 1000: loss=15.2 " + "l1=10.8" + "l2=4.46 f=-0.49 shape=(1, 9000, 1)
logits [[ 1.4204452 -0.5253622  1.429783  -4.2834187]]
Iteration 200 of 1000: loss=10.9 " + "l1=4.43" + "l2=6.45 f=-0.622 shape=(1, 9000, 1)
logits [[ 0.4865869   0.1399502   0.94535726 -4.061752  ]]
Iteration 300 of 1000: loss=8.41 " + "l1=1.12" + "l2=7.29 f=-0.653 shape=(1, 9000, 1)
logits [[ 0.06179925  0.48054478  0.68432003 -3.8402483 ]]
Iteration 400 of 1000: loss=7.22 " + "l1=0.0951" + "l2=7.13 f=-0.661 shape=(1, 9000, 1)
logits [[-0.16061357  0.6015063   0.6187934  -3.7043855 ]]
Iteration 500 of 1000: loss=6.6 " + "l1=0" + "l2=6.6 f=-0.666 shape=(1, 9000, 1)
logits [[-0.25132248  0.60757375  0.60615206 -3.6248384 ]]
Iteration 600 of 1000: loss=6.26 " + "l1=0.0843" + "l2=6.18 f=-0.667 shape=(1, 9000, 1)
logits [[-0.25750056  0.59280366  0.6081367  -3.6103554 ]]
Iteration 700 of 1000: loss=6.02 " + "l1=0" + "l2=6.02 f=-0.667 shape=(1, 9000, 1)
logits [[-0.2927095  0.6049628  0.6026914 -3.5847738]]
Iteration 800 of 1000: loss=5.77 " + "l1=0.0532" + "l2=5.72 f=-0.663 shape=(1, 9000, 1)
logits [[-0.31922367  0.6144952   0.62416303 -3.5725777 ]]
Iteration 900 of 1000: loss=5.53 " + "l1=0.0156" + "l2=5.51 f=-0.661 shape=(1, 9000, 1)
logits [[-0.32963023  0.61822456  0.6210545  -3.5540943 ]]
--- 270.2446348667145 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00184 " + "l1=0.00184" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.6422334 -2.0644538  2.4581451 -5.0976286]]
Iteration 100 of 1000: loss=0.0018 " + "l1=0.0017" + "l2=9.89e-05 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.6305468 -2.0628514  2.460442  -5.088734 ]]
Iteration 200 of 1000: loss=0.00178 " + "l1=0.00171" + "l2=6.42e-05 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.6315882 -2.06284    2.4605029 -5.0900536]]
Iteration 300 of 1000: loss=0.00177 " + "l1=0.00171" + "l2=6.49e-05 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.6312633 -2.062697   2.4607606 -5.0902348]]
Iteration 400 of 1000: loss=0.00182 " + "l1=0.0017" + "l2=0.000126 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.6305695 -2.062511   2.461031  -5.090064 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0184 " + "l1=0.0184" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.6422334 -2.0644538  2.4581451 -5.0976286]]
Iteration 100 of 1000: loss=0.0132 " + "l1=0.00997" + "l2=0.00322 f=-0.514 shape=(1, 9000, 1)
logits [[ 2.5731091 -2.0522983  2.4734077 -5.051552 ]]
Iteration 200 of 1000: loss=0.0119 " + "l1=0.00768" + "l2=0.00418 f=-0.514 shape=(1, 9000, 1)
logits [[ 2.5552957 -2.0483818  2.4784658 -5.0420947]]
Iteration 300 of 1000: loss=0.0108 " + "l1=0.00596" + "l2=0.00487 f=-0.514 shape=(1, 9000, 1)
logits [[ 2.5415742 -2.0449953  2.4819474 -5.035858 ]]
Iteration 400 of 1000: loss=0.00992 " + "l1=0.00448" + "l2=0.00545 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.5292997 -2.041205   2.4845328 -5.031301 ]]
Iteration 500 of 1000: loss=0.00916 " + "l1=0.00305" + "l2=0.00611 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.51756   -2.037304   2.4870405 -5.027691 ]]
Iteration 600 of 1000: loss=0.00839 " + "l1=0.00167" + "l2=0.00672 f=-0.516 shape=(1, 9000, 1)
logits [[ 2.5063338 -2.0338297  2.4896107 -5.024851 ]]
Iteration 700 of 1000: loss=0.00765 " + "l1=0.000335" + "l2=0.00731 f=-0.516 shape=(1, 9000, 1)
logits [[ 2.4955583 -2.0308743  2.492211  -5.0214267]]
Iteration 800 of 1000: loss=0.00707 " + "l1=0.000101" + "l2=0.00697 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.4940352 -2.0301783  2.4930232 -5.0234275]]
Iteration 900 of 1000: loss=0.00673 " + "l1=8.99e-05" + "l2=0.00664 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.4942207 -2.0300996  2.4933221 -5.0261   ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0101 " + "l1=0.0101" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.6422334 -2.0644538  2.4581451 -5.0976286]]
Iteration 100 of 1000: loss=0.00847 " + "l1=0.00734" + "l2=0.00113 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.6006997 -2.0579515  2.4672596 -5.0684724]]
Iteration 200 of 1000: loss=0.0081 " + "l1=0.00678" + "l2=0.00132 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.5928342 -2.056151   2.4695203 -5.0643725]]
Iteration 300 of 1000: loss=0.00782 " + "l1=0.00632" + "l2=0.0015 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.5863822 -2.0543952  2.4715025 -5.061899 ]]
Iteration 400 of 1000: loss=0.00758 " + "l1=0.00588" + "l2=0.0017 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.5803351 -2.0526905  2.4733453 -5.0597224]]
Iteration 500 of 1000: loss=0.00738 " + "l1=0.0055" + "l2=0.00188 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.5748603 -2.0510538  2.4748907 -5.058021 ]]
Iteration 600 of 1000: loss=0.00724 " + "l1=0.00515" + "l2=0.00208 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.569948  -2.0497284  2.4762948 -5.0566196]]
Iteration 700 of 1000: loss=0.00716 " + "l1=0.00482" + "l2=0.00235 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.565144  -2.048362   2.4775703 -5.055448 ]]
Iteration 800 of 1000: loss=0.00701 " + "l1=0.00454" + "l2=0.00247 f=-0.516 shape=(1, 9000, 1)
logits [[ 2.561203  -2.0471635  2.4785922 -5.054933 ]]
Iteration 900 of 1000: loss=0.00697 " + "l1=0.00427" + "l2=0.0027 f=-0.516 shape=(1, 9000, 1)
logits [[ 2.5573206 -2.046049   2.4796424 -5.054578 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0143 " + "l1=0.0143" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.6422334 -2.0644538  2.4581451 -5.0976286]]
Iteration 100 of 1000: loss=0.0111 " + "l1=0.00906" + "l2=0.00201 f=-0.514 shape=(1, 9000, 1)
logits [[ 2.5870824 -2.0550382  2.4702168 -5.060247 ]]
Iteration 200 of 1000: loss=0.0103 " + "l1=0.00781" + "l2=0.0025 f=-0.514 shape=(1, 9000, 1)
logits [[ 2.5746212 -2.0522292  2.4738526 -5.053746 ]]
Iteration 300 of 1000: loss=0.00969 " + "l1=0.00674" + "l2=0.00295 f=-0.514 shape=(1, 9000, 1)
logits [[ 2.5638695 -2.049495   2.4769244 -5.048788 ]]
Iteration 400 of 1000: loss=0.00918 " + "l1=0.00588" + "l2=0.0033 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.5551054 -2.046956   2.4792202 -5.0454698]]
Iteration 500 of 1000: loss=0.00878 " + "l1=0.00509" + "l2=0.00369 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.5467687 -2.0444074  2.4810956 -5.042832 ]]
Iteration 600 of 1000: loss=0.00845 " + "l1=0.00438" + "l2=0.00407 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.5392199 -2.041959   2.4827132 -5.0409546]]
Iteration 700 of 1000: loss=0.00804 " + "l1=0.00364" + "l2=0.00439 f=-0.516 shape=(1, 9000, 1)
logits [[ 2.531553  -2.03968    2.4845443 -5.039558 ]]
Iteration 800 of 1000: loss=0.00769 " + "l1=0.00285" + "l2=0.00484 f=-0.516 shape=(1, 9000, 1)
logits [[ 2.523368  -2.0374792  2.4866397 -5.0376453]]
Iteration 900 of 1000: loss=0.00735 " + "l1=0.00217" + "l2=0.00519 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.5164645 -2.035637   2.4885285 -5.035921 ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0163 " + "l1=0.0163" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.6422334 -2.0644538  2.4581451 -5.0976286]]
Iteration 100 of 1000: loss=0.0122 " + "l1=0.00962" + "l2=0.00258 f=-0.514 shape=(1, 9000, 1)
logits [[ 2.5801265 -2.0535607  2.4717577 -5.055846 ]]
Iteration 200 of 1000: loss=0.0112 " + "l1=0.0079" + "l2=0.00328 f=-0.514 shape=(1, 9000, 1)
logits [[ 2.5650842 -2.0503104  2.4760888 -5.0478525]]
Iteration 300 of 1000: loss=0.0104 " + "l1=0.00651" + "l2=0.00385 f=-0.514 shape=(1, 9000, 1)
logits [[ 2.5527983 -2.0472066  2.479468  -5.0421557]]
Iteration 400 of 1000: loss=0.00967 " + "l1=0.00538" + "l2=0.00429 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.5425167 -2.0441904  2.481857  -5.0385137]]
Iteration 500 of 1000: loss=0.0091 " + "l1=0.00431" + "l2=0.00479 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.5325887 -2.0410702  2.4840245 -5.035341 ]]
Iteration 600 of 1000: loss=0.00861 " + "l1=0.00329" + "l2=0.00533 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.5232363 -2.0381403  2.4861786 -5.033239 ]]
Iteration 700 of 1000: loss=0.008 " + "l1=0.00218" + "l2=0.00582 f=-0.516 shape=(1, 9000, 1)
logits [[ 2.5132637 -2.035432   2.4886856 -5.030618 ]]
Iteration 800 of 1000: loss=0.00747 " + "l1=0.00123" + "l2=0.00625 f=-0.516 shape=(1, 9000, 1)
logits [[ 2.504656  -2.0331323  2.4908457 -5.027886 ]]
Iteration 900 of 1000: loss=0.00709 " + "l1=0.000427" + "l2=0.00666 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.4974546 -2.0312068  2.492647  -5.0261135]]
--- 277.45812368392944 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0774 " + "l1=0.0774" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.6422334 -2.0644538  2.4581451 -5.0976286]]
Iteration 100 of 1000: loss=0.0772 " + "l1=0.077" + "l2=0.000213 f=-0.514 shape=(1, 9000, 1)
logits [[ 2.6243496 -2.0603588  2.4562345 -5.0763254]]
Iteration 200 of 1000: loss=0.0772 " + "l1=0.077" + "l2=0.000183 f=-0.514 shape=(1, 9000, 1)
logits [[ 2.6238093 -2.0598314  2.4559343 -5.075854 ]]
Iteration 300 of 1000: loss=0.0772 " + "l1=0.077" + "l2=0.000215 f=-0.514 shape=(1, 9000, 1)
logits [[ 2.6222048 -2.0590987  2.4555652 -5.0742645]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.774 " + "l1=0.774" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.6422334 -2.0644538  2.4581451 -5.0976286]]
Iteration 100 of 1000: loss=0.757 " + "l1=0.747" + "l2=0.0104 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.5155897 -2.0285945  2.4406812 -4.9500384]]
Iteration 200 of 1000: loss=0.752 " + "l1=0.738" + "l2=0.0146 f=-0.503 shape=(1, 9000, 1)
logits [[ 2.4735503 -2.0138996  2.4323847 -4.9034233]]
Iteration 300 of 1000: loss=0.749 " + "l1=0.732" + "l2=0.0175 f=-0.501 shape=(1, 9000, 1)
logits [[ 2.445217  -2.0017185  2.4255042 -4.873434 ]]
Iteration 400 of 1000: loss=0.747 " + "l1=0.727" + "l2=0.0198 f=-0.5 shape=(1, 9000, 1)
logits [[ 2.4230037 -1.9907888  2.4202185 -4.8506036]]
Iteration 500 of 1000: loss=0.745 " + "l1=0.725" + "l2=0.0201 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.4147854 -1.9830725  2.4133022 -4.8379207]]
Iteration 600 of 1000: loss=0.744 " + "l1=0.723" + "l2=0.0203 f=-0.497 shape=(1, 9000, 1)
logits [[ 2.4075916 -1.9767863  2.407607  -4.826862 ]]
Iteration 700 of 1000: loss=0.742 " + "l1=0.722" + "l2=0.0205 f=-0.496 shape=(1, 9000, 1)
logits [[ 2.4018712 -1.9714664  2.4022257 -4.8167534]]
Iteration 800 of 1000: loss=0.741 " + "l1=0.721" + "l2=0.0206 f=-0.495 shape=(1, 9000, 1)
logits [[ 2.397254  -1.9678818  2.3976521 -4.8076234]]
Iteration 900 of 1000: loss=0.74 " + "l1=0.719" + "l2=0.0209 f=-0.494 shape=(1, 9000, 1)
logits [[ 2.392677  -1.9635686  2.3923314 -4.7979684]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.74 " + "l1=7.74" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.6422334 -2.0644538  2.4581451 -5.0976286]]
Iteration 100 of 1000: loss=6.72 " + "l1=6.24" + "l2=0.483 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.0264552 -1.8452895  2.1588745 -4.0827656]]
Iteration 200 of 1000: loss=6.35 " + "l1=5.59" + "l2=0.766 f=-0.395 shape=(1, 9000, 1)
logits [[ 1.7586681 -1.7672373  2.0078392 -3.5800848]]
Iteration 300 of 1000: loss=6.08 " + "l1=5.14" + "l2=0.941 f=-0.36 shape=(1, 9000, 1)
logits [[ 1.6087286 -1.6964363  1.8964409 -3.2470038]]
Iteration 400 of 1000: loss=5.89 " + "l1=4.86" + "l2=1.03 f=-0.335 shape=(1, 9000, 1)
logits [[ 1.5256349 -1.6517997  1.822643  -3.0372548]]
Iteration 500 of 1000: loss=5.7 " + "l1=4.6" + "l2=1.1 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.4645433 -1.6064616  1.7490377 -2.853206 ]]
Iteration 600 of 1000: loss=5.52 " + "l1=4.32" + "l2=1.19 f=-0.291 shape=(1, 9000, 1)
logits [[ 1.3742203 -1.5698457  1.6767995 -2.6463346]]
Iteration 700 of 1000: loss=5.33 " + "l1=4.02" + "l2=1.3 f=-0.271 shape=(1, 9000, 1)
logits [[ 1.2650515 -1.5236208  1.5991483 -2.4249666]]
Iteration 800 of 1000: loss=5.12 " + "l1=3.7" + "l2=1.42 f=-0.253 shape=(1, 9000, 1)
logits [[ 1.13466   -1.4780004  1.5176398 -2.1852286]]
Iteration 900 of 1000: loss=4.85 " + "l1=3.28" + "l2=1.57 f=-0.221 shape=(1, 9000, 1)
logits [[ 0.98158014 -1.4364698   1.4253397  -1.8528434 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=77.4 " + "l1=77.4" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.6422334 -2.0644538  2.4581451 -5.0976286]]
Iteration 100 of 1000: loss=23.3 " + "l1=0.804" + "l2=22.5 f=-0.0558 shape=(1, 9000, 1)
logits [[-0.16645256 -1.3368857   0.6802193   0.59980726]]
Iteration 200 of 1000: loss=15.9 " + "l1=0" + "l2=15.9 f=-0.0124 shape=(1, 9000, 1)
logits [[-0.0982767  -1.4041517   0.70885754  0.74399775]]
Iteration 300 of 1000: loss=13.9 " + "l1=0" + "l2=13.9 f=-0.00206 shape=(1, 9000, 1)
logits [[-0.03610418 -1.4225059   0.719001    0.73138785]]
Iteration 400 of 1000: loss=12.8 " + "l1=0.0587" + "l2=12.7 f=0.00446 shape=(1, 9000, 1)
logits [[-0.01284626 -1.4249198   0.73074114  0.7248736 ]]
Iteration 500 of 1000: loss=11.9 " + "l1=0" + "l2=11.9 f=0.0138 shape=(1, 9000, 1)
logits [[ 0.00605558 -1.4273086   0.73693633  0.7396719 ]]
Iteration 600 of 1000: loss=11.3 " + "l1=0" + "l2=11.3 f=0.021 shape=(1, 9000, 1)
logits [[ 0.02966814 -1.4344115   0.74399334  0.74462026]]
Iteration 700 of 1000: loss=10.8 " + "l1=0" + "l2=10.8 f=0.0264 shape=(1, 9000, 1)
logits [[ 0.03386967 -1.4379486   0.7261432   0.7837085 ]]
Iteration 800 of 1000: loss=10.1 " + "l1=0" + "l2=10.1 f=0.0201 shape=(1, 9000, 1)
logits [[ 0.04077668 -1.451349    0.74519354  0.74571085]]
Iteration 900 of 1000: loss=9.59 " + "l1=0" + "l2=9.59 f=0.0147 shape=(1, 9000, 1)
logits [[ 0.01977325 -1.4583452   0.7448397   0.7524467 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=42.6 " + "l1=42.6" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.6422334 -2.0644538  2.4581451 -5.0976286]]
Iteration 100 of 1000: loss=23.1 " + "l1=13.2" + "l2=9.84 f=-0.207 shape=(1, 9000, 1)
logits [[ 0.4332876 -1.4870162  1.3146075 -1.0880188]]
Iteration 200 of 1000: loss=13.4 " + "l1=0" + "l2=13.4 f=-0.00332 shape=(1, 9000, 1)
logits [[-0.02960934 -1.4928714   0.75127333  0.7579462 ]]
Iteration 300 of 1000: loss=11.4 " + "l1=0" + "l2=11.4 f=0.0188 shape=(1, 9000, 1)
logits [[ 0.04016938 -1.5308484   0.77409023  0.7917012 ]]
Iteration 400 of 1000: loss=10.4 " + "l1=0.0306" + "l2=10.3 f=0.0165 shape=(1, 9000, 1)
logits [[ 0.05806948 -1.5363134   0.77485675  0.76929206]]
Iteration 500 of 1000: loss=9.68 " + "l1=0" + "l2=9.68 f=0.0172 shape=(1, 9000, 1)
logits [[ 0.06629334 -1.5443287   0.7612544   0.7855205 ]]
Iteration 600 of 1000: loss=9.05 " + "l1=0" + "l2=9.05 f=0.00762 shape=(1, 9000, 1)
logits [[ 0.06010963 -1.5401977   0.7522979   0.758259  ]]
Iteration 700 of 1000: loss=8.51 " + "l1=0" + "l2=8.51 f=0.00149 shape=(1, 9000, 1)
logits [[ 0.06113884 -1.5422432   0.74044245  0.7466104 ]]
Iteration 800 of 1000: loss=8.11 " + "l1=0" + "l2=8.11 f=-0.0019 shape=(1, 9000, 1)
logits [[ 0.03586613 -1.5374439   0.72565526  0.7683175 ]]
Iteration 900 of 1000: loss=7.65 " + "l1=0" + "l2=7.65 f=-0.00697 shape=(1, 9000, 1)
logits [[ 0.01200991 -1.522693    0.7210245   0.76177454]]
--- 272.1157410144806 seconds ---
Adv result:3
Loading record A01831
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.042 " + "l1=0.042" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.9273832 -1.2687873  1.4439572 -5.0934715]]
Iteration 100 of 1000: loss=0.0412 " + "l1=0.0406" + "l2=0.000553 f=-0.5 shape=(1, 9000, 1)
logits [[ 2.8572385 -1.2043909  1.4033408 -5.057018 ]]
Iteration 200 of 1000: loss=0.041 " + "l1=0.0404" + "l2=0.000586 f=-0.501 shape=(1, 9000, 1)
logits [[ 2.8458338 -1.1925906  1.3956165 -5.0510845]]
Iteration 300 of 1000: loss=0.0408 " + "l1=0.0401" + "l2=0.000712 f=-0.501 shape=(1, 9000, 1)
logits [[ 2.832453  -1.178613   1.3873823 -5.0437217]]
Iteration 400 of 1000: loss=0.0407 " + "l1=0.0399" + "l2=0.000856 f=-0.501 shape=(1, 9000, 1)
logits [[ 2.8199425 -1.1653504  1.3798653 -5.0366178]]
Iteration 500 of 1000: loss=0.0406 " + "l1=0.0396" + "l2=0.000969 f=-0.5 shape=(1, 9000, 1)
logits [[ 2.809559  -1.1540048  1.3737236 -5.030605 ]]
Iteration 600 of 1000: loss=0.0406 " + "l1=0.0394" + "l2=0.00112 f=-0.5 shape=(1, 9000, 1)
logits [[ 2.7996662 -1.1433439  1.3677253 -5.025238 ]]
Iteration 700 of 1000: loss=0.0405 " + "l1=0.0392" + "l2=0.00125 f=-0.5 shape=(1, 9000, 1)
logits [[ 2.7909052 -1.1336055  1.3624871 -5.020569 ]]
Iteration 800 of 1000: loss=0.0405 " + "l1=0.0391" + "l2=0.00137 f=-0.5 shape=(1, 9000, 1)
logits [[ 2.784345  -1.1262032  1.3588243 -5.016833 ]]
Iteration 900 of 1000: loss=0.0405 " + "l1=0.039" + "l2=0.00155 f=-0.5 shape=(1, 9000, 1)
logits [[ 2.77798   -1.1188021  1.3552927 -5.013561 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.42 " + "l1=0.42" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.9273832 -1.2687873  1.4439572 -5.0934715]]
Iteration 100 of 1000: loss=0.346 " + "l1=0.303" + "l2=0.043 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.308129   -0.71850234  1.0836278  -4.819978  ]]
Iteration 200 of 1000: loss=0.314 " + "l1=0.25" + "l2=0.064 f=-0.54 shape=(1, 9000, 1)
logits [[ 2.039928   -0.46210802  0.93636626 -4.6755204 ]]
Iteration 300 of 1000: loss=0.286 " + "l1=0.205" + "l2=0.0812 f=-0.543 shape=(1, 9000, 1)
logits [[ 1.8073238  -0.24026845  0.8200586  -4.5594826 ]]
Iteration 400 of 1000: loss=0.261 " + "l1=0.168" + "l2=0.0927 f=-0.546 shape=(1, 9000, 1)
logits [[ 1.6012834  -0.07952242  0.7373899  -4.444276  ]]
Iteration 500 of 1000: loss=0.236 " + "l1=0.132" + "l2=0.103 f=-0.549 shape=(1, 9000, 1)
logits [[ 1.3958591   0.07156631  0.665653   -4.3282747 ]]
Iteration 600 of 1000: loss=0.211 " + "l1=0.0986" + "l2=0.112 f=-0.551 shape=(1, 9000, 1)
logits [[ 1.1890019   0.20276447  0.6055906  -4.201985  ]]
Iteration 700 of 1000: loss=0.189 " + "l1=0.0676" + "l2=0.121 f=-0.551 shape=(1, 9000, 1)
logits [[ 1.0003256   0.32442603  0.5582172  -4.0868545 ]]
Iteration 800 of 1000: loss=0.169 " + "l1=0.0376" + "l2=0.131 f=-0.55 shape=(1, 9000, 1)
logits [[ 0.8160639   0.43959078  0.5155372  -3.9720953 ]]
Iteration 900 of 1000: loss=0.147 " + "l1=0.00413" + "l2=0.143 f=-0.544 shape=(1, 9000, 1)
logits [[ 0.60956323  0.5683103   0.4836888  -3.8379242 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.231 " + "l1=0.231" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.9273832 -1.2687873  1.4439572 -5.0934715]]
Iteration 100 of 1000: loss=0.208 " + "l1=0.195" + "l2=0.013 f=-0.516 shape=(1, 9000, 1)
logits [[ 2.5843344 -0.9592749  1.2449715 -4.932411 ]]
Iteration 200 of 1000: loss=0.201 " + "l1=0.184" + "l2=0.017 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.4797404 -0.8607625  1.1838372 -4.8711863]]
Iteration 300 of 1000: loss=0.195 " + "l1=0.173" + "l2=0.0217 f=-0.518 shape=(1, 9000, 1)
logits [[ 2.3827217 -0.7655958  1.1244504 -4.813072 ]]
Iteration 400 of 1000: loss=0.189 " + "l1=0.162" + "l2=0.0265 f=-0.519 shape=(1, 9000, 1)
logits [[ 2.2815793  -0.66742915  1.0652115  -4.7561693 ]]
Iteration 500 of 1000: loss=0.183 " + "l1=0.153" + "l2=0.0301 f=-0.52 shape=(1, 9000, 1)
logits [[ 2.1964667 -0.5872254  1.0182909 -4.7090774]]
Iteration 600 of 1000: loss=0.178 " + "l1=0.144" + "l2=0.0333 f=-0.52 shape=(1, 9000, 1)
logits [[ 2.1160383  -0.50976783  0.97471106 -4.6625066 ]]
Iteration 700 of 1000: loss=0.171 " + "l1=0.132" + "l2=0.0392 f=-0.528 shape=(1, 9000, 1)
logits [[ 2.0003223  -0.39949605  0.90907663 -4.6233735 ]]
Iteration 800 of 1000: loss=0.164 " + "l1=0.122" + "l2=0.0427 f=-0.53 shape=(1, 9000, 1)
logits [[ 1.90565    -0.30697644  0.86403865 -4.5829477 ]]
Iteration 900 of 1000: loss=0.158 " + "l1=0.113" + "l2=0.0454 f=-0.529 shape=(1, 9000, 1)
logits [[ 1.820418   -0.23182458  0.82927346 -4.534958  ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.325 " + "l1=0.325" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.9273832 -1.2687873  1.4439572 -5.0934715]]
Iteration 100 of 1000: loss=0.281 " + "l1=0.257" + "l2=0.0242 f=-0.524 shape=(1, 9000, 1)
logits [[ 2.459062  -0.8525047  1.1733869 -4.8752384]]
Iteration 200 of 1000: loss=0.265 " + "l1=0.228" + "l2=0.0363 f=-0.529 shape=(1, 9000, 1)
logits [[ 2.273368   -0.67251104  1.0591065  -4.7778225 ]]
Iteration 300 of 1000: loss=0.25 " + "l1=0.203" + "l2=0.047 f=-0.533 shape=(1, 9000, 1)
logits [[ 2.1043723 -0.5122828  0.9673615 -4.6909184]]
Iteration 400 of 1000: loss=0.235 " + "l1=0.177" + "l2=0.0576 f=-0.535 shape=(1, 9000, 1)
logits [[ 1.939059   -0.34579498  0.8761863  -4.6087785 ]]
Iteration 500 of 1000: loss=0.221 " + "l1=0.156" + "l2=0.065 f=-0.54 shape=(1, 9000, 1)
logits [[ 1.792939   -0.22162323  0.81067836 -4.5421844 ]]
Iteration 600 of 1000: loss=0.208 " + "l1=0.137" + "l2=0.0704 f=-0.54 shape=(1, 9000, 1)
logits [[ 1.654319   -0.11641949  0.7562268  -4.4535666 ]]
Iteration 700 of 1000: loss=0.193 " + "l1=0.113" + "l2=0.0796 f=-0.543 shape=(1, 9000, 1)
logits [[ 1.4803841   0.01621352  0.69495296 -4.362599  ]]
Iteration 800 of 1000: loss=0.179 " + "l1=0.0959" + "l2=0.0832 f=-0.542 shape=(1, 9000, 1)
logits [[ 1.343283    0.10554942  0.65413374 -4.2693315 ]]
Iteration 900 of 1000: loss=0.167 " + "l1=0.0822" + "l2=0.0848 f=-0.537 shape=(1, 9000, 1)
logits [[ 1.231188    0.1700701   0.62536913 -4.1765966 ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.372 " + "l1=0.372" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.9273832 -1.2687873  1.4439572 -5.0934715]]
Iteration 100 of 1000: loss=0.314 " + "l1=0.282" + "l2=0.0325 f=-0.531 shape=(1, 9000, 1)
logits [[ 2.3860984 -0.7907572  1.1301432 -4.8485036]]
Iteration 200 of 1000: loss=0.291 " + "l1=0.242" + "l2=0.0492 f=-0.538 shape=(1, 9000, 1)
logits [[ 2.1576397 -0.5681022  0.9945063 -4.734582 ]]
Iteration 300 of 1000: loss=0.269 " + "l1=0.205" + "l2=0.0641 f=-0.538 shape=(1, 9000, 1)
logits [[ 1.9490412 -0.3623269  0.883705  -4.6233673]]
Iteration 400 of 1000: loss=0.25 " + "l1=0.175" + "l2=0.075 f=-0.543 shape=(1, 9000, 1)
logits [[ 1.7668514  -0.20590612  0.80156845 -4.5338717 ]]
Iteration 500 of 1000: loss=0.231 " + "l1=0.148" + "l2=0.0833 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.5932657 -0.0748838  0.7341241 -4.427259 ]]
Iteration 600 of 1000: loss=0.212 " + "l1=0.12" + "l2=0.0923 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.4100764   0.06351277  0.671357   -4.3329935 ]]
Iteration 700 of 1000: loss=0.193 " + "l1=0.0951" + "l2=0.0979 f=-0.546 shape=(1, 9000, 1)
logits [[ 1.2411537   0.16920628  0.62513894 -4.2181134 ]]
Iteration 800 of 1000: loss=0.177 " + "l1=0.0751" + "l2=0.102 f=-0.542 shape=(1, 9000, 1)
logits [[ 1.1001531   0.25418922  0.5889542  -4.1120152 ]]
Iteration 900 of 1000: loss=0.163 " + "l1=0.0543" + "l2=0.109 f=-0.541 shape=(1, 9000, 1)
logits [[ 0.9586396   0.34652558  0.55439216 -4.022463  ]]
--- 309.3476138114929 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0148 " + "l1=0.0148" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.9273832 -1.2687873  1.4439572 -5.0934715]]
Iteration 100 of 1000: loss=0.0147 " + "l1=0.0146" + "l2=0.000161 f=-0.499 shape=(1, 9000, 1)
logits [[ 2.8973505 -1.2592659  1.4413631 -5.075479 ]]
Iteration 200 of 1000: loss=0.0147 " + "l1=0.0146" + "l2=0.000114 f=-0.499 shape=(1, 9000, 1)
logits [[ 2.8982818 -1.2593261  1.4415574 -5.076049 ]]
Iteration 300 of 1000: loss=0.0147 " + "l1=0.0145" + "l2=0.000132 f=-0.499 shape=(1, 9000, 1)
logits [[ 2.8958778 -1.2585695  1.4415585 -5.074549 ]]
Iteration 400 of 1000: loss=0.0147 " + "l1=0.0145" + "l2=0.000188 f=-0.499 shape=(1, 9000, 1)
logits [[ 2.8931658 -1.2580462  1.4417205 -5.0728517]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.148 " + "l1=0.148" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.9273832 -1.2687873  1.4439572 -5.0934715]]
Iteration 100 of 1000: loss=0.137 " + "l1=0.13" + "l2=0.0067 f=-0.505 shape=(1, 9000, 1)
logits [[ 2.7357254 -1.2140326  1.432462  -4.975997 ]]
Iteration 200 of 1000: loss=0.134 " + "l1=0.125" + "l2=0.0086 f=-0.508 shape=(1, 9000, 1)
logits [[ 2.682242  -1.2009233  1.4329852 -4.945224 ]]
Iteration 300 of 1000: loss=0.13 " + "l1=0.12" + "l2=0.0106 f=-0.51 shape=(1, 9000, 1)
logits [[ 2.6304266 -1.1907628  1.4331008 -4.912136 ]]
Iteration 400 of 1000: loss=0.127 " + "l1=0.115" + "l2=0.0121 f=-0.512 shape=(1, 9000, 1)
logits [[ 2.5865006 -1.1841233  1.4337201 -4.884215 ]]
Iteration 500 of 1000: loss=0.124 " + "l1=0.111" + "l2=0.0136 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.5464342 -1.1854181  1.4385291 -4.8595243]]
Iteration 600 of 1000: loss=0.121 " + "l1=0.106" + "l2=0.015 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.5033479 -1.1838487  1.4415408 -4.8306236]]
Iteration 700 of 1000: loss=0.118 " + "l1=0.102" + "l2=0.0163 f=-0.519 shape=(1, 9000, 1)
logits [[ 2.4633973 -1.1840792  1.4468908 -4.8041487]]
Iteration 800 of 1000: loss=0.115 " + "l1=0.0973" + "l2=0.0175 f=-0.52 shape=(1, 9000, 1)
logits [[ 2.423816  -1.1804767  1.4511955 -4.774313 ]]
Iteration 900 of 1000: loss=0.111 " + "l1=0.0917" + "l2=0.0195 f=-0.521 shape=(1, 9000, 1)
logits [[ 2.3765593 -1.1809893  1.459452  -4.738368 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.48 " + "l1=1.48" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.9273832 -1.2687873  1.4439572 -5.0934715]]
Iteration 100 of 1000: loss=0.303 " + "l1=0.00371" + "l2=0.299 f=-0.611 shape=(1, 9000, 1)
logits [[ 1.5468484 -1.081569   1.5431359 -4.451447 ]]
Iteration 200 of 1000: loss=0.219 " + "l1=0" + "l2=0.219 f=-0.594 shape=(1, 9000, 1)
logits [[ 1.5374439 -1.0557731  1.5477196 -4.405697 ]]
Iteration 300 of 1000: loss=0.183 " + "l1=0" + "l2=0.183 f=-0.582 shape=(1, 9000, 1)
logits [[ 1.5196958 -1.0408994  1.5546364 -4.3612156]]
Iteration 400 of 1000: loss=0.149 " + "l1=0" + "l2=0.149 f=-0.566 shape=(1, 9000, 1)
logits [[ 1.5252874 -1.0295373  1.5513623 -4.3108826]]
Iteration 500 of 1000: loss=0.13 " + "l1=0" + "l2=0.13 f=-0.553 shape=(1, 9000, 1)
logits [[ 1.5110645 -1.0185946  1.5504111 -4.254493 ]]
Iteration 600 of 1000: loss=0.108 " + "l1=0" + "l2=0.108 f=-0.542 shape=(1, 9000, 1)
logits [[ 1.5361834 -1.0226854  1.5420918 -4.222688 ]]
Iteration 700 of 1000: loss=0.0969 " + "l1=0" + "l2=0.0969 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.5342456 -1.028399   1.5432038 -4.1912045]]
Iteration 800 of 1000: loss=0.0888 " + "l1=0" + "l2=0.0888 f=-0.527 shape=(1, 9000, 1)
logits [[ 1.5306141 -1.0322655  1.5484163 -4.1554613]]
Iteration 900 of 1000: loss=0.0811 " + "l1=0" + "l2=0.0811 f=-0.521 shape=(1, 9000, 1)
logits [[ 1.5375986 -1.0328332  1.5489854 -4.1391335]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.816 " + "l1=0.816" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.9273832 -1.2687873  1.4439572 -5.0934715]]
Iteration 100 of 1000: loss=0.326 " + "l1=0.00873" + "l2=0.318 f=-0.605 shape=(1, 9000, 1)
logits [[ 1.5596713 -1.085195   1.5438067 -4.439456 ]]
Iteration 200 of 1000: loss=0.207 " + "l1=0" + "l2=0.207 f=-0.584 shape=(1, 9000, 1)
logits [[ 1.5580941 -1.0601051  1.5611157 -4.395637 ]]
Iteration 300 of 1000: loss=0.158 " + "l1=0" + "l2=0.158 f=-0.564 shape=(1, 9000, 1)
logits [[ 1.5661057 -1.0490153  1.5673946 -4.342051 ]]
Iteration 400 of 1000: loss=0.13 " + "l1=0" + "l2=0.13 f=-0.546 shape=(1, 9000, 1)
logits [[ 1.5686662 -1.0399779  1.5740124 -4.285999 ]]
Iteration 500 of 1000: loss=0.113 " + "l1=0.00372" + "l2=0.11 f=-0.533 shape=(1, 9000, 1)
logits [[ 1.5749876 -1.0389254  1.5682234 -4.235433 ]]
Iteration 600 of 1000: loss=0.0986 " + "l1=0.00192" + "l2=0.0967 f=-0.527 shape=(1, 9000, 1)
logits [[ 1.5702465 -1.0410228  1.5667626 -4.2029734]]
Iteration 700 of 1000: loss=0.0863 " + "l1=0" + "l2=0.0863 f=-0.524 shape=(1, 9000, 1)
logits [[ 1.5575694 -1.044496   1.5630741 -4.172337 ]]
Iteration 800 of 1000: loss=0.0801 " + "l1=0" + "l2=0.0801 f=-0.52 shape=(1, 9000, 1)
logits [[ 1.5520746 -1.0542701  1.5700858 -4.146919 ]]
Iteration 900 of 1000: loss=0.0725 " + "l1=0" + "l2=0.0725 f=-0.515 shape=(1, 9000, 1)
logits [[ 1.5685489 -1.0600297  1.5713785 -4.1397724]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.482 " + "l1=0.482" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.9273832 -1.2687873  1.4439572 -5.0934715]]
Iteration 100 of 1000: loss=0.361 " + "l1=0.291" + "l2=0.0706 f=-0.534 shape=(1, 9000, 1)
logits [[ 2.292268  -1.100834   1.3979828 -4.7265954]]
Iteration 200 of 1000: loss=0.282 " + "l1=0.125" + "l2=0.157 f=-0.567 shape=(1, 9000, 1)
logits [[ 1.9062567 -1.1543312  1.5225184 -4.5440865]]
Iteration 300 of 1000: loss=0.174 " + "l1=0.00178" + "l2=0.173 f=-0.566 shape=(1, 9000, 1)
logits [[ 1.5963876 -1.0857631  1.5909202 -4.3638735]]
Iteration 400 of 1000: loss=0.133 " + "l1=0.00335" + "l2=0.13 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.6161358 -1.0912825  1.6058378 -4.3077526]]
Iteration 500 of 1000: loss=0.111 " + "l1=0" + "l2=0.111 f=-0.535 shape=(1, 9000, 1)
logits [[ 1.583504  -1.0734651  1.5930382 -4.24297  ]]
Iteration 600 of 1000: loss=0.0945 " + "l1=0.00034" + "l2=0.0942 f=-0.526 shape=(1, 9000, 1)
logits [[ 1.5924585 -1.0784447  1.5914112 -4.210198 ]]
Iteration 700 of 1000: loss=0.0834 " + "l1=0.00153" + "l2=0.0818 f=-0.522 shape=(1, 9000, 1)
logits [[ 1.5925223 -1.0859828  1.5878116 -4.1840906]]
Iteration 800 of 1000: loss=0.076 " + "l1=0.00293" + "l2=0.0731 f=-0.517 shape=(1, 9000, 1)
logits [[ 1.5967716 -1.089495   1.5877575 -4.16209  ]]
Iteration 900 of 1000: loss=0.0694 " + "l1=0.00199" + "l2=0.0674 f=-0.514 shape=(1, 9000, 1)
logits [[ 1.5972915 -1.09803    1.5911555 -4.144653 ]]
--- 280.09734058380127 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0802 " + "l1=0.0802" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.9273832 -1.2687873  1.4439572 -5.0934715]]
Iteration 100 of 1000: loss=0.0794 " + "l1=0.0788" + "l2=0.000578 f=-0.496 shape=(1, 9000, 1)
logits [[ 2.8581457 -1.2319026  1.4121094 -5.0231485]]
Iteration 200 of 1000: loss=0.0792 " + "l1=0.0786" + "l2=0.000598 f=-0.496 shape=(1, 9000, 1)
logits [[ 2.8479207 -1.2248775  1.4065669 -5.012418 ]]
Iteration 300 of 1000: loss=0.0791 " + "l1=0.0783" + "l2=0.000725 f=-0.495 shape=(1, 9000, 1)
logits [[ 2.835457  -1.216702   1.4004797 -4.9991055]]
Iteration 400 of 1000: loss=0.079 " + "l1=0.0781" + "l2=0.000868 f=-0.494 shape=(1, 9000, 1)
logits [[ 2.8237689 -1.2092143  1.3950527 -4.9860854]]
Iteration 500 of 1000: loss=0.0789 " + "l1=0.0779" + "l2=0.00102 f=-0.493 shape=(1, 9000, 1)
logits [[ 2.8135734 -1.2027711  1.3902931 -4.9745073]]
Iteration 600 of 1000: loss=0.0788 " + "l1=0.0777" + "l2=0.00112 f=-0.493 shape=(1, 9000, 1)
logits [[ 2.8047464 -1.1971154  1.3862796 -4.964471 ]]
Iteration 700 of 1000: loss=0.0788 " + "l1=0.0775" + "l2=0.00129 f=-0.492 shape=(1, 9000, 1)
logits [[ 2.7974377 -1.1920036  1.3827927 -4.957003 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.802 " + "l1=0.802" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.9273832 -1.2687873  1.4439572 -5.0934715]]
Iteration 100 of 1000: loss=0.726 " + "l1=0.682" + "l2=0.0442 f=-0.483 shape=(1, 9000, 1)
logits [[ 2.3195171  -0.92010957  1.1651831  -4.4985647 ]]
Iteration 200 of 1000: loss=0.696 " + "l1=0.635" + "l2=0.0613 f=-0.467 shape=(1, 9000, 1)
logits [[ 2.0932927 -0.7649806  1.0609478 -4.2558804]]
Iteration 300 of 1000: loss=0.671 " + "l1=0.592" + "l2=0.0781 f=-0.45 shape=(1, 9000, 1)
logits [[ 1.8946981 -0.6447429  0.9818674 -4.0298877]]
Iteration 400 of 1000: loss=0.647 " + "l1=0.554" + "l2=0.0924 f=-0.435 shape=(1, 9000, 1)
logits [[ 1.7150165 -0.5355312  0.9083967 -3.8284776]]
Iteration 500 of 1000: loss=0.623 " + "l1=0.516" + "l2=0.107 f=-0.422 shape=(1, 9000, 1)
logits [[ 1.5316395  -0.42731687  0.8361145  -3.6294115 ]]
Iteration 600 of 1000: loss=0.599 " + "l1=0.481" + "l2=0.118 f=-0.411 shape=(1, 9000, 1)
logits [[ 1.3595803  -0.31628203  0.7656695  -3.4545655 ]]
Iteration 700 of 1000: loss=0.573 " + "l1=0.441" + "l2=0.132 f=-0.416 shape=(1, 9000, 1)
logits [[ 1.1277373  -0.18154965  0.67832524 -3.2868078 ]]
Iteration 800 of 1000: loss=0.548 " + "l1=0.406" + "l2=0.142 f=-0.42 shape=(1, 9000, 1)
logits [[ 0.92509556 -0.0808066   0.6099425  -3.133234  ]]
Iteration 900 of 1000: loss=0.524 " + "l1=0.374" + "l2=0.15 f=-0.423 shape=(1, 9000, 1)
logits [[ 0.7406814   0.00474134  0.56109536 -3.0004637 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.02 " + "l1=8.02" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.9273832 -1.2687873  1.4439572 -5.0934715]]
Iteration 100 of 1000: loss=3.35 " + "l1=1.84" + "l2=1.51 f=-0.416 shape=(1, 9000, 1)
logits [[ 0.04536575  0.04127964  0.04665915 -1.7974405 ]]
Iteration 200 of 1000: loss=2.64 " + "l1=1.16" + "l2=1.48 f=-0.363 shape=(1, 9000, 1)
logits [[-0.07995966 -0.08563852 -0.06192106 -1.222593  ]]
Iteration 300 of 1000: loss=2.01 " + "l1=0.512" + "l2=1.49 f=-0.303 shape=(1, 9000, 1)
logits [[-0.23793817 -0.15733449 -0.15228009 -0.66458577]]
Iteration 400 of 1000: loss=1.36 " + "l1=0" + "l2=1.36 f=-0.237 shape=(1, 9000, 1)
logits [[-0.25704086 -0.23052652 -0.23982008 -0.22069296]]
Iteration 500 of 1000: loss=1.02 " + "l1=0" + "l2=1.02 f=-0.193 shape=(1, 9000, 1)
logits [[-0.2000344  -0.20236959 -0.19185911 -0.17679822]]
Iteration 600 of 1000: loss=0.867 " + "l1=0" + "l2=0.867 f=-0.161 shape=(1, 9000, 1)
logits [[-0.16897312 -0.16019161 -0.16491576 -0.1512742 ]]
Iteration 700 of 1000: loss=0.768 " + "l1=0" + "l2=0.768 f=-0.141 shape=(1, 9000, 1)
logits [[-0.14706469 -0.1488111  -0.13611877 -0.13145539]]
Iteration 800 of 1000: loss=0.707 " + "l1=0" + "l2=0.707 f=-0.126 shape=(1, 9000, 1)
logits [[-0.14262095 -0.1286207  -0.12691045 -0.10394926]]
Iteration 900 of 1000: loss=0.647 " + "l1=0" + "l2=0.647 f=-0.114 shape=(1, 9000, 1)
logits [[-0.12441234 -0.12072233 -0.10631752 -0.10533556]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.41 " + "l1=4.41" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.9273832 -1.2687873  1.4439572 -5.0934715]]
Iteration 100 of 1000: loss=2.41 " + "l1=1.49" + "l2=0.918 f=-0.475 shape=(1, 9000, 1)
logits [[ 0.202957    0.18956043  0.2109962  -2.502726  ]]
Iteration 200 of 1000: loss=1.96 " + "l1=1.16" + "l2=0.796 f=-0.412 shape=(1, 9000, 1)
logits [[ 0.11200932  0.11660933  0.11848376 -1.99564   ]]
Iteration 300 of 1000: loss=1.65 " + "l1=0.912" + "l2=0.742 f=-0.354 shape=(1, 9000, 1)
logits [[ 0.05594201  0.06134035  0.0618871  -1.5963308 ]]
Iteration 400 of 1000: loss=1.41 " + "l1=0.66" + "l2=0.75 f=-0.31 shape=(1, 9000, 1)
logits [[-0.07685029  0.00777386  0.01332664 -1.1862024 ]]
Iteration 500 of 1000: loss=1.17 " + "l1=0.39" + "l2=0.779 f=-0.277 shape=(1, 9000, 1)
logits [[-0.20088932 -0.06982484 -0.0638291  -0.77293736]]
Iteration 600 of 1000: loss=0.865 " + "l1=0.0125" + "l2=0.853 f=-0.212 shape=(1, 9000, 1)
logits [[-0.33146232 -0.17147861 -0.16064326 -0.18338189]]
Iteration 700 of 1000: loss=0.703 " + "l1=0" + "l2=0.703 f=-0.182 shape=(1, 9000, 1)
logits [[-0.27114505 -0.15761726 -0.15233491 -0.14653856]]
Iteration 800 of 1000: loss=0.615 " + "l1=0" + "l2=0.615 f=-0.166 shape=(1, 9000, 1)
logits [[-0.22420785 -0.14658652 -0.15289713 -0.13897598]]
Iteration 900 of 1000: loss=0.55 " + "l1=0.00688" + "l2=0.543 f=-0.145 shape=(1, 9000, 1)
logits [[-0.15627293 -0.15441673 -0.12916085 -0.14166999]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.61 " + "l1=2.61" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.9273832 -1.2687873  1.4439572 -5.0934715]]
Iteration 100 of 1000: loss=1.81 " + "l1=1.36" + "l2=0.458 f=-0.465 shape=(1, 9000, 1)
logits [[ 0.9367963  -0.15259363  0.5944163  -3.2370272 ]]
Iteration 200 of 1000: loss=1.45 " + "l1=0.942" + "l2=0.511 f=-0.454 shape=(1, 9000, 1)
logits [[ 0.29520175  0.18450497  0.30073777 -2.5983665 ]]
Iteration 300 of 1000: loss=1.25 " + "l1=0.784" + "l2=0.468 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.1987854   0.19628394  0.20029466 -2.2112622 ]]
Iteration 400 of 1000: loss=1.13 " + "l1=0.682" + "l2=0.445 f=-0.367 shape=(1, 9000, 1)
logits [[ 0.14605567  0.1630099   0.15742387 -1.9342308 ]]
Iteration 500 of 1000: loss=1.04 " + "l1=0.59" + "l2=0.446 f=-0.34 shape=(1, 9000, 1)
logits [[ 0.10330381  0.11322265  0.12051602 -1.6955018 ]]
Iteration 600 of 1000: loss=0.965 " + "l1=0.505" + "l2=0.46 f=-0.325 shape=(1, 9000, 1)
logits [[-0.00506781  0.08698133  0.08608927 -1.4668939 ]]
Iteration 700 of 1000: loss=0.892 " + "l1=0.414" + "l2=0.478 f=-0.309 shape=(1, 9000, 1)
logits [[-0.1357798   0.04947253  0.06092629 -1.2122847 ]]
Iteration 800 of 1000: loss=0.812 " + "l1=0.31" + "l2=0.501 f=-0.289 shape=(1, 9000, 1)
logits [[-0.25117043  0.01261519  0.01819711 -0.9369274 ]]
Iteration 900 of 1000: loss=0.697 " + "l1=0.172" + "l2=0.524 f=-0.24 shape=(1, 9000, 1)
logits [[-0.32757193 -0.03281059 -0.03602524 -0.5634749 ]]
--- 297.76757860183716 seconds ---
Adv result:3
Loading record A01844
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0212 " + "l1=0.0212" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.278851  -0.8430085  0.5697704 -2.1766734]]
Iteration 100 of 1000: loss=0.0206 " + "l1=0.0203" + "l2=0.000336 f=-0.294 shape=(1, 9000, 1)
logits [[ 1.2157875  -0.81109685  0.5479439  -2.1277494 ]]
Iteration 200 of 1000: loss=0.0204 " + "l1=0.02" + "l2=0.00038 f=-0.294 shape=(1, 9000, 1)
logits [[ 1.1984607  -0.803113    0.54142994 -2.1140118 ]]
Iteration 300 of 1000: loss=0.0202 " + "l1=0.0197" + "l2=0.000495 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.1772627  -0.793948    0.53477657 -2.0983205 ]]
Iteration 400 of 1000: loss=0.02 " + "l1=0.0194" + "l2=0.000611 f=-0.296 shape=(1, 9000, 1)
logits [[ 1.1562387  -0.78496623  0.528423   -2.0834157 ]]
Iteration 500 of 1000: loss=0.0199 " + "l1=0.0191" + "l2=0.000764 f=-0.297 shape=(1, 9000, 1)
logits [[ 1.1354045  -0.77603173  0.5217274  -2.0680454 ]]
Iteration 600 of 1000: loss=0.0198 " + "l1=0.0188" + "l2=0.000933 f=-0.297 shape=(1, 9000, 1)
logits [[ 1.1158544  -0.76803863  0.5158643  -2.0533812 ]]
Iteration 700 of 1000: loss=0.0197 " + "l1=0.0186" + "l2=0.00107 f=-0.298 shape=(1, 9000, 1)
logits [[ 1.096919  -0.7611475  0.5105176 -2.0396783]]
Iteration 800 of 1000: loss=0.0195 " + "l1=0.0183" + "l2=0.0012 f=-0.299 shape=(1, 9000, 1)
logits [[ 1.0782847  -0.7546156   0.50558734 -2.0263872 ]]
Iteration 900 of 1000: loss=0.0194 " + "l1=0.0181" + "l2=0.00136 f=-0.3 shape=(1, 9000, 1)
logits [[ 1.0595245  -0.7484098   0.50051254 -2.0128071 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.212 " + "l1=0.212" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.278851  -0.8430085  0.5697704 -2.1766734]]
Iteration 100 of 1000: loss=0.153 " + "l1=0.123" + "l2=0.0295 f=-0.313 shape=(1, 9000, 1)
logits [[ 0.66821724 -0.5618706   0.34683612 -1.7071164 ]]
Iteration 200 of 1000: loss=0.117 " + "l1=0.0759" + "l2=0.0411 f=-0.334 shape=(1, 9000, 1)
logits [[ 0.30540228 -0.45377952  0.28890345 -1.4753762 ]]
Iteration 300 of 1000: loss=0.0996 " + "l1=0.0582" + "l2=0.0415 f=-0.335 shape=(1, 9000, 1)
logits [[ 0.20178369 -0.3756022   0.20589806 -1.3713032 ]]
Iteration 400 of 1000: loss=0.0897 " + "l1=0.048" + "l2=0.0417 f=-0.329 shape=(1, 9000, 1)
logits [[ 0.15387744 -0.3243294   0.15526919 -1.2998753 ]]
Iteration 500 of 1000: loss=0.0825 " + "l1=0.0404" + "l2=0.0421 f=-0.32 shape=(1, 9000, 1)
logits [[ 0.12008715 -0.28367275  0.12062401 -1.2385865 ]]
Iteration 600 of 1000: loss=0.0753 " + "l1=0.0301" + "l2=0.0451 f=-0.311 shape=(1, 9000, 1)
logits [[ 0.07503745 -0.22507663  0.07636753 -1.1709815 ]]
Iteration 700 of 1000: loss=0.0645 " + "l1=0.0157" + "l2=0.0488 f=-0.3 shape=(1, 9000, 1)
logits [[ 0.01074232 -0.13939777  0.01782118 -1.0874405 ]]
Iteration 800 of 1000: loss=0.055 " + "l1=0.00977" + "l2=0.0452 f=-0.295 shape=(1, 9000, 1)
logits [[-0.00827408 -0.10249159 -0.00483312 -1.0657526 ]]
Iteration 900 of 1000: loss=0.047 " + "l1=0.00337" + "l2=0.0436 f=-0.292 shape=(1, 9000, 1)
logits [[-0.03414242 -0.06151355 -0.02779639 -1.0442972 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.117 " + "l1=0.117" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.278851  -0.8430085  0.5697704 -2.1766734]]
Iteration 100 of 1000: loss=0.0992 " + "l1=0.0901" + "l2=0.00912 f=-0.301 shape=(1, 9000, 1)
logits [[ 0.95488375 -0.68288755  0.4409031  -1.9180149 ]]
Iteration 200 of 1000: loss=0.0893 " + "l1=0.0764" + "l2=0.0128 f=-0.309 shape=(1, 9000, 1)
logits [[ 0.77346313 -0.6164731   0.38701856 -1.7819883 ]]
Iteration 300 of 1000: loss=0.0799 " + "l1=0.062" + "l2=0.0179 f=-0.322 shape=(1, 9000, 1)
logits [[ 0.5683701  -0.55844414  0.36423993 -1.6607114 ]]
Iteration 400 of 1000: loss=0.0721 " + "l1=0.0511" + "l2=0.021 f=-0.332 shape=(1, 9000, 1)
logits [[ 0.4144319  -0.51391107  0.34700876 -1.5743552 ]]
Iteration 500 of 1000: loss=0.0661 " + "l1=0.0449" + "l2=0.0212 f=-0.337 shape=(1, 9000, 1)
logits [[ 0.32985228 -0.48647454  0.32763928 -1.5178903 ]]
Iteration 600 of 1000: loss=0.0621 " + "l1=0.0412" + "l2=0.0209 f=-0.337 shape=(1, 9000, 1)
logits [[ 0.29030833 -0.45554176  0.29350936 -1.4774345 ]]
Iteration 700 of 1000: loss=0.0585 " + "l1=0.0384" + "l2=0.0201 f=-0.336 shape=(1, 9000, 1)
logits [[ 0.26732764 -0.43027523  0.26616767 -1.4458022 ]]
Iteration 800 of 1000: loss=0.0558 " + "l1=0.0363" + "l2=0.0195 f=-0.333 shape=(1, 9000, 1)
logits [[ 0.24639118 -0.4125066   0.2475989  -1.4153684 ]]
Iteration 900 of 1000: loss=0.0536 " + "l1=0.0348" + "l2=0.0189 f=-0.33 shape=(1, 9000, 1)
logits [[ 0.23405057 -0.39777145  0.23281612 -1.3878684 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.164 " + "l1=0.164" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.278851  -0.8430085  0.5697704 -2.1766734]]
Iteration 100 of 1000: loss=0.129 " + "l1=0.113" + "l2=0.0165 f=-0.306 shape=(1, 9000, 1)
logits [[ 0.8279363  -0.62721425  0.3947368  -1.8201307 ]]
Iteration 200 of 1000: loss=0.107 " + "l1=0.0795" + "l2=0.0272 f=-0.323 shape=(1, 9000, 1)
logits [[ 0.50414103 -0.52105117  0.33396873 -1.6082987 ]]
Iteration 300 of 1000: loss=0.0907 " + "l1=0.0592" + "l2=0.0315 f=-0.336 shape=(1, 9000, 1)
logits [[ 0.29938373 -0.46357587  0.30025524 -1.4802706 ]]
Iteration 400 of 1000: loss=0.0819 " + "l1=0.0511" + "l2=0.0309 f=-0.336 shape=(1, 9000, 1)
logits [[ 0.24457595 -0.4130097   0.24583007 -1.4213088 ]]
Iteration 500 of 1000: loss=0.0759 " + "l1=0.0458" + "l2=0.0301 f=-0.333 shape=(1, 9000, 1)
logits [[ 0.20973688 -0.3813177   0.20846242 -1.369401  ]]
Iteration 600 of 1000: loss=0.0712 " + "l1=0.0418" + "l2=0.0294 f=-0.328 shape=(1, 9000, 1)
logits [[ 0.1831254  -0.35570744  0.18291788 -1.3221496 ]]
Iteration 700 of 1000: loss=0.0675 " + "l1=0.0381" + "l2=0.0294 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.15677336 -0.32791772  0.1641412  -1.2884626 ]]
Iteration 800 of 1000: loss=0.0639 " + "l1=0.0349" + "l2=0.029 f=-0.318 shape=(1, 9000, 1)
logits [[ 0.14702055 -0.30350092  0.14330737 -1.2602799 ]]
Iteration 900 of 1000: loss=0.0599 " + "l1=0.0298" + "l2=0.03 f=-0.312 shape=(1, 9000, 1)
logits [[ 0.11866063 -0.26647642  0.1151126  -1.215267  ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.188 " + "l1=0.188" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.278851  -0.8430085  0.5697704 -2.1766734]]
Iteration 100 of 1000: loss=0.142 " + "l1=0.12" + "l2=0.0221 f=-0.309 shape=(1, 9000, 1)
logits [[ 0.75378454 -0.5968157   0.37250394 -1.7671793 ]]
Iteration 200 of 1000: loss=0.113 " + "l1=0.0788" + "l2=0.0338 f=-0.328 shape=(1, 9000, 1)
logits [[ 0.40251672 -0.4853699   0.31247497 -1.5399524 ]]
Iteration 300 of 1000: loss=0.0956 " + "l1=0.06" + "l2=0.0356 f=-0.336 shape=(1, 9000, 1)
logits [[ 0.2549802  -0.42119074  0.2516795  -1.4278368 ]]
Iteration 400 of 1000: loss=0.0862 " + "l1=0.0504" + "l2=0.0358 f=-0.334 shape=(1, 9000, 1)
logits [[ 0.19547388 -0.36953554  0.19811285 -1.3583581 ]]
Iteration 500 of 1000: loss=0.0797 " + "l1=0.0442" + "l2=0.0355 f=-0.327 shape=(1, 9000, 1)
logits [[ 0.1622203  -0.33444297  0.16393806 -1.3011209 ]]
Iteration 600 of 1000: loss=0.0745 " + "l1=0.0394" + "l2=0.0351 f=-0.321 shape=(1, 9000, 1)
logits [[ 0.139855   -0.3036205   0.13802744 -1.2587893 ]]
Iteration 700 of 1000: loss=0.0697 " + "l1=0.0335" + "l2=0.0362 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.10289015 -0.26552343  0.11145113 -1.2133642 ]]
Iteration 800 of 1000: loss=0.0629 " + "l1=0.0234" + "l2=0.0395 f=-0.306 shape=(1, 9000, 1)
logits [[ 0.05509935 -0.1992046   0.06439842 -1.1425518 ]]
Iteration 900 of 1000: loss=0.0532 " + "l1=0.013" + "l2=0.0402 f=-0.298 shape=(1, 9000, 1)
logits [[ 0.01208809 -0.13092364  0.01559627 -1.0890344 ]]
--- 316.70399594306946 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00709 " + "l1=0.00709" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.278851  -0.8430085  0.5697704 -2.1766734]]
Iteration 100 of 1000: loss=0.00679 " + "l1=0.00659" + "l2=0.000205 f=-0.296 shape=(1, 9000, 1)
logits [[ 1.2374147 -0.8402425  0.5786569 -2.160434 ]]
Iteration 200 of 1000: loss=0.0067 " + "l1=0.0065" + "l2=0.000202 f=-0.297 shape=(1, 9000, 1)
logits [[ 1.2294681  -0.83896637  0.5793958  -2.1578996 ]]
Iteration 300 of 1000: loss=0.00663 " + "l1=0.00638" + "l2=0.000249 f=-0.298 shape=(1, 9000, 1)
logits [[ 1.2191186  -0.8378571   0.58103967 -2.1545331 ]]
Iteration 400 of 1000: loss=0.00657 " + "l1=0.00625" + "l2=0.000316 f=-0.299 shape=(1, 9000, 1)
logits [[ 1.2080779  -0.83652717  0.58280367 -2.1507168 ]]
Iteration 500 of 1000: loss=0.00658 " + "l1=0.00614" + "l2=0.000443 f=-0.3 shape=(1, 9000, 1)
logits [[ 1.1978556  -0.83524483  0.5841969  -2.1468441 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0709 " + "l1=0.0709" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.278851  -0.8430085  0.5697704 -2.1766734]]
Iteration 100 of 1000: loss=0.0425 " + "l1=0.0288" + "l2=0.0137 f=-0.327 shape=(1, 9000, 1)
logits [[ 0.943085   -0.84001243  0.65510076 -2.067687  ]]
Iteration 200 of 1000: loss=0.0278 " + "l1=0.0108" + "l2=0.017 f=-0.351 shape=(1, 9000, 1)
logits [[ 0.78069764 -0.8485082   0.6731747  -2.0074763 ]]
Iteration 300 of 1000: loss=0.018 " + "l1=0.000489" + "l2=0.0175 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.6842846  -0.85442734  0.6793926  -1.9711176 ]]
Iteration 400 of 1000: loss=0.0135 " + "l1=0.000143" + "l2=0.0134 f=-0.367 shape=(1, 9000, 1)
logits [[ 0.683016   -0.86150235  0.68158495 -1.9724628 ]]
Iteration 500 of 1000: loss=0.011 " + "l1=0" + "l2=0.011 f=-0.368 shape=(1, 9000, 1)
logits [[ 0.67954534 -0.8645662   0.68138844 -1.966674  ]]
Iteration 600 of 1000: loss=0.00918 " + "l1=0" + "l2=0.00918 f=-0.367 shape=(1, 9000, 1)
logits [[ 0.67812914 -0.8652526   0.6806698  -1.9613246 ]]
Iteration 700 of 1000: loss=0.00796 " + "l1=0" + "l2=0.00796 f=-0.366 shape=(1, 9000, 1)
logits [[ 0.6770172  -0.86339664  0.6794088  -1.9568021 ]]
Iteration 800 of 1000: loss=0.0067 " + "l1=8.99e-05" + "l2=0.00661 f=-0.364 shape=(1, 9000, 1)
logits [[ 0.6770648 -0.8583715  0.6761657 -1.9523233]]
Iteration 900 of 1000: loss=0.00608 " + "l1=0" + "l2=0.00608 f=-0.364 shape=(1, 9000, 1)
logits [[ 0.67194515 -0.85531634  0.6757548  -1.9473022 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.039 " + "l1=0.039" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.278851  -0.8430085  0.5697704 -2.1766734]]
Iteration 100 of 1000: loss=0.0307 " + "l1=0.0268" + "l2=0.00398 f=-0.31 shape=(1, 9000, 1)
logits [[ 1.1012098 -0.8362622  0.6146277 -2.121396 ]]
Iteration 200 of 1000: loss=0.0259 " + "l1=0.0194" + "l2=0.00652 f=-0.322 shape=(1, 9000, 1)
logits [[ 0.99408305 -0.8366059   0.6418051  -2.0877926 ]]
Iteration 300 of 1000: loss=0.0215 " + "l1=0.0133" + "l2=0.00815 f=-0.334 shape=(1, 9000, 1)
logits [[ 0.8996379  -0.8401733   0.65743667 -2.0518181 ]]
Iteration 400 of 1000: loss=0.0182 " + "l1=0.00918" + "l2=0.00904 f=-0.344 shape=(1, 9000, 1)
logits [[ 0.83109355 -0.8442579   0.6642209  -2.0260503 ]]
Iteration 500 of 1000: loss=0.0152 " + "l1=0.00538" + "l2=0.00982 f=-0.354 shape=(1, 9000, 1)
logits [[ 0.76907533 -0.8484366   0.6712198  -2.0068145 ]]
Iteration 600 of 1000: loss=0.0122 " + "l1=0.00151" + "l2=0.0107 f=-0.363 shape=(1, 9000, 1)
logits [[ 0.7121371  -0.8605952   0.68473935 -1.9893944 ]]
Iteration 700 of 1000: loss=0.0096 " + "l1=0.000197" + "l2=0.0094 f=-0.366 shape=(1, 9000, 1)
logits [[ 0.6883008  -0.86458075  0.6847256  -1.9736781 ]]
Iteration 800 of 1000: loss=0.00798 " + "l1=0" + "l2=0.00798 f=-0.366 shape=(1, 9000, 1)
logits [[ 0.68242437 -0.86362463  0.68314666 -1.9659079 ]]
Iteration 900 of 1000: loss=0.00669 " + "l1=0" + "l2=0.00669 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.68032235 -0.85943455  0.68067354 -1.9597557 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.023 " + "l1=0.023" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.278851  -0.8430085  0.5697704 -2.1766734]]
Iteration 100 of 1000: loss=0.0202 " + "l1=0.0188" + "l2=0.00137 f=-0.302 shape=(1, 9000, 1)
logits [[ 1.1723638  -0.83673817  0.5928059  -2.1381164 ]]
Iteration 200 of 1000: loss=0.0188 " + "l1=0.0168" + "l2=0.002 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.1235018 -0.8342349  0.6056497 -2.1266816]]
Iteration 300 of 1000: loss=0.0176 " + "l1=0.0149" + "l2=0.00267 f=-0.313 shape=(1, 9000, 1)
logits [[ 1.076535  -0.8329995  0.6170687 -2.1124878]]
Iteration 400 of 1000: loss=0.0162 " + "l1=0.0126" + "l2=0.00359 f=-0.318 shape=(1, 9000, 1)
logits [[ 1.0190736  -0.83170146  0.6316809  -2.0926912 ]]
Iteration 500 of 1000: loss=0.0148 " + "l1=0.0106" + "l2=0.00424 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.96942794 -0.83360094  0.64454365 -2.0760014 ]]
Iteration 600 of 1000: loss=0.0137 " + "l1=0.00907" + "l2=0.00464 f=-0.329 shape=(1, 9000, 1)
logits [[ 0.92934835 -0.8349743   0.65032786 -2.06017   ]]
Iteration 700 of 1000: loss=0.0126 " + "l1=0.00762" + "l2=0.00494 f=-0.334 shape=(1, 9000, 1)
logits [[ 0.88996446 -0.83728063  0.65544146 -2.046087  ]]
Iteration 800 of 1000: loss=0.0115 " + "l1=0.00639" + "l2=0.0051 f=-0.339 shape=(1, 9000, 1)
logits [[ 0.856147   -0.8401222   0.65948516 -2.0329783 ]]
Iteration 900 of 1000: loss=0.0106 " + "l1=0.00513" + "l2=0.00547 f=-0.344 shape=(1, 9000, 1)
logits [[ 0.8207953  -0.8402715   0.66284335 -2.0210295 ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.031 " + "l1=0.031" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.278851  -0.8430085  0.5697704 -2.1766734]]
Iteration 100 of 1000: loss=0.0259 " + "l1=0.0234" + "l2=0.00251 f=-0.306 shape=(1, 9000, 1)
logits [[ 1.1372916 -0.835866   0.6034983 -2.1297076]]
Iteration 200 of 1000: loss=0.0233 " + "l1=0.0196" + "l2=0.00368 f=-0.314 shape=(1, 9000, 1)
logits [[ 1.0689293 -0.8347961  0.6213078 -2.11109  ]]
Iteration 300 of 1000: loss=0.0203 " + "l1=0.015" + "l2=0.00528 f=-0.323 shape=(1, 9000, 1)
logits [[ 0.9852743  -0.8352024   0.64219373 -2.0832138 ]]
Iteration 400 of 1000: loss=0.0178 " + "l1=0.0114" + "l2=0.0064 f=-0.332 shape=(1, 9000, 1)
logits [[ 0.9148032  -0.83779454  0.6536064  -2.0568566 ]]
Iteration 500 of 1000: loss=0.0158 " + "l1=0.00882" + "l2=0.00695 f=-0.339 shape=(1, 9000, 1)
logits [[ 0.8613537  -0.84142727  0.65981764 -2.0372698 ]]
Iteration 600 of 1000: loss=0.014 " + "l1=0.00665" + "l2=0.00732 f=-0.346 shape=(1, 9000, 1)
logits [[ 0.8169074 -0.845141   0.6648555 -2.0219357]]
Iteration 700 of 1000: loss=0.0121 " + "l1=0.00444" + "l2=0.00764 f=-0.353 shape=(1, 9000, 1)
logits [[ 0.77034116 -0.84442127  0.66880363 -2.0061347 ]]
Iteration 800 of 1000: loss=0.0101 " + "l1=0.00204" + "l2=0.0081 f=-0.36 shape=(1, 9000, 1)
logits [[ 0.7271997 -0.8547545  0.6806183 -1.9938197]]
Iteration 900 of 1000: loss=0.00821 " + "l1=3.24e-05" + "l2=0.00817 f=-0.366 shape=(1, 9000, 1)
logits [[ 0.6864426 -0.8603708  0.6857013 -1.9755285]]
--- 287.9569480419159 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0346 " + "l1=0.0346" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.278851  -0.8430085  0.5697704 -2.1766734]]
Iteration 100 of 1000: loss=0.0333 " + "l1=0.0327" + "l2=0.000619 f=-0.289 shape=(1, 9000, 1)
logits [[ 1.1970025 -0.8176536  0.5369644 -2.0732589]]
Iteration 200 of 1000: loss=0.0328 " + "l1=0.0321" + "l2=0.000776 f=-0.288 shape=(1, 9000, 1)
logits [[ 1.1693131  -0.80927825  0.5248074  -2.0363443 ]]
Iteration 300 of 1000: loss=0.0324 " + "l1=0.0313" + "l2=0.00102 f=-0.286 shape=(1, 9000, 1)
logits [[ 1.1388129  -0.79959726  0.5112231  -1.9945066 ]]
Iteration 400 of 1000: loss=0.0319 " + "l1=0.0306" + "l2=0.00128 f=-0.285 shape=(1, 9000, 1)
logits [[ 1.1054146  -0.7917801   0.49909273 -1.9514798 ]]
Iteration 500 of 1000: loss=0.0314 " + "l1=0.0298" + "l2=0.00162 f=-0.283 shape=(1, 9000, 1)
logits [[ 1.0713874  -0.78463155  0.4868857  -1.9072968 ]]
Iteration 600 of 1000: loss=0.0308 " + "l1=0.0289" + "l2=0.00195 f=-0.282 shape=(1, 9000, 1)
logits [[ 1.0319226  -0.77982706  0.47597703 -1.8569951 ]]
Iteration 700 of 1000: loss=0.0303 " + "l1=0.0281" + "l2=0.00223 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.9946779  -0.77910656  0.46965483 -1.8169045 ]]
Iteration 800 of 1000: loss=0.0299 " + "l1=0.0274" + "l2=0.00249 f=-0.284 shape=(1, 9000, 1)
logits [[ 0.9609678  -0.7786739   0.46543127 -1.7827154 ]]
Iteration 900 of 1000: loss=0.0296 " + "l1=0.0268" + "l2=0.00281 f=-0.284 shape=(1, 9000, 1)
logits [[ 0.928206   -0.77808565  0.4606981  -1.7488079 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.346 " + "l1=0.346" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.278851  -0.8430085  0.5697704 -2.1766734]]
Iteration 100 of 1000: loss=0.215 " + "l1=0.155" + "l2=0.0604 f=-0.268 shape=(1, 9000, 1)
logits [[ 0.41415155 -0.6246942   0.27241638 -1.1330535 ]]
Iteration 200 of 1000: loss=0.158 " + "l1=0.0908" + "l2=0.067 f=-0.245 shape=(1, 9000, 1)
logits [[ 0.17090297 -0.5804361   0.16820788 -0.7373868 ]]
Iteration 300 of 1000: loss=0.127 " + "l1=0.0493" + "l2=0.0778 f=-0.216 shape=(1, 9000, 1)
logits [[ 0.05670921 -0.55222774  0.06192461 -0.4315645 ]]
Iteration 400 of 1000: loss=0.0983 " + "l1=0.00949" + "l2=0.0888 f=-0.188 shape=(1, 9000, 1)
logits [[-0.0446129  -0.53073937 -0.04062659 -0.13548294]]
Iteration 500 of 1000: loss=0.0756 " + "l1=0" + "l2=0.0756 f=-0.174 shape=(1, 9000, 1)
logits [[-0.04269797 -0.58297276 -0.03821877 -0.03272084]]
Iteration 600 of 1000: loss=0.0626 " + "l1=0.000116" + "l2=0.0625 f=-0.169 shape=(1, 9000, 1)
logits [[-0.01581268 -0.6300656  -0.01356637 -0.01472248]]
Iteration 700 of 1000: loss=0.0541 " + "l1=0.00055" + "l2=0.0536 f=-0.166 shape=(1, 9000, 1)
logits [[ 0.00254477 -0.664342    0.00219045 -0.00295277]]
Iteration 800 of 1000: loss=0.0475 " + "l1=0" + "l2=0.0475 f=-0.163 shape=(1, 9000, 1)
logits [[ 0.0048664  -0.68498003  0.00837279  0.02082912]]
Iteration 900 of 1000: loss=0.0422 " + "l1=0" + "l2=0.0422 f=-0.163 shape=(1, 9000, 1)
logits [[ 0.00498377 -0.7009105   0.0178392   0.02633843]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.19 " + "l1=0.19" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.278851  -0.8430085  0.5697704 -2.1766734]]
Iteration 100 of 1000: loss=0.153 " + "l1=0.135" + "l2=0.0176 f=-0.278 shape=(1, 9000, 1)
logits [[ 0.834519  -0.7058581  0.3783438 -1.6206433]]
Iteration 200 of 1000: loss=0.128 " + "l1=0.101" + "l2=0.0271 f=-0.275 shape=(1, 9000, 1)
logits [[ 0.5416955 -0.6703702  0.3291597 -1.2989279]]
Iteration 300 of 1000: loss=0.11 " + "l1=0.0745" + "l2=0.0353 f=-0.272 shape=(1, 9000, 1)
logits [[ 0.3054986  -0.6424834   0.29955265 -1.0487689 ]]
Iteration 400 of 1000: loss=0.0989 " + "l1=0.0645" + "l2=0.0344 f=-0.26 shape=(1, 9000, 1)
logits [[ 0.25740167 -0.6337532   0.2533546  -0.91534156]]
Iteration 500 of 1000: loss=0.0902 " + "l1=0.055" + "l2=0.0351 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.21315148 -0.6313304   0.21397574 -0.7864872 ]]
Iteration 600 of 1000: loss=0.0819 " + "l1=0.0456" + "l2=0.0363 f=-0.234 shape=(1, 9000, 1)
logits [[ 0.1713332  -0.6309668   0.17708929 -0.6521662 ]]
Iteration 700 of 1000: loss=0.0745 " + "l1=0.0367" + "l2=0.0378 f=-0.221 shape=(1, 9000, 1)
logits [[ 0.13433184 -0.6254283   0.13711803 -0.53083324]]
Iteration 800 of 1000: loss=0.0662 " + "l1=0.0275" + "l2=0.0387 f=-0.208 shape=(1, 9000, 1)
logits [[ 0.09991496 -0.63319224  0.09973489 -0.40005666]]
Iteration 900 of 1000: loss=0.0585 " + "l1=0.0179" + "l2=0.0407 f=-0.196 shape=(1, 9000, 1)
logits [[ 0.05765853 -0.6401779   0.06122868 -0.26384467]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.268 " + "l1=0.268" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.278851  -0.8430085  0.5697704 -2.1766734]]
Iteration 100 of 1000: loss=0.191 " + "l1=0.155" + "l2=0.0354 f=-0.274 shape=(1, 9000, 1)
logits [[ 0.6273285  -0.6651562   0.31772506 -1.3762227 ]]
Iteration 200 of 1000: loss=0.146 " + "l1=0.0956" + "l2=0.0499 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.26675656 -0.6214117   0.25910798 -0.966987  ]]
Iteration 300 of 1000: loss=0.124 " + "l1=0.0731" + "l2=0.051 f=-0.246 shape=(1, 9000, 1)
logits [[ 0.18895528 -0.60285014  0.1850759  -0.7546777 ]]
Iteration 400 of 1000: loss=0.107 " + "l1=0.0521" + "l2=0.0552 f=-0.226 shape=(1, 9000, 1)
logits [[ 0.12003982 -0.5933093   0.12049896 -0.5520729 ]]
Iteration 500 of 1000: loss=0.0908 " + "l1=0.0315" + "l2=0.0593 f=-0.207 shape=(1, 9000, 1)
logits [[ 0.05453641 -0.5825552   0.05293163 -0.35190386]]
Iteration 600 of 1000: loss=0.0733 " + "l1=0.00816" + "l2=0.0652 f=-0.183 shape=(1, 9000, 1)
logits [[-0.0108737  -0.5965205  -0.01056075 -0.11581402]]
Iteration 700 of 1000: loss=0.0604 " + "l1=0" + "l2=0.0604 f=-0.173 shape=(1, 9000, 1)
logits [[-0.01950467 -0.63880086 -0.02021304 -0.01242216]]
Iteration 800 of 1000: loss=0.0513 " + "l1=0.000735" + "l2=0.0506 f=-0.171 shape=(1, 9000, 1)
logits [[ 7.7915378e-04 -6.7579496e-01 -5.2948622e-04 -8.7027252e-03]]
Iteration 900 of 1000: loss=0.0448 " + "l1=0.000338" + "l2=0.0444 f=-0.169 shape=(1, 9000, 1)
logits [[ 0.0102613  -0.7005942   0.00925886  0.00590614]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.229 " + "l1=0.229" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.278851  -0.8430085  0.5697704 -2.1766734]]
Iteration 100 of 1000: loss=0.173 " + "l1=0.148" + "l2=0.0255 f=-0.277 shape=(1, 9000, 1)
logits [[ 0.7333525  -0.6862054   0.34637448 -1.4999634 ]]
Iteration 200 of 1000: loss=0.139 " + "l1=0.0993" + "l2=0.0397 f=-0.271 shape=(1, 9000, 1)
logits [[ 0.38019922 -0.6397785   0.29328218 -1.1180139 ]]
Iteration 300 of 1000: loss=0.118 " + "l1=0.0755" + "l2=0.0425 f=-0.259 shape=(1, 9000, 1)
logits [[ 0.24208125 -0.6219285   0.2400276  -0.89697725]]
Iteration 400 of 1000: loss=0.105 " + "l1=0.0616" + "l2=0.0436 f=-0.244 shape=(1, 9000, 1)
logits [[ 0.18860331 -0.61848235  0.19141209 -0.73792267]]
Iteration 500 of 1000: loss=0.0929 " + "l1=0.0469" + "l2=0.046 f=-0.225 shape=(1, 9000, 1)
logits [[ 0.14117381 -0.61133873  0.1374445  -0.5665535 ]]
Iteration 600 of 1000: loss=0.0811 " + "l1=0.0327" + "l2=0.0483 f=-0.21 shape=(1, 9000, 1)
logits [[ 0.08763064 -0.6066998   0.08563664 -0.4060005 ]]
Iteration 700 of 1000: loss=0.0689 " + "l1=0.017" + "l2=0.0519 f=-0.193 shape=(1, 9000, 1)
logits [[ 0.03252624 -0.6168924   0.03399607 -0.22214055]]
Iteration 800 of 1000: loss=0.0582 " + "l1=0.00474" + "l2=0.0535 f=-0.18 shape=(1, 9000, 1)
logits [[-0.00506223 -0.6378585  -0.00254488 -0.07414355]]
Iteration 900 of 1000: loss=0.0494 " + "l1=0.000433" + "l2=0.049 f=-0.172 shape=(1, 9000, 1)
logits [[ 5.1061995e-04 -6.7979944e-01 -3.0117049e-03 -6.0242163e-03]]
--- 317.19010066986084 seconds ---
Adv result:3
Loading record A01853
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.038 " + "l1=0.038" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.7278485 -1.0725994  1.7594208 -5.1597624]]
Iteration 100 of 1000: loss=0.0375 " + "l1=0.0372" + "l2=0.000308 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.6739252 -1.041298   1.7377073 -5.1129932]]
Iteration 200 of 1000: loss=0.0373 " + "l1=0.0369" + "l2=0.000336 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.6618307 -1.0312402  1.7316942 -5.1025853]]
Iteration 300 of 1000: loss=0.0371 " + "l1=0.0367" + "l2=0.000409 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.6470823 -1.020244   1.7248497 -5.089991 ]]
Iteration 400 of 1000: loss=0.037 " + "l1=0.0364" + "l2=0.000553 f=-0.434 shape=(1, 9000, 1)
logits [[ 2.6316977 -1.0089377  1.7177944 -5.0768857]]
Iteration 500 of 1000: loss=0.0368 " + "l1=0.0362" + "l2=0.000651 f=-0.434 shape=(1, 9000, 1)
logits [[ 2.6171482 -0.9984916  1.7111193 -5.064649 ]]
Iteration 600 of 1000: loss=0.0367 " + "l1=0.0359" + "l2=0.000763 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.6035936  -0.98903257  1.7050757  -5.0533614 ]]
Iteration 700 of 1000: loss=0.0366 " + "l1=0.0357" + "l2=0.000883 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.5909212  -0.98081887  1.6997894  -5.042872  ]]
Iteration 800 of 1000: loss=0.0365 " + "l1=0.0355" + "l2=0.00101 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.5790844  -0.97330564  1.6948173  -5.0329328 ]]
Iteration 900 of 1000: loss=0.0365 " + "l1=0.0353" + "l2=0.00113 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.5674782 -0.9656142  1.6897705 -5.0232105]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.38 " + "l1=0.38" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.7278485 -1.0725994  1.7594208 -5.1597624]]
Iteration 100 of 1000: loss=0.334 " + "l1=0.312" + "l2=0.0219 f=-0.434 shape=(1, 9000, 1)
logits [[ 2.298207  -0.8184799  1.5923375 -4.8078136]]
Iteration 200 of 1000: loss=0.313 " + "l1=0.283" + "l2=0.0294 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.1114285 -0.720388   1.529827  -4.66512  ]]
Iteration 300 of 1000: loss=0.296 " + "l1=0.261" + "l2=0.0356 f=-0.437 shape=(1, 9000, 1)
logits [[ 1.9643884 -0.6416181  1.4777507 -4.5475235]]
Iteration 400 of 1000: loss=0.28 " + "l1=0.238" + "l2=0.0419 f=-0.437 shape=(1, 9000, 1)
logits [[ 1.8109808 -0.5722508  1.4251693 -4.4103494]]
Iteration 500 of 1000: loss=0.264 " + "l1=0.217" + "l2=0.0471 f=-0.435 shape=(1, 9000, 1)
logits [[ 1.6628969 -0.5089414  1.3786112 -4.27196  ]]
Iteration 600 of 1000: loss=0.249 " + "l1=0.196" + "l2=0.0523 f=-0.431 shape=(1, 9000, 1)
logits [[ 1.5167372  -0.44825712  1.3361444  -4.1273675 ]]
Iteration 700 of 1000: loss=0.233 " + "l1=0.177" + "l2=0.0559 f=-0.425 shape=(1, 9000, 1)
logits [[ 1.3821983  -0.39192933  1.2952749  -3.9863942 ]]
Iteration 800 of 1000: loss=0.219 " + "l1=0.16" + "l2=0.0588 f=-0.419 shape=(1, 9000, 1)
logits [[ 1.2615157  -0.33914623  1.2598133  -3.859498  ]]
Iteration 900 of 1000: loss=0.211 " + "l1=0.155" + "l2=0.0553 f=-0.415 shape=(1, 9000, 1)
logits [[ 1.2410386  -0.31214756  1.2379223  -3.8280709 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.8 " + "l1=3.8" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.7278485 -1.0725994  1.7594208 -5.1597624]]
Iteration 100 of 1000: loss=1.44 " + "l1=0.812" + "l2=0.629 f=-0.436 shape=(1, 9000, 1)
logits [[ 0.9133917  0.1020293  0.9141112 -3.6740654]]
Iteration 200 of 1000: loss=1.09 " + "l1=0.433" + "l2=0.66 f=-0.435 shape=(1, 9000, 1)
logits [[ 0.7702046   0.34328926  0.77587616 -3.6304712 ]]
Iteration 300 of 1000: loss=0.924 " + "l1=0.28" + "l2=0.644 f=-0.434 shape=(1, 9000, 1)
logits [[ 0.6853349   0.42752323  0.7078618  -3.5561118 ]]
Iteration 400 of 1000: loss=0.772 " + "l1=0.107" + "l2=0.665 f=-0.435 shape=(1, 9000, 1)
logits [[ 0.6440045   0.56365895  0.6704894  -3.6199324 ]]
Iteration 500 of 1000: loss=0.641 " + "l1=0.00268" + "l2=0.638 f=-0.43 shape=(1, 9000, 1)
logits [[ 0.58349925  0.626539    0.62922335 -3.5612187 ]]
Iteration 600 of 1000: loss=0.557 " + "l1=0.00635" + "l2=0.551 f=-0.424 shape=(1, 9000, 1)
logits [[ 0.58504826  0.6210857   0.62744    -3.5280542 ]]
Iteration 700 of 1000: loss=0.496 " + "l1=0.00397" + "l2=0.493 f=-0.415 shape=(1, 9000, 1)
logits [[ 0.60451555  0.6330095   0.63697654 -3.5357792 ]]
Iteration 800 of 1000: loss=0.457 " + "l1=0.0129" + "l2=0.444 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.61009216  0.6253086   0.63823146 -3.495049  ]]
Iteration 900 of 1000: loss=0.415 " + "l1=0" + "l2=0.415 f=-0.395 shape=(1, 9000, 1)
logits [[ 0.62004745  0.62963206  0.6276388  -3.4555619 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.09 " + "l1=2.09" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.7278485 -1.0725994  1.7594208 -5.1597624]]
Iteration 100 of 1000: loss=1.07 " + "l1=0.714" + "l2=0.352 f=-0.44 shape=(1, 9000, 1)
logits [[ 1.1200726  -0.17751442  1.1148369  -3.8178089 ]]
Iteration 200 of 1000: loss=0.877 " + "l1=0.532" + "l2=0.344 f=-0.436 shape=(1, 9000, 1)
logits [[ 9.599218e-01  7.527415e-04  9.682302e-01 -3.673458e+00]]
Iteration 300 of 1000: loss=0.763 " + "l1=0.448" + "l2=0.315 f=-0.43 shape=(1, 9000, 1)
logits [[ 0.9041933   0.08920889  0.9034142  -3.616124  ]]
Iteration 400 of 1000: loss=0.69 " + "l1=0.391" + "l2=0.299 f=-0.421 shape=(1, 9000, 1)
logits [[ 0.865867    0.15548576  0.8601645  -3.567037  ]]
Iteration 500 of 1000: loss=0.615 " + "l1=0.319" + "l2=0.296 f=-0.413 shape=(1, 9000, 1)
logits [[ 0.8150262   0.24288337  0.82377857 -3.5323722 ]]
Iteration 600 of 1000: loss=0.562 " + "l1=0.258" + "l2=0.304 f=-0.406 shape=(1, 9000, 1)
logits [[ 0.7809783   0.31365925  0.7833797  -3.5033433 ]]
Iteration 700 of 1000: loss=0.525 " + "l1=0.216" + "l2=0.309 f=-0.397 shape=(1, 9000, 1)
logits [[ 0.7315114   0.3565896   0.74919564 -3.4266007 ]]
Iteration 800 of 1000: loss=0.488 " + "l1=0.17" + "l2=0.318 f=-0.388 shape=(1, 9000, 1)
logits [[ 0.71198386  0.40943062  0.7182603  -3.3902152 ]]
Iteration 900 of 1000: loss=0.457 " + "l1=0.13" + "l2=0.327 f=-0.38 shape=(1, 9000, 1)
logits [[ 0.68498445  0.45433202  0.69044363 -3.3489578 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.95 " + "l1=2.95" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.7278485 -1.0725994  1.7594208 -5.1597624]]
Iteration 100 of 1000: loss=1.28 " + "l1=0.798" + "l2=0.481 f=-0.438 shape=(1, 9000, 1)
logits [[ 1.0012808  -0.02813217  0.9995244  -3.7233336 ]]
Iteration 200 of 1000: loss=1.02 " + "l1=0.516" + "l2=0.505 f=-0.437 shape=(1, 9000, 1)
logits [[ 0.8429662   0.1924379   0.85861766 -3.6423829 ]]
Iteration 300 of 1000: loss=0.869 " + "l1=0.383" + "l2=0.486 f=-0.436 shape=(1, 9000, 1)
logits [[ 0.7905706   0.30251956  0.7963258  -3.6334987 ]]
Iteration 400 of 1000: loss=0.765 " + "l1=0.287" + "l2=0.478 f=-0.431 shape=(1, 9000, 1)
logits [[ 0.73710155  0.37493026  0.7449217  -3.5818958 ]]
Iteration 500 of 1000: loss=0.665 " + "l1=0.194" + "l2=0.471 f=-0.422 shape=(1, 9000, 1)
logits [[ 0.697082    0.45445773  0.70493525 -3.543812  ]]
Iteration 600 of 1000: loss=0.584 " + "l1=0.119" + "l2=0.465 f=-0.41 shape=(1, 9000, 1)
logits [[ 0.66922057  0.51653177  0.6706545  -3.498191  ]]
Iteration 700 of 1000: loss=0.516 " + "l1=0.0457" + "l2=0.47 f=-0.401 shape=(1, 9000, 1)
logits [[ 0.6182506   0.5756099   0.63456535 -3.4338138 ]]
Iteration 800 of 1000: loss=0.455 " + "l1=0.00312" + "l2=0.452 f=-0.393 shape=(1, 9000, 1)
logits [[ 0.61146784  0.6145315   0.61855847 -3.4147398 ]]
Iteration 900 of 1000: loss=0.419 " + "l1=0" + "l2=0.419 f=-0.388 shape=(1, 9000, 1)
logits [[ 0.5951169   0.61717397  0.6136245  -3.3792303 ]]
--- 319.1329255104065 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00968 " + "l1=0.00968" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.7278485 -1.0725994  1.7594208 -5.1597624]]
Iteration 100 of 1000: loss=0.0095 " + "l1=0.00935" + "l2=0.000158 f=-0.437 shape=(1, 9000, 1)
logits [[ 2.6917737 -1.0694798  1.7571692 -5.125623 ]]
Iteration 200 of 1000: loss=0.00945 " + "l1=0.00932" + "l2=0.000135 f=-0.437 shape=(1, 9000, 1)
logits [[ 2.688886  -1.0692679  1.7570745 -5.12304  ]]
Iteration 300 of 1000: loss=0.00942 " + "l1=0.00926" + "l2=0.000153 f=-0.437 shape=(1, 9000, 1)
logits [[ 2.6830072 -1.0686518  1.7566209 -5.117585 ]]
Iteration 400 of 1000: loss=0.00942 " + "l1=0.00921" + "l2=0.000209 f=-0.437 shape=(1, 9000, 1)
logits [[ 2.6767457 -1.0678531  1.7560813 -5.111836 ]]
Iteration 500 of 1000: loss=0.0094 " + "l1=0.00915" + "l2=0.000255 f=-0.437 shape=(1, 9000, 1)
logits [[ 2.670499  -1.0669233  1.7554902 -5.106092 ]]
Iteration 600 of 1000: loss=0.00944 " + "l1=0.00909" + "l2=0.00035 f=-0.437 shape=(1, 9000, 1)
logits [[ 2.664395  -1.0658897  1.7549143 -5.10062  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0968 " + "l1=0.0968" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.7278485 -1.0725994  1.7594208 -5.1597624]]
Iteration 100 of 1000: loss=0.0816 " + "l1=0.0737" + "l2=0.00789 f=-0.438 shape=(1, 9000, 1)
logits [[ 2.4857194 -1.065577   1.7486385 -4.919167 ]]
Iteration 200 of 1000: loss=0.0749 " + "l1=0.0635" + "l2=0.0114 f=-0.438 shape=(1, 9000, 1)
logits [[ 2.3765597 -1.0565004  1.7418709 -4.8127036]]
Iteration 300 of 1000: loss=0.069 " + "l1=0.0555" + "l2=0.0135 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.2890162 -1.0453228  1.7343206 -4.723829 ]]
Iteration 400 of 1000: loss=0.0635 " + "l1=0.0478" + "l2=0.0158 f=-0.437 shape=(1, 9000, 1)
logits [[ 2.2057805 -1.0369469  1.7281336 -4.643055 ]]
Iteration 500 of 1000: loss=0.0579 " + "l1=0.0397" + "l2=0.0183 f=-0.437 shape=(1, 9000, 1)
logits [[ 2.1182387 -1.0270654  1.7217106 -4.560258 ]]
Iteration 600 of 1000: loss=0.0525 " + "l1=0.0315" + "l2=0.0209 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.031723  -1.0214168  1.7165806 -4.4688487]]
Iteration 700 of 1000: loss=0.0465 " + "l1=0.0227" + "l2=0.0238 f=-0.434 shape=(1, 9000, 1)
logits [[ 1.9401796 -1.0138866  1.7129477 -4.3737836]]
Iteration 800 of 1000: loss=0.0409 " + "l1=0.0156" + "l2=0.0253 f=-0.432 shape=(1, 9000, 1)
logits [[ 1.8676269 -1.0096978  1.7115438 -4.2967887]]
Iteration 900 of 1000: loss=0.036 " + "l1=0.00985" + "l2=0.0261 f=-0.431 shape=(1, 9000, 1)
logits [[ 1.8062025  -0.99859494  1.707684   -4.239401  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.968 " + "l1=0.968" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.7278485 -1.0725994  1.7594208 -5.1597624]]
Iteration 100 of 1000: loss=0.129 " + "l1=0" + "l2=0.129 f=-0.442 shape=(1, 9000, 1)
logits [[ 1.6867031 -1.011211   1.6935205 -4.138549 ]]
Iteration 200 of 1000: loss=0.0816 " + "l1=0" + "l2=0.0816 f=-0.438 shape=(1, 9000, 1)
logits [[ 1.6870004 -0.9745048  1.6930195 -4.1583967]]
Iteration 300 of 1000: loss=0.0617 " + "l1=0.000193" + "l2=0.0615 f=-0.433 shape=(1, 9000, 1)
logits [[ 1.7007025 -0.96849    1.7005095 -4.164661 ]]
Iteration 400 of 1000: loss=0.0554 " + "l1=0.00528" + "l2=0.0501 f=-0.429 shape=(1, 9000, 1)
logits [[ 1.7060648 -0.9591278  1.7007873 -4.165591 ]]
Iteration 500 of 1000: loss=0.0457 " + "l1=0" + "l2=0.0457 f=-0.428 shape=(1, 9000, 1)
logits [[ 1.6782181 -0.9409604  1.6917299 -4.1397986]]
Iteration 600 of 1000: loss=0.0405 " + "l1=0" + "l2=0.0405 f=-0.425 shape=(1, 9000, 1)
logits [[ 1.6697001 -0.9288868  1.6861602 -4.128238 ]]
Iteration 700 of 1000: loss=0.0359 " + "l1=0" + "l2=0.0359 f=-0.424 shape=(1, 9000, 1)
logits [[ 1.6707258 -0.9243056  1.6831963 -4.1247945]]
Iteration 800 of 1000: loss=0.032 " + "l1=0" + "l2=0.032 f=-0.422 shape=(1, 9000, 1)
logits [[ 1.6756893  -0.92297167  1.6821033  -4.124394  ]]
Iteration 900 of 1000: loss=0.0315 " + "l1=0" + "l2=0.0315 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.6523703  -0.91804296  1.678213   -4.0981617 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.533 " + "l1=0.533" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.7278485 -1.0725994  1.7594208 -5.1597624]]
Iteration 100 of 1000: loss=0.13 " + "l1=0" + "l2=0.13 f=-0.442 shape=(1, 9000, 1)
logits [[ 1.6902816 -1.0231785  1.6929764 -4.1268954]]
Iteration 200 of 1000: loss=0.0773 " + "l1=0.000254" + "l2=0.077 f=-0.436 shape=(1, 9000, 1)
logits [[ 1.699546  -0.9852049  1.6990843 -4.159004 ]]
Iteration 300 of 1000: loss=0.0591 " + "l1=0" + "l2=0.0591 f=-0.432 shape=(1, 9000, 1)
logits [[ 1.7003558  -0.97399473  1.7057574  -4.159616  ]]
Iteration 400 of 1000: loss=0.0483 " + "l1=0" + "l2=0.0483 f=-0.428 shape=(1, 9000, 1)
logits [[ 1.703385   -0.96315515  1.7048618  -4.157828  ]]
Iteration 500 of 1000: loss=0.043 " + "l1=0" + "l2=0.043 f=-0.425 shape=(1, 9000, 1)
logits [[ 1.688677  -0.9574246  1.7018672 -4.1351027]]
Iteration 600 of 1000: loss=0.0364 " + "l1=0" + "l2=0.0364 f=-0.424 shape=(1, 9000, 1)
logits [[ 1.6911534  -0.94412464  1.6957989  -4.140304  ]]
Iteration 700 of 1000: loss=0.0332 " + "l1=0" + "l2=0.0332 f=-0.424 shape=(1, 9000, 1)
logits [[ 1.6757495  -0.93312174  1.6889867  -4.1260915 ]]
Iteration 800 of 1000: loss=0.0298 " + "l1=0" + "l2=0.0298 f=-0.422 shape=(1, 9000, 1)
logits [[ 1.6739851 -0.9269062  1.6846352 -4.121504 ]]
Iteration 900 of 1000: loss=0.0272 " + "l1=0" + "l2=0.0272 f=-0.422 shape=(1, 9000, 1)
logits [[ 1.6765982 -0.9251565  1.6824844 -4.120406 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.315 " + "l1=0.315" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.7278485 -1.0725994  1.7594208 -5.1597624]]
Iteration 100 of 1000: loss=0.159 " + "l1=0.0863" + "l2=0.0722 f=-0.445 shape=(1, 9000, 1)
logits [[ 1.9837048 -1.0391588  1.7180551 -4.443178 ]]
Iteration 200 of 1000: loss=0.0859 " + "l1=0.000131" + "l2=0.0857 f=-0.437 shape=(1, 9000, 1)
logits [[ 1.7046679 -0.9999971  1.704264  -4.1586237]]
Iteration 300 of 1000: loss=0.0597 " + "l1=0" + "l2=0.0597 f=-0.432 shape=(1, 9000, 1)
logits [[ 1.7107868 -0.982185   1.7126318 -4.1695886]]
Iteration 400 of 1000: loss=0.0487 " + "l1=0" + "l2=0.0487 f=-0.428 shape=(1, 9000, 1)
logits [[ 1.7054318 -0.9733154  1.7125038 -4.1576886]]
Iteration 500 of 1000: loss=0.0411 " + "l1=0.00103" + "l2=0.0401 f=-0.426 shape=(1, 9000, 1)
logits [[ 1.713127   -0.96789306  1.7099657  -4.158143  ]]
Iteration 600 of 1000: loss=0.036 " + "l1=0" + "l2=0.036 f=-0.424 shape=(1, 9000, 1)
logits [[ 1.6960651  -0.95946974  1.7049344  -4.138748  ]]
Iteration 700 of 1000: loss=0.0318 " + "l1=0" + "l2=0.0318 f=-0.423 shape=(1, 9000, 1)
logits [[ 1.6880711  -0.94752365  1.6981652  -4.1308    ]]
Iteration 800 of 1000: loss=0.0281 " + "l1=0" + "l2=0.0281 f=-0.423 shape=(1, 9000, 1)
logits [[ 1.6866548 -0.9358433  1.6906973 -4.1325383]]
Iteration 900 of 1000: loss=0.0258 " + "l1=0.000226" + "l2=0.0256 f=-0.422 shape=(1, 9000, 1)
logits [[ 1.6873088  -0.93058914  1.6866142  -4.1308045 ]]
--- 293.6463215351105 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0789 " + "l1=0.0789" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.7278485 -1.0725994  1.7594208 -5.1597624]]
Iteration 100 of 1000: loss=0.0775 " + "l1=0.0768" + "l2=0.000711 f=-0.431 shape=(1, 9000, 1)
logits [[ 2.6448011 -1.0628306  1.7308913 -5.035625 ]]
Iteration 200 of 1000: loss=0.0771 " + "l1=0.0762" + "l2=0.000844 f=-0.429 shape=(1, 9000, 1)
logits [[ 2.6214066 -1.057555   1.7218235 -5.0006747]]
Iteration 300 of 1000: loss=0.0766 " + "l1=0.0756" + "l2=0.00105 f=-0.427 shape=(1, 9000, 1)
logits [[ 2.596499  -1.0523585  1.7123208 -4.963153 ]]
Iteration 400 of 1000: loss=0.0763 " + "l1=0.075" + "l2=0.00128 f=-0.425 shape=(1, 9000, 1)
logits [[ 2.571918  -1.0476466  1.7029153 -4.92579  ]]
Iteration 500 of 1000: loss=0.0759 " + "l1=0.0744" + "l2=0.00154 f=-0.423 shape=(1, 9000, 1)
logits [[ 2.5472023 -1.0427479  1.6930171 -4.888009 ]]
Iteration 600 of 1000: loss=0.0755 " + "l1=0.0737" + "l2=0.00179 f=-0.421 shape=(1, 9000, 1)
logits [[ 2.5233943 -1.0385759  1.6833317 -4.8507533]]
Iteration 700 of 1000: loss=0.0752 " + "l1=0.0732" + "l2=0.00207 f=-0.419 shape=(1, 9000, 1)
logits [[ 2.5009093 -1.0346988  1.6741506 -4.815226 ]]
Iteration 800 of 1000: loss=0.0751 " + "l1=0.0726" + "l2=0.00246 f=-0.417 shape=(1, 9000, 1)
logits [[ 2.479654  -1.0307825  1.6655107 -4.782117 ]]
Iteration 900 of 1000: loss=0.0748 " + "l1=0.0721" + "l2=0.00267 f=-0.415 shape=(1, 9000, 1)
logits [[ 2.459245  -1.0267706  1.6572385 -4.750984 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.789 " + "l1=0.789" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.7278485 -1.0725994  1.7594208 -5.1597624]]
Iteration 100 of 1000: loss=0.665 " + "l1=0.603" + "l2=0.0621 f=-0.397 shape=(1, 9000, 1)
logits [[ 1.9771718 -1.0178378  1.5081488 -4.0547247]]
Iteration 200 of 1000: loss=0.597 " + "l1=0.501" + "l2=0.0961 f=-0.368 shape=(1, 9000, 1)
logits [[ 1.5639601 -0.9551978  1.3613062 -3.444064 ]]
Iteration 300 of 1000: loss=0.534 " + "l1=0.421" + "l2=0.113 f=-0.345 shape=(1, 9000, 1)
logits [[ 1.2539111 -0.9352805  1.2547026 -2.9527524]]
Iteration 400 of 1000: loss=0.497 " + "l1=0.395" + "l2=0.101 f=-0.324 shape=(1, 9000, 1)
logits [[ 1.192295  -0.9271061  1.1963845 -2.757119 ]]
Iteration 500 of 1000: loss=0.472 " + "l1=0.372" + "l2=0.0996 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.1276386 -0.9220653  1.1417286 -2.5787117]]
Iteration 600 of 1000: loss=0.451 " + "l1=0.347" + "l2=0.104 f=-0.294 shape=(1, 9000, 1)
logits [[ 1.0275211 -0.9126519  1.0911489 -2.3819184]]
Iteration 700 of 1000: loss=0.436 " + "l1=0.328" + "l2=0.107 f=-0.284 shape=(1, 9000, 1)
logits [[ 0.93371105 -0.89385056  1.0525923  -2.230202  ]]
Iteration 800 of 1000: loss=0.423 " + "l1=0.313" + "l2=0.11 f=-0.278 shape=(1, 9000, 1)
logits [[ 0.84916186 -0.87652737  1.0237358  -2.1064765 ]]
Iteration 900 of 1000: loss=0.412 " + "l1=0.3" + "l2=0.112 f=-0.273 shape=(1, 9000, 1)
logits [[ 0.7727232  -0.8606463   0.99711376 -1.9998047 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.89 " + "l1=7.89" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.7278485 -1.0725994  1.7594208 -5.1597624]]
Iteration 100 of 1000: loss=2.24 " + "l1=0.508" + "l2=1.74 f=-0.253 shape=(1, 9000, 1)
logits [[-0.45808655 -0.9700123   0.46142444 -0.04682638]]
Iteration 200 of 1000: loss=1.35 " + "l1=0" + "l2=1.35 f=-0.213 shape=(1, 9000, 1)
logits [[-0.6001412  -0.9718725   0.35712633  0.3613581 ]]
Iteration 300 of 1000: loss=1.07 " + "l1=0.017" + "l2=1.05 f=-0.208 shape=(1, 9000, 1)
logits [[-0.57215965 -0.9793534   0.36813208  0.3511721 ]]
Iteration 400 of 1000: loss=0.934 " + "l1=0" + "l2=0.934 f=-0.201 shape=(1, 9000, 1)
logits [[-0.578255   -0.98443395  0.37184712  0.38623634]]
Iteration 500 of 1000: loss=0.851 " + "l1=0" + "l2=0.851 f=-0.201 shape=(1, 9000, 1)
logits [[-0.59670347 -0.9887175   0.38160476  0.39848956]]
Iteration 600 of 1000: loss=0.796 " + "l1=0" + "l2=0.796 f=-0.203 shape=(1, 9000, 1)
logits [[-0.62734205 -0.9908075   0.3865812   0.41844764]]
Iteration 700 of 1000: loss=0.737 " + "l1=0" + "l2=0.737 f=-0.206 shape=(1, 9000, 1)
logits [[-0.62711424 -0.98533666  0.39368075  0.39408648]]
Iteration 800 of 1000: loss=0.711 " + "l1=0" + "l2=0.711 f=-0.208 shape=(1, 9000, 1)
logits [[-0.6556477 -0.9791991  0.385145   0.4186694]]
Iteration 900 of 1000: loss=0.684 " + "l1=0" + "l2=0.684 f=-0.211 shape=(1, 9000, 1)
logits [[-0.67037183 -0.97570914  0.3780595   0.4228422 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.34 " + "l1=4.34" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.7278485 -1.0725994  1.7594208 -5.1597624]]
Iteration 100 of 1000: loss=1.96 " + "l1=1.12" + "l2=0.842 f=-0.3 shape=(1, 9000, 1)
logits [[ 0.241431   -0.97064275  0.7848219  -1.2554467 ]]
Iteration 200 of 1000: loss=1.35 " + "l1=0.432" + "l2=0.922 f=-0.254 shape=(1, 9000, 1)
logits [[-0.28274485 -1.0086141   0.5305278  -0.25479224]]
Iteration 300 of 1000: loss=1.01 " + "l1=0.0394" + "l2=0.97 f=-0.214 shape=(1, 9000, 1)
logits [[-0.571113   -0.98729724  0.38749072  0.31578025]]
Iteration 400 of 1000: loss=0.837 " + "l1=0" + "l2=0.837 f=-0.207 shape=(1, 9000, 1)
logits [[-0.60978436 -1.012497    0.39097667  0.40198582]]
Iteration 500 of 1000: loss=0.744 " + "l1=0.00751" + "l2=0.736 f=-0.21 shape=(1, 9000, 1)
logits [[-0.62070733 -1.0193692   0.40735972  0.39371368]]
Iteration 600 of 1000: loss=0.682 " + "l1=0" + "l2=0.682 f=-0.212 shape=(1, 9000, 1)
logits [[-0.6428136  -1.0088203   0.39458665  0.41088778]]
Iteration 700 of 1000: loss=0.638 " + "l1=0" + "l2=0.638 f=-0.214 shape=(1, 9000, 1)
logits [[-0.6565597  -0.9994492   0.39195552  0.40619877]]
Iteration 800 of 1000: loss=0.604 " + "l1=0.00163" + "l2=0.603 f=-0.218 shape=(1, 9000, 1)
logits [[-0.65625405 -1.0105559   0.3993629   0.39640048]]
Iteration 900 of 1000: loss=0.579 " + "l1=0" + "l2=0.579 f=-0.218 shape=(1, 9000, 1)
logits [[-0.66113317 -1.0243114   0.40211228  0.4093732 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.56 " + "l1=2.56" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.7278485 -1.0725994  1.7594208 -5.1597624]]
Iteration 100 of 1000: loss=1.5 " + "l1=1.17" + "l2=0.331 f=-0.329 shape=(1, 9000, 1)
logits [[ 1.0481254 -0.9448805  1.0921279 -2.512518 ]]
Iteration 200 of 1000: loss=1.21 " + "l1=0.801" + "l2=0.406 f=-0.296 shape=(1, 9000, 1)
logits [[ 0.5092254 -0.9476944  0.8590438 -1.6045853]]
Iteration 300 of 1000: loss=0.981 " + "l1=0.484" + "l2=0.497 f=-0.273 shape=(1, 9000, 1)
logits [[ 0.03340996 -1.0045122   0.6841318  -0.8047325 ]]
Iteration 400 of 1000: loss=0.809 " + "l1=0.31" + "l2=0.499 f=-0.25 shape=(1, 9000, 1)
logits [[-0.22909051 -1.001544    0.5919586  -0.3631583 ]]
Iteration 500 of 1000: loss=0.691 " + "l1=0.19" + "l2=0.5 f=-0.231 shape=(1, 9000, 1)
logits [[-0.39969227 -0.99173087  0.5269063  -0.05894615]]
Iteration 600 of 1000: loss=0.591 " + "l1=0.0484" + "l2=0.543 f=-0.215 shape=(1, 9000, 1)
logits [[-0.5992007  -0.96319383  0.42491418  0.27604377]]
Iteration 700 of 1000: loss=0.511 " + "l1=0.00188" + "l2=0.509 f=-0.207 shape=(1, 9000, 1)
logits [[-0.6603817  -0.9345573   0.38629627  0.38049728]]
Iteration 800 of 1000: loss=0.471 " + "l1=0.00829" + "l2=0.463 f=-0.203 shape=(1, 9000, 1)
logits [[-0.6526212  -0.8985371   0.38300112  0.3575039 ]]
Iteration 900 of 1000: loss=0.443 " + "l1=0" + "l2=0.443 f=-0.201 shape=(1, 9000, 1)
logits [[-0.67471653 -0.8749961   0.37049073  0.37577856]]
--- 321.3674409389496 seconds ---
Adv result:3
Loading record A01869
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0627 " + "l1=0.0627" + "l2=0 f=-0.237 shape=(1, 9000, 1)
logits [[ 3.2194958 -3.0528228  2.8377278 -3.9532335]]
Iteration 100 of 1000: loss=0.0622 " + "l1=0.0619" + "l2=0.000328 f=-0.234 shape=(1, 9000, 1)
logits [[ 3.1807497 -3.0059903  2.7969863 -3.909276 ]]
Iteration 200 of 1000: loss=0.0621 " + "l1=0.0617" + "l2=0.000332 f=-0.234 shape=(1, 9000, 1)
logits [[ 3.1738377 -2.998556   2.7904205 -3.9016564]]
Iteration 300 of 1000: loss=0.0619 " + "l1=0.0615" + "l2=0.000416 f=-0.233 shape=(1, 9000, 1)
logits [[ 3.1645358 -2.988317   2.781439  -3.8915758]]
Iteration 400 of 1000: loss=0.0618 " + "l1=0.0613" + "l2=0.000481 f=-0.233 shape=(1, 9000, 1)
logits [[ 3.1547391 -2.9780633  2.7724533 -3.881313 ]]
Iteration 500 of 1000: loss=0.0617 " + "l1=0.0611" + "l2=0.000598 f=-0.233 shape=(1, 9000, 1)
logits [[ 3.1445634 -2.9682117  2.7639272 -3.870952 ]]
Iteration 600 of 1000: loss=0.0616 " + "l1=0.0609" + "l2=0.0007 f=-0.232 shape=(1, 9000, 1)
logits [[ 3.1348412 -2.9588559  2.7559946 -3.861224 ]]
Iteration 700 of 1000: loss=0.0616 " + "l1=0.0607" + "l2=0.000898 f=-0.232 shape=(1, 9000, 1)
logits [[ 3.1249247 -2.949486   2.748132  -3.8512597]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.627 " + "l1=0.627" + "l2=0 f=-0.237 shape=(1, 9000, 1)
logits [[ 3.2194958 -3.0528228  2.8377278 -3.9532335]]
Iteration 100 of 1000: loss=0.576 " + "l1=0.546" + "l2=0.0297 f=-0.213 shape=(1, 9000, 1)
logits [[ 2.8646295 -2.5982435  2.4519742 -3.5695608]]
Iteration 200 of 1000: loss=0.549 " + "l1=0.503" + "l2=0.0462 f=-0.195 shape=(1, 9000, 1)
logits [[ 2.6823223 -2.3478203  2.205664  -3.3191373]]
Iteration 300 of 1000: loss=0.529 " + "l1=0.474" + "l2=0.0546 f=-0.19 shape=(1, 9000, 1)
logits [[ 2.5508652 -2.1914597  2.0426998 -3.1621416]]
Iteration 400 of 1000: loss=0.513 " + "l1=0.452" + "l2=0.0614 f=-0.187 shape=(1, 9000, 1)
logits [[ 2.4291646 -2.0890522  1.9278716 -3.0175548]]
Iteration 500 of 1000: loss=0.499 " + "l1=0.43" + "l2=0.0686 f=-0.188 shape=(1, 9000, 1)
logits [[ 2.2981923 -2.0059464  1.8356562 -2.8779027]]
Iteration 600 of 1000: loss=0.484 " + "l1=0.41" + "l2=0.074 f=-0.189 shape=(1, 9000, 1)
logits [[ 2.1615767 -1.9428548  1.7531996 -2.7280517]]
Iteration 700 of 1000: loss=0.468 " + "l1=0.389" + "l2=0.0788 f=-0.188 shape=(1, 9000, 1)
logits [[ 2.0087729 -1.8818557  1.673783  -2.5515316]]
Iteration 800 of 1000: loss=0.448 " + "l1=0.365" + "l2=0.083 f=-0.186 shape=(1, 9000, 1)
logits [[ 1.8308874 -1.8163248  1.5959686 -2.3557003]]
Iteration 900 of 1000: loss=0.426 " + "l1=0.34" + "l2=0.0858 f=-0.184 shape=(1, 9000, 1)
logits [[ 1.6479521 -1.748877   1.5250736 -2.1583903]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.27 " + "l1=6.27" + "l2=0 f=-0.237 shape=(1, 9000, 1)
logits [[ 3.2194958 -3.0528228  2.8377278 -3.9532335]]
Iteration 100 of 1000: loss=1.72 " + "l1=0.278" + "l2=1.44 f=-0.253 shape=(1, 9000, 1)
logits [[ 0.11262414 -0.07250525  0.20532835 -1.2584562 ]]
Iteration 200 of 1000: loss=1.08 " + "l1=0.0115" + "l2=1.07 f=-0.25 shape=(1, 9000, 1)
logits [[ 0.04045714  0.06481755  0.07631715 -1.1816732 ]]
Iteration 300 of 1000: loss=0.951 " + "l1=0.00765" + "l2=0.944 f=-0.252 shape=(1, 9000, 1)
logits [[ 0.0268846   0.05293375  0.0605833  -1.1478887 ]]
Iteration 400 of 1000: loss=0.885 " + "l1=0" + "l2=0.885 f=-0.257 shape=(1, 9000, 1)
logits [[-0.00870743  0.05107442  0.04349729 -1.1143028 ]]
Iteration 500 of 1000: loss=0.827 " + "l1=0" + "l2=0.827 f=-0.265 shape=(1, 9000, 1)
logits [[-0.03854528  0.04469244  0.04308168 -1.1097046 ]]
Iteration 600 of 1000: loss=0.792 " + "l1=0" + "l2=0.792 f=-0.273 shape=(1, 9000, 1)
logits [[-0.06261119  0.04151329  0.03929192 -1.1119498 ]]
Iteration 700 of 1000: loss=0.786 " + "l1=0.0286" + "l2=0.757 f=-0.275 shape=(1, 9000, 1)
logits [[-0.04862115  0.01813084  0.04675741 -1.1146312 ]]
Iteration 800 of 1000: loss=0.746 " + "l1=0.00143" + "l2=0.745 f=-0.279 shape=(1, 9000, 1)
logits [[-0.08538081  0.03145096  0.03287632 -1.0946727 ]]
Iteration 900 of 1000: loss=0.732 " + "l1=0" + "l2=0.732 f=-0.28 shape=(1, 9000, 1)
logits [[-0.08249988  0.02906858  0.02056115 -1.0888532 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.45 " + "l1=3.45" + "l2=0 f=-0.237 shape=(1, 9000, 1)
logits [[ 3.2194958 -3.0528228  2.8377278 -3.9532335]]
Iteration 100 of 1000: loss=1.59 " + "l1=0.684" + "l2=0.902 f=-0.177 shape=(1, 9000, 1)
logits [[ 0.5979655  -0.64153     0.60274976 -1.2665833 ]]
Iteration 200 of 1000: loss=1.08 " + "l1=0.145" + "l2=0.939 f=-0.234 shape=(1, 9000, 1)
logits [[ 0.16660777 -0.07012597  0.19369717 -1.2253051 ]]
Iteration 300 of 1000: loss=0.882 " + "l1=0.00362" + "l2=0.879 f=-0.254 shape=(1, 9000, 1)
logits [[-0.03329718  0.07860149  0.085188   -1.1461892 ]]
Iteration 400 of 1000: loss=0.813 " + "l1=0.00728" + "l2=0.806 f=-0.257 shape=(1, 9000, 1)
logits [[-0.03654679  0.05889186  0.07213525 -1.1219256 ]]
Iteration 500 of 1000: loss=0.77 " + "l1=0" + "l2=0.77 f=-0.279 shape=(1, 9000, 1)
logits [[-0.09974418  0.06738359  0.06532175 -1.1476474 ]]
Iteration 600 of 1000: loss=0.737 " + "l1=0.0084" + "l2=0.728 f=-0.277 shape=(1, 9000, 1)
logits [[-0.10876528  0.05636597  0.07164355 -1.125495  ]]
Iteration 700 of 1000: loss=0.71 " + "l1=0" + "l2=0.71 f=-0.283 shape=(1, 9000, 1)
logits [[-0.16557994  0.0637164   0.06236598 -1.0936279 ]]
Iteration 800 of 1000: loss=0.696 " + "l1=0.0105" + "l2=0.686 f=-0.281 shape=(1, 9000, 1)
logits [[-0.15626577  0.04053817  0.05967329 -1.0685561 ]]
Iteration 900 of 1000: loss=0.678 " + "l1=0.00511" + "l2=0.673 f=-0.289 shape=(1, 9000, 1)
logits [[-0.20197618  0.03406381  0.04335592 -1.031503  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.04 " + "l1=2.04" + "l2=0 f=-0.237 shape=(1, 9000, 1)
logits [[ 3.2194958 -3.0528228  2.8377278 -3.9532335]]
Iteration 100 of 1000: loss=1.4 " + "l1=1.04" + "l2=0.364 f=-0.134 shape=(1, 9000, 1)
logits [[ 1.7584578 -1.4311358  1.3048971 -2.1675885]]
Iteration 200 of 1000: loss=1.03 " + "l1=0.492" + "l2=0.543 f=-0.142 shape=(1, 9000, 1)
logits [[ 0.7432661  -0.77009046  0.72837764 -1.2689523 ]]
Iteration 300 of 1000: loss=0.871 " + "l1=0.355" + "l2=0.516 f=-0.173 shape=(1, 9000, 1)
logits [[ 0.5338787  -0.54924244  0.54352677 -1.2188349 ]]
Iteration 400 of 1000: loss=0.794 " + "l1=0.288" + "l2=0.506 f=-0.189 shape=(1, 9000, 1)
logits [[ 0.43003532 -0.44229496  0.4426737  -1.1853222 ]]
Iteration 500 of 1000: loss=0.75 " + "l1=0.231" + "l2=0.519 f=-0.205 shape=(1, 9000, 1)
logits [[ 0.34058696 -0.36013845  0.3520598  -1.1530197 ]]
Iteration 600 of 1000: loss=0.714 " + "l1=0.178" + "l2=0.536 f=-0.227 shape=(1, 9000, 1)
logits [[ 0.24875382 -0.27431422  0.2737078  -1.1548896 ]]
Iteration 700 of 1000: loss=0.679 " + "l1=0.151" + "l2=0.528 f=-0.24 shape=(1, 9000, 1)
logits [[ 0.13489458 -0.22689421  0.23811589 -1.1053264 ]]
Iteration 800 of 1000: loss=0.634 " + "l1=0.138" + "l2=0.496 f=-0.245 shape=(1, 9000, 1)
logits [[ 0.04572034 -0.21028541  0.21416219 -1.0308838 ]]
Iteration 900 of 1000: loss=0.527 " + "l1=0.0545" + "l2=0.472 f=-0.272 shape=(1, 9000, 1)
logits [[-0.24116713 -0.06842586  0.09916708 -0.87578475]]
--- 301.4065103530884 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00382 " + "l1=0.00382" + "l2=0 f=-0.237 shape=(1, 9000, 1)
logits [[ 3.2194958 -3.0528228  2.8377278 -3.9532335]]
Iteration 100 of 1000: loss=0.00351 " + "l1=0.00326" + "l2=0.000252 f=-0.239 shape=(1, 9000, 1)
logits [[ 3.1911352 -3.0756204  2.8651657 -3.9348063]]
Iteration 200 of 1000: loss=0.00343 " + "l1=0.00321" + "l2=0.00022 f=-0.239 shape=(1, 9000, 1)
logits [[ 3.1896572 -3.0787387  2.86906   -3.9361022]]
Iteration 300 of 1000: loss=0.00339 " + "l1=0.00312" + "l2=0.000269 f=-0.24 shape=(1, 9000, 1)
logits [[ 3.1859515 -3.0831187  2.8742707 -3.9351242]]
Iteration 400 of 1000: loss=0.00338 " + "l1=0.00303" + "l2=0.000348 f=-0.24 shape=(1, 9000, 1)
logits [[ 3.1816025 -3.087075   2.8788168 -3.9332478]]
Iteration 500 of 1000: loss=0.00336 " + "l1=0.00295" + "l2=0.000411 f=-0.24 shape=(1, 9000, 1)
logits [[ 3.1771243 -3.0902328  2.8822956 -3.9306421]]
Iteration 600 of 1000: loss=0.00333 " + "l1=0.00288" + "l2=0.000457 f=-0.241 shape=(1, 9000, 1)
logits [[ 3.1726828 -3.0929234  2.8851042 -3.927674 ]]
Iteration 700 of 1000: loss=0.00335 " + "l1=0.00281" + "l2=0.000543 f=-0.241 shape=(1, 9000, 1)
logits [[ 3.1681705 -3.0952082  2.8874238 -3.924497 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0382 " + "l1=0.0382" + "l2=0 f=-0.237 shape=(1, 9000, 1)
logits [[ 3.2194958 -3.0528228  2.8377278 -3.9532335]]
Iteration 100 of 1000: loss=0.0148 " + "l1=0.00332" + "l2=0.0115 f=-0.245 shape=(1, 9000, 1)
logits [[ 3.0584438 -3.2090669  3.025199  -3.8531897]]
Iteration 200 of 1000: loss=0.00952 " + "l1=0.000149" + "l2=0.00937 f=-0.247 shape=(1, 9000, 1)
logits [[ 3.0434034 -3.225244   3.0419085 -3.8499234]]
Iteration 300 of 1000: loss=0.00778 " + "l1=0" + "l2=0.00778 f=-0.248 shape=(1, 9000, 1)
logits [[ 3.0377321 -3.2243073  3.0391405 -3.8465314]]
Iteration 400 of 1000: loss=0.00678 " + "l1=0" + "l2=0.00678 f=-0.249 shape=(1, 9000, 1)
logits [[ 3.0314438 -3.220858   3.0322607 -3.8383825]]
Iteration 500 of 1000: loss=0.00622 " + "l1=0.000155" + "l2=0.00606 f=-0.249 shape=(1, 9000, 1)
logits [[ 3.024032  -3.2152925  3.0224864 -3.8274298]]
Iteration 600 of 1000: loss=0.00564 " + "l1=0" + "l2=0.00564 f=-0.249 shape=(1, 9000, 1)
logits [[ 3.0137813 -3.21107    3.0143638 -3.8145123]]
Iteration 700 of 1000: loss=0.00544 " + "l1=0" + "l2=0.00544 f=-0.25 shape=(1, 9000, 1)
logits [[ 3.0024703 -3.2087214  3.0088887 -3.8022597]]
Iteration 800 of 1000: loss=0.00529 " + "l1=0" + "l2=0.00529 f=-0.25 shape=(1, 9000, 1)
logits [[ 2.9975162 -3.2009654  2.9981618 -3.7949367]]
Iteration 900 of 1000: loss=0.00483 " + "l1=0" + "l2=0.00483 f=-0.25 shape=(1, 9000, 1)
logits [[ 2.9909992 -3.196471   2.9910433 -3.7872422]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.021 " + "l1=0.021" + "l2=0 f=-0.237 shape=(1, 9000, 1)
logits [[ 3.2194958 -3.0528228  2.8377278 -3.9532335]]
Iteration 100 of 1000: loss=0.0133 " + "l1=0.00943" + "l2=0.00389 f=-0.242 shape=(1, 9000, 1)
logits [[ 3.121534  -3.14452    2.9500299 -3.8948479]]
Iteration 200 of 1000: loss=0.011 " + "l1=0.00611" + "l2=0.00494 f=-0.244 shape=(1, 9000, 1)
logits [[ 3.096022  -3.1730645  2.984993  -3.88405  ]]
Iteration 300 of 1000: loss=0.00925 " + "l1=0.00323" + "l2=0.00602 f=-0.246 shape=(1, 9000, 1)
logits [[ 3.0711424 -3.197526   3.0124905 -3.8696694]]
Iteration 400 of 1000: loss=0.00782 " + "l1=0.000871" + "l2=0.00695 f=-0.248 shape=(1, 9000, 1)
logits [[ 3.045426  -3.2151537  3.029581  -3.8500786]]
Iteration 500 of 1000: loss=0.00665 " + "l1=0.000104" + "l2=0.00654 f=-0.248 shape=(1, 9000, 1)
logits [[ 3.0314934 -3.2183208  3.0296102 -3.8367574]]
Iteration 600 of 1000: loss=0.00599 " + "l1=5.42e-05" + "l2=0.00593 f=-0.249 shape=(1, 9000, 1)
logits [[ 3.0221188 -3.2139     3.0211337 -3.8253636]]
Iteration 700 of 1000: loss=0.00564 " + "l1=3.86e-05" + "l2=0.0056 f=-0.249 shape=(1, 9000, 1)
logits [[ 3.0128477 -3.2088416  3.012145  -3.8134933]]
Iteration 800 of 1000: loss=0.00532 " + "l1=0" + "l2=0.00532 f=-0.25 shape=(1, 9000, 1)
logits [[ 3.0040514 -3.2042575  3.0047796 -3.803838 ]]
Iteration 900 of 1000: loss=0.00503 " + "l1=2.08e-05" + "l2=0.00501 f=-0.25 shape=(1, 9000, 1)
logits [[ 2.9970443 -3.1988986  2.9966652 -3.7952113]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0124 " + "l1=0.0124" + "l2=0 f=-0.237 shape=(1, 9000, 1)
logits [[ 3.2194958 -3.0528228  2.8377278 -3.9532335]]
Iteration 100 of 1000: loss=0.00957 " + "l1=0.00802" + "l2=0.00155 f=-0.241 shape=(1, 9000, 1)
logits [[ 3.1552958 -3.1111321  2.9085362 -3.9148095]]
Iteration 200 of 1000: loss=0.00875 " + "l1=0.00686" + "l2=0.0019 f=-0.242 shape=(1, 9000, 1)
logits [[ 3.1405883 -3.1277287  2.9296572 -3.910119 ]]
Iteration 300 of 1000: loss=0.00809 " + "l1=0.00586" + "l2=0.00224 f=-0.243 shape=(1, 9000, 1)
logits [[ 3.1263378 -3.1412327  2.9461417 -3.9026473]]
Iteration 400 of 1000: loss=0.00761 " + "l1=0.00501" + "l2=0.00259 f=-0.244 shape=(1, 9000, 1)
logits [[ 3.113689  -3.1526234  2.959412  -3.895873 ]]
Iteration 500 of 1000: loss=0.00721 " + "l1=0.00423" + "l2=0.00298 f=-0.245 shape=(1, 9000, 1)
logits [[ 3.0997963 -3.1623292  2.969573  -3.8859186]]
Iteration 600 of 1000: loss=0.0068 " + "l1=0.00348" + "l2=0.00332 f=-0.245 shape=(1, 9000, 1)
logits [[ 3.0848413 -3.171007   2.9778674 -3.8733401]]
Iteration 700 of 1000: loss=0.00646 " + "l1=0.00283" + "l2=0.00363 f=-0.246 shape=(1, 9000, 1)
logits [[ 3.0698316 -3.177277   2.982775  -3.8594415]]
Iteration 800 of 1000: loss=0.00627 " + "l1=0.00226" + "l2=0.004 f=-0.247 shape=(1, 9000, 1)
logits [[ 3.055121  -3.1817205  2.985467  -3.8459194]]
Iteration 900 of 1000: loss=0.006 " + "l1=0.00175" + "l2=0.00426 f=-0.247 shape=(1, 9000, 1)
logits [[ 3.0404718 -3.185004   2.986772  -3.8321972]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0167 " + "l1=0.0167" + "l2=0 f=-0.237 shape=(1, 9000, 1)
logits [[ 3.2194958 -3.0528228  2.8377278 -3.9532335]]
Iteration 100 of 1000: loss=0.0117 " + "l1=0.00912" + "l2=0.00261 f=-0.241 shape=(1, 9000, 1)
logits [[ 3.138028  -3.1279585  2.9296486 -3.9048004]]
Iteration 200 of 1000: loss=0.0103 " + "l1=0.00702" + "l2=0.00324 f=-0.243 shape=(1, 9000, 1)
logits [[ 3.1182082 -3.1504169  2.9577756 -3.896964 ]]
Iteration 300 of 1000: loss=0.00912 " + "l1=0.00525" + "l2=0.00387 f=-0.244 shape=(1, 9000, 1)
logits [[ 3.0999928 -3.1690552  2.9799733 -3.8883145]]
Iteration 400 of 1000: loss=0.00817 " + "l1=0.00361" + "l2=0.00456 f=-0.245 shape=(1, 9000, 1)
logits [[ 3.0801525 -3.1854825  2.9975345 -3.874109 ]]
Iteration 500 of 1000: loss=0.00735 " + "l1=0.00225" + "l2=0.0051 f=-0.247 shape=(1, 9000, 1)
logits [[ 3.060315  -3.1977644  3.0087905 -3.8579566]]
Iteration 600 of 1000: loss=0.00666 " + "l1=0.00104" + "l2=0.00562 f=-0.248 shape=(1, 9000, 1)
logits [[ 3.0392559 -3.2066498  3.0154445 -3.839212 ]]
Iteration 700 of 1000: loss=0.00602 " + "l1=1.49e-05" + "l2=0.006 f=-0.249 shape=(1, 9000, 1)
logits [[ 3.0197394 -3.212948   3.0193977 -3.8220134]]
Iteration 800 of 1000: loss=0.00548 " + "l1=0" + "l2=0.00548 f=-0.249 shape=(1, 9000, 1)
logits [[ 3.0105417 -3.207886   3.0106359 -3.8111017]]
Iteration 900 of 1000: loss=0.0054 " + "l1=1.31e-05" + "l2=0.00538 f=-0.25 shape=(1, 9000, 1)
logits [[ 3.0025065 -3.2021623  3.0022073 -3.8019774]]
--- 304.06290674209595 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0717 " + "l1=0.0717" + "l2=0 f=-0.237 shape=(1, 9000, 1)
logits [[ 3.2194958 -3.0528228  2.8377278 -3.9532335]]
Iteration 100 of 1000: loss=0.0708 " + "l1=0.0704" + "l2=0.000474 f=-0.233 shape=(1, 9000, 1)
logits [[ 3.162288  -3.0338106  2.8146954 -3.873297 ]]
Iteration 200 of 1000: loss=0.0706 " + "l1=0.0701" + "l2=0.000491 f=-0.232 shape=(1, 9000, 1)
logits [[ 3.150979  -3.0285752  2.8084714 -3.857543 ]]
Iteration 300 of 1000: loss=0.0703 " + "l1=0.0698" + "l2=0.000585 f=-0.231 shape=(1, 9000, 1)
logits [[ 3.1371527 -3.0225434  2.8007147 -3.8381155]]
Iteration 400 of 1000: loss=0.0701 " + "l1=0.0694" + "l2=0.000711 f=-0.23 shape=(1, 9000, 1)
logits [[ 3.1222935 -3.01692    2.793174  -3.8176534]]
Iteration 500 of 1000: loss=0.0699 " + "l1=0.0691" + "l2=0.000854 f=-0.229 shape=(1, 9000, 1)
logits [[ 3.1076326 -3.011651   2.7859402 -3.7978563]]
Iteration 600 of 1000: loss=0.0698 " + "l1=0.0687" + "l2=0.00103 f=-0.228 shape=(1, 9000, 1)
logits [[ 3.0933204 -3.0067484  2.778898  -3.7788875]]
Iteration 700 of 1000: loss=0.0696 " + "l1=0.0684" + "l2=0.00121 f=-0.228 shape=(1, 9000, 1)
logits [[ 3.078535  -3.0020127  2.7719235 -3.759805 ]]
Iteration 800 of 1000: loss=0.0694 " + "l1=0.068" + "l2=0.0013 f=-0.227 shape=(1, 9000, 1)
logits [[ 3.0638945 -2.9974408  2.765022  -3.7411003]]
Iteration 900 of 1000: loss=0.0692 " + "l1=0.0677" + "l2=0.00148 f=-0.227 shape=(1, 9000, 1)
logits [[ 3.048946  -2.992917   2.7580104 -3.7222424]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.717 " + "l1=0.717" + "l2=0 f=-0.237 shape=(1, 9000, 1)
logits [[ 3.2194958 -3.0528228  2.8377278 -3.9532335]]
Iteration 100 of 1000: loss=0.635 " + "l1=0.588" + "l2=0.0471 f=-0.192 shape=(1, 9000, 1)
logits [[ 2.6818535 -2.8160462  2.5641649 -3.1975248]]
Iteration 200 of 1000: loss=0.581 " + "l1=0.492" + "l2=0.0893 f=-0.15 shape=(1, 9000, 1)
logits [[ 2.3184702 -2.605182   2.2857277 -2.5992692]]
Iteration 300 of 1000: loss=0.521 " + "l1=0.407" + "l2=0.114 f=-0.122 shape=(1, 9000, 1)
logits [[ 2.0039349 -2.4313583  2.001312  -2.0626466]]
Iteration 400 of 1000: loss=0.48 " + "l1=0.356" + "l2=0.124 f=-0.102 shape=(1, 9000, 1)
logits [[ 1.8179067 -2.3152294  1.8229461 -1.7337482]]
Iteration 500 of 1000: loss=0.444 " + "l1=0.31" + "l2=0.134 f=-0.0905 shape=(1, 9000, 1)
logits [[ 1.6491666 -2.2105236  1.6515071 -1.4519737]]
Iteration 600 of 1000: loss=0.413 " + "l1=0.278" + "l2=0.136 f=-0.081 shape=(1, 9000, 1)
logits [[ 1.5036145 -2.137245   1.543058  -1.2334328]]
Iteration 700 of 1000: loss=0.385 " + "l1=0.25" + "l2=0.135 f=-0.0747 shape=(1, 9000, 1)
logits [[ 1.359851  -2.0793536  1.4587886 -1.0380085]]
Iteration 800 of 1000: loss=0.357 " + "l1=0.217" + "l2=0.139 f=-0.0665 shape=(1, 9000, 1)
logits [[ 1.1845267  -2.0407543   1.3822767  -0.79216176]]
Iteration 900 of 1000: loss=0.331 " + "l1=0.193" + "l2=0.138 f=-0.0608 shape=(1, 9000, 1)
logits [[ 1.0488261 -2.0134804  1.3259269 -0.6043701]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.17 " + "l1=7.17" + "l2=0 f=-0.237 shape=(1, 9000, 1)
logits [[ 3.2194958 -3.0528228  2.8377278 -3.9532335]]
Iteration 100 of 1000: loss=1.19 " + "l1=0.00845" + "l2=1.18 f=0.0228 shape=(1, 9000, 1)
logits [[ 0.06223077 -1.5093197   0.7732828   0.7648341 ]]
Iteration 200 of 1000: loss=0.83 " + "l1=0" + "l2=0.83 f=0.0268 shape=(1, 9000, 1)
logits [[ 0.08234341 -1.5171149   0.7444761   0.7976104 ]]
Iteration 300 of 1000: loss=0.7 " + "l1=0" + "l2=0.7 f=0.0263 shape=(1, 9000, 1)
logits [[ 0.04515461 -1.5494407   0.75196797  0.85738224]]
Iteration 400 of 1000: loss=0.6 " + "l1=0" + "l2=0.6 f=0.0182 shape=(1, 9000, 1)
logits [[ 0.08197532 -1.5905668   0.77791804  0.8035605 ]]
Iteration 500 of 1000: loss=0.571 " + "l1=0.0244" + "l2=0.547 f=0.0106 shape=(1, 9000, 1)
logits [[ 0.10025974 -1.6034476   0.7849726   0.76052886]]
Iteration 600 of 1000: loss=0.52 " + "l1=0" + "l2=0.52 f=0.00562 shape=(1, 9000, 1)
logits [[ 0.08665209 -1.5970132   0.7645961   0.76824194]]
Iteration 700 of 1000: loss=0.495 " + "l1=0" + "l2=0.495 f=0.00194 shape=(1, 9000, 1)
logits [[ 0.0847132 -1.5984986  0.7586072  0.762949 ]]
Iteration 800 of 1000: loss=0.488 " + "l1=0.0163" + "l2=0.472 f=-0.00223 shape=(1, 9000, 1)
logits [[ 0.08823368 -1.5989689   0.75903594  0.7427797 ]]
Iteration 900 of 1000: loss=0.46 " + "l1=0" + "l2=0.46 f=-0.00733 shape=(1, 9000, 1)
logits [[ 0.05886624 -1.590898    0.7416053   0.76109207]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.95 " + "l1=3.95" + "l2=0 f=-0.237 shape=(1, 9000, 1)
logits [[ 3.2194958 -3.0528228  2.8377278 -3.9532335]]
Iteration 100 of 1000: loss=1.14 " + "l1=0.0152" + "l2=1.12 f=0.0105 shape=(1, 9000, 1)
logits [[ 0.05633448 -1.524655    0.7689147   0.7412562 ]]
Iteration 200 of 1000: loss=0.693 " + "l1=0.00496" + "l2=0.688 f=0.0159 shape=(1, 9000, 1)
logits [[ 0.07145905 -1.535546    0.7683612   0.7593373 ]]
Iteration 300 of 1000: loss=0.594 " + "l1=0" + "l2=0.594 f=0.0122 shape=(1, 9000, 1)
logits [[ 0.03962348 -1.5354979   0.75429887  0.79040116]]
Iteration 400 of 1000: loss=0.538 " + "l1=0" + "l2=0.538 f=0.00443 shape=(1, 9000, 1)
logits [[ 0.04517077 -1.5464659   0.7530227   0.76601094]]
Iteration 500 of 1000: loss=0.502 " + "l1=0.00175" + "l2=0.501 f=-0.00245 shape=(1, 9000, 1)
logits [[ 0.05695593 -1.5648824   0.75065804  0.7474838 ]]
Iteration 600 of 1000: loss=0.48 " + "l1=0" + "l2=0.48 f=-0.00754 shape=(1, 9000, 1)
logits [[ 0.03117579 -1.5708416   0.7404144   0.76909333]]
Iteration 700 of 1000: loss=0.455 " + "l1=0.00712" + "l2=0.448 f=-0.0129 shape=(1, 9000, 1)
logits [[ 0.04146674 -1.582727    0.7513939   0.738452  ]]
Iteration 800 of 1000: loss=0.432 " + "l1=0.00386" + "l2=0.428 f=-0.0211 shape=(1, 9000, 1)
logits [[ 0.01574865 -1.5898271   0.74843127  0.74141127]]
Iteration 900 of 1000: loss=0.411 " + "l1=0" + "l2=0.411 f=-0.0277 shape=(1, 9000, 1)
logits [[-0.004072   -1.6004964   0.7440715   0.74950004]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.33 " + "l1=2.33" + "l2=0 f=-0.237 shape=(1, 9000, 1)
logits [[ 3.2194958 -3.0528228  2.8377278 -3.9532335]]
Iteration 100 of 1000: loss=1.18 " + "l1=0.608" + "l2=0.568 f=-0.021 shape=(1, 9000, 1)
logits [[ 1.0716252  -1.7318869   1.2241765  -0.64781517]]
Iteration 200 of 1000: loss=0.749 " + "l1=0.0735" + "l2=0.676 f=0.00732 shape=(1, 9000, 1)
logits [[ 0.15095776 -1.5433487   0.8238455   0.5978318 ]]
Iteration 300 of 1000: loss=0.565 " + "l1=0.0106" + "l2=0.554 f=-0.000806 shape=(1, 9000, 1)
logits [[ 0.02839488 -1.5051386   0.75305253  0.72046727]]
Iteration 400 of 1000: loss=0.49 " + "l1=0.000414" + "l2=0.489 f=-0.0111 shape=(1, 9000, 1)
logits [[ 0.0195059  -1.4821354   0.70965475  0.70838207]]
Iteration 500 of 1000: loss=0.445 " + "l1=0" + "l2=0.445 f=-0.0152 shape=(1, 9000, 1)
logits [[ 0.01618421 -1.5032424   0.70547515  0.72088677]]
Iteration 600 of 1000: loss=0.412 " + "l1=0" + "l2=0.412 f=-0.0191 shape=(1, 9000, 1)
logits [[ 0.00954429 -1.5288373   0.7152552   0.7278053 ]]
Iteration 700 of 1000: loss=0.389 " + "l1=0.00573" + "l2=0.383 f=-0.0236 shape=(1, 9000, 1)
logits [[ 0.01840052 -1.5440582   0.7244705   0.70684415]]
Iteration 800 of 1000: loss=0.364 " + "l1=0" + "l2=0.364 f=-0.0249 shape=(1, 9000, 1)
logits [[-0.00298178 -1.5383712   0.7148757   0.72701836]]
Iteration 900 of 1000: loss=0.342 " + "l1=0.00414" + "l2=0.337 f=-0.0262 shape=(1, 9000, 1)
logits [[ 0.00465684 -1.5436244   0.7234083   0.71068347]]
--- 322.3763554096222 seconds ---
Adv result:3
Loading record A01930
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0702 " + "l1=0.0702" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 4.9370723 -2.0869584  2.9945235 -8.145438 ]]
Iteration 100 of 1000: loss=0.0696 " + "l1=0.0691" + "l2=0.000461 f=-0.573 shape=(1, 9000, 1)
logits [[ 4.8810596 -2.0282285  2.954289  -8.097572 ]]
Iteration 200 of 1000: loss=0.0694 " + "l1=0.0689" + "l2=0.000494 f=-0.572 shape=(1, 9000, 1)
logits [[ 4.8702407 -2.0155842  2.9442255 -8.0874605]]
Iteration 300 of 1000: loss=0.0692 " + "l1=0.0686" + "l2=0.000634 f=-0.571 shape=(1, 9000, 1)
logits [[ 4.857598  -2.0007617  2.9326272 -8.075121 ]]
Iteration 400 of 1000: loss=0.069 " + "l1=0.0683" + "l2=0.000726 f=-0.571 shape=(1, 9000, 1)
logits [[ 4.845287  -1.9864175  2.9214933 -8.062781 ]]
Iteration 500 of 1000: loss=0.0689 " + "l1=0.0681" + "l2=0.000866 f=-0.57 shape=(1, 9000, 1)
logits [[ 4.8342457 -1.9729875  2.91102   -8.051013 ]]
Iteration 600 of 1000: loss=0.0688 " + "l1=0.0678" + "l2=0.000991 f=-0.569 shape=(1, 9000, 1)
logits [[ 4.823724  -1.9600931  2.900923  -8.039628 ]]
Iteration 700 of 1000: loss=0.0687 " + "l1=0.0676" + "l2=0.00111 f=-0.568 shape=(1, 9000, 1)
logits [[ 4.813592  -1.9477675  2.8912861 -8.0280075]]
Iteration 800 of 1000: loss=0.0688 " + "l1=0.0674" + "l2=0.00142 f=-0.567 shape=(1, 9000, 1)
logits [[ 4.803585  -1.9359645  2.8825078 -8.016247 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.702 " + "l1=0.702" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 4.9370723 -2.0869584  2.9945235 -8.145438 ]]
Iteration 100 of 1000: loss=0.626 " + "l1=0.578" + "l2=0.0478 f=-0.56 shape=(1, 9000, 1)
logits [[ 4.3609943 -1.4198405  2.5207248 -7.700636 ]]
Iteration 200 of 1000: loss=0.597 " + "l1=0.538" + "l2=0.0594 f=-0.556 shape=(1, 9000, 1)
logits [[ 4.154957  -1.2223971  2.3730462 -7.529887 ]]
Iteration 300 of 1000: loss=0.578 " + "l1=0.508" + "l2=0.0705 f=-0.551 shape=(1, 9000, 1)
logits [[ 3.9764302 -1.1006231  2.2852674 -7.3659763]]
Iteration 400 of 1000: loss=0.554 " + "l1=0.466" + "l2=0.0883 f=-0.545 shape=(1, 9000, 1)
logits [[ 3.7461348 -0.9112187  2.16276   -7.1768484]]
Iteration 500 of 1000: loss=0.532 " + "l1=0.437" + "l2=0.095 f=-0.543 shape=(1, 9000, 1)
logits [[ 3.579228  -0.7896258  2.0776567 -7.0386167]]
Iteration 600 of 1000: loss=0.513 " + "l1=0.413" + "l2=0.0999 f=-0.539 shape=(1, 9000, 1)
logits [[ 3.435973  -0.6925223  2.0149388 -6.9162025]]
Iteration 700 of 1000: loss=0.501 " + "l1=0.399" + "l2=0.102 f=-0.538 shape=(1, 9000, 1)
logits [[ 3.327206   -0.66295475  1.9864597  -6.8009734 ]]
Iteration 800 of 1000: loss=0.491 " + "l1=0.386" + "l2=0.105 f=-0.537 shape=(1, 9000, 1)
logits [[ 3.2260122 -0.6356545  1.9600325 -6.69685  ]]
Iteration 900 of 1000: loss=0.482 " + "l1=0.374" + "l2=0.108 f=-0.537 shape=(1, 9000, 1)
logits [[ 3.1302724 -0.6090088  1.9324633 -6.600271 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.02 " + "l1=7.02" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 4.9370723 -2.0869584  2.9945235 -8.145438 ]]
Iteration 100 of 1000: loss=1.6 " + "l1=0.0192" + "l2=1.58 f=-0.623 shape=(1, 9000, 1)
logits [[ 1.0415461  1.0223585  1.0119294 -5.5691648]]
Iteration 200 of 1000: loss=1.17 " + "l1=0" + "l2=1.17 f=-0.643 shape=(1, 9000, 1)
logits [[ 1.0010532  1.0330755  1.0245825 -5.629769 ]]
Iteration 300 of 1000: loss=1.03 " + "l1=0" + "l2=1.03 f=-0.636 shape=(1, 9000, 1)
logits [[ 1.0271134  1.0320278  1.0201602 -5.624136 ]]
Iteration 400 of 1000: loss=0.964 " + "l1=0.0104" + "l2=0.954 f=-0.63 shape=(1, 9000, 1)
logits [[ 1.0321306  1.0216887  1.012405  -5.586493 ]]
Iteration 500 of 1000: loss=0.917 " + "l1=0.0149" + "l2=0.903 f=-0.635 shape=(1, 9000, 1)
logits [[ 0.97786    1.0043275  1.0191894 -5.542102 ]]
Iteration 600 of 1000: loss=0.866 " + "l1=0.00389" + "l2=0.862 f=-0.623 shape=(1, 9000, 1)
logits [[ 1.00283    1.0019149  1.0058068 -5.501621 ]]
Iteration 700 of 1000: loss=0.84 " + "l1=0.00849" + "l2=0.832 f=-0.621 shape=(1, 9000, 1)
logits [[ 0.99930716  0.9908147   0.99638844 -5.4685254 ]]
Iteration 800 of 1000: loss=0.822 " + "l1=0.0109" + "l2=0.811 f=-0.616 shape=(1, 9000, 1)
logits [[ 0.9992299   0.98828506  0.9856952  -5.436238  ]]
Iteration 900 of 1000: loss=0.799 " + "l1=0.00579" + "l2=0.793 f=-0.614 shape=(1, 9000, 1)
logits [[ 0.9876274   0.98184097  0.977222   -5.403943  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.86 " + "l1=3.86" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 4.9370723 -2.0869584  2.9945235 -8.145438 ]]
Iteration 100 of 1000: loss=1.71 " + "l1=0.504" + "l2=1.21 f=-0.614 shape=(1, 9000, 1)
logits [[ 1.50569    0.5888767  1.2107372 -5.76044  ]]
Iteration 200 of 1000: loss=1.12 " + "l1=0.0387" + "l2=1.08 f=-0.623 shape=(1, 9000, 1)
logits [[ 1.0538019  0.9833595  1.0361084 -5.566972 ]]
Iteration 300 of 1000: loss=0.937 " + "l1=0.00412" + "l2=0.932 f=-0.629 shape=(1, 9000, 1)
logits [[ 1.0136459  1.0105246  1.0180205 -5.55636  ]]
Iteration 400 of 1000: loss=0.854 " + "l1=0" + "l2=0.854 f=-0.624 shape=(1, 9000, 1)
logits [[ 0.99574125  1.0055032   1.0019202  -5.497318  ]]
Iteration 500 of 1000: loss=0.81 " + "l1=0.00358" + "l2=0.806 f=-0.626 shape=(1, 9000, 1)
logits [[ 0.96441364  0.9819158   0.98843277 -5.437069  ]]
Iteration 600 of 1000: loss=0.771 " + "l1=0.00931" + "l2=0.762 f=-0.619 shape=(1, 9000, 1)
logits [[ 0.98441744  0.96748364  0.9662797  -5.395859  ]]
Iteration 700 of 1000: loss=0.737 " + "l1=0.00533" + "l2=0.731 f=-0.623 shape=(1, 9000, 1)
logits [[ 0.95359224  0.94877934  0.9584692  -5.351188  ]]
Iteration 800 of 1000: loss=0.713 " + "l1=0.012" + "l2=0.701 f=-0.616 shape=(1, 9000, 1)
logits [[ 0.94840527  0.92664033  0.9385204  -5.277462  ]]
Iteration 900 of 1000: loss=0.687 " + "l1=0.00586" + "l2=0.681 f=-0.613 shape=(1, 9000, 1)
logits [[ 0.9219271   0.91127014  0.9107722  -5.1958904 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.28 " + "l1=2.28" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 4.9370723 -2.0869584  2.9945235 -8.145438 ]]
Iteration 100 of 1000: loss=1.5 " + "l1=1.08" + "l2=0.421 f=-0.542 shape=(1, 9000, 1)
logits [[ 3.0818477  -0.23885073  1.7535778  -6.765301  ]]
Iteration 200 of 1000: loss=1.17 " + "l1=0.56" + "l2=0.61 f=-0.592 shape=(1, 9000, 1)
logits [[ 2.0197494  0.295597   1.3696164 -6.0514665]]
Iteration 300 of 1000: loss=0.952 " + "l1=0.178" + "l2=0.774 f=-0.626 shape=(1, 9000, 1)
logits [[ 1.1866652   0.63915265  1.170426   -5.501286  ]]
Iteration 400 of 1000: loss=0.832 " + "l1=0.0887" + "l2=0.744 f=-0.614 shape=(1, 9000, 1)
logits [[ 1.0647058   0.80331683  1.0760925  -5.4007435 ]]
Iteration 500 of 1000: loss=0.762 " + "l1=0.0594" + "l2=0.702 f=-0.613 shape=(1, 9000, 1)
logits [[ 1.027574   0.8474588  1.0300875 -5.3581657]]
Iteration 600 of 1000: loss=0.718 " + "l1=0.0393" + "l2=0.679 f=-0.615 shape=(1, 9000, 1)
logits [[ 0.9861851   0.8715697   0.99246025 -5.3095145 ]]
Iteration 700 of 1000: loss=0.685 " + "l1=0.0245" + "l2=0.66 f=-0.608 shape=(1, 9000, 1)
logits [[ 0.9598578   0.8843943   0.94345176 -5.221643  ]]
Iteration 800 of 1000: loss=0.657 " + "l1=0.0032" + "l2=0.654 f=-0.606 shape=(1, 9000, 1)
logits [[ 0.90092313  0.894095    0.90394783 -5.12189   ]]
Iteration 900 of 1000: loss=0.639 " + "l1=0.00363" + "l2=0.635 f=-0.599 shape=(1, 9000, 1)
logits [[ 0.88985324  0.87869245  0.8795941  -5.045278  ]]
--- 308.21766448020935 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0194 " + "l1=0.0194" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 4.9370723 -2.0869584  2.9945235 -8.145438 ]]
Iteration 100 of 1000: loss=0.0191 " + "l1=0.0189" + "l2=0.000224 f=-0.578 shape=(1, 9000, 1)
logits [[ 4.904619  -2.1020522  3.0129657 -8.125829 ]]
Iteration 200 of 1000: loss=0.0191 " + "l1=0.0189" + "l2=0.000206 f=-0.578 shape=(1, 9000, 1)
logits [[ 4.900623  -2.1043022  3.0150871 -8.121577 ]]
Iteration 300 of 1000: loss=0.019 " + "l1=0.0188" + "l2=0.000248 f=-0.578 shape=(1, 9000, 1)
logits [[ 4.8947453 -2.1072705  3.0178094 -8.116449 ]]
Iteration 400 of 1000: loss=0.019 " + "l1=0.0187" + "l2=0.000318 f=-0.578 shape=(1, 9000, 1)
logits [[ 4.889169  -2.1099513  3.0202036 -8.111391 ]]
Iteration 500 of 1000: loss=0.019 " + "l1=0.0186" + "l2=0.000416 f=-0.578 shape=(1, 9000, 1)
logits [[ 4.883774  -2.1124825  3.0226324 -8.106669 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.194 " + "l1=0.194" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 4.9370723 -2.0869584  2.9945235 -8.145438 ]]
Iteration 100 of 1000: loss=0.171 " + "l1=0.159" + "l2=0.0128 f=-0.59 shape=(1, 9000, 1)
logits [[ 4.6986876 -2.1758401  3.1133277 -7.9950643]]
Iteration 200 of 1000: loss=0.161 " + "l1=0.141" + "l2=0.0197 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.5749035 -2.2254229  3.164282  -7.8942986]]
Iteration 300 of 1000: loss=0.153 " + "l1=0.129" + "l2=0.0241 f=-0.6 shape=(1, 9000, 1)
logits [[ 4.477113  -2.2625206  3.1918583 -7.805359 ]]
Iteration 400 of 1000: loss=0.146 " + "l1=0.119" + "l2=0.0272 f=-0.605 shape=(1, 9000, 1)
logits [[ 4.3993483 -2.2878656  3.2110941 -7.742127 ]]
Iteration 500 of 1000: loss=0.14 " + "l1=0.109" + "l2=0.0304 f=-0.61 shape=(1, 9000, 1)
logits [[ 4.3200808 -2.3158762  3.225313  -7.669093 ]]
Iteration 600 of 1000: loss=0.134 " + "l1=0.101" + "l2=0.0336 f=-0.613 shape=(1, 9000, 1)
logits [[ 4.240518  -2.3309357  3.2334957 -7.59534  ]]
Iteration 700 of 1000: loss=0.13 " + "l1=0.0945" + "l2=0.0354 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.19005   -2.3477392  3.2454157 -7.5445786]]
Iteration 800 of 1000: loss=0.126 " + "l1=0.0891" + "l2=0.0369 f=-0.615 shape=(1, 9000, 1)
logits [[ 4.1511774 -2.3669877  3.2604332 -7.503347 ]]
Iteration 900 of 1000: loss=0.122 " + "l1=0.0839" + "l2=0.0381 f=-0.615 shape=(1, 9000, 1)
logits [[ 4.112782  -2.38325    3.2741702 -7.463279 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.94 " + "l1=1.94" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 4.9370723 -2.0869584  2.9945235 -8.145438 ]]
Iteration 100 of 1000: loss=0.35 " + "l1=0" + "l2=0.35 f=-0.704 shape=(1, 9000, 1)
logits [[ 3.4426348 -2.5881612  3.4545476 -7.125316 ]]
Iteration 200 of 1000: loss=0.245 " + "l1=0" + "l2=0.245 f=-0.705 shape=(1, 9000, 1)
logits [[ 3.4487765 -2.6052098  3.4544752 -7.1176405]]
Iteration 300 of 1000: loss=0.208 " + "l1=0" + "l2=0.208 f=-0.704 shape=(1, 9000, 1)
logits [[ 3.4424598 -2.5952497  3.446174  -7.1084957]]
Iteration 400 of 1000: loss=0.194 " + "l1=0" + "l2=0.194 f=-0.704 shape=(1, 9000, 1)
logits [[ 3.4158251 -2.5896633  3.441736  -7.0823693]]
Iteration 500 of 1000: loss=0.176 " + "l1=0" + "l2=0.176 f=-0.699 shape=(1, 9000, 1)
logits [[ 3.421627  -2.577356   3.4349859 -7.074962 ]]
Iteration 600 of 1000: loss=0.167 " + "l1=0" + "l2=0.167 f=-0.698 shape=(1, 9000, 1)
logits [[ 3.4096444 -2.5704463  3.430307  -7.059564 ]]
Iteration 700 of 1000: loss=0.153 " + "l1=0" + "l2=0.153 f=-0.695 shape=(1, 9000, 1)
logits [[ 3.418976  -2.565324   3.4222112 -7.056629 ]]
Iteration 800 of 1000: loss=0.15 " + "l1=0" + "l2=0.15 f=-0.696 shape=(1, 9000, 1)
logits [[ 3.3930209 -2.5678236  3.4216511 -7.0288987]]
Iteration 900 of 1000: loss=0.139 " + "l1=0" + "l2=0.139 f=-0.691 shape=(1, 9000, 1)
logits [[ 3.4067633 -2.5619273  3.4115322 -7.019802 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.07 " + "l1=1.07" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 4.9370723 -2.0869584  2.9945235 -8.145438 ]]
Iteration 100 of 1000: loss=0.366 " + "l1=0" + "l2=0.366 f=-0.689 shape=(1, 9000, 1)
logits [[ 3.4594474 -2.5752096  3.4617603 -7.10251  ]]
Iteration 200 of 1000: loss=0.233 " + "l1=0" + "l2=0.233 f=-0.695 shape=(1, 9000, 1)
logits [[ 3.4487681 -2.5828998  3.453633  -7.099217 ]]
Iteration 300 of 1000: loss=0.196 " + "l1=0.00363" + "l2=0.192 f=-0.693 shape=(1, 9000, 1)
logits [[ 3.4458656 -2.5580842  3.4392715 -7.1000814]]
Iteration 400 of 1000: loss=0.175 " + "l1=0" + "l2=0.175 f=-0.693 shape=(1, 9000, 1)
logits [[ 3.4260008 -2.5509896  3.4348903 -7.082908 ]]
Iteration 500 of 1000: loss=0.163 " + "l1=0" + "l2=0.163 f=-0.696 shape=(1, 9000, 1)
logits [[ 3.4151642 -2.552034   3.4313269 -7.0778346]]
Iteration 600 of 1000: loss=0.149 " + "l1=0.000941" + "l2=0.148 f=-0.693 shape=(1, 9000, 1)
logits [[ 3.420753  -2.546209   3.4190423 -7.0663633]]
Iteration 700 of 1000: loss=0.141 " + "l1=0" + "l2=0.141 f=-0.693 shape=(1, 9000, 1)
logits [[ 3.4064252 -2.5477095  3.4105473 -7.0427074]]
Iteration 800 of 1000: loss=0.132 " + "l1=0.000635" + "l2=0.132 f=-0.693 shape=(1, 9000, 1)
logits [[ 3.402981  -2.550443   3.401827  -7.0257344]]
Iteration 900 of 1000: loss=0.125 " + "l1=0.000858" + "l2=0.124 f=-0.693 shape=(1, 9000, 1)
logits [[ 3.392945  -2.556566   3.3913844 -6.99882  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.631 " + "l1=0.631" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 4.9370723 -2.0869584  2.9945235 -8.145438 ]]
Iteration 100 of 1000: loss=0.38 " + "l1=0.258" + "l2=0.123 f=-0.626 shape=(1, 9000, 1)
logits [[ 4.1102924 -2.3610547  3.317595  -7.5721316]]
Iteration 200 of 1000: loss=0.27 " + "l1=0.0914" + "l2=0.178 f=-0.674 shape=(1, 9000, 1)
logits [[ 3.660713  -2.4845915  3.3793614 -7.251639 ]]
Iteration 300 of 1000: loss=0.204 " + "l1=0.008" + "l2=0.196 f=-0.707 shape=(1, 9000, 1)
logits [[ 3.423431  -2.523713   3.3988235 -7.125956 ]]
Iteration 400 of 1000: loss=0.168 " + "l1=0.000827" + "l2=0.168 f=-0.708 shape=(1, 9000, 1)
logits [[ 3.3863783 -2.5105927  3.3838327 -7.0920515]]
Iteration 500 of 1000: loss=0.149 " + "l1=0.00169" + "l2=0.148 f=-0.708 shape=(1, 9000, 1)
logits [[ 3.3790743 -2.5118656  3.3738756 -7.0731173]]
Iteration 600 of 1000: loss=0.135 " + "l1=0.00211" + "l2=0.133 f=-0.707 shape=(1, 9000, 1)
logits [[ 3.37007   -2.5210218  3.3635821 -7.040143 ]]
Iteration 700 of 1000: loss=0.126 " + "l1=0" + "l2=0.126 f=-0.706 shape=(1, 9000, 1)
logits [[ 3.351837  -2.5297987  3.3587701 -7.0030646]]
Iteration 800 of 1000: loss=0.117 " + "l1=0" + "l2=0.117 f=-0.703 shape=(1, 9000, 1)
logits [[ 3.3387058 -2.5281892  3.3478608 -6.969722 ]]
Iteration 900 of 1000: loss=0.109 " + "l1=0.0001" + "l2=0.109 f=-0.696 shape=(1, 9000, 1)
logits [[ 3.3436384 -2.531469   3.3433294 -6.9382367]]
--- 291.7665174007416 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.131 " + "l1=0.131" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 4.9370723 -2.0869584  2.9945235 -8.145438 ]]
Iteration 100 of 1000: loss=0.13 " + "l1=0.129" + "l2=0.000598 f=-0.57 shape=(1, 9000, 1)
logits [[ 4.866432  -2.059059   2.9676354 -8.055449 ]]
Iteration 200 of 1000: loss=0.13 " + "l1=0.129" + "l2=0.000667 f=-0.569 shape=(1, 9000, 1)
logits [[ 4.850087  -2.0530324  2.961068  -8.034968 ]]
Iteration 300 of 1000: loss=0.129 " + "l1=0.128" + "l2=0.000813 f=-0.568 shape=(1, 9000, 1)
logits [[ 4.832664  -2.0468147  2.953791  -8.012838 ]]
Iteration 400 of 1000: loss=0.129 " + "l1=0.128" + "l2=0.000953 f=-0.567 shape=(1, 9000, 1)
logits [[ 4.815466  -2.0406222  2.946587  -7.99067  ]]
Iteration 500 of 1000: loss=0.129 " + "l1=0.128" + "l2=0.00115 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.7987328 -2.0349236  2.9397204 -7.9693713]]
Iteration 600 of 1000: loss=0.129 " + "l1=0.127" + "l2=0.00132 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.782125  -2.0291312  2.9326937 -7.9478016]]
Iteration 700 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.00153 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.766092  -2.0229173  2.9254525 -7.926826 ]]
Iteration 800 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.00173 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.751192  -2.0170083  2.9192142 -7.907298 ]]
Iteration 900 of 1000: loss=0.128 " + "l1=0.126" + "l2=0.0018 f=-0.562 shape=(1, 9000, 1)
logits [[ 4.736568  -2.0107071  2.9124038 -7.887193 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.31 " + "l1=1.31" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 4.9370723 -2.0869584  2.9945235 -8.145438 ]]
Iteration 100 of 1000: loss=1.21 " + "l1=1.16" + "l2=0.0557 f=-0.531 shape=(1, 9000, 1)
logits [[ 4.2464666 -1.7956355  2.733053  -7.307678 ]]
Iteration 200 of 1000: loss=1.15 " + "l1=1.07" + "l2=0.0805 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.8745627 -1.6282827  2.5623116 -6.856256 ]]
Iteration 300 of 1000: loss=1.11 " + "l1=1.01" + "l2=0.0989 f=-0.514 shape=(1, 9000, 1)
logits [[ 3.5580738 -1.5181117  2.411461  -6.509334 ]]
Iteration 400 of 1000: loss=1.07 " + "l1=0.955" + "l2=0.112 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.332544  -1.4835364  2.32377   -6.2208753]]
Iteration 500 of 1000: loss=1.03 " + "l1=0.906" + "l2=0.128 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.126235  -1.457761   2.2500892 -5.933453 ]]
Iteration 600 of 1000: loss=1.01 " + "l1=0.862" + "l2=0.143 f=-0.497 shape=(1, 9000, 1)
logits [[ 2.9432926 -1.4454757  2.1910357 -5.6768236]]
Iteration 700 of 1000: loss=0.975 " + "l1=0.815" + "l2=0.16 f=-0.49 shape=(1, 9000, 1)
logits [[ 2.744371  -1.4209507  2.119362  -5.4031954]]
Iteration 800 of 1000: loss=0.944 " + "l1=0.77" + "l2=0.174 f=-0.485 shape=(1, 9000, 1)
logits [[ 2.561639  -1.4231846  2.0637028 -5.142292 ]]
Iteration 900 of 1000: loss=0.916 " + "l1=0.733" + "l2=0.184 f=-0.479 shape=(1, 9000, 1)
logits [[ 2.409066  -1.4297818  2.0219183 -4.915974 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=13.1 " + "l1=13.1" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 4.9370723 -2.0869584  2.9945235 -8.145438 ]]
Iteration 100 of 1000: loss=5.92 " + "l1=2.6" + "l2=3.32 f=-0.385 shape=(1, 9000, 1)
logits [[ 0.34121823 -0.03149652  0.37616295 -2.224272  ]]
Iteration 200 of 1000: loss=4.47 " + "l1=1.03" + "l2=3.43 f=-0.39 shape=(1, 9000, 1)
logits [[-0.3830559  -0.0591277  -0.04428862 -1.0749664 ]]
Iteration 300 of 1000: loss=3.5 " + "l1=0.12" + "l2=3.38 f=-0.358 shape=(1, 9000, 1)
logits [[-0.72452796 -0.1886537  -0.20970155 -0.30832082]]
Iteration 400 of 1000: loss=2.78 " + "l1=0" + "l2=2.78 f=-0.336 shape=(1, 9000, 1)
logits [[-0.6636925  -0.24815561 -0.22010008 -0.21359375]]
Iteration 500 of 1000: loss=2.27 " + "l1=0.0213" + "l2=2.25 f=-0.31 shape=(1, 9000, 1)
logits [[-0.57156223 -0.24742194 -0.19924656 -0.22058886]]
Iteration 600 of 1000: loss=1.95 " + "l1=0.0139" + "l2=1.94 f=-0.289 shape=(1, 9000, 1)
logits [[-0.51057553 -0.31416273 -0.15962386 -0.17351764]]
Iteration 700 of 1000: loss=1.75 " + "l1=0" + "l2=1.75 f=-0.27 shape=(1, 9000, 1)
logits [[-0.47314146 -0.3432923  -0.13658346 -0.12516081]]
Iteration 800 of 1000: loss=1.6 " + "l1=0.00205" + "l2=1.6 f=-0.249 shape=(1, 9000, 1)
logits [[-0.4235666  -0.35554472 -0.10840978 -0.11046083]]
Iteration 900 of 1000: loss=1.48 " + "l1=0" + "l2=1.48 f=-0.232 shape=(1, 9000, 1)
logits [[-0.4114374  -0.34393784 -0.10195068 -0.07212125]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.2 " + "l1=7.2" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 4.9370723 -2.0869584  2.9945235 -8.145438 ]]
Iteration 100 of 1000: loss=4.46 " + "l1=2.95" + "l2=1.51 f=-0.468 shape=(1, 9000, 1)
logits [[ 1.3526247 -0.5712266  1.356081  -4.009644 ]]
Iteration 200 of 1000: loss=3.57 " + "l1=2.03" + "l2=1.54 f=-0.433 shape=(1, 9000, 1)
logits [[ 0.69935834 -0.16125502  0.7075628  -2.9769795 ]]
Iteration 300 of 1000: loss=2.94 " + "l1=1.38" + "l2=1.56 f=-0.376 shape=(1, 9000, 1)
logits [[ 0.31731632 -0.03049608  0.35670957 -2.1479447 ]]
Iteration 400 of 1000: loss=2.29 " + "l1=0.66" + "l2=1.63 f=-0.301 shape=(1, 9000, 1)
logits [[-0.10686057 -0.1475292   0.12470007 -1.0754757 ]]
Iteration 500 of 1000: loss=1.67 " + "l1=0.0117" + "l2=1.65 f=-0.243 shape=(1, 9000, 1)
logits [[-0.51217914 -0.2663303  -0.08593579 -0.1072352 ]]
Iteration 600 of 1000: loss=1.29 " + "l1=0" + "l2=1.29 f=-0.219 shape=(1, 9000, 1)
logits [[-0.4904765  -0.38051093 -0.01015617  0.00373047]]
Iteration 700 of 1000: loss=1.11 " + "l1=0.00899" + "l2=1.1 f=-0.199 shape=(1, 9000, 1)
logits [[-0.4206981  -0.4235645   0.03280611  0.01646318]]
Iteration 800 of 1000: loss=0.991 " + "l1=0.000514" + "l2=0.99 f=-0.182 shape=(1, 9000, 1)
logits [[-0.38020143 -0.44127545  0.04697245  0.04603783]]
Iteration 900 of 1000: loss=0.92 " + "l1=0" + "l2=0.92 f=-0.167 shape=(1, 9000, 1)
logits [[-0.3576298  -0.447136    0.04425656  0.09347487]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.25 " + "l1=4.25" + "l2=0 f=-0.575 shape=(1, 9000, 1)
logits [[ 4.9370723 -2.0869584  2.9945235 -8.145438 ]]
Iteration 100 of 1000: loss=3.23 " + "l1=2.65" + "l2=0.575 f=-0.512 shape=(1, 9000, 1)
logits [[ 2.615096  -1.1433834  2.0221314 -5.543058 ]]
Iteration 200 of 1000: loss=2.72 " + "l1=1.94" + "l2=0.78 f=-0.526 shape=(1, 9000, 1)
logits [[ 1.580553  -0.8796429  1.5776309 -4.380597 ]]
Iteration 300 of 1000: loss=2.36 " + "l1=1.55" + "l2=0.809 f=-0.45 shape=(1, 9000, 1)
logits [[ 1.1701862 -0.5332721  1.1627624 -3.6014142]]
Iteration 400 of 1000: loss=2.04 " + "l1=1.19" + "l2=0.849 f=-0.389 shape=(1, 9000, 1)
logits [[ 0.79718053 -0.30477804  0.8018835  -2.8508234 ]]
Iteration 500 of 1000: loss=1.72 " + "l1=0.833" + "l2=0.884 f=-0.318 shape=(1, 9000, 1)
logits [[ 0.4693767  -0.28475928  0.5543733  -2.0098875 ]]
Iteration 600 of 1000: loss=1.45 " + "l1=0.499" + "l2=0.952 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.14397648 -0.37789175  0.35095802 -1.1831357 ]]
Iteration 700 of 1000: loss=1.23 " + "l1=0.239" + "l2=0.991 f=-0.22 shape=(1, 9000, 1)
logits [[-0.06039947 -0.4646979   0.18991195 -0.546683  ]]
Iteration 800 of 1000: loss=1.02 " + "l1=0.021" + "l2=1 f=-0.176 shape=(1, 9000, 1)
logits [[-0.20798047 -0.4985155   0.03317685 -0.03136311]]
Iteration 900 of 1000: loss=0.906 " + "l1=0.00329" + "l2=0.903 f=-0.162 shape=(1, 9000, 1)
logits [[-0.13003002 -0.59038657  0.04212228  0.0319915 ]]
--- 322.1809711456299 seconds ---
Adv result:3
Loading record A01932
(1, 3264)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0315 " + "l1=0.0315" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 1.4253796 -1.725053  -2.7706685  0.3612521]]
Iteration 100 of 1000: loss=0.0281 " + "l1=0.0266" + "l2=0.00154 f=-0.683 shape=(1, 9000, 1)
logits [[ 1.1247568 -1.5342953 -2.7620711  0.440315 ]]
Iteration 200 of 1000: loss=0.0273 " + "l1=0.0253" + "l2=0.002 f=-0.683 shape=(1, 9000, 1)
logits [[ 1.04563    -1.4850909  -2.7607071   0.46720302]]
Iteration 300 of 1000: loss=0.0266 " + "l1=0.0241" + "l2=0.00251 f=-0.682 shape=(1, 9000, 1)
logits [[ 0.9712018  -1.4363905  -2.757941    0.49366045]]
Iteration 400 of 1000: loss=0.0259 " + "l1=0.023" + "l2=0.00296 f=-0.681 shape=(1, 9000, 1)
logits [[ 0.9058653 -1.3932979 -2.7548668  0.5186636]]
Iteration 500 of 1000: loss=0.0253 " + "l1=0.022" + "l2=0.00337 f=-0.679 shape=(1, 9000, 1)
logits [[ 0.8434005  -1.353041   -2.7508426   0.54318464]]
Iteration 600 of 1000: loss=0.0248 " + "l1=0.021" + "l2=0.00377 f=-0.677 shape=(1, 9000, 1)
logits [[ 0.7875663 -1.3156943 -2.7455907  0.566774 ]]
Iteration 700 of 1000: loss=0.0237 " + "l1=0.0188" + "l2=0.00483 f=-0.665 shape=(1, 9000, 1)
logits [[ 0.66047335 -1.2223276  -2.6896772   0.59177315]]
Iteration 800 of 1000: loss=0.0212 " + "l1=0.0158" + "l2=0.00541 f=-0.648 shape=(1, 9000, 1)
logits [[ 0.49712285 -1.0853642  -2.5018497   0.4972594 ]]
Iteration 900 of 1000: loss=0.0203 " + "l1=0.015" + "l2=0.00525 f=-0.647 shape=(1, 9000, 1)
logits [[ 0.4568144  -1.0478985  -2.4497528   0.45355383]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.315 " + "l1=0.315" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 1.4253796 -1.725053  -2.7706685  0.3612521]]
Iteration 100 of 1000: loss=0.1 " + "l1=0.0387" + "l2=0.0615 f=-0.646 shape=(1, 9000, 1)
logits [[-0.07822178 -0.45281774 -1.9871275  -0.06584179]]
Iteration 200 of 1000: loss=0.0541 " + "l1=0.00137" + "l2=0.0527 f=-0.67 shape=(1, 9000, 1)
logits [[-0.23179434 -0.24552561 -1.9650707  -0.23803657]]
Iteration 300 of 1000: loss=0.0409 " + "l1=0" + "l2=0.0409 f=-0.668 shape=(1, 9000, 1)
logits [[-0.23455846 -0.23034832 -1.9709682  -0.23741665]]
Iteration 400 of 1000: loss=0.0372 " + "l1=0" + "l2=0.0372 f=-0.667 shape=(1, 9000, 1)
logits [[-0.24927387 -0.21419348 -1.979995   -0.22381613]]
Iteration 500 of 1000: loss=0.034 " + "l1=0" + "l2=0.034 f=-0.662 shape=(1, 9000, 1)
logits [[-0.22651643 -0.21315943 -1.9885265  -0.2181752 ]]
Iteration 600 of 1000: loss=0.0317 " + "l1=0" + "l2=0.0317 f=-0.657 shape=(1, 9000, 1)
logits [[-0.20938936 -0.20689331 -1.9978364  -0.2146191 ]]
Iteration 700 of 1000: loss=0.0314 " + "l1=0" + "l2=0.0314 f=-0.656 shape=(1, 9000, 1)
logits [[-0.22171688 -0.19000602 -1.9981664  -0.2134304 ]]
Iteration 800 of 1000: loss=0.0295 " + "l1=0.00012" + "l2=0.0294 f=-0.653 shape=(1, 9000, 1)
logits [[-0.20080818 -0.2020086  -2.0053577  -0.20429632]]
Iteration 900 of 1000: loss=0.0289 " + "l1=0.000545" + "l2=0.0283 f=-0.652 shape=(1, 9000, 1)
logits [[-0.2007935  -0.20116103 -2.0118816  -0.19571051]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.173 " + "l1=0.173" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 1.4253796 -1.725053  -2.7706685  0.3612521]]
Iteration 100 of 1000: loss=0.102 " + "l1=0.0795" + "l2=0.0222 f=-0.677 shape=(1, 9000, 1)
logits [[ 0.4570764  -0.98605907 -2.6402864   0.46026787]]
Iteration 200 of 1000: loss=0.0733 " + "l1=0.0444" + "l2=0.0289 f=-0.659 shape=(1, 9000, 1)
logits [[ 0.13484639 -0.65847224 -2.25989     0.14855096]]
Iteration 300 of 1000: loss=0.0516 " + "l1=0.0163" + "l2=0.0354 f=-0.66 shape=(1, 9000, 1)
logits [[-0.11334712 -0.40839207 -2.005395   -0.11241311]]
Iteration 400 of 1000: loss=0.0421 " + "l1=0.00266" + "l2=0.0394 f=-0.671 shape=(1, 9000, 1)
logits [[-0.2216995  -0.26342088 -1.9828876  -0.21502298]]
Iteration 500 of 1000: loss=0.0375 " + "l1=0.00118" + "l2=0.0363 f=-0.671 shape=(1, 9000, 1)
logits [[-0.22296748 -0.24187286 -1.9984993  -0.22041649]]
Iteration 600 of 1000: loss=0.0351 " + "l1=0" + "l2=0.0351 f=-0.672 shape=(1, 9000, 1)
logits [[-0.22989583 -0.22370334 -2.0075629  -0.2269474 ]]
Iteration 700 of 1000: loss=0.0334 " + "l1=0.000249" + "l2=0.0331 f=-0.671 shape=(1, 9000, 1)
logits [[-0.22002777 -0.22455534 -2.0175588  -0.22363043]]
Iteration 800 of 1000: loss=0.0321 " + "l1=5.28e-05" + "l2=0.032 f=-0.671 shape=(1, 9000, 1)
logits [[-0.24042198 -0.21258134 -2.01974    -0.21162176]]
Iteration 900 of 1000: loss=0.0302 " + "l1=0.000317" + "l2=0.0299 f=-0.669 shape=(1, 9000, 1)
logits [[-0.21559525 -0.22135629 -2.0163403  -0.2213915 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.102 " + "l1=0.102" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 1.4253796 -1.725053  -2.7706685  0.3612521]]
Iteration 100 of 1000: loss=0.0732 " + "l1=0.0604" + "l2=0.0128 f=-0.686 shape=(1, 9000, 1)
logits [[ 0.6312899  -1.2278401  -2.7450817   0.59942156]]
Iteration 200 of 1000: loss=0.0602 " + "l1=0.0446" + "l2=0.0156 f=-0.659 shape=(1, 9000, 1)
logits [[ 0.41098812 -0.9578678  -2.5032477   0.41351455]]
Iteration 300 of 1000: loss=0.0517 " + "l1=0.0352" + "l2=0.0165 f=-0.657 shape=(1, 9000, 1)
logits [[ 0.27060148 -0.81233233 -2.3537533   0.26929778]]
Iteration 400 of 1000: loss=0.043 " + "l1=0.0246" + "l2=0.0183 f=-0.642 shape=(1, 9000, 1)
logits [[ 0.08999034 -0.65333354 -2.1073263   0.10394114]]
Iteration 500 of 1000: loss=0.0376 " + "l1=0.0194" + "l2=0.0182 f=-0.647 shape=(1, 9000, 1)
logits [[ 0.01595481 -0.57297856 -2.0536673   0.022998  ]]
Iteration 600 of 1000: loss=0.0342 " + "l1=0.0157" + "l2=0.0184 f=-0.653 shape=(1, 9000, 1)
logits [[-0.02845583 -0.51239234 -2.0387566  -0.03073775]]
Iteration 700 of 1000: loss=0.0321 " + "l1=0.0125" + "l2=0.0196 f=-0.656 shape=(1, 9000, 1)
logits [[-0.07610946 -0.45210275 -2.0290463  -0.06678536]]
Iteration 800 of 1000: loss=0.0301 " + "l1=0.00927" + "l2=0.0208 f=-0.658 shape=(1, 9000, 1)
logits [[-0.1079084  -0.3930938  -2.0201724  -0.11093467]]
Iteration 900 of 1000: loss=0.0285 " + "l1=0.00705" + "l2=0.0214 f=-0.659 shape=(1, 9000, 1)
logits [[-0.1350351  -0.35186356 -2.0077355  -0.14015362]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.138 " + "l1=0.138" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 1.4253796 -1.725053  -2.7706685  0.3612521]]
Iteration 100 of 1000: loss=0.0904 " + "l1=0.0738" + "l2=0.0165 f=-0.686 shape=(1, 9000, 1)
logits [[ 0.5593055 -1.1282519 -2.7267702  0.551863 ]]
Iteration 200 of 1000: loss=0.0678 " + "l1=0.0456" + "l2=0.0222 f=-0.659 shape=(1, 9000, 1)
logits [[ 0.2552177  -0.78667134 -2.3535378   0.24817371]]
Iteration 300 of 1000: loss=0.0535 " + "l1=0.0271" + "l2=0.0264 f=-0.65 shape=(1, 9000, 1)
logits [[ 0.03568031 -0.5797298  -2.093958    0.03915345]]
Iteration 400 of 1000: loss=0.0458 " + "l1=0.0165" + "l2=0.0293 f=-0.658 shape=(1, 9000, 1)
logits [[-0.07056107 -0.44665343 -2.037503   -0.07664863]]
Iteration 500 of 1000: loss=0.04 " + "l1=0.00789" + "l2=0.0321 f=-0.665 shape=(1, 9000, 1)
logits [[-0.1598277  -0.33486557 -2.009159   -0.15444928]]
Iteration 600 of 1000: loss=0.0348 " + "l1=0.000606" + "l2=0.0342 f=-0.669 shape=(1, 9000, 1)
logits [[-0.22843137 -0.23875172 -1.9855671  -0.22490391]]
Iteration 700 of 1000: loss=0.0313 " + "l1=0" + "l2=0.0313 f=-0.669 shape=(1, 9000, 1)
logits [[-0.22625732 -0.22604126 -1.9950981  -0.22687918]]
Iteration 800 of 1000: loss=0.0294 " + "l1=0.000479" + "l2=0.0289 f=-0.666 shape=(1, 9000, 1)
logits [[-0.21512127 -0.22457637 -2.0097096  -0.21363714]]
Iteration 900 of 1000: loss=0.0276 " + "l1=0" + "l2=0.0276 f=-0.658 shape=(1, 9000, 1)
logits [[-0.22154482 -0.20274158 -2.0042605  -0.20544687]]
--- 323.7212634086609 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.042 " + "l1=0.042" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 1.4253796 -1.725053  -2.7706685  0.3612521]]
Iteration 100 of 1000: loss=0.0403 " + "l1=0.0395" + "l2=0.000825 f=-0.677 shape=(1, 9000, 1)
logits [[ 1.2030578  -1.6010736  -2.7440014   0.43223768]]
Iteration 200 of 1000: loss=0.0399 " + "l1=0.0389" + "l2=0.00102 f=-0.677 shape=(1, 9000, 1)
logits [[ 1.1519126  -1.5765553  -2.737064    0.45263842]]
Iteration 300 of 1000: loss=0.0396 " + "l1=0.0383" + "l2=0.00126 f=-0.677 shape=(1, 9000, 1)
logits [[ 1.1035262  -1.5502765  -2.7304265   0.47113287]]
Iteration 400 of 1000: loss=0.0393 " + "l1=0.0378" + "l2=0.00149 f=-0.674 shape=(1, 9000, 1)
logits [[ 1.0611645  -1.5269881  -2.7224786   0.49044287]]
Iteration 500 of 1000: loss=0.0391 " + "l1=0.0374" + "l2=0.00168 f=-0.672 shape=(1, 9000, 1)
logits [[ 1.0245245  -1.508157   -2.7168193   0.51079273]]
Iteration 600 of 1000: loss=0.0389 " + "l1=0.037" + "l2=0.00185 f=-0.67 shape=(1, 9000, 1)
logits [[ 0.98904085 -1.490553   -2.7111402   0.5313246 ]]
Iteration 700 of 1000: loss=0.0387 " + "l1=0.0364" + "l2=0.00222 f=-0.667 shape=(1, 9000, 1)
logits [[ 0.9441541 -1.4654944 -2.7004192  0.5523251]]
Iteration 800 of 1000: loss=0.0383 " + "l1=0.0358" + "l2=0.00257 f=-0.663 shape=(1, 9000, 1)
logits [[ 0.893514   -1.437286   -2.682193    0.57474154]]
Iteration 900 of 1000: loss=0.0372 " + "l1=0.0334" + "l2=0.00381 f=-0.647 shape=(1, 9000, 1)
logits [[ 0.75114864 -1.3533206  -2.5904582   0.6026351 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.42 " + "l1=0.42" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 1.4253796 -1.725053  -2.7706685  0.3612521]]
Iteration 100 of 1000: loss=0.266 " + "l1=0.215" + "l2=0.0516 f=-0.612 shape=(1, 9000, 1)
logits [[ 0.1286178 -0.7890494 -1.968383   0.1788165]]
Iteration 200 of 1000: loss=0.192 " + "l1=0.127" + "l2=0.0657 f=-0.555 shape=(1, 9000, 1)
logits [[-0.1163121  -0.6056313  -1.3832246  -0.11650545]]
Iteration 300 of 1000: loss=0.156 " + "l1=0.091" + "l2=0.065 f=-0.559 shape=(1, 9000, 1)
logits [[-0.22613978 -0.6240891  -1.1362101  -0.24787265]]
Iteration 400 of 1000: loss=0.119 " + "l1=0.0321" + "l2=0.0873 f=-0.56 shape=(1, 9000, 1)
logits [[-0.45476064 -0.5744119  -0.7656872  -0.44435212]]
Iteration 500 of 1000: loss=0.0927 " + "l1=0.00236" + "l2=0.0903 f=-0.54 shape=(1, 9000, 1)
logits [[-0.5325005  -0.53687227 -0.55609393 -0.5346563 ]]
Iteration 600 of 1000: loss=0.0815 " + "l1=0.00166" + "l2=0.0798 f=-0.533 shape=(1, 9000, 1)
logits [[-0.5263004 -0.5326189 -0.5428857 -0.5310952]]
Iteration 700 of 1000: loss=0.0748 " + "l1=0.000687" + "l2=0.0741 f=-0.528 shape=(1, 9000, 1)
logits [[-0.52072847 -0.5394084  -0.52759755 -0.52544063]]
Iteration 800 of 1000: loss=0.0701 " + "l1=0.000142" + "l2=0.07 f=-0.529 shape=(1, 9000, 1)
logits [[-0.51058406 -0.54740155 -0.51200825 -0.5444915 ]]
Iteration 900 of 1000: loss=0.0627 " + "l1=0" + "l2=0.0627 f=-0.527 shape=(1, 9000, 1)
logits [[-0.5243814  -0.54889846 -0.5157979  -0.52003014]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.231 " + "l1=0.231" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 1.4253796 -1.725053  -2.7706685  0.3612521]]
Iteration 100 of 1000: loss=0.192 " + "l1=0.178" + "l2=0.0149 f=-0.664 shape=(1, 9000, 1)
logits [[ 0.61191    -1.260413   -2.6159954   0.60997534]]
Iteration 200 of 1000: loss=0.147 " + "l1=0.116" + "l2=0.0307 f=-0.615 shape=(1, 9000, 1)
logits [[ 0.15757376 -0.82879084 -1.9494429   0.15879741]]
Iteration 300 of 1000: loss=0.132 " + "l1=0.103" + "l2=0.0295 f=-0.615 shape=(1, 9000, 1)
logits [[ 0.05316377 -0.74978405 -1.8142912   0.0524319 ]]
Iteration 400 of 1000: loss=0.116 " + "l1=0.082" + "l2=0.0338 f=-0.583 shape=(1, 9000, 1)
logits [[-0.05909485 -0.66897815 -1.5474949  -0.05722164]]
Iteration 500 of 1000: loss=0.107 " + "l1=0.0718" + "l2=0.0354 f=-0.584 shape=(1, 9000, 1)
logits [[-0.12885943 -0.6372441  -1.4334083  -0.13557887]]
Iteration 600 of 1000: loss=0.101 " + "l1=0.067" + "l2=0.0344 f=-0.584 shape=(1, 9000, 1)
logits [[-0.15808077 -0.63107294 -1.3763442  -0.17037922]]
Iteration 700 of 1000: loss=0.0946 " + "l1=0.0602" + "l2=0.0345 f=-0.575 shape=(1, 9000, 1)
logits [[-0.1897726  -0.62456    -1.2839358  -0.20204285]]
Iteration 800 of 1000: loss=0.0881 " + "l1=0.0536" + "l2=0.0345 f=-0.564 shape=(1, 9000, 1)
logits [[-0.21640694 -0.6285454  -1.1913968  -0.2187374 ]]
Iteration 900 of 1000: loss=0.0826 " + "l1=0.0468" + "l2=0.0358 f=-0.556 shape=(1, 9000, 1)
logits [[-0.24607198 -0.62283814 -1.0978556  -0.256484  ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.325 " + "l1=0.325" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 1.4253796 -1.725053  -2.7706685  0.3612521]]
Iteration 100 of 1000: loss=0.243 " + "l1=0.209" + "l2=0.0339 f=-0.63 shape=(1, 9000, 1)
logits [[ 0.4123937  -1.0573045  -2.2829194   0.40919802]]
Iteration 200 of 1000: loss=0.181 " + "l1=0.14" + "l2=0.041 f=-0.62 shape=(1, 9000, 1)
logits [[ 0.00760682 -0.6989645  -1.796352    0.00829034]]
Iteration 300 of 1000: loss=0.155 " + "l1=0.108" + "l2=0.0467 f=-0.581 shape=(1, 9000, 1)
logits [[-0.11482851 -0.5825255  -1.5120183  -0.11477718]]
Iteration 400 of 1000: loss=0.141 " + "l1=0.0925" + "l2=0.0485 f=-0.587 shape=(1, 9000, 1)
logits [[-0.21004632 -0.5227467  -1.40379    -0.2123833 ]]
Iteration 500 of 1000: loss=0.133 " + "l1=0.0815" + "l2=0.0514 f=-0.592 shape=(1, 9000, 1)
logits [[-0.2781261  -0.49880785 -1.3210425  -0.26923612]]
Iteration 600 of 1000: loss=0.118 " + "l1=0.0605" + "l2=0.0574 f=-0.598 shape=(1, 9000, 1)
logits [[-0.35870498 -0.5523706  -1.1299593  -0.34928247]]
Iteration 700 of 1000: loss=0.108 " + "l1=0.0455" + "l2=0.0623 f=-0.592 shape=(1, 9000, 1)
logits [[-0.42742357 -0.5019996  -1.0131931  -0.42560804]]
Iteration 800 of 1000: loss=0.0904 " + "l1=0.018" + "l2=0.0724 f=-0.547 shape=(1, 9000, 1)
logits [[-0.48861483 -0.5031861  -0.7154749  -0.48267776]]
Iteration 900 of 1000: loss=0.0762 " + "l1=0.00165" + "l2=0.0745 f=-0.516 shape=(1, 9000, 1)
logits [[-0.49840784 -0.52090997 -0.51969856 -0.52469987]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.278 " + "l1=0.278" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 1.4253796 -1.725053  -2.7706685  0.3612521]]
Iteration 100 of 1000: loss=0.217 " + "l1=0.193" + "l2=0.024 f=-0.639 shape=(1, 9000, 1)
logits [[ 0.5012562 -1.1455266 -2.4145973  0.5033932]]
Iteration 200 of 1000: loss=0.165 " + "l1=0.13" + "l2=0.0345 f=-0.619 shape=(1, 9000, 1)
logits [[ 0.09400375 -0.77022094 -1.8755618   0.07467467]]
Iteration 300 of 1000: loss=0.149 " + "l1=0.115" + "l2=0.0342 f=-0.614 shape=(1, 9000, 1)
logits [[-0.00991152 -0.6930109  -1.7456634  -0.00722194]]
Iteration 400 of 1000: loss=0.131 " + "l1=0.0905" + "l2=0.0407 f=-0.587 shape=(1, 9000, 1)
logits [[-0.12799817 -0.5948947  -1.4945048  -0.13126728]]
Iteration 500 of 1000: loss=0.126 " + "l1=0.0835" + "l2=0.042 f=-0.591 shape=(1, 9000, 1)
logits [[-0.18041565 -0.5499892  -1.4412756  -0.19418645]]
Iteration 600 of 1000: loss=0.118 " + "l1=0.0733" + "l2=0.0449 f=-0.593 shape=(1, 9000, 1)
logits [[-0.25589073 -0.5294627  -1.34629    -0.24001008]]
Iteration 700 of 1000: loss=0.11 " + "l1=0.063" + "l2=0.0471 f=-0.59 shape=(1, 9000, 1)
logits [[-0.29019997 -0.5511416  -1.2352167  -0.28358686]]
Iteration 800 of 1000: loss=0.103 " + "l1=0.0542" + "l2=0.0488 f=-0.588 shape=(1, 9000, 1)
logits [[-0.32782057 -0.54101443 -1.1465431  -0.33641595]]
Iteration 900 of 1000: loss=0.0925 " + "l1=0.0379" + "l2=0.0546 f=-0.562 shape=(1, 9000, 1)
logits [[-0.3772699  -0.53968924 -0.9489254  -0.3801207 ]]
--- 324.4806685447693 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0106 " + "l1=0.0106" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 1.4253796 -1.725053  -2.7706685  0.3612521]]
Iteration 100 of 1000: loss=0.0069 " + "l1=0.00545" + "l2=0.00144 f=-0.673 shape=(1, 9000, 1)
logits [[ 1.1295886 -1.6214795 -2.785358   0.5842728]]
Iteration 200 of 1000: loss=0.00542 " + "l1=0.00332" + "l2=0.0021 f=-0.67 shape=(1, 9000, 1)
logits [[ 1.0304192  -1.6100899  -2.7986398   0.69801265]]
Iteration 300 of 1000: loss=0.00411 " + "l1=0.00139" + "l2=0.00272 f=-0.666 shape=(1, 9000, 1)
logits [[ 0.94492006 -1.6034794  -2.811508    0.8061196 ]]
Iteration 400 of 1000: loss=0.00295 " + "l1=4.28e-05" + "l2=0.0029 f=-0.662 shape=(1, 9000, 1)
logits [[ 0.8971937 -1.6119211 -2.824253   0.8929117]]
Iteration 500 of 1000: loss=0.00239 " + "l1=0" + "l2=0.00239 f=-0.66 shape=(1, 9000, 1)
logits [[ 0.909944  -1.6303221 -2.8301044  0.9116114]]
Iteration 600 of 1000: loss=0.00211 " + "l1=0" + "l2=0.00211 f=-0.659 shape=(1, 9000, 1)
logits [[ 0.9194032 -1.6410071 -2.834906   0.9198968]]
Iteration 700 of 1000: loss=0.00192 " + "l1=0" + "l2=0.00192 f=-0.659 shape=(1, 9000, 1)
logits [[ 0.92435235 -1.6471635  -2.8381228   0.9259728 ]]
Iteration 800 of 1000: loss=0.00176 " + "l1=9.93e-06" + "l2=0.00175 f=-0.659 shape=(1, 9000, 1)
logits [[ 0.9305837  -1.6535758  -2.8419752   0.92959106]]
Iteration 900 of 1000: loss=0.00169 " + "l1=0" + "l2=0.00169 f=-0.659 shape=(1, 9000, 1)
logits [[ 0.9333784 -1.6585178 -2.84586    0.9353274]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.00532 " + "l1=0.00532" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 1.4253796 -1.725053  -2.7706685  0.3612521]]
Iteration 100 of 1000: loss=0.00429 " + "l1=0.00385" + "l2=0.000445 f=-0.675 shape=(1, 9000, 1)
logits [[ 1.2547098  -1.6612283  -2.7779157   0.48483843]]
Iteration 200 of 1000: loss=0.00397 " + "l1=0.00341" + "l2=0.000558 f=-0.674 shape=(1, 9000, 1)
logits [[ 1.2116857 -1.6542542 -2.7819061  0.5288688]]
Iteration 300 of 1000: loss=0.00367 " + "l1=0.00296" + "l2=0.000711 f=-0.673 shape=(1, 9000, 1)
logits [[ 1.1704764  -1.6502707  -2.7885137   0.57788056]]
Iteration 400 of 1000: loss=0.00337 " + "l1=0.0025" + "l2=0.000867 f=-0.671 shape=(1, 9000, 1)
logits [[ 1.1303023 -1.6480919 -2.795913   0.630127 ]]
Iteration 500 of 1000: loss=0.00313 " + "l1=0.00208" + "l2=0.00105 f=-0.669 shape=(1, 9000, 1)
logits [[ 1.092735   -1.6446009  -2.8028197   0.67771184]]
Iteration 600 of 1000: loss=0.00289 " + "l1=0.00167" + "l2=0.00122 f=-0.668 shape=(1, 9000, 1)
logits [[ 1.0577896 -1.6425831 -2.8099897  0.7246211]]
Iteration 700 of 1000: loss=0.00266 " + "l1=0.00126" + "l2=0.00141 f=-0.666 shape=(1, 9000, 1)
logits [[ 1.022689  -1.6411173 -2.8169448  0.7711892]]
Iteration 800 of 1000: loss=0.00245 " + "l1=0.000865" + "l2=0.00159 f=-0.664 shape=(1, 9000, 1)
logits [[ 0.9905534  -1.6406624  -2.8240314   0.81761163]]
Iteration 900 of 1000: loss=0.00221 " + "l1=0.000483" + "l2=0.00173 f=-0.662 shape=(1, 9000, 1)
logits [[ 0.9604807  -1.6419895  -2.8315206   0.86395323]]
const [0.0075]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.00798 " + "l1=0.00798" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 1.4253796 -1.725053  -2.7706685  0.3612521]]
Iteration 100 of 1000: loss=0.0058 " + "l1=0.00492" + "l2=0.000872 f=-0.674 shape=(1, 9000, 1)
logits [[ 1.1895374  -1.6389629  -2.7808416   0.53303343]]
Iteration 200 of 1000: loss=0.005 " + "l1=0.00376" + "l2=0.00124 f=-0.673 shape=(1, 9000, 1)
logits [[ 1.1143347 -1.6277201 -2.7901795  0.6128042]]
Iteration 300 of 1000: loss=0.00426 " + "l1=0.00269" + "l2=0.00157 f=-0.67 shape=(1, 9000, 1)
logits [[ 1.0510821 -1.6233004 -2.800822   0.6929304]]
Iteration 400 of 1000: loss=0.00358 " + "l1=0.00168" + "l2=0.00189 f=-0.667 shape=(1, 9000, 1)
logits [[ 0.99468255 -1.6211861  -2.8105376   0.7701113 ]]
Iteration 500 of 1000: loss=0.00292 " + "l1=0.000697" + "l2=0.00223 f=-0.663 shape=(1, 9000, 1)
logits [[ 0.94073236 -1.6215221  -2.8208354   0.84784436]]
Iteration 600 of 1000: loss=0.00238 " + "l1=7.1e-06" + "l2=0.00238 f=-0.661 shape=(1, 9000, 1)
logits [[ 0.9091005  -1.6286426  -2.8312006   0.90815437]]
Iteration 700 of 1000: loss=0.00204 " + "l1=0" + "l2=0.00204 f=-0.66 shape=(1, 9000, 1)
logits [[ 0.918879  -1.6409274 -2.836506   0.9194977]]
Iteration 800 of 1000: loss=0.00193 " + "l1=1.3e-05" + "l2=0.00192 f=-0.66 shape=(1, 9000, 1)
logits [[ 0.9261883  -1.6484181  -2.840224    0.92445344]]
Iteration 900 of 1000: loss=0.00186 " + "l1=0" + "l2=0.00186 f=-0.659 shape=(1, 9000, 1)
logits [[ 0.9302288  -1.6542648  -2.8439677   0.93038493]]
const [0.00625]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00665 " + "l1=0.00665" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 1.4253796 -1.725053  -2.7706685  0.3612521]]
Iteration 100 of 1000: loss=0.0051 " + "l1=0.00447" + "l2=0.000632 f=-0.675 shape=(1, 9000, 1)
logits [[ 1.2229964 -1.6500716 -2.779213   0.5079393]]
Iteration 200 of 1000: loss=0.00458 " + "l1=0.00372" + "l2=0.000854 f=-0.673 shape=(1, 9000, 1)
logits [[ 1.1640246 -1.6405228 -2.786025   0.5686266]]
Iteration 300 of 1000: loss=0.00406 " + "l1=0.00295" + "l2=0.00111 f=-0.672 shape=(1, 9000, 1)
logits [[ 1.1079848 -1.6351298 -2.7949762  0.6360071]]
Iteration 400 of 1000: loss=0.00361 " + "l1=0.00226" + "l2=0.00135 f=-0.669 shape=(1, 9000, 1)
logits [[ 1.0600046 -1.631776  -2.8041034  0.6980965]]
Iteration 500 of 1000: loss=0.00315 " + "l1=0.00159" + "l2=0.00156 f=-0.667 shape=(1, 9000, 1)
logits [[ 1.0158142  -1.6315353  -2.8126533   0.76123196]]
Iteration 600 of 1000: loss=0.00277 " + "l1=0.000925" + "l2=0.00184 f=-0.664 shape=(1, 9000, 1)
logits [[ 0.9718326 -1.6311213 -2.8208995  0.8238171]]
Iteration 700 of 1000: loss=0.00236 " + "l1=0.000286" + "l2=0.00207 f=-0.661 shape=(1, 9000, 1)
logits [[ 0.93148214 -1.6331164  -2.829976    0.8856631 ]]
Iteration 800 of 1000: loss=0.00205 " + "l1=3.33e-07" + "l2=0.00205 f=-0.66 shape=(1, 9000, 1)
logits [[ 0.9192252 -1.6406989 -2.83721    0.9191719]]
Iteration 900 of 1000: loss=0.00198 " + "l1=0" + "l2=0.00198 f=-0.66 shape=(1, 9000, 1)
logits [[ 0.9256754  -1.6484267  -2.841248    0.92584103]]
const [0.005625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00599 " + "l1=0.00599" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 1.4253796 -1.725053  -2.7706685  0.3612521]]
Iteration 100 of 1000: loss=0.00471 " + "l1=0.00417" + "l2=0.000537 f=-0.675 shape=(1, 9000, 1)
logits [[ 1.2378983  -1.6553577  -2.778411    0.49682704]]
Iteration 200 of 1000: loss=0.00429 " + "l1=0.0036" + "l2=0.000694 f=-0.674 shape=(1, 9000, 1)
logits [[ 1.1878163  -1.6474239  -2.783611    0.54862684]]
Iteration 300 of 1000: loss=0.0039 " + "l1=0.00299" + "l2=0.000911 f=-0.672 shape=(1, 9000, 1)
logits [[ 1.1386833  -1.6430607  -2.7916815   0.60772246]]
Iteration 400 of 1000: loss=0.0035 " + "l1=0.00241" + "l2=0.00109 f=-0.67 shape=(1, 9000, 1)
logits [[ 1.0935109  -1.6391778  -2.7996488   0.66481507]]
Iteration 500 of 1000: loss=0.0032 " + "l1=0.00187" + "l2=0.00132 f=-0.668 shape=(1, 9000, 1)
logits [[ 1.0525184 -1.6368295 -2.8079798  0.7195077]]
Iteration 600 of 1000: loss=0.00284 " + "l1=0.00134" + "l2=0.0015 f=-0.666 shape=(1, 9000, 1)
logits [[ 1.0130774  -1.6356612  -2.8154502   0.77407366]]
Iteration 700 of 1000: loss=0.00264 " + "l1=0.000826" + "l2=0.00181 f=-0.664 shape=(1, 9000, 1)
logits [[ 0.97547954 -1.635476   -2.823228    0.8285876 ]]
Iteration 800 of 1000: loss=0.00227 " + "l1=0.000326" + "l2=0.00195 f=-0.661 shape=(1, 9000, 1)
logits [[ 0.94059837 -1.6374435  -2.831542    0.8826585 ]]
Iteration 900 of 1000: loss=0.00202 " + "l1=1.94e-07" + "l2=0.00202 f=-0.66 shape=(1, 9000, 1)
logits [[ 0.9206099  -1.6416785  -2.8387845   0.92057544]]
--- 322.53069376945496 seconds ---
Adv result:3
Loading record A01941
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0429 " + "l1=0.0429" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.2673109 -2.0220602  1.6534401 -3.704485 ]]
Iteration 100 of 1000: loss=0.0424 " + "l1=0.042" + "l2=0.00036 f=-0.447 shape=(1, 9000, 1)
logits [[ 2.2118695 -1.9877149  1.6305817 -3.6429355]]
Iteration 200 of 1000: loss=0.0422 " + "l1=0.0419" + "l2=0.000362 f=-0.446 shape=(1, 9000, 1)
logits [[ 2.20417   -1.9811372  1.6265315 -3.6337876]]
Iteration 300 of 1000: loss=0.0421 " + "l1=0.0417" + "l2=0.000437 f=-0.445 shape=(1, 9000, 1)
logits [[ 2.1939442 -1.9733945  1.6219275 -3.6214783]]
Iteration 400 of 1000: loss=0.042 " + "l1=0.0415" + "l2=0.000524 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.1829066 -1.9660708  1.6173567 -3.6080275]]
Iteration 500 of 1000: loss=0.0419 " + "l1=0.0413" + "l2=0.000624 f=-0.442 shape=(1, 9000, 1)
logits [[ 2.1718884 -1.9592621  1.6130946 -3.5944777]]
Iteration 600 of 1000: loss=0.0419 " + "l1=0.0412" + "l2=0.000747 f=-0.441 shape=(1, 9000, 1)
logits [[ 2.1622024 -1.9530885  1.6093651 -3.5825415]]
Iteration 700 of 1000: loss=0.0419 " + "l1=0.041" + "l2=0.000868 f=-0.44 shape=(1, 9000, 1)
logits [[ 2.15292   -1.9476817  1.6061093 -3.5706577]]
Iteration 800 of 1000: loss=0.0419 " + "l1=0.0409" + "l2=0.00104 f=-0.439 shape=(1, 9000, 1)
logits [[ 2.144127  -1.9427462  1.6032108 -3.5592287]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.429 " + "l1=0.429" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.2673109 -2.0220602  1.6534401 -3.704485 ]]
Iteration 100 of 1000: loss=0.383 " + "l1=0.358" + "l2=0.0249 f=-0.403 shape=(1, 9000, 1)
logits [[ 1.8588642 -1.7236791  1.4853994 -3.2329643]]
Iteration 200 of 1000: loss=0.363 " + "l1=0.329" + "l2=0.0347 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.6860337 -1.601379   1.4175614 -3.000877 ]]
Iteration 300 of 1000: loss=0.348 " + "l1=0.305" + "l2=0.0425 f=-0.355 shape=(1, 9000, 1)
logits [[ 1.5358374 -1.5191504  1.3593345 -2.7942395]]
Iteration 400 of 1000: loss=0.334 " + "l1=0.284" + "l2=0.05 f=-0.337 shape=(1, 9000, 1)
logits [[ 1.389358  -1.4469575  1.3015088 -2.5908716]]
Iteration 500 of 1000: loss=0.322 " + "l1=0.266" + "l2=0.0558 f=-0.32 shape=(1, 9000, 1)
logits [[ 1.2682179 -1.3910751  1.2544802 -2.4122775]]
Iteration 600 of 1000: loss=0.312 " + "l1=0.253" + "l2=0.0591 f=-0.306 shape=(1, 9000, 1)
logits [[ 1.1941229 -1.3306845  1.1955762 -2.2838187]]
Iteration 700 of 1000: loss=0.301 " + "l1=0.241" + "l2=0.0602 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.1420556 -1.2634262  1.1436285 -2.193494 ]]
Iteration 800 of 1000: loss=0.292 " + "l1=0.23" + "l2=0.0617 f=-0.28 shape=(1, 9000, 1)
logits [[ 1.1010299 -1.1990465  1.098163  -2.1193025]]
Iteration 900 of 1000: loss=0.286 " + "l1=0.224" + "l2=0.0625 f=-0.271 shape=(1, 9000, 1)
logits [[ 1.0724282 -1.1632687  1.0707941 -2.0636094]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.29 " + "l1=4.29" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.2673109 -2.0220602  1.6534401 -3.704485 ]]
Iteration 100 of 1000: loss=1.55 " + "l1=0.6" + "l2=0.945 f=-0.183 shape=(1, 9000, 1)
logits [[ 0.39199808 -0.19589643  0.40419456 -1.3339972 ]]
Iteration 200 of 1000: loss=0.971 " + "l1=0.0106" + "l2=0.96 f=-0.137 shape=(1, 9000, 1)
logits [[ 0.03417782  0.07127144  0.08182171 -0.7337953 ]]
Iteration 300 of 1000: loss=0.753 " + "l1=0.00674" + "l2=0.746 f=-0.144 shape=(1, 9000, 1)
logits [[ 0.00578526  0.04720861  0.05395314 -0.6846222 ]]
Iteration 400 of 1000: loss=0.625 " + "l1=0" + "l2=0.625 f=-0.149 shape=(1, 9000, 1)
logits [[ 0.00386812  0.03398547  0.02763984 -0.6628975 ]]
Iteration 500 of 1000: loss=0.555 " + "l1=0" + "l2=0.555 f=-0.153 shape=(1, 9000, 1)
logits [[-0.01343998  0.02710221  0.01503066 -0.640118  ]]
Iteration 600 of 1000: loss=0.506 " + "l1=0" + "l2=0.506 f=-0.156 shape=(1, 9000, 1)
logits [[ 0.00700762  0.01392548  0.01129023 -0.65665305]]
Iteration 700 of 1000: loss=0.487 " + "l1=0" + "l2=0.487 f=-0.16 shape=(1, 9000, 1)
logits [[-0.00565227  0.01703389  0.00391112 -0.6536855 ]]
Iteration 800 of 1000: loss=0.467 " + "l1=0" + "l2=0.467 f=-0.162 shape=(1, 9000, 1)
logits [[ 3.8320199e-05  1.1722480e-02  3.7108404e-03 -6.6382504e-01]]
Iteration 900 of 1000: loss=0.456 " + "l1=0" + "l2=0.456 f=-0.167 shape=(1, 9000, 1)
logits [[-0.02631887  0.01180513 -0.00120878 -0.6523828 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.36 " + "l1=2.36" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.2673109 -2.0220602  1.6534401 -3.704485 ]]
Iteration 100 of 1000: loss=1.26 " + "l1=0.807" + "l2=0.453 f=-0.239 shape=(1, 9000, 1)
logits [[ 0.8060449  -0.6609683   0.80675566 -1.9063741 ]]
Iteration 200 of 1000: loss=0.968 " + "l1=0.461" + "l2=0.508 f=-0.189 shape=(1, 9000, 1)
logits [[ 0.5146873  -0.32307076  0.51341593 -1.4598596 ]]
Iteration 300 of 1000: loss=0.77 " + "l1=0.247" + "l2=0.523 f=-0.167 shape=(1, 9000, 1)
logits [[ 0.27799347 -0.1585093   0.29050773 -1.0776128 ]]
Iteration 400 of 1000: loss=0.606 " + "l1=0.0672" + "l2=0.539 f=-0.15 shape=(1, 9000, 1)
logits [[ 0.06735792 -0.00748968  0.11463832 -0.77407056]]
Iteration 500 of 1000: loss=0.517 " + "l1=0.00931" + "l2=0.507 f=-0.149 shape=(1, 9000, 1)
logits [[-0.00704694  0.03129222  0.0482172  -0.6675431 ]]
Iteration 600 of 1000: loss=0.481 " + "l1=0.0138" + "l2=0.467 f=-0.152 shape=(1, 9000, 1)
logits [[ 0.00486289  0.014273    0.03927884 -0.66553706]]
Iteration 700 of 1000: loss=0.458 " + "l1=0" + "l2=0.458 f=-0.155 shape=(1, 9000, 1)
logits [[-0.00760111  0.02150133  0.01833508 -0.6514906 ]]
Iteration 800 of 1000: loss=0.444 " + "l1=0.0036" + "l2=0.44 f=-0.159 shape=(1, 9000, 1)
logits [[-0.01142134  0.0146374   0.02118604 -0.6613778 ]]
Iteration 900 of 1000: loss=0.432 " + "l1=0.000994" + "l2=0.431 f=-0.162 shape=(1, 9000, 1)
logits [[-0.00945994  0.01197949  0.01378734 -0.6629137 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.39 " + "l1=1.39" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.2673109 -2.0220602  1.6534401 -3.704485 ]]
Iteration 100 of 1000: loss=0.948 " + "l1=0.738" + "l2=0.21 f=-0.304 shape=(1, 9000, 1)
logits [[ 1.1202976 -1.1451963  1.127014  -2.3179116]]
Iteration 200 of 1000: loss=0.804 " + "l1=0.553" + "l2=0.251 f=-0.252 shape=(1, 9000, 1)
logits [[ 0.89626396 -0.8044084   0.8885901  -1.9868855 ]]
Iteration 300 of 1000: loss=0.692 " + "l1=0.419" + "l2=0.272 f=-0.216 shape=(1, 9000, 1)
logits [[ 0.71513826 -0.5744158   0.7160122  -1.7206957 ]]
Iteration 400 of 1000: loss=0.605 " + "l1=0.311" + "l2=0.294 f=-0.19 shape=(1, 9000, 1)
logits [[ 0.55742866 -0.3985285   0.5585707  -1.4783744 ]]
Iteration 500 of 1000: loss=0.557 " + "l1=0.254" + "l2=0.303 f=-0.189 shape=(1, 9000, 1)
logits [[ 0.44633144 -0.3180169   0.46436062 -1.3485044 ]]
Iteration 600 of 1000: loss=0.518 " + "l1=0.191" + "l2=0.327 f=-0.181 shape=(1, 9000, 1)
logits [[ 0.34137452 -0.2360526   0.3524141  -1.1821944 ]]
Iteration 700 of 1000: loss=0.485 " + "l1=0.154" + "l2=0.332 f=-0.177 shape=(1, 9000, 1)
logits [[ 0.26854646 -0.18848197  0.28514263 -1.0751976 ]]
Iteration 800 of 1000: loss=0.453 " + "l1=0.122" + "l2=0.331 f=-0.17 shape=(1, 9000, 1)
logits [[ 0.22016963 -0.15316272  0.22157706 -0.96966416]]
Iteration 900 of 1000: loss=0.428 " + "l1=0.0983" + "l2=0.33 f=-0.168 shape=(1, 9000, 1)
logits [[ 0.16473567 -0.12951253  0.17293322 -0.8819184 ]]
--- 308.49546480178833 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00614 " + "l1=0.00614" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.2673109 -2.0220602  1.6534401 -3.704485 ]]
Iteration 100 of 1000: loss=0.0059 " + "l1=0.00568" + "l2=0.000215 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.2275224 -2.026635   1.659048  -3.6628428]]
Iteration 200 of 1000: loss=0.00583 " + "l1=0.00565" + "l2=0.000178 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.2243958 -2.0264719  1.6590595 -3.6591213]]
Iteration 300 of 1000: loss=0.00579 " + "l1=0.00558" + "l2=0.000212 f=-0.45 shape=(1, 9000, 1)
logits [[ 2.2177174 -2.0266523  1.6595378 -3.6520927]]
Iteration 400 of 1000: loss=0.00575 " + "l1=0.0055" + "l2=0.000244 f=-0.45 shape=(1, 9000, 1)
logits [[ 2.2106512 -2.0269942  1.6602917 -3.644796 ]]
Iteration 500 of 1000: loss=0.00572 " + "l1=0.00542" + "l2=0.000302 f=-0.45 shape=(1, 9000, 1)
logits [[ 2.2033324 -2.0273235  1.6611269 -3.637299 ]]
Iteration 600 of 1000: loss=0.0057 " + "l1=0.00534" + "l2=0.000358 f=-0.45 shape=(1, 9000, 1)
logits [[ 2.196262  -2.0277169  1.6622609 -3.630019 ]]
Iteration 700 of 1000: loss=0.00578 " + "l1=0.00526" + "l2=0.00051 f=-0.45 shape=(1, 9000, 1)
logits [[ 2.1897728 -2.0278962  1.6632926 -3.6237001]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0614 " + "l1=0.0614" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.2673109 -2.0220602  1.6534401 -3.704485 ]]
Iteration 100 of 1000: loss=0.0423 " + "l1=0.0324" + "l2=0.0099 f=-0.447 shape=(1, 9000, 1)
logits [[ 2.0147588 -2.0586188  1.6906358 -3.4356968]]
Iteration 200 of 1000: loss=0.0347 " + "l1=0.0211" + "l2=0.0136 f=-0.444 shape=(1, 9000, 1)
logits [[ 1.9148585 -2.0727615  1.7042235 -3.321676 ]]
Iteration 300 of 1000: loss=0.0278 " + "l1=0.0106" + "l2=0.0172 f=-0.44 shape=(1, 9000, 1)
logits [[ 1.8204238 -2.0832527  1.7141571 -3.2127802]]
Iteration 400 of 1000: loss=0.0207 " + "l1=0.000509" + "l2=0.0202 f=-0.437 shape=(1, 9000, 1)
logits [[ 1.7313377 -2.093447   1.7262428 -3.1110308]]
Iteration 500 of 1000: loss=0.0166 " + "l1=0.000278" + "l2=0.0163 f=-0.436 shape=(1, 9000, 1)
logits [[ 1.7280192 -2.0893822  1.7252389 -3.1078205]]
Iteration 600 of 1000: loss=0.014 " + "l1=0" + "l2=0.014 f=-0.436 shape=(1, 9000, 1)
logits [[ 1.7241175 -2.083707   1.7246687 -3.1077638]]
Iteration 700 of 1000: loss=0.0128 " + "l1=0.000351" + "l2=0.0125 f=-0.436 shape=(1, 9000, 1)
logits [[ 1.7284491 -2.0774899  1.7249353 -3.117988 ]]
Iteration 800 of 1000: loss=0.0115 " + "l1=0" + "l2=0.0115 f=-0.435 shape=(1, 9000, 1)
logits [[ 1.726874  -2.0720477  1.727549  -3.1221173]]
Iteration 900 of 1000: loss=0.0108 " + "l1=0" + "l2=0.0108 f=-0.434 shape=(1, 9000, 1)
logits [[ 1.729271  -2.0663095  1.730096  -3.130442 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0338 " + "l1=0.0338" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.2673109 -2.0220602  1.6534401 -3.704485 ]]
Iteration 100 of 1000: loss=0.0277 " + "l1=0.0246" + "l2=0.00312 f=-0.449 shape=(1, 9000, 1)
logits [[ 2.1222873 -2.040445   1.675302  -3.5529397]]
Iteration 200 of 1000: loss=0.0256 " + "l1=0.0216" + "l2=0.00404 f=-0.447 shape=(1, 9000, 1)
logits [[ 2.0747955 -2.0473416  1.6821014 -3.498642 ]]
Iteration 300 of 1000: loss=0.0237 " + "l1=0.0188" + "l2=0.00489 f=-0.446 shape=(1, 9000, 1)
logits [[ 2.027956  -2.052146   1.6863636 -3.4460843]]
Iteration 400 of 1000: loss=0.0218 " + "l1=0.0163" + "l2=0.00558 f=-0.445 shape=(1, 9000, 1)
logits [[ 1.9847472 -2.0554152  1.6891272 -3.3981202]]
Iteration 500 of 1000: loss=0.0202 " + "l1=0.0139" + "l2=0.00628 f=-0.444 shape=(1, 9000, 1)
logits [[ 1.9463488 -2.0576987  1.6930491 -3.3564923]]
Iteration 600 of 1000: loss=0.0187 " + "l1=0.0115" + "l2=0.00714 f=-0.442 shape=(1, 9000, 1)
logits [[ 1.9082246 -2.0600471  1.6985196 -3.3163378]]
Iteration 700 of 1000: loss=0.017 " + "l1=0.00896" + "l2=0.00806 f=-0.441 shape=(1, 9000, 1)
logits [[ 1.8670366 -2.0617425  1.7042022 -3.2733083]]
Iteration 800 of 1000: loss=0.0155 " + "l1=0.00673" + "l2=0.00878 f=-0.439 shape=(1, 9000, 1)
logits [[ 1.832676  -2.0626829  1.7103912 -3.2382805]]
Iteration 900 of 1000: loss=0.0141 " + "l1=0.00445" + "l2=0.0096 f=-0.438 shape=(1, 9000, 1)
logits [[ 1.799374  -2.065139   1.7185018 -3.2054067]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0476 " + "l1=0.0476" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.2673109 -2.0220602  1.6534401 -3.704485 ]]
Iteration 100 of 1000: loss=0.0359 " + "l1=0.0298" + "l2=0.00608 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.0695755 -2.0502574  1.6844146 -3.496455 ]]
Iteration 200 of 1000: loss=0.0316 " + "l1=0.0237" + "l2=0.00792 f=-0.446 shape=(1, 9000, 1)
logits [[ 1.996469  -2.0587647  1.6909306 -3.4123259]]
Iteration 300 of 1000: loss=0.0276 " + "l1=0.0178" + "l2=0.00986 f=-0.444 shape=(1, 9000, 1)
logits [[ 1.9278978 -2.067844   1.6984161 -3.3338714]]
Iteration 400 of 1000: loss=0.024 " + "l1=0.0125" + "l2=0.0115 f=-0.442 shape=(1, 9000, 1)
logits [[ 1.8674157 -2.0733213  1.7058879 -3.2666738]]
Iteration 500 of 1000: loss=0.0203 " + "l1=0.00688" + "l2=0.0134 f=-0.439 shape=(1, 9000, 1)
logits [[ 1.8024719 -2.077655   1.7137343 -3.194585 ]]
Iteration 600 of 1000: loss=0.0165 " + "l1=0.00106" + "l2=0.0154 f=-0.437 shape=(1, 9000, 1)
logits [[ 1.7378552 -2.0837164  1.7241299 -3.1261318]]
Iteration 700 of 1000: loss=0.0138 " + "l1=5.63e-05" + "l2=0.0137 f=-0.436 shape=(1, 9000, 1)
logits [[ 1.7265697 -2.0810418  1.7258428 -3.1167367]]
Iteration 800 of 1000: loss=0.0124 " + "l1=0" + "l2=0.0124 f=-0.436 shape=(1, 9000, 1)
logits [[ 1.7259786 -2.0754957  1.7275454 -3.1209047]]
Iteration 900 of 1000: loss=0.0113 " + "l1=0" + "l2=0.0113 f=-0.435 shape=(1, 9000, 1)
logits [[ 1.729189  -2.0691206  1.7292295 -3.1299508]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0407 " + "l1=0.0407" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.2673109 -2.0220602  1.6534401 -3.704485 ]]
Iteration 100 of 1000: loss=0.032 " + "l1=0.0275" + "l2=0.00451 f=-0.449 shape=(1, 9000, 1)
logits [[ 2.0954282 -2.0453687  1.6799647 -3.5241005]]
Iteration 200 of 1000: loss=0.0289 " + "l1=0.0231" + "l2=0.0058 f=-0.447 shape=(1, 9000, 1)
logits [[ 2.0361865 -2.0532722  1.6868619 -3.4573257]]
Iteration 300 of 1000: loss=0.0261 " + "l1=0.0191" + "l2=0.00699 f=-0.445 shape=(1, 9000, 1)
logits [[ 1.9796379 -2.0594172  1.6911613 -3.3929513]]
Iteration 400 of 1000: loss=0.0235 " + "l1=0.0154" + "l2=0.00811 f=-0.444 shape=(1, 9000, 1)
logits [[ 1.928039  -2.0640361  1.6957489 -3.3342984]]
Iteration 500 of 1000: loss=0.0211 " + "l1=0.0115" + "l2=0.00953 f=-0.442 shape=(1, 9000, 1)
logits [[ 1.8766446 -2.067391   1.7026814 -3.2788186]]
Iteration 600 of 1000: loss=0.0184 " + "l1=0.00787" + "l2=0.0106 f=-0.44 shape=(1, 9000, 1)
logits [[ 1.8279476 -2.0697117  1.7091831 -3.2271588]]
Iteration 700 of 1000: loss=0.016 " + "l1=0.00393" + "l2=0.0121 f=-0.438 shape=(1, 9000, 1)
logits [[ 1.7767875 -2.0733647  1.7175364 -3.1727297]]
Iteration 800 of 1000: loss=0.0137 " + "l1=0.000302" + "l2=0.0134 f=-0.437 shape=(1, 9000, 1)
logits [[ 1.7324266 -2.078505   1.727872  -3.1282418]]
Iteration 900 of 1000: loss=0.0122 " + "l1=1.04e-05" + "l2=0.0122 f=-0.436 shape=(1, 9000, 1)
logits [[ 1.7293153 -2.0730474  1.7291576 -3.1284125]]
--- 301.5112018585205 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0597 " + "l1=0.0597" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.2673109 -2.0220602  1.6534401 -3.704485 ]]
Iteration 100 of 1000: loss=0.0583 " + "l1=0.0575" + "l2=0.000751 f=-0.444 shape=(1, 9000, 1)
logits [[ 2.1779118 -2.007567   1.6287693 -3.5769196]]
Iteration 200 of 1000: loss=0.0579 " + "l1=0.0571" + "l2=0.000811 f=-0.442 shape=(1, 9000, 1)
logits [[ 2.1590602 -2.004915   1.6228341 -3.5462012]]
Iteration 300 of 1000: loss=0.0575 " + "l1=0.0565" + "l2=0.001 f=-0.44 shape=(1, 9000, 1)
logits [[ 2.1369693 -2.0020404  1.6159735 -3.5103905]]
Iteration 400 of 1000: loss=0.0571 " + "l1=0.0559" + "l2=0.00121 f=-0.437 shape=(1, 9000, 1)
logits [[ 2.1146755 -1.9990321  1.6086633 -3.4736085]]
Iteration 500 of 1000: loss=0.0567 " + "l1=0.0553" + "l2=0.00145 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.0930078 -1.9966146  1.6017457 -3.4372787]]
Iteration 600 of 1000: loss=0.0564 " + "l1=0.0547" + "l2=0.00169 f=-0.432 shape=(1, 9000, 1)
logits [[ 2.0716083 -1.9945923  1.5947812 -3.4011028]]
Iteration 700 of 1000: loss=0.0561 " + "l1=0.0542" + "l2=0.00196 f=-0.43 shape=(1, 9000, 1)
logits [[ 2.0511332 -1.9926158  1.588166  -3.3661222]]
Iteration 800 of 1000: loss=0.0559 " + "l1=0.0537" + "l2=0.00224 f=-0.427 shape=(1, 9000, 1)
logits [[ 2.0321794 -1.9908415  1.5819714 -3.3329654]]
Iteration 900 of 1000: loss=0.0558 " + "l1=0.0532" + "l2=0.0026 f=-0.425 shape=(1, 9000, 1)
logits [[ 2.0144331 -1.9889823  1.5753475 -3.3011043]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.597 " + "l1=0.597" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.2673109 -2.0220602  1.6534401 -3.704485 ]]
Iteration 100 of 1000: loss=0.467 " + "l1=0.395" + "l2=0.0716 f=-0.372 shape=(1, 9000, 1)
logits [[ 1.4597461 -1.8887028  1.4346919 -2.492619 ]]
Iteration 200 of 1000: loss=0.411 " + "l1=0.34" + "l2=0.0712 f=-0.33 shape=(1, 9000, 1)
logits [[ 1.283874  -1.7788697  1.2853714 -2.110515 ]]
Iteration 300 of 1000: loss=0.373 " + "l1=0.297" + "l2=0.0759 f=-0.301 shape=(1, 9000, 1)
logits [[ 1.1555265 -1.7192227  1.1647357 -1.8054552]]
Iteration 400 of 1000: loss=0.347 " + "l1=0.264" + "l2=0.0825 f=-0.285 shape=(1, 9000, 1)
logits [[ 1.0274978 -1.6854262  1.0791957 -1.562995 ]]
Iteration 500 of 1000: loss=0.323 " + "l1=0.229" + "l2=0.0942 f=-0.269 shape=(1, 9000, 1)
logits [[ 0.87581044 -1.6370548   0.9866825  -1.3024119 ]]
Iteration 600 of 1000: loss=0.3 " + "l1=0.194" + "l2=0.106 f=-0.253 shape=(1, 9000, 1)
logits [[ 0.72362804 -1.5830157   0.89329255 -1.0462104 ]]
Iteration 700 of 1000: loss=0.279 " + "l1=0.167" + "l2=0.112 f=-0.24 shape=(1, 9000, 1)
logits [[ 0.6255335  -1.5347434   0.8080087  -0.86057216]]
Iteration 800 of 1000: loss=0.262 " + "l1=0.144" + "l2=0.118 f=-0.225 shape=(1, 9000, 1)
logits [[ 0.55857396 -1.4883858   0.7333349  -0.7025119 ]]
Iteration 900 of 1000: loss=0.248 " + "l1=0.127" + "l2=0.121 f=-0.213 shape=(1, 9000, 1)
logits [[ 0.514245   -1.4513644   0.67565304 -0.5922349 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.97 " + "l1=5.97" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.2673109 -2.0220602  1.6534401 -3.704485 ]]
Iteration 100 of 1000: loss=1.02 " + "l1=0.00817" + "l2=1.01 f=-0.156 shape=(1, 9000, 1)
logits [[-0.12686878 -1.2582982   0.38504502  0.3768703 ]]
Iteration 200 of 1000: loss=0.698 " + "l1=0" + "l2=0.698 f=-0.144 shape=(1, 9000, 1)
logits [[-0.0659976  -1.2771215   0.38203472  0.38409215]]
Iteration 300 of 1000: loss=0.573 " + "l1=0.0174" + "l2=0.555 f=-0.144 shape=(1, 9000, 1)
logits [[-0.04726581 -1.2845116   0.38590235  0.3685007 ]]
Iteration 400 of 1000: loss=0.483 " + "l1=0" + "l2=0.483 f=-0.147 shape=(1, 9000, 1)
logits [[-0.04726098 -1.2728587   0.36187407  0.36951208]]
Iteration 500 of 1000: loss=0.435 " + "l1=0" + "l2=0.435 f=-0.149 shape=(1, 9000, 1)
logits [[-0.02848036 -1.2603266   0.33716887  0.3537123 ]]
Iteration 600 of 1000: loss=0.413 " + "l1=0.0192" + "l2=0.394 f=-0.155 shape=(1, 9000, 1)
logits [[-0.00546196 -1.2490666   0.3267989   0.30755836]]
Iteration 700 of 1000: loss=0.37 " + "l1=0" + "l2=0.37 f=-0.157 shape=(1, 9000, 1)
logits [[-0.00876721 -1.2268705   0.30183974  0.30583042]]
Iteration 800 of 1000: loss=0.35 " + "l1=0" + "l2=0.35 f=-0.159 shape=(1, 9000, 1)
logits [[-0.00524655 -1.2227179   0.28942946  0.30380756]]
Iteration 900 of 1000: loss=0.339 " + "l1=0" + "l2=0.339 f=-0.156 shape=(1, 9000, 1)
logits [[-0.00534548 -1.2100023   0.2659389   0.32571512]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.28 " + "l1=3.28" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.2673109 -2.0220602  1.6534401 -3.704485 ]]
Iteration 100 of 1000: loss=1.01 " + "l1=0.156" + "l2=0.849 f=-0.169 shape=(1, 9000, 1)
logits [[-0.02377189 -1.3292276   0.48056293  0.19735646]]
Iteration 200 of 1000: loss=0.594 " + "l1=0" + "l2=0.594 f=-0.147 shape=(1, 9000, 1)
logits [[-0.04315469 -1.2898284   0.37205005  0.37446478]]
Iteration 300 of 1000: loss=0.478 " + "l1=0.00953" + "l2=0.468 f=-0.152 shape=(1, 9000, 1)
logits [[-0.0182452  -1.2787833   0.3523868   0.33506346]]
Iteration 400 of 1000: loss=0.41 " + "l1=0.000693" + "l2=0.409 f=-0.155 shape=(1, 9000, 1)
logits [[ 0.00886599 -1.2531636   0.31329682  0.31203726]]
Iteration 500 of 1000: loss=0.368 " + "l1=0" + "l2=0.368 f=-0.154 shape=(1, 9000, 1)
logits [[ 0.01714239 -1.2321377   0.29765463  0.30119458]]
Iteration 600 of 1000: loss=0.337 " + "l1=0.00127" + "l2=0.336 f=-0.152 shape=(1, 9000, 1)
logits [[ 0.03997117 -1.2235861   0.28932104  0.28702083]]
Iteration 700 of 1000: loss=0.315 " + "l1=0" + "l2=0.315 f=-0.149 shape=(1, 9000, 1)
logits [[ 0.05333056 -1.2037662   0.26543123  0.29024297]]
Iteration 800 of 1000: loss=0.291 " + "l1=0" + "l2=0.291 f=-0.151 shape=(1, 9000, 1)
logits [[ 0.07338526 -1.2122765   0.26655617  0.26680616]]
Iteration 900 of 1000: loss=0.276 " + "l1=0" + "l2=0.276 f=-0.154 shape=(1, 9000, 1)
logits [[ 0.08087467 -1.2160742   0.25509936  0.2648834 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.94 " + "l1=1.94" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.2673109 -2.0220602  1.6534401 -3.704485 ]]
Iteration 100 of 1000: loss=0.942 " + "l1=0.553" + "l2=0.389 f=-0.229 shape=(1, 9000, 1)
logits [[ 0.5464949  -1.5146626   0.87630254 -0.82490194]]
Iteration 200 of 1000: loss=0.628 " + "l1=0.159" + "l2=0.47 f=-0.178 shape=(1, 9000, 1)
logits [[ 0.10392528 -1.3463117   0.50926596  0.02148997]]
Iteration 300 of 1000: loss=0.447 " + "l1=0.00735" + "l2=0.439 f=-0.166 shape=(1, 9000, 1)
logits [[-0.04649752 -1.2428957   0.32394475  0.3013426 ]]
Iteration 400 of 1000: loss=0.363 " + "l1=0.00516" + "l2=0.358 f=-0.155 shape=(1, 9000, 1)
logits [[ 0.01450756 -1.2172086   0.29860196  0.2827273 ]]
Iteration 500 of 1000: loss=0.323 " + "l1=0.000144" + "l2=0.323 f=-0.151 shape=(1, 9000, 1)
logits [[ 0.04191359 -1.1906754   0.2729765   0.27253243]]
Iteration 600 of 1000: loss=0.298 " + "l1=0.00015" + "l2=0.298 f=-0.149 shape=(1, 9000, 1)
logits [[ 0.05634979 -1.162203    0.25579622  0.25533554]]
Iteration 700 of 1000: loss=0.28 " + "l1=0.00279" + "l2=0.277 f=-0.152 shape=(1, 9000, 1)
logits [[ 0.06989269 -1.162652    0.24622853  0.23764789]]
Iteration 800 of 1000: loss=0.266 " + "l1=0" + "l2=0.266 f=-0.155 shape=(1, 9000, 1)
logits [[ 0.07310206 -1.16508     0.22632343  0.24754128]]
Iteration 900 of 1000: loss=0.25 " + "l1=0" + "l2=0.25 f=-0.159 shape=(1, 9000, 1)
logits [[ 0.08930654 -1.183019    0.22686228  0.23268783]]
--- 319.45079708099365 seconds ---
Adv result:3
Loading record A01951
(1, 3886)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0389 " + "l1=0.0389" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.631179   -1.261225    0.17142735 -2.76267   ]]
Iteration 100 of 1000: loss=0.0378 " + "l1=0.0371" + "l2=0.000676 f=-0.309 shape=(1, 9000, 1)
logits [[ 2.5183322  -1.1923009   0.14060532 -2.704281  ]]
Iteration 200 of 1000: loss=0.0374 " + "l1=0.0366" + "l2=0.000845 f=-0.311 shape=(1, 9000, 1)
logits [[ 2.487773   -1.1704677   0.12895325 -2.690233  ]]
Iteration 300 of 1000: loss=0.0371 " + "l1=0.0361" + "l2=0.00107 f=-0.312 shape=(1, 9000, 1)
logits [[ 2.4598155  -1.1482126   0.11797482 -2.6789656 ]]
Iteration 400 of 1000: loss=0.0369 " + "l1=0.0357" + "l2=0.00125 f=-0.314 shape=(1, 9000, 1)
logits [[ 2.4362237  -1.129428    0.10869604 -2.6694992 ]]
Iteration 500 of 1000: loss=0.0367 " + "l1=0.0353" + "l2=0.00141 f=-0.315 shape=(1, 9000, 1)
logits [[ 2.4178581  -1.1124548   0.10013659 -2.663656  ]]
Iteration 600 of 1000: loss=0.0366 " + "l1=0.0349" + "l2=0.00162 f=-0.316 shape=(1, 9000, 1)
logits [[ 2.3980138  -1.0953526   0.09170415 -2.6564164 ]]
Iteration 700 of 1000: loss=0.0364 " + "l1=0.0346" + "l2=0.00185 f=-0.316 shape=(1, 9000, 1)
logits [[ 2.3790946  -1.0800599   0.08415882 -2.6484582 ]]
Iteration 800 of 1000: loss=0.0363 " + "l1=0.0343" + "l2=0.00195 f=-0.317 shape=(1, 9000, 1)
logits [[ 2.3627589 -1.0679203  0.0789573 -2.6415493]]
Iteration 900 of 1000: loss=0.0362 " + "l1=0.034" + "l2=0.00216 f=-0.317 shape=(1, 9000, 1)
logits [[ 2.3469245  -1.0554332   0.07279807 -2.6342785 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.389 " + "l1=0.389" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.631179   -1.261225    0.17142735 -2.76267   ]]
Iteration 100 of 1000: loss=0.225 " + "l1=0.104" + "l2=0.121 f=-0.353 shape=(1, 9000, 1)
logits [[ 0.8721562 -0.1713676 -0.320832  -1.7903352]]
Iteration 200 of 1000: loss=0.157 " + "l1=0" + "l2=0.157 f=-0.355 shape=(1, 9000, 1)
logits [[ 0.25011802  0.26313564 -0.4958783  -1.4371264 ]]
Iteration 300 of 1000: loss=0.129 " + "l1=0.00105" + "l2=0.128 f=-0.345 shape=(1, 9000, 1)
logits [[ 0.28939852  0.27891314 -0.49301597 -1.4569961 ]]
Iteration 400 of 1000: loss=0.114 " + "l1=0.00217" + "l2=0.112 f=-0.343 shape=(1, 9000, 1)
logits [[ 0.29993656  0.27823648 -0.49545047 -1.4551367 ]]
Iteration 500 of 1000: loss=0.102 " + "l1=0" + "l2=0.102 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.2863842   0.29590127 -0.50966305 -1.4599415 ]]
Iteration 600 of 1000: loss=0.0937 " + "l1=0" + "l2=0.0937 f=-0.351 shape=(1, 9000, 1)
logits [[ 0.2782108   0.31109858 -0.5293074  -1.4628754 ]]
Iteration 700 of 1000: loss=0.0874 " + "l1=0.00407" + "l2=0.0834 f=-0.352 shape=(1, 9000, 1)
logits [[ 0.32331625  0.28266442 -0.5354761  -1.4782553 ]]
Iteration 800 of 1000: loss=0.0771 " + "l1=0" + "l2=0.0771 f=-0.353 shape=(1, 9000, 1)
logits [[ 0.2931213   0.29737172 -0.5564044  -1.4465612 ]]
Iteration 900 of 1000: loss=0.0703 " + "l1=0" + "l2=0.0703 f=-0.353 shape=(1, 9000, 1)
logits [[ 0.26893178  0.3034048  -0.5686876  -1.4157073 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.214 " + "l1=0.214" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.631179   -1.261225    0.17142735 -2.76267   ]]
Iteration 100 of 1000: loss=0.179 " + "l1=0.156" + "l2=0.0222 f=-0.325 shape=(1, 9000, 1)
logits [[ 1.9839134  -0.8587838  -0.00992624 -2.4133482 ]]
Iteration 200 of 1000: loss=0.155 " + "l1=0.11" + "l2=0.0448 f=-0.351 shape=(1, 9000, 1)
logits [[ 1.4951936  -0.51202685 -0.1994143  -2.1884003 ]]
Iteration 300 of 1000: loss=0.139 " + "l1=0.083" + "l2=0.0558 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.1875296  -0.3212542  -0.28274935 -1.9992492 ]]
Iteration 400 of 1000: loss=0.127 " + "l1=0.0634" + "l2=0.0639 f=-0.353 shape=(1, 9000, 1)
logits [[ 0.9708209  -0.18230316 -0.3412952  -1.8582301 ]]
Iteration 500 of 1000: loss=0.12 " + "l1=0.0519" + "l2=0.0683 f=-0.349 shape=(1, 9000, 1)
logits [[ 0.84632766 -0.09654017 -0.3706163  -1.7760267 ]]
Iteration 600 of 1000: loss=0.115 " + "l1=0.0435" + "l2=0.0711 f=-0.345 shape=(1, 9000, 1)
logits [[ 0.75492483 -0.03511132 -0.38978142 -1.7109387 ]]
Iteration 700 of 1000: loss=0.108 " + "l1=0.0333" + "l2=0.075 f=-0.34 shape=(1, 9000, 1)
logits [[ 0.65035963  0.04520825 -0.4193505  -1.6356813 ]]
Iteration 800 of 1000: loss=0.103 " + "l1=0.0244" + "l2=0.0785 f=-0.338 shape=(1, 9000, 1)
logits [[ 0.5560594   0.11286385 -0.44967577 -1.5725138 ]]
Iteration 900 of 1000: loss=0.0941 " + "l1=0.0107" + "l2=0.0834 f=-0.339 shape=(1, 9000, 1)
logits [[ 0.40638113  0.21127178 -0.4937185  -1.480025  ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.127 " + "l1=0.127" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.631179   -1.261225    0.17142735 -2.76267   ]]
Iteration 100 of 1000: loss=0.115 " + "l1=0.108" + "l2=0.00681 f=-0.318 shape=(1, 9000, 1)
logits [[ 2.27989    -1.0435302   0.07107076 -2.5788753 ]]
Iteration 200 of 1000: loss=0.11 " + "l1=0.1" + "l2=0.00984 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.146885   -0.9384071   0.02007004 -2.5178378 ]]
Iteration 300 of 1000: loss=0.106 " + "l1=0.0933" + "l2=0.0128 f=-0.327 shape=(1, 9000, 1)
logits [[ 2.0296745  -0.8406137  -0.03465091 -2.4633002 ]]
Iteration 400 of 1000: loss=0.101 " + "l1=0.0841" + "l2=0.0172 f=-0.336 shape=(1, 9000, 1)
logits [[ 1.8724197  -0.71582645 -0.10875474 -2.393286  ]]
Iteration 500 of 1000: loss=0.0964 " + "l1=0.0769" + "l2=0.0195 f=-0.342 shape=(1, 9000, 1)
logits [[ 1.7396803  -0.62795633 -0.16100885 -2.3200848 ]]
Iteration 600 of 1000: loss=0.0926 " + "l1=0.0717" + "l2=0.0209 f=-0.343 shape=(1, 9000, 1)
logits [[ 1.633794   -0.57256067 -0.18670195 -2.2483652 ]]
Iteration 700 of 1000: loss=0.0901 " + "l1=0.0681" + "l2=0.022 f=-0.343 shape=(1, 9000, 1)
logits [[ 1.5635926 -0.5313485 -0.2068223 -2.1970396]]
Iteration 800 of 1000: loss=0.0881 " + "l1=0.0653" + "l2=0.0228 f=-0.342 shape=(1, 9000, 1)
logits [[ 1.510951   -0.49831516 -0.22118561 -2.1574607 ]]
Iteration 900 of 1000: loss=0.0862 " + "l1=0.0616" + "l2=0.0246 f=-0.341 shape=(1, 9000, 1)
logits [[ 1.4392561  -0.4563941  -0.24088012 -2.1058385 ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.17 " + "l1=0.17" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.631179   -1.261225    0.17142735 -2.76267   ]]
Iteration 100 of 1000: loss=0.148 " + "l1=0.135" + "l2=0.0134 f=-0.321 shape=(1, 9000, 1)
logits [[ 2.1331143  -0.95321834  0.03240502 -2.4952097 ]]
Iteration 200 of 1000: loss=0.139 " + "l1=0.118" + "l2=0.0206 f=-0.329 shape=(1, 9000, 1)
logits [[ 1.9147989  -0.78610015 -0.05271152 -2.3915594 ]]
Iteration 300 of 1000: loss=0.127 " + "l1=0.0954" + "l2=0.0314 f=-0.349 shape=(1, 9000, 1)
logits [[ 1.6162905  -0.56342137 -0.18793412 -2.2603362 ]]
Iteration 400 of 1000: loss=0.117 " + "l1=0.081" + "l2=0.0362 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.4043236  -0.44728893 -0.242115   -2.1276631 ]]
Iteration 500 of 1000: loss=0.11 " + "l1=0.0713" + "l2=0.0392 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.2655644  -0.36441678 -0.27735168 -2.034663  ]]
Iteration 600 of 1000: loss=0.106 " + "l1=0.0646" + "l2=0.0411 f=-0.352 shape=(1, 9000, 1)
logits [[ 1.1701878 -0.3073098 -0.3025178 -1.9702376]]
Iteration 700 of 1000: loss=0.101 " + "l1=0.0576" + "l2=0.0436 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.0693533  -0.2472349  -0.32580325 -1.8961736 ]]
Iteration 800 of 1000: loss=0.0968 " + "l1=0.0505" + "l2=0.0463 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.9715682  -0.18379052 -0.35284388 -1.8213156 ]]
Iteration 900 of 1000: loss=0.0924 " + "l1=0.0429" + "l2=0.0495 f=-0.344 shape=(1, 9000, 1)
logits [[ 0.86262006 -0.11817097 -0.38402176 -1.7369562 ]]
--- 320.9861602783203 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0246 " + "l1=0.0246" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.631179   -1.261225    0.17142735 -2.76267   ]]
Iteration 100 of 1000: loss=0.0242 " + "l1=0.0239" + "l2=0.000294 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.5640612  -1.2426338   0.17308469 -2.7211645 ]]
Iteration 200 of 1000: loss=0.0241 " + "l1=0.0238" + "l2=0.000305 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.5523734  -1.2393439   0.17269816 -2.7134802 ]]
Iteration 300 of 1000: loss=0.024 " + "l1=0.0237" + "l2=0.000356 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.5407903  -1.2358714   0.17245062 -2.705765  ]]
Iteration 400 of 1000: loss=0.024 " + "l1=0.0236" + "l2=0.000421 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.5296926 -1.2330216  0.1723694 -2.6980536]]
Iteration 500 of 1000: loss=0.0239 " + "l1=0.0235" + "l2=0.000479 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.5192392  -1.2307986   0.17270434 -2.6904807 ]]
Iteration 600 of 1000: loss=0.0239 " + "l1=0.0234" + "l2=0.00057 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.5101721  -1.2292154   0.17308097 -2.6836488 ]]
Iteration 700 of 1000: loss=0.0239 " + "l1=0.0233" + "l2=0.000624 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.5012596  -1.2276956   0.17331515 -2.6768575 ]]
Iteration 800 of 1000: loss=0.0239 " + "l1=0.0232" + "l2=0.000728 f=-0.308 shape=(1, 9000, 1)
logits [[ 2.492739  -1.2264316  0.1736899 -2.6702294]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.246 " + "l1=0.246" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.631179   -1.261225    0.17142735 -2.76267   ]]
Iteration 100 of 1000: loss=0.205 " + "l1=0.175" + "l2=0.0301 f=-0.319 shape=(1, 9000, 1)
logits [[ 1.9052525  -1.0468904   0.15298584 -2.2862177 ]]
Iteration 200 of 1000: loss=0.18 " + "l1=0.129" + "l2=0.0512 f=-0.307 shape=(1, 9000, 1)
logits [[ 1.5196056  -0.9771818   0.23070344 -2.0010962 ]]
Iteration 300 of 1000: loss=0.166 " + "l1=0.108" + "l2=0.0585 f=-0.298 shape=(1, 9000, 1)
logits [[ 1.3241143  -0.94836134  0.24521714 -1.8109752 ]]
Iteration 400 of 1000: loss=0.153 " + "l1=0.0864" + "l2=0.0664 f=-0.287 shape=(1, 9000, 1)
logits [[ 1.1541752 -0.9873715  0.2897506 -1.6058431]]
Iteration 500 of 1000: loss=0.133 " + "l1=0.0576" + "l2=0.075 f=-0.268 shape=(1, 9000, 1)
logits [[ 0.9888079 -1.0698942  0.4132568 -1.4026331]]
Iteration 600 of 1000: loss=0.117 " + "l1=0.0377" + "l2=0.0797 f=-0.251 shape=(1, 9000, 1)
logits [[ 0.871608  -1.0947338  0.494202  -1.274812 ]]
Iteration 700 of 1000: loss=0.0998 " + "l1=0.0184" + "l2=0.0814 f=-0.244 shape=(1, 9000, 1)
logits [[ 0.7385539  -1.1080773   0.55497026 -1.1612236 ]]
Iteration 800 of 1000: loss=0.0822 " + "l1=0.000281" + "l2=0.0819 f=-0.24 shape=(1, 9000, 1)
logits [[ 0.5763216 -1.0913503  0.5735069 -1.017661 ]]
Iteration 900 of 1000: loss=0.0673 " + "l1=0.00125" + "l2=0.0661 f=-0.246 shape=(1, 9000, 1)
logits [[ 0.57034844 -1.113098    0.557843   -1.0000876 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.135 " + "l1=0.135" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.631179   -1.261225    0.17142735 -2.76267   ]]
Iteration 100 of 1000: loss=0.124 " + "l1=0.118" + "l2=0.00667 f=-0.312 shape=(1, 9000, 1)
logits [[ 2.305988   -1.166077    0.16661087 -2.553359  ]]
Iteration 200 of 1000: loss=0.12 " + "l1=0.111" + "l2=0.00963 f=-0.311 shape=(1, 9000, 1)
logits [[ 2.1817417  -1.1337081   0.16842477 -2.4619246 ]]
Iteration 300 of 1000: loss=0.117 " + "l1=0.105" + "l2=0.0118 f=-0.31 shape=(1, 9000, 1)
logits [[ 2.09387    -1.1269652   0.18265817 -2.388042  ]]
Iteration 400 of 1000: loss=0.113 " + "l1=0.0968" + "l2=0.0162 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.9778895  -1.1311162   0.21877268 -2.2984722 ]]
Iteration 500 of 1000: loss=0.108 " + "l1=0.0868" + "l2=0.0215 f=-0.307 shape=(1, 9000, 1)
logits [[ 1.8286183 -1.1256981  0.2503356 -2.179887 ]]
Iteration 600 of 1000: loss=0.104 " + "l1=0.081" + "l2=0.0225 f=-0.306 shape=(1, 9000, 1)
logits [[ 1.7305508  -1.1228173   0.25698242 -2.0871441 ]]
Iteration 700 of 1000: loss=0.0978 " + "l1=0.0758" + "l2=0.022 f=-0.303 shape=(1, 9000, 1)
logits [[ 1.6464577 -1.1239963  0.2675672 -2.000391 ]]
Iteration 800 of 1000: loss=0.0923 " + "l1=0.0697" + "l2=0.0226 f=-0.297 shape=(1, 9000, 1)
logits [[ 1.5508822  -1.1325665   0.28287798 -1.8894545 ]]
Iteration 900 of 1000: loss=0.0886 " + "l1=0.065" + "l2=0.0235 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.4752635  -1.1413752   0.29271728 -1.7990992 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.191 " + "l1=0.191" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.631179   -1.261225    0.17142735 -2.76267   ]]
Iteration 100 of 1000: loss=0.168 " + "l1=0.153" + "l2=0.0152 f=-0.314 shape=(1, 9000, 1)
logits [[ 2.1311646  -1.1125144   0.16000962 -2.4333422 ]]
Iteration 200 of 1000: loss=0.158 " + "l1=0.133" + "l2=0.0249 f=-0.317 shape=(1, 9000, 1)
logits [[ 1.8894508 -1.0587406  0.1722459 -2.2715092]]
Iteration 300 of 1000: loss=0.145 " + "l1=0.11" + "l2=0.0357 f=-0.307 shape=(1, 9000, 1)
logits [[ 1.6606666  -1.0545238   0.24482748 -2.0798357 ]]
Iteration 400 of 1000: loss=0.138 " + "l1=0.0999" + "l2=0.0382 f=-0.301 shape=(1, 9000, 1)
logits [[ 1.5482266  -1.0478855   0.25908726 -1.9638503 ]]
Iteration 500 of 1000: loss=0.131 " + "l1=0.09" + "l2=0.041 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.4341755 -1.0574107  0.2731707 -1.8291008]]
Iteration 600 of 1000: loss=0.121 " + "l1=0.0727" + "l2=0.0479 f=-0.279 shape=(1, 9000, 1)
logits [[ 1.2816576 -1.1119812  0.3434313 -1.6302731]]
Iteration 700 of 1000: loss=0.111 " + "l1=0.058" + "l2=0.0525 f=-0.27 shape=(1, 9000, 1)
logits [[ 1.1607605  -1.1431758   0.41211027 -1.5103544 ]]
Iteration 800 of 1000: loss=0.101 " + "l1=0.0459" + "l2=0.0556 f=-0.255 shape=(1, 9000, 1)
logits [[ 1.0675445  -1.1576896   0.47581944 -1.4045545 ]]
Iteration 900 of 1000: loss=0.0899 " + "l1=0.0317" + "l2=0.0582 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.93260074 -1.1535792   0.5235932  -1.2953963 ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.218 " + "l1=0.218" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.631179   -1.261225    0.17142735 -2.76267   ]]
Iteration 100 of 1000: loss=0.188 " + "l1=0.165" + "l2=0.0223 f=-0.317 shape=(1, 9000, 1)
logits [[ 2.0165315  -1.0794299   0.15525796 -2.3611524 ]]
Iteration 200 of 1000: loss=0.169 " + "l1=0.126" + "l2=0.0426 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.6515841 -1.0237321  0.2264856 -2.1042938]]
Iteration 300 of 1000: loss=0.157 " + "l1=0.111" + "l2=0.0461 f=-0.303 shape=(1, 9000, 1)
logits [[ 1.5021782  -1.010444    0.25209764 -1.9549612 ]]
Iteration 400 of 1000: loss=0.148 " + "l1=0.0975" + "l2=0.0504 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.3645056  -1.0099797   0.26625344 -1.8012999 ]]
Iteration 500 of 1000: loss=0.133 " + "l1=0.074" + "l2=0.0592 f=-0.278 shape=(1, 9000, 1)
logits [[ 1.1958694  -1.0998058   0.36228234 -1.5695485 ]]
Iteration 600 of 1000: loss=0.12 " + "l1=0.0578" + "l2=0.0626 f=-0.266 shape=(1, 9000, 1)
logits [[ 1.0822694 -1.1327354  0.4315119 -1.4432932]]
Iteration 700 of 1000: loss=0.106 " + "l1=0.0399" + "l2=0.0665 f=-0.249 shape=(1, 9000, 1)
logits [[ 0.96017516 -1.1494594   0.51089096 -1.319528  ]]
Iteration 800 of 1000: loss=0.0911 " + "l1=0.022" + "l2=0.0691 f=-0.245 shape=(1, 9000, 1)
logits [[ 0.8001037 -1.134669   0.5520237 -1.1966813]]
Iteration 900 of 1000: loss=0.0765 " + "l1=0.0076" + "l2=0.0689 f=-0.245 shape=(1, 9000, 1)
logits [[ 0.64479625 -1.1100519   0.55917376 -1.0731213 ]]
--- 307.7491056919098 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0539 " + "l1=0.0539" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.631179   -1.261225    0.17142735 -2.76267   ]]
Iteration 100 of 1000: loss=0.0525 " + "l1=0.0516" + "l2=0.000895 f=-0.306 shape=(1, 9000, 1)
logits [[ 2.5015242  -1.2174416   0.14650016 -2.6558895 ]]
Iteration 200 of 1000: loss=0.0521 " + "l1=0.051" + "l2=0.00108 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.4707136  -1.2054609   0.13877408 -2.630554  ]]
Iteration 300 of 1000: loss=0.0518 " + "l1=0.0505" + "l2=0.00127 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.443582  -1.1965333  0.1323504 -2.606717 ]]
Iteration 400 of 1000: loss=0.0515 " + "l1=0.05" + "l2=0.00149 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.4179628  -1.189955    0.12714891 -2.5834098 ]]
Iteration 500 of 1000: loss=0.0512 " + "l1=0.0496" + "l2=0.00167 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.3947728  -1.1848538   0.12256309 -2.5610826 ]]
Iteration 600 of 1000: loss=0.0509 " + "l1=0.0491" + "l2=0.00184 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.3705118 -1.1807319  0.1187508 -2.5370407]]
Iteration 700 of 1000: loss=0.0506 " + "l1=0.0486" + "l2=0.00199 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.3476572  -1.1779335   0.11549035 -2.5132797 ]]
Iteration 800 of 1000: loss=0.0503 " + "l1=0.0481" + "l2=0.00224 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.3233771  -1.176496    0.11257631 -2.4869602 ]]
Iteration 900 of 1000: loss=0.05 " + "l1=0.0476" + "l2=0.00246 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.2986     -1.1751744   0.10885789 -2.4594848 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.539 " + "l1=0.539" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.631179   -1.261225    0.17142735 -2.76267   ]]
Iteration 100 of 1000: loss=0.337 " + "l1=0.177" + "l2=0.16 f=-0.312 shape=(1, 9000, 1)
logits [[ 0.6513721  -0.55853426 -0.22515322 -1.1176664 ]]
Iteration 200 of 1000: loss=0.207 " + "l1=0.00205" + "l2=0.205 f=-0.274 shape=(1, 9000, 1)
logits [[-0.0836596  -0.58645207 -0.32303303 -0.10419929]]
Iteration 300 of 1000: loss=0.149 " + "l1=0" + "l2=0.149 f=-0.251 shape=(1, 9000, 1)
logits [[ 0.02651533 -0.80356354 -0.25619045  0.02878778]]
Iteration 400 of 1000: loss=0.122 " + "l1=0" + "l2=0.122 f=-0.242 shape=(1, 9000, 1)
logits [[ 0.09767783 -0.9389311  -0.22412607  0.09858216]]
Iteration 500 of 1000: loss=0.102 " + "l1=0" + "l2=0.102 f=-0.243 shape=(1, 9000, 1)
logits [[ 0.14366528 -1.0694779  -0.21131812  0.1661475 ]]
Iteration 600 of 1000: loss=0.086 " + "l1=0.000324" + "l2=0.0856 f=-0.25 shape=(1, 9000, 1)
logits [[ 0.20703895 -1.2111712  -0.19877745  0.20379862]]
Iteration 700 of 1000: loss=0.0754 " + "l1=0" + "l2=0.0754 f=-0.254 shape=(1, 9000, 1)
logits [[ 0.23990005 -1.3129804  -0.19628644  0.252146  ]]
Iteration 800 of 1000: loss=0.0669 " + "l1=0" + "l2=0.0669 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.27629745 -1.4214454  -0.20806834  0.3236132 ]]
Iteration 900 of 1000: loss=0.0584 " + "l1=0.000284" + "l2=0.0581 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.33571467 -1.496753   -0.19934472  0.332872  ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.297 " + "l1=0.297" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.631179   -1.261225    0.17142735 -2.76267   ]]
Iteration 100 of 1000: loss=0.249 " + "l1=0.213" + "l2=0.0354 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.7934372 -0.971124   0.0128232 -2.0819058]]
Iteration 200 of 1000: loss=0.225 " + "l1=0.171" + "l2=0.0536 f=-0.311 shape=(1, 9000, 1)
logits [[ 1.3977469  -0.8560842  -0.07440868 -1.7110848 ]]
Iteration 300 of 1000: loss=0.203 " + "l1=0.136" + "l2=0.0671 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.1156716  -0.84536856 -0.13735096 -1.3531756 ]]
Iteration 400 of 1000: loss=0.162 " + "l1=0.0729" + "l2=0.0886 f=-0.271 shape=(1, 9000, 1)
logits [[ 0.6767868 -0.989602  -0.1206345 -0.6491333]]
Iteration 500 of 1000: loss=0.128 " + "l1=0.0317" + "l2=0.0962 f=-0.246 shape=(1, 9000, 1)
logits [[ 0.40571684 -1.0879139  -0.13013728 -0.17082071]]
Iteration 600 of 1000: loss=0.0978 " + "l1=0.000504" + "l2=0.0973 f=-0.239 shape=(1, 9000, 1)
logits [[ 0.20307797 -1.1792378  -0.175497    0.1939139 ]]
Iteration 700 of 1000: loss=0.0735 " + "l1=0.000162" + "l2=0.0733 f=-0.244 shape=(1, 9000, 1)
logits [[ 0.26798055 -1.3391843  -0.16955057  0.2650438 ]]
Iteration 800 of 1000: loss=0.0583 " + "l1=0" + "l2=0.0583 f=-0.246 shape=(1, 9000, 1)
logits [[ 0.3034357  -1.4313115  -0.16367672  0.3072539 ]]
Iteration 900 of 1000: loss=0.0467 " + "l1=0" + "l2=0.0467 f=-0.258 shape=(1, 9000, 1)
logits [[ 0.33048737 -1.524207   -0.18781601  0.3514388 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.175 " + "l1=0.175" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.631179   -1.261225    0.17142735 -2.76267   ]]
Iteration 100 of 1000: loss=0.16 " + "l1=0.15" + "l2=0.00978 f=-0.306 shape=(1, 9000, 1)
logits [[ 2.2083235  -1.1137605   0.09019297 -2.40808   ]]
Iteration 200 of 1000: loss=0.154 " + "l1=0.141" + "l2=0.0135 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.0557792  -1.062208    0.05845107 -2.273495  ]]
Iteration 300 of 1000: loss=0.149 " + "l1=0.132" + "l2=0.017 f=-0.304 shape=(1, 9000, 1)
logits [[ 1.9230175  -1.0314916   0.03149646 -2.1385596 ]]
Iteration 400 of 1000: loss=0.144 " + "l1=0.123" + "l2=0.0206 f=-0.303 shape=(1, 9000, 1)
logits [[ 1.7960341  -1.0217094   0.00478005 -1.9905668 ]]
Iteration 500 of 1000: loss=0.136 " + "l1=0.111" + "l2=0.0258 f=-0.302 shape=(1, 9000, 1)
logits [[ 1.6211301  -1.0175506  -0.02877023 -1.7832172 ]]
Iteration 600 of 1000: loss=0.125 " + "l1=0.0941" + "l2=0.0313 f=-0.282 shape=(1, 9000, 1)
logits [[ 1.4436197  -1.1065364  -0.01617422 -1.4503152 ]]
Iteration 700 of 1000: loss=0.111 " + "l1=0.075" + "l2=0.0364 f=-0.264 shape=(1, 9000, 1)
logits [[ 1.1996344  -1.1886609   0.03976632 -1.1083485 ]]
Iteration 800 of 1000: loss=0.0991 " + "l1=0.0604" + "l2=0.0387 f=-0.25 shape=(1, 9000, 1)
logits [[ 1.0427527  -1.265028    0.03806597 -0.8146795 ]]
Iteration 900 of 1000: loss=0.0875 " + "l1=0.0471" + "l2=0.0403 f=-0.245 shape=(1, 9000, 1)
logits [[ 0.8861059  -1.2897251  -0.01354408 -0.5640812 ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.236 " + "l1=0.236" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.631179   -1.261225    0.17142735 -2.76267   ]]
Iteration 100 of 1000: loss=0.207 " + "l1=0.188" + "l2=0.0189 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.0350914 -1.0540453  0.0585454 -2.268247 ]]
Iteration 200 of 1000: loss=0.194 " + "l1=0.164" + "l2=0.0305 f=-0.31 shape=(1, 9000, 1)
logits [[ 1.7347162  -0.95882607 -0.00350986 -2.011591  ]]
Iteration 300 of 1000: loss=0.182 " + "l1=0.143" + "l2=0.039 f=-0.307 shape=(1, 9000, 1)
logits [[ 1.5027509  -0.91298354 -0.05751067 -1.7617192 ]]
Iteration 400 of 1000: loss=0.168 " + "l1=0.122" + "l2=0.0459 f=-0.297 shape=(1, 9000, 1)
logits [[ 1.3120437  -0.94038975 -0.09005612 -1.4705572 ]]
Iteration 500 of 1000: loss=0.142 " + "l1=0.0827" + "l2=0.0592 f=-0.265 shape=(1, 9000, 1)
logits [[ 0.96345466 -1.0657135  -0.03103673 -0.9277909 ]]
Iteration 600 of 1000: loss=0.121 " + "l1=0.056" + "l2=0.0648 f=-0.25 shape=(1, 9000, 1)
logits [[ 0.7388185  -1.1574268  -0.03800029 -0.541934  ]]
Iteration 700 of 1000: loss=0.101 " + "l1=0.0334" + "l2=0.0677 f=-0.242 shape=(1, 9000, 1)
logits [[ 0.5521357  -1.2235508  -0.08458963 -0.21168253]]
Iteration 800 of 1000: loss=0.0766 " + "l1=0.0035" + "l2=0.0731 f=-0.244 shape=(1, 9000, 1)
logits [[ 0.28792116 -1.3082826  -0.16516486  0.20794585]]
Iteration 900 of 1000: loss=0.0552 " + "l1=0.00115" + "l2=0.0541 f=-0.247 shape=(1, 9000, 1)
logits [[ 0.33737388 -1.460632   -0.17742784  0.31106055]]
--- 324.51177763938904 seconds ---
Adv result:3
Loading record A01981
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0387 " + "l1=0.0387" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.8682625 -2.0000458  1.6299901 -2.201616 ]]
Iteration 100 of 1000: loss=0.0383 " + "l1=0.038" + "l2=0.000321 f=-0.175 shape=(1, 9000, 1)
logits [[ 1.8274922 -1.9713542  1.6081353 -2.1627896]]
Iteration 200 of 1000: loss=0.0382 " + "l1=0.0379" + "l2=0.000307 f=-0.174 shape=(1, 9000, 1)
logits [[ 1.8242989 -1.9674033  1.6058854 -2.1604211]]
Iteration 300 of 1000: loss=0.0382 " + "l1=0.0378" + "l2=0.000368 f=-0.174 shape=(1, 9000, 1)
logits [[ 1.8189238 -1.9631848  1.6029927 -2.1562111]]
Iteration 400 of 1000: loss=0.0381 " + "l1=0.0377" + "l2=0.000415 f=-0.174 shape=(1, 9000, 1)
logits [[ 1.8135165 -1.9595114  1.6004063 -2.1521885]]
Iteration 500 of 1000: loss=0.0381 " + "l1=0.0376" + "l2=0.000481 f=-0.175 shape=(1, 9000, 1)
logits [[ 1.8082426 -1.9562025  1.5980977 -2.1483905]]
Iteration 600 of 1000: loss=0.0381 " + "l1=0.0376" + "l2=0.000577 f=-0.175 shape=(1, 9000, 1)
logits [[ 1.8031454 -1.953178   1.5959842 -2.1448693]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.387 " + "l1=0.387" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.8682625 -2.0000458  1.6299901 -2.201616 ]]
Iteration 100 of 1000: loss=0.351 " + "l1=0.331" + "l2=0.0209 f=-0.166 shape=(1, 9000, 1)
logits [[ 1.5405856 -1.764801   1.4481583 -1.8895551]]
Iteration 200 of 1000: loss=0.339 " + "l1=0.31" + "l2=0.0295 f=-0.158 shape=(1, 9000, 1)
logits [[ 1.4215539 -1.6766145  1.3919449 -1.7690623]]
Iteration 300 of 1000: loss=0.328 " + "l1=0.293" + "l2=0.0349 f=-0.155 shape=(1, 9000, 1)
logits [[ 1.3334928 -1.5978295  1.3339943 -1.6910217]]
Iteration 400 of 1000: loss=0.32 " + "l1=0.283" + "l2=0.0367 f=-0.154 shape=(1, 9000, 1)
logits [[ 1.2892833 -1.5403523  1.2876431 -1.6531984]]
Iteration 500 of 1000: loss=0.313 " + "l1=0.273" + "l2=0.0396 f=-0.154 shape=(1, 9000, 1)
logits [[ 1.2426213 -1.4887136  1.2421613 -1.6111224]]
Iteration 600 of 1000: loss=0.307 " + "l1=0.265" + "l2=0.0422 f=-0.152 shape=(1, 9000, 1)
logits [[ 1.2018511 -1.4458566  1.2019657 -1.5677962]]
Iteration 700 of 1000: loss=0.302 " + "l1=0.257" + "l2=0.0447 f=-0.151 shape=(1, 9000, 1)
logits [[ 1.1634786 -1.4057217  1.1637907 -1.5266457]]
Iteration 800 of 1000: loss=0.295 " + "l1=0.246" + "l2=0.0484 f=-0.149 shape=(1, 9000, 1)
logits [[ 1.1137528 -1.3490334  1.1149356 -1.4744598]]
Iteration 900 of 1000: loss=0.289 " + "l1=0.238" + "l2=0.0515 f=-0.15 shape=(1, 9000, 1)
logits [[ 1.0695037 -1.3061062  1.0715635 -1.4343919]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.87 " + "l1=3.87" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.8682625 -2.0000458  1.6299901 -2.201616 ]]
Iteration 100 of 1000: loss=1.76 " + "l1=1.01" + "l2=0.748 f=-0.108 shape=(1, 9000, 1)
logits [[ 0.31566057 -0.53707623  0.47084734 -0.68087035]]
Iteration 200 of 1000: loss=1.26 " + "l1=0.407" + "l2=0.856 f=-0.0953 shape=(1, 9000, 1)
logits [[-0.01354749 -0.20724778  0.19937773 -0.35985732]]
Iteration 300 of 1000: loss=0.982 " + "l1=0.0721" + "l2=0.909 f=-0.129 shape=(1, 9000, 1)
logits [[-0.351609   -0.02468774  0.04745033 -0.18627283]]
Iteration 400 of 1000: loss=0.802 " + "l1=0.00772" + "l2=0.794 f=-0.131 shape=(1, 9000, 1)
logits [[-0.40510634 -0.00532488  0.00239441 -0.11779044]]
Iteration 500 of 1000: loss=0.74 " + "l1=0.0183" + "l2=0.721 f=-0.127 shape=(1, 9000, 1)
logits [[-0.38595307 -0.0291501  -0.0108027  -0.08221789]]
Iteration 600 of 1000: loss=0.696 " + "l1=0.0126" + "l2=0.683 f=-0.121 shape=(1, 9000, 1)
logits [[-0.39328602 -0.03169146 -0.01904427 -0.03989141]]
Iteration 700 of 1000: loss=0.664 " + "l1=0" + "l2=0.664 f=-0.122 shape=(1, 9000, 1)
logits [[-0.40970865 -0.01857927 -0.02664381 -0.03463238]]
Iteration 800 of 1000: loss=0.636 " + "l1=0" + "l2=0.636 f=-0.125 shape=(1, 9000, 1)
logits [[-0.422816   -0.02366717 -0.0278623  -0.02649269]]
Iteration 900 of 1000: loss=0.618 " + "l1=0" + "l2=0.618 f=-0.132 shape=(1, 9000, 1)
logits [[-0.44581613 -0.02059055 -0.02731558 -0.03289391]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.13 " + "l1=2.13" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.8682625 -2.0000458  1.6299901 -2.201616 ]]
Iteration 100 of 1000: loss=1.31 " + "l1=0.982" + "l2=0.326 f=-0.13 shape=(1, 9000, 1)
logits [[ 0.7947763  -0.97960883  0.80659646 -1.1425928 ]]
Iteration 200 of 1000: loss=1.08 " + "l1=0.692" + "l2=0.393 f=-0.117 shape=(1, 9000, 1)
logits [[ 0.4890373  -0.6937936   0.56396884 -0.8278436 ]]
Iteration 300 of 1000: loss=0.943 " + "l1=0.544" + "l2=0.399 f=-0.116 shape=(1, 9000, 1)
logits [[ 0.294669   -0.55170697  0.4377647  -0.6459129 ]]
Iteration 400 of 1000: loss=0.867 " + "l1=0.452" + "l2=0.415 f=-0.123 shape=(1, 9000, 1)
logits [[ 0.15398237 -0.4757107   0.34673846 -0.5158441 ]]
Iteration 500 of 1000: loss=0.815 " + "l1=0.381" + "l2=0.434 f=-0.118 shape=(1, 9000, 1)
logits [[ 0.06049391 -0.4160935   0.27637252 -0.39234453]]
Iteration 600 of 1000: loss=0.77 " + "l1=0.31" + "l2=0.46 f=-0.119 shape=(1, 9000, 1)
logits [[-0.03425042 -0.35507482  0.2090558  -0.29524136]]
Iteration 700 of 1000: loss=0.729 " + "l1=0.248" + "l2=0.481 f=-0.124 shape=(1, 9000, 1)
logits [[-0.12025749 -0.29803535  0.15231073 -0.22916862]]
Iteration 800 of 1000: loss=0.696 " + "l1=0.192" + "l2=0.504 f=-0.126 shape=(1, 9000, 1)
logits [[-0.2129738  -0.23941152  0.10947658 -0.1591891 ]]
Iteration 900 of 1000: loss=0.656 " + "l1=0.149" + "l2=0.507 f=-0.131 shape=(1, 9000, 1)
logits [[-0.2680329  -0.19264835  0.07878409 -0.14248896]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3 " + "l1=3" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.8682625 -2.0000458  1.6299901 -2.201616 ]]
Iteration 100 of 1000: loss=1.57 " + "l1=1.03" + "l2=0.544 f=-0.12 shape=(1, 9000, 1)
logits [[ 0.5068696  -0.7227141   0.60119736 -0.86430675]]
Iteration 200 of 1000: loss=1.23 " + "l1=0.635" + "l2=0.592 f=-0.0959 shape=(1, 9000, 1)
logits [[ 0.22779447 -0.44166267  0.37728044 -0.54681563]]
Iteration 300 of 1000: loss=1.01 " + "l1=0.372" + "l2=0.637 f=-0.1 shape=(1, 9000, 1)
logits [[ 0.01821114 -0.25442547  0.2252846  -0.39019144]]
Iteration 400 of 1000: loss=0.855 " + "l1=0.16" + "l2=0.695 f=-0.124 shape=(1, 9000, 1)
logits [[-0.27765837 -0.1087063   0.09730021 -0.2070488 ]]
Iteration 500 of 1000: loss=0.749 " + "l1=0.0173" + "l2=0.732 f=-0.127 shape=(1, 9000, 1)
logits [[-0.37310115 -0.03013513 -0.00783975 -0.09746491]]
Iteration 600 of 1000: loss=0.69 " + "l1=0.0063" + "l2=0.683 f=-0.122 shape=(1, 9000, 1)
logits [[-0.39085272 -0.03151811 -0.02338509 -0.04035036]]
Iteration 700 of 1000: loss=0.646 " + "l1=0.00286" + "l2=0.643 f=-0.123 shape=(1, 9000, 1)
logits [[-0.4071848  -0.02881119 -0.02511825 -0.03075344]]
Iteration 800 of 1000: loss=0.616 " + "l1=0.00371" + "l2=0.613 f=-0.129 shape=(1, 9000, 1)
logits [[-0.42057565 -0.02924828 -0.02446448 -0.0421889 ]]
Iteration 900 of 1000: loss=0.593 " + "l1=0" + "l2=0.593 f=-0.133 shape=(1, 9000, 1)
logits [[-0.44402742 -0.02889041 -0.03120257 -0.02985473]]
--- 298.8983256816864 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00238 " + "l1=0.00238" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.8682625 -2.0000458  1.6299901 -2.201616 ]]
Iteration 100 of 1000: loss=0.00228 " + "l1=0.00215" + "l2=0.000129 f=-0.177 shape=(1, 9000, 1)
logits [[ 1.8460604 -2.000869   1.6313418 -2.183016 ]]
Iteration 200 of 1000: loss=0.00224 " + "l1=0.00214" + "l2=9.71e-05 f=-0.177 shape=(1, 9000, 1)
logits [[ 1.8462808 -2.001137   1.6322021 -2.1839478]]
Iteration 300 of 1000: loss=0.00221 " + "l1=0.00211" + "l2=0.000108 f=-0.177 shape=(1, 9000, 1)
logits [[ 1.8436465 -2.0013375  1.6329472 -2.1826918]]
Iteration 400 of 1000: loss=0.00223 " + "l1=0.00207" + "l2=0.000161 f=-0.177 shape=(1, 9000, 1)
logits [[ 1.8405108 -2.001613   1.633808  -2.181063 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0238 " + "l1=0.0238" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.8682625 -2.0000458  1.6299901 -2.201616 ]]
Iteration 100 of 1000: loss=0.0139 " + "l1=0.00885" + "l2=0.00501 f=-0.18 shape=(1, 9000, 1)
logits [[ 1.7223939 -1.9947168  1.6338567 -2.0824184]]
Iteration 200 of 1000: loss=0.0097 " + "l1=0.00303" + "l2=0.00667 f=-0.182 shape=(1, 9000, 1)
logits [[ 1.6703969 -1.9934057  1.6400725 -2.0438814]]
Iteration 300 of 1000: loss=0.0063 " + "l1=4.64e-05" + "l2=0.00626 f=-0.183 shape=(1, 9000, 1)
logits [[ 1.6493915 -1.9956487  1.6489276 -2.0334747]]
Iteration 400 of 1000: loss=0.00482 " + "l1=7.59e-06" + "l2=0.00481 f=-0.184 shape=(1, 9000, 1)
logits [[ 1.6565484 -2.000377   1.6564724 -2.0466452]]
Iteration 500 of 1000: loss=0.00386 " + "l1=2.71e-06" + "l2=0.00386 f=-0.184 shape=(1, 9000, 1)
logits [[ 1.6613026 -2.0027163  1.6612755 -2.055387 ]]
Iteration 600 of 1000: loss=0.0033 " + "l1=0" + "l2=0.0033 f=-0.184 shape=(1, 9000, 1)
logits [[ 1.6654017 -2.0048604  1.6663162 -2.0629282]]
Iteration 700 of 1000: loss=0.00298 " + "l1=4.71e-05" + "l2=0.00293 f=-0.184 shape=(1, 9000, 1)
logits [[ 1.6690657 -2.0049388  1.6685952 -2.0703318]]
Iteration 800 of 1000: loss=0.0027 " + "l1=0.000112" + "l2=0.00259 f=-0.185 shape=(1, 9000, 1)
logits [[ 1.6716784 -2.0049753  1.6705626 -2.0770102]]
Iteration 900 of 1000: loss=0.00251 " + "l1=0" + "l2=0.00251 f=-0.185 shape=(1, 9000, 1)
logits [[ 1.6701846 -2.0037389  1.6717919 -2.08021  ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0131 " + "l1=0.0131" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.8682625 -2.0000458  1.6299901 -2.201616 ]]
Iteration 100 of 1000: loss=0.00998 " + "l1=0.00836" + "l2=0.00163 f=-0.179 shape=(1, 9000, 1)
logits [[ 1.7849689 -1.9984602  1.6330469 -2.133591 ]]
Iteration 200 of 1000: loss=0.00883 " + "l1=0.00679" + "l2=0.00204 f=-0.179 shape=(1, 9000, 1)
logits [[ 1.760792  -1.9985756  1.6373364 -2.116241 ]]
Iteration 300 of 1000: loss=0.0077 " + "l1=0.00515" + "l2=0.00255 f=-0.18 shape=(1, 9000, 1)
logits [[ 1.735773  -1.9999849  1.6420692 -2.0995111]]
Iteration 400 of 1000: loss=0.00658 " + "l1=0.00362" + "l2=0.00296 f=-0.181 shape=(1, 9000, 1)
logits [[ 1.7128955 -2.0000937  1.6471413 -2.0855544]]
Iteration 500 of 1000: loss=0.00554 " + "l1=0.00208" + "l2=0.00346 f=-0.182 shape=(1, 9000, 1)
logits [[ 1.6897594 -1.9995569  1.6518869 -2.0713508]]
Iteration 600 of 1000: loss=0.00442 " + "l1=0.000541" + "l2=0.00388 f=-0.183 shape=(1, 9000, 1)
logits [[ 1.6674052 -2.0001135  1.6575723 -2.057384 ]]
Iteration 700 of 1000: loss=0.00356 " + "l1=3.72e-05" + "l2=0.00352 f=-0.184 shape=(1, 9000, 1)
logits [[ 1.6637338 -2.002453   1.6630579 -2.0597007]]
Iteration 800 of 1000: loss=0.003 " + "l1=1.98e-05" + "l2=0.00298 f=-0.184 shape=(1, 9000, 1)
logits [[ 1.667759  -2.0040898  1.6673987 -2.0683568]]
Iteration 900 of 1000: loss=0.00274 " + "l1=0" + "l2=0.00274 f=-0.185 shape=(1, 9000, 1)
logits [[ 1.6690961 -2.0043788  1.6699883 -2.0742915]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00774 " + "l1=0.00774" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.8682625 -2.0000458  1.6299901 -2.201616 ]]
Iteration 100 of 1000: loss=0.00662 " + "l1=0.00596" + "l2=0.000661 f=-0.178 shape=(1, 9000, 1)
logits [[ 1.8154353 -2.0001209  1.6321267 -2.1577735]]
Iteration 200 of 1000: loss=0.00624 " + "l1=0.0055" + "l2=0.000744 f=-0.178 shape=(1, 9000, 1)
logits [[ 1.803696  -2.0006607  1.6345012 -2.149492 ]]
Iteration 300 of 1000: loss=0.00591 " + "l1=0.00502" + "l2=0.00089 f=-0.179 shape=(1, 9000, 1)
logits [[ 1.7914914 -2.0010626  1.6369725 -2.14172  ]]
Iteration 400 of 1000: loss=0.00555 " + "l1=0.00453" + "l2=0.00102 f=-0.179 shape=(1, 9000, 1)
logits [[ 1.7793821 -2.0019395  1.6398757 -2.134333 ]]
Iteration 500 of 1000: loss=0.00525 " + "l1=0.00405" + "l2=0.0012 f=-0.18 shape=(1, 9000, 1)
logits [[ 1.7675943 -2.0029635  1.6429104 -2.1276672]]
Iteration 600 of 1000: loss=0.00493 " + "l1=0.00353" + "l2=0.0014 f=-0.181 shape=(1, 9000, 1)
logits [[ 1.7550403 -2.0034206  1.6465119 -2.1215239]]
Iteration 700 of 1000: loss=0.00457 " + "l1=0.00302" + "l2=0.00155 f=-0.181 shape=(1, 9000, 1)
logits [[ 1.7426683 -2.0032573  1.6497558 -2.114434 ]]
Iteration 800 of 1000: loss=0.00426 " + "l1=0.00254" + "l2=0.00172 f=-0.182 shape=(1, 9000, 1)
logits [[ 1.7303449 -2.0021393  1.6520437 -2.1073692]]
Iteration 900 of 1000: loss=0.00403 " + "l1=0.00209" + "l2=0.00194 f=-0.182 shape=(1, 9000, 1)
logits [[ 1.7181207 -2.000624   1.6539662 -2.1006749]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0104 " + "l1=0.0104" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.8682625 -2.0000458  1.6299901 -2.201616 ]]
Iteration 100 of 1000: loss=0.0084 " + "l1=0.0073" + "l2=0.0011 f=-0.178 shape=(1, 9000, 1)
logits [[ 1.79944   -1.9997851  1.6325393 -2.1444254]]
Iteration 200 of 1000: loss=0.00771 " + "l1=0.00641" + "l2=0.00129 f=-0.179 shape=(1, 9000, 1)
logits [[ 1.7821776 -2.0000489  1.6355513 -2.1321008]]
Iteration 300 of 1000: loss=0.00703 " + "l1=0.00546" + "l2=0.00157 f=-0.179 shape=(1, 9000, 1)
logits [[ 1.764446  -2.0012875  1.6396613 -2.1203651]]
Iteration 400 of 1000: loss=0.00635 " + "l1=0.00446" + "l2=0.00189 f=-0.181 shape=(1, 9000, 1)
logits [[ 1.7461182 -2.0026162  1.6441907 -2.110243 ]]
Iteration 500 of 1000: loss=0.00569 " + "l1=0.00352" + "l2=0.00217 f=-0.181 shape=(1, 9000, 1)
logits [[ 1.7287793 -2.0027976  1.6484303 -2.1000519]]
Iteration 600 of 1000: loss=0.00509 " + "l1=0.00261" + "l2=0.00247 f=-0.182 shape=(1, 9000, 1)
logits [[ 1.7116172 -2.0014508  1.651925  -2.090003 ]]
Iteration 700 of 1000: loss=0.00448 " + "l1=0.0017" + "l2=0.00278 f=-0.183 shape=(1, 9000, 1)
logits [[ 1.6943355 -2.0010936  1.6555115 -2.0796778]]
Iteration 800 of 1000: loss=0.00381 " + "l1=0.000767" + "l2=0.00304 f=-0.183 shape=(1, 9000, 1)
logits [[ 1.6772485 -2.0008273  1.6597114 -2.0700612]]
Iteration 900 of 1000: loss=0.00317 " + "l1=2.81e-05" + "l2=0.00314 f=-0.184 shape=(1, 9000, 1)
logits [[ 1.6651876 -2.0016685  1.6645452 -2.0646243]]
--- 287.28511214256287 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0407 " + "l1=0.0407" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.8682625 -2.0000458  1.6299901 -2.201616 ]]
Iteration 100 of 1000: loss=0.04 " + "l1=0.0395" + "l2=0.000539 f=-0.174 shape=(1, 9000, 1)
logits [[ 1.8131375 -1.9810688  1.6055299 -2.1338966]]
Iteration 200 of 1000: loss=0.0399 " + "l1=0.0393" + "l2=0.000549 f=-0.174 shape=(1, 9000, 1)
logits [[ 1.8059267 -1.979211   1.6028956 -2.1259058]]
Iteration 300 of 1000: loss=0.0398 " + "l1=0.0391" + "l2=0.000649 f=-0.174 shape=(1, 9000, 1)
logits [[ 1.7966969 -1.9770778  1.5995364 -2.1155944]]
Iteration 400 of 1000: loss=0.0397 " + "l1=0.0389" + "l2=0.00073 f=-0.174 shape=(1, 9000, 1)
logits [[ 1.78762   -1.9750669  1.5963348 -2.1056156]]
Iteration 500 of 1000: loss=0.0396 " + "l1=0.0387" + "l2=0.000869 f=-0.174 shape=(1, 9000, 1)
logits [[ 1.7788395 -1.9733628  1.5935818 -2.096099 ]]
Iteration 600 of 1000: loss=0.0395 " + "l1=0.0386" + "l2=0.000947 f=-0.174 shape=(1, 9000, 1)
logits [[ 1.7706137 -1.9719502  1.5910422 -2.0870368]]
Iteration 700 of 1000: loss=0.0395 " + "l1=0.0384" + "l2=0.00106 f=-0.175 shape=(1, 9000, 1)
logits [[ 1.7623047 -1.9709105  1.5885879 -2.078016 ]]
Iteration 800 of 1000: loss=0.0395 " + "l1=0.0382" + "l2=0.00122 f=-0.175 shape=(1, 9000, 1)
logits [[ 1.7545539 -1.9698395  1.5862014 -2.0696132]]
Iteration 900 of 1000: loss=0.0394 " + "l1=0.0381" + "l2=0.00131 f=-0.175 shape=(1, 9000, 1)
logits [[ 1.7470783 -1.968867   1.5839444 -2.0613918]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.407 " + "l1=0.407" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.8682625 -2.0000458  1.6299901 -2.201616 ]]
Iteration 100 of 1000: loss=0.342 " + "l1=0.307" + "l2=0.035 f=-0.16 shape=(1, 9000, 1)
logits [[ 1.4199755 -1.8322369  1.4203677 -1.6492974]]
Iteration 200 of 1000: loss=0.326 " + "l1=0.287" + "l2=0.0392 f=-0.146 shape=(1, 9000, 1)
logits [[ 1.3500583 -1.7702191  1.3514111 -1.5156994]]
Iteration 300 of 1000: loss=0.314 " + "l1=0.271" + "l2=0.0433 f=-0.139 shape=(1, 9000, 1)
logits [[ 1.2930892 -1.7265033  1.2932483 -1.4178152]]
Iteration 400 of 1000: loss=0.303 " + "l1=0.255" + "l2=0.048 f=-0.135 shape=(1, 9000, 1)
logits [[ 1.2261058 -1.6962824  1.2419106 -1.3127246]]
Iteration 500 of 1000: loss=0.294 " + "l1=0.243" + "l2=0.0501 f=-0.132 shape=(1, 9000, 1)
logits [[ 1.170009  -1.6662557  1.2012317 -1.2331645]]
Iteration 600 of 1000: loss=0.284 " + "l1=0.228" + "l2=0.0561 f=-0.128 shape=(1, 9000, 1)
logits [[ 1.0813528 -1.6203067  1.1531596 -1.1266304]]
Iteration 700 of 1000: loss=0.274 " + "l1=0.212" + "l2=0.0617 f=-0.12 shape=(1, 9000, 1)
logits [[ 1.0006516 -1.5800945  1.1095963 -1.0106452]]
Iteration 800 of 1000: loss=0.266 " + "l1=0.2" + "l2=0.0654 f=-0.117 shape=(1, 9000, 1)
logits [[ 0.9326875  -1.5519888   1.0758394  -0.92616737]]
Iteration 900 of 1000: loss=0.259 " + "l1=0.191" + "l2=0.0681 f=-0.117 shape=(1, 9000, 1)
logits [[ 0.87735176 -1.5276798   1.0444616  -0.86408156]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.07 " + "l1=4.07" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.8682625 -2.0000458  1.6299901 -2.201616 ]]
Iteration 100 of 1000: loss=0.823 " + "l1=0.0229" + "l2=0.8 f=-0.0574 shape=(1, 9000, 1)
logits [[ 0.01629996 -1.203352    0.49008644  0.46720353]]
Iteration 200 of 1000: loss=0.623 " + "l1=0.00899" + "l2=0.614 f=-0.0558 shape=(1, 9000, 1)
logits [[ 0.02814607 -1.203587    0.48061007  0.47161996]]
Iteration 300 of 1000: loss=0.548 " + "l1=0" + "l2=0.548 f=-0.0531 shape=(1, 9000, 1)
logits [[ 0.02422913 -1.1931792   0.47018299  0.48646078]]
Iteration 400 of 1000: loss=0.496 " + "l1=0" + "l2=0.496 f=-0.0563 shape=(1, 9000, 1)
logits [[ 0.02741209 -1.2026285   0.47359097  0.47628406]]
Iteration 500 of 1000: loss=0.452 " + "l1=0" + "l2=0.452 f=-0.0591 shape=(1, 9000, 1)
logits [[ 0.0167545  -1.2086525   0.47495988  0.48052925]]
Iteration 600 of 1000: loss=0.419 " + "l1=0" + "l2=0.419 f=-0.0656 shape=(1, 9000, 1)
logits [[-0.01485168 -1.2065425   0.46470317  0.49444035]]
Iteration 700 of 1000: loss=0.382 " + "l1=0" + "l2=0.382 f=-0.0775 shape=(1, 9000, 1)
logits [[-0.02588078 -1.2169341   0.45920655  0.4734294 ]]
Iteration 800 of 1000: loss=0.36 " + "l1=0" + "l2=0.36 f=-0.0854 shape=(1, 9000, 1)
logits [[-0.0407145  -1.2279125   0.45450103  0.47238466]]
Iteration 900 of 1000: loss=0.34 " + "l1=0" + "l2=0.34 f=-0.0918 shape=(1, 9000, 1)
logits [[-0.05238461 -1.2438127   0.45335385  0.4756409 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.24 " + "l1=2.24" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.8682625 -2.0000458  1.6299901 -2.201616 ]]
Iteration 100 of 1000: loss=0.858 " + "l1=0.147" + "l2=0.711 f=-0.0664 shape=(1, 9000, 1)
logits [[ 0.09296355 -1.20819     0.55847245  0.2912752 ]]
Iteration 200 of 1000: loss=0.572 " + "l1=0.00413" + "l2=0.568 f=-0.0558 shape=(1, 9000, 1)
logits [[ 0.02880883 -1.1899841   0.47266325  0.46514726]]
Iteration 300 of 1000: loss=0.491 " + "l1=0.002" + "l2=0.489 f=-0.0604 shape=(1, 9000, 1)
logits [[ 0.01989473 -1.1884224   0.46519294  0.46154946]]
Iteration 400 of 1000: loss=0.433 " + "l1=0" + "l2=0.433 f=-0.0699 shape=(1, 9000, 1)
logits [[-0.01754227 -1.1903747   0.4555878   0.47264782]]
Iteration 500 of 1000: loss=0.394 " + "l1=0" + "l2=0.394 f=-0.0788 shape=(1, 9000, 1)
logits [[-0.03023522 -1.2031772   0.45036876  0.46770832]]
Iteration 600 of 1000: loss=0.363 " + "l1=0.00184" + "l2=0.361 f=-0.0848 shape=(1, 9000, 1)
logits [[-0.02426783 -1.2205204   0.45446497  0.45111328]]
Iteration 700 of 1000: loss=0.34 " + "l1=0" + "l2=0.34 f=-0.0878 shape=(1, 9000, 1)
logits [[-0.03558387 -1.2356855   0.45175552  0.46814942]]
Iteration 800 of 1000: loss=0.316 " + "l1=0" + "l2=0.316 f=-0.0935 shape=(1, 9000, 1)
logits [[-0.04092772 -1.2565167   0.4562865   0.46700573]]
Iteration 900 of 1000: loss=0.293 " + "l1=0.00299" + "l2=0.29 f=-0.0966 shape=(1, 9000, 1)
logits [[-0.03159241 -1.2811934   0.46582595  0.46038502]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.32 " + "l1=1.32" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.8682625 -2.0000458  1.6299901 -2.201616 ]]
Iteration 100 of 1000: loss=0.809 " + "l1=0.574" + "l2=0.235 f=-0.105 shape=(1, 9000, 1)
logits [[ 0.8194927 -1.4691268  0.9986909 -0.7677637]]
Iteration 200 of 1000: loss=0.627 " + "l1=0.249" + "l2=0.378 f=-0.0802 shape=(1, 9000, 1)
logits [[ 0.35555682 -1.2892599   0.68919766 -0.07616442]]
Iteration 300 of 1000: loss=0.459 " + "l1=0" + "l2=0.459 f=-0.0777 shape=(1, 9000, 1)
logits [[-0.02776299 -1.170903    0.4412826   0.4465745 ]]
Iteration 400 of 1000: loss=0.4 " + "l1=0.0103" + "l2=0.39 f=-0.0847 shape=(1, 9000, 1)
logits [[-0.01503216 -1.1964482   0.45232466  0.4204795 ]]
Iteration 500 of 1000: loss=0.359 " + "l1=0" + "l2=0.359 f=-0.0882 shape=(1, 9000, 1)
logits [[-0.03318832 -1.2111523   0.44345096  0.44824055]]
Iteration 600 of 1000: loss=0.33 " + "l1=0.000586" + "l2=0.329 f=-0.0907 shape=(1, 9000, 1)
logits [[-0.01650631 -1.2478472   0.45162183  0.44981852]]
Iteration 700 of 1000: loss=0.3 " + "l1=0" + "l2=0.3 f=-0.0982 shape=(1, 9000, 1)
logits [[-0.01483835 -1.2897257   0.44988966  0.46180725]]
Iteration 800 of 1000: loss=0.274 " + "l1=0.00258" + "l2=0.271 f=-0.102 shape=(1, 9000, 1)
logits [[ 0.00716978 -1.3224698   0.45821574  0.45027342]]
Iteration 900 of 1000: loss=0.253 " + "l1=0" + "l2=0.253 f=-0.103 shape=(1, 9000, 1)
logits [[ 0.00305564 -1.3412272   0.45699158  0.46817636]]
--- 320.60197257995605 seconds ---
Adv result:3
Loading record A01986
(1, 9444)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0606 " + "l1=0.0606" + "l2=0 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.3950608 -2.6661162  2.4988005 -4.943674 ]]
Iteration 100 of 1000: loss=0.0604 " + "l1=0.0601" + "l2=0.000229 f=-0.427 shape=(1, 9000, 1)
logits [[ 3.3666677 -2.6476276  2.4885776 -4.9156404]]
Iteration 200 of 1000: loss=0.0603 " + "l1=0.0601" + "l2=0.000197 f=-0.427 shape=(1, 9000, 1)
logits [[ 3.3649735 -2.6457162  2.488057  -4.9139595]]
Iteration 300 of 1000: loss=0.0603 " + "l1=0.06" + "l2=0.000221 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.3612206 -2.642678   2.4865918 -4.9102163]]
Iteration 400 of 1000: loss=0.0602 " + "l1=0.06" + "l2=0.000251 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.357307  -2.639584   2.4849658 -4.906285 ]]
Iteration 500 of 1000: loss=0.0602 " + "l1=0.0599" + "l2=0.000283 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.3531   -2.636328  2.483264 -4.902128]]
Iteration 600 of 1000: loss=0.0602 " + "l1=0.0598" + "l2=0.000402 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.348875  -2.6330137  2.4815037 -4.8978877]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.606 " + "l1=0.606" + "l2=0 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.3950608 -2.6661162  2.4988005 -4.943674 ]]
Iteration 100 of 1000: loss=0.585 " + "l1=0.574" + "l2=0.0111 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.2013733 -2.5413845  2.4303315 -4.750514 ]]
Iteration 200 of 1000: loss=0.578 " + "l1=0.564" + "l2=0.014 f=-0.41 shape=(1, 9000, 1)
logits [[ 3.1425567 -2.4998522  2.4087577 -4.691536 ]]
Iteration 300 of 1000: loss=0.572 " + "l1=0.555" + "l2=0.0162 f=-0.405 shape=(1, 9000, 1)
logits [[ 3.0923193 -2.4615126  2.3884804 -4.6406646]]
Iteration 400 of 1000: loss=0.565 " + "l1=0.546" + "l2=0.0189 f=-0.401 shape=(1, 9000, 1)
logits [[ 3.0394688 -2.4190197  2.3647459 -4.5889187]]
Iteration 500 of 1000: loss=0.558 " + "l1=0.538" + "l2=0.0205 f=-0.397 shape=(1, 9000, 1)
logits [[ 2.9923022 -2.3838384  2.3414247 -4.5397253]]
Iteration 600 of 1000: loss=0.551 " + "l1=0.529" + "l2=0.0226 f=-0.394 shape=(1, 9000, 1)
logits [[ 2.9411104 -2.344569   2.3194625 -4.49007  ]]
Iteration 700 of 1000: loss=0.543 " + "l1=0.517" + "l2=0.0263 f=-0.39 shape=(1, 9000, 1)
logits [[ 2.8743765 -2.2920654  2.2913787 -4.4348116]]
Iteration 800 of 1000: loss=0.535 " + "l1=0.507" + "l2=0.0284 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.821144  -2.2473807  2.269933  -4.392342 ]]
Iteration 900 of 1000: loss=0.529 " + "l1=0.498" + "l2=0.0312 f=-0.384 shape=(1, 9000, 1)
logits [[ 2.7709844 -2.205077   2.2508004 -4.353496 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.06 " + "l1=6.06" + "l2=0 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.3950608 -2.6661162  2.4988005 -4.943674 ]]
Iteration 100 of 1000: loss=4.46 " + "l1=3.78" + "l2=0.679 f=-0.374 shape=(1, 9000, 1)
logits [[ 2.0279863 -1.7546897  2.025339  -3.7949085]]
Iteration 200 of 1000: loss=4.05 " + "l1=3.25" + "l2=0.798 f=-0.361 shape=(1, 9000, 1)
logits [[ 1.8000715 -1.449169   1.8043404 -3.5993145]]
Iteration 300 of 1000: loss=3.71 " + "l1=2.8" + "l2=0.917 f=-0.358 shape=(1, 9000, 1)
logits [[ 1.5882522 -1.2075058  1.5897572 -3.4020617]]
Iteration 400 of 1000: loss=3.36 " + "l1=2.26" + "l2=1.1 f=-0.358 shape=(1, 9000, 1)
logits [[ 1.3325019 -0.9271232  1.3178852 -3.1563647]]
Iteration 500 of 1000: loss=2.89 " + "l1=1.66" + "l2=1.23 f=-0.342 shape=(1, 9000, 1)
logits [[ 1.0496781  -0.60586196  1.051693   -2.8623037 ]]
Iteration 600 of 1000: loss=2.62 " + "l1=1.41" + "l2=1.21 f=-0.314 shape=(1, 9000, 1)
logits [[ 0.93139577 -0.471243    0.9352238  -2.6497412 ]]
Iteration 700 of 1000: loss=2.42 " + "l1=1.25" + "l2=1.17 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.85841346 -0.39108577  0.8565702  -2.4739695 ]]
Iteration 800 of 1000: loss=2.27 " + "l1=1.13" + "l2=1.14 f=-0.275 shape=(1, 9000, 1)
logits [[ 0.79429734 -0.32981318  0.79600644 -2.3610072 ]]
Iteration 900 of 1000: loss=2.15 " + "l1=1.03" + "l2=1.11 f=-0.268 shape=(1, 9000, 1)
logits [[ 0.73886734 -0.2902699   0.742791   -2.262399  ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=60.6 " + "l1=60.6" + "l2=0 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.3950608 -2.6661162  2.4988005 -4.943674 ]]
Iteration 100 of 1000: loss=14.2 " + "l1=4.67" + "l2=9.53 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.5132568   0.16782054  0.634725   -2.7041862 ]]
Iteration 200 of 1000: loss=7.29 " + "l1=0.045" + "l2=7.25 f=-0.322 shape=(1, 9000, 1)
logits [[ 0.38879937  0.45227873  0.45677468 -2.5854871 ]]
Iteration 300 of 1000: loss=6.06 " + "l1=0.022" + "l2=6.04 f=-0.334 shape=(1, 9000, 1)
logits [[ 0.34232998  0.45726392  0.4594688  -2.5962107 ]]
Iteration 400 of 1000: loss=5.48 " + "l1=0" + "l2=5.48 f=-0.34 shape=(1, 9000, 1)
logits [[ 0.30475396  0.4609142   0.44936147 -2.5762396 ]]
Iteration 500 of 1000: loss=5.02 " + "l1=0" + "l2=5.02 f=-0.342 shape=(1, 9000, 1)
logits [[ 0.3178337   0.44661945  0.44154966 -2.5750663 ]]
Iteration 600 of 1000: loss=4.71 " + "l1=0" + "l2=4.71 f=-0.337 shape=(1, 9000, 1)
logits [[ 0.34395573  0.43251023  0.4322792  -2.5547845 ]]
Iteration 700 of 1000: loss=4.48 " + "l1=0" + "l2=4.48 f=-0.329 shape=(1, 9000, 1)
logits [[ 0.38791427  0.42539898  0.4136436  -2.5440428 ]]
Iteration 800 of 1000: loss=4.31 " + "l1=0" + "l2=4.31 f=-0.331 shape=(1, 9000, 1)
logits [[ 0.3012157   0.4300419   0.41992566 -2.4733584 ]]
Iteration 900 of 1000: loss=4.07 " + "l1=0" + "l2=4.07 f=-0.319 shape=(1, 9000, 1)
logits [[ 0.40162387  0.4104408   0.40468612 -2.4944074 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=33.3 " + "l1=33.3" + "l2=0 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.3950608 -2.6661162  2.4988005 -4.943674 ]]
Iteration 100 of 1000: loss=11.5 " + "l1=5.58" + "l2=5.95 f=-0.345 shape=(1, 9000, 1)
logits [[ 0.86020225 -0.15022065  0.8642333  -2.955203  ]]
Iteration 200 of 1000: loss=6.74 " + "l1=0.213" + "l2=6.52 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.46385702  0.43153614  0.47022113 -2.5868657 ]]
Iteration 300 of 1000: loss=5.4 " + "l1=0.051" + "l2=5.35 f=-0.314 shape=(1, 9000, 1)
logits [[ 0.41562417  0.44613326  0.45540702 -2.5716221 ]]
Iteration 400 of 1000: loss=4.82 " + "l1=0.0273" + "l2=4.8 f=-0.312 shape=(1, 9000, 1)
logits [[ 0.39778653  0.43750983  0.44246894 -2.52758   ]]
Iteration 500 of 1000: loss=4.49 " + "l1=0.1" + "l2=4.39 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.42163455  0.4127151   0.43091175 -2.4840086 ]]
Iteration 600 of 1000: loss=4.16 " + "l1=0" + "l2=4.16 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.39051947  0.42162472  0.41734886 -2.4480484 ]]
Iteration 700 of 1000: loss=3.92 " + "l1=0.0713" + "l2=3.85 f=-0.303 shape=(1, 9000, 1)
logits [[ 0.37435907  0.40691185  0.41986734 -2.4116652 ]]
Iteration 800 of 1000: loss=3.65 " + "l1=0" + "l2=3.65 f=-0.297 shape=(1, 9000, 1)
logits [[ 0.3873156   0.4092423   0.40302014 -2.388513  ]]
Iteration 900 of 1000: loss=3.42 " + "l1=0" + "l2=3.42 f=-0.296 shape=(1, 9000, 1)
logits [[ 0.38718945  0.39873052  0.39787284 -2.3676953 ]]
--- 297.9004364013672 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00896 " + "l1=0.00896" + "l2=0 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.3950608 -2.6661162  2.4988005 -4.943674 ]]
Iteration 100 of 1000: loss=0.0089 " + "l1=0.00877" + "l2=0.000128 f=-0.428 shape=(1, 9000, 1)
logits [[ 3.3767028 -2.6620007  2.4994848 -4.927788 ]]
Iteration 200 of 1000: loss=0.00886 " + "l1=0.00879" + "l2=7.8e-05 f=-0.428 shape=(1, 9000, 1)
logits [[ 3.378053 -2.661804  2.49948  -4.929228]]
Iteration 300 of 1000: loss=0.00886 " + "l1=0.00877" + "l2=8.85e-05 f=-0.428 shape=(1, 9000, 1)
logits [[ 3.3768408 -2.6612604  2.4995122 -4.9283714]]
Iteration 400 of 1000: loss=0.00887 " + "l1=0.00876" + "l2=0.000116 f=-0.428 shape=(1, 9000, 1)
logits [[ 3.3751354 -2.6606653  2.49958   -4.9270806]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0896 " + "l1=0.0896" + "l2=0 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.3950608 -2.6661162  2.4988005 -4.943674 ]]
Iteration 100 of 1000: loss=0.0823 " + "l1=0.0779" + "l2=0.00434 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.2821047 -2.6422093  2.5028677 -4.8429737]]
Iteration 200 of 1000: loss=0.0802 " + "l1=0.0747" + "l2=0.00552 f=-0.424 shape=(1, 9000, 1)
logits [[ 3.2527356 -2.6361065  2.5060692 -4.819291 ]]
Iteration 300 of 1000: loss=0.0784 " + "l1=0.0719" + "l2=0.00647 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.2273583 -2.63092    2.508262  -4.7983737]]
Iteration 400 of 1000: loss=0.0766 " + "l1=0.0695" + "l2=0.00718 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.2043757 -2.6260262  2.5096993 -4.7804537]]
Iteration 500 of 1000: loss=0.0751 " + "l1=0.0672" + "l2=0.00787 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.1830318 -2.621586   2.5110488 -4.763798 ]]
Iteration 600 of 1000: loss=0.0735 " + "l1=0.0649" + "l2=0.00864 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.1608553 -2.6157575  2.5123534 -4.7477274]]
Iteration 700 of 1000: loss=0.0721 " + "l1=0.0627" + "l2=0.00934 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.1397817 -2.6091762  2.5125532 -4.7328563]]
Iteration 800 of 1000: loss=0.0708 " + "l1=0.0607" + "l2=0.0101 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.1210592 -2.603214   2.5138896 -4.720188 ]]
Iteration 900 of 1000: loss=0.0694 " + "l1=0.0588" + "l2=0.0106 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.1026554 -2.5980713  2.51486   -4.7079344]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.896 " + "l1=0.896" + "l2=0 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.3950608 -2.6661162  2.4988005 -4.943674 ]]
Iteration 100 of 1000: loss=0.217 " + "l1=0.00211" + "l2=0.214 f=-0.452 shape=(1, 9000, 1)
logits [[ 2.7092438 -2.7257335  2.7071364 -4.4996204]]
Iteration 200 of 1000: loss=0.171 " + "l1=0.00585" + "l2=0.166 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.7176814 -2.71422    2.7118347 -4.5194287]]
Iteration 300 of 1000: loss=0.147 " + "l1=0" + "l2=0.147 f=-0.449 shape=(1, 9000, 1)
logits [[ 2.701528  -2.6945796  2.7113783 -4.513911 ]]
Iteration 400 of 1000: loss=0.13 " + "l1=0" + "l2=0.13 f=-0.446 shape=(1, 9000, 1)
logits [[ 2.6921263 -2.6731398  2.703434  -4.5080595]]
Iteration 500 of 1000: loss=0.115 " + "l1=0" + "l2=0.115 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.6888433 -2.6518037  2.6926613 -4.5032463]]
Iteration 600 of 1000: loss=0.106 " + "l1=0.00285" + "l2=0.103 f=-0.438 shape=(1, 9000, 1)
logits [[ 2.6873798 -2.630762   2.6845305 -4.4949646]]
Iteration 700 of 1000: loss=0.0955 " + "l1=0" + "l2=0.0955 f=-0.438 shape=(1, 9000, 1)
logits [[ 2.677638  -2.619495   2.6802447 -4.489641 ]]
Iteration 800 of 1000: loss=0.0875 " + "l1=0" + "l2=0.0875 f=-0.438 shape=(1, 9000, 1)
logits [[ 2.672123  -2.6127474  2.674386  -4.4839272]]
Iteration 900 of 1000: loss=0.0807 " + "l1=0" + "l2=0.0807 f=-0.437 shape=(1, 9000, 1)
logits [[ 2.6618896 -2.607578   2.6656113 -4.4683766]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.493 " + "l1=0.493" + "l2=0 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.3950608 -2.6661162  2.4988005 -4.943674 ]]
Iteration 100 of 1000: loss=0.264 " + "l1=0.129" + "l2=0.135 f=-0.431 shape=(1, 9000, 1)
logits [[ 2.836825  -2.6367338  2.6025326 -4.526281 ]]
Iteration 200 of 1000: loss=0.174 " + "l1=0.00484" + "l2=0.169 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.7231822 -2.713781   2.7143757 -4.5156193]]
Iteration 300 of 1000: loss=0.145 " + "l1=0" + "l2=0.145 f=-0.446 shape=(1, 9000, 1)
logits [[ 2.7024262 -2.69129    2.7108786 -4.507747 ]]
Iteration 400 of 1000: loss=0.124 " + "l1=0" + "l2=0.124 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.696321  -2.663262   2.6981287 -4.503287 ]]
Iteration 500 of 1000: loss=0.109 " + "l1=0" + "l2=0.109 f=-0.441 shape=(1, 9000, 1)
logits [[ 2.689724  -2.6442387  2.6900373 -4.500506 ]]
Iteration 600 of 1000: loss=0.0974 " + "l1=0.000827" + "l2=0.0966 f=-0.438 shape=(1, 9000, 1)
logits [[ 2.6807125 -2.6227868  2.679208  -4.490262 ]]
Iteration 700 of 1000: loss=0.0876 " + "l1=0" + "l2=0.0876 f=-0.438 shape=(1, 9000, 1)
logits [[ 2.6640613 -2.610049   2.6692898 -4.473332 ]]
Iteration 800 of 1000: loss=0.0781 " + "l1=0" + "l2=0.0781 f=-0.437 shape=(1, 9000, 1)
logits [[ 2.6526463 -2.6004908  2.6580086 -4.4575562]]
Iteration 900 of 1000: loss=0.0699 " + "l1=0" + "l2=0.0699 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.6403482 -2.5895038  2.643038  -4.43611  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.291 " + "l1=0.291" + "l2=0 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.3950608 -2.6661162  2.4988005 -4.943674 ]]
Iteration 100 of 1000: loss=0.217 " + "l1=0.174" + "l2=0.0426 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.062442  -2.6119685  2.5268636 -4.6659927]]
Iteration 200 of 1000: loss=0.186 " + "l1=0.117" + "l2=0.0688 f=-0.426 shape=(1, 9000, 1)
logits [[ 2.9354053 -2.6189232  2.5743945 -4.5945983]]
Iteration 300 of 1000: loss=0.164 " + "l1=0.0852" + "l2=0.0784 f=-0.426 shape=(1, 9000, 1)
logits [[ 2.857686  -2.6046581  2.595634  -4.5526395]]
Iteration 400 of 1000: loss=0.143 " + "l1=0.0564" + "l2=0.0862 f=-0.426 shape=(1, 9000, 1)
logits [[ 2.7844605 -2.593754   2.6108031 -4.506642 ]]
Iteration 500 of 1000: loss=0.124 " + "l1=0.0298" + "l2=0.0942 f=-0.428 shape=(1, 9000, 1)
logits [[ 2.7179947 -2.5891979  2.626207  -4.4686513]]
Iteration 600 of 1000: loss=0.107 " + "l1=0.00269" + "l2=0.104 f=-0.431 shape=(1, 9000, 1)
logits [[ 2.6621487 -2.5972753  2.6538668 -4.4427657]]
Iteration 700 of 1000: loss=0.0936 " + "l1=0.00174" + "l2=0.0918 f=-0.431 shape=(1, 9000, 1)
logits [[ 2.6523585 -2.5806868  2.6470184 -4.4435716]]
Iteration 800 of 1000: loss=0.0814 " + "l1=0.00112" + "l2=0.0803 f=-0.429 shape=(1, 9000, 1)
logits [[ 2.6308887 -2.553586   2.62744   -4.4190965]]
Iteration 900 of 1000: loss=0.0727 " + "l1=0.00182" + "l2=0.0709 f=-0.428 shape=(1, 9000, 1)
logits [[ 2.618596  -2.5377698  2.6130009 -4.405854 ]]
--- 285.81719279289246 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0834 " + "l1=0.0834" + "l2=0 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.3950608 -2.6661162  2.4988005 -4.943674 ]]
Iteration 100 of 1000: loss=0.0829 " + "l1=0.0824" + "l2=0.000434 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.3556218 -2.6534486  2.4847836 -4.8879905]]
Iteration 200 of 1000: loss=0.0827 " + "l1=0.0823" + "l2=0.000406 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.3515797 -2.6510499  2.4835584 -4.8827415]]
Iteration 300 of 1000: loss=0.0827 " + "l1=0.0822" + "l2=0.000456 f=-0.424 shape=(1, 9000, 1)
logits [[ 3.3460739 -2.64849    2.4814825 -4.874904 ]]
Iteration 400 of 1000: loss=0.0826 " + "l1=0.0821" + "l2=0.000513 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.3403609 -2.6459317  2.4793417 -4.8669662]]
Iteration 500 of 1000: loss=0.0825 " + "l1=0.0819" + "l2=0.000613 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.3344097 -2.6432033  2.4770954 -4.8588095]]
Iteration 600 of 1000: loss=0.0825 " + "l1=0.0818" + "l2=0.000703 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.3283489 -2.640377   2.4747953 -4.8506536]]
Iteration 700 of 1000: loss=0.0824 " + "l1=0.0817" + "l2=0.000783 f=-0.421 shape=(1, 9000, 1)
logits [[ 3.322377  -2.6375408  2.4725115 -4.842793 ]]
Iteration 800 of 1000: loss=0.0825 " + "l1=0.0815" + "l2=0.000961 f=-0.421 shape=(1, 9000, 1)
logits [[ 3.3160555 -2.634528   2.470098  -4.834576 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.834 " + "l1=0.834" + "l2=0 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.3950608 -2.6661162  2.4988005 -4.943674 ]]
Iteration 100 of 1000: loss=0.788 " + "l1=0.763" + "l2=0.0259 f=-0.401 shape=(1, 9000, 1)
logits [[ 3.0985458 -2.57523    2.4014404 -4.5270953]]
Iteration 200 of 1000: loss=0.775 " + "l1=0.741" + "l2=0.0337 f=-0.39 shape=(1, 9000, 1)
logits [[ 3.0112197 -2.54774    2.3731499 -4.398199 ]]
Iteration 300 of 1000: loss=0.763 " + "l1=0.726" + "l2=0.0369 f=-0.383 shape=(1, 9000, 1)
logits [[ 2.9485817 -2.5217977  2.3480396 -4.3074684]]
Iteration 400 of 1000: loss=0.75 " + "l1=0.71" + "l2=0.0407 f=-0.376 shape=(1, 9000, 1)
logits [[ 2.8818944 -2.4854462  2.3165991 -4.21531  ]]
Iteration 500 of 1000: loss=0.738 " + "l1=0.695" + "l2=0.0435 f=-0.367 shape=(1, 9000, 1)
logits [[ 2.8194985 -2.449026   2.2908843 -4.129483 ]]
Iteration 600 of 1000: loss=0.727 " + "l1=0.68" + "l2=0.0472 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.7562587 -2.4141862  2.267714  -4.0422397]]
Iteration 700 of 1000: loss=0.717 " + "l1=0.666" + "l2=0.051 f=-0.35 shape=(1, 9000, 1)
logits [[ 2.6985505 -2.3883405  2.2502022 -3.9618537]]
Iteration 800 of 1000: loss=0.707 " + "l1=0.653" + "l2=0.0547 f=-0.344 shape=(1, 9000, 1)
logits [[ 2.6400428 -2.365468   2.2341816 -3.885982 ]]
Iteration 900 of 1000: loss=0.698 " + "l1=0.64" + "l2=0.0584 f=-0.338 shape=(1, 9000, 1)
logits [[ 2.5839932 -2.344674   2.2230043 -3.8143287]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.34 " + "l1=8.34" + "l2=0 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.3950608 -2.6661162  2.4988005 -4.943674 ]]
Iteration 100 of 1000: loss=5.56 " + "l1=4.56" + "l2=1.01 f=-0.257 shape=(1, 9000, 1)
logits [[ 1.934032  -2.2831678  1.938037  -2.617289 ]]
Iteration 200 of 1000: loss=4.86 " + "l1=3.54" + "l2=1.32 f=-0.185 shape=(1, 9000, 1)
logits [[ 1.6383255 -2.1634228  1.6604211 -1.8765383]]
Iteration 300 of 1000: loss=4.17 " + "l1=2.61" + "l2=1.56 f=-0.09 shape=(1, 9000, 1)
logits [[ 1.3017803 -1.9648777  1.4563609 -1.1534218]]
Iteration 400 of 1000: loss=3.35 " + "l1=1.45" + "l2=1.9 f=0.0431 shape=(1, 9000, 1)
logits [[ 0.90604013 -1.6949368   1.2048787  -0.24351582]]
Iteration 500 of 1000: loss=2.53 " + "l1=0.616" + "l2=1.92 f=0.0901 shape=(1, 9000, 1)
logits [[ 0.67689574 -1.5115489   0.90543604  0.28958616]]
Iteration 600 of 1000: loss=2.01 " + "l1=0.171" + "l2=1.83 f=0.104 shape=(1, 9000, 1)
logits [[ 0.5442557  -1.422225    0.73366344  0.5622605 ]]
Iteration 700 of 1000: loss=1.59 " + "l1=0.0156" + "l2=1.58 f=0.112 shape=(1, 9000, 1)
logits [[ 0.5149422 -1.3682946  0.6584773  0.6428603]]
Iteration 800 of 1000: loss=1.34 " + "l1=0.000678" + "l2=1.34 f=0.117 shape=(1, 9000, 1)
logits [[ 0.5287905 -1.3357104  0.6371117  0.6364335]]
Iteration 900 of 1000: loss=1.16 " + "l1=0" + "l2=1.16 f=0.116 shape=(1, 9000, 1)
logits [[ 0.5176726  -1.3186243   0.630272    0.63549817]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.59 " + "l1=4.59" + "l2=0 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.3950608 -2.6661162  2.4988005 -4.943674 ]]
Iteration 100 of 1000: loss=3.5 " + "l1=2.96" + "l2=0.531 f=-0.312 shape=(1, 9000, 1)
logits [[ 2.1617532 -2.3259819  2.1438932 -3.229016 ]]
Iteration 200 of 1000: loss=3.2 " + "l1=2.65" + "l2=0.543 f=-0.268 shape=(1, 9000, 1)
logits [[ 1.9997697 -2.249978   2.0025713 -2.8225987]]
Iteration 300 of 1000: loss=2.98 " + "l1=2.42" + "l2=0.559 f=-0.235 shape=(1, 9000, 1)
logits [[ 1.8767512 -2.1770442  1.8782281 -2.5161338]]
Iteration 400 of 1000: loss=2.77 " + "l1=2.17" + "l2=0.608 f=-0.193 shape=(1, 9000, 1)
logits [[ 1.6991719 -2.071659   1.7691879 -2.1693022]]
Iteration 500 of 1000: loss=2.46 " + "l1=1.75" + "l2=0.709 f=-0.129 shape=(1, 9000, 1)
logits [[ 1.4079721 -1.9511957  1.607085  -1.579982 ]]
Iteration 600 of 1000: loss=2.07 " + "l1=1.28" + "l2=0.794 f=-0.0404 shape=(1, 9000, 1)
logits [[ 1.0827118 -1.7721694  1.4279478 -0.9001301]]
Iteration 700 of 1000: loss=1.61 " + "l1=0.748" + "l2=0.858 f=0.0597 shape=(1, 9000, 1)
logits [[ 0.86477786 -1.6044669   1.1696     -0.19109514]]
Iteration 800 of 1000: loss=1.34 " + "l1=0.517" + "l2=0.818 f=0.0935 shape=(1, 9000, 1)
logits [[ 0.78994966 -1.5420575   1.0333914   0.09277863]]
Iteration 900 of 1000: loss=1.15 " + "l1=0.36" + "l2=0.793 f=0.111 shape=(1, 9000, 1)
logits [[ 0.7211036  -1.4999226   0.93889517  0.2839994 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=6.46 " + "l1=6.46" + "l2=0 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.3950608 -2.6661162  2.4988005 -4.943674 ]]
Iteration 100 of 1000: loss=4.56 " + "l1=3.79" + "l2=0.766 f=-0.279 shape=(1, 9000, 1)
logits [[ 2.0252047 -2.301929   2.0278132 -2.866231 ]]
Iteration 200 of 1000: loss=4.11 " + "l1=3.27" + "l2=0.842 f=-0.23 shape=(1, 9000, 1)
logits [[ 1.8344693 -2.2167137  1.8428332 -2.378598 ]]
Iteration 300 of 1000: loss=3.69 " + "l1=2.68" + "l2=1 f=-0.17 shape=(1, 9000, 1)
logits [[ 1.6024039 -2.117223   1.649341  -1.8139935]]
Iteration 400 of 1000: loss=3.2 " + "l1=2.04" + "l2=1.16 f=-0.0907 shape=(1, 9000, 1)
logits [[ 1.2956173 -1.944342   1.4608846 -1.1749742]]
Iteration 500 of 1000: loss=2.63 " + "l1=1.29" + "l2=1.34 f=0.00356 shape=(1, 9000, 1)
logits [[ 0.93907994 -1.6826286   1.2099394  -0.45215288]]
Iteration 600 of 1000: loss=2.04 " + "l1=0.651" + "l2=1.39 f=0.0756 shape=(1, 9000, 1)
logits [[ 0.7117471  -1.5354011   0.9832941   0.14271316]]
Iteration 700 of 1000: loss=1.61 " + "l1=0.348" + "l2=1.26 f=0.103 shape=(1, 9000, 1)
logits [[ 0.6201415  -1.4758843   0.8589997   0.40984032]]
Iteration 800 of 1000: loss=1.25 " + "l1=0.064" + "l2=1.19 f=0.134 shape=(1, 9000, 1)
logits [[ 0.55830216 -1.4249316   0.7416725   0.6591337 ]]
Iteration 900 of 1000: loss=1.03 " + "l1=0.00627" + "l2=1.03 f=0.139 shape=(1, 9000, 1)
logits [[ 0.53358924 -1.4000299   0.71544987  0.70735866]]
--- 311.63119554519653 seconds ---
Adv result:3
Loading record A02047
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.068 " + "l1=0.068" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 4.111321  -2.6863217  2.8440127 -5.9288516]]
Iteration 100 of 1000: loss=0.0676 " + "l1=0.0674" + "l2=0.000286 f=-0.414 shape=(1, 9000, 1)
logits [[ 4.072896  -2.662902   2.8218246 -5.8886447]]
Iteration 200 of 1000: loss=0.0676 " + "l1=0.0673" + "l2=0.000267 f=-0.414 shape=(1, 9000, 1)
logits [[ 4.069565 -2.660826  2.819576 -5.883567]]
Iteration 300 of 1000: loss=0.0675 " + "l1=0.0672" + "l2=0.000289 f=-0.414 shape=(1, 9000, 1)
logits [[ 4.0643306 -2.6576374  2.8162892 -5.877018 ]]
Iteration 400 of 1000: loss=0.0675 " + "l1=0.0671" + "l2=0.000378 f=-0.413 shape=(1, 9000, 1)
logits [[ 4.058518  -2.6541462  2.8126369 -5.8698263]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.68 " + "l1=0.68" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 4.111321  -2.6863217  2.8440127 -5.9288516]]
Iteration 100 of 1000: loss=0.651 " + "l1=0.632" + "l2=0.0187 f=-0.404 shape=(1, 9000, 1)
logits [[ 3.816035  -2.5032587  2.6753724 -5.603886 ]]
Iteration 200 of 1000: loss=0.641 " + "l1=0.617" + "l2=0.024 f=-0.399 shape=(1, 9000, 1)
logits [[ 3.7225385 -2.4477868  2.6228733 -5.4920697]]
Iteration 300 of 1000: loss=0.629 " + "l1=0.602" + "l2=0.0273 f=-0.394 shape=(1, 9000, 1)
logits [[ 3.6307752 -2.3899972  2.568031  -5.3833485]]
Iteration 400 of 1000: loss=0.614 " + "l1=0.583" + "l2=0.031 f=-0.388 shape=(1, 9000, 1)
logits [[ 3.5073514 -2.3210196  2.502087  -5.2387166]]
Iteration 500 of 1000: loss=0.592 " + "l1=0.556" + "l2=0.0367 f=-0.375 shape=(1, 9000, 1)
logits [[ 3.3340013 -2.221301   2.4218054 -5.032995 ]]
Iteration 600 of 1000: loss=0.572 " + "l1=0.529" + "l2=0.0423 f=-0.362 shape=(1, 9000, 1)
logits [[ 3.1644266 -2.1276336  2.343812  -4.829737 ]]
Iteration 700 of 1000: loss=0.551 " + "l1=0.505" + "l2=0.0461 f=-0.352 shape=(1, 9000, 1)
logits [[ 3.0002716 -2.0499709  2.271525  -4.6302776]]
Iteration 800 of 1000: loss=0.53 " + "l1=0.481" + "l2=0.0486 f=-0.34 shape=(1, 9000, 1)
logits [[ 2.8424199 -1.9694237  2.1917362 -4.4237785]]
Iteration 900 of 1000: loss=0.505 " + "l1=0.451" + "l2=0.0537 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.6488357 -1.8627278  2.0976417 -4.1770506]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.8 " + "l1=6.8" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 4.111321  -2.6863217  2.8440127 -5.9288516]]
Iteration 100 of 1000: loss=3.66 " + "l1=2.17" + "l2=1.49 f=-0.279 shape=(1, 9000, 1)
logits [[ 1.3548768 -0.8168315  1.358083  -3.0114388]]
Iteration 200 of 1000: loss=2.74 " + "l1=1.22" + "l2=1.52 f=-0.263 shape=(1, 9000, 1)
logits [[ 0.87590617 -0.34147412  0.86938953 -2.4566808 ]]
Iteration 300 of 1000: loss=2.34 " + "l1=0.875" + "l2=1.46 f=-0.259 shape=(1, 9000, 1)
logits [[ 0.67044574 -0.20480667  0.67054003 -2.1702127 ]]
Iteration 400 of 1000: loss=2.05 " + "l1=0.689" + "l2=1.36 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.54485184 -0.14215487  0.54666394 -1.8953449 ]]
Iteration 500 of 1000: loss=1.8 " + "l1=0.53" + "l2=1.27 f=-0.213 shape=(1, 9000, 1)
logits [[ 0.4493229  -0.07679954  0.4527445  -1.6770079 ]]
Iteration 600 of 1000: loss=1.57 " + "l1=0.341" + "l2=1.23 f=-0.189 shape=(1, 9000, 1)
logits [[ 0.3181658  -0.01338011  0.32802138 -1.3871248 ]]
Iteration 700 of 1000: loss=1.34 " + "l1=0.128" + "l2=1.22 f=-0.169 shape=(1, 9000, 1)
logits [[ 0.17668618  0.06272884  0.19101854 -1.1074833 ]]
Iteration 800 of 1000: loss=1.12 " + "l1=0.0306" + "l2=1.09 f=-0.159 shape=(1, 9000, 1)
logits [[ 0.08050126  0.06063867  0.09127073 -0.86812186]]
Iteration 900 of 1000: loss=0.985 " + "l1=0.0112" + "l2=0.974 f=-0.151 shape=(1, 9000, 1)
logits [[ 0.04210596  0.05145275  0.06269898 -0.76062006]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.74 " + "l1=3.74" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 4.111321  -2.6863217  2.8440127 -5.9288516]]
Iteration 100 of 1000: loss=2.72 " + "l1=2.05" + "l2=0.677 f=-0.313 shape=(1, 9000, 1)
logits [[ 2.2249982 -1.4972093  1.8766062 -3.856001 ]]
Iteration 200 of 1000: loss=2.11 " + "l1=1.33" + "l2=0.78 f=-0.285 shape=(1, 9000, 1)
logits [[ 1.4496213  -0.97534865  1.450287   -3.0634315 ]]
Iteration 300 of 1000: loss=1.81 " + "l1=1.06" + "l2=0.752 f=-0.266 shape=(1, 9000, 1)
logits [[ 1.1680776 -0.7561758  1.1612742 -2.6373348]]
Iteration 400 of 1000: loss=1.57 " + "l1=0.825" + "l2=0.74 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.9302444 -0.570163   0.9294603 -2.2321026]]
Iteration 500 of 1000: loss=1.37 " + "l1=0.687" + "l2=0.682 f=-0.213 shape=(1, 9000, 1)
logits [[ 0.7702851  -0.47844785  0.77039015 -1.9156375 ]]
Iteration 600 of 1000: loss=1.23 " + "l1=0.585" + "l2=0.642 f=-0.196 shape=(1, 9000, 1)
logits [[ 0.6577202  -0.40543795  0.65455693 -1.6923892 ]]
Iteration 700 of 1000: loss=1.11 " + "l1=0.5" + "l2=0.606 f=-0.183 shape=(1, 9000, 1)
logits [[ 0.5510388  -0.3585277   0.55034673 -1.4763696 ]]
Iteration 800 of 1000: loss=1 " + "l1=0.398" + "l2=0.605 f=-0.168 shape=(1, 9000, 1)
logits [[ 0.4223137 -0.3009391  0.423142  -1.2150586]]
Iteration 900 of 1000: loss=0.912 " + "l1=0.314" + "l2=0.598 f=-0.159 shape=(1, 9000, 1)
logits [[ 0.31905538 -0.25151542  0.3140774  -1.0194137 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.27 " + "l1=5.27" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 4.111321  -2.6863217  2.8440127 -5.9288516]]
Iteration 100 of 1000: loss=3.21 " + "l1=2.06" + "l2=1.14 f=-0.287 shape=(1, 9000, 1)
logits [[ 1.5927051 -1.071678   1.5921755 -3.2621408]]
Iteration 200 of 1000: loss=2.47 " + "l1=1.3" + "l2=1.17 f=-0.269 shape=(1, 9000, 1)
logits [[ 1.0946299 -0.5768026  1.0839165 -2.6762218]]
Iteration 300 of 1000: loss=2.12 " + "l1=0.996" + "l2=1.12 f=-0.241 shape=(1, 9000, 1)
logits [[ 0.8645552  -0.41551203  0.8700163  -2.2831342 ]]
Iteration 400 of 1000: loss=1.86 " + "l1=0.823" + "l2=1.04 f=-0.217 shape=(1, 9000, 1)
logits [[ 0.71982867 -0.34162256  0.7198806  -1.9671825 ]]
Iteration 500 of 1000: loss=1.62 " + "l1=0.672" + "l2=0.951 f=-0.196 shape=(1, 9000, 1)
logits [[ 0.6018018  -0.26576555  0.6000045  -1.7209755 ]]
Iteration 600 of 1000: loss=1.43 " + "l1=0.532" + "l2=0.897 f=-0.179 shape=(1, 9000, 1)
logits [[ 0.48929563 -0.18664147  0.49931064 -1.5181245 ]]
Iteration 700 of 1000: loss=1.25 " + "l1=0.36" + "l2=0.891 f=-0.167 shape=(1, 9000, 1)
logits [[ 0.3419192  -0.10881745  0.35536608 -1.2569101 ]]
Iteration 800 of 1000: loss=1.09 " + "l1=0.212" + "l2=0.883 f=-0.159 shape=(1, 9000, 1)
logits [[ 0.21794568 -0.05244913  0.22068675 -1.0202296 ]]
Iteration 900 of 1000: loss=0.954 " + "l1=0.0776" + "l2=0.877 f=-0.149 shape=(1, 9000, 1)
logits [[ 0.10139958  0.00624066  0.10641883 -0.8110993 ]]
--- 288.403963804245 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0127 " + "l1=0.0127" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 4.111321  -2.6863217  2.8440127 -5.9288516]]
Iteration 100 of 1000: loss=0.0126 " + "l1=0.0125" + "l2=0.000112 f=-0.415 shape=(1, 9000, 1)
logits [[ 4.092675  -2.6864402  2.8448575 -5.912243 ]]
Iteration 200 of 1000: loss=0.0126 " + "l1=0.0125" + "l2=7.65e-05 f=-0.415 shape=(1, 9000, 1)
logits [[ 4.092757  -2.6864393  2.8444612 -5.911519 ]]
Iteration 300 of 1000: loss=0.0126 " + "l1=0.0125" + "l2=9.55e-05 f=-0.415 shape=(1, 9000, 1)
logits [[ 4.0910583 -2.686532   2.8443627 -5.9096284]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.127 " + "l1=0.127" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 4.111321  -2.6863217  2.8440127 -5.9288516]]
Iteration 100 of 1000: loss=0.119 " + "l1=0.114" + "l2=0.00482 f=-0.418 shape=(1, 9000, 1)
logits [[ 3.996069  -2.6964386  2.8548508 -5.8255258]]
Iteration 200 of 1000: loss=0.117 " + "l1=0.111" + "l2=0.00619 f=-0.419 shape=(1, 9000, 1)
logits [[ 3.96648   -2.7057981  2.8612773 -5.796857 ]]
Iteration 300 of 1000: loss=0.115 " + "l1=0.107" + "l2=0.00724 f=-0.42 shape=(1, 9000, 1)
logits [[ 3.9407382 -2.7141058  2.8659604 -5.77171  ]]
Iteration 400 of 1000: loss=0.113 " + "l1=0.105" + "l2=0.00818 f=-0.421 shape=(1, 9000, 1)
logits [[ 3.9149091 -2.7245395  2.869841  -5.745342 ]]
Iteration 500 of 1000: loss=0.111 " + "l1=0.102" + "l2=0.00895 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.8868284 -2.728735   2.8689487 -5.7173543]]
Iteration 600 of 1000: loss=0.109 " + "l1=0.0995" + "l2=0.0094 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.862626  -2.7296398  2.8675718 -5.693089 ]]
Iteration 700 of 1000: loss=0.107 " + "l1=0.0973" + "l2=0.00995 f=-0.424 shape=(1, 9000, 1)
logits [[ 3.838224  -2.7311199  2.865626  -5.668404 ]]
Iteration 800 of 1000: loss=0.106 " + "l1=0.095" + "l2=0.0105 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.8104463 -2.7299263  2.8606212 -5.6398277]]
Iteration 900 of 1000: loss=0.104 " + "l1=0.0927" + "l2=0.011 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.780213  -2.727771   2.8531616 -5.605774 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.27 " + "l1=1.27" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 4.111321  -2.6863217  2.8440127 -5.9288516]]
Iteration 100 of 1000: loss=0.3 " + "l1=0.00429" + "l2=0.296 f=-0.417 shape=(1, 9000, 1)
logits [[ 3.0017102 -2.8499584  2.9974222 -4.819041 ]]
Iteration 200 of 1000: loss=0.217 " + "l1=0" + "l2=0.217 f=-0.411 shape=(1, 9000, 1)
logits [[ 2.9824967 -2.8393264  2.9845026 -4.77266  ]]
Iteration 300 of 1000: loss=0.174 " + "l1=8.92e-05" + "l2=0.174 f=-0.405 shape=(1, 9000, 1)
logits [[ 2.9819965 -2.827777   2.9819074 -4.7576423]]
Iteration 400 of 1000: loss=0.148 " + "l1=0" + "l2=0.148 f=-0.401 shape=(1, 9000, 1)
logits [[ 2.9674902 -2.8094788  2.9680748 -4.7315974]]
Iteration 500 of 1000: loss=0.136 " + "l1=0" + "l2=0.136 f=-0.398 shape=(1, 9000, 1)
logits [[ 2.934726  -2.794559   2.9502013 -4.68277  ]]
Iteration 600 of 1000: loss=0.125 " + "l1=0" + "l2=0.125 f=-0.395 shape=(1, 9000, 1)
logits [[ 2.9102497 -2.781803   2.9280264 -4.636211 ]]
Iteration 700 of 1000: loss=0.113 " + "l1=0" + "l2=0.113 f=-0.391 shape=(1, 9000, 1)
logits [[ 2.895272  -2.7641795  2.8994782 -4.5952206]]
Iteration 800 of 1000: loss=0.106 " + "l1=0" + "l2=0.106 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.8633866 -2.7497523  2.8730617 -4.5359855]]
Iteration 900 of 1000: loss=0.0982 " + "l1=0" + "l2=0.0982 f=-0.383 shape=(1, 9000, 1)
logits [[ 2.8393896 -2.732897   2.845255  -4.483285 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.697 " + "l1=0.697" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 4.111321  -2.6863217  2.8440127 -5.9288516]]
Iteration 100 of 1000: loss=0.364 " + "l1=0.12" + "l2=0.244 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.1670249 -2.821456   2.9493911 -4.994258 ]]
Iteration 200 of 1000: loss=0.196 " + "l1=0.000184" + "l2=0.196 f=-0.412 shape=(1, 9000, 1)
logits [[ 3.0034838 -2.8395028  3.0031493 -4.815435 ]]
Iteration 300 of 1000: loss=0.159 " + "l1=0" + "l2=0.159 f=-0.408 shape=(1, 9000, 1)
logits [[ 2.9895332 -2.8335373  2.993417  -4.779677 ]]
Iteration 400 of 1000: loss=0.14 " + "l1=0.00133" + "l2=0.138 f=-0.405 shape=(1, 9000, 1)
logits [[ 2.9702063 -2.820193   2.9677968 -4.7365127]]
Iteration 500 of 1000: loss=0.127 " + "l1=0" + "l2=0.127 f=-0.401 shape=(1, 9000, 1)
logits [[ 2.9413304 -2.807337   2.9469192 -4.6832485]]
Iteration 600 of 1000: loss=0.116 " + "l1=0" + "l2=0.116 f=-0.397 shape=(1, 9000, 1)
logits [[ 2.9166644 -2.7896068  2.9213622 -4.635651 ]]
Iteration 700 of 1000: loss=0.11 " + "l1=0.00539" + "l2=0.105 f=-0.392 shape=(1, 9000, 1)
logits [[ 2.8993595 -2.7681878  2.889553  -4.5879602]]
Iteration 800 of 1000: loss=0.101 " + "l1=0" + "l2=0.101 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.8566704 -2.754227   2.8654144 -4.5147142]]
Iteration 900 of 1000: loss=0.0929 " + "l1=0" + "l2=0.0929 f=-0.381 shape=(1, 9000, 1)
logits [[ 2.8327906 -2.731479   2.8365715 -4.462536 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.412 " + "l1=0.412" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 4.111321  -2.6863217  2.8440127 -5.9288516]]
Iteration 100 of 1000: loss=0.328 " + "l1=0.275" + "l2=0.0526 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.7273266 -2.7329812  2.8808885 -5.5663013]]
Iteration 200 of 1000: loss=0.267 " + "l1=0.151" + "l2=0.117 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.3857617 -2.8045635  2.9224255 -5.2062407]]
Iteration 300 of 1000: loss=0.185 " + "l1=0.0169" + "l2=0.168 f=-0.412 shape=(1, 9000, 1)
logits [[ 3.0327818 -2.8396077  2.980887  -4.822255 ]]
Iteration 400 of 1000: loss=0.145 " + "l1=2.42e-05" + "l2=0.145 f=-0.409 shape=(1, 9000, 1)
logits [[ 2.973414  -2.8401983  2.9733396 -4.743317 ]]
Iteration 500 of 1000: loss=0.128 " + "l1=0" + "l2=0.128 f=-0.405 shape=(1, 9000, 1)
logits [[ 2.9504676 -2.8309457  2.9507606 -4.692093 ]]
Iteration 600 of 1000: loss=0.117 " + "l1=0.00234" + "l2=0.115 f=-0.4 shape=(1, 9000, 1)
logits [[ 2.9308794 -2.8137538  2.923678  -4.6413326]]
Iteration 700 of 1000: loss=0.108 " + "l1=0" + "l2=0.108 f=-0.395 shape=(1, 9000, 1)
logits [[ 2.895711 -2.803356  2.902073 -4.572985]]
Iteration 800 of 1000: loss=0.0986 " + "l1=0.00107" + "l2=0.0976 f=-0.39 shape=(1, 9000, 1)
logits [[ 2.8765152 -2.7867424  2.8732197 -4.522303 ]]
Iteration 900 of 1000: loss=0.0915 " + "l1=0" + "l2=0.0915 f=-0.383 shape=(1, 9000, 1)
logits [[ 2.839879  -2.7641828  2.8426487 -4.4508514]]
--- 282.5799467563629 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.1 " + "l1=0.1" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 4.111321  -2.6863217  2.8440127 -5.9288516]]
Iteration 100 of 1000: loss=0.0996 " + "l1=0.0991" + "l2=0.000538 f=-0.412 shape=(1, 9000, 1)
logits [[ 4.056367  -2.669055   2.8161998 -5.8514996]]
Iteration 200 of 1000: loss=0.0994 " + "l1=0.0989" + "l2=0.000565 f=-0.412 shape=(1, 9000, 1)
logits [[ 4.047652  -2.6662498  2.8113925 -5.839082 ]]
Iteration 300 of 1000: loss=0.0993 " + "l1=0.0986" + "l2=0.000633 f=-0.411 shape=(1, 9000, 1)
logits [[ 4.037839  -2.6630356  2.8059833 -5.8250403]]
Iteration 400 of 1000: loss=0.0991 " + "l1=0.0984" + "l2=0.000707 f=-0.411 shape=(1, 9000, 1)
logits [[ 4.0276446 -2.6595407  2.8001277 -5.810483 ]]
Iteration 500 of 1000: loss=0.0989 " + "l1=0.0981" + "l2=0.000827 f=-0.41 shape=(1, 9000, 1)
logits [[ 4.016629  -2.65575    2.7936833 -5.7946777]]
Iteration 600 of 1000: loss=0.0987 " + "l1=0.0978" + "l2=0.000907 f=-0.409 shape=(1, 9000, 1)
logits [[ 4.0052137 -2.6519382  2.7870398 -5.77821  ]]
Iteration 700 of 1000: loss=0.0986 " + "l1=0.0975" + "l2=0.00104 f=-0.409 shape=(1, 9000, 1)
logits [[ 3.9936085 -2.6479201  2.7802718 -5.761256 ]]
Iteration 800 of 1000: loss=0.0984 " + "l1=0.0973" + "l2=0.00117 f=-0.408 shape=(1, 9000, 1)
logits [[ 3.9817328 -2.6437738  2.7732358 -5.743702 ]]
Iteration 900 of 1000: loss=0.0983 " + "l1=0.097" + "l2=0.00129 f=-0.407 shape=(1, 9000, 1)
logits [[ 3.9702406 -2.6396718  2.7664583 -5.726455 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1 " + "l1=1" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 4.111321  -2.6863217  2.8440127 -5.9288516]]
Iteration 100 of 1000: loss=0.929 " + "l1=0.885" + "l2=0.0449 f=-0.39 shape=(1, 9000, 1)
logits [[ 3.6214411 -2.5548882  2.5973077 -5.2247996]]
Iteration 200 of 1000: loss=0.898 " + "l1=0.836" + "l2=0.0617 f=-0.381 shape=(1, 9000, 1)
logits [[ 3.4228308 -2.514674   2.5033407 -4.9368024]]
Iteration 300 of 1000: loss=0.86 " + "l1=0.785" + "l2=0.0754 f=-0.369 shape=(1, 9000, 1)
logits [[ 3.210855  -2.4569337  2.4047244 -4.634808 ]]
Iteration 400 of 1000: loss=0.801 " + "l1=0.707" + "l2=0.0937 f=-0.345 shape=(1, 9000, 1)
logits [[ 2.8839936 -2.3782468  2.3008018 -4.185832 ]]
Iteration 500 of 1000: loss=0.742 " + "l1=0.635" + "l2=0.107 f=-0.315 shape=(1, 9000, 1)
logits [[ 2.5864775 -2.2618277  2.1776507 -3.7628498]]
Iteration 600 of 1000: loss=0.693 " + "l1=0.584" + "l2=0.109 f=-0.296 shape=(1, 9000, 1)
logits [[ 2.3817601 -2.1826773  2.0755162 -3.4602962]]
Iteration 700 of 1000: loss=0.651 " + "l1=0.546" + "l2=0.106 f=-0.281 shape=(1, 9000, 1)
logits [[ 2.229258  -2.1158357  1.9889109 -3.2270758]]
Iteration 800 of 1000: loss=0.614 " + "l1=0.506" + "l2=0.108 f=-0.268 shape=(1, 9000, 1)
logits [[ 2.07188   -2.054202   1.8963697 -2.9872224]]
Iteration 900 of 1000: loss=0.578 " + "l1=0.474" + "l2=0.105 f=-0.261 shape=(1, 9000, 1)
logits [[ 1.9423301 -1.9961523  1.8068209 -2.79605  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10 " + "l1=10" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 4.111321  -2.6863217  2.8440127 -5.9288516]]
Iteration 100 of 1000: loss=3.33 " + "l1=0.408" + "l2=2.92 f=-0.0222 shape=(1, 9000, 1)
logits [[ 0.5367032  -1.6152252   0.69873756  0.29087195]]
Iteration 200 of 1000: loss=2.19 " + "l1=0.0368" + "l2=2.16 f=-0.03 shape=(1, 9000, 1)
logits [[ 0.43512747 -1.4925647   0.4871281   0.4502992 ]]
Iteration 300 of 1000: loss=1.78 " + "l1=0.0212" + "l2=1.76 f=-0.038 shape=(1, 9000, 1)
logits [[ 0.4273652  -1.4656419   0.45373157  0.43250144]]
Iteration 400 of 1000: loss=1.48 " + "l1=0" + "l2=1.48 f=-0.0359 shape=(1, 9000, 1)
logits [[ 0.42004833 -1.4516222   0.44213006  0.4457485 ]]
Iteration 500 of 1000: loss=1.29 " + "l1=0.0375" + "l2=1.26 f=-0.0275 shape=(1, 9000, 1)
logits [[ 0.45004126 -1.4227171   0.45014688  0.412613  ]]
Iteration 600 of 1000: loss=1.13 " + "l1=0" + "l2=1.13 f=-0.0156 shape=(1, 9000, 1)
logits [[ 0.40864494 -1.3824977   0.4145755   0.49669474]]
Iteration 700 of 1000: loss=0.996 " + "l1=0" + "l2=0.996 f=-0.0163 shape=(1, 9000, 1)
logits [[ 0.4206995  -1.3650421   0.42204446  0.4569901 ]]
Iteration 800 of 1000: loss=0.892 " + "l1=0" + "l2=0.892 f=-0.0167 shape=(1, 9000, 1)
logits [[ 0.4172608  -1.3677254   0.43757322  0.44622108]]
Iteration 900 of 1000: loss=0.805 " + "l1=0" + "l2=0.805 f=-0.0136 shape=(1, 9000, 1)
logits [[ 0.4240608  -1.3663281   0.43991706  0.44779295]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.52 " + "l1=5.52" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 4.111321  -2.6863217  2.8440127 -5.9288516]]
Iteration 100 of 1000: loss=3 " + "l1=1.62" + "l2=1.38 f=-0.136 shape=(1, 9000, 1)
logits [[ 1.4159211 -1.9307764  1.4568678 -1.4849207]]
Iteration 200 of 1000: loss=2.06 " + "l1=0.573" + "l2=1.48 f=-0.0405 shape=(1, 9000, 1)
logits [[ 0.813133   -1.6072463   0.83684766 -0.20483863]]
Iteration 300 of 1000: loss=1.44 " + "l1=0.078" + "l2=1.36 f=-0.015 shape=(1, 9000, 1)
logits [[ 0.5217428  -1.4872903   0.5236427   0.38191316]]
Iteration 400 of 1000: loss=1.1 " + "l1=0.0163" + "l2=1.09 f=-0.0263 shape=(1, 9000, 1)
logits [[ 0.43934232 -1.4284072   0.4567582   0.42718247]]
Iteration 500 of 1000: loss=0.929 " + "l1=0.0198" + "l2=0.909 f=-0.0253 shape=(1, 9000, 1)
logits [[ 0.43906453 -1.3982074   0.4468533   0.4109108 ]]
Iteration 600 of 1000: loss=0.79 " + "l1=0" + "l2=0.79 f=-0.0222 shape=(1, 9000, 1)
logits [[ 0.42291245 -1.3851823   0.43149096  0.4420071 ]]
Iteration 700 of 1000: loss=0.684 " + "l1=0" + "l2=0.684 f=-0.0178 shape=(1, 9000, 1)
logits [[ 0.42571118 -1.3726283   0.427499    0.44834208]]
Iteration 800 of 1000: loss=0.6 " + "l1=0" + "l2=0.6 f=-0.0163 shape=(1, 9000, 1)
logits [[ 0.42430672 -1.370286    0.4322665   0.4483759 ]]
Iteration 900 of 1000: loss=0.532 " + "l1=0" + "l2=0.532 f=-0.0144 shape=(1, 9000, 1)
logits [[ 0.4278152  -1.3585489   0.42734385  0.44597358]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.26 " + "l1=3.26" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 4.111321  -2.6863217  2.8440127 -5.9288516]]
Iteration 100 of 1000: loss=2.3 " + "l1=1.64" + "l2=0.666 f=-0.276 shape=(1, 9000, 1)
logits [[ 2.0894756 -2.3281505  2.0786319 -2.9457269]]
Iteration 200 of 1000: loss=1.86 " + "l1=1.18" + "l2=0.68 f=-0.185 shape=(1, 9000, 1)
logits [[ 1.6383086 -2.0195765  1.6366106 -1.9951262]]
Iteration 300 of 1000: loss=1.37 " + "l1=0.58" + "l2=0.793 f=-0.0947 shape=(1, 9000, 1)
logits [[ 1.0222269 -1.6662365  1.0253925 -0.7600841]]
Iteration 400 of 1000: loss=1.09 " + "l1=0.353" + "l2=0.741 f=-0.0657 shape=(1, 9000, 1)
logits [[ 0.80140615 -1.5909301   0.8063395  -0.27969995]]
Iteration 500 of 1000: loss=0.901 " + "l1=0.195" + "l2=0.706 f=-0.0485 shape=(1, 9000, 1)
logits [[ 0.63269913 -1.4936914   0.6331027   0.03383044]]
Iteration 600 of 1000: loss=0.756 " + "l1=0.0549" + "l2=0.701 f=-0.0372 shape=(1, 9000, 1)
logits [[ 0.47689775 -1.418007    0.4806147   0.3116731 ]]
Iteration 700 of 1000: loss=0.625 " + "l1=0.00102" + "l2=0.624 f=-0.0363 shape=(1, 9000, 1)
logits [[ 0.41073272 -1.3787155   0.41291505  0.40977427]]
Iteration 800 of 1000: loss=0.538 " + "l1=0.00471" + "l2=0.533 f=-0.0351 shape=(1, 9000, 1)
logits [[ 0.41520593 -1.3768452   0.4178782   0.40337393]]
Iteration 900 of 1000: loss=0.473 " + "l1=0.00126" + "l2=0.472 f=-0.0315 shape=(1, 9000, 1)
logits [[ 0.41121784 -1.3622129   0.41438597  0.41049847]]
--- 324.0814003944397 seconds ---
Adv result:3
Loading record A02081
(1, 10990)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.077 " + "l1=0.077" + "l2=0 f=-0.335 shape=(1, 9000, 1)
logits [[ 4.493913  -3.2055616  3.8415685 -6.468594 ]]
Iteration 100 of 1000: loss=0.0767 " + "l1=0.0765" + "l2=0.000251 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.4623647 -3.1832168  3.82421   -6.4399357]]
Iteration 200 of 1000: loss=0.0766 " + "l1=0.0764" + "l2=0.000225 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.4604692 -3.1803803  3.8226948 -6.438059 ]]
Iteration 300 of 1000: loss=0.0766 " + "l1=0.0763" + "l2=0.000262 f=-0.334 shape=(1, 9000, 1)
logits [[ 4.4561152 -3.1766458  3.8205774 -6.4340715]]
Iteration 400 of 1000: loss=0.0766 " + "l1=0.0762" + "l2=0.000322 f=-0.333 shape=(1, 9000, 1)
logits [[ 4.451317  -3.1729205  3.8186574 -6.429726 ]]
Iteration 500 of 1000: loss=0.0765 " + "l1=0.0762" + "l2=0.000379 f=-0.333 shape=(1, 9000, 1)
logits [[ 4.4464154 -3.1693394  3.8170273 -6.4253335]]
Iteration 600 of 1000: loss=0.0765 " + "l1=0.0761" + "l2=0.00044 f=-0.332 shape=(1, 9000, 1)
logits [[ 4.4414372 -3.16589    3.8156383 -6.4210443]]
Iteration 700 of 1000: loss=0.0765 " + "l1=0.076" + "l2=0.000547 f=-0.332 shape=(1, 9000, 1)
logits [[ 4.436333  -3.1624937  3.8144069 -6.416876 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.77 " + "l1=0.77" + "l2=0 f=-0.335 shape=(1, 9000, 1)
logits [[ 4.493913  -3.2055616  3.8415685 -6.468594 ]]
Iteration 100 of 1000: loss=0.737 " + "l1=0.716" + "l2=0.021 f=-0.326 shape=(1, 9000, 1)
logits [[ 4.214618  -2.9473653  3.6526527 -6.2231383]]
Iteration 200 of 1000: loss=0.713 " + "l1=0.679" + "l2=0.0341 f=-0.317 shape=(1, 9000, 1)
logits [[ 4.03927   -2.7486815  3.5224838 -6.0795293]]
Iteration 300 of 1000: loss=0.678 " + "l1=0.625" + "l2=0.0528 f=-0.309 shape=(1, 9000, 1)
logits [[ 3.7709439 -2.478946   3.3647857 -5.8933387]]
Iteration 400 of 1000: loss=0.654 " + "l1=0.593" + "l2=0.0607 f=-0.306 shape=(1, 9000, 1)
logits [[ 3.5953872 -2.3378365  3.286774  -5.76823  ]]
Iteration 500 of 1000: loss=0.634 " + "l1=0.565" + "l2=0.0693 f=-0.304 shape=(1, 9000, 1)
logits [[ 3.425515  -2.2195916  3.2260885 -5.6471763]]
Iteration 600 of 1000: loss=0.616 " + "l1=0.54" + "l2=0.0753 f=-0.303 shape=(1, 9000, 1)
logits [[ 3.2721336 -2.1296964  3.180383  -5.5348597]]
Iteration 700 of 1000: loss=0.6 " + "l1=0.52" + "l2=0.0795 f=-0.303 shape=(1, 9000, 1)
logits [[ 3.146228  -2.0556295  3.1452754 -5.4483476]]
Iteration 800 of 1000: loss=0.589 " + "l1=0.512" + "l2=0.0771 f=-0.3 shape=(1, 9000, 1)
logits [[ 3.1124785 -2.0013309  3.1142623 -5.425818 ]]
Iteration 900 of 1000: loss=0.58 " + "l1=0.505" + "l2=0.0747 f=-0.297 shape=(1, 9000, 1)
logits [[ 3.0890665 -1.9632599  3.0897517 -5.403939 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.7 " + "l1=7.7" + "l2=0 f=-0.335 shape=(1, 9000, 1)
logits [[ 4.493913  -3.2055616  3.8415685 -6.468594 ]]
Iteration 100 of 1000: loss=4.45 " + "l1=3.19" + "l2=1.26 f=-0.29 shape=(1, 9000, 1)
logits [[ 2.2247121 -0.9586769  2.2283165 -4.654635 ]]
Iteration 200 of 1000: loss=3.57 " + "l1=2.12" + "l2=1.45 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.6425527  -0.46504495  1.6592746  -4.006812  ]]
Iteration 300 of 1000: loss=2.98 " + "l1=1.41" + "l2=1.56 f=-0.28 shape=(1, 9000, 1)
logits [[ 1.1810234  -0.10344666  1.3092464  -3.5063403 ]]
Iteration 400 of 1000: loss=2.62 " + "l1=1.09" + "l2=1.54 f=-0.261 shape=(1, 9000, 1)
logits [[ 0.98818696  0.05203417  1.138074   -3.2208097 ]]
Iteration 500 of 1000: loss=2.41 " + "l1=0.922" + "l2=1.49 f=-0.269 shape=(1, 9000, 1)
logits [[ 0.8382487   0.11604638  1.0377237  -3.068948  ]]
Iteration 600 of 1000: loss=2.23 " + "l1=0.747" + "l2=1.48 f=-0.271 shape=(1, 9000, 1)
logits [[ 0.68440914  0.17894037  0.9261207  -2.875347  ]]
Iteration 700 of 1000: loss=2 " + "l1=0.498" + "l2=1.5 f=-0.253 shape=(1, 9000, 1)
logits [[ 0.48607478  0.26996928  0.76795655 -2.537641  ]]
Iteration 800 of 1000: loss=1.65 " + "l1=0.258" + "l2=1.39 f=-0.235 shape=(1, 9000, 1)
logits [[ 0.37016347  0.36909673  0.62753135 -2.305985  ]]
Iteration 900 of 1000: loss=1.34 " + "l1=0.0574" + "l2=1.29 f=-0.221 shape=(1, 9000, 1)
logits [[ 0.23611477  0.4364411   0.4938867  -2.0491123 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.23 " + "l1=4.23" + "l2=0 f=-0.335 shape=(1, 9000, 1)
logits [[ 4.493913  -3.2055616  3.8415685 -6.468594 ]]
Iteration 100 of 1000: loss=3.01 " + "l1=2.4" + "l2=0.611 f=-0.293 shape=(1, 9000, 1)
logits [[ 2.75468   -1.6048198  2.75105   -5.0730267]]
Iteration 200 of 1000: loss=2.52 " + "l1=1.88" + "l2=0.648 f=-0.286 shape=(1, 9000, 1)
logits [[ 2.331398  -1.0802526  2.3298242 -4.726287 ]]
Iteration 300 of 1000: loss=2.26 " + "l1=1.62" + "l2=0.636 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.1133335  -0.83772385  2.1150723  -4.468959  ]]
Iteration 400 of 1000: loss=2.07 " + "l1=1.38" + "l2=0.681 f=-0.256 shape=(1, 9000, 1)
logits [[ 1.8645775 -0.6435845  1.8743021 -4.1200366]]
Iteration 500 of 1000: loss=1.93 " + "l1=1.22" + "l2=0.707 f=-0.256 shape=(1, 9000, 1)
logits [[ 1.6622646 -0.529582   1.6926597 -3.8513348]]
Iteration 600 of 1000: loss=1.81 " + "l1=1.09" + "l2=0.722 f=-0.25 shape=(1, 9000, 1)
logits [[ 1.4672018  -0.43162316  1.5531563  -3.5879967 ]]
Iteration 700 of 1000: loss=1.65 " + "l1=0.886" + "l2=0.767 f=-0.252 shape=(1, 9000, 1)
logits [[ 1.1463567  -0.30037966  1.3096348  -3.1621182 ]]
Iteration 800 of 1000: loss=1.46 " + "l1=0.76" + "l2=0.702 f=-0.232 shape=(1, 9000, 1)
logits [[ 0.98297966 -0.24013232  1.1410806  -2.8130846 ]]
Iteration 900 of 1000: loss=1.26 " + "l1=0.554" + "l2=0.703 f=-0.217 shape=(1, 9000, 1)
logits [[ 0.70756227 -0.09883044  0.9087543  -2.3869796 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.97 " + "l1=5.97" + "l2=0 f=-0.335 shape=(1, 9000, 1)
logits [[ 4.493913  -3.2055616  3.8415685 -6.468594 ]]
Iteration 100 of 1000: loss=3.77 " + "l1=2.77" + "l2=0.993 f=-0.303 shape=(1, 9000, 1)
logits [[ 2.3990378 -1.1774049  2.4022386 -4.834726 ]]
Iteration 200 of 1000: loss=3.19 " + "l1=2.21" + "l2=0.979 f=-0.289 shape=(1, 9000, 1)
logits [[ 2.026558  -0.8098574  2.0365946 -4.40896  ]]
Iteration 300 of 1000: loss=2.74 " + "l1=1.59" + "l2=1.15 f=-0.286 shape=(1, 9000, 1)
logits [[ 1.5522573  -0.43811247  1.6075851  -3.8655894 ]]
Iteration 400 of 1000: loss=2.39 " + "l1=1.18" + "l2=1.2 f=-0.272 shape=(1, 9000, 1)
logits [[ 1.2312558  -0.18516105  1.3432453  -3.4763398 ]]
Iteration 500 of 1000: loss=2.15 " + "l1=1.01" + "l2=1.14 f=-0.27 shape=(1, 9000, 1)
logits [[ 1.0702403  -0.08552186  1.222714   -3.2854621 ]]
Iteration 600 of 1000: loss=1.98 " + "l1=0.89" + "l2=1.09 f=-0.264 shape=(1, 9000, 1)
logits [[ 0.93739057 -0.01941391  1.1286315  -3.1019042 ]]
Iteration 700 of 1000: loss=1.69 " + "l1=0.597" + "l2=1.1 f=-0.24 shape=(1, 9000, 1)
logits [[ 0.67497313  0.1122338   0.8825391  -2.6285427 ]]
Iteration 800 of 1000: loss=1.43 " + "l1=0.406" + "l2=1.02 f=-0.203 shape=(1, 9000, 1)
logits [[ 0.58267725  0.21890484  0.7432768  -2.3561525 ]]
Iteration 900 of 1000: loss=1.21 " + "l1=0.242" + "l2=0.973 f=-0.179 shape=(1, 9000, 1)
logits [[ 0.5026945   0.28478497  0.597296   -2.1016886 ]]
--- 309.506041765213 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00652 " + "l1=0.00652" + "l2=0 f=-0.335 shape=(1, 9000, 1)
logits [[ 4.493913  -3.2055616  3.8415685 -6.468594 ]]
Iteration 100 of 1000: loss=0.00637 " + "l1=0.0062" + "l2=0.000164 f=-0.336 shape=(1, 9000, 1)
logits [[ 4.47186   -3.2143102  3.8516319 -6.451717 ]]
Iteration 200 of 1000: loss=0.00632 " + "l1=0.00619" + "l2=0.000127 f=-0.336 shape=(1, 9000, 1)
logits [[ 4.4712205 -3.214372   3.8519428 -6.450982 ]]
Iteration 300 of 1000: loss=0.00631 " + "l1=0.00615" + "l2=0.000161 f=-0.336 shape=(1, 9000, 1)
logits [[ 4.4681315 -3.2150621  3.852928  -6.4484053]]
Iteration 400 of 1000: loss=0.00628 " + "l1=0.0061" + "l2=0.00018 f=-0.336 shape=(1, 9000, 1)
logits [[ 4.464427  -3.215683   3.8539634 -6.4453936]]
Iteration 500 of 1000: loss=0.00632 " + "l1=0.00606" + "l2=0.000264 f=-0.336 shape=(1, 9000, 1)
logits [[ 4.4606023 -3.216118   3.854925  -6.4423547]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0652 " + "l1=0.0652" + "l2=0 f=-0.335 shape=(1, 9000, 1)
logits [[ 4.493913  -3.2055616  3.8415685 -6.468594 ]]
Iteration 100 of 1000: loss=0.0517 " + "l1=0.0443" + "l2=0.00734 f=-0.342 shape=(1, 9000, 1)
logits [[ 4.3459044 -3.2615602  3.9026873 -6.353621 ]]
Iteration 200 of 1000: loss=0.047 " + "l1=0.0374" + "l2=0.00959 f=-0.342 shape=(1, 9000, 1)
logits [[ 4.2957253 -3.2759466  3.9214218 -6.3101726]]
Iteration 300 of 1000: loss=0.0424 " + "l1=0.031" + "l2=0.0114 f=-0.342 shape=(1, 9000, 1)
logits [[ 4.2449174 -3.2838583  3.9352539 -6.263824 ]]
Iteration 400 of 1000: loss=0.0373 " + "l1=0.0237" + "l2=0.0136 f=-0.342 shape=(1, 9000, 1)
logits [[ 4.1893997 -3.2934635  3.952371  -6.2147713]]
Iteration 500 of 1000: loss=0.0324 " + "l1=0.017" + "l2=0.0153 f=-0.34 shape=(1, 9000, 1)
logits [[ 4.134821  -3.2964973  3.9643836 -6.1640086]]
Iteration 600 of 1000: loss=0.028 " + "l1=0.0106" + "l2=0.0174 f=-0.34 shape=(1, 9000, 1)
logits [[ 4.0788054 -3.299509   3.9728978 -6.1127095]]
Iteration 700 of 1000: loss=0.024 " + "l1=0.0047" + "l2=0.0193 f=-0.34 shape=(1, 9000, 1)
logits [[ 4.0253763 -3.2993724  3.978331  -6.063724 ]]
Iteration 800 of 1000: loss=0.0205 " + "l1=0.000251" + "l2=0.0203 f=-0.339 shape=(1, 9000, 1)
logits [[ 3.980969  -3.292868   3.9784548 -6.021852 ]]
Iteration 900 of 1000: loss=0.0178 " + "l1=0" + "l2=0.0178 f=-0.337 shape=(1, 9000, 1)
logits [[ 3.9685383 -3.2754664  3.9689498 -6.0095267]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0359 " + "l1=0.0359" + "l2=0 f=-0.335 shape=(1, 9000, 1)
logits [[ 4.493913  -3.2055616  3.8415685 -6.468594 ]]
Iteration 100 of 1000: loss=0.0316 " + "l1=0.0291" + "l2=0.00248 f=-0.339 shape=(1, 9000, 1)
logits [[ 4.4079647 -3.2398334  3.8789442 -6.402276 ]]
Iteration 200 of 1000: loss=0.0302 " + "l1=0.0272" + "l2=0.00301 f=-0.339 shape=(1, 9000, 1)
logits [[ 4.3834314 -3.2481096  3.8885424 -6.3812647]]
Iteration 300 of 1000: loss=0.029 " + "l1=0.0255" + "l2=0.00352 f=-0.34 shape=(1, 9000, 1)
logits [[ 4.3593183 -3.2528946  3.8961003 -6.3609533]]
Iteration 400 of 1000: loss=0.0278 " + "l1=0.0237" + "l2=0.00408 f=-0.34 shape=(1, 9000, 1)
logits [[ 4.334077  -3.2554598  3.9024742 -6.340248 ]]
Iteration 500 of 1000: loss=0.0265 " + "l1=0.022" + "l2=0.00447 f=-0.34 shape=(1, 9000, 1)
logits [[ 4.30854   -3.2569232  3.9082954 -6.3194537]]
Iteration 600 of 1000: loss=0.0252 " + "l1=0.0202" + "l2=0.005 f=-0.34 shape=(1, 9000, 1)
logits [[ 4.282211  -3.259166   3.9143634 -6.2966914]]
Iteration 700 of 1000: loss=0.024 " + "l1=0.0184" + "l2=0.00559 f=-0.34 shape=(1, 9000, 1)
logits [[ 4.2547054 -3.260949   3.91979   -6.272391 ]]
Iteration 800 of 1000: loss=0.0226 " + "l1=0.0165" + "l2=0.00615 f=-0.34 shape=(1, 9000, 1)
logits [[ 4.2267447 -3.2618752  3.9268687 -6.250882 ]]
Iteration 900 of 1000: loss=0.0216 " + "l1=0.0149" + "l2=0.00674 f=-0.34 shape=(1, 9000, 1)
logits [[ 4.2017913 -3.2603836  3.9312918 -6.2307115]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0506 " + "l1=0.0506" + "l2=0 f=-0.335 shape=(1, 9000, 1)
logits [[ 4.493913  -3.2055616  3.8415685 -6.468594 ]]
Iteration 100 of 1000: loss=0.0422 " + "l1=0.0377" + "l2=0.00454 f=-0.34 shape=(1, 9000, 1)
logits [[ 4.3772054 -3.2507782  3.8910317 -6.378488 ]]
Iteration 200 of 1000: loss=0.0395 " + "l1=0.0338" + "l2=0.00575 f=-0.341 shape=(1, 9000, 1)
logits [[ 4.3404093 -3.2622385  3.9046447 -6.346435 ]]
Iteration 300 of 1000: loss=0.0369 " + "l1=0.03" + "l2=0.00685 f=-0.341 shape=(1, 9000, 1)
logits [[ 4.3034453 -3.2687604  3.9158566 -6.314828 ]]
Iteration 400 of 1000: loss=0.0341 " + "l1=0.0263" + "l2=0.00781 f=-0.341 shape=(1, 9000, 1)
logits [[ 4.2650156 -3.2730422  3.9251993 -6.280581 ]]
Iteration 500 of 1000: loss=0.0313 " + "l1=0.0222" + "l2=0.00909 f=-0.341 shape=(1, 9000, 1)
logits [[ 4.224256  -3.2797694  3.9380305 -6.246098 ]]
Iteration 600 of 1000: loss=0.0284 " + "l1=0.0183" + "l2=0.0101 f=-0.34 shape=(1, 9000, 1)
logits [[ 4.183464  -3.2825835  3.9474735 -6.208758 ]]
Iteration 700 of 1000: loss=0.026 " + "l1=0.0148" + "l2=0.0112 f=-0.34 shape=(1, 9000, 1)
logits [[ 4.1449842 -3.2815924  3.954088  -6.175488 ]]
Iteration 800 of 1000: loss=0.0238 " + "l1=0.0116" + "l2=0.0122 f=-0.339 shape=(1, 9000, 1)
logits [[ 4.107943  -3.2798011  3.9584126 -6.143222 ]]
Iteration 900 of 1000: loss=0.0218 " + "l1=0.00872" + "l2=0.0131 f=-0.339 shape=(1, 9000, 1)
logits [[ 4.0729427 -3.276791   3.9604578 -6.1122727]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0579 " + "l1=0.0579" + "l2=0 f=-0.335 shape=(1, 9000, 1)
logits [[ 4.493913  -3.2055616  3.8415685 -6.468594 ]]
Iteration 100 of 1000: loss=0.0471 " + "l1=0.0413" + "l2=0.00585 f=-0.341 shape=(1, 9000, 1)
logits [[ 4.3615994 -3.2562416  3.896805  -6.366427 ]]
Iteration 200 of 1000: loss=0.0435 " + "l1=0.036" + "l2=0.00752 f=-0.342 shape=(1, 9000, 1)
logits [[ 4.318404  -3.2692485  3.9128442 -6.3285904]]
Iteration 300 of 1000: loss=0.0399 " + "l1=0.031" + "l2=0.00891 f=-0.342 shape=(1, 9000, 1)
logits [[ 4.275202  -3.2771697  3.9258573 -6.2905993]]
Iteration 400 of 1000: loss=0.0361 " + "l1=0.0255" + "l2=0.0106 f=-0.341 shape=(1, 9000, 1)
logits [[ 4.2285047 -3.2850852  3.9408844 -6.250075 ]]
Iteration 500 of 1000: loss=0.0323 " + "l1=0.0203" + "l2=0.0119 f=-0.341 shape=(1, 9000, 1)
logits [[ 4.1806493 -3.2888176  3.9514    -6.2062035]]
Iteration 600 of 1000: loss=0.0288 " + "l1=0.0153" + "l2=0.0135 f=-0.34 shape=(1, 9000, 1)
logits [[ 4.1333675 -3.2899437  3.961073  -6.164165 ]]
Iteration 700 of 1000: loss=0.0256 " + "l1=0.0107" + "l2=0.0149 f=-0.339 shape=(1, 9000, 1)
logits [[ 4.0877304 -3.290293   3.967445  -6.122286 ]]
Iteration 800 of 1000: loss=0.0228 " + "l1=0.00648" + "l2=0.0163 f=-0.34 shape=(1, 9000, 1)
logits [[ 4.0439777 -3.290463   3.970987  -6.0828633]]
Iteration 900 of 1000: loss=0.0201 " + "l1=0.00256" + "l2=0.0175 f=-0.339 shape=(1, 9000, 1)
logits [[ 4.0008698 -3.284152   3.9720337 -6.044109 ]]
--- 300.7384262084961 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.11 " + "l1=0.11" + "l2=0 f=-0.335 shape=(1, 9000, 1)
logits [[ 4.493913  -3.2055616  3.8415685 -6.468594 ]]
Iteration 100 of 1000: loss=0.109 " + "l1=0.109" + "l2=0.000458 f=-0.333 shape=(1, 9000, 1)
logits [[ 4.446738  -3.1989734  3.827624  -6.4083886]]
Iteration 200 of 1000: loss=0.109 " + "l1=0.108" + "l2=0.000454 f=-0.333 shape=(1, 9000, 1)
logits [[ 4.44073   -3.1977253  3.8262882 -6.401023 ]]
Iteration 300 of 1000: loss=0.109 " + "l1=0.108" + "l2=0.000511 f=-0.332 shape=(1, 9000, 1)
logits [[ 4.4321446 -3.1962998  3.8245227 -6.3899865]]
Iteration 400 of 1000: loss=0.109 " + "l1=0.108" + "l2=0.000613 f=-0.332 shape=(1, 9000, 1)
logits [[ 4.423112  -3.1948912  3.8228793 -6.3783073]]
Iteration 500 of 1000: loss=0.109 " + "l1=0.108" + "l2=0.000718 f=-0.331 shape=(1, 9000, 1)
logits [[ 4.413907  -3.1934874  3.8214843 -6.3665867]]
Iteration 600 of 1000: loss=0.108 " + "l1=0.108" + "l2=0.00085 f=-0.331 shape=(1, 9000, 1)
logits [[ 4.4050927 -3.1919036  3.8200772 -6.35541  ]]
Iteration 700 of 1000: loss=0.108 " + "l1=0.107" + "l2=0.000999 f=-0.33 shape=(1, 9000, 1)
logits [[ 4.396633  -3.1902294  3.81881   -6.3447647]]
Iteration 800 of 1000: loss=0.108 " + "l1=0.107" + "l2=0.00112 f=-0.329 shape=(1, 9000, 1)
logits [[ 4.3883424 -3.188457   3.8176687 -6.334455 ]]
Iteration 900 of 1000: loss=0.108 " + "l1=0.107" + "l2=0.00133 f=-0.329 shape=(1, 9000, 1)
logits [[ 4.380491  -3.1867385  3.8167326 -6.324783 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.1 " + "l1=1.1" + "l2=0 f=-0.335 shape=(1, 9000, 1)
logits [[ 4.493913  -3.2055616  3.8415685 -6.468594 ]]
Iteration 100 of 1000: loss=1.04 " + "l1=1.01" + "l2=0.0321 f=-0.319 shape=(1, 9000, 1)
logits [[ 4.101457  -3.1311312  3.7146988 -5.9614415]]
Iteration 200 of 1000: loss=1.01 " + "l1=0.959" + "l2=0.0502 f=-0.306 shape=(1, 9000, 1)
logits [[ 3.8938205 -3.0619462  3.640971  -5.6960835]]
Iteration 300 of 1000: loss=0.971 " + "l1=0.902" + "l2=0.0687 f=-0.283 shape=(1, 9000, 1)
logits [[ 3.6294193 -2.912012   3.5436256 -5.394079 ]]
Iteration 400 of 1000: loss=0.932 " + "l1=0.855" + "l2=0.0771 f=-0.265 shape=(1, 9000, 1)
logits [[ 3.3960133 -2.7012422  3.3967462 -5.1505246]]
Iteration 500 of 1000: loss=0.91 " + "l1=0.831" + "l2=0.079 f=-0.253 shape=(1, 9000, 1)
logits [[ 3.293751  -2.5826359  3.295188  -5.0181427]]
Iteration 600 of 1000: loss=0.897 " + "l1=0.816" + "l2=0.0807 f=-0.244 shape=(1, 9000, 1)
logits [[ 3.2380316 -2.5308554  3.2397068 -4.9246283]]
Iteration 700 of 1000: loss=0.884 " + "l1=0.8" + "l2=0.0836 f=-0.236 shape=(1, 9000, 1)
logits [[ 3.171501  -2.4928734  3.1902366 -4.8135448]]
Iteration 800 of 1000: loss=0.872 " + "l1=0.785" + "l2=0.0875 f=-0.231 shape=(1, 9000, 1)
logits [[ 3.0884912 -2.472569   3.1527023 -4.693567 ]]
Iteration 900 of 1000: loss=0.861 " + "l1=0.769" + "l2=0.0914 f=-0.227 shape=(1, 9000, 1)
logits [[ 3.0060308 -2.461714   3.121099  -4.5720024]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11 " + "l1=11" + "l2=0 f=-0.335 shape=(1, 9000, 1)
logits [[ 4.493913  -3.2055616  3.8415685 -6.468594 ]]
Iteration 100 of 1000: loss=6.02 " + "l1=3.4" + "l2=2.62 f=-0.136 shape=(1, 9000, 1)
logits [[ 1.1190315 -1.8297992  1.7837932 -1.6157355]]
Iteration 200 of 1000: loss=3.18 " + "l1=0.0305" + "l2=3.15 f=-0.0922 shape=(1, 9000, 1)
logits [[-0.3851978  -1.3782165   0.71256185  0.6821049 ]]
Iteration 300 of 1000: loss=2.41 " + "l1=0.0135" + "l2=2.39 f=-0.101 shape=(1, 9000, 1)
logits [[-0.38268384 -1.4348701   0.71392554  0.7004208 ]]
Iteration 400 of 1000: loss=2.07 " + "l1=0" + "l2=2.07 f=-0.0995 shape=(1, 9000, 1)
logits [[-0.37440133 -1.4695109   0.7144333   0.7313258 ]]
Iteration 500 of 1000: loss=1.87 " + "l1=0" + "l2=1.87 f=-0.0992 shape=(1, 9000, 1)
logits [[-0.37090865 -1.49916     0.7281942   0.7452667 ]]
Iteration 600 of 1000: loss=1.73 " + "l1=0" + "l2=1.73 f=-0.0966 shape=(1, 9000, 1)
logits [[-0.3617021  -1.5335977   0.7346302   0.77408004]]
Iteration 700 of 1000: loss=1.59 " + "l1=0" + "l2=1.59 f=-0.0949 shape=(1, 9000, 1)
logits [[-0.32552752 -1.580641    0.7617584   0.7650059 ]]
Iteration 800 of 1000: loss=1.5 " + "l1=0" + "l2=1.5 f=-0.0979 shape=(1, 9000, 1)
logits [[-0.31819004 -1.6154543   0.75850946  0.78341055]]
Iteration 900 of 1000: loss=1.42 " + "l1=0.0103" + "l2=1.41 f=-0.0984 shape=(1, 9000, 1)
logits [[-0.29868135 -1.647298    0.78127307  0.7710206 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.03 " + "l1=6.03" + "l2=0 f=-0.335 shape=(1, 9000, 1)
logits [[ 4.493913  -3.2055616  3.8415685 -6.468594 ]]
Iteration 100 of 1000: loss=4.38 " + "l1=3.6" + "l2=0.775 f=-0.19 shape=(1, 9000, 1)
logits [[ 2.6273909 -2.3108597  2.7340512 -3.812024 ]]
Iteration 200 of 1000: loss=3.48 " + "l1=2.11" + "l2=1.37 f=-0.141 shape=(1, 9000, 1)
logits [[ 1.2918533 -1.7651898  1.8738877 -1.9652032]]
Iteration 300 of 1000: loss=2.52 " + "l1=0.625" + "l2=1.89 f=-0.0812 shape=(1, 9000, 1)
logits [[ 0.13607436 -1.507451    1.091579   -0.04500329]]
Iteration 400 of 1000: loss=1.94 " + "l1=0.0329" + "l2=1.91 f=-0.0792 shape=(1, 9000, 1)
logits [[-0.29498744 -1.408551    0.72322094  0.66343045]]
Iteration 500 of 1000: loss=1.6 " + "l1=0.0178" + "l2=1.58 f=-0.0778 shape=(1, 9000, 1)
logits [[-0.29700834 -1.455932    0.7371399   0.70475173]]
Iteration 600 of 1000: loss=1.37 " + "l1=0.00835" + "l2=1.36 f=-0.0832 shape=(1, 9000, 1)
logits [[-0.26130313 -1.5019305   0.7227697   0.70758325]]
Iteration 700 of 1000: loss=1.22 " + "l1=0" + "l2=1.22 f=-0.0854 shape=(1, 9000, 1)
logits [[-0.24888623 -1.5503625   0.7193005   0.738209  ]]
Iteration 800 of 1000: loss=1.08 " + "l1=0.00135" + "l2=1.08 f=-0.0882 shape=(1, 9000, 1)
logits [[-0.23179725 -1.5786816   0.73009354  0.72764385]]
Iteration 900 of 1000: loss=0.971 " + "l1=0.000304" + "l2=0.971 f=-0.086 shape=(1, 9000, 1)
logits [[-0.23106456 -1.5829394   0.735258    0.73470443]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.56 " + "l1=3.56" + "l2=0 f=-0.335 shape=(1, 9000, 1)
logits [[ 4.493913  -3.2055616  3.8415685 -6.468594 ]]
Iteration 100 of 1000: loss=2.91 " + "l1=2.6" + "l2=0.31 f=-0.252 shape=(1, 9000, 1)
logits [[ 3.2405846 -2.7359545  3.2433536 -4.7544694]]
Iteration 200 of 1000: loss=2.62 " + "l1=2.2" + "l2=0.416 f=-0.2 shape=(1, 9000, 1)
logits [[ 2.6904562 -2.2776859  2.7803662 -3.9931548]]
Iteration 300 of 1000: loss=2.39 " + "l1=1.85" + "l2=0.538 f=-0.164 shape=(1, 9000, 1)
logits [[ 2.2216544 -2.0169656  2.417427  -3.2782874]]
Iteration 400 of 1000: loss=2.16 " + "l1=1.46" + "l2=0.697 f=-0.142 shape=(1, 9000, 1)
logits [[ 1.6254282 -1.8483924  2.077323  -2.42235  ]]
Iteration 500 of 1000: loss=1.88 " + "l1=1.01" + "l2=0.864 f=-0.104 shape=(1, 9000, 1)
logits [[ 1.0043136 -1.6519662  1.6777512 -1.4447662]]
Iteration 600 of 1000: loss=1.56 " + "l1=0.579" + "l2=0.982 f=-0.0662 shape=(1, 9000, 1)
logits [[ 0.5184789 -1.5744609  1.2856301 -0.4944803]]
Iteration 700 of 1000: loss=1.29 " + "l1=0.289" + "l2=1 f=-0.0599 shape=(1, 9000, 1)
logits [[ 0.20030695 -1.5559522   1.002419    0.11380949]]
Iteration 800 of 1000: loss=1.09 " + "l1=0.0863" + "l2=1.01 f=-0.0454 shape=(1, 9000, 1)
logits [[-0.08760206 -1.5363865   0.8538485   0.5883631 ]]
Iteration 900 of 1000: loss=0.911 " + "l1=0.00205" + "l2=0.909 f=-0.0475 shape=(1, 9000, 1)
logits [[-0.22709271 -1.5920417   0.81770384  0.8113968 ]]
--- 322.344429731369 seconds ---
Adv result:3
Loading record A02102
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0424 " + "l1=0.0424" + "l2=0 f=-0.545 shape=(1, 9000, 1)
logits [[ 2.3740315 -1.869561   1.8688397 -4.552328 ]]
Iteration 100 of 1000: loss=0.042 " + "l1=0.0417" + "l2=0.000309 f=-0.542 shape=(1, 9000, 1)
logits [[ 2.3404121 -1.831156   1.8411537 -4.5177374]]
Iteration 200 of 1000: loss=0.0419 " + "l1=0.0416" + "l2=0.000314 f=-0.541 shape=(1, 9000, 1)
logits [[ 2.3351717 -1.8256719  1.8366866 -4.511646 ]]
Iteration 300 of 1000: loss=0.0418 " + "l1=0.0415" + "l2=0.000355 f=-0.541 shape=(1, 9000, 1)
logits [[ 2.3288112 -1.8194592  1.8315854 -4.504261 ]]
Iteration 400 of 1000: loss=0.0418 " + "l1=0.0414" + "l2=0.000434 f=-0.54 shape=(1, 9000, 1)
logits [[ 2.3224735 -1.8131489  1.8262233 -4.4967055]]
Iteration 500 of 1000: loss=0.0417 " + "l1=0.0412" + "l2=0.000488 f=-0.54 shape=(1, 9000, 1)
logits [[ 2.3162704 -1.8074801  1.8212041 -4.489105 ]]
Iteration 600 of 1000: loss=0.0417 " + "l1=0.0411" + "l2=0.000578 f=-0.539 shape=(1, 9000, 1)
logits [[ 2.3102417 -1.8023928  1.8165331 -4.481593 ]]
Iteration 700 of 1000: loss=0.0417 " + "l1=0.041" + "l2=0.000691 f=-0.539 shape=(1, 9000, 1)
logits [[ 2.3042939 -1.797214   1.8117998 -4.474248 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.424 " + "l1=0.424" + "l2=0 f=-0.545 shape=(1, 9000, 1)
logits [[ 2.3740315 -1.869561   1.8688397 -4.552328 ]]
Iteration 100 of 1000: loss=0.387 " + "l1=0.365" + "l2=0.0221 f=-0.525 shape=(1, 9000, 1)
logits [[ 2.102249  -1.5507787  1.6337568 -4.283927 ]]
Iteration 200 of 1000: loss=0.375 " + "l1=0.346" + "l2=0.0293 f=-0.521 shape=(1, 9000, 1)
logits [[ 2.0032144 -1.4522122  1.5554365 -4.1921654]]
Iteration 300 of 1000: loss=0.363 " + "l1=0.325" + "l2=0.0377 f=-0.519 shape=(1, 9000, 1)
logits [[ 1.90014   -1.3519342  1.4733433 -4.098025 ]]
Iteration 400 of 1000: loss=0.349 " + "l1=0.297" + "l2=0.0522 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.7633784 -1.209519   1.3695093 -3.9940526]]
Iteration 500 of 1000: loss=0.334 " + "l1=0.267" + "l2=0.0667 f=-0.523 shape=(1, 9000, 1)
logits [[ 1.6176047 -1.0517936  1.2606685 -3.9189482]]
Iteration 600 of 1000: loss=0.318 " + "l1=0.25" + "l2=0.0679 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.5288277 -0.9683133  1.1825969 -3.8143845]]
Iteration 700 of 1000: loss=0.303 " + "l1=0.226" + "l2=0.0766 f=-0.517 shape=(1, 9000, 1)
logits [[ 1.4078245 -0.8560657  1.097707  -3.7175174]]
Iteration 800 of 1000: loss=0.292 " + "l1=0.212" + "l2=0.0795 f=-0.511 shape=(1, 9000, 1)
logits [[ 1.329561  -0.7941604  1.0391718 -3.619378 ]]
Iteration 900 of 1000: loss=0.278 " + "l1=0.193" + "l2=0.0852 f=-0.51 shape=(1, 9000, 1)
logits [[ 1.2206991 -0.7091643  0.9744633 -3.5263731]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.24 " + "l1=4.24" + "l2=0 f=-0.545 shape=(1, 9000, 1)
logits [[ 2.3740315 -1.869561   1.8688397 -4.552328 ]]
Iteration 100 of 1000: loss=0.88 " + "l1=0.000964" + "l2=0.879 f=-0.576 shape=(1, 9000, 1)
logits [[ 0.42273566  0.42207846  0.42304277 -3.5716143 ]]
Iteration 200 of 1000: loss=0.651 " + "l1=0" + "l2=0.651 f=-0.573 shape=(1, 9000, 1)
logits [[ 0.41761765  0.46769917  0.4463654  -3.623313  ]]
Iteration 300 of 1000: loss=0.543 " + "l1=0" + "l2=0.543 f=-0.558 shape=(1, 9000, 1)
logits [[ 0.41394374  0.4586931   0.42083338 -3.5240738 ]]
Iteration 400 of 1000: loss=0.467 " + "l1=0.0087" + "l2=0.459 f=-0.543 shape=(1, 9000, 1)
logits [[ 0.41492155  0.40621987  0.40713826 -3.3995547 ]]
Iteration 500 of 1000: loss=0.418 " + "l1=0" + "l2=0.418 f=-0.536 shape=(1, 9000, 1)
logits [[ 0.38363358  0.40389568  0.3874039  -3.3170218 ]]
Iteration 600 of 1000: loss=0.384 " + "l1=0" + "l2=0.384 f=-0.526 shape=(1, 9000, 1)
logits [[ 0.36836037  0.38952792  0.37600163 -3.2374284 ]]
Iteration 700 of 1000: loss=0.362 " + "l1=0" + "l2=0.362 f=-0.52 shape=(1, 9000, 1)
logits [[ 0.34267232  0.38225076  0.36247358 -3.1690109 ]]
Iteration 800 of 1000: loss=0.344 " + "l1=0" + "l2=0.344 f=-0.512 shape=(1, 9000, 1)
logits [[ 0.36148325  0.37057883  0.3487345  -3.1282156 ]]
Iteration 900 of 1000: loss=0.329 " + "l1=0.00203" + "l2=0.327 f=-0.506 shape=(1, 9000, 1)
logits [[ 0.34999213  0.35071254  0.3527408  -3.0769181 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.33 " + "l1=2.33" + "l2=0 f=-0.545 shape=(1, 9000, 1)
logits [[ 2.3740315 -1.869561   1.8688397 -4.552328 ]]
Iteration 100 of 1000: loss=1.04 " + "l1=0.373" + "l2=0.665 f=-0.543 shape=(1, 9000, 1)
logits [[ 0.62359154 -0.05368903  0.61620724 -3.3573823 ]]
Iteration 200 of 1000: loss=0.574 " + "l1=0" + "l2=0.574 f=-0.568 shape=(1, 9000, 1)
logits [[ 0.43562227  0.43953958  0.43925688 -3.585784  ]]
Iteration 300 of 1000: loss=0.46 " + "l1=0.00375" + "l2=0.457 f=-0.557 shape=(1, 9000, 1)
logits [[ 0.42732745  0.42051697  0.41439945 -3.4920762 ]]
Iteration 400 of 1000: loss=0.397 " + "l1=0" + "l2=0.397 f=-0.547 shape=(1, 9000, 1)
logits [[ 0.38481984  0.4056649   0.39897627 -3.378419  ]]
Iteration 500 of 1000: loss=0.364 " + "l1=0" + "l2=0.364 f=-0.537 shape=(1, 9000, 1)
logits [[ 0.37275368  0.40277722  0.37448865 -3.2967055 ]]
Iteration 600 of 1000: loss=0.337 " + "l1=0" + "l2=0.337 f=-0.528 shape=(1, 9000, 1)
logits [[ 0.35930732  0.3800119   0.36854067 -3.2209609 ]]
Iteration 700 of 1000: loss=0.322 " + "l1=0.00591" + "l2=0.316 f=-0.521 shape=(1, 9000, 1)
logits [[ 0.34253594  0.35590217  0.36665285 -3.149047  ]]
Iteration 800 of 1000: loss=0.302 " + "l1=0" + "l2=0.302 f=-0.514 shape=(1, 9000, 1)
logits [[ 0.3462516  0.3465451  0.3439279 -3.0923011]]
Iteration 900 of 1000: loss=0.293 " + "l1=0" + "l2=0.293 f=-0.511 shape=(1, 9000, 1)
logits [[ 0.3129734   0.35146773  0.3284282  -3.0373337 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.38 " + "l1=1.38" + "l2=0 f=-0.545 shape=(1, 9000, 1)
logits [[ 2.3740315 -1.869561   1.8688397 -4.552328 ]]
Iteration 100 of 1000: loss=0.89 " + "l1=0.616" + "l2=0.274 f=-0.543 shape=(1, 9000, 1)
logits [[ 1.2769375  -0.61944777  1.0718732  -3.902046  ]]
Iteration 200 of 1000: loss=0.704 " + "l1=0.343" + "l2=0.361 f=-0.528 shape=(1, 9000, 1)
logits [[ 0.81892097 -0.23495756  0.74570686 -3.4418042 ]]
Iteration 300 of 1000: loss=0.55 " + "l1=0.157" + "l2=0.393 f=-0.519 shape=(1, 9000, 1)
logits [[ 0.5510434   0.0689487   0.52526647 -3.2195425 ]]
Iteration 400 of 1000: loss=0.396 " + "l1=0.00373" + "l2=0.392 f=-0.532 shape=(1, 9000, 1)
logits [[ 0.3743906   0.38928896  0.40078    -3.2918677 ]]
Iteration 500 of 1000: loss=0.345 " + "l1=0.00201" + "l2=0.343 f=-0.522 shape=(1, 9000, 1)
logits [[ 0.38289276  0.37670776  0.38168648 -3.2285879 ]]
Iteration 600 of 1000: loss=0.316 " + "l1=0.000789" + "l2=0.315 f=-0.512 shape=(1, 9000, 1)
logits [[ 0.3607243   0.35882524  0.36125317 -3.1287816 ]]
Iteration 700 of 1000: loss=0.294 " + "l1=0.00242" + "l2=0.291 f=-0.506 shape=(1, 9000, 1)
logits [[ 0.3423322   0.34088582  0.3483329  -3.0551813 ]]
Iteration 800 of 1000: loss=0.281 " + "l1=0" + "l2=0.281 f=-0.502 shape=(1, 9000, 1)
logits [[ 0.3278139   0.33835083  0.3339946  -3.009407  ]]
Iteration 900 of 1000: loss=0.272 " + "l1=0.00507" + "l2=0.267 f=-0.498 shape=(1, 9000, 1)
logits [[ 0.33567026  0.32005724  0.33463824 -2.981946  ]]
--- 311.1410901546478 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00505 " + "l1=0.00505" + "l2=0 f=-0.545 shape=(1, 9000, 1)
logits [[ 2.3740315 -1.869561   1.8688397 -4.552328 ]]
Iteration 100 of 1000: loss=0.00483 " + "l1=0.00465" + "l2=0.000179 f=-0.547 shape=(1, 9000, 1)
logits [[ 2.350144  -1.8873118  1.8854982 -4.535773 ]]
Iteration 200 of 1000: loss=0.00476 " + "l1=0.00459" + "l2=0.000175 f=-0.547 shape=(1, 9000, 1)
logits [[ 2.346637  -1.889342   1.8879616 -4.53445  ]]
Iteration 300 of 1000: loss=0.0047 " + "l1=0.0045" + "l2=0.000197 f=-0.548 shape=(1, 9000, 1)
logits [[ 2.3419952 -1.8926297  1.8917888 -4.5328155]]
Iteration 400 of 1000: loss=0.00467 " + "l1=0.00441" + "l2=0.000261 f=-0.549 shape=(1, 9000, 1)
logits [[ 2.3372638 -1.8961507  1.8959862 -4.5315146]]
Iteration 500 of 1000: loss=0.00463 " + "l1=0.00432" + "l2=0.000313 f=-0.549 shape=(1, 9000, 1)
logits [[ 2.332472  -1.8999043  1.9004366 -4.5303903]]
Iteration 600 of 1000: loss=0.00466 " + "l1=0.00423" + "l2=0.000429 f=-0.55 shape=(1, 9000, 1)
logits [[ 2.3278189 -1.903444   1.9048895 -4.5296755]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0505 " + "l1=0.0505" + "l2=0 f=-0.545 shape=(1, 9000, 1)
logits [[ 2.3740315 -1.869561   1.8688397 -4.552328 ]]
Iteration 100 of 1000: loss=0.0308 " + "l1=0.0201" + "l2=0.0106 f=-0.559 shape=(1, 9000, 1)
logits [[ 2.2048266 -2.0136023  2.003376  -4.429188 ]]
Iteration 200 of 1000: loss=0.0224 " + "l1=0.00853" + "l2=0.0138 f=-0.563 shape=(1, 9000, 1)
logits [[ 2.14112   -2.0677097  2.055798  -4.37928  ]]
Iteration 300 of 1000: loss=0.0154 " + "l1=0.000361" + "l2=0.015 f=-0.565 shape=(1, 9000, 1)
logits [[ 2.094004  -2.1031086  2.0903976 -4.3431425]]
Iteration 400 of 1000: loss=0.0116 " + "l1=0.000392" + "l2=0.0113 f=-0.567 shape=(1, 9000, 1)
logits [[ 2.0940046 -2.0983915  2.0900824 -4.3545465]]
Iteration 500 of 1000: loss=0.00991 " + "l1=0" + "l2=0.00991 f=-0.57 shape=(1, 9000, 1)
logits [[ 2.0914078 -2.0995212  2.0937374 -4.3640194]]
Iteration 600 of 1000: loss=0.0084 " + "l1=1.19e-05" + "l2=0.00838 f=-0.572 shape=(1, 9000, 1)
logits [[ 2.093626  -2.0967827  2.0935066 -4.3768787]]
Iteration 700 of 1000: loss=0.00782 " + "l1=0.000283" + "l2=0.00754 f=-0.573 shape=(1, 9000, 1)
logits [[ 2.0957868 -2.0928314  2.0929523 -4.3887696]]
Iteration 800 of 1000: loss=0.00715 " + "l1=1.15e-05" + "l2=0.00714 f=-0.574 shape=(1, 9000, 1)
logits [[ 2.0958738 -2.0918648  2.095759  -4.3977246]]
Iteration 900 of 1000: loss=0.00667 " + "l1=8.23e-05" + "l2=0.00659 f=-0.575 shape=(1, 9000, 1)
logits [[ 2.0968754 -2.0900874  2.0960522 -4.404514 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0278 " + "l1=0.0278" + "l2=0 f=-0.545 shape=(1, 9000, 1)
logits [[ 2.3740315 -1.869561   1.8688397 -4.552328 ]]
Iteration 100 of 1000: loss=0.0216 " + "l1=0.0183" + "l2=0.00334 f=-0.554 shape=(1, 9000, 1)
logits [[ 2.2749417 -1.9486597  1.9430099 -4.4869533]]
Iteration 200 of 1000: loss=0.0192 " + "l1=0.015" + "l2=0.00422 f=-0.557 shape=(1, 9000, 1)
logits [[ 2.2417405 -1.9733903  1.9687796 -4.465108 ]]
Iteration 300 of 1000: loss=0.0169 " + "l1=0.0118" + "l2=0.00511 f=-0.56 shape=(1, 9000, 1)
logits [[ 2.2094557 -1.998015   1.9946501 -4.4442325]]
Iteration 400 of 1000: loss=0.0148 " + "l1=0.00892" + "l2=0.00585 f=-0.562 shape=(1, 9000, 1)
logits [[ 2.1810381 -2.021774   2.0189197 -4.4257555]]
Iteration 500 of 1000: loss=0.0129 " + "l1=0.00627" + "l2=0.0066 f=-0.564 shape=(1, 9000, 1)
logits [[ 2.1552699 -2.043331   2.041226  -4.41062  ]]
Iteration 600 of 1000: loss=0.0112 " + "l1=0.00393" + "l2=0.00728 f=-0.567 shape=(1, 9000, 1)
logits [[ 2.1327052 -2.0638943  2.0613236 -4.399199 ]]
Iteration 700 of 1000: loss=0.00964 " + "l1=0.0016" + "l2=0.00804 f=-0.57 shape=(1, 9000, 1)
logits [[ 2.108848  -2.0823884  2.0797534 -4.3859963]]
Iteration 800 of 1000: loss=0.00827 " + "l1=3.43e-05" + "l2=0.00824 f=-0.572 shape=(1, 9000, 1)
logits [[ 2.093289  -2.0946267  2.0926645 -4.381136 ]]
Iteration 900 of 1000: loss=0.00728 " + "l1=4.05e-05" + "l2=0.00724 f=-0.574 shape=(1, 9000, 1)
logits [[ 2.0936093 -2.0902703  2.0928738 -4.391614 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0164 " + "l1=0.0164" + "l2=0 f=-0.545 shape=(1, 9000, 1)
logits [[ 2.3740315 -1.869561   1.8688397 -4.552328 ]]
Iteration 100 of 1000: loss=0.0142 " + "l1=0.0129" + "l2=0.0013 f=-0.551 shape=(1, 9000, 1)
logits [[ 2.312019  -1.9198098  1.9163893 -4.5123606]]
Iteration 200 of 1000: loss=0.0134 " + "l1=0.0118" + "l2=0.00155 f=-0.553 shape=(1, 9000, 1)
logits [[ 2.2934628 -1.9322075  1.9288906 -4.501051 ]]
Iteration 300 of 1000: loss=0.0126 " + "l1=0.0108" + "l2=0.00186 f=-0.555 shape=(1, 9000, 1)
logits [[ 2.274289  -1.945734   1.9432045 -4.4916   ]]
Iteration 400 of 1000: loss=0.0119 " + "l1=0.00974" + "l2=0.00215 f=-0.557 shape=(1, 9000, 1)
logits [[ 2.2577226 -1.958581   1.9580115 -4.4840527]]
Iteration 500 of 1000: loss=0.0112 " + "l1=0.00877" + "l2=0.00243 f=-0.559 shape=(1, 9000, 1)
logits [[ 2.2411246 -1.9700071  1.971416  -4.477565 ]]
Iteration 600 of 1000: loss=0.0106 " + "l1=0.00785" + "l2=0.00278 f=-0.561 shape=(1, 9000, 1)
logits [[ 2.2247884 -1.9802887  1.9832345 -4.4702344]]
Iteration 700 of 1000: loss=0.0099 " + "l1=0.00698" + "l2=0.00292 f=-0.562 shape=(1, 9000, 1)
logits [[ 2.2098753 -1.9906124  1.9949701 -4.463085 ]]
Iteration 800 of 1000: loss=0.00948 " + "l1=0.00613" + "l2=0.00335 f=-0.564 shape=(1, 9000, 1)
logits [[ 2.1960874 -2.0016587  2.0074463 -4.457121 ]]
Iteration 900 of 1000: loss=0.00896 " + "l1=0.00534" + "l2=0.00362 f=-0.565 shape=(1, 9000, 1)
logits [[ 2.1831071 -2.0117147  2.018679  -4.4514766]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0221 " + "l1=0.0221" + "l2=0 f=-0.545 shape=(1, 9000, 1)
logits [[ 2.3740315 -1.869561   1.8688397 -4.552328 ]]
Iteration 100 of 1000: loss=0.0181 " + "l1=0.0159" + "l2=0.00224 f=-0.553 shape=(1, 9000, 1)
logits [[ 2.293041  -1.935247   1.9303603 -4.499298 ]]
Iteration 200 of 1000: loss=0.0166 " + "l1=0.0139" + "l2=0.00271 f=-0.555 shape=(1, 9000, 1)
logits [[ 2.2670417 -1.9523917  1.9484334 -4.4846787]]
Iteration 300 of 1000: loss=0.0153 " + "l1=0.0121" + "l2=0.00321 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.2427788 -1.9687276  1.9669054 -4.4710426]]
Iteration 400 of 1000: loss=0.0139 " + "l1=0.0102" + "l2=0.0037 f=-0.56 shape=(1, 9000, 1)
logits [[ 2.2185986 -1.9864931  1.986072  -4.4572177]]
Iteration 500 of 1000: loss=0.0126 " + "l1=0.00841" + "l2=0.0042 f=-0.562 shape=(1, 9000, 1)
logits [[ 2.1960437 -2.0031934  2.0037773 -4.44416  ]]
Iteration 600 of 1000: loss=0.0115 " + "l1=0.0068" + "l2=0.0047 f=-0.564 shape=(1, 9000, 1)
logits [[ 2.1766572 -2.0191624  2.0212038 -4.434444 ]]
Iteration 700 of 1000: loss=0.0105 " + "l1=0.00531" + "l2=0.00519 f=-0.566 shape=(1, 9000, 1)
logits [[ 2.159166  -2.0345654  2.037791  -4.4268146]]
Iteration 800 of 1000: loss=0.00949 " + "l1=0.00396" + "l2=0.00553 f=-0.568 shape=(1, 9000, 1)
logits [[ 2.1434453 -2.049419   2.0529253 -4.4206347]]
Iteration 900 of 1000: loss=0.00875 " + "l1=0.00268" + "l2=0.00606 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.1284196 -2.0640283  2.067069  -4.41409  ]]
--- 304.83419847488403 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0693 " + "l1=0.0693" + "l2=0 f=-0.545 shape=(1, 9000, 1)
logits [[ 2.3740315 -1.869561   1.8688397 -4.552328 ]]
Iteration 100 of 1000: loss=0.0685 " + "l1=0.068" + "l2=0.00047 f=-0.541 shape=(1, 9000, 1)
logits [[ 2.3210943 -1.861455   1.8521103 -4.4777446]]
Iteration 200 of 1000: loss=0.0682 " + "l1=0.0677" + "l2=0.000535 f=-0.541 shape=(1, 9000, 1)
logits [[ 2.3089564 -1.8592535  1.8475494 -4.4599953]]
Iteration 300 of 1000: loss=0.068 " + "l1=0.0674" + "l2=0.000643 f=-0.54 shape=(1, 9000, 1)
logits [[ 2.2959945 -1.8562024  1.8420677 -4.440216 ]]
Iteration 400 of 1000: loss=0.0678 " + "l1=0.067" + "l2=0.000794 f=-0.538 shape=(1, 9000, 1)
logits [[ 2.2832532 -1.8533782  1.8364955 -4.419989 ]]
Iteration 500 of 1000: loss=0.0676 " + "l1=0.0667" + "l2=0.000917 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.2702293 -1.8503543  1.8305262 -4.399292 ]]
Iteration 600 of 1000: loss=0.0675 " + "l1=0.0664" + "l2=0.00111 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.2570794 -1.8474495  1.8242143 -4.3781962]]
Iteration 700 of 1000: loss=0.0673 " + "l1=0.066" + "l2=0.00127 f=-0.535 shape=(1, 9000, 1)
logits [[ 2.2453446 -1.8448395  1.8183033 -4.3587313]]
Iteration 800 of 1000: loss=0.0671 " + "l1=0.0657" + "l2=0.00138 f=-0.534 shape=(1, 9000, 1)
logits [[ 2.234255  -1.8423866  1.8127171 -4.339914 ]]
Iteration 900 of 1000: loss=0.0671 " + "l1=0.0655" + "l2=0.00161 f=-0.533 shape=(1, 9000, 1)
logits [[ 2.2237225 -1.8399453  1.8071758 -4.321882 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.693 " + "l1=0.693" + "l2=0 f=-0.545 shape=(1, 9000, 1)
logits [[ 2.3740315 -1.869561   1.8688397 -4.552328 ]]
Iteration 100 of 1000: loss=0.624 " + "l1=0.589" + "l2=0.0348 f=-0.517 shape=(1, 9000, 1)
logits [[ 1.947076  -1.800378   1.728201  -3.9419546]]
Iteration 200 of 1000: loss=0.592 " + "l1=0.545" + "l2=0.047 f=-0.498 shape=(1, 9000, 1)
logits [[ 1.7812485 -1.7764584  1.6694044 -3.6656907]]
Iteration 300 of 1000: loss=0.558 " + "l1=0.495" + "l2=0.063 f=-0.474 shape=(1, 9000, 1)
logits [[ 1.597961  -1.7419547  1.5966154 -3.3495376]]
Iteration 400 of 1000: loss=0.524 " + "l1=0.451" + "l2=0.073 f=-0.451 shape=(1, 9000, 1)
logits [[ 1.4548295 -1.6548914  1.450978  -3.0533657]]
Iteration 500 of 1000: loss=0.489 " + "l1=0.409" + "l2=0.0807 f=-0.433 shape=(1, 9000, 1)
logits [[ 1.3102682 -1.5894474  1.31573   -2.7696066]]
Iteration 600 of 1000: loss=0.461 " + "l1=0.373" + "l2=0.0879 f=-0.415 shape=(1, 9000, 1)
logits [[ 1.1993093 -1.5330983  1.2010185 -2.526292 ]]
Iteration 700 of 1000: loss=0.435 " + "l1=0.339" + "l2=0.0967 f=-0.399 shape=(1, 9000, 1)
logits [[ 1.0917194 -1.486068   1.0940014 -2.2936754]]
Iteration 800 of 1000: loss=0.411 " + "l1=0.305" + "l2=0.106 f=-0.381 shape=(1, 9000, 1)
logits [[ 0.9840356  -1.4358628   0.98809737 -2.0595555 ]]
Iteration 900 of 1000: loss=0.389 " + "l1=0.278" + "l2=0.111 f=-0.368 shape=(1, 9000, 1)
logits [[ 0.8951715 -1.3818628  0.8978103 -1.8833827]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.93 " + "l1=6.93" + "l2=0 f=-0.545 shape=(1, 9000, 1)
logits [[ 2.3740315 -1.869561   1.8688397 -4.552328 ]]
Iteration 100 of 1000: loss=2.06 " + "l1=0.236" + "l2=1.82 f=-0.312 shape=(1, 9000, 1)
logits [[-0.26678506 -0.73027354 -0.00818605 -0.24433026]]
Iteration 200 of 1000: loss=1.12 " + "l1=0.0209" + "l2=1.1 f=-0.292 shape=(1, 9000, 1)
logits [[-0.31193152 -0.83222026 -0.00083709 -0.02174652]]
Iteration 300 of 1000: loss=0.857 " + "l1=0" + "l2=0.857 f=-0.277 shape=(1, 9000, 1)
logits [[-0.25207534 -0.92870975  0.03241777  0.03962953]]
Iteration 400 of 1000: loss=0.705 " + "l1=0" + "l2=0.705 f=-0.268 shape=(1, 9000, 1)
logits [[-0.20802791 -1.026193    0.06544781  0.09658124]]
Iteration 500 of 1000: loss=0.597 " + "l1=0.00621" + "l2=0.591 f=-0.265 shape=(1, 9000, 1)
logits [[-0.17465323 -1.0806284   0.10013539  0.09392459]]
Iteration 600 of 1000: loss=0.537 " + "l1=0" + "l2=0.537 f=-0.256 shape=(1, 9000, 1)
logits [[-0.16523434 -1.1050954   0.09950633  0.14867496]]
Iteration 700 of 1000: loss=0.48 " + "l1=0" + "l2=0.48 f=-0.251 shape=(1, 9000, 1)
logits [[-0.11688232 -1.1491562   0.12260424  0.1410481 ]]
Iteration 800 of 1000: loss=0.452 " + "l1=0" + "l2=0.452 f=-0.247 shape=(1, 9000, 1)
logits [[-0.10329878 -1.173334    0.11334997  0.17720783]]
Iteration 900 of 1000: loss=0.419 " + "l1=0.0126" + "l2=0.406 f=-0.241 shape=(1, 9000, 1)
logits [[-0.04395842 -1.1959977   0.1448677   0.13222092]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.81 " + "l1=3.81" + "l2=0 f=-0.545 shape=(1, 9000, 1)
logits [[ 2.3740315 -1.869561   1.8688397 -4.552328 ]]
Iteration 100 of 1000: loss=1.96 " + "l1=1.18" + "l2=0.788 f=-0.346 shape=(1, 9000, 1)
logits [[ 0.56761605 -0.9549677   0.5703677  -1.5662028 ]]
Iteration 200 of 1000: loss=1.16 " + "l1=0.194" + "l2=0.969 f=-0.302 shape=(1, 9000, 1)
logits [[-0.16271505 -0.8439162   0.07494523 -0.27759895]]
Iteration 300 of 1000: loss=0.755 " + "l1=0" + "l2=0.755 f=-0.265 shape=(1, 9000, 1)
logits [[-0.23318365 -0.93749243  0.04864382  0.06181467]]
Iteration 400 of 1000: loss=0.584 " + "l1=0" + "l2=0.584 f=-0.237 shape=(1, 9000, 1)
logits [[-0.14588474 -1.0269943   0.09902696  0.12387168]]
Iteration 500 of 1000: loss=0.482 " + "l1=0" + "l2=0.482 f=-0.225 shape=(1, 9000, 1)
logits [[-0.08636158 -1.1122069   0.1449649   0.15402457]]
Iteration 600 of 1000: loss=0.427 " + "l1=0.0105" + "l2=0.417 f=-0.214 shape=(1, 9000, 1)
logits [[-0.02836338 -1.1590067   0.17559583  0.15643534]]
Iteration 700 of 1000: loss=0.378 " + "l1=0.000535" + "l2=0.377 f=-0.207 shape=(1, 9000, 1)
logits [[ 0.01410349 -1.1706424   0.1641938   0.16322067]]
Iteration 800 of 1000: loss=0.345 " + "l1=0.00739" + "l2=0.337 f=-0.201 shape=(1, 9000, 1)
logits [[ 0.06599656 -1.2209337   0.18121676  0.16777435]]
Iteration 900 of 1000: loss=0.316 " + "l1=0" + "l2=0.316 f=-0.201 shape=(1, 9000, 1)
logits [[ 0.0701439  -1.2423831   0.16510378  0.20482656]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.25 " + "l1=2.25" + "l2=0 f=-0.545 shape=(1, 9000, 1)
logits [[ 2.3740315 -1.869561   1.8688397 -4.552328 ]]
Iteration 100 of 1000: loss=1.56 " + "l1=1.25" + "l2=0.312 f=-0.413 shape=(1, 9000, 1)
logits [[ 1.1946405 -1.3838671  1.1945688 -2.6582222]]
Iteration 200 of 1000: loss=1.17 " + "l1=0.737" + "l2=0.434 f=-0.342 shape=(1, 9000, 1)
logits [[ 0.65451527 -1.0648391   0.6548869  -1.6142958 ]]
Iteration 300 of 1000: loss=0.905 " + "l1=0.422" + "l2=0.483 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.25983086 -0.9872435   0.40279645 -0.8945074 ]]
Iteration 400 of 1000: loss=0.685 " + "l1=0.152" + "l2=0.533 f=-0.266 shape=(1, 9000, 1)
logits [[-0.03698161 -1.0186917   0.22899821 -0.2384116 ]]
Iteration 500 of 1000: loss=0.489 " + "l1=0.017" + "l2=0.472 f=-0.232 shape=(1, 9000, 1)
logits [[-0.11231075 -1.0606074   0.14762755  0.09531268]]
Iteration 600 of 1000: loss=0.407 " + "l1=0" + "l2=0.407 f=-0.222 shape=(1, 9000, 1)
logits [[-0.07269471 -1.1364673   0.14776532  0.17277983]]
Iteration 700 of 1000: loss=0.353 " + "l1=0" + "l2=0.353 f=-0.215 shape=(1, 9000, 1)
logits [[-0.00872259 -1.1731651   0.15257552  0.17055166]]
Iteration 800 of 1000: loss=0.315 " + "l1=0" + "l2=0.315 f=-0.211 shape=(1, 9000, 1)
logits [[ 0.04345155 -1.2275201   0.16622828  0.17439634]]
Iteration 900 of 1000: loss=0.287 " + "l1=0.00231" + "l2=0.285 f=-0.211 shape=(1, 9000, 1)
logits [[ 0.08394849 -1.275183    0.17667352  0.16957828]]
--- 330.9771406650543 seconds ---
Adv result:3
Loading model
Loading ground truth file
Attack diff is running...
Loading record A02727
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0601 " + "l1=0.0601" + "l2=0 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.14099   -1.8683069  2.0952141 -7.1465335]]
Iteration 100 of 1000: loss=0.0594 " + "l1=0.059" + "l2=0.000431 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.0840287 -1.8117296  2.0599248 -7.111207 ]]
Iteration 200 of 1000: loss=0.0591 " + "l1=0.0586" + "l2=0.00048 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.0706363 -1.7920247  2.0471308 -7.1053033]]
Iteration 300 of 1000: loss=0.0589 " + "l1=0.0583" + "l2=0.000583 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.0554624 -1.7725164  2.034898  -7.097635 ]]
Iteration 400 of 1000: loss=0.0587 " + "l1=0.0579" + "l2=0.000744 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.0404563 -1.7529132  2.0227695 -7.0905385]]
Iteration 500 of 1000: loss=0.0586 " + "l1=0.0576" + "l2=0.000945 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.0265417 -1.7351571  2.0123196 -7.08453  ]]
Iteration 600 of 1000: loss=0.0584 " + "l1=0.0573" + "l2=0.0011 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.0133266 -1.718657   2.0029285 -7.07892  ]]
Iteration 700 of 1000: loss=0.0583 " + "l1=0.057" + "l2=0.00125 f=-0.696 shape=(1, 9000, 1)
logits [[ 4.0007243 -1.7023165  1.9937705 -7.074333 ]]
Iteration 800 of 1000: loss=0.0582 " + "l1=0.0568" + "l2=0.00138 f=-0.696 shape=(1, 9000, 1)
logits [[ 3.988778  -1.6882809  1.986252  -7.0698304]]
Iteration 900 of 1000: loss=0.058 " + "l1=0.0565" + "l2=0.00154 f=-0.696 shape=(1, 9000, 1)
logits [[ 3.9757726 -1.672769   1.9776373 -7.065341 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.601 " + "l1=0.601" + "l2=0 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.14099   -1.8683069  2.0952141 -7.1465335]]
Iteration 100 of 1000: loss=0.529 " + "l1=0.494" + "l2=0.0355 f=-0.697 shape=(1, 9000, 1)
logits [[ 3.607409  -1.3283333  1.7634723 -6.8286543]]
Iteration 200 of 1000: loss=0.491 " + "l1=0.439" + "l2=0.0519 f=-0.7 shape=(1, 9000, 1)
logits [[ 3.3198037 -1.0686345  1.6176577 -6.667708 ]]
Iteration 300 of 1000: loss=0.447 " + "l1=0.366" + "l2=0.0805 f=-0.706 shape=(1, 9000, 1)
logits [[ 2.9361525  -0.72533536  1.4508553  -6.487433  ]]
Iteration 400 of 1000: loss=0.412 " + "l1=0.314" + "l2=0.0986 f=-0.723 shape=(1, 9000, 1)
logits [[ 2.6262553 -0.5101754  1.3502775 -6.357362 ]]
Iteration 500 of 1000: loss=0.381 " + "l1=0.271" + "l2=0.111 f=-0.732 shape=(1, 9000, 1)
logits [[ 2.350593   -0.35498878  1.292236   -6.216581  ]]
Iteration 600 of 1000: loss=0.349 " + "l1=0.225" + "l2=0.124 f=-0.736 shape=(1, 9000, 1)
logits [[ 2.0588858  -0.19039105  1.2333308  -6.045595  ]]
Iteration 700 of 1000: loss=0.315 " + "l1=0.176" + "l2=0.14 f=-0.743 shape=(1, 9000, 1)
logits [[ 1.7540591e+00 -4.0106159e-03  1.1527041e+00 -5.8747683e+00]]
Iteration 800 of 1000: loss=0.291 " + "l1=0.142" + "l2=0.148 f=-0.746 shape=(1, 9000, 1)
logits [[ 1.5375925   0.11569531  1.1165439  -5.754223  ]]
Iteration 900 of 1000: loss=0.266 " + "l1=0.111" + "l2=0.155 f=-0.749 shape=(1, 9000, 1)
logits [[ 1.3281131   0.21727826  1.067115   -5.606562  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.01 " + "l1=6.01" + "l2=0 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.14099   -1.8683069  2.0952141 -7.1465335]]
Iteration 100 of 1000: loss=1.21 " + "l1=0" + "l2=1.21 f=-0.836 shape=(1, 9000, 1)
logits [[ 0.7195564   0.73077947  0.72507405 -5.5208135 ]]
Iteration 200 of 1000: loss=0.771 " + "l1=0.00423" + "l2=0.766 f=-0.838 shape=(1, 9000, 1)
logits [[ 0.74051213  0.7539186   0.7581487  -5.606379  ]]
Iteration 300 of 1000: loss=0.613 " + "l1=0.0109" + "l2=0.602 f=-0.827 shape=(1, 9000, 1)
logits [[ 0.7806933   0.76978105  0.7635674  -5.623855  ]]
Iteration 400 of 1000: loss=0.516 " + "l1=0" + "l2=0.516 f=-0.819 shape=(1, 9000, 1)
logits [[ 0.76689506  0.7794332   0.77242213 -5.59629   ]]
Iteration 500 of 1000: loss=0.455 " + "l1=0" + "l2=0.455 f=-0.812 shape=(1, 9000, 1)
logits [[ 0.7399643   0.78037804  0.7780493  -5.547982  ]]
Iteration 600 of 1000: loss=0.41 " + "l1=0.0134" + "l2=0.397 f=-0.797 shape=(1, 9000, 1)
logits [[ 0.7897358   0.7763031   0.76235396 -5.5182233 ]]
Iteration 700 of 1000: loss=0.365 " + "l1=0" + "l2=0.365 f=-0.787 shape=(1, 9000, 1)
logits [[ 0.7602898  0.7906153  0.7567891 -5.4557333]]
Iteration 800 of 1000: loss=0.338 " + "l1=0" + "l2=0.338 f=-0.777 shape=(1, 9000, 1)
logits [[ 0.7411819   0.78936994  0.7637799  -5.4006643 ]]
Iteration 900 of 1000: loss=0.311 " + "l1=0" + "l2=0.311 f=-0.765 shape=(1, 9000, 1)
logits [[ 0.74961615  0.77751744  0.76778495 -5.353038  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.31 " + "l1=3.31" + "l2=0 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.14099   -1.8683069  2.0952141 -7.1465335]]
Iteration 100 of 1000: loss=1.18 " + "l1=0.195" + "l2=0.984 f=-0.834 shape=(1, 9000, 1)
logits [[ 0.89377564  0.53902084  0.8825965  -5.6522775 ]]
Iteration 200 of 1000: loss=0.647 " + "l1=0.0085" + "l2=0.639 f=-0.838 shape=(1, 9000, 1)
logits [[ 0.76674616  0.7512873   0.7578287  -5.6296563 ]]
Iteration 300 of 1000: loss=0.496 " + "l1=0" + "l2=0.496 f=-0.825 shape=(1, 9000, 1)
logits [[ 0.7460809  0.7657641  0.7604472 -5.5731974]]
Iteration 400 of 1000: loss=0.415 " + "l1=0.00594" + "l2=0.409 f=-0.808 shape=(1, 9000, 1)
logits [[ 0.774984   0.7641864  0.7548367 -5.525558 ]]
Iteration 500 of 1000: loss=0.361 " + "l1=0" + "l2=0.361 f=-0.795 shape=(1, 9000, 1)
logits [[ 0.76529     0.76825154  0.7524556  -5.4677835 ]]
Iteration 600 of 1000: loss=0.324 " + "l1=0.000834" + "l2=0.323 f=-0.785 shape=(1, 9000, 1)
logits [[ 0.7450843   0.75584245  0.75735825 -5.3976355 ]]
Iteration 700 of 1000: loss=0.297 " + "l1=0" + "l2=0.297 f=-0.771 shape=(1, 9000, 1)
logits [[ 0.72311187  0.7640856   0.74730885 -5.318815  ]]
Iteration 800 of 1000: loss=0.264 " + "l1=0" + "l2=0.264 f=-0.758 shape=(1, 9000, 1)
logits [[ 0.73495436  0.7441511   0.7402225  -5.2500043 ]]
Iteration 900 of 1000: loss=0.246 " + "l1=0" + "l2=0.246 f=-0.748 shape=(1, 9000, 1)
logits [[ 0.7128016   0.7407259   0.73125875 -5.178314  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.95 " + "l1=1.95" + "l2=0 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.14099   -1.8683069  2.0952141 -7.1465335]]
Iteration 100 of 1000: loss=1.15 " + "l1=0.656" + "l2=0.492 f=-0.759 shape=(1, 9000, 1)
logits [[ 1.949241   -0.06944646  1.1507787  -6.066563  ]]
Iteration 200 of 1000: loss=0.692 " + "l1=0.152" + "l2=0.54 f=-0.819 shape=(1, 9000, 1)
logits [[ 0.96070504  0.49203062  0.95233256 -5.6827035 ]]
Iteration 300 of 1000: loss=0.449 " + "l1=0.0282" + "l2=0.421 f=-0.812 shape=(1, 9000, 1)
logits [[ 0.79373646  0.70850396  0.79529536 -5.544067  ]]
Iteration 400 of 1000: loss=0.351 " + "l1=0.00173" + "l2=0.349 f=-0.794 shape=(1, 9000, 1)
logits [[ 0.7528034  0.7512795  0.7565957 -5.4376383]]
Iteration 500 of 1000: loss=0.295 " + "l1=0.000197" + "l2=0.295 f=-0.778 shape=(1, 9000, 1)
logits [[ 0.7416676   0.7488006   0.74940604 -5.351462  ]]
Iteration 600 of 1000: loss=0.26 " + "l1=0.00364" + "l2=0.256 f=-0.758 shape=(1, 9000, 1)
logits [[ 0.7432964   0.73208344  0.7324507  -5.2412624 ]]
Iteration 700 of 1000: loss=0.235 " + "l1=0" + "l2=0.235 f=-0.75 shape=(1, 9000, 1)
logits [[ 0.7115592   0.7196776   0.71789426 -5.1478157 ]]
Iteration 800 of 1000: loss=0.22 " + "l1=0" + "l2=0.22 f=-0.74 shape=(1, 9000, 1)
logits [[ 0.70100224  0.7106585   0.7035222  -5.074463  ]]
Iteration 900 of 1000: loss=0.208 " + "l1=0" + "l2=0.208 f=-0.731 shape=(1, 9000, 1)
logits [[ 0.69502705  0.70182556  0.6906516  -5.0097847 ]]
--- 296.13532423973083 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0205 " + "l1=0.0205" + "l2=0 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.14099   -1.8683069  2.0952141 -7.1465335]]
Iteration 100 of 1000: loss=0.0202 " + "l1=0.02" + "l2=0.000211 f=-0.696 shape=(1, 9000, 1)
logits [[ 4.1073394 -1.8771617  2.108005  -7.1204896]]
Iteration 200 of 1000: loss=0.0201 " + "l1=0.0199" + "l2=0.000184 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.104036  -1.8786042  2.109797  -7.1163   ]]
Iteration 300 of 1000: loss=0.0201 " + "l1=0.0199" + "l2=0.000221 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.098318  -1.8805598  2.1127248 -7.110077 ]]
Iteration 400 of 1000: loss=0.0201 " + "l1=0.0198" + "l2=0.000295 f=-0.694 shape=(1, 9000, 1)
logits [[ 4.091999  -1.8826306  2.1161137 -7.1029944]]
Iteration 500 of 1000: loss=0.02 " + "l1=0.0197" + "l2=0.000342 f=-0.694 shape=(1, 9000, 1)
logits [[ 4.085561  -1.8847862  2.1198404 -7.095625 ]]
Iteration 600 of 1000: loss=0.02 " + "l1=0.0196" + "l2=0.000431 f=-0.693 shape=(1, 9000, 1)
logits [[ 4.0792155 -1.8867464  2.1236026 -7.0883226]]
Iteration 700 of 1000: loss=0.0199 " + "l1=0.0195" + "l2=0.000486 f=-0.692 shape=(1, 9000, 1)
logits [[ 4.0727334 -1.8885958  2.1275308 -7.0808105]]
Iteration 800 of 1000: loss=0.0199 " + "l1=0.0193" + "l2=0.000589 f=-0.691 shape=(1, 9000, 1)
logits [[ 4.066017  -1.8901805  2.1314633 -7.0731344]]
Iteration 900 of 1000: loss=0.0199 " + "l1=0.0192" + "l2=0.000696 f=-0.691 shape=(1, 9000, 1)
logits [[ 4.0590315 -1.8913335  2.1352665 -7.0652804]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.205 " + "l1=0.205" + "l2=0 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.14099   -1.8683069  2.0952141 -7.1465335]]
Iteration 100 of 1000: loss=0.181 " + "l1=0.168" + "l2=0.0128 f=-0.698 shape=(1, 9000, 1)
logits [[ 3.8918977 -1.9603702  2.2083986 -6.933414 ]]
Iteration 200 of 1000: loss=0.17 " + "l1=0.152" + "l2=0.0178 f=-0.693 shape=(1, 9000, 1)
logits [[ 3.7789395 -1.986523   2.2560027 -6.8195424]]
Iteration 300 of 1000: loss=0.159 " + "l1=0.136" + "l2=0.0225 f=-0.685 shape=(1, 9000, 1)
logits [[ 3.6721692 -2.0167274  2.3074696 -6.7020564]]
Iteration 400 of 1000: loss=0.147 " + "l1=0.121" + "l2=0.0259 f=-0.676 shape=(1, 9000, 1)
logits [[ 3.5673208 -2.034293   2.3539672 -6.591748 ]]
Iteration 500 of 1000: loss=0.134 " + "l1=0.105" + "l2=0.0295 f=-0.669 shape=(1, 9000, 1)
logits [[ 3.4395058 -2.0375512  2.3936665 -6.470991 ]]
Iteration 600 of 1000: loss=0.12 " + "l1=0.0874" + "l2=0.0325 f=-0.663 shape=(1, 9000, 1)
logits [[ 3.2949336 -2.02036    2.4206276 -6.347247 ]]
Iteration 700 of 1000: loss=0.108 " + "l1=0.0725" + "l2=0.035 f=-0.661 shape=(1, 9000, 1)
logits [[ 3.1659575 -2.0047572  2.4409995 -6.246697 ]]
Iteration 800 of 1000: loss=0.0959 " + "l1=0.0584" + "l2=0.0374 f=-0.66 shape=(1, 9000, 1)
logits [[ 3.0465016 -1.9865195  2.4623818 -6.1627355]]
Iteration 900 of 1000: loss=0.0838 " + "l1=0.0439" + "l2=0.0399 f=-0.66 shape=(1, 9000, 1)
logits [[ 2.9296308 -1.9710351  2.49031   -6.0883336]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.05 " + "l1=2.05" + "l2=0 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.14099   -1.8683069  2.0952141 -7.1465335]]
Iteration 100 of 1000: loss=0.365 " + "l1=0.00478" + "l2=0.36 f=-0.717 shape=(1, 9000, 1)
logits [[ 2.643418  -2.2145846  2.63864   -5.9358363]]
Iteration 200 of 1000: loss=0.253 " + "l1=0" + "l2=0.253 f=-0.706 shape=(1, 9000, 1)
logits [[ 2.5971727 -2.133311   2.5993972 -5.8892307]]
Iteration 300 of 1000: loss=0.206 " + "l1=0.00934" + "l2=0.196 f=-0.698 shape=(1, 9000, 1)
logits [[ 2.5788856 -2.0792155  2.5695493 -5.8612037]]
Iteration 400 of 1000: loss=0.163 " + "l1=0" + "l2=0.163 f=-0.689 shape=(1, 9000, 1)
logits [[ 2.529847  -2.0258684  2.5416343 -5.8006988]]
Iteration 500 of 1000: loss=0.143 " + "l1=0" + "l2=0.143 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.4877172 -1.9862938  2.526484  -5.7585235]]
Iteration 600 of 1000: loss=0.116 " + "l1=0" + "l2=0.116 f=-0.676 shape=(1, 9000, 1)
logits [[ 2.5000713 -1.9545658  2.5062332 -5.7552238]]
Iteration 700 of 1000: loss=0.103 " + "l1=0.00524" + "l2=0.098 f=-0.672 shape=(1, 9000, 1)
logits [[ 2.4987283 -1.9303855  2.493488  -5.7502155]]
Iteration 800 of 1000: loss=0.0879 " + "l1=0" + "l2=0.0879 f=-0.669 shape=(1, 9000, 1)
logits [[ 2.4779298 -1.9135675  2.4904149 -5.729336 ]]
Iteration 900 of 1000: loss=0.0757 " + "l1=0" + "l2=0.0757 f=-0.665 shape=(1, 9000, 1)
logits [[ 2.4799976 -1.9010925  2.4806201 -5.717974 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.13 " + "l1=1.13" + "l2=0 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.14099   -1.8683069  2.0952141 -7.1465335]]
Iteration 100 of 1000: loss=0.353 " + "l1=0.00144" + "l2=0.352 f=-0.715 shape=(1, 9000, 1)
logits [[ 2.6630244 -2.244927   2.660402  -5.9373646]]
Iteration 200 of 1000: loss=0.229 " + "l1=0.00261" + "l2=0.226 f=-0.704 shape=(1, 9000, 1)
logits [[ 2.6090279 -2.1414838  2.6042826 -5.8876314]]
Iteration 300 of 1000: loss=0.173 " + "l1=0" + "l2=0.173 f=-0.692 shape=(1, 9000, 1)
logits [[ 2.5655518 -2.083479   2.573887  -5.8248725]]
Iteration 400 of 1000: loss=0.139 " + "l1=0" + "l2=0.139 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.5498495 -2.0384195  2.5517771 -5.793577 ]]
Iteration 500 of 1000: loss=0.115 " + "l1=0.00286" + "l2=0.113 f=-0.675 shape=(1, 9000, 1)
logits [[ 2.539802  -2.0046742  2.5346005 -5.767822 ]]
Iteration 600 of 1000: loss=0.0982 " + "l1=0.00361" + "l2=0.0946 f=-0.669 shape=(1, 9000, 1)
logits [[ 2.527562  -1.981563   2.5209908 -5.743772 ]]
Iteration 700 of 1000: loss=0.0845 " + "l1=0.00196" + "l2=0.0825 f=-0.665 shape=(1, 9000, 1)
logits [[ 2.5157855 -1.9650253  2.5122273 -5.7218103]]
Iteration 800 of 1000: loss=0.0776 " + "l1=0" + "l2=0.0776 f=-0.662 shape=(1, 9000, 1)
logits [[ 2.4783118 -1.9488732  2.5116584 -5.689449 ]]
Iteration 900 of 1000: loss=0.0656 " + "l1=0" + "l2=0.0656 f=-0.657 shape=(1, 9000, 1)
logits [[ 2.4935093 -1.9305377  2.497408  -5.690321 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.665 " + "l1=0.665" + "l2=0 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.14099   -1.8683069  2.0952141 -7.1465335]]
Iteration 100 of 1000: loss=0.393 " + "l1=0.223" + "l2=0.17 f=-0.705 shape=(1, 9000, 1)
logits [[ 3.199476  -2.1806662  2.5139945 -6.3534884]]
Iteration 200 of 1000: loss=0.244 " + "l1=0.0162" + "l2=0.228 f=-0.701 shape=(1, 9000, 1)
logits [[ 2.6673648 -2.1750057  2.6173816 -5.913853 ]]
Iteration 300 of 1000: loss=0.158 " + "l1=0.00458" + "l2=0.154 f=-0.69 shape=(1, 9000, 1)
logits [[ 2.607473  -2.1035936  2.5933936 -5.858159 ]]
Iteration 400 of 1000: loss=0.113 " + "l1=0.00125" + "l2=0.112 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.5862336 -2.0602412  2.5823948 -5.840751 ]]
Iteration 500 of 1000: loss=0.0886 " + "l1=0" + "l2=0.0886 f=-0.678 shape=(1, 9000, 1)
logits [[ 2.5759451 -2.0309494  2.5810685 -5.8388453]]
Iteration 600 of 1000: loss=0.0748 " + "l1=0" + "l2=0.0748 f=-0.674 shape=(1, 9000, 1)
logits [[ 2.5625114 -2.005572   2.5791276 -5.832255 ]]
Iteration 700 of 1000: loss=0.0638 " + "l1=0" + "l2=0.0638 f=-0.669 shape=(1, 9000, 1)
logits [[ 2.5635703 -1.9805672  2.5668442 -5.8261156]]
Iteration 800 of 1000: loss=0.0567 " + "l1=0" + "l2=0.0567 f=-0.665 shape=(1, 9000, 1)
logits [[ 2.5549479 -1.9615377  2.5563    -5.8107915]]
Iteration 900 of 1000: loss=0.0533 " + "l1=0.00229" + "l2=0.051 f=-0.662 shape=(1, 9000, 1)
logits [[ 2.5512068 -1.9451637  2.5441644 -5.796811 ]]
--- 290.2358560562134 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.113 " + "l1=0.113" + "l2=0 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.14099   -1.8683069  2.0952141 -7.1465335]]
Iteration 100 of 1000: loss=0.112 " + "l1=0.111" + "l2=0.000548 f=-0.692 shape=(1, 9000, 1)
logits [[ 4.071907  -1.8507103  2.0778244 -7.0667176]]
Iteration 200 of 1000: loss=0.112 " + "l1=0.111" + "l2=0.000616 f=-0.691 shape=(1, 9000, 1)
logits [[ 4.0557675 -1.8458288  2.07408   -7.046566 ]]
Iteration 300 of 1000: loss=0.111 " + "l1=0.111" + "l2=0.000768 f=-0.689 shape=(1, 9000, 1)
logits [[ 4.037381  -1.8407542  2.0701792 -7.0236444]]
Iteration 400 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.000938 f=-0.688 shape=(1, 9000, 1)
logits [[ 4.019799  -1.8363295  2.0672233 -7.001026 ]]
Iteration 500 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.00109 f=-0.686 shape=(1, 9000, 1)
logits [[ 4.0021367 -1.832309   2.0648181 -6.9781322]]
Iteration 600 of 1000: loss=0.111 " + "l1=0.109" + "l2=0.0013 f=-0.684 shape=(1, 9000, 1)
logits [[ 3.98426   -1.8285882  2.0634158 -6.9546533]]
Iteration 700 of 1000: loss=0.11 " + "l1=0.109" + "l2=0.00148 f=-0.682 shape=(1, 9000, 1)
logits [[ 3.9676673 -1.8253582  2.0627356 -6.9324694]]
Iteration 800 of 1000: loss=0.11 " + "l1=0.109" + "l2=0.00168 f=-0.679 shape=(1, 9000, 1)
logits [[ 3.9515388 -1.8230897  2.0633516 -6.909638 ]]
Iteration 900 of 1000: loss=0.11 " + "l1=0.108" + "l2=0.00187 f=-0.677 shape=(1, 9000, 1)
logits [[ 3.9364407 -1.8206055  2.0639198 -6.8883586]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.13 " + "l1=1.13" + "l2=0 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.14099   -1.8683069  2.0952141 -7.1465335]]
Iteration 100 of 1000: loss=1.04 " + "l1=0.994" + "l2=0.0457 f=-0.667 shape=(1, 9000, 1)
logits [[ 3.512562  -1.6950288  1.940863  -6.426301 ]]
Iteration 200 of 1000: loss=0.993 " + "l1=0.925" + "l2=0.0682 f=-0.646 shape=(1, 9000, 1)
logits [[ 3.191965  -1.58409    1.8666661 -6.058567 ]]
Iteration 300 of 1000: loss=0.947 " + "l1=0.857" + "l2=0.09 f=-0.626 shape=(1, 9000, 1)
logits [[ 2.871526  -1.4771994  1.8040094 -5.7031965]]
Iteration 400 of 1000: loss=0.901 " + "l1=0.797" + "l2=0.104 f=-0.614 shape=(1, 9000, 1)
logits [[ 2.566162  -1.3271545  1.7089384 -5.4059267]]
Iteration 500 of 1000: loss=0.864 " + "l1=0.747" + "l2=0.116 f=-0.602 shape=(1, 9000, 1)
logits [[ 2.332525  -1.2247405  1.6243045 -5.1394978]]
Iteration 600 of 1000: loss=0.827 " + "l1=0.7" + "l2=0.127 f=-0.583 shape=(1, 9000, 1)
logits [[ 2.1211348 -1.1181535  1.5407832 -4.8741693]]
Iteration 700 of 1000: loss=0.789 " + "l1=0.649" + "l2=0.139 f=-0.562 shape=(1, 9000, 1)
logits [[ 1.8891242 -0.9785693  1.4460092 -4.6030307]]
Iteration 800 of 1000: loss=0.746 " + "l1=0.596" + "l2=0.149 f=-0.55 shape=(1, 9000, 1)
logits [[ 1.6316462  -0.81612295  1.3195896  -4.3333287 ]]
Iteration 900 of 1000: loss=0.695 " + "l1=0.538" + "l2=0.158 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.3408763 -0.6279911  1.1970881 -4.034738 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.3 " + "l1=11.3" + "l2=0 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.14099   -1.8683069  2.0952141 -7.1465335]]
Iteration 100 of 1000: loss=4.8 " + "l1=2.13" + "l2=2.67 f=-0.439 shape=(1, 9000, 1)
logits [[ 0.18833835 -0.22535704  0.20406239 -1.9212315 ]]
Iteration 200 of 1000: loss=2.67 " + "l1=0.0591" + "l2=2.61 f=-0.279 shape=(1, 9000, 1)
logits [[-0.28070423 -0.26004362 -0.2589061  -0.3180184 ]]
Iteration 300 of 1000: loss=2.06 " + "l1=0" + "l2=2.06 f=-0.265 shape=(1, 9000, 1)
logits [[-0.278606   -0.26518428 -0.26054803 -0.25659138]]
Iteration 400 of 1000: loss=1.69 " + "l1=0.0234" + "l2=1.67 f=-0.252 shape=(1, 9000, 1)
logits [[-0.24011838 -0.26565015 -0.23876297 -0.2621751 ]]
Iteration 500 of 1000: loss=1.49 " + "l1=0" + "l2=1.49 f=-0.246 shape=(1, 9000, 1)
logits [[-0.24986763 -0.24938898 -0.24700527 -0.23653987]]
Iteration 600 of 1000: loss=1.39 " + "l1=0.0214" + "l2=1.37 f=-0.25 shape=(1, 9000, 1)
logits [[-0.28345856 -0.24235223 -0.22654325 -0.24791282]]
Iteration 700 of 1000: loss=1.29 " + "l1=0" + "l2=1.29 f=-0.238 shape=(1, 9000, 1)
logits [[-0.24187116 -0.24265282 -0.23619342 -0.23267463]]
Iteration 800 of 1000: loss=1.22 " + "l1=0.0113" + "l2=1.21 f=-0.239 shape=(1, 9000, 1)
logits [[-0.25386694 -0.22618599 -0.23940279 -0.23747554]]
Iteration 900 of 1000: loss=1.15 " + "l1=0" + "l2=1.15 f=-0.235 shape=(1, 9000, 1)
logits [[-0.24977666 -0.24102403 -0.24052267 -0.2068699 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.21 " + "l1=6.21" + "l2=0 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.14099   -1.8683069  2.0952141 -7.1465335]]
Iteration 100 of 1000: loss=3.69 " + "l1=2.55" + "l2=1.14 f=-0.602 shape=(1, 9000, 1)
logits [[ 0.96051973 -0.65299153  0.9523277  -3.6679864 ]]
Iteration 200 of 1000: loss=2.82 " + "l1=1.42" + "l2=1.4 f=-0.469 shape=(1, 9000, 1)
logits [[ 0.3260574  -0.28107065  0.33021954 -2.2493868 ]]
Iteration 300 of 1000: loss=2.02 " + "l1=0.57" + "l2=1.45 f=-0.337 shape=(1, 9000, 1)
logits [[-0.09900925 -0.1318537  -0.04086277 -1.0771714 ]]
Iteration 400 of 1000: loss=1.57 " + "l1=0.14" + "l2=1.43 f=-0.261 shape=(1, 9000, 1)
logits [[-0.26964536 -0.16992892 -0.1784658  -0.42490157]]
Iteration 500 of 1000: loss=1.29 " + "l1=0.00653" + "l2=1.28 f=-0.221 shape=(1, 9000, 1)
logits [[-0.2229631  -0.21350408 -0.22045292 -0.22536945]]
Iteration 600 of 1000: loss=1.13 " + "l1=0" + "l2=1.13 f=-0.225 shape=(1, 9000, 1)
logits [[-0.25606123 -0.21766041 -0.21576858 -0.21244013]]
Iteration 700 of 1000: loss=0.999 " + "l1=0.00602" + "l2=0.993 f=-0.223 shape=(1, 9000, 1)
logits [[-0.23112753 -0.23659112 -0.20762284 -0.2185604 ]]
Iteration 800 of 1000: loss=0.906 " + "l1=0" + "l2=0.906 f=-0.213 shape=(1, 9000, 1)
logits [[-0.21406892 -0.22009507 -0.2107004  -0.2087766 ]]
Iteration 900 of 1000: loss=0.846 " + "l1=0" + "l2=0.846 f=-0.214 shape=(1, 9000, 1)
logits [[-0.25279698 -0.20326212 -0.20257704 -0.19548127]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.67 " + "l1=3.67" + "l2=0 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.14099   -1.8683069  2.0952141 -7.1465335]]
Iteration 100 of 1000: loss=2.68 " + "l1=2.11" + "l2=0.576 f=-0.642 shape=(1, 9000, 1)
logits [[ 1.7958043 -1.2116413  1.536767  -4.690676 ]]
Iteration 200 of 1000: loss=2.25 " + "l1=1.63" + "l2=0.615 f=-0.607 shape=(1, 9000, 1)
logits [[ 1.1229037 -0.7669134  1.1159598 -3.9008162]]
Iteration 300 of 1000: loss=1.99 " + "l1=1.3" + "l2=0.683 f=-0.556 shape=(1, 9000, 1)
logits [[ 0.75806594 -0.52442133  0.7772459  -3.2334642 ]]
Iteration 400 of 1000: loss=1.71 " + "l1=0.958" + "l2=0.753 f=-0.46 shape=(1, 9000, 1)
logits [[ 0.46545443 -0.3005306   0.47199014 -2.4757    ]]
Iteration 500 of 1000: loss=1.46 " + "l1=0.665" + "l2=0.796 f=-0.363 shape=(1, 9000, 1)
logits [[ 0.27261296 -0.22812738  0.27507433 -1.7701627 ]]
Iteration 600 of 1000: loss=1.26 " + "l1=0.472" + "l2=0.792 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.10466205 -0.10801031  0.11999326 -1.3322177 ]]
Iteration 700 of 1000: loss=1.05 " + "l1=0.292" + "l2=0.761 f=-0.258 shape=(1, 9000, 1)
logits [[-0.05941875 -0.03086604 -0.02046884 -0.91946167]]
Iteration 800 of 1000: loss=0.927 " + "l1=0.208" + "l2=0.718 f=-0.225 shape=(1, 9000, 1)
logits [[-0.08468823 -0.0577405  -0.05919166 -0.69925094]]
Iteration 900 of 1000: loss=0.817 " + "l1=0.133" + "l2=0.684 f=-0.19 shape=(1, 9000, 1)
logits [[-0.10617413 -0.09163732 -0.07662962 -0.48525754]]
--- 298.79430055618286 seconds ---
Adv result:3
Loading record A02738
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0939 " + "l1=0.0939" + "l2=0 f=-0.716 shape=(1, 9000, 1)
logits [[ 6.431316  -2.9624639  3.567419  -9.898471 ]]
Iteration 100 of 1000: loss=0.0935 " + "l1=0.0932" + "l2=0.000268 f=-0.716 shape=(1, 9000, 1)
logits [[ 6.3938255 -2.9309797  3.5426376 -9.867621 ]]
Iteration 200 of 1000: loss=0.0934 " + "l1=0.0931" + "l2=0.000282 f=-0.716 shape=(1, 9000, 1)
logits [[ 6.3872986 -2.9227662  3.5361688 -9.863851 ]]
Iteration 300 of 1000: loss=0.0933 " + "l1=0.0929" + "l2=0.00038 f=-0.716 shape=(1, 9000, 1)
logits [[ 6.378857  -2.9134648  3.5289557 -9.858278 ]]
Iteration 400 of 1000: loss=0.0932 " + "l1=0.0928" + "l2=0.00048 f=-0.716 shape=(1, 9000, 1)
logits [[ 6.3712697 -2.9053721  3.5227504 -9.853318 ]]
Iteration 500 of 1000: loss=0.0932 " + "l1=0.0926" + "l2=0.000588 f=-0.716 shape=(1, 9000, 1)
logits [[ 6.364484  -2.8980002  3.5171165 -9.849058 ]]
Iteration 600 of 1000: loss=0.0932 " + "l1=0.0925" + "l2=0.000731 f=-0.717 shape=(1, 9000, 1)
logits [[ 6.3585687 -2.8916087  3.512356  -9.845467 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.939 " + "l1=0.939" + "l2=0 f=-0.716 shape=(1, 9000, 1)
logits [[ 6.431316  -2.9624639  3.567419  -9.898471 ]]
Iteration 100 of 1000: loss=0.902 " + "l1=0.884" + "l2=0.0179 f=-0.716 shape=(1, 9000, 1)
logits [[ 6.126839  -2.7160869  3.3682458 -9.641607 ]]
Iteration 200 of 1000: loss=0.886 " + "l1=0.861" + "l2=0.0252 f=-0.716 shape=(1, 9000, 1)
logits [[ 5.999737  -2.6055605  3.282807  -9.540679 ]]
Iteration 300 of 1000: loss=0.873 " + "l1=0.839" + "l2=0.0338 f=-0.714 shape=(1, 9000, 1)
logits [[ 5.8811812 -2.5096555  3.2141685 -9.441683 ]]
Iteration 400 of 1000: loss=0.863 " + "l1=0.822" + "l2=0.0412 f=-0.711 shape=(1, 9000, 1)
logits [[ 5.7871976 -2.4291544  3.1573546 -9.360855 ]]
Iteration 500 of 1000: loss=0.855 " + "l1=0.806" + "l2=0.0484 f=-0.707 shape=(1, 9000, 1)
logits [[ 5.7032228 -2.3589814  3.1088402 -9.28307  ]]
Iteration 600 of 1000: loss=0.846 " + "l1=0.79" + "l2=0.0556 f=-0.703 shape=(1, 9000, 1)
logits [[ 5.613734  -2.2903674  3.059426  -9.196011 ]]
Iteration 700 of 1000: loss=0.837 " + "l1=0.774" + "l2=0.0625 f=-0.698 shape=(1, 9000, 1)
logits [[ 5.5150943 -2.225206   3.011175  -9.09309  ]]
Iteration 800 of 1000: loss=0.826 " + "l1=0.759" + "l2=0.0674 f=-0.692 shape=(1, 9000, 1)
logits [[ 5.421048  -2.169037   2.9673624 -8.988097 ]]
Iteration 900 of 1000: loss=0.816 " + "l1=0.745" + "l2=0.0711 f=-0.688 shape=(1, 9000, 1)
logits [[ 5.3353553 -2.116125   2.9217355 -8.8932905]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.39 " + "l1=9.39" + "l2=0 f=-0.716 shape=(1, 9000, 1)
logits [[ 6.431316  -2.9624639  3.567419  -9.898471 ]]
Iteration 100 of 1000: loss=6.5 " + "l1=5.04" + "l2=1.46 f=-0.624 shape=(1, 9000, 1)
logits [[ 3.612647  -1.4232789  2.4384975 -7.1243544]]
Iteration 200 of 1000: loss=5.14 " + "l1=3.31" + "l2=1.83 f=-0.562 shape=(1, 9000, 1)
logits [[ 2.3817685 -0.9282268  2.0240061 -5.7242017]]
Iteration 300 of 1000: loss=4.15 " + "l1=2.41" + "l2=1.74 f=-0.517 shape=(1, 9000, 1)
logits [[ 1.7499368 -0.6616249  1.7208661 -4.8775554]]
Iteration 400 of 1000: loss=3.64 " + "l1=2.02" + "l2=1.62 f=-0.465 shape=(1, 9000, 1)
logits [[ 1.5225269  -0.49313056  1.523512   -4.4112005 ]]
Iteration 500 of 1000: loss=3.33 " + "l1=1.78" + "l2=1.55 f=-0.424 shape=(1, 9000, 1)
logits [[ 1.3821709 -0.4011526  1.3782684 -4.0556984]]
Iteration 600 of 1000: loss=3.09 " + "l1=1.48" + "l2=1.6 f=-0.395 shape=(1, 9000, 1)
logits [[ 1.1875024 -0.2972161  1.1824614 -3.6529565]]
Iteration 700 of 1000: loss=2.89 " + "l1=1.3" + "l2=1.59 f=-0.369 shape=(1, 9000, 1)
logits [[ 1.0632383  -0.22725938  1.0716847  -3.3847654 ]]
Iteration 800 of 1000: loss=2.74 " + "l1=1.18" + "l2=1.55 f=-0.348 shape=(1, 9000, 1)
logits [[ 1.0162939  -0.16542098  1.0185101  -3.2620523 ]]
Iteration 900 of 1000: loss=2.61 " + "l1=1.08" + "l2=1.53 f=-0.325 shape=(1, 9000, 1)
logits [[ 0.9489314  -0.12415645  0.95557564 -3.0804527 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=93.9 " + "l1=93.9" + "l2=0 f=-0.716 shape=(1, 9000, 1)
logits [[ 6.431316  -2.9624639  3.567419  -9.898471 ]]
Iteration 100 of 1000: loss=21.4 " + "l1=8.41" + "l2=13 f=-0.448 shape=(1, 9000, 1)
logits [[ 0.9252082   0.13462314  0.9758055  -3.8281446 ]]
Iteration 200 of 1000: loss=11.2 " + "l1=0" + "l2=11.2 f=-0.423 shape=(1, 9000, 1)
logits [[ 0.52298844  0.5287457   0.52475077 -3.2677865 ]]
Iteration 300 of 1000: loss=9.3 " + "l1=0" + "l2=9.3 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.45779577  0.51570183  0.5107801  -3.1019614 ]]
Iteration 400 of 1000: loss=8.39 " + "l1=0.0267" + "l2=8.36 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.44060168  0.49161285  0.49427968 -3.0370786 ]]
Iteration 500 of 1000: loss=7.69 " + "l1=0" + "l2=7.69 f=-0.394 shape=(1, 9000, 1)
logits [[ 0.4537104   0.47807726  0.47443253 -2.981149  ]]
Iteration 600 of 1000: loss=7.2 " + "l1=0" + "l2=7.2 f=-0.398 shape=(1, 9000, 1)
logits [[ 0.40842733  0.46094614  0.45794055 -2.9196503 ]]
Iteration 700 of 1000: loss=6.91 " + "l1=0" + "l2=6.91 f=-0.4 shape=(1, 9000, 1)
logits [[ 0.379725    0.45904544  0.44029552 -2.880896  ]]
Iteration 800 of 1000: loss=6.58 " + "l1=0.0379" + "l2=6.54 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.3989118   0.43781996  0.44160685 -2.8913279 ]]
Iteration 900 of 1000: loss=6.39 " + "l1=0" + "l2=6.39 f=-0.399 shape=(1, 9000, 1)
logits [[ 0.37208095  0.44490713  0.4207845  -2.832033  ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=51.7 " + "l1=51.7" + "l2=0 f=-0.716 shape=(1, 9000, 1)
logits [[ 6.431316  -2.9624639  3.567419  -9.898471 ]]
Iteration 100 of 1000: loss=16.8 " + "l1=8.49" + "l2=8.28 f=-0.487 shape=(1, 9000, 1)
logits [[ 1.3362132  -0.20468599  1.3384105  -4.4198437 ]]
Iteration 200 of 1000: loss=10.3 " + "l1=0.658" + "l2=9.64 f=-0.414 shape=(1, 9000, 1)
logits [[ 0.5658608   0.46967342  0.58931273 -3.281396  ]]
Iteration 300 of 1000: loss=7.91 " + "l1=0.0168" + "l2=7.9 f=-0.402 shape=(1, 9000, 1)
logits [[ 0.46156117  0.4883181   0.49138096 -3.049918  ]]
Iteration 400 of 1000: loss=6.8 " + "l1=0.00458" + "l2=6.8 f=-0.415 shape=(1, 9000, 1)
logits [[ 0.44509172  0.467541    0.46837315 -3.03929   ]]
Iteration 500 of 1000: loss=6.18 " + "l1=0.075" + "l2=6.1 f=-0.414 shape=(1, 9000, 1)
logits [[ 0.4521881   0.44508895  0.45872614 -3.0113888 ]]
Iteration 600 of 1000: loss=5.74 " + "l1=0.0295" + "l2=5.71 f=-0.413 shape=(1, 9000, 1)
logits [[ 0.40294293  0.4421716   0.44754344 -2.9428458 ]]
Iteration 700 of 1000: loss=5.33 " + "l1=0.0259" + "l2=5.31 f=-0.415 shape=(1, 9000, 1)
logits [[ 0.3991134   0.4263241   0.43102604 -2.9145014 ]]
Iteration 800 of 1000: loss=4.91 " + "l1=0" + "l2=4.91 f=-0.416 shape=(1, 9000, 1)
logits [[ 0.400132    0.42725933  0.4248812  -2.916098  ]]
Iteration 900 of 1000: loss=4.59 " + "l1=0" + "l2=4.59 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.39947784  0.4187916   0.4141535  -2.8699048 ]]
--- 275.3561706542969 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0286 " + "l1=0.0286" + "l2=0 f=-0.716 shape=(1, 9000, 1)
logits [[ 6.431316  -2.9624639  3.567419  -9.898471 ]]
Iteration 100 of 1000: loss=0.0285 " + "l1=0.0284" + "l2=0.000151 f=-0.715 shape=(1, 9000, 1)
logits [[ 6.4103637 -2.968373   3.5752504 -9.878081 ]]
Iteration 200 of 1000: loss=0.0285 " + "l1=0.0283" + "l2=0.000128 f=-0.715 shape=(1, 9000, 1)
logits [[ 6.410708  -2.9689827  3.5762184 -9.878821 ]]
Iteration 300 of 1000: loss=0.0285 " + "l1=0.0283" + "l2=0.00016 f=-0.715 shape=(1, 9000, 1)
logits [[ 6.4091573 -2.9700572  3.5776188 -9.877583 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.286 " + "l1=0.286" + "l2=0 f=-0.716 shape=(1, 9000, 1)
logits [[ 6.431316  -2.9624639  3.567419  -9.898471 ]]
Iteration 100 of 1000: loss=0.274 " + "l1=0.268" + "l2=0.00657 f=-0.713 shape=(1, 9000, 1)
logits [[ 6.2969537 -3.0028627  3.6213682 -9.768225 ]]
Iteration 200 of 1000: loss=0.27 " + "l1=0.26" + "l2=0.00964 f=-0.713 shape=(1, 9000, 1)
logits [[ 6.248574  -3.023696   3.6466029 -9.722157 ]]
Iteration 300 of 1000: loss=0.267 " + "l1=0.254" + "l2=0.0125 f=-0.713 shape=(1, 9000, 1)
logits [[ 6.206678  -3.0381458  3.6649168 -9.68504  ]]
Iteration 400 of 1000: loss=0.264 " + "l1=0.249" + "l2=0.0147 f=-0.713 shape=(1, 9000, 1)
logits [[ 6.17355   -3.0484648  3.6792347 -9.656158 ]]
Iteration 500 of 1000: loss=0.262 " + "l1=0.246" + "l2=0.0165 f=-0.713 shape=(1, 9000, 1)
logits [[ 6.144822  -3.0536263  3.6883166 -9.63299  ]]
Iteration 600 of 1000: loss=0.26 " + "l1=0.242" + "l2=0.0179 f=-0.714 shape=(1, 9000, 1)
logits [[ 6.1162934 -3.0559497  3.6935503 -9.609854 ]]
Iteration 700 of 1000: loss=0.258 " + "l1=0.239" + "l2=0.0193 f=-0.714 shape=(1, 9000, 1)
logits [[ 6.0875797 -3.0587611  3.698607  -9.584647 ]]
Iteration 800 of 1000: loss=0.256 " + "l1=0.235" + "l2=0.0204 f=-0.715 shape=(1, 9000, 1)
logits [[ 6.057082  -3.0617354  3.7021465 -9.557191 ]]
Iteration 900 of 1000: loss=0.253 " + "l1=0.231" + "l2=0.0218 f=-0.715 shape=(1, 9000, 1)
logits [[ 6.0209656 -3.0673604  3.706171  -9.520315 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.86 " + "l1=2.86" + "l2=0 f=-0.716 shape=(1, 9000, 1)
logits [[ 6.431316  -2.9624639  3.567419  -9.898471 ]]
Iteration 100 of 1000: loss=1.49 " + "l1=0.67" + "l2=0.824 f=-0.716 shape=(1, 9000, 1)
logits [[ 4.5108824 -3.2086005  3.8412678 -8.008536 ]]
Iteration 200 of 1000: loss=0.962 " + "l1=0.00921" + "l2=0.953 f=-0.701 shape=(1, 9000, 1)
logits [[ 3.952946  -3.2960443  3.9437363 -7.4043694]]
Iteration 300 of 1000: loss=0.808 " + "l1=0.00831" + "l2=0.8 f=-0.7 shape=(1, 9000, 1)
logits [[ 3.9075048 -3.2839904  3.8991976 -7.3232512]]
Iteration 400 of 1000: loss=0.706 " + "l1=0.00359" + "l2=0.702 f=-0.7 shape=(1, 9000, 1)
logits [[ 3.8283238 -3.2606568  3.8247304 -7.1929975]]
Iteration 500 of 1000: loss=0.641 " + "l1=0.0048" + "l2=0.636 f=-0.703 shape=(1, 9000, 1)
logits [[ 3.762556  -3.2497149  3.7577589 -7.080844 ]]
Iteration 600 of 1000: loss=0.59 " + "l1=0.00509" + "l2=0.585 f=-0.705 shape=(1, 9000, 1)
logits [[ 3.6980572 -3.238792   3.6929693 -6.9716797]]
Iteration 700 of 1000: loss=0.551 " + "l1=0.00535" + "l2=0.545 f=-0.708 shape=(1, 9000, 1)
logits [[ 3.632722  -3.224771   3.6273763 -6.865978 ]]
Iteration 800 of 1000: loss=0.515 " + "l1=0.00211" + "l2=0.513 f=-0.711 shape=(1, 9000, 1)
logits [[ 3.5769296 -3.215579   3.5748174 -6.7783027]]
Iteration 900 of 1000: loss=0.49 " + "l1=0.0109" + "l2=0.479 f=-0.718 shape=(1, 9000, 1)
logits [[ 3.5364122 -3.212213   3.525529  -6.720805 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.58 " + "l1=1.58" + "l2=0 f=-0.716 shape=(1, 9000, 1)
logits [[ 6.431316  -2.9624639  3.567419  -9.898471 ]]
Iteration 100 of 1000: loss=1.18 " + "l1=0.957" + "l2=0.226 f=-0.711 shape=(1, 9000, 1)
logits [[ 5.504346  -3.1294923  3.7642856 -8.9845085]]
Iteration 200 of 1000: loss=0.999 " + "l1=0.652" + "l2=0.347 f=-0.711 shape=(1, 9000, 1)
logits [[ 4.999831  -3.1852767  3.8140147 -8.472732 ]]
Iteration 300 of 1000: loss=0.848 " + "l1=0.404" + "l2=0.445 f=-0.712 shape=(1, 9000, 1)
logits [[ 4.5630193 -3.2240815  3.8288956 -8.014542 ]]
Iteration 400 of 1000: loss=0.741 " + "l1=0.263" + "l2=0.478 f=-0.708 shape=(1, 9000, 1)
logits [[ 4.321819  -3.2778268  3.8434613 -7.7200336]]
Iteration 500 of 1000: loss=0.653 " + "l1=0.146" + "l2=0.507 f=-0.703 shape=(1, 9000, 1)
logits [[ 4.079703  -3.326159   3.8135457 -7.3792644]]
Iteration 600 of 1000: loss=0.558 " + "l1=0.016" + "l2=0.542 f=-0.687 shape=(1, 9000, 1)
logits [[ 3.7784452 -3.3143156  3.7493215 -6.9606543]]
Iteration 700 of 1000: loss=0.488 " + "l1=0.00611" + "l2=0.482 f=-0.675 shape=(1, 9000, 1)
logits [[ 3.6841583 -3.271997   3.6730564 -6.783324 ]]
Iteration 800 of 1000: loss=0.438 " + "l1=0.00395" + "l2=0.434 f=-0.666 shape=(1, 9000, 1)
logits [[ 3.624385  -3.2378602  3.617211  -6.669519 ]]
Iteration 900 of 1000: loss=0.396 " + "l1=0" + "l2=0.396 f=-0.664 shape=(1, 9000, 1)
logits [[ 3.5653615 -3.2064114  3.5694528 -6.5824676]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.931 " + "l1=0.931" + "l2=0 f=-0.716 shape=(1, 9000, 1)
logits [[ 6.431316  -2.9624639  3.567419  -9.898471 ]]
Iteration 100 of 1000: loss=0.797 " + "l1=0.72" + "l2=0.0767 f=-0.711 shape=(1, 9000, 1)
logits [[ 5.927617  -3.0796945  3.7110407 -9.404546 ]]
Iteration 200 of 1000: loss=0.739 " + "l1=0.626" + "l2=0.114 f=-0.711 shape=(1, 9000, 1)
logits [[ 5.688614  -3.125804   3.7639015 -9.17202  ]]
Iteration 300 of 1000: loss=0.694 " + "l1=0.549" + "l2=0.145 f=-0.715 shape=(1, 9000, 1)
logits [[ 5.475143  -3.1542692  3.7862887 -8.965993 ]]
Iteration 400 of 1000: loss=0.653 " + "l1=0.477" + "l2=0.176 f=-0.713 shape=(1, 9000, 1)
logits [[ 5.26168   -3.1681647  3.7941036 -8.741066 ]]
Iteration 500 of 1000: loss=0.609 " + "l1=0.413" + "l2=0.195 f=-0.71 shape=(1, 9000, 1)
logits [[ 5.070701  -3.1877708  3.7989118 -8.520146 ]]
Iteration 600 of 1000: loss=0.565 " + "l1=0.356" + "l2=0.209 f=-0.705 shape=(1, 9000, 1)
logits [[ 4.8898697 -3.2422786  3.7937791 -8.260558 ]]
Iteration 700 of 1000: loss=0.531 " + "l1=0.31" + "l2=0.22 f=-0.701 shape=(1, 9000, 1)
logits [[ 4.7170506 -3.2809591  3.7624505 -8.0018015]]
Iteration 800 of 1000: loss=0.497 " + "l1=0.269" + "l2=0.227 f=-0.696 shape=(1, 9000, 1)
logits [[ 4.563062  -3.2834847  3.7340415 -7.7962046]]
Iteration 900 of 1000: loss=0.463 " + "l1=0.227" + "l2=0.237 f=-0.684 shape=(1, 9000, 1)
logits [[ 4.399569  -3.2747943  3.7020168 -7.5640326]]
--- 258.8737635612488 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.163 " + "l1=0.163" + "l2=0 f=-0.716 shape=(1, 9000, 1)
logits [[ 6.431316  -2.9624639  3.567419  -9.898471 ]]
Iteration 100 of 1000: loss=0.163 " + "l1=0.162" + "l2=0.000486 f=-0.714 shape=(1, 9000, 1)
logits [[ 6.380727  -2.9478488  3.5484223 -9.835527 ]]
Iteration 200 of 1000: loss=0.163 " + "l1=0.162" + "l2=0.000499 f=-0.714 shape=(1, 9000, 1)
logits [[ 6.3725214 -2.943315   3.5444174 -9.828087 ]]
Iteration 300 of 1000: loss=0.162 " + "l1=0.162" + "l2=0.000602 f=-0.714 shape=(1, 9000, 1)
logits [[ 6.3626604 -2.938461   3.5397096 -9.818019 ]]
Iteration 400 of 1000: loss=0.162 " + "l1=0.162" + "l2=0.000715 f=-0.713 shape=(1, 9000, 1)
logits [[ 6.353818  -2.933984   3.5354214 -9.80909  ]]
Iteration 500 of 1000: loss=0.162 " + "l1=0.161" + "l2=0.000852 f=-0.713 shape=(1, 9000, 1)
logits [[ 6.346205  -2.9299939  3.5316598 -9.801512 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.63 " + "l1=1.63" + "l2=0 f=-0.716 shape=(1, 9000, 1)
logits [[ 6.431316  -2.9624639  3.567419  -9.898471 ]]
Iteration 100 of 1000: loss=1.57 " + "l1=1.53" + "l2=0.0375 f=-0.7 shape=(1, 9000, 1)
logits [[ 5.9802732 -2.8310616  3.4006212 -9.349933 ]]
Iteration 200 of 1000: loss=1.55 " + "l1=1.49" + "l2=0.0538 f=-0.698 shape=(1, 9000, 1)
logits [[ 5.785066  -2.770791   3.3266234 -9.131251 ]]
Iteration 300 of 1000: loss=1.52 " + "l1=1.45" + "l2=0.072 f=-0.695 shape=(1, 9000, 1)
logits [[ 5.5966334 -2.7166023  3.2594538 -8.921335 ]]
Iteration 400 of 1000: loss=1.5 " + "l1=1.42" + "l2=0.0882 f=-0.693 shape=(1, 9000, 1)
logits [[ 5.431067  -2.6702244  3.2006476 -8.734815 ]]
Iteration 500 of 1000: loss=1.48 " + "l1=1.38" + "l2=0.105 f=-0.692 shape=(1, 9000, 1)
logits [[ 5.2503304 -2.6233668  3.134927  -8.528832 ]]
Iteration 600 of 1000: loss=1.45 " + "l1=1.33" + "l2=0.125 f=-0.687 shape=(1, 9000, 1)
logits [[ 5.0310116 -2.5951862  3.0654824 -8.250985 ]]
Iteration 700 of 1000: loss=1.41 " + "l1=1.27" + "l2=0.141 f=-0.675 shape=(1, 9000, 1)
logits [[ 4.797243  -2.6023815  2.9827976 -7.878522 ]]
Iteration 800 of 1000: loss=1.35 " + "l1=1.19" + "l2=0.158 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.5062494 -2.5984983  2.8796268 -7.409291 ]]
Iteration 900 of 1000: loss=1.3 " + "l1=1.14" + "l2=0.161 f=-0.638 shape=(1, 9000, 1)
logits [[ 4.289052 -2.546006  2.779471 -7.074271]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=16.3 " + "l1=16.3" + "l2=0 f=-0.716 shape=(1, 9000, 1)
logits [[ 6.431316  -2.9624639  3.567419  -9.898471 ]]
Iteration 100 of 1000: loss=9.95 " + "l1=6.72" + "l2=3.23 f=-0.502 shape=(1, 9000, 1)
logits [[ 2.2697256 -2.0999918  2.2710268 -4.4471803]]
Iteration 200 of 1000: loss=7.87 " + "l1=4.6" + "l2=3.27 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.4922585 -1.5673785  1.4965729 -3.1050713]]
Iteration 300 of 1000: loss=6.53 " + "l1=3.09" + "l2=3.43 f=-0.356 shape=(1, 9000, 1)
logits [[ 0.88831353 -1.3247967   1.0534028  -2.0411475 ]]
Iteration 400 of 1000: loss=5.33 " + "l1=1.66" + "l2=3.68 f=-0.293 shape=(1, 9000, 1)
logits [[ 0.18777725 -1.2205575   0.75904065 -0.8971389 ]]
Iteration 500 of 1000: loss=4.28 " + "l1=0.624" + "l2=3.65 f=-0.244 shape=(1, 9000, 1)
logits [[-0.20032915 -1.12941     0.48816627 -0.13631228]]
Iteration 600 of 1000: loss=3.43 " + "l1=0.0243" + "l2=3.41 f=-0.229 shape=(1, 9000, 1)
logits [[-0.45638186 -1.1024797   0.33354738  0.30922922]]
Iteration 700 of 1000: loss=3.04 " + "l1=0.0235" + "l2=3.02 f=-0.238 shape=(1, 9000, 1)
logits [[-0.46050236 -1.1444199   0.33842573  0.31490123]]
Iteration 800 of 1000: loss=2.79 " + "l1=0.0303" + "l2=2.76 f=-0.247 shape=(1, 9000, 1)
logits [[-0.49320573 -1.1802408   0.35873187  0.32841796]]
Iteration 900 of 1000: loss=2.58 " + "l1=0" + "l2=2.58 f=-0.248 shape=(1, 9000, 1)
logits [[-0.52059543 -1.2138872   0.36487168  0.37946695]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=8.98 " + "l1=8.98" + "l2=0 f=-0.716 shape=(1, 9000, 1)
logits [[ 6.431316  -2.9624639  3.567419  -9.898471 ]]
Iteration 100 of 1000: loss=6.79 " + "l1=5.51" + "l2=1.28 f=-0.618 shape=(1, 9000, 1)
logits [[ 3.620148  -2.426598   2.7377949 -6.402271 ]]
Iteration 200 of 1000: loss=5.61 " + "l1=3.81" + "l2=1.8 f=-0.53 shape=(1, 9000, 1)
logits [[ 2.3069925 -2.1052172  2.2918677 -4.6151853]]
Iteration 300 of 1000: loss=4.72 " + "l1=3.06" + "l2=1.66 f=-0.493 shape=(1, 9000, 1)
logits [[ 1.7787542 -1.7508577  1.7775165 -3.7788744]]
Iteration 400 of 1000: loss=3.99 " + "l1=2.39" + "l2=1.61 f=-0.439 shape=(1, 9000, 1)
logits [[ 1.3625437 -1.5041068  1.3606145 -2.976207 ]]
Iteration 500 of 1000: loss=3.45 " + "l1=1.85" + "l2=1.6 f=-0.37 shape=(1, 9000, 1)
logits [[ 1.0774927 -1.3714827  1.0893599 -2.2739959]]
Iteration 600 of 1000: loss=3.05 " + "l1=1.38" + "l2=1.67 f=-0.306 shape=(1, 9000, 1)
logits [[ 0.8474263  -1.3255504   0.87909615 -1.6254005 ]]
Iteration 700 of 1000: loss=2.75 " + "l1=1.05" + "l2=1.71 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.6655217 -1.319745   0.7636899 -1.1384698]]
Iteration 800 of 1000: loss=2.5 " + "l1=0.735" + "l2=1.77 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.40358207 -1.3594761   0.6836374  -0.65352005]]
Iteration 900 of 1000: loss=2.19 " + "l1=0.407" + "l2=1.78 f=-0.225 shape=(1, 9000, 1)
logits [[ 0.10741451 -1.4088552   0.5712202  -0.16813728]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=12.7 " + "l1=12.7" + "l2=0 f=-0.716 shape=(1, 9000, 1)
logits [[ 6.431316  -2.9624639  3.567419  -9.898471 ]]
Iteration 100 of 1000: loss=8.52 " + "l1=6.13" + "l2=2.39 f=-0.544 shape=(1, 9000, 1)
logits [[ 2.7484934 -2.2705262  2.5055518 -5.1592174]]
Iteration 200 of 1000: loss=6.84 " + "l1=4.47" + "l2=2.37 f=-0.476 shape=(1, 9000, 1)
logits [[ 1.8886409 -1.8035468  1.8834896 -3.8735926]]
Iteration 300 of 1000: loss=5.59 " + "l1=3.21" + "l2=2.38 f=-0.41 shape=(1, 9000, 1)
logits [[ 1.3087615 -1.4905208  1.3404528 -2.800191 ]]
Iteration 400 of 1000: loss=4.6 " + "l1=2.11" + "l2=2.49 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.7697575 -1.2716454  0.9607138 -1.761984 ]]
Iteration 500 of 1000: loss=3.81 " + "l1=1.33" + "l2=2.48 f=-0.276 shape=(1, 9000, 1)
logits [[ 0.43079382 -1.241826    0.7125784  -1.0066059 ]]
Iteration 600 of 1000: loss=3.12 " + "l1=0.553" + "l2=2.57 f=-0.26 shape=(1, 9000, 1)
logits [[-0.03912775 -1.2687017   0.4913675  -0.22174186]]
Iteration 700 of 1000: loss=2.64 " + "l1=0.0362" + "l2=2.6 f=-0.235 shape=(1, 9000, 1)
logits [[-0.29662296 -1.2833855   0.34385863  0.29710057]]
Iteration 800 of 1000: loss=2.3 " + "l1=0.000119" + "l2=2.3 f=-0.236 shape=(1, 9000, 1)
logits [[-0.32935202 -1.3627114   0.3743753   0.37422115]]
Iteration 900 of 1000: loss=2.13 " + "l1=0.00765" + "l2=2.12 f=-0.236 shape=(1, 9000, 1)
logits [[-0.33828774 -1.4124123   0.40917432  0.39929968]]
--- 271.5138740539551 seconds ---
Adv result:3
Loading record A02757
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0454 " + "l1=0.0454" + "l2=0 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.2125678 -2.3273098  2.1035752 -2.997409 ]]
Iteration 100 of 1000: loss=0.0448 " + "l1=0.0445" + "l2=0.000354 f=-0.251 shape=(1, 9000, 1)
logits [[ 2.1566951 -2.2919235  2.0646424 -2.9322093]]
Iteration 200 of 1000: loss=0.0447 " + "l1=0.0443" + "l2=0.000356 f=-0.25 shape=(1, 9000, 1)
logits [[ 2.1461961 -2.2850578  2.0569694 -2.9199376]]
Iteration 300 of 1000: loss=0.0445 " + "l1=0.0441" + "l2=0.000415 f=-0.25 shape=(1, 9000, 1)
logits [[ 2.132325  -2.276268   2.0474603 -2.9041114]]
Iteration 400 of 1000: loss=0.0444 " + "l1=0.0439" + "l2=0.000521 f=-0.25 shape=(1, 9000, 1)
logits [[ 2.117599  -2.267418   2.0376444 -2.8873544]]
Iteration 500 of 1000: loss=0.0443 " + "l1=0.0436" + "l2=0.000651 f=-0.25 shape=(1, 9000, 1)
logits [[ 2.1024692 -2.2584398  2.027558  -2.8701541]]
Iteration 600 of 1000: loss=0.0441 " + "l1=0.0434" + "l2=0.000737 f=-0.249 shape=(1, 9000, 1)
logits [[ 2.0878892 -2.2496     2.0178714 -2.8537617]]
Iteration 700 of 1000: loss=0.044 " + "l1=0.0431" + "l2=0.000903 f=-0.249 shape=(1, 9000, 1)
logits [[ 2.0731528 -2.2408066  2.0082397 -2.837367 ]]
Iteration 800 of 1000: loss=0.044 " + "l1=0.0429" + "l2=0.00108 f=-0.249 shape=(1, 9000, 1)
logits [[ 2.0583498 -2.2320313  1.9987096 -2.8210409]]
Iteration 900 of 1000: loss=0.0439 " + "l1=0.0427" + "l2=0.00122 f=-0.249 shape=(1, 9000, 1)
logits [[ 2.0437791 -2.223778   1.9895703 -2.8053594]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.454 " + "l1=0.454" + "l2=0 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.2125678 -2.3273098  2.1035752 -2.997409 ]]
Iteration 100 of 1000: loss=0.397 " + "l1=0.364" + "l2=0.0332 f=-0.24 shape=(1, 9000, 1)
logits [[ 1.6858069 -1.9531368  1.6805634 -2.374677 ]]
Iteration 200 of 1000: loss=0.364 " + "l1=0.313" + "l2=0.0515 f=-0.239 shape=(1, 9000, 1)
logits [[ 1.3964798 -1.730595   1.3962603 -2.0166419]]
Iteration 300 of 1000: loss=0.335 " + "l1=0.271" + "l2=0.0635 f=-0.234 shape=(1, 9000, 1)
logits [[ 1.1716349 -1.5411952  1.1713594 -1.7383888]]
Iteration 400 of 1000: loss=0.299 " + "l1=0.219" + "l2=0.0807 f=-0.227 shape=(1, 9000, 1)
logits [[ 0.8924541 -1.2939812  0.8904382 -1.3961674]]
Iteration 500 of 1000: loss=0.268 " + "l1=0.175" + "l2=0.093 f=-0.219 shape=(1, 9000, 1)
logits [[ 0.6649708 -1.083613   0.6662855 -1.1255438]]
Iteration 600 of 1000: loss=0.25 " + "l1=0.149" + "l2=0.101 f=-0.211 shape=(1, 9000, 1)
logits [[ 0.53454834 -0.9526375   0.5358735  -0.96251225]]
Iteration 700 of 1000: loss=0.238 " + "l1=0.135" + "l2=0.103 f=-0.208 shape=(1, 9000, 1)
logits [[ 0.46466368 -0.8804677   0.46559173 -0.883681  ]]
Iteration 800 of 1000: loss=0.229 " + "l1=0.122" + "l2=0.107 f=-0.207 shape=(1, 9000, 1)
logits [[ 0.40344825 -0.81890124  0.4027678  -0.8153497 ]]
Iteration 900 of 1000: loss=0.221 " + "l1=0.111" + "l2=0.11 f=-0.204 shape=(1, 9000, 1)
logits [[ 0.34623244 -0.76017183  0.3474662  -0.7495476 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.54 " + "l1=4.54" + "l2=0 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.2125678 -2.3273098  2.1035752 -2.997409 ]]
Iteration 100 of 1000: loss=0.859 " + "l1=0" + "l2=0.859 f=-0.24 shape=(1, 9000, 1)
logits [[-0.3040152  -0.21581225 -0.21858166 -0.22232983]]
Iteration 200 of 1000: loss=0.559 " + "l1=0.00156" + "l2=0.557 f=-0.236 shape=(1, 9000, 1)
logits [[-0.258554   -0.21190919 -0.21035258 -0.26483148]]
Iteration 300 of 1000: loss=0.459 " + "l1=0.0093" + "l2=0.449 f=-0.235 shape=(1, 9000, 1)
logits [[-0.23234704 -0.20220804 -0.1929089  -0.31133994]]
Iteration 400 of 1000: loss=0.398 " + "l1=0" + "l2=0.398 f=-0.232 shape=(1, 9000, 1)
logits [[-0.28591913 -0.19946891 -0.222487   -0.21832642]]
Iteration 500 of 1000: loss=0.355 " + "l1=0.00261" + "l2=0.353 f=-0.233 shape=(1, 9000, 1)
logits [[-0.2149494  -0.19347171 -0.19086614 -0.33085862]]
Iteration 600 of 1000: loss=0.325 " + "l1=0" + "l2=0.325 f=-0.228 shape=(1, 9000, 1)
logits [[-0.25461346 -0.1901176  -0.21455976 -0.2521772 ]]
Iteration 700 of 1000: loss=0.298 " + "l1=0" + "l2=0.298 f=-0.227 shape=(1, 9000, 1)
logits [[-0.24901795 -0.19659606 -0.20577645 -0.25738847]]
Iteration 800 of 1000: loss=0.277 " + "l1=0.000185" + "l2=0.276 f=-0.228 shape=(1, 9000, 1)
logits [[-0.23944488 -0.19400506 -0.19382046 -0.28499436]]
Iteration 900 of 1000: loss=0.262 " + "l1=0" + "l2=0.262 f=-0.229 shape=(1, 9000, 1)
logits [[-0.24990472 -0.17838272 -0.19176425 -0.29424182]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.5 " + "l1=2.5" + "l2=0 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.2125678 -2.3273098  2.1035752 -2.997409 ]]
Iteration 100 of 1000: loss=0.881 " + "l1=0.247" + "l2=0.635 f=-0.223 shape=(1, 9000, 1)
logits [[-0.09922177 -0.49923724 -0.05097135 -0.24133825]]
Iteration 200 of 1000: loss=0.498 " + "l1=0.00782" + "l2=0.491 f=-0.248 shape=(1, 9000, 1)
logits [[-0.30353412 -0.22127037 -0.20705533 -0.26147023]]
Iteration 300 of 1000: loss=0.395 " + "l1=0" + "l2=0.395 f=-0.243 shape=(1, 9000, 1)
logits [[-0.29299277 -0.20489255 -0.21003754 -0.2642902 ]]
Iteration 400 of 1000: loss=0.345 " + "l1=6.25e-05" + "l2=0.344 f=-0.242 shape=(1, 9000, 1)
logits [[-0.32022426 -0.20984675 -0.22735725 -0.20973304]]
Iteration 500 of 1000: loss=0.303 " + "l1=0" + "l2=0.303 f=-0.24 shape=(1, 9000, 1)
logits [[-0.30917376 -0.20596142 -0.22096066 -0.22456092]]
Iteration 600 of 1000: loss=0.272 " + "l1=0" + "l2=0.272 f=-0.234 shape=(1, 9000, 1)
logits [[-0.29335853 -0.20387383 -0.20959356 -0.23093638]]
Iteration 700 of 1000: loss=0.25 " + "l1=0" + "l2=0.25 f=-0.232 shape=(1, 9000, 1)
logits [[-0.27391657 -0.1911267  -0.19829865 -0.26297358]]
Iteration 800 of 1000: loss=0.235 " + "l1=0" + "l2=0.235 f=-0.229 shape=(1, 9000, 1)
logits [[-0.27337578 -0.17793038 -0.19599769 -0.26897103]]
Iteration 900 of 1000: loss=0.219 " + "l1=0" + "l2=0.219 f=-0.224 shape=(1, 9000, 1)
logits [[-0.2628002  -0.18267898 -0.18655032 -0.2629471 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.48 " + "l1=1.48" + "l2=0 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.2125678 -2.3273098  2.1035752 -2.997409 ]]
Iteration 100 of 1000: loss=0.829 " + "l1=0.467" + "l2=0.362 f=-0.203 shape=(1, 9000, 1)
logits [[ 0.49444416 -0.93817586  0.49781302 -0.8678183 ]]
Iteration 200 of 1000: loss=0.538 " + "l1=0.2" + "l2=0.338 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.02704109 -0.5695959   0.04509713 -0.4231709 ]]
Iteration 300 of 1000: loss=0.403 " + "l1=0.0587" + "l2=0.345 f=-0.247 shape=(1, 9000, 1)
logits [[-0.309702   -0.34148452 -0.16083866 -0.17577198]]
Iteration 400 of 1000: loss=0.319 " + "l1=0.00291" + "l2=0.316 f=-0.253 shape=(1, 9000, 1)
logits [[-0.36083934 -0.2177879  -0.20883916 -0.22306645]]
Iteration 500 of 1000: loss=0.272 " + "l1=0.000355" + "l2=0.272 f=-0.243 shape=(1, 9000, 1)
logits [[-0.35082176 -0.20480226 -0.21124656 -0.20370868]]
Iteration 600 of 1000: loss=0.242 " + "l1=0.00325" + "l2=0.239 f=-0.229 shape=(1, 9000, 1)
logits [[-0.31060556 -0.20399101 -0.1939853  -0.20931375]]
Iteration 700 of 1000: loss=0.22 " + "l1=0.00267" + "l2=0.218 f=-0.218 shape=(1, 9000, 1)
logits [[-0.29460377 -0.18992998 -0.18172745 -0.20560685]]
Iteration 800 of 1000: loss=0.208 " + "l1=0.0046" + "l2=0.203 f=-0.211 shape=(1, 9000, 1)
logits [[-0.2901372  -0.18502934 -0.17088847 -0.19911307]]
Iteration 900 of 1000: loss=0.199 " + "l1=0.00499" + "l2=0.194 f=-0.207 shape=(1, 9000, 1)
logits [[-0.2872068  -0.18063496 -0.16527322 -0.1960538 ]]
--- 298.14310336112976 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00109 " + "l1=0.00109" + "l2=0 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.2125678 -2.3273098  2.1035752 -2.997409 ]]
Iteration 100 of 1000: loss=0.000943 " + "l1=0.000811" + "l2=0.000132 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.187968  -2.3302941  2.1068459 -2.9720364]]
Iteration 200 of 1000: loss=0.000892 " + "l1=0.00079" + "l2=0.000102 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.1857471 -2.3302996  2.106737  -2.969779 ]]
Iteration 300 of 1000: loss=0.000878 " + "l1=0.000741" + "l2=0.000137 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.1811583 -2.3307555  2.107086  -2.965251 ]]
Iteration 400 of 1000: loss=0.000852 " + "l1=0.000684" + "l2=0.000167 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.1758726 -2.3312178  2.1074243 -2.9600246]]
Iteration 500 of 1000: loss=0.000846 " + "l1=0.000627" + "l2=0.000219 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.1703982 -2.3316329  2.1076834 -2.9546807]]
Iteration 600 of 1000: loss=0.000877 " + "l1=0.000572" + "l2=0.000304 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.1653059 -2.3321018  2.1080813 -2.9498763]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0109 " + "l1=0.0109" + "l2=0 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.2125678 -2.3273098  2.1035752 -2.997409 ]]
Iteration 100 of 1000: loss=0.00199 " + "l1=0" + "l2=0.00199 f=-0.251 shape=(1, 9000, 1)
logits [[ 2.1206481 -2.3402598  2.1209269 -2.906887 ]]
Iteration 200 of 1000: loss=0.0013 " + "l1=0.000114" + "l2=0.00119 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.1183667 -2.3393478  2.117225  -2.9032178]]
Iteration 300 of 1000: loss=0.000957 " + "l1=2.52e-05" + "l2=0.000931 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.1150362 -2.3383698  2.1147845 -2.9000247]]
Iteration 400 of 1000: loss=0.000865 " + "l1=0" + "l2=0.000865 f=-0.253 shape=(1, 9000, 1)
logits [[ 2.1121051 -2.3373408  2.112571  -2.897338 ]]
Iteration 500 of 1000: loss=0.000786 " + "l1=0" + "l2=0.000786 f=-0.253 shape=(1, 9000, 1)
logits [[ 2.1097023 -2.3364735  2.1107962 -2.8954027]]
Iteration 600 of 1000: loss=0.000795 " + "l1=0" + "l2=0.000795 f=-0.253 shape=(1, 9000, 1)
logits [[ 2.1076396 -2.335699   2.109385  -2.8940148]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.00599 " + "l1=0.00599" + "l2=0 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.2125678 -2.3273098  2.1035752 -2.997409 ]]
Iteration 100 of 1000: loss=0.00241 " + "l1=0.000716" + "l2=0.00169 f=-0.251 shape=(1, 9000, 1)
logits [[ 2.1325564 -2.3392696  2.1195376 -2.9180658]]
Iteration 200 of 1000: loss=0.00132 " + "l1=2.25e-05" + "l2=0.0013 f=-0.251 shape=(1, 9000, 1)
logits [[ 2.118694  -2.3398428  2.1182857 -2.903033 ]]
Iteration 300 of 1000: loss=0.000992 " + "l1=0" + "l2=0.000992 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.1154218 -2.3389213  2.1157038 -2.8997936]]
Iteration 400 of 1000: loss=0.000848 " + "l1=1.85e-06" + "l2=0.000847 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.1131825 -2.3376846  2.113149  -2.8978639]]
Iteration 500 of 1000: loss=0.000777 " + "l1=0" + "l2=0.000777 f=-0.253 shape=(1, 9000, 1)
logits [[ 2.10999   -2.3369532  2.1115124 -2.8952992]]
Iteration 600 of 1000: loss=0.000748 " + "l1=0" + "l2=0.000748 f=-0.253 shape=(1, 9000, 1)
logits [[ 2.1086972 -2.3359942  2.1097305 -2.894502 ]]
Iteration 700 of 1000: loss=0.000736 " + "l1=1.05e-05" + "l2=0.000726 f=-0.253 shape=(1, 9000, 1)
logits [[ 2.108457  -2.335111   2.1082664 -2.8950384]]
Iteration 800 of 1000: loss=0.000813 " + "l1=4.75e-05" + "l2=0.000765 f=-0.254 shape=(1, 9000, 1)
logits [[ 2.108004  -2.334292   2.1071413 -2.8956983]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00354 " + "l1=0.00354" + "l2=0 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.2125678 -2.3273098  2.1035752 -2.997409 ]]
Iteration 100 of 1000: loss=0.00219 " + "l1=0.00151" + "l2=0.000682 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.1589754 -2.3345797  2.1125944 -2.9435403]]
Iteration 200 of 1000: loss=0.00169 " + "l1=0.000877" + "l2=0.000815 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.1424572 -2.3367667  2.1154838 -2.9274418]]
Iteration 300 of 1000: loss=0.00124 " + "l1=0.000209" + "l2=0.00103 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.1234105 -2.3388236  2.1169906 -2.9087498]]
Iteration 400 of 1000: loss=0.000917 " + "l1=7.8e-06" + "l2=0.000909 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.1152213 -2.338301   2.1149814 -2.9005578]]
Iteration 500 of 1000: loss=0.000808 " + "l1=0" + "l2=0.000808 f=-0.253 shape=(1, 9000, 1)
logits [[ 2.1124964 -2.3373077  2.112678  -2.8982508]]
Iteration 600 of 1000: loss=0.000759 " + "l1=1.25e-06" + "l2=0.000758 f=-0.253 shape=(1, 9000, 1)
logits [[ 2.1107125 -2.3363373  2.1106741 -2.896786 ]]
Iteration 700 of 1000: loss=0.000735 " + "l1=7e-06" + "l2=0.000728 f=-0.253 shape=(1, 9000, 1)
logits [[ 2.1093261 -2.3354738  2.1091106 -2.8960307]]
Iteration 800 of 1000: loss=0.000713 " + "l1=0" + "l2=0.000713 f=-0.254 shape=(1, 9000, 1)
logits [[ 2.1077347 -2.334844   2.108174  -2.8954556]]
Iteration 900 of 1000: loss=0.000792 " + "l1=0" + "l2=0.000792 f=-0.254 shape=(1, 9000, 1)
logits [[ 2.1069493 -2.3342469  2.1073427 -2.8958027]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00232 " + "l1=0.00232" + "l2=0 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.2125678 -2.3273098  2.1035752 -2.997409 ]]
Iteration 100 of 1000: loss=0.0017 " + "l1=0.00135" + "l2=0.000347 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.1732197 -2.3325489  2.1097581 -2.9576259]]
Iteration 200 of 1000: loss=0.0015 " + "l1=0.00112" + "l2=0.000376 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.1636505 -2.3335512  2.1108506 -2.947985 ]]
Iteration 300 of 1000: loss=0.00133 " + "l1=0.000862" + "l2=0.000466 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.1529298 -2.3348277  2.1123688 -2.937684 ]]
Iteration 400 of 1000: loss=0.00115 " + "l1=0.000613" + "l2=0.000539 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.1419137 -2.3361347  2.113077  -2.9270854]]
Iteration 500 of 1000: loss=0.00103 " + "l1=0.000356" + "l2=0.000676 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.1299493 -2.3371584  2.1131895 -2.915311 ]]
Iteration 600 of 1000: loss=0.000912 " + "l1=0.000106" + "l2=0.000806 f=-0.253 shape=(1, 9000, 1)
logits [[ 2.118021  -2.3376584  2.1130238 -2.9041083]]
Iteration 700 of 1000: loss=0.000755 " + "l1=0" + "l2=0.000755 f=-0.253 shape=(1, 9000, 1)
logits [[ 2.11141   -2.3371325  2.1114953 -2.8979692]]
Iteration 800 of 1000: loss=0.00087 " + "l1=0" + "l2=0.00087 f=-0.253 shape=(1, 9000, 1)
logits [[ 2.1096659 -2.3362668  2.1098075 -2.8968637]]
--- 223.82865500450134 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0521 " + "l1=0.0521" + "l2=0 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.2125678 -2.3273098  2.1035752 -2.997409 ]]
Iteration 100 of 1000: loss=0.0508 " + "l1=0.0501" + "l2=0.000702 f=-0.248 shape=(1, 9000, 1)
logits [[ 2.1316977 -2.2998588  2.0553243 -2.8776238]]
Iteration 200 of 1000: loss=0.0504 " + "l1=0.0496" + "l2=0.00081 f=-0.247 shape=(1, 9000, 1)
logits [[ 2.1096137 -2.2931979  2.0425842 -2.846954 ]]
Iteration 300 of 1000: loss=0.0499 " + "l1=0.0489" + "l2=0.000988 f=-0.246 shape=(1, 9000, 1)
logits [[ 2.0831382 -2.2849295  2.0275452 -2.8099055]]
Iteration 400 of 1000: loss=0.0495 " + "l1=0.0482" + "l2=0.00124 f=-0.245 shape=(1, 9000, 1)
logits [[ 2.0541472 -2.2768857  2.0116704 -2.769752 ]]
Iteration 500 of 1000: loss=0.0491 " + "l1=0.0476" + "l2=0.00149 f=-0.244 shape=(1, 9000, 1)
logits [[ 2.0269184 -2.2694051  1.9965535 -2.73201  ]]
Iteration 600 of 1000: loss=0.0487 " + "l1=0.047" + "l2=0.00178 f=-0.244 shape=(1, 9000, 1)
logits [[ 2.0011196 -2.2616212  1.9818634 -2.6957123]]
Iteration 700 of 1000: loss=0.0484 " + "l1=0.0464" + "l2=0.00198 f=-0.243 shape=(1, 9000, 1)
logits [[ 1.9764898 -2.2543607  1.9681865 -2.6609273]]
Iteration 800 of 1000: loss=0.0481 " + "l1=0.0458" + "l2=0.00224 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.9548466 -2.2474096  1.9547901 -2.6289065]]
Iteration 900 of 1000: loss=0.0479 " + "l1=0.0455" + "l2=0.00249 f=-0.241 shape=(1, 9000, 1)
logits [[ 1.9401703 -2.239628   1.9403163 -2.6047475]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.521 " + "l1=0.521" + "l2=0 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.2125678 -2.3273098  2.1035752 -2.997409 ]]
Iteration 100 of 1000: loss=0.39 " + "l1=0.317" + "l2=0.073 f=-0.216 shape=(1, 9000, 1)
logits [[ 1.3962845 -1.9296962  1.4202214 -1.751858 ]]
Iteration 200 of 1000: loss=0.325 " + "l1=0.225" + "l2=0.101 f=-0.2 shape=(1, 9000, 1)
logits [[ 0.9971247 -1.738684   1.0946578 -1.1527768]]
Iteration 300 of 1000: loss=0.262 " + "l1=0.136" + "l2=0.126 f=-0.19 shape=(1, 9000, 1)
logits [[ 0.61159194 -1.4840163   0.7352847  -0.62293756]]
Iteration 400 of 1000: loss=0.209 " + "l1=0.0529" + "l2=0.156 f=-0.185 shape=(1, 9000, 1)
logits [[ 0.256668  -1.2414376  0.3867099 -0.1424976]]
Iteration 500 of 1000: loss=0.178 " + "l1=0.011" + "l2=0.167 f=-0.178 shape=(1, 9000, 1)
logits [[ 0.05542649 -1.1611851   0.25258344  0.1421969 ]]
Iteration 600 of 1000: loss=0.158 " + "l1=0.0017" + "l2=0.156 f=-0.176 shape=(1, 9000, 1)
logits [[ 0.00317538 -1.146747    0.22774832  0.21073762]]
Iteration 700 of 1000: loss=0.146 " + "l1=0.00184" + "l2=0.144 f=-0.177 shape=(1, 9000, 1)
logits [[-0.00814245 -1.1551346   0.23647834  0.21806198]]
Iteration 800 of 1000: loss=0.137 " + "l1=0.000313" + "l2=0.136 f=-0.178 shape=(1, 9000, 1)
logits [[-0.02468657 -1.167307    0.24181129  0.23868018]]
Iteration 900 of 1000: loss=0.131 " + "l1=0.0042" + "l2=0.127 f=-0.179 shape=(1, 9000, 1)
logits [[-0.01798209 -1.188942    0.26644453  0.22449219]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.287 " + "l1=0.287" + "l2=0 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.2125678 -2.3273098  2.1035752 -2.997409 ]]
Iteration 100 of 1000: loss=0.249 " + "l1=0.231" + "l2=0.0186 f=-0.231 shape=(1, 9000, 1)
logits [[ 1.8065995 -2.1521268  1.8070115 -2.386351 ]]
Iteration 200 of 1000: loss=0.231 " + "l1=0.204" + "l2=0.0272 f=-0.225 shape=(1, 9000, 1)
logits [[ 1.6122763 -2.055353   1.6218202 -2.0792444]]
Iteration 300 of 1000: loss=0.215 " + "l1=0.18" + "l2=0.0349 f=-0.222 shape=(1, 9000, 1)
logits [[ 1.4293512 -1.9691272  1.4615229 -1.8085353]]
Iteration 400 of 1000: loss=0.2 " + "l1=0.156" + "l2=0.0435 f=-0.215 shape=(1, 9000, 1)
logits [[ 1.2434089 -1.873421   1.3052319 -1.5357065]]
Iteration 500 of 1000: loss=0.185 " + "l1=0.133" + "l2=0.052 f=-0.21 shape=(1, 9000, 1)
logits [[ 1.0581852 -1.7654628  1.1464981 -1.2787715]]
Iteration 600 of 1000: loss=0.171 " + "l1=0.109" + "l2=0.0622 f=-0.206 shape=(1, 9000, 1)
logits [[ 0.8609599  -1.6301019   0.96062773 -1.0171614 ]]
Iteration 700 of 1000: loss=0.161 " + "l1=0.0915" + "l2=0.0691 f=-0.201 shape=(1, 9000, 1)
logits [[ 0.71858096 -1.538271    0.8394388  -0.82505566]]
Iteration 800 of 1000: loss=0.152 " + "l1=0.0769" + "l2=0.0755 f=-0.198 shape=(1, 9000, 1)
logits [[ 0.5942916  -1.4730512   0.743635   -0.65518653]]
Iteration 900 of 1000: loss=0.146 " + "l1=0.0677" + "l2=0.0786 f=-0.197 shape=(1, 9000, 1)
logits [[ 0.5179179  -1.4380698   0.68209225 -0.5480438 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.404 " + "l1=0.404" + "l2=0 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.2125678 -2.3273098  2.1035752 -2.997409 ]]
Iteration 100 of 1000: loss=0.328 " + "l1=0.29" + "l2=0.0383 f=-0.222 shape=(1, 9000, 1)
logits [[ 1.6334974 -2.055601   1.6381513 -2.105755 ]]
Iteration 200 of 1000: loss=0.289 " + "l1=0.229" + "l2=0.0601 f=-0.214 shape=(1, 9000, 1)
logits [[ 1.3015571 -1.8912303  1.344825  -1.609635 ]]
Iteration 300 of 1000: loss=0.255 " + "l1=0.181" + "l2=0.0742 f=-0.203 shape=(1, 9000, 1)
logits [[ 1.0301026 -1.7547497  1.122839  -1.2095746]]
Iteration 400 of 1000: loss=0.22 " + "l1=0.127" + "l2=0.0924 f=-0.197 shape=(1, 9000, 1)
logits [[ 0.73026    -1.552893    0.83960056 -0.8053151 ]]
Iteration 500 of 1000: loss=0.191 " + "l1=0.0817" + "l2=0.109 f=-0.191 shape=(1, 9000, 1)
logits [[ 0.46917105 -1.3756936   0.5986644  -0.45524862]]
Iteration 600 of 1000: loss=0.172 " + "l1=0.0513" + "l2=0.121 f=-0.187 shape=(1, 9000, 1)
logits [[ 0.30146497 -1.2779562   0.44477242 -0.2175493 ]]
Iteration 700 of 1000: loss=0.16 " + "l1=0.0334" + "l2=0.126 f=-0.185 shape=(1, 9000, 1)
logits [[ 0.18358776 -1.2310655   0.36850935 -0.06302327]]
Iteration 800 of 1000: loss=0.147 " + "l1=0.0126" + "l2=0.135 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.05569092 -1.1832367   0.28007218  0.11793045]]
Iteration 900 of 1000: loss=0.137 " + "l1=0.0015" + "l2=0.136 f=-0.179 shape=(1, 9000, 1)
logits [[-0.01550723 -1.1690898   0.24297832  0.22368366]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.345 " + "l1=0.345" + "l2=0 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.2125678 -2.3273098  2.1035752 -2.997409 ]]
Iteration 100 of 1000: loss=0.291 " + "l1=0.263" + "l2=0.0278 f=-0.226 shape=(1, 9000, 1)
logits [[ 1.7220969 -2.100336   1.722835  -2.2475684]]
Iteration 200 of 1000: loss=0.263 " + "l1=0.222" + "l2=0.0412 f=-0.222 shape=(1, 9000, 1)
logits [[ 1.4705007 -1.9828409  1.4905616 -1.8646817]]
Iteration 300 of 1000: loss=0.239 " + "l1=0.185" + "l2=0.0539 f=-0.212 shape=(1, 9000, 1)
logits [[ 1.2344534 -1.8587424  1.2877963 -1.511586 ]]
Iteration 400 of 1000: loss=0.216 " + "l1=0.151" + "l2=0.0646 f=-0.205 shape=(1, 9000, 1)
logits [[ 1.0063462 -1.7338897  1.096262  -1.1879832]]
Iteration 500 of 1000: loss=0.192 " + "l1=0.114" + "l2=0.0786 f=-0.201 shape=(1, 9000, 1)
logits [[ 0.757423   -1.5574998   0.85758454 -0.8609603 ]]
Iteration 600 of 1000: loss=0.175 " + "l1=0.0841" + "l2=0.091 f=-0.195 shape=(1, 9000, 1)
logits [[ 0.5535203  -1.4290149   0.68265414 -0.5860791 ]]
Iteration 700 of 1000: loss=0.163 " + "l1=0.0646" + "l2=0.0986 f=-0.192 shape=(1, 9000, 1)
logits [[ 0.4228478  -1.3675483   0.5755571  -0.39946818]]
Iteration 800 of 1000: loss=0.154 " + "l1=0.0496" + "l2=0.104 f=-0.19 shape=(1, 9000, 1)
logits [[ 0.3241188  -1.3140934   0.4901427  -0.25831288]]
Iteration 900 of 1000: loss=0.146 " + "l1=0.0379" + "l2=0.108 f=-0.188 shape=(1, 9000, 1)
logits [[ 0.23743302 -1.277923    0.430258   -0.14248896]]
--- 301.5142912864685 seconds ---
Adv result:3
Loading record A02776
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0443 " + "l1=0.0443" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.237227  -2.1929011  2.1148849 -3.3734972]]
Iteration 100 of 1000: loss=0.0438 " + "l1=0.0435" + "l2=0.000309 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.1900938 -2.1606789  2.0910952 -3.32387  ]]
Iteration 200 of 1000: loss=0.0437 " + "l1=0.0434" + "l2=0.000339 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.1816237 -2.1534274  2.0860057 -3.3150353]]
Iteration 300 of 1000: loss=0.0436 " + "l1=0.0432" + "l2=0.000443 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.1722255 -2.145546   2.0804815 -3.305521 ]]
Iteration 400 of 1000: loss=0.0435 " + "l1=0.043" + "l2=0.000511 f=-0.299 shape=(1, 9000, 1)
logits [[ 2.163301  -2.1379848  2.0752394 -3.2966502]]
Iteration 500 of 1000: loss=0.0435 " + "l1=0.0429" + "l2=0.000619 f=-0.298 shape=(1, 9000, 1)
logits [[ 2.1550536 -2.1308744  2.070516  -3.288636 ]]
Iteration 600 of 1000: loss=0.0434 " + "l1=0.0427" + "l2=0.000719 f=-0.298 shape=(1, 9000, 1)
logits [[ 2.1471798 -2.1240911  2.0661182 -3.281262 ]]
Iteration 700 of 1000: loss=0.0434 " + "l1=0.0426" + "l2=0.000837 f=-0.298 shape=(1, 9000, 1)
logits [[ 2.1394088 -2.117454   2.0619223 -3.2740042]]
Iteration 800 of 1000: loss=0.0434 " + "l1=0.0424" + "l2=0.000932 f=-0.297 shape=(1, 9000, 1)
logits [[ 2.1329603 -2.1118488  2.058475  -3.2679286]]
Iteration 900 of 1000: loss=0.0434 " + "l1=0.0423" + "l2=0.00105 f=-0.297 shape=(1, 9000, 1)
logits [[ 2.1266756 -2.106971   2.0553274 -3.2622368]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.443 " + "l1=0.443" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.237227  -2.1929011  2.1148849 -3.3734972]]
Iteration 100 of 1000: loss=0.404 " + "l1=0.388" + "l2=0.0165 f=-0.278 shape=(1, 9000, 1)
logits [[ 1.9312809 -1.9471388  1.9314367 -3.0259395]]
Iteration 200 of 1000: loss=0.393 " + "l1=0.373" + "l2=0.0202 f=-0.268 shape=(1, 9000, 1)
logits [[ 1.8631077 -1.86323    1.8648462 -2.9387188]]
Iteration 300 of 1000: loss=0.385 " + "l1=0.362" + "l2=0.0236 f=-0.262 shape=(1, 9000, 1)
logits [[ 1.8150021 -1.8017333  1.8170373 -2.8775244]]
Iteration 400 of 1000: loss=0.38 " + "l1=0.353" + "l2=0.0267 f=-0.256 shape=(1, 9000, 1)
logits [[ 1.7733465 -1.7509044  1.7775345 -2.8242738]]
Iteration 500 of 1000: loss=0.375 " + "l1=0.346" + "l2=0.0284 f=-0.254 shape=(1, 9000, 1)
logits [[ 1.7422047 -1.7178469  1.7471075 -2.786021 ]]
Iteration 600 of 1000: loss=0.371 " + "l1=0.34" + "l2=0.0305 f=-0.253 shape=(1, 9000, 1)
logits [[ 1.7079134 -1.6876323  1.7156994 -2.7495153]]
Iteration 700 of 1000: loss=0.367 " + "l1=0.336" + "l2=0.0311 f=-0.253 shape=(1, 9000, 1)
logits [[ 1.6907563 -1.6687014  1.691604  -2.7245872]]
Iteration 800 of 1000: loss=0.364 " + "l1=0.333" + "l2=0.0307 f=-0.252 shape=(1, 9000, 1)
logits [[ 1.6716483 -1.6525829  1.6769067 -2.7053084]]
Iteration 900 of 1000: loss=0.36 " + "l1=0.329" + "l2=0.031 f=-0.248 shape=(1, 9000, 1)
logits [[ 1.6538812 -1.6305046  1.6600913 -2.675909 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.43 " + "l1=4.43" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.237227  -2.1929011  2.1148849 -3.3734972]]
Iteration 100 of 1000: loss=2.64 " + "l1=1.94" + "l2=0.702 f=-0.175 shape=(1, 9000, 1)
logits [[ 0.7656342 -0.9894741  0.9455683 -1.4204924]]
Iteration 200 of 1000: loss=2.16 " + "l1=1.43" + "l2=0.73 f=-0.162 shape=(1, 9000, 1)
logits [[ 0.57139647 -0.753708    0.6733261  -1.1386783 ]]
Iteration 300 of 1000: loss=1.94 " + "l1=1.17" + "l2=0.768 f=-0.153 shape=(1, 9000, 1)
logits [[ 0.4458149  -0.61387676  0.55334187 -0.99653107]]
Iteration 400 of 1000: loss=1.82 " + "l1=1.02" + "l2=0.799 f=-0.139 shape=(1, 9000, 1)
logits [[ 0.37050694 -0.5453655   0.4706902  -0.8498606 ]]
Iteration 500 of 1000: loss=1.73 " + "l1=0.907" + "l2=0.824 f=-0.135 shape=(1, 9000, 1)
logits [[ 0.30037618 -0.50054485  0.40600693 -0.7450437 ]]
Iteration 600 of 1000: loss=1.63 " + "l1=0.752" + "l2=0.877 f=-0.128 shape=(1, 9000, 1)
logits [[ 0.22422552 -0.42221898  0.32939938 -0.64316297]]
Iteration 700 of 1000: loss=1.51 " + "l1=0.623" + "l2=0.886 f=-0.122 shape=(1, 9000, 1)
logits [[ 0.1693573  -0.3623323   0.26024312 -0.553725  ]]
Iteration 800 of 1000: loss=1.35 " + "l1=0.468" + "l2=0.877 f=-0.113 shape=(1, 9000, 1)
logits [[ 0.12832515 -0.29222792  0.17608468 -0.4622235 ]]
Iteration 900 of 1000: loss=1.14 " + "l1=0.222" + "l2=0.919 f=-0.106 shape=(1, 9000, 1)
logits [[ 0.03803155 -0.17299317  0.04920214 -0.3388862 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=44.3 " + "l1=44.3" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.237227  -2.1929011  2.1148849 -3.3734972]]
Iteration 100 of 1000: loss=5.83 " + "l1=0.111" + "l2=5.72 f=-0.167 shape=(1, 9000, 1)
logits [[-0.57620627  0.01645115  0.0275193  -0.13614318]]
Iteration 200 of 1000: loss=4.09 " + "l1=0" + "l2=4.09 f=-0.164 shape=(1, 9000, 1)
logits [[-0.5284928   0.01324091  0.00431552 -0.14521408]]
Iteration 300 of 1000: loss=3.45 " + "l1=0" + "l2=3.45 f=-0.161 shape=(1, 9000, 1)
logits [[-0.5022389   0.01381267  0.00074871 -0.15683392]]
Iteration 400 of 1000: loss=3.1 " + "l1=0.0181" + "l2=3.08 f=-0.164 shape=(1, 9000, 1)
logits [[-0.50462574  0.00785772  0.00966476 -0.16703895]]
Iteration 500 of 1000: loss=2.87 " + "l1=0.0231" + "l2=2.85 f=-0.17 shape=(1, 9000, 1)
logits [[-0.5300461   0.01248324  0.01479316 -0.17727605]]
Iteration 600 of 1000: loss=2.67 " + "l1=0.0138" + "l2=2.65 f=-0.176 shape=(1, 9000, 1)
logits [[-0.53506416  0.00989826  0.01127452 -0.18869549]]
Iteration 700 of 1000: loss=2.54 " + "l1=0" + "l2=2.54 f=-0.183 shape=(1, 9000, 1)
logits [[-0.5615883   0.02653206 -0.00595725 -0.19194019]]
Iteration 800 of 1000: loss=2.43 " + "l1=0.118" + "l2=2.31 f=-0.182 shape=(1, 9000, 1)
logits [[-0.5233054   0.00181771  0.01363542 -0.22049692]]
Iteration 900 of 1000: loss=2.23 " + "l1=0" + "l2=2.23 f=-0.181 shape=(1, 9000, 1)
logits [[-0.5305157   0.01390241 -0.00077301 -0.20713073]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=24.4 " + "l1=24.4" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.237227  -2.1929011  2.1148849 -3.3734972]]
Iteration 100 of 1000: loss=5.08 " + "l1=0.0296" + "l2=5.05 f=-0.17 shape=(1, 9000, 1)
logits [[-0.5386152   0.0183875   0.02376697 -0.1830236 ]]
Iteration 200 of 1000: loss=3.4 " + "l1=0.0281" + "l2=3.37 f=-0.16 shape=(1, 9000, 1)
logits [[-0.48115763  0.01026451  0.01537846 -0.18451807]]
Iteration 300 of 1000: loss=2.96 " + "l1=0.0556" + "l2=2.9 f=-0.168 shape=(1, 9000, 1)
logits [[-0.51421726  0.00767272  0.01778642 -0.18487751]]
Iteration 400 of 1000: loss=2.63 " + "l1=0" + "l2=2.63 f=-0.182 shape=(1, 9000, 1)
logits [[-0.56137186  0.01626484  0.01217121 -0.19635811]]
Iteration 500 of 1000: loss=2.41 " + "l1=0" + "l2=2.41 f=-0.186 shape=(1, 9000, 1)
logits [[-0.57459766  0.01893241  0.01124093 -0.2013844 ]]
Iteration 600 of 1000: loss=2.25 " + "l1=0" + "l2=2.25 f=-0.183 shape=(1, 9000, 1)
logits [[-0.551993    0.01655414  0.00865482 -0.2039679 ]]
Iteration 700 of 1000: loss=2.11 " + "l1=0" + "l2=2.11 f=-0.18 shape=(1, 9000, 1)
logits [[-0.5451668   0.01511758  0.00812064 -0.19656917]]
Iteration 800 of 1000: loss=1.98 " + "l1=0.00178" + "l2=1.98 f=-0.178 shape=(1, 9000, 1)
logits [[-0.54522717  0.01030422  0.01062705 -0.18849409]]
Iteration 900 of 1000: loss=1.89 " + "l1=0" + "l2=1.89 f=-0.176 shape=(1, 9000, 1)
logits [[-0.5529297   0.01577159  0.00892202 -0.1773273 ]]
--- 297.35844349861145 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00122 " + "l1=0.00122" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.237227  -2.1929011  2.1148849 -3.3734972]]
Iteration 100 of 1000: loss=0.00109 " + "l1=0.000973" + "l2=0.000121 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.2135408 -2.1899524  2.1162176 -3.355369 ]]
Iteration 200 of 1000: loss=0.00105 " + "l1=0.000954" + "l2=0.0001 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.21207   -2.1896303  2.116699  -3.3547478]]
Iteration 300 of 1000: loss=0.00105 " + "l1=0.000914" + "l2=0.000134 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.2088003 -2.1893797  2.1173697 -3.35287  ]]
Iteration 400 of 1000: loss=0.00105 " + "l1=0.000874" + "l2=0.000179 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.205567  -2.189224   2.118171  -3.3509748]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0122 " + "l1=0.0122" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.237227  -2.1929011  2.1148849 -3.3734972]]
Iteration 100 of 1000: loss=0.00295 " + "l1=8.09e-05" + "l2=0.00287 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.123052  -2.1759832  2.1222427 -3.2861574]]
Iteration 200 of 1000: loss=0.002 " + "l1=7.25e-05" + "l2=0.00193 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1254842 -2.1786647  2.1247597 -3.291219 ]]
Iteration 300 of 1000: loss=0.00167 " + "l1=0" + "l2=0.00167 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1251144 -2.180235   2.1272552 -3.2935667]]
Iteration 400 of 1000: loss=0.00148 " + "l1=7.6e-05" + "l2=0.00141 f=-0.306 shape=(1, 9000, 1)
logits [[ 2.1301298 -2.182715   2.1293702 -3.2992692]]
Iteration 500 of 1000: loss=0.00157 " + "l1=7.88e-05" + "l2=0.0015 f=-0.306 shape=(1, 9000, 1)
logits [[ 2.1316576 -2.1839802  2.1308692 -3.3013465]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.00673 " + "l1=0.00673" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.237227  -2.1929011  2.1148849 -3.3734972]]
Iteration 100 of 1000: loss=0.00344 " + "l1=0.0018" + "l2=0.00164 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.1527815 -2.1802073  2.120007  -3.3092854]]
Iteration 200 of 1000: loss=0.0022 " + "l1=2.29e-05" + "l2=0.00218 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.1242082 -2.1766636  2.1237917 -3.289215 ]]
Iteration 300 of 1000: loss=0.00168 " + "l1=8.67e-06" + "l2=0.00167 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1264727 -2.1794443  2.126315  -3.2938468]]
Iteration 400 of 1000: loss=0.00148 " + "l1=0" + "l2=0.00148 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1282117 -2.1814578  2.1285517 -3.2972672]]
Iteration 500 of 1000: loss=0.00141 " + "l1=0" + "l2=0.00141 f=-0.306 shape=(1, 9000, 1)
logits [[ 2.129727  -2.1830242  2.1303434 -3.2994945]]
Iteration 600 of 1000: loss=0.0014 " + "l1=4.24e-05" + "l2=0.00136 f=-0.306 shape=(1, 9000, 1)
logits [[ 2.132037  -2.1842015  2.1312652 -3.3020422]]
Iteration 700 of 1000: loss=0.00142 " + "l1=0" + "l2=0.00142 f=-0.306 shape=(1, 9000, 1)
logits [[ 2.131114  -2.1843784  2.1317291 -3.3014681]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00398 " + "l1=0.00398" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.237227  -2.1929011  2.1148849 -3.3734972]]
Iteration 100 of 1000: loss=0.00276 " + "l1=0.0021" + "l2=0.000655 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.1826546 -2.1853466  2.1180224 -3.3324683]]
Iteration 200 of 1000: loss=0.00236 " + "l1=0.00153" + "l2=0.000834 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.1668954 -2.1830776  2.119957  -3.3210204]]
Iteration 300 of 1000: loss=0.00202 " + "l1=0.000976" + "l2=0.00105 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1525173 -2.1820266  2.1224852 -3.3117902]]
Iteration 400 of 1000: loss=0.00174 " + "l1=0.000474" + "l2=0.00127 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1400142 -2.1813035  2.125443  -3.3043613]]
Iteration 500 of 1000: loss=0.0015 " + "l1=8.15e-06" + "l2=0.00149 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1284997 -2.180994   2.128249  -3.2972298]]
Iteration 600 of 1000: loss=0.00134 " + "l1=2.09e-05" + "l2=0.00132 f=-0.306 shape=(1, 9000, 1)
logits [[ 2.130885  -2.1831276  2.1302423 -3.3004332]]
Iteration 700 of 1000: loss=0.00136 " + "l1=0" + "l2=0.00136 f=-0.306 shape=(1, 9000, 1)
logits [[ 2.1306326 -2.1838312  2.1312296 -3.3009417]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0026 " + "l1=0.0026" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.237227  -2.1929011  2.1148849 -3.3734972]]
Iteration 100 of 1000: loss=0.00204 " + "l1=0.0017" + "l2=0.00034 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.197021  -2.1874866  2.1169114 -3.342954 ]]
Iteration 200 of 1000: loss=0.00188 " + "l1=0.0015" + "l2=0.00038 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.1888165 -2.1862419  2.1182122 -3.337554 ]]
Iteration 300 of 1000: loss=0.00175 " + "l1=0.00129" + "l2=0.000466 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.1805484 -2.1857452  2.1199985 -3.3324764]]
Iteration 400 of 1000: loss=0.00165 " + "l1=0.00108" + "l2=0.000569 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1729257 -2.1856532  2.1219153 -3.3278573]]
Iteration 500 of 1000: loss=0.00155 " + "l1=0.000891" + "l2=0.00066 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1657383 -2.1855717  2.1237898 -3.3235095]]
Iteration 600 of 1000: loss=0.00152 " + "l1=0.000715" + "l2=0.000805 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1591556 -2.1854396  2.1255224 -3.3193593]]
Iteration 700 of 1000: loss=0.00152 " + "l1=0.00055" + "l2=0.000972 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1528196 -2.1851432  2.1269312 -3.3152912]]
--- 184.08769989013672 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0561 " + "l1=0.0561" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.237227  -2.1929011  2.1148849 -3.3734972]]
Iteration 100 of 1000: loss=0.0552 " + "l1=0.0547" + "l2=0.00054 f=-0.299 shape=(1, 9000, 1)
logits [[ 2.1758668 -2.1646574  2.085911  -3.2939513]]
Iteration 200 of 1000: loss=0.055 " + "l1=0.0544" + "l2=0.000612 f=-0.298 shape=(1, 9000, 1)
logits [[ 2.163116 -2.157838  2.079419 -3.278123]]
Iteration 300 of 1000: loss=0.0549 " + "l1=0.0541" + "l2=0.000742 f=-0.298 shape=(1, 9000, 1)
logits [[ 2.150086  -2.1511176  2.0724542 -3.261537 ]]
Iteration 400 of 1000: loss=0.0547 " + "l1=0.0539" + "l2=0.000877 f=-0.297 shape=(1, 9000, 1)
logits [[ 2.1385796 -2.1456268  2.066262  -3.246945 ]]
Iteration 500 of 1000: loss=0.0546 " + "l1=0.0536" + "l2=0.001 f=-0.296 shape=(1, 9000, 1)
logits [[ 2.1271627 -2.1402514  2.0601556 -3.2322655]]
Iteration 600 of 1000: loss=0.0545 " + "l1=0.0533" + "l2=0.00113 f=-0.296 shape=(1, 9000, 1)
logits [[ 2.1165485 -2.1355932  2.054665  -3.2182858]]
Iteration 700 of 1000: loss=0.0544 " + "l1=0.0531" + "l2=0.00132 f=-0.295 shape=(1, 9000, 1)
logits [[ 2.1064568 -2.1312437  2.0494637 -3.2046113]]
Iteration 800 of 1000: loss=0.0543 " + "l1=0.0529" + "l2=0.00138 f=-0.294 shape=(1, 9000, 1)
logits [[ 2.097015  -2.1273777  2.04468   -3.1917412]]
Iteration 900 of 1000: loss=0.0542 " + "l1=0.0527" + "l2=0.00156 f=-0.294 shape=(1, 9000, 1)
logits [[ 2.0877862 -2.1232557  2.039904  -3.1792986]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.561 " + "l1=0.561" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.237227  -2.1929011  2.1148849 -3.3734972]]
Iteration 100 of 1000: loss=0.495 " + "l1=0.464" + "l2=0.0309 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.8503251 -1.9767557  1.8634828 -2.7765088]]
Iteration 200 of 1000: loss=0.474 " + "l1=0.433" + "l2=0.0403 f=-0.244 shape=(1, 9000, 1)
logits [[ 1.7160769 -1.8944129  1.7673311 -2.5653942]]
Iteration 300 of 1000: loss=0.456 " + "l1=0.406" + "l2=0.05 f=-0.228 shape=(1, 9000, 1)
logits [[ 1.6073658 -1.8329921  1.6861973 -2.3735547]]
Iteration 400 of 1000: loss=0.436 " + "l1=0.376" + "l2=0.0606 f=-0.208 shape=(1, 9000, 1)
logits [[ 1.4978307 -1.769419   1.598013  -2.159758 ]]
Iteration 500 of 1000: loss=0.418 " + "l1=0.35" + "l2=0.0687 f=-0.191 shape=(1, 9000, 1)
logits [[ 1.4126099 -1.7291952  1.5231866 -1.971855 ]]
Iteration 600 of 1000: loss=0.402 " + "l1=0.328" + "l2=0.0743 f=-0.179 shape=(1, 9000, 1)
logits [[ 1.3344504 -1.7033914  1.4652675 -1.8139024]]
Iteration 700 of 1000: loss=0.386 " + "l1=0.304" + "l2=0.0814 f=-0.161 shape=(1, 9000, 1)
logits [[ 1.25876   -1.6741425  1.4073191 -1.6374873]]
Iteration 800 of 1000: loss=0.369 " + "l1=0.281" + "l2=0.088 f=-0.15 shape=(1, 9000, 1)
logits [[ 1.1726118 -1.651161   1.3429966 -1.4626578]]
Iteration 900 of 1000: loss=0.354 " + "l1=0.259" + "l2=0.0948 f=-0.137 shape=(1, 9000, 1)
logits [[ 1.0947906 -1.6222342  1.2856287 -1.3055575]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.61 " + "l1=5.61" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.237227  -2.1929011  2.1148849 -3.3734972]]
Iteration 100 of 1000: loss=1.8 " + "l1=0.449" + "l2=1.35 f=-0.0539 shape=(1, 9000, 1)
logits [[ 0.21451272 -1.3767918   0.69797057  0.24862164]]
Iteration 200 of 1000: loss=1.08 " + "l1=0.0278" + "l2=1.06 f=-0.0509 shape=(1, 9000, 1)
logits [[ 0.04607785 -1.319864    0.5489347   0.52114207]]
Iteration 300 of 1000: loss=0.839 " + "l1=0" + "l2=0.839 f=-0.0525 shape=(1, 9000, 1)
logits [[ 0.03519882 -1.3300105   0.5421226   0.5426085 ]]
Iteration 400 of 1000: loss=0.708 " + "l1=0" + "l2=0.708 f=-0.0558 shape=(1, 9000, 1)
logits [[ 0.03645673 -1.3547344   0.5364264   0.5584884 ]]
Iteration 500 of 1000: loss=0.603 " + "l1=0.00559" + "l2=0.597 f=-0.062 shape=(1, 9000, 1)
logits [[ 0.05666246 -1.3905362   0.54567003  0.5400779 ]]
Iteration 600 of 1000: loss=0.537 " + "l1=0" + "l2=0.537 f=-0.0659 shape=(1, 9000, 1)
logits [[ 0.05651957 -1.4198543   0.542708    0.5569913 ]]
Iteration 700 of 1000: loss=0.498 " + "l1=0" + "l2=0.498 f=-0.0687 shape=(1, 9000, 1)
logits [[ 0.06655699 -1.448403    0.54138595  0.56561375]]
Iteration 800 of 1000: loss=0.464 " + "l1=0" + "l2=0.464 f=-0.0689 shape=(1, 9000, 1)
logits [[ 0.08354092 -1.4788253   0.5445317   0.57505286]]
Iteration 900 of 1000: loss=0.43 " + "l1=0" + "l2=0.43 f=-0.0707 shape=(1, 9000, 1)
logits [[ 0.11695804 -1.5106992   0.55335385  0.55743265]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.09 " + "l1=3.09" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.237227  -2.1929011  2.1148849 -3.3734972]]
Iteration 100 of 1000: loss=1.57 " + "l1=0.874" + "l2=0.696 f=-0.1 shape=(1, 9000, 1)
logits [[ 0.62197864 -1.4676961   1.017064   -0.571481  ]]
Iteration 200 of 1000: loss=1.11 " + "l1=0.383" + "l2=0.724 f=-0.0676 shape=(1, 9000, 1)
logits [[ 0.31940302 -1.3814529   0.74435866  0.04712522]]
Iteration 300 of 1000: loss=0.79 " + "l1=0.0467" + "l2=0.743 f=-0.0646 shape=(1, 9000, 1)
logits [[ 0.07946563 -1.3406359   0.54381365  0.45888144]]
Iteration 400 of 1000: loss=0.589 " + "l1=0.00422" + "l2=0.585 f=-0.0685 shape=(1, 9000, 1)
logits [[ 0.06376941 -1.3746955   0.522252    0.5145742 ]]
Iteration 500 of 1000: loss=0.504 " + "l1=0.0119" + "l2=0.492 f=-0.0717 shape=(1, 9000, 1)
logits [[ 0.08918173 -1.4132482   0.529388    0.50772077]]
Iteration 600 of 1000: loss=0.453 " + "l1=0.00556" + "l2=0.447 f=-0.0737 shape=(1, 9000, 1)
logits [[ 0.0998832 -1.4349239  0.525268   0.5151605]]
Iteration 700 of 1000: loss=0.417 " + "l1=0.00213" + "l2=0.415 f=-0.0737 shape=(1, 9000, 1)
logits [[ 0.11338864 -1.4531881   0.52450913  0.5206371 ]]
Iteration 800 of 1000: loss=0.394 " + "l1=0" + "l2=0.394 f=-0.0744 shape=(1, 9000, 1)
logits [[ 0.11438581 -1.4587306   0.5132632   0.5336164 ]]
Iteration 900 of 1000: loss=0.368 " + "l1=0.00441" + "l2=0.363 f=-0.075 shape=(1, 9000, 1)
logits [[ 0.1369394  -1.471246    0.5212009   0.51317424]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.82 " + "l1=1.82" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.237227  -2.1929011  2.1148849 -3.3734972]]
Iteration 100 of 1000: loss=1.24 " + "l1=0.964" + "l2=0.276 f=-0.169 shape=(1, 9000, 1)
logits [[ 1.1130847 -1.6324949  1.4044218 -1.5624504]]
Iteration 200 of 1000: loss=0.984 " + "l1=0.591" + "l2=0.393 f=-0.0988 shape=(1, 9000, 1)
logits [[ 0.74138975 -1.4691768   1.075506   -0.7430079 ]]
Iteration 300 of 1000: loss=0.812 " + "l1=0.417" + "l2=0.395 f=-0.0844 shape=(1, 9000, 1)
logits [[ 0.5841749  -1.4530666   0.90663224 -0.37543046]]
Iteration 400 of 1000: loss=0.676 " + "l1=0.272" + "l2=0.404 f=-0.0792 shape=(1, 9000, 1)
logits [[ 0.43101543 -1.450151    0.76937765 -0.06710196]]
Iteration 500 of 1000: loss=0.569 " + "l1=0.151" + "l2=0.418 f=-0.0727 shape=(1, 9000, 1)
logits [[ 0.30690566 -1.4580165   0.6616229   0.19850338]]
Iteration 600 of 1000: loss=0.477 " + "l1=0.035" + "l2=0.442 f=-0.0695 shape=(1, 9000, 1)
logits [[ 0.18173975 -1.4545491   0.55130786  0.4436903 ]]
Iteration 700 of 1000: loss=0.41 " + "l1=0" + "l2=0.41 f=-0.0724 shape=(1, 9000, 1)
logits [[ 0.15069456 -1.4576614   0.5058902   0.511456  ]]
Iteration 800 of 1000: loss=0.368 " + "l1=0.00249" + "l2=0.366 f=-0.0746 shape=(1, 9000, 1)
logits [[ 0.16854794 -1.4746541   0.5076729   0.49999747]]
Iteration 900 of 1000: loss=0.342 " + "l1=0.00402" + "l2=0.338 f=-0.0721 shape=(1, 9000, 1)
logits [[ 0.1830434 -1.4846618  0.5128257  0.5004708]]
--- 301.8212950229645 seconds ---
Adv result:3
Loading record A02807
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0119 " + "l1=0.0119" + "l2=0 f=-0.901 shape=(1, 9000, 1)
logits [[ 1.9231176  0.7369774  1.7073101 -7.9726224]]
Iteration 100 of 1000: loss=0.011 " + "l1=0.0105" + "l2=0.000507 f=-0.908 shape=(1, 9000, 1)
logits [[ 1.8411436  0.7906006  1.7062179 -7.9681215]]
Iteration 200 of 1000: loss=0.0107 " + "l1=0.0101" + "l2=0.000604 f=-0.909 shape=(1, 9000, 1)
logits [[ 1.8188757  0.8046275  1.7054659 -7.9635963]]
Iteration 300 of 1000: loss=0.0106 " + "l1=0.00977" + "l2=0.000785 f=-0.91 shape=(1, 9000, 1)
logits [[ 1.7959425  0.8192815  1.7042823 -7.959003 ]]
Iteration 400 of 1000: loss=0.0104 " + "l1=0.00941" + "l2=0.000959 f=-0.911 shape=(1, 9000, 1)
logits [[ 1.7745342   0.83364403  1.702481   -7.954392  ]]
Iteration 500 of 1000: loss=0.0102 " + "l1=0.00908" + "l2=0.00115 f=-0.912 shape=(1, 9000, 1)
logits [[ 1.7550035   0.84748155  1.7002052  -7.949981  ]]
Iteration 600 of 1000: loss=0.0101 " + "l1=0.00877" + "l2=0.00136 f=-0.913 shape=(1, 9000, 1)
logits [[ 1.736885    0.86005515  1.6978592  -7.9457974 ]]
Iteration 700 of 1000: loss=0.00995 " + "l1=0.00848" + "l2=0.00147 f=-0.914 shape=(1, 9000, 1)
logits [[ 1.7202128   0.87184376  1.6953967  -7.941838  ]]
Iteration 800 of 1000: loss=0.00984 " + "l1=0.00822" + "l2=0.00162 f=-0.914 shape=(1, 9000, 1)
logits [[ 1.7048849   0.88259554  1.6926908  -7.9380484 ]]
Iteration 900 of 1000: loss=0.0098 " + "l1=0.00798" + "l2=0.00182 f=-0.915 shape=(1, 9000, 1)
logits [[ 1.6906292   0.89286244  1.690079   -7.934662  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.119 " + "l1=0.119" + "l2=0 f=-0.901 shape=(1, 9000, 1)
logits [[ 1.9231176  0.7369774  1.7073101 -7.9726224]]
Iteration 100 of 1000: loss=0.0736 " + "l1=0.0603" + "l2=0.0134 f=-0.918 shape=(1, 9000, 1)
logits [[ 1.6197584  1.020879   1.6234959 -7.936003 ]]
Iteration 200 of 1000: loss=0.0631 " + "l1=0.0458" + "l2=0.0173 f=-0.921 shape=(1, 9000, 1)
logits [[ 1.5210534  1.1181759  1.5757813 -7.8992476]]
Iteration 300 of 1000: loss=0.0542 " + "l1=0.0325" + "l2=0.0217 f=-0.927 shape=(1, 9000, 1)
logits [[ 1.4091797  1.2101125  1.5351417 -7.862131 ]]
Iteration 400 of 1000: loss=0.0466 " + "l1=0.0216" + "l2=0.0249 f=-0.929 shape=(1, 9000, 1)
logits [[ 1.3067355  1.2925465  1.5087221 -7.824019 ]]
Iteration 500 of 1000: loss=0.0392 " + "l1=0.0116" + "l2=0.0276 f=-0.93 shape=(1, 9000, 1)
logits [[ 1.2195158  1.366148   1.4824864 -7.788044 ]]
Iteration 600 of 1000: loss=0.0309 " + "l1=0.00067" + "l2=0.0302 f=-0.937 shape=(1, 9000, 1)
logits [[ 1.1049075  1.4455782  1.4522816 -7.75038  ]]
Iteration 700 of 1000: loss=0.0256 " + "l1=0" + "l2=0.0256 f=-0.934 shape=(1, 9000, 1)
logits [[ 1.0903125  1.4466939  1.4453672 -7.7179775]]
Iteration 800 of 1000: loss=0.0223 " + "l1=0.000209" + "l2=0.022 f=-0.93 shape=(1, 9000, 1)
logits [[ 1.0985162  1.4373873  1.439481  -7.696073 ]]
Iteration 900 of 1000: loss=0.0198 " + "l1=0" + "l2=0.0198 f=-0.928 shape=(1, 9000, 1)
logits [[ 1.0993375  1.4344654  1.4341576 -7.678044 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0652 " + "l1=0.0652" + "l2=0 f=-0.901 shape=(1, 9000, 1)
logits [[ 1.9231176  0.7369774  1.7073101 -7.9726224]]
Iteration 100 of 1000: loss=0.0468 " + "l1=0.0409" + "l2=0.00589 f=-0.918 shape=(1, 9000, 1)
logits [[ 1.6729524   0.93196255  1.6761794  -7.953105  ]]
Iteration 200 of 1000: loss=0.043 " + "l1=0.0367" + "l2=0.0063 f=-0.917 shape=(1, 9000, 1)
logits [[ 1.6420382   0.97589034  1.6433128  -7.930865  ]]
Iteration 300 of 1000: loss=0.0403 " + "l1=0.0332" + "l2=0.00707 f=-0.919 shape=(1, 9000, 1)
logits [[ 1.6064383  1.0145113  1.6179298 -7.913238 ]]
Iteration 400 of 1000: loss=0.0379 " + "l1=0.0301" + "l2=0.00774 f=-0.919 shape=(1, 9000, 1)
logits [[ 1.578756   1.0480973  1.595581  -7.896775 ]]
Iteration 500 of 1000: loss=0.0356 " + "l1=0.027" + "l2=0.00866 f=-0.92 shape=(1, 9000, 1)
logits [[ 1.5357693  1.0857401  1.5763941 -7.8771467]]
Iteration 600 of 1000: loss=0.0337 " + "l1=0.0241" + "l2=0.0096 f=-0.92 shape=(1, 9000, 1)
logits [[ 1.4929208  1.1228377  1.5616912 -7.858763 ]]
Iteration 700 of 1000: loss=0.0319 " + "l1=0.0215" + "l2=0.0105 f=-0.92 shape=(1, 9000, 1)
logits [[ 1.452434   1.1585425  1.5489787 -7.8412676]]
Iteration 800 of 1000: loss=0.0302 " + "l1=0.0189" + "l2=0.0113 f=-0.92 shape=(1, 9000, 1)
logits [[ 1.4140664  1.1926465  1.5361835 -7.8213735]]
Iteration 900 of 1000: loss=0.0284 " + "l1=0.0164" + "l2=0.012 f=-0.919 shape=(1, 9000, 1)
logits [[ 1.3750997  1.2253028  1.5235578 -7.8001614]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0919 " + "l1=0.0919" + "l2=0 f=-0.901 shape=(1, 9000, 1)
logits [[ 1.9231176  0.7369774  1.7073101 -7.9726224]]
Iteration 100 of 1000: loss=0.0612 " + "l1=0.0521" + "l2=0.00908 f=-0.918 shape=(1, 9000, 1)
logits [[ 1.6469406   0.97696257  1.6496167  -7.944829  ]]
Iteration 200 of 1000: loss=0.0547 " + "l1=0.0441" + "l2=0.0106 f=-0.918 shape=(1, 9000, 1)
logits [[ 1.5994978  1.0380471  1.6066455 -7.9177876]]
Iteration 300 of 1000: loss=0.0495 " + "l1=0.0365" + "l2=0.013 f=-0.921 shape=(1, 9000, 1)
logits [[ 1.5261388  1.1047276  1.575593  -7.8889427]]
Iteration 400 of 1000: loss=0.0448 " + "l1=0.0298" + "l2=0.015 f=-0.924 shape=(1, 9000, 1)
logits [[ 1.4510584  1.1654205  1.5494683 -7.8622193]]
Iteration 500 of 1000: loss=0.0405 " + "l1=0.0233" + "l2=0.0172 f=-0.925 shape=(1, 9000, 1)
logits [[ 1.377304   1.2275661  1.5283498 -7.834191 ]]
Iteration 600 of 1000: loss=0.0363 " + "l1=0.0172" + "l2=0.0191 f=-0.926 shape=(1, 9000, 1)
logits [[ 1.3069315  1.2857536  1.5074513 -7.8029575]]
Iteration 700 of 1000: loss=0.032 " + "l1=0.011" + "l2=0.021 f=-0.926 shape=(1, 9000, 1)
logits [[ 1.238848   1.3430758  1.4853053 -7.770877 ]]
Iteration 800 of 1000: loss=0.0271 " + "l1=0.00495" + "l2=0.0222 f=-0.93 shape=(1, 9000, 1)
logits [[ 1.1641374  1.3969957  1.4608753 -7.741285 ]]
Iteration 900 of 1000: loss=0.023 " + "l1=1.38e-06" + "l2=0.023 f=-0.932 shape=(1, 9000, 1)
logits [[ 1.1013467  1.4401556  1.4401734 -7.709984 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0786 " + "l1=0.0786" + "l2=0 f=-0.901 shape=(1, 9000, 1)
logits [[ 1.9231176  0.7369774  1.7073101 -7.9726224]]
Iteration 100 of 1000: loss=0.0543 " + "l1=0.0469" + "l2=0.00739 f=-0.918 shape=(1, 9000, 1)
logits [[ 1.6605827  0.9542957  1.6617061 -7.948102 ]]
Iteration 200 of 1000: loss=0.0492 " + "l1=0.0411" + "l2=0.00814 f=-0.918 shape=(1, 9000, 1)
logits [[ 1.6230931  1.0044789  1.6244504 -7.923577 ]]
Iteration 300 of 1000: loss=0.0454 " + "l1=0.036" + "l2=0.00939 f=-0.919 shape=(1, 9000, 1)
logits [[ 1.5784932  1.0524046  1.5958556 -7.9027834]]
Iteration 400 of 1000: loss=0.0418 " + "l1=0.0308" + "l2=0.011 f=-0.921 shape=(1, 9000, 1)
logits [[ 1.5165235  1.1056272  1.5710113 -7.8775773]]
Iteration 500 of 1000: loss=0.0387 " + "l1=0.0263" + "l2=0.0124 f=-0.922 shape=(1, 9000, 1)
logits [[ 1.4576298  1.1556944  1.5522027 -7.853895 ]]
Iteration 600 of 1000: loss=0.0359 " + "l1=0.0218" + "l2=0.0141 f=-0.923 shape=(1, 9000, 1)
logits [[ 1.4012041  1.2052323  1.5340043 -7.832067 ]]
Iteration 700 of 1000: loss=0.033 " + "l1=0.0176" + "l2=0.0155 f=-0.923 shape=(1, 9000, 1)
logits [[ 1.3476229  1.2508488  1.5159701 -7.8058295]]
Iteration 800 of 1000: loss=0.0299 " + "l1=0.0131" + "l2=0.0168 f=-0.922 shape=(1, 9000, 1)
logits [[ 1.2884835  1.3003109  1.4978377 -7.7764964]]
Iteration 900 of 1000: loss=0.0266 " + "l1=0.00876" + "l2=0.0178 f=-0.923 shape=(1, 9000, 1)
logits [[ 1.2316055  1.3451807  1.4774777 -7.748195 ]]
--- 302.00461411476135 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00216 " + "l1=0.00216" + "l2=0 f=-0.901 shape=(1, 9000, 1)
logits [[ 1.9231176  0.7369774  1.7073101 -7.9726224]]
Iteration 100 of 1000: loss=0.00172 " + "l1=0.00142" + "l2=0.000305 f=-0.907 shape=(1, 9000, 1)
logits [[ 1.8619133  0.7614416  1.7201285 -7.970544 ]]
Iteration 200 of 1000: loss=0.00162 " + "l1=0.0013" + "l2=0.000319 f=-0.908 shape=(1, 9000, 1)
logits [[ 1.8511775  0.7650925  1.72129   -7.9677997]]
Iteration 300 of 1000: loss=0.00156 " + "l1=0.00113" + "l2=0.000425 f=-0.908 shape=(1, 9000, 1)
logits [[ 1.8365157  0.7709667  1.7233196 -7.964767 ]]
Iteration 400 of 1000: loss=0.0015 " + "l1=0.000988" + "l2=0.000511 f=-0.909 shape=(1, 9000, 1)
logits [[ 1.8238238  0.7763199  1.725019  -7.9620624]]
Iteration 500 of 1000: loss=0.00149 " + "l1=0.000868" + "l2=0.000625 f=-0.91 shape=(1, 9000, 1)
logits [[ 1.8131406   0.78110826  1.7263405  -7.9598494 ]]
Iteration 600 of 1000: loss=0.00149 " + "l1=0.00077" + "l2=0.00072 f=-0.91 shape=(1, 9000, 1)
logits [[ 1.804313   0.7854218  1.7273469 -7.9578824]]
Iteration 700 of 1000: loss=0.00154 " + "l1=0.000682" + "l2=0.000856 f=-0.911 shape=(1, 9000, 1)
logits [[ 1.7963675  0.7895133  1.7281415 -7.9563136]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.00108 " + "l1=0.00108" + "l2=0 f=-0.901 shape=(1, 9000, 1)
logits [[ 1.9231176  0.7369774  1.7073101 -7.9726224]]
Iteration 100 of 1000: loss=0.000977 " + "l1=0.000845" + "l2=0.000132 f=-0.905 shape=(1, 9000, 1)
logits [[ 1.8845024   0.75209844  1.7155282  -7.971045  ]]
Iteration 200 of 1000: loss=0.000947 " + "l1=0.000841" + "l2=0.000106 f=-0.905 shape=(1, 9000, 1)
logits [[ 1.8833928   0.75216144  1.7152399  -7.9698267 ]]
Iteration 300 of 1000: loss=0.000948 " + "l1=0.000815" + "l2=0.000132 f=-0.905 shape=(1, 9000, 1)
logits [[ 1.8787919   0.75394535  1.7157428  -7.968713  ]]
const [0.0075]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.00162 " + "l1=0.00162" + "l2=0 f=-0.901 shape=(1, 9000, 1)
logits [[ 1.9231176  0.7369774  1.7073101 -7.9726224]]
Iteration 100 of 1000: loss=0.00137 " + "l1=0.00116" + "l2=0.00021 f=-0.906 shape=(1, 9000, 1)
logits [[ 1.8730922  0.7568497  1.7178488 -7.9707494]]
Iteration 200 of 1000: loss=0.00131 " + "l1=0.00112" + "l2=0.000189 f=-0.906 shape=(1, 9000, 1)
logits [[ 1.8671281  0.7586521  1.7182711 -7.968774 ]]
Iteration 300 of 1000: loss=0.0013 " + "l1=0.00104" + "l2=0.000258 f=-0.907 shape=(1, 9000, 1)
logits [[ 1.858382  0.761991  1.719339 -7.966871]]
Iteration 400 of 1000: loss=0.00131 " + "l1=0.000969" + "l2=0.000339 f=-0.907 shape=(1, 9000, 1)
logits [[ 1.8495785  0.7654422  1.7204007 -7.9648795]]
const [0.00875]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00189 " + "l1=0.00189" + "l2=0 f=-0.901 shape=(1, 9000, 1)
logits [[ 1.9231176  0.7369774  1.7073101 -7.9726224]]
Iteration 100 of 1000: loss=0.00155 " + "l1=0.0013" + "l2=0.000255 f=-0.906 shape=(1, 9000, 1)
logits [[ 1.8672094  0.7592252  1.7190845 -7.970701 ]]
Iteration 200 of 1000: loss=0.00148 " + "l1=0.00122" + "l2=0.00026 f=-0.907 shape=(1, 9000, 1)
logits [[ 1.8588698   0.76195097  1.7198576  -7.968278  ]]
Iteration 300 of 1000: loss=0.00142 " + "l1=0.0011" + "l2=0.000317 f=-0.908 shape=(1, 9000, 1)
logits [[ 1.8475087  0.7662821  1.7212967 -7.965816 ]]
Iteration 400 of 1000: loss=0.00138 " + "l1=0.000991" + "l2=0.00039 f=-0.908 shape=(1, 9000, 1)
logits [[ 1.8360384   0.77106446  1.722791   -7.963262  ]]
Iteration 500 of 1000: loss=0.00141 " + "l1=0.000897" + "l2=0.000509 f=-0.909 shape=(1, 9000, 1)
logits [[ 1.8265258  0.7752091  1.7239901 -7.9611406]]
const [0.009375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00202 " + "l1=0.00202" + "l2=0 f=-0.901 shape=(1, 9000, 1)
logits [[ 1.9231176  0.7369774  1.7073101 -7.9726224]]
Iteration 100 of 1000: loss=0.00164 " + "l1=0.00136" + "l2=0.000279 f=-0.907 shape=(1, 9000, 1)
logits [[ 1.8646585   0.76026803  1.7196149  -7.970617  ]]
Iteration 200 of 1000: loss=0.00154 " + "l1=0.00126" + "l2=0.000284 f=-0.907 shape=(1, 9000, 1)
logits [[ 1.8550923  0.7634986  1.7205784 -7.9680185]]
Iteration 300 of 1000: loss=0.0015 " + "l1=0.00112" + "l2=0.000376 f=-0.908 shape=(1, 9000, 1)
logits [[ 1.8419584  0.7686359  1.7223188 -7.965254 ]]
Iteration 400 of 1000: loss=0.00146 " + "l1=0.000992" + "l2=0.000467 f=-0.909 shape=(1, 9000, 1)
logits [[ 1.8297966  0.7737443  1.7239354 -7.9625936]]
Iteration 500 of 1000: loss=0.00141 " + "l1=0.000883" + "l2=0.000522 f=-0.909 shape=(1, 9000, 1)
logits [[ 1.8194897  0.778207   1.7252558 -7.96035  ]]
Iteration 600 of 1000: loss=0.00145 " + "l1=0.000799" + "l2=0.000646 f=-0.91 shape=(1, 9000, 1)
logits [[ 1.8113711  0.782144   1.7261801 -7.9586897]]
--- 158.10365200042725 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.099 " + "l1=0.099" + "l2=0 f=-0.901 shape=(1, 9000, 1)
logits [[ 1.9231176  0.7369774  1.7073101 -7.9726224]]
Iteration 100 of 1000: loss=0.0983 " + "l1=0.0979" + "l2=0.000392 f=-0.903 shape=(1, 9000, 1)
logits [[ 1.8575625  0.7601409  1.702455  -7.9328117]]
Iteration 200 of 1000: loss=0.0981 " + "l1=0.0977" + "l2=0.000424 f=-0.904 shape=(1, 9000, 1)
logits [[ 1.8417364   0.76726705  1.7020413  -7.926937  ]]
Iteration 300 of 1000: loss=0.098 " + "l1=0.0974" + "l2=0.000548 f=-0.905 shape=(1, 9000, 1)
logits [[ 1.8230575   0.77540034  1.7012181  -7.918464  ]]
Iteration 400 of 1000: loss=0.0979 " + "l1=0.0972" + "l2=0.0007 f=-0.905 shape=(1, 9000, 1)
logits [[ 1.8078835  0.7821557  1.6997334 -7.9105754]]
Iteration 500 of 1000: loss=0.0978 " + "l1=0.097" + "l2=0.000846 f=-0.906 shape=(1, 9000, 1)
logits [[ 1.7934012  0.7889421  1.6981134 -7.902923 ]]
Iteration 600 of 1000: loss=0.0978 " + "l1=0.0968" + "l2=0.00101 f=-0.906 shape=(1, 9000, 1)
logits [[ 1.7795833  0.7956545  1.6961603 -7.8954625]]
Iteration 700 of 1000: loss=0.0977 " + "l1=0.0965" + "l2=0.00111 f=-0.906 shape=(1, 9000, 1)
logits [[ 1.7661939   0.80238056  1.693805   -7.8882294 ]]
Iteration 800 of 1000: loss=0.0977 " + "l1=0.0964" + "l2=0.0013 f=-0.907 shape=(1, 9000, 1)
logits [[ 1.7542839   0.80859566  1.6913521  -7.8814917 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.99 " + "l1=0.99" + "l2=0 f=-0.901 shape=(1, 9000, 1)
logits [[ 1.9231176  0.7369774  1.7073101 -7.9726224]]
Iteration 100 of 1000: loss=0.945 " + "l1=0.927" + "l2=0.0179 f=-0.89 shape=(1, 9000, 1)
logits [[ 1.6215686   0.84346807  1.6216156  -7.6457825 ]]
Iteration 200 of 1000: loss=0.931 " + "l1=0.907" + "l2=0.024 f=-0.879 shape=(1, 9000, 1)
logits [[ 1.5599995   0.86842304  1.5621701  -7.5078754 ]]
Iteration 300 of 1000: loss=0.919 " + "l1=0.889" + "l2=0.0302 f=-0.871 shape=(1, 9000, 1)
logits [[ 1.49822    0.8944803  1.5046397 -7.380437 ]]
Iteration 400 of 1000: loss=0.907 " + "l1=0.872" + "l2=0.0352 f=-0.863 shape=(1, 9000, 1)
logits [[ 1.4459213  0.9182426  1.4529663 -7.269151 ]]
Iteration 500 of 1000: loss=0.896 " + "l1=0.856" + "l2=0.0407 f=-0.857 shape=(1, 9000, 1)
logits [[ 1.3888086  0.9359246  1.4031559 -7.1542125]]
Iteration 600 of 1000: loss=0.886 " + "l1=0.839" + "l2=0.0463 f=-0.846 shape=(1, 9000, 1)
logits [[ 1.3500664   0.94580805  1.3564168  -7.037703  ]]
Iteration 700 of 1000: loss=0.875 " + "l1=0.824" + "l2=0.0511 f=-0.838 shape=(1, 9000, 1)
logits [[ 1.299917    0.96890914  1.3077779  -6.928704  ]]
Iteration 800 of 1000: loss=0.863 " + "l1=0.807" + "l2=0.0553 f=-0.83 shape=(1, 9000, 1)
logits [[ 1.2346202  1.0026042  1.2590125 -6.8149385]]
Iteration 900 of 1000: loss=0.85 " + "l1=0.792" + "l2=0.0586 f=-0.826 shape=(1, 9000, 1)
logits [[ 1.1656688  1.0291246  1.2087064 -6.7066216]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.9 " + "l1=9.9" + "l2=0 f=-0.901 shape=(1, 9000, 1)
logits [[ 1.9231176  0.7369774  1.7073101 -7.9726224]]
Iteration 100 of 1000: loss=6.82 " + "l1=5.42" + "l2=1.4 f=-0.56 shape=(1, 9000, 1)
logits [[ 0.77344835  0.8002479   0.8015001  -4.613625  ]]
Iteration 200 of 1000: loss=5.15 " + "l1=2.79" + "l2=2.35 f=-0.359 shape=(1, 9000, 1)
logits [[ 0.31991464  0.34389472  0.34662715 -2.447082  ]]
Iteration 300 of 1000: loss=4.2 " + "l1=1.5" + "l2=2.7 f=-0.308 shape=(1, 9000, 1)
logits [[-0.13921437  0.13583697  0.13707067 -1.3640265 ]]
Iteration 400 of 1000: loss=3.35 " + "l1=0.356" + "l2=3 f=-0.278 shape=(1, 9000, 1)
logits [[-0.51889044 -0.09705529 -0.07010957 -0.42608327]]
Iteration 500 of 1000: loss=2.64 " + "l1=0.00715" + "l2=2.64 f=-0.308 shape=(1, 9000, 1)
logits [[-0.7634632  -0.1517405  -0.15647468 -0.15889177]]
Iteration 600 of 1000: loss=2.37 " + "l1=0" + "l2=2.37 f=-0.318 shape=(1, 9000, 1)
logits [[-0.8595529  -0.15729372 -0.13303576 -0.12190375]]
Iteration 700 of 1000: loss=2.18 " + "l1=0.00024" + "l2=2.18 f=-0.333 shape=(1, 9000, 1)
logits [[-0.95249724 -0.13607547 -0.1221803  -0.12242054]]
Iteration 800 of 1000: loss=2.06 " + "l1=0" + "l2=2.06 f=-0.339 shape=(1, 9000, 1)
logits [[-1.0089788  -0.11708026 -0.11662561 -0.11358186]]
Iteration 900 of 1000: loss=1.95 " + "l1=0.00805" + "l2=1.94 f=-0.341 shape=(1, 9000, 1)
logits [[-1.0330217  -0.12189057 -0.1009511  -0.10900529]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.44 " + "l1=5.44" + "l2=0 f=-0.901 shape=(1, 9000, 1)
logits [[ 1.9231176  0.7369774  1.7073101 -7.9726224]]
Iteration 100 of 1000: loss=4.41 " + "l1=3.93" + "l2=0.483 f=-0.705 shape=(1, 9000, 1)
logits [[ 1.1343236   0.86261535  1.1622218  -5.9775333 ]]
Iteration 200 of 1000: loss=3.9 " + "l1=3.19" + "l2=0.712 f=-0.62 shape=(1, 9000, 1)
logits [[ 0.82043785  0.81729954  0.84108293 -4.95712   ]]
Iteration 300 of 1000: loss=3.53 " + "l1=2.61" + "l2=0.919 f=-0.554 shape=(1, 9000, 1)
logits [[ 0.549513    0.65841514  0.6601026  -4.084384  ]]
Iteration 400 of 1000: loss=3.18 " + "l1=2.04" + "l2=1.14 f=-0.457 shape=(1, 9000, 1)
logits [[ 0.35076895  0.50445074  0.5102902  -3.1933234 ]]
Iteration 500 of 1000: loss=2.72 " + "l1=1.37" + "l2=1.36 f=-0.368 shape=(1, 9000, 1)
logits [[ 0.08972906  0.31039444  0.30222446 -2.1759007 ]]
Iteration 600 of 1000: loss=2.21 " + "l1=0.712" + "l2=1.5 f=-0.308 shape=(1, 9000, 1)
logits [[-0.28240404  0.10560011  0.11978932 -1.1755831 ]]
Iteration 700 of 1000: loss=1.9 " + "l1=0.426" + "l2=1.48 f=-0.29 shape=(1, 9000, 1)
logits [[-0.5535701   0.04568096  0.06059532 -0.713626  ]]
Iteration 800 of 1000: loss=1.46 " + "l1=0.00616" + "l2=1.45 f=-0.215 shape=(1, 9000, 1)
logits [[-0.7468324  -0.03443121 -0.03359864 -0.0447951 ]]
Iteration 900 of 1000: loss=1.17 " + "l1=0" + "l2=1.17 f=-0.195 shape=(1, 9000, 1)
logits [[-0.75481963 -0.0161701  -0.007211   -0.00268782]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.22 " + "l1=3.22" + "l2=0 f=-0.901 shape=(1, 9000, 1)
logits [[ 1.9231176  0.7369774  1.7073101 -7.9726224]]
Iteration 100 of 1000: loss=2.83 " + "l1=2.63" + "l2=0.195 f=-0.791 shape=(1, 9000, 1)
logits [[ 1.3432037  0.8702574  1.3654658 -6.7420654]]
Iteration 200 of 1000: loss=2.66 " + "l1=2.39" + "l2=0.265 f=-0.744 shape=(1, 9000, 1)
logits [[ 1.1658223  0.8847169  1.1645917 -6.1900816]]
Iteration 300 of 1000: loss=2.51 " + "l1=2.18" + "l2=0.33 f=-0.721 shape=(1, 9000, 1)
logits [[ 0.93476075  0.92025536  0.9827476  -5.7228727 ]]
Iteration 400 of 1000: loss=2.37 " + "l1=1.98" + "l2=0.395 f=-0.685 shape=(1, 9000, 1)
logits [[ 0.8331298   0.839403    0.84064704 -5.2518835 ]]
Iteration 500 of 1000: loss=2.25 " + "l1=1.8" + "l2=0.452 f=-0.644 shape=(1, 9000, 1)
logits [[ 0.71476144  0.74291044  0.74754703 -4.7816    ]]
Iteration 600 of 1000: loss=2.14 " + "l1=1.65" + "l2=0.493 f=-0.609 shape=(1, 9000, 1)
logits [[ 0.58335227  0.6802043   0.68741727 -4.386664  ]]
Iteration 700 of 1000: loss=2.03 " + "l1=1.5" + "l2=0.525 f=-0.575 shape=(1, 9000, 1)
logits [[ 0.4586885   0.6201035   0.62303597 -3.9999278 ]]
Iteration 800 of 1000: loss=1.86 " + "l1=1.28" + "l2=0.579 f=-0.525 shape=(1, 9000, 1)
logits [[ 0.28650773  0.51370627  0.5152025  -3.415816  ]]
Iteration 900 of 1000: loss=1.65 " + "l1=1.01" + "l2=0.641 f=-0.469 shape=(1, 9000, 1)
logits [[ 2.5155935e-03  4.1444361e-01  4.1264883e-01 -2.7042260e+00]]
--- 292.8337290287018 seconds ---
Adv result:3
Loading record A02845
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.109 " + "l1=0.109" + "l2=0 f=-0.58 shape=(1, 9000, 1)
logits [[  7.9212894  -2.9970465   3.8716464 -11.113922 ]]
Iteration 100 of 1000: loss=0.109 " + "l1=0.108" + "l2=0.000372 f=-0.578 shape=(1, 9000, 1)
logits [[  7.873443   -2.9605198   3.8376982 -11.061592 ]]
Iteration 200 of 1000: loss=0.109 " + "l1=0.108" + "l2=0.000334 f=-0.578 shape=(1, 9000, 1)
logits [[  7.8688607  -2.955417    3.8337274 -11.057947 ]]
Iteration 300 of 1000: loss=0.108 " + "l1=0.108" + "l2=0.000405 f=-0.577 shape=(1, 9000, 1)
logits [[  7.859855   -2.9473214   3.8269184 -11.049137 ]]
Iteration 400 of 1000: loss=0.108 " + "l1=0.108" + "l2=0.000497 f=-0.577 shape=(1, 9000, 1)
logits [[  7.8503265  -2.9386497   3.8197868 -11.04005  ]]
Iteration 500 of 1000: loss=0.108 " + "l1=0.108" + "l2=0.000632 f=-0.577 shape=(1, 9000, 1)
logits [[  7.8407702  -2.9297137   3.8125913 -11.031306 ]]
Iteration 600 of 1000: loss=0.108 " + "l1=0.108" + "l2=0.000728 f=-0.577 shape=(1, 9000, 1)
logits [[  7.8314075  -2.9210153   3.8057404 -11.023078 ]]
Iteration 700 of 1000: loss=0.108 " + "l1=0.107" + "l2=0.000839 f=-0.577 shape=(1, 9000, 1)
logits [[  7.8221908  -2.9124532   3.799158  -11.0153055]]
Iteration 800 of 1000: loss=0.108 " + "l1=0.107" + "l2=0.000941 f=-0.576 shape=(1, 9000, 1)
logits [[  7.8129573  -2.9037647   3.7926362 -11.007761 ]]
Iteration 900 of 1000: loss=0.108 " + "l1=0.107" + "l2=0.00109 f=-0.576 shape=(1, 9000, 1)
logits [[  7.804092   -2.8956423   3.786647  -11.000734 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.09 " + "l1=1.09" + "l2=0 f=-0.58 shape=(1, 9000, 1)
logits [[  7.9212894  -2.9970465   3.8716464 -11.113922 ]]
Iteration 100 of 1000: loss=1.05 " + "l1=1.02" + "l2=0.0261 f=-0.567 shape=(1, 9000, 1)
logits [[  7.526759   -2.6880064   3.5870767 -10.693719 ]]
Iteration 200 of 1000: loss=1.03 " + "l1=0.992" + "l2=0.0342 f=-0.559 shape=(1, 9000, 1)
logits [[  7.364494   -2.5522425   3.4725623 -10.522562 ]]
Iteration 300 of 1000: loss=1 " + "l1=0.961" + "l2=0.0426 f=-0.555 shape=(1, 9000, 1)
logits [[  7.197935   -2.4152582   3.3529289 -10.354432 ]]
Iteration 400 of 1000: loss=0.98 " + "l1=0.928" + "l2=0.0527 f=-0.557 shape=(1, 9000, 1)
logits [[  7.010565   -2.2655416   3.2143826 -10.187928 ]]
Iteration 500 of 1000: loss=0.955 " + "l1=0.89" + "l2=0.0643 f=-0.562 shape=(1, 9000, 1)
logits [[  6.798635   -2.1049945   3.0703003 -10.01377  ]]
Iteration 600 of 1000: loss=0.928 " + "l1=0.855" + "l2=0.0729 f=-0.564 shape=(1, 9000, 1)
logits [[ 6.598946  -1.953949   2.9404914 -9.840353 ]]
Iteration 700 of 1000: loss=0.905 " + "l1=0.825" + "l2=0.0795 f=-0.565 shape=(1, 9000, 1)
logits [[ 6.41618   -1.8345547  2.833174  -9.676519 ]]
Iteration 800 of 1000: loss=0.883 " + "l1=0.798" + "l2=0.0846 f=-0.565 shape=(1, 9000, 1)
logits [[ 6.243741  -1.7390753  2.7509217 -9.517017 ]]
Iteration 900 of 1000: loss=0.86 " + "l1=0.766" + "l2=0.0943 f=-0.569 shape=(1, 9000, 1)
logits [[ 6.0238056 -1.6344478  2.6596167 -9.325162 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.9 " + "l1=10.9" + "l2=0 f=-0.58 shape=(1, 9000, 1)
logits [[  7.9212894  -2.9970465   3.8716464 -11.113922 ]]
Iteration 100 of 1000: loss=6.29 " + "l1=3.89" + "l2=2.4 f=-0.568 shape=(1, 9000, 1)
logits [[ 3.316579   -0.57241255  1.5950724  -6.610915  ]]
Iteration 200 of 1000: loss=4.49 " + "l1=1.36" + "l2=3.13 f=-0.602 shape=(1, 9000, 1)
logits [[ 1.3287244  -0.03040734  1.0362118  -4.7428503 ]]
Iteration 300 of 1000: loss=3.45 " + "l1=0.475" + "l2=2.97 f=-0.631 shape=(1, 9000, 1)
logits [[ 0.6708744   0.20669608  0.68187976 -4.082988  ]]
Iteration 400 of 1000: loss=2.81 " + "l1=0.252" + "l2=2.56 f=-0.634 shape=(1, 9000, 1)
logits [[ 0.5457514   0.2937724   0.54188484 -3.9172127 ]]
Iteration 500 of 1000: loss=2.44 " + "l1=0.179" + "l2=2.26 f=-0.627 shape=(1, 9000, 1)
logits [[ 0.4941167  0.3146953  0.4813873 -3.7979844]]
Iteration 600 of 1000: loss=2.21 " + "l1=0.115" + "l2=2.09 f=-0.617 shape=(1, 9000, 1)
logits [[ 0.41516343  0.32310504  0.43814027 -3.6441271 ]]
Iteration 700 of 1000: loss=2.05 " + "l1=0.104" + "l2=1.94 f=-0.603 shape=(1, 9000, 1)
logits [[ 0.40642527  0.3068416   0.41095847 -3.5343125 ]]
Iteration 800 of 1000: loss=1.93 " + "l1=0.0789" + "l2=1.85 f=-0.593 shape=(1, 9000, 1)
logits [[ 0.37462896  0.30202717  0.38092786 -3.4302878 ]]
Iteration 900 of 1000: loss=1.83 " + "l1=0.0479" + "l2=1.79 f=-0.587 shape=(1, 9000, 1)
logits [[ 0.33602974  0.30029732  0.34815606 -3.3306746 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=109 " + "l1=109" + "l2=0 f=-0.58 shape=(1, 9000, 1)
logits [[  7.9212894  -2.9970465   3.8716464 -11.113922 ]]
Iteration 100 of 1000: loss=11.5 " + "l1=0.185" + "l2=11.3 f=-0.537 shape=(1, 9000, 1)
logits [[ 0.4907064   0.47221574  0.47669142 -3.5872133 ]]
Iteration 200 of 1000: loss=8.33 " + "l1=0" + "l2=8.33 f=-0.566 shape=(1, 9000, 1)
logits [[ 0.28101063  0.4692548   0.43090266 -3.44366   ]]
Iteration 300 of 1000: loss=6.91 " + "l1=0" + "l2=6.91 f=-0.558 shape=(1, 9000, 1)
logits [[ 0.39329147  0.45474413  0.4441757  -3.525452  ]]
Iteration 400 of 1000: loss=6.2 " + "l1=0" + "l2=6.2 f=-0.558 shape=(1, 9000, 1)
logits [[ 0.38273525  0.4619165   0.4286737  -3.5048459 ]]
Iteration 500 of 1000: loss=5.57 " + "l1=0" + "l2=5.57 f=-0.563 shape=(1, 9000, 1)
logits [[ 0.39995876  0.43855032  0.42917693 -3.517825  ]]
Iteration 600 of 1000: loss=5.22 " + "l1=0" + "l2=5.22 f=-0.567 shape=(1, 9000, 1)
logits [[ 0.36865523  0.43491194  0.41232398 -3.4832878 ]]
Iteration 700 of 1000: loss=4.94 " + "l1=0" + "l2=4.94 f=-0.571 shape=(1, 9000, 1)
logits [[ 0.31184444  0.4340549   0.38898185 -3.4192853 ]]
Iteration 800 of 1000: loss=4.66 " + "l1=0" + "l2=4.66 f=-0.572 shape=(1, 9000, 1)
logits [[ 0.30733263  0.42857927  0.37655222 -3.4011261 ]]
Iteration 900 of 1000: loss=4.44 " + "l1=0" + "l2=4.44 f=-0.576 shape=(1, 9000, 1)
logits [[ 0.2802265  0.4175301  0.3780138 -3.3814585]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=60.1 " + "l1=60.1" + "l2=0 f=-0.58 shape=(1, 9000, 1)
logits [[  7.9212894  -2.9970465   3.8716464 -11.113922 ]]
Iteration 100 of 1000: loss=9.82 " + "l1=0.199" + "l2=9.63 f=-0.555 shape=(1, 9000, 1)
logits [[ 0.48552814  0.465806    0.5019813  -3.6737583 ]]
Iteration 200 of 1000: loss=6.75 " + "l1=0" + "l2=6.75 f=-0.566 shape=(1, 9000, 1)
logits [[ 0.44831246  0.457967    0.4478204  -3.6172497 ]]
Iteration 300 of 1000: loss=5.74 " + "l1=0.0645" + "l2=5.68 f=-0.56 shape=(1, 9000, 1)
logits [[ 0.43637535  0.43473256  0.44645292 -3.5557022 ]]
Iteration 400 of 1000: loss=5.1 " + "l1=0.05" + "l2=5.05 f=-0.567 shape=(1, 9000, 1)
logits [[ 0.4038454   0.41888717  0.4279775  -3.5190353 ]]
Iteration 500 of 1000: loss=4.65 " + "l1=0" + "l2=4.65 f=-0.571 shape=(1, 9000, 1)
logits [[ 0.34843728  0.41473204  0.3961188  -3.4436553 ]]
Iteration 600 of 1000: loss=4.27 " + "l1=0" + "l2=4.27 f=-0.573 shape=(1, 9000, 1)
logits [[ 0.36344767  0.3994453   0.39569137 -3.450076  ]]
Iteration 700 of 1000: loss=4.06 " + "l1=0" + "l2=4.06 f=-0.571 shape=(1, 9000, 1)
logits [[ 0.3637917   0.4103672   0.38310292 -3.4416304 ]]
Iteration 800 of 1000: loss=3.82 " + "l1=0" + "l2=3.82 f=-0.57 shape=(1, 9000, 1)
logits [[ 0.3925977   0.39993462  0.39494833 -3.467711  ]]
Iteration 900 of 1000: loss=3.67 " + "l1=0" + "l2=3.67 f=-0.576 shape=(1, 9000, 1)
logits [[ 0.3579702   0.40115768  0.38617033 -3.4489725 ]]
--- 304.9758610725403 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0405 " + "l1=0.0405" + "l2=0 f=-0.58 shape=(1, 9000, 1)
logits [[  7.9212894  -2.9970465   3.8716464 -11.113922 ]]
Iteration 100 of 1000: loss=0.0404 " + "l1=0.0402" + "l2=0.000165 f=-0.58 shape=(1, 9000, 1)
logits [[  7.901038   -3.0028806   3.8813658 -11.0976095]]
Iteration 200 of 1000: loss=0.0403 " + "l1=0.0402" + "l2=0.00012 f=-0.58 shape=(1, 9000, 1)
logits [[  7.9008813  -3.0027163   3.881128  -11.09783  ]]
Iteration 300 of 1000: loss=0.0403 " + "l1=0.0402" + "l2=0.000153 f=-0.58 shape=(1, 9000, 1)
logits [[  7.8987427  -3.0032616   3.8819594 -11.096605 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.405 " + "l1=0.405" + "l2=0 f=-0.58 shape=(1, 9000, 1)
logits [[  7.9212894  -2.9970465   3.8716464 -11.113922 ]]
Iteration 100 of 1000: loss=0.392 " + "l1=0.385" + "l2=0.00715 f=-0.58 shape=(1, 9000, 1)
logits [[  7.7841854  -3.032771    3.9349644 -11.005119 ]]
Iteration 200 of 1000: loss=0.387 " + "l1=0.377" + "l2=0.0101 f=-0.581 shape=(1, 9000, 1)
logits [[  7.7293167  -3.0468042   3.9560773 -10.960684 ]]
Iteration 300 of 1000: loss=0.383 " + "l1=0.371" + "l2=0.012 f=-0.582 shape=(1, 9000, 1)
logits [[  7.688256   -3.056567    3.9740102 -10.931883 ]]
Iteration 400 of 1000: loss=0.379 " + "l1=0.366" + "l2=0.0138 f=-0.583 shape=(1, 9000, 1)
logits [[  7.6467147  -3.0646336   3.990097  -10.9038315]]
Iteration 500 of 1000: loss=0.375 " + "l1=0.36" + "l2=0.0152 f=-0.585 shape=(1, 9000, 1)
logits [[  7.606963   -3.0753965   4.008259  -10.878256 ]]
Iteration 600 of 1000: loss=0.37 " + "l1=0.353" + "l2=0.0169 f=-0.586 shape=(1, 9000, 1)
logits [[  7.5628676  -3.0881915   4.028551  -10.8457155]]
Iteration 700 of 1000: loss=0.365 " + "l1=0.347" + "l2=0.0186 f=-0.587 shape=(1, 9000, 1)
logits [[  7.5127177  -3.1012177   4.0474243 -10.805069 ]]
Iteration 800 of 1000: loss=0.36 " + "l1=0.339" + "l2=0.0205 f=-0.588 shape=(1, 9000, 1)
logits [[  7.458003  -3.116755   4.066717 -10.761648]]
Iteration 900 of 1000: loss=0.353 " + "l1=0.331" + "l2=0.0226 f=-0.59 shape=(1, 9000, 1)
logits [[  7.398951   -3.1368845   4.090413  -10.711444 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.05 " + "l1=4.05" + "l2=0 f=-0.58 shape=(1, 9000, 1)
logits [[  7.9212894  -2.9970465   3.8716464 -11.113922 ]]
Iteration 100 of 1000: loss=2.52 " + "l1=1.68" + "l2=0.839 f=-0.577 shape=(1, 9000, 1)
logits [[ 6.418829  -3.642978   4.7421513 -9.826642 ]]
Iteration 200 of 1000: loss=1.62 " + "l1=0.355" + "l2=1.26 f=-0.609 shape=(1, 9000, 1)
logits [[ 5.320187  -3.9305487  4.965542  -8.790036 ]]
Iteration 300 of 1000: loss=0.994 " + "l1=0.00438" + "l2=0.99 f=-0.634 shape=(1, 9000, 1)
logits [[ 4.9673724 -4.0197716  4.962995  -8.447589 ]]
Iteration 400 of 1000: loss=0.736 " + "l1=0" + "l2=0.736 f=-0.643 shape=(1, 9000, 1)
logits [[ 4.9201517 -4.028016   4.9272685 -8.391814 ]]
Iteration 500 of 1000: loss=0.555 " + "l1=0" + "l2=0.555 f=-0.634 shape=(1, 9000, 1)
logits [[ 4.8891115 -3.9988976  4.902097  -8.327926 ]]
Iteration 600 of 1000: loss=0.446 " + "l1=0" + "l2=0.446 f=-0.629 shape=(1, 9000, 1)
logits [[ 4.8845325 -3.9779642  4.8868585 -8.307751 ]]
Iteration 700 of 1000: loss=0.389 " + "l1=0" + "l2=0.389 f=-0.625 shape=(1, 9000, 1)
logits [[ 4.875515  -3.9691093  4.8844194 -8.291543 ]]
Iteration 800 of 1000: loss=0.35 " + "l1=0" + "l2=0.35 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.871697  -3.9519656  4.8811135 -8.282918 ]]
Iteration 900 of 1000: loss=0.322 " + "l1=0.00421" + "l2=0.318 f=-0.613 shape=(1, 9000, 1)
logits [[ 4.873043  -3.9263163  4.8688374 -8.2691   ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.23 " + "l1=2.23" + "l2=0 f=-0.58 shape=(1, 9000, 1)
logits [[  7.9212894  -2.9970465   3.8716464 -11.113922 ]]
Iteration 100 of 1000: loss=1.78 " + "l1=1.5" + "l2=0.282 f=-0.57 shape=(1, 9000, 1)
logits [[  7.11443    -3.353487    4.3910313 -10.431146 ]]
Iteration 200 of 1000: loss=1.53 " + "l1=1.12" + "l2=0.415 f=-0.577 shape=(1, 9000, 1)
logits [[  6.636508   -3.5417156   4.600031  -10.001363 ]]
Iteration 300 of 1000: loss=1.31 " + "l1=0.818" + "l2=0.495 f=-0.575 shape=(1, 9000, 1)
logits [[ 6.282901  -3.727886   4.7948065 -9.649897 ]]
Iteration 400 of 1000: loss=0.986 " + "l1=0.398" + "l2=0.588 f=-0.618 shape=(1, 9000, 1)
logits [[ 5.596932  -3.9230208  4.8741403 -9.020254 ]]
Iteration 500 of 1000: loss=0.617 " + "l1=0.023" + "l2=0.594 f=-0.645 shape=(1, 9000, 1)
logits [[ 4.965293 -4.048006  4.92355  -8.419161]]
Iteration 600 of 1000: loss=0.46 " + "l1=0.00681" + "l2=0.453 f=-0.64 shape=(1, 9000, 1)
logits [[ 4.842024  -3.9879522  4.8296366 -8.24486  ]]
Iteration 700 of 1000: loss=0.395 " + "l1=0" + "l2=0.395 f=-0.635 shape=(1, 9000, 1)
logits [[ 4.795016  -3.9534464  4.7977505 -8.178667 ]]
Iteration 800 of 1000: loss=0.36 " + "l1=0" + "l2=0.36 f=-0.631 shape=(1, 9000, 1)
logits [[ 4.7609687 -3.9051247  4.7627087 -8.144178 ]]
Iteration 900 of 1000: loss=0.337 " + "l1=0" + "l2=0.337 f=-0.627 shape=(1, 9000, 1)
logits [[ 4.719688  -3.8634634  4.72786   -8.092827 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.32 " + "l1=1.32" + "l2=0 f=-0.58 shape=(1, 9000, 1)
logits [[  7.9212894  -2.9970465   3.8716464 -11.113922 ]]
Iteration 100 of 1000: loss=1.18 " + "l1=1.1" + "l2=0.0793 f=-0.579 shape=(1, 9000, 1)
logits [[  7.4948153  -3.1515782   4.114031  -10.772573 ]]
Iteration 200 of 1000: loss=1.1 " + "l1=0.966" + "l2=0.137 f=-0.577 shape=(1, 9000, 1)
logits [[  7.2337813  -3.2584312   4.2612987 -10.542832 ]]
Iteration 300 of 1000: loss=1.03 " + "l1=0.849" + "l2=0.177 f=-0.583 shape=(1, 9000, 1)
logits [[  7.0170774  -3.3898134   4.4034953 -10.362429 ]]
Iteration 400 of 1000: loss=0.941 " + "l1=0.733" + "l2=0.208 f=-0.575 shape=(1, 9000, 1)
logits [[  6.8045845  -3.5054924   4.5503073 -10.150607 ]]
Iteration 500 of 1000: loss=0.832 " + "l1=0.597" + "l2=0.235 f=-0.588 shape=(1, 9000, 1)
logits [[ 6.5051556 -3.6480083  4.668978  -9.879165 ]]
Iteration 600 of 1000: loss=0.701 " + "l1=0.447" + "l2=0.254 f=-0.614 shape=(1, 9000, 1)
logits [[ 6.0933595 -3.7812903  4.7182307 -9.48749  ]]
Iteration 700 of 1000: loss=0.581 " + "l1=0.286" + "l2=0.296 f=-0.62 shape=(1, 9000, 1)
logits [[ 5.6246614 -3.851499   4.7454176 -8.999686 ]]
Iteration 800 of 1000: loss=0.453 " + "l1=0.145" + "l2=0.308 f=-0.63 shape=(1, 9000, 1)
logits [[ 5.194162 -3.894926  4.748944 -8.569916]]
Iteration 900 of 1000: loss=0.376 " + "l1=0.0606" + "l2=0.316 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.9268703 -3.8797545  4.740494  -8.26827  ]]
--- 263.86609649658203 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.19 " + "l1=0.19" + "l2=0 f=-0.58 shape=(1, 9000, 1)
logits [[  7.9212894  -2.9970465   3.8716464 -11.113922 ]]
Iteration 100 of 1000: loss=0.189 " + "l1=0.189" + "l2=0.000629 f=-0.576 shape=(1, 9000, 1)
logits [[  7.856881   -2.9677968   3.8343546 -11.027001 ]]
Iteration 200 of 1000: loss=0.189 " + "l1=0.189" + "l2=0.000637 f=-0.575 shape=(1, 9000, 1)
logits [[  7.8473806  -2.9647825   3.8306084 -11.015185 ]]
Iteration 300 of 1000: loss=0.189 " + "l1=0.188" + "l2=0.000766 f=-0.575 shape=(1, 9000, 1)
logits [[  7.8343277  -2.9590876   3.823773  -10.998541 ]]
Iteration 400 of 1000: loss=0.189 " + "l1=0.188" + "l2=0.000912 f=-0.574 shape=(1, 9000, 1)
logits [[  7.8215013  -2.952816    3.8165357 -10.982461 ]]
Iteration 500 of 1000: loss=0.189 " + "l1=0.188" + "l2=0.00108 f=-0.574 shape=(1, 9000, 1)
logits [[  7.8093896  -2.9465106   3.8094392 -10.967737 ]]
Iteration 600 of 1000: loss=0.189 " + "l1=0.188" + "l2=0.00122 f=-0.573 shape=(1, 9000, 1)
logits [[  7.797768   -2.9403431   3.8026578 -10.954081 ]]
Iteration 700 of 1000: loss=0.189 " + "l1=0.187" + "l2=0.00137 f=-0.573 shape=(1, 9000, 1)
logits [[  7.786635   -2.9344378   3.7961931 -10.9414015]]
Iteration 800 of 1000: loss=0.189 " + "l1=0.187" + "l2=0.00153 f=-0.573 shape=(1, 9000, 1)
logits [[  7.775805   -2.9289942   3.790133  -10.929479 ]]
Iteration 900 of 1000: loss=0.189 " + "l1=0.187" + "l2=0.0017 f=-0.573 shape=(1, 9000, 1)
logits [[  7.765053   -2.9238021   3.7843552 -10.917899 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.9 " + "l1=1.9" + "l2=0 f=-0.58 shape=(1, 9000, 1)
logits [[  7.9212894  -2.9970465   3.8716464 -11.113922 ]]
Iteration 100 of 1000: loss=1.82 " + "l1=1.77" + "l2=0.0492 f=-0.55 shape=(1, 9000, 1)
logits [[  7.3534994  -2.7439678   3.5467854 -10.354877 ]]
Iteration 200 of 1000: loss=1.78 " + "l1=1.71" + "l2=0.071 f=-0.536 shape=(1, 9000, 1)
logits [[  7.095697   -2.6286454   3.408426  -10.02066  ]]
Iteration 300 of 1000: loss=1.75 " + "l1=1.66" + "l2=0.091 f=-0.527 shape=(1, 9000, 1)
logits [[ 6.8450856 -2.5030096  3.2636795 -9.711795 ]]
Iteration 400 of 1000: loss=1.71 " + "l1=1.6" + "l2=0.111 f=-0.525 shape=(1, 9000, 1)
logits [[ 6.5813584 -2.3823326  3.1088467 -9.408005 ]]
Iteration 500 of 1000: loss=1.67 " + "l1=1.55" + "l2=0.125 f=-0.527 shape=(1, 9000, 1)
logits [[ 6.3309994 -2.2670484  2.961403  -9.134551 ]]
Iteration 600 of 1000: loss=1.63 " + "l1=1.49" + "l2=0.138 f=-0.532 shape=(1, 9000, 1)
logits [[ 6.0735373 -2.166778   2.8295934 -8.8643265]]
Iteration 700 of 1000: loss=1.58 " + "l1=1.43" + "l2=0.154 f=-0.546 shape=(1, 9000, 1)
logits [[ 5.7595177 -2.063056   2.6713114 -8.553345 ]]
Iteration 800 of 1000: loss=1.52 " + "l1=1.35" + "l2=0.169 f=-0.555 shape=(1, 9000, 1)
logits [[ 5.3931284 -1.9853019  2.52329   -8.150517 ]]
Iteration 900 of 1000: loss=1.46 " + "l1=1.28" + "l2=0.181 f=-0.555 shape=(1, 9000, 1)
logits [[ 5.03302   -1.9164482  2.391548  -7.729413 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=19 " + "l1=19" + "l2=0 f=-0.58 shape=(1, 9000, 1)
logits [[  7.9212894  -2.9970465   3.8716464 -11.113922 ]]
Iteration 100 of 1000: loss=9.71 " + "l1=4.79" + "l2=4.91 f=-0.48 shape=(1, 9000, 1)
logits [[ 1.3529679 -0.7451891  0.9139119 -3.4399493]]
Iteration 200 of 1000: loss=6.2 " + "l1=1.23" + "l2=4.98 f=-0.357 shape=(1, 9000, 1)
logits [[ 0.15384832 -0.76096916  0.20195095 -1.0245187 ]]
Iteration 300 of 1000: loss=5.09 " + "l1=0.192" + "l2=4.9 f=-0.313 shape=(1, 9000, 1)
logits [[-0.2043204  -0.74072146 -0.05802897 -0.24985668]]
Iteration 400 of 1000: loss=4.3 " + "l1=0" + "l2=4.3 f=-0.293 shape=(1, 9000, 1)
logits [[-0.16362353 -0.8245992  -0.09725171 -0.08570035]]
Iteration 500 of 1000: loss=3.74 " + "l1=0" + "l2=3.74 f=-0.297 shape=(1, 9000, 1)
logits [[-0.12957369 -0.88432616 -0.08775664 -0.08638804]]
Iteration 600 of 1000: loss=3.29 " + "l1=0.0191" + "l2=3.27 f=-0.296 shape=(1, 9000, 1)
logits [[-0.1085503  -0.91789764 -0.06936012 -0.0884537 ]]
Iteration 700 of 1000: loss=2.88 " + "l1=0" + "l2=2.88 f=-0.29 shape=(1, 9000, 1)
logits [[-0.07729894 -0.9429802  -0.07225598 -0.06790289]]
Iteration 800 of 1000: loss=2.61 " + "l1=0.0156" + "l2=2.6 f=-0.287 shape=(1, 9000, 1)
logits [[-0.05916233 -0.95419395 -0.05876308 -0.07435831]]
Iteration 900 of 1000: loss=2.4 " + "l1=0.00411" + "l2=2.4 f=-0.284 shape=(1, 9000, 1)
logits [[-0.06538415 -0.95304906 -0.05665933 -0.06077219]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=10.5 " + "l1=10.5" + "l2=0 f=-0.58 shape=(1, 9000, 1)
logits [[  7.9212894  -2.9970465   3.8716464 -11.113922 ]]
Iteration 100 of 1000: loss=7.38 " + "l1=5.55" + "l2=1.83 f=-0.462 shape=(1, 9000, 1)
logits [[ 3.9148836 -1.4270362  1.8400444 -6.174001 ]]
Iteration 200 of 1000: loss=5.63 " + "l1=2.55" + "l2=3.08 f=-0.474 shape=(1, 9000, 1)
logits [[ 1.3298469  -0.8409832   0.91809046 -3.304178  ]]
Iteration 300 of 1000: loss=4.67 " + "l1=1.54" + "l2=3.13 f=-0.459 shape=(1, 9000, 1)
logits [[ 0.58424443 -0.7823121   0.5831298  -2.2229931 ]]
Iteration 400 of 1000: loss=4.01 " + "l1=1.2" + "l2=2.82 f=-0.438 shape=(1, 9000, 1)
logits [[ 0.38314292 -0.73834145  0.38852504 -1.7856889 ]]
Iteration 500 of 1000: loss=3.42 " + "l1=0.911" + "l2=2.51 f=-0.394 shape=(1, 9000, 1)
logits [[ 0.2865033  -0.78922063  0.29125434 -1.3654048 ]]
Iteration 600 of 1000: loss=2.89 " + "l1=0.553" + "l2=2.34 f=-0.337 shape=(1, 9000, 1)
logits [[ 0.15938616 -0.83161175  0.16526283 -0.8409701 ]]
Iteration 700 of 1000: loss=2.37 " + "l1=0.132" + "l2=2.24 f=-0.269 shape=(1, 9000, 1)
logits [[ 0.01698772 -0.8898137   0.01846053 -0.22241   ]]
Iteration 800 of 1000: loss=2 " + "l1=0.0144" + "l2=1.99 f=-0.245 shape=(1, 9000, 1)
logits [[-0.0190347  -0.90380436 -0.01626158 -0.04238027]]
Iteration 900 of 1000: loss=1.77 " + "l1=0.013" + "l2=1.76 f=-0.237 shape=(1, 9000, 1)
logits [[-0.01894554 -0.88717467 -0.00979267 -0.03341135]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=6.19 " + "l1=6.19" + "l2=0 f=-0.58 shape=(1, 9000, 1)
logits [[  7.9212894  -2.9970465   3.8716464 -11.113922 ]]
Iteration 100 of 1000: loss=5.12 " + "l1=4.4" + "l2=0.719 f=-0.486 shape=(1, 9000, 1)
logits [[ 5.5031796 -1.9452268  2.5436606 -8.043743 ]]
Iteration 200 of 1000: loss=4.54 " + "l1=3.48" + "l2=1.06 f=-0.5 shape=(1, 9000, 1)
logits [[ 4.1775537 -1.6329968  1.9882566 -6.5337086]]
Iteration 300 of 1000: loss=4.04 " + "l1=2.78" + "l2=1.27 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.1740546 -1.3808491  1.6053798 -5.369218 ]]
Iteration 400 of 1000: loss=3.44 " + "l1=1.98" + "l2=1.46 f=-0.476 shape=(1, 9000, 1)
logits [[ 2.1191807 -1.2744093  1.2204801 -3.970116 ]]
Iteration 500 of 1000: loss=2.87 " + "l1=1.33" + "l2=1.55 f=-0.454 shape=(1, 9000, 1)
logits [[ 1.2386111  -1.1219113   0.90465885 -2.8392503 ]]
Iteration 600 of 1000: loss=2.44 " + "l1=0.909" + "l2=1.53 f=-0.402 shape=(1, 9000, 1)
logits [[ 0.747735  -1.0302485  0.7240352 -2.049311 ]]
Iteration 700 of 1000: loss=2.12 " + "l1=0.721" + "l2=1.4 f=-0.343 shape=(1, 9000, 1)
logits [[ 0.61936563 -1.0219293   0.62325186 -1.5939126 ]]
Iteration 800 of 1000: loss=1.87 " + "l1=0.555" + "l2=1.31 f=-0.296 shape=(1, 9000, 1)
logits [[ 0.515039  -1.0391885  0.5232083 -1.1848339]]
Iteration 900 of 1000: loss=1.63 " + "l1=0.385" + "l2=1.25 f=-0.271 shape=(1, 9000, 1)
logits [[ 0.3853329  -1.0649018   0.38995823 -0.79346645]]
--- 305.07492542266846 seconds ---
Adv result:3
Loading record A02853
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0643 " + "l1=0.0643" + "l2=0 f=-0.246 shape=(1, 9000, 1)
logits [[ 3.7751863 -2.6560214  2.8776367 -4.9789543]]
Iteration 100 of 1000: loss=0.0636 " + "l1=0.0632" + "l2=0.000487 f=-0.242 shape=(1, 9000, 1)
logits [[ 3.7165914 -2.599458   2.8405316 -4.9259   ]]
Iteration 200 of 1000: loss=0.0635 " + "l1=0.063" + "l2=0.000499 f=-0.241 shape=(1, 9000, 1)
logits [[ 3.7078457 -2.58969    2.833344  -4.916743 ]]
Iteration 300 of 1000: loss=0.0633 " + "l1=0.0627" + "l2=0.000602 f=-0.241 shape=(1, 9000, 1)
logits [[ 3.6955068 -2.5758696  2.8242807 -4.906013 ]]
Iteration 400 of 1000: loss=0.0632 " + "l1=0.0625" + "l2=0.00071 f=-0.24 shape=(1, 9000, 1)
logits [[ 3.684082  -2.5640712  2.8161676 -4.896102 ]]
Iteration 500 of 1000: loss=0.0631 " + "l1=0.0623" + "l2=0.00082 f=-0.24 shape=(1, 9000, 1)
logits [[ 3.6728714 -2.5539403  2.8088088 -4.8860073]]
Iteration 600 of 1000: loss=0.0631 " + "l1=0.0621" + "l2=0.00101 f=-0.239 shape=(1, 9000, 1)
logits [[ 3.661609  -2.5444179  2.8015578 -4.875955 ]]
Iteration 700 of 1000: loss=0.0629 " + "l1=0.0619" + "l2=0.00107 f=-0.239 shape=(1, 9000, 1)
logits [[ 3.6513228 -2.5357206  2.7948008 -4.8668933]]
Iteration 800 of 1000: loss=0.0629 " + "l1=0.0617" + "l2=0.00119 f=-0.239 shape=(1, 9000, 1)
logits [[ 3.6414165 -2.5276406  2.788402  -4.858443 ]]
Iteration 900 of 1000: loss=0.0628 " + "l1=0.0615" + "l2=0.00129 f=-0.239 shape=(1, 9000, 1)
logits [[ 3.6319141 -2.520225   2.7822995 -4.850271 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.643 " + "l1=0.643" + "l2=0 f=-0.246 shape=(1, 9000, 1)
logits [[ 3.7751863 -2.6560214  2.8776367 -4.9789543]]
Iteration 100 of 1000: loss=0.579 " + "l1=0.539" + "l2=0.0395 f=-0.234 shape=(1, 9000, 1)
logits [[ 3.2436783 -2.1474137  2.5484548 -4.5794864]]
Iteration 200 of 1000: loss=0.557 " + "l1=0.508" + "l2=0.0493 f=-0.235 shape=(1, 9000, 1)
logits [[ 3.0618243 -2.0150073  2.455273  -4.443606 ]]
Iteration 300 of 1000: loss=0.535 " + "l1=0.477" + "l2=0.0572 f=-0.237 shape=(1, 9000, 1)
logits [[ 2.8836715 -1.8911564  2.3633864 -4.302899 ]]
Iteration 400 of 1000: loss=0.516 " + "l1=0.453" + "l2=0.0624 f=-0.238 shape=(1, 9000, 1)
logits [[ 2.7320008 -1.799939   2.287157  -4.172255 ]]
Iteration 500 of 1000: loss=0.497 " + "l1=0.429" + "l2=0.0676 f=-0.241 shape=(1, 9000, 1)
logits [[ 2.5775945 -1.7167288  2.2137969 -4.0366745]]
Iteration 600 of 1000: loss=0.48 " + "l1=0.408" + "l2=0.0725 f=-0.242 shape=(1, 9000, 1)
logits [[ 2.4406784 -1.6381553  2.144309  -3.9158502]]
Iteration 700 of 1000: loss=0.463 " + "l1=0.387" + "l2=0.0767 f=-0.245 shape=(1, 9000, 1)
logits [[ 2.3028858 -1.5640033  2.0705452 -3.7882323]]
Iteration 800 of 1000: loss=0.447 " + "l1=0.365" + "l2=0.0815 f=-0.25 shape=(1, 9000, 1)
logits [[ 2.166664  -1.4865696  1.9983562 -3.6783442]]
Iteration 900 of 1000: loss=0.429 " + "l1=0.344" + "l2=0.0849 f=-0.256 shape=(1, 9000, 1)
logits [[ 2.038512  -1.4037038  1.923084  -3.58307  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.43 " + "l1=6.43" + "l2=0 f=-0.246 shape=(1, 9000, 1)
logits [[ 3.7751863 -2.6560214  2.8776367 -4.9789543]]
Iteration 100 of 1000: loss=2.79 " + "l1=1.44" + "l2=1.36 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.0739206 -0.3540538  1.0814738 -3.200839 ]]
Iteration 200 of 1000: loss=1.95 " + "l1=0.579" + "l2=1.37 f=-0.368 shape=(1, 9000, 1)
logits [[ 0.5912597   0.01526102  0.5947331  -2.6713326 ]]
Iteration 300 of 1000: loss=1.13 " + "l1=0.00454" + "l2=1.12 f=-0.37 shape=(1, 9000, 1)
logits [[ 0.2519255   0.2473872   0.24821772 -2.2293003 ]]
Iteration 400 of 1000: loss=0.848 " + "l1=0" + "l2=0.848 f=-0.38 shape=(1, 9000, 1)
logits [[ 0.22168975  0.23385827  0.23181199 -2.2081444 ]]
Iteration 500 of 1000: loss=0.725 " + "l1=0" + "l2=0.725 f=-0.384 shape=(1, 9000, 1)
logits [[ 0.20978841  0.22747159  0.22739197 -2.2025044 ]]
Iteration 600 of 1000: loss=0.654 " + "l1=0.00689" + "l2=0.647 f=-0.387 shape=(1, 9000, 1)
logits [[ 0.20477197  0.21632902  0.22322078 -2.1939123 ]]
Iteration 700 of 1000: loss=0.601 " + "l1=0.00257" + "l2=0.599 f=-0.39 shape=(1, 9000, 1)
logits [[ 0.21575186  0.21318673  0.20867057 -2.1964555 ]]
Iteration 800 of 1000: loss=0.564 " + "l1=0.00247" + "l2=0.561 f=-0.391 shape=(1, 9000, 1)
logits [[ 0.20901889  0.20654915  0.20601325 -2.1858835 ]]
Iteration 900 of 1000: loss=0.531 " + "l1=0" + "l2=0.531 f=-0.395 shape=(1, 9000, 1)
logits [[ 0.18883924  0.20664458  0.19711219 -2.1723921 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.54 " + "l1=3.54" + "l2=0 f=-0.246 shape=(1, 9000, 1)
logits [[ 3.7751863 -2.6560214  2.8776367 -4.9789543]]
Iteration 100 of 1000: loss=2.09 " + "l1=1.5" + "l2=0.592 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.7075197 -1.0122303  1.7033459 -3.5235581]]
Iteration 200 of 1000: loss=1.7 " + "l1=1.03" + "l2=0.67 f=-0.301 shape=(1, 9000, 1)
logits [[ 1.2582464 -0.6122579  1.2613344 -3.1111827]]
Iteration 300 of 1000: loss=1.33 " + "l1=0.618" + "l2=0.709 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.8444765  -0.27425018  0.8500342  -2.725724  ]]
Iteration 400 of 1000: loss=0.899 " + "l1=0.181" + "l2=0.717 f=-0.374 shape=(1, 9000, 1)
logits [[ 0.38601843  0.06786633  0.3973851  -2.346068  ]]
Iteration 500 of 1000: loss=0.719 " + "l1=0.0806" + "l2=0.638 f=-0.391 shape=(1, 9000, 1)
logits [[ 0.26719308  0.13168585  0.27821848 -2.2396247 ]]
Iteration 600 of 1000: loss=0.605 " + "l1=0" + "l2=0.605 f=-0.394 shape=(1, 9000, 1)
logits [[ 0.18776244  0.19881892  0.19702469 -2.1608448 ]]
Iteration 700 of 1000: loss=0.534 " + "l1=0.00154" + "l2=0.533 f=-0.392 shape=(1, 9000, 1)
logits [[ 0.18808255  0.18923904  0.1920324  -2.138427  ]]
Iteration 800 of 1000: loss=0.487 " + "l1=0" + "l2=0.487 f=-0.393 shape=(1, 9000, 1)
logits [[ 0.16441943  0.18730274  0.18361714 -2.1076694 ]]
Iteration 900 of 1000: loss=0.439 " + "l1=0.00189" + "l2=0.437 f=-0.392 shape=(1, 9000, 1)
logits [[ 0.16839653  0.17072085  0.17415026 -2.0809853 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.09 " + "l1=2.09" + "l2=0 f=-0.246 shape=(1, 9000, 1)
logits [[ 3.7751863 -2.6560214  2.8776367 -4.9789543]]
Iteration 100 of 1000: loss=1.49 " + "l1=1.18" + "l2=0.309 f=-0.259 shape=(1, 9000, 1)
logits [[ 2.1750464 -1.4528283  2.061568  -3.8183403]]
Iteration 200 of 1000: loss=1.28 " + "l1=0.946" + "l2=0.334 f=-0.27 shape=(1, 9000, 1)
logits [[ 1.7573048 -1.1532034  1.7489762 -3.43212  ]]
Iteration 300 of 1000: loss=1.14 " + "l1=0.782" + "l2=0.354 f=-0.286 shape=(1, 9000, 1)
logits [[ 1.4795122  -0.92510647  1.4784299  -3.1780567 ]]
Iteration 400 of 1000: loss=0.972 " + "l1=0.561" + "l2=0.411 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.1270236 -0.6006517  1.1243159 -2.882487 ]]
Iteration 500 of 1000: loss=0.799 " + "l1=0.352" + "l2=0.447 f=-0.323 shape=(1, 9000, 1)
logits [[ 0.76591134 -0.31322476  0.77125466 -2.5172446 ]]
Iteration 600 of 1000: loss=0.681 " + "l1=0.247" + "l2=0.434 f=-0.344 shape=(1, 9000, 1)
logits [[ 0.5757141  -0.18443446  0.575007   -2.3417752 ]]
Iteration 700 of 1000: loss=0.595 " + "l1=0.182" + "l2=0.413 f=-0.362 shape=(1, 9000, 1)
logits [[ 0.4515508  -0.10351855  0.45720556 -2.2546659 ]]
Iteration 800 of 1000: loss=0.517 " + "l1=0.131" + "l2=0.385 f=-0.387 shape=(1, 9000, 1)
logits [[ 0.36418608 -0.04003954  0.36302122 -2.2354906 ]]
Iteration 900 of 1000: loss=0.465 " + "l1=0.105" + "l2=0.36 f=-0.399 shape=(1, 9000, 1)
logits [[ 0.3091477  -0.00848037  0.31604567 -2.2117918 ]]
--- 305.65278363227844 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00898 " + "l1=0.00898" + "l2=0 f=-0.246 shape=(1, 9000, 1)
logits [[ 3.7751863 -2.6560214  2.8776367 -4.9789543]]
Iteration 100 of 1000: loss=0.00871 " + "l1=0.00848" + "l2=0.000238 f=-0.246 shape=(1, 9000, 1)
logits [[ 3.738713  -2.6677802  2.890983  -4.947227 ]]
Iteration 200 of 1000: loss=0.00864 " + "l1=0.00844" + "l2=0.000204 f=-0.246 shape=(1, 9000, 1)
logits [[ 3.736345  -2.669259   2.8922942 -4.9451857]]
Iteration 300 of 1000: loss=0.0086 " + "l1=0.00836" + "l2=0.000239 f=-0.247 shape=(1, 9000, 1)
logits [[ 3.73115   -2.6714818  2.894678  -4.940788 ]]
Iteration 400 of 1000: loss=0.00856 " + "l1=0.00828" + "l2=0.000284 f=-0.247 shape=(1, 9000, 1)
logits [[ 3.725486  -2.6741207  2.897545  -4.9362655]]
Iteration 500 of 1000: loss=0.00859 " + "l1=0.0082" + "l2=0.000395 f=-0.247 shape=(1, 9000, 1)
logits [[ 3.7199914 -2.6766632  2.9003506 -4.9320216]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0898 " + "l1=0.0898" + "l2=0 f=-0.246 shape=(1, 9000, 1)
logits [[ 3.7751863 -2.6560214  2.8776367 -4.9789543]]
Iteration 100 of 1000: loss=0.0663 " + "l1=0.0534" + "l2=0.0129 f=-0.254 shape=(1, 9000, 1)
logits [[ 3.5155993 -2.7514935  2.981577  -4.763091 ]]
Iteration 200 of 1000: loss=0.0571 " + "l1=0.0392" + "l2=0.0179 f=-0.26 shape=(1, 9000, 1)
logits [[ 3.4179835 -2.7947712  3.0261    -4.6887565]]
Iteration 300 of 1000: loss=0.048 " + "l1=0.0259" + "l2=0.0221 f=-0.268 shape=(1, 9000, 1)
logits [[ 3.3248498 -2.8433511  3.0658133 -4.617938 ]]
Iteration 400 of 1000: loss=0.0391 " + "l1=0.0135" + "l2=0.0256 f=-0.277 shape=(1, 9000, 1)
logits [[ 3.2390232 -2.8910127  3.1041825 -4.5585184]]
Iteration 500 of 1000: loss=0.0297 " + "l1=0.000517" + "l2=0.0292 f=-0.285 shape=(1, 9000, 1)
logits [[ 3.1485407 -2.9382696  3.1433666 -4.4947624]]
Iteration 600 of 1000: loss=0.0233 " + "l1=0.000608" + "l2=0.0227 f=-0.287 shape=(1, 9000, 1)
logits [[ 3.151491  -2.9463997  3.1454098 -4.499403 ]]
Iteration 700 of 1000: loss=0.0194 " + "l1=0" + "l2=0.0194 f=-0.289 shape=(1, 9000, 1)
logits [[ 3.147179  -2.9553533  3.1484032 -4.496726 ]]
Iteration 800 of 1000: loss=0.0171 " + "l1=0" + "l2=0.0171 f=-0.292 shape=(1, 9000, 1)
logits [[ 3.1458545 -2.962221   3.1476815 -4.497584 ]]
Iteration 900 of 1000: loss=0.0155 " + "l1=0" + "l2=0.0155 f=-0.294 shape=(1, 9000, 1)
logits [[ 3.1452458 -2.9661765  3.1459205 -4.499727 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0494 " + "l1=0.0494" + "l2=0 f=-0.246 shape=(1, 9000, 1)
logits [[ 3.7751863 -2.6560214  2.8776367 -4.9789543]]
Iteration 100 of 1000: loss=0.0421 " + "l1=0.0379" + "l2=0.00415 f=-0.25 shape=(1, 9000, 1)
logits [[ 3.622589  -2.706808   2.9330819 -4.8480134]]
Iteration 200 of 1000: loss=0.0395 " + "l1=0.0343" + "l2=0.00521 f=-0.253 shape=(1, 9000, 1)
logits [[ 3.5785203 -2.7279267  2.9544554 -4.815555 ]]
Iteration 300 of 1000: loss=0.0373 " + "l1=0.031" + "l2=0.00631 f=-0.255 shape=(1, 9000, 1)
logits [[ 3.5380845 -2.7471883  2.9747217 -4.7844825]]
Iteration 400 of 1000: loss=0.0351 " + "l1=0.0279" + "l2=0.00722 f=-0.257 shape=(1, 9000, 1)
logits [[ 3.5000012 -2.7629642  2.9923043 -4.755389 ]]
Iteration 500 of 1000: loss=0.033 " + "l1=0.0248" + "l2=0.00824 f=-0.259 shape=(1, 9000, 1)
logits [[ 3.461305  -2.7808707  3.0110388 -4.7275796]]
Iteration 600 of 1000: loss=0.0307 " + "l1=0.0211" + "l2=0.00957 f=-0.263 shape=(1, 9000, 1)
logits [[ 3.418266  -2.8118365  3.034459  -4.694771 ]]
Iteration 700 of 1000: loss=0.0282 " + "l1=0.0177" + "l2=0.0105 f=-0.268 shape=(1, 9000, 1)
logits [[ 3.3767166 -2.8367424  3.054865  -4.6669307]]
Iteration 800 of 1000: loss=0.0259 " + "l1=0.0143" + "l2=0.0115 f=-0.273 shape=(1, 9000, 1)
logits [[ 3.3355582 -2.860152   3.0748017 -4.641194 ]]
Iteration 900 of 1000: loss=0.0235 " + "l1=0.011" + "l2=0.0125 f=-0.277 shape=(1, 9000, 1)
logits [[ 3.2899    -2.8815708  3.090318  -4.6076493]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0696 " + "l1=0.0696" + "l2=0 f=-0.246 shape=(1, 9000, 1)
logits [[ 3.7751863 -2.6560214  2.8776367 -4.9789543]]
Iteration 100 of 1000: loss=0.0553 " + "l1=0.0475" + "l2=0.00786 f=-0.252 shape=(1, 9000, 1)
logits [[ 3.5703077 -2.7299187  2.958021  -4.806979 ]]
Iteration 200 of 1000: loss=0.0501 " + "l1=0.0399" + "l2=0.0102 f=-0.256 shape=(1, 9000, 1)
logits [[ 3.50424   -2.7597675  2.9896169 -4.757126 ]]
Iteration 300 of 1000: loss=0.0454 " + "l1=0.0326" + "l2=0.0127 f=-0.259 shape=(1, 9000, 1)
logits [[ 3.4403722 -2.7876637  3.0191238 -4.7083993]]
Iteration 400 of 1000: loss=0.0403 " + "l1=0.025" + "l2=0.0152 f=-0.265 shape=(1, 9000, 1)
logits [[ 3.374088  -2.8247583  3.0509236 -4.6589174]]
Iteration 500 of 1000: loss=0.0351 " + "l1=0.0181" + "l2=0.017 f=-0.271 shape=(1, 9000, 1)
logits [[ 3.312015  -2.8589082  3.0786865 -4.6150837]]
Iteration 600 of 1000: loss=0.03 " + "l1=0.0109" + "l2=0.0191 f=-0.278 shape=(1, 9000, 1)
logits [[ 3.2462976 -2.892567   3.1058428 -4.569874 ]]
Iteration 700 of 1000: loss=0.0245 " + "l1=0.00305" + "l2=0.0214 f=-0.285 shape=(1, 9000, 1)
logits [[ 3.1766355 -2.9325094  3.1372194 -4.519718 ]]
Iteration 800 of 1000: loss=0.0195 " + "l1=9e-05" + "l2=0.0194 f=-0.289 shape=(1, 9000, 1)
logits [[ 3.1482468 -2.9514155  3.147086  -4.4986463]]
Iteration 900 of 1000: loss=0.017 " + "l1=0.00021" + "l2=0.0168 f=-0.291 shape=(1, 9000, 1)
logits [[ 3.1480403 -2.9587226  3.1453319 -4.499411 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0595 " + "l1=0.0595" + "l2=0 f=-0.246 shape=(1, 9000, 1)
logits [[ 3.7751863 -2.6560214  2.8776367 -4.9789543]]
Iteration 100 of 1000: loss=0.049 " + "l1=0.043" + "l2=0.00594 f=-0.251 shape=(1, 9000, 1)
logits [[ 3.5946445 -2.718254   2.945284  -4.825282 ]]
Iteration 200 of 1000: loss=0.0453 " + "l1=0.0378" + "l2=0.00741 f=-0.254 shape=(1, 9000, 1)
logits [[ 3.5431952 -2.7438655  2.9719512 -4.787458 ]]
Iteration 300 of 1000: loss=0.0419 " + "l1=0.0329" + "l2=0.00897 f=-0.256 shape=(1, 9000, 1)
logits [[ 3.492298  -2.7646868  2.9953651 -4.7474494]]
Iteration 400 of 1000: loss=0.0386 " + "l1=0.0279" + "l2=0.0107 f=-0.259 shape=(1, 9000, 1)
logits [[ 3.4407938 -2.7882447  3.0193052 -4.7093635]]
Iteration 500 of 1000: loss=0.035 " + "l1=0.0225" + "l2=0.0125 f=-0.265 shape=(1, 9000, 1)
logits [[ 3.3871377 -2.8248193  3.047538  -4.669111 ]]
Iteration 600 of 1000: loss=0.0314 " + "l1=0.0174" + "l2=0.014 f=-0.27 shape=(1, 9000, 1)
logits [[ 3.3330896 -2.8532443  3.0707593 -4.6315513]]
Iteration 700 of 1000: loss=0.0277 " + "l1=0.0124" + "l2=0.0153 f=-0.276 shape=(1, 9000, 1)
logits [[ 3.2803438 -2.8816812  3.0935676 -4.59612  ]]
Iteration 800 of 1000: loss=0.0239 " + "l1=0.00697" + "l2=0.0169 f=-0.282 shape=(1, 9000, 1)
logits [[ 3.2214272 -2.9127119  3.1161652 -4.5521064]]
Iteration 900 of 1000: loss=0.0199 " + "l1=0.00133" + "l2=0.0186 f=-0.288 shape=(1, 9000, 1)
logits [[ 3.159932  -2.9451706  3.1398923 -4.5061116]]
--- 282.133615732193 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0875 " + "l1=0.0875" + "l2=0 f=-0.246 shape=(1, 9000, 1)
logits [[ 3.7751863 -2.6560214  2.8776367 -4.9789543]]
Iteration 100 of 1000: loss=0.0864 " + "l1=0.0857" + "l2=0.000703 f=-0.242 shape=(1, 9000, 1)
logits [[ 3.6948664 -2.6356437  2.853078  -4.878949 ]]
Iteration 200 of 1000: loss=0.0861 " + "l1=0.0853" + "l2=0.000774 f=-0.241 shape=(1, 9000, 1)
logits [[ 3.67761   -2.6314454  2.846264  -4.8570647]]
Iteration 300 of 1000: loss=0.0858 " + "l1=0.0849" + "l2=0.000939 f=-0.241 shape=(1, 9000, 1)
logits [[ 3.6573968 -2.626826   2.8382835 -4.831628 ]]
Iteration 400 of 1000: loss=0.0856 " + "l1=0.0845" + "l2=0.00109 f=-0.24 shape=(1, 9000, 1)
logits [[ 3.6385322 -2.6219122  2.8307333 -4.8085237]]
Iteration 500 of 1000: loss=0.0854 " + "l1=0.0841" + "l2=0.00128 f=-0.24 shape=(1, 9000, 1)
logits [[ 3.6208088 -2.6177232  2.82382   -4.786812 ]]
Iteration 600 of 1000: loss=0.0852 " + "l1=0.0837" + "l2=0.00145 f=-0.24 shape=(1, 9000, 1)
logits [[ 3.6051526 -2.6140933  2.8173275 -4.7675896]]
Iteration 700 of 1000: loss=0.085 " + "l1=0.0834" + "l2=0.00163 f=-0.24 shape=(1, 9000, 1)
logits [[ 3.589059  -2.610643   2.8107789 -4.747993 ]]
Iteration 800 of 1000: loss=0.0848 " + "l1=0.083" + "l2=0.0018 f=-0.24 shape=(1, 9000, 1)
logits [[ 3.573861  -2.6075823  2.8047209 -4.7297883]]
Iteration 900 of 1000: loss=0.0846 " + "l1=0.0827" + "l2=0.00193 f=-0.24 shape=(1, 9000, 1)
logits [[ 3.5586956 -2.6043153  2.798628  -4.7118955]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.875 " + "l1=0.875" + "l2=0 f=-0.246 shape=(1, 9000, 1)
logits [[ 3.7751863 -2.6560214  2.8776367 -4.9789543]]
Iteration 100 of 1000: loss=0.778 " + "l1=0.728" + "l2=0.0507 f=-0.224 shape=(1, 9000, 1)
logits [[ 3.0837736 -2.4267056  2.6410563 -4.194448 ]]
Iteration 200 of 1000: loss=0.736 " + "l1=0.666" + "l2=0.0698 f=-0.218 shape=(1, 9000, 1)
logits [[ 2.8008518 -2.3744984  2.5588024 -3.8560662]]
Iteration 300 of 1000: loss=0.69 " + "l1=0.596" + "l2=0.0939 f=-0.214 shape=(1, 9000, 1)
logits [[ 2.483595  -2.3295238  2.4638643 -3.4751287]]
Iteration 400 of 1000: loss=0.65 " + "l1=0.558" + "l2=0.0921 f=-0.212 shape=(1, 9000, 1)
logits [[ 2.3329427 -2.264176   2.3312902 -3.2480025]]
Iteration 500 of 1000: loss=0.621 " + "l1=0.525" + "l2=0.0957 f=-0.215 shape=(1, 9000, 1)
logits [[ 2.1869102 -2.169571   2.1866515 -3.0621462]]
Iteration 600 of 1000: loss=0.595 " + "l1=0.499" + "l2=0.0958 f=-0.219 shape=(1, 9000, 1)
logits [[ 2.0703397 -2.099723   2.0710757 -2.91934  ]]
Iteration 700 of 1000: loss=0.572 " + "l1=0.473" + "l2=0.0991 f=-0.225 shape=(1, 9000, 1)
logits [[ 1.9549042 -2.0394711  1.9569691 -2.773611 ]]
Iteration 800 of 1000: loss=0.551 " + "l1=0.447" + "l2=0.104 f=-0.23 shape=(1, 9000, 1)
logits [[ 1.8468062 -1.9959298  1.8497125 -2.6207244]]
Iteration 900 of 1000: loss=0.531 " + "l1=0.426" + "l2=0.105 f=-0.233 shape=(1, 9000, 1)
logits [[ 1.760356  -1.9538486  1.7600524 -2.4990327]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.75 " + "l1=8.75" + "l2=0 f=-0.246 shape=(1, 9000, 1)
logits [[ 3.7751863 -2.6560214  2.8776367 -4.9789543]]
Iteration 100 of 1000: loss=4.12 " + "l1=2.48" + "l2=1.64 f=-0.152 shape=(1, 9000, 1)
logits [[ 0.94125044 -1.1794081   1.0543076  -1.4253087 ]]
Iteration 200 of 1000: loss=2.57 " + "l1=0.663" + "l2=1.91 f=-0.163 shape=(1, 9000, 1)
logits [[ 0.03136671 -0.91252255  0.44637215 -0.21710774]]
Iteration 300 of 1000: loss=1.68 " + "l1=0.0219" + "l2=1.65 f=-0.161 shape=(1, 9000, 1)
logits [[-0.29169542 -0.9196854   0.29467714  0.27273193]]
Iteration 400 of 1000: loss=1.28 " + "l1=0.00133" + "l2=1.28 f=-0.156 shape=(1, 9000, 1)
logits [[-0.30682197 -0.99078304  0.33651844  0.33519056]]
Iteration 500 of 1000: loss=1.07 " + "l1=0.00432" + "l2=1.06 f=-0.176 shape=(1, 9000, 1)
logits [[-0.37140027 -1.0252222   0.34783584  0.34351397]]
Iteration 600 of 1000: loss=0.909 " + "l1=0" + "l2=0.909 f=-0.202 shape=(1, 9000, 1)
logits [[-0.452831   -0.9912359   0.30631715  0.32933035]]
Iteration 700 of 1000: loss=0.799 " + "l1=0" + "l2=0.799 f=-0.216 shape=(1, 9000, 1)
logits [[-0.49929917 -0.9579611   0.28888687  0.3044017 ]]
Iteration 800 of 1000: loss=0.724 " + "l1=0" + "l2=0.724 f=-0.224 shape=(1, 9000, 1)
logits [[-0.5331268  -0.94466805  0.28986442  0.2926307 ]]
Iteration 900 of 1000: loss=0.677 " + "l1=0" + "l2=0.677 f=-0.231 shape=(1, 9000, 1)
logits [[-0.58745337 -0.9512429   0.2869823   0.3269375 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.81 " + "l1=4.81" + "l2=0 f=-0.246 shape=(1, 9000, 1)
logits [[ 3.7751863 -2.6560214  2.8776367 -4.9789543]]
Iteration 100 of 1000: loss=2.91 " + "l1=2.24" + "l2=0.667 f=-0.161 shape=(1, 9000, 1)
logits [[ 1.6710001 -1.6248181  1.6905003 -2.379338 ]]
Iteration 200 of 1000: loss=2.2 " + "l1=1.31" + "l2=0.889 f=-0.155 shape=(1, 9000, 1)
logits [[ 0.949996  -1.3099651  1.0632449 -1.3250483]]
Iteration 300 of 1000: loss=1.68 " + "l1=0.718" + "l2=0.959 f=-0.173 shape=(1, 9000, 1)
logits [[ 0.3839914  -1.1366036   0.6831341  -0.62244654]]
Iteration 400 of 1000: loss=1.18 " + "l1=0.131" + "l2=1.05 f=-0.188 shape=(1, 9000, 1)
logits [[-0.20357697 -0.8550573   0.27187058  0.03419241]]
Iteration 500 of 1000: loss=0.82 " + "l1=0.00801" + "l2=0.812 f=-0.202 shape=(1, 9000, 1)
logits [[-0.38386974 -0.79924     0.19568504  0.18111321]]
Iteration 600 of 1000: loss=0.678 " + "l1=0.00164" + "l2=0.676 f=-0.223 shape=(1, 9000, 1)
logits [[-0.4501411  -0.8327035   0.19737118  0.19439647]]
Iteration 700 of 1000: loss=0.601 " + "l1=0" + "l2=0.601 f=-0.237 shape=(1, 9000, 1)
logits [[-0.49781707 -0.8599032   0.19725642  0.21101183]]
Iteration 800 of 1000: loss=0.542 " + "l1=0" + "l2=0.542 f=-0.249 shape=(1, 9000, 1)
logits [[-0.5198205  -0.9085493   0.21298629  0.21956134]]
Iteration 900 of 1000: loss=0.492 " + "l1=0" + "l2=0.492 f=-0.268 shape=(1, 9000, 1)
logits [[-0.5668168  -0.9632518   0.22067522  0.23871857]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.85 " + "l1=2.85" + "l2=0 f=-0.246 shape=(1, 9000, 1)
logits [[ 3.7751863 -2.6560214  2.8776367 -4.9789543]]
Iteration 100 of 1000: loss=1.99 " + "l1=1.66" + "l2=0.328 f=-0.189 shape=(1, 9000, 1)
logits [[ 2.0891519 -1.902232   2.08949   -3.0312612]]
Iteration 200 of 1000: loss=1.7 " + "l1=1.35" + "l2=0.351 f=-0.178 shape=(1, 9000, 1)
logits [[ 1.7066036 -1.7116715  1.7173465 -2.4224448]]
Iteration 300 of 1000: loss=1.45 " + "l1=1.01" + "l2=0.437 f=-0.185 shape=(1, 9000, 1)
logits [[ 1.2423387 -1.5372453  1.335059  -1.7815993]]
Iteration 400 of 1000: loss=1.25 " + "l1=0.755" + "l2=0.491 f=-0.204 shape=(1, 9000, 1)
logits [[ 0.8569468 -1.3709565  1.0121653 -1.3123254]]
Iteration 500 of 1000: loss=1.06 " + "l1=0.536" + "l2=0.526 f=-0.217 shape=(1, 9000, 1)
logits [[ 0.5152875  -1.1565104   0.7109316  -0.93909276]]
Iteration 600 of 1000: loss=0.824 " + "l1=0.263" + "l2=0.561 f=-0.233 shape=(1, 9000, 1)
logits [[ 0.06444174 -0.8754166   0.3447812  -0.46421853]]
Iteration 700 of 1000: loss=0.673 " + "l1=0.136" + "l2=0.537 f=-0.234 shape=(1, 9000, 1)
logits [[-0.1334394  -0.843967    0.2311929  -0.18848965]]
Iteration 800 of 1000: loss=0.577 " + "l1=0.0373" + "l2=0.54 f=-0.232 shape=(1, 9000, 1)
logits [[-0.30882764 -0.8224913   0.15998696  0.04518729]]
Iteration 900 of 1000: loss=0.492 " + "l1=0" + "l2=0.492 f=-0.244 shape=(1, 9000, 1)
logits [[-0.41675016 -0.84180397  0.14106943  0.14140016]]
--- 313.202086687088 seconds ---
Adv result:3
Loading record A02856
(1, 5702)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0394 " + "l1=0.0394" + "l2=0 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.8113931 -2.1250641  0.5543958 -1.8980646]]
Iteration 100 of 1000: loss=0.0382 " + "l1=0.0375" + "l2=0.000694 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.711334   -2.0404851   0.49292016 -1.8472617 ]]
Iteration 200 of 1000: loss=0.0378 " + "l1=0.0369" + "l2=0.000885 f=-0.424 shape=(1, 9000, 1)
logits [[ 1.6773156  -2.0128334   0.47135583 -1.8329133 ]]
Iteration 300 of 1000: loss=0.0373 " + "l1=0.0362" + "l2=0.00116 f=-0.428 shape=(1, 9000, 1)
logits [[ 1.6375594  -1.9803393   0.44601464 -1.8162735 ]]
Iteration 400 of 1000: loss=0.0369 " + "l1=0.0354" + "l2=0.00144 f=-0.432 shape=(1, 9000, 1)
logits [[ 1.595133   -1.9462816   0.41976067 -1.7978259 ]]
Iteration 500 of 1000: loss=0.0363 " + "l1=0.0344" + "l2=0.0019 f=-0.438 shape=(1, 9000, 1)
logits [[ 1.5390335  -1.9033871   0.38879275 -1.7749145 ]]
Iteration 600 of 1000: loss=0.0358 " + "l1=0.0335" + "l2=0.00231 f=-0.442 shape=(1, 9000, 1)
logits [[ 1.4865979  -1.8629886   0.36046788 -1.7525128 ]]
Iteration 700 of 1000: loss=0.0352 " + "l1=0.0326" + "l2=0.00263 f=-0.445 shape=(1, 9000, 1)
logits [[ 1.4378493  -1.8208983   0.33119604 -1.729241  ]]
Iteration 800 of 1000: loss=0.0344 " + "l1=0.0315" + "l2=0.00296 f=-0.448 shape=(1, 9000, 1)
logits [[ 1.3812805 -1.7663178  0.2945076 -1.7010176]]
Iteration 900 of 1000: loss=0.0335 " + "l1=0.0299" + "l2=0.00351 f=-0.451 shape=(1, 9000, 1)
logits [[ 1.3022467  -1.6923251   0.24941017 -1.6614062 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.394 " + "l1=0.394" + "l2=0 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.8113931 -2.1250641  0.5543958 -1.8980646]]
Iteration 100 of 1000: loss=0.151 " + "l1=0.0294" + "l2=0.122 f=-0.55 shape=(1, 9000, 1)
logits [[-0.24114509 -0.5179102  -0.22361054 -1.2191488 ]]
Iteration 200 of 1000: loss=0.0721 " + "l1=0.0031" + "l2=0.069 f=-0.54 shape=(1, 9000, 1)
logits [[-0.3594009 -0.3903854 -0.3630148 -1.0490465]]
Iteration 300 of 1000: loss=0.0496 " + "l1=0.000425" + "l2=0.0492 f=-0.536 shape=(1, 9000, 1)
logits [[-0.39101252 -0.38382193 -0.3795736  -0.99113125]]
Iteration 400 of 1000: loss=0.0394 " + "l1=0" + "l2=0.0394 f=-0.534 shape=(1, 9000, 1)
logits [[-0.4048214  -0.38371447 -0.3929202  -0.95493954]]
Iteration 500 of 1000: loss=0.0337 " + "l1=0.000825" + "l2=0.0329 f=-0.533 shape=(1, 9000, 1)
logits [[-0.40439633 -0.40353274 -0.39528286 -0.9284267 ]]
Iteration 600 of 1000: loss=0.0297 " + "l1=0" + "l2=0.0297 f=-0.533 shape=(1, 9000, 1)
logits [[-0.43243408 -0.39342737 -0.40889776 -0.89707536]]
Iteration 700 of 1000: loss=0.0261 " + "l1=0" + "l2=0.0261 f=-0.529 shape=(1, 9000, 1)
logits [[-0.41790536 -0.4093407  -0.41273847 -0.8768895 ]]
Iteration 800 of 1000: loss=0.0239 " + "l1=0" + "l2=0.0239 f=-0.527 shape=(1, 9000, 1)
logits [[-0.42328995 -0.41517898 -0.41850904 -0.8515822 ]]
Iteration 900 of 1000: loss=0.0224 " + "l1=0" + "l2=0.0224 f=-0.525 shape=(1, 9000, 1)
logits [[-0.43239897 -0.41816875 -0.42547226 -0.82568884]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.217 " + "l1=0.217" + "l2=0 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.8113931 -2.1250641  0.5543958 -1.8980646]]
Iteration 100 of 1000: loss=0.16 " + "l1=0.119" + "l2=0.0403 f=-0.496 shape=(1, 9000, 1)
logits [[ 0.78591305 -1.385069    0.11715232 -1.5026106 ]]
Iteration 200 of 1000: loss=0.0836 " + "l1=0.0236" + "l2=0.06 f=-0.541 shape=(1, 9000, 1)
logits [[-0.18259062 -0.6101393  -0.18067184 -1.1905307 ]]
Iteration 300 of 1000: loss=0.0564 " + "l1=0.00776" + "l2=0.0487 f=-0.536 shape=(1, 9000, 1)
logits [[-0.32190007 -0.45169535 -0.31057703 -1.0584581 ]]
Iteration 400 of 1000: loss=0.0419 " + "l1=0" + "l2=0.0419 f=-0.536 shape=(1, 9000, 1)
logits [[-0.41099414 -0.37923202 -0.3888356  -0.96557224]]
Iteration 500 of 1000: loss=0.034 " + "l1=0.000363" + "l2=0.0336 f=-0.533 shape=(1, 9000, 1)
logits [[-0.39530852 -0.40191433 -0.39700526 -0.9360527 ]]
Iteration 600 of 1000: loss=0.0291 " + "l1=0" + "l2=0.0291 f=-0.533 shape=(1, 9000, 1)
logits [[-0.42154458 -0.4018182  -0.4086905  -0.8997899 ]]
Iteration 700 of 1000: loss=0.0259 " + "l1=0" + "l2=0.0259 f=-0.531 shape=(1, 9000, 1)
logits [[-0.4202802  -0.41394278 -0.4162608  -0.8732385 ]]
Iteration 800 of 1000: loss=0.0242 " + "l1=0" + "l2=0.0242 f=-0.53 shape=(1, 9000, 1)
logits [[-0.44529238 -0.40539065 -0.4277841  -0.84134275]]
Iteration 900 of 1000: loss=0.022 " + "l1=0" + "l2=0.022 f=-0.527 shape=(1, 9000, 1)
logits [[-0.43331483 -0.42416653 -0.42852718 -0.82076854]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.128 " + "l1=0.128" + "l2=0 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.8113931 -2.1250641  0.5543958 -1.8980646]]
Iteration 100 of 1000: loss=0.113 " + "l1=0.103" + "l2=0.00933 f=-0.45 shape=(1, 9000, 1)
logits [[ 1.3809261  -1.8014853   0.33079663 -1.7107944 ]]
Iteration 200 of 1000: loss=0.102 " + "l1=0.0852" + "l2=0.0168 f=-0.477 shape=(1, 9000, 1)
logits [[ 1.0529991  -1.567272    0.19620739 -1.5897168 ]]
Iteration 300 of 1000: loss=0.077 " + "l1=0.0474" + "l2=0.0296 f=-0.503 shape=(1, 9000, 1)
logits [[ 0.41450855 -1.0428945  -0.02553273 -1.35804   ]]
Iteration 400 of 1000: loss=0.0527 " + "l1=0.0147" + "l2=0.038 f=-0.54 shape=(1, 9000, 1)
logits [[-0.17737222 -0.6298944  -0.19202258 -1.1600571 ]]
Iteration 500 of 1000: loss=0.0422 " + "l1=0.00967" + "l2=0.0326 f=-0.538 shape=(1, 9000, 1)
logits [[-0.26080507 -0.5581988  -0.2615457  -1.0713049 ]]
Iteration 600 of 1000: loss=0.0355 " + "l1=0.00547" + "l2=0.03 f=-0.534 shape=(1, 9000, 1)
logits [[-0.3235343  -0.49198925 -0.33199862 -0.9884705 ]]
Iteration 700 of 1000: loss=0.0299 " + "l1=0.00146" + "l2=0.0284 f=-0.533 shape=(1, 9000, 1)
logits [[-0.38800317 -0.43223453 -0.387192   -0.92268056]]
Iteration 800 of 1000: loss=0.0257 " + "l1=0.000156" + "l2=0.0256 f=-0.53 shape=(1, 9000, 1)
logits [[-0.41303048 -0.41782764 -0.4142498  -0.8767668 ]]
Iteration 900 of 1000: loss=0.0236 " + "l1=0" + "l2=0.0236 f=-0.53 shape=(1, 9000, 1)
logits [[-0.440036   -0.4157714  -0.4224355  -0.84219736]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0836 " + "l1=0.0836" + "l2=0 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.8113931 -2.1250641  0.5543958 -1.8980646]]
Iteration 100 of 1000: loss=0.078 " + "l1=0.0744" + "l2=0.00356 f=-0.434 shape=(1, 9000, 1)
logits [[ 1.5686177  -1.9326912   0.41549343 -1.7860928 ]]
Iteration 200 of 1000: loss=0.0745 " + "l1=0.0691" + "l2=0.00536 f=-0.448 shape=(1, 9000, 1)
logits [[ 1.422745  -1.8299003  0.3461766 -1.7310158]]
Iteration 300 of 1000: loss=0.0712 " + "l1=0.064" + "l2=0.00719 f=-0.46 shape=(1, 9000, 1)
logits [[ 1.2789174  -1.7310935   0.28129968 -1.6701329 ]]
Iteration 400 of 1000: loss=0.0658 " + "l1=0.0551" + "l2=0.0107 f=-0.475 shape=(1, 9000, 1)
logits [[ 1.0468519  -1.547391    0.17893423 -1.5782197 ]]
Iteration 500 of 1000: loss=0.0546 " + "l1=0.0383" + "l2=0.0163 f=-0.488 shape=(1, 9000, 1)
logits [[ 0.62625754 -1.1770551   0.00603148 -1.4060454 ]]
Iteration 600 of 1000: loss=0.0451 " + "l1=0.023" + "l2=0.022 f=-0.508 shape=(1, 9000, 1)
logits [[ 0.21370375 -0.87094843 -0.12107857 -1.2551315 ]]
Iteration 700 of 1000: loss=0.0385 " + "l1=0.0139" + "l2=0.0246 f=-0.525 shape=(1, 9000, 1)
logits [[-0.05060153 -0.70635664 -0.19732326 -1.1466073 ]]
Iteration 800 of 1000: loss=0.0334 " + "l1=0.00722" + "l2=0.0262 f=-0.539 shape=(1, 9000, 1)
logits [[-0.25519422 -0.59512126 -0.25815794 -1.0471102 ]]
Iteration 900 of 1000: loss=0.0294 " + "l1=0.00493" + "l2=0.0245 f=-0.535 shape=(1, 9000, 1)
logits [[-0.31042024 -0.54140484 -0.30961585 -0.97793204]]
--- 312.5904920101166 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0126 " + "l1=0.0126" + "l2=0 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.8113931 -2.1250641  0.5543958 -1.8980646]]
Iteration 100 of 1000: loss=0.0124 " + "l1=0.0122" + "l2=0.000174 f=-0.419 shape=(1, 9000, 1)
logits [[ 1.7790971  -2.1210527   0.55757564 -1.8910136 ]]
Iteration 200 of 1000: loss=0.0123 " + "l1=0.0122" + "l2=0.000163 f=-0.42 shape=(1, 9000, 1)
logits [[ 1.7740479 -2.1198244  0.5566009 -1.890416 ]]
Iteration 300 of 1000: loss=0.0123 " + "l1=0.0121" + "l2=0.000184 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.7684766 -2.1189377  0.5564823 -1.8900292]]
Iteration 400 of 1000: loss=0.0123 " + "l1=0.0121" + "l2=0.000236 f=-0.422 shape=(1, 9000, 1)
logits [[ 1.7633163 -2.118457   0.5567293 -1.8899188]]
Iteration 500 of 1000: loss=0.0123 " + "l1=0.012" + "l2=0.000271 f=-0.423 shape=(1, 9000, 1)
logits [[ 1.758542  -2.1183832  0.5573111 -1.8898833]]
Iteration 600 of 1000: loss=0.0123 " + "l1=0.012" + "l2=0.000335 f=-0.424 shape=(1, 9000, 1)
logits [[ 1.7543856 -2.1187172  0.558108  -1.8899105]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.126 " + "l1=0.126" + "l2=0 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.8113931 -2.1250641  0.5543958 -1.8980646]]
Iteration 100 of 1000: loss=0.101 " + "l1=0.0846" + "l2=0.0165 f=-0.471 shape=(1, 9000, 1)
logits [[ 1.3824179  -2.025547    0.53661716 -1.7760627 ]]
Iteration 200 of 1000: loss=0.0648 " + "l1=0.0128" + "l2=0.052 f=-0.568 shape=(1, 9000, 1)
logits [[ 0.612768   -1.8126785   0.48505977 -1.5557477 ]]
Iteration 300 of 1000: loss=0.0399 " + "l1=0.00108" + "l2=0.0389 f=-0.583 shape=(1, 9000, 1)
logits [[ 0.48772416 -1.7809755   0.47697273 -1.5155526 ]]
Iteration 400 of 1000: loss=0.0315 " + "l1=0.000866" + "l2=0.0306 f=-0.582 shape=(1, 9000, 1)
logits [[ 0.46826813 -1.7623198   0.4596038  -1.4939452 ]]
Iteration 500 of 1000: loss=0.0266 " + "l1=0.000444" + "l2=0.0262 f=-0.581 shape=(1, 9000, 1)
logits [[ 0.45198986 -1.7542851   0.44755447 -1.4711186 ]]
Iteration 600 of 1000: loss=0.0236 " + "l1=0" + "l2=0.0236 f=-0.582 shape=(1, 9000, 1)
logits [[ 0.4347489  -1.7509321   0.44173267 -1.4529419 ]]
Iteration 700 of 1000: loss=0.0211 " + "l1=0" + "l2=0.0211 f=-0.581 shape=(1, 9000, 1)
logits [[ 0.42968586 -1.7505332   0.4363157  -1.438585  ]]
Iteration 800 of 1000: loss=0.0202 " + "l1=0" + "l2=0.0202 f=-0.582 shape=(1, 9000, 1)
logits [[ 0.39878312 -1.7379329   0.43306145 -1.4234599 ]]
Iteration 900 of 1000: loss=0.018 " + "l1=0.000237" + "l2=0.0177 f=-0.576 shape=(1, 9000, 1)
logits [[ 0.42851192 -1.7464833   0.4261422  -1.4124128 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0691 " + "l1=0.0691" + "l2=0 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.8113931 -2.1250641  0.5543958 -1.8980646]]
Iteration 100 of 1000: loss=0.0634 " + "l1=0.0598" + "l2=0.0036 f=-0.438 shape=(1, 9000, 1)
logits [[ 1.6358037  -2.0862236   0.54861027 -1.8491701 ]]
Iteration 200 of 1000: loss=0.0599 " + "l1=0.0537" + "l2=0.0062 f=-0.455 shape=(1, 9000, 1)
logits [[ 1.5196708 -2.0604088  0.5438106 -1.8235103]]
Iteration 300 of 1000: loss=0.0561 " + "l1=0.0467" + "l2=0.00944 f=-0.474 shape=(1, 9000, 1)
logits [[ 1.3787041  -2.0234213   0.53001946 -1.7816801 ]]
Iteration 400 of 1000: loss=0.0504 " + "l1=0.0354" + "l2=0.0149 f=-0.506 shape=(1, 9000, 1)
logits [[ 1.1304909 -1.9349619  0.486121  -1.7037878]]
Iteration 500 of 1000: loss=0.0398 " + "l1=0.0158" + "l2=0.0241 f=-0.547 shape=(1, 9000, 1)
logits [[ 0.7658025  -1.8566337   0.47928253 -1.5778681 ]]
Iteration 600 of 1000: loss=0.0304 " + "l1=0.000471" + "l2=0.0299 f=-0.581 shape=(1, 9000, 1)
logits [[ 0.48028812 -1.7876266   0.47172123 -1.4872361 ]]
Iteration 700 of 1000: loss=0.0249 " + "l1=0" + "l2=0.0249 f=-0.581 shape=(1, 9000, 1)
logits [[ 0.4534855  -1.7710944   0.45484462 -1.4625179 ]]
Iteration 800 of 1000: loss=0.0221 " + "l1=0.000681" + "l2=0.0214 f=-0.578 shape=(1, 9000, 1)
logits [[ 0.45593387 -1.7665911   0.44355947 -1.4460864 ]]
Iteration 900 of 1000: loss=0.0197 " + "l1=0" + "l2=0.0197 f=-0.579 shape=(1, 9000, 1)
logits [[ 0.43383405 -1.7577333   0.43585196 -1.4283986 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0409 " + "l1=0.0409" + "l2=0 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.8113931 -2.1250641  0.5543958 -1.8980646]]
Iteration 100 of 1000: loss=0.0389 " + "l1=0.0378" + "l2=0.00116 f=-0.427 shape=(1, 9000, 1)
logits [[ 1.7178941 -2.1085377  0.5557384 -1.8735235]]
Iteration 200 of 1000: loss=0.0383 " + "l1=0.0367" + "l2=0.00159 f=-0.433 shape=(1, 9000, 1)
logits [[ 1.6799462 -2.0985615  0.5506399 -1.8657473]]
Iteration 300 of 1000: loss=0.0375 " + "l1=0.0352" + "l2=0.00232 f=-0.442 shape=(1, 9000, 1)
logits [[ 1.6291823  -2.0850036   0.54681915 -1.857235  ]]
Iteration 400 of 1000: loss=0.0367 " + "l1=0.0337" + "l2=0.003 f=-0.449 shape=(1, 9000, 1)
logits [[ 1.5818124 -2.0765183  0.5461857 -1.8489395]]
Iteration 500 of 1000: loss=0.0359 " + "l1=0.0322" + "l2=0.00365 f=-0.456 shape=(1, 9000, 1)
logits [[ 1.5351824 -2.0695136  0.5442632 -1.8354447]]
Iteration 600 of 1000: loss=0.0351 " + "l1=0.0308" + "l2=0.00435 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.4867612 -2.0589457  0.540408  -1.8192408]]
Iteration 700 of 1000: loss=0.0342 " + "l1=0.0289" + "l2=0.00533 f=-0.471 shape=(1, 9000, 1)
logits [[ 1.4222612 -2.0422258  0.5333168 -1.7965937]]
Iteration 800 of 1000: loss=0.0333 " + "l1=0.0269" + "l2=0.00633 f=-0.479 shape=(1, 9000, 1)
logits [[ 1.3536472  -2.0248933   0.52447414 -1.7692261 ]]
Iteration 900 of 1000: loss=0.0318 " + "l1=0.0239" + "l2=0.00788 f=-0.493 shape=(1, 9000, 1)
logits [[ 1.2365587  -1.9854501   0.50193065 -1.7242328 ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.055 " + "l1=0.055" + "l2=0 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.8113931 -2.1250641  0.5543958 -1.8980646]]
Iteration 100 of 1000: loss=0.0515 " + "l1=0.0495" + "l2=0.00208 f=-0.432 shape=(1, 9000, 1)
logits [[ 1.6823413 -2.0990727  0.5520399 -1.862477 ]]
Iteration 200 of 1000: loss=0.0497 " + "l1=0.0461" + "l2=0.00359 f=-0.444 shape=(1, 9000, 1)
logits [[ 1.6021534 -2.0781386  0.5475125 -1.8479902]]
Iteration 300 of 1000: loss=0.0479 " + "l1=0.0429" + "l2=0.00498 f=-0.456 shape=(1, 9000, 1)
logits [[ 1.5237856  -2.0634415   0.54371595 -1.8298564 ]]
Iteration 400 of 1000: loss=0.0459 " + "l1=0.0393" + "l2=0.00657 f=-0.468 shape=(1, 9000, 1)
logits [[ 1.4364783  -2.0436423   0.53748465 -1.802459  ]]
Iteration 500 of 1000: loss=0.0436 " + "l1=0.0348" + "l2=0.00876 f=-0.483 shape=(1, 9000, 1)
logits [[ 1.317267  -2.0088282  0.521438  -1.7616278]]
Iteration 600 of 1000: loss=0.0398 " + "l1=0.0271" + "l2=0.0127 f=-0.509 shape=(1, 9000, 1)
logits [[ 1.1065012  -1.9369946   0.48633158 -1.691551  ]]
Iteration 700 of 1000: loss=0.0338 " + "l1=0.0155" + "l2=0.0184 f=-0.54 shape=(1, 9000, 1)
logits [[ 0.8327371  -1.8777833   0.47943336 -1.5951372 ]]
Iteration 800 of 1000: loss=0.0289 " + "l1=0.00793" + "l2=0.021 f=-0.559 shape=(1, 9000, 1)
logits [[ 0.65685123 -1.842463    0.47563717 -1.5254487 ]]
Iteration 900 of 1000: loss=0.0241 " + "l1=8.8e-05" + "l2=0.024 f=-0.58 shape=(1, 9000, 1)
logits [[ 0.46813628 -1.794166    0.46612546 -1.4612485 ]]
--- 288.9505879878998 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0371 " + "l1=0.0371" + "l2=0 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.8113931 -2.1250641  0.5543958 -1.8980646]]
Iteration 100 of 1000: loss=0.0362 " + "l1=0.0356" + "l2=0.00059 f=-0.418 shape=(1, 9000, 1)
logits [[ 1.723347  -2.0655243  0.5049783 -1.8328866]]
Iteration 200 of 1000: loss=0.0358 " + "l1=0.0351" + "l2=0.000711 f=-0.419 shape=(1, 9000, 1)
logits [[ 1.6971799  -2.0476623   0.48966706 -1.8163692 ]]
Iteration 300 of 1000: loss=0.0356 " + "l1=0.0347" + "l2=0.000897 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.6681808  -2.0272853   0.47237226 -1.7979797 ]]
Iteration 400 of 1000: loss=0.0353 " + "l1=0.0342" + "l2=0.0011 f=-0.423 shape=(1, 9000, 1)
logits [[ 1.6378434 -2.0058324  0.4538702 -1.7779089]]
Iteration 500 of 1000: loss=0.0349 " + "l1=0.0336" + "l2=0.00133 f=-0.425 shape=(1, 9000, 1)
logits [[ 1.6055388  -1.9823443   0.43371084 -1.756145  ]]
Iteration 600 of 1000: loss=0.0346 " + "l1=0.033" + "l2=0.00165 f=-0.427 shape=(1, 9000, 1)
logits [[ 1.5664754 -1.9549586  0.4108282 -1.7311398]]
Iteration 700 of 1000: loss=0.0343 " + "l1=0.0323" + "l2=0.00198 f=-0.429 shape=(1, 9000, 1)
logits [[ 1.5263612  -1.9259324   0.38709095 -1.7042553 ]]
Iteration 800 of 1000: loss=0.0339 " + "l1=0.0316" + "l2=0.00228 f=-0.431 shape=(1, 9000, 1)
logits [[ 1.4830729 -1.8955985  0.3629455 -1.6746428]]
Iteration 900 of 1000: loss=0.0334 " + "l1=0.0308" + "l2=0.00259 f=-0.433 shape=(1, 9000, 1)
logits [[ 1.438964   -1.8641684   0.33768195 -1.6443913 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.371 " + "l1=0.371" + "l2=0 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.8113931 -2.1250641  0.5543958 -1.8980646]]
Iteration 100 of 1000: loss=0.192 " + "l1=0.0854" + "l2=0.107 f=-0.531 shape=(1, 9000, 1)
logits [[-0.12497804 -0.9165217  -0.11458246 -0.96893984]]
Iteration 200 of 1000: loss=0.0988 " + "l1=0.014" + "l2=0.0848 f=-0.493 shape=(1, 9000, 1)
logits [[-0.41312113 -0.59950984 -0.40987524 -0.5503325 ]]
Iteration 300 of 1000: loss=0.0636 " + "l1=8.45e-05" + "l2=0.0636 f=-0.49 shape=(1, 9000, 1)
logits [[-0.4717143  -0.5674849  -0.46019801 -0.46104306]]
Iteration 400 of 1000: loss=0.048 " + "l1=0.000162" + "l2=0.0478 f=-0.487 shape=(1, 9000, 1)
logits [[-0.45146346 -0.5863386  -0.45560244 -0.45308357]]
Iteration 500 of 1000: loss=0.0387 " + "l1=0.000239" + "l2=0.0384 f=-0.49 shape=(1, 9000, 1)
logits [[-0.45289862 -0.60138005 -0.45179918 -0.4541931 ]]
Iteration 600 of 1000: loss=0.0325 " + "l1=0.000194" + "l2=0.0324 f=-0.492 shape=(1, 9000, 1)
logits [[-0.44847342 -0.61595464 -0.45214337 -0.45041028]]
Iteration 700 of 1000: loss=0.0284 " + "l1=0" + "l2=0.0284 f=-0.496 shape=(1, 9000, 1)
logits [[-0.46503845 -0.61854917 -0.45590726 -0.4462272 ]]
Iteration 800 of 1000: loss=0.0255 " + "l1=0" + "l2=0.0255 f=-0.5 shape=(1, 9000, 1)
logits [[-0.48395732 -0.61753047 -0.46691623 -0.43268195]]
Iteration 900 of 1000: loss=0.0223 " + "l1=0" + "l2=0.0223 f=-0.496 shape=(1, 9000, 1)
logits [[-0.43683222 -0.65079814 -0.4692153  -0.42640024]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.204 " + "l1=0.204" + "l2=0 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.8113931 -2.1250641  0.5543958 -1.8980646]]
Iteration 100 of 1000: loss=0.164 " + "l1=0.138" + "l2=0.0265 f=-0.469 shape=(1, 9000, 1)
logits [[ 1.0351768  -1.6657268   0.22081622 -1.4649632 ]]
Iteration 200 of 1000: loss=0.129 " + "l1=0.079" + "l2=0.0498 f=-0.508 shape=(1, 9000, 1)
logits [[ 0.30493873 -1.2112354   0.00422018 -1.131283  ]]
Iteration 300 of 1000: loss=0.0807 " + "l1=0.0316" + "l2=0.0491 f=-0.511 shape=(1, 9000, 1)
logits [[-0.24620655 -0.7411934  -0.24107338 -0.8158983 ]]
Iteration 400 of 1000: loss=0.0591 " + "l1=0.0145" + "l2=0.0445 f=-0.497 shape=(1, 9000, 1)
logits [[-0.3570084  -0.65152436 -0.35927594 -0.62142473]]
Iteration 500 of 1000: loss=0.0445 " + "l1=0.000903" + "l2=0.0436 f=-0.492 shape=(1, 9000, 1)
logits [[-0.45883116 -0.6056307  -0.44302207 -0.45944113]]
Iteration 600 of 1000: loss=0.0343 " + "l1=0.000123" + "l2=0.0342 f=-0.492 shape=(1, 9000, 1)
logits [[-0.44736174 -0.6215053  -0.44898367 -0.44960326]]
Iteration 700 of 1000: loss=0.0284 " + "l1=0" + "l2=0.0284 f=-0.497 shape=(1, 9000, 1)
logits [[-0.4548448  -0.6267932  -0.4535677  -0.45121288]]
Iteration 800 of 1000: loss=0.0247 " + "l1=0.000401" + "l2=0.0243 f=-0.501 shape=(1, 9000, 1)
logits [[-0.4508091  -0.6358732  -0.45779204 -0.4581087 ]]
Iteration 900 of 1000: loss=0.022 " + "l1=0" + "l2=0.022 f=-0.499 shape=(1, 9000, 1)
logits [[-0.4400094  -0.6515011  -0.46869636 -0.4375232 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.121 " + "l1=0.121" + "l2=0 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.8113931 -2.1250641  0.5543958 -1.8980646]]
Iteration 100 of 1000: loss=0.109 " + "l1=0.102" + "l2=0.00722 f=-0.435 shape=(1, 9000, 1)
logits [[ 1.4616147  -1.9009309   0.37703225 -1.6775494 ]]
Iteration 200 of 1000: loss=0.102 " + "l1=0.0894" + "l2=0.0123 f=-0.455 shape=(1, 9000, 1)
logits [[ 1.2056525  -1.7538713   0.27263546 -1.5451899 ]]
Iteration 300 of 1000: loss=0.0931 " + "l1=0.0765" + "l2=0.0166 f=-0.472 shape=(1, 9000, 1)
logits [[ 0.94616115 -1.6023693   0.17691323 -1.4069216 ]]
Iteration 400 of 1000: loss=0.0806 " + "l1=0.0576" + "l2=0.023 f=-0.485 shape=(1, 9000, 1)
logits [[ 0.5690512  -1.335802    0.03162872 -1.2038379 ]]
Iteration 500 of 1000: loss=0.0607 " + "l1=0.0288" + "l2=0.0319 f=-0.504 shape=(1, 9000, 1)
logits [[-0.04659087 -0.8576549  -0.17886682 -0.9314522 ]]
Iteration 600 of 1000: loss=0.0483 " + "l1=0.0166" + "l2=0.0318 f=-0.508 shape=(1, 9000, 1)
logits [[-0.27710262 -0.69882905 -0.27377155 -0.78368276]]
Iteration 700 of 1000: loss=0.0405 " + "l1=0.0111" + "l2=0.0294 f=-0.506 shape=(1, 9000, 1)
logits [[-0.3443436  -0.6647187  -0.33660528 -0.6789052 ]]
Iteration 800 of 1000: loss=0.0333 " + "l1=0.00592" + "l2=0.0274 f=-0.503 shape=(1, 9000, 1)
logits [[-0.3965976  -0.64285517 -0.3956328  -0.5777006 ]]
Iteration 900 of 1000: loss=0.0266 " + "l1=5.13e-08" + "l2=0.0266 f=-0.5 shape=(1, 9000, 1)
logits [[-0.4592909  -0.62034845 -0.4625145  -0.45929247]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0788 " + "l1=0.0788" + "l2=0 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.8113931 -2.1250641  0.5543958 -1.8980646]]
Iteration 100 of 1000: loss=0.0745 " + "l1=0.0719" + "l2=0.00256 f=-0.424 shape=(1, 9000, 1)
logits [[ 1.6184027 -1.9989573  0.4511968 -1.7662181]]
Iteration 200 of 1000: loss=0.0723 " + "l1=0.0682" + "l2=0.0041 f=-0.432 shape=(1, 9000, 1)
logits [[ 1.50598    -1.928239    0.39427868 -1.7011995 ]]
Iteration 300 of 1000: loss=0.0696 " + "l1=0.0638" + "l2=0.0058 f=-0.442 shape=(1, 9000, 1)
logits [[ 1.3734822  -1.844446    0.33273706 -1.6307478 ]]
Iteration 400 of 1000: loss=0.0666 " + "l1=0.0589" + "l2=0.00767 f=-0.453 shape=(1, 9000, 1)
logits [[ 1.2231939  -1.7549537   0.26979822 -1.5507367 ]]
Iteration 500 of 1000: loss=0.0633 " + "l1=0.0541" + "l2=0.00916 f=-0.461 shape=(1, 9000, 1)
logits [[ 1.0806953  -1.6712872   0.21234639 -1.4664359 ]]
Iteration 600 of 1000: loss=0.0589 " + "l1=0.0475" + "l2=0.0113 f=-0.469 shape=(1, 9000, 1)
logits [[ 0.8860235  -1.5380844   0.12560888 -1.351122  ]]
Iteration 700 of 1000: loss=0.0522 " + "l1=0.0382" + "l2=0.0139 f=-0.47 shape=(1, 9000, 1)
logits [[ 6.1240530e-01 -1.3038764e+00 -1.1465917e-03 -1.1871860e+00]]
Iteration 800 of 1000: loss=0.0452 " + "l1=0.0278" + "l2=0.0173 f=-0.476 shape=(1, 9000, 1)
logits [[ 0.2914181  -1.0550339  -0.12233946 -1.0179281 ]]
Iteration 900 of 1000: loss=0.0397 " + "l1=0.0204" + "l2=0.0193 f=-0.486 shape=(1, 9000, 1)
logits [[ 0.06200954 -0.9108752  -0.19537793 -0.8977785 ]]
--- 312.6774308681488 seconds ---
Adv result:3
Loading record A02879
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0631 " + "l1=0.0631" + "l2=0 f=-0.732 shape=(1, 9000, 1)
logits [[ 4.463548  -1.8449118  2.2201545 -7.76614  ]]
Iteration 100 of 1000: loss=0.0625 " + "l1=0.0622" + "l2=0.000339 f=-0.73 shape=(1, 9000, 1)
logits [[ 4.407253  -1.8091208  2.1953712 -7.713762 ]]
Iteration 200 of 1000: loss=0.0623 " + "l1=0.062" + "l2=0.000358 f=-0.73 shape=(1, 9000, 1)
logits [[ 4.394918  -1.8023043  2.1904366 -7.703548 ]]
Iteration 300 of 1000: loss=0.0622 " + "l1=0.0617" + "l2=0.000457 f=-0.73 shape=(1, 9000, 1)
logits [[ 4.37915   -1.7938988  2.184494  -7.6903563]]
Iteration 400 of 1000: loss=0.0621 " + "l1=0.0615" + "l2=0.000574 f=-0.73 shape=(1, 9000, 1)
logits [[ 4.362643  -1.7855326  2.1785684 -7.676733 ]]
Iteration 500 of 1000: loss=0.0619 " + "l1=0.0612" + "l2=0.00068 f=-0.73 shape=(1, 9000, 1)
logits [[ 4.34642   -1.7777961  2.1731153 -7.6632733]]
Iteration 600 of 1000: loss=0.0618 " + "l1=0.061" + "l2=0.000799 f=-0.731 shape=(1, 9000, 1)
logits [[ 4.3304386 -1.7706026  2.1680276 -7.650043 ]]
Iteration 700 of 1000: loss=0.0617 " + "l1=0.0608" + "l2=0.000901 f=-0.731 shape=(1, 9000, 1)
logits [[ 4.314945  -1.7634943  2.1631532 -7.6372304]]
Iteration 800 of 1000: loss=0.0616 " + "l1=0.0606" + "l2=0.00108 f=-0.731 shape=(1, 9000, 1)
logits [[ 4.299914  -1.756471   2.1584034 -7.6248984]]
Iteration 900 of 1000: loss=0.0615 " + "l1=0.0603" + "l2=0.00114 f=-0.731 shape=(1, 9000, 1)
logits [[ 4.285117  -1.7494857  2.1538193 -7.612824 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.631 " + "l1=0.631" + "l2=0 f=-0.732 shape=(1, 9000, 1)
logits [[ 4.463548  -1.8449118  2.2201545 -7.76614  ]]
Iteration 100 of 1000: loss=0.576 " + "l1=0.55" + "l2=0.0268 f=-0.721 shape=(1, 9000, 1)
logits [[ 3.971069  -1.52511    2.0027504 -7.3308277]]
Iteration 200 of 1000: loss=0.544 " + "l1=0.501" + "l2=0.0433 f=-0.721 shape=(1, 9000, 1)
logits [[ 3.6710896 -1.340818   1.877868  -7.093232 ]]
Iteration 300 of 1000: loss=0.511 " + "l1=0.447" + "l2=0.0641 f=-0.727 shape=(1, 9000, 1)
logits [[ 3.3286676 -1.1429747  1.7489717 -6.8418384]]
Iteration 400 of 1000: loss=0.481 " + "l1=0.398" + "l2=0.0827 f=-0.732 shape=(1, 9000, 1)
logits [[ 3.0006397 -0.9777607  1.6477059 -6.5972633]]
Iteration 500 of 1000: loss=0.457 " + "l1=0.361" + "l2=0.0959 f=-0.732 shape=(1, 9000, 1)
logits [[ 2.7341251  -0.87249756  1.5678424  -6.358215  ]]
Iteration 600 of 1000: loss=0.435 " + "l1=0.33" + "l2=0.104 f=-0.73 shape=(1, 9000, 1)
logits [[ 2.5084052 -0.793636   1.503579  -6.136489 ]]
Iteration 700 of 1000: loss=0.415 " + "l1=0.303" + "l2=0.112 f=-0.727 shape=(1, 9000, 1)
logits [[ 2.301807   -0.72335714  1.4451777  -5.930977  ]]
Iteration 800 of 1000: loss=0.398 " + "l1=0.276" + "l2=0.121 f=-0.722 shape=(1, 9000, 1)
logits [[ 2.120159  -0.6439646  1.3801551 -5.7452965]]
Iteration 900 of 1000: loss=0.382 " + "l1=0.255" + "l2=0.127 f=-0.717 shape=(1, 9000, 1)
logits [[ 1.9761907  -0.57293653  1.3174891  -5.589694  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.31 " + "l1=6.31" + "l2=0 f=-0.732 shape=(1, 9000, 1)
logits [[ 4.463548  -1.8449118  2.2201545 -7.76614  ]]
Iteration 100 of 1000: loss=1.5 " + "l1=0.00982" + "l2=1.49 f=-0.749 shape=(1, 9000, 1)
logits [[ 0.72185075  0.7295675   0.739387   -5.1878066 ]]
Iteration 200 of 1000: loss=1.02 " + "l1=0" + "l2=1.02 f=-0.742 shape=(1, 9000, 1)
logits [[ 0.69339913  0.70016783  0.6895335  -5.051095  ]]
Iteration 300 of 1000: loss=0.86 " + "l1=0" + "l2=0.86 f=-0.736 shape=(1, 9000, 1)
logits [[ 0.6109109   0.66421455  0.6556861  -4.873266  ]]
Iteration 400 of 1000: loss=0.751 " + "l1=0.00174" + "l2=0.75 f=-0.725 shape=(1, 9000, 1)
logits [[ 0.59805644  0.6199282   0.6216686  -4.739074  ]]
Iteration 500 of 1000: loss=0.675 " + "l1=0" + "l2=0.675 f=-0.718 shape=(1, 9000, 1)
logits [[ 0.5714191   0.5840415   0.57045513 -4.5992885 ]]
Iteration 600 of 1000: loss=0.611 " + "l1=0" + "l2=0.611 f=-0.711 shape=(1, 9000, 1)
logits [[ 0.5429784  0.5479299  0.5434189 -4.4793344]]
Iteration 700 of 1000: loss=0.568 " + "l1=0" + "l2=0.568 f=-0.707 shape=(1, 9000, 1)
logits [[ 0.50920445  0.5250946   0.5208433  -4.3820705 ]]
Iteration 800 of 1000: loss=0.532 " + "l1=0.00309" + "l2=0.529 f=-0.701 shape=(1, 9000, 1)
logits [[ 0.49899045  0.5016733   0.5047657  -4.3112793 ]]
Iteration 900 of 1000: loss=0.511 " + "l1=0" + "l2=0.511 f=-0.7 shape=(1, 9000, 1)
logits [[ 0.4386674   0.4996271   0.47778434 -4.2172823 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.47 " + "l1=3.47" + "l2=0 f=-0.732 shape=(1, 9000, 1)
logits [[ 4.463548  -1.8449118  2.2201545 -7.76614  ]]
Iteration 100 of 1000: loss=1.52 " + "l1=0.524" + "l2=0.999 f=-0.764 shape=(1, 9000, 1)
logits [[ 1.1408879   0.18834312  1.0872223  -5.472637  ]]
Iteration 200 of 1000: loss=0.931 " + "l1=0.0511" + "l2=0.88 f=-0.742 shape=(1, 9000, 1)
logits [[ 0.72815746  0.63530344  0.71728677 -5.0496726 ]]
Iteration 300 of 1000: loss=0.722 " + "l1=0" + "l2=0.722 f=-0.731 shape=(1, 9000, 1)
logits [[ 0.6315744   0.64995944  0.62800545 -4.8319154 ]]
Iteration 400 of 1000: loss=0.612 " + "l1=0.0106" + "l2=0.602 f=-0.724 shape=(1, 9000, 1)
logits [[ 0.60950065  0.5926596   0.61195594 -4.7109957 ]]
Iteration 500 of 1000: loss=0.538 " + "l1=0.00818" + "l2=0.53 f=-0.722 shape=(1, 9000, 1)
logits [[ 0.5781706  0.5632925  0.5771679 -4.6053853]]
Iteration 600 of 1000: loss=0.489 " + "l1=0" + "l2=0.489 f=-0.719 shape=(1, 9000, 1)
logits [[ 0.51604354  0.5509787   0.5385197  -4.4829464 ]]
Iteration 700 of 1000: loss=0.444 " + "l1=0.000265" + "l2=0.443 f=-0.712 shape=(1, 9000, 1)
logits [[ 0.5128907   0.52229834  0.5227798  -4.4064126 ]]
Iteration 800 of 1000: loss=0.417 " + "l1=0.00899" + "l2=0.408 f=-0.702 shape=(1, 9000, 1)
logits [[ 0.52132165  0.5049729   0.50621957 -4.3412285 ]]
Iteration 900 of 1000: loss=0.385 " + "l1=0" + "l2=0.385 f=-0.695 shape=(1, 9000, 1)
logits [[ 0.47869855  0.5077444   0.4941405  -4.260157  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.05 " + "l1=2.05" + "l2=0 f=-0.732 shape=(1, 9000, 1)
logits [[ 4.463548  -1.8449118  2.2201545 -7.76614  ]]
Iteration 100 of 1000: loss=1.34 " + "l1=0.95" + "l2=0.391 f=-0.721 shape=(1, 9000, 1)
logits [[ 2.4303098  -0.49228477  1.4137324  -6.23449   ]]
Iteration 200 of 1000: loss=0.963 " + "l1=0.413" + "l2=0.55 f=-0.746 shape=(1, 9000, 1)
logits [[ 1.3265767  0.0543841  1.0975707 -5.4633846]]
Iteration 300 of 1000: loss=0.707 " + "l1=0.151" + "l2=0.556 f=-0.748 shape=(1, 9000, 1)
logits [[ 0.8470752   0.38395655  0.84365493 -5.066763  ]]
Iteration 400 of 1000: loss=0.555 " + "l1=0.0288" + "l2=0.526 f=-0.734 shape=(1, 9000, 1)
logits [[ 0.61873364  0.5490553   0.6376339  -4.743316  ]]
Iteration 500 of 1000: loss=0.458 " + "l1=0.000887" + "l2=0.457 f=-0.726 shape=(1, 9000, 1)
logits [[ 0.5595127   0.56250477  0.5652339  -4.5910406 ]]
Iteration 600 of 1000: loss=0.396 " + "l1=0.00167" + "l2=0.395 f=-0.724 shape=(1, 9000, 1)
logits [[ 0.53613055  0.53098315  0.53343934 -4.495985  ]]
Iteration 700 of 1000: loss=0.355 " + "l1=0.000517" + "l2=0.355 f=-0.721 shape=(1, 9000, 1)
logits [[ 0.48822394  0.5130452   0.5146367  -4.4009666 ]]
Iteration 800 of 1000: loss=0.321 " + "l1=0.000751" + "l2=0.32 f=-0.712 shape=(1, 9000, 1)
logits [[ 0.49976477  0.5007516   0.5030637  -4.3530006 ]]
Iteration 900 of 1000: loss=0.302 " + "l1=0.0066" + "l2=0.295 f=-0.703 shape=(1, 9000, 1)
logits [[ 0.5090612   0.4887614   0.49703023 -4.3057265 ]]
--- 315.4002501964569 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0224 " + "l1=0.0224" + "l2=0 f=-0.732 shape=(1, 9000, 1)
logits [[ 4.463548  -1.8449118  2.2201545 -7.76614  ]]
Iteration 100 of 1000: loss=0.0221 " + "l1=0.0219" + "l2=0.000231 f=-0.735 shape=(1, 9000, 1)
logits [[ 4.4203935 -1.8566244  2.2309685 -7.7340045]]
Iteration 200 of 1000: loss=0.022 " + "l1=0.0218" + "l2=0.000212 f=-0.735 shape=(1, 9000, 1)
logits [[ 4.4134717 -1.8559412  2.2305164 -7.7281537]]
Iteration 300 of 1000: loss=0.022 " + "l1=0.0217" + "l2=0.000272 f=-0.735 shape=(1, 9000, 1)
logits [[ 4.4036345 -1.8561304  2.2308755 -7.7202744]]
Iteration 400 of 1000: loss=0.022 " + "l1=0.0216" + "l2=0.000334 f=-0.736 shape=(1, 9000, 1)
logits [[ 4.393244  -1.856253   2.2312813 -7.712301 ]]
Iteration 500 of 1000: loss=0.0219 " + "l1=0.0215" + "l2=0.000389 f=-0.737 shape=(1, 9000, 1)
logits [[ 4.3827534 -1.8562354  2.2316775 -7.704597 ]]
Iteration 600 of 1000: loss=0.0219 " + "l1=0.0214" + "l2=0.000527 f=-0.737 shape=(1, 9000, 1)
logits [[ 4.372163  -1.8561561  2.2321315 -7.6969566]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.224 " + "l1=0.224" + "l2=0 f=-0.732 shape=(1, 9000, 1)
logits [[ 4.463548  -1.8449118  2.2201545 -7.76614  ]]
Iteration 100 of 1000: loss=0.197 " + "l1=0.183" + "l2=0.0145 f=-0.754 shape=(1, 9000, 1)
logits [[ 4.11531   -1.9204847  2.2864473 -7.4984503]]
Iteration 200 of 1000: loss=0.186 " + "l1=0.165" + "l2=0.0204 f=-0.764 shape=(1, 9000, 1)
logits [[ 3.9480507 -1.9454914  2.296549  -7.3560715]]
Iteration 300 of 1000: loss=0.175 " + "l1=0.15" + "l2=0.0249 f=-0.772 shape=(1, 9000, 1)
logits [[ 3.802334  -1.9573346  2.3001065 -7.235091 ]]
Iteration 400 of 1000: loss=0.165 " + "l1=0.136" + "l2=0.0291 f=-0.78 shape=(1, 9000, 1)
logits [[ 3.6578114 -1.9565661  2.300045  -7.121418 ]]
Iteration 500 of 1000: loss=0.155 " + "l1=0.122" + "l2=0.0331 f=-0.788 shape=(1, 9000, 1)
logits [[ 3.5247052 -1.9561955  2.3038476 -7.0248313]]
Iteration 600 of 1000: loss=0.146 " + "l1=0.108" + "l2=0.0377 f=-0.795 shape=(1, 9000, 1)
logits [[ 3.386807  -1.9535195  2.304085  -6.918887 ]]
Iteration 700 of 1000: loss=0.137 " + "l1=0.0962" + "l2=0.0412 f=-0.8 shape=(1, 9000, 1)
logits [[ 3.2615936 -1.9417462  2.2998617 -6.821072 ]]
Iteration 800 of 1000: loss=0.13 " + "l1=0.0868" + "l2=0.0435 f=-0.803 shape=(1, 9000, 1)
logits [[ 3.1668868 -1.9371009  2.299003  -6.740211 ]]
Iteration 900 of 1000: loss=0.124 " + "l1=0.0787" + "l2=0.0455 f=-0.805 shape=(1, 9000, 1)
logits [[ 3.0871534 -1.9354932  2.3001275 -6.670113 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.24 " + "l1=2.24" + "l2=0 f=-0.732 shape=(1, 9000, 1)
logits [[ 4.463548  -1.8449118  2.2201545 -7.76614  ]]
Iteration 100 of 1000: loss=0.427 " + "l1=0.0107" + "l2=0.416 f=-0.824 shape=(1, 9000, 1)
logits [[ 2.5778356 -2.2444355  2.5671368 -6.1972327]]
Iteration 200 of 1000: loss=0.295 " + "l1=0" + "l2=0.295 f=-0.818 shape=(1, 9000, 1)
logits [[ 2.4877894 -2.1967745  2.5111535 -6.0750675]]
Iteration 300 of 1000: loss=0.228 " + "l1=0.00356" + "l2=0.225 f=-0.814 shape=(1, 9000, 1)
logits [[ 2.4580784 -2.1310158  2.4545207 -6.0387163]]
Iteration 400 of 1000: loss=0.189 " + "l1=0" + "l2=0.189 f=-0.809 shape=(1, 9000, 1)
logits [[ 2.4189708 -2.0868864  2.4207578 -5.9880323]]
Iteration 500 of 1000: loss=0.167 " + "l1=0" + "l2=0.167 f=-0.804 shape=(1, 9000, 1)
logits [[ 2.3902657 -2.0602248  2.3996956 -5.946618 ]]
Iteration 600 of 1000: loss=0.149 " + "l1=0" + "l2=0.149 f=-0.799 shape=(1, 9000, 1)
logits [[ 2.3756454 -2.03609    2.3812683 -5.917093 ]]
Iteration 700 of 1000: loss=0.139 " + "l1=0" + "l2=0.139 f=-0.796 shape=(1, 9000, 1)
logits [[ 2.3462214 -2.0191996  2.3707066 -5.881449 ]]
Iteration 800 of 1000: loss=0.124 " + "l1=0" + "l2=0.124 f=-0.795 shape=(1, 9000, 1)
logits [[ 2.3461437 -1.9968852  2.3555317 -5.8828216]]
Iteration 900 of 1000: loss=0.115 " + "l1=0" + "l2=0.115 f=-0.794 shape=(1, 9000, 1)
logits [[ 2.339953  -1.9845706  2.3464282 -5.8783545]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.23 " + "l1=1.23" + "l2=0 f=-0.732 shape=(1, 9000, 1)
logits [[ 4.463548  -1.8449118  2.2201545 -7.76614  ]]
Iteration 100 of 1000: loss=0.454 " + "l1=0.0653" + "l2=0.388 f=-0.823 shape=(1, 9000, 1)
logits [[ 2.685577  -2.2488778  2.5667653 -6.2956085]]
Iteration 200 of 1000: loss=0.275 " + "l1=0" + "l2=0.275 f=-0.82 shape=(1, 9000, 1)
logits [[ 2.487035  -2.1874337  2.4967844 -6.0750217]]
Iteration 300 of 1000: loss=0.211 " + "l1=0.00601" + "l2=0.205 f=-0.818 shape=(1, 9000, 1)
logits [[ 2.4441679 -2.1109838  2.4332452 -6.0399523]]
Iteration 400 of 1000: loss=0.171 " + "l1=0.00107" + "l2=0.17 f=-0.814 shape=(1, 9000, 1)
logits [[ 2.4033754 -2.068165   2.401439  -5.993654 ]]
Iteration 500 of 1000: loss=0.149 " + "l1=0" + "l2=0.149 f=-0.81 shape=(1, 9000, 1)
logits [[ 2.3754241 -2.0371184  2.382709  -5.959653 ]]
Iteration 600 of 1000: loss=0.134 " + "l1=0" + "l2=0.134 f=-0.806 shape=(1, 9000, 1)
logits [[ 2.349462  -2.0100558  2.367191  -5.931054 ]]
Iteration 700 of 1000: loss=0.12 " + "l1=0" + "l2=0.12 f=-0.805 shape=(1, 9000, 1)
logits [[ 2.3424654 -1.9870154  2.3543777 -5.9298244]]
Iteration 800 of 1000: loss=0.112 " + "l1=0" + "l2=0.112 f=-0.802 shape=(1, 9000, 1)
logits [[ 2.325667  -1.9697857  2.3468385 -5.9091015]]
Iteration 900 of 1000: loss=0.105 " + "l1=0" + "l2=0.105 f=-0.799 shape=(1, 9000, 1)
logits [[ 2.316702  -1.9581989  2.3423648 -5.8956065]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.729 " + "l1=0.729" + "l2=0 f=-0.732 shape=(1, 9000, 1)
logits [[ 4.463548  -1.8449118  2.2201545 -7.76614  ]]
Iteration 100 of 1000: loss=0.44 " + "l1=0.289" + "l2=0.151 f=-0.804 shape=(1, 9000, 1)
logits [[ 3.3424807 -2.1275415  2.453724  -6.883745 ]]
Iteration 200 of 1000: loss=0.321 " + "l1=0.121" + "l2=0.2 f=-0.812 shape=(1, 9000, 1)
logits [[ 2.8369267 -2.1585674  2.4659884 -6.3940973]]
Iteration 300 of 1000: loss=0.223 " + "l1=0.00879" + "l2=0.214 f=-0.822 shape=(1, 9000, 1)
logits [[ 2.4655805 -2.126563   2.4385316 -6.0648103]]
Iteration 400 of 1000: loss=0.17 " + "l1=0.00129" + "l2=0.169 f=-0.822 shape=(1, 9000, 1)
logits [[ 2.4067314 -2.0647418  2.40277   -6.0335307]]
Iteration 500 of 1000: loss=0.144 " + "l1=0" + "l2=0.144 f=-0.818 shape=(1, 9000, 1)
logits [[ 2.3691378 -2.017973   2.3738632 -5.998997 ]]
Iteration 600 of 1000: loss=0.127 " + "l1=0" + "l2=0.127 f=-0.815 shape=(1, 9000, 1)
logits [[ 2.347835  -1.989293   2.3568065 -5.9764514]]
Iteration 700 of 1000: loss=0.115 " + "l1=0" + "l2=0.115 f=-0.811 shape=(1, 9000, 1)
logits [[ 2.3416433 -1.9681677  2.3456059 -5.9639   ]]
Iteration 800 of 1000: loss=0.105 " + "l1=0" + "l2=0.105 f=-0.808 shape=(1, 9000, 1)
logits [[ 2.3383112 -1.9522461  2.3383348 -5.9546003]]
Iteration 900 of 1000: loss=0.0977 " + "l1=0" + "l2=0.0977 f=-0.805 shape=(1, 9000, 1)
logits [[ 2.3321106 -1.9399669  2.3353317 -5.9455714]]
--- 293.5113298892975 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.122 " + "l1=0.122" + "l2=0 f=-0.732 shape=(1, 9000, 1)
logits [[ 4.463548  -1.8449118  2.2201545 -7.76614  ]]
Iteration 100 of 1000: loss=0.121 " + "l1=0.12" + "l2=0.000661 f=-0.729 shape=(1, 9000, 1)
logits [[ 4.3756795 -1.8333219  2.2009125 -7.6597977]]
Iteration 200 of 1000: loss=0.121 " + "l1=0.12" + "l2=0.000775 f=-0.729 shape=(1, 9000, 1)
logits [[ 4.3507314 -1.8294308  2.1948342 -7.6316442]]
Iteration 300 of 1000: loss=0.12 " + "l1=0.119" + "l2=0.000977 f=-0.729 shape=(1, 9000, 1)
logits [[ 4.322898  -1.825225   2.1878211 -7.599544 ]]
Iteration 400 of 1000: loss=0.12 " + "l1=0.119" + "l2=0.00118 f=-0.728 shape=(1, 9000, 1)
logits [[ 4.2950783 -1.8211193  2.180861  -7.5671744]]
Iteration 500 of 1000: loss=0.119 " + "l1=0.118" + "l2=0.00143 f=-0.728 shape=(1, 9000, 1)
logits [[ 4.2676015 -1.8175149  2.1741784 -7.5352592]]
Iteration 600 of 1000: loss=0.119 " + "l1=0.117" + "l2=0.00169 f=-0.727 shape=(1, 9000, 1)
logits [[ 4.2407713 -1.8137491  2.167334  -7.503868 ]]
Iteration 700 of 1000: loss=0.119 " + "l1=0.117" + "l2=0.0019 f=-0.727 shape=(1, 9000, 1)
logits [[ 4.2144723 -1.8097538  2.160421  -7.473279 ]]
Iteration 800 of 1000: loss=0.119 " + "l1=0.116" + "l2=0.00222 f=-0.727 shape=(1, 9000, 1)
logits [[ 4.189347 -1.805935  2.153738 -7.444514]]
Iteration 900 of 1000: loss=0.118 " + "l1=0.116" + "l2=0.00233 f=-0.727 shape=(1, 9000, 1)
logits [[ 4.166031  -1.8019683  2.1477444 -7.418566 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.22 " + "l1=1.22" + "l2=0 f=-0.732 shape=(1, 9000, 1)
logits [[ 4.463548  -1.8449118  2.2201545 -7.76614  ]]
Iteration 100 of 1000: loss=1.1 " + "l1=1.04" + "l2=0.057 f=-0.711 shape=(1, 9000, 1)
logits [[ 3.6426842 -1.737779   2.0492268 -6.7990303]]
Iteration 200 of 1000: loss=1.03 " + "l1=0.941" + "l2=0.0883 f=-0.701 shape=(1, 9000, 1)
logits [[ 3.1575966 -1.6345098  1.9243556 -6.2510653]]
Iteration 300 of 1000: loss=0.959 " + "l1=0.84" + "l2=0.119 f=-0.695 shape=(1, 9000, 1)
logits [[ 2.6774096 -1.5321679  1.7934153 -5.720232 ]]
Iteration 400 of 1000: loss=0.897 " + "l1=0.755" + "l2=0.142 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.2830253 -1.4260777  1.676252  -5.2715235]]
Iteration 500 of 1000: loss=0.844 " + "l1=0.681" + "l2=0.163 f=-0.674 shape=(1, 9000, 1)
logits [[ 1.9540733 -1.3522993  1.5620157 -4.8586287]]
Iteration 600 of 1000: loss=0.795 " + "l1=0.605" + "l2=0.19 f=-0.651 shape=(1, 9000, 1)
logits [[ 1.6370953 -1.2615443  1.4304931 -4.410023 ]]
Iteration 700 of 1000: loss=0.751 " + "l1=0.549" + "l2=0.202 f=-0.638 shape=(1, 9000, 1)
logits [[ 1.4104779 -1.207069   1.3256878 -4.0826554]]
Iteration 800 of 1000: loss=0.716 " + "l1=0.506" + "l2=0.21 f=-0.631 shape=(1, 9000, 1)
logits [[ 1.22527   -1.1413187  1.2237294 -3.831007 ]]
Iteration 900 of 1000: loss=0.686 " + "l1=0.474" + "l2=0.212 f=-0.617 shape=(1, 9000, 1)
logits [[ 1.1174867 -1.0749894  1.1159135 -3.6266785]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.2 " + "l1=12.2" + "l2=0 f=-0.732 shape=(1, 9000, 1)
logits [[ 4.463548  -1.8449118  2.2201545 -7.76614  ]]
Iteration 100 of 1000: loss=4.54 " + "l1=1.94" + "l2=2.6 f=-0.323 shape=(1, 9000, 1)
logits [[ 0.38424996 -0.5515064   0.40756103 -1.5334649 ]]
Iteration 200 of 1000: loss=2.51 " + "l1=0.0276" + "l2=2.49 f=-0.274 shape=(1, 9000, 1)
logits [[-0.44695768 -0.35500905 -0.13322447 -0.16081056]]
Iteration 300 of 1000: loss=1.91 " + "l1=0.00884" + "l2=1.9 f=-0.276 shape=(1, 9000, 1)
logits [[-0.45602706 -0.37540781 -0.13181952 -0.14065629]]
Iteration 400 of 1000: loss=1.61 " + "l1=0" + "l2=1.61 f=-0.271 shape=(1, 9000, 1)
logits [[-0.46398598 -0.3941609  -0.12897728 -0.09576861]]
Iteration 500 of 1000: loss=1.39 " + "l1=0" + "l2=1.39 f=-0.268 shape=(1, 9000, 1)
logits [[-0.41002002 -0.4156704  -0.1279691  -0.11850265]]
Iteration 600 of 1000: loss=1.24 " + "l1=0" + "l2=1.24 f=-0.268 shape=(1, 9000, 1)
logits [[-0.39907044 -0.42688555 -0.13854222 -0.108793  ]]
Iteration 700 of 1000: loss=1.12 " + "l1=0" + "l2=1.12 f=-0.27 shape=(1, 9000, 1)
logits [[-0.36986923 -0.4359977  -0.14160247 -0.1311197 ]]
Iteration 800 of 1000: loss=1.04 " + "l1=0" + "l2=1.04 f=-0.269 shape=(1, 9000, 1)
logits [[-0.3600649  -0.4525262  -0.1459992  -0.11767668]]
Iteration 900 of 1000: loss=0.967 " + "l1=0" + "l2=0.967 f=-0.27 shape=(1, 9000, 1)
logits [[-0.33046392 -0.48051    -0.14468741 -0.1229633 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.73 " + "l1=6.73" + "l2=0 f=-0.732 shape=(1, 9000, 1)
logits [[ 4.463548  -1.8449118  2.2201545 -7.76614  ]]
Iteration 100 of 1000: loss=3.55 " + "l1=2.3" + "l2=1.25 f=-0.501 shape=(1, 9000, 1)
logits [[ 1.0552876  -0.98534125  1.0501132  -3.1229255 ]]
Iteration 200 of 1000: loss=2.54 " + "l1=1.21" + "l2=1.33 f=-0.388 shape=(1, 9000, 1)
logits [[ 0.41750938 -0.6049497   0.41297397 -1.7781042 ]]
Iteration 300 of 1000: loss=1.83 " + "l1=0.274" + "l2=1.56 f=-0.31 shape=(1, 9000, 1)
logits [[-0.29353055 -0.35975462 -0.04334604 -0.5421993 ]]
Iteration 400 of 1000: loss=1.36 " + "l1=0.00778" + "l2=1.35 f=-0.306 shape=(1, 9000, 1)
logits [[-0.60433674 -0.3031736  -0.15201703 -0.16615868]]
Iteration 500 of 1000: loss=1.16 " + "l1=0" + "l2=1.16 f=-0.309 shape=(1, 9000, 1)
logits [[-0.5858329  -0.34288138 -0.16118631 -0.1476956 ]]
Iteration 600 of 1000: loss=1.03 " + "l1=0.00145" + "l2=1.03 f=-0.304 shape=(1, 9000, 1)
logits [[-0.5049049  -0.38633195 -0.16100432 -0.16363284]]
Iteration 700 of 1000: loss=0.94 " + "l1=0.00142" + "l2=0.938 f=-0.3 shape=(1, 9000, 1)
logits [[-0.46117026 -0.4216016  -0.157957   -0.16053075]]
Iteration 800 of 1000: loss=0.869 " + "l1=0" + "l2=0.869 f=-0.289 shape=(1, 9000, 1)
logits [[-0.37148777 -0.46023697 -0.17199354 -0.15105113]]
Iteration 900 of 1000: loss=0.796 " + "l1=0.00937" + "l2=0.786 f=-0.287 shape=(1, 9000, 1)
logits [[-0.24608071 -0.545072   -0.1695577  -0.18659452]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.97 " + "l1=3.97" + "l2=0 f=-0.732 shape=(1, 9000, 1)
logits [[ 4.463548  -1.8449118  2.2201545 -7.76614  ]]
Iteration 100 of 1000: loss=2.67 " + "l1=2.05" + "l2=0.626 f=-0.615 shape=(1, 9000, 1)
logits [[ 1.8044584 -1.3405524  1.5725602 -4.4978075]]
Iteration 200 of 1000: loss=2.04 " + "l1=1.37" + "l2=0.67 f=-0.516 shape=(1, 9000, 1)
logits [[ 1.0363517  -0.96375525  1.0371889  -3.175556  ]]
Iteration 300 of 1000: loss=1.69 " + "l1=0.977" + "l2=0.717 f=-0.465 shape=(1, 9000, 1)
logits [[ 0.58847886 -0.6358541   0.59720117 -2.408306  ]]
Iteration 400 of 1000: loss=1.45 " + "l1=0.708" + "l2=0.738 f=-0.424 shape=(1, 9000, 1)
logits [[ 0.3093774  -0.48293704  0.32796818 -1.8511636 ]]
Iteration 500 of 1000: loss=1.22 " + "l1=0.457" + "l2=0.765 f=-0.391 shape=(1, 9000, 1)
logits [[ 0.05146222 -0.36878145  0.07961537 -1.3273472 ]]
Iteration 600 of 1000: loss=1.04 " + "l1=0.276" + "l2=0.76 f=-0.363 shape=(1, 9000, 1)
logits [[-0.16737437 -0.3149959  -0.06006258 -0.910008  ]]
Iteration 700 of 1000: loss=0.884 " + "l1=0.114" + "l2=0.77 f=-0.328 shape=(1, 9000, 1)
logits [[-0.30284047 -0.31309518 -0.1727325  -0.52436715]]
Iteration 800 of 1000: loss=0.741 " + "l1=0.00281" + "l2=0.738 f=-0.298 shape=(1, 9000, 1)
logits [[-0.3031076  -0.3400549  -0.27046373 -0.27911007]]
Iteration 900 of 1000: loss=0.662 " + "l1=0.00344" + "l2=0.659 f=-0.3 shape=(1, 9000, 1)
logits [[-0.26406592 -0.39556146 -0.26469335 -0.27464426]]
--- 319.2190189361572 seconds ---
Adv result:3
Loading record A02895
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.104 " + "l1=0.104" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[  7.939603   -2.4984658   2.960432  -11.680454 ]]
Iteration 100 of 1000: loss=0.104 " + "l1=0.104" + "l2=0.000296 f=-0.817 shape=(1, 9000, 1)
logits [[  7.8978004  -2.4631188   2.939351  -11.642274 ]]
Iteration 200 of 1000: loss=0.104 " + "l1=0.103" + "l2=0.000292 f=-0.816 shape=(1, 9000, 1)
logits [[  7.8904424  -2.4557202   2.934056  -11.634092 ]]
Iteration 300 of 1000: loss=0.104 " + "l1=0.103" + "l2=0.000374 f=-0.816 shape=(1, 9000, 1)
logits [[  7.8798084  -2.4460344   2.9273357 -11.623163 ]]
Iteration 400 of 1000: loss=0.104 " + "l1=0.103" + "l2=0.000469 f=-0.815 shape=(1, 9000, 1)
logits [[  7.8693695  -2.437071    2.9209614 -11.612366 ]]
Iteration 500 of 1000: loss=0.103 " + "l1=0.103" + "l2=0.000587 f=-0.814 shape=(1, 9000, 1)
logits [[  7.859396  -2.428851   2.914974 -11.601879]]
Iteration 600 of 1000: loss=0.103 " + "l1=0.103" + "l2=0.000723 f=-0.813 shape=(1, 9000, 1)
logits [[  7.8497024  -2.4212632   2.9093475 -11.591617 ]]
Iteration 700 of 1000: loss=0.103 " + "l1=0.103" + "l2=0.000845 f=-0.813 shape=(1, 9000, 1)
logits [[  7.8405423  -2.4145105   2.904253  -11.581958 ]]
Iteration 800 of 1000: loss=0.103 " + "l1=0.102" + "l2=0.000983 f=-0.813 shape=(1, 9000, 1)
logits [[  7.83194    -2.408912    2.8998046 -11.572858 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.04 " + "l1=1.04" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[  7.939603   -2.4984658   2.960432  -11.680454 ]]
Iteration 100 of 1000: loss=1 " + "l1=0.981" + "l2=0.0205 f=-0.799 shape=(1, 9000, 1)
logits [[  7.603228   -2.2057843   2.7782764 -11.3712635]]
Iteration 200 of 1000: loss=0.974 " + "l1=0.941" + "l2=0.0331 f=-0.788 shape=(1, 9000, 1)
logits [[  7.391651   -2.0211532   2.645407  -11.166552 ]]
Iteration 300 of 1000: loss=0.948 " + "l1=0.898" + "l2=0.0503 f=-0.78 shape=(1, 9000, 1)
logits [[  7.1555324  -1.8246515   2.4909408 -10.941918 ]]
Iteration 400 of 1000: loss=0.927 " + "l1=0.863" + "l2=0.0643 f=-0.776 shape=(1, 9000, 1)
logits [[  6.944571   -1.6841861   2.3679314 -10.732083 ]]
Iteration 500 of 1000: loss=0.908 " + "l1=0.828" + "l2=0.0804 f=-0.776 shape=(1, 9000, 1)
logits [[  6.7220225  -1.5538114   2.2513912 -10.524521 ]]
Iteration 600 of 1000: loss=0.889 " + "l1=0.796" + "l2=0.0928 f=-0.776 shape=(1, 9000, 1)
logits [[  6.5086718  -1.4526314   2.150898  -10.309512 ]]
Iteration 700 of 1000: loss=0.872 " + "l1=0.77" + "l2=0.102 f=-0.768 shape=(1, 9000, 1)
logits [[  6.324644   -1.377277    2.0836523 -10.101493 ]]
Iteration 800 of 1000: loss=0.858 " + "l1=0.749" + "l2=0.109 f=-0.753 shape=(1, 9000, 1)
logits [[ 6.1733747 -1.3168365  2.0402665 -9.910145 ]]
Iteration 900 of 1000: loss=0.845 " + "l1=0.727" + "l2=0.118 f=-0.741 shape=(1, 9000, 1)
logits [[ 6.0160985 -1.252131   1.9883772 -9.715544 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.4 " + "l1=10.4" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[  7.939603   -2.4984658   2.960432  -11.680454 ]]
Iteration 100 of 1000: loss=4.46 " + "l1=1.12" + "l2=3.34 f=-0.997 shape=(1, 9000, 1)
logits [[ 1.822094   0.6996327  1.294906  -7.804852 ]]
Iteration 200 of 1000: loss=2.5 " + "l1=0" + "l2=2.5 f=-0.987 shape=(1, 9000, 1)
logits [[ 0.9942553  1.0364176  1.0231664 -7.0001235]]
Iteration 300 of 1000: loss=2.08 " + "l1=0" + "l2=2.08 f=-0.939 shape=(1, 9000, 1)
logits [[ 0.9227131   0.96551204  0.95922947 -6.6033835 ]]
Iteration 400 of 1000: loss=1.82 " + "l1=0" + "l2=1.82 f=-0.895 shape=(1, 9000, 1)
logits [[ 0.8613372   0.90768343  0.89220124 -6.2416286 ]]
Iteration 500 of 1000: loss=1.65 " + "l1=0.019" + "l2=1.63 f=-0.865 shape=(1, 9000, 1)
logits [[ 0.88116956  0.8621949   0.85086995 -6.054857  ]]
Iteration 600 of 1000: loss=1.51 " + "l1=0" + "l2=1.51 f=-0.852 shape=(1, 9000, 1)
logits [[ 0.80002505  0.8590508   0.81657535 -5.884289  ]]
Iteration 700 of 1000: loss=1.38 " + "l1=0" + "l2=1.38 f=-0.843 shape=(1, 9000, 1)
logits [[ 0.7801417   0.8233312   0.79883957 -5.7728744 ]]
Iteration 800 of 1000: loss=1.28 " + "l1=0" + "l2=1.28 f=-0.829 shape=(1, 9000, 1)
logits [[ 0.74793196  0.8113816   0.77630377 -5.6521173 ]]
Iteration 900 of 1000: loss=1.18 " + "l1=0.00761" + "l2=1.18 f=-0.812 shape=(1, 9000, 1)
logits [[ 0.7707053  0.7630953  0.7586506 -5.542054 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.74 " + "l1=5.74" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[  7.939603   -2.4984658   2.960432  -11.680454 ]]
Iteration 100 of 1000: loss=3.98 " + "l1=3" + "l2=0.978 f=-0.819 shape=(1, 9000, 1)
logits [[ 4.87992    -0.58251804  1.7495035  -9.321277  ]]
Iteration 200 of 1000: loss=2.6 " + "l1=0.874" + "l2=1.73 f=-0.908 shape=(1, 9000, 1)
logits [[ 2.061454   0.4730358  1.2412884 -7.409203 ]]
Iteration 300 of 1000: loss=1.81 " + "l1=0.0101" + "l2=1.8 f=-0.892 shape=(1, 9000, 1)
logits [[ 0.87564635  0.8728766   0.8913166  -6.2078176 ]]
Iteration 400 of 1000: loss=1.46 " + "l1=0.014" + "l2=1.45 f=-0.843 shape=(1, 9000, 1)
logits [[ 0.8376974   0.81220794  0.82637596 -5.8490586 ]]
Iteration 500 of 1000: loss=1.27 " + "l1=0.0397" + "l2=1.23 f=-0.807 shape=(1, 9000, 1)
logits [[ 0.84240484  0.77030754  0.7865527  -5.6255484 ]]
Iteration 600 of 1000: loss=1.11 " + "l1=0.00326" + "l2=1.11 f=-0.795 shape=(1, 9000, 1)
logits [[ 0.7710995   0.76517224  0.7575628  -5.475298  ]]
Iteration 700 of 1000: loss=1.01 " + "l1=0" + "l2=1.01 f=-0.788 shape=(1, 9000, 1)
logits [[ 0.7341105  0.7484423  0.7340074 -5.370174 ]]
Iteration 800 of 1000: loss=0.934 " + "l1=0" + "l2=0.934 f=-0.78 shape=(1, 9000, 1)
logits [[ 0.7096575   0.71887046  0.71526814 -5.264274  ]]
Iteration 900 of 1000: loss=0.878 " + "l1=0" + "l2=0.878 f=-0.77 shape=(1, 9000, 1)
logits [[ 0.6903296   0.69818014  0.6892545  -5.1590347 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.39 " + "l1=3.39" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[  7.939603   -2.4984658   2.960432  -11.680454 ]]
Iteration 100 of 1000: loss=2.82 " + "l1=2.51" + "l2=0.311 f=-0.768 shape=(1, 9000, 1)
logits [[  6.3963     -1.3361071   2.2047112 -10.335855 ]]
Iteration 200 of 1000: loss=2.39 " + "l1=1.86" + "l2=0.527 f=-0.79 shape=(1, 9000, 1)
logits [[ 5.0476565 -0.6829012  1.7380648 -9.262509 ]]
Iteration 300 of 1000: loss=2 " + "l1=1.2" + "l2=0.797 f=-0.797 shape=(1, 9000, 1)
logits [[ 3.5391433  -0.15307657  1.4057629  -7.979828  ]]
Iteration 400 of 1000: loss=1.67 " + "l1=0.706" + "l2=0.963 f=-0.806 shape=(1, 9000, 1)
logits [[ 2.3837576   0.21122651  1.1555818  -6.9755654 ]]
Iteration 500 of 1000: loss=1.34 " + "l1=0.274" + "l2=1.07 f=-0.824 shape=(1, 9000, 1)
logits [[ 1.3702958   0.5274523   0.88198817 -6.0765734 ]]
Iteration 600 of 1000: loss=1.05 " + "l1=0.00648" + "l2=1.04 f=-0.841 shape=(1, 9000, 1)
logits [[ 0.7363306   0.71639776  0.7279301  -5.5448585 ]]
Iteration 700 of 1000: loss=0.923 " + "l1=0.00761" + "l2=0.915 f=-0.807 shape=(1, 9000, 1)
logits [[ 0.7137396   0.690311    0.70541793 -5.337761  ]]
Iteration 800 of 1000: loss=0.857 " + "l1=0.00441" + "l2=0.853 f=-0.784 shape=(1, 9000, 1)
logits [[ 0.6907002   0.67712474  0.68430525 -5.1871996 ]]
Iteration 900 of 1000: loss=0.819 " + "l1=0.0025" + "l2=0.817 f=-0.773 shape=(1, 9000, 1)
logits [[ 0.66910297  0.6625279   0.6702101  -5.092394  ]]
--- 302.82554173469543 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0498 " + "l1=0.0498" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[  7.939603   -2.4984658   2.960432  -11.680454 ]]
Iteration 100 of 1000: loss=0.0496 " + "l1=0.0495" + "l2=0.000153 f=-0.821 shape=(1, 9000, 1)
logits [[  7.911031   -2.4993348   2.9630382 -11.658994 ]]
Iteration 200 of 1000: loss=0.0496 " + "l1=0.0495" + "l2=0.000114 f=-0.821 shape=(1, 9000, 1)
logits [[  7.9098887  -2.5004754   2.9632108 -11.6573925]]
Iteration 300 of 1000: loss=0.0496 " + "l1=0.0494" + "l2=0.000143 f=-0.821 shape=(1, 9000, 1)
logits [[  7.905717   -2.5015786   2.9635706 -11.653302 ]]
Iteration 400 of 1000: loss=0.0495 " + "l1=0.0494" + "l2=0.000174 f=-0.822 shape=(1, 9000, 1)
logits [[  7.900833   -2.5026498   2.963918  -11.648559 ]]
Iteration 500 of 1000: loss=0.0496 " + "l1=0.0493" + "l2=0.000269 f=-0.822 shape=(1, 9000, 1)
logits [[  7.8958917  -2.5034878   2.9641728 -11.643673 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.498 " + "l1=0.498" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[  7.939603   -2.4984658   2.960432  -11.680454 ]]
Iteration 100 of 1000: loss=0.484 " + "l1=0.478" + "l2=0.00673 f=-0.83 shape=(1, 9000, 1)
logits [[  7.757086   -2.5165865   2.9796257 -11.5414715]]
Iteration 200 of 1000: loss=0.479 " + "l1=0.47" + "l2=0.00911 f=-0.835 shape=(1, 9000, 1)
logits [[  7.6729507  -2.5235927   2.9778607 -11.466548 ]]
Iteration 300 of 1000: loss=0.473 " + "l1=0.462" + "l2=0.0114 f=-0.838 shape=(1, 9000, 1)
logits [[  7.5893254  -2.52322     2.9715552 -11.388934 ]]
Iteration 400 of 1000: loss=0.468 " + "l1=0.454" + "l2=0.0143 f=-0.84 shape=(1, 9000, 1)
logits [[  7.4982996  -2.5206132   2.9629927 -11.302486 ]]
Iteration 500 of 1000: loss=0.463 " + "l1=0.446" + "l2=0.0171 f=-0.842 shape=(1, 9000, 1)
logits [[  7.4103737  -2.518312    2.9546988 -11.213807 ]]
Iteration 600 of 1000: loss=0.458 " + "l1=0.438" + "l2=0.0198 f=-0.842 shape=(1, 9000, 1)
logits [[  7.3244905  -2.5184526   2.9460053 -11.121983 ]]
Iteration 700 of 1000: loss=0.453 " + "l1=0.43" + "l2=0.0225 f=-0.841 shape=(1, 9000, 1)
logits [[  7.2395597  -2.5166755   2.939223  -11.027439 ]]
Iteration 800 of 1000: loss=0.448 " + "l1=0.422" + "l2=0.0253 f=-0.838 shape=(1, 9000, 1)
logits [[  7.158985   -2.5129285   2.934039  -10.933894 ]]
Iteration 900 of 1000: loss=0.443 " + "l1=0.415" + "l2=0.0279 f=-0.836 shape=(1, 9000, 1)
logits [[  7.0789094  -2.512252    2.9289298 -10.839405 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.98 " + "l1=4.98" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[  7.939603   -2.4984658   2.960432  -11.680454 ]]
Iteration 100 of 1000: loss=2.9 " + "l1=1.6" + "l2=1.3 f=-0.93 shape=(1, 9000, 1)
logits [[ 4.7371864 -2.588357   3.1387832 -9.009396 ]]
Iteration 200 of 1000: loss=1.44 " + "l1=0" + "l2=1.44 f=-1.05 shape=(1, 9000, 1)
logits [[ 3.2766387 -2.8096313  3.288221  -7.948912 ]]
Iteration 300 of 1000: loss=1.17 " + "l1=0.0305" + "l2=1.14 f=-1.01 shape=(1, 9000, 1)
logits [[ 3.240747  -2.8119972  3.2102444 -7.6730347]]
Iteration 400 of 1000: loss=1.01 " + "l1=0" + "l2=1.01 f=-0.993 shape=(1, 9000, 1)
logits [[ 3.1682448 -2.8355327  3.190236  -7.496676 ]]
Iteration 500 of 1000: loss=0.903 " + "l1=0" + "l2=0.903 f=-0.981 shape=(1, 9000, 1)
logits [[ 3.1690352 -2.8708262  3.1717534 -7.3953543]]
Iteration 600 of 1000: loss=0.818 " + "l1=0" + "l2=0.818 f=-0.973 shape=(1, 9000, 1)
logits [[ 3.153538  -2.9011755  3.1588194 -7.302484 ]]
Iteration 700 of 1000: loss=0.753 " + "l1=0.00963" + "l2=0.743 f=-0.963 shape=(1, 9000, 1)
logits [[ 3.137921  -2.9122782  3.1282938 -7.205812 ]]
Iteration 800 of 1000: loss=0.697 " + "l1=0.0144" + "l2=0.682 f=-0.954 shape=(1, 9000, 1)
logits [[ 3.1050212 -2.902476   3.0906048 -7.1074185]]
Iteration 900 of 1000: loss=0.637 " + "l1=0.00392" + "l2=0.633 f=-0.945 shape=(1, 9000, 1)
logits [[ 3.0573995 -2.8916838  3.0534837 -6.998122 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.74 " + "l1=2.74" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[  7.939603   -2.4984658   2.960432  -11.680454 ]]
Iteration 100 of 1000: loss=2.23 " + "l1=1.91" + "l2=0.321 f=-0.861 shape=(1, 9000, 1)
logits [[  6.4683557  -2.480066    2.998587  -10.429389 ]]
Iteration 200 of 1000: loss=1.79 " + "l1=1.19" + "l2=0.595 f=-0.87 shape=(1, 9000, 1)
logits [[ 5.1786137 -2.5389893  3.007534  -9.12602  ]]
Iteration 300 of 1000: loss=1.36 " + "l1=0.525" + "l2=0.838 f=-0.907 shape=(1, 9000, 1)
logits [[ 3.9558306 -2.661601   3.0007243 -7.921986 ]]
Iteration 400 of 1000: loss=0.959 " + "l1=0.00798" + "l2=0.951 f=-0.976 shape=(1, 9000, 1)
logits [[ 3.1159503 -2.8481176  3.10145   -7.27329  ]]
Iteration 500 of 1000: loss=0.764 " + "l1=0" + "l2=0.764 f=-0.965 shape=(1, 9000, 1)
logits [[ 3.0620224 -2.8622315  3.0643868 -7.1226435]]
Iteration 600 of 1000: loss=0.651 " + "l1=0.00319" + "l2=0.648 f=-0.949 shape=(1, 9000, 1)
logits [[ 3.0154722 -2.8362193  3.0096724 -6.9846506]]
Iteration 700 of 1000: loss=0.585 " + "l1=0.016" + "l2=0.569 f=-0.926 shape=(1, 9000, 1)
logits [[ 3.0063949 -2.7849329  2.9772906 -6.9042807]]
Iteration 800 of 1000: loss=0.524 " + "l1=0" + "l2=0.524 f=-0.907 shape=(1, 9000, 1)
logits [[ 2.926348  -2.7189631  2.932957  -6.7702174]]
Iteration 900 of 1000: loss=0.482 " + "l1=0" + "l2=0.482 f=-0.891 shape=(1, 9000, 1)
logits [[ 2.8727026 -2.6703594  2.893298  -6.6614637]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.62 " + "l1=1.62" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[  7.939603   -2.4984658   2.960432  -11.680454 ]]
Iteration 100 of 1000: loss=1.47 " + "l1=1.38" + "l2=0.0845 f=-0.854 shape=(1, 9000, 1)
logits [[  7.2391257  -2.5140524   2.987097  -11.126241 ]]
Iteration 200 of 1000: loss=1.37 " + "l1=1.23" + "l2=0.146 f=-0.857 shape=(1, 9000, 1)
logits [[  6.7244635  -2.4789643   2.9511638 -10.622793 ]]
Iteration 300 of 1000: loss=1.25 " + "l1=1.04" + "l2=0.212 f=-0.836 shape=(1, 9000, 1)
logits [[ 6.1272106 -2.4512584  2.9250627 -9.945396 ]]
Iteration 400 of 1000: loss=1.15 " + "l1=0.867" + "l2=0.278 f=-0.831 shape=(1, 9000, 1)
logits [[ 5.556411  -2.462439   2.8884988 -9.307769 ]]
Iteration 500 of 1000: loss=1.04 " + "l1=0.688" + "l2=0.349 f=-0.83 shape=(1, 9000, 1)
logits [[ 4.9651356 -2.4806626  2.849372  -8.654083 ]]
Iteration 600 of 1000: loss=0.926 " + "l1=0.515" + "l2=0.411 f=-0.828 shape=(1, 9000, 1)
logits [[ 4.382008  -2.506559   2.7971275 -7.9837174]]
Iteration 700 of 1000: loss=0.83 " + "l1=0.38" + "l2=0.45 f=-0.846 shape=(1, 9000, 1)
logits [[ 3.9552505 -2.5840597  2.7865362 -7.541922 ]]
Iteration 800 of 1000: loss=0.704 " + "l1=0.193" + "l2=0.511 f=-0.882 shape=(1, 9000, 1)
logits [[ 3.4180102 -2.6560342  2.8247833 -7.114424 ]]
Iteration 900 of 1000: loss=0.583 " + "l1=0.054" + "l2=0.529 f=-0.881 shape=(1, 9000, 1)
logits [[ 3.0176425 -2.6452603  2.8514957 -6.746915 ]]
--- 282.3008511066437 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.196 " + "l1=0.196" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[  7.939603   -2.4984658   2.960432  -11.680454 ]]
Iteration 100 of 1000: loss=0.195 " + "l1=0.195" + "l2=0.000404 f=-0.818 shape=(1, 9000, 1)
logits [[  7.884334   -2.4785836   2.9409132 -11.617063 ]]
Iteration 200 of 1000: loss=0.195 " + "l1=0.195" + "l2=0.000419 f=-0.817 shape=(1, 9000, 1)
logits [[  7.8708897  -2.474106    2.9355369 -11.601442 ]]
Iteration 300 of 1000: loss=0.195 " + "l1=0.194" + "l2=0.000532 f=-0.817 shape=(1, 9000, 1)
logits [[  7.8539734  -2.4689405   2.9291744 -11.581476 ]]
Iteration 400 of 1000: loss=0.195 " + "l1=0.194" + "l2=0.000684 f=-0.816 shape=(1, 9000, 1)
logits [[  7.835807   -2.4638581   2.922585  -11.560003 ]]
Iteration 500 of 1000: loss=0.194 " + "l1=0.194" + "l2=0.000893 f=-0.816 shape=(1, 9000, 1)
logits [[  7.8173738  -2.459338    2.9161646 -11.538264 ]]
Iteration 600 of 1000: loss=0.194 " + "l1=0.193" + "l2=0.00107 f=-0.816 shape=(1, 9000, 1)
logits [[  7.799362   -2.4556055   2.9102428 -11.516919 ]]
Iteration 700 of 1000: loss=0.194 " + "l1=0.193" + "l2=0.00127 f=-0.815 shape=(1, 9000, 1)
logits [[  7.78188    -2.4524813   2.9048178 -11.496087 ]]
Iteration 800 of 1000: loss=0.194 " + "l1=0.192" + "l2=0.00143 f=-0.815 shape=(1, 9000, 1)
logits [[  7.7654285  -2.4497058   2.8997366 -11.476309 ]]
Iteration 900 of 1000: loss=0.194 " + "l1=0.192" + "l2=0.00169 f=-0.815 shape=(1, 9000, 1)
logits [[  7.749394   -2.4475431   2.8948317 -11.456864 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.96 " + "l1=1.96" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[  7.939603   -2.4984658   2.960432  -11.680454 ]]
Iteration 100 of 1000: loss=1.88 " + "l1=1.84" + "l2=0.0375 f=-0.808 shape=(1, 9000, 1)
logits [[  7.384497   -2.3308423   2.7727494 -11.058496 ]]
Iteration 200 of 1000: loss=1.82 " + "l1=1.76" + "l2=0.0621 f=-0.798 shape=(1, 9000, 1)
logits [[  7.009557   -2.2255714   2.6394117 -10.6159115]]
Iteration 300 of 1000: loss=1.76 " + "l1=1.67" + "l2=0.095 f=-0.778 shape=(1, 9000, 1)
logits [[  6.577973   -2.1169012   2.5116804 -10.085267 ]]
Iteration 400 of 1000: loss=1.7 " + "l1=1.56" + "l2=0.135 f=-0.748 shape=(1, 9000, 1)
logits [[ 6.1139536 -1.9933113  2.3867671 -9.501025 ]]
Iteration 500 of 1000: loss=1.63 " + "l1=1.45" + "l2=0.179 f=-0.729 shape=(1, 9000, 1)
logits [[ 5.623061  -1.8903348  2.2561033 -8.9043045]]
Iteration 600 of 1000: loss=1.57 " + "l1=1.36" + "l2=0.218 f=-0.712 shape=(1, 9000, 1)
logits [[ 5.186435  -1.7942803  2.125212  -8.365831 ]]
Iteration 700 of 1000: loss=1.52 " + "l1=1.26" + "l2=0.256 f=-0.699 shape=(1, 9000, 1)
logits [[ 4.7632375 -1.7302461  2.0106366 -7.8399863]]
Iteration 800 of 1000: loss=1.45 " + "l1=1.16" + "l2=0.294 f=-0.688 shape=(1, 9000, 1)
logits [[ 4.3220353 -1.6816856  1.8869228 -7.278582 ]]
Iteration 900 of 1000: loss=1.39 " + "l1=1.07" + "l2=0.324 f=-0.68 shape=(1, 9000, 1)
logits [[ 3.9252775 -1.6357112  1.7385333 -6.7493496]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=19.6 " + "l1=19.6" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[  7.939603   -2.4984658   2.960432  -11.680454 ]]
Iteration 100 of 1000: loss=10.1 " + "l1=5.54" + "l2=4.6 f=-0.67 shape=(1, 9000, 1)
logits [[ 1.1715928 -0.6671248  1.1794661 -4.3622103]]
Iteration 200 of 1000: loss=5.39 " + "l1=0.766" + "l2=4.62 f=-0.463 shape=(1, 9000, 1)
logits [[-0.38651252 -0.33530417 -0.18248321 -0.9486498 ]]
Iteration 300 of 1000: loss=3.49 " + "l1=0.0216" + "l2=3.47 f=-0.44 shape=(1, 9000, 1)
logits [[-0.5088363  -0.54813254 -0.34037232 -0.361928  ]]
Iteration 400 of 1000: loss=2.8 " + "l1=0" + "l2=2.8 f=-0.424 shape=(1, 9000, 1)
logits [[-0.36061522 -0.61978906 -0.35766187 -0.35612231]]
Iteration 500 of 1000: loss=2.41 " + "l1=0" + "l2=2.41 f=-0.436 shape=(1, 9000, 1)
logits [[-0.38703442 -0.6522855  -0.3636368  -0.33942223]]
Iteration 600 of 1000: loss=2.12 " + "l1=0" + "l2=2.12 f=-0.438 shape=(1, 9000, 1)
logits [[-0.35500756 -0.70531076 -0.35464457 -0.33885562]]
Iteration 700 of 1000: loss=1.91 " + "l1=0" + "l2=1.91 f=-0.436 shape=(1, 9000, 1)
logits [[-0.34174904 -0.758422   -0.33549213 -0.3098696 ]]
Iteration 800 of 1000: loss=1.74 " + "l1=0" + "l2=1.74 f=-0.436 shape=(1, 9000, 1)
logits [[-0.31793374 -0.82601637 -0.3012071  -0.3002135 ]]
Iteration 900 of 1000: loss=1.62 " + "l1=0" + "l2=1.62 f=-0.434 shape=(1, 9000, 1)
logits [[-0.3169488  -0.85807306 -0.29530275 -0.2666434 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=10.8 " + "l1=10.8" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[  7.939603   -2.4984658   2.960432  -11.680454 ]]
Iteration 100 of 1000: loss=7.55 " + "l1=5.87" + "l2=1.69 f=-0.667 shape=(1, 9000, 1)
logits [[ 3.7456434 -1.33788    1.8438841 -6.918509 ]]
Iteration 200 of 1000: loss=4.99 " + "l1=2.52" + "l2=2.48 f=-0.67 shape=(1, 9000, 1)
logits [[ 0.890067  -0.7372506  0.8579643 -3.6904898]]
Iteration 300 of 1000: loss=3.34 " + "l1=0.839" + "l2=2.5 f=-0.53 shape=(1, 9000, 1)
logits [[-0.04566742 -0.47985736 -0.03516407 -1.5603384 ]]
Iteration 400 of 1000: loss=2.47 " + "l1=0.0555" + "l2=2.41 f=-0.437 shape=(1, 9000, 1)
logits [[-0.3874342  -0.54823595 -0.35583654 -0.45668513]]
Iteration 500 of 1000: loss=1.98 " + "l1=0" + "l2=1.98 f=-0.441 shape=(1, 9000, 1)
logits [[-0.38528723 -0.63564754 -0.3759873  -0.36523008]]
Iteration 600 of 1000: loss=1.69 " + "l1=0.00554" + "l2=1.69 f=-0.445 shape=(1, 9000, 1)
logits [[-0.3444075  -0.7655893  -0.3304215  -0.34049514]]
Iteration 700 of 1000: loss=1.53 " + "l1=0.00792" + "l2=1.52 f=-0.437 shape=(1, 9000, 1)
logits [[-0.29592645 -0.844081   -0.29594782 -0.31033373]]
Iteration 800 of 1000: loss=1.42 " + "l1=0.00118" + "l2=1.42 f=-0.435 shape=(1, 9000, 1)
logits [[-0.29155645 -0.8826716  -0.28228068 -0.28442562]]
Iteration 900 of 1000: loss=1.34 " + "l1=0.00576" + "l2=1.33 f=-0.434 shape=(1, 9000, 1)
logits [[-0.26874033 -0.9280975  -0.26501974 -0.27549136]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=6.38 " + "l1=6.38" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[  7.939603   -2.4984658   2.960432  -11.680454 ]]
Iteration 100 of 1000: loss=5.3 " + "l1=4.74" + "l2=0.567 f=-0.73 shape=(1, 9000, 1)
logits [[ 5.5915885 -1.8371257  2.308563  -8.984622 ]]
Iteration 200 of 1000: loss=4.24 " + "l1=3.21" + "l2=1.03 f=-0.648 shape=(1, 9000, 1)
logits [[ 3.4634461 -1.346304   1.715749  -6.4252467]]
Iteration 300 of 1000: loss=3.49 " + "l1=2.18" + "l2=1.31 f=-0.636 shape=(1, 9000, 1)
logits [[ 2.0516608 -1.1027148  1.1616467 -4.6529   ]]
Iteration 400 of 1000: loss=2.8 " + "l1=1.23" + "l2=1.57 f=-0.604 shape=(1, 9000, 1)
logits [[ 0.7914281  -0.7447193   0.54578096 -3.0068696 ]]
Iteration 500 of 1000: loss=2.11 " + "l1=0.558" + "l2=1.55 f=-0.536 shape=(1, 9000, 1)
logits [[ 0.04033525 -0.5559157   0.04361115 -1.6729927 ]]
Iteration 600 of 1000: loss=1.71 " + "l1=0.259" + "l2=1.45 f=-0.477 shape=(1, 9000, 1)
logits [[-0.17560993 -0.5838697  -0.17586468 -0.9732836 ]]
Iteration 700 of 1000: loss=1.46 " + "l1=0.0843" + "l2=1.38 f=-0.43 shape=(1, 9000, 1)
logits [[-0.2718874  -0.6485911  -0.2706174  -0.52999383]]
Iteration 800 of 1000: loss=1.29 " + "l1=0.00496" + "l2=1.28 f=-0.414 shape=(1, 9000, 1)
logits [[-0.32506487 -0.6649952  -0.32727394 -0.34033287]]
Iteration 900 of 1000: loss=1.18 " + "l1=0.00451" + "l2=1.17 f=-0.409 shape=(1, 9000, 1)
logits [[-0.31283793 -0.69623077 -0.3073167  -0.32120204]]
--- 313.22141218185425 seconds ---
Adv result:3
Loading record A02918
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0934 " + "l1=0.0934" + "l2=0 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.7854066 -4.552272   4.2805343 -7.0465407]]
Iteration 100 of 1000: loss=0.0929 " + "l1=0.0924" + "l2=0.000423 f=-0.63 shape=(1, 9000, 1)
logits [[ 4.7205243 -4.524257   4.2536726 -6.9704113]]
Iteration 200 of 1000: loss=0.0928 " + "l1=0.0924" + "l2=0.000404 f=-0.63 shape=(1, 9000, 1)
logits [[ 4.7160873 -4.5190625  4.249527  -6.964784 ]]
Iteration 300 of 1000: loss=0.0927 " + "l1=0.0922" + "l2=0.000479 f=-0.629 shape=(1, 9000, 1)
logits [[ 4.707583  -4.5128565  4.24416   -6.9537215]]
Iteration 400 of 1000: loss=0.0926 " + "l1=0.092" + "l2=0.000561 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.6985908 -4.5063744  4.238613  -6.9419513]]
Iteration 500 of 1000: loss=0.0926 " + "l1=0.0919" + "l2=0.000679 f=-0.627 shape=(1, 9000, 1)
logits [[ 4.690351  -4.499926   4.233137  -6.9309993]]
Iteration 600 of 1000: loss=0.0926 " + "l1=0.0918" + "l2=0.000788 f=-0.626 shape=(1, 9000, 1)
logits [[ 4.6830354 -4.494266   4.228285  -6.920946 ]]
Iteration 700 of 1000: loss=0.0925 " + "l1=0.0916" + "l2=0.0009 f=-0.625 shape=(1, 9000, 1)
logits [[ 4.675631  -4.488887   4.2235684 -6.9109616]]
Iteration 800 of 1000: loss=0.0926 " + "l1=0.0915" + "l2=0.00105 f=-0.624 shape=(1, 9000, 1)
logits [[ 4.6683865 -4.4840813  4.219374  -6.9012246]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.934 " + "l1=0.934" + "l2=0 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.7854066 -4.552272   4.2805343 -7.0465407]]
Iteration 100 of 1000: loss=0.877 " + "l1=0.837" + "l2=0.0405 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.171361  -4.1946344  3.976569  -6.3344045]]
Iteration 200 of 1000: loss=0.85 " + "l1=0.791" + "l2=0.0589 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.9288523 -3.9821508  3.8103511 -6.0582566]]
Iteration 300 of 1000: loss=0.829 " + "l1=0.761" + "l2=0.068 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.7693143 -3.8398352  3.6881037 -5.8559613]]
Iteration 400 of 1000: loss=0.813 " + "l1=0.737" + "l2=0.0765 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.6552765 -3.712197   3.576346  -5.7147284]]
Iteration 500 of 1000: loss=0.8 " + "l1=0.714" + "l2=0.0855 f=-0.539 shape=(1, 9000, 1)
logits [[ 3.5367973 -3.6049051  3.4781144 -5.565012 ]]
Iteration 600 of 1000: loss=0.787 " + "l1=0.695" + "l2=0.0927 f=-0.528 shape=(1, 9000, 1)
logits [[ 3.4315233 -3.5137217  3.399954  -5.428155 ]]
Iteration 700 of 1000: loss=0.776 " + "l1=0.676" + "l2=0.1 f=-0.516 shape=(1, 9000, 1)
logits [[ 3.340179  -3.4221642  3.3265014 -5.308338 ]]
Iteration 800 of 1000: loss=0.766 " + "l1=0.662" + "l2=0.104 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.2786    -3.3443515  3.2663941 -5.225825 ]]
Iteration 900 of 1000: loss=0.758 " + "l1=0.648" + "l2=0.11 f=-0.496 shape=(1, 9000, 1)
logits [[ 3.2147155 -3.268659   3.2064476 -5.137661 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.34 " + "l1=9.34" + "l2=0 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.7854066 -4.552272   4.2805343 -7.0465407]]
Iteration 100 of 1000: loss=4.79 " + "l1=3.04" + "l2=1.75 f=-0.387 shape=(1, 9000, 1)
logits [[ 1.5842918 -1.4575175  1.5865216 -3.2631965]]
Iteration 200 of 1000: loss=3.73 " + "l1=1.89" + "l2=1.85 f=-0.362 shape=(1, 9000, 1)
logits [[ 1.0209179 -0.8630475  1.0234953 -2.630109 ]]
Iteration 300 of 1000: loss=3.04 " + "l1=1.31" + "l2=1.73 f=-0.353 shape=(1, 9000, 1)
logits [[ 0.7432461  -0.55843985  0.75169206 -2.3504536 ]]
Iteration 400 of 1000: loss=2.55 " + "l1=0.874" + "l2=1.68 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.5548211 -0.3114245  0.5622485 -2.1922765]]
Iteration 500 of 1000: loss=2.13 " + "l1=0.454" + "l2=1.67 f=-0.339 shape=(1, 9000, 1)
logits [[ 0.27630225 -0.07746166  0.37645265 -1.9294735 ]]
Iteration 600 of 1000: loss=1.7 " + "l1=0.042" + "l2=1.65 f=-0.327 shape=(1, 9000, 1)
logits [[-0.00924373  0.16134998  0.20339194 -1.6642798 ]]
Iteration 700 of 1000: loss=1.42 " + "l1=0.0184" + "l2=1.4 f=-0.307 shape=(1, 9000, 1)
logits [[ 0.054736    0.15324868  0.17165662 -1.6076558 ]]
Iteration 800 of 1000: loss=1.24 " + "l1=0" + "l2=1.24 f=-0.294 shape=(1, 9000, 1)
logits [[ 0.12900497  0.14387202  0.13778493 -1.5873996 ]]
Iteration 900 of 1000: loss=1.15 " + "l1=0.00387" + "l2=1.15 f=-0.289 shape=(1, 9000, 1)
logits [[ 0.10035983  0.1245799   0.12845273 -1.5110836 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.14 " + "l1=5.14" + "l2=0 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.7854066 -4.552272   4.2805343 -7.0465407]]
Iteration 100 of 1000: loss=3.46 " + "l1=2.59" + "l2=0.869 f=-0.422 shape=(1, 9000, 1)
logits [[ 2.403239  -2.3044262  2.3870592 -4.174563 ]]
Iteration 200 of 1000: loss=2.87 " + "l1=1.87" + "l2=1 f=-0.392 shape=(1, 9000, 1)
logits [[ 1.7612274 -1.6352456  1.7513762 -3.4439683]]
Iteration 300 of 1000: loss=2.48 " + "l1=1.47" + "l2=1.01 f=-0.367 shape=(1, 9000, 1)
logits [[ 1.4280508 -1.2522386  1.4271638 -3.0705073]]
Iteration 400 of 1000: loss=2.19 " + "l1=1.14" + "l2=1.04 f=-0.343 shape=(1, 9000, 1)
logits [[ 1.1395899 -0.9414012  1.1399167 -2.7095716]]
Iteration 500 of 1000: loss=1.99 " + "l1=0.963" + "l2=1.02 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.9883487 -0.7609404  0.9906015 -2.5223687]]
Iteration 600 of 1000: loss=1.82 " + "l1=0.803" + "l2=1.01 f=-0.317 shape=(1, 9000, 1)
logits [[ 0.8316929  -0.6239715   0.83553046 -2.310537  ]]
Iteration 700 of 1000: loss=1.65 " + "l1=0.614" + "l2=1.04 f=-0.312 shape=(1, 9000, 1)
logits [[ 0.62553513 -0.47576168  0.6412032  -2.03891   ]]
Iteration 800 of 1000: loss=1.49 " + "l1=0.446" + "l2=1.05 f=-0.311 shape=(1, 9000, 1)
logits [[ 0.47851005 -0.3326627   0.47737798 -1.8671578 ]]
Iteration 900 of 1000: loss=1.34 " + "l1=0.256" + "l2=1.08 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.30316532 -0.15390456  0.31204125 -1.683029  ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=7.24 " + "l1=7.24" + "l2=0 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.7854066 -4.552272   4.2805343 -7.0465407]]
Iteration 100 of 1000: loss=4.17 " + "l1=2.77" + "l2=1.39 f=-0.398 shape=(1, 9000, 1)
logits [[ 1.8407973 -1.7346438  1.8424273 -3.5407498]]
Iteration 200 of 1000: loss=3.37 " + "l1=1.95" + "l2=1.42 f=-0.37 shape=(1, 9000, 1)
logits [[ 1.3355988 -1.1817796  1.3370168 -2.9699392]]
Iteration 300 of 1000: loss=2.8 " + "l1=1.37" + "l2=1.43 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.98971605 -0.78358424  0.987436   -2.58202   ]]
Iteration 400 of 1000: loss=2.45 " + "l1=1.09" + "l2=1.36 f=-0.348 shape=(1, 9000, 1)
logits [[ 0.8005739 -0.6044279  0.8031922 -2.3921516]]
Iteration 500 of 1000: loss=2.13 " + "l1=0.793" + "l2=1.33 f=-0.333 shape=(1, 9000, 1)
logits [[ 0.61425066 -0.39897135  0.6244971  -2.1724381 ]]
Iteration 600 of 1000: loss=1.82 " + "l1=0.479" + "l2=1.34 f=-0.322 shape=(1, 9000, 1)
logits [[ 0.41474068 -0.17977902  0.43789408 -1.9618889 ]]
Iteration 700 of 1000: loss=1.53 " + "l1=0.19" + "l2=1.34 f=-0.312 shape=(1, 9000, 1)
logits [[ 0.22911471  0.02221168  0.26799557 -1.7668401 ]]
Iteration 800 of 1000: loss=1.28 " + "l1=0.00467" + "l2=1.28 f=-0.301 shape=(1, 9000, 1)
logits [[ 0.11684078  0.1446426   0.15066443 -1.6150519 ]]
Iteration 900 of 1000: loss=1.17 " + "l1=0.0131" + "l2=1.16 f=-0.291 shape=(1, 9000, 1)
logits [[ 0.12159653  0.12085684  0.13775526 -1.5454003 ]]
--- 300.34207677841187 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00505 " + "l1=0.00505" + "l2=0 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.7854066 -4.552272   4.2805343 -7.0465407]]
Iteration 100 of 1000: loss=0.00477 " + "l1=0.00451" + "l2=0.000268 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.7351127 -4.562826   4.284412  -6.9901085]]
Iteration 200 of 1000: loss=0.0047 " + "l1=0.00446" + "l2=0.000233 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.7327166 -4.5661235  4.286341  -6.986644 ]]
Iteration 300 of 1000: loss=0.00466 " + "l1=0.00438" + "l2=0.000283 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.7265515 -4.569532   4.288586  -6.9793477]]
Iteration 400 of 1000: loss=0.00463 " + "l1=0.00429" + "l2=0.000334 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.719725  -4.572614   4.2905555 -6.971389 ]]
Iteration 500 of 1000: loss=0.00466 " + "l1=0.00422" + "l2=0.000446 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.713848  -4.5752354  4.2921753 -6.964231 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0505 " + "l1=0.0505" + "l2=0 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.7854066 -4.552272   4.2805343 -7.0465407]]
Iteration 100 of 1000: loss=0.0251 " + "l1=0.00974" + "l2=0.0154 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.4051323 -4.6210318  4.3077335 -6.6242685]]
Iteration 200 of 1000: loss=0.0176 " + "l1=0.000228" + "l2=0.0173 f=-0.63 shape=(1, 9000, 1)
logits [[ 4.321201  -4.646522   4.3189178 -6.515138 ]]
Iteration 300 of 1000: loss=0.0143 " + "l1=0.000266" + "l2=0.014 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.3309836 -4.6583114  4.3283257 -6.513058 ]]
Iteration 400 of 1000: loss=0.0129 " + "l1=0" + "l2=0.0129 f=-0.626 shape=(1, 9000, 1)
logits [[ 4.327361  -4.664968   4.333543  -6.5006137]]
Iteration 500 of 1000: loss=0.0114 " + "l1=0.000149" + "l2=0.0112 f=-0.625 shape=(1, 9000, 1)
logits [[ 4.3377686 -4.66779    4.3362756 -6.5082455]]
Iteration 600 of 1000: loss=0.0106 " + "l1=0" + "l2=0.0106 f=-0.625 shape=(1, 9000, 1)
logits [[ 4.334476 -4.670453  4.336605 -6.50091 ]]
Iteration 700 of 1000: loss=0.0102 " + "l1=0.00045" + "l2=0.00972 f=-0.625 shape=(1, 9000, 1)
logits [[ 4.3403287 -4.6698055  4.3358297 -6.5047994]]
Iteration 800 of 1000: loss=0.0101 " + "l1=0" + "l2=0.0101 f=-0.624 shape=(1, 9000, 1)
logits [[ 4.3348584 -4.671011   4.33564   -6.4960093]]
Iteration 900 of 1000: loss=0.00925 " + "l1=0.000303" + "l2=0.00895 f=-0.624 shape=(1, 9000, 1)
logits [[ 4.3376307 -4.6705613  4.334602  -6.4968257]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0278 " + "l1=0.0278" + "l2=0 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.7854066 -4.552272   4.2805343 -7.0465407]]
Iteration 100 of 1000: loss=0.0198 " + "l1=0.0151" + "l2=0.0047 f=-0.634 shape=(1, 9000, 1)
logits [[ 4.5743713 -4.593314   4.2991056 -6.81441  ]]
Iteration 200 of 1000: loss=0.0175 " + "l1=0.0116" + "l2=0.00597 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.5196695 -4.612453   4.3091397 -6.7479568]]
Iteration 300 of 1000: loss=0.0157 " + "l1=0.00873" + "l2=0.00701 f=-0.632 shape=(1, 9000, 1)
logits [[ 4.476503  -4.6292267  4.3176966 -6.6921453]]
Iteration 400 of 1000: loss=0.0143 " + "l1=0.00611" + "l2=0.00815 f=-0.63 shape=(1, 9000, 1)
logits [[ 4.436075  -4.642878   4.325021  -6.6399846]]
Iteration 500 of 1000: loss=0.013 " + "l1=0.00395" + "l2=0.00903 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.4014764 -4.6515226  4.3295975 -6.591903 ]]
Iteration 600 of 1000: loss=0.0119 " + "l1=0.00219" + "l2=0.00972 f=-0.626 shape=(1, 9000, 1)
logits [[ 4.372338  -4.65714    4.3324447 -6.5519495]]
Iteration 700 of 1000: loss=0.0109 " + "l1=0.000371" + "l2=0.0106 f=-0.625 shape=(1, 9000, 1)
logits [[ 4.3415112 -4.665507   4.3347707 -6.511962 ]]
Iteration 800 of 1000: loss=0.0101 " + "l1=0.000185" + "l2=0.00989 f=-0.625 shape=(1, 9000, 1)
logits [[ 4.3385644 -4.668924   4.3351984 -6.503555 ]]
Iteration 900 of 1000: loss=0.00961 " + "l1=4.8e-05" + "l2=0.00956 f=-0.624 shape=(1, 9000, 1)
logits [[ 4.3359556 -4.670173   4.335082  -6.497283 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0164 " + "l1=0.0164" + "l2=0 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.7854066 -4.552272   4.2805343 -7.0465407]]
Iteration 100 of 1000: loss=0.0135 " + "l1=0.0116" + "l2=0.0019 f=-0.634 shape=(1, 9000, 1)
logits [[ 4.6497455 -4.5804563  4.2930846 -6.898089 ]]
Iteration 200 of 1000: loss=0.0127 " + "l1=0.0106" + "l2=0.00211 f=-0.634 shape=(1, 9000, 1)
logits [[ 4.625236  -4.5902743  4.2984295 -6.8692417]]
Iteration 300 of 1000: loss=0.0122 " + "l1=0.00965" + "l2=0.0025 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.600966  -4.600346   4.3039913 -6.8378434]]
Iteration 400 of 1000: loss=0.0117 " + "l1=0.00876" + "l2=0.00291 f=-0.632 shape=(1, 9000, 1)
logits [[ 4.5788617 -4.609229   4.3092613 -6.8088384]]
Iteration 500 of 1000: loss=0.0113 " + "l1=0.00802" + "l2=0.00327 f=-0.632 shape=(1, 9000, 1)
logits [[ 4.5609627 -4.6169443  4.3141007 -6.7851005]]
Iteration 600 of 1000: loss=0.011 " + "l1=0.00731" + "l2=0.00365 f=-0.631 shape=(1, 9000, 1)
logits [[ 4.5432973 -4.6239543  4.318477  -6.7616897]]
Iteration 700 of 1000: loss=0.0107 " + "l1=0.00667" + "l2=0.00401 f=-0.63 shape=(1, 9000, 1)
logits [[ 4.52656   -4.62926    4.3214307 -6.7391596]]
Iteration 800 of 1000: loss=0.0104 " + "l1=0.00608" + "l2=0.00432 f=-0.63 shape=(1, 9000, 1)
logits [[ 4.5103097 -4.6335573  4.323122  -6.7179203]]
Iteration 900 of 1000: loss=0.0102 " + "l1=0.00556" + "l2=0.00459 f=-0.629 shape=(1, 9000, 1)
logits [[ 4.495497  -4.6366806  4.3243895 -6.698572 ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0221 " + "l1=0.0221" + "l2=0 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.7854066 -4.552272   4.2805343 -7.0465407]]
Iteration 100 of 1000: loss=0.017 " + "l1=0.0139" + "l2=0.00304 f=-0.634 shape=(1, 9000, 1)
logits [[ 4.614048  -4.586143   4.295838  -6.8591943]]
Iteration 200 of 1000: loss=0.0156 " + "l1=0.0118" + "l2=0.00381 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.5722585 -4.601174   4.30348   -6.8078494]]
Iteration 300 of 1000: loss=0.0144 " + "l1=0.00991" + "l2=0.00454 f=-0.632 shape=(1, 9000, 1)
logits [[ 4.5381045 -4.6150336  4.311619  -6.763932 ]]
Iteration 400 of 1000: loss=0.0135 " + "l1=0.00831" + "l2=0.00523 f=-0.631 shape=(1, 9000, 1)
logits [[ 4.508908  -4.6274223  4.3188696 -6.7260737]]
Iteration 500 of 1000: loss=0.0128 " + "l1=0.00694" + "l2=0.00584 f=-0.63 shape=(1, 9000, 1)
logits [[ 4.4823422 -4.6366363  4.323647  -6.6903872]]
Iteration 600 of 1000: loss=0.012 " + "l1=0.00574" + "l2=0.00631 f=-0.629 shape=(1, 9000, 1)
logits [[ 4.4577646 -4.642886   4.3264666 -6.6579194]]
Iteration 700 of 1000: loss=0.0115 " + "l1=0.00469" + "l2=0.0068 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.435002  -4.647164   4.327739  -6.6278005]]
Iteration 800 of 1000: loss=0.0109 " + "l1=0.00352" + "l2=0.00742 f=-0.627 shape=(1, 9000, 1)
logits [[ 4.410269  -4.6533136  4.329784  -6.5948577]]
Iteration 900 of 1000: loss=0.0103 " + "l1=0.00273" + "l2=0.00757 f=-0.626 shape=(1, 9000, 1)
logits [[ 4.395389  -4.658324   4.332995  -6.5749383]]
--- 282.2046368122101 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.118 " + "l1=0.118" + "l2=0 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.7854066 -4.552272   4.2805343 -7.0465407]]
Iteration 100 of 1000: loss=0.117 " + "l1=0.115" + "l2=0.00119 f=-0.626 shape=(1, 9000, 1)
logits [[ 4.6660986 -4.5468783  4.252057  -6.8765182]]
Iteration 200 of 1000: loss=0.116 " + "l1=0.115" + "l2=0.00132 f=-0.625 shape=(1, 9000, 1)
logits [[ 4.645011  -4.546073   4.2474256 -6.845549 ]]
Iteration 300 of 1000: loss=0.116 " + "l1=0.114" + "l2=0.00153 f=-0.623 shape=(1, 9000, 1)
logits [[ 4.6240716 -4.544704   4.2427034 -6.81414  ]]
Iteration 400 of 1000: loss=0.116 " + "l1=0.114" + "l2=0.00173 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.6057663 -4.5424004  4.2382207 -6.7860484]]
Iteration 500 of 1000: loss=0.115 " + "l1=0.113" + "l2=0.00191 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.5886636 -4.54014    4.2339993 -6.759271 ]]
Iteration 600 of 1000: loss=0.115 " + "l1=0.113" + "l2=0.0022 f=-0.617 shape=(1, 9000, 1)
logits [[ 4.571818  -4.537695   4.2297516 -6.733164 ]]
Iteration 700 of 1000: loss=0.115 " + "l1=0.113" + "l2=0.00241 f=-0.616 shape=(1, 9000, 1)
logits [[ 4.5563817 -4.5352464  4.225675  -6.709247 ]]
Iteration 800 of 1000: loss=0.115 " + "l1=0.112" + "l2=0.00266 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.54228   -4.5330567  4.2219744 -6.687352 ]]
Iteration 900 of 1000: loss=0.115 " + "l1=0.112" + "l2=0.00281 f=-0.613 shape=(1, 9000, 1)
logits [[ 4.529161  -4.530915   4.218529  -6.6669893]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.18 " + "l1=1.18" + "l2=0 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.7854066 -4.552272   4.2805343 -7.0465407]]
Iteration 100 of 1000: loss=1.04 " + "l1=0.974" + "l2=0.0641 f=-0.565 shape=(1, 9000, 1)
logits [[ 3.9361274 -4.3593554  3.9499345 -5.7864695]]
Iteration 200 of 1000: loss=1 " + "l1=0.917" + "l2=0.086 f=-0.538 shape=(1, 9000, 1)
logits [[ 3.667139  -4.227668   3.7878065 -5.3805995]]
Iteration 300 of 1000: loss=0.974 " + "l1=0.869" + "l2=0.106 f=-0.516 shape=(1, 9000, 1)
logits [[ 3.4320073 -4.0986824  3.6459286 -5.042661 ]]
Iteration 400 of 1000: loss=0.951 " + "l1=0.832" + "l2=0.12 f=-0.496 shape=(1, 9000, 1)
logits [[ 3.261411  -3.9903064  3.529227  -4.7859344]]
Iteration 500 of 1000: loss=0.931 " + "l1=0.801" + "l2=0.13 f=-0.482 shape=(1, 9000, 1)
logits [[ 3.1353714 -3.8721797  3.4078176 -4.5975723]]
Iteration 600 of 1000: loss=0.913 " + "l1=0.771" + "l2=0.142 f=-0.47 shape=(1, 9000, 1)
logits [[ 2.9953628 -3.7867439  3.3092003 -4.396172 ]]
Iteration 700 of 1000: loss=0.897 " + "l1=0.747" + "l2=0.151 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.890218  -3.7001195  3.2187068 -4.2464356]]
Iteration 800 of 1000: loss=0.883 " + "l1=0.726" + "l2=0.157 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.7983885 -3.6306405  3.1468105 -4.1084433]]
Iteration 900 of 1000: loss=0.87 " + "l1=0.705" + "l2=0.165 f=-0.438 shape=(1, 9000, 1)
logits [[ 2.7012472 -3.572986   3.0844688 -3.9655936]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.8 " + "l1=11.8" + "l2=0 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.7854066 -4.552272   4.2805343 -7.0465407]]
Iteration 100 of 1000: loss=5 " + "l1=2.66" + "l2=2.34 f=-0.275 shape=(1, 9000, 1)
logits [[ 0.54385847 -2.6666708   1.8444506  -0.82002544]]
Iteration 200 of 1000: loss=3.75 " + "l1=1.22" + "l2=2.53 f=-0.228 shape=(1, 9000, 1)
logits [[-0.12660623 -2.2533138   1.3451083   0.12363511]]
Iteration 300 of 1000: loss=2.74 " + "l1=0.0228" + "l2=2.72 f=-0.21 shape=(1, 9000, 1)
logits [[-0.67097443 -1.6102192   0.7327512   0.7099277 ]]
Iteration 400 of 1000: loss=2.21 " + "l1=0" + "l2=2.21 f=-0.201 shape=(1, 9000, 1)
logits [[-0.6518841  -1.5443084   0.68893117  0.7018173 ]]
Iteration 500 of 1000: loss=1.92 " + "l1=0.0225" + "l2=1.9 f=-0.194 shape=(1, 9000, 1)
logits [[-0.5958092  -1.504301    0.67374897  0.6512942 ]]
Iteration 600 of 1000: loss=1.74 " + "l1=0" + "l2=1.74 f=-0.187 shape=(1, 9000, 1)
logits [[-0.59400904 -1.4494058   0.6408541   0.6548549 ]]
Iteration 700 of 1000: loss=1.61 " + "l1=0" + "l2=1.61 f=-0.18 shape=(1, 9000, 1)
logits [[-0.5852449  -1.4183395   0.6313273   0.65145475]]
Iteration 800 of 1000: loss=1.49 " + "l1=0" + "l2=1.49 f=-0.176 shape=(1, 9000, 1)
logits [[-0.5759617  -1.4016405   0.63655734  0.6369516 ]]
Iteration 900 of 1000: loss=1.41 " + "l1=0" + "l2=1.41 f=-0.174 shape=(1, 9000, 1)
logits [[-0.59828895 -1.3769375   0.6258758   0.6548504 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.51 " + "l1=6.51" + "l2=0 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.7854066 -4.552272   4.2805343 -7.0465407]]
Iteration 100 of 1000: loss=3.69 " + "l1=2.48" + "l2=1.21 f=-0.332 shape=(1, 9000, 1)
logits [[ 1.4504915 -3.1370702  2.43128   -2.0718498]]
Iteration 200 of 1000: loss=3.11 " + "l1=1.78" + "l2=1.33 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.8731901 -2.8178885  2.0250251 -1.2122148]]
Iteration 300 of 1000: loss=2.68 " + "l1=1.28" + "l2=1.4 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.46077052 -2.5999544   1.6972178  -0.621348  ]]
Iteration 400 of 1000: loss=2.32 " + "l1=0.912" + "l2=1.4 f=-0.243 shape=(1, 9000, 1)
logits [[ 0.13552156 -2.4219487   1.4868817  -0.17197883]]
Iteration 500 of 1000: loss=2.01 " + "l1=0.571" + "l2=1.44 f=-0.213 shape=(1, 9000, 1)
logits [[-0.13800772 -2.2438934   1.2844523   0.24606773]]
Iteration 600 of 1000: loss=1.73 " + "l1=0.223" + "l2=1.5 f=-0.195 shape=(1, 9000, 1)
logits [[-0.43518677 -1.8739883   0.9673755   0.5624884 ]]
Iteration 700 of 1000: loss=1.47 " + "l1=0" + "l2=1.47 f=-0.198 shape=(1, 9000, 1)
logits [[-0.68454397 -1.6371317   0.7647888   0.7664322 ]]
Iteration 800 of 1000: loss=1.34 " + "l1=0" + "l2=1.34 f=-0.198 shape=(1, 9000, 1)
logits [[-0.7095231  -1.5845306   0.74461263  0.7591693 ]]
Iteration 900 of 1000: loss=1.25 " + "l1=0.0126" + "l2=1.23 f=-0.195 shape=(1, 9000, 1)
logits [[-0.68761814 -1.5716243   0.7507843   0.72786826]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.85 " + "l1=3.85" + "l2=0 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.7854066 -4.552272   4.2805343 -7.0465407]]
Iteration 100 of 1000: loss=2.65 " + "l1=2.03" + "l2=0.619 f=-0.411 shape=(1, 9000, 1)
logits [[ 2.265817  -3.5928903  2.9668286 -3.285288 ]]
Iteration 200 of 1000: loss=2.36 " + "l1=1.67" + "l2=0.691 f=-0.346 shape=(1, 9000, 1)
logits [[ 1.818392  -3.2495801  2.5954938 -2.547893 ]]
Iteration 300 of 1000: loss=2.16 " + "l1=1.43" + "l2=0.725 f=-0.313 shape=(1, 9000, 1)
logits [[ 1.4844016 -3.0435545  2.3571594 -2.050499 ]]
Iteration 400 of 1000: loss=1.96 " + "l1=1.18" + "l2=0.776 f=-0.289 shape=(1, 9000, 1)
logits [[ 1.1102611 -2.8262177  2.0998268 -1.5413189]]
Iteration 500 of 1000: loss=1.78 " + "l1=0.976" + "l2=0.807 f=-0.271 shape=(1, 9000, 1)
logits [[ 0.81989986 -2.6601422   1.8805802  -1.1229708 ]]
Iteration 600 of 1000: loss=1.64 " + "l1=0.822" + "l2=0.822 f=-0.254 shape=(1, 9000, 1)
logits [[ 0.5986276 -2.5313642  1.7228538 -0.8066917]]
Iteration 700 of 1000: loss=1.53 " + "l1=0.686" + "l2=0.842 f=-0.241 shape=(1, 9000, 1)
logits [[ 0.40462616 -2.4026759   1.5735109  -0.5377635 ]]
Iteration 800 of 1000: loss=1.43 " + "l1=0.591" + "l2=0.843 f=-0.224 shape=(1, 9000, 1)
logits [[ 0.2965105 -2.2883587  1.4572216 -0.3607535]]
Iteration 900 of 1000: loss=1.34 " + "l1=0.467" + "l2=0.875 f=-0.204 shape=(1, 9000, 1)
logits [[ 0.1294145  -2.1178951   1.3044074  -0.13189363]]
--- 312.95357298851013 seconds ---
Adv result:3
Loading record A02937
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0183 " + "l1=0.0183" + "l2=0 f=-0.127 shape=(1, 9000, 1)
logits [[ 0.6618349 -1.1690673  0.5234983 -0.523834 ]]
Iteration 100 of 1000: loss=0.0161 " + "l1=0.0153" + "l2=0.000811 f=-0.112 shape=(1, 9000, 1)
logits [[ 0.50541484 -1.0262548   0.41832355 -0.34459615]]
Iteration 200 of 1000: loss=0.0153 " + "l1=0.0144" + "l2=0.000981 f=-0.106 shape=(1, 9000, 1)
logits [[ 0.4587199 -0.9767448  0.3847926 -0.291193 ]]
Iteration 300 of 1000: loss=0.0148 " + "l1=0.0137" + "l2=0.00114 f=-0.103 shape=(1, 9000, 1)
logits [[ 0.42279094 -0.9452563   0.3616675  -0.25225508]]
Iteration 400 of 1000: loss=0.0144 " + "l1=0.0131" + "l2=0.0013 f=-0.102 shape=(1, 9000, 1)
logits [[ 0.3916708  -0.92007333  0.34198704 -0.2200647 ]]
Iteration 500 of 1000: loss=0.0141 " + "l1=0.0126" + "l2=0.00151 f=-0.1 shape=(1, 9000, 1)
logits [[ 0.36391068 -0.89735544  0.32521927 -0.19202605]]
Iteration 600 of 1000: loss=0.0138 " + "l1=0.0121" + "l2=0.00168 f=-0.0986 shape=(1, 9000, 1)
logits [[ 0.3374083  -0.8771592   0.31053856 -0.16503763]]
Iteration 700 of 1000: loss=0.0135 " + "l1=0.0117" + "l2=0.0018 f=-0.0974 shape=(1, 9000, 1)
logits [[ 0.3130813  -0.8599432   0.29755998 -0.14034602]]
Iteration 800 of 1000: loss=0.0133 " + "l1=0.0113" + "l2=0.00196 f=-0.0961 shape=(1, 9000, 1)
logits [[ 0.28888896 -0.8427445   0.28508848 -0.11546033]]
Iteration 900 of 1000: loss=0.0131 " + "l1=0.0111" + "l2=0.00201 f=-0.0955 shape=(1, 9000, 1)
logits [[ 0.2760755  -0.83208936  0.2758547  -0.10183613]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.183 " + "l1=0.183" + "l2=0 f=-0.127 shape=(1, 9000, 1)
logits [[ 0.6618349 -1.1690673  0.5234983 -0.523834 ]]
Iteration 100 of 1000: loss=0.0952 " + "l1=0.0721" + "l2=0.0231 f=-0.0921 shape=(1, 9000, 1)
logits [[ 0.05972897 -0.6193734   0.1016596   0.08951679]]
Iteration 200 of 1000: loss=0.0791 " + "l1=0.055" + "l2=0.024 f=-0.0976 shape=(1, 9000, 1)
logits [[ 0.02651499 -0.5042733   0.04603047  0.04141609]]
Iteration 300 of 1000: loss=0.071 " + "l1=0.0456" + "l2=0.0255 f=-0.106 shape=(1, 9000, 1)
logits [[-0.00754543 -0.44228727  0.01324551  0.01311963]]
Iteration 400 of 1000: loss=0.0649 " + "l1=0.0378" + "l2=0.0271 f=-0.115 shape=(1, 9000, 1)
logits [[-0.038631   -0.39175677 -0.01419632 -0.01365927]]
Iteration 500 of 1000: loss=0.06 " + "l1=0.0322" + "l2=0.0278 f=-0.119 shape=(1, 9000, 1)
logits [[-0.05502988 -0.35305578 -0.03098404 -0.03677572]]
Iteration 600 of 1000: loss=0.0565 " + "l1=0.0276" + "l2=0.0288 f=-0.126 shape=(1, 9000, 1)
logits [[-0.07399265 -0.3226615  -0.04620583 -0.06128701]]
Iteration 700 of 1000: loss=0.0527 " + "l1=0.0231" + "l2=0.0296 f=-0.131 shape=(1, 9000, 1)
logits [[-0.1004096  -0.29268888 -0.06135529 -0.06788886]]
Iteration 800 of 1000: loss=0.0498 " + "l1=0.0194" + "l2=0.0304 f=-0.134 shape=(1, 9000, 1)
logits [[-0.12603724 -0.2664913  -0.07246992 -0.07282518]]
Iteration 900 of 1000: loss=0.0464 " + "l1=0.0169" + "l2=0.0296 f=-0.138 shape=(1, 9000, 1)
logits [[-0.14276166 -0.24811183 -0.07946722 -0.08152344]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.83 " + "l1=1.83" + "l2=0 f=-0.127 shape=(1, 9000, 1)
logits [[ 0.6618349 -1.1690673  0.5234983 -0.523834 ]]
Iteration 100 of 1000: loss=0.158 " + "l1=0.0024" + "l2=0.155 f=-0.185 shape=(1, 9000, 1)
logits [[-0.31255555 -0.14234126 -0.14642623 -0.13993981]]
Iteration 200 of 1000: loss=0.107 " + "l1=0" + "l2=0.107 f=-0.172 shape=(1, 9000, 1)
logits [[-0.26997083 -0.12586966 -0.14173147 -0.15168867]]
Iteration 300 of 1000: loss=0.0859 " + "l1=0" + "l2=0.0859 f=-0.163 shape=(1, 9000, 1)
logits [[-0.23580202 -0.12506008 -0.13021475 -0.16157046]]
Iteration 400 of 1000: loss=0.073 " + "l1=0" + "l2=0.073 f=-0.157 shape=(1, 9000, 1)
logits [[-0.22630432 -0.12548362 -0.13040437 -0.1457861 ]]
Iteration 500 of 1000: loss=0.0693 " + "l1=0" + "l2=0.0693 f=-0.155 shape=(1, 9000, 1)
logits [[-0.23929098 -0.10655082 -0.14675154 -0.1288493 ]]
Iteration 600 of 1000: loss=0.0601 " + "l1=0.00563" + "l2=0.0544 f=-0.144 shape=(1, 9000, 1)
logits [[-0.19374973 -0.13084729 -0.12807523 -0.12521273]]
Iteration 700 of 1000: loss=0.0505 " + "l1=0" + "l2=0.0505 f=-0.145 shape=(1, 9000, 1)
logits [[-0.18629983 -0.12289748 -0.12966305 -0.14010209]]
Iteration 800 of 1000: loss=0.0513 " + "l1=0.00519" + "l2=0.0461 f=-0.148 shape=(1, 9000, 1)
logits [[-0.20973897 -0.12358388 -0.13849431 -0.11839587]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.01 " + "l1=1.01" + "l2=0 f=-0.127 shape=(1, 9000, 1)
logits [[ 0.6618349 -1.1690673  0.5234983 -0.523834 ]]
Iteration 100 of 1000: loss=0.16 " + "l1=0.00935" + "l2=0.151 f=-0.177 shape=(1, 9000, 1)
logits [[-0.27634528 -0.15453038 -0.13752915 -0.13988477]]
Iteration 200 of 1000: loss=0.0983 " + "l1=0.00351" + "l2=0.0948 f=-0.162 shape=(1, 9000, 1)
logits [[-0.24787363 -0.13523006 -0.12885348 -0.13442862]]
Iteration 300 of 1000: loss=0.0764 " + "l1=0" + "l2=0.0764 f=-0.151 shape=(1, 9000, 1)
logits [[-0.22055416 -0.12349864 -0.12649141 -0.13537166]]
Iteration 400 of 1000: loss=0.0627 " + "l1=0" + "l2=0.0627 f=-0.145 shape=(1, 9000, 1)
logits [[-0.19624513 -0.12378865 -0.12386186 -0.13497895]]
Iteration 500 of 1000: loss=0.0544 " + "l1=0" + "l2=0.0544 f=-0.146 shape=(1, 9000, 1)
logits [[-0.20642775 -0.12154277 -0.13131252 -0.12651852]]
Iteration 600 of 1000: loss=0.0515 " + "l1=0.0029" + "l2=0.0486 f=-0.149 shape=(1, 9000, 1)
logits [[-0.19121513 -0.1288765  -0.12359932 -0.15062398]]
Iteration 700 of 1000: loss=0.0461 " + "l1=0" + "l2=0.0461 f=-0.154 shape=(1, 9000, 1)
logits [[-0.23079698 -0.12143251 -0.13986166 -0.12211872]]
Iteration 800 of 1000: loss=0.0455 " + "l1=0.00351" + "l2=0.042 f=-0.153 shape=(1, 9000, 1)
logits [[-0.20586768 -0.13511358 -0.12872994 -0.14132005]]
Iteration 900 of 1000: loss=0.0412 " + "l1=0" + "l2=0.0412 f=-0.153 shape=(1, 9000, 1)
logits [[-0.21430188 -0.1292475  -0.13107963 -0.13820711]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.595 " + "l1=0.595" + "l2=0 f=-0.127 shape=(1, 9000, 1)
logits [[ 0.6618349 -1.1690673  0.5234983 -0.523834 ]]
Iteration 100 of 1000: loss=0.168 " + "l1=0.0872" + "l2=0.0808 f=-0.142 shape=(1, 9000, 1)
logits [[-0.14813042 -0.3166823  -0.05417347 -0.04849328]]
Iteration 200 of 1000: loss=0.102 " + "l1=0.00682" + "l2=0.0954 f=-0.157 shape=(1, 9000, 1)
logits [[-0.23165762 -0.14602607 -0.12672994 -0.12503803]]
Iteration 300 of 1000: loss=0.0741 " + "l1=0.000962" + "l2=0.0731 f=-0.151 shape=(1, 9000, 1)
logits [[-0.21569455 -0.1308967  -0.12804696 -0.12793621]]
Iteration 400 of 1000: loss=0.0626 " + "l1=0.00175" + "l2=0.0608 f=-0.15 shape=(1, 9000, 1)
logits [[-0.19575194 -0.13364431 -0.12827282 -0.14303818]]
Iteration 500 of 1000: loss=0.0554 " + "l1=0" + "l2=0.0554 f=-0.154 shape=(1, 9000, 1)
logits [[-0.21124049 -0.12977517 -0.13775098 -0.13759041]]
Iteration 600 of 1000: loss=0.0515 " + "l1=0.0019" + "l2=0.0496 f=-0.156 shape=(1, 9000, 1)
logits [[-0.21769264 -0.13622375 -0.14150216 -0.13038117]]
Iteration 700 of 1000: loss=0.0479 " + "l1=0.00199" + "l2=0.0459 f=-0.157 shape=(1, 9000, 1)
logits [[-0.19884774 -0.14066787 -0.1345311  -0.15263066]]
Iteration 800 of 1000: loss=0.0431 " + "l1=0" + "l2=0.0431 f=-0.156 shape=(1, 9000, 1)
logits [[-0.21880707 -0.13152781 -0.13443856 -0.14040926]]
Iteration 900 of 1000: loss=0.0411 " + "l1=0" + "l2=0.0411 f=-0.156 shape=(1, 9000, 1)
logits [[-0.2297433  -0.12641111 -0.13452545 -0.13372394]]
--- 304.07795214653015 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00138 " + "l1=0.00138" + "l2=0 f=-0.127 shape=(1, 9000, 1)
logits [[ 0.6618349 -1.1690673  0.5234983 -0.523834 ]]
Iteration 100 of 1000: loss=0.0012 " + "l1=0.00102" + "l2=0.000187 f=-0.126 shape=(1, 9000, 1)
logits [[ 0.61864245 -1.1595656   0.5169009  -0.478758  ]]
Iteration 200 of 1000: loss=0.00115 " + "l1=0.00101" + "l2=0.000143 f=-0.126 shape=(1, 9000, 1)
logits [[ 0.61797386 -1.1584319   0.5173409  -0.4797895 ]]
Iteration 300 of 1000: loss=0.00114 " + "l1=0.000961" + "l2=0.000178 f=-0.125 shape=(1, 9000, 1)
logits [[ 0.6123334  -1.1553134   0.5162287  -0.47466096]]
Iteration 400 of 1000: loss=0.00111 " + "l1=0.000911" + "l2=0.000203 f=-0.125 shape=(1, 9000, 1)
logits [[ 0.60560036 -1.1516093   0.514549   -0.4681574 ]]
Iteration 500 of 1000: loss=0.00113 " + "l1=0.000859" + "l2=0.000269 f=-0.124 shape=(1, 9000, 1)
logits [[ 0.59825593 -1.1474103   0.51238304 -0.4607854 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0138 " + "l1=0.0138" + "l2=0 f=-0.127 shape=(1, 9000, 1)
logits [[ 0.6618349 -1.1690673  0.5234983 -0.523834 ]]
Iteration 100 of 1000: loss=0.0027 " + "l1=0" + "l2=0.0027 f=-0.12 shape=(1, 9000, 1)
logits [[ 0.49253199 -1.121447    0.49286905 -0.34411496]]
Iteration 200 of 1000: loss=0.00187 " + "l1=2.89e-05" + "l2=0.00184 f=-0.119 shape=(1, 9000, 1)
logits [[ 0.48929146 -1.1080737   0.48900208 -0.3461067 ]]
Iteration 300 of 1000: loss=0.00152 " + "l1=0" + "l2=0.00152 f=-0.118 shape=(1, 9000, 1)
logits [[ 0.48383257 -1.0970508   0.4848361  -0.34235156]]
Iteration 400 of 1000: loss=0.00133 " + "l1=0" + "l2=0.00133 f=-0.115 shape=(1, 9000, 1)
logits [[ 0.4754065  -1.082397    0.47773638 -0.332323  ]]
Iteration 500 of 1000: loss=0.00123 " + "l1=0" + "l2=0.00123 f=-0.113 shape=(1, 9000, 1)
logits [[ 0.46663243 -1.0701653   0.47129604 -0.32154745]]
Iteration 600 of 1000: loss=0.00109 " + "l1=0.00011" + "l2=0.000976 f=-0.113 shape=(1, 9000, 1)
logits [[ 0.47036222 -1.0655116   0.46926016 -0.32569256]]
Iteration 700 of 1000: loss=0.00106 " + "l1=0" + "l2=0.00106 f=-0.112 shape=(1, 9000, 1)
logits [[ 0.46468154 -1.0597044   0.4657219  -0.3195855 ]]
Iteration 800 of 1000: loss=0.00111 " + "l1=0" + "l2=0.00111 f=-0.112 shape=(1, 9000, 1)
logits [[ 0.46014655 -1.053523    0.46172842 -0.31479666]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.00761 " + "l1=0.00761" + "l2=0 f=-0.127 shape=(1, 9000, 1)
logits [[ 0.6618349 -1.1690673  0.5234983 -0.523834 ]]
Iteration 100 of 1000: loss=0.00307 " + "l1=0.00073" + "l2=0.00234 f=-0.121 shape=(1, 9000, 1)
logits [[ 0.5099764 -1.1278528  0.4967068 -0.3617526]]
Iteration 200 of 1000: loss=0.00194 " + "l1=2.79e-05" + "l2=0.00191 f=-0.119 shape=(1, 9000, 1)
logits [[ 0.48980817 -1.1096715   0.48930115 -0.34540832]]
Iteration 300 of 1000: loss=0.00154 " + "l1=4.49e-05" + "l2=0.00149 f=-0.118 shape=(1, 9000, 1)
logits [[ 0.48613963 -1.0982952   0.48532382 -0.34386104]]
Iteration 400 of 1000: loss=0.00129 " + "l1=0" + "l2=0.00129 f=-0.116 shape=(1, 9000, 1)
logits [[ 0.4779343  -1.0846493   0.4788557  -0.33469027]]
Iteration 500 of 1000: loss=0.00115 " + "l1=4.01e-06" + "l2=0.00114 f=-0.114 shape=(1, 9000, 1)
logits [[ 0.4727699  -1.072398    0.47269705 -0.32800207]]
Iteration 600 of 1000: loss=0.00107 " + "l1=0" + "l2=0.00107 f=-0.113 shape=(1, 9000, 1)
logits [[ 0.4684807 -1.0658823  0.4692507 -0.3234347]]
Iteration 700 of 1000: loss=0.001 " + "l1=0" + "l2=0.001 f=-0.112 shape=(1, 9000, 1)
logits [[ 0.46473792 -1.060208    0.46577302 -0.3194355 ]]
Iteration 800 of 1000: loss=0.00104 " + "l1=0" + "l2=0.00104 f=-0.112 shape=(1, 9000, 1)
logits [[ 0.46222213 -1.054304    0.46244013 -0.3169245 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0045 " + "l1=0.0045" + "l2=0 f=-0.127 shape=(1, 9000, 1)
logits [[ 0.6618349 -1.1690673  0.5234983 -0.523834 ]]
Iteration 100 of 1000: loss=0.0028 " + "l1=0.00184" + "l2=0.000962 f=-0.124 shape=(1, 9000, 1)
logits [[ 0.56570375 -1.1490902   0.50900424 -0.42359006]]
Iteration 200 of 1000: loss=0.00227 " + "l1=0.0011" + "l2=0.00118 f=-0.122 shape=(1, 9000, 1)
logits [[ 0.5347382  -1.1306161   0.50095236 -0.3923602 ]]
Iteration 300 of 1000: loss=0.0018 " + "l1=0.000378" + "l2=0.00142 f=-0.119 shape=(1, 9000, 1)
logits [[ 0.5034197  -1.1111145   0.49179426 -0.360627  ]]
Iteration 400 of 1000: loss=0.0014 " + "l1=3.97e-06" + "l2=0.0014 f=-0.117 shape=(1, 9000, 1)
logits [[ 0.48469672 -1.0955945   0.48457453 -0.34234336]]
Iteration 500 of 1000: loss=0.00119 " + "l1=0" + "l2=0.00119 f=-0.115 shape=(1, 9000, 1)
logits [[ 0.47651097 -1.0798491   0.47659108 -0.33268875]]
Iteration 600 of 1000: loss=0.00109 " + "l1=0" + "l2=0.00109 f=-0.113 shape=(1, 9000, 1)
logits [[ 0.4710117  -1.0695416   0.47121036 -0.32612097]]
Iteration 700 of 1000: loss=0.00112 " + "l1=0" + "l2=0.00112 f=-0.113 shape=(1, 9000, 1)
logits [[ 0.4678846  -1.063535    0.467921   -0.32285854]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00294 " + "l1=0.00294" + "l2=0 f=-0.127 shape=(1, 9000, 1)
logits [[ 0.6618349 -1.1690673  0.5234983 -0.523834 ]]
Iteration 100 of 1000: loss=0.00216 " + "l1=0.00165" + "l2=0.000511 f=-0.125 shape=(1, 9000, 1)
logits [[ 0.59003437 -1.1529553   0.5123257  -0.44887027]]
Iteration 200 of 1000: loss=0.00195 " + "l1=0.00141" + "l2=0.000543 f=-0.124 shape=(1, 9000, 1)
logits [[ 0.57586265 -1.1452849   0.50941366 -0.435874  ]]
Iteration 300 of 1000: loss=0.00179 " + "l1=0.00113" + "l2=0.000659 f=-0.122 shape=(1, 9000, 1)
logits [[ 0.5564285  -1.1322327   0.5034185  -0.41580257]]
Iteration 400 of 1000: loss=0.00162 " + "l1=0.000849" + "l2=0.000773 f=-0.12 shape=(1, 9000, 1)
logits [[ 0.5369829  -1.119204    0.49705288 -0.39601213]]
Iteration 500 of 1000: loss=0.00147 " + "l1=0.000584" + "l2=0.000884 f=-0.119 shape=(1, 9000, 1)
logits [[ 0.5196154  -1.1087372   0.49211672 -0.37793368]]
Iteration 600 of 1000: loss=0.00132 " + "l1=0.000316" + "l2=0.001 f=-0.117 shape=(1, 9000, 1)
logits [[ 0.50085235 -1.0964692   0.4859785  -0.35839558]]
Iteration 700 of 1000: loss=0.0012 " + "l1=2.48e-05" + "l2=0.00118 f=-0.114 shape=(1, 9000, 1)
logits [[ 0.47561947 -1.0754062   0.47445402 -0.33045948]]
Iteration 800 of 1000: loss=0.00105 " + "l1=1.41e-06" + "l2=0.00104 f=-0.113 shape=(1, 9000, 1)
logits [[ 0.46996862 -1.066686    0.46990228 -0.32469094]]
Iteration 900 of 1000: loss=0.00108 " + "l1=1.35e-05" + "l2=0.00107 f=-0.112 shape=(1, 9000, 1)
logits [[ 0.46720302 -1.0607183   0.4665699  -0.32178134]]
--- 240.32913970947266 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0119 " + "l1=0.0119" + "l2=0 f=-0.127 shape=(1, 9000, 1)
logits [[ 0.6618349 -1.1690673  0.5234983 -0.523834 ]]
Iteration 100 of 1000: loss=0.0088 " + "l1=0.00741" + "l2=0.00139 f=-0.11 shape=(1, 9000, 1)
logits [[ 0.46907026 -1.0396218   0.40212512 -0.27160692]]
Iteration 200 of 1000: loss=0.00774 " + "l1=0.00606" + "l2=0.00168 f=-0.104 shape=(1, 9000, 1)
logits [[ 0.41000628 -0.990398    0.36207828 -0.19575465]]
Iteration 300 of 1000: loss=0.00696 " + "l1=0.00497" + "l2=0.00199 f=-0.0999 shape=(1, 9000, 1)
logits [[ 0.36228648 -0.9597772   0.33240283 -0.13442335]]
Iteration 400 of 1000: loss=0.00634 " + "l1=0.00407" + "l2=0.00227 f=-0.0973 shape=(1, 9000, 1)
logits [[ 0.32313058 -0.9390065   0.31030294 -0.0837578 ]]
Iteration 500 of 1000: loss=0.00574 " + "l1=0.00331" + "l2=0.00243 f=-0.0937 shape=(1, 9000, 1)
logits [[ 0.2919266  -0.9196697   0.29166603 -0.03870658]]
Iteration 600 of 1000: loss=0.00527 " + "l1=0.00286" + "l2=0.00241 f=-0.0905 shape=(1, 9000, 1)
logits [[ 0.2766179 -0.9064489  0.2769864 -0.0090498]]
Iteration 700 of 1000: loss=0.00497 " + "l1=0.00246" + "l2=0.00251 f=-0.0879 shape=(1, 9000, 1)
logits [[ 0.26376027 -0.8970088   0.26414177  0.01767621]]
Iteration 800 of 1000: loss=0.00469 " + "l1=0.00206" + "l2=0.00263 f=-0.0852 shape=(1, 9000, 1)
logits [[ 0.24924716 -0.8875759   0.2516925   0.0456808 ]]
Iteration 900 of 1000: loss=0.00447 " + "l1=0.00159" + "l2=0.00288 f=-0.0823 shape=(1, 9000, 1)
logits [[ 0.23000133 -0.87782687  0.23870939  0.07989306]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.119 " + "l1=0.119" + "l2=0 f=-0.127 shape=(1, 9000, 1)
logits [[ 0.6618349 -1.1690673  0.5234983 -0.523834 ]]
Iteration 100 of 1000: loss=0.0116 " + "l1=0" + "l2=0.0116 f=-0.0778 shape=(1, 9000, 1)
logits [[ 0.14694789 -0.87305635  0.20130704  0.21356452]]
Iteration 200 of 1000: loss=0.00788 " + "l1=0" + "l2=0.00788 f=-0.074 shape=(1, 9000, 1)
logits [[ 0.1605638  -0.8642599   0.19637449  0.21146753]]
Iteration 300 of 1000: loss=0.0063 " + "l1=0" + "l2=0.0063 f=-0.0732 shape=(1, 9000, 1)
logits [[ 0.16493681 -0.8596833   0.19242536  0.2093927 ]]
Iteration 400 of 1000: loss=0.0053 " + "l1=0" + "l2=0.0053 f=-0.0733 shape=(1, 9000, 1)
logits [[ 0.17602882 -0.86266714  0.19534005  0.19828776]]
Iteration 500 of 1000: loss=0.00488 " + "l1=0" + "l2=0.00488 f=-0.074 shape=(1, 9000, 1)
logits [[ 0.17303115 -0.86391354  0.1926067   0.2022632 ]]
Iteration 600 of 1000: loss=0.00467 " + "l1=0" + "l2=0.00467 f=-0.0743 shape=(1, 9000, 1)
logits [[ 0.16809297 -0.86386925  0.18979627  0.20894665]]
Iteration 700 of 1000: loss=0.00431 " + "l1=0" + "l2=0.00431 f=-0.0743 shape=(1, 9000, 1)
logits [[ 0.16802067 -0.862925    0.1893816   0.2083689 ]]
Iteration 800 of 1000: loss=0.00452 " + "l1=0.000699" + "l2=0.00382 f=-0.0748 shape=(1, 9000, 1)
logits [[ 0.18094292 -0.86626744  0.19654356  0.18955329]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0652 " + "l1=0.0652" + "l2=0 f=-0.127 shape=(1, 9000, 1)
logits [[ 0.6618349 -1.1690673  0.5234983 -0.523834 ]]
Iteration 100 of 1000: loss=0.0122 " + "l1=7.95e-05" + "l2=0.0122 f=-0.0796 shape=(1, 9000, 1)
logits [[ 0.1499939  -0.86876136  0.20095187  0.19950664]]
Iteration 200 of 1000: loss=0.00786 " + "l1=0" + "l2=0.00786 f=-0.0749 shape=(1, 9000, 1)
logits [[ 0.16428602 -0.8616011   0.19641568  0.2013933 ]]
Iteration 300 of 1000: loss=0.00616 " + "l1=0" + "l2=0.00616 f=-0.0736 shape=(1, 9000, 1)
logits [[ 0.17181554 -0.85910326  0.19455628  0.19848618]]
Iteration 400 of 1000: loss=0.00538 " + "l1=0" + "l2=0.00538 f=-0.073 shape=(1, 9000, 1)
logits [[ 0.17251563 -0.860537    0.19249113  0.2035191 ]]
Iteration 500 of 1000: loss=0.00478 " + "l1=0" + "l2=0.00478 f=-0.0734 shape=(1, 9000, 1)
logits [[ 0.17315146 -0.8634061   0.19196263  0.20471293]]
Iteration 600 of 1000: loss=0.00455 " + "l1=0" + "l2=0.00455 f=-0.074 shape=(1, 9000, 1)
logits [[ 0.17654207 -0.8654452   0.19340996  0.19959465]]
Iteration 700 of 1000: loss=0.00413 " + "l1=0" + "l2=0.00413 f=-0.074 shape=(1, 9000, 1)
logits [[ 0.17604078 -0.86461604  0.1931548   0.19938058]]
Iteration 800 of 1000: loss=0.00411 " + "l1=0" + "l2=0.00411 f=-0.0739 shape=(1, 9000, 1)
logits [[ 0.1746185  -0.8645721   0.19275895  0.2014701 ]]
Iteration 900 of 1000: loss=0.00381 " + "l1=2.91e-05" + "l2=0.00378 f=-0.0744 shape=(1, 9000, 1)
logits [[ 0.17795333 -0.8662673   0.19568858  0.19515905]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0385 " + "l1=0.0385" + "l2=0 f=-0.127 shape=(1, 9000, 1)
logits [[ 0.6618349 -1.1690673  0.5234983 -0.523834 ]]
Iteration 100 of 1000: loss=0.0151 " + "l1=0.00801" + "l2=0.00712 f=-0.0936 shape=(1, 9000, 1)
logits [[ 0.25785232 -0.9208769   0.26753512  0.02114923]]
Iteration 200 of 1000: loss=0.0086 " + "l1=0.000142" + "l2=0.00845 f=-0.076 shape=(1, 9000, 1)
logits [[ 0.16140893 -0.85950726  0.19929308  0.19492656]]
Iteration 300 of 1000: loss=0.00641 " + "l1=3.93e-05" + "l2=0.00637 f=-0.074 shape=(1, 9000, 1)
logits [[ 0.17002021 -0.8570629   0.19619927  0.19499096]]
Iteration 400 of 1000: loss=0.00531 " + "l1=0" + "l2=0.00531 f=-0.0735 shape=(1, 9000, 1)
logits [[ 0.17432328 -0.85912484  0.19508497  0.19565558]]
Iteration 500 of 1000: loss=0.00487 " + "l1=0.0001" + "l2=0.00477 f=-0.0737 shape=(1, 9000, 1)
logits [[ 0.1787912  -0.86257094  0.19593568  0.19285244]]
Iteration 600 of 1000: loss=0.00433 " + "l1=0" + "l2=0.00433 f=-0.0739 shape=(1, 9000, 1)
logits [[ 0.1772561  -0.86327523  0.1943133   0.19628623]]
Iteration 700 of 1000: loss=0.00427 " + "l1=0" + "l2=0.00427 f=-0.0738 shape=(1, 9000, 1)
logits [[ 0.17827281 -0.86341035  0.19463108  0.19537804]]
Iteration 800 of 1000: loss=0.00416 " + "l1=8.09e-05" + "l2=0.00408 f=-0.0739 shape=(1, 9000, 1)
logits [[ 0.17991048 -0.8646962   0.19586737  0.19337726]]
Iteration 900 of 1000: loss=0.00376 " + "l1=0" + "l2=0.00376 f=-0.0741 shape=(1, 9000, 1)
logits [[ 0.17757228 -0.8653535   0.19563502  0.19565871]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0252 " + "l1=0.0252" + "l2=0 f=-0.127 shape=(1, 9000, 1)
logits [[ 0.6618349 -1.1690673  0.5234983 -0.523834 ]]
Iteration 100 of 1000: loss=0.0132 " + "l1=0.00834" + "l2=0.00491 f=-0.1 shape=(1, 9000, 1)
logits [[ 0.31568345 -0.95609784  0.3164095  -0.07598034]]
Iteration 200 of 1000: loss=0.0102 " + "l1=0.00551" + "l2=0.0047 f=-0.092 shape=(1, 9000, 1)
logits [[ 0.26796305 -0.9152554   0.26927158  0.01010823]]
Iteration 300 of 1000: loss=0.00778 " + "l1=0.00186" + "l2=0.00592 f=-0.0805 shape=(1, 9000, 1)
logits [[ 0.19700621 -0.87198025  0.22038001  0.13275263]]
Iteration 400 of 1000: loss=0.00581 " + "l1=1.53e-05" + "l2=0.0058 f=-0.0752 shape=(1, 9000, 1)
logits [[ 0.16733226 -0.8568043   0.19469298  0.19397298]]
Iteration 500 of 1000: loss=0.00502 " + "l1=1.35e-05" + "l2=0.00501 f=-0.0752 shape=(1, 9000, 1)
logits [[ 0.17176755 -0.8593442   0.1936632   0.19302684]]
Iteration 600 of 1000: loss=0.00462 " + "l1=1.52e-05" + "l2=0.00461 f=-0.0752 shape=(1, 9000, 1)
logits [[ 0.17439175 -0.8612735   0.1934265   0.19271085]]
Iteration 700 of 1000: loss=0.00422 " + "l1=2.4e-05" + "l2=0.00419 f=-0.0752 shape=(1, 9000, 1)
logits [[ 0.17580566 -0.8622639   0.19340877  0.19227931]]
Iteration 800 of 1000: loss=0.00403 " + "l1=0" + "l2=0.00403 f=-0.075 shape=(1, 9000, 1)
logits [[ 0.1746937  -0.8619323   0.19255447  0.19474512]]
Iteration 900 of 1000: loss=0.00398 " + "l1=0" + "l2=0.00398 f=-0.0752 shape=(1, 9000, 1)
logits [[ 0.17274052 -0.8625231   0.1921299   0.19682458]]
--- 303.9229106903076 seconds ---
Adv result:3
Loading record A03004
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0845 " + "l1=0.0845" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 5.3706717 -3.0746796  3.295649  -7.514506 ]]
Iteration 100 of 1000: loss=0.0842 " + "l1=0.084" + "l2=0.000207 f=-0.479 shape=(1, 9000, 1)
logits [[ 5.339986  -3.0556278  3.28481   -7.485582 ]]
Iteration 200 of 1000: loss=0.0841 " + "l1=0.0839" + "l2=0.000186 f=-0.479 shape=(1, 9000, 1)
logits [[ 5.3365865 -3.0515265  3.282871  -7.48262  ]]
Iteration 300 of 1000: loss=0.084 " + "l1=0.0838" + "l2=0.00023 f=-0.478 shape=(1, 9000, 1)
logits [[ 5.330242  -3.0463352  3.2800999 -7.476969 ]]
Iteration 400 of 1000: loss=0.0839 " + "l1=0.0836" + "l2=0.00029 f=-0.478 shape=(1, 9000, 1)
logits [[ 5.3232293 -3.0409458  3.2771924 -7.470676 ]]
Iteration 500 of 1000: loss=0.0839 " + "l1=0.0835" + "l2=0.000361 f=-0.477 shape=(1, 9000, 1)
logits [[ 5.3159966 -3.0357416  3.2742934 -7.4642105]]
Iteration 600 of 1000: loss=0.0838 " + "l1=0.0834" + "l2=0.000441 f=-0.477 shape=(1, 9000, 1)
logits [[ 5.3086967 -3.0308259  3.271501  -7.457704 ]]
Iteration 700 of 1000: loss=0.0838 " + "l1=0.0833" + "l2=0.00054 f=-0.477 shape=(1, 9000, 1)
logits [[ 5.3011937 -3.0259278  3.2689455 -7.4511776]]
Iteration 800 of 1000: loss=0.0838 " + "l1=0.0832" + "l2=0.000653 f=-0.476 shape=(1, 9000, 1)
logits [[ 5.2939186 -3.021233   3.2666097 -7.4449472]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.845 " + "l1=0.845" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 5.3706717 -3.0746796  3.295649  -7.514506 ]]
Iteration 100 of 1000: loss=0.82 " + "l1=0.808" + "l2=0.0121 f=-0.467 shape=(1, 9000, 1)
logits [[ 5.1524253 -2.9276688  3.2153919 -7.307142 ]]
Iteration 200 of 1000: loss=0.808 " + "l1=0.792" + "l2=0.0164 f=-0.461 shape=(1, 9000, 1)
logits [[ 5.0561533 -2.8588548  3.1791778 -7.2202563]]
Iteration 300 of 1000: loss=0.796 " + "l1=0.776" + "l2=0.02 f=-0.456 shape=(1, 9000, 1)
logits [[ 4.9667935 -2.7929237  3.142791  -7.1400013]]
Iteration 400 of 1000: loss=0.785 " + "l1=0.761" + "l2=0.0241 f=-0.45 shape=(1, 9000, 1)
logits [[ 4.88002   -2.7319498  3.1068494 -7.0567393]]
Iteration 500 of 1000: loss=0.775 " + "l1=0.745" + "l2=0.0297 f=-0.445 shape=(1, 9000, 1)
logits [[ 4.788599  -2.65953    3.0533452 -6.9640384]]
Iteration 600 of 1000: loss=0.764 " + "l1=0.729" + "l2=0.0352 f=-0.441 shape=(1, 9000, 1)
logits [[ 4.6975174 -2.5918682  2.9956129 -6.86599  ]]
Iteration 700 of 1000: loss=0.754 " + "l1=0.715" + "l2=0.0397 f=-0.436 shape=(1, 9000, 1)
logits [[ 4.6136494 -2.5331664  2.9447393 -6.7687993]]
Iteration 800 of 1000: loss=0.744 " + "l1=0.699" + "l2=0.0453 f=-0.43 shape=(1, 9000, 1)
logits [[ 4.521252  -2.4658008  2.8849497 -6.659861 ]]
Iteration 900 of 1000: loss=0.735 " + "l1=0.686" + "l2=0.0487 f=-0.427 shape=(1, 9000, 1)
logits [[ 4.448154  -2.4146798  2.8442948 -6.5854783]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.45 " + "l1=8.45" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 5.3706717 -3.0746796  3.295649  -7.514506 ]]
Iteration 100 of 1000: loss=5.99 " + "l1=4.83" + "l2=1.16 f=-0.386 shape=(1, 9000, 1)
logits [[ 3.179582  -1.6473482  2.095301  -5.171406 ]]
Iteration 200 of 1000: loss=4.3 " + "l1=1.92" + "l2=2.38 f=-0.376 shape=(1, 9000, 1)
logits [[ 1.4861735  -0.43578717  1.0531067  -3.6087666 ]]
Iteration 300 of 1000: loss=3.04 " + "l1=0.368" + "l2=2.67 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.51678145  0.16150753  0.5292796  -2.666304  ]]
Iteration 400 of 1000: loss=2.49 " + "l1=0.0324" + "l2=2.45 f=-0.345 shape=(1, 9000, 1)
logits [[ 0.344855    0.31697068  0.34939304 -2.3909848 ]]
Iteration 500 of 1000: loss=2.21 " + "l1=0.00695" + "l2=2.2 f=-0.344 shape=(1, 9000, 1)
logits [[ 0.30820817  0.30887258  0.31582397 -2.307738  ]]
Iteration 600 of 1000: loss=2.08 " + "l1=0.0253" + "l2=2.06 f=-0.341 shape=(1, 9000, 1)
logits [[ 0.30085936  0.28445986  0.3097575  -2.2599287 ]]
Iteration 700 of 1000: loss=2 " + "l1=0.0246" + "l2=1.97 f=-0.342 shape=(1, 9000, 1)
logits [[ 0.29616022  0.27489445  0.29954213 -2.2372465 ]]
Iteration 800 of 1000: loss=1.93 " + "l1=0" + "l2=1.93 f=-0.345 shape=(1, 9000, 1)
logits [[ 0.27101228  0.28186616  0.27991134 -2.2127347 ]]
Iteration 900 of 1000: loss=1.88 " + "l1=0.00432" + "l2=1.87 f=-0.345 shape=(1, 9000, 1)
logits [[ 0.2677633   0.27140135  0.27572095 -2.193238  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.64 " + "l1=4.64" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 5.3706717 -3.0746796  3.295649  -7.514506 ]]
Iteration 100 of 1000: loss=3.83 " + "l1=3.39" + "l2=0.432 f=-0.425 shape=(1, 9000, 1)
logits [[ 4.0270796 -2.143733   2.5713768 -6.1539397]]
Iteration 200 of 1000: loss=3.35 " + "l1=2.75" + "l2=0.594 f=-0.392 shape=(1, 9000, 1)
logits [[ 3.3851922 -1.6233736  2.0947995 -5.4230957]]
Iteration 300 of 1000: loss=3 " + "l1=2.24" + "l2=0.765 f=-0.361 shape=(1, 9000, 1)
logits [[ 2.8597565 -1.2091373  1.7146752 -4.809531 ]]
Iteration 400 of 1000: loss=2.74 " + "l1=1.77" + "l2=0.967 f=-0.337 shape=(1, 9000, 1)
logits [[ 2.3253267 -0.8939367  1.4192019 -4.197283 ]]
Iteration 500 of 1000: loss=2.46 " + "l1=1.2" + "l2=1.26 f=-0.351 shape=(1, 9000, 1)
logits [[ 1.632096  -0.5498515  1.0854133 -3.5698612]]
Iteration 600 of 1000: loss=2.16 " + "l1=0.583" + "l2=1.57 f=-0.374 shape=(1, 9000, 1)
logits [[ 0.8809121  -0.17924066  0.76568204 -2.9629514 ]]
Iteration 700 of 1000: loss=1.92 " + "l1=0.321" + "l2=1.6 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.57075655 -0.01372984  0.56843364 -2.5849838 ]]
Iteration 800 of 1000: loss=1.82 " + "l1=0.232" + "l2=1.59 f=-0.346 shape=(1, 9000, 1)
logits [[ 0.4729232   0.0511796   0.46893266 -2.3771439 ]]
Iteration 900 of 1000: loss=1.74 " + "l1=0.168" + "l2=1.57 f=-0.333 shape=(1, 9000, 1)
logits [[ 0.40633032  0.10045508  0.40153158 -2.2390618 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=6.55 " + "l1=6.55" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 5.3706717 -3.0746796  3.295649  -7.514506 ]]
Iteration 100 of 1000: loss=4.99 " + "l1=4.26" + "l2=0.729 f=-0.409 shape=(1, 9000, 1)
logits [[ 3.602633  -1.8937492  2.3453765 -5.689971 ]]
Iteration 200 of 1000: loss=4.05 " + "l1=2.86" + "l2=1.19 f=-0.367 shape=(1, 9000, 1)
logits [[ 2.581449  -1.1110748  1.6159481 -4.5540214]]
Iteration 300 of 1000: loss=3.27 " + "l1=1.45" + "l2=1.82 f=-0.358 shape=(1, 9000, 1)
logits [[ 1.4632077  -0.40591368  1.02347    -3.5145926 ]]
Iteration 400 of 1000: loss=2.54 " + "l1=0.436" + "l2=2.11 f=-0.367 shape=(1, 9000, 1)
logits [[ 0.60186934  0.04528883  0.60819846 -2.7219527 ]]
Iteration 500 of 1000: loss=2.18 " + "l1=0.146" + "l2=2.03 f=-0.35 shape=(1, 9000, 1)
logits [[ 0.39853394  0.2111415   0.39923579 -2.408531  ]]
Iteration 600 of 1000: loss=2 " + "l1=0.0258" + "l2=1.97 f=-0.338 shape=(1, 9000, 1)
logits [[ 0.3019313   0.26866478  0.29437304 -2.2181387 ]]
Iteration 700 of 1000: loss=1.9 " + "l1=0.00839" + "l2=1.89 f=-0.331 shape=(1, 9000, 1)
logits [[ 0.27259672  0.26176625  0.26566538 -2.1248581 ]]
Iteration 800 of 1000: loss=1.84 " + "l1=0" + "l2=1.84 f=-0.327 shape=(1, 9000, 1)
logits [[ 0.23549351  0.25490075  0.2521012  -2.0523927 ]]
Iteration 900 of 1000: loss=1.79 " + "l1=0.00403" + "l2=1.78 f=-0.323 shape=(1, 9000, 1)
logits [[ 0.24718013  0.24319853  0.24840076 -2.0294526 ]]
--- 304.07289123535156 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0208 " + "l1=0.0208" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 5.3706717 -3.0746796  3.295649  -7.514506 ]]
Iteration 100 of 1000: loss=0.0206 " + "l1=0.0205" + "l2=0.000145 f=-0.482 shape=(1, 9000, 1)
logits [[ 5.3465204 -3.076695   3.2989845 -7.495221 ]]
Iteration 200 of 1000: loss=0.0206 " + "l1=0.0205" + "l2=0.000107 f=-0.482 shape=(1, 9000, 1)
logits [[ 5.345814  -3.0770128  3.299438  -7.49482  ]]
Iteration 300 of 1000: loss=0.0206 " + "l1=0.0204" + "l2=0.000132 f=-0.482 shape=(1, 9000, 1)
logits [[ 5.342421  -3.07714    3.3001153 -7.4925795]]
Iteration 400 of 1000: loss=0.0205 " + "l1=0.0204" + "l2=0.00017 f=-0.482 shape=(1, 9000, 1)
logits [[ 5.3385296 -3.0770736  3.3007731 -7.490048 ]]
Iteration 500 of 1000: loss=0.0205 " + "l1=0.0203" + "l2=0.000206 f=-0.482 shape=(1, 9000, 1)
logits [[ 5.3344517 -3.0768228  3.3014266 -7.487492 ]]
Iteration 600 of 1000: loss=0.0205 " + "l1=0.0203" + "l2=0.000259 f=-0.482 shape=(1, 9000, 1)
logits [[ 5.3302703 -3.0764213  3.3020594 -7.484984 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.208 " + "l1=0.208" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 5.3706717 -3.0746796  3.295649  -7.514506 ]]
Iteration 100 of 1000: loss=0.195 " + "l1=0.187" + "l2=0.00723 f=-0.489 shape=(1, 9000, 1)
logits [[ 5.202067  -3.100092   3.3283014 -7.3852296]]
Iteration 200 of 1000: loss=0.189 " + "l1=0.179" + "l2=0.00977 f=-0.49 shape=(1, 9000, 1)
logits [[ 5.135612  -3.101686   3.3419182 -7.3367944]]
Iteration 300 of 1000: loss=0.184 " + "l1=0.171" + "l2=0.0123 f=-0.493 shape=(1, 9000, 1)
logits [[ 5.070211  -3.1029959  3.3566427 -7.2945437]]
Iteration 400 of 1000: loss=0.179 " + "l1=0.165" + "l2=0.0138 f=-0.495 shape=(1, 9000, 1)
logits [[ 5.0145073 -3.0971792  3.3633263 -7.260911 ]]
Iteration 500 of 1000: loss=0.174 " + "l1=0.159" + "l2=0.0151 f=-0.497 shape=(1, 9000, 1)
logits [[ 4.960853  -3.088714   3.3675396 -7.2286353]]
Iteration 600 of 1000: loss=0.17 " + "l1=0.154" + "l2=0.0162 f=-0.499 shape=(1, 9000, 1)
logits [[ 4.9096794 -3.0793524  3.372205  -7.198947 ]]
Iteration 700 of 1000: loss=0.166 " + "l1=0.148" + "l2=0.0174 f=-0.501 shape=(1, 9000, 1)
logits [[ 4.860837  -3.0717087  3.3762693 -7.1705904]]
Iteration 800 of 1000: loss=0.162 " + "l1=0.143" + "l2=0.0186 f=-0.503 shape=(1, 9000, 1)
logits [[ 4.8125396 -3.0636473  3.3812928 -7.143263 ]]
Iteration 900 of 1000: loss=0.158 " + "l1=0.139" + "l2=0.019 f=-0.506 shape=(1, 9000, 1)
logits [[ 4.7729177 -3.05873    3.3838482 -7.120801 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.08 " + "l1=2.08" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 5.3706717 -3.0746796  3.295649  -7.514506 ]]
Iteration 100 of 1000: loss=0.831 " + "l1=0.201" + "l2=0.63 f=-0.531 shape=(1, 9000, 1)
logits [[ 3.7004259 -3.1792598  3.4993076 -6.1438036]]
Iteration 200 of 1000: loss=0.497 " + "l1=0" + "l2=0.497 f=-0.537 shape=(1, 9000, 1)
logits [[ 3.5159194 -3.1910462  3.5199373 -5.993257 ]]
Iteration 300 of 1000: loss=0.41 " + "l1=0" + "l2=0.41 f=-0.534 shape=(1, 9000, 1)
logits [[ 3.514853  -3.1726632  3.5216215 -6.0013533]]
Iteration 400 of 1000: loss=0.359 " + "l1=0" + "l2=0.359 f=-0.531 shape=(1, 9000, 1)
logits [[ 3.5244198 -3.1758232  3.5302536 -6.004759 ]]
Iteration 500 of 1000: loss=0.324 " + "l1=0.00354" + "l2=0.32 f=-0.529 shape=(1, 9000, 1)
logits [[ 3.52877   -3.1726587  3.5252337 -5.9979267]]
Iteration 600 of 1000: loss=0.299 " + "l1=0" + "l2=0.299 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.5080836 -3.1669536  3.5175695 -5.967758 ]]
Iteration 700 of 1000: loss=0.279 " + "l1=0" + "l2=0.279 f=-0.524 shape=(1, 9000, 1)
logits [[ 3.489641  -3.1547282  3.499613  -5.9318457]]
Iteration 800 of 1000: loss=0.265 " + "l1=0.00731" + "l2=0.257 f=-0.521 shape=(1, 9000, 1)
logits [[ 3.487555  -3.1416082  3.4802449 -5.9094343]]
Iteration 900 of 1000: loss=0.249 " + "l1=0.00502" + "l2=0.244 f=-0.518 shape=(1, 9000, 1)
logits [[ 3.4603856 -3.1222196  3.4553626 -5.865485 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.14 " + "l1=1.14" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 5.3706717 -3.0746796  3.295649  -7.514506 ]]
Iteration 100 of 1000: loss=0.753 " + "l1=0.552" + "l2=0.201 f=-0.5 shape=(1, 9000, 1)
logits [[ 4.454165  -3.1243563  3.4499774 -6.7784176]]
Iteration 200 of 1000: loss=0.558 " + "l1=0.257" + "l2=0.301 f=-0.521 shape=(1, 9000, 1)
logits [[ 3.9583921 -3.1271214  3.4915326 -6.405735 ]]
Iteration 300 of 1000: loss=0.43 " + "l1=0.0808" + "l2=0.35 f=-0.528 shape=(1, 9000, 1)
logits [[ 3.6761782 -3.1542673  3.5293198 -6.1614027]]
Iteration 400 of 1000: loss=0.344 " + "l1=0.00268" + "l2=0.342 f=-0.533 shape=(1, 9000, 1)
logits [[ 3.5432117 -3.1710625  3.5383475 -6.0421863]]
Iteration 500 of 1000: loss=0.299 " + "l1=0.00493" + "l2=0.294 f=-0.533 shape=(1, 9000, 1)
logits [[ 3.5349884 -3.168272   3.5260222 -6.023246 ]]
Iteration 600 of 1000: loss=0.268 " + "l1=0" + "l2=0.268 f=-0.531 shape=(1, 9000, 1)
logits [[ 3.5020423 -3.1554117  3.5113704 -5.9826107]]
Iteration 700 of 1000: loss=0.246 " + "l1=0.00265" + "l2=0.243 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.4912639 -3.1396587  3.4864454 -5.9456854]]
Iteration 800 of 1000: loss=0.229 " + "l1=0.000565" + "l2=0.228 f=-0.524 shape=(1, 9000, 1)
logits [[ 3.466975  -3.1247065  3.465948  -5.903052 ]]
Iteration 900 of 1000: loss=0.216 " + "l1=0.00189" + "l2=0.214 f=-0.52 shape=(1, 9000, 1)
logits [[ 3.44157   -3.104713   3.4381416 -5.854008 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.674 " + "l1=0.674" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 5.3706717 -3.0746796  3.295649  -7.514506 ]]
Iteration 100 of 1000: loss=0.537 " + "l1=0.463" + "l2=0.0737 f=-0.5 shape=(1, 9000, 1)
logits [[ 4.8226776 -3.125139   3.3985322 -7.094207 ]]
Iteration 200 of 1000: loss=0.473 " + "l1=0.37" + "l2=0.102 f=-0.499 shape=(1, 9000, 1)
logits [[ 4.5753975 -3.1066546  3.435938  -6.9012275]]
Iteration 300 of 1000: loss=0.42 " + "l1=0.298" + "l2=0.122 f=-0.504 shape=(1, 9000, 1)
logits [[ 4.376658  -3.0857174  3.4586084 -6.7662   ]]
Iteration 400 of 1000: loss=0.38 " + "l1=0.239" + "l2=0.14 f=-0.513 shape=(1, 9000, 1)
logits [[ 4.2044563 -3.083671   3.4679592 -6.6410584]]
Iteration 500 of 1000: loss=0.342 " + "l1=0.186" + "l2=0.157 f=-0.522 shape=(1, 9000, 1)
logits [[ 4.0395207 -3.0958662  3.4681854 -6.5005617]]
Iteration 600 of 1000: loss=0.308 " + "l1=0.144" + "l2=0.164 f=-0.526 shape=(1, 9000, 1)
logits [[ 3.9184818 -3.107873   3.4753082 -6.3915696]]
Iteration 700 of 1000: loss=0.275 " + "l1=0.1" + "l2=0.175 f=-0.526 shape=(1, 9000, 1)
logits [[ 3.7934535 -3.1200812  3.4852948 -6.264263 ]]
Iteration 800 of 1000: loss=0.241 " + "l1=0.0547" + "l2=0.186 f=-0.526 shape=(1, 9000, 1)
logits [[ 3.6583781 -3.1249676  3.4900796 -6.127415 ]]
Iteration 900 of 1000: loss=0.215 " + "l1=0.0236" + "l2=0.191 f=-0.524 shape=(1, 9000, 1)
logits [[ 3.5535126 -3.127835   3.4808426 -6.001306 ]]
--- 298.23959851264954 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.129 " + "l1=0.129" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 5.3706717 -3.0746796  3.295649  -7.514506 ]]
Iteration 100 of 1000: loss=0.128 " + "l1=0.128" + "l2=0.000398 f=-0.479 shape=(1, 9000, 1)
logits [[ 5.325167  -3.0674725  3.2832878 -7.4577637]]
Iteration 200 of 1000: loss=0.128 " + "l1=0.128" + "l2=0.0004 f=-0.479 shape=(1, 9000, 1)
logits [[ 5.316697  -3.066454   3.2809947 -7.447266 ]]
Iteration 300 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.000487 f=-0.479 shape=(1, 9000, 1)
logits [[ 5.3056765 -3.0644648  3.2775161 -7.43337  ]]
Iteration 400 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.000554 f=-0.478 shape=(1, 9000, 1)
logits [[ 5.2945933 -3.061947   3.2736597 -7.4194064]]
Iteration 500 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.00069 f=-0.478 shape=(1, 9000, 1)
logits [[ 5.283352  -3.0591261  3.2696517 -7.4052534]]
Iteration 600 of 1000: loss=0.127 " + "l1=0.127" + "l2=0.000838 f=-0.477 shape=(1, 9000, 1)
logits [[ 5.272379  -3.0561473  3.2655833 -7.391306 ]]
Iteration 700 of 1000: loss=0.127 " + "l1=0.126" + "l2=0.00101 f=-0.477 shape=(1, 9000, 1)
logits [[ 5.2615547 -3.0531654  3.2614796 -7.3775215]]
Iteration 800 of 1000: loss=0.127 " + "l1=0.126" + "l2=0.00116 f=-0.476 shape=(1, 9000, 1)
logits [[ 5.2505093 -3.0501888  3.257296  -7.363543 ]]
Iteration 900 of 1000: loss=0.127 " + "l1=0.126" + "l2=0.00132 f=-0.476 shape=(1, 9000, 1)
logits [[ 5.2395372 -3.0473955  3.2532613 -7.3497925]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.29 " + "l1=1.29" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 5.3706717 -3.0746796  3.295649  -7.514506 ]]
Iteration 100 of 1000: loss=1.23 " + "l1=1.2" + "l2=0.0302 f=-0.471 shape=(1, 9000, 1)
logits [[ 4.971566  -3.028274   3.1943061 -7.020163 ]]
Iteration 200 of 1000: loss=1.2 " + "l1=1.16" + "l2=0.0421 f=-0.465 shape=(1, 9000, 1)
logits [[ 4.786807  -2.9996698  3.1357775 -6.782456 ]]
Iteration 300 of 1000: loss=1.17 " + "l1=1.12" + "l2=0.0527 f=-0.457 shape=(1, 9000, 1)
logits [[ 4.630976  -2.9670057  3.0722456 -6.5629992]]
Iteration 400 of 1000: loss=1.15 " + "l1=1.09" + "l2=0.061 f=-0.449 shape=(1, 9000, 1)
logits [[ 4.4950514 -2.9332721  3.0102406 -6.3687844]]
Iteration 500 of 1000: loss=1.12 " + "l1=1.05" + "l2=0.071 f=-0.435 shape=(1, 9000, 1)
logits [[ 4.3442087 -2.874933   2.9450533 -6.1525106]]
Iteration 600 of 1000: loss=1.1 " + "l1=1.02" + "l2=0.0786 f=-0.429 shape=(1, 9000, 1)
logits [[ 4.212247  -2.8548286  2.8988097 -5.9738336]]
Iteration 700 of 1000: loss=1.08 " + "l1=0.99" + "l2=0.0865 f=-0.428 shape=(1, 9000, 1)
logits [[ 4.0899196 -2.842539   2.849642  -5.808401 ]]
Iteration 800 of 1000: loss=1.06 " + "l1=0.962" + "l2=0.0947 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.9730096 -2.8251128  2.8016024 -5.650123 ]]
Iteration 900 of 1000: loss=1.04 " + "l1=0.934" + "l2=0.104 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.8554513 -2.8091218  2.7518756 -5.4876313]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.9 " + "l1=12.9" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 5.3706717 -3.0746796  3.295649  -7.514506 ]]
Iteration 100 of 1000: loss=7.16 " + "l1=4.47" + "l2=2.69 f=-0.258 shape=(1, 9000, 1)
logits [[ 2.0406923 -2.684003   2.0425062 -2.4297485]]
Iteration 200 of 1000: loss=5.59 " + "l1=2.74" + "l2=2.86 f=-0.17 shape=(1, 9000, 1)
logits [[ 1.4281384 -2.2300007  1.429481  -1.3057816]]
Iteration 300 of 1000: loss=4.69 " + "l1=1.62" + "l2=3.07 f=-0.114 shape=(1, 9000, 1)
logits [[ 0.9842696  -1.8187449   0.9974105  -0.62063247]]
Iteration 400 of 1000: loss=3.93 " + "l1=0.835" + "l2=3.09 f=-0.114 shape=(1, 9000, 1)
logits [[ 0.6374744  -1.5458603   0.643939   -0.19078517]]
Iteration 500 of 1000: loss=3.35 " + "l1=0.332" + "l2=3.02 f=-0.105 shape=(1, 9000, 1)
logits [[ 0.41715577 -1.3522062   0.42357725  0.09128005]]
Iteration 600 of 1000: loss=2.8 " + "l1=0.0297" + "l2=2.77 f=-0.0956 shape=(1, 9000, 1)
logits [[ 0.27057227 -1.1850817   0.28088865  0.2511664 ]]
Iteration 700 of 1000: loss=2.43 " + "l1=0.00169" + "l2=2.43 f=-0.102 shape=(1, 9000, 1)
logits [[ 0.2405059  -1.1455649   0.24841042  0.24672064]]
Iteration 800 of 1000: loss=2.2 " + "l1=0.00874" + "l2=2.2 f=-0.103 shape=(1, 9000, 1)
logits [[ 0.24521491 -1.1405615   0.24568778  0.23694846]]
Iteration 900 of 1000: loss=2.07 " + "l1=0.014" + "l2=2.05 f=-0.107 shape=(1, 9000, 1)
logits [[ 0.24185792 -1.1602676   0.25265667  0.23869967]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.09 " + "l1=7.09" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 5.3706717 -3.0746796  3.295649  -7.514506 ]]
Iteration 100 of 1000: loss=5.1 " + "l1=3.86" + "l2=1.24 f=-0.374 shape=(1, 9000, 1)
logits [[ 2.9241886 -2.9379833  2.6022277 -4.086296 ]]
Iteration 200 of 1000: loss=4.15 " + "l1=2.74" + "l2=1.41 f=-0.293 shape=(1, 9000, 1)
logits [[ 2.2184083 -2.8570292  2.2251964 -2.7598515]]
Iteration 300 of 1000: loss=3.71 " + "l1=2.22" + "l2=1.49 f=-0.214 shape=(1, 9000, 1)
logits [[ 1.9033104 -2.5520635  1.9179666 -2.126693 ]]
Iteration 400 of 1000: loss=3.41 " + "l1=1.89" + "l2=1.51 f=-0.175 shape=(1, 9000, 1)
logits [[ 1.6999578 -2.3565128  1.7015893 -1.7432448]]
Iteration 500 of 1000: loss=3.14 " + "l1=1.59" + "l2=1.55 f=-0.15 shape=(1, 9000, 1)
logits [[ 1.4879762 -2.1665826  1.4813771 -1.4044404]]
Iteration 600 of 1000: loss=2.85 " + "l1=1.2" + "l2=1.65 f=-0.126 shape=(1, 9000, 1)
logits [[ 1.209245   -1.9460235   1.2074805  -0.97301656]]
Iteration 700 of 1000: loss=2.64 " + "l1=0.928" + "l2=1.71 f=-0.116 shape=(1, 9000, 1)
logits [[ 1.0024958 -1.8013018  1.0100454 -0.6766711]]
Iteration 800 of 1000: loss=2.43 " + "l1=0.615" + "l2=1.82 f=-0.133 shape=(1, 9000, 1)
logits [[ 0.73154485 -1.6088586   0.72998935 -0.38587275]]
Iteration 900 of 1000: loss=2.29 " + "l1=0.446" + "l2=1.84 f=-0.132 shape=(1, 9000, 1)
logits [[ 0.5840957  -1.4949131   0.5975572  -0.21334687]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=9.99 " + "l1=9.99" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 5.3706717 -3.0746796  3.295649  -7.514506 ]]
Iteration 100 of 1000: loss=6.15 " + "l1=4.08" + "l2=2.07 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.3006313 -2.853021   2.304473  -2.9566057]]
Iteration 200 of 1000: loss=4.95 " + "l1=2.89" + "l2=2.07 f=-0.212 shape=(1, 9000, 1)
logits [[ 1.7817098 -2.4776702  1.7876554 -1.9377229]]
Iteration 300 of 1000: loss=4.29 " + "l1=2.13" + "l2=2.16 f=-0.156 shape=(1, 9000, 1)
logits [[ 1.4428507 -2.2114706  1.4436964 -1.2998855]]
Iteration 400 of 1000: loss=3.73 " + "l1=1.4" + "l2=2.33 f=-0.124 shape=(1, 9000, 1)
logits [[ 1.0535356 -1.8477728  1.0527996 -0.7553932]]
Iteration 500 of 1000: loss=3.17 " + "l1=0.788" + "l2=2.38 f=-0.122 shape=(1, 9000, 1)
logits [[ 0.6809724  -1.5338031   0.6902324  -0.32714626]]
Iteration 600 of 1000: loss=2.66 " + "l1=0.331" + "l2=2.33 f=-0.117 shape=(1, 9000, 1)
logits [[ 0.41555902 -1.2953888   0.4189961  -0.00809609]]
Iteration 700 of 1000: loss=2.34 " + "l1=0.0889" + "l2=2.25 f=-0.116 shape=(1, 9000, 1)
logits [[ 0.26598907 -1.1465384   0.26542413  0.15130916]]
Iteration 800 of 1000: loss=2.15 " + "l1=0.0224" + "l2=2.13 f=-0.119 shape=(1, 9000, 1)
logits [[ 0.1962282  -1.0962567   0.22610469  0.19719481]]
Iteration 900 of 1000: loss=2 " + "l1=0.00396" + "l2=2 f=-0.122 shape=(1, 9000, 1)
logits [[ 0.19356096 -1.0783147   0.20032388  0.19521928]]
--- 319.2626917362213 seconds ---
Adv result:3
Loading record A03012
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0511 " + "l1=0.0511" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.8788612 -2.234624   1.5128345 -4.225782 ]]
Iteration 100 of 1000: loss=0.0506 " + "l1=0.0503" + "l2=0.000327 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.828495  -2.201263   1.4865826 -4.1729217]]
Iteration 200 of 1000: loss=0.0505 " + "l1=0.0501" + "l2=0.000328 f=-0.514 shape=(1, 9000, 1)
logits [[ 2.8212137 -2.1920445  1.4806508 -4.165618 ]]
Iteration 300 of 1000: loss=0.0503 " + "l1=0.0499" + "l2=0.000398 f=-0.513 shape=(1, 9000, 1)
logits [[ 2.8107631 -2.1809223  1.4734204 -4.1551075]]
Iteration 400 of 1000: loss=0.0502 " + "l1=0.0497" + "l2=0.000493 f=-0.512 shape=(1, 9000, 1)
logits [[ 2.799419  -2.1696196  1.46611   -4.143527 ]]
Iteration 500 of 1000: loss=0.0501 " + "l1=0.0495" + "l2=0.00064 f=-0.511 shape=(1, 9000, 1)
logits [[ 2.7880192 -2.158886   1.4592942 -4.1317115]]
Iteration 600 of 1000: loss=0.05 " + "l1=0.0493" + "l2=0.000724 f=-0.51 shape=(1, 9000, 1)
logits [[ 2.7771103 -2.1490672  1.4531181 -4.1203218]]
Iteration 700 of 1000: loss=0.0499 " + "l1=0.0491" + "l2=0.000814 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.7667701 -2.140389   1.4477111 -4.1096764]]
Iteration 800 of 1000: loss=0.0499 " + "l1=0.0489" + "l2=0.00101 f=-0.508 shape=(1, 9000, 1)
logits [[ 2.7566748 -2.1322246  1.442712  -4.0991464]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.511 " + "l1=0.511" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.8788612 -2.234624   1.5128345 -4.225782 ]]
Iteration 100 of 1000: loss=0.467 " + "l1=0.445" + "l2=0.0227 f=-0.493 shape=(1, 9000, 1)
logits [[ 2.4932761 -1.9524317  1.2943842 -3.8057773]]
Iteration 200 of 1000: loss=0.448 " + "l1=0.419" + "l2=0.0287 f=-0.482 shape=(1, 9000, 1)
logits [[ 2.354666  -1.8395634  1.2073156 -3.648856 ]]
Iteration 300 of 1000: loss=0.432 " + "l1=0.396" + "l2=0.0358 f=-0.471 shape=(1, 9000, 1)
logits [[ 2.2314198 -1.728675   1.1213745 -3.507654 ]]
Iteration 400 of 1000: loss=0.418 " + "l1=0.375" + "l2=0.0422 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.1146495 -1.6393075  1.0462283 -3.3727126]]
Iteration 500 of 1000: loss=0.405 " + "l1=0.356" + "l2=0.0487 f=-0.456 shape=(1, 9000, 1)
logits [[ 1.9979482 -1.5637904  0.9844519 -3.2439477]]
Iteration 600 of 1000: loss=0.392 " + "l1=0.336" + "l2=0.0561 f=-0.45 shape=(1, 9000, 1)
logits [[ 1.8758804  -1.4793084   0.91807014 -3.1166348 ]]
Iteration 700 of 1000: loss=0.38 " + "l1=0.319" + "l2=0.0614 f=-0.448 shape=(1, 9000, 1)
logits [[ 1.7575123 -1.4314982  0.8738836 -2.9899764]]
Iteration 800 of 1000: loss=0.37 " + "l1=0.303" + "l2=0.0666 f=-0.442 shape=(1, 9000, 1)
logits [[ 1.6458887 -1.3863791  0.8379649 -2.8647227]]
Iteration 900 of 1000: loss=0.36 " + "l1=0.29" + "l2=0.0705 f=-0.436 shape=(1, 9000, 1)
logits [[ 1.5479449  -1.3471828   0.81229544 -2.7569375 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.11 " + "l1=5.11" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.8788612 -2.234624   1.5128345 -4.225782 ]]
Iteration 100 of 1000: loss=1.83 " + "l1=0.54" + "l2=1.29 f=-0.329 shape=(1, 9000, 1)
logits [[ 6.899927e-04 -5.389399e-01 -4.763298e-03 -7.716388e-01]]
Iteration 200 of 1000: loss=1.19 " + "l1=0.0119" + "l2=1.17 f=-0.314 shape=(1, 9000, 1)
logits [[-0.23679213 -0.24867769 -0.23788238 -0.53081495]]
Iteration 300 of 1000: loss=0.985 " + "l1=0" + "l2=0.985 f=-0.319 shape=(1, 9000, 1)
logits [[-0.2445596  -0.23187512 -0.24234056 -0.5578326 ]]
Iteration 400 of 1000: loss=0.884 " + "l1=0" + "l2=0.884 f=-0.323 shape=(1, 9000, 1)
logits [[-0.25794622 -0.22376888 -0.23900425 -0.57289153]]
Iteration 500 of 1000: loss=0.788 " + "l1=0.00345" + "l2=0.785 f=-0.325 shape=(1, 9000, 1)
logits [[-0.23287007 -0.234979   -0.23152651 -0.6024227 ]]
Iteration 600 of 1000: loss=0.709 " + "l1=0.00942" + "l2=0.699 f=-0.326 shape=(1, 9000, 1)
logits [[-0.23685957 -0.240997   -0.2315784  -0.5934738 ]]
Iteration 700 of 1000: loss=0.648 " + "l1=0" + "l2=0.648 f=-0.323 shape=(1, 9000, 1)
logits [[-0.24817918 -0.22003213 -0.24047303 -0.584284  ]]
Iteration 800 of 1000: loss=0.595 " + "l1=0" + "l2=0.595 f=-0.321 shape=(1, 9000, 1)
logits [[-0.23204648 -0.22586216 -0.22874309 -0.59576505]]
Iteration 900 of 1000: loss=0.569 " + "l1=0.00336" + "l2=0.565 f=-0.318 shape=(1, 9000, 1)
logits [[-0.2198959  -0.22325952 -0.22495916 -0.60491604]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.81 " + "l1=2.81" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.8788612 -2.234624   1.5128345 -4.225782 ]]
Iteration 100 of 1000: loss=1.61 " + "l1=0.965" + "l2=0.646 f=-0.389 shape=(1, 9000, 1)
logits [[ 0.73731434 -1.0173824   0.45687774 -1.7338052 ]]
Iteration 200 of 1000: loss=1.17 " + "l1=0.44" + "l2=0.728 f=-0.348 shape=(1, 9000, 1)
logits [[ 0.15992244 -0.6397253   0.1466755  -1.0576954 ]]
Iteration 300 of 1000: loss=0.963 " + "l1=0.269" + "l2=0.694 f=-0.332 shape=(1, 9000, 1)
logits [[ 0.00614219 -0.4835118  -0.0085101  -0.84267294]]
Iteration 400 of 1000: loss=0.788 " + "l1=0.119" + "l2=0.669 f=-0.324 shape=(1, 9000, 1)
logits [[-0.11907832 -0.33551294 -0.12384199 -0.7194013 ]]
Iteration 500 of 1000: loss=0.672 " + "l1=0.038" + "l2=0.634 f=-0.326 shape=(1, 9000, 1)
logits [[-0.19183081 -0.25670996 -0.18766692 -0.666748  ]]
Iteration 600 of 1000: loss=0.595 " + "l1=0.00223" + "l2=0.593 f=-0.323 shape=(1, 9000, 1)
logits [[-0.21964036 -0.21145724 -0.20740658 -0.6543744 ]]
Iteration 700 of 1000: loss=0.537 " + "l1=0.00298" + "l2=0.534 f=-0.323 shape=(1, 9000, 1)
logits [[-0.18689561 -0.1923166  -0.18945651 -0.72360903]]
Iteration 800 of 1000: loss=0.497 " + "l1=0.00286" + "l2=0.495 f=-0.327 shape=(1, 9000, 1)
logits [[-0.18457004 -0.18976386 -0.18604083 -0.74660414]]
Iteration 900 of 1000: loss=0.481 " + "l1=0" + "l2=0.481 f=-0.325 shape=(1, 9000, 1)
logits [[-0.2033455  -0.18079896 -0.19405666 -0.71992135]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.66 " + "l1=1.66" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.8788612 -2.234624   1.5128345 -4.225782 ]]
Iteration 100 of 1000: loss=1.22 " + "l1=0.981" + "l2=0.242 f=-0.453 shape=(1, 9000, 1)
logits [[ 1.579683  -1.4379313  0.8092923 -2.7621922]]
Iteration 200 of 1000: loss=1.04 " + "l1=0.736" + "l2=0.305 f=-0.423 shape=(1, 9000, 1)
logits [[ 1.0965014 -1.1685956  0.6151792 -2.2348368]]
Iteration 300 of 1000: loss=0.911 " + "l1=0.551" + "l2=0.36 f=-0.391 shape=(1, 9000, 1)
logits [[ 0.6925326  -1.002558    0.49537435 -1.749351  ]]
Iteration 400 of 1000: loss=0.795 " + "l1=0.409" + "l2=0.386 f=-0.373 shape=(1, 9000, 1)
logits [[ 0.37941733 -0.8803944   0.3771245  -1.3665285 ]]
Iteration 500 of 1000: loss=0.721 " + "l1=0.352" + "l2=0.369 f=-0.356 shape=(1, 9000, 1)
logits [[ 0.29302964 -0.78935003  0.29159614 -1.2177356 ]]
Iteration 600 of 1000: loss=0.677 " + "l1=0.317" + "l2=0.359 f=-0.345 shape=(1, 9000, 1)
logits [[ 0.23924896 -0.73627096  0.22936024 -1.1109933 ]]
Iteration 700 of 1000: loss=0.642 " + "l1=0.277" + "l2=0.366 f=-0.337 shape=(1, 9000, 1)
logits [[ 0.16096517 -0.6860889   0.16509406 -0.9892772 ]]
Iteration 800 of 1000: loss=0.616 " + "l1=0.251" + "l2=0.365 f=-0.331 shape=(1, 9000, 1)
logits [[ 0.11777239 -0.6457189   0.12575662 -0.9218859 ]]
Iteration 900 of 1000: loss=0.592 " + "l1=0.233" + "l2=0.359 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.0994769  -0.6137741   0.10291188 -0.8918213 ]]
--- 309.22131538391113 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0137 " + "l1=0.0137" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.8788612 -2.234624   1.5128345 -4.225782 ]]
Iteration 100 of 1000: loss=0.0135 " + "l1=0.0133" + "l2=0.000198 f=-0.519 shape=(1, 9000, 1)
logits [[ 2.8405256 -2.2459207  1.5147836 -4.186858 ]]
Iteration 200 of 1000: loss=0.0134 " + "l1=0.0132" + "l2=0.000162 f=-0.52 shape=(1, 9000, 1)
logits [[ 2.8381345 -2.2475193  1.5154526 -4.184818 ]]
Iteration 300 of 1000: loss=0.0134 " + "l1=0.0132" + "l2=0.000195 f=-0.52 shape=(1, 9000, 1)
logits [[ 2.8327594 -2.2498994  1.5165468 -4.179602 ]]
Iteration 400 of 1000: loss=0.0133 " + "l1=0.0131" + "l2=0.000246 f=-0.52 shape=(1, 9000, 1)
logits [[ 2.8269117 -2.2519984  1.5175009 -4.1739883]]
Iteration 500 of 1000: loss=0.0134 " + "l1=0.013" + "l2=0.00033 f=-0.521 shape=(1, 9000, 1)
logits [[ 2.8210058 -2.2537763  1.5183488 -4.1683354]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.137 " + "l1=0.137" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.8788612 -2.234624   1.5128345 -4.225782 ]]
Iteration 100 of 1000: loss=0.117 " + "l1=0.107" + "l2=0.0107 f=-0.53 shape=(1, 9000, 1)
logits [[ 2.613252  -2.3356097  1.5454917 -3.9417663]]
Iteration 200 of 1000: loss=0.109 " + "l1=0.0929" + "l2=0.0162 f=-0.535 shape=(1, 9000, 1)
logits [[ 2.5016716 -2.3953445  1.5727044 -3.8172398]]
Iteration 300 of 1000: loss=0.101 " + "l1=0.0799" + "l2=0.0216 f=-0.54 shape=(1, 9000, 1)
logits [[ 2.4018168 -2.448602   1.6027172 -3.7146032]]
Iteration 400 of 1000: loss=0.0947 " + "l1=0.0704" + "l2=0.0244 f=-0.541 shape=(1, 9000, 1)
logits [[ 2.3273482 -2.4770253  1.6236312 -3.6391528]]
Iteration 500 of 1000: loss=0.0889 " + "l1=0.063" + "l2=0.026 f=-0.543 shape=(1, 9000, 1)
logits [[ 2.2679691 -2.4984996  1.638332  -3.580221 ]]
Iteration 600 of 1000: loss=0.0838 " + "l1=0.0558" + "l2=0.0281 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.206241  -2.5194256  1.6486335 -3.5175862]]
Iteration 700 of 1000: loss=0.079 " + "l1=0.049" + "l2=0.03 f=-0.548 shape=(1, 9000, 1)
logits [[ 2.1417825 -2.5336475  1.6518711 -3.45107  ]]
Iteration 800 of 1000: loss=0.0743 " + "l1=0.0426" + "l2=0.0318 f=-0.549 shape=(1, 9000, 1)
logits [[ 2.0765657 -2.5405629  1.6509408 -3.3844063]]
Iteration 900 of 1000: loss=0.0698 " + "l1=0.0369" + "l2=0.033 f=-0.55 shape=(1, 9000, 1)
logits [[ 2.0158963 -2.5389614  1.6473546 -3.3261511]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.37 " + "l1=1.37" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.8788612 -2.234624   1.5128345 -4.225782 ]]
Iteration 100 of 1000: loss=0.198 " + "l1=0" + "l2=0.198 f=-0.56 shape=(1, 9000, 1)
logits [[ 1.7273755 -2.7697778  1.7361506 -2.9346235]]
Iteration 200 of 1000: loss=0.147 " + "l1=0" + "l2=0.147 f=-0.568 shape=(1, 9000, 1)
logits [[ 1.7535495 -2.8196871  1.7660393 -2.9701538]]
Iteration 300 of 1000: loss=0.123 " + "l1=0" + "l2=0.123 f=-0.568 shape=(1, 9000, 1)
logits [[ 1.7580009 -2.815301   1.7695179 -2.9832509]]
Iteration 400 of 1000: loss=0.111 " + "l1=0" + "l2=0.111 f=-0.567 shape=(1, 9000, 1)
logits [[ 1.7395046 -2.8029962  1.7669691 -2.970174 ]]
Iteration 500 of 1000: loss=0.0953 " + "l1=0.00203" + "l2=0.0933 f=-0.565 shape=(1, 9000, 1)
logits [[ 1.7535588 -2.7646031  1.7515295 -2.9995751]]
Iteration 600 of 1000: loss=0.0858 " + "l1=0" + "l2=0.0858 f=-0.566 shape=(1, 9000, 1)
logits [[ 1.7388005 -2.7471054  1.7463233 -3.0005674]]
Iteration 700 of 1000: loss=0.0787 " + "l1=0" + "l2=0.0787 f=-0.565 shape=(1, 9000, 1)
logits [[ 1.7298678 -2.727515   1.7425785 -3.005074 ]]
Iteration 800 of 1000: loss=0.0722 " + "l1=0" + "l2=0.0722 f=-0.564 shape=(1, 9000, 1)
logits [[ 1.7238326 -2.7046185  1.7329047 -3.007006 ]]
Iteration 900 of 1000: loss=0.0662 " + "l1=0" + "l2=0.0662 f=-0.562 shape=(1, 9000, 1)
logits [[ 1.7167432 -2.6840568  1.7225521 -3.0034962]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.751 " + "l1=0.751" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.8788612 -2.234624   1.5128345 -4.225782 ]]
Iteration 100 of 1000: loss=0.193 " + "l1=0" + "l2=0.193 f=-0.565 shape=(1, 9000, 1)
logits [[ 1.7495278 -2.7881021  1.752108  -2.9737647]]
Iteration 200 of 1000: loss=0.138 " + "l1=0" + "l2=0.138 f=-0.57 shape=(1, 9000, 1)
logits [[ 1.77447   -2.8347173  1.7804936 -3.0019486]]
Iteration 300 of 1000: loss=0.112 " + "l1=0.000319" + "l2=0.112 f=-0.57 shape=(1, 9000, 1)
logits [[ 1.7808135 -2.8217492  1.7802341 -3.0185454]]
Iteration 400 of 1000: loss=0.0968 " + "l1=0" + "l2=0.0968 f=-0.569 shape=(1, 9000, 1)
logits [[ 1.7559952 -2.786137   1.7640334 -3.0094066]]
Iteration 500 of 1000: loss=0.0826 " + "l1=0" + "l2=0.0826 f=-0.569 shape=(1, 9000, 1)
logits [[ 1.7479322 -2.7496166  1.747958  -3.0227406]]
Iteration 600 of 1000: loss=0.0756 " + "l1=0" + "l2=0.0756 f=-0.568 shape=(1, 9000, 1)
logits [[ 1.7376161 -2.7296722  1.7407498 -3.021503 ]]
Iteration 700 of 1000: loss=0.0696 " + "l1=0" + "l2=0.0696 f=-0.567 shape=(1, 9000, 1)
logits [[ 1.7296304 -2.708656   1.7321008 -3.0190961]]
Iteration 800 of 1000: loss=0.0652 " + "l1=0" + "l2=0.0652 f=-0.564 shape=(1, 9000, 1)
logits [[ 1.7130876 -2.6887612  1.7230833 -3.0045457]]
Iteration 900 of 1000: loss=0.0612 " + "l1=0" + "l2=0.0612 f=-0.562 shape=(1, 9000, 1)
logits [[ 1.6965824 -2.6699674  1.7148746 -2.989853 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.444 " + "l1=0.444" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.8788612 -2.234624   1.5128345 -4.225782 ]]
Iteration 100 of 1000: loss=0.223 " + "l1=0.104" + "l2=0.12 f=-0.55 shape=(1, 9000, 1)
logits [[ 1.9774618 -2.5998728  1.6585172 -3.2341702]]
Iteration 200 of 1000: loss=0.14 " + "l1=0.00241" + "l2=0.138 f=-0.57 shape=(1, 9000, 1)
logits [[ 1.7847651 -2.820676   1.7773417 -3.0225077]]
Iteration 300 of 1000: loss=0.108 " + "l1=8.87e-05" + "l2=0.108 f=-0.571 shape=(1, 9000, 1)
logits [[ 1.7752349 -2.806861   1.774962  -3.026067 ]]
Iteration 400 of 1000: loss=0.0905 " + "l1=0" + "l2=0.0905 f=-0.572 shape=(1, 9000, 1)
logits [[ 1.7519456 -2.773513   1.7607279 -3.0272555]]
Iteration 500 of 1000: loss=0.0792 " + "l1=0" + "l2=0.0792 f=-0.57 shape=(1, 9000, 1)
logits [[ 1.7459377 -2.747068   1.7498884 -3.0299945]]
Iteration 600 of 1000: loss=0.0717 " + "l1=0.00123" + "l2=0.0705 f=-0.568 shape=(1, 9000, 1)
logits [[ 1.7422327 -2.7240639  1.7384394 -3.030554 ]]
Iteration 700 of 1000: loss=0.0652 " + "l1=0.000735" + "l2=0.0645 f=-0.565 shape=(1, 9000, 1)
logits [[ 1.7296748 -2.7010338  1.7274128 -3.017578 ]]
Iteration 800 of 1000: loss=0.0603 " + "l1=0" + "l2=0.0603 f=-0.563 shape=(1, 9000, 1)
logits [[ 1.7080021 -2.6768074  1.7168623 -2.9996681]]
Iteration 900 of 1000: loss=0.0552 " + "l1=0" + "l2=0.0552 f=-0.56 shape=(1, 9000, 1)
logits [[ 1.7015079 -2.6499336  1.7062148 -2.9959176]]
--- 292.42573499679565 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.071 " + "l1=0.071" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.8788612 -2.234624   1.5128345 -4.225782 ]]
Iteration 100 of 1000: loss=0.0699 " + "l1=0.0691" + "l2=0.00077 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.7935576 -2.2252219  1.4881424 -4.1158595]]
Iteration 200 of 1000: loss=0.0695 " + "l1=0.0687" + "l2=0.000834 f=-0.514 shape=(1, 9000, 1)
logits [[ 2.7765055 -2.2230217  1.4837594 -4.0945253]]
Iteration 300 of 1000: loss=0.0693 " + "l1=0.0683" + "l2=0.000994 f=-0.513 shape=(1, 9000, 1)
logits [[ 2.7570496 -2.2193394  1.4782977 -4.069348 ]]
Iteration 400 of 1000: loss=0.069 " + "l1=0.0678" + "l2=0.00118 f=-0.512 shape=(1, 9000, 1)
logits [[ 2.7378657 -2.2150266  1.4728262 -4.044267 ]]
Iteration 500 of 1000: loss=0.0687 " + "l1=0.0674" + "l2=0.00136 f=-0.511 shape=(1, 9000, 1)
logits [[ 2.7188928 -2.2099452  1.4670779 -4.0195537]]
Iteration 600 of 1000: loss=0.0686 " + "l1=0.067" + "l2=0.00158 f=-0.51 shape=(1, 9000, 1)
logits [[ 2.7017846 -2.205088   1.461576  -3.996979 ]]
Iteration 700 of 1000: loss=0.0683 " + "l1=0.0666" + "l2=0.00172 f=-0.508 shape=(1, 9000, 1)
logits [[ 2.6856594 -2.2004297  1.4566733 -3.9757667]]
Iteration 800 of 1000: loss=0.0682 " + "l1=0.0663" + "l2=0.00191 f=-0.507 shape=(1, 9000, 1)
logits [[ 2.6701088 -2.1956058  1.4517962 -3.9555576]]
Iteration 900 of 1000: loss=0.0681 " + "l1=0.0659" + "l2=0.00216 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.6548476 -2.1908066  1.4472047 -3.93575  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.71 " + "l1=0.71" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.8788612 -2.234624   1.5128345 -4.225782 ]]
Iteration 100 of 1000: loss=0.591 " + "l1=0.519" + "l2=0.0722 f=-0.487 shape=(1, 9000, 1)
logits [[ 2.0656066 -2.1933     1.303354  -3.123294 ]]
Iteration 200 of 1000: loss=0.546 " + "l1=0.449" + "l2=0.0967 f=-0.473 shape=(1, 9000, 1)
logits [[ 1.7676308 -2.1608238  1.2266175 -2.7257507]]
Iteration 300 of 1000: loss=0.512 " + "l1=0.402" + "l2=0.11 f=-0.464 shape=(1, 9000, 1)
logits [[ 1.5633826 -2.1249528  1.1608131 -2.4534116]]
Iteration 400 of 1000: loss=0.477 " + "l1=0.353" + "l2=0.123 f=-0.454 shape=(1, 9000, 1)
logits [[ 1.3539972 -2.087439   1.0951408 -2.179509 ]]
Iteration 500 of 1000: loss=0.438 " + "l1=0.297" + "l2=0.141 f=-0.44 shape=(1, 9000, 1)
logits [[ 1.1208842 -2.0585694  1.0275028 -1.851033 ]]
Iteration 600 of 1000: loss=0.398 " + "l1=0.251" + "l2=0.146 f=-0.419 shape=(1, 9000, 1)
logits [[ 0.9422211  -1.9883767   0.94145226 -1.5696958 ]]
Iteration 700 of 1000: loss=0.368 " + "l1=0.222" + "l2=0.146 f=-0.396 shape=(1, 9000, 1)
logits [[ 0.8441082  -1.895519    0.84637976 -1.3776499 ]]
Iteration 800 of 1000: loss=0.347 " + "l1=0.202" + "l2=0.145 f=-0.376 shape=(1, 9000, 1)
logits [[ 0.78118867 -1.8302933   0.77962005 -1.236042  ]]
Iteration 900 of 1000: loss=0.33 " + "l1=0.182" + "l2=0.149 f=-0.359 shape=(1, 9000, 1)
logits [[ 0.7181179  -1.7780674   0.72002965 -1.0958266 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.1 " + "l1=7.1" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.8788612 -2.234624   1.5128345 -4.225782 ]]
Iteration 100 of 1000: loss=1.2 " + "l1=0.0119" + "l2=1.19 f=-0.256 shape=(1, 9000, 1)
logits [[ 0.06347422 -1.2778009   0.10201237  0.09014747]]
Iteration 200 of 1000: loss=0.914 " + "l1=0" + "l2=0.914 f=-0.255 shape=(1, 9000, 1)
logits [[ 0.06592928 -1.2585555   0.0745718   0.09793808]]
Iteration 300 of 1000: loss=0.781 " + "l1=0" + "l2=0.781 f=-0.258 shape=(1, 9000, 1)
logits [[ 0.04999068 -1.2797873   0.09325805  0.1062482 ]]
Iteration 400 of 1000: loss=0.705 " + "l1=0.0291" + "l2=0.676 f=-0.253 shape=(1, 9000, 1)
logits [[ 0.09274951 -1.2505093   0.08142029  0.0636017 ]]
Iteration 500 of 1000: loss=0.616 " + "l1=0" + "l2=0.616 f=-0.251 shape=(1, 9000, 1)
logits [[ 0.06875049 -1.2453153   0.07811975  0.09254717]]
Iteration 600 of 1000: loss=0.562 " + "l1=0" + "l2=0.562 f=-0.249 shape=(1, 9000, 1)
logits [[ 0.06794962 -1.2550386   0.09058126  0.10108139]]
Iteration 700 of 1000: loss=0.531 " + "l1=0" + "l2=0.531 f=-0.244 shape=(1, 9000, 1)
logits [[ 0.06016067 -1.2284001   0.07230999  0.12168827]]
Iteration 800 of 1000: loss=0.487 " + "l1=0" + "l2=0.487 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.0633329  -1.2504027   0.09642233  0.09966449]]
Iteration 900 of 1000: loss=0.467 " + "l1=0.00995" + "l2=0.457 f=-0.246 shape=(1, 9000, 1)
logits [[ 0.08562692 -1.2384019   0.08923862  0.07929163]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.91 " + "l1=3.91" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.8788612 -2.234624   1.5128345 -4.225782 ]]
Iteration 100 of 1000: loss=1.23 " + "l1=0.134" + "l2=1.1 f=-0.27 shape=(1, 9000, 1)
logits [[ 0.16018116 -1.3546427   0.17799282 -0.06510069]]
Iteration 200 of 1000: loss=0.821 " + "l1=0.0125" + "l2=0.809 f=-0.262 shape=(1, 9000, 1)
logits [[ 0.08010813 -1.2861644   0.08951551  0.06677274]]
Iteration 300 of 1000: loss=0.655 " + "l1=0.00107" + "l2=0.654 f=-0.255 shape=(1, 9000, 1)
logits [[ 0.07798686 -1.2634903   0.08304393  0.08109882]]
Iteration 400 of 1000: loss=0.558 " + "l1=0" + "l2=0.558 f=-0.25 shape=(1, 9000, 1)
logits [[ 0.07203446 -1.2546015   0.08256737  0.10129645]]
Iteration 500 of 1000: loss=0.487 " + "l1=0.00573" + "l2=0.481 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.0848798  -1.2486864   0.09194158  0.08153099]]
Iteration 600 of 1000: loss=0.443 " + "l1=0" + "l2=0.443 f=-0.244 shape=(1, 9000, 1)
logits [[ 0.07668938 -1.2311149   0.07909568  0.10045931]]
Iteration 700 of 1000: loss=0.413 " + "l1=0" + "l2=0.413 f=-0.245 shape=(1, 9000, 1)
logits [[ 0.05844407 -1.2346022   0.08371744  0.11073781]]
Iteration 800 of 1000: loss=0.382 " + "l1=0" + "l2=0.382 f=-0.245 shape=(1, 9000, 1)
logits [[ 0.07126208 -1.2364968   0.08262792  0.10407349]]
Iteration 900 of 1000: loss=0.354 " + "l1=0.00552" + "l2=0.349 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.08497372 -1.2625968   0.09827647  0.08823495]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.31 " + "l1=2.31" + "l2=0 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.8788612 -2.234624   1.5128345 -4.225782 ]]
Iteration 100 of 1000: loss=1.16 " + "l1=0.617" + "l2=0.538 f=-0.383 shape=(1, 9000, 1)
logits [[ 0.74559534 -1.8738916   0.74778986 -1.1519377 ]]
Iteration 200 of 1000: loss=0.85 " + "l1=0.245" + "l2=0.605 f=-0.306 shape=(1, 9000, 1)
logits [[ 0.33227587 -1.4960982   0.3463046  -0.40635803]]
Iteration 300 of 1000: loss=0.624 " + "l1=0.0101" + "l2=0.614 f=-0.254 shape=(1, 9000, 1)
logits [[ 0.08393428 -1.2508124   0.09068644  0.05962678]]
Iteration 400 of 1000: loss=0.508 " + "l1=0.00678" + "l2=0.501 f=-0.254 shape=(1, 9000, 1)
logits [[ 0.07885298 -1.2604594   0.09267912  0.07180578]]
Iteration 500 of 1000: loss=0.435 " + "l1=0.000384" + "l2=0.434 f=-0.249 shape=(1, 9000, 1)
logits [[ 0.08213425 -1.2531147   0.08865325  0.08747318]]
Iteration 600 of 1000: loss=0.391 " + "l1=0" + "l2=0.391 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.07464188 -1.252563    0.09111674  0.09534515]]
Iteration 700 of 1000: loss=0.362 " + "l1=0.00759" + "l2=0.355 f=-0.249 shape=(1, 9000, 1)
logits [[ 0.09769913 -1.2696908   0.09976488  0.07640192]]
Iteration 800 of 1000: loss=0.329 " + "l1=0.00297" + "l2=0.326 f=-0.249 shape=(1, 9000, 1)
logits [[ 0.09649486 -1.2868115   0.10166838  0.09254217]]
Iteration 900 of 1000: loss=0.303 " + "l1=0" + "l2=0.303 f=-0.245 shape=(1, 9000, 1)
logits [[ 0.09540029 -1.3079525   0.10931808  0.12437113]]
--- 319.50254487991333 seconds ---
Adv result:3
Loading record A03055
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0464 " + "l1=0.0464" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 3.3267164 -1.3138826  1.9626569 -6.854563 ]]
Iteration 100 of 1000: loss=0.0457 " + "l1=0.0452" + "l2=0.000429 f=-0.721 shape=(1, 9000, 1)
logits [[ 3.2479804 -1.2766458  1.9422364 -6.7975245]]
Iteration 200 of 1000: loss=0.0455 " + "l1=0.045" + "l2=0.000481 f=-0.722 shape=(1, 9000, 1)
logits [[ 3.2303748 -1.2692761  1.9369385 -6.784669 ]]
Iteration 300 of 1000: loss=0.0453 " + "l1=0.0447" + "l2=0.00061 f=-0.722 shape=(1, 9000, 1)
logits [[ 3.2097673 -1.2605792  1.9313138 -6.7700377]]
Iteration 400 of 1000: loss=0.0452 " + "l1=0.0444" + "l2=0.00077 f=-0.723 shape=(1, 9000, 1)
logits [[ 3.1891997 -1.2521172  1.9255762 -6.7552266]]
Iteration 500 of 1000: loss=0.045 " + "l1=0.0441" + "l2=0.000908 f=-0.724 shape=(1, 9000, 1)
logits [[ 3.1683693 -1.2437171  1.9199692 -6.741062 ]]
Iteration 600 of 1000: loss=0.045 " + "l1=0.0439" + "l2=0.00111 f=-0.725 shape=(1, 9000, 1)
logits [[ 3.1510956 -1.2373009  1.9153466 -6.7286663]]
Iteration 700 of 1000: loss=0.0448 " + "l1=0.0437" + "l2=0.00118 f=-0.726 shape=(1, 9000, 1)
logits [[ 3.1341865 -1.2309946  1.911019  -6.7173185]]
Iteration 800 of 1000: loss=0.0448 " + "l1=0.0434" + "l2=0.00141 f=-0.727 shape=(1, 9000, 1)
logits [[ 3.118047  -1.2249125  1.9069338 -6.706903 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.464 " + "l1=0.464" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 3.3267164 -1.3138826  1.9626569 -6.854563 ]]
Iteration 100 of 1000: loss=0.392 " + "l1=0.354" + "l2=0.0375 f=-0.749 shape=(1, 9000, 1)
logits [[ 2.589725  -0.9526134  1.7851621 -6.4180202]]
Iteration 200 of 1000: loss=0.35 " + "l1=0.288" + "l2=0.0613 f=-0.765 shape=(1, 9000, 1)
logits [[ 2.14155   -0.7417117  1.6823773 -6.140973 ]]
Iteration 300 of 1000: loss=0.314 " + "l1=0.23" + "l2=0.0849 f=-0.762 shape=(1, 9000, 1)
logits [[ 1.7528445 -0.5429452  1.5725542 -5.8313427]]
Iteration 400 of 1000: loss=0.285 " + "l1=0.184" + "l2=0.101 f=-0.753 shape=(1, 9000, 1)
logits [[ 1.4646492 -0.3759961  1.46053   -5.559308 ]]
Iteration 500 of 1000: loss=0.266 " + "l1=0.156" + "l2=0.109 f=-0.738 shape=(1, 9000, 1)
logits [[ 1.3241072  -0.23655017  1.3278959  -5.367581  ]]
Iteration 600 of 1000: loss=0.251 " + "l1=0.14" + "l2=0.111 f=-0.731 shape=(1, 9000, 1)
logits [[ 1.2448077  -0.15172575  1.2462723  -5.264864  ]]
Iteration 700 of 1000: loss=0.24 " + "l1=0.127" + "l2=0.113 f=-0.724 shape=(1, 9000, 1)
logits [[ 1.182011   -0.08454024  1.1835583  -5.1773887 ]]
Iteration 800 of 1000: loss=0.233 " + "l1=0.121" + "l2=0.112 f=-0.722 shape=(1, 9000, 1)
logits [[ 1.1464466  -0.05564594  1.1547686  -5.1330957 ]]
Iteration 900 of 1000: loss=0.228 " + "l1=0.117" + "l2=0.111 f=-0.721 shape=(1, 9000, 1)
logits [[ 1.1274642  -0.03552564  1.1343517  -5.108607  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.64 " + "l1=4.64" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 3.3267164 -1.3138826  1.9626569 -6.854563 ]]
Iteration 100 of 1000: loss=0.751 " + "l1=0.0165" + "l2=0.734 f=-0.733 shape=(1, 9000, 1)
logits [[ 0.4960989   0.74699944  0.7634848  -4.937229  ]]
Iteration 200 of 1000: loss=0.546 " + "l1=0.000414" + "l2=0.546 f=-0.719 shape=(1, 9000, 1)
logits [[ 0.4924974   0.7395482   0.73996264 -4.8473525 ]]
Iteration 300 of 1000: loss=0.468 " + "l1=0" + "l2=0.468 f=-0.719 shape=(1, 9000, 1)
logits [[ 0.44538003  0.7369558   0.73029107 -4.7900577 ]]
Iteration 400 of 1000: loss=0.423 " + "l1=0" + "l2=0.423 f=-0.719 shape=(1, 9000, 1)
logits [[ 0.40510783  0.7425325   0.71706134 -4.741296  ]]
Iteration 500 of 1000: loss=0.382 " + "l1=0" + "l2=0.382 f=-0.718 shape=(1, 9000, 1)
logits [[ 0.41475946  0.72666574  0.70536995 -4.7186384 ]]
Iteration 600 of 1000: loss=0.348 " + "l1=0" + "l2=0.348 f=-0.718 shape=(1, 9000, 1)
logits [[ 0.42346892  0.7061046   0.7037909  -4.7062697 ]]
Iteration 700 of 1000: loss=0.334 " + "l1=0" + "l2=0.334 f=-0.722 shape=(1, 9000, 1)
logits [[ 0.37662762  0.7206852   0.6921708  -4.6771326 ]]
Iteration 800 of 1000: loss=0.314 " + "l1=0" + "l2=0.314 f=-0.724 shape=(1, 9000, 1)
logits [[ 0.36659026  0.7120843   0.68394953 -4.658357  ]]
Iteration 900 of 1000: loss=0.297 " + "l1=0" + "l2=0.297 f=-0.724 shape=(1, 9000, 1)
logits [[ 0.356317    0.69831085  0.68221617 -4.632687  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.55 " + "l1=2.55" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 3.3267164 -1.3138826  1.9626569 -6.854563 ]]
Iteration 100 of 1000: loss=0.7 " + "l1=0.0407" + "l2=0.659 f=-0.725 shape=(1, 9000, 1)
logits [[ 0.5657253  0.7144214  0.7884776 -4.9681373]]
Iteration 200 of 1000: loss=0.448 " + "l1=0.00234" + "l2=0.446 f=-0.713 shape=(1, 9000, 1)
logits [[ 0.5204169   0.73516095  0.73941004 -4.8488154 ]]
Iteration 300 of 1000: loss=0.379 " + "l1=0" + "l2=0.379 f=-0.714 shape=(1, 9000, 1)
logits [[ 0.45699844  0.7419641   0.72055787 -4.775554  ]]
Iteration 400 of 1000: loss=0.335 " + "l1=0" + "l2=0.335 f=-0.714 shape=(1, 9000, 1)
logits [[ 0.43916443  0.71467584  0.70745444 -4.7186255 ]]
Iteration 500 of 1000: loss=0.309 " + "l1=0.00318" + "l2=0.306 f=-0.715 shape=(1, 9000, 1)
logits [[ 0.4300353   0.691751    0.69752544 -4.6806693 ]]
Iteration 600 of 1000: loss=0.294 " + "l1=0" + "l2=0.294 f=-0.722 shape=(1, 9000, 1)
logits [[ 0.3624728  0.7084647  0.6837177 -4.641852 ]]
Iteration 700 of 1000: loss=0.275 " + "l1=0.00229" + "l2=0.273 f=-0.722 shape=(1, 9000, 1)
logits [[ 0.35663876  0.67864865  0.6828056  -4.6067615 ]]
Iteration 800 of 1000: loss=0.269 " + "l1=0.0108" + "l2=0.258 f=-0.724 shape=(1, 9000, 1)
logits [[ 0.34553286  0.65791816  0.67762023 -4.5788026 ]]
Iteration 900 of 1000: loss=0.253 " + "l1=0" + "l2=0.253 f=-0.732 shape=(1, 9000, 1)
logits [[ 0.2920746   0.6709815   0.66548413 -4.5548806 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.51 " + "l1=1.51" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 3.3267164 -1.3138826  1.9626569 -6.854563 ]]
Iteration 100 of 1000: loss=0.674 " + "l1=0.312" + "l2=0.362 f=-0.713 shape=(1, 9000, 1)
logits [[ 1.1330769   0.17384318  1.1284966  -5.2867827 ]]
Iteration 200 of 1000: loss=0.426 " + "l1=0.03" + "l2=0.396 f=-0.712 shape=(1, 9000, 1)
logits [[ 0.60767597  0.68221456  0.7744821  -4.912847  ]]
Iteration 300 of 1000: loss=0.349 " + "l1=0.000745" + "l2=0.348 f=-0.717 shape=(1, 9000, 1)
logits [[ 0.4505538   0.72238755  0.724681   -4.7673273 ]]
Iteration 400 of 1000: loss=0.317 " + "l1=0.00462" + "l2=0.312 f=-0.717 shape=(1, 9000, 1)
logits [[ 0.42479286  0.6962998   0.7105035  -4.7010226 ]]
Iteration 500 of 1000: loss=0.291 " + "l1=0.00351" + "l2=0.287 f=-0.723 shape=(1, 9000, 1)
logits [[ 0.379466    0.68441886  0.69521976 -4.650956  ]]
Iteration 600 of 1000: loss=0.271 " + "l1=0" + "l2=0.271 f=-0.727 shape=(1, 9000, 1)
logits [[ 0.33542705  0.6839728   0.6793289  -4.604944  ]]
Iteration 700 of 1000: loss=0.255 " + "l1=0.000228" + "l2=0.255 f=-0.728 shape=(1, 9000, 1)
logits [[ 0.30753526  0.6695683   0.670269   -4.5584116 ]]
Iteration 800 of 1000: loss=0.246 " + "l1=0.00268" + "l2=0.243 f=-0.728 shape=(1, 9000, 1)
logits [[ 0.2903615   0.65456027  0.66279984 -4.521061  ]]
Iteration 900 of 1000: loss=0.238 " + "l1=0.00363" + "l2=0.234 f=-0.729 shape=(1, 9000, 1)
logits [[ 0.2737182  0.6392391  0.6504137 -4.4776144]]
--- 311.27745604515076 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0136 " + "l1=0.0136" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 3.3267164 -1.3138826  1.9626569 -6.854563 ]]
Iteration 100 of 1000: loss=0.0133 " + "l1=0.0131" + "l2=0.000264 f=-0.725 shape=(1, 9000, 1)
logits [[ 3.2705204 -1.3076277  1.9648638 -6.8276086]]
Iteration 200 of 1000: loss=0.0132 " + "l1=0.013" + "l2=0.000244 f=-0.725 shape=(1, 9000, 1)
logits [[ 3.2629898 -1.3060293  1.9638119 -6.822597 ]]
Iteration 300 of 1000: loss=0.0132 " + "l1=0.0129" + "l2=0.00032 f=-0.726 shape=(1, 9000, 1)
logits [[ 3.251823  -1.3040183  1.9629983 -6.8161783]]
Iteration 400 of 1000: loss=0.0132 " + "l1=0.0128" + "l2=0.000375 f=-0.727 shape=(1, 9000, 1)
logits [[ 3.2409763 -1.3021433  1.9622679 -6.809875 ]]
Iteration 500 of 1000: loss=0.0131 " + "l1=0.0127" + "l2=0.000461 f=-0.728 shape=(1, 9000, 1)
logits [[ 3.229911  -1.300036   1.9614745 -6.8035717]]
Iteration 600 of 1000: loss=0.0132 " + "l1=0.0126" + "l2=0.000592 f=-0.729 shape=(1, 9000, 1)
logits [[ 3.2185807 -1.297759   1.9607112 -6.797287 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.136 " + "l1=0.136" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 3.3267164 -1.3138826  1.9626569 -6.854563 ]]
Iteration 100 of 1000: loss=0.106 " + "l1=0.0886" + "l2=0.017 f=-0.765 shape=(1, 9000, 1)
logits [[ 2.8720944 -1.2497225  1.9861294 -6.6683917]]
Iteration 200 of 1000: loss=0.0915 " + "l1=0.0655" + "l2=0.0259 f=-0.787 shape=(1, 9000, 1)
logits [[ 2.6267376 -1.1986501  1.9715964 -6.547761 ]]
Iteration 300 of 1000: loss=0.0782 " + "l1=0.0439" + "l2=0.0343 f=-0.804 shape=(1, 9000, 1)
logits [[ 2.3953934 -1.1404768  1.9566295 -6.4272294]]
Iteration 400 of 1000: loss=0.0655 " + "l1=0.0236" + "l2=0.0419 f=-0.815 shape=(1, 9000, 1)
logits [[ 2.1931143 -1.0927255  1.9571104 -6.317544 ]]
Iteration 500 of 1000: loss=0.0535 " + "l1=0.00453" + "l2=0.0489 f=-0.822 shape=(1, 9000, 1)
logits [[ 2.0055983 -1.0496848  1.9603053 -6.204675 ]]
Iteration 600 of 1000: loss=0.0451 " + "l1=0.000552" + "l2=0.0445 f=-0.82 shape=(1, 9000, 1)
logits [[ 1.961756  -1.0369533  1.9562324 -6.1593685]]
Iteration 700 of 1000: loss=0.041 " + "l1=0.00104" + "l2=0.0399 f=-0.816 shape=(1, 9000, 1)
logits [[ 1.9650508 -1.0349642  1.954681  -6.149457 ]]
Iteration 800 of 1000: loss=0.0375 " + "l1=0.000414" + "l2=0.0371 f=-0.815 shape=(1, 9000, 1)
logits [[ 1.9643153 -1.0361037  1.9601704 -6.147373 ]]
Iteration 900 of 1000: loss=0.0353 " + "l1=0.000302" + "l2=0.035 f=-0.813 shape=(1, 9000, 1)
logits [[ 1.9655548 -1.036317   1.9625357 -6.142107 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.075 " + "l1=0.075" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 3.3267164 -1.3138826  1.9626569 -6.854563 ]]
Iteration 100 of 1000: loss=0.0656 " + "l1=0.0603" + "l2=0.0053 f=-0.745 shape=(1, 9000, 1)
logits [[ 3.0728862 -1.2791977  1.9765662 -6.7492995]]
Iteration 200 of 1000: loss=0.0622 " + "l1=0.0551" + "l2=0.00711 f=-0.753 shape=(1, 9000, 1)
logits [[ 2.9734876 -1.2621703  1.9714509 -6.694178 ]]
Iteration 300 of 1000: loss=0.0593 " + "l1=0.0502" + "l2=0.00904 f=-0.76 shape=(1, 9000, 1)
logits [[ 2.8770273 -1.2437731  1.9640373 -6.6386943]]
Iteration 400 of 1000: loss=0.0562 " + "l1=0.0452" + "l2=0.011 f=-0.769 shape=(1, 9000, 1)
logits [[ 2.7765682 -1.2201295  1.9554169 -6.5882893]]
Iteration 500 of 1000: loss=0.0534 " + "l1=0.0407" + "l2=0.0127 f=-0.776 shape=(1, 9000, 1)
logits [[ 2.6869035 -1.196341   1.9473873 -6.542111 ]]
Iteration 600 of 1000: loss=0.051 " + "l1=0.0366" + "l2=0.0144 f=-0.782 shape=(1, 9000, 1)
logits [[ 2.604921  -1.1743556  1.939967  -6.496759 ]]
Iteration 700 of 1000: loss=0.0485 " + "l1=0.0321" + "l2=0.0163 f=-0.787 shape=(1, 9000, 1)
logits [[ 2.5180407 -1.1515104  1.93373   -6.449887 ]]
Iteration 800 of 1000: loss=0.046 " + "l1=0.0276" + "l2=0.0184 f=-0.793 shape=(1, 9000, 1)
logits [[ 2.4311297 -1.1289929  1.9294186 -6.402903 ]]
Iteration 900 of 1000: loss=0.0437 " + "l1=0.024" + "l2=0.0197 f=-0.796 shape=(1, 9000, 1)
logits [[ 2.3617215 -1.108955   1.9259593 -6.3641024]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.106 " + "l1=0.106" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 3.3267164 -1.3138826  1.9626569 -6.854563 ]]
Iteration 100 of 1000: loss=0.0872 " + "l1=0.077" + "l2=0.0101 f=-0.754 shape=(1, 9000, 1)
logits [[ 2.9759157 -1.2662377  1.9821961 -6.70945  ]]
Iteration 200 of 1000: loss=0.0797 " + "l1=0.065" + "l2=0.0148 f=-0.769 shape=(1, 9000, 1)
logits [[ 2.811366  -1.2339972  1.97279   -6.624848 ]]
Iteration 300 of 1000: loss=0.0725 " + "l1=0.0534" + "l2=0.0191 f=-0.782 shape=(1, 9000, 1)
logits [[ 2.6468267 -1.196329   1.9576652 -6.5379567]]
Iteration 400 of 1000: loss=0.0658 " + "l1=0.0421" + "l2=0.0237 f=-0.794 shape=(1, 9000, 1)
logits [[ 2.4886525 -1.15179    1.9453913 -6.4571457]]
Iteration 500 of 1000: loss=0.0593 " + "l1=0.0317" + "l2=0.0276 f=-0.801 shape=(1, 9000, 1)
logits [[ 2.3465772 -1.1130589  1.9380139 -6.376343 ]]
Iteration 600 of 1000: loss=0.0533 " + "l1=0.0216" + "l2=0.0317 f=-0.808 shape=(1, 9000, 1)
logits [[ 2.2130287 -1.0791774  1.9337552 -6.3012366]]
Iteration 700 of 1000: loss=0.0477 " + "l1=0.0125" + "l2=0.0352 f=-0.811 shape=(1, 9000, 1)
logits [[ 2.0975986 -1.0511386  1.9358556 -6.227304 ]]
Iteration 800 of 1000: loss=0.0424 " + "l1=0.00298" + "l2=0.0394 f=-0.815 shape=(1, 9000, 1)
logits [[ 1.9865515 -1.0323316  1.9480511 -6.163011 ]]
Iteration 900 of 1000: loss=0.0384 " + "l1=0.000169" + "l2=0.0382 f=-0.814 shape=(1, 9000, 1)
logits [[ 1.9516404 -1.0238663  1.9494551 -6.131839 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0904 " + "l1=0.0904" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 3.3267164 -1.3138826  1.9626569 -6.854563 ]]
Iteration 100 of 1000: loss=0.0767 " + "l1=0.0692" + "l2=0.00751 f=-0.749 shape=(1, 9000, 1)
logits [[ 3.0243802 -1.2729094  1.9795785 -6.7289553]]
Iteration 200 of 1000: loss=0.0717 " + "l1=0.0612" + "l2=0.0105 f=-0.76 shape=(1, 9000, 1)
logits [[ 2.8959937 -1.2504447  1.9726102 -6.6592445]]
Iteration 300 of 1000: loss=0.0667 " + "l1=0.053" + "l2=0.0138 f=-0.772 shape=(1, 9000, 1)
logits [[ 2.7612903 -1.2206616  1.9617726 -6.589875 ]]
Iteration 400 of 1000: loss=0.0621 " + "l1=0.0457" + "l2=0.0165 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.639301  -1.1900901  1.9501381 -6.5250645]]
Iteration 500 of 1000: loss=0.0579 " + "l1=0.0381" + "l2=0.0198 f=-0.79 shape=(1, 9000, 1)
logits [[ 2.5160484 -1.1562282  1.9410677 -6.4617257]]
Iteration 600 of 1000: loss=0.0535 " + "l1=0.0309" + "l2=0.0227 f=-0.797 shape=(1, 9000, 1)
logits [[ 2.4004965 -1.1247659  1.9342993 -6.397718 ]]
Iteration 700 of 1000: loss=0.0497 " + "l1=0.0244" + "l2=0.0252 f=-0.803 shape=(1, 9000, 1)
logits [[ 2.296937  -1.093788   1.9281136 -6.3412952]]
Iteration 800 of 1000: loss=0.0462 " + "l1=0.0188" + "l2=0.0274 f=-0.805 shape=(1, 9000, 1)
logits [[ 2.2121985 -1.0720407  1.9280162 -6.287173 ]]
Iteration 900 of 1000: loss=0.043 " + "l1=0.0133" + "l2=0.0297 f=-0.806 shape=(1, 9000, 1)
logits [[ 2.1293972 -1.0531628  1.9289273 -6.230582 ]]
--- 301.20198702812195 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.102 " + "l1=0.102" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 3.3267164 -1.3138826  1.9626569 -6.854563 ]]
Iteration 100 of 1000: loss=0.101 " + "l1=0.0999" + "l2=0.000607 f=-0.718 shape=(1, 9000, 1)
logits [[ 3.2325933 -1.2857873  1.9372824 -6.757493 ]]
Iteration 200 of 1000: loss=0.1 " + "l1=0.0994" + "l2=0.000737 f=-0.718 shape=(1, 9000, 1)
logits [[ 3.2060168 -1.2784165  1.9293135 -6.7299137]]
Iteration 300 of 1000: loss=0.0997 " + "l1=0.0988" + "l2=0.000968 f=-0.718 shape=(1, 9000, 1)
logits [[ 3.1766908 -1.2708166  1.9206022 -6.6989613]]
Iteration 400 of 1000: loss=0.0994 " + "l1=0.0982" + "l2=0.00126 f=-0.718 shape=(1, 9000, 1)
logits [[ 3.1477919 -1.2635505  1.9121511 -6.6686316]]
Iteration 500 of 1000: loss=0.0991 " + "l1=0.0976" + "l2=0.00151 f=-0.718 shape=(1, 9000, 1)
logits [[ 3.1199753 -1.2564605  1.9041518 -6.639069 ]]
Iteration 600 of 1000: loss=0.0988 " + "l1=0.097" + "l2=0.00179 f=-0.718 shape=(1, 9000, 1)
logits [[ 3.0930543 -1.2495897  1.8965944 -6.610385 ]]
Iteration 700 of 1000: loss=0.0986 " + "l1=0.0965" + "l2=0.0021 f=-0.717 shape=(1, 9000, 1)
logits [[ 3.0685484 -1.2441859  1.8897918 -6.5835485]]
Iteration 800 of 1000: loss=0.0984 " + "l1=0.096" + "l2=0.00233 f=-0.717 shape=(1, 9000, 1)
logits [[ 3.0441544 -1.2387863  1.8832806 -6.557781 ]]
Iteration 900 of 1000: loss=0.0982 " + "l1=0.0956" + "l2=0.00266 f=-0.717 shape=(1, 9000, 1)
logits [[ 3.021901  -1.2341111  1.8774331 -6.53446  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.02 " + "l1=1.02" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 3.3267164 -1.3138826  1.9626569 -6.854563 ]]
Iteration 100 of 1000: loss=0.89 " + "l1=0.832" + "l2=0.0573 f=-0.711 shape=(1, 9000, 1)
logits [[ 2.389292  -1.0330492  1.7331372 -5.9340587]]
Iteration 200 of 1000: loss=0.816 " + "l1=0.72" + "l2=0.0961 f=-0.705 shape=(1, 9000, 1)
logits [[ 1.8314452  -0.85503435  1.5711488  -5.368011  ]]
Iteration 300 of 1000: loss=0.752 " + "l1=0.625" + "l2=0.127 f=-0.677 shape=(1, 9000, 1)
logits [[ 1.4019635 -0.6591981  1.3994672 -4.849677 ]]
Iteration 400 of 1000: loss=0.707 " + "l1=0.57" + "l2=0.137 f=-0.627 shape=(1, 9000, 1)
logits [[ 1.2504767  -0.55084914  1.2428976  -4.4496202 ]]
Iteration 500 of 1000: loss=0.672 " + "l1=0.524" + "l2=0.148 f=-0.59 shape=(1, 9000, 1)
logits [[ 1.1151409  -0.47423577  1.1187451  -4.121552  ]]
Iteration 600 of 1000: loss=0.639 " + "l1=0.479" + "l2=0.16 f=-0.561 shape=(1, 9000, 1)
logits [[ 0.97287714 -0.38558504  0.97977084 -3.8091526 ]]
Iteration 700 of 1000: loss=0.612 " + "l1=0.447" + "l2=0.165 f=-0.541 shape=(1, 9000, 1)
logits [[ 0.8755126  -0.33883536  0.8876786  -3.58639   ]]
Iteration 800 of 1000: loss=0.591 " + "l1=0.422" + "l2=0.17 f=-0.523 shape=(1, 9000, 1)
logits [[ 0.8143356  -0.32678548  0.8178051  -3.3985457 ]]
Iteration 900 of 1000: loss=0.574 " + "l1=0.399" + "l2=0.175 f=-0.509 shape=(1, 9000, 1)
logits [[ 0.7402051 -0.3236674  0.7673066 -3.2179437]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.2 " + "l1=10.2" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 3.3267164 -1.3138826  1.9626569 -6.854563 ]]
Iteration 100 of 1000: loss=2.53 " + "l1=0.0295" + "l2=2.5 f=-0.283 shape=(1, 9000, 1)
logits [[-0.7527565  -0.11091775 -0.12862764 -0.14042506]]
Iteration 200 of 1000: loss=1.71 " + "l1=0.0186" + "l2=1.69 f=-0.275 shape=(1, 9000, 1)
logits [[-0.7217801  -0.14275189 -0.10773871 -0.12633663]]
Iteration 300 of 1000: loss=1.43 " + "l1=0" + "l2=1.43 f=-0.265 shape=(1, 9000, 1)
logits [[-0.7221054  -0.15948308 -0.09191707 -0.08662172]]
Iteration 400 of 1000: loss=1.28 " + "l1=0" + "l2=1.28 f=-0.259 shape=(1, 9000, 1)
logits [[-0.71699995 -0.17832705 -0.07581447 -0.06370538]]
Iteration 500 of 1000: loss=1.17 " + "l1=0.00923" + "l2=1.16 f=-0.257 shape=(1, 9000, 1)
logits [[-0.6948611  -0.18934497 -0.06695034 -0.07618029]]
Iteration 600 of 1000: loss=1.08 " + "l1=0" + "l2=1.08 f=-0.249 shape=(1, 9000, 1)
logits [[-0.6807379  -0.21606018 -0.07200368 -0.02640896]]
Iteration 700 of 1000: loss=1.01 " + "l1=0.0176" + "l2=0.99 f=-0.248 shape=(1, 9000, 1)
logits [[-0.6011513  -0.26190594 -0.05623294 -0.07380224]]
Iteration 800 of 1000: loss=0.935 " + "l1=0" + "l2=0.935 f=-0.244 shape=(1, 9000, 1)
logits [[-0.5863668  -0.28982872 -0.0596135  -0.03951532]]
Iteration 900 of 1000: loss=0.879 " + "l1=0" + "l2=0.879 f=-0.238 shape=(1, 9000, 1)
logits [[-0.56853175 -0.31231573 -0.06118529 -0.00903351]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.6 " + "l1=5.6" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 3.3267164 -1.3138826  1.9626569 -6.854563 ]]
Iteration 100 of 1000: loss=2.55 " + "l1=1.35" + "l2=1.2 f=-0.461 shape=(1, 9000, 1)
logits [[ 0.09091428 -0.09900649  0.3061027  -2.1408408 ]]
Iteration 200 of 1000: loss=1.44 " + "l1=0.0152" + "l2=1.42 f=-0.266 shape=(1, 9000, 1)
logits [[-0.67313564 -0.1346358  -0.11510143 -0.14276257]]
Iteration 300 of 1000: loss=1.13 " + "l1=0" + "l2=1.13 f=-0.259 shape=(1, 9000, 1)
logits [[-0.6999779  -0.12298016 -0.11953021 -0.09403482]]
Iteration 400 of 1000: loss=0.977 " + "l1=0.0139" + "l2=0.963 f=-0.261 shape=(1, 9000, 1)
logits [[-0.66572064 -0.15515138 -0.09995955 -0.12516233]]
Iteration 500 of 1000: loss=0.869 " + "l1=0" + "l2=0.869 f=-0.258 shape=(1, 9000, 1)
logits [[-0.6809381  -0.17613749 -0.11318348 -0.06064223]]
Iteration 600 of 1000: loss=0.769 " + "l1=0" + "l2=0.769 f=-0.251 shape=(1, 9000, 1)
logits [[-0.6361635  -0.23321135 -0.09890619 -0.0367425 ]]
Iteration 700 of 1000: loss=0.676 " + "l1=0.00421" + "l2=0.672 f=-0.255 shape=(1, 9000, 1)
logits [[-0.6024667  -0.27843535 -0.06644167 -0.07410059]]
Iteration 800 of 1000: loss=0.611 " + "l1=3.91e-05" + "l2=0.611 f=-0.259 shape=(1, 9000, 1)
logits [[-0.6313447  -0.27436343 -0.06583734 -0.06590848]]
Iteration 900 of 1000: loss=0.569 " + "l1=0" + "l2=0.569 f=-0.263 shape=(1, 9000, 1)
logits [[-0.66687244 -0.2715622  -0.06333923 -0.04951636]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.31 " + "l1=3.31" + "l2=0 f=-0.72 shape=(1, 9000, 1)
logits [[ 3.3267164 -1.3138826  1.9626569 -6.854563 ]]
Iteration 100 of 1000: loss=2.02 " + "l1=1.53" + "l2=0.494 f=-0.567 shape=(1, 9000, 1)
logits [[ 0.8956246  -0.27478486  0.90961313 -3.7995472 ]]
Iteration 200 of 1000: loss=1.55 " + "l1=0.826" + "l2=0.72 f=-0.447 shape=(1, 9000, 1)
logits [[ 0.1632281  -0.08122627  0.33523026 -2.2053049 ]]
Iteration 300 of 1000: loss=1.14 " + "l1=0.285" + "l2=0.858 f=-0.342 shape=(1, 9000, 1)
logits [[-0.43996784 -0.02379016 -0.0143009  -0.88974714]]
Iteration 400 of 1000: loss=0.874 " + "l1=0.0244" + "l2=0.85 f=-0.266 shape=(1, 9000, 1)
logits [[-0.6546064  -0.1193592  -0.10702755 -0.18213034]]
Iteration 500 of 1000: loss=0.691 " + "l1=0.00126" + "l2=0.69 f=-0.255 shape=(1, 9000, 1)
logits [[-0.66830105 -0.12688008 -0.11087999 -0.11476155]]
Iteration 600 of 1000: loss=0.59 " + "l1=0.00568" + "l2=0.585 f=-0.257 shape=(1, 9000, 1)
logits [[-0.6807366  -0.12640531 -0.10212486 -0.11961644]]
Iteration 700 of 1000: loss=0.534 " + "l1=0" + "l2=0.534 f=-0.257 shape=(1, 9000, 1)
logits [[-0.6935754  -0.15764041 -0.09287408 -0.08421264]]
Iteration 800 of 1000: loss=0.502 " + "l1=0.00141" + "l2=0.5 f=-0.261 shape=(1, 9000, 1)
logits [[-0.7012956  -0.17578334 -0.08063482 -0.08498319]]
Iteration 900 of 1000: loss=0.481 " + "l1=0.00283" + "l2=0.478 f=-0.263 shape=(1, 9000, 1)
logits [[-0.71101016 -0.19459906 -0.0683151  -0.07701054]]
--- 324.36080408096313 seconds ---
Adv result:3
Loading record A03101
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0342 " + "l1=0.0342" + "l2=0 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.0199492 -1.39731    1.0638123 -3.7205484]]
Iteration 100 of 1000: loss=0.0334 " + "l1=0.033" + "l2=0.000425 f=-0.511 shape=(1, 9000, 1)
logits [[ 1.9509733 -1.3459371  1.0346962 -3.6842797]]
Iteration 200 of 1000: loss=0.0331 " + "l1=0.0326" + "l2=0.000508 f=-0.512 shape=(1, 9000, 1)
logits [[ 1.9334874 -1.3294832  1.0252695 -3.6773236]]
Iteration 300 of 1000: loss=0.0329 " + "l1=0.0323" + "l2=0.000641 f=-0.513 shape=(1, 9000, 1)
logits [[ 1.9139725 -1.3123661  1.0155747 -3.6692142]]
Iteration 400 of 1000: loss=0.0327 " + "l1=0.0319" + "l2=0.000809 f=-0.514 shape=(1, 9000, 1)
logits [[ 1.8955321 -1.296815   1.0065304 -3.6615317]]
Iteration 500 of 1000: loss=0.0326 " + "l1=0.0316" + "l2=0.000989 f=-0.515 shape=(1, 9000, 1)
logits [[ 1.8791183 -1.2836193  0.9987455 -3.6543636]]
Iteration 600 of 1000: loss=0.0325 " + "l1=0.0314" + "l2=0.00114 f=-0.516 shape=(1, 9000, 1)
logits [[ 1.8648188  -1.2728443   0.99222803 -3.6476376 ]]
Iteration 700 of 1000: loss=0.0325 " + "l1=0.0311" + "l2=0.00135 f=-0.517 shape=(1, 9000, 1)
logits [[ 1.8513006 -1.262958   0.986292  -3.6410232]]
Iteration 800 of 1000: loss=0.0324 " + "l1=0.0309" + "l2=0.00147 f=-0.517 shape=(1, 9000, 1)
logits [[ 1.8396388 -1.2543646  0.9813709 -3.6354508]]
Iteration 900 of 1000: loss=0.0324 " + "l1=0.0308" + "l2=0.00164 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.8290455 -1.246988   0.9768728 -3.6297095]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.342 " + "l1=0.342" + "l2=0 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.0199492 -1.39731    1.0638123 -3.7205484]]
Iteration 100 of 1000: loss=0.271 " + "l1=0.235" + "l2=0.0358 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.4126554  -0.934435    0.83169967 -3.48719   ]]
Iteration 200 of 1000: loss=0.24 " + "l1=0.19" + "l2=0.0494 f=-0.56 shape=(1, 9000, 1)
logits [[ 1.141547   -0.76030636  0.7403049  -3.362611  ]]
Iteration 300 of 1000: loss=0.217 " + "l1=0.16" + "l2=0.0568 f=-0.57 shape=(1, 9000, 1)
logits [[ 0.9424394 -0.6609175  0.6838402 -3.2448776]]
Iteration 400 of 1000: loss=0.201 " + "l1=0.138" + "l2=0.0631 f=-0.576 shape=(1, 9000, 1)
logits [[ 0.78716075 -0.5937532   0.6444966  -3.1419823 ]]
Iteration 500 of 1000: loss=0.191 " + "l1=0.123" + "l2=0.068 f=-0.577 shape=(1, 9000, 1)
logits [[ 0.67627627 -0.5500108   0.6187928  -3.0545006 ]]
Iteration 600 of 1000: loss=0.182 " + "l1=0.112" + "l2=0.0702 f=-0.577 shape=(1, 9000, 1)
logits [[ 0.59864855 -0.51888794  0.5984174  -2.9865592 ]]
Iteration 700 of 1000: loss=0.176 " + "l1=0.109" + "l2=0.0674 f=-0.574 shape=(1, 9000, 1)
logits [[ 0.58069956 -0.5085469   0.57754886 -2.9446292 ]]
Iteration 800 of 1000: loss=0.171 " + "l1=0.106" + "l2=0.0658 f=-0.57 shape=(1, 9000, 1)
logits [[ 0.5625895  -0.49436867  0.5567904  -2.9068658 ]]
Iteration 900 of 1000: loss=0.167 " + "l1=0.102" + "l2=0.0659 f=-0.569 shape=(1, 9000, 1)
logits [[ 0.5368893  -0.477642    0.53797626 -2.8715122 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.42 " + "l1=3.42" + "l2=0 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.0199492 -1.39731    1.0638123 -3.7205484]]
Iteration 100 of 1000: loss=0.72 " + "l1=0.106" + "l2=0.614 f=-0.599 shape=(1, 9000, 1)
logits [[ 0.10999539  0.04153526  0.14790097 -2.6968076 ]]
Iteration 200 of 1000: loss=0.437 " + "l1=0.00943" + "l2=0.427 f=-0.595 shape=(1, 9000, 1)
logits [[ 0.07031603  0.07631388  0.08574594 -2.6129375 ]]
Iteration 300 of 1000: loss=0.361 " + "l1=0.00746" + "l2=0.354 f=-0.588 shape=(1, 9000, 1)
logits [[ 0.05224653  0.06314754  0.0706056  -2.5386806 ]]
Iteration 400 of 1000: loss=0.324 " + "l1=0.00193" + "l2=0.322 f=-0.588 shape=(1, 9000, 1)
logits [[ 0.00398443  0.06252738  0.06446048 -2.4823062 ]]
Iteration 500 of 1000: loss=0.3 " + "l1=0.0056" + "l2=0.294 f=-0.579 shape=(1, 9000, 1)
logits [[ 0.04945171  0.04385376  0.04825242 -2.4565141 ]]
Iteration 600 of 1000: loss=0.282 " + "l1=0" + "l2=0.282 f=-0.577 shape=(1, 9000, 1)
logits [[ 0.02316037  0.04474688  0.04221565 -2.4179962 ]]
Iteration 700 of 1000: loss=0.276 " + "l1=0" + "l2=0.276 f=-0.573 shape=(1, 9000, 1)
logits [[ 0.02143295  0.04740461  0.03708313 -2.3983989 ]]
Iteration 800 of 1000: loss=0.265 " + "l1=0" + "l2=0.265 f=-0.569 shape=(1, 9000, 1)
logits [[ 0.02461569  0.04409467  0.03847412 -2.3847296 ]]
Iteration 900 of 1000: loss=0.259 " + "l1=0" + "l2=0.259 f=-0.57 shape=(1, 9000, 1)
logits [[-0.03007603  0.04927535  0.04663788 -2.3451993 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.88 " + "l1=1.88" + "l2=0 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.0199492 -1.39731    1.0638123 -3.7205484]]
Iteration 100 of 1000: loss=0.652 " + "l1=0.323" + "l2=0.329 f=-0.594 shape=(1, 9000, 1)
logits [[ 0.36293176 -0.21282734  0.37457374 -2.9007714 ]]
Iteration 200 of 1000: loss=0.444 " + "l1=0.1" + "l2=0.343 f=-0.593 shape=(1, 9000, 1)
logits [[ 0.15412568 -0.0190945   0.1635385  -2.6704223 ]]
Iteration 300 of 1000: loss=0.348 " + "l1=0.00725" + "l2=0.34 f=-0.588 shape=(1, 9000, 1)
logits [[ 0.06487054  0.05781943  0.07100251 -2.544206  ]]
Iteration 400 of 1000: loss=0.303 " + "l1=0.00303" + "l2=0.3 f=-0.582 shape=(1, 9000, 1)
logits [[ 0.04882648  0.04855225  0.05405986 -2.4785666 ]]
Iteration 500 of 1000: loss=0.282 " + "l1=0.00472" + "l2=0.277 f=-0.575 shape=(1, 9000, 1)
logits [[ 0.04165629  0.04014086  0.04872675 -2.4316754 ]]
Iteration 600 of 1000: loss=0.269 " + "l1=0.00341" + "l2=0.265 f=-0.573 shape=(1, 9000, 1)
logits [[ 0.01163555  0.04139647  0.04758818 -2.3931963 ]]
Iteration 700 of 1000: loss=0.258 " + "l1=8.58e-05" + "l2=0.258 f=-0.568 shape=(1, 9000, 1)
logits [[ 0.02638844  0.04175149  0.04190751 -2.3816228 ]]
Iteration 800 of 1000: loss=0.253 " + "l1=0.00302" + "l2=0.25 f=-0.565 shape=(1, 9000, 1)
logits [[ 0.02725278  0.03713524  0.04261816 -2.3662298 ]]
Iteration 900 of 1000: loss=0.246 " + "l1=0.000156" + "l2=0.246 f=-0.562 shape=(1, 9000, 1)
logits [[ 0.02327731  0.03596609  0.03624926 -2.3444948 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.11 " + "l1=1.11" + "l2=0 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.0199492 -1.39731    1.0638123 -3.7205484]]
Iteration 100 of 1000: loss=0.517 " + "l1=0.308" + "l2=0.209 f=-0.595 shape=(1, 9000, 1)
logits [[ 0.5504027  -0.39455914  0.5529438  -3.0879097 ]]
Iteration 200 of 1000: loss=0.403 " + "l1=0.206" + "l2=0.197 f=-0.59 shape=(1, 9000, 1)
logits [[ 0.3841252  -0.24665411  0.38820162 -2.8856492 ]]
Iteration 300 of 1000: loss=0.343 " + "l1=0.141" + "l2=0.202 f=-0.588 shape=(1, 9000, 1)
logits [[ 0.27050805 -0.15641975  0.27797964 -2.7434747 ]]
Iteration 400 of 1000: loss=0.307 " + "l1=0.102" + "l2=0.206 f=-0.58 shape=(1, 9000, 1)
logits [[ 0.20394382 -0.10729714  0.20556195 -2.622985  ]]
Iteration 500 of 1000: loss=0.285 " + "l1=0.0746" + "l2=0.211 f=-0.575 shape=(1, 9000, 1)
logits [[ 0.14807251 -0.07190275  0.15750918 -2.5347037 ]]
Iteration 600 of 1000: loss=0.272 " + "l1=0.0559" + "l2=0.216 f=-0.574 shape=(1, 9000, 1)
logits [[ 0.10835052 -0.03697288  0.1351092  -2.5039365 ]]
Iteration 700 of 1000: loss=0.261 " + "l1=0.046" + "l2=0.215 f=-0.569 shape=(1, 9000, 1)
logits [[ 0.10477655 -0.02790923  0.11353148 -2.4681575 ]]
Iteration 800 of 1000: loss=0.255 " + "l1=0.036" + "l2=0.219 f=-0.569 shape=(1, 9000, 1)
logits [[ 0.06065354 -0.01103938  0.09964002 -2.424728  ]]
Iteration 900 of 1000: loss=0.248 " + "l1=0.0335" + "l2=0.215 f=-0.563 shape=(1, 9000, 1)
logits [[ 0.07876968 -0.01246511  0.09060933 -2.4087615 ]]
--- 322.86337065696716 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00956 " + "l1=0.00956" + "l2=0 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.0199492 -1.39731    1.0638123 -3.7205484]]
Iteration 100 of 1000: loss=0.00939 " + "l1=0.00923" + "l2=0.000156 f=-0.51 shape=(1, 9000, 1)
logits [[ 1.9849999 -1.3865879  1.0620216 -3.701461 ]]
Iteration 200 of 1000: loss=0.00934 " + "l1=0.00921" + "l2=0.000136 f=-0.51 shape=(1, 9000, 1)
logits [[ 1.9824252 -1.385647   1.0619041 -3.700026 ]]
Iteration 300 of 1000: loss=0.00933 " + "l1=0.00916" + "l2=0.00017 f=-0.511 shape=(1, 9000, 1)
logits [[ 1.9777231 -1.3839523  1.0616641 -3.697664 ]]
Iteration 400 of 1000: loss=0.00931 " + "l1=0.00911" + "l2=0.000195 f=-0.511 shape=(1, 9000, 1)
logits [[ 1.9727621 -1.3820509  1.0613545 -3.6951764]]
Iteration 500 of 1000: loss=0.00932 " + "l1=0.00907" + "l2=0.000253 f=-0.511 shape=(1, 9000, 1)
logits [[ 1.9677143 -1.3799963  1.0609827 -3.6926956]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0956 " + "l1=0.0956" + "l2=0 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.0199492 -1.39731    1.0638123 -3.7205484]]
Iteration 100 of 1000: loss=0.0807 " + "l1=0.0732" + "l2=0.00753 f=-0.523 shape=(1, 9000, 1)
logits [[ 1.7808975 -1.3128695  1.0493456 -3.607662 ]]
Iteration 200 of 1000: loss=0.0741 " + "l1=0.063" + "l2=0.0111 f=-0.53 shape=(1, 9000, 1)
logits [[ 1.6760584 -1.269204   1.0463357 -3.5727704]]
Iteration 300 of 1000: loss=0.068 " + "l1=0.0531" + "l2=0.0149 f=-0.537 shape=(1, 9000, 1)
logits [[ 1.5679164 -1.2143064  1.037142  -3.5379393]]
Iteration 400 of 1000: loss=0.0614 " + "l1=0.0424" + "l2=0.0189 f=-0.546 shape=(1, 9000, 1)
logits [[ 1.4521382 -1.1512523  1.0277132 -3.5107312]]
Iteration 500 of 1000: loss=0.055 " + "l1=0.0326" + "l2=0.0224 f=-0.552 shape=(1, 9000, 1)
logits [[ 1.3502929 -1.1007005  1.024548  -3.481055 ]]
Iteration 600 of 1000: loss=0.048 " + "l1=0.0222" + "l2=0.0258 f=-0.558 shape=(1, 9000, 1)
logits [[ 1.2457473 -1.0511163  1.0237932 -3.450136 ]]
Iteration 700 of 1000: loss=0.0411 " + "l1=0.0131" + "l2=0.0279 f=-0.563 shape=(1, 9000, 1)
logits [[ 1.158709  -1.0175027  1.0272777 -3.422072 ]]
Iteration 800 of 1000: loss=0.0356 " + "l1=0.00592" + "l2=0.0296 f=-0.566 shape=(1, 9000, 1)
logits [[ 1.0941825  -0.99782294  1.0349418  -3.3935132 ]]
Iteration 900 of 1000: loss=0.0303 " + "l1=0" + "l2=0.0303 f=-0.566 shape=(1, 9000, 1)
logits [[ 1.0418769  -0.98696417  1.0433116  -3.3641212 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0526 " + "l1=0.0526" + "l2=0 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.0199492 -1.39731    1.0638123 -3.7205484]]
Iteration 100 of 1000: loss=0.0479 " + "l1=0.0454" + "l2=0.00254 f=-0.516 shape=(1, 9000, 1)
logits [[ 1.8812243 -1.3519824  1.0561731 -3.650039 ]]
Iteration 200 of 1000: loss=0.0463 " + "l1=0.0429" + "l2=0.00336 f=-0.519 shape=(1, 9000, 1)
logits [[ 1.8342699 -1.3329513  1.0537152 -3.629713 ]]
Iteration 300 of 1000: loss=0.0448 " + "l1=0.0406" + "l2=0.00423 f=-0.521 shape=(1, 9000, 1)
logits [[ 1.787765  -1.3122001  1.0495801 -3.6100996]]
Iteration 400 of 1000: loss=0.0434 " + "l1=0.0383" + "l2=0.00512 f=-0.524 shape=(1, 9000, 1)
logits [[ 1.742866  -1.2914791  1.046519  -3.5953324]]
Iteration 500 of 1000: loss=0.0421 " + "l1=0.0361" + "l2=0.00592 f=-0.527 shape=(1, 9000, 1)
logits [[ 1.7002002 -1.2699224  1.0429674 -3.5806963]]
Iteration 600 of 1000: loss=0.0407 " + "l1=0.0339" + "l2=0.00676 f=-0.529 shape=(1, 9000, 1)
logits [[ 1.6570426 -1.247953   1.039825  -3.5661244]]
Iteration 700 of 1000: loss=0.0393 " + "l1=0.0317" + "l2=0.00761 f=-0.532 shape=(1, 9000, 1)
logits [[ 1.612892  -1.223998   1.0369031 -3.5534155]]
Iteration 800 of 1000: loss=0.0378 " + "l1=0.0292" + "l2=0.00866 f=-0.535 shape=(1, 9000, 1)
logits [[ 1.5642632 -1.1949552  1.0337723 -3.5440106]]
Iteration 900 of 1000: loss=0.0363 " + "l1=0.0267" + "l2=0.00965 f=-0.538 shape=(1, 9000, 1)
logits [[ 1.5194001 -1.172737   1.0341244 -3.5325217]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0741 " + "l1=0.0741" + "l2=0 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.0199492 -1.39731    1.0638123 -3.7205484]]
Iteration 100 of 1000: loss=0.065 " + "l1=0.0603" + "l2=0.00472 f=-0.519 shape=(1, 9000, 1)
logits [[ 1.830789  -1.3326997  1.0528944 -3.628626 ]]
Iteration 200 of 1000: loss=0.0614 " + "l1=0.0547" + "l2=0.00668 f=-0.524 shape=(1, 9000, 1)
logits [[ 1.7552483 -1.3018682  1.0490185 -3.5985212]]
Iteration 300 of 1000: loss=0.0581 " + "l1=0.0496" + "l2=0.00855 f=-0.529 shape=(1, 9000, 1)
logits [[ 1.6844407 -1.2693254  1.0445614 -3.573944 ]]
Iteration 400 of 1000: loss=0.055 " + "l1=0.0447" + "l2=0.0103 f=-0.533 shape=(1, 9000, 1)
logits [[ 1.6161746 -1.2350795  1.0395685 -3.552145 ]]
Iteration 500 of 1000: loss=0.0515 " + "l1=0.0391" + "l2=0.0124 f=-0.539 shape=(1, 9000, 1)
logits [[ 1.5352719 -1.1867982  1.0307473 -3.5348632]]
Iteration 600 of 1000: loss=0.048 " + "l1=0.0336" + "l2=0.0144 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.4615052 -1.1471293  1.0281014 -3.517235 ]]
Iteration 700 of 1000: loss=0.0444 " + "l1=0.0281" + "l2=0.0163 f=-0.548 shape=(1, 9000, 1)
logits [[ 1.3919209 -1.1129799  1.0292679 -3.4987268]]
Iteration 800 of 1000: loss=0.0404 " + "l1=0.0221" + "l2=0.0182 f=-0.552 shape=(1, 9000, 1)
logits [[ 1.317075  -1.0787578  1.0315288 -3.4779692]]
Iteration 900 of 1000: loss=0.0365 " + "l1=0.0165" + "l2=0.0199 f=-0.557 shape=(1, 9000, 1)
logits [[ 1.2463238 -1.0517333  1.0331926 -3.4540238]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0849 " + "l1=0.0849" + "l2=0 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.0199492 -1.39731    1.0638123 -3.7205484]]
Iteration 100 of 1000: loss=0.0731 " + "l1=0.0671" + "l2=0.00599 f=-0.521 shape=(1, 9000, 1)
logits [[ 1.8070997 -1.3236786  1.0514418 -3.6187923]]
Iteration 200 of 1000: loss=0.0681 " + "l1=0.0593" + "l2=0.00878 f=-0.527 shape=(1, 9000, 1)
logits [[ 1.7159363 -1.2863331  1.0480475 -3.5856764]]
Iteration 300 of 1000: loss=0.0636 " + "l1=0.0523" + "l2=0.0113 f=-0.532 shape=(1, 9000, 1)
logits [[ 1.6330836 -1.2482129  1.0433354 -3.558039 ]]
Iteration 400 of 1000: loss=0.059 " + "l1=0.0447" + "l2=0.0143 f=-0.539 shape=(1, 9000, 1)
logits [[ 1.5362234 -1.1930677  1.0327775 -3.5327082]]
Iteration 500 of 1000: loss=0.054 " + "l1=0.0369" + "l2=0.0171 f=-0.546 shape=(1, 9000, 1)
logits [[ 1.4437649 -1.1444054  1.0282682 -3.5107412]]
Iteration 600 of 1000: loss=0.0492 " + "l1=0.0294" + "l2=0.0198 f=-0.55 shape=(1, 9000, 1)
logits [[ 1.3584923 -1.1026177  1.0269417 -3.48474  ]]
Iteration 700 of 1000: loss=0.0437 " + "l1=0.0213" + "l2=0.0224 f=-0.556 shape=(1, 9000, 1)
logits [[ 1.2680658 -1.0613894  1.0280935 -3.4588737]]
Iteration 800 of 1000: loss=0.0385 " + "l1=0.0143" + "l2=0.0242 f=-0.561 shape=(1, 9000, 1)
logits [[ 1.1937377 -1.0350742  1.0322946 -3.433114 ]]
Iteration 900 of 1000: loss=0.0341 " + "l1=0.00847" + "l2=0.0256 f=-0.563 shape=(1, 9000, 1)
logits [[ 1.1312767 -1.0145127  1.0358024 -3.4059992]]
--- 296.46183371543884 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0574 " + "l1=0.0574" + "l2=0 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.0199492 -1.39731    1.0638123 -3.7205484]]
Iteration 100 of 1000: loss=0.0565 " + "l1=0.0559" + "l2=0.000518 f=-0.508 shape=(1, 9000, 1)
logits [[ 1.9481143 -1.3686186  1.0346476 -3.6466334]]
Iteration 200 of 1000: loss=0.0562 " + "l1=0.0556" + "l2=0.000603 f=-0.508 shape=(1, 9000, 1)
logits [[ 1.9305435 -1.3604884  1.0260574 -3.6287906]]
Iteration 300 of 1000: loss=0.056 " + "l1=0.0552" + "l2=0.000765 f=-0.508 shape=(1, 9000, 1)
logits [[ 1.911402  -1.3514912  1.016701  -3.609432 ]]
Iteration 400 of 1000: loss=0.0558 " + "l1=0.0549" + "l2=0.000906 f=-0.508 shape=(1, 9000, 1)
logits [[ 1.8939552 -1.3430836  1.0079924 -3.5916326]]
Iteration 500 of 1000: loss=0.0556 " + "l1=0.0545" + "l2=0.00108 f=-0.508 shape=(1, 9000, 1)
logits [[ 1.8779907  -1.3353213   0.99980396 -3.5751634 ]]
Iteration 600 of 1000: loss=0.0555 " + "l1=0.0542" + "l2=0.00132 f=-0.508 shape=(1, 9000, 1)
logits [[ 1.8625313  -1.3276019   0.99189657 -3.5596092 ]]
Iteration 700 of 1000: loss=0.0554 " + "l1=0.0539" + "l2=0.00151 f=-0.508 shape=(1, 9000, 1)
logits [[ 1.8479707 -1.3205669  0.9844689 -3.5448475]]
Iteration 800 of 1000: loss=0.0554 " + "l1=0.0537" + "l2=0.00168 f=-0.508 shape=(1, 9000, 1)
logits [[ 1.8357471  -1.3152367   0.97848684 -3.5319679 ]]
Iteration 900 of 1000: loss=0.0553 " + "l1=0.0535" + "l2=0.00182 f=-0.508 shape=(1, 9000, 1)
logits [[ 1.8246635 -1.3103104  0.9731629 -3.5204186]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.574 " + "l1=0.574" + "l2=0 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.0199492 -1.39731    1.0638123 -3.7205484]]
Iteration 100 of 1000: loss=0.496 " + "l1=0.458" + "l2=0.0375 f=-0.513 shape=(1, 9000, 1)
logits [[ 1.4286503 -1.15333    0.8244547 -3.1524773]]
Iteration 200 of 1000: loss=0.458 " + "l1=0.403" + "l2=0.0545 f=-0.517 shape=(1, 9000, 1)
logits [[ 1.138575  -1.028947   0.7171623 -2.8958783]]
Iteration 300 of 1000: loss=0.428 " + "l1=0.358" + "l2=0.0702 f=-0.517 shape=(1, 9000, 1)
logits [[ 0.90327376 -0.9351455   0.63895196 -2.6743753 ]]
Iteration 400 of 1000: loss=0.403 " + "l1=0.319" + "l2=0.0841 f=-0.516 shape=(1, 9000, 1)
logits [[ 0.70086014 -0.8593523   0.5811958  -2.4853652 ]]
Iteration 500 of 1000: loss=0.382 " + "l1=0.287" + "l2=0.0947 f=-0.513 shape=(1, 9000, 1)
logits [[ 0.53922784 -0.7968605   0.5375135  -2.330351  ]]
Iteration 600 of 1000: loss=0.367 " + "l1=0.274" + "l2=0.0929 f=-0.504 shape=(1, 9000, 1)
logits [[ 0.5041557  -0.78516084  0.5023843  -2.2356253 ]]
Iteration 700 of 1000: loss=0.356 " + "l1=0.263" + "l2=0.0928 f=-0.496 shape=(1, 9000, 1)
logits [[ 0.47446772 -0.7764848   0.4749946  -2.1571145 ]]
Iteration 800 of 1000: loss=0.348 " + "l1=0.254" + "l2=0.0933 f=-0.489 shape=(1, 9000, 1)
logits [[ 0.45522806 -0.7777744   0.45510614 -2.0874832 ]]
Iteration 900 of 1000: loss=0.34 " + "l1=0.245" + "l2=0.095 f=-0.482 shape=(1, 9000, 1)
logits [[ 0.43427953 -0.7786161   0.431926   -2.0173497 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.74 " + "l1=5.74" + "l2=0 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.0199492 -1.39731    1.0638123 -3.7205484]]
Iteration 100 of 1000: loss=1.89 " + "l1=0.629" + "l2=1.26 f=-0.431 shape=(1, 9000, 1)
logits [[-0.11679707 -0.76698506 -0.10620756 -0.7347666 ]]
Iteration 200 of 1000: loss=1.15 " + "l1=0.0159" + "l2=1.13 f=-0.41 shape=(1, 9000, 1)
logits [[-0.2857312  -0.7626882  -0.28852636 -0.30167735]]
Iteration 300 of 1000: loss=0.88 " + "l1=0" + "l2=0.88 f=-0.409 shape=(1, 9000, 1)
logits [[-0.31953117 -0.7328599  -0.29276565 -0.29182997]]
Iteration 400 of 1000: loss=0.737 " + "l1=0.00726" + "l2=0.73 f=-0.406 shape=(1, 9000, 1)
logits [[-0.3052049  -0.74411917 -0.2837361  -0.2909971 ]]
Iteration 500 of 1000: loss=0.641 " + "l1=0" + "l2=0.641 f=-0.405 shape=(1, 9000, 1)
logits [[-0.3063782  -0.76081425 -0.2814278  -0.27202052]]
Iteration 600 of 1000: loss=0.571 " + "l1=0" + "l2=0.571 f=-0.401 shape=(1, 9000, 1)
logits [[-0.31624454 -0.79394114 -0.24819034 -0.24562699]]
Iteration 700 of 1000: loss=0.511 " + "l1=0" + "l2=0.511 f=-0.386 shape=(1, 9000, 1)
logits [[-0.22370337 -0.88633823 -0.21820918 -0.21576801]]
Iteration 800 of 1000: loss=0.482 " + "l1=0.0157" + "l2=0.467 f=-0.382 shape=(1, 9000, 1)
logits [[-0.20451099 -0.9366701  -0.1855418  -0.20119423]]
Iteration 900 of 1000: loss=0.443 " + "l1=0" + "l2=0.443 f=-0.379 shape=(1, 9000, 1)
logits [[-0.19951421 -0.9816925  -0.17092733 -0.16530943]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.16 " + "l1=3.16" + "l2=0 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.0199492 -1.39731    1.0638123 -3.7205484]]
Iteration 100 of 1000: loss=1.56 " + "l1=1.04" + "l2=0.521 f=-0.475 shape=(1, 9000, 1)
logits [[ 0.23715615 -0.7276737   0.2389427  -1.6499352 ]]
Iteration 200 of 1000: loss=1.13 " + "l1=0.513" + "l2=0.618 f=-0.432 shape=(1, 9000, 1)
logits [[-0.03409436 -0.6943508  -0.03279387 -0.9657468 ]]
Iteration 300 of 1000: loss=0.835 " + "l1=0.189" + "l2=0.646 f=-0.411 shape=(1, 9000, 1)
logits [[-0.19650653 -0.71090937 -0.19716893 -0.5403637 ]]
Iteration 400 of 1000: loss=0.616 " + "l1=0.0037" + "l2=0.613 f=-0.407 shape=(1, 9000, 1)
logits [[-0.30789855 -0.75125694 -0.28154805 -0.28827363]]
Iteration 500 of 1000: loss=0.514 " + "l1=0.00383" + "l2=0.51 f=-0.405 shape=(1, 9000, 1)
logits [[-0.27040815 -0.8184079  -0.26243567 -0.26939833]]
Iteration 600 of 1000: loss=0.464 " + "l1=0.00137" + "l2=0.462 f=-0.398 shape=(1, 9000, 1)
logits [[-0.25021926 -0.86078626 -0.23923856 -0.24172848]]
Iteration 700 of 1000: loss=0.431 " + "l1=0.00431" + "l2=0.426 f=-0.388 shape=(1, 9000, 1)
logits [[-0.21343763 -0.9176563  -0.20579237 -0.21363527]]
Iteration 800 of 1000: loss=0.408 " + "l1=0.00553" + "l2=0.403 f=-0.382 shape=(1, 9000, 1)
logits [[-0.19586435 -0.9585529  -0.1824236  -0.19248328]]
Iteration 900 of 1000: loss=0.387 " + "l1=0" + "l2=0.387 f=-0.379 shape=(1, 9000, 1)
logits [[-0.19164208 -0.9984245  -0.16994305 -0.15474346]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.87 " + "l1=1.87" + "l2=0 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.0199492 -1.39731    1.0638123 -3.7205484]]
Iteration 100 of 1000: loss=1.14 " + "l1=0.863" + "l2=0.276 f=-0.51 shape=(1, 9000, 1)
logits [[ 0.46892634 -0.7949597   0.46963155 -2.1846087 ]]
Iteration 200 of 1000: loss=0.941 " + "l1=0.659" + "l2=0.282 f=-0.477 shape=(1, 9000, 1)
logits [[ 0.27913347 -0.7163035   0.27908584 -1.7494271 ]]
Iteration 300 of 1000: loss=0.797 " + "l1=0.467" + "l2=0.33 f=-0.455 shape=(1, 9000, 1)
logits [[ 0.08661643 -0.6703293   0.10183746 -1.3361821 ]]
Iteration 400 of 1000: loss=0.677 " + "l1=0.306" + "l2=0.37 f=-0.434 shape=(1, 9000, 1)
logits [[-0.03823236 -0.6850297  -0.03427209 -0.9772478 ]]
Iteration 500 of 1000: loss=0.583 " + "l1=0.204" + "l2=0.38 f=-0.419 shape=(1, 9000, 1)
logits [[-0.10943805 -0.7366496  -0.1012013  -0.7276137 ]]
Iteration 600 of 1000: loss=0.508 " + "l1=0.107" + "l2=0.402 f=-0.407 shape=(1, 9000, 1)
logits [[-0.17606305 -0.7721213  -0.17603874 -0.5041552 ]]
Iteration 700 of 1000: loss=0.459 " + "l1=0.0466" + "l2=0.412 f=-0.399 shape=(1, 9000, 1)
logits [[-0.22309542 -0.79290396 -0.21785565 -0.36111042]]
Iteration 800 of 1000: loss=0.415 " + "l1=0.00456" + "l2=0.411 f=-0.391 shape=(1, 9000, 1)
logits [[-0.2547687  -0.81679124 -0.23940028 -0.25343958]]
Iteration 900 of 1000: loss=0.388 " + "l1=0.00486" + "l2=0.383 f=-0.384 shape=(1, 9000, 1)
logits [[-0.24267486 -0.8402597  -0.21842487 -0.233394  ]]
--- 322.6645109653473 seconds ---
Adv result:3
Loading record A03126
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0286 " + "l1=0.0286" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 3.5122619   0.64821863  1.6679127  -9.237142  ]]
Iteration 100 of 1000: loss=0.027 " + "l1=0.0261" + "l2=0.000928 f=-0.868 shape=(1, 9000, 1)
logits [[ 3.371702    0.76100844  1.6283398  -9.233842  ]]
Iteration 200 of 1000: loss=0.0266 " + "l1=0.0254" + "l2=0.00116 f=-0.871 shape=(1, 9000, 1)
logits [[ 3.335786   0.7908358  1.6176451 -9.229993 ]]
Iteration 300 of 1000: loss=0.0263 " + "l1=0.0248" + "l2=0.00147 f=-0.874 shape=(1, 9000, 1)
logits [[ 3.301771    0.81776744  1.6086859  -9.225115  ]]
Iteration 400 of 1000: loss=0.0261 " + "l1=0.0243" + "l2=0.00179 f=-0.877 shape=(1, 9000, 1)
logits [[ 3.2730398   0.83936214  1.6027209  -9.221613  ]]
Iteration 500 of 1000: loss=0.026 " + "l1=0.0239" + "l2=0.00202 f=-0.879 shape=(1, 9000, 1)
logits [[ 3.250245   0.8557517  1.5988448 -9.219033 ]]
Iteration 600 of 1000: loss=0.0259 " + "l1=0.0236" + "l2=0.00223 f=-0.88 shape=(1, 9000, 1)
logits [[ 3.232325    0.86894745  1.5956507  -9.216961  ]]
Iteration 700 of 1000: loss=0.0258 " + "l1=0.0234" + "l2=0.00247 f=-0.881 shape=(1, 9000, 1)
logits [[ 3.2172673  0.879984   1.5933527 -9.215626 ]]
Iteration 800 of 1000: loss=0.0258 " + "l1=0.0232" + "l2=0.00265 f=-0.882 shape=(1, 9000, 1)
logits [[ 3.204751    0.88926595  1.5915761  -9.214366  ]]
Iteration 900 of 1000: loss=0.0257 " + "l1=0.023" + "l2=0.00274 f=-0.883 shape=(1, 9000, 1)
logits [[ 3.1942813   0.89707047  1.5902904  -9.213077  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.286 " + "l1=0.286" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 3.5122619   0.64821863  1.6679127  -9.237142  ]]
Iteration 100 of 1000: loss=0.125 " + "l1=0.0118" + "l2=0.113 f=-1.03 shape=(1, 9000, 1)
logits [[ 1.9712627  1.8529103  1.3277774 -9.2759495]]
Iteration 200 of 1000: loss=0.0929 " + "l1=0" + "l2=0.0929 f=-1.04 shape=(1, 9000, 1)
logits [[ 1.8591719  1.8786819  1.3448908 -9.239182 ]]
Iteration 300 of 1000: loss=0.0811 " + "l1=0" + "l2=0.0811 f=-1.03 shape=(1, 9000, 1)
logits [[ 1.8530782  1.856419   1.3635656 -9.211172 ]]
Iteration 400 of 1000: loss=0.0748 " + "l1=0" + "l2=0.0748 f=-1.03 shape=(1, 9000, 1)
logits [[ 1.8466283  1.8495319  1.375743  -9.198417 ]]
Iteration 500 of 1000: loss=0.0705 " + "l1=0" + "l2=0.0705 f=-1.03 shape=(1, 9000, 1)
logits [[ 1.8398316  1.8530487  1.3841386 -9.199978 ]]
Iteration 600 of 1000: loss=0.0667 " + "l1=0.00128" + "l2=0.0654 f=-1.03 shape=(1, 9000, 1)
logits [[ 1.8558306  1.8430741  1.3919457 -9.197713 ]]
Iteration 700 of 1000: loss=0.0632 " + "l1=0" + "l2=0.0632 f=-1.03 shape=(1, 9000, 1)
logits [[ 1.8472801  1.8504435  1.3952177 -9.199119 ]]
Iteration 800 of 1000: loss=0.0606 " + "l1=0" + "l2=0.0606 f=-1.03 shape=(1, 9000, 1)
logits [[ 1.8353151  1.8584287  1.3976432 -9.203949 ]]
Iteration 900 of 1000: loss=0.0569 " + "l1=7.9e-05" + "l2=0.0568 f=-1.03 shape=(1, 9000, 1)
logits [[ 1.849579   1.8487895  1.4014891 -9.205386 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.158 " + "l1=0.158" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 3.5122619   0.64821863  1.6679127  -9.237142  ]]
Iteration 100 of 1000: loss=0.112 " + "l1=0.0853" + "l2=0.0264 f=-0.931 shape=(1, 9000, 1)
logits [[ 2.7873552  1.2361771  1.4833336 -9.23263  ]]
Iteration 200 of 1000: loss=0.0965 " + "l1=0.0581" + "l2=0.0383 f=-0.966 shape=(1, 9000, 1)
logits [[ 2.4864955  1.4294335  1.449047  -9.228091 ]]
Iteration 300 of 1000: loss=0.0859 " + "l1=0.0378" + "l2=0.0481 f=-0.991 shape=(1, 9000, 1)
logits [[ 2.2543828  1.5672313  1.4257116 -9.211473 ]]
Iteration 400 of 1000: loss=0.0766 " + "l1=0.0204" + "l2=0.0561 f=-1.01 shape=(1, 9000, 1)
logits [[ 2.0619068  1.6904866  1.409592  -9.200036 ]]
Iteration 500 of 1000: loss=0.0681 " + "l1=0.00431" + "l2=0.0638 f=-1.03 shape=(1, 9000, 1)
logits [[ 1.8920802  1.8137268  1.3908595 -9.199314 ]]
Iteration 600 of 1000: loss=0.0608 " + "l1=0.000605" + "l2=0.0602 f=-1.03 shape=(1, 9000, 1)
logits [[ 1.85126    1.8402566  1.3897562 -9.191568 ]]
Iteration 700 of 1000: loss=0.056 " + "l1=1.82e-05" + "l2=0.056 f=-1.03 shape=(1, 9000, 1)
logits [[ 1.849759   1.8494288  1.3879526 -9.189697 ]]
Iteration 800 of 1000: loss=0.0521 " + "l1=0.0005" + "l2=0.0516 f=-1.02 shape=(1, 9000, 1)
logits [[ 1.8626652  1.8535776  1.3838856 -9.189953 ]]
Iteration 900 of 1000: loss=0.0492 " + "l1=0" + "l2=0.0492 f=-1.02 shape=(1, 9000, 1)
logits [[ 1.8576348  1.8630463  1.3815396 -9.190049 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0931 " + "l1=0.0931" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 3.5122619   0.64821863  1.6679127  -9.237142  ]]
Iteration 100 of 1000: loss=0.0771 " + "l1=0.0685" + "l2=0.00862 f=-0.897 shape=(1, 9000, 1)
logits [[ 3.098599   0.9915826  1.5503324 -9.226724 ]]
Iteration 200 of 1000: loss=0.0719 " + "l1=0.0595" + "l2=0.0124 f=-0.913 shape=(1, 9000, 1)
logits [[ 2.9368627  1.106191   1.524364  -9.219317 ]]
Iteration 300 of 1000: loss=0.0681 " + "l1=0.0521" + "l2=0.016 f=-0.926 shape=(1, 9000, 1)
logits [[ 2.8005638  1.1973054  1.5068654 -9.20845  ]]
Iteration 400 of 1000: loss=0.0654 " + "l1=0.0465" + "l2=0.0189 f=-0.936 shape=(1, 9000, 1)
logits [[ 2.6967137  1.2650176  1.493584  -9.19764  ]]
Iteration 500 of 1000: loss=0.0634 " + "l1=0.0424" + "l2=0.0209 f=-0.943 shape=(1, 9000, 1)
logits [[ 2.6182415  1.312529   1.4869235 -9.191106 ]]
Iteration 600 of 1000: loss=0.0617 " + "l1=0.0391" + "l2=0.0227 f=-0.95 shape=(1, 9000, 1)
logits [[ 2.5552018  1.3535907  1.4803135 -9.187516 ]]
Iteration 700 of 1000: loss=0.0602 " + "l1=0.0358" + "l2=0.0243 f=-0.956 shape=(1, 9000, 1)
logits [[ 2.495366   1.393063   1.4726114 -9.185038 ]]
Iteration 800 of 1000: loss=0.0588 " + "l1=0.0331" + "l2=0.0257 f=-0.961 shape=(1, 9000, 1)
logits [[ 2.4463928  1.4265954  1.4655393 -9.180826 ]]
Iteration 900 of 1000: loss=0.0575 " + "l1=0.0309" + "l2=0.0266 f=-0.964 shape=(1, 9000, 1)
logits [[ 2.4054291  1.4550658  1.4605922 -9.1761   ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.125 " + "l1=0.125" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 3.5122619   0.64821863  1.6679127  -9.237142  ]]
Iteration 100 of 1000: loss=0.0965 " + "l1=0.08" + "l2=0.0165 f=-0.913 shape=(1, 9000, 1)
logits [[ 2.9441824  1.116029   1.5143768 -9.228315 ]]
Iteration 200 of 1000: loss=0.0869 " + "l1=0.0635" + "l2=0.0234 f=-0.938 shape=(1, 9000, 1)
logits [[ 2.7173545  1.2662268  1.4881562 -9.222009 ]]
Iteration 300 of 1000: loss=0.0803 " + "l1=0.0518" + "l2=0.0286 f=-0.955 shape=(1, 9000, 1)
logits [[ 2.5493333  1.3660914  1.4723185 -9.209722 ]]
Iteration 400 of 1000: loss=0.0752 " + "l1=0.0413" + "l2=0.0338 f=-0.972 shape=(1, 9000, 1)
logits [[ 2.4007146  1.4559946  1.4553283 -9.19975  ]]
Iteration 500 of 1000: loss=0.0712 " + "l1=0.0335" + "l2=0.0377 f=-0.983 shape=(1, 9000, 1)
logits [[ 2.2885318  1.5226611  1.4470793 -9.191241 ]]
Iteration 600 of 1000: loss=0.0678 " + "l1=0.0262" + "l2=0.0416 f=-0.993 shape=(1, 9000, 1)
logits [[ 2.187711   1.5896417  1.4381008 -9.187788 ]]
Iteration 700 of 1000: loss=0.0648 " + "l1=0.0202" + "l2=0.0446 f=-1 shape=(1, 9000, 1)
logits [[ 2.1073506  1.6458087  1.4301037 -9.182821 ]]
Iteration 800 of 1000: loss=0.0617 " + "l1=0.0143" + "l2=0.0474 f=-1.01 shape=(1, 9000, 1)
logits [[ 2.0286481  1.702167   1.4235035 -9.1790695]]
Iteration 900 of 1000: loss=0.058 " + "l1=0.00693" + "l2=0.0511 f=-1.01 shape=(1, 9000, 1)
logits [[ 1.934713   1.7762595  1.4092677 -9.174069 ]]
--- 322.644743680954 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0184 " + "l1=0.0184" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 3.5122619   0.64821863  1.6679127  -9.237142  ]]
Iteration 100 of 1000: loss=0.018 " + "l1=0.0177" + "l2=0.000312 f=-0.861 shape=(1, 9000, 1)
logits [[ 3.4362235  0.6857848  1.6704654 -9.235877 ]]
Iteration 200 of 1000: loss=0.0179 " + "l1=0.0175" + "l2=0.000334 f=-0.862 shape=(1, 9000, 1)
logits [[ 3.4237173  0.6910015  1.6715437 -9.233956 ]]
Iteration 300 of 1000: loss=0.0178 " + "l1=0.0174" + "l2=0.000419 f=-0.863 shape=(1, 9000, 1)
logits [[ 3.4096625  0.6971516  1.6726645 -9.231989 ]]
Iteration 400 of 1000: loss=0.0178 " + "l1=0.0172" + "l2=0.000524 f=-0.864 shape=(1, 9000, 1)
logits [[ 3.3968291  0.7030064  1.6737425 -9.230483 ]]
Iteration 500 of 1000: loss=0.0177 " + "l1=0.0171" + "l2=0.000593 f=-0.865 shape=(1, 9000, 1)
logits [[ 3.3855822   0.70818424  1.6748872  -9.229563  ]]
Iteration 600 of 1000: loss=0.0178 " + "l1=0.017" + "l2=0.000768 f=-0.866 shape=(1, 9000, 1)
logits [[ 3.3755717  0.7129565  1.6760305 -9.229063 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.184 " + "l1=0.184" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 3.5122619   0.64821863  1.6679127  -9.237142  ]]
Iteration 100 of 1000: loss=0.143 " + "l1=0.123" + "l2=0.0201 f=-0.924 shape=(1, 9000, 1)
logits [[ 2.9133      0.94359887  1.6859537  -9.238095  ]]
Iteration 200 of 1000: loss=0.123 " + "l1=0.0868" + "l2=0.0357 f=-0.962 shape=(1, 9000, 1)
logits [[ 2.566288   1.113016   1.6982052 -9.2268715]]
Iteration 300 of 1000: loss=0.109 " + "l1=0.061" + "l2=0.0475 f=-0.988 shape=(1, 9000, 1)
logits [[ 2.3148394  1.2308958  1.7043997 -9.202479 ]]
Iteration 400 of 1000: loss=0.0985 " + "l1=0.0412" + "l2=0.0573 f=-1.01 shape=(1, 9000, 1)
logits [[ 2.119941   1.3238548  1.7081085 -9.182032 ]]
Iteration 500 of 1000: loss=0.0908 " + "l1=0.0245" + "l2=0.0663 f=-1.02 shape=(1, 9000, 1)
logits [[ 1.9483056  1.4205894  1.703771  -9.168318 ]]
Iteration 600 of 1000: loss=0.0842 " + "l1=0.0107" + "l2=0.0735 f=-1.04 shape=(1, 9000, 1)
logits [[ 1.8099136  1.4967633  1.7027439 -9.160828 ]]
Iteration 700 of 1000: loss=0.078 " + "l1=0.000315" + "l2=0.0776 f=-1.05 shape=(1, 9000, 1)
logits [[ 1.7065802  1.5534508  1.7034258 -9.150106 ]]
Iteration 800 of 1000: loss=0.0735 " + "l1=0.000996" + "l2=0.0725 f=-1.04 shape=(1, 9000, 1)
logits [[ 1.7160518  1.5433079  1.7060931 -9.132402 ]]
Iteration 900 of 1000: loss=0.0698 " + "l1=0.00067" + "l2=0.0691 f=-1.04 shape=(1, 9000, 1)
logits [[ 1.7191277  1.5316625  1.7124251 -9.117911 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.101 " + "l1=0.101" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 3.5122619   0.64821863  1.6679127  -9.237142  ]]
Iteration 100 of 1000: loss=0.0889 " + "l1=0.083" + "l2=0.00588 f=-0.89 shape=(1, 9000, 1)
logits [[ 3.1890497  0.8058929  1.6792179 -9.235617 ]]
Iteration 200 of 1000: loss=0.0839 " + "l1=0.0744" + "l2=0.00948 f=-0.907 shape=(1, 9000, 1)
logits [[ 3.0380063  0.8789734  1.6850654 -9.232015 ]]
Iteration 300 of 1000: loss=0.0803 " + "l1=0.0677" + "l2=0.0127 f=-0.92 shape=(1, 9000, 1)
logits [[ 2.9176939   0.93860495  1.6875407  -9.22226   ]]
Iteration 400 of 1000: loss=0.0774 " + "l1=0.0615" + "l2=0.0159 f=-0.93 shape=(1, 9000, 1)
logits [[ 2.8104954   0.98956585  1.6922839  -9.211584  ]]
Iteration 500 of 1000: loss=0.0749 " + "l1=0.0556" + "l2=0.0193 f=-0.94 shape=(1, 9000, 1)
logits [[ 2.7085702  1.0369816  1.6975665 -9.204032 ]]
Iteration 600 of 1000: loss=0.0729 " + "l1=0.0516" + "l2=0.0213 f=-0.947 shape=(1, 9000, 1)
logits [[ 2.638884   1.0701423  1.7005324 -9.196891 ]]
Iteration 700 of 1000: loss=0.0713 " + "l1=0.0488" + "l2=0.0225 f=-0.951 shape=(1, 9000, 1)
logits [[ 2.5906718  1.0923591  1.7036351 -9.1906805]]
Iteration 800 of 1000: loss=0.0698 " + "l1=0.0465" + "l2=0.0234 f=-0.954 shape=(1, 9000, 1)
logits [[ 2.5548806  1.1056274  1.7098538 -9.184541 ]]
Iteration 900 of 1000: loss=0.0685 " + "l1=0.0443" + "l2=0.0242 f=-0.956 shape=(1, 9000, 1)
logits [[ 2.519872   1.11893    1.7144859 -9.177879 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.143 " + "l1=0.143" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 3.5122619   0.64821863  1.6679127  -9.237142  ]]
Iteration 100 of 1000: loss=0.118 " + "l1=0.106" + "l2=0.0121 f=-0.908 shape=(1, 9000, 1)
logits [[ 3.0509517   0.87296265  1.6832255  -9.237169  ]]
Iteration 200 of 1000: loss=0.107 " + "l1=0.0876" + "l2=0.0198 f=-0.932 shape=(1, 9000, 1)
logits [[ 2.8218772   0.98657656  1.6921271  -9.229022  ]]
Iteration 300 of 1000: loss=0.0985 " + "l1=0.0704" + "l2=0.0281 f=-0.955 shape=(1, 9000, 1)
logits [[ 2.6048865  1.0913806  1.6965121 -9.211542 ]]
Iteration 400 of 1000: loss=0.0926 " + "l1=0.0591" + "l2=0.0336 f=-0.968 shape=(1, 9000, 1)
logits [[ 2.4633763  1.1559844  1.7011602 -9.1939745]]
Iteration 500 of 1000: loss=0.088 " + "l1=0.0493" + "l2=0.0387 f=-0.981 shape=(1, 9000, 1)
logits [[ 2.3417573  1.2119861  1.7058338 -9.182873 ]]
Iteration 600 of 1000: loss=0.0844 " + "l1=0.042" + "l2=0.0423 f=-0.99 shape=(1, 9000, 1)
logits [[ 2.2531483  1.2528781  1.7107556 -9.176885 ]]
Iteration 700 of 1000: loss=0.0812 " + "l1=0.0356" + "l2=0.0456 f=-0.997 shape=(1, 9000, 1)
logits [[ 2.1726696  1.2924954  1.7134087 -9.168219 ]]
Iteration 800 of 1000: loss=0.078 " + "l1=0.0298" + "l2=0.0482 f=-1 shape=(1, 9000, 1)
logits [[ 2.1013176  1.3244631  1.7169247 -9.156176 ]]
Iteration 900 of 1000: loss=0.0749 " + "l1=0.0249" + "l2=0.05 f=-1.01 shape=(1, 9000, 1)
logits [[ 2.0412157  1.3504047  1.7203603 -9.141955 ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.164 " + "l1=0.164" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 3.5122619   0.64821863  1.6679127  -9.237142  ]]
Iteration 100 of 1000: loss=0.131 " + "l1=0.115" + "l2=0.0157 f=-0.915 shape=(1, 9000, 1)
logits [[ 2.98398     0.90804297  1.6837274  -9.237332  ]]
Iteration 200 of 1000: loss=0.116 " + "l1=0.0881" + "l2=0.0278 f=-0.948 shape=(1, 9000, 1)
logits [[ 2.686906   1.0539348  1.6947234 -9.227386 ]]
Iteration 300 of 1000: loss=0.105 " + "l1=0.0677" + "l2=0.0369 f=-0.971 shape=(1, 9000, 1)
logits [[ 2.463187   1.1598549  1.6999488 -9.206099 ]]
Iteration 400 of 1000: loss=0.0968 " + "l1=0.0521" + "l2=0.0447 f=-0.988 shape=(1, 9000, 1)
logits [[ 2.291409   1.2398846  1.7044333 -9.187614 ]]
Iteration 500 of 1000: loss=0.0908 " + "l1=0.0389" + "l2=0.0519 f=-1 shape=(1, 9000, 1)
logits [[ 2.14719    1.3086096  1.7089524 -9.1757765]]
Iteration 600 of 1000: loss=0.0859 " + "l1=0.0291" + "l2=0.0568 f=-1.01 shape=(1, 9000, 1)
logits [[ 2.039809   1.3621223  1.7115897 -9.162276 ]]
Iteration 700 of 1000: loss=0.0813 " + "l1=0.0204" + "l2=0.0609 f=-1.02 shape=(1, 9000, 1)
logits [[ 1.9367771  1.4216489  1.7074723 -9.150331 ]]
Iteration 800 of 1000: loss=0.0769 " + "l1=0.0133" + "l2=0.0636 f=-1.03 shape=(1, 9000, 1)
logits [[ 1.8565123  1.463611   1.7067633 -9.137497 ]]
Iteration 900 of 1000: loss=0.0725 " + "l1=0.00486" + "l2=0.0677 f=-1.04 shape=(1, 9000, 1)
logits [[ 1.7634027  1.5110805  1.7086067 -9.126207 ]]
--- 301.0397639274597 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.127 " + "l1=0.127" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 3.5122619   0.64821863  1.6679127  -9.237142  ]]
Iteration 100 of 1000: loss=0.127 " + "l1=0.126" + "l2=0.000459 f=-0.86 shape=(1, 9000, 1)
logits [[ 3.415453    0.70648885  1.6448902  -9.206099  ]]
Iteration 200 of 1000: loss=0.126 " + "l1=0.126" + "l2=0.000544 f=-0.861 shape=(1, 9000, 1)
logits [[ 3.3944066   0.71961486  1.6400533  -9.199876  ]]
Iteration 300 of 1000: loss=0.126 " + "l1=0.126" + "l2=0.000703 f=-0.863 shape=(1, 9000, 1)
logits [[ 3.3726234  0.7329511  1.6354151 -9.192743 ]]
Iteration 400 of 1000: loss=0.126 " + "l1=0.125" + "l2=0.000878 f=-0.864 shape=(1, 9000, 1)
logits [[ 3.35386    0.7441733  1.6317725 -9.186471 ]]
Iteration 500 of 1000: loss=0.126 " + "l1=0.125" + "l2=0.00105 f=-0.865 shape=(1, 9000, 1)
logits [[ 3.338523   0.7535339  1.6288695 -9.181319 ]]
Iteration 600 of 1000: loss=0.126 " + "l1=0.125" + "l2=0.00119 f=-0.866 shape=(1, 9000, 1)
logits [[ 3.3261218  0.7609687  1.6268456 -9.176971 ]]
Iteration 700 of 1000: loss=0.126 " + "l1=0.125" + "l2=0.00126 f=-0.866 shape=(1, 9000, 1)
logits [[ 3.3162522  0.7669532  1.6254052 -9.173492 ]]
Iteration 800 of 1000: loss=0.126 " + "l1=0.125" + "l2=0.00138 f=-0.866 shape=(1, 9000, 1)
logits [[ 3.3083355  0.7715368  1.6245413 -9.170322 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.27 " + "l1=1.27" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 3.5122619   0.64821863  1.6679127  -9.237142  ]]
Iteration 100 of 1000: loss=1.21 " + "l1=1.17" + "l2=0.0356 f=-0.914 shape=(1, 9000, 1)
logits [[ 2.7045453  1.1544839  1.4838254 -8.998638 ]]
Iteration 200 of 1000: loss=1.18 " + "l1=1.12" + "l2=0.0565 f=-0.944 shape=(1, 9000, 1)
logits [[ 2.313205   1.347186   1.4473324 -8.884653 ]]
Iteration 300 of 1000: loss=1.16 " + "l1=1.08" + "l2=0.0752 f=-0.962 shape=(1, 9000, 1)
logits [[ 2.02688    1.4801452  1.425797  -8.779664 ]]
Iteration 400 of 1000: loss=1.14 " + "l1=1.05" + "l2=0.0862 f=-0.971 shape=(1, 9000, 1)
logits [[ 1.8372256  1.5652052  1.4195582 -8.70696  ]]
Iteration 500 of 1000: loss=1.13 " + "l1=1.03" + "l2=0.0966 f=-0.979 shape=(1, 9000, 1)
logits [[ 1.6653305  1.6563821  1.410031  -8.6486025]]
Iteration 600 of 1000: loss=1.12 " + "l1=1.02" + "l2=0.0936 f=-0.968 shape=(1, 9000, 1)
logits [[ 1.6490053  1.6377362  1.4228193 -8.583053 ]]
Iteration 700 of 1000: loss=1.11 " + "l1=1.02" + "l2=0.0896 f=-0.958 shape=(1, 9000, 1)
logits [[ 1.6467129  1.6185653  1.431951  -8.527278 ]]
Iteration 800 of 1000: loss=1.1 " + "l1=1.01" + "l2=0.0872 f=-0.946 shape=(1, 9000, 1)
logits [[ 1.6343911  1.6048126  1.4381764 -8.459679 ]]
Iteration 900 of 1000: loss=1.09 " + "l1=0.999" + "l2=0.0868 f=-0.935 shape=(1, 9000, 1)
logits [[ 1.6067916  1.5931057  1.4444662 -8.383459 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.7 " + "l1=12.7" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 3.5122619   0.64821863  1.6679127  -9.237142  ]]
Iteration 100 of 1000: loss=9.6 " + "l1=8.81" + "l2=0.792 f=-0.906 shape=(1, 9000, 1)
logits [[ 1.2934499  1.2913426  1.3000411 -7.5098915]]
Iteration 200 of 1000: loss=8.77 " + "l1=7.59" + "l2=1.18 f=-0.827 shape=(1, 9000, 1)
logits [[ 1.0672565  1.0663422  1.0746636 -6.5171347]]
Iteration 300 of 1000: loss=8.16 " + "l1=6.59" + "l2=1.57 f=-0.76 shape=(1, 9000, 1)
logits [[ 0.8860853   0.8833595   0.88986707 -5.6982875 ]]
Iteration 400 of 1000: loss=7.62 " + "l1=5.79" + "l2=1.82 f=-0.704 shape=(1, 9000, 1)
logits [[ 0.74483836  0.7439223   0.74422425 -5.0484657 ]]
Iteration 500 of 1000: loss=6.97 " + "l1=4.93" + "l2=2.04 f=-0.627 shape=(1, 9000, 1)
logits [[ 0.6180225   0.58050096  0.60521406 -4.310549  ]]
Iteration 600 of 1000: loss=6.1 " + "l1=3.81" + "l2=2.29 f=-0.537 shape=(1, 9000, 1)
logits [[ 0.39781183  0.4202933   0.41792458 -3.384989  ]]
Iteration 700 of 1000: loss=5.16 " + "l1=2.79" + "l2=2.37 f=-0.416 shape=(1, 9000, 1)
logits [[ 0.2807444   0.27870068  0.28221416 -2.5045664 ]]
Iteration 800 of 1000: loss=4.35 " + "l1=2.04" + "l2=2.31 f=-0.325 shape=(1, 9000, 1)
logits [[ 0.19456464  0.18163247  0.16957043 -1.846212  ]]
Iteration 900 of 1000: loss=3.63 " + "l1=1.42" + "l2=2.21 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.03992865  0.08179219  0.06595284 -1.3396262 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=127 " + "l1=127" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 3.5122619   0.64821863  1.6679127  -9.237142  ]]
Iteration 100 of 1000: loss=60.6 " + "l1=47.1" + "l2=13.6 f=-0.637 shape=(1, 9000, 1)
logits [[ 0.54797184  0.541716    0.5186113  -4.1571107 ]]
Iteration 200 of 1000: loss=24.8 " + "l1=0" + "l2=24.8 f=-0.29 shape=(1, 9000, 1)
logits [[-0.40379843 -0.27179456 -0.24637969 -0.23679525]]
Iteration 300 of 1000: loss=17.8 " + "l1=0" + "l2=17.8 f=-0.31 shape=(1, 9000, 1)
logits [[-0.3619256  -0.32403654 -0.2882627  -0.2661246 ]]
Iteration 400 of 1000: loss=14.8 " + "l1=0" + "l2=14.8 f=-0.325 shape=(1, 9000, 1)
logits [[-0.32214227 -0.34284917 -0.3238952  -0.31233823]]
Iteration 500 of 1000: loss=13.1 " + "l1=0" + "l2=13.1 f=-0.337 shape=(1, 9000, 1)
logits [[-0.33087885 -0.37429047 -0.3249559  -0.31617486]]
Iteration 600 of 1000: loss=11.5 " + "l1=0" + "l2=11.5 f=-0.364 shape=(1, 9000, 1)
logits [[-0.3575623  -0.36678421 -0.37466428 -0.3573133 ]]
Iteration 700 of 1000: loss=10.6 " + "l1=0.254" + "l2=10.4 f=-0.381 shape=(1, 9000, 1)
logits [[-0.4052669  -0.37791082 -0.35696822 -0.38237345]]
Iteration 800 of 1000: loss=9.66 " + "l1=0" + "l2=9.66 f=-0.38 shape=(1, 9000, 1)
logits [[-0.3969459  -0.37997016 -0.3827092  -0.35910854]]
Iteration 900 of 1000: loss=9.04 " + "l1=0" + "l2=9.04 f=-0.383 shape=(1, 9000, 1)
logits [[-0.406952   -0.3701899  -0.39625657 -0.35672566]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=70.1 " + "l1=70.1" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 3.5122619   0.64821863  1.6679127  -9.237142  ]]
Iteration 100 of 1000: loss=39.2 " + "l1=32.1" + "l2=7.16 f=-0.716 shape=(1, 9000, 1)
logits [[ 0.7140804  0.7579448  0.7390297 -5.0749893]]
Iteration 200 of 1000: loss=23.9 " + "l1=10.3" + "l2=13.7 f=-0.46 shape=(1, 9000, 1)
logits [[-0.02385187  0.01880841  0.01552928 -1.8486315 ]]
Iteration 300 of 1000: loss=14 " + "l1=0" + "l2=14 f=-0.309 shape=(1, 9000, 1)
logits [[-0.44376186 -0.29065466 -0.26143995 -0.2391684 ]]
Iteration 400 of 1000: loss=11.1 " + "l1=0" + "l2=11.1 f=-0.323 shape=(1, 9000, 1)
logits [[-0.39668545 -0.2998545  -0.30475718 -0.289222  ]]
Iteration 500 of 1000: loss=9.49 " + "l1=0" + "l2=9.49 f=-0.328 shape=(1, 9000, 1)
logits [[-0.37841594 -0.30195576 -0.35008264 -0.28208062]]
Iteration 600 of 1000: loss=8.52 " + "l1=0" + "l2=8.52 f=-0.333 shape=(1, 9000, 1)
logits [[-0.3668283  -0.35653532 -0.32064918 -0.28842375]]
Iteration 700 of 1000: loss=7.79 " + "l1=0" + "l2=7.79 f=-0.342 shape=(1, 9000, 1)
logits [[-0.37607843 -0.3679747  -0.31445262 -0.30888388]]
Iteration 800 of 1000: loss=7.15 " + "l1=0" + "l2=7.15 f=-0.352 shape=(1, 9000, 1)
logits [[-0.42662162 -0.35193777 -0.32970473 -0.3002482 ]]
Iteration 900 of 1000: loss=6.51 " + "l1=0" + "l2=6.51 f=-0.351 shape=(1, 9000, 1)
logits [[-0.44161543 -0.31486645 -0.3395603  -0.30966172]]
--- 311.97199010849 seconds ---
Adv result:3
Loading record A03154
(1, 12278)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0454 " + "l1=0.0454" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.9528506 -2.5853376  1.9256387 -2.9012434]]
Iteration 100 of 1000: loss=0.0452 " + "l1=0.045" + "l2=0.000204 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.9264278 -2.5694954  1.9135596 -2.8704817]]
Iteration 200 of 1000: loss=0.0451 " + "l1=0.0449" + "l2=0.000203 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.9242725 -2.5670688  1.9124112 -2.86832  ]]
Iteration 300 of 1000: loss=0.0451 " + "l1=0.0449" + "l2=0.000255 f=-0.399 shape=(1, 9000, 1)
logits [[ 1.9209882 -2.564137   1.9105953 -2.8645318]]
Iteration 400 of 1000: loss=0.0451 " + "l1=0.0448" + "l2=0.000281 f=-0.399 shape=(1, 9000, 1)
logits [[ 1.9179574 -2.5614629  1.908787  -2.8608518]]
Iteration 500 of 1000: loss=0.0451 " + "l1=0.0447" + "l2=0.00032 f=-0.399 shape=(1, 9000, 1)
logits [[ 1.9153384 -2.559198   1.9070214 -2.857249 ]]
Iteration 600 of 1000: loss=0.0451 " + "l1=0.0447" + "l2=0.000425 f=-0.398 shape=(1, 9000, 1)
logits [[ 1.9132143 -2.557209   1.9055475 -2.8545377]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.454 " + "l1=0.454" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.9528506 -2.5853376  1.9256387 -2.9012434]]
Iteration 100 of 1000: loss=0.437 " + "l1=0.428" + "l2=0.00887 f=-0.387 shape=(1, 9000, 1)
logits [[ 1.8183496 -2.4635715  1.8185911 -2.7213895]]
Iteration 200 of 1000: loss=0.432 " + "l1=0.42" + "l2=0.0121 f=-0.381 shape=(1, 9000, 1)
logits [[ 1.7805767 -2.4156284  1.7804713 -2.6705205]]
Iteration 300 of 1000: loss=0.427 " + "l1=0.413" + "l2=0.0144 f=-0.377 shape=(1, 9000, 1)
logits [[ 1.7504705 -2.3795886  1.7505165 -2.6275995]]
Iteration 400 of 1000: loss=0.424 " + "l1=0.407" + "l2=0.0165 f=-0.371 shape=(1, 9000, 1)
logits [[ 1.7250266 -2.3485403  1.7256466 -2.5871632]]
Iteration 500 of 1000: loss=0.421 " + "l1=0.402" + "l2=0.0187 f=-0.365 shape=(1, 9000, 1)
logits [[ 1.7009865 -2.3191392  1.7007123 -2.5440056]]
Iteration 600 of 1000: loss=0.418 " + "l1=0.398" + "l2=0.0205 f=-0.361 shape=(1, 9000, 1)
logits [[ 1.6801041 -2.2974143  1.6791297 -2.5052166]]
Iteration 700 of 1000: loss=0.416 " + "l1=0.393" + "l2=0.0223 f=-0.356 shape=(1, 9000, 1)
logits [[ 1.6555916 -2.2760458  1.6561711 -2.4610054]]
Iteration 800 of 1000: loss=0.413 " + "l1=0.389" + "l2=0.0241 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.6338753 -2.2565663  1.6333613 -2.4215717]]
Iteration 900 of 1000: loss=0.411 " + "l1=0.386" + "l2=0.0252 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.618865  -2.2432265  1.6195464 -2.3962052]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.54 " + "l1=4.54" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.9528506 -2.5853376  1.9256387 -2.9012434]]
Iteration 100 of 1000: loss=3.3 " + "l1=2.7" + "l2=0.599 f=-0.276 shape=(1, 9000, 1)
logits [[ 1.0043956 -1.6558388  1.0451661 -1.498594 ]]
Iteration 200 of 1000: loss=2.88 " + "l1=2.1" + "l2=0.779 f=-0.225 shape=(1, 9000, 1)
logits [[ 0.6803006  -1.367441    0.73668945 -0.94856197]]
Iteration 300 of 1000: loss=2.52 " + "l1=1.62" + "l2=0.899 f=-0.17 shape=(1, 9000, 1)
logits [[ 0.37195078 -1.1124213   0.50485605 -0.44515517]]
Iteration 400 of 1000: loss=2.24 " + "l1=1.31" + "l2=0.932 f=-0.126 shape=(1, 9000, 1)
logits [[ 0.14058372 -0.94855523  0.36067182 -0.0586981 ]]
Iteration 500 of 1000: loss=2.1 " + "l1=1.16" + "l2=0.943 f=-0.102 shape=(1, 9000, 1)
logits [[ 0.01740696 -0.86679     0.28860205  0.15314347]]
Iteration 600 of 1000: loss=2 " + "l1=1.06" + "l2=0.94 f=-0.0973 shape=(1, 9000, 1)
logits [[-0.03739365 -0.8175381   0.24196665  0.22381377]]
Iteration 700 of 1000: loss=1.95 " + "l1=1.05" + "l2=0.902 f=-0.0965 shape=(1, 9000, 1)
logits [[ 0.00742892 -0.79785055  0.2502439   0.15402117]]
Iteration 800 of 1000: loss=1.92 " + "l1=1" + "l2=0.92 f=-0.0897 shape=(1, 9000, 1)
logits [[-0.04429328 -0.76631165  0.21581644  0.23595265]]
Iteration 900 of 1000: loss=1.88 " + "l1=0.989" + "l2=0.893 f=-0.0925 shape=(1, 9000, 1)
logits [[-0.00506145 -0.7656464   0.22339267  0.17745876]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=45.4 " + "l1=45.4" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.9528506 -2.5853376  1.9256387 -2.9012434]]
Iteration 100 of 1000: loss=11.5 " + "l1=4.63" + "l2=6.89 f=-0.155 shape=(1, 9000, 1)
logits [[-0.25021622 -0.39733103  0.06602091 -0.0374901 ]]
Iteration 200 of 1000: loss=6.94 " + "l1=0" + "l2=6.94 f=-0.163 shape=(1, 9000, 1)
logits [[-0.38367495 -0.08290789 -0.0942713  -0.0904308 ]]
Iteration 300 of 1000: loss=5.8 " + "l1=0" + "l2=5.8 f=-0.176 shape=(1, 9000, 1)
logits [[-0.40151408 -0.08057012 -0.08233608 -0.14016739]]
Iteration 400 of 1000: loss=5.29 " + "l1=0.0561" + "l2=5.23 f=-0.187 shape=(1, 9000, 1)
logits [[-0.43312398 -0.09404352 -0.08843416 -0.13397399]]
Iteration 500 of 1000: loss=4.92 " + "l1=0" + "l2=4.92 f=-0.195 shape=(1, 9000, 1)
logits [[-0.45365137 -0.08615555 -0.09157044 -0.14838558]]
Iteration 600 of 1000: loss=4.77 " + "l1=0.00192" + "l2=4.77 f=-0.194 shape=(1, 9000, 1)
logits [[-0.5243912  -0.06747049 -0.11759272 -0.06727865]]
Iteration 700 of 1000: loss=4.5 " + "l1=0" + "l2=4.5 f=-0.199 shape=(1, 9000, 1)
logits [[-0.5035129  -0.069049   -0.08874522 -0.13274291]]
Iteration 800 of 1000: loss=4.31 " + "l1=0.00514" + "l2=4.31 f=-0.199 shape=(1, 9000, 1)
logits [[-0.49066928 -0.0741704  -0.07365622 -0.15682185]]
Iteration 900 of 1000: loss=4.28 " + "l1=0" + "l2=4.28 f=-0.197 shape=(1, 9000, 1)
logits [[-0.5492494  -0.05067179 -0.09080178 -0.09848038]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=25 " + "l1=25" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.9528506 -2.5853376  1.9256387 -2.9012434]]
Iteration 100 of 1000: loss=8.56 " + "l1=4" + "l2=4.56 f=-0.151 shape=(1, 9000, 1)
logits [[-0.23425546 -0.5940601   0.13341482  0.09071916]]
Iteration 200 of 1000: loss=6.36 " + "l1=1.66" + "l2=4.69 f=-0.173 shape=(1, 9000, 1)
logits [[-0.28976074 -0.2962761   0.00609134 -0.11148853]]
Iteration 300 of 1000: loss=5.29 " + "l1=0.402" + "l2=4.88 f=-0.184 shape=(1, 9000, 1)
logits [[-0.40709567 -0.13746873 -0.064419   -0.12566102]]
Iteration 400 of 1000: loss=4.77 " + "l1=0.234" + "l2=4.53 f=-0.182 shape=(1, 9000, 1)
logits [[-0.43233007 -0.09735566 -0.05483201 -0.14325732]]
Iteration 500 of 1000: loss=4.32 " + "l1=0" + "l2=4.32 f=-0.185 shape=(1, 9000, 1)
logits [[-0.5132648  -0.07410397 -0.07578249 -0.07520787]]
Iteration 600 of 1000: loss=4.12 " + "l1=0" + "l2=4.12 f=-0.184 shape=(1, 9000, 1)
logits [[-0.5293473  -0.06586844 -0.07365796 -0.06718445]]
Iteration 700 of 1000: loss=3.91 " + "l1=0.0239" + "l2=3.88 f=-0.18 shape=(1, 9000, 1)
logits [[-0.52324647 -0.06560158 -0.06125677 -0.06813339]]
Iteration 800 of 1000: loss=3.76 " + "l1=0.0231" + "l2=3.74 f=-0.177 shape=(1, 9000, 1)
logits [[-0.51754814 -0.0601885  -0.05598098 -0.07592918]]
Iteration 900 of 1000: loss=3.63 " + "l1=0.0196" + "l2=3.61 f=-0.174 shape=(1, 9000, 1)
logits [[-0.5106294  -0.05849399 -0.05492643 -0.07226096]]
--- 304.12553310394287 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.000272 " + "l1=0.000272" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.9528506 -2.5853376  1.9256387 -2.9012434]]
Iteration 100 of 1000: loss=0.000185 " + "l1=7.7e-05" + "l2=0.000108 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.9357151 -2.585808   1.9280185 -2.884877 ]]
Iteration 200 of 1000: loss=0.000157 " + "l1=6.39e-05" + "l2=9.33e-05 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.9356844 -2.586132   1.9292986 -2.8862586]]
Iteration 300 of 1000: loss=0.000165 " + "l1=4.05e-05" + "l2=0.000125 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.9344035 -2.586552   1.9303507 -2.8859732]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.000136 " + "l1=0.000136" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.9528506 -2.5853376  1.9256387 -2.9012434]]
Iteration 100 of 1000: loss=0.000128 " + "l1=6.93e-05" + "l2=5.89e-05 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.9408182 -2.585525   1.9269563 -2.8893044]]
Iteration 200 of 1000: loss=0.000112 " + "l1=7.6e-05" + "l2=3.6e-05 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.9428463 -2.5857038  1.9276507 -2.892287 ]]
Iteration 300 of 1000: loss=0.000125 " + "l1=7.33e-05" + "l2=5.18e-05 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.942864  -2.5859375  1.9282124 -2.8929102]]
const [0.0025]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.8e-05 " + "l1=6.8e-05" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.9528506 -2.5853376  1.9256387 -2.9012434]]
Iteration 100 of 1000: loss=8.45e-05 " + "l1=4.24e-05" + "l2=4.21e-05 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.9435241 -2.5854707  1.926584  -2.891851 ]]
const [0.00125]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.4e-05 " + "l1=3.4e-05" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.9528506 -2.5853376  1.9256387 -2.9012434]]
Iteration 100 of 1000: loss=5.44e-05 " + "l1=2.37e-05" + "l2=3.07e-05 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.9453698 -2.5855339  1.9264176 -2.8935902]]
const [0.000625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.7e-05 " + "l1=1.7e-05" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.9528506 -2.5853376  1.9256387 -2.9012434]]
Iteration 100 of 1000: loss=3.71e-05 " + "l1=1.28e-05" + "l2=2.44e-05 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.9466944 -2.5854938  1.926255  -2.8949432]]
--- 85.61709403991699 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0485 " + "l1=0.0485" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.9528506 -2.5853376  1.9256387 -2.9012434]]
Iteration 100 of 1000: loss=0.048 " + "l1=0.0475" + "l2=0.000466 f=-0.398 shape=(1, 9000, 1)
logits [[ 1.9118133 -2.5755558  1.9090405 -2.8365936]]
Iteration 200 of 1000: loss=0.0478 " + "l1=0.0473" + "l2=0.000498 f=-0.397 shape=(1, 9000, 1)
logits [[ 1.9065886 -2.5732875  1.9064649 -2.8280053]]
Iteration 300 of 1000: loss=0.0478 " + "l1=0.0472" + "l2=0.000532 f=-0.396 shape=(1, 9000, 1)
logits [[ 1.9032277 -2.5710769  1.9032956 -2.820753 ]]
Iteration 400 of 1000: loss=0.0477 " + "l1=0.0472" + "l2=0.000587 f=-0.396 shape=(1, 9000, 1)
logits [[ 1.9005964 -2.5690417  1.9004647 -2.8146832]]
Iteration 500 of 1000: loss=0.0477 " + "l1=0.0471" + "l2=0.000652 f=-0.395 shape=(1, 9000, 1)
logits [[ 1.8977131 -2.5670428  1.8977603 -2.8087618]]
Iteration 600 of 1000: loss=0.0477 " + "l1=0.047" + "l2=0.000762 f=-0.395 shape=(1, 9000, 1)
logits [[ 1.8950459 -2.5651689  1.8952061 -2.8032973]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.485 " + "l1=0.485" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.9528506 -2.5853376  1.9256387 -2.9012434]]
Iteration 100 of 1000: loss=0.445 " + "l1=0.422" + "l2=0.0235 f=-0.368 shape=(1, 9000, 1)
logits [[ 1.7109585 -2.5013435  1.7689574 -2.4485734]]
Iteration 200 of 1000: loss=0.433 " + "l1=0.401" + "l2=0.0322 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.6424394 -2.473924   1.7141678 -2.294921 ]]
Iteration 300 of 1000: loss=0.423 " + "l1=0.383" + "l2=0.0395 f=-0.34 shape=(1, 9000, 1)
logits [[ 1.5828277 -2.4364643  1.663748  -2.1699967]]
Iteration 400 of 1000: loss=0.413 " + "l1=0.368" + "l2=0.0446 f=-0.33 shape=(1, 9000, 1)
logits [[ 1.5293875 -2.4025726  1.6191988 -2.0642636]]
Iteration 500 of 1000: loss=0.404 " + "l1=0.356" + "l2=0.0486 f=-0.322 shape=(1, 9000, 1)
logits [[ 1.4863917 -2.375194   1.5795985 -1.9776871]]
Iteration 600 of 1000: loss=0.396 " + "l1=0.343" + "l2=0.0533 f=-0.313 shape=(1, 9000, 1)
logits [[ 1.4429681 -2.3475785  1.5412511 -1.8905177]]
Iteration 700 of 1000: loss=0.389 " + "l1=0.332" + "l2=0.0567 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.4085654 -2.3257928  1.5096707 -1.8113242]]
Iteration 800 of 1000: loss=0.381 " + "l1=0.32" + "l2=0.061 f=-0.296 shape=(1, 9000, 1)
logits [[ 1.3692473 -2.3050787  1.4764141 -1.7247975]]
Iteration 900 of 1000: loss=0.372 " + "l1=0.306" + "l2=0.066 f=-0.286 shape=(1, 9000, 1)
logits [[ 1.321734  -2.2848806  1.4387314 -1.6205945]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.85 " + "l1=4.85" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.9528506 -2.5853376  1.9256387 -2.9012434]]
Iteration 100 of 1000: loss=1.46 " + "l1=0.0413" + "l2=1.42 f=-0.141 shape=(1, 9000, 1)
logits [[-0.15916008 -1.8683424   0.7524924   0.71120167]]
Iteration 200 of 1000: loss=1.12 " + "l1=0.00555" + "l2=1.12 f=-0.135 shape=(1, 9000, 1)
logits [[-0.14070639 -1.8410112   0.7241763   0.7186215 ]]
Iteration 300 of 1000: loss=0.98 " + "l1=0" + "l2=0.98 f=-0.127 shape=(1, 9000, 1)
logits [[-0.13591485 -1.8145295   0.69992155  0.74226326]]
Iteration 400 of 1000: loss=0.836 " + "l1=0" + "l2=0.836 f=-0.125 shape=(1, 9000, 1)
logits [[-0.10546553 -1.814437    0.70310736  0.71727246]]
Iteration 500 of 1000: loss=0.738 " + "l1=0" + "l2=0.738 f=-0.121 shape=(1, 9000, 1)
logits [[-0.08501516 -1.8143395   0.7028041   0.71055114]]
Iteration 600 of 1000: loss=0.662 " + "l1=0.00135" + "l2=0.661 f=-0.119 shape=(1, 9000, 1)
logits [[-0.06582763 -1.8206898   0.70545286  0.70410466]]
Iteration 700 of 1000: loss=0.595 " + "l1=0" + "l2=0.595 f=-0.119 shape=(1, 9000, 1)
logits [[-0.06059042 -1.8220518   0.70101374  0.7045873 ]]
Iteration 800 of 1000: loss=0.543 " + "l1=0" + "l2=0.543 f=-0.12 shape=(1, 9000, 1)
logits [[-0.06271478 -1.8295295   0.6979933   0.7139886 ]]
Iteration 900 of 1000: loss=0.493 " + "l1=0" + "l2=0.493 f=-0.121 shape=(1, 9000, 1)
logits [[-0.05912047 -1.8389202   0.703112    0.7125903 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.67 " + "l1=2.67" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.9528506 -2.5853376  1.9256387 -2.9012434]]
Iteration 100 of 1000: loss=1.49 " + "l1=0.728" + "l2=0.761 f=-0.204 shape=(1, 9000, 1)
logits [[ 0.43380627 -2.0632412   1.0685455  -0.25593662]]
Iteration 200 of 1000: loss=1.03 " + "l1=0.0339" + "l2=0.998 f=-0.134 shape=(1, 9000, 1)
logits [[-0.09864731 -1.8399898   0.7330979   0.6714829 ]]
Iteration 300 of 1000: loss=0.786 " + "l1=0.0049" + "l2=0.782 f=-0.123 shape=(1, 9000, 1)
logits [[-0.10100684 -1.8115708   0.71495825  0.70604706]]
Iteration 400 of 1000: loss=0.66 " + "l1=0.00711" + "l2=0.653 f=-0.122 shape=(1, 9000, 1)
logits [[-0.07892369 -1.81361     0.7090332   0.6961098 ]]
Iteration 500 of 1000: loss=0.57 " + "l1=0.0123" + "l2=0.558 f=-0.123 shape=(1, 9000, 1)
logits [[-0.05816691 -1.8239896   0.70622844  0.6837835 ]]
Iteration 600 of 1000: loss=0.501 " + "l1=0.0171" + "l2=0.484 f=-0.127 shape=(1, 9000, 1)
logits [[-0.05902206 -1.8483291   0.7159651   0.68488437]]
Iteration 700 of 1000: loss=0.442 " + "l1=0.00594" + "l2=0.436 f=-0.132 shape=(1, 9000, 1)
logits [[-0.0860412 -1.8696334  0.718333   0.7075317]]
Iteration 800 of 1000: loss=0.397 " + "l1=0" + "l2=0.397 f=-0.136 shape=(1, 9000, 1)
logits [[-0.10413341 -1.8863058   0.7194282   0.7254517 ]]
Iteration 900 of 1000: loss=0.359 " + "l1=0" + "l2=0.359 f=-0.139 shape=(1, 9000, 1)
logits [[-0.10875115 -1.8981923   0.7210718   0.72791255]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.58 " + "l1=1.58" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.9528506 -2.5853376  1.9256387 -2.9012434]]
Iteration 100 of 1000: loss=1.16 " + "l1=0.894" + "l2=0.262 f=-0.286 shape=(1, 9000, 1)
logits [[ 1.0830952 -2.2847834  1.4035405 -1.3465226]]
Iteration 200 of 1000: loss=1.01 " + "l1=0.656" + "l2=0.354 f=-0.243 shape=(1, 9000, 1)
logits [[ 0.7798313 -2.1478376  1.2066426 -0.8104067]]
Iteration 300 of 1000: loss=0.859 " + "l1=0.411" + "l2=0.448 f=-0.188 shape=(1, 9000, 1)
logits [[ 0.4880807  -2.022975    1.0232327  -0.24215108]]
Iteration 400 of 1000: loss=0.682 " + "l1=0.145" + "l2=0.537 f=-0.137 shape=(1, 9000, 1)
logits [[ 0.10993719 -1.9169058   0.85313034  0.40691695]]
Iteration 500 of 1000: loss=0.54 " + "l1=0.0186" + "l2=0.521 f=-0.118 shape=(1, 9000, 1)
logits [[-0.06452614 -1.8685288   0.7591193   0.702033  ]]
Iteration 600 of 1000: loss=0.451 " + "l1=0.00609" + "l2=0.445 f=-0.122 shape=(1, 9000, 1)
logits [[-0.09338193 -1.8909618   0.75808793  0.73936087]]
Iteration 700 of 1000: loss=0.4 " + "l1=0" + "l2=0.4 f=-0.128 shape=(1, 9000, 1)
logits [[-0.11775687 -1.914992    0.75581044  0.7652387 ]]
Iteration 800 of 1000: loss=0.363 " + "l1=0.0055" + "l2=0.357 f=-0.137 shape=(1, 9000, 1)
logits [[-0.11832265 -1.9381816   0.7634085   0.7464768 ]]
Iteration 900 of 1000: loss=0.331 " + "l1=0" + "l2=0.331 f=-0.141 shape=(1, 9000, 1)
logits [[-0.14220788 -1.9529972   0.7594552   0.7712084 ]]
--- 303.50075030326843 seconds ---
Adv result:3
Loading record A03161
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0756 " + "l1=0.0756" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.8132915 -2.7455034  3.2822778 -6.9127765]]
Iteration 100 of 1000: loss=0.0754 " + "l1=0.0751" + "l2=0.000213 f=-0.39 shape=(1, 9000, 1)
logits [[ 4.7856035 -2.7281048  3.2670944 -6.8850055]]
Iteration 200 of 1000: loss=0.0753 " + "l1=0.0751" + "l2=0.000195 f=-0.39 shape=(1, 9000, 1)
logits [[ 4.7831383 -2.7253833  3.2646499 -6.882672 ]]
Iteration 300 of 1000: loss=0.0752 " + "l1=0.075" + "l2=0.000219 f=-0.39 shape=(1, 9000, 1)
logits [[ 4.7785673 -2.7214513  3.2615156 -6.8782883]]
Iteration 400 of 1000: loss=0.0752 " + "l1=0.0749" + "l2=0.000323 f=-0.39 shape=(1, 9000, 1)
logits [[ 4.7740984 -2.71767    3.258686  -6.874037 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.756 " + "l1=0.756" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.8132915 -2.7455034  3.2822778 -6.9127765]]
Iteration 100 of 1000: loss=0.732 " + "l1=0.716" + "l2=0.0156 f=-0.387 shape=(1, 9000, 1)
logits [[ 4.583019  -2.5795069  3.133437  -6.683807 ]]
Iteration 200 of 1000: loss=0.72 " + "l1=0.696" + "l2=0.0238 f=-0.38 shape=(1, 9000, 1)
logits [[ 4.508609  -2.4504914  3.0289638 -6.6066394]]
Iteration 300 of 1000: loss=0.708 " + "l1=0.681" + "l2=0.0267 f=-0.375 shape=(1, 9000, 1)
logits [[ 4.441989  -2.3716025  2.9667811 -6.538793 ]]
Iteration 400 of 1000: loss=0.698 " + "l1=0.669" + "l2=0.0281 f=-0.371 shape=(1, 9000, 1)
logits [[ 4.3876443 -2.306914   2.9145722 -6.481158 ]]
Iteration 500 of 1000: loss=0.69 " + "l1=0.659" + "l2=0.031 f=-0.37 shape=(1, 9000, 1)
logits [[ 4.3341885 -2.2538788  2.8686743 -6.427257 ]]
Iteration 600 of 1000: loss=0.684 " + "l1=0.651" + "l2=0.033 f=-0.368 shape=(1, 9000, 1)
logits [[ 4.281297 -2.225645  2.841083 -6.369784]]
Iteration 700 of 1000: loss=0.678 " + "l1=0.644" + "l2=0.0346 f=-0.367 shape=(1, 9000, 1)
logits [[ 4.2314997 -2.2048779  2.8180997 -6.314479 ]]
Iteration 800 of 1000: loss=0.673 " + "l1=0.637" + "l2=0.0356 f=-0.367 shape=(1, 9000, 1)
logits [[ 4.185108  -2.1877031  2.8005402 -6.2643275]]
Iteration 900 of 1000: loss=0.668 " + "l1=0.631" + "l2=0.0369 f=-0.366 shape=(1, 9000, 1)
logits [[ 4.1378593 -2.170024   2.7810745 -6.211336 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.56 " + "l1=7.56" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.8132915 -2.7455034  3.2822778 -6.9127765]]
Iteration 100 of 1000: loss=5.27 " + "l1=3.96" + "l2=1.31 f=-0.372 shape=(1, 9000, 1)
logits [[ 2.3908415 -1.5715383  1.9942378 -4.3007336]]
Iteration 200 of 1000: loss=4.29 " + "l1=2.79" + "l2=1.5 f=-0.352 shape=(1, 9000, 1)
logits [[ 1.6372403 -1.1538497  1.6346728 -3.5266893]]
Iteration 300 of 1000: loss=3.82 " + "l1=2.3" + "l2=1.52 f=-0.351 shape=(1, 9000, 1)
logits [[ 1.3967791 -0.9027852  1.3881688 -3.2850943]]
Iteration 400 of 1000: loss=3.48 " + "l1=1.87" + "l2=1.61 f=-0.335 shape=(1, 9000, 1)
logits [[ 1.1631106 -0.7022154  1.167866  -2.9682305]]
Iteration 500 of 1000: loss=3.26 " + "l1=1.61" + "l2=1.65 f=-0.326 shape=(1, 9000, 1)
logits [[ 1.0205016  -0.58559436  1.0243038  -2.7636602 ]]
Iteration 600 of 1000: loss=3.01 " + "l1=1.28" + "l2=1.73 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.8634598  -0.4091744   0.86696154 -2.6191847 ]]
Iteration 700 of 1000: loss=2.72 " + "l1=0.897" + "l2=1.82 f=-0.333 shape=(1, 9000, 1)
logits [[ 0.679721   -0.21352996  0.6830784  -2.4829712 ]]
Iteration 800 of 1000: loss=2.46 " + "l1=0.62" + "l2=1.85 f=-0.337 shape=(1, 9000, 1)
logits [[ 0.516658   -0.09938606  0.52013326 -2.28546   ]]
Iteration 900 of 1000: loss=2.25 " + "l1=0.405" + "l2=1.85 f=-0.339 shape=(1, 9000, 1)
logits [[ 0.4051582   0.00678986  0.4118246  -2.177819  ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=75.6 " + "l1=75.6" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.8132915 -2.7455034  3.2822778 -6.9127765]]
Iteration 100 of 1000: loss=12.6 " + "l1=0" + "l2=12.6 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.10159805  0.15764476  0.11944209 -1.674364  ]]
Iteration 200 of 1000: loss=8.08 " + "l1=0" + "l2=8.08 f=-0.364 shape=(1, 9000, 1)
logits [[ 0.07142389  0.16820209  0.15944837 -1.8531272 ]]
Iteration 300 of 1000: loss=6.79 " + "l1=0" + "l2=6.79 f=-0.363 shape=(1, 9000, 1)
logits [[ 0.16482708  0.18556081  0.16777675 -1.9713806 ]]
Iteration 400 of 1000: loss=6.09 " + "l1=0" + "l2=6.09 f=-0.363 shape=(1, 9000, 1)
logits [[ 0.19658881  0.201777    0.1722862  -2.0226524 ]]
Iteration 500 of 1000: loss=5.77 " + "l1=0.151" + "l2=5.62 f=-0.37 shape=(1, 9000, 1)
logits [[ 0.14094403  0.18711588  0.20222014 -2.010665  ]]
Iteration 600 of 1000: loss=5.26 " + "l1=0.00776" + "l2=5.25 f=-0.366 shape=(1, 9000, 1)
logits [[ 0.20152485  0.20074911  0.19156396 -2.056526  ]]
Iteration 700 of 1000: loss=5.02 " + "l1=0" + "l2=5.02 f=-0.367 shape=(1, 9000, 1)
logits [[ 0.17470793  0.20778938  0.19157289 -2.0403051 ]]
Iteration 800 of 1000: loss=4.83 " + "l1=0" + "l2=4.83 f=-0.364 shape=(1, 9000, 1)
logits [[ 0.15907285  0.21406473  0.18318366 -2.0108907 ]]
Iteration 900 of 1000: loss=4.61 " + "l1=0" + "l2=4.61 f=-0.364 shape=(1, 9000, 1)
logits [[ 0.15566027  0.20822044  0.18579014 -2.004506  ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=41.6 " + "l1=41.6" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.8132915 -2.7455034  3.2822778 -6.9127765]]
Iteration 100 of 1000: loss=12 " + "l1=3.43" + "l2=8.56 f=-0.339 shape=(1, 9000, 1)
logits [[ 0.4951677  -0.12473082  0.4983363  -2.2247033 ]]
Iteration 200 of 1000: loss=6.79 " + "l1=0.0134" + "l2=6.78 f=-0.361 shape=(1, 9000, 1)
logits [[ 0.17655084  0.18769611  0.1901309  -1.9982607 ]]
Iteration 300 of 1000: loss=5.8 " + "l1=0" + "l2=5.8 f=-0.361 shape=(1, 9000, 1)
logits [[ 0.18759519  0.20122166  0.19650464 -2.030815  ]]
Iteration 400 of 1000: loss=5.3 " + "l1=0.0874" + "l2=5.22 f=-0.359 shape=(1, 9000, 1)
logits [[ 0.22006986  0.20595516  0.22184213 -2.0850017 ]]
Iteration 500 of 1000: loss=4.89 " + "l1=0" + "l2=4.89 f=-0.363 shape=(1, 9000, 1)
logits [[ 0.20094702  0.22026068  0.20483156 -2.0767038 ]]
Iteration 600 of 1000: loss=4.61 " + "l1=0" + "l2=4.61 f=-0.361 shape=(1, 9000, 1)
logits [[ 0.17531142  0.21859129  0.18878572 -2.02569   ]]
Iteration 700 of 1000: loss=4.3 " + "l1=0.0523" + "l2=4.24 f=-0.361 shape=(1, 9000, 1)
logits [[ 0.18736483  0.19291483  0.20242707 -2.027778  ]]
Iteration 800 of 1000: loss=4.02 " + "l1=0" + "l2=4.02 f=-0.364 shape=(1, 9000, 1)
logits [[ 0.17168269  0.18990444  0.18630753 -2.0029013 ]]
Iteration 900 of 1000: loss=3.83 " + "l1=0" + "l2=3.83 f=-0.363 shape=(1, 9000, 1)
logits [[ 0.16473769  0.18596865  0.17218232 -1.9733956 ]]
--- 293.3933639526367 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0153 " + "l1=0.0153" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.8132915 -2.7455034  3.2822778 -6.9127765]]
Iteration 100 of 1000: loss=0.0152 " + "l1=0.0151" + "l2=0.000133 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.794891  -2.749338   3.2879024 -6.897549 ]]
Iteration 200 of 1000: loss=0.0152 " + "l1=0.0151" + "l2=0.000103 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.794977  -2.7498162  3.288747  -6.898413 ]]
Iteration 300 of 1000: loss=0.0152 " + "l1=0.015" + "l2=0.000119 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.7932034 -2.7502995  3.289701  -6.8977666]]
Iteration 400 of 1000: loss=0.0152 " + "l1=0.015" + "l2=0.000154 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.7910957 -2.750747   3.290594  -6.8969407]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.153 " + "l1=0.153" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.8132915 -2.7455034  3.2822778 -6.9127765]]
Iteration 100 of 1000: loss=0.143 " + "l1=0.136" + "l2=0.00655 f=-0.394 shape=(1, 9000, 1)
logits [[ 4.6790833 -2.7726378  3.316639  -6.800273 ]]
Iteration 200 of 1000: loss=0.14 " + "l1=0.131" + "l2=0.00832 f=-0.396 shape=(1, 9000, 1)
logits [[ 4.641891  -2.7787132  3.3279092 -6.7750273]]
Iteration 300 of 1000: loss=0.137 " + "l1=0.127" + "l2=0.00971 f=-0.399 shape=(1, 9000, 1)
logits [[ 4.6113706 -2.785284   3.3386471 -6.7608266]]
Iteration 400 of 1000: loss=0.134 " + "l1=0.123" + "l2=0.0109 f=-0.403 shape=(1, 9000, 1)
logits [[ 4.583429  -2.7934937  3.3492212 -6.751941 ]]
Iteration 500 of 1000: loss=0.132 " + "l1=0.12" + "l2=0.0114 f=-0.406 shape=(1, 9000, 1)
logits [[ 4.561594  -2.7994475  3.3578014 -6.745548 ]]
Iteration 600 of 1000: loss=0.129 " + "l1=0.117" + "l2=0.012 f=-0.409 shape=(1, 9000, 1)
logits [[ 4.539608  -2.8063185  3.3661234 -6.736002 ]]
Iteration 700 of 1000: loss=0.127 " + "l1=0.114" + "l2=0.0126 f=-0.412 shape=(1, 9000, 1)
logits [[ 4.5171037 -2.8135138  3.3732648 -6.723239 ]]
Iteration 800 of 1000: loss=0.124 " + "l1=0.111" + "l2=0.0134 f=-0.414 shape=(1, 9000, 1)
logits [[ 4.4904184 -2.8208756  3.3803024 -6.705611 ]]
Iteration 900 of 1000: loss=0.122 " + "l1=0.108" + "l2=0.0142 f=-0.417 shape=(1, 9000, 1)
logits [[ 4.4652042 -2.8297582  3.3889365 -6.692345 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.53 " + "l1=1.53" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.8132915 -2.7455034  3.2822778 -6.9127765]]
Iteration 100 of 1000: loss=0.527 " + "l1=0.00574" + "l2=0.521 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.5132978 -3.111518   3.5075555 -5.9292736]]
Iteration 200 of 1000: loss=0.375 " + "l1=0" + "l2=0.375 f=-0.498 shape=(1, 9000, 1)
logits [[ 3.533255  -3.110159   3.5370321 -5.953297 ]]
Iteration 300 of 1000: loss=0.305 " + "l1=0.00281" + "l2=0.302 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.5447693 -3.1068459  3.5419593 -5.9595523]]
Iteration 400 of 1000: loss=0.258 " + "l1=0" + "l2=0.258 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.5331354 -3.100528   3.5380573 -5.948643 ]]
Iteration 500 of 1000: loss=0.217 " + "l1=0" + "l2=0.217 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.5278177 -3.096381   3.5315228 -5.927207 ]]
Iteration 600 of 1000: loss=0.19 " + "l1=0" + "l2=0.19 f=-0.486 shape=(1, 9000, 1)
logits [[ 3.5208254 -3.103789   3.5350454 -5.8969917]]
Iteration 700 of 1000: loss=0.167 " + "l1=0" + "l2=0.167 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.5186188 -3.103548   3.5296903 -5.8695836]]
Iteration 800 of 1000: loss=0.146 " + "l1=0" + "l2=0.146 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.510178  -3.0974607  3.511768  -5.832007 ]]
Iteration 900 of 1000: loss=0.132 " + "l1=0.00216" + "l2=0.13 f=-0.475 shape=(1, 9000, 1)
logits [[ 3.4932976 -3.09231    3.4911342 -5.793207 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.842 " + "l1=0.842" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.8132915 -2.7455034  3.2822778 -6.9127765]]
Iteration 100 of 1000: loss=0.531 " + "l1=0.325" + "l2=0.206 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.020187  -2.9365478  3.429793  -6.321931 ]]
Iteration 200 of 1000: loss=0.415 " + "l1=0.152" + "l2=0.264 f=-0.48 shape=(1, 9000, 1)
logits [[ 3.7671335 -3.0333776  3.49148   -6.1461573]]
Iteration 300 of 1000: loss=0.329 " + "l1=0.035" + "l2=0.294 f=-0.496 shape=(1, 9000, 1)
logits [[ 3.606284  -3.111719   3.5426743 -6.0209994]]
Iteration 400 of 1000: loss=0.258 " + "l1=0.00104" + "l2=0.257 f=-0.496 shape=(1, 9000, 1)
logits [[ 3.5575438 -3.12841    3.5556521 -5.9690223]]
Iteration 500 of 1000: loss=0.209 " + "l1=0.000395" + "l2=0.209 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.5529785 -3.1244638  3.5522597 -5.9411616]]
Iteration 600 of 1000: loss=0.175 " + "l1=0" + "l2=0.175 f=-0.485 shape=(1, 9000, 1)
logits [[ 3.5426426 -3.1284451  3.5476544 -5.900486 ]]
Iteration 700 of 1000: loss=0.15 " + "l1=0.00247" + "l2=0.148 f=-0.479 shape=(1, 9000, 1)
logits [[ 3.5274167 -3.1162474  3.5229342 -5.8492756]]
Iteration 800 of 1000: loss=0.129 " + "l1=0" + "l2=0.129 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.4984653 -3.1121635  3.4990385 -5.79145  ]]
Iteration 900 of 1000: loss=0.111 " + "l1=0" + "l2=0.111 f=-0.465 shape=(1, 9000, 1)
logits [[ 3.4714894 -3.1008172  3.4787967 -5.7086725]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.498 " + "l1=0.498" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.8132915 -2.7455034  3.2822778 -6.9127765]]
Iteration 100 of 1000: loss=0.391 " + "l1=0.325" + "l2=0.0662 f=-0.415 shape=(1, 9000, 1)
logits [[ 4.3662176 -2.8415926  3.3658507 -6.552128 ]]
Iteration 200 of 1000: loss=0.355 " + "l1=0.266" + "l2=0.0888 f=-0.43 shape=(1, 9000, 1)
logits [[ 4.2223177 -2.8899705  3.4030588 -6.4534087]]
Iteration 300 of 1000: loss=0.325 " + "l1=0.222" + "l2=0.102 f=-0.439 shape=(1, 9000, 1)
logits [[ 4.111076  -2.93059    3.426678  -6.3648257]]
Iteration 400 of 1000: loss=0.292 " + "l1=0.176" + "l2=0.116 f=-0.456 shape=(1, 9000, 1)
logits [[ 4.0017834 -2.9878745  3.459883  -6.2984815]]
Iteration 500 of 1000: loss=0.257 " + "l1=0.135" + "l2=0.122 f=-0.47 shape=(1, 9000, 1)
logits [[ 3.9035065 -3.0289047  3.4879563 -6.241882 ]]
Iteration 600 of 1000: loss=0.22 " + "l1=0.0897" + "l2=0.13 f=-0.48 shape=(1, 9000, 1)
logits [[ 3.7820137 -3.0553994  3.5060542 -6.1511154]]
Iteration 700 of 1000: loss=0.185 " + "l1=0.05" + "l2=0.135 f=-0.483 shape=(1, 9000, 1)
logits [[ 3.677371  -3.083853   3.5235672 -6.0504494]]
Iteration 800 of 1000: loss=0.144 " + "l1=0.00598" + "l2=0.138 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.5565915 -3.1300826  3.538196  -5.925116 ]]
Iteration 900 of 1000: loss=0.11 " + "l1=0.00211" + "l2=0.108 f=-0.485 shape=(1, 9000, 1)
logits [[ 3.5408084 -3.140029   3.5343094 -5.8770657]]
--- 293.64444375038147 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.117 " + "l1=0.117" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.8132915 -2.7455034  3.2822778 -6.9127765]]
Iteration 100 of 1000: loss=0.117 " + "l1=0.116" + "l2=0.000462 f=-0.389 shape=(1, 9000, 1)
logits [[ 4.7698574 -2.7382174  3.266377  -6.852301 ]]
Iteration 200 of 1000: loss=0.117 " + "l1=0.116" + "l2=0.000463 f=-0.388 shape=(1, 9000, 1)
logits [[ 4.7641263 -2.736022   3.26362   -6.8450804]]
Iteration 300 of 1000: loss=0.116 " + "l1=0.116" + "l2=0.000543 f=-0.388 shape=(1, 9000, 1)
logits [[ 4.7574673 -2.73344    3.260501  -6.8366733]]
Iteration 400 of 1000: loss=0.116 " + "l1=0.116" + "l2=0.000618 f=-0.388 shape=(1, 9000, 1)
logits [[ 4.7507977 -2.7306044  3.2570865 -6.828236 ]]
Iteration 500 of 1000: loss=0.116 " + "l1=0.116" + "l2=0.000735 f=-0.387 shape=(1, 9000, 1)
logits [[ 4.744247  -2.7280333  3.253848  -6.8200026]]
Iteration 600 of 1000: loss=0.116 " + "l1=0.116" + "l2=0.000806 f=-0.387 shape=(1, 9000, 1)
logits [[ 4.738     -2.725605   3.250889  -6.8121724]]
Iteration 700 of 1000: loss=0.116 " + "l1=0.115" + "l2=0.000931 f=-0.387 shape=(1, 9000, 1)
logits [[ 4.7318406 -2.7233746  3.2481453 -6.804502 ]]
Iteration 800 of 1000: loss=0.116 " + "l1=0.115" + "l2=0.00107 f=-0.387 shape=(1, 9000, 1)
logits [[ 4.7260942 -2.721223   3.2455752 -6.797472 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.17 " + "l1=1.17" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.8132915 -2.7455034  3.2822778 -6.9127765]]
Iteration 100 of 1000: loss=1.11 " + "l1=1.07" + "l2=0.0401 f=-0.383 shape=(1, 9000, 1)
logits [[ 4.3929334 -2.6972015  3.1257627 -6.3518076]]
Iteration 200 of 1000: loss=1.09 " + "l1=1.04" + "l2=0.0537 f=-0.38 shape=(1, 9000, 1)
logits [[ 4.2515407 -2.6717165  3.059814  -6.1597223]]
Iteration 300 of 1000: loss=1.08 " + "l1=1.01" + "l2=0.0641 f=-0.378 shape=(1, 9000, 1)
logits [[ 4.130201  -2.6430259  2.9999363 -6.000821 ]]
Iteration 400 of 1000: loss=1.06 " + "l1=0.988" + "l2=0.0727 f=-0.376 shape=(1, 9000, 1)
logits [[ 4.021684  -2.6105168  2.941039  -5.854701 ]]
Iteration 500 of 1000: loss=1.05 " + "l1=0.965" + "l2=0.0799 f=-0.372 shape=(1, 9000, 1)
logits [[ 3.9277053 -2.5837579  2.8929346 -5.72374  ]]
Iteration 600 of 1000: loss=1.03 " + "l1=0.944" + "l2=0.0847 f=-0.369 shape=(1, 9000, 1)
logits [[ 3.8388677 -2.5612502  2.8483427 -5.601325 ]]
Iteration 700 of 1000: loss=1.01 " + "l1=0.923" + "l2=0.0888 f=-0.366 shape=(1, 9000, 1)
logits [[ 3.7503638 -2.541092   2.8047807 -5.476795 ]]
Iteration 800 of 1000: loss=0.992 " + "l1=0.898" + "l2=0.0937 f=-0.363 shape=(1, 9000, 1)
logits [[ 3.651111  -2.5254161  2.7554996 -5.332493 ]]
Iteration 900 of 1000: loss=0.97 " + "l1=0.869" + "l2=0.101 f=-0.36 shape=(1, 9000, 1)
logits [[ 3.5293427 -2.5174093  2.7072122 -5.158655 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.7 " + "l1=11.7" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.8132915 -2.7455034  3.2822778 -6.9127765]]
Iteration 100 of 1000: loss=6.19 " + "l1=3.71" + "l2=2.49 f=-0.226 shape=(1, 9000, 1)
logits [[ 1.6403303 -2.1341147  1.6473678 -2.058067 ]]
Iteration 200 of 1000: loss=4.93 " + "l1=2.28" + "l2=2.65 f=-0.116 shape=(1, 9000, 1)
logits [[ 1.2235643 -1.8614959  1.2269821 -1.0510918]]
Iteration 300 of 1000: loss=4.1 " + "l1=1.39" + "l2=2.72 f=-0.0474 shape=(1, 9000, 1)
logits [[ 0.9777978  -1.7543485   0.9873118  -0.40029824]]
Iteration 400 of 1000: loss=3.25 " + "l1=0.461" + "l2=2.79 f=-0.000273 shape=(1, 9000, 1)
logits [[ 0.6554495  -1.5507295   0.6777257   0.21646276]]
Iteration 500 of 1000: loss=2.66 " + "l1=0.0161" + "l2=2.64 f=0.0127 shape=(1, 9000, 1)
logits [[ 0.49760213 -1.4660821   0.5177313   0.50162   ]]
Iteration 600 of 1000: loss=2.31 " + "l1=0" + "l2=2.31 f=0.00636 shape=(1, 9000, 1)
logits [[ 0.47617894 -1.4554813   0.4976708   0.50709116]]
Iteration 700 of 1000: loss=2.13 " + "l1=0" + "l2=2.13 f=0.000283 shape=(1, 9000, 1)
logits [[ 0.47575858 -1.4586343   0.4898232   0.49418595]]
Iteration 800 of 1000: loss=1.98 " + "l1=0.0023" + "l2=1.98 f=-0.00699 shape=(1, 9000, 1)
logits [[ 0.47360322 -1.4600347   0.48038775  0.47808713]]
Iteration 900 of 1000: loss=1.89 " + "l1=0.0133" + "l2=1.88 f=-0.0128 shape=(1, 9000, 1)
logits [[ 0.47753492 -1.4839994   0.48426068  0.47097734]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.45 " + "l1=6.45" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.8132915 -2.7455034  3.2822778 -6.9127765]]
Iteration 100 of 1000: loss=4.42 " + "l1=3.15" + "l2=1.27 f=-0.333 shape=(1, 9000, 1)
logits [[ 2.3046472 -2.5077457  2.2899683 -3.4172297]]
Iteration 200 of 1000: loss=3.77 " + "l1=2.45" + "l2=1.33 f=-0.251 shape=(1, 9000, 1)
logits [[ 1.8842572 -2.2113411  1.8840728 -2.5619342]]
Iteration 300 of 1000: loss=3.34 " + "l1=1.92" + "l2=1.42 f=-0.19 shape=(1, 9000, 1)
logits [[ 1.5605533 -1.9584343  1.5608776 -1.9210112]]
Iteration 400 of 1000: loss=2.96 " + "l1=1.58" + "l2=1.38 f=-0.145 shape=(1, 9000, 1)
logits [[ 1.3740196 -1.831856   1.3715771 -1.4955683]]
Iteration 500 of 1000: loss=2.61 " + "l1=1.15" + "l2=1.45 f=-0.0993 shape=(1, 9000, 1)
logits [[ 1.132642  -1.6994752  1.1322836 -0.9627033]]
Iteration 600 of 1000: loss=2.39 " + "l1=0.918" + "l2=1.48 f=-0.0854 shape=(1, 9000, 1)
logits [[ 0.9961643 -1.6585138  0.9935069 -0.6728609]]
Iteration 700 of 1000: loss=2.24 " + "l1=0.753" + "l2=1.49 f=-0.0746 shape=(1, 9000, 1)
logits [[ 0.8984331 -1.634197   0.9028112 -0.4656361]]
Iteration 800 of 1000: loss=2.07 " + "l1=0.573" + "l2=1.5 f=-0.0575 shape=(1, 9000, 1)
logits [[ 0.8069758  -1.6332797   0.81933814 -0.22286215]]
Iteration 900 of 1000: loss=1.91 " + "l1=0.423" + "l2=1.48 f=-0.051 shape=(1, 9000, 1)
logits [[ 0.7154526  -1.6338542   0.7414156  -0.02697966]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=9.09 " + "l1=9.09" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.8132915 -2.7455034  3.2822778 -6.9127765]]
Iteration 100 of 1000: loss=5.41 " + "l1=3.52" + "l2=1.89 f=-0.275 shape=(1, 9000, 1)
logits [[ 1.9114616 -2.289442   1.9096117 -2.6312873]]
Iteration 200 of 1000: loss=4.49 " + "l1=2.48" + "l2=2.01 f=-0.178 shape=(1, 9000, 1)
logits [[ 1.4820861 -1.9580622  1.4850948 -1.7198976]]
Iteration 300 of 1000: loss=3.83 " + "l1=1.73" + "l2=2.1 f=-0.107 shape=(1, 9000, 1)
logits [[ 1.2046254 -1.812663   1.2057035 -1.0246366]]
Iteration 400 of 1000: loss=3.2 " + "l1=1.07" + "l2=2.13 f=-0.0432 shape=(1, 9000, 1)
logits [[ 0.9610532  -1.6742849   0.9617379  -0.42143798]]
Iteration 500 of 1000: loss=2.75 " + "l1=0.647" + "l2=2.1 f=-0.022 shape=(1, 9000, 1)
logits [[ 0.77036667 -1.5847844   0.78058875 -0.05420379]]
Iteration 600 of 1000: loss=2.4 " + "l1=0.279" + "l2=2.12 f=-0.00451 shape=(1, 9000, 1)
logits [[ 0.6152926  -1.5293401   0.62833023  0.26769215]]
Iteration 700 of 1000: loss=2.14 " + "l1=0.0308" + "l2=2.11 f=-0.00158 shape=(1, 9000, 1)
logits [[ 0.49356207 -1.491512    0.51570153  0.47592244]]
Iteration 800 of 1000: loss=1.94 " + "l1=0" + "l2=1.94 f=-0.0107 shape=(1, 9000, 1)
logits [[ 0.46313915 -1.4908088   0.48744807  0.4975614 ]]
Iteration 900 of 1000: loss=1.83 " + "l1=0" + "l2=1.83 f=-0.0198 shape=(1, 9000, 1)
logits [[ 0.44237316 -1.5149128   0.49143484  0.50206286]]
--- 317.67668652534485 seconds ---
Adv result:3
Loading record A03185
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0745 " + "l1=0.0745" + "l2=0 f=-0.389 shape=(1, 9000, 1)
logits [[ 5.127812  -2.3259137  3.0960474 -7.455624 ]]
Iteration 100 of 1000: loss=0.0739 " + "l1=0.0735" + "l2=0.000413 f=-0.385 shape=(1, 9000, 1)
logits [[ 5.073506  -2.2764099  3.059494  -7.3946652]]
Iteration 200 of 1000: loss=0.0737 " + "l1=0.0733" + "l2=0.000441 f=-0.383 shape=(1, 9000, 1)
logits [[ 5.0630527 -2.2675645  3.0525947 -7.3809557]]
Iteration 300 of 1000: loss=0.0736 " + "l1=0.0731" + "l2=0.000541 f=-0.382 shape=(1, 9000, 1)
logits [[ 5.0505886 -2.2579439  3.0448682 -7.364825 ]]
Iteration 400 of 1000: loss=0.0735 " + "l1=0.0729" + "l2=0.000656 f=-0.38 shape=(1, 9000, 1)
logits [[ 5.0383124 -2.2486548  3.0373769 -7.348961 ]]
Iteration 500 of 1000: loss=0.0734 " + "l1=0.0727" + "l2=0.000742 f=-0.379 shape=(1, 9000, 1)
logits [[ 5.026912  -2.239696   3.0301526 -7.3342853]]
Iteration 600 of 1000: loss=0.0734 " + "l1=0.0725" + "l2=0.000912 f=-0.378 shape=(1, 9000, 1)
logits [[ 5.0166764 -2.2315967  3.023545  -7.321136 ]]
Iteration 700 of 1000: loss=0.0734 " + "l1=0.0723" + "l2=0.00104 f=-0.377 shape=(1, 9000, 1)
logits [[ 5.007432  -2.2244205  3.0176892 -7.309129 ]]
Iteration 800 of 1000: loss=0.0733 " + "l1=0.0722" + "l2=0.00112 f=-0.376 shape=(1, 9000, 1)
logits [[ 4.9993243 -2.2181833  3.0125942 -7.298597 ]]
Iteration 900 of 1000: loss=0.0734 " + "l1=0.072" + "l2=0.00131 f=-0.375 shape=(1, 9000, 1)
logits [[ 4.9919243 -2.2121646  3.0077503 -7.289031 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.745 " + "l1=0.745" + "l2=0 f=-0.389 shape=(1, 9000, 1)
logits [[ 5.127812  -2.3259137  3.0960474 -7.455624 ]]
Iteration 100 of 1000: loss=0.692 " + "l1=0.666" + "l2=0.0264 f=-0.352 shape=(1, 9000, 1)
logits [[ 4.7114735 -1.9490128  2.8127115 -6.983723 ]]
Iteration 200 of 1000: loss=0.671 " + "l1=0.635" + "l2=0.0363 f=-0.337 shape=(1, 9000, 1)
logits [[ 4.533667  -1.813781   2.7024453 -6.771278 ]]
Iteration 300 of 1000: loss=0.657 " + "l1=0.616" + "l2=0.041 f=-0.328 shape=(1, 9000, 1)
logits [[ 4.411788  -1.7462498  2.6321592 -6.608611 ]]
Iteration 400 of 1000: loss=0.644 " + "l1=0.597" + "l2=0.0478 f=-0.318 shape=(1, 9000, 1)
logits [[ 4.287672  -1.6779578  2.5555654 -6.4382086]]
Iteration 500 of 1000: loss=0.632 " + "l1=0.579" + "l2=0.0532 f=-0.309 shape=(1, 9000, 1)
logits [[ 4.1752267 -1.615237   2.486287  -6.2836504]]
Iteration 600 of 1000: loss=0.62 " + "l1=0.562" + "l2=0.0585 f=-0.302 shape=(1, 9000, 1)
logits [[ 4.068807  -1.5481532  2.415251  -6.1449733]]
Iteration 700 of 1000: loss=0.608 " + "l1=0.544" + "l2=0.0638 f=-0.297 shape=(1, 9000, 1)
logits [[ 3.9648175 -1.4755485  2.3395457 -6.0148726]]
Iteration 800 of 1000: loss=0.595 " + "l1=0.527" + "l2=0.068 f=-0.292 shape=(1, 9000, 1)
logits [[ 3.8694947 -1.3976707  2.2579331 -5.897241 ]]
Iteration 900 of 1000: loss=0.581 " + "l1=0.507" + "l2=0.0737 f=-0.286 shape=(1, 9000, 1)
logits [[ 3.7539809 -1.3166777  2.1679494 -5.7509723]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.45 " + "l1=7.45" + "l2=0 f=-0.389 shape=(1, 9000, 1)
logits [[ 5.127812  -2.3259137  3.0960474 -7.455624 ]]
Iteration 100 of 1000: loss=3.53 " + "l1=1.22" + "l2=2.31 f=-0.334 shape=(1, 9000, 1)
logits [[ 1.1139041  -0.10921928  0.99473244 -3.3369758 ]]
Iteration 200 of 1000: loss=2.17 " + "l1=0.359" + "l2=1.81 f=-0.384 shape=(1, 9000, 1)
logits [[ 0.6061176   0.2491482   0.60811275 -2.9985244 ]]
Iteration 300 of 1000: loss=1.68 " + "l1=0.118" + "l2=1.57 f=-0.4 shape=(1, 9000, 1)
logits [[ 0.4942775   0.37653863  0.49002045 -2.9610834 ]]
Iteration 400 of 1000: loss=1.36 " + "l1=0" + "l2=1.36 f=-0.413 shape=(1, 9000, 1)
logits [[ 0.4309789   0.44380522  0.4427155  -2.9682376 ]]
Iteration 500 of 1000: loss=1.17 " + "l1=0.00143" + "l2=1.16 f=-0.411 shape=(1, 9000, 1)
logits [[ 0.45177218  0.4542252   0.45565927 -3.0038633 ]]
Iteration 600 of 1000: loss=1.04 " + "l1=0" + "l2=1.04 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.46480665  0.4671839   0.4650988  -3.0111341 ]]
Iteration 700 of 1000: loss=0.927 " + "l1=0.00114" + "l2=0.925 f=-0.401 shape=(1, 9000, 1)
logits [[ 0.47804368  0.4794781   0.48062202 -3.0409155 ]]
Iteration 800 of 1000: loss=0.846 " + "l1=0.00615" + "l2=0.839 f=-0.396 shape=(1, 9000, 1)
logits [[ 0.4820349   0.48065037  0.48680234 -3.0341718 ]]
Iteration 900 of 1000: loss=0.769 " + "l1=0.00598" + "l2=0.763 f=-0.395 shape=(1, 9000, 1)
logits [[ 0.47570226  0.47491392  0.48089877 -3.011028  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.1 " + "l1=4.1" + "l2=0 f=-0.389 shape=(1, 9000, 1)
logits [[ 5.127812  -2.3259137  3.0960474 -7.455624 ]]
Iteration 100 of 1000: loss=2.86 " + "l1=2.26" + "l2=0.6 f=-0.282 shape=(1, 9000, 1)
logits [[ 3.1310554  -0.98482573  1.8333368  -5.1065016 ]]
Iteration 200 of 1000: loss=2.08 " + "l1=0.921" + "l2=1.16 f=-0.316 shape=(1, 9000, 1)
logits [[ 1.3575236  -0.31708202  1.0305752  -3.3356156 ]]
Iteration 300 of 1000: loss=1.54 " + "l1=0.42" + "l2=1.12 f=-0.356 shape=(1, 9000, 1)
logits [[ 7.6251245e-01 -1.7613564e-03  7.5735193e-01 -2.9417624e+00]]
Iteration 400 of 1000: loss=1.24 " + "l1=0.289" + "l2=0.953 f=-0.358 shape=(1, 9000, 1)
logits [[ 0.6551968   0.13912989  0.6642921  -2.890797  ]]
Iteration 500 of 1000: loss=1.05 " + "l1=0.197" + "l2=0.856 f=-0.372 shape=(1, 9000, 1)
logits [[ 0.61506534  0.26666346  0.6242604  -2.9933882 ]]
Iteration 600 of 1000: loss=0.926 " + "l1=0.137" + "l2=0.789 f=-0.367 shape=(1, 9000, 1)
logits [[ 0.61373216  0.36486286  0.6120179  -3.0568583 ]]
Iteration 700 of 1000: loss=0.828 " + "l1=0.0884" + "l2=0.739 f=-0.36 shape=(1, 9000, 1)
logits [[ 0.58900625  0.4282231   0.5835255  -3.0423942 ]]
Iteration 800 of 1000: loss=0.728 " + "l1=0.0326" + "l2=0.696 f=-0.359 shape=(1, 9000, 1)
logits [[ 0.52368766  0.4714637   0.5307116  -2.9633043 ]]
Iteration 900 of 1000: loss=0.644 " + "l1=0.00219" + "l2=0.641 f=-0.36 shape=(1, 9000, 1)
logits [[ 0.46757138  0.47959274  0.4835787  -2.8694305 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.42 " + "l1=2.42" + "l2=0 f=-0.389 shape=(1, 9000, 1)
logits [[ 5.127812  -2.3259137  3.0960474 -7.455624 ]]
Iteration 100 of 1000: loss=1.95 " + "l1=1.72" + "l2=0.227 f=-0.297 shape=(1, 9000, 1)
logits [[ 3.9158473 -1.3805285  2.3012776 -6.0244536]]
Iteration 200 of 1000: loss=1.75 " + "l1=1.41" + "l2=0.345 f=-0.266 shape=(1, 9000, 1)
logits [[ 3.2738345 -1.0633893  1.903568  -5.177013 ]]
Iteration 300 of 1000: loss=1.53 " + "l1=1.08" + "l2=0.455 f=-0.244 shape=(1, 9000, 1)
logits [[ 2.5211816 -0.7883123  1.4984899 -4.207886 ]]
Iteration 400 of 1000: loss=1.24 " + "l1=0.648" + "l2=0.589 f=-0.299 shape=(1, 9000, 1)
logits [[ 1.6146282  -0.37887973  1.0998126  -3.5311186 ]]
Iteration 500 of 1000: loss=1.09 " + "l1=0.479" + "l2=0.613 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.2536126  -0.22070001  0.94124377 -3.2207966 ]]
Iteration 600 of 1000: loss=0.991 " + "l1=0.326" + "l2=0.665 f=-0.327 shape=(1, 9000, 1)
logits [[ 0.919951   -0.08343225  0.83225775 -2.975091  ]]
Iteration 700 of 1000: loss=0.88 " + "l1=0.251" + "l2=0.63 f=-0.344 shape=(1, 9000, 1)
logits [[ 0.7816773   0.01421763  0.78633946 -2.9574878 ]]
Iteration 800 of 1000: loss=0.787 " + "l1=0.223" + "l2=0.564 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.7693311   0.08366075  0.77003825 -3.0097377 ]]
Iteration 900 of 1000: loss=0.707 " + "l1=0.198" + "l2=0.508 f=-0.342 shape=(1, 9000, 1)
logits [[ 0.75289947  0.14259683  0.74704254 -3.009214  ]]
--- 323.5109498500824 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0203 " + "l1=0.0203" + "l2=0 f=-0.389 shape=(1, 9000, 1)
logits [[ 5.127812  -2.3259137  3.0960474 -7.455624 ]]
Iteration 100 of 1000: loss=0.0201 " + "l1=0.0199" + "l2=0.000179 f=-0.389 shape=(1, 9000, 1)
logits [[ 5.097119  -2.3347497  3.1032917 -7.423247 ]]
Iteration 200 of 1000: loss=0.02 " + "l1=0.0199" + "l2=0.000146 f=-0.389 shape=(1, 9000, 1)
logits [[ 5.0943017 -2.3353589  3.1042855 -7.420036 ]]
Iteration 300 of 1000: loss=0.02 " + "l1=0.0198" + "l2=0.000179 f=-0.389 shape=(1, 9000, 1)
logits [[ 5.0887156 -2.3367052  3.1059172 -7.4139476]]
Iteration 400 of 1000: loss=0.02 " + "l1=0.0197" + "l2=0.000222 f=-0.389 shape=(1, 9000, 1)
logits [[ 5.082786  -2.338508   3.1078963 -7.4079123]]
Iteration 500 of 1000: loss=0.02 " + "l1=0.0197" + "l2=0.000298 f=-0.389 shape=(1, 9000, 1)
logits [[ 5.076959  -2.3401124  3.1097918 -7.4021306]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.203 " + "l1=0.203" + "l2=0 f=-0.389 shape=(1, 9000, 1)
logits [[ 5.127812  -2.3259137  3.0960474 -7.455624 ]]
Iteration 100 of 1000: loss=0.186 " + "l1=0.177" + "l2=0.00828 f=-0.389 shape=(1, 9000, 1)
logits [[ 4.932123  -2.3998206  3.1586647 -7.247576 ]]
Iteration 200 of 1000: loss=0.177 " + "l1=0.165" + "l2=0.0119 f=-0.389 shape=(1, 9000, 1)
logits [[ 4.8391905 -2.4314167  3.1851003 -7.147282 ]]
Iteration 300 of 1000: loss=0.17 " + "l1=0.155" + "l2=0.0149 f=-0.39 shape=(1, 9000, 1)
logits [[ 4.7606606 -2.4583068  3.2062352 -7.0681257]]
Iteration 400 of 1000: loss=0.165 " + "l1=0.147" + "l2=0.0174 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.6973104 -2.4809256  3.225268  -7.0057373]]
Iteration 500 of 1000: loss=0.16 " + "l1=0.14" + "l2=0.0196 f=-0.393 shape=(1, 9000, 1)
logits [[ 4.646452  -2.5025415  3.2437434 -6.9578786]]
Iteration 600 of 1000: loss=0.155 " + "l1=0.134" + "l2=0.0217 f=-0.394 shape=(1, 9000, 1)
logits [[ 4.594623  -2.5174305  3.256981  -6.909034 ]]
Iteration 700 of 1000: loss=0.151 " + "l1=0.128" + "l2=0.0237 f=-0.395 shape=(1, 9000, 1)
logits [[ 4.544508  -2.5307925  3.2688236 -6.861695 ]]
Iteration 800 of 1000: loss=0.147 " + "l1=0.122" + "l2=0.0255 f=-0.396 shape=(1, 9000, 1)
logits [[ 4.495559  -2.5431201  3.2800188 -6.815002 ]]
Iteration 900 of 1000: loss=0.143 " + "l1=0.115" + "l2=0.0273 f=-0.398 shape=(1, 9000, 1)
logits [[ 4.449886  -2.5637245  3.2960167 -6.772328 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.03 " + "l1=2.03" + "l2=0 f=-0.389 shape=(1, 9000, 1)
logits [[ 5.127812  -2.3259137  3.0960474 -7.455624 ]]
Iteration 100 of 1000: loss=0.622 " + "l1=0.0215" + "l2=0.6 f=-0.417 shape=(1, 9000, 1)
logits [[ 3.5215027 -2.9471033  3.4999845 -5.741437 ]]
Iteration 200 of 1000: loss=0.376 " + "l1=0.00371" + "l2=0.372 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.4965277 -2.940079   3.4928198 -5.708944 ]]
Iteration 300 of 1000: loss=0.28 " + "l1=0.00122" + "l2=0.279 f=-0.42 shape=(1, 9000, 1)
logits [[ 3.49845   -2.9371514  3.4972308 -5.736715 ]]
Iteration 400 of 1000: loss=0.227 " + "l1=0" + "l2=0.227 f=-0.424 shape=(1, 9000, 1)
logits [[ 3.4784234 -2.9274662  3.493062  -5.739815 ]]
Iteration 500 of 1000: loss=0.187 " + "l1=0.00805" + "l2=0.179 f=-0.428 shape=(1, 9000, 1)
logits [[ 3.4799647 -2.9095092  3.4719193 -5.755205 ]]
Iteration 600 of 1000: loss=0.158 " + "l1=0" + "l2=0.158 f=-0.434 shape=(1, 9000, 1)
logits [[ 3.438675  -2.9122865  3.4585686 -5.720283 ]]
Iteration 700 of 1000: loss=0.133 " + "l1=0.00125" + "l2=0.132 f=-0.439 shape=(1, 9000, 1)
logits [[ 3.4485064 -2.9056804  3.4472609 -5.7441497]]
Iteration 800 of 1000: loss=0.12 " + "l1=0.00424" + "l2=0.116 f=-0.444 shape=(1, 9000, 1)
logits [[ 3.4516804 -2.9105515  3.4474368 -5.7639546]]
Iteration 900 of 1000: loss=0.106 " + "l1=0" + "l2=0.106 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.444377  -2.9176638  3.4499931 -5.766526 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.12 " + "l1=1.12" + "l2=0 f=-0.389 shape=(1, 9000, 1)
logits [[ 5.127812  -2.3259137  3.0960474 -7.455624 ]]
Iteration 100 of 1000: loss=0.63 " + "l1=0.389" + "l2=0.241 f=-0.405 shape=(1, 9000, 1)
logits [[ 4.096552  -2.736733   3.3897035 -6.3678756]]
Iteration 200 of 1000: loss=0.421 " + "l1=0.099" + "l2=0.322 f=-0.408 shape=(1, 9000, 1)
logits [[ 3.6273289 -2.8523793  3.447349  -5.855008 ]]
Iteration 300 of 1000: loss=0.279 " + "l1=0" + "l2=0.279 f=-0.414 shape=(1, 9000, 1)
logits [[ 3.4810746 -2.8989565  3.4821956 -5.7196736]]
Iteration 400 of 1000: loss=0.213 " + "l1=0.00431" + "l2=0.209 f=-0.418 shape=(1, 9000, 1)
logits [[ 3.5053346 -2.912749   3.497491  -5.762936 ]]
Iteration 500 of 1000: loss=0.17 " + "l1=0" + "l2=0.17 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.4734397 -2.9096584  3.481699  -5.745045 ]]
Iteration 600 of 1000: loss=0.14 " + "l1=0" + "l2=0.14 f=-0.432 shape=(1, 9000, 1)
logits [[ 3.4622278 -2.9049904  3.4653277 -5.7487135]]
Iteration 700 of 1000: loss=0.12 " + "l1=0" + "l2=0.12 f=-0.435 shape=(1, 9000, 1)
logits [[ 3.4557095 -2.9010243  3.458783  -5.754602 ]]
Iteration 800 of 1000: loss=0.105 " + "l1=0" + "l2=0.105 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.4516962 -2.9046156  3.4577858 -5.764605 ]]
Iteration 900 of 1000: loss=0.0943 " + "l1=0.000389" + "l2=0.0939 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.4541366 -2.9029975  3.4534287 -5.775393 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.66 " + "l1=0.66" + "l2=0 f=-0.389 shape=(1, 9000, 1)
logits [[ 5.127812  -2.3259137  3.0960474 -7.455624 ]]
Iteration 100 of 1000: loss=0.48 " + "l1=0.392" + "l2=0.0874 f=-0.396 shape=(1, 9000, 1)
logits [[ 4.493686  -2.5728383  3.286308  -6.789781 ]]
Iteration 200 of 1000: loss=0.402 " + "l1=0.286" + "l2=0.116 f=-0.398 shape=(1, 9000, 1)
logits [[ 4.234632  -2.6664317  3.3559163 -6.516873 ]]
Iteration 300 of 1000: loss=0.339 " + "l1=0.191" + "l2=0.147 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.9894056 -2.7383327  3.4004667 -6.2610235]]
Iteration 400 of 1000: loss=0.28 " + "l1=0.115" + "l2=0.165 f=-0.403 shape=(1, 9000, 1)
logits [[ 3.7945237 -2.7855592  3.4394364 -6.058917 ]]
Iteration 500 of 1000: loss=0.222 " + "l1=0.0395" + "l2=0.182 f=-0.407 shape=(1, 9000, 1)
logits [[ 3.605928  -2.8471928  3.48446   -5.871584 ]]
Iteration 600 of 1000: loss=0.164 " + "l1=0.0024" + "l2=0.162 f=-0.416 shape=(1, 9000, 1)
logits [[ 3.5177846 -2.9121547  3.5104136 -5.7783713]]
Iteration 700 of 1000: loss=0.131 " + "l1=0" + "l2=0.131 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.502     -2.916778   3.5033183 -5.7753096]]
Iteration 800 of 1000: loss=0.111 " + "l1=0" + "l2=0.111 f=-0.428 shape=(1, 9000, 1)
logits [[ 3.479458  -2.9104087  3.4864163 -5.765618 ]]
Iteration 900 of 1000: loss=0.097 " + "l1=0" + "l2=0.097 f=-0.432 shape=(1, 9000, 1)
logits [[ 3.4753308 -2.91018    3.4775188 -5.7702327]]
--- 301.1276972293854 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.126 " + "l1=0.126" + "l2=0 f=-0.389 shape=(1, 9000, 1)
logits [[ 5.127812  -2.3259137  3.0960474 -7.455624 ]]
Iteration 100 of 1000: loss=0.125 " + "l1=0.124" + "l2=0.000646 f=-0.384 shape=(1, 9000, 1)
logits [[ 5.048803  -2.2987137  3.0643408 -7.350981 ]]
Iteration 200 of 1000: loss=0.124 " + "l1=0.124" + "l2=0.000751 f=-0.383 shape=(1, 9000, 1)
logits [[ 5.0275474 -2.2918556  3.0560455 -7.3229227]]
Iteration 300 of 1000: loss=0.124 " + "l1=0.123" + "l2=0.000947 f=-0.381 shape=(1, 9000, 1)
logits [[ 5.00398   -2.2844715  3.046877  -7.2920375]]
Iteration 400 of 1000: loss=0.124 " + "l1=0.122" + "l2=0.00121 f=-0.38 shape=(1, 9000, 1)
logits [[ 4.981557  -2.2777238  3.0381794 -7.262458 ]]
Iteration 500 of 1000: loss=0.123 " + "l1=0.122" + "l2=0.00144 f=-0.379 shape=(1, 9000, 1)
logits [[ 4.96102   -2.2716296  3.0302122 -7.2353315]]
Iteration 600 of 1000: loss=0.123 " + "l1=0.122" + "l2=0.00166 f=-0.378 shape=(1, 9000, 1)
logits [[ 4.943492  -2.2662704  3.0232306 -7.21199  ]]
Iteration 700 of 1000: loss=0.123 " + "l1=0.121" + "l2=0.00191 f=-0.377 shape=(1, 9000, 1)
logits [[ 4.9284267 -2.2619941  3.0184278 -7.1923876]]
Iteration 800 of 1000: loss=0.123 " + "l1=0.121" + "l2=0.00213 f=-0.376 shape=(1, 9000, 1)
logits [[ 4.9145727 -2.2581613  3.0140915 -7.1744905]]
Iteration 900 of 1000: loss=0.123 " + "l1=0.121" + "l2=0.00229 f=-0.375 shape=(1, 9000, 1)
logits [[ 4.9012384 -2.2546158  3.0099893 -7.1574035]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.26 " + "l1=1.26" + "l2=0 f=-0.389 shape=(1, 9000, 1)
logits [[ 5.127812  -2.3259137  3.0960474 -7.455624 ]]
Iteration 100 of 1000: loss=1.15 " + "l1=1.1" + "l2=0.0519 f=-0.342 shape=(1, 9000, 1)
logits [[ 4.443789  -2.102108   2.8222616 -6.5321355]]
Iteration 200 of 1000: loss=1.09 " + "l1=1.01" + "l2=0.0817 f=-0.327 shape=(1, 9000, 1)
logits [[ 4.0790215 -2.0468123  2.687149  -6.0270386]]
Iteration 300 of 1000: loss=1.04 " + "l1=0.929" + "l2=0.113 f=-0.309 shape=(1, 9000, 1)
logits [[ 3.7473755 -1.9865977  2.544547  -5.542728 ]]
Iteration 400 of 1000: loss=1 " + "l1=0.856" + "l2=0.144 f=-0.3 shape=(1, 9000, 1)
logits [[ 3.4465714 -1.9405903  2.4096274 -5.11672  ]]
Iteration 500 of 1000: loss=0.963 " + "l1=0.794" + "l2=0.169 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.1867888 -1.8809625  2.274632  -4.752368 ]]
Iteration 600 of 1000: loss=0.928 " + "l1=0.741" + "l2=0.186 f=-0.286 shape=(1, 9000, 1)
logits [[ 2.9663594 -1.827143   2.1638832 -4.446033 ]]
Iteration 700 of 1000: loss=0.895 " + "l1=0.7" + "l2=0.195 f=-0.282 shape=(1, 9000, 1)
logits [[ 2.793047  -1.7796208  2.0689328 -4.20952  ]]
Iteration 800 of 1000: loss=0.861 " + "l1=0.658" + "l2=0.203 f=-0.279 shape=(1, 9000, 1)
logits [[ 2.6114323 -1.7292837  1.9707807 -3.9688113]]
Iteration 900 of 1000: loss=0.829 " + "l1=0.623" + "l2=0.205 f=-0.283 shape=(1, 9000, 1)
logits [[ 2.4517083 -1.7009     1.8975912 -3.7815545]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.6 " + "l1=12.6" + "l2=0 f=-0.389 shape=(1, 9000, 1)
logits [[ 5.127812  -2.3259137  3.0960474 -7.455624 ]]
Iteration 100 of 1000: loss=5.26 " + "l1=2.69" + "l2=2.57 f=-0.213 shape=(1, 9000, 1)
logits [[ 0.8803979 -0.8704997  0.9142983 -1.7754209]]
Iteration 200 of 1000: loss=3.63 " + "l1=0.837" + "l2=2.79 f=-0.207 shape=(1, 9000, 1)
logits [[-0.11749193 -0.6124686   0.36984223 -0.46705675]]
Iteration 300 of 1000: loss=2.75 " + "l1=0.141" + "l2=2.61 f=-0.183 shape=(1, 9000, 1)
logits [[-0.29511806 -0.69276595  0.19808097  0.05705146]]
Iteration 400 of 1000: loss=2.35 " + "l1=0.0405" + "l2=2.31 f=-0.181 shape=(1, 9000, 1)
logits [[-0.27155158 -0.7870821   0.18809663  0.14761037]]
Iteration 500 of 1000: loss=2.08 " + "l1=0" + "l2=2.08 f=-0.174 shape=(1, 9000, 1)
logits [[-0.24552435 -0.8444772   0.19499032  0.1979464 ]]
Iteration 600 of 1000: loss=1.94 " + "l1=0.00526" + "l2=1.94 f=-0.176 shape=(1, 9000, 1)
logits [[-0.22255972 -0.8755042   0.20016849  0.19490564]]
Iteration 700 of 1000: loss=1.84 " + "l1=0.000742" + "l2=1.84 f=-0.175 shape=(1, 9000, 1)
logits [[-0.21105829 -0.90987134  0.21071494  0.20997337]]
Iteration 800 of 1000: loss=1.73 " + "l1=0" + "l2=1.73 f=-0.171 shape=(1, 9000, 1)
logits [[-0.19807641 -0.93791497  0.22114266  0.2308102 ]]
Iteration 900 of 1000: loss=1.59 " + "l1=0" + "l2=1.59 f=-0.164 shape=(1, 9000, 1)
logits [[-0.1907273  -0.95149696  0.2325571   0.25182378]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.92 " + "l1=6.92" + "l2=0 f=-0.389 shape=(1, 9000, 1)
logits [[ 5.127812  -2.3259137  3.0960474 -7.455624 ]]
Iteration 100 of 1000: loss=3.94 " + "l1=2.37" + "l2=1.57 f=-0.211 shape=(1, 9000, 1)
logits [[ 1.6089544 -1.3484282  1.5870497 -2.693252 ]]
Iteration 200 of 1000: loss=2.92 " + "l1=1.53" + "l2=1.38 f=-0.232 shape=(1, 9000, 1)
logits [[ 0.94643366 -0.9898127   0.95290905 -1.8362551 ]]
Iteration 300 of 1000: loss=2.48 " + "l1=1.13" + "l2=1.36 f=-0.239 shape=(1, 9000, 1)
logits [[ 0.5935036  -0.89164454  0.6949233  -1.3528892 ]]
Iteration 400 of 1000: loss=2.24 " + "l1=0.86" + "l2=1.38 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.39699447 -0.8477287   0.5363793  -1.0280083 ]]
Iteration 500 of 1000: loss=2.01 " + "l1=0.61" + "l2=1.4 f=-0.212 shape=(1, 9000, 1)
logits [[ 0.25416413 -0.8245325   0.41514772 -0.6931709 ]]
Iteration 600 of 1000: loss=1.72 " + "l1=0.312" + "l2=1.41 f=-0.192 shape=(1, 9000, 1)
logits [[ 0.05648811 -0.7997403   0.27132034 -0.2953859 ]]
Iteration 700 of 1000: loss=1.5 " + "l1=0.167" + "l2=1.33 f=-0.179 shape=(1, 9000, 1)
logits [[-0.02575337 -0.86470926  0.23965822 -0.0644707 ]]
Iteration 800 of 1000: loss=1.29 " + "l1=0.0318" + "l2=1.26 f=-0.192 shape=(1, 9000, 1)
logits [[-0.13703422 -0.9074665   0.16685624  0.10905129]]
Iteration 900 of 1000: loss=1.1 " + "l1=0" + "l2=1.1 f=-0.198 shape=(1, 9000, 1)
logits [[-0.17912702 -0.93254364  0.15418346  0.1639196 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.09 " + "l1=4.09" + "l2=0 f=-0.389 shape=(1, 9000, 1)
logits [[ 5.127812  -2.3259137  3.0960474 -7.455624 ]]
Iteration 100 of 1000: loss=2.96 " + "l1=2.36" + "l2=0.599 f=-0.267 shape=(1, 9000, 1)
logits [[ 2.8890076 -1.7946501  2.2162359 -4.3781075]]
Iteration 200 of 1000: loss=2.32 " + "l1=1.46" + "l2=0.853 f=-0.226 shape=(1, 9000, 1)
logits [[ 1.7109182 -1.5106939  1.6913912 -2.7943716]]
Iteration 300 of 1000: loss=2.01 " + "l1=1.17" + "l2=0.837 f=-0.235 shape=(1, 9000, 1)
logits [[ 1.326521  -1.3232318  1.3326212 -2.2748013]]
Iteration 400 of 1000: loss=1.86 " + "l1=1.03" + "l2=0.821 f=-0.232 shape=(1, 9000, 1)
logits [[ 1.150799  -1.199441   1.151154  -2.0310154]]
Iteration 500 of 1000: loss=1.72 " + "l1=0.93" + "l2=0.792 f=-0.233 shape=(1, 9000, 1)
logits [[ 1.015399  -1.1231318  1.0196342 -1.8430213]]
Iteration 600 of 1000: loss=1.58 " + "l1=0.799" + "l2=0.781 f=-0.232 shape=(1, 9000, 1)
logits [[ 0.8433853  -1.0293745   0.85921353 -1.6006068 ]]
Iteration 700 of 1000: loss=1.41 " + "l1=0.656" + "l2=0.75 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.6649491  -0.91313607  0.67397463 -1.3457847 ]]
Iteration 800 of 1000: loss=1.26 " + "l1=0.55" + "l2=0.712 f=-0.204 shape=(1, 9000, 1)
logits [[ 0.5831028  -0.87662125  0.5860307  -1.1075289 ]]
Iteration 900 of 1000: loss=1.15 " + "l1=0.483" + "l2=0.662 f=-0.188 shape=(1, 9000, 1)
logits [[ 0.529939  -0.8686274  0.5363447 -0.9496781]]
--- 329.303564786911 seconds ---
Adv result:3
