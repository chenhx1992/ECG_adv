Already up-to-date.
Loading model
Loading ground truth file
Attack diff is running...
Loading record A01386
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.072 " + "l1=0.072" + "l2=0 f=-0.657 shape=(1, 9000, 1)
logits [[ 4.652101 -2.550223  3.065643 -7.793763]]
Iteration 100 of 1000: loss=0.0718 " + "l1=0.0717" + "l2=0.000192 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.6283393 -2.5369196  3.0563023 -7.767191 ]]
Iteration 200 of 1000: loss=0.0718 " + "l1=0.0716" + "l2=0.000168 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.6277866 -2.5355957  3.0555046 -7.7664156]]
Iteration 300 of 1000: loss=0.0718 " + "l1=0.0716" + "l2=0.000187 f=-0.654 shape=(1, 9000, 1)
logits [[ 4.6252933 -2.533674   3.0541751 -7.7635803]]
Iteration 400 of 1000: loss=0.0718 " + "l1=0.0715" + "l2=0.00025 f=-0.654 shape=(1, 9000, 1)
logits [[ 4.6224475 -2.5318487  3.052881  -7.7603993]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.72 " + "l1=0.72" + "l2=0 f=-0.657 shape=(1, 9000, 1)
logits [[ 4.652101 -2.550223  3.065643 -7.793763]]
Iteration 100 of 1000: loss=0.703 " + "l1=0.691" + "l2=0.0114 f=-0.645 shape=(1, 9000, 1)
logits [[ 4.469985  -2.4429743  2.9844089 -7.590365 ]]
Iteration 200 of 1000: loss=0.697 " + "l1=0.682" + "l2=0.0149 f=-0.641 shape=(1, 9000, 1)
logits [[ 4.4129148 -2.4060133  2.9557505 -7.5284557]]
Iteration 300 of 1000: loss=0.692 " + "l1=0.674" + "l2=0.0179 f=-0.64 shape=(1, 9000, 1)
logits [[ 4.3597283 -2.3775601  2.93346   -7.473969 ]]
Iteration 400 of 1000: loss=0.687 " + "l1=0.666" + "l2=0.0207 f=-0.638 shape=(1, 9000, 1)
logits [[ 4.307977  -2.3513877  2.9126663 -7.42127  ]]
Iteration 500 of 1000: loss=0.682 " + "l1=0.658" + "l2=0.0236 f=-0.637 shape=(1, 9000, 1)
logits [[ 4.2537694 -2.3263285  2.889851  -7.367206 ]]
Iteration 600 of 1000: loss=0.677 " + "l1=0.65" + "l2=0.0261 f=-0.637 shape=(1, 9000, 1)
logits [[ 4.2008805 -2.3035738  2.8682082 -7.3124733]]
Iteration 700 of 1000: loss=0.671 " + "l1=0.642" + "l2=0.0287 f=-0.636 shape=(1, 9000, 1)
logits [[ 4.144205  -2.2793663  2.8455412 -7.253746 ]]
Iteration 800 of 1000: loss=0.665 " + "l1=0.633" + "l2=0.0314 f=-0.634 shape=(1, 9000, 1)
logits [[ 4.0822906 -2.250622   2.8189118 -7.187922 ]]
Iteration 900 of 1000: loss=0.658 " + "l1=0.625" + "l2=0.0331 f=-0.631 shape=(1, 9000, 1)
logits [[ 4.0226316 -2.2251174  2.7943673 -7.117858 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.2 " + "l1=7.2" + "l2=0 f=-0.657 shape=(1, 9000, 1)
logits [[ 4.652101 -2.550223  3.065643 -7.793763]]
Iteration 100 of 1000: loss=5.4 " + "l1=4.28" + "l2=1.11 f=-0.578 shape=(1, 9000, 1)
logits [[ 2.6699777 -1.6114948  2.2668307 -5.636762 ]]
Iteration 200 of 1000: loss=4.63 " + "l1=3.21" + "l2=1.42 f=-0.568 shape=(1, 9000, 1)
logits [[ 1.9136951 -1.2932165  1.9058769 -4.8003273]]
Iteration 300 of 1000: loss=4.19 " + "l1=2.79" + "l2=1.41 f=-0.554 shape=(1, 9000, 1)
logits [[ 1.692956  -1.0920825  1.6885189 -4.505664 ]]
Iteration 400 of 1000: loss=3.89 " + "l1=2.47" + "l2=1.42 f=-0.532 shape=(1, 9000, 1)
logits [[ 1.5288646  -0.94189477  1.5247415  -4.2391396 ]]
Iteration 500 of 1000: loss=3.62 " + "l1=2.16" + "l2=1.45 f=-0.519 shape=(1, 9000, 1)
logits [[ 1.35554    -0.79795986  1.3643945  -3.9984772 ]]
Iteration 600 of 1000: loss=3.42 " + "l1=1.97" + "l2=1.44 f=-0.505 shape=(1, 9000, 1)
logits [[ 1.2486012  -0.72460586  1.2456278  -3.7892253 ]]
Iteration 700 of 1000: loss=3.27 " + "l1=1.79" + "l2=1.47 f=-0.487 shape=(1, 9000, 1)
logits [[ 1.1178272 -0.6617587  1.1309205 -3.5346422]]
Iteration 800 of 1000: loss=3.16 " + "l1=1.68" + "l2=1.48 f=-0.475 shape=(1, 9000, 1)
logits [[ 1.0354564 -0.6312073  1.0445403 -3.3476365]]
Iteration 900 of 1000: loss=3.06 " + "l1=1.58" + "l2=1.48 f=-0.468 shape=(1, 9000, 1)
logits [[ 0.96745944 -0.6134384   0.9711274  -3.1974611 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=72 " + "l1=72" + "l2=0 f=-0.657 shape=(1, 9000, 1)
logits [[ 4.652101 -2.550223  3.065643 -7.793763]]
Iteration 100 of 1000: loss=17.7 " + "l1=5.63" + "l2=12 f=-0.423 shape=(1, 9000, 1)
logits [[ 0.54792434  0.02354322  0.5866765  -2.851596  ]]
Iteration 200 of 1000: loss=9.36 " + "l1=0" + "l2=9.36 f=-0.442 shape=(1, 9000, 1)
logits [[ 0.34765643  0.35130146  0.3509065  -2.8194592 ]]
Iteration 300 of 1000: loss=8.32 " + "l1=0" + "l2=8.32 f=-0.451 shape=(1, 9000, 1)
logits [[ 0.3228246   0.3796868   0.33611217 -2.8406358 ]]
Iteration 400 of 1000: loss=7.51 " + "l1=0.0221" + "l2=7.48 f=-0.465 shape=(1, 9000, 1)
logits [[ 0.33906123  0.35424018  0.35644886 -2.9100244 ]]
Iteration 500 of 1000: loss=6.95 " + "l1=0" + "l2=6.95 f=-0.466 shape=(1, 9000, 1)
logits [[ 0.34815502  0.3599652   0.33758754 -2.9078977 ]]
Iteration 600 of 1000: loss=6.51 " + "l1=0" + "l2=6.51 f=-0.466 shape=(1, 9000, 1)
logits [[ 0.32468474  0.35773054  0.3394918  -2.8845403 ]]
Iteration 700 of 1000: loss=6.11 " + "l1=0" + "l2=6.11 f=-0.468 shape=(1, 9000, 1)
logits [[ 0.34037957  0.35098758  0.33705586 -2.8996747 ]]
Iteration 800 of 1000: loss=5.78 " + "l1=0" + "l2=5.78 f=-0.465 shape=(1, 9000, 1)
logits [[ 0.340437   0.3442118  0.3373696 -2.8801603]]
Iteration 900 of 1000: loss=5.53 " + "l1=0" + "l2=5.53 f=-0.459 shape=(1, 9000, 1)
logits [[ 0.31582057  0.3399862   0.33834538 -2.8294542 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=39.6 " + "l1=39.6" + "l2=0 f=-0.657 shape=(1, 9000, 1)
logits [[ 4.652101 -2.550223  3.065643 -7.793763]]
Iteration 100 of 1000: loss=14.6 " + "l1=7.42" + "l2=7.16 f=-0.481 shape=(1, 9000, 1)
logits [[ 0.98573875 -0.35550624  0.99277836 -3.5471406 ]]
Iteration 200 of 1000: loss=8.39 " + "l1=0.0232" + "l2=8.36 f=-0.501 shape=(1, 9000, 1)
logits [[ 0.3877676  0.4137035  0.4179304 -3.2237322]]
Iteration 300 of 1000: loss=7.13 " + "l1=0" + "l2=7.13 f=-0.513 shape=(1, 9000, 1)
logits [[ 0.4019941   0.42150208  0.4138515  -3.289907  ]]
Iteration 400 of 1000: loss=6.38 " + "l1=0" + "l2=6.38 f=-0.516 shape=(1, 9000, 1)
logits [[ 0.4123411   0.4221603   0.40409312 -3.3044524 ]]
Iteration 500 of 1000: loss=5.84 " + "l1=0.0307" + "l2=5.8 f=-0.509 shape=(1, 9000, 1)
logits [[ 0.3926365  0.4115495  0.417126  -3.2562437]]
Iteration 600 of 1000: loss=5.44 " + "l1=0.0559" + "l2=5.38 f=-0.5 shape=(1, 9000, 1)
logits [[ 0.39018187  0.41209686  0.4222543  -3.2252333 ]]
Iteration 700 of 1000: loss=5.09 " + "l1=0" + "l2=5.09 f=-0.492 shape=(1, 9000, 1)
logits [[ 0.3808324   0.40891862  0.40561375 -3.164283  ]]
Iteration 800 of 1000: loss=4.86 " + "l1=0.0311" + "l2=4.83 f=-0.487 shape=(1, 9000, 1)
logits [[ 0.39655253  0.39499465  0.40064564 -3.1399882 ]]
Iteration 900 of 1000: loss=4.66 " + "l1=0" + "l2=4.66 f=-0.481 shape=(1, 9000, 1)
logits [[ 0.3671215   0.39226204  0.3806777  -3.0655286 ]]
--- 252.22394132614136 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0159 " + "l1=0.0159" + "l2=0 f=-0.657 shape=(1, 9000, 1)
logits [[ 4.652101 -2.550223  3.065643 -7.793763]]
Iteration 100 of 1000: loss=0.0158 " + "l1=0.0156" + "l2=0.000133 f=-0.657 shape=(1, 9000, 1)
logits [[ 4.633453  -2.553258   3.0694525 -7.7780857]]
Iteration 200 of 1000: loss=0.0157 " + "l1=0.0156" + "l2=9.97e-05 f=-0.657 shape=(1, 9000, 1)
logits [[ 4.6342897 -2.5532703  3.0698173 -7.779275 ]]
Iteration 300 of 1000: loss=0.0157 " + "l1=0.0156" + "l2=0.00012 f=-0.657 shape=(1, 9000, 1)
logits [[ 4.6329885 -2.5534487  3.0702708 -7.77852  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.159 " + "l1=0.159" + "l2=0 f=-0.657 shape=(1, 9000, 1)
logits [[ 4.652101 -2.550223  3.065643 -7.793763]]
Iteration 100 of 1000: loss=0.149 " + "l1=0.144" + "l2=0.00563 f=-0.66 shape=(1, 9000, 1)
logits [[ 4.528073  -2.5689812  3.0901172 -7.68919  ]]
Iteration 200 of 1000: loss=0.147 " + "l1=0.139" + "l2=0.0073 f=-0.662 shape=(1, 9000, 1)
logits [[ 4.4946184 -2.5776155  3.099783  -7.6630044]]
Iteration 300 of 1000: loss=0.144 " + "l1=0.136" + "l2=0.00854 f=-0.663 shape=(1, 9000, 1)
logits [[ 4.465868  -2.5827394  3.1073675 -7.641063 ]]
Iteration 400 of 1000: loss=0.142 " + "l1=0.132" + "l2=0.00954 f=-0.664 shape=(1, 9000, 1)
logits [[ 4.438303  -2.5857384  3.1139765 -7.620903 ]]
Iteration 500 of 1000: loss=0.139 " + "l1=0.129" + "l2=0.0104 f=-0.665 shape=(1, 9000, 1)
logits [[ 4.4107137 -2.588071   3.1200247 -7.6026545]]
Iteration 600 of 1000: loss=0.137 " + "l1=0.126" + "l2=0.0112 f=-0.666 shape=(1, 9000, 1)
logits [[ 4.3838887 -2.590738   3.1265113 -7.5849633]]
Iteration 700 of 1000: loss=0.134 " + "l1=0.122" + "l2=0.0121 f=-0.668 shape=(1, 9000, 1)
logits [[ 4.35486   -2.5933475  3.1319306 -7.5649633]]
Iteration 800 of 1000: loss=0.132 " + "l1=0.119" + "l2=0.0128 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.326898  -2.5957158  3.1366065 -7.544954 ]]
Iteration 900 of 1000: loss=0.129 " + "l1=0.116" + "l2=0.0134 f=-0.671 shape=(1, 9000, 1)
logits [[ 4.2990036 -2.5986981  3.141779  -7.5248904]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.59 " + "l1=1.59" + "l2=0 f=-0.657 shape=(1, 9000, 1)
logits [[ 4.652101 -2.550223  3.065643 -7.793763]]
Iteration 100 of 1000: loss=0.556 " + "l1=0.0142" + "l2=0.542 f=-0.706 shape=(1, 9000, 1)
logits [[ 3.3061535 -2.797436   3.2919755 -6.6250935]]
Iteration 200 of 1000: loss=0.413 " + "l1=0" + "l2=0.413 f=-0.712 shape=(1, 9000, 1)
logits [[ 3.3175786 -2.841236   3.3208346 -6.6441503]]
Iteration 300 of 1000: loss=0.352 " + "l1=0" + "l2=0.352 f=-0.713 shape=(1, 9000, 1)
logits [[ 3.3073025 -2.8471217  3.3175538 -6.629188 ]]
Iteration 400 of 1000: loss=0.305 " + "l1=0.0066" + "l2=0.298 f=-0.711 shape=(1, 9000, 1)
logits [[ 3.3063464 -2.83971    3.2997434 -6.610165 ]]
Iteration 500 of 1000: loss=0.267 " + "l1=0" + "l2=0.267 f=-0.706 shape=(1, 9000, 1)
logits [[ 3.2871916 -2.8310153  3.2895062 -6.5712285]]
Iteration 600 of 1000: loss=0.245 " + "l1=0" + "l2=0.245 f=-0.704 shape=(1, 9000, 1)
logits [[ 3.2790833 -2.830831   3.2919338 -6.55496  ]]
Iteration 700 of 1000: loss=0.221 " + "l1=0.00236" + "l2=0.219 f=-0.697 shape=(1, 9000, 1)
logits [[ 3.2971568 -2.829519   3.294798  -6.549596 ]]
Iteration 800 of 1000: loss=0.205 " + "l1=0" + "l2=0.205 f=-0.691 shape=(1, 9000, 1)
logits [[ 3.291741  -2.8276575  3.2951117 -6.5240946]]
Iteration 900 of 1000: loss=0.197 " + "l1=0.00757" + "l2=0.19 f=-0.686 shape=(1, 9000, 1)
logits [[ 3.2974753 -2.8230677  3.2899067 -6.508913 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.873 " + "l1=0.873" + "l2=0 f=-0.657 shape=(1, 9000, 1)
logits [[ 4.652101 -2.550223  3.065643 -7.793763]]
Iteration 100 of 1000: loss=0.566 " + "l1=0.361" + "l2=0.205 f=-0.687 shape=(1, 9000, 1)
logits [[ 3.8512833 -2.68489    3.1954958 -7.1096387]]
Iteration 200 of 1000: loss=0.431 " + "l1=0.142" + "l2=0.289 f=-0.7 shape=(1, 9000, 1)
logits [[ 3.5306814 -2.7763827  3.271977  -6.8278894]]
Iteration 300 of 1000: loss=0.32 " + "l1=0.00666" + "l2=0.313 f=-0.708 shape=(1, 9000, 1)
logits [[ 3.3424141 -2.8533185  3.3303006 -6.651782 ]]
Iteration 400 of 1000: loss=0.261 " + "l1=0.00353" + "l2=0.257 f=-0.701 shape=(1, 9000, 1)
logits [[ 3.3255835 -2.8488057  3.3191714 -6.6012907]]
Iteration 500 of 1000: loss=0.228 " + "l1=0" + "l2=0.228 f=-0.697 shape=(1, 9000, 1)
logits [[ 3.3108397 -2.8494291  3.3202507 -6.567763 ]]
Iteration 600 of 1000: loss=0.199 " + "l1=0.00341" + "l2=0.196 f=-0.69 shape=(1, 9000, 1)
logits [[ 3.3266253 -2.8475428  3.3204243 -6.55919  ]]
Iteration 700 of 1000: loss=0.18 " + "l1=0.00295" + "l2=0.177 f=-0.68 shape=(1, 9000, 1)
logits [[ 3.3237436 -2.8413525  3.3183715 -6.52239  ]]
Iteration 800 of 1000: loss=0.166 " + "l1=0" + "l2=0.166 f=-0.674 shape=(1, 9000, 1)
logits [[ 3.3139017 -2.8372579  3.3147147 -6.4863973]]
Iteration 900 of 1000: loss=0.157 " + "l1=0.00236" + "l2=0.154 f=-0.669 shape=(1, 9000, 1)
logits [[ 3.3082628 -2.8318172  3.3039796 -6.4545717]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.516 " + "l1=0.516" + "l2=0 f=-0.657 shape=(1, 9000, 1)
logits [[ 4.652101 -2.550223  3.065643 -7.793763]]
Iteration 100 of 1000: loss=0.417 " + "l1=0.352" + "l2=0.065 f=-0.673 shape=(1, 9000, 1)
logits [[ 4.2252116 -2.62654    3.1424317 -7.43433  ]]
Iteration 200 of 1000: loss=0.376 " + "l1=0.277" + "l2=0.0983 f=-0.684 shape=(1, 9000, 1)
logits [[ 4.0361023 -2.6692557  3.1823993 -7.28682  ]]
Iteration 300 of 1000: loss=0.337 " + "l1=0.213" + "l2=0.125 f=-0.689 shape=(1, 9000, 1)
logits [[ 3.8595076 -2.6933494  3.2055922 -7.128521 ]]
Iteration 400 of 1000: loss=0.302 " + "l1=0.164" + "l2=0.137 f=-0.692 shape=(1, 9000, 1)
logits [[ 3.7269828 -2.7184389  3.2217598 -6.997186 ]]
Iteration 500 of 1000: loss=0.267 " + "l1=0.117" + "l2=0.15 f=-0.691 shape=(1, 9000, 1)
logits [[ 3.6064258 -2.7512558  3.2471042 -6.8644466]]
Iteration 600 of 1000: loss=0.235 " + "l1=0.0764" + "l2=0.158 f=-0.689 shape=(1, 9000, 1)
logits [[ 3.5007122 -2.7799213  3.2656353 -6.741899 ]]
Iteration 700 of 1000: loss=0.207 " + "l1=0.0412" + "l2=0.166 f=-0.685 shape=(1, 9000, 1)
logits [[ 3.4080184 -2.8068423  3.2811115 -6.6225457]]
Iteration 800 of 1000: loss=0.185 " + "l1=0.0131" + "l2=0.172 f=-0.677 shape=(1, 9000, 1)
logits [[ 3.3345695 -2.8207047  3.2942529 -6.517542 ]]
Iteration 900 of 1000: loss=0.167 " + "l1=0.00442" + "l2=0.162 f=-0.671 shape=(1, 9000, 1)
logits [[ 3.3132787 -2.8265991  3.299671  -6.469964 ]]
--- 248.4192395210266 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.124 " + "l1=0.124" + "l2=0 f=-0.657 shape=(1, 9000, 1)
logits [[ 4.652101 -2.550223  3.065643 -7.793763]]
Iteration 100 of 1000: loss=0.124 " + "l1=0.124" + "l2=0.000432 f=-0.654 shape=(1, 9000, 1)
logits [[ 4.613297  -2.5430129  3.054768  -7.7400723]]
Iteration 200 of 1000: loss=0.124 " + "l1=0.123" + "l2=0.000411 f=-0.653 shape=(1, 9000, 1)
logits [[ 4.6098385 -2.5418806  3.0533633 -7.7346616]]
Iteration 300 of 1000: loss=0.124 " + "l1=0.123" + "l2=0.000451 f=-0.653 shape=(1, 9000, 1)
logits [[ 4.60447   -2.5406263  3.0514176 -7.7261286]]
Iteration 400 of 1000: loss=0.124 " + "l1=0.123" + "l2=0.000513 f=-0.652 shape=(1, 9000, 1)
logits [[ 4.5989003 -2.5394132  3.049419  -7.717109 ]]
Iteration 500 of 1000: loss=0.124 " + "l1=0.123" + "l2=0.000607 f=-0.651 shape=(1, 9000, 1)
logits [[ 4.593459  -2.5382428  3.0474439 -7.7080946]]
Iteration 600 of 1000: loss=0.124 " + "l1=0.123" + "l2=0.000699 f=-0.651 shape=(1, 9000, 1)
logits [[ 4.5879245 -2.537014   3.0454338 -7.698904 ]]
Iteration 700 of 1000: loss=0.124 " + "l1=0.123" + "l2=0.000782 f=-0.65 shape=(1, 9000, 1)
logits [[ 4.5825725 -2.5358055  3.0433877 -7.6898975]]
Iteration 800 of 1000: loss=0.123 " + "l1=0.123" + "l2=0.000883 f=-0.649 shape=(1, 9000, 1)
logits [[ 4.577237  -2.5346043  3.0414248 -7.6808496]]
Iteration 900 of 1000: loss=0.123 " + "l1=0.122" + "l2=0.00101 f=-0.648 shape=(1, 9000, 1)
logits [[ 4.572094  -2.5334184  3.039479  -7.67208  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.24 " + "l1=1.24" + "l2=0 f=-0.657 shape=(1, 9000, 1)
logits [[ 4.652101 -2.550223  3.065643 -7.793763]]
Iteration 100 of 1000: loss=1.2 " + "l1=1.16" + "l2=0.0319 f=-0.634 shape=(1, 9000, 1)
logits [[ 4.315222  -2.484364   2.961166  -7.3284616]]
Iteration 200 of 1000: loss=1.18 " + "l1=1.13" + "l2=0.0444 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.1824245 -2.4640892  2.9174647 -7.1474047]]
Iteration 300 of 1000: loss=1.16 " + "l1=1.1" + "l2=0.0554 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.0619364 -2.4457703  2.8759751 -6.968578 ]]
Iteration 400 of 1000: loss=1.14 " + "l1=1.07" + "l2=0.0663 f=-0.608 shape=(1, 9000, 1)
logits [[ 3.9351203 -2.4270637  2.832471  -6.7732234]]
Iteration 500 of 1000: loss=1.11 " + "l1=1.04" + "l2=0.0757 f=-0.595 shape=(1, 9000, 1)
logits [[ 3.8113127 -2.412946   2.79155   -6.5693674]]
Iteration 600 of 1000: loss=1.09 " + "l1=1" + "l2=0.0853 f=-0.58 shape=(1, 9000, 1)
logits [[ 3.675435  -2.406009   2.7482803 -6.336075 ]]
Iteration 700 of 1000: loss=1.05 " + "l1=0.956" + "l2=0.096 f=-0.561 shape=(1, 9000, 1)
logits [[ 3.5160944 -2.403677   2.6900806 -6.0478373]]
Iteration 800 of 1000: loss=1.01 " + "l1=0.9" + "l2=0.109 f=-0.543 shape=(1, 9000, 1)
logits [[ 3.3091943 -2.40817    2.6245263 -5.695759 ]]
Iteration 900 of 1000: loss=0.969 " + "l1=0.851" + "l2=0.117 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.1293766 -2.4145207  2.569368  -5.382843 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.4 " + "l1=12.4" + "l2=0 f=-0.657 shape=(1, 9000, 1)
logits [[ 4.652101 -2.550223  3.065643 -7.793763]]
Iteration 100 of 1000: loss=7.51 " + "l1=5.22" + "l2=2.29 f=-0.379 shape=(1, 9000, 1)
logits [[ 1.8744162 -1.9987897  1.9144821 -3.30787  ]]
Iteration 200 of 1000: loss=5.89 " + "l1=3.18" + "l2=2.71 f=-0.251 shape=(1, 9000, 1)
logits [[ 1.086916  -1.7806551  1.4336536 -1.74374  ]]
Iteration 300 of 1000: loss=4.64 " + "l1=1.86" + "l2=2.78 f=-0.17 shape=(1, 9000, 1)
logits [[ 0.535631  -1.6163274  1.1308472 -0.7320261]]
Iteration 400 of 1000: loss=3.44 " + "l1=0.405" + "l2=3.03 f=-0.107 shape=(1, 9000, 1)
logits [[-0.10912121 -1.4107318   0.74856645  0.343701  ]]
Iteration 500 of 1000: loss=2.51 " + "l1=0.0129" + "l2=2.49 f=-0.0954 shape=(1, 9000, 1)
logits [[-0.26593396 -1.3922889   0.6447864   0.6318376 ]]
Iteration 600 of 1000: loss=2.11 " + "l1=0" + "l2=2.11 f=-0.0899 shape=(1, 9000, 1)
logits [[-0.25162908 -1.4182037   0.6447156   0.6654066 ]]
Iteration 700 of 1000: loss=1.86 " + "l1=0" + "l2=1.86 f=-0.0838 shape=(1, 9000, 1)
logits [[-0.22191061 -1.442236    0.65022665  0.6789167 ]]
Iteration 800 of 1000: loss=1.66 " + "l1=0.000611" + "l2=1.66 f=-0.0726 shape=(1, 9000, 1)
logits [[-0.16145986 -1.4626096   0.6672244   0.6666134 ]]
Iteration 900 of 1000: loss=1.51 " + "l1=0" + "l2=1.51 f=-0.0631 shape=(1, 9000, 1)
logits [[-0.13222173 -1.4671214   0.66438216  0.68270516]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.85 " + "l1=6.85" + "l2=0 f=-0.657 shape=(1, 9000, 1)
logits [[ 4.652101 -2.550223  3.065643 -7.793763]]
Iteration 100 of 1000: loss=5.03 " + "l1=3.91" + "l2=1.12 f=-0.492 shape=(1, 9000, 1)
logits [[ 2.482585  -2.2635536  2.4336069 -4.6196666]]
Iteration 200 of 1000: loss=4.19 " + "l1=3.02" + "l2=1.17 f=-0.401 shape=(1, 9000, 1)
logits [[ 1.9965687 -2.1072626  1.9980644 -3.4919302]]
Iteration 300 of 1000: loss=3.64 " + "l1=2.49" + "l2=1.15 f=-0.33 shape=(1, 9000, 1)
logits [[ 1.7270678 -2.0036564  1.7446414 -2.7878559]]
Iteration 400 of 1000: loss=3.17 " + "l1=2.02" + "l2=1.15 f=-0.267 shape=(1, 9000, 1)
logits [[ 1.41801  -1.896368  1.543157 -2.1347  ]]
Iteration 500 of 1000: loss=2.75 " + "l1=1.54" + "l2=1.2 f=-0.201 shape=(1, 9000, 1)
logits [[ 1.0662218 -1.7838414  1.358066  -1.4456677]]
Iteration 600 of 1000: loss=2.37 " + "l1=1.06" + "l2=1.31 f=-0.132 shape=(1, 9000, 1)
logits [[ 0.7169934  -1.6693408   1.1739159  -0.74812824]]
Iteration 700 of 1000: loss=1.98 " + "l1=0.53" + "l2=1.45 f=-0.0969 shape=(1, 9000, 1)
logits [[ 0.30742455 -1.5352639   0.90211457 -0.06186163]]
Iteration 800 of 1000: loss=1.51 " + "l1=0.0271" + "l2=1.48 f=-0.0795 shape=(1, 9000, 1)
logits [[-0.06344912 -1.3764502   0.5856189   0.5363764 ]]
Iteration 900 of 1000: loss=1.22 " + "l1=0" + "l2=1.22 f=-0.0811 shape=(1, 9000, 1)
logits [[-0.05038273 -1.3765599   0.54604036  0.5564175 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.04 " + "l1=4.04" + "l2=0 f=-0.657 shape=(1, 9000, 1)
logits [[ 4.652101 -2.550223  3.065643 -7.793763]]
Iteration 100 of 1000: loss=3.42 " + "l1=3.02" + "l2=0.404 f=-0.576 shape=(1, 9000, 1)
logits [[ 3.3353214 -2.366129   2.6752636 -5.947694 ]]
Iteration 200 of 1000: loss=3.08 " + "l1=2.48" + "l2=0.598 f=-0.528 shape=(1, 9000, 1)
logits [[ 2.703432  -2.3188984  2.4447737 -4.9398966]]
Iteration 300 of 1000: loss=2.68 " + "l1=1.99" + "l2=0.691 f=-0.454 shape=(1, 9000, 1)
logits [[ 2.1855235 -2.244408   2.1747513 -3.9301987]]
Iteration 400 of 1000: loss=2.38 " + "l1=1.76" + "l2=0.615 f=-0.399 shape=(1, 9000, 1)
logits [[ 1.9915421 -2.1434827  1.9911956 -3.435422 ]]
Iteration 500 of 1000: loss=2.18 " + "l1=1.59" + "l2=0.584 f=-0.357 shape=(1, 9000, 1)
logits [[ 1.8417823 -2.056812   1.8433053 -3.0546372]]
Iteration 600 of 1000: loss=2 " + "l1=1.41" + "l2=0.598 f=-0.31 shape=(1, 9000, 1)
logits [[ 1.6449629 -1.9582385  1.6991916 -2.6242669]]
Iteration 700 of 1000: loss=1.84 " + "l1=1.25" + "l2=0.592 f=-0.265 shape=(1, 9000, 1)
logits [[ 1.493274  -1.8715532  1.5826199 -2.262638 ]]
Iteration 800 of 1000: loss=1.67 " + "l1=1.07" + "l2=0.606 f=-0.214 shape=(1, 9000, 1)
logits [[ 1.2968686 -1.7710953  1.4525167 -1.8357013]]
Iteration 900 of 1000: loss=1.5 " + "l1=0.908" + "l2=0.588 f=-0.171 shape=(1, 9000, 1)
logits [[ 1.1346991 -1.670019   1.3237774 -1.4707987]]
--- 285.23855090141296 seconds ---
Adv result:3
Loading record A01395
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.068 " + "l1=0.068" + "l2=0 f=-0.423 shape=(1, 9000, 1)
logits [[ 4.2102237 -2.5866456  2.6303022 -5.9441566]]
Iteration 100 of 1000: loss=0.0676 " + "l1=0.0673" + "l2=0.000278 f=-0.421 shape=(1, 9000, 1)
logits [[ 4.17135   -2.5617182  2.6121445 -5.905807 ]]
Iteration 200 of 1000: loss=0.0675 " + "l1=0.0673" + "l2=0.000263 f=-0.421 shape=(1, 9000, 1)
logits [[ 4.166883  -2.5590906  2.6098778 -5.90157  ]]
Iteration 300 of 1000: loss=0.0674 " + "l1=0.0671" + "l2=0.000294 f=-0.421 shape=(1, 9000, 1)
logits [[ 4.160015  -2.5548809  2.606367  -5.8948493]]
Iteration 400 of 1000: loss=0.0674 " + "l1=0.067" + "l2=0.000368 f=-0.421 shape=(1, 9000, 1)
logits [[ 4.152176  -2.5502365  2.6024737 -5.8873262]]
Iteration 500 of 1000: loss=0.0673 " + "l1=0.0669" + "l2=0.00041 f=-0.421 shape=(1, 9000, 1)
logits [[ 4.144197  -2.5455837  2.5985181 -5.8795223]]
Iteration 600 of 1000: loss=0.0673 " + "l1=0.0668" + "l2=0.000516 f=-0.42 shape=(1, 9000, 1)
logits [[ 4.1361017 -2.5410724  2.5946152 -5.871518 ]]
Iteration 700 of 1000: loss=0.0672 " + "l1=0.0666" + "l2=0.000591 f=-0.42 shape=(1, 9000, 1)
logits [[ 4.1277356 -2.536415   2.5906837 -5.8632383]]
Iteration 800 of 1000: loss=0.0672 " + "l1=0.0665" + "l2=0.000698 f=-0.42 shape=(1, 9000, 1)
logits [[ 4.1192546 -2.5318527  2.5868323 -5.854867 ]]
Iteration 900 of 1000: loss=0.0672 " + "l1=0.0664" + "l2=0.000776 f=-0.42 shape=(1, 9000, 1)
logits [[ 4.110379  -2.5271344  2.582886  -5.846225 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.68 " + "l1=0.68" + "l2=0 f=-0.423 shape=(1, 9000, 1)
logits [[ 4.2102237 -2.5866456  2.6303022 -5.9441566]]
Iteration 100 of 1000: loss=0.648 " + "l1=0.63" + "l2=0.018 f=-0.416 shape=(1, 9000, 1)
logits [[ 3.893185  -2.4096682  2.4953675 -5.644562 ]]
Iteration 200 of 1000: loss=0.636 " + "l1=0.612" + "l2=0.0237 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.7713678 -2.3488412  2.4431047 -5.5268726]]
Iteration 300 of 1000: loss=0.624 " + "l1=0.596" + "l2=0.0281 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.6577303 -2.2978399  2.3953843 -5.4142785]]
Iteration 400 of 1000: loss=0.612 " + "l1=0.579" + "l2=0.0327 f=-0.413 shape=(1, 9000, 1)
logits [[ 3.5453374 -2.247679   2.3467937 -5.2960353]]
Iteration 500 of 1000: loss=0.602 " + "l1=0.566" + "l2=0.0357 f=-0.41 shape=(1, 9000, 1)
logits [[ 3.452845  -2.2062614  2.3077402 -5.1936445]]
Iteration 600 of 1000: loss=0.592 " + "l1=0.554" + "l2=0.038 f=-0.406 shape=(1, 9000, 1)
logits [[ 3.3753655 -2.1680408  2.2738538 -5.1042924]]
Iteration 700 of 1000: loss=0.583 " + "l1=0.543" + "l2=0.0402 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.2957885 -2.1352327  2.24369   -5.013273 ]]
Iteration 800 of 1000: loss=0.574 " + "l1=0.532" + "l2=0.0422 f=-0.397 shape=(1, 9000, 1)
logits [[ 3.2182531 -2.1021845  2.2175627 -4.923145 ]]
Iteration 900 of 1000: loss=0.566 " + "l1=0.522" + "l2=0.044 f=-0.392 shape=(1, 9000, 1)
logits [[ 3.1514688 -2.0723333  2.1961038 -4.842723 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.8 " + "l1=6.8" + "l2=0 f=-0.423 shape=(1, 9000, 1)
logits [[ 4.2102237 -2.5866456  2.6303022 -5.9441566]]
Iteration 100 of 1000: loss=4.39 " + "l1=3.25" + "l2=1.14 f=-0.334 shape=(1, 9000, 1)
logits [[ 1.85288   -1.3923508  1.759832  -3.5559304]]
Iteration 200 of 1000: loss=3.66 " + "l1=2.52" + "l2=1.14 f=-0.292 shape=(1, 9000, 1)
logits [[ 1.4420481 -1.073347   1.4379046 -2.9731402]]
Iteration 300 of 1000: loss=3.26 " + "l1=2.1" + "l2=1.17 f=-0.273 shape=(1, 9000, 1)
logits [[ 1.1743395 -0.914537   1.1815444 -2.5314524]]
Iteration 400 of 1000: loss=2.95 " + "l1=1.8" + "l2=1.15 f=-0.271 shape=(1, 9000, 1)
logits [[ 0.93853325 -0.8581925   0.94222736 -2.1076798 ]]
Iteration 500 of 1000: loss=2.75 " + "l1=1.6" + "l2=1.15 f=-0.264 shape=(1, 9000, 1)
logits [[ 0.78296745 -0.8061006   0.7922897  -1.8238636 ]]
Iteration 600 of 1000: loss=2.55 " + "l1=1.41" + "l2=1.14 f=-0.254 shape=(1, 9000, 1)
logits [[ 0.6521107  -0.74943346  0.66229033 -1.5821202 ]]
Iteration 700 of 1000: loss=2.43 " + "l1=1.28" + "l2=1.14 f=-0.243 shape=(1, 9000, 1)
logits [[ 0.57148397 -0.70823586  0.57250553 -1.4074281 ]]
Iteration 800 of 1000: loss=2.31 " + "l1=1.14" + "l2=1.18 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.4788064  -0.6566924   0.48044994 -1.222555  ]]
Iteration 900 of 1000: loss=2.21 " + "l1=1.04" + "l2=1.17 f=-0.226 shape=(1, 9000, 1)
logits [[ 0.41025344 -0.62647855  0.41255    -1.0996007 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=68 " + "l1=68" + "l2=0 f=-0.423 shape=(1, 9000, 1)
logits [[ 4.2102237 -2.5866456  2.6303022 -5.9441566]]
Iteration 100 of 1000: loss=15.7 " + "l1=5.53" + "l2=10.2 f=-0.193 shape=(1, 9000, 1)
logits [[ 0.4073506  -0.11057905  0.44285393 -1.5098537 ]]
Iteration 200 of 1000: loss=8.33 " + "l1=0" + "l2=8.33 f=-0.156 shape=(1, 9000, 1)
logits [[ 0.02897859  0.04111239  0.03999325 -0.733584  ]]
Iteration 300 of 1000: loss=6.86 " + "l1=0" + "l2=6.86 f=-0.162 shape=(1, 9000, 1)
logits [[-0.01896693 -0.00092867 -0.00142121 -0.62511045]]
Iteration 400 of 1000: loss=6.19 " + "l1=0" + "l2=6.19 f=-0.151 shape=(1, 9000, 1)
logits [[-0.07592269 -0.01696937 -0.031967   -0.48058707]]
Iteration 500 of 1000: loss=5.64 " + "l1=0" + "l2=5.64 f=-0.15 shape=(1, 9000, 1)
logits [[-0.0586108  -0.05134826 -0.05249241 -0.43831542]]
Iteration 600 of 1000: loss=5.37 " + "l1=0.0961" + "l2=5.28 f=-0.149 shape=(1, 9000, 1)
logits [[-0.15483545 -0.07286303 -0.06325573 -0.3043251 ]]
Iteration 700 of 1000: loss=4.98 " + "l1=0" + "l2=4.98 f=-0.149 shape=(1, 9000, 1)
logits [[-0.11380336 -0.09373089 -0.10543534 -0.2829622 ]]
Iteration 800 of 1000: loss=4.69 " + "l1=0" + "l2=4.69 f=-0.152 shape=(1, 9000, 1)
logits [[-0.12918535 -0.11498634 -0.11932972 -0.24465418]]
Iteration 900 of 1000: loss=4.5 " + "l1=0" + "l2=4.5 f=-0.152 shape=(1, 9000, 1)
logits [[-0.21195677 -0.1165672  -0.12296835 -0.1579009 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=37.4 " + "l1=37.4" + "l2=0 f=-0.423 shape=(1, 9000, 1)
logits [[ 4.2102237 -2.5866456  2.6303022 -5.9441566]]
Iteration 100 of 1000: loss=12.5 " + "l1=6.77" + "l2=5.71 f=-0.244 shape=(1, 9000, 1)
logits [[ 0.8076225  -0.41860512  0.811945   -2.176689  ]]
Iteration 200 of 1000: loss=7.38 " + "l1=0.0937" + "l2=7.29 f=-0.164 shape=(1, 9000, 1)
logits [[-3.0872179e-02  3.3343025e-04  1.7366588e-02 -6.4462334e-01]]
Iteration 300 of 1000: loss=5.86 " + "l1=0.115" + "l2=5.75 f=-0.156 shape=(1, 9000, 1)
logits [[-0.04244369 -0.06333229 -0.04285712 -0.4754988 ]]
Iteration 400 of 1000: loss=5.11 " + "l1=0.000741" + "l2=5.11 f=-0.162 shape=(1, 9000, 1)
logits [[-0.10042457 -0.08356664 -0.08343188 -0.38036948]]
Iteration 500 of 1000: loss=4.65 " + "l1=0.0431" + "l2=4.61 f=-0.165 shape=(1, 9000, 1)
logits [[-0.13601121 -0.12051367 -0.11266919 -0.29193068]]
Iteration 600 of 1000: loss=4.32 " + "l1=0.0217" + "l2=4.3 f=-0.165 shape=(1, 9000, 1)
logits [[-0.15728289 -0.12977612 -0.12583412 -0.24569237]]
Iteration 700 of 1000: loss=4.03 " + "l1=0" + "l2=4.03 f=-0.164 shape=(1, 9000, 1)
logits [[-0.18023874 -0.14154501 -0.14162682 -0.19197056]]
Iteration 800 of 1000: loss=3.84 " + "l1=0" + "l2=3.84 f=-0.174 shape=(1, 9000, 1)
logits [[-0.16926959 -0.12853639 -0.1344755  -0.2617737 ]]
Iteration 900 of 1000: loss=3.61 " + "l1=0.0247" + "l2=3.59 f=-0.184 shape=(1, 9000, 1)
logits [[-0.19970134 -0.14800064 -0.1435145  -0.24606588]]
--- 288.5701324939728 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0158 " + "l1=0.0158" + "l2=0 f=-0.423 shape=(1, 9000, 1)
logits [[ 4.2102237 -2.5866456  2.6303022 -5.9441566]]
Iteration 100 of 1000: loss=0.0156 " + "l1=0.0155" + "l2=0.000155 f=-0.422 shape=(1, 9000, 1)
logits [[ 4.184086  -2.5865722  2.6348028 -5.92067  ]]
Iteration 200 of 1000: loss=0.0156 " + "l1=0.0155" + "l2=0.000129 f=-0.422 shape=(1, 9000, 1)
logits [[ 4.183496  -2.587346   2.6353555 -5.920514 ]]
Iteration 300 of 1000: loss=0.0156 " + "l1=0.0154" + "l2=0.000148 f=-0.422 shape=(1, 9000, 1)
logits [[ 4.180598  -2.5877056  2.6362438 -5.9183784]]
Iteration 400 of 1000: loss=0.0156 " + "l1=0.0154" + "l2=0.0002 f=-0.422 shape=(1, 9000, 1)
logits [[ 4.177029  -2.5877948  2.6370735 -5.915665 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.158 " + "l1=0.158" + "l2=0 f=-0.423 shape=(1, 9000, 1)
logits [[ 4.2102237 -2.5866456  2.6303022 -5.9441566]]
Iteration 100 of 1000: loss=0.145 " + "l1=0.138" + "l2=0.00702 f=-0.42 shape=(1, 9000, 1)
logits [[ 4.038787  -2.5877657  2.6571333 -5.7893906]]
Iteration 200 of 1000: loss=0.141 " + "l1=0.132" + "l2=0.00911 f=-0.421 shape=(1, 9000, 1)
logits [[ 3.9824271 -2.589181   2.6663046 -5.742551 ]]
Iteration 300 of 1000: loss=0.136 " + "l1=0.125" + "l2=0.0113 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.9276564 -2.5909624  2.676147  -5.6989555]]
Iteration 400 of 1000: loss=0.132 " + "l1=0.118" + "l2=0.0137 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.8705485 -2.59067    2.6857548 -5.654553 ]]
Iteration 500 of 1000: loss=0.128 " + "l1=0.112" + "l2=0.0156 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.814826  -2.5894356  2.694102  -5.6119404]]
Iteration 600 of 1000: loss=0.123 " + "l1=0.106" + "l2=0.0173 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.75936   -2.5838883  2.6988358 -5.567964 ]]
Iteration 700 of 1000: loss=0.119 " + "l1=0.1" + "l2=0.0183 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.702668  -2.5721946  2.6986942 -5.5206666]]
Iteration 800 of 1000: loss=0.114 " + "l1=0.0948" + "l2=0.0193 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.6494029 -2.5644307  2.7014282 -5.4770093]]
Iteration 900 of 1000: loss=0.11 " + "l1=0.0892" + "l2=0.0204 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.5950325 -2.5567493  2.7034092 -5.4306574]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.58 " + "l1=1.58" + "l2=0 f=-0.423 shape=(1, 9000, 1)
logits [[ 4.2102237 -2.5866456  2.6303022 -5.9441566]]
Iteration 100 of 1000: loss=0.453 " + "l1=0.00804" + "l2=0.445 f=-0.384 shape=(1, 9000, 1)
logits [[ 2.8211582 -2.5685227  2.8131154 -4.603177 ]]
Iteration 200 of 1000: loss=0.305 " + "l1=0" + "l2=0.305 f=-0.381 shape=(1, 9000, 1)
logits [[ 2.817361  -2.5537732  2.8214462 -4.6106744]]
Iteration 300 of 1000: loss=0.244 " + "l1=0" + "l2=0.244 f=-0.378 shape=(1, 9000, 1)
logits [[ 2.8252985 -2.5477157  2.8258002 -4.615259 ]]
Iteration 400 of 1000: loss=0.209 " + "l1=0" + "l2=0.209 f=-0.373 shape=(1, 9000, 1)
logits [[ 2.8068523 -2.524056   2.8170562 -4.5903487]]
Iteration 500 of 1000: loss=0.175 " + "l1=0.00163" + "l2=0.174 f=-0.371 shape=(1, 9000, 1)
logits [[ 2.8104544 -2.5114017  2.8088257 -4.5920362]]
Iteration 600 of 1000: loss=0.154 " + "l1=0" + "l2=0.154 f=-0.368 shape=(1, 9000, 1)
logits [[ 2.7882202 -2.48885    2.7964215 -4.565916 ]]
Iteration 700 of 1000: loss=0.137 " + "l1=0.00412" + "l2=0.133 f=-0.366 shape=(1, 9000, 1)
logits [[ 2.7821643 -2.4657087  2.7780416 -4.558529 ]]
Iteration 800 of 1000: loss=0.121 " + "l1=0" + "l2=0.121 f=-0.366 shape=(1, 9000, 1)
logits [[ 2.7563393 -2.4491022  2.7622466 -4.5330997]]
Iteration 900 of 1000: loss=0.111 " + "l1=0" + "l2=0.111 f=-0.367 shape=(1, 9000, 1)
logits [[ 2.7309017 -2.4365063  2.7466574 -4.5085764]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.869 " + "l1=0.869" + "l2=0 f=-0.423 shape=(1, 9000, 1)
logits [[ 4.2102237 -2.5866456  2.6303022 -5.9441566]]
Iteration 100 of 1000: loss=0.487 " + "l1=0.284" + "l2=0.203 f=-0.406 shape=(1, 9000, 1)
logits [[ 3.2739398 -2.5970843  2.757548  -5.060188 ]]
Iteration 200 of 1000: loss=0.339 " + "l1=0.0677" + "l2=0.272 f=-0.393 shape=(1, 9000, 1)
logits [[ 2.939797  -2.5867636  2.8167386 -4.74127  ]]
Iteration 300 of 1000: loss=0.236 " + "l1=0.000894" + "l2=0.235 f=-0.382 shape=(1, 9000, 1)
logits [[ 2.8246415 -2.5529745  2.8230166 -4.6237044]]
Iteration 400 of 1000: loss=0.186 " + "l1=0.00187" + "l2=0.184 f=-0.38 shape=(1, 9000, 1)
logits [[ 2.823326  -2.5325642  2.8199215 -4.6323833]]
Iteration 500 of 1000: loss=0.151 " + "l1=0.00391" + "l2=0.147 f=-0.38 shape=(1, 9000, 1)
logits [[ 2.8088543 -2.5091271  2.8017502 -4.6214104]]
Iteration 600 of 1000: loss=0.126 " + "l1=0.00229" + "l2=0.123 f=-0.382 shape=(1, 9000, 1)
logits [[ 2.7885406 -2.490179   2.7843816 -4.6095886]]
Iteration 700 of 1000: loss=0.108 " + "l1=0" + "l2=0.108 f=-0.384 shape=(1, 9000, 1)
logits [[ 2.755183  -2.4617481  2.7589202 -4.588591 ]]
Iteration 800 of 1000: loss=0.0962 " + "l1=0.00255" + "l2=0.0937 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.740226  -2.4417312  2.735596  -4.5812254]]
Iteration 900 of 1000: loss=0.0872 " + "l1=0" + "l2=0.0872 f=-0.389 shape=(1, 9000, 1)
logits [[ 2.711593  -2.4323194  2.7202559 -4.5573897]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.513 " + "l1=0.513" + "l2=0 f=-0.423 shape=(1, 9000, 1)
logits [[ 4.2102237 -2.5866456  2.6303022 -5.9441566]]
Iteration 100 of 1000: loss=0.376 " + "l1=0.297" + "l2=0.079 f=-0.418 shape=(1, 9000, 1)
logits [[ 3.6174054 -2.5852242  2.7023942 -5.405117 ]]
Iteration 200 of 1000: loss=0.319 " + "l1=0.217" + "l2=0.102 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.4087553 -2.5945318  2.7399564 -5.2146378]]
Iteration 300 of 1000: loss=0.275 " + "l1=0.161" + "l2=0.114 f=-0.411 shape=(1, 9000, 1)
logits [[ 3.269562  -2.5967188  2.7746036 -5.09313  ]]
Iteration 400 of 1000: loss=0.238 " + "l1=0.116" + "l2=0.122 f=-0.406 shape=(1, 9000, 1)
logits [[ 3.1541047 -2.5778775  2.7959127 -4.99417  ]]
Iteration 500 of 1000: loss=0.194 " + "l1=0.0628" + "l2=0.131 f=-0.397 shape=(1, 9000, 1)
logits [[ 2.9918227 -2.545235   2.798737  -4.835148 ]]
Iteration 600 of 1000: loss=0.144 " + "l1=0.00356" + "l2=0.141 f=-0.391 shape=(1, 9000, 1)
logits [[ 2.802825  -2.5105193  2.791865  -4.648302 ]]
Iteration 700 of 1000: loss=0.112 " + "l1=0" + "l2=0.112 f=-0.395 shape=(1, 9000, 1)
logits [[ 2.7637563 -2.4905734  2.7706022 -4.625451 ]]
Iteration 800 of 1000: loss=0.0912 " + "l1=3.3e-05" + "l2=0.0911 f=-0.401 shape=(1, 9000, 1)
logits [[ 2.7457323 -2.470974   2.7456307 -4.622755 ]]
Iteration 900 of 1000: loss=0.0788 " + "l1=0" + "l2=0.0788 f=-0.406 shape=(1, 9000, 1)
logits [[ 2.7306364 -2.464997   2.7343    -4.6230106]]
--- 257.9805600643158 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.102 " + "l1=0.102" + "l2=0 f=-0.423 shape=(1, 9000, 1)
logits [[ 4.2102237 -2.5866456  2.6303022 -5.9441566]]
Iteration 100 of 1000: loss=0.101 " + "l1=0.1" + "l2=0.000492 f=-0.421 shape=(1, 9000, 1)
logits [[ 4.153496  -2.571107   2.6125927 -5.8793516]]
Iteration 200 of 1000: loss=0.101 " + "l1=0.1" + "l2=0.000488 f=-0.421 shape=(1, 9000, 1)
logits [[ 4.1446476 -2.5683818  2.6089952 -5.8694787]]
Iteration 300 of 1000: loss=0.1 " + "l1=0.0999" + "l2=0.000596 f=-0.421 shape=(1, 9000, 1)
logits [[ 4.1329393 -2.5649374  2.6044123 -5.856195 ]]
Iteration 400 of 1000: loss=0.1 " + "l1=0.0996" + "l2=0.000656 f=-0.421 shape=(1, 9000, 1)
logits [[ 4.12092   -2.561212   2.5995016 -5.842571 ]]
Iteration 500 of 1000: loss=0.1 " + "l1=0.0994" + "l2=0.000779 f=-0.421 shape=(1, 9000, 1)
logits [[ 4.1084976 -2.5571504  2.5942435 -5.828441 ]]
Iteration 600 of 1000: loss=0.1 " + "l1=0.0991" + "l2=0.000953 f=-0.421 shape=(1, 9000, 1)
logits [[ 4.095309  -2.5527103  2.588607  -5.8135276]]
Iteration 700 of 1000: loss=0.0998 " + "l1=0.0988" + "l2=0.00104 f=-0.42 shape=(1, 9000, 1)
logits [[ 4.081719  -2.5479662  2.5827134 -5.798231 ]]
Iteration 800 of 1000: loss=0.0997 " + "l1=0.0985" + "l2=0.00117 f=-0.42 shape=(1, 9000, 1)
logits [[ 4.0685635 -2.5435822  2.5772283 -5.7834153]]
Iteration 900 of 1000: loss=0.0996 " + "l1=0.0982" + "l2=0.00131 f=-0.42 shape=(1, 9000, 1)
logits [[ 4.0558066 -2.5393856  2.5719655 -5.768959 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.02 " + "l1=1.02" + "l2=0 f=-0.423 shape=(1, 9000, 1)
logits [[ 4.2102237 -2.5866456  2.6303022 -5.9441566]]
Iteration 100 of 1000: loss=0.947 " + "l1=0.905" + "l2=0.0416 f=-0.416 shape=(1, 9000, 1)
logits [[ 3.6903234 -2.4551823  2.4649346 -5.3642364]]
Iteration 200 of 1000: loss=0.917 " + "l1=0.864" + "l2=0.0527 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.5016909 -2.4108675  2.3926613 -5.143133 ]]
Iteration 300 of 1000: loss=0.887 " + "l1=0.826" + "l2=0.0612 f=-0.411 shape=(1, 9000, 1)
logits [[ 3.3303668 -2.374096   2.3239357 -4.9251566]]
Iteration 400 of 1000: loss=0.857 " + "l1=0.787" + "l2=0.0696 f=-0.404 shape=(1, 9000, 1)
logits [[ 3.168776  -2.3376577  2.2554414 -4.70392  ]]
Iteration 500 of 1000: loss=0.827 " + "l1=0.748" + "l2=0.0788 f=-0.395 shape=(1, 9000, 1)
logits [[ 3.0091574 -2.3068855  2.1874633 -4.468545 ]]
Iteration 600 of 1000: loss=0.793 " + "l1=0.703" + "l2=0.0905 f=-0.381 shape=(1, 9000, 1)
logits [[ 2.8299198 -2.2672327  2.112226  -4.198624 ]]
Iteration 700 of 1000: loss=0.756 " + "l1=0.656" + "l2=0.1 f=-0.366 shape=(1, 9000, 1)
logits [[ 2.6460176 -2.2384357  2.0444267 -3.9162073]]
Iteration 800 of 1000: loss=0.72 " + "l1=0.61" + "l2=0.111 f=-0.354 shape=(1, 9000, 1)
logits [[ 2.464393  -2.2164903  1.9686186 -3.6310294]]
Iteration 900 of 1000: loss=0.69 " + "l1=0.574" + "l2=0.115 f=-0.35 shape=(1, 9000, 1)
logits [[ 2.3178585 -2.19903    1.9074228 -3.4254055]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.2 " + "l1=10.2" + "l2=0 f=-0.423 shape=(1, 9000, 1)
logits [[ 4.2102237 -2.5866456  2.6303022 -5.9441566]]
Iteration 100 of 1000: loss=5.44 " + "l1=3.76" + "l2=1.68 f=-0.263 shape=(1, 9000, 1)
logits [[ 1.499653  -1.8134238  1.5119143 -2.2485833]]
Iteration 200 of 1000: loss=3.58 " + "l1=1.1" + "l2=2.48 f=-0.181 shape=(1, 9000, 1)
logits [[ 0.36774114 -1.5575147   0.7822732  -0.31832403]]
Iteration 300 of 1000: loss=2.63 " + "l1=0.049" + "l2=2.58 f=-0.115 shape=(1, 9000, 1)
logits [[-0.0216607  -1.3686435   0.48905036  0.44000158]]
Iteration 400 of 1000: loss=2.11 " + "l1=0.0188" + "l2=2.09 f=-0.119 shape=(1, 9000, 1)
logits [[-0.01011453 -1.3708268   0.46126884  0.44243842]]
Iteration 500 of 1000: loss=1.83 " + "l1=0.0193" + "l2=1.81 f=-0.124 shape=(1, 9000, 1)
logits [[-0.01460185 -1.3913875   0.46521747  0.44586787]]
Iteration 600 of 1000: loss=1.57 " + "l1=0.000256" + "l2=1.57 f=-0.129 shape=(1, 9000, 1)
logits [[-0.01712912 -1.4200023   0.460754    0.46049815]]
Iteration 700 of 1000: loss=1.34 " + "l1=0" + "l2=1.34 f=-0.137 shape=(1, 9000, 1)
logits [[-0.01539729 -1.4311405   0.44841388  0.4520879 ]]
Iteration 800 of 1000: loss=1.15 " + "l1=0" + "l2=1.15 f=-0.13 shape=(1, 9000, 1)
logits [[ 0.00933518 -1.4298823   0.4434678   0.45652467]]
Iteration 900 of 1000: loss=0.994 " + "l1=0.00193" + "l2=0.992 f=-0.119 shape=(1, 9000, 1)
logits [[ 0.06584212 -1.4056402   0.43308234  0.43115008]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.58 " + "l1=5.58" + "l2=0 f=-0.423 shape=(1, 9000, 1)
logits [[ 4.2102237 -2.5866456  2.6303022 -5.9441566]]
Iteration 100 of 1000: loss=3.7 " + "l1=2.75" + "l2=0.947 f=-0.316 shape=(1, 9000, 1)
logits [[ 1.9241451 -2.0228655  1.918629  -3.0843422]]
Iteration 200 of 1000: loss=3.02 " + "l1=2.08" + "l2=0.941 f=-0.276 shape=(1, 9000, 1)
logits [[ 1.5044678 -1.8426408  1.512292  -2.2768312]]
Iteration 300 of 1000: loss=2.49 " + "l1=1.49" + "l2=1 f=-0.247 shape=(1, 9000, 1)
logits [[ 1.137097  -1.7187454  1.1467683 -1.5536886]]
Iteration 400 of 1000: loss=2.04 " + "l1=1" + "l2=1.04 f=-0.26 shape=(1, 9000, 1)
logits [[ 0.735704   -1.6680827   0.85907847 -0.9662078 ]]
Iteration 500 of 1000: loss=1.73 " + "l1=0.699" + "l2=1.03 f=-0.244 shape=(1, 9000, 1)
logits [[ 0.48135075 -1.623613    0.7195756  -0.55159044]]
Iteration 600 of 1000: loss=1.41 " + "l1=0.378" + "l2=1.04 f=-0.213 shape=(1, 9000, 1)
logits [[ 0.2638891  -1.5430517   0.5574727  -0.13035429]]
Iteration 700 of 1000: loss=1.05 " + "l1=0.0489" + "l2=1 f=-0.155 shape=(1, 9000, 1)
logits [[ 0.08997314 -1.4242346   0.40136626  0.31247866]]
Iteration 800 of 1000: loss=0.792 " + "l1=0" + "l2=0.792 f=-0.125 shape=(1, 9000, 1)
logits [[ 0.14393435 -1.3971376   0.37558097  0.37881845]]
Iteration 900 of 1000: loss=0.664 " + "l1=9.26e-05" + "l2=0.664 f=-0.113 shape=(1, 9000, 1)
logits [[ 0.210727  -1.3977851  0.3679001  0.3677317]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.3 " + "l1=3.3" + "l2=0 f=-0.423 shape=(1, 9000, 1)
logits [[ 4.2102237 -2.5866456  2.6303022 -5.9441566]]
Iteration 100 of 1000: loss=2.6 " + "l1=2.22" + "l2=0.384 f=-0.371 shape=(1, 9000, 1)
logits [[ 2.6998663 -2.2145944  2.1495578 -4.1192102]]
Iteration 200 of 1000: loss=2.25 " + "l1=1.73" + "l2=0.519 f=-0.331 shape=(1, 9000, 1)
logits [[ 2.0660954 -2.0699146  1.9432846 -3.263033 ]]
Iteration 300 of 1000: loss=1.93 " + "l1=1.41" + "l2=0.52 f=-0.297 shape=(1, 9000, 1)
logits [[ 1.7045883 -1.96715    1.7004329 -2.6262245]]
Iteration 400 of 1000: loss=1.7 " + "l1=1.21" + "l2=0.495 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.4828954 -1.8708904  1.4888262 -2.2245326]]
Iteration 500 of 1000: loss=1.51 " + "l1=1.03" + "l2=0.485 f=-0.282 shape=(1, 9000, 1)
logits [[ 1.2634735 -1.7977592  1.2843059 -1.8788662]]
Iteration 600 of 1000: loss=1.38 " + "l1=0.903" + "l2=0.475 f=-0.279 shape=(1, 9000, 1)
logits [[ 1.1009039 -1.7530894  1.1577904 -1.6217784]]
Iteration 700 of 1000: loss=1.26 " + "l1=0.783" + "l2=0.477 f=-0.278 shape=(1, 9000, 1)
logits [[ 0.9257908 -1.721661   1.0456046 -1.3628886]]
Iteration 800 of 1000: loss=1.15 " + "l1=0.657" + "l2=0.492 f=-0.271 shape=(1, 9000, 1)
logits [[ 0.7400502 -1.6820539  0.9403023 -1.0809692]]
Iteration 900 of 1000: loss=1 " + "l1=0.495" + "l2=0.508 f=-0.243 shape=(1, 9000, 1)
logits [[ 0.5589645  -1.6272192   0.80915016 -0.71425843]]
--- 289.60260915756226 seconds ---
Adv result:3
Loading record A01420
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0784 " + "l1=0.0784" + "l2=0 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.996204  -2.8448987  2.7999227 -7.4056835]]
Iteration 100 of 1000: loss=0.0782 " + "l1=0.078" + "l2=0.000194 f=-0.612 shape=(1, 9000, 1)
logits [[ 4.967289  -2.8328404  2.7931104 -7.377361 ]]
Iteration 200 of 1000: loss=0.0781 " + "l1=0.078" + "l2=0.000163 f=-0.612 shape=(1, 9000, 1)
logits [[ 4.965635  -2.8314483  2.7926168 -7.375939 ]]
Iteration 300 of 1000: loss=0.0781 " + "l1=0.0779" + "l2=0.000216 f=-0.612 shape=(1, 9000, 1)
logits [[ 4.961466  -2.8294067  2.7916539 -7.3720737]]
Iteration 400 of 1000: loss=0.0781 " + "l1=0.0778" + "l2=0.000215 f=-0.612 shape=(1, 9000, 1)
logits [[ 4.956646  -2.827045   2.7906196 -7.367684 ]]
Iteration 500 of 1000: loss=0.0781 " + "l1=0.0778" + "l2=0.000298 f=-0.612 shape=(1, 9000, 1)
logits [[ 4.9516015 -2.8245592  2.7895982 -7.3631554]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.784 " + "l1=0.784" + "l2=0 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.996204  -2.8448987  2.7999227 -7.4056835]]
Iteration 100 of 1000: loss=0.766 " + "l1=0.756" + "l2=0.00927 f=-0.606 shape=(1, 9000, 1)
logits [[ 4.795541  -2.7674747  2.752508  -7.205539 ]]
Iteration 200 of 1000: loss=0.758 " + "l1=0.745" + "l2=0.0133 f=-0.603 shape=(1, 9000, 1)
logits [[ 4.7120323 -2.7354023  2.7319891 -7.119756 ]]
Iteration 300 of 1000: loss=0.75 " + "l1=0.733" + "l2=0.0172 f=-0.599 shape=(1, 9000, 1)
logits [[ 4.627838  -2.7044766  2.7114737 -7.031448 ]]
Iteration 400 of 1000: loss=0.742 " + "l1=0.721" + "l2=0.0207 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.5433445 -2.6707904  2.6941361 -6.9484887]]
Iteration 500 of 1000: loss=0.733 " + "l1=0.71" + "l2=0.0236 f=-0.592 shape=(1, 9000, 1)
logits [[ 4.458508  -2.6376631  2.6747828 -6.864135 ]]
Iteration 600 of 1000: loss=0.724 " + "l1=0.698" + "l2=0.0265 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.3689895 -2.6084857  2.654203  -6.769243 ]]
Iteration 700 of 1000: loss=0.715 " + "l1=0.687" + "l2=0.0284 f=-0.586 shape=(1, 9000, 1)
logits [[ 4.2862425 -2.5831509  2.6341825 -6.680919 ]]
Iteration 800 of 1000: loss=0.706 " + "l1=0.675" + "l2=0.0311 f=-0.582 shape=(1, 9000, 1)
logits [[ 4.197104  -2.5544705  2.6128564 -6.585262 ]]
Iteration 900 of 1000: loss=0.696 " + "l1=0.661" + "l2=0.0352 f=-0.579 shape=(1, 9000, 1)
logits [[ 4.089367  -2.5225759  2.5879378 -6.4691887]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.84 " + "l1=7.84" + "l2=0 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.996204  -2.8448987  2.7999227 -7.4056835]]
Iteration 100 of 1000: loss=6.05 " + "l1=5.15" + "l2=0.898 f=-0.527 shape=(1, 9000, 1)
logits [[ 2.9662156 -2.1877723  2.3212316 -5.206153 ]]
Iteration 200 of 1000: loss=5.04 " + "l1=3.84" + "l2=1.2 f=-0.465 shape=(1, 9000, 1)
logits [[ 1.9768535 -1.8585436  1.971336  -3.949312 ]]
Iteration 300 of 1000: loss=4.57 " + "l1=3.37" + "l2=1.2 f=-0.432 shape=(1, 9000, 1)
logits [[ 1.7366718 -1.6337752  1.7355083 -3.5670824]]
Iteration 400 of 1000: loss=4.27 " + "l1=3.07" + "l2=1.2 f=-0.411 shape=(1, 9000, 1)
logits [[ 1.572076  -1.5013496  1.5684775 -3.283215 ]]
Iteration 500 of 1000: loss=4 " + "l1=2.76" + "l2=1.24 f=-0.404 shape=(1, 9000, 1)
logits [[ 1.4250427 -1.3345623  1.4245014 -3.130172 ]]
Iteration 600 of 1000: loss=3.76 " + "l1=2.51" + "l2=1.25 f=-0.387 shape=(1, 9000, 1)
logits [[ 1.302837  -1.2054266  1.3001688 -2.9457192]]
Iteration 700 of 1000: loss=3.56 " + "l1=2.31" + "l2=1.25 f=-0.364 shape=(1, 9000, 1)
logits [[ 1.198163  -1.1128232  1.1957428 -2.7369816]]
Iteration 800 of 1000: loss=3.37 " + "l1=2.1" + "l2=1.27 f=-0.347 shape=(1, 9000, 1)
logits [[ 1.0888343 -1.0073286  1.0906478 -2.5588472]]
Iteration 900 of 1000: loss=3.21 " + "l1=1.93" + "l2=1.28 f=-0.334 shape=(1, 9000, 1)
logits [[ 0.99666953 -0.9323184   0.9982944  -2.3985062 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=78.4 " + "l1=78.4" + "l2=0 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.996204  -2.8448987  2.7999227 -7.4056835]]
Iteration 100 of 1000: loss=24.2 " + "l1=11.7" + "l2=12.5 f=-0.344 shape=(1, 9000, 1)
logits [[ 0.5431913  -0.54538107  0.62583953 -1.9994965 ]]
Iteration 200 of 1000: loss=13.5 " + "l1=0.213" + "l2=13.3 f=-0.331 shape=(1, 9000, 1)
logits [[-0.24906982  0.0536249   0.07494937 -1.2036715 ]]
Iteration 300 of 1000: loss=11.5 " + "l1=0" + "l2=11.5 f=-0.326 shape=(1, 9000, 1)
logits [[-0.24052934  0.05455382  0.05131317 -1.1689854 ]]
Iteration 400 of 1000: loss=10.5 " + "l1=0.0901" + "l2=10.4 f=-0.323 shape=(1, 9000, 1)
logits [[-0.23930876  0.04312277  0.05213521 -1.148259  ]]
Iteration 500 of 1000: loss=9.78 " + "l1=0" + "l2=9.78 f=-0.314 shape=(1, 9000, 1)
logits [[-0.24519074  0.0497774   0.04684822 -1.1086216 ]]
Iteration 600 of 1000: loss=9.36 " + "l1=0" + "l2=9.36 f=-0.309 shape=(1, 9000, 1)
logits [[-0.246304    0.05400261  0.04303145 -1.087952  ]]
Iteration 700 of 1000: loss=8.92 " + "l1=0" + "l2=8.92 f=-0.309 shape=(1, 9000, 1)
logits [[-0.19517252  0.04403508  0.03659814 -1.1204667 ]]
Iteration 800 of 1000: loss=8.56 " + "l1=0" + "l2=8.56 f=-0.308 shape=(1, 9000, 1)
logits [[-0.17484188  0.03477684  0.03078079 -1.120741  ]]
Iteration 900 of 1000: loss=8.27 " + "l1=0.106" + "l2=8.16 f=-0.307 shape=(1, 9000, 1)
logits [[-0.16005151  0.01734653  0.02796882 -1.1139851 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=43.1 " + "l1=43.1" + "l2=0 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.996204  -2.8448987  2.7999227 -7.4056835]]
Iteration 100 of 1000: loss=18.5 " + "l1=11.5" + "l2=7.01 f=-0.366 shape=(1, 9000, 1)
logits [[ 1.0829268  -0.97565234  1.1112295  -2.6836267 ]]
Iteration 200 of 1000: loss=13 " + "l1=4.44" + "l2=8.54 f=-0.353 shape=(1, 9000, 1)
logits [[ 0.40969327 -0.37307942  0.4335818  -1.8802127 ]]
Iteration 300 of 1000: loss=10.6 " + "l1=1.06" + "l2=9.58 f=-0.346 shape=(1, 9000, 1)
logits [[ 0.03054704 -0.10260465  0.09076454 -1.4016399 ]]
Iteration 400 of 1000: loss=9.29 " + "l1=0.11" + "l2=9.18 f=-0.337 shape=(1, 9000, 1)
logits [[-0.09138383 -0.02938469 -0.00930087 -1.2160751 ]]
Iteration 500 of 1000: loss=8.48 " + "l1=0" + "l2=8.48 f=-0.336 shape=(1, 9000, 1)
logits [[-0.1459115  -0.00780723 -0.0112495  -1.18052   ]]
Iteration 600 of 1000: loss=7.76 " + "l1=0.0176" + "l2=7.74 f=-0.333 shape=(1, 9000, 1)
logits [[-8.5106499e-02 -4.3953117e-03 -1.1998746e-03 -1.2432415e+00]]
Iteration 700 of 1000: loss=7.18 " + "l1=0" + "l2=7.18 f=-0.328 shape=(1, 9000, 1)
logits [[-0.09108635 -0.00363491 -0.00391987 -1.2114371 ]]
Iteration 800 of 1000: loss=6.72 " + "l1=0.00322" + "l2=6.72 f=-0.322 shape=(1, 9000, 1)
logits [[-0.10558155 -0.00693745 -0.00635192 -1.1683257 ]]
Iteration 900 of 1000: loss=6.4 " + "l1=0.0632" + "l2=6.34 f=-0.317 shape=(1, 9000, 1)
logits [[-0.11932123 -0.01538631 -0.00389862 -1.1301235 ]]
--- 260.1533329486847 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.022 " + "l1=0.022" + "l2=0 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.996204  -2.8448987  2.7999227 -7.4056835]]
Iteration 100 of 1000: loss=0.0219 " + "l1=0.0217" + "l2=0.000145 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.9733887 -2.843193   2.8016477 -7.3859453]]
Iteration 200 of 1000: loss=0.0218 " + "l1=0.0217" + "l2=0.000106 f=-0.613 shape=(1, 9000, 1)
logits [[ 4.973667  -2.8428037  2.8017066 -7.3865037]]
Iteration 300 of 1000: loss=0.0218 " + "l1=0.0217" + "l2=0.000127 f=-0.613 shape=(1, 9000, 1)
logits [[ 4.9713774 -2.8424706  2.8020694 -7.3848524]]
Iteration 400 of 1000: loss=0.0218 " + "l1=0.0217" + "l2=0.000147 f=-0.613 shape=(1, 9000, 1)
logits [[ 4.968638  -2.8420222  2.802466  -7.383027 ]]
Iteration 500 of 1000: loss=0.0218 " + "l1=0.0216" + "l2=0.000187 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.96567   -2.8414369  2.8028536 -7.3811445]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.22 " + "l1=0.22" + "l2=0 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.996204  -2.8448987  2.7999227 -7.4056835]]
Iteration 100 of 1000: loss=0.21 " + "l1=0.204" + "l2=0.00604 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.8475504 -2.8410504  2.8121617 -7.2760625]]
Iteration 200 of 1000: loss=0.206 " + "l1=0.198" + "l2=0.00779 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.798251 -2.834617  2.815179 -7.234707]]
Iteration 300 of 1000: loss=0.203 " + "l1=0.193" + "l2=0.00949 f=-0.613 shape=(1, 9000, 1)
logits [[ 4.752834  -2.826655   2.8179321 -7.198023 ]]
Iteration 400 of 1000: loss=0.2 " + "l1=0.189" + "l2=0.0107 f=-0.613 shape=(1, 9000, 1)
logits [[ 4.713677  -2.8184493  2.8197026 -7.168443 ]]
Iteration 500 of 1000: loss=0.197 " + "l1=0.185" + "l2=0.0117 f=-0.613 shape=(1, 9000, 1)
logits [[ 4.674941  -2.8088288  2.8206568 -7.1387463]]
Iteration 600 of 1000: loss=0.194 " + "l1=0.181" + "l2=0.0126 f=-0.613 shape=(1, 9000, 1)
logits [[ 4.6344643 -2.7971737  2.820593  -7.107971 ]]
Iteration 700 of 1000: loss=0.191 " + "l1=0.177" + "l2=0.0134 f=-0.612 shape=(1, 9000, 1)
logits [[ 4.593751  -2.7841933  2.8194325 -7.0752864]]
Iteration 800 of 1000: loss=0.188 " + "l1=0.174" + "l2=0.014 f=-0.611 shape=(1, 9000, 1)
logits [[ 4.556877  -2.773813   2.8179502 -7.0445805]]
Iteration 900 of 1000: loss=0.185 " + "l1=0.171" + "l2=0.0148 f=-0.61 shape=(1, 9000, 1)
logits [[ 4.521789  -2.7653427  2.815678  -7.011394 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.2 " + "l1=2.2" + "l2=0 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.996204  -2.8448987  2.7999227 -7.4056835]]
Iteration 100 of 1000: loss=1.24 " + "l1=0.75" + "l2=0.494 f=-0.592 shape=(1, 9000, 1)
logits [[ 3.558722  -2.800128   2.8090198 -5.935956 ]]
Iteration 200 of 1000: loss=0.802 " + "l1=0.162" + "l2=0.64 f=-0.569 shape=(1, 9000, 1)
logits [[ 2.847505  -2.7213516  2.6854389 -5.0869036]]
Iteration 300 of 1000: loss=0.601 " + "l1=0.0134" + "l2=0.588 f=-0.555 shape=(1, 9000, 1)
logits [[ 2.608593  -2.6527915  2.5952106 -4.7704797]]
Iteration 400 of 1000: loss=0.508 " + "l1=0.00227" + "l2=0.506 f=-0.544 shape=(1, 9000, 1)
logits [[ 2.5773478 -2.618496   2.5750756 -4.7095494]]
Iteration 500 of 1000: loss=0.455 " + "l1=0" + "l2=0.455 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.563578  -2.5988233  2.5641732 -4.6747303]]
Iteration 600 of 1000: loss=0.41 " + "l1=0" + "l2=0.41 f=-0.528 shape=(1, 9000, 1)
logits [[ 2.547951  -2.5942643  2.557224  -4.622179 ]]
Iteration 700 of 1000: loss=0.36 " + "l1=0.00118" + "l2=0.358 f=-0.523 shape=(1, 9000, 1)
logits [[ 2.5449877 -2.582417   2.5438032 -4.59749  ]]
Iteration 800 of 1000: loss=0.326 " + "l1=0.000394" + "l2=0.325 f=-0.519 shape=(1, 9000, 1)
logits [[ 2.536627  -2.5781107  2.5362327 -4.572192 ]]
Iteration 900 of 1000: loss=0.303 " + "l1=0" + "l2=0.303 f=-0.516 shape=(1, 9000, 1)
logits [[ 2.5248091 -2.5730555  2.5285885 -4.5440917]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.21 " + "l1=1.21" + "l2=0 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.996204  -2.8448987  2.7999227 -7.4056835]]
Iteration 100 of 1000: loss=0.903 " + "l1=0.722" + "l2=0.181 f=-0.607 shape=(1, 9000, 1)
logits [[ 4.1448903 -2.8255134  2.831716  -6.579638 ]]
Iteration 200 of 1000: loss=0.766 " + "l1=0.532" + "l2=0.234 f=-0.591 shape=(1, 9000, 1)
logits [[ 3.7524207 -2.7558377  2.7859266 -6.1469464]]
Iteration 300 of 1000: loss=0.632 " + "l1=0.345" + "l2=0.288 f=-0.572 shape=(1, 9000, 1)
logits [[ 3.332344  -2.6853976  2.7052836 -5.6396017]]
Iteration 400 of 1000: loss=0.556 " + "l1=0.241" + "l2=0.316 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.1002116 -2.6502461  2.662529  -5.3521643]]
Iteration 500 of 1000: loss=0.495 " + "l1=0.177" + "l2=0.318 f=-0.552 shape=(1, 9000, 1)
logits [[ 2.949907  -2.6227403  2.628086  -5.1630583]]
Iteration 600 of 1000: loss=0.442 " + "l1=0.125" + "l2=0.317 f=-0.542 shape=(1, 9000, 1)
logits [[ 2.8283587 -2.6030703  2.6012332 -4.992827 ]]
Iteration 700 of 1000: loss=0.378 " + "l1=0.0542" + "l2=0.324 f=-0.532 shape=(1, 9000, 1)
logits [[ 2.6793516 -2.5894482  2.5808115 -4.798709 ]]
Iteration 800 of 1000: loss=0.312 " + "l1=0" + "l2=0.312 f=-0.523 shape=(1, 9000, 1)
logits [[ 2.5586605 -2.5891132  2.5592556 -4.6189046]]
Iteration 900 of 1000: loss=0.275 " + "l1=0.00229" + "l2=0.273 f=-0.518 shape=(1, 9000, 1)
logits [[ 2.5462596 -2.5839612  2.542088  -4.576065 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.714 " + "l1=0.714" + "l2=0 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.996204  -2.8448987  2.7999227 -7.4056835]]
Iteration 100 of 1000: loss=0.609 " + "l1=0.547" + "l2=0.0617 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.515212  -2.8297148  2.8316627 -6.9728613]]
Iteration 200 of 1000: loss=0.566 " + "l1=0.478" + "l2=0.0883 f=-0.607 shape=(1, 9000, 1)
logits [[ 4.297262  -2.8089857  2.8279932 -6.744658 ]]
Iteration 300 of 1000: loss=0.516 " + "l1=0.411" + "l2=0.104 f=-0.599 shape=(1, 9000, 1)
logits [[ 4.0732636 -2.7672396  2.807454  -6.510152 ]]
Iteration 400 of 1000: loss=0.48 " + "l1=0.368" + "l2=0.113 f=-0.591 shape=(1, 9000, 1)
logits [[ 3.9146364 -2.725243   2.783258  -6.3370957]]
Iteration 500 of 1000: loss=0.451 " + "l1=0.332" + "l2=0.119 f=-0.586 shape=(1, 9000, 1)
logits [[ 3.7780561 -2.7011166  2.756433  -6.177745 ]]
Iteration 600 of 1000: loss=0.419 " + "l1=0.285" + "l2=0.134 f=-0.588 shape=(1, 9000, 1)
logits [[ 3.5886765 -2.686718   2.713055  -5.967314 ]]
Iteration 700 of 1000: loss=0.39 " + "l1=0.248" + "l2=0.142 f=-0.585 shape=(1, 9000, 1)
logits [[ 3.4373074 -2.6655147  2.674141  -5.7867484]]
Iteration 800 of 1000: loss=0.365 " + "l1=0.222" + "l2=0.143 f=-0.58 shape=(1, 9000, 1)
logits [[ 3.3358681 -2.645527   2.651623  -5.6609154]]
Iteration 900 of 1000: loss=0.343 " + "l1=0.193" + "l2=0.15 f=-0.574 shape=(1, 9000, 1)
logits [[ 3.2196164 -2.6269548  2.6242783 -5.5125957]]
--- 261.2534351348877 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.124 " + "l1=0.124" + "l2=0 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.996204  -2.8448987  2.7999227 -7.4056835]]
Iteration 100 of 1000: loss=0.123 " + "l1=0.123" + "l2=0.000453 f=-0.61 shape=(1, 9000, 1)
logits [[ 4.9520464 -2.8392718  2.7892704 -7.3438544]]
Iteration 200 of 1000: loss=0.123 " + "l1=0.123" + "l2=0.000448 f=-0.61 shape=(1, 9000, 1)
logits [[ 4.9460096 -2.8377335  2.7875404 -7.334992 ]]
Iteration 300 of 1000: loss=0.123 " + "l1=0.123" + "l2=0.00053 f=-0.609 shape=(1, 9000, 1)
logits [[ 4.9377513 -2.8359737  2.785355  -7.3228354]]
Iteration 400 of 1000: loss=0.123 " + "l1=0.122" + "l2=0.000641 f=-0.608 shape=(1, 9000, 1)
logits [[ 4.9298553 -2.8342655  2.782919  -7.3111353]]
Iteration 500 of 1000: loss=0.123 " + "l1=0.122" + "l2=0.00071 f=-0.607 shape=(1, 9000, 1)
logits [[ 4.9221706 -2.8324394  2.7805011 -7.2995553]]
Iteration 600 of 1000: loss=0.123 " + "l1=0.122" + "l2=0.000775 f=-0.607 shape=(1, 9000, 1)
logits [[ 4.91459   -2.8307133  2.7781892 -7.2880664]]
Iteration 700 of 1000: loss=0.123 " + "l1=0.122" + "l2=0.000903 f=-0.606 shape=(1, 9000, 1)
logits [[ 4.9067426 -2.8288493  2.7757256 -7.2763352]]
Iteration 800 of 1000: loss=0.123 " + "l1=0.122" + "l2=0.000998 f=-0.605 shape=(1, 9000, 1)
logits [[ 4.8986177 -2.826897   2.7731972 -7.2643547]]
Iteration 900 of 1000: loss=0.123 " + "l1=0.121" + "l2=0.00117 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.890082  -2.8248231  2.7706141 -7.2520127]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.24 " + "l1=1.24" + "l2=0 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.996204  -2.8448987  2.7999227 -7.4056835]]
Iteration 100 of 1000: loss=1.18 " + "l1=1.15" + "l2=0.0348 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.5979877 -2.8037875  2.7114131 -6.8582635]]
Iteration 200 of 1000: loss=1.15 " + "l1=1.11" + "l2=0.0493 f=-0.578 shape=(1, 9000, 1)
logits [[ 4.4256754 -2.7726202  2.6639864 -6.629214 ]]
Iteration 300 of 1000: loss=1.13 " + "l1=1.06" + "l2=0.063 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.248503  -2.7364728  2.6229696 -6.395301 ]]
Iteration 400 of 1000: loss=1.09 " + "l1=1.02" + "l2=0.077 f=-0.552 shape=(1, 9000, 1)
logits [[ 4.036609  -2.6964817  2.5750482 -6.1243773]]
Iteration 500 of 1000: loss=1.06 " + "l1=0.976" + "l2=0.0865 f=-0.539 shape=(1, 9000, 1)
logits [[ 3.8663733 -2.6601195  2.5298138 -5.892449 ]]
Iteration 600 of 1000: loss=1.03 " + "l1=0.939" + "l2=0.0958 f=-0.528 shape=(1, 9000, 1)
logits [[ 3.714454  -2.6353536  2.4858847 -5.6764536]]
Iteration 700 of 1000: loss=1 " + "l1=0.892" + "l2=0.112 f=-0.517 shape=(1, 9000, 1)
logits [[ 3.5162334 -2.613112   2.432737  -5.404933 ]]
Iteration 800 of 1000: loss=0.975 " + "l1=0.853" + "l2=0.123 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.3538332 -2.5917227  2.3819404 -5.1728373]]
Iteration 900 of 1000: loss=0.952 " + "l1=0.825" + "l2=0.127 f=-0.498 shape=(1, 9000, 1)
logits [[ 3.239629  -2.5663495  2.3425534 -5.009048 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.4 " + "l1=12.4" + "l2=0 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.996204  -2.8448987  2.7999227 -7.4056835]]
Iteration 100 of 1000: loss=6.99 " + "l1=4.71" + "l2=2.28 f=-0.373 shape=(1, 9000, 1)
logits [[ 1.8974164 -2.4898155  1.9071939 -2.805333 ]]
Iteration 200 of 1000: loss=5.81 " + "l1=3.58" + "l2=2.23 f=-0.294 shape=(1, 9000, 1)
logits [[ 1.5530871 -2.286491   1.5711123 -2.0122077]]
Iteration 300 of 1000: loss=5.15 " + "l1=3.05" + "l2=2.09 f=-0.248 shape=(1, 9000, 1)
logits [[ 1.3869231 -2.182688   1.4285647 -1.6259606]]
Iteration 400 of 1000: loss=4.64 " + "l1=2.59" + "l2=2.05 f=-0.218 shape=(1, 9000, 1)
logits [[ 1.1971812 -2.0733984  1.2965213 -1.2938385]]
Iteration 500 of 1000: loss=4.14 " + "l1=2.11" + "l2=2.03 f=-0.192 shape=(1, 9000, 1)
logits [[ 0.99692655 -1.9818176   1.1643561  -0.94699746]]
Iteration 600 of 1000: loss=3.66 " + "l1=1.66" + "l2=1.99 f=-0.164 shape=(1, 9000, 1)
logits [[ 0.8372513  -1.8827385   1.0251194  -0.63690716]]
Iteration 700 of 1000: loss=3.18 " + "l1=1.19" + "l2=2 f=-0.153 shape=(1, 9000, 1)
logits [[ 0.6180392  -1.7614253   0.85913706 -0.32643837]]
Iteration 800 of 1000: loss=2.68 " + "l1=0.717" + "l2=1.97 f=-0.146 shape=(1, 9000, 1)
logits [[ 0.4396558  -1.6932244   0.6938558  -0.02264956]]
Iteration 900 of 1000: loss=2.27 " + "l1=0.332" + "l2=1.94 f=-0.141 shape=(1, 9000, 1)
logits [[ 0.23110774 -1.6198086   0.57771444  0.24614888]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=124 " + "l1=124" + "l2=0 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.996204  -2.8448987  2.7999227 -7.4056835]]
Iteration 100 of 1000: loss=16.5 " + "l1=0.0768" + "l2=16.5 f=-0.177 shape=(1, 9000, 1)
logits [[-0.37737787 -1.8145242   0.7462334   0.73855084]]
Iteration 200 of 1000: loss=12 " + "l1=0" + "l2=12 f=-0.181 shape=(1, 9000, 1)
logits [[-0.2293284  -1.7960865   0.6450764   0.65501773]]
Iteration 300 of 1000: loss=10.6 " + "l1=0" + "l2=10.6 f=-0.188 shape=(1, 9000, 1)
logits [[-0.1864126  -1.7861688   0.6059926   0.61567634]]
Iteration 400 of 1000: loss=9.82 " + "l1=0" + "l2=9.82 f=-0.182 shape=(1, 9000, 1)
logits [[-0.14808941 -1.7634158   0.5773824   0.60770696]]
Iteration 500 of 1000: loss=9.2 " + "l1=0.127" + "l2=9.08 f=-0.183 shape=(1, 9000, 1)
logits [[-0.06969337 -1.7686365   0.5602917   0.5475436 ]]
Iteration 600 of 1000: loss=8.71 " + "l1=0" + "l2=8.71 f=-0.172 shape=(1, 9000, 1)
logits [[-0.05149106 -1.755713    0.5233501   0.5941629 ]]
Iteration 700 of 1000: loss=8.13 " + "l1=0" + "l2=8.13 f=-0.173 shape=(1, 9000, 1)
logits [[ 1.6554762e-03 -1.7596620e+00  5.2817780e-01  5.3920698e-01]]
Iteration 800 of 1000: loss=7.9 " + "l1=0" + "l2=7.9 f=-0.169 shape=(1, 9000, 1)
logits [[-0.00235522 -1.7458144   0.508219    0.56272036]]
Iteration 900 of 1000: loss=7.45 " + "l1=0.00228" + "l2=7.45 f=-0.17 shape=(1, 9000, 1)
logits [[ 0.04353124 -1.7357478   0.5061651   0.5059375 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=68.2 " + "l1=68.2" + "l2=0 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.996204  -2.8448987  2.7999227 -7.4056835]]
Iteration 100 of 1000: loss=14.8 " + "l1=1.51" + "l2=13.3 f=-0.189 shape=(1, 9000, 1)
logits [[-0.21271762 -1.8878238   0.80918145  0.53522146]]
Iteration 200 of 1000: loss=10.6 " + "l1=0" + "l2=10.6 f=-0.186 shape=(1, 9000, 1)
logits [[-0.21145706 -1.7755022   0.60738075  0.6337255 ]]
Iteration 300 of 1000: loss=9.36 " + "l1=0" + "l2=9.36 f=-0.183 shape=(1, 9000, 1)
logits [[-0.1489234  -1.7486285   0.56560004  0.59924334]]
Iteration 400 of 1000: loss=8.53 " + "l1=0" + "l2=8.53 f=-0.179 shape=(1, 9000, 1)
logits [[-0.06555539 -1.7512226   0.5309667   0.5694787 ]]
Iteration 500 of 1000: loss=7.83 " + "l1=0" + "l2=7.83 f=-0.171 shape=(1, 9000, 1)
logits [[-1.1446755e-03 -1.7443923e+00  5.1993006e-01  5.3968602e-01]]
Iteration 600 of 1000: loss=7.31 " + "l1=0" + "l2=7.31 f=-0.168 shape=(1, 9000, 1)
logits [[ 0.04477583 -1.7400404   0.5101245   0.5141558 ]]
Iteration 700 of 1000: loss=6.92 " + "l1=0" + "l2=6.92 f=-0.165 shape=(1, 9000, 1)
logits [[ 0.05902425 -1.7300495   0.49793908  0.5140315 ]]
Iteration 800 of 1000: loss=6.58 " + "l1=0" + "l2=6.58 f=-0.161 shape=(1, 9000, 1)
logits [[ 0.06235365 -1.7197341   0.48680165  0.52824134]]
Iteration 900 of 1000: loss=6.15 " + "l1=0" + "l2=6.15 f=-0.159 shape=(1, 9000, 1)
logits [[ 0.09468667 -1.7139368   0.4833191   0.5015145 ]]
--- 289.3605589866638 seconds ---
Adv result:3
Loading record A01443
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0492 " + "l1=0.0492" + "l2=0 f=-0.765 shape=(1, 9000, 1)
logits [[ 3.7950022 -1.1282065  1.8669175 -7.5934477]]
Iteration 100 of 1000: loss=0.0479 " + "l1=0.0472" + "l2=0.000747 f=-0.761 shape=(1, 9000, 1)
logits [[ 3.701473  -1.0164427  1.8142303 -7.541634 ]]
Iteration 200 of 1000: loss=0.0475 " + "l1=0.0466" + "l2=0.000877 f=-0.759 shape=(1, 9000, 1)
logits [[ 3.678568   -0.98483425  1.7984719  -7.5269966 ]]
Iteration 300 of 1000: loss=0.0472 " + "l1=0.046" + "l2=0.00113 f=-0.757 shape=(1, 9000, 1)
logits [[ 3.651989  -0.9504284  1.781553  -7.5097976]]
Iteration 400 of 1000: loss=0.0469 " + "l1=0.0455" + "l2=0.00139 f=-0.755 shape=(1, 9000, 1)
logits [[ 3.628403  -0.9207689  1.7659638 -7.4934354]]
Iteration 500 of 1000: loss=0.0466 " + "l1=0.045" + "l2=0.00157 f=-0.753 shape=(1, 9000, 1)
logits [[ 3.6076095 -0.8957511  1.7524282 -7.478084 ]]
Iteration 600 of 1000: loss=0.0464 " + "l1=0.0446" + "l2=0.00176 f=-0.752 shape=(1, 9000, 1)
logits [[ 3.5888767  -0.87285924  1.7400769  -7.4634805 ]]
Iteration 700 of 1000: loss=0.0463 " + "l1=0.0442" + "l2=0.00202 f=-0.75 shape=(1, 9000, 1)
logits [[ 3.571741   -0.85190564  1.7287481  -7.4504523 ]]
Iteration 800 of 1000: loss=0.0461 " + "l1=0.0439" + "l2=0.00222 f=-0.749 shape=(1, 9000, 1)
logits [[ 3.5565617  -0.83276874  1.7183087  -7.438308  ]]
Iteration 900 of 1000: loss=0.0459 " + "l1=0.0436" + "l2=0.0023 f=-0.747 shape=(1, 9000, 1)
logits [[ 3.5432394 -0.8137499  1.7077365 -7.42614  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.492 " + "l1=0.492" + "l2=0 f=-0.765 shape=(1, 9000, 1)
logits [[ 3.7950022 -1.1282065  1.8669175 -7.5934477]]
Iteration 100 of 1000: loss=0.366 " + "l1=0.303" + "l2=0.0628 f=-0.733 shape=(1, 9000, 1)
logits [[ 2.8922882  -0.14065027  1.442182   -7.126329  ]]
Iteration 200 of 1000: loss=0.315 " + "l1=0.229" + "l2=0.086 f=-0.737 shape=(1, 9000, 1)
logits [[ 2.486626    0.19230804  1.3400638  -6.967707  ]]
Iteration 300 of 1000: loss=0.28 " + "l1=0.17" + "l2=0.11 f=-0.75 shape=(1, 9000, 1)
logits [[ 2.1220784   0.42194825  1.2894489  -6.831711  ]]
Iteration 400 of 1000: loss=0.257 " + "l1=0.131" + "l2=0.126 f=-0.763 shape=(1, 9000, 1)
logits [[ 1.8663099  0.5527307  1.2742087 -6.7444344]]
Iteration 500 of 1000: loss=0.241 " + "l1=0.1" + "l2=0.14 f=-0.775 shape=(1, 9000, 1)
logits [[ 1.6612731  0.6577421  1.255832  -6.6761074]]
Iteration 600 of 1000: loss=0.227 " + "l1=0.0712" + "l2=0.156 f=-0.787 shape=(1, 9000, 1)
logits [[ 1.4652271  0.7530159  1.2515053 -6.619377 ]]
Iteration 700 of 1000: loss=0.216 " + "l1=0.0488" + "l2=0.167 f=-0.797 shape=(1, 9000, 1)
logits [[ 1.3096935  0.8214218  1.2455974 -6.565942 ]]
Iteration 800 of 1000: loss=0.207 " + "l1=0.0381" + "l2=0.169 f=-0.801 shape=(1, 9000, 1)
logits [[ 1.2361422   0.85533273  1.2303007  -6.5239024 ]]
Iteration 900 of 1000: loss=0.199 " + "l1=0.0337" + "l2=0.165 f=-0.8 shape=(1, 9000, 1)
logits [[ 1.209686   0.872985   1.2094237 -6.4903197]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.92 " + "l1=4.92" + "l2=0 f=-0.765 shape=(1, 9000, 1)
logits [[ 3.7950022 -1.1282065  1.8669175 -7.5934477]]
Iteration 100 of 1000: loss=0.516 " + "l1=0" + "l2=0.516 f=-0.813 shape=(1, 9000, 1)
logits [[ 1.0807321  1.0917081  1.0898194 -6.5145364]]
Iteration 200 of 1000: loss=0.39 " + "l1=0" + "l2=0.39 f=-0.809 shape=(1, 9000, 1)
logits [[ 1.0506827  1.0962136  1.0816553 -6.4639487]]
Iteration 300 of 1000: loss=0.334 " + "l1=0" + "l2=0.334 f=-0.802 shape=(1, 9000, 1)
logits [[ 1.0540551  1.086375   1.0608654 -6.409513 ]]
Iteration 400 of 1000: loss=0.305 " + "l1=0" + "l2=0.305 f=-0.802 shape=(1, 9000, 1)
logits [[ 1.0301735  1.0798489  1.054997  -6.371898 ]]
Iteration 500 of 1000: loss=0.277 " + "l1=0" + "l2=0.277 f=-0.797 shape=(1, 9000, 1)
logits [[ 1.0559835  1.0649918  1.0471871 -6.354947 ]]
Iteration 600 of 1000: loss=0.259 " + "l1=0" + "l2=0.259 f=-0.794 shape=(1, 9000, 1)
logits [[ 1.0491589  1.0606803  1.0532191 -6.3387637]]
Iteration 700 of 1000: loss=0.252 " + "l1=0" + "l2=0.252 f=-0.794 shape=(1, 9000, 1)
logits [[ 1.0215111  1.0700787  1.0495287 -6.3162885]]
Iteration 800 of 1000: loss=0.24 " + "l1=0" + "l2=0.24 f=-0.792 shape=(1, 9000, 1)
logits [[ 1.0298136  1.0582371  1.0514727 -6.3068047]]
Iteration 900 of 1000: loss=0.232 " + "l1=0" + "l2=0.232 f=-0.79 shape=(1, 9000, 1)
logits [[ 1.0339513  1.055698   1.0459585 -6.296199 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.71 " + "l1=2.71" + "l2=0 f=-0.765 shape=(1, 9000, 1)
logits [[ 3.7950022 -1.1282065  1.8669175 -7.5934477]]
Iteration 100 of 1000: loss=0.482 " + "l1=0" + "l2=0.482 f=-0.813 shape=(1, 9000, 1)
logits [[ 1.072299   1.1065995  1.0963461 -6.5263033]]
Iteration 200 of 1000: loss=0.354 " + "l1=0" + "l2=0.354 f=-0.802 shape=(1, 9000, 1)
logits [[ 1.0922098  1.0957637  1.0692983 -6.466519 ]]
Iteration 300 of 1000: loss=0.306 " + "l1=0" + "l2=0.306 f=-0.802 shape=(1, 9000, 1)
logits [[ 1.0602744  1.0810765  1.0647308 -6.412703 ]]
Iteration 400 of 1000: loss=0.274 " + "l1=0.000625" + "l2=0.274 f=-0.799 shape=(1, 9000, 1)
logits [[ 1.067492   1.0663558  1.0529476 -6.3836913]]
Iteration 500 of 1000: loss=0.256 " + "l1=0" + "l2=0.256 f=-0.8 shape=(1, 9000, 1)
logits [[ 1.0464174  1.0620921  1.0572529 -6.364445 ]]
Iteration 600 of 1000: loss=0.245 " + "l1=0" + "l2=0.245 f=-0.795 shape=(1, 9000, 1)
logits [[ 1.04738    1.066781   1.0519389 -6.3479514]]
Iteration 700 of 1000: loss=0.233 " + "l1=0" + "l2=0.233 f=-0.791 shape=(1, 9000, 1)
logits [[ 1.0589316  1.0608995  1.0479676 -6.3328495]]
Iteration 800 of 1000: loss=0.228 " + "l1=0" + "l2=0.228 f=-0.792 shape=(1, 9000, 1)
logits [[ 1.0307847  1.0715005  1.0418434 -6.311721 ]]
Iteration 900 of 1000: loss=0.219 " + "l1=0" + "l2=0.219 f=-0.791 shape=(1, 9000, 1)
logits [[ 1.0348333  1.064684   1.0360173 -6.297581 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.6 " + "l1=1.6" + "l2=0 f=-0.765 shape=(1, 9000, 1)
logits [[ 3.7950022 -1.1282065  1.8669175 -7.5934477]]
Iteration 100 of 1000: loss=0.475 " + "l1=0.00414" + "l2=0.471 f=-0.808 shape=(1, 9000, 1)
logits [[ 1.1085225  1.0963914  1.1091384 -6.5462255]]
Iteration 200 of 1000: loss=0.33 " + "l1=0" + "l2=0.33 f=-0.804 shape=(1, 9000, 1)
logits [[ 1.0817237  1.0911291  1.0888282 -6.4761167]]
Iteration 300 of 1000: loss=0.28 " + "l1=0" + "l2=0.28 f=-0.801 shape=(1, 9000, 1)
logits [[ 1.0752171  1.0776418  1.0730296 -6.4306517]]
Iteration 400 of 1000: loss=0.257 " + "l1=0" + "l2=0.257 f=-0.801 shape=(1, 9000, 1)
logits [[ 1.0560504  1.0719973  1.0688939 -6.401167 ]]
Iteration 500 of 1000: loss=0.24 " + "l1=0" + "l2=0.24 f=-0.799 shape=(1, 9000, 1)
logits [[ 1.0560923  1.0670477  1.0629948 -6.380872 ]]
Iteration 600 of 1000: loss=0.228 " + "l1=0" + "l2=0.228 f=-0.795 shape=(1, 9000, 1)
logits [[ 1.0608732  1.0628666  1.06013   -6.364854 ]]
Iteration 700 of 1000: loss=0.22 " + "l1=0.00223" + "l2=0.218 f=-0.796 shape=(1, 9000, 1)
logits [[ 1.0487602  1.055385   1.0622517 -6.348478 ]]
Iteration 800 of 1000: loss=0.211 " + "l1=0.00323" + "l2=0.207 f=-0.794 shape=(1, 9000, 1)
logits [[ 1.0505054  1.0476192  1.057562  -6.330925 ]]
Iteration 900 of 1000: loss=0.205 " + "l1=0.00863" + "l2=0.196 f=-0.79 shape=(1, 9000, 1)
logits [[ 1.067308   1.0407407  1.0457466 -6.313253 ]]
--- 293.3388206958771 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0193 " + "l1=0.0193" + "l2=0 f=-0.765 shape=(1, 9000, 1)
logits [[ 3.7950022 -1.1282065  1.8669175 -7.5934477]]
Iteration 100 of 1000: loss=0.0189 " + "l1=0.0186" + "l2=0.000284 f=-0.773 shape=(1, 9000, 1)
logits [[ 3.7464354 -1.129292   1.8819991 -7.5922327]]
Iteration 200 of 1000: loss=0.0188 " + "l1=0.0186" + "l2=0.000263 f=-0.775 shape=(1, 9000, 1)
logits [[ 3.741102  -1.1322858  1.8855902 -7.5949445]]
Iteration 300 of 1000: loss=0.0187 " + "l1=0.0184" + "l2=0.000321 f=-0.777 shape=(1, 9000, 1)
logits [[ 3.7328968 -1.1357414  1.8902862 -7.597329 ]]
Iteration 400 of 1000: loss=0.0187 " + "l1=0.0183" + "l2=0.000414 f=-0.78 shape=(1, 9000, 1)
logits [[ 3.7247071 -1.1400828  1.8958082 -7.6002674]]
Iteration 500 of 1000: loss=0.0186 " + "l1=0.0182" + "l2=0.000464 f=-0.782 shape=(1, 9000, 1)
logits [[ 3.7170565 -1.1445754  1.9014004 -7.6033506]]
Iteration 600 of 1000: loss=0.0186 " + "l1=0.018" + "l2=0.00056 f=-0.785 shape=(1, 9000, 1)
logits [[ 3.7095249 -1.147794   1.9060786 -7.6058683]]
Iteration 700 of 1000: loss=0.0186 " + "l1=0.0179" + "l2=0.000686 f=-0.787 shape=(1, 9000, 1)
logits [[ 3.7024386 -1.1513511  1.910953  -7.608624 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.193 " + "l1=0.193" + "l2=0 f=-0.765 shape=(1, 9000, 1)
logits [[ 3.7950022 -1.1282065  1.8669175 -7.5934477]]
Iteration 100 of 1000: loss=0.158 " + "l1=0.139" + "l2=0.0187 f=-0.842 shape=(1, 9000, 1)
logits [[ 3.408663  -1.1839522  2.0193546 -7.612609 ]]
Iteration 200 of 1000: loss=0.142 " + "l1=0.115" + "l2=0.0275 f=-0.873 shape=(1, 9000, 1)
logits [[ 3.2301884 -1.1844002  2.083663  -7.6205173]]
Iteration 300 of 1000: loss=0.13 " + "l1=0.0956" + "l2=0.0347 f=-0.892 shape=(1, 9000, 1)
logits [[ 3.068119  -1.1468611  2.1125128 -7.6021104]]
Iteration 400 of 1000: loss=0.121 " + "l1=0.0782" + "l2=0.0424 f=-0.908 shape=(1, 9000, 1)
logits [[ 2.9183934 -1.1084825  2.1368093 -7.578138 ]]
Iteration 500 of 1000: loss=0.108 " + "l1=0.0538" + "l2=0.0537 f=-0.927 shape=(1, 9000, 1)
logits [[ 2.7131014 -1.0454133  2.1752453 -7.551802 ]]
Iteration 600 of 1000: loss=0.0906 " + "l1=0.0242" + "l2=0.0664 f=-0.946 shape=(1, 9000, 1)
logits [[ 2.4939787 -1.0063289  2.2516358 -7.522667 ]]
Iteration 700 of 1000: loss=0.0772 " + "l1=0.00407" + "l2=0.0732 f=-0.965 shape=(1, 9000, 1)
logits [[ 2.3596132 -1.0208856  2.318924  -7.517568 ]]
Iteration 800 of 1000: loss=0.069 " + "l1=0.000302" + "l2=0.0687 f=-0.97 shape=(1, 9000, 1)
logits [[ 2.348996  -1.050659   2.3459773 -7.524829 ]]
Iteration 900 of 1000: loss=0.0642 " + "l1=0" + "l2=0.0642 f=-0.971 shape=(1, 9000, 1)
logits [[ 2.3610418 -1.0734457  2.3619227 -7.5324683]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.106 " + "l1=0.106" + "l2=0 f=-0.765 shape=(1, 9000, 1)
logits [[ 3.7950022 -1.1282065  1.8669175 -7.5934477]]
Iteration 100 of 1000: loss=0.0957 " + "l1=0.0902" + "l2=0.00547 f=-0.807 shape=(1, 9000, 1)
logits [[ 3.588319  -1.1592107  1.9485682 -7.605175 ]]
Iteration 200 of 1000: loss=0.0912 " + "l1=0.0835" + "l2=0.00772 f=-0.825 shape=(1, 9000, 1)
logits [[ 3.5034947 -1.174002   1.9847795 -7.6146193]]
Iteration 300 of 1000: loss=0.0876 " + "l1=0.0777" + "l2=0.00988 f=-0.84 shape=(1, 9000, 1)
logits [[ 3.4276986 -1.1847751  2.0149717 -7.6187224]]
Iteration 400 of 1000: loss=0.0847 " + "l1=0.0731" + "l2=0.0116 f=-0.852 shape=(1, 9000, 1)
logits [[ 3.3677998 -1.1926956  2.0385728 -7.6217856]]
Iteration 500 of 1000: loss=0.0822 " + "l1=0.069" + "l2=0.0132 f=-0.861 shape=(1, 9000, 1)
logits [[ 3.3113859 -1.1937767  2.0563824 -7.619904 ]]
Iteration 600 of 1000: loss=0.0799 " + "l1=0.0655" + "l2=0.0145 f=-0.871 shape=(1, 9000, 1)
logits [[ 3.2645862 -1.200119   2.0744417 -7.6229553]]
Iteration 700 of 1000: loss=0.0775 " + "l1=0.0617" + "l2=0.0158 f=-0.88 shape=(1, 9000, 1)
logits [[ 3.2154174 -1.2071893  2.0939448 -7.6233115]]
Iteration 800 of 1000: loss=0.0749 " + "l1=0.0578" + "l2=0.0171 f=-0.891 shape=(1, 9000, 1)
logits [[ 3.168433  -1.2223442  2.1172082 -7.6261535]]
Iteration 900 of 1000: loss=0.072 " + "l1=0.0539" + "l2=0.0181 f=-0.903 shape=(1, 9000, 1)
logits [[ 3.1283476 -1.2510184  2.1478372 -7.636497 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.149 " + "l1=0.149" + "l2=0 f=-0.765 shape=(1, 9000, 1)
logits [[ 3.7950022 -1.1282065  1.8669175 -7.5934477]]
Iteration 100 of 1000: loss=0.128 " + "l1=0.117" + "l2=0.0115 f=-0.825 shape=(1, 9000, 1)
logits [[ 3.4933112 -1.1689471  1.9835734 -7.608646 ]]
Iteration 200 of 1000: loss=0.119 " + "l1=0.104" + "l2=0.0157 f=-0.849 shape=(1, 9000, 1)
logits [[ 3.3743243 -1.1903101  2.0357316 -7.61677  ]]
Iteration 300 of 1000: loss=0.112 " + "l1=0.0925" + "l2=0.02 f=-0.867 shape=(1, 9000, 1)
logits [[ 3.262455  -1.1824981  2.0694547 -7.617883 ]]
Iteration 400 of 1000: loss=0.106 " + "l1=0.082" + "l2=0.0243 f=-0.882 shape=(1, 9000, 1)
logits [[ 3.1503897 -1.1593587  2.0916984 -7.610307 ]]
Iteration 500 of 1000: loss=0.101 " + "l1=0.0738" + "l2=0.0274 f=-0.895 shape=(1, 9000, 1)
logits [[ 3.0684426 -1.160848   2.116178  -7.6036887]]
Iteration 600 of 1000: loss=0.0958 " + "l1=0.0655" + "l2=0.0303 f=-0.909 shape=(1, 9000, 1)
logits [[ 2.9883766 -1.1695651  2.1433415 -7.5983725]]
Iteration 700 of 1000: loss=0.0886 " + "l1=0.0518" + "l2=0.0368 f=-0.929 shape=(1, 9000, 1)
logits [[ 2.8600316 -1.1696697  2.1910803 -7.597608 ]]
Iteration 800 of 1000: loss=0.0809 " + "l1=0.0387" + "l2=0.0422 f=-0.948 shape=(1, 9000, 1)
logits [[ 2.750744  -1.1859794  2.2519476 -7.6067753]]
Iteration 900 of 1000: loss=0.0745 " + "l1=0.0283" + "l2=0.0462 f=-0.956 shape=(1, 9000, 1)
logits [[ 2.6548855 -1.1727425  2.2897642 -7.597091 ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.171 " + "l1=0.171" + "l2=0 f=-0.765 shape=(1, 9000, 1)
logits [[ 3.7950022 -1.1282065  1.8669175 -7.5934477]]
Iteration 100 of 1000: loss=0.143 " + "l1=0.128" + "l2=0.015 f=-0.834 shape=(1, 9000, 1)
logits [[ 3.448483  -1.1759102  2.001725  -7.610784 ]]
Iteration 200 of 1000: loss=0.132 " + "l1=0.111" + "l2=0.021 f=-0.86 shape=(1, 9000, 1)
logits [[ 3.305844  -1.1893338  2.0599678 -7.6184344]]
Iteration 300 of 1000: loss=0.122 " + "l1=0.0945" + "l2=0.0276 f=-0.881 shape=(1, 9000, 1)
logits [[ 3.156652  -1.1607655  2.0921288 -7.613345 ]]
Iteration 400 of 1000: loss=0.115 " + "l1=0.0827" + "l2=0.0319 f=-0.895 shape=(1, 9000, 1)
logits [[ 3.0451894 -1.1417894  2.1134624 -7.5953116]]
Iteration 500 of 1000: loss=0.107 " + "l1=0.0695" + "l2=0.0377 f=-0.91 shape=(1, 9000, 1)
logits [[ 2.924262  -1.1242657  2.1414368 -7.5820246]]
Iteration 600 of 1000: loss=0.0975 " + "l1=0.0508" + "l2=0.0467 f=-0.93 shape=(1, 9000, 1)
logits [[ 2.7583566 -1.0943456  2.186338  -7.5699115]]
Iteration 700 of 1000: loss=0.0843 " + "l1=0.0279" + "l2=0.0564 f=-0.947 shape=(1, 9000, 1)
logits [[ 2.5725424 -1.0629078  2.2582555 -7.554023 ]]
Iteration 800 of 1000: loss=0.0745 " + "l1=0.0125" + "l2=0.0619 f=-0.961 shape=(1, 9000, 1)
logits [[ 2.4546885 -1.0648875  2.3134732 -7.546192 ]]
Iteration 900 of 1000: loss=0.0674 " + "l1=0.00221" + "l2=0.0652 f=-0.97 shape=(1, 9000, 1)
logits [[ 2.3781228 -1.0742307  2.353203  -7.538149 ]]
--- 276.02157497406006 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.114 " + "l1=0.114" + "l2=0 f=-0.765 shape=(1, 9000, 1)
logits [[ 3.7950022 -1.1282065  1.8669175 -7.5934477]]
Iteration 100 of 1000: loss=0.113 " + "l1=0.112" + "l2=0.000521 f=-0.761 shape=(1, 9000, 1)
logits [[ 3.7162914 -1.0621245  1.8283719 -7.525929 ]]
Iteration 200 of 1000: loss=0.113 " + "l1=0.112" + "l2=0.000586 f=-0.76 shape=(1, 9000, 1)
logits [[ 3.6992466 -1.045164   1.8185738 -7.511032 ]]
Iteration 300 of 1000: loss=0.112 " + "l1=0.112" + "l2=0.000728 f=-0.758 shape=(1, 9000, 1)
logits [[ 3.6788406 -1.0241885  1.8062263 -7.4920826]]
Iteration 400 of 1000: loss=0.112 " + "l1=0.111" + "l2=0.000916 f=-0.756 shape=(1, 9000, 1)
logits [[ 3.6585824 -1.0033736  1.7940416 -7.4727836]]
Iteration 500 of 1000: loss=0.112 " + "l1=0.111" + "l2=0.0011 f=-0.754 shape=(1, 9000, 1)
logits [[ 3.6397226 -0.9834921  1.782009  -7.454359 ]]
Iteration 600 of 1000: loss=0.112 " + "l1=0.111" + "l2=0.0013 f=-0.752 shape=(1, 9000, 1)
logits [[ 3.621896   -0.96448857  1.7704083  -7.43653   ]]
Iteration 700 of 1000: loss=0.112 " + "l1=0.11" + "l2=0.00147 f=-0.75 shape=(1, 9000, 1)
logits [[ 3.605594   -0.94710433  1.7598048  -7.4197507 ]]
Iteration 800 of 1000: loss=0.112 " + "l1=0.11" + "l2=0.00163 f=-0.749 shape=(1, 9000, 1)
logits [[ 3.5906286 -0.9317808  1.7504764 -7.4043117]]
Iteration 900 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.00182 f=-0.747 shape=(1, 9000, 1)
logits [[ 3.5768683  -0.91844994  1.7421155  -7.3901052 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.14 " + "l1=1.14" + "l2=0 f=-0.765 shape=(1, 9000, 1)
logits [[ 3.7950022 -1.1282065  1.8669175 -7.5934477]]
Iteration 100 of 1000: loss=1.05 " + "l1=1.01" + "l2=0.0443 f=-0.727 shape=(1, 9000, 1)
logits [[ 3.0565646 -0.4842676  1.5206753 -6.9993696]]
Iteration 200 of 1000: loss=1.01 " + "l1=0.945" + "l2=0.0616 f=-0.708 shape=(1, 9000, 1)
logits [[ 2.7222354  -0.20630683  1.3808683  -6.7307034 ]]
Iteration 300 of 1000: loss=0.971 " + "l1=0.89" + "l2=0.081 f=-0.697 shape=(1, 9000, 1)
logits [[ 2.4042087   0.00984311  1.290207   -6.4940615 ]]
Iteration 400 of 1000: loss=0.943 " + "l1=0.843" + "l2=0.1 f=-0.695 shape=(1, 9000, 1)
logits [[ 2.125254    0.16489203  1.2301439  -6.2997656 ]]
Iteration 500 of 1000: loss=0.919 " + "l1=0.803" + "l2=0.116 f=-0.693 shape=(1, 9000, 1)
logits [[ 1.9010396  0.2688699  1.1902275 -6.1304684]]
Iteration 600 of 1000: loss=0.897 " + "l1=0.769" + "l2=0.128 f=-0.695 shape=(1, 9000, 1)
logits [[ 1.7067177   0.34632522  1.1550685  -5.9861665 ]]
Iteration 700 of 1000: loss=0.872 " + "l1=0.732" + "l2=0.14 f=-0.702 shape=(1, 9000, 1)
logits [[ 1.4775354   0.43699992  1.1176229  -5.83991   ]]
Iteration 800 of 1000: loss=0.85 " + "l1=0.701" + "l2=0.149 f=-0.704 shape=(1, 9000, 1)
logits [[ 1.3115938  0.4858168  1.0905706 -5.7028527]]
Iteration 900 of 1000: loss=0.832 " + "l1=0.675" + "l2=0.157 f=-0.7 shape=(1, 9000, 1)
logits [[ 1.1830717  0.521339   1.0608763 -5.565524 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.4 " + "l1=11.4" + "l2=0 f=-0.765 shape=(1, 9000, 1)
logits [[ 3.7950022 -1.1282065  1.8669175 -7.5934477]]
Iteration 100 of 1000: loss=6.41 " + "l1=5" + "l2=1.42 f=-0.635 shape=(1, 9000, 1)
logits [[ 0.61134565  0.613855    0.6153251  -4.382266  ]]
Iteration 200 of 1000: loss=5.06 " + "l1=3.16" + "l2=1.9 f=-0.517 shape=(1, 9000, 1)
logits [[ 0.24744245  0.285274    0.27266544 -2.8721664 ]]
Iteration 300 of 1000: loss=3.82 " + "l1=1.64" + "l2=2.18 f=-0.426 shape=(1, 9000, 1)
logits [[-5.3191051e-02  4.0196814e-04 -1.0149686e-02 -1.6393476e+00]]
Iteration 400 of 1000: loss=2.74 " + "l1=0.42" + "l2=2.32 f=-0.285 shape=(1, 9000, 1)
logits [[-0.31666473 -0.13661328 -0.13408709 -0.5540035 ]]
Iteration 500 of 1000: loss=1.85 " + "l1=0.000306" + "l2=1.85 f=-0.223 shape=(1, 9000, 1)
logits [[-0.40508595 -0.16102763 -0.16423948 -0.16133386]]
Iteration 600 of 1000: loss=1.49 " + "l1=0" + "l2=1.49 f=-0.216 shape=(1, 9000, 1)
logits [[-0.40361112 -0.15748335 -0.15776385 -0.14326704]]
Iteration 700 of 1000: loss=1.28 " + "l1=0.00955" + "l2=1.27 f=-0.21 shape=(1, 9000, 1)
logits [[-0.38301754 -0.15625419 -0.14602238 -0.15556821]]
Iteration 800 of 1000: loss=1.13 " + "l1=0.00653" + "l2=1.12 f=-0.211 shape=(1, 9000, 1)
logits [[-0.40274346 -0.15479058 -0.14079264 -0.14732292]]
Iteration 900 of 1000: loss=1.01 " + "l1=0.00637" + "l2=1 f=-0.211 shape=(1, 9000, 1)
logits [[-0.4018777  -0.15978609 -0.1386531  -0.14502254]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.26 " + "l1=6.26" + "l2=0 f=-0.765 shape=(1, 9000, 1)
logits [[ 3.7950022 -1.1282065  1.8669175 -7.5934477]]
Iteration 100 of 1000: loss=4.12 " + "l1=3.34" + "l2=0.779 f=-0.715 shape=(1, 9000, 1)
logits [[ 0.7928425   0.81255305  0.80466634 -5.268414  ]]
Iteration 200 of 1000: loss=3.63 " + "l1=2.83" + "l2=0.798 f=-0.634 shape=(1, 9000, 1)
logits [[ 0.6689893   0.62376606  0.64860785 -4.4775977 ]]
Iteration 300 of 1000: loss=3.2 " + "l1=2.25" + "l2=0.948 f=-0.567 shape=(1, 9000, 1)
logits [[ 0.43741897  0.4646084   0.46358368 -3.6347847 ]]
Iteration 400 of 1000: loss=2.72 " + "l1=1.67" + "l2=1.05 f=-0.517 shape=(1, 9000, 1)
logits [[ 0.2438589   0.23469543  0.2458476  -2.7928505 ]]
Iteration 500 of 1000: loss=2.21 " + "l1=1.06" + "l2=1.16 f=-0.435 shape=(1, 9000, 1)
logits [[ 0.02860516  0.0512903   0.05104485 -1.8711041 ]]
Iteration 600 of 1000: loss=1.6 " + "l1=0.32" + "l2=1.28 f=-0.315 shape=(1, 9000, 1)
logits [[-0.2921618  -0.12725857 -0.13070504 -0.70944035]]
Iteration 700 of 1000: loss=1.12 " + "l1=0" + "l2=1.12 f=-0.273 shape=(1, 9000, 1)
logits [[-0.50498545 -0.1995899  -0.20007238 -0.18571323]]
Iteration 800 of 1000: loss=0.931 " + "l1=0.000836" + "l2=0.931 f=-0.269 shape=(1, 9000, 1)
logits [[-0.5061503  -0.18779017 -0.19083527 -0.18930957]]
Iteration 900 of 1000: loss=0.827 " + "l1=0.00588" + "l2=0.822 f=-0.266 shape=(1, 9000, 1)
logits [[-0.49710533 -0.18992986 -0.18394446 -0.1946443 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.7 " + "l1=3.7" + "l2=0 f=-0.765 shape=(1, 9000, 1)
logits [[ 3.7950022 -1.1282065  1.8669175 -7.5934477]]
Iteration 100 of 1000: loss=2.79 " + "l1=2.33" + "l2=0.455 f=-0.737 shape=(1, 9000, 1)
logits [[ 1.2576439   0.60348105  1.104735   -5.914892  ]]
Iteration 200 of 1000: loss=2.45 " + "l1=2.01" + "l2=0.441 f=-0.704 shape=(1, 9000, 1)
logits [[ 0.84855115  0.8324664   0.8421144  -5.338814  ]]
Iteration 300 of 1000: loss=2.28 " + "l1=1.85" + "l2=0.432 f=-0.672 shape=(1, 9000, 1)
logits [[ 0.7339394   0.7564621   0.74417555 -4.9233932 ]]
Iteration 400 of 1000: loss=2.14 " + "l1=1.68" + "l2=0.465 f=-0.638 shape=(1, 9000, 1)
logits [[ 0.6495575   0.6508185   0.65416384 -4.507555  ]]
Iteration 500 of 1000: loss=2 " + "l1=1.48" + "l2=0.524 f=-0.606 shape=(1, 9000, 1)
logits [[ 0.52529955  0.52441365  0.5355113  -4.0074506 ]]
Iteration 600 of 1000: loss=1.79 " + "l1=1.19" + "l2=0.601 f=-0.576 shape=(1, 9000, 1)
logits [[ 0.3415724   0.336385    0.33714056 -3.3174021 ]]
Iteration 700 of 1000: loss=1.52 " + "l1=0.835" + "l2=0.687 f=-0.543 shape=(1, 9000, 1)
logits [[ 0.09324567  0.10335971  0.09718351 -2.466862  ]]
Iteration 800 of 1000: loss=1.29 " + "l1=0.584" + "l2=0.708 f=-0.499 shape=(1, 9000, 1)
logits [[-0.06102169 -0.04436383 -0.04810498 -1.8418607 ]]
Iteration 900 of 1000: loss=1.12 " + "l1=0.429" + "l2=0.694 f=-0.444 shape=(1, 9000, 1)
logits [[-0.12224571 -0.10969004 -0.11196999 -1.4307272 ]]
--- 294.73649764060974 seconds ---
Adv result:3
Loading record A01449
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0584 " + "l1=0.0584" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.3742962 -2.4689476  2.4400027 -5.7626624]]
Iteration 100 of 1000: loss=0.0582 " + "l1=0.0581" + "l2=0.00019 f=-0.602 shape=(1, 9000, 1)
logits [[ 3.3505418 -2.454897   2.4320974 -5.7370987]]
Iteration 200 of 1000: loss=0.0582 " + "l1=0.058" + "l2=0.000171 f=-0.602 shape=(1, 9000, 1)
logits [[ 3.349135  -2.453531   2.4310899 -5.7348304]]
Iteration 300 of 1000: loss=0.0582 " + "l1=0.058" + "l2=0.000187 f=-0.602 shape=(1, 9000, 1)
logits [[ 3.3462877 -2.4514456  2.429721  -5.731092 ]]
Iteration 400 of 1000: loss=0.0582 " + "l1=0.0579" + "l2=0.000236 f=-0.601 shape=(1, 9000, 1)
logits [[ 3.3434176 -2.4493802  2.4283602 -5.7272735]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.584 " + "l1=0.584" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.3742962 -2.4689476  2.4400027 -5.7626624]]
Iteration 100 of 1000: loss=0.567 " + "l1=0.558" + "l2=0.00905 f=-0.59 shape=(1, 9000, 1)
logits [[ 3.2149105 -2.3689349  2.3810244 -5.585427 ]]
Iteration 200 of 1000: loss=0.561 " + "l1=0.548" + "l2=0.013 f=-0.582 shape=(1, 9000, 1)
logits [[ 3.1555183 -2.327159   2.3530543 -5.5077667]]
Iteration 300 of 1000: loss=0.556 " + "l1=0.54" + "l2=0.0158 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.106394  -2.2921588  2.329851  -5.4429207]]
Iteration 400 of 1000: loss=0.551 " + "l1=0.533" + "l2=0.018 f=-0.569 shape=(1, 9000, 1)
logits [[ 3.0642905 -2.2632446  2.311281  -5.387905 ]]
Iteration 500 of 1000: loss=0.546 " + "l1=0.526" + "l2=0.0201 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.0239105 -2.235819   2.2914686 -5.331462 ]]
Iteration 600 of 1000: loss=0.541 " + "l1=0.519" + "l2=0.022 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.983295  -2.211678   2.2728484 -5.2759857]]
Iteration 700 of 1000: loss=0.537 " + "l1=0.513" + "l2=0.0239 f=-0.553 shape=(1, 9000, 1)
logits [[ 2.9429638 -2.1900465  2.256263  -5.2226663]]
Iteration 800 of 1000: loss=0.533 " + "l1=0.507" + "l2=0.026 f=-0.548 shape=(1, 9000, 1)
logits [[ 2.8987975 -2.166593   2.2395627 -5.164615 ]]
Iteration 900 of 1000: loss=0.528 " + "l1=0.501" + "l2=0.0277 f=-0.545 shape=(1, 9000, 1)
logits [[ 2.857816  -2.1472437  2.2279718 -5.1167216]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.84 " + "l1=5.84" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.3742962 -2.4689476  2.4400027 -5.7626624]]
Iteration 100 of 1000: loss=4.34 " + "l1=3.62" + "l2=0.715 f=-0.475 shape=(1, 9000, 1)
logits [[ 1.9321477 -1.6904308  1.9301081 -4.073143 ]]
Iteration 200 of 1000: loss=3.97 " + "l1=3.24" + "l2=0.725 f=-0.44 shape=(1, 9000, 1)
logits [[ 1.7434491 -1.497519   1.7427535 -3.747034 ]]
Iteration 300 of 1000: loss=3.73 " + "l1=2.96" + "l2=0.775 f=-0.424 shape=(1, 9000, 1)
logits [[ 1.6064175 -1.3484467  1.6100187 -3.5656712]]
Iteration 400 of 1000: loss=3.53 " + "l1=2.7" + "l2=0.823 f=-0.416 shape=(1, 9000, 1)
logits [[ 1.4799411 -1.2186946  1.4854137 -3.410758 ]]
Iteration 500 of 1000: loss=3.4 " + "l1=2.57" + "l2=0.829 f=-0.406 shape=(1, 9000, 1)
logits [[ 1.4217432 -1.1464618  1.4242686 -3.3239682]]
Iteration 600 of 1000: loss=3.29 " + "l1=2.44" + "l2=0.85 f=-0.394 shape=(1, 9000, 1)
logits [[ 1.3680339 -1.0711124  1.3712753 -3.2459052]]
Iteration 700 of 1000: loss=3.18 " + "l1=2.32" + "l2=0.866 f=-0.378 shape=(1, 9000, 1)
logits [[ 1.3256582 -0.9895579  1.3249962 -3.1731875]]
Iteration 800 of 1000: loss=3.08 " + "l1=2.2" + "l2=0.886 f=-0.361 shape=(1, 9000, 1)
logits [[ 1.2745875 -0.9225678  1.2758385 -3.070327 ]]
Iteration 900 of 1000: loss=3.01 " + "l1=2.11" + "l2=0.897 f=-0.344 shape=(1, 9000, 1)
logits [[ 1.2303468 -0.8745384  1.2344006 -2.9662783]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=58.4 " + "l1=58.4" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.3742962 -2.4689476  2.4400027 -5.7626624]]
Iteration 100 of 1000: loss=16.3 " + "l1=4.35" + "l2=11.9 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.25016245  0.03022395  0.46533406 -1.6700231 ]]
Iteration 200 of 1000: loss=9.08 " + "l1=0" + "l2=9.08 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.00252013  0.27319652  0.26665938 -1.6044096 ]]
Iteration 300 of 1000: loss=7.71 " + "l1=0" + "l2=7.71 f=-0.278 shape=(1, 9000, 1)
logits [[ 0.09197954  0.25976673  0.25356486 -1.718647  ]]
Iteration 400 of 1000: loss=7.08 " + "l1=0" + "l2=7.08 f=-0.29 shape=(1, 9000, 1)
logits [[ 0.12906057  0.27022848  0.25820544 -1.8159305 ]]
Iteration 500 of 1000: loss=6.59 " + "l1=0" + "l2=6.59 f=-0.295 shape=(1, 9000, 1)
logits [[ 0.1477399   0.27752596  0.2731768  -1.879362  ]]
Iteration 600 of 1000: loss=6.29 " + "l1=0.129" + "l2=6.17 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.13930859  0.27382585  0.28672227 -1.9161384 ]]
Iteration 700 of 1000: loss=6.01 " + "l1=0.123" + "l2=5.89 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.1341832   0.27268708  0.28495187 -1.910316  ]]
Iteration 800 of 1000: loss=5.7 " + "l1=0" + "l2=5.7 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.11395042  0.27407864  0.2715034  -1.8760766 ]]
Iteration 900 of 1000: loss=5.62 " + "l1=0" + "l2=5.62 f=-0.307 shape=(1, 9000, 1)
logits [[ 0.07742763  0.28978196  0.2571202  -1.8525463 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=32.1 " + "l1=32.1" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.3742962 -2.4689476  2.4400027 -5.7626624]]
Iteration 100 of 1000: loss=13.8 " + "l1=8.12" + "l2=5.73 f=-0.314 shape=(1, 9000, 1)
logits [[ 0.91238785 -0.54376966  0.9318326  -2.558103  ]]
Iteration 200 of 1000: loss=7.88 " + "l1=0.0369" + "l2=7.84 f=-0.3 shape=(1, 9000, 1)
logits [[ 0.11980024  0.26728696  0.27399012 -1.8607894 ]]
Iteration 300 of 1000: loss=6.66 " + "l1=0.0639" + "l2=6.59 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.14253208  0.2702182   0.28183445 -1.9143555 ]]
Iteration 400 of 1000: loss=6.11 " + "l1=0.0379" + "l2=6.07 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.14831771  0.2736387   0.28052223 -1.9216007 ]]
Iteration 500 of 1000: loss=5.77 " + "l1=0.0335" + "l2=5.74 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.14122272  0.27510044  0.28118747 -1.9149625 ]]
Iteration 600 of 1000: loss=5.56 " + "l1=0.0947" + "l2=5.47 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.12480956  0.2683874   0.2855985  -1.8939093 ]]
Iteration 700 of 1000: loss=5.34 " + "l1=0.103" + "l2=5.23 f=-0.298 shape=(1, 9000, 1)
logits [[ 0.10180714  0.26655525  0.28522795 -1.8456898 ]]
Iteration 800 of 1000: loss=5.14 " + "l1=0.0434" + "l2=5.09 f=-0.298 shape=(1, 9000, 1)
logits [[ 0.07993184  0.26555258  0.27345136 -1.8101647 ]]
Iteration 900 of 1000: loss=4.98 " + "l1=0.016" + "l2=4.96 f=-0.297 shape=(1, 9000, 1)
logits [[ 0.06468833  0.26601774  0.26892832 -1.7884501 ]]
--- 259.4573097229004 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00934 " + "l1=0.00934" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.3742962 -2.4689476  2.4400027 -5.7626624]]
Iteration 100 of 1000: loss=0.00927 " + "l1=0.00916" + "l2=0.000112 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.3584106 -2.4659274  2.442226  -5.7506337]]
Iteration 200 of 1000: loss=0.00924 " + "l1=0.00917" + "l2=7.78e-05 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.3593426 -2.4662325  2.4427373 -5.7520404]]
Iteration 300 of 1000: loss=0.00923 " + "l1=0.00915" + "l2=8.43e-05 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.3584712 -2.466283   2.4434295 -5.751905 ]]
Iteration 400 of 1000: loss=0.00928 " + "l1=0.00913" + "l2=0.000155 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.3570895 -2.466197   2.4440823 -5.751304 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0934 " + "l1=0.0934" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.3742962 -2.4689476  2.4400027 -5.7626624]]
Iteration 100 of 1000: loss=0.0867 " + "l1=0.0831" + "l2=0.00358 f=-0.603 shape=(1, 9000, 1)
logits [[ 3.285984  -2.4524176  2.4547203 -5.698573 ]]
Iteration 200 of 1000: loss=0.0844 " + "l1=0.0795" + "l2=0.00488 f=-0.602 shape=(1, 9000, 1)
logits [[ 3.257862  -2.4466028  2.462444  -5.6815343]]
Iteration 300 of 1000: loss=0.0824 " + "l1=0.0765" + "l2=0.00589 f=-0.602 shape=(1, 9000, 1)
logits [[ 3.2356222 -2.4426017  2.470486  -5.670324 ]]
Iteration 400 of 1000: loss=0.0806 " + "l1=0.0738" + "l2=0.00682 f=-0.601 shape=(1, 9000, 1)
logits [[ 3.215945  -2.4395802  2.4782672 -5.660522 ]]
Iteration 500 of 1000: loss=0.0789 " + "l1=0.0714" + "l2=0.0075 f=-0.602 shape=(1, 9000, 1)
logits [[ 3.198793  -2.438529   2.4850361 -5.65227  ]]
Iteration 600 of 1000: loss=0.0772 " + "l1=0.0691" + "l2=0.00808 f=-0.602 shape=(1, 9000, 1)
logits [[ 3.1823869 -2.4369373  2.490979  -5.642886 ]]
Iteration 700 of 1000: loss=0.0757 " + "l1=0.0669" + "l2=0.0088 f=-0.602 shape=(1, 9000, 1)
logits [[ 3.1660683 -2.435706   2.4969497 -5.633709 ]]
Iteration 800 of 1000: loss=0.0741 " + "l1=0.0649" + "l2=0.00915 f=-0.601 shape=(1, 9000, 1)
logits [[ 3.1513274 -2.433959   2.502041  -5.6244025]]
Iteration 900 of 1000: loss=0.0726 " + "l1=0.063" + "l2=0.00962 f=-0.601 shape=(1, 9000, 1)
logits [[ 3.1364436 -2.431304   2.5068846 -5.614376 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.934 " + "l1=0.934" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.3742962 -2.4689476  2.4400027 -5.7626624]]
Iteration 100 of 1000: loss=0.367 " + "l1=0.0869" + "l2=0.28 f=-0.588 shape=(1, 9000, 1)
logits [[ 2.6226778 -2.320897   2.5358052 -5.188358 ]]
Iteration 200 of 1000: loss=0.226 " + "l1=0.00668" + "l2=0.219 f=-0.588 shape=(1, 9000, 1)
logits [[ 2.5516202 -2.3117723  2.5449414 -5.1361794]]
Iteration 300 of 1000: loss=0.179 " + "l1=0.0057" + "l2=0.173 f=-0.59 shape=(1, 9000, 1)
logits [[ 2.5727644 -2.3247023  2.5670688 -5.175559 ]]
Iteration 400 of 1000: loss=0.15 " + "l1=0.00219" + "l2=0.148 f=-0.591 shape=(1, 9000, 1)
logits [[ 2.5788746 -2.3325107  2.576684  -5.1852536]]
Iteration 500 of 1000: loss=0.131 " + "l1=0" + "l2=0.131 f=-0.589 shape=(1, 9000, 1)
logits [[ 2.5801046 -2.3332257  2.5867832 -5.1887107]]
Iteration 600 of 1000: loss=0.116 " + "l1=0" + "l2=0.116 f=-0.586 shape=(1, 9000, 1)
logits [[ 2.5834355 -2.3275251  2.5940719 -5.1956797]]
Iteration 700 of 1000: loss=0.103 " + "l1=0" + "l2=0.103 f=-0.583 shape=(1, 9000, 1)
logits [[ 2.5889153 -2.324275   2.593751  -5.192138 ]]
Iteration 800 of 1000: loss=0.0962 " + "l1=0.00203" + "l2=0.0941 f=-0.581 shape=(1, 9000, 1)
logits [[ 2.595434  -2.3212538  2.5933993 -5.191488 ]]
Iteration 900 of 1000: loss=0.0921 " + "l1=0.00309" + "l2=0.089 f=-0.579 shape=(1, 9000, 1)
logits [[ 2.5960975 -2.318867   2.5930092 -5.1881804]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.514 " + "l1=0.514" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.3742962 -2.4689476  2.4400027 -5.7626624]]
Iteration 100 of 1000: loss=0.331 " + "l1=0.238" + "l2=0.0935 f=-0.594 shape=(1, 9000, 1)
logits [[ 2.9361036 -2.3834631  2.503926  -5.4309916]]
Iteration 200 of 1000: loss=0.261 " + "l1=0.129" + "l2=0.132 f=-0.592 shape=(1, 9000, 1)
logits [[ 2.7685847 -2.35994    2.5332248 -5.3082943]]
Iteration 300 of 1000: loss=0.202 " + "l1=0.0465" + "l2=0.156 f=-0.592 shape=(1, 9000, 1)
logits [[ 2.6538491 -2.3401506  2.5693026 -5.2519565]]
Iteration 400 of 1000: loss=0.155 " + "l1=0.000593" + "l2=0.154 f=-0.592 shape=(1, 9000, 1)
logits [[ 2.591545  -2.3272367  2.590466  -5.223084 ]]
Iteration 500 of 1000: loss=0.128 " + "l1=0" + "l2=0.128 f=-0.59 shape=(1, 9000, 1)
logits [[ 2.5972881 -2.3260787  2.599601  -5.229204 ]]
Iteration 600 of 1000: loss=0.11 " + "l1=0" + "l2=0.11 f=-0.587 shape=(1, 9000, 1)
logits [[ 2.5972652 -2.3227696  2.6009707 -5.221676 ]]
Iteration 700 of 1000: loss=0.0981 " + "l1=0.000418" + "l2=0.0977 f=-0.584 shape=(1, 9000, 1)
logits [[ 2.60295   -2.321478   2.6021893 -5.2200284]]
Iteration 800 of 1000: loss=0.0913 " + "l1=0" + "l2=0.0913 f=-0.582 shape=(1, 9000, 1)
logits [[ 2.6013873 -2.318868   2.602052  -5.212081 ]]
Iteration 900 of 1000: loss=0.0862 " + "l1=0" + "l2=0.0862 f=-0.58 shape=(1, 9000, 1)
logits [[ 2.5983295 -2.3150685  2.599771  -5.2027354]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.304 " + "l1=0.304" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.3742962 -2.4689476  2.4400027 -5.7626624]]
Iteration 100 of 1000: loss=0.237 " + "l1=0.203" + "l2=0.0345 f=-0.598 shape=(1, 9000, 1)
logits [[ 3.106308  -2.4156842  2.4831662 -5.564062 ]]
Iteration 200 of 1000: loss=0.212 " + "l1=0.165" + "l2=0.048 f=-0.595 shape=(1, 9000, 1)
logits [[ 3.0110018 -2.399901   2.5047204 -5.495941 ]]
Iteration 300 of 1000: loss=0.192 " + "l1=0.133" + "l2=0.0587 f=-0.594 shape=(1, 9000, 1)
logits [[ 2.9390404 -2.3901386  2.530222  -5.4564977]]
Iteration 400 of 1000: loss=0.173 " + "l1=0.107" + "l2=0.0664 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.8798618 -2.3843799  2.5508702 -5.4254675]]
Iteration 500 of 1000: loss=0.156 " + "l1=0.0829" + "l2=0.0732 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.8206139 -2.3766644  2.5654898 -5.390666 ]]
Iteration 600 of 1000: loss=0.139 " + "l1=0.061" + "l2=0.0783 f=-0.594 shape=(1, 9000, 1)
logits [[ 2.7621465 -2.3659303  2.5746062 -5.3482633]]
Iteration 700 of 1000: loss=0.122 " + "l1=0.0388" + "l2=0.083 f=-0.591 shape=(1, 9000, 1)
logits [[ 2.7060103 -2.3467321  2.5865846 -5.30974  ]]
Iteration 800 of 1000: loss=0.105 " + "l1=0.0144" + "l2=0.0909 f=-0.586 shape=(1, 9000, 1)
logits [[ 2.6429908 -2.3234274  2.5986698 -5.2610393]]
Iteration 900 of 1000: loss=0.0947 " + "l1=0.00332" + "l2=0.0913 f=-0.583 shape=(1, 9000, 1)
logits [[ 2.6125526 -2.3147457  2.6023364 -5.231639 ]]
--- 257.99072337150574 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0914 " + "l1=0.0914" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.3742962 -2.4689476  2.4400027 -5.7626624]]
Iteration 100 of 1000: loss=0.0909 " + "l1=0.0906" + "l2=0.000343 f=-0.601 shape=(1, 9000, 1)
logits [[ 3.342034  -2.4573412  2.4284942 -5.7164526]]
Iteration 200 of 1000: loss=0.0908 " + "l1=0.0905" + "l2=0.000341 f=-0.6 shape=(1, 9000, 1)
logits [[ 3.3379734 -2.4551122  2.4261124 -5.7095838]]
Iteration 300 of 1000: loss=0.0907 " + "l1=0.0903" + "l2=0.000385 f=-0.599 shape=(1, 9000, 1)
logits [[ 3.332704  -2.45275    2.4233646 -5.7006254]]
Iteration 400 of 1000: loss=0.0906 " + "l1=0.0902" + "l2=0.000456 f=-0.598 shape=(1, 9000, 1)
logits [[ 3.3273506 -2.4503868  2.4205737 -5.691427 ]]
Iteration 500 of 1000: loss=0.0906 " + "l1=0.09" + "l2=0.000557 f=-0.598 shape=(1, 9000, 1)
logits [[ 3.3220646 -2.448162   2.4178097 -5.6822987]]
Iteration 600 of 1000: loss=0.0906 " + "l1=0.0899" + "l2=0.000658 f=-0.597 shape=(1, 9000, 1)
logits [[ 3.316784  -2.445931   2.4150188 -5.673257 ]]
Iteration 700 of 1000: loss=0.0905 " + "l1=0.0898" + "l2=0.000768 f=-0.596 shape=(1, 9000, 1)
logits [[ 3.3115902 -2.443663   2.4123936 -5.664406 ]]
Iteration 800 of 1000: loss=0.0905 " + "l1=0.0896" + "l2=0.000875 f=-0.595 shape=(1, 9000, 1)
logits [[ 3.3066173 -2.441472   2.4099162 -5.65591  ]]
Iteration 900 of 1000: loss=0.0905 " + "l1=0.0895" + "l2=0.000972 f=-0.594 shape=(1, 9000, 1)
logits [[ 3.3020036 -2.439322   2.4075704 -5.6478167]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.914 " + "l1=0.914" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.3742962 -2.4689476  2.4400027 -5.7626624]]
Iteration 100 of 1000: loss=0.874 " + "l1=0.852" + "l2=0.0218 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.1257303 -2.3739238  2.3393297 -5.391269 ]]
Iteration 200 of 1000: loss=0.857 " + "l1=0.825" + "l2=0.0316 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.0239406 -2.331069   2.2884874 -5.2288423]]
Iteration 300 of 1000: loss=0.843 " + "l1=0.805" + "l2=0.0379 f=-0.552 shape=(1, 9000, 1)
logits [[ 2.946753  -2.3032985  2.2493448 -5.1011515]]
Iteration 400 of 1000: loss=0.827 " + "l1=0.783" + "l2=0.0445 f=-0.54 shape=(1, 9000, 1)
logits [[ 2.866129  -2.2729833  2.209081  -4.963382 ]]
Iteration 500 of 1000: loss=0.812 " + "l1=0.76" + "l2=0.0515 f=-0.527 shape=(1, 9000, 1)
logits [[ 2.78088   -2.2410946  2.1729116 -4.8219686]]
Iteration 600 of 1000: loss=0.795 " + "l1=0.734" + "l2=0.061 f=-0.516 shape=(1, 9000, 1)
logits [[ 2.677663  -2.2192502  2.144956  -4.666276 ]]
Iteration 700 of 1000: loss=0.78 " + "l1=0.712" + "l2=0.0682 f=-0.507 shape=(1, 9000, 1)
logits [[ 2.5828664 -2.2069573  2.1341672 -4.539437 ]]
Iteration 800 of 1000: loss=0.769 " + "l1=0.698" + "l2=0.0708 f=-0.501 shape=(1, 9000, 1)
logits [[ 2.5234632 -2.1985493  2.1313388 -4.458351 ]]
Iteration 900 of 1000: loss=0.759 " + "l1=0.685" + "l2=0.0742 f=-0.494 shape=(1, 9000, 1)
logits [[ 2.4670343 -2.1907887  2.129379  -4.380262 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.14 " + "l1=9.14" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.3742962 -2.4689476  2.4400027 -5.7626624]]
Iteration 100 of 1000: loss=5.91 " + "l1=4.65" + "l2=1.26 f=-0.372 shape=(1, 9000, 1)
logits [[ 1.672971  -1.853974   1.674168  -2.9798903]]
Iteration 200 of 1000: loss=5.17 " + "l1=3.63" + "l2=1.53 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.3564335 -1.757821   1.4027714 -2.232045 ]]
Iteration 300 of 1000: loss=4.48 " + "l1=2.8" + "l2=1.68 f=-0.259 shape=(1, 9000, 1)
logits [[ 1.0591936 -1.703804   1.2019039 -1.593631 ]]
Iteration 400 of 1000: loss=3.91 " + "l1=2.12" + "l2=1.79 f=-0.208 shape=(1, 9000, 1)
logits [[ 0.8819523 -1.6872938  1.0480422 -1.0740476]]
Iteration 500 of 1000: loss=3.41 " + "l1=1.53" + "l2=1.88 f=-0.158 shape=(1, 9000, 1)
logits [[ 0.694947   -1.6540457   0.9266746  -0.60020804]]
Iteration 600 of 1000: loss=2.85 " + "l1=0.874" + "l2=1.97 f=-0.137 shape=(1, 9000, 1)
logits [[ 0.45229563 -1.6375605   0.7558327  -0.11817881]]
Iteration 700 of 1000: loss=2.29 " + "l1=0.242" + "l2=2.05 f=-0.118 shape=(1, 9000, 1)
logits [[ 0.24422899 -1.6224486   0.5736486   0.33205178]]
Iteration 800 of 1000: loss=1.8 " + "l1=0.00227" + "l2=1.8 f=-0.112 shape=(1, 9000, 1)
logits [[ 0.15144518 -1.6154435   0.5085663   0.5062982 ]]
Iteration 900 of 1000: loss=1.53 " + "l1=0.0278" + "l2=1.51 f=-0.114 shape=(1, 9000, 1)
logits [[ 0.20039319 -1.6511308   0.51123327  0.48340043]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.03 " + "l1=5.03" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.3742962 -2.4689476  2.4400027 -5.7626624]]
Iteration 100 of 1000: loss=3.81 " + "l1=3.13" + "l2=0.688 f=-0.443 shape=(1, 9000, 1)
logits [[ 1.9818294 -1.9746649  1.924686  -3.7034862]]
Iteration 200 of 1000: loss=3.41 " + "l1=2.71" + "l2=0.706 f=-0.39 shape=(1, 9000, 1)
logits [[ 1.752135  -1.8940814  1.7488937 -3.166751 ]]
Iteration 300 of 1000: loss=3.2 " + "l1=2.48" + "l2=0.716 f=-0.361 shape=(1, 9000, 1)
logits [[ 1.6407086 -1.8672196  1.6453291 -2.8620968]]
Iteration 400 of 1000: loss=3.01 " + "l1=2.24" + "l2=0.771 f=-0.331 shape=(1, 9000, 1)
logits [[ 1.5112033 -1.839095   1.535555  -2.533499 ]]
Iteration 500 of 1000: loss=2.83 " + "l1=2" + "l2=0.834 f=-0.297 shape=(1, 9000, 1)
logits [[ 1.395926  -1.8261249  1.4353832 -2.1932757]]
Iteration 600 of 1000: loss=2.65 " + "l1=1.75" + "l2=0.898 f=-0.257 shape=(1, 9000, 1)
logits [[ 1.3073028 -1.823292   1.3399526 -1.8503476]]
Iteration 700 of 1000: loss=2.46 " + "l1=1.54" + "l2=0.92 f=-0.223 shape=(1, 9000, 1)
logits [[ 1.2175707 -1.8293742  1.2617697 -1.5437185]]
Iteration 800 of 1000: loss=2.23 " + "l1=1.27" + "l2=0.955 f=-0.196 shape=(1, 9000, 1)
logits [[ 1.0994401 -1.8513232  1.1403503 -1.1722454]]
Iteration 900 of 1000: loss=1.96 " + "l1=1.01" + "l2=0.954 f=-0.187 shape=(1, 9000, 1)
logits [[ 0.9478385  -1.8879273   1.0114949  -0.81791514]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=7.08 " + "l1=7.08" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.3742962 -2.4689476  2.4400027 -5.7626624]]
Iteration 100 of 1000: loss=4.89 " + "l1=3.94" + "l2=0.956 f=-0.403 shape=(1, 9000, 1)
logits [[ 1.7873068 -1.9020284  1.791408  -3.2879221]]
Iteration 200 of 1000: loss=4.36 " + "l1=3.29" + "l2=1.08 f=-0.342 shape=(1, 9000, 1)
logits [[ 1.5522705 -1.8042521  1.5618563 -2.6779373]]
Iteration 300 of 1000: loss=3.96 " + "l1=2.8" + "l2=1.16 f=-0.307 shape=(1, 9000, 1)
logits [[ 1.3435001 -1.7777268  1.40862   -2.2017953]]
Iteration 400 of 1000: loss=3.55 " + "l1=2.27" + "l2=1.28 f=-0.254 shape=(1, 9000, 1)
logits [[ 1.1307571 -1.7358176  1.2585785 -1.6699495]]
Iteration 500 of 1000: loss=3.21 " + "l1=1.84" + "l2=1.37 f=-0.213 shape=(1, 9000, 1)
logits [[ 1.0149171 -1.724987   1.118252  -1.2590051]]
Iteration 600 of 1000: loss=2.83 " + "l1=1.51" + "l2=1.32 f=-0.185 shape=(1, 9000, 1)
logits [[ 0.90272874 -1.7224543   1.0130211  -0.9332402 ]]
Iteration 700 of 1000: loss=2.41 " + "l1=1.06" + "l2=1.35 f=-0.167 shape=(1, 9000, 1)
logits [[ 0.6987862  -1.7215149   0.86233675 -0.5063168 ]]
Iteration 800 of 1000: loss=1.93 " + "l1=0.503" + "l2=1.43 f=-0.159 shape=(1, 9000, 1)
logits [[ 0.4239383  -1.702348    0.6446981  -0.00382333]]
Iteration 900 of 1000: loss=1.56 " + "l1=0.107" + "l2=1.45 f=-0.146 shape=(1, 9000, 1)
logits [[ 0.2405906  -1.6868895   0.50049615  0.36267364]]
--- 293.3400375843048 seconds ---
Adv result:3
Loading record A01450
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0488 " + "l1=0.0488" + "l2=0 f=-0.266 shape=(1, 9000, 1)
logits [[ 3.353296  -1.5299895  1.7204057 -4.6074424]]
Iteration 100 of 1000: loss=0.0483 " + "l1=0.0478" + "l2=0.000449 f=-0.268 shape=(1, 9000, 1)
logits [[ 3.29515   -1.487287   1.6858209 -4.5642524]]
Iteration 200 of 1000: loss=0.0481 " + "l1=0.0477" + "l2=0.000444 f=-0.268 shape=(1, 9000, 1)
logits [[ 3.28904   -1.4811052  1.6808821 -4.5593348]]
Iteration 300 of 1000: loss=0.0481 " + "l1=0.0475" + "l2=0.000514 f=-0.268 shape=(1, 9000, 1)
logits [[ 3.280028  -1.4742782  1.6751564 -4.5522666]]
Iteration 400 of 1000: loss=0.048 " + "l1=0.0474" + "l2=0.000596 f=-0.268 shape=(1, 9000, 1)
logits [[ 3.2705069 -1.4678198  1.6695136 -4.5446763]]
Iteration 500 of 1000: loss=0.048 " + "l1=0.0472" + "l2=0.000727 f=-0.268 shape=(1, 9000, 1)
logits [[ 3.2616513 -1.46192    1.6643754 -4.5375333]]
Iteration 600 of 1000: loss=0.0479 " + "l1=0.0471" + "l2=0.000807 f=-0.269 shape=(1, 9000, 1)
logits [[ 3.253472  -1.4566392  1.6595895 -4.53111  ]]
Iteration 700 of 1000: loss=0.0479 " + "l1=0.047" + "l2=0.000903 f=-0.269 shape=(1, 9000, 1)
logits [[ 3.2459266 -1.4519172  1.6553173 -4.5249734]]
Iteration 800 of 1000: loss=0.0479 " + "l1=0.0469" + "l2=0.00108 f=-0.269 shape=(1, 9000, 1)
logits [[ 3.2389078 -1.4477729  1.6515862 -4.5190945]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.488 " + "l1=0.488" + "l2=0 f=-0.266 shape=(1, 9000, 1)
logits [[ 3.353296  -1.5299895  1.7204057 -4.6074424]]
Iteration 100 of 1000: loss=0.35 " + "l1=0.25" + "l2=0.101 f=-0.346 shape=(1, 9000, 1)
logits [[ 2.1903028  -0.30720842  1.0441568  -4.3112817 ]]
Iteration 200 of 1000: loss=0.307 " + "l1=0.183" + "l2=0.124 f=-0.389 shape=(1, 9000, 1)
logits [[ 1.7870071  -0.04405006  0.9294786  -4.230046  ]]
Iteration 300 of 1000: loss=0.265 " + "l1=0.126" + "l2=0.139 f=-0.436 shape=(1, 9000, 1)
logits [[ 1.4195274   0.16163723  0.8446679  -4.1696444 ]]
Iteration 400 of 1000: loss=0.237 " + "l1=0.0879" + "l2=0.149 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.1556258   0.27629262  0.78964907 -4.0746064 ]]
Iteration 500 of 1000: loss=0.215 " + "l1=0.0535" + "l2=0.161 f=-0.489 shape=(1, 9000, 1)
logits [[ 0.92008895  0.38470888  0.7362629  -3.99527   ]]
Iteration 600 of 1000: loss=0.197 " + "l1=0.023" + "l2=0.174 f=-0.515 shape=(1, 9000, 1)
logits [[ 0.70382696  0.47361353  0.6958491  -3.934778  ]]
Iteration 700 of 1000: loss=0.184 " + "l1=0.019" + "l2=0.165 f=-0.512 shape=(1, 9000, 1)
logits [[ 0.68533546  0.49510786  0.6722473  -3.8999987 ]]
Iteration 800 of 1000: loss=0.175 " + "l1=0.0118" + "l2=0.164 f=-0.513 shape=(1, 9000, 1)
logits [[ 0.64912736  0.5312546   0.64613104 -3.8766842 ]]
Iteration 900 of 1000: loss=0.169 " + "l1=0.00697" + "l2=0.162 f=-0.512 shape=(1, 9000, 1)
logits [[ 0.62786156  0.55813044  0.6266824  -3.8590252 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.88 " + "l1=4.88" + "l2=0 f=-0.266 shape=(1, 9000, 1)
logits [[ 3.353296  -1.5299895  1.7204057 -4.6074424]]
Iteration 100 of 1000: loss=0.44 " + "l1=0" + "l2=0.44 f=-0.513 shape=(1, 9000, 1)
logits [[ 0.6033133  0.6088571  0.5886495 -3.8520968]]
Iteration 200 of 1000: loss=0.343 " + "l1=0" + "l2=0.343 f=-0.521 shape=(1, 9000, 1)
logits [[ 0.589911   0.6024049  0.6000743 -3.876528 ]]
Iteration 300 of 1000: loss=0.316 " + "l1=0" + "l2=0.316 f=-0.529 shape=(1, 9000, 1)
logits [[ 0.53138334  0.64519465  0.567799   -3.8604417 ]]
Iteration 400 of 1000: loss=0.293 " + "l1=0" + "l2=0.293 f=-0.54 shape=(1, 9000, 1)
logits [[ 0.4582213  0.6535405  0.565322  -3.8375387]]
Iteration 500 of 1000: loss=0.243 " + "l1=0" + "l2=0.243 f=-0.518 shape=(1, 9000, 1)
logits [[ 0.5885623   0.59173274  0.58855563 -3.839802  ]]
Iteration 600 of 1000: loss=0.236 " + "l1=0" + "l2=0.236 f=-0.519 shape=(1, 9000, 1)
logits [[ 0.5587674   0.62173337  0.56203324 -3.817604  ]]
Iteration 700 of 1000: loss=0.224 " + "l1=0" + "l2=0.224 f=-0.516 shape=(1, 9000, 1)
logits [[ 0.56716484  0.6162379   0.56300414 -3.8105981 ]]
Iteration 800 of 1000: loss=0.215 " + "l1=0.00841" + "l2=0.206 f=-0.512 shape=(1, 9000, 1)
logits [[ 0.58952737  0.5811131   0.58395517 -3.8037968 ]]
Iteration 900 of 1000: loss=0.211 " + "l1=0" + "l2=0.211 f=-0.521 shape=(1, 9000, 1)
logits [[ 0.5096195   0.62126136  0.55941445 -3.7739217 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.69 " + "l1=2.69" + "l2=0 f=-0.266 shape=(1, 9000, 1)
logits [[ 3.353296  -1.5299895  1.7204057 -4.6074424]]
Iteration 100 of 1000: loss=0.411 " + "l1=0" + "l2=0.411 f=-0.522 shape=(1, 9000, 1)
logits [[ 0.6058914   0.60920274  0.60513365 -3.906526  ]]
Iteration 200 of 1000: loss=0.321 " + "l1=0" + "l2=0.321 f=-0.524 shape=(1, 9000, 1)
logits [[ 0.59885824  0.6197178   0.5996556  -3.9152768 ]]
Iteration 300 of 1000: loss=0.277 " + "l1=0" + "l2=0.277 f=-0.525 shape=(1, 9000, 1)
logits [[ 0.5799077   0.62320226  0.59127986 -3.8939612 ]]
Iteration 400 of 1000: loss=0.244 " + "l1=0" + "l2=0.244 f=-0.522 shape=(1, 9000, 1)
logits [[ 0.58996624  0.60347795  0.597004   -3.8781922 ]]
Iteration 500 of 1000: loss=0.228 " + "l1=0" + "l2=0.228 f=-0.521 shape=(1, 9000, 1)
logits [[ 0.5702283   0.60549104  0.58869916 -3.8491464 ]]
Iteration 600 of 1000: loss=0.214 " + "l1=0" + "l2=0.214 f=-0.518 shape=(1, 9000, 1)
logits [[ 0.58271706  0.606642    0.5827367  -3.8441184 ]]
Iteration 700 of 1000: loss=0.202 " + "l1=0" + "l2=0.202 f=-0.515 shape=(1, 9000, 1)
logits [[ 0.5874296   0.6030906   0.58002734 -3.8296587 ]]
Iteration 800 of 1000: loss=0.203 " + "l1=0" + "l2=0.203 f=-0.521 shape=(1, 9000, 1)
logits [[ 0.5240452  0.6243469  0.5687438 -3.80146  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.59 " + "l1=1.59" + "l2=0 f=-0.266 shape=(1, 9000, 1)
logits [[ 3.353296  -1.5299895  1.7204057 -4.6074424]]
Iteration 100 of 1000: loss=0.404 " + "l1=0" + "l2=0.404 f=-0.524 shape=(1, 9000, 1)
logits [[ 0.6129423  0.6145759  0.6078906 -3.9326901]]
Iteration 200 of 1000: loss=0.301 " + "l1=0.00434" + "l2=0.297 f=-0.527 shape=(1, 9000, 1)
logits [[ 0.6213213  0.6079685  0.6192268 -3.9552553]]
Iteration 300 of 1000: loss=0.254 " + "l1=0.00144" + "l2=0.252 f=-0.527 shape=(1, 9000, 1)
logits [[ 0.60807097  0.60716796  0.6115979  -3.933142  ]]
Iteration 400 of 1000: loss=0.227 " + "l1=0" + "l2=0.227 f=-0.523 shape=(1, 9000, 1)
logits [[ 0.6065564   0.6089561   0.60030127 -3.9082441 ]]
Iteration 500 of 1000: loss=0.211 " + "l1=0" + "l2=0.211 f=-0.521 shape=(1, 9000, 1)
logits [[ 0.5968774  0.6057565  0.5974594 -3.8852265]]
Iteration 600 of 1000: loss=0.2 " + "l1=0" + "l2=0.2 f=-0.52 shape=(1, 9000, 1)
logits [[ 0.58745956  0.6064817   0.59126836 -3.8647273 ]]
Iteration 700 of 1000: loss=0.192 " + "l1=0" + "l2=0.192 f=-0.517 shape=(1, 9000, 1)
logits [[ 0.592531   0.6175853  0.5779558 -3.8552878]]
Iteration 800 of 1000: loss=0.182 " + "l1=0" + "l2=0.182 f=-0.516 shape=(1, 9000, 1)
logits [[ 0.57635146  0.5985692   0.59043056 -3.8304052 ]]
Iteration 900 of 1000: loss=0.178 " + "l1=0" + "l2=0.178 f=-0.515 shape=(1, 9000, 1)
logits [[ 0.5653696  0.6035007  0.5836148 -3.812205 ]]
--- 268.5759024620056 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0163 " + "l1=0.0163" + "l2=0 f=-0.266 shape=(1, 9000, 1)
logits [[ 3.353296  -1.5299895  1.7204057 -4.6074424]]
Iteration 100 of 1000: loss=0.0162 " + "l1=0.016" + "l2=0.000191 f=-0.267 shape=(1, 9000, 1)
logits [[ 3.3226278 -1.5352982  1.7220958 -4.577562 ]]
Iteration 200 of 1000: loss=0.0162 " + "l1=0.016" + "l2=0.000154 f=-0.267 shape=(1, 9000, 1)
logits [[ 3.322035  -1.5356541  1.7222391 -4.576293 ]]
Iteration 300 of 1000: loss=0.0162 " + "l1=0.016" + "l2=0.00019 f=-0.267 shape=(1, 9000, 1)
logits [[ 3.3186378 -1.5364019  1.7223009 -4.573143 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.163 " + "l1=0.163" + "l2=0 f=-0.266 shape=(1, 9000, 1)
logits [[ 3.353296  -1.5299895  1.7204057 -4.6074424]]
Iteration 100 of 1000: loss=0.148 " + "l1=0.138" + "l2=0.00981 f=-0.279 shape=(1, 9000, 1)
logits [[ 3.123248  -1.5756145  1.7432901 -4.408331 ]]
Iteration 200 of 1000: loss=0.143 " + "l1=0.129" + "l2=0.0131 f=-0.284 shape=(1, 9000, 1)
logits [[ 3.0425003 -1.5842453  1.7475948 -4.3424134]]
Iteration 300 of 1000: loss=0.137 " + "l1=0.121" + "l2=0.0165 f=-0.289 shape=(1, 9000, 1)
logits [[ 2.9589431 -1.5882344  1.7491354 -4.2770867]]
Iteration 400 of 1000: loss=0.133 " + "l1=0.113" + "l2=0.0192 f=-0.295 shape=(1, 9000, 1)
logits [[ 2.8890676 -1.6015402  1.7552662 -4.222661 ]]
Iteration 500 of 1000: loss=0.128 " + "l1=0.105" + "l2=0.0223 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.8173695 -1.6196944  1.7648573 -4.172153 ]]
Iteration 600 of 1000: loss=0.122 " + "l1=0.0942" + "l2=0.0275 f=-0.312 shape=(1, 9000, 1)
logits [[ 2.7238214 -1.6377752  1.7815902 -4.1156373]]
Iteration 700 of 1000: loss=0.116 " + "l1=0.0855" + "l2=0.0306 f=-0.318 shape=(1, 9000, 1)
logits [[ 2.649231  -1.654776   1.7939634 -4.0617948]]
Iteration 800 of 1000: loss=0.111 " + "l1=0.0782" + "l2=0.0332 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.5794494 -1.6652045  1.7973734 -4.0054436]]
Iteration 900 of 1000: loss=0.107 " + "l1=0.0707" + "l2=0.0362 f=-0.329 shape=(1, 9000, 1)
logits [[ 2.510711  -1.6792351  1.8037394 -3.9521375]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.63 " + "l1=1.63" + "l2=0 f=-0.266 shape=(1, 9000, 1)
logits [[ 3.353296  -1.5299895  1.7204057 -4.6074424]]
Iteration 100 of 1000: loss=0.306 " + "l1=0" + "l2=0.306 f=-0.373 shape=(1, 9000, 1)
logits [[ 1.9192832 -1.7196529  1.9218295 -3.6141636]]
Iteration 200 of 1000: loss=0.22 " + "l1=0.00178" + "l2=0.218 f=-0.367 shape=(1, 9000, 1)
logits [[ 1.9163761 -1.7123082  1.9146    -3.587788 ]]
Iteration 300 of 1000: loss=0.183 " + "l1=0" + "l2=0.183 f=-0.37 shape=(1, 9000, 1)
logits [[ 1.886798  -1.7204684  1.9109477 -3.5591557]]
Iteration 400 of 1000: loss=0.155 " + "l1=0" + "l2=0.155 f=-0.372 shape=(1, 9000, 1)
logits [[ 1.8777287 -1.7255576  1.9058291 -3.5449812]]
Iteration 500 of 1000: loss=0.135 " + "l1=0" + "l2=0.135 f=-0.371 shape=(1, 9000, 1)
logits [[ 1.8730894 -1.7333938  1.9008715 -3.5244608]]
Iteration 600 of 1000: loss=0.126 " + "l1=0.0127" + "l2=0.114 f=-0.371 shape=(1, 9000, 1)
logits [[ 1.893146  -1.7248781  1.8804199 -3.532075 ]]
Iteration 700 of 1000: loss=0.107 " + "l1=0" + "l2=0.107 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.8544235 -1.723428   1.8712876 -3.5030088]]
Iteration 800 of 1000: loss=0.0982 " + "l1=0" + "l2=0.0982 f=-0.377 shape=(1, 9000, 1)
logits [[ 1.8377901 -1.7209156  1.8616105 -3.484597 ]]
Iteration 900 of 1000: loss=0.0889 " + "l1=0" + "l2=0.0889 f=-0.374 shape=(1, 9000, 1)
logits [[ 1.8491807 -1.7257197  1.8645543 -3.4822056]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.898 " + "l1=0.898" + "l2=0 f=-0.266 shape=(1, 9000, 1)
logits [[ 3.353296  -1.5299895  1.7204057 -4.6074424]]
Iteration 100 of 1000: loss=0.316 " + "l1=0.016" + "l2=0.3 f=-0.372 shape=(1, 9000, 1)
logits [[ 1.933901  -1.7047615  1.9048588 -3.6221175]]
Iteration 200 of 1000: loss=0.208 " + "l1=0.000216" + "l2=0.208 f=-0.369 shape=(1, 9000, 1)
logits [[ 1.9004833 -1.7180997  1.9000913 -3.5583894]]
Iteration 300 of 1000: loss=0.167 " + "l1=0.00507" + "l2=0.162 f=-0.368 shape=(1, 9000, 1)
logits [[ 1.9059156 -1.7235452  1.8966908 -3.551668 ]]
Iteration 400 of 1000: loss=0.14 " + "l1=0.0053" + "l2=0.134 f=-0.367 shape=(1, 9000, 1)
logits [[ 1.9030203 -1.7333798  1.8933786 -3.5319366]]
Iteration 500 of 1000: loss=0.12 " + "l1=0.00327" + "l2=0.117 f=-0.367 shape=(1, 9000, 1)
logits [[ 1.8915995 -1.7420975  1.8856461 -3.504158 ]]
Iteration 600 of 1000: loss=0.104 " + "l1=0" + "l2=0.104 f=-0.368 shape=(1, 9000, 1)
logits [[ 1.8786665 -1.7451363  1.8788909 -3.48435  ]]
Iteration 700 of 1000: loss=0.0949 " + "l1=0" + "l2=0.0949 f=-0.37 shape=(1, 9000, 1)
logits [[ 1.8609527 -1.739827   1.8676574 -3.470355 ]]
Iteration 800 of 1000: loss=0.0874 " + "l1=0.00235" + "l2=0.085 f=-0.367 shape=(1, 9000, 1)
logits [[ 1.8813702 -1.7407416  1.8770972 -3.4873955]]
Iteration 900 of 1000: loss=0.0793 " + "l1=0.000329" + "l2=0.079 f=-0.366 shape=(1, 9000, 1)
logits [[ 1.876049  -1.735358   1.875451  -3.4788623]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.531 " + "l1=0.531" + "l2=0 f=-0.266 shape=(1, 9000, 1)
logits [[ 3.353296  -1.5299895  1.7204057 -4.6074424]]
Iteration 100 of 1000: loss=0.325 " + "l1=0.186" + "l2=0.139 f=-0.332 shape=(1, 9000, 1)
logits [[ 2.4330451 -1.672659   1.8599653 -3.9482305]]
Iteration 200 of 1000: loss=0.24 " + "l1=0.0653" + "l2=0.175 f=-0.352 shape=(1, 9000, 1)
logits [[ 2.0882287 -1.6902552  1.8874452 -3.6916058]]
Iteration 300 of 1000: loss=0.173 " + "l1=0.00137" + "l2=0.171 f=-0.368 shape=(1, 9000, 1)
logits [[ 1.9121329 -1.7340473  1.9079273 -3.557291 ]]
Iteration 400 of 1000: loss=0.136 " + "l1=0.000798" + "l2=0.135 f=-0.368 shape=(1, 9000, 1)
logits [[ 1.8988067 -1.7414905  1.8963501 -3.5244608]]
Iteration 500 of 1000: loss=0.115 " + "l1=0.00186" + "l2=0.113 f=-0.367 shape=(1, 9000, 1)
logits [[ 1.8911004 -1.7477682  1.8853908 -3.496796 ]]
Iteration 600 of 1000: loss=0.099 " + "l1=0" + "l2=0.099 f=-0.368 shape=(1, 9000, 1)
logits [[ 1.873243  -1.7478454  1.8742428 -3.4709036]]
Iteration 700 of 1000: loss=0.0889 " + "l1=0" + "l2=0.0889 f=-0.369 shape=(1, 9000, 1)
logits [[ 1.8606299 -1.7441252  1.8679384 -3.4592042]]
Iteration 800 of 1000: loss=0.08 " + "l1=0" + "l2=0.08 f=-0.365 shape=(1, 9000, 1)
logits [[ 1.8715231 -1.7401829  1.8716831 -3.463771 ]]
Iteration 900 of 1000: loss=0.0749 " + "l1=0.00157" + "l2=0.0734 f=-0.363 shape=(1, 9000, 1)
logits [[ 1.876908  -1.7334855  1.8720803 -3.4663842]]
--- 253.94869923591614 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0796 " + "l1=0.0796" + "l2=0 f=-0.266 shape=(1, 9000, 1)
logits [[ 3.353296  -1.5299895  1.7204057 -4.6074424]]
Iteration 100 of 1000: loss=0.0786 " + "l1=0.078" + "l2=0.000639 f=-0.266 shape=(1, 9000, 1)
logits [[ 3.2779148 -1.5122358  1.6913335 -4.5229034]]
Iteration 200 of 1000: loss=0.0784 " + "l1=0.0777" + "l2=0.000684 f=-0.266 shape=(1, 9000, 1)
logits [[ 3.2649071 -1.5086442  1.6858478 -4.5076137]]
Iteration 300 of 1000: loss=0.0782 " + "l1=0.0774" + "l2=0.00082 f=-0.267 shape=(1, 9000, 1)
logits [[ 3.248724  -1.5052689  1.679462  -4.4891543]]
Iteration 400 of 1000: loss=0.078 " + "l1=0.077" + "l2=0.000979 f=-0.267 shape=(1, 9000, 1)
logits [[ 3.2327516 -1.5031676  1.6738088 -4.4705048]]
Iteration 500 of 1000: loss=0.0778 " + "l1=0.0767" + "l2=0.0011 f=-0.267 shape=(1, 9000, 1)
logits [[ 3.2179828 -1.5007621  1.6681763 -4.453518 ]]
Iteration 600 of 1000: loss=0.0777 " + "l1=0.0764" + "l2=0.00129 f=-0.267 shape=(1, 9000, 1)
logits [[ 3.2040935 -1.4987257  1.6629591 -4.4373693]]
Iteration 700 of 1000: loss=0.0775 " + "l1=0.0761" + "l2=0.00136 f=-0.268 shape=(1, 9000, 1)
logits [[ 3.1911736 -1.4970456  1.6581402 -4.422299 ]]
Iteration 800 of 1000: loss=0.0775 " + "l1=0.0759" + "l2=0.0016 f=-0.268 shape=(1, 9000, 1)
logits [[ 3.1785488 -1.4957694  1.6537074 -4.4073997]]
Iteration 900 of 1000: loss=0.0773 " + "l1=0.0756" + "l2=0.00175 f=-0.268 shape=(1, 9000, 1)
logits [[ 3.1661596 -1.4944903  1.6494299 -4.3929434]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.796 " + "l1=0.796" + "l2=0 f=-0.266 shape=(1, 9000, 1)
logits [[ 3.353296  -1.5299895  1.7204057 -4.6074424]]
Iteration 100 of 1000: loss=0.7 " + "l1=0.638" + "l2=0.0621 f=-0.275 shape=(1, 9000, 1)
logits [[ 2.537404  -1.1265821  1.3362572 -3.8461077]]
Iteration 200 of 1000: loss=0.661 " + "l1=0.579" + "l2=0.0827 f=-0.286 shape=(1, 9000, 1)
logits [[ 2.1970315 -0.9472956  1.1976002 -3.5900693]]
Iteration 300 of 1000: loss=0.629 " + "l1=0.531" + "l2=0.0983 f=-0.299 shape=(1, 9000, 1)
logits [[ 1.913435  -0.8255592  1.1103626 -3.392276 ]]
Iteration 400 of 1000: loss=0.598 " + "l1=0.486" + "l2=0.113 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.666974  -0.7564132  1.028369  -3.1887906]]
Iteration 500 of 1000: loss=0.562 " + "l1=0.428" + "l2=0.134 f=-0.335 shape=(1, 9000, 1)
logits [[ 1.3410923 -0.6600664  0.9212314 -2.9421864]]
Iteration 600 of 1000: loss=0.528 " + "l1=0.379" + "l2=0.149 f=-0.362 shape=(1, 9000, 1)
logits [[ 1.0126852  -0.48464933  0.79908395 -2.7741513 ]]
Iteration 700 of 1000: loss=0.495 " + "l1=0.332" + "l2=0.163 f=-0.379 shape=(1, 9000, 1)
logits [[ 0.72656554 -0.3607477   0.7089381  -2.591165  ]]
Iteration 800 of 1000: loss=0.472 " + "l1=0.314" + "l2=0.157 f=-0.373 shape=(1, 9000, 1)
logits [[ 0.6637608  -0.33895722  0.66023225 -2.478563  ]]
Iteration 900 of 1000: loss=0.454 " + "l1=0.298" + "l2=0.156 f=-0.364 shape=(1, 9000, 1)
logits [[ 0.62567157 -0.34634     0.61639047 -2.353296  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.96 " + "l1=7.96" + "l2=0 f=-0.266 shape=(1, 9000, 1)
logits [[ 3.353296  -1.5299895  1.7204057 -4.6074424]]
Iteration 100 of 1000: loss=2.79 " + "l1=1.26" + "l2=1.53 f=-0.318 shape=(1, 9000, 1)
logits [[-0.0195317  -0.01220228  0.01036065 -1.2514527 ]]
Iteration 200 of 1000: loss=1.72 " + "l1=0.0105" + "l2=1.71 f=-0.282 shape=(1, 9000, 1)
logits [[-0.4739528  -0.23709486 -0.20226271 -0.21276304]]
Iteration 300 of 1000: loss=1.2 " + "l1=0.0122" + "l2=1.19 f=-0.246 shape=(1, 9000, 1)
logits [[-0.38917848 -0.20937516 -0.18590407 -0.19814622]]
Iteration 400 of 1000: loss=0.947 " + "l1=0" + "l2=0.947 f=-0.215 shape=(1, 9000, 1)
logits [[-0.3344331  -0.18749173 -0.1768415  -0.16032866]]
Iteration 500 of 1000: loss=0.779 " + "l1=0" + "l2=0.779 f=-0.174 shape=(1, 9000, 1)
logits [[-0.22668253 -0.20487763 -0.14419529 -0.11874766]]
Iteration 600 of 1000: loss=0.659 " + "l1=0" + "l2=0.659 f=-0.153 shape=(1, 9000, 1)
logits [[-0.18596841 -0.16941747 -0.14603747 -0.11156289]]
Iteration 700 of 1000: loss=0.564 " + "l1=0" + "l2=0.564 f=-0.152 shape=(1, 9000, 1)
logits [[-0.20781137 -0.16484943 -0.13495865 -0.10049612]]
Iteration 800 of 1000: loss=0.499 " + "l1=0.0152" + "l2=0.484 f=-0.135 shape=(1, 9000, 1)
logits [[-0.10388996 -0.20909521 -0.10922616 -0.11911831]]
Iteration 900 of 1000: loss=0.441 " + "l1=0" + "l2=0.441 f=-0.135 shape=(1, 9000, 1)
logits [[-0.11751209 -0.2260791  -0.09853011 -0.09766874]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.38 " + "l1=4.38" + "l2=0 f=-0.266 shape=(1, 9000, 1)
logits [[ 3.353296  -1.5299895  1.7204057 -4.6074424]]
Iteration 100 of 1000: loss=2.14 " + "l1=1.38" + "l2=0.756 f=-0.376 shape=(1, 9000, 1)
logits [[ 0.3047641   0.07085399  0.31444833 -2.1931887 ]]
Iteration 200 of 1000: loss=1.65 " + "l1=0.856" + "l2=0.794 f=-0.325 shape=(1, 9000, 1)
logits [[ 0.0414509   0.06137503  0.07741664 -1.4782621 ]]
Iteration 300 of 1000: loss=1.21 " + "l1=0.349" + "l2=0.859 f=-0.275 shape=(1, 9000, 1)
logits [[-0.18136272 -0.12561783 -0.07905287 -0.71273875]]
Iteration 400 of 1000: loss=0.787 " + "l1=0" + "l2=0.787 f=-0.225 shape=(1, 9000, 1)
logits [[-0.3472574  -0.19540285 -0.18038101 -0.17647752]]
Iteration 500 of 1000: loss=0.604 " + "l1=0" + "l2=0.604 f=-0.202 shape=(1, 9000, 1)
logits [[-0.27103257 -0.19448616 -0.1712352  -0.17013443]]
Iteration 600 of 1000: loss=0.511 " + "l1=0" + "l2=0.511 f=-0.185 shape=(1, 9000, 1)
logits [[-0.23307003 -0.17960612 -0.16769303 -0.1598813 ]]
Iteration 700 of 1000: loss=0.45 " + "l1=0" + "l2=0.45 f=-0.164 shape=(1, 9000, 1)
logits [[-0.16496179 -0.18822907 -0.15581542 -0.1488491 ]]
Iteration 800 of 1000: loss=0.409 " + "l1=0" + "l2=0.409 f=-0.158 shape=(1, 9000, 1)
logits [[-0.14918286 -0.20062236 -0.14539696 -0.13792938]]
Iteration 900 of 1000: loss=0.376 " + "l1=0" + "l2=0.376 f=-0.16 shape=(1, 9000, 1)
logits [[-0.17642455 -0.20837915 -0.1283104  -0.12743777]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.59 " + "l1=2.59" + "l2=0 f=-0.266 shape=(1, 9000, 1)
logits [[ 3.353296  -1.5299895  1.7204057 -4.6074424]]
Iteration 100 of 1000: loss=1.57 " + "l1=1.09" + "l2=0.474 f=-0.401 shape=(1, 9000, 1)
logits [[ 0.6179599  -0.09126147  0.6098104  -2.7410307 ]]
Iteration 200 of 1000: loss=1.31 " + "l1=0.852" + "l2=0.454 f=-0.37 shape=(1, 9000, 1)
logits [[ 0.387368   -0.03281673  0.39346555 -2.2291915 ]]
Iteration 300 of 1000: loss=1.11 " + "l1=0.661" + "l2=0.45 f=-0.342 shape=(1, 9000, 1)
logits [[ 0.2366882  -0.05092364  0.24001127 -1.7945014 ]]
Iteration 400 of 1000: loss=0.929 " + "l1=0.458" + "l2=0.471 f=-0.311 shape=(1, 9000, 1)
logits [[ 0.03979927 -0.00939619  0.06799501 -1.3418443 ]]
Iteration 500 of 1000: loss=0.735 " + "l1=0.234" + "l2=0.501 f=-0.266 shape=(1, 9000, 1)
logits [[-0.13714218 -0.10680691 -0.0508953  -0.770172  ]]
Iteration 600 of 1000: loss=0.561 " + "l1=0.0295" + "l2=0.531 f=-0.222 shape=(1, 9000, 1)
logits [[-0.26754865 -0.1882279  -0.17012896 -0.2610365 ]]
Iteration 700 of 1000: loss=0.476 " + "l1=0" + "l2=0.476 f=-0.211 shape=(1, 9000, 1)
logits [[-0.256643   -0.20705253 -0.1907723  -0.18846264]]
Iteration 800 of 1000: loss=0.436 " + "l1=0" + "l2=0.436 f=-0.205 shape=(1, 9000, 1)
logits [[-0.23275405 -0.19866036 -0.1953864  -0.19292998]]
Iteration 900 of 1000: loss=0.405 " + "l1=0.00467" + "l2=0.4 f=-0.193 shape=(1, 9000, 1)
logits [[-0.19567847 -0.22381179 -0.16947712 -0.18383768]]
--- 295.1281340122223 seconds ---
Adv result:3
Loading record A01467
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0613 " + "l1=0.0613" + "l2=0 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.4010646 -2.730762   2.858227  -5.3149123]]
Iteration 100 of 1000: loss=0.0611 " + "l1=0.0609" + "l2=0.000204 f=-0.445 shape=(1, 9000, 1)
logits [[ 3.3755565 -2.7148302  2.8455918 -5.28831  ]]
Iteration 200 of 1000: loss=0.061 " + "l1=0.0609" + "l2=0.000171 f=-0.445 shape=(1, 9000, 1)
logits [[ 3.374887  -2.7128663  2.8438904 -5.287326 ]]
Iteration 300 of 1000: loss=0.061 " + "l1=0.0608" + "l2=0.000198 f=-0.445 shape=(1, 9000, 1)
logits [[ 3.3717887 -2.7099137  2.8414454 -5.2838597]]
Iteration 400 of 1000: loss=0.061 " + "l1=0.0608" + "l2=0.000228 f=-0.445 shape=(1, 9000, 1)
logits [[ 3.3682764 -2.7069185  2.8389494 -5.279949 ]]
Iteration 500 of 1000: loss=0.061 " + "l1=0.0607" + "l2=0.000303 f=-0.445 shape=(1, 9000, 1)
logits [[ 3.3647103 -2.7039008  2.8364153 -5.276024 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.613 " + "l1=0.613" + "l2=0 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.4010646 -2.730762   2.858227  -5.3149123]]
Iteration 100 of 1000: loss=0.593 " + "l1=0.58" + "l2=0.0127 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.2048872 -2.5997174  2.7554772 -5.1188116]]
Iteration 200 of 1000: loss=0.586 " + "l1=0.569" + "l2=0.0166 f=-0.437 shape=(1, 9000, 1)
logits [[ 3.1427002 -2.5507057  2.7165904 -5.056394 ]]
Iteration 300 of 1000: loss=0.58 " + "l1=0.56" + "l2=0.0193 f=-0.434 shape=(1, 9000, 1)
logits [[ 3.0911803 -2.5126843  2.6849713 -5.0009913]]
Iteration 400 of 1000: loss=0.574 " + "l1=0.553" + "l2=0.0212 f=-0.431 shape=(1, 9000, 1)
logits [[ 3.049012  -2.4776206  2.6637259 -4.958517 ]]
Iteration 500 of 1000: loss=0.568 " + "l1=0.545" + "l2=0.0229 f=-0.427 shape=(1, 9000, 1)
logits [[ 3.0050602 -2.4495032  2.6452851 -4.9088078]]
Iteration 600 of 1000: loss=0.563 " + "l1=0.538" + "l2=0.0249 f=-0.423 shape=(1, 9000, 1)
logits [[ 2.9571667 -2.4209788  2.6234312 -4.851026 ]]
Iteration 700 of 1000: loss=0.556 " + "l1=0.53" + "l2=0.0269 f=-0.416 shape=(1, 9000, 1)
logits [[ 2.9087358 -2.3867629  2.5981967 -4.782945 ]]
Iteration 800 of 1000: loss=0.548 " + "l1=0.517" + "l2=0.0309 f=-0.404 shape=(1, 9000, 1)
logits [[ 2.8389952 -2.335481   2.5643384 -4.684873 ]]
Iteration 900 of 1000: loss=0.54 " + "l1=0.506" + "l2=0.0344 f=-0.395 shape=(1, 9000, 1)
logits [[ 2.7680273 -2.2888832  2.528953  -4.5879607]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.13 " + "l1=6.13" + "l2=0 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.4010646 -2.730762   2.858227  -5.3149123]]
Iteration 100 of 1000: loss=4.24 " + "l1=3.37" + "l2=0.876 f=-0.403 shape=(1, 9000, 1)
logits [[ 1.8564923 -1.5086488  1.8592769 -3.8173707]]
Iteration 200 of 1000: loss=3.44 " + "l1=2.52" + "l2=0.924 f=-0.391 shape=(1, 9000, 1)
logits [[ 1.4226484 -1.0737653  1.4438136 -3.3555565]]
Iteration 300 of 1000: loss=3.01 " + "l1=2.07" + "l2=0.937 f=-0.357 shape=(1, 9000, 1)
logits [[ 1.0872896  -0.85472125  1.2188847  -2.8783143 ]]
Iteration 400 of 1000: loss=2.67 " + "l1=1.66" + "l2=1.02 f=-0.322 shape=(1, 9000, 1)
logits [[ 0.72976065 -0.65025985  1.0074266  -2.373474  ]]
Iteration 500 of 1000: loss=2.48 " + "l1=1.42" + "l2=1.06 f=-0.308 shape=(1, 9000, 1)
logits [[ 0.46155378 -0.5290029   0.88934106 -2.0532792 ]]
Iteration 600 of 1000: loss=2.3 " + "l1=1.14" + "l2=1.16 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.04884798 -0.36511657  0.77720743 -1.7661868 ]]
Iteration 700 of 1000: loss=2.09 " + "l1=0.869" + "l2=1.22 f=-0.332 shape=(1, 9000, 1)
logits [[-0.418936   -0.19053936  0.67808074 -1.3958114 ]]
Iteration 800 of 1000: loss=1.93 " + "l1=0.641" + "l2=1.28 f=-0.324 shape=(1, 9000, 1)
logits [[-0.8223845  -0.02904149  0.61185133 -1.0569763 ]]
Iteration 900 of 1000: loss=1.73 " + "l1=0.392" + "l2=1.34 f=-0.347 shape=(1, 9000, 1)
logits [[-1.266412    0.13402514  0.52613735 -0.7806836 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=61.3 " + "l1=61.3" + "l2=0 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.4010646 -2.730762   2.858227  -5.3149123]]
Iteration 100 of 1000: loss=10.5 " + "l1=0" + "l2=10.5 f=-0.429 shape=(1, 9000, 1)
logits [[-0.9054191   0.384386    0.38420746 -1.578139  ]]
Iteration 200 of 1000: loss=7.55 " + "l1=0.0312" + "l2=7.52 f=-0.443 shape=(1, 9000, 1)
logits [[-1.0312792   0.37051192  0.3736312  -1.4853792 ]]
Iteration 300 of 1000: loss=6.42 " + "l1=0" + "l2=6.42 f=-0.446 shape=(1, 9000, 1)
logits [[-1.1511073   0.39254573  0.38415048 -1.409442  ]]
Iteration 400 of 1000: loss=5.57 " + "l1=0" + "l2=5.57 f=-0.469 shape=(1, 9000, 1)
logits [[-1.4125847   0.45699605  0.42571816 -1.3459693 ]]
Iteration 500 of 1000: loss=4.75 " + "l1=0" + "l2=4.75 f=-0.486 shape=(1, 9000, 1)
logits [[-1.6090754  0.5098735  0.4867814 -1.3329653]]
Iteration 600 of 1000: loss=4.28 " + "l1=0.0747" + "l2=4.21 f=-0.487 shape=(1, 9000, 1)
logits [[-1.6358453   0.49557006  0.5030382  -1.3114535 ]]
Iteration 700 of 1000: loss=4.02 " + "l1=0" + "l2=4.02 f=-0.49 shape=(1, 9000, 1)
logits [[-1.7407118   0.527369    0.48800832 -1.2330127 ]]
Iteration 800 of 1000: loss=3.72 " + "l1=0.0915" + "l2=3.63 f=-0.482 shape=(1, 9000, 1)
logits [[-1.7261162   0.48790935  0.49705485 -1.1848912 ]]
Iteration 900 of 1000: loss=3.41 " + "l1=0" + "l2=3.41 f=-0.473 shape=(1, 9000, 1)
logits [[-1.7686638   0.49702     0.48783416 -1.1075908 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=33.7 " + "l1=33.7" + "l2=0 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.4010646 -2.730762   2.858227  -5.3149123]]
Iteration 100 of 1000: loss=9.85 " + "l1=2.47" + "l2=7.38 f=-0.376 shape=(1, 9000, 1)
logits [[-0.3708257   0.12281347  0.5719292  -1.8269092 ]]
Iteration 200 of 1000: loss=6.12 " + "l1=0.0384" + "l2=6.08 f=-0.481 shape=(1, 9000, 1)
logits [[-1.3312527   0.44798678  0.4549731  -1.4940208 ]]
Iteration 300 of 1000: loss=4.6 " + "l1=0" + "l2=4.6 f=-0.491 shape=(1, 9000, 1)
logits [[-1.6193529   0.5134721   0.49664915 -1.3538132 ]]
Iteration 400 of 1000: loss=3.91 " + "l1=0" + "l2=3.91 f=-0.491 shape=(1, 9000, 1)
logits [[-1.6992122   0.52627146  0.5063138  -1.2973413 ]]
Iteration 500 of 1000: loss=3.46 " + "l1=0" + "l2=3.46 f=-0.477 shape=(1, 9000, 1)
logits [[-1.763234   0.5176695  0.5100967 -1.173581 ]]
Iteration 600 of 1000: loss=3.15 " + "l1=0.0813" + "l2=3.07 f=-0.478 shape=(1, 9000, 1)
logits [[-1.8852912   0.48484433  0.49963036 -1.0093038 ]]
Iteration 700 of 1000: loss=2.84 " + "l1=0" + "l2=2.84 f=-0.466 shape=(1, 9000, 1)
logits [[-1.9221088   0.4868922   0.48275152 -0.9121284 ]]
Iteration 800 of 1000: loss=2.67 " + "l1=0.0218" + "l2=2.64 f=-0.454 shape=(1, 9000, 1)
logits [[-1.9171945   0.4707642   0.47473073 -0.8443997 ]]
Iteration 900 of 1000: loss=2.52 " + "l1=0" + "l2=2.52 f=-0.449 shape=(1, 9000, 1)
logits [[-1.922107   0.4674825  0.4645124 -0.8052748]]
--- 266.1188380718231 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00543 " + "l1=0.00543" + "l2=0 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.4010646 -2.730762   2.858227  -5.3149123]]
Iteration 100 of 1000: loss=0.00534 " + "l1=0.00522" + "l2=0.000127 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.3835592 -2.7349596  2.862029  -5.2981606]]
Iteration 200 of 1000: loss=0.00531 " + "l1=0.00522" + "l2=9.23e-05 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.384112  -2.7353044  2.8621323 -5.2985325]]
Iteration 300 of 1000: loss=0.00533 " + "l1=0.0052" + "l2=0.000132 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.3827243 -2.7360704  2.8626673 -5.2969713]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0543 " + "l1=0.0543" + "l2=0 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.4010646 -2.730762   2.858227  -5.3149123]]
Iteration 100 of 1000: loss=0.0455 " + "l1=0.0403" + "l2=0.00516 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.2854102 -2.7586737  2.881933  -5.2038164]]
Iteration 200 of 1000: loss=0.0426 " + "l1=0.0356" + "l2=0.00698 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.2496688 -2.7744946  2.8932784 -5.165367 ]]
Iteration 300 of 1000: loss=0.0398 " + "l1=0.0312" + "l2=0.0086 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.2156975 -2.7909167  2.9039288 -5.1260896]]
Iteration 400 of 1000: loss=0.0369 " + "l1=0.0267" + "l2=0.0102 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.1788476 -2.8075743  2.9120142 -5.0773644]]
Iteration 500 of 1000: loss=0.0345 " + "l1=0.023" + "l2=0.0115 f=-0.448 shape=(1, 9000, 1)
logits [[ 3.147843  -2.821      2.9174247 -5.0364366]]
Iteration 600 of 1000: loss=0.0319 " + "l1=0.0185" + "l2=0.0134 f=-0.448 shape=(1, 9000, 1)
logits [[ 3.1095293 -2.8346975  2.9248176 -4.9910946]]
Iteration 700 of 1000: loss=0.0294 " + "l1=0.0146" + "l2=0.0148 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.0758324 -2.8468816  2.929745  -4.94645  ]]
Iteration 800 of 1000: loss=0.0271 " + "l1=0.0108" + "l2=0.0163 f=-0.446 shape=(1, 9000, 1)
logits [[ 3.0423954 -2.8579047  2.93442   -4.904823 ]]
Iteration 900 of 1000: loss=0.0243 " + "l1=0.00647" + "l2=0.0178 f=-0.446 shape=(1, 9000, 1)
logits [[ 3.0056877 -2.8685791  2.9409642 -4.8620367]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.543 " + "l1=0.543" + "l2=0 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.4010646 -2.730762   2.858227  -5.3149123]]
Iteration 100 of 1000: loss=0.0734 " + "l1=0" + "l2=0.0734 f=-0.452 shape=(1, 9000, 1)
logits [[ 2.9357722 -2.843327   2.9456298 -4.8466105]]
Iteration 200 of 1000: loss=0.0531 " + "l1=0" + "l2=0.0531 f=-0.453 shape=(1, 9000, 1)
logits [[ 2.9419158 -2.8615358  2.953273  -4.844252 ]]
Iteration 300 of 1000: loss=0.0408 " + "l1=0" + "l2=0.0408 f=-0.452 shape=(1, 9000, 1)
logits [[ 2.9559145 -2.8708787  2.9575725 -4.8512115]]
Iteration 400 of 1000: loss=0.0354 " + "l1=0" + "l2=0.0354 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.9539037 -2.8790717  2.9607153 -4.840955 ]]
Iteration 500 of 1000: loss=0.0309 " + "l1=0" + "l2=0.0309 f=-0.45 shape=(1, 9000, 1)
logits [[ 2.9538388 -2.8826313  2.9599023 -4.830254 ]]
Iteration 600 of 1000: loss=0.0283 " + "l1=0" + "l2=0.0283 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.9478688 -2.8874993  2.9615915 -4.8145366]]
Iteration 700 of 1000: loss=0.0249 " + "l1=0" + "l2=0.0249 f=-0.445 shape=(1, 9000, 1)
logits [[ 2.949869  -2.8860357  2.9584816 -4.8039293]]
Iteration 800 of 1000: loss=0.0252 " + "l1=0.00438" + "l2=0.0208 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.9580288 -2.882167   2.953644  -4.799757 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.299 " + "l1=0.299" + "l2=0 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.4010646 -2.730762   2.858227  -5.3149123]]
Iteration 100 of 1000: loss=0.0691 " + "l1=0" + "l2=0.0691 f=-0.453 shape=(1, 9000, 1)
logits [[ 2.9414608 -2.8458261  2.9446597 -4.850588 ]]
Iteration 200 of 1000: loss=0.0492 " + "l1=0.00325" + "l2=0.046 f=-0.452 shape=(1, 9000, 1)
logits [[ 2.9583282 -2.8640769  2.9524276 -4.855506 ]]
Iteration 300 of 1000: loss=0.0388 " + "l1=0" + "l2=0.0388 f=-0.452 shape=(1, 9000, 1)
logits [[ 2.951665  -2.878961   2.9580982 -4.8386493]]
Iteration 400 of 1000: loss=0.0324 " + "l1=0" + "l2=0.0324 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.9551947 -2.8869421  2.9596524 -4.8312793]]
Iteration 500 of 1000: loss=0.0284 " + "l1=0" + "l2=0.0284 f=-0.449 shape=(1, 9000, 1)
logits [[ 2.950859  -2.890683   2.9597144 -4.816655 ]]
Iteration 600 of 1000: loss=0.0258 " + "l1=0.00192" + "l2=0.0239 f=-0.447 shape=(1, 9000, 1)
logits [[ 2.9590385 -2.8892868  2.955545  -4.8124256]]
Iteration 700 of 1000: loss=0.0224 " + "l1=0.00137" + "l2=0.021 f=-0.444 shape=(1, 9000, 1)
logits [[ 2.9562013 -2.8890462  2.9537156 -4.797545 ]]
Iteration 800 of 1000: loss=0.0202 " + "l1=0" + "l2=0.0202 f=-0.442 shape=(1, 9000, 1)
logits [[ 2.9441073 -2.8898306  2.9542248 -4.776844 ]]
Iteration 900 of 1000: loss=0.0183 " + "l1=0" + "l2=0.0183 f=-0.44 shape=(1, 9000, 1)
logits [[ 2.9459403 -2.8864307  2.9520552 -4.773069 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.176 " + "l1=0.176" + "l2=0 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.4010646 -2.730762   2.858227  -5.3149123]]
Iteration 100 of 1000: loss=0.0778 " + "l1=0.0176" + "l2=0.0602 f=-0.452 shape=(1, 9000, 1)
logits [[ 2.9915595 -2.8334823  2.93743   -4.903874 ]]
Iteration 200 of 1000: loss=0.0475 " + "l1=0" + "l2=0.0475 f=-0.452 shape=(1, 9000, 1)
logits [[ 2.951512  -2.8670964  2.95287   -4.847013 ]]
Iteration 300 of 1000: loss=0.0373 " + "l1=0.000741" + "l2=0.0366 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.9575293 -2.878875   2.9552479 -4.8392262]]
Iteration 400 of 1000: loss=0.0315 " + "l1=0" + "l2=0.0315 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.9519114 -2.887761   2.956298  -4.8229375]]
Iteration 500 of 1000: loss=0.0268 " + "l1=0.000538" + "l2=0.0263 f=-0.449 shape=(1, 9000, 1)
logits [[ 2.9556253 -2.8887503  2.953971  -4.81603  ]]
Iteration 600 of 1000: loss=0.0233 " + "l1=0.000471" + "l2=0.0228 f=-0.447 shape=(1, 9000, 1)
logits [[ 2.9537032 -2.8902128  2.9522533 -4.8026643]]
Iteration 700 of 1000: loss=0.0204 " + "l1=0" + "l2=0.0204 f=-0.444 shape=(1, 9000, 1)
logits [[ 2.9491658 -2.8895414  2.9505467 -4.7861905]]
Iteration 800 of 1000: loss=0.0189 " + "l1=0" + "l2=0.0189 f=-0.442 shape=(1, 9000, 1)
logits [[ 2.9474816 -2.8875017  2.9493446 -4.7754087]]
Iteration 900 of 1000: loss=0.0179 " + "l1=0.00109" + "l2=0.0168 f=-0.44 shape=(1, 9000, 1)
logits [[ 2.950833  -2.8839586  2.947478  -4.773322 ]]
--- 243.73495984077454 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0872 " + "l1=0.0872" + "l2=0 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.4010646 -2.730762   2.858227  -5.3149123]]
Iteration 100 of 1000: loss=0.0866 " + "l1=0.0862" + "l2=0.000413 f=-0.444 shape=(1, 9000, 1)
logits [[ 3.361039  -2.7247524  2.8452158 -5.257913 ]]
Iteration 200 of 1000: loss=0.0865 " + "l1=0.0861" + "l2=0.000406 f=-0.444 shape=(1, 9000, 1)
logits [[ 3.3562243 -2.7248945  2.8435006 -5.249118 ]]
Iteration 300 of 1000: loss=0.0863 " + "l1=0.0859" + "l2=0.000469 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.3494825 -2.724655   2.84129   -5.237677 ]]
Iteration 400 of 1000: loss=0.0862 " + "l1=0.0857" + "l2=0.000553 f=-0.442 shape=(1, 9000, 1)
logits [[ 3.3420277 -2.7242587  2.8388076 -5.225505 ]]
Iteration 500 of 1000: loss=0.0861 " + "l1=0.0855" + "l2=0.00067 f=-0.442 shape=(1, 9000, 1)
logits [[ 3.3345263 -2.7237933  2.836174  -5.2133336]]
Iteration 600 of 1000: loss=0.0861 " + "l1=0.0853" + "l2=0.00077 f=-0.441 shape=(1, 9000, 1)
logits [[ 3.3274403 -2.723146   2.8336308 -5.201976 ]]
Iteration 700 of 1000: loss=0.0861 " + "l1=0.0851" + "l2=0.000965 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.3202639 -2.722382   2.8310363 -5.1907735]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.872 " + "l1=0.872" + "l2=0 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.4010646 -2.730762   2.858227  -5.3149123]]
Iteration 100 of 1000: loss=0.818 " + "l1=0.786" + "l2=0.0321 f=-0.424 shape=(1, 9000, 1)
logits [[ 3.04825   -2.6813507  2.749809  -4.8146267]]
Iteration 200 of 1000: loss=0.793 " + "l1=0.748" + "l2=0.045 f=-0.416 shape=(1, 9000, 1)
logits [[ 2.8905902 -2.675171   2.7078235 -4.5855026]]
Iteration 300 of 1000: loss=0.77 " + "l1=0.716" + "l2=0.0538 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.772273  -2.6798334  2.6894348 -4.387928 ]]
Iteration 400 of 1000: loss=0.75 " + "l1=0.69" + "l2=0.0606 f=-0.389 shape=(1, 9000, 1)
logits [[ 2.675063  -2.6754608  2.667032  -4.2236757]]
Iteration 500 of 1000: loss=0.732 " + "l1=0.674" + "l2=0.0579 f=-0.375 shape=(1, 9000, 1)
logits [[ 2.6288753 -2.6507971  2.6286502 -4.1076055]]
Iteration 600 of 1000: loss=0.713 " + "l1=0.656" + "l2=0.0575 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.579435  -2.6106987  2.579916  -3.980209 ]]
Iteration 700 of 1000: loss=0.697 " + "l1=0.637" + "l2=0.0597 f=-0.345 shape=(1, 9000, 1)
logits [[ 2.5222735 -2.5801353  2.5256906 -3.8479347]]
Iteration 800 of 1000: loss=0.68 " + "l1=0.618" + "l2=0.0622 f=-0.332 shape=(1, 9000, 1)
logits [[ 2.460964  -2.5537941  2.4706154 -3.7063305]]
Iteration 900 of 1000: loss=0.659 " + "l1=0.59" + "l2=0.0688 f=-0.313 shape=(1, 9000, 1)
logits [[ 2.3410714 -2.5139956  2.41021   -3.4884675]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.72 " + "l1=8.72" + "l2=0 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.4010646 -2.730762   2.858227  -5.3149123]]
Iteration 100 of 1000: loss=4.75 " + "l1=2.63" + "l2=2.12 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.851068   -2.2081769   1.6301032  -0.99959916]]
Iteration 200 of 1000: loss=2.66 " + "l1=0.0211" + "l2=2.64 f=-0.0666 shape=(1, 9000, 1)
logits [[-0.04008112 -1.9819157   0.8882299   0.86717564]]
Iteration 300 of 1000: loss=1.86 " + "l1=0" + "l2=1.86 f=-0.0706 shape=(1, 9000, 1)
logits [[-0.0696689 -2.0225573  0.8955321  0.9141875]]
Iteration 400 of 1000: loss=1.56 " + "l1=0.0161" + "l2=1.54 f=-0.0785 shape=(1, 9000, 1)
logits [[-0.06571183 -2.0311365   0.89948493  0.8833424 ]]
Iteration 500 of 1000: loss=1.38 " + "l1=0" + "l2=1.38 f=-0.0812 shape=(1, 9000, 1)
logits [[-0.0834685  -2.0295887   0.88461465  0.90356314]]
Iteration 600 of 1000: loss=1.25 " + "l1=0.00585" + "l2=1.24 f=-0.0862 shape=(1, 9000, 1)
logits [[-0.08414502 -2.054508    0.89985216  0.8940059 ]]
Iteration 700 of 1000: loss=1.15 " + "l1=0" + "l2=1.15 f=-0.0882 shape=(1, 9000, 1)
logits [[-0.11910725 -2.0626647   0.89900726  0.9299111 ]]
Iteration 800 of 1000: loss=1.05 " + "l1=0" + "l2=1.05 f=-0.093 shape=(1, 9000, 1)
logits [[-0.15046662 -2.0612547   0.918559    0.9212473 ]]
Iteration 900 of 1000: loss=0.966 " + "l1=0" + "l2=0.966 f=-0.0968 shape=(1, 9000, 1)
logits [[-0.1812118  -2.0370224   0.91323215  0.9179125 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.79 " + "l1=4.79" + "l2=0 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.4010646 -2.730762   2.858227  -5.3149123]]
Iteration 100 of 1000: loss=3.43 " + "l1=2.69" + "l2=0.743 f=-0.277 shape=(1, 9000, 1)
logits [[ 1.9064221 -2.3765936  2.1259575 -2.7621725]]
Iteration 200 of 1000: loss=2.78 " + "l1=1.83" + "l2=0.942 f=-0.214 shape=(1, 9000, 1)
logits [[ 1.2187564 -2.229243   1.7445163 -1.5901933]]
Iteration 300 of 1000: loss=2.01 " + "l1=0.815" + "l2=1.2 f=-0.132 shape=(1, 9000, 1)
logits [[ 0.48240587 -2.0954692   1.2835746  -0.19752401]]
Iteration 400 of 1000: loss=1.45 " + "l1=0.133" + "l2=1.32 f=-0.0679 shape=(1, 9000, 1)
logits [[ 0.10381196 -2.0025134   0.9342765   0.6929237 ]]
Iteration 500 of 1000: loss=1.1 " + "l1=0.00452" + "l2=1.1 f=-0.0596 shape=(1, 9000, 1)
logits [[-0.01548192 -1.9517307   0.8685874   0.86036533]]
Iteration 600 of 1000: loss=0.919 " + "l1=0.0176" + "l2=0.902 f=-0.0623 shape=(1, 9000, 1)
logits [[-0.01711543 -1.9453845   0.8726062   0.8406483 ]]
Iteration 700 of 1000: loss=0.771 " + "l1=0" + "l2=0.771 f=-0.0546 shape=(1, 9000, 1)
logits [[-0.03621245 -1.909929    0.8597033   0.8679472 ]]
Iteration 800 of 1000: loss=0.669 " + "l1=0.00461" + "l2=0.664 f=-0.0494 shape=(1, 9000, 1)
logits [[-0.03366314 -1.8918108   0.868228    0.85984504]]
Iteration 900 of 1000: loss=0.599 " + "l1=0" + "l2=0.599 f=-0.0445 shape=(1, 9000, 1)
logits [[-0.06170633 -1.871524    0.8631884   0.8918857 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.83 " + "l1=2.83" + "l2=0 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.4010646 -2.730762   2.858227  -5.3149123]]
Iteration 100 of 1000: loss=2.31 " + "l1=2.06" + "l2=0.251 f=-0.36 shape=(1, 9000, 1)
logits [[ 2.4704692 -2.5117176  2.4726756 -3.8715537]]
Iteration 200 of 1000: loss=2.11 " + "l1=1.76" + "l2=0.354 f=-0.299 shape=(1, 9000, 1)
logits [[ 2.1426487 -2.406237   2.234166  -3.1668398]]
Iteration 300 of 1000: loss=1.89 " + "l1=1.45" + "l2=0.432 f=-0.223 shape=(1, 9000, 1)
logits [[ 1.8275201 -2.33818    2.0470445 -2.4285476]]
Iteration 400 of 1000: loss=1.62 " + "l1=1.1" + "l2=0.517 f=-0.182 shape=(1, 9000, 1)
logits [[ 1.3407215 -2.2398338  1.7851316 -1.6138569]]
Iteration 500 of 1000: loss=1.39 " + "l1=0.732" + "l2=0.654 f=-0.139 shape=(1, 9000, 1)
logits [[ 0.82818997 -2.2230527   1.5453552  -0.7057902 ]]
Iteration 600 of 1000: loss=1.15 " + "l1=0.422" + "l2=0.724 f=-0.0984 shape=(1, 9000, 1)
logits [[ 0.43777296 -2.0965512   1.2820584  -0.01693963]]
Iteration 700 of 1000: loss=0.908 " + "l1=0.189" + "l2=0.718 f=-0.0872 shape=(1, 9000, 1)
logits [[ 0.11660345 -2.0234337   1.06999     0.48792544]]
Iteration 800 of 1000: loss=0.715 " + "l1=0.0106" + "l2=0.704 f=-0.0837 shape=(1, 9000, 1)
logits [[-0.14012665 -1.949601    0.89387375  0.86114055]]
Iteration 900 of 1000: loss=0.589 " + "l1=0.000677" + "l2=0.588 f=-0.0833 shape=(1, 9000, 1)
logits [[-0.17609489 -1.9239398   0.88447833  0.88239527]]
--- 279.01246070861816 seconds ---
Adv result:3
Loading record A01511
(1, 5258)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0179 " + "l1=0.0179" + "l2=0 f=-0.271 shape=(1, 9000, 1)
logits [[ 1.0441738 -0.7497457  0.4765395 -1.8552023]]
Iteration 100 of 1000: loss=0.0169 " + "l1=0.0165" + "l2=0.000487 f=-0.279 shape=(1, 9000, 1)
logits [[ 0.95611423 -0.6896584   0.45598644 -1.8392062 ]]
Iteration 200 of 1000: loss=0.0165 " + "l1=0.0159" + "l2=0.000585 f=-0.282 shape=(1, 9000, 1)
logits [[ 0.92397183 -0.6667045   0.44898227 -1.832666  ]]
Iteration 300 of 1000: loss=0.016 " + "l1=0.0153" + "l2=0.000754 f=-0.285 shape=(1, 9000, 1)
logits [[ 0.8871251  -0.64064217  0.44038412 -1.8249242 ]]
Iteration 400 of 1000: loss=0.0156 " + "l1=0.0146" + "l2=0.000952 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.8497798  -0.61423403  0.43260342 -1.8171937 ]]
Iteration 500 of 1000: loss=0.0152 " + "l1=0.014" + "l2=0.00118 f=-0.29 shape=(1, 9000, 1)
logits [[ 0.81335014 -0.5881702   0.42567316 -1.8100905 ]]
Iteration 600 of 1000: loss=0.0148 " + "l1=0.0133" + "l2=0.00147 f=-0.293 shape=(1, 9000, 1)
logits [[ 0.7746447  -0.55953115  0.41883412 -1.8047718 ]]
Iteration 700 of 1000: loss=0.0144 " + "l1=0.0127" + "l2=0.00176 f=-0.296 shape=(1, 9000, 1)
logits [[ 0.73465157 -0.5309446   0.4127619  -1.7992309 ]]
Iteration 800 of 1000: loss=0.0141 " + "l1=0.012" + "l2=0.00208 f=-0.299 shape=(1, 9000, 1)
logits [[ 0.6949785 -0.5039978  0.407611  -1.7930034]]
Iteration 900 of 1000: loss=0.0137 " + "l1=0.0113" + "l2=0.00238 f=-0.302 shape=(1, 9000, 1)
logits [[ 0.65488833 -0.47723386  0.4031202  -1.7870474 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.179 " + "l1=0.179" + "l2=0 f=-0.271 shape=(1, 9000, 1)
logits [[ 1.0441738 -0.7497457  0.4765395 -1.8552023]]
Iteration 100 of 1000: loss=0.0814 " + "l1=0.0405" + "l2=0.0409 f=-0.345 shape=(1, 9000, 1)
logits [[ 0.25374565 -0.15144499  0.25388712 -1.7354035 ]]
Iteration 200 of 1000: loss=0.0465 " + "l1=0.0113" + "l2=0.0352 f=-0.354 shape=(1, 9000, 1)
logits [[ 0.12643945  0.03141101  0.14443485 -1.7196364 ]]
Iteration 300 of 1000: loss=0.0305 " + "l1=0.000651" + "l2=0.0298 f=-0.359 shape=(1, 9000, 1)
logits [[ 0.04132196  0.10220241  0.10871265 -1.6869864 ]]
Iteration 400 of 1000: loss=0.0257 " + "l1=2.07e-05" + "l2=0.0256 f=-0.359 shape=(1, 9000, 1)
logits [[ 0.0285133   0.10925829  0.10946488 -1.6822727 ]]
Iteration 500 of 1000: loss=0.0235 " + "l1=0" + "l2=0.0235 f=-0.361 shape=(1, 9000, 1)
logits [[ 0.02096459  0.1167661   0.11354692 -1.6933855 ]]
Iteration 600 of 1000: loss=0.0221 " + "l1=0.000396" + "l2=0.0217 f=-0.362 shape=(1, 9000, 1)
logits [[ 0.02680297  0.11536621  0.11933054 -1.7080857 ]]
Iteration 700 of 1000: loss=0.0213 " + "l1=0.00041" + "l2=0.0209 f=-0.363 shape=(1, 9000, 1)
logits [[ 0.02870894  0.1178949   0.12199299 -1.7216426 ]]
Iteration 800 of 1000: loss=0.0203 " + "l1=0.00072" + "l2=0.0196 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.03068184  0.11717876  0.12437759 -1.7309003 ]]
Iteration 900 of 1000: loss=0.0194 " + "l1=0" + "l2=0.0194 f=-0.366 shape=(1, 9000, 1)
logits [[ 0.02244692  0.12490835  0.12122178 -1.7343338 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0987 " + "l1=0.0987" + "l2=0 f=-0.271 shape=(1, 9000, 1)
logits [[ 1.0441738 -0.7497457  0.4765395 -1.8552023]]
Iteration 100 of 1000: loss=0.07 " + "l1=0.0569" + "l2=0.0131 f=-0.311 shape=(1, 9000, 1)
logits [[ 0.6018023  -0.4330527   0.36426008 -1.7768162 ]]
Iteration 200 of 1000: loss=0.0496 " + "l1=0.0298" + "l2=0.0198 f=-0.333 shape=(1, 9000, 1)
logits [[ 0.3149646  -0.22604601  0.29692942 -1.7193102 ]]
Iteration 300 of 1000: loss=0.0363 " + "l1=0.0194" + "l2=0.0169 f=-0.339 shape=(1, 9000, 1)
logits [[ 0.23465356 -0.11661374  0.23635136 -1.7110406 ]]
Iteration 400 of 1000: loss=0.0307 " + "l1=0.0124" + "l2=0.0183 f=-0.346 shape=(1, 9000, 1)
logits [[ 0.16752622 -0.03449987  0.19115943 -1.7083133 ]]
Iteration 500 of 1000: loss=0.0267 " + "l1=0.00584" + "l2=0.0208 f=-0.356 shape=(1, 9000, 1)
logits [[ 0.07260736  0.04938295  0.15551277 -1.700017  ]]
Iteration 600 of 1000: loss=0.0235 " + "l1=0.000424" + "l2=0.0231 f=-0.364 shape=(1, 9000, 1)
logits [[-0.01577764  0.12117771  0.1288817  -1.6901994 ]]
Iteration 700 of 1000: loss=0.0216 " + "l1=0" + "l2=0.0216 f=-0.366 shape=(1, 9000, 1)
logits [[-0.02928325  0.13193223  0.12956344 -1.698112  ]]
Iteration 800 of 1000: loss=0.0204 " + "l1=0.000117" + "l2=0.0202 f=-0.367 shape=(1, 9000, 1)
logits [[-0.0221164   0.13031553  0.13243723 -1.7092406 ]]
Iteration 900 of 1000: loss=0.0195 " + "l1=0" + "l2=0.0195 f=-0.368 shape=(1, 9000, 1)
logits [[-0.02165966  0.13303705  0.13182805 -1.7162275 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0583 " + "l1=0.0583" + "l2=0 f=-0.271 shape=(1, 9000, 1)
logits [[ 1.0441738 -0.7497457  0.4765395 -1.8552023]]
Iteration 100 of 1000: loss=0.0481 " + "l1=0.0435" + "l2=0.00462 f=-0.296 shape=(1, 9000, 1)
logits [[ 0.777007   -0.5617772   0.41113666 -1.8107312 ]]
Iteration 200 of 1000: loss=0.0422 " + "l1=0.0357" + "l2=0.00654 f=-0.307 shape=(1, 9000, 1)
logits [[ 0.6375461  -0.46011415  0.37882122 -1.782782  ]]
Iteration 300 of 1000: loss=0.0354 " + "l1=0.0265" + "l2=0.00891 f=-0.319 shape=(1, 9000, 1)
logits [[ 0.47272447 -0.3431191   0.3412807  -1.7459694 ]]
Iteration 400 of 1000: loss=0.0284 " + "l1=0.0172" + "l2=0.0112 f=-0.331 shape=(1, 9000, 1)
logits [[ 0.3065992  -0.22331157  0.30584648 -1.7126168 ]]
Iteration 500 of 1000: loss=0.0253 " + "l1=0.0148" + "l2=0.0105 f=-0.333 shape=(1, 9000, 1)
logits [[ 0.27871516 -0.1756975   0.27973005 -1.7128716 ]]
Iteration 600 of 1000: loss=0.0238 " + "l1=0.0131" + "l2=0.0107 f=-0.335 shape=(1, 9000, 1)
logits [[ 0.2598529  -0.13996497  0.2616746  -1.7221552 ]]
Iteration 700 of 1000: loss=0.0227 " + "l1=0.0117" + "l2=0.011 f=-0.338 shape=(1, 9000, 1)
logits [[ 0.24200493 -0.11084637  0.24822219 -1.7320486 ]]
Iteration 800 of 1000: loss=0.0219 " + "l1=0.0102" + "l2=0.0117 f=-0.342 shape=(1, 9000, 1)
logits [[ 0.21238077 -0.07901507  0.23628584 -1.7384021 ]]
Iteration 900 of 1000: loss=0.0212 " + "l1=0.00896" + "l2=0.0123 f=-0.346 shape=(1, 9000, 1)
logits [[ 0.18264158 -0.05103194  0.22480357 -1.7390202 ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0785 " + "l1=0.0785" + "l2=0 f=-0.271 shape=(1, 9000, 1)
logits [[ 1.0441738 -0.7497457  0.4765395 -1.8552023]]
Iteration 100 of 1000: loss=0.0603 " + "l1=0.052" + "l2=0.00827 f=-0.303 shape=(1, 9000, 1)
logits [[ 0.6904819  -0.49798644  0.38828704 -1.7940716 ]]
Iteration 200 of 1000: loss=0.0484 " + "l1=0.0365" + "l2=0.012 f=-0.319 shape=(1, 9000, 1)
logits [[ 0.48301885 -0.3502329   0.3405283  -1.7510788 ]]
Iteration 300 of 1000: loss=0.0355 " + "l1=0.0211" + "l2=0.0144 f=-0.334 shape=(1, 9000, 1)
logits [[ 0.2860896  -0.19600978  0.28710762 -1.7118895 ]]
Iteration 400 of 1000: loss=0.03 " + "l1=0.0163" + "l2=0.0137 f=-0.337 shape=(1, 9000, 1)
logits [[ 0.24311161 -0.1266745   0.24524885 -1.709619  ]]
Iteration 500 of 1000: loss=0.0272 " + "l1=0.0127" + "l2=0.0145 f=-0.342 shape=(1, 9000, 1)
logits [[ 0.20512553 -0.07285336  0.21668118 -1.7158892 ]]
Iteration 600 of 1000: loss=0.0251 " + "l1=0.009" + "l2=0.0161 f=-0.349 shape=(1, 9000, 1)
logits [[ 0.14217389 -0.01283882  0.19286938 -1.719298  ]]
Iteration 700 of 1000: loss=0.0234 " + "l1=0.00608" + "l2=0.0173 f=-0.355 shape=(1, 9000, 1)
logits [[ 0.08642158  0.03571765  0.17471449 -1.716001  ]]
Iteration 800 of 1000: loss=0.0218 " + "l1=0.00314" + "l2=0.0187 f=-0.361 shape=(1, 9000, 1)
logits [[ 0.02760493  0.08397295  0.15573372 -1.7122704 ]]
Iteration 900 of 1000: loss=0.0204 " + "l1=0.000336" + "l2=0.0201 f=-0.367 shape=(1, 9000, 1)
logits [[-0.02519192  0.12874864  0.13641952 -1.7083615 ]]
--- 297.4651117324829 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00568 " + "l1=0.00568" + "l2=0 f=-0.271 shape=(1, 9000, 1)
logits [[ 1.0441738 -0.7497457  0.4765395 -1.8552023]]
Iteration 100 of 1000: loss=0.00531 " + "l1=0.00511" + "l2=0.000205 f=-0.276 shape=(1, 9000, 1)
logits [[ 0.9883975  -0.72908896  0.47748113 -1.8402524 ]]
Iteration 200 of 1000: loss=0.0052 " + "l1=0.00498" + "l2=0.000215 f=-0.277 shape=(1, 9000, 1)
logits [[ 0.97538006 -0.722455    0.47730675 -1.8365735 ]]
Iteration 300 of 1000: loss=0.00506 " + "l1=0.00482" + "l2=0.000242 f=-0.278 shape=(1, 9000, 1)
logits [[ 0.9591506 -0.7141564  0.4769028 -1.8321161]]
Iteration 400 of 1000: loss=0.00498 " + "l1=0.00465" + "l2=0.000328 f=-0.279 shape=(1, 9000, 1)
logits [[ 0.9415568  -0.705167    0.47657704 -1.827239  ]]
Iteration 500 of 1000: loss=0.00484 " + "l1=0.00447" + "l2=0.000372 f=-0.28 shape=(1, 9000, 1)
logits [[ 0.92296153 -0.69578373  0.47640434 -1.8220546 ]]
Iteration 600 of 1000: loss=0.00471 " + "l1=0.00427" + "l2=0.000447 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.90292215 -0.6858735   0.4763253  -1.8167876 ]]
Iteration 700 of 1000: loss=0.00461 " + "l1=0.00406" + "l2=0.000549 f=-0.282 shape=(1, 9000, 1)
logits [[ 0.88276535 -0.6762753   0.47668877 -1.8112384 ]]
Iteration 800 of 1000: loss=0.00454 " + "l1=0.00384" + "l2=0.000694 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.8616299  -0.66621166  0.47729173 -1.8053128 ]]
Iteration 900 of 1000: loss=0.00439 " + "l1=0.00364" + "l2=0.000749 f=-0.284 shape=(1, 9000, 1)
logits [[ 0.84251744 -0.6574138   0.47822922 -1.7987635 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0568 " + "l1=0.0568" + "l2=0 f=-0.271 shape=(1, 9000, 1)
logits [[ 1.0441738 -0.7497457  0.4765395 -1.8552023]]
Iteration 100 of 1000: loss=0.0277 " + "l1=0.0153" + "l2=0.0124 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.631636   -0.5784777   0.47854945 -1.7515926 ]]
Iteration 200 of 1000: loss=0.0133 " + "l1=0.000278" + "l2=0.013 f=-0.315 shape=(1, 9000, 1)
logits [[ 0.47960645 -0.49387616  0.47682577 -1.7218128 ]]
Iteration 300 of 1000: loss=0.00746 " + "l1=0" + "l2=0.00746 f=-0.312 shape=(1, 9000, 1)
logits [[ 0.4650109  -0.47358492  0.46627554 -1.7058872 ]]
Iteration 400 of 1000: loss=0.00506 " + "l1=0" + "l2=0.00506 f=-0.309 shape=(1, 9000, 1)
logits [[ 0.45658284 -0.4643021   0.46173874 -1.6913934 ]]
Iteration 500 of 1000: loss=0.00377 " + "l1=0.000134" + "l2=0.00364 f=-0.306 shape=(1, 9000, 1)
logits [[ 0.46345156 -0.46571183  0.46211338 -1.6845843 ]]
Iteration 600 of 1000: loss=0.00308 " + "l1=0.000181" + "l2=0.0029 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.46616045 -0.4678854   0.46435013 -1.6797334 ]]
Iteration 700 of 1000: loss=0.00254 " + "l1=0" + "l2=0.00254 f=-0.303 shape=(1, 9000, 1)
logits [[ 0.4638399  -0.46975085  0.4676497  -1.6743382 ]]
Iteration 800 of 1000: loss=0.00221 " + "l1=0" + "l2=0.00221 f=-0.302 shape=(1, 9000, 1)
logits [[ 0.466259   -0.4744681   0.47109896 -1.6700308 ]]
Iteration 900 of 1000: loss=0.00189 " + "l1=0" + "l2=0.00189 f=-0.3 shape=(1, 9000, 1)
logits [[ 0.4709886  -0.48087436  0.47457132 -1.665841  ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0312 " + "l1=0.0312" + "l2=0 f=-0.271 shape=(1, 9000, 1)
logits [[ 1.0441738 -0.7497457  0.4765395 -1.8552023]]
Iteration 100 of 1000: loss=0.022 " + "l1=0.018" + "l2=0.00404 f=-0.291 shape=(1, 9000, 1)
logits [[ 0.805944   -0.65698606  0.4794529  -1.7924966 ]]
Iteration 200 of 1000: loss=0.0175 " + "l1=0.012" + "l2=0.0055 f=-0.298 shape=(1, 9000, 1)
logits [[ 0.6970396  -0.6027437   0.47837025 -1.763382  ]]
Iteration 300 of 1000: loss=0.0126 " + "l1=0.00587" + "l2=0.00673 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.58097833 -0.5391569   0.47427788 -1.7348472 ]]
Iteration 400 of 1000: loss=0.00699 " + "l1=8.7e-05" + "l2=0.0069 f=-0.311 shape=(1, 9000, 1)
logits [[ 0.4684473  -0.47543442  0.46686575 -1.7024233 ]]
Iteration 500 of 1000: loss=0.00444 " + "l1=0" + "l2=0.00444 f=-0.308 shape=(1, 9000, 1)
logits [[ 0.4599267  -0.4647564   0.46213576 -1.6888937 ]]
Iteration 600 of 1000: loss=0.00342 " + "l1=1.51e-05" + "l2=0.0034 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.46269557 -0.46432233  0.46242118 -1.6820033 ]]
Iteration 700 of 1000: loss=0.00286 " + "l1=0" + "l2=0.00286 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.46214366 -0.46632937  0.46534726 -1.676203  ]]
Iteration 800 of 1000: loss=0.00235 " + "l1=0" + "l2=0.00235 f=-0.302 shape=(1, 9000, 1)
logits [[ 0.46684954 -0.47138962  0.46889582 -1.6728734 ]]
Iteration 900 of 1000: loss=0.00204 " + "l1=2.98e-05" + "l2=0.00201 f=-0.3 shape=(1, 9000, 1)
logits [[ 0.4732019  -0.4783399   0.47265998 -1.6694927 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0184 " + "l1=0.0184" + "l2=0 f=-0.271 shape=(1, 9000, 1)
logits [[ 1.0441738 -0.7497457  0.4765395 -1.8552023]]
Iteration 100 of 1000: loss=0.0151 " + "l1=0.0136" + "l2=0.00148 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.898424   -0.69377774  0.4788092  -1.816948  ]]
Iteration 200 of 1000: loss=0.0136 " + "l1=0.0116" + "l2=0.00201 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.8349009  -0.66339403  0.4784418  -1.8012093 ]]
Iteration 300 of 1000: loss=0.012 " + "l1=0.00962" + "l2=0.0024 f=-0.291 shape=(1, 9000, 1)
logits [[ 0.7729258  -0.63159764  0.4768277  -1.7830055 ]]
Iteration 400 of 1000: loss=0.0104 " + "l1=0.00751" + "l2=0.00285 f=-0.295 shape=(1, 9000, 1)
logits [[ 0.70564556 -0.5969298   0.47451863 -1.7619866 ]]
Iteration 500 of 1000: loss=0.00843 " + "l1=0.00511" + "l2=0.00331 f=-0.299 shape=(1, 9000, 1)
logits [[ 0.6291204 -0.5557991  0.4717505 -1.7396312]]
Iteration 600 of 1000: loss=0.00631 " + "l1=0.00251" + "l2=0.0038 f=-0.303 shape=(1, 9000, 1)
logits [[ 0.5452844  -0.51033753  0.46816012 -1.7155304 ]]
Iteration 700 of 1000: loss=0.00403 " + "l1=8.42e-06" + "l2=0.00403 f=-0.307 shape=(1, 9000, 1)
logits [[ 0.46566388 -0.46862045  0.4654047  -1.6894195 ]]
Iteration 800 of 1000: loss=0.003 " + "l1=0" + "l2=0.003 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.46539652 -0.467573    0.46564743 -1.6809273 ]]
Iteration 900 of 1000: loss=0.00238 " + "l1=0" + "l2=0.00238 f=-0.303 shape=(1, 9000, 1)
logits [[ 0.46842754 -0.47169462  0.46851996 -1.6758516 ]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0121 " + "l1=0.0121" + "l2=0 f=-0.271 shape=(1, 9000, 1)
logits [[ 1.0441738 -0.7497457  0.4765395 -1.8552023]]
Iteration 100 of 1000: loss=0.0106 " + "l1=0.0099" + "l2=0.000685 f=-0.28 shape=(1, 9000, 1)
logits [[ 0.9443354  -0.7118285   0.47837415 -1.829011  ]]
Iteration 200 of 1000: loss=0.00998 " + "l1=0.00912" + "l2=0.00086 f=-0.282 shape=(1, 9000, 1)
logits [[ 0.90746045 -0.69386995  0.47810352 -1.8194937 ]]
Iteration 300 of 1000: loss=0.00934 " + "l1=0.00827" + "l2=0.00106 f=-0.285 shape=(1, 9000, 1)
logits [[ 0.86625785 -0.67272276  0.476869   -1.80878   ]]
Iteration 400 of 1000: loss=0.00864 " + "l1=0.0074" + "l2=0.00124 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.8243538  -0.651235    0.47607347 -1.7974339 ]]
Iteration 500 of 1000: loss=0.00795 " + "l1=0.00653" + "l2=0.00142 f=-0.289 shape=(1, 9000, 1)
logits [[ 0.7826039  -0.62979895  0.47536293 -1.7846788 ]]
Iteration 600 of 1000: loss=0.0072 " + "l1=0.00558" + "l2=0.00162 f=-0.291 shape=(1, 9000, 1)
logits [[ 0.7375027  -0.60691947  0.47503206 -1.7702683 ]]
Iteration 700 of 1000: loss=0.0064 " + "l1=0.0045" + "l2=0.0019 f=-0.293 shape=(1, 9000, 1)
logits [[ 0.68635213 -0.58083975  0.47454002 -1.7537628 ]]
Iteration 800 of 1000: loss=0.00548 " + "l1=0.00336" + "l2=0.00212 f=-0.296 shape=(1, 9000, 1)
logits [[ 0.6323968  -0.5545818   0.47445688 -1.7344952 ]]
Iteration 900 of 1000: loss=0.00454 " + "l1=0.0022" + "l2=0.00234 f=-0.298 shape=(1, 9000, 1)
logits [[ 0.57750016 -0.5267184   0.47410607 -1.7163137 ]]
--- 296.19441080093384 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.029 " + "l1=0.029" + "l2=0 f=-0.271 shape=(1, 9000, 1)
logits [[ 1.0441738 -0.7497457  0.4765395 -1.8552023]]
Iteration 100 of 1000: loss=0.028 " + "l1=0.0276" + "l2=0.000443 f=-0.273 shape=(1, 9000, 1)
logits [[ 0.9662168  -0.7262438   0.45931897 -1.7894499 ]]
Iteration 200 of 1000: loss=0.0276 " + "l1=0.0271" + "l2=0.000549 f=-0.273 shape=(1, 9000, 1)
logits [[ 0.93920296 -0.7154438   0.4535823  -1.7701857 ]]
Iteration 300 of 1000: loss=0.0273 " + "l1=0.0266" + "l2=0.000703 f=-0.274 shape=(1, 9000, 1)
logits [[ 0.9085314  -0.70221275  0.4470017  -1.7487459 ]]
Iteration 400 of 1000: loss=0.0269 " + "l1=0.026" + "l2=0.000897 f=-0.275 shape=(1, 9000, 1)
logits [[ 0.87672603 -0.6889299   0.44100037 -1.7275822 ]]
Iteration 500 of 1000: loss=0.0266 " + "l1=0.0255" + "l2=0.00108 f=-0.276 shape=(1, 9000, 1)
logits [[ 0.84463537 -0.67576885  0.4359145  -1.7068437 ]]
Iteration 600 of 1000: loss=0.0264 " + "l1=0.025" + "l2=0.00136 f=-0.276 shape=(1, 9000, 1)
logits [[ 0.81378365 -0.66383713  0.43204007 -1.6868826 ]]
Iteration 700 of 1000: loss=0.026 " + "l1=0.0245" + "l2=0.00148 f=-0.277 shape=(1, 9000, 1)
logits [[ 0.78197306 -0.6523383   0.42924628 -1.6663017 ]]
Iteration 800 of 1000: loss=0.0256 " + "l1=0.024" + "l2=0.00161 f=-0.277 shape=(1, 9000, 1)
logits [[ 0.75476927 -0.6424287   0.42737338 -1.6482081 ]]
Iteration 900 of 1000: loss=0.0254 " + "l1=0.0235" + "l2=0.00182 f=-0.278 shape=(1, 9000, 1)
logits [[ 0.725048   -0.63287127  0.42558557 -1.6280166 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.29 " + "l1=0.29" + "l2=0 f=-0.271 shape=(1, 9000, 1)
logits [[ 1.0441738 -0.7497457  0.4765395 -1.8552023]]
Iteration 100 of 1000: loss=0.205 " + "l1=0.17" + "l2=0.0349 f=-0.286 shape=(1, 9000, 1)
logits [[ 0.37861305 -0.5060988   0.30573392 -1.3207178 ]]
Iteration 200 of 1000: loss=0.163 " + "l1=0.127" + "l2=0.0361 f=-0.278 shape=(1, 9000, 1)
logits [[ 0.20693107 -0.46095604  0.20566122 -1.0652938 ]]
Iteration 300 of 1000: loss=0.139 " + "l1=0.094" + "l2=0.045 f=-0.269 shape=(1, 9000, 1)
logits [[ 0.10633069 -0.47243255  0.1140978  -0.82577676]]
Iteration 400 of 1000: loss=0.118 " + "l1=0.0613" + "l2=0.0563 f=-0.263 shape=(1, 9000, 1)
logits [[-0.00407272 -0.51210284  0.03930864 -0.57387644]]
Iteration 500 of 1000: loss=0.0848 " + "l1=0.0148" + "l2=0.0701 f=-0.261 shape=(1, 9000, 1)
logits [[-0.21057618 -0.573043   -0.05577089 -0.20341668]]
Iteration 600 of 1000: loss=0.0537 " + "l1=0" + "l2=0.0537 f=-0.267 shape=(1, 9000, 1)
logits [[-0.29521638 -0.6365109  -0.07058373 -0.06462681]]
Iteration 700 of 1000: loss=0.0388 " + "l1=0" + "l2=0.0388 f=-0.27 shape=(1, 9000, 1)
logits [[-0.2866287  -0.6866328  -0.0540286  -0.05379068]]
Iteration 800 of 1000: loss=0.0293 " + "l1=0" + "l2=0.0293 f=-0.272 shape=(1, 9000, 1)
logits [[-0.2772398 -0.7287273 -0.0437532 -0.0386045]]
Iteration 900 of 1000: loss=0.0233 " + "l1=0" + "l2=0.0233 f=-0.272 shape=(1, 9000, 1)
logits [[-0.26614618 -0.76383346 -0.03393523 -0.02510251]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.159 " + "l1=0.159" + "l2=0 f=-0.271 shape=(1, 9000, 1)
logits [[ 1.0441738 -0.7497457  0.4765395 -1.8552023]]
Iteration 100 of 1000: loss=0.133 " + "l1=0.123" + "l2=0.0108 f=-0.28 shape=(1, 9000, 1)
logits [[ 0.6692806  -0.6170405   0.38958323 -1.5609198 ]]
Iteration 200 of 1000: loss=0.118 " + "l1=0.101" + "l2=0.0164 f=-0.284 shape=(1, 9000, 1)
logits [[ 0.44878957 -0.52922356  0.3336003  -1.3899883 ]]
Iteration 300 of 1000: loss=0.103 " + "l1=0.0838" + "l2=0.0189 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.27791357 -0.45997596  0.2777662  -1.2456645 ]]
Iteration 400 of 1000: loss=0.0951 " + "l1=0.0753" + "l2=0.0198 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.23621187 -0.46251947  0.23538996 -1.1332209 ]]
Iteration 500 of 1000: loss=0.0897 " + "l1=0.068" + "l2=0.0217 f=-0.276 shape=(1, 9000, 1)
logits [[ 0.19926147 -0.47420263  0.20279571 -1.0331689 ]]
Iteration 600 of 1000: loss=0.084 " + "l1=0.0609" + "l2=0.0231 f=-0.272 shape=(1, 9000, 1)
logits [[ 0.17021993 -0.50394773  0.17763604 -0.9302324 ]]
Iteration 700 of 1000: loss=0.0771 " + "l1=0.0527" + "l2=0.0244 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.11337119 -0.5368231   0.15676667 -0.80119723]]
Iteration 800 of 1000: loss=0.0683 " + "l1=0.0421" + "l2=0.0262 f=-0.265 shape=(1, 9000, 1)
logits [[ 0.02649329 -0.5726038   0.12685956 -0.6390551 ]]
Iteration 900 of 1000: loss=0.0561 " + "l1=0.0279" + "l2=0.0282 f=-0.264 shape=(1, 9000, 1)
logits [[-0.09596033 -0.60893893  0.07838321 -0.42816424]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.225 " + "l1=0.225" + "l2=0 f=-0.271 shape=(1, 9000, 1)
logits [[ 1.0441738 -0.7497457  0.4765395 -1.8552023]]
Iteration 100 of 1000: loss=0.173 " + "l1=0.152" + "l2=0.0213 f=-0.282 shape=(1, 9000, 1)
logits [[ 0.5237088  -0.5617778   0.34963632 -1.4401118 ]]
Iteration 200 of 1000: loss=0.142 " + "l1=0.115" + "l2=0.0268 f=-0.286 shape=(1, 9000, 1)
logits [[ 0.26735547 -0.45998293  0.2673434  -1.2186792 ]]
Iteration 300 of 1000: loss=0.125 " + "l1=0.0956" + "l2=0.0293 f=-0.277 shape=(1, 9000, 1)
logits [[ 0.19523445 -0.46340817  0.19656065 -1.0363969 ]]
Iteration 400 of 1000: loss=0.113 " + "l1=0.0785" + "l2=0.0345 f=-0.271 shape=(1, 9000, 1)
logits [[ 0.13503462 -0.48235148  0.1391287  -0.8744157 ]]
Iteration 500 of 1000: loss=0.101 " + "l1=0.0608" + "l2=0.04 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.05292498 -0.5155769   0.09225646 -0.6921571 ]]
Iteration 600 of 1000: loss=0.0832 " + "l1=0.0374" + "l2=0.0457 f=-0.262 shape=(1, 9000, 1)
logits [[-0.0815036  -0.56452435  0.04012325 -0.4426415 ]]
Iteration 700 of 1000: loss=0.0548 " + "l1=0.000763" + "l2=0.054 f=-0.261 shape=(1, 9000, 1)
logits [[-0.3000794  -0.61787444 -0.0582894  -0.06812935]]
Iteration 800 of 1000: loss=0.0371 " + "l1=0.000245" + "l2=0.0368 f=-0.267 shape=(1, 9000, 1)
logits [[-0.30774796 -0.67378473 -0.04241601 -0.04557732]]
Iteration 900 of 1000: loss=0.0278 " + "l1=0.000256" + "l2=0.0275 f=-0.27 shape=(1, 9000, 1)
logits [[-0.29890132 -0.71195096 -0.03245106 -0.03575362]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.192 " + "l1=0.192" + "l2=0 f=-0.271 shape=(1, 9000, 1)
logits [[ 1.0441738 -0.7497457  0.4765395 -1.8552023]]
Iteration 100 of 1000: loss=0.154 " + "l1=0.139" + "l2=0.0157 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.5954938  -0.58980966  0.36923477 -1.4984348 ]]
Iteration 200 of 1000: loss=0.13 " + "l1=0.107" + "l2=0.0231 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.32567218 -0.48025125  0.2963838  -1.2906398 ]]
Iteration 300 of 1000: loss=0.114 " + "l1=0.0908" + "l2=0.0235 f=-0.282 shape=(1, 9000, 1)
logits [[ 0.23304933 -0.459551    0.23395935 -1.1361235 ]]
Iteration 400 of 1000: loss=0.105 " + "l1=0.0784" + "l2=0.0269 f=-0.276 shape=(1, 9000, 1)
logits [[ 0.18315008 -0.4723642   0.18473645 -0.99903566]]
Iteration 500 of 1000: loss=0.0971 " + "l1=0.0673" + "l2=0.0298 f=-0.272 shape=(1, 9000, 1)
logits [[ 0.13909455 -0.50219613  0.14653003 -0.8695545 ]]
Iteration 600 of 1000: loss=0.0872 " + "l1=0.0541" + "l2=0.0331 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.06585323 -0.5404466   0.11329167 -0.7032106 ]]
Iteration 700 of 1000: loss=0.0721 " + "l1=0.0352" + "l2=0.0368 f=-0.264 shape=(1, 9000, 1)
logits [[-0.06167361 -0.58534205  0.06105502 -0.4703393 ]]
Iteration 800 of 1000: loss=0.0508 " + "l1=0.00892" + "l2=0.0418 f=-0.264 shape=(1, 9000, 1)
logits [[-0.24413125 -0.63577676 -0.02060755 -0.15528709]]
Iteration 900 of 1000: loss=0.0331 " + "l1=0" + "l2=0.0331 f=-0.268 shape=(1, 9000, 1)
logits [[-0.30345634 -0.6893227  -0.04126406 -0.03795914]]
--- 296.5692160129547 seconds ---
Adv result:3
Loading record A01519
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0696 " + "l1=0.0696" + "l2=0 f=-0.55 shape=(1, 9000, 1)
logits [[ 3.5521202 -3.4043617  3.440201  -5.788549 ]]
Iteration 100 of 1000: loss=0.0689 " + "l1=0.0683" + "l2=0.000524 f=-0.555 shape=(1, 9000, 1)
logits [[ 3.4818194 -3.3523912  3.396233  -5.747585 ]]
Iteration 200 of 1000: loss=0.0687 " + "l1=0.0682" + "l2=0.000574 f=-0.557 shape=(1, 9000, 1)
logits [[ 3.4712558 -3.3457942  3.3901525 -5.743263 ]]
Iteration 300 of 1000: loss=0.0687 " + "l1=0.068" + "l2=0.000664 f=-0.558 shape=(1, 9000, 1)
logits [[ 3.4605834 -3.3394268  3.3845448 -5.737515 ]]
Iteration 400 of 1000: loss=0.0686 " + "l1=0.0679" + "l2=0.000737 f=-0.559 shape=(1, 9000, 1)
logits [[ 3.4518812 -3.3341718  3.380138  -5.731932 ]]
Iteration 500 of 1000: loss=0.0686 " + "l1=0.0677" + "l2=0.000871 f=-0.559 shape=(1, 9000, 1)
logits [[ 3.443762  -3.3296595  3.3763487 -5.7265263]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.696 " + "l1=0.696" + "l2=0 f=-0.55 shape=(1, 9000, 1)
logits [[ 3.5521202 -3.4043617  3.440201  -5.788549 ]]
Iteration 100 of 1000: loss=0.623 " + "l1=0.574" + "l2=0.0498 f=-0.606 shape=(1, 9000, 1)
logits [[ 2.9092968 -2.8275764  2.9064999 -5.411596 ]]
Iteration 200 of 1000: loss=0.604 " + "l1=0.541" + "l2=0.0633 f=-0.614 shape=(1, 9000, 1)
logits [[ 2.7527966 -2.6542501  2.7552493 -5.310855 ]]
Iteration 300 of 1000: loss=0.592 " + "l1=0.519" + "l2=0.0734 f=-0.62 shape=(1, 9000, 1)
logits [[ 2.6455123 -2.5441763  2.645298  -5.226081 ]]
Iteration 400 of 1000: loss=0.584 " + "l1=0.506" + "l2=0.0782 f=-0.622 shape=(1, 9000, 1)
logits [[ 2.5800169 -2.476264   2.5795906 -5.1708627]]
Iteration 500 of 1000: loss=0.576 " + "l1=0.493" + "l2=0.0837 f=-0.622 shape=(1, 9000, 1)
logits [[ 2.5198457 -2.4075186  2.5191157 -5.1212907]]
Iteration 600 of 1000: loss=0.568 " + "l1=0.478" + "l2=0.0898 f=-0.623 shape=(1, 9000, 1)
logits [[ 2.4515245 -2.3319526  2.452718  -5.0635185]]
Iteration 700 of 1000: loss=0.561 " + "l1=0.464" + "l2=0.0961 f=-0.62 shape=(1, 9000, 1)
logits [[ 2.383686  -2.2523334  2.3919985 -5.0047884]]
Iteration 800 of 1000: loss=0.552 " + "l1=0.452" + "l2=0.0994 f=-0.618 shape=(1, 9000, 1)
logits [[ 2.3309522 -2.1853647  2.3366222 -4.9540095]]
Iteration 900 of 1000: loss=0.54 " + "l1=0.436" + "l2=0.104 f=-0.612 shape=(1, 9000, 1)
logits [[ 2.2543113 -2.0990973  2.2568457 -4.8607845]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.96 " + "l1=6.96" + "l2=0 f=-0.55 shape=(1, 9000, 1)
logits [[ 3.5521202 -3.4043617  3.440201  -5.788549 ]]
Iteration 100 of 1000: loss=2.98 " + "l1=1.54" + "l2=1.44 f=-0.638 shape=(1, 9000, 1)
logits [[ 0.86242104 -0.53816915  1.0062484  -3.8826385 ]]
Iteration 200 of 1000: loss=1.56 " + "l1=0.000424" + "l2=1.56 f=-0.698 shape=(1, 9000, 1)
logits [[-0.44248986  0.21937889  0.21980298 -2.7880356 ]]
Iteration 300 of 1000: loss=1.26 " + "l1=0" + "l2=1.26 f=-0.698 shape=(1, 9000, 1)
logits [[-0.4384701   0.17509444  0.16915219 -2.6980557 ]]
Iteration 400 of 1000: loss=1.11 " + "l1=0.000791" + "l2=1.11 f=-0.69 shape=(1, 9000, 1)
logits [[-0.43009916  0.16281605  0.163607   -2.6568532 ]]
Iteration 500 of 1000: loss=1.02 " + "l1=0" + "l2=1.02 f=-0.678 shape=(1, 9000, 1)
logits [[-0.46686944  0.17478065  0.15708418 -2.57773   ]]
Iteration 600 of 1000: loss=0.946 " + "l1=0" + "l2=0.946 f=-0.669 shape=(1, 9000, 1)
logits [[-0.46887776  0.1617435   0.15882109 -2.5293248 ]]
Iteration 700 of 1000: loss=0.897 " + "l1=0" + "l2=0.897 f=-0.665 shape=(1, 9000, 1)
logits [[-0.48733982  0.14804631  0.14372092 -2.462444  ]]
Iteration 800 of 1000: loss=0.863 " + "l1=0.0224" + "l2=0.84 f=-0.66 shape=(1, 9000, 1)
logits [[-0.47935477  0.11021999  0.13263752 -2.4016736 ]]
Iteration 900 of 1000: loss=0.817 " + "l1=0" + "l2=0.817 f=-0.662 shape=(1, 9000, 1)
logits [[-0.5198977   0.11258481  0.10875735 -2.349348  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.83 " + "l1=3.83" + "l2=0 f=-0.55 shape=(1, 9000, 1)
logits [[ 3.5521202 -3.4043617  3.440201  -5.788549 ]]
Iteration 100 of 1000: loss=2.25 " + "l1=1.59" + "l2=0.657 f=-0.648 shape=(1, 9000, 1)
logits [[ 1.5870245 -1.2705586  1.6203924 -4.5283337]]
Iteration 200 of 1000: loss=1.79 " + "l1=0.983" + "l2=0.805 f=-0.634 shape=(1, 9000, 1)
logits [[ 1.0526656  -0.70505804  1.0819379  -3.9658606 ]]
Iteration 300 of 1000: loss=1.28 " + "l1=0.32" + "l2=0.957 f=-0.695 shape=(1, 9000, 1)
logits [[-0.00361786 -0.13628003  0.4458904  -3.084659  ]]
Iteration 400 of 1000: loss=1.07 " + "l1=0.157" + "l2=0.914 f=-0.688 shape=(1, 9000, 1)
logits [[-0.25341246  0.00344533  0.28802118 -2.7884085 ]]
Iteration 500 of 1000: loss=0.971 " + "l1=0.0542" + "l2=0.917 f=-0.693 shape=(1, 9000, 1)
logits [[-0.44495222  0.10340706  0.20198078 -2.6333766 ]]
Iteration 600 of 1000: loss=0.92 " + "l1=0.0243" + "l2=0.896 f=-0.691 shape=(1, 9000, 1)
logits [[-0.49240595  0.11956423  0.16379395 -2.5530078 ]]
Iteration 700 of 1000: loss=0.884 " + "l1=0.0247" + "l2=0.859 f=-0.683 shape=(1, 9000, 1)
logits [[-0.4961811   0.11100151  0.15599965 -2.5025465 ]]
Iteration 800 of 1000: loss=0.852 " + "l1=0.0144" + "l2=0.838 f=-0.683 shape=(1, 9000, 1)
logits [[-0.5222773   0.11034555  0.13657367 -2.4572775 ]]
Iteration 900 of 1000: loss=0.828 " + "l1=0.0115" + "l2=0.816 f=-0.681 shape=(1, 9000, 1)
logits [[-0.5424885   0.10691516  0.12776299 -2.415223  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.26 " + "l1=2.26" + "l2=0 f=-0.55 shape=(1, 9000, 1)
logits [[ 3.5521202 -3.4043617  3.440201  -5.788549 ]]
Iteration 100 of 1000: loss=1.6 " + "l1=1.25" + "l2=0.343 f=-0.633 shape=(1, 9000, 1)
logits [[ 2.0452294 -1.7925109  2.0644157 -4.847355 ]]
Iteration 200 of 1000: loss=1.42 " + "l1=1.01" + "l2=0.415 f=-0.65 shape=(1, 9000, 1)
logits [[ 1.6710446 -1.4097966  1.690902  -4.553325 ]]
Iteration 300 of 1000: loss=1.3 " + "l1=0.855" + "l2=0.446 f=-0.657 shape=(1, 9000, 1)
logits [[ 1.436296  -1.1859384  1.4455997 -4.325668 ]]
Iteration 400 of 1000: loss=1.1 " + "l1=0.582" + "l2=0.519 f=-0.673 shape=(1, 9000, 1)
logits [[ 0.9843105  -0.77354115  1.0177897  -3.9210193 ]]
Iteration 500 of 1000: loss=1.01 " + "l1=0.459" + "l2=0.555 f=-0.682 shape=(1, 9000, 1)
logits [[ 0.682323  -0.6002988  0.8107594 -3.621758 ]]
Iteration 600 of 1000: loss=0.951 " + "l1=0.381" + "l2=0.569 f=-0.677 shape=(1, 9000, 1)
logits [[ 0.47904637 -0.48455995  0.68920386 -3.3915298 ]]
Iteration 700 of 1000: loss=0.87 " + "l1=0.275" + "l2=0.595 f=-0.663 shape=(1, 9000, 1)
logits [[ 0.14650849 -0.32308912  0.523241   -2.99872   ]]
Iteration 800 of 1000: loss=0.806 " + "l1=0.224" + "l2=0.582 f=-0.655 shape=(1, 9000, 1)
logits [[ 0.0152115  -0.24817915  0.44255957 -2.8292859 ]]
Iteration 900 of 1000: loss=0.774 " + "l1=0.2" + "l2=0.575 f=-0.657 shape=(1, 9000, 1)
logits [[-0.06355759 -0.22363599  0.39022923 -2.7330277 ]]
--- 269.55229592323303 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00112 " + "l1=0.00112" + "l2=0 f=-0.55 shape=(1, 9000, 1)
logits [[ 3.5521202 -3.4043617  3.440201  -5.788549 ]]
Iteration 100 of 1000: loss=0.000889 " + "l1=0.000688" + "l2=0.000202 f=-0.553 shape=(1, 9000, 1)
logits [[ 3.5192916 -3.409232   3.4505146 -5.7727895]]
Iteration 200 of 1000: loss=0.000839 " + "l1=0.000646" + "l2=0.000193 f=-0.553 shape=(1, 9000, 1)
logits [[ 3.5160084 -3.4093544  3.4514287 -5.7719493]]
Iteration 300 of 1000: loss=0.000812 " + "l1=0.000584" + "l2=0.000228 f=-0.554 shape=(1, 9000, 1)
logits [[ 3.5114312 -3.4096766  3.4530725 -5.770023 ]]
Iteration 400 of 1000: loss=0.000805 " + "l1=0.000525" + "l2=0.00028 f=-0.554 shape=(1, 9000, 1)
logits [[ 3.5070992 -3.410067   3.454635  -5.767978 ]]
Iteration 500 of 1000: loss=0.000798 " + "l1=0.000468" + "l2=0.00033 f=-0.554 shape=(1, 9000, 1)
logits [[ 3.5026286 -3.4103658  3.455878  -5.7656207]]
Iteration 600 of 1000: loss=0.000868 " + "l1=0.000416" + "l2=0.000452 f=-0.555 shape=(1, 9000, 1)
logits [[ 3.498486  -3.4106596  3.456924  -5.763365 ]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.00056 " + "l1=0.00056" + "l2=0 f=-0.55 shape=(1, 9000, 1)
logits [[ 3.5521202 -3.4043617  3.440201  -5.788549 ]]
Iteration 100 of 1000: loss=0.000513 " + "l1=0.00041" + "l2=0.000103 f=-0.552 shape=(1, 9000, 1)
logits [[ 3.5293715 -3.407799   3.4474685 -5.7774553]]
Iteration 200 of 1000: loss=0.000495 " + "l1=0.000421" + "l2=7.35e-05 f=-0.552 shape=(1, 9000, 1)
logits [[ 3.5309193 -3.4071136  3.4466972 -5.778509 ]]
Iteration 300 of 1000: loss=0.000478 " + "l1=0.000414" + "l2=6.41e-05 f=-0.552 shape=(1, 9000, 1)
logits [[ 3.529837  -3.4072564  3.4471076 -5.7780204]]
Iteration 400 of 1000: loss=0.000561 " + "l1=0.000403" + "l2=0.000158 f=-0.552 shape=(1, 9000, 1)
logits [[ 3.5282116 -3.4074132  3.4476175 -5.7772293]]
const [0.0025]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.00028 " + "l1=0.00028" + "l2=0 f=-0.55 shape=(1, 9000, 1)
logits [[ 3.5521202 -3.4043617  3.440201  -5.788549 ]]
Iteration 100 of 1000: loss=0.000286 " + "l1=0.000225" + "l2=6.1e-05 f=-0.551 shape=(1, 9000, 1)
logits [[ 3.5357747 -3.4068084  3.4455988 -5.780485 ]]
const [0.00375]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00042 " + "l1=0.00042" + "l2=0 f=-0.55 shape=(1, 9000, 1)
logits [[ 3.5521202 -3.4043617  3.440201  -5.788549 ]]
Iteration 100 of 1000: loss=0.000403 " + "l1=0.000323" + "l2=8.02e-05 f=-0.552 shape=(1, 9000, 1)
logits [[ 3.5326    -3.4073083  3.4465513 -5.7789364]]
Iteration 200 of 1000: loss=0.00039 " + "l1=0.000336" + "l2=5.39e-05 f=-0.552 shape=(1, 9000, 1)
logits [[ 3.5349755 -3.4065533  3.4454522 -5.7803106]]
Iteration 300 of 1000: loss=0.00039 " + "l1=0.000334" + "l2=5.64e-05 f=-0.552 shape=(1, 9000, 1)
logits [[ 3.534564  -3.406625   3.44561   -5.7801347]]
const [0.003125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00035 " + "l1=0.00035" + "l2=0 f=-0.55 shape=(1, 9000, 1)
logits [[ 3.5521202 -3.4043617  3.440201  -5.788549 ]]
Iteration 100 of 1000: loss=0.000346 " + "l1=0.000275" + "l2=7.12e-05 f=-0.552 shape=(1, 9000, 1)
logits [[ 3.533891  -3.4069855  3.4460342 -5.7795568]]
Iteration 200 of 1000: loss=0.000323 " + "l1=0.000288" + "l2=3.53e-05 f=-0.551 shape=(1, 9000, 1)
logits [[ 3.5368164 -3.4061882  3.44479   -5.7811317]]
Iteration 300 of 1000: loss=0.000349 " + "l1=0.000287" + "l2=6.19e-05 f=-0.551 shape=(1, 9000, 1)
logits [[ 3.5368207 -3.4062293  3.4448216 -5.781132 ]]
--- 110.88331627845764 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0934 " + "l1=0.0934" + "l2=0 f=-0.55 shape=(1, 9000, 1)
logits [[ 3.5521202 -3.4043617  3.440201  -5.788549 ]]
Iteration 100 of 1000: loss=0.0925 " + "l1=0.0919" + "l2=0.000599 f=-0.553 shape=(1, 9000, 1)
logits [[ 3.4749863 -3.374793   3.4063497 -5.7174764]]
Iteration 200 of 1000: loss=0.0923 " + "l1=0.0917" + "l2=0.000654 f=-0.554 shape=(1, 9000, 1)
logits [[ 3.4621208 -3.370747   3.4009013 -5.70629  ]]
Iteration 300 of 1000: loss=0.0922 " + "l1=0.0914" + "l2=0.000779 f=-0.554 shape=(1, 9000, 1)
logits [[ 3.4479048 -3.366798   3.3951974 -5.6926684]]
Iteration 400 of 1000: loss=0.0921 " + "l1=0.0911" + "l2=0.000938 f=-0.555 shape=(1, 9000, 1)
logits [[ 3.4346857 -3.3636992  3.3901358 -5.6792216]]
Iteration 500 of 1000: loss=0.0919 " + "l1=0.0909" + "l2=0.00106 f=-0.555 shape=(1, 9000, 1)
logits [[ 3.422407  -3.3611815  3.385465  -5.6660404]]
Iteration 600 of 1000: loss=0.0919 " + "l1=0.0907" + "l2=0.0012 f=-0.555 shape=(1, 9000, 1)
logits [[ 3.4117737 -3.3589406  3.3812602 -5.6542063]]
Iteration 700 of 1000: loss=0.0918 " + "l1=0.0905" + "l2=0.00138 f=-0.555 shape=(1, 9000, 1)
logits [[ 3.4021404 -3.357226   3.377344  -5.6430283]]
Iteration 800 of 1000: loss=0.0918 " + "l1=0.0903" + "l2=0.0015 f=-0.555 shape=(1, 9000, 1)
logits [[ 3.3928564 -3.3557851  3.3735838 -5.632365 ]]
Iteration 900 of 1000: loss=0.0918 " + "l1=0.0901" + "l2=0.0017 f=-0.556 shape=(1, 9000, 1)
logits [[ 3.3837903 -3.3545175  3.3697557 -5.6221805]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.934 " + "l1=0.934" + "l2=0 f=-0.55 shape=(1, 9000, 1)
logits [[ 3.5521202 -3.4043617  3.440201  -5.788549 ]]
Iteration 100 of 1000: loss=0.862 " + "l1=0.816" + "l2=0.0454 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.9678023 -3.0322645  2.9709463 -5.1918178]]
Iteration 200 of 1000: loss=0.835 " + "l1=0.774" + "l2=0.0614 f=-0.578 shape=(1, 9000, 1)
logits [[ 2.7662785 -2.9064004  2.7815254 -4.9545326]]
Iteration 300 of 1000: loss=0.814 " + "l1=0.741" + "l2=0.0727 f=-0.576 shape=(1, 9000, 1)
logits [[ 2.644779  -2.8477266  2.6536226 -4.7550364]]
Iteration 400 of 1000: loss=0.794 " + "l1=0.709" + "l2=0.0851 f=-0.574 shape=(1, 9000, 1)
logits [[ 2.5212119 -2.8163137  2.5434837 -4.5429683]]
Iteration 500 of 1000: loss=0.775 " + "l1=0.682" + "l2=0.0936 f=-0.561 shape=(1, 9000, 1)
logits [[ 2.4456096 -2.7886014  2.458234  -4.3596616]]
Iteration 600 of 1000: loss=0.757 " + "l1=0.655" + "l2=0.102 f=-0.548 shape=(1, 9000, 1)
logits [[ 2.3646462 -2.7626958  2.3771448 -4.171416 ]]
Iteration 700 of 1000: loss=0.738 " + "l1=0.624" + "l2=0.114 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.2634072 -2.7228928  2.2776854 -3.9658773]]
Iteration 800 of 1000: loss=0.721 " + "l1=0.601" + "l2=0.119 f=-0.525 shape=(1, 9000, 1)
logits [[ 2.1989386 -2.6974554  2.2064366 -3.8075957]]
Iteration 900 of 1000: loss=0.703 " + "l1=0.58" + "l2=0.124 f=-0.513 shape=(1, 9000, 1)
logits [[ 2.1323946 -2.6624238  2.1385703 -3.6586816]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.34 " + "l1=9.34" + "l2=0 f=-0.55 shape=(1, 9000, 1)
logits [[ 3.5521202 -3.4043617  3.440201  -5.788549 ]]
Iteration 100 of 1000: loss=3.07 " + "l1=0" + "l2=3.07 f=-0.372 shape=(1, 9000, 1)
logits [[-0.5444476  -1.2889478   0.15497282  0.19035238]]
Iteration 200 of 1000: loss=1.92 " + "l1=0" + "l2=1.92 f=-0.388 shape=(1, 9000, 1)
logits [[-0.46354786 -1.3352467   0.10602328  0.14240351]]
Iteration 300 of 1000: loss=1.56 " + "l1=0.00337" + "l2=1.56 f=-0.394 shape=(1, 9000, 1)
logits [[-0.42231464 -1.3568664   0.10235047  0.09898546]]
Iteration 400 of 1000: loss=1.42 " + "l1=0" + "l2=1.42 f=-0.393 shape=(1, 9000, 1)
logits [[-0.43848237 -1.3712155   0.08203129  0.15588358]]
Iteration 500 of 1000: loss=1.27 " + "l1=0" + "l2=1.27 f=-0.394 shape=(1, 9000, 1)
logits [[-0.4095442  -1.398279    0.11023527  0.12160845]]
Iteration 600 of 1000: loss=1.17 " + "l1=0" + "l2=1.17 f=-0.387 shape=(1, 9000, 1)
logits [[-0.38961196 -1.4286834   0.12811497  0.14311442]]
Iteration 700 of 1000: loss=1.08 " + "l1=0" + "l2=1.08 f=-0.377 shape=(1, 9000, 1)
logits [[-0.3546708  -1.4428195   0.13886455  0.15236631]]
Iteration 800 of 1000: loss=0.998 " + "l1=0" + "l2=0.998 f=-0.361 shape=(1, 9000, 1)
logits [[-0.31825814 -1.4339589   0.14881882  0.15942726]]
Iteration 900 of 1000: loss=0.953 " + "l1=0" + "l2=0.953 f=-0.349 shape=(1, 9000, 1)
logits [[-0.2988381  -1.4260615   0.13858126  0.18895611]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.14 " + "l1=5.14" + "l2=0 f=-0.55 shape=(1, 9000, 1)
logits [[ 3.5521202 -3.4043617  3.440201  -5.788549 ]]
Iteration 100 of 1000: loss=3.04 " + "l1=1.97" + "l2=1.07 f=-0.45 shape=(1, 9000, 1)
logits [[ 0.8661543 -1.9418905  1.4266833 -2.1492083]]
Iteration 200 of 1000: loss=1.94 " + "l1=0.294" + "l2=1.65 f=-0.416 shape=(1, 9000, 1)
logits [[-0.2632172  -1.5217581   0.32801765 -0.20704037]]
Iteration 300 of 1000: loss=1.36 " + "l1=0.000848" + "l2=1.36 f=-0.401 shape=(1, 9000, 1)
logits [[-0.43402985 -1.367927    0.09955238  0.0980112 ]]
Iteration 400 of 1000: loss=1.18 " + "l1=0" + "l2=1.18 f=-0.406 shape=(1, 9000, 1)
logits [[-0.43297574 -1.4010718   0.08887252  0.12239791]]
Iteration 500 of 1000: loss=1.05 " + "l1=0.00511" + "l2=1.05 f=-0.4 shape=(1, 9000, 1)
logits [[-0.36868912 -1.4587078   0.11890662  0.1096115 ]]
Iteration 600 of 1000: loss=0.956 " + "l1=0.0164" + "l2=0.939 f=-0.386 shape=(1, 9000, 1)
logits [[-0.30572322 -1.4996862   0.14564864  0.11590018]]
Iteration 700 of 1000: loss=0.884 " + "l1=0" + "l2=0.884 f=-0.376 shape=(1, 9000, 1)
logits [[-0.29530832 -1.5308741   0.15279935  0.16799113]]
Iteration 800 of 1000: loss=0.837 " + "l1=0" + "l2=0.837 f=-0.374 shape=(1, 9000, 1)
logits [[-0.26342964 -1.5678408   0.15606423  0.17819348]]
Iteration 900 of 1000: loss=0.807 " + "l1=0" + "l2=0.807 f=-0.37 shape=(1, 9000, 1)
logits [[-0.24903333 -1.5898498   0.1610687   0.19651636]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.04 " + "l1=3.04" + "l2=0 f=-0.55 shape=(1, 9000, 1)
logits [[ 3.5521202 -3.4043617  3.440201  -5.788549 ]]
Iteration 100 of 1000: loss=2.26 " + "l1=1.82" + "l2=0.444 f=-0.53 shape=(1, 9000, 1)
logits [[ 1.774439  -2.3840623  2.0418437 -3.5535698]]
Iteration 200 of 1000: loss=1.91 " + "l1=1.29" + "l2=0.622 f=-0.484 shape=(1, 9000, 1)
logits [[ 1.0999486 -2.1024318  1.5154077 -2.4482682]]
Iteration 300 of 1000: loss=1.63 " + "l1=0.895" + "l2=0.738 f=-0.46 shape=(1, 9000, 1)
logits [[ 0.6464787 -1.9202776  1.0934013 -1.6599793]]
Iteration 400 of 1000: loss=1.37 " + "l1=0.482" + "l2=0.887 f=-0.435 shape=(1, 9000, 1)
logits [[ 0.1634925 -1.654056   0.6169953 -0.8656934]]
Iteration 500 of 1000: loss=1.11 " + "l1=0.115" + "l2=0.992 f=-0.39 shape=(1, 9000, 1)
logits [[-0.21715236 -1.455521    0.23294795 -0.12193338]]
Iteration 600 of 1000: loss=0.945 " + "l1=0" + "l2=0.945 f=-0.388 shape=(1, 9000, 1)
logits [[-0.31714147 -1.5091373   0.13525197  0.13979092]]
Iteration 700 of 1000: loss=0.853 " + "l1=0.0112" + "l2=0.842 f=-0.388 shape=(1, 9000, 1)
logits [[-0.2520227  -1.6175756   0.17635408  0.14204368]]
Iteration 800 of 1000: loss=0.79 " + "l1=0.0026" + "l2=0.787 f=-0.382 shape=(1, 9000, 1)
logits [[-0.23960772 -1.6884559   0.20353337  0.19553584]]
Iteration 900 of 1000: loss=0.74 " + "l1=0.00223" + "l2=0.738 f=-0.377 shape=(1, 9000, 1)
logits [[-0.23586589 -1.7316837   0.23244204  0.22556835]]
--- 294.2313423156738 seconds ---
Adv result:3
Loading record A01522
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0834 " + "l1=0.0834" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 5.4894776 -2.8527164  3.0280018 -8.3666725]]
Iteration 100 of 1000: loss=0.083 " + "l1=0.0827" + "l2=0.000269 f=-0.672 shape=(1, 9000, 1)
logits [[ 5.450365  -2.8235216  3.0066798 -8.322817 ]]
Iteration 200 of 1000: loss=0.0829 " + "l1=0.0826" + "l2=0.000259 f=-0.671 shape=(1, 9000, 1)
logits [[ 5.444007 -2.817001  3.002184 -8.315062]]
Iteration 300 of 1000: loss=0.0828 " + "l1=0.0824" + "l2=0.000317 f=-0.67 shape=(1, 9000, 1)
logits [[ 5.4347987 -2.808575   2.9963303 -8.304028 ]]
Iteration 400 of 1000: loss=0.0827 " + "l1=0.0822" + "l2=0.000427 f=-0.669 shape=(1, 9000, 1)
logits [[ 5.424677  -2.7989113  2.9898162 -8.291825 ]]
Iteration 500 of 1000: loss=0.0825 " + "l1=0.082" + "l2=0.000513 f=-0.668 shape=(1, 9000, 1)
logits [[ 5.414397  -2.7886708  2.98306   -8.2794695]]
Iteration 600 of 1000: loss=0.0825 " + "l1=0.0818" + "l2=0.000647 f=-0.666 shape=(1, 9000, 1)
logits [[ 5.404728  -2.7788374  2.9767108 -8.2676735]]
Iteration 700 of 1000: loss=0.0824 " + "l1=0.0816" + "l2=0.000796 f=-0.665 shape=(1, 9000, 1)
logits [[ 5.3952584 -2.7692378  2.9706953 -8.25627  ]]
Iteration 800 of 1000: loss=0.0824 " + "l1=0.0815" + "l2=0.000884 f=-0.664 shape=(1, 9000, 1)
logits [[ 5.3862433 -2.760346   2.965408  -8.245565 ]]
Iteration 900 of 1000: loss=0.0824 " + "l1=0.0813" + "l2=0.00106 f=-0.662 shape=(1, 9000, 1)
logits [[ 5.3774166 -2.7519507  2.9605255 -8.235211 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.834 " + "l1=0.834" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 5.4894776 -2.8527164  3.0280018 -8.3666725]]
Iteration 100 of 1000: loss=0.798 " + "l1=0.78" + "l2=0.0176 f=-0.645 shape=(1, 9000, 1)
logits [[ 5.199397  -2.6007745  2.8510253 -8.029545 ]]
Iteration 200 of 1000: loss=0.778 " + "l1=0.754" + "l2=0.0243 f=-0.628 shape=(1, 9000, 1)
logits [[ 5.0631323 -2.4749181  2.7608683 -7.861557 ]]
Iteration 300 of 1000: loss=0.76 " + "l1=0.726" + "l2=0.0338 f=-0.608 shape=(1, 9000, 1)
logits [[ 4.9285665 -2.3341475  2.6608925 -7.688784 ]]
Iteration 400 of 1000: loss=0.745 " + "l1=0.702" + "l2=0.0431 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.812652  -2.2063382  2.5760796 -7.539706 ]]
Iteration 500 of 1000: loss=0.73 " + "l1=0.679" + "l2=0.0516 f=-0.574 shape=(1, 9000, 1)
logits [[ 4.6853814 -2.1033661  2.5048723 -7.3843307]]
Iteration 600 of 1000: loss=0.717 " + "l1=0.66" + "l2=0.0568 f=-0.562 shape=(1, 9000, 1)
logits [[ 4.5718617 -2.0329394  2.4583225 -7.2461495]]
Iteration 700 of 1000: loss=0.704 " + "l1=0.642" + "l2=0.0615 f=-0.549 shape=(1, 9000, 1)
logits [[ 4.4604154 -1.9640709  2.4202058 -7.112736 ]]
Iteration 800 of 1000: loss=0.691 " + "l1=0.624" + "l2=0.067 f=-0.536 shape=(1, 9000, 1)
logits [[ 4.3470507 -1.8964472  2.3823729 -6.9782662]]
Iteration 900 of 1000: loss=0.682 " + "l1=0.61" + "l2=0.0714 f=-0.526 shape=(1, 9000, 1)
logits [[ 4.254911  -1.8476961  2.35453   -6.866791 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.34 " + "l1=8.34" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 5.4894776 -2.8527164  3.0280018 -8.3666725]]
Iteration 100 of 1000: loss=4.76 " + "l1=2.98" + "l2=1.77 f=-0.392 shape=(1, 9000, 1)
logits [[ 2.0814621 -0.9031937  1.6938039 -4.4402213]]
Iteration 200 of 1000: loss=3.77 " + "l1=1.9" + "l2=1.87 f=-0.307 shape=(1, 9000, 1)
logits [[ 1.3812945  -0.51990587  1.3738303  -3.464237  ]]
Iteration 300 of 1000: loss=3.14 " + "l1=1.25" + "l2=1.89 f=-0.267 shape=(1, 9000, 1)
logits [[ 1.0289766  -0.21880709  1.0289986  -2.906722  ]]
Iteration 400 of 1000: loss=2.66 " + "l1=0.73" + "l2=1.93 f=-0.227 shape=(1, 9000, 1)
logits [[ 7.2113580e-01 -2.0186286e-03  7.2845483e-01 -2.3545971e+00]]
Iteration 500 of 1000: loss=2.32 " + "l1=0.316" + "l2=2 f=-0.192 shape=(1, 9000, 1)
logits [[ 0.49344048  0.17790377  0.4884786  -1.9292716 ]]
Iteration 600 of 1000: loss=2.04 " + "l1=0.12" + "l2=1.92 f=-0.184 shape=(1, 9000, 1)
logits [[ 0.36005518  0.2510947   0.37085527 -1.7198054 ]]
Iteration 700 of 1000: loss=1.9 " + "l1=0.00277" + "l2=1.89 f=-0.177 shape=(1, 9000, 1)
logits [[ 0.29112795  0.29533565  0.29811    -1.5941063 ]]
Iteration 800 of 1000: loss=1.81 " + "l1=0.00448" + "l2=1.8 f=-0.188 shape=(1, 9000, 1)
logits [[ 0.26922676  0.27257004  0.27705404 -1.5717633 ]]
Iteration 900 of 1000: loss=1.75 " + "l1=0.0138" + "l2=1.73 f=-0.2 shape=(1, 9000, 1)
logits [[ 0.24991968  0.25439736  0.2681847  -1.5744967 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.59 " + "l1=4.59" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 5.4894776 -2.8527164  3.0280018 -8.3666725]]
Iteration 100 of 1000: loss=3.36 " + "l1=2.68" + "l2=0.68 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.41181   -1.4663008  2.0763423 -5.9807076]]
Iteration 200 of 1000: loss=2.82 " + "l1=1.99" + "l2=0.832 f=-0.408 shape=(1, 9000, 1)
logits [[ 2.4882598 -1.1226481  1.8307872 -4.8275576]]
Iteration 300 of 1000: loss=2.5 " + "l1=1.58" + "l2=0.916 f=-0.356 shape=(1, 9000, 1)
logits [[ 1.9961555 -0.8817794  1.6388363 -4.1755595]]
Iteration 400 of 1000: loss=2.22 " + "l1=1.27" + "l2=0.949 f=-0.33 shape=(1, 9000, 1)
logits [[ 1.6026717  -0.70563054  1.4998662  -3.7157626 ]]
Iteration 500 of 1000: loss=1.99 " + "l1=1.03" + "l2=0.956 f=-0.301 shape=(1, 9000, 1)
logits [[ 1.3267612  -0.55030316  1.3232895  -3.3047612 ]]
Iteration 600 of 1000: loss=1.83 " + "l1=0.883" + "l2=0.946 f=-0.282 shape=(1, 9000, 1)
logits [[ 1.1808553 -0.4239496  1.1792066 -3.0632942]]
Iteration 700 of 1000: loss=1.71 " + "l1=0.771" + "l2=0.941 f=-0.269 shape=(1, 9000, 1)
logits [[ 1.0490596  -0.34441993  1.0567098  -2.8372476 ]]
Iteration 800 of 1000: loss=1.64 " + "l1=0.708" + "l2=0.928 f=-0.27 shape=(1, 9000, 1)
logits [[ 0.9753156 -0.3115686  0.9761035 -2.7193696]]
Iteration 900 of 1000: loss=1.59 " + "l1=0.658" + "l2=0.927 f=-0.273 shape=(1, 9000, 1)
logits [[ 0.90446556 -0.29236543  0.897115   -2.600679  ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=6.47 " + "l1=6.47" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 5.4894776 -2.8527164  3.0280018 -8.3666725]]
Iteration 100 of 1000: loss=4.14 " + "l1=2.88" + "l2=1.26 f=-0.43 shape=(1, 9000, 1)
logits [[ 2.5979295 -1.118633   1.8556452 -5.0532346]]
Iteration 200 of 1000: loss=3.38 " + "l1=1.92" + "l2=1.46 f=-0.345 shape=(1, 9000, 1)
logits [[ 1.7011371 -0.7787239  1.591957  -3.8937116]]
Iteration 300 of 1000: loss=2.86 " + "l1=1.49" + "l2=1.38 f=-0.303 shape=(1, 9000, 1)
logits [[ 1.3508316 -0.5575024  1.3599946 -3.364714 ]]
Iteration 400 of 1000: loss=2.49 " + "l1=1.11" + "l2=1.38 f=-0.265 shape=(1, 9000, 1)
logits [[ 1.0966961  -0.32546747  1.1028733  -2.9346318 ]]
Iteration 500 of 1000: loss=2.2 " + "l1=0.805" + "l2=1.4 f=-0.24 shape=(1, 9000, 1)
logits [[ 0.8634003  -0.17503789  0.8623946  -2.5114017 ]]
Iteration 600 of 1000: loss=2.03 " + "l1=0.685" + "l2=1.34 f=-0.229 shape=(1, 9000, 1)
logits [[ 0.757409   -0.11524575  0.7687734  -2.3274977 ]]
Iteration 700 of 1000: loss=1.9 " + "l1=0.603" + "l2=1.3 f=-0.227 shape=(1, 9000, 1)
logits [[ 0.68910193 -0.07951131  0.6980847  -2.2141652 ]]
Iteration 800 of 1000: loss=1.81 " + "l1=0.516" + "l2=1.3 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.61478627 -0.0491636   0.6169125  -2.1069646 ]]
Iteration 900 of 1000: loss=1.76 " + "l1=0.447" + "l2=1.31 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.55351317 -0.02348077  0.55005586 -2.0239284 ]]
--- 295.3384552001953 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0246 " + "l1=0.0246" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 5.4894776 -2.8527164  3.0280018 -8.3666725]]
Iteration 100 of 1000: loss=0.0245 " + "l1=0.0243" + "l2=0.000151 f=-0.676 shape=(1, 9000, 1)
logits [[ 5.463398  -2.8565316  3.032562  -8.344419 ]]
Iteration 200 of 1000: loss=0.0244 " + "l1=0.0243" + "l2=0.000126 f=-0.676 shape=(1, 9000, 1)
logits [[ 5.4619403 -2.8573596  3.0336547 -8.343467 ]]
Iteration 300 of 1000: loss=0.0244 " + "l1=0.0242" + "l2=0.000153 f=-0.676 shape=(1, 9000, 1)
logits [[ 5.45837   -2.8586779  3.0352826 -8.340711 ]]
Iteration 400 of 1000: loss=0.0244 " + "l1=0.0242" + "l2=0.000192 f=-0.677 shape=(1, 9000, 1)
logits [[ 5.4542117 -2.8600137  3.0369864 -8.337429 ]]
Iteration 500 of 1000: loss=0.0243 " + "l1=0.0241" + "l2=0.000228 f=-0.677 shape=(1, 9000, 1)
logits [[ 5.449847 -2.861255  3.038717 -8.333981]]
Iteration 600 of 1000: loss=0.0244 " + "l1=0.0241" + "l2=0.000318 f=-0.677 shape=(1, 9000, 1)
logits [[ 5.4453936 -2.862257   3.0403128 -8.3304205]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.246 " + "l1=0.246" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 5.4894776 -2.8527164  3.0280018 -8.3666725]]
Iteration 100 of 1000: loss=0.232 " + "l1=0.225" + "l2=0.00717 f=-0.681 shape=(1, 9000, 1)
logits [[ 5.3186717 -2.886403   3.0661669 -8.220919 ]]
Iteration 200 of 1000: loss=0.226 " + "l1=0.216" + "l2=0.0101 f=-0.679 shape=(1, 9000, 1)
logits [[ 5.2453055 -2.8985574  3.0867987 -8.150893 ]]
Iteration 300 of 1000: loss=0.22 " + "l1=0.207" + "l2=0.0128 f=-0.678 shape=(1, 9000, 1)
logits [[ 5.182279  -2.9102423  3.1073904 -8.090975 ]]
Iteration 400 of 1000: loss=0.215 " + "l1=0.2" + "l2=0.015 f=-0.677 shape=(1, 9000, 1)
logits [[ 5.1293244 -2.9223573  3.1282356 -8.042778 ]]
Iteration 500 of 1000: loss=0.21 " + "l1=0.193" + "l2=0.0175 f=-0.675 shape=(1, 9000, 1)
logits [[ 5.0762215 -2.9318612  3.1496887 -7.9950175]]
Iteration 600 of 1000: loss=0.205 " + "l1=0.185" + "l2=0.02 f=-0.674 shape=(1, 9000, 1)
logits [[ 5.0221395 -2.9412715  3.1685061 -7.9453993]]
Iteration 700 of 1000: loss=0.201 " + "l1=0.178" + "l2=0.0225 f=-0.672 shape=(1, 9000, 1)
logits [[ 4.9663253 -2.9469845  3.1845648 -7.8918543]]
Iteration 800 of 1000: loss=0.196 " + "l1=0.171" + "l2=0.0249 f=-0.67 shape=(1, 9000, 1)
logits [[ 4.9116464 -2.9531515  3.201601  -7.838151 ]]
Iteration 900 of 1000: loss=0.191 " + "l1=0.164" + "l2=0.0267 f=-0.667 shape=(1, 9000, 1)
logits [[ 4.8636303 -2.9591856  3.2187304 -7.7902207]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.46 " + "l1=2.46" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 5.4894776 -2.8527164  3.0280018 -8.3666725]]
Iteration 100 of 1000: loss=0.749 " + "l1=0" + "l2=0.749 f=-0.671 shape=(1, 9000, 1)
logits [[ 3.5829155 -3.292632   3.5949376 -6.5693984]]
Iteration 200 of 1000: loss=0.496 " + "l1=0.000332" + "l2=0.495 f=-0.659 shape=(1, 9000, 1)
logits [[ 3.6020617 -3.2801878  3.6017299 -6.560808 ]]
Iteration 300 of 1000: loss=0.404 " + "l1=0" + "l2=0.404 f=-0.658 shape=(1, 9000, 1)
logits [[ 3.6246927 -3.305165   3.6247962 -6.576651 ]]
Iteration 400 of 1000: loss=0.36 " + "l1=0.0114" + "l2=0.349 f=-0.66 shape=(1, 9000, 1)
logits [[ 3.642349  -3.3190777  3.6309218 -6.5958166]]
Iteration 500 of 1000: loss=0.323 " + "l1=0" + "l2=0.323 f=-0.662 shape=(1, 9000, 1)
logits [[ 3.6388087 -3.3398607  3.647958  -6.594067 ]]
Iteration 600 of 1000: loss=0.293 " + "l1=0.000182" + "l2=0.293 f=-0.662 shape=(1, 9000, 1)
logits [[ 3.6546009 -3.3466387  3.6544187 -6.6112413]]
Iteration 700 of 1000: loss=0.276 " + "l1=0.00233" + "l2=0.273 f=-0.663 shape=(1, 9000, 1)
logits [[ 3.6637523 -3.3520288  3.6614206 -6.6269507]]
Iteration 800 of 1000: loss=0.259 " + "l1=0" + "l2=0.259 f=-0.664 shape=(1, 9000, 1)
logits [[ 3.6579564 -3.3468957  3.6582386 -6.626455 ]]
Iteration 900 of 1000: loss=0.246 " + "l1=0" + "l2=0.246 f=-0.664 shape=(1, 9000, 1)
logits [[ 3.6491106 -3.3430076  3.6581275 -6.6220355]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.35 " + "l1=1.35" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 5.4894776 -2.8527164  3.0280018 -8.3666725]]
Iteration 100 of 1000: loss=0.853 " + "l1=0.524" + "l2=0.329 f=-0.679 shape=(1, 9000, 1)
logits [[ 4.2851562 -3.0879638  3.3319652 -7.2457023]]
Iteration 200 of 1000: loss=0.508 " + "l1=0.0138" + "l2=0.494 f=-0.664 shape=(1, 9000, 1)
logits [[ 3.640198  -3.2903225  3.6150367 -6.6227536]]
Iteration 300 of 1000: loss=0.375 " + "l1=0.00061" + "l2=0.374 f=-0.66 shape=(1, 9000, 1)
logits [[ 3.6409194 -3.3064187  3.6398096 -6.612581 ]]
Iteration 400 of 1000: loss=0.32 " + "l1=0.00447" + "l2=0.315 f=-0.663 shape=(1, 9000, 1)
logits [[ 3.6661856 -3.332172   3.6580656 -6.642834 ]]
Iteration 500 of 1000: loss=0.283 " + "l1=0" + "l2=0.283 f=-0.667 shape=(1, 9000, 1)
logits [[ 3.6811688 -3.3569965  3.6817417 -6.672115 ]]
Iteration 600 of 1000: loss=0.262 " + "l1=0" + "l2=0.262 f=-0.668 shape=(1, 9000, 1)
logits [[ 3.6824746 -3.3610396  3.6878493 -6.679579 ]]
Iteration 700 of 1000: loss=0.245 " + "l1=0.00326" + "l2=0.242 f=-0.666 shape=(1, 9000, 1)
logits [[ 3.6818032 -3.3472595  3.6758742 -6.6724653]]
Iteration 800 of 1000: loss=0.23 " + "l1=0" + "l2=0.23 f=-0.665 shape=(1, 9000, 1)
logits [[ 3.664097  -3.3421543  3.673057  -6.656314 ]]
Iteration 900 of 1000: loss=0.214 " + "l1=0.00287" + "l2=0.211 f=-0.665 shape=(1, 9000, 1)
logits [[ 3.6649067 -3.3272703  3.6596928 -6.656782 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.8 " + "l1=0.8" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 5.4894776 -2.8527164  3.0280018 -8.3666725]]
Iteration 100 of 1000: loss=0.65 " + "l1=0.564" + "l2=0.0852 f=-0.688 shape=(1, 9000, 1)
logits [[ 4.920986  -2.9783814  3.1841958 -7.8779163]]
Iteration 200 of 1000: loss=0.556 " + "l1=0.409" + "l2=0.147 f=-0.677 shape=(1, 9000, 1)
logits [[ 4.5401306 -3.0383298  3.2817616 -7.4920154]]
Iteration 300 of 1000: loss=0.461 " + "l1=0.252" + "l2=0.208 f=-0.675 shape=(1, 9000, 1)
logits [[ 4.195637  -3.1390207  3.4189143 -7.177289 ]]
Iteration 400 of 1000: loss=0.366 " + "l1=0.118" + "l2=0.248 f=-0.67 shape=(1, 9000, 1)
logits [[ 3.9245238 -3.2418103  3.5629232 -6.9238815]]
Iteration 500 of 1000: loss=0.302 " + "l1=0.028" + "l2=0.274 f=-0.668 shape=(1, 9000, 1)
logits [[ 3.7240403 -3.3097477  3.637929  -6.724111 ]]
Iteration 600 of 1000: loss=0.255 " + "l1=0.00226" + "l2=0.253 f=-0.668 shape=(1, 9000, 1)
logits [[ 3.6710663 -3.3301034  3.6641173 -6.677107 ]]
Iteration 700 of 1000: loss=0.226 " + "l1=0.0061" + "l2=0.22 f=-0.666 shape=(1, 9000, 1)
logits [[ 3.6953027 -3.3432117  3.6765413 -6.6942744]]
Iteration 800 of 1000: loss=0.2 " + "l1=0" + "l2=0.2 f=-0.664 shape=(1, 9000, 1)
logits [[ 3.693045 -3.362471  3.696023 -6.68405 ]]
Iteration 900 of 1000: loss=0.179 " + "l1=0" + "l2=0.179 f=-0.663 shape=(1, 9000, 1)
logits [[ 3.6966732 -3.3653474  3.6973867 -6.6804533]]
--- 281.5689353942871 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.139 " + "l1=0.139" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 5.4894776 -2.8527164  3.0280018 -8.3666725]]
Iteration 100 of 1000: loss=0.138 " + "l1=0.137" + "l2=0.000503 f=-0.671 shape=(1, 9000, 1)
logits [[ 5.4329214 -2.833467   3.0070972 -8.289083 ]]
Iteration 200 of 1000: loss=0.137 " + "l1=0.137" + "l2=0.000547 f=-0.669 shape=(1, 9000, 1)
logits [[ 5.4195757 -2.827746   3.0024366 -8.270978 ]]
Iteration 300 of 1000: loss=0.137 " + "l1=0.137" + "l2=0.000695 f=-0.667 shape=(1, 9000, 1)
logits [[ 5.403364  -2.8205214  2.996347  -8.248156 ]]
Iteration 400 of 1000: loss=0.137 " + "l1=0.136" + "l2=0.000849 f=-0.665 shape=(1, 9000, 1)
logits [[ 5.3872166 -2.812619   2.9898887 -8.225058 ]]
Iteration 500 of 1000: loss=0.137 " + "l1=0.136" + "l2=0.00104 f=-0.663 shape=(1, 9000, 1)
logits [[ 5.3719864 -2.8044188  2.9835453 -8.20267  ]]
Iteration 600 of 1000: loss=0.137 " + "l1=0.135" + "l2=0.00119 f=-0.661 shape=(1, 9000, 1)
logits [[ 5.3575363 -2.7963545  2.9775474 -8.181307 ]]
Iteration 700 of 1000: loss=0.136 " + "l1=0.135" + "l2=0.00145 f=-0.658 shape=(1, 9000, 1)
logits [[ 5.3432193 -2.7885535  2.9718869 -8.160445 ]]
Iteration 800 of 1000: loss=0.136 " + "l1=0.135" + "l2=0.00164 f=-0.656 shape=(1, 9000, 1)
logits [[ 5.3293467 -2.7808828  2.966588  -8.140446 ]]
Iteration 900 of 1000: loss=0.136 " + "l1=0.134" + "l2=0.00174 f=-0.654 shape=(1, 9000, 1)
logits [[ 5.3161573 -2.7736416  2.9616175 -8.121129 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.39 " + "l1=1.39" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 5.4894776 -2.8527164  3.0280018 -8.3666725]]
Iteration 100 of 1000: loss=1.31 " + "l1=1.27" + "l2=0.0379 f=-0.633 shape=(1, 9000, 1)
logits [[ 5.0108156 -2.6977255  2.857989  -7.7050033]]
Iteration 200 of 1000: loss=1.27 " + "l1=1.21" + "l2=0.06 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.7520423 -2.6071994  2.7646358 -7.3182316]]
Iteration 300 of 1000: loss=1.23 " + "l1=1.15" + "l2=0.0813 f=-0.574 shape=(1, 9000, 1)
logits [[ 4.5243483 -2.5405278  2.6931715 -6.971301 ]]
Iteration 400 of 1000: loss=1.2 " + "l1=1.1" + "l2=0.0998 f=-0.552 shape=(1, 9000, 1)
logits [[ 4.3184276 -2.4853952  2.6362505 -6.677669 ]]
Iteration 500 of 1000: loss=1.17 " + "l1=1.06" + "l2=0.117 f=-0.534 shape=(1, 9000, 1)
logits [[ 4.1340013 -2.4281106  2.5808558 -6.4237947]]
Iteration 600 of 1000: loss=1.15 " + "l1=1.01" + "l2=0.136 f=-0.516 shape=(1, 9000, 1)
logits [[ 3.9412746 -2.3647997  2.5234053 -6.165857 ]]
Iteration 700 of 1000: loss=1.12 " + "l1=0.959" + "l2=0.157 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.7172246 -2.2911325  2.4689877 -5.8765597]]
Iteration 800 of 1000: loss=1.09 " + "l1=0.917" + "l2=0.172 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.5430806 -2.237661   2.4162138 -5.6281023]]
Iteration 900 of 1000: loss=1.06 " + "l1=0.879" + "l2=0.184 f=-0.456 shape=(1, 9000, 1)
logits [[ 3.3921137 -2.172567   2.356335  -5.400268 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=13.9 " + "l1=13.9" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 5.4894776 -2.8527164  3.0280018 -8.3666725]]
Iteration 100 of 1000: loss=6.51 " + "l1=3.67" + "l2=2.84 f=-0.257 shape=(1, 9000, 1)
logits [[ 1.301144  -1.3074543  1.3241408 -2.3458247]]
Iteration 200 of 1000: loss=4.28 " + "l1=0.589" + "l2=3.7 f=-0.0912 shape=(1, 9000, 1)
logits [[ 0.19254984 -0.9315573   0.48142973 -0.10731412]]
Iteration 300 of 1000: loss=3.06 " + "l1=0.0582" + "l2=3 f=-0.0804 shape=(1, 9000, 1)
logits [[ 0.02964568 -0.85072196  0.27884305  0.22061995]]
Iteration 400 of 1000: loss=2.64 " + "l1=0" + "l2=2.64 f=-0.0778 shape=(1, 9000, 1)
logits [[ 0.02920912 -0.8820542   0.26755333  0.27406397]]
Iteration 500 of 1000: loss=2.43 " + "l1=0" + "l2=2.43 f=-0.0715 shape=(1, 9000, 1)
logits [[ 0.07143594 -0.912692    0.27694812  0.2783925 ]]
Iteration 600 of 1000: loss=2.27 " + "l1=0.00363" + "l2=2.27 f=-0.0737 shape=(1, 9000, 1)
logits [[ 0.08637177 -0.9600133   0.29125938  0.28762817]]
Iteration 700 of 1000: loss=2.14 " + "l1=0.0108" + "l2=2.13 f=-0.0777 shape=(1, 9000, 1)
logits [[ 0.10575396 -1.0036907   0.2990514   0.28824496]]
Iteration 800 of 1000: loss=2.03 " + "l1=0.00713" + "l2=2.02 f=-0.0843 shape=(1, 9000, 1)
logits [[ 0.11365753 -1.0321231   0.29419124  0.28706092]]
Iteration 900 of 1000: loss=1.94 " + "l1=0" + "l2=1.94 f=-0.0899 shape=(1, 9000, 1)
logits [[ 0.11779696 -1.0435691   0.28077847  0.28527635]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.62 " + "l1=7.62" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 5.4894776 -2.8527164  3.0280018 -8.3666725]]
Iteration 100 of 1000: loss=4.81 " + "l1=3.23" + "l2=1.58 f=-0.384 shape=(1, 9000, 1)
logits [[ 2.1011    -1.8937132  2.0336802 -3.7771215]]
Iteration 200 of 1000: loss=3.81 " + "l1=2.12" + "l2=1.68 f=-0.253 shape=(1, 9000, 1)
logits [[ 1.4114529 -1.388391   1.4119009 -2.4475684]]
Iteration 300 of 1000: loss=3.09 " + "l1=1.32" + "l2=1.77 f=-0.147 shape=(1, 9000, 1)
logits [[ 0.97980267 -1.141278    0.98605514 -1.4128131 ]]
Iteration 400 of 1000: loss=2.57 " + "l1=0.602" + "l2=1.97 f=-0.0765 shape=(1, 9000, 1)
logits [[ 0.5195642  -0.96401656  0.61687416 -0.4783958 ]]
Iteration 500 of 1000: loss=2.25 " + "l1=0.138" + "l2=2.11 f=-0.0498 shape=(1, 9000, 1)
logits [[ 0.21827424 -0.9166515   0.37525898  0.12390423]]
Iteration 600 of 1000: loss=2 " + "l1=0" + "l2=2 f=-0.0435 shape=(1, 9000, 1)
logits [[ 0.14816774 -0.9388117   0.30640668  0.31029865]]
Iteration 700 of 1000: loss=1.82 " + "l1=0" + "l2=1.82 f=-0.0467 shape=(1, 9000, 1)
logits [[ 0.1975047  -1.0084304   0.30624434  0.31786215]]
Iteration 800 of 1000: loss=1.63 " + "l1=0.0124" + "l2=1.62 f=-0.0553 shape=(1, 9000, 1)
logits [[ 0.27042514 -1.1066115   0.31888554  0.29626366]]
Iteration 900 of 1000: loss=1.5 " + "l1=0.00601" + "l2=1.49 f=-0.0661 shape=(1, 9000, 1)
logits [[ 0.299946   -1.1784079   0.3124973   0.30157578]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.5 " + "l1=4.5" + "l2=0 f=-0.675 shape=(1, 9000, 1)
logits [[ 5.4894776 -2.8527164  3.0280018 -8.3666725]]
Iteration 100 of 1000: loss=3.54 " + "l1=2.97" + "l2=0.566 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.4948068 -2.3569908  2.4711926 -5.651459 ]]
Iteration 200 of 1000: loss=3.01 " + "l1=2.16" + "l2=0.855 f=-0.396 shape=(1, 9000, 1)
logits [[ 2.4408267 -1.9860754  2.1610944 -4.1985283]]
Iteration 300 of 1000: loss=2.61 " + "l1=1.63" + "l2=0.978 f=-0.315 shape=(1, 9000, 1)
logits [[ 1.7953432 -1.634149   1.7903253 -3.213279 ]]
Iteration 400 of 1000: loss=2.32 " + "l1=1.34" + "l2=0.979 f=-0.257 shape=(1, 9000, 1)
logits [[ 1.5041155 -1.41394    1.5024649 -2.62004  ]]
Iteration 500 of 1000: loss=2.12 " + "l1=1.13" + "l2=0.986 f=-0.225 shape=(1, 9000, 1)
logits [[ 1.2876662 -1.279182   1.2884518 -2.1974425]]
Iteration 600 of 1000: loss=2 " + "l1=1" + "l2=0.999 f=-0.209 shape=(1, 9000, 1)
logits [[ 1.1627485 -1.2466964  1.1619631 -1.9154472]]
Iteration 700 of 1000: loss=1.88 " + "l1=0.889" + "l2=0.993 f=-0.2 shape=(1, 9000, 1)
logits [[ 1.0621803 -1.2597219  1.0672301 -1.667712 ]]
Iteration 800 of 1000: loss=1.74 " + "l1=0.74" + "l2=1 f=-0.19 shape=(1, 9000, 1)
logits [[ 0.9347708  -1.2963008   0.93827814 -1.3385038 ]]
Iteration 900 of 1000: loss=1.61 " + "l1=0.613" + "l2=0.992 f=-0.176 shape=(1, 9000, 1)
logits [[ 0.83247817 -1.3265947   0.8377995  -1.0491959 ]]
--- 301.9145083427429 seconds ---
Adv result:3
Loading record A01550
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0221 " + "l1=0.0221" + "l2=0 f=-0.108 shape=(1, 9000, 1)
logits [[ 1.0933142 -1.1123374  0.5119365 -0.9263808]]
Iteration 100 of 1000: loss=0.0216 " + "l1=0.0213" + "l2=0.00036 f=-0.106 shape=(1, 9000, 1)
logits [[ 1.044949   -1.0817002   0.48960721 -0.87882566]]
Iteration 200 of 1000: loss=0.0215 " + "l1=0.0212" + "l2=0.000361 f=-0.106 shape=(1, 9000, 1)
logits [[ 1.041226   -1.0773163   0.48698798 -0.87518305]]
Iteration 300 of 1000: loss=0.0215 " + "l1=0.0211" + "l2=0.000406 f=-0.106 shape=(1, 9000, 1)
logits [[ 1.0355386 -1.0720735  0.4835265 -0.869518 ]]
Iteration 400 of 1000: loss=0.0215 " + "l1=0.021" + "l2=0.000488 f=-0.105 shape=(1, 9000, 1)
logits [[ 1.0303108 -1.0673779  0.480221  -0.8643895]]
Iteration 500 of 1000: loss=0.0214 " + "l1=0.0209" + "l2=0.000543 f=-0.105 shape=(1, 9000, 1)
logits [[ 1.0257099  -1.0636258   0.47745362 -0.8598652 ]]
Iteration 600 of 1000: loss=0.0215 " + "l1=0.0208" + "l2=0.000673 f=-0.105 shape=(1, 9000, 1)
logits [[ 1.0210522 -1.0597005  0.4746558 -0.8552286]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.221 " + "l1=0.221" + "l2=0 f=-0.108 shape=(1, 9000, 1)
logits [[ 1.0933142 -1.1123374  0.5119365 -0.9263808]]
Iteration 100 of 1000: loss=0.176 " + "l1=0.143" + "l2=0.0329 f=-0.0861 shape=(1, 9000, 1)
logits [[ 0.62294376 -0.8101187   0.28037992 -0.4375849 ]]
Iteration 200 of 1000: loss=0.157 " + "l1=0.11" + "l2=0.0466 f=-0.0844 shape=(1, 9000, 1)
logits [[ 0.40592387 -0.69674015  0.19340156 -0.24038523]]
Iteration 300 of 1000: loss=0.141 " + "l1=0.087" + "l2=0.0539 f=-0.0851 shape=(1, 9000, 1)
logits [[ 0.25982407 -0.6105904   0.13104424 -0.12065726]]
Iteration 400 of 1000: loss=0.123 " + "l1=0.0594" + "l2=0.0638 f=-0.0858 shape=(1, 9000, 1)
logits [[ 0.08856896 -0.50500935  0.05847169  0.01485892]]
Iteration 500 of 1000: loss=0.105 " + "l1=0.0419" + "l2=0.0627 f=-0.0832 shape=(1, 9000, 1)
logits [[ 0.03381852 -0.38518736 -0.00565431  0.02408061]]
Iteration 600 of 1000: loss=0.0904 " + "l1=0.0348" + "l2=0.0556 f=-0.0884 shape=(1, 9000, 1)
logits [[ 0.01338987 -0.33451405 -0.02295072 -0.00966246]]
Iteration 700 of 1000: loss=0.0806 " + "l1=0.0287" + "l2=0.0519 f=-0.103 shape=(1, 9000, 1)
logits [[-0.03698231 -0.31260908 -0.03655586 -0.02585089]]
Iteration 800 of 1000: loss=0.0737 " + "l1=0.026" + "l2=0.0478 f=-0.112 shape=(1, 9000, 1)
logits [[-0.04471913 -0.30278543 -0.04313789 -0.05754551]]
Iteration 900 of 1000: loss=0.0697 " + "l1=0.0244" + "l2=0.0453 f=-0.114 shape=(1, 9000, 1)
logits [[-0.05186097 -0.29578635 -0.05316811 -0.05570865]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.21 " + "l1=2.21" + "l2=0 f=-0.108 shape=(1, 9000, 1)
logits [[ 1.0933142 -1.1123374  0.5119365 -0.9263808]]
Iteration 100 of 1000: loss=0.312 " + "l1=0.0143" + "l2=0.298 f=-0.128 shape=(1, 9000, 1)
logits [[-0.1198809  -0.13413864 -0.12428766 -0.13397288]]
Iteration 200 of 1000: loss=0.228 " + "l1=0" + "l2=0.228 f=-0.125 shape=(1, 9000, 1)
logits [[-0.1265553  -0.11820047 -0.1298699  -0.12677696]]
Iteration 300 of 1000: loss=0.201 " + "l1=0" + "l2=0.201 f=-0.122 shape=(1, 9000, 1)
logits [[-0.13833815 -0.09914355 -0.14285308 -0.10882284]]
Iteration 400 of 1000: loss=0.179 " + "l1=0" + "l2=0.179 f=-0.123 shape=(1, 9000, 1)
logits [[-0.11586986 -0.10606795 -0.12868863 -0.14064315]]
Iteration 500 of 1000: loss=0.155 " + "l1=0" + "l2=0.155 f=-0.122 shape=(1, 9000, 1)
logits [[-0.11715421 -0.11664363 -0.12163532 -0.13326037]]
Iteration 600 of 1000: loss=0.142 " + "l1=0" + "l2=0.142 f=-0.122 shape=(1, 9000, 1)
logits [[-0.12830499 -0.10280374 -0.12651837 -0.13038796]]
Iteration 700 of 1000: loss=0.123 " + "l1=0" + "l2=0.123 f=-0.123 shape=(1, 9000, 1)
logits [[-0.1342871  -0.10872712 -0.12266646 -0.12675986]]
Iteration 800 of 1000: loss=0.109 " + "l1=0" + "l2=0.109 f=-0.123 shape=(1, 9000, 1)
logits [[-0.13010848 -0.11647841 -0.11939082 -0.12766185]]
Iteration 900 of 1000: loss=0.104 " + "l1=0" + "l2=0.104 f=-0.125 shape=(1, 9000, 1)
logits [[-0.1448974  -0.10782435 -0.12552774 -0.12237177]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.21 " + "l1=1.21" + "l2=0 f=-0.108 shape=(1, 9000, 1)
logits [[ 1.0933142 -1.1123374  0.5119365 -0.9263808]]
Iteration 100 of 1000: loss=0.29 " + "l1=0.0329" + "l2=0.257 f=-0.121 shape=(1, 9000, 1)
logits [[-0.10123646 -0.16099514 -0.11211373 -0.10796331]]
Iteration 200 of 1000: loss=0.207 " + "l1=0" + "l2=0.207 f=-0.124 shape=(1, 9000, 1)
logits [[-0.12479041 -0.11890133 -0.12639228 -0.12647101]]
Iteration 300 of 1000: loss=0.175 " + "l1=0" + "l2=0.175 f=-0.124 shape=(1, 9000, 1)
logits [[-0.13866697 -0.10957304 -0.13069254 -0.11695025]]
Iteration 400 of 1000: loss=0.144 " + "l1=0.0026" + "l2=0.141 f=-0.121 shape=(1, 9000, 1)
logits [[-0.13211642 -0.11503478 -0.1271103  -0.11030256]]
Iteration 500 of 1000: loss=0.118 " + "l1=0.00209" + "l2=0.116 f=-0.12 shape=(1, 9000, 1)
logits [[-0.12050547 -0.11782151 -0.12597682 -0.11401604]]
Iteration 600 of 1000: loss=0.11 " + "l1=0" + "l2=0.11 f=-0.124 shape=(1, 9000, 1)
logits [[-0.1521536  -0.09775042 -0.13956954 -0.10632479]]
Iteration 700 of 1000: loss=0.0985 " + "l1=0.0022" + "l2=0.0963 f=-0.124 shape=(1, 9000, 1)
logits [[-0.11689503 -0.1208865  -0.12741616 -0.13231465]]
Iteration 800 of 1000: loss=0.092 " + "l1=0" + "l2=0.092 f=-0.128 shape=(1, 9000, 1)
logits [[-0.13248838 -0.11939185 -0.1307124  -0.12769711]]
Iteration 900 of 1000: loss=0.0873 " + "l1=0.000694" + "l2=0.0866 f=-0.13 shape=(1, 9000, 1)
logits [[-0.13322645 -0.12900071 -0.12773849 -0.12878838]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.717 " + "l1=0.717" + "l2=0 f=-0.108 shape=(1, 9000, 1)
logits [[ 1.0933142 -1.1123374  0.5119365 -0.9263808]]
Iteration 100 of 1000: loss=0.274 " + "l1=0.095" + "l2=0.179 f=-0.112 shape=(1, 9000, 1)
logits [[-0.04923192 -0.32364404 -0.04368537 -0.03146028]]
Iteration 200 of 1000: loss=0.201 " + "l1=0.0446" + "l2=0.157 f=-0.113 shape=(1, 9000, 1)
logits [[-0.08904263 -0.20743094 -0.08460981 -0.07029238]]
Iteration 300 of 1000: loss=0.151 " + "l1=0.00899" + "l2=0.142 f=-0.118 shape=(1, 9000, 1)
logits [[-0.1136937  -0.13728014 -0.11290143 -0.10962576]]
Iteration 400 of 1000: loss=0.117 " + "l1=0.00392" + "l2=0.113 f=-0.121 shape=(1, 9000, 1)
logits [[-0.10752241 -0.11959525 -0.11851285 -0.13671696]]
Iteration 500 of 1000: loss=0.0999 " + "l1=0" + "l2=0.0999 f=-0.122 shape=(1, 9000, 1)
logits [[-0.12250285 -0.11658707 -0.1280995  -0.12088064]]
Iteration 600 of 1000: loss=0.0948 " + "l1=0" + "l2=0.0948 f=-0.126 shape=(1, 9000, 1)
logits [[-0.1269723  -0.11449596 -0.12813611 -0.13623127]]
Iteration 700 of 1000: loss=0.0883 " + "l1=0" + "l2=0.0883 f=-0.129 shape=(1, 9000, 1)
logits [[-0.14329287 -0.12049971 -0.13005468 -0.12265787]]
Iteration 800 of 1000: loss=0.0839 " + "l1=0" + "l2=0.0839 f=-0.132 shape=(1, 9000, 1)
logits [[-0.14185147 -0.12399893 -0.13244423 -0.12924102]]
Iteration 900 of 1000: loss=0.0788 " + "l1=0" + "l2=0.0788 f=-0.132 shape=(1, 9000, 1)
logits [[-0.13140036 -0.1292998  -0.13371621 -0.13288662]]
--- 279.39746952056885 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00581 " + "l1=0.00581" + "l2=0 f=-0.108 shape=(1, 9000, 1)
logits [[ 1.0933142 -1.1123374  0.5119365 -0.9263808]]
Iteration 100 of 1000: loss=0.00565 " + "l1=0.00547" + "l2=0.000177 f=-0.108 shape=(1, 9000, 1)
logits [[ 1.0637189  -1.1140027   0.51647264 -0.8998041 ]]
Iteration 200 of 1000: loss=0.00561 " + "l1=0.00546" + "l2=0.000146 f=-0.108 shape=(1, 9000, 1)
logits [[ 1.0635902 -1.1142926  0.5173418 -0.9000942]]
Iteration 300 of 1000: loss=0.00561 " + "l1=0.00542" + "l2=0.000189 f=-0.108 shape=(1, 9000, 1)
logits [[ 1.0609555 -1.114659   0.518476  -0.8979156]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0581 " + "l1=0.0581" + "l2=0 f=-0.108 shape=(1, 9000, 1)
logits [[ 1.0933142 -1.1123374  0.5119365 -0.9263808]]
Iteration 100 of 1000: loss=0.0422 " + "l1=0.0324" + "l2=0.0098 f=-0.113 shape=(1, 9000, 1)
logits [[ 0.86490655 -1.1357737   0.54105675 -0.72359055]]
Iteration 200 of 1000: loss=0.0361 " + "l1=0.0201" + "l2=0.016 f=-0.117 shape=(1, 9000, 1)
logits [[ 0.7599373 -1.1513642  0.5589185 -0.6373855]]
Iteration 300 of 1000: loss=0.0292 " + "l1=0.00588" + "l2=0.0234 f=-0.125 shape=(1, 9000, 1)
logits [[ 0.636822   -1.1723796   0.57806027 -0.54410106]]
Iteration 400 of 1000: loss=0.0231 " + "l1=0" + "l2=0.0231 f=-0.133 shape=(1, 9000, 1)
logits [[ 0.5909881 -1.1814055  0.5952606 -0.5387427]]
Iteration 500 of 1000: loss=0.0182 " + "l1=0" + "l2=0.0182 f=-0.141 shape=(1, 9000, 1)
logits [[ 0.596038  -1.1784768  0.6018396 -0.5853461]]
Iteration 600 of 1000: loss=0.0125 " + "l1=0" + "l2=0.0125 f=-0.154 shape=(1, 9000, 1)
logits [[ 0.60633445 -1.1885545   0.60941803 -0.64292645]]
Iteration 700 of 1000: loss=0.0098 " + "l1=0.000305" + "l2=0.0095 f=-0.163 shape=(1, 9000, 1)
logits [[ 0.6104394 -1.1945974  0.6073944 -0.6767339]]
Iteration 800 of 1000: loss=0.00878 " + "l1=0" + "l2=0.00878 f=-0.166 shape=(1, 9000, 1)
logits [[ 0.6025362  -1.1922065   0.6030031  -0.67611355]]
Iteration 900 of 1000: loss=0.00799 " + "l1=0" + "l2=0.00799 f=-0.168 shape=(1, 9000, 1)
logits [[ 0.59728426 -1.1904796   0.5980163  -0.6768891 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.032 " + "l1=0.032" + "l2=0 f=-0.108 shape=(1, 9000, 1)
logits [[ 1.0933142 -1.1123374  0.5119365 -0.9263808]]
Iteration 100 of 1000: loss=0.0271 " + "l1=0.0242" + "l2=0.00295 f=-0.109 shape=(1, 9000, 1)
logits [[ 0.96885496 -1.120584    0.5293097  -0.8155735 ]]
Iteration 200 of 1000: loss=0.0259 " + "l1=0.022" + "l2=0.00386 f=-0.11 shape=(1, 9000, 1)
logits [[ 0.9381863  -1.1291711   0.53813565 -0.78839004]]
Iteration 300 of 1000: loss=0.0248 " + "l1=0.0201" + "l2=0.00477 f=-0.111 shape=(1, 9000, 1)
logits [[ 0.9127833 -1.1380832  0.5480833 -0.7671416]]
Iteration 400 of 1000: loss=0.0239 " + "l1=0.0182" + "l2=0.00563 f=-0.112 shape=(1, 9000, 1)
logits [[ 0.8902801 -1.1455997  0.5588851 -0.7508655]]
Iteration 500 of 1000: loss=0.023 " + "l1=0.0165" + "l2=0.00648 f=-0.113 shape=(1, 9000, 1)
logits [[ 0.86716557 -1.1513627   0.5670637  -0.7343967 ]]
Iteration 600 of 1000: loss=0.0223 " + "l1=0.0151" + "l2=0.00718 f=-0.114 shape=(1, 9000, 1)
logits [[ 0.849074   -1.1561261   0.57497174 -0.7230112 ]]
Iteration 700 of 1000: loss=0.0214 " + "l1=0.0136" + "l2=0.00785 f=-0.114 shape=(1, 9000, 1)
logits [[ 0.8289996 -1.159869   0.5819704 -0.7086481]]
Iteration 800 of 1000: loss=0.0205 " + "l1=0.0119" + "l2=0.00859 f=-0.116 shape=(1, 9000, 1)
logits [[ 0.8044345 -1.1642332  0.5872214 -0.6922796]]
Iteration 900 of 1000: loss=0.0195 " + "l1=0.01" + "l2=0.00947 f=-0.119 shape=(1, 9000, 1)
logits [[ 0.7740504  -1.166888    0.59154797 -0.6751486 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0451 " + "l1=0.0451" + "l2=0 f=-0.108 shape=(1, 9000, 1)
logits [[ 1.0933142 -1.1123374  0.5119365 -0.9263808]]
Iteration 100 of 1000: loss=0.0355 " + "l1=0.0298" + "l2=0.00576 f=-0.111 shape=(1, 9000, 1)
logits [[ 0.91926706 -1.1284266   0.5350047  -0.7716389 ]]
Iteration 200 of 1000: loss=0.0327 " + "l1=0.0246" + "l2=0.00808 f=-0.113 shape=(1, 9000, 1)
logits [[ 0.86505044 -1.1405681   0.5478294  -0.7236212 ]]
Iteration 300 of 1000: loss=0.0301 " + "l1=0.0199" + "l2=0.0101 f=-0.115 shape=(1, 9000, 1)
logits [[ 0.82150143 -1.1517668   0.56422544 -0.693766  ]]
Iteration 400 of 1000: loss=0.0274 " + "l1=0.0138" + "l2=0.0136 f=-0.118 shape=(1, 9000, 1)
logits [[ 0.75591874 -1.1649547   0.5780336  -0.6412968 ]]
Iteration 500 of 1000: loss=0.0243 " + "l1=0.00685" + "l2=0.0175 f=-0.124 shape=(1, 9000, 1)
logits [[ 0.67881036 -1.1764843   0.59042305 -0.58777964]]
Iteration 600 of 1000: loss=0.0196 " + "l1=4.1e-05" + "l2=0.0195 f=-0.136 shape=(1, 9000, 1)
logits [[ 0.60488236 -1.1833196   0.6043527  -0.56852335]]
Iteration 700 of 1000: loss=0.0142 " + "l1=0.000176" + "l2=0.014 f=-0.146 shape=(1, 9000, 1)
logits [[ 0.6118539 -1.1823252  0.6095882 -0.6248295]]
Iteration 800 of 1000: loss=0.0101 " + "l1=0" + "l2=0.0101 f=-0.16 shape=(1, 9000, 1)
logits [[ 0.6093863 -1.1927766  0.6097446 -0.6652988]]
Iteration 900 of 1000: loss=0.00854 " + "l1=0" + "l2=0.00854 f=-0.164 shape=(1, 9000, 1)
logits [[ 0.60446084 -1.1909668   0.60477644 -0.6744721 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0385 " + "l1=0.0385" + "l2=0 f=-0.108 shape=(1, 9000, 1)
logits [[ 1.0933142 -1.1123374  0.5119365 -0.9263808]]
Iteration 100 of 1000: loss=0.0315 " + "l1=0.0273" + "l2=0.0042 f=-0.11 shape=(1, 9000, 1)
logits [[ 0.9442141  -1.1238834   0.53170377 -0.7934431 ]]
Iteration 200 of 1000: loss=0.0296 " + "l1=0.0239" + "l2=0.00571 f=-0.112 shape=(1, 9000, 1)
logits [[ 0.9025723  -1.1344993   0.5421312  -0.75684154]]
Iteration 300 of 1000: loss=0.0279 " + "l1=0.0207" + "l2=0.00716 f=-0.112 shape=(1, 9000, 1)
logits [[ 0.86826783 -1.1449565   0.555455   -0.72863704]]
Iteration 400 of 1000: loss=0.0264 " + "l1=0.0181" + "l2=0.00836 f=-0.114 shape=(1, 9000, 1)
logits [[ 0.8410793 -1.153658   0.5685079 -0.711232 ]]
Iteration 500 of 1000: loss=0.025 " + "l1=0.0153" + "l2=0.00968 f=-0.116 shape=(1, 9000, 1)
logits [[ 0.8122592  -1.1630436   0.58088505 -0.69242406]]
Iteration 600 of 1000: loss=0.0234 " + "l1=0.012" + "l2=0.0114 f=-0.118 shape=(1, 9000, 1)
logits [[ 0.77055556 -1.1692957   0.5891292  -0.6625778 ]]
Iteration 700 of 1000: loss=0.0213 " + "l1=0.00727" + "l2=0.014 f=-0.124 shape=(1, 9000, 1)
logits [[ 0.7062402 -1.1748672  0.5965659 -0.6228086]]
Iteration 800 of 1000: loss=0.0168 " + "l1=0.00023" + "l2=0.0166 f=-0.139 shape=(1, 9000, 1)
logits [[ 0.6102364  -1.1775856   0.6067622  -0.59551543]]
Iteration 900 of 1000: loss=0.0115 " + "l1=0.000236" + "l2=0.0112 f=-0.152 shape=(1, 9000, 1)
logits [[ 0.61230814 -1.18398     0.60875016 -0.64531577]]
--- 264.25861287117004 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0202 " + "l1=0.0202" + "l2=0 f=-0.108 shape=(1, 9000, 1)
logits [[ 1.0933142 -1.1123374  0.5119365 -0.9263808]]
Iteration 100 of 1000: loss=0.0194 " + "l1=0.0187" + "l2=0.00067 f=-0.106 shape=(1, 9000, 1)
logits [[ 1.0235395  -1.0898556   0.49036628 -0.8477602 ]]
Iteration 200 of 1000: loss=0.0193 " + "l1=0.0185" + "l2=0.000729 f=-0.105 shape=(1, 9000, 1)
logits [[ 1.0146564  -1.0858946   0.48777398 -0.8383834 ]]
Iteration 300 of 1000: loss=0.0192 " + "l1=0.0183" + "l2=0.00081 f=-0.105 shape=(1, 9000, 1)
logits [[ 1.0057155  -1.0818983   0.48482713 -0.8283985 ]]
Iteration 400 of 1000: loss=0.0191 " + "l1=0.0182" + "l2=0.000901 f=-0.105 shape=(1, 9000, 1)
logits [[ 0.9976798  -1.0785354   0.48217598 -0.81955934]]
Iteration 500 of 1000: loss=0.0191 " + "l1=0.018" + "l2=0.00103 f=-0.104 shape=(1, 9000, 1)
logits [[ 0.99070466 -1.075685    0.4793692  -0.8120355 ]]
Iteration 600 of 1000: loss=0.019 " + "l1=0.0179" + "l2=0.0011 f=-0.104 shape=(1, 9000, 1)
logits [[ 0.9846232  -1.0730959   0.47677842 -0.805286  ]]
Iteration 700 of 1000: loss=0.0189 " + "l1=0.0178" + "l2=0.0012 f=-0.104 shape=(1, 9000, 1)
logits [[ 0.9776548  -1.0704235   0.47401384 -0.79753506]]
Iteration 800 of 1000: loss=0.019 " + "l1=0.0176" + "l2=0.00136 f=-0.104 shape=(1, 9000, 1)
logits [[ 0.97094035 -1.0678269   0.47120768 -0.7901185 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.202 " + "l1=0.202" + "l2=0 f=-0.108 shape=(1, 9000, 1)
logits [[ 1.0933142 -1.1123374  0.5119365 -0.9263808]]
Iteration 100 of 1000: loss=0.102 " + "l1=0.0298" + "l2=0.0727 f=-0.0975 shape=(1, 9000, 1)
logits [[ 0.27982986 -0.8848233   0.23339365 -0.01823043]]
Iteration 200 of 1000: loss=0.074 " + "l1=0.000832" + "l2=0.0732 f=-0.0949 shape=(1, 9000, 1)
logits [[ 0.1517205  -0.8265603   0.15185054  0.14353201]]
Iteration 300 of 1000: loss=0.0596 " + "l1=0" + "l2=0.0596 f=-0.0952 shape=(1, 9000, 1)
logits [[ 0.14143708 -0.8229501   0.14817628  0.15258107]]
Iteration 400 of 1000: loss=0.0491 " + "l1=0.000738" + "l2=0.0484 f=-0.0932 shape=(1, 9000, 1)
logits [[ 0.14997801 -0.8152794   0.14973955  0.14259401]]
Iteration 500 of 1000: loss=0.0409 " + "l1=0" + "l2=0.0409 f=-0.0906 shape=(1, 9000, 1)
logits [[ 0.14695528 -0.8062998   0.14593297  0.15087041]]
Iteration 600 of 1000: loss=0.0349 " + "l1=0" + "l2=0.0349 f=-0.0892 shape=(1, 9000, 1)
logits [[ 0.14672619 -0.8104681   0.15091759  0.15591949]]
Iteration 700 of 1000: loss=0.0309 " + "l1=0" + "l2=0.0309 f=-0.0873 shape=(1, 9000, 1)
logits [[ 0.15219611 -0.8139541   0.15333073  0.15912545]]
Iteration 800 of 1000: loss=0.0278 " + "l1=0" + "l2=0.0278 f=-0.0866 shape=(1, 9000, 1)
logits [[ 0.1511863  -0.8198331   0.1581884   0.16394442]]
Iteration 900 of 1000: loss=0.0249 " + "l1=0" + "l2=0.0249 f=-0.0863 shape=(1, 9000, 1)
logits [[ 0.15733418 -0.8278637   0.16097063  0.16417533]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.111 " + "l1=0.111" + "l2=0 f=-0.108 shape=(1, 9000, 1)
logits [[ 1.0933142 -1.1123374  0.5119365 -0.9263808]]
Iteration 100 of 1000: loss=0.0852 " + "l1=0.0666" + "l2=0.0186 f=-0.0998 shape=(1, 9000, 1)
logits [[ 0.7162807  -1.0059564   0.38555226 -0.49492562]]
Iteration 200 of 1000: loss=0.0754 " + "l1=0.0465" + "l2=0.0288 f=-0.0965 shape=(1, 9000, 1)
logits [[ 0.54098755 -0.9554352   0.33320788 -0.3047717 ]]
Iteration 300 of 1000: loss=0.0671 " + "l1=0.0322" + "l2=0.0349 f=-0.0954 shape=(1, 9000, 1)
logits [[ 0.41568068 -0.91734844  0.28972596 -0.16957554]]
Iteration 400 of 1000: loss=0.0586 " + "l1=0.0181" + "l2=0.0405 f=-0.0986 shape=(1, 9000, 1)
logits [[ 0.28766614 -0.89153403  0.25100577 -0.04136723]]
Iteration 500 of 1000: loss=0.0489 " + "l1=0.00911" + "l2=0.0398 f=-0.0978 shape=(1, 9000, 1)
logits [[ 0.21218164 -0.86011654  0.21005805  0.04648583]]
Iteration 600 of 1000: loss=0.0397 " + "l1=0.00204" + "l2=0.0377 f=-0.0912 shape=(1, 9000, 1)
logits [[ 0.16281444 -0.81476444  0.16157226  0.12576038]]
Iteration 700 of 1000: loss=0.0337 " + "l1=6.65e-05" + "l2=0.0336 f=-0.0897 shape=(1, 9000, 1)
logits [[ 0.1494932  -0.80723435  0.1500181   0.14880928]]
Iteration 800 of 1000: loss=0.0301 " + "l1=0" + "l2=0.0301 f=-0.0882 shape=(1, 9000, 1)
logits [[ 0.15036353 -0.81311     0.1524926   0.15742329]]
Iteration 900 of 1000: loss=0.0268 " + "l1=5.42e-05" + "l2=0.0268 f=-0.0871 shape=(1, 9000, 1)
logits [[ 0.15693435 -0.81974816  0.1576025   0.15661645]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0656 " + "l1=0.0656" + "l2=0 f=-0.108 shape=(1, 9000, 1)
logits [[ 1.0933142 -1.1123374  0.5119365 -0.9263808]]
Iteration 100 of 1000: loss=0.057 " + "l1=0.0508" + "l2=0.00618 f=-0.104 shape=(1, 9000, 1)
logits [[ 0.87879354 -1.0509686   0.44273037 -0.6846185 ]]
Iteration 200 of 1000: loss=0.0548 " + "l1=0.0466" + "l2=0.00824 f=-0.102 shape=(1, 9000, 1)
logits [[ 0.8176302  -1.0319428   0.42222223 -0.6151118 ]]
Iteration 300 of 1000: loss=0.0532 " + "l1=0.0437" + "l2=0.00953 f=-0.101 shape=(1, 9000, 1)
logits [[ 0.77557564 -1.018408    0.40818682 -0.5675118 ]]
Iteration 400 of 1000: loss=0.0517 " + "l1=0.0411" + "l2=0.0107 f=-0.0994 shape=(1, 9000, 1)
logits [[ 0.7381827  -1.0045019   0.39357767 -0.5249454 ]]
Iteration 500 of 1000: loss=0.0499 " + "l1=0.0365" + "l2=0.0134 f=-0.0993 shape=(1, 9000, 1)
logits [[ 0.6713468  -0.98702115  0.371341   -0.45287475]]
Iteration 600 of 1000: loss=0.0477 " + "l1=0.0317" + "l2=0.016 f=-0.0991 shape=(1, 9000, 1)
logits [[ 0.59986955 -0.96626353  0.34613135 -0.37616092]]
Iteration 700 of 1000: loss=0.0449 " + "l1=0.0272" + "l2=0.0177 f=-0.0984 shape=(1, 9000, 1)
logits [[ 0.5327927  -0.9471643   0.32440597 -0.3037228 ]]
Iteration 800 of 1000: loss=0.0415 " + "l1=0.0226" + "l2=0.0189 f=-0.0976 shape=(1, 9000, 1)
logits [[ 0.46349618 -0.92938733  0.30632567 -0.23071581]]
Iteration 900 of 1000: loss=0.0372 " + "l1=0.0167" + "l2=0.0205 f=-0.0969 shape=(1, 9000, 1)
logits [[ 0.37603635 -0.9125641   0.28832585 -0.13921371]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0884 " + "l1=0.0884" + "l2=0 f=-0.108 shape=(1, 9000, 1)
logits [[ 1.0933142 -1.1123374  0.5119365 -0.9263808]]
Iteration 100 of 1000: loss=0.0724 " + "l1=0.0611" + "l2=0.0113 f=-0.102 shape=(1, 9000, 1)
logits [[ 0.802349   -1.0299424   0.41504398 -0.59395   ]]
Iteration 200 of 1000: loss=0.0678 " + "l1=0.0515" + "l2=0.0163 f=-0.0999 shape=(1, 9000, 1)
logits [[ 0.69792914 -1.0034436   0.38445157 -0.47860548]]
Iteration 300 of 1000: loss=0.063 " + "l1=0.0419" + "l2=0.0211 f=-0.0986 shape=(1, 9000, 1)
logits [[ 0.59162897 -0.97559106  0.3547552  -0.36517328]]
Iteration 400 of 1000: loss=0.0585 " + "l1=0.034" + "l2=0.0245 f=-0.0974 shape=(1, 9000, 1)
logits [[ 0.5052311  -0.9464478   0.32246011 -0.27090877]]
Iteration 500 of 1000: loss=0.0534 " + "l1=0.0256" + "l2=0.0278 f=-0.0968 shape=(1, 9000, 1)
logits [[ 0.4134636  -0.91354936  0.2844075  -0.17171541]]
Iteration 600 of 1000: loss=0.0474 " + "l1=0.017" + "l2=0.0304 f=-0.0971 shape=(1, 9000, 1)
logits [[ 0.31742972 -0.8909204   0.25578633 -0.07059358]]
Iteration 700 of 1000: loss=0.0394 " + "l1=0.00864" + "l2=0.0307 f=-0.0957 shape=(1, 9000, 1)
logits [[ 0.22694826 -0.86839026  0.22810856  0.03066378]]
Iteration 800 of 1000: loss=0.0336 " + "l1=0.0046" + "l2=0.029 f=-0.0911 shape=(1, 9000, 1)
logits [[ 0.19245401 -0.84066826  0.19460995  0.08939644]]
Iteration 900 of 1000: loss=0.0294 " + "l1=0.00208" + "l2=0.0273 f=-0.0879 shape=(1, 9000, 1)
logits [[ 0.17248319 -0.8252398   0.17440888  0.1268085 ]]
--- 290.8198115825653 seconds ---
Adv result:3
Loading record A01589
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0668 " + "l1=0.0668" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 4.019103  -2.6618547  3.0985124 -6.274686 ]]
Iteration 100 of 1000: loss=0.0665 " + "l1=0.0663" + "l2=0.000221 f=-0.454 shape=(1, 9000, 1)
logits [[ 3.987105  -2.6412354  3.0816782 -6.2444196]]
Iteration 200 of 1000: loss=0.0664 " + "l1=0.0662" + "l2=0.000191 f=-0.454 shape=(1, 9000, 1)
logits [[ 3.982067  -2.6392684  3.0782871 -6.2390695]]
Iteration 300 of 1000: loss=0.0663 " + "l1=0.0661" + "l2=0.000234 f=-0.455 shape=(1, 9000, 1)
logits [[ 3.9740617 -2.6355429  3.07353   -6.2309628]]
Iteration 400 of 1000: loss=0.0663 " + "l1=0.066" + "l2=0.000295 f=-0.455 shape=(1, 9000, 1)
logits [[ 3.965153  -2.6314347  3.0684116 -6.222009 ]]
Iteration 500 of 1000: loss=0.0662 " + "l1=0.0658" + "l2=0.000375 f=-0.455 shape=(1, 9000, 1)
logits [[ 3.9560864 -2.6272662  3.0633068 -6.2129383]]
Iteration 600 of 1000: loss=0.0661 " + "l1=0.0657" + "l2=0.000433 f=-0.455 shape=(1, 9000, 1)
logits [[ 3.9474695 -2.623282   3.0583832 -6.20444  ]]
Iteration 700 of 1000: loss=0.0662 " + "l1=0.0656" + "l2=0.000592 f=-0.456 shape=(1, 9000, 1)
logits [[ 3.9389715 -2.6193917  3.0536447 -6.196131 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.668 " + "l1=0.668" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 4.019103  -2.6618547  3.0985124 -6.274686 ]]
Iteration 100 of 1000: loss=0.642 " + "l1=0.629" + "l2=0.0128 f=-0.455 shape=(1, 9000, 1)
logits [[ 3.7877638 -2.5013402  2.9606948 -6.0684886]]
Iteration 200 of 1000: loss=0.625 " + "l1=0.605" + "l2=0.0202 f=-0.461 shape=(1, 9000, 1)
logits [[ 3.641255  -2.4095256  2.870933  -5.9449883]]
Iteration 300 of 1000: loss=0.606 " + "l1=0.576" + "l2=0.0298 f=-0.468 shape=(1, 9000, 1)
logits [[ 3.4678187 -2.2939143  2.7664335 -5.810646 ]]
Iteration 400 of 1000: loss=0.587 " + "l1=0.549" + "l2=0.0381 f=-0.465 shape=(1, 9000, 1)
logits [[ 3.3042912 -2.187697   2.6739166 -5.6521945]]
Iteration 500 of 1000: loss=0.57 " + "l1=0.525" + "l2=0.0455 f=-0.461 shape=(1, 9000, 1)
logits [[ 3.1446195 -2.1024618  2.5843039 -5.469315 ]]
Iteration 600 of 1000: loss=0.548 " + "l1=0.488" + "l2=0.06 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.922636  -1.9536023  2.457001  -5.229303 ]]
Iteration 700 of 1000: loss=0.503 " + "l1=0.421" + "l2=0.0822 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.5270345 -1.6786536  2.2899165 -4.8713703]]
Iteration 800 of 1000: loss=0.476 " + "l1=0.386" + "l2=0.0893 f=-0.417 shape=(1, 9000, 1)
logits [[ 2.280969  -1.5835259  2.214804  -4.5803847]]
Iteration 900 of 1000: loss=0.461 " + "l1=0.37" + "l2=0.0906 f=-0.413 shape=(1, 9000, 1)
logits [[ 2.1613166 -1.5411972  2.1581588 -4.430291 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.68 " + "l1=6.68" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 4.019103  -2.6618547  3.0985124 -6.274686 ]]
Iteration 100 of 1000: loss=3.7 " + "l1=2.68" + "l2=1.02 f=-0.484 shape=(1, 9000, 1)
logits [[ 1.7415106  -0.92288184  1.7594355  -4.5133233 ]]
Iteration 200 of 1000: loss=2.9 " + "l1=1.9" + "l2=1 f=-0.5 shape=(1, 9000, 1)
logits [[ 1.2505808 -0.5573982  1.3423189 -4.035188 ]]
Iteration 300 of 1000: loss=2.44 " + "l1=1.48" + "l2=0.958 f=-0.481 shape=(1, 9000, 1)
logits [[ 0.8582652  -0.35597092  1.1218154  -3.5500934 ]]
Iteration 400 of 1000: loss=2.15 " + "l1=1.2" + "l2=0.956 f=-0.478 shape=(1, 9000, 1)
logits [[ 0.41843712 -0.22444212  0.9726524  -3.080035  ]]
Iteration 500 of 1000: loss=1.89 " + "l1=0.913" + "l2=0.977 f=-0.445 shape=(1, 9000, 1)
logits [[-0.09243021 -0.1285566   0.7841479  -2.3417346 ]]
Iteration 600 of 1000: loss=1.66 " + "l1=0.664" + "l2=0.999 f=-0.425 shape=(1, 9000, 1)
logits [[-0.43750426 -0.0185148   0.644992   -1.8903036 ]]
Iteration 700 of 1000: loss=1.48 " + "l1=0.482" + "l2=0.997 f=-0.42 shape=(1, 9000, 1)
logits [[-0.6572635   0.03271749  0.5150246  -1.5691756 ]]
Iteration 800 of 1000: loss=1.35 " + "l1=0.346" + "l2=0.999 f=-0.407 shape=(1, 9000, 1)
logits [[-0.81234753  0.06578461  0.41171047 -1.2921367 ]]
Iteration 900 of 1000: loss=1.24 " + "l1=0.225" + "l2=1.01 f=-0.399 shape=(1, 9000, 1)
logits [[-0.9309145   0.09562758  0.32013425 -1.0805764 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=66.8 " + "l1=66.8" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 4.019103  -2.6618547  3.0985124 -6.274686 ]]
Iteration 100 of 1000: loss=8.83 " + "l1=0" + "l2=8.83 f=-0.549 shape=(1, 9000, 1)
logits [[-0.86957735  0.540225    0.5390403  -2.4061172 ]]
Iteration 200 of 1000: loss=5.98 " + "l1=0.0993" + "l2=5.88 f=-0.591 shape=(1, 9000, 1)
logits [[-0.9885899   0.54313636  0.55306244 -2.4698315 ]]
Iteration 300 of 1000: loss=4.77 " + "l1=0.049" + "l2=4.72 f=-0.609 shape=(1, 9000, 1)
logits [[-1.107041    0.5727014   0.57759976 -2.4808602 ]]
Iteration 400 of 1000: loss=4.06 " + "l1=0" + "l2=4.06 f=-0.609 shape=(1, 9000, 1)
logits [[-1.1791248  0.5754997  0.5671904 -2.3988492]]
Iteration 500 of 1000: loss=3.62 " + "l1=0" + "l2=3.62 f=-0.602 shape=(1, 9000, 1)
logits [[-1.2197568  0.5517817  0.5349415 -2.2740273]]
Iteration 600 of 1000: loss=3.28 " + "l1=0.0343" + "l2=3.25 f=-0.589 shape=(1, 9000, 1)
logits [[-1.2207112  0.51177    0.5151965 -2.1607335]]
Iteration 700 of 1000: loss=2.98 " + "l1=0" + "l2=2.98 f=-0.574 shape=(1, 9000, 1)
logits [[-1.2131108   0.4918247   0.48889387 -2.0641205 ]]
Iteration 800 of 1000: loss=2.73 " + "l1=0" + "l2=2.73 f=-0.559 shape=(1, 9000, 1)
logits [[-1.198742    0.46788996  0.46394685 -1.9678965 ]]
Iteration 900 of 1000: loss=2.54 " + "l1=0" + "l2=2.54 f=-0.545 shape=(1, 9000, 1)
logits [[-1.215886    0.463606    0.43538588 -1.8620158 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=36.7 " + "l1=36.7" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 4.019103  -2.6618547  3.0985124 -6.274686 ]]
Iteration 100 of 1000: loss=8.58 " + "l1=2.27" + "l2=6.31 f=-0.511 shape=(1, 9000, 1)
logits [[-0.22173004  0.33014524  0.7425852  -2.8932743 ]]
Iteration 200 of 1000: loss=4.62 " + "l1=0.0158" + "l2=4.6 f=-0.596 shape=(1, 9000, 1)
logits [[-1.0424801   0.55626684  0.5591337  -2.4581752 ]]
Iteration 300 of 1000: loss=3.65 " + "l1=0.0016" + "l2=3.65 f=-0.6 shape=(1, 9000, 1)
logits [[-1.1884015   0.55586874  0.5561602  -2.3224673 ]]
Iteration 400 of 1000: loss=3.14 " + "l1=0" + "l2=3.14 f=-0.583 shape=(1, 9000, 1)
logits [[-1.2126786   0.5170117   0.51120913 -2.1456144 ]]
Iteration 500 of 1000: loss=2.78 " + "l1=0.021" + "l2=2.76 f=-0.561 shape=(1, 9000, 1)
logits [[-1.1939511  0.475051   0.4788636 -2.0026283]]
Iteration 600 of 1000: loss=2.46 " + "l1=0" + "l2=2.46 f=-0.535 shape=(1, 9000, 1)
logits [[-1.1772801   0.43628109  0.43612766 -1.8345518 ]]
Iteration 700 of 1000: loss=2.21 " + "l1=0" + "l2=2.21 f=-0.513 shape=(1, 9000, 1)
logits [[-1.1423365   0.41092986  0.41041192 -1.7316482 ]]
Iteration 800 of 1000: loss=2.02 " + "l1=0" + "l2=2.02 f=-0.492 shape=(1, 9000, 1)
logits [[-1.1039423   0.38206467  0.3771984  -1.6228122 ]]
Iteration 900 of 1000: loss=1.88 " + "l1=0.0421" + "l2=1.84 f=-0.465 shape=(1, 9000, 1)
logits [[-1.0583379   0.34098122  0.3486375  -1.493006  ]]
--- 287.2732198238373 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00921 " + "l1=0.00921" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 4.019103  -2.6618547  3.0985124 -6.274686 ]]
Iteration 100 of 1000: loss=0.0091 " + "l1=0.00897" + "l2=0.000129 f=-0.455 shape=(1, 9000, 1)
logits [[ 3.9983249 -2.664698   3.1013813 -6.2538958]]
Iteration 200 of 1000: loss=0.00907 " + "l1=0.00897" + "l2=9.84e-05 f=-0.455 shape=(1, 9000, 1)
logits [[ 3.9970398 -2.664742   3.1003392 -6.2525444]]
Iteration 300 of 1000: loss=0.00905 " + "l1=0.00894" + "l2=0.00011 f=-0.455 shape=(1, 9000, 1)
logits [[ 3.9937797 -2.6651006  3.099853  -6.2490845]]
Iteration 400 of 1000: loss=0.00904 " + "l1=0.00891" + "l2=0.000133 f=-0.455 shape=(1, 9000, 1)
logits [[ 3.9906416 -2.665479   3.099627  -6.2459116]]
Iteration 500 of 1000: loss=0.0091 " + "l1=0.00888" + "l2=0.000224 f=-0.455 shape=(1, 9000, 1)
logits [[ 3.9870267 -2.665729   3.099292  -6.242228 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0921 " + "l1=0.0921" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 4.019103  -2.6618547  3.0985124 -6.274686 ]]
Iteration 100 of 1000: loss=0.0832 " + "l1=0.0782" + "l2=0.00495 f=-0.454 shape=(1, 9000, 1)
logits [[ 3.9080002 -2.691291   3.1255436 -6.15868  ]]
Iteration 200 of 1000: loss=0.0802 " + "l1=0.0739" + "l2=0.00624 f=-0.455 shape=(1, 9000, 1)
logits [[ 3.863745  -2.701243   3.1244483 -6.1055684]]
Iteration 300 of 1000: loss=0.0772 " + "l1=0.0698" + "l2=0.00747 f=-0.454 shape=(1, 9000, 1)
logits [[ 3.8185384 -2.7095442  3.1210058 -6.0477614]]
Iteration 400 of 1000: loss=0.0741 " + "l1=0.0651" + "l2=0.00895 f=-0.453 shape=(1, 9000, 1)
logits [[ 3.76716   -2.7197165  3.116075  -5.9756937]]
Iteration 500 of 1000: loss=0.071 " + "l1=0.0606" + "l2=0.0104 f=-0.453 shape=(1, 9000, 1)
logits [[ 3.7157817 -2.7294698  3.1099153 -5.907197 ]]
Iteration 600 of 1000: loss=0.0679 " + "l1=0.056" + "l2=0.0119 f=-0.453 shape=(1, 9000, 1)
logits [[ 3.665634  -2.7390442  3.1055384 -5.8438125]]
Iteration 700 of 1000: loss=0.0647 " + "l1=0.051" + "l2=0.0137 f=-0.452 shape=(1, 9000, 1)
logits [[ 3.616497  -2.75136    3.1069393 -5.779655 ]]
Iteration 800 of 1000: loss=0.0607 " + "l1=0.0448" + "l2=0.0159 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.552705  -2.7617936  3.1044743 -5.6942654]]
Iteration 900 of 1000: loss=0.0569 " + "l1=0.039" + "l2=0.0179 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.4900653 -2.767454   3.100193  -5.621848 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.921 " + "l1=0.921" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 4.019103  -2.6618547  3.0985124 -6.274686 ]]
Iteration 100 of 1000: loss=0.18 " + "l1=0" + "l2=0.18 f=-0.442 shape=(1, 9000, 1)
logits [[ 3.2348459 -2.8704247  3.2353618 -5.369408 ]]
Iteration 200 of 1000: loss=0.12 " + "l1=0" + "l2=0.12 f=-0.441 shape=(1, 9000, 1)
logits [[ 3.1705809 -2.8585334  3.176997  -5.252911 ]]
Iteration 300 of 1000: loss=0.0916 " + "l1=0" + "l2=0.0916 f=-0.442 shape=(1, 9000, 1)
logits [[ 3.1365402 -2.849793   3.1406882 -5.196337 ]]
Iteration 400 of 1000: loss=0.0756 " + "l1=0" + "l2=0.0756 f=-0.441 shape=(1, 9000, 1)
logits [[ 3.1109643 -2.833027   3.1121361 -5.1541204]]
Iteration 500 of 1000: loss=0.0645 " + "l1=0" + "l2=0.0645 f=-0.439 shape=(1, 9000, 1)
logits [[ 3.0892267 -2.8167381  3.091303  -5.1196814]]
Iteration 600 of 1000: loss=0.0563 " + "l1=0" + "l2=0.0563 f=-0.438 shape=(1, 9000, 1)
logits [[ 3.074929  -2.8021655  3.0757928 -5.099768 ]]
Iteration 700 of 1000: loss=0.0512 " + "l1=0" + "l2=0.0512 f=-0.437 shape=(1, 9000, 1)
logits [[ 3.0575087 -2.7874947  3.0642161 -5.081711 ]]
Iteration 800 of 1000: loss=0.0452 " + "l1=0.000721" + "l2=0.0444 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.0531127 -2.7717257  3.0523918 -5.0797625]]
Iteration 900 of 1000: loss=0.042 " + "l1=0" + "l2=0.042 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.029543  -2.7593522  3.0430975 -5.059049 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.506 " + "l1=0.506" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 4.019103  -2.6618547  3.0985124 -6.274686 ]]
Iteration 100 of 1000: loss=0.197 " + "l1=0.0117" + "l2=0.186 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.2661738 -2.8703904  3.2448921 -5.4121637]]
Iteration 200 of 1000: loss=0.116 " + "l1=0" + "l2=0.116 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.1886775 -2.8740244  3.191327  -5.2648044]]
Iteration 300 of 1000: loss=0.088 " + "l1=0.00244" + "l2=0.0856 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.150935  -2.8554986  3.146504  -5.2005873]]
Iteration 400 of 1000: loss=0.0702 " + "l1=0" + "l2=0.0702 f=-0.438 shape=(1, 9000, 1)
logits [[ 3.1172416 -2.8418086  3.1202912 -5.1468463]]
Iteration 500 of 1000: loss=0.0589 " + "l1=0" + "l2=0.0589 f=-0.437 shape=(1, 9000, 1)
logits [[ 3.09676   -2.8243105  3.0996194 -5.119435 ]]
Iteration 600 of 1000: loss=0.052 " + "l1=0.00172" + "l2=0.0502 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.0860815 -2.8066645  3.0829527 -5.1081123]]
Iteration 700 of 1000: loss=0.0449 " + "l1=0" + "l2=0.0449 f=-0.437 shape=(1, 9000, 1)
logits [[ 3.0677073 -2.7915924  3.069102  -5.0946813]]
Iteration 800 of 1000: loss=0.0416 " + "l1=0" + "l2=0.0416 f=-0.438 shape=(1, 9000, 1)
logits [[ 3.0486867 -2.7798698  3.0622041 -5.0822964]]
Iteration 900 of 1000: loss=0.0363 " + "l1=0.000496" + "l2=0.0358 f=-0.438 shape=(1, 9000, 1)
logits [[ 3.0523112 -2.760747   3.0514085 -5.0965886]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.299 " + "l1=0.299" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 4.019103  -2.6618547  3.0985124 -6.274686 ]]
Iteration 100 of 1000: loss=0.205 " + "l1=0.147" + "l2=0.0571 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.6392858 -2.771815   3.1855204 -5.8485837]]
Iteration 200 of 1000: loss=0.146 " + "l1=0.0532" + "l2=0.0928 f=-0.439 shape=(1, 9000, 1)
logits [[ 3.3609998 -2.8515399  3.1971672 -5.4616256]]
Iteration 300 of 1000: loss=0.0924 " + "l1=0" + "l2=0.0924 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.159668  -2.8626208  3.1606963 -5.202008 ]]
Iteration 400 of 1000: loss=0.0698 " + "l1=5.31e-05" + "l2=0.0698 f=-0.438 shape=(1, 9000, 1)
logits [[ 3.1235316 -2.8463361  3.1233683 -5.1517735]]
Iteration 500 of 1000: loss=0.0574 " + "l1=0.00034" + "l2=0.057 f=-0.438 shape=(1, 9000, 1)
logits [[ 3.1022704 -2.8305442  3.1012228 -5.1245008]]
Iteration 600 of 1000: loss=0.0488 " + "l1=2.4e-05" + "l2=0.0488 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.0851574 -2.8127837  3.0850835 -5.1154838]]
Iteration 700 of 1000: loss=0.0427 " + "l1=0.000369" + "l2=0.0424 f=-0.442 shape=(1, 9000, 1)
logits [[ 3.075282  -2.800515   3.0741458 -5.1157126]]
Iteration 800 of 1000: loss=0.0383 " + "l1=0.00091" + "l2=0.0374 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.0678055 -2.7849705  3.065006  -5.11975  ]]
Iteration 900 of 1000: loss=0.0346 " + "l1=0" + "l2=0.0346 f=-0.444 shape=(1, 9000, 1)
logits [[ 3.0504544 -2.7732613  3.0591488 -5.110441 ]]
--- 276.0673463344574 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.103 " + "l1=0.103" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 4.019103  -2.6618547  3.0985124 -6.274686 ]]
Iteration 100 of 1000: loss=0.102 " + "l1=0.102" + "l2=0.000381 f=-0.453 shape=(1, 9000, 1)
logits [[ 3.9719117 -2.6534748  3.081996  -6.211773 ]]
Iteration 200 of 1000: loss=0.102 " + "l1=0.102" + "l2=0.000423 f=-0.453 shape=(1, 9000, 1)
logits [[ 3.957991  -2.6524754  3.0757105 -6.1930823]]
Iteration 300 of 1000: loss=0.102 " + "l1=0.101" + "l2=0.000533 f=-0.453 shape=(1, 9000, 1)
logits [[ 3.9429622 -2.651002   3.068748  -6.172821 ]]
Iteration 400 of 1000: loss=0.101 " + "l1=0.101" + "l2=0.000651 f=-0.453 shape=(1, 9000, 1)
logits [[ 3.9269948 -2.6491613  3.0612862 -6.1513085]]
Iteration 500 of 1000: loss=0.101 " + "l1=0.1" + "l2=0.000826 f=-0.453 shape=(1, 9000, 1)
logits [[ 3.9108136 -2.6470442  3.053749  -6.1296244]]
Iteration 600 of 1000: loss=0.101 " + "l1=0.1" + "l2=0.00106 f=-0.453 shape=(1, 9000, 1)
logits [[ 3.8942487 -2.6444874  3.0457735 -6.1075516]]
Iteration 700 of 1000: loss=0.101 " + "l1=0.0996" + "l2=0.00122 f=-0.453 shape=(1, 9000, 1)
logits [[ 3.877935  -2.641765   3.0377362 -6.0857873]]
Iteration 800 of 1000: loss=0.101 " + "l1=0.0993" + "l2=0.00145 f=-0.453 shape=(1, 9000, 1)
logits [[ 3.8618143 -2.6391957  3.029776  -6.0639987]]
Iteration 900 of 1000: loss=0.101 " + "l1=0.0989" + "l2=0.00171 f=-0.453 shape=(1, 9000, 1)
logits [[ 3.8468378 -2.6369493  3.0226648 -6.04357  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.03 " + "l1=1.03" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 4.019103  -2.6618547  3.0985124 -6.274686 ]]
Iteration 100 of 1000: loss=0.96 " + "l1=0.93" + "l2=0.0298 f=-0.439 shape=(1, 9000, 1)
logits [[ 3.6095045 -2.6183748  2.9476275 -5.693259 ]]
Iteration 200 of 1000: loss=0.899 " + "l1=0.846" + "l2=0.0535 f=-0.418 shape=(1, 9000, 1)
logits [[ 3.279666  -2.5933003  2.817094  -5.1761813]]
Iteration 300 of 1000: loss=0.848 " + "l1=0.776" + "l2=0.0721 f=-0.414 shape=(1, 9000, 1)
logits [[ 2.9799502 -2.5451462  2.687639  -4.7769732]]
Iteration 400 of 1000: loss=0.8 " + "l1=0.706" + "l2=0.0941 f=-0.408 shape=(1, 9000, 1)
logits [[ 2.6701162 -2.4726982  2.5609846 -4.3895164]]
Iteration 500 of 1000: loss=0.757 " + "l1=0.652" + "l2=0.105 f=-0.401 shape=(1, 9000, 1)
logits [[ 2.4344845 -2.391172   2.4355001 -4.08195  ]]
Iteration 600 of 1000: loss=0.722 " + "l1=0.615" + "l2=0.107 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.278995  -2.2449741  2.2803981 -3.8673236]]
Iteration 700 of 1000: loss=0.683 " + "l1=0.566" + "l2=0.117 f=-0.365 shape=(1, 9000, 1)
logits [[ 1.9954653 -2.051131   2.1287484 -3.5315187]]
Iteration 800 of 1000: loss=0.647 " + "l1=0.513" + "l2=0.134 f=-0.359 shape=(1, 9000, 1)
logits [[ 1.6979375 -1.9505365  1.9756329 -3.1574972]]
Iteration 900 of 1000: loss=0.618 " + "l1=0.474" + "l2=0.144 f=-0.36 shape=(1, 9000, 1)
logits [[ 1.4778904 -1.9105893  1.8644731 -2.8722582]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.3 " + "l1=10.3" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 4.019103  -2.6618547  3.0985124 -6.274686 ]]
Iteration 100 of 1000: loss=5.3 " + "l1=3.26" + "l2=2.04 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.0164026 -1.9202795  1.494992  -1.7632076]]
Iteration 200 of 1000: loss=2.11 " + "l1=0" + "l2=2.11 f=-0.174 shape=(1, 9000, 1)
logits [[-0.25141236 -1.4603899   0.5007615   0.5160351 ]]
Iteration 300 of 1000: loss=1.37 " + "l1=0" + "l2=1.37 f=-0.17 shape=(1, 9000, 1)
logits [[-0.26936662 -1.4905733   0.5071482   0.57090706]]
Iteration 400 of 1000: loss=1.11 " + "l1=0" + "l2=1.11 f=-0.174 shape=(1, 9000, 1)
logits [[-0.24340035 -1.54007     0.53177404  0.5547323 ]]
Iteration 500 of 1000: loss=0.984 " + "l1=0.00775" + "l2=0.977 f=-0.176 shape=(1, 9000, 1)
logits [[-0.20287734 -1.5678583   0.5379957   0.53025055]]
Iteration 600 of 1000: loss=0.916 " + "l1=0" + "l2=0.916 f=-0.173 shape=(1, 9000, 1)
logits [[-0.23084725 -1.5687923   0.5185044   0.58926404]]
Iteration 700 of 1000: loss=0.835 " + "l1=0" + "l2=0.835 f=-0.174 shape=(1, 9000, 1)
logits [[-0.20306964 -1.5766497   0.52768326  0.555314  ]]
Iteration 800 of 1000: loss=0.777 " + "l1=0" + "l2=0.777 f=-0.174 shape=(1, 9000, 1)
logits [[-0.18840036 -1.5886042   0.5297067   0.5527443 ]]
Iteration 900 of 1000: loss=0.726 " + "l1=0" + "l2=0.726 f=-0.173 shape=(1, 9000, 1)
logits [[-0.18343706 -1.590439    0.5330973   0.55058193]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.66 " + "l1=5.66" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 4.019103  -2.6618547  3.0985124 -6.274686 ]]
Iteration 100 of 1000: loss=3.82 " + "l1=3.18" + "l2=0.643 f=-0.35 shape=(1, 9000, 1)
logits [[ 2.1894836 -2.2610233  2.222321  -3.5522897]]
Iteration 200 of 1000: loss=2.57 " + "l1=1.5" + "l2=1.07 f=-0.291 shape=(1, 9000, 1)
logits [[ 0.8386852 -1.8312638  1.2819672 -1.4515744]]
Iteration 300 of 1000: loss=1.27 " + "l1=0.00996" + "l2=1.26 f=-0.203 shape=(1, 9000, 1)
logits [[-0.3059147 -1.526302   0.5186055  0.5004944]]
Iteration 400 of 1000: loss=0.917 " + "l1=0" + "l2=0.917 f=-0.202 shape=(1, 9000, 1)
logits [[-0.32820237 -1.5734154   0.5455548   0.5462549 ]]
Iteration 500 of 1000: loss=0.801 " + "l1=0.00633" + "l2=0.794 f=-0.207 shape=(1, 9000, 1)
logits [[-0.33220714 -1.5775523   0.54749155  0.5359904 ]]
Iteration 600 of 1000: loss=0.719 " + "l1=0" + "l2=0.719 f=-0.203 shape=(1, 9000, 1)
logits [[-0.31729612 -1.5795474   0.5416639   0.54203737]]
Iteration 700 of 1000: loss=0.663 " + "l1=0.00119" + "l2=0.661 f=-0.203 shape=(1, 9000, 1)
logits [[-0.31099552 -1.5849057   0.54224825  0.5400854 ]]
Iteration 800 of 1000: loss=0.623 " + "l1=0.0096" + "l2=0.613 f=-0.203 shape=(1, 9000, 1)
logits [[-0.3091329  -1.5765841   0.5452674   0.52780855]]
Iteration 900 of 1000: loss=0.579 " + "l1=0" + "l2=0.579 f=-0.199 shape=(1, 9000, 1)
logits [[-0.31348744 -1.5642037   0.53734094  0.5431854 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.35 " + "l1=3.35" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 4.019103  -2.6618547  3.0985124 -6.274686 ]]
Iteration 100 of 1000: loss=2.55 " + "l1=2.22" + "l2=0.325 f=-0.385 shape=(1, 9000, 1)
logits [[ 2.587791  -2.4686143  2.5847185 -4.2449307]]
Iteration 200 of 1000: loss=2.16 " + "l1=1.8" + "l2=0.36 f=-0.366 shape=(1, 9000, 1)
logits [[ 2.0363216 -2.1875827  2.1065414 -3.4188726]]
Iteration 300 of 1000: loss=1.73 " + "l1=1.19" + "l2=0.54 f=-0.352 shape=(1, 9000, 1)
logits [[ 1.0592968 -1.8713088  1.5340705 -2.1319869]]
Iteration 400 of 1000: loss=1.2 " + "l1=0.473" + "l2=0.724 f=-0.241 shape=(1, 9000, 1)
logits [[ 0.23557481 -1.6399274   0.9487206  -0.5072499 ]]
Iteration 500 of 1000: loss=0.901 " + "l1=0.125" + "l2=0.776 f=-0.198 shape=(1, 9000, 1)
logits [[-0.18842706 -1.5137665   0.6472718   0.26228756]]
Iteration 600 of 1000: loss=0.704 " + "l1=0.00759" + "l2=0.696 f=-0.18 shape=(1, 9000, 1)
logits [[-0.27164495 -1.5410671   0.55742925  0.5340692 ]]
Iteration 700 of 1000: loss=0.617 " + "l1=0" + "l2=0.617 f=-0.178 shape=(1, 9000, 1)
logits [[-0.27472153 -1.5386492   0.5481383   0.55480385]]
Iteration 800 of 1000: loss=0.567 " + "l1=0.00523" + "l2=0.561 f=-0.177 shape=(1, 9000, 1)
logits [[-0.26768398 -1.5216458   0.5482092   0.53211695]]
Iteration 900 of 1000: loss=0.53 " + "l1=0.0018" + "l2=0.529 f=-0.174 shape=(1, 9000, 1)
logits [[-0.26977476 -1.5002843   0.5396217   0.5340945 ]]
--- 306.5131764411926 seconds ---
Adv result:3
Loading record A01594
(1, 3514)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0356 " + "l1=0.0356" + "l2=0 f=-0.76 shape=(1, 9000, 1)
logits [[ 2.4919116  -1.0651037  -0.89510775 -3.5704749 ]]
Iteration 100 of 1000: loss=0.0337 " + "l1=0.0329" + "l2=0.00076 f=-0.757 shape=(1, 9000, 1)
logits [[ 2.3290372  -0.96290845 -0.91723883 -3.4751196 ]]
Iteration 200 of 1000: loss=0.0327 " + "l1=0.0315" + "l2=0.00112 f=-0.756 shape=(1, 9000, 1)
logits [[ 2.2414384 -0.9133567 -0.9289758 -3.4225633]]
Iteration 300 of 1000: loss=0.0317 " + "l1=0.0302" + "l2=0.00158 f=-0.755 shape=(1, 9000, 1)
logits [[ 2.151065   -0.8644873  -0.93991524 -3.3673255 ]]
Iteration 400 of 1000: loss=0.0309 " + "l1=0.0289" + "l2=0.00205 f=-0.754 shape=(1, 9000, 1)
logits [[ 2.0655603  -0.82107264 -0.9476042  -3.311972  ]]
Iteration 500 of 1000: loss=0.0302 " + "l1=0.0277" + "l2=0.00247 f=-0.752 shape=(1, 9000, 1)
logits [[ 1.9894772 -0.7849889 -0.9532547 -3.2602484]]
Iteration 600 of 1000: loss=0.0296 " + "l1=0.0267" + "l2=0.00293 f=-0.751 shape=(1, 9000, 1)
logits [[ 1.9169658  -0.75136197 -0.95714563 -3.2105565 ]]
Iteration 700 of 1000: loss=0.0291 " + "l1=0.0258" + "l2=0.00329 f=-0.749 shape=(1, 9000, 1)
logits [[ 1.85662    -0.72393066 -0.9599295  -3.168527  ]]
Iteration 800 of 1000: loss=0.0287 " + "l1=0.025" + "l2=0.00361 f=-0.748 shape=(1, 9000, 1)
logits [[ 1.8027148  -0.70202255 -0.9633956  -3.1290104 ]]
Iteration 900 of 1000: loss=0.0282 " + "l1=0.0243" + "l2=0.00387 f=-0.747 shape=(1, 9000, 1)
logits [[ 1.751971   -0.68230724 -0.9667989  -3.0897412 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.356 " + "l1=0.356" + "l2=0 f=-0.76 shape=(1, 9000, 1)
logits [[ 2.4919116  -1.0651037  -0.89510775 -3.5704749 ]]
Iteration 100 of 1000: loss=0.172 " + "l1=0.0921" + "l2=0.0795 f=-0.718 shape=(1, 9000, 1)
logits [[ 0.81926924 -0.10218803 -1.1471473  -2.4431303 ]]
Iteration 200 of 1000: loss=0.0719 " + "l1=0.00368" + "l2=0.0683 f=-0.73 shape=(1, 9000, 1)
logits [[ 0.29308122  0.25632685 -1.2752337  -2.194041  ]]
Iteration 300 of 1000: loss=0.0583 " + "l1=0" + "l2=0.0583 f=-0.731 shape=(1, 9000, 1)
logits [[ 0.24535081  0.25877002 -1.3022423  -2.1267753 ]]
Iteration 400 of 1000: loss=0.0521 " + "l1=0.00104" + "l2=0.051 f=-0.73 shape=(1, 9000, 1)
logits [[ 0.24931839  0.23888864 -1.3182049  -2.0903428 ]]
Iteration 500 of 1000: loss=0.045 " + "l1=0.000745" + "l2=0.0443 f=-0.721 shape=(1, 9000, 1)
logits [[ 0.23400623  0.226553   -1.3036742  -2.0425537 ]]
Iteration 600 of 1000: loss=0.0379 " + "l1=0" + "l2=0.0379 f=-0.711 shape=(1, 9000, 1)
logits [[ 0.21426292  0.226417   -1.2573155  -2.0279675 ]]
Iteration 700 of 1000: loss=0.0348 " + "l1=0" + "l2=0.0348 f=-0.71 shape=(1, 9000, 1)
logits [[ 0.20399837  0.22177327 -1.2556981  -2.011513  ]]
Iteration 800 of 1000: loss=0.0326 " + "l1=0" + "l2=0.0326 f=-0.711 shape=(1, 9000, 1)
logits [[ 0.19208638  0.22461616 -1.2590175  -1.9997606 ]]
Iteration 900 of 1000: loss=0.0298 " + "l1=2.22e-05" + "l2=0.0298 f=-0.711 shape=(1, 9000, 1)
logits [[ 0.20807627  0.20785378 -1.2517562  -2.0075579 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.196 " + "l1=0.196" + "l2=0 f=-0.76 shape=(1, 9000, 1)
logits [[ 2.4919116  -1.0651037  -0.89510775 -3.5704749 ]]
Iteration 100 of 1000: loss=0.139 " + "l1=0.115" + "l2=0.024 f=-0.736 shape=(1, 9000, 1)
logits [[ 1.5869333 -0.506559  -1.0352867 -2.990988 ]]
Iteration 200 of 1000: loss=0.105 " + "l1=0.067" + "l2=0.0377 f=-0.728 shape=(1, 9000, 1)
logits [[ 0.9895154  -0.22915381 -1.1284448  -2.5422153 ]]
Iteration 300 of 1000: loss=0.0726 " + "l1=0.0168" + "l2=0.0558 f=-0.713 shape=(1, 9000, 1)
logits [[ 0.39582956  0.09071866 -1.2697376  -2.067962  ]]
Iteration 400 of 1000: loss=0.0472 " + "l1=0.00146" + "l2=0.0458 f=-0.709 shape=(1, 9000, 1)
logits [[ 0.24798974  0.22150761 -1.2903212  -2.016732  ]]
Iteration 500 of 1000: loss=0.0389 " + "l1=0.000117" + "l2=0.0388 f=-0.71 shape=(1, 9000, 1)
logits [[ 0.22703218  0.22490449 -1.2728593  -2.0198994 ]]
Iteration 600 of 1000: loss=0.0351 " + "l1=0" + "l2=0.0351 f=-0.712 shape=(1, 9000, 1)
logits [[ 0.22082357  0.2222739  -1.2679514  -2.0227442 ]]
Iteration 700 of 1000: loss=0.0327 " + "l1=0" + "l2=0.0327 f=-0.713 shape=(1, 9000, 1)
logits [[ 0.21215904  0.21886146 -1.2655212  -2.0188062 ]]
Iteration 800 of 1000: loss=0.0303 " + "l1=6.01e-05" + "l2=0.0302 f=-0.713 shape=(1, 9000, 1)
logits [[ 0.21303305  0.21194065 -1.2535788  -2.0222573 ]]
Iteration 900 of 1000: loss=0.0287 " + "l1=0.000359" + "l2=0.0283 f=-0.711 shape=(1, 9000, 1)
logits [[ 0.21313694  0.20661333 -1.2426163  -2.0229597 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.116 " + "l1=0.116" + "l2=0 f=-0.76 shape=(1, 9000, 1)
logits [[ 2.4919116  -1.0651037  -0.89510775 -3.5704749 ]]
Iteration 100 of 1000: loss=0.096 " + "l1=0.0883" + "l2=0.00769 f=-0.749 shape=(1, 9000, 1)
logits [[ 1.9758165 -0.7418689 -0.9726058 -3.2587206]]
Iteration 200 of 1000: loss=0.0838 " + "l1=0.0712" + "l2=0.0126 f=-0.744 shape=(1, 9000, 1)
logits [[ 1.6286587 -0.5633382 -1.0232445 -3.016956 ]]
Iteration 300 of 1000: loss=0.0742 " + "l1=0.057" + "l2=0.0172 f=-0.739 shape=(1, 9000, 1)
logits [[ 1.3202726  -0.43283796 -1.0674474  -2.7769976 ]]
Iteration 400 of 1000: loss=0.0665 " + "l1=0.045" + "l2=0.0215 f=-0.737 shape=(1, 9000, 1)
logits [[ 1.0543531 -0.3292867 -1.1058632 -2.56762  ]]
Iteration 500 of 1000: loss=0.0589 " + "l1=0.0329" + "l2=0.026 f=-0.733 shape=(1, 9000, 1)
logits [[ 0.8022663  -0.20996349 -1.1572249  -2.3653007 ]]
Iteration 600 of 1000: loss=0.0445 " + "l1=0.011" + "l2=0.0335 f=-0.706 shape=(1, 9000, 1)
logits [[ 0.440769    0.10115721 -1.2400177  -2.1253228 ]]
Iteration 700 of 1000: loss=0.0359 " + "l1=0.001" + "l2=0.0349 f=-0.705 shape=(1, 9000, 1)
logits [[ 0.2391026   0.20828618 -1.2537831  -2.013326  ]]
Iteration 800 of 1000: loss=0.0323 " + "l1=0.000238" + "l2=0.0321 f=-0.708 shape=(1, 9000, 1)
logits [[ 0.21589822  0.20857492 -1.2562876  -1.9988537 ]]
Iteration 900 of 1000: loss=0.0299 " + "l1=0.000176" + "l2=0.0297 f=-0.708 shape=(1, 9000, 1)
logits [[ 0.21085823  0.20544185 -1.2504312  -1.9976301 ]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0756 " + "l1=0.0756" + "l2=0 f=-0.76 shape=(1, 9000, 1)
logits [[ 2.4919116  -1.0651037  -0.89510775 -3.5704749 ]]
Iteration 100 of 1000: loss=0.0671 " + "l1=0.0639" + "l2=0.00327 f=-0.754 shape=(1, 9000, 1)
logits [[ 2.1525989  -0.85285616 -0.94488066 -3.3716292 ]]
Iteration 200 of 1000: loss=0.0621 " + "l1=0.0569" + "l2=0.00519 f=-0.751 shape=(1, 9000, 1)
logits [[ 1.9401385  -0.73699325 -0.9720696  -3.2350242 ]]
Iteration 300 of 1000: loss=0.0577 " + "l1=0.0504" + "l2=0.00737 f=-0.748 shape=(1, 9000, 1)
logits [[ 1.7343328  -0.63633555 -0.9971859  -3.0908792 ]]
Iteration 400 of 1000: loss=0.0542 " + "l1=0.0448" + "l2=0.00935 f=-0.745 shape=(1, 9000, 1)
logits [[ 1.5497918  -0.55944115 -1.0224881  -2.9468398 ]]
Iteration 500 of 1000: loss=0.0513 " + "l1=0.0405" + "l2=0.0108 f=-0.742 shape=(1, 9000, 1)
logits [[ 1.4014943  -0.50450736 -1.0375055  -2.8283885 ]]
Iteration 600 of 1000: loss=0.0488 " + "l1=0.0366" + "l2=0.0122 f=-0.739 shape=(1, 9000, 1)
logits [[ 1.2661207  -0.45405874 -1.0501305  -2.717539  ]]
Iteration 700 of 1000: loss=0.0465 " + "l1=0.0329" + "l2=0.0136 f=-0.739 shape=(1, 9000, 1)
logits [[ 1.1372298  -0.41260627 -1.0643792  -2.6150897 ]]
Iteration 800 of 1000: loss=0.0442 " + "l1=0.0294" + "l2=0.0148 f=-0.737 shape=(1, 9000, 1)
logits [[ 1.0193962  -0.36543915 -1.0807768  -2.5225608 ]]
Iteration 900 of 1000: loss=0.0421 " + "l1=0.0262" + "l2=0.0159 f=-0.731 shape=(1, 9000, 1)
logits [[ 0.93561757 -0.2954842  -1.1141163  -2.4514112 ]]
--- 305.46086859703064 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0339 " + "l1=0.0339" + "l2=0 f=-0.76 shape=(1, 9000, 1)
logits [[ 2.4919116  -1.0651037  -0.89510775 -3.5704749 ]]
Iteration 100 of 1000: loss=0.0331 " + "l1=0.0327" + "l2=0.000344 f=-0.759 shape=(1, 9000, 1)
logits [[ 2.3888426 -1.0237148 -0.8839365 -3.5161943]]
Iteration 200 of 1000: loss=0.0327 " + "l1=0.0322" + "l2=0.000431 f=-0.758 shape=(1, 9000, 1)
logits [[ 2.3432393 -1.0034055 -0.8801943 -3.492543 ]]
Iteration 300 of 1000: loss=0.0323 " + "l1=0.0317" + "l2=0.000579 f=-0.758 shape=(1, 9000, 1)
logits [[ 2.2931519 -0.981697  -0.8759811 -3.466139 ]]
Iteration 400 of 1000: loss=0.0319 " + "l1=0.0311" + "l2=0.000764 f=-0.757 shape=(1, 9000, 1)
logits [[ 2.2410488 -0.9589921 -0.8711222 -3.438668 ]]
Iteration 500 of 1000: loss=0.0315 " + "l1=0.0305" + "l2=0.000933 f=-0.756 shape=(1, 9000, 1)
logits [[ 2.1872728 -0.9366254 -0.8654835 -3.4096286]]
Iteration 600 of 1000: loss=0.0311 " + "l1=0.0299" + "l2=0.00119 f=-0.755 shape=(1, 9000, 1)
logits [[ 2.133837   -0.91600645 -0.8585468  -3.3799396 ]]
Iteration 700 of 1000: loss=0.0308 " + "l1=0.0294" + "l2=0.0014 f=-0.754 shape=(1, 9000, 1)
logits [[ 2.0869339  -0.89925426 -0.84910095 -3.354224  ]]
Iteration 800 of 1000: loss=0.0304 " + "l1=0.0288" + "l2=0.00158 f=-0.753 shape=(1, 9000, 1)
logits [[ 2.0441377 -0.8858688 -0.8383976 -3.3310423]]
Iteration 900 of 1000: loss=0.0302 " + "l1=0.0283" + "l2=0.00187 f=-0.752 shape=(1, 9000, 1)
logits [[ 2.0065258 -0.8757067 -0.8274322 -3.3095245]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.339 " + "l1=0.339" + "l2=0 f=-0.76 shape=(1, 9000, 1)
logits [[ 2.4919116  -1.0651037  -0.89510775 -3.5704749 ]]
Iteration 100 of 1000: loss=0.265 " + "l1=0.236" + "l2=0.0287 f=-0.74 shape=(1, 9000, 1)
logits [[ 1.5585356  -0.69562525 -0.80273527 -3.0183418 ]]
Iteration 200 of 1000: loss=0.187 " + "l1=0.125" + "l2=0.0616 f=-0.712 shape=(1, 9000, 1)
logits [[ 0.7464953 -0.6255452 -0.5046869 -2.4633026]]
Iteration 300 of 1000: loss=0.131 " + "l1=0.0643" + "l2=0.0672 f=-0.706 shape=(1, 9000, 1)
logits [[ 0.29236904 -0.66321677 -0.35042727 -2.1028006 ]]
Iteration 400 of 1000: loss=0.0921 " + "l1=0.0136" + "l2=0.0785 f=-0.682 shape=(1, 9000, 1)
logits [[-0.06291285 -0.72064656 -0.19880836 -1.7459624 ]]
Iteration 500 of 1000: loss=0.0699 " + "l1=0.000129" + "l2=0.0698 f=-0.674 shape=(1, 9000, 1)
logits [[-0.14089626 -0.7866669  -0.14218286 -1.6281084 ]]
Iteration 600 of 1000: loss=0.06 " + "l1=0" + "l2=0.06 f=-0.67 shape=(1, 9000, 1)
logits [[-0.13163307 -0.8338738  -0.12574865 -1.5906014 ]]
Iteration 700 of 1000: loss=0.0537 " + "l1=0.000925" + "l2=0.0528 f=-0.665 shape=(1, 9000, 1)
logits [[-0.09203124 -0.8827906  -0.10128538 -1.584487  ]]
Iteration 800 of 1000: loss=0.0479 " + "l1=2.05e-05" + "l2=0.0479 f=-0.659 shape=(1, 9000, 1)
logits [[-0.07160205 -0.91478145 -0.07180724 -1.5768214 ]]
Iteration 900 of 1000: loss=0.0436 " + "l1=0" + "l2=0.0436 f=-0.654 shape=(1, 9000, 1)
logits [[-0.0476526  -0.9413945  -0.04750706 -1.5778006 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.186 " + "l1=0.186" + "l2=0 f=-0.76 shape=(1, 9000, 1)
logits [[ 2.4919116  -1.0651037  -0.89510775 -3.5704749 ]]
Iteration 100 of 1000: loss=0.164 " + "l1=0.156" + "l2=0.00834 f=-0.754 shape=(1, 9000, 1)
logits [[ 1.9780996  -0.8467302  -0.85318226 -3.293243  ]]
Iteration 200 of 1000: loss=0.148 " + "l1=0.135" + "l2=0.0132 f=-0.746 shape=(1, 9000, 1)
logits [[ 1.6338711 -0.7226684 -0.8242373 -3.0713873]]
Iteration 300 of 1000: loss=0.12 " + "l1=0.0921" + "l2=0.0282 f=-0.703 shape=(1, 9000, 1)
logits [[ 1.1948334  -0.702619   -0.48051903 -2.8237817 ]]
Iteration 400 of 1000: loss=0.0993 " + "l1=0.0682" + "l2=0.0311 f=-0.698 shape=(1, 9000, 1)
logits [[ 0.87155914 -0.71211785 -0.36765447 -2.582641  ]]
Iteration 500 of 1000: loss=0.0852 " + "l1=0.0522" + "l2=0.033 f=-0.695 shape=(1, 9000, 1)
logits [[ 0.6609903 -0.7639452 -0.2882553 -2.3890824]]
Iteration 600 of 1000: loss=0.0746 " + "l1=0.0398" + "l2=0.0349 f=-0.695 shape=(1, 9000, 1)
logits [[ 0.49634358 -0.8086242  -0.22665182 -2.242029  ]]
Iteration 700 of 1000: loss=0.0676 " + "l1=0.0312" + "l2=0.0364 f=-0.692 shape=(1, 9000, 1)
logits [[ 0.38345125 -0.85048306 -0.18395072 -2.1168985 ]]
Iteration 800 of 1000: loss=0.0616 " + "l1=0.0231" + "l2=0.0385 f=-0.675 shape=(1, 9000, 1)
logits [[ 0.29746023 -0.91409403 -0.1216684  -1.9610273 ]]
Iteration 900 of 1000: loss=0.0551 " + "l1=0.0152" + "l2=0.0399 f=-0.655 shape=(1, 9000, 1)
logits [[ 0.21836181 -0.97268736 -0.05831635 -1.8091933 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.262 " + "l1=0.262" + "l2=0 f=-0.76 shape=(1, 9000, 1)
logits [[ 2.4919116  -1.0651037  -0.89510775 -3.5704749 ]]
Iteration 100 of 1000: loss=0.218 " + "l1=0.202" + "l2=0.0165 f=-0.75 shape=(1, 9000, 1)
logits [[ 1.7675447  -0.76504064 -0.8377094  -3.1628442 ]]
Iteration 200 of 1000: loss=0.168 " + "l1=0.127" + "l2=0.041 f=-0.696 shape=(1, 9000, 1)
logits [[ 1.1722245  -0.6753472  -0.47002783 -2.8115416 ]]
Iteration 300 of 1000: loss=0.128 " + "l1=0.0795" + "l2=0.0485 f=-0.695 shape=(1, 9000, 1)
logits [[ 0.6844133  -0.68797433 -0.34124044 -2.4363492 ]]
Iteration 400 of 1000: loss=0.105 " + "l1=0.0528" + "l2=0.0518 f=-0.697 shape=(1, 9000, 1)
logits [[ 0.39400244 -0.72541595 -0.2872764  -2.1708257 ]]
Iteration 500 of 1000: loss=0.0847 " + "l1=0.0291" + "l2=0.0556 f=-0.692 shape=(1, 9000, 1)
logits [[ 0.15231153 -0.76691914 -0.22273628 -1.9309475 ]]
Iteration 600 of 1000: loss=0.0711 " + "l1=0.0121" + "l2=0.059 f=-0.678 shape=(1, 9000, 1)
logits [[ 3.0232407e-04 -8.1500816e-01 -1.5600647e-01 -1.7428566e+00]]
Iteration 700 of 1000: loss=0.0597 " + "l1=0.000408" + "l2=0.0593 f=-0.65 shape=(1, 9000, 1)
logits [[-0.07919923 -0.88851607 -0.08446357 -1.5475338 ]]
Iteration 800 of 1000: loss=0.0521 " + "l1=0.000372" + "l2=0.0517 f=-0.643 shape=(1, 9000, 1)
logits [[-0.04901212 -0.9416732  -0.05380872 -1.5267017 ]]
Iteration 900 of 1000: loss=0.046 " + "l1=0" + "l2=0.046 f=-0.636 shape=(1, 9000, 1)
logits [[-0.03221911 -0.9713525  -0.03067598 -1.5096223 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.224 " + "l1=0.224" + "l2=0 f=-0.76 shape=(1, 9000, 1)
logits [[ 2.4919116  -1.0651037  -0.89510775 -3.5704749 ]]
Iteration 100 of 1000: loss=0.192 " + "l1=0.18" + "l2=0.0121 f=-0.752 shape=(1, 9000, 1)
logits [[ 1.8697333 -0.8027622 -0.8462684 -3.2279866]]
Iteration 200 of 1000: loss=0.162 " + "l1=0.13" + "l2=0.0318 f=-0.713 shape=(1, 9000, 1)
logits [[ 1.3653966  -0.701953   -0.59566027 -2.9186168 ]]
Iteration 300 of 1000: loss=0.124 " + "l1=0.0864" + "l2=0.038 f=-0.699 shape=(1, 9000, 1)
logits [[ 0.9196383  -0.6947537  -0.38476595 -2.6355033 ]]
Iteration 400 of 1000: loss=0.104 " + "l1=0.0636" + "l2=0.0404 f=-0.7 shape=(1, 9000, 1)
logits [[ 0.63006496 -0.7199688  -0.32987228 -2.3786192 ]]
Iteration 500 of 1000: loss=0.0864 " + "l1=0.0431" + "l2=0.0434 f=-0.698 shape=(1, 9000, 1)
logits [[ 0.39657056 -0.76800936 -0.25350693 -2.1654134 ]]
Iteration 600 of 1000: loss=0.0747 " + "l1=0.0294" + "l2=0.0453 f=-0.694 shape=(1, 9000, 1)
logits [[ 0.25029975 -0.8152246  -0.1930713  -2.019461  ]]
Iteration 700 of 1000: loss=0.066 " + "l1=0.0183" + "l2=0.0477 f=-0.685 shape=(1, 9000, 1)
logits [[ 0.12146911 -0.8563629  -0.15410689 -1.8495336 ]]
Iteration 800 of 1000: loss=0.0567 " + "l1=0.00551" + "l2=0.0512 f=-0.652 shape=(1, 9000, 1)
logits [[ 0.02021536 -0.9347782  -0.0629808  -1.6294034 ]]
Iteration 900 of 1000: loss=0.0494 " + "l1=0.000166" + "l2=0.0492 f=-0.642 shape=(1, 9000, 1)
logits [[-0.03638392 -0.97812647 -0.03888833 -1.5158547 ]]
--- 306.66960883140564 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0606 " + "l1=0.0606" + "l2=0 f=-0.76 shape=(1, 9000, 1)
logits [[ 2.4919116  -1.0651037  -0.89510775 -3.5704749 ]]
Iteration 100 of 1000: loss=0.0583 " + "l1=0.0575" + "l2=0.000858 f=-0.755 shape=(1, 9000, 1)
logits [[ 2.317083   -0.98505276 -0.9217321  -3.4294386 ]]
Iteration 200 of 1000: loss=0.0571 " + "l1=0.0558" + "l2=0.00127 f=-0.754 shape=(1, 9000, 1)
logits [[ 2.2208858 -0.942768  -0.9366099 -3.3576226]]
Iteration 300 of 1000: loss=0.0557 " + "l1=0.0539" + "l2=0.00183 f=-0.753 shape=(1, 9000, 1)
logits [[ 2.1122494  -0.896583   -0.95362216 -3.2745333 ]]
Iteration 400 of 1000: loss=0.0544 " + "l1=0.0518" + "l2=0.00252 f=-0.751 shape=(1, 9000, 1)
logits [[ 2.0018337  -0.8539218  -0.96844953 -3.1827486 ]]
Iteration 500 of 1000: loss=0.053 " + "l1=0.0496" + "l2=0.00338 f=-0.749 shape=(1, 9000, 1)
logits [[ 1.8815584  -0.8147856  -0.98504853 -3.0766494 ]]
Iteration 600 of 1000: loss=0.0517 " + "l1=0.0474" + "l2=0.00425 f=-0.747 shape=(1, 9000, 1)
logits [[ 1.7694311 -0.7808553 -1.0008869 -2.9736915]]
Iteration 700 of 1000: loss=0.0504 " + "l1=0.0453" + "l2=0.00507 f=-0.744 shape=(1, 9000, 1)
logits [[ 1.6636994  -0.75535756 -1.0145583  -2.870179  ]]
Iteration 800 of 1000: loss=0.0493 " + "l1=0.0435" + "l2=0.00581 f=-0.742 shape=(1, 9000, 1)
logits [[ 1.5716382 -0.7362295 -1.026981  -2.7753413]]
Iteration 900 of 1000: loss=0.0483 " + "l1=0.0418" + "l2=0.00647 f=-0.739 shape=(1, 9000, 1)
logits [[ 1.4928558  -0.72028214 -1.035709   -2.6917474 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.606 " + "l1=0.606" + "l2=0 f=-0.76 shape=(1, 9000, 1)
logits [[ 2.4919116  -1.0651037  -0.89510775 -3.5704749 ]]
Iteration 100 of 1000: loss=0.321 " + "l1=0.2" + "l2=0.121 f=-0.695 shape=(1, 9000, 1)
logits [[ 0.3692634  -0.29906863 -1.2221354  -1.6272587 ]]
Iteration 200 of 1000: loss=0.129 " + "l1=0.000728" + "l2=0.128 f=-0.606 shape=(1, 9000, 1)
logits [[-0.37957087 -0.38260618 -1.2762219  -0.38685292]]
Iteration 300 of 1000: loss=0.087 " + "l1=0" + "l2=0.087 f=-0.613 shape=(1, 9000, 1)
logits [[-0.36920524 -0.40983984 -1.3214232  -0.35261953]]
Iteration 400 of 1000: loss=0.0723 " + "l1=0" + "l2=0.0723 f=-0.61 shape=(1, 9000, 1)
logits [[-0.3629172  -0.43738478 -1.3160222  -0.32319438]]
Iteration 500 of 1000: loss=0.0613 " + "l1=0" + "l2=0.0613 f=-0.609 shape=(1, 9000, 1)
logits [[-0.35227364 -0.44607827 -1.3010905  -0.33457303]]
Iteration 600 of 1000: loss=0.0539 " + "l1=0" + "l2=0.0539 f=-0.6 shape=(1, 9000, 1)
logits [[-0.37568158 -0.42423978 -1.2892067  -0.31150684]]
Iteration 700 of 1000: loss=0.046 " + "l1=0" + "l2=0.046 f=-0.6 shape=(1, 9000, 1)
logits [[-0.34142438 -0.44317    -1.2805803  -0.33675453]]
Iteration 800 of 1000: loss=0.0428 " + "l1=0" + "l2=0.0428 f=-0.595 shape=(1, 9000, 1)
logits [[-0.3700989  -0.47560823 -1.2714462  -0.26254314]]
Iteration 900 of 1000: loss=0.0373 " + "l1=0" + "l2=0.0373 f=-0.597 shape=(1, 9000, 1)
logits [[-0.31087115 -0.5313142  -1.2566262  -0.28981268]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.333 " + "l1=0.333" + "l2=0 f=-0.76 shape=(1, 9000, 1)
logits [[ 2.4919116  -1.0651037  -0.89510775 -3.5704749 ]]
Iteration 100 of 1000: loss=0.254 " + "l1=0.221" + "l2=0.0334 f=-0.733 shape=(1, 9000, 1)
logits [[ 1.3778425 -0.5879402 -1.0911404 -2.6314082]]
Iteration 200 of 1000: loss=0.184 " + "l1=0.124" + "l2=0.0593 f=-0.719 shape=(1, 9000, 1)
logits [[ 0.4983051  -0.38288933 -1.2289573  -1.7604595 ]]
Iteration 300 of 1000: loss=0.121 " + "l1=0.0341" + "l2=0.0874 f=-0.645 shape=(1, 9000, 1)
logits [[-0.15831788 -0.38397485 -1.258513   -0.7776248 ]]
Iteration 400 of 1000: loss=0.0783 " + "l1=0" + "l2=0.0783 f=-0.618 shape=(1, 9000, 1)
logits [[-0.37058052 -0.43469685 -1.3180382  -0.348098  ]]
Iteration 500 of 1000: loss=0.0637 " + "l1=0" + "l2=0.0637 f=-0.613 shape=(1, 9000, 1)
logits [[-0.3467464  -0.46928585 -1.3082759  -0.3281109 ]]
Iteration 600 of 1000: loss=0.0535 " + "l1=0" + "l2=0.0535 f=-0.607 shape=(1, 9000, 1)
logits [[-0.3360692  -0.47270823 -1.286452   -0.33278307]]
Iteration 700 of 1000: loss=0.0463 " + "l1=0" + "l2=0.0463 f=-0.602 shape=(1, 9000, 1)
logits [[-0.3382523  -0.47362268 -1.2844131  -0.31026822]]
Iteration 800 of 1000: loss=0.0401 " + "l1=0" + "l2=0.0401 f=-0.6 shape=(1, 9000, 1)
logits [[-0.30399814 -0.5201625  -1.2759246  -0.30092776]]
Iteration 900 of 1000: loss=0.0362 " + "l1=0" + "l2=0.0362 f=-0.596 shape=(1, 9000, 1)
logits [[-0.2849234  -0.55795753 -1.26757    -0.2737413 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.197 " + "l1=0.197" + "l2=0 f=-0.76 shape=(1, 9000, 1)
logits [[ 2.4919116  -1.0651037  -0.89510775 -3.5704749 ]]
Iteration 100 of 1000: loss=0.172 " + "l1=0.162" + "l2=0.0102 f=-0.747 shape=(1, 9000, 1)
logits [[ 1.895811  -0.8017586 -0.9956533 -3.084694 ]]
Iteration 200 of 1000: loss=0.151 " + "l1=0.133" + "l2=0.0178 f=-0.741 shape=(1, 9000, 1)
logits [[ 1.4195126 -0.6304167 -1.083034  -2.66809  ]]
Iteration 300 of 1000: loss=0.129 " + "l1=0.102" + "l2=0.0275 f=-0.735 shape=(1, 9000, 1)
logits [[ 0.9383553 -0.5202652 -1.1698964 -2.1888394]]
Iteration 400 of 1000: loss=0.111 " + "l1=0.0751" + "l2=0.0361 f=-0.724 shape=(1, 9000, 1)
logits [[ 0.5527893 -0.4828345 -1.2094828 -1.7582093]]
Iteration 500 of 1000: loss=0.0939 " + "l1=0.0485" + "l2=0.0454 f=-0.682 shape=(1, 9000, 1)
logits [[ 0.23688099 -0.51637095 -1.1943244  -1.2551395 ]]
Iteration 600 of 1000: loss=0.076 " + "l1=0.0212" + "l2=0.0548 f=-0.646 shape=(1, 9000, 1)
logits [[-0.07525156 -0.5659518  -1.2134931  -0.72768766]]
Iteration 700 of 1000: loss=0.0575 " + "l1=0.000663" + "l2=0.0569 f=-0.612 shape=(1, 9000, 1)
logits [[-0.31906253 -0.53426236 -1.254892   -0.33947578]]
Iteration 800 of 1000: loss=0.0475 " + "l1=0" + "l2=0.0475 f=-0.604 shape=(1, 9000, 1)
logits [[-0.32768676 -0.5030372  -1.2600329  -0.32529813]]
Iteration 900 of 1000: loss=0.0412 " + "l1=0" + "l2=0.0412 f=-0.6 shape=(1, 9000, 1)
logits [[-0.31324807 -0.5267108  -1.2679073  -0.29359046]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.129 " + "l1=0.129" + "l2=0 f=-0.76 shape=(1, 9000, 1)
logits [[ 2.4919116  -1.0651037  -0.89510775 -3.5704749 ]]
Iteration 100 of 1000: loss=0.119 " + "l1=0.115" + "l2=0.00384 f=-0.751 shape=(1, 9000, 1)
logits [[ 2.1216726 -0.8975357 -0.954767  -3.2750998]]
Iteration 200 of 1000: loss=0.111 " + "l1=0.104" + "l2=0.00672 f=-0.748 shape=(1, 9000, 1)
logits [[ 1.8478827 -0.7869959 -1.0004148 -3.050795 ]]
Iteration 300 of 1000: loss=0.102 " + "l1=0.092" + "l2=0.0104 f=-0.743 shape=(1, 9000, 1)
logits [[ 1.5474515  -0.68734795 -1.0511445  -2.7806625 ]]
Iteration 400 of 1000: loss=0.0947 " + "l1=0.0804" + "l2=0.0143 f=-0.738 shape=(1, 9000, 1)
logits [[ 1.2738785 -0.6192109 -1.0984802 -2.5090647]]
Iteration 500 of 1000: loss=0.0872 " + "l1=0.0683" + "l2=0.0189 f=-0.735 shape=(1, 9000, 1)
logits [[ 0.9929514 -0.5671702 -1.1443774 -2.221963 ]]
Iteration 600 of 1000: loss=0.0812 " + "l1=0.0591" + "l2=0.0221 f=-0.729 shape=(1, 9000, 1)
logits [[ 0.7926829 -0.5536351 -1.1658753 -1.9886   ]]
Iteration 700 of 1000: loss=0.0755 " + "l1=0.0503" + "l2=0.0252 f=-0.717 shape=(1, 9000, 1)
logits [[ 0.6166727 -0.560138  -1.175868  -1.7504839]]
Iteration 800 of 1000: loss=0.0697 " + "l1=0.0414" + "l2=0.0284 f=-0.697 shape=(1, 9000, 1)
logits [[ 0.4552218  -0.59030044 -1.1631031  -1.4917226 ]]
Iteration 900 of 1000: loss=0.0633 " + "l1=0.0313" + "l2=0.0321 f=-0.666 shape=(1, 9000, 1)
logits [[ 0.29099807 -0.63699055 -1.1388513  -1.180013  ]]
--- 305.1346719264984 seconds ---
Adv result:3
Loading record A01614
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0936 " + "l1=0.0936" + "l2=0 f=-0.773 shape=(1, 9000, 1)
logits [[ 5.1907077 -4.172443   4.0244055 -8.136087 ]]
Iteration 100 of 1000: loss=0.0932 " + "l1=0.0928" + "l2=0.000341 f=-0.772 shape=(1, 9000, 1)
logits [[ 5.1468935 -4.135184   3.9874778 -8.085822 ]]
Iteration 200 of 1000: loss=0.093 " + "l1=0.0927" + "l2=0.000325 f=-0.771 shape=(1, 9000, 1)
logits [[ 5.141426  -4.130132   3.9817777 -8.078873 ]]
Iteration 300 of 1000: loss=0.093 " + "l1=0.0926" + "l2=0.000396 f=-0.771 shape=(1, 9000, 1)
logits [[ 5.133217  -4.1227927  3.9740286 -8.068808 ]]
Iteration 400 of 1000: loss=0.0928 " + "l1=0.0924" + "l2=0.000454 f=-0.771 shape=(1, 9000, 1)
logits [[ 5.124454  -4.1151547  3.9660375 -8.0581   ]]
Iteration 500 of 1000: loss=0.0928 " + "l1=0.0922" + "l2=0.000524 f=-0.77 shape=(1, 9000, 1)
logits [[ 5.1157517 -4.107625   3.9580634 -8.047163 ]]
Iteration 600 of 1000: loss=0.0928 " + "l1=0.0921" + "l2=0.000691 f=-0.77 shape=(1, 9000, 1)
logits [[ 5.106984 -4.100188  3.950148 -8.036198]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.936 " + "l1=0.936" + "l2=0 f=-0.773 shape=(1, 9000, 1)
logits [[ 5.1907077 -4.172443   4.0244055 -8.136087 ]]
Iteration 100 of 1000: loss=0.893 " + "l1=0.869" + "l2=0.0243 f=-0.761 shape=(1, 9000, 1)
logits [[ 4.8248386 -3.8614173  3.7066834 -7.7150836]]
Iteration 200 of 1000: loss=0.873 " + "l1=0.837" + "l2=0.0364 f=-0.75 shape=(1, 9000, 1)
logits [[ 4.6498957 -3.7196236  3.5567062 -7.488824 ]]
Iteration 300 of 1000: loss=0.845 " + "l1=0.792" + "l2=0.053 f=-0.741 shape=(1, 9000, 1)
logits [[ 4.42081   -3.5026119  3.3045352 -7.1871643]]
Iteration 400 of 1000: loss=0.821 " + "l1=0.758" + "l2=0.063 f=-0.724 shape=(1, 9000, 1)
logits [[ 4.270227  -3.310072   3.1161916 -6.9723763]]
Iteration 500 of 1000: loss=0.803 " + "l1=0.731" + "l2=0.0722 f=-0.703 shape=(1, 9000, 1)
logits [[ 4.125002  -3.1842983  2.9917793 -6.7452755]]
Iteration 600 of 1000: loss=0.787 " + "l1=0.704" + "l2=0.0829 f=-0.683 shape=(1, 9000, 1)
logits [[ 3.9881868 -3.0567842  2.866418  -6.529339 ]]
Iteration 700 of 1000: loss=0.771 " + "l1=0.68" + "l2=0.0909 f=-0.661 shape=(1, 9000, 1)
logits [[ 3.8618073 -2.9358923  2.7483552 -6.3166437]]
Iteration 800 of 1000: loss=0.753 " + "l1=0.655" + "l2=0.0983 f=-0.634 shape=(1, 9000, 1)
logits [[ 3.7363765 -2.8130927  2.633634  -6.0915756]]
Iteration 900 of 1000: loss=0.733 " + "l1=0.631" + "l2=0.102 f=-0.605 shape=(1, 9000, 1)
logits [[ 3.6063414 -2.7046497  2.557149  -5.880495 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.36 " + "l1=9.36" + "l2=0 f=-0.773 shape=(1, 9000, 1)
logits [[ 5.1907077 -4.172443   4.0244055 -8.136087 ]]
Iteration 100 of 1000: loss=4.61 " + "l1=2.51" + "l2=2.1 f=-0.493 shape=(1, 9000, 1)
logits [[ 1.3953367 -1.1166275  1.2615302 -3.5117602]]
Iteration 200 of 1000: loss=3.57 " + "l1=1.47" + "l2=2.1 f=-0.471 shape=(1, 9000, 1)
logits [[ 0.7808554 -0.6887214  0.7802074 -2.7577717]]
Iteration 300 of 1000: loss=3.21 " + "l1=1.17" + "l2=2.04 f=-0.432 shape=(1, 9000, 1)
logits [[ 0.62646335 -0.53792316  0.63016135 -2.4464266 ]]
Iteration 400 of 1000: loss=3.01 " + "l1=1.03" + "l2=1.98 f=-0.419 shape=(1, 9000, 1)
logits [[ 0.55100197 -0.4830889   0.5480014  -2.292898  ]]
Iteration 500 of 1000: loss=2.85 " + "l1=0.86" + "l2=1.99 f=-0.411 shape=(1, 9000, 1)
logits [[ 0.43797088 -0.4095568   0.45054635 -2.1240685 ]]
Iteration 600 of 1000: loss=2.69 " + "l1=0.732" + "l2=1.96 f=-0.389 shape=(1, 9000, 1)
logits [[ 0.35950515 -0.36241624  0.36932024 -1.9225287 ]]
Iteration 700 of 1000: loss=2.52 " + "l1=0.563" + "l2=1.96 f=-0.379 shape=(1, 9000, 1)
logits [[ 0.26338053 -0.29645208  0.2663729  -1.7504828 ]]
Iteration 800 of 1000: loss=2.36 " + "l1=0.42" + "l2=1.94 f=-0.38 shape=(1, 9000, 1)
logits [[ 0.1791563  -0.24102019  0.17615637 -1.6355271 ]]
Iteration 900 of 1000: loss=2.23 " + "l1=0.291" + "l2=1.93 f=-0.382 shape=(1, 9000, 1)
logits [[ 0.09753906 -0.19392918  0.09692572 -1.5272118 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=93.6 " + "l1=93.6" + "l2=0 f=-0.773 shape=(1, 9000, 1)
logits [[ 5.1907077 -4.172443   4.0244055 -8.136087 ]]
Iteration 100 of 1000: loss=8.87 " + "l1=0" + "l2=8.87 f=-0.413 shape=(1, 9000, 1)
logits [[-0.07288553  0.13074394  0.12291749 -1.831251  ]]
Iteration 200 of 1000: loss=5.87 " + "l1=0" + "l2=5.87 f=-0.416 shape=(1, 9000, 1)
logits [[ 0.1049438   0.14443733  0.12195164 -2.036621  ]]
Iteration 300 of 1000: loss=5.04 " + "l1=0" + "l2=5.04 f=-0.427 shape=(1, 9000, 1)
logits [[ 0.06330954  0.1618692   0.13695063 -2.0690908 ]]
Iteration 400 of 1000: loss=4.56 " + "l1=0" + "l2=4.56 f=-0.429 shape=(1, 9000, 1)
logits [[ 0.12019151  0.1473416   0.14580283 -2.128706  ]]
Iteration 500 of 1000: loss=4.35 " + "l1=0" + "l2=4.35 f=-0.434 shape=(1, 9000, 1)
logits [[ 0.04965667  0.16324626  0.13714327 -2.0854113 ]]
Iteration 600 of 1000: loss=4.07 " + "l1=0" + "l2=4.07 f=-0.435 shape=(1, 9000, 1)
logits [[ 0.06797329  0.14267549  0.1399221  -2.089073  ]]
Iteration 700 of 1000: loss=3.92 " + "l1=0.0233" + "l2=3.9 f=-0.436 shape=(1, 9000, 1)
logits [[ 0.04442608  0.13289566  0.1352297  -2.055436  ]]
Iteration 800 of 1000: loss=3.79 " + "l1=0.0314" + "l2=3.75 f=-0.436 shape=(1, 9000, 1)
logits [[ 0.02309953  0.13010344  0.13324127 -2.0308115 ]]
Iteration 900 of 1000: loss=3.7 " + "l1=0.0912" + "l2=3.61 f=-0.427 shape=(1, 9000, 1)
logits [[ 0.11977938  0.11065639  0.11650134 -2.0554097 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=51.5 " + "l1=51.5" + "l2=0 f=-0.773 shape=(1, 9000, 1)
logits [[ 5.1907077 -4.172443   4.0244055 -8.136087 ]]
Iteration 100 of 1000: loss=7.65 " + "l1=0" + "l2=7.65 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.07247815  0.11911324  0.10327944 -1.9073128 ]]
Iteration 200 of 1000: loss=5.06 " + "l1=0" + "l2=5.06 f=-0.425 shape=(1, 9000, 1)
logits [[ 0.11082992  0.15604593  0.14042935 -2.1083672 ]]
Iteration 300 of 1000: loss=4.43 " + "l1=0" + "l2=4.43 f=-0.426 shape=(1, 9000, 1)
logits [[ 0.1219029   0.1560417   0.14019072 -2.1224172 ]]
Iteration 400 of 1000: loss=4.14 " + "l1=0.104" + "l2=4.04 f=-0.423 shape=(1, 9000, 1)
logits [[ 0.15428069  0.1354624   0.13684575 -2.1199937 ]]
Iteration 500 of 1000: loss=3.82 " + "l1=0" + "l2=3.82 f=-0.424 shape=(1, 9000, 1)
logits [[ 0.09881665  0.13112023  0.1231245  -2.049809  ]]
Iteration 600 of 1000: loss=3.66 " + "l1=0" + "l2=3.66 f=-0.423 shape=(1, 9000, 1)
logits [[ 0.06248242  0.12026494  0.10835304 -1.981713  ]]
Iteration 700 of 1000: loss=3.53 " + "l1=0" + "l2=3.53 f=-0.421 shape=(1, 9000, 1)
logits [[ 0.03379206  0.11502688  0.09586048 -1.930064  ]]
Iteration 800 of 1000: loss=3.39 " + "l1=0.00151" + "l2=3.39 f=-0.419 shape=(1, 9000, 1)
logits [[ 0.02603524  0.09915052  0.09942466 -1.9022709 ]]
Iteration 900 of 1000: loss=3.31 " + "l1=0.0383" + "l2=3.27 f=-0.422 shape=(1, 9000, 1)
logits [[ 0.01811847  0.08416275  0.09112512 -1.8799758 ]]
--- 281.496773481369 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0117 " + "l1=0.0117" + "l2=0 f=-0.773 shape=(1, 9000, 1)
logits [[ 5.1907077 -4.172443   4.0244055 -8.136087 ]]
Iteration 100 of 1000: loss=0.0115 " + "l1=0.0113" + "l2=0.000213 f=-0.774 shape=(1, 9000, 1)
logits [[ 5.16561   -4.1857905  4.0394406 -8.116985 ]]
Iteration 200 of 1000: loss=0.0114 " + "l1=0.0113" + "l2=0.000166 f=-0.775 shape=(1, 9000, 1)
logits [[ 5.1656394 -4.1870766  4.040085  -8.116807 ]]
Iteration 300 of 1000: loss=0.0114 " + "l1=0.0112" + "l2=0.000186 f=-0.775 shape=(1, 9000, 1)
logits [[ 5.162996  -4.189451   4.0422816 -8.114623 ]]
Iteration 400 of 1000: loss=0.0114 " + "l1=0.0112" + "l2=0.000217 f=-0.775 shape=(1, 9000, 1)
logits [[ 5.159658  -4.1919775  4.0446515 -8.111779 ]]
Iteration 500 of 1000: loss=0.0114 " + "l1=0.0111" + "l2=0.000297 f=-0.775 shape=(1, 9000, 1)
logits [[ 5.156185  -4.1942344  4.0467677 -8.1087055]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.117 " + "l1=0.117" + "l2=0 f=-0.773 shape=(1, 9000, 1)
logits [[ 5.1907077 -4.172443   4.0244055 -8.136087 ]]
Iteration 100 of 1000: loss=0.0988 " + "l1=0.0884" + "l2=0.0104 f=-0.781 shape=(1, 9000, 1)
logits [[ 5.024264  -4.2763124  4.1400304 -8.010784 ]]
Iteration 200 of 1000: loss=0.0927 " + "l1=0.0793" + "l2=0.0134 f=-0.784 shape=(1, 9000, 1)
logits [[ 4.959745  -4.3083434  4.1664143 -7.95346  ]]
Iteration 300 of 1000: loss=0.0872 " + "l1=0.0716" + "l2=0.0156 f=-0.785 shape=(1, 9000, 1)
logits [[ 4.902193  -4.337487   4.186252  -7.8927684]]
Iteration 400 of 1000: loss=0.082 " + "l1=0.0641" + "l2=0.0179 f=-0.786 shape=(1, 9000, 1)
logits [[ 4.8382773 -4.3566313  4.197722  -7.8218217]]
Iteration 500 of 1000: loss=0.0766 " + "l1=0.0564" + "l2=0.0202 f=-0.785 shape=(1, 9000, 1)
logits [[ 4.7743807 -4.3773108  4.2101026 -7.7472606]]
Iteration 600 of 1000: loss=0.0716 " + "l1=0.0496" + "l2=0.0219 f=-0.783 shape=(1, 9000, 1)
logits [[ 4.7235355 -4.3964624  4.2270646 -7.686845 ]]
Iteration 700 of 1000: loss=0.0668 " + "l1=0.0435" + "l2=0.0233 f=-0.78 shape=(1, 9000, 1)
logits [[ 4.679935  -4.413148   4.2450604 -7.6309547]]
Iteration 800 of 1000: loss=0.0612 " + "l1=0.035" + "l2=0.0262 f=-0.774 shape=(1, 9000, 1)
logits [[ 4.6197124 -4.435477   4.26974   -7.5502124]]
Iteration 900 of 1000: loss=0.0556 " + "l1=0.027" + "l2=0.0286 f=-0.765 shape=(1, 9000, 1)
logits [[ 4.561208  -4.4476576  4.291215  -7.4646187]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.17 " + "l1=1.17" + "l2=0 f=-0.773 shape=(1, 9000, 1)
logits [[ 5.1907077 -4.172443   4.0244055 -8.136087 ]]
Iteration 100 of 1000: loss=0.163 " + "l1=0.00083" + "l2=0.162 f=-0.787 shape=(1, 9000, 1)
logits [[ 4.401642 -4.54097   4.400812 -7.409014]]
Iteration 200 of 1000: loss=0.121 " + "l1=0" + "l2=0.121 f=-0.78 shape=(1, 9000, 1)
logits [[ 4.403884  -4.5571833  4.4063826 -7.3737264]]
Iteration 300 of 1000: loss=0.0981 " + "l1=0.000747" + "l2=0.0974 f=-0.772 shape=(1, 9000, 1)
logits [[ 4.407563  -4.550139   4.4068165 -7.3520327]]
Iteration 400 of 1000: loss=0.0884 " + "l1=0" + "l2=0.0884 f=-0.765 shape=(1, 9000, 1)
logits [[ 4.3775024 -4.5417266  4.408027  -7.3055243]]
Iteration 500 of 1000: loss=0.0734 " + "l1=0" + "l2=0.0734 f=-0.76 shape=(1, 9000, 1)
logits [[ 4.379581  -4.512752   4.384781  -7.2907166]]
Iteration 600 of 1000: loss=0.0666 " + "l1=0" + "l2=0.0666 f=-0.754 shape=(1, 9000, 1)
logits [[ 4.359993  -4.4877243  4.369896  -7.2574153]]
Iteration 700 of 1000: loss=0.0609 " + "l1=0" + "l2=0.0609 f=-0.75 shape=(1, 9000, 1)
logits [[ 4.3448353 -4.470949   4.3644505 -7.237983 ]]
Iteration 800 of 1000: loss=0.0549 " + "l1=0" + "l2=0.0549 f=-0.747 shape=(1, 9000, 1)
logits [[ 4.3325987 -4.4499645  4.3524504 -7.2223654]]
Iteration 900 of 1000: loss=0.0489 " + "l1=0" + "l2=0.0489 f=-0.745 shape=(1, 9000, 1)
logits [[ 4.3240304 -4.4315257  4.3402305 -7.214648 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.641 " + "l1=0.641" + "l2=0 f=-0.773 shape=(1, 9000, 1)
logits [[ 5.1907077 -4.172443   4.0244055 -8.136087 ]]
Iteration 100 of 1000: loss=0.157 " + "l1=0.00188" + "l2=0.155 f=-0.787 shape=(1, 9000, 1)
logits [[ 4.410345  -4.550477   4.4069347 -7.4166684]]
Iteration 200 of 1000: loss=0.112 " + "l1=0.000137" + "l2=0.112 f=-0.781 shape=(1, 9000, 1)
logits [[ 4.402057  -4.555941   4.4018083 -7.371812 ]]
Iteration 300 of 1000: loss=0.0914 " + "l1=0" + "l2=0.0914 f=-0.773 shape=(1, 9000, 1)
logits [[ 4.391213 -4.542109  4.395848 -7.33528 ]]
Iteration 400 of 1000: loss=0.0786 " + "l1=0" + "l2=0.0786 f=-0.766 shape=(1, 9000, 1)
logits [[ 4.3754015 -4.5209618  4.3841014 -7.3005676]]
Iteration 500 of 1000: loss=0.0692 " + "l1=0.00181" + "l2=0.0673 f=-0.76 shape=(1, 9000, 1)
logits [[ 4.3625584 -4.488682   4.359263  -7.271709 ]]
Iteration 600 of 1000: loss=0.0637 " + "l1=0" + "l2=0.0637 f=-0.755 shape=(1, 9000, 1)
logits [[ 4.330519  -4.467911   4.3516145 -7.235412 ]]
Iteration 700 of 1000: loss=0.0552 " + "l1=0" + "l2=0.0552 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.3260365 -4.437002   4.3320007 -7.2252197]]
Iteration 800 of 1000: loss=0.0494 " + "l1=0" + "l2=0.0494 f=-0.749 shape=(1, 9000, 1)
logits [[ 4.3160524 -4.416476   4.320434  -7.2159414]]
Iteration 900 of 1000: loss=0.0444 " + "l1=0.000769" + "l2=0.0436 f=-0.748 shape=(1, 9000, 1)
logits [[ 4.3068833 -4.395626   4.3054857 -7.208062 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.379 " + "l1=0.379" + "l2=0 f=-0.773 shape=(1, 9000, 1)
logits [[ 5.1907077 -4.172443   4.0244055 -8.136087 ]]
Iteration 100 of 1000: loss=0.182 " + "l1=0.0604" + "l2=0.122 f=-0.792 shape=(1, 9000, 1)
logits [[ 4.539625  -4.497442   4.3536253 -7.565237 ]]
Iteration 200 of 1000: loss=0.114 " + "l1=0.000523" + "l2=0.114 f=-0.785 shape=(1, 9000, 1)
logits [[ 4.396893  -4.5572224  4.395285  -7.375258 ]]
Iteration 300 of 1000: loss=0.0898 " + "l1=0" + "l2=0.0898 f=-0.775 shape=(1, 9000, 1)
logits [[ 4.3843307 -4.53831    4.384663  -7.3325186]]
Iteration 400 of 1000: loss=0.0762 " + "l1=0" + "l2=0.0762 f=-0.768 shape=(1, 9000, 1)
logits [[ 4.3623114 -4.5148034  4.3683314 -7.2873106]]
Iteration 500 of 1000: loss=0.0668 " + "l1=0" + "l2=0.0668 f=-0.763 shape=(1, 9000, 1)
logits [[ 4.339164  -4.484937   4.3469996 -7.25185  ]]
Iteration 600 of 1000: loss=0.0607 " + "l1=0.00346" + "l2=0.0572 f=-0.757 shape=(1, 9000, 1)
logits [[ 4.3320417 -4.447358   4.3213944 -7.2358794]]
Iteration 700 of 1000: loss=0.0524 " + "l1=0.000238" + "l2=0.0521 f=-0.752 shape=(1, 9000, 1)
logits [[ 4.307274  -4.416678   4.306542  -7.2070456]]
Iteration 800 of 1000: loss=0.0466 " + "l1=0.000619" + "l2=0.046 f=-0.75 shape=(1, 9000, 1)
logits [[ 4.292446  -4.3890033  4.2905407 -7.1920333]]
Iteration 900 of 1000: loss=0.0418 " + "l1=0" + "l2=0.0418 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.2695537 -4.369976   4.273497  -7.176168 ]]
--- 276.54561948776245 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.133 " + "l1=0.133" + "l2=0 f=-0.773 shape=(1, 9000, 1)
logits [[ 5.1907077 -4.172443   4.0244055 -8.136087 ]]
Iteration 100 of 1000: loss=0.132 " + "l1=0.132" + "l2=0.000575 f=-0.77 shape=(1, 9000, 1)
logits [[ 5.1256957 -4.150203   3.991275  -8.048146 ]]
Iteration 200 of 1000: loss=0.132 " + "l1=0.131" + "l2=0.000622 f=-0.77 shape=(1, 9000, 1)
logits [[ 5.1125655 -4.1458254  3.9837086 -8.03061  ]]
Iteration 300 of 1000: loss=0.132 " + "l1=0.131" + "l2=0.000748 f=-0.77 shape=(1, 9000, 1)
logits [[ 5.0964    -4.1408734  3.9751885 -8.008834 ]]
Iteration 400 of 1000: loss=0.132 " + "l1=0.131" + "l2=0.0009 f=-0.769 shape=(1, 9000, 1)
logits [[ 5.079774  -4.136013   3.9666438 -7.9863105]]
Iteration 500 of 1000: loss=0.131 " + "l1=0.13" + "l2=0.00109 f=-0.768 shape=(1, 9000, 1)
logits [[ 5.0636306 -4.131391   3.958412  -7.9644322]]
Iteration 600 of 1000: loss=0.131 " + "l1=0.13" + "l2=0.0012 f=-0.768 shape=(1, 9000, 1)
logits [[ 5.0477314 -4.1269636  3.9503112 -7.942528 ]]
Iteration 700 of 1000: loss=0.131 " + "l1=0.13" + "l2=0.00138 f=-0.767 shape=(1, 9000, 1)
logits [[ 5.032077  -4.1225934  3.942039  -7.92057  ]]
Iteration 800 of 1000: loss=0.131 " + "l1=0.129" + "l2=0.0016 f=-0.767 shape=(1, 9000, 1)
logits [[ 5.016183  -4.117391   3.9329758 -7.898356 ]]
Iteration 900 of 1000: loss=0.131 " + "l1=0.129" + "l2=0.00175 f=-0.766 shape=(1, 9000, 1)
logits [[ 5.0006666 -4.1130233  3.9247513 -7.876371 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.33 " + "l1=1.33" + "l2=0 f=-0.773 shape=(1, 9000, 1)
logits [[ 5.1907077 -4.172443   4.0244055 -8.136087 ]]
Iteration 100 of 1000: loss=1.24 " + "l1=1.18" + "l2=0.0526 f=-0.746 shape=(1, 9000, 1)
logits [[ 4.552274  -3.9444058  3.6885483 -7.279556 ]]
Iteration 200 of 1000: loss=1.18 " + "l1=1.09" + "l2=0.0891 f=-0.724 shape=(1, 9000, 1)
logits [[ 4.183608  -3.8118682  3.4728174 -6.7403193]]
Iteration 300 of 1000: loss=1.11 " + "l1=0.979" + "l2=0.128 f=-0.698 shape=(1, 9000, 1)
logits [[ 3.7281203 -3.610052   3.1551287 -6.064671 ]]
Iteration 400 of 1000: loss=1.06 " + "l1=0.91" + "l2=0.147 f=-0.661 shape=(1, 9000, 1)
logits [[ 3.4682739 -3.4783437  2.9946113 -5.6269784]]
Iteration 500 of 1000: loss=1.01 " + "l1=0.852" + "l2=0.159 f=-0.619 shape=(1, 9000, 1)
logits [[ 3.2728508 -3.3624637  2.8637261 -5.2489796]]
Iteration 600 of 1000: loss=0.965 " + "l1=0.796" + "l2=0.168 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.0696485 -3.2595398  2.7515771 -4.893185 ]]
Iteration 700 of 1000: loss=0.92 " + "l1=0.747" + "l2=0.173 f=-0.555 shape=(1, 9000, 1)
logits [[ 2.8852053 -3.1863523  2.6679494 -4.588158 ]]
Iteration 800 of 1000: loss=0.875 " + "l1=0.693" + "l2=0.182 f=-0.523 shape=(1, 9000, 1)
logits [[ 2.6813247 -3.121503   2.599238  -4.2517715]]
Iteration 900 of 1000: loss=0.832 " + "l1=0.647" + "l2=0.185 f=-0.499 shape=(1, 9000, 1)
logits [[ 2.5078743 -3.0452332  2.5076342 -3.9651384]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=13.3 " + "l1=13.3" + "l2=0 f=-0.773 shape=(1, 9000, 1)
logits [[ 5.1907077 -4.172443   4.0244055 -8.136087 ]]
Iteration 100 of 1000: loss=5.7 " + "l1=3.06" + "l2=2.64 f=-0.329 shape=(1, 9000, 1)
logits [[ 1.1453223 -1.7365754  1.1660924 -1.8909832]]
Iteration 200 of 1000: loss=4.04 " + "l1=1.25" + "l2=2.79 f=-0.298 shape=(1, 9000, 1)
logits [[ 0.40573528 -1.3942573   0.5240144  -0.72901195]]
Iteration 300 of 1000: loss=3.19 " + "l1=0.371" + "l2=2.82 f=-0.255 shape=(1, 9000, 1)
logits [[ 0.04979909 -1.3322827   0.31774107 -0.05342181]]
Iteration 400 of 1000: loss=2.45 " + "l1=0.0013" + "l2=2.44 f=-0.25 shape=(1, 9000, 1)
logits [[-0.11183248 -1.3776734   0.24627957  0.24497947]]
Iteration 500 of 1000: loss=2.01 " + "l1=0" + "l2=2.01 f=-0.254 shape=(1, 9000, 1)
logits [[-0.14083847 -1.4221673   0.26842588  0.28020144]]
Iteration 600 of 1000: loss=1.71 " + "l1=0" + "l2=1.71 f=-0.262 shape=(1, 9000, 1)
logits [[-0.17187524 -1.477372    0.2963274   0.30518895]]
Iteration 700 of 1000: loss=1.48 " + "l1=0.029" + "l2=1.45 f=-0.26 shape=(1, 9000, 1)
logits [[-0.14401391 -1.5509892   0.34220257  0.3132512 ]]
Iteration 800 of 1000: loss=1.3 " + "l1=0" + "l2=1.3 f=-0.25 shape=(1, 9000, 1)
logits [[-0.14328834 -1.5878726   0.35693967  0.3736714 ]]
Iteration 900 of 1000: loss=1.2 " + "l1=0" + "l2=1.2 f=-0.246 shape=(1, 9000, 1)
logits [[-0.13062833 -1.6236916   0.37800315  0.39412877]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.33 " + "l1=7.33" + "l2=0 f=-0.773 shape=(1, 9000, 1)
logits [[ 5.1907077 -4.172443   4.0244055 -8.136087 ]]
Iteration 100 of 1000: loss=4.21 " + "l1=2.85" + "l2=1.37 f=-0.419 shape=(1, 9000, 1)
logits [[ 1.9609362 -2.4007542  1.9680449 -3.20569  ]]
Iteration 200 of 1000: loss=3.43 " + "l1=1.8" + "l2=1.63 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.2906501 -1.9266287  1.3024846 -1.9788275]]
Iteration 300 of 1000: loss=2.97 " + "l1=1.24" + "l2=1.73 f=-0.317 shape=(1, 9000, 1)
logits [[ 0.8393718 -1.6381123  0.8933687 -1.3620844]]
Iteration 400 of 1000: loss=2.59 " + "l1=0.942" + "l2=1.64 f=-0.293 shape=(1, 9000, 1)
logits [[ 0.5801612  -1.4861364   0.72273797 -0.9892333 ]]
Iteration 500 of 1000: loss=2.18 " + "l1=0.623" + "l2=1.56 f=-0.265 shape=(1, 9000, 1)
logits [[ 0.35751966 -1.4181061   0.5667217  -0.56595266]]
Iteration 600 of 1000: loss=1.79 " + "l1=0.197" + "l2=1.59 f=-0.239 shape=(1, 9000, 1)
logits [[ 0.03167773 -1.4110533   0.39004096  0.03220471]]
Iteration 700 of 1000: loss=1.34 " + "l1=0" + "l2=1.34 f=-0.217 shape=(1, 9000, 1)
logits [[-0.07345098 -1.4759679   0.33848318  0.34447765]]
Iteration 800 of 1000: loss=1.15 " + "l1=0" + "l2=1.15 f=-0.207 shape=(1, 9000, 1)
logits [[-0.01195546 -1.5475544   0.3620092   0.36986417]]
Iteration 900 of 1000: loss=1.06 " + "l1=0.00432" + "l2=1.06 f=-0.198 shape=(1, 9000, 1)
logits [[ 0.02755752 -1.581189    0.3842803   0.37642616]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.33 " + "l1=4.33" + "l2=0 f=-0.773 shape=(1, 9000, 1)
logits [[ 5.1907077 -4.172443   4.0244055 -8.136087 ]]
Iteration 100 of 1000: loss=3.07 " + "l1=2.34" + "l2=0.735 f=-0.55 shape=(1, 9000, 1)
logits [[ 2.7204058 -3.1099699  2.6609616 -4.472619 ]]
Iteration 200 of 1000: loss=2.55 " + "l1=1.79" + "l2=0.76 f=-0.437 shape=(1, 9000, 1)
logits [[ 2.123484  -2.6198618  2.1175082 -3.3693595]]
Iteration 300 of 1000: loss=2.27 " + "l1=1.48" + "l2=0.79 f=-0.377 shape=(1, 9000, 1)
logits [[ 1.7974364 -2.3456964  1.7983887 -2.7596786]]
Iteration 400 of 1000: loss=2.08 " + "l1=1.31" + "l2=0.765 f=-0.348 shape=(1, 9000, 1)
logits [[ 1.6125107 -2.220369   1.6290134 -2.4125717]]
Iteration 500 of 1000: loss=1.89 " + "l1=1.12" + "l2=0.769 f=-0.319 shape=(1, 9000, 1)
logits [[ 1.3928647 -2.0212264  1.4016097 -2.04935  ]]
Iteration 600 of 1000: loss=1.72 " + "l1=0.966" + "l2=0.756 f=-0.303 shape=(1, 9000, 1)
logits [[ 1.1879709 -1.81982    1.1959867 -1.7765987]]
Iteration 700 of 1000: loss=1.55 " + "l1=0.786" + "l2=0.766 f=-0.291 shape=(1, 9000, 1)
logits [[ 0.91478306 -1.6738863   1.007651   -1.4111366 ]]
Iteration 800 of 1000: loss=1.37 " + "l1=0.598" + "l2=0.768 f=-0.261 shape=(1, 9000, 1)
logits [[ 0.6791613 -1.6291078  0.8730905 -0.9655699]]
Iteration 900 of 1000: loss=1.15 " + "l1=0.354" + "l2=0.796 f=-0.219 shape=(1, 9000, 1)
logits [[ 0.4262445  -1.593264    0.69044024 -0.399789  ]]
--- 305.38512110710144 seconds ---
Adv result:3
Loading record A01624
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0209 " + "l1=0.0209" + "l2=0 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.831279   -1.25934     0.71469593 -1.1647859 ]]
Iteration 100 of 1000: loss=0.0189 " + "l1=0.0178" + "l2=0.00114 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.6825693 -1.0978364  0.5806808 -1.0865726]]
Iteration 200 of 1000: loss=0.0181 " + "l1=0.0167" + "l2=0.00142 f=-0.235 shape=(1, 9000, 1)
logits [[ 0.6263341 -1.0439658  0.535529  -1.0596396]]
Iteration 300 of 1000: loss=0.0175 " + "l1=0.0158" + "l2=0.00175 f=-0.239 shape=(1, 9000, 1)
logits [[ 0.575596   -1.0002844   0.50226825 -1.0328888 ]]
Iteration 400 of 1000: loss=0.017 " + "l1=0.015" + "l2=0.00205 f=-0.242 shape=(1, 9000, 1)
logits [[ 0.5323055 -0.9641195  0.4750233 -1.0121768]]
Iteration 500 of 1000: loss=0.0166 " + "l1=0.0143" + "l2=0.00228 f=-0.245 shape=(1, 9000, 1)
logits [[ 0.4971306  -0.93516964  0.45357743 -0.99514455]]
Iteration 600 of 1000: loss=0.0163 " + "l1=0.0138" + "l2=0.00254 f=-0.247 shape=(1, 9000, 1)
logits [[ 0.4652237  -0.9127012   0.43596253 -0.97789526]]
Iteration 700 of 1000: loss=0.0159 " + "l1=0.0131" + "l2=0.00281 f=-0.251 shape=(1, 9000, 1)
logits [[ 0.42777684 -0.88510317  0.41522285 -0.9601638 ]]
Iteration 800 of 1000: loss=0.0156 " + "l1=0.0127" + "l2=0.0029 f=-0.252 shape=(1, 9000, 1)
logits [[ 0.40300804 -0.8690953   0.40202922 -0.9449072 ]]
Iteration 900 of 1000: loss=0.0155 " + "l1=0.0125" + "l2=0.00304 f=-0.253 shape=(1, 9000, 1)
logits [[ 0.38878438 -0.8560741   0.38917306 -0.93279034]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.209 " + "l1=0.209" + "l2=0 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.831279   -1.25934     0.71469593 -1.1647859 ]]
Iteration 100 of 1000: loss=0.089 " + "l1=0.0543" + "l2=0.0348 f=-0.274 shape=(1, 9000, 1)
logits [[ 0.08987409 -0.4456373   0.09688246 -0.83611256]]
Iteration 200 of 1000: loss=0.0698 " + "l1=0.0277" + "l2=0.042 f=-0.271 shape=(1, 9000, 1)
logits [[-0.03288479 -0.3040647  -0.02693618 -0.7210496 ]]
Iteration 300 of 1000: loss=0.058 " + "l1=0.0091" + "l2=0.0489 f=-0.263 shape=(1, 9000, 1)
logits [[-0.11707945 -0.2054404  -0.11448599 -0.6159562 ]]
Iteration 400 of 1000: loss=0.0494 " + "l1=0.00285" + "l2=0.0465 f=-0.256 shape=(1, 9000, 1)
logits [[-0.14481737 -0.16994779 -0.14144005 -0.56951636]]
Iteration 500 of 1000: loss=0.0428 " + "l1=0.000595" + "l2=0.0422 f=-0.256 shape=(1, 9000, 1)
logits [[-0.1569784  -0.15861529 -0.15266855 -0.5545686 ]]
Iteration 600 of 1000: loss=0.0393 " + "l1=0.000897" + "l2=0.0384 f=-0.256 shape=(1, 9000, 1)
logits [[-0.1633904  -0.15897132 -0.15000106 -0.55202043]]
Iteration 700 of 1000: loss=0.037 " + "l1=0" + "l2=0.037 f=-0.252 shape=(1, 9000, 1)
logits [[-0.16798894 -0.15076828 -0.1593308  -0.5312832 ]]
Iteration 800 of 1000: loss=0.0346 " + "l1=0" + "l2=0.0346 f=-0.248 shape=(1, 9000, 1)
logits [[-0.16727558 -0.15928327 -0.1633532  -0.502399  ]]
Iteration 900 of 1000: loss=0.0336 " + "l1=0.00178" + "l2=0.0319 f=-0.247 shape=(1, 9000, 1)
logits [[-0.1775651  -0.17433134 -0.15655944 -0.48007876]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.115 " + "l1=0.115" + "l2=0 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.831279   -1.25934     0.71469593 -1.1647859 ]]
Iteration 100 of 1000: loss=0.0646 " + "l1=0.0467" + "l2=0.0179 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.23383042 -0.61494493  0.23261143 -0.9173176 ]]
Iteration 200 of 1000: loss=0.0563 " + "l1=0.0384" + "l2=0.0179 f=-0.265 shape=(1, 9000, 1)
logits [[ 0.16236274 -0.5358843   0.159171   -0.84648407]]
Iteration 300 of 1000: loss=0.0514 " + "l1=0.0322" + "l2=0.0192 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.10655162 -0.476701    0.10856421 -0.804005  ]]
Iteration 400 of 1000: loss=0.0479 " + "l1=0.0284" + "l2=0.0195 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.06870028 -0.43989873  0.07628002 -0.77252364]]
Iteration 500 of 1000: loss=0.045 " + "l1=0.0256" + "l2=0.0194 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.04676406 -0.41401613  0.05134787 -0.7465391 ]]
Iteration 600 of 1000: loss=0.0421 " + "l1=0.0218" + "l2=0.0202 f=-0.264 shape=(1, 9000, 1)
logits [[ 0.01062731 -0.37954116  0.01764469 -0.7053117 ]]
Iteration 700 of 1000: loss=0.0394 " + "l1=0.0186" + "l2=0.0208 f=-0.262 shape=(1, 9000, 1)
logits [[-0.01413392 -0.35042343 -0.01247638 -0.6698416 ]]
Iteration 800 of 1000: loss=0.0371 " + "l1=0.0158" + "l2=0.0213 f=-0.259 shape=(1, 9000, 1)
logits [[-0.04168292 -0.32437426 -0.03766919 -0.63266224]]
Iteration 900 of 1000: loss=0.035 " + "l1=0.0126" + "l2=0.0224 f=-0.258 shape=(1, 9000, 1)
logits [[-0.07684881 -0.29480663 -0.06564743 -0.5946561 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.162 " + "l1=0.162" + "l2=0 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.831279   -1.25934     0.71469593 -1.1647859 ]]
Iteration 100 of 1000: loss=0.0789 " + "l1=0.0536" + "l2=0.0253 f=-0.269 shape=(1, 9000, 1)
logits [[ 0.16084756 -0.53027844  0.16094863 -0.8676636 ]]
Iteration 200 of 1000: loss=0.0661 " + "l1=0.0376" + "l2=0.0284 f=-0.271 shape=(1, 9000, 1)
logits [[ 0.05903952 -0.41579965  0.06999651 -0.7983152 ]]
Iteration 300 of 1000: loss=0.0583 " + "l1=0.0269" + "l2=0.0315 f=-0.267 shape=(1, 9000, 1)
logits [[ 1.4194343e-03 -3.4507018e-01  6.1577233e-04 -7.2664255e-01]]
Iteration 400 of 1000: loss=0.0525 " + "l1=0.0189" + "l2=0.0336 f=-0.267 shape=(1, 9000, 1)
logits [[-0.05089124 -0.2866955  -0.04323557 -0.68901885]]
Iteration 500 of 1000: loss=0.0471 " + "l1=0.0131" + "l2=0.034 f=-0.262 shape=(1, 9000, 1)
logits [[-0.082481   -0.24717478 -0.07844647 -0.63800293]]
Iteration 600 of 1000: loss=0.0426 " + "l1=0.00817" + "l2=0.0344 f=-0.26 shape=(1, 9000, 1)
logits [[-0.12290676 -0.21248376 -0.10709723 -0.5978215 ]]
Iteration 700 of 1000: loss=0.038 " + "l1=0.00136" + "l2=0.0367 f=-0.254 shape=(1, 9000, 1)
logits [[-0.16189894 -0.16717122 -0.1496541  -0.5368606 ]]
Iteration 800 of 1000: loss=0.034 " + "l1=0.000154" + "l2=0.0338 f=-0.254 shape=(1, 9000, 1)
logits [[-0.17069882 -0.15910946 -0.15712105 -0.52937406]]
Iteration 900 of 1000: loss=0.0317 " + "l1=0" + "l2=0.0317 f=-0.25 shape=(1, 9000, 1)
logits [[-0.17990157 -0.16246614 -0.16494553 -0.4938267 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.139 " + "l1=0.139" + "l2=0 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.831279   -1.25934     0.71469593 -1.1647859 ]]
Iteration 100 of 1000: loss=0.0722 " + "l1=0.051" + "l2=0.0212 f=-0.268 shape=(1, 9000, 1)
logits [[ 0.19544297 -0.57302976  0.19689058 -0.88950545]]
Iteration 200 of 1000: loss=0.0619 " + "l1=0.0395" + "l2=0.0224 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.11569692 -0.48064208  0.11207092 -0.8166286 ]]
Iteration 300 of 1000: loss=0.0557 " + "l1=0.0315" + "l2=0.0242 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.05202338 -0.41487515  0.06058843 -0.7659994 ]]
Iteration 400 of 1000: loss=0.0511 " + "l1=0.0256" + "l2=0.0255 f=-0.265 shape=(1, 9000, 1)
logits [[ 0.01426252 -0.37106693  0.01575122 -0.7185858 ]]
Iteration 500 of 1000: loss=0.047 " + "l1=0.0208" + "l2=0.0262 f=-0.265 shape=(1, 9000, 1)
logits [[-0.02833783 -0.33311385 -0.01868221 -0.679198  ]]
Iteration 600 of 1000: loss=0.0431 " + "l1=0.0164" + "l2=0.0268 f=-0.263 shape=(1, 9000, 1)
logits [[-0.06173778 -0.2984302  -0.05108786 -0.64088535]]
Iteration 700 of 1000: loss=0.0399 " + "l1=0.0128" + "l2=0.0271 f=-0.259 shape=(1, 9000, 1)
logits [[-0.08763114 -0.2706944  -0.07799627 -0.59982055]]
Iteration 800 of 1000: loss=0.0366 " + "l1=0.009" + "l2=0.0276 f=-0.256 shape=(1, 9000, 1)
logits [[-0.12060627 -0.2447765  -0.10894868 -0.5490967 ]]
Iteration 900 of 1000: loss=0.033 " + "l1=0.00297" + "l2=0.03 f=-0.252 shape=(1, 9000, 1)
logits [[-0.16341871 -0.19868553 -0.1538123  -0.4910239 ]]
--- 306.7870728969574 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00117 " + "l1=0.00117" + "l2=0 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.831279   -1.25934     0.71469593 -1.1647859 ]]
Iteration 100 of 1000: loss=0.000847 " + "l1=0.000636" + "l2=0.000211 f=-0.222 shape=(1, 9000, 1)
logits [[ 0.79793316 -1.2698182   0.73428655 -1.1509664 ]]
Iteration 200 of 1000: loss=0.000706 " + "l1=0.000485" + "l2=0.000221 f=-0.223 shape=(1, 9000, 1)
logits [[ 0.78854305 -1.2722883   0.74001366 -1.1487589 ]]
Iteration 300 of 1000: loss=0.000598 " + "l1=0.000318" + "l2=0.00028 f=-0.224 shape=(1, 9000, 1)
logits [[ 0.77803063 -1.2750267   0.7462032  -1.1452862 ]]
Iteration 400 of 1000: loss=0.000503 " + "l1=0.000147" + "l2=0.000357 f=-0.225 shape=(1, 9000, 1)
logits [[ 0.7675489 -1.2786908  0.7528832 -1.1419537]]
Iteration 500 of 1000: loss=0.000447 " + "l1=6.69e-06" + "l2=0.00044 f=-0.226 shape=(1, 9000, 1)
logits [[ 0.7586812 -1.2809498  0.758012  -1.1397955]]
Iteration 600 of 1000: loss=0.000382 " + "l1=0" + "l2=0.000382 f=-0.226 shape=(1, 9000, 1)
logits [[ 0.75818914 -1.2810093   0.7584203  -1.140229  ]]
Iteration 700 of 1000: loss=0.000381 " + "l1=0" + "l2=0.000381 f=-0.226 shape=(1, 9000, 1)
logits [[ 0.75829464 -1.2810705   0.7583761  -1.1406413 ]]
Iteration 800 of 1000: loss=0.000458 " + "l1=0" + "l2=0.000458 f=-0.226 shape=(1, 9000, 1)
logits [[ 0.75763375 -1.2812053   0.75838244 -1.1405573 ]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.000583 " + "l1=0.000583" + "l2=0 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.831279   -1.25934     0.71469593 -1.1647859 ]]
Iteration 100 of 1000: loss=0.000504 " + "l1=0.000417" + "l2=8.73e-05 f=-0.221 shape=(1, 9000, 1)
logits [[ 0.8098752  -1.2649696   0.72648466 -1.1558933 ]]
Iteration 200 of 1000: loss=0.000468 " + "l1=0.000396" + "l2=7.19e-05 f=-0.221 shape=(1, 9000, 1)
logits [[ 0.8072072  -1.2652843   0.72796595 -1.1556845 ]]
Iteration 300 of 1000: loss=0.000448 " + "l1=0.00036" + "l2=8.84e-05 f=-0.222 shape=(1, 9000, 1)
logits [[ 0.80246514 -1.2664186   0.73053926 -1.1540205 ]]
Iteration 400 of 1000: loss=0.000443 " + "l1=0.000318" + "l2=0.000124 f=-0.222 shape=(1, 9000, 1)
logits [[ 0.7975575  -1.2682145   0.73391616 -1.1526031 ]]
Iteration 500 of 1000: loss=0.000465 " + "l1=0.000275" + "l2=0.00019 f=-0.223 shape=(1, 9000, 1)
logits [[ 0.79248583 -1.270077    0.7373921  -1.1510999 ]]
const [0.0025]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.000291 " + "l1=0.000291" + "l2=0 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.831279   -1.25934     0.71469593 -1.1647859 ]]
Iteration 100 of 1000: loss=0.000283 " + "l1=0.000233" + "l2=4.97e-05 f=-0.221 shape=(1, 9000, 1)
logits [[ 0.816146  -1.262928   0.7229387 -1.1584383]]
Iteration 200 of 1000: loss=0.000263 " + "l1=0.000235" + "l2=2.8e-05 f=-0.221 shape=(1, 9000, 1)
logits [[ 0.8167644 -1.2626395  0.7225917 -1.1592723]]
Iteration 300 of 1000: loss=0.000288 " + "l1=0.000229" + "l2=5.92e-05 f=-0.221 shape=(1, 9000, 1)
logits [[ 0.81522673 -1.2631491   0.723583   -1.1587783 ]]
const [0.00125]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.000146 " + "l1=0.000146" + "l2=0 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.831279   -1.25934     0.71469593 -1.1647859 ]]
Iteration 100 of 1000: loss=0.000158 " + "l1=0.000124" + "l2=3.41e-05 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.81965697 -1.2614733   0.7206973  -1.1598989 ]]
const [0.000625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=7.29e-05 " + "l1=7.29e-05" + "l2=0 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.831279   -1.25934     0.71469593 -1.1647859 ]]
Iteration 100 of 1000: loss=8.9e-05 " + "l1=6.38e-05" + "l2=2.52e-05 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.8217135  -1.2609894   0.71959466 -1.1607974 ]]
--- 125.56455969810486 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.02 " + "l1=0.02" + "l2=0 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.831279   -1.25934     0.71469593 -1.1647859 ]]
Iteration 100 of 1000: loss=0.0184 " + "l1=0.0175" + "l2=0.000876 f=-0.223 shape=(1, 9000, 1)
logits [[ 0.7053762 -1.1851512  0.6321235 -1.0424228]]
Iteration 200 of 1000: loss=0.0177 " + "l1=0.0166" + "l2=0.0011 f=-0.226 shape=(1, 9000, 1)
logits [[ 0.65580183 -1.1508318   0.5965682  -1.0065509 ]]
Iteration 300 of 1000: loss=0.0171 " + "l1=0.0157" + "l2=0.00139 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.6029826  -1.1142491   0.55924755 -0.96927243]]
Iteration 400 of 1000: loss=0.0166 " + "l1=0.0149" + "l2=0.00166 f=-0.234 shape=(1, 9000, 1)
logits [[ 0.5570202 -1.0860758  0.5309639 -0.9360028]]
Iteration 500 of 1000: loss=0.0161 " + "l1=0.0142" + "l2=0.00188 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.5154027  -1.0638767   0.51035637 -0.90460944]]
Iteration 600 of 1000: loss=0.0156 " + "l1=0.0137" + "l2=0.00188 f=-0.237 shape=(1, 9000, 1)
logits [[ 0.48961315 -1.04464     0.48982632 -0.8810534 ]]
Iteration 700 of 1000: loss=0.0153 " + "l1=0.0133" + "l2=0.00196 f=-0.237 shape=(1, 9000, 1)
logits [[ 0.47170687 -1.0299504   0.47134653 -0.86043817]]
Iteration 800 of 1000: loss=0.015 " + "l1=0.0129" + "l2=0.00214 f=-0.238 shape=(1, 9000, 1)
logits [[ 0.45137638 -1.0135046   0.45077673 -0.838729  ]]
Iteration 900 of 1000: loss=0.0146 " + "l1=0.0125" + "l2=0.00209 f=-0.238 shape=(1, 9000, 1)
logits [[ 0.43212152 -0.99965733  0.4319994  -0.81680095]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.2 " + "l1=0.2" + "l2=0 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.831279   -1.25934     0.71469593 -1.1647859 ]]
Iteration 100 of 1000: loss=0.0852 " + "l1=0.0369" + "l2=0.0484 f=-0.224 shape=(1, 9000, 1)
logits [[ 0.03575243 -0.7226917   0.08066247 -0.28797913]]
Iteration 200 of 1000: loss=0.0502 " + "l1=0.00053" + "l2=0.0497 f=-0.209 shape=(1, 9000, 1)
logits [[-0.12476917 -0.6171604  -0.04376359 -0.049064  ]]
Iteration 300 of 1000: loss=0.0405 " + "l1=0.00166" + "l2=0.0388 f=-0.208 shape=(1, 9000, 1)
logits [[-0.10671459 -0.6229585  -0.04272602 -0.05931243]]
Iteration 400 of 1000: loss=0.034 " + "l1=0" + "l2=0.034 f=-0.209 shape=(1, 9000, 1)
logits [[-0.11941311 -0.627891   -0.05445962 -0.032958  ]]
Iteration 500 of 1000: loss=0.0284 " + "l1=0" + "l2=0.0284 f=-0.21 shape=(1, 9000, 1)
logits [[-0.10545889 -0.65128493 -0.04592449 -0.03534334]]
Iteration 600 of 1000: loss=0.0248 " + "l1=0" + "l2=0.0248 f=-0.209 shape=(1, 9000, 1)
logits [[-0.10007162 -0.680275   -0.04121241 -0.01643227]]
Iteration 700 of 1000: loss=0.021 " + "l1=0" + "l2=0.021 f=-0.212 shape=(1, 9000, 1)
logits [[-0.08727337 -0.71094024 -0.02914533 -0.0225307 ]]
Iteration 800 of 1000: loss=0.0188 " + "l1=0" + "l2=0.0188 f=-0.216 shape=(1, 9000, 1)
logits [[-0.08922391 -0.7288066  -0.026222   -0.02007008]]
Iteration 900 of 1000: loss=0.0172 " + "l1=0" + "l2=0.0172 f=-0.219 shape=(1, 9000, 1)
logits [[-0.09513658 -0.7404517  -0.02606033 -0.01295808]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.11 " + "l1=0.11" + "l2=0 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.831279   -1.25934     0.71469593 -1.1647859 ]]
Iteration 100 of 1000: loss=0.0684 " + "l1=0.0513" + "l2=0.0172 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.28804132 -0.8785544   0.2896221  -0.6422731 ]]
Iteration 200 of 1000: loss=0.0574 " + "l1=0.0368" + "l2=0.0206 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.15900925 -0.7804852   0.17386378 -0.4951281 ]]
Iteration 300 of 1000: loss=0.0486 " + "l1=0.0222" + "l2=0.0264 f=-0.229 shape=(1, 9000, 1)
logits [[ 0.03728689 -0.7137674   0.0813688  -0.3220672 ]]
Iteration 400 of 1000: loss=0.0395 " + "l1=0.00779" + "l2=0.0317 f=-0.22 shape=(1, 9000, 1)
logits [[-0.07112269 -0.67175996  0.00196486 -0.13967028]]
Iteration 500 of 1000: loss=0.0308 " + "l1=0.000477" + "l2=0.0303 f=-0.213 shape=(1, 9000, 1)
logits [[-0.12221429 -0.6449811  -0.03896895 -0.0476471 ]]
Iteration 600 of 1000: loss=0.0258 " + "l1=0.000476" + "l2=0.0253 f=-0.214 shape=(1, 9000, 1)
logits [[-0.11625615 -0.66226494 -0.03494898 -0.04360902]]
Iteration 700 of 1000: loss=0.0224 " + "l1=0.000629" + "l2=0.0218 f=-0.216 shape=(1, 9000, 1)
logits [[-0.10733636 -0.68956286 -0.02800687 -0.03944331]]
Iteration 800 of 1000: loss=0.0196 " + "l1=0" + "l2=0.0196 f=-0.218 shape=(1, 9000, 1)
logits [[-0.10719845 -0.7172631  -0.02730402 -0.01881814]]
Iteration 900 of 1000: loss=0.0177 " + "l1=0" + "l2=0.0177 f=-0.221 shape=(1, 9000, 1)
logits [[-0.10845705 -0.7321501  -0.02498115 -0.01774215]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0649 " + "l1=0.0649" + "l2=0 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.831279   -1.25934     0.71469593 -1.1647859 ]]
Iteration 100 of 1000: loss=0.0487 " + "l1=0.041" + "l2=0.0077 f=-0.234 shape=(1, 9000, 1)
logits [[ 0.44484273 -1.0098821   0.44450074 -0.81544405]]
Iteration 200 of 1000: loss=0.0432 " + "l1=0.0341" + "l2=0.00911 f=-0.237 shape=(1, 9000, 1)
logits [[ 0.3345866  -0.9067536   0.336577   -0.71309185]]
Iteration 300 of 1000: loss=0.0398 " + "l1=0.0302" + "l2=0.00957 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.283865   -0.86947703  0.2859441  -0.6446621 ]]
Iteration 400 of 1000: loss=0.0369 " + "l1=0.0267" + "l2=0.0103 f=-0.237 shape=(1, 9000, 1)
logits [[ 0.236667   -0.8417536   0.23895656 -0.58211845]]
Iteration 500 of 1000: loss=0.0341 " + "l1=0.0232" + "l2=0.0109 f=-0.239 shape=(1, 9000, 1)
logits [[ 0.17967558 -0.8164462   0.19687375 -0.51618356]]
Iteration 600 of 1000: loss=0.0311 " + "l1=0.0193" + "l2=0.0118 f=-0.24 shape=(1, 9000, 1)
logits [[ 0.1208382  -0.79341716  0.15311946 -0.44020727]]
Iteration 700 of 1000: loss=0.0281 " + "l1=0.0159" + "l2=0.0123 f=-0.24 shape=(1, 9000, 1)
logits [[ 0.06782679 -0.77744055  0.1190289  -0.36988223]]
Iteration 800 of 1000: loss=0.0252 " + "l1=0.0123" + "l2=0.0129 f=-0.241 shape=(1, 9000, 1)
logits [[ 0.01129139 -0.7641214   0.08422321 -0.29408213]]
Iteration 900 of 1000: loss=0.0226 " + "l1=0.00927" + "l2=0.0134 f=-0.239 shape=(1, 9000, 1)
logits [[-0.03042522 -0.7583403   0.0585888  -0.22675875]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0873 " + "l1=0.0873" + "l2=0 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.831279   -1.25934     0.71469593 -1.1647859 ]]
Iteration 100 of 1000: loss=0.0595 " + "l1=0.047" + "l2=0.0125 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.35037473 -0.92429364  0.35169467 -0.7221226 ]]
Iteration 200 of 1000: loss=0.0516 " + "l1=0.0376" + "l2=0.0141 f=-0.238 shape=(1, 9000, 1)
logits [[ 0.25026333 -0.84402764  0.25065437 -0.6084563 ]]
Iteration 300 of 1000: loss=0.0463 " + "l1=0.0303" + "l2=0.016 f=-0.238 shape=(1, 9000, 1)
logits [[ 0.16826355 -0.79079574  0.18278418 -0.51039416]]
Iteration 400 of 1000: loss=0.0411 " + "l1=0.023" + "l2=0.0181 f=-0.235 shape=(1, 9000, 1)
logits [[ 0.09199561 -0.7587855   0.12624066 -0.39910418]]
Iteration 500 of 1000: loss=0.0355 " + "l1=0.0156" + "l2=0.0199 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.02868876 -0.74396485  0.07468197 -0.28226668]]
Iteration 600 of 1000: loss=0.0301 " + "l1=0.0089" + "l2=0.0212 f=-0.228 shape=(1, 9000, 1)
logits [[-0.04593717 -0.7145127   0.0254629  -0.17790252]]
Iteration 700 of 1000: loss=0.0253 " + "l1=0.00309" + "l2=0.0222 f=-0.223 shape=(1, 9000, 1)
logits [[-0.09664886 -0.70407957 -0.01078732 -0.08134257]]
Iteration 800 of 1000: loss=0.021 " + "l1=8.67e-05" + "l2=0.0209 f=-0.221 shape=(1, 9000, 1)
logits [[-0.115606   -0.71946394 -0.02325102 -0.02523387]]
Iteration 900 of 1000: loss=0.0184 " + "l1=0" + "l2=0.0184 f=-0.224 shape=(1, 9000, 1)
logits [[-0.11930259 -0.73542076 -0.02148009 -0.01880876]]
--- 308.35710072517395 seconds ---
Adv result:3
Loading record A01642
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0753 " + "l1=0.0753" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.3293457 -3.201626   2.9551008 -6.7596264]]
Iteration 100 of 1000: loss=0.075 " + "l1=0.0748" + "l2=0.000236 f=-0.668 shape=(1, 9000, 1)
logits [[ 4.29947   -3.1816185  2.9396229 -6.7299533]]
Iteration 200 of 1000: loss=0.075 " + "l1=0.0748" + "l2=0.000214 f=-0.668 shape=(1, 9000, 1)
logits [[ 4.296957  -3.179861   2.938491  -6.7278013]]
Iteration 300 of 1000: loss=0.0749 " + "l1=0.0747" + "l2=0.000244 f=-0.668 shape=(1, 9000, 1)
logits [[ 4.2926216 -3.1771562  2.936619  -6.724162 ]]
Iteration 400 of 1000: loss=0.0749 " + "l1=0.0746" + "l2=0.000298 f=-0.668 shape=(1, 9000, 1)
logits [[ 4.287967  -3.1743236  2.9347367 -6.720538 ]]
Iteration 500 of 1000: loss=0.0749 " + "l1=0.0745" + "l2=0.00032 f=-0.668 shape=(1, 9000, 1)
logits [[ 4.283163  -3.1714957  2.9329655 -6.716944 ]]
Iteration 600 of 1000: loss=0.0749 " + "l1=0.0745" + "l2=0.000455 f=-0.668 shape=(1, 9000, 1)
logits [[ 4.2782183 -3.1687665  2.931346  -6.713481 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.753 " + "l1=0.753" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.3293457 -3.201626   2.9551008 -6.7596264]]
Iteration 100 of 1000: loss=0.726 " + "l1=0.706" + "l2=0.0196 f=-0.656 shape=(1, 9000, 1)
logits [[ 4.0445275 -3.0191088  2.8134065 -6.4646983]]
Iteration 200 of 1000: loss=0.716 " + "l1=0.691" + "l2=0.0257 f=-0.653 shape=(1, 9000, 1)
logits [[ 3.9510727 -2.9543269  2.7684777 -6.3780556]]
Iteration 300 of 1000: loss=0.706 " + "l1=0.675" + "l2=0.0309 f=-0.65 shape=(1, 9000, 1)
logits [[ 3.86324   -2.8868263  2.724268  -6.3001437]]
Iteration 400 of 1000: loss=0.695 " + "l1=0.658" + "l2=0.0366 f=-0.646 shape=(1, 9000, 1)
logits [[ 3.764846  -2.814834   2.6777086 -6.2112417]]
Iteration 500 of 1000: loss=0.684 " + "l1=0.642" + "l2=0.0416 f=-0.642 shape=(1, 9000, 1)
logits [[ 3.6662076 -2.7533906  2.635717  -6.115681 ]]
Iteration 600 of 1000: loss=0.672 " + "l1=0.626" + "l2=0.046 f=-0.636 shape=(1, 9000, 1)
logits [[ 3.5744562 -2.690214   2.5914218 -6.0206065]]
Iteration 700 of 1000: loss=0.662 " + "l1=0.612" + "l2=0.0505 f=-0.631 shape=(1, 9000, 1)
logits [[ 3.4847136 -2.630897   2.5493248 -5.926079 ]]
Iteration 800 of 1000: loss=0.651 " + "l1=0.595" + "l2=0.0555 f=-0.624 shape=(1, 9000, 1)
logits [[ 3.3900688 -2.564905   2.5027204 -5.8257484]]
Iteration 900 of 1000: loss=0.641 " + "l1=0.582" + "l2=0.0591 f=-0.62 shape=(1, 9000, 1)
logits [[ 3.3084795 -2.5074396  2.4621427 -5.741699 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.53 " + "l1=7.53" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.3293457 -3.201626   2.9551008 -6.7596264]]
Iteration 100 of 1000: loss=4.34 " + "l1=2.75" + "l2=1.59 f=-0.464 shape=(1, 9000, 1)
logits [[ 1.4322933 -1.3105617  1.44103   -3.4187167]]
Iteration 200 of 1000: loss=3.34 " + "l1=1.54" + "l2=1.8 f=-0.401 shape=(1, 9000, 1)
logits [[ 0.8563223  -0.67209363  0.8715682  -2.6606052 ]]
Iteration 300 of 1000: loss=2.66 " + "l1=0.921" + "l2=1.74 f=-0.4 shape=(1, 9000, 1)
logits [[ 0.49704692 -0.41078287  0.51007164 -2.198306  ]]
Iteration 400 of 1000: loss=2.35 " + "l1=0.656" + "l2=1.69 f=-0.382 shape=(1, 9000, 1)
logits [[ 0.31568483 -0.31470102  0.34146112 -1.8696669 ]]
Iteration 500 of 1000: loss=2.11 " + "l1=0.41" + "l2=1.7 f=-0.356 shape=(1, 9000, 1)
logits [[ 0.17875488 -0.22149113  0.18860622 -1.5703664 ]]
Iteration 600 of 1000: loss=1.93 " + "l1=0.264" + "l2=1.67 f=-0.336 shape=(1, 9000, 1)
logits [[ 0.0865332  -0.16358772  0.10006163 -1.3685669 ]]
Iteration 700 of 1000: loss=1.78 " + "l1=0.147" + "l2=1.63 f=-0.328 shape=(1, 9000, 1)
logits [[ 0.02536258 -0.11347079  0.03319882 -1.2590247 ]]
Iteration 800 of 1000: loss=1.64 " + "l1=0.025" + "l2=1.61 f=-0.322 shape=(1, 9000, 1)
logits [[-0.03793067 -0.06290839 -0.03833277 -1.1479137 ]]
Iteration 900 of 1000: loss=1.5 " + "l1=0.00258" + "l2=1.49 f=-0.319 shape=(1, 9000, 1)
logits [[-0.04943611 -0.04809488 -0.04551781 -1.1324874 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.14 " + "l1=4.14" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.3293457 -3.201626   2.9551008 -6.7596264]]
Iteration 100 of 1000: loss=3.11 " + "l1=2.46" + "l2=0.651 f=-0.555 shape=(1, 9000, 1)
logits [[ 2.444146  -2.023781   2.0102434 -4.6498623]]
Iteration 200 of 1000: loss=2.57 " + "l1=1.74" + "l2=0.83 f=-0.487 shape=(1, 9000, 1)
logits [[ 1.6334152 -1.5255969  1.613001  -3.6702878]]
Iteration 300 of 1000: loss=2.22 " + "l1=1.35" + "l2=0.872 f=-0.434 shape=(1, 9000, 1)
logits [[ 1.3474671 -1.0990099  1.3323528 -3.3156583]]
Iteration 400 of 1000: loss=1.9 " + "l1=0.953" + "l2=0.947 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.965937  -0.7637316  0.9687753 -2.7911844]]
Iteration 500 of 1000: loss=1.71 " + "l1=0.764" + "l2=0.943 f=-0.38 shape=(1, 9000, 1)
logits [[ 0.76079065 -0.6284799   0.7496914  -2.401997  ]]
Iteration 600 of 1000: loss=1.57 " + "l1=0.65" + "l2=0.924 f=-0.355 shape=(1, 9000, 1)
logits [[ 0.6079349 -0.5628246  0.6187303 -2.0852795]]
Iteration 700 of 1000: loss=1.47 " + "l1=0.576" + "l2=0.89 f=-0.336 shape=(1, 9000, 1)
logits [[ 0.5232688  -0.52281034  0.52479696 -1.8684131 ]]
Iteration 800 of 1000: loss=1.39 " + "l1=0.517" + "l2=0.869 f=-0.318 shape=(1, 9000, 1)
logits [[ 0.44840136 -0.4872185   0.45354283 -1.6855007 ]]
Iteration 900 of 1000: loss=1.32 " + "l1=0.463" + "l2=0.853 f=-0.302 shape=(1, 9000, 1)
logits [[ 0.37846208 -0.4567052   0.38535964 -1.5146269 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.84 " + "l1=5.84" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.3293457 -3.201626   2.9551008 -6.7596264]]
Iteration 100 of 1000: loss=3.78 " + "l1=2.54" + "l2=1.24 f=-0.499 shape=(1, 9000, 1)
logits [[ 1.6667955 -1.6093564  1.6634516 -3.7168636]]
Iteration 200 of 1000: loss=3.06 " + "l1=1.82" + "l2=1.24 f=-0.436 shape=(1, 9000, 1)
logits [[ 1.2646458 -1.0788217  1.2667687 -3.1974282]]
Iteration 300 of 1000: loss=2.49 " + "l1=1.08" + "l2=1.41 f=-0.412 shape=(1, 9000, 1)
logits [[ 0.79811656 -0.5981939   0.79593724 -2.6447508 ]]
Iteration 400 of 1000: loss=2.2 " + "l1=0.792" + "l2=1.4 f=-0.408 shape=(1, 9000, 1)
logits [[ 0.5422363  -0.47988054  0.53798753 -2.2315028 ]]
Iteration 500 of 1000: loss=2.01 " + "l1=0.621" + "l2=1.39 f=-0.39 shape=(1, 9000, 1)
logits [[ 0.39938915 -0.4002732   0.400675   -1.9577924 ]]
Iteration 600 of 1000: loss=1.89 " + "l1=0.511" + "l2=1.38 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.30515763 -0.3451695   0.31397864 -1.7353323 ]]
Iteration 700 of 1000: loss=1.78 " + "l1=0.381" + "l2=1.4 f=-0.35 shape=(1, 9000, 1)
logits [[ 0.18986183 -0.27582076  0.21583441 -1.5290253 ]]
Iteration 800 of 1000: loss=1.66 " + "l1=0.289" + "l2=1.37 f=-0.332 shape=(1, 9000, 1)
logits [[ 0.13677795 -0.2329192   0.13959676 -1.371794  ]]
Iteration 900 of 1000: loss=1.53 " + "l1=0.202" + "l2=1.33 f=-0.323 shape=(1, 9000, 1)
logits [[ 0.0634665  -0.19764459  0.06322408 -1.2201878 ]]
--- 286.2568726539612 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0137 " + "l1=0.0137" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.3293457 -3.201626   2.9551008 -6.7596264]]
Iteration 100 of 1000: loss=0.0136 " + "l1=0.0134" + "l2=0.000156 f=-0.671 shape=(1, 9000, 1)
logits [[ 4.304848  -3.2086585  2.9616735 -6.7416177]]
Iteration 200 of 1000: loss=0.0135 " + "l1=0.0134" + "l2=0.000128 f=-0.671 shape=(1, 9000, 1)
logits [[ 4.3041635 -3.2089853  2.9625716 -6.7427387]]
Iteration 300 of 1000: loss=0.0135 " + "l1=0.0134" + "l2=0.000168 f=-0.672 shape=(1, 9000, 1)
logits [[ 4.3011975 -3.2099285  2.9637253 -6.741668 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.137 " + "l1=0.137" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.3293457 -3.201626   2.9551008 -6.7596264]]
Iteration 100 of 1000: loss=0.123 " + "l1=0.114" + "l2=0.00859 f=-0.683 shape=(1, 9000, 1)
logits [[ 4.144028  -3.2476792  2.9998448 -6.62796  ]]
Iteration 200 of 1000: loss=0.117 " + "l1=0.106" + "l2=0.0113 f=-0.689 shape=(1, 9000, 1)
logits [[ 4.078604  -3.265237   3.0182397 -6.586384 ]]
Iteration 300 of 1000: loss=0.112 " + "l1=0.0979" + "l2=0.014 f=-0.694 shape=(1, 9000, 1)
logits [[ 4.0141797 -3.2817757  3.0348353 -6.54331  ]]
Iteration 400 of 1000: loss=0.107 " + "l1=0.0908" + "l2=0.0164 f=-0.7 shape=(1, 9000, 1)
logits [[ 3.9570868 -3.2960005  3.049053  -6.511817 ]]
Iteration 500 of 1000: loss=0.103 " + "l1=0.084" + "l2=0.0188 f=-0.706 shape=(1, 9000, 1)
logits [[ 3.899394  -3.3053765  3.0591223 -6.476877 ]]
Iteration 600 of 1000: loss=0.0989 " + "l1=0.0782" + "l2=0.0206 f=-0.711 shape=(1, 9000, 1)
logits [[ 3.8509157 -3.309319   3.068579  -6.454403 ]]
Iteration 700 of 1000: loss=0.0949 " + "l1=0.0724" + "l2=0.0225 f=-0.716 shape=(1, 9000, 1)
logits [[ 3.79995   -3.311138   3.0756116 -6.427888 ]]
Iteration 800 of 1000: loss=0.0911 " + "l1=0.0677" + "l2=0.0234 f=-0.72 shape=(1, 9000, 1)
logits [[ 3.7586906 -3.3097987  3.0819213 -6.4092164]]
Iteration 900 of 1000: loss=0.0874 " + "l1=0.0623" + "l2=0.0251 f=-0.723 shape=(1, 9000, 1)
logits [[ 3.711314  -3.3089328  3.0880616 -6.383532 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.37 " + "l1=1.37" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.3293457 -3.201626   2.9551008 -6.7596264]]
Iteration 100 of 1000: loss=0.265 " + "l1=0.00132" + "l2=0.264 f=-0.74 shape=(1, 9000, 1)
logits [[ 3.090695  -3.4087908  3.089379  -5.73018  ]]
Iteration 200 of 1000: loss=0.182 " + "l1=0.00146" + "l2=0.18 f=-0.746 shape=(1, 9000, 1)
logits [[ 3.1225812 -3.4366097  3.121124  -5.790177 ]]
Iteration 300 of 1000: loss=0.147 " + "l1=0" + "l2=0.147 f=-0.749 shape=(1, 9000, 1)
logits [[ 3.1407526 -3.4561803  3.1492083 -5.830387 ]]
Iteration 400 of 1000: loss=0.133 " + "l1=0.0082" + "l2=0.125 f=-0.751 shape=(1, 9000, 1)
logits [[ 3.1744149 -3.4637294  3.166212  -5.8821707]]
Iteration 500 of 1000: loss=0.119 " + "l1=0.00465" + "l2=0.114 f=-0.753 shape=(1, 9000, 1)
logits [[ 3.1820645 -3.463887   3.177416  -5.9082766]]
Iteration 600 of 1000: loss=0.111 " + "l1=0.00729" + "l2=0.104 f=-0.753 shape=(1, 9000, 1)
logits [[ 3.1893792 -3.455953   3.1820927 -5.9285345]]
Iteration 700 of 1000: loss=0.0978 " + "l1=0" + "l2=0.0978 f=-0.753 shape=(1, 9000, 1)
logits [[ 3.1811268 -3.4481974  3.186561  -5.931897 ]]
Iteration 800 of 1000: loss=0.091 " + "l1=0" + "l2=0.091 f=-0.753 shape=(1, 9000, 1)
logits [[ 3.177393  -3.4375927  3.1890972 -5.9399753]]
Iteration 900 of 1000: loss=0.0831 " + "l1=0" + "l2=0.0831 f=-0.752 shape=(1, 9000, 1)
logits [[ 3.1813903 -3.4237676  3.1901872 -5.9570513]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.756 " + "l1=0.756" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.3293457 -3.201626   2.9551008 -6.7596264]]
Iteration 100 of 1000: loss=0.283 " + "l1=0.0148" + "l2=0.268 f=-0.744 shape=(1, 9000, 1)
logits [[ 3.1277804 -3.4109867  3.1009448 -5.7920604]]
Iteration 200 of 1000: loss=0.168 " + "l1=0" + "l2=0.168 f=-0.748 shape=(1, 9000, 1)
logits [[ 3.1291327 -3.446782   3.135299  -5.8116345]]
Iteration 300 of 1000: loss=0.134 " + "l1=0" + "l2=0.134 f=-0.751 shape=(1, 9000, 1)
logits [[ 3.1589432 -3.467847   3.1648881 -5.858907 ]]
Iteration 400 of 1000: loss=0.119 " + "l1=0" + "l2=0.119 f=-0.754 shape=(1, 9000, 1)
logits [[ 3.1682105 -3.4739213  3.1799026 -5.8885436]]
Iteration 500 of 1000: loss=0.106 " + "l1=0" + "l2=0.106 f=-0.753 shape=(1, 9000, 1)
logits [[ 3.1793327 -3.4630582  3.1863027 -5.915471 ]]
Iteration 600 of 1000: loss=0.0973 " + "l1=0.00289" + "l2=0.0944 f=-0.751 shape=(1, 9000, 1)
logits [[ 3.1948092 -3.4464855  3.1895597 -5.9425607]]
Iteration 700 of 1000: loss=0.0882 " + "l1=0" + "l2=0.0882 f=-0.751 shape=(1, 9000, 1)
logits [[ 3.183476  -3.4388533  3.1962454 -5.9458485]]
Iteration 800 of 1000: loss=0.0785 " + "l1=0" + "l2=0.0785 f=-0.751 shape=(1, 9000, 1)
logits [[ 3.1917832 -3.4259539  3.1988316 -5.9675913]]
Iteration 900 of 1000: loss=0.0707 " + "l1=0" + "l2=0.0707 f=-0.75 shape=(1, 9000, 1)
logits [[ 3.1879718 -3.4096797  3.1961093 -5.9754395]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.447 " + "l1=0.447" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.3293457 -3.201626   2.9551008 -6.7596264]]
Iteration 100 of 1000: loss=0.288 " + "l1=0.197" + "l2=0.0904 f=-0.716 shape=(1, 9000, 1)
logits [[ 3.6732042 -3.3319583  3.0663407 -6.2714868]]
Iteration 200 of 1000: loss=0.21 " + "l1=0.0756" + "l2=0.134 f=-0.742 shape=(1, 9000, 1)
logits [[ 3.3569164 -3.4125526  3.1243706 -6.036806 ]]
Iteration 300 of 1000: loss=0.14 " + "l1=0.00806" + "l2=0.132 f=-0.756 shape=(1, 9000, 1)
logits [[ 3.2119353 -3.4802802  3.1871295 -5.9415836]]
Iteration 400 of 1000: loss=0.114 " + "l1=0" + "l2=0.114 f=-0.758 shape=(1, 9000, 1)
logits [[ 3.20874   -3.4862761  3.2117763 -5.966397 ]]
Iteration 500 of 1000: loss=0.099 " + "l1=0.000998" + "l2=0.098 f=-0.755 shape=(1, 9000, 1)
logits [[ 3.223306  -3.4683514  3.220234  -5.995997 ]]
Iteration 600 of 1000: loss=0.0872 " + "l1=0" + "l2=0.0872 f=-0.752 shape=(1, 9000, 1)
logits [[ 3.2138824 -3.448242   3.2180812 -5.9930215]]
Iteration 700 of 1000: loss=0.078 " + "l1=0.00133" + "l2=0.0767 f=-0.751 shape=(1, 9000, 1)
logits [[ 3.2155817 -3.4309702  3.2114952 -6.0005107]]
Iteration 800 of 1000: loss=0.0706 " + "l1=0" + "l2=0.0706 f=-0.75 shape=(1, 9000, 1)
logits [[ 3.2005603 -3.4159276  3.207861  -5.9938006]]
Iteration 900 of 1000: loss=0.0624 " + "l1=0" + "l2=0.0624 f=-0.749 shape=(1, 9000, 1)
logits [[ 3.1992068 -3.3970287  3.200235  -6.000356 ]]
--- 270.6035008430481 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.111 " + "l1=0.111" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.3293457 -3.201626   2.9551008 -6.7596264]]
Iteration 100 of 1000: loss=0.11 " + "l1=0.11" + "l2=0.000522 f=-0.667 shape=(1, 9000, 1)
logits [[ 4.2788715 -3.1946542  2.938751  -6.6921654]]
Iteration 200 of 1000: loss=0.11 " + "l1=0.11" + "l2=0.000529 f=-0.667 shape=(1, 9000, 1)
logits [[ 4.2720838 -3.1938262  2.9367113 -6.6836333]]
Iteration 300 of 1000: loss=0.11 " + "l1=0.109" + "l2=0.000593 f=-0.667 shape=(1, 9000, 1)
logits [[ 4.263535  -3.1934054  2.9343164 -6.67258  ]]
Iteration 400 of 1000: loss=0.11 " + "l1=0.109" + "l2=0.000692 f=-0.667 shape=(1, 9000, 1)
logits [[ 4.254978  -3.1929924  2.9318035 -6.661489 ]]
Iteration 500 of 1000: loss=0.11 " + "l1=0.109" + "l2=0.000775 f=-0.667 shape=(1, 9000, 1)
logits [[ 4.2464294 -3.1926243  2.9292207 -6.6505   ]]
Iteration 600 of 1000: loss=0.11 " + "l1=0.109" + "l2=0.00092 f=-0.667 shape=(1, 9000, 1)
logits [[ 4.2380605 -3.1921659  2.9266129 -6.639699 ]]
Iteration 700 of 1000: loss=0.11 " + "l1=0.109" + "l2=0.00102 f=-0.667 shape=(1, 9000, 1)
logits [[ 4.2294893 -3.1917574  2.9239886 -6.6287026]]
Iteration 800 of 1000: loss=0.11 " + "l1=0.108" + "l2=0.00116 f=-0.667 shape=(1, 9000, 1)
logits [[ 4.221192  -3.1913712  2.92151   -6.6180725]]
Iteration 900 of 1000: loss=0.109 " + "l1=0.108" + "l2=0.00117 f=-0.667 shape=(1, 9000, 1)
logits [[ 4.212998  -3.1908863  2.9190955 -6.6074605]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.11 " + "l1=1.11" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.3293457 -3.201626   2.9551008 -6.7596264]]
Iteration 100 of 1000: loss=1.04 " + "l1=0.986" + "l2=0.0514 f=-0.648 shape=(1, 9000, 1)
logits [[ 3.7974055 -3.1086464  2.7802696 -6.062941 ]]
Iteration 200 of 1000: loss=1.01 " + "l1=0.937" + "l2=0.0708 f=-0.643 shape=(1, 9000, 1)
logits [[ 3.584876  -3.0854502  2.7090814 -5.781691 ]]
Iteration 300 of 1000: loss=0.977 " + "l1=0.889" + "l2=0.0877 f=-0.638 shape=(1, 9000, 1)
logits [[ 3.384174  -3.0783267  2.6458094 -5.5056205]]
Iteration 400 of 1000: loss=0.949 " + "l1=0.849" + "l2=0.1 f=-0.631 shape=(1, 9000, 1)
logits [[ 3.223208  -3.0726874  2.5951512 -5.268064 ]]
Iteration 500 of 1000: loss=0.919 " + "l1=0.806" + "l2=0.113 f=-0.62 shape=(1, 9000, 1)
logits [[ 3.0471323 -3.0512955  2.538526  -5.013225 ]]
Iteration 600 of 1000: loss=0.885 " + "l1=0.759" + "l2=0.127 f=-0.606 shape=(1, 9000, 1)
logits [[ 2.8571754 -3.0220618  2.468668  -4.7288423]]
Iteration 700 of 1000: loss=0.854 " + "l1=0.718" + "l2=0.137 f=-0.594 shape=(1, 9000, 1)
logits [[ 2.6967182 -3.0004163  2.4088163 -4.482295 ]]
Iteration 800 of 1000: loss=0.831 " + "l1=0.69" + "l2=0.141 f=-0.588 shape=(1, 9000, 1)
logits [[ 2.5859807 -2.9884455  2.3605134 -4.3113213]]
Iteration 900 of 1000: loss=0.809 " + "l1=0.66" + "l2=0.149 f=-0.584 shape=(1, 9000, 1)
logits [[ 2.4667923 -2.986039   2.3172505 -4.1321955]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.1 " + "l1=11.1" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.3293457 -3.201626   2.9551008 -6.7596264]]
Iteration 100 of 1000: loss=4.96 " + "l1=2.17" + "l2=2.79 f=-0.383 shape=(1, 9000, 1)
logits [[ 0.6959753 -2.0881114  1.0125219 -1.153779 ]]
Iteration 200 of 1000: loss=2.95 " + "l1=0.0532" + "l2=2.9 f=-0.333 shape=(1, 9000, 1)
logits [[-0.19663186 -1.6612701   0.288701    0.23554066]]
Iteration 300 of 1000: loss=2.34 " + "l1=0" + "l2=2.34 f=-0.33 shape=(1, 9000, 1)
logits [[-0.16341272 -1.6731663   0.25267953  0.2652721 ]]
Iteration 400 of 1000: loss=2.03 " + "l1=0.0411" + "l2=1.99 f=-0.319 shape=(1, 9000, 1)
logits [[-0.08673346 -1.6498631   0.24993743  0.20885953]]
Iteration 500 of 1000: loss=1.81 " + "l1=0" + "l2=1.81 f=-0.296 shape=(1, 9000, 1)
logits [[-0.07208415 -1.5379584   0.20958745  0.21595332]]
Iteration 600 of 1000: loss=1.67 " + "l1=0.00304" + "l2=1.67 f=-0.285 shape=(1, 9000, 1)
logits [[-0.04488242 -1.5139781   0.21105394  0.20801345]]
Iteration 700 of 1000: loss=1.59 " + "l1=0.0537" + "l2=1.54 f=-0.275 shape=(1, 9000, 1)
logits [[ 0.01589444 -1.5098639   0.223378    0.16966948]]
Iteration 800 of 1000: loss=1.47 " + "l1=0" + "l2=1.47 f=-0.261 shape=(1, 9000, 1)
logits [[ 0.01434583 -1.4902487   0.19798335  0.2341452 ]]
Iteration 900 of 1000: loss=1.36 " + "l1=0" + "l2=1.36 f=-0.251 shape=(1, 9000, 1)
logits [[ 0.06562348 -1.4927379   0.20887147  0.2127141 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.1 " + "l1=6.1" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.3293457 -3.201626   2.9551008 -6.7596264]]
Iteration 100 of 1000: loss=3.77 " + "l1=2.71" + "l2=1.06 f=-0.485 shape=(1, 9000, 1)
logits [[ 1.8419105 -2.572552   1.8580674 -3.068307 ]]
Iteration 200 of 1000: loss=3.02 " + "l1=1.74" + "l2=1.29 f=-0.411 shape=(1, 9000, 1)
logits [[ 1.2092896 -2.142188   1.2217509 -1.933378 ]]
Iteration 300 of 1000: loss=2.42 " + "l1=0.847" + "l2=1.58 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.658468  -1.8255353  0.7015449 -0.8388691]]
Iteration 400 of 1000: loss=1.87 " + "l1=0.222" + "l2=1.65 f=-0.314 shape=(1, 9000, 1)
logits [[ 0.1743581  -1.647842    0.31047145 -0.09230478]]
Iteration 500 of 1000: loss=1.51 " + "l1=0.0107" + "l2=1.5 f=-0.278 shape=(1, 9000, 1)
logits [[ 0.04707966 -1.4684421   0.16392286  0.14444637]]
Iteration 600 of 1000: loss=1.34 " + "l1=0" + "l2=1.34 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.06755503 -1.4391396   0.15023686  0.15895244]]
Iteration 700 of 1000: loss=1.21 " + "l1=0.00118" + "l2=1.21 f=-0.253 shape=(1, 9000, 1)
logits [[ 0.10536467 -1.4393563   0.16107197  0.15893531]]
Iteration 800 of 1000: loss=1.08 " + "l1=0" + "l2=1.08 f=-0.24 shape=(1, 9000, 1)
logits [[ 0.10385232 -1.425204    0.17571737  0.18557021]]
Iteration 900 of 1000: loss=0.98 " + "l1=0" + "l2=0.98 f=-0.234 shape=(1, 9000, 1)
logits [[ 0.08138704 -1.4240096   0.1965117   0.21129012]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.6 " + "l1=3.6" + "l2=0 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.3293457 -3.201626   2.9551008 -6.7596264]]
Iteration 100 of 1000: loss=2.63 " + "l1=2.02" + "l2=0.618 f=-0.567 shape=(1, 9000, 1)
logits [[ 2.2586188 -2.8422844  2.2581291 -3.9420457]]
Iteration 200 of 1000: loss=2.34 " + "l1=1.72" + "l2=0.619 f=-0.514 shape=(1, 9000, 1)
logits [[ 1.963042  -2.6516192  1.9637245 -3.3316293]]
Iteration 300 of 1000: loss=2.1 " + "l1=1.38" + "l2=0.717 f=-0.469 shape=(1, 9000, 1)
logits [[ 1.5936556 -2.3929675  1.5925081 -2.6675348]]
Iteration 400 of 1000: loss=1.91 " + "l1=1.13" + "l2=0.782 f=-0.441 shape=(1, 9000, 1)
logits [[ 1.3015294 -2.2144997  1.3137312 -2.1659162]]
Iteration 500 of 1000: loss=1.71 " + "l1=0.87" + "l2=0.839 f=-0.401 shape=(1, 9000, 1)
logits [[ 1.0425382 -2.0660408  1.0496081 -1.6283963]]
Iteration 600 of 1000: loss=1.51 " + "l1=0.674" + "l2=0.837 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.8493566  -1.9387504   0.85191953 -1.2209636 ]]
Iteration 700 of 1000: loss=1.32 " + "l1=0.447" + "l2=0.869 f=-0.325 shape=(1, 9000, 1)
logits [[ 0.60866165 -1.7807738   0.62304276 -0.7517994 ]]
Iteration 800 of 1000: loss=1.13 " + "l1=0.275" + "l2=0.853 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.42734042 -1.6428844   0.45426068 -0.39159855]]
Iteration 900 of 1000: loss=0.962 " + "l1=0.104" + "l2=0.858 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.19747937 -1.4577558   0.29354826 -0.02707646]]
--- 310.4233467578888 seconds ---
Adv result:3
Loading record A01662
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.047 " + "l1=0.047" + "l2=0 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.804254  -1.8993002  2.0400043 -4.4949503]]
Iteration 100 of 1000: loss=0.0466 " + "l1=0.0463" + "l2=0.000296 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.755903  -1.8707758  2.0145671 -4.448386 ]]
Iteration 200 of 1000: loss=0.0464 " + "l1=0.0461" + "l2=0.000325 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.7457347 -1.8646306  2.008188  -4.4382772]]
Iteration 300 of 1000: loss=0.0463 " + "l1=0.0459" + "l2=0.000408 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.7342165 -1.8574061  2.001388  -4.426851 ]]
Iteration 400 of 1000: loss=0.0463 " + "l1=0.0457" + "l2=0.000506 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.724143  -1.8504494  1.9952165 -4.416314 ]]
Iteration 500 of 1000: loss=0.0462 " + "l1=0.0456" + "l2=0.000634 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.7147882 -1.8438275  1.9895469 -4.406563 ]]
Iteration 600 of 1000: loss=0.0462 " + "l1=0.0455" + "l2=0.000727 f=-0.386 shape=(1, 9000, 1)
logits [[ 2.7070324 -1.8380295  1.9846338 -4.3982353]]
Iteration 700 of 1000: loss=0.0461 " + "l1=0.0453" + "l2=0.000797 f=-0.386 shape=(1, 9000, 1)
logits [[ 2.7001727 -1.8324032  1.9799185 -4.3905177]]
Iteration 800 of 1000: loss=0.0461 " + "l1=0.0452" + "l2=0.000892 f=-0.385 shape=(1, 9000, 1)
logits [[ 2.6940746 -1.8270005  1.9754183 -4.3835454]]
Iteration 900 of 1000: loss=0.0461 " + "l1=0.0451" + "l2=0.00102 f=-0.385 shape=(1, 9000, 1)
logits [[ 2.6884437 -1.8219005  1.9711461 -4.3769717]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.47 " + "l1=0.47" + "l2=0 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.804254  -1.8993002  2.0400043 -4.4949503]]
Iteration 100 of 1000: loss=0.43 " + "l1=0.413" + "l2=0.0177 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.4460614 -1.6815445  1.8534528 -4.168098 ]]
Iteration 200 of 1000: loss=0.407 " + "l1=0.376" + "l2=0.031 f=-0.391 shape=(1, 9000, 1)
logits [[ 2.208225  -1.5469184  1.7511913 -3.977974 ]]
Iteration 300 of 1000: loss=0.388 " + "l1=0.345" + "l2=0.0431 f=-0.393 shape=(1, 9000, 1)
logits [[ 2.009231  -1.4393848  1.6741779 -3.8176126]]
Iteration 400 of 1000: loss=0.373 " + "l1=0.318" + "l2=0.0542 f=-0.394 shape=(1, 9000, 1)
logits [[ 1.8368565 -1.3462775  1.6057212 -3.6725597]]
Iteration 500 of 1000: loss=0.359 " + "l1=0.293" + "l2=0.0665 f=-0.391 shape=(1, 9000, 1)
logits [[ 1.6773504 -1.2504948  1.5412663 -3.532621 ]]
Iteration 600 of 1000: loss=0.346 " + "l1=0.27" + "l2=0.0756 f=-0.387 shape=(1, 9000, 1)
logits [[ 1.5546502 -1.1459981  1.4630431 -3.4192488]]
Iteration 700 of 1000: loss=0.331 " + "l1=0.246" + "l2=0.0852 f=-0.38 shape=(1, 9000, 1)
logits [[ 1.4278594 -1.0282393  1.3782874 -3.2985847]]
Iteration 800 of 1000: loss=0.317 " + "l1=0.227" + "l2=0.0895 f=-0.376 shape=(1, 9000, 1)
logits [[ 1.3290915  -0.94402355  1.3253686  -3.212984  ]]
Iteration 900 of 1000: loss=0.306 " + "l1=0.217" + "l2=0.0889 f=-0.372 shape=(1, 9000, 1)
logits [[ 1.2835088 -0.8908246  1.2821037 -3.164643 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.7 " + "l1=4.7" + "l2=0 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.804254  -1.8993002  2.0400043 -4.4949503]]
Iteration 100 of 1000: loss=2.02 " + "l1=1.35" + "l2=0.667 f=-0.369 shape=(1, 9000, 1)
logits [[ 0.9011888  -0.44283208  0.9089617  -2.8419168 ]]
Iteration 200 of 1000: loss=1.33 " + "l1=0.633" + "l2=0.693 f=-0.392 shape=(1, 9000, 1)
logits [[ 0.45040867 -0.07731636  0.5558359  -2.4982107 ]]
Iteration 300 of 1000: loss=0.813 " + "l1=0.00529" + "l2=0.808 f=-0.403 shape=(1, 9000, 1)
logits [[-0.27228144  0.27628902  0.28158063 -1.8956116 ]]
Iteration 400 of 1000: loss=0.599 " + "l1=0.00425" + "l2=0.595 f=-0.381 shape=(1, 9000, 1)
logits [[-0.2953914   0.258315    0.26256555 -1.7483412 ]]
Iteration 500 of 1000: loss=0.505 " + "l1=0" + "l2=0.505 f=-0.376 shape=(1, 9000, 1)
logits [[-0.27146313  0.2468489   0.24423139 -1.7253228 ]]
Iteration 600 of 1000: loss=0.451 " + "l1=0" + "l2=0.451 f=-0.368 shape=(1, 9000, 1)
logits [[-0.23705313  0.23620689  0.22809488 -1.7010609 ]]
Iteration 700 of 1000: loss=0.407 " + "l1=0" + "l2=0.407 f=-0.362 shape=(1, 9000, 1)
logits [[-0.185055    0.21638884  0.21554367 -1.6951689 ]]
Iteration 800 of 1000: loss=0.381 " + "l1=0.00663" + "l2=0.375 f=-0.357 shape=(1, 9000, 1)
logits [[-0.16319825  0.20522298  0.21185449 -1.6831458 ]]
Iteration 900 of 1000: loss=0.356 " + "l1=0" + "l2=0.356 f=-0.354 shape=(1, 9000, 1)
logits [[-0.16845143  0.21086363  0.20194715 -1.6584501 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.59 " + "l1=2.59" + "l2=0 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.804254  -1.8993002  2.0400043 -4.4949503]]
Iteration 100 of 1000: loss=1.46 " + "l1=1.1" + "l2=0.359 f=-0.369 shape=(1, 9000, 1)
logits [[ 1.2166265  -0.78798705  1.2108045  -3.1149676 ]]
Iteration 200 of 1000: loss=1.12 " + "l1=0.753" + "l2=0.367 f=-0.375 shape=(1, 9000, 1)
logits [[ 0.90087354 -0.45738626  0.9109179  -2.854329  ]]
Iteration 300 of 1000: loss=0.902 " + "l1=0.495" + "l2=0.407 f=-0.384 shape=(1, 9000, 1)
logits [[ 0.64638513 -0.22664092  0.67370653 -2.6295285 ]]
Iteration 400 of 1000: loss=0.737 " + "l1=0.326" + "l2=0.411 f=-0.38 shape=(1, 9000, 1)
logits [[ 0.41535556 -0.07537518  0.51734215 -2.3785775 ]]
Iteration 500 of 1000: loss=0.603 " + "l1=0.153" + "l2=0.45 f=-0.373 shape=(1, 9000, 1)
logits [[ 0.13150439  0.09015588  0.36874136 -2.081469  ]]
Iteration 600 of 1000: loss=0.484 " + "l1=0.007" + "l2=0.477 f=-0.372 shape=(1, 9000, 1)
logits [[-0.1510657   0.22498363  0.23771764 -1.8010423 ]]
Iteration 700 of 1000: loss=0.415 " + "l1=0.00315" + "l2=0.412 f=-0.356 shape=(1, 9000, 1)
logits [[-0.10855412  0.20704591  0.21277718 -1.7350557 ]]
Iteration 800 of 1000: loss=0.375 " + "l1=0.00167" + "l2=0.373 f=-0.348 shape=(1, 9000, 1)
logits [[-0.09453237  0.19645108  0.19948122 -1.6915317 ]]
Iteration 900 of 1000: loss=0.348 " + "l1=0" + "l2=0.348 f=-0.34 shape=(1, 9000, 1)
logits [[-0.09137312  0.1956919   0.19228992 -1.6565773 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.53 " + "l1=1.53" + "l2=0 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.804254  -1.8993002  2.0400043 -4.4949503]]
Iteration 100 of 1000: loss=1.08 " + "l1=0.891" + "l2=0.189 f=-0.387 shape=(1, 9000, 1)
logits [[ 1.5406771 -1.200951   1.541136  -3.4308488]]
Iteration 200 of 1000: loss=0.848 " + "l1=0.626" + "l2=0.222 f=-0.38 shape=(1, 9000, 1)
logits [[ 1.1655451  -0.76110095  1.1578422  -3.0806491 ]]
Iteration 300 of 1000: loss=0.748 " + "l1=0.515" + "l2=0.233 f=-0.368 shape=(1, 9000, 1)
logits [[ 0.9979559 -0.5824746  1.0031931 -2.8900864]]
Iteration 400 of 1000: loss=0.68 " + "l1=0.44" + "l2=0.24 f=-0.357 shape=(1, 9000, 1)
logits [[ 0.88301617 -0.468933    0.8838348  -2.7252176 ]]
Iteration 500 of 1000: loss=0.61 " + "l1=0.358" + "l2=0.251 f=-0.36 shape=(1, 9000, 1)
logits [[ 0.7624366  -0.3402177   0.76059145 -2.623703  ]]
Iteration 600 of 1000: loss=0.552 " + "l1=0.29" + "l2=0.262 f=-0.36 shape=(1, 9000, 1)
logits [[ 0.6177571  -0.2386431   0.65485567 -2.4752247 ]]
Iteration 700 of 1000: loss=0.501 " + "l1=0.232" + "l2=0.269 f=-0.356 shape=(1, 9000, 1)
logits [[ 0.52971643 -0.15650497  0.5586415  -2.35584   ]]
Iteration 800 of 1000: loss=0.46 " + "l1=0.195" + "l2=0.266 f=-0.352 shape=(1, 9000, 1)
logits [[ 0.45526    -0.09900774  0.49976644 -2.2644439 ]]
Iteration 900 of 1000: loss=0.421 " + "l1=0.146" + "l2=0.275 f=-0.345 shape=(1, 9000, 1)
logits [[ 0.31671575 -0.02382012  0.4263283  -2.097797  ]]
--- 302.51007413864136 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00764 " + "l1=0.00764" + "l2=0 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.804254  -1.8993002  2.0400043 -4.4949503]]
Iteration 100 of 1000: loss=0.00742 " + "l1=0.00722" + "l2=0.0002 f=-0.391 shape=(1, 9000, 1)
logits [[ 2.771351  -1.9075989  2.0494852 -4.4772453]]
Iteration 200 of 1000: loss=0.00736 " + "l1=0.00718" + "l2=0.000173 f=-0.391 shape=(1, 9000, 1)
logits [[ 2.768315  -1.908597   2.0500474 -4.475045 ]]
Iteration 300 of 1000: loss=0.00732 " + "l1=0.00712" + "l2=0.000204 f=-0.392 shape=(1, 9000, 1)
logits [[ 2.7628818 -1.9099002  2.0512493 -4.4717717]]
Iteration 400 of 1000: loss=0.00729 " + "l1=0.00705" + "l2=0.000243 f=-0.392 shape=(1, 9000, 1)
logits [[ 2.757413  -1.9112617  2.0525098 -4.4685817]]
Iteration 500 of 1000: loss=0.0073 " + "l1=0.00699" + "l2=0.000309 f=-0.393 shape=(1, 9000, 1)
logits [[ 2.7525315 -1.9126333  2.0537195 -4.465784 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0764 " + "l1=0.0764" + "l2=0 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.804254  -1.8993002  2.0400043 -4.4949503]]
Iteration 100 of 1000: loss=0.0585 " + "l1=0.0498" + "l2=0.00871 f=-0.41 shape=(1, 9000, 1)
logits [[ 2.5922828 -1.9473826  2.0943065 -4.3783092]]
Iteration 200 of 1000: loss=0.0527 " + "l1=0.0402" + "l2=0.0125 f=-0.418 shape=(1, 9000, 1)
logits [[ 2.506332  -1.9602802  2.1044326 -4.323931 ]]
Iteration 300 of 1000: loss=0.0479 " + "l1=0.0323" + "l2=0.0155 f=-0.425 shape=(1, 9000, 1)
logits [[ 2.4408221 -1.9724144  2.1174178 -4.283984 ]]
Iteration 400 of 1000: loss=0.0436 " + "l1=0.0251" + "l2=0.0185 f=-0.429 shape=(1, 9000, 1)
logits [[ 2.385463  -1.986048   2.1340036 -4.249059 ]]
Iteration 500 of 1000: loss=0.0395 " + "l1=0.0184" + "l2=0.0211 f=-0.432 shape=(1, 9000, 1)
logits [[ 2.3345146 -1.9958178  2.1503692 -4.218424 ]]
Iteration 600 of 1000: loss=0.0355 " + "l1=0.0117" + "l2=0.0239 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.2989564 -2.0157037  2.1822329 -4.20392  ]]
Iteration 700 of 1000: loss=0.0315 " + "l1=0.00518" + "l2=0.0263 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.2585335 -2.0267124  2.2067788 -4.1794596]]
Iteration 800 of 1000: loss=0.0279 " + "l1=0.000448" + "l2=0.0274 f=-0.434 shape=(1, 9000, 1)
logits [[ 2.2260337 -2.0301878  2.2215493 -4.1547112]]
Iteration 900 of 1000: loss=0.0248 " + "l1=0.00022" + "l2=0.0246 f=-0.431 shape=(1, 9000, 1)
logits [[ 2.2238953 -2.0234168  2.2216997 -4.1459723]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.042 " + "l1=0.042" + "l2=0 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.804254  -1.8993002  2.0400043 -4.4949503]]
Iteration 100 of 1000: loss=0.0362 " + "l1=0.0334" + "l2=0.00282 f=-0.401 shape=(1, 9000, 1)
logits [[ 2.6809006 -1.9302635  2.0737739 -4.426694 ]]
Iteration 200 of 1000: loss=0.0344 " + "l1=0.0307" + "l2=0.00376 f=-0.405 shape=(1, 9000, 1)
logits [[ 2.6358984 -1.9353814  2.0781481 -4.396709 ]]
Iteration 300 of 1000: loss=0.0331 " + "l1=0.0285" + "l2=0.00464 f=-0.408 shape=(1, 9000, 1)
logits [[ 2.600764  -1.9404271  2.0828962 -4.3736477]]
Iteration 400 of 1000: loss=0.032 " + "l1=0.0266" + "l2=0.0054 f=-0.41 shape=(1, 9000, 1)
logits [[ 2.571418  -1.9453629  2.0874302 -4.355284 ]]
Iteration 500 of 1000: loss=0.031 " + "l1=0.0249" + "l2=0.0061 f=-0.413 shape=(1, 9000, 1)
logits [[ 2.5458527 -1.950743   2.0929937 -4.341058 ]]
Iteration 600 of 1000: loss=0.0301 " + "l1=0.0233" + "l2=0.0068 f=-0.416 shape=(1, 9000, 1)
logits [[ 2.5243444 -1.9571149  2.100048  -4.3299417]]
Iteration 700 of 1000: loss=0.0293 " + "l1=0.0219" + "l2=0.00741 f=-0.417 shape=(1, 9000, 1)
logits [[ 2.5064313 -1.9628581  2.1079495 -4.3214693]]
Iteration 800 of 1000: loss=0.0285 " + "l1=0.0206" + "l2=0.00783 f=-0.419 shape=(1, 9000, 1)
logits [[ 2.4918275 -1.9694937  2.1164973 -4.3149776]]
Iteration 900 of 1000: loss=0.0277 " + "l1=0.0192" + "l2=0.00849 f=-0.421 shape=(1, 9000, 1)
logits [[ 2.4773414 -1.9779638  2.128115  -4.309713 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0592 " + "l1=0.0592" + "l2=0 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.804254  -1.8993002  2.0400043 -4.4949503]]
Iteration 100 of 1000: loss=0.0481 " + "l1=0.0427" + "l2=0.0054 f=-0.405 shape=(1, 9000, 1)
logits [[ 2.6355116 -1.9386666  2.0840864 -4.4018173]]
Iteration 200 of 1000: loss=0.0447 " + "l1=0.0374" + "l2=0.00734 f=-0.411 shape=(1, 9000, 1)
logits [[ 2.5741339 -1.9474733  2.0916605 -4.3616643]]
Iteration 300 of 1000: loss=0.042 " + "l1=0.0327" + "l2=0.00923 f=-0.416 shape=(1, 9000, 1)
logits [[ 2.5207653 -1.9548854  2.0982175 -4.3286448]]
Iteration 400 of 1000: loss=0.0397 " + "l1=0.0289" + "l2=0.0108 f=-0.42 shape=(1, 9000, 1)
logits [[ 2.480003  -1.9633484  2.1076176 -4.304856 ]]
Iteration 500 of 1000: loss=0.0375 " + "l1=0.0252" + "l2=0.0123 f=-0.424 shape=(1, 9000, 1)
logits [[ 2.4460127 -1.9752914  2.1211662 -4.287212 ]]
Iteration 600 of 1000: loss=0.0354 " + "l1=0.0216" + "l2=0.0138 f=-0.426 shape=(1, 9000, 1)
logits [[ 2.4137785 -1.9838603  2.1344392 -4.2689276]]
Iteration 700 of 1000: loss=0.0335 " + "l1=0.0184" + "l2=0.0151 f=-0.429 shape=(1, 9000, 1)
logits [[ 2.3871782 -1.9953126  2.1502783 -4.2566185]]
Iteration 800 of 1000: loss=0.0313 " + "l1=0.0146" + "l2=0.0166 f=-0.43 shape=(1, 9000, 1)
logits [[ 2.3641276 -2.0106437  2.1751127 -4.2492166]]
Iteration 900 of 1000: loss=0.0293 " + "l1=0.0115" + "l2=0.0178 f=-0.43 shape=(1, 9000, 1)
logits [[ 2.3413222 -2.0201304  2.193464  -4.2355394]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0678 " + "l1=0.0678" + "l2=0 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.804254  -1.8993002  2.0400043 -4.4949503]]
Iteration 100 of 1000: loss=0.0535 " + "l1=0.0466" + "l2=0.00692 f=-0.407 shape=(1, 9000, 1)
logits [[ 2.614538  -1.9430075  2.0894816 -4.3905654]]
Iteration 200 of 1000: loss=0.049 " + "l1=0.0392" + "l2=0.00978 f=-0.414 shape=(1, 9000, 1)
logits [[ 2.5411742 -1.9542054  2.099408  -4.3432264]]
Iteration 300 of 1000: loss=0.0453 " + "l1=0.0331" + "l2=0.0122 f=-0.42 shape=(1, 9000, 1)
logits [[ 2.4803953 -1.963213   2.1077871 -4.305131 ]]
Iteration 400 of 1000: loss=0.0421 " + "l1=0.0277" + "l2=0.0144 f=-0.425 shape=(1, 9000, 1)
logits [[ 2.4337354 -1.9750028  2.1212347 -4.2785573]]
Iteration 500 of 1000: loss=0.0391 " + "l1=0.0225" + "l2=0.0166 f=-0.428 shape=(1, 9000, 1)
logits [[ 2.3902109 -1.9869691  2.1369822 -4.253363 ]]
Iteration 600 of 1000: loss=0.0362 " + "l1=0.0176" + "l2=0.0186 f=-0.431 shape=(1, 9000, 1)
logits [[ 2.3514512 -1.9960817  2.1530004 -4.2319713]]
Iteration 700 of 1000: loss=0.0332 " + "l1=0.0127" + "l2=0.0205 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.3251247 -2.014629   2.1818569 -4.2230515]]
Iteration 800 of 1000: loss=0.0304 " + "l1=0.00811" + "l2=0.0223 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.2926824 -2.0228598  2.2012463 -4.202617 ]]
Iteration 900 of 1000: loss=0.0272 " + "l1=0.00337" + "l2=0.0239 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.2551644 -2.0273008  2.2171516 -4.176129 ]]
--- 280.8439562320709 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.073 " + "l1=0.073" + "l2=0 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.804254  -1.8993002  2.0400043 -4.4949503]]
Iteration 100 of 1000: loss=0.072 " + "l1=0.0715" + "l2=0.000468 f=-0.386 shape=(1, 9000, 1)
logits [[ 2.7379735 -1.8818983  2.014124  -4.41563  ]]
Iteration 200 of 1000: loss=0.0717 " + "l1=0.0711" + "l2=0.000579 f=-0.386 shape=(1, 9000, 1)
logits [[ 2.7193823 -1.8763912  2.005911  -4.394247 ]]
Iteration 300 of 1000: loss=0.0715 " + "l1=0.0707" + "l2=0.000775 f=-0.386 shape=(1, 9000, 1)
logits [[ 2.7001104 -1.8704859  1.9976453 -4.371783 ]]
Iteration 400 of 1000: loss=0.0713 " + "l1=0.0703" + "l2=0.000981 f=-0.386 shape=(1, 9000, 1)
logits [[ 2.6829257 -1.8650501  1.990229  -4.3513656]]
Iteration 500 of 1000: loss=0.0712 " + "l1=0.07" + "l2=0.00116 f=-0.385 shape=(1, 9000, 1)
logits [[ 2.6691468 -1.8603636  1.9838209 -4.3341494]]
Iteration 600 of 1000: loss=0.0711 " + "l1=0.0698" + "l2=0.00136 f=-0.385 shape=(1, 9000, 1)
logits [[ 2.6574714 -1.856061   1.9780902 -4.319152 ]]
Iteration 700 of 1000: loss=0.071 " + "l1=0.0695" + "l2=0.00146 f=-0.384 shape=(1, 9000, 1)
logits [[ 2.6469674 -1.8517578  1.9726071 -4.30523  ]]
Iteration 800 of 1000: loss=0.0709 " + "l1=0.0693" + "l2=0.00162 f=-0.384 shape=(1, 9000, 1)
logits [[ 2.6370695 -1.8480794  1.9677467 -4.292266 ]]
Iteration 900 of 1000: loss=0.0709 " + "l1=0.0691" + "l2=0.00181 f=-0.383 shape=(1, 9000, 1)
logits [[ 2.6274648 -1.8444611  1.9630823 -4.2799964]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.73 " + "l1=0.73" + "l2=0 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.804254  -1.8993002  2.0400043 -4.4949503]]
Iteration 100 of 1000: loss=0.649 " + "l1=0.615" + "l2=0.0342 f=-0.378 shape=(1, 9000, 1)
logits [[ 2.2740917 -1.7591105  1.8485811 -3.874225 ]]
Iteration 200 of 1000: loss=0.601 " + "l1=0.538" + "l2=0.0623 f=-0.371 shape=(1, 9000, 1)
logits [[ 1.9143828 -1.6590137  1.7295713 -3.4680748]]
Iteration 300 of 1000: loss=0.563 " + "l1=0.475" + "l2=0.0881 f=-0.364 shape=(1, 9000, 1)
logits [[ 1.615279  -1.5551889  1.6149263 -3.13043  ]]
Iteration 400 of 1000: loss=0.543 " + "l1=0.451" + "l2=0.0925 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.5321615 -1.4932058  1.5335413 -2.9733682]]
Iteration 500 of 1000: loss=0.528 " + "l1=0.432" + "l2=0.0959 f=-0.341 shape=(1, 9000, 1)
logits [[ 1.4642239 -1.4377055  1.4652696 -2.8565273]]
Iteration 600 of 1000: loss=0.514 " + "l1=0.415" + "l2=0.0987 f=-0.336 shape=(1, 9000, 1)
logits [[ 1.3980296 -1.3826433  1.3959515 -2.7534287]]
Iteration 700 of 1000: loss=0.499 " + "l1=0.398" + "l2=0.101 f=-0.33 shape=(1, 9000, 1)
logits [[ 1.3290316 -1.33045    1.3322077 -2.651545 ]]
Iteration 800 of 1000: loss=0.484 " + "l1=0.382" + "l2=0.101 f=-0.322 shape=(1, 9000, 1)
logits [[ 1.2689693 -1.2759762  1.2701392 -2.5509286]]
Iteration 900 of 1000: loss=0.468 " + "l1=0.364" + "l2=0.103 f=-0.316 shape=(1, 9000, 1)
logits [[ 1.1965092 -1.216808   1.1982565 -2.4423938]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.3 " + "l1=7.3" + "l2=0 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.804254  -1.8993002  2.0400043 -4.4949503]]
Iteration 100 of 1000: loss=3.07 " + "l1=1.83" + "l2=1.25 f=-0.256 shape=(1, 9000, 1)
logits [[ 0.39915442 -0.9461369   0.676706   -1.1518377 ]]
Iteration 200 of 1000: loss=1.58 " + "l1=0.0475" + "l2=1.53 f=-0.219 shape=(1, 9000, 1)
logits [[-0.3741835  -0.638266    0.09277842  0.04526168]]
Iteration 300 of 1000: loss=1.03 " + "l1=0" + "l2=1.03 f=-0.223 shape=(1, 9000, 1)
logits [[-0.40093568 -0.57860357  0.04161689  0.04753429]]
Iteration 400 of 1000: loss=0.847 " + "l1=0" + "l2=0.847 f=-0.219 shape=(1, 9000, 1)
logits [[-0.37235117 -0.5753052   0.02606399  0.04564903]]
Iteration 500 of 1000: loss=0.736 " + "l1=0" + "l2=0.736 f=-0.217 shape=(1, 9000, 1)
logits [[-0.3352646  -0.57780397  0.02299547  0.02368639]]
Iteration 600 of 1000: loss=0.679 " + "l1=0.0119" + "l2=0.667 f=-0.214 shape=(1, 9000, 1)
logits [[-0.31485367 -0.569477    0.02033238  0.00839601]]
Iteration 700 of 1000: loss=0.624 " + "l1=0.0103" + "l2=0.614 f=-0.209 shape=(1, 9000, 1)
logits [[-0.29764488 -0.5666472   0.01851661  0.0082376 ]]
Iteration 800 of 1000: loss=0.578 " + "l1=0" + "l2=0.578 f=-0.205 shape=(1, 9000, 1)
logits [[-0.28979003 -0.562749    0.01195467  0.02121641]]
Iteration 900 of 1000: loss=0.543 " + "l1=0.00497" + "l2=0.538 f=-0.203 shape=(1, 9000, 1)
logits [[-0.27042904 -0.5626018   0.01231421  0.00734913]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.01 " + "l1=4.01" + "l2=0 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.804254  -1.8993002  2.0400043 -4.4949503]]
Iteration 100 of 1000: loss=2.27 " + "l1=1.77" + "l2=0.497 f=-0.299 shape=(1, 9000, 1)
logits [[ 1.0588477 -1.2224895  1.0945102 -2.125734 ]]
Iteration 200 of 1000: loss=1.67 " + "l1=1.04" + "l2=0.634 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.40613374 -0.8994637   0.6562899  -1.2263943 ]]
Iteration 300 of 1000: loss=1.28 " + "l1=0.532" + "l2=0.747 f=-0.246 shape=(1, 9000, 1)
logits [[-0.04031205 -0.6878617   0.35512596 -0.61221427]]
Iteration 400 of 1000: loss=0.899 " + "l1=0.0108" + "l2=0.889 f=-0.219 shape=(1, 9000, 1)
logits [[-0.42789292 -0.57551414  0.07273476  0.05305749]]
Iteration 500 of 1000: loss=0.719 " + "l1=0" + "l2=0.719 f=-0.221 shape=(1, 9000, 1)
logits [[-0.37849814 -0.60336757  0.04726654  0.05133576]]
Iteration 600 of 1000: loss=0.63 " + "l1=0.00602" + "l2=0.624 f=-0.222 shape=(1, 9000, 1)
logits [[-0.34971014 -0.61017114  0.04159464  0.03064209]]
Iteration 700 of 1000: loss=0.57 " + "l1=0.0036" + "l2=0.566 f=-0.219 shape=(1, 9000, 1)
logits [[-0.33470586 -0.6078346   0.03584538  0.02929153]]
Iteration 800 of 1000: loss=0.525 " + "l1=0.0022" + "l2=0.523 f=-0.217 shape=(1, 9000, 1)
logits [[-0.32211316 -0.60963064  0.0344476   0.03045279]]
Iteration 900 of 1000: loss=0.487 " + "l1=0.00185" + "l2=0.486 f=-0.214 shape=(1, 9000, 1)
logits [[-0.3076643  -0.6195357   0.03750901  0.03414851]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.37 " + "l1=2.37" + "l2=0 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.804254  -1.8993002  2.0400043 -4.4949503]]
Iteration 100 of 1000: loss=1.6 " + "l1=1.36" + "l2=0.236 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.437331  -1.4346758  1.4386119 -2.751852 ]]
Iteration 200 of 1000: loss=1.32 " + "l1=0.987" + "l2=0.328 f=-0.299 shape=(1, 9000, 1)
logits [[ 0.9784422 -1.1328293  0.9971642 -2.03871  ]]
Iteration 300 of 1000: loss=1.15 " + "l1=0.749" + "l2=0.398 f=-0.279 shape=(1, 9000, 1)
logits [[ 0.62059623 -0.9362956   0.753669   -1.5522299 ]]
Iteration 400 of 1000: loss=1.02 " + "l1=0.584" + "l2=0.435 f=-0.269 shape=(1, 9000, 1)
logits [[ 0.35856327 -0.8046289   0.5832387  -1.2147235 ]]
Iteration 500 of 1000: loss=0.899 " + "l1=0.434" + "l2=0.465 f=-0.265 shape=(1, 9000, 1)
logits [[ 0.13317545 -0.7159136   0.43008816 -0.9053741 ]]
Iteration 600 of 1000: loss=0.769 " + "l1=0.267" + "l2=0.502 f=-0.251 shape=(1, 9000, 1)
logits [[-0.08429384 -0.6222802   0.26166338 -0.5603108 ]]
Iteration 700 of 1000: loss=0.663 " + "l1=0.138" + "l2=0.525 f=-0.233 shape=(1, 9000, 1)
logits [[-0.22470367 -0.57039374  0.14371315 -0.28028572]]
Iteration 800 of 1000: loss=0.566 " + "l1=0.00561" + "l2=0.56 f=-0.219 shape=(1, 9000, 1)
logits [[-0.3664911  -0.5460685   0.02645201  0.00917665]]
Iteration 900 of 1000: loss=0.502 " + "l1=0" + "l2=0.502 f=-0.217 shape=(1, 9000, 1)
logits [[-0.3468946  -0.57354236  0.02598676  0.02611474]]
--- 309.4465434551239 seconds ---
Adv result:3
Loading record A01691
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.078 " + "l1=0.078" + "l2=0 f=-0.719 shape=(1, 9000, 1)
logits [[ 4.70365   -3.096381   3.0298004 -7.514084 ]]
Iteration 100 of 1000: loss=0.0778 " + "l1=0.0777" + "l2=0.000165 f=-0.719 shape=(1, 9000, 1)
logits [[ 4.6806507 -3.08501    3.0211399 -7.490995 ]]
Iteration 200 of 1000: loss=0.0778 " + "l1=0.0776" + "l2=0.000134 f=-0.718 shape=(1, 9000, 1)
logits [[ 4.679056  -3.0834389  3.0198066 -7.4892936]]
Iteration 300 of 1000: loss=0.0777 " + "l1=0.0776" + "l2=0.000168 f=-0.718 shape=(1, 9000, 1)
logits [[ 4.675311  -3.0812879  3.0181172 -7.485636 ]]
Iteration 400 of 1000: loss=0.0777 " + "l1=0.0775" + "l2=0.000206 f=-0.718 shape=(1, 9000, 1)
logits [[ 4.671364  -3.0791461  3.0164583 -7.4818745]]
Iteration 500 of 1000: loss=0.0777 " + "l1=0.0774" + "l2=0.000296 f=-0.718 shape=(1, 9000, 1)
logits [[ 4.6675806 -3.0772264  3.0149841 -7.4783154]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.78 " + "l1=0.78" + "l2=0 f=-0.719 shape=(1, 9000, 1)
logits [[ 4.70365   -3.096381   3.0298004 -7.514084 ]]
Iteration 100 of 1000: loss=0.764 " + "l1=0.756" + "l2=0.00825 f=-0.714 shape=(1, 9000, 1)
logits [[ 4.5474353 -3.0129833  2.9662502 -7.3566403]]
Iteration 200 of 1000: loss=0.758 " + "l1=0.747" + "l2=0.0108 f=-0.712 shape=(1, 9000, 1)
logits [[ 4.4879923 -2.9820542  2.9429762 -7.298286 ]]
Iteration 300 of 1000: loss=0.752 " + "l1=0.738" + "l2=0.0139 f=-0.711 shape=(1, 9000, 1)
logits [[ 4.431613  -2.9491897  2.916491  -7.2431483]]
Iteration 400 of 1000: loss=0.747 " + "l1=0.73" + "l2=0.0171 f=-0.709 shape=(1, 9000, 1)
logits [[ 4.377857  -2.9197874  2.8927813 -7.188455 ]]
Iteration 500 of 1000: loss=0.742 " + "l1=0.722" + "l2=0.0206 f=-0.708 shape=(1, 9000, 1)
logits [[ 4.322103  -2.8938322  2.8721817 -7.1334867]]
Iteration 600 of 1000: loss=0.738 " + "l1=0.714" + "l2=0.0236 f=-0.707 shape=(1, 9000, 1)
logits [[ 4.270753  -2.869947   2.8522196 -7.082404 ]]
Iteration 700 of 1000: loss=0.734 " + "l1=0.708" + "l2=0.0263 f=-0.706 shape=(1, 9000, 1)
logits [[ 4.2255597 -2.8496566  2.837805  -7.037956 ]]
Iteration 800 of 1000: loss=0.729 " + "l1=0.701" + "l2=0.0285 f=-0.705 shape=(1, 9000, 1)
logits [[ 4.180448  -2.829037   2.8246818 -6.994861 ]]
Iteration 900 of 1000: loss=0.725 " + "l1=0.695" + "l2=0.0309 f=-0.703 shape=(1, 9000, 1)
logits [[ 4.1374965 -2.8077745  2.8119051 -6.9526253]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.8 " + "l1=7.8" + "l2=0 f=-0.719 shape=(1, 9000, 1)
logits [[ 4.70365   -3.096381   3.0298004 -7.514084 ]]
Iteration 100 of 1000: loss=6.4 " + "l1=5.73" + "l2=0.672 f=-0.665 shape=(1, 9000, 1)
logits [[ 3.3532505 -2.3747113  2.4826646 -6.120103 ]]
Iteration 200 of 1000: loss=5.62 " + "l1=4.62" + "l2=1.01 f=-0.62 shape=(1, 9000, 1)
logits [[ 2.6053605 -2.01083    2.1506782 -5.226311 ]]
Iteration 300 of 1000: loss=4.87 " + "l1=3.51" + "l2=1.35 f=-0.549 shape=(1, 9000, 1)
logits [[ 1.8982999 -1.6162977  1.8538297 -4.330572 ]]
Iteration 400 of 1000: loss=4.24 " + "l1=2.82" + "l2=1.43 f=-0.515 shape=(1, 9000, 1)
logits [[ 1.5517917 -1.2572232  1.5586582 -3.9120066]]
Iteration 500 of 1000: loss=3.88 " + "l1=2.46" + "l2=1.42 f=-0.506 shape=(1, 9000, 1)
logits [[ 1.377669  -1.0784541  1.3753448 -3.699043 ]]
Iteration 600 of 1000: loss=3.7 " + "l1=2.3" + "l2=1.4 f=-0.5 shape=(1, 9000, 1)
logits [[ 1.2816968 -1.0144249  1.2825184 -3.548991 ]]
Iteration 700 of 1000: loss=3.57 " + "l1=2.16" + "l2=1.42 f=-0.495 shape=(1, 9000, 1)
logits [[ 1.1759478 -0.9781147  1.1807745 -3.3602586]]
Iteration 800 of 1000: loss=3.49 " + "l1=2.04" + "l2=1.45 f=-0.487 shape=(1, 9000, 1)
logits [[ 1.0914268  -0.94500786  1.0956988  -3.1894515 ]]
Iteration 900 of 1000: loss=3.41 " + "l1=1.92" + "l2=1.49 f=-0.479 shape=(1, 9000, 1)
logits [[ 1.0108833  -0.90870386  1.0125912  -3.0290442 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=78 " + "l1=78" + "l2=0 f=-0.719 shape=(1, 9000, 1)
logits [[ 4.70365   -3.096381   3.0298004 -7.514084 ]]
Iteration 100 of 1000: loss=23.8 " + "l1=9.7" + "l2=14.1 f=-0.491 shape=(1, 9000, 1)
logits [[ 0.75671035 -0.17835002  0.79179347 -3.3341897 ]]
Iteration 200 of 1000: loss=13.9 " + "l1=0.0414" + "l2=13.8 f=-0.469 shape=(1, 9000, 1)
logits [[ 0.14556228  0.3213453   0.32548586 -2.6682756 ]]
Iteration 300 of 1000: loss=11.4 " + "l1=0.12" + "l2=11.2 f=-0.476 shape=(1, 9000, 1)
logits [[ 0.21146363  0.29683256  0.30888125 -2.7217197 ]]
Iteration 400 of 1000: loss=9.99 " + "l1=0.0409" + "l2=9.95 f=-0.48 shape=(1, 9000, 1)
logits [[ 0.25125185  0.28465268  0.28873938 -2.7448056 ]]
Iteration 500 of 1000: loss=9.04 " + "l1=0.0215" + "l2=9.02 f=-0.479 shape=(1, 9000, 1)
logits [[ 0.12242129  0.24684262  0.24899481 -2.5334842 ]]
Iteration 600 of 1000: loss=8.42 " + "l1=0" + "l2=8.42 f=-0.474 shape=(1, 9000, 1)
logits [[ 0.17872548  0.2277486   0.2133535  -2.5138774 ]]
Iteration 700 of 1000: loss=7.9 " + "l1=0.0743" + "l2=7.83 f=-0.471 shape=(1, 9000, 1)
logits [[ 0.10035948  0.19363855  0.20107038 -2.378393  ]]
Iteration 800 of 1000: loss=7.48 " + "l1=0" + "l2=7.48 f=-0.47 shape=(1, 9000, 1)
logits [[ 0.08042595  0.17693986  0.16248964 -2.30098   ]]
Iteration 900 of 1000: loss=7.19 " + "l1=0" + "l2=7.19 f=-0.464 shape=(1, 9000, 1)
logits [[ 0.05291718  0.16809592  0.1467217  -2.22291   ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=42.9 " + "l1=42.9" + "l2=0 f=-0.719 shape=(1, 9000, 1)
logits [[ 4.70365   -3.096381   3.0298004 -7.514084 ]]
Iteration 100 of 1000: loss=18.6 " + "l1=10.4" + "l2=8.29 f=-0.524 shape=(1, 9000, 1)
logits [[ 1.2230626  -0.64497405  1.2370163  -3.9093711 ]]
Iteration 200 of 1000: loss=13.2 " + "l1=3.98" + "l2=9.26 f=-0.511 shape=(1, 9000, 1)
logits [[ 0.642973   -0.04907811  0.673674   -3.3126001 ]]
Iteration 300 of 1000: loss=10.5 " + "l1=1.55" + "l2=8.97 f=-0.488 shape=(1, 9000, 1)
logits [[ 0.4217771   0.17196544  0.4542882  -3.0015993 ]]
Iteration 400 of 1000: loss=8.48 " + "l1=0.0667" + "l2=8.42 f=-0.467 shape=(1, 9000, 1)
logits [[ 0.21910357  0.2666096   0.27873063 -2.6339993 ]]
Iteration 500 of 1000: loss=7.48 " + "l1=0.0133" + "l2=7.46 f=-0.472 shape=(1, 9000, 1)
logits [[ 0.16717508  0.19523546  0.19765401 -2.446294  ]]
Iteration 600 of 1000: loss=6.9 " + "l1=0" + "l2=6.9 f=-0.467 shape=(1, 9000, 1)
logits [[ 0.13127357  0.15427771  0.15262121 -2.3072643 ]]
Iteration 700 of 1000: loss=6.4 " + "l1=0.0168" + "l2=6.38 f=-0.458 shape=(1, 9000, 1)
logits [[ 0.09173817  0.11888122  0.12193771 -2.1641333 ]]
Iteration 800 of 1000: loss=5.97 " + "l1=0.0142" + "l2=5.95 f=-0.451 shape=(1, 9000, 1)
logits [[ 0.08501595  0.09290361  0.09547839 -2.0772727 ]]
Iteration 900 of 1000: loss=5.64 " + "l1=0.0196" + "l2=5.62 f=-0.439 shape=(1, 9000, 1)
logits [[ 0.04483974  0.08952336  0.09309169 -1.9833318 ]]
--- 282.94956636428833 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0167 " + "l1=0.0167" + "l2=0 f=-0.719 shape=(1, 9000, 1)
logits [[ 4.70365   -3.096381   3.0298004 -7.514084 ]]
Iteration 100 of 1000: loss=0.0167 " + "l1=0.0165" + "l2=0.000129 f=-0.72 shape=(1, 9000, 1)
logits [[ 4.685821  -3.097669   3.0333276 -7.499834 ]]
Iteration 200 of 1000: loss=0.0166 " + "l1=0.0165" + "l2=8.72e-05 f=-0.72 shape=(1, 9000, 1)
logits [[ 4.686435  -3.0979545  3.0334697 -7.5003037]]
Iteration 300 of 1000: loss=0.0166 " + "l1=0.0165" + "l2=9.74e-05 f=-0.72 shape=(1, 9000, 1)
logits [[ 4.6848054 -3.0983098  3.0338593 -7.4988737]]
Iteration 400 of 1000: loss=0.0166 " + "l1=0.0165" + "l2=0.000146 f=-0.72 shape=(1, 9000, 1)
logits [[ 4.6826634 -3.0986187  3.0343006 -7.4970803]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.167 " + "l1=0.167" + "l2=0 f=-0.719 shape=(1, 9000, 1)
logits [[ 4.70365   -3.096381   3.0298004 -7.514084 ]]
Iteration 100 of 1000: loss=0.159 " + "l1=0.155" + "l2=0.00452 f=-0.72 shape=(1, 9000, 1)
logits [[ 4.6004124 -3.1108823  3.0539632 -7.425458 ]]
Iteration 200 of 1000: loss=0.156 " + "l1=0.151" + "l2=0.00573 f=-0.721 shape=(1, 9000, 1)
logits [[ 4.5667477 -3.1149726  3.0615938 -7.3981547]]
Iteration 300 of 1000: loss=0.154 " + "l1=0.147" + "l2=0.00704 f=-0.722 shape=(1, 9000, 1)
logits [[ 4.5340133 -3.1173422  3.06624   -7.3703203]]
Iteration 400 of 1000: loss=0.152 " + "l1=0.144" + "l2=0.00809 f=-0.722 shape=(1, 9000, 1)
logits [[ 4.5053473 -3.1189022  3.0693557 -7.344697 ]]
Iteration 500 of 1000: loss=0.15 " + "l1=0.141" + "l2=0.00905 f=-0.723 shape=(1, 9000, 1)
logits [[ 4.478501  -3.1195574  3.071172  -7.3214064]]
Iteration 600 of 1000: loss=0.148 " + "l1=0.138" + "l2=0.00977 f=-0.723 shape=(1, 9000, 1)
logits [[ 4.4548326 -3.1194909  3.0728772 -7.300985 ]]
Iteration 700 of 1000: loss=0.146 " + "l1=0.136" + "l2=0.0104 f=-0.724 shape=(1, 9000, 1)
logits [[ 4.4308963 -3.1183798  3.0742936 -7.2808876]]
Iteration 800 of 1000: loss=0.144 " + "l1=0.133" + "l2=0.0113 f=-0.724 shape=(1, 9000, 1)
logits [[ 4.406357  -3.1175334  3.0761821 -7.2616887]]
Iteration 900 of 1000: loss=0.142 " + "l1=0.13" + "l2=0.012 f=-0.725 shape=(1, 9000, 1)
logits [[ 4.3820353 -3.1163476  3.0780156 -7.242224 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.67 " + "l1=1.67" + "l2=0 f=-0.719 shape=(1, 9000, 1)
logits [[ 4.70365   -3.096381   3.0298004 -7.514084 ]]
Iteration 100 of 1000: loss=1 " + "l1=0.671" + "l2=0.331 f=-0.73 shape=(1, 9000, 1)
logits [[ 3.8041165 -3.157786   3.132939  -6.700682 ]]
Iteration 200 of 1000: loss=0.736 " + "l1=0.317" + "l2=0.42 f=-0.726 shape=(1, 9000, 1)
logits [[ 3.4863584 -3.1850607  3.1695995 -6.374222 ]]
Iteration 300 of 1000: loss=0.504 " + "l1=0.0156" + "l2=0.488 f=-0.722 shape=(1, 9000, 1)
logits [[ 3.2012782 -3.2087667  3.1856737 -6.066544 ]]
Iteration 400 of 1000: loss=0.389 " + "l1=0.00523" + "l2=0.383 f=-0.715 shape=(1, 9000, 1)
logits [[ 3.191845  -3.2040942  3.1866128 -6.03479  ]]
Iteration 500 of 1000: loss=0.294 " + "l1=0" + "l2=0.294 f=-0.714 shape=(1, 9000, 1)
logits [[ 3.1812482 -3.2130623  3.1870353 -6.0094333]]
Iteration 600 of 1000: loss=0.227 " + "l1=0.00181" + "l2=0.225 f=-0.715 shape=(1, 9000, 1)
logits [[ 3.1901653 -3.218561   3.1883597 -6.0189743]]
Iteration 700 of 1000: loss=0.186 " + "l1=0.000921" + "l2=0.185 f=-0.719 shape=(1, 9000, 1)
logits [[ 3.1832259 -3.2211857  3.1823044 -6.019367 ]]
Iteration 800 of 1000: loss=0.161 " + "l1=0" + "l2=0.161 f=-0.722 shape=(1, 9000, 1)
logits [[ 3.164072  -3.2246902  3.1738608 -5.9995723]]
Iteration 900 of 1000: loss=0.141 " + "l1=0.000806" + "l2=0.141 f=-0.724 shape=(1, 9000, 1)
logits [[ 3.1635807 -3.2270901  3.1627748 -5.9948754]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.921 " + "l1=0.921" + "l2=0 f=-0.719 shape=(1, 9000, 1)
logits [[ 4.70365   -3.096381   3.0298004 -7.514084 ]]
Iteration 100 of 1000: loss=0.704 " + "l1=0.597" + "l2=0.107 f=-0.728 shape=(1, 9000, 1)
logits [[ 4.195523  -3.1496499  3.1098285 -7.066894 ]]
Iteration 200 of 1000: loss=0.614 " + "l1=0.461" + "l2=0.152 f=-0.727 shape=(1, 9000, 1)
logits [[ 3.9644172 -3.1465163  3.1256578 -6.8502026]]
Iteration 300 of 1000: loss=0.538 " + "l1=0.355" + "l2=0.183 f=-0.73 shape=(1, 9000, 1)
logits [[ 3.7789369 -3.1572995  3.133312  -6.673048 ]]
Iteration 400 of 1000: loss=0.467 " + "l1=0.266" + "l2=0.202 f=-0.728 shape=(1, 9000, 1)
logits [[ 3.627304  -3.1710918  3.1441023 -6.510862 ]]
Iteration 500 of 1000: loss=0.404 " + "l1=0.184" + "l2=0.22 f=-0.724 shape=(1, 9000, 1)
logits [[ 3.4906623 -3.1888912  3.156513  -6.3553367]]
Iteration 600 of 1000: loss=0.325 " + "l1=0.0887" + "l2=0.236 f=-0.72 shape=(1, 9000, 1)
logits [[ 3.3326797 -3.2098303  3.1713758 -6.1756024]]
Iteration 700 of 1000: loss=0.219 " + "l1=0.00837" + "l2=0.21 f=-0.719 shape=(1, 9000, 1)
logits [[ 3.2073312 -3.2233496  3.1921127 -6.05249  ]]
Iteration 800 of 1000: loss=0.17 " + "l1=0" + "l2=0.17 f=-0.719 shape=(1, 9000, 1)
logits [[ 3.1919036 -3.225578   3.1920402 -6.0350804]]
Iteration 900 of 1000: loss=0.145 " + "l1=0.00122" + "l2=0.144 f=-0.721 shape=(1, 9000, 1)
logits [[ 3.1845555 -3.22851    3.1823392 -6.0240026]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.544 " + "l1=0.544" + "l2=0 f=-0.719 shape=(1, 9000, 1)
logits [[ 4.70365   -3.096381   3.0298004 -7.514084 ]]
Iteration 100 of 1000: loss=0.465 " + "l1=0.425" + "l2=0.0394 f=-0.725 shape=(1, 9000, 1)
logits [[ 4.397314  -3.1350343  3.0890603 -7.249984 ]]
Iteration 200 of 1000: loss=0.434 " + "l1=0.38" + "l2=0.0541 f=-0.726 shape=(1, 9000, 1)
logits [[ 4.274706  -3.1433403  3.106838  -7.1403637]]
Iteration 300 of 1000: loss=0.408 " + "l1=0.341" + "l2=0.0671 f=-0.725 shape=(1, 9000, 1)
logits [[ 4.166134  -3.143325   3.1172693 -7.0418153]]
Iteration 400 of 1000: loss=0.384 " + "l1=0.306" + "l2=0.0781 f=-0.727 shape=(1, 9000, 1)
logits [[ 4.062991  -3.1454082  3.1216042 -6.94629  ]]
Iteration 500 of 1000: loss=0.359 " + "l1=0.272" + "l2=0.0878 f=-0.729 shape=(1, 9000, 1)
logits [[ 3.9602056 -3.1558304  3.1247475 -6.844661 ]]
Iteration 600 of 1000: loss=0.333 " + "l1=0.235" + "l2=0.0983 f=-0.731 shape=(1, 9000, 1)
logits [[ 3.851331  -3.1627314  3.129253  -6.7426343]]
Iteration 700 of 1000: loss=0.303 " + "l1=0.193" + "l2=0.109 f=-0.734 shape=(1, 9000, 1)
logits [[ 3.735475  -3.1793342  3.1411183 -6.6312985]]
Iteration 800 of 1000: loss=0.273 " + "l1=0.158" + "l2=0.115 f=-0.734 shape=(1, 9000, 1)
logits [[ 3.6386614 -3.1902187  3.1524758 -6.537683 ]]
Iteration 900 of 1000: loss=0.246 " + "l1=0.123" + "l2=0.123 f=-0.735 shape=(1, 9000, 1)
logits [[ 3.5438032 -3.2076035  3.1651978 -6.4414396]]
--- 278.52923250198364 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.122 " + "l1=0.122" + "l2=0 f=-0.719 shape=(1, 9000, 1)
logits [[ 4.70365   -3.096381   3.0298004 -7.514084 ]]
Iteration 100 of 1000: loss=0.122 " + "l1=0.121" + "l2=0.000333 f=-0.718 shape=(1, 9000, 1)
logits [[ 4.668352  -3.0920405  3.019196  -7.4664683]]
Iteration 200 of 1000: loss=0.122 " + "l1=0.121" + "l2=0.000321 f=-0.717 shape=(1, 9000, 1)
logits [[ 4.6628876 -3.0909917  3.016541  -7.458238 ]]
Iteration 300 of 1000: loss=0.121 " + "l1=0.121" + "l2=0.000382 f=-0.717 shape=(1, 9000, 1)
logits [[ 4.6554084 -3.090103   3.0133529 -7.4467487]]
Iteration 400 of 1000: loss=0.121 " + "l1=0.121" + "l2=0.000488 f=-0.717 shape=(1, 9000, 1)
logits [[ 4.6476564 -3.0895576  3.010292  -7.434558 ]]
Iteration 500 of 1000: loss=0.121 " + "l1=0.121" + "l2=0.000561 f=-0.716 shape=(1, 9000, 1)
logits [[ 4.63993   -3.0892627  3.0073538 -7.422255 ]]
Iteration 600 of 1000: loss=0.121 " + "l1=0.12" + "l2=0.00073 f=-0.716 shape=(1, 9000, 1)
logits [[ 4.632391  -3.0891185  3.0044913 -7.410066 ]]
Iteration 700 of 1000: loss=0.121 " + "l1=0.12" + "l2=0.000841 f=-0.715 shape=(1, 9000, 1)
logits [[ 4.625111  -3.0891426  3.001724  -7.3981423]]
Iteration 800 of 1000: loss=0.121 " + "l1=0.12" + "l2=0.000928 f=-0.715 shape=(1, 9000, 1)
logits [[ 4.6180706 -3.0891738  2.9990253 -7.386624 ]]
Iteration 900 of 1000: loss=0.121 " + "l1=0.12" + "l2=0.00117 f=-0.714 shape=(1, 9000, 1)
logits [[ 4.611117  -3.0891373  2.9963853 -7.3753395]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.22 " + "l1=1.22" + "l2=0 f=-0.719 shape=(1, 9000, 1)
logits [[ 4.70365   -3.096381   3.0298004 -7.514084 ]]
Iteration 100 of 1000: loss=1.18 " + "l1=1.16" + "l2=0.0218 f=-0.708 shape=(1, 9000, 1)
logits [[ 4.4340997 -3.0607038  2.9412422 -7.145217 ]]
Iteration 200 of 1000: loss=1.16 " + "l1=1.13" + "l2=0.0299 f=-0.702 shape=(1, 9000, 1)
logits [[ 4.315627  -3.046374   2.8969202 -6.972656 ]]
Iteration 300 of 1000: loss=1.14 " + "l1=1.1" + "l2=0.0377 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.2045283 -3.0330546  2.8497505 -6.7995114]]
Iteration 400 of 1000: loss=1.12 " + "l1=1.07" + "l2=0.0469 f=-0.689 shape=(1, 9000, 1)
logits [[ 4.0873804 -3.0248919  2.8045084 -6.624314 ]]
Iteration 500 of 1000: loss=1.1 " + "l1=1.04" + "l2=0.0559 f=-0.683 shape=(1, 9000, 1)
logits [[ 3.983141  -3.0205243  2.7642162 -6.459535 ]]
Iteration 600 of 1000: loss=1.08 " + "l1=1.02" + "l2=0.0663 f=-0.677 shape=(1, 9000, 1)
logits [[ 3.8772178 -3.017098   2.72294   -6.289762 ]]
Iteration 700 of 1000: loss=1.07 " + "l1=0.989" + "l2=0.0766 f=-0.67 shape=(1, 9000, 1)
logits [[ 3.7693298 -3.0126479  2.6814198 -6.1197453]]
Iteration 800 of 1000: loss=1.05 " + "l1=0.96" + "l2=0.088 f=-0.663 shape=(1, 9000, 1)
logits [[ 3.656407  -3.000669   2.640118  -5.9461255]]
Iteration 900 of 1000: loss=1.03 " + "l1=0.935" + "l2=0.0966 f=-0.654 shape=(1, 9000, 1)
logits [[ 3.5597572 -2.9862552  2.603402  -5.79332  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.2 " + "l1=12.2" + "l2=0 f=-0.719 shape=(1, 9000, 1)
logits [[ 4.70365   -3.096381   3.0298004 -7.514084 ]]
Iteration 100 of 1000: loss=8.29 " + "l1=6.41" + "l2=1.88 f=-0.59 shape=(1, 9000, 1)
logits [[ 2.3290155 -2.8514712  2.2464578 -4.0853353]]
Iteration 200 of 1000: loss=6.9 " + "l1=5.27" + "l2=1.62 f=-0.49 shape=(1, 9000, 1)
logits [[ 1.989361  -2.6670582  1.9961858 -3.2782028]]
Iteration 300 of 1000: loss=5.9 " + "l1=4.26" + "l2=1.64 f=-0.399 shape=(1, 9000, 1)
logits [[ 1.6814563 -2.4702804  1.7253356 -2.5319655]]
Iteration 400 of 1000: loss=4.85 " + "l1=3.04" + "l2=1.81 f=-0.289 shape=(1, 9000, 1)
logits [[ 1.2705826 -2.1774235  1.3962089 -1.6458677]]
Iteration 500 of 1000: loss=3.86 " + "l1=1.87" + "l2=1.99 f=-0.195 shape=(1, 9000, 1)
logits [[ 0.8783738  -1.8758675   1.044206   -0.82632643]]
Iteration 600 of 1000: loss=3.21 " + "l1=1.05" + "l2=2.16 f=-0.149 shape=(1, 9000, 1)
logits [[ 0.5904297  -1.7555388   0.80809295 -0.23975375]]
Iteration 700 of 1000: loss=2.79 " + "l1=0.441" + "l2=2.35 f=-0.11 shape=(1, 9000, 1)
logits [[ 0.35925427 -1.6481255   0.64506817  0.20442715]]
Iteration 800 of 1000: loss=2.48 " + "l1=0.00468" + "l2=2.48 f=-0.0765 shape=(1, 9000, 1)
logits [[ 0.20601179 -1.5548289   0.5236575   0.51897275]]
Iteration 900 of 1000: loss=2.28 " + "l1=0.00256" + "l2=2.28 f=-0.0608 shape=(1, 9000, 1)
logits [[ 0.23396608 -1.5661263   0.54577214  0.5432118 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.72 " + "l1=6.72" + "l2=0 f=-0.719 shape=(1, 9000, 1)
logits [[ 4.70365   -3.096381   3.0298004 -7.514084 ]]
Iteration 100 of 1000: loss=5.38 " + "l1=4.68" + "l2=0.697 f=-0.662 shape=(1, 9000, 1)
logits [[ 3.1660068 -2.9508688  2.48038   -5.3415565]]
Iteration 200 of 1000: loss=4.53 " + "l1=3.58" + "l2=0.949 f=-0.567 shape=(1, 9000, 1)
logits [[ 2.3956854 -2.8285627  2.2892468 -4.1223946]]
Iteration 300 of 1000: loss=3.99 " + "l1=3.08" + "l2=0.911 f=-0.496 shape=(1, 9000, 1)
logits [[ 2.0916245 -2.6678607  2.0919588 -3.4993844]]
Iteration 400 of 1000: loss=3.6 " + "l1=2.65" + "l2=0.949 f=-0.439 shape=(1, 9000, 1)
logits [[ 1.8449807 -2.4823942  1.8475873 -2.9658678]]
Iteration 500 of 1000: loss=3.25 " + "l1=2.2" + "l2=1.04 f=-0.376 shape=(1, 9000, 1)
logits [[ 1.591681  -2.2928467  1.6022998 -2.405976 ]]
Iteration 600 of 1000: loss=2.88 " + "l1=1.73" + "l2=1.15 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.3382016 -2.1169062  1.3480556 -1.8021978]]
Iteration 700 of 1000: loss=2.62 " + "l1=1.4" + "l2=1.22 f=-0.263 shape=(1, 9000, 1)
logits [[ 1.1606656 -2.023332   1.1753659 -1.3643997]]
Iteration 800 of 1000: loss=2.42 " + "l1=1.17" + "l2=1.25 f=-0.227 shape=(1, 9000, 1)
logits [[ 1.0633405 -1.9803416  1.0651776 -1.0576094]]
Iteration 900 of 1000: loss=2.26 " + "l1=0.952" + "l2=1.3 f=-0.195 shape=(1, 9000, 1)
logits [[ 0.9428319  -1.9626325   0.98563045 -0.74496984]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=9.47 " + "l1=9.47" + "l2=0 f=-0.719 shape=(1, 9000, 1)
logits [[ 4.70365   -3.096381   3.0298004 -7.514084 ]]
Iteration 100 of 1000: loss=6.93 " + "l1=5.64" + "l2=1.29 f=-0.626 shape=(1, 9000, 1)
logits [[ 2.673663  -2.913384   2.3368566 -4.6012397]]
Iteration 200 of 1000: loss=5.73 " + "l1=4.47" + "l2=1.26 f=-0.525 shape=(1, 9000, 1)
logits [[ 2.1380286 -2.7491503  2.1394107 -3.628014 ]]
Iteration 300 of 1000: loss=5.01 " + "l1=3.73" + "l2=1.27 f=-0.442 shape=(1, 9000, 1)
logits [[ 1.8589479 -2.5349998  1.8626549 -2.9541266]]
Iteration 400 of 1000: loss=4.32 " + "l1=2.97" + "l2=1.35 f=-0.359 shape=(1, 9000, 1)
logits [[ 1.5526636 -2.3025367  1.5731716 -2.2606225]]
Iteration 500 of 1000: loss=3.61 " + "l1=2.12" + "l2=1.5 f=-0.27 shape=(1, 9000, 1)
logits [[ 1.2046684 -2.036348   1.2416861 -1.4894822]]
Iteration 600 of 1000: loss=3.13 " + "l1=1.49" + "l2=1.64 f=-0.216 shape=(1, 9000, 1)
logits [[ 0.953718  -1.8952509  0.9996285 -0.9229936]]
Iteration 700 of 1000: loss=2.78 " + "l1=1.03" + "l2=1.75 f=-0.17 shape=(1, 9000, 1)
logits [[ 0.783091  -1.8351517  0.851876  -0.4800197]]
Iteration 800 of 1000: loss=2.51 " + "l1=0.672" + "l2=1.84 f=-0.136 shape=(1, 9000, 1)
logits [[ 0.61651087 -1.7721317   0.73905754 -0.1281282 ]]
Iteration 900 of 1000: loss=2.28 " + "l1=0.342" + "l2=1.94 f=-0.106 shape=(1, 9000, 1)
logits [[ 0.45057517 -1.6958512   0.63094944  0.19024754]]
--- 305.28859066963196 seconds ---
Adv result:3
Loading record A01693
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0771 " + "l1=0.0771" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[  5.81075   -1.901889   2.902851 -10.523585]]
Iteration 100 of 1000: loss=0.0765 " + "l1=0.0761" + "l2=0.000434 f=-0.928 shape=(1, 9000, 1)
logits [[  5.7570887  -1.8504676   2.8734555 -10.49033  ]]
Iteration 200 of 1000: loss=0.0763 " + "l1=0.0759" + "l2=0.000438 f=-0.927 shape=(1, 9000, 1)
logits [[  5.7495136  -1.8407521   2.8656025 -10.483757 ]]
Iteration 300 of 1000: loss=0.0762 " + "l1=0.0757" + "l2=0.000545 f=-0.927 shape=(1, 9000, 1)
logits [[  5.738457   -1.8282921   2.8563616 -10.475733 ]]
Iteration 400 of 1000: loss=0.0761 " + "l1=0.0754" + "l2=0.000637 f=-0.927 shape=(1, 9000, 1)
logits [[  5.7271595  -1.8164935   2.8478506 -10.467939 ]]
Iteration 500 of 1000: loss=0.076 " + "l1=0.0752" + "l2=0.000772 f=-0.927 shape=(1, 9000, 1)
logits [[  5.716529   -1.8053147   2.8400106 -10.4607525]]
Iteration 600 of 1000: loss=0.0759 " + "l1=0.075" + "l2=0.000922 f=-0.927 shape=(1, 9000, 1)
logits [[  5.7059546  -1.7938756   2.8322642 -10.453798 ]]
Iteration 700 of 1000: loss=0.0759 " + "l1=0.0748" + "l2=0.00113 f=-0.927 shape=(1, 9000, 1)
logits [[  5.69569    -1.783208    2.8251474 -10.447242 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.771 " + "l1=0.771" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[  5.81075   -1.901889   2.902851 -10.523585]]
Iteration 100 of 1000: loss=0.703 " + "l1=0.652" + "l2=0.0511 f=-0.921 shape=(1, 9000, 1)
logits [[  5.177955   -1.3413178   2.6230004 -10.14481  ]]
Iteration 200 of 1000: loss=0.67 " + "l1=0.599" + "l2=0.071 f=-0.931 shape=(1, 9000, 1)
logits [[ 4.8796816 -1.1082928  2.4859164 -9.981536 ]]
Iteration 300 of 1000: loss=0.63 " + "l1=0.527" + "l2=0.103 f=-0.95 shape=(1, 9000, 1)
logits [[ 4.4670534 -0.8048865  2.3148088 -9.7759695]]
Iteration 400 of 1000: loss=0.587 " + "l1=0.458" + "l2=0.129 f=-0.968 shape=(1, 9000, 1)
logits [[ 4.0506306 -0.5299382  2.1797771 -9.573069 ]]
Iteration 500 of 1000: loss=0.537 " + "l1=0.383" + "l2=0.154 f=-0.984 shape=(1, 9000, 1)
logits [[ 3.582285   -0.24375592  2.0626714  -9.335327  ]]
Iteration 600 of 1000: loss=0.488 " + "l1=0.309" + "l2=0.179 f=-1 shape=(1, 9000, 1)
logits [[ 3.1083739  0.0207713  1.9629402 -9.093856 ]]
Iteration 700 of 1000: loss=0.442 " + "l1=0.244" + "l2=0.198 f=-1.02 shape=(1, 9000, 1)
logits [[ 2.6623323   0.22524318  1.8896738  -8.849221  ]]
Iteration 800 of 1000: loss=0.391 " + "l1=0.161" + "l2=0.23 f=-1.03 shape=(1, 9000, 1)
logits [[ 2.1105042  0.4987085  1.8061119 -8.547827 ]]
Iteration 900 of 1000: loss=0.334 " + "l1=0.095" + "l2=0.239 f=-1.03 shape=(1, 9000, 1)
logits [[ 1.6897107  0.7392197  1.6775665 -8.241537 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.71 " + "l1=7.71" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[  5.81075   -1.901889   2.902851 -10.523585]]
Iteration 100 of 1000: loss=1.46 " + "l1=0" + "l2=1.46 f=-1.13 shape=(1, 9000, 1)
logits [[ 1.3037827  1.461361   1.4555691 -8.749348 ]]
Iteration 200 of 1000: loss=1 " + "l1=0.0115" + "l2=0.993 f=-1.12 shape=(1, 9000, 1)
logits [[ 1.420089   1.40863    1.4084051 -8.705952 ]]
Iteration 300 of 1000: loss=0.827 " + "l1=0" + "l2=0.827 f=-1.12 shape=(1, 9000, 1)
logits [[ 1.3764131  1.4222078  1.3812232 -8.654138 ]]
Iteration 400 of 1000: loss=0.724 " + "l1=0" + "l2=0.724 f=-1.13 shape=(1, 9000, 1)
logits [[ 1.2942258  1.4140189  1.3697767 -8.611807 ]]
Iteration 500 of 1000: loss=0.644 " + "l1=0" + "l2=0.644 f=-1.14 shape=(1, 9000, 1)
logits [[ 1.2718799  1.3795679  1.3537841 -8.562799 ]]
Iteration 600 of 1000: loss=0.609 " + "l1=0" + "l2=0.609 f=-1.15 shape=(1, 9000, 1)
logits [[ 1.1436774  1.4286133  1.3264753 -8.502824 ]]
Iteration 700 of 1000: loss=0.533 " + "l1=0" + "l2=0.533 f=-1.15 shape=(1, 9000, 1)
logits [[ 1.2032338  1.3350279  1.3245714 -8.44633  ]]
Iteration 800 of 1000: loss=0.5 " + "l1=0.0213" + "l2=0.479 f=-1.14 shape=(1, 9000, 1)
logits [[ 1.2663833  1.2744697  1.2957548 -8.377131 ]]
Iteration 900 of 1000: loss=0.453 " + "l1=0" + "l2=0.453 f=-1.14 shape=(1, 9000, 1)
logits [[ 1.2183607  1.2866437  1.2651566 -8.310964 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.24 " + "l1=4.24" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[  5.81075   -1.901889   2.902851 -10.523585]]
Iteration 100 of 1000: loss=1.41 " + "l1=0.288" + "l2=1.12 f=-1.11 shape=(1, 9000, 1)
logits [[ 1.609364   1.1124476  1.636981  -8.808869 ]]
Iteration 200 of 1000: loss=0.862 " + "l1=0.0173" + "l2=0.845 f=-1.12 shape=(1, 9000, 1)
logits [[ 1.4158983  1.3954592  1.4269263 -8.723027 ]]
Iteration 300 of 1000: loss=0.707 " + "l1=0" + "l2=0.707 f=-1.14 shape=(1, 9000, 1)
logits [[ 1.2882603  1.420791   1.3980068 -8.651796 ]]
Iteration 400 of 1000: loss=0.611 " + "l1=0.017" + "l2=0.594 f=-1.13 shape=(1, 9000, 1)
logits [[ 1.3732499  1.3422732  1.3590735 -8.589848 ]]
Iteration 500 of 1000: loss=0.54 " + "l1=0" + "l2=0.54 f=-1.13 shape=(1, 9000, 1)
logits [[ 1.3112656  1.3454517  1.3203287 -8.498113 ]]
Iteration 600 of 1000: loss=0.49 " + "l1=0" + "l2=0.49 f=-1.14 shape=(1, 9000, 1)
logits [[ 1.2455158  1.3310243  1.3065463 -8.424938 ]]
Iteration 700 of 1000: loss=0.441 " + "l1=0.00101" + "l2=0.44 f=-1.14 shape=(1, 9000, 1)
logits [[ 1.2182488  1.2901714  1.2920008 -8.355681 ]]
Iteration 800 of 1000: loss=0.408 " + "l1=0" + "l2=0.408 f=-1.14 shape=(1, 9000, 1)
logits [[ 1.1952823  1.2951709  1.2368532 -8.270616 ]]
Iteration 900 of 1000: loss=0.371 " + "l1=0" + "l2=0.371 f=-1.14 shape=(1, 9000, 1)
logits [[ 1.1622348  1.2571324  1.2360107 -8.198037 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.51 " + "l1=2.51" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[  5.81075   -1.901889   2.902851 -10.523585]]
Iteration 100 of 1000: loss=1.27 " + "l1=0.469" + "l2=0.805 f=-1.08 shape=(1, 9000, 1)
logits [[ 2.0452585  0.6027827  2.0399191 -8.990956 ]]
Iteration 200 of 1000: loss=0.904 " + "l1=0.176" + "l2=0.728 f=-1.11 shape=(1, 9000, 1)
logits [[ 1.5891031  1.1014276  1.6420802 -8.754508 ]]
Iteration 300 of 1000: loss=0.649 " + "l1=0.0339" + "l2=0.615 f=-1.11 shape=(1, 9000, 1)
logits [[ 1.425241   1.3208715  1.4183923 -8.615787 ]]
Iteration 400 of 1000: loss=0.511 " + "l1=0" + "l2=0.511 f=-1.12 shape=(1, 9000, 1)
logits [[ 1.2952492  1.3652914  1.346551  -8.503605 ]]
Iteration 500 of 1000: loss=0.421 " + "l1=0" + "l2=0.421 f=-1.12 shape=(1, 9000, 1)
logits [[ 1.279013   1.3139545  1.3066953 -8.387197 ]]
Iteration 600 of 1000: loss=0.364 " + "l1=0.00208" + "l2=0.362 f=-1.11 shape=(1, 9000, 1)
logits [[ 1.2669994  1.2681772  1.2745887 -8.268763 ]]
Iteration 700 of 1000: loss=0.326 " + "l1=0" + "l2=0.326 f=-1.12 shape=(1, 9000, 1)
logits [[ 1.176927   1.2562346  1.252343  -8.14612  ]]
Iteration 800 of 1000: loss=0.294 " + "l1=0.00219" + "l2=0.291 f=-1.1 shape=(1, 9000, 1)
logits [[ 1.2204523  1.2137108  1.2089483 -8.031848 ]]
Iteration 900 of 1000: loss=0.27 " + "l1=0" + "l2=0.27 f=-1.09 shape=(1, 9000, 1)
logits [[ 1.1770005  1.198632   1.1967347 -7.9393177]]
--- 294.5123972892761 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0291 " + "l1=0.0291" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[  5.81075   -1.901889   2.902851 -10.523585]]
Iteration 100 of 1000: loss=0.0289 " + "l1=0.0287" + "l2=0.000186 f=-0.93 shape=(1, 9000, 1)
logits [[  5.784812   -1.9031181   2.9138916 -10.514244 ]]
Iteration 200 of 1000: loss=0.0288 " + "l1=0.0287" + "l2=0.000151 f=-0.929 shape=(1, 9000, 1)
logits [[  5.7845235  -1.9041541   2.9152234 -10.5135565]]
Iteration 300 of 1000: loss=0.0288 " + "l1=0.0286" + "l2=0.000183 f=-0.93 shape=(1, 9000, 1)
logits [[  5.781321   -1.9050764   2.9174347 -10.511894 ]]
Iteration 400 of 1000: loss=0.0288 " + "l1=0.0286" + "l2=0.000226 f=-0.93 shape=(1, 9000, 1)
logits [[  5.777654   -1.9060926   2.9198909 -10.510031 ]]
Iteration 500 of 1000: loss=0.0288 " + "l1=0.0285" + "l2=0.000293 f=-0.93 shape=(1, 9000, 1)
logits [[  5.7737737  -1.9078181   2.9229224 -10.508233 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.291 " + "l1=0.291" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[  5.81075   -1.901889   2.902851 -10.523585]]
Iteration 100 of 1000: loss=0.271 " + "l1=0.256" + "l2=0.0144 f=-0.949 shape=(1, 9000, 1)
logits [[  5.55245    -1.8973231   2.9876773 -10.436903 ]]
Iteration 200 of 1000: loss=0.263 " + "l1=0.245" + "l2=0.018 f=-0.953 shape=(1, 9000, 1)
logits [[  5.4722795  -1.9052416   3.0242915 -10.401834 ]]
Iteration 300 of 1000: loss=0.255 " + "l1=0.234" + "l2=0.0215 f=-0.958 shape=(1, 9000, 1)
logits [[  5.388902   -1.9086791   3.0506337 -10.361321 ]]
Iteration 400 of 1000: loss=0.248 " + "l1=0.223" + "l2=0.0254 f=-0.964 shape=(1, 9000, 1)
logits [[  5.294849   -1.9054054   3.06858   -10.313276 ]]
Iteration 500 of 1000: loss=0.241 " + "l1=0.212" + "l2=0.0292 f=-0.972 shape=(1, 9000, 1)
logits [[  5.194369   -1.8984714   3.078216  -10.261243 ]]
Iteration 600 of 1000: loss=0.234 " + "l1=0.202" + "l2=0.0318 f=-0.975 shape=(1, 9000, 1)
logits [[  5.112002   -1.8931167   3.0881753 -10.208329 ]]
Iteration 700 of 1000: loss=0.227 " + "l1=0.193" + "l2=0.0348 f=-0.979 shape=(1, 9000, 1)
logits [[  5.0227776  -1.884191    3.09639   -10.15106  ]]
Iteration 800 of 1000: loss=0.22 " + "l1=0.18" + "l2=0.0396 f=-0.986 shape=(1, 9000, 1)
logits [[  4.903608   -1.8624221   3.0994127 -10.08323  ]]
Iteration 900 of 1000: loss=0.212 " + "l1=0.168" + "l2=0.0439 f=-0.992 shape=(1, 9000, 1)
logits [[  4.785036   -1.8450944   3.1031773 -10.013043 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.91 " + "l1=2.91" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[  5.81075   -1.901889   2.902851 -10.523585]]
Iteration 100 of 1000: loss=0.557 " + "l1=0.00541" + "l2=0.551 f=-1.11 shape=(1, 9000, 1)
logits [[ 3.0832546 -1.0413126  3.0778475 -9.544661 ]]
Iteration 200 of 1000: loss=0.453 " + "l1=0" + "l2=0.453 f=-1.09 shape=(1, 9000, 1)
logits [[ 3.0409603  -0.97573334  3.0837367  -9.51994   ]]
Iteration 300 of 1000: loss=0.39 " + "l1=0" + "l2=0.39 f=-1.08 shape=(1, 9000, 1)
logits [[ 3.0764532 -1.0152909  3.0855575 -9.484546 ]]
Iteration 400 of 1000: loss=0.355 " + "l1=0" + "l2=0.355 f=-1.08 shape=(1, 9000, 1)
logits [[ 3.0720367 -1.047371   3.0825324 -9.436341 ]]
Iteration 500 of 1000: loss=0.326 " + "l1=0.00811" + "l2=0.318 f=-1.08 shape=(1, 9000, 1)
logits [[ 3.0790312 -1.080234   3.0709224 -9.398822 ]]
Iteration 600 of 1000: loss=0.305 " + "l1=0.0107" + "l2=0.294 f=-1.09 shape=(1, 9000, 1)
logits [[ 3.0623045 -1.1006827  3.0515597 -9.3536215]]
Iteration 700 of 1000: loss=0.294 " + "l1=0" + "l2=0.294 f=-1.1 shape=(1, 9000, 1)
logits [[ 2.9340405 -1.09469    3.0573702 -9.290924 ]]
Iteration 800 of 1000: loss=0.253 " + "l1=0.00539" + "l2=0.248 f=-1.09 shape=(1, 9000, 1)
logits [[ 3.033351  -1.1647837  3.0279615 -9.274724 ]]
Iteration 900 of 1000: loss=0.249 " + "l1=0" + "l2=0.249 f=-1.11 shape=(1, 9000, 1)
logits [[ 2.9056506 -1.1663604  3.0351663 -9.20278  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.6 " + "l1=1.6" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[  5.81075   -1.901889   2.902851 -10.523585]]
Iteration 100 of 1000: loss=0.531 " + "l1=0.00823" + "l2=0.523 f=-1.11 shape=(1, 9000, 1)
logits [[ 3.0992432 -1.0568343  3.0842712 -9.553975 ]]
Iteration 200 of 1000: loss=0.408 " + "l1=0" + "l2=0.408 f=-1.09 shape=(1, 9000, 1)
logits [[ 3.0576143  -0.99336034  3.0919774  -9.508155  ]]
Iteration 300 of 1000: loss=0.346 " + "l1=0" + "l2=0.346 f=-1.08 shape=(1, 9000, 1)
logits [[ 3.0823553 -1.0325383  3.0908873 -9.470176 ]]
Iteration 400 of 1000: loss=0.315 " + "l1=0" + "l2=0.315 f=-1.09 shape=(1, 9000, 1)
logits [[ 3.042935  -1.0474393  3.0842888 -9.422604 ]]
Iteration 500 of 1000: loss=0.281 " + "l1=0" + "l2=0.281 f=-1.09 shape=(1, 9000, 1)
logits [[ 3.0417302 -1.0909535  3.0701466 -9.374215 ]]
Iteration 600 of 1000: loss=0.251 " + "l1=0" + "l2=0.251 f=-1.09 shape=(1, 9000, 1)
logits [[ 3.0368984 -1.1471331  3.0571215 -9.317042 ]]
Iteration 700 of 1000: loss=0.221 " + "l1=0.000217" + "l2=0.221 f=-1.1 shape=(1, 9000, 1)
logits [[ 3.0379896 -1.1946604  3.037595  -9.269861 ]]
Iteration 800 of 1000: loss=0.2 " + "l1=0" + "l2=0.2 f=-1.1 shape=(1, 9000, 1)
logits [[ 3.0144534 -1.2178872  3.0158818 -9.210911 ]]
Iteration 900 of 1000: loss=0.184 " + "l1=0" + "l2=0.184 f=-1.1 shape=(1, 9000, 1)
logits [[ 2.9739394 -1.2391806  3.000263  -9.149372 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.945 " + "l1=0.945" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[  5.81075   -1.901889   2.902851 -10.523585]]
Iteration 100 of 1000: loss=0.605 " + "l1=0.29" + "l2=0.315 f=-1.08 shape=(1, 9000, 1)
logits [[ 3.9767363 -1.5679691  3.082959  -9.818661 ]]
Iteration 200 of 1000: loss=0.393 " + "l1=0.0155" + "l2=0.378 f=-1.09 shape=(1, 9000, 1)
logits [[ 3.1420414 -1.0695828  3.0942483 -9.511209 ]]
Iteration 300 of 1000: loss=0.317 " + "l1=0.00314" + "l2=0.314 f=-1.08 shape=(1, 9000, 1)
logits [[ 3.1018848 -1.04791    3.0922222 -9.457428 ]]
Iteration 400 of 1000: loss=0.276 " + "l1=0.00646" + "l2=0.269 f=-1.08 shape=(1, 9000, 1)
logits [[ 3.1003249 -1.0995317  3.0804408 -9.404995 ]]
Iteration 500 of 1000: loss=0.237 " + "l1=0" + "l2=0.237 f=-1.09 shape=(1, 9000, 1)
logits [[ 3.0488784 -1.1337674  3.0683866 -9.337712 ]]
Iteration 600 of 1000: loss=0.208 " + "l1=0.0051" + "l2=0.203 f=-1.09 shape=(1, 9000, 1)
logits [[ 3.0530953 -1.1653988  3.0373912 -9.281498 ]]
Iteration 700 of 1000: loss=0.184 " + "l1=0" + "l2=0.184 f=-1.09 shape=(1, 9000, 1)
logits [[ 2.998937  -1.1766459  3.0111108 -9.203108 ]]
Iteration 800 of 1000: loss=0.167 " + "l1=0.00211" + "l2=0.165 f=-1.09 shape=(1, 9000, 1)
logits [[ 2.9887125 -1.2078776  2.9822164 -9.139277 ]]
Iteration 900 of 1000: loss=0.154 " + "l1=0.0021" + "l2=0.152 f=-1.1 shape=(1, 9000, 1)
logits [[ 2.9657204 -1.224298   2.9592712 -9.081454 ]]
--- 284.26174998283386 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.163 " + "l1=0.163" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[  5.81075   -1.901889   2.902851 -10.523585]]
Iteration 100 of 1000: loss=0.163 " + "l1=0.162" + "l2=0.000443 f=-0.926 shape=(1, 9000, 1)
logits [[  5.755468   -1.8701497   2.8798697 -10.470936 ]]
Iteration 200 of 1000: loss=0.163 " + "l1=0.162" + "l2=0.00046 f=-0.926 shape=(1, 9000, 1)
logits [[  5.746492   -1.8641323   2.8741877 -10.460962 ]]
Iteration 300 of 1000: loss=0.162 " + "l1=0.162" + "l2=0.000548 f=-0.926 shape=(1, 9000, 1)
logits [[  5.734903   -1.8576846   2.8684099 -10.449395 ]]
Iteration 400 of 1000: loss=0.162 " + "l1=0.162" + "l2=0.000659 f=-0.926 shape=(1, 9000, 1)
logits [[  5.72308    -1.8511864   2.8628242 -10.437956 ]]
Iteration 500 of 1000: loss=0.162 " + "l1=0.161" + "l2=0.000807 f=-0.926 shape=(1, 9000, 1)
logits [[  5.711754   -1.8449224   2.8575554 -10.427232 ]]
Iteration 600 of 1000: loss=0.162 " + "l1=0.161" + "l2=0.000911 f=-0.926 shape=(1, 9000, 1)
logits [[  5.7008295  -1.8392744   2.8528461 -10.416999 ]]
Iteration 700 of 1000: loss=0.162 " + "l1=0.161" + "l2=0.00107 f=-0.926 shape=(1, 9000, 1)
logits [[  5.6900578  -1.8338768   2.8484113 -10.40709  ]]
Iteration 800 of 1000: loss=0.162 " + "l1=0.161" + "l2=0.00126 f=-0.926 shape=(1, 9000, 1)
logits [[  5.6797543  -1.8289632   2.844409  -10.397881 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.63 " + "l1=1.63" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[  5.81075   -1.901889   2.902851 -10.523585]]
Iteration 100 of 1000: loss=1.57 " + "l1=1.52" + "l2=0.0486 f=-0.927 shape=(1, 9000, 1)
logits [[ 5.1734095 -1.5599083  2.6762853 -9.9978695]]
Iteration 200 of 1000: loss=1.52 " + "l1=1.44" + "l2=0.0892 f=-0.937 shape=(1, 9000, 1)
logits [[ 4.702583  -1.3297359  2.529186  -9.650345 ]]
Iteration 300 of 1000: loss=1.48 " + "l1=1.37" + "l2=0.114 f=-0.95 shape=(1, 9000, 1)
logits [[ 4.331552  -1.1901844  2.4268963 -9.369336 ]]
Iteration 400 of 1000: loss=1.44 " + "l1=1.3" + "l2=0.143 f=-0.959 shape=(1, 9000, 1)
logits [[ 3.9221766 -1.0208566  2.3221223 -9.060836 ]]
Iteration 500 of 1000: loss=1.39 " + "l1=1.22" + "l2=0.172 f=-0.983 shape=(1, 9000, 1)
logits [[ 3.4464667 -0.8386958  2.2269933 -8.7660055]]
Iteration 600 of 1000: loss=1.34 " + "l1=1.15" + "l2=0.188 f=-0.992 shape=(1, 9000, 1)
logits [[ 3.0587063 -0.684112   2.1161983 -8.460596 ]]
Iteration 700 of 1000: loss=1.29 " + "l1=1.08" + "l2=0.212 f=-0.995 shape=(1, 9000, 1)
logits [[ 2.6604064 -0.5152716  1.9830232 -8.10959  ]]
Iteration 800 of 1000: loss=1.23 " + "l1=0.993" + "l2=0.239 f=-1.01 shape=(1, 9000, 1)
logits [[ 2.1772304  -0.32120472  1.85413    -7.7527413 ]]
Iteration 900 of 1000: loss=1.17 " + "l1=0.913" + "l2=0.261 f=-1.02 shape=(1, 9000, 1)
logits [[ 1.7320049  -0.10972565  1.714375   -7.3983192 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=16.3 " + "l1=16.3" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[  5.81075   -1.901889   2.902851 -10.523585]]
Iteration 100 of 1000: loss=9.08 " + "l1=6.36" + "l2=2.72 f=-0.784 shape=(1, 9000, 1)
logits [[ 0.89478517  0.51135665  0.9096251  -5.452831  ]]
Iteration 200 of 1000: loss=6.35 " + "l1=2.85" + "l2=3.5 f=-0.519 shape=(1, 9000, 1)
logits [[ 0.14733274  0.2037277   0.21165569 -2.6371055 ]]
Iteration 300 of 1000: loss=4.23 " + "l1=0.403" + "l2=3.83 f=-0.345 shape=(1, 9000, 1)
logits [[-0.6390878  -0.10949621 -0.11918073 -0.5126048 ]]
Iteration 400 of 1000: loss=3.23 " + "l1=0.0381" + "l2=3.2 f=-0.334 shape=(1, 9000, 1)
logits [[-0.760619   -0.17810452 -0.18229146 -0.21615502]]
Iteration 500 of 1000: loss=2.75 " + "l1=0" + "l2=2.75 f=-0.337 shape=(1, 9000, 1)
logits [[-0.7184492  -0.21979976 -0.21598364 -0.19251853]]
Iteration 600 of 1000: loss=2.39 " + "l1=0" + "l2=2.39 f=-0.351 shape=(1, 9000, 1)
logits [[-0.7050756  -0.21820219 -0.26594514 -0.21430787]]
Iteration 700 of 1000: loss=2.11 " + "l1=0" + "l2=2.11 f=-0.363 shape=(1, 9000, 1)
logits [[-0.64166003 -0.270813   -0.29024744 -0.2507854 ]]
Iteration 800 of 1000: loss=1.9 " + "l1=0" + "l2=1.9 f=-0.378 shape=(1, 9000, 1)
logits [[-0.6061961  -0.3070596  -0.30893376 -0.28967044]]
Iteration 900 of 1000: loss=1.77 " + "l1=0" + "l2=1.77 f=-0.377 shape=(1, 9000, 1)
logits [[-0.53310764 -0.35494214 -0.33400407 -0.2844661 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=8.98 " + "l1=8.98" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[  5.81075   -1.901889   2.902851 -10.523585]]
Iteration 100 of 1000: loss=6.12 " + "l1=4.89" + "l2=1.23 f=-0.959 shape=(1, 9000, 1)
logits [[ 1.6591899   0.04333066  1.678749   -7.2186227 ]]
Iteration 200 of 1000: loss=5.15 " + "l1=3.69" + "l2=1.46 f=-0.831 shape=(1, 9000, 1)
logits [[ 0.94414294  0.51088834  0.95971876 -5.740515  ]]
Iteration 300 of 1000: loss=4.31 " + "l1=2.63" + "l2=1.68 f=-0.707 shape=(1, 9000, 1)
logits [[ 0.472001    0.46952912  0.5017488  -4.273154  ]]
Iteration 400 of 1000: loss=3.58 " + "l1=1.74" + "l2=1.84 f=-0.606 shape=(1, 9000, 1)
logits [[ 0.0867786   0.2173584   0.21883355 -2.9455678 ]]
Iteration 500 of 1000: loss=2.97 " + "l1=0.992" + "l2=1.97 f=-0.519 shape=(1, 9000, 1)
logits [[-0.4045714   0.04703075  0.03857234 -1.756894  ]]
Iteration 600 of 1000: loss=2.55 " + "l1=0.664" + "l2=1.89 f=-0.468 shape=(1, 9000, 1)
logits [[-0.49140754 -0.04810106 -0.07456885 -1.2561816 ]]
Iteration 700 of 1000: loss=2.18 " + "l1=0.249" + "l2=1.94 f=-0.397 shape=(1, 9000, 1)
logits [[-0.51768684 -0.20463298 -0.20771126 -0.6568748 ]]
Iteration 800 of 1000: loss=1.86 " + "l1=0.000758" + "l2=1.86 f=-0.36 shape=(1, 9000, 1)
logits [[-0.53227085 -0.30042654 -0.30526647 -0.3018044 ]]
Iteration 900 of 1000: loss=1.65 " + "l1=0" + "l2=1.65 f=-0.368 shape=(1, 9000, 1)
logits [[-0.45996043 -0.33771744 -0.3471901  -0.32530168]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.31 " + "l1=5.31" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[  5.81075   -1.901889   2.902851 -10.523585]]
Iteration 100 of 1000: loss=4.11 " + "l1=3.33" + "l2=0.776 f=-1.01 shape=(1, 9000, 1)
logits [[ 2.1778047  -0.36221778  2.1974237  -8.053129  ]]
Iteration 200 of 1000: loss=3.66 " + "l1=2.91" + "l2=0.75 f=-0.963 shape=(1, 9000, 1)
logits [[ 1.7076721e+00 -2.0662230e-03  1.6997846e+00 -7.2565961e+00]]
Iteration 300 of 1000: loss=3.31 " + "l1=2.54" + "l2=0.773 f=-0.931 shape=(1, 9000, 1)
logits [[ 1.2624693   0.29173267  1.2612932  -6.5390334 ]]
Iteration 400 of 1000: loss=2.95 " + "l1=2.09" + "l2=0.856 f=-0.877 shape=(1, 9000, 1)
logits [[ 0.7761065   0.46467412  0.8461683  -5.5929995 ]]
Iteration 500 of 1000: loss=2.54 " + "l1=1.62" + "l2=0.917 f=-0.788 shape=(1, 9000, 1)
logits [[ 0.34054676  0.4689346   0.51444    -4.4756656 ]]
Iteration 600 of 1000: loss=2.18 " + "l1=1.26" + "l2=0.925 f=-0.693 shape=(1, 9000, 1)
logits [[ 0.14281993  0.3143083   0.32477406 -3.5525558 ]]
Iteration 700 of 1000: loss=1.9 " + "l1=0.943" + "l2=0.959 f=-0.63 shape=(1, 9000, 1)
logits [[-0.16750924  0.18351008  0.18054144 -2.7167618 ]]
Iteration 800 of 1000: loss=1.67 " + "l1=0.669" + "l2=1 f=-0.561 shape=(1, 9000, 1)
logits [[-0.2732689   0.03143349  0.02483232 -2.0260708 ]]
Iteration 900 of 1000: loss=1.46 " + "l1=0.471" + "l2=0.991 f=-0.49 shape=(1, 9000, 1)
logits [[-0.25360826 -0.08573779 -0.08724418 -1.5336624 ]]
--- 301.03207635879517 seconds ---
Adv result:3
Loading record A01718
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0486 " + "l1=0.0486" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.5279992 -2.3290534  2.506173  -4.8538475]]
Iteration 100 of 1000: loss=0.0484 " + "l1=0.0481" + "l2=0.000204 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.505693  -2.3089268  2.4992595 -4.8439226]]
Iteration 200 of 1000: loss=0.0483 " + "l1=0.0481" + "l2=0.000182 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.5031242 -2.3058615  2.4987297 -4.8444734]]
Iteration 300 of 1000: loss=0.0482 " + "l1=0.048" + "l2=0.000221 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.4990442 -2.3015318  2.4979644 -4.844318 ]]
Iteration 400 of 1000: loss=0.0482 " + "l1=0.0479" + "l2=0.000233 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.4968588 -2.2973857  2.496832  -4.8450103]]
Iteration 500 of 1000: loss=0.0482 " + "l1=0.0479" + "l2=0.0003 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.4955752 -2.2934854  2.4955175 -4.8460097]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.486 " + "l1=0.486" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.5279992 -2.3290534  2.506173  -4.8538475]]
Iteration 100 of 1000: loss=0.47 " + "l1=0.462" + "l2=0.00809 f=-0.531 shape=(1, 9000, 1)
logits [[ 2.437992  -2.1790617  2.437901  -4.8222475]]
Iteration 200 of 1000: loss=0.464 " + "l1=0.454" + "l2=0.0105 f=-0.529 shape=(1, 9000, 1)
logits [[ 2.4139585 -2.123197   2.4139462 -4.822632 ]]
Iteration 300 of 1000: loss=0.46 " + "l1=0.447" + "l2=0.0126 f=-0.528 shape=(1, 9000, 1)
logits [[ 2.3928983 -2.0767996  2.3935812 -4.82354  ]]
Iteration 400 of 1000: loss=0.456 " + "l1=0.441" + "l2=0.0152 f=-0.527 shape=(1, 9000, 1)
logits [[ 2.373116  -2.0341663  2.3740203 -4.8228345]]
Iteration 500 of 1000: loss=0.453 " + "l1=0.435" + "l2=0.0179 f=-0.526 shape=(1, 9000, 1)
logits [[ 2.3557804 -1.9970468  2.3572414 -4.821095 ]]
Iteration 600 of 1000: loss=0.451 " + "l1=0.431" + "l2=0.0202 f=-0.525 shape=(1, 9000, 1)
logits [[ 2.3417006 -1.9671968  2.3429227 -4.8171244]]
Iteration 700 of 1000: loss=0.449 " + "l1=0.426" + "l2=0.0231 f=-0.523 shape=(1, 9000, 1)
logits [[ 2.3254902 -1.9337649  2.3268917 -4.8123026]]
Iteration 800 of 1000: loss=0.447 " + "l1=0.422" + "l2=0.025 f=-0.522 shape=(1, 9000, 1)
logits [[ 2.3155153 -1.9082947  2.3153179 -4.809331 ]]
Iteration 900 of 1000: loss=0.446 " + "l1=0.419" + "l2=0.0267 f=-0.52 shape=(1, 9000, 1)
logits [[ 2.302885  -1.8862151  2.3051243 -4.802296 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.86 " + "l1=4.86" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.5279992 -2.3290534  2.506173  -4.8538475]]
Iteration 100 of 1000: loss=3.59 " + "l1=3" + "l2=0.586 f=-0.469 shape=(1, 9000, 1)
logits [[ 1.8272653 -1.1525878  1.850895  -4.4005675]]
Iteration 200 of 1000: loss=3.05 " + "l1=2.19" + "l2=0.854 f=-0.472 shape=(1, 9000, 1)
logits [[ 1.4898845  -0.66316384  1.530188   -4.24553   ]]
Iteration 300 of 1000: loss=2.81 " + "l1=1.97" + "l2=0.846 f=-0.464 shape=(1, 9000, 1)
logits [[ 1.3821284  -0.53873813  1.4265554  -4.127176  ]]
Iteration 400 of 1000: loss=2.62 " + "l1=1.71" + "l2=0.904 f=-0.456 shape=(1, 9000, 1)
logits [[ 1.2453897  -0.39205968  1.3204572  -3.9982188 ]]
Iteration 500 of 1000: loss=2.44 " + "l1=1.46" + "l2=0.976 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.0355452  -0.22600973  1.2383754  -3.9290247 ]]
Iteration 600 of 1000: loss=2.17 " + "l1=1.18" + "l2=0.995 f=-0.456 shape=(1, 9000, 1)
logits [[ 0.84563327 -0.05941726  1.1188507  -3.7304113 ]]
Iteration 700 of 1000: loss=1.95 " + "l1=0.917" + "l2=1.03 f=-0.44 shape=(1, 9000, 1)
logits [[ 0.6832991  0.0638831  0.9807663 -3.4874334]]
Iteration 800 of 1000: loss=1.65 " + "l1=0.666" + "l2=0.981 f=-0.428 shape=(1, 9000, 1)
logits [[ 0.48822996  0.16990022  0.83542025 -3.2046947 ]]
Iteration 900 of 1000: loss=1.38 " + "l1=0.41" + "l2=0.967 f=-0.426 shape=(1, 9000, 1)
logits [[ 0.33125955  0.27610213  0.6858526  -2.9973042 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=48.6 " + "l1=48.6" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.5279992 -2.3290534  2.506173  -4.8538475]]
Iteration 100 of 1000: loss=9.13 " + "l1=0.0501" + "l2=9.08 f=-0.517 shape=(1, 9000, 1)
logits [[-0.15887459  0.56900024  0.57400787 -3.052073  ]]
Iteration 200 of 1000: loss=5.86 " + "l1=0" + "l2=5.86 f=-0.528 shape=(1, 9000, 1)
logits [[-0.18432805  0.527152    0.5172613  -2.9725778 ]]
Iteration 300 of 1000: loss=5.14 " + "l1=0.113" + "l2=5.03 f=-0.533 shape=(1, 9000, 1)
logits [[-0.16410244  0.51106465  0.5223564  -3.0017273 ]]
Iteration 400 of 1000: loss=4.75 " + "l1=0" + "l2=4.75 f=-0.537 shape=(1, 9000, 1)
logits [[-0.16447087  0.53784454  0.51843876 -3.039213  ]]
Iteration 500 of 1000: loss=4.51 " + "l1=0" + "l2=4.51 f=-0.539 shape=(1, 9000, 1)
logits [[-0.17192002  0.55243886  0.53148365 -3.0666096 ]]
Iteration 600 of 1000: loss=4.23 " + "l1=0.00043" + "l2=4.23 f=-0.539 shape=(1, 9000, 1)
logits [[-0.15852372  0.5450437   0.54508674 -3.0887213 ]]
Iteration 700 of 1000: loss=4.08 " + "l1=0" + "l2=4.08 f=-0.539 shape=(1, 9000, 1)
logits [[-0.16578156  0.562839    0.54244214 -3.0958169 ]]
Iteration 800 of 1000: loss=3.88 " + "l1=0" + "l2=3.88 f=-0.542 shape=(1, 9000, 1)
logits [[-0.15580314  0.5610768   0.55538374 -3.1289363 ]]
Iteration 900 of 1000: loss=3.78 " + "l1=0" + "l2=3.78 f=-0.544 shape=(1, 9000, 1)
logits [[-0.1584042  0.5681562  0.5566031 -3.1405082]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=26.7 " + "l1=26.7" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.5279992 -2.3290534  2.506173  -4.8538475]]
Iteration 100 of 1000: loss=9.17 " + "l1=3.62" + "l2=5.55 f=-0.478 shape=(1, 9000, 1)
logits [[ 0.40885347  0.197555    0.8559875  -3.3759856 ]]
Iteration 200 of 1000: loss=5 " + "l1=0.0289" + "l2=4.97 f=-0.539 shape=(1, 9000, 1)
logits [[-0.10426004  0.54310286  0.5483549  -3.1422668 ]]
Iteration 300 of 1000: loss=4.42 " + "l1=0" + "l2=4.42 f=-0.538 shape=(1, 9000, 1)
logits [[-0.08641019  0.5422387   0.53842014 -3.1447473 ]]
Iteration 400 of 1000: loss=4.11 " + "l1=0.0113" + "l2=4.1 f=-0.532 shape=(1, 9000, 1)
logits [[-0.04597116  0.5533199   0.55537856 -3.1907365 ]]
Iteration 500 of 1000: loss=3.93 " + "l1=0" + "l2=3.93 f=-0.53 shape=(1, 9000, 1)
logits [[-0.03446166  0.5609661   0.5595532  -3.20553   ]]
Iteration 600 of 1000: loss=3.79 " + "l1=0.0201" + "l2=3.76 f=-0.528 shape=(1, 9000, 1)
logits [[-0.04980645  0.5584016   0.5620615  -3.1842039 ]]
Iteration 700 of 1000: loss=3.69 " + "l1=0" + "l2=3.69 f=-0.529 shape=(1, 9000, 1)
logits [[-0.08403036  0.5731494   0.55603486 -3.1601417 ]]
Iteration 800 of 1000: loss=3.6 " + "l1=0" + "l2=3.6 f=-0.532 shape=(1, 9000, 1)
logits [[-0.11450446  0.5889599   0.56515944 -3.1691732 ]]
Iteration 900 of 1000: loss=3.47 " + "l1=0" + "l2=3.47 f=-0.538 shape=(1, 9000, 1)
logits [[-0.13411936  0.590285    0.5730502  -3.1807039 ]]
--- 285.3388292789459 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.000218 " + "l1=0.000218" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.5279992 -2.3290534  2.506173  -4.8538475]]
Iteration 100 of 1000: loss=0.000119 " + "l1=2.96e-06" + "l2=0.000116 f=-0.538 shape=(1, 9000, 1)
logits [[ 2.5107865 -2.3299491  2.510491  -4.8445067]]
Iteration 200 of 1000: loss=7.73e-05 " + "l1=4.86e-07" + "l2=7.69e-05 f=-0.538 shape=(1, 9000, 1)
logits [[ 2.510826  -2.3292255  2.5107775 -4.845882 ]]
Iteration 300 of 1000: loss=7.08e-05 " + "l1=0" + "l2=7.08e-05 f=-0.538 shape=(1, 9000, 1)
logits [[ 2.5109382 -2.3286433  2.5109396 -4.8469415]]
Iteration 400 of 1000: loss=7.93e-05 " + "l1=1.15e-06" + "l2=7.81e-05 f=-0.538 shape=(1, 9000, 1)
logits [[ 2.511148  -2.3281612  2.5110326 -4.847875 ]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.000109 " + "l1=0.000109" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.5279992 -2.3290534  2.506173  -4.8538475]]
Iteration 100 of 1000: loss=0.000102 " + "l1=2.63e-05" + "l2=7.54e-05 f=-0.538 shape=(1, 9000, 1)
logits [[ 2.514908  -2.3298972  2.5096416 -4.8467307]]
Iteration 200 of 1000: loss=7.41e-05 " + "l1=3.59e-05" + "l2=3.82e-05 f=-0.538 shape=(1, 9000, 1)
logits [[ 2.516549  -2.3292356  2.509378  -4.8486614]]
Iteration 300 of 1000: loss=9.02e-05 " + "l1=3.33e-05" + "l2=5.69e-05 f=-0.538 shape=(1, 9000, 1)
logits [[ 2.5161655 -2.328858   2.5095055 -4.8490663]]
const [0.0025]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.46e-05 " + "l1=5.46e-05" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.5279992 -2.3290534  2.506173  -4.8538475]]
Iteration 100 of 1000: loss=7.63e-05 " + "l1=2.09e-05" + "l2=5.53e-05 f=-0.538 shape=(1, 9000, 1)
logits [[ 2.5174375 -2.329823   2.5090659 -4.848157 ]]
const [0.00125]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.73e-05 " + "l1=2.73e-05" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.5279992 -2.3290534  2.506173  -4.8538475]]
Iteration 100 of 1000: loss=5.53e-05 " + "l1=1.31e-05" + "l2=4.22e-05 f=-0.538 shape=(1, 9000, 1)
logits [[ 2.5191762 -2.3297653  2.5086763 -4.8490443]]
const [0.000625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.36e-05 " + "l1=1.36e-05" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.5279992 -2.3290534  2.506173  -4.8538475]]
Iteration 100 of 1000: loss=3.92e-05 " + "l1=7.68e-06" + "l2=3.15e-05 f=-0.538 shape=(1, 9000, 1)
logits [[ 2.5205867 -2.3297     2.5083065 -4.8497596]]
--- 89.88685917854309 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0738 " + "l1=0.0738" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.5279992 -2.3290534  2.506173  -4.8538475]]
Iteration 100 of 1000: loss=0.0735 " + "l1=0.0732" + "l2=0.00029 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.5015144 -2.3258317  2.501395  -4.8227463]]
Iteration 200 of 1000: loss=0.0735 " + "l1=0.0732" + "l2=0.000227 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.501191  -2.324931   2.5011117 -4.8229747]]
Iteration 300 of 1000: loss=0.0734 " + "l1=0.0732" + "l2=0.000225 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.5001652 -2.3240368  2.5001452 -4.821405 ]]
Iteration 400 of 1000: loss=0.0735 " + "l1=0.0732" + "l2=0.000278 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.4989872 -2.3233933  2.499098  -4.819263 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.738 " + "l1=0.738" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.5279992 -2.3290534  2.506173  -4.8538475]]
Iteration 100 of 1000: loss=0.722 " + "l1=0.713" + "l2=0.00893 f=-0.527 shape=(1, 9000, 1)
logits [[ 2.4207654 -2.2984092  2.4511266 -4.679756 ]]
Iteration 200 of 1000: loss=0.718 " + "l1=0.706" + "l2=0.0117 f=-0.521 shape=(1, 9000, 1)
logits [[ 2.3968017 -2.2851243  2.4304678 -4.6279063]]
Iteration 300 of 1000: loss=0.713 " + "l1=0.699" + "l2=0.0139 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.3787594 -2.276195   2.410702  -4.582155 ]]
Iteration 400 of 1000: loss=0.709 " + "l1=0.693" + "l2=0.016 f=-0.513 shape=(1, 9000, 1)
logits [[ 2.3636014 -2.2637026  2.3885279 -4.5399666]]
Iteration 500 of 1000: loss=0.705 " + "l1=0.687" + "l2=0.0176 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.353297  -2.2551534  2.3680449 -4.502478 ]]
Iteration 600 of 1000: loss=0.7 " + "l1=0.681" + "l2=0.0193 f=-0.505 shape=(1, 9000, 1)
logits [[ 2.3432736 -2.2478576  2.3466136 -4.4638853]]
Iteration 700 of 1000: loss=0.696 " + "l1=0.674" + "l2=0.0216 f=-0.503 shape=(1, 9000, 1)
logits [[ 2.3215864 -2.2415266  2.3243132 -4.4154587]]
Iteration 800 of 1000: loss=0.691 " + "l1=0.666" + "l2=0.0246 f=-0.5 shape=(1, 9000, 1)
logits [[ 2.2973309 -2.2334673  2.2991934 -4.3619647]]
Iteration 900 of 1000: loss=0.685 " + "l1=0.658" + "l2=0.0276 f=-0.497 shape=(1, 9000, 1)
logits [[ 2.2714956 -2.2271364  2.2725465 -4.305819 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.38 " + "l1=7.38" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.5279992 -2.3290534  2.506173  -4.8538475]]
Iteration 100 of 1000: loss=5.37 " + "l1=4.2" + "l2=1.16 f=-0.356 shape=(1, 9000, 1)
logits [[ 1.3390452 -1.907164   1.672468  -2.5280828]]
Iteration 200 of 1000: loss=4.05 " + "l1=2.18" + "l2=1.87 f=-0.229 shape=(1, 9000, 1)
logits [[ 0.8965329 -1.7635485  1.0647875 -1.1154658]]
Iteration 300 of 1000: loss=3.43 " + "l1=1.35" + "l2=2.08 f=-0.201 shape=(1, 9000, 1)
logits [[ 0.643379  -1.5899663  0.7476181 -0.6065893]]
Iteration 400 of 1000: loss=2.75 " + "l1=0.559" + "l2=2.19 f=-0.187 shape=(1, 9000, 1)
logits [[ 0.3527198  -1.4342875   0.44692853 -0.11215778]]
Iteration 500 of 1000: loss=2.03 " + "l1=0.0424" + "l2=1.99 f=-0.186 shape=(1, 9000, 1)
logits [[ 0.11952895 -1.4516642   0.31443918  0.2719913 ]]
Iteration 600 of 1000: loss=1.64 " + "l1=0.0151" + "l2=1.62 f=-0.195 shape=(1, 9000, 1)
logits [[ 0.05825701 -1.4873292   0.33136198  0.31626758]]
Iteration 700 of 1000: loss=1.42 " + "l1=0" + "l2=1.42 f=-0.2 shape=(1, 9000, 1)
logits [[ 0.0320424  -1.5120589   0.33848998  0.34276736]]
Iteration 800 of 1000: loss=1.28 " + "l1=0.000252" + "l2=1.28 f=-0.203 shape=(1, 9000, 1)
logits [[ 0.01185944 -1.5171114   0.3462133   0.3459614 ]]
Iteration 900 of 1000: loss=1.19 " + "l1=0" + "l2=1.19 f=-0.207 shape=(1, 9000, 1)
logits [[-0.01967779 -1.5116515   0.34522316  0.35830235]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.06 " + "l1=4.06" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.5279992 -2.3290534  2.506173  -4.8538475]]
Iteration 100 of 1000: loss=3.48 " + "l1=3.08" + "l2=0.405 f=-0.459 shape=(1, 9000, 1)
logits [[ 1.6889024 -2.0134377  2.0396128 -3.5526326]]
Iteration 200 of 1000: loss=3.16 " + "l1=2.56" + "l2=0.601 f=-0.384 shape=(1, 9000, 1)
logits [[ 1.5197529 -1.9341776  1.7700162 -2.8908923]]
Iteration 300 of 1000: loss=2.81 " + "l1=1.94" + "l2=0.874 f=-0.296 shape=(1, 9000, 1)
logits [[ 1.3122383 -1.8703059  1.4506109 -2.076688 ]]
Iteration 400 of 1000: loss=2.56 " + "l1=1.66" + "l2=0.906 f=-0.262 shape=(1, 9000, 1)
logits [[ 1.1461605 -1.7547812  1.28505   -1.7260079]]
Iteration 500 of 1000: loss=2.36 " + "l1=1.4" + "l2=0.96 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.0224097 -1.72274    1.1364565 -1.403287 ]]
Iteration 600 of 1000: loss=2.01 " + "l1=1.01" + "l2=1 f=-0.222 shape=(1, 9000, 1)
logits [[ 0.81954265 -1.6871837   0.9070468  -0.92554575]]
Iteration 700 of 1000: loss=1.65 " + "l1=0.709" + "l2=0.944 f=-0.228 shape=(1, 9000, 1)
logits [[ 0.5220875  -1.5988017   0.72648495 -0.5623393 ]]
Iteration 800 of 1000: loss=1.27 " + "l1=0.374" + "l2=0.901 f=-0.227 shape=(1, 9000, 1)
logits [[ 0.31107047 -1.6152133   0.53724295 -0.14200202]]
Iteration 900 of 1000: loss=1.06 " + "l1=0.158" + "l2=0.901 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.14732514 -1.6282929   0.42136717  0.13417816]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.4 " + "l1=2.4" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.5279992 -2.3290534  2.506173  -4.8538475]]
Iteration 100 of 1000: loss=2.23 " + "l1=2.12" + "l2=0.109 f=-0.495 shape=(1, 9000, 1)
logits [[ 2.1397126 -2.184668   2.2937512 -4.2302165]]
Iteration 200 of 1000: loss=2.14 " + "l1=1.96" + "l2=0.186 f=-0.468 shape=(1, 9000, 1)
logits [[ 1.955096  -2.0870647  2.1410494 -3.881374 ]]
Iteration 300 of 1000: loss=2.06 " + "l1=1.82" + "l2=0.247 f=-0.44 shape=(1, 9000, 1)
logits [[ 1.8404135 -2.0369542  2.0101943 -3.5745215]]
Iteration 400 of 1000: loss=1.98 " + "l1=1.69" + "l2=0.296 f=-0.412 shape=(1, 9000, 1)
logits [[ 1.7560952 -1.9857641  1.8876386 -3.3053312]]
Iteration 500 of 1000: loss=1.89 " + "l1=1.54" + "l2=0.35 f=-0.378 shape=(1, 9000, 1)
logits [[ 1.6854483 -1.9423268  1.7470093 -3.0026236]]
Iteration 600 of 1000: loss=1.78 " + "l1=1.39" + "l2=0.392 f=-0.344 shape=(1, 9000, 1)
logits [[ 1.5732303 -1.9041563  1.612701  -2.6581695]]
Iteration 700 of 1000: loss=1.62 " + "l1=1.21" + "l2=0.406 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.4685465 -1.9041958  1.4706855 -2.25593  ]]
Iteration 800 of 1000: loss=1.45 " + "l1=1.06" + "l2=0.398 f=-0.273 shape=(1, 9000, 1)
logits [[ 1.359621  -1.9247695  1.3620441 -1.8870689]]
Iteration 900 of 1000: loss=1.33 " + "l1=0.944" + "l2=0.389 f=-0.255 shape=(1, 9000, 1)
logits [[ 1.2741728 -1.948796   1.2782187 -1.6248597]]
--- 286.4615776538849 seconds ---
Adv result:3
Loading model
Loading ground truth file
Attack diff is running...
Loading record A02455
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0596 " + "l1=0.0596" + "l2=0 f=-0.412 shape=(1, 9000, 1)
logits [[ 3.3045857 -2.6538186  2.5397558 -4.838398 ]]
Iteration 100 of 1000: loss=0.0593 " + "l1=0.059" + "l2=0.000281 f=-0.409 shape=(1, 9000, 1)
logits [[ 3.2679906 -2.6324685  2.5252497 -4.7982955]]
Iteration 200 of 1000: loss=0.0592 " + "l1=0.059" + "l2=0.000263 f=-0.409 shape=(1, 9000, 1)
logits [[ 3.2659428 -2.6292858  2.5230575 -4.795527 ]]
Iteration 300 of 1000: loss=0.0592 " + "l1=0.0589" + "l2=0.000311 f=-0.409 shape=(1, 9000, 1)
logits [[ 3.2619212 -2.6261086  2.5209043 -4.790996 ]]
Iteration 400 of 1000: loss=0.0592 " + "l1=0.0588" + "l2=0.000362 f=-0.408 shape=(1, 9000, 1)
logits [[ 3.2579277 -2.6234612  2.5191197 -4.786604 ]]
Iteration 500 of 1000: loss=0.0591 " + "l1=0.0588" + "l2=0.000386 f=-0.408 shape=(1, 9000, 1)
logits [[ 3.2541988 -2.6215603  2.5178275 -4.782519 ]]
Iteration 600 of 1000: loss=0.0592 " + "l1=0.0587" + "l2=0.00046 f=-0.408 shape=(1, 9000, 1)
logits [[ 3.2503114 -2.6196582  2.5166042 -4.778371 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.596 " + "l1=0.596" + "l2=0 f=-0.412 shape=(1, 9000, 1)
logits [[ 3.3045857 -2.6538186  2.5397558 -4.838398 ]]
Iteration 100 of 1000: loss=0.568 " + "l1=0.551" + "l2=0.0172 f=-0.394 shape=(1, 9000, 1)
logits [[ 3.033732  -2.475157   2.4215555 -4.5579348]]
Iteration 200 of 1000: loss=0.559 " + "l1=0.53" + "l2=0.0284 f=-0.386 shape=(1, 9000, 1)
logits [[ 2.9262393 -2.378586   2.363802  -4.455398 ]]
Iteration 300 of 1000: loss=0.552 " + "l1=0.518" + "l2=0.0337 f=-0.382 shape=(1, 9000, 1)
logits [[ 2.8558612 -2.3234682  2.331578  -4.391652 ]]
Iteration 400 of 1000: loss=0.545 " + "l1=0.502" + "l2=0.0427 f=-0.378 shape=(1, 9000, 1)
logits [[ 2.7713544 -2.2526321  2.2927704 -4.3247237]]
Iteration 500 of 1000: loss=0.54 " + "l1=0.493" + "l2=0.0464 f=-0.377 shape=(1, 9000, 1)
logits [[ 2.7130582 -2.218832   2.2732315 -4.274112 ]]
Iteration 600 of 1000: loss=0.535 " + "l1=0.486" + "l2=0.0492 f=-0.376 shape=(1, 9000, 1)
logits [[ 2.6652908 -2.1933794  2.2576735 -4.2326956]]
Iteration 700 of 1000: loss=0.531 " + "l1=0.479" + "l2=0.052 f=-0.374 shape=(1, 9000, 1)
logits [[ 2.6179533 -2.1684844  2.2410603 -4.1855054]]
Iteration 800 of 1000: loss=0.525 " + "l1=0.469" + "l2=0.0559 f=-0.371 shape=(1, 9000, 1)
logits [[ 2.5552416 -2.1378155  2.2197134 -4.122846 ]]
Iteration 900 of 1000: loss=0.519 " + "l1=0.46" + "l2=0.0591 f=-0.371 shape=(1, 9000, 1)
logits [[ 2.4926698 -2.1105988  2.1979604 -4.062621 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.96 " + "l1=5.96" + "l2=0 f=-0.412 shape=(1, 9000, 1)
logits [[ 3.3045857 -2.6538186  2.5397558 -4.838398 ]]
Iteration 100 of 1000: loss=3.82 " + "l1=3.08" + "l2=0.74 f=-0.324 shape=(1, 9000, 1)
logits [[ 1.6827266 -1.3903298  1.6875311 -3.277728 ]]
Iteration 200 of 1000: loss=3.49 " + "l1=2.69" + "l2=0.793 f=-0.304 shape=(1, 9000, 1)
logits [[ 1.4873893 -1.2051604  1.4826769 -2.9822142]]
Iteration 300 of 1000: loss=3.12 " + "l1=2.25" + "l2=0.869 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.2468611 -1.002358   1.2504143 -2.6185315]]
Iteration 400 of 1000: loss=2.62 " + "l1=1.67" + "l2=0.95 f=-0.261 shape=(1, 9000, 1)
logits [[ 0.9157743  -0.7457609   0.92330474 -2.1355188 ]]
Iteration 500 of 1000: loss=2.21 " + "l1=1.19" + "l2=1.02 f=-0.229 shape=(1, 9000, 1)
logits [[ 0.63481534 -0.5110924   0.68036157 -1.7195038 ]]
Iteration 600 of 1000: loss=1.9 " + "l1=0.816" + "l2=1.09 f=-0.21 shape=(1, 9000, 1)
logits [[ 0.4129178  -0.3212883   0.49507862 -1.4284152 ]]
Iteration 700 of 1000: loss=1.71 " + "l1=0.588" + "l2=1.12 f=-0.208 shape=(1, 9000, 1)
logits [[ 0.27428105 -0.2018363   0.38652188 -1.2922133 ]]
Iteration 800 of 1000: loss=1.53 " + "l1=0.41" + "l2=1.12 f=-0.202 shape=(1, 9000, 1)
logits [[ 0.18585595 -0.10754455  0.30287513 -1.1898931 ]]
Iteration 900 of 1000: loss=1.41 " + "l1=0.313" + "l2=1.1 f=-0.195 shape=(1, 9000, 1)
logits [[ 0.1510219 -0.0576248  0.2549392 -1.1272442]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=59.6 " + "l1=59.6" + "l2=0 f=-0.412 shape=(1, 9000, 1)
logits [[ 3.3045857 -2.6538186  2.5397558 -4.838398 ]]
Iteration 100 of 1000: loss=11.3 " + "l1=0.259" + "l2=11.1 f=-0.206 shape=(1, 9000, 1)
logits [[-0.34658495  0.26886305  0.2947864  -1.0415133 ]]
Iteration 200 of 1000: loss=7.13 " + "l1=0" + "l2=7.13 f=-0.207 shape=(1, 9000, 1)
logits [[-0.25153548  0.26414776  0.25699463 -1.0966318 ]]
Iteration 300 of 1000: loss=6.09 " + "l1=0.14" + "l2=5.95 f=-0.201 shape=(1, 9000, 1)
logits [[-0.22910511  0.2319823   0.24600945 -1.0547204 ]]
Iteration 400 of 1000: loss=5.54 " + "l1=0" + "l2=5.54 f=-0.204 shape=(1, 9000, 1)
logits [[-0.2790098   0.23772563  0.2213306  -0.9963879 ]]
Iteration 500 of 1000: loss=5.2 " + "l1=0" + "l2=5.2 f=-0.207 shape=(1, 9000, 1)
logits [[-0.2966016   0.22779354  0.21884692 -0.9760962 ]]
Iteration 600 of 1000: loss=4.96 " + "l1=0" + "l2=4.96 f=-0.204 shape=(1, 9000, 1)
logits [[-0.30710223  0.21841598  0.20727037 -0.9365146 ]]
Iteration 700 of 1000: loss=4.81 " + "l1=0.102" + "l2=4.71 f=-0.204 shape=(1, 9000, 1)
logits [[-0.30491367  0.19994663  0.21018948 -0.9200524 ]]
Iteration 800 of 1000: loss=4.56 " + "l1=0" + "l2=4.56 f=-0.203 shape=(1, 9000, 1)
logits [[-0.32461366  0.20228308  0.20050295 -0.8919236 ]]
Iteration 900 of 1000: loss=4.43 " + "l1=0.0306" + "l2=4.4 f=-0.203 shape=(1, 9000, 1)
logits [[-0.3362563   0.19535537  0.19841866 -0.8697235 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=32.8 " + "l1=32.8" + "l2=0 f=-0.412 shape=(1, 9000, 1)
logits [[ 3.3045857 -2.6538186  2.5397558 -4.838398 ]]
Iteration 100 of 1000: loss=10.7 " + "l1=5.22" + "l2=5.51 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.5012735  -0.28376117  0.66457576 -1.8056939 ]]
Iteration 200 of 1000: loss=6.04 " + "l1=0" + "l2=6.04 f=-0.211 shape=(1, 9000, 1)
logits [[-0.17622763  0.23523667  0.2323085  -1.1351911 ]]
Iteration 300 of 1000: loss=5.17 " + "l1=0.109" + "l2=5.06 f=-0.203 shape=(1, 9000, 1)
logits [[-0.21238472  0.21095596  0.2306972  -1.0397341 ]]
Iteration 400 of 1000: loss=4.65 " + "l1=0.032" + "l2=4.62 f=-0.197 shape=(1, 9000, 1)
logits [[-0.2531672   0.19505279  0.20087178 -0.931747  ]]
Iteration 500 of 1000: loss=4.35 " + "l1=0" + "l2=4.35 f=-0.204 shape=(1, 9000, 1)
logits [[-0.31528983  0.18863073  0.18362603 -0.8735256 ]]
Iteration 600 of 1000: loss=4.12 " + "l1=0" + "l2=4.12 f=-0.214 shape=(1, 9000, 1)
logits [[-0.38664103  0.18026018  0.16693844 -0.8149433 ]]
Iteration 700 of 1000: loss=3.92 " + "l1=0" + "l2=3.92 f=-0.216 shape=(1, 9000, 1)
logits [[-0.41595525  0.17148717  0.15494843 -0.7753988 ]]
Iteration 800 of 1000: loss=3.68 " + "l1=0" + "l2=3.68 f=-0.219 shape=(1, 9000, 1)
logits [[-0.420401    0.15246546  0.14064883 -0.7499945 ]]
Iteration 900 of 1000: loss=3.5 " + "l1=0.0643" + "l2=3.43 f=-0.22 shape=(1, 9000, 1)
logits [[-0.4109307   0.12729898  0.1389902  -0.7341608 ]]
--- 265.7186608314514 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00765 " + "l1=0.00765" + "l2=0 f=-0.412 shape=(1, 9000, 1)
logits [[ 3.3045857 -2.6538186  2.5397558 -4.838398 ]]
Iteration 100 of 1000: loss=0.00754 " + "l1=0.00738" + "l2=0.000161 f=-0.413 shape=(1, 9000, 1)
logits [[ 3.281039  -2.65238    2.5431337 -4.822036 ]]
Iteration 200 of 1000: loss=0.00752 " + "l1=0.00739" + "l2=0.000121 f=-0.413 shape=(1, 9000, 1)
logits [[ 3.2828927 -2.6527278  2.543502  -4.823977 ]]
Iteration 300 of 1000: loss=0.0075 " + "l1=0.00737" + "l2=0.000126 f=-0.413 shape=(1, 9000, 1)
logits [[ 3.2813768 -2.6528232  2.5440989 -4.8234377]]
Iteration 400 of 1000: loss=0.00753 " + "l1=0.00735" + "l2=0.000179 f=-0.413 shape=(1, 9000, 1)
logits [[ 3.2793534 -2.6528304  2.5446568 -4.822428 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0765 " + "l1=0.0765" + "l2=0 f=-0.412 shape=(1, 9000, 1)
logits [[ 3.3045857 -2.6538186  2.5397558 -4.838398 ]]
Iteration 100 of 1000: loss=0.0652 " + "l1=0.0581" + "l2=0.0071 f=-0.417 shape=(1, 9000, 1)
logits [[ 3.1446197 -2.643666   2.5640566 -4.731093 ]]
Iteration 200 of 1000: loss=0.0621 " + "l1=0.0529" + "l2=0.0091 f=-0.419 shape=(1, 9000, 1)
logits [[ 3.1032724 -2.6406329  2.5737839 -4.7114067]]
Iteration 300 of 1000: loss=0.0596 " + "l1=0.0491" + "l2=0.0104 f=-0.421 shape=(1, 9000, 1)
logits [[ 3.0738435 -2.640765   2.582489  -4.6993012]]
Iteration 400 of 1000: loss=0.0572 " + "l1=0.0459" + "l2=0.0113 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.0485346 -2.6411152  2.5895681 -4.688241 ]]
Iteration 500 of 1000: loss=0.055 " + "l1=0.0428" + "l2=0.0122 f=-0.424 shape=(1, 9000, 1)
logits [[ 3.0236678 -2.6409063  2.5957909 -4.6752048]]
Iteration 600 of 1000: loss=0.053 " + "l1=0.0401" + "l2=0.013 f=-0.424 shape=(1, 9000, 1)
logits [[ 2.9997926 -2.6384184  2.5992575 -4.6580873]]
Iteration 700 of 1000: loss=0.0512 " + "l1=0.0374" + "l2=0.0138 f=-0.425 shape=(1, 9000, 1)
logits [[ 2.976659  -2.637175   2.6027498 -4.641712 ]]
Iteration 800 of 1000: loss=0.0492 " + "l1=0.0347" + "l2=0.0145 f=-0.425 shape=(1, 9000, 1)
logits [[ 2.9546616 -2.6364317  2.6074586 -4.626913 ]]
Iteration 900 of 1000: loss=0.0473 " + "l1=0.0323" + "l2=0.015 f=-0.425 shape=(1, 9000, 1)
logits [[ 2.9350443 -2.6347365  2.611602  -4.6135783]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.765 " + "l1=0.765" + "l2=0 f=-0.412 shape=(1, 9000, 1)
logits [[ 3.3045857 -2.6538186  2.5397558 -4.838398 ]]
Iteration 100 of 1000: loss=0.121 " + "l1=0.000778" + "l2=0.12 f=-0.431 shape=(1, 9000, 1)
logits [[ 2.651291  -2.6191804  2.6505132 -4.4080496]]
Iteration 200 of 1000: loss=0.101 " + "l1=0.00781" + "l2=0.0933 f=-0.432 shape=(1, 9000, 1)
logits [[ 2.6624792 -2.6176245  2.6546652 -4.4292326]]
Iteration 300 of 1000: loss=0.0817 " + "l1=0" + "l2=0.0817 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.6548576 -2.6183197  2.6603625 -4.4293303]]
Iteration 400 of 1000: loss=0.0732 " + "l1=0" + "l2=0.0732 f=-0.432 shape=(1, 9000, 1)
logits [[ 2.649709  -2.6154048  2.6585994 -4.4196596]]
Iteration 500 of 1000: loss=0.0656 " + "l1=0" + "l2=0.0656 f=-0.43 shape=(1, 9000, 1)
logits [[ 2.6435084 -2.611491   2.655488  -4.4066787]]
Iteration 600 of 1000: loss=0.059 " + "l1=0" + "l2=0.059 f=-0.428 shape=(1, 9000, 1)
logits [[ 2.643718  -2.6092436  2.6526442 -4.399532 ]]
Iteration 700 of 1000: loss=0.0528 " + "l1=0" + "l2=0.0528 f=-0.426 shape=(1, 9000, 1)
logits [[ 2.6460233 -2.6077273  2.6496186 -4.3938723]]
Iteration 800 of 1000: loss=0.0479 " + "l1=0.000247" + "l2=0.0477 f=-0.425 shape=(1, 9000, 1)
logits [[ 2.6460803 -2.6066322  2.6458335 -4.3861604]]
Iteration 900 of 1000: loss=0.0466 " + "l1=0" + "l2=0.0466 f=-0.424 shape=(1, 9000, 1)
logits [[ 2.6319532 -2.6035776  2.6436658 -4.368689 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.421 " + "l1=0.421" + "l2=0 f=-0.412 shape=(1, 9000, 1)
logits [[ 3.3045857 -2.6538186  2.5397558 -4.838398 ]]
Iteration 100 of 1000: loss=0.122 " + "l1=0.00114" + "l2=0.121 f=-0.432 shape=(1, 9000, 1)
logits [[ 2.655546  -2.6196404  2.6534688 -4.4170837]]
Iteration 200 of 1000: loss=0.0943 " + "l1=0" + "l2=0.0943 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.6570039 -2.618395   2.6605225 -4.4308853]]
Iteration 300 of 1000: loss=0.0789 " + "l1=0" + "l2=0.0789 f=-0.432 shape=(1, 9000, 1)
logits [[ 2.6620603 -2.6178777  2.6637993 -4.437913 ]]
Iteration 400 of 1000: loss=0.0687 " + "l1=0" + "l2=0.0687 f=-0.431 shape=(1, 9000, 1)
logits [[ 2.6560826 -2.6140313  2.6598835 -4.426687 ]]
Iteration 500 of 1000: loss=0.0602 " + "l1=0" + "l2=0.0602 f=-0.429 shape=(1, 9000, 1)
logits [[ 2.6571577 -2.6148334  2.6598313 -4.419722 ]]
Iteration 600 of 1000: loss=0.0542 " + "l1=0.000997" + "l2=0.0532 f=-0.428 shape=(1, 9000, 1)
logits [[ 2.6578135 -2.6119974  2.6560001 -4.4135075]]
Iteration 700 of 1000: loss=0.0491 " + "l1=0" + "l2=0.0491 f=-0.427 shape=(1, 9000, 1)
logits [[ 2.6482558 -2.6065679  2.6502874 -4.398543 ]]
Iteration 800 of 1000: loss=0.0463 " + "l1=0.00228" + "l2=0.044 f=-0.425 shape=(1, 9000, 1)
logits [[ 2.6511564 -2.6052632  2.647017  -4.3944483]]
Iteration 900 of 1000: loss=0.0424 " + "l1=0.00135" + "l2=0.041 f=-0.425 shape=(1, 9000, 1)
logits [[ 2.6474147 -2.6044867  2.6449554 -4.3864746]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.249 " + "l1=0.249" + "l2=0 f=-0.412 shape=(1, 9000, 1)
logits [[ 3.3045857 -2.6538186  2.5397558 -4.838398 ]]
Iteration 100 of 1000: loss=0.134 " + "l1=0.0696" + "l2=0.0648 f=-0.427 shape=(1, 9000, 1)
logits [[ 2.8356223 -2.6304944  2.6214252 -4.5327525]]
Iteration 200 of 1000: loss=0.101 " + "l1=0.0109" + "l2=0.0901 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.6899028 -2.6217341  2.6563513 -4.456838 ]]
Iteration 300 of 1000: loss=0.0808 " + "l1=0.000528" + "l2=0.0803 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.6667316 -2.6209188  2.6651077 -4.4434013]]
Iteration 400 of 1000: loss=0.0683 " + "l1=0.0019" + "l2=0.0664 f=-0.432 shape=(1, 9000, 1)
logits [[ 2.6702585 -2.6188984  2.6643972 -4.4429293]]
Iteration 500 of 1000: loss=0.0594 " + "l1=0" + "l2=0.0594 f=-0.43 shape=(1, 9000, 1)
logits [[ 2.6594222 -2.6151178  2.663278  -4.426002 ]]
Iteration 600 of 1000: loss=0.053 " + "l1=0.0015" + "l2=0.0515 f=-0.428 shape=(1, 9000, 1)
logits [[ 2.6618233 -2.6101491  2.6571927 -4.4204383]]
Iteration 700 of 1000: loss=0.0474 " + "l1=0.000715" + "l2=0.0467 f=-0.427 shape=(1, 9000, 1)
logits [[ 2.6557891 -2.6074522  2.6535902 -4.409321 ]]
Iteration 800 of 1000: loss=0.0431 " + "l1=0.00045" + "l2=0.0426 f=-0.426 shape=(1, 9000, 1)
logits [[ 2.6526313 -2.6060152  2.651246  -4.4009175]]
Iteration 900 of 1000: loss=0.0395 " + "l1=0" + "l2=0.0395 f=-0.425 shape=(1, 9000, 1)
logits [[ 2.6483724 -2.6068966  2.6497555 -4.3914056]]
--- 256.2990713119507 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0814 " + "l1=0.0814" + "l2=0 f=-0.412 shape=(1, 9000, 1)
logits [[ 3.3045857 -2.6538186  2.5397558 -4.838398 ]]
Iteration 100 of 1000: loss=0.0808 " + "l1=0.0803" + "l2=0.0005 f=-0.408 shape=(1, 9000, 1)
logits [[ 3.255848  -2.6339972  2.5218582 -4.7757215]]
Iteration 200 of 1000: loss=0.0807 " + "l1=0.0802" + "l2=0.000487 f=-0.407 shape=(1, 9000, 1)
logits [[ 3.2511961 -2.6308293  2.5188663 -4.769188 ]]
Iteration 300 of 1000: loss=0.0806 " + "l1=0.08" + "l2=0.00054 f=-0.407 shape=(1, 9000, 1)
logits [[ 3.2444186 -2.6274517  2.5155544 -4.759959 ]]
Iteration 400 of 1000: loss=0.0805 " + "l1=0.0799" + "l2=0.000619 f=-0.406 shape=(1, 9000, 1)
logits [[ 3.2375996 -2.6242557  2.5124068 -4.7504897]]
Iteration 500 of 1000: loss=0.0804 " + "l1=0.0797" + "l2=0.000714 f=-0.406 shape=(1, 9000, 1)
logits [[ 3.231232  -2.6217866  2.5097778 -4.7415433]]
Iteration 600 of 1000: loss=0.0805 " + "l1=0.0796" + "l2=0.000894 f=-0.405 shape=(1, 9000, 1)
logits [[ 3.225236  -2.6196702  2.5075486 -4.7331486]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.814 " + "l1=0.814" + "l2=0 f=-0.412 shape=(1, 9000, 1)
logits [[ 3.3045857 -2.6538186  2.5397558 -4.838398 ]]
Iteration 100 of 1000: loss=0.759 " + "l1=0.726" + "l2=0.0327 f=-0.381 shape=(1, 9000, 1)
logits [[ 2.921777  -2.4959908  2.3924568 -4.3421016]]
Iteration 200 of 1000: loss=0.744 " + "l1=0.7" + "l2=0.0433 f=-0.372 shape=(1, 9000, 1)
logits [[ 2.8092504 -2.4551404  2.3500447 -4.1940513]]
Iteration 300 of 1000: loss=0.73 " + "l1=0.679" + "l2=0.0509 f=-0.365 shape=(1, 9000, 1)
logits [[ 2.7162619 -2.408007   2.3015554 -4.069487 ]]
Iteration 400 of 1000: loss=0.716 " + "l1=0.658" + "l2=0.0572 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.6305587 -2.375017   2.2648368 -3.9523883]]
Iteration 500 of 1000: loss=0.702 " + "l1=0.637" + "l2=0.0643 f=-0.353 shape=(1, 9000, 1)
logits [[ 2.5327554 -2.3315952  2.2266958 -3.8398185]]
Iteration 600 of 1000: loss=0.688 " + "l1=0.617" + "l2=0.0708 f=-0.351 shape=(1, 9000, 1)
logits [[ 2.4364567 -2.2992408  2.1921163 -3.7323642]]
Iteration 700 of 1000: loss=0.675 " + "l1=0.597" + "l2=0.0782 f=-0.348 shape=(1, 9000, 1)
logits [[ 2.3434026 -2.2616181  2.1528263 -3.6271636]]
Iteration 800 of 1000: loss=0.662 " + "l1=0.574" + "l2=0.088 f=-0.344 shape=(1, 9000, 1)
logits [[ 2.2403903 -2.2332294  2.115719  -3.4969993]]
Iteration 900 of 1000: loss=0.647 " + "l1=0.553" + "l2=0.0948 f=-0.336 shape=(1, 9000, 1)
logits [[ 2.1506267 -2.199618   2.0803328 -3.3756838]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.14 " + "l1=8.14" + "l2=0 f=-0.412 shape=(1, 9000, 1)
logits [[ 3.3045857 -2.6538186  2.5397558 -4.838398 ]]
Iteration 100 of 1000: loss=4.64 " + "l1=3.41" + "l2=1.23 f=-0.182 shape=(1, 9000, 1)
logits [[ 1.4635574 -1.7257559  1.4732778 -1.9372116]]
Iteration 200 of 1000: loss=3.81 " + "l1=2.25" + "l2=1.57 f=-0.0915 shape=(1, 9000, 1)
logits [[ 1.0693864 -1.509742   1.1610227 -1.0866802]]
Iteration 300 of 1000: loss=3.06 " + "l1=1.33" + "l2=1.72 f=-0.0552 shape=(1, 9000, 1)
logits [[ 0.72634476 -1.3236954   0.8556257  -0.47897318]]
Iteration 400 of 1000: loss=2.33 " + "l1=0.398" + "l2=1.93 f=-0.0388 shape=(1, 9000, 1)
logits [[ 0.31732136 -1.0685072   0.49723247  0.09886649]]
Iteration 500 of 1000: loss=1.81 " + "l1=0" + "l2=1.81 f=-0.0405 shape=(1, 9000, 1)
logits [[ 0.1492542  -0.9636283   0.32135767  0.33111292]]
Iteration 600 of 1000: loss=1.55 " + "l1=0.00149" + "l2=1.55 f=-0.0395 shape=(1, 9000, 1)
logits [[ 0.20239677 -0.9531011   0.29715726  0.29566315]]
Iteration 700 of 1000: loss=1.4 " + "l1=0" + "l2=1.4 f=-0.0384 shape=(1, 9000, 1)
logits [[ 0.19057651 -0.9460033   0.29480213  0.30701533]]
Iteration 800 of 1000: loss=1.28 " + "l1=0.00167" + "l2=1.28 f=-0.0366 shape=(1, 9000, 1)
logits [[ 0.21427691 -0.95271903  0.2968984   0.29523146]]
Iteration 900 of 1000: loss=1.2 " + "l1=0" + "l2=1.2 f=-0.0322 shape=(1, 9000, 1)
logits [[ 0.24099487 -0.9701176   0.29939342  0.30073425]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.48 " + "l1=4.48" + "l2=0 f=-0.412 shape=(1, 9000, 1)
logits [[ 3.3045857 -2.6538186  2.5397558 -4.838398 ]]
Iteration 100 of 1000: loss=3.09 " + "l1=2.52" + "l2=0.564 f=-0.278 shape=(1, 9000, 1)
logits [[ 1.8084617 -1.948488   1.8068894 -2.7777205]]
Iteration 200 of 1000: loss=2.74 " + "l1=2.01" + "l2=0.728 f=-0.211 shape=(1, 9000, 1)
logits [[ 1.5206286 -1.7678813  1.5303407 -2.128796 ]]
Iteration 300 of 1000: loss=2.43 " + "l1=1.63" + "l2=0.801 f=-0.164 shape=(1, 9000, 1)
logits [[ 1.2859113 -1.6116056  1.3156421 -1.6465515]]
Iteration 400 of 1000: loss=2.08 " + "l1=1.24" + "l2=0.837 f=-0.139 shape=(1, 9000, 1)
logits [[ 0.9907546 -1.4326274  1.0682082 -1.1840836]]
Iteration 500 of 1000: loss=1.82 " + "l1=0.955" + "l2=0.862 f=-0.13 shape=(1, 9000, 1)
logits [[ 0.743619   -1.2518605   0.8616035  -0.87499684]]
Iteration 600 of 1000: loss=1.63 " + "l1=0.755" + "l2=0.88 f=-0.117 shape=(1, 9000, 1)
logits [[ 0.6032055  -1.1482384   0.72457266 -0.64755857]]
Iteration 700 of 1000: loss=1.5 " + "l1=0.583" + "l2=0.919 f=-0.0956 shape=(1, 9000, 1)
logits [[ 0.5066387  -1.0637267   0.6173724  -0.44255665]]
Iteration 800 of 1000: loss=1.38 " + "l1=0.405" + "l2=0.98 f=-0.0737 shape=(1, 9000, 1)
logits [[ 0.42026743 -1.0077384   0.5149874  -0.22222498]]
Iteration 900 of 1000: loss=1.28 " + "l1=0.28" + "l2=1 f=-0.0577 shape=(1, 9000, 1)
logits [[ 0.36186746 -0.9674971   0.4416324  -0.06690669]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=6.31 " + "l1=6.31" + "l2=0 f=-0.412 shape=(1, 9000, 1)
logits [[ 3.3045857 -2.6538186  2.5397558 -4.838398 ]]
Iteration 100 of 1000: loss=3.92 " + "l1=3.02" + "l2=0.902 f=-0.223 shape=(1, 9000, 1)
logits [[ 1.6082785 -1.8291936  1.6129537 -2.2856376]]
Iteration 200 of 1000: loss=3.34 " + "l1=2.24" + "l2=1.1 f=-0.148 shape=(1, 9000, 1)
logits [[ 1.2898107 -1.6490167  1.3299377 -1.5620326]]
Iteration 300 of 1000: loss=2.83 " + "l1=1.61" + "l2=1.22 f=-0.104 shape=(1, 9000, 1)
logits [[ 0.96816415 -1.4675174   1.0829891  -1.0006841 ]]
Iteration 400 of 1000: loss=2.29 " + "l1=0.93" + "l2=1.36 f=-0.0885 shape=(1, 9000, 1)
logits [[ 0.5744458  -1.2068454   0.73928165 -0.4607547 ]]
Iteration 500 of 1000: loss=1.9 " + "l1=0.503" + "l2=1.4 f=-0.0582 shape=(1, 9000, 1)
logits [[ 0.4053144  -1.0742673   0.5424315  -0.10618983]]
Iteration 600 of 1000: loss=1.64 " + "l1=0.164" + "l2=1.47 f=-0.0474 shape=(1, 9000, 1)
logits [[ 0.23578286 -0.97458047  0.38061765  0.16875264]]
Iteration 700 of 1000: loss=1.42 " + "l1=0.00384" + "l2=1.42 f=-0.0445 shape=(1, 9000, 1)
logits [[ 0.15915577 -0.91182643  0.2899045   0.284948  ]]
Iteration 800 of 1000: loss=1.26 " + "l1=0.00602" + "l2=1.25 f=-0.0359 shape=(1, 9000, 1)
logits [[ 0.21058342 -0.9378736   0.2957725   0.2880035 ]]
Iteration 900 of 1000: loss=1.16 " + "l1=0.000144" + "l2=1.16 f=-0.0312 shape=(1, 9000, 1)
logits [[ 0.22872339 -0.93704855  0.29190573  0.29171944]]
--- 268.1211414337158 seconds ---
Adv result:3
Loading record A02460
(1, 9088)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0635 " + "l1=0.0635" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.9251378 -2.4271214  2.7167902 -5.8208766]]
Iteration 100 of 1000: loss=0.0633 " + "l1=0.0631" + "l2=0.000206 f=-0.401 shape=(1, 9000, 1)
logits [[ 3.8977127 -2.4139597  2.7098818 -5.798453 ]]
Iteration 200 of 1000: loss=0.0633 " + "l1=0.0631" + "l2=0.000181 f=-0.401 shape=(1, 9000, 1)
logits [[ 3.8968716 -2.4126267  2.709006  -5.797656 ]]
Iteration 300 of 1000: loss=0.0633 " + "l1=0.063" + "l2=0.000215 f=-0.401 shape=(1, 9000, 1)
logits [[ 3.893692  -2.4106646  2.7079082 -5.7949743]]
Iteration 400 of 1000: loss=0.0632 " + "l1=0.063" + "l2=0.000256 f=-0.401 shape=(1, 9000, 1)
logits [[ 3.8901243 -2.4087038  2.706827  -5.7920237]]
Iteration 500 of 1000: loss=0.0632 " + "l1=0.0629" + "l2=0.000316 f=-0.401 shape=(1, 9000, 1)
logits [[ 3.8865185 -2.4068162  2.7057889 -5.7890863]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.635 " + "l1=0.635" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.9251378 -2.4271214  2.7167902 -5.8208766]]
Iteration 100 of 1000: loss=0.617 " + "l1=0.606" + "l2=0.0105 f=-0.398 shape=(1, 9000, 1)
logits [[ 3.7317686 -2.3301764  2.6659248 -5.6591797]]
Iteration 200 of 1000: loss=0.61 " + "l1=0.595" + "l2=0.0145 f=-0.396 shape=(1, 9000, 1)
logits [[ 3.6618352 -2.2892404  2.645677  -5.6005855]]
Iteration 300 of 1000: loss=0.603 " + "l1=0.585" + "l2=0.0179 f=-0.394 shape=(1, 9000, 1)
logits [[ 3.5994496 -2.2518315  2.6292803 -5.551172 ]]
Iteration 400 of 1000: loss=0.597 " + "l1=0.576" + "l2=0.0207 f=-0.39 shape=(1, 9000, 1)
logits [[ 3.5432272 -2.2178502  2.6183927 -5.5044537]]
Iteration 500 of 1000: loss=0.59 " + "l1=0.567" + "l2=0.023 f=-0.386 shape=(1, 9000, 1)
logits [[ 3.490751  -2.1842303  2.6072068 -5.4596353]]
Iteration 600 of 1000: loss=0.584 " + "l1=0.558" + "l2=0.0257 f=-0.383 shape=(1, 9000, 1)
logits [[ 3.4368975 -2.1478157  2.5941517 -5.4144554]]
Iteration 700 of 1000: loss=0.578 " + "l1=0.55" + "l2=0.0282 f=-0.379 shape=(1, 9000, 1)
logits [[ 3.3854191 -2.1125622  2.5809948 -5.369362 ]]
Iteration 800 of 1000: loss=0.573 " + "l1=0.542" + "l2=0.0309 f=-0.375 shape=(1, 9000, 1)
logits [[ 3.3347867 -2.081087   2.5680165 -5.3211493]]
Iteration 900 of 1000: loss=0.567 " + "l1=0.534" + "l2=0.0333 f=-0.372 shape=(1, 9000, 1)
logits [[ 3.2851586 -2.0523489  2.5550852 -5.2739453]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.35 " + "l1=6.35" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.9251378 -2.4271214  2.7167902 -5.8208766]]
Iteration 100 of 1000: loss=4.51 " + "l1=3.55" + "l2=0.958 f=-0.333 shape=(1, 9000, 1)
logits [[ 2.1955025 -1.3529234  2.193486  -4.369402 ]]
Iteration 200 of 1000: loss=3.94 " + "l1=2.97" + "l2=0.965 f=-0.299 shape=(1, 9000, 1)
logits [[ 1.9566492 -1.0111241  1.963652  -4.1068783]]
Iteration 300 of 1000: loss=3.58 " + "l1=2.59" + "l2=0.991 f=-0.258 shape=(1, 9000, 1)
logits [[ 1.8063695 -0.7795643  1.8083603 -3.8657367]]
Iteration 400 of 1000: loss=3.31 " + "l1=2.34" + "l2=0.971 f=-0.232 shape=(1, 9000, 1)
logits [[ 1.6911342 -0.645639   1.696615  -3.6687765]]
Iteration 500 of 1000: loss=3.07 " + "l1=2.08" + "l2=0.986 f=-0.207 shape=(1, 9000, 1)
logits [[ 1.5646065 -0.5145809  1.5697957 -3.4459808]]
Iteration 600 of 1000: loss=2.89 " + "l1=1.88" + "l2=1 f=-0.194 shape=(1, 9000, 1)
logits [[ 1.4537265  -0.42528337  1.4583591  -3.261802  ]]
Iteration 700 of 1000: loss=2.75 " + "l1=1.74" + "l2=1.01 f=-0.188 shape=(1, 9000, 1)
logits [[ 1.3739879 -0.3652529  1.3670911 -3.1279266]]
Iteration 800 of 1000: loss=2.62 " + "l1=1.59" + "l2=1.03 f=-0.179 shape=(1, 9000, 1)
logits [[ 1.272346 -0.309223  1.281616 -2.960032]]
Iteration 900 of 1000: loss=2.5 " + "l1=1.5" + "l2=1 f=-0.173 shape=(1, 9000, 1)
logits [[ 1.2116661 -0.2812233  1.216319  -2.83981  ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=63.5 " + "l1=63.5" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.9251378 -2.4271214  2.7167902 -5.8208766]]
Iteration 100 of 1000: loss=17.4 " + "l1=6.81" + "l2=10.6 f=-0.332 shape=(1, 9000, 1)
logits [[ 0.47214136  0.23400883  0.91466063 -2.9497862 ]]
Iteration 200 of 1000: loss=8.77 " + "l1=0.0435" + "l2=8.73 f=-0.358 shape=(1, 9000, 1)
logits [[-0.01910731  0.625394    0.62974876 -2.6680582 ]]
Iteration 300 of 1000: loss=7.12 " + "l1=0" + "l2=7.12 f=-0.373 shape=(1, 9000, 1)
logits [[ 0.01316709  0.61826366  0.6062936  -2.7293487 ]]
Iteration 400 of 1000: loss=6.24 " + "l1=0.00914" + "l2=6.23 f=-0.364 shape=(1, 9000, 1)
logits [[ 0.05755517  0.6132788   0.6141932  -2.742839  ]]
Iteration 500 of 1000: loss=5.73 " + "l1=0" + "l2=5.73 f=-0.346 shape=(1, 9000, 1)
logits [[ 0.10288441  0.61268044  0.60369676 -2.7030678 ]]
Iteration 600 of 1000: loss=5.34 " + "l1=0" + "l2=5.34 f=-0.335 shape=(1, 9000, 1)
logits [[ 0.139605    0.6047176   0.59632385 -2.6798117 ]]
Iteration 700 of 1000: loss=5.1 " + "l1=0" + "l2=5.1 f=-0.327 shape=(1, 9000, 1)
logits [[ 0.14554521  0.60688347  0.5834531  -2.6447294 ]]
Iteration 800 of 1000: loss=4.84 " + "l1=0" + "l2=4.84 f=-0.317 shape=(1, 9000, 1)
logits [[ 0.1868029   0.59355986  0.5771047  -2.6245496 ]]
Iteration 900 of 1000: loss=4.62 " + "l1=0" + "l2=4.62 f=-0.311 shape=(1, 9000, 1)
logits [[ 0.21289894  0.5764735   0.57485116 -2.608314  ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=34.9 " + "l1=34.9" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.9251378 -2.4271214  2.7167902 -5.8208766]]
Iteration 100 of 1000: loss=13.6 " + "l1=7.67" + "l2=5.92 f=-0.309 shape=(1, 9000, 1)
logits [[ 1.1434351  -0.17184941  1.2227219  -3.4304416 ]]
Iteration 200 of 1000: loss=8.2 " + "l1=1.18" + "l2=7.02 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.32045177  0.49650657  0.7114134  -2.9152699 ]]
Iteration 300 of 1000: loss=5.86 " + "l1=0" + "l2=5.86 f=-0.351 shape=(1, 9000, 1)
logits [[ 0.13899729  0.62118113  0.6195951  -2.7828634 ]]
Iteration 400 of 1000: loss=5.14 " + "l1=0.0528" + "l2=5.08 f=-0.331 shape=(1, 9000, 1)
logits [[ 0.18872237  0.5932064   0.6027983  -2.7081225 ]]
Iteration 500 of 1000: loss=4.74 " + "l1=0" + "l2=4.74 f=-0.314 shape=(1, 9000, 1)
logits [[ 0.20332201  0.5874586   0.5749405  -2.6216078 ]]
Iteration 600 of 1000: loss=4.43 " + "l1=0.0235" + "l2=4.41 f=-0.298 shape=(1, 9000, 1)
logits [[ 0.25066856  0.5633008   0.56757873 -2.5731118 ]]
Iteration 700 of 1000: loss=4.24 " + "l1=0" + "l2=4.24 f=-0.291 shape=(1, 9000, 1)
logits [[ 0.2380391   0.56607157  0.5510512  -2.519266  ]]
Iteration 800 of 1000: loss=3.98 " + "l1=0" + "l2=3.98 f=-0.278 shape=(1, 9000, 1)
logits [[ 0.24552312  0.55835295  0.5518469  -2.4671311 ]]
Iteration 900 of 1000: loss=3.8 " + "l1=0" + "l2=3.8 f=-0.265 shape=(1, 9000, 1)
logits [[ 0.23290765  0.55635756  0.54621077 -2.3938866 ]]
--- 262.9742546081543 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0121 " + "l1=0.0121" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.9251378 -2.4271214  2.7167902 -5.8208766]]
Iteration 100 of 1000: loss=0.012 " + "l1=0.0119" + "l2=0.000146 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.9029937 -2.425649   2.7178645 -5.8035617]]
Iteration 200 of 1000: loss=0.012 " + "l1=0.0119" + "l2=9.68e-05 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.9044688 -2.4256907  2.717619  -5.805014 ]]
Iteration 300 of 1000: loss=0.012 " + "l1=0.0119" + "l2=9.89e-05 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.9030225 -2.4256165  2.7176323 -5.8041153]]
Iteration 400 of 1000: loss=0.012 " + "l1=0.0118" + "l2=0.000151 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.9009676 -2.4255068  2.717683  -5.802731 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.121 " + "l1=0.121" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.9251378 -2.4271214  2.7167902 -5.8208766]]
Iteration 100 of 1000: loss=0.112 " + "l1=0.107" + "l2=0.00548 f=-0.406 shape=(1, 9000, 1)
logits [[ 3.7886584 -2.418257   2.7235844 -5.7169356]]
Iteration 200 of 1000: loss=0.109 " + "l1=0.103" + "l2=0.00686 f=-0.407 shape=(1, 9000, 1)
logits [[ 3.750229  -2.414004   2.7239816 -5.6875863]]
Iteration 300 of 1000: loss=0.107 " + "l1=0.0989" + "l2=0.00795 f=-0.409 shape=(1, 9000, 1)
logits [[ 3.7143378 -2.4109478  2.7252424 -5.6643367]]
Iteration 400 of 1000: loss=0.104 " + "l1=0.0951" + "l2=0.00895 f=-0.411 shape=(1, 9000, 1)
logits [[ 3.677337  -2.4086154  2.7260103 -5.637682 ]]
Iteration 500 of 1000: loss=0.101 " + "l1=0.0911" + "l2=0.00999 f=-0.413 shape=(1, 9000, 1)
logits [[ 3.6381092 -2.4054642  2.726703  -5.6098566]]
Iteration 600 of 1000: loss=0.0981 " + "l1=0.087" + "l2=0.0111 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.5971756 -2.401855   2.7272146 -5.581185 ]]
Iteration 700 of 1000: loss=0.0952 " + "l1=0.0831" + "l2=0.0121 f=-0.416 shape=(1, 9000, 1)
logits [[ 3.5584345 -2.3995695  2.7274234 -5.552172 ]]
Iteration 800 of 1000: loss=0.0922 " + "l1=0.0793" + "l2=0.0129 f=-0.418 shape=(1, 9000, 1)
logits [[ 3.5214703 -2.3970456  2.7282526 -5.524763 ]]
Iteration 900 of 1000: loss=0.0894 " + "l1=0.0756" + "l2=0.0138 f=-0.419 shape=(1, 9000, 1)
logits [[ 3.4852607 -2.397119   2.7288594 -5.494878 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.21 " + "l1=1.21" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.9251378 -2.4271214  2.7167902 -5.8208766]]
Iteration 100 of 1000: loss=0.357 " + "l1=0.0014" + "l2=0.355 f=-0.421 shape=(1, 9000, 1)
logits [[ 2.8212225 -2.3215594  2.8198206 -5.0047455]]
Iteration 200 of 1000: loss=0.255 " + "l1=0" + "l2=0.255 f=-0.419 shape=(1, 9000, 1)
logits [[ 2.794836  -2.3030574  2.799048  -4.9653916]]
Iteration 300 of 1000: loss=0.197 " + "l1=0" + "l2=0.197 f=-0.42 shape=(1, 9000, 1)
logits [[ 2.781735  -2.299852   2.7825358 -4.943265 ]]
Iteration 400 of 1000: loss=0.16 " + "l1=0.000571" + "l2=0.159 f=-0.421 shape=(1, 9000, 1)
logits [[ 2.7679174 -2.2969306  2.7673469 -4.924064 ]]
Iteration 500 of 1000: loss=0.136 " + "l1=0.00423" + "l2=0.132 f=-0.422 shape=(1, 9000, 1)
logits [[ 2.7530425 -2.2975013  2.7488105 -4.892603 ]]
Iteration 600 of 1000: loss=0.117 " + "l1=0" + "l2=0.117 f=-0.423 shape=(1, 9000, 1)
logits [[ 2.7276928 -2.2960362  2.7326746 -4.8561506]]
Iteration 700 of 1000: loss=0.103 " + "l1=0.00486" + "l2=0.0982 f=-0.424 shape=(1, 9000, 1)
logits [[ 2.7203667 -2.2954743  2.7155025 -4.8367033]]
Iteration 800 of 1000: loss=0.0888 " + "l1=0" + "l2=0.0888 f=-0.425 shape=(1, 9000, 1)
logits [[ 2.6981463 -2.2903247  2.7008486 -4.808158 ]]
Iteration 900 of 1000: loss=0.0831 " + "l1=0" + "l2=0.0831 f=-0.425 shape=(1, 9000, 1)
logits [[ 2.6745224 -2.284596   2.6884096 -4.7777   ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.665 " + "l1=0.665" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.9251378 -2.4271214  2.7167902 -5.8208766]]
Iteration 100 of 1000: loss=0.385 " + "l1=0.222" + "l2=0.163 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.1782587 -2.3614023  2.7744944 -5.2778106]]
Iteration 200 of 1000: loss=0.281 " + "l1=0.0676" + "l2=0.214 f=-0.42 shape=(1, 9000, 1)
logits [[ 2.9150095 -2.3226979  2.7920496 -5.0632534]]
Iteration 300 of 1000: loss=0.201 " + "l1=0.00189" + "l2=0.199 f=-0.421 shape=(1, 9000, 1)
logits [[ 2.7882705 -2.3043458  2.784825  -4.9512887]]
Iteration 400 of 1000: loss=0.154 " + "l1=0.000827" + "l2=0.153 f=-0.423 shape=(1, 9000, 1)
logits [[ 2.7638514 -2.297626   2.762347  -4.9200926]]
Iteration 500 of 1000: loss=0.124 " + "l1=2.39e-05" + "l2=0.124 f=-0.423 shape=(1, 9000, 1)
logits [[ 2.740804  -2.2955596  2.7407606 -4.8770943]]
Iteration 600 of 1000: loss=0.104 " + "l1=0" + "l2=0.104 f=-0.424 shape=(1, 9000, 1)
logits [[ 2.7187319 -2.2958975  2.7200038 -4.8390465]]
Iteration 700 of 1000: loss=0.0885 " + "l1=0.000444" + "l2=0.088 f=-0.424 shape=(1, 9000, 1)
logits [[ 2.7015126 -2.2914793  2.7007048 -4.808193 ]]
Iteration 800 of 1000: loss=0.0792 " + "l1=0.00284" + "l2=0.0764 f=-0.424 shape=(1, 9000, 1)
logits [[ 2.6915922 -2.2902708  2.6864269 -4.784399 ]]
Iteration 900 of 1000: loss=0.0703 " + "l1=0.00285" + "l2=0.0674 f=-0.424 shape=(1, 9000, 1)
logits [[ 2.6800458 -2.2891593  2.674863  -4.761057 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.393 " + "l1=0.393" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.9251378 -2.4271214  2.7167902 -5.8208766]]
Iteration 100 of 1000: loss=0.299 " + "l1=0.243" + "l2=0.0555 f=-0.411 shape=(1, 9000, 1)
logits [[ 3.4903123 -2.3834684  2.741483  -5.4938726]]
Iteration 200 of 1000: loss=0.261 " + "l1=0.179" + "l2=0.082 f=-0.414 shape=(1, 9000, 1)
logits [[ 3.3080616 -2.3651526  2.75638   -5.3556585]]
Iteration 300 of 1000: loss=0.228 " + "l1=0.14" + "l2=0.0877 f=-0.414 shape=(1, 9000, 1)
logits [[ 3.1939633 -2.3420267  2.763187  -5.272955 ]]
Iteration 400 of 1000: loss=0.193 " + "l1=0.0989" + "l2=0.0945 f=-0.417 shape=(1, 9000, 1)
logits [[ 3.0641272 -2.333856   2.7598953 -5.1570725]]
Iteration 500 of 1000: loss=0.16 " + "l1=0.0663" + "l2=0.0936 f=-0.42 shape=(1, 9000, 1)
logits [[ 2.9612057 -2.3301647  2.7572613 -5.0672746]]
Iteration 600 of 1000: loss=0.13 " + "l1=0.0301" + "l2=0.0999 f=-0.424 shape=(1, 9000, 1)
logits [[ 2.8344    -2.3235323  2.7417917 -4.9474196]]
Iteration 700 of 1000: loss=0.103 " + "l1=0.000462" + "l2=0.102 f=-0.426 shape=(1, 9000, 1)
logits [[ 2.726782  -2.3118095  2.7253604 -4.8432293]]
Iteration 800 of 1000: loss=0.0837 " + "l1=0.00146" + "l2=0.0823 f=-0.425 shape=(1, 9000, 1)
logits [[ 2.7036622 -2.3093965  2.6991618 -4.7927322]]
Iteration 900 of 1000: loss=0.0725 " + "l1=0.000525" + "l2=0.072 f=-0.425 shape=(1, 9000, 1)
logits [[ 2.6853743 -2.3090339  2.6837583 -4.759126 ]]
--- 256.18922305107117 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0975 " + "l1=0.0975" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.9251378 -2.4271214  2.7167902 -5.8208766]]
Iteration 100 of 1000: loss=0.097 " + "l1=0.0967" + "l2=0.000376 f=-0.4 shape=(1, 9000, 1)
logits [[ 3.8872046 -2.4201205  2.709534  -5.7780213]]
Iteration 200 of 1000: loss=0.0969 " + "l1=0.0966" + "l2=0.000349 f=-0.4 shape=(1, 9000, 1)
logits [[ 3.8841403 -2.4189556  2.7081625 -5.7748275]]
Iteration 300 of 1000: loss=0.0969 " + "l1=0.0965" + "l2=0.000393 f=-0.4 shape=(1, 9000, 1)
logits [[ 3.8788195 -2.4175851  2.7067344 -5.7691083]]
Iteration 400 of 1000: loss=0.0968 " + "l1=0.0964" + "l2=0.000437 f=-0.4 shape=(1, 9000, 1)
logits [[ 3.873213  -2.416373   2.705406  -5.7631917]]
Iteration 500 of 1000: loss=0.0968 " + "l1=0.0963" + "l2=0.000538 f=-0.4 shape=(1, 9000, 1)
logits [[ 3.8676782 -2.4152737  2.704132  -5.7573504]]
Iteration 600 of 1000: loss=0.0967 " + "l1=0.0961" + "l2=0.000601 f=-0.4 shape=(1, 9000, 1)
logits [[ 3.8621097 -2.4142356  2.7029333 -5.751498 ]]
Iteration 700 of 1000: loss=0.0968 " + "l1=0.096" + "l2=0.000762 f=-0.4 shape=(1, 9000, 1)
logits [[ 3.8564842 -2.4131908  2.7017958 -5.7456055]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.975 " + "l1=0.975" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.9251378 -2.4271214  2.7167902 -5.8208766]]
Iteration 100 of 1000: loss=0.936 " + "l1=0.914" + "l2=0.0218 f=-0.393 shape=(1, 9000, 1)
logits [[ 3.6366017 -2.364526   2.6585414 -5.500628 ]]
Iteration 200 of 1000: loss=0.921 " + "l1=0.89" + "l2=0.0307 f=-0.388 shape=(1, 9000, 1)
logits [[ 3.5264776 -2.3398166  2.6386251 -5.3770895]]
Iteration 300 of 1000: loss=0.908 " + "l1=0.871" + "l2=0.0365 f=-0.383 shape=(1, 9000, 1)
logits [[ 3.439517  -2.3203804  2.6235294 -5.274853 ]]
Iteration 400 of 1000: loss=0.894 " + "l1=0.852" + "l2=0.0414 f=-0.38 shape=(1, 9000, 1)
logits [[ 3.3516393 -2.3047764  2.6049767 -5.171289 ]]
Iteration 500 of 1000: loss=0.878 " + "l1=0.833" + "l2=0.0456 f=-0.379 shape=(1, 9000, 1)
logits [[ 3.2585328 -2.287115   2.5808506 -5.068364 ]]
Iteration 600 of 1000: loss=0.861 " + "l1=0.812" + "l2=0.0486 f=-0.377 shape=(1, 9000, 1)
logits [[ 3.1653643 -2.2752898  2.5606835 -4.959298 ]]
Iteration 700 of 1000: loss=0.84 " + "l1=0.787" + "l2=0.0529 f=-0.373 shape=(1, 9000, 1)
logits [[ 3.0536609 -2.2572494  2.5324228 -4.820754 ]]
Iteration 800 of 1000: loss=0.818 " + "l1=0.76" + "l2=0.0583 f=-0.365 shape=(1, 9000, 1)
logits [[ 2.936228  -2.2305725  2.4995396 -4.66458  ]]
Iteration 900 of 1000: loss=0.792 " + "l1=0.728" + "l2=0.0645 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.7955167 -2.1977177  2.451658  -4.4829392]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.75 " + "l1=9.75" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.9251378 -2.4271214  2.7167902 -5.8208766]]
Iteration 100 of 1000: loss=6.96 " + "l1=5.87" + "l2=1.09 f=-0.282 shape=(1, 9000, 1)
logits [[ 2.2231627 -1.9480757  2.2346015 -3.6360745]]
Iteration 200 of 1000: loss=6.02 " + "l1=4.62" + "l2=1.4 f=-0.202 shape=(1, 9000, 1)
logits [[ 1.817577  -1.6558899  1.8252317 -2.7967832]]
Iteration 300 of 1000: loss=4.79 " + "l1=3.12" + "l2=1.67 f=-0.149 shape=(1, 9000, 1)
logits [[ 1.2870815 -1.4011327  1.3188478 -1.7999356]]
Iteration 400 of 1000: loss=3.61 " + "l1=1.82" + "l2=1.79 f=-0.149 shape=(1, 9000, 1)
logits [[ 0.5857765 -1.1259471  0.8854144 -0.9394355]]
Iteration 500 of 1000: loss=2.95 " + "l1=1.24" + "l2=1.7 f=-0.129 shape=(1, 9000, 1)
logits [[ 0.31025943 -0.99471694  0.706635   -0.53717524]]
Iteration 600 of 1000: loss=2.46 " + "l1=0.715" + "l2=1.75 f=-0.116 shape=(1, 9000, 1)
logits [[ 0.06219123 -0.9189914   0.55358726 -0.1612669 ]]
Iteration 700 of 1000: loss=2.06 " + "l1=0.238" + "l2=1.82 f=-0.126 shape=(1, 9000, 1)
logits [[-0.21038818 -0.87619317  0.4092761   0.17160907]]
Iteration 800 of 1000: loss=1.75 " + "l1=0.0111" + "l2=1.74 f=-0.132 shape=(1, 9000, 1)
logits [[-0.36993018 -0.83821386  0.34496227  0.33384302]]
Iteration 900 of 1000: loss=1.5 " + "l1=0" + "l2=1.5 f=-0.125 shape=(1, 9000, 1)
logits [[-0.39314458 -0.83676165  0.36111456  0.36715642]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.36 " + "l1=5.36" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.9251378 -2.4271214  2.7167902 -5.8208766]]
Iteration 100 of 1000: loss=4.28 " + "l1=3.7" + "l2=0.578 f=-0.335 shape=(1, 9000, 1)
logits [[ 2.521034  -2.1352403  2.4869437 -4.2114463]]
Iteration 200 of 1000: loss=3.92 " + "l1=3.33" + "l2=0.585 f=-0.29 shape=(1, 9000, 1)
logits [[ 2.3119364 -2.0356174  2.3121133 -3.7492993]]
Iteration 300 of 1000: loss=3.5 " + "l1=2.9" + "l2=0.604 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.0779138 -1.9144709  2.0795267 -3.1844726]]
Iteration 400 of 1000: loss=2.89 " + "l1=2.2" + "l2=0.685 f=-0.185 shape=(1, 9000, 1)
logits [[ 1.6172335 -1.652877   1.650202  -2.3541007]]
Iteration 500 of 1000: loss=2.41 " + "l1=1.65" + "l2=0.753 f=-0.159 shape=(1, 9000, 1)
logits [[ 1.1146795 -1.4557705  1.3555349 -1.6514046]]
Iteration 600 of 1000: loss=2.04 " + "l1=1.28" + "l2=0.759 f=-0.148 shape=(1, 9000, 1)
logits [[ 0.7675877 -1.2954712  1.1286174 -1.1914397]]
Iteration 700 of 1000: loss=1.79 " + "l1=1.02" + "l2=0.768 f=-0.128 shape=(1, 9000, 1)
logits [[ 0.5272364  -1.1548362   0.9857087  -0.87141305]]
Iteration 800 of 1000: loss=1.61 " + "l1=0.868" + "l2=0.74 f=-0.129 shape=(1, 9000, 1)
logits [[ 0.35092193 -1.0955541   0.9035904  -0.6750318 ]]
Iteration 900 of 1000: loss=1.46 " + "l1=0.749" + "l2=0.713 f=-0.137 shape=(1, 9000, 1)
logits [[ 0.18915609 -1.0562316   0.8403351  -0.5213339 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=7.55 " + "l1=7.55" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.9251378 -2.4271214  2.7167902 -5.8208766]]
Iteration 100 of 1000: loss=5.67 " + "l1=4.9" + "l2=0.775 f=-0.309 shape=(1, 9000, 1)
logits [[ 2.3887906 -2.0844476  2.3862891 -3.9284153]]
Iteration 200 of 1000: loss=5.11 " + "l1=4.22" + "l2=0.886 f=-0.245 shape=(1, 9000, 1)
logits [[ 2.1435823 -1.9590008  2.140153  -3.304857 ]]
Iteration 300 of 1000: loss=4.35 " + "l1=3.33" + "l2=1.02 f=-0.172 shape=(1, 9000, 1)
logits [[ 1.7728561 -1.7340704  1.7866535 -2.5125628]]
Iteration 400 of 1000: loss=3.38 " + "l1=2.23" + "l2=1.15 f=-0.145 shape=(1, 9000, 1)
logits [[ 1.1354598 -1.4204476  1.2905544 -1.5859233]]
Iteration 500 of 1000: loss=2.65 " + "l1=1.43" + "l2=1.22 f=-0.142 shape=(1, 9000, 1)
logits [[ 0.57443124 -1.136868    0.91898036 -0.9259849 ]]
Iteration 600 of 1000: loss=2.24 " + "l1=1.04" + "l2=1.2 f=-0.121 shape=(1, 9000, 1)
logits [[ 0.33201778 -1.0284165   0.7759434  -0.5624705 ]]
Iteration 700 of 1000: loss=1.96 " + "l1=0.751" + "l2=1.21 f=-0.118 shape=(1, 9000, 1)
logits [[ 0.15299353 -0.989381    0.66739565 -0.30220833]]
Iteration 800 of 1000: loss=1.72 " + "l1=0.499" + "l2=1.22 f=-0.136 shape=(1, 9000, 1)
logits [[-0.07848358 -0.9768354   0.57779664 -0.065781  ]]
Iteration 900 of 1000: loss=1.45 " + "l1=0.223" + "l2=1.23 f=-0.136 shape=(1, 9000, 1)
logits [[-0.29708183 -0.94258505  0.49081555  0.20360973]]
--- 274.8926513195038 seconds ---
Adv result:3
Loading record A02461
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0494 " + "l1=0.0494" + "l2=0 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.6249566 -1.3139483  3.0965443 -8.580214 ]]
Iteration 100 of 1000: loss=0.0486 " + "l1=0.0482" + "l2=0.000417 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.56537   -1.2506162  3.0772889 -8.565557 ]]
Iteration 200 of 1000: loss=0.0483 " + "l1=0.0478" + "l2=0.000488 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.550479  -1.2305381  3.0706325 -8.563186 ]]
Iteration 300 of 1000: loss=0.0481 " + "l1=0.0474" + "l2=0.000646 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.532667  -1.2080914  3.0635934 -8.560486 ]]
Iteration 400 of 1000: loss=0.0479 " + "l1=0.047" + "l2=0.000846 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.5150816 -1.1867994  3.0573664 -8.558263 ]]
Iteration 500 of 1000: loss=0.0477 " + "l1=0.0467" + "l2=0.00104 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.4984696 -1.1680833  3.0516403 -8.55511  ]]
Iteration 600 of 1000: loss=0.0476 " + "l1=0.0464" + "l2=0.00126 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.4835374 -1.1522398  3.0467155 -8.551204 ]]
Iteration 700 of 1000: loss=0.0475 " + "l1=0.0461" + "l2=0.0014 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.4702241 -1.1389393  3.0427144 -8.546588 ]]
Iteration 800 of 1000: loss=0.0475 " + "l1=0.0459" + "l2=0.00166 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.4592938 -1.1289402  3.0397499 -8.5415745]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.494 " + "l1=0.494" + "l2=0 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.6249566 -1.3139483  3.0965443 -8.580214 ]]
Iteration 100 of 1000: loss=0.422 " + "l1=0.392" + "l2=0.0302 f=-0.788 shape=(1, 9000, 1)
logits [[ 3.1422489 -0.7762504  2.9222908 -8.441395 ]]
Iteration 200 of 1000: loss=0.388 " + "l1=0.343" + "l2=0.0455 f=-0.782 shape=(1, 9000, 1)
logits [[ 2.8979735 -0.5311729  2.8414288 -8.337317 ]]
Iteration 300 of 1000: loss=0.368 " + "l1=0.314" + "l2=0.0536 f=-0.777 shape=(1, 9000, 1)
logits [[ 2.7575915  -0.38159305  2.7574086  -8.240794  ]]
Iteration 400 of 1000: loss=0.353 " + "l1=0.294" + "l2=0.0594 f=-0.771 shape=(1, 9000, 1)
logits [[ 2.6684332  -0.26662403  2.6667318  -8.1542635 ]]
Iteration 500 of 1000: loss=0.341 " + "l1=0.278" + "l2=0.0636 f=-0.769 shape=(1, 9000, 1)
logits [[ 2.5967884  -0.18018477  2.5943537  -8.08535   ]]
Iteration 600 of 1000: loss=0.332 " + "l1=0.266" + "l2=0.0661 f=-0.77 shape=(1, 9000, 1)
logits [[ 2.5355704  -0.12072133  2.5357523  -8.028769  ]]
Iteration 700 of 1000: loss=0.323 " + "l1=0.254" + "l2=0.0695 f=-0.772 shape=(1, 9000, 1)
logits [[ 2.473971   -0.06309313  2.4762008  -7.973083  ]]
Iteration 800 of 1000: loss=0.315 " + "l1=0.242" + "l2=0.0724 f=-0.778 shape=(1, 9000, 1)
logits [[ 2.4118981  -0.01022827  2.4100523  -7.9222283 ]]
Iteration 900 of 1000: loss=0.307 " + "l1=0.233" + "l2=0.0742 f=-0.785 shape=(1, 9000, 1)
logits [[ 2.3552146  0.0272537  2.358491  -7.881721 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.94 " + "l1=4.94" + "l2=0 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.6249566 -1.3139483  3.0965443 -8.580214 ]]
Iteration 100 of 1000: loss=1.6 " + "l1=0.547" + "l2=1.05 f=-0.837 shape=(1, 9000, 1)
logits [[ 1.4210747  1.044449   1.5913523 -7.406266 ]]
Iteration 200 of 1000: loss=0.853 " + "l1=0.00237" + "l2=0.851 f=-0.868 shape=(1, 9000, 1)
logits [[ 0.94117785  1.3726708   1.3750367  -7.162734  ]]
Iteration 300 of 1000: loss=0.721 " + "l1=0" + "l2=0.721 f=-0.87 shape=(1, 9000, 1)
logits [[ 0.9276706  1.3452106  1.3354911 -7.087122 ]]
Iteration 400 of 1000: loss=0.648 " + "l1=0" + "l2=0.648 f=-0.872 shape=(1, 9000, 1)
logits [[ 0.9219774  1.3123904  1.3059396 -7.028552 ]]
Iteration 500 of 1000: loss=0.605 " + "l1=0" + "l2=0.605 f=-0.873 shape=(1, 9000, 1)
logits [[ 0.9291034  1.2836659  1.2637341 -6.9700413]]
Iteration 600 of 1000: loss=0.562 " + "l1=0" + "l2=0.562 f=-0.869 shape=(1, 9000, 1)
logits [[ 0.9602108  1.2425903  1.2282783 -6.905657 ]]
Iteration 700 of 1000: loss=0.517 " + "l1=0" + "l2=0.517 f=-0.857 shape=(1, 9000, 1)
logits [[ 1.0100051  1.1944842  1.1935248 -6.8256245]]
Iteration 800 of 1000: loss=0.501 " + "l1=0" + "l2=0.501 f=-0.848 shape=(1, 9000, 1)
logits [[ 0.9821998  1.2011813  1.1571367 -6.7337   ]]
Iteration 900 of 1000: loss=0.465 " + "l1=0" + "l2=0.465 f=-0.835 shape=(1, 9000, 1)
logits [[ 1.0225796  1.1624247  1.1620129 -6.686211 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.72 " + "l1=2.72" + "l2=0 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.6249566 -1.3139483  3.0965443 -8.580214 ]]
Iteration 100 of 1000: loss=1.35 " + "l1=0.889" + "l2=0.461 f=-0.803 shape=(1, 9000, 1)
logits [[ 2.0429804   0.44352096  2.0593033  -7.757604  ]]
Iteration 200 of 1000: loss=0.931 " + "l1=0.355" + "l2=0.576 f=-0.83 shape=(1, 9000, 1)
logits [[ 1.4891846   0.95632774  1.6022937  -7.3667016 ]]
Iteration 300 of 1000: loss=0.685 " + "l1=0.00636" + "l2=0.679 f=-0.863 shape=(1, 9000, 1)
logits [[ 0.8889388  1.3546093  1.3661793 -7.0612974]]
Iteration 400 of 1000: loss=0.603 " + "l1=0.00134" + "l2=0.601 f=-0.867 shape=(1, 9000, 1)
logits [[ 0.83472276  1.3400425   1.3424833  -6.983452  ]]
Iteration 500 of 1000: loss=0.553 " + "l1=0.00714" + "l2=0.546 f=-0.869 shape=(1, 9000, 1)
logits [[ 0.8256197  1.3033221  1.3163049 -6.919911 ]]
Iteration 600 of 1000: loss=0.514 " + "l1=0" + "l2=0.514 f=-0.867 shape=(1, 9000, 1)
logits [[ 0.8220871  1.2813554  1.2700027 -6.8422184]]
Iteration 700 of 1000: loss=0.467 " + "l1=0" + "l2=0.467 f=-0.853 shape=(1, 9000, 1)
logits [[ 0.90144366  1.2229708   1.221125   -6.7588153 ]]
Iteration 800 of 1000: loss=0.417 " + "l1=0" + "l2=0.417 f=-0.831 shape=(1, 9000, 1)
logits [[ 0.98320425  1.179323    1.1751332  -6.660798  ]]
Iteration 900 of 1000: loss=0.385 " + "l1=0.00182" + "l2=0.383 f=-0.813 shape=(1, 9000, 1)
logits [[ 1.0266569  1.1547661  1.15807   -6.5918565]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.61 " + "l1=1.61" + "l2=0 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.6249566 -1.3139483  3.0965443 -8.580214 ]]
Iteration 100 of 1000: loss=1.01 " + "l1=0.813" + "l2=0.201 f=-0.779 shape=(1, 9000, 1)
logits [[ 2.4708061  -0.02978185  2.4702506  -8.028245  ]]
Iteration 200 of 1000: loss=0.809 " + "l1=0.537" + "l2=0.273 f=-0.799 shape=(1, 9000, 1)
logits [[ 2.056089   0.4138037  2.0651844 -7.732427 ]]
Iteration 300 of 1000: loss=0.697 " + "l1=0.374" + "l2=0.323 f=-0.813 shape=(1, 9000, 1)
logits [[ 1.8007313   0.66373867  1.8153602  -7.5318336 ]]
Iteration 400 of 1000: loss=0.62 " + "l1=0.263" + "l2=0.357 f=-0.829 shape=(1, 9000, 1)
logits [[ 1.5765258  0.8310353  1.638954  -7.36099  ]]
Iteration 500 of 1000: loss=0.556 " + "l1=0.18" + "l2=0.376 f=-0.84 shape=(1, 9000, 1)
logits [[ 1.3486539   0.96942574  1.5236472  -7.199915  ]]
Iteration 600 of 1000: loss=0.507 " + "l1=0.111" + "l2=0.396 f=-0.846 shape=(1, 9000, 1)
logits [[ 1.1452125  1.0862293  1.4274162 -7.041334 ]]
Iteration 700 of 1000: loss=0.449 " + "l1=0.0591" + "l2=0.39 f=-0.851 shape=(1, 9000, 1)
logits [[ 1.0097135  1.1565005  1.3384656 -6.906866 ]]
Iteration 800 of 1000: loss=0.373 " + "l1=0.00105" + "l2=0.372 f=-0.864 shape=(1, 9000, 1)
logits [[ 0.82242787  1.2450895   1.2483059  -6.7705984 ]]
Iteration 900 of 1000: loss=0.33 " + "l1=0.00376" + "l2=0.326 f=-0.868 shape=(1, 9000, 1)
logits [[ 0.80064446  1.2288651   1.2404218  -6.740421  ]]
--- 282.0092284679413 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00528 " + "l1=0.00528" + "l2=0 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.6249566 -1.3139483  3.0965443 -8.580214 ]]
Iteration 100 of 1000: loss=0.00493 " + "l1=0.00469" + "l2=0.000247 f=-0.795 shape=(1, 9000, 1)
logits [[ 3.5865242 -1.3095777  3.1178212 -8.574696 ]]
Iteration 200 of 1000: loss=0.00482 " + "l1=0.0046" + "l2=0.000222 f=-0.795 shape=(1, 9000, 1)
logits [[ 3.5808878 -1.308873   3.1213665 -8.575022 ]]
Iteration 300 of 1000: loss=0.00473 " + "l1=0.00446" + "l2=0.000278 f=-0.796 shape=(1, 9000, 1)
logits [[ 3.5724547 -1.3082333  3.1269343 -8.574922 ]]
Iteration 400 of 1000: loss=0.00466 " + "l1=0.00431" + "l2=0.000354 f=-0.796 shape=(1, 9000, 1)
logits [[ 3.5635717 -1.3075533  3.1328154 -8.574492 ]]
Iteration 500 of 1000: loss=0.00462 " + "l1=0.00416" + "l2=0.000455 f=-0.797 shape=(1, 9000, 1)
logits [[ 3.554812  -1.3067945  3.1386573 -8.573814 ]]
Iteration 600 of 1000: loss=0.00454 " + "l1=0.00402" + "l2=0.000519 f=-0.797 shape=(1, 9000, 1)
logits [[ 3.5462127 -1.3062495  3.1446269 -8.573038 ]]
Iteration 700 of 1000: loss=0.00447 " + "l1=0.00387" + "l2=0.000602 f=-0.797 shape=(1, 9000, 1)
logits [[ 3.5377977 -1.3057075  3.1505644 -8.572068 ]]
Iteration 800 of 1000: loss=0.00448 " + "l1=0.00374" + "l2=0.000739 f=-0.798 shape=(1, 9000, 1)
logits [[ 3.5297873 -1.3049982  3.1561239 -8.571094 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0528 " + "l1=0.0528" + "l2=0 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.6249566 -1.3139483  3.0965443 -8.580214 ]]
Iteration 100 of 1000: loss=0.0232 " + "l1=0.0101" + "l2=0.0131 f=-0.809 shape=(1, 9000, 1)
logits [[ 3.3553705 -1.2770473  3.2547965 -8.567658 ]]
Iteration 200 of 1000: loss=0.012 " + "l1=0" + "l2=0.012 f=-0.811 shape=(1, 9000, 1)
logits [[ 3.289338  -1.260391   3.2895577 -8.562665 ]]
Iteration 300 of 1000: loss=0.00866 " + "l1=0" + "l2=0.00866 f=-0.81 shape=(1, 9000, 1)
logits [[ 3.2909665 -1.2585218  3.29102   -8.562853 ]]
Iteration 400 of 1000: loss=0.00707 " + "l1=7.87e-06" + "l2=0.00706 f=-0.809 shape=(1, 9000, 1)
logits [[ 3.293927  -1.2617927  3.2938483 -8.560544 ]]
Iteration 500 of 1000: loss=0.00592 " + "l1=0" + "l2=0.00592 f=-0.808 shape=(1, 9000, 1)
logits [[ 3.2962122 -1.2656314  3.2969851 -8.557883 ]]
Iteration 600 of 1000: loss=0.00545 " + "l1=0.000305" + "l2=0.00515 f=-0.806 shape=(1, 9000, 1)
logits [[ 3.3018239 -1.2708392  3.2987752 -8.554983 ]]
Iteration 700 of 1000: loss=0.0049 " + "l1=0" + "l2=0.0049 f=-0.806 shape=(1, 9000, 1)
logits [[ 3.3016047 -1.2765378  3.3034587 -8.550676 ]]
Iteration 800 of 1000: loss=0.00461 " + "l1=0" + "l2=0.00461 f=-0.805 shape=(1, 9000, 1)
logits [[ 3.299231  -1.280691   3.3079228 -8.545598 ]]
Iteration 900 of 1000: loss=0.00422 " + "l1=7.2e-06" + "l2=0.00421 f=-0.803 shape=(1, 9000, 1)
logits [[ 3.3060765 -1.2846093  3.3060045 -8.541222 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0291 " + "l1=0.0291" + "l2=0 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.6249566 -1.3139483  3.0965443 -8.580214 ]]
Iteration 100 of 1000: loss=0.0199 " + "l1=0.0159" + "l2=0.00404 f=-0.801 shape=(1, 9000, 1)
logits [[ 3.474376  -1.296437   3.1859555 -8.568887 ]]
Iteration 200 of 1000: loss=0.0157 " + "l1=0.0098" + "l2=0.00595 f=-0.805 shape=(1, 9000, 1)
logits [[ 3.4045856 -1.2810526  3.2263885 -8.570057 ]]
Iteration 300 of 1000: loss=0.0119 " + "l1=0.00422" + "l2=0.00764 f=-0.809 shape=(1, 9000, 1)
logits [[ 3.3398147 -1.2688882  3.2631156 -8.569058 ]]
Iteration 400 of 1000: loss=0.00849 " + "l1=0" + "l2=0.00849 f=-0.81 shape=(1, 9000, 1)
logits [[ 3.2919946 -1.2600752  3.2920191 -8.563689 ]]
Iteration 500 of 1000: loss=0.00688 " + "l1=0" + "l2=0.00688 f=-0.808 shape=(1, 9000, 1)
logits [[ 3.2935054 -1.2612405  3.2943194 -8.560549 ]]
Iteration 600 of 1000: loss=0.00581 " + "l1=2.39e-05" + "l2=0.00578 f=-0.807 shape=(1, 9000, 1)
logits [[ 3.296999  -1.2651178  3.2965646 -8.557588 ]]
Iteration 700 of 1000: loss=0.00508 " + "l1=9.95e-05" + "l2=0.00498 f=-0.806 shape=(1, 9000, 1)
logits [[ 3.301125  -1.271059   3.2993162 -8.554082 ]]
Iteration 800 of 1000: loss=0.00469 " + "l1=0" + "l2=0.00469 f=-0.805 shape=(1, 9000, 1)
logits [[ 3.301264  -1.2770883  3.3036823 -8.549238 ]]
Iteration 900 of 1000: loss=0.00418 " + "l1=0" + "l2=0.00418 f=-0.804 shape=(1, 9000, 1)
logits [[ 3.3034115 -1.2812475  3.3052325 -8.544773 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0172 " + "l1=0.0172" + "l2=0 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.6249566 -1.3139483  3.0965443 -8.580214 ]]
Iteration 100 of 1000: loss=0.0138 " + "l1=0.0122" + "l2=0.00159 f=-0.798 shape=(1, 9000, 1)
logits [[ 3.528514  -1.3044062  3.153317  -8.57115  ]]
Iteration 200 of 1000: loss=0.0125 " + "l1=0.0105" + "l2=0.00201 f=-0.8 shape=(1, 9000, 1)
logits [[ 3.4960515 -1.2986861  3.1730137 -8.570534 ]]
Iteration 300 of 1000: loss=0.0113 " + "l1=0.00867" + "l2=0.0026 f=-0.802 shape=(1, 9000, 1)
logits [[ 3.4606223 -1.2908678  3.1939638 -8.570087 ]]
Iteration 400 of 1000: loss=0.0101 " + "l1=0.00683" + "l2=0.00324 f=-0.803 shape=(1, 9000, 1)
logits [[ 3.4257228 -1.2838765  3.2155263 -8.5704155]]
Iteration 500 of 1000: loss=0.00888 " + "l1=0.00505" + "l2=0.00383 f=-0.805 shape=(1, 9000, 1)
logits [[ 3.3918476 -1.2776288  3.236373  -8.569803 ]]
Iteration 600 of 1000: loss=0.00781 " + "l1=0.00343" + "l2=0.00438 f=-0.806 shape=(1, 9000, 1)
logits [[ 3.3613942 -1.2734162  3.2557693 -8.567215 ]]
Iteration 700 of 1000: loss=0.00672 " + "l1=0.00197" + "l2=0.00475 f=-0.806 shape=(1, 9000, 1)
logits [[ 3.3348174 -1.2712736  3.2741117 -8.563377 ]]
Iteration 800 of 1000: loss=0.00572 " + "l1=0.000504" + "l2=0.00522 f=-0.807 shape=(1, 9000, 1)
logits [[ 3.3087225 -1.271539   3.2932112 -8.558128 ]]
Iteration 900 of 1000: loss=0.00481 " + "l1=4.07e-05" + "l2=0.00477 f=-0.806 shape=(1, 9000, 1)
logits [[ 3.302311  -1.2752384  3.3010595 -8.552495 ]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0112 " + "l1=0.0112" + "l2=0 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.6249566 -1.3139483  3.0965443 -8.580214 ]]
Iteration 100 of 1000: loss=0.00973 " + "l1=0.00897" + "l2=0.000766 f=-0.797 shape=(1, 9000, 1)
logits [[ 3.5581446 -1.3078789  3.1360734 -8.572935 ]]
Iteration 200 of 1000: loss=0.00919 " + "l1=0.00826" + "l2=0.000928 f=-0.798 shape=(1, 9000, 1)
logits [[ 3.5373025 -1.3053844  3.1485505 -8.572413 ]]
Iteration 300 of 1000: loss=0.00871 " + "l1=0.00759" + "l2=0.00112 f=-0.799 shape=(1, 9000, 1)
logits [[ 3.5177622 -1.3020598  3.1603675 -8.57121  ]]
Iteration 400 of 1000: loss=0.00827 " + "l1=0.00692" + "l2=0.00136 f=-0.799 shape=(1, 9000, 1)
logits [[ 3.497912  -1.2980055  3.1724815 -8.570371 ]]
Iteration 500 of 1000: loss=0.00786 " + "l1=0.00623" + "l2=0.00163 f=-0.8 shape=(1, 9000, 1)
logits [[ 3.4784873 -1.294687   3.1851044 -8.569525 ]]
Iteration 600 of 1000: loss=0.00746 " + "l1=0.00555" + "l2=0.00191 f=-0.801 shape=(1, 9000, 1)
logits [[ 3.4592779 -1.2907921  3.1981785 -8.569514 ]]
Iteration 700 of 1000: loss=0.00704 " + "l1=0.00486" + "l2=0.00218 f=-0.801 shape=(1, 9000, 1)
logits [[ 3.440103  -1.288249   3.2112327 -8.568813 ]]
Iteration 800 of 1000: loss=0.00658 " + "l1=0.0042" + "l2=0.00237 f=-0.802 shape=(1, 9000, 1)
logits [[ 3.4217358 -1.2862867  3.2239037 -8.567281 ]]
Iteration 900 of 1000: loss=0.00624 " + "l1=0.00358" + "l2=0.00266 f=-0.802 shape=(1, 9000, 1)
logits [[ 3.4041607 -1.2849598  3.2355773 -8.564542 ]]
--- 281.1572427749634 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.122 " + "l1=0.122" + "l2=0 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.6249566 -1.3139483  3.0965443 -8.580214 ]]
Iteration 100 of 1000: loss=0.121 " + "l1=0.121" + "l2=0.000408 f=-0.788 shape=(1, 9000, 1)
logits [[ 3.5729086 -1.29547    3.082173  -8.51271  ]]
Iteration 200 of 1000: loss=0.121 " + "l1=0.121" + "l2=0.000461 f=-0.787 shape=(1, 9000, 1)
logits [[ 3.560505  -1.2898098  3.0784533 -8.496961 ]]
Iteration 300 of 1000: loss=0.121 " + "l1=0.12" + "l2=0.000591 f=-0.786 shape=(1, 9000, 1)
logits [[ 3.5460842 -1.2842739  3.0742984 -8.478136 ]]
Iteration 400 of 1000: loss=0.121 " + "l1=0.12" + "l2=0.000751 f=-0.784 shape=(1, 9000, 1)
logits [[ 3.531562  -1.2786399  3.0700834 -8.459001 ]]
Iteration 500 of 1000: loss=0.12 " + "l1=0.12" + "l2=0.000914 f=-0.783 shape=(1, 9000, 1)
logits [[ 3.5175867 -1.2733278  3.0661354 -8.440423 ]]
Iteration 600 of 1000: loss=0.12 " + "l1=0.119" + "l2=0.00105 f=-0.781 shape=(1, 9000, 1)
logits [[ 3.504692  -1.2686168  3.062588  -8.423321 ]]
Iteration 700 of 1000: loss=0.12 " + "l1=0.119" + "l2=0.00126 f=-0.78 shape=(1, 9000, 1)
logits [[ 3.4928908 -1.2646514  3.0595386 -8.407281 ]]
Iteration 800 of 1000: loss=0.12 " + "l1=0.119" + "l2=0.00142 f=-0.779 shape=(1, 9000, 1)
logits [[ 3.4817398 -1.2608587  3.056689  -8.392076 ]]
Iteration 900 of 1000: loss=0.12 " + "l1=0.118" + "l2=0.00163 f=-0.777 shape=(1, 9000, 1)
logits [[ 3.4710248 -1.2574703  3.0541875 -8.37745  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.22 " + "l1=1.22" + "l2=0 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.6249566 -1.3139483  3.0965443 -8.580214 ]]
Iteration 100 of 1000: loss=1.15 " + "l1=1.13" + "l2=0.0281 f=-0.747 shape=(1, 9000, 1)
logits [[ 3.2335892 -1.1535805  2.956568  -8.02649  ]]
Iteration 200 of 1000: loss=1.12 " + "l1=1.07" + "l2=0.0461 f=-0.717 shape=(1, 9000, 1)
logits [[ 3.024887  -1.0559416  2.8692625 -7.7064376]]
Iteration 300 of 1000: loss=1.09 " + "l1=1.03" + "l2=0.0627 f=-0.695 shape=(1, 9000, 1)
logits [[ 2.8385127  -0.98198944  2.7937558  -7.428464  ]]
Iteration 400 of 1000: loss=1.06 " + "l1=0.983" + "l2=0.0773 f=-0.671 shape=(1, 9000, 1)
logits [[ 2.688661  -0.9235061  2.6884456 -7.138931 ]]
Iteration 500 of 1000: loss=1.03 " + "l1=0.942" + "l2=0.0898 f=-0.648 shape=(1, 9000, 1)
logits [[ 2.5672202  -0.87440026  2.5643158  -6.8504763 ]]
Iteration 600 of 1000: loss=1 " + "l1=0.903" + "l2=0.0997 f=-0.629 shape=(1, 9000, 1)
logits [[ 2.4512525  -0.84572667  2.45281    -6.5742674 ]]
Iteration 700 of 1000: loss=0.97 " + "l1=0.859" + "l2=0.111 f=-0.605 shape=(1, 9000, 1)
logits [[ 2.3330505  -0.83440185  2.3335068  -6.252861  ]]
Iteration 800 of 1000: loss=0.928 " + "l1=0.805" + "l2=0.123 f=-0.567 shape=(1, 9000, 1)
logits [[ 2.2137012  -0.86161083  2.2161088  -5.8365064 ]]
Iteration 900 of 1000: loss=0.879 " + "l1=0.744" + "l2=0.135 f=-0.518 shape=(1, 9000, 1)
logits [[ 2.110836  -0.9617071  2.111018  -5.3326373]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.2 " + "l1=12.2" + "l2=0 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.6249566 -1.3139483  3.0965443 -8.580214 ]]
Iteration 100 of 1000: loss=7.69 " + "l1=6.06" + "l2=1.63 f=-0.489 shape=(1, 9000, 1)
logits [[ 1.3682896 -0.6052642  1.6708429 -4.389937 ]]
Iteration 200 of 1000: loss=5.03 " + "l1=2.67" + "l2=2.36 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.03315784 -0.25025848  0.8707037  -1.803492  ]]
Iteration 300 of 1000: loss=3.14 " + "l1=0.309" + "l2=2.83 f=-0.152 shape=(1, 9000, 1)
logits [[-0.8058987  -0.15941711  0.33320564  0.02415252]]
Iteration 400 of 1000: loss=2.24 " + "l1=0.0197" + "l2=2.22 f=-0.169 shape=(1, 9000, 1)
logits [[-0.89996976 -0.21141338  0.22731958  0.20765704]]
Iteration 500 of 1000: loss=1.89 " + "l1=0.00815" + "l2=1.89 f=-0.185 shape=(1, 9000, 1)
logits [[-0.9086164  -0.26329106  0.21980377  0.21165103]]
Iteration 600 of 1000: loss=1.7 " + "l1=0" + "l2=1.7 f=-0.19 shape=(1, 9000, 1)
logits [[-0.9136041  -0.32085097  0.23016931  0.24247745]]
Iteration 700 of 1000: loss=1.57 " + "l1=0.0168" + "l2=1.56 f=-0.196 shape=(1, 9000, 1)
logits [[-0.903753   -0.37051743  0.25284576  0.23599926]]
Iteration 800 of 1000: loss=1.45 " + "l1=0" + "l2=1.45 f=-0.196 shape=(1, 9000, 1)
logits [[-0.8863163  -0.4350222   0.26667884  0.26904812]]
Iteration 900 of 1000: loss=1.34 " + "l1=0" + "l2=1.34 f=-0.194 shape=(1, 9000, 1)
logits [[-0.8538454  -0.4979123   0.2806712   0.29337728]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.71 " + "l1=6.71" + "l2=0 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.6249566 -1.3139483  3.0965443 -8.580214 ]]
Iteration 100 of 1000: loss=5.01 " + "l1=4.4" + "l2=0.606 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.16465   -0.7886336  2.170866  -5.832601 ]]
Iteration 200 of 1000: loss=4.07 " + "l1=3.19" + "l2=0.883 f=-0.449 shape=(1, 9000, 1)
logits [[ 1.4144866  -0.70429236  1.6474143  -4.1528997 ]]
Iteration 300 of 1000: loss=3.13 " + "l1=1.98" + "l2=1.15 f=-0.295 shape=(1, 9000, 1)
logits [[ 0.66840553 -0.51911765  1.1306586  -2.4615448 ]]
Iteration 400 of 1000: loss=2.43 " + "l1=1.03" + "l2=1.4 f=-0.208 shape=(1, 9000, 1)
logits [[-0.11867173 -0.30843213  0.7299549  -1.1367415 ]]
Iteration 500 of 1000: loss=1.86 " + "l1=0.217" + "l2=1.64 f=-0.181 shape=(1, 9000, 1)
logits [[-0.7727603  -0.18044783  0.31261322 -0.08192311]]
Iteration 600 of 1000: loss=1.48 " + "l1=0" + "l2=1.48 f=-0.183 shape=(1, 9000, 1)
logits [[-0.906533   -0.27790055  0.2229914   0.23136765]]
Iteration 700 of 1000: loss=1.3 " + "l1=0.00366" + "l2=1.29 f=-0.186 shape=(1, 9000, 1)
logits [[-0.8754252  -0.37743956  0.257811    0.25115407]]
Iteration 800 of 1000: loss=1.13 " + "l1=0" + "l2=1.13 f=-0.185 shape=(1, 9000, 1)
logits [[-0.8418733  -0.45296687  0.2705445   0.28357714]]
Iteration 900 of 1000: loss=0.967 " + "l1=0" + "l2=0.967 f=-0.193 shape=(1, 9000, 1)
logits [[-0.755139   -0.56570226  0.27419785  0.27642253]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.97 " + "l1=3.97" + "l2=0 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.6249566 -1.3139483  3.0965443 -8.580214 ]]
Iteration 100 of 1000: loss=3.27 " + "l1=2.98" + "l2=0.29 f=-0.629 shape=(1, 9000, 1)
logits [[ 2.4909806  -0.82677966  2.4934525  -6.674026  ]]
Iteration 200 of 1000: loss=2.92 " + "l1=2.53" + "l2=0.384 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.1265354 -0.8242284  2.129013  -5.6645174]]
Iteration 300 of 1000: loss=2.55 " + "l1=2.06" + "l2=0.488 f=-0.465 shape=(1, 9000, 1)
logits [[ 1.7126195 -0.8258981  1.8025175 -4.549612 ]]
Iteration 400 of 1000: loss=2.18 " + "l1=1.6" + "l2=0.59 f=-0.345 shape=(1, 9000, 1)
logits [[ 1.329474  -0.8211456  1.5109619 -3.397845 ]]
Iteration 500 of 1000: loss=1.93 " + "l1=1.28" + "l2=0.65 f=-0.279 shape=(1, 9000, 1)
logits [[ 0.9434469  -0.79340553  1.3352472  -2.5993443 ]]
Iteration 600 of 1000: loss=1.74 " + "l1=1.03" + "l2=0.716 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.6053903 -0.7402301  1.1748774 -1.9848398]]
Iteration 700 of 1000: loss=1.55 " + "l1=0.729" + "l2=0.822 f=-0.197 shape=(1, 9000, 1)
logits [[ 0.16637686 -0.62402165  0.95697147 -1.2859255 ]]
Iteration 800 of 1000: loss=1.33 " + "l1=0.387" + "l2=0.943 f=-0.198 shape=(1, 9000, 1)
logits [[-0.4476393  -0.40617567  0.6261492  -0.5635081 ]]
Iteration 900 of 1000: loss=1.08 " + "l1=0.065" + "l2=1.01 f=-0.203 shape=(1, 9000, 1)
logits [[-0.91382897 -0.29815316  0.3007942   0.10086336]]
--- 292.59565472602844 seconds ---
Adv result:3
Loading record A02474
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0381 " + "l1=0.0381" + "l2=0 f=-0.219 shape=(1, 9000, 1)
logits [[ 1.947842  -1.8656079  1.7544457 -2.7143993]]
Iteration 100 of 1000: loss=0.0375 " + "l1=0.0372" + "l2=0.000334 f=-0.219 shape=(1, 9000, 1)
logits [[ 1.8960726 -1.8251349  1.7231536 -2.670553 ]]
Iteration 200 of 1000: loss=0.0373 " + "l1=0.037" + "l2=0.000349 f=-0.219 shape=(1, 9000, 1)
logits [[ 1.8824748 -1.8158629  1.7166773 -2.6595917]]
Iteration 300 of 1000: loss=0.0372 " + "l1=0.0367" + "l2=0.000444 f=-0.219 shape=(1, 9000, 1)
logits [[ 1.8661036 -1.8058109  1.7093707 -2.6447978]]
Iteration 400 of 1000: loss=0.037 " + "l1=0.0365" + "l2=0.000505 f=-0.219 shape=(1, 9000, 1)
logits [[ 1.849832  -1.7961918  1.7022924 -2.630041 ]]
Iteration 500 of 1000: loss=0.0368 " + "l1=0.0362" + "l2=0.000627 f=-0.218 shape=(1, 9000, 1)
logits [[ 1.8343886 -1.7875543  1.6957985 -2.6158757]]
Iteration 600 of 1000: loss=0.0367 " + "l1=0.036" + "l2=0.000722 f=-0.218 shape=(1, 9000, 1)
logits [[ 1.8197758 -1.7788743  1.6895266 -2.6028092]]
Iteration 700 of 1000: loss=0.0367 " + "l1=0.0358" + "l2=0.000895 f=-0.218 shape=(1, 9000, 1)
logits [[ 1.8064739 -1.7717263  1.684282  -2.5904117]]
Iteration 800 of 1000: loss=0.0366 " + "l1=0.0356" + "l2=0.000987 f=-0.218 shape=(1, 9000, 1)
logits [[ 1.7942379 -1.7652544  1.6797229 -2.579397 ]]
Iteration 900 of 1000: loss=0.0365 " + "l1=0.0354" + "l2=0.00112 f=-0.217 shape=(1, 9000, 1)
logits [[ 1.7826427 -1.7591441  1.6753162 -2.5687683]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.381 " + "l1=0.381" + "l2=0 f=-0.219 shape=(1, 9000, 1)
logits [[ 1.947842  -1.8656079  1.7544457 -2.7143993]]
Iteration 100 of 1000: loss=0.336 " + "l1=0.314" + "l2=0.0219 f=-0.222 shape=(1, 9000, 1)
logits [[ 1.583642  -1.5546354  1.4977126 -2.4161627]]
Iteration 200 of 1000: loss=0.318 " + "l1=0.289" + "l2=0.0288 f=-0.226 shape=(1, 9000, 1)
logits [[ 1.4294908 -1.4584047  1.4066124 -2.2831762]]
Iteration 300 of 1000: loss=0.301 " + "l1=0.264" + "l2=0.0368 f=-0.228 shape=(1, 9000, 1)
logits [[ 1.2933352 -1.3481029  1.2926322 -2.1501622]]
Iteration 400 of 1000: loss=0.287 " + "l1=0.245" + "l2=0.0416 f=-0.226 shape=(1, 9000, 1)
logits [[ 1.1996659 -1.2511308  1.1998229 -2.0509744]]
Iteration 500 of 1000: loss=0.276 " + "l1=0.229" + "l2=0.0467 f=-0.221 shape=(1, 9000, 1)
logits [[ 1.114441  -1.1726116  1.1160359 -1.9426122]]
Iteration 600 of 1000: loss=0.265 " + "l1=0.212" + "l2=0.0527 f=-0.214 shape=(1, 9000, 1)
logits [[ 1.0270646 -1.0921344  1.0287708 -1.8197271]]
Iteration 700 of 1000: loss=0.251 " + "l1=0.188" + "l2=0.0634 f=-0.209 shape=(1, 9000, 1)
logits [[ 0.9041332  -0.97414577  0.90247184 -1.6668655 ]]
Iteration 800 of 1000: loss=0.233 " + "l1=0.157" + "l2=0.0761 f=-0.205 shape=(1, 9000, 1)
logits [[ 0.75009155 -0.8154916   0.75041926 -1.5069139 ]]
Iteration 900 of 1000: loss=0.222 " + "l1=0.142" + "l2=0.0791 f=-0.198 shape=(1, 9000, 1)
logits [[ 0.67674243 -0.74714303  0.6755313  -1.3980721 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.81 " + "l1=3.81" + "l2=0 f=-0.219 shape=(1, 9000, 1)
logits [[ 1.947842  -1.8656079  1.7544457 -2.7143993]]
Iteration 100 of 1000: loss=0.784 " + "l1=0" + "l2=0.784 f=-0.374 shape=(1, 9000, 1)
logits [[-0.19778767  0.1903113   0.1878798  -1.6753684 ]]
Iteration 200 of 1000: loss=0.549 " + "l1=0.00165" + "l2=0.547 f=-0.376 shape=(1, 9000, 1)
logits [[-0.1598239   0.18974906  0.19140135 -1.7246981 ]]
Iteration 300 of 1000: loss=0.475 " + "l1=0.00545" + "l2=0.469 f=-0.374 shape=(1, 9000, 1)
logits [[-0.16383886  0.18210325  0.18755619 -1.7028756 ]]
Iteration 400 of 1000: loss=0.425 " + "l1=0" + "l2=0.425 f=-0.374 shape=(1, 9000, 1)
logits [[-0.16551095  0.17920925  0.17853299 -1.6872908 ]]
Iteration 500 of 1000: loss=0.393 " + "l1=0" + "l2=0.393 f=-0.37 shape=(1, 9000, 1)
logits [[-0.16549869  0.17799373  0.16680668 -1.6603553 ]]
Iteration 600 of 1000: loss=0.366 " + "l1=0" + "l2=0.366 f=-0.364 shape=(1, 9000, 1)
logits [[-0.15950778  0.16409603  0.15448567 -1.6155285 ]]
Iteration 700 of 1000: loss=0.349 " + "l1=0" + "l2=0.349 f=-0.356 shape=(1, 9000, 1)
logits [[-0.14698552  0.15068617  0.14054726 -1.5691762 ]]
Iteration 800 of 1000: loss=0.34 " + "l1=0" + "l2=0.34 f=-0.35 shape=(1, 9000, 1)
logits [[-0.15723653  0.15349014  0.12399781 -1.5183748 ]]
Iteration 900 of 1000: loss=0.327 " + "l1=0" + "l2=0.327 f=-0.339 shape=(1, 9000, 1)
logits [[-0.14970481  0.14429078  0.12437072 -1.4733498 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.1 " + "l1=2.1" + "l2=0 f=-0.219 shape=(1, 9000, 1)
logits [[ 1.947842  -1.8656079  1.7544457 -2.7143993]]
Iteration 100 of 1000: loss=0.846 " + "l1=0.303" + "l2=0.543 f=-0.306 shape=(1, 9000, 1)
logits [[ 0.27990854 -0.1837553   0.3669476  -1.6856894 ]]
Iteration 200 of 1000: loss=0.527 " + "l1=0.011" + "l2=0.516 f=-0.354 shape=(1, 9000, 1)
logits [[-0.20156215  0.1530491   0.17311929 -1.5423425 ]]
Iteration 300 of 1000: loss=0.429 " + "l1=0.00487" + "l2=0.424 f=-0.349 shape=(1, 9000, 1)
logits [[-0.22146496  0.13541019  0.1442568  -1.4538085 ]]
Iteration 400 of 1000: loss=0.377 " + "l1=0.00262" + "l2=0.374 f=-0.338 shape=(1, 9000, 1)
logits [[-0.21387339  0.12434528  0.12911467 -1.390634  ]]
Iteration 500 of 1000: loss=0.342 " + "l1=0.000296" + "l2=0.341 f=-0.325 shape=(1, 9000, 1)
logits [[-0.20604162  0.11821609  0.11875349 -1.3309302 ]]
Iteration 600 of 1000: loss=0.32 " + "l1=0" + "l2=0.32 f=-0.318 shape=(1, 9000, 1)
logits [[-0.19856998  0.11604998  0.10620538 -1.2971268 ]]
Iteration 700 of 1000: loss=0.308 " + "l1=0.0104" + "l2=0.297 f=-0.304 shape=(1, 9000, 1)
logits [[-0.15744308  0.09731165  0.11617947 -1.2706985 ]]
Iteration 800 of 1000: loss=0.287 " + "l1=0" + "l2=0.287 f=-0.294 shape=(1, 9000, 1)
logits [[-0.1590502   0.10877687  0.10656714 -1.2310964 ]]
Iteration 900 of 1000: loss=0.275 " + "l1=0.00135" + "l2=0.273 f=-0.28 shape=(1, 9000, 1)
logits [[-0.1328838   0.09963148  0.10208219 -1.1904409 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.24 " + "l1=1.24" + "l2=0 f=-0.219 shape=(1, 9000, 1)
logits [[ 1.947842  -1.8656079  1.7544457 -2.7143993]]
Iteration 100 of 1000: loss=0.798 " + "l1=0.567" + "l2=0.231 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.88463694 -0.8590774   0.88702524 -1.9057729 ]]
Iteration 200 of 1000: loss=0.568 " + "l1=0.261" + "l2=0.307 f=-0.27 shape=(1, 9000, 1)
logits [[ 0.4154392  -0.3574115   0.44563222 -1.5844136 ]]
Iteration 300 of 1000: loss=0.467 " + "l1=0.141" + "l2=0.327 f=-0.289 shape=(1, 9000, 1)
logits [[ 0.1480131  -0.13630703  0.29600167 -1.4647126 ]]
Iteration 400 of 1000: loss=0.4 " + "l1=0.0533" + "l2=0.347 f=-0.312 shape=(1, 9000, 1)
logits [[-0.12187241  0.0187041   0.18266748 -1.3282977 ]]
Iteration 500 of 1000: loss=0.343 " + "l1=0.00325" + "l2=0.34 f=-0.306 shape=(1, 9000, 1)
logits [[-0.2924827   0.0859721   0.09597546 -1.113382  ]]
Iteration 600 of 1000: loss=0.307 " + "l1=0.00222" + "l2=0.305 f=-0.286 shape=(1, 9000, 1)
logits [[-0.29690015  0.07398796  0.08082752 -1.0029373 ]]
Iteration 700 of 1000: loss=0.282 " + "l1=0" + "l2=0.282 f=-0.267 shape=(1, 9000, 1)
logits [[-0.3007144   0.06677523  0.05884425 -0.89450455]]
Iteration 800 of 1000: loss=0.263 " + "l1=0.00325" + "l2=0.26 f=-0.253 shape=(1, 9000, 1)
logits [[-0.28404936  0.04029877  0.05028846 -0.816825  ]]
Iteration 900 of 1000: loss=0.25 " + "l1=0.000662" + "l2=0.249 f=-0.24 shape=(1, 9000, 1)
logits [[-0.2985065   0.03733983  0.03937818 -0.7377996 ]]
--- 293.1259307861328 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00193 " + "l1=0.00193" + "l2=0 f=-0.219 shape=(1, 9000, 1)
logits [[ 1.947842  -1.8656079  1.7544457 -2.7143993]]
Iteration 100 of 1000: loss=0.00171 " + "l1=0.00156" + "l2=0.00015 f=-0.22 shape=(1, 9000, 1)
logits [[ 1.9165171 -1.868917   1.7606875 -2.6886435]]
Iteration 200 of 1000: loss=0.00163 " + "l1=0.00149" + "l2=0.000137 f=-0.22 shape=(1, 9000, 1)
logits [[ 1.9106691 -1.8688523  1.7613668 -2.6844146]]
Iteration 300 of 1000: loss=0.00159 " + "l1=0.0014" + "l2=0.000185 f=-0.221 shape=(1, 9000, 1)
logits [[ 1.9020288 -1.8685378  1.7619505 -2.6774693]]
Iteration 400 of 1000: loss=0.00154 " + "l1=0.0013" + "l2=0.000238 f=-0.221 shape=(1, 9000, 1)
logits [[ 1.8925649 -1.8681439  1.7623252 -2.6695347]]
Iteration 500 of 1000: loss=0.0015 " + "l1=0.00121" + "l2=0.000297 f=-0.221 shape=(1, 9000, 1)
logits [[ 1.8831766 -1.8677514  1.7625453 -2.6613984]]
Iteration 600 of 1000: loss=0.00148 " + "l1=0.00112" + "l2=0.000367 f=-0.221 shape=(1, 9000, 1)
logits [[ 1.8743784 -1.8671414  1.7627583 -2.654251 ]]
Iteration 700 of 1000: loss=0.00144 " + "l1=0.00103" + "l2=0.000409 f=-0.221 shape=(1, 9000, 1)
logits [[ 1.8657091 -1.8666459  1.763046  -2.6471655]]
Iteration 800 of 1000: loss=0.00146 " + "l1=0.000939" + "l2=0.000517 f=-0.221 shape=(1, 9000, 1)
logits [[ 1.8570482 -1.86613    1.7631794 -2.6400554]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0193 " + "l1=0.0193" + "l2=0 f=-0.219 shape=(1, 9000, 1)
logits [[ 1.947842  -1.8656079  1.7544457 -2.7143993]]
Iteration 100 of 1000: loss=0.00412 " + "l1=0.000124" + "l2=0.004 f=-0.225 shape=(1, 9000, 1)
logits [[ 1.7872646 -1.8902661  1.7860227 -2.5821605]]
Iteration 200 of 1000: loss=0.00235 " + "l1=0" + "l2=0.00235 f=-0.225 shape=(1, 9000, 1)
logits [[ 1.7751044 -1.8796006  1.7765697 -2.5712082]]
Iteration 300 of 1000: loss=0.00173 " + "l1=0" + "l2=0.00173 f=-0.225 shape=(1, 9000, 1)
logits [[ 1.7711835 -1.87432    1.771623  -2.5666938]]
Iteration 400 of 1000: loss=0.00144 " + "l1=0" + "l2=0.00144 f=-0.224 shape=(1, 9000, 1)
logits [[ 1.7674545 -1.871387   1.76845   -2.5617127]]
Iteration 500 of 1000: loss=0.00132 " + "l1=0.0001" + "l2=0.00122 f=-0.224 shape=(1, 9000, 1)
logits [[ 1.7662418 -1.8677189  1.7652395 -2.559583 ]]
Iteration 600 of 1000: loss=0.00127 " + "l1=5.17e-05" + "l2=0.00122 f=-0.224 shape=(1, 9000, 1)
logits [[ 1.764826  -1.8657453  1.764309  -2.5585477]]
Iteration 700 of 1000: loss=0.00126 " + "l1=0" + "l2=0.00126 f=-0.224 shape=(1, 9000, 1)
logits [[ 1.7632997 -1.8651671  1.7650591 -2.5582957]]
Iteration 800 of 1000: loss=0.00109 " + "l1=0" + "l2=0.00109 f=-0.224 shape=(1, 9000, 1)
logits [[ 1.7634184 -1.8642884  1.7647717 -2.5589843]]
Iteration 900 of 1000: loss=0.00123 " + "l1=0" + "l2=0.00123 f=-0.224 shape=(1, 9000, 1)
logits [[ 1.763175  -1.8643521  1.7651772 -2.5594854]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0106 " + "l1=0.0106" + "l2=0 f=-0.219 shape=(1, 9000, 1)
logits [[ 1.947842  -1.8656079  1.7544457 -2.7143993]]
Iteration 100 of 1000: loss=0.00518 " + "l1=0.00296" + "l2=0.00223 f=-0.223 shape=(1, 9000, 1)
logits [[ 1.8342246 -1.8829962  1.7804618 -2.6235235]]
Iteration 200 of 1000: loss=0.00279 " + "l1=2.49e-05" + "l2=0.00276 f=-0.225 shape=(1, 9000, 1)
logits [[ 1.7815624 -1.883568   1.7811089 -2.579834 ]]
Iteration 300 of 1000: loss=0.00187 " + "l1=3.34e-05" + "l2=0.00184 f=-0.225 shape=(1, 9000, 1)
logits [[ 1.7737857 -1.8759843  1.7731776 -2.5700104]]
Iteration 400 of 1000: loss=0.00149 " + "l1=0" + "l2=0.00149 f=-0.224 shape=(1, 9000, 1)
logits [[ 1.7691848 -1.8727267  1.7693714 -2.5635855]]
Iteration 500 of 1000: loss=0.00129 " + "l1=1e-05" + "l2=0.00128 f=-0.224 shape=(1, 9000, 1)
logits [[ 1.7663705 -1.8692957  1.766188  -2.5596766]]
Iteration 600 of 1000: loss=0.00122 " + "l1=1.23e-05" + "l2=0.00121 f=-0.224 shape=(1, 9000, 1)
logits [[ 1.7649202 -1.8669219  1.7646961 -2.5582488]]
Iteration 700 of 1000: loss=0.00123 " + "l1=0" + "l2=0.00123 f=-0.224 shape=(1, 9000, 1)
logits [[ 1.7643054 -1.8654824  1.7644255 -2.5584376]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00629 " + "l1=0.00629" + "l2=0 f=-0.219 shape=(1, 9000, 1)
logits [[ 1.947842  -1.8656079  1.7544457 -2.7143993]]
Iteration 100 of 1000: loss=0.00424 " + "l1=0.00332" + "l2=0.00092 f=-0.221 shape=(1, 9000, 1)
logits [[ 1.874584  -1.8772018  1.7724754 -2.6545622]]
Iteration 200 of 1000: loss=0.00344 " + "l1=0.00229" + "l2=0.00115 f=-0.222 shape=(1, 9000, 1)
logits [[ 1.8451359 -1.8773828  1.7747416 -2.6317625]]
Iteration 300 of 1000: loss=0.00268 " + "l1=0.00123" + "l2=0.00145 f=-0.224 shape=(1, 9000, 1)
logits [[ 1.813306  -1.8772042  1.7754651 -2.605796 ]]
Iteration 400 of 1000: loss=0.00194 " + "l1=0.00017" + "l2=0.00177 f=-0.225 shape=(1, 9000, 1)
logits [[ 1.7802557 -1.8766524  1.7750235 -2.5768108]]
Iteration 500 of 1000: loss=0.0015 " + "l1=1.1e-05" + "l2=0.00149 f=-0.224 shape=(1, 9000, 1)
logits [[ 1.7702289 -1.8723265  1.7698917 -2.5654266]]
Iteration 600 of 1000: loss=0.00124 " + "l1=5.84e-06" + "l2=0.00124 f=-0.224 shape=(1, 9000, 1)
logits [[ 1.7667861 -1.8689795  1.7666065 -2.5608552]]
Iteration 700 of 1000: loss=0.00128 " + "l1=0" + "l2=0.00128 f=-0.224 shape=(1, 9000, 1)
logits [[ 1.7651731 -1.8666679  1.7652005 -2.5593145]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00411 " + "l1=0.00411" + "l2=0 f=-0.219 shape=(1, 9000, 1)
logits [[ 1.947842  -1.8656079  1.7544457 -2.7143993]]
Iteration 100 of 1000: loss=0.00318 " + "l1=0.00272" + "l2=0.000458 f=-0.221 shape=(1, 9000, 1)
logits [[ 1.8952136 -1.8733171  1.7671014 -2.671635 ]]
Iteration 200 of 1000: loss=0.00284 " + "l1=0.00231" + "l2=0.00053 f=-0.221 shape=(1, 9000, 1)
logits [[ 1.8776054 -1.8738171  1.768896  -2.6574419]]
Iteration 300 of 1000: loss=0.00253 " + "l1=0.00188" + "l2=0.00065 f=-0.222 shape=(1, 9000, 1)
logits [[ 1.8582255 -1.8733898  1.7699426 -2.641867 ]]
Iteration 400 of 1000: loss=0.00224 " + "l1=0.00144" + "l2=0.000806 f=-0.222 shape=(1, 9000, 1)
logits [[ 1.83739   -1.8729513  1.7698343 -2.6237726]]
Iteration 500 of 1000: loss=0.00196 " + "l1=0.000999" + "l2=0.000966 f=-0.223 shape=(1, 9000, 1)
logits [[ 1.8168695 -1.8722185  1.7698772 -2.6060798]]
Iteration 600 of 1000: loss=0.0017 " + "l1=0.000564" + "l2=0.00114 f=-0.223 shape=(1, 9000, 1)
logits [[ 1.7969606 -1.8720576  1.7704036 -2.5891633]]
Iteration 700 of 1000: loss=0.00142 " + "l1=0.000174" + "l2=0.00124 f=-0.224 shape=(1, 9000, 1)
logits [[ 1.7782365 -1.8715943  1.7700281 -2.5727892]]
Iteration 800 of 1000: loss=0.00124 " + "l1=0" + "l2=0.00124 f=-0.224 shape=(1, 9000, 1)
logits [[ 1.7678297 -1.8688537  1.7679231 -2.5631835]]
Iteration 900 of 1000: loss=0.00123 " + "l1=1.38e-05" + "l2=0.00122 f=-0.224 shape=(1, 9000, 1)
logits [[ 1.7669381 -1.8664433  1.7662907 -2.562352 ]]
--- 241.6512906551361 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0466 " + "l1=0.0466" + "l2=0 f=-0.219 shape=(1, 9000, 1)
logits [[ 1.947842  -1.8656079  1.7544457 -2.7143993]]
Iteration 100 of 1000: loss=0.0454 " + "l1=0.0449" + "l2=0.000559 f=-0.218 shape=(1, 9000, 1)
logits [[ 1.8711946 -1.8494581  1.722696  -2.616269 ]]
Iteration 200 of 1000: loss=0.045 " + "l1=0.0443" + "l2=0.000646 f=-0.218 shape=(1, 9000, 1)
logits [[ 1.8462454 -1.8448508  1.7125803 -2.5858948]]
Iteration 300 of 1000: loss=0.0446 " + "l1=0.0437" + "l2=0.000854 f=-0.218 shape=(1, 9000, 1)
logits [[ 1.8184772 -1.8401539  1.7024724 -2.5520842]]
Iteration 400 of 1000: loss=0.0442 " + "l1=0.0431" + "l2=0.00106 f=-0.218 shape=(1, 9000, 1)
logits [[ 1.7928085 -1.8354874  1.6936523 -2.522065 ]]
Iteration 500 of 1000: loss=0.0439 " + "l1=0.0426" + "l2=0.0013 f=-0.218 shape=(1, 9000, 1)
logits [[ 1.7676821 -1.8301549  1.684408  -2.493831 ]]
Iteration 600 of 1000: loss=0.0436 " + "l1=0.0421" + "l2=0.00149 f=-0.218 shape=(1, 9000, 1)
logits [[ 1.7441928 -1.824953   1.6759309 -2.467161 ]]
Iteration 700 of 1000: loss=0.0434 " + "l1=0.0416" + "l2=0.00171 f=-0.218 shape=(1, 9000, 1)
logits [[ 1.7217914 -1.8202466  1.6685479 -2.4421194]]
Iteration 800 of 1000: loss=0.0431 " + "l1=0.0412" + "l2=0.00192 f=-0.218 shape=(1, 9000, 1)
logits [[ 1.7013162 -1.8166196  1.6622541 -2.4194212]]
Iteration 900 of 1000: loss=0.043 " + "l1=0.0408" + "l2=0.00219 f=-0.218 shape=(1, 9000, 1)
logits [[ 1.6819323 -1.8135728  1.656223  -2.3970628]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.466 " + "l1=0.466" + "l2=0 f=-0.219 shape=(1, 9000, 1)
logits [[ 1.947842  -1.8656079  1.7544457 -2.7143993]]
Iteration 100 of 1000: loss=0.375 " + "l1=0.34" + "l2=0.0351 f=-0.226 shape=(1, 9000, 1)
logits [[ 1.4086164 -1.7330033  1.4096656 -1.9895087]]
Iteration 200 of 1000: loss=0.336 " + "l1=0.286" + "l2=0.0495 f=-0.223 shape=(1, 9000, 1)
logits [[ 1.1680267 -1.6310852  1.215675  -1.6461788]]
Iteration 300 of 1000: loss=0.305 " + "l1=0.243" + "l2=0.0618 f=-0.219 shape=(1, 9000, 1)
logits [[ 0.9490789 -1.5342302  1.0693268 -1.3605039]]
Iteration 400 of 1000: loss=0.279 " + "l1=0.206" + "l2=0.0736 f=-0.203 shape=(1, 9000, 1)
logits [[ 0.78423584 -1.4274459   0.9427511  -1.1123891 ]]
Iteration 500 of 1000: loss=0.257 " + "l1=0.174" + "l2=0.0833 f=-0.188 shape=(1, 9000, 1)
logits [[ 0.64312875 -1.3335364   0.83878297 -0.90233594]]
Iteration 600 of 1000: loss=0.238 " + "l1=0.147" + "l2=0.0915 f=-0.184 shape=(1, 9000, 1)
logits [[ 0.50532067 -1.2563555   0.74171615 -0.7260863 ]]
Iteration 700 of 1000: loss=0.216 " + "l1=0.118" + "l2=0.098 f=-0.168 shape=(1, 9000, 1)
logits [[ 0.38939884 -1.1591593   0.6393487  -0.5429147 ]]
Iteration 800 of 1000: loss=0.198 " + "l1=0.0977" + "l2=0.1 f=-0.166 shape=(1, 9000, 1)
logits [[ 0.27574793 -1.100724    0.5684628  -0.40806085]]
Iteration 900 of 1000: loss=0.185 " + "l1=0.0824" + "l2=0.102 f=-0.167 shape=(1, 9000, 1)
logits [[ 0.1829736  -1.0712256   0.5221694  -0.30217296]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.66 " + "l1=4.66" + "l2=0 f=-0.219 shape=(1, 9000, 1)
logits [[ 1.947842  -1.8656079  1.7544457 -2.7143993]]
Iteration 100 of 1000: loss=0.847 " + "l1=0.0022" + "l2=0.845 f=-0.202 shape=(1, 9000, 1)
logits [[-0.43310484 -0.7185031   0.17228289  0.17008469]]
Iteration 200 of 1000: loss=0.525 " + "l1=0" + "l2=0.525 f=-0.207 shape=(1, 9000, 1)
logits [[-0.4778653  -0.7260418   0.17784585  0.19823587]]
Iteration 300 of 1000: loss=0.404 " + "l1=0.0131" + "l2=0.391 f=-0.2 shape=(1, 9000, 1)
logits [[-0.46035767 -0.73172593  0.20188674  0.1888012 ]]
Iteration 400 of 1000: loss=0.341 " + "l1=0.00904" + "l2=0.332 f=-0.191 shape=(1, 9000, 1)
logits [[-0.44109297 -0.74324286  0.21392995  0.20488712]]
Iteration 500 of 1000: loss=0.301 " + "l1=0" + "l2=0.301 f=-0.183 shape=(1, 9000, 1)
logits [[-0.43522486 -0.7442803   0.21261215  0.23338786]]
Iteration 600 of 1000: loss=0.27 " + "l1=0" + "l2=0.27 f=-0.172 shape=(1, 9000, 1)
logits [[-0.38935134 -0.7592069   0.22841442  0.2334423 ]]
Iteration 700 of 1000: loss=0.25 " + "l1=0" + "l2=0.25 f=-0.163 shape=(1, 9000, 1)
logits [[-0.3733671  -0.7684256   0.23651217  0.25204548]]
Iteration 800 of 1000: loss=0.234 " + "l1=0" + "l2=0.234 f=-0.156 shape=(1, 9000, 1)
logits [[-0.3562816  -0.7747611   0.2437416   0.26433918]]
Iteration 900 of 1000: loss=0.219 " + "l1=0" + "l2=0.219 f=-0.151 shape=(1, 9000, 1)
logits [[-0.3388567  -0.7843398   0.25434583  0.2655096 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.56 " + "l1=2.56" + "l2=0 f=-0.219 shape=(1, 9000, 1)
logits [[ 1.947842  -1.8656079  1.7544457 -2.7143993]]
Iteration 100 of 1000: loss=0.852 " + "l1=0.249" + "l2=0.603 f=-0.188 shape=(1, 9000, 1)
logits [[-0.1150413  -0.8992838   0.35819626 -0.09415808]]
Iteration 200 of 1000: loss=0.433 " + "l1=0" + "l2=0.433 f=-0.198 shape=(1, 9000, 1)
logits [[-0.45391366 -0.76790893  0.21234572  0.21939838]]
Iteration 300 of 1000: loss=0.333 " + "l1=0.00128" + "l2=0.332 f=-0.193 shape=(1, 9000, 1)
logits [[-0.4344639  -0.77053946  0.21787398  0.21553865]]
Iteration 400 of 1000: loss=0.285 " + "l1=0.00261" + "l2=0.282 f=-0.181 shape=(1, 9000, 1)
logits [[-0.39351892 -0.7718542   0.22302489  0.2182796 ]]
Iteration 500 of 1000: loss=0.252 " + "l1=0.00326" + "l2=0.249 f=-0.168 shape=(1, 9000, 1)
logits [[-0.35963172 -0.7745784   0.23352285  0.22759336]]
Iteration 600 of 1000: loss=0.224 " + "l1=0" + "l2=0.224 f=-0.159 shape=(1, 9000, 1)
logits [[-0.341868   -0.7763905   0.2394857   0.24213889]]
Iteration 700 of 1000: loss=0.21 " + "l1=0" + "l2=0.21 f=-0.153 shape=(1, 9000, 1)
logits [[-0.34318507 -0.7826479   0.24285737  0.26996735]]
Iteration 800 of 1000: loss=0.197 " + "l1=0" + "l2=0.197 f=-0.148 shape=(1, 9000, 1)
logits [[-0.3331891  -0.79564536  0.25434694  0.28098524]]
Iteration 900 of 1000: loss=0.183 " + "l1=0.00319" + "l2=0.18 f=-0.145 shape=(1, 9000, 1)
logits [[-0.30048168 -0.8090258   0.2677483   0.26194254]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.52 " + "l1=1.52" + "l2=0 f=-0.219 shape=(1, 9000, 1)
logits [[ 1.947842  -1.8656079  1.7544457 -2.7143993]]
Iteration 100 of 1000: loss=0.788 " + "l1=0.508" + "l2=0.279 f=-0.184 shape=(1, 9000, 1)
logits [[ 0.6031554  -1.2410389   0.73272234 -0.8318467 ]]
Iteration 200 of 1000: loss=0.492 " + "l1=0.18" + "l2=0.312 f=-0.195 shape=(1, 9000, 1)
logits [[-0.06111766 -0.99839026  0.41836473 -0.1368998 ]]
Iteration 300 of 1000: loss=0.327 " + "l1=0.0022" + "l2=0.325 f=-0.189 shape=(1, 9000, 1)
logits [[-0.41386554 -0.850828    0.25755975  0.2507886 ]]
Iteration 400 of 1000: loss=0.261 " + "l1=0" + "l2=0.261 f=-0.176 shape=(1, 9000, 1)
logits [[-0.38547996 -0.85032594  0.26457915  0.26736188]]
Iteration 500 of 1000: loss=0.224 " + "l1=0" + "l2=0.224 f=-0.166 shape=(1, 9000, 1)
logits [[-0.3580139  -0.85909635  0.27517313  0.27649167]]
Iteration 600 of 1000: loss=0.199 " + "l1=0" + "l2=0.199 f=-0.157 shape=(1, 9000, 1)
logits [[-0.33134332 -0.87317985  0.28652737  0.29111773]]
Iteration 700 of 1000: loss=0.184 " + "l1=0" + "l2=0.184 f=-0.148 shape=(1, 9000, 1)
logits [[-0.31164083 -0.88231087  0.29434082  0.30646062]]
Iteration 800 of 1000: loss=0.172 " + "l1=0" + "l2=0.172 f=-0.142 shape=(1, 9000, 1)
logits [[-0.30129245 -0.8839025   0.30242482  0.31281668]]
Iteration 900 of 1000: loss=0.161 " + "l1=0" + "l2=0.161 f=-0.139 shape=(1, 9000, 1)
logits [[-0.2958662  -0.88255566  0.31037936  0.31354037]]
--- 297.4292149543762 seconds ---
Adv result:3
Loading record A02475
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0709 " + "l1=0.0709" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.567676  -2.5270998  2.5269086 -6.1318936]]
Iteration 100 of 1000: loss=0.0707 " + "l1=0.0705" + "l2=0.000213 f=-0.39 shape=(1, 9000, 1)
logits [[ 4.536052  -2.5104961  2.5163262 -6.103372 ]]
Iteration 200 of 1000: loss=0.0706 " + "l1=0.0704" + "l2=0.000187 f=-0.39 shape=(1, 9000, 1)
logits [[ 4.5331135 -2.5075486  2.514704  -6.101055 ]]
Iteration 300 of 1000: loss=0.0705 " + "l1=0.0703" + "l2=0.000221 f=-0.39 shape=(1, 9000, 1)
logits [[ 4.527401  -2.503708   2.5125387 -6.095937 ]]
Iteration 400 of 1000: loss=0.0705 " + "l1=0.0702" + "l2=0.000276 f=-0.39 shape=(1, 9000, 1)
logits [[ 4.5212274 -2.499971   2.5104773 -6.0904875]]
Iteration 500 of 1000: loss=0.0705 " + "l1=0.0701" + "l2=0.000351 f=-0.389 shape=(1, 9000, 1)
logits [[ 4.514866  -2.49637    2.5085182 -6.084915 ]]
Iteration 600 of 1000: loss=0.0705 " + "l1=0.07" + "l2=0.000445 f=-0.389 shape=(1, 9000, 1)
logits [[ 4.5085235 -2.4930108  2.5067582 -6.0793624]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.709 " + "l1=0.709" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.567676  -2.5270998  2.5269086 -6.1318936]]
Iteration 100 of 1000: loss=0.687 " + "l1=0.675" + "l2=0.012 f=-0.386 shape=(1, 9000, 1)
logits [[ 4.336341  -2.4089358  2.4503284 -5.9213514]]
Iteration 200 of 1000: loss=0.677 " + "l1=0.661" + "l2=0.0163 f=-0.385 shape=(1, 9000, 1)
logits [[ 4.245484  -2.3614693  2.4131508 -5.8358502]]
Iteration 300 of 1000: loss=0.668 " + "l1=0.648" + "l2=0.0199 f=-0.384 shape=(1, 9000, 1)
logits [[ 4.1611605 -2.3200278  2.379346  -5.7569833]]
Iteration 400 of 1000: loss=0.658 " + "l1=0.636" + "l2=0.0228 f=-0.383 shape=(1, 9000, 1)
logits [[ 4.0740833 -2.282514   2.34498   -5.669744 ]]
Iteration 500 of 1000: loss=0.649 " + "l1=0.622" + "l2=0.0266 f=-0.381 shape=(1, 9000, 1)
logits [[ 3.9812012 -2.2409244  2.3087897 -5.574422 ]]
Iteration 600 of 1000: loss=0.638 " + "l1=0.609" + "l2=0.0296 f=-0.379 shape=(1, 9000, 1)
logits [[ 3.8912017 -2.1970172  2.2732627 -5.481893 ]]
Iteration 700 of 1000: loss=0.629 " + "l1=0.598" + "l2=0.0312 f=-0.374 shape=(1, 9000, 1)
logits [[ 3.8183122 -2.1593792  2.2490733 -5.405649 ]]
Iteration 800 of 1000: loss=0.62 " + "l1=0.586" + "l2=0.0336 f=-0.37 shape=(1, 9000, 1)
logits [[ 3.7392871 -2.1220334  2.2234104 -5.3221154]]
Iteration 900 of 1000: loss=0.612 " + "l1=0.576" + "l2=0.0358 f=-0.367 shape=(1, 9000, 1)
logits [[ 3.6676793 -2.0902123  2.2024784 -5.2462683]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.09 " + "l1=7.09" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.567676  -2.5270998  2.5269086 -6.1318936]]
Iteration 100 of 1000: loss=5.09 " + "l1=4.09" + "l2=0.999 f=-0.372 shape=(1, 9000, 1)
logits [[ 2.4860075 -1.6002935  1.7878643 -4.1604953]]
Iteration 200 of 1000: loss=4.16 " + "l1=2.85" + "l2=1.31 f=-0.367 shape=(1, 9000, 1)
logits [[ 1.6200922 -1.231392   1.4715984 -3.3285136]]
Iteration 300 of 1000: loss=3.32 " + "l1=1.96" + "l2=1.36 f=-0.352 shape=(1, 9000, 1)
logits [[ 1.1540346 -0.8095029  1.1503526 -2.9017289]]
Iteration 400 of 1000: loss=2.83 " + "l1=1.55" + "l2=1.28 f=-0.346 shape=(1, 9000, 1)
logits [[ 0.927187  -0.6209854  0.9193566 -2.6093051]]
Iteration 500 of 1000: loss=2.37 " + "l1=0.95" + "l2=1.42 f=-0.34 shape=(1, 9000, 1)
logits [[ 0.6271166  -0.32195103  0.62759745 -2.2927847 ]]
Iteration 600 of 1000: loss=2.09 " + "l1=0.595" + "l2=1.5 f=-0.332 shape=(1, 9000, 1)
logits [[ 0.44809875 -0.13669391  0.45800954 -2.0969343 ]]
Iteration 700 of 1000: loss=1.93 " + "l1=0.428" + "l2=1.5 f=-0.315 shape=(1, 9000, 1)
logits [[ 0.37105757 -0.05381133  0.37381038 -1.9518416 ]]
Iteration 800 of 1000: loss=1.81 " + "l1=0.28" + "l2=1.53 f=-0.301 shape=(1, 9000, 1)
logits [[ 0.29782233  0.02425713  0.30434015 -1.8320489 ]]
Iteration 900 of 1000: loss=1.75 " + "l1=0.203" + "l2=1.54 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.26204684  0.06404082  0.2672741  -1.7473027 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=70.9 " + "l1=70.9" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.567676  -2.5270998  2.5269086 -6.1318936]]
Iteration 100 of 1000: loss=13.5 " + "l1=0" + "l2=13.5 f=-0.219 shape=(1, 9000, 1)
logits [[ 0.01239455  0.16714732  0.08606677 -1.1422634 ]]
Iteration 200 of 1000: loss=7.42 " + "l1=0" + "l2=7.42 f=-0.295 shape=(1, 9000, 1)
logits [[ 0.11961204  0.17023294  0.14005096 -1.6102513 ]]
Iteration 300 of 1000: loss=5.78 " + "l1=0" + "l2=5.78 f=-0.336 shape=(1, 9000, 1)
logits [[ 0.15184176  0.1815648   0.16893768 -1.8446679 ]]
Iteration 400 of 1000: loss=5.1 " + "l1=0" + "l2=5.1 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.10405939  0.2031291   0.16182941 -1.9282244 ]]
Iteration 500 of 1000: loss=4.57 " + "l1=0" + "l2=4.57 f=-0.383 shape=(1, 9000, 1)
logits [[ 0.0830202   0.1952493   0.15760833 -1.9664528 ]]
Iteration 600 of 1000: loss=4.11 " + "l1=0" + "l2=4.11 f=-0.389 shape=(1, 9000, 1)
logits [[ 0.11138932  0.17110272  0.15335782 -1.9936633 ]]
Iteration 700 of 1000: loss=3.81 " + "l1=0" + "l2=3.81 f=-0.392 shape=(1, 9000, 1)
logits [[ 0.08486754  0.16654342  0.1353961  -1.9566246 ]]
Iteration 800 of 1000: loss=3.51 " + "l1=0" + "l2=3.51 f=-0.392 shape=(1, 9000, 1)
logits [[ 0.07857143  0.16013756  0.12196247 -1.9290262 ]]
Iteration 900 of 1000: loss=3.23 " + "l1=0.0697" + "l2=3.16 f=-0.388 shape=(1, 9000, 1)
logits [[ 0.11586487  0.13076884  0.13773686 -1.9362558 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=39 " + "l1=39" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.567676  -2.5270998  2.5269086 -6.1318936]]
Iteration 100 of 1000: loss=12.8 " + "l1=5.21" + "l2=7.6 f=-0.275 shape=(1, 9000, 1)
logits [[ 0.5925918  -0.3497535   0.59744686 -1.938382  ]]
Iteration 200 of 1000: loss=6.48 " + "l1=0.122" + "l2=6.36 f=-0.331 shape=(1, 9000, 1)
logits [[ 0.13636501  0.13372895  0.15599726 -1.7495984 ]]
Iteration 300 of 1000: loss=5.06 " + "l1=0.043" + "l2=5.01 f=-0.373 shape=(1, 9000, 1)
logits [[ 0.15844068  0.1506137   0.14274219 -1.9453939 ]]
Iteration 400 of 1000: loss=4.37 " + "l1=0.0344" + "l2=4.33 f=-0.385 shape=(1, 9000, 1)
logits [[ 0.12078747  0.13561559  0.14186366 -1.9368479 ]]
Iteration 500 of 1000: loss=3.89 " + "l1=0.0259" + "l2=3.86 f=-0.381 shape=(1, 9000, 1)
logits [[ 0.13091126  0.12620507  0.12682028 -1.9082502 ]]
Iteration 600 of 1000: loss=3.52 " + "l1=0" + "l2=3.52 f=-0.379 shape=(1, 9000, 1)
logits [[ 0.09297784  0.12441289  0.12401409 -1.8556107 ]]
Iteration 700 of 1000: loss=3.3 " + "l1=0" + "l2=3.3 f=-0.375 shape=(1, 9000, 1)
logits [[ 0.06556512  0.13124333  0.11398043 -1.8094196 ]]
Iteration 800 of 1000: loss=3.07 " + "l1=0" + "l2=3.07 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.08315805  0.11890563  0.11112832 -1.7740064 ]]
Iteration 900 of 1000: loss=2.91 " + "l1=0" + "l2=2.91 f=-0.354 shape=(1, 9000, 1)
logits [[ 0.09993689  0.11357968  0.10655598 -1.7369876 ]]
--- 269.8121163845062 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0204 " + "l1=0.0204" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.567676  -2.5270998  2.5269086 -6.1318936]]
Iteration 100 of 1000: loss=0.0203 " + "l1=0.0201" + "l2=0.000144 f=-0.392 shape=(1, 9000, 1)
logits [[ 4.5449047 -2.5262449  2.5301268 -6.1157894]]
Iteration 200 of 1000: loss=0.0202 " + "l1=0.0201" + "l2=0.000103 f=-0.392 shape=(1, 9000, 1)
logits [[ 4.5450797 -2.5260942  2.53055   -6.1172347]]
Iteration 300 of 1000: loss=0.0202 " + "l1=0.0201" + "l2=0.000126 f=-0.392 shape=(1, 9000, 1)
logits [[ 4.542488  -2.5257967  2.531198  -6.11632  ]]
Iteration 400 of 1000: loss=0.0202 " + "l1=0.0201" + "l2=0.000168 f=-0.392 shape=(1, 9000, 1)
logits [[ 4.5392528 -2.5253098  2.5318742 -6.114824 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.204 " + "l1=0.204" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.567676  -2.5270998  2.5269086 -6.1318936]]
Iteration 100 of 1000: loss=0.193 " + "l1=0.187" + "l2=0.00618 f=-0.396 shape=(1, 9000, 1)
logits [[ 4.4199095 -2.5222738  2.5530148 -6.0343003]]
Iteration 200 of 1000: loss=0.188 " + "l1=0.18" + "l2=0.00834 f=-0.399 shape=(1, 9000, 1)
logits [[ 4.365318  -2.523711   2.5645113 -6.003617 ]]
Iteration 300 of 1000: loss=0.184 " + "l1=0.174" + "l2=0.0105 f=-0.403 shape=(1, 9000, 1)
logits [[ 4.31838   -2.5279164  2.580607  -5.9816837]]
Iteration 400 of 1000: loss=0.18 " + "l1=0.167" + "l2=0.013 f=-0.407 shape=(1, 9000, 1)
logits [[ 4.269965  -2.5355115  2.6020195 -5.9650655]]
Iteration 500 of 1000: loss=0.176 " + "l1=0.161" + "l2=0.0151 f=-0.411 shape=(1, 9000, 1)
logits [[ 4.226201  -2.538577   2.6186745 -5.9515395]]
Iteration 600 of 1000: loss=0.172 " + "l1=0.155" + "l2=0.0166 f=-0.415 shape=(1, 9000, 1)
logits [[ 4.1830153 -2.537692   2.628316  -5.935532 ]]
Iteration 700 of 1000: loss=0.169 " + "l1=0.15" + "l2=0.0181 f=-0.419 shape=(1, 9000, 1)
logits [[ 4.138421  -2.5345986  2.6340325 -5.9139237]]
Iteration 800 of 1000: loss=0.165 " + "l1=0.146" + "l2=0.0194 f=-0.422 shape=(1, 9000, 1)
logits [[ 4.092065  -2.529124   2.6360924 -5.8880177]]
Iteration 900 of 1000: loss=0.161 " + "l1=0.141" + "l2=0.0204 f=-0.425 shape=(1, 9000, 1)
logits [[ 4.046273  -2.5222745  2.636017  -5.859194 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.04 " + "l1=2.04" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.567676  -2.5270998  2.5269086 -6.1318936]]
Iteration 100 of 1000: loss=0.762 " + "l1=0.0695" + "l2=0.692 f=-0.456 shape=(1, 9000, 1)
logits [[ 3.052869  -2.7619863  2.9834042 -5.1002674]]
Iteration 200 of 1000: loss=0.461 " + "l1=0" + "l2=0.461 f=-0.462 shape=(1, 9000, 1)
logits [[ 3.0250998 -2.8048334  3.0262513 -5.0944734]]
Iteration 300 of 1000: loss=0.373 " + "l1=0.00207" + "l2=0.371 f=-0.462 shape=(1, 9000, 1)
logits [[ 3.01392   -2.7949684  3.011854  -5.080269 ]]
Iteration 400 of 1000: loss=0.317 " + "l1=0" + "l2=0.317 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.983844  -2.7718227  2.9907267 -5.0513983]]
Iteration 500 of 1000: loss=0.282 " + "l1=0.00979" + "l2=0.272 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.9783385 -2.7524917  2.968552  -5.031719 ]]
Iteration 600 of 1000: loss=0.245 " + "l1=0" + "l2=0.245 f=-0.46 shape=(1, 9000, 1)
logits [[ 2.951819  -2.7377958  2.9565194 -5.0106697]]
Iteration 700 of 1000: loss=0.225 " + "l1=0" + "l2=0.225 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.9304702 -2.722951   2.9415512 -4.9818535]]
Iteration 800 of 1000: loss=0.208 " + "l1=0.00382" + "l2=0.204 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.9286747 -2.7091796  2.9248497 -4.9737577]]
Iteration 900 of 1000: loss=0.193 " + "l1=0" + "l2=0.193 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.8947525 -2.6942775  2.905296  -4.9333143]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.12 " + "l1=1.12" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.567676  -2.5270998  2.5269086 -6.1318936]]
Iteration 100 of 1000: loss=0.754 " + "l1=0.559" + "l2=0.195 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.7369244 -2.5669317  2.7200482 -5.5813503]]
Iteration 200 of 1000: loss=0.523 " + "l1=0.203" + "l2=0.32 f=-0.445 shape=(1, 9000, 1)
logits [[ 3.3024285 -2.7194755  2.9341774 -5.298308 ]]
Iteration 300 of 1000: loss=0.361 " + "l1=0.0116" + "l2=0.35 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.0362258 -2.788707   3.0150962 -5.113129 ]]
Iteration 400 of 1000: loss=0.268 " + "l1=0.000477" + "l2=0.268 f=-0.473 shape=(1, 9000, 1)
logits [[ 3.039345  -2.8221939  3.038477  -5.149253 ]]
Iteration 500 of 1000: loss=0.237 " + "l1=0" + "l2=0.237 f=-0.475 shape=(1, 9000, 1)
logits [[ 3.0229266 -2.8074942  3.0258937 -5.14087  ]]
Iteration 600 of 1000: loss=0.216 " + "l1=0" + "l2=0.216 f=-0.473 shape=(1, 9000, 1)
logits [[ 2.9985757 -2.7794957  2.9989603 -5.109053 ]]
Iteration 700 of 1000: loss=0.2 " + "l1=0.000722" + "l2=0.199 f=-0.471 shape=(1, 9000, 1)
logits [[ 2.9735713 -2.7551944  2.9722586 -5.0727296]]
Iteration 800 of 1000: loss=0.187 " + "l1=0" + "l2=0.187 f=-0.468 shape=(1, 9000, 1)
logits [[ 2.94584   -2.7344046  2.9460888 -5.030281 ]]
Iteration 900 of 1000: loss=0.178 " + "l1=0.00425" + "l2=0.173 f=-0.464 shape=(1, 9000, 1)
logits [[ 2.9289083 -2.7194016  2.9211824 -4.9876456]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.663 " + "l1=0.663" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.567676  -2.5270998  2.5269086 -6.1318936]]
Iteration 100 of 1000: loss=0.537 " + "l1=0.466" + "l2=0.0707 f=-0.414 shape=(1, 9000, 1)
logits [[ 4.0728054 -2.5488992  2.6377628 -5.8159857]]
Iteration 200 of 1000: loss=0.475 " + "l1=0.376" + "l2=0.0992 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.858436  -2.5694723  2.7018764 -5.684739 ]]
Iteration 300 of 1000: loss=0.409 " + "l1=0.267" + "l2=0.142 f=-0.439 shape=(1, 9000, 1)
logits [[ 3.635237  -2.6408217  2.8139603 -5.56269  ]]
Iteration 400 of 1000: loss=0.344 " + "l1=0.168" + "l2=0.176 f=-0.451 shape=(1, 9000, 1)
logits [[ 3.4110615 -2.6988869  2.89349   -5.410899 ]]
Iteration 500 of 1000: loss=0.293 " + "l1=0.0941" + "l2=0.198 f=-0.462 shape=(1, 9000, 1)
logits [[ 3.2344067 -2.7392154  2.9449515 -5.2868247]]
Iteration 600 of 1000: loss=0.24 " + "l1=0.0128" + "l2=0.227 f=-0.474 shape=(1, 9000, 1)
logits [[ 3.0472186 -2.7861733  3.0077038 -5.16533  ]]
Iteration 700 of 1000: loss=0.209 " + "l1=0.00194" + "l2=0.207 f=-0.475 shape=(1, 9000, 1)
logits [[ 3.0001175 -2.7743034  2.9941473 -5.120612 ]]
Iteration 800 of 1000: loss=0.192 " + "l1=0" + "l2=0.192 f=-0.473 shape=(1, 9000, 1)
logits [[ 2.9648252 -2.750708   2.965236  -5.071122 ]]
Iteration 900 of 1000: loss=0.178 " + "l1=9.34e-05" + "l2=0.178 f=-0.469 shape=(1, 9000, 1)
logits [[ 2.9404984 -2.7336464  2.940211  -5.022129 ]]
--- 262.20217537879944 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.107 " + "l1=0.107" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.567676  -2.5270998  2.5269086 -6.1318936]]
Iteration 100 of 1000: loss=0.106 " + "l1=0.106" + "l2=0.000422 f=-0.389 shape=(1, 9000, 1)
logits [[ 4.524032  -2.5185347  2.5132525 -6.0757055]]
Iteration 200 of 1000: loss=0.106 " + "l1=0.106" + "l2=0.000399 f=-0.389 shape=(1, 9000, 1)
logits [[ 4.517777  -2.515869   2.5102415 -6.06874  ]]
Iteration 300 of 1000: loss=0.106 " + "l1=0.106" + "l2=0.000459 f=-0.389 shape=(1, 9000, 1)
logits [[ 4.5091305 -2.5131931  2.5066495 -6.058142 ]]
Iteration 400 of 1000: loss=0.106 " + "l1=0.105" + "l2=0.000537 f=-0.389 shape=(1, 9000, 1)
logits [[ 4.500106  -2.510557   2.5029252 -6.046653 ]]
Iteration 500 of 1000: loss=0.106 " + "l1=0.105" + "l2=0.000629 f=-0.388 shape=(1, 9000, 1)
logits [[ 4.4908195 -2.5078657  2.499124  -6.034642 ]]
Iteration 600 of 1000: loss=0.106 " + "l1=0.105" + "l2=0.000792 f=-0.388 shape=(1, 9000, 1)
logits [[ 4.481288  -2.5051994  2.4952705 -6.0221586]]
Iteration 700 of 1000: loss=0.106 " + "l1=0.105" + "l2=0.000867 f=-0.387 shape=(1, 9000, 1)
logits [[ 4.4715447 -2.502441   2.4913216 -6.0095305]]
Iteration 800 of 1000: loss=0.106 " + "l1=0.105" + "l2=0.00105 f=-0.387 shape=(1, 9000, 1)
logits [[ 4.4618063 -2.4998395  2.4874709 -5.9968214]]
Iteration 900 of 1000: loss=0.105 " + "l1=0.104" + "l2=0.0011 f=-0.386 shape=(1, 9000, 1)
logits [[ 4.4520235 -2.4972088  2.483618  -5.9842153]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.07 " + "l1=1.07" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.567676  -2.5270998  2.5269086 -6.1318936]]
Iteration 100 of 1000: loss=1.01 " + "l1=0.981" + "l2=0.0317 f=-0.379 shape=(1, 9000, 1)
logits [[ 4.174101  -2.4527314  2.39374   -5.631019 ]]
Iteration 200 of 1000: loss=0.984 " + "l1=0.94" + "l2=0.044 f=-0.374 shape=(1, 9000, 1)
logits [[ 3.999598  -2.4192448  2.326164  -5.401793 ]]
Iteration 300 of 1000: loss=0.957 " + "l1=0.905" + "l2=0.0527 f=-0.369 shape=(1, 9000, 1)
logits [[ 3.8465238 -2.3897681  2.2675064 -5.1991906]]
Iteration 400 of 1000: loss=0.93 " + "l1=0.868" + "l2=0.0616 f=-0.364 shape=(1, 9000, 1)
logits [[ 3.688667  -2.3529856  2.2039547 -4.996155 ]]
Iteration 500 of 1000: loss=0.902 " + "l1=0.833" + "l2=0.0698 f=-0.36 shape=(1, 9000, 1)
logits [[ 3.5308263 -2.3153389  2.141171  -4.7948146]]
Iteration 600 of 1000: loss=0.876 " + "l1=0.801" + "l2=0.0751 f=-0.351 shape=(1, 9000, 1)
logits [[ 3.3934636 -2.2676148  2.0870728 -4.61843  ]]
Iteration 700 of 1000: loss=0.851 " + "l1=0.767" + "l2=0.0839 f=-0.339 shape=(1, 9000, 1)
logits [[ 3.2481606 -2.225599   2.0388563 -4.4178567]]
Iteration 800 of 1000: loss=0.826 " + "l1=0.737" + "l2=0.089 f=-0.326 shape=(1, 9000, 1)
logits [[ 3.12475   -2.1832635  1.9958179 -4.2432275]]
Iteration 900 of 1000: loss=0.804 " + "l1=0.71" + "l2=0.0937 f=-0.318 shape=(1, 9000, 1)
logits [[ 3.0155926 -2.1508954  1.9533525 -4.088103 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.7 " + "l1=10.7" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.567676  -2.5270998  2.5269086 -6.1318936]]
Iteration 100 of 1000: loss=5.96 " + "l1=3.6" + "l2=2.36 f=-0.248 shape=(1, 9000, 1)
logits [[ 1.5394027 -2.007836   1.5387582 -2.0604205]]
Iteration 200 of 1000: loss=4.6 " + "l1=2.17" + "l2=2.42 f=-0.19 shape=(1, 9000, 1)
logits [[ 1.1008983 -1.8936023  1.1044519 -1.0703402]]
Iteration 300 of 1000: loss=3.57 " + "l1=0.986" + "l2=2.59 f=-0.137 shape=(1, 9000, 1)
logits [[ 0.69869417 -1.6578776   0.6984365  -0.28686988]]
Iteration 400 of 1000: loss=2.58 " + "l1=0.0282" + "l2=2.56 f=-0.0852 shape=(1, 9000, 1)
logits [[ 0.371255   -1.464994    0.39065263  0.36244038]]
Iteration 500 of 1000: loss=2.02 " + "l1=0.0191" + "l2=2 f=-0.074 shape=(1, 9000, 1)
logits [[ 0.3675841  -1.3861352   0.37075928  0.35168475]]
Iteration 600 of 1000: loss=1.69 " + "l1=0.0096" + "l2=1.68 f=-0.07 shape=(1, 9000, 1)
logits [[ 0.35272968 -1.3309468   0.3539585   0.34435844]]
Iteration 700 of 1000: loss=1.49 " + "l1=0" + "l2=1.49 f=-0.0676 shape=(1, 9000, 1)
logits [[ 0.324164   -1.3101089   0.35403734  0.36159658]]
Iteration 800 of 1000: loss=1.33 " + "l1=0" + "l2=1.33 f=-0.0661 shape=(1, 9000, 1)
logits [[ 0.32284802 -1.3123647   0.3553967   0.36958572]]
Iteration 900 of 1000: loss=1.2 " + "l1=0" + "l2=1.2 f=-0.064 shape=(1, 9000, 1)
logits [[ 0.3555716  -1.3253264   0.35528237  0.3586078 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.88 " + "l1=5.88" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.567676  -2.5270998  2.5269086 -6.1318936]]
Iteration 100 of 1000: loss=4.25 " + "l1=3.4" + "l2=0.851 f=-0.312 shape=(1, 9000, 1)
logits [[ 2.6046007 -2.1773207  1.9029304 -3.5780437]]
Iteration 200 of 1000: loss=3.51 " + "l1=2.36" + "l2=1.15 f=-0.272 shape=(1, 9000, 1)
logits [[ 1.7723602 -1.9994739  1.6491556 -2.5100145]]
Iteration 300 of 1000: loss=2.9 " + "l1=1.71" + "l2=1.19 f=-0.235 shape=(1, 9000, 1)
logits [[ 1.3190366 -1.7924974  1.3173406 -1.7823634]]
Iteration 400 of 1000: loss=2.44 " + "l1=1.33" + "l2=1.11 f=-0.207 shape=(1, 9000, 1)
logits [[ 1.0737752 -1.6444513  1.0795716 -1.3373904]]
Iteration 500 of 1000: loss=2.13 " + "l1=1.05" + "l2=1.08 f=-0.178 shape=(1, 9000, 1)
logits [[ 0.9122754  -1.5473217   0.91714853 -0.9953292 ]]
Iteration 600 of 1000: loss=1.86 " + "l1=0.765" + "l2=1.1 f=-0.14 shape=(1, 9000, 1)
logits [[ 0.746038  -1.4426712  0.7629908 -0.6278398]]
Iteration 700 of 1000: loss=1.61 " + "l1=0.435" + "l2=1.17 f=-0.102 shape=(1, 9000, 1)
logits [[ 0.5355409  -1.3600596   0.6033506  -0.18740305]]
Iteration 800 of 1000: loss=1.27 " + "l1=0.0261" + "l2=1.24 f=-0.0576 shape=(1, 9000, 1)
logits [[ 0.2990756  -1.2742182   0.39618117  0.34872848]]
Iteration 900 of 1000: loss=1.03 " + "l1=0.00551" + "l2=1.03 f=-0.0553 shape=(1, 9000, 1)
logits [[ 0.33046117 -1.2978088   0.37811226  0.36808902]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.48 " + "l1=3.48" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 4.567676  -2.5270998  2.5269086 -6.1318936]]
Iteration 100 of 1000: loss=2.85 " + "l1=2.52" + "l2=0.332 f=-0.345 shape=(1, 9000, 1)
logits [[ 3.278171  -2.2973723  2.107968  -4.469323 ]]
Iteration 200 of 1000: loss=2.57 " + "l1=2.15" + "l2=0.419 f=-0.321 shape=(1, 9000, 1)
logits [[ 2.7852702 -2.1628063  1.9294649 -3.83451  ]]
Iteration 300 of 1000: loss=2.32 " + "l1=1.83" + "l2=0.49 f=-0.299 shape=(1, 9000, 1)
logits [[ 2.3555262 -2.0419936  1.7742963 -3.2858143]]
Iteration 400 of 1000: loss=2.06 " + "l1=1.49" + "l2=0.572 f=-0.278 shape=(1, 9000, 1)
logits [[ 1.9017265 -1.922573   1.6003922 -2.6902456]]
Iteration 500 of 1000: loss=1.81 " + "l1=1.16" + "l2=0.65 f=-0.258 shape=(1, 9000, 1)
logits [[ 1.449713  -1.7779471  1.4063758 -2.1091602]]
Iteration 600 of 1000: loss=1.62 " + "l1=0.977" + "l2=0.642 f=-0.232 shape=(1, 9000, 1)
logits [[ 1.2488191 -1.6655183  1.2463549 -1.7562038]]
Iteration 700 of 1000: loss=1.47 " + "l1=0.837" + "l2=0.633 f=-0.204 shape=(1, 9000, 1)
logits [[ 1.115078  -1.5943888  1.1193087 -1.4566637]]
Iteration 800 of 1000: loss=1.37 " + "l1=0.733" + "l2=0.633 f=-0.178 shape=(1, 9000, 1)
logits [[ 1.0272204 -1.5392846  1.0253437 -1.2268974]]
Iteration 900 of 1000: loss=1.28 " + "l1=0.64" + "l2=0.638 f=-0.153 shape=(1, 9000, 1)
logits [[ 0.95453143 -1.50766     0.9565918  -1.0141262 ]]
--- 295.1516258716583 seconds ---
Adv result:3
Loading record A02493
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0828 " + "l1=0.0828" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[ 4.842452  -3.4383755  3.1845922 -7.585257 ]]
Iteration 100 of 1000: loss=0.0824 " + "l1=0.0822" + "l2=0.000295 f=-0.745 shape=(1, 9000, 1)
logits [[ 4.8070807 -3.4079897  3.1602838 -7.54131  ]]
Iteration 200 of 1000: loss=0.0824 " + "l1=0.0821" + "l2=0.000291 f=-0.745 shape=(1, 9000, 1)
logits [[ 4.8039746 -3.4034095  3.1569293 -7.537635 ]]
Iteration 300 of 1000: loss=0.0823 " + "l1=0.082" + "l2=0.00033 f=-0.745 shape=(1, 9000, 1)
logits [[ 4.799031  -3.3974848  3.152565  -7.5321493]]
Iteration 400 of 1000: loss=0.0823 " + "l1=0.0819" + "l2=0.000425 f=-0.744 shape=(1, 9000, 1)
logits [[ 4.7940707 -3.3915203  3.148305  -7.5269084]]
Iteration 500 of 1000: loss=0.0823 " + "l1=0.0817" + "l2=0.000505 f=-0.744 shape=(1, 9000, 1)
logits [[ 4.7890954 -3.3853989  3.1441202 -7.522037 ]]
Iteration 600 of 1000: loss=0.0822 " + "l1=0.0816" + "l2=0.000583 f=-0.743 shape=(1, 9000, 1)
logits [[ 4.7841964 -3.3793476  3.1400976 -7.517507 ]]
Iteration 700 of 1000: loss=0.0822 " + "l1=0.0815" + "l2=0.000653 f=-0.743 shape=(1, 9000, 1)
logits [[ 4.779478  -3.37372    3.1364715 -7.5134015]]
Iteration 800 of 1000: loss=0.0822 " + "l1=0.0814" + "l2=0.000772 f=-0.742 shape=(1, 9000, 1)
logits [[ 4.775081  -3.3683844  3.1330998 -7.5097   ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.828 " + "l1=0.828" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[ 4.842452  -3.4383755  3.1845922 -7.585257 ]]
Iteration 100 of 1000: loss=0.793 " + "l1=0.773" + "l2=0.0198 f=-0.716 shape=(1, 9000, 1)
logits [[ 4.5528336 -3.1818495  2.985596  -7.2225204]]
Iteration 200 of 1000: loss=0.778 " + "l1=0.75" + "l2=0.0279 f=-0.703 shape=(1, 9000, 1)
logits [[ 4.4387636 -3.0603006  2.9024324 -7.0918126]]
Iteration 300 of 1000: loss=0.763 " + "l1=0.728" + "l2=0.0343 f=-0.691 shape=(1, 9000, 1)
logits [[ 4.3364987 -2.946164   2.8297913 -6.9855204]]
Iteration 400 of 1000: loss=0.744 " + "l1=0.699" + "l2=0.0441 f=-0.681 shape=(1, 9000, 1)
logits [[ 4.1984034 -2.7957537  2.7417471 -6.8689723]]
Iteration 500 of 1000: loss=0.718 " + "l1=0.659" + "l2=0.0583 f=-0.672 shape=(1, 9000, 1)
logits [[ 4.0063167 -2.5872977  2.635035  -6.7414308]]
Iteration 600 of 1000: loss=0.693 " + "l1=0.628" + "l2=0.0648 f=-0.668 shape=(1, 9000, 1)
logits [[ 3.8348882 -2.4487123  2.568115  -6.6266503]]
Iteration 700 of 1000: loss=0.675 " + "l1=0.608" + "l2=0.0675 f=-0.667 shape=(1, 9000, 1)
logits [[ 3.7074933 -2.3679621  2.5224016 -6.531692 ]]
Iteration 800 of 1000: loss=0.66 " + "l1=0.588" + "l2=0.0718 f=-0.668 shape=(1, 9000, 1)
logits [[ 3.580156  -2.298789   2.483868  -6.4382024]]
Iteration 900 of 1000: loss=0.647 " + "l1=0.572" + "l2=0.0753 f=-0.668 shape=(1, 9000, 1)
logits [[ 3.469655  -2.2459545  2.451573  -6.347422 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.28 " + "l1=8.28" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[ 4.842452  -3.4383755  3.1845922 -7.585257 ]]
Iteration 100 of 1000: loss=4.36 " + "l1=2.26" + "l2=2.1 f=-0.571 shape=(1, 9000, 1)
logits [[ 1.3064375 -0.9561954  1.3041618 -3.9370348]]
Iteration 200 of 1000: loss=3.21 " + "l1=1.34" + "l2=1.88 f=-0.565 shape=(1, 9000, 1)
logits [[ 0.8865304  -0.4438351   0.89118195 -3.5954497 ]]
Iteration 300 of 1000: loss=2.45 " + "l1=0.642" + "l2=1.81 f=-0.529 shape=(1, 9000, 1)
logits [[ 0.5262358  -0.10331578  0.53882784 -3.0794482 ]]
Iteration 400 of 1000: loss=2.02 " + "l1=0.333" + "l2=1.68 f=-0.522 shape=(1, 9000, 1)
logits [[ 0.33484375  0.05490154  0.38816315 -2.8661509 ]]
Iteration 500 of 1000: loss=1.7 " + "l1=0.0764" + "l2=1.62 f=-0.521 shape=(1, 9000, 1)
logits [[ 0.03150605  0.18407787  0.26043418 -2.5587003 ]]
Iteration 600 of 1000: loss=1.46 " + "l1=0.0127" + "l2=1.45 f=-0.505 shape=(1, 9000, 1)
logits [[-0.07490025  0.21090819  0.22363126 -2.3784106 ]]
Iteration 700 of 1000: loss=1.35 " + "l1=0" + "l2=1.35 f=-0.493 shape=(1, 9000, 1)
logits [[-0.13611275  0.21577235  0.2111568  -2.2632713 ]]
Iteration 800 of 1000: loss=1.27 " + "l1=0.0112" + "l2=1.26 f=-0.481 shape=(1, 9000, 1)
logits [[-0.1527232   0.19394468  0.20516455 -2.1712625 ]]
Iteration 900 of 1000: loss=1.21 " + "l1=0.00915" + "l2=1.2 f=-0.474 shape=(1, 9000, 1)
logits [[-0.1935255   0.18558677  0.19473337 -2.0826855 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.55 " + "l1=4.55" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[ 4.842452  -3.4383755  3.1845922 -7.585257 ]]
Iteration 100 of 1000: loss=3.28 " + "l1=2.46" + "l2=0.815 f=-0.605 shape=(1, 9000, 1)
logits [[ 2.676662  -1.8032997  1.9909446 -5.282686 ]]
Iteration 200 of 1000: loss=2.52 " + "l1=1.42" + "l2=1.1 f=-0.601 shape=(1, 9000, 1)
logits [[ 1.5332468 -1.0412982  1.4719342 -4.36916  ]]
Iteration 300 of 1000: loss=2.05 " + "l1=1.01" + "l2=1.05 f=-0.559 shape=(1, 9000, 1)
logits [[ 1.1549308 -0.674736   1.1433119 -3.8599231]]
Iteration 400 of 1000: loss=1.69 " + "l1=0.728" + "l2=0.961 f=-0.516 shape=(1, 9000, 1)
logits [[ 0.8961929 -0.4181244  0.9056022 -3.4466228]]
Iteration 500 of 1000: loss=1.46 " + "l1=0.552" + "l2=0.907 f=-0.484 shape=(1, 9000, 1)
logits [[ 0.7284054  -0.26643744  0.73645616 -3.1331003 ]]
Iteration 600 of 1000: loss=1.33 " + "l1=0.469" + "l2=0.862 f=-0.466 shape=(1, 9000, 1)
logits [[ 0.6305528  -0.20408861  0.6490504  -2.9393928 ]]
Iteration 700 of 1000: loss=1.25 " + "l1=0.411" + "l2=0.841 f=-0.454 shape=(1, 9000, 1)
logits [[ 0.58299667 -0.15254682  0.59421873 -2.8403971 ]]
Iteration 800 of 1000: loss=1.2 " + "l1=0.376" + "l2=0.823 f=-0.434 shape=(1, 9000, 1)
logits [[ 0.54638827 -0.12123468  0.5618698  -2.7214282 ]]
Iteration 900 of 1000: loss=1.15 " + "l1=0.331" + "l2=0.82 f=-0.418 shape=(1, 9000, 1)
logits [[ 0.44605502 -0.07996637  0.52105063 -2.5581448 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=6.42 " + "l1=6.42" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[ 4.842452  -3.4383755  3.1845922 -7.585257 ]]
Iteration 100 of 1000: loss=3.91 " + "l1=2.34" + "l2=1.57 f=-0.599 shape=(1, 9000, 1)
logits [[ 1.7291979 -1.2889102  1.6152663 -4.453297 ]]
Iteration 200 of 1000: loss=2.87 " + "l1=1.3" + "l2=1.56 f=-0.565 shape=(1, 9000, 1)
logits [[ 1.0666246 -0.6101683  1.0733544 -3.7917461]]
Iteration 300 of 1000: loss=2.31 " + "l1=0.835" + "l2=1.47 f=-0.542 shape=(1, 9000, 1)
logits [[ 0.74144167 -0.31553864  0.7620921  -3.356448  ]]
Iteration 400 of 1000: loss=1.94 " + "l1=0.566" + "l2=1.37 f=-0.512 shape=(1, 9000, 1)
logits [[ 0.5670837  -0.14693995  0.5832118  -3.0501957 ]]
Iteration 500 of 1000: loss=1.66 " + "l1=0.381" + "l2=1.28 f=-0.499 shape=(1, 9000, 1)
logits [[ 0.40605214 -0.02568021  0.46532044 -2.8408349 ]]
Iteration 600 of 1000: loss=1.46 " + "l1=0.202" + "l2=1.25 f=-0.495 shape=(1, 9000, 1)
logits [[ 0.19205359  0.11332015  0.37345088 -2.6572704 ]]
Iteration 700 of 1000: loss=1.34 " + "l1=0.0945" + "l2=1.25 f=-0.503 shape=(1, 9000, 1)
logits [[ 0.00995121  0.16925715  0.29123086 -2.4832754 ]]
Iteration 800 of 1000: loss=1.25 " + "l1=0.00968" + "l2=1.24 f=-0.504 shape=(1, 9000, 1)
logits [[-0.16292539  0.20369992  0.21619643 -2.2729688 ]]
Iteration 900 of 1000: loss=1.16 " + "l1=0.00928" + "l2=1.16 f=-0.491 shape=(1, 9000, 1)
logits [[-0.19739613  0.18452562  0.19649787 -2.147156  ]]
--- 284.77147245407104 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0166 " + "l1=0.0166" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[ 4.842452  -3.4383755  3.1845922 -7.585257 ]]
Iteration 100 of 1000: loss=0.0164 " + "l1=0.0163" + "l2=0.000164 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.8189335 -3.44858    3.193301  -7.568153 ]]
Iteration 200 of 1000: loss=0.0164 " + "l1=0.0162" + "l2=0.00013 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.818668  -3.4501398  3.194617  -7.568427 ]]
Iteration 300 of 1000: loss=0.0164 " + "l1=0.0162" + "l2=0.000166 f=-0.752 shape=(1, 9000, 1)
logits [[ 4.8163066 -3.4524453  3.1965535 -7.5673804]]
Iteration 400 of 1000: loss=0.0163 " + "l1=0.0162" + "l2=0.000199 f=-0.752 shape=(1, 9000, 1)
logits [[ 4.8136215 -3.4547012  3.198512  -7.566208 ]]
Iteration 500 of 1000: loss=0.0164 " + "l1=0.0161" + "l2=0.0003 f=-0.753 shape=(1, 9000, 1)
logits [[ 4.8109026 -3.456839   3.2004907 -7.5651693]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.166 " + "l1=0.166" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[ 4.842452  -3.4383755  3.1845922 -7.585257 ]]
Iteration 100 of 1000: loss=0.151 " + "l1=0.143" + "l2=0.0081 f=-0.761 shape=(1, 9000, 1)
logits [[ 4.680343  -3.5142353  3.2492623 -7.4590635]]
Iteration 200 of 1000: loss=0.146 " + "l1=0.135" + "l2=0.0107 f=-0.765 shape=(1, 9000, 1)
logits [[ 4.627969  -3.5435307  3.273137  -7.4172134]]
Iteration 300 of 1000: loss=0.142 " + "l1=0.129" + "l2=0.0129 f=-0.769 shape=(1, 9000, 1)
logits [[ 4.581326 -3.565364  3.290456 -7.380935]]
Iteration 400 of 1000: loss=0.138 " + "l1=0.124" + "l2=0.0146 f=-0.773 shape=(1, 9000, 1)
logits [[ 4.5402017 -3.5792253  3.3023436 -7.353893 ]]
Iteration 500 of 1000: loss=0.135 " + "l1=0.119" + "l2=0.0159 f=-0.776 shape=(1, 9000, 1)
logits [[ 4.502217  -3.5895832  3.3123832 -7.329537 ]]
Iteration 600 of 1000: loss=0.131 " + "l1=0.114" + "l2=0.0171 f=-0.779 shape=(1, 9000, 1)
logits [[ 4.463142  -3.5958605  3.31993   -7.3015213]]
Iteration 700 of 1000: loss=0.128 " + "l1=0.109" + "l2=0.0183 f=-0.78 shape=(1, 9000, 1)
logits [[ 4.422102  -3.5990481  3.327318  -7.2704797]]
Iteration 800 of 1000: loss=0.124 " + "l1=0.104" + "l2=0.0197 f=-0.781 shape=(1, 9000, 1)
logits [[ 4.3782773 -3.600153   3.33611   -7.237512 ]]
Iteration 900 of 1000: loss=0.119 " + "l1=0.0985" + "l2=0.021 f=-0.781 shape=(1, 9000, 1)
logits [[ 4.3291063 -3.5999193  3.3442624 -7.1984754]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.66 " + "l1=1.66" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[ 4.842452  -3.4383755  3.1845922 -7.585257 ]]
Iteration 100 of 1000: loss=0.5 " + "l1=0" + "l2=0.5 f=-0.797 shape=(1, 9000, 1)
logits [[ 3.4210443 -3.6926024  3.4304678 -6.346013 ]]
Iteration 200 of 1000: loss=0.358 " + "l1=0.00465" + "l2=0.354 f=-0.796 shape=(1, 9000, 1)
logits [[ 3.4676251 -3.7219543  3.462976  -6.392753 ]]
Iteration 300 of 1000: loss=0.289 " + "l1=0.0138" + "l2=0.276 f=-0.796 shape=(1, 9000, 1)
logits [[ 3.4935408 -3.7481177  3.4797356 -6.4079213]]
Iteration 400 of 1000: loss=0.223 " + "l1=0.00304" + "l2=0.22 f=-0.791 shape=(1, 9000, 1)
logits [[ 3.499902  -3.755368   3.4968612 -6.405865 ]]
Iteration 500 of 1000: loss=0.181 " + "l1=0.000965" + "l2=0.18 f=-0.786 shape=(1, 9000, 1)
logits [[ 3.5099614 -3.7662785  3.5089962 -6.3953743]]
Iteration 600 of 1000: loss=0.155 " + "l1=0" + "l2=0.155 f=-0.778 shape=(1, 9000, 1)
logits [[ 3.5048335 -3.7695527  3.5190096 -6.364449 ]]
Iteration 700 of 1000: loss=0.135 " + "l1=0.00618" + "l2=0.129 f=-0.773 shape=(1, 9000, 1)
logits [[ 3.5222437 -3.7626133  3.5160623 -6.365791 ]]
Iteration 800 of 1000: loss=0.12 " + "l1=0" + "l2=0.12 f=-0.768 shape=(1, 9000, 1)
logits [[ 3.4895842 -3.7582157  3.516245  -6.320851 ]]
Iteration 900 of 1000: loss=0.109 " + "l1=0" + "l2=0.109 f=-0.766 shape=(1, 9000, 1)
logits [[ 3.478523  -3.750714   3.5139828 -6.3052073]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.912 " + "l1=0.912" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[ 4.842452  -3.4383755  3.1845922 -7.585257 ]]
Iteration 100 of 1000: loss=0.506 " + "l1=0.267" + "l2=0.24 f=-0.789 shape=(1, 9000, 1)
logits [[ 3.865056  -3.664027   3.3804862 -6.7393394]]
Iteration 200 of 1000: loss=0.37 " + "l1=0.0877" + "l2=0.282 f=-0.802 shape=(1, 9000, 1)
logits [[ 3.616269  -3.7208052  3.4568882 -6.561015 ]]
Iteration 300 of 1000: loss=0.256 " + "l1=0" + "l2=0.256 f=-0.81 shape=(1, 9000, 1)
logits [[ 3.498205  -3.761289   3.5041668 -6.479948 ]]
Iteration 400 of 1000: loss=0.18 " + "l1=0" + "l2=0.18 f=-0.801 shape=(1, 9000, 1)
logits [[ 3.5045872 -3.7488697  3.5068927 -6.4675417]]
Iteration 500 of 1000: loss=0.144 " + "l1=0" + "l2=0.144 f=-0.79 shape=(1, 9000, 1)
logits [[ 3.494996  -3.7310648  3.5030234 -6.4270535]]
Iteration 600 of 1000: loss=0.12 " + "l1=0.00143" + "l2=0.119 f=-0.783 shape=(1, 9000, 1)
logits [[ 3.5008056 -3.716904   3.4982104 -6.4159174]]
Iteration 700 of 1000: loss=0.104 " + "l1=0" + "l2=0.104 f=-0.777 shape=(1, 9000, 1)
logits [[ 3.49167   -3.7034378  3.4919817 -6.3884516]]
Iteration 800 of 1000: loss=0.0938 " + "l1=0" + "l2=0.0938 f=-0.774 shape=(1, 9000, 1)
logits [[ 3.4872582 -3.6961603  3.4904    -6.378011 ]]
Iteration 900 of 1000: loss=0.0848 " + "l1=0" + "l2=0.0848 f=-0.77 shape=(1, 9000, 1)
logits [[ 3.4814184 -3.685973   3.483431  -6.357893 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.539 " + "l1=0.539" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[ 4.842452  -3.4383755  3.1845922 -7.585257 ]]
Iteration 100 of 1000: loss=0.395 " + "l1=0.311" + "l2=0.0831 f=-0.775 shape=(1, 9000, 1)
logits [[ 4.286107  -3.6093216  3.3277054 -7.1046233]]
Iteration 200 of 1000: loss=0.339 " + "l1=0.228" + "l2=0.112 f=-0.787 shape=(1, 9000, 1)
logits [[ 4.0820546 -3.6678016  3.3810747 -6.943226 ]]
Iteration 300 of 1000: loss=0.291 " + "l1=0.161" + "l2=0.13 f=-0.799 shape=(1, 9000, 1)
logits [[ 3.9057715 -3.7018552  3.4118817 -6.8126817]]
Iteration 400 of 1000: loss=0.246 " + "l1=0.106" + "l2=0.14 f=-0.807 shape=(1, 9000, 1)
logits [[ 3.7590172 -3.7087233  3.4329133 -6.7130404]]
Iteration 500 of 1000: loss=0.198 " + "l1=0.0519" + "l2=0.146 f=-0.81 shape=(1, 9000, 1)
logits [[ 3.6251018 -3.7192159  3.4653783 -6.61122  ]]
Iteration 600 of 1000: loss=0.143 " + "l1=0.00174" + "l2=0.141 f=-0.802 shape=(1, 9000, 1)
logits [[ 3.4912622 -3.7100668  3.4859123 -6.4754615]]
Iteration 700 of 1000: loss=0.117 " + "l1=0" + "l2=0.117 f=-0.792 shape=(1, 9000, 1)
logits [[ 3.4745872 -3.6840026  3.479108  -6.4392595]]
Iteration 800 of 1000: loss=0.101 " + "l1=0" + "l2=0.101 f=-0.784 shape=(1, 9000, 1)
logits [[ 3.4670372 -3.6655405  3.4727154 -6.4118657]]
Iteration 900 of 1000: loss=0.0879 " + "l1=0" + "l2=0.0879 f=-0.78 shape=(1, 9000, 1)
logits [[ 3.4600117 -3.6489518  3.4606903 -6.390914 ]]
--- 267.2141492366791 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.124 " + "l1=0.124" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[ 4.842452  -3.4383755  3.1845922 -7.585257 ]]
Iteration 100 of 1000: loss=0.124 " + "l1=0.123" + "l2=0.000563 f=-0.744 shape=(1, 9000, 1)
logits [[ 4.7882433 -3.420257   3.1615143 -7.5069914]]
Iteration 200 of 1000: loss=0.123 " + "l1=0.123" + "l2=0.00062 f=-0.744 shape=(1, 9000, 1)
logits [[ 4.779982  -3.4175203  3.1582937 -7.4961615]]
Iteration 300 of 1000: loss=0.123 " + "l1=0.123" + "l2=0.000729 f=-0.743 shape=(1, 9000, 1)
logits [[ 4.770679  -3.4147298  3.154763  -7.484072 ]]
Iteration 400 of 1000: loss=0.123 " + "l1=0.122" + "l2=0.000867 f=-0.743 shape=(1, 9000, 1)
logits [[ 4.762044  -3.4120657  3.1514418 -7.4731297]]
Iteration 500 of 1000: loss=0.123 " + "l1=0.122" + "l2=0.00095 f=-0.743 shape=(1, 9000, 1)
logits [[ 4.754465  -3.409787   3.1485496 -7.463915 ]]
Iteration 600 of 1000: loss=0.123 " + "l1=0.122" + "l2=0.00109 f=-0.742 shape=(1, 9000, 1)
logits [[ 4.747456  -3.4075534  3.1459365 -7.4556527]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.24 " + "l1=1.24" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[ 4.842452  -3.4383755  3.1845922 -7.585257 ]]
Iteration 100 of 1000: loss=1.17 " + "l1=1.12" + "l2=0.0496 f=-0.705 shape=(1, 9000, 1)
logits [[ 4.3258076 -3.2747338  2.9768083 -6.8465643]]
Iteration 200 of 1000: loss=1.14 " + "l1=1.07" + "l2=0.0703 f=-0.687 shape=(1, 9000, 1)
logits [[ 4.1234627 -3.2018268  2.8927767 -6.5640955]]
Iteration 300 of 1000: loss=1.11 " + "l1=1.03" + "l2=0.0872 f=-0.675 shape=(1, 9000, 1)
logits [[ 3.9469373 -3.1388035  2.82032   -6.3296704]]
Iteration 400 of 1000: loss=1.09 " + "l1=0.987" + "l2=0.104 f=-0.666 shape=(1, 9000, 1)
logits [[ 3.7664928 -3.0803504  2.7512267 -6.100602 ]]
Iteration 500 of 1000: loss=1.07 " + "l1=0.953" + "l2=0.115 f=-0.656 shape=(1, 9000, 1)
logits [[ 3.6150424 -3.0126355  2.6859834 -5.913956 ]]
Iteration 600 of 1000: loss=1.05 " + "l1=0.923" + "l2=0.123 f=-0.646 shape=(1, 9000, 1)
logits [[ 3.4810288 -2.9427311  2.6234963 -5.7461185]]
Iteration 700 of 1000: loss=1.02 " + "l1=0.892" + "l2=0.132 f=-0.635 shape=(1, 9000, 1)
logits [[ 3.3453205 -2.8673198  2.5611172 -5.5789294]]
Iteration 800 of 1000: loss=1 " + "l1=0.861" + "l2=0.142 f=-0.622 shape=(1, 9000, 1)
logits [[ 3.2062893 -2.7863977  2.493488  -5.402981 ]]
Iteration 900 of 1000: loss=0.98 " + "l1=0.829" + "l2=0.15 f=-0.611 shape=(1, 9000, 1)
logits [[ 3.063691  -2.7088618  2.4310877 -5.230469 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.4 " + "l1=12.4" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[ 4.842452  -3.4383755  3.1845922 -7.585257 ]]
Iteration 100 of 1000: loss=5.78 " + "l1=2.61" + "l2=3.17 f=-0.314 shape=(1, 9000, 1)
logits [[ 0.9013171 -1.6213113  1.0365896 -1.5730298]]
Iteration 200 of 1000: loss=3.82 " + "l1=0.349" + "l2=3.47 f=-0.209 shape=(1, 9000, 1)
logits [[ 0.02314431 -1.0816021   0.28581133 -0.06319071]]
Iteration 300 of 1000: loss=2.89 " + "l1=0.00606" + "l2=2.89 f=-0.183 shape=(1, 9000, 1)
logits [[ 0.07027174 -1.1361628   0.17095274  0.16489115]]
Iteration 400 of 1000: loss=2.34 " + "l1=0.00695" + "l2=2.34 f=-0.159 shape=(1, 9000, 1)
logits [[ 0.14846542 -1.0961843   0.15868714  0.15173596]]
Iteration 500 of 1000: loss=2.05 " + "l1=0.000342" + "l2=2.05 f=-0.148 shape=(1, 9000, 1)
logits [[ 0.15807721 -1.0760624   0.16262926  0.16228682]]
Iteration 600 of 1000: loss=1.86 " + "l1=0" + "l2=1.86 f=-0.135 shape=(1, 9000, 1)
logits [[ 0.17232166 -1.0868659   0.18220225  0.19041198]]
Iteration 700 of 1000: loss=1.73 " + "l1=0.0257" + "l2=1.71 f=-0.122 shape=(1, 9000, 1)
logits [[ 0.21507657 -1.1063131   0.21372344  0.1893622 ]]
Iteration 800 of 1000: loss=1.62 " + "l1=0" + "l2=1.62 f=-0.107 shape=(1, 9000, 1)
logits [[ 0.21355313 -1.1045212   0.22266068  0.23990199]]
Iteration 900 of 1000: loss=1.54 " + "l1=0" + "l2=1.54 f=-0.0993 shape=(1, 9000, 1)
logits [[ 0.20904112 -1.1068177   0.22349061  0.2772167 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.84 " + "l1=6.84" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[ 4.842452  -3.4383755  3.1845922 -7.585257 ]]
Iteration 100 of 1000: loss=4.36 " + "l1=2.85" + "l2=1.5 f=-0.465 shape=(1, 9000, 1)
logits [[ 1.87181   -2.2902567  1.8707784 -3.3111277]]
Iteration 200 of 1000: loss=3.49 " + "l1=1.89" + "l2=1.6 f=-0.327 shape=(1, 9000, 1)
logits [[ 1.253849  -1.6799732  1.274953  -2.158158 ]]
Iteration 300 of 1000: loss=2.7 " + "l1=0.966" + "l2=1.74 f=-0.229 shape=(1, 9000, 1)
logits [[ 0.5603279  -1.1882954   0.73285943 -1.0226015 ]]
Iteration 400 of 1000: loss=2.12 " + "l1=0.408" + "l2=1.71 f=-0.197 shape=(1, 9000, 1)
logits [[ 0.13261753 -1.0041248   0.41259572 -0.3294943 ]]
Iteration 500 of 1000: loss=1.71 " + "l1=0.0997" + "l2=1.61 f=-0.184 shape=(1, 9000, 1)
logits [[-0.02517003 -0.9476901   0.20907791  0.02780789]]
Iteration 600 of 1000: loss=1.43 " + "l1=0.00264" + "l2=1.42 f=-0.168 shape=(1, 9000, 1)
logits [[ 0.01869477 -0.9969515   0.1553181   0.15051651]]
Iteration 700 of 1000: loss=1.28 " + "l1=0.00938" + "l2=1.27 f=-0.156 shape=(1, 9000, 1)
logits [[ 0.09696271 -1.0654863   0.180578    0.16351768]]
Iteration 800 of 1000: loss=1.19 " + "l1=0.0155" + "l2=1.17 f=-0.148 shape=(1, 9000, 1)
logits [[ 0.15659189 -1.1225839   0.20068707  0.17244968]]
Iteration 900 of 1000: loss=1.11 " + "l1=0" + "l2=1.11 f=-0.139 shape=(1, 9000, 1)
logits [[ 0.19240482 -1.1545631   0.20106967  0.20338875]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.04 " + "l1=4.04" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[ 4.842452  -3.4383755  3.1845922 -7.585257 ]]
Iteration 100 of 1000: loss=3.14 " + "l1=2.53" + "l2=0.616 f=-0.58 shape=(1, 9000, 1)
logits [[ 2.9153976 -2.763578   2.3853104 -4.8591247]]
Iteration 200 of 1000: loss=2.8 " + "l1=1.97" + "l2=0.833 f=-0.508 shape=(1, 9000, 1)
logits [[ 2.21097   -2.407279   2.0025303 -3.8364863]]
Iteration 300 of 1000: loss=2.4 " + "l1=1.47" + "l2=0.928 f=-0.416 shape=(1, 9000, 1)
logits [[ 1.6142195 -1.98443    1.617467  -2.913014 ]]
Iteration 400 of 1000: loss=2.11 " + "l1=1.18" + "l2=0.935 f=-0.351 shape=(1, 9000, 1)
logits [[ 1.2824999 -1.6338478  1.28413   -2.3347898]]
Iteration 500 of 1000: loss=1.86 " + "l1=0.899" + "l2=0.963 f=-0.292 shape=(1, 9000, 1)
logits [[ 0.9704581 -1.366433   0.9961852 -1.7700279]]
Iteration 600 of 1000: loss=1.67 " + "l1=0.706" + "l2=0.967 f=-0.256 shape=(1, 9000, 1)
logits [[ 0.67453045 -1.1984073   0.83595353 -1.3374417 ]]
Iteration 700 of 1000: loss=1.5 " + "l1=0.484" + "l2=1.01 f=-0.219 shape=(1, 9000, 1)
logits [[ 0.38038766 -1.0590293   0.64531624 -0.8445651 ]]
Iteration 800 of 1000: loss=1.33 " + "l1=0.317" + "l2=1.01 f=-0.194 shape=(1, 9000, 1)
logits [[ 0.19707015 -1.0098251   0.50496215 -0.46999362]]
Iteration 900 of 1000: loss=1.18 " + "l1=0.214" + "l2=0.967 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.12078696 -1.0112722   0.40989396 -0.24909997]]
--- 275.6213803291321 seconds ---
Adv result:3
Loading record A02499
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.092 " + "l1=0.092" + "l2=0 f=-0.649 shape=(1, 9000, 1)
logits [[ 6.4751835 -2.7297451  3.411108  -9.753728 ]]
Iteration 100 of 1000: loss=0.0918 " + "l1=0.0915" + "l2=0.000246 f=-0.65 shape=(1, 9000, 1)
logits [[ 6.4409523 -2.7109404  3.3991868 -9.72875  ]]
Iteration 200 of 1000: loss=0.0917 " + "l1=0.0915" + "l2=0.000224 f=-0.65 shape=(1, 9000, 1)
logits [[ 6.4375644 -2.708359   3.3976264 -9.726605 ]]
Iteration 300 of 1000: loss=0.0916 " + "l1=0.0914" + "l2=0.000264 f=-0.65 shape=(1, 9000, 1)
logits [[ 6.4321184 -2.7045233  3.3954582 -9.722948 ]]
Iteration 400 of 1000: loss=0.0916 " + "l1=0.0913" + "l2=0.000338 f=-0.65 shape=(1, 9000, 1)
logits [[ 6.426633  -2.7006247  3.3933418 -9.719331 ]]
Iteration 500 of 1000: loss=0.0916 " + "l1=0.0912" + "l2=0.000389 f=-0.65 shape=(1, 9000, 1)
logits [[ 6.421493  -2.6969721  3.3914542 -9.716006 ]]
Iteration 600 of 1000: loss=0.0916 " + "l1=0.0911" + "l2=0.000488 f=-0.65 shape=(1, 9000, 1)
logits [[ 6.416692  -2.6934903  3.3897762 -9.713047 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.92 " + "l1=0.92" + "l2=0 f=-0.649 shape=(1, 9000, 1)
logits [[ 6.4751835 -2.7297451  3.411108  -9.753728 ]]
Iteration 100 of 1000: loss=0.892 " + "l1=0.874" + "l2=0.0183 f=-0.653 shape=(1, 9000, 1)
logits [[ 6.1784825 -2.5576081  3.3074327 -9.540397 ]]
Iteration 200 of 1000: loss=0.88 " + "l1=0.853" + "l2=0.0264 f=-0.654 shape=(1, 9000, 1)
logits [[ 6.0537    -2.4773602  3.261152  -9.454556 ]]
Iteration 300 of 1000: loss=0.871 " + "l1=0.839" + "l2=0.0321 f=-0.654 shape=(1, 9000, 1)
logits [[ 5.9612603 -2.4258406  3.2322214 -9.383722 ]]
Iteration 400 of 1000: loss=0.862 " + "l1=0.824" + "l2=0.0381 f=-0.654 shape=(1, 9000, 1)
logits [[ 5.862355  -2.3726585  3.2054005 -9.310309 ]]
Iteration 500 of 1000: loss=0.852 " + "l1=0.81" + "l2=0.0419 f=-0.653 shape=(1, 9000, 1)
logits [[ 5.7783337 -2.3236082  3.1826534 -9.24851  ]]
Iteration 600 of 1000: loss=0.842 " + "l1=0.797" + "l2=0.0449 f=-0.65 shape=(1, 9000, 1)
logits [[ 5.6954384 -2.2712893  3.162453  -9.18649  ]]
Iteration 700 of 1000: loss=0.83 " + "l1=0.779" + "l2=0.0503 f=-0.648 shape=(1, 9000, 1)
logits [[ 5.5868187 -2.2053201  3.136168  -9.108482 ]]
Iteration 800 of 1000: loss=0.816 " + "l1=0.76" + "l2=0.0557 f=-0.646 shape=(1, 9000, 1)
logits [[ 5.4650297 -2.1399603  3.1084359 -9.017784 ]]
Iteration 900 of 1000: loss=0.803 " + "l1=0.741" + "l2=0.0621 f=-0.644 shape=(1, 9000, 1)
logits [[ 5.335477  -2.0729952  3.0756803 -8.915716 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.2 " + "l1=9.2" + "l2=0 f=-0.649 shape=(1, 9000, 1)
logits [[ 6.4751835 -2.7297451  3.411108  -9.753728 ]]
Iteration 100 of 1000: loss=6.22 " + "l1=4.72" + "l2=1.49 f=-0.685 shape=(1, 9000, 1)
logits [[ 3.3246734 -1.396845   2.5533807 -7.219257 ]]
Iteration 200 of 1000: loss=5.12 " + "l1=3.31" + "l2=1.81 f=-0.659 shape=(1, 9000, 1)
logits [[ 2.2905943 -1.01809    2.2549841 -6.1647   ]]
Iteration 300 of 1000: loss=4.62 " + "l1=2.9" + "l2=1.72 f=-0.625 shape=(1, 9000, 1)
logits [[ 2.034563  -0.8620419  2.0389807 -5.7133284]]
Iteration 400 of 1000: loss=4.03 " + "l1=2.23" + "l2=1.8 f=-0.577 shape=(1, 9000, 1)
logits [[ 1.7336332  -0.47877428  1.747448   -5.3104773 ]]
Iteration 500 of 1000: loss=3.6 " + "l1=1.77" + "l2=1.83 f=-0.54 shape=(1, 9000, 1)
logits [[ 1.5391638  -0.22436799  1.5415235  -5.015377  ]]
Iteration 600 of 1000: loss=3.35 " + "l1=1.51" + "l2=1.84 f=-0.515 shape=(1, 9000, 1)
logits [[ 1.3943491  -0.10501096  1.4040506  -4.752449  ]]
Iteration 700 of 1000: loss=3.17 " + "l1=1.33" + "l2=1.84 f=-0.494 shape=(1, 9000, 1)
logits [[ 1.29028    -0.02335328  1.3041537  -4.545789  ]]
Iteration 800 of 1000: loss=3.05 " + "l1=1.25" + "l2=1.8 f=-0.481 shape=(1, 9000, 1)
logits [[ 1.2405946e+00 -3.4759007e-04  1.2504460e+00 -4.4151869e+00]]
Iteration 900 of 1000: loss=2.98 " + "l1=1.2" + "l2=1.78 f=-0.467 shape=(1, 9000, 1)
logits [[ 1.225062    0.02417912  1.2232541  -4.339527  ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=92 " + "l1=92" + "l2=0 f=-0.649 shape=(1, 9000, 1)
logits [[ 6.4751835 -2.7297451  3.411108  -9.753728 ]]
Iteration 100 of 1000: loss=22.5 " + "l1=10.9" + "l2=11.6 f=-0.604 shape=(1, 9000, 1)
logits [[ 1.0609905  -0.01448326  1.0764364  -4.538488  ]]
Iteration 200 of 1000: loss=12.8 " + "l1=0.0249" + "l2=12.7 f=-0.487 shape=(1, 9000, 1)
logits [[ 0.59117615  0.6212161   0.62370735 -3.783321  ]]
Iteration 300 of 1000: loss=10.5 " + "l1=0" + "l2=10.5 f=-0.475 shape=(1, 9000, 1)
logits [[ 0.5498753   0.61242545  0.60587007 -3.6677332 ]]
Iteration 400 of 1000: loss=9.57 " + "l1=0" + "l2=9.57 f=-0.449 shape=(1, 9000, 1)
logits [[ 0.5114985  0.5793412  0.5715721 -3.4575803]]
Iteration 500 of 1000: loss=8.99 " + "l1=0" + "l2=8.99 f=-0.423 shape=(1, 9000, 1)
logits [[ 0.55196905  0.5605323   0.5543933  -3.358261  ]]
Iteration 600 of 1000: loss=8.67 " + "l1=0" + "l2=8.67 f=-0.423 shape=(1, 9000, 1)
logits [[ 0.4675668   0.55464524  0.54655474 -3.2624164 ]]
Iteration 700 of 1000: loss=8.39 " + "l1=0.115" + "l2=8.28 f=-0.42 shape=(1, 9000, 1)
logits [[ 0.48420766  0.53046477  0.54201376 -3.2349954 ]]
Iteration 800 of 1000: loss=8.07 " + "l1=0" + "l2=8.07 f=-0.418 shape=(1, 9000, 1)
logits [[ 0.443903   0.5245828  0.508386  -3.148254 ]]
Iteration 900 of 1000: loss=7.67 " + "l1=0" + "l2=7.67 f=-0.422 shape=(1, 9000, 1)
logits [[ 0.42065066  0.50055134  0.49795243 -3.1053085 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=50.6 " + "l1=50.6" + "l2=0 f=-0.649 shape=(1, 9000, 1)
logits [[ 6.4751835 -2.7297451  3.411108  -9.753728 ]]
Iteration 100 of 1000: loss=16.6 " + "l1=8.91" + "l2=7.73 f=-0.621 shape=(1, 9000, 1)
logits [[ 1.3880782  -0.23184505  1.3788633  -5.0190516 ]]
Iteration 200 of 1000: loss=11.9 " + "l1=3.6" + "l2=8.34 f=-0.522 shape=(1, 9000, 1)
logits [[ 0.898352    0.24795789  0.90258235 -4.136076  ]]
Iteration 300 of 1000: loss=7.75 " + "l1=0.0361" + "l2=7.71 f=-0.501 shape=(1, 9000, 1)
logits [[ 0.6565579   0.74105775  0.7476152  -4.149976  ]]
Iteration 400 of 1000: loss=6.47 " + "l1=0.0483" + "l2=6.42 f=-0.498 shape=(1, 9000, 1)
logits [[ 0.6873997   0.75830007  0.76707983 -4.2029862 ]]
Iteration 500 of 1000: loss=5.83 " + "l1=0" + "l2=5.83 f=-0.495 shape=(1, 9000, 1)
logits [[ 0.67347306  0.75567377  0.7537494  -4.163043  ]]
Iteration 600 of 1000: loss=5.44 " + "l1=0.00151" + "l2=5.44 f=-0.484 shape=(1, 9000, 1)
logits [[ 0.6356178   0.7370422   0.73731697 -4.0466948 ]]
Iteration 700 of 1000: loss=5.2 " + "l1=0.0847" + "l2=5.12 f=-0.477 shape=(1, 9000, 1)
logits [[ 0.6381249   0.71772075  0.7331185  -3.998119  ]]
Iteration 800 of 1000: loss=4.95 " + "l1=0" + "l2=4.95 f=-0.47 shape=(1, 9000, 1)
logits [[ 0.6035541   0.7283311   0.71546674 -3.9292302 ]]
Iteration 900 of 1000: loss=4.71 " + "l1=0" + "l2=4.71 f=-0.464 shape=(1, 9000, 1)
logits [[ 0.60803646  0.71813345  0.71534866 -3.8956864 ]]
--- 274.2335526943207 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0306 " + "l1=0.0306" + "l2=0 f=-0.649 shape=(1, 9000, 1)
logits [[ 6.4751835 -2.7297451  3.411108  -9.753728 ]]
Iteration 100 of 1000: loss=0.0305 " + "l1=0.0304" + "l2=0.000154 f=-0.651 shape=(1, 9000, 1)
logits [[ 6.44975   -2.730357   3.413062  -9.7345085]]
Iteration 200 of 1000: loss=0.0305 " + "l1=0.0304" + "l2=0.000119 f=-0.651 shape=(1, 9000, 1)
logits [[ 6.449315  -2.7304385  3.4127467 -9.733894 ]]
Iteration 300 of 1000: loss=0.0305 " + "l1=0.0303" + "l2=0.000128 f=-0.651 shape=(1, 9000, 1)
logits [[ 6.4467487 -2.7304852  3.4128687 -9.7318125]]
Iteration 400 of 1000: loss=0.0305 " + "l1=0.0303" + "l2=0.00018 f=-0.651 shape=(1, 9000, 1)
logits [[ 6.444103  -2.730435   3.4131203 -9.729812 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.306 " + "l1=0.306" + "l2=0 f=-0.649 shape=(1, 9000, 1)
logits [[ 6.4751835 -2.7297451  3.411108  -9.753728 ]]
Iteration 100 of 1000: loss=0.294 " + "l1=0.287" + "l2=0.00748 f=-0.659 shape=(1, 9000, 1)
logits [[ 6.289843 -2.735285  3.420468 -9.609585]]
Iteration 200 of 1000: loss=0.291 " + "l1=0.281" + "l2=0.00964 f=-0.66 shape=(1, 9000, 1)
logits [[ 6.231449  -2.7335641  3.4212265 -9.560979 ]]
Iteration 300 of 1000: loss=0.288 " + "l1=0.277" + "l2=0.0112 f=-0.661 shape=(1, 9000, 1)
logits [[ 6.1888213 -2.730172   3.4228706 -9.525723 ]]
Iteration 400 of 1000: loss=0.285 " + "l1=0.273" + "l2=0.0128 f=-0.662 shape=(1, 9000, 1)
logits [[ 6.149726  -2.7246506  3.4245222 -9.495708 ]]
Iteration 500 of 1000: loss=0.283 " + "l1=0.269" + "l2=0.0143 f=-0.662 shape=(1, 9000, 1)
logits [[ 6.1127853 -2.7172246  3.4263754 -9.468038 ]]
Iteration 600 of 1000: loss=0.28 " + "l1=0.265" + "l2=0.0158 f=-0.661 shape=(1, 9000, 1)
logits [[ 6.0738254 -2.7066095  3.4275477 -9.440108 ]]
Iteration 700 of 1000: loss=0.278 " + "l1=0.26" + "l2=0.0172 f=-0.66 shape=(1, 9000, 1)
logits [[ 6.034964  -2.693204   3.4300785 -9.413328 ]]
Iteration 800 of 1000: loss=0.275 " + "l1=0.257" + "l2=0.0183 f=-0.659 shape=(1, 9000, 1)
logits [[ 5.996452  -2.6762123  3.430983  -9.3886175]]
Iteration 900 of 1000: loss=0.272 " + "l1=0.253" + "l2=0.0193 f=-0.659 shape=(1, 9000, 1)
logits [[ 5.9546447 -2.6553133  3.4293282 -9.363876 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.06 " + "l1=3.06" + "l2=0 f=-0.649 shape=(1, 9000, 1)
logits [[ 6.4751835 -2.7297451  3.411108  -9.753728 ]]
Iteration 100 of 1000: loss=1.46 " + "l1=0.533" + "l2=0.929 f=-0.738 shape=(1, 9000, 1)
logits [[ 3.9368293 -2.592791   3.403872  -7.7006054]]
Iteration 200 of 1000: loss=0.918 " + "l1=0.00671" + "l2=0.911 f=-0.729 shape=(1, 9000, 1)
logits [[ 3.424161  -2.5303836  3.4174469 -7.226503 ]]
Iteration 300 of 1000: loss=0.789 " + "l1=0" + "l2=0.789 f=-0.717 shape=(1, 9000, 1)
logits [[ 3.4037223 -2.517234   3.4065402 -7.1625586]]
Iteration 400 of 1000: loss=0.714 " + "l1=0" + "l2=0.714 f=-0.708 shape=(1, 9000, 1)
logits [[ 3.3927824 -2.5178182  3.3960114 -7.10465  ]]
Iteration 500 of 1000: loss=0.657 " + "l1=0" + "l2=0.657 f=-0.702 shape=(1, 9000, 1)
logits [[ 3.3831124 -2.5217721  3.3834877 -7.0526376]]
Iteration 600 of 1000: loss=0.616 " + "l1=0.0104" + "l2=0.606 f=-0.696 shape=(1, 9000, 1)
logits [[ 3.384292  -2.5234118  3.3739295 -7.0168824]]
Iteration 700 of 1000: loss=0.574 " + "l1=0" + "l2=0.574 f=-0.691 shape=(1, 9000, 1)
logits [[ 3.3531    -2.5146027  3.3546124 -6.957458 ]]
Iteration 800 of 1000: loss=0.539 " + "l1=0.00317" + "l2=0.536 f=-0.683 shape=(1, 9000, 1)
logits [[ 3.3318734 -2.4905105  3.3287036 -6.9040375]]
Iteration 900 of 1000: loss=0.503 " + "l1=0" + "l2=0.503 f=-0.674 shape=(1, 9000, 1)
logits [[ 3.3093634 -2.4676178  3.3128185 -6.8505664]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.69 " + "l1=1.69" + "l2=0 f=-0.649 shape=(1, 9000, 1)
logits [[ 6.4751835 -2.7297451  3.411108  -9.753728 ]]
Iteration 100 of 1000: loss=1.23 " + "l1=0.902" + "l2=0.324 f=-0.705 shape=(1, 9000, 1)
logits [[ 5.0541573 -2.688307   3.414611  -8.599602 ]]
Iteration 200 of 1000: loss=0.986 " + "l1=0.534" + "l2=0.452 f=-0.715 shape=(1, 9000, 1)
logits [[ 4.376964  -2.6069176  3.4068809 -8.035018 ]]
Iteration 300 of 1000: loss=0.809 " + "l1=0.259" + "l2=0.551 f=-0.73 shape=(1, 9000, 1)
logits [[ 3.8908138 -2.5786366  3.4207838 -7.654165 ]]
Iteration 400 of 1000: loss=0.71 " + "l1=0.15" + "l2=0.559 f=-0.725 shape=(1, 9000, 1)
logits [[ 3.700812  -2.5725749  3.427515  -7.4572444]]
Iteration 500 of 1000: loss=0.633 " + "l1=0.0559" + "l2=0.577 f=-0.713 shape=(1, 9000, 1)
logits [[ 3.5103068 -2.5528367  3.4086246 -7.218789 ]]
Iteration 600 of 1000: loss=0.564 " + "l1=0" + "l2=0.564 f=-0.697 shape=(1, 9000, 1)
logits [[ 3.420152  -2.5882394  3.4206824 -7.0423737]]
Iteration 700 of 1000: loss=0.501 " + "l1=2.62e-05" + "l2=0.501 f=-0.679 shape=(1, 9000, 1)
logits [[ 3.4378226 -2.6427076  3.437775  -6.9503384]]
Iteration 800 of 1000: loss=0.452 " + "l1=0.00278" + "l2=0.45 f=-0.662 shape=(1, 9000, 1)
logits [[ 3.4415314 -2.6434119  3.4364793 -6.8842955]]
Iteration 900 of 1000: loss=0.416 " + "l1=0" + "l2=0.416 f=-0.644 shape=(1, 9000, 1)
logits [[ 3.4113073 -2.6214862  3.421941  -6.787922 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.996 " + "l1=0.996" + "l2=0 f=-0.649 shape=(1, 9000, 1)
logits [[ 6.4751835 -2.7297451  3.411108  -9.753728 ]]
Iteration 100 of 1000: loss=0.865 " + "l1=0.778" + "l2=0.0877 f=-0.68 shape=(1, 9000, 1)
logits [[ 5.822021  -2.7302861  3.4297128 -9.240635 ]]
Iteration 200 of 1000: loss=0.789 " + "l1=0.633" + "l2=0.156 f=-0.694 shape=(1, 9000, 1)
logits [[ 5.364335  -2.7032812  3.416098  -8.855022 ]]
Iteration 300 of 1000: loss=0.725 " + "l1=0.526" + "l2=0.199 f=-0.693 shape=(1, 9000, 1)
logits [[ 5.0325494 -2.6607244  3.4129941 -8.556024 ]]
Iteration 400 of 1000: loss=0.681 " + "l1=0.457" + "l2=0.224 f=-0.69 shape=(1, 9000, 1)
logits [[ 4.7971168 -2.6112418  3.390744  -8.336724 ]]
Iteration 500 of 1000: loss=0.646 " + "l1=0.404" + "l2=0.242 f=-0.687 shape=(1, 9000, 1)
logits [[ 4.6162486 -2.571082   3.372577  -8.164783 ]]
Iteration 600 of 1000: loss=0.611 " + "l1=0.359" + "l2=0.252 f=-0.687 shape=(1, 9000, 1)
logits [[ 4.4692855 -2.5554988  3.363908  -8.026776 ]]
Iteration 700 of 1000: loss=0.576 " + "l1=0.321" + "l2=0.255 f=-0.684 shape=(1, 9000, 1)
logits [[ 4.35276   -2.5637548  3.3659635 -7.89201  ]]
Iteration 800 of 1000: loss=0.537 " + "l1=0.286" + "l2=0.251 f=-0.681 shape=(1, 9000, 1)
logits [[ 4.249961  -2.5578218  3.3700774 -7.7863817]]
Iteration 900 of 1000: loss=0.5 " + "l1=0.251" + "l2=0.249 f=-0.679 shape=(1, 9000, 1)
logits [[ 4.1365952 -2.5367455  3.364576  -7.679542 ]]
--- 262.9863226413727 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.162 " + "l1=0.162" + "l2=0 f=-0.649 shape=(1, 9000, 1)
logits [[ 6.4751835 -2.7297451  3.411108  -9.753728 ]]
Iteration 100 of 1000: loss=0.162 " + "l1=0.161" + "l2=0.000443 f=-0.649 shape=(1, 9000, 1)
logits [[ 6.4267864 -2.7241378  3.3997571 -9.698632 ]]
Iteration 200 of 1000: loss=0.162 " + "l1=0.161" + "l2=0.000456 f=-0.649 shape=(1, 9000, 1)
logits [[ 6.4191256 -2.7232313  3.3977094 -9.690366 ]]
Iteration 300 of 1000: loss=0.161 " + "l1=0.161" + "l2=0.00056 f=-0.649 shape=(1, 9000, 1)
logits [[ 6.4100003 -2.7218852  3.3951645 -9.680152 ]]
Iteration 400 of 1000: loss=0.161 " + "l1=0.161" + "l2=0.000668 f=-0.649 shape=(1, 9000, 1)
logits [[ 6.401497 -2.720523  3.392701 -9.670575]]
Iteration 500 of 1000: loss=0.161 " + "l1=0.161" + "l2=0.00079 f=-0.649 shape=(1, 9000, 1)
logits [[ 6.3941073 -2.7192168  3.390483  -9.662122 ]]
Iteration 600 of 1000: loss=0.161 " + "l1=0.16" + "l2=0.000877 f=-0.649 shape=(1, 9000, 1)
logits [[ 6.38758   -2.7179093  3.3884711 -9.654715 ]]
Iteration 700 of 1000: loss=0.161 " + "l1=0.16" + "l2=0.00106 f=-0.649 shape=(1, 9000, 1)
logits [[ 6.381648  -2.7165978  3.386556  -9.647949 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.62 " + "l1=1.62" + "l2=0 f=-0.649 shape=(1, 9000, 1)
logits [[ 6.4751835 -2.7297451  3.411108  -9.753728 ]]
Iteration 100 of 1000: loss=1.57 " + "l1=1.53" + "l2=0.0354 f=-0.647 shape=(1, 9000, 1)
logits [[ 6.031803  -2.6597166  3.3034651 -9.265129 ]]
Iteration 200 of 1000: loss=1.54 " + "l1=1.49" + "l2=0.0541 f=-0.646 shape=(1, 9000, 1)
logits [[ 5.8299003 -2.6259007  3.2507865 -9.037585 ]]
Iteration 300 of 1000: loss=1.52 " + "l1=1.44" + "l2=0.0759 f=-0.646 shape=(1, 9000, 1)
logits [[ 5.6208615 -2.605387   3.1996236 -8.79827  ]]
Iteration 400 of 1000: loss=1.5 " + "l1=1.4" + "l2=0.0971 f=-0.639 shape=(1, 9000, 1)
logits [[ 5.4305854 -2.5723603  3.1541727 -8.570125 ]]
Iteration 500 of 1000: loss=1.48 " + "l1=1.36" + "l2=0.117 f=-0.632 shape=(1, 9000, 1)
logits [[ 5.2443743 -2.5356536  3.1075299 -8.344428 ]]
Iteration 600 of 1000: loss=1.45 " + "l1=1.33" + "l2=0.127 f=-0.623 shape=(1, 9000, 1)
logits [[ 5.1016326 -2.4948897  3.0662434 -8.165952 ]]
Iteration 700 of 1000: loss=1.43 " + "l1=1.3" + "l2=0.132 f=-0.615 shape=(1, 9000, 1)
logits [[ 4.9686203 -2.44613    3.0258913 -8.010289 ]]
Iteration 800 of 1000: loss=1.4 " + "l1=1.27" + "l2=0.138 f=-0.61 shape=(1, 9000, 1)
logits [[ 4.8169975 -2.4002876  2.9819891 -7.8374424]]
Iteration 900 of 1000: loss=1.38 " + "l1=1.23" + "l2=0.144 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.65807   -2.357607   2.9376805 -7.655325 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=16.2 " + "l1=16.2" + "l2=0 f=-0.649 shape=(1, 9000, 1)
logits [[ 6.4751835 -2.7297451  3.411108  -9.753728 ]]
Iteration 100 of 1000: loss=9.5 " + "l1=6.59" + "l2=2.91 f=-0.49 shape=(1, 9000, 1)
logits [[ 2.3095343 -2.3025525  2.3110795 -4.278738 ]]
Iteration 200 of 1000: loss=7.22 " + "l1=4.05" + "l2=3.17 f=-0.286 shape=(1, 9000, 1)
logits [[ 1.5168527 -2.0492027  1.7160397 -2.3295522]]
Iteration 300 of 1000: loss=6.03 " + "l1=2.36" + "l2=3.67 f=-0.152 shape=(1, 9000, 1)
logits [[ 0.7154325  -1.7202777   1.380392   -0.98321736]]
Iteration 400 of 1000: loss=5.21 " + "l1=1.49" + "l2=3.72 f=-0.102 shape=(1, 9000, 1)
logits [[ 0.34223914 -1.5976948   1.1691568  -0.32105875]]
Iteration 500 of 1000: loss=4.62 " + "l1=0.954" + "l2=3.67 f=-0.0799 shape=(1, 9000, 1)
logits [[ 0.11547044 -1.5073017   1.0129395   0.05920351]]
Iteration 600 of 1000: loss=4.01 " + "l1=0.422" + "l2=3.59 f=-0.0559 shape=(1, 9000, 1)
logits [[-0.06882586 -1.4541432   0.8605684   0.43880138]]
Iteration 700 of 1000: loss=3.46 " + "l1=0.0527" + "l2=3.41 f=-0.0537 shape=(1, 9000, 1)
logits [[-0.18082814 -1.4295701   0.72423077  0.6715011 ]]
Iteration 800 of 1000: loss=3.07 " + "l1=0.0366" + "l2=3.04 f=-0.0589 shape=(1, 9000, 1)
logits [[-0.17801696 -1.4224187   0.7008024   0.6641805 ]]
Iteration 900 of 1000: loss=2.79 " + "l1=0" + "l2=2.79 f=-0.0585 shape=(1, 9000, 1)
logits [[-0.17929594 -1.4399849   0.6823783   0.70300525]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=8.93 " + "l1=8.93" + "l2=0 f=-0.649 shape=(1, 9000, 1)
logits [[ 6.4751835 -2.7297451  3.411108  -9.753728 ]]
Iteration 100 of 1000: loss=6.58 " + "l1=5.21" + "l2=1.37 f=-0.603 shape=(1, 9000, 1)
logits [[ 3.3596194 -2.4433615  2.7754266 -6.1042895]]
Iteration 200 of 1000: loss=5.42 " + "l1=3.75" + "l2=1.67 f=-0.467 shape=(1, 9000, 1)
logits [[ 2.4134076 -2.2837627  2.410196  -4.4095535]]
Iteration 300 of 1000: loss=4.72 " + "l1=2.96" + "l2=1.76 f=-0.349 shape=(1, 9000, 1)
logits [[ 2.0632668 -2.2235038  2.074849  -3.3107705]]
Iteration 400 of 1000: loss=4.28 " + "l1=2.46" + "l2=1.82 f=-0.292 shape=(1, 9000, 1)
logits [[ 1.7199823 -2.0634992  1.8276557 -2.6505954]]
Iteration 500 of 1000: loss=3.97 " + "l1=2.11" + "l2=1.86 f=-0.264 shape=(1, 9000, 1)
logits [[ 1.3943207 -1.9181751  1.6524081 -2.184175 ]]
Iteration 600 of 1000: loss=3.68 " + "l1=1.77" + "l2=1.92 f=-0.231 shape=(1, 9000, 1)
logits [[ 1.0897148 -1.8171293  1.5064508 -1.703475 ]]
Iteration 700 of 1000: loss=3.44 " + "l1=1.46" + "l2=1.99 f=-0.192 shape=(1, 9000, 1)
logits [[ 0.8311696 -1.7332278  1.3941194 -1.2586262]]
Iteration 800 of 1000: loss=3.17 " + "l1=1.1" + "l2=2.07 f=-0.14 shape=(1, 9000, 1)
logits [[ 0.5478986 -1.6401718  1.2657052 -0.7341994]]
Iteration 900 of 1000: loss=2.81 " + "l1=0.772" + "l2=2.04 f=-0.115 shape=(1, 9000, 1)
logits [[ 0.32628402 -1.6288581   1.1228913  -0.28033513]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=12.6 " + "l1=12.6" + "l2=0 f=-0.649 shape=(1, 9000, 1)
logits [[ 6.4751835 -2.7297451  3.411108  -9.753728 ]]
Iteration 100 of 1000: loss=8.14 " + "l1=5.81" + "l2=2.33 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.5780344 -2.3853111  2.5731888 -4.9126287]]
Iteration 200 of 1000: loss=6.47 " + "l1=4.12" + "l2=2.35 f=-0.37 shape=(1, 9000, 1)
logits [[ 1.9997222 -2.1948588  2.0162358 -3.301507 ]]
Iteration 300 of 1000: loss=5.5 " + "l1=2.95" + "l2=2.54 f=-0.247 shape=(1, 9000, 1)
logits [[ 1.438171  -1.9933194  1.689671  -2.1220493]]
Iteration 400 of 1000: loss=4.95 " + "l1=2.18" + "l2=2.76 f=-0.188 shape=(1, 9000, 1)
logits [[ 0.9165832 -1.8072222  1.4763242 -1.3386319]]
Iteration 500 of 1000: loss=4.43 " + "l1=1.5" + "l2=2.94 f=-0.131 shape=(1, 9000, 1)
logits [[ 0.528523  -1.6859667  1.2824394 -0.6474347]]
Iteration 600 of 1000: loss=3.91 " + "l1=0.938" + "l2=2.97 f=-0.0888 shape=(1, 9000, 1)
logits [[ 0.25459868 -1.5328996   1.0669067  -0.14361376]]
Iteration 700 of 1000: loss=3.47 " + "l1=0.558" + "l2=2.91 f=-0.0655 shape=(1, 9000, 1)
logits [[ 0.08742243 -1.4654012   0.91783446  0.19805151]]
Iteration 800 of 1000: loss=3.09 " + "l1=0.258" + "l2=2.83 f=-0.0587 shape=(1, 9000, 1)
logits [[-0.02331595 -1.4816146   0.8017805   0.46853098]]
Iteration 900 of 1000: loss=2.72 " + "l1=0.018" + "l2=2.7 f=-0.0525 shape=(1, 9000, 1)
logits [[-0.13069156 -1.4833524   0.71369773  0.69043785]]
--- 280.2999973297119 seconds ---
Adv result:3
Loading record A02506
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0473 " + "l1=0.0473" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[ 3.1231084 -1.6056578  2.2958345 -7.5241585]]
Iteration 100 of 1000: loss=0.047 " + "l1=0.0468" + "l2=0.000212 f=-0.927 shape=(1, 9000, 1)
logits [[ 3.090179  -1.5899624  2.2849598 -7.4938602]]
Iteration 200 of 1000: loss=0.0469 " + "l1=0.0467" + "l2=0.000201 f=-0.927 shape=(1, 9000, 1)
logits [[ 3.0858142 -1.5876863  2.283341  -7.4901714]]
Iteration 300 of 1000: loss=0.0469 " + "l1=0.0466" + "l2=0.000246 f=-0.927 shape=(1, 9000, 1)
logits [[ 3.0794294 -1.5846453  2.2814403 -7.4849796]]
Iteration 400 of 1000: loss=0.0469 " + "l1=0.0465" + "l2=0.000337 f=-0.927 shape=(1, 9000, 1)
logits [[ 3.0730836 -1.5817263  2.27986   -7.4802113]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.473 " + "l1=0.473" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[ 3.1231084 -1.6056578  2.2958345 -7.5241585]]
Iteration 100 of 1000: loss=0.449 " + "l1=0.437" + "l2=0.0124 f=-0.924 shape=(1, 9000, 1)
logits [[ 2.8786018 -1.4883329  2.2146544 -7.302384 ]]
Iteration 200 of 1000: loss=0.438 " + "l1=0.42" + "l2=0.0183 f=-0.924 shape=(1, 9000, 1)
logits [[ 2.7586007 -1.4382473  2.17791   -7.1927752]]
Iteration 300 of 1000: loss=0.428 " + "l1=0.404" + "l2=0.0242 f=-0.923 shape=(1, 9000, 1)
logits [[ 2.6446397 -1.3906395  2.146857  -7.0931644]]
Iteration 400 of 1000: loss=0.419 " + "l1=0.389" + "l2=0.0295 f=-0.922 shape=(1, 9000, 1)
logits [[ 2.543497  -1.3471851  2.1160822 -7.0006285]]
Iteration 500 of 1000: loss=0.41 " + "l1=0.376" + "l2=0.0338 f=-0.922 shape=(1, 9000, 1)
logits [[ 2.4542444 -1.3100377  2.0903587 -6.9218254]]
Iteration 600 of 1000: loss=0.402 " + "l1=0.364" + "l2=0.0379 f=-0.922 shape=(1, 9000, 1)
logits [[ 2.3709168 -1.2736355  2.0628414 -6.84631  ]]
Iteration 700 of 1000: loss=0.395 " + "l1=0.353" + "l2=0.0414 f=-0.922 shape=(1, 9000, 1)
logits [[ 2.2930887 -1.2406908  2.03704   -6.7760587]]
Iteration 800 of 1000: loss=0.388 " + "l1=0.343" + "l2=0.0442 f=-0.921 shape=(1, 9000, 1)
logits [[ 2.2243679 -1.2094824  2.0154445 -6.7154408]]
Iteration 900 of 1000: loss=0.381 " + "l1=0.334" + "l2=0.0466 f=-0.922 shape=(1, 9000, 1)
logits [[ 2.1554816 -1.1895005  2.002168  -6.655317 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.73 " + "l1=4.73" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[ 3.1231084 -1.6056578  2.2958345 -7.5241585]]
Iteration 100 of 1000: loss=2.76 " + "l1=1.95" + "l2=0.819 f=-0.832 shape=(1, 9000, 1)
logits [[ 1.3924048 -0.5529674  1.386353  -5.5535026]]
Iteration 200 of 1000: loss=2.18 " + "l1=1.21" + "l2=0.965 f=-0.82 shape=(1, 9000, 1)
logits [[ 0.95217824 -0.2611164   0.9527138  -4.9254165 ]]
Iteration 300 of 1000: loss=1.81 " + "l1=0.736" + "l2=1.07 f=-0.789 shape=(1, 9000, 1)
logits [[ 0.66556805 -0.06307589  0.672874   -4.431752  ]]
Iteration 400 of 1000: loss=1.57 " + "l1=0.529" + "l2=1.04 f=-0.78 shape=(1, 9000, 1)
logits [[ 0.51367795  0.00487377  0.5339715  -4.1743975 ]]
Iteration 500 of 1000: loss=1.42 " + "l1=0.404" + "l2=1.02 f=-0.77 shape=(1, 9000, 1)
logits [[ 0.44837955  0.05015761  0.45462453 -4.031852  ]]
Iteration 600 of 1000: loss=1.29 " + "l1=0.288" + "l2=1 f=-0.76 shape=(1, 9000, 1)
logits [[ 0.3429117   0.08573847  0.37378445 -3.8431184 ]]
Iteration 700 of 1000: loss=1.07 " + "l1=0.00485" + "l2=1.07 f=-0.765 shape=(1, 9000, 1)
logits [[ 0.07609859  0.16763112  0.17248051 -3.476865  ]]
Iteration 800 of 1000: loss=0.929 " + "l1=0.00643" + "l2=0.922 f=-0.76 shape=(1, 9000, 1)
logits [[ 0.07025093  0.14518723  0.15161954 -3.4088044 ]]
Iteration 900 of 1000: loss=0.828 " + "l1=0" + "l2=0.828 f=-0.755 shape=(1, 9000, 1)
logits [[ 0.00693926  0.13082302  0.12530859 -3.283933  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.6 " + "l1=2.6" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[ 3.1231084 -1.6056578  2.2958345 -7.5241585]]
Iteration 100 of 1000: loss=1.87 " + "l1=1.51" + "l2=0.353 f=-0.888 shape=(1, 9000, 1)
logits [[ 1.7887545 -0.9641804  1.784527  -6.1592736]]
Iteration 200 of 1000: loss=1.6 " + "l1=1.19" + "l2=0.406 f=-0.856 shape=(1, 9000, 1)
logits [[ 1.4867916  -0.68039805  1.4772599  -5.7091193 ]]
Iteration 300 of 1000: loss=1.43 " + "l1=0.982" + "l2=0.444 f=-0.844 shape=(1, 9000, 1)
logits [[ 1.2655163  -0.51820254  1.266779   -5.38817   ]]
Iteration 400 of 1000: loss=1.31 " + "l1=0.845" + "l2=0.464 f=-0.83 shape=(1, 9000, 1)
logits [[ 1.131156   -0.40517265  1.1296579  -5.1737013 ]]
Iteration 500 of 1000: loss=1.22 " + "l1=0.742" + "l2=0.478 f=-0.815 shape=(1, 9000, 1)
logits [[ 1.0288146 -0.316968   1.0328012 -5.004143 ]]
Iteration 600 of 1000: loss=1.14 " + "l1=0.652" + "l2=0.49 f=-0.794 shape=(1, 9000, 1)
logits [[ 0.93938994 -0.23381308  0.95182914 -4.8334556 ]]
Iteration 700 of 1000: loss=1.08 " + "l1=0.598" + "l2=0.486 f=-0.78 shape=(1, 9000, 1)
logits [[ 0.88670033 -0.19495828  0.8928775  -4.703395  ]]
Iteration 800 of 1000: loss=1.03 " + "l1=0.537" + "l2=0.496 f=-0.762 shape=(1, 9000, 1)
logits [[ 0.8147385  -0.15325145  0.8230844  -4.5322914 ]]
Iteration 900 of 1000: loss=0.971 " + "l1=0.444" + "l2=0.527 f=-0.751 shape=(1, 9000, 1)
logits [[ 0.6898815  -0.09426197  0.71285    -4.3113847 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.66 " + "l1=3.66" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[ 3.1231084 -1.6056578  2.2958345 -7.5241585]]
Iteration 100 of 1000: loss=2.35 " + "l1=1.77" + "l2=0.575 f=-0.857 shape=(1, 9000, 1)
logits [[ 1.5594313 -0.7274263  1.5622362 -5.82064  ]]
Iteration 200 of 1000: loss=1.94 " + "l1=1.28" + "l2=0.662 f=-0.836 shape=(1, 9000, 1)
logits [[ 1.1926092  -0.45352066  1.1943071  -5.2757354 ]]
Iteration 300 of 1000: loss=1.68 " + "l1=0.956" + "l2=0.724 f=-0.817 shape=(1, 9000, 1)
logits [[ 0.9505192  -0.27334005  0.9598953  -4.9061046 ]]
Iteration 400 of 1000: loss=1.5 " + "l1=0.732" + "l2=0.764 f=-0.786 shape=(1, 9000, 1)
logits [[ 0.795032  -0.1464115  0.7976524 -4.5902667]]
Iteration 500 of 1000: loss=1.35 " + "l1=0.572" + "l2=0.778 f=-0.767 shape=(1, 9000, 1)
logits [[ 0.657211   -0.06883422  0.6696837  -4.3261757 ]]
Iteration 600 of 1000: loss=1.24 " + "l1=0.492" + "l2=0.752 f=-0.761 shape=(1, 9000, 1)
logits [[ 0.59486955 -0.03220595  0.60216147 -4.2080736 ]]
Iteration 700 of 1000: loss=1.16 " + "l1=0.417" + "l2=0.741 f=-0.753 shape=(1, 9000, 1)
logits [[ 0.5349884   0.00720143  0.54510593 -4.0987897 ]]
Iteration 800 of 1000: loss=1.05 " + "l1=0.293" + "l2=0.758 f=-0.748 shape=(1, 9000, 1)
logits [[ 0.40712819  0.07440706  0.45272955 -3.9253864 ]]
Iteration 900 of 1000: loss=0.933 " + "l1=0.167" + "l2=0.766 f=-0.751 shape=(1, 9000, 1)
logits [[ 0.24953255  0.13680138  0.3518372  -3.7424798 ]]
--- 265.6800594329834 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00827 " + "l1=0.00827" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[ 3.1231084 -1.6056578  2.2958345 -7.5241585]]
Iteration 100 of 1000: loss=0.00811 " + "l1=0.00794" + "l2=0.000169 f=-0.93 shape=(1, 9000, 1)
logits [[ 3.0962644 -1.6083112  2.3020294 -7.511056 ]]
Iteration 200 of 1000: loss=0.00806 " + "l1=0.00793" + "l2=0.000133 f=-0.931 shape=(1, 9000, 1)
logits [[ 3.0947406 -1.607953   2.3019884 -7.510835 ]]
Iteration 300 of 1000: loss=0.00806 " + "l1=0.00788" + "l2=0.000177 f=-0.931 shape=(1, 9000, 1)
logits [[ 3.0908747 -1.6077795  2.3026805 -7.50954  ]]
Iteration 400 of 1000: loss=0.00803 " + "l1=0.00783" + "l2=0.000197 f=-0.931 shape=(1, 9000, 1)
logits [[ 3.0866992 -1.6075916  2.3035524 -7.5082445]]
Iteration 500 of 1000: loss=0.00804 " + "l1=0.00778" + "l2=0.000262 f=-0.932 shape=(1, 9000, 1)
logits [[ 3.0824788 -1.6073182  2.3044684 -7.5070415]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0827 " + "l1=0.0827" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[ 3.1231084 -1.6056578  2.2958345 -7.5241585]]
Iteration 100 of 1000: loss=0.0686 " + "l1=0.0613" + "l2=0.00731 f=-0.946 shape=(1, 9000, 1)
logits [[ 2.9473467 -1.6198748  2.3345227 -7.4451113]]
Iteration 200 of 1000: loss=0.0627 " + "l1=0.0524" + "l2=0.0103 f=-0.953 shape=(1, 9000, 1)
logits [[ 2.8729048 -1.620354   2.3489532 -7.41239  ]]
Iteration 300 of 1000: loss=0.0564 " + "l1=0.0427" + "l2=0.0137 f=-0.958 shape=(1, 9000, 1)
logits [[ 2.7932768 -1.6209058  2.3662448 -7.3726134]]
Iteration 400 of 1000: loss=0.05 " + "l1=0.0337" + "l2=0.0163 f=-0.964 shape=(1, 9000, 1)
logits [[ 2.7190511 -1.618566   2.382192  -7.3391156]]
Iteration 500 of 1000: loss=0.0441 " + "l1=0.0255" + "l2=0.0186 f=-0.969 shape=(1, 9000, 1)
logits [[ 2.65247   -1.6169136  2.397683  -7.3083463]]
Iteration 600 of 1000: loss=0.0391 " + "l1=0.0185" + "l2=0.0206 f=-0.973 shape=(1, 9000, 1)
logits [[ 2.5968435 -1.6182992  2.4114408 -7.2803426]]
Iteration 700 of 1000: loss=0.0343 " + "l1=0.0117" + "l2=0.0226 f=-0.976 shape=(1, 9000, 1)
logits [[ 2.5427315 -1.6190177  2.425905  -7.252496 ]]
Iteration 800 of 1000: loss=0.0299 " + "l1=0.00565" + "l2=0.0242 f=-0.978 shape=(1, 9000, 1)
logits [[ 2.493888  -1.6190413  2.437409  -7.225776 ]]
Iteration 900 of 1000: loss=0.0257 " + "l1=0.000527" + "l2=0.0251 f=-0.981 shape=(1, 9000, 1)
logits [[ 2.450657  -1.6149396  2.445388  -7.203551 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0455 " + "l1=0.0455" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[ 3.1231084 -1.6056578  2.2958345 -7.5241585]]
Iteration 100 of 1000: loss=0.0411 " + "l1=0.0387" + "l2=0.00236 f=-0.938 shape=(1, 9000, 1)
logits [[ 3.0229225 -1.6160551  2.318948  -7.478442 ]]
Iteration 200 of 1000: loss=0.0395 " + "l1=0.0365" + "l2=0.00304 f=-0.942 shape=(1, 9000, 1)
logits [[ 2.988702  -1.6159084  2.3249032 -7.464507 ]]
Iteration 300 of 1000: loss=0.0381 " + "l1=0.0344" + "l2=0.0037 f=-0.945 shape=(1, 9000, 1)
logits [[ 2.9549773 -1.61304    2.3304126 -7.450812 ]]
Iteration 400 of 1000: loss=0.0367 " + "l1=0.0323" + "l2=0.0044 f=-0.947 shape=(1, 9000, 1)
logits [[ 2.9230247 -1.6096803  2.3358805 -7.437741 ]]
Iteration 500 of 1000: loss=0.0353 " + "l1=0.0303" + "l2=0.00506 f=-0.95 shape=(1, 9000, 1)
logits [[ 2.8926406 -1.6078097  2.342057  -7.4266396]]
Iteration 600 of 1000: loss=0.0337 " + "l1=0.0277" + "l2=0.00605 f=-0.953 shape=(1, 9000, 1)
logits [[ 2.855795  -1.6081737  2.3526583 -7.4115853]]
Iteration 700 of 1000: loss=0.0321 " + "l1=0.0253" + "l2=0.00681 f=-0.955 shape=(1, 9000, 1)
logits [[ 2.8218346 -1.6062571  2.3613722 -7.397322 ]]
Iteration 800 of 1000: loss=0.0307 " + "l1=0.0232" + "l2=0.00752 f=-0.957 shape=(1, 9000, 1)
logits [[ 2.790068  -1.6041867  2.3691065 -7.383748 ]]
Iteration 900 of 1000: loss=0.0294 " + "l1=0.021" + "l2=0.00839 f=-0.959 shape=(1, 9000, 1)
logits [[ 2.7582724 -1.6018076  2.376248  -7.369404 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0641 " + "l1=0.0641" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[ 3.1231084 -1.6056578  2.2958345 -7.5241585]]
Iteration 100 of 1000: loss=0.0556 " + "l1=0.0511" + "l2=0.0045 f=-0.942 shape=(1, 9000, 1)
logits [[ 2.9856908 -1.6186837  2.326862  -7.4626613]]
Iteration 200 of 1000: loss=0.0523 " + "l1=0.0463" + "l2=0.006 f=-0.947 shape=(1, 9000, 1)
logits [[ 2.9329877 -1.6168048  2.3360648 -7.440078 ]]
Iteration 300 of 1000: loss=0.0491 " + "l1=0.0416" + "l2=0.00755 f=-0.951 shape=(1, 9000, 1)
logits [[ 2.881312  -1.6148307  2.3446043 -7.416752 ]]
Iteration 400 of 1000: loss=0.0457 " + "l1=0.0362" + "l2=0.00945 f=-0.956 shape=(1, 9000, 1)
logits [[ 2.8257115 -1.6157266  2.3584013 -7.391562 ]]
Iteration 500 of 1000: loss=0.042 " + "l1=0.0309" + "l2=0.0111 f=-0.96 shape=(1, 9000, 1)
logits [[ 2.7707157 -1.613532   2.3716638 -7.3671026]]
Iteration 600 of 1000: loss=0.0386 " + "l1=0.026" + "l2=0.0126 f=-0.963 shape=(1, 9000, 1)
logits [[ 2.7194734 -1.6116058  2.3836708 -7.3446097]]
Iteration 700 of 1000: loss=0.0357 " + "l1=0.0219" + "l2=0.0137 f=-0.966 shape=(1, 9000, 1)
logits [[ 2.6756003 -1.6094917  2.3928146 -7.323189 ]]
Iteration 800 of 1000: loss=0.0329 " + "l1=0.0183" + "l2=0.0146 f=-0.969 shape=(1, 9000, 1)
logits [[ 2.6381772 -1.607898   2.4020233 -7.3073297]]
Iteration 900 of 1000: loss=0.0304 " + "l1=0.0147" + "l2=0.0157 f=-0.971 shape=(1, 9000, 1)
logits [[ 2.6011925 -1.6062948  2.4114115 -7.2916594]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0734 " + "l1=0.0734" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[ 3.1231084 -1.6056578  2.2958345 -7.5241585]]
Iteration 100 of 1000: loss=0.0623 " + "l1=0.0565" + "l2=0.00579 f=-0.944 shape=(1, 9000, 1)
logits [[ 2.966906  -1.6195     2.330672  -7.4545965]]
Iteration 200 of 1000: loss=0.0578 " + "l1=0.05" + "l2=0.00784 f=-0.95 shape=(1, 9000, 1)
logits [[ 2.904472  -1.6170462  2.3414679 -7.427173 ]]
Iteration 300 of 1000: loss=0.0534 " + "l1=0.0431" + "l2=0.0103 f=-0.955 shape=(1, 9000, 1)
logits [[ 2.8405426 -1.6191466  2.3548822 -7.397441 ]]
Iteration 400 of 1000: loss=0.0483 " + "l1=0.0356" + "l2=0.0127 f=-0.96 shape=(1, 9000, 1)
logits [[ 2.7726164 -1.6171831  2.370948  -7.3657565]]
Iteration 500 of 1000: loss=0.0436 " + "l1=0.029" + "l2=0.0146 f=-0.964 shape=(1, 9000, 1)
logits [[ 2.7115052 -1.615107   2.385187  -7.33904  ]]
Iteration 600 of 1000: loss=0.0394 " + "l1=0.0232" + "l2=0.0162 f=-0.968 shape=(1, 9000, 1)
logits [[ 2.6582143 -1.6136243  2.3972468 -7.3138185]]
Iteration 700 of 1000: loss=0.0358 " + "l1=0.0181" + "l2=0.0177 f=-0.971 shape=(1, 9000, 1)
logits [[ 2.6122293 -1.613671   2.4083507 -7.291688 ]]
Iteration 800 of 1000: loss=0.0321 " + "l1=0.0131" + "l2=0.0191 f=-0.974 shape=(1, 9000, 1)
logits [[ 2.5670395 -1.6134293  2.419983  -7.268764 ]]
Iteration 900 of 1000: loss=0.0288 " + "l1=0.00834" + "l2=0.0204 f=-0.977 shape=(1, 9000, 1)
logits [[ 2.524253  -1.6121322  2.4302685 -7.248936 ]]
--- 272.97709345817566 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.106 " + "l1=0.106" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[ 3.1231084 -1.6056578  2.2958345 -7.5241585]]
Iteration 100 of 1000: loss=0.106 " + "l1=0.105" + "l2=0.00045 f=-0.926 shape=(1, 9000, 1)
logits [[ 3.0741715 -1.5988973  2.2789032 -7.4564013]]
Iteration 200 of 1000: loss=0.106 " + "l1=0.105" + "l2=0.000494 f=-0.925 shape=(1, 9000, 1)
logits [[ 3.063995  -1.5971327  2.2746477 -7.4433045]]
Iteration 300 of 1000: loss=0.105 " + "l1=0.105" + "l2=0.000612 f=-0.925 shape=(1, 9000, 1)
logits [[ 3.0525653 -1.5953139  2.2701833 -7.4283094]]
Iteration 400 of 1000: loss=0.105 " + "l1=0.105" + "l2=0.0008 f=-0.925 shape=(1, 9000, 1)
logits [[ 3.0421844 -1.593728   2.2662058 -7.414813 ]]
Iteration 500 of 1000: loss=0.105 " + "l1=0.104" + "l2=0.0009 f=-0.925 shape=(1, 9000, 1)
logits [[ 3.0326455 -1.5923011  2.2627459 -7.4026546]]
Iteration 600 of 1000: loss=0.105 " + "l1=0.104" + "l2=0.00105 f=-0.925 shape=(1, 9000, 1)
logits [[ 3.024222  -1.5911956  2.2599118 -7.392197 ]]
Iteration 700 of 1000: loss=0.105 " + "l1=0.104" + "l2=0.00119 f=-0.925 shape=(1, 9000, 1)
logits [[ 3.0166416 -1.590286   2.2574732 -7.382795 ]]
Iteration 800 of 1000: loss=0.105 " + "l1=0.104" + "l2=0.00131 f=-0.925 shape=(1, 9000, 1)
logits [[ 3.009652  -1.589578   2.2553551 -7.374171 ]]
Iteration 900 of 1000: loss=0.105 " + "l1=0.104" + "l2=0.00141 f=-0.925 shape=(1, 9000, 1)
logits [[ 3.0030546 -1.589113   2.2536588 -7.366431 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.06 " + "l1=1.06" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[ 3.1231084 -1.6056578  2.2958345 -7.5241585]]
Iteration 100 of 1000: loss=0.999 " + "l1=0.964" + "l2=0.0356 f=-0.911 shape=(1, 9000, 1)
logits [[ 2.694406  -1.5386537  2.1431708 -6.9410377]]
Iteration 200 of 1000: loss=0.967 " + "l1=0.912" + "l2=0.0548 f=-0.902 shape=(1, 9000, 1)
logits [[ 2.475389  -1.5024152  2.0624251 -6.6449676]]
Iteration 300 of 1000: loss=0.941 " + "l1=0.869" + "l2=0.0711 f=-0.894 shape=(1, 9000, 1)
logits [[ 2.295978  -1.4695266  1.9958862 -6.398405 ]]
Iteration 400 of 1000: loss=0.916 " + "l1=0.829" + "l2=0.0871 f=-0.889 shape=(1, 9000, 1)
logits [[ 2.1214137 -1.4458107  1.9332805 -6.1661277]]
Iteration 500 of 1000: loss=0.892 " + "l1=0.791" + "l2=0.101 f=-0.885 shape=(1, 9000, 1)
logits [[ 1.9625182 -1.4278469  1.8746892 -5.9513016]]
Iteration 600 of 1000: loss=0.868 " + "l1=0.756" + "l2=0.111 f=-0.883 shape=(1, 9000, 1)
logits [[ 1.8197694 -1.4272848  1.81825   -5.7445583]]
Iteration 700 of 1000: loss=0.841 " + "l1=0.73" + "l2=0.111 f=-0.874 shape=(1, 9000, 1)
logits [[ 1.7446586 -1.4316155  1.7434884 -5.551084 ]]
Iteration 800 of 1000: loss=0.808 " + "l1=0.695" + "l2=0.114 f=-0.861 shape=(1, 9000, 1)
logits [[ 1.6517919 -1.4556671  1.6537807 -5.292761 ]]
Iteration 900 of 1000: loss=0.782 " + "l1=0.67" + "l2=0.111 f=-0.843 shape=(1, 9000, 1)
logits [[ 1.5979661 -1.4663175  1.5974296 -5.1028867]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.6 " + "l1=10.6" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[ 3.1231084 -1.6056578  2.2958345 -7.5241585]]
Iteration 100 of 1000: loss=5.74 " + "l1=3.42" + "l2=2.33 f=-0.591 shape=(1, 9000, 1)
logits [[ 0.66014653 -0.98908037  0.691525   -2.7266424 ]]
Iteration 200 of 1000: loss=3.86 " + "l1=0.975" + "l2=2.89 f=-0.437 shape=(1, 9000, 1)
logits [[-0.04486966 -0.97697115  0.12344992 -0.851247  ]]
Iteration 300 of 1000: loss=2.76 " + "l1=0.0113" + "l2=2.75 f=-0.388 shape=(1, 9000, 1)
logits [[-0.40974778 -0.94013005 -0.09588388 -0.10721542]]
Iteration 400 of 1000: loss=2.18 " + "l1=0" + "l2=2.18 f=-0.376 shape=(1, 9000, 1)
logits [[-0.36324784 -0.9850221  -0.08175459 -0.07303346]]
Iteration 500 of 1000: loss=1.78 " + "l1=0.0139" + "l2=1.77 f=-0.387 shape=(1, 9000, 1)
logits [[-0.33355123 -1.0421312  -0.07832145 -0.09218624]]
Iteration 600 of 1000: loss=1.49 " + "l1=0" + "l2=1.49 f=-0.385 shape=(1, 9000, 1)
logits [[-0.30688676 -1.0725666  -0.08134736 -0.08079768]]
Iteration 700 of 1000: loss=1.32 " + "l1=0" + "l2=1.32 f=-0.372 shape=(1, 9000, 1)
logits [[-0.2654476  -1.1269726  -0.06193262 -0.0323227 ]]
Iteration 800 of 1000: loss=1.18 " + "l1=0" + "l2=1.18 f=-0.363 shape=(1, 9000, 1)
logits [[-0.21512717 -1.1760619  -0.03651522 -0.02242576]]
Iteration 900 of 1000: loss=1.07 " + "l1=0" + "l2=1.07 f=-0.358 shape=(1, 9000, 1)
logits [[-0.19642207 -1.208935   -0.01648838 -0.0121123 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.86 " + "l1=5.86" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[ 3.1231084 -1.6056578  2.2958345 -7.5241585]]
Iteration 100 of 1000: loss=4.08 " + "l1=3.29" + "l2=0.782 f=-0.759 shape=(1, 9000, 1)
logits [[ 1.3866535 -1.2077782  1.3881198 -4.6011457]]
Iteration 200 of 1000: loss=3.35 " + "l1=2.28" + "l2=1.07 f=-0.653 shape=(1, 9000, 1)
logits [[ 0.8534807 -1.0344454  0.8602299 -3.2926686]]
Iteration 300 of 1000: loss=2.71 " + "l1=1.39" + "l2=1.31 f=-0.568 shape=(1, 9000, 1)
logits [[ 0.40747187 -1.1504693   0.5022323  -2.0293496 ]]
Iteration 400 of 1000: loss=2.14 " + "l1=0.766" + "l2=1.37 f=-0.475 shape=(1, 9000, 1)
logits [[ 0.15375187 -1.2534021   0.2963535  -1.0955118 ]]
Iteration 500 of 1000: loss=1.71 " + "l1=0.362" + "l2=1.35 f=-0.422 shape=(1, 9000, 1)
logits [[-0.06470602 -1.2349969   0.13415116 -0.52401114]]
Iteration 600 of 1000: loss=1.41 " + "l1=0.0392" + "l2=1.37 f=-0.391 shape=(1, 9000, 1)
logits [[-0.2722834  -1.1945883  -0.01368894 -0.0849775 ]]
Iteration 700 of 1000: loss=1.18 " + "l1=0.00767" + "l2=1.17 f=-0.388 shape=(1, 9000, 1)
logits [[-0.28198665 -1.2109812  -0.0216848  -0.0356332 ]]
Iteration 800 of 1000: loss=1.04 " + "l1=0.00999" + "l2=1.03 f=-0.387 shape=(1, 9000, 1)
logits [[-0.26198196 -1.2364384  -0.01523558 -0.03339506]]
Iteration 900 of 1000: loss=0.93 " + "l1=0.00996" + "l2=0.92 f=-0.383 shape=(1, 9000, 1)
logits [[-0.22675547 -1.2650555  -0.01089432 -0.02900582]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.46 " + "l1=3.46" + "l2=0 f=-0.928 shape=(1, 9000, 1)
logits [[ 3.1231084 -1.6056578  2.2958345 -7.5241585]]
Iteration 100 of 1000: loss=2.74 " + "l1=2.38" + "l2=0.359 f=-0.845 shape=(1, 9000, 1)
logits [[ 1.7708038 -1.3675543  1.7690609 -5.5518894]]
Iteration 200 of 1000: loss=2.45 " + "l1=2" + "l2=0.448 f=-0.785 shape=(1, 9000, 1)
logits [[ 1.4079062 -1.2112414  1.4119741 -4.748089 ]]
Iteration 300 of 1000: loss=2.21 " + "l1=1.68" + "l2=0.531 f=-0.736 shape=(1, 9000, 1)
logits [[ 1.129424  -1.1737068  1.1329358 -4.031128 ]]
Iteration 400 of 1000: loss=1.96 " + "l1=1.35" + "l2=0.61 f=-0.675 shape=(1, 9000, 1)
logits [[ 0.8826281 -1.2472864  0.9026847 -3.236476 ]]
Iteration 500 of 1000: loss=1.7 " + "l1=1.03" + "l2=0.66 f=-0.592 shape=(1, 9000, 1)
logits [[ 0.6703242  -1.3419505   0.74356365 -2.4408753 ]]
Iteration 600 of 1000: loss=1.43 " + "l1=0.761" + "l2=0.672 f=-0.512 shape=(1, 9000, 1)
logits [[ 0.47758916 -1.3587974   0.58759236 -1.754338  ]]
Iteration 700 of 1000: loss=1.25 " + "l1=0.581" + "l2=0.668 f=-0.484 shape=(1, 9000, 1)
logits [[ 0.31803867 -1.3897971   0.46329296 -1.3257    ]]
Iteration 800 of 1000: loss=1.12 " + "l1=0.469" + "l2=0.648 f=-0.463 shape=(1, 9000, 1)
logits [[ 0.20777689 -1.3839129   0.3844501  -1.0594416 ]]
Iteration 900 of 1000: loss=1.02 " + "l1=0.376" + "l2=0.642 f=-0.446 shape=(1, 9000, 1)
logits [[ 0.12027249 -1.3593792   0.30530062 -0.850322  ]]
--- 298.9650740623474 seconds ---
Adv result:3
Loading record A02509
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0373 " + "l1=0.0373" + "l2=0 f=-0.188 shape=(1, 9000, 1)
logits [[ 1.8622946 -1.8635849  1.4940869 -2.2458925]]
Iteration 100 of 1000: loss=0.0369 " + "l1=0.0367" + "l2=0.000253 f=-0.185 shape=(1, 9000, 1)
logits [[ 1.8276906 -1.8405372  1.472645  -2.2005942]]
Iteration 200 of 1000: loss=0.0369 " + "l1=0.0366" + "l2=0.000227 f=-0.185 shape=(1, 9000, 1)
logits [[ 1.8239776 -1.8384849  1.4708595 -2.194751 ]]
Iteration 300 of 1000: loss=0.0368 " + "l1=0.0365" + "l2=0.000263 f=-0.184 shape=(1, 9000, 1)
logits [[ 1.8179326 -1.8352314  1.4678662 -2.1859562]]
Iteration 400 of 1000: loss=0.0367 " + "l1=0.0364" + "l2=0.000311 f=-0.183 shape=(1, 9000, 1)
logits [[ 1.8114141 -1.8318911  1.4647326 -2.176544 ]]
Iteration 500 of 1000: loss=0.0367 " + "l1=0.0363" + "l2=0.00039 f=-0.182 shape=(1, 9000, 1)
logits [[ 1.8050371 -1.8286752  1.4617544 -2.1673093]]
Iteration 600 of 1000: loss=0.0367 " + "l1=0.0362" + "l2=0.000415 f=-0.182 shape=(1, 9000, 1)
logits [[ 1.7984401 -1.8255148  1.4587548 -2.1577942]]
Iteration 700 of 1000: loss=0.0367 " + "l1=0.0361" + "l2=0.000578 f=-0.181 shape=(1, 9000, 1)
logits [[ 1.7919475 -1.8225838  1.455843  -2.1482487]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.373 " + "l1=0.373" + "l2=0 f=-0.188 shape=(1, 9000, 1)
logits [[ 1.8622946 -1.8635849  1.4940869 -2.2458925]]
Iteration 100 of 1000: loss=0.345 " + "l1=0.331" + "l2=0.014 f=-0.165 shape=(1, 9000, 1)
logits [[ 1.6118965 -1.702065   1.337029  -1.9068136]]
Iteration 200 of 1000: loss=0.335 " + "l1=0.315" + "l2=0.0196 f=-0.154 shape=(1, 9000, 1)
logits [[ 1.5102293 -1.6395885  1.2741983 -1.7608069]]
Iteration 300 of 1000: loss=0.327 " + "l1=0.304" + "l2=0.0228 f=-0.146 shape=(1, 9000, 1)
logits [[ 1.4356068 -1.6019226  1.2346586 -1.650709 ]]
Iteration 400 of 1000: loss=0.32 " + "l1=0.295" + "l2=0.0253 f=-0.141 shape=(1, 9000, 1)
logits [[ 1.3712739 -1.5747486  1.2033426 -1.5627337]]
Iteration 500 of 1000: loss=0.314 " + "l1=0.287" + "l2=0.0271 f=-0.137 shape=(1, 9000, 1)
logits [[ 1.3133769 -1.5539708  1.1778531 -1.4845021]]
Iteration 600 of 1000: loss=0.308 " + "l1=0.278" + "l2=0.0292 f=-0.133 shape=(1, 9000, 1)
logits [[ 1.2503285 -1.5326587  1.1536363 -1.4047954]]
Iteration 700 of 1000: loss=0.301 " + "l1=0.271" + "l2=0.0304 f=-0.13 shape=(1, 9000, 1)
logits [[ 1.1923007 -1.513994   1.1358771 -1.3330842]]
Iteration 800 of 1000: loss=0.294 " + "l1=0.261" + "l2=0.0329 f=-0.126 shape=(1, 9000, 1)
logits [[ 1.1179838 -1.4881988  1.1165224 -1.2506121]]
Iteration 900 of 1000: loss=0.287 " + "l1=0.253" + "l2=0.0334 f=-0.122 shape=(1, 9000, 1)
logits [[ 1.0809343 -1.451643   1.0797974 -1.1987485]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.73 " + "l1=3.73" + "l2=0 f=-0.188 shape=(1, 9000, 1)
logits [[ 1.8622946 -1.8635849  1.4940869 -2.2458925]]
Iteration 100 of 1000: loss=2.01 " + "l1=1.4" + "l2=0.613 f=-0.0901 shape=(1, 9000, 1)
logits [[ 0.5014442  -0.88386256  0.5134557  -0.49141997]]
Iteration 200 of 1000: loss=1.67 " + "l1=1" + "l2=0.668 f=-0.0762 shape=(1, 9000, 1)
logits [[ 0.30537596 -0.69216055  0.30928347 -0.22729123]]
Iteration 300 of 1000: loss=1.44 " + "l1=0.701" + "l2=0.741 f=-0.0687 shape=(1, 9000, 1)
logits [[ 0.16429707 -0.52839005  0.17297216 -0.08380032]]
Iteration 400 of 1000: loss=1.27 " + "l1=0.499" + "l2=0.768 f=-0.0552 shape=(1, 9000, 1)
logits [[ 0.07653906 -0.41810346  0.08115934  0.03978009]]
Iteration 500 of 1000: loss=1.16 " + "l1=0.367" + "l2=0.789 f=-0.0693 shape=(1, 9000, 1)
logits [[ 0.03156535 -0.31881064  0.04828577 -0.03831857]]
Iteration 600 of 1000: loss=1.02 " + "l1=0.151" + "l2=0.867 f=-0.105 shape=(1, 9000, 1)
logits [[-0.08672681 -0.20192091 -0.05102813 -0.07929629]]
Iteration 700 of 1000: loss=0.861 " + "l1=0.00117" + "l2=0.859 f=-0.129 shape=(1, 9000, 1)
logits [[-0.13687094 -0.11485463 -0.11368068 -0.15172473]]
Iteration 800 of 1000: loss=0.798 " + "l1=0.00281" + "l2=0.795 f=-0.131 shape=(1, 9000, 1)
logits [[-0.12305377 -0.12048899 -0.1176753  -0.16411206]]
Iteration 900 of 1000: loss=0.767 " + "l1=0" + "l2=0.767 f=-0.13 shape=(1, 9000, 1)
logits [[-0.12899975 -0.11786001 -0.12050466 -0.15262929]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.05 " + "l1=2.05" + "l2=0 f=-0.188 shape=(1, 9000, 1)
logits [[ 1.8622946 -1.8635849  1.4940869 -2.2458925]]
Iteration 100 of 1000: loss=1.38 " + "l1=1.12" + "l2=0.26 f=-0.111 shape=(1, 9000, 1)
logits [[ 0.83022255 -1.2071278   0.8327455  -0.9009437 ]]
Iteration 200 of 1000: loss=1.21 " + "l1=0.909" + "l2=0.304 f=-0.0942 shape=(1, 9000, 1)
logits [[ 0.62826127 -1.0240782   0.62846047 -0.609538  ]]
Iteration 300 of 1000: loss=1.11 " + "l1=0.801" + "l2=0.308 f=-0.0785 shape=(1, 9000, 1)
logits [[ 0.51681465 -0.93985844  0.5130531  -0.40418017]]
Iteration 400 of 1000: loss=1.03 " + "l1=0.714" + "l2=0.316 f=-0.0649 shape=(1, 9000, 1)
logits [[ 0.415233   -0.88157547  0.41684055 -0.21010515]]
Iteration 500 of 1000: loss=0.964 " + "l1=0.654" + "l2=0.31 f=-0.0461 shape=(1, 9000, 1)
logits [[ 0.34392855 -0.83996946  0.34841886 -0.03668971]]
Iteration 600 of 1000: loss=0.915 " + "l1=0.596" + "l2=0.319 f=-0.0278 shape=(1, 9000, 1)
logits [[ 0.28894404 -0.79039997  0.2931892   0.09713434]]
Iteration 700 of 1000: loss=0.87 " + "l1=0.538" + "l2=0.332 f=-0.0178 shape=(1, 9000, 1)
logits [[ 0.24652311 -0.7314231   0.24667774  0.16707388]]
Iteration 800 of 1000: loss=0.815 " + "l1=0.463" + "l2=0.351 f=-0.0337 shape=(1, 9000, 1)
logits [[ 0.19209105 -0.64731735  0.19528817  0.12505355]]
Iteration 900 of 1000: loss=0.771 " + "l1=0.419" + "l2=0.352 f=-0.0382 shape=(1, 9000, 1)
logits [[ 0.1585318  -0.6033065   0.15687399  0.13493294]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.89 " + "l1=2.89" + "l2=0 f=-0.188 shape=(1, 9000, 1)
logits [[ 1.8622946 -1.8635849  1.4940869 -2.2458925]]
Iteration 100 of 1000: loss=1.74 " + "l1=1.33" + "l2=0.406 f=-0.102 shape=(1, 9000, 1)
logits [[ 0.668552   -1.0471063   0.67175263 -0.7014831 ]]
Iteration 200 of 1000: loss=1.49 " + "l1=1.03" + "l2=0.458 f=-0.0784 shape=(1, 9000, 1)
logits [[ 0.45993915 -0.8713874   0.45877233 -0.36079872]]
Iteration 300 of 1000: loss=1.35 " + "l1=0.881" + "l2=0.464 f=-0.0632 shape=(1, 9000, 1)
logits [[ 0.34018615 -0.7887032   0.34840983 -0.15260723]]
Iteration 400 of 1000: loss=1.23 " + "l1=0.765" + "l2=0.461 f=-0.0424 shape=(1, 9000, 1)
logits [[ 0.2603428  -0.725392    0.26144153  0.03393208]]
Iteration 500 of 1000: loss=1.12 " + "l1=0.651" + "l2=0.473 f=-0.0222 shape=(1, 9000, 1)
logits [[ 0.18653645 -0.65115476  0.18708189  0.18885857]]
Iteration 600 of 1000: loss=1.04 " + "l1=0.54" + "l2=0.496 f=-0.0354 shape=(1, 9000, 1)
logits [[ 0.14183986 -0.5498691   0.1471011   0.11926703]]
Iteration 700 of 1000: loss=0.966 " + "l1=0.454" + "l2=0.512 f=-0.0457 shape=(1, 9000, 1)
logits [[ 0.08317747 -0.47687367  0.10142178  0.10928983]]
Iteration 800 of 1000: loss=0.897 " + "l1=0.36" + "l2=0.537 f=-0.0594 shape=(1, 9000, 1)
logits [[ 0.05897957 -0.4001134   0.06464873  0.03875937]]
Iteration 900 of 1000: loss=0.847 " + "l1=0.315" + "l2=0.532 f=-0.0588 shape=(1, 9000, 1)
logits [[ 0.04330564 -0.3603978   0.04561427  0.03621162]]
--- 282.17733502388 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00368 " + "l1=0.00368" + "l2=0 f=-0.188 shape=(1, 9000, 1)
logits [[ 1.8622946 -1.8635849  1.4940869 -2.2458925]]
Iteration 100 of 1000: loss=0.00356 " + "l1=0.00343" + "l2=0.000134 f=-0.187 shape=(1, 9000, 1)
logits [[ 1.8422469 -1.8686293  1.4993503 -2.2212887]]
Iteration 200 of 1000: loss=0.00353 " + "l1=0.00342" + "l2=0.000101 f=-0.187 shape=(1, 9000, 1)
logits [[ 1.8418105 -1.8683413  1.4993721 -2.2205136]]
Iteration 300 of 1000: loss=0.00353 " + "l1=0.00339" + "l2=0.000132 f=-0.187 shape=(1, 9000, 1)
logits [[ 1.8392116 -1.8684695  1.4997674 -2.2169552]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0368 " + "l1=0.0368" + "l2=0 f=-0.188 shape=(1, 9000, 1)
logits [[ 1.8622946 -1.8635849  1.4940869 -2.2458925]]
Iteration 100 of 1000: loss=0.0264 " + "l1=0.021" + "l2=0.00538 f=-0.182 shape=(1, 9000, 1)
logits [[ 1.7412454 -1.8982133  1.5312916 -2.1029434]]
Iteration 200 of 1000: loss=0.0228 " + "l1=0.0156" + "l2=0.00719 f=-0.18 shape=(1, 9000, 1)
logits [[ 1.7001532 -1.9085081  1.544154  -2.0574453]]
Iteration 300 of 1000: loss=0.0194 " + "l1=0.00998" + "l2=0.00945 f=-0.178 shape=(1, 9000, 1)
logits [[ 1.6557138 -1.9165236  1.5559603 -2.0065868]]
Iteration 400 of 1000: loss=0.0162 " + "l1=0.00481" + "l2=0.0114 f=-0.175 shape=(1, 9000, 1)
logits [[ 1.6134669 -1.9252226  1.5653176 -1.9555267]]
Iteration 500 of 1000: loss=0.013 " + "l1=0.000211" + "l2=0.0128 f=-0.174 shape=(1, 9000, 1)
logits [[ 1.5748885 -1.9337275  1.5727742 -1.9079494]]
Iteration 600 of 1000: loss=0.0107 " + "l1=0.000129" + "l2=0.0106 f=-0.172 shape=(1, 9000, 1)
logits [[ 1.5678552 -1.9293524  1.5665692 -1.8936597]]
Iteration 700 of 1000: loss=0.00874 " + "l1=1.5e-05" + "l2=0.00873 f=-0.172 shape=(1, 9000, 1)
logits [[ 1.5593842 -1.9223487  1.5592341 -1.8853351]]
Iteration 800 of 1000: loss=0.00745 " + "l1=1.01e-05" + "l2=0.00744 f=-0.173 shape=(1, 9000, 1)
logits [[ 1.5505834 -1.911949   1.5504824 -1.8799392]]
Iteration 900 of 1000: loss=0.00673 " + "l1=0.000244" + "l2=0.00649 f=-0.174 shape=(1, 9000, 1)
logits [[ 1.5444967 -1.9030725  1.5420517 -1.8794469]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0203 " + "l1=0.0203" + "l2=0 f=-0.188 shape=(1, 9000, 1)
logits [[ 1.8622946 -1.8635849  1.4940869 -2.2458925]]
Iteration 100 of 1000: loss=0.0169 " + "l1=0.0151" + "l2=0.00186 f=-0.184 shape=(1, 9000, 1)
logits [[ 1.7889402 -1.8834814  1.5148333 -2.157933 ]]
Iteration 200 of 1000: loss=0.0158 " + "l1=0.0135" + "l2=0.00235 f=-0.183 shape=(1, 9000, 1)
logits [[ 1.7652237 -1.8876789  1.5198038 -2.1283233]]
Iteration 300 of 1000: loss=0.0149 " + "l1=0.0122" + "l2=0.00273 f=-0.181 shape=(1, 9000, 1)
logits [[ 1.7454609 -1.8914953  1.5242752 -2.103652 ]]
Iteration 400 of 1000: loss=0.014 " + "l1=0.011" + "l2=0.00302 f=-0.18 shape=(1, 9000, 1)
logits [[ 1.7283151 -1.8953607  1.5279735 -2.0820498]]
Iteration 500 of 1000: loss=0.0132 " + "l1=0.00984" + "l2=0.0034 f=-0.179 shape=(1, 9000, 1)
logits [[ 1.7099812 -1.8986641  1.5310986 -2.0582674]]
Iteration 600 of 1000: loss=0.0125 " + "l1=0.00868" + "l2=0.00379 f=-0.178 shape=(1, 9000, 1)
logits [[ 1.6914864 -1.9014981  1.533734  -2.0341063]]
Iteration 700 of 1000: loss=0.0117 " + "l1=0.00746" + "l2=0.00423 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.671869  -1.9044195  1.5361525 -2.0088046]]
Iteration 800 of 1000: loss=0.011 " + "l1=0.00636" + "l2=0.00461 f=-0.175 shape=(1, 9000, 1)
logits [[ 1.6533433 -1.9063376  1.537795  -1.9857683]]
Iteration 900 of 1000: loss=0.0102 " + "l1=0.00516" + "l2=0.005 f=-0.174 shape=(1, 9000, 1)
logits [[ 1.6332183 -1.9083921  1.5394738 -1.9617558]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0285 " + "l1=0.0285" + "l2=0 f=-0.188 shape=(1, 9000, 1)
logits [[ 1.8622946 -1.8635849  1.4940869 -2.2458925]]
Iteration 100 of 1000: loss=0.0221 " + "l1=0.0187" + "l2=0.00344 f=-0.183 shape=(1, 9000, 1)
logits [[ 1.763711  -1.8911922  1.5228862 -2.1278582]]
Iteration 200 of 1000: loss=0.02 " + "l1=0.0156" + "l2=0.00439 f=-0.181 shape=(1, 9000, 1)
logits [[ 1.7328746 -1.8982656  1.531973  -2.0922174]]
Iteration 300 of 1000: loss=0.0181 " + "l1=0.0129" + "l2=0.00521 f=-0.18 shape=(1, 9000, 1)
logits [[ 1.7059084 -1.9048024  1.5393506 -2.060382 ]]
Iteration 400 of 1000: loss=0.0163 " + "l1=0.0103" + "l2=0.00605 f=-0.178 shape=(1, 9000, 1)
logits [[ 1.6781447 -1.9103732  1.5452939 -2.0247347]]
Iteration 500 of 1000: loss=0.0146 " + "l1=0.00779" + "l2=0.0068 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.6503906 -1.9152651  1.5498729 -1.987636 ]]
Iteration 600 of 1000: loss=0.0128 " + "l1=0.00475" + "l2=0.00802 f=-0.174 shape=(1, 9000, 1)
logits [[ 1.6158664 -1.9198213  1.5545272 -1.9477204]]
Iteration 700 of 1000: loss=0.0109 " + "l1=0.00189" + "l2=0.00899 f=-0.173 shape=(1, 9000, 1)
logits [[ 1.5825683 -1.923176   1.5581388 -1.9096267]]
Iteration 800 of 1000: loss=0.00864 " + "l1=6.04e-05" + "l2=0.00858 f=-0.173 shape=(1, 9000, 1)
logits [[ 1.5576335 -1.9209481  1.5568544 -1.886326 ]]
Iteration 900 of 1000: loss=0.00751 " + "l1=0" + "l2=0.00751 f=-0.174 shape=(1, 9000, 1)
logits [[ 1.5478448 -1.9102343  1.5479512 -1.8800904]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0244 " + "l1=0.0244" + "l2=0 f=-0.188 shape=(1, 9000, 1)
logits [[ 1.8622946 -1.8635849  1.4940869 -2.2458925]]
Iteration 100 of 1000: loss=0.0196 " + "l1=0.017" + "l2=0.00264 f=-0.184 shape=(1, 9000, 1)
logits [[ 1.7753205 -1.8877319  1.5190296 -2.1416817]]
Iteration 200 of 1000: loss=0.018 " + "l1=0.0147" + "l2=0.0033 f=-0.182 shape=(1, 9000, 1)
logits [[ 1.747889  -1.8928509  1.5253627 -2.1086583]]
Iteration 300 of 1000: loss=0.0167 " + "l1=0.0128" + "l2=0.00386 f=-0.181 shape=(1, 9000, 1)
logits [[ 1.7251058 -1.8981277  1.5314143 -2.0811896]]
Iteration 400 of 1000: loss=0.0155 " + "l1=0.0111" + "l2=0.00437 f=-0.179 shape=(1, 9000, 1)
logits [[ 1.7035223 -1.9025137  1.5362871 -2.053956 ]]
Iteration 500 of 1000: loss=0.0142 " + "l1=0.00921" + "l2=0.00502 f=-0.177 shape=(1, 9000, 1)
logits [[ 1.6793271 -1.9069014  1.540369  -2.0222216]]
Iteration 600 of 1000: loss=0.013 " + "l1=0.00749" + "l2=0.00548 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.6565685 -1.9104347  1.5435151 -1.9924972]]
Iteration 700 of 1000: loss=0.0118 " + "l1=0.0058" + "l2=0.00602 f=-0.174 shape=(1, 9000, 1)
logits [[ 1.633125  -1.9136391  1.5455047 -1.9624071]]
Iteration 800 of 1000: loss=0.0105 " + "l1=0.00358" + "l2=0.00692 f=-0.173 shape=(1, 9000, 1)
logits [[ 1.6024944 -1.9154197  1.5484148 -1.9286343]]
Iteration 900 of 1000: loss=0.00892 " + "l1=0.00113" + "l2=0.00779 f=-0.173 shape=(1, 9000, 1)
logits [[ 1.5678512 -1.9173009  1.5508013 -1.8944092]]
--- 260.29802536964417 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0411 " + "l1=0.0411" + "l2=0 f=-0.188 shape=(1, 9000, 1)
logits [[ 1.8622946 -1.8635849  1.4940869 -2.2458925]]
Iteration 100 of 1000: loss=0.0401 " + "l1=0.0396" + "l2=0.000562 f=-0.182 shape=(1, 9000, 1)
logits [[ 1.8055528 -1.8512437  1.4698128 -2.1513479]]
Iteration 200 of 1000: loss=0.0398 " + "l1=0.0392" + "l2=0.000601 f=-0.18 shape=(1, 9000, 1)
logits [[ 1.7935364 -1.8487462  1.4651078 -2.131203 ]]
Iteration 300 of 1000: loss=0.0396 " + "l1=0.0389" + "l2=0.000719 f=-0.179 shape=(1, 9000, 1)
logits [[ 1.7794218 -1.8460858  1.4596078 -2.1076407]]
Iteration 400 of 1000: loss=0.0393 " + "l1=0.0385" + "l2=0.000826 f=-0.177 shape=(1, 9000, 1)
logits [[ 1.7653587 -1.843718   1.4542192 -2.0842464]]
Iteration 500 of 1000: loss=0.0391 " + "l1=0.0381" + "l2=0.00096 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.7513039 -1.841374   1.4487371 -2.060894 ]]
Iteration 600 of 1000: loss=0.0389 " + "l1=0.0377" + "l2=0.00116 f=-0.174 shape=(1, 9000, 1)
logits [[ 1.7367784 -1.8390617  1.4429985 -2.0369122]]
Iteration 700 of 1000: loss=0.0387 " + "l1=0.0373" + "l2=0.00135 f=-0.173 shape=(1, 9000, 1)
logits [[ 1.722042  -1.8360236  1.4367095 -2.012731 ]]
Iteration 800 of 1000: loss=0.0384 " + "l1=0.037" + "l2=0.00147 f=-0.171 shape=(1, 9000, 1)
logits [[ 1.7078037 -1.8332249  1.4310672 -1.9898026]]
Iteration 900 of 1000: loss=0.0383 " + "l1=0.0366" + "l2=0.00162 f=-0.17 shape=(1, 9000, 1)
logits [[ 1.6945956 -1.8302785  1.4260035 -1.9686583]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.411 " + "l1=0.411" + "l2=0 f=-0.188 shape=(1, 9000, 1)
logits [[ 1.8622946 -1.8635849  1.4940869 -2.2458925]]
Iteration 100 of 1000: loss=0.329 " + "l1=0.288" + "l2=0.041 f=-0.134 shape=(1, 9000, 1)
logits [[ 1.40359   -1.7511132  1.288385  -1.4757917]]
Iteration 200 of 1000: loss=0.291 " + "l1=0.231" + "l2=0.0604 f=-0.105 shape=(1, 9000, 1)
logits [[ 1.2044379 -1.7047743  1.1833233 -1.1045115]]
Iteration 300 of 1000: loss=0.257 " + "l1=0.187" + "l2=0.0704 f=-0.0795 shape=(1, 9000, 1)
logits [[ 1.0712788 -1.6649511  1.0720345 -0.7965308]]
Iteration 400 of 1000: loss=0.228 " + "l1=0.151" + "l2=0.0774 f=-0.0606 shape=(1, 9000, 1)
logits [[ 0.96592945 -1.6330656   0.9671207  -0.54250485]]
Iteration 500 of 1000: loss=0.2 " + "l1=0.116" + "l2=0.0841 f=-0.0437 shape=(1, 9000, 1)
logits [[ 0.86041534 -1.5984248   0.8608331  -0.29757464]]
Iteration 600 of 1000: loss=0.175 " + "l1=0.0872" + "l2=0.0877 f=-0.0309 shape=(1, 9000, 1)
logits [[ 0.7736805  -1.5826643   0.7789329  -0.09350951]]
Iteration 700 of 1000: loss=0.153 " + "l1=0.0613" + "l2=0.0916 f=-0.0213 shape=(1, 9000, 1)
logits [[ 0.67715144 -1.5804617   0.7155673   0.10256206]]
Iteration 800 of 1000: loss=0.129 " + "l1=0.0327" + "l2=0.0962 f=-0.0133 shape=(1, 9000, 1)
logits [[ 0.58112997 -1.5852956   0.63890296  0.31187063]]
Iteration 900 of 1000: loss=0.0958 " + "l1=0" + "l2=0.0958 f=-0.0044 shape=(1, 9000, 1)
logits [[ 0.4897687  -1.6217768   0.55546427  0.55894756]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.226 " + "l1=0.226" + "l2=0 f=-0.188 shape=(1, 9000, 1)
logits [[ 1.8622946 -1.8635849  1.4940869 -2.2458925]]
Iteration 100 of 1000: loss=0.201 " + "l1=0.188" + "l2=0.0124 f=-0.158 shape=(1, 9000, 1)
logits [[ 1.6079149 -1.8025445  1.3810434 -1.8174443]]
Iteration 200 of 1000: loss=0.191 " + "l1=0.174" + "l2=0.0169 f=-0.146 shape=(1, 9000, 1)
logits [[ 1.5065155 -1.7727884  1.3321725 -1.6506125]]
Iteration 300 of 1000: loss=0.181 " + "l1=0.16" + "l2=0.0209 f=-0.135 shape=(1, 9000, 1)
logits [[ 1.4179479 -1.7475716  1.2870746 -1.497521 ]]
Iteration 400 of 1000: loss=0.172 " + "l1=0.148" + "l2=0.0247 f=-0.124 shape=(1, 9000, 1)
logits [[ 1.336686  -1.7306591  1.242311  -1.3461639]]
Iteration 500 of 1000: loss=0.163 " + "l1=0.134" + "l2=0.0291 f=-0.11 shape=(1, 9000, 1)
logits [[ 1.25473   -1.7187119  1.1995034 -1.1760141]]
Iteration 600 of 1000: loss=0.154 " + "l1=0.121" + "l2=0.0326 f=-0.0995 shape=(1, 9000, 1)
logits [[ 1.1791216 -1.7095671  1.1621462 -1.029582 ]]
Iteration 700 of 1000: loss=0.145 " + "l1=0.111" + "l2=0.0342 f=-0.0928 shape=(1, 9000, 1)
logits [[ 1.1163238 -1.6968282  1.1154771 -0.9060339]]
Iteration 800 of 1000: loss=0.138 " + "l1=0.102" + "l2=0.0352 f=-0.0861 shape=(1, 9000, 1)
logits [[ 1.0668931  -1.6818099   1.0659709  -0.79545575]]
Iteration 900 of 1000: loss=0.131 " + "l1=0.0939" + "l2=0.0368 f=-0.0799 shape=(1, 9000, 1)
logits [[ 1.0183915  -1.6677313   1.0179884  -0.68819636]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.318 " + "l1=0.318" + "l2=0 f=-0.188 shape=(1, 9000, 1)
logits [[ 1.8622946 -1.8635849  1.4940869 -2.2458925]]
Iteration 100 of 1000: loss=0.269 " + "l1=0.245" + "l2=0.0242 f=-0.147 shape=(1, 9000, 1)
logits [[ 1.5073181 -1.7765976  1.3333693 -1.6512944]]
Iteration 200 of 1000: loss=0.248 " + "l1=0.213" + "l2=0.0349 f=-0.128 shape=(1, 9000, 1)
logits [[ 1.3551055 -1.7336237  1.2580963 -1.3923378]]
Iteration 300 of 1000: loss=0.227 " + "l1=0.184" + "l2=0.0432 f=-0.106 shape=(1, 9000, 1)
logits [[ 1.2327143 -1.710137   1.1894332 -1.1359047]]
Iteration 400 of 1000: loss=0.208 " + "l1=0.158" + "l2=0.0501 f=-0.0885 shape=(1, 9000, 1)
logits [[ 1.1229217 -1.689813   1.1235727 -0.9105882]]
Iteration 500 of 1000: loss=0.191 " + "l1=0.137" + "l2=0.0534 f=-0.0751 shape=(1, 9000, 1)
logits [[ 1.0441589  -1.6636629   1.0452209  -0.72608376]]
Iteration 600 of 1000: loss=0.174 " + "l1=0.115" + "l2=0.0586 f=-0.0618 shape=(1, 9000, 1)
logits [[ 0.95726883 -1.6371359   0.95875376 -0.5261034 ]]
Iteration 700 of 1000: loss=0.157 " + "l1=0.0952" + "l2=0.062 f=-0.0513 shape=(1, 9000, 1)
logits [[ 0.8790675  -1.614117    0.8791778  -0.34913862]]
Iteration 800 of 1000: loss=0.142 " + "l1=0.0786" + "l2=0.0638 f=-0.0438 shape=(1, 9000, 1)
logits [[ 0.80508    -1.6093489   0.8214334  -0.19255486]]
Iteration 900 of 1000: loss=0.129 " + "l1=0.0636" + "l2=0.0653 f=-0.037 shape=(1, 9000, 1)
logits [[ 0.7319448  -1.6080036   0.77422696 -0.04602275]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.365 " + "l1=0.365" + "l2=0 f=-0.188 shape=(1, 9000, 1)
logits [[ 1.8622946 -1.8635849  1.4940869 -2.2458925]]
Iteration 100 of 1000: loss=0.3 " + "l1=0.268" + "l2=0.0321 f=-0.14 shape=(1, 9000, 1)
logits [[ 1.4562263 -1.7631543  1.3105887 -1.5641997]]
Iteration 200 of 1000: loss=0.272 " + "l1=0.225" + "l2=0.0465 f=-0.119 shape=(1, 9000, 1)
logits [[ 1.2816083 -1.7212819  1.2233753 -1.2577199]]
Iteration 300 of 1000: loss=0.244 " + "l1=0.186" + "l2=0.0577 f=-0.092 shape=(1, 9000, 1)
logits [[ 1.1403441 -1.6894617  1.1386794 -0.9575564]]
Iteration 400 of 1000: loss=0.22 " + "l1=0.158" + "l2=0.0622 f=-0.0756 shape=(1, 9000, 1)
logits [[ 1.0459349  -1.6604259   1.0469313  -0.73487115]]
Iteration 500 of 1000: loss=0.197 " + "l1=0.128" + "l2=0.0689 f=-0.0586 shape=(1, 9000, 1)
logits [[ 0.94563335 -1.6256343   0.94592863 -0.5003397 ]]
Iteration 600 of 1000: loss=0.176 " + "l1=0.102" + "l2=0.0736 f=-0.0456 shape=(1, 9000, 1)
logits [[ 0.85298604 -1.6004575   0.85655385 -0.29144284]]
Iteration 700 of 1000: loss=0.157 " + "l1=0.0815" + "l2=0.0752 f=-0.036 shape=(1, 9000, 1)
logits [[ 0.7798242  -1.5932876   0.7938533  -0.12419168]]
Iteration 800 of 1000: loss=0.139 " + "l1=0.0604" + "l2=0.0789 f=-0.028 shape=(1, 9000, 1)
logits [[ 0.68660444 -1.5938975   0.73794615  0.05734443]]
Iteration 900 of 1000: loss=0.119 " + "l1=0.0367" + "l2=0.0822 f=-0.0207 shape=(1, 9000, 1)
logits [[ 0.6030389  -1.5998862   0.66373444  0.25023997]]
--- 301.4977023601532 seconds ---
Adv result:3
Loading record A02519
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0618 " + "l1=0.0618" + "l2=0 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.2257514 -1.9512514  2.3261611 -6.407209 ]]
Iteration 100 of 1000: loss=0.0611 " + "l1=0.0606" + "l2=0.000455 f=-0.449 shape=(1, 9000, 1)
logits [[ 4.1707    -1.8931944  2.286147  -6.360848 ]]
Iteration 200 of 1000: loss=0.0609 " + "l1=0.0604" + "l2=0.000498 f=-0.449 shape=(1, 9000, 1)
logits [[ 4.160328  -1.8779864  2.274359  -6.353356 ]]
Iteration 300 of 1000: loss=0.0607 " + "l1=0.0601" + "l2=0.000599 f=-0.449 shape=(1, 9000, 1)
logits [[ 4.148017 -1.862732  2.263075 -6.34512 ]]
Iteration 400 of 1000: loss=0.0606 " + "l1=0.0598" + "l2=0.000798 f=-0.449 shape=(1, 9000, 1)
logits [[ 4.1350465 -1.8472259  2.2517853 -6.336526 ]]
Iteration 500 of 1000: loss=0.0605 " + "l1=0.0596" + "l2=0.000915 f=-0.449 shape=(1, 9000, 1)
logits [[ 4.122627  -1.8332458  2.24193   -6.3282747]]
Iteration 600 of 1000: loss=0.0604 " + "l1=0.0593" + "l2=0.00108 f=-0.449 shape=(1, 9000, 1)
logits [[ 4.1119947 -1.8219287  2.2341168 -6.321176 ]]
Iteration 700 of 1000: loss=0.0604 " + "l1=0.0591" + "l2=0.00122 f=-0.449 shape=(1, 9000, 1)
logits [[ 4.1022997 -1.8119551  2.2273355 -6.3149805]]
Iteration 800 of 1000: loss=0.0603 " + "l1=0.059" + "l2=0.00139 f=-0.449 shape=(1, 9000, 1)
logits [[ 4.0929585 -1.8026844  2.2210436 -6.308858 ]]
Iteration 900 of 1000: loss=0.0604 " + "l1=0.0588" + "l2=0.00158 f=-0.449 shape=(1, 9000, 1)
logits [[ 4.084119  -1.7938682  2.2151535 -6.303135 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.618 " + "l1=0.618" + "l2=0 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.2257514 -1.9512514  2.3261611 -6.407209 ]]
Iteration 100 of 1000: loss=0.537 " + "l1=0.492" + "l2=0.0454 f=-0.431 shape=(1, 9000, 1)
logits [[ 3.620966  -1.295098   1.8968865 -5.9452305]]
Iteration 200 of 1000: loss=0.49 " + "l1=0.41" + "l2=0.0801 f=-0.421 shape=(1, 9000, 1)
logits [[ 3.199504   -0.89551264  1.6521126  -5.6405687 ]]
Iteration 300 of 1000: loss=0.447 " + "l1=0.333" + "l2=0.113 f=-0.419 shape=(1, 9000, 1)
logits [[ 2.795093   -0.53820795  1.4348772  -5.3690944 ]]
Iteration 400 of 1000: loss=0.409 " + "l1=0.264" + "l2=0.145 f=-0.424 shape=(1, 9000, 1)
logits [[ 2.3853621 -0.2513928  1.2621201 -5.0903463]]
Iteration 500 of 1000: loss=0.381 " + "l1=0.21" + "l2=0.171 f=-0.424 shape=(1, 9000, 1)
logits [[ 2.0425735 -0.0529651  1.1453817 -4.8303213]]
Iteration 600 of 1000: loss=0.357 " + "l1=0.168" + "l2=0.189 f=-0.424 shape=(1, 9000, 1)
logits [[ 1.7687235   0.08722141  1.0645914  -4.618378  ]]
Iteration 700 of 1000: loss=0.338 " + "l1=0.125" + "l2=0.213 f=-0.43 shape=(1, 9000, 1)
logits [[ 1.4897404   0.23761763  0.98447245 -4.431849  ]]
Iteration 800 of 1000: loss=0.322 " + "l1=0.091" + "l2=0.231 f=-0.438 shape=(1, 9000, 1)
logits [[ 1.2609154   0.35087502  0.9205784  -4.2844577 ]]
Iteration 900 of 1000: loss=0.307 " + "l1=0.0612" + "l2=0.246 f=-0.443 shape=(1, 9000, 1)
logits [[ 1.0652606   0.45343453  0.8683142  -4.158694  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.18 " + "l1=6.18" + "l2=0 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.2257514 -1.9512514  2.3261611 -6.407209 ]]
Iteration 100 of 1000: loss=0.775 " + "l1=0" + "l2=0.775 f=-0.457 shape=(1, 9000, 1)
logits [[ 0.7585944   0.77721715  0.7540449  -4.118029  ]]
Iteration 200 of 1000: loss=0.606 " + "l1=0.0108" + "l2=0.595 f=-0.456 shape=(1, 9000, 1)
logits [[ 0.7625459   0.75172144  0.75332683 -4.093272  ]]
Iteration 300 of 1000: loss=0.535 " + "l1=0" + "l2=0.535 f=-0.453 shape=(1, 9000, 1)
logits [[ 0.7348719   0.750717    0.74869466 -4.0473523 ]]
Iteration 400 of 1000: loss=0.5 " + "l1=0" + "l2=0.5 f=-0.449 shape=(1, 9000, 1)
logits [[ 0.73958576  0.757783    0.72141707 -4.0131216 ]]
Iteration 500 of 1000: loss=0.503 " + "l1=0" + "l2=0.503 f=-0.453 shape=(1, 9000, 1)
logits [[ 0.5703706   0.80852604  0.70826924 -3.8990974 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.4 " + "l1=3.4" + "l2=0 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.2257514 -1.9512514  2.3261611 -6.407209 ]]
Iteration 100 of 1000: loss=0.718 " + "l1=0" + "l2=0.718 f=-0.475 shape=(1, 9000, 1)
logits [[ 0.75455207  0.77092975  0.7704155  -4.1958985 ]]
Iteration 200 of 1000: loss=0.557 " + "l1=0" + "l2=0.557 f=-0.468 shape=(1, 9000, 1)
logits [[ 0.7421166   0.75990295  0.7555652  -4.1280336 ]]
Iteration 300 of 1000: loss=0.503 " + "l1=0" + "l2=0.503 f=-0.459 shape=(1, 9000, 1)
logits [[ 0.70512426  0.76079386  0.7478932  -4.0513573 ]]
Iteration 400 of 1000: loss=0.463 " + "l1=0" + "l2=0.463 f=-0.453 shape=(1, 9000, 1)
logits [[ 0.72249097  0.7558867   0.7219328  -4.014034  ]]
Iteration 500 of 1000: loss=0.428 " + "l1=0" + "l2=0.428 f=-0.449 shape=(1, 9000, 1)
logits [[ 0.71991456  0.73085374  0.7304262  -3.9777138 ]]
Iteration 600 of 1000: loss=0.406 " + "l1=0" + "l2=0.406 f=-0.444 shape=(1, 9000, 1)
logits [[ 0.7273115   0.73325527  0.715135   -3.952468  ]]
Iteration 700 of 1000: loss=0.384 " + "l1=0" + "l2=0.384 f=-0.441 shape=(1, 9000, 1)
logits [[ 0.7222752   0.72839606  0.7244112  -3.9380739 ]]
Iteration 800 of 1000: loss=0.372 " + "l1=0.0103" + "l2=0.362 f=-0.437 shape=(1, 9000, 1)
logits [[ 0.7442813   0.72547233  0.7249069  -3.944422  ]]
Iteration 900 of 1000: loss=0.352 " + "l1=0" + "l2=0.352 f=-0.439 shape=(1, 9000, 1)
logits [[ 0.719227    0.73838496  0.71831256 -3.9325442 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.01 " + "l1=2.01" + "l2=0 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.2257514 -1.9512514  2.3261611 -6.407209 ]]
Iteration 100 of 1000: loss=0.752 " + "l1=0.051" + "l2=0.701 f=-0.476 shape=(1, 9000, 1)
logits [[ 0.84292054  0.68604946  0.8426062  -4.273643  ]]
Iteration 200 of 1000: loss=0.528 " + "l1=0" + "l2=0.528 f=-0.475 shape=(1, 9000, 1)
logits [[ 0.7307786   0.76480067  0.75616825 -4.150761  ]]
Iteration 300 of 1000: loss=0.455 " + "l1=0.00326" + "l2=0.452 f=-0.468 shape=(1, 9000, 1)
logits [[ 0.7476355   0.73761666  0.7462344  -4.1029577 ]]
Iteration 400 of 1000: loss=0.412 " + "l1=0.00316" + "l2=0.409 f=-0.463 shape=(1, 9000, 1)
logits [[ 0.7402197   0.73048764  0.731262   -4.0537243 ]]
Iteration 500 of 1000: loss=0.377 " + "l1=0" + "l2=0.377 f=-0.458 shape=(1, 9000, 1)
logits [[ 0.7206559   0.73812366  0.73037094 -4.0193324 ]]
Iteration 600 of 1000: loss=0.353 " + "l1=0.00105" + "l2=0.352 f=-0.455 shape=(1, 9000, 1)
logits [[ 0.722567    0.73113745  0.73437154 -4.0087056 ]]
Iteration 700 of 1000: loss=0.338 " + "l1=0.000475" + "l2=0.337 f=-0.454 shape=(1, 9000, 1)
logits [[ 0.7204205  0.7289134  0.7303754 -3.9946802]]
Iteration 800 of 1000: loss=0.33 " + "l1=0.00796" + "l2=0.322 f=-0.452 shape=(1, 9000, 1)
logits [[ 0.7413902  0.7169038  0.7300967 -3.9983895]]
Iteration 900 of 1000: loss=0.319 " + "l1=0.00809" + "l2=0.311 f=-0.453 shape=(1, 9000, 1)
logits [[ 0.73897636  0.71407574  0.7261695  -3.9899406 ]]
--- 267.7981388568878 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.019 " + "l1=0.019" + "l2=0 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.2257514 -1.9512514  2.3261611 -6.407209 ]]
Iteration 100 of 1000: loss=0.0187 " + "l1=0.0185" + "l2=0.000228 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.193277  -1.9705799  2.3440666 -6.372691 ]]
Iteration 200 of 1000: loss=0.0187 " + "l1=0.0185" + "l2=0.000206 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.191094  -1.9732989  2.3458161 -6.3702583]]
Iteration 300 of 1000: loss=0.0186 " + "l1=0.0184" + "l2=0.000258 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.186256  -1.9772805  2.3489227 -6.3647647]]
Iteration 400 of 1000: loss=0.0186 " + "l1=0.0183" + "l2=0.000293 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.1811295 -1.980704   2.351737  -6.358848 ]]
Iteration 500 of 1000: loss=0.0186 " + "l1=0.0182" + "l2=0.000367 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.176107  -1.9836485  2.3541791 -6.3528886]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.19 " + "l1=0.19" + "l2=0 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.2257514 -1.9512514  2.3261611 -6.407209 ]]
Iteration 100 of 1000: loss=0.166 " + "l1=0.153" + "l2=0.0124 f=-0.455 shape=(1, 9000, 1)
logits [[ 3.9772406 -2.0636053  2.4427147 -6.1744046]]
Iteration 200 of 1000: loss=0.156 " + "l1=0.137" + "l2=0.0192 f=-0.454 shape=(1, 9000, 1)
logits [[ 3.858698  -2.1121202  2.4896588 -6.053523 ]]
Iteration 300 of 1000: loss=0.148 " + "l1=0.123" + "l2=0.0251 f=-0.452 shape=(1, 9000, 1)
logits [[ 3.751921  -2.1476672  2.5200658 -5.933683 ]]
Iteration 400 of 1000: loss=0.142 " + "l1=0.111" + "l2=0.0306 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.6500099 -2.174435   2.539147  -5.812779 ]]
Iteration 500 of 1000: loss=0.135 " + "l1=0.0997" + "l2=0.0353 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.5466201 -2.1907601  2.5498538 -5.6924696]]
Iteration 600 of 1000: loss=0.128 " + "l1=0.0879" + "l2=0.0402 f=-0.445 shape=(1, 9000, 1)
logits [[ 3.4336255 -2.1964598  2.5547855 -5.570509 ]]
Iteration 700 of 1000: loss=0.121 " + "l1=0.0755" + "l2=0.0454 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.319085  -2.2012708  2.5638187 -5.4433117]]
Iteration 800 of 1000: loss=0.114 " + "l1=0.0623" + "l2=0.0521 f=-0.434 shape=(1, 9000, 1)
logits [[ 3.1955106 -2.2071753  2.572942  -5.298566 ]]
Iteration 900 of 1000: loss=0.109 " + "l1=0.0544" + "l2=0.055 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.1196327 -2.2079482  2.5751595 -5.204287 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.9 " + "l1=1.9" + "l2=0 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.2257514 -1.9512514  2.3261611 -6.407209 ]]
Iteration 100 of 1000: loss=0.276 " + "l1=0" + "l2=0.276 f=-0.456 shape=(1, 9000, 1)
logits [[ 2.6877387 -2.2709787  2.694971  -4.9365726]]
Iteration 200 of 1000: loss=0.208 " + "l1=0" + "l2=0.208 f=-0.446 shape=(1, 9000, 1)
logits [[ 2.6718452 -2.2683115  2.6977181 -4.8846464]]
Iteration 300 of 1000: loss=0.173 " + "l1=0.00445" + "l2=0.168 f=-0.442 shape=(1, 9000, 1)
logits [[ 2.6901195 -2.2597651  2.6856732 -4.8829417]]
Iteration 400 of 1000: loss=0.155 " + "l1=0.00646" + "l2=0.149 f=-0.438 shape=(1, 9000, 1)
logits [[ 2.6859612 -2.2613528  2.6794972 -4.8550467]]
Iteration 500 of 1000: loss=0.139 " + "l1=0" + "l2=0.139 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.658802  -2.2577262  2.6699665 -4.811249 ]]
Iteration 600 of 1000: loss=0.13 " + "l1=0" + "l2=0.13 f=-0.432 shape=(1, 9000, 1)
logits [[ 2.644459  -2.2609065  2.662734  -4.7748175]]
Iteration 700 of 1000: loss=0.121 " + "l1=0" + "l2=0.121 f=-0.429 shape=(1, 9000, 1)
logits [[ 2.644783  -2.2556217  2.6528876 -4.75718  ]]
Iteration 800 of 1000: loss=0.116 " + "l1=0" + "l2=0.116 f=-0.426 shape=(1, 9000, 1)
logits [[ 2.623343  -2.2552934  2.6467094 -4.7203417]]
Iteration 900 of 1000: loss=0.108 " + "l1=0.00211" + "l2=0.106 f=-0.424 shape=(1, 9000, 1)
logits [[ 2.6340358 -2.2450378  2.6319253 -4.7151656]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.04 " + "l1=1.04" + "l2=0 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.2257514 -1.9512514  2.3261611 -6.407209 ]]
Iteration 100 of 1000: loss=0.273 " + "l1=0.00919" + "l2=0.264 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.726434  -2.2841039  2.709717  -4.9706864]]
Iteration 200 of 1000: loss=0.189 " + "l1=0.00117" + "l2=0.188 f=-0.445 shape=(1, 9000, 1)
logits [[ 2.7128513 -2.2785735  2.7107258 -4.9255033]]
Iteration 300 of 1000: loss=0.157 " + "l1=0" + "l2=0.157 f=-0.44 shape=(1, 9000, 1)
logits [[ 2.6961114 -2.282337   2.7021143 -4.8776584]]
Iteration 400 of 1000: loss=0.139 " + "l1=0" + "l2=0.139 f=-0.438 shape=(1, 9000, 1)
logits [[ 2.683353  -2.2775137  2.6851873 -4.8414745]]
Iteration 500 of 1000: loss=0.127 " + "l1=0" + "l2=0.127 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.669849  -2.2726853  2.6707585 -4.8067646]]
Iteration 600 of 1000: loss=0.121 " + "l1=0" + "l2=0.121 f=-0.431 shape=(1, 9000, 1)
logits [[ 2.639797  -2.2683516  2.6598923 -4.7552752]]
Iteration 700 of 1000: loss=0.113 " + "l1=0" + "l2=0.113 f=-0.428 shape=(1, 9000, 1)
logits [[ 2.6203523 -2.2609384  2.6455002 -4.7171025]]
Iteration 800 of 1000: loss=0.105 " + "l1=0" + "l2=0.105 f=-0.426 shape=(1, 9000, 1)
logits [[ 2.6169195 -2.2539425  2.634387  -4.6995296]]
Iteration 900 of 1000: loss=0.1 " + "l1=0.00328" + "l2=0.0969 f=-0.422 shape=(1, 9000, 1)
logits [[ 2.6250052 -2.2426543  2.6190493 -4.687921 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.617 " + "l1=0.617" + "l2=0 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.2257514 -1.9512514  2.3261611 -6.407209 ]]
Iteration 100 of 1000: loss=0.324 " + "l1=0.144" + "l2=0.18 f=-0.46 shape=(1, 9000, 1)
logits [[ 3.0817008 -2.2371497  2.639795  -5.3227224]]
Iteration 200 of 1000: loss=0.186 " + "l1=0" + "l2=0.186 f=-0.445 shape=(1, 9000, 1)
logits [[ 2.7419581 -2.3261027  2.7430403 -4.938882 ]]
Iteration 300 of 1000: loss=0.148 " + "l1=0" + "l2=0.148 f=-0.441 shape=(1, 9000, 1)
logits [[ 2.7112129 -2.310024   2.7127876 -4.8794403]]
Iteration 400 of 1000: loss=0.134 " + "l1=0" + "l2=0.134 f=-0.437 shape=(1, 9000, 1)
logits [[ 2.6656737 -2.2871523  2.6857536 -4.8123245]]
Iteration 500 of 1000: loss=0.122 " + "l1=0" + "l2=0.122 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.6463838 -2.2708158  2.662536  -4.7684636]]
Iteration 600 of 1000: loss=0.112 " + "l1=0.00082" + "l2=0.111 f=-0.428 shape=(1, 9000, 1)
logits [[ 2.6431463 -2.2599108  2.6406221 -4.7376423]]
Iteration 700 of 1000: loss=0.105 " + "l1=0.00102" + "l2=0.104 f=-0.424 shape=(1, 9000, 1)
logits [[ 2.6293716 -2.247919   2.6262393 -4.7054434]]
Iteration 800 of 1000: loss=0.102 " + "l1=0.00277" + "l2=0.0987 f=-0.421 shape=(1, 9000, 1)
logits [[ 2.6214144 -2.234401   2.6128838 -4.6819425]]
Iteration 900 of 1000: loss=0.096 " + "l1=0" + "l2=0.096 f=-0.417 shape=(1, 9000, 1)
logits [[ 2.602002  -2.224675   2.6055717 -4.6519475]]
--- 273.52332282066345 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.106 " + "l1=0.106" + "l2=0 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.2257514 -1.9512514  2.3261611 -6.407209 ]]
Iteration 100 of 1000: loss=0.105 " + "l1=0.105" + "l2=0.000621 f=-0.447 shape=(1, 9000, 1)
logits [[ 4.1531644 -1.9325538  2.306126  -6.3159847]]
Iteration 200 of 1000: loss=0.105 " + "l1=0.104" + "l2=0.00068 f=-0.447 shape=(1, 9000, 1)
logits [[ 4.1378126 -1.9278927  2.3013241 -6.2973013]]
Iteration 300 of 1000: loss=0.105 " + "l1=0.104" + "l2=0.000856 f=-0.446 shape=(1, 9000, 1)
logits [[ 4.119807  -1.9230032  2.2960072 -6.2756925]]
Iteration 400 of 1000: loss=0.105 " + "l1=0.104" + "l2=0.00102 f=-0.445 shape=(1, 9000, 1)
logits [[ 4.10212   -1.9185667  2.2911406 -6.2545176]]
Iteration 500 of 1000: loss=0.104 " + "l1=0.103" + "l2=0.0012 f=-0.444 shape=(1, 9000, 1)
logits [[ 4.08512   -1.9142063  2.2864645 -6.233738 ]]
Iteration 600 of 1000: loss=0.104 " + "l1=0.103" + "l2=0.00141 f=-0.443 shape=(1, 9000, 1)
logits [[ 4.069634  -1.9106084  2.2825422 -6.21412  ]]
Iteration 700 of 1000: loss=0.104 " + "l1=0.103" + "l2=0.00162 f=-0.442 shape=(1, 9000, 1)
logits [[ 4.0553484 -1.9075438  2.2790592 -6.195905 ]]
Iteration 800 of 1000: loss=0.104 " + "l1=0.102" + "l2=0.00184 f=-0.441 shape=(1, 9000, 1)
logits [[ 4.0416822 -1.9047923  2.2760422 -6.178376 ]]
Iteration 900 of 1000: loss=0.104 " + "l1=0.102" + "l2=0.00205 f=-0.44 shape=(1, 9000, 1)
logits [[ 4.028965  -1.9021727  2.2732284 -6.1619906]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.06 " + "l1=1.06" + "l2=0 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.2257514 -1.9512514  2.3261611 -6.407209 ]]
Iteration 100 of 1000: loss=0.954 " + "l1=0.889" + "l2=0.0646 f=-0.414 shape=(1, 9000, 1)
logits [[ 3.430494  -1.6983544  2.0767095 -5.4643836]]
Iteration 200 of 1000: loss=0.888 " + "l1=0.783" + "l2=0.106 f=-0.398 shape=(1, 9000, 1)
logits [[ 2.9306657 -1.5610244  1.9338704 -4.8955507]]
Iteration 300 of 1000: loss=0.829 " + "l1=0.688" + "l2=0.141 f=-0.378 shape=(1, 9000, 1)
logits [[ 2.4946845 -1.4142749  1.7907815 -4.384416 ]]
Iteration 400 of 1000: loss=0.774 " + "l1=0.591" + "l2=0.182 f=-0.354 shape=(1, 9000, 1)
logits [[ 2.0616639 -1.2781382  1.6485885 -3.8494139]]
Iteration 500 of 1000: loss=0.719 " + "l1=0.494" + "l2=0.225 f=-0.349 shape=(1, 9000, 1)
logits [[ 1.5978765 -1.1318933  1.4819876 -3.3426788]]
Iteration 600 of 1000: loss=0.676 " + "l1=0.437" + "l2=0.239 f=-0.342 shape=(1, 9000, 1)
logits [[ 1.337403  -1.0138448  1.336998  -3.029957 ]]
Iteration 700 of 1000: loss=0.652 " + "l1=0.41" + "l2=0.243 f=-0.338 shape=(1, 9000, 1)
logits [[ 1.2198273  -0.91351867  1.2187287  -2.875628  ]]
Iteration 800 of 1000: loss=0.637 " + "l1=0.39" + "l2=0.246 f=-0.337 shape=(1, 9000, 1)
logits [[ 1.1297147  -0.83072543  1.1282725  -2.773418  ]]
Iteration 900 of 1000: loss=0.621 " + "l1=0.376" + "l2=0.245 f=-0.337 shape=(1, 9000, 1)
logits [[ 1.0509102 -0.7387626  1.0476506 -2.7083292]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.6 " + "l1=10.6" + "l2=0 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.2257514 -1.9512514  2.3261611 -6.407209 ]]
Iteration 100 of 1000: loss=2.12 " + "l1=0" + "l2=2.12 f=-0.178 shape=(1, 9000, 1)
logits [[-0.51225656 -0.10867114 -0.06559897 -0.02497374]]
Iteration 200 of 1000: loss=1.54 " + "l1=0" + "l2=1.54 f=-0.161 shape=(1, 9000, 1)
logits [[-0.3649515  -0.13524567 -0.0891576  -0.05510422]]
Iteration 300 of 1000: loss=1.32 " + "l1=0" + "l2=1.32 f=-0.151 shape=(1, 9000, 1)
logits [[-0.28375313 -0.15190735 -0.09256572 -0.07426162]]
Iteration 400 of 1000: loss=1.17 " + "l1=0" + "l2=1.17 f=-0.147 shape=(1, 9000, 1)
logits [[-0.2994913  -0.10481166 -0.10105289 -0.08299037]]
Iteration 500 of 1000: loss=1.07 " + "l1=0" + "l2=1.07 f=-0.146 shape=(1, 9000, 1)
logits [[-0.29347152 -0.13144548 -0.09260534 -0.0663465 ]]
Iteration 600 of 1000: loss=1 " + "l1=0" + "l2=1 f=-0.148 shape=(1, 9000, 1)
logits [[-0.28422046 -0.16170253 -0.08218257 -0.06554852]]
Iteration 700 of 1000: loss=0.953 " + "l1=0" + "l2=0.953 f=-0.152 shape=(1, 9000, 1)
logits [[-0.2776027  -0.18957552 -0.07582144 -0.06326074]]
Iteration 800 of 1000: loss=0.915 " + "l1=0" + "l2=0.915 f=-0.156 shape=(1, 9000, 1)
logits [[-0.27387    -0.20091914 -0.07732212 -0.07301504]]
Iteration 900 of 1000: loss=0.886 " + "l1=0" + "l2=0.886 f=-0.16 shape=(1, 9000, 1)
logits [[-0.28230175 -0.20497961 -0.08362246 -0.06929275]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.85 " + "l1=5.85" + "l2=0 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.2257514 -1.9512514  2.3261611 -6.407209 ]]
Iteration 100 of 1000: loss=2.21 " + "l1=0.508" + "l2=1.7 f=-0.178 shape=(1, 9000, 1)
logits [[-0.11067966 -0.01589715  0.16829997 -0.7549425 ]]
Iteration 200 of 1000: loss=1.33 " + "l1=0" + "l2=1.33 f=-0.116 shape=(1, 9000, 1)
logits [[-0.2728518  -0.07551385 -0.06247298 -0.05179501]]
Iteration 300 of 1000: loss=1.1 " + "l1=0" + "l2=1.1 f=-0.134 shape=(1, 9000, 1)
logits [[-0.30216354 -0.10905873 -0.08538418 -0.03762814]]
Iteration 400 of 1000: loss=0.983 " + "l1=0.015" + "l2=0.968 f=-0.151 shape=(1, 9000, 1)
logits [[-0.2639098  -0.14223756 -0.08515648 -0.11248895]]
Iteration 500 of 1000: loss=0.911 " + "l1=0" + "l2=0.911 f=-0.164 shape=(1, 9000, 1)
logits [[-0.2953148  -0.14099716 -0.11213137 -0.10603524]]
Iteration 600 of 1000: loss=0.878 " + "l1=0" + "l2=0.878 f=-0.173 shape=(1, 9000, 1)
logits [[-0.32349545 -0.14050934 -0.14109236 -0.08587444]]
Iteration 700 of 1000: loss=0.834 " + "l1=0.011" + "l2=0.823 f=-0.182 shape=(1, 9000, 1)
logits [[-0.29837066 -0.1431534  -0.13335493 -0.153267  ]]
Iteration 800 of 1000: loss=0.801 " + "l1=0.00684" + "l2=0.794 f=-0.19 shape=(1, 9000, 1)
logits [[-0.3287003  -0.14328451 -0.13809106 -0.1505281 ]]
Iteration 900 of 1000: loss=0.778 " + "l1=0.0189" + "l2=0.759 f=-0.199 shape=(1, 9000, 1)
logits [[-0.3275849  -0.16859657 -0.1330282  -0.16738513]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.46 " + "l1=3.46" + "l2=0 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.2257514 -1.9512514  2.3261611 -6.407209 ]]
Iteration 100 of 1000: loss=2.01 " + "l1=1.31" + "l2=0.696 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.1900451 -0.7396342  1.2322372 -2.808561 ]]
Iteration 200 of 1000: loss=1.4 " + "l1=0.524" + "l2=0.878 f=-0.186 shape=(1, 9000, 1)
logits [[ 0.27330428 -0.20211194  0.39747432 -1.2136887 ]]
Iteration 300 of 1000: loss=1.04 " + "l1=0.027" + "l2=1.02 f=-0.163 shape=(1, 9000, 1)
logits [[-0.33257556 -0.09461223 -0.07020383 -0.15331694]]
Iteration 400 of 1000: loss=0.862 " + "l1=0.00485" + "l2=0.857 f=-0.19 shape=(1, 9000, 1)
logits [[-0.31264886 -0.17512499 -0.12839495 -0.14332187]]
Iteration 500 of 1000: loss=0.766 " + "l1=0.00769" + "l2=0.758 f=-0.206 shape=(1, 9000, 1)
logits [[-0.33609906 -0.17336448 -0.14526366 -0.16891906]]
Iteration 600 of 1000: loss=0.708 " + "l1=0" + "l2=0.708 f=-0.224 shape=(1, 9000, 1)
logits [[-0.40750912 -0.16740344 -0.16328667 -0.15934363]]
Iteration 700 of 1000: loss=0.667 " + "l1=0.00187" + "l2=0.665 f=-0.24 shape=(1, 9000, 1)
logits [[-0.4357136  -0.17781226 -0.17114098 -0.17688885]]
Iteration 800 of 1000: loss=0.633 " + "l1=0.00755" + "l2=0.626 f=-0.251 shape=(1, 9000, 1)
logits [[-0.45855907 -0.17705427 -0.17195635 -0.1951772 ]]
Iteration 900 of 1000: loss=0.601 " + "l1=0" + "l2=0.601 f=-0.259 shape=(1, 9000, 1)
logits [[-0.49761614 -0.1815591  -0.18526947 -0.17290202]]
--- 304.9489026069641 seconds ---
Adv result:3
Loading record A02536
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0603 " + "l1=0.0603" + "l2=0 f=-0.693 shape=(1, 9000, 1)
logits [[ 4.6275883 -1.4054657  2.5354176 -8.52918  ]]
Iteration 100 of 1000: loss=0.0598 " + "l1=0.0594" + "l2=0.00036 f=-0.698 shape=(1, 9000, 1)
logits [[ 4.571347  -1.3677903  2.5084438 -8.502274 ]]
Iteration 200 of 1000: loss=0.0596 " + "l1=0.0592" + "l2=0.000386 f=-0.699 shape=(1, 9000, 1)
logits [[ 4.5599637 -1.3578879  2.5004187 -8.49752  ]]
Iteration 300 of 1000: loss=0.0594 " + "l1=0.0589" + "l2=0.000484 f=-0.7 shape=(1, 9000, 1)
logits [[ 4.5464845 -1.3465468  2.4920816 -8.490993 ]]
Iteration 400 of 1000: loss=0.0593 " + "l1=0.0587" + "l2=0.000621 f=-0.7 shape=(1, 9000, 1)
logits [[ 4.5340075 -1.336704   2.4853022 -8.484454 ]]
Iteration 500 of 1000: loss=0.0592 " + "l1=0.0585" + "l2=0.000736 f=-0.701 shape=(1, 9000, 1)
logits [[ 4.5216846 -1.32691    2.478353  -8.478636 ]]
Iteration 600 of 1000: loss=0.0592 " + "l1=0.0583" + "l2=0.00088 f=-0.702 shape=(1, 9000, 1)
logits [[ 4.5105715 -1.3183887  2.4722311 -8.472888 ]]
Iteration 700 of 1000: loss=0.0592 " + "l1=0.0581" + "l2=0.00105 f=-0.703 shape=(1, 9000, 1)
logits [[ 4.500166  -1.3098191  2.4661345 -8.467918 ]]
Iteration 800 of 1000: loss=0.0591 " + "l1=0.0579" + "l2=0.00117 f=-0.704 shape=(1, 9000, 1)
logits [[ 4.4892173 -1.3007004  2.4596136 -8.463714 ]]
Iteration 900 of 1000: loss=0.059 " + "l1=0.0577" + "l2=0.00127 f=-0.705 shape=(1, 9000, 1)
logits [[ 4.4795494 -1.2922529  2.4537082 -8.460248 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.603 " + "l1=0.603" + "l2=0 f=-0.693 shape=(1, 9000, 1)
logits [[ 4.6275883 -1.4054657  2.5354176 -8.52918  ]]
Iteration 100 of 1000: loss=0.555 " + "l1=0.532" + "l2=0.0235 f=-0.731 shape=(1, 9000, 1)
logits [[ 4.1981926 -1.1214395  2.3448145 -8.345948 ]]
Iteration 200 of 1000: loss=0.529 " + "l1=0.496" + "l2=0.0333 f=-0.748 shape=(1, 9000, 1)
logits [[ 3.9792912 -0.9794735  2.2523146 -8.245935 ]]
Iteration 300 of 1000: loss=0.514 " + "l1=0.474" + "l2=0.0402 f=-0.747 shape=(1, 9000, 1)
logits [[ 3.8256114 -0.9105739  2.2046144 -8.109353 ]]
Iteration 400 of 1000: loss=0.502 " + "l1=0.455" + "l2=0.0466 f=-0.747 shape=(1, 9000, 1)
logits [[ 3.6935923 -0.8588513  2.165252  -7.9882746]]
Iteration 500 of 1000: loss=0.49 " + "l1=0.438" + "l2=0.0523 f=-0.747 shape=(1, 9000, 1)
logits [[ 3.5664833 -0.8140536  2.1302903 -7.8697143]]
Iteration 600 of 1000: loss=0.479 " + "l1=0.42" + "l2=0.0591 f=-0.745 shape=(1, 9000, 1)
logits [[ 3.4388506 -0.7619601  2.099567  -7.7557487]]
Iteration 700 of 1000: loss=0.47 " + "l1=0.407" + "l2=0.0629 f=-0.745 shape=(1, 9000, 1)
logits [[ 3.3394074  -0.72987753  2.0714567  -7.660872  ]]
Iteration 800 of 1000: loss=0.462 " + "l1=0.397" + "l2=0.0656 f=-0.744 shape=(1, 9000, 1)
logits [[ 3.2610698  -0.70669496  2.0442996  -7.5748925 ]]
Iteration 900 of 1000: loss=0.456 " + "l1=0.387" + "l2=0.0683 f=-0.745 shape=(1, 9000, 1)
logits [[ 3.1862876 -0.6864937  2.0157943 -7.4943337]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.03 " + "l1=6.03" + "l2=0 f=-0.693 shape=(1, 9000, 1)
logits [[ 4.6275883 -1.4054657  2.5354176 -8.52918  ]]
Iteration 100 of 1000: loss=2.56 " + "l1=1.16" + "l2=1.4 f=-0.806 shape=(1, 9000, 1)
logits [[ 1.5820212   0.44115633  1.5981855  -6.843964  ]]
Iteration 200 of 1000: loss=1.74 " + "l1=0.432" + "l2=1.31 f=-0.777 shape=(1, 9000, 1)
logits [[ 1.3024508  0.8882817  1.3197947 -6.6186557]]
Iteration 300 of 1000: loss=1.28 " + "l1=0" + "l2=1.28 f=-0.751 shape=(1, 9000, 1)
logits [[ 1.1231207  1.1370645  1.1338562 -6.396465 ]]
Iteration 400 of 1000: loss=1.09 " + "l1=0.00661" + "l2=1.08 f=-0.745 shape=(1, 9000, 1)
logits [[ 1.1096379  1.1053469  1.1119576 -6.3064027]]
Iteration 500 of 1000: loss=0.936 " + "l1=0.00333" + "l2=0.932 f=-0.751 shape=(1, 9000, 1)
logits [[ 1.0704607  1.0943854  1.0977117 -6.2664304]]
Iteration 600 of 1000: loss=0.868 " + "l1=0" + "l2=0.868 f=-0.746 shape=(1, 9000, 1)
logits [[ 1.0623754  1.084052   1.0780687 -6.210418 ]]
Iteration 700 of 1000: loss=0.83 " + "l1=0.0163" + "l2=0.813 f=-0.736 shape=(1, 9000, 1)
logits [[ 1.0713382  1.0549945  1.0620389 -6.133217 ]]
Iteration 800 of 1000: loss=0.782 " + "l1=0.000185" + "l2=0.782 f=-0.736 shape=(1, 9000, 1)
logits [[ 1.0232714  1.0509909  1.0511756 -6.067552 ]]
Iteration 900 of 1000: loss=0.749 " + "l1=0" + "l2=0.749 f=-0.73 shape=(1, 9000, 1)
logits [[ 1.0268648  1.0371232  1.0287266 -6.0143027]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.32 " + "l1=3.32" + "l2=0 f=-0.693 shape=(1, 9000, 1)
logits [[ 4.6275883 -1.4054657  2.5354176 -8.52918  ]]
Iteration 100 of 1000: loss=2.08 " + "l1=1.5" + "l2=0.582 f=-0.82 shape=(1, 9000, 1)
logits [[ 2.5383148 -0.1890222  1.901179  -7.529868 ]]
Iteration 200 of 1000: loss=1.55 " + "l1=0.69" + "l2=0.86 f=-0.835 shape=(1, 9000, 1)
logits [[ 1.6356995  0.3803814  1.6339495 -6.9886684]]
Iteration 300 of 1000: loss=1.23 " + "l1=0.45" + "l2=0.778 f=-0.799 shape=(1, 9000, 1)
logits [[ 1.4504408   0.63281494  1.4408511  -6.7181745 ]]
Iteration 400 of 1000: loss=1.07 " + "l1=0.342" + "l2=0.731 f=-0.776 shape=(1, 9000, 1)
logits [[ 1.3415815  0.7199645  1.3414084 -6.5058036]]
Iteration 500 of 1000: loss=0.972 " + "l1=0.242" + "l2=0.73 f=-0.749 shape=(1, 9000, 1)
logits [[ 1.2408457  0.8051143  1.2450298 -6.288178 ]]
Iteration 600 of 1000: loss=0.894 " + "l1=0.16" + "l2=0.734 f=-0.725 shape=(1, 9000, 1)
logits [[ 1.1601784  0.8699694  1.1593454 -6.0896153]]
Iteration 700 of 1000: loss=0.834 " + "l1=0.103" + "l2=0.731 f=-0.716 shape=(1, 9000, 1)
logits [[ 1.1011884  0.9196979  1.1072835 -5.993298 ]]
Iteration 800 of 1000: loss=0.779 " + "l1=0.0512" + "l2=0.727 f=-0.715 shape=(1, 9000, 1)
logits [[ 1.0556046   0.97244483  1.0655061  -5.9529605 ]]
Iteration 900 of 1000: loss=0.724 " + "l1=0.0074" + "l2=0.716 f=-0.714 shape=(1, 9000, 1)
logits [[ 1.0139542  1.0072056  1.0206629 -5.895933 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.96 " + "l1=1.96" + "l2=0 f=-0.693 shape=(1, 9000, 1)
logits [[ 4.6275883 -1.4054657  2.5354176 -8.52918  ]]
Iteration 100 of 1000: loss=1.48 " + "l1=1.25" + "l2=0.23 f=-0.79 shape=(1, 9000, 1)
logits [[ 3.2650466 -0.5847974  2.0589542 -7.898144 ]]
Iteration 200 of 1000: loss=1.31 " + "l1=1.02" + "l2=0.291 f=-0.797 shape=(1, 9000, 1)
logits [[ 2.7861667 -0.3468332  1.9141618 -7.541865 ]]
Iteration 300 of 1000: loss=1.17 " + "l1=0.798" + "l2=0.37 f=-0.799 shape=(1, 9000, 1)
logits [[ 2.359719   -0.09717844  1.7593864  -7.2180142 ]]
Iteration 400 of 1000: loss=1.03 " + "l1=0.574" + "l2=0.455 f=-0.803 shape=(1, 9000, 1)
logits [[ 1.8894925   0.12475917  1.6221257  -6.8491755 ]]
Iteration 500 of 1000: loss=0.896 " + "l1=0.405" + "l2=0.491 f=-0.804 shape=(1, 9000, 1)
logits [[ 1.5355471   0.29030067  1.5083506  -6.54888   ]]
Iteration 600 of 1000: loss=0.789 " + "l1=0.331" + "l2=0.458 f=-0.78 shape=(1, 9000, 1)
logits [[ 1.4085965   0.39154574  1.407782   -6.326536  ]]
Iteration 700 of 1000: loss=0.73 " + "l1=0.302" + "l2=0.428 f=-0.764 shape=(1, 9000, 1)
logits [[ 1.3610498   0.43270513  1.3553238  -6.2057266 ]]
Iteration 800 of 1000: loss=0.691 " + "l1=0.279" + "l2=0.412 f=-0.755 shape=(1, 9000, 1)
logits [[ 1.3145522  0.4568205  1.3136364 -6.103253 ]]
Iteration 900 of 1000: loss=0.663 " + "l1=0.263" + "l2=0.4 f=-0.752 shape=(1, 9000, 1)
logits [[ 1.2727612   0.46929896  1.2797629  -6.0291696 ]]
--- 303.5140664577484 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0209 " + "l1=0.0209" + "l2=0 f=-0.693 shape=(1, 9000, 1)
logits [[ 4.6275883 -1.4054657  2.5354176 -8.52918  ]]
Iteration 100 of 1000: loss=0.0208 " + "l1=0.0206" + "l2=0.000156 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.5954843 -1.4030994  2.5347729 -8.5078125]]
Iteration 200 of 1000: loss=0.0207 " + "l1=0.0206" + "l2=0.000128 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.5931487 -1.4029789  2.5344648 -8.504577 ]]
Iteration 300 of 1000: loss=0.0207 " + "l1=0.0205" + "l2=0.000188 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.588569  -1.4032018  2.534617  -8.499605 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.209 " + "l1=0.209" + "l2=0 f=-0.693 shape=(1, 9000, 1)
logits [[ 4.6275883 -1.4054657  2.5354176 -8.52918  ]]
Iteration 100 of 1000: loss=0.195 " + "l1=0.187" + "l2=0.00798 f=-0.713 shape=(1, 9000, 1)
logits [[ 4.395648  -1.3899972  2.5294437 -8.385194 ]]
Iteration 200 of 1000: loss=0.188 " + "l1=0.177" + "l2=0.0111 f=-0.714 shape=(1, 9000, 1)
logits [[ 4.309812  -1.3932332  2.536425  -8.307478 ]]
Iteration 300 of 1000: loss=0.183 " + "l1=0.169" + "l2=0.0141 f=-0.713 shape=(1, 9000, 1)
logits [[ 4.231157  -1.3978623  2.542437  -8.228013 ]]
Iteration 400 of 1000: loss=0.178 " + "l1=0.161" + "l2=0.0168 f=-0.713 shape=(1, 9000, 1)
logits [[ 4.155399  -1.4013416  2.54414   -8.148989 ]]
Iteration 500 of 1000: loss=0.174 " + "l1=0.155" + "l2=0.0189 f=-0.711 shape=(1, 9000, 1)
logits [[ 4.0908675 -1.3994675  2.5440338 -8.081225 ]]
Iteration 600 of 1000: loss=0.17 " + "l1=0.149" + "l2=0.0205 f=-0.711 shape=(1, 9000, 1)
logits [[ 4.0338182 -1.3935661  2.5409763 -8.024159 ]]
Iteration 700 of 1000: loss=0.166 " + "l1=0.144" + "l2=0.0222 f=-0.711 shape=(1, 9000, 1)
logits [[ 3.978427  -1.3874905  2.5398176 -7.9757013]]
Iteration 800 of 1000: loss=0.162 " + "l1=0.137" + "l2=0.0248 f=-0.712 shape=(1, 9000, 1)
logits [[ 3.9060214 -1.3766038  2.538378  -7.9158964]]
Iteration 900 of 1000: loss=0.157 " + "l1=0.13" + "l2=0.0267 f=-0.71 shape=(1, 9000, 1)
logits [[ 3.840981  -1.3647865  2.5391364 -7.856796 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.09 " + "l1=2.09" + "l2=0 f=-0.693 shape=(1, 9000, 1)
logits [[ 4.6275883 -1.4054657  2.5354176 -8.52918  ]]
Iteration 100 of 1000: loss=0.67 " + "l1=0.026" + "l2=0.644 f=-0.774 shape=(1, 9000, 1)
logits [[ 2.5984983 -1.3213681  2.5725167 -6.9441285]]
Iteration 200 of 1000: loss=0.453 " + "l1=0" + "l2=0.453 f=-0.773 shape=(1, 9000, 1)
logits [[ 2.541153  -1.3419615  2.549535  -6.838747 ]]
Iteration 300 of 1000: loss=0.378 " + "l1=0" + "l2=0.378 f=-0.769 shape=(1, 9000, 1)
logits [[ 2.5041893 -1.3429865  2.5164232 -6.754674 ]]
Iteration 400 of 1000: loss=0.332 " + "l1=0.0132" + "l2=0.318 f=-0.761 shape=(1, 9000, 1)
logits [[ 2.4955235 -1.3332828  2.482343  -6.6893744]]
Iteration 500 of 1000: loss=0.289 " + "l1=0" + "l2=0.289 f=-0.755 shape=(1, 9000, 1)
logits [[ 2.4511807 -1.3109378  2.4527452 -6.6127934]]
Iteration 600 of 1000: loss=0.264 " + "l1=0.00232" + "l2=0.261 f=-0.748 shape=(1, 9000, 1)
logits [[ 2.4358342 -1.2914703  2.433516  -6.5685225]]
Iteration 700 of 1000: loss=0.246 " + "l1=0" + "l2=0.246 f=-0.741 shape=(1, 9000, 1)
logits [[ 2.4054937 -1.2746935  2.4206188 -6.5153623]]
Iteration 800 of 1000: loss=0.227 " + "l1=0" + "l2=0.227 f=-0.734 shape=(1, 9000, 1)
logits [[ 2.3995686 -1.2557338  2.4095535 -6.4896317]]
Iteration 900 of 1000: loss=0.211 " + "l1=0" + "l2=0.211 f=-0.728 shape=(1, 9000, 1)
logits [[ 2.3967402 -1.2363458  2.396993  -6.468563 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.15 " + "l1=1.15" + "l2=0 f=-0.693 shape=(1, 9000, 1)
logits [[ 4.6275883 -1.4054657  2.5354176 -8.52918  ]]
Iteration 100 of 1000: loss=0.692 " + "l1=0.432" + "l2=0.26 f=-0.763 shape=(1, 9000, 1)
logits [[ 3.3521385 -1.3206632  2.567538  -7.6517463]]
Iteration 200 of 1000: loss=0.497 " + "l1=0.143" + "l2=0.353 f=-0.767 shape=(1, 9000, 1)
logits [[ 2.8297195 -1.3699869  2.5694017 -7.098257 ]]
Iteration 300 of 1000: loss=0.356 " + "l1=0.00549" + "l2=0.35 f=-0.762 shape=(1, 9000, 1)
logits [[ 2.5347266 -1.3522402  2.524741  -6.754053 ]]
Iteration 400 of 1000: loss=0.291 " + "l1=0.0025" + "l2=0.288 f=-0.752 shape=(1, 9000, 1)
logits [[ 2.4849467 -1.331288   2.4803953 -6.6415524]]
Iteration 500 of 1000: loss=0.254 " + "l1=0.00182" + "l2=0.253 f=-0.742 shape=(1, 9000, 1)
logits [[ 2.4504929 -1.2998068  2.4471776 -6.5666337]]
Iteration 600 of 1000: loss=0.232 " + "l1=0.00652" + "l2=0.226 f=-0.735 shape=(1, 9000, 1)
logits [[ 2.4332798 -1.2699859  2.4214213 -6.5244393]]
Iteration 700 of 1000: loss=0.209 " + "l1=0.000499" + "l2=0.209 f=-0.733 shape=(1, 9000, 1)
logits [[ 2.3983014 -1.2451562  2.3973944 -6.481391 ]]
Iteration 800 of 1000: loss=0.19 " + "l1=0" + "l2=0.19 f=-0.729 shape=(1, 9000, 1)
logits [[ 2.3667243 -1.210116   2.3695586 -6.4419255]]
Iteration 900 of 1000: loss=0.172 " + "l1=0.00156" + "l2=0.17 f=-0.726 shape=(1, 9000, 1)
logits [[ 2.3484392 -1.1832942  2.345602  -6.4157057]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.68 " + "l1=0.68" + "l2=0 f=-0.693 shape=(1, 9000, 1)
logits [[ 4.6275883 -1.4054657  2.5354176 -8.52918  ]]
Iteration 100 of 1000: loss=0.522 " + "l1=0.438" + "l2=0.0833 f=-0.744 shape=(1, 9000, 1)
logits [[ 3.8908274 -1.3586413  2.5417483 -8.048316 ]]
Iteration 200 of 1000: loss=0.449 " + "l1=0.323" + "l2=0.125 f=-0.746 shape=(1, 9000, 1)
logits [[ 3.5425506 -1.3296428  2.5475159 -7.743076 ]]
Iteration 300 of 1000: loss=0.385 " + "l1=0.239" + "l2=0.145 f=-0.747 shape=(1, 9000, 1)
logits [[ 3.2775652 -1.3364191  2.5407617 -7.4686213]]
Iteration 400 of 1000: loss=0.33 " + "l1=0.162" + "l2=0.168 f=-0.742 shape=(1, 9000, 1)
logits [[ 3.013236  -1.3366702  2.5161924 -7.1622815]]
Iteration 500 of 1000: loss=0.289 " + "l1=0.0994" + "l2=0.189 f=-0.738 shape=(1, 9000, 1)
logits [[ 2.7888405 -1.30904    2.4828458 -6.913507 ]]
Iteration 600 of 1000: loss=0.257 " + "l1=0.0545" + "l2=0.203 f=-0.736 shape=(1, 9000, 1)
logits [[ 2.6137133 -1.2851235  2.4459488 -6.716648 ]]
Iteration 700 of 1000: loss=0.224 " + "l1=0.00714" + "l2=0.217 f=-0.735 shape=(1, 9000, 1)
logits [[ 2.429387  -1.2555889  2.4074304 -6.522881 ]]
Iteration 800 of 1000: loss=0.199 " + "l1=0.00117" + "l2=0.198 f=-0.731 shape=(1, 9000, 1)
logits [[ 2.3799498 -1.2240993  2.3763525 -6.457358 ]]
Iteration 900 of 1000: loss=0.176 " + "l1=0.00334" + "l2=0.172 f=-0.728 shape=(1, 9000, 1)
logits [[ 2.3550718 -1.1911952  2.3447838 -6.421759 ]]
--- 265.3761885166168 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.132 " + "l1=0.132" + "l2=0 f=-0.693 shape=(1, 9000, 1)
logits [[ 4.6275883 -1.4054657  2.5354176 -8.52918  ]]
Iteration 100 of 1000: loss=0.131 " + "l1=0.13" + "l2=0.000487 f=-0.692 shape=(1, 9000, 1)
logits [[ 4.5595193 -1.3920159  2.5108707 -8.447887 ]]
Iteration 200 of 1000: loss=0.13 " + "l1=0.13" + "l2=0.000577 f=-0.692 shape=(1, 9000, 1)
logits [[ 4.542127  -1.3889376  2.5041661 -8.423712 ]]
Iteration 300 of 1000: loss=0.13 " + "l1=0.129" + "l2=0.000756 f=-0.69 shape=(1, 9000, 1)
logits [[ 4.5235395 -1.3859729  2.4972837 -8.395494 ]]
Iteration 400 of 1000: loss=0.13 " + "l1=0.129" + "l2=0.000937 f=-0.689 shape=(1, 9000, 1)
logits [[ 4.505579  -1.3833674  2.4906526 -8.367019 ]]
Iteration 500 of 1000: loss=0.129 " + "l1=0.128" + "l2=0.00118 f=-0.687 shape=(1, 9000, 1)
logits [[ 4.488662  -1.3810931  2.4846816 -8.339281 ]]
Iteration 600 of 1000: loss=0.129 " + "l1=0.128" + "l2=0.00137 f=-0.685 shape=(1, 9000, 1)
logits [[ 4.4729495 -1.3792849  2.479183  -8.312876 ]]
Iteration 700 of 1000: loss=0.129 " + "l1=0.127" + "l2=0.0017 f=-0.683 shape=(1, 9000, 1)
logits [[ 4.458176  -1.3774487  2.473927  -8.288061 ]]
Iteration 800 of 1000: loss=0.129 " + "l1=0.127" + "l2=0.0018 f=-0.682 shape=(1, 9000, 1)
logits [[ 4.444444 -1.376009  2.469112 -8.264579]]
Iteration 900 of 1000: loss=0.129 " + "l1=0.127" + "l2=0.00212 f=-0.68 shape=(1, 9000, 1)
logits [[ 4.4324827 -1.3749913  2.4650404 -8.243113 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.32 " + "l1=1.32" + "l2=0 f=-0.693 shape=(1, 9000, 1)
logits [[ 4.6275883 -1.4054657  2.5354176 -8.52918  ]]
Iteration 100 of 1000: loss=1.23 " + "l1=1.19" + "l2=0.0365 f=-0.68 shape=(1, 9000, 1)
logits [[ 4.0832367 -1.3218058  2.3670833 -7.849229 ]]
Iteration 200 of 1000: loss=1.18 " + "l1=1.12" + "l2=0.0555 f=-0.646 shape=(1, 9000, 1)
logits [[ 3.819376  -1.2822222  2.2795315 -7.4018016]]
Iteration 300 of 1000: loss=1.13 " + "l1=1.05" + "l2=0.0777 f=-0.606 shape=(1, 9000, 1)
logits [[ 3.5799263 -1.26325    2.1970532 -6.9384856]]
Iteration 400 of 1000: loss=1.09 " + "l1=0.987" + "l2=0.101 f=-0.566 shape=(1, 9000, 1)
logits [[ 3.3644643 -1.2584674  2.1305394 -6.5016065]]
Iteration 500 of 1000: loss=1.05 " + "l1=0.928" + "l2=0.122 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.1737213 -1.2461935  2.0693262 -6.105501 ]]
Iteration 600 of 1000: loss=1.01 " + "l1=0.871" + "l2=0.142 f=-0.492 shape=(1, 9000, 1)
logits [[ 2.9867086 -1.2280284  1.9982704 -5.725185 ]]
Iteration 700 of 1000: loss=0.979 " + "l1=0.813" + "l2=0.167 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.7879214 -1.2058026  1.9371096 -5.3393846]]
Iteration 800 of 1000: loss=0.947 " + "l1=0.757" + "l2=0.19 f=-0.422 shape=(1, 9000, 1)
logits [[ 2.5934885 -1.179657   1.8772843 -4.9789624]]
Iteration 900 of 1000: loss=0.92 " + "l1=0.712" + "l2=0.208 f=-0.395 shape=(1, 9000, 1)
logits [[ 2.4368534 -1.1591936  1.8260332 -4.6827774]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=13.2 " + "l1=13.2" + "l2=0 f=-0.693 shape=(1, 9000, 1)
logits [[ 4.6275883 -1.4054657  2.5354176 -8.52918  ]]
Iteration 100 of 1000: loss=6.71 " + "l1=4.21" + "l2=2.5 f=-0.315 shape=(1, 9000, 1)
logits [[ 1.1532637 -0.6913057  1.2414407 -2.9642782]]
Iteration 200 of 1000: loss=3.75 " + "l1=0.472" + "l2=3.28 f=-0.0883 shape=(1, 9000, 1)
logits [[-0.15056513 -0.45876846  0.36416608 -0.10815465]]
Iteration 300 of 1000: loss=2.46 " + "l1=0" + "l2=2.46 f=-0.0356 shape=(1, 9000, 1)
logits [[-0.13424343 -0.58227134  0.28599757  0.2881467 ]]
Iteration 400 of 1000: loss=2.01 " + "l1=0.0193" + "l2=1.99 f=-0.0303 shape=(1, 9000, 1)
logits [[ 0.02059328 -0.68814206  0.28280768  0.26348165]]
Iteration 500 of 1000: loss=1.74 " + "l1=0.0203" + "l2=1.72 f=-0.0294 shape=(1, 9000, 1)
logits [[ 0.09950738 -0.74560493  0.27444917  0.25418186]]
Iteration 600 of 1000: loss=1.57 " + "l1=0.00682" + "l2=1.57 f=-0.025 shape=(1, 9000, 1)
logits [[ 0.13147894 -0.7594087   0.26729956  0.2604788 ]]
Iteration 700 of 1000: loss=1.45 " + "l1=0" + "l2=1.45 f=-0.0244 shape=(1, 9000, 1)
logits [[ 0.14973861 -0.7695079   0.24605007  0.27624336]]
Iteration 800 of 1000: loss=1.33 " + "l1=0.0132" + "l2=1.32 f=-0.0289 shape=(1, 9000, 1)
logits [[ 0.18836924 -0.77993757  0.24452014  0.23133892]]
Iteration 900 of 1000: loss=1.23 " + "l1=0" + "l2=1.23 f=-0.0298 shape=(1, 9000, 1)
logits [[ 0.20049416 -0.7826704   0.22275601  0.24009839]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.24 " + "l1=7.24" + "l2=0 f=-0.693 shape=(1, 9000, 1)
logits [[ 4.6275883 -1.4054657  2.5354176 -8.52918  ]]
Iteration 100 of 1000: loss=4.72 " + "l1=3.53" + "l2=1.19 f=-0.505 shape=(1, 9000, 1)
logits [[ 1.7943518  -0.98813623  1.7953401  -4.621382  ]]
Iteration 200 of 1000: loss=3.5 " + "l1=2.18" + "l2=1.32 f=-0.243 shape=(1, 9000, 1)
logits [[ 1.2240872 -0.8880429  1.3231512 -2.632053 ]]
Iteration 300 of 1000: loss=2.61 " + "l1=1.04" + "l2=1.57 f=-0.0901 shape=(1, 9000, 1)
logits [[ 0.5296435 -0.6882312  0.8430907 -1.0448071]]
Iteration 400 of 1000: loss=1.96 " + "l1=0.3" + "l2=1.66 f=-0.0105 shape=(1, 9000, 1)
logits [[ 0.2107562  -0.68393594  0.48792636 -0.05679704]]
Iteration 500 of 1000: loss=1.57 " + "l1=0.0104" + "l2=1.56 f=0.00705 shape=(1, 9000, 1)
logits [[ 0.13236839 -0.69718707  0.30597824  0.28704563]]
Iteration 600 of 1000: loss=1.34 " + "l1=0" + "l2=1.34 f=-0.00483 shape=(1, 9000, 1)
logits [[ 0.17518589 -0.7178447   0.2584312   0.26489294]]
Iteration 700 of 1000: loss=1.18 " + "l1=0" + "l2=1.18 f=-0.0192 shape=(1, 9000, 1)
logits [[ 0.21016797 -0.7338954   0.21858199  0.22837466]]
Iteration 800 of 1000: loss=1.08 " + "l1=0" + "l2=1.08 f=-0.0286 shape=(1, 9000, 1)
logits [[ 0.18973778 -0.7407917   0.20626374  0.23041609]]
Iteration 900 of 1000: loss=0.995 " + "l1=0.000908" + "l2=0.994 f=-0.0389 shape=(1, 9000, 1)
logits [[ 0.19582069 -0.75027597  0.20015608  0.19850534]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.28 " + "l1=4.28" + "l2=0 f=-0.693 shape=(1, 9000, 1)
logits [[ 4.6275883 -1.4054657  2.5354176 -8.52918  ]]
Iteration 100 of 1000: loss=3.35 " + "l1=2.91" + "l2=0.436 f=-0.596 shape=(1, 9000, 1)
logits [[ 2.8490117 -1.1549915  2.042922  -6.119553 ]]
Iteration 200 of 1000: loss=2.73 " + "l1=2.05" + "l2=0.684 f=-0.438 shape=(1, 9000, 1)
logits [[ 1.9376632 -1.126585   1.7914653 -4.354855 ]]
Iteration 300 of 1000: loss=2.24 " + "l1=1.52" + "l2=0.724 f=-0.28 shape=(1, 9000, 1)
logits [[ 1.5210061 -1.0241429  1.5222421 -3.1399105]]
Iteration 400 of 1000: loss=1.92 " + "l1=1.12" + "l2=0.798 f=-0.177 shape=(1, 9000, 1)
logits [[ 1.1723144  -0.91242933  1.2460606  -2.214115  ]]
Iteration 500 of 1000: loss=1.69 " + "l1=0.815" + "l2=0.871 f=-0.0995 shape=(1, 9000, 1)
logits [[ 0.9335857  -0.84412223  1.0097442  -1.4970332 ]]
Iteration 600 of 1000: loss=1.49 " + "l1=0.602" + "l2=0.892 f=-0.0466 shape=(1, 9000, 1)
logits [[ 0.82999444 -0.84956414  0.8420138  -1.0089705 ]]
Iteration 700 of 1000: loss=1.32 " + "l1=0.401" + "l2=0.924 f=-0.0172 shape=(1, 9000, 1)
logits [[ 0.65868765 -0.8433726   0.67485946 -0.5588016 ]]
Iteration 800 of 1000: loss=1.16 " + "l1=0.218" + "l2=0.946 f=0.000755 shape=(1, 9000, 1)
logits [[ 0.49896798 -0.8464991   0.51030374 -0.15975094]]
Iteration 900 of 1000: loss=1.01 " + "l1=0.0369" + "l2=0.974 f=0.00332 shape=(1, 9000, 1)
logits [[ 0.31907403 -0.8422558   0.3249997   0.21147394]]
--- 308.5414979457855 seconds ---
Adv result:3
Loading record A02549
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0888 " + "l1=0.0888" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 6.347314  -2.532774   3.2618577 -9.067646 ]]
Iteration 100 of 1000: loss=0.0884 " + "l1=0.0881" + "l2=0.000288 f=-0.495 shape=(1, 9000, 1)
logits [[ 6.314247  -2.4927588  3.2297828 -9.029767 ]]
Iteration 200 of 1000: loss=0.0882 " + "l1=0.0879" + "l2=0.000268 f=-0.494 shape=(1, 9000, 1)
logits [[ 6.3087068 -2.4858453  3.22371   -9.02375  ]]
Iteration 300 of 1000: loss=0.0881 " + "l1=0.0878" + "l2=0.000326 f=-0.494 shape=(1, 9000, 1)
logits [[ 6.300255  -2.4759543  3.215181  -9.014425 ]]
Iteration 400 of 1000: loss=0.088 " + "l1=0.0876" + "l2=0.000426 f=-0.493 shape=(1, 9000, 1)
logits [[ 6.291214  -2.4660237  3.2064216 -9.004595 ]]
Iteration 500 of 1000: loss=0.0879 " + "l1=0.0874" + "l2=0.000482 f=-0.493 shape=(1, 9000, 1)
logits [[ 6.2821803 -2.4561825  3.1979198 -8.994646 ]]
Iteration 600 of 1000: loss=0.0878 " + "l1=0.0872" + "l2=0.000592 f=-0.492 shape=(1, 9000, 1)
logits [[ 6.2730975 -2.446429   3.189468  -8.984366 ]]
Iteration 700 of 1000: loss=0.0877 " + "l1=0.087" + "l2=0.000686 f=-0.491 shape=(1, 9000, 1)
logits [[ 6.2640963 -2.4368653  3.1811254 -8.973969 ]]
Iteration 800 of 1000: loss=0.0877 " + "l1=0.0868" + "l2=0.000839 f=-0.491 shape=(1, 9000, 1)
logits [[ 6.2554817 -2.427405   3.1730497 -8.963906 ]]
Iteration 900 of 1000: loss=0.0877 " + "l1=0.0866" + "l2=0.00103 f=-0.49 shape=(1, 9000, 1)
logits [[ 6.2468843 -2.4180512  3.164971  -8.953738 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.888 " + "l1=0.888" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 6.347314  -2.532774   3.2618577 -9.067646 ]]
Iteration 100 of 1000: loss=0.846 " + "l1=0.825" + "l2=0.0208 f=-0.473 shape=(1, 9000, 1)
logits [[ 6.0630264 -2.1903973  2.9969933 -8.759761 ]]
Iteration 200 of 1000: loss=0.819 " + "l1=0.787" + "l2=0.0325 f=-0.463 shape=(1, 9000, 1)
logits [[ 5.870769  -1.9986116  2.8425484 -8.5667   ]]
Iteration 300 of 1000: loss=0.79 " + "l1=0.744" + "l2=0.0457 f=-0.454 shape=(1, 9000, 1)
logits [[ 5.6483116 -1.7919399  2.677386  -8.351662 ]]
Iteration 400 of 1000: loss=0.762 " + "l1=0.707" + "l2=0.0553 f=-0.45 shape=(1, 9000, 1)
logits [[ 5.435604  -1.6367334  2.5430381 -8.142361 ]]
Iteration 500 of 1000: loss=0.732 " + "l1=0.662" + "l2=0.0695 f=-0.436 shape=(1, 9000, 1)
logits [[ 5.1830072 -1.4404945  2.3968174 -7.8832755]]
Iteration 600 of 1000: loss=0.704 " + "l1=0.622" + "l2=0.0816 f=-0.427 shape=(1, 9000, 1)
logits [[ 4.9412885 -1.2792652  2.2718506 -7.6437435]]
Iteration 700 of 1000: loss=0.678 " + "l1=0.588" + "l2=0.0905 f=-0.433 shape=(1, 9000, 1)
logits [[ 4.7160664 -1.15905    2.1465273 -7.4372983]]
Iteration 800 of 1000: loss=0.651 " + "l1=0.55" + "l2=0.101 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.4643016 -1.0366194  2.0057666 -7.2365084]]
Iteration 900 of 1000: loss=0.624 " + "l1=0.514" + "l2=0.111 f=-0.468 shape=(1, 9000, 1)
logits [[ 4.2059755 -0.9320019  1.881475  -7.02775  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.88 " + "l1=8.88" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 6.347314  -2.532774   3.2618577 -9.067646 ]]
Iteration 100 of 1000: loss=4.08 " + "l1=1.6" + "l2=2.48 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.0617085   0.45975208  1.3801785  -5.971634  ]]
Iteration 200 of 1000: loss=1.89 " + "l1=0.0231" + "l2=1.87 f=-0.65 shape=(1, 9000, 1)
logits [[ 1.1140697  1.0909232  1.1003789 -5.9035277]]
Iteration 300 of 1000: loss=1.58 " + "l1=0.0154" + "l2=1.57 f=-0.649 shape=(1, 9000, 1)
logits [[ 1.0751855  1.0598099  1.0678601 -5.798131 ]]
Iteration 400 of 1000: loss=1.43 " + "l1=0.000801" + "l2=1.43 f=-0.643 shape=(1, 9000, 1)
logits [[ 1.0374902  1.0428313  1.0436323 -5.697474 ]]
Iteration 500 of 1000: loss=1.34 " + "l1=0.00145" + "l2=1.34 f=-0.638 shape=(1, 9000, 1)
logits [[ 1.0163872  1.0149373  1.0113611 -5.594015 ]]
Iteration 600 of 1000: loss=1.28 " + "l1=0.011" + "l2=1.27 f=-0.632 shape=(1, 9000, 1)
logits [[ 0.98877704  0.97945917  0.99048966 -5.486842  ]]
Iteration 700 of 1000: loss=1.23 " + "l1=0" + "l2=1.23 f=-0.625 shape=(1, 9000, 1)
logits [[ 0.95459056  0.9640054   0.95510083 -5.3728313 ]]
Iteration 800 of 1000: loss=1.2 " + "l1=0" + "l2=1.2 f=-0.618 shape=(1, 9000, 1)
logits [[ 0.89787126  0.9560701   0.91760033 -5.2448726 ]]
Iteration 900 of 1000: loss=1.15 " + "l1=0" + "l2=1.15 f=-0.609 shape=(1, 9000, 1)
logits [[ 0.8791741   0.92027664  0.8942952  -5.1298175 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.88 " + "l1=4.88" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 6.347314  -2.532774   3.2618577 -9.067646 ]]
Iteration 100 of 1000: loss=3.42 " + "l1=2.74" + "l2=0.68 f=-0.42 shape=(1, 9000, 1)
logits [[ 4.204413   -0.78540546  2.0239277  -7.1222596 ]]
Iteration 200 of 1000: loss=2.01 " + "l1=0.307" + "l2=1.7 f=-0.615 shape=(1, 9000, 1)
logits [[ 1.3716022  0.8136174  1.3125644 -5.958373 ]]
Iteration 300 of 1000: loss=1.48 " + "l1=0.0359" + "l2=1.45 f=-0.635 shape=(1, 9000, 1)
logits [[ 1.0817442  1.0164775  1.0671482 -5.7034755]]
Iteration 400 of 1000: loss=1.27 " + "l1=0.0149" + "l2=1.25 f=-0.627 shape=(1, 9000, 1)
logits [[ 1.0235603  0.9964838  1.0061692 -5.5353365]]
Iteration 500 of 1000: loss=1.15 " + "l1=0" + "l2=1.15 f=-0.615 shape=(1, 9000, 1)
logits [[ 0.95988524  0.97113186  0.970413   -5.3599744 ]]
Iteration 600 of 1000: loss=1.08 " + "l1=0" + "l2=1.08 f=-0.601 shape=(1, 9000, 1)
logits [[ 0.91418     0.94250685  0.93613917 -5.1960387 ]]
Iteration 700 of 1000: loss=1.02 " + "l1=0" + "l2=1.02 f=-0.588 shape=(1, 9000, 1)
logits [[ 0.9050362   0.90757084  0.9009642  -5.0660367 ]]
Iteration 800 of 1000: loss=0.994 " + "l1=0" + "l2=0.994 f=-0.581 shape=(1, 9000, 1)
logits [[ 0.8451821   0.8851176   0.88001984 -4.933343  ]]
Iteration 900 of 1000: loss=0.955 " + "l1=0" + "l2=0.955 f=-0.57 shape=(1, 9000, 1)
logits [[ 0.838179    0.856904    0.85328746 -4.829542  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.89 " + "l1=2.89" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 6.347314  -2.532774   3.2618577 -9.067646 ]]
Iteration 100 of 1000: loss=2.37 " + "l1=2.12" + "l2=0.256 f=-0.443 shape=(1, 9000, 1)
logits [[ 5.1019034 -1.405798   2.4105966 -7.880238 ]]
Iteration 200 of 1000: loss=1.97 " + "l1=1.56" + "l2=0.405 f=-0.447 shape=(1, 9000, 1)
logits [[ 4.103228  -0.7106661  1.9123174 -7.092672 ]]
Iteration 300 of 1000: loss=1.64 " + "l1=1.06" + "l2=0.581 f=-0.475 shape=(1, 9000, 1)
logits [[ 3.0960674  -0.15134655  1.5486714  -6.3949656 ]]
Iteration 400 of 1000: loss=1.36 " + "l1=0.635" + "l2=0.73 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.1634898   0.21108879  1.3727283  -5.816421  ]]
Iteration 500 of 1000: loss=1.17 " + "l1=0.401" + "l2=0.771 f=-0.523 shape=(1, 9000, 1)
logits [[ 1.6061857   0.37259266  1.2502224  -5.32285   ]]
Iteration 600 of 1000: loss=1.02 " + "l1=0.219" + "l2=0.802 f=-0.519 shape=(1, 9000, 1)
logits [[ 1.1595458   0.48426646  1.1367145  -4.85648   ]]
Iteration 700 of 1000: loss=0.931 " + "l1=0.178" + "l2=0.752 f=-0.5 shape=(1, 9000, 1)
logits [[ 1.0447187   0.49556062  1.0314984  -4.5726466 ]]
Iteration 800 of 1000: loss=0.864 " + "l1=0.135" + "l2=0.73 f=-0.492 shape=(1, 9000, 1)
logits [[ 0.93878454  0.52721983  0.94217736 -4.377999  ]]
Iteration 900 of 1000: loss=0.786 " + "l1=0.109" + "l2=0.677 f=-0.477 shape=(1, 9000, 1)
logits [[ 0.88113236  0.5461871   0.8783057  -4.2143617 ]]
--- 301.1092026233673 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0309 " + "l1=0.0309" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 6.347314  -2.532774   3.2618577 -9.067646 ]]
Iteration 100 of 1000: loss=0.0307 " + "l1=0.0306" + "l2=0.000141 f=-0.5 shape=(1, 9000, 1)
logits [[ 6.3317018 -2.544159   3.2748957 -9.061271 ]]
Iteration 200 of 1000: loss=0.0307 " + "l1=0.0305" + "l2=0.000106 f=-0.5 shape=(1, 9000, 1)
logits [[ 6.3313713 -2.5460117  3.2764304 -9.061623 ]]
Iteration 300 of 1000: loss=0.0306 " + "l1=0.0305" + "l2=0.000131 f=-0.5 shape=(1, 9000, 1)
logits [[ 6.3290796 -2.548606   3.2789848 -9.060741 ]]
Iteration 400 of 1000: loss=0.0306 " + "l1=0.0304" + "l2=0.000184 f=-0.501 shape=(1, 9000, 1)
logits [[ 6.3264785 -2.5512664  3.281756  -9.059798 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.309 " + "l1=0.309" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 6.347314  -2.532774   3.2618577 -9.067646 ]]
Iteration 100 of 1000: loss=0.296 " + "l1=0.29" + "l2=0.00581 f=-0.512 shape=(1, 9000, 1)
logits [[ 6.2523813 -2.611982   3.347471  -9.034155 ]]
Iteration 200 of 1000: loss=0.29 " + "l1=0.282" + "l2=0.00856 f=-0.518 shape=(1, 9000, 1)
logits [[ 6.2114167 -2.6562736  3.393944  -9.020987 ]]
Iteration 300 of 1000: loss=0.285 " + "l1=0.274" + "l2=0.0112 f=-0.523 shape=(1, 9000, 1)
logits [[ 6.1716037 -2.6926813  3.4349957 -9.006041 ]]
Iteration 400 of 1000: loss=0.28 " + "l1=0.266" + "l2=0.0137 f=-0.527 shape=(1, 9000, 1)
logits [[ 6.1303525 -2.7190742  3.4675403 -8.9848385]]
Iteration 500 of 1000: loss=0.275 " + "l1=0.258" + "l2=0.0169 f=-0.53 shape=(1, 9000, 1)
logits [[ 6.080684  -2.744842   3.5008864 -8.9557905]]
Iteration 600 of 1000: loss=0.269 " + "l1=0.249" + "l2=0.0206 f=-0.533 shape=(1, 9000, 1)
logits [[ 6.024686  -2.7721317  3.5357761 -8.920907 ]]
Iteration 700 of 1000: loss=0.262 " + "l1=0.237" + "l2=0.0252 f=-0.528 shape=(1, 9000, 1)
logits [[ 5.9411807 -2.7722087  3.5701876 -8.850975 ]]
Iteration 800 of 1000: loss=0.254 " + "l1=0.225" + "l2=0.0292 f=-0.52 shape=(1, 9000, 1)
logits [[ 5.8481812 -2.7704053  3.5994403 -8.758038 ]]
Iteration 900 of 1000: loss=0.248 " + "l1=0.217" + "l2=0.0313 f=-0.519 shape=(1, 9000, 1)
logits [[ 5.7812924 -2.7787056  3.6152678 -8.694841 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.09 " + "l1=3.09" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 6.347314  -2.532774   3.2618577 -9.067646 ]]
Iteration 100 of 1000: loss=1.5 " + "l1=0.712" + "l2=0.787 f=-0.605 shape=(1, 9000, 1)
logits [[ 4.703626  -3.1611068  3.9912462 -7.953518 ]]
Iteration 200 of 1000: loss=0.775 " + "l1=0" + "l2=0.775 f=-0.645 shape=(1, 9000, 1)
logits [[ 4.108407  -3.3219373  4.1106253 -7.4790225]]
Iteration 300 of 1000: loss=0.589 " + "l1=0.00443" + "l2=0.584 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.025128  -3.2525601  4.0206957 -7.3044887]]
Iteration 400 of 1000: loss=0.486 " + "l1=0.0072" + "l2=0.479 f=-0.605 shape=(1, 9000, 1)
logits [[ 3.9347374 -3.1843522  3.927541  -7.09756  ]]
Iteration 500 of 1000: loss=0.403 " + "l1=0" + "l2=0.403 f=-0.589 shape=(1, 9000, 1)
logits [[ 3.84719   -3.1299639  3.8488493 -6.923805 ]]
Iteration 600 of 1000: loss=0.35 " + "l1=0" + "l2=0.35 f=-0.579 shape=(1, 9000, 1)
logits [[ 3.7667074 -3.0896246  3.776983  -6.7701325]]
Iteration 700 of 1000: loss=0.306 " + "l1=0" + "l2=0.306 f=-0.571 shape=(1, 9000, 1)
logits [[ 3.708893  -3.0640397  3.714916  -6.645072 ]]
Iteration 800 of 1000: loss=0.276 " + "l1=0" + "l2=0.276 f=-0.564 shape=(1, 9000, 1)
logits [[ 3.652165  -3.045066   3.66342   -6.5274453]]
Iteration 900 of 1000: loss=0.251 " + "l1=0.00434" + "l2=0.246 f=-0.556 shape=(1, 9000, 1)
logits [[ 3.6151395 -3.0166583  3.6107996 -6.4346743]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.7 " + "l1=1.7" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 6.347314  -2.532774   3.2618577 -9.067646 ]]
Iteration 100 of 1000: loss=1.25 " + "l1=1" + "l2=0.242 f=-0.57 shape=(1, 9000, 1)
logits [[ 5.583817  -2.9665973  3.7569456 -8.654838 ]]
Iteration 200 of 1000: loss=0.917 " + "l1=0.524" + "l2=0.393 f=-0.59 shape=(1, 9000, 1)
logits [[ 4.9468555 -3.1559298  3.994344  -8.145574 ]]
Iteration 300 of 1000: loss=0.679 " + "l1=0.2" + "l2=0.479 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.40431   -3.2259948  4.041053  -7.69537  ]]
Iteration 400 of 1000: loss=0.474 " + "l1=0" + "l2=0.474 f=-0.618 shape=(1, 9000, 1)
logits [[ 3.9676495 -3.2189054  3.9705744 -7.1928663]]
Iteration 500 of 1000: loss=0.362 " + "l1=0" + "l2=0.362 f=-0.593 shape=(1, 9000, 1)
logits [[ 3.8321319 -3.144668   3.8380234 -6.896358 ]]
Iteration 600 of 1000: loss=0.3 " + "l1=0.00709" + "l2=0.293 f=-0.577 shape=(1, 9000, 1)
logits [[ 3.7436004 -3.0797267  3.7307038 -6.702438 ]]
Iteration 700 of 1000: loss=0.256 " + "l1=0.000514" + "l2=0.255 f=-0.569 shape=(1, 9000, 1)
logits [[ 3.65764   -3.0462677  3.6567051 -6.545483 ]]
Iteration 800 of 1000: loss=0.227 " + "l1=0.000384" + "l2=0.227 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.5909936 -3.0157042  3.590295  -6.4176564]]
Iteration 900 of 1000: loss=0.206 " + "l1=0.000777" + "l2=0.206 f=-0.558 shape=(1, 9000, 1)
logits [[ 3.5407455 -2.9926453  3.539333  -6.318745 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1 " + "l1=1" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 6.347314  -2.532774   3.2618577 -9.067646 ]]
Iteration 100 of 1000: loss=0.863 " + "l1=0.79" + "l2=0.0737 f=-0.545 shape=(1, 9000, 1)
logits [[ 5.9998918 -2.8112068  3.5699134 -8.939082 ]]
Iteration 200 of 1000: loss=0.76 " + "l1=0.639" + "l2=0.122 f=-0.551 shape=(1, 9000, 1)
logits [[ 5.696643  -2.917941   3.7320023 -8.71502  ]]
Iteration 300 of 1000: loss=0.657 " + "l1=0.483" + "l2=0.174 f=-0.554 shape=(1, 9000, 1)
logits [[ 5.342847  -3.0142884  3.8579485 -8.403514 ]]
Iteration 400 of 1000: loss=0.583 " + "l1=0.383" + "l2=0.2 f=-0.568 shape=(1, 9000, 1)
logits [[ 5.078284  -3.068543   3.8983479 -8.179747 ]]
Iteration 500 of 1000: loss=0.51 " + "l1=0.275" + "l2=0.234 f=-0.581 shape=(1, 9000, 1)
logits [[ 4.7430453 -3.1004834  3.895713  -7.8633976]]
Iteration 600 of 1000: loss=0.421 " + "l1=0.154" + "l2=0.266 f=-0.587 shape=(1, 9000, 1)
logits [[ 4.3409977 -3.1208456  3.8661559 -7.4326262]]
Iteration 700 of 1000: loss=0.324 " + "l1=0.0327" + "l2=0.292 f=-0.585 shape=(1, 9000, 1)
logits [[ 3.9001856 -3.120532   3.7994854 -6.919262 ]]
Iteration 800 of 1000: loss=0.258 " + "l1=0.00203" + "l2=0.256 f=-0.576 shape=(1, 9000, 1)
logits [[ 3.6853516 -3.060053   3.6790915 -6.609059 ]]
Iteration 900 of 1000: loss=0.222 " + "l1=0" + "l2=0.222 f=-0.568 shape=(1, 9000, 1)
logits [[ 3.5871863 -3.0118341  3.5911667 -6.4402266]]
--- 271.83887815475464 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.154 " + "l1=0.154" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 6.347314  -2.532774   3.2618577 -9.067646 ]]
Iteration 100 of 1000: loss=0.153 " + "l1=0.153" + "l2=0.000382 f=-0.493 shape=(1, 9000, 1)
logits [[ 6.3046775 -2.5080414  3.2332928 -9.003698 ]]
Iteration 200 of 1000: loss=0.153 " + "l1=0.153" + "l2=0.000377 f=-0.493 shape=(1, 9000, 1)
logits [[ 6.295478  -2.503684   3.2276142 -8.990597 ]]
Iteration 300 of 1000: loss=0.153 " + "l1=0.153" + "l2=0.000497 f=-0.492 shape=(1, 9000, 1)
logits [[ 6.2831416 -2.497245   3.2197976 -8.972606 ]]
Iteration 400 of 1000: loss=0.153 " + "l1=0.152" + "l2=0.000603 f=-0.491 shape=(1, 9000, 1)
logits [[ 6.2706294 -2.490385   3.2116022 -8.954108 ]]
Iteration 500 of 1000: loss=0.153 " + "l1=0.152" + "l2=0.000723 f=-0.489 shape=(1, 9000, 1)
logits [[ 6.2584105 -2.483095   3.203145  -8.935685 ]]
Iteration 600 of 1000: loss=0.153 " + "l1=0.152" + "l2=0.000884 f=-0.488 shape=(1, 9000, 1)
logits [[ 6.2464995 -2.4753356  3.194382  -8.917525 ]]
Iteration 700 of 1000: loss=0.152 " + "l1=0.151" + "l2=0.00102 f=-0.487 shape=(1, 9000, 1)
logits [[ 6.2346363 -2.4670312  3.1851583 -8.899276 ]]
Iteration 800 of 1000: loss=0.152 " + "l1=0.151" + "l2=0.00127 f=-0.485 shape=(1, 9000, 1)
logits [[ 6.2235074 -2.4586287  3.176076  -8.881827 ]]
Iteration 900 of 1000: loss=0.152 " + "l1=0.151" + "l2=0.00144 f=-0.484 shape=(1, 9000, 1)
logits [[ 6.212646  -2.450395   3.1671953 -8.864948 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.54 " + "l1=1.54" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 6.347314  -2.532774   3.2618577 -9.067646 ]]
Iteration 100 of 1000: loss=1.48 " + "l1=1.45" + "l2=0.0309 f=-0.461 shape=(1, 9000, 1)
logits [[ 5.968621  -2.3058164  3.013883  -8.520744 ]]
Iteration 200 of 1000: loss=1.44 " + "l1=1.39" + "l2=0.0481 f=-0.437 shape=(1, 9000, 1)
logits [[ 5.72183   -2.1413946  2.861089  -8.189363 ]]
Iteration 300 of 1000: loss=1.39 " + "l1=1.32" + "l2=0.0698 f=-0.402 shape=(1, 9000, 1)
logits [[ 5.4010596 -1.9337777  2.6974318 -7.774436 ]]
Iteration 400 of 1000: loss=1.33 " + "l1=1.25" + "l2=0.0886 f=-0.378 shape=(1, 9000, 1)
logits [[ 5.0763845 -1.7506698  2.535932  -7.3743606]]
Iteration 500 of 1000: loss=1.28 " + "l1=1.18" + "l2=0.105 f=-0.367 shape=(1, 9000, 1)
logits [[ 4.7774315 -1.61298    2.3834505 -7.0150776]]
Iteration 600 of 1000: loss=1.24 " + "l1=1.11" + "l2=0.123 f=-0.361 shape=(1, 9000, 1)
logits [[ 4.477522  -1.4875895  2.230373  -6.6625896]]
Iteration 700 of 1000: loss=1.19 " + "l1=1.05" + "l2=0.14 f=-0.357 shape=(1, 9000, 1)
logits [[ 4.1819425 -1.3750595  2.090618  -6.326461 ]]
Iteration 800 of 1000: loss=1.14 " + "l1=0.981" + "l2=0.156 f=-0.354 shape=(1, 9000, 1)
logits [[ 3.8560183 -1.2819656  1.9668016 -5.9581623]]
Iteration 900 of 1000: loss=1.07 " + "l1=0.891" + "l2=0.179 f=-0.35 shape=(1, 9000, 1)
logits [[ 3.4283876 -1.1588391  1.8095083 -5.477822 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=15.4 " + "l1=15.4" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 6.347314  -2.532774   3.2618577 -9.067646 ]]
Iteration 100 of 1000: loss=9.21 " + "l1=6.27" + "l2=2.94 f=-0.255 shape=(1, 9000, 1)
logits [[ 2.1729622  -0.71574855  1.6215116  -4.096775  ]]
Iteration 200 of 1000: loss=5.6 " + "l1=2.22" + "l2=3.38 f=-0.249 shape=(1, 9000, 1)
logits [[ 0.46481752 -0.19829793  0.47571728 -1.740177  ]]
Iteration 300 of 1000: loss=3.76 " + "l1=0.523" + "l2=3.24 f=-0.159 shape=(1, 9000, 1)
logits [[ 0.01333167 -0.30051008  0.08695376 -0.436023  ]]
Iteration 400 of 1000: loss=2.62 " + "l1=0" + "l2=2.62 f=-0.138 shape=(1, 9000, 1)
logits [[-0.19858858 -0.3198664  -0.01926904 -0.01309332]]
Iteration 500 of 1000: loss=2.05 " + "l1=0" + "l2=2.05 f=-0.164 shape=(1, 9000, 1)
logits [[-0.25269777 -0.33539242 -0.03538521 -0.03417789]]
Iteration 600 of 1000: loss=1.67 " + "l1=0" + "l2=1.67 f=-0.182 shape=(1, 9000, 1)
logits [[-0.30335066 -0.29001543 -0.07016417 -0.06450745]]
Iteration 700 of 1000: loss=1.4 " + "l1=0" + "l2=1.4 f=-0.195 shape=(1, 9000, 1)
logits [[-0.33833835 -0.22621785 -0.10891044 -0.10621276]]
Iteration 800 of 1000: loss=1.19 " + "l1=0.0153" + "l2=1.18 f=-0.198 shape=(1, 9000, 1)
logits [[-0.32852858 -0.18876962 -0.13010605 -0.14537406]]
Iteration 900 of 1000: loss=1.03 " + "l1=0" + "l2=1.03 f=-0.2 shape=(1, 9000, 1)
logits [[-0.35082182 -0.15500848 -0.14763212 -0.14462817]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=8.48 " + "l1=8.48" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 6.347314  -2.532774   3.2618577 -9.067646 ]]
Iteration 100 of 1000: loss=6.28 " + "l1=5.16" + "l2=1.12 f=-0.291 shape=(1, 9000, 1)
logits [[ 3.6755018 -1.1814786  2.0446935 -5.701697 ]]
Iteration 200 of 1000: loss=4.86 " + "l1=3.33" + "l2=1.54 f=-0.283 shape=(1, 9000, 1)
logits [[ 2.0348408  -0.60270554  1.4485257  -4.0125113 ]]
Iteration 300 of 1000: loss=3.39 " + "l1=1.7" + "l2=1.7 f=-0.278 shape=(1, 9000, 1)
logits [[ 0.74471235 -0.2606778   0.74321276 -2.3395305 ]]
Iteration 400 of 1000: loss=2.48 " + "l1=0.811" + "l2=1.67 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.20401946 -0.28633887  0.3161367  -1.1575245 ]]
Iteration 500 of 1000: loss=1.8 " + "l1=0.233" + "l2=1.57 f=-0.221 shape=(1, 9000, 1)
logits [[-0.3417656  -0.2884497   0.08398801 -0.33883804]]
Iteration 600 of 1000: loss=1.29 " + "l1=0.00195" + "l2=1.29 f=-0.232 shape=(1, 9000, 1)
logits [[-0.582714   -0.27677986 -0.03278003 -0.03632267]]
Iteration 700 of 1000: loss=1.01 " + "l1=0.00797" + "l2=1 f=-0.251 shape=(1, 9000, 1)
logits [[-0.6060033  -0.26085633 -0.06189913 -0.07639503]]
Iteration 800 of 1000: loss=0.828 " + "l1=0" + "l2=0.828 f=-0.261 shape=(1, 9000, 1)
logits [[-0.6148519  -0.2713741  -0.08329558 -0.07607991]]
Iteration 900 of 1000: loss=0.709 " + "l1=0" + "l2=0.709 f=-0.266 shape=(1, 9000, 1)
logits [[-0.6164487  -0.28969923 -0.0816444  -0.07643341]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.01 " + "l1=5.01" + "l2=0 f=-0.498 shape=(1, 9000, 1)
logits [[ 6.347314  -2.532774   3.2618577 -9.067646 ]]
Iteration 100 of 1000: loss=4.22 " + "l1=3.8" + "l2=0.415 f=-0.351 shape=(1, 9000, 1)
logits [[ 4.7367163 -1.6153018  2.4379542 -6.962819 ]]
Iteration 200 of 1000: loss=3.67 " + "l1=3.12" + "l2=0.546 f=-0.299 shape=(1, 9000, 1)
logits [[ 3.7700002 -1.1569262  2.0296392 -5.838847 ]]
Iteration 300 of 1000: loss=3.14 " + "l1=2.42" + "l2=0.715 f=-0.291 shape=(1, 9000, 1)
logits [[ 2.7305665  -0.78330874  1.6165745  -4.728599  ]]
Iteration 400 of 1000: loss=2.41 " + "l1=1.48" + "l2=0.928 f=-0.299 shape=(1, 9000, 1)
logits [[ 1.347147   -0.49955863  1.1678551  -3.212845  ]]
Iteration 500 of 1000: loss=1.83 " + "l1=0.938" + "l2=0.895 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.6985919  -0.36559877  0.71070075 -2.174822  ]]
Iteration 600 of 1000: loss=1.52 " + "l1=0.67" + "l2=0.848 f=-0.277 shape=(1, 9000, 1)
logits [[ 0.33434054 -0.33939546  0.4809731  -1.5819998 ]]
Iteration 700 of 1000: loss=1.15 " + "l1=0.264" + "l2=0.882 f=-0.283 shape=(1, 9000, 1)
logits [[-0.31568086 -0.31979105  0.15828209 -0.65519077]]
Iteration 800 of 1000: loss=0.874 " + "l1=0.0339" + "l2=0.841 f=-0.295 shape=(1, 9000, 1)
logits [[-0.6371065  -0.3128284  -0.06281545 -0.16699281]]
Iteration 900 of 1000: loss=0.71 " + "l1=0.000757" + "l2=0.709 f=-0.291 shape=(1, 9000, 1)
logits [[-0.6427717  -0.33010003 -0.0947949  -0.09712417]]
--- 306.4028251171112 seconds ---
Adv result:3
Loading record A02550
(1, 7180)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0625 " + "l1=0.0625" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 5.5909605 -0.6558888  2.021763  -8.938309 ]]
Iteration 100 of 1000: loss=0.0617 " + "l1=0.0613" + "l2=0.00046 f=-0.495 shape=(1, 9000, 1)
logits [[ 5.52397   -0.6019907  1.9912993 -8.892703 ]]
Iteration 200 of 1000: loss=0.0615 " + "l1=0.061" + "l2=0.000538 f=-0.494 shape=(1, 9000, 1)
logits [[ 5.5095344  -0.58721566  1.9829534  -8.880662  ]]
Iteration 300 of 1000: loss=0.0613 " + "l1=0.0607" + "l2=0.000677 f=-0.493 shape=(1, 9000, 1)
logits [[ 5.4932756 -0.5725597  1.9744203 -8.868007 ]]
Iteration 400 of 1000: loss=0.0612 " + "l1=0.0604" + "l2=0.000802 f=-0.493 shape=(1, 9000, 1)
logits [[ 5.4784064 -0.5593804  1.9669919 -8.857135 ]]
Iteration 500 of 1000: loss=0.0611 " + "l1=0.0601" + "l2=0.000936 f=-0.492 shape=(1, 9000, 1)
logits [[ 5.4649487 -0.5470092  1.9603606 -8.84786  ]]
Iteration 600 of 1000: loss=0.061 " + "l1=0.0599" + "l2=0.0011 f=-0.492 shape=(1, 9000, 1)
logits [[ 5.452682   -0.53518134  1.9541341  -8.839247  ]]
Iteration 700 of 1000: loss=0.0609 " + "l1=0.0597" + "l2=0.0012 f=-0.492 shape=(1, 9000, 1)
logits [[ 5.441649   -0.52461886  1.9486802  -8.831769  ]]
Iteration 800 of 1000: loss=0.0608 " + "l1=0.0595" + "l2=0.00137 f=-0.491 shape=(1, 9000, 1)
logits [[ 5.43114    -0.51462203  1.9435321  -8.825132  ]]
Iteration 900 of 1000: loss=0.0607 " + "l1=0.0592" + "l2=0.00143 f=-0.491 shape=(1, 9000, 1)
logits [[ 5.4208293 -0.5040791  1.9383357 -8.818507 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.625 " + "l1=0.625" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 5.5909605 -0.6558888  2.021763  -8.938309 ]]
Iteration 100 of 1000: loss=0.551 " + "l1=0.511" + "l2=0.0403 f=-0.49 shape=(1, 9000, 1)
logits [[ 4.951997   -0.15482555  1.7427204  -8.500858  ]]
Iteration 200 of 1000: loss=0.517 " + "l1=0.455" + "l2=0.0618 f=-0.492 shape=(1, 9000, 1)
logits [[ 4.609405    0.06076917  1.6033674  -8.241817  ]]
Iteration 300 of 1000: loss=0.488 " + "l1=0.404" + "l2=0.0836 f=-0.502 shape=(1, 9000, 1)
logits [[ 4.2783794   0.23657812  1.4960266  -8.019822  ]]
Iteration 400 of 1000: loss=0.464 " + "l1=0.364" + "l2=0.0993 f=-0.507 shape=(1, 9000, 1)
logits [[ 4.0197935  0.374874   1.4274601 -7.8501945]]
Iteration 500 of 1000: loss=0.444 " + "l1=0.333" + "l2=0.111 f=-0.513 shape=(1, 9000, 1)
logits [[ 3.8044803   0.47531357  1.3718494  -7.704327  ]]
Iteration 600 of 1000: loss=0.429 " + "l1=0.306" + "l2=0.123 f=-0.52 shape=(1, 9000, 1)
logits [[ 3.6206522  0.5633008  1.3254464 -7.5874286]]
Iteration 700 of 1000: loss=0.416 " + "l1=0.286" + "l2=0.13 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.4794788   0.62225676  1.2920123  -7.50063   ]]
Iteration 800 of 1000: loss=0.402 " + "l1=0.268" + "l2=0.133 f=-0.531 shape=(1, 9000, 1)
logits [[ 3.3543026  0.669871   1.2668986 -7.414607 ]]
Iteration 900 of 1000: loss=0.39 " + "l1=0.253" + "l2=0.137 f=-0.537 shape=(1, 9000, 1)
logits [[ 3.244462   0.7109037  1.2358156 -7.3406568]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.25 " + "l1=6.25" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 5.5909605 -0.6558888  2.021763  -8.938309 ]]
Iteration 100 of 1000: loss=1.24 " + "l1=0" + "l2=1.24 f=-0.715 shape=(1, 9000, 1)
logits [[ 1.465202   1.4913038  1.0561824 -6.872784 ]]
Iteration 200 of 1000: loss=0.939 " + "l1=0" + "l2=0.939 f=-0.71 shape=(1, 9000, 1)
logits [[ 1.4559896  1.4569967  1.0251592 -6.779129 ]]
Iteration 300 of 1000: loss=0.806 " + "l1=0" + "l2=0.806 f=-0.712 shape=(1, 9000, 1)
logits [[ 1.4185076  1.4218578  1.0012167 -6.6884856]]
Iteration 400 of 1000: loss=0.717 " + "l1=0.000451" + "l2=0.717 f=-0.705 shape=(1, 9000, 1)
logits [[ 1.4069498  1.406499   0.9843579 -6.6168275]]
Iteration 500 of 1000: loss=0.644 " + "l1=0" + "l2=0.644 f=-0.707 shape=(1, 9000, 1)
logits [[ 1.3783795  1.383421   0.971601  -6.5629315]]
Iteration 600 of 1000: loss=0.598 " + "l1=0" + "l2=0.598 f=-0.731 shape=(1, 9000, 1)
logits [[ 1.2816886   1.3605195   0.95231247 -6.519108  ]]
Iteration 700 of 1000: loss=0.547 " + "l1=0" + "l2=0.547 f=-0.742 shape=(1, 9000, 1)
logits [[ 1.2512665  1.3338163  0.9541841 -6.507985 ]]
Iteration 800 of 1000: loss=0.493 " + "l1=0" + "l2=0.493 f=-0.738 shape=(1, 9000, 1)
logits [[ 1.2848399   1.2933224   0.96799856 -6.497368  ]]
Iteration 900 of 1000: loss=0.466 " + "l1=0" + "l2=0.466 f=-0.744 shape=(1, 9000, 1)
logits [[ 1.2358083   1.2738426   0.98109984 -6.4685445 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.44 " + "l1=3.44" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 5.5909605 -0.6558888  2.021763  -8.938309 ]]
Iteration 100 of 1000: loss=1.13 " + "l1=0.0136" + "l2=1.12 f=-0.705 shape=(1, 9000, 1)
logits [[ 1.5235009  1.4988273  1.0607629 -6.9043016]]
Iteration 200 of 1000: loss=0.812 " + "l1=0.0235" + "l2=0.788 f=-0.685 shape=(1, 9000, 1)
logits [[ 1.5002216  1.4574045  1.0381863 -6.7355623]]
Iteration 300 of 1000: loss=0.669 " + "l1=0" + "l2=0.669 f=-0.69 shape=(1, 9000, 1)
logits [[ 1.4268169  1.4433482  1.0154223 -6.646064 ]]
Iteration 400 of 1000: loss=0.582 " + "l1=0.00279" + "l2=0.579 f=-0.688 shape=(1, 9000, 1)
logits [[ 1.4222995   1.4172271   0.99215883 -6.581837  ]]
Iteration 500 of 1000: loss=0.541 " + "l1=0.0197" + "l2=0.521 f=-0.683 shape=(1, 9000, 1)
logits [[ 1.4286034   1.3927789   0.97796404 -6.53081   ]]
Iteration 600 of 1000: loss=0.494 " + "l1=0" + "l2=0.494 f=-0.703 shape=(1, 9000, 1)
logits [[ 1.3292495   1.3869491   0.94755405 -6.477695  ]]
Iteration 700 of 1000: loss=0.447 " + "l1=0" + "l2=0.447 f=-0.718 shape=(1, 9000, 1)
logits [[ 1.3112175   1.3509213   0.93523717 -6.4697433 ]]
Iteration 800 of 1000: loss=0.406 " + "l1=0.00334" + "l2=0.402 f=-0.725 shape=(1, 9000, 1)
logits [[ 1.3174237   1.3113502   0.95201087 -6.481582  ]]
Iteration 900 of 1000: loss=0.379 " + "l1=0" + "l2=0.379 f=-0.738 shape=(1, 9000, 1)
logits [[ 1.2348874   1.30206     0.96833557 -6.457235  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.03 " + "l1=2.03" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 5.5909605 -0.6558888  2.021763  -8.938309 ]]
Iteration 100 of 1000: loss=1.15 " + "l1=0.621" + "l2=0.527 f=-0.588 shape=(1, 9000, 1)
logits [[ 2.8203523  0.9105731  1.2273887 -7.312132 ]]
Iteration 200 of 1000: loss=0.755 " + "l1=0.0104" + "l2=0.744 f=-0.679 shape=(1, 9000, 1)
logits [[ 1.5018309  1.469938   1.0399892 -6.726991 ]]
Iteration 300 of 1000: loss=0.592 " + "l1=0.00375" + "l2=0.588 f=-0.661 shape=(1, 9000, 1)
logits [[ 1.4923989   1.4808561   0.99755555 -6.6144443 ]]
Iteration 400 of 1000: loss=0.519 " + "l1=0.0111" + "l2=0.508 f=-0.655 shape=(1, 9000, 1)
logits [[ 1.4939901   1.4597925   0.96422493 -6.5387177 ]]
Iteration 500 of 1000: loss=0.461 " + "l1=0" + "l2=0.461 f=-0.659 shape=(1, 9000, 1)
logits [[ 1.4403474   1.4494636   0.94375646 -6.4704566 ]]
Iteration 600 of 1000: loss=0.41 " + "l1=0" + "l2=0.41 f=-0.665 shape=(1, 9000, 1)
logits [[ 1.4209615   1.4257971   0.94835865 -6.456962  ]]
Iteration 700 of 1000: loss=0.369 " + "l1=0" + "l2=0.369 f=-0.68 shape=(1, 9000, 1)
logits [[ 1.3722314   1.3933408   0.95674086 -6.4439535 ]]
Iteration 800 of 1000: loss=0.331 " + "l1=0.00469" + "l2=0.326 f=-0.694 shape=(1, 9000, 1)
logits [[ 1.3563467   1.3419204   0.97178304 -6.4448395 ]]
Iteration 900 of 1000: loss=0.294 " + "l1=0.000912" + "l2=0.293 f=-0.704 shape=(1, 9000, 1)
logits [[ 1.3095934  1.3067861  0.9961873 -6.426969 ]]
--- 307.64950489997864 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0357 " + "l1=0.0357" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 5.5909605 -0.6558888  2.021763  -8.938309 ]]
Iteration 100 of 1000: loss=0.0354 " + "l1=0.0352" + "l2=0.000199 f=-0.501 shape=(1, 9000, 1)
logits [[ 5.5517254 -0.6579657  2.0271466 -8.924483 ]]
Iteration 200 of 1000: loss=0.0354 " + "l1=0.0352" + "l2=0.000183 f=-0.501 shape=(1, 9000, 1)
logits [[ 5.547635  -0.6577141  2.0273454 -8.922996 ]]
Iteration 300 of 1000: loss=0.0353 " + "l1=0.0351" + "l2=0.000219 f=-0.502 shape=(1, 9000, 1)
logits [[ 5.540982  -0.6578556  2.0281665 -8.920548 ]]
Iteration 400 of 1000: loss=0.0353 " + "l1=0.0351" + "l2=0.000285 f=-0.503 shape=(1, 9000, 1)
logits [[ 5.5345917 -0.6580922  2.0292687 -8.918336 ]]
Iteration 500 of 1000: loss=0.0353 " + "l1=0.035" + "l2=0.000332 f=-0.504 shape=(1, 9000, 1)
logits [[ 5.5287285 -0.6583489  2.0305805 -8.916396 ]]
Iteration 600 of 1000: loss=0.0353 " + "l1=0.0349" + "l2=0.000429 f=-0.504 shape=(1, 9000, 1)
logits [[ 5.523511   -0.65870035  2.0320437  -8.914724  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.357 " + "l1=0.357" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 5.5909605 -0.6558888  2.021763  -8.938309 ]]
Iteration 100 of 1000: loss=0.336 " + "l1=0.324" + "l2=0.0114 f=-0.533 shape=(1, 9000, 1)
logits [[ 5.2906475  -0.65564144  2.0485733  -8.815774  ]]
Iteration 200 of 1000: loss=0.327 " + "l1=0.311" + "l2=0.0165 f=-0.549 shape=(1, 9000, 1)
logits [[ 5.161551  -0.6663509  2.0542014 -8.744829 ]]
Iteration 300 of 1000: loss=0.321 " + "l1=0.299" + "l2=0.022 f=-0.566 shape=(1, 9000, 1)
logits [[ 5.0488133 -0.6824516  2.0605729 -8.691938 ]]
Iteration 400 of 1000: loss=0.315 " + "l1=0.289" + "l2=0.0269 f=-0.577 shape=(1, 9000, 1)
logits [[ 4.9543514 -0.6944093  2.0685685 -8.638257 ]]
Iteration 500 of 1000: loss=0.31 " + "l1=0.28" + "l2=0.0307 f=-0.586 shape=(1, 9000, 1)
logits [[ 4.8742704 -0.6926781  2.0770445 -8.6032505]]
Iteration 600 of 1000: loss=0.306 " + "l1=0.273" + "l2=0.0332 f=-0.591 shape=(1, 9000, 1)
logits [[ 4.8192744  -0.69484806  2.0869994  -8.574427  ]]
Iteration 700 of 1000: loss=0.303 " + "l1=0.267" + "l2=0.0351 f=-0.596 shape=(1, 9000, 1)
logits [[ 4.7729354  -0.70215803  2.0982172  -8.551116  ]]
Iteration 800 of 1000: loss=0.298 " + "l1=0.261" + "l2=0.0375 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.719768  -0.7078478  2.1100008 -8.530142 ]]
Iteration 900 of 1000: loss=0.295 " + "l1=0.255" + "l2=0.0396 f=-0.607 shape=(1, 9000, 1)
logits [[ 4.6643605  -0.70939547  2.114753   -8.497884  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.57 " + "l1=3.57" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 5.5909605 -0.6558888  2.021763  -8.938309 ]]
Iteration 100 of 1000: loss=1.17 " + "l1=0.0223" + "l2=1.15 f=-0.847 shape=(1, 9000, 1)
logits [[ 2.1244936  -0.46266037  2.1021564  -7.152276  ]]
Iteration 200 of 1000: loss=0.822 " + "l1=0" + "l2=0.822 f=-0.87 shape=(1, 9000, 1)
logits [[ 2.0574381 -0.4959939  2.0629876 -7.104285 ]]
Iteration 300 of 1000: loss=0.708 " + "l1=0" + "l2=0.708 f=-0.861 shape=(1, 9000, 1)
logits [[ 2.0291257 -0.5141033  2.0478847 -7.006453 ]]
Iteration 400 of 1000: loss=0.627 " + "l1=0.00363" + "l2=0.623 f=-0.827 shape=(1, 9000, 1)
logits [[ 2.0002935  -0.43282664  1.9966606  -6.874047  ]]
Iteration 500 of 1000: loss=0.542 " + "l1=0" + "l2=0.542 f=-0.8 shape=(1, 9000, 1)
logits [[ 2.0023975  -0.35813105  2.0138252  -6.8571687 ]]
Iteration 600 of 1000: loss=0.493 " + "l1=0.00262" + "l2=0.49 f=-0.799 shape=(1, 9000, 1)
logits [[ 2.0444694 -0.3691331  2.0418541 -6.9118843]]
Iteration 700 of 1000: loss=0.46 " + "l1=0.000569" + "l2=0.459 f=-0.796 shape=(1, 9000, 1)
logits [[ 2.0628169 -0.3915463  2.0622478 -6.919181 ]]
Iteration 800 of 1000: loss=0.442 " + "l1=0" + "l2=0.442 f=-0.795 shape=(1, 9000, 1)
logits [[ 2.0438597  -0.41847977  2.0925326  -6.8996854 ]]
Iteration 900 of 1000: loss=0.41 " + "l1=0.0131" + "l2=0.397 f=-0.79 shape=(1, 9000, 1)
logits [[ 2.119207   -0.45741948  2.1060987  -6.9262547 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.96 " + "l1=1.96" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 5.5909605 -0.6558888  2.021763  -8.938309 ]]
Iteration 100 of 1000: loss=1.16 " + "l1=0.659" + "l2=0.505 f=-0.756 shape=(1, 9000, 1)
logits [[ 3.2306929  -0.52551824  2.0318449  -7.7613144 ]]
Iteration 200 of 1000: loss=0.886 " + "l1=0.252" + "l2=0.634 f=-0.793 shape=(1, 9000, 1)
logits [[ 2.502343   -0.48557985  2.0439332  -7.232802  ]]
Iteration 300 of 1000: loss=0.762 " + "l1=0.0833" + "l2=0.679 f=-0.795 shape=(1, 9000, 1)
logits [[ 2.2352188  -0.54790753  2.0838223  -6.9522653 ]]
Iteration 400 of 1000: loss=0.679 " + "l1=0" + "l2=0.679 f=-0.796 shape=(1, 9000, 1)
logits [[ 2.1004777  -0.59796125  2.10961    -6.794723  ]]
Iteration 500 of 1000: loss=0.557 " + "l1=0.00352" + "l2=0.554 f=-0.843 shape=(1, 9000, 1)
logits [[ 2.11599    -0.69965917  2.1095872  -6.8995624 ]]
Iteration 600 of 1000: loss=0.499 " + "l1=0" + "l2=0.499 f=-0.831 shape=(1, 9000, 1)
logits [[ 2.107639  -0.7058967  2.11015   -6.835193 ]]
Iteration 700 of 1000: loss=0.448 " + "l1=0.0106" + "l2=0.437 f=-0.807 shape=(1, 9000, 1)
logits [[ 2.0635724  -0.57515967  2.0443132  -6.760497  ]]
Iteration 800 of 1000: loss=0.379 " + "l1=0" + "l2=0.379 f=-0.795 shape=(1, 9000, 1)
logits [[ 2.01698    -0.43700495  2.0340803  -6.7938275 ]]
Iteration 900 of 1000: loss=0.336 " + "l1=0" + "l2=0.336 f=-0.796 shape=(1, 9000, 1)
logits [[ 2.0655916 -0.4541745  2.0855315 -6.8823357]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.16 " + "l1=1.16" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 5.5909605 -0.6558888  2.021763  -8.938309 ]]
Iteration 100 of 1000: loss=0.894 " + "l1=0.714" + "l2=0.18 f=-0.665 shape=(1, 9000, 1)
logits [[ 4.2355347  -0.63977325  2.03965    -8.295742  ]]
Iteration 200 of 1000: loss=0.778 " + "l1=0.535" + "l2=0.243 f=-0.722 shape=(1, 9000, 1)
logits [[ 3.6970994  -0.65807515  2.0501769  -7.977602  ]]
Iteration 300 of 1000: loss=0.711 " + "l1=0.429" + "l2=0.283 f=-0.738 shape=(1, 9000, 1)
logits [[ 3.401904   -0.68482953  2.0829234  -7.7524962 ]]
Iteration 400 of 1000: loss=0.661 " + "l1=0.342" + "l2=0.319 f=-0.743 shape=(1, 9000, 1)
logits [[ 3.1298175  -0.65072817  2.0780392  -7.5310645 ]]
Iteration 500 of 1000: loss=0.626 " + "l1=0.286" + "l2=0.339 f=-0.742 shape=(1, 9000, 1)
logits [[ 2.9680395 -0.6538234  2.0868685 -7.3675427]]
Iteration 600 of 1000: loss=0.596 " + "l1=0.252" + "l2=0.344 f=-0.744 shape=(1, 9000, 1)
logits [[ 2.8852396 -0.6870484  2.1106865 -7.284933 ]]
Iteration 700 of 1000: loss=0.56 " + "l1=0.208" + "l2=0.352 f=-0.739 shape=(1, 9000, 1)
logits [[ 2.7751617  -0.68456626  2.1345463  -7.180439  ]]
Iteration 800 of 1000: loss=0.521 " + "l1=0.164" + "l2=0.357 f=-0.747 shape=(1, 9000, 1)
logits [[ 2.668844  -0.7477346  2.163774  -7.071147 ]]
Iteration 900 of 1000: loss=0.448 " + "l1=0.062" + "l2=0.386 f=-0.811 shape=(1, 9000, 1)
logits [[ 2.3620732 -0.7815506  2.1714041 -6.9948287]]
--- 286.05537390708923 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.145 " + "l1=0.145" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 5.5909605 -0.6558888  2.021763  -8.938309 ]]
Iteration 100 of 1000: loss=0.144 " + "l1=0.144" + "l2=0.000618 f=-0.493 shape=(1, 9000, 1)
logits [[ 5.510219  -0.6267363  1.9866012 -8.8421335]]
Iteration 200 of 1000: loss=0.144 " + "l1=0.143" + "l2=0.00075 f=-0.492 shape=(1, 9000, 1)
logits [[ 5.4896045 -0.6191195  1.9774462 -8.817874 ]]
Iteration 300 of 1000: loss=0.144 " + "l1=0.143" + "l2=0.000991 f=-0.492 shape=(1, 9000, 1)
logits [[ 5.467166  -0.611129   1.9674841 -8.791627 ]]
Iteration 400 of 1000: loss=0.143 " + "l1=0.142" + "l2=0.00125 f=-0.492 shape=(1, 9000, 1)
logits [[ 5.4467583  -0.60395616  1.9584899  -8.768249  ]]
Iteration 500 of 1000: loss=0.143 " + "l1=0.142" + "l2=0.00143 f=-0.491 shape=(1, 9000, 1)
logits [[ 5.4295573 -0.5974983  1.9509298 -8.748486 ]]
Iteration 600 of 1000: loss=0.143 " + "l1=0.141" + "l2=0.00161 f=-0.491 shape=(1, 9000, 1)
logits [[ 5.414626  -0.591808   1.9444612 -8.731531 ]]
Iteration 700 of 1000: loss=0.143 " + "l1=0.141" + "l2=0.00184 f=-0.491 shape=(1, 9000, 1)
logits [[ 5.4011445 -0.5867616  1.9387575 -8.716263 ]]
Iteration 800 of 1000: loss=0.143 " + "l1=0.141" + "l2=0.00194 f=-0.49 shape=(1, 9000, 1)
logits [[ 5.3886604 -0.5815839  1.9334203 -8.701884 ]]
Iteration 900 of 1000: loss=0.143 " + "l1=0.141" + "l2=0.00217 f=-0.49 shape=(1, 9000, 1)
logits [[ 5.3769145 -0.576362   1.9283731 -8.688131 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.45 " + "l1=1.45" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 5.5909605 -0.6558888  2.021763  -8.938309 ]]
Iteration 100 of 1000: loss=1.34 " + "l1=1.27" + "l2=0.0679 f=-0.492 shape=(1, 9000, 1)
logits [[ 4.704582  -0.352076   1.6720625 -7.9914403]]
Iteration 200 of 1000: loss=1.28 " + "l1=1.16" + "l2=0.114 f=-0.489 shape=(1, 9000, 1)
logits [[ 4.1804047  -0.17551559  1.475526   -7.437821  ]]
Iteration 300 of 1000: loss=1.23 " + "l1=1.08" + "l2=0.146 f=-0.482 shape=(1, 9000, 1)
logits [[ 3.8125744  -0.05702304  1.3243586  -7.0069175 ]]
Iteration 400 of 1000: loss=1.18 " + "l1=1.01" + "l2=0.174 f=-0.472 shape=(1, 9000, 1)
logits [[ 3.4906561   0.03388286  1.1850681  -6.5974503 ]]
Iteration 500 of 1000: loss=1.14 " + "l1=0.952" + "l2=0.191 f=-0.472 shape=(1, 9000, 1)
logits [[ 3.234372    0.08421476  1.0751957  -6.280767  ]]
Iteration 600 of 1000: loss=1.1 " + "l1=0.9" + "l2=0.205 f=-0.478 shape=(1, 9000, 1)
logits [[ 3.0097082   0.10010394  0.9676985  -5.99006   ]]
Iteration 700 of 1000: loss=1.07 " + "l1=0.839" + "l2=0.226 f=-0.492 shape=(1, 9000, 1)
logits [[ 2.7348065   0.09766281  0.8536278  -5.6544294 ]]
Iteration 800 of 1000: loss=1.03 " + "l1=0.784" + "l2=0.245 f=-0.502 shape=(1, 9000, 1)
logits [[ 2.4800816   0.11577038  0.76057744 -5.363817  ]]
Iteration 900 of 1000: loss=0.995 " + "l1=0.729" + "l2=0.265 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.2219276   0.11987233  0.6909238  -5.0703225 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=14.5 " + "l1=14.5" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 5.5909605 -0.6558888  2.021763  -8.938309 ]]
Iteration 100 of 1000: loss=6.18 " + "l1=3.1" + "l2=3.08 f=-0.545 shape=(1, 9000, 1)
logits [[ 0.2439628   0.22767167  0.20680997 -2.857908  ]]
Iteration 200 of 1000: loss=3.85 " + "l1=0.322" + "l2=3.53 f=-0.358 shape=(1, 9000, 1)
logits [[-0.27899244 -0.2763428  -0.27907133 -0.5988174 ]]
Iteration 300 of 1000: loss=2.77 " + "l1=0.00727" + "l2=2.76 f=-0.368 shape=(1, 9000, 1)
logits [[-0.37554866 -0.35635224 -0.37783834 -0.36362588]]
Iteration 400 of 1000: loss=2.37 " + "l1=0.000315" + "l2=2.37 f=-0.402 shape=(1, 9000, 1)
logits [[-0.3966361  -0.41497448 -0.39824504 -0.39695084]]
Iteration 500 of 1000: loss=2.17 " + "l1=0" + "l2=2.17 f=-0.426 shape=(1, 9000, 1)
logits [[-0.47414097 -0.41026565 -0.43005225 -0.38805372]]
Iteration 600 of 1000: loss=1.96 " + "l1=0.0226" + "l2=1.94 f=-0.444 shape=(1, 9000, 1)
logits [[-0.43512353 -0.45709428 -0.43072233 -0.45330197]]
Iteration 700 of 1000: loss=1.81 " + "l1=0.0188" + "l2=1.79 f=-0.447 shape=(1, 9000, 1)
logits [[-0.42237362 -0.49248916 -0.4310794  -0.44118777]]
Iteration 800 of 1000: loss=1.67 " + "l1=0" + "l2=1.67 f=-0.448 shape=(1, 9000, 1)
logits [[-0.43596712 -0.49423397 -0.43905094 -0.42443043]]
Iteration 900 of 1000: loss=1.56 " + "l1=0" + "l2=1.56 f=-0.444 shape=(1, 9000, 1)
logits [[-0.41455567 -0.5138513  -0.44057998 -0.40694162]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.99 " + "l1=7.99" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 5.5909605 -0.6558888  2.021763  -8.938309 ]]
Iteration 100 of 1000: loss=4.61 " + "l1=2.89" + "l2=1.73 f=-0.607 shape=(1, 9000, 1)
logits [[ 0.7784718   0.7285372   0.53388447 -4.4681406 ]]
Iteration 200 of 1000: loss=3.4 " + "l1=1.73" + "l2=1.67 f=-0.551 shape=(1, 9000, 1)
logits [[ 0.26559275  0.22575162  0.1854743  -2.8811061 ]]
Iteration 300 of 1000: loss=2.46 " + "l1=0.679" + "l2=1.78 f=-0.463 shape=(1, 9000, 1)
logits [[-0.15298487 -0.15161602 -0.16285472 -1.3865361 ]]
Iteration 400 of 1000: loss=1.8 " + "l1=0.00311" + "l2=1.8 f=-0.398 shape=(1, 9000, 1)
logits [[-0.40323985 -0.39580932 -0.3941557  -0.3998109 ]]
Iteration 500 of 1000: loss=1.51 " + "l1=0" + "l2=1.51 f=-0.43 shape=(1, 9000, 1)
logits [[-0.43985346 -0.42735273 -0.43907255 -0.4142678 ]]
Iteration 600 of 1000: loss=1.32 " + "l1=0.00791" + "l2=1.31 f=-0.444 shape=(1, 9000, 1)
logits [[-0.4338788  -0.44690597 -0.44521004 -0.44825995]]
Iteration 700 of 1000: loss=1.18 " + "l1=0" + "l2=1.18 f=-0.445 shape=(1, 9000, 1)
logits [[-0.46300796 -0.4476038  -0.4473562  -0.42348218]]
Iteration 800 of 1000: loss=1.09 " + "l1=0.0158" + "l2=1.07 f=-0.441 shape=(1, 9000, 1)
logits [[-0.41926453 -0.46178412 -0.4369783  -0.4479069 ]]
Iteration 900 of 1000: loss=0.997 " + "l1=0" + "l2=0.997 f=-0.434 shape=(1, 9000, 1)
logits [[-0.4317604  -0.45094395 -0.43038535 -0.4238125 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.72 " + "l1=4.72" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 5.5909605 -0.6558888  2.021763  -8.938309 ]]
Iteration 100 of 1000: loss=3.38 " + "l1=2.68" + "l2=0.699 f=-0.523 shape=(1, 9000, 1)
logits [[ 2.4187236   0.33619526  0.9898039  -5.836291  ]]
Iteration 200 of 1000: loss=2.77 " + "l1=1.8" + "l2=0.962 f=-0.566 shape=(1, 9000, 1)
logits [[ 1.0250584  0.6967657  0.5377262 -4.524145 ]]
Iteration 300 of 1000: loss=2.34 " + "l1=1.32" + "l2=1.02 f=-0.553 shape=(1, 9000, 1)
logits [[ 0.5527875   0.5428034   0.20803325 -3.5148056 ]]
Iteration 400 of 1000: loss=1.9 " + "l1=0.806" + "l2=1.1 f=-0.507 shape=(1, 9000, 1)
logits [[ 0.12284657  0.12047117  0.08688404 -2.3585236 ]]
Iteration 500 of 1000: loss=1.57 " + "l1=0.431" + "l2=1.14 f=-0.455 shape=(1, 9000, 1)
logits [[-0.11200301 -0.15091667 -0.11960294 -1.4391987 ]]
Iteration 600 of 1000: loss=1.33 " + "l1=0.157" + "l2=1.17 f=-0.431 shape=(1, 9000, 1)
logits [[-0.31840414 -0.30666092 -0.3082448  -0.7900829 ]]
Iteration 700 of 1000: loss=1.14 " + "l1=0.00332" + "l2=1.14 f=-0.418 shape=(1, 9000, 1)
logits [[-0.409829   -0.42581996 -0.4172323  -0.4200529 ]]
Iteration 800 of 1000: loss=1.04 " + "l1=0.00104" + "l2=1.03 f=-0.422 shape=(1, 9000, 1)
logits [[-0.4239778  -0.4292931  -0.41505623 -0.41825822]]
Iteration 900 of 1000: loss=0.952 " + "l1=0.00503" + "l2=0.947 f=-0.427 shape=(1, 9000, 1)
logits [[-0.4234414  -0.4354567  -0.41582105 -0.4312865 ]]
--- 311.01968240737915 seconds ---
Adv result:3
Loading record A02559
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0273 " + "l1=0.0273" + "l2=0 f=-0.404 shape=(1, 9000, 1)
logits [[ 1.6646081 -1.068087   1.4410626 -3.6553957]]
Iteration 100 of 1000: loss=0.0267 " + "l1=0.0264" + "l2=0.000333 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.6167808 -1.0186012  1.403647  -3.6096103]]
Iteration 200 of 1000: loss=0.0264 " + "l1=0.026" + "l2=0.000402 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.6049755  -0.99919885  1.3885573  -3.5955925 ]]
Iteration 300 of 1000: loss=0.0262 " + "l1=0.0257" + "l2=0.000563 f=-0.398 shape=(1, 9000, 1)
logits [[ 1.5913976  -0.97524154  1.3702056  -3.5788994 ]]
Iteration 400 of 1000: loss=0.0261 " + "l1=0.0253" + "l2=0.000744 f=-0.395 shape=(1, 9000, 1)
logits [[ 1.5807813  -0.94996905  1.3513751  -3.5634394 ]]
Iteration 500 of 1000: loss=0.0259 " + "l1=0.025" + "l2=0.000933 f=-0.392 shape=(1, 9000, 1)
logits [[ 1.571712  -0.9234216  1.3320477 -3.5482383]]
Iteration 600 of 1000: loss=0.0258 " + "l1=0.0246" + "l2=0.00117 f=-0.389 shape=(1, 9000, 1)
logits [[ 1.5628371 -0.8991226  1.3145984 -3.5345328]]
Iteration 700 of 1000: loss=0.0257 " + "l1=0.0243" + "l2=0.00143 f=-0.386 shape=(1, 9000, 1)
logits [[ 1.5548267  -0.87551945  1.2974321  -3.5212758 ]]
Iteration 800 of 1000: loss=0.0257 " + "l1=0.0239" + "l2=0.00175 f=-0.381 shape=(1, 9000, 1)
logits [[ 1.5475891  -0.84349406  1.2747288  -3.5039012 ]]
Iteration 900 of 1000: loss=0.0255 " + "l1=0.0236" + "l2=0.00197 f=-0.377 shape=(1, 9000, 1)
logits [[ 1.5409333 -0.8161255  1.2552923 -3.4883218]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.273 " + "l1=0.273" + "l2=0 f=-0.404 shape=(1, 9000, 1)
logits [[ 1.6646081 -1.068087   1.4410626 -3.6553957]]
Iteration 100 of 1000: loss=0.207 " + "l1=0.182" + "l2=0.0249 f=-0.349 shape=(1, 9000, 1)
logits [[ 1.2982851 -0.5180064  1.0495857 -3.2258263]]
Iteration 200 of 1000: loss=0.177 " + "l1=0.139" + "l2=0.0372 f=-0.336 shape=(1, 9000, 1)
logits [[ 1.0847819  -0.3094533   0.90718454 -3.0256639 ]]
Iteration 300 of 1000: loss=0.153 " + "l1=0.101" + "l2=0.0521 f=-0.339 shape=(1, 9000, 1)
logits [[ 0.86385286 -0.14941613  0.79982334 -2.86887   ]]
Iteration 400 of 1000: loss=0.137 " + "l1=0.0765" + "l2=0.0602 f=-0.34 shape=(1, 9000, 1)
logits [[ 0.7268672  -0.03781778  0.72685057 -2.7747443 ]]
Iteration 500 of 1000: loss=0.124 " + "l1=0.0643" + "l2=0.0601 f=-0.332 shape=(1, 9000, 1)
logits [[ 0.67889965  0.03638808  0.67625433 -2.719097  ]]
Iteration 600 of 1000: loss=0.115 " + "l1=0.0521" + "l2=0.0629 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.62796015  0.10716902  0.6273163  -2.6677718 ]]
Iteration 700 of 1000: loss=0.106 " + "l1=0.045" + "l2=0.0609 f=-0.328 shape=(1, 9000, 1)
logits [[ 0.5953394   0.14598092  0.5962922  -2.647715  ]]
Iteration 800 of 1000: loss=0.0962 " + "l1=0.0357" + "l2=0.0605 f=-0.322 shape=(1, 9000, 1)
logits [[ 0.563275    0.20633547  0.561835   -2.6199768 ]]
Iteration 900 of 1000: loss=0.0867 " + "l1=0.0284" + "l2=0.0583 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.5313283   0.25216433  0.5360898  -2.5835423 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.73 " + "l1=2.73" + "l2=0 f=-0.404 shape=(1, 9000, 1)
logits [[ 1.6646081 -1.068087   1.4410626 -3.6553957]]
Iteration 100 of 1000: loss=0.358 " + "l1=0" + "l2=0.358 f=-0.298 shape=(1, 9000, 1)
logits [[ 0.41570273  0.42390004  0.41621503 -2.4464662 ]]
Iteration 200 of 1000: loss=0.234 " + "l1=0" + "l2=0.234 f=-0.321 shape=(1, 9000, 1)
logits [[ 0.39659622  0.44977897  0.42499134 -2.5553238 ]]
Iteration 300 of 1000: loss=0.177 " + "l1=0" + "l2=0.177 f=-0.33 shape=(1, 9000, 1)
logits [[ 0.40474412  0.44042164  0.43321484 -2.5982845 ]]
Iteration 400 of 1000: loss=0.15 " + "l1=0" + "l2=0.15 f=-0.334 shape=(1, 9000, 1)
logits [[ 0.40287307  0.44133556  0.43049788 -2.6123073 ]]
Iteration 500 of 1000: loss=0.129 " + "l1=0" + "l2=0.129 f=-0.343 shape=(1, 9000, 1)
logits [[ 0.37751     0.4405669   0.43084124 -2.6199718 ]]
Iteration 600 of 1000: loss=0.115 " + "l1=0" + "l2=0.115 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.37242916  0.43431222  0.42959723 -2.6253054 ]]
Iteration 700 of 1000: loss=0.106 " + "l1=0" + "l2=0.106 f=-0.345 shape=(1, 9000, 1)
logits [[ 0.39696845  0.43901157  0.41754383 -2.634459  ]]
Iteration 800 of 1000: loss=0.0973 " + "l1=0" + "l2=0.0973 f=-0.343 shape=(1, 9000, 1)
logits [[ 0.41980502  0.43006885  0.41102043 -2.6325297 ]]
Iteration 900 of 1000: loss=0.0977 " + "l1=0" + "l2=0.0977 f=-0.354 shape=(1, 9000, 1)
logits [[ 0.31997582  0.45256376  0.40652376 -2.593262  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.5 " + "l1=1.5" + "l2=0 f=-0.404 shape=(1, 9000, 1)
logits [[ 1.6646081 -1.068087   1.4410626 -3.6553957]]
Iteration 100 of 1000: loss=0.355 " + "l1=0.0658" + "l2=0.289 f=-0.297 shape=(1, 9000, 1)
logits [[ 0.4723638   0.36433718  0.4840602  -2.5102878 ]]
Iteration 200 of 1000: loss=0.182 " + "l1=0.00123" + "l2=0.181 f=-0.309 shape=(1, 9000, 1)
logits [[ 0.4336079   0.44921196  0.45144808 -2.5706859 ]]
Iteration 300 of 1000: loss=0.142 " + "l1=0.00182" + "l2=0.14 f=-0.312 shape=(1, 9000, 1)
logits [[ 0.44941968  0.44615766  0.44947332 -2.592482  ]]
Iteration 400 of 1000: loss=0.125 " + "l1=0" + "l2=0.125 f=-0.314 shape=(1, 9000, 1)
logits [[ 0.4285371   0.45113176  0.4423734  -2.5790637 ]]
Iteration 500 of 1000: loss=0.109 " + "l1=0.000411" + "l2=0.109 f=-0.311 shape=(1, 9000, 1)
logits [[ 0.4365796   0.44164535  0.44239277 -2.5653968 ]]
Iteration 600 of 1000: loss=0.0996 " + "l1=0" + "l2=0.0996 f=-0.313 shape=(1, 9000, 1)
logits [[ 0.42184433  0.44563013  0.43541583 -2.5529191 ]]
Iteration 700 of 1000: loss=0.0919 " + "l1=0" + "l2=0.0919 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.40433237  0.4433384   0.43584892 -2.5482504 ]]
Iteration 800 of 1000: loss=0.0855 " + "l1=0" + "l2=0.0855 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.417655    0.43821764  0.43075013 -2.5507903 ]]
Iteration 900 of 1000: loss=0.0774 " + "l1=0" + "l2=0.0774 f=-0.318 shape=(1, 9000, 1)
logits [[ 0.4099984  0.4336868  0.4317678 -2.5469356]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.888 " + "l1=0.888" + "l2=0 f=-0.404 shape=(1, 9000, 1)
logits [[ 1.6646081 -1.068087   1.4410626 -3.6553957]]
Iteration 100 of 1000: loss=0.356 " + "l1=0.195" + "l2=0.162 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.6588833   0.06317193  0.66305524 -2.6891162 ]]
Iteration 200 of 1000: loss=0.213 " + "l1=0.0509" + "l2=0.162 f=-0.313 shape=(1, 9000, 1)
logits [[ 0.5010662   0.3444503   0.49993184 -2.5957768 ]]
Iteration 300 of 1000: loss=0.146 " + "l1=0" + "l2=0.146 f=-0.312 shape=(1, 9000, 1)
logits [[ 0.43517226  0.4494097   0.44914216 -2.5812545 ]]
Iteration 400 of 1000: loss=0.124 " + "l1=0" + "l2=0.124 f=-0.312 shape=(1, 9000, 1)
logits [[ 0.4429988   0.44845676  0.44203806 -2.5818892 ]]
Iteration 500 of 1000: loss=0.105 " + "l1=8.08e-05" + "l2=0.105 f=-0.314 shape=(1, 9000, 1)
logits [[ 0.4284871   0.4448194   0.44506797 -2.5752554 ]]
Iteration 600 of 1000: loss=0.0939 " + "l1=0.00013" + "l2=0.0938 f=-0.315 shape=(1, 9000, 1)
logits [[ 0.44461873  0.44421962  0.44118702 -2.5900934 ]]
Iteration 700 of 1000: loss=0.0857 " + "l1=0" + "l2=0.0857 f=-0.319 shape=(1, 9000, 1)
logits [[ 0.4268349   0.44672456  0.43817014 -2.5877306 ]]
Iteration 800 of 1000: loss=0.076 " + "l1=0" + "l2=0.076 f=-0.319 shape=(1, 9000, 1)
logits [[ 0.44005302  0.44007033  0.4353421  -2.5921974 ]]
Iteration 900 of 1000: loss=0.0693 " + "l1=0.00112" + "l2=0.0682 f=-0.322 shape=(1, 9000, 1)
logits [[ 0.41485563  0.433517    0.43697146 -2.5740304 ]]
--- 305.2874667644501 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00224 " + "l1=0.00224" + "l2=0 f=-0.404 shape=(1, 9000, 1)
logits [[ 1.6646081 -1.068087   1.4410626 -3.6553957]]
Iteration 100 of 1000: loss=0.002 " + "l1=0.00183" + "l2=0.000165 f=-0.41 shape=(1, 9000, 1)
logits [[ 1.6337682 -1.081704   1.4504178 -3.640771 ]]
Iteration 200 of 1000: loss=0.00193 " + "l1=0.00176" + "l2=0.000167 f=-0.411 shape=(1, 9000, 1)
logits [[ 1.6302614 -1.0873054  1.4543978 -3.640667 ]]
Iteration 300 of 1000: loss=0.00187 " + "l1=0.00166" + "l2=0.000217 f=-0.412 shape=(1, 9000, 1)
logits [[ 1.624867  -1.0941569  1.4591411 -3.6395118]]
Iteration 400 of 1000: loss=0.00182 " + "l1=0.00155" + "l2=0.000273 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.6191988 -1.1015381  1.4642706 -3.6382809]]
Iteration 500 of 1000: loss=0.0018 " + "l1=0.00145" + "l2=0.000357 f=-0.416 shape=(1, 9000, 1)
logits [[ 1.613862  -1.1084505  1.4691261 -3.6370974]]
Iteration 600 of 1000: loss=0.00179 " + "l1=0.00136" + "l2=0.000426 f=-0.417 shape=(1, 9000, 1)
logits [[ 1.6091242 -1.114073   1.4730932 -3.6359012]]
Iteration 700 of 1000: loss=0.0018 " + "l1=0.00128" + "l2=0.000514 f=-0.418 shape=(1, 9000, 1)
logits [[ 1.6047815 -1.1186372  1.476314  -3.6346352]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0224 " + "l1=0.0224" + "l2=0 f=-0.404 shape=(1, 9000, 1)
logits [[ 1.6646081 -1.068087   1.4410626 -3.6553957]]
Iteration 100 of 1000: loss=0.00455 " + "l1=1.4e-05" + "l2=0.00454 f=-0.432 shape=(1, 9000, 1)
logits [[ 1.4954759 -1.1374846  1.4953357 -3.5799346]]
Iteration 200 of 1000: loss=0.00305 " + "l1=0" + "l2=0.00305 f=-0.433 shape=(1, 9000, 1)
logits [[ 1.5010519 -1.1488966  1.5015692 -3.585624 ]]
Iteration 300 of 1000: loss=0.00257 " + "l1=0" + "l2=0.00257 f=-0.434 shape=(1, 9000, 1)
logits [[ 1.5048091 -1.1561831  1.506035  -3.5895443]]
Iteration 400 of 1000: loss=0.00222 " + "l1=0" + "l2=0.00222 f=-0.434 shape=(1, 9000, 1)
logits [[ 1.5094705 -1.1618658  1.5095689 -3.5941904]]
Iteration 500 of 1000: loss=0.00215 " + "l1=9.45e-05" + "l2=0.00206 f=-0.435 shape=(1, 9000, 1)
logits [[ 1.5135115 -1.166292   1.5125667 -3.5979974]]
Iteration 600 of 1000: loss=0.00206 " + "l1=0" + "l2=0.00206 f=-0.435 shape=(1, 9000, 1)
logits [[ 1.5105835 -1.1696533  1.5153118 -3.5980043]]
Iteration 700 of 1000: loss=0.00215 " + "l1=0" + "l2=0.00215 f=-0.435 shape=(1, 9000, 1)
logits [[ 1.5153176 -1.1716328  1.5167595 -3.6014416]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0123 " + "l1=0.0123" + "l2=0 f=-0.404 shape=(1, 9000, 1)
logits [[ 1.6646081 -1.068087   1.4410626 -3.6553957]]
Iteration 100 of 1000: loss=0.00591 " + "l1=0.00339" + "l2=0.00253 f=-0.425 shape=(1, 9000, 1)
logits [[ 1.5450438 -1.1251947  1.4834559 -3.6032515]]
Iteration 200 of 1000: loss=0.00338 " + "l1=3.84e-05" + "l2=0.00335 f=-0.433 shape=(1, 9000, 1)
logits [[ 1.5014522 -1.147515   1.5007535 -3.5853443]]
Iteration 300 of 1000: loss=0.00264 " + "l1=1.86e-05" + "l2=0.00262 f=-0.433 shape=(1, 9000, 1)
logits [[ 1.5055403 -1.1550684  1.505202  -3.5895736]]
Iteration 400 of 1000: loss=0.00231 " + "l1=0" + "l2=0.00231 f=-0.434 shape=(1, 9000, 1)
logits [[ 1.508543  -1.1609713  1.508972  -3.5934434]]
Iteration 500 of 1000: loss=0.00211 " + "l1=1.98e-06" + "l2=0.00211 f=-0.435 shape=(1, 9000, 1)
logits [[ 1.5118912 -1.165223   1.5118552 -3.5969706]]
Iteration 600 of 1000: loss=0.00202 " + "l1=5.25e-08" + "l2=0.00202 f=-0.435 shape=(1, 9000, 1)
logits [[ 1.514238  -1.1685237  1.514237  -3.599509 ]]
Iteration 700 of 1000: loss=0.00205 " + "l1=0" + "l2=0.00205 f=-0.435 shape=(1, 9000, 1)
logits [[ 1.5147752 -1.1709926  1.5162538 -3.601015 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00727 " + "l1=0.00727" + "l2=0 f=-0.404 shape=(1, 9000, 1)
logits [[ 1.6646081 -1.068087   1.4410626 -3.6553957]]
Iteration 100 of 1000: loss=0.00489 " + "l1=0.00385" + "l2=0.00104 f=-0.418 shape=(1, 9000, 1)
logits [[ 1.5889242 -1.1081089  1.4703294 -3.6230664]]
Iteration 200 of 1000: loss=0.00394 " + "l1=0.00253" + "l2=0.00142 f=-0.424 shape=(1, 9000, 1)
logits [[ 1.5623266 -1.1283504  1.4846224 -3.6131704]]
Iteration 300 of 1000: loss=0.00324 " + "l1=0.00141" + "l2=0.00183 f=-0.428 shape=(1, 9000, 1)
logits [[ 1.538395  -1.1428243  1.494948  -3.6028483]]
Iteration 400 of 1000: loss=0.00268 " + "l1=0.000403" + "l2=0.00228 f=-0.432 shape=(1, 9000, 1)
logits [[ 1.5168421 -1.1550242  1.5044549 -3.5949917]]
Iteration 500 of 1000: loss=0.00223 " + "l1=5.5e-06" + "l2=0.00223 f=-0.434 shape=(1, 9000, 1)
logits [[ 1.5106331 -1.1635662  1.510464  -3.5945644]]
Iteration 600 of 1000: loss=0.00213 " + "l1=0" + "l2=0.00213 f=-0.435 shape=(1, 9000, 1)
logits [[ 1.5129998 -1.1674201  1.5130564 -3.5975552]]
Iteration 700 of 1000: loss=0.00201 " + "l1=0" + "l2=0.00201 f=-0.435 shape=(1, 9000, 1)
logits [[ 1.5148603 -1.1698872  1.5148953 -3.5997202]]
Iteration 800 of 1000: loss=0.00197 " + "l1=0" + "l2=0.00197 f=-0.435 shape=(1, 9000, 1)
logits [[ 1.5164199 -1.1720679  1.5166091 -3.601632 ]]
Iteration 900 of 1000: loss=0.00197 " + "l1=2.32e-06" + "l2=0.00197 f=-0.435 shape=(1, 9000, 1)
logits [[ 1.517716  -1.1734437  1.5176448 -3.6029158]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00475 " + "l1=0.00475" + "l2=0 f=-0.404 shape=(1, 9000, 1)
logits [[ 1.6646081 -1.068087   1.4410626 -3.6553957]]
Iteration 100 of 1000: loss=0.00372 " + "l1=0.00322" + "l2=0.000493 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.6112326 -1.0939581  1.4595282 -3.6315808]]
Iteration 200 of 1000: loss=0.00331 " + "l1=0.00267" + "l2=0.000643 f=-0.417 shape=(1, 9000, 1)
logits [[ 1.5960618 -1.10954    1.4706064 -3.627116 ]]
Iteration 300 of 1000: loss=0.00299 " + "l1=0.00215" + "l2=0.000842 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.5811002 -1.1228876  1.4800086 -3.622052 ]]
Iteration 400 of 1000: loss=0.00275 " + "l1=0.00172" + "l2=0.00103 f=-0.424 shape=(1, 9000, 1)
logits [[ 1.5683031 -1.1332725  1.4873304 -3.6172814]]
Iteration 500 of 1000: loss=0.00258 " + "l1=0.00137" + "l2=0.00121 f=-0.426 shape=(1, 9000, 1)
logits [[ 1.5577409 -1.1413116  1.4931455 -3.6134136]]
Iteration 600 of 1000: loss=0.00241 " + "l1=0.00103" + "l2=0.00138 f=-0.428 shape=(1, 9000, 1)
logits [[ 1.5476573 -1.1493641  1.498967  -3.6098592]]
Iteration 700 of 1000: loss=0.0023 " + "l1=0.000718" + "l2=0.00158 f=-0.43 shape=(1, 9000, 1)
logits [[ 1.5387735 -1.1574377  1.5050071 -3.6076548]]
Iteration 800 of 1000: loss=0.00224 " + "l1=0.000461" + "l2=0.00178 f=-0.432 shape=(1, 9000, 1)
logits [[ 1.5317737 -1.164105   1.5100797 -3.605938 ]]
Iteration 900 of 1000: loss=0.0021 " + "l1=0.000247" + "l2=0.00186 f=-0.433 shape=(1, 9000, 1)
logits [[ 1.5255721 -1.169164   1.513945  -3.6041234]]
--- 258.08302664756775 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0532 " + "l1=0.0532" + "l2=0 f=-0.404 shape=(1, 9000, 1)
logits [[ 1.6646081 -1.068087   1.4410626 -3.6553957]]
Iteration 100 of 1000: loss=0.0523 " + "l1=0.0518" + "l2=0.000492 f=-0.403 shape=(1, 9000, 1)
logits [[ 1.6007763 -1.0445276  1.410168  -3.577416 ]]
Iteration 200 of 1000: loss=0.052 " + "l1=0.0514" + "l2=0.000596 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.5827246 -1.0357971  1.3997546 -3.555751 ]]
Iteration 300 of 1000: loss=0.0518 " + "l1=0.051" + "l2=0.000795 f=-0.401 shape=(1, 9000, 1)
logits [[ 1.5643592 -1.0260693  1.3883334 -3.5323133]]
Iteration 400 of 1000: loss=0.0516 " + "l1=0.0506" + "l2=0.000985 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.5475342 -1.0165997  1.3772632 -3.5100794]]
Iteration 500 of 1000: loss=0.0514 " + "l1=0.0502" + "l2=0.00118 f=-0.399 shape=(1, 9000, 1)
logits [[ 1.5323191 -1.0082012  1.367287  -3.4894018]]
Iteration 600 of 1000: loss=0.0513 " + "l1=0.0499" + "l2=0.00133 f=-0.399 shape=(1, 9000, 1)
logits [[ 1.5199982 -1.0023668  1.3598148 -3.4718468]]
Iteration 700 of 1000: loss=0.0511 " + "l1=0.0497" + "l2=0.00148 f=-0.398 shape=(1, 9000, 1)
logits [[ 1.5094041 -0.9977322  1.3535292 -3.456627 ]]
Iteration 800 of 1000: loss=0.0511 " + "l1=0.0494" + "l2=0.00167 f=-0.397 shape=(1, 9000, 1)
logits [[ 1.4993448 -0.993622   1.3478143 -3.4425325]]
Iteration 900 of 1000: loss=0.051 " + "l1=0.0492" + "l2=0.00182 f=-0.397 shape=(1, 9000, 1)
logits [[ 1.4904287  -0.98963946  1.3423415  -3.4293509 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.532 " + "l1=0.532" + "l2=0 f=-0.404 shape=(1, 9000, 1)
logits [[ 1.6646081 -1.068087   1.4410626 -3.6553957]]
Iteration 100 of 1000: loss=0.453 " + "l1=0.419" + "l2=0.0336 f=-0.383 shape=(1, 9000, 1)
logits [[ 1.1673169  -0.83935434  1.1670256  -3.0255904 ]]
Iteration 200 of 1000: loss=0.41 " + "l1=0.357" + "l2=0.0525 f=-0.338 shape=(1, 9000, 1)
logits [[ 0.9313126 -0.5701526  0.9291584 -2.641405 ]]
Iteration 300 of 1000: loss=0.379 " + "l1=0.314" + "l2=0.0649 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.7816796  -0.41773224  0.78086823 -2.3617914 ]]
Iteration 400 of 1000: loss=0.357 " + "l1=0.282" + "l2=0.0747 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.67235017 -0.32668346  0.6756929  -2.1456113 ]]
Iteration 500 of 1000: loss=0.334 " + "l1=0.255" + "l2=0.0797 f=-0.263 shape=(1, 9000, 1)
logits [[ 0.5768814  -0.23857515  0.5765025  -1.9686539 ]]
Iteration 600 of 1000: loss=0.321 " + "l1=0.24" + "l2=0.0807 f=-0.254 shape=(1, 9000, 1)
logits [[ 0.5283773  -0.20130818  0.5304275  -1.8742535 ]]
Iteration 700 of 1000: loss=0.308 " + "l1=0.229" + "l2=0.0797 f=-0.247 shape=(1, 9000, 1)
logits [[ 0.4887953  -0.1701612   0.48930857 -1.7967299 ]]
Iteration 800 of 1000: loss=0.294 " + "l1=0.217" + "l2=0.0778 f=-0.24 shape=(1, 9000, 1)
logits [[ 0.44750592 -0.14215912  0.45154968 -1.7150095 ]]
Iteration 900 of 1000: loss=0.281 " + "l1=0.206" + "l2=0.0744 f=-0.227 shape=(1, 9000, 1)
logits [[ 0.42114496 -0.11611374  0.42584044 -1.6389223 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.32 " + "l1=5.32" + "l2=0 f=-0.404 shape=(1, 9000, 1)
logits [[ 1.6646081 -1.068087   1.4410626 -3.6553957]]
Iteration 100 of 1000: loss=1.67 " + "l1=0.659" + "l2=1.02 f=-0.195 shape=(1, 9000, 1)
logits [[-0.343773   0.0244927  0.0991432 -0.5599802]]
Iteration 200 of 1000: loss=0.809 " + "l1=0" + "l2=0.809 f=-0.181 shape=(1, 9000, 1)
logits [[-0.55625576 -0.09404042 -0.04478585 -0.03074754]]
Iteration 300 of 1000: loss=0.604 " + "l1=0" + "l2=0.604 f=-0.173 shape=(1, 9000, 1)
logits [[-0.50279504 -0.14105226 -0.02581672 -0.02140768]]
Iteration 400 of 1000: loss=0.504 " + "l1=0" + "l2=0.504 f=-0.169 shape=(1, 9000, 1)
logits [[-0.4702685  -0.1617134  -0.02275595 -0.02271717]]
Iteration 500 of 1000: loss=0.444 " + "l1=0" + "l2=0.444 f=-0.167 shape=(1, 9000, 1)
logits [[-0.44884765 -0.17374344 -0.02579051 -0.01817505]]
Iteration 600 of 1000: loss=0.396 " + "l1=0" + "l2=0.396 f=-0.163 shape=(1, 9000, 1)
logits [[-0.4257953  -0.16699594 -0.03183816 -0.02597114]]
Iteration 700 of 1000: loss=0.358 " + "l1=0" + "l2=0.358 f=-0.16 shape=(1, 9000, 1)
logits [[-0.40783843 -0.15369947 -0.04043376 -0.03799345]]
Iteration 800 of 1000: loss=0.329 " + "l1=0" + "l2=0.329 f=-0.156 shape=(1, 9000, 1)
logits [[-0.40204993 -0.14297713 -0.04626677 -0.03337312]]
Iteration 900 of 1000: loss=0.302 " + "l1=0" + "l2=0.302 f=-0.153 shape=(1, 9000, 1)
logits [[-0.38141257 -0.1391811  -0.04536195 -0.04531892]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.93 " + "l1=2.93" + "l2=0 f=-0.404 shape=(1, 9000, 1)
logits [[ 1.6646081 -1.068087   1.4410626 -3.6553957]]
Iteration 100 of 1000: loss=1.38 " + "l1=0.939" + "l2=0.44 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.2406188  -0.14077817  0.3649384  -1.3432119 ]]
Iteration 200 of 1000: loss=0.893 " + "l1=0.323" + "l2=0.57 f=-0.194 shape=(1, 9000, 1)
logits [[-0.28276652 -0.086555    0.08949313 -0.49761182]]
Iteration 300 of 1000: loss=0.528 " + "l1=0.00356" + "l2=0.524 f=-0.171 shape=(1, 9000, 1)
logits [[-0.49110496 -0.08188923 -0.05284289 -0.05931791]]
Iteration 400 of 1000: loss=0.426 " + "l1=0" + "l2=0.426 f=-0.167 shape=(1, 9000, 1)
logits [[-0.46446303 -0.09581946 -0.05878862 -0.05064449]]
Iteration 500 of 1000: loss=0.368 " + "l1=0" + "l2=0.368 f=-0.164 shape=(1, 9000, 1)
logits [[-0.44008353 -0.09747028 -0.06411865 -0.05556493]]
Iteration 600 of 1000: loss=0.326 " + "l1=0" + "l2=0.326 f=-0.161 shape=(1, 9000, 1)
logits [[-0.42231476 -0.09097074 -0.06664303 -0.06526241]]
Iteration 700 of 1000: loss=0.295 " + "l1=0.00105" + "l2=0.294 f=-0.157 shape=(1, 9000, 1)
logits [[-0.4017574  -0.08777419 -0.06812687 -0.0700341 ]]
Iteration 800 of 1000: loss=0.272 " + "l1=0" + "l2=0.272 f=-0.152 shape=(1, 9000, 1)
logits [[-0.38837683 -0.08577678 -0.07190547 -0.06303091]]
Iteration 900 of 1000: loss=0.251 " + "l1=0.00235" + "l2=0.249 f=-0.149 shape=(1, 9000, 1)
logits [[-0.3646399  -0.09417864 -0.0656005  -0.06986576]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.73 " + "l1=1.73" + "l2=0 f=-0.404 shape=(1, 9000, 1)
logits [[ 1.6646081 -1.068087   1.4410626 -3.6553957]]
Iteration 100 of 1000: loss=1.02 " + "l1=0.776" + "l2=0.245 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.5376248  -0.23449942  0.54716086 -1.8405216 ]]
Iteration 200 of 1000: loss=0.814 " + "l1=0.561" + "l2=0.253 f=-0.221 shape=(1, 9000, 1)
logits [[ 0.27113393 -0.14614488  0.35737544 -1.3679063 ]]
Iteration 300 of 1000: loss=0.66 " + "l1=0.339" + "l2=0.322 f=-0.208 shape=(1, 9000, 1)
logits [[-0.07989116 -0.08949649  0.18927005 -0.8532422 ]]
Iteration 400 of 1000: loss=0.522 " + "l1=0.148" + "l2=0.375 f=-0.19 shape=(1, 9000, 1)
logits [[-0.33139482 -0.06233943  0.04347694 -0.4104547 ]]
Iteration 500 of 1000: loss=0.383 " + "l1=0.00148" + "l2=0.381 f=-0.172 shape=(1, 9000, 1)
logits [[-0.47059163 -0.07799997 -0.06756435 -0.072132  ]]
Iteration 600 of 1000: loss=0.324 " + "l1=0" + "l2=0.324 f=-0.164 shape=(1, 9000, 1)
logits [[-0.43568397 -0.07997696 -0.07235613 -0.06810468]]
Iteration 700 of 1000: loss=0.284 " + "l1=0.000458" + "l2=0.283 f=-0.157 shape=(1, 9000, 1)
logits [[-0.40010765 -0.086968   -0.07066854 -0.0720772 ]]
Iteration 800 of 1000: loss=0.257 " + "l1=0.00524" + "l2=0.252 f=-0.151 shape=(1, 9000, 1)
logits [[-0.37456656 -0.07632276 -0.06932792 -0.08544287]]
Iteration 900 of 1000: loss=0.237 " + "l1=0.00333" + "l2=0.233 f=-0.147 shape=(1, 9000, 1)
logits [[-0.35657832 -0.07734569 -0.07261867 -0.08284975]]
--- 311.77625608444214 seconds ---
Adv result:3
Loading record A02611
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0599 " + "l1=0.0599" + "l2=0 f=-0.559 shape=(1, 9000, 1)
logits [[ 4.0258102 -1.9616264  2.254468  -6.5541487]]
Iteration 100 of 1000: loss=0.0587 " + "l1=0.0581" + "l2=0.00059 f=-0.554 shape=(1, 9000, 1)
logits [[ 3.932242  -1.8779837  2.2006667 -6.46911  ]]
Iteration 200 of 1000: loss=0.0582 " + "l1=0.0575" + "l2=0.000743 f=-0.551 shape=(1, 9000, 1)
logits [[ 3.902209  -1.846287   2.1806712 -6.439223 ]]
Iteration 300 of 1000: loss=0.0578 " + "l1=0.0568" + "l2=0.00101 f=-0.547 shape=(1, 9000, 1)
logits [[ 3.8698857 -1.8126208  2.1599054 -6.406105 ]]
Iteration 400 of 1000: loss=0.0575 " + "l1=0.0562" + "l2=0.00134 f=-0.544 shape=(1, 9000, 1)
logits [[ 3.8378952 -1.7787951  2.1396897 -6.3733706]]
Iteration 500 of 1000: loss=0.0572 " + "l1=0.0556" + "l2=0.00161 f=-0.54 shape=(1, 9000, 1)
logits [[ 3.8088286 -1.7480698  2.1214366 -6.3438144]]
Iteration 600 of 1000: loss=0.0569 " + "l1=0.055" + "l2=0.00184 f=-0.538 shape=(1, 9000, 1)
logits [[ 3.7831006 -1.721343   2.1053746 -6.317896 ]]
Iteration 700 of 1000: loss=0.0567 " + "l1=0.0546" + "l2=0.00207 f=-0.535 shape=(1, 9000, 1)
logits [[ 3.7617447 -1.6986974  2.0921285 -6.296628 ]]
Iteration 800 of 1000: loss=0.0564 " + "l1=0.0542" + "l2=0.00214 f=-0.533 shape=(1, 9000, 1)
logits [[ 3.7441673 -1.6793201  2.081047  -6.278677 ]]
Iteration 900 of 1000: loss=0.0562 " + "l1=0.0539" + "l2=0.00228 f=-0.531 shape=(1, 9000, 1)
logits [[ 3.7281444 -1.6627413  2.0715635 -6.262419 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.599 " + "l1=0.599" + "l2=0 f=-0.559 shape=(1, 9000, 1)
logits [[ 4.0258102 -1.9616264  2.254468  -6.5541487]]
Iteration 100 of 1000: loss=0.492 " + "l1=0.446" + "l2=0.046 f=-0.521 shape=(1, 9000, 1)
logits [[ 3.220242  -1.2412496  1.8059684 -5.8704805]]
Iteration 200 of 1000: loss=0.452 " + "l1=0.387" + "l2=0.0657 f=-0.522 shape=(1, 9000, 1)
logits [[ 2.8663187 -1.001064   1.6572964 -5.610255 ]]
Iteration 300 of 1000: loss=0.429 " + "l1=0.347" + "l2=0.082 f=-0.523 shape=(1, 9000, 1)
logits [[ 2.6142616 -0.8582366  1.5763404 -5.423408 ]]
Iteration 400 of 1000: loss=0.411 " + "l1=0.317" + "l2=0.0942 f=-0.53 shape=(1, 9000, 1)
logits [[ 2.404155   -0.76881564  1.522473   -5.2766547 ]]
Iteration 500 of 1000: loss=0.394 " + "l1=0.285" + "l2=0.109 f=-0.54 shape=(1, 9000, 1)
logits [[ 2.1745615 -0.6763742  1.4790466 -5.137575 ]]
Iteration 600 of 1000: loss=0.377 " + "l1=0.257" + "l2=0.12 f=-0.549 shape=(1, 9000, 1)
logits [[ 1.9697324 -0.6044332  1.4470406 -5.007273 ]]
Iteration 700 of 1000: loss=0.362 " + "l1=0.237" + "l2=0.125 f=-0.552 shape=(1, 9000, 1)
logits [[ 1.8123302 -0.5548221  1.4184375 -4.8849273]]
Iteration 800 of 1000: loss=0.35 " + "l1=0.22" + "l2=0.13 f=-0.554 shape=(1, 9000, 1)
logits [[ 1.6843035 -0.5157346  1.3941569 -4.7781425]]
Iteration 900 of 1000: loss=0.338 " + "l1=0.203" + "l2=0.135 f=-0.556 shape=(1, 9000, 1)
logits [[ 1.5535406  -0.47454828  1.3680869  -4.67156   ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.99 " + "l1=5.99" + "l2=0 f=-0.559 shape=(1, 9000, 1)
logits [[ 4.0258102 -1.9616264  2.254468  -6.5541487]]
Iteration 100 of 1000: loss=1.52 " + "l1=0.575" + "l2=0.943 f=-0.496 shape=(1, 9000, 1)
logits [[ 0.8831724   0.35014123  0.9249819  -4.1428165 ]]
Iteration 200 of 1000: loss=1.01 " + "l1=0.0727" + "l2=0.938 f=-0.464 shape=(1, 9000, 1)
logits [[ 0.6923668   0.64530694  0.7179764  -3.9133089 ]]
Iteration 300 of 1000: loss=0.842 " + "l1=0.00872" + "l2=0.833 f=-0.459 shape=(1, 9000, 1)
logits [[ 0.65606785  0.68707293  0.69578916 -3.8735788 ]]
Iteration 400 of 1000: loss=0.769 " + "l1=0.0137" + "l2=0.756 f=-0.461 shape=(1, 9000, 1)
logits [[ 0.60958266  0.68096477  0.6946419  -3.8287127 ]]
Iteration 500 of 1000: loss=0.707 " + "l1=0.00479" + "l2=0.703 f=-0.453 shape=(1, 9000, 1)
logits [[ 0.6499868   0.6697811   0.67457604 -3.807103  ]]
Iteration 600 of 1000: loss=0.668 " + "l1=0.00958" + "l2=0.659 f=-0.45 shape=(1, 9000, 1)
logits [[ 0.6349509   0.65386444  0.6634414  -3.751981  ]]
Iteration 700 of 1000: loss=0.639 " + "l1=0" + "l2=0.639 f=-0.448 shape=(1, 9000, 1)
logits [[ 0.6169581   0.6423346   0.63943446 -3.6896656 ]]
Iteration 800 of 1000: loss=0.618 " + "l1=0" + "l2=0.618 f=-0.446 shape=(1, 9000, 1)
logits [[ 0.6092988  0.6297567  0.6278497 -3.6527133]]
Iteration 900 of 1000: loss=0.601 " + "l1=9.72e-06" + "l2=0.601 f=-0.446 shape=(1, 9000, 1)
logits [[ 0.5908612  0.6166497  0.6166594 -3.6099126]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.29 " + "l1=3.29" + "l2=0 f=-0.559 shape=(1, 9000, 1)
logits [[ 4.0258102 -1.9616264  2.254468  -6.5541487]]
Iteration 100 of 1000: loss=1.23 " + "l1=0.629" + "l2=0.606 f=-0.511 shape=(1, 9000, 1)
logits [[ 1.1670356   0.02391738  1.1632153  -4.4000483 ]]
Iteration 200 of 1000: loss=0.919 " + "l1=0.368" + "l2=0.551 f=-0.499 shape=(1, 9000, 1)
logits [[ 0.9598644   0.29354346  0.96228725 -4.2119513 ]]
Iteration 300 of 1000: loss=0.801 " + "l1=0.235" + "l2=0.565 f=-0.486 shape=(1, 9000, 1)
logits [[ 0.8415943  0.4350947  0.8629183 -4.085146 ]]
Iteration 400 of 1000: loss=0.742 " + "l1=0.183" + "l2=0.559 f=-0.481 shape=(1, 9000, 1)
logits [[ 0.79222506  0.48710358  0.81988996 -4.0238996 ]]
Iteration 500 of 1000: loss=0.702 " + "l1=0.138" + "l2=0.563 f=-0.474 shape=(1, 9000, 1)
logits [[ 0.72565246  0.5337663   0.7853371  -3.942467  ]]
Iteration 600 of 1000: loss=0.669 " + "l1=0.113" + "l2=0.556 f=-0.46 shape=(1, 9000, 1)
logits [[ 0.73482597  0.54846585  0.75373244 -3.8770385 ]]
Iteration 700 of 1000: loss=0.629 " + "l1=0.0535" + "l2=0.575 f=-0.443 shape=(1, 9000, 1)
logits [[ 0.5791475   0.60794353  0.70528203 -3.6635177 ]]
Iteration 800 of 1000: loss=0.579 " + "l1=0.00629" + "l2=0.573 f=-0.421 shape=(1, 9000, 1)
logits [[ 0.41620657  0.6594107   0.67084503 -3.4293253 ]]
Iteration 900 of 1000: loss=0.535 " + "l1=0.00136" + "l2=0.534 f=-0.415 shape=(1, 9000, 1)
logits [[ 0.33509073  0.655024    0.6574934  -3.308582  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.95 " + "l1=1.95" + "l2=0 f=-0.559 shape=(1, 9000, 1)
logits [[ 4.0258102 -1.9616264  2.254468  -6.5541487]]
Iteration 100 of 1000: loss=1.05 " + "l1=0.687" + "l2=0.366 f=-0.527 shape=(1, 9000, 1)
logits [[ 1.7485594  -0.36639142  1.3560241  -4.844526  ]]
Iteration 200 of 1000: loss=0.761 " + "l1=0.387" + "l2=0.373 f=-0.516 shape=(1, 9000, 1)
logits [[ 1.1860186  -0.00497026  1.1826072  -4.4268184 ]]
Iteration 300 of 1000: loss=0.674 " + "l1=0.314" + "l2=0.36 f=-0.509 shape=(1, 9000, 1)
logits [[ 1.0770319   0.11335542  1.0784205  -4.3063164 ]]
Iteration 400 of 1000: loss=0.637 " + "l1=0.275" + "l2=0.362 f=-0.506 shape=(1, 9000, 1)
logits [[ 1.0203694   0.18358307  1.0297036  -4.2586923 ]]
Iteration 500 of 1000: loss=0.612 " + "l1=0.255" + "l2=0.357 f=-0.499 shape=(1, 9000, 1)
logits [[ 0.99478555  0.21537523  1.0011101  -4.207787  ]]
Iteration 600 of 1000: loss=0.593 " + "l1=0.236" + "l2=0.357 f=-0.49 shape=(1, 9000, 1)
logits [[ 0.9628252   0.24828681  0.9750404  -4.1459894 ]]
Iteration 700 of 1000: loss=0.574 " + "l1=0.218" + "l2=0.356 f=-0.48 shape=(1, 9000, 1)
logits [[ 0.9261035   0.27793443  0.9487353  -4.0737844 ]]
Iteration 800 of 1000: loss=0.553 " + "l1=0.196" + "l2=0.358 f=-0.466 shape=(1, 9000, 1)
logits [[ 0.8954483   0.3127138   0.91471285 -3.9848816 ]]
Iteration 900 of 1000: loss=0.538 " + "l1=0.181" + "l2=0.357 f=-0.455 shape=(1, 9000, 1)
logits [[ 0.8831548   0.33136666  0.8881282  -3.9221232 ]]
--- 314.1418342590332 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0177 " + "l1=0.0177" + "l2=0 f=-0.559 shape=(1, 9000, 1)
logits [[ 4.0258102 -1.9616264  2.254468  -6.5541487]]
Iteration 100 of 1000: loss=0.0175 " + "l1=0.0173" + "l2=0.000205 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.9853072 -1.9595917  2.259125  -6.523922 ]]
Iteration 200 of 1000: loss=0.0174 " + "l1=0.0172" + "l2=0.000192 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.9788992 -1.958199   2.2586248 -6.5197444]]
Iteration 300 of 1000: loss=0.0174 " + "l1=0.0171" + "l2=0.000233 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.9708774 -1.95673    2.258683  -6.5138693]]
Iteration 400 of 1000: loss=0.0173 " + "l1=0.017" + "l2=0.000304 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.9629724 -1.955195   2.2587948 -6.5079923]]
Iteration 500 of 1000: loss=0.0173 " + "l1=0.017" + "l2=0.000374 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.9557295 -1.9537731  2.258983  -6.5025187]]
Iteration 600 of 1000: loss=0.0174 " + "l1=0.0169" + "l2=0.000454 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.9493232 -1.9526409  2.2592268 -6.4976315]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.177 " + "l1=0.177" + "l2=0 f=-0.559 shape=(1, 9000, 1)
logits [[ 4.0258102 -1.9616264  2.254468  -6.5541487]]
Iteration 100 of 1000: loss=0.156 " + "l1=0.145" + "l2=0.01 f=-0.564 shape=(1, 9000, 1)
logits [[ 3.7370386 -1.9444174  2.2823515 -6.332417 ]]
Iteration 200 of 1000: loss=0.145 " + "l1=0.129" + "l2=0.0166 f=-0.568 shape=(1, 9000, 1)
logits [[ 3.5812445 -1.9252957  2.2927501 -6.220678 ]]
Iteration 300 of 1000: loss=0.138 " + "l1=0.118" + "l2=0.0202 f=-0.569 shape=(1, 9000, 1)
logits [[ 3.4728088 -1.9040751  2.294647  -6.1409044]]
Iteration 400 of 1000: loss=0.131 " + "l1=0.107" + "l2=0.0239 f=-0.572 shape=(1, 9000, 1)
logits [[ 3.3691444 -1.8889183  2.2953367 -6.0645223]]
Iteration 500 of 1000: loss=0.125 " + "l1=0.0965" + "l2=0.0281 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.263439  -1.8767816  2.2987165 -5.9863663]]
Iteration 600 of 1000: loss=0.118 " + "l1=0.088" + "l2=0.0301 f=-0.579 shape=(1, 9000, 1)
logits [[ 3.1817272 -1.8714488  2.3018296 -5.928945 ]]
Iteration 700 of 1000: loss=0.111 " + "l1=0.0774" + "l2=0.0339 f=-0.587 shape=(1, 9000, 1)
logits [[ 3.0730948 -1.8632629  2.2989297 -5.856122 ]]
Iteration 800 of 1000: loss=0.105 " + "l1=0.0694" + "l2=0.0355 f=-0.592 shape=(1, 9000, 1)
logits [[ 2.9917412 -1.8630152  2.2979245 -5.7955155]]
Iteration 900 of 1000: loss=0.0989 " + "l1=0.0611" + "l2=0.0377 f=-0.599 shape=(1, 9000, 1)
logits [[ 2.906474  -1.8575598  2.2950625 -5.7399945]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.77 " + "l1=1.77" + "l2=0 f=-0.559 shape=(1, 9000, 1)
logits [[ 4.0258102 -1.9616264  2.254468  -6.5541487]]
Iteration 100 of 1000: loss=0.316 " + "l1=0.00375" + "l2=0.312 f=-0.606 shape=(1, 9000, 1)
logits [[ 2.4752305 -1.9866167  2.471476  -5.3851876]]
Iteration 200 of 1000: loss=0.22 " + "l1=0.0179" + "l2=0.202 f=-0.618 shape=(1, 9000, 1)
logits [[ 2.4530022 -1.9410479  2.4350686 -5.418592 ]]
Iteration 300 of 1000: loss=0.167 " + "l1=0" + "l2=0.167 f=-0.622 shape=(1, 9000, 1)
logits [[ 2.3682876 -1.885058   2.3900747 -5.362508 ]]
Iteration 400 of 1000: loss=0.137 " + "l1=0" + "l2=0.137 f=-0.624 shape=(1, 9000, 1)
logits [[ 2.3420155 -1.8537462  2.3513606 -5.33586  ]]
Iteration 500 of 1000: loss=0.12 " + "l1=0" + "l2=0.12 f=-0.626 shape=(1, 9000, 1)
logits [[ 2.312774  -1.8401703  2.32511   -5.302482 ]]
Iteration 600 of 1000: loss=0.106 " + "l1=0" + "l2=0.106 f=-0.628 shape=(1, 9000, 1)
logits [[ 2.2933204 -1.8344452  2.3018894 -5.274531 ]]
Iteration 700 of 1000: loss=0.0957 " + "l1=0" + "l2=0.0957 f=-0.629 shape=(1, 9000, 1)
logits [[ 2.2727299 -1.8323599  2.2839906 -5.239228 ]]
Iteration 800 of 1000: loss=0.0873 " + "l1=0" + "l2=0.0873 f=-0.627 shape=(1, 9000, 1)
logits [[ 2.2587693 -1.8301964  2.2706041 -5.2060423]]
Iteration 900 of 1000: loss=0.0811 " + "l1=0" + "l2=0.0811 f=-0.625 shape=(1, 9000, 1)
logits [[ 2.2445357 -1.8311718  2.261551  -5.175741 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.974 " + "l1=0.974" + "l2=0 f=-0.559 shape=(1, 9000, 1)
logits [[ 4.0258102 -1.9616264  2.254468  -6.5541487]]
Iteration 100 of 1000: loss=0.34 " + "l1=0.0219" + "l2=0.318 f=-0.604 shape=(1, 9000, 1)
logits [[ 2.495933  -1.9744437  2.4560623 -5.3949437]]
Iteration 200 of 1000: loss=0.195 " + "l1=0" + "l2=0.195 f=-0.62 shape=(1, 9000, 1)
logits [[ 2.4101758 -1.9209318  2.4209242 -5.3911123]]
Iteration 300 of 1000: loss=0.149 " + "l1=0.000967" + "l2=0.148 f=-0.625 shape=(1, 9000, 1)
logits [[ 2.370211  -1.867186   2.368452  -5.3709707]]
Iteration 400 of 1000: loss=0.123 " + "l1=3.07e-05" + "l2=0.123 f=-0.627 shape=(1, 9000, 1)
logits [[ 2.336226  -1.8408879  2.3361702 -5.3404307]]
Iteration 500 of 1000: loss=0.107 " + "l1=0.000581" + "l2=0.107 f=-0.629 shape=(1, 9000, 1)
logits [[ 2.3103611 -1.8309271  2.3093054 -5.306131 ]]
Iteration 600 of 1000: loss=0.0974 " + "l1=0" + "l2=0.0974 f=-0.631 shape=(1, 9000, 1)
logits [[ 2.2727258 -1.830213   2.2903516 -5.2566533]]
Iteration 700 of 1000: loss=0.0878 " + "l1=0" + "l2=0.0878 f=-0.631 shape=(1, 9000, 1)
logits [[ 2.2548435 -1.8317533  2.2732987 -5.22023  ]]
Iteration 800 of 1000: loss=0.0812 " + "l1=0.0037" + "l2=0.0775 f=-0.628 shape=(1, 9000, 1)
logits [[ 2.263807  -1.8302306  2.2570727 -5.201765 ]]
Iteration 900 of 1000: loss=0.0736 " + "l1=0" + "l2=0.0736 f=-0.626 shape=(1, 9000, 1)
logits [[ 2.2436488 -1.8385112  2.2568715 -5.1661196]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.576 " + "l1=0.576" + "l2=0 f=-0.559 shape=(1, 9000, 1)
logits [[ 4.0258102 -1.9616264  2.254468  -6.5541487]]
Iteration 100 of 1000: loss=0.35 " + "l1=0.244" + "l2=0.106 f=-0.576 shape=(1, 9000, 1)
logits [[ 3.0704222 -1.8809282  2.31931   -5.812598 ]]
Iteration 200 of 1000: loss=0.237 " + "l1=0.0798" + "l2=0.157 f=-0.599 shape=(1, 9000, 1)
logits [[ 2.6069305 -1.8767947  2.3612936 -5.489016 ]]
Iteration 300 of 1000: loss=0.154 " + "l1=0.00164" + "l2=0.153 f=-0.622 shape=(1, 9000, 1)
logits [[ 2.3813777 -1.8733231  2.37633   -5.37368  ]]
Iteration 400 of 1000: loss=0.123 " + "l1=0" + "l2=0.123 f=-0.626 shape=(1, 9000, 1)
logits [[ 2.3309336 -1.8320513  2.3355947 -5.3390207]]
Iteration 500 of 1000: loss=0.103 " + "l1=0" + "l2=0.103 f=-0.628 shape=(1, 9000, 1)
logits [[ 2.2892056 -1.806687   2.293735  -5.2887444]]
Iteration 600 of 1000: loss=0.0894 " + "l1=0" + "l2=0.0894 f=-0.628 shape=(1, 9000, 1)
logits [[ 2.2620006 -1.8007823  2.2659936 -5.23963  ]]
Iteration 700 of 1000: loss=0.079 " + "l1=0.000727" + "l2=0.0783 f=-0.629 shape=(1, 9000, 1)
logits [[ 2.2488105 -1.8068088  2.2465723 -5.2027855]]
Iteration 800 of 1000: loss=0.0714 " + "l1=0" + "l2=0.0714 f=-0.627 shape=(1, 9000, 1)
logits [[ 2.2348115 -1.8136115  2.2363226 -5.1648335]]
Iteration 900 of 1000: loss=0.0667 " + "l1=0" + "l2=0.0667 f=-0.624 shape=(1, 9000, 1)
logits [[ 2.2246063 -1.8239862  2.2344077 -5.1322727]]
--- 288.0005044937134 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.106 " + "l1=0.106" + "l2=0 f=-0.559 shape=(1, 9000, 1)
logits [[ 4.0258102 -1.9616264  2.254468  -6.5541487]]
Iteration 100 of 1000: loss=0.104 " + "l1=0.103" + "l2=0.000782 f=-0.551 shape=(1, 9000, 1)
logits [[ 3.9157522 -1.8940688  2.2052982 -6.430774 ]]
Iteration 200 of 1000: loss=0.104 " + "l1=0.103" + "l2=0.001 f=-0.548 shape=(1, 9000, 1)
logits [[ 3.8790796 -1.8676741  2.186902  -6.390384 ]]
Iteration 300 of 1000: loss=0.103 " + "l1=0.102" + "l2=0.00129 f=-0.544 shape=(1, 9000, 1)
logits [[ 3.8425472 -1.8395005  2.168198  -6.348598 ]]
Iteration 400 of 1000: loss=0.103 " + "l1=0.101" + "l2=0.00162 f=-0.541 shape=(1, 9000, 1)
logits [[ 3.809302  -1.8132491  2.150748  -6.309554 ]]
Iteration 500 of 1000: loss=0.102 " + "l1=0.1" + "l2=0.00196 f=-0.537 shape=(1, 9000, 1)
logits [[ 3.7769213 -1.7860832  2.1332111 -6.2714787]]
Iteration 600 of 1000: loss=0.102 " + "l1=0.0999" + "l2=0.00227 f=-0.534 shape=(1, 9000, 1)
logits [[ 3.7502797 -1.7642554  2.11907   -6.2407722]]
Iteration 700 of 1000: loss=0.102 " + "l1=0.0994" + "l2=0.00246 f=-0.531 shape=(1, 9000, 1)
logits [[ 3.724998  -1.7439681  2.1058972 -6.211396 ]]
Iteration 800 of 1000: loss=0.102 " + "l1=0.0989" + "l2=0.00269 f=-0.529 shape=(1, 9000, 1)
logits [[ 3.7031164 -1.7278682  2.095143  -6.1853127]]
Iteration 900 of 1000: loss=0.101 " + "l1=0.0985" + "l2=0.00288 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.6836984 -1.7144939  2.0862093 -6.1618066]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.06 " + "l1=1.06" + "l2=0 f=-0.559 shape=(1, 9000, 1)
logits [[ 4.0258102 -1.9616264  2.254468  -6.5541487]]
Iteration 100 of 1000: loss=0.926 " + "l1=0.869" + "l2=0.0569 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.1189096 -1.4445637  1.8689668 -5.5681624]]
Iteration 200 of 1000: loss=0.861 " + "l1=0.776" + "l2=0.0843 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.6912775 -1.222773   1.6796099 -5.0721946]]
Iteration 300 of 1000: loss=0.811 " + "l1=0.702" + "l2=0.109 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.3701584 -1.1233755  1.5483378 -4.6468687]]
Iteration 400 of 1000: loss=0.76 " + "l1=0.621" + "l2=0.139 f=-0.458 shape=(1, 9000, 1)
logits [[ 1.994267  -1.0637609  1.4586002 -4.220716 ]]
Iteration 500 of 1000: loss=0.705 " + "l1=0.539" + "l2=0.166 f=-0.462 shape=(1, 9000, 1)
logits [[ 1.5902052 -1.0233492  1.3851182 -3.798025 ]]
Iteration 600 of 1000: loss=0.658 " + "l1=0.486" + "l2=0.172 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.3361511 -1.0067656  1.3365024 -3.5187838]]
Iteration 700 of 1000: loss=0.627 " + "l1=0.47" + "l2=0.157 f=-0.453 shape=(1, 9000, 1)
logits [[ 1.306968  -1.0281869  1.3061177 -3.3951838]]
Iteration 800 of 1000: loss=0.601 " + "l1=0.453" + "l2=0.149 f=-0.442 shape=(1, 9000, 1)
logits [[ 1.2725745 -1.0568168  1.2713827 -3.253339 ]]
Iteration 900 of 1000: loss=0.576 " + "l1=0.431" + "l2=0.145 f=-0.432 shape=(1, 9000, 1)
logits [[ 1.2130893 -1.0694981  1.2182919 -3.0885932]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.6 " + "l1=10.6" + "l2=0 f=-0.559 shape=(1, 9000, 1)
logits [[ 4.0258102 -1.9616264  2.254468  -6.5541487]]
Iteration 100 of 1000: loss=3.77 " + "l1=1.52" + "l2=2.25 f=-0.276 shape=(1, 9000, 1)
logits [[ 0.0674725  -0.6454464   0.49616525 -1.0224333 ]]
Iteration 200 of 1000: loss=2.06 " + "l1=0" + "l2=2.06 f=-0.19 shape=(1, 9000, 1)
logits [[-0.53219956 -0.6706516   0.21982934  0.22355235]]
Iteration 300 of 1000: loss=1.66 " + "l1=0" + "l2=1.66 f=-0.183 shape=(1, 9000, 1)
logits [[-0.54088867 -0.67313343  0.2342211   0.2478444 ]]
Iteration 400 of 1000: loss=1.44 " + "l1=0" + "l2=1.44 f=-0.183 shape=(1, 9000, 1)
logits [[-0.5880511  -0.64561933  0.24135362  0.26100802]]
Iteration 500 of 1000: loss=1.3 " + "l1=0" + "l2=1.3 f=-0.19 shape=(1, 9000, 1)
logits [[-0.62558776 -0.6390267   0.24225904  0.26432374]]
Iteration 600 of 1000: loss=1.19 " + "l1=0" + "l2=1.19 f=-0.197 shape=(1, 9000, 1)
logits [[-0.65688163 -0.6370017   0.24623883  0.25963205]]
Iteration 700 of 1000: loss=1.11 " + "l1=0" + "l2=1.11 f=-0.198 shape=(1, 9000, 1)
logits [[-0.68434054 -0.6369946   0.24951912  0.27877825]]
Iteration 800 of 1000: loss=1.02 " + "l1=0" + "l2=1.02 f=-0.201 shape=(1, 9000, 1)
logits [[-0.69126403 -0.64586836  0.2626      0.26991135]]
Iteration 900 of 1000: loss=0.951 " + "l1=0.00208" + "l2=0.948 f=-0.212 shape=(1, 9000, 1)
logits [[-0.7078672  -0.66021043  0.2620586   0.25997415]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.82 " + "l1=5.82" + "l2=0 f=-0.559 shape=(1, 9000, 1)
logits [[ 4.0258102 -1.9616264  2.254468  -6.5541487]]
Iteration 100 of 1000: loss=2.95 " + "l1=2.04" + "l2=0.906 f=-0.389 shape=(1, 9000, 1)
logits [[ 0.9143075  -0.62362385  0.9342057  -2.7825103 ]]
Iteration 200 of 1000: loss=2.12 " + "l1=0.953" + "l2=1.17 f=-0.262 shape=(1, 9000, 1)
logits [[ 0.12110865 -0.5865668   0.5752033  -1.1576266 ]]
Iteration 300 of 1000: loss=1.52 " + "l1=0.148" + "l2=1.37 f=-0.194 shape=(1, 9000, 1)
logits [[-0.59335107 -0.54674023  0.31597337  0.04779059]]
Iteration 400 of 1000: loss=1.27 " + "l1=0.00274" + "l2=1.27 f=-0.179 shape=(1, 9000, 1)
logits [[-0.710132   -0.5584828   0.27942586  0.27443972]]
Iteration 500 of 1000: loss=1.12 " + "l1=0.0147" + "l2=1.1 f=-0.179 shape=(1, 9000, 1)
logits [[-0.69828063 -0.6030627   0.30595914  0.27922085]]
Iteration 600 of 1000: loss=1 " + "l1=0" + "l2=1 f=-0.188 shape=(1, 9000, 1)
logits [[-0.73683524 -0.59816283  0.28653312  0.29606736]]
Iteration 700 of 1000: loss=0.909 " + "l1=0" + "l2=0.909 f=-0.2 shape=(1, 9000, 1)
logits [[-0.73799133 -0.6122648   0.27335897  0.27583498]]
Iteration 800 of 1000: loss=0.822 " + "l1=0.00552" + "l2=0.817 f=-0.217 shape=(1, 9000, 1)
logits [[-0.75602806 -0.6262905   0.26160112  0.25155807]]
Iteration 900 of 1000: loss=0.75 " + "l1=0.00964" + "l2=0.74 f=-0.234 shape=(1, 9000, 1)
logits [[-0.7758382  -0.64189225  0.24999173  0.23246184]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.44 " + "l1=3.44" + "l2=0 f=-0.559 shape=(1, 9000, 1)
logits [[ 4.0258102 -1.9616264  2.254468  -6.5541487]]
Iteration 100 of 1000: loss=2.16 " + "l1=1.59" + "l2=0.57 f=-0.446 shape=(1, 9000, 1)
logits [[ 1.3017864 -0.7220576  1.2247368 -3.5884538]]
Iteration 200 of 1000: loss=1.72 " + "l1=1.21" + "l2=0.505 f=-0.381 shape=(1, 9000, 1)
logits [[ 0.93303216 -0.65011686  0.95836765 -2.7641141 ]]
Iteration 300 of 1000: loss=1.48 " + "l1=0.859" + "l2=0.616 f=-0.334 shape=(1, 9000, 1)
logits [[ 0.375563   -0.56350565  0.74857736 -1.8946891 ]]
Iteration 400 of 1000: loss=1.26 " + "l1=0.575" + "l2=0.686 f=-0.306 shape=(1, 9000, 1)
logits [[-0.16474096 -0.5170756   0.61327785 -1.1549673 ]]
Iteration 500 of 1000: loss=1.09 " + "l1=0.352" + "l2=0.735 f=-0.275 shape=(1, 9000, 1)
logits [[-0.46671656 -0.57023084  0.51102734 -0.5722993 ]]
Iteration 600 of 1000: loss=0.898 " + "l1=0.149" + "l2=0.749 f=-0.252 shape=(1, 9000, 1)
logits [[-0.7434264  -0.566099    0.37922958 -0.0796826 ]]
Iteration 700 of 1000: loss=0.689 " + "l1=0.00889" + "l2=0.68 f=-0.212 shape=(1, 9000, 1)
logits [[-0.75045437 -0.7351125   0.3320156   0.30464813]]
Iteration 800 of 1000: loss=0.583 " + "l1=0.00665" + "l2=0.576 f=-0.196 shape=(1, 9000, 1)
logits [[-0.67812824 -0.8644022   0.38909864  0.36862308]]
Iteration 900 of 1000: loss=0.509 " + "l1=0.000103" + "l2=0.509 f=-0.192 shape=(1, 9000, 1)
logits [[-0.64448696 -0.9387218   0.40859717  0.40827984]]
--- 315.759765625 seconds ---
Adv result:3
Loading record A02626
(1, 3260)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.028 " + "l1=0.028" + "l2=0 f=-0.71 shape=(1, 9000, 1)
logits [[ 2.4638753  -0.33560073 -1.9583488  -3.0095503 ]]
Iteration 100 of 1000: loss=0.0256 " + "l1=0.0246" + "l2=0.000996 f=-0.716 shape=(1, 9000, 1)
logits [[ 2.2646298  -0.19691172 -1.9919177  -2.9380739 ]]
Iteration 200 of 1000: loss=0.0245 " + "l1=0.023" + "l2=0.00143 f=-0.719 shape=(1, 9000, 1)
logits [[ 2.1696007  -0.13506411 -2.008838   -2.9035277 ]]
Iteration 300 of 1000: loss=0.0235 " + "l1=0.0215" + "l2=0.00199 f=-0.723 shape=(1, 9000, 1)
logits [[ 2.073805   -0.07469561 -2.026411   -2.8654432 ]]
Iteration 400 of 1000: loss=0.0226 " + "l1=0.02" + "l2=0.00255 f=-0.726 shape=(1, 9000, 1)
logits [[ 1.9853687  -0.01900328 -2.0445268  -2.827798  ]]
Iteration 500 of 1000: loss=0.0219 " + "l1=0.0188" + "l2=0.0031 f=-0.729 shape=(1, 9000, 1)
logits [[ 1.9090152   0.02564747 -2.059419   -2.7910392 ]]
Iteration 600 of 1000: loss=0.0214 " + "l1=0.0177" + "l2=0.00369 f=-0.73 shape=(1, 9000, 1)
logits [[ 1.8368671   0.06819605 -2.0729036  -2.7531724 ]]
Iteration 700 of 1000: loss=0.0209 " + "l1=0.0168" + "l2=0.00413 f=-0.732 shape=(1, 9000, 1)
logits [[ 1.7774733   0.10090543 -2.0839972  -2.7217643 ]]
Iteration 800 of 1000: loss=0.0205 " + "l1=0.0159" + "l2=0.00459 f=-0.733 shape=(1, 9000, 1)
logits [[ 1.7203659   0.12942532 -2.0938983  -2.6887734 ]]
Iteration 900 of 1000: loss=0.0202 " + "l1=0.0152" + "l2=0.00498 f=-0.734 shape=(1, 9000, 1)
logits [[ 1.6741625  0.1501257 -2.1019847 -2.6602218]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.28 " + "l1=0.28" + "l2=0 f=-0.71 shape=(1, 9000, 1)
logits [[ 2.4638753  -0.33560073 -1.9583488  -3.0095503 ]]
Iteration 100 of 1000: loss=0.0514 " + "l1=0.00241" + "l2=0.049 f=-0.716 shape=(1, 9000, 1)
logits [[ 0.8388392  0.8147607 -1.960446  -2.5560644]]
Iteration 200 of 1000: loss=0.0322 " + "l1=0" + "l2=0.0322 f=-0.718 shape=(1, 9000, 1)
logits [[ 0.7911682   0.81862944 -1.9613295  -2.51887   ]]
Iteration 300 of 1000: loss=0.026 " + "l1=0" + "l2=0.026 f=-0.717 shape=(1, 9000, 1)
logits [[ 0.79418415  0.80749714 -1.9742038  -2.4973185 ]]
Iteration 400 of 1000: loss=0.0245 " + "l1=0" + "l2=0.0245 f=-0.719 shape=(1, 9000, 1)
logits [[ 0.77032024  0.81190974 -1.988865   -2.4704502 ]]
Iteration 500 of 1000: loss=0.0227 " + "l1=0.000167" + "l2=0.0226 f=-0.719 shape=(1, 9000, 1)
logits [[ 0.7901505  0.788485  -2.0021079 -2.4532008]]
Iteration 600 of 1000: loss=0.0221 " + "l1=0" + "l2=0.0221 f=-0.72 shape=(1, 9000, 1)
logits [[ 0.7717812  0.786729  -2.00652   -2.431316 ]]
Iteration 700 of 1000: loss=0.0213 " + "l1=0" + "l2=0.0213 f=-0.72 shape=(1, 9000, 1)
logits [[ 0.76767766  0.7795554  -2.0123823  -2.4141102 ]]
Iteration 800 of 1000: loss=0.0206 " + "l1=0" + "l2=0.0206 f=-0.719 shape=(1, 9000, 1)
logits [[ 0.7604077  0.7711223 -2.0194387 -2.3895123]]
Iteration 900 of 1000: loss=0.0195 " + "l1=0" + "l2=0.0195 f=-0.718 shape=(1, 9000, 1)
logits [[ 0.7468041  0.7551226 -2.0221078 -2.353266 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.154 " + "l1=0.154" + "l2=0 f=-0.71 shape=(1, 9000, 1)
logits [[ 2.4638753  -0.33560073 -1.9583488  -3.0095503 ]]
Iteration 100 of 1000: loss=0.0757 " + "l1=0.0373" + "l2=0.0384 f=-0.752 shape=(1, 9000, 1)
logits [[ 1.1919719   0.51408994 -2.1743226  -2.5379202 ]]
Iteration 200 of 1000: loss=0.0313 " + "l1=0" + "l2=0.0313 f=-0.714 shape=(1, 9000, 1)
logits [[ 0.81412953  0.8172555  -1.9669055  -2.5214298 ]]
Iteration 300 of 1000: loss=0.0253 " + "l1=0" + "l2=0.0253 f=-0.713 shape=(1, 9000, 1)
logits [[ 0.8022359  0.810751  -1.958889  -2.505633 ]]
Iteration 400 of 1000: loss=0.0232 " + "l1=0" + "l2=0.0232 f=-0.71 shape=(1, 9000, 1)
logits [[ 0.7909808  0.7992646 -1.952471  -2.477602 ]]
Iteration 500 of 1000: loss=0.0215 " + "l1=0" + "l2=0.0215 f=-0.7 shape=(1, 9000, 1)
logits [[ 0.77078044  0.77976525 -1.898179   -2.4510374 ]]
Iteration 600 of 1000: loss=0.0194 " + "l1=0" + "l2=0.0194 f=-0.691 shape=(1, 9000, 1)
logits [[ 0.7271888  0.7542241 -1.8035103 -2.4412985]]
Iteration 700 of 1000: loss=0.0176 " + "l1=0.000532" + "l2=0.0171 f=-0.686 shape=(1, 9000, 1)
logits [[ 0.7275255  0.7178442 -1.7650288 -2.4237988]]
Iteration 800 of 1000: loss=0.0156 " + "l1=0" + "l2=0.0156 f=-0.682 shape=(1, 9000, 1)
logits [[ 0.69165254  0.7042973  -1.7277968  -2.3964326 ]]
Iteration 900 of 1000: loss=0.0134 " + "l1=0" + "l2=0.0134 f=-0.677 shape=(1, 9000, 1)
logits [[ 0.6795078  0.6861409 -1.6979302 -2.3774276]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.091 " + "l1=0.091" + "l2=0 f=-0.71 shape=(1, 9000, 1)
logits [[ 2.4638753  -0.33560073 -1.9583488  -3.0095503 ]]
Iteration 100 of 1000: loss=0.065 " + "l1=0.0538" + "l2=0.0112 f=-0.733 shape=(1, 9000, 1)
logits [[ 1.7816486  0.1255266 -2.0772455 -2.7624645]]
Iteration 200 of 1000: loss=0.0503 " + "l1=0.0313" + "l2=0.019 f=-0.749 shape=(1, 9000, 1)
logits [[ 1.3654275   0.40215203 -2.1592522  -2.6030083 ]]
Iteration 300 of 1000: loss=0.0311 " + "l1=0.00123" + "l2=0.0299 f=-0.719 shape=(1, 9000, 1)
logits [[ 0.84121627  0.80331546 -2.0247777  -2.4954515 ]]
Iteration 400 of 1000: loss=0.0233 " + "l1=0" + "l2=0.0233 f=-0.717 shape=(1, 9000, 1)
logits [[ 0.79244506  0.7962551  -1.9899364  -2.4676945 ]]
Iteration 500 of 1000: loss=0.0202 " + "l1=0" + "l2=0.0202 f=-0.715 shape=(1, 9000, 1)
logits [[ 0.7752772  0.7811724 -1.9707006 -2.4454553]]
Iteration 600 of 1000: loss=0.0172 " + "l1=0" + "l2=0.0172 f=-0.712 shape=(1, 9000, 1)
logits [[ 0.7602355   0.76601595 -1.9441811  -2.4302664 ]]
Iteration 700 of 1000: loss=0.0154 " + "l1=0.000302" + "l2=0.0151 f=-0.71 shape=(1, 9000, 1)
logits [[ 0.7541191  0.7448312 -1.9259567 -2.4116106]]
Iteration 800 of 1000: loss=0.0142 " + "l1=3.95e-05" + "l2=0.0142 f=-0.708 shape=(1, 9000, 1)
logits [[ 0.7335766  0.7323626 -1.9147134 -2.3835917]]
Iteration 900 of 1000: loss=0.0131 " + "l1=1.51e-05" + "l2=0.0131 f=-0.704 shape=(1, 9000, 1)
logits [[ 0.71870595  0.71824265 -1.9012389  -2.3526711 ]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0595 " + "l1=0.0595" + "l2=0 f=-0.71 shape=(1, 9000, 1)
logits [[ 2.4638753  -0.33560073 -1.9583488  -3.0095503 ]]
Iteration 100 of 1000: loss=0.0487 " + "l1=0.0444" + "l2=0.00432 f=-0.724 shape=(1, 9000, 1)
logits [[ 2.039482   -0.04966931 -2.029884   -2.8555403 ]]
Iteration 200 of 1000: loss=0.0428 " + "l1=0.0357" + "l2=0.00717 f=-0.733 shape=(1, 9000, 1)
logits [[ 1.7949667   0.11662284 -2.077911   -2.7643    ]]
Iteration 300 of 1000: loss=0.0379 " + "l1=0.0277" + "l2=0.0102 f=-0.742 shape=(1, 9000, 1)
logits [[ 1.5675038   0.26184297 -2.1267493  -2.6699178 ]]
Iteration 400 of 1000: loss=0.0339 " + "l1=0.02" + "l2=0.0138 f=-0.745 shape=(1, 9000, 1)
logits [[ 1.3486409  0.4062559 -2.157968  -2.5787683]]
Iteration 500 of 1000: loss=0.0245 " + "l1=0.00233" + "l2=0.0222 f=-0.716 shape=(1, 9000, 1)
logits [[ 0.8643338  0.7546033 -1.9863226 -2.4981117]]
Iteration 600 of 1000: loss=0.0206 " + "l1=0.000138" + "l2=0.0205 f=-0.716 shape=(1, 9000, 1)
logits [[ 0.7852035  0.7787276 -1.9786526 -2.449084 ]]
Iteration 700 of 1000: loss=0.0174 " + "l1=0" + "l2=0.0174 f=-0.713 shape=(1, 9000, 1)
logits [[ 0.7632761  0.7647554 -1.9522831 -2.428179 ]]
Iteration 800 of 1000: loss=0.0152 " + "l1=2.02e-06" + "l2=0.0152 f=-0.711 shape=(1, 9000, 1)
logits [[ 0.7492184   0.74912316 -1.9345045  -2.4075859 ]]
Iteration 900 of 1000: loss=0.014 " + "l1=2.97e-05" + "l2=0.014 f=-0.709 shape=(1, 9000, 1)
logits [[ 0.73502845  0.7336294  -1.9265194  -2.3798735 ]]
--- 311.8295388221741 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0442 " + "l1=0.0442" + "l2=0 f=-0.71 shape=(1, 9000, 1)
logits [[ 2.4638753  -0.33560073 -1.9583488  -3.0095503 ]]
Iteration 100 of 1000: loss=0.0434 " + "l1=0.043" + "l2=0.000397 f=-0.714 shape=(1, 9000, 1)
logits [[ 2.338894   -0.28046983 -1.9611464  -2.9540434 ]]
Iteration 200 of 1000: loss=0.043 " + "l1=0.0426" + "l2=0.000477 f=-0.716 shape=(1, 9000, 1)
logits [[ 2.294447   -0.26246288 -1.9619638  -2.9333072 ]]
Iteration 300 of 1000: loss=0.0427 " + "l1=0.0421" + "l2=0.000658 f=-0.718 shape=(1, 9000, 1)
logits [[ 2.242788   -0.24231897 -1.9632151  -2.9076262 ]]
Iteration 400 of 1000: loss=0.0424 " + "l1=0.0415" + "l2=0.000827 f=-0.719 shape=(1, 9000, 1)
logits [[ 2.1905866  -0.22317372 -1.9639351  -2.880979  ]]
Iteration 500 of 1000: loss=0.0421 " + "l1=0.041" + "l2=0.00102 f=-0.721 shape=(1, 9000, 1)
logits [[ 2.1395555  -0.20553365 -1.9639063  -2.8538709 ]]
Iteration 600 of 1000: loss=0.0418 " + "l1=0.0406" + "l2=0.00125 f=-0.722 shape=(1, 9000, 1)
logits [[ 2.0953856  -0.19186841 -1.9619277  -2.829918  ]]
Iteration 700 of 1000: loss=0.0415 " + "l1=0.0401" + "l2=0.00139 f=-0.723 shape=(1, 9000, 1)
logits [[ 2.055361   -0.17970087 -1.9594698  -2.8077056 ]]
Iteration 800 of 1000: loss=0.0414 " + "l1=0.0397" + "l2=0.00164 f=-0.723 shape=(1, 9000, 1)
logits [[ 2.0180085  -0.16958266 -1.9562883  -2.7851548 ]]
Iteration 900 of 1000: loss=0.0411 " + "l1=0.0393" + "l2=0.0018 f=-0.723 shape=(1, 9000, 1)
logits [[ 1.9781938  -0.15965895 -1.9520718  -2.7602522 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.442 " + "l1=0.442" + "l2=0 f=-0.71 shape=(1, 9000, 1)
logits [[ 2.4638753  -0.33560073 -1.9583488  -3.0095503 ]]
Iteration 100 of 1000: loss=0.314 " + "l1=0.241" + "l2=0.0724 f=-0.712 shape=(1, 9000, 1)
logits [[ 0.7761521   0.34793591 -1.6385814  -2.3354607 ]]
Iteration 200 of 1000: loss=0.196 " + "l1=0.125" + "l2=0.0712 f=-0.63 shape=(1, 9000, 1)
logits [[ 0.24930087  0.22941561 -0.997819   -1.9995797 ]]
Iteration 300 of 1000: loss=0.159 " + "l1=0.0867" + "l2=0.0725 f=-0.615 shape=(1, 9000, 1)
logits [[ 0.06982372  0.07175001 -0.79485095 -1.8058491 ]]
Iteration 400 of 1000: loss=0.135 " + "l1=0.0605" + "l2=0.0742 f=-0.596 shape=(1, 9000, 1)
logits [[-0.04797544 -0.04793811 -0.653338   -1.6341724 ]]
Iteration 500 of 1000: loss=0.111 " + "l1=0.0373" + "l2=0.0736 f=-0.578 shape=(1, 9000, 1)
logits [[-0.16682193 -0.18062904 -0.5394712  -1.4259506 ]]
Iteration 600 of 1000: loss=0.0834 " + "l1=0.00917" + "l2=0.0742 f=-0.57 shape=(1, 9000, 1)
logits [[-0.32274196 -0.3116084  -0.4033507  -1.2402996 ]]
Iteration 700 of 1000: loss=0.0618 " + "l1=0.00011" + "l2=0.0617 f=-0.583 shape=(1, 9000, 1)
logits [[-0.38820288 -0.39609838 -0.38930553 -1.1588498 ]]
Iteration 800 of 1000: loss=0.053 " + "l1=0.000319" + "l2=0.0526 f=-0.585 shape=(1, 9000, 1)
logits [[-0.42820477 -0.41868654 -0.42187816 -1.0703932 ]]
Iteration 900 of 1000: loss=0.0466 " + "l1=0" + "l2=0.0466 f=-0.578 shape=(1, 9000, 1)
logits [[-0.43487403 -0.43675098 -0.43487024 -1.0050101 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.243 " + "l1=0.243" + "l2=0 f=-0.71 shape=(1, 9000, 1)
logits [[ 2.4638753  -0.33560073 -1.9583488  -3.0095503 ]]
Iteration 100 of 1000: loss=0.217 " + "l1=0.206" + "l2=0.0108 f=-0.731 shape=(1, 9000, 1)
logits [[ 1.7732489  -0.05088708 -1.9759723  -2.6711166 ]]
Iteration 200 of 1000: loss=0.179 " + "l1=0.145" + "l2=0.034 f=-0.707 shape=(1, 9000, 1)
logits [[ 0.962038    0.27459902 -1.6813813  -2.3848066 ]]
Iteration 300 of 1000: loss=0.126 " + "l1=0.086" + "l2=0.04 f=-0.636 shape=(1, 9000, 1)
logits [[ 0.3896098   0.38457957 -1.1741946  -2.144513  ]]
Iteration 400 of 1000: loss=0.102 " + "l1=0.0629" + "l2=0.039 f=-0.62 shape=(1, 9000, 1)
logits [[ 0.19917655  0.20741984 -0.9364486  -1.9486032 ]]
Iteration 500 of 1000: loss=0.0852 " + "l1=0.0474" + "l2=0.0378 f=-0.609 shape=(1, 9000, 1)
logits [[ 0.08160958  0.07852301 -0.77964514 -1.8162771 ]]
Iteration 600 of 1000: loss=0.0713 " + "l1=0.0332" + "l2=0.0382 f=-0.6 shape=(1, 9000, 1)
logits [[-0.04101427 -0.03799517 -0.6410879  -1.6790516 ]]
Iteration 700 of 1000: loss=0.0602 " + "l1=0.0204" + "l2=0.0398 f=-0.599 shape=(1, 9000, 1)
logits [[-0.18487316 -0.17632157 -0.5479307  -1.4876211 ]]
Iteration 800 of 1000: loss=0.0491 " + "l1=0.00831" + "l2=0.0408 f=-0.585 shape=(1, 9000, 1)
logits [[-0.3161699  -0.31102082 -0.46204054 -1.2499499 ]]
Iteration 900 of 1000: loss=0.0427 " + "l1=0.00269" + "l2=0.04 f=-0.573 shape=(1, 9000, 1)
logits [[-0.37006575 -0.37213007 -0.4189144  -1.1319783 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.144 " + "l1=0.144" + "l2=0 f=-0.71 shape=(1, 9000, 1)
logits [[ 2.4638753  -0.33560073 -1.9583488  -3.0095503 ]]
Iteration 100 of 1000: loss=0.135 " + "l1=0.132" + "l2=0.0035 f=-0.724 shape=(1, 9000, 1)
logits [[ 2.0775368  -0.17068928 -1.9690983  -2.8319352 ]]
Iteration 200 of 1000: loss=0.13 " + "l1=0.125" + "l2=0.00568 f=-0.728 shape=(1, 9000, 1)
logits [[ 1.8682526  -0.08977235 -1.9637085  -2.7263017 ]]
Iteration 300 of 1000: loss=0.12 " + "l1=0.1" + "l2=0.0194 f=-0.707 shape=(1, 9000, 1)
logits [[ 1.3776857   0.09743991 -1.7053224  -2.597574  ]]
Iteration 400 of 1000: loss=0.109 " + "l1=0.0882" + "l2=0.0203 f=-0.703 shape=(1, 9000, 1)
logits [[ 1.08418    0.1228188 -1.6306548 -2.3871791]]
Iteration 500 of 1000: loss=0.0986 " + "l1=0.0784" + "l2=0.0202 f=-0.695 shape=(1, 9000, 1)
logits [[ 0.8434441   0.16116391 -1.5692623  -2.2151608 ]]
Iteration 600 of 1000: loss=0.0895 " + "l1=0.0685" + "l2=0.0209 f=-0.685 shape=(1, 9000, 1)
logits [[ 0.6086846   0.20707563 -1.499589   -2.0558445 ]]
Iteration 700 of 1000: loss=0.0749 " + "l1=0.0509" + "l2=0.024 f=-0.647 shape=(1, 9000, 1)
logits [[ 0.2915633   0.28800014 -1.2756227  -1.8926481 ]]
Iteration 800 of 1000: loss=0.0601 " + "l1=0.0404" + "l2=0.0197 f=-0.616 shape=(1, 9000, 1)
logits [[ 0.20845811  0.20700917 -1.0333794  -1.8471045 ]]
Iteration 900 of 1000: loss=0.0514 " + "l1=0.0331" + "l2=0.0183 f=-0.598 shape=(1, 9000, 1)
logits [[ 0.16029105  0.14958712 -0.8581864  -1.8455696 ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.193 " + "l1=0.193" + "l2=0 f=-0.71 shape=(1, 9000, 1)
logits [[ 2.4638753  -0.33560073 -1.9583488  -3.0095503 ]]
Iteration 100 of 1000: loss=0.177 " + "l1=0.171" + "l2=0.00625 f=-0.728 shape=(1, 9000, 1)
logits [[ 1.936883   -0.11482001 -1.9726961  -2.7596385 ]]
Iteration 200 of 1000: loss=0.16 " + "l1=0.14" + "l2=0.0197 f=-0.715 shape=(1, 9000, 1)
logits [[ 1.4293457   0.10111466 -1.7808444  -2.6093285 ]]
Iteration 300 of 1000: loss=0.138 " + "l1=0.107" + "l2=0.0305 f=-0.691 shape=(1, 9000, 1)
logits [[ 0.83388186  0.31478655 -1.6184878  -2.292759  ]]
Iteration 400 of 1000: loss=0.104 " + "l1=0.0704" + "l2=0.0335 f=-0.647 shape=(1, 9000, 1)
logits [[ 0.38331446  0.3919282  -1.2180878  -2.1445613 ]]
Iteration 500 of 1000: loss=0.0901 " + "l1=0.0569" + "l2=0.0332 f=-0.627 shape=(1, 9000, 1)
logits [[ 0.2724166   0.26867282 -1.0278082  -2.0224006 ]]
Iteration 600 of 1000: loss=0.0804 " + "l1=0.049" + "l2=0.0314 f=-0.618 shape=(1, 9000, 1)
logits [[ 0.18787938  0.18396662 -0.93219656 -1.9114076 ]]
Iteration 700 of 1000: loss=0.072 " + "l1=0.041" + "l2=0.031 f=-0.608 shape=(1, 9000, 1)
logits [[ 0.10575725  0.10703218 -0.8302324  -1.813689  ]]
Iteration 800 of 1000: loss=0.0642 " + "l1=0.0299" + "l2=0.0343 f=-0.614 shape=(1, 9000, 1)
logits [[-0.03788561 -0.05421363 -0.72181225 -1.6402073 ]]
Iteration 900 of 1000: loss=0.059 " + "l1=0.0239" + "l2=0.0351 f=-0.607 shape=(1, 9000, 1)
logits [[-0.1136675  -0.11704167 -0.6601807  -1.5378176 ]]
--- 314.1923007965088 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0547 " + "l1=0.0547" + "l2=0 f=-0.71 shape=(1, 9000, 1)
logits [[ 2.4638753  -0.33560073 -1.9583488  -3.0095503 ]]
Iteration 100 of 1000: loss=0.0522 " + "l1=0.0513" + "l2=0.000942 f=-0.715 shape=(1, 9000, 1)
logits [[ 2.2597506 -0.2584954 -1.9928713 -2.8672953]]
Iteration 200 of 1000: loss=0.0509 " + "l1=0.0496" + "l2=0.00132 f=-0.717 shape=(1, 9000, 1)
logits [[ 2.1644218  -0.22673047 -2.0097518  -2.7975605 ]]
Iteration 300 of 1000: loss=0.0496 " + "l1=0.0479" + "l2=0.00177 f=-0.72 shape=(1, 9000, 1)
logits [[ 2.0668182  -0.19645576 -2.0283165  -2.7207437 ]]
Iteration 400 of 1000: loss=0.0484 " + "l1=0.0461" + "l2=0.00228 f=-0.722 shape=(1, 9000, 1)
logits [[ 1.9719155  -0.16837764 -2.049485   -2.640961  ]]
Iteration 500 of 1000: loss=0.0472 " + "l1=0.0444" + "l2=0.00287 f=-0.723 shape=(1, 9000, 1)
logits [[ 1.8796493  -0.14460982 -2.0723326  -2.5562992 ]]
Iteration 600 of 1000: loss=0.0459 " + "l1=0.0424" + "l2=0.00349 f=-0.726 shape=(1, 9000, 1)
logits [[ 1.779573   -0.12270295 -2.0984032  -2.461071  ]]
Iteration 700 of 1000: loss=0.0443 " + "l1=0.0401" + "l2=0.00425 f=-0.728 shape=(1, 9000, 1)
logits [[ 1.665354   -0.10431416 -2.1283848  -2.3434215 ]]
Iteration 800 of 1000: loss=0.0426 " + "l1=0.0376" + "l2=0.00499 f=-0.728 shape=(1, 9000, 1)
logits [[ 1.5449965 -0.0914454 -2.152023  -2.2147763]]
Iteration 900 of 1000: loss=0.0408 " + "l1=0.0349" + "l2=0.00584 f=-0.728 shape=(1, 9000, 1)
logits [[ 1.4153904  -0.08025766 -2.1705244  -2.0777817 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.547 " + "l1=0.547" + "l2=0 f=-0.71 shape=(1, 9000, 1)
logits [[ 2.4638753  -0.33560073 -1.9583488  -3.0095503 ]]
Iteration 100 of 1000: loss=0.253 " + "l1=0.148" + "l2=0.105 f=-0.722 shape=(1, 9000, 1)
logits [[ 0.2697558  0.2601188 -2.2068977 -1.2116227]]
Iteration 200 of 1000: loss=0.103 " + "l1=0" + "l2=0.103 f=-0.671 shape=(1, 9000, 1)
logits [[-0.17312084 -0.16098373 -2.194928   -0.1556285 ]]
Iteration 300 of 1000: loss=0.059 " + "l1=0" + "l2=0.059 f=-0.672 shape=(1, 9000, 1)
logits [[-0.15355441 -0.16355993 -2.2186024  -0.15185073]]
Iteration 400 of 1000: loss=0.0419 " + "l1=0" + "l2=0.0419 f=-0.658 shape=(1, 9000, 1)
logits [[-0.15728083 -0.15803532 -2.1656663  -0.15157542]]
Iteration 500 of 1000: loss=0.0325 " + "l1=0" + "l2=0.0325 f=-0.645 shape=(1, 9000, 1)
logits [[-0.18546537 -0.1724362  -2.0851722  -0.13601303]]
Iteration 600 of 1000: loss=0.0257 " + "l1=0.000658" + "l2=0.025 f=-0.635 shape=(1, 9000, 1)
logits [[-0.17750534 -0.17923388 -1.9973954  -0.1840831 ]]
Iteration 700 of 1000: loss=0.0216 " + "l1=0.000912" + "l2=0.0207 f=-0.627 shape=(1, 9000, 1)
logits [[-0.1796046  -0.20246719 -1.9377111  -0.18871984]]
Iteration 800 of 1000: loss=0.0186 " + "l1=0" + "l2=0.0186 f=-0.621 shape=(1, 9000, 1)
logits [[-0.23665118 -0.20190495 -1.9074223  -0.13870552]]
Iteration 900 of 1000: loss=0.0164 " + "l1=0" + "l2=0.0164 f=-0.619 shape=(1, 9000, 1)
logits [[-0.23494881 -0.19930898 -1.9003706  -0.14080992]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.301 " + "l1=0.301" + "l2=0 f=-0.71 shape=(1, 9000, 1)
logits [[ 2.4638753  -0.33560073 -1.9583488  -3.0095503 ]]
Iteration 100 of 1000: loss=0.211 " + "l1=0.177" + "l2=0.0347 f=-0.742 shape=(1, 9000, 1)
logits [[ 1.1650195   0.07929321 -2.1658163  -2.0461714 ]]
Iteration 200 of 1000: loss=0.14 " + "l1=0.0774" + "l2=0.0621 f=-0.723 shape=(1, 9000, 1)
logits [[ 0.2761114   0.22448878 -2.2612689  -1.1312554 ]]
Iteration 300 of 1000: loss=0.0804 " + "l1=0.0152" + "l2=0.0652 f=-0.685 shape=(1, 9000, 1)
logits [[-0.09120119 -0.08831385 -2.1972558  -0.36438647]]
Iteration 400 of 1000: loss=0.0472 " + "l1=0" + "l2=0.0472 f=-0.674 shape=(1, 9000, 1)
logits [[-0.17269994 -0.17159322 -2.1833909  -0.16795138]]
Iteration 500 of 1000: loss=0.0345 " + "l1=4.81e-05" + "l2=0.0344 f=-0.666 shape=(1, 9000, 1)
logits [[-0.16220546 -0.16520216 -2.1719763  -0.16308057]]
Iteration 600 of 1000: loss=0.0271 " + "l1=0" + "l2=0.0271 f=-0.656 shape=(1, 9000, 1)
logits [[-0.1747685  -0.17430778 -2.1151135  -0.15968814]]
Iteration 700 of 1000: loss=0.0221 " + "l1=0" + "l2=0.0221 f=-0.649 shape=(1, 9000, 1)
logits [[-0.18138301 -0.17095964 -2.0739694  -0.16845706]]
Iteration 800 of 1000: loss=0.0187 " + "l1=0" + "l2=0.0187 f=-0.642 shape=(1, 9000, 1)
logits [[-0.17304316 -0.1860487  -2.036773   -0.17246422]]
Iteration 900 of 1000: loss=0.0164 " + "l1=2.49e-05" + "l2=0.0163 f=-0.634 shape=(1, 9000, 1)
logits [[-0.17646764 -0.18583283 -1.9984158  -0.17692101]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.178 " + "l1=0.178" + "l2=0 f=-0.71 shape=(1, 9000, 1)
logits [[ 2.4638753  -0.33560073 -1.9583488  -3.0095503 ]]
Iteration 100 of 1000: loss=0.149 " + "l1=0.138" + "l2=0.0112 f=-0.728 shape=(1, 9000, 1)
logits [[ 1.742178   -0.08506212 -2.0709155  -2.497239  ]]
Iteration 200 of 1000: loss=0.127 " + "l1=0.107" + "l2=0.0196 f=-0.739 shape=(1, 9000, 1)
logits [[ 1.228076    0.04268424 -2.1458092  -2.0793111 ]]
Iteration 300 of 1000: loss=0.104 " + "l1=0.0756" + "l2=0.0282 f=-0.732 shape=(1, 9000, 1)
logits [[ 0.7413499   0.12173656 -2.2049072  -1.5857582 ]]
Iteration 400 of 1000: loss=0.0781 " + "l1=0.0412" + "l2=0.0369 f=-0.706 shape=(1, 9000, 1)
logits [[ 0.22783071  0.1280697  -2.1384077  -1.0409981 ]]
Iteration 500 of 1000: loss=0.0559 " + "l1=0.0186" + "l2=0.0373 f=-0.684 shape=(1, 9000, 1)
logits [[-0.00464737 -0.00380498 -2.150994   -0.57690865]]
Iteration 600 of 1000: loss=0.0377 " + "l1=0" + "l2=0.0377 f=-0.663 shape=(1, 9000, 1)
logits [[-0.16533741 -0.16278405 -2.1688266  -0.15685144]]
Iteration 700 of 1000: loss=0.0282 " + "l1=0" + "l2=0.0282 f=-0.657 shape=(1, 9000, 1)
logits [[-0.16873427 -0.16663505 -2.134616   -0.15739593]]
Iteration 800 of 1000: loss=0.023 " + "l1=0.000142" + "l2=0.0229 f=-0.647 shape=(1, 9000, 1)
logits [[-0.17449501 -0.1797621  -2.0530174  -0.17884964]]
Iteration 900 of 1000: loss=0.0196 " + "l1=0" + "l2=0.0196 f=-0.638 shape=(1, 9000, 1)
logits [[-0.19440004 -0.17911978 -2.002309   -0.17635778]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.116 " + "l1=0.116" + "l2=0 f=-0.71 shape=(1, 9000, 1)
logits [[ 2.4638753  -0.33560073 -1.9583488  -3.0095503 ]]
Iteration 100 of 1000: loss=0.105 " + "l1=0.1" + "l2=0.0043 f=-0.721 shape=(1, 9000, 1)
logits [[ 2.019795  -0.1747494 -2.0289433 -2.7000327]]
Iteration 200 of 1000: loss=0.0978 " + "l1=0.0911" + "l2=0.00676 f=-0.727 shape=(1, 9000, 1)
logits [[ 1.7763417  -0.09918641 -2.076665   -2.5093563 ]]
Iteration 300 of 1000: loss=0.0895 " + "l1=0.0793" + "l2=0.0102 f=-0.735 shape=(1, 9000, 1)
logits [[ 1.4764496  -0.02663758 -2.133377   -2.255944  ]]
Iteration 400 of 1000: loss=0.0798 " + "l1=0.0656" + "l2=0.0142 f=-0.736 shape=(1, 9000, 1)
logits [[ 1.1431521   0.03710427 -2.1799958  -1.9441569 ]]
Iteration 500 of 1000: loss=0.0702 " + "l1=0.0525" + "l2=0.0177 f=-0.727 shape=(1, 9000, 1)
logits [[ 0.8465252  0.0568891 -2.189479  -1.6226056]]
Iteration 600 of 1000: loss=0.0586 " + "l1=0.0367" + "l2=0.0219 f=-0.707 shape=(1, 9000, 1)
logits [[ 0.48957053  0.03464587 -2.1151657  -1.2372583 ]]
Iteration 700 of 1000: loss=0.0484 " + "l1=0.0239" + "l2=0.0246 f=-0.694 shape=(1, 9000, 1)
logits [[ 0.22769824  0.01356195 -2.12276    -0.89570445]]
Iteration 800 of 1000: loss=0.0381 " + "l1=0.0118" + "l2=0.0263 f=-0.673 shape=(1, 9000, 1)
logits [[-0.00711165 -0.01218051 -2.1120787  -0.56237394]]
Iteration 900 of 1000: loss=0.0296 " + "l1=0.00434" + "l2=0.0252 f=-0.655 shape=(1, 9000, 1)
logits [[-0.11018829 -0.10948353 -2.086573   -0.313919  ]]
--- 313.98695945739746 seconds ---
Adv result:3
Loading record A02649
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.064 " + "l1=0.064" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.477892  -2.9268274  2.7927945 -5.114152 ]]
Iteration 100 of 1000: loss=0.0638 " + "l1=0.0636" + "l2=0.000193 f=-0.442 shape=(1, 9000, 1)
logits [[ 3.4481275 -2.914771   2.7803078 -5.079789 ]]
Iteration 200 of 1000: loss=0.0638 " + "l1=0.0636" + "l2=0.000178 f=-0.442 shape=(1, 9000, 1)
logits [[ 3.444933  -2.9132736  2.778265  -5.0760765]]
Iteration 300 of 1000: loss=0.0637 " + "l1=0.0635" + "l2=0.000231 f=-0.441 shape=(1, 9000, 1)
logits [[ 3.4396849 -2.9109786  2.7753248 -5.069659 ]]
Iteration 400 of 1000: loss=0.0637 " + "l1=0.0634" + "l2=0.000269 f=-0.441 shape=(1, 9000, 1)
logits [[ 3.4342976 -2.908634   2.7722616 -5.0629683]]
Iteration 500 of 1000: loss=0.0637 " + "l1=0.0634" + "l2=0.00033 f=-0.441 shape=(1, 9000, 1)
logits [[ 3.4289548 -2.906365   2.7691236 -5.0562935]]
Iteration 600 of 1000: loss=0.0637 " + "l1=0.0633" + "l2=0.000418 f=-0.441 shape=(1, 9000, 1)
logits [[ 3.4238496 -2.904197   2.7660975 -5.049913 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.64 " + "l1=0.64" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.477892  -2.9268274  2.7927945 -5.114152 ]]
Iteration 100 of 1000: loss=0.62 " + "l1=0.609" + "l2=0.0113 f=-0.435 shape=(1, 9000, 1)
logits [[ 3.2572412 -2.8303514  2.6958838 -4.8638277]]
Iteration 200 of 1000: loss=0.611 " + "l1=0.594" + "l2=0.0165 f=-0.432 shape=(1, 9000, 1)
logits [[ 3.157125  -2.7855654  2.6464038 -4.746393 ]]
Iteration 300 of 1000: loss=0.603 " + "l1=0.582" + "l2=0.021 f=-0.43 shape=(1, 9000, 1)
logits [[ 3.0721443 -2.74695    2.5997372 -4.6430497]]
Iteration 400 of 1000: loss=0.596 " + "l1=0.572" + "l2=0.0244 f=-0.427 shape=(1, 9000, 1)
logits [[ 3.001079  -2.7142363  2.5587523 -4.553091 ]]
Iteration 500 of 1000: loss=0.59 " + "l1=0.561" + "l2=0.0283 f=-0.424 shape=(1, 9000, 1)
logits [[ 2.9310887 -2.6815693  2.5169337 -4.461267 ]]
Iteration 600 of 1000: loss=0.583 " + "l1=0.551" + "l2=0.0322 f=-0.421 shape=(1, 9000, 1)
logits [[ 2.8630042 -2.648999   2.4756105 -4.371851 ]]
Iteration 700 of 1000: loss=0.578 " + "l1=0.542" + "l2=0.0356 f=-0.418 shape=(1, 9000, 1)
logits [[ 2.8006039 -2.6213214  2.440991  -4.2913556]]
Iteration 800 of 1000: loss=0.572 " + "l1=0.534" + "l2=0.0383 f=-0.415 shape=(1, 9000, 1)
logits [[ 2.7438047 -2.5965624  2.4116468 -4.2180057]]
Iteration 900 of 1000: loss=0.567 " + "l1=0.526" + "l2=0.0406 f=-0.412 shape=(1, 9000, 1)
logits [[ 2.6923761 -2.5702577  2.3851764 -4.1544085]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.4 " + "l1=6.4" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.477892  -2.9268274  2.7927945 -5.114152 ]]
Iteration 100 of 1000: loss=4.54 " + "l1=3.79" + "l2=0.751 f=-0.324 shape=(1, 9000, 1)
logits [[ 1.8546726 -1.9331087  1.8474998 -3.0656862]]
Iteration 200 of 1000: loss=3.83 " + "l1=2.91" + "l2=0.926 f=-0.285 shape=(1, 9000, 1)
logits [[ 1.3851012 -1.5181108  1.3890746 -2.394149 ]]
Iteration 300 of 1000: loss=3.16 " + "l1=2" + "l2=1.16 f=-0.279 shape=(1, 9000, 1)
logits [[ 0.8941541 -1.1025349  0.8986999 -1.8055937]]
Iteration 400 of 1000: loss=2.66 " + "l1=1.36" + "l2=1.31 f=-0.271 shape=(1, 9000, 1)
logits [[ 0.5373385 -0.7967753  0.5620044 -1.385734 ]]
Iteration 500 of 1000: loss=2.36 " + "l1=1.08" + "l2=1.28 f=-0.256 shape=(1, 9000, 1)
logits [[ 0.39749113 -0.6698516   0.40896654 -1.1590883 ]]
Iteration 600 of 1000: loss=2.17 " + "l1=0.849" + "l2=1.32 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.27051306 -0.5666166   0.2822835  -0.91196835]]
Iteration 700 of 1000: loss=2.04 " + "l1=0.754" + "l2=1.29 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.21658483 -0.5335252   0.22092618 -0.78218997]]
Iteration 800 of 1000: loss=1.95 " + "l1=0.684" + "l2=1.26 f=-0.207 shape=(1, 9000, 1)
logits [[ 0.16806963 -0.50576574  0.17856589 -0.67048025]]
Iteration 900 of 1000: loss=1.85 " + "l1=0.614" + "l2=1.24 f=-0.19 shape=(1, 9000, 1)
logits [[ 0.13263142 -0.47492874  0.1392201  -0.55688065]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=64 " + "l1=64" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.477892  -2.9268274  2.7927945 -5.114152 ]]
Iteration 100 of 1000: loss=10.6 " + "l1=0.121" + "l2=10.4 f=-0.166 shape=(1, 9000, 1)
logits [[-0.36505312 -0.03184704 -0.01974788 -0.2465516 ]]
Iteration 200 of 1000: loss=7.24 " + "l1=0.112" + "l2=7.13 f=-0.191 shape=(1, 9000, 1)
logits [[-0.35696182 -0.06592739 -0.05477611 -0.28708464]]
Iteration 300 of 1000: loss=5.92 " + "l1=0" + "l2=5.92 f=-0.205 shape=(1, 9000, 1)
logits [[-0.3456584  -0.02824635 -0.04088465 -0.40357664]]
Iteration 400 of 1000: loss=5.09 " + "l1=0.0377" + "l2=5.05 f=-0.213 shape=(1, 9000, 1)
logits [[-0.3020261  -0.02966152 -0.0258884  -0.49362665]]
Iteration 500 of 1000: loss=4.51 " + "l1=0.031" + "l2=4.48 f=-0.222 shape=(1, 9000, 1)
logits [[-0.26872    -0.02094869 -0.01785259 -0.57925546]]
Iteration 600 of 1000: loss=4.1 " + "l1=0" + "l2=4.1 f=-0.227 shape=(1, 9000, 1)
logits [[-0.24364486 -0.01018448 -0.01897031 -0.6333378 ]]
Iteration 700 of 1000: loss=3.75 " + "l1=0" + "l2=3.75 f=-0.232 shape=(1, 9000, 1)
logits [[-0.21402186 -0.01099895 -0.01912453 -0.6825669 ]]
Iteration 800 of 1000: loss=3.52 " + "l1=0" + "l2=3.52 f=-0.236 shape=(1, 9000, 1)
logits [[-0.22751099 -0.00248382 -0.03115279 -0.684313  ]]
Iteration 900 of 1000: loss=3.27 " + "l1=0" + "l2=3.27 f=-0.234 shape=(1, 9000, 1)
logits [[-0.20184317 -0.01446553 -0.02609027 -0.69447637]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=35.2 " + "l1=35.2" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.477892  -2.9268274  2.7927945 -5.114152 ]]
Iteration 100 of 1000: loss=9.48 " + "l1=1.31" + "l2=8.17 f=-0.173 shape=(1, 9000, 1)
logits [[-0.20242023 -0.20623194  0.03241227 -0.31569138]]
Iteration 200 of 1000: loss=5.73 " + "l1=0" + "l2=5.73 f=-0.208 shape=(1, 9000, 1)
logits [[-0.33740667 -0.05707083 -0.06202711 -0.37611037]]
Iteration 300 of 1000: loss=4.57 " + "l1=0" + "l2=4.57 f=-0.217 shape=(1, 9000, 1)
logits [[-0.29402295 -0.04085976 -0.04175036 -0.49191028]]
Iteration 400 of 1000: loss=3.95 " + "l1=0.076" + "l2=3.87 f=-0.228 shape=(1, 9000, 1)
logits [[-0.2509979  -0.03773699 -0.02391748 -0.6005961 ]]
Iteration 500 of 1000: loss=3.49 " + "l1=0.0419" + "l2=3.45 f=-0.239 shape=(1, 9000, 1)
logits [[-0.23934987 -0.02797937 -0.02036754 -0.66679126]]
Iteration 600 of 1000: loss=3.15 " + "l1=0" + "l2=3.15 f=-0.239 shape=(1, 9000, 1)
logits [[-0.21475682 -0.02520086 -0.03100251 -0.68402743]]
Iteration 700 of 1000: loss=2.9 " + "l1=0" + "l2=2.9 f=-0.237 shape=(1, 9000, 1)
logits [[-0.17402571 -0.03000593 -0.0338845  -0.70997685]]
Iteration 800 of 1000: loss=2.72 " + "l1=0" + "l2=2.72 f=-0.233 shape=(1, 9000, 1)
logits [[-0.13933878 -0.03224928 -0.04310607 -0.7175903 ]]
Iteration 900 of 1000: loss=2.56 " + "l1=0" + "l2=2.56 f=-0.23 shape=(1, 9000, 1)
logits [[-0.12430032 -0.04843187 -0.05403593 -0.6952228 ]]
--- 291.5805513858795 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00685 " + "l1=0.00685" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.477892  -2.9268274  2.7927945 -5.114152 ]]
Iteration 100 of 1000: loss=0.00677 " + "l1=0.00665" + "l2=0.000111 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.4576468 -2.9262192  2.7921662 -5.09384  ]]
Iteration 200 of 1000: loss=0.00673 " + "l1=0.00665" + "l2=8.15e-05 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.4578505 -2.9265316  2.792548  -5.094304 ]]
Iteration 300 of 1000: loss=0.00673 " + "l1=0.00663" + "l2=0.000102 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.4559774 -2.9266872  2.792722  -5.092483 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0685 " + "l1=0.0685" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.477892  -2.9268274  2.7927945 -5.114152 ]]
Iteration 100 of 1000: loss=0.0607 " + "l1=0.0564" + "l2=0.00426 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.356939  -2.9244876  2.7924442 -4.9964647]]
Iteration 200 of 1000: loss=0.0581 " + "l1=0.0522" + "l2=0.00584 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.3162577 -2.9262     2.7939332 -4.956556 ]]
Iteration 300 of 1000: loss=0.0561 " + "l1=0.0488" + "l2=0.00733 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.2816675 -2.9262147  2.794163  -4.9223533]]
Iteration 400 of 1000: loss=0.0543 " + "l1=0.0456" + "l2=0.00873 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.249915  -2.9265804  2.7938817 -4.8903227]]
Iteration 500 of 1000: loss=0.0526 " + "l1=0.0427" + "l2=0.00993 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.2214143 -2.9262283  2.794297  -4.860721 ]]
Iteration 600 of 1000: loss=0.0509 " + "l1=0.0396" + "l2=0.0113 f=-0.442 shape=(1, 9000, 1)
logits [[ 3.1924174 -2.9250724  2.7961404 -4.831351 ]]
Iteration 700 of 1000: loss=0.0489 " + "l1=0.0366" + "l2=0.0123 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.1653445 -2.922724   2.7998226 -4.803653 ]]
Iteration 800 of 1000: loss=0.0469 " + "l1=0.0335" + "l2=0.0133 f=-0.439 shape=(1, 9000, 1)
logits [[ 3.1382606 -2.9202192  2.802899  -4.776652 ]]
Iteration 900 of 1000: loss=0.045 " + "l1=0.0306" + "l2=0.0144 f=-0.437 shape=(1, 9000, 1)
logits [[ 3.1135461 -2.9173067  2.8076358 -4.7533555]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.685 " + "l1=0.685" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.477892  -2.9268274  2.7927945 -5.114152 ]]
Iteration 100 of 1000: loss=0.122 " + "l1=0" + "l2=0.122 f=-0.44 shape=(1, 9000, 1)
logits [[ 2.787394  -2.921561   2.7878783 -4.4153323]]
Iteration 200 of 1000: loss=0.0868 " + "l1=0" + "l2=0.0868 f=-0.44 shape=(1, 9000, 1)
logits [[ 2.789217  -2.9226558  2.7919428 -4.416862 ]]
Iteration 300 of 1000: loss=0.0724 " + "l1=0" + "l2=0.0724 f=-0.437 shape=(1, 9000, 1)
logits [[ 2.7907314 -2.9204874  2.7940226 -4.4127545]]
Iteration 400 of 1000: loss=0.0627 " + "l1=0" + "l2=0.0627 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.7907484 -2.9174001  2.7969704 -4.4087753]]
Iteration 500 of 1000: loss=0.0581 " + "l1=0" + "l2=0.0581 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.778208  -2.9132247  2.8005748 -4.3956995]]
Iteration 600 of 1000: loss=0.0475 " + "l1=0" + "l2=0.0475 f=-0.43 shape=(1, 9000, 1)
logits [[ 2.804356  -2.9114587  2.8066673 -4.419065 ]]
Iteration 700 of 1000: loss=0.043 " + "l1=0" + "l2=0.043 f=-0.428 shape=(1, 9000, 1)
logits [[ 2.8045216 -2.9072385  2.8135607 -4.4211245]]
Iteration 800 of 1000: loss=0.0387 " + "l1=0" + "l2=0.0387 f=-0.426 shape=(1, 9000, 1)
logits [[ 2.812981  -2.904695   2.8195326 -4.43177  ]]
Iteration 900 of 1000: loss=0.0364 " + "l1=0" + "l2=0.0364 f=-0.425 shape=(1, 9000, 1)
logits [[ 2.8149128 -2.9033468  2.827223  -4.4368644]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.377 " + "l1=0.377" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.477892  -2.9268274  2.7927945 -5.114152 ]]
Iteration 100 of 1000: loss=0.137 " + "l1=0.00973" + "l2=0.127 f=-0.442 shape=(1, 9000, 1)
logits [[ 2.8083665 -2.924304   2.7906737 -4.4437914]]
Iteration 200 of 1000: loss=0.0872 " + "l1=0" + "l2=0.0872 f=-0.439 shape=(1, 9000, 1)
logits [[ 2.7994363 -2.9274428  2.8033268 -4.4328523]]
Iteration 300 of 1000: loss=0.0713 " + "l1=0.00217" + "l2=0.0691 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.80804   -2.9229987  2.8040953 -4.431275 ]]
Iteration 400 of 1000: loss=0.0611 " + "l1=0" + "l2=0.0611 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.7980294 -2.918849   2.8069198 -4.4177547]]
Iteration 500 of 1000: loss=0.0518 " + "l1=0" + "l2=0.0518 f=-0.43 shape=(1, 9000, 1)
logits [[ 2.80334   -2.9146643  2.8099923 -4.419349 ]]
Iteration 600 of 1000: loss=0.0441 " + "l1=0" + "l2=0.0441 f=-0.427 shape=(1, 9000, 1)
logits [[ 2.8163362 -2.9099524  2.8188498 -4.434666 ]]
Iteration 700 of 1000: loss=0.0405 " + "l1=0.00244" + "l2=0.0381 f=-0.425 shape=(1, 9000, 1)
logits [[ 2.8315463 -2.9080806  2.827112  -4.4499974]]
Iteration 800 of 1000: loss=0.0355 " + "l1=0" + "l2=0.0355 f=-0.424 shape=(1, 9000, 1)
logits [[ 2.8315284 -2.9061487  2.8372922 -4.4569187]]
Iteration 900 of 1000: loss=0.0317 " + "l1=0" + "l2=0.0317 f=-0.423 shape=(1, 9000, 1)
logits [[ 2.8449826 -2.9058194  2.8477256 -4.4779844]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.223 " + "l1=0.223" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.477892  -2.9268274  2.7927945 -5.114152 ]]
Iteration 100 of 1000: loss=0.139 " + "l1=0.0928" + "l2=0.0466 f=-0.442 shape=(1, 9000, 1)
logits [[ 3.079788  -2.9236076  2.7942362 -4.7190766]]
Iteration 200 of 1000: loss=0.103 " + "l1=0.034" + "l2=0.0694 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.9061995 -2.9292612  2.801564  -4.549376 ]]
Iteration 300 of 1000: loss=0.0766 " + "l1=0.00445" + "l2=0.0721 f=-0.437 shape=(1, 9000, 1)
logits [[ 2.8239238 -2.927102   2.8102417 -4.453916 ]]
Iteration 400 of 1000: loss=0.0613 " + "l1=0.000759" + "l2=0.0605 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.8148282 -2.9213452  2.8124938 -4.4360757]]
Iteration 500 of 1000: loss=0.0512 " + "l1=0.000395" + "l2=0.0508 f=-0.429 shape=(1, 9000, 1)
logits [[ 2.81854   -2.9170706  2.8173237 -4.4359584]]
Iteration 600 of 1000: loss=0.0433 " + "l1=0.00122" + "l2=0.0421 f=-0.426 shape=(1, 9000, 1)
logits [[ 2.8310654 -2.9119463  2.827322  -4.4503217]]
Iteration 700 of 1000: loss=0.0378 " + "l1=0" + "l2=0.0378 f=-0.424 shape=(1, 9000, 1)
logits [[ 2.8350387 -2.910141   2.838684  -4.458295 ]]
Iteration 800 of 1000: loss=0.0329 " + "l1=0" + "l2=0.0329 f=-0.423 shape=(1, 9000, 1)
logits [[ 2.8479965 -2.908617   2.8508754 -4.480979 ]]
Iteration 900 of 1000: loss=0.0305 " + "l1=0.000543" + "l2=0.0299 f=-0.422 shape=(1, 9000, 1)
logits [[ 2.8585086 -2.9081607  2.8568385 -4.4962835]]
--- 273.9943151473999 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0859 " + "l1=0.0859" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.477892  -2.9268274  2.7927945 -5.114152 ]]
Iteration 100 of 1000: loss=0.0852 " + "l1=0.0848" + "l2=0.000449 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.4304368 -2.918719   2.774311  -5.0475774]]
Iteration 200 of 1000: loss=0.085 " + "l1=0.0846" + "l2=0.000468 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.4209118 -2.9173398  2.7696943 -5.034702 ]]
Iteration 300 of 1000: loss=0.0848 " + "l1=0.0843" + "l2=0.000555 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.409247  -2.9156191  2.763949  -5.0186515]]
Iteration 400 of 1000: loss=0.0847 " + "l1=0.084" + "l2=0.000705 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.3973534 -2.913928   2.7577846 -5.001994 ]]
Iteration 500 of 1000: loss=0.0845 " + "l1=0.0837" + "l2=0.00082 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.3858728 -2.9122608  2.7514493 -4.9856243]]
Iteration 600 of 1000: loss=0.0845 " + "l1=0.0834" + "l2=0.001 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.374947  -2.910765   2.7452335 -4.9698243]]
Iteration 700 of 1000: loss=0.0844 " + "l1=0.0832" + "l2=0.00119 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.3645718 -2.9094367  2.7392907 -4.9547005]]
Iteration 800 of 1000: loss=0.0842 " + "l1=0.083" + "l2=0.00127 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.3552194 -2.9083023  2.7336872 -4.941225 ]]
Iteration 900 of 1000: loss=0.0842 " + "l1=0.0828" + "l2=0.00146 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.34656   -2.9073608  2.7285225 -4.9286227]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.859 " + "l1=0.859" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.477892  -2.9268274  2.7927945 -5.114152 ]]
Iteration 100 of 1000: loss=0.794 " + "l1=0.759" + "l2=0.0357 f=-0.424 shape=(1, 9000, 1)
logits [[ 3.0642679 -2.8605254  2.6248162 -4.523793 ]]
Iteration 200 of 1000: loss=0.763 " + "l1=0.713" + "l2=0.0503 f=-0.418 shape=(1, 9000, 1)
logits [[ 2.871799  -2.8257194  2.5360992 -4.2550907]]
Iteration 300 of 1000: loss=0.736 " + "l1=0.673" + "l2=0.0626 f=-0.411 shape=(1, 9000, 1)
logits [[ 2.7101717 -2.7858973  2.455928  -4.0227695]]
Iteration 400 of 1000: loss=0.712 " + "l1=0.637" + "l2=0.0756 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.5625496 -2.7423072  2.3740325 -3.8036704]]
Iteration 500 of 1000: loss=0.69 " + "l1=0.602" + "l2=0.0879 f=-0.393 shape=(1, 9000, 1)
logits [[ 2.4251423 -2.7021308  2.2949178 -3.5914645]]
Iteration 600 of 1000: loss=0.668 " + "l1=0.569" + "l2=0.0991 f=-0.384 shape=(1, 9000, 1)
logits [[ 2.2986295 -2.6691716  2.2266858 -3.393094 ]]
Iteration 700 of 1000: loss=0.649 " + "l1=0.539" + "l2=0.11 f=-0.376 shape=(1, 9000, 1)
logits [[ 2.1810143 -2.6349158  2.1549108 -3.2042358]]
Iteration 800 of 1000: loss=0.631 " + "l1=0.513" + "l2=0.117 f=-0.368 shape=(1, 9000, 1)
logits [[ 2.0881681 -2.6058643  2.089072  -3.0432436]]
Iteration 900 of 1000: loss=0.613 " + "l1=0.496" + "l2=0.117 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.0308218 -2.5831385  2.0295568 -2.9284847]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.59 " + "l1=8.59" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.477892  -2.9268274  2.7927945 -5.114152 ]]
Iteration 100 of 1000: loss=4.18 " + "l1=2.22" + "l2=1.95 f=-0.199 shape=(1, 9000, 1)
logits [[ 0.8681312  -2.1841109   1.3713404  -0.85247415]]
Iteration 200 of 1000: loss=2.65 " + "l1=0.298" + "l2=2.35 f=-0.152 shape=(1, 9000, 1)
logits [[ 0.04428902 -1.7829416   0.71406513  0.41563264]]
Iteration 300 of 1000: loss=1.86 " + "l1=0.0146" + "l2=1.85 f=-0.161 shape=(1, 9000, 1)
logits [[-0.09150065 -1.701774    0.5814997   0.56687355]]
Iteration 400 of 1000: loss=1.49 " + "l1=0.0217" + "l2=1.47 f=-0.17 shape=(1, 9000, 1)
logits [[-0.11627659 -1.6531727   0.55654174  0.5348109 ]]
Iteration 500 of 1000: loss=1.28 " + "l1=0" + "l2=1.28 f=-0.175 shape=(1, 9000, 1)
logits [[-0.15717751 -1.6311059   0.53684     0.5513563 ]]
Iteration 600 of 1000: loss=1.15 " + "l1=0" + "l2=1.15 f=-0.181 shape=(1, 9000, 1)
logits [[-0.17437075 -1.6396818   0.5363741   0.5556771 ]]
Iteration 700 of 1000: loss=1.06 " + "l1=0.0153" + "l2=1.04 f=-0.186 shape=(1, 9000, 1)
logits [[-0.17216918 -1.6613524   0.55228144  0.5369714 ]]
Iteration 800 of 1000: loss=0.975 " + "l1=0" + "l2=0.975 f=-0.189 shape=(1, 9000, 1)
logits [[-0.18974455 -1.6712573   0.55258393  0.5538449 ]]
Iteration 900 of 1000: loss=0.922 " + "l1=0" + "l2=0.922 f=-0.19 shape=(1, 9000, 1)
logits [[-0.19637582 -1.6822752   0.55523974  0.5636985 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.73 " + "l1=4.73" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.477892  -2.9268274  2.7927945 -5.114152 ]]
Iteration 100 of 1000: loss=3.08 " + "l1=2.39" + "l2=0.684 f=-0.299 shape=(1, 9000, 1)
logits [[ 1.8007292 -2.479758   1.9176655 -2.4343543]]
Iteration 200 of 1000: loss=2.43 " + "l1=1.5" + "l2=0.925 f=-0.239 shape=(1, 9000, 1)
logits [[ 1.0890397 -2.2208068  1.4520433 -1.2769727]]
Iteration 300 of 1000: loss=1.91 " + "l1=0.866" + "l2=1.04 f=-0.191 shape=(1, 9000, 1)
logits [[ 0.638506  -2.0154052  1.0936686 -0.4800162]]
Iteration 400 of 1000: loss=1.51 " + "l1=0.401" + "l2=1.11 f=-0.162 shape=(1, 9000, 1)
logits [[ 0.28853595 -1.8147504   0.8036161   0.0754235 ]]
Iteration 500 of 1000: loss=1.19 " + "l1=0.00133" + "l2=1.19 f=-0.142 shape=(1, 9000, 1)
logits [[-0.04988538 -1.6342305   0.55836666  0.55594265]]
Iteration 600 of 1000: loss=1.01 " + "l1=0" + "l2=1.01 f=-0.144 shape=(1, 9000, 1)
logits [[-0.06384718 -1.625204    0.5523358   0.5602104 ]]
Iteration 700 of 1000: loss=0.894 " + "l1=0.0106" + "l2=0.883 f=-0.148 shape=(1, 9000, 1)
logits [[-0.05948453 -1.6667359   0.5767175   0.5574908 ]]
Iteration 800 of 1000: loss=0.794 " + "l1=0.00903" + "l2=0.785 f=-0.15 shape=(1, 9000, 1)
logits [[-0.05027027 -1.7111015   0.58900124  0.57257503]]
Iteration 900 of 1000: loss=0.722 " + "l1=0.0136" + "l2=0.709 f=-0.148 shape=(1, 9000, 1)
logits [[-0.02950132 -1.7386721   0.5998822   0.57507104]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.79 " + "l1=2.79" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.477892  -2.9268274  2.7927945 -5.114152 ]]
Iteration 100 of 1000: loss=2.1 " + "l1=1.77" + "l2=0.327 f=-0.353 shape=(1, 9000, 1)
logits [[ 2.2259672 -2.6299536  2.2260816 -3.2353456]]
Iteration 200 of 1000: loss=1.85 " + "l1=1.46" + "l2=0.385 f=-0.317 shape=(1, 9000, 1)
logits [[ 1.855599  -2.4651372  1.9203131 -2.5801885]]
Iteration 300 of 1000: loss=1.62 " + "l1=1.18" + "l2=0.446 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.5051185 -2.340181   1.640259  -1.9759991]]
Iteration 400 of 1000: loss=1.44 " + "l1=0.926" + "l2=0.511 f=-0.257 shape=(1, 9000, 1)
logits [[ 1.2146566 -2.2122872  1.4093893 -1.4399486]]
Iteration 500 of 1000: loss=1.28 " + "l1=0.712" + "l2=0.566 f=-0.226 shape=(1, 9000, 1)
logits [[ 0.9367446 -2.1078744  1.2289635 -0.9612506]]
Iteration 600 of 1000: loss=1.14 " + "l1=0.55" + "l2=0.593 f=-0.2 shape=(1, 9000, 1)
logits [[ 0.7460757  -2.0209672   1.083228   -0.61011297]]
Iteration 700 of 1000: loss=1.03 " + "l1=0.404" + "l2=0.626 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.5479872  -1.9441051   0.9560368  -0.28773528]]
Iteration 800 of 1000: loss=0.934 " + "l1=0.296" + "l2=0.638 f=-0.169 shape=(1, 9000, 1)
logits [[ 0.396061   -1.9033405   0.8709773  -0.03877493]]
Iteration 900 of 1000: loss=0.854 " + "l1=0.194" + "l2=0.66 f=-0.159 shape=(1, 9000, 1)
logits [[ 0.25065306 -1.8730676   0.79251856  0.19482309]]
--- 315.0911030769348 seconds ---
Adv result:3
Loading record A02686
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0803 " + "l1=0.0803" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 4.3466477 -3.6785495  3.7771206 -7.1514854]]
Iteration 100 of 1000: loss=0.0796 " + "l1=0.0792" + "l2=0.000376 f=-0.673 shape=(1, 9000, 1)
logits [[ 4.2929053 -3.6256843  3.73585   -7.0962844]]
Iteration 200 of 1000: loss=0.0793 " + "l1=0.0788" + "l2=0.000468 f=-0.672 shape=(1, 9000, 1)
logits [[ 4.278361  -3.6048322  3.719015  -7.080754 ]]
Iteration 300 of 1000: loss=0.0791 " + "l1=0.0784" + "l2=0.00063 f=-0.671 shape=(1, 9000, 1)
logits [[ 4.26173   -3.5827203  3.7013915 -7.0629506]]
Iteration 400 of 1000: loss=0.0789 " + "l1=0.0781" + "l2=0.000868 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.246     -3.562154   3.6851149 -7.0460324]]
Iteration 500 of 1000: loss=0.0788 " + "l1=0.0778" + "l2=0.00103 f=-0.668 shape=(1, 9000, 1)
logits [[ 4.231568  -3.543736   3.6705263 -7.0304303]]
Iteration 600 of 1000: loss=0.0787 " + "l1=0.0774" + "l2=0.00127 f=-0.667 shape=(1, 9000, 1)
logits [[ 4.217751  -3.5259755  3.6565764 -7.0155754]]
Iteration 700 of 1000: loss=0.0786 " + "l1=0.0772" + "l2=0.00142 f=-0.666 shape=(1, 9000, 1)
logits [[ 4.2051935 -3.5103664  3.6445541 -7.0019727]]
Iteration 800 of 1000: loss=0.0785 " + "l1=0.0769" + "l2=0.00163 f=-0.665 shape=(1, 9000, 1)
logits [[ 4.1937485 -3.496917   3.634117  -6.989401 ]]
Iteration 900 of 1000: loss=0.0784 " + "l1=0.0767" + "l2=0.00177 f=-0.664 shape=(1, 9000, 1)
logits [[ 4.1831217 -3.484518   3.6246529 -6.977625 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.803 " + "l1=0.803" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 4.3466477 -3.6785495  3.7771206 -7.1514854]]
Iteration 100 of 1000: loss=0.731 " + "l1=0.696" + "l2=0.0356 f=-0.642 shape=(1, 9000, 1)
logits [[ 3.8278592 -3.1292315  3.3539069 -6.6217093]]
Iteration 200 of 1000: loss=0.692 " + "l1=0.644" + "l2=0.048 f=-0.62 shape=(1, 9000, 1)
logits [[ 3.5726902 -2.86795    3.1457736 -6.332352 ]]
Iteration 300 of 1000: loss=0.667 " + "l1=0.604" + "l2=0.063 f=-0.606 shape=(1, 9000, 1)
logits [[ 3.3512654 -2.693576   3.002857  -6.0830116]]
Iteration 400 of 1000: loss=0.646 " + "l1=0.57" + "l2=0.0758 f=-0.59 shape=(1, 9000, 1)
logits [[ 3.152127  -2.5522325  2.8946419 -5.8560424]]
Iteration 500 of 1000: loss=0.628 " + "l1=0.539" + "l2=0.0886 f=-0.573 shape=(1, 9000, 1)
logits [[ 2.9641333 -2.426586   2.8022792 -5.63062  ]]
Iteration 600 of 1000: loss=0.607 " + "l1=0.51" + "l2=0.0972 f=-0.557 shape=(1, 9000, 1)
logits [[ 2.7895339 -2.311623   2.7179785 -5.422149 ]]
Iteration 700 of 1000: loss=0.577 " + "l1=0.475" + "l2=0.101 f=-0.526 shape=(1, 9000, 1)
logits [[ 2.6040516 -2.1488256  2.6033747 -5.162904 ]]
Iteration 800 of 1000: loss=0.552 " + "l1=0.449" + "l2=0.103 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.4847584 -2.0000978  2.486204  -4.964579 ]]
Iteration 900 of 1000: loss=0.538 " + "l1=0.438" + "l2=0.1 f=-0.484 shape=(1, 9000, 1)
logits [[ 2.437387  -1.9388013  2.4365501 -4.872784 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.03 " + "l1=8.03" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 4.3466477 -3.6785495  3.7771206 -7.1514854]]
Iteration 100 of 1000: loss=4.31 " + "l1=3.05" + "l2=1.26 f=-0.476 shape=(1, 9000, 1)
logits [[ 1.7678328 -1.2760457  1.7726518 -4.168499 ]]
Iteration 200 of 1000: loss=3.57 " + "l1=2.35" + "l2=1.22 f=-0.424 shape=(1, 9000, 1)
logits [[ 1.4016967  -0.93510216  1.4141843  -3.5767481 ]]
Iteration 300 of 1000: loss=3.21 " + "l1=1.98" + "l2=1.22 f=-0.397 shape=(1, 9000, 1)
logits [[ 1.1312951 -0.7617836  1.2227237 -3.1809192]]
Iteration 400 of 1000: loss=2.83 " + "l1=1.62" + "l2=1.21 f=-0.346 shape=(1, 9000, 1)
logits [[ 0.8418765 -0.5957566  1.0256828 -2.6539218]]
Iteration 500 of 1000: loss=2.46 " + "l1=1.22" + "l2=1.25 f=-0.262 shape=(1, 9000, 1)
logits [[ 0.5439452  -0.40778536  0.8076227  -1.9899317 ]]
Iteration 600 of 1000: loss=2.18 " + "l1=0.899" + "l2=1.28 f=-0.196 shape=(1, 9000, 1)
logits [[ 0.29625204 -0.27957428  0.6195601  -1.4222078 ]]
Iteration 700 of 1000: loss=1.99 " + "l1=0.731" + "l2=1.25 f=-0.17 shape=(1, 9000, 1)
logits [[ 0.11307812 -0.2149707   0.5164712  -1.095391  ]]
Iteration 800 of 1000: loss=1.68 " + "l1=0.289" + "l2=1.39 f=-0.171 shape=(1, 9000, 1)
logits [[-0.39676425 -0.08083264  0.20784122 -0.41445878]]
Iteration 900 of 1000: loss=1.38 " + "l1=0.0256" + "l2=1.36 f=-0.188 shape=(1, 9000, 1)
logits [[-0.65457654 -0.0045051   0.0211352  -0.11378796]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.41 " + "l1=4.41" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 4.3466477 -3.6785495  3.7771206 -7.1514854]]
Iteration 100 of 1000: loss=2.88 " + "l1=2.28" + "l2=0.594 f=-0.533 shape=(1, 9000, 1)
logits [[ 2.3125253 -1.838141   2.3138616 -4.9198666]]
Iteration 200 of 1000: loss=2.46 " + "l1=1.86" + "l2=0.608 f=-0.504 shape=(1, 9000, 1)
logits [[ 1.8914963 -1.4822774  1.8932046 -4.316464 ]]
Iteration 300 of 1000: loss=2.2 " + "l1=1.54" + "l2=0.665 f=-0.458 shape=(1, 9000, 1)
logits [[ 1.5951984 -1.1926134  1.6072546 -3.8416367]]
Iteration 400 of 1000: loss=2.03 " + "l1=1.37" + "l2=0.654 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.4524714 -1.033068   1.4619033 -3.5367973]]
Iteration 500 of 1000: loss=1.82 " + "l1=1.18" + "l2=0.639 f=-0.358 shape=(1, 9000, 1)
logits [[ 1.2482078 -0.8432521  1.3082702 -3.1459258]]
Iteration 600 of 1000: loss=1.64 " + "l1=0.997" + "l2=0.647 f=-0.299 shape=(1, 9000, 1)
logits [[ 0.99756074 -0.673973    1.1380095  -2.6579258 ]]
Iteration 700 of 1000: loss=1.53 " + "l1=0.866" + "l2=0.667 f=-0.252 shape=(1, 9000, 1)
logits [[ 0.8322475  -0.58337003  0.9906602  -2.2484055 ]]
Iteration 800 of 1000: loss=1.44 " + "l1=0.771" + "l2=0.671 f=-0.209 shape=(1, 9000, 1)
logits [[ 0.75499004 -0.5140827   0.8872255  -1.964828  ]]
Iteration 900 of 1000: loss=1.36 " + "l1=0.688" + "l2=0.672 f=-0.171 shape=(1, 9000, 1)
logits [[ 0.68564916 -0.4610127   0.78970087 -1.698187  ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=6.22 " + "l1=6.22" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 4.3466477 -3.6785495  3.7771206 -7.1514854]]
Iteration 100 of 1000: loss=3.66 " + "l1=2.73" + "l2=0.934 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.006933  -1.5138242  2.0059729 -4.4919205]]
Iteration 200 of 1000: loss=3.05 " + "l1=2.1" + "l2=0.956 f=-0.456 shape=(1, 9000, 1)
logits [[ 1.5637132 -1.130005   1.5777549 -3.8363256]]
Iteration 300 of 1000: loss=2.76 " + "l1=1.84" + "l2=0.921 f=-0.42 shape=(1, 9000, 1)
logits [[ 1.3863302 -0.9634391  1.4119829 -3.514332 ]]
Iteration 400 of 1000: loss=2.5 " + "l1=1.57" + "l2=0.937 f=-0.37 shape=(1, 9000, 1)
logits [[ 1.1358382 -0.7869136  1.2336575 -3.0606236]]
Iteration 500 of 1000: loss=2.23 " + "l1=1.27" + "l2=0.967 f=-0.296 shape=(1, 9000, 1)
logits [[ 0.83915126 -0.57690716  1.0554017  -2.5021863 ]]
Iteration 600 of 1000: loss=1.97 " + "l1=0.975" + "l2=0.997 f=-0.218 shape=(1, 9000, 1)
logits [[ 0.5966919  -0.41519085  0.84306    -1.8957928 ]]
Iteration 700 of 1000: loss=1.82 " + "l1=0.84" + "l2=0.975 f=-0.179 shape=(1, 9000, 1)
logits [[ 0.45331785 -0.35938266  0.7241196  -1.5352196 ]]
Iteration 800 of 1000: loss=1.71 " + "l1=0.738" + "l2=0.967 f=-0.152 shape=(1, 9000, 1)
logits [[ 0.34104502 -0.32155627  0.63096863 -1.2577968 ]]
Iteration 900 of 1000: loss=1.62 " + "l1=0.647" + "l2=0.97 f=-0.136 shape=(1, 9000, 1)
logits [[ 0.23075172 -0.2998196   0.53452307 -1.0083741 ]]
--- 316.89603781700134 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0057 " + "l1=0.0057" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 4.3466477 -3.6785495  3.7771206 -7.1514854]]
Iteration 100 of 1000: loss=0.00551 " + "l1=0.00536" + "l2=0.000151 f=-0.677 shape=(1, 9000, 1)
logits [[ 4.3211336 -3.6868312  3.7853196 -7.1277766]]
Iteration 200 of 1000: loss=0.00545 " + "l1=0.00531" + "l2=0.00014 f=-0.677 shape=(1, 9000, 1)
logits [[ 4.3188586 -3.6902094  3.7882001 -7.1255765]]
Iteration 300 of 1000: loss=0.00541 " + "l1=0.00523" + "l2=0.000173 f=-0.677 shape=(1, 9000, 1)
logits [[ 4.314817  -3.6938443  3.7914004 -7.1221576]]
Iteration 400 of 1000: loss=0.00539 " + "l1=0.00516" + "l2=0.000228 f=-0.678 shape=(1, 9000, 1)
logits [[ 4.310671  -3.6972308  3.7943778 -7.1185923]]
Iteration 500 of 1000: loss=0.00542 " + "l1=0.0051" + "l2=0.000324 f=-0.678 shape=(1, 9000, 1)
logits [[ 4.30673   -3.7000606  3.7968779 -7.115194 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.057 " + "l1=0.057" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 4.3466477 -3.6785495  3.7771206 -7.1514854]]
Iteration 100 of 1000: loss=0.0413 " + "l1=0.0344" + "l2=0.00684 f=-0.682 shape=(1, 9000, 1)
logits [[ 4.174645  -3.730307   3.8303246 -7.002249 ]]
Iteration 200 of 1000: loss=0.0341 " + "l1=0.0236" + "l2=0.0105 f=-0.684 shape=(1, 9000, 1)
logits [[ 4.0899944 -3.758452   3.8539135 -6.9204473]]
Iteration 300 of 1000: loss=0.029 " + "l1=0.0156" + "l2=0.0134 f=-0.683 shape=(1, 9000, 1)
logits [[ 4.026974  -3.774947   3.8708103 -6.8558483]]
Iteration 400 of 1000: loss=0.0252 " + "l1=0.00962" + "l2=0.0156 f=-0.683 shape=(1, 9000, 1)
logits [[ 3.9692094 -3.7785478  3.8730376 -6.7967477]]
Iteration 500 of 1000: loss=0.022 " + "l1=0.00506" + "l2=0.0169 f=-0.682 shape=(1, 9000, 1)
logits [[ 3.9186044 -3.7714984  3.8680086 -6.742461 ]]
Iteration 600 of 1000: loss=0.0191 " + "l1=0.000826" + "l2=0.0183 f=-0.681 shape=(1, 9000, 1)
logits [[ 3.8705652 -3.7640538  3.8623095 -6.6921577]]
Iteration 700 of 1000: loss=0.0169 " + "l1=4.14e-05" + "l2=0.0168 f=-0.681 shape=(1, 9000, 1)
logits [[ 3.8521473 -3.7545846  3.8517332 -6.671485 ]]
Iteration 800 of 1000: loss=0.0153 " + "l1=0.00011" + "l2=0.0152 f=-0.68 shape=(1, 9000, 1)
logits [[ 3.844559  -3.7458792  3.8434632 -6.662202 ]]
Iteration 900 of 1000: loss=0.0142 " + "l1=0" + "l2=0.0142 f=-0.679 shape=(1, 9000, 1)
logits [[ 3.835752  -3.739079   3.8373084 -6.650809 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0313 " + "l1=0.0313" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 4.3466477 -3.6785495  3.7771206 -7.1514854]]
Iteration 100 of 1000: loss=0.0263 " + "l1=0.0241" + "l2=0.00224 f=-0.68 shape=(1, 9000, 1)
logits [[ 4.248907  -3.7123086  3.8112745 -7.0660257]]
Iteration 200 of 1000: loss=0.0242 " + "l1=0.021" + "l2=0.00324 f=-0.681 shape=(1, 9000, 1)
logits [[ 4.206841  -3.7287462  3.825055  -7.0271316]]
Iteration 300 of 1000: loss=0.0226 " + "l1=0.0183" + "l2=0.00431 f=-0.682 shape=(1, 9000, 1)
logits [[ 4.1683235 -3.7407565  3.834844  -6.9905996]]
Iteration 400 of 1000: loss=0.0213 " + "l1=0.0161" + "l2=0.00521 f=-0.683 shape=(1, 9000, 1)
logits [[ 4.137282  -3.7518477  3.844192  -6.959912 ]]
Iteration 500 of 1000: loss=0.0202 " + "l1=0.0142" + "l2=0.00607 f=-0.682 shape=(1, 9000, 1)
logits [[ 4.10836   -3.758906   3.8510518 -6.9304833]]
Iteration 600 of 1000: loss=0.0192 " + "l1=0.0125" + "l2=0.00668 f=-0.682 shape=(1, 9000, 1)
logits [[ 4.0811267 -3.7623937  3.8543575 -6.901402 ]]
Iteration 700 of 1000: loss=0.0183 " + "l1=0.0112" + "l2=0.00709 f=-0.681 shape=(1, 9000, 1)
logits [[ 4.0592055 -3.7618062  3.8550003 -6.8783917]]
Iteration 800 of 1000: loss=0.0176 " + "l1=0.0101" + "l2=0.0075 f=-0.681 shape=(1, 9000, 1)
logits [[ 4.036934  -3.7598233  3.8541703 -6.854536 ]]
Iteration 900 of 1000: loss=0.017 " + "l1=0.009" + "l2=0.008 f=-0.68 shape=(1, 9000, 1)
logits [[ 4.0167384 -3.7573643  3.8531842 -6.8320794]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0441 " + "l1=0.0441" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 4.3466477 -3.6785495  3.7771206 -7.1514854]]
Iteration 100 of 1000: loss=0.0345 " + "l1=0.0302" + "l2=0.00423 f=-0.681 shape=(1, 9000, 1)
logits [[ 4.212213  -3.7225592  3.8219385 -7.034522 ]]
Iteration 200 of 1000: loss=0.0303 " + "l1=0.0239" + "l2=0.00634 f=-0.682 shape=(1, 9000, 1)
logits [[ 4.1473384 -3.7427268  3.8386579 -6.9732523]]
Iteration 300 of 1000: loss=0.027 " + "l1=0.0185" + "l2=0.00848 f=-0.683 shape=(1, 9000, 1)
logits [[ 4.093511  -3.7611513  3.854231  -6.9198923]]
Iteration 400 of 1000: loss=0.0245 " + "l1=0.0145" + "l2=0.00998 f=-0.683 shape=(1, 9000, 1)
logits [[ 4.050236  -3.769165   3.8633764 -6.875296 ]]
Iteration 500 of 1000: loss=0.0225 " + "l1=0.0114" + "l2=0.0111 f=-0.682 shape=(1, 9000, 1)
logits [[ 4.012406  -3.7698026  3.8651886 -6.835749 ]]
Iteration 600 of 1000: loss=0.0207 " + "l1=0.00853" + "l2=0.0122 f=-0.681 shape=(1, 9000, 1)
logits [[ 3.972779  -3.7668092  3.8626602 -6.793076 ]]
Iteration 700 of 1000: loss=0.019 " + "l1=0.00609" + "l2=0.0129 f=-0.68 shape=(1, 9000, 1)
logits [[ 3.9359906 -3.7608583  3.8573475 -6.753218 ]]
Iteration 800 of 1000: loss=0.0175 " + "l1=0.00424" + "l2=0.0132 f=-0.68 shape=(1, 9000, 1)
logits [[ 3.908445  -3.755948   3.8537772 -6.7243414]]
Iteration 900 of 1000: loss=0.0161 " + "l1=0.00231" + "l2=0.0138 f=-0.679 shape=(1, 9000, 1)
logits [[ 3.8771355 -3.748425   3.8473344 -6.6908555]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0505 " + "l1=0.0505" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 4.3466477 -3.6785495  3.7771206 -7.1514854]]
Iteration 100 of 1000: loss=0.0381 " + "l1=0.0326" + "l2=0.00547 f=-0.681 shape=(1, 9000, 1)
logits [[ 4.19353   -3.726592   3.8260305 -7.018564 ]]
Iteration 200 of 1000: loss=0.0326 " + "l1=0.0243" + "l2=0.00827 f=-0.683 shape=(1, 9000, 1)
logits [[ 4.118799  -3.7493558  3.8451939 -6.9468865]]
Iteration 300 of 1000: loss=0.0282 " + "l1=0.0174" + "l2=0.0109 f=-0.683 shape=(1, 9000, 1)
logits [[ 4.0582304 -3.7680562  3.8626354 -6.8860183]]
Iteration 400 of 1000: loss=0.0252 " + "l1=0.0126" + "l2=0.0126 f=-0.683 shape=(1, 9000, 1)
logits [[ 4.0106926 -3.7727516  3.8685284 -6.8367043]]
Iteration 500 of 1000: loss=0.0225 " + "l1=0.00836" + "l2=0.0141 f=-0.682 shape=(1, 9000, 1)
logits [[ 3.9600928 -3.7712338  3.8658407 -6.783153 ]]
Iteration 600 of 1000: loss=0.0202 " + "l1=0.00523" + "l2=0.0149 f=-0.681 shape=(1, 9000, 1)
logits [[ 3.921842  -3.7663288  3.8629146 -6.741769 ]]
Iteration 700 of 1000: loss=0.0181 " + "l1=0.00234" + "l2=0.0158 f=-0.68 shape=(1, 9000, 1)
logits [[ 3.8845222 -3.75994    3.8581114 -6.7029443]]
Iteration 800 of 1000: loss=0.0161 " + "l1=0.000242" + "l2=0.0159 f=-0.68 shape=(1, 9000, 1)
logits [[ 3.850915  -3.7504525  3.8481886 -6.6679173]]
Iteration 900 of 1000: loss=0.0147 " + "l1=7.46e-05" + "l2=0.0146 f=-0.679 shape=(1, 9000, 1)
logits [[ 3.840749  -3.7419052  3.8399086 -6.655995 ]]
--- 288.3044672012329 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.115 " + "l1=0.115" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 4.3466477 -3.6785495  3.7771206 -7.1514854]]
Iteration 100 of 1000: loss=0.114 " + "l1=0.113" + "l2=0.000512 f=-0.672 shape=(1, 9000, 1)
logits [[ 4.2772117 -3.6449745  3.7436483 -7.0652595]]
Iteration 200 of 1000: loss=0.114 " + "l1=0.113" + "l2=0.000646 f=-0.671 shape=(1, 9000, 1)
logits [[ 4.2559886 -3.6339753  3.7327304 -7.0395913]]
Iteration 300 of 1000: loss=0.113 " + "l1=0.112" + "l2=0.000862 f=-0.67 shape=(1, 9000, 1)
logits [[ 4.2328134 -3.6219068  3.7206557 -7.0112677]]
Iteration 400 of 1000: loss=0.113 " + "l1=0.112" + "l2=0.00108 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.2109733 -3.610542   3.7091568 -6.9839196]]
Iteration 500 of 1000: loss=0.113 " + "l1=0.112" + "l2=0.00133 f=-0.667 shape=(1, 9000, 1)
logits [[ 4.1917133 -3.6006134  3.6991088 -6.9594088]]
Iteration 600 of 1000: loss=0.113 " + "l1=0.111" + "l2=0.00151 f=-0.666 shape=(1, 9000, 1)
logits [[ 4.175196  -3.5920436  3.6903756 -6.9380255]]
Iteration 700 of 1000: loss=0.112 " + "l1=0.111" + "l2=0.00171 f=-0.665 shape=(1, 9000, 1)
logits [[ 4.159731  -3.5840213  3.6823158 -6.917847 ]]
Iteration 800 of 1000: loss=0.112 " + "l1=0.11" + "l2=0.00191 f=-0.664 shape=(1, 9000, 1)
logits [[ 4.145688  -3.5772226  3.6754527 -6.899183 ]]
Iteration 900 of 1000: loss=0.112 " + "l1=0.11" + "l2=0.00199 f=-0.663 shape=(1, 9000, 1)
logits [[ 4.132037  -3.5709548  3.6691737 -6.880649 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.15 " + "l1=1.15" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 4.3466477 -3.6785495  3.7771206 -7.1514854]]
Iteration 100 of 1000: loss=1.05 " + "l1=1.01" + "l2=0.0453 f=-0.638 shape=(1, 9000, 1)
logits [[ 3.7080038 -3.3060303  3.4262364 -6.37951  ]]
Iteration 200 of 1000: loss=0.995 " + "l1=0.924" + "l2=0.0711 f=-0.609 shape=(1, 9000, 1)
logits [[ 3.3387146 -3.0540636  3.1768324 -5.8994656]]
Iteration 300 of 1000: loss=0.945 " + "l1=0.845" + "l2=0.1 f=-0.579 shape=(1, 9000, 1)
logits [[ 3.0025876 -2.8120654  2.9437642 -5.450549 ]]
Iteration 400 of 1000: loss=0.905 " + "l1=0.79" + "l2=0.114 f=-0.555 shape=(1, 9000, 1)
logits [[ 2.7795734 -2.6552935  2.7795882 -5.122747 ]]
Iteration 500 of 1000: loss=0.869 " + "l1=0.747" + "l2=0.122 f=-0.53 shape=(1, 9000, 1)
logits [[ 2.6247754 -2.5201483  2.624503  -4.8495474]]
Iteration 600 of 1000: loss=0.826 " + "l1=0.696" + "l2=0.13 f=-0.489 shape=(1, 9000, 1)
logits [[ 2.4190147 -2.3368814  2.4613726 -4.500033 ]]
Iteration 700 of 1000: loss=0.774 " + "l1=0.63" + "l2=0.144 f=-0.437 shape=(1, 9000, 1)
logits [[ 2.1285527 -2.0972323  2.2602804 -4.0415177]]
Iteration 800 of 1000: loss=0.734 " + "l1=0.579" + "l2=0.155 f=-0.401 shape=(1, 9000, 1)
logits [[ 1.9052973 -1.9534566  2.1186001 -3.67272  ]]
Iteration 900 of 1000: loss=0.702 " + "l1=0.537" + "l2=0.166 f=-0.367 shape=(1, 9000, 1)
logits [[ 1.7338347 -1.849006   2.0064142 -3.3607957]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.5 " + "l1=11.5" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 4.3466477 -3.6785495  3.7771206 -7.1514854]]
Iteration 100 of 1000: loss=5.81 " + "l1=3.47" + "l2=2.35 f=-0.313 shape=(1, 9000, 1)
logits [[ 0.89130384 -1.3890674   1.3563354  -2.109865  ]]
Iteration 200 of 1000: loss=3.29 " + "l1=0.349" + "l2=2.94 f=-0.116 shape=(1, 9000, 1)
logits [[-0.08374606 -1.0646349   0.5175348   0.16841888]]
Iteration 300 of 1000: loss=2.41 " + "l1=0" + "l2=2.41 f=-0.105 shape=(1, 9000, 1)
logits [[-0.24208717 -1.0979573   0.4521579   0.46623197]]
Iteration 400 of 1000: loss=2.05 " + "l1=0.00188" + "l2=2.05 f=-0.111 shape=(1, 9000, 1)
logits [[-0.27775744 -1.0818481   0.45972246  0.4578417 ]]
Iteration 500 of 1000: loss=1.8 " + "l1=0.00443" + "l2=1.79 f=-0.109 shape=(1, 9000, 1)
logits [[-0.26740372 -1.0664552   0.4518253   0.44739714]]
Iteration 600 of 1000: loss=1.59 " + "l1=0" + "l2=1.59 f=-0.109 shape=(1, 9000, 1)
logits [[-0.24633086 -1.0713084   0.4391106   0.4415333 ]]
Iteration 700 of 1000: loss=1.43 " + "l1=0" + "l2=1.43 f=-0.119 shape=(1, 9000, 1)
logits [[-0.21442625 -1.0856701   0.40739816  0.41611314]]
Iteration 800 of 1000: loss=1.32 " + "l1=0" + "l2=1.32 f=-0.117 shape=(1, 9000, 1)
logits [[-0.19167304 -1.0860465   0.39789143  0.41219145]]
Iteration 900 of 1000: loss=1.22 " + "l1=0.00816" + "l2=1.22 f=-0.115 shape=(1, 9000, 1)
logits [[-0.16237234 -1.0894316   0.39995542  0.39179286]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.32 " + "l1=6.32" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 4.3466477 -3.6785495  3.7771206 -7.1514854]]
Iteration 100 of 1000: loss=4.14 " + "l1=3.28" + "l2=0.861 f=-0.448 shape=(1, 9000, 1)
logits [[ 1.9817212 -1.9739279  2.083832  -3.8821864]]
Iteration 200 of 1000: loss=3.19 " + "l1=2.03" + "l2=1.16 f=-0.332 shape=(1, 9000, 1)
logits [[ 0.9600928 -1.5056661  1.4559528 -2.2373724]]
Iteration 300 of 1000: loss=2.25 " + "l1=0.747" + "l2=1.51 f=-0.203 shape=(1, 9000, 1)
logits [[ 0.15325344 -1.2068176   0.8005075  -0.55729324]]
Iteration 400 of 1000: loss=1.65 " + "l1=0.101" + "l2=1.55 f=-0.115 shape=(1, 9000, 1)
logits [[-0.07770347 -1.1082051   0.45367905  0.2707288 ]]
Iteration 500 of 1000: loss=1.32 " + "l1=0" + "l2=1.32 f=-0.0984 shape=(1, 9000, 1)
logits [[-0.11265828 -1.089343    0.4031507   0.4054389 ]]
Iteration 600 of 1000: loss=1.17 " + "l1=0" + "l2=1.17 f=-0.093 shape=(1, 9000, 1)
logits [[-0.09664439 -1.0836302   0.40413734  0.40425915]]
Iteration 700 of 1000: loss=1.09 " + "l1=0" + "l2=1.09 f=-0.0857 shape=(1, 9000, 1)
logits [[-0.10157971 -1.0649215   0.4057705   0.4178522 ]]
Iteration 800 of 1000: loss=1.01 " + "l1=0" + "l2=1.01 f=-0.0777 shape=(1, 9000, 1)
logits [[-0.09868971 -1.0480446   0.41724125  0.41865942]]
Iteration 900 of 1000: loss=0.957 " + "l1=0.00433" + "l2=0.953 f=-0.0685 shape=(1, 9000, 1)
logits [[-0.09383716 -1.033368    0.43049237  0.42261267]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.74 " + "l1=3.74" + "l2=0 f=-0.677 shape=(1, 9000, 1)
logits [[ 4.3466477 -3.6785495  3.7771206 -7.1514854]]
Iteration 100 of 1000: loss=2.8 " + "l1=2.42" + "l2=0.384 f=-0.524 shape=(1, 9000, 1)
logits [[ 2.5943823 -2.4580815  2.600979  -4.832567 ]]
Iteration 200 of 1000: loss=2.42 " + "l1=1.95" + "l2=0.472 f=-0.472 shape=(1, 9000, 1)
logits [[ 2.0003493 -2.05777    2.0828469 -3.9151406]]
Iteration 300 of 1000: loss=2.06 " + "l1=1.45" + "l2=0.614 f=-0.387 shape=(1, 9000, 1)
logits [[ 1.2766659 -1.6984992  1.6620723 -2.789611 ]]
Iteration 400 of 1000: loss=1.6 " + "l1=0.817" + "l2=0.782 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.57327753 -1.3060939   1.0915779  -1.4222897 ]]
Iteration 500 of 1000: loss=1.35 " + "l1=0.544" + "l2=0.808 f=-0.196 shape=(1, 9000, 1)
logits [[ 0.3487949  -1.1527503   0.84654576 -0.8280982 ]]
Iteration 600 of 1000: loss=1.2 " + "l1=0.375" + "l2=0.829 f=-0.142 shape=(1, 9000, 1)
logits [[ 0.2103075 -1.0608546  0.718318  -0.4367193]]
Iteration 700 of 1000: loss=1.08 " + "l1=0.253" + "l2=0.829 f=-0.107 shape=(1, 9000, 1)
logits [[ 0.10870862 -1.0100338   0.6253912  -0.15273684]]
Iteration 800 of 1000: loss=0.967 " + "l1=0.132" + "l2=0.834 f=-0.078 shape=(1, 9000, 1)
logits [[ 0.0141867  -0.9731905   0.52711856  0.11974153]]
Iteration 900 of 1000: loss=0.855 " + "l1=0.0153" + "l2=0.84 f=-0.0493 shape=(1, 9000, 1)
logits [[-0.07221275 -0.9608876   0.4413567   0.3943702 ]]
--- 317.4016661643982 seconds ---
Adv result:3
Loading record A02695
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0489 " + "l1=0.0489" + "l2=0 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.8945262 -1.9924744  2.7404687 -5.928225 ]]
Iteration 100 of 1000: loss=0.0483 " + "l1=0.048" + "l2=0.000346 f=-0.573 shape=(1, 9000, 1)
logits [[ 2.8388014 -1.9578716  2.7184463 -5.8902984]]
Iteration 200 of 1000: loss=0.0481 " + "l1=0.0478" + "l2=0.000362 f=-0.573 shape=(1, 9000, 1)
logits [[ 2.8275988 -1.9502527  2.713761  -5.8829737]]
Iteration 300 of 1000: loss=0.048 " + "l1=0.0475" + "l2=0.000461 f=-0.573 shape=(1, 9000, 1)
logits [[ 2.8137717 -1.941163   2.7081287 -5.873443 ]]
Iteration 400 of 1000: loss=0.0479 " + "l1=0.0473" + "l2=0.000594 f=-0.573 shape=(1, 9000, 1)
logits [[ 2.7995782 -1.9322447  2.7023652 -5.863298 ]]
Iteration 500 of 1000: loss=0.0478 " + "l1=0.0471" + "l2=0.00071 f=-0.574 shape=(1, 9000, 1)
logits [[ 2.7855    -1.9236407  2.6967149 -5.853279 ]]
Iteration 600 of 1000: loss=0.0477 " + "l1=0.0469" + "l2=0.000835 f=-0.574 shape=(1, 9000, 1)
logits [[ 2.772196  -1.9157636  2.6910913 -5.8432775]]
Iteration 700 of 1000: loss=0.0477 " + "l1=0.0467" + "l2=0.000988 f=-0.574 shape=(1, 9000, 1)
logits [[ 2.7597008 -1.9082236  2.68572   -5.8337727]]
Iteration 800 of 1000: loss=0.0476 " + "l1=0.0465" + "l2=0.00108 f=-0.574 shape=(1, 9000, 1)
logits [[ 2.7474685 -1.9007593  2.6803403 -5.8243   ]]
Iteration 900 of 1000: loss=0.0475 " + "l1=0.0463" + "l2=0.00122 f=-0.574 shape=(1, 9000, 1)
logits [[ 2.7355578 -1.8936292  2.6750958 -5.8149123]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.489 " + "l1=0.489" + "l2=0 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.8945262 -1.9924744  2.7404687 -5.928225 ]]
Iteration 100 of 1000: loss=0.441 " + "l1=0.422" + "l2=0.0196 f=-0.583 shape=(1, 9000, 1)
logits [[ 2.5249538 -1.6912309  2.5243156 -5.6906376]]
Iteration 200 of 1000: loss=0.416 " + "l1=0.386" + "l2=0.0304 f=-0.596 shape=(1, 9000, 1)
logits [[ 2.3611805 -1.4968785  2.3626993 -5.6124506]]
Iteration 300 of 1000: loss=0.396 " + "l1=0.361" + "l2=0.0352 f=-0.6 shape=(1, 9000, 1)
logits [[ 2.2449155 -1.3585306  2.2466063 -5.5334153]]
Iteration 400 of 1000: loss=0.383 " + "l1=0.349" + "l2=0.034 f=-0.596 shape=(1, 9000, 1)
logits [[ 2.192483  -1.2885826  2.1968637 -5.4833956]]
Iteration 500 of 1000: loss=0.373 " + "l1=0.339" + "l2=0.034 f=-0.591 shape=(1, 9000, 1)
logits [[ 2.158706  -1.2324045  2.1620321 -5.4526906]]
Iteration 600 of 1000: loss=0.366 " + "l1=0.331" + "l2=0.0352 f=-0.588 shape=(1, 9000, 1)
logits [[ 2.122148  -1.1787422  2.129949  -5.425981 ]]
Iteration 700 of 1000: loss=0.359 " + "l1=0.322" + "l2=0.0368 f=-0.585 shape=(1, 9000, 1)
logits [[ 2.0843697 -1.1269319  2.0970223 -5.393007 ]]
Iteration 800 of 1000: loss=0.353 " + "l1=0.315" + "l2=0.0381 f=-0.581 shape=(1, 9000, 1)
logits [[ 2.05086   -1.0826737  2.0662732 -5.3580923]]
Iteration 900 of 1000: loss=0.347 " + "l1=0.309" + "l2=0.0387 f=-0.577 shape=(1, 9000, 1)
logits [[ 2.0203812 -1.0470788  2.040204  -5.32077  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.89 " + "l1=4.89" + "l2=0 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.8945262 -1.9924744  2.7404687 -5.928225 ]]
Iteration 100 of 1000: loss=2.6 " + "l1=1.95" + "l2=0.65 f=-0.587 shape=(1, 9000, 1)
logits [[ 1.0952711 -0.3324145  1.6176122 -4.7281866]]
Iteration 200 of 1000: loss=1.96 " + "l1=1.09" + "l2=0.874 f=-0.598 shape=(1, 9000, 1)
logits [[ 0.45320162  0.18164308  1.2706481  -4.2957354 ]]
Iteration 300 of 1000: loss=1.46 " + "l1=0.482" + "l2=0.981 f=-0.585 shape=(1, 9000, 1)
logits [[-0.04081535  0.502237    0.98461527 -3.7871144 ]]
Iteration 400 of 1000: loss=1.06 " + "l1=0.0177" + "l2=1.04 f=-0.555 shape=(1, 9000, 1)
logits [[-0.43254587  0.72101974  0.73867255 -3.2488945 ]]
Iteration 500 of 1000: loss=0.837 " + "l1=0.000842" + "l2=0.836 f=-0.526 shape=(1, 9000, 1)
logits [[-0.43994173  0.6347438   0.63558614 -2.9337    ]]
Iteration 600 of 1000: loss=0.737 " + "l1=0.00803" + "l2=0.729 f=-0.519 shape=(1, 9000, 1)
logits [[-0.45349956  0.5596651   0.5676999  -2.7491858 ]]
Iteration 700 of 1000: loss=0.681 " + "l1=0.00819" + "l2=0.672 f=-0.51 shape=(1, 9000, 1)
logits [[-0.44897777  0.51704216  0.52522945 -2.6320689 ]]
Iteration 800 of 1000: loss=0.632 " + "l1=0.00109" + "l2=0.631 f=-0.504 shape=(1, 9000, 1)
logits [[-0.46164304  0.4869651   0.4880547  -2.530946  ]]
Iteration 900 of 1000: loss=0.601 " + "l1=0.000828" + "l2=0.6 f=-0.498 shape=(1, 9000, 1)
logits [[-0.45973146  0.4745522   0.47538024 -2.4840016 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.69 " + "l1=2.69" + "l2=0 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.8945262 -1.9924744  2.7404687 -5.928225 ]]
Iteration 100 of 1000: loss=1.75 " + "l1=1.42" + "l2=0.326 f=-0.593 shape=(1, 9000, 1)
logits [[ 1.5485284  -0.74191755  1.8451878  -5.0249844 ]]
Iteration 200 of 1000: loss=1.51 " + "l1=1.12" + "l2=0.394 f=-0.58 shape=(1, 9000, 1)
logits [[ 1.1362171  -0.40752488  1.6282885  -4.677708  ]]
Iteration 300 of 1000: loss=1.39 " + "l1=0.975" + "l2=0.41 f=-0.571 shape=(1, 9000, 1)
logits [[ 0.9287956  -0.26601914  1.5069782  -4.4519715 ]]
Iteration 400 of 1000: loss=1.26 " + "l1=0.806" + "l2=0.454 f=-0.563 shape=(1, 9000, 1)
logits [[ 0.6938319  -0.07532052  1.3909048  -4.2597756 ]]
Iteration 500 of 1000: loss=1.07 " + "l1=0.582" + "l2=0.491 f=-0.559 shape=(1, 9000, 1)
logits [[ 0.45604166  0.11580772  1.1735461  -3.9808264 ]]
Iteration 600 of 1000: loss=0.907 " + "l1=0.363" + "l2=0.544 f=-0.533 shape=(1, 9000, 1)
logits [[ 0.13502443  0.30255157  0.9623427  -3.5338    ]]
Iteration 700 of 1000: loss=0.778 " + "l1=0.201" + "l2=0.577 f=-0.517 shape=(1, 9000, 1)
logits [[-0.12046787  0.40703744  0.7725327  -3.1256864 ]]
Iteration 800 of 1000: loss=0.706 " + "l1=0.109" + "l2=0.596 f=-0.515 shape=(1, 9000, 1)
logits [[-0.32627723  0.45451623  0.65355074 -2.8402865 ]]
Iteration 900 of 1000: loss=0.64 " + "l1=0.0232" + "l2=0.617 f=-0.513 shape=(1, 9000, 1)
logits [[-0.5182428   0.5038981   0.54602975 -2.5841463 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.59 " + "l1=1.59" + "l2=0 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.8945262 -1.9924744  2.7404687 -5.928225 ]]
Iteration 100 of 1000: loss=1.19 " + "l1=1.05" + "l2=0.143 f=-0.6 shape=(1, 9000, 1)
logits [[ 2.0499182 -1.1166409  2.1002457 -5.433973 ]]
Iteration 200 of 1000: loss=1.07 " + "l1=0.882" + "l2=0.193 f=-0.601 shape=(1, 9000, 1)
logits [[ 1.6956108 -0.8198223  1.8929975 -5.1720824]]
Iteration 300 of 1000: loss=0.995 " + "l1=0.769" + "l2=0.226 f=-0.588 shape=(1, 9000, 1)
logits [[ 1.4370589  -0.61706334  1.749      -4.9209843 ]]
Iteration 400 of 1000: loss=0.944 " + "l1=0.705" + "l2=0.239 f=-0.583 shape=(1, 9000, 1)
logits [[ 1.2595727  -0.50552064  1.6640284  -4.749363  ]]
Iteration 500 of 1000: loss=0.904 " + "l1=0.657" + "l2=0.247 f=-0.582 shape=(1, 9000, 1)
logits [[ 1.1265526  -0.42098445  1.6013026  -4.6341763 ]]
Iteration 600 of 1000: loss=0.86 " + "l1=0.601" + "l2=0.259 f=-0.58 shape=(1, 9000, 1)
logits [[ 0.98000836 -0.3308514   1.5178767  -4.487364  ]]
Iteration 700 of 1000: loss=0.805 " + "l1=0.536" + "l2=0.269 f=-0.562 shape=(1, 9000, 1)
logits [[ 0.86566645 -0.23671304  1.4124609  -4.2886243 ]]
Iteration 800 of 1000: loss=0.751 " + "l1=0.481" + "l2=0.271 f=-0.542 shape=(1, 9000, 1)
logits [[ 0.75562286 -0.16118066  1.3173707  -4.0778613 ]]
Iteration 900 of 1000: loss=0.704 " + "l1=0.431" + "l2=0.273 f=-0.52 shape=(1, 9000, 1)
logits [[ 0.63748854 -0.09448838  1.2309707  -3.8539412 ]]
--- 315.2954144477844 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00154 " + "l1=0.00154" + "l2=0 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.8945262 -1.9924744  2.7404687 -5.928225 ]]
Iteration 100 of 1000: loss=0.00131 " + "l1=0.00112" + "l2=0.000191 f=-0.573 shape=(1, 9000, 1)
logits [[ 2.8588207 -1.992493   2.7468083 -5.905131 ]]
Iteration 200 of 1000: loss=0.00125 " + "l1=0.00108" + "l2=0.000168 f=-0.573 shape=(1, 9000, 1)
logits [[ 2.8550177 -1.9924089  2.7468865 -5.902562 ]]
Iteration 300 of 1000: loss=0.00119 " + "l1=0.00101" + "l2=0.000184 f=-0.574 shape=(1, 9000, 1)
logits [[ 2.848385  -1.9922305  2.7474444 -5.8978515]]
Iteration 400 of 1000: loss=0.00116 " + "l1=0.00093" + "l2=0.000233 f=-0.574 shape=(1, 9000, 1)
logits [[ 2.8410003 -1.991995   2.7479665 -5.892468 ]]
Iteration 500 of 1000: loss=0.00112 " + "l1=0.000847" + "l2=0.000275 f=-0.574 shape=(1, 9000, 1)
logits [[ 2.8331883 -1.9915658  2.7485156 -5.88676  ]]
Iteration 600 of 1000: loss=0.00113 " + "l1=0.000766" + "l2=0.000363 f=-0.574 shape=(1, 9000, 1)
logits [[ 2.8257356 -1.991454   2.749156  -5.8810973]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0154 " + "l1=0.0154" + "l2=0 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.8945262 -1.9924744  2.7404687 -5.928225 ]]
Iteration 100 of 1000: loss=0.0025 " + "l1=1.83e-05" + "l2=0.00248 f=-0.577 shape=(1, 9000, 1)
logits [[ 2.7604697 -1.9831632  2.760287  -5.8441668]]
Iteration 200 of 1000: loss=0.0017 " + "l1=0" + "l2=0.0017 f=-0.577 shape=(1, 9000, 1)
logits [[ 2.755405  -1.9836267  2.7581608 -5.839137 ]]
Iteration 300 of 1000: loss=0.00128 " + "l1=0" + "l2=0.00128 f=-0.577 shape=(1, 9000, 1)
logits [[ 2.756202  -1.9849794  2.756709  -5.837124 ]]
Iteration 400 of 1000: loss=0.0011 " + "l1=0" + "l2=0.0011 f=-0.577 shape=(1, 9000, 1)
logits [[ 2.7558954 -1.986741   2.7561712 -5.8341336]]
Iteration 500 of 1000: loss=0.00102 " + "l1=0" + "l2=0.00102 f=-0.577 shape=(1, 9000, 1)
logits [[ 2.7547994 -1.9888207  2.756124  -5.830423 ]]
Iteration 600 of 1000: loss=0.000944 " + "l1=0" + "l2=0.000944 f=-0.577 shape=(1, 9000, 1)
logits [[ 2.754174  -1.9906954  2.7561104 -5.827503 ]]
Iteration 700 of 1000: loss=0.000975 " + "l1=0" + "l2=0.000975 f=-0.577 shape=(1, 9000, 1)
logits [[ 2.7539818 -1.9923123  2.7559898 -5.8251123]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.00847 " + "l1=0.00847" + "l2=0 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.8945262 -1.9924744  2.7404687 -5.928225 ]]
Iteration 100 of 1000: loss=0.00289 " + "l1=0.000338" + "l2=0.00255 f=-0.576 shape=(1, 9000, 1)
logits [[ 2.7665336 -1.9834813  2.7603939 -5.8483768]]
Iteration 200 of 1000: loss=0.00171 " + "l1=4.58e-05" + "l2=0.00166 f=-0.577 shape=(1, 9000, 1)
logits [[ 2.7585435 -1.9837466  2.7577105 -5.8409023]]
Iteration 300 of 1000: loss=0.00131 " + "l1=2.05e-05" + "l2=0.00129 f=-0.577 shape=(1, 9000, 1)
logits [[ 2.7568085 -1.9847665  2.7564356 -5.8373046]]
Iteration 400 of 1000: loss=0.00111 " + "l1=3.27e-06" + "l2=0.00111 f=-0.577 shape=(1, 9000, 1)
logits [[ 2.7557354 -1.9862165  2.755676  -5.833574 ]]
Iteration 500 of 1000: loss=0.00104 " + "l1=0" + "l2=0.00104 f=-0.577 shape=(1, 9000, 1)
logits [[ 2.7538908 -1.9880906  2.7557054 -5.8293242]]
Iteration 600 of 1000: loss=0.00112 " + "l1=2.01e-05" + "l2=0.0011 f=-0.577 shape=(1, 9000, 1)
logits [[ 2.7556946 -1.990363   2.7553294 -5.827742 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00501 " + "l1=0.00501" + "l2=0 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.8945262 -1.9924744  2.7404687 -5.928225 ]]
Iteration 100 of 1000: loss=0.00287 " + "l1=0.0018" + "l2=0.00107 f=-0.575 shape=(1, 9000, 1)
logits [[ 2.810174  -1.989334   2.754763  -5.8748493]]
Iteration 200 of 1000: loss=0.00211 " + "l1=0.000764" + "l2=0.00134 f=-0.576 shape=(1, 9000, 1)
logits [[ 2.7804208 -1.9860839  2.7568982 -5.8560715]]
Iteration 300 of 1000: loss=0.00145 " + "l1=1.52e-06" + "l2=0.00145 f=-0.577 shape=(1, 9000, 1)
logits [[ 2.75769   -1.9840254  2.7576432 -5.8402953]]
Iteration 400 of 1000: loss=0.00118 " + "l1=3.22e-05" + "l2=0.00114 f=-0.577 shape=(1, 9000, 1)
logits [[ 2.7571936 -1.9852198  2.7562013 -5.837159 ]]
Iteration 500 of 1000: loss=0.00104 " + "l1=0" + "l2=0.00104 f=-0.577 shape=(1, 9000, 1)
logits [[ 2.7548933 -1.9868702  2.7559872 -5.8326087]]
Iteration 600 of 1000: loss=0.000991 " + "l1=4.24e-06" + "l2=0.000987 f=-0.577 shape=(1, 9000, 1)
logits [[ 2.7558215 -1.9891402  2.755691  -5.8302536]]
Iteration 700 of 1000: loss=0.00105 " + "l1=2.68e-05" + "l2=0.00102 f=-0.577 shape=(1, 9000, 1)
logits [[ 2.7562928 -1.9909741  2.7554684 -5.8280854]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00327 " + "l1=0.00327" + "l2=0 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.8945262 -1.9924744  2.7404687 -5.928225 ]]
Iteration 100 of 1000: loss=0.0023 " + "l1=0.00177" + "l2=0.000538 f=-0.574 shape=(1, 9000, 1)
logits [[ 2.8338208 -1.9907221  2.75075   -5.8899055]]
Iteration 200 of 1000: loss=0.00201 " + "l1=0.00139" + "l2=0.000621 f=-0.575 shape=(1, 9000, 1)
logits [[ 2.8174887 -1.9895927  2.7522116 -5.879392 ]]
Iteration 300 of 1000: loss=0.00173 " + "l1=0.000967" + "l2=0.000766 f=-0.576 shape=(1, 9000, 1)
logits [[ 2.7995439 -1.9882559  2.7540407 -5.867338 ]]
Iteration 400 of 1000: loss=0.00146 " + "l1=0.000572" + "l2=0.000883 f=-0.576 shape=(1, 9000, 1)
logits [[ 2.7819695 -1.9869057  2.7550666 -5.854687 ]]
Iteration 500 of 1000: loss=0.00127 " + "l1=0.000172" + "l2=0.00109 f=-0.577 shape=(1, 9000, 1)
logits [[ 2.7645934 -1.9861931  2.7564912 -5.841874 ]]
Iteration 600 of 1000: loss=0.00101 " + "l1=1.34e-06" + "l2=0.00101 f=-0.577 shape=(1, 9000, 1)
logits [[ 2.7566295 -1.9874357  2.7565663 -5.834058 ]]
Iteration 700 of 1000: loss=0.00101 " + "l1=8.61e-07" + "l2=0.00101 f=-0.577 shape=(1, 9000, 1)
logits [[ 2.7562172 -1.9893526  2.7561767 -5.830831 ]]
--- 220.27646374702454 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0882 " + "l1=0.0882" + "l2=0 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.8945262 -1.9924744  2.7404687 -5.928225 ]]
Iteration 100 of 1000: loss=0.0872 " + "l1=0.0867" + "l2=0.000501 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.8245723 -1.9770414  2.7183242 -5.849774 ]]
Iteration 200 of 1000: loss=0.0869 " + "l1=0.0864" + "l2=0.000552 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.8065586 -1.9741014  2.7117882 -5.8289814]]
Iteration 300 of 1000: loss=0.0866 " + "l1=0.0859" + "l2=0.000707 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.785617  -1.9706882  2.704263  -5.8040695]]
Iteration 400 of 1000: loss=0.0863 " + "l1=0.0854" + "l2=0.000847 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.7635832 -1.9673928  2.696396  -5.7776504]]
Iteration 500 of 1000: loss=0.086 " + "l1=0.0849" + "l2=0.00105 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.7408788 -1.9641892  2.6883037 -5.750023 ]]
Iteration 600 of 1000: loss=0.0856 " + "l1=0.0844" + "l2=0.00122 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.7191465 -1.9608786  2.679935  -5.7221894]]
Iteration 700 of 1000: loss=0.0853 " + "l1=0.0839" + "l2=0.00141 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.6984773 -1.9578458  2.671708  -5.6949954]]
Iteration 800 of 1000: loss=0.0851 " + "l1=0.0835" + "l2=0.00162 f=-0.57 shape=(1, 9000, 1)
logits [[ 2.6790748 -1.9551232  2.6636693 -5.6690345]]
Iteration 900 of 1000: loss=0.0849 " + "l1=0.083" + "l2=0.00189 f=-0.57 shape=(1, 9000, 1)
logits [[ 2.6592362 -1.9524666  2.6554744 -5.642629 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.882 " + "l1=0.882" + "l2=0 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.8945262 -1.9924744  2.7404687 -5.928225 ]]
Iteration 100 of 1000: loss=0.811 " + "l1=0.787" + "l2=0.024 f=-0.56 shape=(1, 9000, 1)
logits [[ 2.4879982 -1.8473762  2.493897  -5.3730893]]
Iteration 200 of 1000: loss=0.772 " + "l1=0.734" + "l2=0.0386 f=-0.55 shape=(1, 9000, 1)
logits [[ 2.2508588 -1.7496578  2.3167326 -5.0198073]]
Iteration 300 of 1000: loss=0.729 " + "l1=0.674" + "l2=0.0549 f=-0.549 shape=(1, 9000, 1)
logits [[ 1.9806798 -1.6265622  2.0932617 -4.645357 ]]
Iteration 400 of 1000: loss=0.69 " + "l1=0.625" + "l2=0.0652 f=-0.542 shape=(1, 9000, 1)
logits [[ 1.7502531 -1.5745956  1.9515222 -4.293881 ]]
Iteration 500 of 1000: loss=0.656 " + "l1=0.583" + "l2=0.0727 f=-0.527 shape=(1, 9000, 1)
logits [[ 1.5751292 -1.5492519  1.84981   -3.9845324]]
Iteration 600 of 1000: loss=0.626 " + "l1=0.542" + "l2=0.0836 f=-0.515 shape=(1, 9000, 1)
logits [[ 1.3890519 -1.5289707  1.7501577 -3.6715996]]
Iteration 700 of 1000: loss=0.597 " + "l1=0.501" + "l2=0.0961 f=-0.502 shape=(1, 9000, 1)
logits [[ 1.1961915 -1.5215865  1.6604823 -3.3446925]]
Iteration 800 of 1000: loss=0.567 " + "l1=0.458" + "l2=0.109 f=-0.487 shape=(1, 9000, 1)
logits [[ 1.0008459 -1.5119998  1.5713855 -3.0067432]]
Iteration 900 of 1000: loss=0.542 " + "l1=0.424" + "l2=0.118 f=-0.472 shape=(1, 9000, 1)
logits [[ 0.8438271 -1.471603   1.4919131 -2.7511666]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.82 " + "l1=8.82" + "l2=0 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.8945262 -1.9924744  2.7404687 -5.928225 ]]
Iteration 100 of 1000: loss=3.93 " + "l1=1.87" + "l2=2.06 f=-0.366 shape=(1, 9000, 1)
logits [[-0.27610442 -1.1175212   0.8980479  -0.9688352 ]]
Iteration 200 of 1000: loss=1.81 " + "l1=0.0589" + "l2=1.75 f=-0.262 shape=(1, 9000, 1)
logits [[-0.61632955 -1.2142521   0.42112255  0.36227018]]
Iteration 300 of 1000: loss=1.44 " + "l1=0" + "l2=1.44 f=-0.261 shape=(1, 9000, 1)
logits [[-0.63779885 -1.2362796   0.40663382  0.42434075]]
Iteration 400 of 1000: loss=1.25 " + "l1=0" + "l2=1.25 f=-0.259 shape=(1, 9000, 1)
logits [[-0.6369487  -1.2329427   0.41255087  0.42123872]]
Iteration 500 of 1000: loss=1.15 " + "l1=0" + "l2=1.15 f=-0.255 shape=(1, 9000, 1)
logits [[-0.6908376  -1.1992335   0.40395996  0.46645394]]
Iteration 600 of 1000: loss=1.03 " + "l1=0" + "l2=1.03 f=-0.253 shape=(1, 9000, 1)
logits [[-0.6831125  -1.1767793   0.42257717  0.42453608]]
Iteration 700 of 1000: loss=0.953 " + "l1=0" + "l2=0.953 f=-0.254 shape=(1, 9000, 1)
logits [[-0.7016686  -1.1549127   0.41771212  0.42356515]]
Iteration 800 of 1000: loss=0.887 " + "l1=0" + "l2=0.887 f=-0.252 shape=(1, 9000, 1)
logits [[-0.7114836  -1.1365924   0.41272843  0.42734826]]
Iteration 900 of 1000: loss=0.827 " + "l1=0" + "l2=0.827 f=-0.249 shape=(1, 9000, 1)
logits [[-0.7178496  -1.1179091   0.41401714  0.42671692]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.85 " + "l1=4.85" + "l2=0 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.8945262 -1.9924744  2.7404687 -5.928225 ]]
Iteration 100 of 1000: loss=3.2 " + "l1=2.57" + "l2=0.625 f=-0.499 shape=(1, 9000, 1)
logits [[ 0.9330975 -1.3299463  1.5404476 -3.1403112]]
Iteration 200 of 1000: loss=1.97 " + "l1=0.768" + "l2=1.2 f=-0.345 shape=(1, 9000, 1)
logits [[-0.29817232 -1.1178176   0.71610075 -0.6802572 ]]
Iteration 300 of 1000: loss=1.26 " + "l1=0" + "l2=1.26 f=-0.264 shape=(1, 9000, 1)
logits [[-0.68215185 -1.1295905   0.3774742   0.37957886]]
Iteration 400 of 1000: loss=1.04 " + "l1=0.00128" + "l2=1.04 f=-0.256 shape=(1, 9000, 1)
logits [[-0.64021397 -1.1420712   0.38031527  0.37799677]]
Iteration 500 of 1000: loss=0.918 " + "l1=0.00452" + "l2=0.913 f=-0.254 shape=(1, 9000, 1)
logits [[-0.6403489  -1.1522675   0.3927127   0.38448608]]
Iteration 600 of 1000: loss=0.834 " + "l1=0.00154" + "l2=0.832 f=-0.248 shape=(1, 9000, 1)
logits [[-0.64707845 -1.1445541   0.4012164   0.3984246 ]]
Iteration 700 of 1000: loss=0.774 " + "l1=0" + "l2=0.774 f=-0.241 shape=(1, 9000, 1)
logits [[-0.6553862  -1.1258123   0.4029405   0.41403887]]
Iteration 800 of 1000: loss=0.724 " + "l1=0" + "l2=0.724 f=-0.237 shape=(1, 9000, 1)
logits [[-0.6514033  -1.1329691   0.41675687  0.41931772]]
Iteration 900 of 1000: loss=0.687 " + "l1=0.0122" + "l2=0.674 f=-0.23 shape=(1, 9000, 1)
logits [[-0.6328666  -1.1290499   0.43249634  0.41023302]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.87 " + "l1=2.87" + "l2=0 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.8945262 -1.9924744  2.7404687 -5.928225 ]]
Iteration 100 of 1000: loss=2.21 " + "l1=1.94" + "l2=0.269 f=-0.537 shape=(1, 9000, 1)
logits [[ 1.5547824 -1.4410383  1.8555267 -4.1179266]]
Iteration 200 of 1000: loss=1.84 " + "l1=1.44" + "l2=0.397 f=-0.49 shape=(1, 9000, 1)
logits [[ 0.8710279 -1.3765736  1.4855961 -2.9416175]]
Iteration 300 of 1000: loss=1.44 " + "l1=0.894" + "l2=0.544 f=-0.418 shape=(1, 9000, 1)
logits [[ 0.21122333 -1.3435215   1.1054152  -1.6467571 ]]
Iteration 400 of 1000: loss=1.17 " + "l1=0.585" + "l2=0.583 f=-0.371 shape=(1, 9000, 1)
logits [[-0.16114274 -1.3373398   0.9070158  -0.8923982 ]]
Iteration 500 of 1000: loss=0.965 " + "l1=0.306" + "l2=0.659 f=-0.336 shape=(1, 9000, 1)
logits [[-0.4565681  -1.3781834   0.7152037  -0.22585815]]
Iteration 600 of 1000: loss=0.788 " + "l1=0.00958" + "l2=0.778 f=-0.275 shape=(1, 9000, 1)
logits [[-0.7213385  -1.3849514   0.5175271   0.48803902]]
Iteration 700 of 1000: loss=0.676 " + "l1=0.000283" + "l2=0.675 f=-0.256 shape=(1, 9000, 1)
logits [[-0.7188296 -1.3419491  0.5178661  0.5169955]]
Iteration 800 of 1000: loss=0.619 " + "l1=0.00354" + "l2=0.615 f=-0.254 shape=(1, 9000, 1)
logits [[-0.7332787 -1.3222402  0.5254333  0.5145467]]
Iteration 900 of 1000: loss=0.574 " + "l1=0.00332" + "l2=0.571 f=-0.251 shape=(1, 9000, 1)
logits [[-0.7446565  -1.3162116   0.5332193   0.52300155]]
--- 317.57336020469666 seconds ---
Adv result:3
Loading record A02722
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0747 " + "l1=0.0747" + "l2=0 f=-0.557 shape=(1, 9000, 1)
logits [[ 4.711137  -2.7626235  3.4666622 -7.6419044]]
Iteration 100 of 1000: loss=0.0745 " + "l1=0.0742" + "l2=0.000219 f=-0.556 shape=(1, 9000, 1)
logits [[ 4.6805587 -2.7434258  3.4539747 -7.614205 ]]
Iteration 200 of 1000: loss=0.0744 " + "l1=0.0742" + "l2=0.000202 f=-0.556 shape=(1, 9000, 1)
logits [[ 4.676887  -2.74028    3.4511638 -7.61007  ]]
Iteration 300 of 1000: loss=0.0743 " + "l1=0.0741" + "l2=0.000247 f=-0.555 shape=(1, 9000, 1)
logits [[ 4.670349  -2.7363214  3.4478717 -7.603255 ]]
Iteration 400 of 1000: loss=0.0743 " + "l1=0.074" + "l2=0.000313 f=-0.555 shape=(1, 9000, 1)
logits [[ 4.6632195 -2.7322254  3.4444997 -7.5957894]]
Iteration 500 of 1000: loss=0.0742 " + "l1=0.0738" + "l2=0.0004 f=-0.555 shape=(1, 9000, 1)
logits [[ 4.656287  -2.7283902  3.441329  -7.5883784]]
Iteration 600 of 1000: loss=0.0742 " + "l1=0.0737" + "l2=0.000485 f=-0.555 shape=(1, 9000, 1)
logits [[ 4.6494803 -2.7249463  3.4384484 -7.5810194]]
Iteration 700 of 1000: loss=0.0742 " + "l1=0.0736" + "l2=0.000579 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.6429477 -2.7219305  3.4359272 -7.573945 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.747 " + "l1=0.747" + "l2=0 f=-0.557 shape=(1, 9000, 1)
logits [[ 4.711137  -2.7626235  3.4666622 -7.6419044]]
Iteration 100 of 1000: loss=0.723 " + "l1=0.71" + "l2=0.0128 f=-0.549 shape=(1, 9000, 1)
logits [[ 4.4754124 -2.6268709  3.3757174 -7.419581 ]]
Iteration 200 of 1000: loss=0.711 " + "l1=0.692" + "l2=0.0182 f=-0.544 shape=(1, 9000, 1)
logits [[ 4.3593087 -2.5647442  3.3268907 -7.2982335]]
Iteration 300 of 1000: loss=0.696 " + "l1=0.671" + "l2=0.0251 f=-0.543 shape=(1, 9000, 1)
logits [[ 4.2256694 -2.48533    3.2596922 -7.172192 ]]
Iteration 400 of 1000: loss=0.685 " + "l1=0.656" + "l2=0.0295 f=-0.539 shape=(1, 9000, 1)
logits [[ 4.117423  -2.4411883  3.2187917 -7.0508904]]
Iteration 500 of 1000: loss=0.677 " + "l1=0.644" + "l2=0.0324 f=-0.535 shape=(1, 9000, 1)
logits [[ 4.0289426 -2.415591   3.1901865 -6.945451 ]]
Iteration 600 of 1000: loss=0.671 " + "l1=0.635" + "l2=0.0356 f=-0.531 shape=(1, 9000, 1)
logits [[ 3.953807  -2.3958623  3.1672425 -6.848888 ]]
Iteration 700 of 1000: loss=0.665 " + "l1=0.625" + "l2=0.0392 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.8806207 -2.3733208  3.1442976 -6.750882 ]]
Iteration 800 of 1000: loss=0.658 " + "l1=0.616" + "l2=0.0425 f=-0.519 shape=(1, 9000, 1)
logits [[ 3.8057246 -2.3516014  3.1204011 -6.6523886]]
Iteration 900 of 1000: loss=0.651 " + "l1=0.605" + "l2=0.0458 f=-0.513 shape=(1, 9000, 1)
logits [[ 3.7245455 -2.3272517  3.097467  -6.5483127]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.47 " + "l1=7.47" + "l2=0 f=-0.557 shape=(1, 9000, 1)
logits [[ 4.711137  -2.7626235  3.4666622 -7.6419044]]
Iteration 100 of 1000: loss=5 " + "l1=3.86" + "l2=1.15 f=-0.492 shape=(1, 9000, 1)
logits [[ 2.3782928 -1.4785916  2.3707404 -5.2380533]]
Iteration 200 of 1000: loss=4.35 " + "l1=3.07" + "l2=1.27 f=-0.439 shape=(1, 9000, 1)
logits [[ 1.9111956 -1.1347648  1.9388634 -4.4724164]]
Iteration 300 of 1000: loss=3.79 " + "l1=2.27" + "l2=1.52 f=-0.393 shape=(1, 9000, 1)
logits [[ 1.4940107 -0.7625557  1.5058511 -3.8108037]]
Iteration 400 of 1000: loss=3.31 " + "l1=1.72" + "l2=1.59 f=-0.372 shape=(1, 9000, 1)
logits [[ 1.1017568  -0.52565545  1.1971873  -3.2607985 ]]
Iteration 500 of 1000: loss=2.91 " + "l1=1.3" + "l2=1.61 f=-0.348 shape=(1, 9000, 1)
logits [[ 0.80796844 -0.33288735  0.96694577 -2.8340666 ]]
Iteration 600 of 1000: loss=2.61 " + "l1=0.958" + "l2=1.65 f=-0.32 shape=(1, 9000, 1)
logits [[ 0.47495827 -0.16419409  0.79352796 -2.3851995 ]]
Iteration 700 of 1000: loss=2.44 " + "l1=0.823" + "l2=1.62 f=-0.309 shape=(1, 9000, 1)
logits [[ 0.34059936 -0.11594533  0.70687944 -2.167477  ]]
Iteration 800 of 1000: loss=2.3 " + "l1=0.774" + "l2=1.52 f=-0.295 shape=(1, 9000, 1)
logits [[ 0.25238535 -0.11434629  0.6592974  -1.978425  ]]
Iteration 900 of 1000: loss=2.17 " + "l1=0.728" + "l2=1.45 f=-0.276 shape=(1, 9000, 1)
logits [[ 0.20804086 -0.11495214  0.61306053 -1.8100297 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=74.7 " + "l1=74.7" + "l2=0 f=-0.557 shape=(1, 9000, 1)
logits [[ 4.711137  -2.7626235  3.4666622 -7.6419044]]
Iteration 100 of 1000: loss=11.4 " + "l1=0" + "l2=11.4 f=-0.405 shape=(1, 9000, 1)
logits [[-0.47563428  0.47507074  0.43722868 -2.0563781 ]]
Iteration 200 of 1000: loss=6.71 " + "l1=0" + "l2=6.71 f=-0.38 shape=(1, 9000, 1)
logits [[-0.24208489  0.4772429   0.44222242 -2.1992304 ]]
Iteration 300 of 1000: loss=5.41 " + "l1=0" + "l2=5.41 f=-0.37 shape=(1, 9000, 1)
logits [[-0.0489714   0.48642057  0.48229045 -2.3989124 ]]
Iteration 400 of 1000: loss=4.92 " + "l1=0" + "l2=4.92 f=-0.36 shape=(1, 9000, 1)
logits [[-0.03147917  0.5011993   0.48095143 -2.391433  ]]
Iteration 500 of 1000: loss=4.6 " + "l1=0" + "l2=4.6 f=-0.356 shape=(1, 9000, 1)
logits [[-0.03959838  0.497009    0.47041452 -2.35183   ]]
Iteration 600 of 1000: loss=4.34 " + "l1=0" + "l2=4.34 f=-0.351 shape=(1, 9000, 1)
logits [[-0.03702417  0.48971272  0.46489093 -2.3228116 ]]
Iteration 700 of 1000: loss=4.18 " + "l1=0.156" + "l2=4.03 f=-0.349 shape=(1, 9000, 1)
logits [[-0.0097823   0.46512115  0.48076397 -2.3335457 ]]
Iteration 800 of 1000: loss=3.84 " + "l1=0" + "l2=3.84 f=-0.352 shape=(1, 9000, 1)
logits [[-0.04121371  0.47698677  0.4729279  -2.3148544 ]]
Iteration 900 of 1000: loss=3.78 " + "l1=0" + "l2=3.78 f=-0.355 shape=(1, 9000, 1)
logits [[-0.09696247  0.5115559   0.43970162 -2.2727041 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=41.1 " + "l1=41.1" + "l2=0 f=-0.557 shape=(1, 9000, 1)
logits [[ 4.711137  -2.7626235  3.4666622 -7.6419044]]
Iteration 100 of 1000: loss=10.3 " + "l1=2.55" + "l2=7.79 f=-0.382 shape=(1, 9000, 1)
logits [[ 0.16240704  0.20325972  0.6665853  -2.5585873 ]]
Iteration 200 of 1000: loss=5.48 " + "l1=0" + "l2=5.48 f=-0.361 shape=(1, 9000, 1)
logits [[-0.08780976  0.49885616  0.49143288 -2.3478131 ]]
Iteration 300 of 1000: loss=4.65 " + "l1=0.099" + "l2=4.56 f=-0.351 shape=(1, 9000, 1)
logits [[-0.04525407  0.48675823  0.5047519  -2.3494895 ]]
Iteration 400 of 1000: loss=4.15 " + "l1=0" + "l2=4.15 f=-0.352 shape=(1, 9000, 1)
logits [[-0.08438792  0.50324756  0.49124375 -2.317538  ]]
Iteration 500 of 1000: loss=3.85 " + "l1=0" + "l2=3.85 f=-0.351 shape=(1, 9000, 1)
logits [[-0.0987557   0.50112474  0.48232028 -2.289683  ]]
Iteration 600 of 1000: loss=3.59 " + "l1=0" + "l2=3.59 f=-0.352 shape=(1, 9000, 1)
logits [[-0.11481684  0.49735412  0.4683447  -2.2578144 ]]
Iteration 700 of 1000: loss=3.33 " + "l1=0" + "l2=3.33 f=-0.352 shape=(1, 9000, 1)
logits [[-0.0919558   0.46686867  0.46242356 -2.246773  ]]
Iteration 800 of 1000: loss=3.18 " + "l1=0" + "l2=3.18 f=-0.349 shape=(1, 9000, 1)
logits [[-0.06552599  0.4630465   0.45300218 -2.2460008 ]]
Iteration 900 of 1000: loss=3.04 " + "l1=0" + "l2=3.04 f=-0.344 shape=(1, 9000, 1)
logits [[-0.04375076  0.44921634  0.4465461  -2.2285273 ]]
--- 300.8461902141571 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0124 " + "l1=0.0124" + "l2=0 f=-0.557 shape=(1, 9000, 1)
logits [[ 4.711137  -2.7626235  3.4666622 -7.6419044]]
Iteration 100 of 1000: loss=0.0123 " + "l1=0.0121" + "l2=0.000162 f=-0.557 shape=(1, 9000, 1)
logits [[ 4.68615  -2.768244  3.473115 -7.618382]]
Iteration 200 of 1000: loss=0.0122 " + "l1=0.0121" + "l2=0.000125 f=-0.557 shape=(1, 9000, 1)
logits [[ 4.685006  -2.7687438  3.473091  -7.616451 ]]
Iteration 300 of 1000: loss=0.0122 " + "l1=0.0121" + "l2=0.00015 f=-0.557 shape=(1, 9000, 1)
logits [[ 4.6818295 -2.7696207  3.473701  -7.6127934]]
Iteration 400 of 1000: loss=0.0123 " + "l1=0.012" + "l2=0.000223 f=-0.557 shape=(1, 9000, 1)
logits [[ 4.678044  -2.7705326  3.474322  -7.6083035]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.124 " + "l1=0.124" + "l2=0 f=-0.557 shape=(1, 9000, 1)
logits [[ 4.711137  -2.7626235  3.4666622 -7.6419044]]
Iteration 100 of 1000: loss=0.11 " + "l1=0.102" + "l2=0.00836 f=-0.56 shape=(1, 9000, 1)
logits [[ 4.543335  -2.821846   3.5279503 -7.4877462]]
Iteration 200 of 1000: loss=0.105 " + "l1=0.0932" + "l2=0.0114 f=-0.561 shape=(1, 9000, 1)
logits [[ 4.4774218 -2.8394015  3.5449781 -7.4253073]]
Iteration 300 of 1000: loss=0.101 " + "l1=0.0873" + "l2=0.0135 f=-0.561 shape=(1, 9000, 1)
logits [[ 4.427588  -2.852423   3.5550406 -7.3753533]]
Iteration 400 of 1000: loss=0.0972 " + "l1=0.0812" + "l2=0.0159 f=-0.56 shape=(1, 9000, 1)
logits [[ 4.373644  -2.8613787  3.5612435 -7.3130035]]
Iteration 500 of 1000: loss=0.0932 " + "l1=0.0754" + "l2=0.0177 f=-0.558 shape=(1, 9000, 1)
logits [[ 4.318384  -2.8644197  3.5640228 -7.249391 ]]
Iteration 600 of 1000: loss=0.0899 " + "l1=0.0715" + "l2=0.0184 f=-0.556 shape=(1, 9000, 1)
logits [[ 4.278374  -2.8628223  3.5632288 -7.2024255]]
Iteration 700 of 1000: loss=0.0871 " + "l1=0.0676" + "l2=0.0195 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.2407722 -2.8624518  3.5645862 -7.1547904]]
Iteration 800 of 1000: loss=0.0841 " + "l1=0.0637" + "l2=0.0204 f=-0.55 shape=(1, 9000, 1)
logits [[ 4.2013416 -2.8618207  3.5644736 -7.104115 ]]
Iteration 900 of 1000: loss=0.0811 " + "l1=0.0591" + "l2=0.022 f=-0.547 shape=(1, 9000, 1)
logits [[ 4.157576  -2.8649766  3.5667565 -7.048485 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.24 " + "l1=1.24" + "l2=0 f=-0.557 shape=(1, 9000, 1)
logits [[ 4.711137  -2.7626235  3.4666622 -7.6419044]]
Iteration 100 of 1000: loss=0.223 " + "l1=0.00725" + "l2=0.216 f=-0.577 shape=(1, 9000, 1)
logits [[ 3.718693  -2.986007   3.7114437 -6.7509446]]
Iteration 200 of 1000: loss=0.161 " + "l1=0.00379" + "l2=0.158 f=-0.577 shape=(1, 9000, 1)
logits [[ 3.6968648 -2.982853   3.6930776 -6.7133956]]
Iteration 300 of 1000: loss=0.134 " + "l1=0.0015" + "l2=0.133 f=-0.572 shape=(1, 9000, 1)
logits [[ 3.6780498 -2.9768076  3.6765528 -6.6674666]]
Iteration 400 of 1000: loss=0.117 " + "l1=0.00115" + "l2=0.116 f=-0.567 shape=(1, 9000, 1)
logits [[ 3.6688335 -2.969861   3.667683  -6.635821 ]]
Iteration 500 of 1000: loss=0.11 " + "l1=0" + "l2=0.11 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.6455817 -2.9665487  3.6663043 -6.5854115]]
Iteration 600 of 1000: loss=0.0992 " + "l1=0" + "l2=0.0992 f=-0.554 shape=(1, 9000, 1)
logits [[ 3.6504087 -2.9608676  3.6668105 -6.572185 ]]
Iteration 700 of 1000: loss=0.0912 " + "l1=0" + "l2=0.0912 f=-0.548 shape=(1, 9000, 1)
logits [[ 3.6523466 -2.9571607  3.6702428 -6.5579877]]
Iteration 800 of 1000: loss=0.0847 " + "l1=0.00576" + "l2=0.0789 f=-0.541 shape=(1, 9000, 1)
logits [[ 3.6765306 -2.9455523  3.6707711 -6.56435  ]]
Iteration 900 of 1000: loss=0.0777 " + "l1=0" + "l2=0.0777 f=-0.536 shape=(1, 9000, 1)
logits [[ 3.6550987 -2.9417596  3.6745806 -6.5319486]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.684 " + "l1=0.684" + "l2=0 f=-0.557 shape=(1, 9000, 1)
logits [[ 4.711137  -2.7626235  3.4666622 -7.6419044]]
Iteration 100 of 1000: loss=0.226 " + "l1=0" + "l2=0.226 f=-0.571 shape=(1, 9000, 1)
logits [[ 3.7306828 -2.998295   3.7358143 -6.7535005]]
Iteration 200 of 1000: loss=0.154 " + "l1=0" + "l2=0.154 f=-0.573 shape=(1, 9000, 1)
logits [[ 3.7083726 -2.9879441  3.711985  -6.7257433]]
Iteration 300 of 1000: loss=0.126 " + "l1=0" + "l2=0.126 f=-0.567 shape=(1, 9000, 1)
logits [[ 3.6909356 -2.977017   3.6962335 -6.676646 ]]
Iteration 400 of 1000: loss=0.108 " + "l1=0.000823" + "l2=0.107 f=-0.559 shape=(1, 9000, 1)
logits [[ 3.6855612 -2.968328   3.6840641 -6.6373525]]
Iteration 500 of 1000: loss=0.0946 " + "l1=0" + "l2=0.0946 f=-0.552 shape=(1, 9000, 1)
logits [[ 3.682077  -2.9645011  3.6840346 -6.608306 ]]
Iteration 600 of 1000: loss=0.0848 " + "l1=0.00367" + "l2=0.0811 f=-0.544 shape=(1, 9000, 1)
logits [[ 3.6919403 -2.958442   3.6852655 -6.5955386]]
Iteration 700 of 1000: loss=0.076 " + "l1=0" + "l2=0.076 f=-0.538 shape=(1, 9000, 1)
logits [[ 3.6800463 -2.9617317  3.6923954 -6.562396 ]]
Iteration 800 of 1000: loss=0.0677 " + "l1=0" + "l2=0.0677 f=-0.529 shape=(1, 9000, 1)
logits [[ 3.6851368 -2.9432852  3.6888156 -6.547031 ]]
Iteration 900 of 1000: loss=0.0622 " + "l1=0" + "l2=0.0622 f=-0.522 shape=(1, 9000, 1)
logits [[ 3.6792119 -2.9275036  3.6827383 -6.5234256]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.404 " + "l1=0.404" + "l2=0 f=-0.557 shape=(1, 9000, 1)
logits [[ 4.711137  -2.7626235  3.4666622 -7.6419044]]
Iteration 100 of 1000: loss=0.241 " + "l1=0.145" + "l2=0.0968 f=-0.551 shape=(1, 9000, 1)
logits [[ 4.11235   -2.9149468  3.667385  -7.067464 ]]
Iteration 200 of 1000: loss=0.178 " + "l1=0.0472" + "l2=0.131 f=-0.558 shape=(1, 9000, 1)
logits [[ 3.8421657 -2.9606447  3.6968951 -6.809201 ]]
Iteration 300 of 1000: loss=0.132 " + "l1=0.00264" + "l2=0.129 f=-0.567 shape=(1, 9000, 1)
logits [[ 3.7048988 -2.9777346  3.6967711 -6.6900115]]
Iteration 400 of 1000: loss=0.108 " + "l1=0.000723" + "l2=0.108 f=-0.559 shape=(1, 9000, 1)
logits [[ 3.6902113 -2.9719052  3.6879869 -6.640902 ]]
Iteration 500 of 1000: loss=0.0909 " + "l1=0" + "l2=0.0909 f=-0.552 shape=(1, 9000, 1)
logits [[ 3.693387  -2.9752173  3.6944263 -6.6212935]]
Iteration 600 of 1000: loss=0.0797 " + "l1=0" + "l2=0.0797 f=-0.544 shape=(1, 9000, 1)
logits [[ 3.6923475 -2.9732785  3.7016952 -6.5964427]]
Iteration 700 of 1000: loss=0.07 " + "l1=0" + "l2=0.07 f=-0.536 shape=(1, 9000, 1)
logits [[ 3.6986575 -2.965209   3.701171  -6.5791264]]
Iteration 800 of 1000: loss=0.0639 " + "l1=0.00141" + "l2=0.0625 f=-0.529 shape=(1, 9000, 1)
logits [[ 3.7004082 -2.9505105  3.69608   -6.560573 ]]
Iteration 900 of 1000: loss=0.0594 " + "l1=0" + "l2=0.0594 f=-0.522 shape=(1, 9000, 1)
logits [[ 3.6743164 -2.9343283  3.6875978 -6.5160346]]
--- 283.4776530265808 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.124 " + "l1=0.124" + "l2=0 f=-0.557 shape=(1, 9000, 1)
logits [[ 4.711137  -2.7626235  3.4666622 -7.6419044]]
Iteration 100 of 1000: loss=0.123 " + "l1=0.122" + "l2=0.000439 f=-0.555 shape=(1, 9000, 1)
logits [[ 4.6619744 -2.7592862  3.4552853 -7.576869 ]]
Iteration 200 of 1000: loss=0.123 " + "l1=0.122" + "l2=0.00046 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.6515265 -2.7584467  3.4524112 -7.5628448]]
Iteration 300 of 1000: loss=0.122 " + "l1=0.122" + "l2=0.000575 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.638045  -2.7568252  3.4487457 -7.545309 ]]
Iteration 400 of 1000: loss=0.122 " + "l1=0.122" + "l2=0.000661 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.62456   -2.7551754  3.44506   -7.5278344]]
Iteration 500 of 1000: loss=0.122 " + "l1=0.121" + "l2=0.000842 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.6113067 -2.7535224  3.4414837 -7.5105724]]
Iteration 600 of 1000: loss=0.122 " + "l1=0.121" + "l2=0.000974 f=-0.552 shape=(1, 9000, 1)
logits [[ 4.597687  -2.751915   3.4376013 -7.493219 ]]
Iteration 700 of 1000: loss=0.122 " + "l1=0.121" + "l2=0.00118 f=-0.552 shape=(1, 9000, 1)
logits [[ 4.584489  -2.7504282  3.433908  -7.4763255]]
Iteration 800 of 1000: loss=0.122 " + "l1=0.12" + "l2=0.00133 f=-0.552 shape=(1, 9000, 1)
logits [[ 4.5720267 -2.7490942  3.4304314 -7.460167 ]]
Iteration 900 of 1000: loss=0.122 " + "l1=0.12" + "l2=0.00147 f=-0.551 shape=(1, 9000, 1)
logits [[ 4.5612073 -2.7478116  3.427439  -7.4458942]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.24 " + "l1=1.24" + "l2=0 f=-0.557 shape=(1, 9000, 1)
logits [[ 4.711137  -2.7626235  3.4666622 -7.6419044]]
Iteration 100 of 1000: loss=1.17 " + "l1=1.13" + "l2=0.036 f=-0.533 shape=(1, 9000, 1)
logits [[ 4.2758946 -2.7190378  3.3652124 -7.055805 ]]
Iteration 200 of 1000: loss=1.13 " + "l1=1.08" + "l2=0.0524 f=-0.518 shape=(1, 9000, 1)
logits [[ 4.0568757 -2.6756527  3.3118918 -6.763157 ]]
Iteration 300 of 1000: loss=1.1 " + "l1=1.04" + "l2=0.0652 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.8651376 -2.6242323  3.2456646 -6.5162897]]
Iteration 400 of 1000: loss=1.07 " + "l1=0.996" + "l2=0.0758 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.6722786 -2.5474448  3.1486702 -6.29151  ]]
Iteration 500 of 1000: loss=1.04 " + "l1=0.946" + "l2=0.0922 f=-0.497 shape=(1, 9000, 1)
logits [[ 3.449841  -2.4762483  3.0508344 -6.0111413]]
Iteration 600 of 1000: loss=1 " + "l1=0.896" + "l2=0.109 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.227454  -2.4227622  2.9710042 -5.7292023]]
Iteration 700 of 1000: loss=0.972 " + "l1=0.851" + "l2=0.121 f=-0.478 shape=(1, 9000, 1)
logits [[ 3.0370336 -2.3714695  2.8958774 -5.4740005]]
Iteration 800 of 1000: loss=0.942 " + "l1=0.808" + "l2=0.134 f=-0.468 shape=(1, 9000, 1)
logits [[ 2.85185   -2.3173816  2.8228366 -5.227869 ]]
Iteration 900 of 1000: loss=0.914 " + "l1=0.778" + "l2=0.136 f=-0.456 shape=(1, 9000, 1)
logits [[ 2.7423224 -2.2693932  2.7410076 -5.039617 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.4 " + "l1=12.4" + "l2=0 f=-0.557 shape=(1, 9000, 1)
logits [[ 4.711137  -2.7626235  3.4666622 -7.6419044]]
Iteration 100 of 1000: loss=6.65 " + "l1=3.74" + "l2=2.9 f=-0.297 shape=(1, 9000, 1)
logits [[ 1.2423525 -1.9459959  1.6303376 -2.1135428]]
Iteration 200 of 1000: loss=4.62 " + "l1=1.28" + "l2=3.34 f=-0.228 shape=(1, 9000, 1)
logits [[ 0.24792075 -1.7834977   0.9489173  -0.3265326 ]]
Iteration 300 of 1000: loss=3.65 " + "l1=0.338" + "l2=3.31 f=-0.222 shape=(1, 9000, 1)
logits [[-0.26373357 -1.6503619   0.6811468   0.34319398]]
Iteration 400 of 1000: loss=2.8 " + "l1=0.012" + "l2=2.79 f=-0.241 shape=(1, 9000, 1)
logits [[-0.49908313 -1.5318415   0.53914195  0.5271549 ]]
Iteration 500 of 1000: loss=2.54 " + "l1=0.0578" + "l2=2.48 f=-0.265 shape=(1, 9000, 1)
logits [[-0.5459358  -1.5408409   0.54170257  0.48393822]]
Iteration 600 of 1000: loss=2.32 " + "l1=0" + "l2=2.32 f=-0.281 shape=(1, 9000, 1)
logits [[-0.62260354 -1.5612768   0.5195377   0.5390328 ]]
Iteration 700 of 1000: loss=2.15 " + "l1=0.0011" + "l2=2.15 f=-0.296 shape=(1, 9000, 1)
logits [[-0.6442674  -1.5889251   0.5245922   0.52348906]]
Iteration 800 of 1000: loss=2.04 " + "l1=0" + "l2=2.04 f=-0.301 shape=(1, 9000, 1)
logits [[-0.67479414 -1.5924463   0.5255295   0.53629553]]
Iteration 900 of 1000: loss=1.93 " + "l1=0.00766" + "l2=1.92 f=-0.304 shape=(1, 9000, 1)
logits [[-0.6705243  -1.6023266   0.53322875  0.5255653 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.79 " + "l1=6.79" + "l2=0 f=-0.557 shape=(1, 9000, 1)
logits [[ 4.711137  -2.7626235  3.4666622 -7.6419044]]
Iteration 100 of 1000: loss=4.82 " + "l1=3.82" + "l2=1 f=-0.429 shape=(1, 9000, 1)
logits [[ 2.4825902 -2.241447   2.493046  -4.448843 ]]
Iteration 200 of 1000: loss=3.92 " + "l1=2.55" + "l2=1.36 f=-0.349 shape=(1, 9000, 1)
logits [[ 1.5675142 -1.9639958  1.8212088 -2.8199613]]
Iteration 300 of 1000: loss=3.29 " + "l1=1.73" + "l2=1.56 f=-0.3 shape=(1, 9000, 1)
logits [[ 0.92827636 -1.8539727   1.4367999  -1.711518  ]]
Iteration 400 of 1000: loss=2.72 " + "l1=1.01" + "l2=1.71 f=-0.294 shape=(1, 9000, 1)
logits [[ 0.3427053  -1.7423112   1.0269511  -0.80426663]]
Iteration 500 of 1000: loss=2.2 " + "l1=0.534" + "l2=1.67 f=-0.27 shape=(1, 9000, 1)
logits [[-0.0854231  -1.6342046   0.80511177 -0.16602206]]
Iteration 600 of 1000: loss=1.8 " + "l1=0.15" + "l2=1.65 f=-0.244 shape=(1, 9000, 1)
logits [[-0.42760357 -1.5853063   0.6538152   0.3814836 ]]
Iteration 700 of 1000: loss=1.5 " + "l1=0.00611" + "l2=1.49 f=-0.241 shape=(1, 9000, 1)
logits [[-0.5144026 -1.5620444  0.5626844  0.5515727]]
Iteration 800 of 1000: loss=1.35 " + "l1=0.0138" + "l2=1.33 f=-0.234 shape=(1, 9000, 1)
logits [[-0.474838  -1.5356417  0.549483   0.5244084]]
Iteration 900 of 1000: loss=1.24 " + "l1=0" + "l2=1.24 f=-0.232 shape=(1, 9000, 1)
logits [[-0.49115613 -1.5101079   0.5260196   0.54606074]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.01 " + "l1=4.01" + "l2=0 f=-0.557 shape=(1, 9000, 1)
logits [[ 4.711137  -2.7626235  3.4666622 -7.6419044]]
Iteration 100 of 1000: loss=3.29 " + "l1=2.85" + "l2=0.444 f=-0.474 shape=(1, 9000, 1)
logits [[ 3.1745677 -2.5422392  3.0602312 -5.589375 ]]
Iteration 200 of 1000: loss=2.89 " + "l1=2.37" + "l2=0.522 f=-0.44 shape=(1, 9000, 1)
logits [[ 2.595937  -2.2540317  2.598797  -4.6992846]]
Iteration 300 of 1000: loss=2.58 " + "l1=1.97" + "l2=0.607 f=-0.386 shape=(1, 9000, 1)
logits [[ 2.1443555 -2.0784554  2.2306533 -3.8404121]]
Iteration 400 of 1000: loss=2.3 " + "l1=1.61" + "l2=0.693 f=-0.341 shape=(1, 9000, 1)
logits [[ 1.6650118 -1.9603475  1.9413841 -3.0087283]]
Iteration 500 of 1000: loss=2.08 " + "l1=1.34" + "l2=0.738 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.2900544 -1.9115343  1.7177968 -2.4064808]]
Iteration 600 of 1000: loss=1.85 " + "l1=1.06" + "l2=0.794 f=-0.318 shape=(1, 9000, 1)
logits [[ 0.9096183 -1.8118371  1.4419047 -1.8101658]]
Iteration 700 of 1000: loss=1.64 " + "l1=0.821" + "l2=0.816 f=-0.3 shape=(1, 9000, 1)
logits [[ 0.5809411 -1.6928111  1.2173754 -1.3074814]]
Iteration 800 of 1000: loss=1.47 " + "l1=0.651" + "l2=0.816 f=-0.289 shape=(1, 9000, 1)
logits [[ 0.3066178 -1.6173723  1.0780035 -0.9251601]]
Iteration 900 of 1000: loss=1.34 " + "l1=0.523" + "l2=0.813 f=-0.276 shape=(1, 9000, 1)
logits [[ 0.12536603 -1.5597938   0.9705314  -0.6381281 ]]
--- 320.86627888679504 seconds ---
Adv result:3
