Updating f389245..912353f
Fast-forward
 cw_eva_diff.py => cw_eval.py |   0
 cw_eval_diff.py              | 159 +++++++++++++++++++++++++++++++++++++++++++
 myattacks_diff.py            |   2 +-
 myattacks_tf_diff.py         |  32 +++------
 plotone.py                   |  26 ++++++-
 5 files changed, 193 insertions(+), 26 deletions(-)
 rename cw_eva_diff.py => cw_eval.py (100%)
 create mode 100644 cw_eval_diff.py
Loading model
Loading ground truth file
Attack diff is running...
Loading record A00776
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.02 " + "l1=0.02" + "l2=0 f=-0.59 shape=(1, 9000, 1)
logits [[ 2.1386442   0.14179711  1.7985147  -6.437884  ]]
Iteration 100 of 1000: loss=0.0194 " + "l1=0.019" + "l2=0.000406 f=-0.597 shape=(1, 9000, 1)
logits [[ 2.084146    0.18051976  1.788928   -6.4405017 ]]
Iteration 200 of 1000: loss=0.0193 " + "l1=0.0189" + "l2=0.000426 f=-0.598 shape=(1, 9000, 1)
logits [[ 2.0769312   0.18610919  1.7875684  -6.443548  ]]
Iteration 300 of 1000: loss=0.0193 " + "l1=0.0188" + "l2=0.000507 f=-0.6 shape=(1, 9000, 1)
logits [[ 2.067653    0.19253777  1.785844   -6.4456816 ]]
Iteration 400 of 1000: loss=0.0192 " + "l1=0.0186" + "l2=0.000599 f=-0.601 shape=(1, 9000, 1)
logits [[ 2.0590947  0.198296   1.7840706 -6.4470105]]
Iteration 500 of 1000: loss=0.0192 " + "l1=0.0185" + "l2=0.00068 f=-0.603 shape=(1, 9000, 1)
logits [[ 2.0511787   0.20355907  1.782311   -6.4477496 ]]
Iteration 600 of 1000: loss=0.0191 " + "l1=0.0183" + "l2=0.000784 f=-0.604 shape=(1, 9000, 1)
logits [[ 2.0433464   0.20857313  1.780522   -6.4480243 ]]
Iteration 700 of 1000: loss=0.0191 " + "l1=0.0182" + "l2=0.000897 f=-0.605 shape=(1, 9000, 1)
logits [[ 2.035003    0.21502374  1.7784414  -6.449029  ]]
Iteration 800 of 1000: loss=0.0191 " + "l1=0.0181" + "l2=0.00105 f=-0.606 shape=(1, 9000, 1)
logits [[ 2.0269506   0.22042713  1.7763687  -6.449288  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.2 " + "l1=0.2" + "l2=0 f=-0.59 shape=(1, 9000, 1)
logits [[ 2.1386442   0.14179711  1.7985147  -6.437884  ]]
Iteration 100 of 1000: loss=0.144 " + "l1=0.12" + "l2=0.0242 f=-0.657 shape=(1, 9000, 1)
logits [[ 1.6798569   0.48231232  1.6811565  -6.4720306 ]]
Iteration 200 of 1000: loss=0.127 " + "l1=0.101" + "l2=0.0263 f=-0.675 shape=(1, 9000, 1)
logits [[ 1.6076007  0.5989836  1.6066444 -6.514093 ]]
Iteration 300 of 1000: loss=0.114 " + "l1=0.0841" + "l2=0.0297 f=-0.687 shape=(1, 9000, 1)
logits [[ 1.5268517  0.6926571  1.5336459 -6.502743 ]]
Iteration 400 of 1000: loss=0.107 " + "l1=0.0754" + "l2=0.0312 f=-0.69 shape=(1, 9000, 1)
logits [[ 1.4839634  0.7398988  1.494181  -6.4779525]]
Iteration 500 of 1000: loss=0.1 " + "l1=0.068" + "l2=0.0323 f=-0.692 shape=(1, 9000, 1)
logits [[ 1.4562838  0.7800522  1.459945  -6.465962 ]]
Iteration 600 of 1000: loss=0.0931 " + "l1=0.0603" + "l2=0.0328 f=-0.694 shape=(1, 9000, 1)
logits [[ 1.4208913   0.82718825  1.4299146  -6.4548526 ]]
Iteration 700 of 1000: loss=0.0879 " + "l1=0.0559" + "l2=0.032 f=-0.696 shape=(1, 9000, 1)
logits [[ 1.3934509  0.851036   1.4103521 -6.437676 ]]
Iteration 800 of 1000: loss=0.0839 " + "l1=0.0514" + "l2=0.0324 f=-0.696 shape=(1, 9000, 1)
logits [[ 1.3526721  0.8824847  1.3969594 -6.415168 ]]
Iteration 900 of 1000: loss=0.0805 " + "l1=0.0475" + "l2=0.0329 f=-0.697 shape=(1, 9000, 1)
logits [[ 1.3092841   0.90954155  1.3850299  -6.3906245 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2 " + "l1=2" + "l2=0 f=-0.59 shape=(1, 9000, 1)
logits [[ 2.1386442   0.14179711  1.7985147  -6.437884  ]]
Iteration 100 of 1000: loss=0.23 " + "l1=0" + "l2=0.23 f=-0.797 shape=(1, 9000, 1)
logits [[ 0.8436526  1.331398   1.3227991 -6.687434 ]]
Iteration 200 of 1000: loss=0.173 " + "l1=0" + "l2=0.173 f=-0.801 shape=(1, 9000, 1)
logits [[ 0.84116256  1.3303225   1.3098605  -6.683724  ]]
Iteration 300 of 1000: loss=0.144 " + "l1=0" + "l2=0.144 f=-0.788 shape=(1, 9000, 1)
logits [[ 0.8816448  1.3072093  1.3052977 -6.6474624]]
Iteration 400 of 1000: loss=0.135 " + "l1=0" + "l2=0.135 f=-0.783 shape=(1, 9000, 1)
logits [[ 0.8790194  1.3137677  1.3008202 -6.6257367]]
Iteration 500 of 1000: loss=0.129 " + "l1=0" + "l2=0.129 f=-0.78 shape=(1, 9000, 1)
logits [[ 0.86287796  1.3247573   1.2971386  -6.6053944 ]]
Iteration 600 of 1000: loss=0.122 " + "l1=0" + "l2=0.122 f=-0.775 shape=(1, 9000, 1)
logits [[ 0.8658564  1.3150426  1.2969784 -6.5792484]]
Iteration 700 of 1000: loss=0.114 " + "l1=0" + "l2=0.114 f=-0.771 shape=(1, 9000, 1)
logits [[ 0.8689537  1.3057262  1.2996265 -6.5584555]]
Iteration 800 of 1000: loss=0.113 " + "l1=0.00444" + "l2=0.108 f=-0.768 shape=(1, 9000, 1)
logits [[ 0.8718509  1.2941167  1.2985544 -6.5369835]]
Iteration 900 of 1000: loss=0.107 " + "l1=0" + "l2=0.107 f=-0.769 shape=(1, 9000, 1)
logits [[ 0.85324943  1.3018887   1.2955252  -6.5256305 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.1 " + "l1=1.1" + "l2=0 f=-0.59 shape=(1, 9000, 1)
logits [[ 2.1386442   0.14179711  1.7985147  -6.437884  ]]
Iteration 100 of 1000: loss=0.221 " + "l1=0.00322" + "l2=0.217 f=-0.802 shape=(1, 9000, 1)
logits [[ 0.82676536  1.32305     1.328904   -6.6873817 ]]
Iteration 200 of 1000: loss=0.159 " + "l1=0" + "l2=0.159 f=-0.802 shape=(1, 9000, 1)
logits [[ 0.832605   1.3198407  1.3122973 -6.6730657]]
Iteration 300 of 1000: loss=0.137 " + "l1=0.00246" + "l2=0.135 f=-0.79 shape=(1, 9000, 1)
logits [[ 0.87512773  1.3029763   1.3074566  -6.6447062 ]]
Iteration 400 of 1000: loss=0.127 " + "l1=0" + "l2=0.127 f=-0.789 shape=(1, 9000, 1)
logits [[ 0.8511325  1.3175119  1.3039426 -6.6278634]]
Iteration 500 of 1000: loss=0.117 " + "l1=0.00148" + "l2=0.115 f=-0.78 shape=(1, 9000, 1)
logits [[ 0.8653816  1.3022004  1.3048856 -6.5935054]]
Iteration 600 of 1000: loss=0.111 " + "l1=0" + "l2=0.111 f=-0.777 shape=(1, 9000, 1)
logits [[ 0.85755974  1.3055459   1.3007014  -6.570095  ]]
Iteration 700 of 1000: loss=0.109 " + "l1=0.00514" + "l2=0.104 f=-0.772 shape=(1, 9000, 1)
logits [[ 0.8702542  1.2917211  1.3010645 -6.550896 ]]
Iteration 800 of 1000: loss=0.104 " + "l1=0" + "l2=0.104 f=-0.773 shape=(1, 9000, 1)
logits [[ 0.845677   1.3075013  1.2965965 -6.542425 ]]
Iteration 900 of 1000: loss=0.0989 " + "l1=0.00077" + "l2=0.0982 f=-0.77 shape=(1, 9000, 1)
logits [[ 0.85689497  1.2963774   1.297778   -6.530098  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.649 " + "l1=0.649" + "l2=0 f=-0.59 shape=(1, 9000, 1)
logits [[ 2.1386442   0.14179711  1.7985147  -6.437884  ]]
Iteration 100 of 1000: loss=0.254 " + "l1=0.117" + "l2=0.138 f=-0.744 shape=(1, 9000, 1)
logits [[ 1.1785233  1.0382415  1.397726  -6.592067 ]]
Iteration 200 of 1000: loss=0.155 " + "l1=0" + "l2=0.155 f=-0.809 shape=(1, 9000, 1)
logits [[ 0.8107782  1.3196082  1.3150105 -6.679452 ]]
Iteration 300 of 1000: loss=0.131 " + "l1=0.000269" + "l2=0.131 f=-0.798 shape=(1, 9000, 1)
logits [[ 0.8415737  1.3108588  1.3116852 -6.654447 ]]
Iteration 400 of 1000: loss=0.12 " + "l1=0" + "l2=0.12 f=-0.791 shape=(1, 9000, 1)
logits [[ 0.8506045  1.3059146  1.3045088 -6.623145 ]]
Iteration 500 of 1000: loss=0.113 " + "l1=0" + "l2=0.113 f=-0.786 shape=(1, 9000, 1)
logits [[ 0.8538105  1.3042026  1.3006741 -6.600738 ]]
Iteration 600 of 1000: loss=0.11 " + "l1=0" + "l2=0.11 f=-0.784 shape=(1, 9000, 1)
logits [[ 0.8520295  1.3051767  1.2945881 -6.586436 ]]
Iteration 700 of 1000: loss=0.104 " + "l1=0.003" + "l2=0.101 f=-0.778 shape=(1, 9000, 1)
logits [[ 0.8795363  1.2865365  1.2957594 -6.5739684]]
Iteration 800 of 1000: loss=0.0983 " + "l1=0.000224" + "l2=0.0981 f=-0.777 shape=(1, 9000, 1)
logits [[ 0.8769914  1.2918099  1.2924979 -6.5680976]]
Iteration 900 of 1000: loss=0.0939 " + "l1=0.00116" + "l2=0.0927 f=-0.772 shape=(1, 9000, 1)
logits [[ 0.88967997  1.2864312   1.2899964  -6.554943  ]]
--- 291.38449358940125 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0034 " + "l1=0.0034" + "l2=0 f=-0.59 shape=(1, 9000, 1)
logits [[ 2.1386442   0.14179711  1.7985147  -6.437884  ]]
Iteration 100 of 1000: loss=0.00311 " + "l1=0.00289" + "l2=0.000227 f=-0.594 shape=(1, 9000, 1)
logits [[ 2.1004727   0.15015043  1.8118234  -6.439915  ]]
Iteration 200 of 1000: loss=0.00305 " + "l1=0.00284" + "l2=0.000213 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.0977635   0.15113504  1.8138813  -6.443372  ]]
Iteration 300 of 1000: loss=0.00301 " + "l1=0.00276" + "l2=0.000251 f=-0.596 shape=(1, 9000, 1)
logits [[ 2.0928364   0.15217549  1.8164515  -6.445967  ]]
Iteration 400 of 1000: loss=0.00299 " + "l1=0.00269" + "l2=0.0003 f=-0.597 shape=(1, 9000, 1)
logits [[ 2.087829   0.1530867  1.8191028 -6.448374 ]]
Iteration 500 of 1000: loss=0.00298 " + "l1=0.00261" + "l2=0.000363 f=-0.598 shape=(1, 9000, 1)
logits [[ 2.0830066   0.15383965  1.8217158  -6.450538  ]]
Iteration 600 of 1000: loss=0.00296 " + "l1=0.00253" + "l2=0.000429 f=-0.599 shape=(1, 9000, 1)
logits [[ 2.0780015   0.15430929  1.8247284  -6.452922  ]]
Iteration 700 of 1000: loss=0.00292 " + "l1=0.00245" + "l2=0.000462 f=-0.6 shape=(1, 9000, 1)
logits [[ 2.0730317   0.15478848  1.8275619  -6.45509   ]]
Iteration 800 of 1000: loss=0.00301 " + "l1=0.00238" + "l2=0.000628 f=-0.601 shape=(1, 9000, 1)
logits [[ 2.06802     0.15534426  1.8301847  -6.4568777 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.034 " + "l1=0.034" + "l2=0 f=-0.59 shape=(1, 9000, 1)
logits [[ 2.1386442   0.14179711  1.7985147  -6.437884  ]]
Iteration 100 of 1000: loss=0.01 " + "l1=0.000249" + "l2=0.00977 f=-0.622 shape=(1, 9000, 1)
logits [[ 1.8772227   0.20178528  1.8747288  -6.442966  ]]
Iteration 200 of 1000: loss=0.00674 " + "l1=0" + "l2=0.00674 f=-0.627 shape=(1, 9000, 1)
logits [[ 1.8841522   0.20149806  1.8854043  -6.4794645 ]]
Iteration 300 of 1000: loss=0.00535 " + "l1=0.00011" + "l2=0.00524 f=-0.629 shape=(1, 9000, 1)
logits [[ 1.8894296   0.19818856  1.8883332  -6.491479  ]]
Iteration 400 of 1000: loss=0.00449 " + "l1=0.000101" + "l2=0.00439 f=-0.63 shape=(1, 9000, 1)
logits [[ 1.8915749   0.19566171  1.8905613  -6.4962597 ]]
Iteration 500 of 1000: loss=0.00403 " + "l1=0" + "l2=0.00403 f=-0.63 shape=(1, 9000, 1)
logits [[ 1.8876302   0.19532058  1.8929261  -6.4971185 ]]
Iteration 600 of 1000: loss=0.00357 " + "l1=0" + "l2=0.00357 f=-0.63 shape=(1, 9000, 1)
logits [[ 1.889833   0.1935891  1.8937978 -6.4972672]]
Iteration 700 of 1000: loss=0.00347 " + "l1=0" + "l2=0.00347 f=-0.63 shape=(1, 9000, 1)
logits [[ 1.8901671  0.1923157  1.8943735 -6.4973593]]
Iteration 800 of 1000: loss=0.0031 " + "l1=0" + "l2=0.0031 f=-0.631 shape=(1, 9000, 1)
logits [[ 1.8868918   0.19220947  1.8950617  -6.496842  ]]
Iteration 900 of 1000: loss=0.00311 " + "l1=0" + "l2=0.00311 f=-0.631 shape=(1, 9000, 1)
logits [[ 1.8888613   0.19097973  1.8945034  -6.497021  ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0187 " + "l1=0.0187" + "l2=0 f=-0.59 shape=(1, 9000, 1)
logits [[ 2.1386442   0.14179711  1.7985147  -6.437884  ]]
Iteration 100 of 1000: loss=0.0111 " + "l1=0.00701" + "l2=0.00406 f=-0.609 shape=(1, 9000, 1)
logits [[ 1.9752991  0.180235   1.8477633 -6.4398727]]
Iteration 200 of 1000: loss=0.00823 " + "l1=0.00266" + "l2=0.00557 f=-0.62 shape=(1, 9000, 1)
logits [[ 1.9206072   0.19238879  1.8721834  -6.4644184 ]]
Iteration 300 of 1000: loss=0.00601 " + "l1=0.000275" + "l2=0.00574 f=-0.627 shape=(1, 9000, 1)
logits [[ 1.8924311  0.197972   1.8874327 -6.485867 ]]
Iteration 400 of 1000: loss=0.00484 " + "l1=0.000164" + "l2=0.00468 f=-0.629 shape=(1, 9000, 1)
logits [[ 1.8935988   0.19568996  1.8906096  -6.4945583 ]]
Iteration 500 of 1000: loss=0.00414 " + "l1=5.11e-05" + "l2=0.00409 f=-0.629 shape=(1, 9000, 1)
logits [[ 1.8930907   0.19456741  1.892162   -6.4972625 ]]
Iteration 600 of 1000: loss=0.00366 " + "l1=3.01e-05" + "l2=0.00363 f=-0.629 shape=(1, 9000, 1)
logits [[ 1.8937355   0.19317584  1.8931881  -6.497335  ]]
Iteration 700 of 1000: loss=0.00343 " + "l1=0" + "l2=0.00343 f=-0.629 shape=(1, 9000, 1)
logits [[ 1.8939862   0.19175656  1.8941501  -6.4970264 ]]
Iteration 800 of 1000: loss=0.00325 " + "l1=0.000153" + "l2=0.0031 f=-0.629 shape=(1, 9000, 1)
logits [[ 1.8966798   0.19012247  1.8938892  -6.4977407 ]]
Iteration 900 of 1000: loss=0.0029 " + "l1=0" + "l2=0.0029 f=-0.63 shape=(1, 9000, 1)
logits [[ 1.8940237   0.18973024  1.8940955  -6.4964056 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0111 " + "l1=0.0111" + "l2=0 f=-0.59 shape=(1, 9000, 1)
logits [[ 2.1386442   0.14179711  1.7985147  -6.437884  ]]
Iteration 100 of 1000: loss=0.00833 " + "l1=0.00683" + "l2=0.0015 f=-0.601 shape=(1, 9000, 1)
logits [[ 2.0388362   0.16555004  1.8286021  -6.438954  ]]
Iteration 200 of 1000: loss=0.00749 " + "l1=0.00554" + "l2=0.00195 f=-0.607 shape=(1, 9000, 1)
logits [[ 2.0115027   0.17210622  1.8410777  -6.4525957 ]]
Iteration 300 of 1000: loss=0.0067 " + "l1=0.00422" + "l2=0.00248 f=-0.612 shape=(1, 9000, 1)
logits [[ 1.9844651   0.17834176  1.8544806  -6.466394  ]]
Iteration 400 of 1000: loss=0.00595 " + "l1=0.003" + "l2=0.00295 f=-0.617 shape=(1, 9000, 1)
logits [[ 1.9599702   0.18280748  1.8676187  -6.4788237 ]]
Iteration 500 of 1000: loss=0.00524 " + "l1=0.00193" + "l2=0.00332 f=-0.621 shape=(1, 9000, 1)
logits [[ 1.9375064   0.18670742  1.8782479  -6.4877114 ]]
Iteration 600 of 1000: loss=0.00455 " + "l1=0.000919" + "l2=0.00363 f=-0.625 shape=(1, 9000, 1)
logits [[ 1.9155003   0.18990274  1.8872097  -6.4933805 ]]
Iteration 700 of 1000: loss=0.00393 " + "l1=7.57e-05" + "l2=0.00385 f=-0.629 shape=(1, 9000, 1)
logits [[ 1.8966398   0.19306187  1.8943119  -6.4988756 ]]
Iteration 800 of 1000: loss=0.00336 " + "l1=4.26e-05" + "l2=0.00332 f=-0.629 shape=(1, 9000, 1)
logits [[ 1.8969812   0.19179817  1.8956691  -6.5005374 ]]
Iteration 900 of 1000: loss=0.00316 " + "l1=0" + "l2=0.00316 f=-0.629 shape=(1, 9000, 1)
logits [[ 1.8950297   0.19095951  1.8963184  -6.5000305 ]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00723 " + "l1=0.00723" + "l2=0 f=-0.59 shape=(1, 9000, 1)
logits [[ 2.1386442   0.14179711  1.7985147  -6.437884  ]]
Iteration 100 of 1000: loss=0.00602 " + "l1=0.00532" + "l2=0.000706 f=-0.598 shape=(1, 9000, 1)
logits [[ 2.070726    0.15706442  1.8204551  -6.4387884 ]]
Iteration 200 of 1000: loss=0.00572 " + "l1=0.00485" + "l2=0.000862 f=-0.601 shape=(1, 9000, 1)
logits [[ 2.0557222   0.16159366  1.8272524  -6.44664   ]]
Iteration 300 of 1000: loss=0.00543 " + "l1=0.0044" + "l2=0.00103 f=-0.603 shape=(1, 9000, 1)
logits [[ 2.0409603   0.16515638  1.8340067  -6.4539657 ]]
Iteration 400 of 1000: loss=0.00515 " + "l1=0.00393" + "l2=0.00122 f=-0.606 shape=(1, 9000, 1)
logits [[ 2.0266864   0.16696988  1.8417702  -6.461318  ]]
Iteration 500 of 1000: loss=0.00489 " + "l1=0.00351" + "l2=0.00138 f=-0.609 shape=(1, 9000, 1)
logits [[ 2.01351     0.16911961  1.848472   -6.467535  ]]
Iteration 600 of 1000: loss=0.00469 " + "l1=0.00302" + "l2=0.00167 f=-0.612 shape=(1, 9000, 1)
logits [[ 1.9988472   0.17180178  1.8566768  -6.4744043 ]]
Iteration 700 of 1000: loss=0.00434 " + "l1=0.00257" + "l2=0.00176 f=-0.614 shape=(1, 9000, 1)
logits [[ 1.985189    0.17365764  1.8641113  -6.4801917 ]]
Iteration 800 of 1000: loss=0.00416 " + "l1=0.00216" + "l2=0.002 f=-0.617 shape=(1, 9000, 1)
logits [[ 1.9719456   0.17531176  1.8703841  -6.4836464 ]]
Iteration 900 of 1000: loss=0.00393 " + "l1=0.00176" + "l2=0.00217 f=-0.619 shape=(1, 9000, 1)
logits [[ 1.9587319   0.17719014  1.8757457  -6.4864836 ]]
--- 284.7469654083252 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0858 " + "l1=0.0858" + "l2=0 f=-0.59 shape=(1, 9000, 1)
logits [[ 2.1386442   0.14179711  1.7985147  -6.437884  ]]
Iteration 100 of 1000: loss=0.0851 " + "l1=0.0846" + "l2=0.000469 f=-0.588 shape=(1, 9000, 1)
logits [[ 2.0925355   0.14243376  1.7842464  -6.3699956 ]]
Iteration 200 of 1000: loss=0.0849 " + "l1=0.0844" + "l2=0.000486 f=-0.587 shape=(1, 9000, 1)
logits [[ 2.086048    0.14242305  1.7811918  -6.3583503 ]]
Iteration 300 of 1000: loss=0.0848 " + "l1=0.0842" + "l2=0.000551 f=-0.586 shape=(1, 9000, 1)
logits [[ 2.077891    0.14215119  1.777164   -6.3430705 ]]
Iteration 400 of 1000: loss=0.0846 " + "l1=0.084" + "l2=0.000669 f=-0.586 shape=(1, 9000, 1)
logits [[ 2.0698988   0.14198597  1.7727268  -6.327456  ]]
Iteration 500 of 1000: loss=0.0846 " + "l1=0.0837" + "l2=0.000829 f=-0.585 shape=(1, 9000, 1)
logits [[ 2.0620086  0.1418059  1.7681916 -6.311968 ]]
Iteration 600 of 1000: loss=0.0844 " + "l1=0.0835" + "l2=0.000924 f=-0.584 shape=(1, 9000, 1)
logits [[ 2.0543983   0.14149159  1.7637479  -6.296612  ]]
Iteration 700 of 1000: loss=0.0844 " + "l1=0.0833" + "l2=0.0011 f=-0.584 shape=(1, 9000, 1)
logits [[ 2.0466456   0.14150332  1.7597575  -6.282363  ]]
Iteration 800 of 1000: loss=0.0843 " + "l1=0.0831" + "l2=0.00122 f=-0.583 shape=(1, 9000, 1)
logits [[ 2.039114    0.14194332  1.7556875  -6.2688866 ]]
Iteration 900 of 1000: loss=0.0842 " + "l1=0.0829" + "l2=0.00131 f=-0.583 shape=(1, 9000, 1)
logits [[ 2.031457    0.14234789  1.7516421  -6.255849  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.858 " + "l1=0.858" + "l2=0 f=-0.59 shape=(1, 9000, 1)
logits [[ 2.1386442   0.14179711  1.7985147  -6.437884  ]]
Iteration 100 of 1000: loss=0.785 " + "l1=0.739" + "l2=0.0461 f=-0.585 shape=(1, 9000, 1)
logits [[ 1.6589891   0.07476263  1.6567806  -5.732047  ]]
Iteration 200 of 1000: loss=0.757 " + "l1=0.704" + "l2=0.0527 f=-0.568 shape=(1, 9000, 1)
logits [[ 1.5657703   0.06847206  1.5660731  -5.473637  ]]
Iteration 300 of 1000: loss=0.725 " + "l1=0.662" + "l2=0.0625 f=-0.537 shape=(1, 9000, 1)
logits [[ 1.4682746   0.06979502  1.46799    -5.152675  ]]
Iteration 400 of 1000: loss=0.698 " + "l1=0.628" + "l2=0.0696 f=-0.511 shape=(1, 9000, 1)
logits [[ 1.3867627   0.06715332  1.3908339  -4.8901596 ]]
Iteration 500 of 1000: loss=0.676 " + "l1=0.601" + "l2=0.0754 f=-0.495 shape=(1, 9000, 1)
logits [[ 1.3208663   0.06625462  1.3213309  -4.6897297 ]]
Iteration 600 of 1000: loss=0.66 " + "l1=0.58" + "l2=0.0798 f=-0.485 shape=(1, 9000, 1)
logits [[ 1.259267    0.07501937  1.2645794  -4.539355  ]]
Iteration 700 of 1000: loss=0.647 " + "l1=0.564" + "l2=0.083 f=-0.472 shape=(1, 9000, 1)
logits [[ 1.226711    0.07256162  1.2265956  -4.4156146 ]]
Iteration 800 of 1000: loss=0.635 " + "l1=0.546" + "l2=0.0888 f=-0.457 shape=(1, 9000, 1)
logits [[ 1.1896943   0.05148363  1.1954107  -4.2657948 ]]
Iteration 900 of 1000: loss=0.624 " + "l1=0.532" + "l2=0.0921 f=-0.45 shape=(1, 9000, 1)
logits [[ 1.1458313  0.0494376  1.1641624 -4.158338 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.58 " + "l1=8.58" + "l2=0 f=-0.59 shape=(1, 9000, 1)
logits [[ 2.1386442   0.14179711  1.7985147  -6.437884  ]]
Iteration 100 of 1000: loss=3.51 " + "l1=1.11" + "l2=2.4 f=-0.365 shape=(1, 9000, 1)
logits [[-1.0053432   0.14910695  0.25400564 -0.85750735]]
Iteration 200 of 1000: loss=2.31 " + "l1=0.00861" + "l2=2.3 f=-0.355 shape=(1, 9000, 1)
logits [[-1.3105433  -0.03625905 -0.0324522  -0.0410616 ]]
Iteration 300 of 1000: loss=2.02 " + "l1=0.0227" + "l2=2 f=-0.355 shape=(1, 9000, 1)
logits [[-1.2730922  -0.04511972 -0.0401566  -0.06289119]]
Iteration 400 of 1000: loss=1.86 " + "l1=0.00304" + "l2=1.85 f=-0.362 shape=(1, 9000, 1)
logits [[-1.2774584  -0.07440037 -0.04559425 -0.04863537]]
Iteration 500 of 1000: loss=1.73 " + "l1=0.0118" + "l2=1.72 f=-0.362 shape=(1, 9000, 1)
logits [[-1.263436   -0.10740546 -0.03179702 -0.04357758]]
Iteration 600 of 1000: loss=1.59 " + "l1=0" + "l2=1.59 f=-0.355 shape=(1, 9000, 1)
logits [[-1.2486839  -0.14183639 -0.02059102 -0.00804412]]
Iteration 700 of 1000: loss=1.44 " + "l1=0" + "l2=1.44 f=-0.355 shape=(1, 9000, 1)
logits [[-1.2550982  -0.18878357  0.00541522  0.01649142]]
Iteration 800 of 1000: loss=1.32 " + "l1=0.00376" + "l2=1.32 f=-0.36 shape=(1, 9000, 1)
logits [[-1.3008683  -0.21636336  0.0405986   0.03683773]]
Iteration 900 of 1000: loss=1.23 " + "l1=0.0051" + "l2=1.23 f=-0.363 shape=(1, 9000, 1)
logits [[-1.335974   -0.23334529  0.06091084  0.0558088 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.72 " + "l1=4.72" + "l2=0 f=-0.59 shape=(1, 9000, 1)
logits [[ 2.1386442   0.14179711  1.7985147  -6.437884  ]]
Iteration 100 of 1000: loss=3.03 " + "l1=2.23" + "l2=0.791 f=-0.429 shape=(1, 9000, 1)
logits [[ 0.39821836  0.02399998  0.96236795 -3.101037  ]]
Iteration 200 of 1000: loss=2.24 " + "l1=1.2" + "l2=1.03 f=-0.359 shape=(1, 9000, 1)
logits [[-0.29228354  0.07644127  0.485142   -1.7047377 ]]
Iteration 300 of 1000: loss=1.82 " + "l1=0.54" + "l2=1.27 f=-0.331 shape=(1, 9000, 1)
logits [[-0.75859416  0.02155321  0.19817653 -0.7843755 ]]
Iteration 400 of 1000: loss=1.6 " + "l1=0.3" + "l2=1.3 f=-0.312 shape=(1, 9000, 1)
logits [[-0.9038678  -0.03027962  0.11577129 -0.42919123]]
Iteration 500 of 1000: loss=1.4 " + "l1=0.0965" + "l2=1.3 f=-0.302 shape=(1, 9000, 1)
logits [[-1.0799947  -0.09760737  0.07231186 -0.10315356]]
Iteration 600 of 1000: loss=1.2 " + "l1=0.00529" + "l2=1.2 f=-0.304 shape=(1, 9000, 1)
logits [[-1.1768928  -0.19002926  0.07993177  0.07031953]]
Iteration 700 of 1000: loss=1.07 " + "l1=0.00761" + "l2=1.06 f=-0.305 shape=(1, 9000, 1)
logits [[-1.1953257  -0.2740246   0.13174331  0.11791071]]
Iteration 800 of 1000: loss=0.979 " + "l1=0.00766" + "l2=0.972 f=-0.307 shape=(1, 9000, 1)
logits [[-1.2190006  -0.3270818   0.16581814  0.15189195]]
Iteration 900 of 1000: loss=0.908 " + "l1=0.00762" + "l2=0.901 f=-0.313 shape=(1, 9000, 1)
logits [[-1.2636127  -0.37082162  0.19821237  0.18434948]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.79 " + "l1=2.79" + "l2=0 f=-0.59 shape=(1, 9000, 1)
logits [[ 2.1386442   0.14179711  1.7985147  -6.437884  ]]
Iteration 100 of 1000: loss=2.14 " + "l1=1.86" + "l2=0.281 f=-0.489 shape=(1, 9000, 1)
logits [[ 1.1503965   0.00531407  1.3009375  -4.412431  ]]
Iteration 200 of 1000: loss=1.84 " + "l1=1.46" + "l2=0.38 f=-0.425 shape=(1, 9000, 1)
logits [[ 0.6749862  0.039554   1.040091  -3.4566245]]
Iteration 300 of 1000: loss=1.61 " + "l1=1.12" + "l2=0.493 f=-0.388 shape=(1, 9000, 1)
logits [[ 0.2557457   0.08821508  0.7714222  -2.6669295 ]]
Iteration 400 of 1000: loss=1.45 " + "l1=0.888" + "l2=0.563 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.0118645   0.04386502  0.6081675  -2.1230266 ]]
Iteration 500 of 1000: loss=1.34 " + "l1=0.735" + "l2=0.602 f=-0.358 shape=(1, 9000, 1)
logits [[-0.19560042  0.01293018  0.5060683  -1.7556031 ]]
Iteration 600 of 1000: loss=1.24 " + "l1=0.611" + "l2=0.632 f=-0.347 shape=(1, 9000, 1)
logits [[-0.3566989  -0.03388877  0.44024238 -1.4394354 ]]
Iteration 700 of 1000: loss=1.14 " + "l1=0.48" + "l2=0.665 f=-0.337 shape=(1, 9000, 1)
logits [[-0.5358715  -0.0971823   0.38122204 -1.0952705 ]]
Iteration 800 of 1000: loss=1.07 " + "l1=0.364" + "l2=0.702 f=-0.331 shape=(1, 9000, 1)
logits [[-0.69631654 -0.1531593   0.32317594 -0.7963485 ]]
Iteration 900 of 1000: loss=0.981 " + "l1=0.235" + "l2=0.746 f=-0.326 shape=(1, 9000, 1)
logits [[-0.8474138  -0.23170735  0.2500268  -0.47384346]]
--- 302.40108704566956 seconds ---
Adv result:3
Loading record A00795
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0553 " + "l1=0.0553" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.382148  -2.1454751  2.1936934 -4.602974 ]]
Iteration 100 of 1000: loss=0.055 " + "l1=0.0548" + "l2=0.000241 f=-0.291 shape=(1, 9000, 1)
logits [[ 3.3498297 -2.1260197  2.1786003 -4.567232 ]]
Iteration 200 of 1000: loss=0.0549 " + "l1=0.0547" + "l2=0.000218 f=-0.291 shape=(1, 9000, 1)
logits [[ 3.348073  -2.124545   2.1773543 -4.565243 ]]
Iteration 300 of 1000: loss=0.0549 " + "l1=0.0547" + "l2=0.000239 f=-0.291 shape=(1, 9000, 1)
logits [[ 3.344691  -2.122042   2.1754062 -4.561431 ]]
Iteration 400 of 1000: loss=0.0549 " + "l1=0.0546" + "l2=0.000296 f=-0.291 shape=(1, 9000, 1)
logits [[ 3.3410478 -2.1193454  2.1733625 -4.5572796]]
Iteration 500 of 1000: loss=0.0549 " + "l1=0.0545" + "l2=0.000359 f=-0.29 shape=(1, 9000, 1)
logits [[ 3.3374717 -2.1166563  2.1713998 -4.553222 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.553 " + "l1=0.553" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.382148  -2.1454751  2.1936934 -4.602974 ]]
Iteration 100 of 1000: loss=0.527 " + "l1=0.51" + "l2=0.0166 f=-0.283 shape=(1, 9000, 1)
logits [[ 3.1049936 -1.9959806  2.0635998 -4.3033347]]
Iteration 200 of 1000: loss=0.519 " + "l1=0.496" + "l2=0.0227 f=-0.279 shape=(1, 9000, 1)
logits [[ 3.015705  -1.9474062  2.0206158 -4.2061505]]
Iteration 300 of 1000: loss=0.513 " + "l1=0.486" + "l2=0.0263 f=-0.276 shape=(1, 9000, 1)
logits [[ 2.953346  -1.9105332  1.9886762 -4.136309 ]]
Iteration 400 of 1000: loss=0.507 " + "l1=0.478" + "l2=0.0285 f=-0.274 shape=(1, 9000, 1)
logits [[ 2.9039757 -1.8806919  1.9632136 -4.0808077]]
Iteration 500 of 1000: loss=0.501 " + "l1=0.471" + "l2=0.0305 f=-0.272 shape=(1, 9000, 1)
logits [[ 2.8564272 -1.8502488  1.936872  -4.029696 ]]
Iteration 600 of 1000: loss=0.496 " + "l1=0.464" + "l2=0.0321 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.8137903 -1.8244811  1.9127874 -3.9824932]]
Iteration 700 of 1000: loss=0.491 " + "l1=0.458" + "l2=0.0329 f=-0.268 shape=(1, 9000, 1)
logits [[ 2.7762113 -1.8019673  1.8928479 -3.9372115]]
Iteration 800 of 1000: loss=0.485 " + "l1=0.451" + "l2=0.0341 f=-0.266 shape=(1, 9000, 1)
logits [[ 2.7327852 -1.780445   1.8716396 -3.8864884]]
Iteration 900 of 1000: loss=0.48 " + "l1=0.445" + "l2=0.0353 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.6887913 -1.7573959  1.8506225 -3.836089 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.53 " + "l1=5.53" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.382148  -2.1454751  2.1936934 -4.602974 ]]
Iteration 100 of 1000: loss=3.31 " + "l1=2.24" + "l2=1.07 f=-0.231 shape=(1, 9000, 1)
logits [[ 1.1248391 -1.1140167  1.1202146 -2.0552967]]
Iteration 200 of 1000: loss=2.82 " + "l1=1.7" + "l2=1.12 f=-0.237 shape=(1, 9000, 1)
logits [[ 0.87334985 -0.83145654  0.87106836 -1.8623302 ]]
Iteration 300 of 1000: loss=2.51 " + "l1=1.36" + "l2=1.15 f=-0.251 shape=(1, 9000, 1)
logits [[ 0.7109432  -0.6459522   0.70797724 -1.7757783 ]]
Iteration 400 of 1000: loss=2.24 " + "l1=1.06" + "l2=1.17 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.5860592  -0.47735643  0.58254296 -1.7194835 ]]
Iteration 500 of 1000: loss=2.05 " + "l1=0.898" + "l2=1.16 f=-0.249 shape=(1, 9000, 1)
logits [[ 0.48482051 -0.4072032   0.4904068  -1.5657127 ]]
Iteration 600 of 1000: loss=1.89 " + "l1=0.682" + "l2=1.21 f=-0.218 shape=(1, 9000, 1)
logits [[ 0.35244957 -0.3294461   0.34914234 -1.2454318 ]]
Iteration 700 of 1000: loss=1.7 " + "l1=0.431" + "l2=1.27 f=-0.172 shape=(1, 9000, 1)
logits [[ 0.1792467  -0.2517578   0.17471115 -0.7914353 ]]
Iteration 800 of 1000: loss=1.53 " + "l1=0.203" + "l2=1.32 f=-0.165 shape=(1, 9000, 1)
logits [[ 0.0246129  -0.1780038   0.01587732 -0.52223915]]
Iteration 900 of 1000: loss=1.38 " + "l1=0.0197" + "l2=1.36 f=-0.166 shape=(1, 9000, 1)
logits [[-0.11588    -0.12184604 -0.10210223 -0.32599315]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.04 " + "l1=3.04" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.382148  -2.1454751  2.1936934 -4.602974 ]]
Iteration 100 of 1000: loss=2.29 " + "l1=1.84" + "l2=0.446 f=-0.246 shape=(1, 9000, 1)
logits [[ 1.8892441 -1.462891   1.4927598 -2.9044607]]
Iteration 200 of 1000: loss=2.06 " + "l1=1.49" + "l2=0.566 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.4255956 -1.2914697  1.303226  -2.4049633]]
Iteration 300 of 1000: loss=1.9 " + "l1=1.31" + "l2=0.594 f=-0.244 shape=(1, 9000, 1)
logits [[ 1.1937588 -1.1811595  1.183973  -2.1740842]]
Iteration 400 of 1000: loss=1.79 " + "l1=1.18" + "l2=0.611 f=-0.245 shape=(1, 9000, 1)
logits [[ 1.0700281 -1.0794871  1.0658641 -2.0352244]]
Iteration 500 of 1000: loss=1.68 " + "l1=1.07" + "l2=0.611 f=-0.241 shape=(1, 9000, 1)
logits [[ 0.9730965  -0.9719246   0.96120584 -1.9265045 ]]
Iteration 600 of 1000: loss=1.59 " + "l1=0.991" + "l2=0.599 f=-0.251 shape=(1, 9000, 1)
logits [[ 0.8899809  -0.9114637   0.88293874 -1.8644074 ]]
Iteration 700 of 1000: loss=1.5 " + "l1=0.895" + "l2=0.604 f=-0.268 shape=(1, 9000, 1)
logits [[ 0.79575586 -0.83126384  0.79293716 -1.830514  ]]
Iteration 800 of 1000: loss=1.43 " + "l1=0.823" + "l2=0.606 f=-0.269 shape=(1, 9000, 1)
logits [[ 0.72703284 -0.76971865  0.72468215 -1.756419  ]]
Iteration 900 of 1000: loss=1.37 " + "l1=0.755" + "l2=0.61 f=-0.251 shape=(1, 9000, 1)
logits [[ 0.6430609  -0.72466695  0.647636   -1.5684057 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.28 " + "l1=4.28" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.382148  -2.1454751  2.1936934 -4.602974 ]]
Iteration 100 of 1000: loss=2.85 " + "l1=2.03" + "l2=0.821 f=-0.241 shape=(1, 9000, 1)
logits [[ 1.3345838 -1.2875352  1.2882903 -2.2991207]]
Iteration 200 of 1000: loss=2.49 " + "l1=1.65" + "l2=0.843 f=-0.243 shape=(1, 9000, 1)
logits [[ 1.0690961 -1.0577253  1.0577402 -2.0404449]]
Iteration 300 of 1000: loss=2.27 " + "l1=1.37" + "l2=0.895 f=-0.242 shape=(1, 9000, 1)
logits [[ 0.8805018  -0.88496155  0.88706785 -1.8489478 ]]
Iteration 400 of 1000: loss=2.05 " + "l1=1.17" + "l2=0.88 f=-0.254 shape=(1, 9000, 1)
logits [[ 0.7703383  -0.7363858   0.76811886 -1.8181481 ]]
Iteration 500 of 1000: loss=1.88 " + "l1=1" + "l2=0.881 f=-0.263 shape=(1, 9000, 1)
logits [[ 0.672798   -0.617849    0.67015266 -1.7780006 ]]
Iteration 600 of 1000: loss=1.74 " + "l1=0.863" + "l2=0.878 f=-0.251 shape=(1, 9000, 1)
logits [[ 0.56476355 -0.5477492   0.56519544 -1.5843174 ]]
Iteration 700 of 1000: loss=1.61 " + "l1=0.713" + "l2=0.894 f=-0.219 shape=(1, 9000, 1)
logits [[ 0.42990345 -0.48697114  0.43322757 -1.2521293 ]]
Iteration 800 of 1000: loss=1.49 " + "l1=0.557" + "l2=0.93 f=-0.198 shape=(1, 9000, 1)
logits [[ 0.28715268 -0.42626294  0.29284286 -0.9448498 ]]
Iteration 900 of 1000: loss=1.37 " + "l1=0.425" + "l2=0.941 f=-0.191 shape=(1, 9000, 1)
logits [[ 0.17060176 -0.37506336  0.17344375 -0.73168993]]
--- 270.0840904712677 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0119 " + "l1=0.0119" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.382148  -2.1454751  2.1936934 -4.602974 ]]
Iteration 100 of 1000: loss=0.0118 " + "l1=0.0117" + "l2=0.000125 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.3603096 -2.1473508  2.1946921 -4.5807443]]
Iteration 200 of 1000: loss=0.0118 " + "l1=0.0117" + "l2=9.85e-05 f=-0.294 shape=(1, 9000, 1)
logits [[ 3.3607116 -2.147927   2.1954267 -4.582229 ]]
Iteration 300 of 1000: loss=0.0117 " + "l1=0.0116" + "l2=0.000111 f=-0.294 shape=(1, 9000, 1)
logits [[ 3.3589594 -2.148658   2.1961377 -4.5813894]]
Iteration 400 of 1000: loss=0.0118 " + "l1=0.0116" + "l2=0.00019 f=-0.294 shape=(1, 9000, 1)
logits [[ 3.3568957 -2.1492949  2.196776  -4.5801783]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.119 " + "l1=0.119" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.382148  -2.1454751  2.1936934 -4.602974 ]]
Iteration 100 of 1000: loss=0.109 " + "l1=0.102" + "l2=0.00651 f=-0.298 shape=(1, 9000, 1)
logits [[ 3.221739  -2.1642733  2.2011602 -4.4486494]]
Iteration 200 of 1000: loss=0.105 " + "l1=0.0965" + "l2=0.00852 f=-0.3 shape=(1, 9000, 1)
logits [[ 3.1731372 -2.1734138  2.2081223 -4.406304 ]]
Iteration 300 of 1000: loss=0.102 " + "l1=0.0922" + "l2=0.0101 f=-0.302 shape=(1, 9000, 1)
logits [[ 3.139784  -2.1839597  2.2173033 -4.37946  ]]
Iteration 400 of 1000: loss=0.0997 " + "l1=0.0877" + "l2=0.012 f=-0.305 shape=(1, 9000, 1)
logits [[ 3.1070306 -2.197097   2.2302763 -4.358844 ]]
Iteration 500 of 1000: loss=0.0975 " + "l1=0.0842" + "l2=0.0133 f=-0.306 shape=(1, 9000, 1)
logits [[ 3.0799127 -2.2043593  2.2376735 -4.3386774]]
Iteration 600 of 1000: loss=0.0954 " + "l1=0.0801" + "l2=0.0152 f=-0.308 shape=(1, 9000, 1)
logits [[ 3.0481598 -2.2145953  2.2468674 -4.3132777]]
Iteration 700 of 1000: loss=0.0934 " + "l1=0.0766" + "l2=0.0168 f=-0.31 shape=(1, 9000, 1)
logits [[ 3.0187845 -2.221554   2.253175  -4.290157 ]]
Iteration 800 of 1000: loss=0.0912 " + "l1=0.0719" + "l2=0.0194 f=-0.313 shape=(1, 9000, 1)
logits [[ 2.9837208 -2.2343953  2.2650418 -4.2661147]]
Iteration 900 of 1000: loss=0.0893 " + "l1=0.068" + "l2=0.0212 f=-0.314 shape=(1, 9000, 1)
logits [[ 2.950206  -2.239261   2.2700372 -4.238297 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.19 " + "l1=1.19" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.382148  -2.1454751  2.1936934 -4.602974 ]]
Iteration 100 of 1000: loss=0.243 " + "l1=0" + "l2=0.243 f=-0.335 shape=(1, 9000, 1)
logits [[ 2.3879976 -2.4171143  2.3944101 -3.7044137]]
Iteration 200 of 1000: loss=0.182 " + "l1=0" + "l2=0.182 f=-0.34 shape=(1, 9000, 1)
logits [[ 2.4033172 -2.4365108  2.419876  -3.7484872]]
Iteration 300 of 1000: loss=0.153 " + "l1=0" + "l2=0.153 f=-0.345 shape=(1, 9000, 1)
logits [[ 2.4153726 -2.4509463  2.434875  -3.7781196]]
Iteration 400 of 1000: loss=0.133 " + "l1=0.00304" + "l2=0.13 f=-0.346 shape=(1, 9000, 1)
logits [[ 2.4442306 -2.4556847  2.441194  -3.8144004]]
Iteration 500 of 1000: loss=0.122 " + "l1=0" + "l2=0.122 f=-0.348 shape=(1, 9000, 1)
logits [[ 2.436585  -2.4621787  2.4453654 -3.8136933]]
Iteration 600 of 1000: loss=0.116 " + "l1=0" + "l2=0.116 f=-0.351 shape=(1, 9000, 1)
logits [[ 2.4261074 -2.4659486  2.4479475 -3.810632 ]]
Iteration 700 of 1000: loss=0.105 " + "l1=0" + "l2=0.105 f=-0.351 shape=(1, 9000, 1)
logits [[ 2.4406602 -2.4621358  2.4453645 -3.8263457]]
Iteration 800 of 1000: loss=0.0996 " + "l1=0.00242" + "l2=0.0972 f=-0.351 shape=(1, 9000, 1)
logits [[ 2.4464993 -2.4618342  2.444079  -3.8323102]]
Iteration 900 of 1000: loss=0.0944 " + "l1=0" + "l2=0.0944 f=-0.351 shape=(1, 9000, 1)
logits [[ 2.4306679 -2.4642     2.4436488 -3.8156722]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.654 " + "l1=0.654" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.382148  -2.1454751  2.1936934 -4.602974 ]]
Iteration 100 of 1000: loss=0.235 " + "l1=0.000639" + "l2=0.235 f=-0.341 shape=(1, 9000, 1)
logits [[ 2.4261456 -2.4388416  2.4249833 -3.7774527]]
Iteration 200 of 1000: loss=0.167 " + "l1=0.00462" + "l2=0.162 f=-0.347 shape=(1, 9000, 1)
logits [[ 2.4544797 -2.4585543  2.4460835 -3.828787 ]]
Iteration 300 of 1000: loss=0.141 " + "l1=0.0041" + "l2=0.137 f=-0.348 shape=(1, 9000, 1)
logits [[ 2.4638941 -2.466502   2.456432  -3.8443992]]
Iteration 400 of 1000: loss=0.125 " + "l1=0.00259" + "l2=0.122 f=-0.349 shape=(1, 9000, 1)
logits [[ 2.4653013 -2.469925   2.4605927 -3.853665 ]]
Iteration 500 of 1000: loss=0.112 " + "l1=0" + "l2=0.112 f=-0.351 shape=(1, 9000, 1)
logits [[ 2.4610426 -2.4726763  2.4629176 -3.855608 ]]
Iteration 600 of 1000: loss=0.103 " + "l1=0" + "l2=0.103 f=-0.352 shape=(1, 9000, 1)
logits [[ 2.4657216 -2.4724972  2.4658582 -3.8656666]]
Iteration 700 of 1000: loss=0.0994 " + "l1=0" + "l2=0.0994 f=-0.352 shape=(1, 9000, 1)
logits [[ 2.454801  -2.4753149  2.4714608 -3.8578832]]
Iteration 800 of 1000: loss=0.09 " + "l1=0" + "l2=0.09 f=-0.35 shape=(1, 9000, 1)
logits [[ 2.468788  -2.4704673  2.4710748 -3.8680577]]
Iteration 900 of 1000: loss=0.0871 " + "l1=0.00377" + "l2=0.0833 f=-0.347 shape=(1, 9000, 1)
logits [[ 2.4741783 -2.463491   2.4673183 -3.8671944]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.386 " + "l1=0.386" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.382148  -2.1454751  2.1936934 -4.602974 ]]
Iteration 100 of 1000: loss=0.259 " + "l1=0.162" + "l2=0.0975 f=-0.316 shape=(1, 9000, 1)
logits [[ 2.7824366 -2.2676888  2.2847815 -4.065328 ]]
Iteration 200 of 1000: loss=0.182 " + "l1=0.0417" + "l2=0.14 f=-0.346 shape=(1, 9000, 1)
logits [[ 2.5560713 -2.4290783  2.4277363 -3.9375572]]
Iteration 300 of 1000: loss=0.144 " + "l1=0.00357" + "l2=0.14 f=-0.352 shape=(1, 9000, 1)
logits [[ 2.4691172 -2.4648094  2.4581373 -3.8687117]]
Iteration 400 of 1000: loss=0.123 " + "l1=0.00278" + "l2=0.12 f=-0.353 shape=(1, 9000, 1)
logits [[ 2.476846  -2.4708648  2.4682775 -3.8852482]]
Iteration 500 of 1000: loss=0.107 " + "l1=0" + "l2=0.107 f=-0.354 shape=(1, 9000, 1)
logits [[ 2.4749649 -2.4720352  2.4751332 -3.8948872]]
Iteration 600 of 1000: loss=0.0968 " + "l1=0" + "l2=0.0968 f=-0.355 shape=(1, 9000, 1)
logits [[ 2.476823  -2.4674792  2.476942  -3.9045827]]
Iteration 700 of 1000: loss=0.0915 " + "l1=0" + "l2=0.0915 f=-0.355 shape=(1, 9000, 1)
logits [[ 2.4630172 -2.4573133  2.4710014 -3.8953838]]
Iteration 800 of 1000: loss=0.0846 " + "l1=0.000822" + "l2=0.0838 f=-0.352 shape=(1, 9000, 1)
logits [[ 2.4670317 -2.4447272  2.4645011 -3.8965087]]
Iteration 900 of 1000: loss=0.0813 " + "l1=0.00292" + "l2=0.0783 f=-0.351 shape=(1, 9000, 1)
logits [[ 2.463476  -2.4316676  2.4544978 -3.8884127]]
--- 268.6394262313843 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0799 " + "l1=0.0799" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.382148  -2.1454751  2.1936934 -4.602974 ]]
Iteration 100 of 1000: loss=0.0791 " + "l1=0.0786" + "l2=0.000511 f=-0.29 shape=(1, 9000, 1)
logits [[ 3.3306408 -2.1352415  2.1757624 -4.5331335]]
Iteration 200 of 1000: loss=0.079 " + "l1=0.0785" + "l2=0.000534 f=-0.29 shape=(1, 9000, 1)
logits [[ 3.324353  -2.1341808  2.1732748 -4.5237293]]
Iteration 300 of 1000: loss=0.0789 " + "l1=0.0783" + "l2=0.000619 f=-0.29 shape=(1, 9000, 1)
logits [[ 3.3167257 -2.1329212  2.1703374 -4.512345 ]]
Iteration 400 of 1000: loss=0.0788 " + "l1=0.0781" + "l2=0.000717 f=-0.289 shape=(1, 9000, 1)
logits [[ 3.3095496 -2.1316144  2.1674535 -4.5013623]]
Iteration 500 of 1000: loss=0.0787 " + "l1=0.0779" + "l2=0.00081 f=-0.288 shape=(1, 9000, 1)
logits [[ 3.3026793 -2.1303294  2.1646345 -4.490781 ]]
Iteration 600 of 1000: loss=0.0787 " + "l1=0.0778" + "l2=0.000934 f=-0.288 shape=(1, 9000, 1)
logits [[ 3.2958727 -2.128972   2.1617985 -4.4805126]]
Iteration 700 of 1000: loss=0.0787 " + "l1=0.0776" + "l2=0.00107 f=-0.287 shape=(1, 9000, 1)
logits [[ 3.2892    -2.1275253  2.159024  -4.4704757]]
Iteration 800 of 1000: loss=0.0786 " + "l1=0.0774" + "l2=0.00117 f=-0.287 shape=(1, 9000, 1)
logits [[ 3.2827182 -2.1259263  2.156206  -4.4607854]]
Iteration 900 of 1000: loss=0.0787 " + "l1=0.0773" + "l2=0.00142 f=-0.286 shape=(1, 9000, 1)
logits [[ 3.2764943 -2.1244318  2.1535573 -4.451569 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.799 " + "l1=0.799" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.382148  -2.1454751  2.1936934 -4.602974 ]]
Iteration 100 of 1000: loss=0.729 " + "l1=0.683" + "l2=0.0453 f=-0.274 shape=(1, 9000, 1)
logits [[ 2.8825233 -2.0487814  2.0216246 -3.9500978]]
Iteration 200 of 1000: loss=0.704 " + "l1=0.64" + "l2=0.0644 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.7016895 -2.028281   1.9648607 -3.6955917]]
Iteration 300 of 1000: loss=0.683 " + "l1=0.604" + "l2=0.0784 f=-0.257 shape=(1, 9000, 1)
logits [[ 2.5579972 -2.0204275  1.9204689 -3.484774 ]]
Iteration 400 of 1000: loss=0.662 " + "l1=0.571" + "l2=0.091 f=-0.251 shape=(1, 9000, 1)
logits [[ 2.422545  -2.0074568  1.86932   -3.2894309]]
Iteration 500 of 1000: loss=0.644 " + "l1=0.544" + "l2=0.1 f=-0.245 shape=(1, 9000, 1)
logits [[ 2.3144057 -2.0020046  1.8299689 -3.1217194]]
Iteration 600 of 1000: loss=0.623 " + "l1=0.511" + "l2=0.112 f=-0.238 shape=(1, 9000, 1)
logits [[ 2.1888282 -2.0015645  1.7877221 -2.92579  ]]
Iteration 700 of 1000: loss=0.604 " + "l1=0.483" + "l2=0.121 f=-0.232 shape=(1, 9000, 1)
logits [[ 2.0790179 -2.0018518  1.748548  -2.7543938]]
Iteration 800 of 1000: loss=0.585 " + "l1=0.454" + "l2=0.131 f=-0.229 shape=(1, 9000, 1)
logits [[ 1.9587767 -2.0065174  1.7095358 -2.5772908]]
Iteration 900 of 1000: loss=0.565 " + "l1=0.43" + "l2=0.135 f=-0.227 shape=(1, 9000, 1)
logits [[ 1.8632528 -2.0088148  1.6709158 -2.4343512]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.99 " + "l1=7.99" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.382148  -2.1454751  2.1936934 -4.602974 ]]
Iteration 100 of 1000: loss=2.93 " + "l1=0.945" + "l2=1.99 f=-0.0972 shape=(1, 9000, 1)
logits [[ 0.62417185 -1.4360601   0.6839009  -0.260705  ]]
Iteration 200 of 1000: loss=1.78 " + "l1=0" + "l2=1.78 f=-0.0482 shape=(1, 9000, 1)
logits [[ 0.29820678 -1.3482016   0.41423312  0.4431242 ]]
Iteration 300 of 1000: loss=1.43 " + "l1=0.0125" + "l2=1.42 f=-0.0607 shape=(1, 9000, 1)
logits [[ 0.33118525 -1.4051367   0.42188454  0.4093542 ]]
Iteration 400 of 1000: loss=1.25 " + "l1=0.0251" + "l2=1.22 f=-0.0659 shape=(1, 9000, 1)
logits [[ 0.35166645 -1.4470242   0.4284115   0.40329996]]
Iteration 500 of 1000: loss=1.11 " + "l1=0" + "l2=1.11 f=-0.0589 shape=(1, 9000, 1)
logits [[ 0.3836517  -1.4562916   0.41602358  0.42115957]]
Iteration 600 of 1000: loss=1.02 " + "l1=0" + "l2=1.02 f=-0.0506 shape=(1, 9000, 1)
logits [[ 0.41683826 -1.4618049   0.42045075  0.42208725]]
Iteration 700 of 1000: loss=0.956 " + "l1=0" + "l2=0.956 f=-0.0419 shape=(1, 9000, 1)
logits [[ 0.41399807 -1.4699161   0.42993358  0.4585053 ]]
Iteration 800 of 1000: loss=0.898 " + "l1=0" + "l2=0.898 f=-0.033 shape=(1, 9000, 1)
logits [[ 0.40898067 -1.4758799   0.44128346  0.49364886]]
Iteration 900 of 1000: loss=0.83 " + "l1=0" + "l2=0.83 f=-0.0303 shape=(1, 9000, 1)
logits [[ 0.42982277 -1.4915994   0.4592767   0.4814583 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.39 " + "l1=4.39" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.382148  -2.1454751  2.1936934 -4.602974 ]]
Iteration 100 of 1000: loss=2.38 " + "l1=1.51" + "l2=0.874 f=-0.179 shape=(1, 9000, 1)
logits [[ 1.2318492 -1.6742014  1.2348741 -1.5093894]]
Iteration 200 of 1000: loss=1.89 " + "l1=0.853" + "l2=1.03 f=-0.146 shape=(1, 9000, 1)
logits [[ 0.8367128 -1.5907435  0.8593487 -0.6913173]]
Iteration 300 of 1000: loss=1.46 " + "l1=0.246" + "l2=1.21 f=-0.0936 shape=(1, 9000, 1)
logits [[ 0.45643103 -1.494642    0.5560163   0.10785853]]
Iteration 400 of 1000: loss=1.08 " + "l1=0.00154" + "l2=1.08 f=-0.059 shape=(1, 9000, 1)
logits [[ 0.37609085 -1.4840227   0.4374263   0.4346203 ]]
Iteration 500 of 1000: loss=0.919 " + "l1=0.00255" + "l2=0.916 f=-0.0377 shape=(1, 9000, 1)
logits [[ 0.42176747 -1.4959052   0.46390834  0.4592691 ]]
Iteration 600 of 1000: loss=0.83 " + "l1=0.0142" + "l2=0.816 f=-0.0325 shape=(1, 9000, 1)
logits [[ 0.43080965 -1.5228955   0.49397272  0.4681589 ]]
Iteration 700 of 1000: loss=0.754 " + "l1=0.00545" + "l2=0.748 f=-0.0289 shape=(1, 9000, 1)
logits [[ 0.42136073 -1.5436312   0.5082487   0.4983332 ]]
Iteration 800 of 1000: loss=0.691 " + "l1=0" + "l2=0.691 f=-0.0245 shape=(1, 9000, 1)
logits [[ 0.40124413 -1.5489852   0.5199536   0.5296271 ]]
Iteration 900 of 1000: loss=0.64 " + "l1=0" + "l2=0.64 f=-0.0264 shape=(1, 9000, 1)
logits [[ 0.39130437 -1.552652    0.52307284  0.5325693 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.6 " + "l1=2.6" + "l2=0 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.382148  -2.1454751  2.1936934 -4.602974 ]]
Iteration 100 of 1000: loss=1.77 " + "l1=1.26" + "l2=0.509 f=-0.219 shape=(1, 9000, 1)
logits [[ 1.6265434 -1.876502   1.62251   -2.248631 ]]
Iteration 200 of 1000: loss=1.53 " + "l1=1.01" + "l2=0.521 f=-0.194 shape=(1, 9000, 1)
logits [[ 1.3729547 -1.7816862  1.3749064 -1.7417712]]
Iteration 300 of 1000: loss=1.37 " + "l1=0.853" + "l2=0.522 f=-0.175 shape=(1, 9000, 1)
logits [[ 1.2251672 -1.7486281  1.2218145 -1.3996742]]
Iteration 400 of 1000: loss=1.23 " + "l1=0.687" + "l2=0.545 f=-0.161 shape=(1, 9000, 1)
logits [[ 1.0656778 -1.7356814  1.0699748 -1.0452087]]
Iteration 500 of 1000: loss=1.08 " + "l1=0.49" + "l2=0.594 f=-0.136 shape=(1, 9000, 1)
logits [[ 0.8817051  -1.7073811   0.89458275 -0.61446756]]
Iteration 600 of 1000: loss=0.931 " + "l1=0.263" + "l2=0.668 f=-0.103 shape=(1, 9000, 1)
logits [[ 0.6364305  -1.6539153   0.70817345 -0.10246734]]
Iteration 700 of 1000: loss=0.777 " + "l1=0.0447" + "l2=0.732 f=-0.0557 shape=(1, 9000, 1)
logits [[ 0.4129376  -1.5789533   0.5404177   0.40298295]]
Iteration 800 of 1000: loss=0.672 " + "l1=0.00113" + "l2=0.671 f=-0.0304 shape=(1, 9000, 1)
logits [[ 0.3929907  -1.5573616   0.5232126   0.51974887]]
Iteration 900 of 1000: loss=0.618 " + "l1=0" + "l2=0.618 f=-0.0296 shape=(1, 9000, 1)
logits [[ 0.37802786 -1.555583    0.5276964   0.5313567 ]]
--- 301.7403552532196 seconds ---
Adv result:3
Loading record A00798
(1, 6114)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0718 " + "l1=0.0718" + "l2=0 f=-0.232 shape=(1, 9000, 1)
logits [[ 4.2722735 -2.9086297  2.1528955 -4.4440002]]
Iteration 100 of 1000: loss=0.0716 " + "l1=0.0714" + "l2=0.000193 f=-0.229 shape=(1, 9000, 1)
logits [[ 4.2446856 -2.8946807  2.142696  -4.4092665]]
Iteration 200 of 1000: loss=0.0715 " + "l1=0.0714" + "l2=0.000178 f=-0.229 shape=(1, 9000, 1)
logits [[ 4.2426667 -2.8937483  2.1419647 -4.4063444]]
Iteration 300 of 1000: loss=0.0715 " + "l1=0.0713" + "l2=0.000208 f=-0.228 shape=(1, 9000, 1)
logits [[ 4.2391777 -2.8917804  2.1405725 -4.401871 ]]
Iteration 400 of 1000: loss=0.0715 " + "l1=0.0712" + "l2=0.000224 f=-0.228 shape=(1, 9000, 1)
logits [[ 4.235305 -2.889688  2.139092 -4.397138]]
Iteration 500 of 1000: loss=0.0715 " + "l1=0.0712" + "l2=0.000303 f=-0.228 shape=(1, 9000, 1)
logits [[ 4.2314377 -2.8877668  2.1377618 -4.392627 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.718 " + "l1=0.718" + "l2=0 f=-0.232 shape=(1, 9000, 1)
logits [[ 4.2722735 -2.9086297  2.1528955 -4.4440002]]
Iteration 100 of 1000: loss=0.698 " + "l1=0.685" + "l2=0.0129 f=-0.215 shape=(1, 9000, 1)
logits [[ 4.040837  -2.8118784  2.073635  -4.161416 ]]
Iteration 200 of 1000: loss=0.692 " + "l1=0.675" + "l2=0.0163 f=-0.208 shape=(1, 9000, 1)
logits [[ 3.9719934 -2.7807522  2.0510638 -4.0733137]]
Iteration 300 of 1000: loss=0.685 " + "l1=0.665" + "l2=0.0201 f=-0.201 shape=(1, 9000, 1)
logits [[ 3.901091  -2.7460856  2.0256202 -3.9826846]]
Iteration 400 of 1000: loss=0.678 " + "l1=0.653" + "l2=0.0244 f=-0.195 shape=(1, 9000, 1)
logits [[ 3.825385  -2.70858    2.0012267 -3.896834 ]]
Iteration 500 of 1000: loss=0.67 " + "l1=0.641" + "l2=0.029 f=-0.189 shape=(1, 9000, 1)
logits [[ 3.7436135 -2.6684003  1.9767342 -3.8085246]]
Iteration 600 of 1000: loss=0.661 " + "l1=0.628" + "l2=0.0328 f=-0.185 shape=(1, 9000, 1)
logits [[ 3.6589725 -2.625109   1.9539468 -3.7295094]]
Iteration 700 of 1000: loss=0.65 " + "l1=0.612" + "l2=0.0377 f=-0.181 shape=(1, 9000, 1)
logits [[ 3.5559852 -2.5637395  1.9272395 -3.644142 ]]
Iteration 800 of 1000: loss=0.629 " + "l1=0.582" + "l2=0.0463 f=-0.205 shape=(1, 9000, 1)
logits [[ 3.3478885 -2.4742346  1.8672006 -3.5609498]]
Iteration 900 of 1000: loss=0.609 " + "l1=0.554" + "l2=0.0542 f=-0.204 shape=(1, 9000, 1)
logits [[ 3.1886964 -2.355417   1.8427385 -3.4905791]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.18 " + "l1=7.18" + "l2=0 f=-0.232 shape=(1, 9000, 1)
logits [[ 4.2722735 -2.9086297  2.1528955 -4.4440002]]
Iteration 100 of 1000: loss=4.54 " + "l1=3.2" + "l2=1.34 f=-0.167 shape=(1, 9000, 1)
logits [[ 1.8133516 -1.3833388  1.3877319 -2.4874005]]
Iteration 200 of 1000: loss=3.4 " + "l1=2" + "l2=1.4 f=-0.19 shape=(1, 9000, 1)
logits [[ 1.2463707 -0.7571698  1.2219667 -2.4731338]]
Iteration 300 of 1000: loss=2.7 " + "l1=1.21" + "l2=1.49 f=-0.193 shape=(1, 9000, 1)
logits [[ 0.84292126 -0.36376786  0.85033494 -2.1031394 ]]
Iteration 400 of 1000: loss=2.16 " + "l1=0.715" + "l2=1.44 f=-0.174 shape=(1, 9000, 1)
logits [[ 0.5852312  -0.11194759  0.603385   -1.773843  ]]
Iteration 500 of 1000: loss=1.87 " + "l1=0.482" + "l2=1.38 f=-0.156 shape=(1, 9000, 1)
logits [[ 0.4581568  -0.02376225  0.45200488 -1.5122869 ]]
Iteration 600 of 1000: loss=1.7 " + "l1=0.36" + "l2=1.34 f=-0.143 shape=(1, 9000, 1)
logits [[ 0.36173412  0.00428248  0.36409813 -1.302823  ]]
Iteration 700 of 1000: loss=1.53 " + "l1=0.192" + "l2=1.34 f=-0.153 shape=(1, 9000, 1)
logits [[ 0.20846713  0.01940527  0.21139476 -1.0501571 ]]
Iteration 800 of 1000: loss=1.34 " + "l1=0.0254" + "l2=1.32 f=-0.156 shape=(1, 9000, 1)
logits [[ 0.04776722  0.02546001  0.0508953  -0.74906194]]
Iteration 900 of 1000: loss=1.18 " + "l1=0.014" + "l2=1.17 f=-0.161 shape=(1, 9000, 1)
logits [[-0.0181515  -0.02220993 -0.0082287  -0.59695405]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.95 " + "l1=3.95" + "l2=0 f=-0.232 shape=(1, 9000, 1)
logits [[ 4.2722735 -2.9086297  2.1528955 -4.4440002]]
Iteration 100 of 1000: loss=3.25 " + "l1=2.82" + "l2=0.434 f=-0.137 shape=(1, 9000, 1)
logits [[ 2.9154787 -2.2045894  1.6936135 -2.952104 ]]
Iteration 200 of 1000: loss=2.59 " + "l1=1.9" + "l2=0.688 f=-0.161 shape=(1, 9000, 1)
logits [[ 2.040104  -1.423459   1.464342  -2.7263188]]
Iteration 300 of 1000: loss=2.15 " + "l1=1.37" + "l2=0.781 f=-0.212 shape=(1, 9000, 1)
logits [[ 1.5200498 -0.9624355  1.3562278 -2.7601533]]
Iteration 400 of 1000: loss=1.74 " + "l1=0.996" + "l2=0.743 f=-0.24 shape=(1, 9000, 1)
logits [[ 1.1251982 -0.6784452  1.13173   -2.5386026]]
Iteration 500 of 1000: loss=1.51 " + "l1=0.802" + "l2=0.711 f=-0.245 shape=(1, 9000, 1)
logits [[ 0.9559877  -0.50232476  0.9545925  -2.3863444 ]]
Iteration 600 of 1000: loss=1.39 " + "l1=0.684" + "l2=0.705 f=-0.24 shape=(1, 9000, 1)
logits [[ 0.82414913 -0.41895065  0.81432384 -2.181353  ]]
Iteration 700 of 1000: loss=1.28 " + "l1=0.577" + "l2=0.703 f=-0.235 shape=(1, 9000, 1)
logits [[ 0.6731378  -0.36964887  0.67861575 -1.9207846 ]]
Iteration 800 of 1000: loss=1.15 " + "l1=0.457" + "l2=0.691 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.47501713 -0.346536    0.4846935  -1.6056399 ]]
Iteration 900 of 1000: loss=0.934 " + "l1=0.257" + "l2=0.677 f=-0.251 shape=(1, 9000, 1)
logits [[ 0.23042855 -0.23215757  0.23554122 -1.2358644 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.57 " + "l1=5.57" + "l2=0 f=-0.232 shape=(1, 9000, 1)
logits [[ 4.2722735 -2.9086297  2.1528955 -4.4440002]]
Iteration 100 of 1000: loss=3.94 " + "l1=3.03" + "l2=0.902 f=-0.167 shape=(1, 9000, 1)
logits [[ 2.2362065 -1.6781642  1.4406354 -2.667167 ]]
Iteration 200 of 1000: loss=3.01 " + "l1=1.89" + "l2=1.12 f=-0.189 shape=(1, 9000, 1)
logits [[ 1.4915273  -0.94082344  1.3629524  -2.66929   ]]
Iteration 300 of 1000: loss=2.37 " + "l1=1.3" + "l2=1.07 f=-0.219 shape=(1, 9000, 1)
logits [[ 1.1294172 -0.5448366  1.1318977 -2.593363 ]]
Iteration 400 of 1000: loss=1.89 " + "l1=0.824" + "l2=1.07 f=-0.232 shape=(1, 9000, 1)
logits [[ 0.8568615  -0.20584217  0.85650855 -2.43377   ]]
Iteration 500 of 1000: loss=1.67 " + "l1=0.619" + "l2=1.05 f=-0.226 shape=(1, 9000, 1)
logits [[ 0.695606   -0.10289889  0.69504887 -2.1922836 ]]
Iteration 600 of 1000: loss=1.54 " + "l1=0.55" + "l2=0.991 f=-0.223 shape=(1, 9000, 1)
logits [[ 0.6136113  -0.08084952  0.6285892  -2.0515168 ]]
Iteration 700 of 1000: loss=1.43 " + "l1=0.427" + "l2=1 f=-0.216 shape=(1, 9000, 1)
logits [[ 0.48532894 -0.05445651  0.49604222 -1.7911464 ]]
Iteration 800 of 1000: loss=1.3 " + "l1=0.288" + "l2=1.02 f=-0.214 shape=(1, 9000, 1)
logits [[ 0.34134787 -0.03032678  0.3367016  -1.5033821 ]]
Iteration 900 of 1000: loss=1.17 " + "l1=0.144" + "l2=1.03 f=-0.216 shape=(1, 9000, 1)
logits [[ 0.17057566 -0.00693694  0.17901745 -1.2067382 ]]
--- 276.32454562187195 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0212 " + "l1=0.0212" + "l2=0 f=-0.232 shape=(1, 9000, 1)
logits [[ 4.2722735 -2.9086297  2.1528955 -4.4440002]]
Iteration 100 of 1000: loss=0.0211 " + "l1=0.0209" + "l2=0.000137 f=-0.233 shape=(1, 9000, 1)
logits [[ 4.2496576 -2.9118958  2.1566763 -4.424558 ]]
Iteration 200 of 1000: loss=0.021 " + "l1=0.0209" + "l2=0.000111 f=-0.233 shape=(1, 9000, 1)
logits [[ 4.248722  -2.9126494  2.1573904 -4.4244018]]
Iteration 300 of 1000: loss=0.021 " + "l1=0.0209" + "l2=0.000128 f=-0.233 shape=(1, 9000, 1)
logits [[ 4.2459044 -2.9137654  2.1583028 -4.4227014]]
Iteration 400 of 1000: loss=0.021 " + "l1=0.0208" + "l2=0.000157 f=-0.233 shape=(1, 9000, 1)
logits [[ 4.2426553 -2.914941   2.1592076 -4.4206157]]
Iteration 500 of 1000: loss=0.021 " + "l1=0.0208" + "l2=0.000202 f=-0.234 shape=(1, 9000, 1)
logits [[ 4.2391315 -2.916119   2.160053  -4.4183025]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.212 " + "l1=0.212" + "l2=0 f=-0.232 shape=(1, 9000, 1)
logits [[ 4.2722735 -2.9086297  2.1528955 -4.4440002]]
Iteration 100 of 1000: loss=0.2 " + "l1=0.193" + "l2=0.00685 f=-0.238 shape=(1, 9000, 1)
logits [[ 4.110059  -2.9301744  2.1798534 -4.3119373]]
Iteration 200 of 1000: loss=0.195 " + "l1=0.186" + "l2=0.00933 f=-0.242 shape=(1, 9000, 1)
logits [[ 4.055176  -2.9485137  2.1950743 -4.2689404]]
Iteration 300 of 1000: loss=0.191 " + "l1=0.179" + "l2=0.0115 f=-0.247 shape=(1, 9000, 1)
logits [[ 4.0010757 -2.967464   2.2081091 -4.2294173]]
Iteration 400 of 1000: loss=0.186 " + "l1=0.172" + "l2=0.0135 f=-0.252 shape=(1, 9000, 1)
logits [[ 3.9409478 -2.9867504  2.2185686 -4.181986 ]]
Iteration 500 of 1000: loss=0.18 " + "l1=0.165" + "l2=0.0155 f=-0.258 shape=(1, 9000, 1)
logits [[ 3.874402  -3.0077918  2.229061  -4.1282825]]
Iteration 600 of 1000: loss=0.173 " + "l1=0.155" + "l2=0.0185 f=-0.265 shape=(1, 9000, 1)
logits [[ 3.7896483 -3.0317774  2.2413306 -4.0578017]]
Iteration 700 of 1000: loss=0.166 " + "l1=0.145" + "l2=0.0211 f=-0.273 shape=(1, 9000, 1)
logits [[ 3.6996763 -3.0567288  2.2514372 -3.9860353]]
Iteration 800 of 1000: loss=0.158 " + "l1=0.136" + "l2=0.0228 f=-0.281 shape=(1, 9000, 1)
logits [[ 3.6150959 -3.0787766  2.2596138 -3.9197414]]
Iteration 900 of 1000: loss=0.149 " + "l1=0.123" + "l2=0.026 f=-0.294 shape=(1, 9000, 1)
logits [[ 3.5000868 -3.1125047  2.271283  -3.835446 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.12 " + "l1=2.12" + "l2=0 f=-0.232 shape=(1, 9000, 1)
logits [[ 4.2722735 -2.9086297  2.1528955 -4.4440002]]
Iteration 100 of 1000: loss=0.619 " + "l1=0.00296" + "l2=0.616 f=-0.321 shape=(1, 9000, 1)
logits [[ 2.5290523 -3.225026   2.5260932 -3.1154714]]
Iteration 200 of 1000: loss=0.338 " + "l1=0" + "l2=0.338 f=-0.314 shape=(1, 9000, 1)
logits [[ 2.7270367 -3.4262176  2.740124  -3.2989385]]
Iteration 300 of 1000: loss=0.253 " + "l1=0" + "l2=0.253 f=-0.319 shape=(1, 9000, 1)
logits [[ 2.7390723 -3.4590921  2.7477221 -3.3051796]]
Iteration 400 of 1000: loss=0.197 " + "l1=0" + "l2=0.197 f=-0.328 shape=(1, 9000, 1)
logits [[ 2.7301352 -3.4049711  2.7380872 -3.3737235]]
Iteration 500 of 1000: loss=0.166 " + "l1=0" + "l2=0.166 f=-0.333 shape=(1, 9000, 1)
logits [[ 2.7032363 -3.3671856  2.7115693 -3.3782022]]
Iteration 600 of 1000: loss=0.144 " + "l1=0" + "l2=0.144 f=-0.336 shape=(1, 9000, 1)
logits [[ 2.6765423 -3.3404448  2.6885998 -3.368841 ]]
Iteration 700 of 1000: loss=0.127 " + "l1=0" + "l2=0.127 f=-0.338 shape=(1, 9000, 1)
logits [[ 2.6650898 -3.3328416  2.6669757 -3.3498435]]
Iteration 800 of 1000: loss=0.114 " + "l1=0" + "l2=0.114 f=-0.339 shape=(1, 9000, 1)
logits [[ 2.648886  -3.3304892  2.6538966 -3.329707 ]]
Iteration 900 of 1000: loss=0.106 " + "l1=0" + "l2=0.106 f=-0.341 shape=(1, 9000, 1)
logits [[ 2.6264565 -3.3335636  2.648828  -3.3062818]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.17 " + "l1=1.17" + "l2=0 f=-0.232 shape=(1, 9000, 1)
logits [[ 4.2722735 -2.9086297  2.1528955 -4.4440002]]
Iteration 100 of 1000: loss=0.719 " + "l1=0.436" + "l2=0.282 f=-0.274 shape=(1, 9000, 1)
logits [[ 3.1552978 -3.1034873  2.3624191 -3.510989 ]]
Iteration 200 of 1000: loss=0.388 " + "l1=0.00123" + "l2=0.387 f=-0.333 shape=(1, 9000, 1)
logits [[ 2.5210257 -3.2442293  2.518787  -3.1284413]]
Iteration 300 of 1000: loss=0.242 " + "l1=0.00337" + "l2=0.239 f=-0.327 shape=(1, 9000, 1)
logits [[ 2.7179046 -3.4538352  2.7117743 -3.285033 ]]
Iteration 400 of 1000: loss=0.18 " + "l1=0.00606" + "l2=0.174 f=-0.331 shape=(1, 9000, 1)
logits [[ 2.7169755 -3.4080756  2.705958  -3.3374517]]
Iteration 500 of 1000: loss=0.143 " + "l1=0" + "l2=0.143 f=-0.339 shape=(1, 9000, 1)
logits [[ 2.6686428 -3.3668482  2.6733844 -3.3318393]]
Iteration 600 of 1000: loss=0.124 " + "l1=0" + "l2=0.124 f=-0.345 shape=(1, 9000, 1)
logits [[ 2.6363328 -3.3552585  2.6465802 -3.3076997]]
Iteration 700 of 1000: loss=0.108 " + "l1=0.00426" + "l2=0.103 f=-0.35 shape=(1, 9000, 1)
logits [[ 2.6296113 -3.3526108  2.6218677 -3.2979116]]
Iteration 800 of 1000: loss=0.0914 " + "l1=0" + "l2=0.0914 f=-0.353 shape=(1, 9000, 1)
logits [[ 2.5948064 -3.3538244  2.6077585 -3.2602687]]
Iteration 900 of 1000: loss=0.0801 " + "l1=0" + "l2=0.0801 f=-0.355 shape=(1, 9000, 1)
logits [[ 2.5825381 -3.3557181  2.5869544 -3.234513 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.689 " + "l1=0.689" + "l2=0 f=-0.232 shape=(1, 9000, 1)
logits [[ 4.2722735 -2.9086297  2.1528955 -4.4440002]]
Iteration 100 of 1000: loss=0.555 " + "l1=0.474" + "l2=0.0805 f=-0.252 shape=(1, 9000, 1)
logits [[ 3.7037125 -2.9900434  2.2452784 -3.96657  ]]
Iteration 200 of 1000: loss=0.461 " + "l1=0.329" + "l2=0.132 f=-0.271 shape=(1, 9000, 1)
logits [[ 3.347401  -3.1104262  2.3350284 -3.6567302]]
Iteration 300 of 1000: loss=0.356 " + "l1=0.164" + "l2=0.192 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.8997748 -3.16432    2.3946798 -3.3493266]]
Iteration 400 of 1000: loss=0.237 " + "l1=0.017" + "l2=0.22 f=-0.344 shape=(1, 9000, 1)
logits [[ 2.524729  -3.179441   2.4724848 -3.1929173]]
Iteration 500 of 1000: loss=0.148 " + "l1=0" + "l2=0.148 f=-0.343 shape=(1, 9000, 1)
logits [[ 2.589513  -3.3184977  2.602146  -3.2438467]]
Iteration 600 of 1000: loss=0.112 " + "l1=0.000252" + "l2=0.112 f=-0.345 shape=(1, 9000, 1)
logits [[ 2.611351  -3.338606   2.6105742 -3.2636302]]
Iteration 700 of 1000: loss=0.0926 " + "l1=0" + "l2=0.0926 f=-0.349 shape=(1, 9000, 1)
logits [[ 2.5892417 -3.3469114  2.594339  -3.2327795]]
Iteration 800 of 1000: loss=0.0796 " + "l1=0" + "l2=0.0796 f=-0.354 shape=(1, 9000, 1)
logits [[ 2.5760713 -3.3547196  2.5823767 -3.2180655]]
Iteration 900 of 1000: loss=0.0702 " + "l1=4.96e-05" + "l2=0.0702 f=-0.356 shape=(1, 9000, 1)
logits [[ 2.5640988 -3.353066   2.5639462 -3.1991603]]
--- 276.6821129322052 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0872 " + "l1=0.0872" + "l2=0 f=-0.232 shape=(1, 9000, 1)
logits [[ 4.2722735 -2.9086297  2.1528955 -4.4440002]]
Iteration 100 of 1000: loss=0.0864 " + "l1=0.086" + "l2=0.000466 f=-0.227 shape=(1, 9000, 1)
logits [[ 4.2249255 -2.9003317  2.1386242 -4.372848 ]]
Iteration 200 of 1000: loss=0.0863 " + "l1=0.0858" + "l2=0.000506 f=-0.227 shape=(1, 9000, 1)
logits [[ 4.217091  -2.8994958  2.137051  -4.3607574]]
Iteration 300 of 1000: loss=0.0862 " + "l1=0.0856" + "l2=0.0006 f=-0.226 shape=(1, 9000, 1)
logits [[ 4.208193  -2.8986492  2.134967  -4.3473115]]
Iteration 400 of 1000: loss=0.086 " + "l1=0.0853" + "l2=0.000699 f=-0.225 shape=(1, 9000, 1)
logits [[ 4.1993475 -2.8980649  2.1329446 -4.3343987]]
Iteration 500 of 1000: loss=0.0859 " + "l1=0.0851" + "l2=0.000797 f=-0.225 shape=(1, 9000, 1)
logits [[ 4.190227  -2.8976583  2.1311028 -4.3217673]]
Iteration 600 of 1000: loss=0.0858 " + "l1=0.0849" + "l2=0.000914 f=-0.224 shape=(1, 9000, 1)
logits [[ 4.181089  -2.897364   2.129358  -4.3093295]]
Iteration 700 of 1000: loss=0.0857 " + "l1=0.0847" + "l2=0.00105 f=-0.224 shape=(1, 9000, 1)
logits [[ 4.172015  -2.8971775  2.1277616 -4.297144 ]]
Iteration 800 of 1000: loss=0.0857 " + "l1=0.0845" + "l2=0.00123 f=-0.223 shape=(1, 9000, 1)
logits [[ 4.162417  -2.897076   2.1261342 -4.284737 ]]
Iteration 900 of 1000: loss=0.0856 " + "l1=0.0843" + "l2=0.0013 f=-0.223 shape=(1, 9000, 1)
logits [[ 4.153039  -2.8970757  2.1246636 -4.272476 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.872 " + "l1=0.872" + "l2=0 f=-0.232 shape=(1, 9000, 1)
logits [[ 4.2722735 -2.9086297  2.1528955 -4.4440002]]
Iteration 100 of 1000: loss=0.805 " + "l1=0.764" + "l2=0.0404 f=-0.199 shape=(1, 9000, 1)
logits [[ 3.8262074 -2.8317223  2.0287263 -3.8183641]]
Iteration 200 of 1000: loss=0.778 " + "l1=0.723" + "l2=0.0552 f=-0.185 shape=(1, 9000, 1)
logits [[ 3.6565294 -2.8137226  1.9916711 -3.572995 ]]
Iteration 300 of 1000: loss=0.752 " + "l1=0.684" + "l2=0.0674 f=-0.178 shape=(1, 9000, 1)
logits [[ 3.4889755 -2.8051345  1.9571788 -3.3516936]]
Iteration 400 of 1000: loss=0.726 " + "l1=0.651" + "l2=0.075 f=-0.177 shape=(1, 9000, 1)
logits [[ 3.337638  -2.8065662  1.9292568 -3.1688087]]
Iteration 500 of 1000: loss=0.702 " + "l1=0.618" + "l2=0.0837 f=-0.182 shape=(1, 9000, 1)
logits [[ 3.1782608 -2.8006134  1.8992711 -3.0038283]]
Iteration 600 of 1000: loss=0.673 " + "l1=0.578" + "l2=0.0956 f=-0.194 shape=(1, 9000, 1)
logits [[ 2.9633236 -2.7991633  1.8728176 -2.813279 ]]
Iteration 700 of 1000: loss=0.643 " + "l1=0.544" + "l2=0.0994 f=-0.205 shape=(1, 9000, 1)
logits [[ 2.769706  -2.7751665  1.8519342 -2.6670735]]
Iteration 800 of 1000: loss=0.61 " + "l1=0.506" + "l2=0.105 f=-0.209 shape=(1, 9000, 1)
logits [[ 2.587351  -2.7635274  1.8088815 -2.4698527]]
Iteration 900 of 1000: loss=0.566 " + "l1=0.456" + "l2=0.111 f=-0.217 shape=(1, 9000, 1)
logits [[ 2.3560004 -2.7586324  1.7373499 -2.2010145]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.72 " + "l1=8.72" + "l2=0 f=-0.232 shape=(1, 9000, 1)
logits [[ 4.2722735 -2.9086297  2.1528955 -4.4440002]]
Iteration 100 of 1000: loss=3.89 " + "l1=1.67" + "l2=2.21 f=-0.104 shape=(1, 9000, 1)
logits [[ 1.2552863  -2.5023742   1.2493124  -0.41846025]]
Iteration 200 of 1000: loss=2.49 " + "l1=0.0182" + "l2=2.47 f=-0.0187 shape=(1, 9000, 1)
logits [[ 0.75452995 -2.323501    0.75610214  0.73791367]]
Iteration 300 of 1000: loss=1.83 " + "l1=0.0331" + "l2=1.79 f=-0.0297 shape=(1, 9000, 1)
logits [[ 0.7396011 -2.30947    0.7421665  0.7090225]]
Iteration 400 of 1000: loss=1.42 " + "l1=0" + "l2=1.42 f=-0.0346 shape=(1, 9000, 1)
logits [[ 0.7157528  -2.3171308   0.7285444   0.73439366]]
Iteration 500 of 1000: loss=1.14 " + "l1=0" + "l2=1.14 f=-0.043 shape=(1, 9000, 1)
logits [[ 0.72215223 -2.3510823   0.7228724   0.73386425]]
Iteration 600 of 1000: loss=0.938 " + "l1=0" + "l2=0.938 f=-0.0495 shape=(1, 9000, 1)
logits [[ 0.71716696 -2.3981001   0.736245    0.7467831 ]]
Iteration 700 of 1000: loss=0.78 " + "l1=0" + "l2=0.78 f=-0.0622 shape=(1, 9000, 1)
logits [[ 0.7103854 -2.4590697  0.7270066  0.7730484]]
Iteration 800 of 1000: loss=0.642 " + "l1=0.0147" + "l2=0.628 f=-0.0825 shape=(1, 9000, 1)
logits [[ 0.7409515 -2.5471244  0.7454913  0.7307987]]
Iteration 900 of 1000: loss=0.551 " + "l1=0" + "l2=0.551 f=-0.093 shape=(1, 9000, 1)
logits [[ 0.711157   -2.5686774   0.72809184  0.7574932 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.79 " + "l1=4.79" + "l2=0 f=-0.232 shape=(1, 9000, 1)
logits [[ 4.2722735 -2.9086297  2.1528955 -4.4440002]]
Iteration 100 of 1000: loss=3.08 " + "l1=2.23" + "l2=0.853 f=-0.172 shape=(1, 9000, 1)
logits [[ 2.205053  -2.6716006  1.6210781 -1.8422455]]
Iteration 200 of 1000: loss=2.28 " + "l1=1.22" + "l2=1.06 f=-0.14 shape=(1, 9000, 1)
logits [[ 1.3967687 -2.5354617  1.3966908 -0.8177403]]
Iteration 300 of 1000: loss=1.76 " + "l1=0.678" + "l2=1.08 f=-0.101 shape=(1, 9000, 1)
logits [[ 1.0632404  -2.3550534   1.058523   -0.16932535]]
Iteration 400 of 1000: loss=1.27 " + "l1=0.146" + "l2=1.12 f=-0.0722 shape=(1, 9000, 1)
logits [[ 0.73700583 -2.248005    0.74378633  0.4783098 ]]
Iteration 500 of 1000: loss=0.862 " + "l1=0.00855" + "l2=0.854 f=-0.0849 shape=(1, 9000, 1)
logits [[ 0.6601967 -2.2966585  0.6522918  0.6446509]]
Iteration 600 of 1000: loss=0.659 " + "l1=0" + "l2=0.659 f=-0.112 shape=(1, 9000, 1)
logits [[ 0.6303039  -2.3397205   0.6268714   0.63272744]]
Iteration 700 of 1000: loss=0.547 " + "l1=0.00472" + "l2=0.542 f=-0.134 shape=(1, 9000, 1)
logits [[ 0.6081582  -2.3557181   0.61061305  0.60202426]]
Iteration 800 of 1000: loss=0.471 " + "l1=0.00281" + "l2=0.469 f=-0.148 shape=(1, 9000, 1)
logits [[ 0.603885  -2.3936338  0.599483   0.598775 ]]
Iteration 900 of 1000: loss=0.422 " + "l1=0.00405" + "l2=0.418 f=-0.158 shape=(1, 9000, 1)
logits [[ 0.59941125 -2.4419577   0.6084877   0.6011314 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.83 " + "l1=2.83" + "l2=0 f=-0.232 shape=(1, 9000, 1)
logits [[ 4.2722735 -2.9086297  2.1528955 -4.4440002]]
Iteration 100 of 1000: loss=2.16 " + "l1=1.8" + "l2=0.362 f=-0.157 shape=(1, 9000, 1)
logits [[ 2.9224432 -2.7198522  1.7739244 -2.6044476]]
Iteration 200 of 1000: loss=1.86 " + "l1=1.37" + "l2=0.489 f=-0.153 shape=(1, 9000, 1)
logits [[ 2.310932  -2.6915195  1.6877741 -1.919352 ]]
Iteration 300 of 1000: loss=1.6 " + "l1=1.02" + "l2=0.58 f=-0.17 shape=(1, 9000, 1)
logits [[ 1.744552  -2.6228864  1.590866  -1.3933986]]
Iteration 400 of 1000: loss=1.34 " + "l1=0.745" + "l2=0.592 f=-0.173 shape=(1, 9000, 1)
logits [[ 1.3905035 -2.5644953  1.3868297 -0.9033163]]
Iteration 500 of 1000: loss=1.03 " + "l1=0.452" + "l2=0.582 f=-0.156 shape=(1, 9000, 1)
logits [[ 1.0846869  -2.485952    1.0843627  -0.30518028]]
Iteration 600 of 1000: loss=0.749 " + "l1=0.175" + "l2=0.574 f=-0.149 shape=(1, 9000, 1)
logits [[ 0.7506759  -2.3094273   0.74883085  0.21236473]]
Iteration 700 of 1000: loss=0.535 " + "l1=0.00212" + "l2=0.533 f=-0.161 shape=(1, 9000, 1)
logits [[ 0.5014761 -2.1642334  0.5117715  0.5052638]]
Iteration 800 of 1000: loss=0.448 " + "l1=0" + "l2=0.448 f=-0.18 shape=(1, 9000, 1)
logits [[ 0.4737671  -2.147039    0.47083408  0.48196936]]
Iteration 900 of 1000: loss=0.393 " + "l1=0.000313" + "l2=0.393 f=-0.192 shape=(1, 9000, 1)
logits [[ 0.45883477 -2.1456912   0.46059015  0.45962596]]
--- 306.3802297115326 seconds ---
Adv result:3
Loading record A00860
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0497 " + "l1=0.0497" + "l2=0 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.383242  -2.5865905  2.2460668 -3.1217837]]
Iteration 100 of 1000: loss=0.0493 " + "l1=0.0491" + "l2=0.000243 f=-0.268 shape=(1, 9000, 1)
logits [[ 2.3460045 -2.5601616  2.2360964 -3.0928288]]
Iteration 200 of 1000: loss=0.0492 " + "l1=0.0489" + "l2=0.000252 f=-0.267 shape=(1, 9000, 1)
logits [[ 2.3388367 -2.5541167  2.2336736 -3.0878065]]
Iteration 300 of 1000: loss=0.0491 " + "l1=0.0488" + "l2=0.000309 f=-0.267 shape=(1, 9000, 1)
logits [[ 2.3296554 -2.5468037  2.2304685 -3.0803876]]
Iteration 400 of 1000: loss=0.049 " + "l1=0.0486" + "l2=0.000384 f=-0.266 shape=(1, 9000, 1)
logits [[ 2.3211198 -2.5401046  2.227517  -3.0732749]]
Iteration 500 of 1000: loss=0.0489 " + "l1=0.0485" + "l2=0.000461 f=-0.266 shape=(1, 9000, 1)
logits [[ 2.3124712 -2.5335722  2.2246985 -3.0662675]]
Iteration 600 of 1000: loss=0.0489 " + "l1=0.0483" + "l2=0.000593 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.3038764 -2.5272355  2.222129  -3.059474 ]]
Iteration 700 of 1000: loss=0.0489 " + "l1=0.0482" + "l2=0.000682 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.2958608 -2.5214083  2.2199273 -3.0533295]]
Iteration 800 of 1000: loss=0.0488 " + "l1=0.048" + "l2=0.000767 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.2881138 -2.5159197  2.2180028 -3.0473785]]
Iteration 900 of 1000: loss=0.0488 " + "l1=0.0479" + "l2=0.000907 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.280768  -2.510572   2.216193  -3.0418367]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.497 " + "l1=0.497" + "l2=0 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.383242  -2.5865905  2.2460668 -3.1217837]]
Iteration 100 of 1000: loss=0.467 " + "l1=0.456" + "l2=0.0115 f=-0.254 shape=(1, 9000, 1)
logits [[ 2.155174  -2.4012692  2.1551104 -2.92419  ]]
Iteration 200 of 1000: loss=0.457 " + "l1=0.444" + "l2=0.0133 f=-0.248 shape=(1, 9000, 1)
logits [[ 2.1015801 -2.332835   2.1024265 -2.862154 ]]
Iteration 300 of 1000: loss=0.449 " + "l1=0.433" + "l2=0.0163 f=-0.243 shape=(1, 9000, 1)
logits [[ 2.0519576 -2.2765017  2.0521045 -2.801111 ]]
Iteration 400 of 1000: loss=0.443 " + "l1=0.424" + "l2=0.0193 f=-0.239 shape=(1, 9000, 1)
logits [[ 2.003447  -2.2284913  2.0075684 -2.7405198]]
Iteration 500 of 1000: loss=0.437 " + "l1=0.415" + "l2=0.022 f=-0.236 shape=(1, 9000, 1)
logits [[ 1.9586508 -2.1848054  1.9650061 -2.6825445]]
Iteration 600 of 1000: loss=0.432 " + "l1=0.408" + "l2=0.0238 f=-0.233 shape=(1, 9000, 1)
logits [[ 1.9109299 -2.1502888  1.9313381 -2.624883 ]]
Iteration 700 of 1000: loss=0.427 " + "l1=0.401" + "l2=0.0256 f=-0.229 shape=(1, 9000, 1)
logits [[ 1.8616513 -2.1156192  1.8980944 -2.56197  ]]
Iteration 800 of 1000: loss=0.422 " + "l1=0.393" + "l2=0.0282 f=-0.226 shape=(1, 9000, 1)
logits [[ 1.8011447 -2.0751286  1.8597797 -2.48906  ]]
Iteration 900 of 1000: loss=0.416 " + "l1=0.385" + "l2=0.031 f=-0.222 shape=(1, 9000, 1)
logits [[ 1.7372195 -2.0300043  1.8172382 -2.4112973]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.97 " + "l1=4.97" + "l2=0 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.383242  -2.5865905  2.2460668 -3.1217837]]
Iteration 100 of 1000: loss=3.48 " + "l1=2.93" + "l2=0.548 f=-0.174 shape=(1, 9000, 1)
logits [[ 1.1077657 -1.4794551  1.4488782 -1.7731674]]
Iteration 200 of 1000: loss=2.83 " + "l1=2.17" + "l2=0.665 f=-0.158 shape=(1, 9000, 1)
logits [[ 0.6917512 -1.0671817  1.0998362 -1.3563313]]
Iteration 300 of 1000: loss=2.37 " + "l1=1.58" + "l2=0.786 f=-0.16 shape=(1, 9000, 1)
logits [[ 0.44388786 -0.7721736   0.81227994 -1.1244875 ]]
Iteration 400 of 1000: loss=2 " + "l1=1.1" + "l2=0.897 f=-0.162 shape=(1, 9000, 1)
logits [[ 0.11638069 -0.5828903   0.51771814 -0.69990605]]
Iteration 500 of 1000: loss=1.68 " + "l1=0.761" + "l2=0.923 f=-0.165 shape=(1, 9000, 1)
logits [[-0.19188151 -0.46021095  0.30039775 -0.30978757]]
Iteration 600 of 1000: loss=1.5 " + "l1=0.597" + "l2=0.907 f=-0.175 shape=(1, 9000, 1)
logits [[-0.3407746  -0.39195997  0.20538779 -0.17424014]]
Iteration 700 of 1000: loss=1.41 " + "l1=0.5" + "l2=0.905 f=-0.186 shape=(1, 9000, 1)
logits [[-0.44031948 -0.35396034  0.14560388 -0.09499773]]
Iteration 800 of 1000: loss=1.35 " + "l1=0.451" + "l2=0.9 f=-0.192 shape=(1, 9000, 1)
logits [[-0.50250953 -0.3383277   0.11307446 -0.03842257]]
Iteration 900 of 1000: loss=1.31 " + "l1=0.392" + "l2=0.916 f=-0.197 shape=(1, 9000, 1)
logits [[-0.5645876  -0.3184628   0.07362738  0.02122349]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=49.7 " + "l1=49.7" + "l2=0 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.383242  -2.5865905  2.2460668 -3.1217837]]
Iteration 100 of 1000: loss=8.22 " + "l1=0" + "l2=8.22 f=-0.264 shape=(1, 9000, 1)
logits [[-0.6691082   0.15591112  0.13766555 -0.68027294]]
Iteration 200 of 1000: loss=5.11 " + "l1=0" + "l2=5.11 f=-0.292 shape=(1, 9000, 1)
logits [[-0.68819225  0.1627894   0.14318836 -0.7859791 ]]
Iteration 300 of 1000: loss=4.16 " + "l1=0" + "l2=4.16 f=-0.298 shape=(1, 9000, 1)
logits [[-0.6824801   0.14583896  0.1305858  -0.7859748 ]]
Iteration 400 of 1000: loss=3.65 " + "l1=0" + "l2=3.65 f=-0.293 shape=(1, 9000, 1)
logits [[-0.67642844  0.12643796  0.10313533 -0.7238262 ]]
Iteration 500 of 1000: loss=3.25 " + "l1=0" + "l2=3.25 f=-0.282 shape=(1, 9000, 1)
logits [[-0.6520226   0.09783203  0.09584069 -0.66901267]]
Iteration 600 of 1000: loss=3.01 " + "l1=0" + "l2=3.01 f=-0.272 shape=(1, 9000, 1)
logits [[-0.6490661   0.08949471  0.08138048 -0.6097968 ]]
Iteration 700 of 1000: loss=2.82 " + "l1=0" + "l2=2.82 f=-0.268 shape=(1, 9000, 1)
logits [[-0.6445515   0.07800684  0.07270817 -0.5782909 ]]
Iteration 800 of 1000: loss=2.67 " + "l1=0" + "l2=2.67 f=-0.267 shape=(1, 9000, 1)
logits [[-0.63265234  0.07072084  0.06592286 -0.572596  ]]
Iteration 900 of 1000: loss=2.55 " + "l1=0" + "l2=2.55 f=-0.265 shape=(1, 9000, 1)
logits [[-0.6634759   0.06133353  0.0463041  -0.50331527]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=27.3 " + "l1=27.3" + "l2=0 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.383242  -2.5865905  2.2460668 -3.1217837]]
Iteration 100 of 1000: loss=7.76 " + "l1=1.61" + "l2=6.15 f=-0.224 shape=(1, 9000, 1)
logits [[-4.2149302e-01 -3.1107850e-04  2.9264572e-01 -7.6620305e-01]]
Iteration 200 of 1000: loss=4.45 " + "l1=0.00695" + "l2=4.44 f=-0.27 shape=(1, 9000, 1)
logits [[-0.6405897   0.16447493  0.1657377  -0.77116716]]
Iteration 300 of 1000: loss=3.72 " + "l1=0.00232" + "l2=3.72 f=-0.271 shape=(1, 9000, 1)
logits [[-0.63027596  0.14294147  0.14336418 -0.73813295]]
Iteration 400 of 1000: loss=3.31 " + "l1=0.00469" + "l2=3.31 f=-0.261 shape=(1, 9000, 1)
logits [[-0.6292541   0.1280588   0.12891224 -0.66988623]]
Iteration 500 of 1000: loss=3.04 " + "l1=0.0158" + "l2=3.02 f=-0.264 shape=(1, 9000, 1)
logits [[-0.59086955  0.10972343  0.11259423 -0.6863743 ]]
Iteration 600 of 1000: loss=2.78 " + "l1=0" + "l2=2.78 f=-0.262 shape=(1, 9000, 1)
logits [[-0.618211    0.09687532  0.08428548 -0.61107713]]
Iteration 700 of 1000: loss=2.5 " + "l1=0" + "l2=2.5 f=-0.261 shape=(1, 9000, 1)
logits [[-0.6449059   0.06529532  0.0625238  -0.52549464]]
Iteration 800 of 1000: loss=2.3 " + "l1=0" + "l2=2.3 f=-0.255 shape=(1, 9000, 1)
logits [[-0.65553236  0.04357472  0.04267677 -0.45130938]]
Iteration 900 of 1000: loss=2.14 " + "l1=0.0189" + "l2=2.12 f=-0.252 shape=(1, 9000, 1)
logits [[-0.6668237   0.01559806  0.01902842 -0.3756075 ]]
--- 305.7984776496887 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00137 " + "l1=0.00137" + "l2=0 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.383242  -2.5865905  2.2460668 -3.1217837]]
Iteration 100 of 1000: loss=0.00121 " + "l1=0.00107" + "l2=0.000135 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.356896  -2.5798454  2.2494295 -3.1053925]]
Iteration 200 of 1000: loss=0.00116 " + "l1=0.00105" + "l2=0.000111 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.355174  -2.5793262  2.250633  -3.1064463]]
Iteration 300 of 1000: loss=0.00114 " + "l1=0.000996" + "l2=0.000147 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.351538  -2.5783653  2.2519226 -3.1056018]]
Iteration 400 of 1000: loss=0.00112 " + "l1=0.000942" + "l2=0.000176 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.3473055 -2.5771885  2.2531548 -3.104172 ]]
Iteration 500 of 1000: loss=0.00111 " + "l1=0.000887" + "l2=0.000219 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.3430731 -2.5763497  2.2544045 -3.1024492]]
Iteration 600 of 1000: loss=0.00116 " + "l1=0.000828" + "l2=0.000332 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.3384597 -2.5754366  2.255664  -3.100466 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0137 " + "l1=0.0137" + "l2=0 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.383242  -2.5865905  2.2460668 -3.1217837]]
Iteration 100 of 1000: loss=0.00303 " + "l1=3.43e-05" + "l2=0.003 f=-0.273 shape=(1, 9000, 1)
logits [[ 2.2687457 -2.5658395  2.2684028 -3.064971 ]]
Iteration 200 of 1000: loss=0.00187 " + "l1=0" + "l2=0.00187 f=-0.274 shape=(1, 9000, 1)
logits [[ 2.2698078 -2.5666394  2.270109  -3.0689392]]
Iteration 300 of 1000: loss=0.00136 " + "l1=0" + "l2=0.00136 f=-0.274 shape=(1, 9000, 1)
logits [[ 2.2702718 -2.5662801  2.270717  -3.0702057]]
Iteration 400 of 1000: loss=0.00111 " + "l1=0" + "l2=0.00111 f=-0.274 shape=(1, 9000, 1)
logits [[ 2.2709663 -2.565735   2.2712026 -3.0713825]]
Iteration 500 of 1000: loss=0.000981 " + "l1=1.45e-05" + "l2=0.000966 f=-0.273 shape=(1, 9000, 1)
logits [[ 2.2716632 -2.564321   2.2715182 -3.0722203]]
Iteration 600 of 1000: loss=0.00101 " + "l1=9.61e-05" + "l2=0.000912 f=-0.273 shape=(1, 9000, 1)
logits [[ 2.2727664 -2.562948   2.2718053 -3.073351 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.00754 " + "l1=0.00754" + "l2=0 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.383242  -2.5865905  2.2460668 -3.1217837]]
Iteration 100 of 1000: loss=0.00363 " + "l1=0.00181" + "l2=0.00182 f=-0.272 shape=(1, 9000, 1)
logits [[ 2.2953744 -2.5687287  2.2625146 -3.0777287]]
Iteration 200 of 1000: loss=0.00216 " + "l1=9.36e-06" + "l2=0.00215 f=-0.274 shape=(1, 9000, 1)
logits [[ 2.270054  -2.5664177  2.2698839 -3.0691814]]
Iteration 300 of 1000: loss=0.0015 " + "l1=0" + "l2=0.0015 f=-0.274 shape=(1, 9000, 1)
logits [[ 2.27028   -2.5665574  2.2705257 -3.0701628]]
Iteration 400 of 1000: loss=0.0012 " + "l1=0" + "l2=0.0012 f=-0.274 shape=(1, 9000, 1)
logits [[ 2.269833  -2.5657952  2.2709987 -3.0705206]]
Iteration 500 of 1000: loss=0.000984 " + "l1=2.95e-05" + "l2=0.000954 f=-0.273 shape=(1, 9000, 1)
logits [[ 2.2716832 -2.5649927  2.2711473 -3.0716786]]
Iteration 600 of 1000: loss=0.000952 " + "l1=0" + "l2=0.000952 f=-0.273 shape=(1, 9000, 1)
logits [[ 2.2709105 -2.5630598  2.2715118 -3.071673 ]]
Iteration 700 of 1000: loss=0.000854 " + "l1=4.55e-06" + "l2=0.00085 f=-0.273 shape=(1, 9000, 1)
logits [[ 2.2720013 -2.5620794  2.2719185 -3.0727303]]
Iteration 800 of 1000: loss=0.000889 " + "l1=0" + "l2=0.000889 f=-0.273 shape=(1, 9000, 1)
logits [[ 2.2720022 -2.561198   2.2725542 -3.0733643]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00446 " + "l1=0.00446" + "l2=0 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.383242  -2.5865905  2.2460668 -3.1217837]]
Iteration 100 of 1000: loss=0.00296 " + "l1=0.0022" + "l2=0.000765 f=-0.271 shape=(1, 9000, 1)
logits [[ 2.323959  -2.5730972  2.256285  -3.090789 ]]
Iteration 200 of 1000: loss=0.00247 " + "l1=0.00156" + "l2=0.000902 f=-0.272 shape=(1, 9000, 1)
logits [[ 2.3089743 -2.5710623  2.2608423 -3.0863714]]
Iteration 300 of 1000: loss=0.002 " + "l1=0.000903" + "l2=0.00109 f=-0.273 shape=(1, 9000, 1)
logits [[ 2.2928488 -2.5686092  2.2650678 -3.0805871]]
Iteration 400 of 1000: loss=0.0015 " + "l1=0.000217" + "l2=0.00129 f=-0.274 shape=(1, 9000, 1)
logits [[ 2.2760174 -2.566203   2.2693326 -3.0739317]]
Iteration 500 of 1000: loss=0.00113 " + "l1=0" + "l2=0.00113 f=-0.274 shape=(1, 9000, 1)
logits [[ 2.270928  -2.5650213  2.2710552 -3.0722253]]
Iteration 600 of 1000: loss=0.00105 " + "l1=6.35e-06" + "l2=0.00105 f=-0.273 shape=(1, 9000, 1)
logits [[ 2.2715402 -2.5636563  2.2713447 -3.0728528]]
Iteration 700 of 1000: loss=0.000903 " + "l1=3.87e-07" + "l2=0.000903 f=-0.273 shape=(1, 9000, 1)
logits [[ 2.2716684 -2.5621498  2.2716565 -3.0731688]]
Iteration 800 of 1000: loss=0.000915 " + "l1=9.76e-07" + "l2=0.000914 f=-0.273 shape=(1, 9000, 1)
logits [[ 2.2722428 -2.5610814  2.2722127 -3.0741382]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00291 " + "l1=0.00291" + "l2=0 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.383242  -2.5865905  2.2460668 -3.1217837]]
Iteration 100 of 1000: loss=0.00224 " + "l1=0.00186" + "l2=0.000381 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.3405275 -2.5765097  2.253084  -3.0982542]]
Iteration 200 of 1000: loss=0.00203 " + "l1=0.00161" + "l2=0.000424 f=-0.271 shape=(1, 9000, 1)
logits [[ 2.3315687 -2.5749226  2.2560155 -3.0962505]]
Iteration 300 of 1000: loss=0.00183 " + "l1=0.00134" + "l2=0.000494 f=-0.271 shape=(1, 9000, 1)
logits [[ 2.3213997 -2.573183   2.258455  -3.0920126]]
Iteration 400 of 1000: loss=0.00167 " + "l1=0.00108" + "l2=0.000589 f=-0.272 shape=(1, 9000, 1)
logits [[ 2.311775  -2.571447   2.260971  -3.0883722]]
Iteration 500 of 1000: loss=0.00151 " + "l1=0.000804" + "l2=0.000705 f=-0.272 shape=(1, 9000, 1)
logits [[ 2.301278  -2.5693882  2.263421  -3.0842123]]
Iteration 600 of 1000: loss=0.00138 " + "l1=0.000526" + "l2=0.000859 f=-0.273 shape=(1, 9000, 1)
logits [[ 2.2908702 -2.567551   2.2661352 -3.0802517]]
Iteration 700 of 1000: loss=0.00121 " + "l1=0.000251" + "l2=0.000962 f=-0.273 shape=(1, 9000, 1)
logits [[ 2.2806458 -2.5654714  2.2688184 -3.0762143]]
Iteration 800 of 1000: loss=0.00114 " + "l1=1.29e-05" + "l2=0.00113 f=-0.273 shape=(1, 9000, 1)
logits [[ 2.2718732 -2.5629     2.271266  -3.0727444]]
Iteration 900 of 1000: loss=0.00102 " + "l1=1.13e-05" + "l2=0.00101 f=-0.273 shape=(1, 9000, 1)
logits [[ 2.272338  -2.561754   2.2718074 -3.0734403]]
--- 238.48256063461304 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0551 " + "l1=0.0551" + "l2=0 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.383242  -2.5865905  2.2460668 -3.1217837]]
Iteration 100 of 1000: loss=0.0543 " + "l1=0.0539" + "l2=0.000397 f=-0.267 shape=(1, 9000, 1)
logits [[ 2.3361108 -2.5748215  2.2274883 -3.0551994]]
Iteration 200 of 1000: loss=0.0541 " + "l1=0.0536" + "l2=0.000436 f=-0.266 shape=(1, 9000, 1)
logits [[ 2.3247285 -2.5710585  2.2219748 -3.039066 ]]
Iteration 300 of 1000: loss=0.0539 " + "l1=0.0533" + "l2=0.000538 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.3122663 -2.5671797  2.2159579 -3.0205903]]
Iteration 400 of 1000: loss=0.0537 " + "l1=0.053" + "l2=0.000687 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.2995775 -2.5635307  2.2099948 -3.0014095]]
Iteration 500 of 1000: loss=0.0535 " + "l1=0.0527" + "l2=0.000795 f=-0.263 shape=(1, 9000, 1)
logits [[ 2.2871742 -2.5602782  2.2044382 -2.9825933]]
Iteration 600 of 1000: loss=0.0534 " + "l1=0.0524" + "l2=0.000971 f=-0.262 shape=(1, 9000, 1)
logits [[ 2.2757056 -2.5574293  2.1994655 -2.9647613]]
Iteration 700 of 1000: loss=0.0533 " + "l1=0.0521" + "l2=0.00114 f=-0.261 shape=(1, 9000, 1)
logits [[ 2.26504  -2.554908  2.194903 -2.947939]]
Iteration 800 of 1000: loss=0.0531 " + "l1=0.0519" + "l2=0.00127 f=-0.26 shape=(1, 9000, 1)
logits [[ 2.2546566 -2.5522685  2.190521  -2.9317372]]
Iteration 900 of 1000: loss=0.0531 " + "l1=0.0516" + "l2=0.0015 f=-0.259 shape=(1, 9000, 1)
logits [[ 2.2446804 -2.5498137  2.1865292 -2.9164395]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.551 " + "l1=0.551" + "l2=0 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.383242  -2.5865905  2.2460668 -3.1217837]]
Iteration 100 of 1000: loss=0.493 " + "l1=0.47" + "l2=0.0223 f=-0.246 shape=(1, 9000, 1)
logits [[ 2.072966  -2.4984784  2.0739272 -2.6309736]]
Iteration 200 of 1000: loss=0.468 " + "l1=0.437" + "l2=0.0302 f=-0.234 shape=(1, 9000, 1)
logits [[ 1.9687665 -2.4729795  1.9702927 -2.403397 ]]
Iteration 300 of 1000: loss=0.445 " + "l1=0.407" + "l2=0.0381 f=-0.226 shape=(1, 9000, 1)
logits [[ 1.8690426 -2.4637709  1.8824826 -2.1914032]]
Iteration 400 of 1000: loss=0.424 " + "l1=0.377" + "l2=0.0475 f=-0.216 shape=(1, 9000, 1)
logits [[ 1.7626238 -2.4485466  1.7959162 -1.9723982]]
Iteration 500 of 1000: loss=0.405 " + "l1=0.349" + "l2=0.0559 f=-0.206 shape=(1, 9000, 1)
logits [[ 1.6673104 -2.4326527  1.7168623 -1.7765567]]
Iteration 600 of 1000: loss=0.389 " + "l1=0.327" + "l2=0.0622 f=-0.197 shape=(1, 9000, 1)
logits [[ 1.5849459 -2.4111433  1.6526512 -1.6148664]]
Iteration 700 of 1000: loss=0.376 " + "l1=0.307" + "l2=0.0685 f=-0.19 shape=(1, 9000, 1)
logits [[ 1.5161926 -2.3943644  1.5946634 -1.4783089]]
Iteration 800 of 1000: loss=0.364 " + "l1=0.29" + "l2=0.0744 f=-0.183 shape=(1, 9000, 1)
logits [[ 1.4509134 -2.3690042  1.5405151 -1.3554512]]
Iteration 900 of 1000: loss=0.353 " + "l1=0.273" + "l2=0.0799 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.3786029 -2.3421144  1.4954064 -1.2339599]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.51 " + "l1=5.51" + "l2=0 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.383242  -2.5865905  2.2460668 -3.1217837]]
Iteration 100 of 1000: loss=2.25 " + "l1=1.05" + "l2=1.2 f=-0.141 shape=(1, 9000, 1)
logits [[ 0.5742713  -2.1688426   1.0398444  -0.00900783]]
Iteration 200 of 1000: loss=0.989 " + "l1=0.0078" + "l2=0.982 f=-0.127 shape=(1, 9000, 1)
logits [[ 0.22187054 -2.161169    0.71952146  0.71171945]]
Iteration 300 of 1000: loss=0.728 " + "l1=0.0163" + "l2=0.712 f=-0.13 shape=(1, 9000, 1)
logits [[ 0.2531887  -2.1619174   0.70219916  0.68585896]]
Iteration 400 of 1000: loss=0.608 " + "l1=0" + "l2=0.608 f=-0.131 shape=(1, 9000, 1)
logits [[ 0.26026684 -2.1519578   0.6738782   0.69306344]]
Iteration 500 of 1000: loss=0.541 " + "l1=0" + "l2=0.541 f=-0.133 shape=(1, 9000, 1)
logits [[ 0.27878925 -2.1475043   0.6662767   0.6722913 ]]
Iteration 600 of 1000: loss=0.496 " + "l1=0" + "l2=0.496 f=-0.133 shape=(1, 9000, 1)
logits [[ 0.28483337 -2.1353874   0.6545426   0.66331494]]
Iteration 700 of 1000: loss=0.466 " + "l1=0" + "l2=0.466 f=-0.131 shape=(1, 9000, 1)
logits [[ 0.2900318  -2.1195374   0.6450196   0.65978944]]
Iteration 800 of 1000: loss=0.44 " + "l1=0" + "l2=0.44 f=-0.131 shape=(1, 9000, 1)
logits [[ 0.29279897 -2.1106317   0.6424463   0.6517793 ]]
Iteration 900 of 1000: loss=0.427 " + "l1=0" + "l2=0.427 f=-0.132 shape=(1, 9000, 1)
logits [[ 0.28673384 -2.1054509   0.6211687   0.67088   ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.03 " + "l1=3.03" + "l2=0 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.383242  -2.5865905  2.2460668 -3.1217837]]
Iteration 100 of 1000: loss=1.8 " + "l1=1.33" + "l2=0.468 f=-0.18 shape=(1, 9000, 1)
logits [[ 1.1573945 -2.3071609  1.4255363 -0.9940066]]
Iteration 200 of 1000: loss=1.22 " + "l1=0.578" + "l2=0.641 f=-0.148 shape=(1, 9000, 1)
logits [[ 0.64148426 -2.2142894   1.0164253  -0.03416825]]
Iteration 300 of 1000: loss=0.652 " + "l1=0.000638" + "l2=0.651 f=-0.145 shape=(1, 9000, 1)
logits [[ 0.1785987 -2.119049   0.6809103  0.6797495]]
Iteration 400 of 1000: loss=0.539 " + "l1=0.00844" + "l2=0.531 f=-0.141 shape=(1, 9000, 1)
logits [[ 0.18860045 -2.087334    0.675081    0.65973073]]
Iteration 500 of 1000: loss=0.48 " + "l1=0" + "l2=0.48 f=-0.141 shape=(1, 9000, 1)
logits [[ 0.19689353 -2.076303    0.65678036  0.65685606]]
Iteration 600 of 1000: loss=0.446 " + "l1=0" + "l2=0.446 f=-0.139 shape=(1, 9000, 1)
logits [[ 0.20961913 -2.0663297   0.6507317   0.6516454 ]]
Iteration 700 of 1000: loss=0.421 " + "l1=0" + "l2=0.421 f=-0.137 shape=(1, 9000, 1)
logits [[ 0.21977118 -2.054713    0.63750744  0.65097517]]
Iteration 800 of 1000: loss=0.397 " + "l1=0" + "l2=0.397 f=-0.136 shape=(1, 9000, 1)
logits [[ 0.23340487 -2.0521617   0.63029623  0.64329   ]]
Iteration 900 of 1000: loss=0.374 " + "l1=0" + "l2=0.374 f=-0.135 shape=(1, 9000, 1)
logits [[ 0.25248024 -2.0498836   0.62165844  0.6352296 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.79 " + "l1=1.79" + "l2=0 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.383242  -2.5865905  2.2460668 -3.1217837]]
Iteration 100 of 1000: loss=1.3 " + "l1=1.1" + "l2=0.197 f=-0.211 shape=(1, 9000, 1)
logits [[ 1.556617  -2.4005864  1.6930832 -1.6923493]]
Iteration 200 of 1000: loss=1.06 " + "l1=0.809" + "l2=0.251 f=-0.187 shape=(1, 9000, 1)
logits [[ 1.2137148 -2.3278692  1.4284034 -1.0610383]]
Iteration 300 of 1000: loss=0.876 " + "l1=0.572" + "l2=0.304 f=-0.161 shape=(1, 9000, 1)
logits [[ 0.94922507 -2.2646224   1.2163093  -0.5434287 ]]
Iteration 400 of 1000: loss=0.683 " + "l1=0.282" + "l2=0.401 f=-0.141 shape=(1, 9000, 1)
logits [[ 0.60112274 -2.1613333   0.9321612   0.06430239]]
Iteration 500 of 1000: loss=0.489 " + "l1=0.00199" + "l2=0.487 f=-0.135 shape=(1, 9000, 1)
logits [[ 0.2052635  -2.0316436   0.6458054   0.63969594]]
Iteration 600 of 1000: loss=0.43 " + "l1=0" + "l2=0.43 f=-0.137 shape=(1, 9000, 1)
logits [[ 0.20127548 -2.016514    0.63042504  0.63849634]]
Iteration 700 of 1000: loss=0.39 " + "l1=0.00429" + "l2=0.385 f=-0.138 shape=(1, 9000, 1)
logits [[ 0.2131125  -2.0185702   0.6325756   0.61936754]]
Iteration 800 of 1000: loss=0.356 " + "l1=0.0019" + "l2=0.354 f=-0.141 shape=(1, 9000, 1)
logits [[ 0.2148745  -2.0214298   0.62358975  0.6177524 ]]
Iteration 900 of 1000: loss=0.328 " + "l1=0" + "l2=0.328 f=-0.143 shape=(1, 9000, 1)
logits [[ 0.20647562 -2.0187185   0.6115779   0.62728673]]
--- 311.1947731971741 seconds ---
Adv result:3
Loading record A00867
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.107 " + "l1=0.107" + "l2=0 f=-0.685 shape=(1, 9000, 1)
logits [[  7.778582   -2.9132187   3.6958687 -11.301751 ]]
Iteration 100 of 1000: loss=0.107 " + "l1=0.106" + "l2=0.000238 f=-0.681 shape=(1, 9000, 1)
logits [[  7.755233   -2.8737283   3.6667662 -11.273737 ]]
Iteration 200 of 1000: loss=0.106 " + "l1=0.106" + "l2=0.000219 f=-0.681 shape=(1, 9000, 1)
logits [[  7.7526975  -2.8654013   3.6604652 -11.2701435]]
Iteration 300 of 1000: loss=0.106 " + "l1=0.106" + "l2=0.000292 f=-0.679 shape=(1, 9000, 1)
logits [[  7.747895   -2.8538013   3.6520157 -11.263749 ]]
Iteration 400 of 1000: loss=0.106 " + "l1=0.106" + "l2=0.000372 f=-0.678 shape=(1, 9000, 1)
logits [[  7.742719   -2.8418624   3.643483  -11.256679 ]]
Iteration 500 of 1000: loss=0.106 " + "l1=0.106" + "l2=0.000468 f=-0.677 shape=(1, 9000, 1)
logits [[  7.7374067  -2.8302774   3.6352425 -11.249601 ]]
Iteration 600 of 1000: loss=0.106 " + "l1=0.106" + "l2=0.000604 f=-0.676 shape=(1, 9000, 1)
logits [[  7.732063   -2.8192513   3.6274934 -11.242592 ]]
Iteration 700 of 1000: loss=0.106 " + "l1=0.105" + "l2=0.000689 f=-0.674 shape=(1, 9000, 1)
logits [[  7.7266593  -2.8085485   3.6200538 -11.235535 ]]
Iteration 800 of 1000: loss=0.106 " + "l1=0.105" + "l2=0.000883 f=-0.673 shape=(1, 9000, 1)
logits [[  7.721329   -2.7983754   3.613011  -11.228633 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.07 " + "l1=1.07" + "l2=0 f=-0.685 shape=(1, 9000, 1)
logits [[  7.778582   -2.9132187   3.6958687 -11.301751 ]]
Iteration 100 of 1000: loss=1.03 " + "l1=1.02" + "l2=0.0156 f=-0.657 shape=(1, 9000, 1)
logits [[  7.592055   -2.587903    3.4450893 -11.077693 ]]
Iteration 200 of 1000: loss=1.01 " + "l1=0.986" + "l2=0.0258 f=-0.642 shape=(1, 9000, 1)
logits [[  7.47169    -2.3844151   3.2778857 -10.932089 ]]
Iteration 300 of 1000: loss=0.99 " + "l1=0.953" + "l2=0.0367 f=-0.633 shape=(1, 9000, 1)
logits [[  7.334262   -2.198485    3.1173182 -10.784308 ]]
Iteration 400 of 1000: loss=0.972 " + "l1=0.924" + "l2=0.0474 f=-0.628 shape=(1, 9000, 1)
logits [[  7.196281   -2.0452273   2.9796746 -10.643576 ]]
Iteration 500 of 1000: loss=0.956 " + "l1=0.899" + "l2=0.0569 f=-0.624 shape=(1, 9000, 1)
logits [[  7.0672827  -1.9240825   2.865502  -10.506574 ]]
Iteration 600 of 1000: loss=0.941 " + "l1=0.875" + "l2=0.0662 f=-0.622 shape=(1, 9000, 1)
logits [[  6.936833  -1.816153   2.76585  -10.372723]]
Iteration 700 of 1000: loss=0.927 " + "l1=0.85" + "l2=0.0772 f=-0.624 shape=(1, 9000, 1)
logits [[  6.7870045  -1.709338    2.6555758 -10.227438 ]]
Iteration 800 of 1000: loss=0.91 " + "l1=0.82" + "l2=0.0903 f=-0.625 shape=(1, 9000, 1)
logits [[  6.605964   -1.5897304   2.5320995 -10.047992 ]]
Iteration 900 of 1000: loss=0.892 " + "l1=0.791" + "l2=0.1 f=-0.625 shape=(1, 9000, 1)
logits [[ 6.4269667 -1.483705   2.420568  -9.864817 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.7 " + "l1=10.7" + "l2=0 f=-0.685 shape=(1, 9000, 1)
logits [[  7.778582   -2.9132187   3.6958687 -11.301751 ]]
Iteration 100 of 1000: loss=5.36 " + "l1=2.61" + "l2=2.75 f=-0.608 shape=(1, 9000, 1)
logits [[ 3.0305467   0.42051443  0.9918398  -6.874819  ]]
Iteration 200 of 1000: loss=2.58 " + "l1=0" + "l2=2.58 f=-0.751 shape=(1, 9000, 1)
logits [[ 1.177327   1.2347661  0.654154  -6.0712214]]
Iteration 300 of 1000: loss=2.26 " + "l1=0" + "l2=2.26 f=-0.764 shape=(1, 9000, 1)
logits [[ 1.1759063  1.1971011  0.5794798 -6.0074186]]
Iteration 400 of 1000: loss=2.07 " + "l1=0" + "l2=2.07 f=-0.767 shape=(1, 9000, 1)
logits [[ 1.1529703  1.165991   0.5341951 -5.9226484]]
Iteration 500 of 1000: loss=1.94 " + "l1=0" + "l2=1.94 f=-0.762 shape=(1, 9000, 1)
logits [[ 1.1124704   1.1491219   0.49461308 -5.806077  ]]
Iteration 600 of 1000: loss=1.8 " + "l1=0" + "l2=1.8 f=-0.739 shape=(1, 9000, 1)
logits [[ 1.1196324   1.122544    0.45965073 -5.6568637 ]]
Iteration 700 of 1000: loss=1.7 " + "l1=0" + "l2=1.7 f=-0.727 shape=(1, 9000, 1)
logits [[ 1.0922835  1.1149236  0.4329316 -5.5492144]]
Iteration 800 of 1000: loss=1.62 " + "l1=0" + "l2=1.62 f=-0.715 shape=(1, 9000, 1)
logits [[ 1.0841959   1.1043962   0.41031227 -5.4604683 ]]
Iteration 900 of 1000: loss=1.55 " + "l1=0" + "l2=1.55 f=-0.703 shape=(1, 9000, 1)
logits [[ 1.0451865   1.1091042   0.38346007 -5.351208  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.88 " + "l1=5.88" + "l2=0 f=-0.685 shape=(1, 9000, 1)
logits [[  7.778582   -2.9132187   3.6958687 -11.301751 ]]
Iteration 100 of 1000: loss=4.39 " + "l1=3.54" + "l2=0.849 f=-0.566 shape=(1, 9000, 1)
logits [[ 5.67597   -0.7667     1.9018767 -9.075577 ]]
Iteration 200 of 1000: loss=3.12 " + "l1=1.64" + "l2=1.48 f=-0.644 shape=(1, 9000, 1)
logits [[ 3.2096567   0.23637539  1.0355929  -7.059239  ]]
Iteration 300 of 1000: loss=1.92 " + "l1=0.00118" + "l2=1.92 f=-0.756 shape=(1, 9000, 1)
logits [[ 1.174277   1.1721257  0.5818666 -5.953318 ]]
Iteration 400 of 1000: loss=1.65 " + "l1=0.0261" + "l2=1.62 f=-0.745 shape=(1, 9000, 1)
logits [[ 1.171159    1.1237016   0.50996405 -5.7855964 ]]
Iteration 500 of 1000: loss=1.52 " + "l1=0.0273" + "l2=1.49 f=-0.731 shape=(1, 9000, 1)
logits [[ 1.138392    1.0887418   0.48320886 -5.6350694 ]]
Iteration 600 of 1000: loss=1.43 " + "l1=0" + "l2=1.43 f=-0.719 shape=(1, 9000, 1)
logits [[ 1.0567167  1.0735846  0.4548502 -5.4618287]]
Iteration 700 of 1000: loss=1.37 " + "l1=0" + "l2=1.37 f=-0.703 shape=(1, 9000, 1)
logits [[ 1.0504445  1.0518452  0.4240788 -5.338048 ]]
Iteration 800 of 1000: loss=1.32 " + "l1=0" + "l2=1.32 f=-0.684 shape=(1, 9000, 1)
logits [[ 1.0294374  1.0463402  0.3946962 -5.207793 ]]
Iteration 900 of 1000: loss=1.27 " + "l1=0" + "l2=1.27 f=-0.668 shape=(1, 9000, 1)
logits [[ 1.0179209   1.04051     0.35790822 -5.0881977 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.47 " + "l1=3.47" + "l2=0 f=-0.685 shape=(1, 9000, 1)
logits [[  7.778582   -2.9132187   3.6958687 -11.301751 ]]
Iteration 100 of 1000: loss=3.01 " + "l1=2.75" + "l2=0.257 f=-0.582 shape=(1, 9000, 1)
logits [[  6.828956   -1.6375527   2.6570094 -10.177903 ]]
Iteration 200 of 1000: loss=2.65 " + "l1=2.23" + "l2=0.427 f=-0.607 shape=(1, 9000, 1)
logits [[ 5.886965   -0.96212345  1.9873922  -9.340473  ]]
Iteration 300 of 1000: loss=2.29 " + "l1=1.67" + "l2=0.618 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.7081027  -0.43633282  1.4761041  -8.367658  ]]
Iteration 400 of 1000: loss=2.03 " + "l1=1.26" + "l2=0.778 f=-0.651 shape=(1, 9000, 1)
logits [[ 3.7803245  -0.08667853  1.163264   -7.461936  ]]
Iteration 500 of 1000: loss=1.81 " + "l1=0.842" + "l2=0.97 f=-0.674 shape=(1, 9000, 1)
logits [[ 2.8385057   0.24762587  0.86947846 -6.6507654 ]]
Iteration 600 of 1000: loss=1.47 " + "l1=0.183" + "l2=1.29 f=-0.7 shape=(1, 9000, 1)
logits [[ 1.4841905  0.9217953  0.5010972 -5.708746 ]]
Iteration 700 of 1000: loss=1.24 " + "l1=0.007" + "l2=1.24 f=-0.7 shape=(1, 9000, 1)
logits [[ 1.075584   1.0540543  0.379095  -5.3086314]]
Iteration 800 of 1000: loss=1.15 " + "l1=0.00183" + "l2=1.15 f=-0.681 shape=(1, 9000, 1)
logits [[ 1.0388294   1.033194    0.33865544 -5.1349907 ]]
Iteration 900 of 1000: loss=1.09 " + "l1=0.00294" + "l2=1.09 f=-0.659 shape=(1, 9000, 1)
logits [[ 1.0414016  1.0323584  0.2933032 -5.003659 ]]
--- 298.60286474227905 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0408 " + "l1=0.0408" + "l2=0 f=-0.685 shape=(1, 9000, 1)
logits [[  7.778582   -2.9132187   3.6958687 -11.301751 ]]
Iteration 100 of 1000: loss=0.0407 " + "l1=0.0405" + "l2=0.000155 f=-0.689 shape=(1, 9000, 1)
logits [[  7.763757   -2.9334803   3.713799  -11.301253 ]]
Iteration 200 of 1000: loss=0.0406 " + "l1=0.0405" + "l2=0.00012 f=-0.69 shape=(1, 9000, 1)
logits [[  7.76344    -2.9362388   3.7159011 -11.302251 ]]
Iteration 300 of 1000: loss=0.0406 " + "l1=0.0404" + "l2=0.000168 f=-0.691 shape=(1, 9000, 1)
logits [[  7.7614784  -2.9409194   3.7199893 -11.302969 ]]
Iteration 400 of 1000: loss=0.0405 " + "l1=0.0403" + "l2=0.000198 f=-0.691 shape=(1, 9000, 1)
logits [[  7.7591968  -2.9458256   3.7242591 -11.303571 ]]
Iteration 500 of 1000: loss=0.0406 " + "l1=0.0403" + "l2=0.000281 f=-0.692 shape=(1, 9000, 1)
logits [[  7.7567444  -2.9505022   3.7282615 -11.303894 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.408 " + "l1=0.408" + "l2=0 f=-0.685 shape=(1, 9000, 1)
logits [[  7.778582   -2.9132187   3.6958687 -11.301751 ]]
Iteration 100 of 1000: loss=0.393 " + "l1=0.387" + "l2=0.00681 f=-0.713 shape=(1, 9000, 1)
logits [[  7.681938   -3.0451858   3.8167503 -11.305706 ]]
Iteration 200 of 1000: loss=0.386 " + "l1=0.376" + "l2=0.00993 f=-0.729 shape=(1, 9000, 1)
logits [[  7.6347227  -3.1149173   3.8719862 -11.306192 ]]
Iteration 300 of 1000: loss=0.38 " + "l1=0.367" + "l2=0.0128 f=-0.74 shape=(1, 9000, 1)
logits [[  7.588033   -3.1694038   3.9150355 -11.292343 ]]
Iteration 400 of 1000: loss=0.375 " + "l1=0.361" + "l2=0.0147 f=-0.745 shape=(1, 9000, 1)
logits [[  7.5494494  -3.2031024   3.9435928 -11.269416 ]]
Iteration 500 of 1000: loss=0.371 " + "l1=0.355" + "l2=0.0165 f=-0.748 shape=(1, 9000, 1)
logits [[  7.51248    -3.225893    3.9635437 -11.244044 ]]
Iteration 600 of 1000: loss=0.368 " + "l1=0.35" + "l2=0.0184 f=-0.751 shape=(1, 9000, 1)
logits [[  7.474362   -3.243104    3.9783096 -11.213362 ]]
Iteration 700 of 1000: loss=0.365 " + "l1=0.345" + "l2=0.02 f=-0.753 shape=(1, 9000, 1)
logits [[  7.437269   -3.2561338   3.988121  -11.182636 ]]
Iteration 800 of 1000: loss=0.362 " + "l1=0.34" + "l2=0.0217 f=-0.755 shape=(1, 9000, 1)
logits [[  7.399408   -3.2673862   3.9957871 -11.148968 ]]
Iteration 900 of 1000: loss=0.359 " + "l1=0.336" + "l2=0.0232 f=-0.757 shape=(1, 9000, 1)
logits [[  7.3610406  -3.274607    4.000359  -11.114025 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.08 " + "l1=4.08" + "l2=0 f=-0.685 shape=(1, 9000, 1)
logits [[  7.778582   -2.9132187   3.6958687 -11.301751 ]]
Iteration 100 of 1000: loss=2.74 " + "l1=2.06" + "l2=0.68 f=-0.836 shape=(1, 9000, 1)
logits [[  6.3658667  -3.5773249   4.305883  -10.43726  ]]
Iteration 200 of 1000: loss=2.12 " + "l1=1.11" + "l2=1.02 f=-0.845 shape=(1, 9000, 1)
logits [[ 5.5506907 -3.8072255  4.4435225 -9.566579 ]]
Iteration 300 of 1000: loss=1.71 " + "l1=0.637" + "l2=1.07 f=-0.862 shape=(1, 9000, 1)
logits [[ 5.0118084 -3.8661354  4.374879  -8.967743 ]]
Iteration 400 of 1000: loss=1.35 " + "l1=0.128" + "l2=1.22 f=-0.862 shape=(1, 9000, 1)
logits [[ 4.3461323 -3.8146584  4.2182436 -8.196695 ]]
Iteration 500 of 1000: loss=1.09 " + "l1=0.00701" + "l2=1.08 f=-0.848 shape=(1, 9000, 1)
logits [[ 4.1280007 -3.7414756  4.120987  -7.9009285]]
Iteration 600 of 1000: loss=0.989 " + "l1=0.0101" + "l2=0.979 f=-0.828 shape=(1, 9000, 1)
logits [[ 4.076301  -3.6672785  4.0662336 -7.786608 ]]
Iteration 700 of 1000: loss=0.92 " + "l1=0.0131" + "l2=0.907 f=-0.809 shape=(1, 9000, 1)
logits [[ 4.039391  -3.6004248  4.0262823 -7.702342 ]]
Iteration 800 of 1000: loss=0.833 " + "l1=2.74e-05" + "l2=0.833 f=-0.79 shape=(1, 9000, 1)
logits [[ 3.9992962 -3.55002    3.9992688 -7.610467 ]]
Iteration 900 of 1000: loss=0.759 " + "l1=0" + "l2=0.759 f=-0.77 shape=(1, 9000, 1)
logits [[ 3.9580972 -3.49239    3.9655695 -7.51182  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.25 " + "l1=2.25" + "l2=0 f=-0.685 shape=(1, 9000, 1)
logits [[  7.778582   -2.9132187   3.6958687 -11.301751 ]]
Iteration 100 of 1000: loss=1.82 " + "l1=1.6" + "l2=0.212 f=-0.799 shape=(1, 9000, 1)
logits [[  7.0791187  -3.4353983   4.1642675 -11.002512 ]]
Iteration 200 of 1000: loss=1.63 " + "l1=1.33" + "l2=0.306 f=-0.83 shape=(1, 9000, 1)
logits [[  6.6634393  -3.5576596   4.247916  -10.675158 ]]
Iteration 300 of 1000: loss=1.48 " + "l1=1.11" + "l2=0.375 f=-0.836 shape=(1, 9000, 1)
logits [[  6.2964416  -3.6166525   4.279063  -10.303827 ]]
Iteration 400 of 1000: loss=1.38 " + "l1=0.945" + "l2=0.435 f=-0.836 shape=(1, 9000, 1)
logits [[ 5.9961133 -3.6616597  4.2787385 -9.958409 ]]
Iteration 500 of 1000: loss=1.28 " + "l1=0.797" + "l2=0.486 f=-0.821 shape=(1, 9000, 1)
logits [[ 5.74045   -3.6956277  4.290682  -9.618867 ]]
Iteration 600 of 1000: loss=1.19 " + "l1=0.658" + "l2=0.534 f=-0.812 shape=(1, 9000, 1)
logits [[ 5.512092  -3.7354808  4.3157215 -9.341314 ]]
Iteration 700 of 1000: loss=1.12 " + "l1=0.535" + "l2=0.58 f=-0.793 shape=(1, 9000, 1)
logits [[ 5.2718987 -3.7041502  4.2986054 -9.038674 ]]
Iteration 800 of 1000: loss=1.02 " + "l1=0.408" + "l2=0.615 f=-0.77 shape=(1, 9000, 1)
logits [[ 4.9689493 -3.608664   4.2279463 -8.668587 ]]
Iteration 900 of 1000: loss=0.846 " + "l1=0.191" + "l2=0.655 f=-0.743 shape=(1, 9000, 1)
logits [[ 4.4546175 -3.4416838  4.1065626 -8.090415 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.16 " + "l1=3.16" + "l2=0 f=-0.685 shape=(1, 9000, 1)
logits [[  7.778582   -2.9132187   3.6958687 -11.301751 ]]
Iteration 100 of 1000: loss=2.34 " + "l1=1.91" + "l2=0.423 f=-0.82 shape=(1, 9000, 1)
logits [[  6.7102942  -3.5112355   4.243396  -10.7213   ]]
Iteration 200 of 1000: loss=1.98 " + "l1=1.38" + "l2=0.593 f=-0.843 shape=(1, 9000, 1)
logits [[  6.125417   -3.6670122   4.3420734 -10.172784 ]]
Iteration 300 of 1000: loss=1.69 " + "l1=0.972" + "l2=0.722 f=-0.845 shape=(1, 9000, 1)
logits [[ 5.641468 -3.778518  4.387769 -9.630012]]
Iteration 400 of 1000: loss=1.48 " + "l1=0.702" + "l2=0.783 f=-0.851 shape=(1, 9000, 1)
logits [[ 5.2832613 -3.85268    4.3779974 -9.211616 ]]
Iteration 500 of 1000: loss=1.31 " + "l1=0.447" + "l2=0.868 f=-0.84 shape=(1, 9000, 1)
logits [[ 4.8504553 -3.7687383  4.2741747 -8.7146015]]
Iteration 600 of 1000: loss=1.15 " + "l1=0.197" + "l2=0.954 f=-0.814 shape=(1, 9000, 1)
logits [[ 4.4201794 -3.6547863  4.1654744 -8.1880665]]
Iteration 700 of 1000: loss=0.926 " + "l1=0.00548" + "l2=0.92 f=-0.789 shape=(1, 9000, 1)
logits [[ 4.0516825 -3.5355096  4.0446095 -7.7153106]]
Iteration 800 of 1000: loss=0.782 " + "l1=0" + "l2=0.782 f=-0.752 shape=(1, 9000, 1)
logits [[ 3.9662185 -3.414227   3.9756095 -7.535876 ]]
Iteration 900 of 1000: loss=0.716 " + "l1=0.00621" + "l2=0.71 f=-0.734 shape=(1, 9000, 1)
logits [[ 3.9289074 -3.3400724  3.9208925 -7.4464855]]
--- 280.9794600009918 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.191 " + "l1=0.191" + "l2=0 f=-0.685 shape=(1, 9000, 1)
logits [[  7.778582   -2.9132187   3.6958687 -11.301751 ]]
Iteration 100 of 1000: loss=0.19 " + "l1=0.19" + "l2=0.00028 f=-0.682 shape=(1, 9000, 1)
logits [[  7.74957    -2.8945935   3.6770692 -11.2589655]]
Iteration 200 of 1000: loss=0.19 " + "l1=0.19" + "l2=0.000257 f=-0.681 shape=(1, 9000, 1)
logits [[  7.7457724  -2.8915205   3.674342  -11.25355  ]]
Iteration 300 of 1000: loss=0.19 " + "l1=0.19" + "l2=0.000314 f=-0.68 shape=(1, 9000, 1)
logits [[  7.7393436  -2.886716    3.6699457 -11.243722 ]]
Iteration 400 of 1000: loss=0.19 " + "l1=0.19" + "l2=0.000412 f=-0.679 shape=(1, 9000, 1)
logits [[  7.7324     -2.8815737   3.6653147 -11.23308  ]]
Iteration 500 of 1000: loss=0.19 " + "l1=0.189" + "l2=0.000479 f=-0.678 shape=(1, 9000, 1)
logits [[  7.7251205  -2.8762286   3.660604  -11.221763 ]]
Iteration 600 of 1000: loss=0.19 " + "l1=0.189" + "l2=0.000657 f=-0.677 shape=(1, 9000, 1)
logits [[  7.7176337  -2.8706417   3.655666  -11.210102 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.91 " + "l1=1.91" + "l2=0 f=-0.685 shape=(1, 9000, 1)
logits [[  7.778582   -2.9132187   3.6958687 -11.301751 ]]
Iteration 100 of 1000: loss=1.87 " + "l1=1.85" + "l2=0.0192 f=-0.659 shape=(1, 9000, 1)
logits [[  7.5347815  -2.7561295   3.5389779 -10.95242  ]]
Iteration 200 of 1000: loss=1.84 " + "l1=1.82" + "l2=0.0285 f=-0.647 shape=(1, 9000, 1)
logits [[  7.392414  -2.655495   3.441268 -10.7667  ]]
Iteration 300 of 1000: loss=1.82 " + "l1=1.78" + "l2=0.0406 f=-0.636 shape=(1, 9000, 1)
logits [[  7.217901   -2.5294614   3.3178391 -10.548556 ]]
Iteration 400 of 1000: loss=1.79 " + "l1=1.73" + "l2=0.0541 f=-0.622 shape=(1, 9000, 1)
logits [[  7.0338955  -2.392238    3.1834052 -10.3143215]]
Iteration 500 of 1000: loss=1.76 " + "l1=1.69" + "l2=0.0675 f=-0.609 shape=(1, 9000, 1)
logits [[  6.8507895  -2.259385    3.0562408 -10.084474 ]]
Iteration 600 of 1000: loss=1.73 " + "l1=1.65" + "l2=0.082 f=-0.597 shape=(1, 9000, 1)
logits [[ 6.6596355 -2.1356962  2.9357135 -9.8478   ]]
Iteration 700 of 1000: loss=1.7 " + "l1=1.6" + "l2=0.0993 f=-0.586 shape=(1, 9000, 1)
logits [[ 6.4401603 -2.012421   2.8055048 -9.576701 ]]
Iteration 800 of 1000: loss=1.67 " + "l1=1.55" + "l2=0.117 f=-0.575 shape=(1, 9000, 1)
logits [[ 6.206708  -1.8916796  2.6712754 -9.2878685]]
Iteration 900 of 1000: loss=1.63 " + "l1=1.49" + "l2=0.137 f=-0.565 shape=(1, 9000, 1)
logits [[ 5.94296   -1.764438   2.5266716 -8.963455 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=19.1 " + "l1=19.1" + "l2=0 f=-0.685 shape=(1, 9000, 1)
logits [[  7.778582   -2.9132187   3.6958687 -11.301751 ]]
Iteration 100 of 1000: loss=11.1 " + "l1=6.56" + "l2=4.49 f=-0.545 shape=(1, 9000, 1)
logits [[ 1.9966521 -0.5312288  0.9217922 -4.566144 ]]
Iteration 200 of 1000: loss=6.49 " + "l1=1.15" + "l2=5.35 f=-0.409 shape=(1, 9000, 1)
logits [[-0.11640115 -0.1289876  -0.12664999 -1.2623277 ]]
Iteration 300 of 1000: loss=5.35 " + "l1=0.24" + "l2=5.11 f=-0.375 shape=(1, 9000, 1)
logits [[-0.3103368  -0.32153684 -0.31596822 -0.5506329 ]]
Iteration 400 of 1000: loss=4.72 " + "l1=0.0247" + "l2=4.69 f=-0.377 shape=(1, 9000, 1)
logits [[-0.3771771  -0.37431666 -0.36569837 -0.39036858]]
Iteration 500 of 1000: loss=4.26 " + "l1=0.0178" + "l2=4.25 f=-0.384 shape=(1, 9000, 1)
logits [[-0.37558636 -0.38144395 -0.38446778 -0.39341074]]
Iteration 600 of 1000: loss=3.85 " + "l1=0" + "l2=3.85 f=-0.388 shape=(1, 9000, 1)
logits [[-0.39781418 -0.38997734 -0.38427186 -0.38026288]]
Iteration 700 of 1000: loss=3.53 " + "l1=0.0301" + "l2=3.5 f=-0.388 shape=(1, 9000, 1)
logits [[-0.37103376 -0.39080638 -0.3874711  -0.40108898]]
Iteration 800 of 1000: loss=3.25 " + "l1=0" + "l2=3.25 f=-0.39 shape=(1, 9000, 1)
logits [[-0.38806644 -0.3833775  -0.40430257 -0.38236687]]
Iteration 900 of 1000: loss=3.07 " + "l1=0.0356" + "l2=3.04 f=-0.388 shape=(1, 9000, 1)
logits [[-0.37268886 -0.37964666 -0.39141825 -0.40829888]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=10.5 " + "l1=10.5" + "l2=0 f=-0.685 shape=(1, 9000, 1)
logits [[  7.778582   -2.9132187   3.6958687 -11.301751 ]]
Iteration 100 of 1000: loss=8.45 " + "l1=7.04" + "l2=1.41 f=-0.518 shape=(1, 9000, 1)
logits [[ 5.0239625 -1.427092   2.113951  -7.7809234]]
Iteration 200 of 1000: loss=6.32 " + "l1=3.77" + "l2=2.56 f=-0.541 shape=(1, 9000, 1)
logits [[ 2.110626   -0.44076625  0.8998907  -4.735627  ]]
Iteration 300 of 1000: loss=4.63 " + "l1=1.79" + "l2=2.85 f=-0.589 shape=(1, 9000, 1)
logits [[ 0.24186942  0.17646565  0.23344137 -3.0077074 ]]
Iteration 400 of 1000: loss=3.93 " + "l1=1.31" + "l2=2.62 f=-0.544 shape=(1, 9000, 1)
logits [[ 0.05345497  0.02495088  0.0601333  -2.313163  ]]
Iteration 500 of 1000: loss=3.36 " + "l1=0.701" + "l2=2.65 f=-0.479 shape=(1, 9000, 1)
logits [[-0.16971652 -0.15361908 -0.16515473 -1.4289658 ]]
Iteration 600 of 1000: loss=3.06 " + "l1=0.512" + "l2=2.55 f=-0.451 shape=(1, 9000, 1)
logits [[-0.21029465 -0.22315696 -0.2317945  -1.1403928 ]]
Iteration 700 of 1000: loss=2.8 " + "l1=0.351" + "l2=2.44 f=-0.436 shape=(1, 9000, 1)
logits [[-0.28513873 -0.276855   -0.2715586  -0.91064364]]
Iteration 800 of 1000: loss=2.59 " + "l1=0.249" + "l2=2.34 f=-0.422 shape=(1, 9000, 1)
logits [[-0.3138118  -0.30558118 -0.30961016 -0.7590777 ]]
Iteration 900 of 1000: loss=2.41 " + "l1=0.159" + "l2=2.25 f=-0.404 shape=(1, 9000, 1)
logits [[-0.32993647 -0.33631688 -0.33027586 -0.61931133]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=14.8 " + "l1=14.8" + "l2=0 f=-0.685 shape=(1, 9000, 1)
logits [[  7.778582   -2.9132187   3.6958687 -11.301751 ]]
Iteration 100 of 1000: loss=10.1 " + "l1=7.11" + "l2=3.02 f=-0.513 shape=(1, 9000, 1)
logits [[ 3.305631   -0.83949155  1.3465809  -5.864708  ]]
Iteration 200 of 1000: loss=6.38 " + "l1=2.29" + "l2=4.1 f=-0.529 shape=(1, 9000, 1)
logits [[ 0.22091393  0.17800917  0.21646874 -2.7316623 ]]
Iteration 300 of 1000: loss=5.15 " + "l1=0.997" + "l2=4.15 f=-0.463 shape=(1, 9000, 1)
logits [[-0.17153217 -0.13284202 -0.13121383 -1.4177029 ]]
Iteration 400 of 1000: loss=4.45 " + "l1=0.385" + "l2=4.06 f=-0.424 shape=(1, 9000, 1)
logits [[-0.31642428 -0.28950697 -0.30284292 -0.7857922 ]]
Iteration 500 of 1000: loss=3.91 " + "l1=0.0415" + "l2=3.87 f=-0.383 shape=(1, 9000, 1)
logits [[-0.36822674 -0.37216783 -0.36810806 -0.42168558]]
Iteration 600 of 1000: loss=3.48 " + "l1=0.0143" + "l2=3.46 f=-0.369 shape=(1, 9000, 1)
logits [[-0.36166003 -0.37087122 -0.36152256 -0.3799529 ]]
Iteration 700 of 1000: loss=3.19 " + "l1=0.0195" + "l2=3.17 f=-0.358 shape=(1, 9000, 1)
logits [[-0.34079155 -0.36361632 -0.36067626 -0.36596504]]
Iteration 800 of 1000: loss=2.92 " + "l1=0" + "l2=2.92 f=-0.356 shape=(1, 9000, 1)
logits [[-0.37742725 -0.35173813 -0.35269248 -0.34059507]]
Iteration 900 of 1000: loss=2.71 " + "l1=0" + "l2=2.71 f=-0.348 shape=(1, 9000, 1)
logits [[-0.35325322 -0.35263985 -0.35664767 -0.33123693]]
--- 289.8426148891449 seconds ---
Adv result:3
Loading record A00869
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0936 " + "l1=0.0936" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.822331  -3.5370712  3.941828  -8.832837 ]]
Iteration 100 of 1000: loss=0.0928 " + "l1=0.0924" + "l2=0.000438 f=-0.648 shape=(1, 9000, 1)
logits [[ 5.774642  -3.4627945  3.8817844 -8.786762 ]]
Iteration 200 of 1000: loss=0.0925 " + "l1=0.0919" + "l2=0.000511 f=-0.647 shape=(1, 9000, 1)
logits [[ 5.758541  -3.4362788  3.8595397 -8.768688 ]]
Iteration 300 of 1000: loss=0.0921 " + "l1=0.0914" + "l2=0.000686 f=-0.645 shape=(1, 9000, 1)
logits [[ 5.7391458 -3.4042206  3.8332806 -8.747774 ]]
Iteration 400 of 1000: loss=0.0918 " + "l1=0.0909" + "l2=0.000955 f=-0.643 shape=(1, 9000, 1)
logits [[ 5.7175765 -3.3698337  3.805663  -8.725629 ]]
Iteration 500 of 1000: loss=0.0915 " + "l1=0.0903" + "l2=0.00122 f=-0.641 shape=(1, 9000, 1)
logits [[ 5.6957583 -3.3365545  3.7792978 -8.703496 ]]
Iteration 600 of 1000: loss=0.0913 " + "l1=0.0898" + "l2=0.0015 f=-0.639 shape=(1, 9000, 1)
logits [[ 5.674784  -3.3051116  3.7548673 -8.682304 ]]
Iteration 700 of 1000: loss=0.0911 " + "l1=0.0893" + "l2=0.00173 f=-0.638 shape=(1, 9000, 1)
logits [[ 5.656427  -3.278033   3.7343655 -8.663408 ]]
Iteration 800 of 1000: loss=0.0908 " + "l1=0.0889" + "l2=0.00193 f=-0.636 shape=(1, 9000, 1)
logits [[ 5.6380005 -3.2525282  3.7154074 -8.645143 ]]
Iteration 900 of 1000: loss=0.0907 " + "l1=0.0885" + "l2=0.00223 f=-0.635 shape=(1, 9000, 1)
logits [[ 5.619604  -3.2291963  3.6982973 -8.627386 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.936 " + "l1=0.936" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.822331  -3.5370712  3.941828  -8.832837 ]]
Iteration 100 of 1000: loss=0.849 " + "l1=0.806" + "l2=0.0425 f=-0.62 shape=(1, 9000, 1)
logits [[ 5.307967  -2.7543879  3.315199  -8.350405 ]]
Iteration 200 of 1000: loss=0.799 " + "l1=0.739" + "l2=0.0602 f=-0.596 shape=(1, 9000, 1)
logits [[ 4.978868  -2.4101574  3.0795884 -8.030636 ]]
Iteration 300 of 1000: loss=0.76 " + "l1=0.688" + "l2=0.0716 f=-0.58 shape=(1, 9000, 1)
logits [[ 4.7327657 -2.146675   2.8872373 -7.792658 ]]
Iteration 400 of 1000: loss=0.732 " + "l1=0.652" + "l2=0.0797 f=-0.574 shape=(1, 9000, 1)
logits [[ 4.5722275 -1.9469776  2.7287657 -7.6486583]]
Iteration 500 of 1000: loss=0.708 " + "l1=0.62" + "l2=0.0875 f=-0.571 shape=(1, 9000, 1)
logits [[ 4.427054  -1.775792   2.5828092 -7.5171623]]
Iteration 600 of 1000: loss=0.68 " + "l1=0.582" + "l2=0.0982 f=-0.57 shape=(1, 9000, 1)
logits [[ 4.2498736 -1.5691327  2.4027839 -7.363856 ]]
Iteration 700 of 1000: loss=0.641 " + "l1=0.528" + "l2=0.113 f=-0.571 shape=(1, 9000, 1)
logits [[ 3.9609928 -1.3170186  2.1741068 -7.1029468]]
Iteration 800 of 1000: loss=0.613 " + "l1=0.495" + "l2=0.118 f=-0.565 shape=(1, 9000, 1)
logits [[ 3.747766  -1.2036476  2.058946  -6.863269 ]]
Iteration 900 of 1000: loss=0.595 " + "l1=0.469" + "l2=0.126 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.5944366 -1.0963584  1.9570361 -6.7015824]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.36 " + "l1=9.36" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.822331  -3.5370712  3.941828  -8.832837 ]]
Iteration 100 of 1000: loss=3.4 " + "l1=0.962" + "l2=2.43 f=-0.696 shape=(1, 9000, 1)
logits [[ 1.2859466  0.3237572  1.2549987 -5.6506896]]
Iteration 200 of 1000: loss=1.88 " + "l1=0.0168" + "l2=1.86 f=-0.728 shape=(1, 9000, 1)
logits [[ 0.8645716   0.87227404  0.88905    -5.5374246 ]]
Iteration 300 of 1000: loss=1.51 " + "l1=0.000889" + "l2=1.51 f=-0.707 shape=(1, 9000, 1)
logits [[ 0.84319043  0.8673635   0.868253   -5.4086537 ]]
Iteration 400 of 1000: loss=1.33 " + "l1=0" + "l2=1.33 f=-0.681 shape=(1, 9000, 1)
logits [[ 0.7893128   0.852588    0.84332985 -5.2110806 ]]
Iteration 500 of 1000: loss=1.2 " + "l1=0.00073" + "l2=1.19 f=-0.654 shape=(1, 9000, 1)
logits [[ 0.8058628  0.8199682  0.8206984 -5.061371 ]]
Iteration 600 of 1000: loss=1.12 " + "l1=0.0152" + "l2=1.1 f=-0.634 shape=(1, 9000, 1)
logits [[ 0.803789    0.7885398   0.80104786 -4.9302807 ]]
Iteration 700 of 1000: loss=1.05 " + "l1=0.0118" + "l2=1.03 f=-0.627 shape=(1, 9000, 1)
logits [[ 0.7466218  0.7753081  0.7870911 -4.818223 ]]
Iteration 800 of 1000: loss=0.967 " + "l1=0.00643" + "l2=0.961 f=-0.611 shape=(1, 9000, 1)
logits [[ 0.7301019  0.7467389  0.7531731 -4.674041 ]]
Iteration 900 of 1000: loss=0.888 " + "l1=0.0101" + "l2=0.878 f=-0.594 shape=(1, 9000, 1)
logits [[ 0.7124264  0.7174779  0.727566  -4.5321083]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.15 " + "l1=5.15" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.822331  -3.5370712  3.941828  -8.832837 ]]
Iteration 100 of 1000: loss=3.04 " + "l1=2.09" + "l2=0.957 f=-0.596 shape=(1, 9000, 1)
logits [[ 3.066033   -0.72873014  1.7885406  -6.5112557 ]]
Iteration 200 of 1000: loss=1.85 " + "l1=0.371" + "l2=1.47 f=-0.722 shape=(1, 9000, 1)
logits [[ 1.174222   0.5124806  1.1876894 -5.762982 ]]
Iteration 300 of 1000: loss=1.35 " + "l1=0.116" + "l2=1.24 f=-0.711 shape=(1, 9000, 1)
logits [[ 0.9469954  0.765975   0.9775031 -5.5348735]]
Iteration 400 of 1000: loss=1.14 " + "l1=0.0302" + "l2=1.11 f=-0.685 shape=(1, 9000, 1)
logits [[ 0.86889315  0.8269956   0.8818789  -5.3193107 ]]
Iteration 500 of 1000: loss=1.01 " + "l1=0.00625" + "l2=1 f=-0.662 shape=(1, 9000, 1)
logits [[ 0.817883    0.8218542   0.83321244 -5.1216044 ]]
Iteration 600 of 1000: loss=0.918 " + "l1=0.00877" + "l2=0.909 f=-0.644 shape=(1, 9000, 1)
logits [[ 0.7491031  0.8018518  0.817805  -4.9463162]]
Iteration 700 of 1000: loss=0.83 " + "l1=0" + "l2=0.83 f=-0.622 shape=(1, 9000, 1)
logits [[ 0.71596813  0.7693593   0.7631608  -4.737491  ]]
Iteration 800 of 1000: loss=0.752 " + "l1=0.00387" + "l2=0.748 f=-0.597 shape=(1, 9000, 1)
logits [[ 0.7054595   0.7170262   0.72405654 -4.5332074 ]]
Iteration 900 of 1000: loss=0.693 " + "l1=0.00506" + "l2=0.688 f=-0.573 shape=(1, 9000, 1)
logits [[ 0.6794973   0.68406796  0.693263   -4.3497686 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.04 " + "l1=3.04" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.822331  -3.5370712  3.941828  -8.832837 ]]
Iteration 100 of 1000: loss=2.19 " + "l1=1.77" + "l2=0.427 f=-0.572 shape=(1, 9000, 1)
logits [[ 4.020926  -1.4176577  2.3296738 -7.220627 ]]
Iteration 200 of 1000: loss=1.84 " + "l1=1.32" + "l2=0.524 f=-0.582 shape=(1, 9000, 1)
logits [[ 3.2717144 -0.7854809  1.8159957 -6.6318464]]
Iteration 300 of 1000: loss=1.54 " + "l1=0.861" + "l2=0.678 f=-0.612 shape=(1, 9000, 1)
logits [[ 2.4322886  -0.21601103  1.3787186  -6.041285  ]]
Iteration 400 of 1000: loss=1.21 " + "l1=0.269" + "l2=0.937 f=-0.696 shape=(1, 9000, 1)
logits [[ 1.224032    0.40376276  1.2324513  -5.645176  ]]
Iteration 500 of 1000: loss=1 " + "l1=0.194" + "l2=0.807 f=-0.678 shape=(1, 9000, 1)
logits [[ 1.1195562  0.5214357  1.0944606 -5.4467425]]
Iteration 600 of 1000: loss=0.888 " + "l1=0.161" + "l2=0.727 f=-0.658 shape=(1, 9000, 1)
logits [[ 1.0350417  0.543339   1.0384377 -5.247891 ]]
Iteration 700 of 1000: loss=0.824 " + "l1=0.14" + "l2=0.684 f=-0.639 shape=(1, 9000, 1)
logits [[ 0.9630057  0.5493794  0.9790867 -5.049403 ]]
Iteration 800 of 1000: loss=0.766 " + "l1=0.121" + "l2=0.644 f=-0.618 shape=(1, 9000, 1)
logits [[ 0.9113006   0.54407316  0.9175103  -4.8456464 ]]
Iteration 900 of 1000: loss=0.706 " + "l1=0.0963" + "l2=0.61 f=-0.587 shape=(1, 9000, 1)
logits [[ 0.8250045   0.5479781   0.84418374 -4.5631995 ]]
--- 313.7391059398651 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0188 " + "l1=0.0188" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.822331  -3.5370712  3.941828  -8.832837 ]]
Iteration 100 of 1000: loss=0.0185 " + "l1=0.0183" + "l2=0.00021 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.804616  -3.5618477  3.970899  -8.817423 ]]
Iteration 200 of 1000: loss=0.0185 " + "l1=0.0183" + "l2=0.00019 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.8038816 -3.567757   3.9764354 -8.816791 ]]
Iteration 300 of 1000: loss=0.0184 " + "l1=0.0182" + "l2=0.000219 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.8014507 -3.5745587  3.9835238 -8.815204 ]]
Iteration 400 of 1000: loss=0.0184 " + "l1=0.0181" + "l2=0.000287 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.798291  -3.5807762  3.9902337 -8.813058 ]]
Iteration 500 of 1000: loss=0.0183 " + "l1=0.018" + "l2=0.000338 f=-0.652 shape=(1, 9000, 1)
logits [[ 5.794587  -3.5859554  3.9958875 -8.810549 ]]
Iteration 600 of 1000: loss=0.0183 " + "l1=0.0179" + "l2=0.000437 f=-0.652 shape=(1, 9000, 1)
logits [[ 5.7905445 -3.5903084  4.0007935 -8.807837 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.188 " + "l1=0.188" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.822331  -3.5370712  3.941828  -8.832837 ]]
Iteration 100 of 1000: loss=0.166 " + "l1=0.156" + "l2=0.0104 f=-0.649 shape=(1, 9000, 1)
logits [[ 5.6953683 -3.7087152  4.1394076 -8.72147  ]]
Iteration 200 of 1000: loss=0.155 " + "l1=0.14" + "l2=0.0153 f=-0.647 shape=(1, 9000, 1)
logits [[ 5.622494  -3.7825334  4.2265368 -8.652862 ]]
Iteration 300 of 1000: loss=0.143 " + "l1=0.122" + "l2=0.0212 f=-0.645 shape=(1, 9000, 1)
logits [[ 5.5228467 -3.8390298  4.300629  -8.5644655]]
Iteration 400 of 1000: loss=0.132 " + "l1=0.104" + "l2=0.0277 f=-0.643 shape=(1, 9000, 1)
logits [[ 5.412357 -3.88321   4.368416 -8.469636]]
Iteration 500 of 1000: loss=0.123 " + "l1=0.0899" + "l2=0.033 f=-0.646 shape=(1, 9000, 1)
logits [[ 5.3105154 -3.9183757  4.4119115 -8.388919 ]]
Iteration 600 of 1000: loss=0.116 " + "l1=0.0793" + "l2=0.0363 f=-0.647 shape=(1, 9000, 1)
logits [[ 5.2271724 -3.9297059  4.4341445 -8.3211975]]
Iteration 700 of 1000: loss=0.11 " + "l1=0.0713" + "l2=0.0386 f=-0.648 shape=(1, 9000, 1)
logits [[ 5.16048   -3.9332972  4.4474015 -8.267803 ]]
Iteration 800 of 1000: loss=0.105 " + "l1=0.0647" + "l2=0.0404 f=-0.649 shape=(1, 9000, 1)
logits [[ 5.0994663 -3.9311028  4.452916  -8.21731  ]]
Iteration 900 of 1000: loss=0.101 " + "l1=0.0588" + "l2=0.042 f=-0.65 shape=(1, 9000, 1)
logits [[ 5.04532  -3.930363  4.457351 -8.173339]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.88 " + "l1=1.88" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.822331  -3.5370712  3.941828  -8.832837 ]]
Iteration 100 of 1000: loss=0.301 " + "l1=0.000871" + "l2=0.3 f=-0.638 shape=(1, 9000, 1)
logits [[ 4.7298493 -4.144759   4.7289786 -7.8641157]]
Iteration 200 of 1000: loss=0.207 " + "l1=0" + "l2=0.207 f=-0.639 shape=(1, 9000, 1)
logits [[ 4.708917  -4.154214   4.740458  -7.8508105]]
Iteration 300 of 1000: loss=0.164 " + "l1=0.00747" + "l2=0.157 f=-0.641 shape=(1, 9000, 1)
logits [[ 4.7275233 -4.134122   4.72005   -7.877489 ]]
Iteration 400 of 1000: loss=0.14 " + "l1=0" + "l2=0.14 f=-0.642 shape=(1, 9000, 1)
logits [[ 4.701921  -4.125031   4.7158833 -7.860283 ]]
Iteration 500 of 1000: loss=0.125 " + "l1=0" + "l2=0.125 f=-0.643 shape=(1, 9000, 1)
logits [[ 4.687076  -4.1099324  4.702821  -7.8521857]]
Iteration 600 of 1000: loss=0.113 " + "l1=0" + "l2=0.113 f=-0.644 shape=(1, 9000, 1)
logits [[ 4.6699343 -4.0898275  4.681767  -7.8395977]]
Iteration 700 of 1000: loss=0.103 " + "l1=0" + "l2=0.103 f=-0.647 shape=(1, 9000, 1)
logits [[ 4.650589  -4.072029   4.6582184 -7.8236184]]
Iteration 800 of 1000: loss=0.0957 " + "l1=0.00192" + "l2=0.0938 f=-0.648 shape=(1, 9000, 1)
logits [[ 4.633283  -4.050335   4.6313634 -7.8075495]]
Iteration 900 of 1000: loss=0.0897 " + "l1=0" + "l2=0.0897 f=-0.649 shape=(1, 9000, 1)
logits [[ 4.6026053 -4.036353   4.615947  -7.7799273]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.03 " + "l1=1.03" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.822331  -3.5370712  3.941828  -8.832837 ]]
Iteration 100 of 1000: loss=0.318 " + "l1=0.00977" + "l2=0.308 f=-0.642 shape=(1, 9000, 1)
logits [[ 4.755932  -4.1639376  4.7381744 -7.896662 ]]
Iteration 200 of 1000: loss=0.186 " + "l1=0.00293" + "l2=0.183 f=-0.638 shape=(1, 9000, 1)
logits [[ 4.7408757 -4.1558304  4.7355485 -7.8738728]]
Iteration 300 of 1000: loss=0.148 " + "l1=0.00244" + "l2=0.146 f=-0.64 shape=(1, 9000, 1)
logits [[ 4.7311573 -4.142274   4.726726  -7.8752737]]
Iteration 400 of 1000: loss=0.127 " + "l1=0" + "l2=0.127 f=-0.641 shape=(1, 9000, 1)
logits [[ 4.70644   -4.1236744  4.7110944 -7.858775 ]]
Iteration 500 of 1000: loss=0.113 " + "l1=0" + "l2=0.113 f=-0.643 shape=(1, 9000, 1)
logits [[ 4.688707  -4.1018224  4.6898966 -7.85049  ]]
Iteration 600 of 1000: loss=0.107 " + "l1=0" + "l2=0.107 f=-0.646 shape=(1, 9000, 1)
logits [[ 4.6532145 -4.089117   4.6755404 -7.8225503]]
Iteration 700 of 1000: loss=0.0971 " + "l1=0" + "l2=0.0971 f=-0.647 shape=(1, 9000, 1)
logits [[ 4.628008  -4.062596   4.642276  -7.7963543]]
Iteration 800 of 1000: loss=0.0879 " + "l1=0" + "l2=0.0879 f=-0.648 shape=(1, 9000, 1)
logits [[ 4.6058826 -4.0340743  4.6071744 -7.77267  ]]
Iteration 900 of 1000: loss=0.0844 " + "l1=0" + "l2=0.0844 f=-0.649 shape=(1, 9000, 1)
logits [[ 4.5687013 -4.017261   4.586756  -7.7358394]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.611 " + "l1=0.611" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.822331  -3.5370712  3.941828  -8.832837 ]]
Iteration 100 of 1000: loss=0.357 " + "l1=0.24" + "l2=0.117 f=-0.645 shape=(1, 9000, 1)
logits [[ 5.2356453 -3.9941773  4.4966087 -8.318123 ]]
Iteration 200 of 1000: loss=0.214 " + "l1=0.0392" + "l2=0.175 f=-0.642 shape=(1, 9000, 1)
logits [[ 4.8361597 -4.154957   4.7155123 -7.963378 ]]
Iteration 300 of 1000: loss=0.15 " + "l1=0.0015" + "l2=0.149 f=-0.641 shape=(1, 9000, 1)
logits [[ 4.7511168 -4.1640835  4.7465158 -7.8972745]]
Iteration 400 of 1000: loss=0.127 " + "l1=0.0041" + "l2=0.123 f=-0.643 shape=(1, 9000, 1)
logits [[ 4.731241  -4.1304893  4.718632  -7.8894744]]
Iteration 500 of 1000: loss=0.112 " + "l1=0.00132" + "l2=0.111 f=-0.644 shape=(1, 9000, 1)
logits [[ 4.6999784 -4.108133   4.695929  -7.864377 ]]
Iteration 600 of 1000: loss=0.103 " + "l1=0.00138" + "l2=0.101 f=-0.646 shape=(1, 9000, 1)
logits [[ 4.6679573 -4.078317   4.663706  -7.837716 ]]
Iteration 700 of 1000: loss=0.094 " + "l1=0.000219" + "l2=0.0938 f=-0.647 shape=(1, 9000, 1)
logits [[ 4.6317625 -4.052716   4.6310897 -7.79996  ]]
Iteration 800 of 1000: loss=0.0881 " + "l1=0.00193" + "l2=0.0861 f=-0.648 shape=(1, 9000, 1)
logits [[ 4.6057844 -4.026393   4.59985   -7.7721314]]
Iteration 900 of 1000: loss=0.0823 " + "l1=0.00217" + "l2=0.0802 f=-0.649 shape=(1, 9000, 1)
logits [[ 4.57567   -4.000727   4.568982  -7.7396564]]
--- 289.6074569225311 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.147 " + "l1=0.147" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.822331  -3.5370712  3.941828  -8.832837 ]]
Iteration 100 of 1000: loss=0.146 " + "l1=0.145" + "l2=0.000445 f=-0.649 shape=(1, 9000, 1)
logits [[ 5.7623224 -3.5054793  3.9071167 -8.7582855]]
Iteration 200 of 1000: loss=0.145 " + "l1=0.145" + "l2=0.000529 f=-0.647 shape=(1, 9000, 1)
logits [[ 5.7437596 -3.491849   3.8934157 -8.7351885]]
Iteration 300 of 1000: loss=0.145 " + "l1=0.144" + "l2=0.000709 f=-0.646 shape=(1, 9000, 1)
logits [[ 5.721791  -3.4758284  3.8776536 -8.708043 ]]
Iteration 400 of 1000: loss=0.145 " + "l1=0.144" + "l2=0.000914 f=-0.645 shape=(1, 9000, 1)
logits [[ 5.6982226 -3.4577754  3.8601625 -8.679602 ]]
Iteration 500 of 1000: loss=0.144 " + "l1=0.143" + "l2=0.00113 f=-0.643 shape=(1, 9000, 1)
logits [[ 5.6753135 -3.4405012  3.8437195 -8.652367 ]]
Iteration 600 of 1000: loss=0.144 " + "l1=0.143" + "l2=0.00134 f=-0.642 shape=(1, 9000, 1)
logits [[ 5.651866  -3.4241388  3.828344  -8.62482  ]]
Iteration 700 of 1000: loss=0.144 " + "l1=0.142" + "l2=0.00165 f=-0.641 shape=(1, 9000, 1)
logits [[ 5.6282763 -3.407745   3.8131428 -8.597638 ]]
Iteration 800 of 1000: loss=0.144 " + "l1=0.142" + "l2=0.00182 f=-0.64 shape=(1, 9000, 1)
logits [[ 5.604496  -3.3932166  3.7999096 -8.570852 ]]
Iteration 900 of 1000: loss=0.143 " + "l1=0.141" + "l2=0.00209 f=-0.639 shape=(1, 9000, 1)
logits [[ 5.5794663 -3.378355   3.7868207 -8.543174 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.47 " + "l1=1.47" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.822331  -3.5370712  3.941828  -8.832837 ]]
Iteration 100 of 1000: loss=1.37 " + "l1=1.32" + "l2=0.0462 f=-0.617 shape=(1, 9000, 1)
logits [[ 5.1551385 -3.0939865  3.510944  -8.040642 ]]
Iteration 200 of 1000: loss=1.3 " + "l1=1.23" + "l2=0.0714 f=-0.593 shape=(1, 9000, 1)
logits [[ 4.7450504 -2.9010398  3.3284674 -7.54379  ]]
Iteration 300 of 1000: loss=1.25 " + "l1=1.15" + "l2=0.1 f=-0.573 shape=(1, 9000, 1)
logits [[ 4.3801494 -2.7303138  3.1536484 -7.09392  ]]
Iteration 400 of 1000: loss=1.21 " + "l1=1.09" + "l2=0.116 f=-0.561 shape=(1, 9000, 1)
logits [[ 4.1446915 -2.6239436  3.0116909 -6.7752705]]
Iteration 500 of 1000: loss=1.17 " + "l1=1.03" + "l2=0.134 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.8942387 -2.5108547  2.847553  -6.4285474]]
Iteration 600 of 1000: loss=1.12 " + "l1=0.965" + "l2=0.151 f=-0.543 shape=(1, 9000, 1)
logits [[ 3.6048963 -2.3880982  2.650969  -6.041572 ]]
Iteration 700 of 1000: loss=1.07 " + "l1=0.91" + "l2=0.164 f=-0.534 shape=(1, 9000, 1)
logits [[ 3.3816555 -2.290084   2.489855  -5.7191753]]
Iteration 800 of 1000: loss=1.03 " + "l1=0.853" + "l2=0.173 f=-0.523 shape=(1, 9000, 1)
logits [[ 3.1483972 -2.1796193  2.320647  -5.3794928]]
Iteration 900 of 1000: loss=0.977 " + "l1=0.793" + "l2=0.184 f=-0.505 shape=(1, 9000, 1)
logits [[ 2.9062567 -2.0471764  2.143995  -5.0227375]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=14.7 " + "l1=14.7" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.822331  -3.5370712  3.941828  -8.832837 ]]
Iteration 100 of 1000: loss=6.93 " + "l1=3.82" + "l2=3.11 f=-0.393 shape=(1, 9000, 1)
logits [[ 1.0620837  -0.95662826  1.0703275  -2.7491739 ]]
Iteration 200 of 1000: loss=4.2 " + "l1=0.559" + "l2=3.64 f=-0.237 shape=(1, 9000, 1)
logits [[-0.09263318 -0.29864603  0.0009827  -0.55774504]]
Iteration 300 of 1000: loss=3.12 " + "l1=0.0322" + "l2=3.08 f=-0.182 shape=(1, 9000, 1)
logits [[-0.22765696 -0.2542882  -0.10765466 -0.13984129]]
Iteration 400 of 1000: loss=2.62 " + "l1=0" + "l2=2.62 f=-0.174 shape=(1, 9000, 1)
logits [[-0.19691908 -0.257789   -0.12979439 -0.11151913]]
Iteration 500 of 1000: loss=2.25 " + "l1=0.0416" + "l2=2.21 f=-0.166 shape=(1, 9000, 1)
logits [[-0.12835327 -0.2630912  -0.11508878 -0.15668651]]
Iteration 600 of 1000: loss=1.95 " + "l1=0.00979" + "l2=1.94 f=-0.163 shape=(1, 9000, 1)
logits [[-0.12612928 -0.2992574  -0.10887522 -0.11866064]]
Iteration 700 of 1000: loss=1.76 " + "l1=0" + "l2=1.76 f=-0.166 shape=(1, 9000, 1)
logits [[-0.14714299 -0.30449072 -0.10965896 -0.10087924]]
Iteration 800 of 1000: loss=1.63 " + "l1=0" + "l2=1.63 f=-0.168 shape=(1, 9000, 1)
logits [[-0.14199679 -0.32817042 -0.10825875 -0.09362321]]
Iteration 900 of 1000: loss=1.52 " + "l1=0" + "l2=1.52 f=-0.171 shape=(1, 9000, 1)
logits [[-0.12331785 -0.34734553 -0.11375871 -0.10112167]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=8.06 " + "l1=8.06" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.822331  -3.5370712  3.941828  -8.832837 ]]
Iteration 100 of 1000: loss=5.21 " + "l1=3.68" + "l2=1.53 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.2498398 -1.7303535  2.0782015 -4.4425635]]
Iteration 200 of 1000: loss=3.94 " + "l1=2.16" + "l2=1.78 f=-0.393 shape=(1, 9000, 1)
logits [[ 1.1488249 -1.1053284  1.1560299 -2.7711058]]
Iteration 300 of 1000: loss=2.89 " + "l1=0.996" + "l2=1.9 f=-0.315 shape=(1, 9000, 1)
logits [[ 0.31898513 -0.47105876  0.35161945 -1.4595442 ]]
Iteration 400 of 1000: loss=2.25 " + "l1=0.386" + "l2=1.87 f=-0.225 shape=(1, 9000, 1)
logits [[-0.03500848 -0.29964498  0.06898512 -0.63354164]]
Iteration 500 of 1000: loss=1.76 " + "l1=0.0179" + "l2=1.74 f=-0.187 shape=(1, 9000, 1)
logits [[-0.26734275 -0.20709714 -0.1213873  -0.15399235]]
Iteration 600 of 1000: loss=1.43 " + "l1=0.00674" + "l2=1.43 f=-0.179 shape=(1, 9000, 1)
logits [[-0.21905646 -0.29929924 -0.09184312 -0.10409837]]
Iteration 700 of 1000: loss=1.24 " + "l1=0" + "l2=1.24 f=-0.18 shape=(1, 9000, 1)
logits [[-0.21837613 -0.34028897 -0.09077995 -0.0707699 ]]
Iteration 800 of 1000: loss=1.08 " + "l1=0" + "l2=1.08 f=-0.187 shape=(1, 9000, 1)
logits [[-0.20302916 -0.40415394 -0.07543942 -0.06587297]]
Iteration 900 of 1000: loss=0.971 " + "l1=0.0127" + "l2=0.958 f=-0.197 shape=(1, 9000, 1)
logits [[-0.16897203 -0.47697228 -0.06016885 -0.08318683]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.76 " + "l1=4.76" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.822331  -3.5370712  3.941828  -8.832837 ]]
Iteration 100 of 1000: loss=3.72 " + "l1=3.18" + "l2=0.542 f=-0.534 shape=(1, 9000, 1)
logits [[ 3.5973809 -2.2701826  2.7108755 -6.1757364]]
Iteration 200 of 1000: loss=3.12 " + "l1=2.38" + "l2=0.74 f=-0.486 shape=(1, 9000, 1)
logits [[ 2.5639274 -1.9111056  2.160685  -4.75689  ]]
Iteration 300 of 1000: loss=2.65 " + "l1=1.69" + "l2=0.956 f=-0.445 shape=(1, 9000, 1)
logits [[ 1.6501845 -1.5178623  1.6450193 -3.559159 ]]
Iteration 400 of 1000: loss=2.17 " + "l1=1.17" + "l2=0.996 f=-0.405 shape=(1, 9000, 1)
logits [[ 1.017337  -1.0870538  1.0261577 -2.5753634]]
Iteration 500 of 1000: loss=1.84 " + "l1=0.904" + "l2=0.938 f=-0.367 shape=(1, 9000, 1)
logits [[ 0.7099608 -0.8305611  0.7169809 -2.0655591]]
Iteration 600 of 1000: loss=1.55 " + "l1=0.634" + "l2=0.917 f=-0.335 shape=(1, 9000, 1)
logits [[ 0.40272096 -0.6314729   0.4203517  -1.5298651 ]]
Iteration 700 of 1000: loss=1.3 " + "l1=0.429" + "l2=0.873 f=-0.303 shape=(1, 9000, 1)
logits [[ 0.15355274 -0.5390878   0.24639483 -1.0740255 ]]
Iteration 800 of 1000: loss=1.04 " + "l1=0.164" + "l2=0.879 f=-0.244 shape=(1, 9000, 1)
logits [[-0.09607752 -0.49227983  0.05760313 -0.44561237]]
Iteration 900 of 1000: loss=0.843 " + "l1=0.00999" + "l2=0.833 f=-0.202 shape=(1, 9000, 1)
logits [[-0.17229588 -0.55710787 -0.02455988 -0.05528972]]
--- 313.04102873802185 seconds ---
Adv result:3
Loading record A00873
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0698 " + "l1=0.0698" + "l2=0 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.43706   -2.5429802  2.3677602 -7.2673726]]
Iteration 100 of 1000: loss=0.0692 " + "l1=0.0688" + "l2=0.000415 f=-0.748 shape=(1, 9000, 1)
logits [[ 4.384055  -2.493413   2.3358843 -7.2182865]]
Iteration 200 of 1000: loss=0.069 " + "l1=0.0686" + "l2=0.000434 f=-0.747 shape=(1, 9000, 1)
logits [[ 4.375552  -2.4828508  2.3298254 -7.210389 ]]
Iteration 300 of 1000: loss=0.0689 " + "l1=0.0683" + "l2=0.000563 f=-0.746 shape=(1, 9000, 1)
logits [[ 4.364406  -2.4699214  2.3221295 -7.2001157]]
Iteration 400 of 1000: loss=0.0688 " + "l1=0.0681" + "l2=0.000683 f=-0.745 shape=(1, 9000, 1)
logits [[ 4.354275  -2.4580278  2.3148952 -7.190911 ]]
Iteration 500 of 1000: loss=0.0688 " + "l1=0.0679" + "l2=0.00082 f=-0.744 shape=(1, 9000, 1)
logits [[ 4.3455467 -2.4475524  2.3085158 -7.1830335]]
Iteration 600 of 1000: loss=0.0687 " + "l1=0.0678" + "l2=0.000945 f=-0.743 shape=(1, 9000, 1)
logits [[ 4.337785  -2.4384346  2.3030941 -7.176195 ]]
Iteration 700 of 1000: loss=0.0687 " + "l1=0.0676" + "l2=0.00107 f=-0.743 shape=(1, 9000, 1)
logits [[ 4.331034  -2.4302557  2.2982762 -7.170354 ]]
Iteration 800 of 1000: loss=0.0687 " + "l1=0.0675" + "l2=0.00122 f=-0.742 shape=(1, 9000, 1)
logits [[ 4.3260674 -2.4237213  2.2946699 -7.1661053]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.698 " + "l1=0.698" + "l2=0 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.43706   -2.5429802  2.3677602 -7.2673726]]
Iteration 100 of 1000: loss=0.642 " + "l1=0.614" + "l2=0.0285 f=-0.725 shape=(1, 9000, 1)
logits [[ 4.0165796 -2.1201584  2.09436   -6.8924236]]
Iteration 200 of 1000: loss=0.617 " + "l1=0.575" + "l2=0.0421 f=-0.718 shape=(1, 9000, 1)
logits [[ 3.8137918 -1.9362005  1.979614  -6.7272434]]
Iteration 300 of 1000: loss=0.598 " + "l1=0.541" + "l2=0.0565 f=-0.712 shape=(1, 9000, 1)
logits [[ 3.6257634 -1.7856807  1.8870032 -6.5762367]]
Iteration 400 of 1000: loss=0.581 " + "l1=0.509" + "l2=0.0717 f=-0.708 shape=(1, 9000, 1)
logits [[ 3.4476273 -1.6449425  1.8050824 -6.438346 ]]
Iteration 500 of 1000: loss=0.565 " + "l1=0.485" + "l2=0.0807 f=-0.705 shape=(1, 9000, 1)
logits [[ 3.3001144 -1.5468652  1.7551017 -6.327678 ]]
Iteration 600 of 1000: loss=0.55 " + "l1=0.46" + "l2=0.0899 f=-0.701 shape=(1, 9000, 1)
logits [[ 3.1503866 -1.4509678  1.7093155 -6.2133937]]
Iteration 700 of 1000: loss=0.534 " + "l1=0.436" + "l2=0.0978 f=-0.695 shape=(1, 9000, 1)
logits [[ 3.0103328 -1.3475266  1.6555372 -6.099372 ]]
Iteration 800 of 1000: loss=0.517 " + "l1=0.409" + "l2=0.108 f=-0.688 shape=(1, 9000, 1)
logits [[ 2.859736  -1.2299801  1.5968716 -5.978365 ]]
Iteration 900 of 1000: loss=0.501 " + "l1=0.388" + "l2=0.113 f=-0.684 shape=(1, 9000, 1)
logits [[ 2.7333124 -1.1476827  1.5656444 -5.8857236]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.98 " + "l1=6.98" + "l2=0 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.43706   -2.5429802  2.3677602 -7.2673726]]
Iteration 100 of 1000: loss=2.38 " + "l1=0.572" + "l2=1.81 f=-0.707 shape=(1, 9000, 1)
logits [[ 0.80949116  0.24421395  0.8166971  -4.699736  ]]
Iteration 200 of 1000: loss=1.5 " + "l1=0" + "l2=1.5 f=-0.71 shape=(1, 9000, 1)
logits [[ 0.55363196  0.6020809   0.5922609  -4.5885344 ]]
Iteration 300 of 1000: loss=1.23 " + "l1=0" + "l2=1.23 f=-0.703 shape=(1, 9000, 1)
logits [[ 0.55913347  0.60156333  0.5943623  -4.565152  ]]
Iteration 400 of 1000: loss=1.08 " + "l1=0" + "l2=1.08 f=-0.692 shape=(1, 9000, 1)
logits [[ 0.5626699  0.6036689  0.5977411 -4.5326653]]
Iteration 500 of 1000: loss=0.964 " + "l1=0" + "l2=0.964 f=-0.694 shape=(1, 9000, 1)
logits [[ 0.56296885  0.6152135   0.6044006  -4.5598083 ]]
Iteration 600 of 1000: loss=0.889 " + "l1=0.00775" + "l2=0.881 f=-0.694 shape=(1, 9000, 1)
logits [[ 0.5890224   0.6053049   0.61305815 -4.584205  ]]
Iteration 700 of 1000: loss=0.828 " + "l1=0" + "l2=0.828 f=-0.695 shape=(1, 9000, 1)
logits [[ 0.591669    0.62246835  0.61222506 -4.6077414 ]]
Iteration 800 of 1000: loss=0.773 " + "l1=0.00331" + "l2=0.77 f=-0.692 shape=(1, 9000, 1)
logits [[ 0.5983707   0.6155347   0.61884373 -4.602338  ]]
Iteration 900 of 1000: loss=0.733 " + "l1=0" + "l2=0.733 f=-0.686 shape=(1, 9000, 1)
logits [[ 0.6017939  0.6185924  0.613214  -4.576813 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.84 " + "l1=3.84" + "l2=0 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.43706   -2.5429802  2.3677602 -7.2673726]]
Iteration 100 of 1000: loss=2.19 " + "l1=1.24" + "l2=0.948 f=-0.703 shape=(1, 9000, 1)
logits [[ 1.6801171 -0.5762273  1.2613496 -5.1783895]]
Iteration 200 of 1000: loss=1.47 " + "l1=0.406" + "l2=1.07 f=-0.701 shape=(1, 9000, 1)
logits [[ 0.8879968   0.15646453  0.89435655 -4.7431583 ]]
Iteration 300 of 1000: loss=1.18 " + "l1=0.175" + "l2=1.01 f=-0.702 shape=(1, 9000, 1)
logits [[ 0.7207233  0.4144129  0.733034  -4.674792 ]]
Iteration 400 of 1000: loss=0.962 " + "l1=0.0387" + "l2=0.924 f=-0.703 shape=(1, 9000, 1)
logits [[ 0.6103341  0.5711336  0.6414357 -4.6346827]]
Iteration 500 of 1000: loss=0.811 " + "l1=0.0114" + "l2=0.8 f=-0.702 shape=(1, 9000, 1)
logits [[ 0.61460817  0.5939147   0.60910445 -4.6236587 ]]
Iteration 600 of 1000: loss=0.691 " + "l1=0.00857" + "l2=0.683 f=-0.702 shape=(1, 9000, 1)
logits [[ 0.62259054  0.60700583  0.614458   -4.650876  ]]
Iteration 700 of 1000: loss=0.592 " + "l1=0" + "l2=0.592 f=-0.706 shape=(1, 9000, 1)
logits [[ 0.59543264  0.6205536   0.6191901  -4.658578  ]]
Iteration 800 of 1000: loss=0.55 " + "l1=0.00231" + "l2=0.548 f=-0.699 shape=(1, 9000, 1)
logits [[ 0.6123065  0.6158262  0.6200294 -4.643901 ]]
Iteration 900 of 1000: loss=0.525 " + "l1=0" + "l2=0.525 f=-0.693 shape=(1, 9000, 1)
logits [[ 0.569842    0.62831795  0.6209822  -4.5920224 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.27 " + "l1=2.27" + "l2=0 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.43706   -2.5429802  2.3677602 -7.2673726]]
Iteration 100 of 1000: loss=1.68 " + "l1=1.35" + "l2=0.325 f=-0.704 shape=(1, 9000, 1)
logits [[ 2.8776727 -1.2842491  1.5733088 -5.9846587]]
Iteration 200 of 1000: loss=1.34 " + "l1=0.827" + "l2=0.518 f=-0.69 shape=(1, 9000, 1)
logits [[ 1.9132965  -0.63155353  1.2459449  -5.286145  ]]
Iteration 300 of 1000: loss=1.05 " + "l1=0.419" + "l2=0.63 f=-0.69 shape=(1, 9000, 1)
logits [[ 1.1151829  -0.17298988  1.1138985  -4.817747  ]]
Iteration 400 of 1000: loss=0.903 " + "l1=0.337" + "l2=0.566 f=-0.682 shape=(1, 9000, 1)
logits [[ 1.0218376  -0.01529023  1.0224695  -4.755778  ]]
Iteration 500 of 1000: loss=0.801 " + "l1=0.254" + "l2=0.547 f=-0.669 shape=(1, 9000, 1)
logits [[ 0.91977274  0.1484642   0.9290369  -4.671922  ]]
Iteration 600 of 1000: loss=0.743 " + "l1=0.227" + "l2=0.516 f=-0.663 shape=(1, 9000, 1)
logits [[ 0.8921733   0.19309339  0.8866408  -4.6235805 ]]
Iteration 700 of 1000: loss=0.687 " + "l1=0.194" + "l2=0.493 f=-0.667 shape=(1, 9000, 1)
logits [[ 0.8361287  0.248447   0.8439058 -4.5979147]]
Iteration 800 of 1000: loss=0.592 " + "l1=0.122" + "l2=0.469 f=-0.687 shape=(1, 9000, 1)
logits [[ 0.7405479   0.38249168  0.7589367  -4.6317935 ]]
Iteration 900 of 1000: loss=0.52 " + "l1=0.0716" + "l2=0.448 f=-0.692 shape=(1, 9000, 1)
logits [[ 0.67430216  0.48300654  0.70339876 -4.629448  ]]
--- 301.6948506832123 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0207 " + "l1=0.0207" + "l2=0 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.43706   -2.5429802  2.3677602 -7.2673726]]
Iteration 100 of 1000: loss=0.0205 " + "l1=0.0203" + "l2=0.000204 f=-0.753 shape=(1, 9000, 1)
logits [[ 4.4051423 -2.5493672  2.3759873 -7.2435937]]
Iteration 200 of 1000: loss=0.0204 " + "l1=0.0203" + "l2=0.00016 f=-0.753 shape=(1, 9000, 1)
logits [[ 4.40476   -2.5497987  2.3762321 -7.243295 ]]
Iteration 300 of 1000: loss=0.0204 " + "l1=0.0202" + "l2=0.000191 f=-0.753 shape=(1, 9000, 1)
logits [[ 4.4014125 -2.551005   2.3772666 -7.240916 ]]
Iteration 400 of 1000: loss=0.0204 " + "l1=0.0202" + "l2=0.000235 f=-0.754 shape=(1, 9000, 1)
logits [[ 4.397589  -2.5524018  2.3784714 -7.2382364]]
Iteration 500 of 1000: loss=0.0204 " + "l1=0.0201" + "l2=0.000276 f=-0.754 shape=(1, 9000, 1)
logits [[ 4.3937764 -2.5537567  2.3796165 -7.2356315]]
Iteration 600 of 1000: loss=0.0204 " + "l1=0.0201" + "l2=0.000354 f=-0.754 shape=(1, 9000, 1)
logits [[ 4.3902726 -2.5552127  2.3808897 -7.233298 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.207 " + "l1=0.207" + "l2=0 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.43706   -2.5429802  2.3677602 -7.2673726]]
Iteration 100 of 1000: loss=0.19 " + "l1=0.18" + "l2=0.00944 f=-0.765 shape=(1, 9000, 1)
logits [[ 4.232993 -2.595037  2.429621 -7.125916]]
Iteration 200 of 1000: loss=0.184 " + "l1=0.171" + "l2=0.0129 f=-0.769 shape=(1, 9000, 1)
logits [[ 4.1529303 -2.6043322  2.44189   -7.0649357]]
Iteration 300 of 1000: loss=0.179 " + "l1=0.163" + "l2=0.0163 f=-0.772 shape=(1, 9000, 1)
logits [[ 4.079889  -2.6140308  2.4533257 -7.0073476]]
Iteration 400 of 1000: loss=0.174 " + "l1=0.154" + "l2=0.0196 f=-0.776 shape=(1, 9000, 1)
logits [[ 4.006738  -2.6225712  2.4631016 -6.9510365]]
Iteration 500 of 1000: loss=0.169 " + "l1=0.146" + "l2=0.0228 f=-0.78 shape=(1, 9000, 1)
logits [[ 3.9335792 -2.6313143  2.4731817 -6.897328 ]]
Iteration 600 of 1000: loss=0.164 " + "l1=0.138" + "l2=0.0262 f=-0.785 shape=(1, 9000, 1)
logits [[ 3.8651242 -2.6451538  2.4887242 -6.847435 ]]
Iteration 700 of 1000: loss=0.159 " + "l1=0.13" + "l2=0.0292 f=-0.787 shape=(1, 9000, 1)
logits [[ 3.7993236 -2.6511497  2.502927  -6.799784 ]]
Iteration 800 of 1000: loss=0.154 " + "l1=0.122" + "l2=0.032 f=-0.789 shape=(1, 9000, 1)
logits [[ 3.733786 -2.653255  2.51535  -6.750906]]
Iteration 900 of 1000: loss=0.148 " + "l1=0.113" + "l2=0.0352 f=-0.791 shape=(1, 9000, 1)
logits [[ 3.6604104 -2.65284    2.5299928 -6.7001863]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.07 " + "l1=2.07" + "l2=0 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.43706   -2.5429802  2.3677602 -7.2673726]]
Iteration 100 of 1000: loss=0.512 " + "l1=0" + "l2=0.512 f=-0.836 shape=(1, 9000, 1)
logits [[ 2.685596  -2.6997788  2.6859438 -6.017039 ]]
Iteration 200 of 1000: loss=0.345 " + "l1=0.0107" + "l2=0.334 f=-0.825 shape=(1, 9000, 1)
logits [[ 2.6826994 -2.6743503  2.671953  -5.982216 ]]
Iteration 300 of 1000: loss=0.26 " + "l1=0" + "l2=0.26 f=-0.824 shape=(1, 9000, 1)
logits [[ 2.6655786 -2.6678727  2.675733  -5.971426 ]]
Iteration 400 of 1000: loss=0.214 " + "l1=0" + "l2=0.214 f=-0.822 shape=(1, 9000, 1)
logits [[ 2.6700938 -2.655047   2.6743257 -5.9755025]]
Iteration 500 of 1000: loss=0.196 " + "l1=0.0108" + "l2=0.185 f=-0.819 shape=(1, 9000, 1)
logits [[ 2.6839302 -2.6436727  2.673086  -5.988185 ]]
Iteration 600 of 1000: loss=0.173 " + "l1=0" + "l2=0.173 f=-0.814 shape=(1, 9000, 1)
logits [[ 2.650915  -2.6217206  2.6765404 -5.9621334]]
Iteration 700 of 1000: loss=0.15 " + "l1=0" + "l2=0.15 f=-0.808 shape=(1, 9000, 1)
logits [[ 2.6702168 -2.5999944  2.6734083 -5.974522 ]]
Iteration 800 of 1000: loss=0.137 " + "l1=0" + "l2=0.137 f=-0.803 shape=(1, 9000, 1)
logits [[ 2.6739624 -2.5880876  2.6789107 -5.9763446]]
Iteration 900 of 1000: loss=0.127 " + "l1=0" + "l2=0.127 f=-0.799 shape=(1, 9000, 1)
logits [[ 2.6646519 -2.5692127  2.6779232 -5.968169 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.14 " + "l1=1.14" + "l2=0 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.43706   -2.5429802  2.3677602 -7.2673726]]
Iteration 100 of 1000: loss=0.547 " + "l1=0.211" + "l2=0.336 f=-0.827 shape=(1, 9000, 1)
logits [[ 3.0314102 -2.708365   2.6479523 -6.2788324]]
Iteration 200 of 1000: loss=0.299 " + "l1=0" + "l2=0.299 f=-0.829 shape=(1, 9000, 1)
logits [[ 2.6690197 -2.6560853  2.6708417 -5.99868  ]]
Iteration 300 of 1000: loss=0.226 " + "l1=0.000835" + "l2=0.225 f=-0.827 shape=(1, 9000, 1)
logits [[ 2.6689277 -2.6484084  2.6674097 -5.994953 ]]
Iteration 400 of 1000: loss=0.196 " + "l1=0" + "l2=0.196 f=-0.824 shape=(1, 9000, 1)
logits [[ 2.6561668 -2.6451464  2.6789844 -5.9876103]]
Iteration 500 of 1000: loss=0.17 " + "l1=0" + "l2=0.17 f=-0.819 shape=(1, 9000, 1)
logits [[ 2.6737542 -2.637333   2.686744  -6.000086 ]]
Iteration 600 of 1000: loss=0.15 " + "l1=0.00337" + "l2=0.147 f=-0.813 shape=(1, 9000, 1)
logits [[ 2.6873019 -2.614523   2.6811755 -6.004465 ]]
Iteration 700 of 1000: loss=0.134 " + "l1=0" + "l2=0.134 f=-0.807 shape=(1, 9000, 1)
logits [[ 2.6771216 -2.5984225  2.6846979 -5.9901767]]
Iteration 800 of 1000: loss=0.12 " + "l1=0.000447" + "l2=0.119 f=-0.8 shape=(1, 9000, 1)
logits [[ 2.6730273 -2.5680568  2.6722143 -5.978408 ]]
Iteration 900 of 1000: loss=0.107 " + "l1=0" + "l2=0.107 f=-0.796 shape=(1, 9000, 1)
logits [[ 2.6584587 -2.5357032  2.6607676 -5.9656487]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.673 " + "l1=0.673" + "l2=0 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.43706   -2.5429802  2.3677602 -7.2673726]]
Iteration 100 of 1000: loss=0.477 " + "l1=0.357" + "l2=0.121 f=-0.807 shape=(1, 9000, 1)
logits [[ 3.635531  -2.6863852  2.5384994 -6.7148666]]
Iteration 200 of 1000: loss=0.364 " + "l1=0.183" + "l2=0.181 f=-0.82 shape=(1, 9000, 1)
logits [[ 3.181215  -2.6902022  2.6172404 -6.387808 ]]
Iteration 300 of 1000: loss=0.262 " + "l1=0.0391" + "l2=0.223 f=-0.825 shape=(1, 9000, 1)
logits [[ 2.7780817 -2.6541514  2.6578088 -6.081544 ]]
Iteration 400 of 1000: loss=0.198 " + "l1=0.00318" + "l2=0.195 f=-0.822 shape=(1, 9000, 1)
logits [[ 2.6726546 -2.6205459  2.6628604 -6.00275  ]]
Iteration 500 of 1000: loss=0.168 " + "l1=0" + "l2=0.168 f=-0.818 shape=(1, 9000, 1)
logits [[ 2.6717024 -2.6165376  2.6773639 -6.003531 ]]
Iteration 600 of 1000: loss=0.146 " + "l1=0" + "l2=0.146 f=-0.811 shape=(1, 9000, 1)
logits [[ 2.6739607 -2.6000414  2.680903  -5.9990544]]
Iteration 700 of 1000: loss=0.128 " + "l1=0" + "l2=0.128 f=-0.803 shape=(1, 9000, 1)
logits [[ 2.6710927 -2.572015   2.674164  -5.986249 ]]
Iteration 800 of 1000: loss=0.112 " + "l1=0" + "l2=0.112 f=-0.796 shape=(1, 9000, 1)
logits [[ 2.65372   -2.527797   2.656869  -5.9685745]]
Iteration 900 of 1000: loss=0.0987 " + "l1=0.0017" + "l2=0.097 f=-0.79 shape=(1, 9000, 1)
logits [[ 2.6405253 -2.4797878  2.6352909 -5.9557843]]
--- 287.99960827827454 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.117 " + "l1=0.117" + "l2=0 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.43706   -2.5429802  2.3677602 -7.2673726]]
Iteration 100 of 1000: loss=0.116 " + "l1=0.116" + "l2=0.00056 f=-0.748 shape=(1, 9000, 1)
logits [[ 4.369453  -2.5150893  2.3434541 -7.19022  ]]
Iteration 200 of 1000: loss=0.116 " + "l1=0.115" + "l2=0.000609 f=-0.748 shape=(1, 9000, 1)
logits [[ 4.3569283 -2.5087826  2.3384585 -7.1766596]]
Iteration 300 of 1000: loss=0.116 " + "l1=0.115" + "l2=0.000735 f=-0.747 shape=(1, 9000, 1)
logits [[ 4.343288  -2.5023074  2.332928  -7.1613145]]
Iteration 400 of 1000: loss=0.116 " + "l1=0.115" + "l2=0.000886 f=-0.746 shape=(1, 9000, 1)
logits [[ 4.3304324 -2.4964163  2.3276534 -7.1467166]]
Iteration 500 of 1000: loss=0.116 " + "l1=0.115" + "l2=0.00106 f=-0.746 shape=(1, 9000, 1)
logits [[ 4.319225  -2.4917848  2.3232782 -7.1339364]]
Iteration 600 of 1000: loss=0.116 " + "l1=0.114" + "l2=0.00121 f=-0.745 shape=(1, 9000, 1)
logits [[ 4.3090587 -2.4875886  2.3194096 -7.122363 ]]
Iteration 700 of 1000: loss=0.116 " + "l1=0.114" + "l2=0.00142 f=-0.745 shape=(1, 9000, 1)
logits [[ 4.2999773 -2.4841187  2.3161676 -7.112182 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.17 " + "l1=1.17" + "l2=0 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.43706   -2.5429802  2.3677602 -7.2673726]]
Iteration 100 of 1000: loss=1.09 " + "l1=1.05" + "l2=0.0409 f=-0.725 shape=(1, 9000, 1)
logits [[ 3.8745275 -2.2937682  2.1590428 -6.6395187]]
Iteration 200 of 1000: loss=1.06 " + "l1=0.994" + "l2=0.0623 f=-0.718 shape=(1, 9000, 1)
logits [[ 3.5918956 -2.1765335  2.060356  -6.3463893]]
Iteration 300 of 1000: loss=1.03 " + "l1=0.944" + "l2=0.0836 f=-0.708 shape=(1, 9000, 1)
logits [[ 3.3461385 -2.0720701  1.9845654 -6.089594 ]]
Iteration 400 of 1000: loss=1 " + "l1=0.904" + "l2=0.1 f=-0.701 shape=(1, 9000, 1)
logits [[ 3.1515777 -1.9989547  1.9335371 -5.8890224]]
Iteration 500 of 1000: loss=0.984 " + "l1=0.868" + "l2=0.116 f=-0.697 shape=(1, 9000, 1)
logits [[ 2.9682891 -1.9446934  1.8996906 -5.7099195]]
Iteration 600 of 1000: loss=0.964 " + "l1=0.838" + "l2=0.126 f=-0.692 shape=(1, 9000, 1)
logits [[ 2.818856  -1.9066683  1.8771397 -5.5562525]]
Iteration 700 of 1000: loss=0.946 " + "l1=0.813" + "l2=0.133 f=-0.687 shape=(1, 9000, 1)
logits [[ 2.6978574 -1.8778229  1.8593079 -5.429133 ]]
Iteration 800 of 1000: loss=0.927 " + "l1=0.786" + "l2=0.141 f=-0.682 shape=(1, 9000, 1)
logits [[ 2.5615864 -1.8327606  1.8386436 -5.2952394]]
Iteration 900 of 1000: loss=0.905 " + "l1=0.753" + "l2=0.153 f=-0.673 shape=(1, 9000, 1)
logits [[ 2.3947837 -1.7695115  1.8134854 -5.1321087]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.7 " + "l1=11.7" + "l2=0 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.43706   -2.5429802  2.3677602 -7.2673726]]
Iteration 100 of 1000: loss=5.86 " + "l1=3.74" + "l2=2.12 f=-0.549 shape=(1, 9000, 1)
logits [[ 0.7088553  -0.60886806  0.72232795 -3.0166836 ]]
Iteration 200 of 1000: loss=3.95 " + "l1=1.3" + "l2=2.65 f=-0.437 shape=(1, 9000, 1)
logits [[-0.17727159 -0.45481923  0.09349795 -1.2075303 ]]
Iteration 300 of 1000: loss=2.81 " + "l1=0.157" + "l2=2.65 f=-0.355 shape=(1, 9000, 1)
logits [[-0.33693388 -0.47635385 -0.2253184  -0.38266876]]
Iteration 400 of 1000: loss=2.14 " + "l1=0.0222" + "l2=2.12 f=-0.355 shape=(1, 9000, 1)
logits [[-0.28290302 -0.59497744 -0.2597891  -0.28201973]]
Iteration 500 of 1000: loss=1.84 " + "l1=0" + "l2=1.84 f=-0.35 shape=(1, 9000, 1)
logits [[-0.2659573  -0.61620975 -0.26322433 -0.25403917]]
Iteration 600 of 1000: loss=1.64 " + "l1=0.00759" + "l2=1.63 f=-0.343 shape=(1, 9000, 1)
logits [[-0.24140513 -0.66151124 -0.23042233 -0.23800814]]
Iteration 700 of 1000: loss=1.51 " + "l1=0" + "l2=1.51 f=-0.333 shape=(1, 9000, 1)
logits [[-0.22455701 -0.7155829  -0.2115537  -0.17882949]]
Iteration 800 of 1000: loss=1.37 " + "l1=0" + "l2=1.37 f=-0.325 shape=(1, 9000, 1)
logits [[-0.17294635 -0.7795464  -0.18117549 -0.16549921]]
Iteration 900 of 1000: loss=1.27 " + "l1=0.00197" + "l2=1.27 f=-0.325 shape=(1, 9000, 1)
logits [[-0.17538136 -0.8157633  -0.15387945 -0.15585315]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.44 " + "l1=6.44" + "l2=0 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.43706   -2.5429802  2.3677602 -7.2673726]]
Iteration 100 of 1000: loss=4.15 " + "l1=2.93" + "l2=1.22 f=-0.635 shape=(1, 9000, 1)
logits [[ 1.3061469 -1.1380396  1.3104008 -4.018908 ]]
Iteration 200 of 1000: loss=3.38 " + "l1=2.16" + "l2=1.22 f=-0.562 shape=(1, 9000, 1)
logits [[ 0.792943   -0.71499074  0.79758    -3.1253543 ]]
Iteration 300 of 1000: loss=2.86 " + "l1=1.57" + "l2=1.29 f=-0.503 shape=(1, 9000, 1)
logits [[ 0.47194543 -0.671641    0.51998585 -2.3336236 ]]
Iteration 400 of 1000: loss=2.43 " + "l1=1.02" + "l2=1.41 f=-0.449 shape=(1, 9000, 1)
logits [[ 0.15053289 -0.5859701   0.24414511 -1.6062938 ]]
Iteration 500 of 1000: loss=2.11 " + "l1=0.661" + "l2=1.44 f=-0.417 shape=(1, 9000, 1)
logits [[-0.06678268 -0.50689435  0.05289203 -1.148178  ]]
Iteration 600 of 1000: loss=1.83 " + "l1=0.386" + "l2=1.44 f=-0.368 shape=(1, 9000, 1)
logits [[-0.08308791 -0.51945835 -0.08305068 -0.7844191 ]]
Iteration 700 of 1000: loss=1.49 " + "l1=0.0578" + "l2=1.43 f=-0.335 shape=(1, 9000, 1)
logits [[-0.2612683  -0.48917556 -0.24232805 -0.347452  ]]
Iteration 800 of 1000: loss=1.22 " + "l1=0.00202" + "l2=1.21 f=-0.324 shape=(1, 9000, 1)
logits [[-0.2596586  -0.5556754  -0.23828577 -0.24196658]]
Iteration 900 of 1000: loss=1.07 " + "l1=0.00509" + "l2=1.07 f=-0.317 shape=(1, 9000, 1)
logits [[-0.22319713 -0.6179415  -0.20830075 -0.21755138]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.8 " + "l1=3.8" + "l2=0 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.43706   -2.5429802  2.3677602 -7.2673726]]
Iteration 100 of 1000: loss=2.97 " + "l1=2.52" + "l2=0.451 f=-0.674 shape=(1, 9000, 1)
logits [[ 2.5256019 -1.7503886  1.7537535 -5.2259173]]
Iteration 200 of 1000: loss=2.56 " + "l1=1.87" + "l2=0.692 f=-0.647 shape=(1, 9000, 1)
logits [[ 1.4968493 -1.2532694  1.4123691 -4.243315 ]]
Iteration 300 of 1000: loss=2.26 " + "l1=1.56" + "l2=0.698 f=-0.596 shape=(1, 9000, 1)
logits [[ 1.1084255 -0.924351   1.115101  -3.6826515]]
Iteration 400 of 1000: loss=2.1 " + "l1=1.42" + "l2=0.672 f=-0.577 shape=(1, 9000, 1)
logits [[ 0.96883434 -0.83907384  0.9723768  -3.4105792 ]]
Iteration 500 of 1000: loss=1.95 " + "l1=1.28" + "l2=0.678 f=-0.553 shape=(1, 9000, 1)
logits [[ 0.8454832  -0.8262263   0.84853935 -3.0805707 ]]
Iteration 600 of 1000: loss=1.8 " + "l1=1.12" + "l2=0.685 f=-0.518 shape=(1, 9000, 1)
logits [[ 0.7007793  -0.7835152   0.72685915 -2.7145061 ]]
Iteration 700 of 1000: loss=1.61 " + "l1=0.865" + "l2=0.743 f=-0.476 shape=(1, 9000, 1)
logits [[ 0.4190554  -0.7452463   0.54138994 -2.1211033 ]]
Iteration 800 of 1000: loss=1.43 " + "l1=0.699" + "l2=0.731 f=-0.423 shape=(1, 9000, 1)
logits [[ 0.31673655 -0.70938027  0.42548898 -1.7244734 ]]
Iteration 900 of 1000: loss=1.29 " + "l1=0.567" + "l2=0.724 f=-0.395 shape=(1, 9000, 1)
logits [[ 0.20997018 -0.67401934  0.31399366 -1.4306145 ]]
--- 295.03401732444763 seconds ---
Adv result:3
Loading record A00888
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0692 " + "l1=0.0692" + "l2=0 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.1274443 -2.7962148  2.8465211 -6.07027  ]]
Iteration 100 of 1000: loss=0.069 " + "l1=0.0687" + "l2=0.000254 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.092727  -2.7769685  2.833828  -6.0364256]]
Iteration 200 of 1000: loss=0.0689 " + "l1=0.0686" + "l2=0.000223 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.090255  -2.7737856  2.8307045 -6.034236 ]]
Iteration 300 of 1000: loss=0.0688 " + "l1=0.0685" + "l2=0.000263 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.084922  -2.769559   2.827199  -6.0289946]]
Iteration 400 of 1000: loss=0.0687 " + "l1=0.0684" + "l2=0.000297 f=-0.471 shape=(1, 9000, 1)
logits [[ 4.0791636 -2.7653158  2.8237796 -6.023288 ]]
Iteration 500 of 1000: loss=0.0687 " + "l1=0.0683" + "l2=0.000353 f=-0.471 shape=(1, 9000, 1)
logits [[ 4.073091  -2.7609775  2.8203697 -6.0172987]]
Iteration 600 of 1000: loss=0.0687 " + "l1=0.0682" + "l2=0.000446 f=-0.471 shape=(1, 9000, 1)
logits [[ 4.066818  -2.7565887  2.8169203 -6.011131 ]]
Iteration 700 of 1000: loss=0.0687 " + "l1=0.0681" + "l2=0.000543 f=-0.471 shape=(1, 9000, 1)
logits [[ 4.060354  -2.7521226  2.8134904 -6.0048122]]
Iteration 800 of 1000: loss=0.0687 " + "l1=0.068" + "l2=0.000684 f=-0.471 shape=(1, 9000, 1)
logits [[ 4.054281  -2.748302   2.810765  -5.9987717]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.692 " + "l1=0.692" + "l2=0 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.1274443 -2.7962148  2.8465211 -6.07027  ]]
Iteration 100 of 1000: loss=0.668 " + "l1=0.654" + "l2=0.0139 f=-0.466 shape=(1, 9000, 1)
logits [[ 3.8706067 -2.6670861  2.7617183 -5.8286796]]
Iteration 200 of 1000: loss=0.659 " + "l1=0.641" + "l2=0.0181 f=-0.465 shape=(1, 9000, 1)
logits [[ 3.7882657 -2.623526   2.73202   -5.75718  ]]
Iteration 300 of 1000: loss=0.652 " + "l1=0.631" + "l2=0.0209 f=-0.464 shape=(1, 9000, 1)
logits [[ 3.723718  -2.59048    2.7081804 -5.696697 ]]
Iteration 400 of 1000: loss=0.646 " + "l1=0.622" + "l2=0.0238 f=-0.461 shape=(1, 9000, 1)
logits [[ 3.6618438 -2.556924   2.6847363 -5.6354465]]
Iteration 500 of 1000: loss=0.638 " + "l1=0.612" + "l2=0.0266 f=-0.46 shape=(1, 9000, 1)
logits [[ 3.5955942 -2.5223422  2.6582258 -5.569611 ]]
Iteration 600 of 1000: loss=0.632 " + "l1=0.603" + "l2=0.0286 f=-0.459 shape=(1, 9000, 1)
logits [[ 3.5392926 -2.4949539  2.635727  -5.516762 ]]
Iteration 700 of 1000: loss=0.627 " + "l1=0.596" + "l2=0.031 f=-0.458 shape=(1, 9000, 1)
logits [[ 3.4842935 -2.4736016  2.6184406 -5.4623766]]
Iteration 800 of 1000: loss=0.622 " + "l1=0.59" + "l2=0.0328 f=-0.458 shape=(1, 9000, 1)
logits [[ 3.4377525 -2.4587781  2.6051102 -5.414366 ]]
Iteration 900 of 1000: loss=0.618 " + "l1=0.584" + "l2=0.034 f=-0.457 shape=(1, 9000, 1)
logits [[ 3.398738  -2.4461148  2.592889  -5.374346 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.92 " + "l1=6.92" + "l2=0 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.1274443 -2.7962148  2.8465211 -6.07027  ]]
Iteration 100 of 1000: loss=5.04 " + "l1=4.15" + "l2=0.884 f=-0.434 shape=(1, 9000, 1)
logits [[ 2.2588408 -1.8924783  2.2507377 -4.3529353]]
Iteration 200 of 1000: loss=4.39 " + "l1=3.49" + "l2=0.906 f=-0.438 shape=(1, 9000, 1)
logits [[ 1.9037565 -1.5804437  1.906756  -3.9823947]]
Iteration 300 of 1000: loss=3.98 " + "l1=3.04" + "l2=0.948 f=-0.434 shape=(1, 9000, 1)
logits [[ 1.6656702 -1.3642625  1.6713399 -3.707451 ]]
Iteration 400 of 1000: loss=3.76 " + "l1=2.81" + "l2=0.953 f=-0.415 shape=(1, 9000, 1)
logits [[ 1.5499969 -1.2558302  1.5517969 -3.5050628]]
Iteration 500 of 1000: loss=3.63 " + "l1=2.68" + "l2=0.954 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.4757756 -1.1986035  1.4769186 -3.355894 ]]
Iteration 600 of 1000: loss=3.52 " + "l1=2.55" + "l2=0.97 f=-0.395 shape=(1, 9000, 1)
logits [[ 1.4069761 -1.1457617  1.4086696 -3.2511864]]
Iteration 700 of 1000: loss=3.46 " + "l1=2.48" + "l2=0.978 f=-0.391 shape=(1, 9000, 1)
logits [[ 1.3551228 -1.1149657  1.3651739 -3.169753 ]]
Iteration 800 of 1000: loss=3.39 " + "l1=2.39" + "l2=0.996 f=-0.387 shape=(1, 9000, 1)
logits [[ 1.3091694 -1.0784618  1.3149109 -3.0944893]]
Iteration 900 of 1000: loss=3.33 " + "l1=2.33" + "l2=0.996 f=-0.382 shape=(1, 9000, 1)
logits [[ 1.2771837 -1.0516639  1.2811804 -3.0336952]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=69.2 " + "l1=69.2" + "l2=0 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.1274443 -2.7962148  2.8465211 -6.07027  ]]
Iteration 100 of 1000: loss=23.7 " + "l1=14.3" + "l2=9.42 f=-0.37 shape=(1, 9000, 1)
logits [[ 0.67798775 -0.39688307  1.0337864  -2.793049  ]]
Iteration 200 of 1000: loss=11 " + "l1=0" + "l2=11 f=-0.342 shape=(1, 9000, 1)
logits [[-0.5973549   0.43991303  0.4260824  -1.6353036 ]]
Iteration 300 of 1000: loss=8.69 " + "l1=0.00829" + "l2=8.68 f=-0.334 shape=(1, 9000, 1)
logits [[-0.7074887   0.40888733  0.40971637 -1.4464083 ]]
Iteration 400 of 1000: loss=7.77 " + "l1=0" + "l2=7.77 f=-0.344 shape=(1, 9000, 1)
logits [[-0.81721866  0.41042474  0.37779227 -1.3481371 ]]
Iteration 500 of 1000: loss=7 " + "l1=0" + "l2=7 f=-0.349 shape=(1, 9000, 1)
logits [[-0.81882125  0.3667667   0.36115435 -1.3055042 ]]
Iteration 600 of 1000: loss=6.59 " + "l1=0" + "l2=6.59 f=-0.347 shape=(1, 9000, 1)
logits [[-0.8388297   0.36638647  0.3238778  -1.2410928 ]]
Iteration 700 of 1000: loss=6.13 " + "l1=0" + "l2=6.13 f=-0.345 shape=(1, 9000, 1)
logits [[-0.8186429   0.32645416  0.32067794 -1.210379  ]]
Iteration 800 of 1000: loss=5.93 " + "l1=0" + "l2=5.93 f=-0.347 shape=(1, 9000, 1)
logits [[-0.86437106  0.33571076  0.29500902 -1.1552372 ]]
Iteration 900 of 1000: loss=5.65 " + "l1=0.125" + "l2=5.53 f=-0.344 shape=(1, 9000, 1)
logits [[-0.83419275  0.28605294  0.29855722 -1.1283598 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=38.1 " + "l1=38.1" + "l2=0 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.1274443 -2.7962148  2.8465211 -6.07027  ]]
Iteration 100 of 1000: loss=16.7 " + "l1=11.6" + "l2=5.08 f=-0.379 shape=(1, 9000, 1)
logits [[ 1.3079896  -0.78599626  1.3261505  -3.3658264 ]]
Iteration 200 of 1000: loss=12.2 " + "l1=5.5" + "l2=6.71 f=-0.311 shape=(1, 9000, 1)
logits [[ 0.57674074 -0.17646725  0.8241629  -2.4685845 ]]
Iteration 300 of 1000: loss=8.1 " + "l1=0.11" + "l2=7.99 f=-0.296 shape=(1, 9000, 1)
logits [[-0.50402325  0.3259617   0.34596363 -1.3506792 ]]
Iteration 400 of 1000: loss=6.74 " + "l1=0.0245" + "l2=6.71 f=-0.314 shape=(1, 9000, 1)
logits [[-0.6902735   0.31608456  0.3205433  -1.200988  ]]
Iteration 500 of 1000: loss=6.05 " + "l1=0" + "l2=6.05 f=-0.319 shape=(1, 9000, 1)
logits [[-0.7515243   0.31520373  0.29057935 -1.1304874 ]]
Iteration 600 of 1000: loss=5.51 " + "l1=0" + "l2=5.51 f=-0.319 shape=(1, 9000, 1)
logits [[-0.7554012   0.28688294  0.27560624 -1.082344  ]]
Iteration 700 of 1000: loss=5.13 " + "l1=0.0499" + "l2=5.08 f=-0.318 shape=(1, 9000, 1)
logits [[-0.7553594   0.25881568  0.267885   -1.0452293 ]]
Iteration 800 of 1000: loss=4.78 " + "l1=0" + "l2=4.78 f=-0.316 shape=(1, 9000, 1)
logits [[-0.7795935   0.26201212  0.25062743 -0.9953343 ]]
Iteration 900 of 1000: loss=4.47 " + "l1=0" + "l2=4.47 f=-0.315 shape=(1, 9000, 1)
logits [[-0.79652774  0.25513864  0.24475974 -0.9648749 ]]
--- 301.4710988998413 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0128 " + "l1=0.0128" + "l2=0 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.1274443 -2.7962148  2.8465211 -6.07027  ]]
Iteration 100 of 1000: loss=0.0127 " + "l1=0.0125" + "l2=0.000168 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.103109  -2.7971196  2.8509295 -6.04775  ]]
Iteration 200 of 1000: loss=0.0127 " + "l1=0.0125" + "l2=0.000121 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.1040525 -2.7973144  2.8507733 -6.0485487]]
Iteration 300 of 1000: loss=0.0127 " + "l1=0.0125" + "l2=0.000141 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.102154  -2.7974577  2.8510938 -6.0467114]]
Iteration 400 of 1000: loss=0.0127 " + "l1=0.0125" + "l2=0.00019 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.09974   -2.7975354  2.8514333 -6.0443773]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.128 " + "l1=0.128" + "l2=0 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.1274443 -2.7962148  2.8465211 -6.07027  ]]
Iteration 100 of 1000: loss=0.115 " + "l1=0.106" + "l2=0.00895 f=-0.471 shape=(1, 9000, 1)
logits [[ 3.9402533 -2.80779    2.8805645 -5.898129 ]]
Iteration 200 of 1000: loss=0.111 " + "l1=0.0989" + "l2=0.0117 f=-0.471 shape=(1, 9000, 1)
logits [[ 3.88204   -2.8137026  2.8927422 -5.8468823]]
Iteration 300 of 1000: loss=0.107 " + "l1=0.0936" + "l2=0.0135 f=-0.471 shape=(1, 9000, 1)
logits [[ 3.8374174 -2.8168633  2.901236  -5.8066087]]
Iteration 400 of 1000: loss=0.104 " + "l1=0.0894" + "l2=0.0148 f=-0.471 shape=(1, 9000, 1)
logits [[ 3.8018742 -2.8188086  2.9077961 -5.773218 ]]
Iteration 500 of 1000: loss=0.101 " + "l1=0.0847" + "l2=0.0167 f=-0.47 shape=(1, 9000, 1)
logits [[ 3.7614655 -2.8203526  2.9140255 -5.7338862]]
Iteration 600 of 1000: loss=0.099 " + "l1=0.0806" + "l2=0.0185 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.7246742 -2.8217895  2.9191105 -5.6988506]]
Iteration 700 of 1000: loss=0.097 " + "l1=0.0779" + "l2=0.0191 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.6972075 -2.8181715  2.9182255 -5.6723013]]
Iteration 800 of 1000: loss=0.0952 " + "l1=0.0751" + "l2=0.0202 f=-0.468 shape=(1, 9000, 1)
logits [[ 3.666008  -2.8130925  2.91534   -5.6421757]]
Iteration 900 of 1000: loss=0.0935 " + "l1=0.0726" + "l2=0.0209 f=-0.468 shape=(1, 9000, 1)
logits [[ 3.639349  -2.8099422  2.9137442 -5.6157293]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.28 " + "l1=1.28" + "l2=0 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.1274443 -2.7962148  2.8465211 -6.07027  ]]
Iteration 100 of 1000: loss=0.324 " + "l1=0.00351" + "l2=0.32 f=-0.473 shape=(1, 9000, 1)
logits [[ 3.0594387 -2.8928828  3.0559244 -5.1146584]]
Iteration 200 of 1000: loss=0.237 " + "l1=0.00119" + "l2=0.236 f=-0.476 shape=(1, 9000, 1)
logits [[ 3.0584447 -2.9025557  3.057256  -5.1165304]]
Iteration 300 of 1000: loss=0.197 " + "l1=0" + "l2=0.197 f=-0.475 shape=(1, 9000, 1)
logits [[ 3.054979 -2.899282  3.056089 -5.111895]]
Iteration 400 of 1000: loss=0.174 " + "l1=0" + "l2=0.174 f=-0.475 shape=(1, 9000, 1)
logits [[ 3.042309  -2.8938363  3.051209  -5.101056 ]]
Iteration 500 of 1000: loss=0.152 " + "l1=0" + "l2=0.152 f=-0.475 shape=(1, 9000, 1)
logits [[ 3.0456908 -2.8874712  3.0477357 -5.104806 ]]
Iteration 600 of 1000: loss=0.138 " + "l1=0.00374" + "l2=0.134 f=-0.476 shape=(1, 9000, 1)
logits [[ 3.048591  -2.8829288  3.0448508 -5.115227 ]]
Iteration 700 of 1000: loss=0.127 " + "l1=0.00725" + "l2=0.12 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.047093  -2.8738253  3.0398474 -5.1194954]]
Iteration 800 of 1000: loss=0.112 " + "l1=0" + "l2=0.112 f=-0.476 shape=(1, 9000, 1)
logits [[ 3.0340602 -2.8675177  3.0371654 -5.1057873]]
Iteration 900 of 1000: loss=0.105 " + "l1=0" + "l2=0.105 f=-0.474 shape=(1, 9000, 1)
logits [[ 3.01755   -2.8540416  3.0327058 -5.092503 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.705 " + "l1=0.705" + "l2=0 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.1274443 -2.7962148  2.8465211 -6.07027  ]]
Iteration 100 of 1000: loss=0.344 " + "l1=0.165" + "l2=0.178 f=-0.473 shape=(1, 9000, 1)
logits [[ 3.2990835 -2.854847   2.9983006 -5.332993 ]]
Iteration 200 of 1000: loss=0.249 " + "l1=0.0228" + "l2=0.226 f=-0.476 shape=(1, 9000, 1)
logits [[ 3.0883827 -2.9004126  3.0468962 -5.140031 ]]
Iteration 300 of 1000: loss=0.192 " + "l1=0.000333" + "l2=0.192 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.0519176 -2.9044702  3.0513124 -5.106719 ]]
Iteration 400 of 1000: loss=0.165 " + "l1=0.000729" + "l2=0.165 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.0483997 -2.896329   3.047075  -5.1067586]]
Iteration 500 of 1000: loss=0.146 " + "l1=0.00164" + "l2=0.144 f=-0.476 shape=(1, 9000, 1)
logits [[ 3.0473242 -2.887314   3.0443432 -5.10772  ]]
Iteration 600 of 1000: loss=0.13 " + "l1=0.00362" + "l2=0.127 f=-0.476 shape=(1, 9000, 1)
logits [[ 3.0472684 -2.8785396  3.040681  -5.114148 ]]
Iteration 700 of 1000: loss=0.115 " + "l1=0.000655" + "l2=0.115 f=-0.476 shape=(1, 9000, 1)
logits [[ 3.0371602 -2.8707223  3.03597   -5.10623  ]]
Iteration 800 of 1000: loss=0.104 " + "l1=0.000392" + "l2=0.103 f=-0.474 shape=(1, 9000, 1)
logits [[ 3.0300384 -2.8552341  3.029325  -5.1002045]]
Iteration 900 of 1000: loss=0.0953 " + "l1=0.00223" + "l2=0.0931 f=-0.472 shape=(1, 9000, 1)
logits [[ 3.0217562 -2.835724   3.017698  -5.09132  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.416 " + "l1=0.416" + "l2=0 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.1274443 -2.7962148  2.8465211 -6.07027  ]]
Iteration 100 of 1000: loss=0.277 " + "l1=0.198" + "l2=0.0791 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.5716398 -2.8406081  2.961491  -5.5705132]]
Iteration 200 of 1000: loss=0.238 " + "l1=0.143" + "l2=0.0949 f=-0.475 shape=(1, 9000, 1)
logits [[ 3.4159863 -2.8555305  2.9771981 -5.4358907]]
Iteration 300 of 1000: loss=0.211 " + "l1=0.106" + "l2=0.105 f=-0.476 shape=(1, 9000, 1)
logits [[ 3.316018  -2.8557208  2.9888089 -5.351208 ]]
Iteration 400 of 1000: loss=0.189 " + "l1=0.0775" + "l2=0.112 f=-0.475 shape=(1, 9000, 1)
logits [[ 3.239466  -2.8628664  3.0010552 -5.278474 ]]
Iteration 500 of 1000: loss=0.169 " + "l1=0.049" + "l2=0.12 f=-0.474 shape=(1, 9000, 1)
logits [[ 3.1633284 -2.8699727  3.0125065 -5.2024713]]
Iteration 600 of 1000: loss=0.151 " + "l1=0.0204" + "l2=0.13 f=-0.475 shape=(1, 9000, 1)
logits [[ 3.0890737 -2.8801408  3.0264084 -5.1366367]]
Iteration 700 of 1000: loss=0.131 " + "l1=0.00274" + "l2=0.129 f=-0.476 shape=(1, 9000, 1)
logits [[ 3.0422049 -2.8790398  3.0337853 -5.100557 ]]
Iteration 800 of 1000: loss=0.114 " + "l1=0.000167" + "l2=0.114 f=-0.475 shape=(1, 9000, 1)
logits [[ 3.0321763 -2.8694887  3.0316637 -5.093962 ]]
Iteration 900 of 1000: loss=0.102 " + "l1=0.00193" + "l2=0.0996 f=-0.473 shape=(1, 9000, 1)
logits [[ 3.0267024 -2.8483975  3.020766  -5.092579 ]]
--- 281.5405898094177 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.102 " + "l1=0.102" + "l2=0 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.1274443 -2.7962148  2.8465211 -6.07027  ]]
Iteration 100 of 1000: loss=0.101 " + "l1=0.101" + "l2=0.000485 f=-0.47 shape=(1, 9000, 1)
logits [[ 4.0782824 -2.784606   2.8366177 -6.011763 ]]
Iteration 200 of 1000: loss=0.101 " + "l1=0.101" + "l2=0.000459 f=-0.47 shape=(1, 9000, 1)
logits [[ 4.0720963 -2.7818556  2.8335516 -6.004948 ]]
Iteration 300 of 1000: loss=0.101 " + "l1=0.101" + "l2=0.000527 f=-0.47 shape=(1, 9000, 1)
logits [[ 4.0632305 -2.7783573  2.8299224 -5.9947042]]
Iteration 400 of 1000: loss=0.101 " + "l1=0.1" + "l2=0.00059 f=-0.47 shape=(1, 9000, 1)
logits [[ 4.054139  -2.7747097  2.826152  -5.9841876]]
Iteration 500 of 1000: loss=0.101 " + "l1=0.1" + "l2=0.000704 f=-0.469 shape=(1, 9000, 1)
logits [[ 4.0448475 -2.7711017  2.8223326 -5.973347 ]]
Iteration 600 of 1000: loss=0.101 " + "l1=0.1" + "l2=0.00079 f=-0.469 shape=(1, 9000, 1)
logits [[ 4.0356946 -2.7680063  2.8188686 -5.962737 ]]
Iteration 700 of 1000: loss=0.101 " + "l1=0.0998" + "l2=0.000933 f=-0.469 shape=(1, 9000, 1)
logits [[ 4.026366  -2.7645454  2.81526   -5.9520283]]
Iteration 800 of 1000: loss=0.101 " + "l1=0.0996" + "l2=0.00108 f=-0.468 shape=(1, 9000, 1)
logits [[ 4.016604  -2.7614064  2.8118944 -5.940765 ]]
Iteration 900 of 1000: loss=0.101 " + "l1=0.0994" + "l2=0.00112 f=-0.468 shape=(1, 9000, 1)
logits [[ 4.007699  -2.7587528  2.808972  -5.9304214]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.02 " + "l1=1.02" + "l2=0 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.1274443 -2.7962148  2.8465211 -6.07027  ]]
Iteration 100 of 1000: loss=0.963 " + "l1=0.928" + "l2=0.035 f=-0.455 shape=(1, 9000, 1)
logits [[ 3.6987503 -2.7136216  2.774543  -5.579564 ]]
Iteration 200 of 1000: loss=0.942 " + "l1=0.897" + "l2=0.0446 f=-0.452 shape=(1, 9000, 1)
logits [[ 3.5560026 -2.68952    2.7429156 -5.416893 ]]
Iteration 300 of 1000: loss=0.923 " + "l1=0.871" + "l2=0.0516 f=-0.451 shape=(1, 9000, 1)
logits [[ 3.4357789 -2.6730466  2.7065532 -5.274259 ]]
Iteration 400 of 1000: loss=0.904 " + "l1=0.847" + "l2=0.0573 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.3252823 -2.6476939  2.6662054 -5.1438046]]
Iteration 500 of 1000: loss=0.886 " + "l1=0.823" + "l2=0.0623 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.221777  -2.6241376  2.6195357 -5.0124574]]
Iteration 600 of 1000: loss=0.866 " + "l1=0.797" + "l2=0.0697 f=-0.446 shape=(1, 9000, 1)
logits [[ 3.1071572 -2.5958054  2.5648806 -4.8599634]]
Iteration 700 of 1000: loss=0.847 " + "l1=0.771" + "l2=0.0757 f=-0.442 shape=(1, 9000, 1)
logits [[ 3.0003917 -2.5650854  2.5089056 -4.71149  ]]
Iteration 800 of 1000: loss=0.827 " + "l1=0.743" + "l2=0.0839 f=-0.438 shape=(1, 9000, 1)
logits [[ 2.8811517 -2.533184   2.4522588 -4.5533075]]
Iteration 900 of 1000: loss=0.812 " + "l1=0.723" + "l2=0.0893 f=-0.434 shape=(1, 9000, 1)
logits [[ 2.7987177 -2.5226605  2.4177215 -4.4287896]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.2 " + "l1=10.2" + "l2=0 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.1274443 -2.7962148  2.8465211 -6.07027  ]]
Iteration 100 of 1000: loss=6.87 " + "l1=5.71" + "l2=1.16 f=-0.369 shape=(1, 9000, 1)
logits [[ 2.1730626 -2.3182516  2.1885114 -3.5192516]]
Iteration 200 of 1000: loss=5.72 " + "l1=4.1" + "l2=1.62 f=-0.291 shape=(1, 9000, 1)
logits [[ 1.5706532 -2.0333834  1.701166  -2.402463 ]]
Iteration 300 of 1000: loss=4.89 " + "l1=3.25" + "l2=1.64 f=-0.244 shape=(1, 9000, 1)
logits [[ 1.2706242 -1.94466    1.4721665 -1.7731558]]
Iteration 400 of 1000: loss=4.02 " + "l1=2.09" + "l2=1.93 f=-0.178 shape=(1, 9000, 1)
logits [[ 0.88728166 -1.7809334   1.1364791  -0.95587903]]
Iteration 500 of 1000: loss=3.21 " + "l1=1.1" + "l2=2.12 f=-0.118 shape=(1, 9000, 1)
logits [[ 0.621793   -1.6809468   0.8421048  -0.25539818]]
Iteration 600 of 1000: loss=2.55 " + "l1=0.426" + "l2=2.12 f=-0.0849 shape=(1, 9000, 1)
logits [[ 0.42591575 -1.682879    0.67175436  0.24568373]]
Iteration 700 of 1000: loss=2.17 " + "l1=0.0886" + "l2=2.08 f=-0.0495 shape=(1, 9000, 1)
logits [[ 0.31120738 -1.6610267   0.6202897   0.5316713 ]]
Iteration 800 of 1000: loss=1.95 " + "l1=0.0129" + "l2=1.94 f=-0.0411 shape=(1, 9000, 1)
logits [[ 0.27825472 -1.6750122   0.62268627  0.6097585 ]]
Iteration 900 of 1000: loss=1.8 " + "l1=0.00794" + "l2=1.79 f=-0.0407 shape=(1, 9000, 1)
logits [[ 0.2472705  -1.6724992   0.63510185  0.62715995]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.61 " + "l1=5.61" + "l2=0 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.1274443 -2.7962148  2.8465211 -6.07027  ]]
Iteration 100 of 1000: loss=4.27 " + "l1=3.64" + "l2=0.623 f=-0.414 shape=(1, 9000, 1)
logits [[ 2.480394  -2.4785528  2.4839957 -4.140145 ]]
Iteration 200 of 1000: loss=3.8 " + "l1=3.18" + "l2=0.621 f=-0.386 shape=(1, 9000, 1)
logits [[ 2.1960154 -2.3512125  2.1983237 -3.5873632]]
Iteration 300 of 1000: loss=3.37 " + "l1=2.7" + "l2=0.665 f=-0.332 shape=(1, 9000, 1)
logits [[ 1.9216626 -2.2138188  1.940472  -2.9757373]]
Iteration 400 of 1000: loss=3.07 " + "l1=2.36" + "l2=0.707 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.6924925 -2.1285918  1.7782362 -2.5139303]]
Iteration 500 of 1000: loss=2.84 " + "l1=2.09" + "l2=0.756 f=-0.263 shape=(1, 9000, 1)
logits [[ 1.5047586 -2.0605114  1.6494812 -2.1451013]]
Iteration 600 of 1000: loss=2.58 " + "l1=1.75" + "l2=0.833 f=-0.226 shape=(1, 9000, 1)
logits [[ 1.3348856 -2.039466   1.4883952 -1.6879549]]
Iteration 700 of 1000: loss=2.3 " + "l1=1.41" + "l2=0.885 f=-0.206 shape=(1, 9000, 1)
logits [[ 1.1197693 -2.0101142  1.3201814 -1.2518554]]
Iteration 800 of 1000: loss=1.99 " + "l1=0.991" + "l2=1 f=-0.207 shape=(1, 9000, 1)
logits [[ 0.8170266 -1.9905223  1.0738981 -0.7279508]]
Iteration 900 of 1000: loss=1.73 " + "l1=0.664" + "l2=1.06 f=-0.206 shape=(1, 9000, 1)
logits [[ 0.57578135 -1.9729298   0.8899519  -0.3170079 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=7.9 " + "l1=7.9" + "l2=0 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.1274443 -2.7962148  2.8465211 -6.07027  ]]
Iteration 100 of 1000: loss=5.63 " + "l1=4.8" + "l2=0.837 f=-0.396 shape=(1, 9000, 1)
logits [[ 2.3354676 -2.412638   2.3413832 -3.846592 ]]
Iteration 200 of 1000: loss=4.88 " + "l1=3.81" + "l2=1.07 f=-0.33 shape=(1, 9000, 1)
logits [[ 1.903358  -2.1881838  1.9380418 -2.973642 ]]
Iteration 300 of 1000: loss=4.2 " + "l1=3.11" + "l2=1.1 f=-0.28 shape=(1, 9000, 1)
logits [[ 1.5555074 -2.0577452  1.6953276 -2.313348 ]]
Iteration 400 of 1000: loss=3.74 " + "l1=2.58" + "l2=1.16 f=-0.238 shape=(1, 9000, 1)
logits [[ 1.318527  -1.9691588  1.5110799 -1.8133727]]
Iteration 500 of 1000: loss=3.24 " + "l1=1.84" + "l2=1.4 f=-0.184 shape=(1, 9000, 1)
logits [[ 1.0402695 -1.9104123  1.2532763 -1.1202356]]
Iteration 600 of 1000: loss=2.67 " + "l1=1.12" + "l2=1.54 f=-0.134 shape=(1, 9000, 1)
logits [[ 0.79820967 -1.8018746   0.9590428  -0.4896195 ]]
Iteration 700 of 1000: loss=2.13 " + "l1=0.516" + "l2=1.61 f=-0.112 shape=(1, 9000, 1)
logits [[ 0.55489147 -1.8182796   0.74158305  0.07541224]]
Iteration 800 of 1000: loss=1.6 " + "l1=0.018" + "l2=1.58 f=-0.119 shape=(1, 9000, 1)
logits [[ 0.23196366 -1.8273455   0.5719779   0.54872215]]
Iteration 900 of 1000: loss=1.35 " + "l1=0.0116" + "l2=1.34 f=-0.141 shape=(1, 9000, 1)
logits [[ 0.18768068 -1.8678632   0.565703    0.55076224]]
--- 314.45447063446045 seconds ---
Adv result:3
Loading record A00939
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0116 " + "l1=0.0116" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[ 1.0631552  -0.10182097  0.75788766 -5.503705  ]]
Iteration 100 of 1000: loss=0.00881 " + "l1=0.00726" + "l2=0.00154 f=-0.975 shape=(1, 9000, 1)
logits [[ 0.81706965  0.09057274  0.68858826 -5.4953737 ]]
Iteration 200 of 1000: loss=0.0078 " + "l1=0.00589" + "l2=0.00191 f=-0.984 shape=(1, 9000, 1)
logits [[ 0.7399326   0.15088226  0.66912067 -5.495144  ]]
Iteration 300 of 1000: loss=0.0068 " + "l1=0.0044" + "l2=0.00241 f=-0.994 shape=(1, 9000, 1)
logits [[ 0.65757257  0.21798658  0.64732677 -5.4985332 ]]
Iteration 400 of 1000: loss=0.00606 " + "l1=0.0039" + "l2=0.00216 f=-0.997 shape=(1, 9000, 1)
logits [[ 0.6337008   0.24524467  0.634896   -5.502613  ]]
Iteration 500 of 1000: loss=0.00559 " + "l1=0.00359" + "l2=0.002 f=-0.999 shape=(1, 9000, 1)
logits [[ 0.6217251   0.26381862  0.62270296 -5.5038285 ]]
Iteration 600 of 1000: loss=0.00534 " + "l1=0.00333" + "l2=0.00201 f=-1 shape=(1, 9000, 1)
logits [[ 0.6109053   0.27952027  0.61221397 -5.5028367 ]]
Iteration 700 of 1000: loss=0.00518 " + "l1=0.00306" + "l2=0.00213 f=-1 shape=(1, 9000, 1)
logits [[ 0.5990658   0.2957884   0.60157675 -5.501409  ]]
Iteration 800 of 1000: loss=0.005 " + "l1=0.00273" + "l2=0.00227 f=-1 shape=(1, 9000, 1)
logits [[ 0.5782843   0.31730938  0.5900654  -5.4995008 ]]
Iteration 900 of 1000: loss=0.00487 " + "l1=0.00238" + "l2=0.00249 f=-1.01 shape=(1, 9000, 1)
logits [[ 0.55521476  0.34020764  0.5783441  -5.4968443 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.116 " + "l1=0.116" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[ 1.0631552  -0.10182097  0.75788766 -5.503705  ]]
Iteration 100 of 1000: loss=0.0143 " + "l1=0" + "l2=0.0143 f=-1.04 shape=(1, 9000, 1)
logits [[ 0.31697363  0.52205896  0.5191853  -5.5010343 ]]
Iteration 200 of 1000: loss=0.00908 " + "l1=0" + "l2=0.00908 f=-1.03 shape=(1, 9000, 1)
logits [[ 0.33230487  0.5171483   0.515606   -5.496678  ]]
Iteration 300 of 1000: loss=0.00687 " + "l1=0" + "l2=0.00687 f=-1.03 shape=(1, 9000, 1)
logits [[ 0.3390608   0.51746124  0.5107914  -5.4925265 ]]
Iteration 400 of 1000: loss=0.00567 " + "l1=0" + "l2=0.00567 f=-1.03 shape=(1, 9000, 1)
logits [[ 0.34624934  0.5159094   0.50760084 -5.4888115 ]]
Iteration 500 of 1000: loss=0.00492 " + "l1=0" + "l2=0.00492 f=-1.03 shape=(1, 9000, 1)
logits [[ 0.3538442   0.51234734  0.505935   -5.4834194 ]]
Iteration 600 of 1000: loss=0.00437 " + "l1=0" + "l2=0.00437 f=-1.03 shape=(1, 9000, 1)
logits [[ 0.35620132  0.5122556   0.5033535  -5.478934  ]]
Iteration 700 of 1000: loss=0.00424 " + "l1=0" + "l2=0.00424 f=-1.03 shape=(1, 9000, 1)
logits [[ 0.3464511   0.52155536  0.49861118 -5.474889  ]]
Iteration 800 of 1000: loss=0.00407 " + "l1=0.000488" + "l2=0.00358 f=-1.02 shape=(1, 9000, 1)
logits [[ 0.37580475  0.49947315  0.50435454 -5.4697285 ]]
Iteration 900 of 1000: loss=0.00361 " + "l1=0" + "l2=0.00361 f=-1.02 shape=(1, 9000, 1)
logits [[ 0.35713366  0.5163048   0.4968707  -5.466394  ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0641 " + "l1=0.0641" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[ 1.0631552  -0.10182097  0.75788766 -5.503705  ]]
Iteration 100 of 1000: loss=0.0153 " + "l1=0.000149" + "l2=0.0151 f=-1.04 shape=(1, 9000, 1)
logits [[ 0.32336167  0.51770943  0.5204215  -5.5055294 ]]
Iteration 200 of 1000: loss=0.0093 " + "l1=0" + "l2=0.0093 f=-1.03 shape=(1, 9000, 1)
logits [[ 0.3321955   0.51883733  0.51611716 -5.5020795 ]]
Iteration 300 of 1000: loss=0.00675 " + "l1=0.000115" + "l2=0.00664 f=-1.03 shape=(1, 9000, 1)
logits [[ 0.34938893  0.51170343  0.5138027  -5.4982343 ]]
Iteration 400 of 1000: loss=0.00568 " + "l1=0" + "l2=0.00568 f=-1.03 shape=(1, 9000, 1)
logits [[ 0.3438985   0.52018225  0.50803983 -5.495613  ]]
Iteration 500 of 1000: loss=0.00488 " + "l1=0" + "l2=0.00488 f=-1.03 shape=(1, 9000, 1)
logits [[ 0.3513206  0.5170549  0.5063097 -5.4910755]]
Iteration 600 of 1000: loss=0.00419 " + "l1=0" + "l2=0.00419 f=-1.03 shape=(1, 9000, 1)
logits [[ 0.36557683  0.5072136   0.50718033 -5.485569  ]]
Iteration 700 of 1000: loss=0.00404 " + "l1=0" + "l2=0.00404 f=-1.03 shape=(1, 9000, 1)
logits [[ 0.36195692  0.5113306   0.5039909  -5.481313  ]]
Iteration 800 of 1000: loss=0.00364 " + "l1=0" + "l2=0.00364 f=-1.02 shape=(1, 9000, 1)
logits [[ 0.3720069   0.5042964   0.50419116 -5.476177  ]]
Iteration 900 of 1000: loss=0.00336 " + "l1=0" + "l2=0.00336 f=-1.02 shape=(1, 9000, 1)
logits [[ 0.3716292  0.5063055  0.50154   -5.4719586]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0379 " + "l1=0.0379" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[ 1.0631552  -0.10182097  0.75788766 -5.503705  ]]
Iteration 100 of 1000: loss=0.016 " + "l1=0.00944" + "l2=0.00653 f=-1.01 shape=(1, 9000, 1)
logits [[ 0.57970357  0.30631092  0.59679985 -5.5047126 ]]
Iteration 200 of 1000: loss=0.0116 " + "l1=0.00363" + "l2=0.00798 f=-1.02 shape=(1, 9000, 1)
logits [[ 0.42967933  0.43532258  0.5469835  -5.5076747 ]]
Iteration 300 of 1000: loss=0.00765 " + "l1=0" + "l2=0.00765 f=-1.03 shape=(1, 9000, 1)
logits [[ 0.33845493  0.5180357   0.51555127 -5.506375  ]]
Iteration 400 of 1000: loss=0.00582 " + "l1=0.00012" + "l2=0.0057 f=-1.03 shape=(1, 9000, 1)
logits [[ 0.35563657  0.510302    0.5140039  -5.502731  ]]
Iteration 500 of 1000: loss=0.00494 " + "l1=9.22e-05" + "l2=0.00485 f=-1.03 shape=(1, 9000, 1)
logits [[ 0.3619885  0.5085688  0.5114066 -5.497807 ]]
Iteration 600 of 1000: loss=0.00458 " + "l1=0" + "l2=0.00458 f=-1.03 shape=(1, 9000, 1)
logits [[ 0.35332847  0.51795524  0.50602967 -5.4934897 ]]
Iteration 700 of 1000: loss=0.00413 " + "l1=0" + "l2=0.00413 f=-1.03 shape=(1, 9000, 1)
logits [[ 0.3594247   0.51456463  0.50521076 -5.488566  ]]
Iteration 800 of 1000: loss=0.00361 " + "l1=0" + "l2=0.00361 f=-1.03 shape=(1, 9000, 1)
logits [[ 0.36894593  0.50786316  0.5050606  -5.4830327 ]]
Iteration 900 of 1000: loss=0.00344 " + "l1=0" + "l2=0.00344 f=-1.02 shape=(1, 9000, 1)
logits [[ 0.3745277   0.5046429   0.50364095 -5.477427  ]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0248 " + "l1=0.0248" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[ 1.0631552  -0.10182097  0.75788766 -5.503705  ]]
Iteration 100 of 1000: loss=0.013 " + "l1=0.00811" + "l2=0.00488 f=-0.998 shape=(1, 9000, 1)
logits [[ 0.6289729   0.24798198  0.62940586 -5.497881  ]]
Iteration 200 of 1000: loss=0.0108 " + "l1=0.007" + "l2=0.00376 f=-1 shape=(1, 9000, 1)
logits [[ 0.6092872   0.28124204  0.61059284 -5.505225  ]]
Iteration 300 of 1000: loss=0.00911 " + "l1=0.00495" + "l2=0.00416 f=-1.01 shape=(1, 9000, 1)
logits [[ 0.5380313   0.34837967  0.5813231  -5.506873  ]]
Iteration 400 of 1000: loss=0.0074 " + "l1=0.00251" + "l2=0.00489 f=-1.02 shape=(1, 9000, 1)
logits [[ 0.44630405  0.42964482  0.5478463  -5.507719  ]]
Iteration 500 of 1000: loss=0.00584 " + "l1=0.000236" + "l2=0.0056 f=-1.03 shape=(1, 9000, 1)
logits [[ 0.35964763  0.50657964  0.51767606 -5.5059175 ]]
Iteration 600 of 1000: loss=0.00492 " + "l1=8.51e-05" + "l2=0.00484 f=-1.03 shape=(1, 9000, 1)
logits [[ 0.36063012  0.509235    0.5132406  -5.499687  ]]
Iteration 700 of 1000: loss=0.00439 " + "l1=0" + "l2=0.00439 f=-1.03 shape=(1, 9000, 1)
logits [[ 0.35741916  0.5143926   0.5090158  -5.4951887 ]]
Iteration 800 of 1000: loss=0.00397 " + "l1=0" + "l2=0.00397 f=-1.03 shape=(1, 9000, 1)
logits [[ 0.36435217  0.5097977   0.5081654  -5.489379  ]]
Iteration 900 of 1000: loss=0.00364 " + "l1=0" + "l2=0.00364 f=-1.03 shape=(1, 9000, 1)
logits [[ 0.36736944  0.50855124  0.50614    -5.4839234 ]]
--- 314.0276188850403 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00305 " + "l1=0.00305" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[ 1.0631552  -0.10182097  0.75788766 -5.503705  ]]
Iteration 100 of 1000: loss=0.00239 " + "l1=0.002" + "l2=0.000387 f=-0.959 shape=(1, 9000, 1)
logits [[ 0.94217014 -0.02529998  0.7417758  -5.496236  ]]
Iteration 200 of 1000: loss=0.00218 " + "l1=0.00175" + "l2=0.000435 f=-0.962 shape=(1, 9000, 1)
logits [[ 0.9142735  -0.00658622  0.7395034  -5.4967227 ]]
Iteration 300 of 1000: loss=0.002 " + "l1=0.00146" + "l2=0.000538 f=-0.966 shape=(1, 9000, 1)
logits [[ 0.88257337  0.01404287  0.73675376 -5.4968605 ]]
Iteration 400 of 1000: loss=0.00183 " + "l1=0.00119" + "l2=0.000642 f=-0.969 shape=(1, 9000, 1)
logits [[ 0.85364205  0.03228983  0.7347413  -5.497041  ]]
Iteration 500 of 1000: loss=0.00169 " + "l1=0.000912" + "l2=0.000774 f=-0.972 shape=(1, 9000, 1)
logits [[ 0.823993    0.05167028  0.73276615 -5.49819   ]]
Iteration 600 of 1000: loss=0.00154 " + "l1=0.000636" + "l2=0.0009 f=-0.976 shape=(1, 9000, 1)
logits [[ 0.7950916   0.07019129  0.7314682  -5.4989758 ]]
Iteration 700 of 1000: loss=0.00144 " + "l1=0.000364" + "l2=0.00108 f=-0.979 shape=(1, 9000, 1)
logits [[ 0.76652557  0.08842795  0.73011667 -5.499415  ]]
Iteration 800 of 1000: loss=0.00133 " + "l1=9.12e-05" + "l2=0.00123 f=-0.981 shape=(1, 9000, 1)
logits [[ 0.73814726  0.10639191  0.7290241  -5.499347  ]]
Iteration 900 of 1000: loss=0.00123 " + "l1=1.14e-05" + "l2=0.00122 f=-0.982 shape=(1, 9000, 1)
logits [[ 0.73171544  0.11002328  0.73057836 -5.500628  ]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.00153 " + "l1=0.00153" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[ 1.0631552  -0.10182097  0.75788766 -5.503705  ]]
Iteration 100 of 1000: loss=0.00135 " + "l1=0.00122" + "l2=0.000134 f=-0.954 shape=(1, 9000, 1)
logits [[ 0.9925202  -0.05799811  0.7486965  -5.4989924 ]]
Iteration 200 of 1000: loss=0.00131 " + "l1=0.00118" + "l2=0.000131 f=-0.955 shape=(1, 9000, 1)
logits [[ 0.98411095 -0.05210518  0.74833095 -5.4993315 ]]
Iteration 300 of 1000: loss=0.00128 " + "l1=0.00112" + "l2=0.000167 f=-0.956 shape=(1, 9000, 1)
logits [[ 0.97065735 -0.04321433  0.74735296 -5.499592  ]]
Iteration 400 of 1000: loss=0.00127 " + "l1=0.00105" + "l2=0.000216 f=-0.958 shape=(1, 9000, 1)
logits [[ 0.9567409  -0.03402766  0.7462242  -5.499926  ]]
Iteration 500 of 1000: loss=0.00127 " + "l1=0.00099" + "l2=0.000278 f=-0.959 shape=(1, 9000, 1)
logits [[ 0.9430227  -0.02489659  0.745063   -5.5002255 ]]
const [0.0075]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.00229 " + "l1=0.00229" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[ 1.0631552  -0.10182097  0.75788766 -5.503705  ]]
Iteration 100 of 1000: loss=0.00191 " + "l1=0.00167" + "l2=0.000245 f=-0.957 shape=(1, 9000, 1)
logits [[ 0.967355   -0.04162365  0.7453204  -5.497462  ]]
Iteration 200 of 1000: loss=0.00179 " + "l1=0.00154" + "l2=0.000249 f=-0.958 shape=(1, 9000, 1)
logits [[ 0.94969916 -0.02971275  0.74417037 -5.4979343 ]]
Iteration 300 of 1000: loss=0.00171 " + "l1=0.00139" + "l2=0.000316 f=-0.961 shape=(1, 9000, 1)
logits [[ 0.9278898  -0.01538541  0.74245757 -5.4982996 ]]
Iteration 400 of 1000: loss=0.00161 " + "l1=0.00123" + "l2=0.000375 f=-0.963 shape=(1, 9000, 1)
logits [[ 9.049958e-01 -4.172530e-04  7.405370e-01 -5.498498e+00]]
Iteration 500 of 1000: loss=0.00153 " + "l1=0.00108" + "l2=0.000446 f=-0.966 shape=(1, 9000, 1)
logits [[ 0.8834953   0.01328182  0.7389499  -5.498515  ]]
Iteration 600 of 1000: loss=0.00148 " + "l1=0.000944" + "l2=0.000535 f=-0.968 shape=(1, 9000, 1)
logits [[ 0.8632983  0.0261154  0.7374733 -5.498644 ]]
Iteration 700 of 1000: loss=0.00148 " + "l1=0.0008" + "l2=0.00068 f=-0.97 shape=(1, 9000, 1)
logits [[ 0.8429139   0.03912997  0.7362101  -5.4990263 ]]
const [0.00625]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00191 " + "l1=0.00191" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[ 1.0631552  -0.10182097  0.75788766 -5.503705  ]]
Iteration 100 of 1000: loss=0.00164 " + "l1=0.00145" + "l2=0.000186 f=-0.955 shape=(1, 9000, 1)
logits [[ 0.97919273 -0.04925714  0.7469638  -5.4982877 ]]
Iteration 200 of 1000: loss=0.00155 " + "l1=0.00138" + "l2=0.000177 f=-0.957 shape=(1, 9000, 1)
logits [[ 0.96635807 -0.04039661  0.7462072  -5.498761  ]]
Iteration 300 of 1000: loss=0.0015 " + "l1=0.00128" + "l2=0.000228 f=-0.959 shape=(1, 9000, 1)
logits [[ 0.94882977 -0.02883791  0.74481046 -5.4991283 ]]
Iteration 400 of 1000: loss=0.00147 " + "l1=0.00117" + "l2=0.000302 f=-0.961 shape=(1, 9000, 1)
logits [[ 0.93083787 -0.01700558  0.74334437 -5.499416  ]]
Iteration 500 of 1000: loss=0.00144 " + "l1=0.00107" + "l2=0.000379 f=-0.963 shape=(1, 9000, 1)
logits [[ 9.1229522e-01 -4.8837494e-03  7.4182600e-01 -5.4995971e+00]]
Iteration 600 of 1000: loss=0.00148 " + "l1=0.000966" + "l2=0.00051 f=-0.964 shape=(1, 9000, 1)
logits [[ 0.8951018   0.00604778  0.74057674 -5.4995418 ]]
const [0.006875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0021 " + "l1=0.0021" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[ 1.0631552  -0.10182097  0.75788766 -5.503705  ]]
Iteration 100 of 1000: loss=0.00177 " + "l1=0.00156" + "l2=0.000217 f=-0.956 shape=(1, 9000, 1)
logits [[ 0.9724327  -0.04477631  0.74592274 -5.4980125 ]]
Iteration 200 of 1000: loss=0.00167 " + "l1=0.00146" + "l2=0.000213 f=-0.958 shape=(1, 9000, 1)
logits [[ 0.9575974  -0.03474551  0.7451672  -5.4983726 ]]
Iteration 300 of 1000: loss=0.0016 " + "l1=0.00134" + "l2=0.00026 f=-0.96 shape=(1, 9000, 1)
logits [[ 0.9380591  -0.02191136  0.7436909  -5.4987435 ]]
Iteration 400 of 1000: loss=0.00154 " + "l1=0.00121" + "l2=0.000335 f=-0.962 shape=(1, 9000, 1)
logits [[ 0.91753554 -0.00846914  0.7420023  -5.498931  ]]
Iteration 500 of 1000: loss=0.00153 " + "l1=0.00108" + "l2=0.000453 f=-0.964 shape=(1, 9000, 1)
logits [[ 8.9731461e-01  4.6409015e-03  7.4031270e-01 -5.4989867e+00]]
Iteration 600 of 1000: loss=0.0015 " + "l1=0.000961" + "l2=0.00054 f=-0.966 shape=(1, 9000, 1)
logits [[ 0.87886035  0.01624199  0.7390944  -5.499019  ]]
Iteration 700 of 1000: loss=0.0015 " + "l1=0.000845" + "l2=0.000652 f=-0.968 shape=(1, 9000, 1)
logits [[ 0.8608438   0.02752207  0.73795563 -5.4989834 ]]
Iteration 800 of 1000: loss=0.00144 " + "l1=0.000731" + "l2=0.000713 f=-0.97 shape=(1, 9000, 1)
logits [[ 0.8433339   0.03865281  0.7370395  -5.499403  ]]
Iteration 900 of 1000: loss=0.00144 " + "l1=0.000621" + "l2=0.000817 f=-0.972 shape=(1, 9000, 1)
logits [[ 0.82660097  0.04927495  0.7363323  -5.4998736 ]]
--- 243.4667387008667 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0657 " + "l1=0.0657" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[ 1.0631552  -0.10182097  0.75788766 -5.503705  ]]
Iteration 100 of 1000: loss=0.0643 " + "l1=0.0634" + "l2=0.000816 f=-0.959 shape=(1, 9000, 1)
logits [[ 8.9824164e-01  1.1016335e-03  7.1315819e-01 -5.4465189e+00]]
Iteration 200 of 1000: loss=0.0638 " + "l1=0.0629" + "l2=0.000951 f=-0.961 shape=(1, 9000, 1)
logits [[ 0.8561287   0.02809182  0.7021097  -5.43198   ]]
Iteration 300 of 1000: loss=0.0634 " + "l1=0.0623" + "l2=0.00111 f=-0.964 shape=(1, 9000, 1)
logits [[ 0.81303334  0.05619279  0.68999994 -5.415546  ]]
Iteration 400 of 1000: loss=0.063 " + "l1=0.0617" + "l2=0.00134 f=-0.967 shape=(1, 9000, 1)
logits [[ 0.77160937  0.08374231  0.6777064  -5.3992558 ]]
Iteration 500 of 1000: loss=0.0627 " + "l1=0.0612" + "l2=0.0015 f=-0.969 shape=(1, 9000, 1)
logits [[ 0.73303294  0.10998016  0.6650992  -5.3839617 ]]
Iteration 600 of 1000: loss=0.0624 " + "l1=0.0606" + "l2=0.0018 f=-0.972 shape=(1, 9000, 1)
logits [[ 0.68965113  0.13909684  0.6530331  -5.368028  ]]
Iteration 700 of 1000: loss=0.0621 " + "l1=0.06" + "l2=0.00202 f=-0.974 shape=(1, 9000, 1)
logits [[ 0.6490955   0.16645005  0.6414831  -5.353469  ]]
Iteration 800 of 1000: loss=0.0618 " + "l1=0.0597" + "l2=0.00204 f=-0.974 shape=(1, 9000, 1)
logits [[ 0.6343185   0.17714834  0.6333723  -5.3397956 ]]
Iteration 900 of 1000: loss=0.0617 " + "l1=0.0595" + "l2=0.00214 f=-0.973 shape=(1, 9000, 1)
logits [[ 0.6272392   0.18329465  0.6256468  -5.32649   ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.657 " + "l1=0.657" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[ 1.0631552  -0.10182097  0.75788766 -5.503705  ]]
Iteration 100 of 1000: loss=0.581 " + "l1=0.56" + "l2=0.0214 f=-0.956 shape=(1, 9000, 1)
logits [[ 0.5187561   0.21651067  0.51947796 -5.079392  ]]
Iteration 200 of 1000: loss=0.558 " + "l1=0.528" + "l2=0.0296 f=-0.941 shape=(1, 9000, 1)
logits [[ 0.37003818  0.3099858   0.419395   -4.864975  ]]
Iteration 300 of 1000: loss=0.537 " + "l1=0.502" + "l2=0.0348 f=-0.917 shape=(1, 9000, 1)
logits [[ 0.3102608   0.3327542   0.35479823 -4.6647367 ]]
Iteration 400 of 1000: loss=0.519 " + "l1=0.482" + "l2=0.0377 f=-0.891 shape=(1, 9000, 1)
logits [[ 0.3024306   0.31342614  0.31894073 -4.4991584 ]]
Iteration 500 of 1000: loss=0.506 " + "l1=0.464" + "l2=0.042 f=-0.871 shape=(1, 9000, 1)
logits [[ 0.26813188  0.2935555   0.29827988 -4.344967  ]]
Iteration 600 of 1000: loss=0.495 " + "l1=0.448" + "l2=0.0468 f=-0.848 shape=(1, 9000, 1)
logits [[ 0.2670036   0.2588597   0.28123462 -4.1982636 ]]
Iteration 700 of 1000: loss=0.483 " + "l1=0.431" + "l2=0.0525 f=-0.827 shape=(1, 9000, 1)
logits [[ 0.25008774  0.23199694  0.257638   -4.047825  ]]
Iteration 800 of 1000: loss=0.471 " + "l1=0.414" + "l2=0.0576 f=-0.807 shape=(1, 9000, 1)
logits [[ 0.22983783  0.21889636  0.23050207 -3.9069197 ]]
Iteration 900 of 1000: loss=0.46 " + "l1=0.397" + "l2=0.0623 f=-0.787 shape=(1, 9000, 1)
logits [[ 0.2089436  0.19579    0.209878  -3.762982 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.57 " + "l1=6.57" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[ 1.0631552  -0.10182097  0.75788766 -5.503705  ]]
Iteration 100 of 1000: loss=3.36 " + "l1=2.09" + "l2=1.27 f=-0.649 shape=(1, 9000, 1)
logits [[-0.22689417 -0.11700638 -0.08212746 -2.1708    ]]
Iteration 200 of 1000: loss=1.59 " + "l1=0.0607" + "l2=1.53 f=-0.493 shape=(1, 9000, 1)
logits [[-0.4844053  -0.47582054 -0.47537798 -0.5360739 ]]
Iteration 300 of 1000: loss=1.16 " + "l1=0" + "l2=1.16 f=-0.497 shape=(1, 9000, 1)
logits [[-0.51763606 -0.4963954  -0.48976246 -0.4848562 ]]
Iteration 400 of 1000: loss=0.992 " + "l1=0.00644" + "l2=0.986 f=-0.485 shape=(1, 9000, 1)
logits [[-0.49742618 -0.47256207 -0.4916251  -0.47900134]]
Iteration 500 of 1000: loss=0.884 " + "l1=0" + "l2=0.884 f=-0.48 shape=(1, 9000, 1)
logits [[-0.4773389  -0.48044568 -0.49446338 -0.46833158]]
Iteration 600 of 1000: loss=0.831 " + "l1=0" + "l2=0.831 f=-0.477 shape=(1, 9000, 1)
logits [[-0.5037786  -0.46808714 -0.49374077 -0.44148666]]
Iteration 700 of 1000: loss=0.799 " + "l1=0" + "l2=0.799 f=-0.469 shape=(1, 9000, 1)
logits [[-0.4844847  -0.49976766 -0.47632933 -0.4163186 ]]
Iteration 800 of 1000: loss=0.752 " + "l1=0" + "l2=0.752 f=-0.472 shape=(1, 9000, 1)
logits [[-0.49116537 -0.4826097  -0.4709098  -0.44276673]]
Iteration 900 of 1000: loss=0.728 " + "l1=0" + "l2=0.728 f=-0.466 shape=(1, 9000, 1)
logits [[-0.46675503 -0.51001304 -0.4565109  -0.42918178]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.61 " + "l1=3.61" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[ 1.0631552  -0.10182097  0.75788766 -5.503705  ]]
Iteration 100 of 1000: loss=2.41 " + "l1=1.98" + "l2=0.426 f=-0.763 shape=(1, 9000, 1)
logits [[ 0.06507333  0.14935799  0.17161144 -3.4367578 ]]
Iteration 200 of 1000: loss=1.84 " + "l1=1.15" + "l2=0.692 f=-0.65 shape=(1, 9000, 1)
logits [[-0.15609896 -0.11748881 -0.12165526 -2.2039747 ]]
Iteration 300 of 1000: loss=1.26 " + "l1=0.29" + "l2=0.965 f=-0.527 shape=(1, 9000, 1)
logits [[-0.40767285 -0.395886   -0.38733652 -0.9151211 ]]
Iteration 400 of 1000: loss=0.88 " + "l1=0.0043" + "l2=0.876 f=-0.482 shape=(1, 9000, 1)
logits [[-0.47963896 -0.48644912 -0.4770489  -0.48485982]]
Iteration 500 of 1000: loss=0.774 " + "l1=0.000605" + "l2=0.773 f=-0.475 shape=(1, 9000, 1)
logits [[-0.47411156 -0.49583435 -0.4648753  -0.4659761 ]]
Iteration 600 of 1000: loss=0.712 " + "l1=0" + "l2=0.712 f=-0.47 shape=(1, 9000, 1)
logits [[-0.5014294  -0.46417928 -0.47363815 -0.44187212]]
Iteration 700 of 1000: loss=0.661 " + "l1=0.00875" + "l2=0.652 f=-0.469 shape=(1, 9000, 1)
logits [[-0.48334768 -0.45452693 -0.46861556 -0.47043705]]
Iteration 800 of 1000: loss=0.624 " + "l1=0" + "l2=0.624 f=-0.462 shape=(1, 9000, 1)
logits [[-0.47410384 -0.46138692 -0.46728933 -0.44541895]]
Iteration 900 of 1000: loss=0.595 " + "l1=0.0024" + "l2=0.593 f=-0.46 shape=(1, 9000, 1)
logits [[-0.47744086 -0.44604623 -0.46785814 -0.4504117 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.13 " + "l1=2.13" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[ 1.0631552  -0.10182097  0.75788766 -5.503705  ]]
Iteration 100 of 1000: loss=1.62 " + "l1=1.45" + "l2=0.167 f=-0.862 shape=(1, 9000, 1)
logits [[ 0.14272505  0.2873799   0.2958464  -4.1751356 ]]
Iteration 200 of 1000: loss=1.43 " + "l1=1.2" + "l2=0.228 f=-0.764 shape=(1, 9000, 1)
logits [[ 0.12457359  0.14764415  0.18318397 -3.5094352 ]]
Iteration 300 of 1000: loss=1.25 " + "l1=0.94" + "l2=0.306 f=-0.712 shape=(1, 9000, 1)
logits [[-0.04654188  0.03345004  0.0234753  -2.859345  ]]
Iteration 400 of 1000: loss=1.05 " + "l1=0.655" + "l2=0.4 f=-0.64 shape=(1, 9000, 1)
logits [[-0.1477251  -0.1319383  -0.13366404 -2.145881  ]]
Iteration 500 of 1000: loss=0.903 " + "l1=0.409" + "l2=0.495 f=-0.575 shape=(1, 9000, 1)
logits [[-0.2792479  -0.24925019 -0.263731   -1.507673  ]]
Iteration 600 of 1000: loss=0.764 " + "l1=0.148" + "l2=0.616 f=-0.512 shape=(1, 9000, 1)
logits [[-0.42580724 -0.38068354 -0.4062376  -0.83667415]]
Iteration 700 of 1000: loss=0.648 " + "l1=0.000145" + "l2=0.648 f=-0.456 shape=(1, 9000, 1)
logits [[-0.47648495 -0.44454792 -0.45843813 -0.4449926 ]]
Iteration 800 of 1000: loss=0.587 " + "l1=0.00977" + "l2=0.577 f=-0.446 shape=(1, 9000, 1)
logits [[-0.42503482 -0.46450415 -0.44058856 -0.45510632]]
Iteration 900 of 1000: loss=0.537 " + "l1=0.00937" + "l2=0.527 f=-0.448 shape=(1, 9000, 1)
logits [[-0.46000278 -0.42580554 -0.45043847 -0.4546438 ]]
--- 316.50352668762207 seconds ---
Adv result:3
Loading record A00951
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.042 " + "l1=0.042" + "l2=0 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.1268456 -1.0737029  1.5730982 -5.670235 ]]
Iteration 100 of 1000: loss=0.0415 " + "l1=0.041" + "l2=0.000422 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.0738902 -1.0296335  1.5499005 -5.6313167]]
Iteration 200 of 1000: loss=0.0413 " + "l1=0.0409" + "l2=0.000404 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.0676684 -1.0242318  1.5465624 -5.624923 ]]
Iteration 300 of 1000: loss=0.0412 " + "l1=0.0408" + "l2=0.000488 f=-0.508 shape=(1, 9000, 1)
logits [[ 3.0582933 -1.0168056  1.5422271 -5.6163964]]
Iteration 400 of 1000: loss=0.0412 " + "l1=0.0406" + "l2=0.000587 f=-0.508 shape=(1, 9000, 1)
logits [[ 3.0485933 -1.0096478  1.5379632 -5.60758  ]]
Iteration 500 of 1000: loss=0.0411 " + "l1=0.0404" + "l2=0.000678 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.0393147 -1.0024873  1.5336609 -5.5992503]]
Iteration 600 of 1000: loss=0.041 " + "l1=0.0403" + "l2=0.000782 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.0304954  -0.99574846  1.5295454  -5.5916157 ]]
Iteration 700 of 1000: loss=0.041 " + "l1=0.0401" + "l2=0.000882 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.0220137 -0.989585   1.5256598 -5.584395 ]]
Iteration 800 of 1000: loss=0.041 " + "l1=0.04" + "l2=0.001 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.0135787  -0.98344105  1.5217685  -5.577392  ]]
Iteration 900 of 1000: loss=0.0409 " + "l1=0.0398" + "l2=0.00108 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.0052843 -0.9768077  1.5176097 -5.570654 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.42 " + "l1=0.42" + "l2=0 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.1268456 -1.0737029  1.5730982 -5.670235 ]]
Iteration 100 of 1000: loss=0.371 " + "l1=0.342" + "l2=0.0292 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.6854587 -0.7303398  1.38894   -5.403081 ]]
Iteration 200 of 1000: loss=0.35 " + "l1=0.308" + "l2=0.0422 f=-0.522 shape=(1, 9000, 1)
logits [[ 2.4866128  -0.59237427  1.327569   -5.3089294 ]]
Iteration 300 of 1000: loss=0.333 " + "l1=0.283" + "l2=0.0498 f=-0.525 shape=(1, 9000, 1)
logits [[ 2.3261557 -0.5065576  1.2839618 -5.20514  ]]
Iteration 400 of 1000: loss=0.316 " + "l1=0.26" + "l2=0.0553 f=-0.528 shape=(1, 9000, 1)
logits [[ 2.1754727  -0.42830795  1.2414231  -5.1010275 ]]
Iteration 500 of 1000: loss=0.301 " + "l1=0.24" + "l2=0.061 f=-0.528 shape=(1, 9000, 1)
logits [[ 2.0378852  -0.36650953  1.2082251  -4.991816  ]]
Iteration 600 of 1000: loss=0.291 " + "l1=0.226" + "l2=0.0644 f=-0.526 shape=(1, 9000, 1)
logits [[ 1.93505    -0.32629555  1.1823189  -4.8964376 ]]
Iteration 700 of 1000: loss=0.281 " + "l1=0.21" + "l2=0.0709 f=-0.528 shape=(1, 9000, 1)
logits [[ 1.8161452  -0.28840816  1.1542698  -4.7930117 ]]
Iteration 800 of 1000: loss=0.273 " + "l1=0.197" + "l2=0.0753 f=-0.529 shape=(1, 9000, 1)
logits [[ 1.7149886 -0.2588593  1.1264358 -4.698772 ]]
Iteration 900 of 1000: loss=0.263 " + "l1=0.184" + "l2=0.0788 f=-0.528 shape=(1, 9000, 1)
logits [[ 1.6116713  -0.22644514  1.0997841  -4.5955524 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.2 " + "l1=4.2" + "l2=0 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.1268456 -1.0737029  1.5730982 -5.670235 ]]
Iteration 100 of 1000: loss=1.05 " + "l1=0.257" + "l2=0.789 f=-0.594 shape=(1, 9000, 1)
logits [[ 0.73760474  0.48355     0.7409942  -4.3368397 ]]
Iteration 200 of 1000: loss=0.606 " + "l1=0.0034" + "l2=0.603 f=-0.582 shape=(1, 9000, 1)
logits [[ 0.5973622   0.62517786  0.62857425 -4.1804643 ]]
Iteration 300 of 1000: loss=0.498 " + "l1=0" + "l2=0.498 f=-0.564 shape=(1, 9000, 1)
logits [[ 0.57996595  0.6278681   0.6198472  -4.085289  ]]
Iteration 400 of 1000: loss=0.428 " + "l1=0.00151" + "l2=0.427 f=-0.548 shape=(1, 9000, 1)
logits [[ 0.5982007   0.6188295   0.62034315 -4.0312943 ]]
Iteration 500 of 1000: loss=0.387 " + "l1=0.00638" + "l2=0.381 f=-0.538 shape=(1, 9000, 1)
logits [[ 0.6037054  0.6089386  0.615317  -3.9811532]]
Iteration 600 of 1000: loss=0.354 " + "l1=0" + "l2=0.354 f=-0.537 shape=(1, 9000, 1)
logits [[ 0.56978166  0.61097425  0.6001572  -3.9281862 ]]
Iteration 700 of 1000: loss=0.321 " + "l1=0" + "l2=0.321 f=-0.534 shape=(1, 9000, 1)
logits [[ 0.563632   0.5916002  0.590747  -3.8816094]]
Iteration 800 of 1000: loss=0.301 " + "l1=1.32e-05" + "l2=0.301 f=-0.529 shape=(1, 9000, 1)
logits [[ 0.57331586  0.57944566  0.57945883 -3.8462782 ]]
Iteration 900 of 1000: loss=0.292 " + "l1=0" + "l2=0.292 f=-0.525 shape=(1, 9000, 1)
logits [[ 0.53282464  0.5796941   0.56761944 -3.7819693 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.31 " + "l1=2.31" + "l2=0 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.1268456 -1.0737029  1.5730982 -5.670235 ]]
Iteration 100 of 1000: loss=0.949 " + "l1=0.379" + "l2=0.569 f=-0.582 shape=(1, 9000, 1)
logits [[ 0.91497064  0.23125838  0.9208375  -4.3966823 ]]
Iteration 200 of 1000: loss=0.647 " + "l1=0.166" + "l2=0.481 f=-0.577 shape=(1, 9000, 1)
logits [[ 0.74519354  0.45353144  0.75563604 -4.2610993 ]]
Iteration 300 of 1000: loss=0.504 " + "l1=0.0516" + "l2=0.452 f=-0.564 shape=(1, 9000, 1)
logits [[ 0.6243752   0.563318    0.65712315 -4.1022487 ]]
Iteration 400 of 1000: loss=0.415 " + "l1=0.0024" + "l2=0.412 f=-0.545 shape=(1, 9000, 1)
logits [[ 0.59841406  0.5965664   0.6009276  -3.974882  ]]
Iteration 500 of 1000: loss=0.375 " + "l1=0.0042" + "l2=0.37 f=-0.539 shape=(1, 9000, 1)
logits [[ 0.57645744  0.5841344   0.5917627  -3.908635  ]]
Iteration 600 of 1000: loss=0.345 " + "l1=0.00208" + "l2=0.343 f=-0.533 shape=(1, 9000, 1)
logits [[ 0.5596537  0.5756246  0.5794125 -3.846872 ]]
Iteration 700 of 1000: loss=0.316 " + "l1=0.00033" + "l2=0.316 f=-0.528 shape=(1, 9000, 1)
logits [[ 0.5459832   0.56122077  0.56182116 -3.7805371 ]]
Iteration 800 of 1000: loss=0.296 " + "l1=0.00223" + "l2=0.294 f=-0.524 shape=(1, 9000, 1)
logits [[ 0.53889024  0.5436177   0.5476724  -3.7266166 ]]
Iteration 900 of 1000: loss=0.28 " + "l1=0" + "l2=0.28 f=-0.523 shape=(1, 9000, 1)
logits [[ 0.51921946  0.5357341   0.5318738  -3.679963  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.37 " + "l1=1.37" + "l2=0 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.1268456 -1.0737029  1.5730982 -5.670235 ]]
Iteration 100 of 1000: loss=0.85 " + "l1=0.566" + "l2=0.284 f=-0.555 shape=(1, 9000, 1)
logits [[ 1.611002   -0.13015406  1.111146   -4.811582  ]]
Iteration 200 of 1000: loss=0.615 " + "l1=0.241" + "l2=0.375 f=-0.577 shape=(1, 9000, 1)
logits [[ 0.9234929  0.1833692  0.9201732 -4.335215 ]]
Iteration 300 of 1000: loss=0.5 " + "l1=0.172" + "l2=0.328 f=-0.563 shape=(1, 9000, 1)
logits [[ 0.84727263  0.3165749   0.84663516 -4.2618012 ]]
Iteration 400 of 1000: loss=0.431 " + "l1=0.122" + "l2=0.309 f=-0.553 shape=(1, 9000, 1)
logits [[ 0.7711649   0.4056979   0.78131586 -4.1688776 ]]
Iteration 500 of 1000: loss=0.391 " + "l1=0.0974" + "l2=0.294 f=-0.547 shape=(1, 9000, 1)
logits [[ 0.73487484  0.44177318  0.74135256 -4.1064086 ]]
Iteration 600 of 1000: loss=0.364 " + "l1=0.0769" + "l2=0.287 f=-0.542 shape=(1, 9000, 1)
logits [[ 0.6918814   0.46609992  0.702709   -4.028635  ]]
Iteration 700 of 1000: loss=0.348 " + "l1=0.0662" + "l2=0.281 f=-0.538 shape=(1, 9000, 1)
logits [[ 0.66602933  0.4749509   0.6786528  -3.972055  ]]
Iteration 800 of 1000: loss=0.332 " + "l1=0.0523" + "l2=0.279 f=-0.535 shape=(1, 9000, 1)
logits [[ 0.63342595  0.48973987  0.65079796 -3.9133277 ]]
Iteration 900 of 1000: loss=0.314 " + "l1=0.036" + "l2=0.278 f=-0.53 shape=(1, 9000, 1)
logits [[ 0.5987742   0.50109965  0.611783   -3.830808  ]]
--- 315.71055912971497 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0155 " + "l1=0.0155" + "l2=0 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.1268456 -1.0737029  1.5730982 -5.670235 ]]
Iteration 100 of 1000: loss=0.0153 " + "l1=0.0151" + "l2=0.000199 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.0935907 -1.0751379  1.5788536 -5.643428 ]]
Iteration 200 of 1000: loss=0.0153 " + "l1=0.0151" + "l2=0.000152 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.0920124 -1.0750893  1.5788574 -5.641598 ]]
Iteration 300 of 1000: loss=0.0152 " + "l1=0.0151" + "l2=0.000169 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.08772   -1.0752188  1.5796574 -5.637613 ]]
Iteration 400 of 1000: loss=0.0152 " + "l1=0.015" + "l2=0.000219 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.0827947 -1.07536    1.5805434 -5.633116 ]]
Iteration 500 of 1000: loss=0.0153 " + "l1=0.015" + "l2=0.000289 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.0775533 -1.0755955  1.5814712 -5.628424 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.155 " + "l1=0.155" + "l2=0 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.1268456 -1.0737029  1.5730982 -5.670235 ]]
Iteration 100 of 1000: loss=0.138 " + "l1=0.128" + "l2=0.00958 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.9021475 -1.08834    1.6198629 -5.5036373]]
Iteration 200 of 1000: loss=0.132 " + "l1=0.119" + "l2=0.0122 f=-0.518 shape=(1, 9000, 1)
logits [[ 2.8272038 -1.0938842  1.6334981 -5.440294 ]]
Iteration 300 of 1000: loss=0.126 " + "l1=0.112" + "l2=0.0143 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.7588694 -1.0908375  1.6429905 -5.3799148]]
Iteration 400 of 1000: loss=0.121 " + "l1=0.104" + "l2=0.0161 f=-0.517 shape=(1, 9000, 1)
logits [[ 2.7038538 -1.0989246  1.6593678 -5.3324795]]
Iteration 500 of 1000: loss=0.116 " + "l1=0.0981" + "l2=0.0175 f=-0.518 shape=(1, 9000, 1)
logits [[ 2.6505327 -1.1043788  1.6698654 -5.2860193]]
Iteration 600 of 1000: loss=0.11 " + "l1=0.0913" + "l2=0.0192 f=-0.519 shape=(1, 9000, 1)
logits [[ 2.5902097 -1.1071305  1.6773925 -5.237814 ]]
Iteration 700 of 1000: loss=0.105 " + "l1=0.0839" + "l2=0.0209 f=-0.523 shape=(1, 9000, 1)
logits [[ 2.5216022 -1.1067649  1.6829923 -5.1892443]]
Iteration 800 of 1000: loss=0.0987 " + "l1=0.0758" + "l2=0.0229 f=-0.527 shape=(1, 9000, 1)
logits [[ 2.4420211 -1.1012908  1.6838284 -5.130579 ]]
Iteration 900 of 1000: loss=0.0926 " + "l1=0.0679" + "l2=0.0246 f=-0.531 shape=(1, 9000, 1)
logits [[ 2.357429  -1.0908698  1.6781204 -5.068262 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.55 " + "l1=1.55" + "l2=0 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.1268456 -1.0737029  1.5730982 -5.670235 ]]
Iteration 100 of 1000: loss=0.334 " + "l1=0.00918" + "l2=0.325 f=-0.562 shape=(1, 9000, 1)
logits [[ 1.7097471 -0.9417862  1.700563  -4.715176 ]]
Iteration 200 of 1000: loss=0.228 " + "l1=0.0017" + "l2=0.226 f=-0.562 shape=(1, 9000, 1)
logits [[ 1.6952113  -0.93854755  1.693516   -4.698872  ]]
Iteration 300 of 1000: loss=0.18 " + "l1=0.00765" + "l2=0.173 f=-0.555 shape=(1, 9000, 1)
logits [[ 1.6879723 -0.9386671  1.6803253 -4.6514363]]
Iteration 400 of 1000: loss=0.144 " + "l1=0" + "l2=0.144 f=-0.554 shape=(1, 9000, 1)
logits [[ 1.657915  -0.9470877  1.6683475 -4.594061 ]]
Iteration 500 of 1000: loss=0.115 " + "l1=0" + "l2=0.115 f=-0.553 shape=(1, 9000, 1)
logits [[ 1.646607  -0.9459558  1.649332  -4.561014 ]]
Iteration 600 of 1000: loss=0.0949 " + "l1=0" + "l2=0.0949 f=-0.557 shape=(1, 9000, 1)
logits [[ 1.6273638  -0.95772415  1.6363087  -4.532728  ]]
Iteration 700 of 1000: loss=0.0809 " + "l1=0" + "l2=0.0809 f=-0.561 shape=(1, 9000, 1)
logits [[ 1.6144316  -0.97064435  1.622728   -4.511323  ]]
Iteration 800 of 1000: loss=0.0705 " + "l1=0" + "l2=0.0705 f=-0.565 shape=(1, 9000, 1)
logits [[ 1.6065826  -0.98690575  1.6137537  -4.492271  ]]
Iteration 900 of 1000: loss=0.0632 " + "l1=0" + "l2=0.0632 f=-0.566 shape=(1, 9000, 1)
logits [[ 1.594634  -0.9998321  1.6037728 -4.4640703]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.855 " + "l1=0.855" + "l2=0 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.1268456 -1.0737029  1.5730982 -5.670235 ]]
Iteration 100 of 1000: loss=0.392 " + "l1=0.147" + "l2=0.245 f=-0.541 shape=(1, 9000, 1)
logits [[ 1.9716958 -0.9683044  1.7041899 -4.869845 ]]
Iteration 200 of 1000: loss=0.22 " + "l1=0" + "l2=0.22 f=-0.556 shape=(1, 9000, 1)
logits [[ 1.6508715 -0.8807089  1.6510212 -4.6453133]]
Iteration 300 of 1000: loss=0.16 " + "l1=0" + "l2=0.16 f=-0.548 shape=(1, 9000, 1)
logits [[ 1.6281236 -0.8728088  1.6315496 -4.5788283]]
Iteration 400 of 1000: loss=0.12 " + "l1=0.00223" + "l2=0.117 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.6057929 -0.8660586  1.6017458 -4.5280304]]
Iteration 500 of 1000: loss=0.093 " + "l1=0" + "l2=0.093 f=-0.551 shape=(1, 9000, 1)
logits [[ 1.5847695 -0.8771321  1.585024  -4.4948487]]
Iteration 600 of 1000: loss=0.0785 " + "l1=0" + "l2=0.0785 f=-0.558 shape=(1, 9000, 1)
logits [[ 1.5728109 -0.9105199  1.5797671 -4.4746437]]
Iteration 700 of 1000: loss=0.0689 " + "l1=0" + "l2=0.0689 f=-0.565 shape=(1, 9000, 1)
logits [[ 1.5577103  -0.94197536  1.5745931  -4.4523196 ]]
Iteration 800 of 1000: loss=0.06 " + "l1=0" + "l2=0.06 f=-0.572 shape=(1, 9000, 1)
logits [[ 1.5544654 -0.9623697  1.5651182 -4.444787 ]]
Iteration 900 of 1000: loss=0.0543 " + "l1=0" + "l2=0.0543 f=-0.579 shape=(1, 9000, 1)
logits [[ 1.5466357 -0.9780348  1.5579528 -4.4439464]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.505 " + "l1=0.505" + "l2=0 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.1268456 -1.0737029  1.5730982 -5.670235 ]]
Iteration 100 of 1000: loss=0.338 " + "l1=0.254" + "l2=0.0843 f=-0.538 shape=(1, 9000, 1)
logits [[ 2.478078  -1.1111107  1.6980778 -5.2176223]]
Iteration 200 of 1000: loss=0.274 " + "l1=0.164" + "l2=0.111 f=-0.549 shape=(1, 9000, 1)
logits [[ 2.2014709 -1.0734543  1.6983917 -5.0238543]]
Iteration 300 of 1000: loss=0.192 " + "l1=0.0496" + "l2=0.142 f=-0.582 shape=(1, 9000, 1)
logits [[ 1.8068192 -0.9880417  1.6543014 -4.8014083]]
Iteration 400 of 1000: loss=0.111 " + "l1=0.00164" + "l2=0.109 f=-0.576 shape=(1, 9000, 1)
logits [[ 1.6110456  -0.92082196  1.6059933  -4.601397  ]]
Iteration 500 of 1000: loss=0.0801 " + "l1=0" + "l2=0.0801 f=-0.573 shape=(1, 9000, 1)
logits [[ 1.5841982 -0.9422592  1.5885    -4.523125 ]]
Iteration 600 of 1000: loss=0.0653 " + "l1=0.000825" + "l2=0.0645 f=-0.575 shape=(1, 9000, 1)
logits [[ 1.5820019  -0.97349536  1.5794648  -4.4862194 ]]
Iteration 700 of 1000: loss=0.0566 " + "l1=0.00101" + "l2=0.0556 f=-0.58 shape=(1, 9000, 1)
logits [[ 1.5724256 -0.9919202  1.5693269 -4.47071  ]]
Iteration 800 of 1000: loss=0.0501 " + "l1=0" + "l2=0.0501 f=-0.59 shape=(1, 9000, 1)
logits [[ 1.5559707 -1.0067196  1.5612969 -4.468625 ]]
Iteration 900 of 1000: loss=0.0458 " + "l1=0" + "l2=0.0458 f=-0.597 shape=(1, 9000, 1)
logits [[ 1.5382488 -1.0135705  1.5531132 -4.465922 ]]
--- 291.8610804080963 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.088 " + "l1=0.088" + "l2=0 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.1268456 -1.0737029  1.5730982 -5.670235 ]]
Iteration 100 of 1000: loss=0.0871 " + "l1=0.0866" + "l2=0.000537 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.0605402 -1.0553855  1.5547683 -5.59448  ]]
Iteration 200 of 1000: loss=0.0868 " + "l1=0.0863" + "l2=0.000568 f=-0.508 shape=(1, 9000, 1)
logits [[ 3.0476003 -1.0527233  1.5513822 -5.579857 ]]
Iteration 300 of 1000: loss=0.0866 " + "l1=0.0859" + "l2=0.000688 f=-0.508 shape=(1, 9000, 1)
logits [[ 3.0322053 -1.0488247  1.5471106 -5.561875 ]]
Iteration 400 of 1000: loss=0.0864 " + "l1=0.0856" + "l2=0.000839 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.016861  -1.0451971  1.5428923 -5.5440803]]
Iteration 500 of 1000: loss=0.0863 " + "l1=0.0853" + "l2=0.000989 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.0020936 -1.042076   1.5390458 -5.527161 ]]
Iteration 600 of 1000: loss=0.0861 " + "l1=0.085" + "l2=0.00115 f=-0.507 shape=(1, 9000, 1)
logits [[ 2.9881296 -1.0394529  1.5352218 -5.5114837]]
Iteration 700 of 1000: loss=0.086 " + "l1=0.0847" + "l2=0.00131 f=-0.507 shape=(1, 9000, 1)
logits [[ 2.9754376 -1.0371115  1.5316968 -5.4966984]]
Iteration 800 of 1000: loss=0.0859 " + "l1=0.0845" + "l2=0.00149 f=-0.507 shape=(1, 9000, 1)
logits [[ 2.9631233 -1.0351657  1.5284921 -5.482638 ]]
Iteration 900 of 1000: loss=0.0858 " + "l1=0.0842" + "l2=0.00156 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.9513981 -1.0331501  1.5255668 -5.469293 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.88 " + "l1=0.88" + "l2=0 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.1268456 -1.0737029  1.5730982 -5.670235 ]]
Iteration 100 of 1000: loss=0.804 " + "l1=0.767" + "l2=0.037 f=-0.501 shape=(1, 9000, 1)
logits [[ 2.5865252  -0.91847885  1.416387   -5.0875673 ]]
Iteration 200 of 1000: loss=0.768 " + "l1=0.713" + "l2=0.055 f=-0.497 shape=(1, 9000, 1)
logits [[ 2.333493   -0.86071444  1.3412594  -4.80016   ]]
Iteration 300 of 1000: loss=0.733 " + "l1=0.659" + "l2=0.0733 f=-0.488 shape=(1, 9000, 1)
logits [[ 2.0857358 -0.792575   1.265389  -4.50877  ]]
Iteration 400 of 1000: loss=0.694 " + "l1=0.601" + "l2=0.0933 f=-0.475 shape=(1, 9000, 1)
logits [[ 1.8152663 -0.717598   1.1924204 -4.190463 ]]
Iteration 500 of 1000: loss=0.656 " + "l1=0.545" + "l2=0.11 f=-0.474 shape=(1, 9000, 1)
logits [[ 1.5508753  -0.67020863  1.1249392  -3.90019   ]]
Iteration 600 of 1000: loss=0.612 " + "l1=0.482" + "l2=0.129 f=-0.476 shape=(1, 9000, 1)
logits [[ 1.2450264  -0.64440423  1.0761924  -3.5790722 ]]
Iteration 700 of 1000: loss=0.566 " + "l1=0.434" + "l2=0.132 f=-0.484 shape=(1, 9000, 1)
logits [[ 1.0317736  -0.68830395  1.0311171  -3.3092995 ]]
Iteration 800 of 1000: loss=0.541 " + "l1=0.417" + "l2=0.124 f=-0.488 shape=(1, 9000, 1)
logits [[ 0.9840205  -0.7358077   0.98450774 -3.1862233 ]]
Iteration 900 of 1000: loss=0.522 " + "l1=0.4" + "l2=0.122 f=-0.49 shape=(1, 9000, 1)
logits [[ 0.94090164 -0.782005    0.9431302  -3.0618255 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.8 " + "l1=8.8" + "l2=0 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.1268456 -1.0737029  1.5730982 -5.670235 ]]
Iteration 100 of 1000: loss=4.15 " + "l1=2.69" + "l2=1.46 f=-0.391 shape=(1, 9000, 1)
logits [[ 0.27201858 -0.21980774  0.5368321  -2.1514025 ]]
Iteration 200 of 1000: loss=2.9 " + "l1=1.17" + "l2=1.72 f=-0.356 shape=(1, 9000, 1)
logits [[-0.4548957  -0.20021121  0.20083039 -0.9711132 ]]
Iteration 300 of 1000: loss=1.91 " + "l1=0.000551" + "l2=1.91 f=-0.32 shape=(1, 9000, 1)
logits [[-0.950017   -0.2919779  -0.0182133  -0.01876441]]
Iteration 400 of 1000: loss=1.31 " + "l1=0" + "l2=1.31 f=-0.313 shape=(1, 9000, 1)
logits [[-0.91975766 -0.3675161   0.01794906  0.01898383]]
Iteration 500 of 1000: loss=1.03 " + "l1=0.00927" + "l2=1.02 f=-0.298 shape=(1, 9000, 1)
logits [[-0.8655636  -0.41492698  0.04864468  0.03937035]]
Iteration 600 of 1000: loss=0.842 " + "l1=0.00552" + "l2=0.837 f=-0.287 shape=(1, 9000, 1)
logits [[-0.80907774 -0.46439958  0.06502628  0.05950598]]
Iteration 700 of 1000: loss=0.726 " + "l1=0" + "l2=0.726 f=-0.294 shape=(1, 9000, 1)
logits [[-0.7832263  -0.5330764   0.06549365  0.07478017]]
Iteration 800 of 1000: loss=0.646 " + "l1=0" + "l2=0.646 f=-0.301 shape=(1, 9000, 1)
logits [[-0.7475308  -0.6030027   0.07177702  0.07376016]]
Iteration 900 of 1000: loss=0.595 " + "l1=0" + "l2=0.595 f=-0.3 shape=(1, 9000, 1)
logits [[-0.75254834 -0.64307714  0.08259818  0.11450958]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.84 " + "l1=4.84" + "l2=0 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.1268456 -1.0737029  1.5730982 -5.670235 ]]
Iteration 100 of 1000: loss=2.87 " + "l1=2.13" + "l2=0.734 f=-0.428 shape=(1, 9000, 1)
logits [[ 0.84551287 -0.3784935   0.850529   -3.0291946 ]]
Iteration 200 of 1000: loss=2.28 " + "l1=1.52" + "l2=0.757 f=-0.383 shape=(1, 9000, 1)
logits [[ 0.402096   -0.30311742  0.567589   -2.199577  ]]
Iteration 300 of 1000: loss=1.83 " + "l1=0.987" + "l2=0.84 f=-0.361 shape=(1, 9000, 1)
logits [[-0.13560392 -0.2971203   0.39115712 -1.4041779 ]]
Iteration 400 of 1000: loss=1.38 " + "l1=0.487" + "l2=0.897 f=-0.35 shape=(1, 9000, 1)
logits [[-0.59119546 -0.40425047  0.24028517 -0.6459678 ]]
Iteration 500 of 1000: loss=1.01 " + "l1=0.0718" + "l2=0.934 f=-0.296 shape=(1, 9000, 1)
logits [[-0.8102867  -0.47611734  0.11676279 -0.01379196]]
Iteration 600 of 1000: loss=0.723 " + "l1=0" + "l2=0.723 f=-0.283 shape=(1, 9000, 1)
logits [[-0.7828539  -0.52752846  0.08834063  0.08900825]]
Iteration 700 of 1000: loss=0.621 " + "l1=0" + "l2=0.621 f=-0.286 shape=(1, 9000, 1)
logits [[-0.76724136 -0.5877462   0.10250887  0.10758933]]
Iteration 800 of 1000: loss=0.561 " + "l1=0" + "l2=0.561 f=-0.286 shape=(1, 9000, 1)
logits [[-0.75638187 -0.63121873  0.12073159  0.1212809 ]]
Iteration 900 of 1000: loss=0.522 " + "l1=0" + "l2=0.522 f=-0.288 shape=(1, 9000, 1)
logits [[-0.7534588  -0.66559476  0.13308695  0.135948  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.86 " + "l1=2.86" + "l2=0 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.1268456 -1.0737029  1.5730982 -5.670235 ]]
Iteration 100 of 1000: loss=2.03 " + "l1=1.57" + "l2=0.462 f=-0.469 shape=(1, 9000, 1)
logits [[ 1.1975988  -0.49890834  1.0630476  -3.6378858 ]]
Iteration 200 of 1000: loss=1.67 " + "l1=1.24" + "l2=0.431 f=-0.436 shape=(1, 9000, 1)
logits [[ 0.81084824 -0.38931048  0.8216531  -2.9854558 ]]
Iteration 300 of 1000: loss=1.45 " + "l1=1.04" + "l2=0.411 f=-0.414 shape=(1, 9000, 1)
logits [[ 0.6115971  -0.41419044  0.6772724  -2.5312583 ]]
Iteration 400 of 1000: loss=1.27 " + "l1=0.814" + "l2=0.456 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.22053652 -0.46816525  0.5679468  -1.937409  ]]
Iteration 500 of 1000: loss=1.09 " + "l1=0.57" + "l2=0.522 f=-0.404 shape=(1, 9000, 1)
logits [[-0.23616052 -0.5070879   0.4402333  -1.3146325 ]]
Iteration 600 of 1000: loss=0.927 " + "l1=0.399" + "l2=0.528 f=-0.38 shape=(1, 9000, 1)
logits [[-0.4180604  -0.5927253   0.36031005 -0.8680168 ]]
Iteration 700 of 1000: loss=0.81 " + "l1=0.283" + "l2=0.528 f=-0.353 shape=(1, 9000, 1)
logits [[-0.48492214 -0.6761653   0.3097583  -0.56029516]]
Iteration 800 of 1000: loss=0.7 " + "l1=0.151" + "l2=0.55 f=-0.328 shape=(1, 9000, 1)
logits [[-0.58040226 -0.728189    0.22976579 -0.2344617 ]]
Iteration 900 of 1000: loss=0.575 " + "l1=0.00364" + "l2=0.572 f=-0.3 shape=(1, 9000, 1)
logits [[-0.7341834  -0.7318969   0.13787249  0.12668732]]
--- 324.66020703315735 seconds ---
Adv result:3
Loading record A00954
(1, 3178)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0438 " + "l1=0.0438" + "l2=0 f=-0.707 shape=(1, 9000, 1)
logits [[ 2.3104799 -2.0685797 -1.9868555 -1.0843691]]
Iteration 100 of 1000: loss=0.0425 " + "l1=0.0419" + "l2=0.00062 f=-0.699 shape=(1, 9000, 1)
logits [[ 2.196098  -1.9890639 -1.9900438 -1.013843 ]]
Iteration 200 of 1000: loss=0.0419 " + "l1=0.0411" + "l2=0.000845 f=-0.695 shape=(1, 9000, 1)
logits [[ 2.1522765 -1.9577461 -1.9877366 -0.9885289]]
Iteration 300 of 1000: loss=0.0415 " + "l1=0.0404" + "l2=0.00109 f=-0.691 shape=(1, 9000, 1)
logits [[ 2.1114032 -1.9270586 -1.9858425 -0.9630211]]
Iteration 400 of 1000: loss=0.0411 " + "l1=0.0397" + "l2=0.00134 f=-0.687 shape=(1, 9000, 1)
logits [[ 2.0717113 -1.8995532 -1.9840178 -0.9355585]]
Iteration 500 of 1000: loss=0.0407 " + "l1=0.039" + "l2=0.00164 f=-0.682 shape=(1, 9000, 1)
logits [[ 2.0322487 -1.8705395 -1.982283  -0.9083001]]
Iteration 600 of 1000: loss=0.0403 " + "l1=0.0384" + "l2=0.00193 f=-0.678 shape=(1, 9000, 1)
logits [[ 1.9935601  -1.844241   -1.9807904  -0.88055354]]
Iteration 700 of 1000: loss=0.0398 " + "l1=0.0374" + "l2=0.00242 f=-0.671 shape=(1, 9000, 1)
logits [[ 1.9352111 -1.8038082 -1.9672564 -0.8488017]]
Iteration 800 of 1000: loss=0.0391 " + "l1=0.036" + "l2=0.00309 f=-0.658 shape=(1, 9000, 1)
logits [[ 1.8530011 -1.7460545 -1.926978  -0.8125763]]
Iteration 900 of 1000: loss=0.0375 " + "l1=0.0329" + "l2=0.00461 f=-0.625 shape=(1, 9000, 1)
logits [[ 1.6517937  -1.6352524  -1.7451502  -0.76989216]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.438 " + "l1=0.438" + "l2=0 f=-0.707 shape=(1, 9000, 1)
logits [[ 2.3104799 -2.0685797 -1.9868555 -1.0843691]]
Iteration 100 of 1000: loss=0.183 " + "l1=0.0646" + "l2=0.118 f=-0.533 shape=(1, 9000, 1)
logits [[ 0.09588672 -0.54962605 -1.2870133  -0.38987347]]
Iteration 200 of 1000: loss=0.0886 " + "l1=0.00101" + "l2=0.0875 f=-0.528 shape=(1, 9000, 1)
logits [[-0.30665356 -0.31676006 -1.1777097  -0.31043828]]
Iteration 300 of 1000: loss=0.0682 " + "l1=0" + "l2=0.0682 f=-0.524 shape=(1, 9000, 1)
logits [[-0.29633456 -0.2779648  -1.2134198  -0.30658293]]
Iteration 400 of 1000: loss=0.0602 " + "l1=0" + "l2=0.0602 f=-0.52 shape=(1, 9000, 1)
logits [[-0.27895066 -0.274296   -1.2505025  -0.27643377]]
Iteration 500 of 1000: loss=0.0571 " + "l1=0" + "l2=0.0571 f=-0.52 shape=(1, 9000, 1)
logits [[-0.2736443  -0.26399925 -1.2630218  -0.27882874]]
Iteration 600 of 1000: loss=0.0558 " + "l1=0.00125" + "l2=0.0545 f=-0.517 shape=(1, 9000, 1)
logits [[-0.2471571  -0.2596873  -1.2806177  -0.28226304]]
Iteration 700 of 1000: loss=0.0536 " + "l1=0" + "l2=0.0536 f=-0.515 shape=(1, 9000, 1)
logits [[-0.25402823 -0.24660979 -1.2852492  -0.27490002]]
Iteration 800 of 1000: loss=0.052 " + "l1=1e-05" + "l2=0.052 f=-0.512 shape=(1, 9000, 1)
logits [[-0.24754378 -0.24764387 -1.2937596  -0.25983453]]
Iteration 900 of 1000: loss=0.0518 " + "l1=0" + "l2=0.0518 f=-0.511 shape=(1, 9000, 1)
logits [[-0.2553006  -0.23722456 -1.2954825  -0.25776163]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.241 " + "l1=0.241" + "l2=0 f=-0.707 shape=(1, 9000, 1)
logits [[ 2.3104799 -2.0685797 -1.9868555 -1.0843691]]
Iteration 100 of 1000: loss=0.196 " + "l1=0.17" + "l2=0.0258 f=-0.637 shape=(1, 9000, 1)
logits [[ 1.5452869 -1.5419546 -1.8786286 -0.671352 ]]
Iteration 200 of 1000: loss=0.115 " + "l1=0.0601" + "l2=0.055 f=-0.536 shape=(1, 9000, 1)
logits [[ 0.31880078 -0.77336586 -1.2405306  -0.45033938]]
Iteration 300 of 1000: loss=0.0894 " + "l1=0.0239" + "l2=0.0655 f=-0.528 shape=(1, 9000, 1)
logits [[-0.10796051 -0.5415993  -1.2709855  -0.19017538]]
Iteration 400 of 1000: loss=0.0753 " + "l1=0.0128" + "l2=0.0625 f=-0.523 shape=(1, 9000, 1)
logits [[-0.18307897 -0.4155113  -1.2932818  -0.20101508]]
Iteration 500 of 1000: loss=0.0622 " + "l1=0.000373" + "l2=0.0619 f=-0.517 shape=(1, 9000, 1)
logits [[-0.2818801  -0.28865546 -1.1985443  -0.29697394]]
Iteration 600 of 1000: loss=0.0505 " + "l1=0" + "l2=0.0505 f=-0.518 shape=(1, 9000, 1)
logits [[-0.2669901  -0.23290826 -1.3251905  -0.24492335]]
Iteration 700 of 1000: loss=0.0457 " + "l1=0" + "l2=0.0457 f=-0.516 shape=(1, 9000, 1)
logits [[-0.23776308 -0.23603693 -1.3451506  -0.24407229]]
Iteration 800 of 1000: loss=0.0427 " + "l1=0" + "l2=0.0427 f=-0.513 shape=(1, 9000, 1)
logits [[-0.24076718 -0.22495124 -1.344753   -0.24047747]]
Iteration 900 of 1000: loss=0.0396 " + "l1=0.000862" + "l2=0.0387 f=-0.513 shape=(1, 9000, 1)
logits [[-0.21784562 -0.23351297 -1.345131   -0.25386095]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.142 " + "l1=0.142" + "l2=0 f=-0.707 shape=(1, 9000, 1)
logits [[ 2.3104799 -2.0685797 -1.9868555 -1.0843691]]
Iteration 100 of 1000: loss=0.129 " + "l1=0.122" + "l2=0.00663 f=-0.681 shape=(1, 9000, 1)
logits [[ 1.9405881 -1.8155648 -1.9895005 -0.8584674]]
Iteration 200 of 1000: loss=0.112 " + "l1=0.092" + "l2=0.0197 f=-0.609 shape=(1, 9000, 1)
logits [[ 1.3566045 -1.4728802 -1.5970037 -0.7228071]]
Iteration 300 of 1000: loss=0.0835 " + "l1=0.0523" + "l2=0.0312 f=-0.547 shape=(1, 9000, 1)
logits [[ 0.62764204 -0.98064417 -1.2678183  -0.56613714]]
Iteration 400 of 1000: loss=0.0747 " + "l1=0.042" + "l2=0.0327 f=-0.53 shape=(1, 9000, 1)
logits [[ 0.45643216 -0.83736044 -1.282111   -0.45677957]]
Iteration 500 of 1000: loss=0.0662 " + "l1=0.0319" + "l2=0.0343 f=-0.519 shape=(1, 9000, 1)
logits [[ 0.26439968 -0.7170804  -1.3033806  -0.32183453]]
Iteration 600 of 1000: loss=0.0575 " + "l1=0.0206" + "l2=0.0369 f=-0.511 shape=(1, 9000, 1)
logits [[ 0.02419524 -0.6092848  -1.3012811  -0.1580976 ]]
Iteration 700 of 1000: loss=0.05 " + "l1=0.0138" + "l2=0.0363 f=-0.501 shape=(1, 9000, 1)
logits [[-0.10577188 -0.52974105 -1.2557468  -0.11402096]]
Iteration 800 of 1000: loss=0.0463 " + "l1=0.0102" + "l2=0.0361 f=-0.5 shape=(1, 9000, 1)
logits [[-0.14054951 -0.45309183 -1.2622383  -0.14603135]]
Iteration 900 of 1000: loss=0.0439 " + "l1=0.00612" + "l2=0.0378 f=-0.508 shape=(1, 9000, 1)
logits [[-0.19625357 -0.35607165 -1.3128827  -0.16772622]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.192 " + "l1=0.192" + "l2=0 f=-0.707 shape=(1, 9000, 1)
logits [[ 2.3104799 -2.0685797 -1.9868555 -1.0843691]]
Iteration 100 of 1000: loss=0.166 " + "l1=0.154" + "l2=0.0123 f=-0.672 shape=(1, 9000, 1)
logits [[ 1.8032448 -1.7177898 -1.9936607 -0.7778771]]
Iteration 200 of 1000: loss=0.108 " + "l1=0.0654" + "l2=0.0428 f=-0.55 shape=(1, 9000, 1)
logits [[ 0.5604564  -0.93541825 -1.2502376  -0.57460916]]
Iteration 300 of 1000: loss=0.091 " + "l1=0.0437" + "l2=0.0473 f=-0.535 shape=(1, 9000, 1)
logits [[ 0.2662697  -0.73359823 -1.2533122  -0.41779074]]
Iteration 400 of 1000: loss=0.0791 " + "l1=0.0269" + "l2=0.0522 f=-0.525 shape=(1, 9000, 1)
logits [[ 0.01644369 -0.5976822  -1.3026135  -0.215146  ]]
Iteration 500 of 1000: loss=0.0691 " + "l1=0.0167" + "l2=0.0525 f=-0.516 shape=(1, 9000, 1)
logits [[-0.11686964 -0.4980983  -1.3261825  -0.12179212]]
Iteration 600 of 1000: loss=0.0592 " + "l1=0.0101" + "l2=0.0492 f=-0.506 shape=(1, 9000, 1)
logits [[-0.16269282 -0.39299825 -1.292497   -0.1738562 ]]
Iteration 700 of 1000: loss=0.0453 " + "l1=6.66e-05" + "l2=0.0452 f=-0.511 shape=(1, 9000, 1)
logits [[-0.2392412  -0.24076323 -1.3091975  -0.2553319 ]]
Iteration 800 of 1000: loss=0.0411 " + "l1=0.000859" + "l2=0.0402 f=-0.512 shape=(1, 9000, 1)
logits [[-0.23367807 -0.25331137 -1.323557   -0.23655722]]
Iteration 900 of 1000: loss=0.0386 " + "l1=0" + "l2=0.0386 f=-0.515 shape=(1, 9000, 1)
logits [[-0.2372896  -0.23469302 -1.347171   -0.23921895]]
--- 322.6207227706909 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.043 " + "l1=0.043" + "l2=0 f=-0.707 shape=(1, 9000, 1)
logits [[ 2.3104799 -2.0685797 -1.9868555 -1.0843691]]
Iteration 100 of 1000: loss=0.0422 " + "l1=0.0419" + "l2=0.000363 f=-0.7 shape=(1, 9000, 1)
logits [[ 2.2234113 -2.0388756 -1.9623562 -1.0231228]]
Iteration 200 of 1000: loss=0.0419 " + "l1=0.0414" + "l2=0.000491 f=-0.697 shape=(1, 9000, 1)
logits [[ 2.1930175 -2.0241435 -1.9510746 -1.0055313]]
Iteration 300 of 1000: loss=0.0417 " + "l1=0.041" + "l2=0.000629 f=-0.694 shape=(1, 9000, 1)
logits [[ 2.1631591 -2.0101604 -1.9410026 -0.987027 ]]
Iteration 400 of 1000: loss=0.0415 " + "l1=0.0407" + "l2=0.000812 f=-0.691 shape=(1, 9000, 1)
logits [[ 2.1358771 -1.9971768 -1.9322392 -0.9693294]]
Iteration 500 of 1000: loss=0.0413 " + "l1=0.0403" + "l2=0.001 f=-0.688 shape=(1, 9000, 1)
logits [[ 2.1104088 -1.9851394 -1.9242295 -0.9523306]]
Iteration 600 of 1000: loss=0.0412 " + "l1=0.04" + "l2=0.0012 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.084733   -1.9726149  -1.9161217  -0.93562233]]
Iteration 700 of 1000: loss=0.0411 " + "l1=0.0397" + "l2=0.00143 f=-0.682 shape=(1, 9000, 1)
logits [[ 2.0621521 -1.9615332 -1.9099334 -0.9199242]]
Iteration 800 of 1000: loss=0.0411 " + "l1=0.0394" + "l2=0.00174 f=-0.679 shape=(1, 9000, 1)
logits [[ 2.036442   -1.948669   -1.9016557  -0.90338093]]
Iteration 900 of 1000: loss=0.0406 " + "l1=0.0382" + "l2=0.00243 f=-0.668 shape=(1, 9000, 1)
logits [[ 1.9661753  -1.9108117  -1.8519341  -0.87611717]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.43 " + "l1=0.43" + "l2=0 f=-0.707 shape=(1, 9000, 1)
logits [[ 2.3104799 -2.0685797 -1.9868555 -1.0843691]]
Iteration 100 of 1000: loss=0.219 " + "l1=0.111" + "l2=0.108 f=-0.552 shape=(1, 9000, 1)
logits [[ 0.21750185 -1.1144316  -0.89469314 -0.41731298]]
Iteration 200 of 1000: loss=0.118 " + "l1=0.036" + "l2=0.0822 f=-0.53 shape=(1, 9000, 1)
logits [[-0.24419278 -1.0205363  -0.60380906 -0.2498146 ]]
Iteration 300 of 1000: loss=0.0996 " + "l1=0.0188" + "l2=0.0807 f=-0.537 shape=(1, 9000, 1)
logits [[-0.29719672 -1.0092314  -0.48559093 -0.35406086]]
Iteration 400 of 1000: loss=0.0827 " + "l1=0.00201" + "l2=0.0807 f=-0.55 shape=(1, 9000, 1)
logits [[-0.35176286 -1.0798008  -0.3718871  -0.39647508]]
Iteration 500 of 1000: loss=0.0738 " + "l1=0.00224" + "l2=0.0716 f=-0.554 shape=(1, 9000, 1)
logits [[-0.34348157 -1.129983   -0.36593133 -0.37534922]]
Iteration 600 of 1000: loss=0.07 " + "l1=0.001" + "l2=0.069 f=-0.554 shape=(1, 9000, 1)
logits [[-0.36205027 -1.1460112  -0.35866916 -0.34866416]]
Iteration 700 of 1000: loss=0.067 " + "l1=0" + "l2=0.067 f=-0.554 shape=(1, 9000, 1)
logits [[-0.3623384  -1.1757823  -0.33736688 -0.3389402 ]]
Iteration 800 of 1000: loss=0.0624 " + "l1=0.000875" + "l2=0.0616 f=-0.55 shape=(1, 9000, 1)
logits [[-0.31817964 -1.2246468  -0.32693318 -0.3290386 ]]
Iteration 900 of 1000: loss=0.0558 " + "l1=0" + "l2=0.0558 f=-0.544 shape=(1, 9000, 1)
logits [[-0.29743785 -1.2754465  -0.29216924 -0.3100528 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.236 " + "l1=0.236" + "l2=0 f=-0.707 shape=(1, 9000, 1)
logits [[ 2.3104799 -2.0685797 -1.9868555 -1.0843691]]
Iteration 100 of 1000: loss=0.196 " + "l1=0.165" + "l2=0.0309 f=-0.62 shape=(1, 9000, 1)
logits [[ 1.5077764  -1.7331944  -1.4939895  -0.75883996]]
Iteration 200 of 1000: loss=0.126 " + "l1=0.0834" + "l2=0.0429 f=-0.561 shape=(1, 9000, 1)
logits [[ 0.51038873 -1.1911728  -1.0068384  -0.55466485]]
Iteration 300 of 1000: loss=0.0943 " + "l1=0.0382" + "l2=0.0561 f=-0.518 shape=(1, 9000, 1)
logits [[-0.03392489 -1.0816284  -0.7280038  -0.23022711]]
Iteration 400 of 1000: loss=0.086 " + "l1=0.032" + "l2=0.054 f=-0.518 shape=(1, 9000, 1)
logits [[-0.13051295 -1.0578148  -0.7123822  -0.17222771]]
Iteration 500 of 1000: loss=0.081 " + "l1=0.027" + "l2=0.054 f=-0.516 shape=(1, 9000, 1)
logits [[-0.1704011  -1.0528542  -0.6614878  -0.17941058]]
Iteration 600 of 1000: loss=0.0783 " + "l1=0.0243" + "l2=0.054 f=-0.519 shape=(1, 9000, 1)
logits [[-0.17881265 -1.0743097  -0.62047684 -0.20291436]]
Iteration 700 of 1000: loss=0.0756 " + "l1=0.021" + "l2=0.0546 f=-0.522 shape=(1, 9000, 1)
logits [[-0.19981486 -1.105211   -0.58176416 -0.20298916]]
Iteration 800 of 1000: loss=0.0703 " + "l1=0.0142" + "l2=0.0561 f=-0.539 shape=(1, 9000, 1)
logits [[-0.22887371 -1.1975334  -0.48774892 -0.23994654]]
Iteration 900 of 1000: loss=0.0657 " + "l1=0.00903" + "l2=0.0567 f=-0.547 shape=(1, 9000, 1)
logits [[-0.25724563 -1.2409748  -0.4213634  -0.2680999 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.333 " + "l1=0.333" + "l2=0 f=-0.707 shape=(1, 9000, 1)
logits [[ 2.3104799 -2.0685797 -1.9868555 -1.0843691]]
Iteration 100 of 1000: loss=0.241 " + "l1=0.2" + "l2=0.0416 f=-0.593 shape=(1, 9000, 1)
logits [[ 1.2096971  -1.6009281  -1.3677601  -0.61251575]]
Iteration 200 of 1000: loss=0.116 " + "l1=0.0399" + "l2=0.0765 f=-0.528 shape=(1, 9000, 1)
logits [[-0.14909388 -1.0626793  -0.66429925 -0.234447  ]]
Iteration 300 of 1000: loss=0.0961 " + "l1=0.0276" + "l2=0.0685 f=-0.532 shape=(1, 9000, 1)
logits [[-0.23503141 -1.0502942  -0.59068453 -0.25228295]]
Iteration 400 of 1000: loss=0.0877 " + "l1=0.0182" + "l2=0.0696 f=-0.532 shape=(1, 9000, 1)
logits [[-0.29533774 -1.0387206  -0.51333755 -0.27880734]]
Iteration 500 of 1000: loss=0.0793 " + "l1=0.00789" + "l2=0.0714 f=-0.538 shape=(1, 9000, 1)
logits [[-0.32454506 -1.064876   -0.42634383 -0.3352828 ]]
Iteration 600 of 1000: loss=0.069 " + "l1=0.00117" + "l2=0.0678 f=-0.555 shape=(1, 9000, 1)
logits [[-0.33935967 -1.1842827  -0.35441533 -0.34248942]]
Iteration 700 of 1000: loss=0.0649 " + "l1=0.00132" + "l2=0.0636 f=-0.561 shape=(1, 9000, 1)
logits [[-0.3331206 -1.2308964 -0.3479011 -0.3308818]]
Iteration 800 of 1000: loss=0.063 " + "l1=0.00137" + "l2=0.0616 f=-0.559 shape=(1, 9000, 1)
logits [[-0.31310123 -1.2611527  -0.33082387 -0.33026803]]
Iteration 900 of 1000: loss=0.058 " + "l1=0.000114" + "l2=0.0579 f=-0.558 shape=(1, 9000, 1)
logits [[-0.28496847 -1.333598   -0.28643918 -0.3287487 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.285 " + "l1=0.285" + "l2=0 f=-0.707 shape=(1, 9000, 1)
logits [[ 2.3104799 -2.0685797 -1.9868555 -1.0843691]]
Iteration 100 of 1000: loss=0.219 " + "l1=0.185" + "l2=0.0341 f=-0.609 shape=(1, 9000, 1)
logits [[ 1.3577472 -1.6728896 -1.4278342 -0.694143 ]]
Iteration 200 of 1000: loss=0.133 " + "l1=0.0752" + "l2=0.058 f=-0.563 shape=(1, 9000, 1)
logits [[ 0.2214823  -1.1275675  -0.9130441  -0.43247575]]
Iteration 300 of 1000: loss=0.0954 " + "l1=0.031" + "l2=0.0644 f=-0.527 shape=(1, 9000, 1)
logits [[-0.19246438 -1.0513766  -0.6602446  -0.20524627]]
Iteration 400 of 1000: loss=0.0865 " + "l1=0.023" + "l2=0.0634 f=-0.531 shape=(1, 9000, 1)
logits [[-0.24979128 -1.0499574  -0.58689374 -0.2391386 ]]
Iteration 500 of 1000: loss=0.078 " + "l1=0.0122" + "l2=0.0658 f=-0.547 shape=(1, 9000, 1)
logits [[-0.28021216 -1.1250114  -0.4640936  -0.31705344]]
Iteration 600 of 1000: loss=0.071 " + "l1=0.00277" + "l2=0.0682 f=-0.554 shape=(1, 9000, 1)
logits [[-0.34985527 -1.1367881  -0.3851662  -0.34330946]]
Iteration 700 of 1000: loss=0.0681 " + "l1=0.00324" + "l2=0.0648 f=-0.558 shape=(1, 9000, 1)
logits [[-0.31798398 -1.177996   -0.3668658  -0.36886293]]
Iteration 800 of 1000: loss=0.0637 " + "l1=0.00136" + "l2=0.0623 f=-0.555 shape=(1, 9000, 1)
logits [[-0.3353069  -1.1991593  -0.35378018 -0.33317703]]
Iteration 900 of 1000: loss=0.0614 " + "l1=0" + "l2=0.0614 f=-0.552 shape=(1, 9000, 1)
logits [[-0.32035795 -1.213546   -0.31749105 -0.35826078]]
--- 320.67880153656006 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0339 " + "l1=0.0339" + "l2=0 f=-0.707 shape=(1, 9000, 1)
logits [[ 2.3104799 -2.0685797 -1.9868555 -1.0843691]]
Iteration 100 of 1000: loss=0.0319 " + "l1=0.0309" + "l2=0.000971 f=-0.697 shape=(1, 9000, 1)
logits [[ 2.1643512  -2.0303342  -1.9923115  -0.92775106]]
Iteration 200 of 1000: loss=0.0311 " + "l1=0.0298" + "l2=0.0013 f=-0.693 shape=(1, 9000, 1)
logits [[ 2.108367  -2.0127637 -1.9942517 -0.8713994]]
Iteration 300 of 1000: loss=0.0303 " + "l1=0.0286" + "l2=0.00169 f=-0.688 shape=(1, 9000, 1)
logits [[ 2.0513833 -1.9940265 -1.9968306 -0.8135852]]
Iteration 400 of 1000: loss=0.0296 " + "l1=0.0274" + "l2=0.00218 f=-0.683 shape=(1, 9000, 1)
logits [[ 1.9928772 -1.9744086 -2.0005405 -0.7517002]]
Iteration 500 of 1000: loss=0.0289 " + "l1=0.0263" + "l2=0.0026 f=-0.679 shape=(1, 9000, 1)
logits [[ 1.9361286 -1.9525827 -2.0052752 -0.6927888]]
Iteration 600 of 1000: loss=0.0283 " + "l1=0.0252" + "l2=0.00307 f=-0.674 shape=(1, 9000, 1)
logits [[ 1.8813756 -1.9293035 -2.0104997 -0.637112 ]]
Iteration 700 of 1000: loss=0.0276 " + "l1=0.0242" + "l2=0.00347 f=-0.67 shape=(1, 9000, 1)
logits [[ 1.8302509  -1.9066924  -2.0163078  -0.58526653]]
Iteration 800 of 1000: loss=0.0269 " + "l1=0.0231" + "l2=0.00382 f=-0.665 shape=(1, 9000, 1)
logits [[ 1.7784419  -1.8836063  -2.0233796  -0.53216743]]
Iteration 900 of 1000: loss=0.0263 " + "l1=0.0219" + "l2=0.00433 f=-0.66 shape=(1, 9000, 1)
logits [[ 1.7209933  -1.8571681  -2.032071   -0.47277465]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.339 " + "l1=0.339" + "l2=0 f=-0.707 shape=(1, 9000, 1)
logits [[ 2.3104799 -2.0685797 -1.9868555 -1.0843691]]
Iteration 100 of 1000: loss=0.0892 " + "l1=0" + "l2=0.0892 f=-0.569 shape=(1, 9000, 1)
logits [[ 0.49768946 -1.5309026  -1.7640475   0.52301586]]
Iteration 200 of 1000: loss=0.0506 " + "l1=0" + "l2=0.0506 f=-0.538 shape=(1, 9000, 1)
logits [[ 0.3803353  -1.3590955  -1.5654075   0.39094028]]
Iteration 300 of 1000: loss=0.0399 " + "l1=0" + "l2=0.0399 f=-0.529 shape=(1, 9000, 1)
logits [[ 0.36864075 -1.333432   -1.5556959   0.40294778]]
Iteration 400 of 1000: loss=0.0312 " + "l1=0" + "l2=0.0312 f=-0.522 shape=(1, 9000, 1)
logits [[ 0.34763363 -1.2993145  -1.5149434   0.38025746]]
Iteration 500 of 1000: loss=0.0242 " + "l1=0" + "l2=0.0242 f=-0.518 shape=(1, 9000, 1)
logits [[ 0.35437712 -1.290433   -1.4934727   0.35688195]]
Iteration 600 of 1000: loss=0.0197 " + "l1=0" + "l2=0.0197 f=-0.51 shape=(1, 9000, 1)
logits [[ 0.33176565 -1.274162   -1.4635242   0.3656164 ]]
Iteration 700 of 1000: loss=0.0168 " + "l1=0" + "l2=0.0168 f=-0.506 shape=(1, 9000, 1)
logits [[ 0.32189178 -1.2679242  -1.4490495   0.3703848 ]]
Iteration 800 of 1000: loss=0.0145 " + "l1=0" + "l2=0.0145 f=-0.506 shape=(1, 9000, 1)
logits [[ 0.33141312 -1.2703698  -1.4528929   0.36889035]]
Iteration 900 of 1000: loss=0.0127 " + "l1=0" + "l2=0.0127 f=-0.506 shape=(1, 9000, 1)
logits [[ 0.34719983 -1.2732491  -1.4642401   0.3646407 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.187 " + "l1=0.187" + "l2=0 f=-0.707 shape=(1, 9000, 1)
logits [[ 2.3104799 -2.0685797 -1.9868555 -1.0843691]]
Iteration 100 of 1000: loss=0.113 " + "l1=0.0712" + "l2=0.0423 f=-0.643 shape=(1, 9000, 1)
logits [[ 1.250969   -1.7926308  -1.9878979  -0.04301913]]
Iteration 200 of 1000: loss=0.054 " + "l1=0.000841" + "l2=0.0531 f=-0.591 shape=(1, 9000, 1)
logits [[ 0.5120442 -1.5347338 -1.8400135  0.4967563]]
Iteration 300 of 1000: loss=0.0384 " + "l1=8.75e-05" + "l2=0.0383 f=-0.556 shape=(1, 9000, 1)
logits [[ 0.4504488  -1.4489479  -1.6754224   0.44885823]]
Iteration 400 of 1000: loss=0.0292 " + "l1=0" + "l2=0.0292 f=-0.535 shape=(1, 9000, 1)
logits [[ 0.40272686 -1.3834118  -1.5686593   0.41005674]]
Iteration 500 of 1000: loss=0.0222 " + "l1=0" + "l2=0.0222 f=-0.522 shape=(1, 9000, 1)
logits [[ 0.35172203 -1.3346514  -1.4803014   0.3746139 ]]
Iteration 600 of 1000: loss=0.018 " + "l1=0" + "l2=0.018 f=-0.518 shape=(1, 9000, 1)
logits [[ 0.3564204 -1.3311493 -1.4555682  0.360033 ]]
Iteration 700 of 1000: loss=0.0157 " + "l1=0.00046" + "l2=0.0152 f=-0.514 shape=(1, 9000, 1)
logits [[ 0.35993484 -1.324103   -1.4426025   0.35156623]]
Iteration 800 of 1000: loss=0.0135 " + "l1=0.00018" + "l2=0.0134 f=-0.512 shape=(1, 9000, 1)
logits [[ 0.35507232 -1.31648    -1.4368697   0.35179973]]
Iteration 900 of 1000: loss=0.0122 " + "l1=0" + "l2=0.0122 f=-0.509 shape=(1, 9000, 1)
logits [[ 0.3535665 -1.3144706 -1.4417123  0.3670331]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.11 " + "l1=0.11" + "l2=0 f=-0.707 shape=(1, 9000, 1)
logits [[ 2.3104799 -2.0685797 -1.9868555 -1.0843691]]
Iteration 100 of 1000: loss=0.0885 " + "l1=0.078" + "l2=0.0106 f=-0.675 shape=(1, 9000, 1)
logits [[ 1.8282242  -1.9371285  -2.0215998  -0.57135296]]
Iteration 200 of 1000: loss=0.0744 " + "l1=0.0548" + "l2=0.0197 f=-0.658 shape=(1, 9000, 1)
logits [[ 1.4561311  -1.8200907  -2.0403404  -0.22911623]]
Iteration 300 of 1000: loss=0.0534 " + "l1=0.0183" + "l2=0.0351 f=-0.612 shape=(1, 9000, 1)
logits [[ 0.82940453 -1.6685073  -1.8756746   0.26772022]]
Iteration 400 of 1000: loss=0.0351 " + "l1=0.00024" + "l2=0.0348 f=-0.571 shape=(1, 9000, 1)
logits [[ 0.4945421  -1.536764   -1.7284544   0.48714417]]
Iteration 500 of 1000: loss=0.026 " + "l1=0.000321" + "l2=0.0257 f=-0.556 shape=(1, 9000, 1)
logits [[ 0.49884132 -1.5335262  -1.6789787   0.488957  ]]
Iteration 600 of 1000: loss=0.0209 " + "l1=0.000103" + "l2=0.0208 f=-0.545 shape=(1, 9000, 1)
logits [[ 0.49488577 -1.5231296  -1.6418666   0.4917202 ]]
Iteration 700 of 1000: loss=0.0176 " + "l1=0" + "l2=0.0176 f=-0.537 shape=(1, 9000, 1)
logits [[ 0.4850562  -1.5055687  -1.6265345   0.50071466]]
Iteration 800 of 1000: loss=0.0148 " + "l1=0" + "l2=0.0148 f=-0.522 shape=(1, 9000, 1)
logits [[ 0.4578382 -1.4532597 -1.5797161  0.487589 ]]
Iteration 900 of 1000: loss=0.0123 " + "l1=0" + "l2=0.0123 f=-0.516 shape=(1, 9000, 1)
logits [[ 0.43263873 -1.4053111  -1.5272676   0.43442878]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0721 " + "l1=0.0721" + "l2=0 f=-0.707 shape=(1, 9000, 1)
logits [[ 2.3104799 -2.0685797 -1.9868555 -1.0843691]]
Iteration 100 of 1000: loss=0.0632 " + "l1=0.0588" + "l2=0.00434 f=-0.686 shape=(1, 9000, 1)
logits [[ 2.0086217  -1.988331   -2.0045085  -0.76067215]]
Iteration 200 of 1000: loss=0.0585 " + "l1=0.052" + "l2=0.0065 f=-0.677 shape=(1, 9000, 1)
logits [[ 1.8451285  -1.9360576  -2.015301   -0.60077244]]
Iteration 300 of 1000: loss=0.0541 " + "l1=0.045" + "l2=0.00907 f=-0.667 shape=(1, 9000, 1)
logits [[ 1.6765803  -1.870916   -2.030735   -0.44199997]]
Iteration 400 of 1000: loss=0.049 " + "l1=0.0364" + "l2=0.0127 f=-0.653 shape=(1, 9000, 1)
logits [[ 1.4661751  -1.7960217  -2.037741   -0.24564946]]
Iteration 500 of 1000: loss=0.041 " + "l1=0.0226" + "l2=0.0184 f=-0.613 shape=(1, 9000, 1)
logits [[ 1.0963813  -1.6701301  -1.9094257   0.03148334]]
Iteration 600 of 1000: loss=0.0279 " + "l1=0.00342" + "l2=0.0245 f=-0.553 shape=(1, 9000, 1)
logits [[ 0.5559321  -1.5421106  -1.6204325   0.39487237]]
Iteration 700 of 1000: loss=0.0206 " + "l1=8.46e-05" + "l2=0.0205 f=-0.538 shape=(1, 9000, 1)
logits [[ 0.47943783 -1.5106853  -1.5965939   0.47545442]]
Iteration 800 of 1000: loss=0.0168 " + "l1=4.02e-05" + "l2=0.0168 f=-0.53 shape=(1, 9000, 1)
logits [[ 0.484287  -1.5021833 -1.5859284  0.4823965]]
Iteration 900 of 1000: loss=0.0138 " + "l1=3.65e-05" + "l2=0.0137 f=-0.518 shape=(1, 9000, 1)
logits [[ 0.45829675 -1.4560074  -1.5316705   0.45657876]]
--- 323.21572828292847 seconds ---
Adv result:3
Loading record A00964
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0461 " + "l1=0.0461" + "l2=0 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.9273677 -1.6792332  1.6825116 -5.1541696]]
Iteration 100 of 1000: loss=0.0455 " + "l1=0.0452" + "l2=0.000344 f=-0.554 shape=(1, 9000, 1)
logits [[ 2.8724139 -1.6441776  1.6638739 -5.109765 ]]
Iteration 200 of 1000: loss=0.0453 " + "l1=0.045" + "l2=0.000375 f=-0.554 shape=(1, 9000, 1)
logits [[ 2.861187  -1.6355433  1.659731  -5.1030383]]
Iteration 300 of 1000: loss=0.0452 " + "l1=0.0447" + "l2=0.000467 f=-0.554 shape=(1, 9000, 1)
logits [[ 2.8483768 -1.6265104  1.6550591 -5.094445 ]]
Iteration 400 of 1000: loss=0.0451 " + "l1=0.0445" + "l2=0.000597 f=-0.554 shape=(1, 9000, 1)
logits [[ 2.8353086 -1.6180136  1.6507409 -5.0852966]]
Iteration 500 of 1000: loss=0.045 " + "l1=0.0443" + "l2=0.000689 f=-0.554 shape=(1, 9000, 1)
logits [[ 2.822563  -1.6099732  1.6465994 -5.0755916]]
Iteration 600 of 1000: loss=0.045 " + "l1=0.0441" + "l2=0.000913 f=-0.554 shape=(1, 9000, 1)
logits [[ 2.810229  -1.6025686  1.6426902 -5.065341 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.461 " + "l1=0.461" + "l2=0 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.9273677 -1.6792332  1.6825116 -5.1541696]]
Iteration 100 of 1000: loss=0.413 " + "l1=0.389" + "l2=0.0238 f=-0.544 shape=(1, 9000, 1)
logits [[ 2.4776027 -1.4125521  1.5336096 -4.773954 ]]
Iteration 200 of 1000: loss=0.393 " + "l1=0.36" + "l2=0.0333 f=-0.545 shape=(1, 9000, 1)
logits [[ 2.281699  -1.3198211  1.4771214 -4.6172757]]
Iteration 300 of 1000: loss=0.376 " + "l1=0.336" + "l2=0.0402 f=-0.534 shape=(1, 9000, 1)
logits [[ 2.1211562 -1.2416023  1.4284555 -4.444708 ]]
Iteration 400 of 1000: loss=0.361 " + "l1=0.315" + "l2=0.0463 f=-0.528 shape=(1, 9000, 1)
logits [[ 1.9638586 -1.1845311  1.3865237 -4.2794666]]
Iteration 500 of 1000: loss=0.347 " + "l1=0.294" + "l2=0.0531 f=-0.521 shape=(1, 9000, 1)
logits [[ 1.7999365 -1.137235   1.3484788 -4.0946455]]
Iteration 600 of 1000: loss=0.334 " + "l1=0.275" + "l2=0.0594 f=-0.516 shape=(1, 9000, 1)
logits [[ 1.6505352 -1.09863    1.3170735 -3.9316585]]
Iteration 700 of 1000: loss=0.324 " + "l1=0.259" + "l2=0.0645 f=-0.512 shape=(1, 9000, 1)
logits [[ 1.5248762 -1.0671439  1.2912768 -3.7955217]]
Iteration 800 of 1000: loss=0.314 " + "l1=0.247" + "l2=0.0673 f=-0.51 shape=(1, 9000, 1)
logits [[ 1.4204963 -1.0508198  1.2753105 -3.6842709]]
Iteration 900 of 1000: loss=0.307 " + "l1=0.237" + "l2=0.0699 f=-0.507 shape=(1, 9000, 1)
logits [[ 1.3312786 -1.0382411  1.2669111 -3.589143 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.61 " + "l1=4.61" + "l2=0 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.9273677 -1.6792332  1.6825116 -5.1541696]]
Iteration 100 of 1000: loss=1.98 " + "l1=1.16" + "l2=0.818 f=-0.483 shape=(1, 9000, 1)
logits [[ 0.71170855 -0.4351885   0.7261761  -2.9360754 ]]
Iteration 200 of 1000: loss=1.34 " + "l1=0.455" + "l2=0.884 f=-0.416 shape=(1, 9000, 1)
logits [[ 0.39302412 -0.06220984  0.3923071  -2.3865864 ]]
Iteration 300 of 1000: loss=0.954 " + "l1=0.0846" + "l2=0.87 f=-0.386 shape=(1, 9000, 1)
logits [[ 0.1706449   0.09290295  0.17752896 -1.9848328 ]]
Iteration 400 of 1000: loss=0.648 " + "l1=0.00338" + "l2=0.645 f=-0.383 shape=(1, 9000, 1)
logits [[ 0.07785359  0.09425142  0.09763234 -1.8022877 ]]
Iteration 500 of 1000: loss=0.534 " + "l1=0.00827" + "l2=0.526 f=-0.378 shape=(1, 9000, 1)
logits [[ 0.08053605  0.07440607  0.08267713 -1.7501478 ]]
Iteration 600 of 1000: loss=0.472 " + "l1=0" + "l2=0.472 f=-0.372 shape=(1, 9000, 1)
logits [[ 0.05873248  0.07091112  0.06688897 -1.6836617 ]]
Iteration 700 of 1000: loss=0.439 " + "l1=0" + "l2=0.439 f=-0.366 shape=(1, 9000, 1)
logits [[ 0.02949928  0.06656574  0.05826606 -1.6195431 ]]
Iteration 800 of 1000: loss=0.41 " + "l1=0.00259" + "l2=0.408 f=-0.361 shape=(1, 9000, 1)
logits [[ 0.04216353  0.05319662  0.05578294 -1.5932474 ]]
Iteration 900 of 1000: loss=0.393 " + "l1=0" + "l2=0.393 f=-0.357 shape=(1, 9000, 1)
logits [[ 0.02681557  0.0516706   0.0456287  -1.5533597 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.53 " + "l1=2.53" + "l2=0 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.9273677 -1.6792332  1.6825116 -5.1541696]]
Iteration 100 of 1000: loss=1.44 " + "l1=1.04" + "l2=0.395 f=-0.521 shape=(1, 9000, 1)
logits [[ 1.0678725  -0.82484955  1.0737177  -3.4004874 ]]
Iteration 200 of 1000: loss=1.19 " + "l1=0.804" + "l2=0.382 f=-0.517 shape=(1, 9000, 1)
logits [[ 0.873186   -0.5857932   0.87568873 -3.2295053 ]]
Iteration 300 of 1000: loss=1.03 " + "l1=0.612" + "l2=0.414 f=-0.47 shape=(1, 9000, 1)
logits [[ 0.69486797 -0.40601885  0.7061711  -2.8757198 ]]
Iteration 400 of 1000: loss=0.874 " + "l1=0.442" + "l2=0.432 f=-0.422 shape=(1, 9000, 1)
logits [[ 0.5231801  -0.27100712  0.53286415 -2.474168  ]]
Iteration 500 of 1000: loss=0.725 " + "l1=0.254" + "l2=0.471 f=-0.384 shape=(1, 9000, 1)
logits [[ 0.34317073 -0.11854833  0.33623144 -2.0976453 ]]
Iteration 600 of 1000: loss=0.56 " + "l1=0.0368" + "l2=0.523 f=-0.376 shape=(1, 9000, 1)
logits [[ 0.09518292  0.03149188  0.09839633 -1.7304318 ]]
Iteration 700 of 1000: loss=0.46 " + "l1=0.0091" + "l2=0.451 f=-0.368 shape=(1, 9000, 1)
logits [[ 0.05794263  0.04139814  0.05637032 -1.6284912 ]]
Iteration 800 of 1000: loss=0.423 " + "l1=0.00487" + "l2=0.418 f=-0.367 shape=(1, 9000, 1)
logits [[ 0.04767916  0.04087774  0.04973053 -1.6071529 ]]
Iteration 900 of 1000: loss=0.397 " + "l1=0.00394" + "l2=0.393 f=-0.362 shape=(1, 9000, 1)
logits [[ 0.03504748  0.04010746  0.04726548 -1.5704048 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.5 " + "l1=1.5" + "l2=0 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.9273677 -1.6792332  1.6825116 -5.1541696]]
Iteration 100 of 1000: loss=1.06 " + "l1=0.858" + "l2=0.197 f=-0.527 shape=(1, 9000, 1)
logits [[ 1.5834726 -1.057119   1.2757301 -3.9093127]]
Iteration 200 of 1000: loss=0.872 " + "l1=0.653" + "l2=0.219 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.1228979 -0.8857367  1.1220444 -3.5455685]]
Iteration 300 of 1000: loss=0.796 " + "l1=0.58" + "l2=0.215 f=-0.527 shape=(1, 9000, 1)
logits [[ 1.0205082 -0.7643067  1.0214571 -3.386632 ]]
Iteration 400 of 1000: loss=0.731 " + "l1=0.512" + "l2=0.219 f=-0.501 shape=(1, 9000, 1)
logits [[ 0.91755277 -0.65748984  0.9127745  -3.1787996 ]]
Iteration 500 of 1000: loss=0.674 " + "l1=0.442" + "l2=0.232 f=-0.476 shape=(1, 9000, 1)
logits [[ 0.7812719  -0.5624596   0.79801476 -2.9199624 ]]
Iteration 600 of 1000: loss=0.63 " + "l1=0.391" + "l2=0.239 f=-0.45 shape=(1, 9000, 1)
logits [[ 0.7144935  -0.48692417  0.7148931  -2.7426279 ]]
Iteration 700 of 1000: loss=0.597 " + "l1=0.35" + "l2=0.247 f=-0.43 shape=(1, 9000, 1)
logits [[ 0.64264244 -0.43428808  0.6394859  -2.5669746 ]]
Iteration 800 of 1000: loss=0.565 " + "l1=0.303" + "l2=0.262 f=-0.414 shape=(1, 9000, 1)
logits [[ 0.5545962  -0.37608132  0.55523473 -2.3897598 ]]
Iteration 900 of 1000: loss=0.535 " + "l1=0.254" + "l2=0.281 f=-0.4 shape=(1, 9000, 1)
logits [[ 0.4623482  -0.31789577  0.46068394 -2.205434  ]]
--- 302.18968319892883 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0124 " + "l1=0.0124" + "l2=0 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.9273677 -1.6792332  1.6825116 -5.1541696]]
Iteration 100 of 1000: loss=0.0122 " + "l1=0.0121" + "l2=0.000168 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.8916874 -1.6763725  1.6835794 -5.1232276]]
Iteration 200 of 1000: loss=0.0122 " + "l1=0.012" + "l2=0.00015 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.8873177 -1.6755867  1.6835113 -5.119762 ]]
Iteration 300 of 1000: loss=0.0121 " + "l1=0.012" + "l2=0.000184 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.880448  -1.6749693  1.6838406 -5.114241 ]]
Iteration 400 of 1000: loss=0.0121 " + "l1=0.0119" + "l2=0.000235 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.8732128 -1.674312   1.6841509 -5.1083174]]
Iteration 500 of 1000: loss=0.0122 " + "l1=0.0118" + "l2=0.000348 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.8661149 -1.6737919  1.6844591 -5.102193 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.124 " + "l1=0.124" + "l2=0 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.9273677 -1.6792332  1.6825116 -5.1541696]]
Iteration 100 of 1000: loss=0.105 " + "l1=0.0954" + "l2=0.0101 f=-0.557 shape=(1, 9000, 1)
logits [[ 2.6472619 -1.6493708  1.6936126 -4.921271 ]]
Iteration 200 of 1000: loss=0.0975 " + "l1=0.0833" + "l2=0.0141 f=-0.559 shape=(1, 9000, 1)
logits [[ 2.536223  -1.6465027  1.7028544 -4.8269362]]
Iteration 300 of 1000: loss=0.0898 " + "l1=0.0716" + "l2=0.0182 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.4269357 -1.64349    1.7107524 -4.725334 ]]
Iteration 400 of 1000: loss=0.0829 " + "l1=0.0613" + "l2=0.0216 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.3243265 -1.6299392  1.7108823 -4.636603 ]]
Iteration 500 of 1000: loss=0.076 " + "l1=0.0502" + "l2=0.0258 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.2169297 -1.6266209  1.7149132 -4.528406 ]]
Iteration 600 of 1000: loss=0.0682 " + "l1=0.0389" + "l2=0.0293 f=-0.553 shape=(1, 9000, 1)
logits [[ 2.1043632 -1.6215794  1.7154858 -4.4106283]]
Iteration 700 of 1000: loss=0.0596 " + "l1=0.0265" + "l2=0.0332 f=-0.553 shape=(1, 9000, 1)
logits [[ 1.9841316 -1.6174818  1.7195495 -4.29789  ]]
Iteration 800 of 1000: loss=0.0512 " + "l1=0.0147" + "l2=0.0365 f=-0.554 shape=(1, 9000, 1)
logits [[ 1.8773614 -1.6147176  1.7300676 -4.2087493]]
Iteration 900 of 1000: loss=0.0426 " + "l1=0.00181" + "l2=0.0408 f=-0.555 shape=(1, 9000, 1)
logits [[ 1.755208  -1.6105742  1.7371186 -4.1020427]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0685 " + "l1=0.0685" + "l2=0 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.9273677 -1.6792332  1.6825116 -5.1541696]]
Iteration 100 of 1000: loss=0.0628 " + "l1=0.0598" + "l2=0.00298 f=-0.557 shape=(1, 9000, 1)
logits [[ 2.7744853 -1.662286   1.6869622 -5.0267563]]
Iteration 200 of 1000: loss=0.0605 " + "l1=0.0565" + "l2=0.00407 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.7166557 -1.6540315  1.6899287 -4.984605 ]]
Iteration 300 of 1000: loss=0.0585 " + "l1=0.0534" + "l2=0.00514 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.6663802 -1.6541471  1.6955456 -4.941445 ]]
Iteration 400 of 1000: loss=0.0567 " + "l1=0.0507" + "l2=0.00604 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.6208155 -1.6530366  1.6993992 -4.89936  ]]
Iteration 500 of 1000: loss=0.055 " + "l1=0.0481" + "l2=0.00695 f=-0.557 shape=(1, 9000, 1)
logits [[ 2.5760999 -1.6512045  1.7021352 -4.8559084]]
Iteration 600 of 1000: loss=0.0534 " + "l1=0.0456" + "l2=0.00779 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.531478  -1.645517   1.7031034 -4.8118114]]
Iteration 700 of 1000: loss=0.0518 " + "l1=0.0432" + "l2=0.00865 f=-0.554 shape=(1, 9000, 1)
logits [[ 2.4885385 -1.6393183  1.7039311 -4.7693815]]
Iteration 800 of 1000: loss=0.0502 " + "l1=0.0407" + "l2=0.00951 f=-0.553 shape=(1, 9000, 1)
logits [[ 2.4439883 -1.6337523  1.7041874 -4.725829 ]]
Iteration 900 of 1000: loss=0.0487 " + "l1=0.0383" + "l2=0.0104 f=-0.552 shape=(1, 9000, 1)
logits [[ 2.4027543 -1.628983   1.7058533 -4.686616 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0965 " + "l1=0.0965" + "l2=0 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.9273677 -1.6792332  1.6825116 -5.1541696]]
Iteration 100 of 1000: loss=0.0852 " + "l1=0.0793" + "l2=0.00591 f=-0.557 shape=(1, 9000, 1)
logits [[ 2.713161  -1.654225   1.6898183 -4.975139 ]]
Iteration 200 of 1000: loss=0.0805 " + "l1=0.0722" + "l2=0.00827 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.6300397 -1.6510159  1.6985412 -4.909479 ]]
Iteration 300 of 1000: loss=0.0764 " + "l1=0.066" + "l2=0.0104 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.5546596 -1.6484904  1.7034596 -4.841076 ]]
Iteration 400 of 1000: loss=0.0723 " + "l1=0.0596" + "l2=0.0127 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.4768746 -1.6449177  1.7078909 -4.7631497]]
Iteration 500 of 1000: loss=0.0686 " + "l1=0.0541" + "l2=0.0145 f=-0.555 shape=(1, 9000, 1)
logits [[ 2.4062438 -1.6369468  1.7083439 -4.6966476]]
Iteration 600 of 1000: loss=0.065 " + "l1=0.0487" + "l2=0.0163 f=-0.554 shape=(1, 9000, 1)
logits [[ 2.3373432 -1.6304176  1.7086607 -4.6297593]]
Iteration 700 of 1000: loss=0.061 " + "l1=0.0423" + "l2=0.0186 f=-0.552 shape=(1, 9000, 1)
logits [[ 2.2581346 -1.6257337  1.7118957 -4.552581 ]]
Iteration 800 of 1000: loss=0.0568 " + "l1=0.0359" + "l2=0.0208 f=-0.55 shape=(1, 9000, 1)
logits [[ 2.1789927 -1.6231537  1.7153009 -4.4729466]]
Iteration 900 of 1000: loss=0.0523 " + "l1=0.0297" + "l2=0.0226 f=-0.549 shape=(1, 9000, 1)
logits [[ 2.098946  -1.6172901  1.7158489 -4.395432 ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.11 " + "l1=0.11" + "l2=0 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.9273677 -1.6792332  1.6825116 -5.1541696]]
Iteration 100 of 1000: loss=0.0956 " + "l1=0.0878" + "l2=0.0078 f=-0.557 shape=(1, 9000, 1)
logits [[ 2.6811533 -1.6514833  1.6914772 -4.9491177]]
Iteration 200 of 1000: loss=0.0894 " + "l1=0.0786" + "l2=0.0108 f=-0.559 shape=(1, 9000, 1)
logits [[ 2.584552  -1.6463455  1.6992191 -4.8716564]]
Iteration 300 of 1000: loss=0.0837 " + "l1=0.0697" + "l2=0.014 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.4930956 -1.6472502  1.7079518 -4.7840414]]
Iteration 400 of 1000: loss=0.0782 " + "l1=0.0615" + "l2=0.0168 f=-0.557 shape=(1, 9000, 1)
logits [[ 2.4022043 -1.6373199  1.7097088 -4.7016788]]
Iteration 500 of 1000: loss=0.0733 " + "l1=0.0541" + "l2=0.0192 f=-0.555 shape=(1, 9000, 1)
logits [[ 2.319928  -1.6299549  1.7101583 -4.6205845]]
Iteration 600 of 1000: loss=0.0679 " + "l1=0.0453" + "l2=0.0226 f=-0.554 shape=(1, 9000, 1)
logits [[ 2.2258139 -1.6261561  1.7148736 -4.5295196]]
Iteration 700 of 1000: loss=0.0619 " + "l1=0.037" + "l2=0.0249 f=-0.551 shape=(1, 9000, 1)
logits [[ 2.1337202 -1.6222582  1.7167339 -4.433599 ]]
Iteration 800 of 1000: loss=0.0557 " + "l1=0.0276" + "l2=0.028 f=-0.55 shape=(1, 9000, 1)
logits [[ 2.0296042 -1.6159891  1.7185345 -4.3307652]]
Iteration 900 of 1000: loss=0.0491 " + "l1=0.0177" + "l2=0.0314 f=-0.552 shape=(1, 9000, 1)
logits [[ 1.9251353 -1.6123508  1.725382  -4.2451696]]
--- 294.82722568511963 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0808 " + "l1=0.0808" + "l2=0 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.9273677 -1.6792332  1.6825116 -5.1541696]]
Iteration 100 of 1000: loss=0.0797 " + "l1=0.0791" + "l2=0.000618 f=-0.551 shape=(1, 9000, 1)
logits [[ 2.8526623 -1.6626587  1.66249   -5.0570874]]
Iteration 200 of 1000: loss=0.0794 " + "l1=0.0787" + "l2=0.000696 f=-0.55 shape=(1, 9000, 1)
logits [[ 2.835305  -1.6583999  1.6580749 -5.034238 ]]
Iteration 300 of 1000: loss=0.0791 " + "l1=0.0782" + "l2=0.000855 f=-0.548 shape=(1, 9000, 1)
logits [[ 2.815958  -1.6542823  1.6532166 -5.008171 ]]
Iteration 400 of 1000: loss=0.0788 " + "l1=0.0778" + "l2=0.00104 f=-0.547 shape=(1, 9000, 1)
logits [[ 2.79616   -1.6500139  1.648043  -4.9802494]]
Iteration 500 of 1000: loss=0.0786 " + "l1=0.0773" + "l2=0.00127 f=-0.545 shape=(1, 9000, 1)
logits [[ 2.7764153 -1.6454926  1.643085  -4.9527392]]
Iteration 600 of 1000: loss=0.0783 " + "l1=0.0768" + "l2=0.00146 f=-0.543 shape=(1, 9000, 1)
logits [[ 2.7570076 -1.641292   1.6385127 -4.9252987]]
Iteration 700 of 1000: loss=0.078 " + "l1=0.0764" + "l2=0.00163 f=-0.541 shape=(1, 9000, 1)
logits [[ 2.7388806 -1.6374302  1.6341288 -4.898767 ]]
Iteration 800 of 1000: loss=0.0778 " + "l1=0.0759" + "l2=0.00188 f=-0.539 shape=(1, 9000, 1)
logits [[ 2.7211494 -1.6338142  1.6299579 -4.872502 ]]
Iteration 900 of 1000: loss=0.0776 " + "l1=0.0755" + "l2=0.00206 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.704334  -1.6302326  1.6260353 -4.847293 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.808 " + "l1=0.808" + "l2=0 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.9273677 -1.6792332  1.6825116 -5.1541696]]
Iteration 100 of 1000: loss=0.7 " + "l1=0.638" + "l2=0.062 f=-0.51 shape=(1, 9000, 1)
logits [[ 2.191873  -1.5280206  1.4831853 -4.1875076]]
Iteration 200 of 1000: loss=0.642 " + "l1=0.551" + "l2=0.0905 f=-0.491 shape=(1, 9000, 1)
logits [[ 1.8213873 -1.4850097  1.3941532 -3.6933115]]
Iteration 300 of 1000: loss=0.58 " + "l1=0.462" + "l2=0.117 f=-0.474 shape=(1, 9000, 1)
logits [[ 1.4434556 -1.476637   1.317175  -3.179319 ]]
Iteration 400 of 1000: loss=0.527 " + "l1=0.404" + "l2=0.122 f=-0.453 shape=(1, 9000, 1)
logits [[ 1.2359726 -1.47237    1.2323134 -2.8082745]]
Iteration 500 of 1000: loss=0.494 " + "l1=0.375" + "l2=0.12 f=-0.433 shape=(1, 9000, 1)
logits [[ 1.153269  -1.4508114  1.1554348 -2.5917358]]
Iteration 600 of 1000: loss=0.465 " + "l1=0.335" + "l2=0.129 f=-0.41 shape=(1, 9000, 1)
logits [[ 1.0182503 -1.431873   1.0642376 -2.29028  ]]
Iteration 700 of 1000: loss=0.43 " + "l1=0.289" + "l2=0.141 f=-0.391 shape=(1, 9000, 1)
logits [[ 0.83238536 -1.4198018   0.9579765  -1.9358786 ]]
Iteration 800 of 1000: loss=0.402 " + "l1=0.249" + "l2=0.153 f=-0.378 shape=(1, 9000, 1)
logits [[ 0.6518118 -1.4016305  0.8657139 -1.6261678]]
Iteration 900 of 1000: loss=0.374 " + "l1=0.218" + "l2=0.155 f=-0.364 shape=(1, 9000, 1)
logits [[ 0.51960075 -1.3828217   0.7954799  -1.3888772 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.08 " + "l1=8.08" + "l2=0 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.9273677 -1.6792332  1.6825116 -5.1541696]]
Iteration 100 of 1000: loss=1.89 " + "l1=0.0145" + "l2=1.87 f=-0.285 shape=(1, 9000, 1)
logits [[-0.23801379 -1.2587748   0.18578427  0.171301  ]]
Iteration 200 of 1000: loss=1.18 " + "l1=0" + "l2=1.18 f=-0.271 shape=(1, 9000, 1)
logits [[-0.17356373 -1.2510463   0.15963472  0.18150648]]
Iteration 300 of 1000: loss=0.901 " + "l1=0.0257" + "l2=0.876 f=-0.259 shape=(1, 9000, 1)
logits [[-0.13986166 -1.2447588   0.18668146  0.16094011]]
Iteration 400 of 1000: loss=0.737 " + "l1=0" + "l2=0.737 f=-0.254 shape=(1, 9000, 1)
logits [[-0.16156948 -1.2212614   0.16787021  0.19932795]]
Iteration 500 of 1000: loss=0.647 " + "l1=0.018" + "l2=0.629 f=-0.256 shape=(1, 9000, 1)
logits [[-0.14859553 -1.2185786   0.18009083  0.16210076]]
Iteration 600 of 1000: loss=0.573 " + "l1=0" + "l2=0.573 f=-0.253 shape=(1, 9000, 1)
logits [[-0.17077956 -1.2069919   0.16499813  0.19890541]]
Iteration 700 of 1000: loss=0.522 " + "l1=0.0101" + "l2=0.512 f=-0.257 shape=(1, 9000, 1)
logits [[-0.16271591 -1.210707    0.17757495  0.16746503]]
Iteration 800 of 1000: loss=0.475 " + "l1=0" + "l2=0.475 f=-0.259 shape=(1, 9000, 1)
logits [[-0.17884344 -1.199939    0.16871323  0.17528167]]
Iteration 900 of 1000: loss=0.447 " + "l1=0" + "l2=0.447 f=-0.259 shape=(1, 9000, 1)
logits [[-0.18539652 -1.198453    0.16389197  0.18474427]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.44 " + "l1=4.44" + "l2=0 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.9273677 -1.6792332  1.6825116 -5.1541696]]
Iteration 100 of 1000: loss=1.85 " + "l1=0.83" + "l2=1.02 f=-0.373 shape=(1, 9000, 1)
logits [[ 0.24815083 -1.3360286   0.552731   -0.9567017 ]]
Iteration 200 of 1000: loss=1.05 " + "l1=0" + "l2=1.05 f=-0.281 shape=(1, 9000, 1)
logits [[-0.21406549 -1.2788405   0.18356861  0.18702933]]
Iteration 300 of 1000: loss=0.701 " + "l1=0.00115" + "l2=0.699 f=-0.267 shape=(1, 9000, 1)
logits [[-0.18063137 -1.2683955   0.19099165  0.18890673]]
Iteration 400 of 1000: loss=0.584 " + "l1=0" + "l2=0.584 f=-0.265 shape=(1, 9000, 1)
logits [[-0.1893568  -1.2437158   0.17425399  0.19699532]]
Iteration 500 of 1000: loss=0.508 " + "l1=0.00485" + "l2=0.503 f=-0.266 shape=(1, 9000, 1)
logits [[-0.17992811 -1.2471249   0.18504585  0.17622438]]
Iteration 600 of 1000: loss=0.452 " + "l1=0" + "l2=0.452 f=-0.265 shape=(1, 9000, 1)
logits [[-0.1971559  -1.2448282   0.18307637  0.1971201 ]]
Iteration 700 of 1000: loss=0.416 " + "l1=0" + "l2=0.416 f=-0.265 shape=(1, 9000, 1)
logits [[-0.21028516 -1.2360001   0.17437951  0.2112121 ]]
Iteration 800 of 1000: loss=0.384 " + "l1=0.00459" + "l2=0.379 f=-0.268 shape=(1, 9000, 1)
logits [[-0.2009362  -1.2381928   0.18683831  0.17848739]]
Iteration 900 of 1000: loss=0.355 " + "l1=0" + "l2=0.355 f=-0.268 shape=(1, 9000, 1)
logits [[-0.20866185 -1.2360893   0.18603337  0.18818846]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.63 " + "l1=2.63" + "l2=0 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.9273677 -1.6792332  1.6825116 -5.1541696]]
Iteration 100 of 1000: loss=1.52 " + "l1=1.08" + "l2=0.439 f=-0.429 shape=(1, 9000, 1)
logits [[ 0.99225533 -1.3986247   1.0116662  -2.3220809 ]]
Iteration 200 of 1000: loss=1.13 " + "l1=0.577" + "l2=0.549 f=-0.374 shape=(1, 9000, 1)
logits [[ 0.38001096 -1.4022218   0.6511462  -1.1244378 ]]
Iteration 300 of 1000: loss=0.815 " + "l1=0.231" + "l2=0.584 f=-0.317 shape=(1, 9000, 1)
logits [[ 0.00677192 -1.3524507   0.39485472 -0.31554323]]
Iteration 400 of 1000: loss=0.564 " + "l1=0" + "l2=0.564 f=-0.266 shape=(1, 9000, 1)
logits [[-0.24339253 -1.2664917   0.21674     0.22739631]]
Iteration 500 of 1000: loss=0.454 " + "l1=0.00129" + "l2=0.453 f=-0.265 shape=(1, 9000, 1)
logits [[-0.229085  -1.2612308  0.2168488  0.2128917]]
Iteration 600 of 1000: loss=0.389 " + "l1=0.000791" + "l2=0.388 f=-0.264 shape=(1, 9000, 1)
logits [[-0.21825829 -1.2652553   0.2141699   0.21173677]]
Iteration 700 of 1000: loss=0.352 " + "l1=0.00184" + "l2=0.351 f=-0.266 shape=(1, 9000, 1)
logits [[-0.21848795 -1.2714202   0.21656236  0.21088824]]
Iteration 800 of 1000: loss=0.326 " + "l1=0" + "l2=0.326 f=-0.263 shape=(1, 9000, 1)
logits [[-0.2287606  -1.2679876   0.21357185  0.22963163]]
Iteration 900 of 1000: loss=0.301 " + "l1=0.00106" + "l2=0.3 f=-0.264 shape=(1, 9000, 1)
logits [[-0.23446465 -1.2690449   0.22440699  0.22115043]]
--- 323.89281964302063 seconds ---
Adv result:3
Loading record A00972
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0837 " + "l1=0.0837" + "l2=0 f=-0.629 shape=(1, 9000, 1)
logits [[ 5.8317447 -2.542018   2.695159  -8.499268 ]]
Iteration 100 of 1000: loss=0.0835 " + "l1=0.0833" + "l2=0.000212 f=-0.627 shape=(1, 9000, 1)
logits [[ 5.800608  -2.5247743  2.6845543 -8.46957  ]]
Iteration 200 of 1000: loss=0.0834 " + "l1=0.0832" + "l2=0.000195 f=-0.627 shape=(1, 9000, 1)
logits [[ 5.7979007 -2.5225585  2.6833344 -8.467229 ]]
Iteration 300 of 1000: loss=0.0834 " + "l1=0.0831" + "l2=0.000225 f=-0.627 shape=(1, 9000, 1)
logits [[ 5.793362  -2.519705   2.6815538 -8.46273  ]]
Iteration 400 of 1000: loss=0.0833 " + "l1=0.0831" + "l2=0.000271 f=-0.627 shape=(1, 9000, 1)
logits [[ 5.788579  -2.5167956  2.679699  -8.457869 ]]
Iteration 500 of 1000: loss=0.0833 " + "l1=0.083" + "l2=0.000358 f=-0.626 shape=(1, 9000, 1)
logits [[ 5.7839923 -2.514036   2.6779108 -8.453098 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.837 " + "l1=0.837" + "l2=0 f=-0.629 shape=(1, 9000, 1)
logits [[ 5.8317447 -2.542018   2.695159  -8.499268 ]]
Iteration 100 of 1000: loss=0.813 " + "l1=0.8" + "l2=0.0132 f=-0.621 shape=(1, 9000, 1)
logits [[ 5.5905557 -2.4115343  2.6219695 -8.286655 ]]
Iteration 200 of 1000: loss=0.803 " + "l1=0.783" + "l2=0.0197 f=-0.619 shape=(1, 9000, 1)
logits [[ 5.4833813 -2.3503795  2.5882401 -8.196225 ]]
Iteration 300 of 1000: loss=0.795 " + "l1=0.772" + "l2=0.0237 f=-0.616 shape=(1, 9000, 1)
logits [[ 5.4087663 -2.3086362  2.5624123 -8.127278 ]]
Iteration 400 of 1000: loss=0.79 " + "l1=0.762" + "l2=0.0275 f=-0.614 shape=(1, 9000, 1)
logits [[ 5.347115  -2.2761436  2.5402715 -8.066757 ]]
Iteration 500 of 1000: loss=0.785 " + "l1=0.753" + "l2=0.0313 f=-0.611 shape=(1, 9000, 1)
logits [[ 5.288587  -2.245784   2.5190372 -8.007767 ]]
Iteration 600 of 1000: loss=0.78 " + "l1=0.745" + "l2=0.0347 f=-0.609 shape=(1, 9000, 1)
logits [[ 5.2353263 -2.217311   2.499735  -7.9529095]]
Iteration 700 of 1000: loss=0.775 " + "l1=0.737" + "l2=0.038 f=-0.606 shape=(1, 9000, 1)
logits [[ 5.182696 -2.191874  2.482207 -7.896223]]
Iteration 800 of 1000: loss=0.771 " + "l1=0.73" + "l2=0.0412 f=-0.603 shape=(1, 9000, 1)
logits [[ 5.1297827 -2.1685946  2.4641376 -7.838146 ]]
Iteration 900 of 1000: loss=0.767 " + "l1=0.723" + "l2=0.044 f=-0.601 shape=(1, 9000, 1)
logits [[ 5.0777564 -2.148893   2.446074  -7.7795606]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.37 " + "l1=8.37" + "l2=0 f=-0.629 shape=(1, 9000, 1)
logits [[ 5.8317447 -2.542018   2.695159  -8.499268 ]]
Iteration 100 of 1000: loss=5.94 " + "l1=4.56" + "l2=1.38 f=-0.615 shape=(1, 9000, 1)
logits [[ 3.0384908 -1.5210152  1.9944285 -5.9724774]]
Iteration 200 of 1000: loss=4.16 " + "l1=1.89" + "l2=2.28 f=-0.621 shape=(1, 9000, 1)
logits [[ 1.2832137 -0.6023441  1.2735227 -4.439237 ]]
Iteration 300 of 1000: loss=3.38 " + "l1=1.44" + "l2=1.94 f=-0.615 shape=(1, 9000, 1)
logits [[ 1.0431534  -0.37924397  1.05623    -4.179947  ]]
Iteration 400 of 1000: loss=2.98 " + "l1=1.18" + "l2=1.8 f=-0.604 shape=(1, 9000, 1)
logits [[ 0.89983916 -0.2728917   0.91140014 -3.9537845 ]]
Iteration 500 of 1000: loss=2.66 " + "l1=1.01" + "l2=1.65 f=-0.581 shape=(1, 9000, 1)
logits [[ 0.7995023  -0.20574127  0.80580217 -3.7248714 ]]
Iteration 600 of 1000: loss=2.43 " + "l1=0.899" + "l2=1.53 f=-0.555 shape=(1, 9000, 1)
logits [[ 0.73369235 -0.16456501  0.7342962  -3.5241997 ]]
Iteration 700 of 1000: loss=2.26 " + "l1=0.806" + "l2=1.46 f=-0.526 shape=(1, 9000, 1)
logits [[ 0.6770987  -0.12845083  0.6718884  -3.3256962 ]]
Iteration 800 of 1000: loss=2.12 " + "l1=0.703" + "l2=1.42 f=-0.499 shape=(1, 9000, 1)
logits [[ 0.5823585  -0.08748813  0.6158084  -3.106693  ]]
Iteration 900 of 1000: loss=1.98 " + "l1=0.637" + "l2=1.35 f=-0.478 shape=(1, 9000, 1)
logits [[ 0.5501228  -0.07423259  0.5630276  -2.9512234 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=83.7 " + "l1=83.7" + "l2=0 f=-0.629 shape=(1, 9000, 1)
logits [[ 5.8317447 -2.542018   2.695159  -8.499268 ]]
Iteration 100 of 1000: loss=12.1 " + "l1=0" + "l2=12.1 f=-0.521 shape=(1, 9000, 1)
logits [[-0.6371019   0.23935002  0.23038901 -1.916971  ]]
Iteration 200 of 1000: loss=8.23 " + "l1=0" + "l2=8.23 f=-0.538 shape=(1, 9000, 1)
logits [[-0.37450445  0.24155338  0.186152   -2.2061543 ]]
Iteration 300 of 1000: loss=6.58 " + "l1=0" + "l2=6.58 f=-0.552 shape=(1, 9000, 1)
logits [[-0.21689412  0.17834239  0.17772461 -2.3454545 ]]
Iteration 400 of 1000: loss=5.88 " + "l1=0" + "l2=5.88 f=-0.55 shape=(1, 9000, 1)
logits [[-0.19017336  0.17042993  0.14455578 -2.3261015 ]]
Iteration 500 of 1000: loss=5.28 " + "l1=0" + "l2=5.28 f=-0.549 shape=(1, 9000, 1)
logits [[-0.13001086  0.15391265  0.13981068 -2.3604953 ]]
Iteration 600 of 1000: loss=4.95 " + "l1=0" + "l2=4.95 f=-0.545 shape=(1, 9000, 1)
logits [[-0.16421583  0.1662614   0.09884639 -2.27999   ]]
Iteration 700 of 1000: loss=4.45 " + "l1=0.00381" + "l2=4.45 f=-0.541 shape=(1, 9000, 1)
logits [[-0.04921977  0.12303931  0.12342037 -2.3606975 ]]
Iteration 800 of 1000: loss=4.34 " + "l1=0.209" + "l2=4.13 f=-0.538 shape=(1, 9000, 1)
logits [[ 0.00683129  0.10366187  0.12452923 -2.3880875 ]]
Iteration 900 of 1000: loss=3.92 " + "l1=0" + "l2=3.92 f=-0.535 shape=(1, 9000, 1)
logits [[ 0.00402448  0.12203203  0.11325385 -2.3776855 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=46.1 " + "l1=46.1" + "l2=0 f=-0.629 shape=(1, 9000, 1)
logits [[ 5.8317447 -2.542018   2.695159  -8.499268 ]]
Iteration 100 of 1000: loss=10.7 " + "l1=0.673" + "l2=10 f=-0.524 shape=(1, 9000, 1)
logits [[-0.3668646   0.21781029  0.34014106 -2.287094  ]]
Iteration 200 of 1000: loss=6.41 " + "l1=0" + "l2=6.41 f=-0.548 shape=(1, 9000, 1)
logits [[-0.22274789  0.21034591  0.20316684 -2.3845847 ]]
Iteration 300 of 1000: loss=5.32 " + "l1=0.0504" + "l2=5.27 f=-0.55 shape=(1, 9000, 1)
logits [[-0.10890271  0.17998718  0.1891537  -2.4614973 ]]
Iteration 400 of 1000: loss=4.68 " + "l1=0" + "l2=4.68 f=-0.542 shape=(1, 9000, 1)
logits [[-0.10061322  0.17812097  0.15893811 -2.4057693 ]]
Iteration 500 of 1000: loss=4.23 " + "l1=0" + "l2=4.23 f=-0.54 shape=(1, 9000, 1)
logits [[-0.08123786  0.16551806  0.14007883 -2.3835824 ]]
Iteration 600 of 1000: loss=3.83 " + "l1=0.0237" + "l2=3.81 f=-0.543 shape=(1, 9000, 1)
logits [[-0.03854653  0.13868725  0.14299686 -2.4160898 ]]
Iteration 700 of 1000: loss=3.56 " + "l1=0.019" + "l2=3.54 f=-0.547 shape=(1, 9000, 1)
logits [[-0.04372993  0.12700778  0.13045584 -2.4032757 ]]
Iteration 800 of 1000: loss=3.36 " + "l1=0" + "l2=3.36 f=-0.545 shape=(1, 9000, 1)
logits [[-0.05731966  0.12472307  0.09526669 -2.343281  ]]
Iteration 900 of 1000: loss=3.15 " + "l1=0" + "l2=3.15 f=-0.542 shape=(1, 9000, 1)
logits [[-0.0252198   0.10552583  0.0823961  -2.3294258 ]]
--- 294.30714988708496 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0314 " + "l1=0.0314" + "l2=0 f=-0.629 shape=(1, 9000, 1)
logits [[ 5.8317447 -2.542018   2.695159  -8.499268 ]]
Iteration 100 of 1000: loss=0.0312 " + "l1=0.0311" + "l2=0.000147 f=-0.629 shape=(1, 9000, 1)
logits [[ 5.807114  -2.5431542  2.697183  -8.477708 ]]
Iteration 200 of 1000: loss=0.0312 " + "l1=0.0311" + "l2=0.00011 f=-0.629 shape=(1, 9000, 1)
logits [[ 5.8074183 -2.542837   2.6973221 -8.478429 ]]
Iteration 300 of 1000: loss=0.0312 " + "l1=0.0311" + "l2=0.00014 f=-0.629 shape=(1, 9000, 1)
logits [[ 5.8052654 -2.54281    2.6976414 -8.476802 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.314 " + "l1=0.314" + "l2=0 f=-0.629 shape=(1, 9000, 1)
logits [[ 5.8317447 -2.542018   2.695159  -8.499268 ]]
Iteration 100 of 1000: loss=0.302 " + "l1=0.296" + "l2=0.00641 f=-0.632 shape=(1, 9000, 1)
logits [[ 5.6660376 -2.5433476  2.7084382 -8.359555 ]]
Iteration 200 of 1000: loss=0.298 " + "l1=0.289" + "l2=0.009 f=-0.634 shape=(1, 9000, 1)
logits [[ 5.6056724 -2.5408938  2.7138796 -8.314137 ]]
Iteration 300 of 1000: loss=0.295 " + "l1=0.284" + "l2=0.0112 f=-0.635 shape=(1, 9000, 1)
logits [[ 5.555959  -2.538178   2.7184324 -8.278001 ]]
Iteration 400 of 1000: loss=0.292 " + "l1=0.279" + "l2=0.013 f=-0.637 shape=(1, 9000, 1)
logits [[ 5.5153894 -2.535118   2.7216914 -8.248517 ]]
Iteration 500 of 1000: loss=0.29 " + "l1=0.275" + "l2=0.0147 f=-0.638 shape=(1, 9000, 1)
logits [[ 5.4783173 -2.5345256  2.7252874 -8.21989  ]]
Iteration 600 of 1000: loss=0.288 " + "l1=0.272" + "l2=0.016 f=-0.638 shape=(1, 9000, 1)
logits [[ 5.445203  -2.5337164  2.7293072 -8.193903 ]]
Iteration 700 of 1000: loss=0.285 " + "l1=0.268" + "l2=0.0172 f=-0.639 shape=(1, 9000, 1)
logits [[ 5.4112678 -2.5304487  2.7324855 -8.168346 ]]
Iteration 800 of 1000: loss=0.282 " + "l1=0.264" + "l2=0.0184 f=-0.639 shape=(1, 9000, 1)
logits [[ 5.3760624 -2.526908   2.735305  -8.140856 ]]
Iteration 900 of 1000: loss=0.28 " + "l1=0.26" + "l2=0.0195 f=-0.639 shape=(1, 9000, 1)
logits [[ 5.341147  -2.5234609  2.7377257 -8.113181 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.14 " + "l1=3.14" + "l2=0 f=-0.629 shape=(1, 9000, 1)
logits [[ 5.8317447 -2.542018   2.695159  -8.499268 ]]
Iteration 100 of 1000: loss=1.75 " + "l1=0.906" + "l2=0.848 f=-0.666 shape=(1, 9000, 1)
logits [[ 3.6769214 -2.4404852  2.7706413 -6.669667 ]]
Iteration 200 of 1000: loss=1.21 " + "l1=0.169" + "l2=1.04 f=-0.676 shape=(1, 9000, 1)
logits [[ 2.936631  -2.4771888  2.767315  -5.9302897]]
Iteration 300 of 1000: loss=0.875 " + "l1=0.0272" + "l2=0.848 f=-0.676 shape=(1, 9000, 1)
logits [[ 2.7515805 -2.4875877  2.7243435 -5.6920247]]
Iteration 400 of 1000: loss=0.717 " + "l1=0" + "l2=0.717 f=-0.669 shape=(1, 9000, 1)
logits [[ 2.6813722 -2.4711192  2.6899467 -5.5742483]]
Iteration 500 of 1000: loss=0.596 " + "l1=0.00194" + "l2=0.594 f=-0.671 shape=(1, 9000, 1)
logits [[ 2.6672132 -2.4669406  2.6652722 -5.54918  ]]
Iteration 600 of 1000: loss=0.52 " + "l1=0" + "l2=0.52 f=-0.669 shape=(1, 9000, 1)
logits [[ 2.6195369 -2.430425   2.63259   -5.4974666]]
Iteration 700 of 1000: loss=0.447 " + "l1=0" + "l2=0.447 f=-0.667 shape=(1, 9000, 1)
logits [[ 2.588244  -2.3985462  2.5912673 -5.4495215]]
Iteration 800 of 1000: loss=0.39 " + "l1=0" + "l2=0.39 f=-0.664 shape=(1, 9000, 1)
logits [[ 2.5518084 -2.3616548  2.5545397 -5.4022717]]
Iteration 900 of 1000: loss=0.351 " + "l1=0" + "l2=0.351 f=-0.659 shape=(1, 9000, 1)
logits [[ 2.509431  -2.32941    2.5223265 -5.339712 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.73 " + "l1=1.73" + "l2=0 f=-0.629 shape=(1, 9000, 1)
logits [[ 5.8317447 -2.542018   2.695159  -8.499268 ]]
Iteration 100 of 1000: loss=1.32 " + "l1=1.07" + "l2=0.252 f=-0.649 shape=(1, 9000, 1)
logits [[ 4.693797  -2.4628215  2.7449408 -7.5716205]]
Iteration 200 of 1000: loss=1.14 " + "l1=0.765" + "l2=0.373 f=-0.653 shape=(1, 9000, 1)
logits [[ 4.1439753 -2.4445002  2.752946  -7.0659084]]
Iteration 300 of 1000: loss=0.994 " + "l1=0.543" + "l2=0.451 f=-0.659 shape=(1, 9000, 1)
logits [[ 3.7308433 -2.4580817  2.7436152 -6.65158  ]]
Iteration 400 of 1000: loss=0.869 " + "l1=0.391" + "l2=0.478 f=-0.666 shape=(1, 9000, 1)
logits [[ 3.4396787 -2.4533544  2.728841  -6.377244 ]]
Iteration 500 of 1000: loss=0.744 " + "l1=0.262" + "l2=0.482 f=-0.668 shape=(1, 9000, 1)
logits [[ 3.1810708 -2.4197567  2.7050595 -6.1391463]]
Iteration 600 of 1000: loss=0.613 " + "l1=0.134" + "l2=0.48 f=-0.663 shape=(1, 9000, 1)
logits [[ 2.928864  -2.3680968  2.6859689 -5.8983192]]
Iteration 700 of 1000: loss=0.506 " + "l1=0.0337" + "l2=0.472 f=-0.661 shape=(1, 9000, 1)
logits [[ 2.677999  -2.3101027  2.6167629 -5.628174 ]]
Iteration 800 of 1000: loss=0.42 " + "l1=0.00147" + "l2=0.419 f=-0.635 shape=(1, 9000, 1)
logits [[ 2.5717728 -2.2427156  2.5690966 -5.4375577]]
Iteration 900 of 1000: loss=0.358 " + "l1=0.00268" + "l2=0.355 f=-0.602 shape=(1, 9000, 1)
logits [[ 2.5441234 -2.1948676  2.5392587 -5.297079 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.02 " + "l1=1.02" + "l2=0 f=-0.629 shape=(1, 9000, 1)
logits [[ 5.8317447 -2.542018   2.695159  -8.499268 ]]
Iteration 100 of 1000: loss=0.891 " + "l1=0.811" + "l2=0.0796 f=-0.64 shape=(1, 9000, 1)
logits [[ 5.226694 -2.521345  2.730563 -7.997329]]
Iteration 200 of 1000: loss=0.831 " + "l1=0.714" + "l2=0.117 f=-0.648 shape=(1, 9000, 1)
logits [[ 4.9430118 -2.504128   2.745912  -7.7755632]]
Iteration 300 of 1000: loss=0.783 " + "l1=0.63" + "l2=0.153 f=-0.649 shape=(1, 9000, 1)
logits [[ 4.69095   -2.4755597  2.752587  -7.5635247]]
Iteration 400 of 1000: loss=0.743 " + "l1=0.565" + "l2=0.178 f=-0.651 shape=(1, 9000, 1)
logits [[ 4.49101   -2.4589198  2.752097  -7.3864274]]
Iteration 500 of 1000: loss=0.702 " + "l1=0.505" + "l2=0.197 f=-0.652 shape=(1, 9000, 1)
logits [[ 4.305943  -2.4558094  2.7519996 -7.2091856]]
Iteration 600 of 1000: loss=0.657 " + "l1=0.445" + "l2=0.212 f=-0.651 shape=(1, 9000, 1)
logits [[ 4.11463   -2.4483511  2.745342  -7.01552  ]]
Iteration 700 of 1000: loss=0.604 " + "l1=0.374" + "l2=0.229 f=-0.649 shape=(1, 9000, 1)
logits [[ 3.887347  -2.4266992  2.7353604 -6.7917438]]
Iteration 800 of 1000: loss=0.552 " + "l1=0.321" + "l2=0.232 f=-0.642 shape=(1, 9000, 1)
logits [[ 3.7132156 -2.4010515  2.7268493 -6.6079345]]
Iteration 900 of 1000: loss=0.497 " + "l1=0.267" + "l2=0.229 f=-0.636 shape=(1, 9000, 1)
logits [[ 3.5328975 -2.3710704  2.7107685 -6.41758  ]]
--- 282.5872251987457 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.143 " + "l1=0.143" + "l2=0 f=-0.629 shape=(1, 9000, 1)
logits [[ 5.8317447 -2.542018   2.695159  -8.499268 ]]
Iteration 100 of 1000: loss=0.143 " + "l1=0.142" + "l2=0.000452 f=-0.626 shape=(1, 9000, 1)
logits [[ 5.784795  -2.5369315  2.6840427 -8.4342575]]
Iteration 200 of 1000: loss=0.142 " + "l1=0.142" + "l2=0.000456 f=-0.625 shape=(1, 9000, 1)
logits [[ 5.777927  -2.5343857  2.6817336 -8.424209 ]]
Iteration 300 of 1000: loss=0.142 " + "l1=0.142" + "l2=0.000559 f=-0.624 shape=(1, 9000, 1)
logits [[ 5.768964  -2.5319378  2.6788294 -8.41075  ]]
Iteration 400 of 1000: loss=0.142 " + "l1=0.142" + "l2=0.00064 f=-0.623 shape=(1, 9000, 1)
logits [[ 5.7601523 -2.5295448  2.6759217 -8.397373 ]]
Iteration 500 of 1000: loss=0.142 " + "l1=0.141" + "l2=0.000825 f=-0.622 shape=(1, 9000, 1)
logits [[ 5.7518606 -2.5272808  2.6731532 -8.384607 ]]
Iteration 600 of 1000: loss=0.142 " + "l1=0.141" + "l2=0.00089 f=-0.621 shape=(1, 9000, 1)
logits [[ 5.744365  -2.525576   2.6707075 -8.372363 ]]
Iteration 700 of 1000: loss=0.142 " + "l1=0.141" + "l2=0.00106 f=-0.62 shape=(1, 9000, 1)
logits [[ 5.737415  -2.5241406  2.6684363 -8.360693 ]]
Iteration 800 of 1000: loss=0.142 " + "l1=0.141" + "l2=0.00114 f=-0.619 shape=(1, 9000, 1)
logits [[ 5.7306266 -2.5227456  2.6663225 -8.3491125]]
Iteration 900 of 1000: loss=0.142 " + "l1=0.141" + "l2=0.0014 f=-0.618 shape=(1, 9000, 1)
logits [[ 5.7243357 -2.5215185  2.6643016 -8.33805  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.43 " + "l1=1.43" + "l2=0 f=-0.629 shape=(1, 9000, 1)
logits [[ 5.8317447 -2.542018   2.695159  -8.499268 ]]
Iteration 100 of 1000: loss=1.37 " + "l1=1.33" + "l2=0.035 f=-0.6 shape=(1, 9000, 1)
logits [[ 5.4101777 -2.4804764  2.5985947 -7.9294376]]
Iteration 200 of 1000: loss=1.34 " + "l1=1.29" + "l2=0.052 f=-0.585 shape=(1, 9000, 1)
logits [[ 5.2207274 -2.444905   2.5484254 -7.662715 ]]
Iteration 300 of 1000: loss=1.32 " + "l1=1.25" + "l2=0.0647 f=-0.572 shape=(1, 9000, 1)
logits [[ 5.07547   -2.4165564  2.5050397 -7.4520473]]
Iteration 400 of 1000: loss=1.3 " + "l1=1.22" + "l2=0.0767 f=-0.561 shape=(1, 9000, 1)
logits [[ 4.944007  -2.389806   2.4663477 -7.2628136]]
Iteration 500 of 1000: loss=1.28 " + "l1=1.19" + "l2=0.0879 f=-0.552 shape=(1, 9000, 1)
logits [[ 4.8185525 -2.3739097  2.4284122 -7.0816474]]
Iteration 600 of 1000: loss=1.26 " + "l1=1.16" + "l2=0.1 f=-0.546 shape=(1, 9000, 1)
logits [[ 4.6731677 -2.3634505  2.3869543 -6.8825073]]
Iteration 700 of 1000: loss=1.23 " + "l1=1.12" + "l2=0.11 f=-0.539 shape=(1, 9000, 1)
logits [[ 4.5327873 -2.3563938  2.3461833 -6.6801357]]
Iteration 800 of 1000: loss=1.2 " + "l1=1.08" + "l2=0.121 f=-0.533 shape=(1, 9000, 1)
logits [[ 4.362197  -2.3584795  2.2965267 -6.430326 ]]
Iteration 900 of 1000: loss=1.17 " + "l1=1.04" + "l2=0.129 f=-0.522 shape=(1, 9000, 1)
logits [[ 4.2044816 -2.3551836  2.2536194 -6.191157 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=14.3 " + "l1=14.3" + "l2=0 f=-0.629 shape=(1, 9000, 1)
logits [[ 5.8317447 -2.542018   2.695159  -8.499268 ]]
Iteration 100 of 1000: loss=8.04 " + "l1=4.7" + "l2=3.34 f=-0.389 shape=(1, 9000, 1)
logits [[ 1.7276995 -2.0404418  1.7269077 -2.971374 ]]
Iteration 200 of 1000: loss=5.68 " + "l1=1.85" + "l2=3.83 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.6767742 -1.3583874  0.6891724 -1.1573164]]
Iteration 300 of 1000: loss=3.88 " + "l1=0.0394" + "l2=3.84 f=-0.257 shape=(1, 9000, 1)
logits [[-0.1080678  -1.0249804   0.07138117  0.03197655]]
Iteration 400 of 1000: loss=3.22 " + "l1=0.0174" + "l2=3.2 f=-0.265 shape=(1, 9000, 1)
logits [[-6.6105925e-02 -1.0109824e+00  1.7108794e-02 -3.2890029e-04]]
Iteration 500 of 1000: loss=2.79 " + "l1=0.00868" + "l2=2.78 f=-0.267 shape=(1, 9000, 1)
logits [[-0.02809895 -0.9968079  -0.01711074 -0.02579216]]
Iteration 600 of 1000: loss=2.5 " + "l1=0.0243" + "l2=2.48 f=-0.268 shape=(1, 9000, 1)
logits [[-0.0197557  -1.0113305  -0.00804776 -0.03233244]]
Iteration 700 of 1000: loss=2.23 " + "l1=0.00556" + "l2=2.23 f=-0.27 shape=(1, 9000, 1)
logits [[-0.02301846 -1.0134654  -0.01853032 -0.02408649]]
Iteration 800 of 1000: loss=2.01 " + "l1=0" + "l2=2.01 f=-0.27 shape=(1, 9000, 1)
logits [[-0.02944439 -1.0262868  -0.01707605 -0.00618622]]
Iteration 900 of 1000: loss=1.85 " + "l1=0.0254" + "l2=1.82 f=-0.267 shape=(1, 9000, 1)
logits [[ 2.5225971e-03 -1.0476881e+00 -4.9105240e-04 -2.2850476e-02]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.88 " + "l1=7.88" + "l2=0 f=-0.629 shape=(1, 9000, 1)
logits [[ 5.8317447 -2.542018   2.695159  -8.499268 ]]
Iteration 100 of 1000: loss=5.79 " + "l1=4.43" + "l2=1.35 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.109124  -2.3663983  2.1789877 -4.948889 ]]
Iteration 200 of 1000: loss=4.63 " + "l1=2.78" + "l2=1.85 f=-0.432 shape=(1, 9000, 1)
logits [[ 1.8491467 -2.1384184  1.7720451 -3.2095876]]
Iteration 300 of 1000: loss=3.85 " + "l1=1.98" + "l2=1.87 f=-0.379 shape=(1, 9000, 1)
logits [[ 1.322727  -1.8856072  1.3196262 -2.2718947]]
Iteration 400 of 1000: loss=3.22 " + "l1=1.27" + "l2=1.95 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.87326986 -1.626256    0.88015485 -1.4238718 ]]
Iteration 500 of 1000: loss=2.69 " + "l1=0.728" + "l2=1.96 f=-0.263 shape=(1, 9000, 1)
logits [[ 0.5896357  -1.5059682   0.5942734  -0.72851753]]
Iteration 600 of 1000: loss=2.26 " + "l1=0.371" + "l2=1.89 f=-0.222 shape=(1, 9000, 1)
logits [[ 0.40115637 -1.4171803   0.4007219  -0.27331972]]
Iteration 700 of 1000: loss=1.82 " + "l1=0.00233" + "l2=1.81 f=-0.199 shape=(1, 9000, 1)
logits [[ 0.1805467  -1.3562037   0.19155912  0.18732113]]
Iteration 800 of 1000: loss=1.5 " + "l1=0.00877" + "l2=1.49 f=-0.205 shape=(1, 9000, 1)
logits [[ 0.20302981 -1.4084476   0.19955377  0.1870865 ]]
Iteration 900 of 1000: loss=1.29 " + "l1=0.0125" + "l2=1.27 f=-0.196 shape=(1, 9000, 1)
logits [[ 0.23139575 -1.444988    0.2215708   0.20862421]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.66 " + "l1=4.66" + "l2=0 f=-0.629 shape=(1, 9000, 1)
logits [[ 5.8317447 -2.542018   2.695159  -8.499268 ]]
Iteration 100 of 1000: loss=3.93 " + "l1=3.5" + "l2=0.429 f=-0.552 shape=(1, 9000, 1)
logits [[ 4.2700963 -2.3690426  2.3779993 -6.487636 ]]
Iteration 200 of 1000: loss=3.56 " + "l1=2.96" + "l2=0.606 f=-0.517 shape=(1, 9000, 1)
logits [[ 3.5596905 -2.3184595  2.2255151 -5.5357103]]
Iteration 300 of 1000: loss=3.13 " + "l1=2.3" + "l2=0.837 f=-0.493 shape=(1, 9000, 1)
logits [[ 2.6796715 -2.2813983  2.0130665 -4.384283 ]]
Iteration 400 of 1000: loss=2.76 " + "l1=1.81" + "l2=0.949 f=-0.452 shape=(1, 9000, 1)
logits [[ 2.0853243 -2.1754098  1.7645785 -3.4811027]]
Iteration 500 of 1000: loss=2.44 " + "l1=1.42" + "l2=1.02 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.6419154 -2.0487413  1.5361404 -2.7377386]]
Iteration 600 of 1000: loss=2.12 " + "l1=1.09" + "l2=1.03 f=-0.341 shape=(1, 9000, 1)
logits [[ 1.3166014 -1.947088   1.2993221 -2.0328424]]
Iteration 700 of 1000: loss=1.83 " + "l1=0.807" + "l2=1.02 f=-0.274 shape=(1, 9000, 1)
logits [[ 1.0877508 -1.8649963  1.0795345 -1.3968022]]
Iteration 800 of 1000: loss=1.57 " + "l1=0.615" + "l2=0.952 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.92973125 -1.8114256   0.9205666  -0.963626  ]]
Iteration 900 of 1000: loss=1.35 " + "l1=0.436" + "l2=0.914 f=-0.192 shape=(1, 9000, 1)
logits [[ 0.77387345 -1.7448486   0.77308315 -0.56836504]]
--- 318.649911403656 seconds ---
Adv result:3
Loading record A00982
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.019 " + "l1=0.019" + "l2=0 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.104614   -0.7957404   0.18111768 -1.4594012 ]]
Iteration 100 of 1000: loss=0.0184 " + "l1=0.0179" + "l2=0.000447 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.0473107  -0.74366987  0.13672237 -1.4068253 ]]
Iteration 200 of 1000: loss=0.0182 " + "l1=0.0177" + "l2=0.000472 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.0381494  -0.7341295   0.12917303 -1.4003733 ]]
Iteration 300 of 1000: loss=0.018 " + "l1=0.0174" + "l2=0.000626 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.0227832  -0.7189285   0.11767168 -1.3911035 ]]
Iteration 400 of 1000: loss=0.0179 " + "l1=0.0171" + "l2=0.000765 f=-0.243 shape=(1, 9000, 1)
logits [[ 1.0082399  -0.70527834  0.10729879 -1.381165  ]]
Iteration 500 of 1000: loss=0.0178 " + "l1=0.0168" + "l2=0.000959 f=-0.244 shape=(1, 9000, 1)
logits [[ 0.99116063 -0.6903512   0.09552704 -1.3710194 ]]
Iteration 600 of 1000: loss=0.0176 " + "l1=0.0165" + "l2=0.0011 f=-0.244 shape=(1, 9000, 1)
logits [[ 0.9765682  -0.67828083  0.08610763 -1.3605675 ]]
Iteration 700 of 1000: loss=0.0176 " + "l1=0.0163" + "l2=0.00126 f=-0.244 shape=(1, 9000, 1)
logits [[ 0.96231216 -0.6671645   0.07732686 -1.3495852 ]]
Iteration 800 of 1000: loss=0.0175 " + "l1=0.016" + "l2=0.00147 f=-0.245 shape=(1, 9000, 1)
logits [[ 0.94577956 -0.65452534  0.0677058  -1.3392745 ]]
Iteration 900 of 1000: loss=0.0174 " + "l1=0.0158" + "l2=0.00166 f=-0.245 shape=(1, 9000, 1)
logits [[ 0.93194485 -0.64312994  0.05974478 -1.3295597 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.19 " + "l1=0.19" + "l2=0 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.104614   -0.7957404   0.18111768 -1.4594012 ]]
Iteration 100 of 1000: loss=0.102 " + "l1=0.0432" + "l2=0.0587 f=-0.259 shape=(1, 9000, 1)
logits [[ 0.28782454 -0.14387317 -0.14377093 -1.0376265 ]]
Iteration 200 of 1000: loss=0.0644 " + "l1=0.000319" + "l2=0.0641 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.01759516  0.01440088 -0.20597893 -0.89343643]]
Iteration 300 of 1000: loss=0.0496 " + "l1=0" + "l2=0.0496 f=-0.269 shape=(1, 9000, 1)
logits [[ 0.00848376  0.0227731  -0.20300867 -0.9056624 ]]
Iteration 400 of 1000: loss=0.0413 " + "l1=0" + "l2=0.0413 f=-0.268 shape=(1, 9000, 1)
logits [[ 0.00513964  0.02553874 -0.20260856 -0.901775  ]]
Iteration 500 of 1000: loss=0.0362 " + "l1=0" + "l2=0.0362 f=-0.269 shape=(1, 9000, 1)
logits [[ 0.00478357  0.02826505 -0.20380448 -0.9042662 ]]
Iteration 600 of 1000: loss=0.0318 " + "l1=0" + "l2=0.0318 f=-0.268 shape=(1, 9000, 1)
logits [[ 0.01172266  0.02310863 -0.20484486 -0.901461  ]]
Iteration 700 of 1000: loss=0.0294 " + "l1=0.000642" + "l2=0.0288 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.02178814  0.01536892 -0.2053789  -0.8945849 ]]
Iteration 800 of 1000: loss=0.0271 " + "l1=0" + "l2=0.0271 f=-0.264 shape=(1, 9000, 1)
logits [[ 0.00559873  0.01769425 -0.21378428 -0.8671085 ]]
Iteration 900 of 1000: loss=0.0261 " + "l1=0" + "l2=0.0261 f=-0.262 shape=(1, 9000, 1)
logits [[-0.00884726  0.0180501  -0.2222343  -0.83685803]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.105 " + "l1=0.105" + "l2=0 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.104614   -0.7957404   0.18111768 -1.4594012 ]]
Iteration 100 of 1000: loss=0.0813 " + "l1=0.0661" + "l2=0.0152 f=-0.252 shape=(1, 9000, 1)
logits [[ 0.73808694 -0.46412706 -0.02889131 -1.254348  ]]
Iteration 200 of 1000: loss=0.0705 " + "l1=0.0472" + "l2=0.0232 f=-0.265 shape=(1, 9000, 1)
logits [[ 0.54077876 -0.31823578 -0.08532279 -1.1983881 ]]
Iteration 300 of 1000: loss=0.0606 " + "l1=0.0315" + "l2=0.0291 f=-0.268 shape=(1, 9000, 1)
logits [[ 0.37131706 -0.20186909 -0.12085481 -1.120124  ]]
Iteration 400 of 1000: loss=0.0518 " + "l1=0.0186" + "l2=0.0332 f=-0.276 shape=(1, 9000, 1)
logits [[ 0.22803852 -0.1101656  -0.15207654 -1.0703353 ]]
Iteration 500 of 1000: loss=0.0432 " + "l1=0.00582" + "l2=0.0373 f=-0.286 shape=(1, 9000, 1)
logits [[ 0.08389436 -0.02195896 -0.18242562 -1.0245649 ]]
Iteration 600 of 1000: loss=0.0358 " + "l1=0" + "l2=0.0358 f=-0.29 shape=(1, 9000, 1)
logits [[ 0.01805841  0.02150668 -0.19153254 -1.0064896 ]]
Iteration 700 of 1000: loss=0.0319 " + "l1=0.000318" + "l2=0.0316 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.01906041  0.01327962 -0.18512344 -0.9986287 ]]
Iteration 800 of 1000: loss=0.0296 " + "l1=0" + "l2=0.0296 f=-0.286 shape=(1, 9000, 1)
logits [[ 0.00530724  0.01146389 -0.1844156  -0.97652525]]
Iteration 900 of 1000: loss=0.0277 " + "l1=0" + "l2=0.0277 f=-0.282 shape=(1, 9000, 1)
logits [[ 0.00238668  0.00506098 -0.18677104 -0.9483843 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0618 " + "l1=0.0618" + "l2=0 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.104614   -0.7957404   0.18111768 -1.4594012 ]]
Iteration 100 of 1000: loss=0.0539 " + "l1=0.0483" + "l2=0.00569 f=-0.25 shape=(1, 9000, 1)
logits [[ 0.8908808  -0.59373975  0.03503517 -1.3315855 ]]
Iteration 200 of 1000: loss=0.0509 " + "l1=0.0443" + "l2=0.00665 f=-0.25 shape=(1, 9000, 1)
logits [[ 0.8256453 -0.5371576  0.0037537 -1.2941417]]
Iteration 300 of 1000: loss=0.0485 " + "l1=0.0402" + "l2=0.00827 f=-0.253 shape=(1, 9000, 1)
logits [[ 0.7552528  -0.48230582 -0.02747735 -1.2562361 ]]
Iteration 400 of 1000: loss=0.046 " + "l1=0.0361" + "l2=0.00988 f=-0.253 shape=(1, 9000, 1)
logits [[ 0.68656397 -0.42463514 -0.05661776 -1.2179483 ]]
Iteration 500 of 1000: loss=0.0438 " + "l1=0.032" + "l2=0.0119 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.61247283 -0.37139317 -0.08005521 -1.1880771 ]]
Iteration 600 of 1000: loss=0.0415 " + "l1=0.0271" + "l2=0.0145 f=-0.263 shape=(1, 9000, 1)
logits [[ 0.5249713  -0.308061   -0.10037201 -1.1676501 ]]
Iteration 700 of 1000: loss=0.0393 " + "l1=0.0231" + "l2=0.0162 f=-0.265 shape=(1, 9000, 1)
logits [[ 0.45127484 -0.25832012 -0.11313196 -1.1399343 ]]
Iteration 800 of 1000: loss=0.0371 " + "l1=0.0192" + "l2=0.018 f=-0.264 shape=(1, 9000, 1)
logits [[ 0.38136756 -0.20798446 -0.12560175 -1.1056694 ]]
Iteration 900 of 1000: loss=0.035 " + "l1=0.0155" + "l2=0.0194 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.3133566  -0.16449873 -0.14187069 -1.0695353 ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0831 " + "l1=0.0831" + "l2=0 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.104614   -0.7957404   0.18111768 -1.4594012 ]]
Iteration 100 of 1000: loss=0.0685 " + "l1=0.0588" + "l2=0.00972 f=-0.25 shape=(1, 9000, 1)
logits [[ 0.8171922  -0.52689785  0.00255916 -1.2934158 ]]
Iteration 200 of 1000: loss=0.0627 " + "l1=0.0489" + "l2=0.0138 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.69041735 -0.42634803 -0.04565211 -1.24488   ]]
Iteration 300 of 1000: loss=0.0571 " + "l1=0.0396" + "l2=0.0176 f=-0.26 shape=(1, 9000, 1)
logits [[ 0.5697607  -0.33479384 -0.08303262 -1.1927305 ]]
Iteration 400 of 1000: loss=0.0514 " + "l1=0.0294" + "l2=0.022 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.43191037 -0.23967586 -0.10781293 -1.1532129 ]]
Iteration 500 of 1000: loss=0.0467 " + "l1=0.0221" + "l2=0.0246 f=-0.27 shape=(1, 9000, 1)
logits [[ 0.33158335 -0.17383474 -0.13002193 -1.1079868 ]]
Iteration 600 of 1000: loss=0.0416 " + "l1=0.0131" + "l2=0.0285 f=-0.278 shape=(1, 9000, 1)
logits [[ 0.20683071 -0.09300854 -0.15794499 -1.0665112 ]]
Iteration 700 of 1000: loss=0.0364 " + "l1=0.00539" + "l2=0.031 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.09855279 -0.02473203 -0.17746082 -1.0274339 ]]
Iteration 800 of 1000: loss=0.0321 " + "l1=0.000481" + "l2=0.0316 f=-0.286 shape=(1, 9000, 1)
logits [[ 0.02527694  0.01427281 -0.18600662 -0.99730176]]
Iteration 900 of 1000: loss=0.0293 " + "l1=0" + "l2=0.0293 f=-0.285 shape=(1, 9000, 1)
logits [[ 0.01170247  0.01282292 -0.18235002 -0.9802777 ]]
--- 323.4110713005066 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00923 " + "l1=0.00923" + "l2=0 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.104614   -0.7957404   0.18111768 -1.4594012 ]]
Iteration 100 of 1000: loss=0.00908 " + "l1=0.00893" + "l2=0.000156 f=-0.243 shape=(1, 9000, 1)
logits [[ 1.0840342  -0.80218405  0.19119814 -1.4456966 ]]
Iteration 200 of 1000: loss=0.00903 " + "l1=0.00892" + "l2=0.00011 f=-0.243 shape=(1, 9000, 1)
logits [[ 1.0836017  -0.802954    0.19183402 -1.446043  ]]
Iteration 300 of 1000: loss=0.00901 " + "l1=0.00887" + "l2=0.000141 f=-0.244 shape=(1, 9000, 1)
logits [[ 1.080651  -0.80401    0.1934156 -1.4447243]]
Iteration 400 of 1000: loss=0.00899 " + "l1=0.00882" + "l2=0.000175 f=-0.244 shape=(1, 9000, 1)
logits [[ 1.0767934  -0.80518717  0.19516876 -1.4429305 ]]
Iteration 500 of 1000: loss=0.00898 " + "l1=0.00876" + "l2=0.000222 f=-0.244 shape=(1, 9000, 1)
logits [[ 1.0732796  -0.8062757   0.19704387 -1.4414936 ]]
Iteration 600 of 1000: loss=0.009 " + "l1=0.0087" + "l2=0.000297 f=-0.245 shape=(1, 9000, 1)
logits [[ 1.0692247  -0.80738044  0.1988642  -1.4394459 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0923 " + "l1=0.0923" + "l2=0 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.104614   -0.7957404   0.18111768 -1.4594012 ]]
Iteration 100 of 1000: loss=0.0781 " + "l1=0.069" + "l2=0.00907 f=-0.246 shape=(1, 9000, 1)
logits [[ 0.9426282  -0.84402966  0.25259724 -1.3370887 ]]
Iteration 200 of 1000: loss=0.0721 " + "l1=0.0602" + "l2=0.0119 f=-0.247 shape=(1, 9000, 1)
logits [[ 0.8858562 -0.8643003  0.2842704 -1.2957102]]
Iteration 300 of 1000: loss=0.066 " + "l1=0.0507" + "l2=0.0152 f=-0.25 shape=(1, 9000, 1)
logits [[ 0.8183782  -0.8838359   0.31112355 -1.2446835 ]]
Iteration 400 of 1000: loss=0.0597 " + "l1=0.0416" + "l2=0.0182 f=-0.252 shape=(1, 9000, 1)
logits [[ 0.75112236 -0.9020587   0.33547476 -1.1924641 ]]
Iteration 500 of 1000: loss=0.0529 " + "l1=0.0298" + "l2=0.0231 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.65546656 -0.9256328   0.35787216 -1.116895  ]]
Iteration 600 of 1000: loss=0.0458 " + "l1=0.0192" + "l2=0.0266 f=-0.261 shape=(1, 9000, 1)
logits [[ 0.57138485 -0.92605805  0.37953177 -1.0680194 ]]
Iteration 700 of 1000: loss=0.0391 " + "l1=0.0115" + "l2=0.0277 f=-0.263 shape=(1, 9000, 1)
logits [[ 0.50495756 -0.9252016   0.39004597 -1.0235589 ]]
Iteration 800 of 1000: loss=0.0323 " + "l1=0.00306" + "l2=0.0293 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.43612897 -0.92709404  0.40548608 -0.98364943]]
Iteration 900 of 1000: loss=0.0257 " + "l1=0.000173" + "l2=0.0255 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.4041138  -0.91895163  0.4023835  -0.9497687 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0508 " + "l1=0.0508" + "l2=0 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.104614   -0.7957404   0.18111768 -1.4594012 ]]
Iteration 100 of 1000: loss=0.0466 " + "l1=0.0441" + "l2=0.0025 f=-0.246 shape=(1, 9000, 1)
logits [[ 1.021323   -0.8237618   0.21911031 -1.4003049 ]]
Iteration 200 of 1000: loss=0.0451 " + "l1=0.0421" + "l2=0.00307 f=-0.247 shape=(1, 9000, 1)
logits [[ 0.9959407  -0.83096033  0.23119144 -1.3851358 ]]
Iteration 300 of 1000: loss=0.0435 " + "l1=0.0398" + "l2=0.00375 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.9665414  -0.83776104  0.24286401 -1.3644425 ]]
Iteration 400 of 1000: loss=0.0419 " + "l1=0.0375" + "l2=0.00437 f=-0.249 shape=(1, 9000, 1)
logits [[ 0.9400933  -0.84822315  0.25784612 -1.344625  ]]
Iteration 500 of 1000: loss=0.0402 " + "l1=0.0352" + "l2=0.00494 f=-0.249 shape=(1, 9000, 1)
logits [[ 0.91248083 -0.8571911   0.27180335 -1.3248093 ]]
Iteration 600 of 1000: loss=0.0382 " + "l1=0.0329" + "l2=0.00526 f=-0.251 shape=(1, 9000, 1)
logits [[ 0.88800305 -0.8683074   0.28892893 -1.3110685 ]]
Iteration 700 of 1000: loss=0.0363 " + "l1=0.0305" + "l2=0.00575 f=-0.251 shape=(1, 9000, 1)
logits [[ 0.85609394 -0.8777655   0.30123958 -1.2855535 ]]
Iteration 800 of 1000: loss=0.0345 " + "l1=0.0282" + "l2=0.0063 f=-0.252 shape=(1, 9000, 1)
logits [[ 0.82116294 -0.884825    0.30924794 -1.2550758 ]]
Iteration 900 of 1000: loss=0.0326 " + "l1=0.0256" + "l2=0.00698 f=-0.254 shape=(1, 9000, 1)
logits [[ 0.78545505 -0.8944233   0.31973597 -1.2247803 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0716 " + "l1=0.0716" + "l2=0 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.104614   -0.7957404   0.18111768 -1.4594012 ]]
Iteration 100 of 1000: loss=0.0632 " + "l1=0.0581" + "l2=0.00516 f=-0.247 shape=(1, 9000, 1)
logits [[ 0.98355746 -0.83247185  0.23407036 -1.3730161 ]]
Iteration 200 of 1000: loss=0.0598 " + "l1=0.053" + "l2=0.00686 f=-0.247 shape=(1, 9000, 1)
logits [[ 0.9404929 -0.8458214  0.2569397 -1.3412949]]
Iteration 300 of 1000: loss=0.0564 " + "l1=0.0485" + "l2=0.00798 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.90273017 -0.8583884   0.27745363 -1.3146873 ]]
Iteration 400 of 1000: loss=0.053 " + "l1=0.0436" + "l2=0.00935 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.857475  -0.8676545  0.2947184 -1.2781538]]
Iteration 500 of 1000: loss=0.0493 " + "l1=0.0387" + "l2=0.0105 f=-0.25 shape=(1, 9000, 1)
logits [[ 0.8143111  -0.8825953   0.31454492 -1.245322  ]]
Iteration 600 of 1000: loss=0.0454 " + "l1=0.0343" + "l2=0.0111 f=-0.251 shape=(1, 9000, 1)
logits [[ 0.77038115 -0.8935087   0.3281436  -1.2079976 ]]
Iteration 700 of 1000: loss=0.0412 " + "l1=0.0291" + "l2=0.0122 f=-0.252 shape=(1, 9000, 1)
logits [[ 0.7188755  -0.90790385  0.3437867  -1.163857  ]]
Iteration 800 of 1000: loss=0.0369 " + "l1=0.0228" + "l2=0.0141 f=-0.256 shape=(1, 9000, 1)
logits [[ 0.65588856 -0.92869097  0.3618338  -1.111546  ]]
Iteration 900 of 1000: loss=0.0324 " + "l1=0.0168" + "l2=0.0156 f=-0.259 shape=(1, 9000, 1)
logits [[ 0.5939785  -0.9444495   0.37770617 -1.0651808 ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.082 " + "l1=0.082" + "l2=0 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.104614   -0.7957404   0.18111768 -1.4594012 ]]
Iteration 100 of 1000: loss=0.0709 " + "l1=0.0639" + "l2=0.00697 f=-0.247 shape=(1, 9000, 1)
logits [[ 0.96073574 -0.83510995  0.24032429 -1.3532704 ]]
Iteration 200 of 1000: loss=0.0663 " + "l1=0.0572" + "l2=0.00903 f=-0.247 shape=(1, 9000, 1)
logits [[ 0.9147258  -0.8538907   0.26980525 -1.3200958 ]]
Iteration 300 of 1000: loss=0.0617 " + "l1=0.0507" + "l2=0.011 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.8631261  -0.86758196  0.29215053 -1.2802155 ]]
Iteration 400 of 1000: loss=0.0569 " + "l1=0.0443" + "l2=0.0126 f=-0.25 shape=(1, 9000, 1)
logits [[ 0.8129005 -0.8835514  0.3137153 -1.2415087]]
Iteration 500 of 1000: loss=0.052 " + "l1=0.0379" + "l2=0.0141 f=-0.251 shape=(1, 9000, 1)
logits [[ 0.7593144  -0.89932364  0.33272064 -1.1985567 ]]
Iteration 600 of 1000: loss=0.0466 " + "l1=0.0306" + "l2=0.016 f=-0.254 shape=(1, 9000, 1)
logits [[ 0.69573355 -0.91708845  0.35040635 -1.1453733 ]]
Iteration 700 of 1000: loss=0.0406 " + "l1=0.0225" + "l2=0.0181 f=-0.258 shape=(1, 9000, 1)
logits [[ 0.6237757  -0.9354621   0.36976504 -1.088747  ]]
Iteration 800 of 1000: loss=0.0343 " + "l1=0.0143" + "l2=0.02 f=-0.261 shape=(1, 9000, 1)
logits [[ 0.54636955 -0.9372768   0.38500214 -1.0392225 ]]
Iteration 900 of 1000: loss=0.0282 " + "l1=0.00691" + "l2=0.0213 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.47945386 -0.939789    0.40156248 -1.003898  ]]
--- 300.98400044441223 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0256 " + "l1=0.0256" + "l2=0 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.104614   -0.7957404   0.18111768 -1.4594012 ]]
Iteration 100 of 1000: loss=0.0245 " + "l1=0.0238" + "l2=0.000705 f=-0.239 shape=(1, 9000, 1)
logits [[ 1.0293069 -0.7664741  0.1326918 -1.3508661]]
Iteration 200 of 1000: loss=0.0242 " + "l1=0.0234" + "l2=0.000764 f=-0.238 shape=(1, 9000, 1)
logits [[ 1.0144703  -0.7621292   0.12287246 -1.3281509 ]]
Iteration 300 of 1000: loss=0.0239 " + "l1=0.023" + "l2=0.000907 f=-0.237 shape=(1, 9000, 1)
logits [[ 0.9965737  -0.7570127   0.11149491 -1.3009775 ]]
Iteration 400 of 1000: loss=0.0236 " + "l1=0.0225" + "l2=0.00105 f=-0.237 shape=(1, 9000, 1)
logits [[ 0.97792846 -0.7521431   0.09949733 -1.2716053 ]]
Iteration 500 of 1000: loss=0.0233 " + "l1=0.022" + "l2=0.00129 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.95902365 -0.74811625  0.08828181 -1.2418818 ]]
Iteration 600 of 1000: loss=0.023 " + "l1=0.0215" + "l2=0.00145 f=-0.235 shape=(1, 9000, 1)
logits [[ 0.9399977  -0.7453682   0.07771254 -1.2114776 ]]
Iteration 700 of 1000: loss=0.0227 " + "l1=0.021" + "l2=0.00164 f=-0.234 shape=(1, 9000, 1)
logits [[ 0.9209836 -0.7429614  0.0680031 -1.1804848]]
Iteration 800 of 1000: loss=0.0223 " + "l1=0.0205" + "l2=0.0018 f=-0.232 shape=(1, 9000, 1)
logits [[ 0.901488   -0.74027365  0.05811545 -1.1488479 ]]
Iteration 900 of 1000: loss=0.022 " + "l1=0.02" + "l2=0.00205 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.8822637  -0.7377796   0.04882957 -1.1173958 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.256 " + "l1=0.256" + "l2=0 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.104614   -0.7957404   0.18111768 -1.4594012 ]]
Iteration 100 of 1000: loss=0.135 " + "l1=0.0597" + "l2=0.0754 f=-0.216 shape=(1, 9000, 1)
logits [[ 0.24268702 -0.53073967 -0.22305432 -0.35470513]]
Iteration 200 of 1000: loss=0.0875 " + "l1=0.00177" + "l2=0.0857 f=-0.21 shape=(1, 9000, 1)
logits [[-0.00831546 -0.49691117 -0.30776843 -0.02605674]]
Iteration 300 of 1000: loss=0.0682 " + "l1=0.00384" + "l2=0.0644 f=-0.208 shape=(1, 9000, 1)
logits [[ 0.01041451 -0.5116454  -0.30339646 -0.02795498]]
Iteration 400 of 1000: loss=0.0548 " + "l1=0" + "l2=0.0548 f=-0.203 shape=(1, 9000, 1)
logits [[ 0.00350453 -0.5283794  -0.30671012  0.01907099]]
Iteration 500 of 1000: loss=0.0452 " + "l1=0" + "l2=0.0452 f=-0.199 shape=(1, 9000, 1)
logits [[ 0.01596971 -0.54719394 -0.2988381   0.03287502]]
Iteration 600 of 1000: loss=0.0377 " + "l1=0" + "l2=0.0377 f=-0.196 shape=(1, 9000, 1)
logits [[ 0.03259742 -0.5651148  -0.29045707  0.03699638]]
Iteration 700 of 1000: loss=0.032 " + "l1=0" + "l2=0.032 f=-0.195 shape=(1, 9000, 1)
logits [[ 0.04214192 -0.5874251  -0.2810891   0.04679371]]
Iteration 800 of 1000: loss=0.0281 " + "l1=0.000404" + "l2=0.0277 f=-0.193 shape=(1, 9000, 1)
logits [[ 0.05285197 -0.60454535 -0.26939437  0.04881309]]
Iteration 900 of 1000: loss=0.0251 " + "l1=0.000891" + "l2=0.0242 f=-0.19 shape=(1, 9000, 1)
logits [[ 0.06073715 -0.61612153 -0.2559808   0.05182832]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.141 " + "l1=0.141" + "l2=0 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.104614   -0.7957404   0.18111768 -1.4594012 ]]
Iteration 100 of 1000: loss=0.106 " + "l1=0.0846" + "l2=0.0215 f=-0.224 shape=(1, 9000, 1)
logits [[ 0.67345077 -0.64138055 -0.0612683  -0.86533916]]
Iteration 200 of 1000: loss=0.091 " + "l1=0.0624" + "l2=0.0286 f=-0.223 shape=(1, 9000, 1)
logits [[ 0.4912221  -0.5970334  -0.14079154 -0.64343464]]
Iteration 300 of 1000: loss=0.0778 " + "l1=0.0448" + "l2=0.0329 f=-0.219 shape=(1, 9000, 1)
logits [[ 0.35213038 -0.566382   -0.1979446  -0.46299338]]
Iteration 400 of 1000: loss=0.0671 " + "l1=0.0317" + "l2=0.0354 f=-0.214 shape=(1, 9000, 1)
logits [[ 0.25491375 -0.55572814 -0.23433101 -0.32205763]]
Iteration 500 of 1000: loss=0.0577 " + "l1=0.021" + "l2=0.0367 f=-0.208 shape=(1, 9000, 1)
logits [[ 0.18082255 -0.5524585  -0.26055947 -0.2011334 ]]
Iteration 600 of 1000: loss=0.0472 " + "l1=0.00717" + "l2=0.04 f=-0.202 shape=(1, 9000, 1)
logits [[ 0.08033332 -0.546887   -0.29224703 -0.04995248]]
Iteration 700 of 1000: loss=0.0365 " + "l1=0" + "l2=0.0365 f=-0.199 shape=(1, 9000, 1)
logits [[ 0.02965195 -0.55362904 -0.3026289   0.03004177]]
Iteration 800 of 1000: loss=0.0299 " + "l1=4.52e-05" + "l2=0.0298 f=-0.196 shape=(1, 9000, 1)
logits [[ 0.03439537 -0.560818   -0.2918767   0.03357425]]
Iteration 900 of 1000: loss=0.0262 " + "l1=0" + "l2=0.0262 f=-0.192 shape=(1, 9000, 1)
logits [[ 0.03301402 -0.56414396 -0.28368253  0.04526821]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0833 " + "l1=0.0833" + "l2=0 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.104614   -0.7957404   0.18111768 -1.4594012 ]]
Iteration 100 of 1000: loss=0.0715 " + "l1=0.0643" + "l2=0.00721 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.8635144 -0.7032022  0.0321009 -1.1154424]]
Iteration 200 of 1000: loss=0.0668 " + "l1=0.0575" + "l2=0.00928 f=-0.229 shape=(1, 9000, 1)
logits [[ 0.7712642  -0.67128086 -0.0188251  -0.998666  ]]
Iteration 300 of 1000: loss=0.0624 " + "l1=0.0513" + "l2=0.0111 f=-0.228 shape=(1, 9000, 1)
logits [[ 0.68765503 -0.6503365  -0.05838117 -0.8914597 ]]
Iteration 400 of 1000: loss=0.058 " + "l1=0.0446" + "l2=0.0134 f=-0.227 shape=(1, 9000, 1)
logits [[ 0.59482896 -0.6277115  -0.09871597 -0.7771157 ]]
Iteration 500 of 1000: loss=0.0538 " + "l1=0.0393" + "l2=0.0145 f=-0.225 shape=(1, 9000, 1)
logits [[ 0.52515095 -0.61441475 -0.12582463 -0.6835751 ]]
Iteration 600 of 1000: loss=0.0501 " + "l1=0.0344" + "l2=0.0157 f=-0.221 shape=(1, 9000, 1)
logits [[ 0.46599397 -0.60830796 -0.14732096 -0.5933364 ]]
Iteration 700 of 1000: loss=0.0462 " + "l1=0.0299" + "l2=0.0163 f=-0.216 shape=(1, 9000, 1)
logits [[ 0.41457704 -0.60798955 -0.1651856  -0.505309  ]]
Iteration 800 of 1000: loss=0.0423 " + "l1=0.0253" + "l2=0.017 f=-0.212 shape=(1, 9000, 1)
logits [[ 0.35962483 -0.60705894 -0.18113382 -0.41961184]]
Iteration 900 of 1000: loss=0.0388 " + "l1=0.0211" + "l2=0.0177 f=-0.209 shape=(1, 9000, 1)
logits [[ 0.30607706 -0.6082325  -0.19399032 -0.34172404]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.112 " + "l1=0.112" + "l2=0 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.104614   -0.7957404   0.18111768 -1.4594012 ]]
Iteration 100 of 1000: loss=0.0903 " + "l1=0.077" + "l2=0.0133 f=-0.227 shape=(1, 9000, 1)
logits [[ 0.76921517 -0.66887057 -0.01728705 -0.99035466]]
Iteration 200 of 1000: loss=0.0813 " + "l1=0.0639" + "l2=0.0174 f=-0.226 shape=(1, 9000, 1)
logits [[ 0.635267   -0.6345156  -0.08070559 -0.82427657]]
Iteration 300 of 1000: loss=0.0725 " + "l1=0.0516" + "l2=0.0209 f=-0.225 shape=(1, 9000, 1)
logits [[ 0.509727   -0.6070366  -0.13395241 -0.6687589 ]]
Iteration 400 of 1000: loss=0.065 " + "l1=0.0415" + "l2=0.0235 f=-0.221 shape=(1, 9000, 1)
logits [[ 0.41252416 -0.5870309  -0.1734652  -0.53629214]]
Iteration 500 of 1000: loss=0.0582 " + "l1=0.0327" + "l2=0.0255 f=-0.216 shape=(1, 9000, 1)
logits [[ 0.3332735  -0.5803323  -0.20303687 -0.41435367]]
Iteration 600 of 1000: loss=0.0515 " + "l1=0.0252" + "l2=0.0263 f=-0.212 shape=(1, 9000, 1)
logits [[ 0.2665904  -0.579819   -0.22323076 -0.31001884]]
Iteration 700 of 1000: loss=0.0452 " + "l1=0.0186" + "l2=0.0266 f=-0.208 shape=(1, 9000, 1)
logits [[ 0.20754457 -0.5811537  -0.24171212 -0.21732044]]
Iteration 800 of 1000: loss=0.0383 " + "l1=0.00934" + "l2=0.0289 f=-0.204 shape=(1, 9000, 1)
logits [[ 0.11833212 -0.5728695  -0.26728153 -0.09506025]]
Iteration 900 of 1000: loss=0.0304 " + "l1=0.000283" + "l2=0.0301 f=-0.199 shape=(1, 9000, 1)
logits [[ 0.03002077 -0.55543566 -0.2926033   0.02354912]]
--- 325.74299216270447 seconds ---
Adv result:3
Loading record A01005
(1, 3220)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0581 " + "l1=0.0581" + "l2=0 f=-0.623 shape=(1, 9000, 1)
logits [[ 4.137902  -1.6672658 -1.5762427 -3.3867142]]
Iteration 100 of 1000: loss=0.0572 " + "l1=0.0567" + "l2=0.000459 f=-0.622 shape=(1, 9000, 1)
logits [[ 4.0475783 -1.6217738 -1.5809397 -3.3323715]]
Iteration 200 of 1000: loss=0.0568 " + "l1=0.0563" + "l2=0.000535 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.018877  -1.6095412 -1.5814734 -3.3123887]]
Iteration 300 of 1000: loss=0.0565 " + "l1=0.0558" + "l2=0.000663 f=-0.62 shape=(1, 9000, 1)
logits [[ 3.987043  -1.595979  -1.5824568 -3.290119 ]]
Iteration 400 of 1000: loss=0.0562 " + "l1=0.0554" + "l2=0.000766 f=-0.619 shape=(1, 9000, 1)
logits [[ 3.9558144 -1.5828754 -1.5819389 -3.267932 ]]
Iteration 500 of 1000: loss=0.0559 " + "l1=0.0549" + "l2=0.000922 f=-0.618 shape=(1, 9000, 1)
logits [[ 3.9234989 -1.5693505 -1.5822046 -3.2453618]]
Iteration 600 of 1000: loss=0.0555 " + "l1=0.0544" + "l2=0.0011 f=-0.617 shape=(1, 9000, 1)
logits [[ 3.888986  -1.5549241 -1.5817885 -3.2215004]]
Iteration 700 of 1000: loss=0.0552 " + "l1=0.0539" + "l2=0.00129 f=-0.616 shape=(1, 9000, 1)
logits [[ 3.8508196 -1.5393903 -1.5811256 -3.1951282]]
Iteration 800 of 1000: loss=0.0548 " + "l1=0.0533" + "l2=0.00149 f=-0.615 shape=(1, 9000, 1)
logits [[ 3.8088882 -1.5224249 -1.5815344 -3.1655142]]
Iteration 900 of 1000: loss=0.0545 " + "l1=0.0527" + "l2=0.0018 f=-0.614 shape=(1, 9000, 1)
logits [[ 3.7671695 -1.5062548 -1.5817235 -3.1350923]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.581 " + "l1=0.581" + "l2=0 f=-0.623 shape=(1, 9000, 1)
logits [[ 4.137902  -1.6672658 -1.5762427 -3.3867142]]
Iteration 100 of 1000: loss=0.403 " + "l1=0.314" + "l2=0.0883 f=-0.56 shape=(1, 9000, 1)
logits [[ 2.4116497 -0.7332846 -1.0208557 -2.8985944]]
Iteration 200 of 1000: loss=0.317 " + "l1=0.205" + "l2=0.112 f=-0.519 shape=(1, 9000, 1)
logits [[ 1.5797573  -0.47127762 -0.71574146 -2.4693725 ]]
Iteration 300 of 1000: loss=0.258 " + "l1=0.131" + "l2=0.128 f=-0.519 shape=(1, 9000, 1)
logits [[ 0.9383002  -0.36912453 -0.686134   -1.9593711 ]]
Iteration 400 of 1000: loss=0.195 " + "l1=0.0578" + "l2=0.137 f=-0.515 shape=(1, 9000, 1)
logits [[ 0.30387792 -0.27384663 -0.68201613 -1.4096614 ]]
Iteration 500 of 1000: loss=0.14 " + "l1=0.00482" + "l2=0.135 f=-0.511 shape=(1, 9000, 1)
logits [[-0.14238591 -0.19062613 -0.7891218  -0.9209315 ]]
Iteration 600 of 1000: loss=0.109 " + "l1=0.00143" + "l2=0.108 f=-0.503 shape=(1, 9000, 1)
logits [[-0.20185861 -0.21611603 -0.8547681  -0.73864466]]
Iteration 700 of 1000: loss=0.0904 " + "l1=0.000798" + "l2=0.0896 f=-0.493 shape=(1, 9000, 1)
logits [[-0.23035428 -0.23833857 -0.9019347  -0.6000308 ]]
Iteration 800 of 1000: loss=0.0766 " + "l1=0" + "l2=0.0766 f=-0.488 shape=(1, 9000, 1)
logits [[-0.306978   -0.28801802 -0.97315204 -0.38355237]]
Iteration 900 of 1000: loss=0.0676 " + "l1=0.000286" + "l2=0.0673 f=-0.489 shape=(1, 9000, 1)
logits [[-0.3086081  -0.30480325 -1.0391965  -0.30193955]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.319 " + "l1=0.319" + "l2=0 f=-0.623 shape=(1, 9000, 1)
logits [[ 4.137902  -1.6672658 -1.5762427 -3.3867142]]
Iteration 100 of 1000: loss=0.278 " + "l1=0.243" + "l2=0.0349 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.2516549 -1.1701275 -1.2553111 -3.1589477]]
Iteration 200 of 1000: loss=0.239 " + "l1=0.194" + "l2=0.045 f=-0.561 shape=(1, 9000, 1)
logits [[ 2.6687121  -0.85173446 -1.0763702  -2.984923  ]]
Iteration 300 of 1000: loss=0.213 " + "l1=0.158" + "l2=0.0558 f=-0.529 shape=(1, 9000, 1)
logits [[ 2.1478279  -0.71843106 -0.8565841  -2.68839   ]]
Iteration 400 of 1000: loss=0.193 " + "l1=0.135" + "l2=0.058 f=-0.528 shape=(1, 9000, 1)
logits [[ 1.8231189  -0.63609016 -0.8517311  -2.447694  ]]
Iteration 500 of 1000: loss=0.173 " + "l1=0.113" + "l2=0.06 f=-0.528 shape=(1, 9000, 1)
logits [[ 1.4959085  -0.56296414 -0.86867726 -2.175705  ]]
Iteration 600 of 1000: loss=0.156 " + "l1=0.0906" + "l2=0.0652 f=-0.522 shape=(1, 9000, 1)
logits [[ 1.1569268  -0.48972994 -0.86676794 -1.8875443 ]]
Iteration 700 of 1000: loss=0.141 " + "l1=0.0713" + "l2=0.0693 f=-0.516 shape=(1, 9000, 1)
logits [[ 0.8586199  -0.43807337 -0.87251204 -1.612572  ]]
Iteration 800 of 1000: loss=0.122 " + "l1=0.0496" + "l2=0.0724 f=-0.515 shape=(1, 9000, 1)
logits [[ 0.4991571  -0.40336114 -0.8996762  -1.2555221 ]]
Iteration 900 of 1000: loss=0.0992 " + "l1=0.0262" + "l2=0.073 f=-0.513 shape=(1, 9000, 1)
logits [[ 0.09744257 -0.37824336 -0.9283518  -0.8437232 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.45 " + "l1=0.45" + "l2=0 f=-0.623 shape=(1, 9000, 1)
logits [[ 4.137902  -1.6672658 -1.5762427 -3.3867142]]
Iteration 100 of 1000: loss=0.34 " + "l1=0.269" + "l2=0.0707 f=-0.56 shape=(1, 9000, 1)
logits [[ 2.6486685  -0.82124907 -1.0413125  -3.026575  ]]
Iteration 200 of 1000: loss=0.284 " + "l1=0.202" + "l2=0.0826 f=-0.528 shape=(1, 9000, 1)
logits [[ 1.9726086 -0.6304776 -0.7728303 -2.6818032]]
Iteration 300 of 1000: loss=0.248 " + "l1=0.16" + "l2=0.0882 f=-0.522 shape=(1, 9000, 1)
logits [[ 1.555468  -0.5060033 -0.7667488 -2.36915  ]]
Iteration 400 of 1000: loss=0.209 " + "l1=0.114" + "l2=0.0948 f=-0.52 shape=(1, 9000, 1)
logits [[ 1.0823436  -0.39124385 -0.7866898  -1.9863101 ]]
Iteration 500 of 1000: loss=0.173 " + "l1=0.072" + "l2=0.101 f=-0.511 shape=(1, 9000, 1)
logits [[ 0.6284014  -0.30022526 -0.7854161  -1.5876119 ]]
Iteration 600 of 1000: loss=0.139 " + "l1=0.0301" + "l2=0.109 f=-0.508 shape=(1, 9000, 1)
logits [[ 0.16467443 -0.22435294 -0.8326346  -1.1390624 ]]
Iteration 700 of 1000: loss=0.105 " + "l1=0" + "l2=0.105 f=-0.505 shape=(1, 9000, 1)
logits [[-0.22413385 -0.21446167 -0.8764709  -0.705337  ]]
Iteration 800 of 1000: loss=0.0831 " + "l1=0" + "l2=0.0831 f=-0.496 shape=(1, 9000, 1)
logits [[-0.26987436 -0.26183483 -0.95643914 -0.49524206]]
Iteration 900 of 1000: loss=0.0661 " + "l1=0" + "l2=0.0661 f=-0.492 shape=(1, 9000, 1)
logits [[-0.31222352 -0.31049553 -1.0188937  -0.32727784]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.385 " + "l1=0.385" + "l2=0 f=-0.623 shape=(1, 9000, 1)
logits [[ 4.137902  -1.6672658 -1.5762427 -3.3867142]]
Iteration 100 of 1000: loss=0.305 " + "l1=0.243" + "l2=0.0618 f=-0.56 shape=(1, 9000, 1)
logits [[ 2.7888172  -0.87901855 -1.0505352  -3.1004734 ]]
Iteration 200 of 1000: loss=0.265 " + "l1=0.201" + "l2=0.0643 f=-0.542 shape=(1, 9000, 1)
logits [[ 2.2949975  -0.74007815 -0.9185245  -2.8032014 ]]
Iteration 300 of 1000: loss=0.233 " + "l1=0.159" + "l2=0.0737 f=-0.523 shape=(1, 9000, 1)
logits [[ 1.8122985 -0.5939682 -0.788429  -2.5213234]]
Iteration 400 of 1000: loss=0.206 " + "l1=0.129" + "l2=0.0772 f=-0.522 shape=(1, 9000, 1)
logits [[ 1.4414718 -0.5021081 -0.8070745 -2.2192507]]
Iteration 500 of 1000: loss=0.176 " + "l1=0.092" + "l2=0.0845 f=-0.514 shape=(1, 9000, 1)
logits [[ 0.9887488  -0.3995157  -0.78468186 -1.8617871 ]]
Iteration 600 of 1000: loss=0.152 " + "l1=0.0632" + "l2=0.0888 f=-0.508 shape=(1, 9000, 1)
logits [[ 0.6154878  -0.33774242 -0.80428493 -1.5051466 ]]
Iteration 700 of 1000: loss=0.126 " + "l1=0.0305" + "l2=0.0951 f=-0.508 shape=(1, 9000, 1)
logits [[ 0.16949573 -0.29146916 -0.83002055 -1.0786437 ]]
Iteration 800 of 1000: loss=0.0975 " + "l1=0.00161" + "l2=0.0959 f=-0.504 shape=(1, 9000, 1)
logits [[-0.22601494 -0.25033426 -0.88131815 -0.65799093]]
Iteration 900 of 1000: loss=0.0763 " + "l1=0" + "l2=0.0763 f=-0.495 shape=(1, 9000, 1)
logits [[-0.30816355 -0.30310142 -0.97971165 -0.39012054]]
--- 326.2386748790741 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0571 " + "l1=0.0571" + "l2=0 f=-0.623 shape=(1, 9000, 1)
logits [[ 4.137902  -1.6672658 -1.5762427 -3.3867142]]
Iteration 100 of 1000: loss=0.0566 " + "l1=0.0564" + "l2=0.000266 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.0716763 -1.64563   -1.5655946 -3.3459945]]
Iteration 200 of 1000: loss=0.0564 " + "l1=0.0561" + "l2=0.000313 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.0504274 -1.6397144 -1.5610859 -3.3329508]]
Iteration 300 of 1000: loss=0.0562 " + "l1=0.0558" + "l2=0.000387 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.0272775 -1.6332906 -1.5567526 -3.3183765]]
Iteration 400 of 1000: loss=0.0561 " + "l1=0.0555" + "l2=0.000505 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.0025697 -1.6264113 -1.5520471 -3.3032074]]
Iteration 500 of 1000: loss=0.0559 " + "l1=0.0552" + "l2=0.000624 f=-0.619 shape=(1, 9000, 1)
logits [[ 3.976232  -1.6192296 -1.5464785 -3.28745  ]]
Iteration 600 of 1000: loss=0.0557 " + "l1=0.0549" + "l2=0.000763 f=-0.619 shape=(1, 9000, 1)
logits [[ 3.9511309 -1.6122177 -1.5419122 -3.2721956]]
Iteration 700 of 1000: loss=0.0555 " + "l1=0.0546" + "l2=0.000924 f=-0.618 shape=(1, 9000, 1)
logits [[ 3.9251878 -1.6052493 -1.5373003 -3.2560165]]
Iteration 800 of 1000: loss=0.0553 " + "l1=0.0543" + "l2=0.00101 f=-0.618 shape=(1, 9000, 1)
logits [[ 3.8968854 -1.5977361 -1.5322131 -3.2384715]]
Iteration 900 of 1000: loss=0.0551 " + "l1=0.0539" + "l2=0.0012 f=-0.617 shape=(1, 9000, 1)
logits [[ 3.863722  -1.5900192 -1.5238568 -3.2176456]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.571 " + "l1=0.571" + "l2=0 f=-0.623 shape=(1, 9000, 1)
logits [[ 4.137902  -1.6672658 -1.5762427 -3.3867142]]
Iteration 100 of 1000: loss=0.492 " + "l1=0.449" + "l2=0.043 f=-0.572 shape=(1, 9000, 1)
logits [[ 3.2506125 -1.438549  -1.2382052 -2.859944 ]]
Iteration 200 of 1000: loss=0.361 " + "l1=0.275" + "l2=0.0862 f=-0.474 shape=(1, 9000, 1)
logits [[ 2.1429305  -0.99975544 -0.6072336  -2.4308078 ]]
Iteration 300 of 1000: loss=0.274 " + "l1=0.164" + "l2=0.11 f=-0.477 shape=(1, 9000, 1)
logits [[ 1.3587373  -1.0526892  -0.28225166 -1.9335558 ]]
Iteration 400 of 1000: loss=0.19 " + "l1=0.0642" + "l2=0.126 f=-0.492 shape=(1, 9000, 1)
logits [[ 0.62006456 -1.102725   -0.02180038 -1.4632307 ]]
Iteration 500 of 1000: loss=0.136 " + "l1=0.00104" + "l2=0.135 f=-0.494 shape=(1, 9000, 1)
logits [[ 0.06834686 -1.1080074   0.05792369 -0.9923368 ]]
Iteration 600 of 1000: loss=0.112 " + "l1=0.000797" + "l2=0.111 f=-0.492 shape=(1, 9000, 1)
logits [[ 0.03196447 -1.131634    0.0239948  -0.8914762 ]]
Iteration 700 of 1000: loss=0.0977 " + "l1=0.000504" + "l2=0.0972 f=-0.492 shape=(1, 9000, 1)
logits [[-0.00819443 -1.1565325  -0.01323231 -0.7900508 ]]
Iteration 800 of 1000: loss=0.0879 " + "l1=0.0013" + "l2=0.0866 f=-0.497 shape=(1, 9000, 1)
logits [[-0.05137558 -1.1786689  -0.0643881  -0.6916646 ]]
Iteration 900 of 1000: loss=0.0781 " + "l1=0.00139" + "l2=0.0767 f=-0.503 shape=(1, 9000, 1)
logits [[-0.11460104 -1.2241653  -0.1285329  -0.54514307]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.314 " + "l1=0.314" + "l2=0 f=-0.623 shape=(1, 9000, 1)
logits [[ 4.137902  -1.6672658 -1.5762427 -3.3867142]]
Iteration 100 of 1000: loss=0.294 " + "l1=0.278" + "l2=0.0151 f=-0.598 shape=(1, 9000, 1)
logits [[ 3.6538255 -1.5137904 -1.4086084 -3.1235712]]
Iteration 200 of 1000: loss=0.259 " + "l1=0.227" + "l2=0.0323 f=-0.561 shape=(1, 9000, 1)
logits [[ 3.083775  -1.2720367 -1.0461786 -3.0081427]]
Iteration 300 of 1000: loss=0.225 " + "l1=0.184" + "l2=0.0414 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.5315106  -1.0402492  -0.81058335 -2.8303692 ]]
Iteration 400 of 1000: loss=0.198 " + "l1=0.149" + "l2=0.0494 f=-0.519 shape=(1, 9000, 1)
logits [[ 2.1013205 -1.0441043 -0.5992905 -2.5348554]]
Iteration 500 of 1000: loss=0.166 " + "l1=0.103" + "l2=0.0634 f=-0.509 shape=(1, 9000, 1)
logits [[ 1.5192596 -1.1539843 -0.3473326 -2.053765 ]]
Iteration 600 of 1000: loss=0.142 " + "l1=0.0782" + "l2=0.0636 f=-0.508 shape=(1, 9000, 1)
logits [[ 1.1637741 -1.171354  -0.2576557 -1.7682009]]
Iteration 700 of 1000: loss=0.117 " + "l1=0.0509" + "l2=0.0666 f=-0.52 shape=(1, 9000, 1)
logits [[ 0.7356279  -1.176298   -0.18952602 -1.4497647 ]]
Iteration 800 of 1000: loss=0.097 " + "l1=0.0359" + "l2=0.0611 f=-0.523 shape=(1, 9000, 1)
logits [[ 0.47095278 -1.1823648  -0.18263018 -1.1968997 ]]
Iteration 900 of 1000: loss=0.0799 " + "l1=0.0232" + "l2=0.0567 f=-0.525 shape=(1, 9000, 1)
logits [[ 0.24259603 -1.1849022  -0.17999695 -0.97636896]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.443 " + "l1=0.443" + "l2=0 f=-0.623 shape=(1, 9000, 1)
logits [[ 4.137902  -1.6672658 -1.5762427 -3.3867142]]
Iteration 100 of 1000: loss=0.367 " + "l1=0.324" + "l2=0.0432 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.1210809 -1.2654653 -1.0598489 -3.0450747]]
Iteration 200 of 1000: loss=0.293 " + "l1=0.217" + "l2=0.0765 f=-0.5 shape=(1, 9000, 1)
logits [[ 2.2289906  -0.9669643  -0.57050997 -2.69129   ]]
Iteration 300 of 1000: loss=0.244 " + "l1=0.153" + "l2=0.0908 f=-0.488 shape=(1, 9000, 1)
logits [[ 1.6422596  -1.1017795  -0.33727872 -2.1542919 ]]
Iteration 400 of 1000: loss=0.197 " + "l1=0.108" + "l2=0.0892 f=-0.491 shape=(1, 9000, 1)
logits [[ 1.1737821  -1.1256032  -0.21418981 -1.7991623 ]]
Iteration 500 of 1000: loss=0.154 " + "l1=0.0662" + "l2=0.0877 f=-0.499 shape=(1, 9000, 1)
logits [[ 0.7103248 -1.1195207 -0.143506  -1.4419158]]
Iteration 600 of 1000: loss=0.125 " + "l1=0.033" + "l2=0.0915 f=-0.491 shape=(1, 9000, 1)
logits [[ 0.31741437 -1.1524798  -0.10860787 -1.0221181 ]]
Iteration 700 of 1000: loss=0.104 " + "l1=0.0126" + "l2=0.0912 f=-0.489 shape=(1, 9000, 1)
logits [[ 0.07530738 -1.167429   -0.08682819 -0.7763408 ]]
Iteration 800 of 1000: loss=0.0876 " + "l1=0" + "l2=0.0876 f=-0.492 shape=(1, 9000, 1)
logits [[-0.12049426 -1.1754066  -0.11933653 -0.5536478 ]]
Iteration 900 of 1000: loss=0.0759 " + "l1=0.00055" + "l2=0.0753 f=-0.499 shape=(1, 9000, 1)
logits [[-0.18358332 -1.2079887  -0.19067545 -0.41221535]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.379 " + "l1=0.379" + "l2=0 f=-0.623 shape=(1, 9000, 1)
logits [[ 4.137902  -1.6672658 -1.5762427 -3.3867142]]
Iteration 100 of 1000: loss=0.326 " + "l1=0.285" + "l2=0.0404 f=-0.57 shape=(1, 9000, 1)
logits [[ 3.212493  -1.2855104 -1.0912654 -3.1169908]]
Iteration 200 of 1000: loss=0.277 " + "l1=0.227" + "l2=0.0496 f=-0.54 shape=(1, 9000, 1)
logits [[ 2.610411  -1.0185988 -0.8216781 -2.928685 ]]
Iteration 300 of 1000: loss=0.237 " + "l1=0.176" + "l2=0.0614 f=-0.525 shape=(1, 9000, 1)
logits [[ 2.0886614 -0.9818663 -0.5668243 -2.6387942]]
Iteration 400 of 1000: loss=0.194 " + "l1=0.116" + "l2=0.0775 f=-0.516 shape=(1, 9000, 1)
logits [[ 1.4452906  -1.1508874  -0.30855742 -2.0490608 ]]
Iteration 500 of 1000: loss=0.161 " + "l1=0.0847" + "l2=0.0768 f=-0.503 shape=(1, 9000, 1)
logits [[ 1.0637443  -1.1349183  -0.21412379 -1.7276391 ]]
Iteration 600 of 1000: loss=0.139 " + "l1=0.0595" + "l2=0.0793 f=-0.504 shape=(1, 9000, 1)
logits [[ 0.71795446 -1.137761   -0.18076535 -1.4171696 ]]
Iteration 700 of 1000: loss=0.115 " + "l1=0.0363" + "l2=0.0788 f=-0.499 shape=(1, 9000, 1)
logits [[ 0.3972728  -1.1639389  -0.15022667 -1.0794543 ]]
Iteration 800 of 1000: loss=0.0929 " + "l1=0.0184" + "l2=0.0745 f=-0.493 shape=(1, 9000, 1)
logits [[ 0.15865177 -1.1870552  -0.11898801 -0.8242486 ]]
Iteration 900 of 1000: loss=0.0782 " + "l1=0.00535" + "l2=0.0728 f=-0.494 shape=(1, 9000, 1)
logits [[-0.05430771 -1.1884521  -0.13500218 -0.59862095]]
--- 326.6317844390869 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0752 " + "l1=0.0752" + "l2=0 f=-0.623 shape=(1, 9000, 1)
logits [[ 4.137902  -1.6672658 -1.5762427 -3.3867142]]
Iteration 100 of 1000: loss=0.0738 " + "l1=0.0732" + "l2=0.000582 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.030263  -1.6349621 -1.5852369 -3.2915733]]
Iteration 200 of 1000: loss=0.0732 " + "l1=0.0724" + "l2=0.00076 f=-0.619 shape=(1, 9000, 1)
logits [[ 3.988955  -1.6261486 -1.5885464 -3.2506979]]
Iteration 300 of 1000: loss=0.0725 " + "l1=0.0715" + "l2=0.00104 f=-0.618 shape=(1, 9000, 1)
logits [[ 3.9429297 -1.615703  -1.5926635 -3.205714 ]]
Iteration 400 of 1000: loss=0.0719 " + "l1=0.0706" + "l2=0.00134 f=-0.616 shape=(1, 9000, 1)
logits [[ 3.8960676 -1.6061475 -1.5951722 -3.1600578]]
Iteration 500 of 1000: loss=0.0712 " + "l1=0.0696" + "l2=0.00164 f=-0.615 shape=(1, 9000, 1)
logits [[ 3.846292  -1.5948787 -1.5983783 -3.1123295]]
Iteration 600 of 1000: loss=0.0705 " + "l1=0.0685" + "l2=0.00199 f=-0.613 shape=(1, 9000, 1)
logits [[ 3.791864  -1.5821868 -1.6010745 -3.061826 ]]
Iteration 700 of 1000: loss=0.0697 " + "l1=0.0673" + "l2=0.00239 f=-0.612 shape=(1, 9000, 1)
logits [[ 3.728746  -1.5676972 -1.6034807 -3.00362  ]]
Iteration 800 of 1000: loss=0.0687 " + "l1=0.0659" + "l2=0.00283 f=-0.609 shape=(1, 9000, 1)
logits [[ 3.6541007 -1.5503926 -1.6022705 -2.9370432]]
Iteration 900 of 1000: loss=0.0677 " + "l1=0.0644" + "l2=0.00326 f=-0.606 shape=(1, 9000, 1)
logits [[ 3.5749886 -1.533501  -1.5980601 -2.8669324]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.752 " + "l1=0.752" + "l2=0 f=-0.623 shape=(1, 9000, 1)
logits [[ 4.137902  -1.6672658 -1.5762427 -3.3867142]]
Iteration 100 of 1000: loss=0.559 " + "l1=0.445" + "l2=0.114 f=-0.501 shape=(1, 9000, 1)
logits [[ 2.5059001 -1.2869991 -1.276784  -1.9441469]]
Iteration 200 of 1000: loss=0.284 " + "l1=0.0805" + "l2=0.203 f=-0.447 shape=(1, 9000, 1)
logits [[ 0.25751767 -0.9522503  -0.54679435 -0.5470292 ]]
Iteration 300 of 1000: loss=0.131 " + "l1=0" + "l2=0.131 f=-0.474 shape=(1, 9000, 1)
logits [[-0.14333338 -1.0263247  -0.59470993 -0.13356358]]
Iteration 400 of 1000: loss=0.0931 " + "l1=0" + "l2=0.0931 f=-0.484 shape=(1, 9000, 1)
logits [[-0.10311455 -1.1105283  -0.6331035  -0.08854263]]
Iteration 500 of 1000: loss=0.076 " + "l1=0" + "l2=0.076 f=-0.49 shape=(1, 9000, 1)
logits [[-0.09573881 -1.1439189  -0.6521941  -0.06890891]]
Iteration 600 of 1000: loss=0.0643 " + "l1=0" + "l2=0.0643 f=-0.499 shape=(1, 9000, 1)
logits [[-0.09877546 -1.1597915  -0.68543303 -0.05145009]]
Iteration 700 of 1000: loss=0.0529 " + "l1=0.000513" + "l2=0.0524 f=-0.506 shape=(1, 9000, 1)
logits [[-0.05353631 -1.1796252  -0.7323592  -0.05866457]]
Iteration 800 of 1000: loss=0.0436 " + "l1=0.00128" + "l2=0.0423 f=-0.517 shape=(1, 9000, 1)
logits [[-0.02669175 -1.2069048  -0.7948944  -0.03952514]]
Iteration 900 of 1000: loss=0.035 " + "l1=0" + "l2=0.035 f=-0.525 shape=(1, 9000, 1)
logits [[-0.01445032 -1.2335782  -0.87092745  0.01730768]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.414 " + "l1=0.414" + "l2=0 f=-0.623 shape=(1, 9000, 1)
logits [[ 4.137902  -1.6672658 -1.5762427 -3.3867142]]
Iteration 100 of 1000: loss=0.37 " + "l1=0.345" + "l2=0.0246 f=-0.602 shape=(1, 9000, 1)
logits [[ 3.451433  -1.4841702 -1.5555261 -2.820463 ]]
Iteration 200 of 1000: loss=0.326 " + "l1=0.285" + "l2=0.0407 f=-0.568 shape=(1, 9000, 1)
logits [[ 2.8847175 -1.4157615 -1.4378567 -2.303246 ]]
Iteration 300 of 1000: loss=0.272 " + "l1=0.211" + "l2=0.0607 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.2432787 -1.3472004 -1.2939779 -1.5931482]]
Iteration 400 of 1000: loss=0.175 " + "l1=0.0807" + "l2=0.0939 f=-0.424 shape=(1, 9000, 1)
logits [[ 0.7735338 -0.9378869 -0.8385884 -0.6928378]]
Iteration 500 of 1000: loss=0.0981 " + "l1=0.00166" + "l2=0.0965 f=-0.412 shape=(1, 9000, 1)
logits [[ 0.12433754 -1.0268246  -0.8385923   0.09407843]]
Iteration 600 of 1000: loss=0.066 " + "l1=0.000186" + "l2=0.0658 f=-0.439 shape=(1, 9000, 1)
logits [[ 0.08346385 -1.0624418  -0.8567688   0.08008412]]
Iteration 700 of 1000: loss=0.045 " + "l1=0.000266" + "l2=0.0448 f=-0.472 shape=(1, 9000, 1)
logits [[ 0.04307867 -1.0849195  -0.8824133   0.03823439]]
Iteration 800 of 1000: loss=0.0308 " + "l1=0" + "l2=0.0308 f=-0.496 shape=(1, 9000, 1)
logits [[ 0.01907334 -1.0959309  -0.92701983  0.02176233]]
Iteration 900 of 1000: loss=0.023 " + "l1=7.43e-05" + "l2=0.0229 f=-0.515 shape=(1, 9000, 1)
logits [[ 0.03174333 -1.1315994  -0.98982376  0.03039312]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.245 " + "l1=0.245" + "l2=0 f=-0.623 shape=(1, 9000, 1)
logits [[ 4.137902  -1.6672658 -1.5762427 -3.3867142]]
Iteration 100 of 1000: loss=0.231 " + "l1=0.225" + "l2=0.00614 f=-0.615 shape=(1, 9000, 1)
logits [[ 3.8111763 -1.5724757 -1.5950052 -3.1030586]]
Iteration 200 of 1000: loss=0.221 " + "l1=0.21" + "l2=0.0103 f=-0.606 shape=(1, 9000, 1)
logits [[ 3.579668  -1.5317142 -1.58254   -2.8897347]]
Iteration 300 of 1000: loss=0.206 " + "l1=0.187" + "l2=0.0185 f=-0.585 shape=(1, 9000, 1)
logits [[ 3.183672  -1.4747101 -1.4694964 -2.5791512]]
Iteration 400 of 1000: loss=0.19 " + "l1=0.167" + "l2=0.0225 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.8775182 -1.4337195 -1.4547464 -2.2745495]]
Iteration 500 of 1000: loss=0.168 " + "l1=0.138" + "l2=0.0301 f=-0.525 shape=(1, 9000, 1)
logits [[ 2.407132  -1.382152  -1.296803  -1.8273684]]
Iteration 600 of 1000: loss=0.133 " + "l1=0.0905" + "l2=0.0423 f=-0.448 shape=(1, 9000, 1)
logits [[ 1.5486344 -1.2011913 -0.9037066 -1.2362994]]
Iteration 700 of 1000: loss=0.104 " + "l1=0.0553" + "l2=0.0484 f=-0.436 shape=(1, 9000, 1)
logits [[ 0.99159074 -1.174639   -0.85211754 -0.71068215]]
Iteration 800 of 1000: loss=0.0753 " + "l1=0.0264" + "l2=0.0489 f=-0.44 shape=(1, 9000, 1)
logits [[ 0.54475033 -1.1802545  -0.85623395 -0.26787695]]
Iteration 900 of 1000: loss=0.0423 " + "l1=0" + "l2=0.0423 f=-0.464 shape=(1, 9000, 1)
logits [[ 0.13399714 -1.2059901  -0.9246219   0.13995609]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.16 " + "l1=0.16" + "l2=0 f=-0.623 shape=(1, 9000, 1)
logits [[ 4.137902  -1.6672658 -1.5762427 -3.3867142]]
Iteration 100 of 1000: loss=0.154 " + "l1=0.152" + "l2=0.00245 f=-0.618 shape=(1, 9000, 1)
logits [[ 3.92779   -1.6047975 -1.5913919 -3.2036016]]
Iteration 200 of 1000: loss=0.151 " + "l1=0.147" + "l2=0.00354 f=-0.614 shape=(1, 9000, 1)
logits [[ 3.8204257 -1.5834073 -1.5962044 -3.0986216]]
Iteration 300 of 1000: loss=0.147 " + "l1=0.141" + "l2=0.00538 f=-0.61 shape=(1, 9000, 1)
logits [[ 3.6778045 -1.5560431 -1.5964116 -2.9638546]]
Iteration 400 of 1000: loss=0.142 " + "l1=0.134" + "l2=0.00746 f=-0.603 shape=(1, 9000, 1)
logits [[ 3.510159  -1.5269574 -1.587844  -2.8073843]]
Iteration 500 of 1000: loss=0.135 " + "l1=0.123" + "l2=0.0113 f=-0.587 shape=(1, 9000, 1)
logits [[ 3.2142467 -1.4762341 -1.500726  -2.5855637]]
Iteration 600 of 1000: loss=0.127 " + "l1=0.114" + "l2=0.0132 f=-0.578 shape=(1, 9000, 1)
logits [[ 2.9708984 -1.4503628 -1.4551805 -2.3779125]]
Iteration 700 of 1000: loss=0.119 " + "l1=0.104" + "l2=0.0156 f=-0.564 shape=(1, 9000, 1)
logits [[ 2.7270384 -1.4203643 -1.4111183 -2.1511743]]
Iteration 800 of 1000: loss=0.107 " + "l1=0.0854" + "l2=0.0212 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.2131426 -1.3290377 -1.1126727 -1.8068613]]
Iteration 900 of 1000: loss=0.0916 " + "l1=0.0663" + "l2=0.0253 f=-0.46 shape=(1, 9000, 1)
logits [[ 1.6726454 -1.1880015 -0.8762137 -1.4482943]]
--- 325.58088850975037 seconds ---
Adv result:3
Loading record A01013
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0739 " + "l1=0.0739" + "l2=0 f=-0.758 shape=(1, 9000, 1)
logits [[ 4.3116555 -3.0796895  2.8742986 -7.1380143]]
Iteration 100 of 1000: loss=0.0736 " + "l1=0.0733" + "l2=0.000305 f=-0.756 shape=(1, 9000, 1)
logits [[ 4.2694683 -3.0580337  2.8608444 -7.0953264]]
Iteration 200 of 1000: loss=0.0735 " + "l1=0.0732" + "l2=0.000288 f=-0.755 shape=(1, 9000, 1)
logits [[ 4.266325  -3.0558712  2.8593025 -7.090903 ]]
Iteration 300 of 1000: loss=0.0735 " + "l1=0.0731" + "l2=0.000347 f=-0.755 shape=(1, 9000, 1)
logits [[ 4.260818  -3.0530474  2.8574097 -7.084431 ]]
Iteration 400 of 1000: loss=0.0734 " + "l1=0.0731" + "l2=0.00039 f=-0.754 shape=(1, 9000, 1)
logits [[ 4.2553654 -3.0504234  2.8557408 -7.07818  ]]
Iteration 500 of 1000: loss=0.0734 " + "l1=0.073" + "l2=0.000429 f=-0.754 shape=(1, 9000, 1)
logits [[ 4.2503705 -3.048054   2.8543282 -7.0725245]]
Iteration 600 of 1000: loss=0.0735 " + "l1=0.0729" + "l2=0.000563 f=-0.754 shape=(1, 9000, 1)
logits [[ 4.245699  -3.0457554  2.8530061 -7.0672383]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.739 " + "l1=0.739" + "l2=0 f=-0.758 shape=(1, 9000, 1)
logits [[ 4.3116555 -3.0796895  2.8742986 -7.1380143]]
Iteration 100 of 1000: loss=0.707 " + "l1=0.685" + "l2=0.0218 f=-0.739 shape=(1, 9000, 1)
logits [[ 3.9529097 -2.8994687  2.7536328 -6.7627463]]
Iteration 200 of 1000: loss=0.698 " + "l1=0.67" + "l2=0.0284 f=-0.731 shape=(1, 9000, 1)
logits [[ 3.8481355 -2.8493605  2.718775  -6.6420774]]
Iteration 300 of 1000: loss=0.691 " + "l1=0.658" + "l2=0.0325 f=-0.724 shape=(1, 9000, 1)
logits [[ 3.7657554 -2.8181508  2.697587  -6.541577 ]]
Iteration 400 of 1000: loss=0.685 " + "l1=0.649" + "l2=0.0357 f=-0.718 shape=(1, 9000, 1)
logits [[ 3.700848  -2.788947   2.6789486 -6.46343  ]]
Iteration 500 of 1000: loss=0.679 " + "l1=0.642" + "l2=0.0379 f=-0.712 shape=(1, 9000, 1)
logits [[ 3.650602  -2.7645364  2.6634717 -6.398574 ]]
Iteration 600 of 1000: loss=0.675 " + "l1=0.636" + "l2=0.0393 f=-0.708 shape=(1, 9000, 1)
logits [[ 3.6079955 -2.747195   2.6508896 -6.3422923]]
Iteration 700 of 1000: loss=0.671 " + "l1=0.63" + "l2=0.0411 f=-0.703 shape=(1, 9000, 1)
logits [[ 3.5668123 -2.731259   2.640588  -6.288948 ]]
Iteration 800 of 1000: loss=0.667 " + "l1=0.624" + "l2=0.0426 f=-0.699 shape=(1, 9000, 1)
logits [[ 3.5261686 -2.7176893  2.628217  -6.23413  ]]
Iteration 900 of 1000: loss=0.664 " + "l1=0.619" + "l2=0.0442 f=-0.696 shape=(1, 9000, 1)
logits [[ 3.4865754 -2.7071326  2.6177843 -6.179633 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.39 " + "l1=7.39" + "l2=0 f=-0.758 shape=(1, 9000, 1)
logits [[ 4.3116555 -3.0796895  2.8742986 -7.1380143]]
Iteration 100 of 1000: loss=5.19 " + "l1=4.27" + "l2=0.925 f=-0.588 shape=(1, 9000, 1)
logits [[ 2.1815917 -2.079879   2.18585   -4.639004 ]]
Iteration 200 of 1000: loss=4.82 " + "l1=3.77" + "l2=1.05 f=-0.556 shape=(1, 9000, 1)
logits [[ 1.9513496 -1.8185005  1.9513044 -4.3084626]]
Iteration 300 of 1000: loss=4.68 " + "l1=3.64" + "l2=1.04 f=-0.552 shape=(1, 9000, 1)
logits [[ 1.8776311 -1.751524   1.8873364 -4.2218614]]
Iteration 400 of 1000: loss=4.58 " + "l1=3.55" + "l2=1.03 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.8395624 -1.7137723  1.8351068 -4.1473064]]
Iteration 500 of 1000: loss=4.47 " + "l1=3.42" + "l2=1.05 f=-0.54 shape=(1, 9000, 1)
logits [[ 1.7577386 -1.6599079  1.7584281 -4.0168695]]
Iteration 600 of 1000: loss=4.36 " + "l1=3.26" + "l2=1.1 f=-0.54 shape=(1, 9000, 1)
logits [[ 1.6619592 -1.5938673  1.665159  -3.8918836]]
Iteration 700 of 1000: loss=4.25 " + "l1=3.17" + "l2=1.08 f=-0.541 shape=(1, 9000, 1)
logits [[ 1.6143062 -1.5553662  1.613984  -3.8358073]]
Iteration 800 of 1000: loss=4.14 " + "l1=3.02" + "l2=1.12 f=-0.533 shape=(1, 9000, 1)
logits [[ 1.5372596 -1.4796089  1.5413157 -3.7290888]]
Iteration 900 of 1000: loss=4.07 " + "l1=2.94" + "l2=1.13 f=-0.524 shape=(1, 9000, 1)
logits [[ 1.4881796 -1.4390434  1.4972999 -3.6411288]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=73.9 " + "l1=73.9" + "l2=0 f=-0.758 shape=(1, 9000, 1)
logits [[ 4.3116555 -3.0796895  2.8742986 -7.1380143]]
Iteration 100 of 1000: loss=20.3 " + "l1=7.93" + "l2=12.4 f=-0.364 shape=(1, 9000, 1)
logits [[ 0.23455429 -0.25066596  0.5420535  -1.9828556 ]]
Iteration 200 of 1000: loss=12.6 " + "l1=0.26" + "l2=12.3 f=-0.365 shape=(1, 9000, 1)
logits [[-0.40227777  0.23924097  0.26520586 -1.563129  ]]
Iteration 300 of 1000: loss=11.2 " + "l1=0" + "l2=11.2 f=-0.37 shape=(1, 9000, 1)
logits [[-0.44096443  0.28403318  0.25798854 -1.581809  ]]
Iteration 400 of 1000: loss=10.2 " + "l1=0" + "l2=10.2 f=-0.383 shape=(1, 9000, 1)
logits [[-0.44539678  0.29765075  0.27358344 -1.6561799 ]]
Iteration 500 of 1000: loss=9.5 " + "l1=0" + "l2=9.5 f=-0.383 shape=(1, 9000, 1)
logits [[-0.46794307  0.3079813   0.2879397  -1.6588387 ]]
Iteration 600 of 1000: loss=8.89 " + "l1=0.151" + "l2=8.74 f=-0.384 shape=(1, 9000, 1)
logits [[-0.42865175  0.28978282  0.30485937 -1.7015333 ]]
Iteration 700 of 1000: loss=8.47 " + "l1=0" + "l2=8.47 f=-0.385 shape=(1, 9000, 1)
logits [[-0.48867807  0.3196202   0.29062906 -1.6620637 ]]
Iteration 800 of 1000: loss=7.99 " + "l1=0" + "l2=7.99 f=-0.383 shape=(1, 9000, 1)
logits [[-0.46013513  0.30921665  0.30238587 -1.6847308 ]]
Iteration 900 of 1000: loss=7.74 " + "l1=0.116" + "l2=7.63 f=-0.386 shape=(1, 9000, 1)
logits [[-0.4435459   0.3061157   0.31773883 -1.7237451 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=40.7 " + "l1=40.7" + "l2=0 f=-0.758 shape=(1, 9000, 1)
logits [[ 4.3116555 -3.0796895  2.8742986 -7.1380143]]
Iteration 100 of 1000: loss=16 " + "l1=8.84" + "l2=7.21 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.9034373  -0.68425936  0.9221079  -2.7593794 ]]
Iteration 200 of 1000: loss=11.8 " + "l1=3.07" + "l2=8.77 f=-0.41 shape=(1, 9000, 1)
logits [[ 0.20995206 -0.07966014  0.47925732 -2.2490396 ]]
Iteration 300 of 1000: loss=9.59 " + "l1=0.0712" + "l2=9.52 f=-0.408 shape=(1, 9000, 1)
logits [[-0.25218725  0.32539368  0.33833265 -2.045083  ]]
Iteration 400 of 1000: loss=8.4 " + "l1=0.00931" + "l2=8.4 f=-0.402 shape=(1, 9000, 1)
logits [[-0.2769287   0.32560444  0.32729647 -1.984436  ]]
Iteration 500 of 1000: loss=7.77 " + "l1=0" + "l2=7.77 f=-0.399 shape=(1, 9000, 1)
logits [[-0.38205096  0.34622878  0.33119577 -1.889872  ]]
Iteration 600 of 1000: loss=7.21 " + "l1=0.0779" + "l2=7.13 f=-0.404 shape=(1, 9000, 1)
logits [[-0.39785478  0.33236796  0.34652412 -1.8963162 ]]
Iteration 700 of 1000: loss=6.85 " + "l1=0" + "l2=6.85 f=-0.406 shape=(1, 9000, 1)
logits [[-0.4345555   0.34581232  0.34139982 -1.8767573 ]]
Iteration 800 of 1000: loss=6.55 " + "l1=0" + "l2=6.55 f=-0.405 shape=(1, 9000, 1)
logits [[-0.439739    0.3430061   0.34181076 -1.866893  ]]
Iteration 900 of 1000: loss=6.34 " + "l1=0.0672" + "l2=6.28 f=-0.405 shape=(1, 9000, 1)
logits [[-0.4300549   0.3359724   0.34819946 -1.8722129 ]]
--- 301.6728127002716 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0144 " + "l1=0.0144" + "l2=0 f=-0.758 shape=(1, 9000, 1)
logits [[ 4.3116555 -3.0796895  2.8742986 -7.1380143]]
Iteration 100 of 1000: loss=0.0142 " + "l1=0.0141" + "l2=0.000161 f=-0.758 shape=(1, 9000, 1)
logits [[ 4.282971  -3.0786712  2.8764193 -7.110941 ]]
Iteration 200 of 1000: loss=0.0142 " + "l1=0.014" + "l2=0.000133 f=-0.757 shape=(1, 9000, 1)
logits [[ 4.2812643 -3.0790577  2.8766487 -7.108156 ]]
Iteration 300 of 1000: loss=0.0142 " + "l1=0.014" + "l2=0.000171 f=-0.757 shape=(1, 9000, 1)
logits [[ 4.277574  -3.0792189  2.8770297 -7.1040893]]
Iteration 400 of 1000: loss=0.0142 " + "l1=0.014" + "l2=0.00021 f=-0.757 shape=(1, 9000, 1)
logits [[ 4.273867  -3.0793452  2.8774762 -7.1002207]]
Iteration 500 of 1000: loss=0.0142 " + "l1=0.0139" + "l2=0.000265 f=-0.757 shape=(1, 9000, 1)
logits [[ 4.270255  -3.079369   2.8778315 -7.096492 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.144 " + "l1=0.144" + "l2=0 f=-0.758 shape=(1, 9000, 1)
logits [[ 4.3116555 -3.0796895  2.8742986 -7.1380143]]
Iteration 100 of 1000: loss=0.129 " + "l1=0.119" + "l2=0.0098 f=-0.754 shape=(1, 9000, 1)
logits [[ 4.0769496 -3.07642    2.887549  -6.902165 ]]
Iteration 200 of 1000: loss=0.124 " + "l1=0.111" + "l2=0.0131 f=-0.752 shape=(1, 9000, 1)
logits [[ 4.006899  -3.0855982  2.896724  -6.8257346]]
Iteration 300 of 1000: loss=0.121 " + "l1=0.105" + "l2=0.0156 f=-0.751 shape=(1, 9000, 1)
logits [[ 3.9536738 -3.0929477  2.903804  -6.768963 ]]
Iteration 400 of 1000: loss=0.117 " + "l1=0.099" + "l2=0.0181 f=-0.75 shape=(1, 9000, 1)
logits [[ 3.9031162 -3.0984166  2.913411  -6.7168508]]
Iteration 500 of 1000: loss=0.114 " + "l1=0.0933" + "l2=0.0202 f=-0.748 shape=(1, 9000, 1)
logits [[ 3.8545449 -3.1064212  2.921567  -6.6626225]]
Iteration 600 of 1000: loss=0.11 " + "l1=0.0883" + "l2=0.0221 f=-0.748 shape=(1, 9000, 1)
logits [[ 3.8119218 -3.1143966  2.9289443 -6.616833 ]]
Iteration 700 of 1000: loss=0.108 " + "l1=0.0841" + "l2=0.0235 f=-0.746 shape=(1, 9000, 1)
logits [[ 3.7731233 -3.1194906  2.9325342 -6.5717845]]
Iteration 800 of 1000: loss=0.104 " + "l1=0.0799" + "l2=0.0245 f=-0.745 shape=(1, 9000, 1)
logits [[ 3.7344873 -3.1266758  2.9358885 -6.52291  ]]
Iteration 900 of 1000: loss=0.102 " + "l1=0.0757" + "l2=0.0259 f=-0.743 shape=(1, 9000, 1)
logits [[ 3.696803  -3.134225   2.9398298 -6.4760714]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.44 " + "l1=1.44" + "l2=0 f=-0.758 shape=(1, 9000, 1)
logits [[ 4.3116555 -3.0796895  2.8742986 -7.1380143]]
Iteration 100 of 1000: loss=0.271 " + "l1=0.00124" + "l2=0.269 f=-0.747 shape=(1, 9000, 1)
logits [[ 3.0067613 -3.1618655  3.0055215 -5.8370466]]
Iteration 200 of 1000: loss=0.21 " + "l1=0.00385" + "l2=0.206 f=-0.743 shape=(1, 9000, 1)
logits [[ 3.0361433 -3.1841266  3.0322964 -5.8546777]]
Iteration 300 of 1000: loss=0.178 " + "l1=0" + "l2=0.178 f=-0.741 shape=(1, 9000, 1)
logits [[ 3.0427358 -3.203769   3.0452058 -5.84619  ]]
Iteration 400 of 1000: loss=0.161 " + "l1=0" + "l2=0.161 f=-0.738 shape=(1, 9000, 1)
logits [[ 3.0299644 -3.215312   3.053484  -5.8206906]]
Iteration 500 of 1000: loss=0.142 " + "l1=0" + "l2=0.142 f=-0.736 shape=(1, 9000, 1)
logits [[ 3.0422409 -3.218662   3.055965  -5.825058 ]]
Iteration 600 of 1000: loss=0.129 " + "l1=0" + "l2=0.129 f=-0.733 shape=(1, 9000, 1)
logits [[ 3.0467567 -3.2205439  3.0569942 -5.8152437]]
Iteration 700 of 1000: loss=0.119 " + "l1=0" + "l2=0.119 f=-0.731 shape=(1, 9000, 1)
logits [[ 3.0487633 -3.2192838  3.0579646 -5.8108373]]
Iteration 800 of 1000: loss=0.111 " + "l1=0" + "l2=0.111 f=-0.728 shape=(1, 9000, 1)
logits [[ 3.050378  -3.2167068  3.057872  -5.801907 ]]
Iteration 900 of 1000: loss=0.105 " + "l1=0.00305" + "l2=0.102 f=-0.724 shape=(1, 9000, 1)
logits [[ 3.0591671 -3.2156687  3.0561123 -5.7953386]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.791 " + "l1=0.791" + "l2=0 f=-0.758 shape=(1, 9000, 1)
logits [[ 4.3116555 -3.0796895  2.8742986 -7.1380143]]
Iteration 100 of 1000: loss=0.265 " + "l1=0" + "l2=0.265 f=-0.746 shape=(1, 9000, 1)
logits [[ 3.0105608 -3.1630714  3.0116587 -5.844536 ]]
Iteration 200 of 1000: loss=0.199 " + "l1=0" + "l2=0.199 f=-0.741 shape=(1, 9000, 1)
logits [[ 3.031579  -3.1867437  3.0352924 -5.8424172]]
Iteration 300 of 1000: loss=0.168 " + "l1=0.00322" + "l2=0.165 f=-0.739 shape=(1, 9000, 1)
logits [[ 3.0564704 -3.2104132  3.0506113 -5.8517947]]
Iteration 400 of 1000: loss=0.145 " + "l1=0.000311" + "l2=0.145 f=-0.737 shape=(1, 9000, 1)
logits [[ 3.0547187 -3.217201   3.0541534 -5.8390107]]
Iteration 500 of 1000: loss=0.131 " + "l1=0" + "l2=0.131 f=-0.733 shape=(1, 9000, 1)
logits [[ 3.0508435 -3.216342   3.0562518 -5.821019 ]]
Iteration 600 of 1000: loss=0.12 " + "l1=0" + "l2=0.12 f=-0.731 shape=(1, 9000, 1)
logits [[ 3.050164  -3.2149892  3.0588498 -5.816966 ]]
Iteration 700 of 1000: loss=0.112 " + "l1=0" + "l2=0.112 f=-0.728 shape=(1, 9000, 1)
logits [[ 3.0445285 -3.2128067  3.060338  -5.8040547]]
Iteration 800 of 1000: loss=0.101 " + "l1=0" + "l2=0.101 f=-0.725 shape=(1, 9000, 1)
logits [[ 3.0577085 -3.2135139  3.0601773 -5.806209 ]]
Iteration 900 of 1000: loss=0.0965 " + "l1=0" + "l2=0.0965 f=-0.722 shape=(1, 9000, 1)
logits [[ 3.039023  -3.2164981  3.061974  -5.771051 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.467 " + "l1=0.467" + "l2=0 f=-0.758 shape=(1, 9000, 1)
logits [[ 4.3116555 -3.0796895  2.8742986 -7.1380143]]
Iteration 100 of 1000: loss=0.283 " + "l1=0.151" + "l2=0.132 f=-0.746 shape=(1, 9000, 1)
logits [[ 3.4167924 -3.0916517  2.9524806 -6.262788 ]]
Iteration 200 of 1000: loss=0.211 " + "l1=0.0273" + "l2=0.184 f=-0.744 shape=(1, 9000, 1)
logits [[ 3.1014895 -3.1732767  3.0175478 -5.921452 ]]
Iteration 300 of 1000: loss=0.169 " + "l1=0.00212" + "l2=0.167 f=-0.739 shape=(1, 9000, 1)
logits [[ 3.0526233 -3.2071881  3.0460868 -5.846783 ]]
Iteration 400 of 1000: loss=0.144 " + "l1=0.00181" + "l2=0.142 f=-0.736 shape=(1, 9000, 1)
logits [[ 3.0560026 -3.2148986  3.0504358 -5.835395 ]]
Iteration 500 of 1000: loss=0.127 " + "l1=0" + "l2=0.127 f=-0.732 shape=(1, 9000, 1)
logits [[ 3.0531886 -3.2103064  3.0537493 -5.8245864]]
Iteration 600 of 1000: loss=0.115 " + "l1=0.00116" + "l2=0.114 f=-0.73 shape=(1, 9000, 1)
logits [[ 3.0610082 -3.2100012  3.0574253 -5.8303013]]
Iteration 700 of 1000: loss=0.104 " + "l1=0.00112" + "l2=0.103 f=-0.728 shape=(1, 9000, 1)
logits [[ 3.0638242 -3.2105463  3.060364  -5.825021 ]]
Iteration 800 of 1000: loss=0.0945 " + "l1=0.00108" + "l2=0.0935 f=-0.725 shape=(1, 9000, 1)
logits [[ 3.0673282 -3.2113428  3.0640073 -5.818474 ]]
Iteration 900 of 1000: loss=0.085 " + "l1=0" + "l2=0.085 f=-0.721 shape=(1, 9000, 1)
logits [[ 3.069449 -3.211185  3.070882 -5.811157]]
--- 296.72580742836 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.114 " + "l1=0.114" + "l2=0 f=-0.758 shape=(1, 9000, 1)
logits [[ 4.3116555 -3.0796895  2.8742986 -7.1380143]]
Iteration 100 of 1000: loss=0.114 " + "l1=0.113" + "l2=0.000663 f=-0.754 shape=(1, 9000, 1)
logits [[ 4.2440286 -3.0672035  2.8575816 -7.0501037]]
Iteration 200 of 1000: loss=0.113 " + "l1=0.113" + "l2=0.000738 f=-0.753 shape=(1, 9000, 1)
logits [[ 4.2322674 -3.0655951  2.8548374 -7.0339656]]
Iteration 300 of 1000: loss=0.113 " + "l1=0.112" + "l2=0.000841 f=-0.752 shape=(1, 9000, 1)
logits [[ 4.220689  -3.0640647  2.8521647 -7.0179877]]
Iteration 400 of 1000: loss=0.113 " + "l1=0.112" + "l2=0.000996 f=-0.752 shape=(1, 9000, 1)
logits [[ 4.209538  -3.0628254  2.8498204 -7.00269  ]]
Iteration 500 of 1000: loss=0.113 " + "l1=0.112" + "l2=0.00114 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.1994615 -3.0617876  2.8477373 -6.9887223]]
Iteration 600 of 1000: loss=0.113 " + "l1=0.112" + "l2=0.00129 f=-0.75 shape=(1, 9000, 1)
logits [[ 4.190588 -3.06087   2.845929 -6.976323]]
Iteration 700 of 1000: loss=0.113 " + "l1=0.111" + "l2=0.00134 f=-0.75 shape=(1, 9000, 1)
logits [[ 4.182422  -3.0600765  2.844299  -6.96473  ]]
Iteration 800 of 1000: loss=0.113 " + "l1=0.111" + "l2=0.00157 f=-0.749 shape=(1, 9000, 1)
logits [[ 4.1740904 -3.059263   2.842807  -6.9530096]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.14 " + "l1=1.14" + "l2=0 f=-0.758 shape=(1, 9000, 1)
logits [[ 4.3116555 -3.0796895  2.8742986 -7.1380143]]
Iteration 100 of 1000: loss=1.05 " + "l1=0.988" + "l2=0.0645 f=-0.719 shape=(1, 9000, 1)
logits [[ 3.6348608 -2.9762893  2.706888  -6.2419896]]
Iteration 200 of 1000: loss=1.02 " + "l1=0.924" + "l2=0.0926 f=-0.703 shape=(1, 9000, 1)
logits [[ 3.3690941 -2.9618943  2.648223  -5.8664203]]
Iteration 300 of 1000: loss=0.989 " + "l1=0.884" + "l2=0.105 f=-0.689 shape=(1, 9000, 1)
logits [[ 3.214264  -2.9550633  2.612024  -5.626347 ]]
Iteration 400 of 1000: loss=0.962 " + "l1=0.844" + "l2=0.118 f=-0.672 shape=(1, 9000, 1)
logits [[ 3.0522337 -2.9372778  2.5820262 -5.3852453]]
Iteration 500 of 1000: loss=0.94 " + "l1=0.816" + "l2=0.124 f=-0.658 shape=(1, 9000, 1)
logits [[ 2.9450145 -2.922687   2.5625577 -5.216097 ]]
Iteration 600 of 1000: loss=0.92 " + "l1=0.787" + "l2=0.134 f=-0.642 shape=(1, 9000, 1)
logits [[ 2.8310997 -2.9129746  2.5481837 -5.03556  ]]
Iteration 700 of 1000: loss=0.901 " + "l1=0.762" + "l2=0.139 f=-0.633 shape=(1, 9000, 1)
logits [[ 2.7320297 -2.9081635  2.5342987 -4.8906255]]
Iteration 800 of 1000: loss=0.883 " + "l1=0.737" + "l2=0.146 f=-0.625 shape=(1, 9000, 1)
logits [[ 2.62529   -2.9137473  2.529569  -4.7429013]]
Iteration 900 of 1000: loss=0.863 " + "l1=0.712" + "l2=0.151 f=-0.616 shape=(1, 9000, 1)
logits [[ 2.521535  -2.913214   2.5215268 -4.5958095]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.4 " + "l1=11.4" + "l2=0 f=-0.758 shape=(1, 9000, 1)
logits [[ 4.3116555 -3.0796895  2.8742986 -7.1380143]]
Iteration 100 of 1000: loss=6.47 " + "l1=4.6" + "l2=1.87 f=-0.472 shape=(1, 9000, 1)
logits [[ 1.4645271 -2.5065844  1.875747  -2.7212417]]
Iteration 200 of 1000: loss=5.68 " + "l1=3.71" + "l2=1.96 f=-0.409 shape=(1, 9000, 1)
logits [[ 1.071505  -2.4175267  1.7122958 -2.0024934]]
Iteration 300 of 1000: loss=5.05 " + "l1=2.91" + "l2=2.14 f=-0.355 shape=(1, 9000, 1)
logits [[ 0.6451314 -2.3666022  1.6081564 -1.3047109]]
Iteration 400 of 1000: loss=4.32 " + "l1=2.12" + "l2=2.2 f=-0.317 shape=(1, 9000, 1)
logits [[ 0.2545505 -2.3277383  1.4648196 -0.6590938]]
Iteration 500 of 1000: loss=3.75 " + "l1=1.38" + "l2=2.37 f=-0.281 shape=(1, 9000, 1)
logits [[-0.06004233 -2.2440484   1.2810332  -0.10026493]]
Iteration 600 of 1000: loss=3.1 " + "l1=0.674" + "l2=2.43 f=-0.218 shape=(1, 9000, 1)
logits [[-0.21367544 -2.129579    1.0724812   0.39893803]]
Iteration 700 of 1000: loss=2.51 " + "l1=0.0357" + "l2=2.48 f=-0.156 shape=(1, 9000, 1)
logits [[-0.33645356 -1.9760667   0.86145353  0.8257141 ]]
Iteration 800 of 1000: loss=2.12 " + "l1=0.00163" + "l2=2.12 f=-0.153 shape=(1, 9000, 1)
logits [[-0.328517  -1.9943525  0.8554311  0.853805 ]]
Iteration 900 of 1000: loss=1.85 " + "l1=0.00965" + "l2=1.84 f=-0.15 shape=(1, 9000, 1)
logits [[-0.31142017 -2.0072339   0.86430216  0.8546507 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.3 " + "l1=6.3" + "l2=0 f=-0.758 shape=(1, 9000, 1)
logits [[ 4.3116555 -3.0796895  2.8742986 -7.1380143]]
Iteration 100 of 1000: loss=4.17 " + "l1=3.38" + "l2=0.787 f=-0.559 shape=(1, 9000, 1)
logits [[ 2.1693616 -2.651523   2.1958897 -3.9495862]]
Iteration 200 of 1000: loss=3.78 " + "l1=2.88" + "l2=0.896 f=-0.506 shape=(1, 9000, 1)
logits [[ 1.8060952 -2.5764081  1.9918362 -3.247221 ]]
Iteration 300 of 1000: loss=3.53 " + "l1=2.56" + "l2=0.969 f=-0.472 shape=(1, 9000, 1)
logits [[ 1.5355722 -2.5459104  1.8923544 -2.7706096]]
Iteration 400 of 1000: loss=3.36 " + "l1=2.35" + "l2=1.01 f=-0.442 shape=(1, 9000, 1)
logits [[ 1.3292089 -2.515342   1.8414961 -2.4235463]]
Iteration 500 of 1000: loss=3.12 " + "l1=2.05" + "l2=1.07 f=-0.403 shape=(1, 9000, 1)
logits [[ 1.0061932 -2.525244   1.8141768 -1.9073169]]
Iteration 600 of 1000: loss=2.83 " + "l1=1.76" + "l2=1.07 f=-0.379 shape=(1, 9000, 1)
logits [[ 0.71474135 -2.550524    1.761342   -1.440168  ]]
Iteration 700 of 1000: loss=2.57 " + "l1=1.46" + "l2=1.1 f=-0.341 shape=(1, 9000, 1)
logits [[ 0.5155829 -2.5244782  1.6538385 -1.0097134]]
Iteration 800 of 1000: loss=2.17 " + "l1=1.06" + "l2=1.11 f=-0.291 shape=(1, 9000, 1)
logits [[ 0.22534455 -2.5017283   1.5223855  -0.4086666 ]]
Iteration 900 of 1000: loss=1.59 " + "l1=0.469" + "l2=1.12 f=-0.193 shape=(1, 9000, 1)
logits [[-0.10087748 -2.32562     1.2547513   0.40169746]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=8.87 " + "l1=8.87" + "l2=0 f=-0.758 shape=(1, 9000, 1)
logits [[ 4.3116555 -3.0796895  2.8742986 -7.1380143]]
Iteration 100 of 1000: loss=5.4 " + "l1=4.09" + "l2=1.31 f=-0.51 shape=(1, 9000, 1)
logits [[ 1.7825744 -2.5729997  2.0167906 -3.2651181]]
Iteration 200 of 1000: loss=4.78 " + "l1=3.39" + "l2=1.39 f=-0.45 shape=(1, 9000, 1)
logits [[ 1.393716  -2.4871056  1.8306524 -2.5390122]]
Iteration 300 of 1000: loss=4.38 " + "l1=2.92" + "l2=1.46 f=-0.409 shape=(1, 9000, 1)
logits [[ 1.0914632 -2.465057   1.7520963 -2.0156913]]
Iteration 400 of 1000: loss=3.95 " + "l1=2.37" + "l2=1.58 f=-0.363 shape=(1, 9000, 1)
logits [[ 0.68772984 -2.4723547   1.6992942  -1.3650451 ]]
Iteration 500 of 1000: loss=3.54 " + "l1=1.88" + "l2=1.65 f=-0.337 shape=(1, 9000, 1)
logits [[ 0.3626376 -2.4512594  1.5855814 -0.8451091]]
Iteration 600 of 1000: loss=3.2 " + "l1=1.5" + "l2=1.71 f=-0.321 shape=(1, 9000, 1)
logits [[ 0.13311152 -2.4458477   1.4794801  -0.45214975]]
Iteration 700 of 1000: loss=2.93 " + "l1=1.22" + "l2=1.71 f=-0.313 shape=(1, 9000, 1)
logits [[ 0.00481448 -2.4292648   1.3770709  -0.20279795]]
Iteration 800 of 1000: loss=2.47 " + "l1=0.789" + "l2=1.68 f=-0.275 shape=(1, 9000, 1)
logits [[-0.21851715 -2.3088522   1.2219156   0.2035588 ]]
Iteration 900 of 1000: loss=2.14 " + "l1=0.534" + "l2=1.61 f=-0.262 shape=(1, 9000, 1)
logits [[-0.37544432 -2.2066655   1.1121868   0.4237681 ]]
--- 316.06837582588196 seconds ---
Adv result:3
Loading record A01019
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0612 " + "l1=0.0612" + "l2=0 f=-0.91 shape=(1, 9000, 1)
logits [[ 3.685499  -2.4332998  2.9413888 -7.831933 ]]
Iteration 100 of 1000: loss=0.0606 " + "l1=0.0601" + "l2=0.00047 f=-0.909 shape=(1, 9000, 1)
logits [[ 3.624524  -2.384073   2.9067242 -7.781703 ]]
Iteration 200 of 1000: loss=0.0604 " + "l1=0.0599" + "l2=0.000473 f=-0.909 shape=(1, 9000, 1)
logits [[ 3.6159732 -2.3772323  2.9015074 -7.7748427]]
Iteration 300 of 1000: loss=0.0603 " + "l1=0.0597" + "l2=0.000541 f=-0.909 shape=(1, 9000, 1)
logits [[ 3.605038  -2.368968   2.895589  -7.7661567]]
Iteration 400 of 1000: loss=0.0602 " + "l1=0.0595" + "l2=0.000627 f=-0.909 shape=(1, 9000, 1)
logits [[ 3.5936372 -2.3607364  2.8897178 -7.757236 ]]
Iteration 500 of 1000: loss=0.0601 " + "l1=0.0594" + "l2=0.00073 f=-0.909 shape=(1, 9000, 1)
logits [[ 3.582245  -2.3532007  2.8844068 -7.7485027]]
Iteration 600 of 1000: loss=0.06 " + "l1=0.0592" + "l2=0.000814 f=-0.909 shape=(1, 9000, 1)
logits [[ 3.5709558 -2.345513   2.8789983 -7.7399907]]
Iteration 700 of 1000: loss=0.0599 " + "l1=0.059" + "l2=0.000954 f=-0.909 shape=(1, 9000, 1)
logits [[ 3.5596144 -2.3383112  2.8739095 -7.731455 ]]
Iteration 800 of 1000: loss=0.0599 " + "l1=0.0588" + "l2=0.00106 f=-0.909 shape=(1, 9000, 1)
logits [[ 3.5481107 -2.33129    2.869035  -7.7229333]]
Iteration 900 of 1000: loss=0.0598 " + "l1=0.0586" + "l2=0.00119 f=-0.909 shape=(1, 9000, 1)
logits [[ 3.5365002 -2.3245986  2.8644369 -7.714318 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.612 " + "l1=0.612" + "l2=0 f=-0.91 shape=(1, 9000, 1)
logits [[ 3.685499  -2.4332998  2.9413888 -7.831933 ]]
Iteration 100 of 1000: loss=0.552 " + "l1=0.516" + "l2=0.0361 f=-0.9 shape=(1, 9000, 1)
logits [[ 3.1787179 -1.9798771  2.6414666 -7.4419765]]
Iteration 200 of 1000: loss=0.533 " + "l1=0.486" + "l2=0.0466 f=-0.894 shape=(1, 9000, 1)
logits [[ 3.0123458 -1.8470311  2.5562954 -7.298943 ]]
Iteration 300 of 1000: loss=0.515 " + "l1=0.461" + "l2=0.0537 f=-0.887 shape=(1, 9000, 1)
logits [[ 2.8725495 -1.7384653  2.4856427 -7.166416 ]]
Iteration 400 of 1000: loss=0.499 " + "l1=0.441" + "l2=0.0579 f=-0.881 shape=(1, 9000, 1)
logits [[ 2.7406137 -1.6661543  2.4246087 -7.022317 ]]
Iteration 500 of 1000: loss=0.485 " + "l1=0.426" + "l2=0.0597 f=-0.879 shape=(1, 9000, 1)
logits [[ 2.6340494 -1.6232067  2.3795404 -6.9043946]]
Iteration 600 of 1000: loss=0.47 " + "l1=0.407" + "l2=0.0634 f=-0.876 shape=(1, 9000, 1)
logits [[ 2.5090418 -1.5604969  2.3231573 -6.773915 ]]
Iteration 700 of 1000: loss=0.453 " + "l1=0.382" + "l2=0.0713 f=-0.868 shape=(1, 9000, 1)
logits [[ 2.3622026 -1.4592551  2.2508109 -6.625375 ]]
Iteration 800 of 1000: loss=0.436 " + "l1=0.36" + "l2=0.0762 f=-0.862 shape=(1, 9000, 1)
logits [[ 2.2225428 -1.3750794  2.1864326 -6.4801106]]
Iteration 900 of 1000: loss=0.419 " + "l1=0.342" + "l2=0.0774 f=-0.86 shape=(1, 9000, 1)
logits [[ 2.1168265 -1.296525   2.1186981 -6.37729  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.12 " + "l1=6.12" + "l2=0 f=-0.91 shape=(1, 9000, 1)
logits [[ 3.685499  -2.4332998  2.9413888 -7.831933 ]]
Iteration 100 of 1000: loss=2.61 " + "l1=1.34" + "l2=1.27 f=-0.802 shape=(1, 9000, 1)
logits [[ 1.3330909e+00  4.7078896e-03  1.3452280e+00 -5.8913956e+00]]
Iteration 200 of 1000: loss=2.02 " + "l1=0.762" + "l2=1.26 f=-0.842 shape=(1, 9000, 1)
logits [[ 1.1484883  0.3942837  1.1559414 -6.06524  ]]
Iteration 300 of 1000: loss=1.62 " + "l1=0.404" + "l2=1.22 f=-0.893 shape=(1, 9000, 1)
logits [[ 1.0596997   0.65761447  1.0620111  -6.350061  ]]
Iteration 400 of 1000: loss=1.35 " + "l1=0.191" + "l2=1.16 f=-0.911 shape=(1, 9000, 1)
logits [[ 0.976218    0.8027095   0.99412245 -6.4183426 ]]
Iteration 500 of 1000: loss=1.19 " + "l1=0.0738" + "l2=1.11 f=-0.929 shape=(1, 9000, 1)
logits [[ 0.9381876   0.88164175  0.955474   -6.4896054 ]]
Iteration 600 of 1000: loss=1.07 " + "l1=0.0296" + "l2=1.04 f=-0.938 shape=(1, 9000, 1)
logits [[ 0.91680557  0.89695805  0.9265483  -6.491953  ]]
Iteration 700 of 1000: loss=1.02 " + "l1=0.0399" + "l2=0.981 f=-0.939 shape=(1, 9000, 1)
logits [[ 0.9057703   0.86995333  0.9098408  -6.443487  ]]
Iteration 800 of 1000: loss=0.982 " + "l1=0" + "l2=0.982 f=-0.942 shape=(1, 9000, 1)
logits [[ 0.8671746  0.8884114  0.8883464 -6.4115543]]
Iteration 900 of 1000: loss=0.957 " + "l1=0.00546" + "l2=0.951 f=-0.944 shape=(1, 9000, 1)
logits [[ 0.84467864  0.8741648   0.8796238  -6.375212  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.37 " + "l1=3.37" + "l2=0 f=-0.91 shape=(1, 9000, 1)
logits [[ 3.685499  -2.4332998  2.9413888 -7.831933 ]]
Iteration 100 of 1000: loss=1.94 " + "l1=1.31" + "l2=0.63 f=-0.825 shape=(1, 9000, 1)
logits [[ 1.7698333 -0.615499   1.7694949 -6.225026 ]]
Iteration 200 of 1000: loss=1.62 " + "l1=0.977" + "l2=0.646 f=-0.824 shape=(1, 9000, 1)
logits [[ 1.4882679  -0.28371444  1.4919938  -5.993415  ]]
Iteration 300 of 1000: loss=1.41 " + "l1=0.778" + "l2=0.636 f=-0.831 shape=(1, 9000, 1)
logits [[ 1.3380884  -0.07620982  1.3317611  -5.9166403 ]]
Iteration 400 of 1000: loss=1.22 " + "l1=0.585" + "l2=0.635 f=-0.857 shape=(1, 9000, 1)
logits [[ 1.1925504  0.1406285  1.203675  -5.9643607]]
Iteration 500 of 1000: loss=1.1 " + "l1=0.48" + "l2=0.617 f=-0.878 shape=(1, 9000, 1)
logits [[ 1.1480596  0.275687   1.1445066 -6.079007 ]]
Iteration 600 of 1000: loss=1.02 " + "l1=0.421" + "l2=0.602 f=-0.887 shape=(1, 9000, 1)
logits [[ 1.0957355   0.34140518  1.1072868  -6.0913706 ]]
Iteration 700 of 1000: loss=0.963 " + "l1=0.371" + "l2=0.592 f=-0.897 shape=(1, 9000, 1)
logits [[ 1.0609045   0.39978775  1.0740001  -6.1226873 ]]
Iteration 800 of 1000: loss=0.922 " + "l1=0.336" + "l2=0.587 f=-0.905 shape=(1, 9000, 1)
logits [[ 1.0465083   0.43947563  1.0495313  -6.1548553 ]]
Iteration 900 of 1000: loss=0.882 " + "l1=0.307" + "l2=0.575 f=-0.909 shape=(1, 9000, 1)
logits [[ 1.0147293   0.47492513  1.0336901  -6.159158  ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.74 " + "l1=4.74" + "l2=0 f=-0.91 shape=(1, 9000, 1)
logits [[ 3.685499  -2.4332998  2.9413888 -7.831933 ]]
Iteration 100 of 1000: loss=2.33 " + "l1=1.38" + "l2=0.948 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.5237335  -0.26203153  1.5178148  -6.0230527 ]]
Iteration 200 of 1000: loss=1.9 " + "l1=0.943" + "l2=0.952 f=-0.82 shape=(1, 9000, 1)
logits [[ 1.2771595   0.07174737  1.2886466  -5.9164305 ]]
Iteration 300 of 1000: loss=1.54 " + "l1=0.63" + "l2=0.915 f=-0.868 shape=(1, 9000, 1)
logits [[ 1.1717983   0.35952652  1.1714803  -6.1763983 ]]
Iteration 400 of 1000: loss=1.3 " + "l1=0.425" + "l2=0.875 f=-0.885 shape=(1, 9000, 1)
logits [[ 1.0551136   0.54682404  1.0952866  -6.2354918 ]]
Iteration 500 of 1000: loss=1.15 " + "l1=0.297" + "l2=0.856 f=-0.897 shape=(1, 9000, 1)
logits [[ 1.0290335   0.64584386  1.0248662  -6.287803  ]]
Iteration 600 of 1000: loss=1.07 " + "l1=0.218" + "l2=0.854 f=-0.906 shape=(1, 9000, 1)
logits [[ 0.9870584   0.70545536  0.982449   -6.2999783 ]]
Iteration 700 of 1000: loss=1.01 " + "l1=0.152" + "l2=0.857 f=-0.915 shape=(1, 9000, 1)
logits [[ 0.9439802  0.7507359  0.9464961 -6.299739 ]]
Iteration 800 of 1000: loss=0.968 " + "l1=0.128" + "l2=0.839 f=-0.917 shape=(1, 9000, 1)
logits [[ 0.9108141   0.7591736   0.92463374 -6.2645907 ]]
Iteration 900 of 1000: loss=0.931 " + "l1=0.12" + "l2=0.811 f=-0.913 shape=(1, 9000, 1)
logits [[ 0.91539705  0.764046    0.91951853 -6.250731  ]]
--- 329.70617938041687 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00744 " + "l1=0.00744" + "l2=0 f=-0.91 shape=(1, 9000, 1)
logits [[ 3.685499  -2.4332998  2.9413888 -7.831933 ]]
Iteration 100 of 1000: loss=0.00717 " + "l1=0.00696" + "l2=0.000219 f=-0.909 shape=(1, 9000, 1)
logits [[ 3.6485693 -2.4415872  2.9530087 -7.79723  ]]
Iteration 200 of 1000: loss=0.00709 " + "l1=0.00691" + "l2=0.000187 f=-0.909 shape=(1, 9000, 1)
logits [[ 3.644875  -2.4425204  2.9543183 -7.793659 ]]
Iteration 300 of 1000: loss=0.00704 " + "l1=0.00681" + "l2=0.000234 f=-0.909 shape=(1, 9000, 1)
logits [[ 3.6378992 -2.4441147  2.956783  -7.7871146]]
Iteration 400 of 1000: loss=0.00698 " + "l1=0.00671" + "l2=0.000273 f=-0.909 shape=(1, 9000, 1)
logits [[ 3.6303306 -2.4456563  2.95957   -7.780235 ]]
Iteration 500 of 1000: loss=0.00691 " + "l1=0.0066" + "l2=0.000312 f=-0.909 shape=(1, 9000, 1)
logits [[ 3.6222563 -2.4470882  2.9624653 -7.7730145]]
Iteration 600 of 1000: loss=0.00688 " + "l1=0.00649" + "l2=0.000398 f=-0.909 shape=(1, 9000, 1)
logits [[ 3.6141603 -2.448493   2.9654682 -7.7658644]]
Iteration 700 of 1000: loss=0.00683 " + "l1=0.00637" + "l2=0.000456 f=-0.909 shape=(1, 9000, 1)
logits [[ 3.6060553 -2.4499986  2.9686651 -7.758753 ]]
Iteration 800 of 1000: loss=0.00694 " + "l1=0.00626" + "l2=0.000685 f=-0.908 shape=(1, 9000, 1)
logits [[ 3.5977273 -2.4513962  2.9718862 -7.7515106]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0744 " + "l1=0.0744" + "l2=0 f=-0.91 shape=(1, 9000, 1)
logits [[ 3.685499  -2.4332998  2.9413888 -7.831933 ]]
Iteration 100 of 1000: loss=0.0519 " + "l1=0.04" + "l2=0.0119 f=-0.906 shape=(1, 9000, 1)
logits [[ 3.4249344 -2.4912274  3.0253925 -7.5839376]]
Iteration 200 of 1000: loss=0.042 " + "l1=0.0264" + "l2=0.0155 f=-0.903 shape=(1, 9000, 1)
logits [[ 3.324194  -2.5127351  3.059873  -7.485022 ]]
Iteration 300 of 1000: loss=0.0328 " + "l1=0.0151" + "l2=0.0177 f=-0.901 shape=(1, 9000, 1)
logits [[ 3.241939  -2.5305634  3.0907352 -7.404357 ]]
Iteration 400 of 1000: loss=0.0239 " + "l1=0.00466" + "l2=0.0192 f=-0.896 shape=(1, 9000, 1)
logits [[ 3.167354  -2.5434175  3.1207724 -7.3272643]]
Iteration 500 of 1000: loss=0.0166 " + "l1=0.000761" + "l2=0.0159 f=-0.893 shape=(1, 9000, 1)
logits [[ 3.1399975 -2.5461588  3.1323853 -7.29836  ]]
Iteration 600 of 1000: loss=0.0128 " + "l1=0.000141" + "l2=0.0126 f=-0.892 shape=(1, 9000, 1)
logits [[ 3.1386662 -2.547583   3.1372519 -7.2958   ]]
Iteration 700 of 1000: loss=0.0102 " + "l1=0" + "l2=0.0102 f=-0.89 shape=(1, 9000, 1)
logits [[ 3.136367  -2.5454836  3.1401563 -7.292301 ]]
Iteration 800 of 1000: loss=0.0084 " + "l1=5.95e-05" + "l2=0.00834 f=-0.889 shape=(1, 9000, 1)
logits [[ 3.1398106 -2.5407076  3.1392155 -7.293555 ]]
Iteration 900 of 1000: loss=0.00746 " + "l1=0.000132" + "l2=0.00732 f=-0.887 shape=(1, 9000, 1)
logits [[ 3.139781  -2.5369008  3.138465  -7.2908945]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0409 " + "l1=0.0409" + "l2=0 f=-0.91 shape=(1, 9000, 1)
logits [[ 3.685499  -2.4332998  2.9413888 -7.831933 ]]
Iteration 100 of 1000: loss=0.0339 " + "l1=0.0301" + "l2=0.00377 f=-0.908 shape=(1, 9000, 1)
logits [[ 3.5370016 -2.466622   2.9899416 -7.690806 ]]
Iteration 200 of 1000: loss=0.031 " + "l1=0.0264" + "l2=0.00467 f=-0.906 shape=(1, 9000, 1)
logits [[ 3.4865842 -2.4785633  3.0072458 -7.641162 ]]
Iteration 300 of 1000: loss=0.0282 " + "l1=0.0226" + "l2=0.00554 f=-0.905 shape=(1, 9000, 1)
logits [[ 3.43607   -2.4903839  3.0250297 -7.590926 ]]
Iteration 400 of 1000: loss=0.0253 " + "l1=0.019" + "l2=0.00636 f=-0.904 shape=(1, 9000, 1)
logits [[ 3.3879278 -2.501375   3.0431957 -7.5444064]]
Iteration 500 of 1000: loss=0.0225 " + "l1=0.0154" + "l2=0.00707 f=-0.902 shape=(1, 9000, 1)
logits [[ 3.3420243 -2.5110247  3.061688  -7.500014 ]]
Iteration 600 of 1000: loss=0.0199 " + "l1=0.0121" + "l2=0.00777 f=-0.9 shape=(1, 9000, 1)
logits [[ 3.298025  -2.5188806  3.0781188 -7.4587007]]
Iteration 700 of 1000: loss=0.0172 " + "l1=0.00887" + "l2=0.00834 f=-0.899 shape=(1, 9000, 1)
logits [[ 3.255725  -2.5264742  3.0944269 -7.4184685]]
Iteration 800 of 1000: loss=0.0146 " + "l1=0.00561" + "l2=0.00903 f=-0.896 shape=(1, 9000, 1)
logits [[ 3.2123294 -2.533369   3.1102483 -7.3746386]]
Iteration 900 of 1000: loss=0.0119 " + "l1=0.00227" + "l2=0.00966 f=-0.894 shape=(1, 9000, 1)
logits [[ 3.1688173 -2.542114   3.1275785 -7.3284535]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0242 " + "l1=0.0242" + "l2=0 f=-0.91 shape=(1, 9000, 1)
logits [[ 3.685499  -2.4332998  2.9413888 -7.831933 ]]
Iteration 100 of 1000: loss=0.0216 " + "l1=0.0202" + "l2=0.00144 f=-0.908 shape=(1, 9000, 1)
logits [[ 3.5919428 -2.4539666  2.9713535 -7.7432966]]
Iteration 200 of 1000: loss=0.0207 " + "l1=0.0191" + "l2=0.00167 f=-0.908 shape=(1, 9000, 1)
logits [[ 3.566479  -2.460113   2.9802697 -7.7183294]]
Iteration 300 of 1000: loss=0.0198 " + "l1=0.0178" + "l2=0.00197 f=-0.907 shape=(1, 9000, 1)
logits [[ 3.5386496 -2.4668684  2.9904485 -7.6917043]]
Iteration 400 of 1000: loss=0.0188 " + "l1=0.0166" + "l2=0.00229 f=-0.907 shape=(1, 9000, 1)
logits [[ 3.5104632 -2.4734538  3.0009034 -7.6646514]]
Iteration 500 of 1000: loss=0.0179 " + "l1=0.0153" + "l2=0.0026 f=-0.906 shape=(1, 9000, 1)
logits [[ 3.4811041 -2.4795716  3.0114958 -7.6361423]]
Iteration 600 of 1000: loss=0.017 " + "l1=0.014" + "l2=0.00296 f=-0.905 shape=(1, 9000, 1)
logits [[ 3.453     -2.4853325  3.0221436 -7.608965 ]]
Iteration 700 of 1000: loss=0.0159 " + "l1=0.0128" + "l2=0.00317 f=-0.904 shape=(1, 9000, 1)
logits [[ 3.4255164 -2.4907079  3.0326178 -7.582537 ]]
Iteration 800 of 1000: loss=0.0151 " + "l1=0.0115" + "l2=0.00358 f=-0.903 shape=(1, 9000, 1)
logits [[ 3.3989627 -2.496294   3.043747  -7.5572553]]
Iteration 900 of 1000: loss=0.0142 " + "l1=0.0104" + "l2=0.00379 f=-0.902 shape=(1, 9000, 1)
logits [[ 3.3740275 -2.5011115  3.053836  -7.533238 ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0326 " + "l1=0.0326" + "l2=0 f=-0.91 shape=(1, 9000, 1)
logits [[ 3.685499  -2.4332998  2.9413888 -7.831933 ]]
Iteration 100 of 1000: loss=0.028 " + "l1=0.0255" + "l2=0.00247 f=-0.908 shape=(1, 9000, 1)
logits [[ 3.5644908 -2.4601712  2.9806893 -7.71701  ]]
Iteration 200 of 1000: loss=0.0263 " + "l1=0.0233" + "l2=0.00299 f=-0.907 shape=(1, 9000, 1)
logits [[ 3.5268297 -2.469625   2.9937458 -7.680158 ]]
Iteration 300 of 1000: loss=0.0245 " + "l1=0.021" + "l2=0.00356 f=-0.906 shape=(1, 9000, 1)
logits [[ 3.4869719 -2.4790626  3.0076632 -7.641199 ]]
Iteration 400 of 1000: loss=0.0228 " + "l1=0.0186" + "l2=0.00413 f=-0.905 shape=(1, 9000, 1)
logits [[ 3.4474025 -2.4876683  3.0215702 -7.60232  ]]
Iteration 500 of 1000: loss=0.021 " + "l1=0.0164" + "l2=0.00461 f=-0.904 shape=(1, 9000, 1)
logits [[ 3.410176  -2.4953907  3.0354843 -7.565868 ]]
Iteration 600 of 1000: loss=0.0193 " + "l1=0.0141" + "l2=0.00514 f=-0.903 shape=(1, 9000, 1)
logits [[ 3.3739603 -2.5036569  3.0506196 -7.531529 ]]
Iteration 700 of 1000: loss=0.0176 " + "l1=0.012" + "l2=0.00551 f=-0.901 shape=(1, 9000, 1)
logits [[ 3.339587  -2.5101483  3.0642605 -7.4987493]]
Iteration 800 of 1000: loss=0.0159 " + "l1=0.00998" + "l2=0.00592 f=-0.9 shape=(1, 9000, 1)
logits [[ 3.3051567 -2.5160475  3.0770366 -7.465944 ]]
Iteration 900 of 1000: loss=0.0144 " + "l1=0.00805" + "l2=0.00635 f=-0.899 shape=(1, 9000, 1)
logits [[ 3.2730715 -2.5215416  3.0891354 -7.435365 ]]
--- 318.38669514656067 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.115 " + "l1=0.115" + "l2=0 f=-0.91 shape=(1, 9000, 1)
logits [[ 3.685499  -2.4332998  2.9413888 -7.831933 ]]
Iteration 100 of 1000: loss=0.114 " + "l1=0.113" + "l2=0.000741 f=-0.903 shape=(1, 9000, 1)
logits [[ 3.6022887 -2.4160755  2.9177558 -7.7150745]]
Iteration 200 of 1000: loss=0.114 " + "l1=0.113" + "l2=0.000829 f=-0.901 shape=(1, 9000, 1)
logits [[ 3.5833254 -2.4140987  2.9125924 -7.684892 ]]
Iteration 300 of 1000: loss=0.113 " + "l1=0.112" + "l2=0.00101 f=-0.898 shape=(1, 9000, 1)
logits [[ 3.5620918 -2.4124722  2.906895  -7.649844 ]]
Iteration 400 of 1000: loss=0.113 " + "l1=0.112" + "l2=0.00118 f=-0.896 shape=(1, 9000, 1)
logits [[ 3.540665  -2.4114213  2.9016774 -7.6141133]]
Iteration 500 of 1000: loss=0.112 " + "l1=0.111" + "l2=0.00137 f=-0.893 shape=(1, 9000, 1)
logits [[ 3.5198612 -2.4104323  2.8967361 -7.579163 ]]
Iteration 600 of 1000: loss=0.112 " + "l1=0.11" + "l2=0.00157 f=-0.891 shape=(1, 9000, 1)
logits [[ 3.4989018 -2.40937    2.8920102 -7.5438766]]
Iteration 700 of 1000: loss=0.112 " + "l1=0.11" + "l2=0.00177 f=-0.888 shape=(1, 9000, 1)
logits [[ 3.4772916 -2.408246   2.8872964 -7.507928 ]]
Iteration 800 of 1000: loss=0.111 " + "l1=0.109" + "l2=0.00195 f=-0.885 shape=(1, 9000, 1)
logits [[ 3.4562223 -2.4071085  2.8826537 -7.4725785]]
Iteration 900 of 1000: loss=0.111 " + "l1=0.109" + "l2=0.0022 f=-0.882 shape=(1, 9000, 1)
logits [[ 3.4357476 -2.4065278  2.8786137 -7.4376636]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.15 " + "l1=1.15" + "l2=0 f=-0.91 shape=(1, 9000, 1)
logits [[ 3.685499  -2.4332998  2.9413888 -7.831933 ]]
Iteration 100 of 1000: loss=1.03 " + "l1=0.97" + "l2=0.0643 f=-0.836 shape=(1, 9000, 1)
logits [[ 2.9419136 -2.2333214  2.7037861 -6.7546835]]
Iteration 200 of 1000: loss=0.977 " + "l1=0.897" + "l2=0.0796 f=-0.798 shape=(1, 9000, 1)
logits [[ 2.6761024 -2.1835084  2.6088905 -6.2934966]]
Iteration 300 of 1000: loss=0.92 " + "l1=0.837" + "l2=0.083 f=-0.761 shape=(1, 9000, 1)
logits [[ 2.4784012 -2.1092622  2.4770045 -5.888584 ]]
Iteration 400 of 1000: loss=0.879 " + "l1=0.792" + "l2=0.0864 f=-0.72 shape=(1, 9000, 1)
logits [[ 2.3626323 -2.0515633  2.3652015 -5.558059 ]]
Iteration 500 of 1000: loss=0.841 " + "l1=0.747" + "l2=0.0933 f=-0.671 shape=(1, 9000, 1)
logits [[ 2.2570696 -1.9877197  2.260112  -5.2140527]]
Iteration 600 of 1000: loss=0.8 " + "l1=0.699" + "l2=0.101 f=-0.617 shape=(1, 9000, 1)
logits [[ 2.1489217 -1.9256821  2.150724  -4.842008 ]]
Iteration 700 of 1000: loss=0.762 " + "l1=0.653" + "l2=0.109 f=-0.574 shape=(1, 9000, 1)
logits [[ 2.0140338 -1.8488599  2.0354621 -4.4959397]]
Iteration 800 of 1000: loss=0.725 " + "l1=0.608" + "l2=0.117 f=-0.535 shape=(1, 9000, 1)
logits [[ 1.865805  -1.783872   1.9287173 -4.151822 ]]
Iteration 900 of 1000: loss=0.696 " + "l1=0.57" + "l2=0.126 f=-0.509 shape=(1, 9000, 1)
logits [[ 1.7243147 -1.7385252  1.8391945 -3.8607147]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.5 " + "l1=11.5" + "l2=0 f=-0.91 shape=(1, 9000, 1)
logits [[ 3.685499  -2.4332998  2.9413888 -7.831933 ]]
Iteration 100 of 1000: loss=5.36 " + "l1=2.85" + "l2=2.51 f=-0.375 shape=(1, 9000, 1)
logits [[ 0.0701042 -0.8095975  1.0434747 -1.8031284]]
Iteration 200 of 1000: loss=3.43 " + "l1=0.816" + "l2=2.61 f=-0.258 shape=(1, 9000, 1)
logits [[-0.57619363 -0.7301126   0.5441608  -0.2713431 ]]
Iteration 300 of 1000: loss=2.35 " + "l1=0.0456" + "l2=2.3 f=-0.21 shape=(1, 9000, 1)
logits [[-0.768634   -0.69782394  0.33586147  0.2902785 ]]
Iteration 400 of 1000: loss=1.79 " + "l1=0.0269" + "l2=1.77 f=-0.195 shape=(1, 9000, 1)
logits [[-0.6465038  -0.73117125  0.31215745  0.28523195]]
Iteration 500 of 1000: loss=1.42 " + "l1=0" + "l2=1.42 f=-0.193 shape=(1, 9000, 1)
logits [[-0.6243168  -0.76287216  0.30640087  0.30889443]]
Iteration 600 of 1000: loss=1.23 " + "l1=0" + "l2=1.23 f=-0.203 shape=(1, 9000, 1)
logits [[-0.6367134  -0.7921603   0.28819126  0.33057782]]
Iteration 700 of 1000: loss=1.08 " + "l1=0" + "l2=1.08 f=-0.21 shape=(1, 9000, 1)
logits [[-0.6237986  -0.8231971   0.29466847  0.31336892]]
Iteration 800 of 1000: loss=0.98 " + "l1=0" + "l2=0.98 f=-0.213 shape=(1, 9000, 1)
logits [[-0.6147693  -0.8493279   0.30317473  0.3103449 ]]
Iteration 900 of 1000: loss=0.91 " + "l1=0.00481" + "l2=0.906 f=-0.208 shape=(1, 9000, 1)
logits [[-0.59994066 -0.87716144  0.3246487   0.31983614]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.33 " + "l1=6.33" + "l2=0 f=-0.91 shape=(1, 9000, 1)
logits [[ 3.685499  -2.4332998  2.9413888 -7.831933 ]]
Iteration 100 of 1000: loss=3.93 " + "l1=2.98" + "l2=0.954 f=-0.537 shape=(1, 9000, 1)
logits [[ 1.3649948 -1.2943944  1.5989354 -3.8193886]]
Iteration 200 of 1000: loss=2.99 " + "l1=1.81" + "l2=1.19 f=-0.372 shape=(1, 9000, 1)
logits [[ 0.5841975 -1.0329726  1.1241025 -2.1616154]]
Iteration 300 of 1000: loss=2.27 " + "l1=0.999" + "l2=1.27 f=-0.273 shape=(1, 9000, 1)
logits [[ 0.06082749 -0.8426317   0.7526925  -1.0640616 ]]
Iteration 400 of 1000: loss=1.62 " + "l1=0.382" + "l2=1.24 f=-0.183 shape=(1, 9000, 1)
logits [[-0.26732123 -0.74235356  0.48740822 -0.20790529]]
Iteration 500 of 1000: loss=1.12 " + "l1=0.00103" + "l2=1.12 f=-0.167 shape=(1, 9000, 1)
logits [[-0.5562793  -0.72719085  0.3088795   0.3070151 ]]
Iteration 600 of 1000: loss=0.918 " + "l1=0.00456" + "l2=0.914 f=-0.174 shape=(1, 9000, 1)
logits [[-0.5740833  -0.7793751   0.33335346  0.32506874]]
Iteration 700 of 1000: loss=0.805 " + "l1=0.00383" + "l2=0.801 f=-0.18 shape=(1, 9000, 1)
logits [[-0.5993593  -0.82439274  0.3555837   0.34861675]]
Iteration 800 of 1000: loss=0.721 " + "l1=0" + "l2=0.721 f=-0.189 shape=(1, 9000, 1)
logits [[-0.6226055  -0.86139745  0.36279497  0.3644735 ]]
Iteration 900 of 1000: loss=0.652 " + "l1=2.38e-05" + "l2=0.652 f=-0.203 shape=(1, 9000, 1)
logits [[-0.64515793 -0.87038296  0.3508619   0.35081872]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.74 " + "l1=3.74" + "l2=0 f=-0.91 shape=(1, 9000, 1)
logits [[ 3.685499  -2.4332998  2.9413888 -7.831933 ]]
Iteration 100 of 1000: loss=2.72 " + "l1=2.3" + "l2=0.423 f=-0.668 shape=(1, 9000, 1)
logits [[ 2.0258007 -1.7142042  2.0405731 -5.023974 ]]
Iteration 200 of 1000: loss=2.33 " + "l1=1.83" + "l2=0.5 f=-0.555 shape=(1, 9000, 1)
logits [[ 1.5530986 -1.4985936  1.6754133 -3.9516385]]
Iteration 300 of 1000: loss=1.98 " + "l1=1.39" + "l2=0.59 f=-0.441 shape=(1, 9000, 1)
logits [[ 1.0660807 -1.3048203  1.3755195 -2.9021451]]
Iteration 400 of 1000: loss=1.65 " + "l1=0.997" + "l2=0.654 f=-0.35 shape=(1, 9000, 1)
logits [[ 0.6462484 -1.1256518  1.0737809 -1.9940984]]
Iteration 500 of 1000: loss=1.35 " + "l1=0.648" + "l2=0.704 f=-0.292 shape=(1, 9000, 1)
logits [[ 0.1902745  -1.0420538   0.83913594 -1.1556958 ]]
Iteration 600 of 1000: loss=1.11 " + "l1=0.37" + "l2=0.737 f=-0.245 shape=(1, 9000, 1)
logits [[-0.16335121 -0.9812521   0.6520542  -0.48721525]]
Iteration 700 of 1000: loss=0.908 " + "l1=0.138" + "l2=0.77 f=-0.227 shape=(1, 9000, 1)
logits [[-0.50733656 -0.93528783  0.47985893  0.05518421]]
Iteration 800 of 1000: loss=0.762 " + "l1=0.0166" + "l2=0.745 f=-0.214 shape=(1, 9000, 1)
logits [[-0.67782146 -0.93884885  0.40671784  0.3555749 ]]
Iteration 900 of 1000: loss=0.674 " + "l1=0.00418" + "l2=0.67 f=-0.221 shape=(1, 9000, 1)
logits [[-0.71496373 -0.9618308   0.40349618  0.39062458]]
--- 331.84568095207214 seconds ---
Adv result:3
Loading record A01029
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0211 " + "l1=0.0211" + "l2=0 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.80631375 -1.3078449   0.2931156  -1.4107146 ]]
Iteration 100 of 1000: loss=0.0202 " + "l1=0.0195" + "l2=0.000691 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.7099681 -1.24041    0.2821397 -1.3717055]]
Iteration 200 of 1000: loss=0.02 " + "l1=0.0192" + "l2=0.000769 f=-0.406 shape=(1, 9000, 1)
logits [[ 0.6925967  -1.2282335   0.27915207 -1.365957  ]]
Iteration 300 of 1000: loss=0.0198 " + "l1=0.0189" + "l2=0.000873 f=-0.406 shape=(1, 9000, 1)
logits [[ 0.6762891  -1.2176667   0.27688402 -1.3587509 ]]
Iteration 400 of 1000: loss=0.0197 " + "l1=0.0187" + "l2=0.000977 f=-0.406 shape=(1, 9000, 1)
logits [[ 0.66067696 -1.2075498   0.27508694 -1.3525722 ]]
Iteration 500 of 1000: loss=0.0195 " + "l1=0.0184" + "l2=0.00111 f=-0.406 shape=(1, 9000, 1)
logits [[ 0.64531267 -1.197935    0.27354768 -1.3467923 ]]
Iteration 600 of 1000: loss=0.0195 " + "l1=0.0182" + "l2=0.0013 f=-0.407 shape=(1, 9000, 1)
logits [[ 0.6307563 -1.1890681  0.2723597 -1.3414519]]
Iteration 700 of 1000: loss=0.0194 " + "l1=0.018" + "l2=0.0014 f=-0.407 shape=(1, 9000, 1)
logits [[ 0.61785185 -1.181395    0.27126884 -1.3366064 ]]
Iteration 800 of 1000: loss=0.0193 " + "l1=0.0178" + "l2=0.0015 f=-0.408 shape=(1, 9000, 1)
logits [[ 0.6079545 -1.1756649  0.2695657 -1.3326262]]
Iteration 900 of 1000: loss=0.0193 " + "l1=0.0176" + "l2=0.00164 f=-0.408 shape=(1, 9000, 1)
logits [[ 0.5952935  -1.1686825   0.26793852 -1.3283157 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.211 " + "l1=0.211" + "l2=0 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.80631375 -1.3078449   0.2931156  -1.4107146 ]]
Iteration 100 of 1000: loss=0.137 " + "l1=0.103" + "l2=0.0338 f=-0.412 shape=(1, 9000, 1)
logits [[ 0.17786157 -0.85309625  0.1739827  -1.1453553 ]]
Iteration 200 of 1000: loss=0.124 " + "l1=0.0886" + "l2=0.0355 f=-0.411 shape=(1, 9000, 1)
logits [[ 0.10281091 -0.77836806  0.10724265 -1.0773953 ]]
Iteration 300 of 1000: loss=0.112 " + "l1=0.077" + "l2=0.0355 f=-0.413 shape=(1, 9000, 1)
logits [[ 0.04542714 -0.72414476  0.04393362 -1.0155455 ]]
Iteration 400 of 1000: loss=0.1 " + "l1=0.0637" + "l2=0.0366 f=-0.418 shape=(1, 9000, 1)
logits [[-0.02847804 -0.6624282  -0.02579493 -0.9537132 ]]
Iteration 500 of 1000: loss=0.0902 " + "l1=0.0513" + "l2=0.0389 f=-0.421 shape=(1, 9000, 1)
logits [[-0.10227682 -0.6049601  -0.09173912 -0.8850295 ]]
Iteration 600 of 1000: loss=0.0793 " + "l1=0.0355" + "l2=0.0438 f=-0.418 shape=(1, 9000, 1)
logits [[-0.174838   -0.52408475 -0.16893499 -0.80334896]]
Iteration 700 of 1000: loss=0.0707 " + "l1=0.0256" + "l2=0.0451 f=-0.42 shape=(1, 9000, 1)
logits [[-0.23040473 -0.4736368  -0.21788372 -0.7580482 ]]
Iteration 800 of 1000: loss=0.064 " + "l1=0.0168" + "l2=0.0472 f=-0.422 shape=(1, 9000, 1)
logits [[-0.28353104 -0.4269535  -0.25908807 -0.71943396]]
Iteration 900 of 1000: loss=0.0583 " + "l1=0.00787" + "l2=0.0505 f=-0.425 shape=(1, 9000, 1)
logits [[-0.33439115 -0.37299728 -0.2942912  -0.69634306]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.11 " + "l1=2.11" + "l2=0 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.80631375 -1.3078449   0.2931156  -1.4107146 ]]
Iteration 100 of 1000: loss=0.211 " + "l1=0" + "l2=0.211 f=-0.429 shape=(1, 9000, 1)
logits [[-0.40630925 -0.3314044  -0.334714   -0.6451381 ]]
Iteration 200 of 1000: loss=0.156 " + "l1=0" + "l2=0.156 f=-0.416 shape=(1, 9000, 1)
logits [[-0.4007233  -0.28270185 -0.28491533 -0.6972057 ]]
Iteration 300 of 1000: loss=0.127 " + "l1=0" + "l2=0.127 f=-0.411 shape=(1, 9000, 1)
logits [[-0.32990035 -0.29728565 -0.31379464 -0.704754  ]]
Iteration 400 of 1000: loss=0.111 " + "l1=0" + "l2=0.111 f=-0.404 shape=(1, 9000, 1)
logits [[-0.31895107 -0.29229844 -0.31475082 -0.69148886]]
Iteration 500 of 1000: loss=0.103 " + "l1=0.00749" + "l2=0.0952 f=-0.391 shape=(1, 9000, 1)
logits [[-0.33695057 -0.27691317 -0.26942614 -0.67975014]]
Iteration 600 of 1000: loss=0.0951 " + "l1=0" + "l2=0.0951 f=-0.385 shape=(1, 9000, 1)
logits [[-0.38088283 -0.23303437 -0.2738867  -0.6527781 ]]
Iteration 700 of 1000: loss=0.0899 " + "l1=0.00928" + "l2=0.0807 f=-0.38 shape=(1, 9000, 1)
logits [[-0.3632218  -0.25053984 -0.24126227 -0.663861  ]]
Iteration 800 of 1000: loss=0.0853 " + "l1=0" + "l2=0.0853 f=-0.38 shape=(1, 9000, 1)
logits [[-0.41864303 -0.20298676 -0.25719342 -0.6419285 ]]
Iteration 900 of 1000: loss=0.0733 " + "l1=0" + "l2=0.0733 f=-0.383 shape=(1, 9000, 1)
logits [[-0.3691825  -0.24199815 -0.2817131  -0.6394271 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.16 " + "l1=1.16" + "l2=0 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.80631375 -1.3078449   0.2931156  -1.4107146 ]]
Iteration 100 of 1000: loss=0.197 " + "l1=0.00351" + "l2=0.194 f=-0.43 shape=(1, 9000, 1)
logits [[-0.3437859  -0.3453573  -0.33896878 -0.6924275 ]]
Iteration 200 of 1000: loss=0.139 " + "l1=0.0033" + "l2=0.135 f=-0.416 shape=(1, 9000, 1)
logits [[-0.31709284 -0.31796396 -0.31196743 -0.71626115]]
Iteration 300 of 1000: loss=0.113 " + "l1=0.00161" + "l2=0.111 f=-0.407 shape=(1, 9000, 1)
logits [[-0.3065442  -0.30946606 -0.31738296 -0.6964468 ]]
Iteration 400 of 1000: loss=0.0983 " + "l1=0" + "l2=0.0983 f=-0.395 shape=(1, 9000, 1)
logits [[-0.3736499  -0.25860944 -0.26919243 -0.6801138 ]]
Iteration 500 of 1000: loss=0.084 " + "l1=0" + "l2=0.084 f=-0.395 shape=(1, 9000, 1)
logits [[-0.30713472 -0.29647    -0.29891104 -0.6765866 ]]
Iteration 600 of 1000: loss=0.0778 " + "l1=0" + "l2=0.0778 f=-0.393 shape=(1, 9000, 1)
logits [[-0.33065954 -0.2783151  -0.29136398 -0.6711605 ]]
Iteration 700 of 1000: loss=0.0709 " + "l1=0" + "l2=0.0709 f=-0.389 shape=(1, 9000, 1)
logits [[-0.3840121  -0.25000346 -0.25180122 -0.66889787]]
Iteration 800 of 1000: loss=0.065 " + "l1=0" + "l2=0.065 f=-0.396 shape=(1, 9000, 1)
logits [[-0.33067736 -0.2906243  -0.30870998 -0.6556406 ]]
Iteration 900 of 1000: loss=0.0579 " + "l1=0.000597" + "l2=0.0574 f=-0.398 shape=(1, 9000, 1)
logits [[-0.32195157 -0.31056613 -0.3094804  -0.64921814]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.687 " + "l1=0.687" + "l2=0 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.80631375 -1.3078449   0.2931156  -1.4107146 ]]
Iteration 100 of 1000: loss=0.229 " + "l1=0.0648" + "l2=0.164 f=-0.427 shape=(1, 9000, 1)
logits [[-0.28511313 -0.4300465  -0.23065023 -0.76293457]]
Iteration 200 of 1000: loss=0.134 " + "l1=0.00422" + "l2=0.13 f=-0.415 shape=(1, 9000, 1)
logits [[-0.32551038 -0.32059222 -0.30760655 -0.70669866]]
Iteration 300 of 1000: loss=0.104 " + "l1=0.0019" + "l2=0.102 f=-0.405 shape=(1, 9000, 1)
logits [[-0.33961952 -0.30269435 -0.29684553 -0.68102235]]
Iteration 400 of 1000: loss=0.0878 " + "l1=0.000342" + "l2=0.0874 f=-0.403 shape=(1, 9000, 1)
logits [[-0.3375788  -0.29917547 -0.29812416 -0.675999  ]]
Iteration 500 of 1000: loss=0.0751 " + "l1=0" + "l2=0.0751 f=-0.402 shape=(1, 9000, 1)
logits [[-0.31220734 -0.30724245 -0.30889106 -0.67912394]]
Iteration 600 of 1000: loss=0.0697 " + "l1=0" + "l2=0.0697 f=-0.398 shape=(1, 9000, 1)
logits [[-0.37233248 -0.26765883 -0.2759939  -0.67743695]]
Iteration 700 of 1000: loss=0.0633 " + "l1=0" + "l2=0.0633 f=-0.402 shape=(1, 9000, 1)
logits [[-0.3836818  -0.26952127 -0.28428167 -0.6694837 ]]
Iteration 800 of 1000: loss=0.0564 " + "l1=0" + "l2=0.0564 f=-0.404 shape=(1, 9000, 1)
logits [[-0.3690094  -0.29021478 -0.29738232 -0.65887386]]
Iteration 900 of 1000: loss=0.0518 " + "l1=0" + "l2=0.0518 f=-0.407 shape=(1, 9000, 1)
logits [[-0.3523721  -0.3111996  -0.31491166 -0.6508804 ]]
--- 334.89510679244995 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00513 " + "l1=0.00513" + "l2=0 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.80631375 -1.3078449   0.2931156  -1.4107146 ]]
Iteration 100 of 1000: loss=0.00471 " + "l1=0.0044" + "l2=0.000311 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.7472176  -1.2780446   0.30703196 -1.3930175 ]]
Iteration 200 of 1000: loss=0.00459 " + "l1=0.00429" + "l2=0.000303 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.73995894 -1.274476    0.31097382 -1.391863  ]]
Iteration 300 of 1000: loss=0.00452 " + "l1=0.00416" + "l2=0.000365 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.7304651  -1.270363    0.31468362 -1.389915  ]]
Iteration 400 of 1000: loss=0.00446 " + "l1=0.00402" + "l2=0.000438 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.7204324 -1.2662723  0.3186248 -1.3883421]]
Iteration 500 of 1000: loss=0.00444 " + "l1=0.00387" + "l2=0.000563 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.7099521 -1.2620283  0.3224903 -1.38727  ]]
Iteration 600 of 1000: loss=0.00435 " + "l1=0.00374" + "l2=0.000613 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.7005107  -1.2583128   0.32633597 -1.3857341 ]]
Iteration 700 of 1000: loss=0.0044 " + "l1=0.00363" + "l2=0.000766 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.6925045  -1.2552524   0.32956538 -1.3843548 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0513 " + "l1=0.0513" + "l2=0 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.80631375 -1.3078449   0.2931156  -1.4107146 ]]
Iteration 100 of 1000: loss=0.0178 " + "l1=0.000284" + "l2=0.0176 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.370119  -1.0717163  0.367278  -1.2793224]]
Iteration 200 of 1000: loss=0.0118 " + "l1=0.000171" + "l2=0.0116 f=-0.399 shape=(1, 9000, 1)
logits [[ 0.39507967 -1.0917746   0.39336538 -1.2938423 ]]
Iteration 300 of 1000: loss=0.00913 " + "l1=0" + "l2=0.00913 f=-0.398 shape=(1, 9000, 1)
logits [[ 0.40297168 -1.1044607   0.40475667 -1.2971289 ]]
Iteration 400 of 1000: loss=0.00764 " + "l1=0" + "l2=0.00764 f=-0.399 shape=(1, 9000, 1)
logits [[ 0.4084121 -1.1157688  0.4108656 -1.3004851]]
Iteration 500 of 1000: loss=0.00671 " + "l1=0" + "l2=0.00671 f=-0.4 shape=(1, 9000, 1)
logits [[ 0.4116986  -1.1240486   0.41366097 -1.302169  ]]
Iteration 600 of 1000: loss=0.0062 " + "l1=0" + "l2=0.0062 f=-0.401 shape=(1, 9000, 1)
logits [[ 0.4106004 -1.1269827  0.4165189 -1.3028365]]
Iteration 700 of 1000: loss=0.00579 " + "l1=0.000178" + "l2=0.00561 f=-0.401 shape=(1, 9000, 1)
logits [[ 0.41838858 -1.1345202   0.41661033 -1.3060871 ]]
Iteration 800 of 1000: loss=0.00537 " + "l1=0" + "l2=0.00537 f=-0.401 shape=(1, 9000, 1)
logits [[ 0.41329265 -1.1361502   0.4228465  -1.3054191 ]]
Iteration 900 of 1000: loss=0.00508 " + "l1=0" + "l2=0.00508 f=-0.401 shape=(1, 9000, 1)
logits [[ 0.42074654 -1.1423804   0.4242649  -1.308416  ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0282 " + "l1=0.0282" + "l2=0 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.80631375 -1.3078449   0.2931156  -1.4107146 ]]
Iteration 100 of 1000: loss=0.0175 " + "l1=0.0119" + "l2=0.00565 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.55655384 -1.1767327   0.34071887 -1.3323948 ]]
Iteration 200 of 1000: loss=0.0142 " + "l1=0.00701" + "l2=0.00718 f=-0.399 shape=(1, 9000, 1)
logits [[ 0.4956449  -1.1457367   0.36816725 -1.3155844 ]]
Iteration 300 of 1000: loss=0.0111 " + "l1=0.00245" + "l2=0.00861 f=-0.397 shape=(1, 9000, 1)
logits [[ 0.44064042 -1.1210946   0.39603788 -1.3025968 ]]
Iteration 400 of 1000: loss=0.00848 " + "l1=0" + "l2=0.00848 f=-0.397 shape=(1, 9000, 1)
logits [[ 0.40902933 -1.1104828   0.4103735  -1.2988539 ]]
Iteration 500 of 1000: loss=0.00705 " + "l1=0" + "l2=0.00705 f=-0.399 shape=(1, 9000, 1)
logits [[ 0.41427335 -1.1212878   0.4148114  -1.3024192 ]]
Iteration 600 of 1000: loss=0.00644 " + "l1=0" + "l2=0.00644 f=-0.4 shape=(1, 9000, 1)
logits [[ 0.41620186 -1.127434    0.41666904 -1.30465   ]]
Iteration 700 of 1000: loss=0.00571 " + "l1=0" + "l2=0.00571 f=-0.401 shape=(1, 9000, 1)
logits [[ 0.4174365  -1.1317992   0.41812503 -1.3057823 ]]
Iteration 800 of 1000: loss=0.00553 " + "l1=0.000319" + "l2=0.00521 f=-0.401 shape=(1, 9000, 1)
logits [[ 0.4264165  -1.1408083   0.42062065 -1.3095508 ]]
Iteration 900 of 1000: loss=0.00493 " + "l1=0.000122" + "l2=0.0048 f=-0.401 shape=(1, 9000, 1)
logits [[ 0.4261591  -1.1436291   0.42393976 -1.310035  ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0167 " + "l1=0.0167" + "l2=0 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.80631375 -1.3078449   0.2931156  -1.4107146 ]]
Iteration 100 of 1000: loss=0.0126 " + "l1=0.0103" + "l2=0.00231 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.6421313  -1.224023    0.32471988 -1.3615539 ]]
Iteration 200 of 1000: loss=0.0115 " + "l1=0.00877" + "l2=0.0027 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.61001927 -1.205745    0.34004724 -1.3550195 ]]
Iteration 300 of 1000: loss=0.0104 " + "l1=0.00731" + "l2=0.00313 f=-0.401 shape=(1, 9000, 1)
logits [[ 0.579029  -1.1919644  0.3541877 -1.3467219]]
Iteration 400 of 1000: loss=0.00957 " + "l1=0.00603" + "l2=0.00354 f=-0.401 shape=(1, 9000, 1)
logits [[ 0.55147773 -1.1824512   0.36578828 -1.3392974 ]]
Iteration 500 of 1000: loss=0.00869 " + "l1=0.00466" + "l2=0.00402 f=-0.4 shape=(1, 9000, 1)
logits [[ 0.5234914  -1.1711576   0.37995553 -1.3341379 ]]
Iteration 600 of 1000: loss=0.00793 " + "l1=0.00349" + "l2=0.00444 f=-0.4 shape=(1, 9000, 1)
logits [[ 0.49913046 -1.162407    0.39176962 -1.327925  ]]
Iteration 700 of 1000: loss=0.00713 " + "l1=0.00216" + "l2=0.00497 f=-0.399 shape=(1, 9000, 1)
logits [[ 0.4707838  -1.1507819   0.40433905 -1.3206475 ]]
Iteration 800 of 1000: loss=0.00644 " + "l1=0.001" + "l2=0.00544 f=-0.398 shape=(1, 9000, 1)
logits [[ 0.44702414 -1.1420482   0.41611448 -1.3145945 ]]
Iteration 900 of 1000: loss=0.00583 " + "l1=0.000165" + "l2=0.00567 f=-0.398 shape=(1, 9000, 1)
logits [[ 0.4333058  -1.1410345   0.42823502 -1.3109742 ]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0109 " + "l1=0.0109" + "l2=0 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.80631375 -1.3078449   0.2931156  -1.4107146 ]]
Iteration 100 of 1000: loss=0.00911 " + "l1=0.00803" + "l2=0.00108 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.6935735  -1.2506306   0.31568673 -1.3776999 ]]
Iteration 200 of 1000: loss=0.00858 " + "l1=0.00729" + "l2=0.00129 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.6683033  -1.2385874   0.32532573 -1.3723983 ]]
Iteration 300 of 1000: loss=0.00814 " + "l1=0.00666" + "l2=0.00148 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.6475552  -1.2282882   0.33426425 -1.3677133 ]]
Iteration 400 of 1000: loss=0.00776 " + "l1=0.00613" + "l2=0.00163 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.6310951  -1.221248    0.34258968 -1.3645277 ]]
Iteration 500 of 1000: loss=0.00744 " + "l1=0.00555" + "l2=0.00189 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.6122221  -1.2130721   0.35112175 -1.3609952 ]]
Iteration 600 of 1000: loss=0.0071 " + "l1=0.00501" + "l2=0.00209 f=-0.402 shape=(1, 9000, 1)
logits [[ 0.5952235  -1.2062031   0.35954124 -1.3583965 ]]
Iteration 700 of 1000: loss=0.0069 " + "l1=0.00453" + "l2=0.00237 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.5784539  -1.2004502   0.36506754 -1.3553336 ]]
Iteration 800 of 1000: loss=0.00658 " + "l1=0.0041" + "l2=0.00248 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.5637282 -1.1956861  0.370779  -1.3504915]]
Iteration 900 of 1000: loss=0.00632 " + "l1=0.00361" + "l2=0.00271 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.5490753  -1.1904235   0.37908337 -1.3477781 ]]
--- 319.1668496131897 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0222 " + "l1=0.0222" + "l2=0 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.80631375 -1.3078449   0.2931156  -1.4107146 ]]
Iteration 100 of 1000: loss=0.0211 " + "l1=0.0204" + "l2=0.000726 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.71301186 -1.2680705   0.27094147 -1.3279089 ]]
Iteration 200 of 1000: loss=0.0209 " + "l1=0.0201" + "l2=0.000811 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.6958953  -1.2604951   0.26660115 -1.3136873 ]]
Iteration 300 of 1000: loss=0.0207 " + "l1=0.0198" + "l2=0.000929 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.6792716  -1.2532994   0.26277763 -1.2996088 ]]
Iteration 400 of 1000: loss=0.0205 " + "l1=0.0195" + "l2=0.00104 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.6629457  -1.247011    0.25930718 -1.2857608 ]]
Iteration 500 of 1000: loss=0.0204 " + "l1=0.0192" + "l2=0.00119 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.6472221  -1.240928    0.25596774 -1.2731639 ]]
Iteration 600 of 1000: loss=0.0203 " + "l1=0.0189" + "l2=0.00137 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.632046   -1.235084    0.25245324 -1.2601054 ]]
Iteration 700 of 1000: loss=0.0202 " + "l1=0.0187" + "l2=0.00155 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.619037   -1.2300462   0.24876402 -1.2484456 ]]
Iteration 800 of 1000: loss=0.0201 " + "l1=0.0185" + "l2=0.00166 f=-0.402 shape=(1, 9000, 1)
logits [[ 0.6089274  -1.2262566   0.24570806 -1.238309  ]]
Iteration 900 of 1000: loss=0.0201 " + "l1=0.0183" + "l2=0.00185 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.59884864 -1.2225583   0.24161011 -1.2281096 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.222 " + "l1=0.222" + "l2=0 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.80631375 -1.3078449   0.2931156  -1.4107146 ]]
Iteration 100 of 1000: loss=0.134 " + "l1=0.0805" + "l2=0.0531 f=-0.395 shape=(1, 9000, 1)
logits [[ 0.07615968 -0.9965697   0.06965562 -0.7285098 ]]
Iteration 200 of 1000: loss=0.109 " + "l1=0.0565" + "l2=0.0521 f=-0.382 shape=(1, 9000, 1)
logits [[ 3.7303809e-03 -9.7213614e-01  6.1053829e-04 -5.6077778e-01]]
Iteration 300 of 1000: loss=0.0883 " + "l1=0.0337" + "l2=0.0547 f=-0.381 shape=(1, 9000, 1)
logits [[-0.08112381 -0.9457545  -0.08020367 -0.41711217]]
Iteration 400 of 1000: loss=0.0687 " + "l1=0.00744" + "l2=0.0613 f=-0.382 shape=(1, 9000, 1)
logits [[-0.18037397 -0.91112155 -0.18260567 -0.25478557]]
Iteration 500 of 1000: loss=0.0554 " + "l1=0.000367" + "l2=0.055 f=-0.386 shape=(1, 9000, 1)
logits [[-0.21324018 -0.90209967 -0.21267283 -0.21633926]]
Iteration 600 of 1000: loss=0.0483 " + "l1=0.000645" + "l2=0.0476 f=-0.391 shape=(1, 9000, 1)
logits [[-0.21536675 -0.9098665  -0.21881495 -0.2218203 ]]
Iteration 700 of 1000: loss=0.0439 " + "l1=0.00036" + "l2=0.0436 f=-0.393 shape=(1, 9000, 1)
logits [[-0.21093583 -0.92597395 -0.21967804 -0.21453673]]
Iteration 800 of 1000: loss=0.0407 " + "l1=0" + "l2=0.0407 f=-0.391 shape=(1, 9000, 1)
logits [[-0.2152465  -0.93657416 -0.20921913 -0.20137939]]
Iteration 900 of 1000: loss=0.0374 " + "l1=0.000457" + "l2=0.0369 f=-0.39 shape=(1, 9000, 1)
logits [[-0.19618551 -0.9604564  -0.20298654 -0.20076004]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.122 " + "l1=0.122" + "l2=0 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.80631375 -1.3078449   0.2931156  -1.4107146 ]]
Iteration 100 of 1000: loss=0.0944 " + "l1=0.0773" + "l2=0.0172 f=-0.4 shape=(1, 9000, 1)
logits [[ 0.37645662 -1.1255735   0.17633569 -1.0281147 ]]
Iteration 200 of 1000: loss=0.086 " + "l1=0.0649" + "l2=0.0211 f=-0.396 shape=(1, 9000, 1)
logits [[ 0.26748246 -1.0785445   0.13835606 -0.91232574]]
Iteration 300 of 1000: loss=0.0772 " + "l1=0.052" + "l2=0.0253 f=-0.393 shape=(1, 9000, 1)
logits [[ 0.15306172 -1.0305104   0.0969279  -0.79165506]]
Iteration 400 of 1000: loss=0.069 " + "l1=0.0415" + "l2=0.0275 f=-0.389 shape=(1, 9000, 1)
logits [[ 0.06592125 -0.9970662   0.06329709 -0.6888668 ]]
Iteration 500 of 1000: loss=0.0627 " + "l1=0.0352" + "l2=0.0275 f=-0.387 shape=(1, 9000, 1)
logits [[ 0.02772601 -0.9931045   0.02928156 -0.6106852 ]]
Iteration 600 of 1000: loss=0.0576 " + "l1=0.0293" + "l2=0.0284 f=-0.387 shape=(1, 9000, 1)
logits [[-0.00562164 -0.9946479  -0.01125809 -0.53796065]]
Iteration 700 of 1000: loss=0.0528 " + "l1=0.0236" + "l2=0.0292 f=-0.386 shape=(1, 9000, 1)
logits [[-0.04350646 -0.98344845 -0.04488791 -0.4718828 ]]
Iteration 800 of 1000: loss=0.0492 " + "l1=0.019" + "l2=0.0302 f=-0.386 shape=(1, 9000, 1)
logits [[-0.07331358 -0.9730247  -0.08033307 -0.4180553 ]]
Iteration 900 of 1000: loss=0.0455 " + "l1=0.0149" + "l2=0.0306 f=-0.387 shape=(1, 9000, 1)
logits [[-0.10207143 -0.9660879  -0.10749654 -0.37348956]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.172 " + "l1=0.172" + "l2=0 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.80631375 -1.3078449   0.2931156  -1.4107146 ]]
Iteration 100 of 1000: loss=0.118 " + "l1=0.0844" + "l2=0.034 f=-0.398 shape=(1, 9000, 1)
logits [[ 0.21476682 -1.0577608   0.12440446 -0.8738504 ]]
Iteration 200 of 1000: loss=0.0998 " + "l1=0.0607" + "l2=0.0391 f=-0.389 shape=(1, 9000, 1)
logits [[ 0.07981224 -0.99759763  0.06579296 -0.7037032 ]]
Iteration 300 of 1000: loss=0.0854 " + "l1=0.0467" + "l2=0.0387 f=-0.384 shape=(1, 9000, 1)
logits [[ 0.01596962 -0.9773848   0.01438868 -0.58711374]]
Iteration 400 of 1000: loss=0.0739 " + "l1=0.0333" + "l2=0.0405 f=-0.383 shape=(1, 9000, 1)
logits [[-0.04072489 -0.9707947  -0.04810973 -0.47091097]]
Iteration 500 of 1000: loss=0.0631 " + "l1=0.0195" + "l2=0.0436 f=-0.384 shape=(1, 9000, 1)
logits [[-0.11279581 -0.94498515 -0.11422947 -0.36404055]]
Iteration 600 of 1000: loss=0.0544 " + "l1=0.00768" + "l2=0.0467 f=-0.387 shape=(1, 9000, 1)
logits [[-0.17791428 -0.9214716  -0.17469074 -0.2737472 ]]
Iteration 700 of 1000: loss=0.0473 " + "l1=0.000937" + "l2=0.0464 f=-0.39 shape=(1, 9000, 1)
logits [[-0.21288592 -0.9156425  -0.2092823  -0.22136724]]
Iteration 800 of 1000: loss=0.0426 " + "l1=0" + "l2=0.0426 f=-0.39 shape=(1, 9000, 1)
logits [[-0.21104547 -0.9334086  -0.21036753 -0.206045  ]]
Iteration 900 of 1000: loss=0.039 " + "l1=0.000645" + "l2=0.0384 f=-0.389 shape=(1, 9000, 1)
logits [[-0.2013634  -0.9503975  -0.19809356 -0.20641407]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.147 " + "l1=0.147" + "l2=0 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.80631375 -1.3078449   0.2931156  -1.4107146 ]]
Iteration 100 of 1000: loss=0.107 " + "l1=0.0827" + "l2=0.0248 f=-0.399 shape=(1, 9000, 1)
logits [[ 0.29562762 -1.0927098   0.15229519 -0.9531431 ]]
Iteration 200 of 1000: loss=0.0942 " + "l1=0.063" + "l2=0.0312 f=-0.393 shape=(1, 9000, 1)
logits [[ 0.15580264 -1.0311655   0.09933364 -0.79519373]]
Iteration 300 of 1000: loss=0.0818 " + "l1=0.0488" + "l2=0.033 f=-0.387 shape=(1, 9000, 1)
logits [[ 0.06188337 -0.99388176  0.05727512 -0.6750117 ]]
Iteration 400 of 1000: loss=0.0724 " + "l1=0.0394" + "l2=0.033 f=-0.385 shape=(1, 9000, 1)
logits [[ 0.01614505 -0.9875497   0.00993861 -0.5786753 ]]
Iteration 500 of 1000: loss=0.0644 " + "l1=0.0297" + "l2=0.0346 f=-0.385 shape=(1, 9000, 1)
logits [[-0.03507187 -0.9822713  -0.03887777 -0.4837176 ]]
Iteration 600 of 1000: loss=0.0575 " + "l1=0.0211" + "l2=0.0364 f=-0.385 shape=(1, 9000, 1)
logits [[-0.08769136 -0.96200544 -0.08518488 -0.40404642]]
Iteration 700 of 1000: loss=0.0515 " + "l1=0.0131" + "l2=0.0384 f=-0.387 shape=(1, 9000, 1)
logits [[-0.13624273 -0.9429244  -0.13623783 -0.33404255]]
Iteration 800 of 1000: loss=0.0463 " + "l1=0.00631" + "l2=0.04 f=-0.389 shape=(1, 9000, 1)
logits [[-0.17488435 -0.9360858  -0.17441195 -0.26972276]]
Iteration 900 of 1000: loss=0.0417 " + "l1=0.00124" + "l2=0.0404 f=-0.39 shape=(1, 9000, 1)
logits [[-0.19798824 -0.94134533 -0.20197718 -0.21671417]]
--- 335.85049271583557 seconds ---
Adv result:3
Loading record A01042
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0493 " + "l1=0.0493" + "l2=0 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.6723232 -2.2584894  1.8127214 -4.069714 ]]
Iteration 100 of 1000: loss=0.0489 " + "l1=0.0486" + "l2=0.000257 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.63197  -2.231533  1.793758 -4.029773]]
Iteration 200 of 1000: loss=0.0487 " + "l1=0.0485" + "l2=0.000234 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.6239412 -2.2265422  1.7892033 -4.0213094]]
Iteration 300 of 1000: loss=0.0486 " + "l1=0.0483" + "l2=0.000298 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.612854  -2.2198536  1.7833972 -4.010182 ]]
Iteration 400 of 1000: loss=0.0485 " + "l1=0.0481" + "l2=0.000357 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.6006994 -2.2128313  1.7770987 -3.998205 ]]
Iteration 500 of 1000: loss=0.0484 " + "l1=0.0479" + "l2=0.00045 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.5879083 -2.2060008  1.7707858 -3.9858732]]
Iteration 600 of 1000: loss=0.0483 " + "l1=0.0477" + "l2=0.000541 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.5747962 -2.1992984  1.7644216 -3.9734638]]
Iteration 700 of 1000: loss=0.0482 " + "l1=0.0475" + "l2=0.000609 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.5618346 -2.1927633  1.7583112 -3.9614737]]
Iteration 800 of 1000: loss=0.0481 " + "l1=0.0474" + "l2=0.000754 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.5488234 -2.1863072  1.7523108 -3.9495866]]
Iteration 900 of 1000: loss=0.048 " + "l1=0.0472" + "l2=0.000871 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.5363624 -2.1804278  1.7466494 -3.9383526]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.493 " + "l1=0.493" + "l2=0 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.6723232 -2.2584894  1.8127214 -4.069714 ]]
Iteration 100 of 1000: loss=0.459 " + "l1=0.443" + "l2=0.0156 f=-0.445 shape=(1, 9000, 1)
logits [[ 2.3658235 -2.066451   1.6735909 -3.7529125]]
Iteration 200 of 1000: loss=0.442 " + "l1=0.42" + "l2=0.0212 f=-0.439 shape=(1, 9000, 1)
logits [[ 2.2155218 -1.9891571  1.608559  -3.5903053]]
Iteration 300 of 1000: loss=0.426 " + "l1=0.402" + "l2=0.0244 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.092767  -1.9265603  1.555027  -3.4618704]]
Iteration 400 of 1000: loss=0.413 " + "l1=0.385" + "l2=0.028 f=-0.435 shape=(1, 9000, 1)
logits [[ 1.9781777 -1.8744463  1.5044793 -3.3483539]]
Iteration 500 of 1000: loss=0.401 " + "l1=0.369" + "l2=0.0324 f=-0.437 shape=(1, 9000, 1)
logits [[ 1.8571992 -1.828425   1.4472842 -3.2251978]]
Iteration 600 of 1000: loss=0.389 " + "l1=0.352" + "l2=0.0367 f=-0.443 shape=(1, 9000, 1)
logits [[ 1.7302353 -1.7892629  1.3920895 -3.1035209]]
Iteration 700 of 1000: loss=0.378 " + "l1=0.337" + "l2=0.0404 f=-0.449 shape=(1, 9000, 1)
logits [[ 1.6154633 -1.7591114  1.3415062 -2.9946153]]
Iteration 800 of 1000: loss=0.367 " + "l1=0.322" + "l2=0.0444 f=-0.457 shape=(1, 9000, 1)
logits [[ 1.4933304 -1.7287794  1.2896347 -2.8802133]]
Iteration 900 of 1000: loss=0.356 " + "l1=0.309" + "l2=0.0474 f=-0.461 shape=(1, 9000, 1)
logits [[ 1.3892274 -1.7002813  1.2465446 -2.7776406]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.93 " + "l1=4.93" + "l2=0 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.6723232 -2.2584894  1.8127214 -4.069714 ]]
Iteration 100 of 1000: loss=2.6 " + "l1=1.81" + "l2=0.793 f=-0.379 shape=(1, 9000, 1)
logits [[ 0.7198435  -1.0795288   0.73207104 -1.8886375 ]]
Iteration 200 of 1000: loss=1.94 " + "l1=1.08" + "l2=0.851 f=-0.392 shape=(1, 9000, 1)
logits [[ 0.3377827  -0.73604065  0.34783834 -1.5169402 ]]
Iteration 300 of 1000: loss=1.6 " + "l1=0.72" + "l2=0.881 f=-0.391 shape=(1, 9000, 1)
logits [[ 0.13267727 -0.55940634  0.16020037 -1.2989168 ]]
Iteration 400 of 1000: loss=1.41 " + "l1=0.508" + "l2=0.9 f=-0.381 shape=(1, 9000, 1)
logits [[ 0.03516492 -0.44747213  0.06062992 -1.1708223 ]]
Iteration 500 of 1000: loss=1.25 " + "l1=0.291" + "l2=0.963 f=-0.369 shape=(1, 9000, 1)
logits [[-0.09709554 -0.29542473 -0.00433046 -1.0772927 ]]
Iteration 600 of 1000: loss=1.1 " + "l1=0.0354" + "l2=1.07 f=-0.357 shape=(1, 9000, 1)
logits [[-0.29410607 -0.14300968 -0.10765223 -0.8831863 ]]
Iteration 700 of 1000: loss=1.01 " + "l1=0.00086" + "l2=1.01 f=-0.351 shape=(1, 9000, 1)
logits [[-0.34299663 -0.11858552 -0.11772562 -0.82438177]]
Iteration 800 of 1000: loss=0.96 " + "l1=0.00695" + "l2=0.953 f=-0.35 shape=(1, 9000, 1)
logits [[-0.3523593  -0.11406004 -0.10711202 -0.8265758 ]]
Iteration 900 of 1000: loss=0.927 " + "l1=0" + "l2=0.927 f=-0.351 shape=(1, 9000, 1)
logits [[-0.37602875 -0.10705251 -0.10968208 -0.8104654 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.71 " + "l1=2.71" + "l2=0 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.6723232 -2.2584894  1.8127214 -4.069714 ]]
Iteration 100 of 1000: loss=1.81 " + "l1=1.42" + "l2=0.384 f=-0.401 shape=(1, 9000, 1)
logits [[ 1.1322265 -1.4584669  1.1257336 -2.4044003]]
Iteration 200 of 1000: loss=1.48 " + "l1=1.07" + "l2=0.41 f=-0.411 shape=(1, 9000, 1)
logits [[ 0.76706856 -1.1816709   0.7618497  -1.9918981 ]]
Iteration 300 of 1000: loss=1.28 " + "l1=0.838" + "l2=0.443 f=-0.422 shape=(1, 9000, 1)
logits [[ 0.5408198  -0.98339075  0.5367984  -1.7811306 ]]
Iteration 400 of 1000: loss=1.16 " + "l1=0.694" + "l2=0.462 f=-0.423 shape=(1, 9000, 1)
logits [[ 0.397673   -0.8548507   0.40730834 -1.6421199 ]]
Iteration 500 of 1000: loss=1.07 " + "l1=0.599" + "l2=0.475 f=-0.429 shape=(1, 9000, 1)
logits [[ 0.31747246 -0.7661108   0.3229266  -1.5894107 ]]
Iteration 600 of 1000: loss=1.01 " + "l1=0.521" + "l2=0.493 f=-0.429 shape=(1, 9000, 1)
logits [[ 0.24517986 -0.6950304   0.25217482 -1.5164995 ]]
Iteration 700 of 1000: loss=0.969 " + "l1=0.47" + "l2=0.499 f=-0.429 shape=(1, 9000, 1)
logits [[ 0.19224977 -0.6444322   0.2107485  -1.4737815 ]]
Iteration 800 of 1000: loss=0.929 " + "l1=0.427" + "l2=0.502 f=-0.423 shape=(1, 9000, 1)
logits [[ 0.18156037 -0.59363663  0.18289585 -1.4626805 ]]
Iteration 900 of 1000: loss=0.899 " + "l1=0.402" + "l2=0.498 f=-0.417 shape=(1, 9000, 1)
logits [[ 0.16764791 -0.56145924  0.16913664 -1.4437705 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.82 " + "l1=3.82" + "l2=0 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.6723232 -2.2584894  1.8127214 -4.069714 ]]
Iteration 100 of 1000: loss=2.24 " + "l1=1.66" + "l2=0.58 f=-0.389 shape=(1, 9000, 1)
logits [[ 0.88791347 -1.2551323   0.890099   -2.0771499 ]]
Iteration 200 of 1000: loss=1.75 " + "l1=1.1" + "l2=0.647 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.50706756 -0.91035885  0.5084737  -1.720629  ]]
Iteration 300 of 1000: loss=1.48 " + "l1=0.813" + "l2=0.663 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.30079213 -0.7405275   0.30816764 -1.4846324 ]]
Iteration 400 of 1000: loss=1.32 " + "l1=0.62" + "l2=0.7 f=-0.408 shape=(1, 9000, 1)
logits [[ 0.17741284 -0.6109859   0.18920515 -1.3871061 ]]
Iteration 500 of 1000: loss=1.21 " + "l1=0.491" + "l2=0.72 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.08151434 -0.52620566  0.10734938 -1.2992557 ]]
Iteration 600 of 1000: loss=1.13 " + "l1=0.399" + "l2=0.727 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.04014122 -0.44649222  0.06892395 -1.2837042 ]]
Iteration 700 of 1000: loss=1.05 " + "l1=0.318" + "l2=0.737 f=-0.396 shape=(1, 9000, 1)
logits [[-0.01293357 -0.38427663  0.02540471 -1.2122773 ]]
Iteration 800 of 1000: loss=0.999 " + "l1=0.241" + "l2=0.758 f=-0.387 shape=(1, 9000, 1)
logits [[-0.10900193 -0.3193226  -0.00852135 -1.1108309 ]]
Iteration 900 of 1000: loss=0.951 " + "l1=0.146" + "l2=0.805 f=-0.379 shape=(1, 9000, 1)
logits [[-0.23087005 -0.23507388 -0.04677672 -1.0052413 ]]
--- 332.8463008403778 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0086 " + "l1=0.0086" + "l2=0 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.6723232 -2.2584894  1.8127214 -4.069714 ]]
Iteration 100 of 1000: loss=0.00849 " + "l1=0.00838" + "l2=0.000116 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.64957   -2.2550082  1.8117816 -4.050369 ]]
Iteration 200 of 1000: loss=0.00845 " + "l1=0.00837" + "l2=8.08e-05 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.6480746 -2.254289   1.8111347 -4.048957 ]]
Iteration 300 of 1000: loss=0.00844 " + "l1=0.00834" + "l2=9.94e-05 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.644198  -2.2535465  1.8105872 -4.045935 ]]
Iteration 400 of 1000: loss=0.00844 " + "l1=0.0083" + "l2=0.000147 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.639637  -2.2527165  1.8099277 -4.042484 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.086 " + "l1=0.086" + "l2=0 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.6723232 -2.2584894  1.8127214 -4.069714 ]]
Iteration 100 of 1000: loss=0.0764 " + "l1=0.0713" + "l2=0.00518 f=-0.46 shape=(1, 9000, 1)
logits [[ 2.522624  -2.238861   1.8100362 -3.934518 ]]
Iteration 200 of 1000: loss=0.0723 " + "l1=0.0656" + "l2=0.00678 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.460771  -2.2293894  1.8052531 -3.8801823]]
Iteration 300 of 1000: loss=0.0679 " + "l1=0.0594" + "l2=0.00843 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.3912373 -2.2176573  1.7969133 -3.819197 ]]
Iteration 400 of 1000: loss=0.0629 " + "l1=0.0527" + "l2=0.0103 f=-0.464 shape=(1, 9000, 1)
logits [[ 2.3140674 -2.205191   1.7875417 -3.752908 ]]
Iteration 500 of 1000: loss=0.0579 " + "l1=0.0461" + "l2=0.0118 f=-0.467 shape=(1, 9000, 1)
logits [[ 2.2400446 -2.1962478  1.7787669 -3.6913793]]
Iteration 600 of 1000: loss=0.0531 " + "l1=0.0404" + "l2=0.0127 f=-0.471 shape=(1, 9000, 1)
logits [[ 2.1728866 -2.19178    1.7688736 -3.6352208]]
Iteration 700 of 1000: loss=0.0492 " + "l1=0.0356" + "l2=0.0136 f=-0.475 shape=(1, 9000, 1)
logits [[ 2.1123393 -2.1880143  1.7563653 -3.5806262]]
Iteration 800 of 1000: loss=0.0456 " + "l1=0.0312" + "l2=0.0143 f=-0.477 shape=(1, 9000, 1)
logits [[ 2.0596151 -2.1812968  1.7471666 -3.5316298]]
Iteration 900 of 1000: loss=0.0422 " + "l1=0.027" + "l2=0.0152 f=-0.478 shape=(1, 9000, 1)
logits [[ 2.0070088 -2.1740313  1.7374625 -3.4822438]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.86 " + "l1=0.86" + "l2=0 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.6723232 -2.2584894  1.8127214 -4.069714 ]]
Iteration 100 of 1000: loss=0.151 " + "l1=0" + "l2=0.151 f=-0.446 shape=(1, 9000, 1)
logits [[ 1.785192  -2.1802557  1.7910181 -3.1813242]]
Iteration 200 of 1000: loss=0.0987 " + "l1=0.00121" + "l2=0.0975 f=-0.454 shape=(1, 9000, 1)
logits [[ 1.7731138 -2.1720524  1.7719061 -3.1877985]]
Iteration 300 of 1000: loss=0.0749 " + "l1=0" + "l2=0.0749 f=-0.459 shape=(1, 9000, 1)
logits [[ 1.7558415 -2.164287   1.7587918 -3.1879053]]
Iteration 400 of 1000: loss=0.0596 " + "l1=0" + "l2=0.0596 f=-0.467 shape=(1, 9000, 1)
logits [[ 1.7470235 -2.1646917  1.7473526 -3.1961942]]
Iteration 500 of 1000: loss=0.0481 " + "l1=0" + "l2=0.0481 f=-0.475 shape=(1, 9000, 1)
logits [[ 1.7389436 -2.1699495  1.7401965 -3.2093556]]
Iteration 600 of 1000: loss=0.0414 " + "l1=0" + "l2=0.0414 f=-0.48 shape=(1, 9000, 1)
logits [[ 1.7229785 -2.1677322  1.7315606 -3.206642 ]]
Iteration 700 of 1000: loss=0.0361 " + "l1=0" + "l2=0.0361 f=-0.484 shape=(1, 9000, 1)
logits [[ 1.7091992 -2.1652548  1.7229302 -3.2010477]]
Iteration 800 of 1000: loss=0.0311 " + "l1=0" + "l2=0.0311 f=-0.486 shape=(1, 9000, 1)
logits [[ 1.7044618 -2.1627965  1.7135305 -3.1979442]]
Iteration 900 of 1000: loss=0.0266 " + "l1=0" + "l2=0.0266 f=-0.487 shape=(1, 9000, 1)
logits [[ 1.7038357 -2.1588585  1.7045599 -3.1981637]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.473 " + "l1=0.473" + "l2=0 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.6723232 -2.2584894  1.8127214 -4.069714 ]]
Iteration 100 of 1000: loss=0.155 " + "l1=0.00364" + "l2=0.152 f=-0.446 shape=(1, 9000, 1)
logits [[ 1.8041531 -2.1853132  1.7975398 -3.1992514]]
Iteration 200 of 1000: loss=0.0942 " + "l1=0.00022" + "l2=0.094 f=-0.454 shape=(1, 9000, 1)
logits [[ 1.7759094 -2.172935   1.7755097 -3.193296 ]]
Iteration 300 of 1000: loss=0.0696 " + "l1=0" + "l2=0.0696 f=-0.461 shape=(1, 9000, 1)
logits [[ 1.7575748 -2.163038   1.7586035 -3.195465 ]]
Iteration 400 of 1000: loss=0.0552 " + "l1=0" + "l2=0.0552 f=-0.467 shape=(1, 9000, 1)
logits [[ 1.7443376 -2.1599088  1.7462906 -3.2006826]]
Iteration 500 of 1000: loss=0.046 " + "l1=0.00288" + "l2=0.0431 f=-0.476 shape=(1, 9000, 1)
logits [[ 1.7439263 -2.1653612  1.738683  -3.220502 ]]
Iteration 600 of 1000: loss=0.0392 " + "l1=0.00319" + "l2=0.036 f=-0.48 shape=(1, 9000, 1)
logits [[ 1.7347496 -2.161787   1.7289441 -3.2231421]]
Iteration 700 of 1000: loss=0.0318 " + "l1=0" + "l2=0.0318 f=-0.483 shape=(1, 9000, 1)
logits [[ 1.718664  -2.1599543  1.7203842 -3.209787 ]]
Iteration 800 of 1000: loss=0.0298 " + "l1=0" + "l2=0.0298 f=-0.484 shape=(1, 9000, 1)
logits [[ 1.6940614 -2.157174   1.712584  -3.1865528]]
Iteration 900 of 1000: loss=0.0262 " + "l1=0.00197" + "l2=0.0242 f=-0.486 shape=(1, 9000, 1)
logits [[ 1.7057297 -2.1536882  1.7021495 -3.1986973]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.279 " + "l1=0.279" + "l2=0 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.6723232 -2.2584894  1.8127214 -4.069714 ]]
Iteration 100 of 1000: loss=0.168 " + "l1=0.103" + "l2=0.0648 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.1184042 -2.20543    1.8009417 -3.5405183]]
Iteration 200 of 1000: loss=0.114 " + "l1=0.0289" + "l2=0.085 f=-0.456 shape=(1, 9000, 1)
logits [[ 1.8725753 -2.189364   1.7836714 -3.2919316]]
Iteration 300 of 1000: loss=0.0752 " + "l1=0.00261" + "l2=0.0726 f=-0.46 shape=(1, 9000, 1)
logits [[ 1.7710965 -2.1715236  1.763056  -3.2031796]]
Iteration 400 of 1000: loss=0.0564 " + "l1=0.000747" + "l2=0.0556 f=-0.467 shape=(1, 9000, 1)
logits [[ 1.7502496 -2.1630187  1.74795   -3.2031736]]
Iteration 500 of 1000: loss=0.0442 " + "l1=0.00073" + "l2=0.0435 f=-0.475 shape=(1, 9000, 1)
logits [[ 1.7415837 -2.1655664  1.7393373 -3.216975 ]]
Iteration 600 of 1000: loss=0.0362 " + "l1=0.000419" + "l2=0.0358 f=-0.48 shape=(1, 9000, 1)
logits [[ 1.7318418 -2.1632676  1.7305533 -3.2188685]]
Iteration 700 of 1000: loss=0.0314 " + "l1=0" + "l2=0.0314 f=-0.482 shape=(1, 9000, 1)
logits [[ 1.7172812 -2.1601546  1.7211636 -3.2078097]]
Iteration 800 of 1000: loss=0.027 " + "l1=0" + "l2=0.027 f=-0.484 shape=(1, 9000, 1)
logits [[ 1.7106739 -2.1575813  1.7133496 -3.2025793]]
Iteration 900 of 1000: loss=0.024 " + "l1=0" + "l2=0.024 f=-0.486 shape=(1, 9000, 1)
logits [[ 1.6989757 -2.1543705  1.7039121 -3.191099 ]]
--- 299.8676338195801 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0674 " + "l1=0.0674" + "l2=0 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.6723232 -2.2584894  1.8127214 -4.069714 ]]
Iteration 100 of 1000: loss=0.0666 " + "l1=0.0661" + "l2=0.00049 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.614971  -2.2409523  1.7870481 -3.9918196]]
Iteration 200 of 1000: loss=0.0663 " + "l1=0.0658" + "l2=0.000517 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.6006165 -2.2357068  1.7799567 -3.9744747]]
Iteration 300 of 1000: loss=0.066 " + "l1=0.0654" + "l2=0.000649 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.5826151 -2.2297785  1.7712408 -3.9529448]]
Iteration 400 of 1000: loss=0.0657 " + "l1=0.0649" + "l2=0.000753 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.562676  -2.22387    1.7619218 -3.929837 ]]
Iteration 500 of 1000: loss=0.0654 " + "l1=0.0645" + "l2=0.000926 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.542339  -2.2181413  1.752487  -3.9068136]]
Iteration 600 of 1000: loss=0.0651 " + "l1=0.064" + "l2=0.00109 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.5212815 -2.2126424  1.7429202 -3.8833098]]
Iteration 700 of 1000: loss=0.0649 " + "l1=0.0636" + "l2=0.00125 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.5008638 -2.2075343  1.733726  -3.8610218]]
Iteration 800 of 1000: loss=0.0647 " + "l1=0.0632" + "l2=0.00147 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.4810815 -2.202327   1.7248323 -3.839669 ]]
Iteration 900 of 1000: loss=0.0644 " + "l1=0.0628" + "l2=0.00163 f=-0.46 shape=(1, 9000, 1)
logits [[ 2.461247  -2.1971152  1.7159749 -3.8182876]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.674 " + "l1=0.674" + "l2=0 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.6723232 -2.2584894  1.8127214 -4.069714 ]]
Iteration 100 of 1000: loss=0.589 " + "l1=0.543" + "l2=0.0454 f=-0.431 shape=(1, 9000, 1)
logits [[ 2.1210785 -2.1307623  1.5967598 -3.3113005]]
Iteration 200 of 1000: loss=0.546 " + "l1=0.485" + "l2=0.061 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.869753  -2.0719807  1.494121  -2.9758482]]
Iteration 300 of 1000: loss=0.507 " + "l1=0.432" + "l2=0.0754 f=-0.417 shape=(1, 9000, 1)
logits [[ 1.636474  -2.0115695  1.3896025 -2.6819994]]
Iteration 400 of 1000: loss=0.473 " + "l1=0.387" + "l2=0.0861 f=-0.42 shape=(1, 9000, 1)
logits [[ 1.425834  -1.9497257  1.2909732 -2.447267 ]]
Iteration 500 of 1000: loss=0.444 " + "l1=0.347" + "l2=0.0969 f=-0.424 shape=(1, 9000, 1)
logits [[ 1.2366287 -1.9053539  1.2058879 -2.2347658]]
Iteration 600 of 1000: loss=0.418 " + "l1=0.322" + "l2=0.0955 f=-0.425 shape=(1, 9000, 1)
logits [[ 1.1289725 -1.8625704  1.1277273 -2.0929167]]
Iteration 700 of 1000: loss=0.399 " + "l1=0.309" + "l2=0.0897 f=-0.423 shape=(1, 9000, 1)
logits [[ 1.0768267 -1.8298492  1.0770496 -2.0162036]]
Iteration 800 of 1000: loss=0.385 " + "l1=0.296" + "l2=0.0895 f=-0.42 shape=(1, 9000, 1)
logits [[ 1.0268385 -1.8079566  1.0291567 -1.9271615]]
Iteration 900 of 1000: loss=0.373 " + "l1=0.284" + "l2=0.089 f=-0.416 shape=(1, 9000, 1)
logits [[ 0.98573637 -1.7868763   0.9897017  -1.8545488 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.74 " + "l1=6.74" + "l2=0 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.6723232 -2.2584894  1.8127214 -4.069714 ]]
Iteration 100 of 1000: loss=1.73 " + "l1=0" + "l2=1.73 f=-0.179 shape=(1, 9000, 1)
logits [[ 0.03554367 -1.4704207   0.3574942   0.36248106]]
Iteration 200 of 1000: loss=1.14 " + "l1=0.000937" + "l2=1.13 f=-0.207 shape=(1, 9000, 1)
logits [[ 0.04773626 -1.4719576   0.29854944  0.29761237]]
Iteration 300 of 1000: loss=0.945 " + "l1=0.00939" + "l2=0.936 f=-0.224 shape=(1, 9000, 1)
logits [[ 0.02158944 -1.4611037   0.27624214  0.2668566 ]]
Iteration 400 of 1000: loss=0.828 " + "l1=0.00401" + "l2=0.824 f=-0.235 shape=(1, 9000, 1)
logits [[-0.00937931 -1.438249    0.2566081   0.25259814]]
Iteration 500 of 1000: loss=0.762 " + "l1=0.0291" + "l2=0.733 f=-0.244 shape=(1, 9000, 1)
logits [[-0.01350585 -1.4265424   0.24588946  0.2167823 ]]
Iteration 600 of 1000: loss=0.693 " + "l1=0" + "l2=0.693 f=-0.244 shape=(1, 9000, 1)
logits [[-0.04998279 -1.4061111   0.22488417  0.25513265]]
Iteration 700 of 1000: loss=0.648 " + "l1=0.0126" + "l2=0.636 f=-0.246 shape=(1, 9000, 1)
logits [[-0.03911698 -1.4094088   0.23788099  0.2253148 ]]
Iteration 800 of 1000: loss=0.605 " + "l1=0.00249" + "l2=0.602 f=-0.245 shape=(1, 9000, 1)
logits [[-0.05424778 -1.4026002   0.24042559  0.2379319 ]]
Iteration 900 of 1000: loss=0.577 " + "l1=0" + "l2=0.577 f=-0.243 shape=(1, 9000, 1)
logits [[-0.07576469 -1.403801    0.23981659  0.26724607]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.71 " + "l1=3.71" + "l2=0 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.6723232 -2.2584894  1.8127214 -4.069714 ]]
Iteration 100 of 1000: loss=1.66 " + "l1=0.839" + "l2=0.818 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.6649505  -1.7205149   0.71325415 -0.81147647]]
Iteration 200 of 1000: loss=1.14 " + "l1=0.248" + "l2=0.889 f=-0.234 shape=(1, 9000, 1)
logits [[ 0.1983088  -1.4928552   0.40408283 -0.04592257]]
Iteration 300 of 1000: loss=0.839 " + "l1=0.0163" + "l2=0.823 f=-0.228 shape=(1, 9000, 1)
logits [[ 0.01900315 -1.4247559   0.26195812  0.23238683]]
Iteration 400 of 1000: loss=0.722 " + "l1=0.00291" + "l2=0.719 f=-0.233 shape=(1, 9000, 1)
logits [[ 1.2862254e-03 -1.4116899e+00  2.4115512e-01  2.3586461e-01]]
Iteration 500 of 1000: loss=0.651 " + "l1=0" + "l2=0.651 f=-0.237 shape=(1, 9000, 1)
logits [[-0.00718359 -1.4080926   0.2295122   0.23825613]]
Iteration 600 of 1000: loss=0.6 " + "l1=0.00759" + "l2=0.592 f=-0.238 shape=(1, 9000, 1)
logits [[-0.0138083  -1.4145364   0.2456858   0.23187783]]
Iteration 700 of 1000: loss=0.552 " + "l1=0.00205" + "l2=0.55 f=-0.237 shape=(1, 9000, 1)
logits [[-0.0391717  -1.4164946   0.25470337  0.2509765 ]]
Iteration 800 of 1000: loss=0.508 " + "l1=0" + "l2=0.508 f=-0.24 shape=(1, 9000, 1)
logits [[-0.06104793 -1.4235076   0.25891948  0.2662028 ]]
Iteration 900 of 1000: loss=0.475 " + "l1=0.0115" + "l2=0.464 f=-0.245 shape=(1, 9000, 1)
logits [[-0.06565902 -1.444057    0.2749412   0.2541052 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.19 " + "l1=2.19" + "l2=0 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.6723232 -2.2584894  1.8127214 -4.069714 ]]
Iteration 100 of 1000: loss=1.33 " + "l1=0.936" + "l2=0.394 f=-0.357 shape=(1, 9000, 1)
logits [[ 1.1079926 -1.8737334  1.1096699 -1.7717236]]
Iteration 200 of 1000: loss=1.05 " + "l1=0.602" + "l2=0.444 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.73914367 -1.7160436   0.7628842  -1.0893886 ]]
Iteration 300 of 1000: loss=0.885 " + "l1=0.396" + "l2=0.489 f=-0.301 shape=(1, 9000, 1)
logits [[ 0.47532538 -1.5933024   0.56729704 -0.65218884]]
Iteration 400 of 1000: loss=0.765 " + "l1=0.269" + "l2=0.496 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.29476807 -1.5109986   0.45554134 -0.37092343]]
Iteration 500 of 1000: loss=0.664 " + "l1=0.142" + "l2=0.523 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.12147827 -1.4486861   0.34986302 -0.08632275]]
Iteration 600 of 1000: loss=0.591 " + "l1=0.0531" + "l2=0.538 f=-0.252 shape=(1, 9000, 1)
logits [[-0.00466715 -1.418388    0.288294    0.12478337]]
Iteration 700 of 1000: loss=0.535 " + "l1=0.00639" + "l2=0.528 f=-0.248 shape=(1, 9000, 1)
logits [[-0.08940236 -1.4072474   0.26119557  0.24152762]]
Iteration 800 of 1000: loss=0.486 " + "l1=0" + "l2=0.486 f=-0.25 shape=(1, 9000, 1)
logits [[-0.10960481 -1.4221569   0.26209024  0.26953545]]
Iteration 900 of 1000: loss=0.433 " + "l1=0.00606" + "l2=0.427 f=-0.255 shape=(1, 9000, 1)
logits [[-0.11944831 -1.4429829   0.2796808   0.26104286]]
--- 337.9218909740448 seconds ---
Adv result:3
Loading record A01052
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0445 " + "l1=0.0445" + "l2=0 f=-0.378 shape=(1, 9000, 1)
logits [[ 2.5908082 -1.863661   1.45433   -3.693045 ]]
Iteration 100 of 1000: loss=0.0431 " + "l1=0.0425" + "l2=0.000625 f=-0.375 shape=(1, 9000, 1)
logits [[ 2.4833417 -1.7641851  1.3919082 -3.6128154]]
Iteration 200 of 1000: loss=0.0426 " + "l1=0.0418" + "l2=0.000777 f=-0.374 shape=(1, 9000, 1)
logits [[ 2.4493515 -1.7286367  1.3699749 -3.5882883]]
Iteration 300 of 1000: loss=0.0421 " + "l1=0.041" + "l2=0.00102 f=-0.374 shape=(1, 9000, 1)
logits [[ 2.411975  -1.6910381  1.3465338 -3.5617023]]
Iteration 400 of 1000: loss=0.0416 " + "l1=0.0403" + "l2=0.00129 f=-0.373 shape=(1, 9000, 1)
logits [[ 2.3734827 -1.6530461  1.3237659 -3.5362227]]
Iteration 500 of 1000: loss=0.0411 " + "l1=0.0395" + "l2=0.00157 f=-0.373 shape=(1, 9000, 1)
logits [[ 2.336967  -1.6177979  1.3012882 -3.5116818]]
Iteration 600 of 1000: loss=0.0407 " + "l1=0.0389" + "l2=0.00183 f=-0.373 shape=(1, 9000, 1)
logits [[ 2.3036892 -1.5862064  1.280207  -3.4888015]]
Iteration 700 of 1000: loss=0.0404 " + "l1=0.0383" + "l2=0.00205 f=-0.373 shape=(1, 9000, 1)
logits [[ 2.2743907 -1.5595835  1.2618603 -3.4677923]]
Iteration 800 of 1000: loss=0.0401 " + "l1=0.0378" + "l2=0.00226 f=-0.373 shape=(1, 9000, 1)
logits [[ 2.245411  -1.5334888  1.2447351 -3.4474742]]
Iteration 900 of 1000: loss=0.0399 " + "l1=0.0373" + "l2=0.00253 f=-0.373 shape=(1, 9000, 1)
logits [[ 2.2208629 -1.5112784  1.229825  -3.4304223]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.445 " + "l1=0.445" + "l2=0 f=-0.378 shape=(1, 9000, 1)
logits [[ 2.5908082 -1.863661   1.45433   -3.693045 ]]
Iteration 100 of 1000: loss=0.336 " + "l1=0.286" + "l2=0.0502 f=-0.382 shape=(1, 9000, 1)
logits [[ 1.7181675 -1.144788   1.0260389 -3.1270537]]
Iteration 200 of 1000: loss=0.295 " + "l1=0.231" + "l2=0.0639 f=-0.398 shape=(1, 9000, 1)
logits [[ 1.3711352 -0.9370356  0.8858027 -2.912712 ]]
Iteration 300 of 1000: loss=0.263 " + "l1=0.191" + "l2=0.0717 f=-0.413 shape=(1, 9000, 1)
logits [[ 1.1230404 -0.7891691  0.7651347 -2.7511213]]
Iteration 400 of 1000: loss=0.241 " + "l1=0.155" + "l2=0.086 f=-0.426 shape=(1, 9000, 1)
logits [[ 0.8923217 -0.6557822  0.6300701 -2.5712109]]
Iteration 500 of 1000: loss=0.224 " + "l1=0.132" + "l2=0.0915 f=-0.429 shape=(1, 9000, 1)
logits [[ 0.7433983  -0.58153266  0.5457027  -2.4249828 ]]
Iteration 600 of 1000: loss=0.212 " + "l1=0.116" + "l2=0.096 f=-0.433 shape=(1, 9000, 1)
logits [[ 0.62436736 -0.53525084  0.48779213 -2.3086946 ]]
Iteration 700 of 1000: loss=0.202 " + "l1=0.102" + "l2=0.101 f=-0.435 shape=(1, 9000, 1)
logits [[ 0.5159747  -0.49939376  0.44793543 -2.2030053 ]]
Iteration 800 of 1000: loss=0.193 " + "l1=0.0898" + "l2=0.103 f=-0.435 shape=(1, 9000, 1)
logits [[ 0.42046827 -0.47792545  0.41823977 -2.100362  ]]
Iteration 900 of 1000: loss=0.186 " + "l1=0.088" + "l2=0.0976 f=-0.432 shape=(1, 9000, 1)
logits [[ 0.4068433  -0.47364485  0.4018678  -2.0631037 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.45 " + "l1=4.45" + "l2=0 f=-0.378 shape=(1, 9000, 1)
logits [[ 2.5908082 -1.863661   1.45433   -3.693045 ]]
Iteration 100 of 1000: loss=0.695 " + "l1=0" + "l2=0.695 f=-0.449 shape=(1, 9000, 1)
logits [[-0.0233384   0.01730155  0.0147399  -1.8054005 ]]
Iteration 200 of 1000: loss=0.446 " + "l1=0" + "l2=0.446 f=-0.461 shape=(1, 9000, 1)
logits [[-0.01077194  0.02120885  0.0211748  -1.8772316 ]]
Iteration 300 of 1000: loss=0.373 " + "l1=0" + "l2=0.373 f=-0.461 shape=(1, 9000, 1)
logits [[ 0.00437492  0.03067756  0.01612137 -1.8937478 ]]
Iteration 400 of 1000: loss=0.324 " + "l1=0.00143" + "l2=0.323 f=-0.456 shape=(1, 9000, 1)
logits [[ 0.00640117  0.02718671  0.02862145 -1.8864013 ]]
Iteration 500 of 1000: loss=0.292 " + "l1=0" + "l2=0.292 f=-0.452 shape=(1, 9000, 1)
logits [[ 0.00826866  0.02627838  0.0245861  -1.8666484 ]]
Iteration 600 of 1000: loss=0.273 " + "l1=0" + "l2=0.273 f=-0.45 shape=(1, 9000, 1)
logits [[-0.0033284   0.02692278  0.0180959  -1.8418967 ]]
Iteration 700 of 1000: loss=0.257 " + "l1=0" + "l2=0.257 f=-0.447 shape=(1, 9000, 1)
logits [[ 0.01100891  0.02370317  0.01068438 -1.834968  ]]
Iteration 800 of 1000: loss=0.251 " + "l1=0" + "l2=0.251 f=-0.448 shape=(1, 9000, 1)
logits [[-2.5055340e-02  3.2784104e-02  8.5957209e-04 -1.7998506e+00]]
Iteration 900 of 1000: loss=0.238 " + "l1=0" + "l2=0.238 f=-0.445 shape=(1, 9000, 1)
logits [[-2.0915164e-02  2.3064153e-02 -2.4207076e-04 -1.7831533e+00]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.45 " + "l1=2.45" + "l2=0 f=-0.378 shape=(1, 9000, 1)
logits [[ 2.5908082 -1.863661   1.45433   -3.693045 ]]
Iteration 100 of 1000: loss=0.709 " + "l1=0.299" + "l2=0.41 f=-0.442 shape=(1, 9000, 1)
logits [[ 0.28445265 -0.25696376  0.28635955 -2.0800574 ]]
Iteration 200 of 1000: loss=0.454 " + "l1=0.0564" + "l2=0.398 f=-0.452 shape=(1, 9000, 1)
logits [[ 0.04973777 -0.03284384  0.06971443 -1.8964285 ]]
Iteration 300 of 1000: loss=0.329 " + "l1=0.00742" + "l2=0.322 f=-0.454 shape=(1, 9000, 1)
logits [[ 0.01418474  0.01651142  0.0300081  -1.8754141 ]]
Iteration 400 of 1000: loss=0.285 " + "l1=0.00259" + "l2=0.283 f=-0.452 shape=(1, 9000, 1)
logits [[-0.02301192  0.0212881   0.02599888 -1.832638  ]]
Iteration 500 of 1000: loss=0.259 " + "l1=0.00218" + "l2=0.257 f=-0.448 shape=(1, 9000, 1)
logits [[-0.02200305  0.01925594  0.02322403 -1.8135707 ]]
Iteration 600 of 1000: loss=0.24 " + "l1=0" + "l2=0.24 f=-0.443 shape=(1, 9000, 1)
logits [[-0.00752652  0.01523854  0.01392517 -1.7928716 ]]
Iteration 700 of 1000: loss=0.227 " + "l1=0.000927" + "l2=0.226 f=-0.44 shape=(1, 9000, 1)
logits [[-1.7451309e-04  7.9414938e-03  9.6268672e-03 -1.7754370e+00]]
Iteration 800 of 1000: loss=0.218 " + "l1=0.00352" + "l2=0.214 f=-0.438 shape=(1, 9000, 1)
logits [[ 0.00965417  0.00326194  0.00509489 -1.7687697 ]]
Iteration 900 of 1000: loss=0.207 " + "l1=0" + "l2=0.207 f=-0.438 shape=(1, 9000, 1)
logits [[-2.5242267e-02  5.2340794e-03  5.4154033e-04 -1.7337418e+00]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.45 " + "l1=1.45" + "l2=0 f=-0.378 shape=(1, 9000, 1)
logits [[ 2.5908082 -1.863661   1.45433   -3.693045 ]]
Iteration 100 of 1000: loss=0.602 " + "l1=0.312" + "l2=0.29 f=-0.447 shape=(1, 9000, 1)
logits [[ 0.49869022 -0.46003902  0.49462757 -2.322107  ]]
Iteration 200 of 1000: loss=0.44 " + "l1=0.198" + "l2=0.242 f=-0.447 shape=(1, 9000, 1)
logits [[ 0.3175967 -0.2912367  0.317987  -2.1335685]]
Iteration 300 of 1000: loss=0.362 " + "l1=0.129" + "l2=0.233 f=-0.445 shape=(1, 9000, 1)
logits [[ 0.1984289  -0.19101495  0.20486455 -1.9902847 ]]
Iteration 400 of 1000: loss=0.314 " + "l1=0.0803" + "l2=0.234 f=-0.44 shape=(1, 9000, 1)
logits [[ 0.12374061 -0.11882017  0.12811573 -1.8946501 ]]
Iteration 500 of 1000: loss=0.271 " + "l1=0.0263" + "l2=0.245 f=-0.443 shape=(1, 9000, 1)
logits [[ 0.02412994 -0.03174672  0.04908091 -1.8154494 ]]
Iteration 600 of 1000: loss=0.241 " + "l1=0.00363" + "l2=0.237 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.7768949e-03  1.0304172e-03  1.2212729e-02 -1.7767019e+00]]
Iteration 700 of 1000: loss=0.222 " + "l1=0.00249" + "l2=0.219 f=-0.438 shape=(1, 9000, 1)
logits [[ 6.9190804e-03 -2.1113083e-05  7.6491986e-03 -1.7655635e+00]]
Iteration 800 of 1000: loss=0.206 " + "l1=0.00115" + "l2=0.205 f=-0.436 shape=(1, 9000, 1)
logits [[ 0.00372098  0.00235769  0.00588399 -1.7557194 ]]
Iteration 900 of 1000: loss=0.196 " + "l1=0.00652" + "l2=0.19 f=-0.435 shape=(1, 9000, 1)
logits [[-0.00439704 -0.00785092  0.01220895 -1.7380036 ]]
--- 332.4773826599121 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0114 " + "l1=0.0114" + "l2=0 f=-0.378 shape=(1, 9000, 1)
logits [[ 2.5908082 -1.863661   1.45433   -3.693045 ]]
Iteration 100 of 1000: loss=0.0112 " + "l1=0.011" + "l2=0.000143 f=-0.379 shape=(1, 9000, 1)
logits [[ 2.5490327 -1.8470377  1.4443879 -3.6619985]]
Iteration 200 of 1000: loss=0.0111 " + "l1=0.011" + "l2=0.000121 f=-0.379 shape=(1, 9000, 1)
logits [[ 2.54462   -1.8444039  1.4426156 -3.6596808]]
Iteration 300 of 1000: loss=0.0111 " + "l1=0.011" + "l2=0.000152 f=-0.38 shape=(1, 9000, 1)
logits [[ 2.5372527 -1.8406625  1.4401641 -3.6549273]]
Iteration 400 of 1000: loss=0.0111 " + "l1=0.0109" + "l2=0.000207 f=-0.38 shape=(1, 9000, 1)
logits [[ 2.5294557 -1.8368534  1.4377024 -3.6498542]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.114 " + "l1=0.114" + "l2=0 f=-0.378 shape=(1, 9000, 1)
logits [[ 2.5908082 -1.863661   1.45433   -3.693045 ]]
Iteration 100 of 1000: loss=0.0992 " + "l1=0.0925" + "l2=0.00674 f=-0.385 shape=(1, 9000, 1)
logits [[ 2.319119  -1.7573863  1.394264  -3.4969943]]
Iteration 200 of 1000: loss=0.0928 " + "l1=0.0824" + "l2=0.0104 f=-0.391 shape=(1, 9000, 1)
logits [[ 2.1772125 -1.68154    1.353205  -3.4120355]]
Iteration 300 of 1000: loss=0.0871 " + "l1=0.0739" + "l2=0.0132 f=-0.396 shape=(1, 9000, 1)
logits [[ 2.0542862 -1.6052511  1.3151784 -3.348087 ]]
Iteration 400 of 1000: loss=0.0822 " + "l1=0.0665" + "l2=0.0157 f=-0.401 shape=(1, 9000, 1)
logits [[ 1.9524621 -1.5552642  1.2877252 -3.2886055]]
Iteration 500 of 1000: loss=0.0771 " + "l1=0.0584" + "l2=0.0187 f=-0.406 shape=(1, 9000, 1)
logits [[ 1.8407097 -1.498633   1.256311  -3.2217345]]
Iteration 600 of 1000: loss=0.0722 " + "l1=0.0509" + "l2=0.0213 f=-0.41 shape=(1, 9000, 1)
logits [[ 1.7342817 -1.443474   1.2255322 -3.1575274]]
Iteration 700 of 1000: loss=0.0676 " + "l1=0.045" + "l2=0.0227 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.6568168 -1.4123966  1.2072077 -3.108632 ]]
Iteration 800 of 1000: loss=0.0636 " + "l1=0.0396" + "l2=0.024 f=-0.419 shape=(1, 9000, 1)
logits [[ 1.5909419 -1.3920139  1.1950765 -3.0682642]]
Iteration 900 of 1000: loss=0.0598 " + "l1=0.0348" + "l2=0.025 f=-0.423 shape=(1, 9000, 1)
logits [[ 1.5395427 -1.3824824  1.1915652 -3.0409117]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.14 " + "l1=1.14" + "l2=0 f=-0.378 shape=(1, 9000, 1)
logits [[ 2.5908082 -1.863661   1.45433   -3.693045 ]]
Iteration 100 of 1000: loss=0.173 " + "l1=0" + "l2=0.173 f=-0.444 shape=(1, 9000, 1)
logits [[ 1.1304141 -1.1895988  1.139244  -2.8559315]]
Iteration 200 of 1000: loss=0.12 " + "l1=0" + "l2=0.12 f=-0.453 shape=(1, 9000, 1)
logits [[ 1.1372898 -1.1986947  1.1456199 -2.8960605]]
Iteration 300 of 1000: loss=0.0974 " + "l1=0" + "l2=0.0974 f=-0.455 shape=(1, 9000, 1)
logits [[ 1.1478332 -1.2076973  1.1518255 -2.9128113]]
Iteration 400 of 1000: loss=0.0852 " + "l1=0" + "l2=0.0852 f=-0.456 shape=(1, 9000, 1)
logits [[ 1.1439743 -1.2122306  1.152639  -2.9087434]]
Iteration 500 of 1000: loss=0.0767 " + "l1=0" + "l2=0.0767 f=-0.457 shape=(1, 9000, 1)
logits [[ 1.1469765 -1.2238508  1.1566693 -2.9077575]]
Iteration 600 of 1000: loss=0.0696 " + "l1=0" + "l2=0.0696 f=-0.456 shape=(1, 9000, 1)
logits [[ 1.1565094 -1.2338352  1.1622481 -2.9101183]]
Iteration 700 of 1000: loss=0.0653 " + "l1=0" + "l2=0.0653 f=-0.456 shape=(1, 9000, 1)
logits [[ 1.1536005 -1.237911   1.165298  -2.9046354]]
Iteration 800 of 1000: loss=0.0612 " + "l1=0" + "l2=0.0612 f=-0.455 shape=(1, 9000, 1)
logits [[ 1.1571544 -1.2454445  1.1706005 -2.9032712]]
Iteration 900 of 1000: loss=0.0574 " + "l1=0" + "l2=0.0574 f=-0.454 shape=(1, 9000, 1)
logits [[ 1.1675336 -1.2565069  1.180055  -2.9074075]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.625 " + "l1=0.625" + "l2=0 f=-0.378 shape=(1, 9000, 1)
logits [[ 2.5908082 -1.863661   1.45433   -3.693045 ]]
Iteration 100 of 1000: loss=0.168 " + "l1=0" + "l2=0.168 f=-0.443 shape=(1, 9000, 1)
logits [[ 1.1266652 -1.1729648  1.1287528 -2.8547583]]
Iteration 200 of 1000: loss=0.112 " + "l1=0" + "l2=0.112 f=-0.451 shape=(1, 9000, 1)
logits [[ 1.1326882 -1.1816249  1.1356959 -2.8910265]]
Iteration 300 of 1000: loss=0.0941 " + "l1=0.00407" + "l2=0.0901 f=-0.453 shape=(1, 9000, 1)
logits [[ 1.1509589 -1.1951468  1.1435647 -2.9098024]]
Iteration 400 of 1000: loss=0.0803 " + "l1=0.00208" + "l2=0.0782 f=-0.454 shape=(1, 9000, 1)
logits [[ 1.1466535 -1.1989058  1.1428716 -2.9047222]]
Iteration 500 of 1000: loss=0.0711 " + "l1=0" + "l2=0.0711 f=-0.454 shape=(1, 9000, 1)
logits [[ 1.1373367 -1.2034377  1.1441855 -2.8948362]]
Iteration 600 of 1000: loss=0.065 " + "l1=0" + "l2=0.065 f=-0.453 shape=(1, 9000, 1)
logits [[ 1.14321   -1.2150123  1.1496791 -2.8899481]]
Iteration 700 of 1000: loss=0.0624 " + "l1=0" + "l2=0.0624 f=-0.453 shape=(1, 9000, 1)
logits [[ 1.1303941 -1.2190256  1.1515318 -2.8759878]]
Iteration 800 of 1000: loss=0.0559 " + "l1=0" + "l2=0.0559 f=-0.451 shape=(1, 9000, 1)
logits [[ 1.1594514 -1.2388548  1.163486  -2.8876686]]
Iteration 900 of 1000: loss=0.054 " + "l1=0" + "l2=0.054 f=-0.451 shape=(1, 9000, 1)
logits [[ 1.1547508 -1.2489433  1.1713248 -2.8796282]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.369 " + "l1=0.369" + "l2=0 f=-0.378 shape=(1, 9000, 1)
logits [[ 2.5908082 -1.863661   1.45433   -3.693045 ]]
Iteration 100 of 1000: loss=0.208 " + "l1=0.127" + "l2=0.081 f=-0.41 shape=(1, 9000, 1)
logits [[ 1.603876  -1.3829956  1.2126317 -3.0751133]]
Iteration 200 of 1000: loss=0.119 " + "l1=0.00114" + "l2=0.118 f=-0.447 shape=(1, 9000, 1)
logits [[ 1.1341923 -1.1747241  1.1307    -2.8775887]]
Iteration 300 of 1000: loss=0.0914 " + "l1=0" + "l2=0.0914 f=-0.451 shape=(1, 9000, 1)
logits [[ 1.1257334 -1.1723398  1.1274607 -2.8864026]]
Iteration 400 of 1000: loss=0.0779 " + "l1=0.000226" + "l2=0.0776 f=-0.452 shape=(1, 9000, 1)
logits [[ 1.1313685 -1.1830326  1.1306746 -2.886578 ]]
Iteration 500 of 1000: loss=0.0691 " + "l1=0" + "l2=0.0691 f=-0.452 shape=(1, 9000, 1)
logits [[ 1.1311109 -1.1950271  1.1342947 -2.8792145]]
Iteration 600 of 1000: loss=0.0628 " + "l1=0.000805" + "l2=0.062 f=-0.45 shape=(1, 9000, 1)
logits [[ 1.1423625 -1.2099779  1.1398851 -2.8734484]]
Iteration 700 of 1000: loss=0.0575 " + "l1=0.00034" + "l2=0.0572 f=-0.449 shape=(1, 9000, 1)
logits [[ 1.1466447 -1.2207315  1.1455997 -2.867498 ]]
Iteration 800 of 1000: loss=0.0538 " + "l1=0" + "l2=0.0538 f=-0.448 shape=(1, 9000, 1)
logits [[ 1.1464185 -1.2307185  1.1516521 -2.861022 ]]
Iteration 900 of 1000: loss=0.0504 " + "l1=0.00103" + "l2=0.0494 f=-0.446 shape=(1, 9000, 1)
logits [[ 1.1646465 -1.2455034  1.1614726 -2.8639715]]
--- 299.52149653434753 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0628 " + "l1=0.0628" + "l2=0 f=-0.378 shape=(1, 9000, 1)
logits [[ 2.5908082 -1.863661   1.45433   -3.693045 ]]
Iteration 100 of 1000: loss=0.0613 " + "l1=0.0605" + "l2=0.000732 f=-0.375 shape=(1, 9000, 1)
logits [[ 2.4756846 -1.7910064  1.3936179 -3.5782125]]
Iteration 200 of 1000: loss=0.0607 " + "l1=0.0598" + "l2=0.000885 f=-0.374 shape=(1, 9000, 1)
logits [[ 2.4392934 -1.7636172  1.3714867 -3.543564 ]]
Iteration 300 of 1000: loss=0.0602 " + "l1=0.0591" + "l2=0.00109 f=-0.373 shape=(1, 9000, 1)
logits [[ 2.404567  -1.7396746  1.35085   -3.509427 ]]
Iteration 400 of 1000: loss=0.0598 " + "l1=0.0585" + "l2=0.00135 f=-0.373 shape=(1, 9000, 1)
logits [[ 2.3702595 -1.716859   1.3302956 -3.4749496]]
Iteration 500 of 1000: loss=0.0594 " + "l1=0.0578" + "l2=0.00162 f=-0.372 shape=(1, 9000, 1)
logits [[ 2.3364253 -1.6925465  1.3091311 -3.4411433]]
Iteration 600 of 1000: loss=0.059 " + "l1=0.0571" + "l2=0.00188 f=-0.371 shape=(1, 9000, 1)
logits [[ 2.3010888 -1.6673089  1.2876749 -3.4070907]]
Iteration 700 of 1000: loss=0.0586 " + "l1=0.0564" + "l2=0.00223 f=-0.371 shape=(1, 9000, 1)
logits [[ 2.2661695 -1.6435527  1.2674016 -3.373851 ]]
Iteration 800 of 1000: loss=0.0583 " + "l1=0.0557" + "l2=0.00255 f=-0.371 shape=(1, 9000, 1)
logits [[ 2.2319615 -1.620858   1.2470604 -3.341706 ]]
Iteration 900 of 1000: loss=0.058 " + "l1=0.0551" + "l2=0.00284 f=-0.371 shape=(1, 9000, 1)
logits [[ 2.201342  -1.6007262  1.2279557 -3.3125348]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.628 " + "l1=0.628" + "l2=0 f=-0.378 shape=(1, 9000, 1)
logits [[ 2.5908082 -1.863661   1.45433   -3.693045 ]]
Iteration 100 of 1000: loss=0.499 " + "l1=0.444" + "l2=0.0558 f=-0.366 shape=(1, 9000, 1)
logits [[ 1.6542419 -1.3330587  0.9977549 -2.7829528]]
Iteration 200 of 1000: loss=0.433 " + "l1=0.344" + "l2=0.0888 f=-0.378 shape=(1, 9000, 1)
logits [[ 1.1439533  -1.1122481   0.74977094 -2.2946706 ]]
Iteration 300 of 1000: loss=0.368 " + "l1=0.248" + "l2=0.12 f=-0.391 shape=(1, 9000, 1)
logits [[ 0.68552107 -0.9780607   0.52184314 -1.7934738 ]]
Iteration 400 of 1000: loss=0.306 " + "l1=0.173" + "l2=0.134 f=-0.386 shape=(1, 9000, 1)
logits [[ 0.37866113 -0.9436847   0.37204662 -1.3507432 ]]
Iteration 500 of 1000: loss=0.263 " + "l1=0.137" + "l2=0.126 f=-0.374 shape=(1, 9000, 1)
logits [[ 0.27619377 -0.9613301   0.2780132  -1.0895863 ]]
Iteration 600 of 1000: loss=0.23 " + "l1=0.111" + "l2=0.12 f=-0.364 shape=(1, 9000, 1)
logits [[ 0.20463112 -0.9805911   0.21320698 -0.89351654]]
Iteration 700 of 1000: loss=0.207 " + "l1=0.0925" + "l2=0.114 f=-0.356 shape=(1, 9000, 1)
logits [[ 0.16772696 -1.0056012   0.1695367  -0.755652  ]]
Iteration 800 of 1000: loss=0.187 " + "l1=0.0719" + "l2=0.115 f=-0.352 shape=(1, 9000, 1)
logits [[ 0.08276966 -1.0139351   0.12110403 -0.59743905]]
Iteration 900 of 1000: loss=0.169 " + "l1=0.0521" + "l2=0.117 f=-0.35 shape=(1, 9000, 1)
logits [[-0.01164151 -1.009339    0.07165583 -0.44923335]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.28 " + "l1=6.28" + "l2=0 f=-0.378 shape=(1, 9000, 1)
logits [[ 2.5908082 -1.863661   1.45433   -3.693045 ]]
Iteration 100 of 1000: loss=0.946 " + "l1=0" + "l2=0.946 f=-0.347 shape=(1, 9000, 1)
logits [[-0.3916508  -0.8140185  -0.10429485 -0.07838631]]
Iteration 200 of 1000: loss=0.589 " + "l1=0" + "l2=0.589 f=-0.35 shape=(1, 9000, 1)
logits [[-0.31606233 -0.8226921  -0.14327416 -0.11946145]]
Iteration 300 of 1000: loss=0.449 " + "l1=0" + "l2=0.449 f=-0.358 shape=(1, 9000, 1)
logits [[-0.2736178  -0.8511198  -0.16191068 -0.14387158]]
Iteration 400 of 1000: loss=0.369 " + "l1=0" + "l2=0.369 f=-0.366 shape=(1, 9000, 1)
logits [[-0.25254092 -0.88431084 -0.17138773 -0.15580627]]
Iteration 500 of 1000: loss=0.317 " + "l1=0" + "l2=0.317 f=-0.368 shape=(1, 9000, 1)
logits [[-0.23242843 -0.9111     -0.16924606 -0.16068432]]
Iteration 600 of 1000: loss=0.289 " + "l1=0" + "l2=0.289 f=-0.37 shape=(1, 9000, 1)
logits [[-0.2464686  -0.9322613  -0.17540465 -0.12396505]]
Iteration 700 of 1000: loss=0.254 " + "l1=0" + "l2=0.254 f=-0.37 shape=(1, 9000, 1)
logits [[-0.2194752  -0.9602309  -0.15919118 -0.14225861]]
Iteration 800 of 1000: loss=0.231 " + "l1=0" + "l2=0.231 f=-0.37 shape=(1, 9000, 1)
logits [[-0.21227713 -0.9792681  -0.15425663 -0.135398  ]]
Iteration 900 of 1000: loss=0.217 " + "l1=0.00822" + "l2=0.209 f=-0.37 shape=(1, 9000, 1)
logits [[-0.18891668 -1.0015386  -0.14077294 -0.1489912 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.46 " + "l1=3.46" + "l2=0 f=-0.378 shape=(1, 9000, 1)
logits [[ 2.5908082 -1.863661   1.45433   -3.693045 ]]
Iteration 100 of 1000: loss=0.891 " + "l1=0.0888" + "l2=0.802 f=-0.343 shape=(1, 9000, 1)
logits [[-0.27448365 -0.8016901  -0.06672896 -0.22822991]]
Iteration 200 of 1000: loss=0.49 " + "l1=0" + "l2=0.49 f=-0.354 shape=(1, 9000, 1)
logits [[-0.3055862  -0.85155016 -0.1392595  -0.11827765]]
Iteration 300 of 1000: loss=0.364 " + "l1=0.00806" + "l2=0.356 f=-0.361 shape=(1, 9000, 1)
logits [[-0.24087301 -0.9004549  -0.14329165 -0.15794918]]
Iteration 400 of 1000: loss=0.295 " + "l1=0" + "l2=0.295 f=-0.367 shape=(1, 9000, 1)
logits [[-0.23808089 -0.93665093 -0.15146236 -0.13985166]]
Iteration 500 of 1000: loss=0.255 " + "l1=0" + "l2=0.255 f=-0.369 shape=(1, 9000, 1)
logits [[-0.23510219 -0.9679838  -0.15055954 -0.12375466]]
Iteration 600 of 1000: loss=0.227 " + "l1=0" + "l2=0.227 f=-0.37 shape=(1, 9000, 1)
logits [[-0.23036437 -0.99723095 -0.14592844 -0.10744382]]
Iteration 700 of 1000: loss=0.201 " + "l1=0" + "l2=0.201 f=-0.369 shape=(1, 9000, 1)
logits [[-0.20541778 -1.0258105  -0.12761633 -0.11872656]]
Iteration 800 of 1000: loss=0.187 " + "l1=0" + "l2=0.187 f=-0.37 shape=(1, 9000, 1)
logits [[-0.21660748 -1.0451359  -0.11948492 -0.09736397]]
Iteration 900 of 1000: loss=0.176 " + "l1=0" + "l2=0.176 f=-0.369 shape=(1, 9000, 1)
logits [[-0.23149276 -1.0566747  -0.11574333 -0.07184713]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.04 " + "l1=2.04" + "l2=0 f=-0.378 shape=(1, 9000, 1)
logits [[ 2.5908082 -1.863661   1.45433   -3.693045 ]]
Iteration 100 of 1000: loss=0.877 " + "l1=0.458" + "l2=0.419 f=-0.371 shape=(1, 9000, 1)
logits [[ 0.23560399 -0.8094047   0.24971752 -1.1602453 ]]
Iteration 200 of 1000: loss=0.522 " + "l1=0.0748" + "l2=0.448 f=-0.351 shape=(1, 9000, 1)
logits [[-0.20416568 -0.8469007  -0.0610254  -0.2911182 ]]
Iteration 300 of 1000: loss=0.333 " + "l1=0.00142" + "l2=0.331 f=-0.357 shape=(1, 9000, 1)
logits [[-0.23480043 -0.9213037  -0.13292687 -0.1372999 ]]
Iteration 400 of 1000: loss=0.263 " + "l1=0.00567" + "l2=0.257 f=-0.362 shape=(1, 9000, 1)
logits [[-0.21219778 -0.9700529  -0.12514311 -0.1425767 ]]
Iteration 500 of 1000: loss=0.219 " + "l1=0" + "l2=0.219 f=-0.366 shape=(1, 9000, 1)
logits [[-0.21659896 -1.0041109  -0.12117106 -0.12014125]]
Iteration 600 of 1000: loss=0.195 " + "l1=0" + "l2=0.195 f=-0.365 shape=(1, 9000, 1)
logits [[-0.21913359 -1.0320337  -0.11080268 -0.1000068 ]]
Iteration 700 of 1000: loss=0.178 " + "l1=0.00191" + "l2=0.176 f=-0.366 shape=(1, 9000, 1)
logits [[-0.21904066 -1.0517266  -0.09400883 -0.09989502]]
Iteration 800 of 1000: loss=0.164 " + "l1=0" + "l2=0.164 f=-0.365 shape=(1, 9000, 1)
logits [[-0.22852549 -1.0619633  -0.08954769 -0.08119629]]
Iteration 900 of 1000: loss=0.154 " + "l1=0" + "l2=0.154 f=-0.364 shape=(1, 9000, 1)
logits [[-0.23073526 -1.0666516  -0.08313295 -0.07354623]]
--- 340.1135263442993 seconds ---
Adv result:3
