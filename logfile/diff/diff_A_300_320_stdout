Updating 7b65ebe..8764e12
Fast-forward
 EOT_adv/EOTtile_eval.py | 16 +++++++---------
 EOT_tile-test.py        | 20 ++++++++++----------
 EOT_tile.py             |  7 ++++---
 EOT_tile_tf.py          |  7 ++++---
 4 files changed, 25 insertions(+), 25 deletions(-)
Loading model
Loading ground truth file
Attack diff is running...
Loading record A06146
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0815 " + "l1=0.0815" + "l2=0 f=-0.786 shape=(1, 9000, 1)
logits [[ 5.393531  -2.754066   3.0391934 -8.823188 ]]
Iteration 100 of 1000: loss=0.0811 " + "l1=0.0808" + "l2=0.000278 f=-0.783 shape=(1, 9000, 1)
logits [[ 5.3561716 -2.726339   3.0148551 -8.778389 ]]
Iteration 200 of 1000: loss=0.081 " + "l1=0.0807" + "l2=0.000278 f=-0.783 shape=(1, 9000, 1)
logits [[ 5.3514895 -2.7228312  3.0118113 -8.772347 ]]
Iteration 300 of 1000: loss=0.081 " + "l1=0.0806" + "l2=0.000324 f=-0.782 shape=(1, 9000, 1)
logits [[ 5.3448553 -2.7187884  3.007885  -8.763905 ]]
Iteration 400 of 1000: loss=0.0809 " + "l1=0.0805" + "l2=0.000403 f=-0.782 shape=(1, 9000, 1)
logits [[ 5.337971  -2.7152007  3.0042427 -8.755229 ]]
Iteration 500 of 1000: loss=0.0809 " + "l1=0.0804" + "l2=0.000485 f=-0.782 shape=(1, 9000, 1)
logits [[ 5.331134  -2.7118962  3.0007951 -8.746692 ]]
Iteration 600 of 1000: loss=0.0809 " + "l1=0.0803" + "l2=0.000588 f=-0.781 shape=(1, 9000, 1)
logits [[ 5.3242455 -2.7088273  2.9975874 -8.738244 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.815 " + "l1=0.815" + "l2=0 f=-0.786 shape=(1, 9000, 1)
logits [[ 5.393531  -2.754066   3.0391934 -8.823188 ]]
Iteration 100 of 1000: loss=0.78 " + "l1=0.758" + "l2=0.0217 f=-0.758 shape=(1, 9000, 1)
logits [[ 5.068401  -2.5127912  2.8366466 -8.425393 ]]
Iteration 200 of 1000: loss=0.766 " + "l1=0.735" + "l2=0.0315 f=-0.739 shape=(1, 9000, 1)
logits [[ 4.9321256 -2.4140496  2.7587645 -8.233146 ]]
Iteration 300 of 1000: loss=0.754 " + "l1=0.718" + "l2=0.0367 f=-0.73 shape=(1, 9000, 1)
logits [[ 4.8068705 -2.3690872  2.7079504 -8.065915 ]]
Iteration 400 of 1000: loss=0.744 " + "l1=0.702" + "l2=0.0416 f=-0.722 shape=(1, 9000, 1)
logits [[ 4.6846147 -2.3355086  2.6622484 -7.899189 ]]
Iteration 500 of 1000: loss=0.734 " + "l1=0.688" + "l2=0.0458 f=-0.715 shape=(1, 9000, 1)
logits [[ 4.573046  -2.3090568  2.625245  -7.750143 ]]
Iteration 600 of 1000: loss=0.725 " + "l1=0.674" + "l2=0.0505 f=-0.706 shape=(1, 9000, 1)
logits [[ 4.4579716 -2.2827218  2.591308  -7.5902057]]
Iteration 700 of 1000: loss=0.716 " + "l1=0.66" + "l2=0.0556 f=-0.697 shape=(1, 9000, 1)
logits [[ 4.3406267 -2.258938   2.5569012 -7.427293 ]]
Iteration 800 of 1000: loss=0.706 " + "l1=0.647" + "l2=0.0592 f=-0.689 shape=(1, 9000, 1)
logits [[ 4.230656  -2.2409015  2.5305264 -7.2743793]]
Iteration 900 of 1000: loss=0.698 " + "l1=0.636" + "l2=0.062 f=-0.681 shape=(1, 9000, 1)
logits [[ 4.1302013 -2.2303557  2.5097544 -7.132045 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.15 " + "l1=8.15" + "l2=0 f=-0.786 shape=(1, 9000, 1)
logits [[ 5.393531  -2.754066   3.0391934 -8.823188 ]]
Iteration 100 of 1000: loss=4.7 " + "l1=2.84" + "l2=1.86 f=-0.597 shape=(1, 9000, 1)
logits [[ 1.7898169 -1.0509439  1.4993539 -4.6279597]]
Iteration 200 of 1000: loss=3.5 " + "l1=1.61" + "l2=1.89 f=-0.526 shape=(1, 9000, 1)
logits [[ 1.024267   -0.58145356  1.0317476  -3.5794656 ]]
Iteration 300 of 1000: loss=2.92 " + "l1=1.16" + "l2=1.76 f=-0.495 shape=(1, 9000, 1)
logits [[ 0.7767953  -0.38066125  0.77995396 -3.1543527 ]]
Iteration 400 of 1000: loss=2.64 " + "l1=0.92" + "l2=1.72 f=-0.478 shape=(1, 9000, 1)
logits [[ 0.62118894 -0.29806903  0.62153614 -2.8566835 ]]
Iteration 500 of 1000: loss=2.48 " + "l1=0.79" + "l2=1.69 f=-0.467 shape=(1, 9000, 1)
logits [[ 0.5479615  -0.24125941  0.5485946  -2.7226932 ]]
Iteration 600 of 1000: loss=2.39 " + "l1=0.681" + "l2=1.7 f=-0.462 shape=(1, 9000, 1)
logits [[ 0.48789957 -0.19004022  0.49063912 -2.6365218 ]]
Iteration 700 of 1000: loss=2.32 " + "l1=0.625" + "l2=1.69 f=-0.462 shape=(1, 9000, 1)
logits [[ 0.4371353  -0.16925675  0.45610058 -2.5709133 ]]
Iteration 800 of 1000: loss=2.26 " + "l1=0.579" + "l2=1.68 f=-0.46 shape=(1, 9000, 1)
logits [[ 0.428207   -0.15097614  0.4279903  -2.5437086 ]]
Iteration 900 of 1000: loss=2.19 " + "l1=0.524" + "l2=1.67 f=-0.46 shape=(1, 9000, 1)
logits [[ 0.3747811  -0.13134713  0.39272803 -2.4757192 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=81.5 " + "l1=81.5" + "l2=0 f=-0.786 shape=(1, 9000, 1)
logits [[ 5.393531  -2.754066   3.0391934 -8.823188 ]]
Iteration 100 of 1000: loss=9.98 " + "l1=0.275" + "l2=9.71 f=-0.467 shape=(1, 9000, 1)
logits [[ 0.19929898  0.28760868  0.3151318  -2.6693146 ]]
Iteration 200 of 1000: loss=6.27 " + "l1=0" + "l2=6.27 f=-0.497 shape=(1, 9000, 1)
logits [[ 0.16298531  0.28000313  0.2644411  -2.6937199 ]]
Iteration 300 of 1000: loss=5.09 " + "l1=0" + "l2=5.09 f=-0.498 shape=(1, 9000, 1)
logits [[ 0.20332122  0.26690498  0.25186947 -2.713597  ]]
Iteration 400 of 1000: loss=4.55 " + "l1=0" + "l2=4.55 f=-0.497 shape=(1, 9000, 1)
logits [[ 0.0974504   0.25695318  0.22770569 -2.571076  ]]
Iteration 500 of 1000: loss=4.13 " + "l1=0" + "l2=4.13 f=-0.494 shape=(1, 9000, 1)
logits [[ 0.10686539  0.24816652  0.23306623 -2.562719  ]]
Iteration 600 of 1000: loss=3.86 " + "l1=0" + "l2=3.86 f=-0.495 shape=(1, 9000, 1)
logits [[ 0.03914082  0.22477749  0.21855107 -2.4609454 ]]
Iteration 700 of 1000: loss=3.54 " + "l1=0" + "l2=3.54 f=-0.479 shape=(1, 9000, 1)
logits [[ 0.18974599  0.21694694  0.21537735 -2.5395    ]]
Iteration 800 of 1000: loss=3.41 " + "l1=0.0514" + "l2=3.36 f=-0.487 shape=(1, 9000, 1)
logits [[ 0.10013362  0.21243526  0.21757038 -2.4784443 ]]
Iteration 900 of 1000: loss=3.27 " + "l1=0" + "l2=3.27 f=-0.484 shape=(1, 9000, 1)
logits [[ 0.09694658  0.21930517  0.20310049 -2.4553778 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=44.8 " + "l1=44.8" + "l2=0 f=-0.786 shape=(1, 9000, 1)
logits [[ 5.393531  -2.754066   3.0391934 -8.823188 ]]
Iteration 100 of 1000: loss=8.93 " + "l1=2.02" + "l2=6.91 f=-0.476 shape=(1, 9000, 1)
logits [[ 0.4620998   0.11995187  0.48789716 -2.975889  ]]
Iteration 200 of 1000: loss=5.09 " + "l1=0" + "l2=5.09 f=-0.497 shape=(1, 9000, 1)
logits [[ 0.23847115  0.2733079   0.26500183 -2.762954  ]]
Iteration 300 of 1000: loss=4.23 " + "l1=0" + "l2=4.23 f=-0.497 shape=(1, 9000, 1)
logits [[ 0.15967798  0.25189295  0.24182816 -2.6408436 ]]
Iteration 400 of 1000: loss=3.78 " + "l1=0" + "l2=3.78 f=-0.487 shape=(1, 9000, 1)
logits [[ 0.1380583   0.24596643  0.22650455 -2.559375  ]]
Iteration 500 of 1000: loss=3.46 " + "l1=0" + "l2=3.46 f=-0.477 shape=(1, 9000, 1)
logits [[ 0.17217675  0.2381406   0.21446785 -2.5318294 ]]
Iteration 600 of 1000: loss=3.22 " + "l1=0" + "l2=3.22 f=-0.482 shape=(1, 9000, 1)
logits [[ 0.10759705  0.21391974  0.21258603 -2.4607682 ]]
Iteration 700 of 1000: loss=3.13 " + "l1=0.0915" + "l2=3.04 f=-0.47 shape=(1, 9000, 1)
logits [[ 0.21354777  0.19691463  0.21035364 -2.500776  ]]
Iteration 800 of 1000: loss=2.99 " + "l1=0" + "l2=2.99 f=-0.476 shape=(1, 9000, 1)
logits [[ 0.09371146  0.19536954  0.19394931 -2.3867905 ]]
Iteration 900 of 1000: loss=2.91 " + "l1=0" + "l2=2.91 f=-0.469 shape=(1, 9000, 1)
logits [[ 0.13380954  0.18659742  0.18311311 -2.3790731 ]]
--- 260.04362893104553 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0235 " + "l1=0.0235" + "l2=0 f=-0.786 shape=(1, 9000, 1)
logits [[ 5.393531  -2.754066   3.0391934 -8.823188 ]]
Iteration 100 of 1000: loss=0.0233 " + "l1=0.0231" + "l2=0.00018 f=-0.788 shape=(1, 9000, 1)
logits [[ 5.36545   -2.768244   3.0513277 -8.799513 ]]
Iteration 200 of 1000: loss=0.0233 " + "l1=0.0231" + "l2=0.000162 f=-0.788 shape=(1, 9000, 1)
logits [[ 5.3623967 -2.769579   3.0526457 -8.796632 ]]
Iteration 300 of 1000: loss=0.0232 " + "l1=0.023" + "l2=0.000184 f=-0.788 shape=(1, 9000, 1)
logits [[ 5.357264  -2.7719579  3.054773  -8.791737 ]]
Iteration 400 of 1000: loss=0.0232 " + "l1=0.0229" + "l2=0.00026 f=-0.788 shape=(1, 9000, 1)
logits [[ 5.3517737 -2.7744474  3.0569692 -8.7864895]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.235 " + "l1=0.235" + "l2=0 f=-0.786 shape=(1, 9000, 1)
logits [[ 5.393531  -2.754066   3.0391934 -8.823188 ]]
Iteration 100 of 1000: loss=0.214 " + "l1=0.202" + "l2=0.0121 f=-0.805 shape=(1, 9000, 1)
logits [[ 5.1576786 -2.8723488  3.1353068 -8.640716 ]]
Iteration 200 of 1000: loss=0.205 " + "l1=0.189" + "l2=0.0164 f=-0.811 shape=(1, 9000, 1)
logits [[ 5.053257  -2.9148412  3.1627562 -8.544206 ]]
Iteration 300 of 1000: loss=0.197 " + "l1=0.178" + "l2=0.0196 f=-0.814 shape=(1, 9000, 1)
logits [[ 4.960769  -2.950387   3.1838365 -8.450031 ]]
Iteration 400 of 1000: loss=0.19 " + "l1=0.167" + "l2=0.0229 f=-0.815 shape=(1, 9000, 1)
logits [[ 4.871627  -2.9821644  3.2039607 -8.354387 ]]
Iteration 500 of 1000: loss=0.183 " + "l1=0.158" + "l2=0.0249 f=-0.816 shape=(1, 9000, 1)
logits [[ 4.795574  -3.0007546  3.2125385 -8.270867 ]]
Iteration 600 of 1000: loss=0.177 " + "l1=0.151" + "l2=0.0265 f=-0.817 shape=(1, 9000, 1)
logits [[ 4.7258577 -3.014643   3.2163165 -8.196527 ]]
Iteration 700 of 1000: loss=0.172 " + "l1=0.143" + "l2=0.0283 f=-0.817 shape=(1, 9000, 1)
logits [[ 4.6521816 -3.028352   3.219117  -8.112796 ]]
Iteration 800 of 1000: loss=0.165 " + "l1=0.135" + "l2=0.0304 f=-0.817 shape=(1, 9000, 1)
logits [[ 4.574816  -3.04727    3.2244344 -8.020874 ]]
Iteration 900 of 1000: loss=0.159 " + "l1=0.127" + "l2=0.0321 f=-0.817 shape=(1, 9000, 1)
logits [[ 4.493193  -3.065057   3.227946  -7.9253044]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.35 " + "l1=2.35" + "l2=0 f=-0.786 shape=(1, 9000, 1)
logits [[ 5.393531  -2.754066   3.0391934 -8.823188 ]]
Iteration 100 of 1000: loss=0.639 " + "l1=0.000903" + "l2=0.638 f=-0.896 shape=(1, 9000, 1)
logits [[ 3.536026  -3.5755992  3.535123  -7.081396 ]]
Iteration 200 of 1000: loss=0.384 " + "l1=0" + "l2=0.384 f=-0.867 shape=(1, 9000, 1)
logits [[ 3.491729  -3.5098732  3.5070248 -6.9570055]]
Iteration 300 of 1000: loss=0.282 " + "l1=0" + "l2=0.282 f=-0.85 shape=(1, 9000, 1)
logits [[ 3.4628334 -3.4638548  3.4711344 -6.869592 ]]
Iteration 400 of 1000: loss=0.229 " + "l1=0.00762" + "l2=0.222 f=-0.834 shape=(1, 9000, 1)
logits [[ 3.4500237 -3.4124384  3.4424076 -6.8165264]]
Iteration 500 of 1000: loss=0.194 " + "l1=0" + "l2=0.194 f=-0.824 shape=(1, 9000, 1)
logits [[ 3.401407  -3.3750381  3.425846  -6.7497582]]
Iteration 600 of 1000: loss=0.168 " + "l1=0" + "l2=0.168 f=-0.822 shape=(1, 9000, 1)
logits [[ 3.3934317 -3.3513165  3.4037828 -6.7342997]]
Iteration 700 of 1000: loss=0.153 " + "l1=0" + "l2=0.153 f=-0.822 shape=(1, 9000, 1)
logits [[ 3.3669317 -3.3370664  3.3871171 -6.7033234]]
Iteration 800 of 1000: loss=0.138 " + "l1=0" + "l2=0.138 f=-0.82 shape=(1, 9000, 1)
logits [[ 3.3513951 -3.321391   3.369813  -6.681536 ]]
Iteration 900 of 1000: loss=0.127 " + "l1=0" + "l2=0.127 f=-0.82 shape=(1, 9000, 1)
logits [[ 3.3381953 -3.3088312  3.3536658 -6.663467 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.29 " + "l1=1.29" + "l2=0 f=-0.786 shape=(1, 9000, 1)
logits [[ 5.393531  -2.754066   3.0391934 -8.823188 ]]
Iteration 100 of 1000: loss=0.695 " + "l1=0.392" + "l2=0.303 f=-0.885 shape=(1, 9000, 1)
logits [[ 4.128041  -3.3860123  3.4155917 -7.699458 ]]
Iteration 200 of 1000: loss=0.418 " + "l1=0.0292" + "l2=0.388 f=-0.875 shape=(1, 9000, 1)
logits [[ 3.550928  -3.5250373  3.4977803 -7.0226846]]
Iteration 300 of 1000: loss=0.268 " + "l1=0.00201" + "l2=0.266 f=-0.853 shape=(1, 9000, 1)
logits [[ 3.4864058 -3.4749825  3.4827456 -6.9073253]]
Iteration 400 of 1000: loss=0.207 " + "l1=0" + "l2=0.207 f=-0.84 shape=(1, 9000, 1)
logits [[ 3.4492736 -3.426011   3.4549632 -6.839918 ]]
Iteration 500 of 1000: loss=0.171 " + "l1=0" + "l2=0.171 f=-0.837 shape=(1, 9000, 1)
logits [[ 3.422943 -3.396835  3.430307 -6.803272]]
Iteration 600 of 1000: loss=0.146 " + "l1=0.000918" + "l2=0.146 f=-0.835 shape=(1, 9000, 1)
logits [[ 3.4061325 -3.3736815  3.4044642 -6.7752085]]
Iteration 700 of 1000: loss=0.128 " + "l1=0.000534" + "l2=0.128 f=-0.833 shape=(1, 9000, 1)
logits [[ 3.3821123 -3.355308   3.381142  -6.7411985]]
Iteration 800 of 1000: loss=0.115 " + "l1=0" + "l2=0.115 f=-0.834 shape=(1, 9000, 1)
logits [[ 3.3611844 -3.342189   3.3651578 -6.7197328]]
Iteration 900 of 1000: loss=0.106 " + "l1=0" + "l2=0.106 f=-0.839 shape=(1, 9000, 1)
logits [[ 3.3456407 -3.3399796  3.358061  -6.720287 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.765 " + "l1=0.765" + "l2=0 f=-0.786 shape=(1, 9000, 1)
logits [[ 5.393531  -2.754066   3.0391934 -8.823188 ]]
Iteration 100 of 1000: loss=0.541 " + "l1=0.422" + "l2=0.119 f=-0.852 shape=(1, 9000, 1)
logits [[ 4.5848875 -3.1238928  3.2860432 -8.153646 ]]
Iteration 200 of 1000: loss=0.451 " + "l1=0.305" + "l2=0.146 f=-0.86 shape=(1, 9000, 1)
logits [[ 4.2996607 -3.2651374  3.3625216 -7.835795 ]]
Iteration 300 of 1000: loss=0.366 " + "l1=0.187" + "l2=0.179 f=-0.857 shape=(1, 9000, 1)
logits [[ 3.9882574 -3.3610456  3.4127643 -7.4688644]]
Iteration 400 of 1000: loss=0.277 " + "l1=0.0695" + "l2=0.207 f=-0.853 shape=(1, 9000, 1)
logits [[ 3.6394136 -3.4241862  3.4255161 -7.0517893]]
Iteration 500 of 1000: loss=0.194 " + "l1=0.00288" + "l2=0.191 f=-0.834 shape=(1, 9000, 1)
logits [[ 3.4228747 -3.3997178  3.4140167 -6.772293 ]]
Iteration 600 of 1000: loss=0.158 " + "l1=0.00431" + "l2=0.154 f=-0.824 shape=(1, 9000, 1)
logits [[ 3.390383  -3.3529236  3.3771365 -6.71129  ]]
Iteration 700 of 1000: loss=0.135 " + "l1=0.00179" + "l2=0.134 f=-0.821 shape=(1, 9000, 1)
logits [[ 3.3545291 -3.3251405  3.3490272 -6.662912 ]]
Iteration 800 of 1000: loss=0.121 " + "l1=0.00104" + "l2=0.12 f=-0.82 shape=(1, 9000, 1)
logits [[ 3.327371  -3.3017995  3.324177  -6.627912 ]]
Iteration 900 of 1000: loss=0.11 " + "l1=0.000938" + "l2=0.109 f=-0.819 shape=(1, 9000, 1)
logits [[ 3.3068204 -3.285528   3.3039346 -6.6026053]]
--- 250.3268654346466 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.142 " + "l1=0.142" + "l2=0 f=-0.786 shape=(1, 9000, 1)
logits [[ 5.393531  -2.754066   3.0391934 -8.823188 ]]
Iteration 100 of 1000: loss=0.141 " + "l1=0.141" + "l2=0.000598 f=-0.782 shape=(1, 9000, 1)
logits [[ 5.3284464 -2.7458243  3.0172253 -8.727619 ]]
Iteration 200 of 1000: loss=0.141 " + "l1=0.14" + "l2=0.000651 f=-0.781 shape=(1, 9000, 1)
logits [[ 5.314314  -2.7458518  3.0130985 -8.705565 ]]
Iteration 300 of 1000: loss=0.141 " + "l1=0.14" + "l2=0.000779 f=-0.78 shape=(1, 9000, 1)
logits [[ 5.2972646 -2.7459583  3.0081313 -8.678583 ]]
Iteration 400 of 1000: loss=0.14 " + "l1=0.139" + "l2=0.000959 f=-0.779 shape=(1, 9000, 1)
logits [[ 5.2792897 -2.7467673  3.0032623 -8.650324 ]]
Iteration 500 of 1000: loss=0.14 " + "l1=0.139" + "l2=0.00116 f=-0.777 shape=(1, 9000, 1)
logits [[ 5.2609863 -2.7480538  2.9983256 -8.620683 ]]
Iteration 600 of 1000: loss=0.14 " + "l1=0.138" + "l2=0.00134 f=-0.776 shape=(1, 9000, 1)
logits [[ 5.2425275 -2.7492929  2.993422  -8.590734 ]]
Iteration 700 of 1000: loss=0.139 " + "l1=0.138" + "l2=0.00161 f=-0.775 shape=(1, 9000, 1)
logits [[ 5.2242312 -2.7510178  2.9888356 -8.560662 ]]
Iteration 800 of 1000: loss=0.139 " + "l1=0.137" + "l2=0.00183 f=-0.773 shape=(1, 9000, 1)
logits [[ 5.204794  -2.752786   2.9844184 -8.528903 ]]
Iteration 900 of 1000: loss=0.139 " + "l1=0.137" + "l2=0.00209 f=-0.772 shape=(1, 9000, 1)
logits [[ 5.1865616 -2.7543867  2.9804144 -8.498708 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.42 " + "l1=1.42" + "l2=0 f=-0.786 shape=(1, 9000, 1)
logits [[ 5.393531  -2.754066   3.0391934 -8.823188 ]]
Iteration 100 of 1000: loss=1.31 " + "l1=1.24" + "l2=0.0659 f=-0.741 shape=(1, 9000, 1)
logits [[ 4.665628  -2.6598709  2.806651  -7.7783527]]
Iteration 200 of 1000: loss=1.25 " + "l1=1.16" + "l2=0.0906 f=-0.703 shape=(1, 9000, 1)
logits [[ 4.332458  -2.6257665  2.7138822 -7.232229 ]]
Iteration 300 of 1000: loss=1.19 " + "l1=1.08" + "l2=0.11 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.036923  -2.6209753  2.6338542 -6.72385  ]]
Iteration 400 of 1000: loss=1.13 " + "l1=1" + "l2=0.124 f=-0.633 shape=(1, 9000, 1)
logits [[ 3.7750266 -2.62244    2.5533545 -6.2365746]]
Iteration 500 of 1000: loss=1.07 " + "l1=0.935" + "l2=0.139 f=-0.598 shape=(1, 9000, 1)
logits [[ 3.5434976 -2.5907254  2.4652095 -5.808836 ]]
Iteration 600 of 1000: loss=1.03 " + "l1=0.874" + "l2=0.156 f=-0.561 shape=(1, 9000, 1)
logits [[ 3.334114  -2.5502625  2.3796136 -5.406092 ]]
Iteration 700 of 1000: loss=0.992 " + "l1=0.817" + "l2=0.175 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.1443713 -2.5239873  2.2943072 -5.022799 ]]
Iteration 800 of 1000: loss=0.953 " + "l1=0.759" + "l2=0.194 f=-0.496 shape=(1, 9000, 1)
logits [[ 2.943556  -2.497706   2.212731  -4.6436543]]
Iteration 900 of 1000: loss=0.914 " + "l1=0.698" + "l2=0.216 f=-0.467 shape=(1, 9000, 1)
logits [[ 2.727231  -2.4707854  2.1264415 -4.2512517]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=14.2 " + "l1=14.2" + "l2=0 f=-0.786 shape=(1, 9000, 1)
logits [[ 5.393531  -2.754066   3.0391934 -8.823188 ]]
Iteration 100 of 1000: loss=5.48 " + "l1=2.18" + "l2=3.31 f=-0.377 shape=(1, 9000, 1)
logits [[ 0.63375354 -1.8137764   0.9241583  -1.253915  ]]
Iteration 200 of 1000: loss=3.02 " + "l1=0.0737" + "l2=2.95 f=-0.334 shape=(1, 9000, 1)
logits [[-0.19385058 -1.5826398   0.2562922   0.18257236]]
Iteration 300 of 1000: loss=2.21 " + "l1=0.0132" + "l2=2.2 f=-0.346 shape=(1, 9000, 1)
logits [[-0.2277645  -1.5428971   0.20067464  0.18751734]]
Iteration 400 of 1000: loss=1.87 " + "l1=0.0327" + "l2=1.83 f=-0.336 shape=(1, 9000, 1)
logits [[-0.19981715 -1.545442    0.21776922  0.18504968]]
Iteration 500 of 1000: loss=1.64 " + "l1=0" + "l2=1.64 f=-0.325 shape=(1, 9000, 1)
logits [[-0.20009845 -1.5533493   0.21015605  0.2433081 ]]
Iteration 600 of 1000: loss=1.5 " + "l1=0.00541" + "l2=1.49 f=-0.314 shape=(1, 9000, 1)
logits [[-0.15540361 -1.5720341   0.23800239  0.23259345]]
Iteration 700 of 1000: loss=1.42 " + "l1=0" + "l2=1.42 f=-0.308 shape=(1, 9000, 1)
logits [[-0.17651391 -1.5815917   0.24686195  0.27974778]]
Iteration 800 of 1000: loss=1.36 " + "l1=0.00834" + "l2=1.35 f=-0.301 shape=(1, 9000, 1)
logits [[-0.15505949 -1.5934709   0.2770173   0.26867986]]
Iteration 900 of 1000: loss=1.3 " + "l1=0" + "l2=1.3 f=-0.295 shape=(1, 9000, 1)
logits [[-0.16265836 -1.5954055   0.28900358  0.28998566]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.82 " + "l1=7.82" + "l2=0 f=-0.786 shape=(1, 9000, 1)
logits [[ 5.393531  -2.754066   3.0391934 -8.823188 ]]
Iteration 100 of 1000: loss=4.58 " + "l1=2.91" + "l2=1.67 f=-0.501 shape=(1, 9000, 1)
logits [[ 1.8224081 -2.1514244  1.7948829 -3.4696722]]
Iteration 200 of 1000: loss=3.04 " + "l1=1.29" + "l2=1.75 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.8753068 -1.8560109  0.9354741 -1.4145497]]
Iteration 300 of 1000: loss=2.15 " + "l1=0.312" + "l2=1.83 f=-0.351 shape=(1, 9000, 1)
logits [[ 0.06660311 -1.6762993   0.3852569  -0.18117326]]
Iteration 400 of 1000: loss=1.65 " + "l1=0.00588" + "l2=1.65 f=-0.314 shape=(1, 9000, 1)
logits [[-0.20468315 -1.539426    0.24899058  0.23830238]]
Iteration 500 of 1000: loss=1.44 " + "l1=0.0128" + "l2=1.42 f=-0.296 shape=(1, 9000, 1)
logits [[-0.17861524 -1.5397877   0.278184    0.25484675]]
Iteration 600 of 1000: loss=1.32 " + "l1=0.023" + "l2=1.3 f=-0.29 shape=(1, 9000, 1)
logits [[-0.16831121 -1.5544695   0.3026717   0.26084208]]
Iteration 700 of 1000: loss=1.23 " + "l1=0" + "l2=1.23 f=-0.285 shape=(1, 9000, 1)
logits [[-0.19035397 -1.5558401   0.30150393  0.3065014 ]]
Iteration 800 of 1000: loss=1.16 " + "l1=0.00272" + "l2=1.16 f=-0.283 shape=(1, 9000, 1)
logits [[-0.19994016 -1.5678283   0.31948808  0.31454074]]
Iteration 900 of 1000: loss=1.1 " + "l1=0.00573" + "l2=1.09 f=-0.283 shape=(1, 9000, 1)
logits [[-0.20574641 -1.5773741   0.33078423  0.3203578 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.62 " + "l1=4.62" + "l2=0 f=-0.786 shape=(1, 9000, 1)
logits [[ 5.393531  -2.754066   3.0391934 -8.823188 ]]
Iteration 100 of 1000: loss=3.43 " + "l1=2.79" + "l2=0.639 f=-0.619 shape=(1, 9000, 1)
logits [[ 3.1230445 -2.4139931  2.2884686 -5.4739065]]
Iteration 200 of 1000: loss=2.71 " + "l1=1.75" + "l2=0.954 f=-0.484 shape=(1, 9000, 1)
logits [[ 1.9556954 -2.3430052  1.8860132 -3.4361742]]
Iteration 300 of 1000: loss=2.11 " + "l1=1.11" + "l2=1 f=-0.376 shape=(1, 9000, 1)
logits [[ 1.3346329 -2.0994039  1.3289889 -2.0700517]]
Iteration 400 of 1000: loss=1.72 " + "l1=0.698" + "l2=1.03 f=-0.325 shape=(1, 9000, 1)
logits [[ 0.91193867 -1.8932734   0.9147118  -1.2339035 ]]
Iteration 500 of 1000: loss=1.46 " + "l1=0.445" + "l2=1.02 f=-0.303 shape=(1, 9000, 1)
logits [[ 0.56937766 -1.7391758   0.6645642  -0.70543665]]
Iteration 600 of 1000: loss=1.29 " + "l1=0.29" + "l2=0.997 f=-0.294 shape=(1, 9000, 1)
logits [[ 0.28184697 -1.6273631   0.5316266  -0.36170387]]
Iteration 700 of 1000: loss=1.17 " + "l1=0.155" + "l2=1.02 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.03737271 -1.5840683   0.4369918  -0.0387718 ]]
Iteration 800 of 1000: loss=1.06 " + "l1=0.0204" + "l2=1.04 f=-0.286 shape=(1, 9000, 1)
logits [[-0.17893712 -1.5671049   0.3325877   0.26988274]]
Iteration 900 of 1000: loss=0.998 " + "l1=0.00647" + "l2=0.991 f=-0.281 shape=(1, 9000, 1)
logits [[-0.1911112  -1.5628791   0.32512793  0.30523115]]
--- 282.06326270103455 seconds ---
Adv result:3
Loading record A06213
(1, 11564)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0765 " + "l1=0.0765" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 5.3493433 -2.2986076  3.4187543 -8.685241 ]]
Iteration 100 of 1000: loss=0.0761 " + "l1=0.0759" + "l2=0.000234 f=-0.553 shape=(1, 9000, 1)
logits [[ 5.310912  -2.2797854  3.4036498 -8.647834 ]]
Iteration 200 of 1000: loss=0.0761 " + "l1=0.0758" + "l2=0.000241 f=-0.553 shape=(1, 9000, 1)
logits [[ 5.304612  -2.276747   3.4010863 -8.642076 ]]
Iteration 300 of 1000: loss=0.076 " + "l1=0.0757" + "l2=0.000283 f=-0.553 shape=(1, 9000, 1)
logits [[ 5.296416  -2.2725034  3.397764  -8.634823 ]]
Iteration 400 of 1000: loss=0.0759 " + "l1=0.0756" + "l2=0.000376 f=-0.553 shape=(1, 9000, 1)
logits [[ 5.288092  -2.2682488  3.394455  -8.62796  ]]
Iteration 500 of 1000: loss=0.0759 " + "l1=0.0754" + "l2=0.000419 f=-0.554 shape=(1, 9000, 1)
logits [[ 5.2797627 -2.2640643  3.3912597 -8.621492 ]]
Iteration 600 of 1000: loss=0.0759 " + "l1=0.0753" + "l2=0.000544 f=-0.554 shape=(1, 9000, 1)
logits [[ 5.271893  -2.260094   3.3882573 -8.615818 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.765 " + "l1=0.765" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 5.3493433 -2.2986076  3.4187543 -8.685241 ]]
Iteration 100 of 1000: loss=0.735 " + "l1=0.718" + "l2=0.0165 f=-0.548 shape=(1, 9000, 1)
logits [[ 5.034869  -2.14612    3.2984629 -8.381003 ]]
Iteration 200 of 1000: loss=0.72 " + "l1=0.696" + "l2=0.0235 f=-0.549 shape=(1, 9000, 1)
logits [[ 4.882061  -2.0787108  3.239359  -8.2375145]]
Iteration 300 of 1000: loss=0.706 " + "l1=0.675" + "l2=0.0311 f=-0.549 shape=(1, 9000, 1)
logits [[ 4.734647  -2.0103843  3.1836238 -8.10203  ]]
Iteration 400 of 1000: loss=0.692 " + "l1=0.653" + "l2=0.0382 f=-0.55 shape=(1, 9000, 1)
logits [[ 4.59485   -1.9391088  3.1278183 -7.982434 ]]
Iteration 500 of 1000: loss=0.678 " + "l1=0.635" + "l2=0.0434 f=-0.552 shape=(1, 9000, 1)
logits [[ 4.478107  -1.8677009  3.0721228 -7.891794 ]]
Iteration 600 of 1000: loss=0.666 " + "l1=0.618" + "l2=0.0475 f=-0.558 shape=(1, 9000, 1)
logits [[ 4.370686  -1.8104086  3.0177875 -7.811116 ]]
Iteration 700 of 1000: loss=0.653 " + "l1=0.6" + "l2=0.0528 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.2586007 -1.7418611  2.9532313 -7.7233534]]
Iteration 800 of 1000: loss=0.64 " + "l1=0.583" + "l2=0.057 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.150196  -1.6840268  2.8934112 -7.6233487]]
Iteration 900 of 1000: loss=0.628 " + "l1=0.566" + "l2=0.0619 f=-0.567 shape=(1, 9000, 1)
logits [[ 4.0329347 -1.6239741  2.8315074 -7.509308 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.65 " + "l1=7.65" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 5.3493433 -2.2986076  3.4187543 -8.685241 ]]
Iteration 100 of 1000: loss=4.56 " + "l1=3.16" + "l2=1.4 f=-0.469 shape=(1, 9000, 1)
logits [[ 2.313688 -0.847543  2.309342 -5.650203]]
Iteration 200 of 1000: loss=3.66 " + "l1=2.23" + "l2=1.43 f=-0.436 shape=(1, 9000, 1)
logits [[ 1.8185925  -0.41440216  1.8123959  -4.959836  ]]
Iteration 300 of 1000: loss=3.24 " + "l1=1.83" + "l2=1.41 f=-0.406 shape=(1, 9000, 1)
logits [[ 1.5718402  -0.25973675  1.5680739  -4.5055227 ]]
Iteration 400 of 1000: loss=2.99 " + "l1=1.6" + "l2=1.39 f=-0.392 shape=(1, 9000, 1)
logits [[ 1.4086186  -0.19142585  1.4051822  -4.1909738 ]]
Iteration 500 of 1000: loss=2.81 " + "l1=1.46" + "l2=1.35 f=-0.389 shape=(1, 9000, 1)
logits [[ 1.2977118  -0.15256073  1.3082842  -4.0103197 ]]
Iteration 600 of 1000: loss=2.62 " + "l1=1.31" + "l2=1.31 f=-0.394 shape=(1, 9000, 1)
logits [[ 1.2048231  -0.10819276  1.2058089  -3.8793745 ]]
Iteration 700 of 1000: loss=2.46 " + "l1=1.15" + "l2=1.31 f=-0.395 shape=(1, 9000, 1)
logits [[ 1.0893953  -0.06301724  1.0888534  -3.6951282 ]]
Iteration 800 of 1000: loss=2.31 " + "l1=0.926" + "l2=1.38 f=-0.402 shape=(1, 9000, 1)
logits [[ 0.9338753   0.02557545  0.95157146 -3.5202315 ]]
Iteration 900 of 1000: loss=2.14 " + "l1=0.676" + "l2=1.46 f=-0.385 shape=(1, 9000, 1)
logits [[ 0.8255327   0.15296544  0.8291317  -3.3473299 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=76.5 " + "l1=76.5" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 5.3493433 -2.2986076  3.4187543 -8.685241 ]]
Iteration 100 of 1000: loss=12.3 " + "l1=0.279" + "l2=12.1 f=-0.205 shape=(1, 9000, 1)
logits [[ 0.6202118   0.77711946  0.80506283 -3.022385  ]]
Iteration 200 of 1000: loss=7.56 " + "l1=0" + "l2=7.56 f=-0.206 shape=(1, 9000, 1)
logits [[ 0.71263933  0.7683209   0.7499021  -3.0540473 ]]
Iteration 300 of 1000: loss=6.25 " + "l1=0.0214" + "l2=6.23 f=-0.208 shape=(1, 9000, 1)
logits [[ 0.7430045   0.74211746  0.7442575  -3.061948  ]]
Iteration 400 of 1000: loss=5.62 " + "l1=0.0667" + "l2=5.55 f=-0.218 shape=(1, 9000, 1)
logits [[ 0.69444066  0.7395299   0.7461982  -3.0540113 ]]
Iteration 500 of 1000: loss=5.12 " + "l1=0" + "l2=5.12 f=-0.229 shape=(1, 9000, 1)
logits [[ 0.6963427  0.7321185  0.7137162 -3.057133 ]]
Iteration 600 of 1000: loss=4.61 " + "l1=0" + "l2=4.61 f=-0.235 shape=(1, 9000, 1)
logits [[ 0.6662375  0.7239966  0.7173583 -3.0494366]]
Iteration 700 of 1000: loss=4.33 " + "l1=0" + "l2=4.33 f=-0.25 shape=(1, 9000, 1)
logits [[ 0.6519944  0.706615   0.6856337 -3.0427048]]
Iteration 800 of 1000: loss=4.09 " + "l1=0" + "l2=4.09 f=-0.261 shape=(1, 9000, 1)
logits [[ 0.6207944   0.68438405  0.66767406 -3.0159645 ]]
Iteration 900 of 1000: loss=3.92 " + "l1=0.092" + "l2=3.83 f=-0.273 shape=(1, 9000, 1)
logits [[ 0.64827716  0.6394129   0.6486089  -3.0265825 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=42.1 " + "l1=42.1" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 5.3493433 -2.2986076  3.4187543 -8.685241 ]]
Iteration 100 of 1000: loss=11.4 " + "l1=4.19" + "l2=7.25 f=-0.274 shape=(1, 9000, 1)
logits [[ 1.1147277   0.37890247  1.1398282  -3.7297704 ]]
Iteration 200 of 1000: loss=6.45 " + "l1=0.0258" + "l2=6.42 f=-0.235 shape=(1, 9000, 1)
logits [[ 0.65845764  0.7636911   0.76838017 -3.1309552 ]]
Iteration 300 of 1000: loss=5.17 " + "l1=0" + "l2=5.17 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.6740179  0.7366471  0.73323   -3.1371045]]
Iteration 400 of 1000: loss=4.35 " + "l1=0.00197" + "l2=4.34 f=-0.259 shape=(1, 9000, 1)
logits [[ 0.6671384   0.7057827   0.70614177 -3.115573  ]]
Iteration 500 of 1000: loss=3.96 " + "l1=0" + "l2=3.96 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.62793607  0.68106693  0.67465234 -3.0520954 ]]
Iteration 600 of 1000: loss=3.7 " + "l1=0.0475" + "l2=3.65 f=-0.28 shape=(1, 9000, 1)
logits [[ 0.6032132  0.6428702  0.6515091 -3.0162957]]
Iteration 700 of 1000: loss=3.51 " + "l1=0" + "l2=3.51 f=-0.282 shape=(1, 9000, 1)
logits [[ 0.5459857  0.6378134  0.621669  -2.9337785]]
Iteration 800 of 1000: loss=3.35 " + "l1=0" + "l2=3.35 f=-0.289 shape=(1, 9000, 1)
logits [[ 0.5193805  0.6159994  0.6018042 -2.8942742]]
Iteration 900 of 1000: loss=3.19 " + "l1=0" + "l2=3.19 f=-0.294 shape=(1, 9000, 1)
logits [[ 0.5009716   0.591511    0.58887625 -2.8592765 ]]
--- 260.21033239364624 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0193 " + "l1=0.0193" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 5.3493433 -2.2986076  3.4187543 -8.685241 ]]
Iteration 100 of 1000: loss=0.0192 " + "l1=0.019" + "l2=0.000137 f=-0.555 shape=(1, 9000, 1)
logits [[ 5.322729  -2.2985232  3.4191358 -8.662407 ]]
Iteration 200 of 1000: loss=0.0191 " + "l1=0.019" + "l2=0.000114 f=-0.555 shape=(1, 9000, 1)
logits [[ 5.3211694 -2.2982485  3.419037  -8.6611805]]
Iteration 300 of 1000: loss=0.0191 " + "l1=0.019" + "l2=0.000142 f=-0.555 shape=(1, 9000, 1)
logits [[ 5.3173833 -2.2979028  3.418904  -8.658042 ]]
Iteration 400 of 1000: loss=0.0191 " + "l1=0.0189" + "l2=0.000183 f=-0.555 shape=(1, 9000, 1)
logits [[ 5.313302  -2.297533   3.4188042 -8.654797 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.193 " + "l1=0.193" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 5.3493433 -2.2986076  3.4187543 -8.685241 ]]
Iteration 100 of 1000: loss=0.181 " + "l1=0.173" + "l2=0.00726 f=-0.559 shape=(1, 9000, 1)
logits [[ 5.1579323 -2.2970939  3.4233246 -8.520928 ]]
Iteration 200 of 1000: loss=0.176 " + "l1=0.166" + "l2=0.00978 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.082635 -2.293827  3.420416 -8.454104]]
Iteration 300 of 1000: loss=0.171 " + "l1=0.159" + "l2=0.0121 f=-0.564 shape=(1, 9000, 1)
logits [[ 5.0077143 -2.2902281  3.416054  -8.388636 ]]
Iteration 400 of 1000: loss=0.167 " + "l1=0.153" + "l2=0.0142 f=-0.567 shape=(1, 9000, 1)
logits [[ 4.9368453 -2.2853005  3.4110732 -8.329134 ]]
Iteration 500 of 1000: loss=0.162 " + "l1=0.146" + "l2=0.0163 f=-0.57 shape=(1, 9000, 1)
logits [[ 4.8625884 -2.2813008  3.4054756 -8.26757  ]]
Iteration 600 of 1000: loss=0.157 " + "l1=0.14" + "l2=0.0176 f=-0.574 shape=(1, 9000, 1)
logits [[ 4.794694  -2.2766416  3.3989787 -8.214479 ]]
Iteration 700 of 1000: loss=0.153 " + "l1=0.133" + "l2=0.0193 f=-0.579 shape=(1, 9000, 1)
logits [[ 4.7250824 -2.2711604  3.3918753 -8.160797 ]]
Iteration 800 of 1000: loss=0.148 " + "l1=0.128" + "l2=0.0205 f=-0.582 shape=(1, 9000, 1)
logits [[ 4.662532  -2.266187   3.3846612 -8.1075535]]
Iteration 900 of 1000: loss=0.144 " + "l1=0.122" + "l2=0.0219 f=-0.583 shape=(1, 9000, 1)
logits [[ 4.5966673 -2.2606661  3.377173  -8.046611 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.93 " + "l1=1.93" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 5.3493433 -2.2986076  3.4187543 -8.685241 ]]
Iteration 100 of 1000: loss=0.57 " + "l1=0" + "l2=0.57 f=-0.558 shape=(1, 9000, 1)
logits [[ 3.5029774 -2.3626902  3.5089388 -6.8830175]]
Iteration 200 of 1000: loss=0.408 " + "l1=0.00207" + "l2=0.406 f=-0.558 shape=(1, 9000, 1)
logits [[ 3.459652  -2.314756   3.4575813 -6.8358564]]
Iteration 300 of 1000: loss=0.338 " + "l1=0" + "l2=0.338 f=-0.559 shape=(1, 9000, 1)
logits [[ 3.4023438 -2.285729   3.4057894 -6.7598095]]
Iteration 400 of 1000: loss=0.303 " + "l1=0" + "l2=0.303 f=-0.565 shape=(1, 9000, 1)
logits [[ 3.3434105 -2.282691   3.374612  -6.6947975]]
Iteration 500 of 1000: loss=0.255 " + "l1=0" + "l2=0.255 f=-0.572 shape=(1, 9000, 1)
logits [[ 3.3400886 -2.2804165  3.340933  -6.6884747]]
Iteration 600 of 1000: loss=0.235 " + "l1=0.00748" + "l2=0.227 f=-0.577 shape=(1, 9000, 1)
logits [[ 3.3205845 -2.283559   3.3131046 -6.656562 ]]
Iteration 700 of 1000: loss=0.212 " + "l1=0" + "l2=0.212 f=-0.576 shape=(1, 9000, 1)
logits [[ 3.290183  -2.2869632  3.2966576 -6.6047697]]
Iteration 800 of 1000: loss=0.195 " + "l1=0" + "l2=0.195 f=-0.576 shape=(1, 9000, 1)
logits [[ 3.2797594 -2.2901273  3.2819002 -6.573664 ]]
Iteration 900 of 1000: loss=0.183 " + "l1=0" + "l2=0.183 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.2620134 -2.2910755  3.2703197 -6.5396333]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.06 " + "l1=1.06" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 5.3493433 -2.2986076  3.4187543 -8.685241 ]]
Iteration 100 of 1000: loss=0.623 " + "l1=0.352" + "l2=0.271 f=-0.568 shape=(1, 9000, 1)
logits [[ 4.091558  -2.299311   3.4514668 -7.5162606]]
Iteration 200 of 1000: loss=0.422 " + "l1=0.0478" + "l2=0.374 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.517288  -2.2793853  3.4304404 -6.9098616]]
Iteration 300 of 1000: loss=0.309 " + "l1=0" + "l2=0.309 f=-0.554 shape=(1, 9000, 1)
logits [[ 3.385353  -2.2683604  3.3866465 -6.719182 ]]
Iteration 400 of 1000: loss=0.257 " + "l1=0" + "l2=0.257 f=-0.556 shape=(1, 9000, 1)
logits [[ 3.3526633 -2.2648153  3.3556538 -6.667129 ]]
Iteration 500 of 1000: loss=0.221 " + "l1=0" + "l2=0.221 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.3146276 -2.2744706  3.3185663 -6.6118093]]
Iteration 600 of 1000: loss=0.2 " + "l1=0" + "l2=0.2 f=-0.568 shape=(1, 9000, 1)
logits [[ 3.290839  -2.282264   3.2983737 -6.577648 ]]
Iteration 700 of 1000: loss=0.183 " + "l1=0" + "l2=0.183 f=-0.57 shape=(1, 9000, 1)
logits [[ 3.2809618 -2.2967882  3.2862556 -6.55001  ]]
Iteration 800 of 1000: loss=0.17 " + "l1=0.00207" + "l2=0.168 f=-0.572 shape=(1, 9000, 1)
logits [[ 3.2754269 -2.3028336  3.2716646 -6.5307436]]
Iteration 900 of 1000: loss=0.157 " + "l1=0" + "l2=0.157 f=-0.572 shape=(1, 9000, 1)
logits [[ 3.255079  -2.3062446  3.259148  -6.497165 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.627 " + "l1=0.627" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 5.3493433 -2.2986076  3.4187543 -8.685241 ]]
Iteration 100 of 1000: loss=0.484 " + "l1=0.393" + "l2=0.0911 f=-0.576 shape=(1, 9000, 1)
logits [[ 4.641626  -2.3102095  3.4312997 -8.066039 ]]
Iteration 200 of 1000: loss=0.414 " + "l1=0.285" + "l2=0.129 f=-0.578 shape=(1, 9000, 1)
logits [[ 4.2844067 -2.289907   3.4086065 -7.7138786]]
Iteration 300 of 1000: loss=0.352 " + "l1=0.197" + "l2=0.155 f=-0.57 shape=(1, 9000, 1)
logits [[ 3.987804  -2.2496176  3.3821232 -7.39872  ]]
Iteration 400 of 1000: loss=0.302 " + "l1=0.136" + "l2=0.166 f=-0.566 shape=(1, 9000, 1)
logits [[ 3.7738972 -2.2265933  3.356239  -7.1662555]]
Iteration 500 of 1000: loss=0.26 " + "l1=0.082" + "l2=0.178 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.59268   -2.2334237  3.3404193 -6.9529138]]
Iteration 600 of 1000: loss=0.221 " + "l1=0.0214" + "l2=0.199 f=-0.57 shape=(1, 9000, 1)
logits [[ 3.3773527 -2.265283   3.311621  -6.702354 ]]
Iteration 700 of 1000: loss=0.189 " + "l1=0.00277" + "l2=0.186 f=-0.578 shape=(1, 9000, 1)
logits [[ 3.2789414 -2.283722   3.2704291 -6.57652  ]]
Iteration 800 of 1000: loss=0.17 " + "l1=0.000717" + "l2=0.169 f=-0.582 shape=(1, 9000, 1)
logits [[ 3.2597535 -2.3034806  3.2575476 -6.5418415]]
Iteration 900 of 1000: loss=0.155 " + "l1=0.00233" + "l2=0.153 f=-0.585 shape=(1, 9000, 1)
logits [[ 3.2495596 -2.3113542  3.242395  -6.5201755]]
--- 251.30362033843994 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.14 " + "l1=0.14" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 5.3493433 -2.2986076  3.4187543 -8.685241 ]]
Iteration 100 of 1000: loss=0.14 " + "l1=0.139" + "l2=0.000519 f=-0.553 shape=(1, 9000, 1)
logits [[ 5.2900896 -2.2885149  3.398112  -8.610152 ]]
Iteration 200 of 1000: loss=0.139 " + "l1=0.139" + "l2=0.000577 f=-0.552 shape=(1, 9000, 1)
logits [[ 5.277338  -2.2862883  3.39356   -8.594584 ]]
Iteration 300 of 1000: loss=0.139 " + "l1=0.138" + "l2=0.000735 f=-0.552 shape=(1, 9000, 1)
logits [[ 5.2626157 -2.2835217  3.3882926 -8.576719 ]]
Iteration 400 of 1000: loss=0.139 " + "l1=0.138" + "l2=0.000871 f=-0.552 shape=(1, 9000, 1)
logits [[ 5.248288  -2.280802   3.3833768 -8.559821 ]]
Iteration 500 of 1000: loss=0.139 " + "l1=0.138" + "l2=0.00103 f=-0.552 shape=(1, 9000, 1)
logits [[ 5.2349925 -2.2784333  3.3790753 -8.544548 ]]
Iteration 600 of 1000: loss=0.139 " + "l1=0.138" + "l2=0.00119 f=-0.552 shape=(1, 9000, 1)
logits [[ 5.222447  -2.2762282  3.3750749 -8.530528 ]]
Iteration 700 of 1000: loss=0.139 " + "l1=0.137" + "l2=0.0014 f=-0.553 shape=(1, 9000, 1)
logits [[ 5.210837  -2.2743247  3.3715122 -8.518123 ]]
Iteration 800 of 1000: loss=0.139 " + "l1=0.137" + "l2=0.00153 f=-0.553 shape=(1, 9000, 1)
logits [[ 5.199901 -2.27255   3.368364 -8.50678 ]]
Iteration 900 of 1000: loss=0.139 " + "l1=0.137" + "l2=0.00167 f=-0.553 shape=(1, 9000, 1)
logits [[ 5.1891403 -2.2708824  3.365485  -8.495972 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.4 " + "l1=1.4" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 5.3493433 -2.2986076  3.4187543 -8.685241 ]]
Iteration 100 of 1000: loss=1.32 " + "l1=1.28" + "l2=0.0464 f=-0.543 shape=(1, 9000, 1)
logits [[ 4.7879543 -2.2094176  3.2361279 -7.98736  ]]
Iteration 200 of 1000: loss=1.28 " + "l1=1.21" + "l2=0.0701 f=-0.543 shape=(1, 9000, 1)
logits [[ 4.4863505 -2.1762009  3.1378498 -7.619855 ]]
Iteration 300 of 1000: loss=1.24 " + "l1=1.15" + "l2=0.092 f=-0.539 shape=(1, 9000, 1)
logits [[ 4.2279    -2.149322   3.0493305 -7.2854834]]
Iteration 400 of 1000: loss=1.21 " + "l1=1.1" + "l2=0.112 f=-0.532 shape=(1, 9000, 1)
logits [[ 3.9989972 -2.1298661  2.9757905 -6.9719267]]
Iteration 500 of 1000: loss=1.17 " + "l1=1.04" + "l2=0.131 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.7798805 -2.1220245  2.89439   -6.6527233]]
Iteration 600 of 1000: loss=1.14 " + "l1=0.995" + "l2=0.145 f=-0.516 shape=(1, 9000, 1)
logits [[ 3.587019  -2.1110208  2.825988  -6.367276 ]]
Iteration 700 of 1000: loss=1.11 " + "l1=0.951" + "l2=0.158 f=-0.508 shape=(1, 9000, 1)
logits [[ 3.4025376 -2.0885024  2.7588108 -6.1052065]]
Iteration 800 of 1000: loss=1.08 " + "l1=0.906" + "l2=0.17 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.215046  -2.0705748  2.6919253 -5.844979 ]]
Iteration 900 of 1000: loss=1.04 " + "l1=0.859" + "l2=0.182 f=-0.503 shape=(1, 9000, 1)
logits [[ 3.016756  -2.0718958  2.6164775 -5.575028 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=14 " + "l1=14" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 5.3493433 -2.2986076  3.4187543 -8.685241 ]]
Iteration 100 of 1000: loss=7.61 " + "l1=5.08" + "l2=2.53 f=-0.329 shape=(1, 9000, 1)
logits [[ 1.6326591 -1.3820807  1.7571073 -3.323272 ]]
Iteration 200 of 1000: loss=5.16 " + "l1=1.37" + "l2=3.79 f=-0.157 shape=(1, 9000, 1)
logits [[-0.00899647 -1.0552189   0.9015587  -0.46502158]]
Iteration 300 of 1000: loss=3.7 " + "l1=0.0238" + "l2=3.68 f=-0.112 shape=(1, 9000, 1)
logits [[-0.54620177 -0.9145124   0.5187036   0.49488378]]
Iteration 400 of 1000: loss=3.23 " + "l1=0" + "l2=3.23 f=-0.108 shape=(1, 9000, 1)
logits [[-0.4964509 -0.9542901  0.5069403  0.5132206]]
Iteration 500 of 1000: loss=2.96 " + "l1=0.00375" + "l2=2.95 f=-0.104 shape=(1, 9000, 1)
logits [[-0.44641134 -0.9778012   0.5057865   0.5020338 ]]
Iteration 600 of 1000: loss=2.69 " + "l1=0.0276" + "l2=2.66 f=-0.106 shape=(1, 9000, 1)
logits [[-0.39705026 -1.0075126   0.50403935  0.4764717 ]]
Iteration 700 of 1000: loss=2.47 " + "l1=0.00814" + "l2=2.46 f=-0.114 shape=(1, 9000, 1)
logits [[-0.3835038 -1.0804487  0.507281   0.4991396]]
Iteration 800 of 1000: loss=2.32 " + "l1=0" + "l2=2.32 f=-0.122 shape=(1, 9000, 1)
logits [[-0.37532234 -1.1344359   0.5106484   0.5119472 ]]
Iteration 900 of 1000: loss=2.2 " + "l1=0" + "l2=2.2 f=-0.128 shape=(1, 9000, 1)
logits [[-0.37545356 -1.1728265   0.5152512   0.5206032 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.72 " + "l1=7.72" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 5.3493433 -2.2986076  3.4187543 -8.685241 ]]
Iteration 100 of 1000: loss=5.22 " + "l1=4.05" + "l2=1.16 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.4732695 -1.781483   2.4731529 -4.8973026]]
Iteration 200 of 1000: loss=4.28 " + "l1=2.96" + "l2=1.32 f=-0.341 shape=(1, 9000, 1)
logits [[ 1.7934959 -1.4076873  1.8178391 -3.566569 ]]
Iteration 300 of 1000: loss=3.63 " + "l1=2.01" + "l2=1.62 f=-0.274 shape=(1, 9000, 1)
logits [[ 1.1646187 -1.2971126  1.3490455 -2.311955 ]]
Iteration 400 of 1000: loss=3.04 " + "l1=1.2" + "l2=1.84 f=-0.215 shape=(1, 9000, 1)
logits [[ 0.57449996 -1.2148709   0.981785   -1.2001718 ]]
Iteration 500 of 1000: loss=2.59 " + "l1=0.604" + "l2=1.98 f=-0.174 shape=(1, 9000, 1)
logits [[ 0.07910664 -1.1662961   0.7439607  -0.35414997]]
Iteration 600 of 1000: loss=2.27 " + "l1=0.29" + "l2=1.98 f=-0.174 shape=(1, 9000, 1)
logits [[-0.1809622  -1.209395    0.61011446  0.08266222]]
Iteration 700 of 1000: loss=1.98 " + "l1=0.0189" + "l2=1.96 f=-0.187 shape=(1, 9000, 1)
logits [[-0.41162956 -1.247655    0.47291926  0.4385199 ]]
Iteration 800 of 1000: loss=1.75 " + "l1=0.00561" + "l2=1.74 f=-0.206 shape=(1, 9000, 1)
logits [[-0.42737278 -1.2825769   0.44709614  0.4368951 ]]
Iteration 900 of 1000: loss=1.54 " + "l1=0.0049" + "l2=1.54 f=-0.228 shape=(1, 9000, 1)
logits [[-0.46021453 -1.3208458   0.43964678  0.43074226]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.56 " + "l1=4.56" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 5.3493433 -2.2986076  3.4187543 -8.685241 ]]
Iteration 100 of 1000: loss=3.61 " + "l1=3.05" + "l2=0.558 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.320734  -1.995704   2.8292549 -6.078427 ]]
Iteration 200 of 1000: loss=3.09 " + "l1=2.34" + "l2=0.749 f=-0.438 shape=(1, 9000, 1)
logits [[ 2.39303   -1.7176157  2.3831513 -4.810512 ]]
Iteration 300 of 1000: loss=2.78 " + "l1=2.03" + "l2=0.751 f=-0.405 shape=(1, 9000, 1)
logits [[ 2.091674  -1.6435503  2.0916443 -4.161139 ]]
Iteration 400 of 1000: loss=2.58 " + "l1=1.78" + "l2=0.799 f=-0.368 shape=(1, 9000, 1)
logits [[ 1.8419415 -1.5421433  1.8534192 -3.6256676]]
Iteration 500 of 1000: loss=2.41 " + "l1=1.53" + "l2=0.876 f=-0.327 shape=(1, 9000, 1)
logits [[ 1.5999045 -1.4421216  1.6190364 -3.0867972]]
Iteration 600 of 1000: loss=2.21 " + "l1=1.25" + "l2=0.962 f=-0.294 shape=(1, 9000, 1)
logits [[ 1.2768247 -1.3327425  1.3601812 -2.4818215]]
Iteration 700 of 1000: loss=1.97 " + "l1=0.922" + "l2=1.04 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.8340159 -1.2597446  1.0996886 -1.7369739]]
Iteration 800 of 1000: loss=1.7 " + "l1=0.593" + "l2=1.11 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.3808184  -1.2489527   0.850787   -0.97417253]]
Iteration 900 of 1000: loss=1.49 " + "l1=0.364" + "l2=1.13 f=-0.258 shape=(1, 9000, 1)
logits [[ 0.07160215 -1.2907486   0.6526602  -0.46676078]]
--- 284.61985969543457 seconds ---
Adv result:3
Loading record A06245
(1, 9624)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0458 " + "l1=0.0458" + "l2=0 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.278424  -1.2976432  2.1506684 -5.831701 ]]
Iteration 100 of 1000: loss=0.045 " + "l1=0.0446" + "l2=0.000475 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.2117457 -1.2454919  2.1160007 -5.784508 ]]
Iteration 200 of 1000: loss=0.0449 " + "l1=0.0443" + "l2=0.000524 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.1985795 -1.2355784  2.1079443 -5.774467 ]]
Iteration 300 of 1000: loss=0.0447 " + "l1=0.0441" + "l2=0.000619 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.184173  -1.2261914  2.1001952 -5.7638793]]
Iteration 400 of 1000: loss=0.0447 " + "l1=0.0439" + "l2=0.000785 f=-0.427 shape=(1, 9000, 1)
logits [[ 3.1698039 -1.2177325  2.093089  -5.7531424]]
Iteration 500 of 1000: loss=0.0445 " + "l1=0.0437" + "l2=0.000876 f=-0.428 shape=(1, 9000, 1)
logits [[ 3.155938  -1.2106458  2.0868692 -5.742414 ]]
Iteration 600 of 1000: loss=0.0445 " + "l1=0.0435" + "l2=0.00099 f=-0.428 shape=(1, 9000, 1)
logits [[ 3.142479  -1.2041537  2.0812964 -5.7320685]]
Iteration 700 of 1000: loss=0.0445 " + "l1=0.0433" + "l2=0.00119 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.1287193 -1.1984981  2.0768173 -5.7222104]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.458 " + "l1=0.458" + "l2=0 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.278424  -1.2976432  2.1506684 -5.831701 ]]
Iteration 100 of 1000: loss=0.394 " + "l1=0.36" + "l2=0.0346 f=-0.449 shape=(1, 9000, 1)
logits [[ 2.6743846 -0.9242278  1.9030706 -5.4490323]]
Iteration 200 of 1000: loss=0.373 " + "l1=0.329" + "l2=0.0444 f=-0.465 shape=(1, 9000, 1)
logits [[ 2.4542253 -0.830836   1.824558  -5.307402 ]]
Iteration 300 of 1000: loss=0.354 " + "l1=0.298" + "l2=0.056 f=-0.477 shape=(1, 9000, 1)
logits [[ 2.2439284 -0.7358647  1.7345166 -5.1507316]]
Iteration 400 of 1000: loss=0.332 " + "l1=0.262" + "l2=0.0696 f=-0.493 shape=(1, 9000, 1)
logits [[ 1.9941838 -0.6295091  1.6292778 -4.9669456]]
Iteration 500 of 1000: loss=0.314 " + "l1=0.234" + "l2=0.0798 f=-0.501 shape=(1, 9000, 1)
logits [[ 1.7797111 -0.5579707  1.5564536 -4.7802444]]
Iteration 600 of 1000: loss=0.298 " + "l1=0.21" + "l2=0.0879 f=-0.504 shape=(1, 9000, 1)
logits [[ 1.6027795 -0.5011362  1.5032253 -4.6227975]]
Iteration 700 of 1000: loss=0.285 " + "l1=0.193" + "l2=0.0928 f=-0.507 shape=(1, 9000, 1)
logits [[ 1.4679717 -0.4587398  1.4556108 -4.491077 ]]
Iteration 800 of 1000: loss=0.278 " + "l1=0.187" + "l2=0.0904 f=-0.504 shape=(1, 9000, 1)
logits [[ 1.4342444 -0.4385835  1.4193227 -4.431507 ]]
Iteration 900 of 1000: loss=0.272 " + "l1=0.182" + "l2=0.0903 f=-0.503 shape=(1, 9000, 1)
logits [[ 1.397837   -0.41898352  1.3930111  -4.3828325 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.58 " + "l1=4.58" + "l2=0 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.278424  -1.2976432  2.1506684 -5.831701 ]]
Iteration 100 of 1000: loss=1.44 " + "l1=0.606" + "l2=0.83 f=-0.545 shape=(1, 9000, 1)
logits [[ 0.83821243  0.28747386  0.89335555 -4.200703  ]]
Iteration 200 of 1000: loss=0.832 " + "l1=0.00574" + "l2=0.827 f=-0.51 shape=(1, 9000, 1)
logits [[ 0.51138    0.5722782  0.5780212 -3.7035575]]
Iteration 300 of 1000: loss=0.657 " + "l1=0" + "l2=0.657 f=-0.497 shape=(1, 9000, 1)
logits [[ 0.5333327   0.5712098   0.55997384 -3.6506693 ]]
Iteration 400 of 1000: loss=0.581 " + "l1=0" + "l2=0.581 f=-0.492 shape=(1, 9000, 1)
logits [[ 0.5269772  0.5722527  0.5593046 -3.6263657]]
Iteration 500 of 1000: loss=0.542 " + "l1=0.0185" + "l2=0.524 f=-0.488 shape=(1, 9000, 1)
logits [[ 0.54724044  0.5534566   0.57195276 -3.623642  ]]
Iteration 600 of 1000: loss=0.509 " + "l1=0" + "l2=0.509 f=-0.486 shape=(1, 9000, 1)
logits [[ 0.54829085  0.56522167  0.5561281  -3.6126213 ]]
Iteration 700 of 1000: loss=0.486 " + "l1=0" + "l2=0.486 f=-0.488 shape=(1, 9000, 1)
logits [[ 0.5364997   0.56459475  0.5629858  -3.6152327 ]]
Iteration 800 of 1000: loss=0.471 " + "l1=0" + "l2=0.471 f=-0.486 shape=(1, 9000, 1)
logits [[ 0.5401099   0.5661411   0.55821526 -3.6104417 ]]
Iteration 900 of 1000: loss=0.459 " + "l1=0" + "l2=0.459 f=-0.489 shape=(1, 9000, 1)
logits [[ 0.51032966  0.56908447  0.5593371  -3.5932875 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.52 " + "l1=2.52" + "l2=0 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.278424  -1.2976432  2.1506684 -5.831701 ]]
Iteration 100 of 1000: loss=1.16 " + "l1=0.746" + "l2=0.418 f=-0.539 shape=(1, 9000, 1)
logits [[ 1.2282081  -0.11427439  1.2429427  -4.5113688 ]]
Iteration 200 of 1000: loss=0.855 " + "l1=0.414" + "l2=0.441 f=-0.519 shape=(1, 9000, 1)
logits [[ 0.9382975   0.18580307  0.93481404 -4.133552  ]]
Iteration 300 of 1000: loss=0.69 " + "l1=0.216" + "l2=0.474 f=-0.506 shape=(1, 9000, 1)
logits [[ 0.7447406   0.36141887  0.7549745  -3.8849907 ]]
Iteration 400 of 1000: loss=0.602 " + "l1=0.0777" + "l2=0.524 f=-0.5 shape=(1, 9000, 1)
logits [[ 0.55144477  0.4903681   0.6316039  -3.6745577 ]]
Iteration 500 of 1000: loss=0.541 " + "l1=0.00726" + "l2=0.533 f=-0.491 shape=(1, 9000, 1)
logits [[ 0.52547306  0.54990953  0.5631038  -3.6011224 ]]
Iteration 600 of 1000: loss=0.501 " + "l1=0" + "l2=0.501 f=-0.487 shape=(1, 9000, 1)
logits [[ 0.5298088  0.5577679  0.5525625 -3.589705 ]]
Iteration 700 of 1000: loss=0.472 " + "l1=0.0055" + "l2=0.466 f=-0.486 shape=(1, 9000, 1)
logits [[ 0.54450864  0.54141307  0.5514135  -3.5822558 ]]
Iteration 800 of 1000: loss=0.448 " + "l1=0.00525" + "l2=0.443 f=-0.491 shape=(1, 9000, 1)
logits [[ 0.48344186  0.5514199   0.5609599  -3.5616841 ]]
Iteration 900 of 1000: loss=0.425 " + "l1=0.00912" + "l2=0.416 f=-0.49 shape=(1, 9000, 1)
logits [[ 0.5414977   0.53307533  0.54965687 -3.5833497 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.49 " + "l1=1.49" + "l2=0 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.278424  -1.2976432  2.1506684 -5.831701 ]]
Iteration 100 of 1000: loss=0.874 " + "l1=0.598" + "l2=0.276 f=-0.537 shape=(1, 9000, 1)
logits [[ 1.4695764  -0.36768216  1.4709802  -4.7198157 ]]
Iteration 200 of 1000: loss=0.721 " + "l1=0.457" + "l2=0.264 f=-0.528 shape=(1, 9000, 1)
logits [[ 1.2207173 -0.163754   1.2420428 -4.412041 ]]
Iteration 300 of 1000: loss=0.623 " + "l1=0.358" + "l2=0.265 f=-0.516 shape=(1, 9000, 1)
logits [[ 1.0836517  -0.01830175  1.0772549  -4.204976  ]]
Iteration 400 of 1000: loss=0.564 " + "l1=0.278" + "l2=0.287 f=-0.515 shape=(1, 9000, 1)
logits [[ 0.93712837  0.09834892  0.9527655  -4.050126  ]]
Iteration 500 of 1000: loss=0.527 " + "l1=0.228" + "l2=0.299 f=-0.512 shape=(1, 9000, 1)
logits [[ 0.86441094  0.16897039  0.87151986 -3.953152  ]]
Iteration 600 of 1000: loss=0.502 " + "l1=0.196" + "l2=0.306 f=-0.512 shape=(1, 9000, 1)
logits [[ 0.81574285  0.21418177  0.81579846 -3.8927648 ]]
Iteration 700 of 1000: loss=0.482 " + "l1=0.168" + "l2=0.315 f=-0.514 shape=(1, 9000, 1)
logits [[ 0.75189024  0.25345516  0.76909065 -3.8302636 ]]
Iteration 800 of 1000: loss=0.464 " + "l1=0.146" + "l2=0.318 f=-0.514 shape=(1, 9000, 1)
logits [[ 0.70974666  0.28533673  0.73541236 -3.7858703 ]]
Iteration 900 of 1000: loss=0.446 " + "l1=0.128" + "l2=0.318 f=-0.511 shape=(1, 9000, 1)
logits [[ 0.6655582   0.31282875  0.70610005 -3.7304485 ]]
--- 271.3955330848694 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0113 " + "l1=0.0113" + "l2=0 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.278424  -1.2976432  2.1506684 -5.831701 ]]
Iteration 100 of 1000: loss=0.011 " + "l1=0.0108" + "l2=0.000204 f=-0.427 shape=(1, 9000, 1)
logits [[ 3.240127  -1.3031021  2.158842  -5.802392 ]]
Iteration 200 of 1000: loss=0.0109 " + "l1=0.0108" + "l2=0.000183 f=-0.427 shape=(1, 9000, 1)
logits [[ 3.2355819 -1.3038392  2.1595724 -5.798358 ]]
Iteration 300 of 1000: loss=0.0109 " + "l1=0.0107" + "l2=0.000233 f=-0.427 shape=(1, 9000, 1)
logits [[ 3.228229  -1.3052448  2.1610477 -5.791886 ]]
Iteration 400 of 1000: loss=0.0109 " + "l1=0.0106" + "l2=0.000288 f=-0.427 shape=(1, 9000, 1)
logits [[ 3.2203798 -1.3066404  2.1626241 -5.785034 ]]
Iteration 500 of 1000: loss=0.0108 " + "l1=0.0105" + "l2=0.000364 f=-0.427 shape=(1, 9000, 1)
logits [[ 3.212112  -1.3078423  2.1642036 -5.7781205]]
Iteration 600 of 1000: loss=0.0108 " + "l1=0.0104" + "l2=0.000409 f=-0.428 shape=(1, 9000, 1)
logits [[ 3.2031097 -1.3084314  2.165569  -5.7711596]]
Iteration 700 of 1000: loss=0.0108 " + "l1=0.0103" + "l2=0.000543 f=-0.428 shape=(1, 9000, 1)
logits [[ 3.1943505 -1.3089477  2.1668727 -5.764469 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.113 " + "l1=0.113" + "l2=0 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.278424  -1.2976432  2.1506684 -5.831701 ]]
Iteration 100 of 1000: loss=0.088 " + "l1=0.075" + "l2=0.0131 f=-0.44 shape=(1, 9000, 1)
logits [[ 2.9549804 -1.3131868  2.2053976 -5.6076474]]
Iteration 200 of 1000: loss=0.0781 " + "l1=0.0602" + "l2=0.0179 f=-0.447 shape=(1, 9000, 1)
logits [[ 2.8222034 -1.3254265  2.220634  -5.504148 ]]
Iteration 300 of 1000: loss=0.0688 " + "l1=0.0467" + "l2=0.0221 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.7039347 -1.3374414  2.237235  -5.4070873]]
Iteration 400 of 1000: loss=0.0612 " + "l1=0.0357" + "l2=0.0255 f=-0.453 shape=(1, 9000, 1)
logits [[ 2.6055806 -1.3400291  2.2487037 -5.326014 ]]
Iteration 500 of 1000: loss=0.0553 " + "l1=0.0266" + "l2=0.0287 f=-0.453 shape=(1, 9000, 1)
logits [[ 2.5207837 -1.3401802  2.2548661 -5.247256 ]]
Iteration 600 of 1000: loss=0.05 " + "l1=0.0192" + "l2=0.0309 f=-0.454 shape=(1, 9000, 1)
logits [[ 2.4505012 -1.3392613  2.2588375 -5.1841273]]
Iteration 700 of 1000: loss=0.0454 " + "l1=0.0127" + "l2=0.0327 f=-0.454 shape=(1, 9000, 1)
logits [[ 2.3822587 -1.3361465  2.2557082 -5.118856 ]]
Iteration 800 of 1000: loss=0.0406 " + "l1=0.00572" + "l2=0.0349 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.313956  -1.3398838  2.2568052 -5.050718 ]]
Iteration 900 of 1000: loss=0.0362 " + "l1=0.00111" + "l2=0.0351 f=-0.456 shape=(1, 9000, 1)
logits [[ 2.259387  -1.3384459  2.2483156 -4.9926276]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.062 " + "l1=0.062" + "l2=0 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.278424  -1.2976432  2.1506684 -5.831701 ]]
Iteration 100 of 1000: loss=0.0546 " + "l1=0.0505" + "l2=0.00413 f=-0.433 shape=(1, 9000, 1)
logits [[ 3.101951  -1.3109281  2.1841664 -5.705834 ]]
Iteration 200 of 1000: loss=0.0516 " + "l1=0.0461" + "l2=0.00545 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.0323746 -1.3171521  2.1939924 -5.653083 ]]
Iteration 300 of 1000: loss=0.0491 " + "l1=0.0428" + "l2=0.00627 f=-0.438 shape=(1, 9000, 1)
logits [[ 2.979476  -1.3244991  2.201248  -5.6100373]]
Iteration 400 of 1000: loss=0.0468 " + "l1=0.0394" + "l2=0.00738 f=-0.441 shape=(1, 9000, 1)
logits [[ 2.923776  -1.3309598  2.2069418 -5.56376  ]]
Iteration 500 of 1000: loss=0.0445 " + "l1=0.0359" + "l2=0.00858 f=-0.444 shape=(1, 9000, 1)
logits [[ 2.862616  -1.3328594  2.2099953 -5.5158744]]
Iteration 600 of 1000: loss=0.0424 " + "l1=0.0329" + "l2=0.00954 f=-0.446 shape=(1, 9000, 1)
logits [[ 2.811046  -1.334248   2.212914  -5.4729295]]
Iteration 700 of 1000: loss=0.0409 " + "l1=0.0303" + "l2=0.0105 f=-0.447 shape=(1, 9000, 1)
logits [[ 2.7678277 -1.33378    2.2163894 -5.4389915]]
Iteration 800 of 1000: loss=0.0394 " + "l1=0.028" + "l2=0.0113 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.7289631 -1.3336424  2.2193    -5.4061646]]
Iteration 900 of 1000: loss=0.0382 " + "l1=0.026" + "l2=0.0121 f=-0.449 shape=(1, 9000, 1)
logits [[ 2.6923091 -1.3312744  2.2190642 -5.3749175]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0874 " + "l1=0.0874" + "l2=0 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.278424  -1.2976432  2.1506684 -5.831701 ]]
Iteration 100 of 1000: loss=0.0724 " + "l1=0.0642" + "l2=0.00824 f=-0.437 shape=(1, 9000, 1)
logits [[ 3.023604  -1.3135256  2.1957395 -5.6523952]]
Iteration 200 of 1000: loss=0.0668 " + "l1=0.0565" + "l2=0.0103 f=-0.441 shape=(1, 9000, 1)
logits [[ 2.9371314 -1.3220216  2.2080107 -5.5852227]]
Iteration 300 of 1000: loss=0.0614 " + "l1=0.0484" + "l2=0.013 f=-0.445 shape=(1, 9000, 1)
logits [[ 2.842612  -1.3311024  2.217638  -5.5101805]]
Iteration 400 of 1000: loss=0.0565 " + "l1=0.0413" + "l2=0.0152 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.7589822 -1.337523   2.2265315 -5.4399433]]
Iteration 500 of 1000: loss=0.0523 " + "l1=0.035" + "l2=0.0173 f=-0.449 shape=(1, 9000, 1)
logits [[ 2.6864378 -1.337898   2.2348888 -5.379914 ]]
Iteration 600 of 1000: loss=0.049 " + "l1=0.03" + "l2=0.019 f=-0.45 shape=(1, 9000, 1)
logits [[ 2.6255066 -1.3388202  2.2386556 -5.32509  ]]
Iteration 700 of 1000: loss=0.0463 " + "l1=0.0257" + "l2=0.0205 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.5737333 -1.33898    2.2418022 -5.2800827]]
Iteration 800 of 1000: loss=0.0434 " + "l1=0.0212" + "l2=0.0222 f=-0.452 shape=(1, 9000, 1)
logits [[ 2.5134134 -1.333634   2.2398317 -5.2265406]]
Iteration 900 of 1000: loss=0.0407 " + "l1=0.0176" + "l2=0.0231 f=-0.452 shape=(1, 9000, 1)
logits [[ 2.4645786 -1.3311105  2.2377844 -5.1809382]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.1 " + "l1=0.1" + "l2=0 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.278424  -1.2976432  2.1506684 -5.831701 ]]
Iteration 100 of 1000: loss=0.0805 " + "l1=0.0702" + "l2=0.0103 f=-0.438 shape=(1, 9000, 1)
logits [[ 2.9913597 -1.3145611  2.200573  -5.6306534]]
Iteration 200 of 1000: loss=0.0729 " + "l1=0.0592" + "l2=0.0137 f=-0.444 shape=(1, 9000, 1)
logits [[ 2.882222  -1.3249217  2.2146842 -5.547406 ]]
Iteration 300 of 1000: loss=0.0657 " + "l1=0.0483" + "l2=0.0174 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.7702138 -1.3349497  2.2264755 -5.4553275]]
Iteration 400 of 1000: loss=0.0594 " + "l1=0.0392" + "l2=0.0202 f=-0.45 shape=(1, 9000, 1)
logits [[ 2.6814802 -1.3393376  2.2399964 -5.383579 ]]
Iteration 500 of 1000: loss=0.0544 " + "l1=0.0318" + "l2=0.0226 f=-0.452 shape=(1, 9000, 1)
logits [[ 2.6051042 -1.3408066  2.2467499 -5.317182 ]]
Iteration 600 of 1000: loss=0.0504 " + "l1=0.0256" + "l2=0.0248 f=-0.452 shape=(1, 9000, 1)
logits [[ 2.5405684 -1.3427933  2.2524786 -5.2576146]]
Iteration 700 of 1000: loss=0.0463 " + "l1=0.0197" + "l2=0.0266 f=-0.453 shape=(1, 9000, 1)
logits [[ 2.4745839 -1.3427761  2.2521193 -5.196832 ]]
Iteration 800 of 1000: loss=0.0428 " + "l1=0.0152" + "l2=0.0276 f=-0.454 shape=(1, 9000, 1)
logits [[ 2.420684  -1.3382764  2.2498662 -5.1465445]]
Iteration 900 of 1000: loss=0.0393 " + "l1=0.0102" + "l2=0.0291 f=-0.454 shape=(1, 9000, 1)
logits [[ 2.3607988 -1.3358451  2.24617   -5.087693 ]]
--- 270.80513072013855 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0911 " + "l1=0.0911" + "l2=0 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.278424  -1.2976432  2.1506684 -5.831701 ]]
Iteration 100 of 1000: loss=0.0899 " + "l1=0.0892" + "l2=0.000675 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.191939  -1.2755548  2.1226668 -5.7296   ]]
Iteration 200 of 1000: loss=0.0895 " + "l1=0.0887" + "l2=0.000787 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.1689284 -1.2716424  2.1151822 -5.702491 ]]
Iteration 300 of 1000: loss=0.0891 " + "l1=0.0882" + "l2=0.000967 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.1442294 -1.2687309  2.1077123 -5.6720476]]
Iteration 400 of 1000: loss=0.0888 " + "l1=0.0876" + "l2=0.00117 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.11927   -1.2663113  2.1005068 -5.6419783]]
Iteration 500 of 1000: loss=0.0884 " + "l1=0.0871" + "l2=0.00137 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.0946138 -1.264213   2.093531  -5.6128745]]
Iteration 600 of 1000: loss=0.0882 " + "l1=0.0866" + "l2=0.00162 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.0705028 -1.2623519  2.0870926 -5.5848875]]
Iteration 700 of 1000: loss=0.088 " + "l1=0.086" + "l2=0.00192 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.0467691 -1.2609794  2.0812933 -5.5575294]]
Iteration 800 of 1000: loss=0.0877 " + "l1=0.0856" + "l2=0.00213 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.024345  -1.2596288  2.0762122 -5.531995 ]]
Iteration 900 of 1000: loss=0.0875 " + "l1=0.0851" + "l2=0.00243 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.0020545 -1.2580795  2.0712824 -5.506678 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.911 " + "l1=0.911" + "l2=0 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.278424  -1.2976432  2.1506684 -5.831701 ]]
Iteration 100 of 1000: loss=0.796 " + "l1=0.736" + "l2=0.0602 f=-0.414 shape=(1, 9000, 1)
logits [[ 2.4613197 -1.1275822  1.9073241 -4.898573 ]]
Iteration 200 of 1000: loss=0.735 " + "l1=0.645" + "l2=0.0905 f=-0.41 shape=(1, 9000, 1)
logits [[ 2.0541227 -1.0600693  1.7598933 -4.392367 ]]
Iteration 300 of 1000: loss=0.672 " + "l1=0.558" + "l2=0.113 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.6767278  -0.99004084  1.6109147  -3.90526   ]]
Iteration 400 of 1000: loss=0.619 " + "l1=0.5" + "l2=0.12 f=-0.395 shape=(1, 9000, 1)
logits [[ 1.4484614 -0.9286203  1.4480615 -3.5474558]]
Iteration 500 of 1000: loss=0.582 " + "l1=0.459" + "l2=0.124 f=-0.389 shape=(1, 9000, 1)
logits [[ 1.3038596 -0.8850348  1.306592  -3.2794347]]
Iteration 600 of 1000: loss=0.555 " + "l1=0.425" + "l2=0.13 f=-0.383 shape=(1, 9000, 1)
logits [[ 1.1846337  -0.86437374  1.1986265  -3.0524693 ]]
Iteration 700 of 1000: loss=0.531 " + "l1=0.394" + "l2=0.137 f=-0.378 shape=(1, 9000, 1)
logits [[ 1.0793935 -0.872723   1.1113967 -2.8307228]]
Iteration 800 of 1000: loss=0.508 " + "l1=0.364" + "l2=0.145 f=-0.373 shape=(1, 9000, 1)
logits [[ 0.96505857 -0.89368314  1.0356628  -2.6002958 ]]
Iteration 900 of 1000: loss=0.488 " + "l1=0.335" + "l2=0.153 f=-0.369 shape=(1, 9000, 1)
logits [[ 0.85706997 -0.90725213  0.9624452  -2.3886564 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.11 " + "l1=9.11" + "l2=0 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.278424  -1.2976432  2.1506684 -5.831701 ]]
Iteration 100 of 1000: loss=2.38 " + "l1=0" + "l2=2.38 f=-0.289 shape=(1, 9000, 1)
logits [[-0.5974767  -0.80944264  0.11664256  0.13595498]]
Iteration 200 of 1000: loss=1.35 " + "l1=0.041" + "l2=1.31 f=-0.302 shape=(1, 9000, 1)
logits [[-0.60568243 -0.7876946   0.11235797  0.0713424 ]]
Iteration 300 of 1000: loss=1.02 " + "l1=0" + "l2=1.02 f=-0.308 shape=(1, 9000, 1)
logits [[-0.6384287  -0.7812534   0.07226248  0.1143353 ]]
Iteration 400 of 1000: loss=0.88 " + "l1=0" + "l2=0.88 f=-0.32 shape=(1, 9000, 1)
logits [[-0.6622428  -0.77596235  0.03032704  0.12883495]]
Iteration 500 of 1000: loss=0.759 " + "l1=0" + "l2=0.759 f=-0.331 shape=(1, 9000, 1)
logits [[-0.6363578  -0.7707572   0.0246209   0.05706333]]
Iteration 600 of 1000: loss=0.682 " + "l1=0" + "l2=0.682 f=-0.338 shape=(1, 9000, 1)
logits [[-0.6325782  -0.7754149   0.01944643  0.0369525 ]]
Iteration 700 of 1000: loss=0.629 " + "l1=0" + "l2=0.629 f=-0.341 shape=(1, 9000, 1)
logits [[-0.6303587  -0.77841765  0.01702522  0.02602372]]
Iteration 800 of 1000: loss=0.592 " + "l1=0" + "l2=0.592 f=-0.343 shape=(1, 9000, 1)
logits [[-0.62491274 -0.780322    0.00542004  0.02765399]]
Iteration 900 of 1000: loss=0.578 " + "l1=0" + "l2=0.578 f=-0.345 shape=(1, 9000, 1)
logits [[-0.65880346 -0.78188974 -0.02280103  0.08298203]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.01 " + "l1=5.01" + "l2=0 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.278424  -1.2976432  2.1506684 -5.831701 ]]
Iteration 100 of 1000: loss=2.47 " + "l1=1.53" + "l2=0.937 f=-0.334 shape=(1, 9000, 1)
logits [[ 0.55049366 -0.6917509   0.7971887  -1.9912732 ]]
Iteration 200 of 1000: loss=1.22 " + "l1=0.0248" + "l2=1.2 f=-0.311 shape=(1, 9000, 1)
logits [[-0.61101437 -0.763555    0.08780541  0.0426855 ]]
Iteration 300 of 1000: loss=0.848 " + "l1=0" + "l2=0.848 f=-0.312 shape=(1, 9000, 1)
logits [[-0.61833024 -0.7640781   0.06708667  0.06741542]]
Iteration 400 of 1000: loss=0.716 " + "l1=0" + "l2=0.716 f=-0.324 shape=(1, 9000, 1)
logits [[-0.64230496 -0.76412815  0.03247637  0.07699977]]
Iteration 500 of 1000: loss=0.629 " + "l1=0" + "l2=0.629 f=-0.329 shape=(1, 9000, 1)
logits [[-0.62149    -0.77109766  0.03630761  0.04150153]]
Iteration 600 of 1000: loss=0.58 " + "l1=0" + "l2=0.58 f=-0.332 shape=(1, 9000, 1)
logits [[-0.62193733 -0.78125685  0.02690085  0.0469308 ]]
Iteration 700 of 1000: loss=0.545 " + "l1=0.0124" + "l2=0.533 f=-0.334 shape=(1, 9000, 1)
logits [[-0.5977948  -0.7876514   0.03668005  0.01414964]]
Iteration 800 of 1000: loss=0.514 " + "l1=0.00805" + "l2=0.506 f=-0.331 shape=(1, 9000, 1)
logits [[-0.592834   -0.7818468   0.03228699  0.01764728]]
Iteration 900 of 1000: loss=0.488 " + "l1=0" + "l2=0.488 f=-0.328 shape=(1, 9000, 1)
logits [[-0.59699196 -0.7706219   0.02381635  0.03371587]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.96 " + "l1=2.96" + "l2=0 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.278424  -1.2976432  2.1506684 -5.831701 ]]
Iteration 100 of 1000: loss=1.88 " + "l1=1.49" + "l2=0.393 f=-0.39 shape=(1, 9000, 1)
logits [[ 1.279851  -0.8266705  1.2815703 -3.2956035]]
Iteration 200 of 1000: loss=1.44 " + "l1=0.859" + "l2=0.576 f=-0.337 shape=(1, 9000, 1)
logits [[ 0.46655875 -0.68277     0.7552974  -1.8877733 ]]
Iteration 300 of 1000: loss=0.993 " + "l1=0.209" + "l2=0.784 f=-0.325 shape=(1, 9000, 1)
logits [[-0.3694691  -0.7565433   0.23433785 -0.40943018]]
Iteration 400 of 1000: loss=0.71 " + "l1=0.00108" + "l2=0.709 f=-0.319 shape=(1, 9000, 1)
logits [[-0.6189775  -0.7639007   0.05473716  0.05142025]]
Iteration 500 of 1000: loss=0.603 " + "l1=0.00363" + "l2=0.599 f=-0.327 shape=(1, 9000, 1)
logits [[-0.6163266  -0.79358834  0.05557775  0.04439738]]
Iteration 600 of 1000: loss=0.543 " + "l1=0" + "l2=0.543 f=-0.333 shape=(1, 9000, 1)
logits [[-0.6298828  -0.7963594   0.04038202  0.0544775 ]]
Iteration 700 of 1000: loss=0.509 " + "l1=0.0141" + "l2=0.495 f=-0.332 shape=(1, 9000, 1)
logits [[-0.5977564  -0.78865474  0.05017757  0.00674061]]
Iteration 800 of 1000: loss=0.472 " + "l1=0" + "l2=0.472 f=-0.328 shape=(1, 9000, 1)
logits [[-0.61024964 -0.7749148   0.0367874   0.03711127]]
Iteration 900 of 1000: loss=0.454 " + "l1=0" + "l2=0.454 f=-0.322 shape=(1, 9000, 1)
logits [[-0.61863184 -0.7634272   0.02944045  0.06487247]]
--- 289.100515127182 seconds ---
Adv result:3
Loading record A06285
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0649 " + "l1=0.0649" + "l2=0 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.6693044 -1.8178048  2.0323513 -7.3944364]]
Iteration 100 of 1000: loss=0.0642 " + "l1=0.0638" + "l2=0.000392 f=-0.624 shape=(1, 9000, 1)
logits [[ 4.6140003 -1.7685508  1.9969431 -7.3364573]]
Iteration 200 of 1000: loss=0.064 " + "l1=0.0636" + "l2=0.000442 f=-0.622 shape=(1, 9000, 1)
logits [[ 4.6024694 -1.7556717  1.9873806 -7.32263  ]]
Iteration 300 of 1000: loss=0.0639 " + "l1=0.0633" + "l2=0.00057 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.5897126 -1.7425978  1.9776576 -7.3077655]]
Iteration 400 of 1000: loss=0.0638 " + "l1=0.0631" + "l2=0.000732 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.5775414 -1.7295525  1.9680353 -7.293797 ]]
Iteration 500 of 1000: loss=0.0637 " + "l1=0.0628" + "l2=0.000825 f=-0.618 shape=(1, 9000, 1)
logits [[ 4.566864  -1.7175696  1.9593519 -7.2815495]]
Iteration 600 of 1000: loss=0.0637 " + "l1=0.0626" + "l2=0.00102 f=-0.617 shape=(1, 9000, 1)
logits [[ 4.557569  -1.7070394  1.951784  -7.271533 ]]
Iteration 700 of 1000: loss=0.0635 " + "l1=0.0625" + "l2=0.00108 f=-0.616 shape=(1, 9000, 1)
logits [[ 4.549003  -1.6972257  1.9448512 -7.262422 ]]
Iteration 800 of 1000: loss=0.0636 " + "l1=0.0623" + "l2=0.00126 f=-0.616 shape=(1, 9000, 1)
logits [[ 4.5416455 -1.6884228  1.9388485 -7.2549005]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.649 " + "l1=0.649" + "l2=0 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.6693044 -1.8178048  2.0323513 -7.3944364]]
Iteration 100 of 1000: loss=0.592 " + "l1=0.565" + "l2=0.0274 f=-0.599 shape=(1, 9000, 1)
logits [[ 4.221518  -1.4272063  1.7493355 -6.9387183]]
Iteration 200 of 1000: loss=0.571 " + "l1=0.532" + "l2=0.0386 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.0387254 -1.2828444  1.6413362 -6.748422 ]]
Iteration 300 of 1000: loss=0.557 " + "l1=0.51" + "l2=0.0475 f=-0.58 shape=(1, 9000, 1)
logits [[ 3.9015963 -1.1973783  1.5807838 -6.6051126]]
Iteration 400 of 1000: loss=0.547 " + "l1=0.49" + "l2=0.0567 f=-0.576 shape=(1, 9000, 1)
logits [[ 3.773245  -1.1307434  1.5381807 -6.4853635]]
Iteration 500 of 1000: loss=0.538 " + "l1=0.475" + "l2=0.0631 f=-0.573 shape=(1, 9000, 1)
logits [[ 3.667848  -1.0819762  1.509705  -6.3861933]]
Iteration 600 of 1000: loss=0.53 " + "l1=0.462" + "l2=0.0674 f=-0.569 shape=(1, 9000, 1)
logits [[ 3.5831466 -1.0401562  1.4852479 -6.304749 ]]
Iteration 700 of 1000: loss=0.522 " + "l1=0.45" + "l2=0.0722 f=-0.566 shape=(1, 9000, 1)
logits [[ 3.5014942  -0.99352354  1.4607866  -6.230777  ]]
Iteration 800 of 1000: loss=0.513 " + "l1=0.437" + "l2=0.0762 f=-0.561 shape=(1, 9000, 1)
logits [[ 3.422743  -0.9479454  1.4373174 -6.1561775]]
Iteration 900 of 1000: loss=0.506 " + "l1=0.426" + "l2=0.0795 f=-0.558 shape=(1, 9000, 1)
logits [[ 3.3506038 -0.9120391  1.4186174 -6.0892153]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.49 " + "l1=6.49" + "l2=0 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.6693044 -1.8178048  2.0323513 -7.3944364]]
Iteration 100 of 1000: loss=2.64 " + "l1=0.757" + "l2=1.89 f=-0.629 shape=(1, 9000, 1)
logits [[ 1.0407811   0.28414196  0.69375396 -4.534726  ]]
Iteration 200 of 1000: loss=1.57 " + "l1=0" + "l2=1.57 f=-0.629 shape=(1, 9000, 1)
logits [[ 0.5007224  0.5178117  0.5136198 -4.049854 ]]
Iteration 300 of 1000: loss=1.38 " + "l1=0" + "l2=1.38 f=-0.628 shape=(1, 9000, 1)
logits [[ 0.48937878  0.52207875  0.4964084  -4.0201845 ]]
Iteration 400 of 1000: loss=1.26 " + "l1=0.0165" + "l2=1.24 f=-0.628 shape=(1, 9000, 1)
logits [[ 0.5034487   0.49435532  0.5108903  -4.021013  ]]
Iteration 500 of 1000: loss=1.16 " + "l1=0.00114" + "l2=1.15 f=-0.625 shape=(1, 9000, 1)
logits [[ 0.50225973  0.5018936   0.50302875 -4.007393  ]]
Iteration 600 of 1000: loss=1.11 " + "l1=0" + "l2=1.11 f=-0.622 shape=(1, 9000, 1)
logits [[ 0.47336298  0.50617635  0.4943944  -3.9630702 ]]
Iteration 700 of 1000: loss=1.07 " + "l1=0" + "l2=1.07 f=-0.618 shape=(1, 9000, 1)
logits [[ 0.48553434  0.5003725   0.48689723 -3.945471  ]]
Iteration 800 of 1000: loss=1.04 " + "l1=0" + "l2=1.04 f=-0.614 shape=(1, 9000, 1)
logits [[ 0.45984906  0.4942459   0.4835254  -3.8931262 ]]
Iteration 900 of 1000: loss=1 " + "l1=0" + "l2=1 f=-0.607 shape=(1, 9000, 1)
logits [[ 0.48327228  0.48502123  0.4723976  -3.8691673 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.57 " + "l1=3.57" + "l2=0 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.6693044 -1.8178048  2.0323513 -7.3944364]]
Iteration 100 of 1000: loss=2.27 " + "l1=1.65" + "l2=0.618 f=-0.593 shape=(1, 9000, 1)
logits [[ 2.5722234  -0.43012038  1.0717819  -5.5848384 ]]
Iteration 200 of 1000: loss=1.68 " + "l1=0.759" + "l2=0.922 f=-0.608 shape=(1, 9000, 1)
logits [[ 1.4467055   0.06706418  0.8011741  -4.74865   ]]
Iteration 300 of 1000: loss=1.25 " + "l1=0.0359" + "l2=1.22 f=-0.634 shape=(1, 9000, 1)
logits [[ 0.5498442  0.4845029  0.5348479 -4.104863 ]]
Iteration 400 of 1000: loss=1.09 " + "l1=0.0147" + "l2=1.08 f=-0.625 shape=(1, 9000, 1)
logits [[ 0.5224779  0.4956705  0.5121216 -4.0291767]]
Iteration 500 of 1000: loss=1.02 " + "l1=0.000733" + "l2=1.02 f=-0.624 shape=(1, 9000, 1)
logits [[ 0.49167618  0.49034387  0.48892114 -3.9672348 ]]
Iteration 600 of 1000: loss=0.977 " + "l1=0.00864" + "l2=0.968 f=-0.625 shape=(1, 9000, 1)
logits [[ 0.49178782  0.4760735   0.47964802 -3.9461339 ]]
Iteration 700 of 1000: loss=0.933 " + "l1=0.000733" + "l2=0.932 f=-0.626 shape=(1, 9000, 1)
logits [[ 0.470152    0.46983743  0.47117078 -3.913378  ]]
Iteration 800 of 1000: loss=0.903 " + "l1=0" + "l2=0.903 f=-0.625 shape=(1, 9000, 1)
logits [[ 0.46820644  0.4695842   0.46754494 -3.9040978 ]]
Iteration 900 of 1000: loss=0.881 " + "l1=0" + "l2=0.881 f=-0.63 shape=(1, 9000, 1)
logits [[ 0.4551876  0.4748236  0.4680952 -3.9199352]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.11 " + "l1=2.11" + "l2=0 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.6693044 -1.8178048  2.0323513 -7.3944364]]
Iteration 100 of 1000: loss=1.59 " + "l1=1.34" + "l2=0.249 f=-0.576 shape=(1, 9000, 1)
logits [[ 3.3136218  -0.81948423  1.3283772  -6.1276455 ]]
Iteration 200 of 1000: loss=1.38 " + "l1=1.04" + "l2=0.337 f=-0.59 shape=(1, 9000, 1)
logits [[ 2.6908078 -0.5079126  1.1159393 -5.6586666]]
Iteration 300 of 1000: loss=1.22 " + "l1=0.769" + "l2=0.448 f=-0.597 shape=(1, 9000, 1)
logits [[ 2.125081   -0.241244    0.96707374 -5.238747  ]]
Iteration 400 of 1000: loss=1.12 " + "l1=0.609" + "l2=0.507 f=-0.603 shape=(1, 9000, 1)
logits [[ 1.7842827  -0.09044904  0.8974149  -5.0017595 ]]
Iteration 500 of 1000: loss=1.05 " + "l1=0.507" + "l2=0.54 f=-0.606 shape=(1, 9000, 1)
logits [[ 1.5618324e+00  1.0613743e-03  8.5295951e-01 -4.8395209e+00]]
Iteration 600 of 1000: loss=0.992 " + "l1=0.376" + "l2=0.616 f=-0.608 shape=(1, 9000, 1)
logits [[ 1.2701308   0.11247066  0.80042523 -4.6157045 ]]
Iteration 700 of 1000: loss=0.945 " + "l1=0.279" + "l2=0.666 f=-0.606 shape=(1, 9000, 1)
logits [[ 1.0491004   0.18986769  0.75485694 -4.418687  ]]
Iteration 800 of 1000: loss=0.887 " + "l1=0.17" + "l2=0.717 f=-0.597 shape=(1, 9000, 1)
logits [[ 0.795675   0.2719725  0.7098622 -4.165016 ]]
Iteration 900 of 1000: loss=0.83 " + "l1=0.114" + "l2=0.716 f=-0.592 shape=(1, 9000, 1)
logits [[ 0.6632218   0.3202722   0.67145705 -4.023255  ]]
--- 274.7119483947754 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0264 " + "l1=0.0264" + "l2=0 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.6693044 -1.8178048  2.0323513 -7.3944364]]
Iteration 100 of 1000: loss=0.0262 " + "l1=0.0261" + "l2=0.000142 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.6446958 -1.8216095  2.0373204 -7.3718114]]
Iteration 200 of 1000: loss=0.0262 " + "l1=0.0261" + "l2=0.000111 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.6429696 -1.8223017  2.0374734 -7.3700314]]
Iteration 300 of 1000: loss=0.0262 " + "l1=0.026" + "l2=0.000155 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.639499  -1.8232137  2.0384495 -7.366587 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.264 " + "l1=0.264" + "l2=0 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.6693044 -1.8178048  2.0323513 -7.3944364]]
Iteration 100 of 1000: loss=0.249 " + "l1=0.242" + "l2=0.00704 f=-0.632 shape=(1, 9000, 1)
logits [[ 4.491663  -1.8477887  2.0691164 -7.240124 ]]
Iteration 200 of 1000: loss=0.243 " + "l1=0.232" + "l2=0.0104 f=-0.632 shape=(1, 9000, 1)
logits [[ 4.417465  -1.8703781  2.0959632 -7.171791 ]]
Iteration 300 of 1000: loss=0.237 " + "l1=0.223" + "l2=0.0135 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.3580003 -1.897376   2.126512  -7.11952  ]]
Iteration 400 of 1000: loss=0.232 " + "l1=0.215" + "l2=0.0166 f=-0.635 shape=(1, 9000, 1)
logits [[ 4.3086276 -1.92742    2.1590874 -7.0799274]]
Iteration 500 of 1000: loss=0.227 " + "l1=0.208" + "l2=0.0195 f=-0.636 shape=(1, 9000, 1)
logits [[ 4.2626004 -1.9506763  2.186515  -7.0409904]]
Iteration 600 of 1000: loss=0.223 " + "l1=0.202" + "l2=0.0212 f=-0.636 shape=(1, 9000, 1)
logits [[ 4.2296414 -1.9647448  2.2084053 -7.0169277]]
Iteration 700 of 1000: loss=0.22 " + "l1=0.197" + "l2=0.0231 f=-0.637 shape=(1, 9000, 1)
logits [[ 4.1972084 -1.9794679  2.228569  -6.9925585]]
Iteration 800 of 1000: loss=0.217 " + "l1=0.192" + "l2=0.0253 f=-0.637 shape=(1, 9000, 1)
logits [[ 4.1628532 -1.9944452  2.2472115 -6.965376 ]]
Iteration 900 of 1000: loss=0.214 " + "l1=0.186" + "l2=0.0276 f=-0.639 shape=(1, 9000, 1)
logits [[ 4.1254225 -2.012046   2.2644897 -6.9326253]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.64 " + "l1=2.64" + "l2=0 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.6693044 -1.8178048  2.0323513 -7.3944364]]
Iteration 100 of 1000: loss=1.26 " + "l1=0.666" + "l2=0.598 f=-0.638 shape=(1, 9000, 1)
logits [[ 3.2149355 -2.20293    2.548787  -6.113514 ]]
Iteration 200 of 1000: loss=0.713 " + "l1=0.0141" + "l2=0.699 f=-0.623 shape=(1, 9000, 1)
logits [[ 2.7180283 -2.3118126  2.7039046 -5.6007595]]
Iteration 300 of 1000: loss=0.573 " + "l1=0" + "l2=0.573 f=-0.638 shape=(1, 9000, 1)
logits [[ 2.6750808 -2.3068252  2.677372  -5.5985184]]
Iteration 400 of 1000: loss=0.505 " + "l1=0.00441" + "l2=0.501 f=-0.645 shape=(1, 9000, 1)
logits [[ 2.665463  -2.3180668  2.6610577 -5.5888653]]
Iteration 500 of 1000: loss=0.456 " + "l1=0.00177" + "l2=0.454 f=-0.644 shape=(1, 9000, 1)
logits [[ 2.642285  -2.3142722  2.6405106 -5.5463796]]
Iteration 600 of 1000: loss=0.421 " + "l1=0.00136" + "l2=0.419 f=-0.642 shape=(1, 9000, 1)
logits [[ 2.6209967 -2.2974079  2.6196358 -5.5125737]]
Iteration 700 of 1000: loss=0.396 " + "l1=0" + "l2=0.396 f=-0.64 shape=(1, 9000, 1)
logits [[ 2.602873 -2.289993  2.604588 -5.476655]]
Iteration 800 of 1000: loss=0.377 " + "l1=0" + "l2=0.377 f=-0.636 shape=(1, 9000, 1)
logits [[ 2.5809498 -2.2699914  2.581863  -5.4359574]]
Iteration 900 of 1000: loss=0.37 " + "l1=0.0141" + "l2=0.356 f=-0.633 shape=(1, 9000, 1)
logits [[ 2.5679948 -2.2455213  2.5539112 -5.4085903]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.45 " + "l1=1.45" + "l2=0 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.6693044 -1.8178048  2.0323513 -7.3944364]]
Iteration 100 of 1000: loss=1.01 " + "l1=0.793" + "l2=0.216 f=-0.652 shape=(1, 9000, 1)
logits [[ 3.7576077 -2.0722296  2.315178  -6.606938 ]]
Iteration 200 of 1000: loss=0.774 " + "l1=0.469" + "l2=0.305 f=-0.646 shape=(1, 9000, 1)
logits [[ 3.3839848 -2.2148042  2.5304663 -6.2826376]]
Iteration 300 of 1000: loss=0.651 " + "l1=0.284" + "l2=0.367 f=-0.644 shape=(1, 9000, 1)
logits [[ 3.1076326 -2.2685685  2.5921192 -6.008631 ]]
Iteration 400 of 1000: loss=0.551 " + "l1=0.134" + "l2=0.417 f=-0.643 shape=(1, 9000, 1)
logits [[ 2.8953779 -2.3425257  2.651654  -5.7760057]]
Iteration 500 of 1000: loss=0.466 " + "l1=0.00622" + "l2=0.459 f=-0.638 shape=(1, 9000, 1)
logits [[ 2.6708546 -2.348082   2.6595435 -5.533946 ]]
Iteration 600 of 1000: loss=0.402 " + "l1=0.00561" + "l2=0.396 f=-0.636 shape=(1, 9000, 1)
logits [[ 2.5808911 -2.2337892  2.570692  -5.461642 ]]
Iteration 700 of 1000: loss=0.357 " + "l1=0.00664" + "l2=0.35 f=-0.649 shape=(1, 9000, 1)
logits [[ 2.4835742 -2.099406   2.4714935 -5.4500184]]
Iteration 800 of 1000: loss=0.321 " + "l1=0" + "l2=0.321 f=-0.659 shape=(1, 9000, 1)
logits [[ 2.435052  -2.0591877  2.442843  -5.4557185]]
Iteration 900 of 1000: loss=0.296 " + "l1=0.00479" + "l2=0.292 f=-0.666 shape=(1, 9000, 1)
logits [[ 2.4103758 -2.0064077  2.4016688 -5.468972 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.857 " + "l1=0.857" + "l2=0 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.6693044 -1.8178048  2.0323513 -7.3944364]]
Iteration 100 of 1000: loss=0.705 " + "l1=0.636" + "l2=0.0695 f=-0.64 shape=(1, 9000, 1)
logits [[ 4.139196  -1.9433564  2.1829407 -6.9372597]]
Iteration 200 of 1000: loss=0.617 " + "l1=0.499" + "l2=0.118 f=-0.65 shape=(1, 9000, 1)
logits [[ 3.8392873 -2.0648947  2.3037684 -6.679611 ]]
Iteration 300 of 1000: loss=0.55 " + "l1=0.399" + "l2=0.15 f=-0.652 shape=(1, 9000, 1)
logits [[ 3.655269  -2.1568186  2.4269302 -6.534637 ]]
Iteration 400 of 1000: loss=0.509 " + "l1=0.337" + "l2=0.172 f=-0.65 shape=(1, 9000, 1)
logits [[ 3.5157843 -2.1815286  2.4782255 -6.4142065]]
Iteration 500 of 1000: loss=0.479 " + "l1=0.296" + "l2=0.183 f=-0.651 shape=(1, 9000, 1)
logits [[ 3.4101622 -2.200429   2.4988894 -6.3118696]]
Iteration 600 of 1000: loss=0.456 " + "l1=0.263" + "l2=0.193 f=-0.65 shape=(1, 9000, 1)
logits [[ 3.3091516 -2.207324   2.5004485 -6.20067  ]]
Iteration 700 of 1000: loss=0.43 " + "l1=0.228" + "l2=0.202 f=-0.646 shape=(1, 9000, 1)
logits [[ 3.218798  -2.2262568  2.5167003 -6.0949755]]
Iteration 800 of 1000: loss=0.405 " + "l1=0.193" + "l2=0.212 f=-0.645 shape=(1, 9000, 1)
logits [[ 3.1155899 -2.2437544  2.5203753 -5.9740243]]
Iteration 900 of 1000: loss=0.385 " + "l1=0.159" + "l2=0.226 f=-0.642 shape=(1, 9000, 1)
logits [[ 3.0137703 -2.2611618  2.5258677 -5.847695 ]]
--- 250.20321702957153 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.121 " + "l1=0.121" + "l2=0 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.6693044 -1.8178048  2.0323513 -7.3944364]]
Iteration 100 of 1000: loss=0.12 " + "l1=0.119" + "l2=0.000552 f=-0.623 shape=(1, 9000, 1)
logits [[ 4.5986996 -1.7851487  1.9991161 -7.3050976]]
Iteration 200 of 1000: loss=0.119 " + "l1=0.119" + "l2=0.000694 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.579651  -1.7740198  1.9889454 -7.2804484]]
Iteration 300 of 1000: loss=0.119 " + "l1=0.118" + "l2=0.000905 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.560965  -1.7635062  1.9796382 -7.2558455]]
Iteration 400 of 1000: loss=0.119 " + "l1=0.118" + "l2=0.00113 f=-0.618 shape=(1, 9000, 1)
logits [[ 4.5445166 -1.7534252  1.971423  -7.234049 ]]
Iteration 500 of 1000: loss=0.119 " + "l1=0.117" + "l2=0.00133 f=-0.616 shape=(1, 9000, 1)
logits [[ 4.5304894 -1.7450167  1.9649655 -7.215734 ]]
Iteration 600 of 1000: loss=0.119 " + "l1=0.117" + "l2=0.00152 f=-0.615 shape=(1, 9000, 1)
logits [[ 4.5188336 -1.7381477  1.959961  -7.200699 ]]
Iteration 700 of 1000: loss=0.119 " + "l1=0.117" + "l2=0.00174 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.5083213 -1.732132   1.9557648 -7.1873884]]
Iteration 800 of 1000: loss=0.119 " + "l1=0.117" + "l2=0.00177 f=-0.613 shape=(1, 9000, 1)
logits [[ 4.4994416 -1.7267181  1.9527    -7.175763 ]]
Iteration 900 of 1000: loss=0.119 " + "l1=0.117" + "l2=0.00194 f=-0.611 shape=(1, 9000, 1)
logits [[ 4.4910574 -1.7212125  1.9497117 -7.164743 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.21 " + "l1=1.21" + "l2=0 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.6693044 -1.8178048  2.0323513 -7.3944364]]
Iteration 100 of 1000: loss=1.12 " + "l1=1.07" + "l2=0.0436 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.069467  -1.5276451  1.7554502 -6.6534266]]
Iteration 200 of 1000: loss=1.08 " + "l1=1.01" + "l2=0.0687 f=-0.573 shape=(1, 9000, 1)
logits [[ 3.7747302 -1.4112004  1.637615  -6.292384 ]]
Iteration 300 of 1000: loss=1.05 " + "l1=0.959" + "l2=0.0893 f=-0.559 shape=(1, 9000, 1)
logits [[ 3.5553713 -1.3212231  1.5601716 -6.031547 ]]
Iteration 400 of 1000: loss=1.03 " + "l1=0.927" + "l2=0.103 f=-0.551 shape=(1, 9000, 1)
logits [[ 3.4081092 -1.2626489  1.5121925 -5.8627257]]
Iteration 500 of 1000: loss=1.02 " + "l1=0.906" + "l2=0.111 f=-0.543 shape=(1, 9000, 1)
logits [[ 3.3076334 -1.2089064  1.4758514 -5.7476697]]
Iteration 600 of 1000: loss=1 " + "l1=0.885" + "l2=0.119 f=-0.533 shape=(1, 9000, 1)
logits [[ 3.2167318 -1.1588815  1.4454095 -5.6367593]]
Iteration 700 of 1000: loss=0.991 " + "l1=0.867" + "l2=0.125 f=-0.521 shape=(1, 9000, 1)
logits [[ 3.1382005 -1.1187816  1.4257532 -5.5280395]]
Iteration 800 of 1000: loss=0.977 " + "l1=0.848" + "l2=0.129 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.0594988 -1.086886   1.4103227 -5.4174147]]
Iteration 900 of 1000: loss=0.962 " + "l1=0.831" + "l2=0.131 f=-0.5 shape=(1, 9000, 1)
logits [[ 2.9839008 -1.0477966  1.389363  -5.3235497]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.1 " + "l1=12.1" + "l2=0 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.6693044 -1.8178048  2.0323513 -7.3944364]]
Iteration 100 of 1000: loss=5.18 " + "l1=1.9" + "l2=3.28 f=-0.356 shape=(1, 9000, 1)
logits [[ 0.24840146 -0.26838312  0.24382162 -1.6481836 ]]
Iteration 200 of 1000: loss=3.48 " + "l1=0.103" + "l2=3.38 f=-0.25 shape=(1, 9000, 1)
logits [[-0.18847658 -0.3907028  -0.15948851 -0.26277733]]
Iteration 300 of 1000: loss=2.91 " + "l1=0.0256" + "l2=2.88 f=-0.234 shape=(1, 9000, 1)
logits [[-0.18197986 -0.42379394 -0.15211692 -0.17773268]]
Iteration 400 of 1000: loss=2.67 " + "l1=0.0153" + "l2=2.66 f=-0.226 shape=(1, 9000, 1)
logits [[-0.17419782 -0.43675372 -0.13969605 -0.15502399]]
Iteration 500 of 1000: loss=2.52 " + "l1=0" + "l2=2.52 f=-0.222 shape=(1, 9000, 1)
logits [[-0.16223612 -0.46025535 -0.14026456 -0.12548009]]
Iteration 600 of 1000: loss=2.38 " + "l1=0.0234" + "l2=2.36 f=-0.224 shape=(1, 9000, 1)
logits [[-0.13423374 -0.4828586  -0.1274431  -0.15085644]]
Iteration 700 of 1000: loss=2.29 " + "l1=0" + "l2=2.29 f=-0.227 shape=(1, 9000, 1)
logits [[-0.16748975 -0.4917159  -0.1388749  -0.11165646]]
Iteration 800 of 1000: loss=2.18 " + "l1=0" + "l2=2.18 f=-0.225 shape=(1, 9000, 1)
logits [[-0.14186203 -0.52167004 -0.12867358 -0.10603126]]
Iteration 900 of 1000: loss=2.07 " + "l1=0" + "l2=2.07 f=-0.222 shape=(1, 9000, 1)
logits [[-0.11776317 -0.5516143  -0.10939246 -0.10745598]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.64 " + "l1=6.64" + "l2=0 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.6693044 -1.8178048  2.0323513 -7.3944364]]
Iteration 100 of 1000: loss=4.35 " + "l1=3.1" + "l2=1.25 f=-0.469 shape=(1, 9000, 1)
logits [[ 1.7626584  -0.70462567  0.9390966  -3.8713107 ]]
Iteration 200 of 1000: loss=3.16 " + "l1=1.34" + "l2=1.83 f=-0.379 shape=(1, 9000, 1)
logits [[ 0.3984379  -0.2780438   0.39837584 -2.0362535 ]]
Iteration 300 of 1000: loss=2.79 " + "l1=1.04" + "l2=1.75 f=-0.367 shape=(1, 9000, 1)
logits [[ 0.23472154 -0.30078664  0.2441675  -1.6462188 ]]
Iteration 400 of 1000: loss=2.59 " + "l1=0.829" + "l2=1.76 f=-0.337 shape=(1, 9000, 1)
logits [[ 0.17321914 -0.35883203  0.17241369 -1.3331466 ]]
Iteration 500 of 1000: loss=2.43 " + "l1=0.603" + "l2=1.83 f=-0.306 shape=(1, 9000, 1)
logits [[ 0.07919711 -0.37847665  0.0862807  -1.0100101 ]]
Iteration 600 of 1000: loss=2.29 " + "l1=0.456" + "l2=1.84 f=-0.279 shape=(1, 9000, 1)
logits [[ 0.03275275 -0.4090543   0.04410025 -0.78531456]]
Iteration 700 of 1000: loss=2.15 " + "l1=0.271" + "l2=1.88 f=-0.257 shape=(1, 9000, 1)
logits [[-0.02655926 -0.47516426 -0.01739443 -0.5107865 ]]
Iteration 800 of 1000: loss=2 " + "l1=0.136" + "l2=1.86 f=-0.246 shape=(1, 9000, 1)
logits [[-0.07523527 -0.5310309  -0.06447829 -0.31243882]]
Iteration 900 of 1000: loss=1.78 " + "l1=0.0111" + "l2=1.77 f=-0.229 shape=(1, 9000, 1)
logits [[-0.14811562 -0.62407583 -0.0627204  -0.08294117]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.92 " + "l1=3.92" + "l2=0 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.6693044 -1.8178048  2.0323513 -7.3944364]]
Iteration 100 of 1000: loss=3.06 " + "l1=2.65" + "l2=0.408 f=-0.527 shape=(1, 9000, 1)
logits [[ 2.8913202 -1.0447159  1.3039845 -5.2568283]]
Iteration 200 of 1000: loss=2.68 " + "l1=2.05" + "l2=0.627 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.0615158  -0.75249064  1.0142287  -4.248261  ]]
Iteration 300 of 1000: loss=2.42 " + "l1=1.51" + "l2=0.915 f=-0.416 shape=(1, 9000, 1)
logits [[ 1.3398489  -0.5231689   0.81294143 -3.2948642 ]]
Iteration 400 of 1000: loss=2.25 " + "l1=1.17" + "l2=1.07 f=-0.381 shape=(1, 9000, 1)
logits [[ 0.899846   -0.40202677  0.692612   -2.714332  ]]
Iteration 500 of 1000: loss=2.08 " + "l1=0.955" + "l2=1.12 f=-0.375 shape=(1, 9000, 1)
logits [[ 0.58891916 -0.32258514  0.5836954  -2.3501217 ]]
Iteration 600 of 1000: loss=1.92 " + "l1=0.845" + "l2=1.08 f=-0.371 shape=(1, 9000, 1)
logits [[ 0.46406394 -0.28783068  0.4693078  -2.130964  ]]
Iteration 700 of 1000: loss=1.81 " + "l1=0.793" + "l2=1.01 f=-0.368 shape=(1, 9000, 1)
logits [[ 0.41856992 -0.30182227  0.42594424 -2.0142996 ]]
Iteration 800 of 1000: loss=1.69 " + "l1=0.742" + "l2=0.953 f=-0.357 shape=(1, 9000, 1)
logits [[ 0.38675168 -0.3267263   0.39768448 -1.8849493 ]]
Iteration 900 of 1000: loss=1.55 " + "l1=0.658" + "l2=0.897 f=-0.329 shape=(1, 9000, 1)
logits [[ 0.29772785 -0.36935496  0.38930437 -1.6344619 ]]
--- 289.0608034133911 seconds ---
Adv result:3
Loading record A06321
(1, 9470)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0342 " + "l1=0.0342" + "l2=0 f=-0.648 shape=(1, 9000, 1)
logits [[ 2.5731652 -0.8481099  2.1389008 -6.456655 ]]
Iteration 100 of 1000: loss=0.0332 " + "l1=0.0326" + "l2=0.000618 f=-0.654 shape=(1, 9000, 1)
logits [[ 2.4768348 -0.7794107  2.1016967 -6.4144473]]
Iteration 200 of 1000: loss=0.0329 " + "l1=0.0321" + "l2=0.00073 f=-0.655 shape=(1, 9000, 1)
logits [[ 2.4521372 -0.7617034  2.0930502 -6.403985 ]]
Iteration 300 of 1000: loss=0.0326 " + "l1=0.0317" + "l2=0.00092 f=-0.657 shape=(1, 9000, 1)
logits [[ 2.423743   -0.74241704  2.083901   -6.3921323 ]]
Iteration 400 of 1000: loss=0.0323 " + "l1=0.0312" + "l2=0.00112 f=-0.658 shape=(1, 9000, 1)
logits [[ 2.3978033  -0.72485894  2.0760853  -6.3814383 ]]
Iteration 500 of 1000: loss=0.0322 " + "l1=0.0308" + "l2=0.00135 f=-0.659 shape=(1, 9000, 1)
logits [[ 2.3743756  -0.70825607  2.0682113  -6.3711734 ]]
Iteration 600 of 1000: loss=0.032 " + "l1=0.0305" + "l2=0.00157 f=-0.66 shape=(1, 9000, 1)
logits [[ 2.3528411 -0.6929563  2.0608978 -6.361585 ]]
Iteration 700 of 1000: loss=0.0319 " + "l1=0.0301" + "l2=0.00178 f=-0.661 shape=(1, 9000, 1)
logits [[ 2.333835   -0.67892915  2.0539372  -6.352427  ]]
Iteration 800 of 1000: loss=0.0318 " + "l1=0.0298" + "l2=0.00196 f=-0.661 shape=(1, 9000, 1)
logits [[ 2.317291   -0.66600245  2.0470483  -6.343351  ]]
Iteration 900 of 1000: loss=0.0317 " + "l1=0.0296" + "l2=0.0021 f=-0.661 shape=(1, 9000, 1)
logits [[ 2.3024747 -0.6539199  2.0402148 -6.3344994]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.342 " + "l1=0.342" + "l2=0 f=-0.648 shape=(1, 9000, 1)
logits [[ 2.5731652 -0.8481099  2.1389008 -6.456655 ]]
Iteration 100 of 1000: loss=0.232 " + "l1=0.176" + "l2=0.0555 f=-0.719 shape=(1, 9000, 1)
logits [[ 1.6609211 -0.1039018  1.6589189 -6.0907054]]
Iteration 200 of 1000: loss=0.202 " + "l1=0.151" + "l2=0.0516 f=-0.721 shape=(1, 9000, 1)
logits [[ 1.538626    0.03052655  1.5376765  -5.9892497 ]]
Iteration 300 of 1000: loss=0.187 " + "l1=0.136" + "l2=0.0513 f=-0.718 shape=(1, 9000, 1)
logits [[ 1.4681454   0.10900621  1.4652245  -5.913714  ]]
Iteration 400 of 1000: loss=0.175 " + "l1=0.121" + "l2=0.054 f=-0.716 shape=(1, 9000, 1)
logits [[ 1.3867466   0.18779175  1.3961374  -5.83389   ]]
Iteration 500 of 1000: loss=0.164 " + "l1=0.108" + "l2=0.056 f=-0.71 shape=(1, 9000, 1)
logits [[ 1.3277956   0.25842616  1.3344054  -5.7591085 ]]
Iteration 600 of 1000: loss=0.154 " + "l1=0.097" + "l2=0.0571 f=-0.703 shape=(1, 9000, 1)
logits [[ 1.2700812  0.3142499  1.2840798 -5.679761 ]]
Iteration 700 of 1000: loss=0.146 " + "l1=0.0887" + "l2=0.0577 f=-0.697 shape=(1, 9000, 1)
logits [[ 1.2374524   0.35530633  1.2421205  -5.6233063 ]]
Iteration 800 of 1000: loss=0.138 " + "l1=0.08" + "l2=0.0582 f=-0.692 shape=(1, 9000, 1)
logits [[ 1.1931245   0.39695445  1.1974069  -5.5556297 ]]
Iteration 900 of 1000: loss=0.129 " + "l1=0.0698" + "l2=0.0593 f=-0.688 shape=(1, 9000, 1)
logits [[ 1.1321971  0.4438735  1.1422766 -5.4715314]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.42 " + "l1=3.42" + "l2=0 f=-0.648 shape=(1, 9000, 1)
logits [[ 2.5731652 -0.8481099  2.1389008 -6.456655 ]]
Iteration 100 of 1000: loss=0.48 " + "l1=0" + "l2=0.48 f=-0.789 shape=(1, 9000, 1)
logits [[ 0.71634775  0.8155206   0.81331897 -5.500255  ]]
Iteration 200 of 1000: loss=0.321 " + "l1=0.0103" + "l2=0.311 f=-0.769 shape=(1, 9000, 1)
logits [[ 0.7162034   0.78180414  0.7921138  -5.3643055 ]]
Iteration 300 of 1000: loss=0.255 " + "l1=0.00295" + "l2=0.252 f=-0.756 shape=(1, 9000, 1)
logits [[ 0.69392455  0.77967656  0.7826248  -5.2813854 ]]
Iteration 400 of 1000: loss=0.219 " + "l1=0" + "l2=0.219 f=-0.744 shape=(1, 9000, 1)
logits [[ 0.66567814  0.7828398   0.7723456  -5.1969085 ]]
Iteration 500 of 1000: loss=0.194 " + "l1=0.000556" + "l2=0.194 f=-0.735 shape=(1, 9000, 1)
logits [[ 0.66590023  0.7753176   0.7758741  -5.1561613 ]]
Iteration 600 of 1000: loss=0.185 " + "l1=0.00734" + "l2=0.178 f=-0.729 shape=(1, 9000, 1)
logits [[ 0.6674931   0.77116686  0.7785025  -5.1317616 ]]
Iteration 700 of 1000: loss=0.166 " + "l1=0" + "l2=0.166 f=-0.725 shape=(1, 9000, 1)
logits [[ 0.6494755   0.7740908   0.77285445 -5.096393  ]]
Iteration 800 of 1000: loss=0.16 " + "l1=0.00708" + "l2=0.152 f=-0.719 shape=(1, 9000, 1)
logits [[ 0.6546297   0.76750356  0.7745871  -5.07255   ]]
Iteration 900 of 1000: loss=0.146 " + "l1=0.00216" + "l2=0.144 f=-0.714 shape=(1, 9000, 1)
logits [[ 0.65416783  0.76726896  0.76942587 -5.0449142 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.88 " + "l1=1.88" + "l2=0 f=-0.648 shape=(1, 9000, 1)
logits [[ 2.5731652 -0.8481099  2.1389008 -6.456655 ]]
Iteration 100 of 1000: loss=0.518 " + "l1=0.158" + "l2=0.36 f=-0.772 shape=(1, 9000, 1)
logits [[ 0.918899    0.65304446  0.94122416 -5.6025476 ]]
Iteration 200 of 1000: loss=0.305 " + "l1=0.00825" + "l2=0.297 f=-0.768 shape=(1, 9000, 1)
logits [[ 0.6963081   0.7859344   0.80092984 -5.354599  ]]
Iteration 300 of 1000: loss=0.23 " + "l1=0" + "l2=0.23 f=-0.75 shape=(1, 9000, 1)
logits [[ 0.6495322  0.7867312  0.7837187 -5.220728 ]]
Iteration 400 of 1000: loss=0.195 " + "l1=0.00307" + "l2=0.192 f=-0.738 shape=(1, 9000, 1)
logits [[ 0.64160013  0.77931947  0.78489476 -5.1561823 ]]
Iteration 500 of 1000: loss=0.173 " + "l1=0" + "l2=0.173 f=-0.731 shape=(1, 9000, 1)
logits [[ 0.6172182  0.7851597  0.7785619 -5.106307 ]]
Iteration 600 of 1000: loss=0.156 " + "l1=7.24e-05" + "l2=0.156 f=-0.722 shape=(1, 9000, 1)
logits [[ 0.6320075   0.77809256  0.7782243  -5.07636   ]]
Iteration 700 of 1000: loss=0.146 " + "l1=0" + "l2=0.146 f=-0.717 shape=(1, 9000, 1)
logits [[ 0.619249    0.7899864   0.76482785 -5.0419393 ]]
Iteration 800 of 1000: loss=0.132 " + "l1=0.00127" + "l2=0.131 f=-0.709 shape=(1, 9000, 1)
logits [[ 0.6428746  0.7734403  0.7757425 -5.028355 ]]
Iteration 900 of 1000: loss=0.12 " + "l1=0" + "l2=0.12 f=-0.703 shape=(1, 9000, 1)
logits [[ 0.64569634  0.772975    0.772361   -5.0030365 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.11 " + "l1=1.11" + "l2=0 f=-0.648 shape=(1, 9000, 1)
logits [[ 2.5731652 -0.8481099  2.1389008 -6.456655 ]]
Iteration 100 of 1000: loss=0.463 " + "l1=0.271" + "l2=0.191 f=-0.748 shape=(1, 9000, 1)
logits [[ 1.2086164  0.373616   1.203576  -5.7790194]]
Iteration 200 of 1000: loss=0.351 " + "l1=0.141" + "l2=0.21 f=-0.75 shape=(1, 9000, 1)
logits [[ 0.9922179  0.570954   1.0038811 -5.5652566]]
Iteration 300 of 1000: loss=0.26 " + "l1=0.0306" + "l2=0.229 f=-0.751 shape=(1, 9000, 1)
logits [[ 0.7540322  0.7482439  0.8422933 -5.3470426]]
Iteration 400 of 1000: loss=0.187 " + "l1=0.00177" + "l2=0.186 f=-0.74 shape=(1, 9000, 1)
logits [[ 0.62435406  0.78546333  0.7908993  -5.160833  ]]
Iteration 500 of 1000: loss=0.158 " + "l1=0" + "l2=0.158 f=-0.728 shape=(1, 9000, 1)
logits [[ 0.61494136  0.78671175  0.7862867  -5.099455  ]]
Iteration 600 of 1000: loss=0.142 " + "l1=0" + "l2=0.142 f=-0.72 shape=(1, 9000, 1)
logits [[ 0.6223209   0.7856101   0.78137237 -5.0693464 ]]
Iteration 700 of 1000: loss=0.13 " + "l1=0.00138" + "l2=0.128 f=-0.712 shape=(1, 9000, 1)
logits [[ 0.63738304  0.77873915  0.78299534 -5.048665  ]]
Iteration 800 of 1000: loss=0.119 " + "l1=0.00148" + "l2=0.117 f=-0.706 shape=(1, 9000, 1)
logits [[ 0.6409757  0.7753426  0.7798991 -5.018273 ]]
Iteration 900 of 1000: loss=0.108 " + "l1=0" + "l2=0.108 f=-0.699 shape=(1, 9000, 1)
logits [[ 0.64575875  0.77918065  0.77295125 -4.9921517 ]]
--- 288.9768033027649 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00434 " + "l1=0.00434" + "l2=0 f=-0.648 shape=(1, 9000, 1)
logits [[ 2.5731652 -0.8481099  2.1389008 -6.456655 ]]
Iteration 100 of 1000: loss=0.00393 " + "l1=0.00365" + "l2=0.000281 f=-0.654 shape=(1, 9000, 1)
logits [[ 2.5157185 -0.8421332  2.1508796 -6.441948 ]]
Iteration 200 of 1000: loss=0.0038 " + "l1=0.00352" + "l2=0.00028 f=-0.656 shape=(1, 9000, 1)
logits [[ 2.5045686  -0.83876985  2.1527903  -6.440873  ]]
Iteration 300 of 1000: loss=0.00371 " + "l1=0.00335" + "l2=0.000358 f=-0.657 shape=(1, 9000, 1)
logits [[ 2.4905565 -0.8352527  2.1550906 -6.43845  ]]
Iteration 400 of 1000: loss=0.00363 " + "l1=0.00319" + "l2=0.000445 f=-0.658 shape=(1, 9000, 1)
logits [[ 2.4761944 -0.8318789  2.1575923 -6.435606 ]]
Iteration 500 of 1000: loss=0.00356 " + "l1=0.00302" + "l2=0.00054 f=-0.66 shape=(1, 9000, 1)
logits [[ 2.4627469 -0.8294303  2.1605396 -6.432956 ]]
Iteration 600 of 1000: loss=0.00354 " + "l1=0.00287" + "l2=0.000671 f=-0.661 shape=(1, 9000, 1)
logits [[ 2.4506934  -0.82787126  2.1635091  -6.430117  ]]
Iteration 700 of 1000: loss=0.00353 " + "l1=0.00274" + "l2=0.000791 f=-0.662 shape=(1, 9000, 1)
logits [[ 2.4401658  -0.82676613  2.1662807  -6.427403  ]]
Iteration 800 of 1000: loss=0.00346 " + "l1=0.00261" + "l2=0.000857 f=-0.663 shape=(1, 9000, 1)
logits [[ 2.430509  -0.8267914  2.169726  -6.425006 ]]
Iteration 900 of 1000: loss=0.00348 " + "l1=0.00249" + "l2=0.00099 f=-0.664 shape=(1, 9000, 1)
logits [[ 2.4216368 -0.8271563  2.172983  -6.422198 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0434 " + "l1=0.0434" + "l2=0 f=-0.648 shape=(1, 9000, 1)
logits [[ 2.5731652 -0.8481099  2.1389008 -6.456655 ]]
Iteration 100 of 1000: loss=0.0103 " + "l1=0" + "l2=0.0103 f=-0.691 shape=(1, 9000, 1)
logits [[ 2.1986184  -0.78833264  2.2012398  -6.3749876 ]]
Iteration 200 of 1000: loss=0.0065 " + "l1=0.000189" + "l2=0.00631 f=-0.688 shape=(1, 9000, 1)
logits [[ 2.203461  -0.7856283  2.201568  -6.3731103]]
Iteration 300 of 1000: loss=0.0052 " + "l1=0" + "l2=0.0052 f=-0.688 shape=(1, 9000, 1)
logits [[ 2.1997886 -0.7845797  2.2037961 -6.370406 ]]
Iteration 400 of 1000: loss=0.00472 " + "l1=0.000287" + "l2=0.00443 f=-0.686 shape=(1, 9000, 1)
logits [[ 2.2088935 -0.7891393  2.206021  -6.369148 ]]
Iteration 500 of 1000: loss=0.00425 " + "l1=0" + "l2=0.00425 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.2062774 -0.7921334  2.2100253 -6.366061 ]]
Iteration 600 of 1000: loss=0.00413 " + "l1=0" + "l2=0.00413 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.2064717 -0.7963614  2.2132983 -6.361588 ]]
Iteration 700 of 1000: loss=0.00408 " + "l1=0" + "l2=0.00408 f=-0.684 shape=(1, 9000, 1)
logits [[ 2.2007666 -0.8000639  2.2175262 -6.356076 ]]
Iteration 800 of 1000: loss=0.00371 " + "l1=0" + "l2=0.00371 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.2123177 -0.8067093  2.2188895 -6.354699 ]]
Iteration 900 of 1000: loss=0.0037 " + "l1=0.000164" + "l2=0.00354 f=-0.681 shape=(1, 9000, 1)
logits [[ 2.2216594  -0.81256473  2.2200234  -6.352643  ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0239 " + "l1=0.0239" + "l2=0 f=-0.648 shape=(1, 9000, 1)
logits [[ 2.5731652 -0.8481099  2.1389008 -6.456655 ]]
Iteration 100 of 1000: loss=0.0124 " + "l1=0.00638" + "l2=0.00606 f=-0.679 shape=(1, 9000, 1)
logits [[ 2.3040388  -0.80829746  2.188029   -6.398275  ]]
Iteration 200 of 1000: loss=0.00737 " + "l1=0.000136" + "l2=0.00723 f=-0.69 shape=(1, 9000, 1)
logits [[ 2.204187  -0.7855774  2.2017229 -6.37844  ]]
Iteration 300 of 1000: loss=0.00544 " + "l1=9.95e-05" + "l2=0.00534 f=-0.688 shape=(1, 9000, 1)
logits [[ 2.2046688 -0.7846148  2.2028592 -6.3755493]]
Iteration 400 of 1000: loss=0.00466 " + "l1=9.11e-05" + "l2=0.00457 f=-0.687 shape=(1, 9000, 1)
logits [[ 2.2069821  -0.78699434  2.205325   -6.373142  ]]
Iteration 500 of 1000: loss=0.00437 " + "l1=0" + "l2=0.00437 f=-0.686 shape=(1, 9000, 1)
logits [[ 2.2064981 -0.7900787  2.2086613 -6.369762 ]]
Iteration 600 of 1000: loss=0.0041 " + "l1=0" + "l2=0.0041 f=-0.686 shape=(1, 9000, 1)
logits [[ 2.2029476  -0.79341716  2.212507   -6.3650775 ]]
Iteration 700 of 1000: loss=0.00376 " + "l1=2.23e-05" + "l2=0.00373 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.214446  -0.8000628  2.2140398 -6.3620586]]
Iteration 800 of 1000: loss=0.00404 " + "l1=0" + "l2=0.00404 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.2114449 -0.8045503  2.2180614 -6.3576593]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0141 " + "l1=0.0141" + "l2=0 f=-0.648 shape=(1, 9000, 1)
logits [[ 2.5731652 -0.8481099  2.1389008 -6.456655 ]]
Iteration 100 of 1000: loss=0.0101 " + "l1=0.00789" + "l2=0.00217 f=-0.666 shape=(1, 9000, 1)
logits [[ 2.41182   -0.8248711  2.1691878 -6.419027 ]]
Iteration 200 of 1000: loss=0.00849 " + "l1=0.0057" + "l2=0.00279 f=-0.672 shape=(1, 9000, 1)
logits [[ 2.3539848  -0.81221974  2.1785786  -6.408799  ]]
Iteration 300 of 1000: loss=0.00704 " + "l1=0.00349" + "l2=0.00355 f=-0.678 shape=(1, 9000, 1)
logits [[ 2.2963924 -0.8016446  2.189036  -6.3963375]]
Iteration 400 of 1000: loss=0.00572 " + "l1=0.00125" + "l2=0.00447 f=-0.684 shape=(1, 9000, 1)
logits [[ 2.2376506 -0.7916418  2.1992023 -6.3816066]]
Iteration 500 of 1000: loss=0.00462 " + "l1=2.21e-05" + "l2=0.00459 f=-0.687 shape=(1, 9000, 1)
logits [[ 2.2063699 -0.787293   2.2056906 -6.370904 ]]
Iteration 600 of 1000: loss=0.00425 " + "l1=3.38e-05" + "l2=0.00421 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.2093396 -0.7906373  2.2083    -6.368131 ]]
Iteration 700 of 1000: loss=0.00403 " + "l1=0.000216" + "l2=0.00382 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.217182   -0.79627895  2.2105377  -6.36505   ]]
Iteration 800 of 1000: loss=0.00382 " + "l1=2.16e-05" + "l2=0.0038 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.2148507 -0.8003019  2.2141874 -6.360316 ]]
Iteration 900 of 1000: loss=0.00362 " + "l1=0" + "l2=0.00362 f=-0.682 shape=(1, 9000, 1)
logits [[ 2.2147448 -0.80531    2.2176785 -6.3564343]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00923 " + "l1=0.00923" + "l2=0 f=-0.648 shape=(1, 9000, 1)
logits [[ 2.5731652 -0.8481099  2.1389008 -6.456655 ]]
Iteration 100 of 1000: loss=0.00746 " + "l1=0.00646" + "l2=0.000997 f=-0.66 shape=(1, 9000, 1)
logits [[ 2.463705  -0.8332214  2.159763  -6.4307046]]
Iteration 200 of 1000: loss=0.00682 " + "l1=0.00564" + "l2=0.00118 f=-0.664 shape=(1, 9000, 1)
logits [[ 2.4305594 -0.8248509  2.1651914 -6.4250393]]
Iteration 300 of 1000: loss=0.00627 " + "l1=0.0048" + "l2=0.00147 f=-0.667 shape=(1, 9000, 1)
logits [[ 2.3965418 -0.8172586  2.1707118 -6.417996 ]]
Iteration 400 of 1000: loss=0.00577 " + "l1=0.00394" + "l2=0.00183 f=-0.67 shape=(1, 9000, 1)
logits [[ 2.364043   -0.81296164  2.178401   -6.4108424 ]]
Iteration 500 of 1000: loss=0.00532 " + "l1=0.00315" + "l2=0.00217 f=-0.673 shape=(1, 9000, 1)
logits [[ 2.3333042 -0.8088272  2.1850498 -6.402545 ]]
Iteration 600 of 1000: loss=0.00495 " + "l1=0.00242" + "l2=0.00252 f=-0.676 shape=(1, 9000, 1)
logits [[ 2.3054976 -0.8059208  2.1914997 -6.394041 ]]
Iteration 700 of 1000: loss=0.00467 " + "l1=0.0017" + "l2=0.00296 f=-0.678 shape=(1, 9000, 1)
logits [[ 2.2785828  -0.80436885  2.1984112  -6.3853507 ]]
Iteration 800 of 1000: loss=0.00431 " + "l1=0.00107" + "l2=0.00325 f=-0.68 shape=(1, 9000, 1)
logits [[ 2.2546933  -0.80316556  2.2045293  -6.376984  ]]
Iteration 900 of 1000: loss=0.00406 " + "l1=0.000477" + "l2=0.00358 f=-0.682 shape=(1, 9000, 1)
logits [[ 2.2329147 -0.8026962  2.2104468 -6.3686724]]
--- 276.7362742424011 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0903 " + "l1=0.0903" + "l2=0 f=-0.648 shape=(1, 9000, 1)
logits [[ 2.5731652 -0.8481099  2.1389008 -6.456655 ]]
Iteration 100 of 1000: loss=0.0891 " + "l1=0.0885" + "l2=0.000624 f=-0.647 shape=(1, 9000, 1)
logits [[ 2.4795122  -0.80681443  2.1088262  -6.3714437 ]]
Iteration 200 of 1000: loss=0.0888 " + "l1=0.088" + "l2=0.000739 f=-0.647 shape=(1, 9000, 1)
logits [[ 2.45454    -0.79543805  2.1006496  -6.3474107 ]]
Iteration 300 of 1000: loss=0.0884 " + "l1=0.0875" + "l2=0.000963 f=-0.646 shape=(1, 9000, 1)
logits [[ 2.4276536  -0.78377634  2.092292   -6.3204055 ]]
Iteration 400 of 1000: loss=0.0881 " + "l1=0.0869" + "l2=0.00118 f=-0.645 shape=(1, 9000, 1)
logits [[ 2.4012864 -0.7724712  2.0842786 -6.293251 ]]
Iteration 500 of 1000: loss=0.0878 " + "l1=0.0864" + "l2=0.0014 f=-0.644 shape=(1, 9000, 1)
logits [[ 2.377095  -0.7624466  2.0772712 -6.2671313]]
Iteration 600 of 1000: loss=0.0876 " + "l1=0.086" + "l2=0.00161 f=-0.642 shape=(1, 9000, 1)
logits [[ 2.3550313 -0.7533863  2.0709665 -6.2425003]]
Iteration 700 of 1000: loss=0.0875 " + "l1=0.0855" + "l2=0.00198 f=-0.641 shape=(1, 9000, 1)
logits [[ 2.3327732 -0.7449211  2.0648315 -6.2169046]]
Iteration 800 of 1000: loss=0.0872 " + "l1=0.085" + "l2=0.0022 f=-0.64 shape=(1, 9000, 1)
logits [[ 2.3122578 -0.7372717  2.059236  -6.192265 ]]
Iteration 900 of 1000: loss=0.087 " + "l1=0.0846" + "l2=0.0024 f=-0.638 shape=(1, 9000, 1)
logits [[ 2.2925205 -0.7298923  2.0537145 -6.168315 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.903 " + "l1=0.903" + "l2=0 f=-0.648 shape=(1, 9000, 1)
logits [[ 2.5731652 -0.8481099  2.1389008 -6.456655 ]]
Iteration 100 of 1000: loss=0.794 " + "l1=0.741" + "l2=0.0523 f=-0.646 shape=(1, 9000, 1)
logits [[ 1.7342709  -0.38077754  1.7375138  -5.676265  ]]
Iteration 200 of 1000: loss=0.747 " + "l1=0.684" + "l2=0.0628 f=-0.618 shape=(1, 9000, 1)
logits [[ 1.5359135  -0.23862539  1.5363017  -5.3072357 ]]
Iteration 300 of 1000: loss=0.712 " + "l1=0.637" + "l2=0.0748 f=-0.595 shape=(1, 9000, 1)
logits [[ 1.3729166  -0.14090368  1.3802608  -4.992178  ]]
Iteration 400 of 1000: loss=0.68 " + "l1=0.595" + "l2=0.0856 f=-0.572 shape=(1, 9000, 1)
logits [[ 1.2356558  -0.06330664  1.2422346  -4.7039456 ]]
Iteration 500 of 1000: loss=0.651 " + "l1=0.557" + "l2=0.0937 f=-0.551 shape=(1, 9000, 1)
logits [[ 1.1123978  -0.00671737  1.130075   -4.4403977 ]]
Iteration 600 of 1000: loss=0.621 " + "l1=0.52" + "l2=0.101 f=-0.532 shape=(1, 9000, 1)
logits [[ 0.9925388   0.03454275  1.0249503  -4.178424  ]]
Iteration 700 of 1000: loss=0.594 " + "l1=0.487" + "l2=0.107 f=-0.518 shape=(1, 9000, 1)
logits [[ 0.8534296   0.07914721  0.9326572  -3.9359524 ]]
Iteration 800 of 1000: loss=0.571 " + "l1=0.459" + "l2=0.112 f=-0.51 shape=(1, 9000, 1)
logits [[ 0.7289029   0.11252527  0.8536786  -3.7340968 ]]
Iteration 900 of 1000: loss=0.552 " + "l1=0.436" + "l2=0.116 f=-0.506 shape=(1, 9000, 1)
logits [[ 0.618256    0.12967783  0.7954012  -3.5664725 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.03 " + "l1=9.03" + "l2=0 f=-0.648 shape=(1, 9000, 1)
logits [[ 2.5731652 -0.8481099  2.1389008 -6.456655 ]]
Iteration 100 of 1000: loss=3.9 " + "l1=2.19" + "l2=1.71 f=-0.446 shape=(1, 9000, 1)
logits [[ 0.02412386 -0.07358444  0.22688644 -1.960293  ]]
Iteration 200 of 1000: loss=1.8 " + "l1=0.00328" + "l2=1.8 f=-0.355 shape=(1, 9000, 1)
logits [[-0.674435   -0.25603443 -0.24250372 -0.24578685]]
Iteration 300 of 1000: loss=1.28 " + "l1=0" + "l2=1.28 f=-0.352 shape=(1, 9000, 1)
logits [[-0.6905771  -0.24439664 -0.23612623 -0.23586285]]
Iteration 400 of 1000: loss=1.07 " + "l1=0" + "l2=1.07 f=-0.355 shape=(1, 9000, 1)
logits [[-0.74074876 -0.23547497 -0.22359179 -0.22033864]]
Iteration 500 of 1000: loss=0.961 " + "l1=0" + "l2=0.961 f=-0.36 shape=(1, 9000, 1)
logits [[-0.7734997  -0.23415284 -0.21807753 -0.2149548 ]]
Iteration 600 of 1000: loss=0.905 " + "l1=0" + "l2=0.905 f=-0.355 shape=(1, 9000, 1)
logits [[-0.76653    -0.25340956 -0.2133215  -0.1885665 ]]
Iteration 700 of 1000: loss=0.856 " + "l1=0" + "l2=0.856 f=-0.348 shape=(1, 9000, 1)
logits [[-0.7607311  -0.25586224 -0.20598257 -0.16978475]]
Iteration 800 of 1000: loss=0.802 " + "l1=0.011" + "l2=0.791 f=-0.359 shape=(1, 9000, 1)
logits [[-0.8037243  -0.20630248 -0.20700106 -0.2173016 ]]
Iteration 900 of 1000: loss=0.762 " + "l1=0" + "l2=0.762 f=-0.359 shape=(1, 9000, 1)
logits [[-0.81635576 -0.20814331 -0.20894016 -0.20220137]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.97 " + "l1=4.97" + "l2=0 f=-0.648 shape=(1, 9000, 1)
logits [[ 2.5731652 -0.8481099  2.1389008 -6.456655 ]]
Iteration 100 of 1000: loss=2.97 " + "l1=2.28" + "l2=0.684 f=-0.531 shape=(1, 9000, 1)
logits [[ 0.6785205 -0.0447924  0.6958301 -3.4530723]]
Iteration 200 of 1000: loss=1.98 " + "l1=0.905" + "l2=1.07 f=-0.4 shape=(1, 9000, 1)
logits [[-0.11320089  0.02242741  0.06914981 -1.5772035 ]]
Iteration 300 of 1000: loss=1.27 " + "l1=0.0951" + "l2=1.18 f=-0.331 shape=(1, 9000, 1)
logits [[-0.5482453  -0.21490647 -0.19420065 -0.36719003]]
Iteration 400 of 1000: loss=0.969 " + "l1=0.00566" + "l2=0.963 f=-0.336 shape=(1, 9000, 1)
logits [[-0.695036   -0.21282329 -0.21246392 -0.22274607]]
Iteration 500 of 1000: loss=0.864 " + "l1=0.0141" + "l2=0.85 f=-0.344 shape=(1, 9000, 1)
logits [[-0.7236876  -0.21952932 -0.20356861 -0.22913238]]
Iteration 600 of 1000: loss=0.795 " + "l1=0" + "l2=0.795 f=-0.344 shape=(1, 9000, 1)
logits [[-0.7558089  -0.2095783  -0.20908497 -0.2026357 ]]
Iteration 700 of 1000: loss=0.751 " + "l1=0.00737" + "l2=0.744 f=-0.346 shape=(1, 9000, 1)
logits [[-0.76875824 -0.19862422 -0.2029228  -0.21202567]]
Iteration 800 of 1000: loss=0.719 " + "l1=0" + "l2=0.719 f=-0.347 shape=(1, 9000, 1)
logits [[-0.7995364  -0.19800548 -0.2137813  -0.1758318 ]]
Iteration 900 of 1000: loss=0.675 " + "l1=0" + "l2=0.675 f=-0.35 shape=(1, 9000, 1)
logits [[-0.792421   -0.2015044  -0.20654972 -0.19962421]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.93 " + "l1=2.93" + "l2=0 f=-0.648 shape=(1, 9000, 1)
logits [[ 2.5731652 -0.8481099  2.1389008 -6.456655 ]]
Iteration 100 of 1000: loss=2.08 " + "l1=1.77" + "l2=0.308 f=-0.579 shape=(1, 9000, 1)
logits [[ 1.049415   -0.02996553  1.0596783  -4.395953  ]]
Iteration 200 of 1000: loss=1.73 " + "l1=1.32" + "l2=0.415 f=-0.503 shape=(1, 9000, 1)
logits [[ 0.6704891   0.02429063  0.67461544 -3.382054  ]]
Iteration 300 of 1000: loss=1.4 " + "l1=0.831" + "l2=0.567 f=-0.443 shape=(1, 9000, 1)
logits [[ 0.17361467  0.06044083  0.2753329  -2.2810364 ]]
Iteration 400 of 1000: loss=1.1 " + "l1=0.415" + "l2=0.687 f=-0.379 shape=(1, 9000, 1)
logits [[-0.19362482 -0.03189913 -0.00629735 -1.284577  ]]
Iteration 500 of 1000: loss=0.922 " + "l1=0.21" + "l2=0.711 f=-0.359 shape=(1, 9000, 1)
logits [[-0.45920262 -0.10713937 -0.11638049 -0.7538302 ]]
Iteration 600 of 1000: loss=0.809 " + "l1=0.0996" + "l2=0.709 f=-0.342 shape=(1, 9000, 1)
logits [[-0.6018058  -0.1535038  -0.15325797 -0.45983136]]
Iteration 700 of 1000: loss=0.733 " + "l1=0.0102" + "l2=0.722 f=-0.332 shape=(1, 9000, 1)
logits [[-0.7309253  -0.18848287 -0.18833093 -0.21986324]]
Iteration 800 of 1000: loss=0.68 " + "l1=0.00767" + "l2=0.672 f=-0.337 shape=(1, 9000, 1)
logits [[-0.7695615  -0.18492424 -0.18661188 -0.20852622]]
Iteration 900 of 1000: loss=0.638 " + "l1=0.00282" + "l2=0.636 f=-0.337 shape=(1, 9000, 1)
logits [[-0.771363   -0.2031108  -0.18159063 -0.1902568 ]]
--- 291.41115736961365 seconds ---
Adv result:3
Loading record A06397
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0613 " + "l1=0.0613" + "l2=0 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.637277  -2.4964817  2.5193038 -5.5679502]]
Iteration 100 of 1000: loss=0.061 " + "l1=0.0607" + "l2=0.00027 f=-0.474 shape=(1, 9000, 1)
logits [[ 3.6041873 -2.4639907  2.497688  -5.5355825]]
Iteration 200 of 1000: loss=0.0608 " + "l1=0.0606" + "l2=0.000263 f=-0.474 shape=(1, 9000, 1)
logits [[ 3.599813  -2.458378   2.4935179 -5.532214 ]]
Iteration 300 of 1000: loss=0.0608 " + "l1=0.0604" + "l2=0.000335 f=-0.474 shape=(1, 9000, 1)
logits [[ 3.5936384 -2.4510503  2.4883935 -5.5268908]]
Iteration 400 of 1000: loss=0.0607 " + "l1=0.0603" + "l2=0.00039 f=-0.474 shape=(1, 9000, 1)
logits [[ 3.5873811 -2.4438143  2.4831824 -5.5212827]]
Iteration 500 of 1000: loss=0.0607 " + "l1=0.0602" + "l2=0.0005 f=-0.473 shape=(1, 9000, 1)
logits [[ 3.5811481 -2.4368744  2.4780252 -5.5155363]]
Iteration 600 of 1000: loss=0.0607 " + "l1=0.0601" + "l2=0.000606 f=-0.473 shape=(1, 9000, 1)
logits [[ 3.575126  -2.43048    2.4731538 -5.5098968]]
Iteration 700 of 1000: loss=0.0607 " + "l1=0.0599" + "l2=0.000717 f=-0.473 shape=(1, 9000, 1)
logits [[ 3.569265  -2.4249125  2.4686391 -5.5041394]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.613 " + "l1=0.613" + "l2=0 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.637277  -2.4964817  2.5193038 -5.5679502]]
Iteration 100 of 1000: loss=0.578 " + "l1=0.558" + "l2=0.0199 f=-0.452 shape=(1, 9000, 1)
logits [[ 3.3643448 -2.2162097  2.3389788 -5.294755 ]]
Iteration 200 of 1000: loss=0.558 " + "l1=0.527" + "l2=0.0314 f=-0.439 shape=(1, 9000, 1)
logits [[ 3.2229867 -2.0465093  2.225975  -5.158477 ]]
Iteration 300 of 1000: loss=0.542 " + "l1=0.5" + "l2=0.0412 f=-0.43 shape=(1, 9000, 1)
logits [[ 3.0937681 -1.9106519  2.1308434 -5.0331903]]
Iteration 400 of 1000: loss=0.526 " + "l1=0.477" + "l2=0.049 f=-0.421 shape=(1, 9000, 1)
logits [[ 2.9661856 -1.7998468  2.0502806 -4.8986473]]
Iteration 500 of 1000: loss=0.506 " + "l1=0.445" + "l2=0.0611 f=-0.411 shape=(1, 9000, 1)
logits [[ 2.7801657 -1.6658945  1.9584655 -4.7180257]]
Iteration 600 of 1000: loss=0.485 " + "l1=0.412" + "l2=0.0722 f=-0.41 shape=(1, 9000, 1)
logits [[ 2.572815  -1.5508007  1.877986  -4.539198 ]]
Iteration 700 of 1000: loss=0.461 " + "l1=0.378" + "l2=0.0828 f=-0.415 shape=(1, 9000, 1)
logits [[ 2.3440568 -1.4366276  1.7904525 -4.35648  ]]
Iteration 800 of 1000: loss=0.44 " + "l1=0.351" + "l2=0.0889 f=-0.415 shape=(1, 9000, 1)
logits [[ 2.1678288 -1.3391203  1.7126788 -4.202553 ]]
Iteration 900 of 1000: loss=0.42 " + "l1=0.329" + "l2=0.0915 f=-0.417 shape=(1, 9000, 1)
logits [[ 2.022742  -1.2639276  1.6469439 -4.07416  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.13 " + "l1=6.13" + "l2=0 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.637277  -2.4964817  2.5193038 -5.5679502]]
Iteration 100 of 1000: loss=2.48 " + "l1=1.07" + "l2=1.41 f=-0.379 shape=(1, 9000, 1)
logits [[ 0.8177788  -0.24838702  0.81324905 -2.8990972 ]]
Iteration 200 of 1000: loss=1.57 " + "l1=0.184" + "l2=1.38 f=-0.354 shape=(1, 9000, 1)
logits [[ 0.4063839   0.22267687  0.40345863 -2.449488  ]]
Iteration 300 of 1000: loss=1.13 " + "l1=0.021" + "l2=1.11 f=-0.356 shape=(1, 9000, 1)
logits [[ 0.296721    0.29391894  0.31491575 -2.3296194 ]]
Iteration 400 of 1000: loss=0.938 " + "l1=0.00152" + "l2=0.937 f=-0.355 shape=(1, 9000, 1)
logits [[ 0.28545848  0.29316247  0.29468328 -2.2944787 ]]
Iteration 500 of 1000: loss=0.837 " + "l1=0.00666" + "l2=0.83 f=-0.353 shape=(1, 9000, 1)
logits [[ 0.26942772  0.28757316  0.29423168 -2.2631457 ]]
Iteration 600 of 1000: loss=0.763 " + "l1=0" + "l2=0.763 f=-0.346 shape=(1, 9000, 1)
logits [[ 0.27458766  0.28986308  0.2892313  -2.23672   ]]
Iteration 700 of 1000: loss=0.717 " + "l1=0.00412" + "l2=0.713 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.24440458  0.28610837  0.29023015 -2.2086842 ]]
Iteration 800 of 1000: loss=0.678 " + "l1=0.00256" + "l2=0.676 f=-0.343 shape=(1, 9000, 1)
logits [[ 0.2618554   0.28085518  0.28341874 -2.198337  ]]
Iteration 900 of 1000: loss=0.651 " + "l1=0" + "l2=0.651 f=-0.343 shape=(1, 9000, 1)
logits [[ 0.2486679   0.2841699   0.27580783 -2.1811078 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.37 " + "l1=3.37" + "l2=0 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.637277  -2.4964817  2.5193038 -5.5679502]]
Iteration 100 of 1000: loss=1.98 " + "l1=1.22" + "l2=0.76 f=-0.418 shape=(1, 9000, 1)
logits [[ 1.363802  -0.8588951  1.3647505 -3.5423243]]
Iteration 200 of 1000: loss=1.45 " + "l1=0.772" + "l2=0.68 f=-0.42 shape=(1, 9000, 1)
logits [[ 0.9541682  -0.4434966   0.95963264 -3.1506932 ]]
Iteration 300 of 1000: loss=1.16 " + "l1=0.485" + "l2=0.673 f=-0.412 shape=(1, 9000, 1)
logits [[ 0.6964345  -0.17582288  0.7063822  -2.8762743 ]]
Iteration 400 of 1000: loss=0.966 " + "l1=0.291" + "l2=0.676 f=-0.4 shape=(1, 9000, 1)
logits [[ 0.5459765   0.02507417  0.55359    -2.7236342 ]]
Iteration 500 of 1000: loss=0.845 " + "l1=0.184" + "l2=0.661 f=-0.391 shape=(1, 9000, 1)
logits [[ 0.4803066   0.14565559  0.4756549  -2.6675653 ]]
Iteration 600 of 1000: loss=0.754 " + "l1=0.109" + "l2=0.645 f=-0.383 shape=(1, 9000, 1)
logits [[ 0.40204677  0.22298045  0.42153856 -2.5785463 ]]
Iteration 700 of 1000: loss=0.667 " + "l1=0.0464" + "l2=0.62 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.32422674  0.28226894  0.3667128  -2.432088  ]]
Iteration 800 of 1000: loss=0.599 " + "l1=0.0116" + "l2=0.587 f=-0.35 shape=(1, 9000, 1)
logits [[ 0.32258996  0.304883    0.32596758 -2.3517568 ]]
Iteration 900 of 1000: loss=0.562 " + "l1=0" + "l2=0.562 f=-0.344 shape=(1, 9000, 1)
logits [[ 0.29618153  0.31429935  0.31224048 -2.3006983 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.99 " + "l1=1.99" + "l2=0 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.637277  -2.4964817  2.5193038 -5.5679502]]
Iteration 100 of 1000: loss=1.52 " + "l1=1.24" + "l2=0.278 f=-0.408 shape=(1, 9000, 1)
logits [[ 2.4115162 -1.409313   1.812506  -4.4453864]]
Iteration 200 of 1000: loss=1.22 " + "l1=0.841" + "l2=0.384 f=-0.408 shape=(1, 9000, 1)
logits [[ 1.612943  -0.9739525  1.490192  -3.7600365]]
Iteration 300 of 1000: loss=1.01 " + "l1=0.589" + "l2=0.418 f=-0.428 shape=(1, 9000, 1)
logits [[ 1.1606907  -0.64975774  1.161976   -3.3830755 ]]
Iteration 400 of 1000: loss=0.883 " + "l1=0.488" + "l2=0.395 f=-0.434 shape=(1, 9000, 1)
logits [[ 1.0028648  -0.49829763  0.9964514  -3.235642  ]]
Iteration 500 of 1000: loss=0.792 " + "l1=0.408" + "l2=0.384 f=-0.435 shape=(1, 9000, 1)
logits [[ 0.8816526  -0.37333706  0.880999   -3.1293647 ]]
Iteration 600 of 1000: loss=0.717 " + "l1=0.329" + "l2=0.388 f=-0.432 shape=(1, 9000, 1)
logits [[ 0.7609806  -0.24780141  0.76515114 -3.0047157 ]]
Iteration 700 of 1000: loss=0.665 " + "l1=0.283" + "l2=0.382 f=-0.427 shape=(1, 9000, 1)
logits [[ 0.6925137  -0.17640828  0.69467664 -2.9195623 ]]
Iteration 800 of 1000: loss=0.625 " + "l1=0.254" + "l2=0.371 f=-0.417 shape=(1, 9000, 1)
logits [[ 0.64700145 -0.12528352  0.6550187  -2.8450513 ]]
Iteration 900 of 1000: loss=0.588 " + "l1=0.229" + "l2=0.359 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.6160526 -0.0880219  0.6179646 -2.758999 ]]
--- 275.56484818458557 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0112 " + "l1=0.0112" + "l2=0 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.637277  -2.4964817  2.5193038 -5.5679502]]
Iteration 100 of 1000: loss=0.0111 " + "l1=0.0109" + "l2=0.000143 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.618213  -2.5017679  2.5259967 -5.5507283]]
Iteration 200 of 1000: loss=0.011 " + "l1=0.0109" + "l2=0.00012 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.6183357 -2.5022416  2.5266325 -5.5515327]]
Iteration 300 of 1000: loss=0.011 " + "l1=0.0109" + "l2=0.000155 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.6166234 -2.5030494  2.5277874 -5.5503116]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.112 " + "l1=0.112" + "l2=0 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.637277  -2.4964817  2.5193038 -5.5679502]]
Iteration 100 of 1000: loss=0.101 " + "l1=0.0949" + "l2=0.00591 f=-0.479 shape=(1, 9000, 1)
logits [[ 3.5117118 -2.528884   2.5625417 -5.4602327]]
Iteration 200 of 1000: loss=0.097 " + "l1=0.089" + "l2=0.00808 f=-0.479 shape=(1, 9000, 1)
logits [[ 3.4713953 -2.5419536  2.5818286 -5.4289994]]
Iteration 300 of 1000: loss=0.0941 " + "l1=0.0838" + "l2=0.0103 f=-0.48 shape=(1, 9000, 1)
logits [[ 3.4377642 -2.553932   2.5998194 -5.403668 ]]
Iteration 400 of 1000: loss=0.0916 " + "l1=0.0795" + "l2=0.012 f=-0.48 shape=(1, 9000, 1)
logits [[ 3.4077063 -2.5604331  2.6124299 -5.3783255]]
Iteration 500 of 1000: loss=0.0893 " + "l1=0.0755" + "l2=0.0137 f=-0.479 shape=(1, 9000, 1)
logits [[ 3.376984  -2.5617676  2.6216042 -5.35285  ]]
Iteration 600 of 1000: loss=0.087 " + "l1=0.0717" + "l2=0.0153 f=-0.478 shape=(1, 9000, 1)
logits [[ 3.3452682 -2.5627959  2.6285267 -5.324422 ]]
Iteration 700 of 1000: loss=0.0844 " + "l1=0.0676" + "l2=0.0168 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.3104355 -2.5597749  2.6344585 -5.293431 ]]
Iteration 800 of 1000: loss=0.0812 " + "l1=0.0619" + "l2=0.0193 f=-0.474 shape=(1, 9000, 1)
logits [[ 3.262815  -2.549679   2.6436906 -5.2512174]]
Iteration 900 of 1000: loss=0.0778 " + "l1=0.056" + "l2=0.0218 f=-0.471 shape=(1, 9000, 1)
logits [[ 3.2114844 -2.541606   2.6519449 -5.20672  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.12 " + "l1=1.12" + "l2=0 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.637277  -2.4964817  2.5193038 -5.5679502]]
Iteration 100 of 1000: loss=0.216 " + "l1=0.00784" + "l2=0.208 f=-0.471 shape=(1, 9000, 1)
logits [[ 2.7650385 -2.614176   2.757195  -4.792774 ]]
Iteration 200 of 1000: loss=0.144 " + "l1=0" + "l2=0.144 f=-0.478 shape=(1, 9000, 1)
logits [[ 2.7776542 -2.6478193  2.7798474 -4.822621 ]]
Iteration 300 of 1000: loss=0.117 " + "l1=0" + "l2=0.117 f=-0.478 shape=(1, 9000, 1)
logits [[ 2.7693038 -2.634584   2.7732403 -4.821446 ]]
Iteration 400 of 1000: loss=0.1 " + "l1=0" + "l2=0.1 f=-0.476 shape=(1, 9000, 1)
logits [[ 2.7557    -2.6097987  2.757511  -4.809168 ]]
Iteration 500 of 1000: loss=0.0888 " + "l1=0" + "l2=0.0888 f=-0.475 shape=(1, 9000, 1)
logits [[ 2.7365263 -2.5841186  2.7379968 -4.789168 ]]
Iteration 600 of 1000: loss=0.0808 " + "l1=0" + "l2=0.0808 f=-0.473 shape=(1, 9000, 1)
logits [[ 2.7131696 -2.5594003  2.7166548 -4.764266 ]]
Iteration 700 of 1000: loss=0.0753 " + "l1=0" + "l2=0.0753 f=-0.473 shape=(1, 9000, 1)
logits [[ 2.6885061 -2.5424845  2.6971838 -4.7333302]]
Iteration 800 of 1000: loss=0.07 " + "l1=0" + "l2=0.07 f=-0.471 shape=(1, 9000, 1)
logits [[ 2.665337  -2.5237339  2.6770272 -4.7024555]]
Iteration 900 of 1000: loss=0.0649 " + "l1=0" + "l2=0.0649 f=-0.469 shape=(1, 9000, 1)
logits [[ 2.648387  -2.5029101  2.6560462 -4.676251 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.615 " + "l1=0.615" + "l2=0 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.637277  -2.4964817  2.5193038 -5.5679502]]
Iteration 100 of 1000: loss=0.241 " + "l1=0.0208" + "l2=0.221 f=-0.476 shape=(1, 9000, 1)
logits [[ 2.7948446 -2.6082623  2.757114  -4.847998 ]]
Iteration 200 of 1000: loss=0.138 " + "l1=0" + "l2=0.138 f=-0.48 shape=(1, 9000, 1)
logits [[ 2.7831316 -2.6278918  2.7834036 -4.8601403]]
Iteration 300 of 1000: loss=0.112 " + "l1=0.00166" + "l2=0.11 f=-0.478 shape=(1, 9000, 1)
logits [[ 2.7785375 -2.6127203  2.775515  -4.8549595]]
Iteration 400 of 1000: loss=0.0957 " + "l1=0" + "l2=0.0957 f=-0.475 shape=(1, 9000, 1)
logits [[ 2.756786  -2.5895476  2.7585156 -4.826619 ]]
Iteration 500 of 1000: loss=0.0871 " + "l1=0" + "l2=0.0871 f=-0.473 shape=(1, 9000, 1)
logits [[ 2.7272096 -2.5661492  2.7397661 -4.794022 ]]
Iteration 600 of 1000: loss=0.0798 " + "l1=0" + "l2=0.0798 f=-0.472 shape=(1, 9000, 1)
logits [[ 2.6990247 -2.5422285  2.71717   -4.7629743]]
Iteration 700 of 1000: loss=0.0721 " + "l1=0" + "l2=0.0721 f=-0.47 shape=(1, 9000, 1)
logits [[ 2.678183  -2.519243   2.691683  -4.7323146]]
Iteration 800 of 1000: loss=0.0656 " + "l1=0" + "l2=0.0656 f=-0.468 shape=(1, 9000, 1)
logits [[ 2.6593814 -2.4978797  2.6658905 -4.6988487]]
Iteration 900 of 1000: loss=0.063 " + "l1=0.00441" + "l2=0.0586 f=-0.465 shape=(1, 9000, 1)
logits [[ 2.6472046 -2.4752908  2.6391897 -4.669233 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.363 " + "l1=0.363" + "l2=0 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.637277  -2.4964817  2.5193038 -5.5679502]]
Iteration 100 of 1000: loss=0.248 " + "l1=0.184" + "l2=0.0645 f=-0.479 shape=(1, 9000, 1)
logits [[ 3.20856   -2.5732622  2.6434243 -5.1953826]]
Iteration 200 of 1000: loss=0.175 " + "l1=0.0618" + "l2=0.113 f=-0.479 shape=(1, 9000, 1)
logits [[ 2.9299695 -2.597765   2.7398157 -4.986728 ]]
Iteration 300 of 1000: loss=0.121 " + "l1=0.000831" + "l2=0.12 f=-0.482 shape=(1, 9000, 1)
logits [[ 2.781867  -2.6186235  2.7793088 -4.8686786]]
Iteration 400 of 1000: loss=0.0988 " + "l1=0" + "l2=0.0988 f=-0.478 shape=(1, 9000, 1)
logits [[ 2.761122  -2.5919905  2.7620745 -4.841785 ]]
Iteration 500 of 1000: loss=0.087 " + "l1=0.00209" + "l2=0.0849 f=-0.474 shape=(1, 9000, 1)
logits [[ 2.7468243 -2.5629683  2.7403793 -4.820396 ]]
Iteration 600 of 1000: loss=0.077 " + "l1=0" + "l2=0.077 f=-0.473 shape=(1, 9000, 1)
logits [[ 2.7168002 -2.5400188  2.7169373 -4.7863755]]
Iteration 700 of 1000: loss=0.0704 " + "l1=0" + "l2=0.0704 f=-0.472 shape=(1, 9000, 1)
logits [[ 2.6904209 -2.5210433  2.6937602 -4.749457 ]]
Iteration 800 of 1000: loss=0.0659 " + "l1=0.0032" + "l2=0.0627 f=-0.469 shape=(1, 9000, 1)
logits [[ 2.6731653 -2.4967294  2.6633308 -4.7163973]]
Iteration 900 of 1000: loss=0.0587 " + "l1=0" + "l2=0.0587 f=-0.466 shape=(1, 9000, 1)
logits [[ 2.6433926 -2.4789033  2.643784  -4.6731453]]
--- 251.98937726020813 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0921 " + "l1=0.0921" + "l2=0 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.637277  -2.4964817  2.5193038 -5.5679502]]
Iteration 100 of 1000: loss=0.0914 " + "l1=0.091" + "l2=0.000428 f=-0.474 shape=(1, 9000, 1)
logits [[ 3.5920155 -2.4804351  2.5015724 -5.5089293]]
Iteration 200 of 1000: loss=0.0913 " + "l1=0.0909" + "l2=0.000432 f=-0.474 shape=(1, 9000, 1)
logits [[ 3.5852242 -2.4778008  2.4984343 -5.500577 ]]
Iteration 300 of 1000: loss=0.0912 " + "l1=0.0907" + "l2=0.000506 f=-0.473 shape=(1, 9000, 1)
logits [[ 3.5766065 -2.474246   2.4945114 -5.489448 ]]
Iteration 400 of 1000: loss=0.091 " + "l1=0.0905" + "l2=0.000566 f=-0.473 shape=(1, 9000, 1)
logits [[ 3.567682  -2.470494   2.4902697 -5.477594 ]]
Iteration 500 of 1000: loss=0.091 " + "l1=0.0903" + "l2=0.000702 f=-0.472 shape=(1, 9000, 1)
logits [[ 3.5590703 -2.4669595  2.485971  -5.4659433]]
Iteration 600 of 1000: loss=0.0908 " + "l1=0.09" + "l2=0.000801 f=-0.471 shape=(1, 9000, 1)
logits [[ 3.5504918 -2.463534   2.481661  -5.4541287]]
Iteration 700 of 1000: loss=0.0908 " + "l1=0.0898" + "l2=0.000962 f=-0.471 shape=(1, 9000, 1)
logits [[ 3.541914  -2.459997   2.4771962 -5.442162 ]]
Iteration 800 of 1000: loss=0.0906 " + "l1=0.0896" + "l2=0.000959 f=-0.47 shape=(1, 9000, 1)
logits [[ 3.5334918 -2.4566245  2.4728332 -5.4302826]]
Iteration 900 of 1000: loss=0.0905 " + "l1=0.0894" + "l2=0.00109 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.5251925 -2.4532616  2.468542  -5.4183593]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.921 " + "l1=0.921" + "l2=0 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.637277  -2.4964817  2.5193038 -5.5679502]]
Iteration 100 of 1000: loss=0.864 " + "l1=0.83" + "l2=0.0334 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.2437637 -2.3451767  2.3615124 -5.057574 ]]
Iteration 200 of 1000: loss=0.836 " + "l1=0.784" + "l2=0.0521 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.0384128 -2.229362   2.2739823 -4.800012 ]]
Iteration 300 of 1000: loss=0.804 " + "l1=0.738" + "l2=0.0668 f=-0.413 shape=(1, 9000, 1)
logits [[ 2.8310933 -2.1101642  2.1740148 -4.5456824]]
Iteration 400 of 1000: loss=0.768 " + "l1=0.689" + "l2=0.0788 f=-0.399 shape=(1, 9000, 1)
logits [[ 2.615226  -1.9876405  2.0505629 -4.274943 ]]
Iteration 500 of 1000: loss=0.73 " + "l1=0.639" + "l2=0.091 f=-0.393 shape=(1, 9000, 1)
logits [[ 2.3807635 -1.8831639  1.9382428 -4.0058618]]
Iteration 600 of 1000: loss=0.696 " + "l1=0.596" + "l2=0.0998 f=-0.386 shape=(1, 9000, 1)
logits [[ 2.1751118 -1.7857935  1.8561975 -3.7876198]]
Iteration 700 of 1000: loss=0.664 " + "l1=0.557" + "l2=0.107 f=-0.382 shape=(1, 9000, 1)
logits [[ 1.9714029 -1.6882305  1.7849615 -3.5950055]]
Iteration 800 of 1000: loss=0.629 " + "l1=0.512" + "l2=0.117 f=-0.378 shape=(1, 9000, 1)
logits [[ 1.737731  -1.5938264  1.7251438 -3.380146 ]]
Iteration 900 of 1000: loss=0.599 " + "l1=0.487" + "l2=0.112 f=-0.369 shape=(1, 9000, 1)
logits [[ 1.6360822 -1.5178813  1.6368047 -3.2321274]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.21 " + "l1=9.21" + "l2=0 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.637277  -2.4964817  2.5193038 -5.5679502]]
Iteration 100 of 1000: loss=3.76 " + "l1=1.17" + "l2=2.58 f=-0.271 shape=(1, 9000, 1)
logits [[ 0.07863058 -0.9718246   0.49091336 -0.68254656]]
Iteration 200 of 1000: loss=2.29 " + "l1=0" + "l2=2.29 f=-0.187 shape=(1, 9000, 1)
logits [[-0.25265804 -0.7556278   0.1215656   0.13692611]]
Iteration 300 of 1000: loss=1.86 " + "l1=0" + "l2=1.86 f=-0.184 shape=(1, 9000, 1)
logits [[-0.2438373  -0.7070854   0.08800133  0.12652595]]
Iteration 400 of 1000: loss=1.61 " + "l1=0.0137" + "l2=1.6 f=-0.19 shape=(1, 9000, 1)
logits [[-0.22651796 -0.6719176   0.07701436  0.06331697]]
Iteration 500 of 1000: loss=1.46 " + "l1=0" + "l2=1.46 f=-0.188 shape=(1, 9000, 1)
logits [[-0.22777273 -0.67141813  0.05867405  0.08727162]]
Iteration 600 of 1000: loss=1.33 " + "l1=0" + "l2=1.33 f=-0.189 shape=(1, 9000, 1)
logits [[-0.2052485  -0.6773298   0.05974483  0.06803884]]
Iteration 700 of 1000: loss=1.24 " + "l1=0.0139" + "l2=1.22 f=-0.187 shape=(1, 9000, 1)
logits [[-0.18716162 -0.66687477  0.05971618  0.0458182 ]]
Iteration 800 of 1000: loss=1.14 " + "l1=0" + "l2=1.14 f=-0.184 shape=(1, 9000, 1)
logits [[-0.19061613 -0.6567672   0.04949605  0.06027367]]
Iteration 900 of 1000: loss=1.07 " + "l1=0.00249" + "l2=1.07 f=-0.18 shape=(1, 9000, 1)
logits [[-0.17101717 -0.64866173  0.05140363  0.04891847]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.06 " + "l1=5.06" + "l2=0 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.637277  -2.4964817  2.5193038 -5.5679502]]
Iteration 100 of 1000: loss=3.03 " + "l1=1.99" + "l2=1.04 f=-0.324 shape=(1, 9000, 1)
logits [[ 1.215399  -1.3501174  1.2335712 -2.3928947]]
Iteration 200 of 1000: loss=2.32 " + "l1=1.2" + "l2=1.12 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.6016133  -0.95137596  0.6896783  -1.4898558 ]]
Iteration 300 of 1000: loss=1.82 " + "l1=0.476" + "l2=1.34 f=-0.252 shape=(1, 9000, 1)
logits [[-0.02956926 -0.75278866  0.32058275 -0.5448257 ]]
Iteration 400 of 1000: loss=1.39 " + "l1=0.00827" + "l2=1.38 f=-0.205 shape=(1, 9000, 1)
logits [[-0.29251    -0.69093275  0.08957642  0.07453122]]
Iteration 500 of 1000: loss=1.18 " + "l1=0" + "l2=1.18 f=-0.196 shape=(1, 9000, 1)
logits [[-0.24956083 -0.6866116   0.07205598  0.08083267]]
Iteration 600 of 1000: loss=1.06 " + "l1=0.00697" + "l2=1.06 f=-0.191 shape=(1, 9000, 1)
logits [[-0.21842408 -0.68690926  0.07702266  0.06434486]]
Iteration 700 of 1000: loss=0.973 " + "l1=0.00571" + "l2=0.967 f=-0.191 shape=(1, 9000, 1)
logits [[-0.21780547 -0.6691465   0.06715114  0.05677346]]
Iteration 800 of 1000: loss=0.91 " + "l1=0" + "l2=0.91 f=-0.184 shape=(1, 9000, 1)
logits [[-0.21649653 -0.6481833   0.05281571  0.07575837]]
Iteration 900 of 1000: loss=0.854 " + "l1=0" + "l2=0.854 f=-0.178 shape=(1, 9000, 1)
logits [[-0.20343648 -0.6346899   0.0585486   0.06677642]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.99 " + "l1=2.99" + "l2=0 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.637277  -2.4964817  2.5193038 -5.5679502]]
Iteration 100 of 1000: loss=2.23 " + "l1=1.72" + "l2=0.51 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.9290649 -1.8065761  1.8479103 -3.37045  ]]
Iteration 200 of 1000: loss=1.88 " + "l1=1.31" + "l2=0.571 f=-0.34 shape=(1, 9000, 1)
logits [[ 1.3625354 -1.4037721  1.3616309 -2.678866 ]]
Iteration 300 of 1000: loss=1.63 " + "l1=1.06" + "l2=0.578 f=-0.332 shape=(1, 9000, 1)
logits [[ 1.0258288 -1.1655861  1.0311142 -2.2173843]]
Iteration 400 of 1000: loss=1.45 " + "l1=0.856" + "l2=0.594 f=-0.318 shape=(1, 9000, 1)
logits [[ 0.77285236 -1.0095004   0.79791176 -1.8351839 ]]
Iteration 500 of 1000: loss=1.3 " + "l1=0.698" + "l2=0.605 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.5300479  -0.90601903  0.6530287  -1.4959191 ]]
Iteration 600 of 1000: loss=1.17 " + "l1=0.556" + "l2=0.613 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.35965773 -0.8749123   0.53868407 -1.1725141 ]]
Iteration 700 of 1000: loss=1.04 " + "l1=0.396" + "l2=0.644 f=-0.275 shape=(1, 9000, 1)
logits [[ 0.15819709 -0.8347083   0.3984767  -0.81999   ]]
Iteration 800 of 1000: loss=0.927 " + "l1=0.266" + "l2=0.661 f=-0.251 shape=(1, 9000, 1)
logits [[ 0.01896137 -0.7868494   0.29194817 -0.52640504]]
Iteration 900 of 1000: loss=0.807 " + "l1=0.0926" + "l2=0.714 f=-0.208 shape=(1, 9000, 1)
logits [[-0.13537332 -0.7338053   0.16194738 -0.12306113]]
--- 292.3788197040558 seconds ---
Adv result:3
Loading record A06423
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0931 " + "l1=0.0931" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 5.165038  -4.140762   4.0506268 -7.0912704]]
Iteration 100 of 1000: loss=0.0921 " + "l1=0.0917" + "l2=0.000493 f=-0.499 shape=(1, 9000, 1)
logits [[ 5.10365   -4.0619216  3.9944026 -7.03378  ]]
Iteration 200 of 1000: loss=0.0918 " + "l1=0.0912" + "l2=0.000588 f=-0.498 shape=(1, 9000, 1)
logits [[ 5.086884  -4.0365586  3.9760609 -7.0169225]]
Iteration 300 of 1000: loss=0.0916 " + "l1=0.0908" + "l2=0.000773 f=-0.496 shape=(1, 9000, 1)
logits [[ 5.0680947 -4.0103707  3.956982  -6.99791  ]]
Iteration 400 of 1000: loss=0.0913 " + "l1=0.0904" + "l2=0.000956 f=-0.494 shape=(1, 9000, 1)
logits [[ 5.0496726 -3.9854653  3.938493  -6.978683 ]]
Iteration 500 of 1000: loss=0.0911 " + "l1=0.0899" + "l2=0.00119 f=-0.492 shape=(1, 9000, 1)
logits [[ 5.031803  -3.9617395  3.920871  -6.959804 ]]
Iteration 600 of 1000: loss=0.0909 " + "l1=0.0895" + "l2=0.00135 f=-0.49 shape=(1, 9000, 1)
logits [[ 5.0144224 -3.9378934  3.9030538 -6.9414697]]
Iteration 700 of 1000: loss=0.0907 " + "l1=0.0891" + "l2=0.00155 f=-0.489 shape=(1, 9000, 1)
logits [[ 4.9985466 -3.9155104  3.88617   -6.9244876]]
Iteration 800 of 1000: loss=0.0905 " + "l1=0.0888" + "l2=0.00178 f=-0.487 shape=(1, 9000, 1)
logits [[ 4.98267   -3.893559   3.8693938 -6.907524 ]]
Iteration 900 of 1000: loss=0.0904 " + "l1=0.0884" + "l2=0.00193 f=-0.486 shape=(1, 9000, 1)
logits [[ 4.967924  -3.8746743  3.8548307 -6.891608 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.931 " + "l1=0.931" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 5.165038  -4.140762   4.0506268 -7.0912704]]
Iteration 100 of 1000: loss=0.824 " + "l1=0.763" + "l2=0.0618 f=-0.441 shape=(1, 9000, 1)
logits [[ 4.4560747 -3.1702538  3.3416862 -6.389791 ]]
Iteration 200 of 1000: loss=0.774 " + "l1=0.684" + "l2=0.0894 f=-0.398 shape=(1, 9000, 1)
logits [[ 4.0968533 -2.7468553  3.0545712 -5.9968567]]
Iteration 300 of 1000: loss=0.732 " + "l1=0.621" + "l2=0.112 f=-0.355 shape=(1, 9000, 1)
logits [[ 3.771743  -2.4347367  2.8481607 -5.6067157]]
Iteration 400 of 1000: loss=0.693 " + "l1=0.561" + "l2=0.132 f=-0.318 shape=(1, 9000, 1)
logits [[ 3.4492064 -2.1605775  2.6665251 -5.22732  ]]
Iteration 500 of 1000: loss=0.653 " + "l1=0.507" + "l2=0.146 f=-0.287 shape=(1, 9000, 1)
logits [[ 3.1571193 -1.9090585  2.5036266 -4.8997188]]
Iteration 600 of 1000: loss=0.612 " + "l1=0.455" + "l2=0.157 f=-0.26 shape=(1, 9000, 1)
logits [[ 2.8761687 -1.6728051  2.3519843 -4.59402  ]]
Iteration 700 of 1000: loss=0.587 " + "l1=0.428" + "l2=0.159 f=-0.253 shape=(1, 9000, 1)
logits [[ 2.7050266 -1.5736964  2.2827408 -4.425074 ]]
Iteration 800 of 1000: loss=0.57 " + "l1=0.407" + "l2=0.163 f=-0.245 shape=(1, 9000, 1)
logits [[ 2.5703335 -1.500642   2.221805  -4.270244 ]]
Iteration 900 of 1000: loss=0.551 " + "l1=0.379" + "l2=0.172 f=-0.238 shape=(1, 9000, 1)
logits [[ 2.3785198 -1.4145552  2.1529205 -4.067336 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.31 " + "l1=9.31" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 5.165038  -4.140762   4.0506268 -7.0912704]]
Iteration 100 of 1000: loss=2.84 " + "l1=1" + "l2=1.84 f=-0.195 shape=(1, 9000, 1)
logits [[ 0.9296201  -0.04845929  0.95532215 -2.6161056 ]]
Iteration 200 of 1000: loss=1.79 " + "l1=0.0167" + "l2=1.77 f=-0.144 shape=(1, 9000, 1)
logits [[ 0.44257587  0.45772356  0.47441787 -1.9523158 ]]
Iteration 300 of 1000: loss=1.46 " + "l1=0.00382" + "l2=1.45 f=-0.162 shape=(1, 9000, 1)
logits [[ 0.4741821   0.4747227   0.47853896 -2.0734544 ]]
Iteration 400 of 1000: loss=1.3 " + "l1=0.00617" + "l2=1.3 f=-0.156 shape=(1, 9000, 1)
logits [[ 0.44455582  0.47041118  0.4765829  -2.0153172 ]]
Iteration 500 of 1000: loss=1.23 " + "l1=0.0184" + "l2=1.21 f=-0.152 shape=(1, 9000, 1)
logits [[ 0.4389411  0.4521143  0.4704768 -1.9709818]]
Iteration 600 of 1000: loss=1.17 " + "l1=0.00523" + "l2=1.16 f=-0.152 shape=(1, 9000, 1)
logits [[ 0.4284397   0.45347294  0.45870125 -1.9485469 ]]
Iteration 700 of 1000: loss=1.12 " + "l1=0" + "l2=1.12 f=-0.152 shape=(1, 9000, 1)
logits [[ 0.41693527  0.44984147  0.44955507 -1.9226501 ]]
Iteration 800 of 1000: loss=1.1 " + "l1=0.0134" + "l2=1.09 f=-0.149 shape=(1, 9000, 1)
logits [[ 0.453489    0.44005895  0.44096273 -1.9305894 ]]
Iteration 900 of 1000: loss=1.06 " + "l1=0.0144" + "l2=1.05 f=-0.149 shape=(1, 9000, 1)
logits [[ 0.41315114  0.42947537  0.4438399  -1.8812441 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.12 " + "l1=5.12" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 5.165038  -4.140762   4.0506268 -7.0912704]]
Iteration 100 of 1000: loss=2.31 " + "l1=1.16" + "l2=1.15 f=-0.232 shape=(1, 9000, 1)
logits [[ 1.4530113 -0.637029   1.4639437 -3.2088664]]
Iteration 200 of 1000: loss=1.73 " + "l1=0.712" + "l2=1.02 f=-0.159 shape=(1, 9000, 1)
logits [[ 1.0873181  -0.20470512  1.0901679  -2.6077197 ]]
Iteration 300 of 1000: loss=1.48 " + "l1=0.468" + "l2=1.01 f=-0.123 shape=(1, 9000, 1)
logits [[ 0.8580614   0.00910494  0.8605453  -2.2207978 ]]
Iteration 400 of 1000: loss=1.36 " + "l1=0.33" + "l2=1.03 f=-0.107 shape=(1, 9000, 1)
logits [[ 0.7087806   0.11486978  0.7146285  -1.9681717 ]]
Iteration 500 of 1000: loss=1.26 " + "l1=0.19" + "l2=1.07 f=-0.101 shape=(1, 9000, 1)
logits [[ 0.5667338   0.23466586  0.5795385  -1.7868297 ]]
Iteration 600 of 1000: loss=1.14 " + "l1=0.0469" + "l2=1.09 f=-0.119 shape=(1, 9000, 1)
logits [[ 0.45480585  0.39895934  0.48428816 -1.8156337 ]]
Iteration 700 of 1000: loss=1.06 " + "l1=0.0101" + "l2=1.05 f=-0.12 shape=(1, 9000, 1)
logits [[ 0.43816382  0.4209876   0.43940896 -1.7781811 ]]
Iteration 800 of 1000: loss=1.01 " + "l1=0.00521" + "l2=1 f=-0.122 shape=(1, 9000, 1)
logits [[ 0.39642498  0.41910186  0.4285725  -1.7317588 ]]
Iteration 900 of 1000: loss=0.954 " + "l1=0.0174" + "l2=0.937 f=-0.116 shape=(1, 9000, 1)
logits [[ 0.40635467  0.38890016  0.42054135 -1.6812407 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.02 " + "l1=3.02" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 5.165038  -4.140762   4.0506268 -7.0912704]]
Iteration 100 of 1000: loss=1.87 " + "l1=1.29" + "l2=0.577 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.5598578 -1.401725   2.102226  -4.3186393]]
Iteration 200 of 1000: loss=1.41 " + "l1=0.761" + "l2=0.653 f=-0.212 shape=(1, 9000, 1)
logits [[ 1.585106  -0.7564607  1.576131  -3.2547555]]
Iteration 300 of 1000: loss=1.26 " + "l1=0.624" + "l2=0.639 f=-0.17 shape=(1, 9000, 1)
logits [[ 1.383677  -0.5339969  1.3850946 -2.9133809]]
Iteration 400 of 1000: loss=1.18 " + "l1=0.552" + "l2=0.629 f=-0.14 shape=(1, 9000, 1)
logits [[ 1.2703922  -0.42064634  1.2769961  -2.6866167 ]]
Iteration 500 of 1000: loss=1.11 " + "l1=0.507" + "l2=0.607 f=-0.124 shape=(1, 9000, 1)
logits [[ 1.1938745  -0.36378437  1.1975323  -2.5222495 ]]
Iteration 600 of 1000: loss=1.04 " + "l1=0.472" + "l2=0.568 f=-0.116 shape=(1, 9000, 1)
logits [[ 1.1315149 -0.3129823  1.1406078 -2.4235985]]
Iteration 700 of 1000: loss=0.985 " + "l1=0.437" + "l2=0.547 f=-0.112 shape=(1, 9000, 1)
logits [[ 1.0757797  -0.26239794  1.0834677  -2.3440995 ]]
Iteration 800 of 1000: loss=0.942 " + "l1=0.403" + "l2=0.54 f=-0.107 shape=(1, 9000, 1)
logits [[ 1.0109453  -0.21472378  1.0240587  -2.249124  ]]
Iteration 900 of 1000: loss=0.906 " + "l1=0.371" + "l2=0.535 f=-0.0978 shape=(1, 9000, 1)
logits [[ 0.951123   -0.18249248  0.95780754 -2.1175814 ]]
--- 292.90745735168457 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0111 " + "l1=0.0111" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 5.165038  -4.140762   4.0506268 -7.0912704]]
Iteration 100 of 1000: loss=0.0109 " + "l1=0.0108" + "l2=0.000188 f=-0.503 shape=(1, 9000, 1)
logits [[ 5.1433916 -4.1505284  4.0675716 -7.072792 ]]
Iteration 200 of 1000: loss=0.0109 " + "l1=0.0107" + "l2=0.000149 f=-0.503 shape=(1, 9000, 1)
logits [[ 5.142985  -4.1523037  4.0694494 -7.0718403]]
Iteration 300 of 1000: loss=0.0109 " + "l1=0.0107" + "l2=0.00018 f=-0.503 shape=(1, 9000, 1)
logits [[ 5.1406097 -4.154694   4.072567  -7.0697126]]
Iteration 400 of 1000: loss=0.0108 " + "l1=0.0106" + "l2=0.000215 f=-0.503 shape=(1, 9000, 1)
logits [[ 5.1380153 -4.1571436  4.075787  -7.0676885]]
Iteration 500 of 1000: loss=0.0109 " + "l1=0.0106" + "l2=0.000291 f=-0.503 shape=(1, 9000, 1)
logits [[ 5.135161  -4.159442   4.0788107 -7.0654655]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.111 " + "l1=0.111" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 5.165038  -4.140762   4.0506268 -7.0912704]]
Iteration 100 of 1000: loss=0.0946 " + "l1=0.0861" + "l2=0.0085 f=-0.497 shape=(1, 9000, 1)
logits [[ 5.0313067 -4.215035   4.170517  -6.975054 ]]
Iteration 200 of 1000: loss=0.0875 " + "l1=0.0753" + "l2=0.0122 f=-0.492 shape=(1, 9000, 1)
logits [[ 4.972515  -4.2425847  4.219953  -6.9167094]]
Iteration 300 of 1000: loss=0.0814 " + "l1=0.0661" + "l2=0.0153 f=-0.487 shape=(1, 9000, 1)
logits [[ 4.917506  -4.2593083  4.2563767 -6.863275 ]]
Iteration 400 of 1000: loss=0.0763 " + "l1=0.0582" + "l2=0.0182 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.8668904 -4.2717924  4.2851753 -6.815856 ]]
Iteration 500 of 1000: loss=0.0715 " + "l1=0.0507" + "l2=0.0208 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.8114176 -4.277108   4.304661  -6.765397 ]]
Iteration 600 of 1000: loss=0.0666 " + "l1=0.043" + "l2=0.0236 f=-0.48 shape=(1, 9000, 1)
logits [[ 4.7506914 -4.2767363  4.320406  -6.7128277]]
Iteration 700 of 1000: loss=0.0618 " + "l1=0.0359" + "l2=0.0258 f=-0.477 shape=(1, 9000, 1)
logits [[ 4.6911387 -4.273267   4.331681  -6.6573887]]
Iteration 800 of 1000: loss=0.0566 " + "l1=0.0282" + "l2=0.0284 f=-0.475 shape=(1, 9000, 1)
logits [[ 4.61962  -4.26668   4.337407 -6.591626]]
Iteration 900 of 1000: loss=0.0507 " + "l1=0.0192" + "l2=0.0315 f=-0.471 shape=(1, 9000, 1)
logits [[ 4.5449505 -4.2656612  4.352548  -6.5155616]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.11 " + "l1=1.11" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 5.165038  -4.140762   4.0506268 -7.0912704]]
Iteration 100 of 1000: loss=0.151 " + "l1=0" + "l2=0.151 f=-0.454 shape=(1, 9000, 1)
logits [[ 4.422482  -4.330147   4.4444265 -6.3545756]]
Iteration 200 of 1000: loss=0.104 " + "l1=0.00525" + "l2=0.0983 f=-0.45 shape=(1, 9000, 1)
logits [[ 4.445133  -4.3163624  4.4398875 -6.3700333]]
Iteration 300 of 1000: loss=0.0806 " + "l1=0" + "l2=0.0806 f=-0.45 shape=(1, 9000, 1)
logits [[ 4.4333944 -4.3077493  4.4389486 -6.3630013]]
Iteration 400 of 1000: loss=0.0744 " + "l1=0" + "l2=0.0744 f=-0.45 shape=(1, 9000, 1)
logits [[ 4.408767  -4.3111444  4.4477305 -6.343627 ]]
Iteration 500 of 1000: loss=0.0604 " + "l1=0" + "l2=0.0604 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.4184074 -4.2997675  4.430045  -6.357772 ]]
Iteration 600 of 1000: loss=0.0541 " + "l1=0" + "l2=0.0541 f=-0.455 shape=(1, 9000, 1)
logits [[ 4.413478  -4.2976294  4.423756  -6.3611174]]
Iteration 700 of 1000: loss=0.0482 " + "l1=0" + "l2=0.0482 f=-0.458 shape=(1, 9000, 1)
logits [[ 4.408882  -4.2914076  4.411887  -6.36213  ]]
Iteration 800 of 1000: loss=0.0458 " + "l1=0" + "l2=0.0458 f=-0.46 shape=(1, 9000, 1)
logits [[ 4.387174  -4.2876534  4.40446   -6.344915 ]]
Iteration 900 of 1000: loss=0.0428 " + "l1=0" + "l2=0.0428 f=-0.463 shape=(1, 9000, 1)
logits [[ 4.371777  -4.2820554  4.3910885 -6.3342834]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.613 " + "l1=0.613" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 5.165038  -4.140762   4.0506268 -7.0912704]]
Iteration 100 of 1000: loss=0.145 " + "l1=0.00127" + "l2=0.144 f=-0.456 shape=(1, 9000, 1)
logits [[ 4.4372826 -4.325004   4.434977  -6.372251 ]]
Iteration 200 of 1000: loss=0.0963 " + "l1=0" + "l2=0.0963 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.4413047 -4.3147426  4.4426637 -6.376013 ]]
Iteration 300 of 1000: loss=0.0748 " + "l1=0" + "l2=0.0748 f=-0.45 shape=(1, 9000, 1)
logits [[ 4.428982  -4.2936363  4.4305882 -6.3644743]]
Iteration 400 of 1000: loss=0.0628 " + "l1=0" + "l2=0.0628 f=-0.45 shape=(1, 9000, 1)
logits [[ 4.41343  -4.277778  4.417784 -6.352231]]
Iteration 500 of 1000: loss=0.0558 " + "l1=0" + "l2=0.0558 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.397603  -4.270988   4.4109607 -6.3438487]]
Iteration 600 of 1000: loss=0.0484 " + "l1=0" + "l2=0.0484 f=-0.455 shape=(1, 9000, 1)
logits [[ 4.3977103 -4.2673965  4.399931  -6.349626 ]]
Iteration 700 of 1000: loss=0.0441 " + "l1=0" + "l2=0.0441 f=-0.459 shape=(1, 9000, 1)
logits [[ 4.3906884 -4.269229   4.392343  -6.348265 ]]
Iteration 800 of 1000: loss=0.042 " + "l1=0" + "l2=0.042 f=-0.463 shape=(1, 9000, 1)
logits [[ 4.3731112 -4.276901   4.3891363 -6.335825 ]]
Iteration 900 of 1000: loss=0.0378 " + "l1=0" + "l2=0.0378 f=-0.468 shape=(1, 9000, 1)
logits [[ 4.3686304 -4.2786093  4.375276  -6.3365316]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.362 " + "l1=0.362" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 5.165038  -4.140762   4.0506268 -7.0912704]]
Iteration 100 of 1000: loss=0.184 " + "l1=0.093" + "l2=0.0913 f=-0.469 shape=(1, 9000, 1)
logits [[ 4.6521425 -4.2921233  4.3658676 -6.6032333]]
Iteration 200 of 1000: loss=0.102 " + "l1=0.00062" + "l2=0.101 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.425566 -4.289139  4.42366  -6.367316]]
Iteration 300 of 1000: loss=0.0739 " + "l1=0" + "l2=0.0739 f=-0.448 shape=(1, 9000, 1)
logits [[ 4.4146385 -4.2678437  4.4155927 -6.354712 ]]
Iteration 400 of 1000: loss=0.0607 " + "l1=0" + "l2=0.0607 f=-0.45 shape=(1, 9000, 1)
logits [[ 4.4047165 -4.2572684  4.406201  -6.3521953]]
Iteration 500 of 1000: loss=0.0528 " + "l1=0" + "l2=0.0528 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.3961005 -4.2546577  4.399159  -6.349601 ]]
Iteration 600 of 1000: loss=0.0482 " + "l1=0" + "l2=0.0482 f=-0.455 shape=(1, 9000, 1)
logits [[ 4.385815  -4.259156   4.395689  -6.3434134]]
Iteration 700 of 1000: loss=0.0427 " + "l1=0" + "l2=0.0427 f=-0.46 shape=(1, 9000, 1)
logits [[ 4.380743  -4.2621536  4.3860064 -6.3437634]]
Iteration 800 of 1000: loss=0.039 " + "l1=0" + "l2=0.039 f=-0.465 shape=(1, 9000, 1)
logits [[ 4.374844 -4.27096   4.378171 -6.341479]]
Iteration 900 of 1000: loss=0.0362 " + "l1=0" + "l2=0.0362 f=-0.469 shape=(1, 9000, 1)
logits [[ 4.36342  -4.278375  4.371063 -6.333653]]
--- 266.87324476242065 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.123 " + "l1=0.123" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 5.165038  -4.140762   4.0506268 -7.0912704]]
Iteration 100 of 1000: loss=0.122 " + "l1=0.121" + "l2=0.000546 f=-0.497 shape=(1, 9000, 1)
logits [[ 5.097391  -4.0957417  4.0106435 -7.0005426]]
Iteration 200 of 1000: loss=0.121 " + "l1=0.121" + "l2=0.000613 f=-0.495 shape=(1, 9000, 1)
logits [[ 5.0796285 -4.0810122  3.9983408 -6.9774146]]
Iteration 300 of 1000: loss=0.121 " + "l1=0.12" + "l2=0.000785 f=-0.493 shape=(1, 9000, 1)
logits [[ 5.0581307 -4.0633273  3.9832323 -6.9491024]]
Iteration 400 of 1000: loss=0.121 " + "l1=0.12" + "l2=0.000957 f=-0.49 shape=(1, 9000, 1)
logits [[ 5.0368934 -4.0463433  3.9682398 -6.92078  ]]
Iteration 500 of 1000: loss=0.12 " + "l1=0.119" + "l2=0.00119 f=-0.488 shape=(1, 9000, 1)
logits [[ 5.016359  -4.0305524  3.954086  -6.892987 ]]
Iteration 600 of 1000: loss=0.12 " + "l1=0.119" + "l2=0.00142 f=-0.486 shape=(1, 9000, 1)
logits [[ 4.996936  -4.015987   3.9404364 -6.86589  ]]
Iteration 700 of 1000: loss=0.12 " + "l1=0.118" + "l2=0.00159 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.977372  -4.001253   3.9264278 -6.8385396]]
Iteration 800 of 1000: loss=0.119 " + "l1=0.118" + "l2=0.00178 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.958402  -3.9867263  3.912517  -6.812088 ]]
Iteration 900 of 1000: loss=0.119 " + "l1=0.117" + "l2=0.00198 f=-0.48 shape=(1, 9000, 1)
logits [[ 4.9408355 -3.9736023  3.8998096 -6.7875166]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.23 " + "l1=1.23" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 5.165038  -4.140762   4.0506268 -7.0912704]]
Iteration 100 of 1000: loss=1.11 " + "l1=1.04" + "l2=0.0649 f=-0.425 shape=(1, 9000, 1)
logits [[ 4.3604946 -3.5500221  3.551392  -6.060308 ]]
Iteration 200 of 1000: loss=1.03 " + "l1=0.914" + "l2=0.112 f=-0.363 shape=(1, 9000, 1)
logits [[ 3.799985  -3.1272178  3.2126458 -5.338979 ]]
Iteration 300 of 1000: loss=0.942 " + "l1=0.78" + "l2=0.163 f=-0.288 shape=(1, 9000, 1)
logits [[ 3.2370238 -2.7171369  2.8874316 -4.5606403]]
Iteration 400 of 1000: loss=0.885 " + "l1=0.689" + "l2=0.196 f=-0.241 shape=(1, 9000, 1)
logits [[ 2.8576992 -2.4986727  2.7091992 -4.0337877]]
Iteration 500 of 1000: loss=0.837 " + "l1=0.614" + "l2=0.222 f=-0.203 shape=(1, 9000, 1)
logits [[ 2.5424395 -2.298514   2.5434637 -3.600876 ]]
Iteration 600 of 1000: loss=0.801 " + "l1=0.578" + "l2=0.223 f=-0.176 shape=(1, 9000, 1)
logits [[ 2.398313  -2.1204236  2.3975778 -3.379846 ]]
Iteration 700 of 1000: loss=0.767 " + "l1=0.545" + "l2=0.222 f=-0.154 shape=(1, 9000, 1)
logits [[ 2.2693727 -1.981662   2.2707078 -3.1745985]]
Iteration 800 of 1000: loss=0.735 " + "l1=0.517" + "l2=0.218 f=-0.138 shape=(1, 9000, 1)
logits [[ 2.1618996 -1.8675247  2.1634238 -3.0084367]]
Iteration 900 of 1000: loss=0.704 " + "l1=0.488" + "l2=0.216 f=-0.124 shape=(1, 9000, 1)
logits [[ 2.0390959 -1.7343746  2.0396776 -2.8413723]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.3 " + "l1=12.3" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 5.165038  -4.140762   4.0506268 -7.0912704]]
Iteration 100 of 1000: loss=2.79 " + "l1=0.0281" + "l2=2.77 f=-0.0174 shape=(1, 9000, 1)
logits [[-0.1811002  -0.90524477  0.5224584   0.4943943 ]]
Iteration 200 of 1000: loss=1.89 " + "l1=0" + "l2=1.89 f=0.00854 shape=(1, 9000, 1)
logits [[-0.11641265 -0.93685883  0.5349454   0.5524697 ]]
Iteration 300 of 1000: loss=1.58 " + "l1=0" + "l2=1.58 f=0.0235 shape=(1, 9000, 1)
logits [[-0.08797298 -0.9298821   0.54798245  0.56368417]]
Iteration 400 of 1000: loss=1.41 " + "l1=0" + "l2=1.41 f=0.0342 shape=(1, 9000, 1)
logits [[-0.06358671 -0.9109841   0.5473652   0.5638317 ]]
Iteration 500 of 1000: loss=1.31 " + "l1=0" + "l2=1.31 f=0.0417 shape=(1, 9000, 1)
logits [[-0.04539084 -0.88896316  0.5337593   0.56733733]]
Iteration 600 of 1000: loss=1.23 " + "l1=0" + "l2=1.23 f=0.045 shape=(1, 9000, 1)
logits [[-0.01865552 -0.87648946  0.5342436   0.5410303 ]]
Iteration 700 of 1000: loss=1.19 " + "l1=0" + "l2=1.19 f=0.0441 shape=(1, 9000, 1)
logits [[-0.03262784 -0.87198657  0.51640815  0.564778  ]]
Iteration 800 of 1000: loss=1.13 " + "l1=0" + "l2=1.13 f=0.0427 shape=(1, 9000, 1)
logits [[-0.01403975 -0.88388574  0.5214965   0.5471786 ]]
Iteration 900 of 1000: loss=1.08 " + "l1=0" + "l2=1.08 f=0.0431 shape=(1, 9000, 1)
logits [[ 0.00991097 -0.90179366  0.52710944  0.5371248 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.74 " + "l1=6.74" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 5.165038  -4.140762   4.0506268 -7.0912704]]
Iteration 100 of 1000: loss=2.78 " + "l1=0.86" + "l2=1.92 f=-0.0734 shape=(1, 9000, 1)
logits [[ 0.421557   -1.010517    0.92940325 -0.63393223]]
Iteration 200 of 1000: loss=1.61 " + "l1=0" + "l2=1.61 f=-0.00411 shape=(1, 9000, 1)
logits [[-0.20514187 -0.87745255  0.5223563   0.54380476]]
Iteration 300 of 1000: loss=1.34 " + "l1=0" + "l2=1.34 f=0.0192 shape=(1, 9000, 1)
logits [[-0.1590152  -0.8545425   0.5274402   0.56287503]]
Iteration 400 of 1000: loss=1.22 " + "l1=0.0137" + "l2=1.2 f=0.0244 shape=(1, 9000, 1)
logits [[-0.09921138 -0.8544697   0.5381003   0.51312035]]
Iteration 500 of 1000: loss=1.13 " + "l1=0.00412" + "l2=1.12 f=0.0275 shape=(1, 9000, 1)
logits [[-0.09060144 -0.8578143   0.53301823  0.5255294 ]]
Iteration 600 of 1000: loss=1.07 " + "l1=0" + "l2=1.07 f=0.0249 shape=(1, 9000, 1)
logits [[-0.11151248 -0.83728886  0.5042056   0.5443662 ]]
Iteration 700 of 1000: loss=0.996 " + "l1=0" + "l2=0.996 f=0.0283 shape=(1, 9000, 1)
logits [[-0.08388888 -0.84121495  0.5024449   0.5357017 ]]
Iteration 800 of 1000: loss=0.928 " + "l1=0.0163" + "l2=0.911 f=0.0333 shape=(1, 9000, 1)
logits [[-0.02566129 -0.8415051   0.51506025  0.4854378 ]]
Iteration 900 of 1000: loss=0.85 " + "l1=0.00479" + "l2=0.845 f=0.0321 shape=(1, 9000, 1)
logits [[-0.02532181 -0.8139206   0.4882331   0.47952855]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.98 " + "l1=3.98" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 5.165038  -4.140762   4.0506268 -7.0912704]]
Iteration 100 of 1000: loss=2.4 " + "l1=1.61" + "l2=0.796 f=-0.163 shape=(1, 9000, 1)
logits [[ 1.9957879 -1.7067494  2.0011222 -2.9404504]]
Iteration 200 of 1000: loss=1.69 " + "l1=0.605" + "l2=1.09 f=-0.0589 shape=(1, 9000, 1)
logits [[ 0.55870897 -1.0042108   1.0353318  -0.8254704 ]]
Iteration 300 of 1000: loss=1.34 " + "l1=0.177" + "l2=1.16 f=-0.00477 shape=(1, 9000, 1)
logits [[ 0.03185717 -0.8974936   0.69628924  0.15025762]]
Iteration 400 of 1000: loss=1.13 " + "l1=0.0122" + "l2=1.11 f=0.0233 shape=(1, 9000, 1)
logits [[-0.10693706 -0.84421176  0.5409341   0.50326127]]
Iteration 500 of 1000: loss=1.01 " + "l1=0" + "l2=1.01 f=0.0354 shape=(1, 9000, 1)
logits [[-0.07212231 -0.8165285   0.5128747   0.517506  ]]
Iteration 600 of 1000: loss=0.912 " + "l1=0.00883" + "l2=0.903 f=0.0447 shape=(1, 9000, 1)
logits [[-0.01175776 -0.81010544  0.5140046   0.48683563]]
Iteration 700 of 1000: loss=0.811 " + "l1=0.00381" + "l2=0.807 f=0.0515 shape=(1, 9000, 1)
logits [[ 0.03434072 -0.7648708   0.47417223  0.46245706]]
Iteration 800 of 1000: loss=0.73 " + "l1=0.00311" + "l2=0.727 f=0.0517 shape=(1, 9000, 1)
logits [[ 0.06397676 -0.7093525   0.43081042  0.4212465 ]]
Iteration 900 of 1000: loss=0.676 " + "l1=0" + "l2=0.676 f=0.0513 shape=(1, 9000, 1)
logits [[ 0.09312607 -0.6810635   0.3898523   0.40328103]]
--- 296.19965147972107 seconds ---
Adv result:3
Loading record A06481
(1, 4256)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00959 " + "l1=0.00959" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.35599014 -0.60331255 -0.04018902 -1.0074298 ]]
Iteration 100 of 1000: loss=0.00811 " + "l1=0.00753" + "l2=0.000589 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.21316874 -0.5394378  -0.07144412 -0.9076981 ]]
Iteration 200 of 1000: loss=0.00743 " + "l1=0.00665" + "l2=0.000772 f=-0.327 shape=(1, 9000, 1)
logits [[ 0.14836705 -0.51701456 -0.0815253  -0.8591885 ]]
Iteration 300 of 1000: loss=0.00675 " + "l1=0.00573" + "l2=0.00102 f=-0.329 shape=(1, 9000, 1)
logits [[ 0.07800524 -0.49472106 -0.09088365 -0.80660635]]
Iteration 400 of 1000: loss=0.00605 " + "l1=0.00481" + "l2=0.00124 f=-0.33 shape=(1, 9000, 1)
logits [[ 0.0071814  -0.47351545 -0.09989586 -0.7539787 ]]
Iteration 500 of 1000: loss=0.00537 " + "l1=0.00388" + "l2=0.00148 f=-0.332 shape=(1, 9000, 1)
logits [[-0.06359468 -0.451756   -0.10893356 -0.7024371 ]]
Iteration 600 of 1000: loss=0.00477 " + "l1=0.00319" + "l2=0.00159 f=-0.333 shape=(1, 9000, 1)
logits [[-0.1167156  -0.4353594  -0.11711405 -0.66237426]]
Iteration 700 of 1000: loss=0.00445 " + "l1=0.00301" + "l2=0.00144 f=-0.333 shape=(1, 9000, 1)
logits [[-0.12561885 -0.42545962 -0.12486826 -0.656938  ]]
Iteration 800 of 1000: loss=0.00431 " + "l1=0.00282" + "l2=0.00149 f=-0.333 shape=(1, 9000, 1)
logits [[-0.13275708 -0.41473538 -0.13272898 -0.65355134]]
Iteration 900 of 1000: loss=0.00416 " + "l1=0.00264" + "l2=0.00153 f=-0.334 shape=(1, 9000, 1)
logits [[-0.14048979 -0.40425435 -0.14051373 -0.6489505 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0959 " + "l1=0.0959" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.35599014 -0.60331255 -0.04018902 -1.0074298 ]]
Iteration 100 of 1000: loss=0.0143 " + "l1=4.76e-05" + "l2=0.0142 f=-0.339 shape=(1, 9000, 1)
logits [[-0.24966112 -0.24953334 -0.24905777 -0.60854596]]
Iteration 200 of 1000: loss=0.00911 " + "l1=0" + "l2=0.00911 f=-0.336 shape=(1, 9000, 1)
logits [[-0.2641056  -0.25175604 -0.25634137 -0.57312244]]
Iteration 300 of 1000: loss=0.00672 " + "l1=7.08e-05" + "l2=0.00664 f=-0.335 shape=(1, 9000, 1)
logits [[-0.25490016 -0.25560796 -0.2585957  -0.57244116]]
Iteration 400 of 1000: loss=0.00526 " + "l1=0" + "l2=0.00526 f=-0.335 shape=(1, 9000, 1)
logits [[-0.25761753 -0.25686648 -0.2576439  -0.56801814]]
Iteration 500 of 1000: loss=0.00451 " + "l1=0" + "l2=0.00451 f=-0.335 shape=(1, 9000, 1)
logits [[-0.26974773 -0.25273696 -0.25970113 -0.55654293]]
Iteration 600 of 1000: loss=0.00383 " + "l1=0" + "l2=0.00383 f=-0.334 shape=(1, 9000, 1)
logits [[-0.26505923 -0.25491318 -0.25734782 -0.55745524]]
Iteration 700 of 1000: loss=0.00354 " + "l1=0" + "l2=0.00354 f=-0.332 shape=(1, 9000, 1)
logits [[-0.26547188 -0.25375396 -0.2583372  -0.5511897 ]]
Iteration 800 of 1000: loss=0.00351 " + "l1=0" + "l2=0.00351 f=-0.331 shape=(1, 9000, 1)
logits [[-0.28259775 -0.24908663 -0.25948247 -0.5319773 ]]
Iteration 900 of 1000: loss=0.00304 " + "l1=0" + "l2=0.00304 f=-0.329 shape=(1, 9000, 1)
logits [[-0.2633624  -0.25503987 -0.25904083 -0.5390445 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0528 " + "l1=0.0528" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.35599014 -0.60331255 -0.04018902 -1.0074298 ]]
Iteration 100 of 1000: loss=0.0173 " + "l1=0.00753" + "l2=0.00974 f=-0.336 shape=(1, 9000, 1)
logits [[-0.1935719  -0.32762787 -0.19070973 -0.633748  ]]
Iteration 200 of 1000: loss=0.00985 " + "l1=0.000243" + "l2=0.00961 f=-0.336 shape=(1, 9000, 1)
logits [[-0.2540041  -0.25842175 -0.2553763  -0.5775133 ]]
Iteration 300 of 1000: loss=0.00693 " + "l1=0" + "l2=0.00693 f=-0.335 shape=(1, 9000, 1)
logits [[-0.2632215  -0.25675622 -0.25836447 -0.5634716 ]]
Iteration 400 of 1000: loss=0.00539 " + "l1=4.45e-05" + "l2=0.00534 f=-0.335 shape=(1, 9000, 1)
logits [[-0.261191   -0.2585092  -0.25770012 -0.5623941 ]]
Iteration 500 of 1000: loss=0.00447 " + "l1=2e-05" + "l2=0.00445 f=-0.335 shape=(1, 9000, 1)
logits [[-0.2631216  -0.25769675 -0.25733277 -0.5604762 ]]
Iteration 600 of 1000: loss=0.00381 " + "l1=0" + "l2=0.00381 f=-0.334 shape=(1, 9000, 1)
logits [[-0.26062652 -0.25679523 -0.2573375  -0.559835  ]]
Iteration 700 of 1000: loss=0.00348 " + "l1=0" + "l2=0.00348 f=-0.332 shape=(1, 9000, 1)
logits [[-0.26710296 -0.25474077 -0.2569685  -0.5503762 ]]
Iteration 800 of 1000: loss=0.00315 " + "l1=0" + "l2=0.00315 f=-0.331 shape=(1, 9000, 1)
logits [[-0.25990593 -0.2554022  -0.2582593  -0.54953486]]
Iteration 900 of 1000: loss=0.003 " + "l1=8.31e-05" + "l2=0.00291 f=-0.329 shape=(1, 9000, 1)
logits [[-0.25803858 -0.2581244  -0.25661322 -0.5438141 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0312 " + "l1=0.0312" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.35599014 -0.60331255 -0.04018902 -1.0074298 ]]
Iteration 100 of 1000: loss=0.0166 " + "l1=0.011" + "l2=0.00561 f=-0.332 shape=(1, 9000, 1)
logits [[-0.07133453 -0.40975037 -0.1351937  -0.7121345 ]]
Iteration 200 of 1000: loss=0.0113 " + "l1=0.00616" + "l2=0.0051 f=-0.334 shape=(1, 9000, 1)
logits [[-0.17329818 -0.36162025 -0.17206463 -0.6305434 ]]
Iteration 300 of 1000: loss=0.00885 " + "l1=0.00358" + "l2=0.00526 f=-0.335 shape=(1, 9000, 1)
logits [[-0.21077369 -0.31984237 -0.20964928 -0.60091954]]
Iteration 400 of 1000: loss=0.00681 " + "l1=0.00119" + "l2=0.00562 f=-0.336 shape=(1, 9000, 1)
logits [[-0.2457419  -0.27896547 -0.2422976  -0.5780431 ]]
Iteration 500 of 1000: loss=0.0051 " + "l1=9.36e-06" + "l2=0.00509 f=-0.336 shape=(1, 9000, 1)
logits [[-0.2600376  -0.25877324 -0.25848526 -0.56555253]]
Iteration 600 of 1000: loss=0.00413 " + "l1=2.9e-06" + "l2=0.00412 f=-0.335 shape=(1, 9000, 1)
logits [[-0.2583416  -0.25798398 -0.25789472 -0.5650158 ]]
Iteration 700 of 1000: loss=0.00367 " + "l1=7.03e-05" + "l2=0.0036 f=-0.333 shape=(1, 9000, 1)
logits [[-0.25708517 -0.25837806 -0.25621402 -0.5618152 ]]
Iteration 800 of 1000: loss=0.00325 " + "l1=5.01e-05" + "l2=0.0032 f=-0.332 shape=(1, 9000, 1)
logits [[-0.2572744  -0.25762776 -0.25608662 -0.55604416]]
Iteration 900 of 1000: loss=0.00314 " + "l1=3.31e-06" + "l2=0.00314 f=-0.33 shape=(1, 9000, 1)
logits [[-0.25816062 -0.25685507 -0.25675336 -0.5490075 ]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0204 " + "l1=0.0204" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.35599014 -0.60331255 -0.04018902 -1.0074298 ]]
Iteration 100 of 1000: loss=0.014 " + "l1=0.0116" + "l2=0.00243 f=-0.329 shape=(1, 9000, 1)
logits [[ 0.07040557 -0.47530875 -0.1020755  -0.8107642 ]]
Iteration 200 of 1000: loss=0.0107 " + "l1=0.00724" + "l2=0.00342 f=-0.332 shape=(1, 9000, 1)
logits [[-0.08314846 -0.4238306  -0.12471052 -0.6951394 ]]
Iteration 300 of 1000: loss=0.00845 " + "l1=0.00534" + "l2=0.00311 f=-0.334 shape=(1, 9000, 1)
logits [[-0.1463     -0.39764172 -0.14657019 -0.6438369 ]]
Iteration 400 of 1000: loss=0.00739 " + "l1=0.0043" + "l2=0.00309 f=-0.335 shape=(1, 9000, 1)
logits [[-0.16997987 -0.3716171  -0.16931197 -0.62761754]]
Iteration 500 of 1000: loss=0.00648 " + "l1=0.00334" + "l2=0.00313 f=-0.335 shape=(1, 9000, 1)
logits [[-0.1901731  -0.34627396 -0.18886505 -0.61664456]]
Iteration 600 of 1000: loss=0.00572 " + "l1=0.00243" + "l2=0.00329 f=-0.336 shape=(1, 9000, 1)
logits [[-0.20912424 -0.32193685 -0.20755084 -0.6050467 ]]
Iteration 700 of 1000: loss=0.00498 " + "l1=0.00143" + "l2=0.00355 f=-0.336 shape=(1, 9000, 1)
logits [[-0.22922426 -0.29532272 -0.22812593 -0.59156406]]
Iteration 800 of 1000: loss=0.00417 " + "l1=0.000379" + "l2=0.00379 f=-0.335 shape=(1, 9000, 1)
logits [[-0.25422505 -0.26737937 -0.24955717 -0.57047254]]
Iteration 900 of 1000: loss=0.00355 " + "l1=0" + "l2=0.00355 f=-0.334 shape=(1, 9000, 1)
logits [[-0.2593616  -0.25751826 -0.25768104 -0.5599107 ]]
--- 295.34068512916565 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00396 " + "l1=0.00396" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.35599014 -0.60331255 -0.04018902 -1.0074298 ]]
Iteration 100 of 1000: loss=0.00327 " + "l1=0.00302" + "l2=0.00025 f=-0.325 shape=(1, 9000, 1)
logits [[ 0.26074073 -0.581835   -0.04082027 -0.9400494 ]]
Iteration 200 of 1000: loss=0.00289 " + "l1=0.00258" + "l2=0.000308 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.21957421 -0.5756851  -0.03868195 -0.9093361 ]]
Iteration 300 of 1000: loss=0.0025 " + "l1=0.00206" + "l2=0.000439 f=-0.327 shape=(1, 9000, 1)
logits [[ 0.16900651 -0.56860644 -0.03674814 -0.8717248 ]]
Iteration 400 of 1000: loss=0.00206 " + "l1=0.00147" + "l2=0.000587 f=-0.329 shape=(1, 9000, 1)
logits [[ 0.11197509 -0.56087726 -0.03502593 -0.8306724 ]]
Iteration 500 of 1000: loss=0.00163 " + "l1=0.000874" + "l2=0.000761 f=-0.33 shape=(1, 9000, 1)
logits [[ 0.05441518 -0.5535749  -0.03294577 -0.78791046]]
Iteration 600 of 1000: loss=0.00123 " + "l1=0.000292" + "l2=0.000934 f=-0.331 shape=(1, 9000, 1)
logits [[-0.00103977 -0.5466173  -0.03026269 -0.7470005 ]]
Iteration 700 of 1000: loss=0.000928 " + "l1=4.56e-06" + "l2=0.000924 f=-0.332 shape=(1, 9000, 1)
logits [[-0.0277266  -0.54465044 -0.0281831  -0.7282663 ]]
Iteration 800 of 1000: loss=0.000918 " + "l1=1.13e-06" + "l2=0.000916 f=-0.332 shape=(1, 9000, 1)
logits [[-0.02751822 -0.5452578  -0.02763075 -0.7294186 ]]
Iteration 900 of 1000: loss=0.000932 " + "l1=0" + "l2=0.000932 f=-0.333 shape=(1, 9000, 1)
logits [[-0.02750137 -0.5446915  -0.02740047 -0.73131084]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.00198 " + "l1=0.00198" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.35599014 -0.60331255 -0.04018902 -1.0074298 ]]
Iteration 100 of 1000: loss=0.00179 " + "l1=0.00169" + "l2=0.000103 f=-0.325 shape=(1, 9000, 1)
logits [[ 0.29671618 -0.59066397 -0.04083288 -0.96527374]]
Iteration 200 of 1000: loss=0.0017 " + "l1=0.00161" + "l2=9.45e-05 f=-0.325 shape=(1, 9000, 1)
logits [[ 0.28136894 -0.58864903 -0.0399382  -0.9529206 ]]
Iteration 300 of 1000: loss=0.00161 " + "l1=0.0015" + "l2=0.000114 f=-0.325 shape=(1, 9000, 1)
logits [[ 0.26048765 -0.58544844 -0.03912329 -0.93732935]]
Iteration 400 of 1000: loss=0.00155 " + "l1=0.00138" + "l2=0.000168 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.23725596 -0.5818581  -0.03833771 -0.92012763]]
Iteration 500 of 1000: loss=0.00148 " + "l1=0.00125" + "l2=0.000231 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.21289378 -0.5782132  -0.03736842 -0.9021511 ]]
Iteration 600 of 1000: loss=0.00144 " + "l1=0.00112" + "l2=0.000317 f=-0.327 shape=(1, 9000, 1)
logits [[ 0.18757027 -0.5747609  -0.03624536 -0.88342506]]
Iteration 700 of 1000: loss=0.00139 " + "l1=0.00098" + "l2=0.000412 f=-0.327 shape=(1, 9000, 1)
logits [[ 0.16071615 -0.5711253  -0.03524425 -0.864166  ]]
Iteration 800 of 1000: loss=0.00143 " + "l1=0.000836" + "l2=0.000598 f=-0.328 shape=(1, 9000, 1)
logits [[ 0.13278496 -0.56717485 -0.03440043 -0.84441566]]
const [0.0075]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.00297 " + "l1=0.00297" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.35599014 -0.60331255 -0.04018902 -1.0074298 ]]
Iteration 100 of 1000: loss=0.00256 " + "l1=0.00239" + "l2=0.000167 f=-0.325 shape=(1, 9000, 1)
logits [[ 0.27825096 -0.5859539  -0.04081206 -0.9522821 ]]
Iteration 200 of 1000: loss=0.00235 " + "l1=0.00217" + "l2=0.000183 f=-0.325 shape=(1, 9000, 1)
logits [[ 0.25013655 -0.5819228  -0.03936944 -0.9305981 ]]
Iteration 300 of 1000: loss=0.00215 " + "l1=0.0019" + "l2=0.000252 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.2150066  -0.57664955 -0.03795774 -0.9044797 ]]
Iteration 400 of 1000: loss=0.00195 " + "l1=0.0016" + "l2=0.000348 f=-0.327 shape=(1, 9000, 1)
logits [[ 0.17646739 -0.5715162  -0.03649006 -0.875514  ]]
Iteration 500 of 1000: loss=0.00173 " + "l1=0.00127" + "l2=0.000453 f=-0.328 shape=(1, 9000, 1)
logits [[ 0.13445985 -0.5661722  -0.03511526 -0.8448488 ]]
Iteration 600 of 1000: loss=0.00151 " + "l1=0.000932" + "l2=0.000578 f=-0.329 shape=(1, 9000, 1)
logits [[ 0.09087534 -0.56027824 -0.03343806 -0.81336266]]
Iteration 700 of 1000: loss=0.00135 " + "l1=0.000595" + "l2=0.000754 f=-0.33 shape=(1, 9000, 1)
logits [[ 0.04727008 -0.55441034 -0.03201351 -0.78107494]]
Iteration 800 of 1000: loss=0.00115 " + "l1=0.000277" + "l2=0.000877 f=-0.331 shape=(1, 9000, 1)
logits [[ 0.00700107 -0.5489162  -0.02995966 -0.75230145]]
Iteration 900 of 1000: loss=0.00099 " + "l1=2.52e-07" + "l2=0.000989 f=-0.332 shape=(1, 9000, 1)
logits [[-0.02833573 -0.5436874  -0.02836927 -0.72826153]]
const [0.00625]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00248 " + "l1=0.00248" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.35599014 -0.60331255 -0.04018902 -1.0074298 ]]
Iteration 100 of 1000: loss=0.00218 " + "l1=0.00205" + "l2=0.000131 f=-0.325 shape=(1, 9000, 1)
logits [[ 0.2872818  -0.5883656  -0.04074679 -0.95878965]]
Iteration 200 of 1000: loss=0.00204 " + "l1=0.0019" + "l2=0.000139 f=-0.325 shape=(1, 9000, 1)
logits [[ 0.26479587 -0.58519006 -0.03956812 -0.940967  ]]
Iteration 300 of 1000: loss=0.0019 " + "l1=0.00172" + "l2=0.00018 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.23628199 -0.58088195 -0.03849331 -0.91958326]]
Iteration 400 of 1000: loss=0.00177 " + "l1=0.00152" + "l2=0.000255 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.20537663 -0.57642096 -0.03723203 -0.8964868 ]]
Iteration 500 of 1000: loss=0.00163 " + "l1=0.0013" + "l2=0.000327 f=-0.327 shape=(1, 9000, 1)
logits [[ 0.17232203 -0.5721294  -0.03596041 -0.8718056 ]]
Iteration 600 of 1000: loss=0.00151 " + "l1=0.00107" + "l2=0.00044 f=-0.328 shape=(1, 9000, 1)
logits [[ 0.13722095 -0.567687   -0.03467275 -0.84642583]]
Iteration 700 of 1000: loss=0.0014 " + "l1=0.000841" + "l2=0.000558 f=-0.329 shape=(1, 9000, 1)
logits [[ 0.10132746 -0.5626723  -0.03321932 -0.8208425 ]]
Iteration 800 of 1000: loss=0.00129 " + "l1=0.00061" + "l2=0.000678 f=-0.33 shape=(1, 9000, 1)
logits [[ 0.06549956 -0.5576222  -0.0320651  -0.7947762 ]]
Iteration 900 of 1000: loss=0.00121 " + "l1=0.000381" + "l2=0.000827 f=-0.331 shape=(1, 9000, 1)
logits [[ 0.03006537 -0.5525462  -0.03090022 -0.7691281 ]]
const [0.006875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00272 " + "l1=0.00272" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.35599014 -0.60331255 -0.04018902 -1.0074298 ]]
Iteration 100 of 1000: loss=0.00237 " + "l1=0.00222" + "l2=0.000148 f=-0.325 shape=(1, 9000, 1)
logits [[ 0.28277507 -0.58733606 -0.04073265 -0.9553256 ]]
Iteration 200 of 1000: loss=0.0022 " + "l1=0.00204" + "l2=0.000163 f=-0.325 shape=(1, 9000, 1)
logits [[ 0.25718287 -0.5836974  -0.0393795  -0.93542176]]
Iteration 300 of 1000: loss=0.00202 " + "l1=0.00181" + "l2=0.000208 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.22511429 -0.5788453  -0.03809793 -0.91155684]]
Iteration 400 of 1000: loss=0.00186 " + "l1=0.00156" + "l2=0.000298 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.19042483 -0.5739735  -0.03671524 -0.88553286]]
Iteration 500 of 1000: loss=0.00168 " + "l1=0.00129" + "l2=0.00039 f=-0.327 shape=(1, 9000, 1)
logits [[ 0.1526621  -0.56927466 -0.03533238 -0.85778034]]
Iteration 600 of 1000: loss=0.00153 " + "l1=0.00101" + "l2=0.000515 f=-0.329 shape=(1, 9000, 1)
logits [[ 0.11293221 -0.563847   -0.03406023 -0.8291888 ]]
Iteration 700 of 1000: loss=0.00142 " + "l1=0.000728" + "l2=0.000694 f=-0.329 shape=(1, 9000, 1)
logits [[ 0.0735028  -0.5585553  -0.03245417 -0.8004328 ]]
Iteration 800 of 1000: loss=0.00124 " + "l1=0.000446" + "l2=0.000796 f=-0.33 shape=(1, 9000, 1)
logits [[ 0.03378049 -0.5531137  -0.03112482 -0.7712684 ]]
Iteration 900 of 1000: loss=0.00108 " + "l1=0.00019" + "l2=0.000889 f=-0.331 shape=(1, 9000, 1)
logits [[-0.00163343 -0.5479058  -0.02923536 -0.7466332 ]]
--- 280.31199407577515 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0136 " + "l1=0.0136" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.35599014 -0.60331255 -0.04018902 -1.0074298 ]]
Iteration 100 of 1000: loss=0.0104 " + "l1=0.00941" + "l2=0.00102 f=-0.317 shape=(1, 9000, 1)
logits [[ 0.16155836 -0.5620045  -0.08724664 -0.77944356]]
Iteration 200 of 1000: loss=0.00871 " + "l1=0.0072" + "l2=0.00151 f=-0.315 shape=(1, 9000, 1)
logits [[ 0.05552197 -0.5466759  -0.10306537 -0.66456735]]
Iteration 300 of 1000: loss=0.00696 " + "l1=0.00489" + "l2=0.00207 f=-0.313 shape=(1, 9000, 1)
logits [[-0.05614714 -0.53351486 -0.11730923 -0.54486704]]
Iteration 400 of 1000: loss=0.00548 " + "l1=0.00319" + "l2=0.00229 f=-0.311 shape=(1, 9000, 1)
logits [[-0.13221078 -0.5285475  -0.132017   -0.4514025 ]]
Iteration 500 of 1000: loss=0.00468 " + "l1=0.00251" + "l2=0.00216 f=-0.307 shape=(1, 9000, 1)
logits [[-0.14964898 -0.5308005  -0.14870732 -0.39986244]]
Iteration 600 of 1000: loss=0.004 " + "l1=0.00183" + "l2=0.00217 f=-0.304 shape=(1, 9000, 1)
logits [[-0.1692793  -0.5298562  -0.1660785  -0.34890336]]
Iteration 700 of 1000: loss=0.00332 " + "l1=0.00106" + "l2=0.00226 f=-0.3 shape=(1, 9000, 1)
logits [[-0.19793183 -0.5274618  -0.18445313 -0.290186  ]]
Iteration 800 of 1000: loss=0.00262 " + "l1=0.000139" + "l2=0.00248 f=-0.296 shape=(1, 9000, 1)
logits [[-0.23422869 -0.5239877  -0.20602046 -0.21994391]]
Iteration 900 of 1000: loss=0.00213 " + "l1=1.16e-05" + "l2=0.00212 f=-0.294 shape=(1, 9000, 1)
logits [[-0.2321658  -0.5287727  -0.20704159 -0.2082048 ]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.00682 " + "l1=0.00682" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.35599014 -0.60331255 -0.04018902 -1.0074298 ]]
Iteration 100 of 1000: loss=0.00594 " + "l1=0.00564" + "l2=0.000294 f=-0.319 shape=(1, 9000, 1)
logits [[ 0.2491563  -0.58068675 -0.06710637 -0.8791443 ]]
Iteration 200 of 1000: loss=0.00556 " + "l1=0.00518" + "l2=0.000373 f=-0.319 shape=(1, 9000, 1)
logits [[ 0.20495903 -0.57400495 -0.07369033 -0.831499  ]]
Iteration 300 of 1000: loss=0.00517 " + "l1=0.00466" + "l2=0.000517 f=-0.318 shape=(1, 9000, 1)
logits [[ 0.15419398 -0.56689274 -0.080584   -0.7770942 ]]
Iteration 400 of 1000: loss=0.00478 " + "l1=0.0041" + "l2=0.000685 f=-0.317 shape=(1, 9000, 1)
logits [[ 0.10052741 -0.5603747  -0.08735794 -0.71924084]]
Iteration 500 of 1000: loss=0.00436 " + "l1=0.00355" + "l2=0.000815 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.04707948 -0.5543016  -0.09372357 -0.6624464 ]]
Iteration 600 of 1000: loss=0.004 " + "l1=0.00298" + "l2=0.00101 f=-0.315 shape=(1, 9000, 1)
logits [[-0.0075249  -0.5480069  -0.09945485 -0.6041992 ]]
Iteration 700 of 1000: loss=0.00355 " + "l1=0.00244" + "l2=0.00111 f=-0.314 shape=(1, 9000, 1)
logits [[-0.05971156 -0.54205805 -0.10577045 -0.5472496 ]]
Iteration 800 of 1000: loss=0.00335 " + "l1=0.00193" + "l2=0.00143 f=-0.313 shape=(1, 9000, 1)
logits [[-0.10802558 -0.5365786  -0.11235152 -0.4936719 ]]
Iteration 900 of 1000: loss=0.00301 " + "l1=0.00173" + "l2=0.00128 f=-0.311 shape=(1, 9000, 1)
logits [[-0.11974749 -0.53788155 -0.11988895 -0.46517888]]
const [0.0075]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0102 " + "l1=0.0102" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.35599014 -0.60331255 -0.04018902 -1.0074298 ]]
Iteration 100 of 1000: loss=0.00839 " + "l1=0.00779" + "l2=0.000596 f=-0.318 shape=(1, 9000, 1)
logits [[ 0.20740253 -0.57168955 -0.07706009 -0.8312757 ]]
Iteration 200 of 1000: loss=0.00749 " + "l1=0.00664" + "l2=0.00085 f=-0.317 shape=(1, 9000, 1)
logits [[ 0.1335339  -0.5602587  -0.08852585 -0.7514588 ]]
Iteration 300 of 1000: loss=0.00654 " + "l1=0.0054" + "l2=0.00115 f=-0.315 shape=(1, 9000, 1)
logits [[ 0.05388351 -0.5502976  -0.09929236 -0.66591233]]
Iteration 400 of 1000: loss=0.00561 " + "l1=0.00413" + "l2=0.00147 f=-0.314 shape=(1, 9000, 1)
logits [[-0.02772789 -0.54078144 -0.10918558 -0.5787645 ]]
Iteration 500 of 1000: loss=0.00471 " + "l1=0.0029" + "l2=0.00182 f=-0.313 shape=(1, 9000, 1)
logits [[-0.10703003 -0.5315097  -0.1197786  -0.49310708]]
Iteration 600 of 1000: loss=0.00405 " + "l1=0.00237" + "l2=0.00168 f=-0.31 shape=(1, 9000, 1)
logits [[-0.13078386 -0.5333744  -0.13052729 -0.4467694 ]]
Iteration 700 of 1000: loss=0.0037 " + "l1=0.002" + "l2=0.00169 f=-0.307 shape=(1, 9000, 1)
logits [[-0.14289708 -0.5340027  -0.14247113 -0.40937993]]
Iteration 800 of 1000: loss=0.0033 " + "l1=0.00161" + "l2=0.00169 f=-0.304 shape=(1, 9000, 1)
logits [[-0.15630859 -0.5335871  -0.15568829 -0.37078786]]
Iteration 900 of 1000: loss=0.00292 " + "l1=0.00119" + "l2=0.00172 f=-0.301 shape=(1, 9000, 1)
logits [[-0.17280349 -0.53275734 -0.16975726 -0.3287359 ]]
const [0.00875]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0119 " + "l1=0.0119" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.35599014 -0.60331255 -0.04018902 -1.0074298 ]]
Iteration 100 of 1000: loss=0.00947 " + "l1=0.00868" + "l2=0.000787 f=-0.317 shape=(1, 9000, 1)
logits [[ 0.18563852 -0.5671851  -0.08181725 -0.80645293]]
Iteration 200 of 1000: loss=0.00818 " + "l1=0.00703" + "l2=0.00115 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.09543909 -0.5541341  -0.095434   -0.708481  ]]
Iteration 300 of 1000: loss=0.00687 " + "l1=0.00531" + "l2=0.00156 f=-0.314 shape=(1, 9000, 1)
logits [[-1.4360063e-04 -5.4198128e-01 -1.0790752e-01 -6.0726959e-01]]
Iteration 400 of 1000: loss=0.00557 " + "l1=0.00355" + "l2=0.00202 f=-0.313 shape=(1, 9000, 1)
logits [[-0.09720452 -0.5307207  -0.1203586  -0.5028563 ]]
Iteration 500 of 1000: loss=0.00464 " + "l1=0.0027" + "l2=0.00193 f=-0.31 shape=(1, 9000, 1)
logits [[-0.13348985 -0.5319691  -0.13333116 -0.44247296]]
Iteration 600 of 1000: loss=0.00407 " + "l1=0.0022" + "l2=0.00187 f=-0.307 shape=(1, 9000, 1)
logits [[-0.14869596 -0.5324858  -0.14753696 -0.39871958]]
Iteration 700 of 1000: loss=0.00358 " + "l1=0.00167" + "l2=0.00191 f=-0.303 shape=(1, 9000, 1)
logits [[-0.16475835 -0.53206414 -0.16281013 -0.3541646 ]]
Iteration 800 of 1000: loss=0.00309 " + "l1=0.00109" + "l2=0.002 f=-0.3 shape=(1, 9000, 1)
logits [[-0.18807775 -0.53038096 -0.17885028 -0.30295682]]
Iteration 900 of 1000: loss=0.00254 " + "l1=0.00039" + "l2=0.00215 f=-0.296 shape=(1, 9000, 1)
logits [[-0.21797654 -0.5275687  -0.19779588 -0.24238354]]
const [0.008125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0111 " + "l1=0.0111" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.35599014 -0.60331255 -0.04018902 -1.0074298 ]]
Iteration 100 of 1000: loss=0.00894 " + "l1=0.00826" + "l2=0.000684 f=-0.318 shape=(1, 9000, 1)
logits [[ 0.1972391 -0.5697754 -0.0793637 -0.8193364]]
Iteration 200 of 1000: loss=0.00785 " + "l1=0.00687" + "l2=0.000983 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.11525044 -0.5576868  -0.09197618 -0.73037547]]
Iteration 300 of 1000: loss=0.00676 " + "l1=0.00542" + "l2=0.00134 f=-0.315 shape=(1, 9000, 1)
logits [[ 0.02873483 -0.54691464 -0.1035786  -0.63798684]]
Iteration 400 of 1000: loss=0.00562 " + "l1=0.00389" + "l2=0.00173 f=-0.313 shape=(1, 9000, 1)
logits [[-0.06198278 -0.536101   -0.11497962 -0.540706  ]]
Iteration 500 of 1000: loss=0.00464 " + "l1=0.00274" + "l2=0.00189 f=-0.312 shape=(1, 9000, 1)
logits [[-0.12634179 -0.5312693  -0.12624955 -0.46393573]]
Iteration 600 of 1000: loss=0.00405 " + "l1=0.0023" + "l2=0.00175 f=-0.309 shape=(1, 9000, 1)
logits [[-0.13970357 -0.53372043 -0.13900252 -0.4220332 ]]
Iteration 700 of 1000: loss=0.00365 " + "l1=0.00186" + "l2=0.00179 f=-0.305 shape=(1, 9000, 1)
logits [[-0.1543849  -0.53314495 -0.15266287 -0.38129327]]
Iteration 800 of 1000: loss=0.00323 " + "l1=0.00139" + "l2=0.00184 f=-0.302 shape=(1, 9000, 1)
logits [[-0.17033267 -0.53290385 -0.16714637 -0.3380484 ]]
Iteration 900 of 1000: loss=0.00275 " + "l1=0.000853" + "l2=0.0019 f=-0.299 shape=(1, 9000, 1)
logits [[-0.19279495 -0.5310627  -0.18306422 -0.28805235]]
--- 298.1091320514679 seconds ---
Adv result:3
Loading record A06493
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.044 " + "l1=0.044" + "l2=0 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.777003  -1.6185461  1.6003909 -3.8190985]]
Iteration 100 of 1000: loss=0.0429 " + "l1=0.0422" + "l2=0.000722 f=-0.257 shape=(1, 9000, 1)
logits [[ 2.6973455 -1.5202242  1.5263084 -3.7303908]]
Iteration 200 of 1000: loss=0.0426 " + "l1=0.0417" + "l2=0.000933 f=-0.254 shape=(1, 9000, 1)
logits [[ 2.6762295 -1.4903855  1.5031314 -3.7052305]]
Iteration 300 of 1000: loss=0.0424 " + "l1=0.0413" + "l2=0.00114 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.6570375 -1.4685106  1.4862682 -3.683343 ]]
Iteration 400 of 1000: loss=0.0422 " + "l1=0.0409" + "l2=0.00129 f=-0.251 shape=(1, 9000, 1)
logits [[ 2.6397247 -1.4507164  1.4724449 -3.6635325]]
Iteration 500 of 1000: loss=0.0421 " + "l1=0.0406" + "l2=0.00151 f=-0.249 shape=(1, 9000, 1)
logits [[ 2.6233206 -1.4348704  1.4603602 -3.6446438]]
Iteration 600 of 1000: loss=0.042 " + "l1=0.0403" + "l2=0.00167 f=-0.248 shape=(1, 9000, 1)
logits [[ 2.6091511 -1.4238763  1.4523225 -3.6285446]]
Iteration 700 of 1000: loss=0.0419 " + "l1=0.0401" + "l2=0.00186 f=-0.247 shape=(1, 9000, 1)
logits [[ 2.5950913 -1.4124949  1.4439523 -3.6126277]]
Iteration 800 of 1000: loss=0.0418 " + "l1=0.0398" + "l2=0.00196 f=-0.245 shape=(1, 9000, 1)
logits [[ 2.581364  -1.4019288  1.4360652 -3.59723  ]]
Iteration 900 of 1000: loss=0.0418 " + "l1=0.0396" + "l2=0.00213 f=-0.245 shape=(1, 9000, 1)
logits [[ 2.5689201 -1.393712   1.4300424 -3.5834272]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.44 " + "l1=0.44" + "l2=0 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.777003  -1.6185461  1.6003909 -3.8190985]]
Iteration 100 of 1000: loss=0.305 " + "l1=0.213" + "l2=0.0923 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.7344644  -0.39082298  0.7177714  -2.7641897 ]]
Iteration 200 of 1000: loss=0.254 " + "l1=0.129" + "l2=0.125 f=-0.183 shape=(1, 9000, 1)
logits [[ 1.2553039  -0.03533112  0.4786135  -2.4296587 ]]
Iteration 300 of 1000: loss=0.214 " + "l1=0.0657" + "l2=0.148 f=-0.198 shape=(1, 9000, 1)
logits [[ 0.85500956  0.19810192  0.32285136 -2.1680567 ]]
Iteration 400 of 1000: loss=0.175 " + "l1=0.00273" + "l2=0.173 f=-0.213 shape=(1, 9000, 1)
logits [[ 0.4484174   0.4211098   0.14887209 -1.8716099 ]]
Iteration 500 of 1000: loss=0.153 " + "l1=0.000575" + "l2=0.153 f=-0.208 shape=(1, 9000, 1)
logits [[ 0.4176736   0.41191936  0.14397769 -1.8069717 ]]
Iteration 600 of 1000: loss=0.141 " + "l1=0.00225" + "l2=0.139 f=-0.197 shape=(1, 9000, 1)
logits [[ 0.41430807  0.3917796   0.15176463 -1.7470514 ]]
Iteration 700 of 1000: loss=0.132 " + "l1=0.0025" + "l2=0.129 f=-0.186 shape=(1, 9000, 1)
logits [[ 0.4030141   0.37800846  0.15925626 -1.6861521 ]]
Iteration 800 of 1000: loss=0.122 " + "l1=0.00205" + "l2=0.12 f=-0.178 shape=(1, 9000, 1)
logits [[ 0.38630888  0.36578918  0.16634661 -1.6297412 ]]
Iteration 900 of 1000: loss=0.115 " + "l1=0.00202" + "l2=0.113 f=-0.173 shape=(1, 9000, 1)
logits [[ 0.37073153  0.350505    0.17592098 -1.5904831 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.242 " + "l1=0.242" + "l2=0 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.777003  -1.6185461  1.6003909 -3.8190985]]
Iteration 100 of 1000: loss=0.206 " + "l1=0.182" + "l2=0.0244 f=-0.215 shape=(1, 9000, 1)
logits [[ 2.3048031 -1.0004781  1.1367108 -3.2993386]]
Iteration 200 of 1000: loss=0.191 " + "l1=0.152" + "l2=0.039 f=-0.192 shape=(1, 9000, 1)
logits [[ 2.039856   -0.72058403  0.9389145  -3.027066  ]]
Iteration 300 of 1000: loss=0.179 " + "l1=0.132" + "l2=0.0475 f=-0.18 shape=(1, 9000, 1)
logits [[ 1.8448414  -0.5487716   0.82118946 -2.835911  ]]
Iteration 400 of 1000: loss=0.17 " + "l1=0.119" + "l2=0.0507 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.6983076  -0.4680778   0.76608473 -2.6999698 ]]
Iteration 500 of 1000: loss=0.161 " + "l1=0.104" + "l2=0.0567 f=-0.173 shape=(1, 9000, 1)
logits [[ 1.53195    -0.36244655  0.69046825 -2.551859  ]]
Iteration 600 of 1000: loss=0.152 " + "l1=0.089" + "l2=0.0633 f=-0.171 shape=(1, 9000, 1)
logits [[ 1.3635756  -0.25393078  0.60340405 -2.398732  ]]
Iteration 700 of 1000: loss=0.143 " + "l1=0.0757" + "l2=0.0674 f=-0.172 shape=(1, 9000, 1)
logits [[ 1.2069381  -0.16953675  0.53715515 -2.263391  ]]
Iteration 800 of 1000: loss=0.134 " + "l1=0.0611" + "l2=0.0726 f=-0.174 shape=(1, 9000, 1)
logits [[ 1.0391269  -0.07184692  0.45903033 -2.12149   ]]
Iteration 900 of 1000: loss=0.124 " + "l1=0.0476" + "l2=0.0762 f=-0.17 shape=(1, 9000, 1)
logits [[ 0.88109326  0.01602537  0.39458078 -1.9701734 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.341 " + "l1=0.341" + "l2=0 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.777003  -1.6185461  1.6003909 -3.8190985]]
Iteration 100 of 1000: loss=0.265 " + "l1=0.211" + "l2=0.0542 f=-0.194 shape=(1, 9000, 1)
logits [[ 2.0269     -0.6901577   0.91782093 -3.0287938 ]]
Iteration 200 of 1000: loss=0.233 " + "l1=0.156" + "l2=0.0769 f=-0.172 shape=(1, 9000, 1)
logits [[ 1.6576506  -0.35150212  0.692154   -2.6871321 ]]
Iteration 300 of 1000: loss=0.211 " + "l1=0.12" + "l2=0.0911 f=-0.174 shape=(1, 9000, 1)
logits [[ 1.3801003  -0.16550161  0.56189555 -2.4732916 ]]
Iteration 400 of 1000: loss=0.191 " + "l1=0.0875" + "l2=0.104 f=-0.18 shape=(1, 9000, 1)
logits [[ 1.1169794  -0.01245682  0.44467407 -2.2694428 ]]
Iteration 500 of 1000: loss=0.17 " + "l1=0.0537" + "l2=0.116 f=-0.185 shape=(1, 9000, 1)
logits [[ 0.8441308   0.15164943  0.3174652  -2.0524383 ]]
Iteration 600 of 1000: loss=0.149 " + "l1=0.0259" + "l2=0.124 f=-0.186 shape=(1, 9000, 1)
logits [[ 0.5995686   0.26583335  0.22517563 -1.8361889 ]]
Iteration 700 of 1000: loss=0.134 " + "l1=0.00827" + "l2=0.126 f=-0.18 shape=(1, 9000, 1)
logits [[ 0.44366324  0.3370064   0.18152815 -1.6830629 ]]
Iteration 800 of 1000: loss=0.122 " + "l1=0.00311" + "l2=0.119 f=-0.175 shape=(1, 9000, 1)
logits [[ 0.3814881   0.34130606  0.17598441 -1.6006571 ]]
Iteration 900 of 1000: loss=0.113 " + "l1=0.00128" + "l2=0.111 f=-0.169 shape=(1, 9000, 1)
logits [[ 0.35290447  0.3364092   0.17243735 -1.539652  ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.291 " + "l1=0.291" + "l2=0 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.777003  -1.6185461  1.6003909 -3.8190985]]
Iteration 100 of 1000: loss=0.239 " + "l1=0.202" + "l2=0.0366 f=-0.206 shape=(1, 9000, 1)
logits [[ 2.1820426 -0.8658862  1.0389345 -3.179641 ]]
Iteration 200 of 1000: loss=0.214 " + "l1=0.158" + "l2=0.0563 f=-0.18 shape=(1, 9000, 1)
logits [[ 1.8496877  -0.52952176  0.80947995 -2.848242  ]]
Iteration 300 of 1000: loss=0.198 " + "l1=0.132" + "l2=0.0661 f=-0.173 shape=(1, 9000, 1)
logits [[ 1.6273394  -0.37144494  0.7037401  -2.6509519 ]]
Iteration 400 of 1000: loss=0.185 " + "l1=0.111" + "l2=0.0737 f=-0.171 shape=(1, 9000, 1)
logits [[ 1.4268552  -0.25234577  0.6183315  -2.4778101 ]]
Iteration 500 of 1000: loss=0.17 " + "l1=0.0897" + "l2=0.08 f=-0.173 shape=(1, 9000, 1)
logits [[ 1.2206109 -0.1333621  0.5214884 -2.3000295]]
Iteration 600 of 1000: loss=0.155 " + "l1=0.0644" + "l2=0.0905 f=-0.176 shape=(1, 9000, 1)
logits [[ 0.98754     0.01541462  0.40893525 -2.1146595 ]]
Iteration 700 of 1000: loss=0.14 " + "l1=0.0437" + "l2=0.0962 f=-0.175 shape=(1, 9000, 1)
logits [[ 0.7869195   0.1267688   0.32101858 -1.9361017 ]]
Iteration 800 of 1000: loss=0.128 " + "l1=0.0273" + "l2=0.101 f=-0.171 shape=(1, 9000, 1)
logits [[ 0.6238374   0.21180408  0.2579499  -1.7794687 ]]
Iteration 900 of 1000: loss=0.113 " + "l1=0.00859" + "l2=0.104 f=-0.167 shape=(1, 9000, 1)
logits [[ 0.4366555   0.30697483  0.18952481 -1.6002914 ]]
--- 296.7444260120392 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0118 " + "l1=0.0118" + "l2=0 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.777003  -1.6185461  1.6003909 -3.8190985]]
Iteration 100 of 1000: loss=0.0115 " + "l1=0.0113" + "l2=0.000225 f=-0.267 shape=(1, 9000, 1)
logits [[ 2.74819   -1.6411842  1.6206894 -3.796765 ]]
Iteration 200 of 1000: loss=0.0114 " + "l1=0.0112" + "l2=0.000211 f=-0.268 shape=(1, 9000, 1)
logits [[ 2.7455413 -1.6439804  1.623874  -3.7957933]]
Iteration 300 of 1000: loss=0.0114 " + "l1=0.0111" + "l2=0.000251 f=-0.268 shape=(1, 9000, 1)
logits [[ 2.7397363 -1.6469357  1.6274332 -3.7923346]]
Iteration 400 of 1000: loss=0.0113 " + "l1=0.011" + "l2=0.000297 f=-0.268 shape=(1, 9000, 1)
logits [[ 2.7336526 -1.6491168  1.6305307 -3.788616 ]]
Iteration 500 of 1000: loss=0.0113 " + "l1=0.0109" + "l2=0.000391 f=-0.269 shape=(1, 9000, 1)
logits [[ 2.727189  -1.6507039  1.6331258 -3.7845194]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.118 " + "l1=0.118" + "l2=0 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.777003  -1.6185461  1.6003909 -3.8190985]]
Iteration 100 of 1000: loss=0.0887 " + "l1=0.0711" + "l2=0.0176 f=-0.292 shape=(1, 9000, 1)
logits [[ 2.5150554 -1.8224317  1.8040949 -3.6632233]]
Iteration 200 of 1000: loss=0.0744 " + "l1=0.0445" + "l2=0.03 f=-0.306 shape=(1, 9000, 1)
logits [[ 2.349527  -1.8981961  1.9048072 -3.5814955]]
Iteration 300 of 1000: loss=0.0623 " + "l1=0.024" + "l2=0.0383 f=-0.32 shape=(1, 9000, 1)
logits [[ 2.2123468 -1.9525356  1.972606  -3.5139892]]
Iteration 400 of 1000: loss=0.0513 " + "l1=0.00608" + "l2=0.0453 f=-0.331 shape=(1, 9000, 1)
logits [[ 2.0809906 -1.9919566  2.020218  -3.4318595]]
Iteration 500 of 1000: loss=0.0418 " + "l1=0.000882" + "l2=0.0409 f=-0.33 shape=(1, 9000, 1)
logits [[ 2.026037  -1.9868892  2.0172155 -3.3744624]]
Iteration 600 of 1000: loss=0.0357 " + "l1=0" + "l2=0.0357 f=-0.327 shape=(1, 9000, 1)
logits [[ 2.0007563 -1.979995   2.0048327 -3.334494 ]]
Iteration 700 of 1000: loss=0.031 " + "l1=0.000103" + "l2=0.0309 f=-0.325 shape=(1, 9000, 1)
logits [[ 1.9823015 -1.9663341  1.9812762 -3.29626  ]]
Iteration 800 of 1000: loss=0.0273 " + "l1=0" + "l2=0.0273 f=-0.323 shape=(1, 9000, 1)
logits [[ 1.9637401 -1.9595233  1.9670796 -3.2624743]]
Iteration 900 of 1000: loss=0.0242 " + "l1=0" + "l2=0.0242 f=-0.32 shape=(1, 9000, 1)
logits [[ 1.9503931 -1.952845   1.9538386 -3.231923 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0647 " + "l1=0.0647" + "l2=0 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.777003  -1.6185461  1.6003909 -3.8190985]]
Iteration 100 of 1000: loss=0.0567 " + "l1=0.052" + "l2=0.00468 f=-0.276 shape=(1, 9000, 1)
logits [[ 2.6513574 -1.7268178  1.7050539 -3.7330832]]
Iteration 200 of 1000: loss=0.0532 " + "l1=0.046" + "l2=0.00723 f=-0.282 shape=(1, 9000, 1)
logits [[ 2.5839932 -1.7629573  1.7472787 -3.6968796]]
Iteration 300 of 1000: loss=0.05 " + "l1=0.041" + "l2=0.009 f=-0.287 shape=(1, 9000, 1)
logits [[ 2.5226376 -1.7813841  1.7770449 -3.6676497]]
Iteration 400 of 1000: loss=0.0472 " + "l1=0.037" + "l2=0.0102 f=-0.29 shape=(1, 9000, 1)
logits [[ 2.4695628 -1.7954473  1.7969522 -3.6330342]]
Iteration 500 of 1000: loss=0.0445 " + "l1=0.0331" + "l2=0.0113 f=-0.293 shape=(1, 9000, 1)
logits [[ 2.4151177 -1.8072213  1.8125404 -3.5941317]]
Iteration 600 of 1000: loss=0.042 " + "l1=0.0296" + "l2=0.0124 f=-0.296 shape=(1, 9000, 1)
logits [[ 2.362832  -1.8166717  1.8245493 -3.5544157]]
Iteration 700 of 1000: loss=0.0394 " + "l1=0.0259" + "l2=0.0135 f=-0.299 shape=(1, 9000, 1)
logits [[ 2.3109763 -1.8315722  1.8397559 -3.5140803]]
Iteration 800 of 1000: loss=0.0366 " + "l1=0.0217" + "l2=0.0149 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.2515347 -1.8457782  1.8564789 -3.4695103]]
Iteration 900 of 1000: loss=0.0341 " + "l1=0.0182" + "l2=0.0159 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.1992517 -1.8544981  1.8676697 -3.4269366]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0912 " + "l1=0.0912" + "l2=0 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.777003  -1.6185461  1.6003909 -3.8190985]]
Iteration 100 of 1000: loss=0.0743 " + "l1=0.0638" + "l2=0.0106 f=-0.284 shape=(1, 9000, 1)
logits [[ 2.5801122 -1.7781022  1.7574384 -3.696072 ]]
Iteration 200 of 1000: loss=0.0668 " + "l1=0.0514" + "l2=0.0154 f=-0.293 shape=(1, 9000, 1)
logits [[ 2.4793994 -1.8214056  1.8163886 -3.6481197]]
Iteration 300 of 1000: loss=0.0605 " + "l1=0.0412" + "l2=0.0192 f=-0.299 shape=(1, 9000, 1)
logits [[ 2.3889744 -1.8514184  1.8572848 -3.591064 ]]
Iteration 400 of 1000: loss=0.0541 " + "l1=0.0306" + "l2=0.0236 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.2948332 -1.8870859  1.9004422 -3.5358799]]
Iteration 500 of 1000: loss=0.048 " + "l1=0.0209" + "l2=0.0271 f=-0.314 shape=(1, 9000, 1)
logits [[ 2.205397  -1.9173182  1.9362897 -3.480585 ]]
Iteration 600 of 1000: loss=0.0418 " + "l1=0.013" + "l2=0.0287 f=-0.318 shape=(1, 9000, 1)
logits [[ 2.127399  -1.9374028  1.9590828 -3.419986 ]]
Iteration 700 of 1000: loss=0.0363 " + "l1=0.00595" + "l2=0.0304 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.053847  -1.9569564  1.9771265 -3.3611693]]
Iteration 800 of 1000: loss=0.0309 " + "l1=0.000437" + "l2=0.0305 f=-0.325 shape=(1, 9000, 1)
logits [[ 1.9872601 -1.9697009  1.9816167 -3.299908 ]]
Iteration 900 of 1000: loss=0.0271 " + "l1=0" + "l2=0.0271 f=-0.324 shape=(1, 9000, 1)
logits [[ 1.9671773 -1.9644545  1.9695231 -3.266393 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.078 " + "l1=0.078" + "l2=0 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.777003  -1.6185461  1.6003909 -3.8190985]]
Iteration 100 of 1000: loss=0.0661 " + "l1=0.0588" + "l2=0.00728 f=-0.28 shape=(1, 9000, 1)
logits [[ 2.618021  -1.7531326  1.7307523 -3.7144632]]
Iteration 200 of 1000: loss=0.0608 " + "l1=0.05" + "l2=0.0108 f=-0.288 shape=(1, 9000, 1)
logits [[ 2.5347385 -1.7919337  1.7802231 -3.6737945]]
Iteration 300 of 1000: loss=0.0561 " + "l1=0.0427" + "l2=0.0134 f=-0.293 shape=(1, 9000, 1)
logits [[ 2.460754  -1.8176237  1.8165553 -3.6323998]]
Iteration 400 of 1000: loss=0.0519 " + "l1=0.0364" + "l2=0.0155 f=-0.297 shape=(1, 9000, 1)
logits [[ 2.3905435 -1.834949   1.8406068 -3.5832837]]
Iteration 500 of 1000: loss=0.0479 " + "l1=0.0303" + "l2=0.0176 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.3191736 -1.8502964  1.86216   -3.534703 ]]
Iteration 600 of 1000: loss=0.0438 " + "l1=0.0244" + "l2=0.0195 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.2497451 -1.8685431  1.8819481 -3.484322 ]]
Iteration 700 of 1000: loss=0.0393 " + "l1=0.0167" + "l2=0.0226 f=-0.311 shape=(1, 9000, 1)
logits [[ 2.1730304 -1.903446   1.9202727 -3.4356306]]
Iteration 800 of 1000: loss=0.0353 " + "l1=0.0111" + "l2=0.0242 f=-0.315 shape=(1, 9000, 1)
logits [[ 2.1080348 -1.9238313  1.9411013 -3.3857195]]
Iteration 900 of 1000: loss=0.0315 " + "l1=0.00615" + "l2=0.0254 f=-0.319 shape=(1, 9000, 1)
logits [[ 2.0426035 -1.9368973  1.9498125 -3.329771 ]]
--- 268.6907551288605 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.066 " + "l1=0.066" + "l2=0 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.777003  -1.6185461  1.6003909 -3.8190985]]
Iteration 100 of 1000: loss=0.0646 " + "l1=0.0638" + "l2=0.000835 f=-0.257 shape=(1, 9000, 1)
logits [[ 2.6806214 -1.5539906  1.5434756 -3.6961799]]
Iteration 200 of 1000: loss=0.0642 " + "l1=0.0632" + "l2=0.000977 f=-0.254 shape=(1, 9000, 1)
logits [[ 2.6564865 -1.534819   1.5275332 -3.664996 ]]
Iteration 300 of 1000: loss=0.0638 " + "l1=0.0626" + "l2=0.00119 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.6319122 -1.5187331  1.5133584 -3.632663 ]]
Iteration 400 of 1000: loss=0.0635 " + "l1=0.0621" + "l2=0.00138 f=-0.249 shape=(1, 9000, 1)
logits [[ 2.6082263 -1.5047114  1.5005723 -3.6012502]]
Iteration 500 of 1000: loss=0.0632 " + "l1=0.0616" + "l2=0.00161 f=-0.247 shape=(1, 9000, 1)
logits [[ 2.585397  -1.4930264  1.4893634 -3.5705557]]
Iteration 600 of 1000: loss=0.0629 " + "l1=0.0611" + "l2=0.00184 f=-0.245 shape=(1, 9000, 1)
logits [[ 2.5638406 -1.4824635  1.4790772 -3.5411596]]
Iteration 700 of 1000: loss=0.0626 " + "l1=0.0606" + "l2=0.00204 f=-0.243 shape=(1, 9000, 1)
logits [[ 2.5427437 -1.4718019  1.46867   -3.5124393]]
Iteration 800 of 1000: loss=0.0624 " + "l1=0.0601" + "l2=0.00234 f=-0.241 shape=(1, 9000, 1)
logits [[ 2.521649  -1.4615105  1.4584447 -3.4836705]]
Iteration 900 of 1000: loss=0.0621 " + "l1=0.0595" + "l2=0.0026 f=-0.239 shape=(1, 9000, 1)
logits [[ 2.500089  -1.4516841  1.4482989 -3.4544911]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.66 " + "l1=0.66" + "l2=0 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.777003  -1.6185461  1.6003909 -3.8190985]]
Iteration 100 of 1000: loss=0.499 " + "l1=0.39" + "l2=0.108 f=-0.174 shape=(1, 9000, 1)
logits [[ 1.531555   -0.63138723  0.77403414 -2.3707511 ]]
Iteration 200 of 1000: loss=0.422 " + "l1=0.282" + "l2=0.14 f=-0.156 shape=(1, 9000, 1)
logits [[ 1.0016575  -0.32314217  0.51247495 -1.8165287 ]]
Iteration 300 of 1000: loss=0.364 " + "l1=0.211" + "l2=0.153 f=-0.153 shape=(1, 9000, 1)
logits [[ 0.6351108  -0.16045009  0.3893947  -1.4744312 ]]
Iteration 400 of 1000: loss=0.308 " + "l1=0.138" + "l2=0.17 f=-0.155 shape=(1, 9000, 1)
logits [[ 0.25492087  0.01139246  0.23776191 -1.12598   ]]
Iteration 500 of 1000: loss=0.261 " + "l1=0.101" + "l2=0.16 f=-0.144 shape=(1, 9000, 1)
logits [[ 0.11014208  0.10410114  0.10664378 -0.898472  ]]
Iteration 600 of 1000: loss=0.227 " + "l1=0.0836" + "l2=0.144 f=-0.13 shape=(1, 9000, 1)
logits [[ 0.08365863  0.06415646  0.08472341 -0.7516324 ]]
Iteration 700 of 1000: loss=0.195 " + "l1=0.0628" + "l2=0.132 f=-0.117 shape=(1, 9000, 1)
logits [[ 0.04470854  0.03020615  0.04079874 -0.58351296]]
Iteration 800 of 1000: loss=0.164 " + "l1=0.0387" + "l2=0.125 f=-0.106 shape=(1, 9000, 1)
logits [[-0.02711221  0.0009877  -0.01027627 -0.38593835]]
Iteration 900 of 1000: loss=0.14 " + "l1=0.0206" + "l2=0.12 f=-0.099 shape=(1, 9000, 1)
logits [[-0.05618416 -0.0452814  -0.04395063 -0.25043556]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.6 " + "l1=6.6" + "l2=0 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.777003  -1.6185461  1.6003909 -3.8190985]]
Iteration 100 of 1000: loss=0.893 " + "l1=0.000494" + "l2=0.892 f=-0.138 shape=(1, 9000, 1)
logits [[-0.13865545 -0.1601254  -0.12730592 -0.12780035]]
Iteration 200 of 1000: loss=0.638 " + "l1=0" + "l2=0.638 f=-0.129 shape=(1, 9000, 1)
logits [[-0.12677613 -0.13339612 -0.13927071 -0.11717439]]
Iteration 300 of 1000: loss=0.521 " + "l1=0.0167" + "l2=0.505 f=-0.12 shape=(1, 9000, 1)
logits [[-0.10644963 -0.11786751 -0.13295275 -0.12313665]]
Iteration 400 of 1000: loss=0.436 " + "l1=0" + "l2=0.436 f=-0.118 shape=(1, 9000, 1)
logits [[-0.14675404 -0.10778885 -0.11934555 -0.09920583]]
Iteration 500 of 1000: loss=0.373 " + "l1=0" + "l2=0.373 f=-0.109 shape=(1, 9000, 1)
logits [[-0.12742744 -0.10600049 -0.11486623 -0.08577539]]
Iteration 600 of 1000: loss=0.338 " + "l1=0" + "l2=0.338 f=-0.101 shape=(1, 9000, 1)
logits [[-0.12908459 -0.08165412 -0.14710228 -0.04430648]]
Iteration 700 of 1000: loss=0.304 " + "l1=0" + "l2=0.304 f=-0.0993 shape=(1, 9000, 1)
logits [[-0.13042146 -0.09339147 -0.1398109  -0.0336766 ]]
Iteration 800 of 1000: loss=0.272 " + "l1=0" + "l2=0.272 f=-0.0985 shape=(1, 9000, 1)
logits [[-0.11146369 -0.12581488 -0.10507749 -0.05177924]]
Iteration 900 of 1000: loss=0.245 " + "l1=0" + "l2=0.245 f=-0.0881 shape=(1, 9000, 1)
logits [[-0.06846696 -0.13360892 -0.10441271 -0.04594488]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.63 " + "l1=3.63" + "l2=0 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.777003  -1.6185461  1.6003909 -3.8190985]]
Iteration 100 of 1000: loss=0.835 " + "l1=0.0829" + "l2=0.752 f=-0.147 shape=(1, 9000, 1)
logits [[-0.12771443 -0.09931539 -0.11202705 -0.25006112]]
Iteration 200 of 1000: loss=0.536 " + "l1=0.00341" + "l2=0.533 f=-0.129 shape=(1, 9000, 1)
logits [[-0.15291569 -0.1204873  -0.11900528 -0.12520236]]
Iteration 300 of 1000: loss=0.42 " + "l1=0.00707" + "l2=0.412 f=-0.11 shape=(1, 9000, 1)
logits [[-0.12183323 -0.09199549 -0.12110951 -0.10484555]]
Iteration 400 of 1000: loss=0.341 " + "l1=0" + "l2=0.341 f=-0.105 shape=(1, 9000, 1)
logits [[-0.12169106 -0.09286673 -0.12304296 -0.08147955]]
Iteration 500 of 1000: loss=0.294 " + "l1=0" + "l2=0.294 f=-0.0965 shape=(1, 9000, 1)
logits [[-0.0756567  -0.12095364 -0.12394351 -0.06555615]]
Iteration 600 of 1000: loss=0.265 " + "l1=0" + "l2=0.265 f=-0.11 shape=(1, 9000, 1)
logits [[-0.16492905 -0.08837043 -0.1285984  -0.05683854]]
Iteration 700 of 1000: loss=0.235 " + "l1=0" + "l2=0.235 f=-0.105 shape=(1, 9000, 1)
logits [[-0.13508613 -0.11182214 -0.12246725 -0.04882917]]
Iteration 800 of 1000: loss=0.207 " + "l1=0" + "l2=0.207 f=-0.0999 shape=(1, 9000, 1)
logits [[-0.11941032 -0.08662679 -0.12486546 -0.06859476]]
Iteration 900 of 1000: loss=0.196 " + "l1=0" + "l2=0.196 f=-0.104 shape=(1, 9000, 1)
logits [[-0.16706075 -0.10225566 -0.11339885 -0.03266216]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.14 " + "l1=2.14" + "l2=0 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.777003  -1.6185461  1.6003909 -3.8190985]]
Iteration 100 of 1000: loss=0.751 " + "l1=0.26" + "l2=0.491 f=-0.173 shape=(1, 9000, 1)
logits [[ 0.02260536  0.03472785  0.01785674 -0.7656    ]]
Iteration 200 of 1000: loss=0.526 " + "l1=0.0943" + "l2=0.432 f=-0.134 shape=(1, 9000, 1)
logits [[-0.05008524 -0.07114228 -0.0732718  -0.34008613]]
Iteration 300 of 1000: loss=0.383 " + "l1=0.00822" + "l2=0.375 f=-0.109 shape=(1, 9000, 1)
logits [[-0.09090307 -0.11831229 -0.10927996 -0.11620788]]
Iteration 400 of 1000: loss=0.296 " + "l1=0.000335" + "l2=0.295 f=-0.112 shape=(1, 9000, 1)
logits [[-0.11624306 -0.1081318  -0.11313502 -0.10916351]]
Iteration 500 of 1000: loss=0.248 " + "l1=0.00463" + "l2=0.244 f=-0.113 shape=(1, 9000, 1)
logits [[-0.09913613 -0.1270504  -0.11275942 -0.11339372]]
Iteration 600 of 1000: loss=0.214 " + "l1=0" + "l2=0.214 f=-0.113 shape=(1, 9000, 1)
logits [[-0.10954572 -0.15745823 -0.09922838 -0.08651198]]
Iteration 700 of 1000: loss=0.189 " + "l1=0.00342" + "l2=0.186 f=-0.109 shape=(1, 9000, 1)
logits [[-0.09738334 -0.10758201 -0.12367702 -0.10790957]]
Iteration 800 of 1000: loss=0.168 " + "l1=0.00172" + "l2=0.166 f=-0.109 shape=(1, 9000, 1)
logits [[-0.10072108 -0.14434457 -0.09273986 -0.09803823]]
Iteration 900 of 1000: loss=0.15 " + "l1=0" + "l2=0.15 f=-0.106 shape=(1, 9000, 1)
logits [[-0.10063405 -0.11868087 -0.10516101 -0.09908428]]
--- 302.9721384048462 seconds ---
Adv result:3
Loading record A06526
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0739 " + "l1=0.0739" + "l2=0 f=-0.483 shape=(1, 9000, 1)
logits [[ 4.5939217 -2.792701   2.496164  -6.2306094]]
Iteration 100 of 1000: loss=0.0735 " + "l1=0.0732" + "l2=0.000269 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.5563726 -2.76807    2.473788  -6.1968365]]
Iteration 200 of 1000: loss=0.0734 " + "l1=0.0732" + "l2=0.000266 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.551554  -2.7646487  2.4701695 -6.1920595]]
Iteration 300 of 1000: loss=0.0734 " + "l1=0.073" + "l2=0.000318 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.5443363 -2.7598379  2.4651752 -6.18522  ]]
Iteration 400 of 1000: loss=0.0733 " + "l1=0.0729" + "l2=0.000364 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.5367146 -2.7552292  2.4604266 -6.177859 ]]
Iteration 500 of 1000: loss=0.0732 " + "l1=0.0728" + "l2=0.000422 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.528779  -2.750953   2.4560204 -6.170036 ]]
Iteration 600 of 1000: loss=0.0732 " + "l1=0.0727" + "l2=0.000503 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.5205274 -2.746586   2.451624  -6.162293 ]]
Iteration 700 of 1000: loss=0.0732 " + "l1=0.0725" + "l2=0.000628 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.512407  -2.7421782  2.4472535 -6.1548896]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.739 " + "l1=0.739" + "l2=0 f=-0.483 shape=(1, 9000, 1)
logits [[ 4.5939217 -2.792701   2.496164  -6.2306094]]
Iteration 100 of 1000: loss=0.705 " + "l1=0.683" + "l2=0.022 f=-0.49 shape=(1, 9000, 1)
logits [[ 4.271752 -2.558374  2.283544 -5.955042]]
Iteration 200 of 1000: loss=0.687 " + "l1=0.657" + "l2=0.0299 f=-0.498 shape=(1, 9000, 1)
logits [[ 4.128013  -2.4380128  2.1692622 -5.849961 ]]
Iteration 300 of 1000: loss=0.669 " + "l1=0.633" + "l2=0.0365 f=-0.497 shape=(1, 9000, 1)
logits [[ 3.998478  -2.329943   2.0748875 -5.73162  ]]
Iteration 400 of 1000: loss=0.652 " + "l1=0.607" + "l2=0.0453 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.8561075 -2.2131405  1.9818496 -5.594047 ]]
Iteration 500 of 1000: loss=0.632 " + "l1=0.581" + "l2=0.0516 f=-0.485 shape=(1, 9000, 1)
logits [[ 3.708646  -2.100153   1.8897698 -5.4376054]]
Iteration 600 of 1000: loss=0.612 " + "l1=0.552" + "l2=0.0598 f=-0.475 shape=(1, 9000, 1)
logits [[ 3.5509748 -1.9692991  1.7822218 -5.2632537]]
Iteration 700 of 1000: loss=0.591 " + "l1=0.522" + "l2=0.0692 f=-0.454 shape=(1, 9000, 1)
logits [[ 3.3944316 -1.8283633  1.6790451 -5.062519 ]]
Iteration 800 of 1000: loss=0.575 " + "l1=0.499" + "l2=0.0759 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.247044  -1.739139   1.6074983 -4.885919 ]]
Iteration 900 of 1000: loss=0.557 " + "l1=0.472" + "l2=0.085 f=-0.434 shape=(1, 9000, 1)
logits [[ 3.0758066 -1.6465411  1.5398282 -4.7041564]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.39 " + "l1=7.39" + "l2=0 f=-0.483 shape=(1, 9000, 1)
logits [[ 4.5939217 -2.792701   2.496164  -6.2306094]]
Iteration 100 of 1000: loss=3.22 " + "l1=1.2" + "l2=2.02 f=-0.549 shape=(1, 9000, 1)
logits [[ 0.8611759  -0.3340455   0.85210675 -3.5748255 ]]
Iteration 200 of 1000: loss=1.66 " + "l1=0" + "l2=1.66 f=-0.524 shape=(1, 9000, 1)
logits [[ 0.25807366  0.2646654   0.2631142  -2.8821232 ]]
Iteration 300 of 1000: loss=1.35 " + "l1=0" + "l2=1.35 f=-0.511 shape=(1, 9000, 1)
logits [[ 0.2251579   0.2511542   0.20319994 -2.7247865 ]]
Iteration 400 of 1000: loss=1.22 " + "l1=0" + "l2=1.22 f=-0.515 shape=(1, 9000, 1)
logits [[ 0.16620073  0.21664573  0.19697969 -2.6396985 ]]
Iteration 500 of 1000: loss=1.14 " + "l1=0" + "l2=1.14 f=-0.51 shape=(1, 9000, 1)
logits [[ 0.12512827  0.20461677  0.16545784 -2.5369265 ]]
Iteration 600 of 1000: loss=1.06 " + "l1=0" + "l2=1.06 f=-0.507 shape=(1, 9000, 1)
logits [[ 0.10913976  0.18170042  0.13596006 -2.4549844 ]]
Iteration 700 of 1000: loss=1.01 " + "l1=0" + "l2=1.01 f=-0.498 shape=(1, 9000, 1)
logits [[ 0.11607443  0.18200895  0.10277301 -2.3930752 ]]
Iteration 800 of 1000: loss=0.949 " + "l1=0" + "l2=0.949 f=-0.493 shape=(1, 9000, 1)
logits [[ 0.11968186  0.1426657   0.11499283 -2.3503911 ]]
Iteration 900 of 1000: loss=0.912 " + "l1=0.011" + "l2=0.901 f=-0.486 shape=(1, 9000, 1)
logits [[ 0.13215558  0.12117013  0.11175556 -2.3094556 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.06 " + "l1=4.06" + "l2=0 f=-0.483 shape=(1, 9000, 1)
logits [[ 4.5939217 -2.792701   2.496164  -6.2306094]]
Iteration 100 of 1000: loss=2.69 " + "l1=1.76" + "l2=0.936 f=-0.483 shape=(1, 9000, 1)
logits [[ 2.1435475 -1.0484459  1.3343408 -4.3629494]]
Iteration 200 of 1000: loss=1.91 " + "l1=0.764" + "l2=1.15 f=-0.556 shape=(1, 9000, 1)
logits [[ 0.93699867 -0.452636    0.9306457  -3.6393888 ]]
Iteration 300 of 1000: loss=1.43 " + "l1=0.256" + "l2=1.18 f=-0.498 shape=(1, 9000, 1)
logits [[ 0.44667846 -0.01647452  0.44841507 -2.8691394 ]]
Iteration 400 of 1000: loss=1.05 " + "l1=0.00466" + "l2=1.04 f=-0.477 shape=(1, 9000, 1)
logits [[ 0.16295911  0.15448812  0.15095125 -2.3780398 ]]
Iteration 500 of 1000: loss=0.914 " + "l1=0" + "l2=0.914 f=-0.473 shape=(1, 9000, 1)
logits [[ 0.10719302  0.13756031  0.12059893 -2.2570155 ]]
Iteration 600 of 1000: loss=0.812 " + "l1=0" + "l2=0.812 f=-0.467 shape=(1, 9000, 1)
logits [[ 0.11041951  0.11391214  0.09394164 -2.1868842 ]]
Iteration 700 of 1000: loss=0.744 " + "l1=0" + "l2=0.744 f=-0.466 shape=(1, 9000, 1)
logits [[ 0.07383533  0.10114352  0.06001297 -2.0974052 ]]
Iteration 800 of 1000: loss=0.682 " + "l1=0" + "l2=0.682 f=-0.466 shape=(1, 9000, 1)
logits [[ 0.03101289  0.06418195  0.05330769 -2.0111303 ]]
Iteration 900 of 1000: loss=0.626 " + "l1=0.00587" + "l2=0.62 f=-0.456 shape=(1, 9000, 1)
logits [[ 0.04093327  0.04376755  0.05444111 -1.9639071 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.4 " + "l1=2.4" + "l2=0 f=-0.483 shape=(1, 9000, 1)
logits [[ 4.5939217 -2.792701   2.496164  -6.2306094]]
Iteration 100 of 1000: loss=1.97 " + "l1=1.69" + "l2=0.283 f=-0.478 shape=(1, 9000, 1)
logits [[ 3.3421793 -1.8456516  1.7362269 -5.143658 ]]
Iteration 200 of 1000: loss=1.69 " + "l1=1.21" + "l2=0.473 f=-0.47 shape=(1, 9000, 1)
logits [[ 2.4819276 -1.2535264  1.4142305 -4.5210238]]
Iteration 300 of 1000: loss=1.44 " + "l1=0.909" + "l2=0.532 f=-0.486 shape=(1, 9000, 1)
logits [[ 1.8223115 -0.9734731  1.1816396 -3.9740734]]
Iteration 400 of 1000: loss=1.23 " + "l1=0.623" + "l2=0.607 f=-0.48 shape=(1, 9000, 1)
logits [[ 1.2275561  -0.6889769   0.91044533 -3.3707983 ]]
Iteration 500 of 1000: loss=1.06 " + "l1=0.399" + "l2=0.66 f=-0.471 shape=(1, 9000, 1)
logits [[ 0.72321415 -0.5045284   0.719511   -2.8217638 ]]
Iteration 600 of 1000: loss=0.938 " + "l1=0.3" + "l2=0.638 f=-0.448 shape=(1, 9000, 1)
logits [[ 0.5661421  -0.35681862  0.55239516 -2.5521424 ]]
Iteration 700 of 1000: loss=0.809 " + "l1=0.147" + "l2=0.662 f=-0.44 shape=(1, 9000, 1)
logits [[ 0.3015091  -0.13696985  0.31571    -2.2394865 ]]
Iteration 800 of 1000: loss=0.675 " + "l1=0.0294" + "l2=0.646 f=-0.431 shape=(1, 9000, 1)
logits [[ 0.14810291  0.05749052  0.14411597 -2.073714  ]]
Iteration 900 of 1000: loss=0.571 " + "l1=0.00256" + "l2=0.568 f=-0.422 shape=(1, 9000, 1)
logits [[ 0.08616596  0.08592969  0.09380296 -1.9536138 ]]
--- 283.5198872089386 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.021 " + "l1=0.021" + "l2=0 f=-0.483 shape=(1, 9000, 1)
logits [[ 4.5939217 -2.792701   2.496164  -6.2306094]]
Iteration 100 of 1000: loss=0.0208 " + "l1=0.0206" + "l2=0.000193 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.5664077 -2.8042789  2.5075867 -6.206014 ]]
Iteration 200 of 1000: loss=0.0207 " + "l1=0.0206" + "l2=0.000159 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.564634  -2.8048992  2.5080757 -6.2037034]]
Iteration 300 of 1000: loss=0.0207 " + "l1=0.0205" + "l2=0.000177 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.560588  -2.8064635  2.5096605 -6.199275 ]]
Iteration 400 of 1000: loss=0.0207 " + "l1=0.0204" + "l2=0.000237 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.5559626 -2.8081357  2.5113952 -6.1943746]]
Iteration 500 of 1000: loss=0.0207 " + "l1=0.0204" + "l2=0.000299 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.551171  -2.8098037  2.51314   -6.189405 ]]
Iteration 600 of 1000: loss=0.0207 " + "l1=0.0203" + "l2=0.000344 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.5462856 -2.8115597  2.514942  -6.184454 ]]
Iteration 700 of 1000: loss=0.0207 " + "l1=0.0202" + "l2=0.000421 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.541268  -2.8133674  2.5167313 -6.179458 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.21 " + "l1=0.21" + "l2=0 f=-0.483 shape=(1, 9000, 1)
logits [[ 4.5939217 -2.792701   2.496164  -6.2306094]]
Iteration 100 of 1000: loss=0.19 " + "l1=0.177" + "l2=0.0127 f=-0.498 shape=(1, 9000, 1)
logits [[ 4.348415  -2.8974342  2.5800905 -6.0210795]]
Iteration 200 of 1000: loss=0.182 " + "l1=0.164" + "l2=0.0176 f=-0.506 shape=(1, 9000, 1)
logits [[ 4.2566867 -2.9485073  2.6166484 -5.9488807]]
Iteration 300 of 1000: loss=0.173 " + "l1=0.15" + "l2=0.0227 f=-0.514 shape=(1, 9000, 1)
logits [[ 4.1601343 -3.012371   2.6604733 -5.8631744]]
Iteration 400 of 1000: loss=0.164 " + "l1=0.138" + "l2=0.0256 f=-0.517 shape=(1, 9000, 1)
logits [[ 4.0816607 -3.0636103  2.6968443 -5.7846985]]
Iteration 500 of 1000: loss=0.157 " + "l1=0.131" + "l2=0.0265 f=-0.518 shape=(1, 9000, 1)
logits [[ 4.0231996 -3.0899603  2.717751  -5.722631 ]]
Iteration 600 of 1000: loss=0.151 " + "l1=0.122" + "l2=0.0282 f=-0.52 shape=(1, 9000, 1)
logits [[ 3.9647117 -3.1202042  2.7402318 -5.663316 ]]
Iteration 700 of 1000: loss=0.145 " + "l1=0.116" + "l2=0.0293 f=-0.52 shape=(1, 9000, 1)
logits [[ 3.9166305 -3.1394186  2.7580562 -5.613807 ]]
Iteration 800 of 1000: loss=0.14 " + "l1=0.109" + "l2=0.0308 f=-0.52 shape=(1, 9000, 1)
logits [[ 3.865366  -3.1565266  2.7717388 -5.5623393]]
Iteration 900 of 1000: loss=0.135 " + "l1=0.102" + "l2=0.0328 f=-0.521 shape=(1, 9000, 1)
logits [[ 3.8060439 -3.1759331  2.7846503 -5.4998627]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.1 " + "l1=2.1" + "l2=0 f=-0.483 shape=(1, 9000, 1)
logits [[ 4.5939217 -2.792701   2.496164  -6.2306094]]
Iteration 100 of 1000: loss=0.45 " + "l1=0" + "l2=0.45 f=-0.524 shape=(1, 9000, 1)
logits [[ 3.1454878 -3.4641848  3.1503558 -4.927606 ]]
Iteration 200 of 1000: loss=0.329 " + "l1=0.00184" + "l2=0.327 f=-0.526 shape=(1, 9000, 1)
logits [[ 3.1367884 -3.4552164  3.1349504 -4.919206 ]]
Iteration 300 of 1000: loss=0.258 " + "l1=0" + "l2=0.258 f=-0.526 shape=(1, 9000, 1)
logits [[ 3.1303468 -3.4748554  3.132422  -4.8929157]]
Iteration 400 of 1000: loss=0.209 " + "l1=0" + "l2=0.209 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.1137962 -3.4818108  3.116923  -4.855019 ]]
Iteration 500 of 1000: loss=0.176 " + "l1=0" + "l2=0.176 f=-0.526 shape=(1, 9000, 1)
logits [[ 3.1049764 -3.4850218  3.1078963 -4.8322086]]
Iteration 600 of 1000: loss=0.156 " + "l1=0.00654" + "l2=0.15 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.0991597 -3.4806426  3.0926235 -4.812108 ]]
Iteration 700 of 1000: loss=0.134 " + "l1=0" + "l2=0.134 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.0735252 -3.4804816  3.0854197 -4.7773266]]
Iteration 800 of 1000: loss=0.12 " + "l1=0" + "l2=0.12 f=-0.524 shape=(1, 9000, 1)
logits [[ 3.0571053 -3.4689405  3.0680237 -4.7508855]]
Iteration 900 of 1000: loss=0.11 " + "l1=0" + "l2=0.11 f=-0.524 shape=(1, 9000, 1)
logits [[ 3.0325096 -3.456023   3.0498722 -4.72246  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.15 " + "l1=1.15" + "l2=0 f=-0.483 shape=(1, 9000, 1)
logits [[ 4.5939217 -2.792701   2.496164  -6.2306094]]
Iteration 100 of 1000: loss=0.45 " + "l1=0.04" + "l2=0.41 f=-0.539 shape=(1, 9000, 1)
logits [[ 3.1960213 -3.4665184  3.1233623 -5.0077596]]
Iteration 200 of 1000: loss=0.285 " + "l1=0.00864" + "l2=0.276 f=-0.54 shape=(1, 9000, 1)
logits [[ 3.1565146 -3.4947402  3.1408093 -4.9611225]]
Iteration 300 of 1000: loss=0.215 " + "l1=0.00283" + "l2=0.212 f=-0.539 shape=(1, 9000, 1)
logits [[ 3.1338882 -3.5124507  3.128736  -4.906663 ]]
Iteration 400 of 1000: loss=0.171 " + "l1=0" + "l2=0.171 f=-0.535 shape=(1, 9000, 1)
logits [[ 3.112465  -3.5105124  3.1172986 -4.8581915]]
Iteration 500 of 1000: loss=0.141 " + "l1=0" + "l2=0.141 f=-0.53 shape=(1, 9000, 1)
logits [[ 3.0958102 -3.4935477  3.0996082 -4.820967 ]]
Iteration 600 of 1000: loss=0.122 " + "l1=0.000335" + "l2=0.122 f=-0.529 shape=(1, 9000, 1)
logits [[ 3.0772703 -3.4746737  3.0766616 -4.7956853]]
Iteration 700 of 1000: loss=0.111 " + "l1=0.00312" + "l2=0.108 f=-0.53 shape=(1, 9000, 1)
logits [[ 3.0563033 -3.4548166  3.0506318 -4.772573 ]]
Iteration 800 of 1000: loss=0.101 " + "l1=0" + "l2=0.101 f=-0.534 shape=(1, 9000, 1)
logits [[ 3.0106263 -3.4362984  3.0280557 -4.737543 ]]
Iteration 900 of 1000: loss=0.0966 " + "l1=0" + "l2=0.0966 f=-0.538 shape=(1, 9000, 1)
logits [[ 2.9690015 -3.4239843  3.01125   -4.7084837]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.682 " + "l1=0.682" + "l2=0 f=-0.483 shape=(1, 9000, 1)
logits [[ 4.5939217 -2.792701   2.496164  -6.2306094]]
Iteration 100 of 1000: loss=0.431 " + "l1=0.267" + "l2=0.164 f=-0.534 shape=(1, 9000, 1)
logits [[ 3.7018943 -3.2678509  2.8806417 -5.451502 ]]
Iteration 200 of 1000: loss=0.323 " + "l1=0.118" + "l2=0.205 f=-0.54 shape=(1, 9000, 1)
logits [[ 3.4083004 -3.4230785  3.0464878 -5.191909 ]]
Iteration 300 of 1000: loss=0.241 " + "l1=0.0129" + "l2=0.228 f=-0.546 shape=(1, 9000, 1)
logits [[ 3.173218  -3.5135243  3.1334763 -4.976924 ]]
Iteration 400 of 1000: loss=0.181 " + "l1=0.00166" + "l2=0.179 f=-0.541 shape=(1, 9000, 1)
logits [[ 3.1341379 -3.5255368  3.1290202 -4.900598 ]]
Iteration 500 of 1000: loss=0.146 " + "l1=0" + "l2=0.146 f=-0.534 shape=(1, 9000, 1)
logits [[ 3.1070304 -3.5125954  3.1100442 -4.8424277]]
Iteration 600 of 1000: loss=0.125 " + "l1=0" + "l2=0.125 f=-0.532 shape=(1, 9000, 1)
logits [[ 3.0642266 -3.4916701  3.0844011 -4.786448 ]]
Iteration 700 of 1000: loss=0.108 " + "l1=0" + "l2=0.108 f=-0.532 shape=(1, 9000, 1)
logits [[ 3.0357409 -3.4541469  3.0440104 -4.752719 ]]
Iteration 800 of 1000: loss=0.0989 " + "l1=0" + "l2=0.0989 f=-0.535 shape=(1, 9000, 1)
logits [[ 2.990493  -3.4239523  3.0096073 -4.7166867]]
Iteration 900 of 1000: loss=0.0898 " + "l1=0" + "l2=0.0898 f=-0.538 shape=(1, 9000, 1)
logits [[ 2.9705179 -3.3950658  2.975646  -4.70207  ]]
--- 285.23644614219666 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.108 " + "l1=0.108" + "l2=0 f=-0.483 shape=(1, 9000, 1)
logits [[ 4.5939217 -2.792701   2.496164  -6.2306094]]
Iteration 100 of 1000: loss=0.107 " + "l1=0.107" + "l2=0.000508 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.534858  -2.786869   2.4812028 -6.1573024]]
Iteration 200 of 1000: loss=0.107 " + "l1=0.107" + "l2=0.000529 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.5238037 -2.7857168  2.478199  -6.143157 ]]
Iteration 300 of 1000: loss=0.107 " + "l1=0.106" + "l2=0.000622 f=-0.481 shape=(1, 9000, 1)
logits [[ 4.5104203 -2.7842753  2.4746337 -6.1256824]]
Iteration 400 of 1000: loss=0.107 " + "l1=0.106" + "l2=0.000748 f=-0.481 shape=(1, 9000, 1)
logits [[ 4.496087 -2.782809  2.470957 -6.107101]]
Iteration 500 of 1000: loss=0.107 " + "l1=0.106" + "l2=0.000886 f=-0.48 shape=(1, 9000, 1)
logits [[ 4.4822583 -2.7810175  2.467159  -6.089401 ]]
Iteration 600 of 1000: loss=0.106 " + "l1=0.105" + "l2=0.00102 f=-0.48 shape=(1, 9000, 1)
logits [[ 4.466697  -2.7804682  2.4640443 -6.070193 ]]
Iteration 700 of 1000: loss=0.106 " + "l1=0.105" + "l2=0.00122 f=-0.48 shape=(1, 9000, 1)
logits [[ 4.451879  -2.7800348  2.461103  -6.0524745]]
Iteration 800 of 1000: loss=0.106 " + "l1=0.105" + "l2=0.0014 f=-0.48 shape=(1, 9000, 1)
logits [[ 4.437598  -2.7792056  2.4580061 -6.0352535]]
Iteration 900 of 1000: loss=0.106 " + "l1=0.104" + "l2=0.00147 f=-0.48 shape=(1, 9000, 1)
logits [[ 4.423621  -2.7781684  2.454851  -6.0187545]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.08 " + "l1=1.08" + "l2=0 f=-0.483 shape=(1, 9000, 1)
logits [[ 4.5939217 -2.792701   2.496164  -6.2306094]]
Iteration 100 of 1000: loss=1 " + "l1=0.954" + "l2=0.0479 f=-0.48 shape=(1, 9000, 1)
logits [[ 4.004181  -2.7655454  2.373317  -5.53192  ]]
Iteration 200 of 1000: loss=0.965 " + "l1=0.901" + "l2=0.0635 f=-0.473 shape=(1, 9000, 1)
logits [[ 3.7777324 -2.757944   2.3248134 -5.236385 ]]
Iteration 300 of 1000: loss=0.927 " + "l1=0.85" + "l2=0.0776 f=-0.467 shape=(1, 9000, 1)
logits [[ 3.5487769 -2.7302902  2.2586741 -4.9462523]]
Iteration 400 of 1000: loss=0.885 " + "l1=0.79" + "l2=0.0948 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.2834456 -2.6941779  2.1774468 -4.6183724]]
Iteration 500 of 1000: loss=0.836 " + "l1=0.723" + "l2=0.113 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.9767275 -2.6217208  2.0546157 -4.2534704]]
Iteration 600 of 1000: loss=0.786 " + "l1=0.656" + "l2=0.13 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.672431  -2.5472724  1.9349666 -3.8875616]]
Iteration 700 of 1000: loss=0.74 " + "l1=0.59" + "l2=0.149 f=-0.449 shape=(1, 9000, 1)
logits [[ 2.3784893 -2.4799378  1.829308  -3.5254905]]
Iteration 800 of 1000: loss=0.696 " + "l1=0.526" + "l2=0.17 f=-0.432 shape=(1, 9000, 1)
logits [[ 2.0982413 -2.4076383  1.7476176 -3.1652515]]
Iteration 900 of 1000: loss=0.65 " + "l1=0.458" + "l2=0.192 f=-0.416 shape=(1, 9000, 1)
logits [[ 1.7961541 -2.3636425  1.6885133 -2.786626 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.8 " + "l1=10.8" + "l2=0 f=-0.483 shape=(1, 9000, 1)
logits [[ 4.5939217 -2.792701   2.496164  -6.2306094]]
Iteration 100 of 1000: loss=4.49 " + "l1=1.78" + "l2=2.71 f=-0.335 shape=(1, 9000, 1)
logits [[ 0.5640218 -1.4538938  0.6648924 -1.1166712]]
Iteration 200 of 1000: loss=2.38 " + "l1=0.0471" + "l2=2.33 f=-0.354 shape=(1, 9000, 1)
logits [[-0.15855551 -1.1804135  -0.015124   -0.06220708]]
Iteration 300 of 1000: loss=1.82 " + "l1=0" + "l2=1.82 f=-0.368 shape=(1, 9000, 1)
logits [[-0.2294186  -1.1784551  -0.06294856 -0.00171245]]
Iteration 400 of 1000: loss=1.55 " + "l1=0" + "l2=1.55 f=-0.369 shape=(1, 9000, 1)
logits [[-0.1931436  -1.2206517  -0.03961679 -0.02246965]]
Iteration 500 of 1000: loss=1.36 " + "l1=0.00208" + "l2=1.36 f=-0.362 shape=(1, 9000, 1)
logits [[-0.13781324 -1.2552545  -0.02623304 -0.02831122]]
Iteration 600 of 1000: loss=1.23 " + "l1=0" + "l2=1.23 f=-0.354 shape=(1, 9000, 1)
logits [[-0.08367621 -1.2642065  -0.03971317 -0.02834301]]
Iteration 700 of 1000: loss=1.16 " + "l1=0" + "l2=1.16 f=-0.344 shape=(1, 9000, 1)
logits [[-0.09255223 -1.2649142  -0.04984025  0.03227007]]
Iteration 800 of 1000: loss=1.07 " + "l1=0.016" + "l2=1.06 f=-0.338 shape=(1, 9000, 1)
logits [[-0.04743691 -1.2985865   0.00428531 -0.01173798]]
Iteration 900 of 1000: loss=1 " + "l1=0" + "l2=1 f=-0.326 shape=(1, 9000, 1)
logits [[-0.02931525 -1.2809923  -0.01296055  0.02029381]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.95 " + "l1=5.95" + "l2=0 f=-0.483 shape=(1, 9000, 1)
logits [[ 4.5939217 -2.792701   2.496164  -6.2306094]]
Iteration 100 of 1000: loss=3.52 " + "l1=2.24" + "l2=1.28 f=-0.393 shape=(1, 9000, 1)
logits [[ 1.5366774 -2.1318226  1.5474707 -2.523974 ]]
Iteration 200 of 1000: loss=2.64 " + "l1=1.27" + "l2=1.37 f=-0.339 shape=(1, 9000, 1)
logits [[ 0.85961854 -1.65819     0.8721147  -1.429262  ]]
Iteration 300 of 1000: loss=1.85 " + "l1=0.277" + "l2=1.57 f=-0.336 shape=(1, 9000, 1)
logits [[ 0.00522579 -1.3056518   0.22958224 -0.27444142]]
Iteration 400 of 1000: loss=1.35 " + "l1=0.0295" + "l2=1.32 f=-0.343 shape=(1, 9000, 1)
logits [[-0.07207035 -1.3280513   0.0401876  -0.01348677]]
Iteration 500 of 1000: loss=1.15 " + "l1=0.013" + "l2=1.14 f=-0.339 shape=(1, 9000, 1)
logits [[-0.03300909 -1.322915    0.01229892 -0.01140078]]
Iteration 600 of 1000: loss=1.04 " + "l1=0.0103" + "l2=1.03 f=-0.336 shape=(1, 9000, 1)
logits [[-0.00977722 -1.3479135   0.01526316 -0.0035461 ]]
Iteration 700 of 1000: loss=0.973 " + "l1=0" + "l2=0.973 f=-0.336 shape=(1, 9000, 1)
logits [[-0.01668119 -1.3636037   0.01103971  0.02666692]]
Iteration 800 of 1000: loss=0.916 " + "l1=0" + "l2=0.916 f=-0.34 shape=(1, 9000, 1)
logits [[-0.00165461 -1.3887924   0.0145985   0.01580641]]
Iteration 900 of 1000: loss=0.864 " + "l1=0.00153" + "l2=0.862 f=-0.344 shape=(1, 9000, 1)
logits [[-1.2057839e-02 -1.3687968e+00  3.4878445e-03  7.0468336e-04]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.52 " + "l1=3.52" + "l2=0 f=-0.483 shape=(1, 9000, 1)
logits [[ 4.5939217 -2.792701   2.496164  -6.2306094]]
Iteration 100 of 1000: loss=2.63 " + "l1=2.09" + "l2=0.544 f=-0.428 shape=(1, 9000, 1)
logits [[ 2.5978734 -2.5109172  2.0369911 -3.8343084]]
Iteration 200 of 1000: loss=2.08 " + "l1=1.36" + "l2=0.722 f=-0.407 shape=(1, 9000, 1)
logits [[ 1.5831765 -2.183027   1.5786133 -2.6049414]]
Iteration 300 of 1000: loss=1.71 " + "l1=0.991" + "l2=0.719 f=-0.368 shape=(1, 9000, 1)
logits [[ 1.1349509 -1.8553957  1.1487917 -1.8992614]]
Iteration 400 of 1000: loss=1.41 " + "l1=0.647" + "l2=0.762 f=-0.333 shape=(1, 9000, 1)
logits [[ 0.77718025 -1.6858506   0.7828892  -1.2078058 ]]
Iteration 500 of 1000: loss=1.15 " + "l1=0.351" + "l2=0.794 f=-0.34 shape=(1, 9000, 1)
logits [[ 0.39097443 -1.4872719   0.40968418 -0.6714645 ]]
Iteration 600 of 1000: loss=0.965 " + "l1=0.155" + "l2=0.81 f=-0.328 shape=(1, 9000, 1)
logits [[ 0.17732494 -1.4057821   0.19795373 -0.2797261 ]]
Iteration 700 of 1000: loss=0.846 " + "l1=0.0284" + "l2=0.817 f=-0.316 shape=(1, 9000, 1)
logits [[ 3.4168549e-04 -1.3485711e+00  8.5942656e-02 -1.4457777e-03]]
Iteration 800 of 1000: loss=0.755 " + "l1=0.00503" + "l2=0.75 f=-0.319 shape=(1, 9000, 1)
logits [[-0.05495926 -1.3449255   0.06885264  0.0533893 ]]
Iteration 900 of 1000: loss=0.692 " + "l1=0.00444" + "l2=0.687 f=-0.32 shape=(1, 9000, 1)
logits [[-0.07967623 -1.3384603   0.07635406  0.0626969 ]]
--- 304.10283493995667 seconds ---
Adv result:3
Loading model
Loading ground truth file
Attack diff is running...
Loading record A06545
(1, 4904)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0527 " + "l1=0.0527" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.1496701 -2.1245797  1.063859  -3.8335867]]
Iteration 100 of 1000: loss=0.0517 " + "l1=0.0512" + "l2=0.000529 f=-0.442 shape=(1, 9000, 1)
logits [[ 3.054937  -2.0640793  1.0376998 -3.7985258]]
Iteration 200 of 1000: loss=0.0514 " + "l1=0.0507" + "l2=0.000639 f=-0.444 shape=(1, 9000, 1)
logits [[ 3.0248566 -2.0473635  1.0294809 -3.7825792]]
Iteration 300 of 1000: loss=0.051 " + "l1=0.0502" + "l2=0.000819 f=-0.446 shape=(1, 9000, 1)
logits [[ 2.9928207 -2.0298088  1.0204395 -3.7655725]]
Iteration 400 of 1000: loss=0.0508 " + "l1=0.0498" + "l2=0.00101 f=-0.447 shape=(1, 9000, 1)
logits [[ 2.9632087 -2.0139658  1.012052  -3.7499778]]
Iteration 500 of 1000: loss=0.0505 " + "l1=0.0493" + "l2=0.0012 f=-0.449 shape=(1, 9000, 1)
logits [[ 2.933221  -1.9992498  1.0059984 -3.7355323]]
Iteration 600 of 1000: loss=0.0503 " + "l1=0.0489" + "l2=0.0014 f=-0.45 shape=(1, 9000, 1)
logits [[ 2.9059224 -1.9864506  1.0016618 -3.7224967]]
Iteration 700 of 1000: loss=0.0502 " + "l1=0.0486" + "l2=0.00159 f=-0.452 shape=(1, 9000, 1)
logits [[ 2.88066    -1.9755248   0.99835473 -3.7109134 ]]
Iteration 800 of 1000: loss=0.05 " + "l1=0.0482" + "l2=0.00181 f=-0.453 shape=(1, 9000, 1)
logits [[ 2.8584745 -1.9654087  0.9945037 -3.7012522]]
Iteration 900 of 1000: loss=0.0498 " + "l1=0.0479" + "l2=0.00192 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.837111  -1.9553943  0.9908979 -3.6923935]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.527 " + "l1=0.527" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.1496701 -2.1245797  1.063859  -3.8335867]]
Iteration 100 of 1000: loss=0.393 " + "l1=0.276" + "l2=0.118 f=-0.568 shape=(1, 9000, 1)
logits [[ 1.7523183  -1.0028982   0.51403576 -3.5366278 ]]
Iteration 200 of 1000: loss=0.301 " + "l1=0.1" + "l2=0.201 f=-0.622 shape=(1, 9000, 1)
logits [[ 0.7221883 -0.2794779  0.4025624 -3.3329203]]
Iteration 300 of 1000: loss=0.256 " + "l1=0.0527" + "l2=0.203 f=-0.632 shape=(1, 9000, 1)
logits [[ 0.4271699  -0.09978802  0.39613107 -3.2525983 ]]
Iteration 400 of 1000: loss=0.228 " + "l1=0.0322" + "l2=0.196 f=-0.633 shape=(1, 9000, 1)
logits [[ 0.32820895  0.02524772  0.34687606 -3.231638  ]]
Iteration 500 of 1000: loss=0.199 " + "l1=0.0176" + "l2=0.182 f=-0.629 shape=(1, 9000, 1)
logits [[ 0.28109294  0.11078692  0.2871836  -3.1931732 ]]
Iteration 600 of 1000: loss=0.176 " + "l1=0.00491" + "l2=0.171 f=-0.611 shape=(1, 9000, 1)
logits [[ 0.23820886  0.18907094  0.23314299 -3.1052797 ]]
Iteration 700 of 1000: loss=0.162 " + "l1=0.00283" + "l2=0.159 f=-0.598 shape=(1, 9000, 1)
logits [[ 0.22297889  0.19467285  0.21504335 -3.0233681 ]]
Iteration 800 of 1000: loss=0.15 " + "l1=0" + "l2=0.15 f=-0.585 shape=(1, 9000, 1)
logits [[ 0.1859754   0.20311438  0.19875269 -2.92831   ]]
Iteration 900 of 1000: loss=0.138 " + "l1=0.00032" + "l2=0.137 f=-0.572 shape=(1, 9000, 1)
logits [[ 0.18447137  0.18435837  0.18755515 -2.8430197 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.29 " + "l1=0.29" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.1496701 -2.1245797  1.063859  -3.8335867]]
Iteration 100 of 1000: loss=0.261 " + "l1=0.244" + "l2=0.0163 f=-0.468 shape=(1, 9000, 1)
logits [[ 2.6588016 -1.7856737  0.911259  -3.6572654]]
Iteration 200 of 1000: loss=0.245 " + "l1=0.213" + "l2=0.0318 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.334069   -1.5379373   0.76952505 -3.557028  ]]
Iteration 300 of 1000: loss=0.233 " + "l1=0.19" + "l2=0.0428 f=-0.51 shape=(1, 9000, 1)
logits [[ 2.089674  -1.3687155  0.710156  -3.4727175]]
Iteration 400 of 1000: loss=0.226 " + "l1=0.177" + "l2=0.0486 f=-0.519 shape=(1, 9000, 1)
logits [[ 1.9271352 -1.2887121  0.7013484 -3.417485 ]]
Iteration 500 of 1000: loss=0.218 " + "l1=0.163" + "l2=0.0553 f=-0.528 shape=(1, 9000, 1)
logits [[ 1.7603309 -1.1981294  0.6901429 -3.3651605]]
Iteration 600 of 1000: loss=0.208 " + "l1=0.131" + "l2=0.0771 f=-0.556 shape=(1, 9000, 1)
logits [[ 1.4268942  -0.94851756  0.61696184 -3.3209255 ]]
Iteration 700 of 1000: loss=0.197 " + "l1=0.112" + "l2=0.0856 f=-0.57 shape=(1, 9000, 1)
logits [[ 1.219407   -0.81095797  0.590314   -3.2783227 ]]
Iteration 800 of 1000: loss=0.188 " + "l1=0.0981" + "l2=0.0902 f=-0.572 shape=(1, 9000, 1)
logits [[ 1.0669224  -0.7169659   0.58012056 -3.2181914 ]]
Iteration 900 of 1000: loss=0.181 " + "l1=0.0873" + "l2=0.094 f=-0.568 shape=(1, 9000, 1)
logits [[ 0.942581  -0.6440752  0.5742675 -3.1461234]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.409 " + "l1=0.409" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.1496701 -2.1245797  1.063859  -3.8335867]]
Iteration 100 of 1000: loss=0.343 " + "l1=0.296" + "l2=0.0469 f=-0.499 shape=(1, 9000, 1)
logits [[ 2.3197682 -1.5003533  0.7579395 -3.5748825]]
Iteration 200 of 1000: loss=0.305 " + "l1=0.223" + "l2=0.082 f=-0.549 shape=(1, 9000, 1)
logits [[ 1.7811061  -1.0931094   0.58841664 -3.4734688 ]]
Iteration 300 of 1000: loss=0.265 " + "l1=0.14" + "l2=0.125 f=-0.585 shape=(1, 9000, 1)
logits [[ 1.1586413 -0.6456987  0.4908366 -3.3419435]]
Iteration 400 of 1000: loss=0.24 " + "l1=0.0858" + "l2=0.154 f=-0.609 shape=(1, 9000, 1)
logits [[ 0.73485744 -0.37263855  0.46510994 -3.2641156 ]]
Iteration 500 of 1000: loss=0.219 " + "l1=0.0541" + "l2=0.165 f=-0.613 shape=(1, 9000, 1)
logits [[ 0.4817802  -0.21678342  0.45887128 -3.1741955 ]]
Iteration 600 of 1000: loss=0.203 " + "l1=0.0475" + "l2=0.156 f=-0.6 shape=(1, 9000, 1)
logits [[ 0.4448174  -0.16864693  0.4365879  -3.1122377 ]]
Iteration 700 of 1000: loss=0.191 " + "l1=0.041" + "l2=0.15 f=-0.584 shape=(1, 9000, 1)
logits [[ 0.40924025 -0.11926987  0.40922627 -3.0347478 ]]
Iteration 800 of 1000: loss=0.181 " + "l1=0.0349" + "l2=0.146 f=-0.572 shape=(1, 9000, 1)
logits [[ 0.37695104 -0.07314241  0.3693585  -2.96278   ]]
Iteration 900 of 1000: loss=0.169 " + "l1=0.024" + "l2=0.144 f=-0.563 shape=(1, 9000, 1)
logits [[ 0.3106375   0.00590067  0.31616706 -2.883707  ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.468 " + "l1=0.468" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.1496701 -2.1245797  1.063859  -3.8335867]]
Iteration 100 of 1000: loss=0.373 " + "l1=0.299" + "l2=0.0746 f=-0.53 shape=(1, 9000, 1)
logits [[ 2.0833623  -1.2830433   0.63659734 -3.55644   ]]
Iteration 200 of 1000: loss=0.307 " + "l1=0.169" + "l2=0.138 f=-0.585 shape=(1, 9000, 1)
logits [[ 1.2397107  -0.6612729   0.47132006 -3.391418  ]]
Iteration 300 of 1000: loss=0.261 " + "l1=0.074" + "l2=0.187 f=-0.623 shape=(1, 9000, 1)
logits [[ 0.59029424 -0.24350919  0.4285138  -3.2687516 ]]
Iteration 400 of 1000: loss=0.233 " + "l1=0.0493" + "l2=0.184 f=-0.625 shape=(1, 9000, 1)
logits [[ 0.42997622 -0.12590879  0.4150562  -3.220058  ]]
Iteration 500 of 1000: loss=0.211 " + "l1=0.0374" + "l2=0.173 f=-0.618 shape=(1, 9000, 1)
logits [[ 0.3795655  -0.04226631  0.37003356 -3.1806128 ]]
Iteration 600 of 1000: loss=0.187 " + "l1=0.0248" + "l2=0.162 f=-0.607 shape=(1, 9000, 1)
logits [[ 0.31131378  0.04536706  0.32461244 -3.1098936 ]]
Iteration 700 of 1000: loss=0.169 " + "l1=0.0139" + "l2=0.155 f=-0.595 shape=(1, 9000, 1)
logits [[ 0.27071157  0.11708886  0.27375364 -3.0401297 ]]
Iteration 800 of 1000: loss=0.156 " + "l1=0.00123" + "l2=0.154 f=-0.587 shape=(1, 9000, 1)
logits [[ 0.20388252  0.19466153  0.20855255 -2.9558554 ]]
Iteration 900 of 1000: loss=0.142 " + "l1=0" + "l2=0.142 f=-0.574 shape=(1, 9000, 1)
logits [[ 0.18524785  0.1871154   0.1862347  -2.8537366 ]]
--- 286.77522897720337 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0209 " + "l1=0.0209" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.1496701 -2.1245797  1.063859  -3.8335867]]
Iteration 100 of 1000: loss=0.0202 " + "l1=0.0199" + "l2=0.000329 f=-0.442 shape=(1, 9000, 1)
logits [[ 3.0777276 -2.1272757  1.0897387 -3.8083582]]
Iteration 200 of 1000: loss=0.02 " + "l1=0.0196" + "l2=0.000395 f=-0.444 shape=(1, 9000, 1)
logits [[ 3.0545592 -2.1271446  1.0965933 -3.798052 ]]
Iteration 300 of 1000: loss=0.0197 " + "l1=0.0193" + "l2=0.000488 f=-0.445 shape=(1, 9000, 1)
logits [[ 3.0302424 -2.127089   1.104392  -3.7866404]]
Iteration 400 of 1000: loss=0.0195 " + "l1=0.0189" + "l2=0.000595 f=-0.446 shape=(1, 9000, 1)
logits [[ 3.005485  -2.1267781  1.1129724 -3.7750072]]
Iteration 500 of 1000: loss=0.0193 " + "l1=0.0186" + "l2=0.000728 f=-0.447 shape=(1, 9000, 1)
logits [[ 2.9806151 -2.1263509  1.1223671 -3.7631667]]
Iteration 600 of 1000: loss=0.0191 " + "l1=0.0182" + "l2=0.000855 f=-0.447 shape=(1, 9000, 1)
logits [[ 2.9568796 -2.1259632  1.1320177 -3.7520874]]
Iteration 700 of 1000: loss=0.0189 " + "l1=0.018" + "l2=0.000977 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.9368784 -2.1258814  1.1415336 -3.743241 ]]
Iteration 800 of 1000: loss=0.0187 " + "l1=0.0177" + "l2=0.00107 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.9179323 -2.1255183  1.1509641 -3.7351043]]
Iteration 900 of 1000: loss=0.0186 " + "l1=0.0174" + "l2=0.00117 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.9001544 -2.1248724  1.1599101 -3.7271795]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.209 " + "l1=0.209" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.1496701 -2.1245797  1.063859  -3.8335867]]
Iteration 100 of 1000: loss=0.153 " + "l1=0.129" + "l2=0.0244 f=-0.478 shape=(1, 9000, 1)
logits [[ 2.5540435 -2.1289399  1.2645012 -3.600027 ]]
Iteration 200 of 1000: loss=0.127 " + "l1=0.0928" + "l2=0.0343 f=-0.482 shape=(1, 9000, 1)
logits [[ 2.280359  -2.0968206  1.3520799 -3.4632826]]
Iteration 300 of 1000: loss=0.105 " + "l1=0.0669" + "l2=0.0382 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.0905843 -2.0706842  1.4218893 -3.3666732]]
Iteration 400 of 1000: loss=0.0877 " + "l1=0.0463" + "l2=0.0413 f=-0.476 shape=(1, 9000, 1)
logits [[ 1.9428524 -2.0559185  1.4796094 -3.2692904]]
Iteration 500 of 1000: loss=0.0719 " + "l1=0.0259" + "l2=0.0459 f=-0.469 shape=(1, 9000, 1)
logits [[ 1.8212045 -2.0876076  1.5621    -3.1700666]]
Iteration 600 of 1000: loss=0.0552 " + "l1=0.00434" + "l2=0.0508 f=-0.454 shape=(1, 9000, 1)
logits [[ 1.703961  -2.1271887  1.6605852 -3.0551667]]
Iteration 700 of 1000: loss=0.0425 " + "l1=0" + "l2=0.0425 f=-0.44 shape=(1, 9000, 1)
logits [[ 1.6828921 -2.1451964  1.6829637 -2.9797363]]
Iteration 800 of 1000: loss=0.0356 " + "l1=0.000471" + "l2=0.0351 f=-0.43 shape=(1, 9000, 1)
logits [[ 1.6794555 -2.1549907  1.6747482 -2.9196079]]
Iteration 900 of 1000: loss=0.0319 " + "l1=0" + "l2=0.0319 f=-0.427 shape=(1, 9000, 1)
logits [[ 1.6564258 -2.151741   1.6609545 -2.8723397]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.115 " + "l1=0.115" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.1496701 -2.1245797  1.063859  -3.8335867]]
Iteration 100 of 1000: loss=0.0969 " + "l1=0.0891" + "l2=0.00787 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.804711  -2.131471   1.1851996 -3.7050185]]
Iteration 200 of 1000: loss=0.089 " + "l1=0.0784" + "l2=0.0106 f=-0.468 shape=(1, 9000, 1)
logits [[ 2.6617596 -2.1297157  1.2369738 -3.6406915]]
Iteration 300 of 1000: loss=0.0818 " + "l1=0.0687" + "l2=0.0131 f=-0.471 shape=(1, 9000, 1)
logits [[ 2.5352228 -2.1264539  1.2857068 -3.5772786]]
Iteration 400 of 1000: loss=0.0743 " + "l1=0.0592" + "l2=0.0151 f=-0.471 shape=(1, 9000, 1)
logits [[ 2.410594  -2.1157799  1.3351271 -3.5126033]]
Iteration 500 of 1000: loss=0.0673 " + "l1=0.0503" + "l2=0.017 f=-0.468 shape=(1, 9000, 1)
logits [[ 2.2952585 -2.103267   1.3814232 -3.4467962]]
Iteration 600 of 1000: loss=0.062 " + "l1=0.0446" + "l2=0.0175 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.2240279 -2.0943468  1.4139849 -3.3945343]]
Iteration 700 of 1000: loss=0.0576 " + "l1=0.0391" + "l2=0.0185 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.16007   -2.0949955  1.4496672 -3.3353894]]
Iteration 800 of 1000: loss=0.0534 " + "l1=0.0336" + "l2=0.0198 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.0983691 -2.1031857  1.4872434 -3.2738059]]
Iteration 900 of 1000: loss=0.0484 " + "l1=0.0273" + "l2=0.0211 f=-0.438 shape=(1, 9000, 1)
logits [[ 2.0342605 -2.1259181  1.5374466 -3.1969264]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.162 " + "l1=0.162" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.1496701 -2.1245797  1.063859  -3.8335867]]
Iteration 100 of 1000: loss=0.128 " + "l1=0.113" + "l2=0.015 f=-0.47 shape=(1, 9000, 1)
logits [[ 2.6810842 -2.1316607  1.2277174 -3.6575143]]
Iteration 200 of 1000: loss=0.112 " + "l1=0.0903" + "l2=0.0216 f=-0.477 shape=(1, 9000, 1)
logits [[ 2.4652457 -2.121717   1.3001686 -3.551212 ]]
Iteration 300 of 1000: loss=0.0971 " + "l1=0.0721" + "l2=0.025 f=-0.477 shape=(1, 9000, 1)
logits [[ 2.2959182 -2.1059759  1.3657138 -3.4656231]]
Iteration 400 of 1000: loss=0.0845 " + "l1=0.0579" + "l2=0.0265 f=-0.474 shape=(1, 9000, 1)
logits [[ 2.166985  -2.090515   1.4195648 -3.3925033]]
Iteration 500 of 1000: loss=0.0746 " + "l1=0.0459" + "l2=0.0287 f=-0.466 shape=(1, 9000, 1)
logits [[ 2.0597262 -2.0824623  1.4675158 -3.3106668]]
Iteration 600 of 1000: loss=0.0656 " + "l1=0.0345" + "l2=0.0311 f=-0.458 shape=(1, 9000, 1)
logits [[ 1.9682323 -2.0973928  1.523702  -3.2256045]]
Iteration 700 of 1000: loss=0.0552 " + "l1=0.0203" + "l2=0.0348 f=-0.447 shape=(1, 9000, 1)
logits [[ 1.8667979 -2.1321714  1.6044163 -3.1257808]]
Iteration 800 of 1000: loss=0.0453 " + "l1=0.0081" + "l2=0.0371 f=-0.436 shape=(1, 9000, 1)
logits [[ 1.7655553 -2.1480277  1.6609777 -3.0218124]]
Iteration 900 of 1000: loss=0.0357 " + "l1=0.000518" + "l2=0.0352 f=-0.428 shape=(1, 9000, 1)
logits [[ 1.6861036 -2.155678   1.6794231 -2.9214487]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.138 " + "l1=0.138" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.1496701 -2.1245797  1.063859  -3.8335867]]
Iteration 100 of 1000: loss=0.113 " + "l1=0.102" + "l2=0.0112 f=-0.466 shape=(1, 9000, 1)
logits [[ 2.7400656 -2.1301618  1.2068337 -3.6790836]]
Iteration 200 of 1000: loss=0.101 " + "l1=0.0862" + "l2=0.0153 f=-0.472 shape=(1, 9000, 1)
logits [[ 2.569315  -2.1286564  1.268798  -3.596276 ]]
Iteration 300 of 1000: loss=0.0905 " + "l1=0.0716" + "l2=0.0189 f=-0.473 shape=(1, 9000, 1)
logits [[ 2.4099202 -2.1184747  1.329878  -3.5152235]]
Iteration 400 of 1000: loss=0.0797 " + "l1=0.0586" + "l2=0.0211 f=-0.472 shape=(1, 9000, 1)
logits [[ 2.2696629 -2.1029341  1.3857831 -3.4389594]]
Iteration 500 of 1000: loss=0.0716 " + "l1=0.0495" + "l2=0.0221 f=-0.466 shape=(1, 9000, 1)
logits [[ 2.175129  -2.0912974  1.4277296 -3.3750215]]
Iteration 600 of 1000: loss=0.0647 " + "l1=0.0407" + "l2=0.024 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.0885427 -2.091466   1.4734589 -3.3019836]]
Iteration 700 of 1000: loss=0.0581 " + "l1=0.032" + "l2=0.0261 f=-0.449 shape=(1, 9000, 1)
logits [[ 2.0089126 -2.1089408  1.5261931 -3.2215166]]
Iteration 800 of 1000: loss=0.0504 " + "l1=0.0223" + "l2=0.0281 f=-0.437 shape=(1, 9000, 1)
logits [[ 1.9224932 -2.1294525  1.5854045 -3.1271307]]
Iteration 900 of 1000: loss=0.0436 " + "l1=0.0137" + "l2=0.03 f=-0.429 shape=(1, 9000, 1)
logits [[ 1.8353814 -2.139968   1.6292664 -3.0400958]]
--- 284.9940712451935 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0698 " + "l1=0.0698" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.1496701 -2.1245797  1.063859  -3.8335867]]
Iteration 100 of 1000: loss=0.0686 " + "l1=0.068" + "l2=0.000529 f=-0.437 shape=(1, 9000, 1)
logits [[ 3.0466003 -2.0941556  1.0551183 -3.7570305]]
Iteration 200 of 1000: loss=0.0681 " + "l1=0.0674" + "l2=0.000695 f=-0.437 shape=(1, 9000, 1)
logits [[ 3.0089145 -2.0852373  1.0544397 -3.7265427]]
Iteration 300 of 1000: loss=0.0676 " + "l1=0.0666" + "l2=0.000956 f=-0.437 shape=(1, 9000, 1)
logits [[ 2.9695625 -2.0754406  1.0536628 -3.6938725]]
Iteration 400 of 1000: loss=0.0672 " + "l1=0.066" + "l2=0.00118 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.9340646 -2.0664244  1.053275  -3.6639478]]
Iteration 500 of 1000: loss=0.0668 " + "l1=0.0654" + "l2=0.00143 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.902886  -2.0592484  1.0538146 -3.638258 ]]
Iteration 600 of 1000: loss=0.0666 " + "l1=0.0649" + "l2=0.0017 f=-0.434 shape=(1, 9000, 1)
logits [[ 2.87296   -2.052331   1.0549395 -3.6133602]]
Iteration 700 of 1000: loss=0.0662 " + "l1=0.0643" + "l2=0.00189 f=-0.434 shape=(1, 9000, 1)
logits [[ 2.8441174 -2.046228   1.0569661 -3.5895574]]
Iteration 800 of 1000: loss=0.066 " + "l1=0.0639" + "l2=0.00212 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.8185356 -2.0409172  1.0595406 -3.5678337]]
Iteration 900 of 1000: loss=0.0658 " + "l1=0.0634" + "l2=0.00242 f=-0.431 shape=(1, 9000, 1)
logits [[ 2.7948277 -2.035347   1.0623015 -3.5464637]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.698 " + "l1=0.698" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.1496701 -2.1245797  1.063859  -3.8335867]]
Iteration 100 of 1000: loss=0.589 " + "l1=0.535" + "l2=0.054 f=-0.429 shape=(1, 9000, 1)
logits [[ 2.2266219 -1.8099966  0.989913  -3.1217742]]
Iteration 200 of 1000: loss=0.53 " + "l1=0.446" + "l2=0.0839 f=-0.398 shape=(1, 9000, 1)
logits [[ 1.7870649  -1.6300706   0.92839664 -2.677518  ]]
Iteration 300 of 1000: loss=0.479 " + "l1=0.368" + "l2=0.111 f=-0.364 shape=(1, 9000, 1)
logits [[ 1.4320318 -1.5339972  0.8971481 -2.2510955]]
Iteration 400 of 1000: loss=0.43 " + "l1=0.298" + "l2=0.132 f=-0.329 shape=(1, 9000, 1)
logits [[ 1.131657  -1.4843663  0.888636  -1.8506542]]
Iteration 500 of 1000: loss=0.368 " + "l1=0.221" + "l2=0.147 f=-0.313 shape=(1, 9000, 1)
logits [[ 0.8128145 -1.4692835  0.8067857 -1.400912 ]]
Iteration 600 of 1000: loss=0.328 " + "l1=0.175" + "l2=0.153 f=-0.28 shape=(1, 9000, 1)
logits [[ 0.6865174  -1.4354486   0.68836695 -1.0601637 ]]
Iteration 700 of 1000: loss=0.281 " + "l1=0.108" + "l2=0.173 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.4957808  -1.3282783   0.49128076 -0.5807545 ]]
Iteration 800 of 1000: loss=0.225 " + "l1=0.0229" + "l2=0.202 f=-0.178 shape=(1, 9000, 1)
logits [[ 2.1973072e-01 -1.1642565e+00  2.3025395e-01  7.9106539e-04]]
Iteration 900 of 1000: loss=0.191 " + "l1=0.00205" + "l2=0.189 f=-0.154 shape=(1, 9000, 1)
logits [[ 0.19360094 -1.1667881   0.18245585  0.1730802 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.384 " + "l1=0.384" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.1496701 -2.1245797  1.063859  -3.8335867]]
Iteration 100 of 1000: loss=0.351 " + "l1=0.337" + "l2=0.0138 f=-0.437 shape=(1, 9000, 1)
logits [[ 2.6620352 -1.9857235  1.0402724 -3.4648068]]
Iteration 200 of 1000: loss=0.333 " + "l1=0.311" + "l2=0.0222 f=-0.428 shape=(1, 9000, 1)
logits [[ 2.4169512 -1.9149828  1.0245453 -3.23838  ]]
Iteration 300 of 1000: loss=0.318 " + "l1=0.289" + "l2=0.0292 f=-0.415 shape=(1, 9000, 1)
logits [[ 2.2227256 -1.8575972  1.010984  -3.0364413]]
Iteration 400 of 1000: loss=0.304 " + "l1=0.27" + "l2=0.0342 f=-0.398 shape=(1, 9000, 1)
logits [[ 2.0565953 -1.814936   1.0129908 -2.8461807]]
Iteration 500 of 1000: loss=0.29 " + "l1=0.251" + "l2=0.0395 f=-0.384 shape=(1, 9000, 1)
logits [[ 1.8994623 -1.7937294  1.0210047 -2.6628208]]
Iteration 600 of 1000: loss=0.277 " + "l1=0.231" + "l2=0.0457 f=-0.371 shape=(1, 9000, 1)
logits [[ 1.7369337 -1.7732426  1.0219247 -2.4690328]]
Iteration 700 of 1000: loss=0.264 " + "l1=0.214" + "l2=0.0503 f=-0.359 shape=(1, 9000, 1)
logits [[ 1.5941907 -1.7629113  1.0282781 -2.295617 ]]
Iteration 800 of 1000: loss=0.25 " + "l1=0.193" + "l2=0.0572 f=-0.348 shape=(1, 9000, 1)
logits [[ 1.4179785 -1.7501185  1.0335063 -2.094364 ]]
Iteration 900 of 1000: loss=0.235 " + "l1=0.171" + "l2=0.0633 f=-0.343 shape=(1, 9000, 1)
logits [[ 1.2220159 -1.7432817  1.0438508 -1.8935932]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.541 " + "l1=0.541" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.1496701 -2.1245797  1.063859  -3.8335867]]
Iteration 100 of 1000: loss=0.476 " + "l1=0.446" + "l2=0.0297 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.455439  -1.911358   1.0199548 -3.3048427]]
Iteration 200 of 1000: loss=0.44 " + "l1=0.395" + "l2=0.0449 f=-0.417 shape=(1, 9000, 1)
logits [[ 2.1224585  -1.8037227   0.99195695 -2.9778702 ]]
Iteration 300 of 1000: loss=0.411 " + "l1=0.352" + "l2=0.0593 f=-0.389 shape=(1, 9000, 1)
logits [[ 1.8674089  -1.7185111   0.97192717 -2.67523   ]]
Iteration 400 of 1000: loss=0.381 " + "l1=0.308" + "l2=0.0726 f=-0.362 shape=(1, 9000, 1)
logits [[ 1.6152669 -1.6644009  0.9626454 -2.3596644]]
Iteration 500 of 1000: loss=0.352 " + "l1=0.269" + "l2=0.0829 f=-0.34 shape=(1, 9000, 1)
logits [[ 1.3941818 -1.6512825  0.9701482 -2.0722032]]
Iteration 600 of 1000: loss=0.319 " + "l1=0.22" + "l2=0.0992 f=-0.321 shape=(1, 9000, 1)
logits [[ 1.105425  -1.6325285  0.9686507 -1.7271607]]
Iteration 700 of 1000: loss=0.288 " + "l1=0.182" + "l2=0.106 f=-0.31 shape=(1, 9000, 1)
logits [[ 0.9074701  -1.6184596   0.90952754 -1.4404666 ]]
Iteration 800 of 1000: loss=0.265 " + "l1=0.16" + "l2=0.104 f=-0.297 shape=(1, 9000, 1)
logits [[ 0.8245265 -1.5932375  0.8243098 -1.2440794]]
Iteration 900 of 1000: loss=0.24 " + "l1=0.129" + "l2=0.111 f=-0.276 shape=(1, 9000, 1)
logits [[ 0.6828882  -1.4904964   0.68450487 -0.98166996]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.62 " + "l1=0.62" + "l2=0 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.1496701 -2.1245797  1.063859  -3.8335867]]
Iteration 100 of 1000: loss=0.534 " + "l1=0.493" + "l2=0.041 f=-0.434 shape=(1, 9000, 1)
logits [[ 2.338827  -1.8667402  1.0092432 -3.2178357]]
Iteration 200 of 1000: loss=0.488 " + "l1=0.427" + "l2=0.0611 f=-0.406 shape=(1, 9000, 1)
logits [[ 1.975139  -1.7314848  0.9672718 -2.835762 ]]
Iteration 300 of 1000: loss=0.449 " + "l1=0.364" + "l2=0.0846 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.6472735  -1.625839    0.93792284 -2.458789  ]]
Iteration 400 of 1000: loss=0.411 " + "l1=0.315" + "l2=0.096 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.4110585  -1.6024514   0.93196815 -2.13864   ]]
Iteration 500 of 1000: loss=0.369 " + "l1=0.251" + "l2=0.118 f=-0.321 shape=(1, 9000, 1)
logits [[ 1.0934638  -1.5779102   0.93335265 -1.7342682 ]]
Iteration 600 of 1000: loss=0.327 " + "l1=0.199" + "l2=0.128 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.8674475  -1.577083    0.86970884 -1.3749658 ]]
Iteration 700 of 1000: loss=0.298 " + "l1=0.171" + "l2=0.127 f=-0.275 shape=(1, 9000, 1)
logits [[ 0.7991757 -1.5670719  0.7931453 -1.1270621]]
Iteration 800 of 1000: loss=0.267 " + "l1=0.132" + "l2=0.135 f=-0.239 shape=(1, 9000, 1)
logits [[ 0.68387806 -1.523835    0.68438894 -0.80042005]]
Iteration 900 of 1000: loss=0.235 " + "l1=0.0871" + "l2=0.148 f=-0.212 shape=(1, 9000, 1)
logits [[ 0.5254211 -1.4456716  0.5276824 -0.4536719]]
--- 287.4209928512573 seconds ---
Adv result:3
Loading record A06551
(1, 4736)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0362 " + "l1=0.0362" + "l2=0 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.597105   -1.0269619   0.33091697 -3.736127  ]]
Iteration 100 of 1000: loss=0.0346 " + "l1=0.0337" + "l2=0.000857 f=-0.466 shape=(1, 9000, 1)
logits [[ 2.4645624  -0.90950674  0.28654432 -3.7051134 ]]
Iteration 200 of 1000: loss=0.034 " + "l1=0.0329" + "l2=0.00108 f=-0.469 shape=(1, 9000, 1)
logits [[ 2.4215827  -0.86965173  0.2690019  -3.695214  ]]
Iteration 300 of 1000: loss=0.0335 " + "l1=0.0321" + "l2=0.00142 f=-0.471 shape=(1, 9000, 1)
logits [[ 2.3766363  -0.82868975  0.25123098 -3.6848986 ]]
Iteration 400 of 1000: loss=0.0331 " + "l1=0.0312" + "l2=0.00182 f=-0.474 shape=(1, 9000, 1)
logits [[ 2.3336687  -0.7897411   0.23389933 -3.6733558 ]]
Iteration 500 of 1000: loss=0.0327 " + "l1=0.0305" + "l2=0.00224 f=-0.476 shape=(1, 9000, 1)
logits [[ 2.2941253  -0.7549697   0.21821862 -3.660908  ]]
Iteration 600 of 1000: loss=0.0325 " + "l1=0.03" + "l2=0.00249 f=-0.477 shape=(1, 9000, 1)
logits [[ 2.2669876  -0.7308224   0.20657921 -3.649159  ]]
Iteration 700 of 1000: loss=0.0322 " + "l1=0.0295" + "l2=0.00275 f=-0.477 shape=(1, 9000, 1)
logits [[ 2.2400305  -0.7077969   0.19517572 -3.6370795 ]]
Iteration 800 of 1000: loss=0.032 " + "l1=0.029" + "l2=0.00301 f=-0.478 shape=(1, 9000, 1)
logits [[ 2.2150872  -0.6866969   0.18478996 -3.6251256 ]]
Iteration 900 of 1000: loss=0.0318 " + "l1=0.0286" + "l2=0.00323 f=-0.478 shape=(1, 9000, 1)
logits [[ 2.1944983  -0.6672437   0.17521897 -3.613602  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.362 " + "l1=0.362" + "l2=0 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.597105   -1.0269619   0.33091697 -3.736127  ]]
Iteration 100 of 1000: loss=0.22 " + "l1=0.153" + "l2=0.0671 f=-0.527 shape=(1, 9000, 1)
logits [[ 1.4420695  -0.08540546 -0.00858651 -3.4574983 ]]
Iteration 200 of 1000: loss=0.169 " + "l1=0.0835" + "l2=0.0859 f=-0.549 shape=(1, 9000, 1)
logits [[ 1.0486764   0.21352011 -0.15087388 -3.306316  ]]
Iteration 300 of 1000: loss=0.132 " + "l1=0.0325" + "l2=0.0995 f=-0.557 shape=(1, 9000, 1)
logits [[ 0.7632248   0.43772575 -0.26888585 -3.161787  ]]
Iteration 400 of 1000: loss=0.105 " + "l1=0.000344" + "l2=0.105 f=-0.561 shape=(1, 9000, 1)
logits [[ 0.58310217  0.5796661  -0.35584486 -3.0501475 ]]
Iteration 500 of 1000: loss=0.0932 " + "l1=0.00107" + "l2=0.0921 f=-0.551 shape=(1, 9000, 1)
logits [[ 0.59007514  0.57938457 -0.3843288  -2.9882033 ]]
Iteration 600 of 1000: loss=0.0863 " + "l1=0.00254" + "l2=0.0838 f=-0.544 shape=(1, 9000, 1)
logits [[ 0.5981698   0.5727237  -0.39943987 -2.9481921 ]]
Iteration 700 of 1000: loss=0.0798 " + "l1=0.00157" + "l2=0.0783 f=-0.54 shape=(1, 9000, 1)
logits [[ 0.5864921  0.5707565 -0.4164826 -2.9025156]]
Iteration 800 of 1000: loss=0.0736 " + "l1=0.00138" + "l2=0.0722 f=-0.537 shape=(1, 9000, 1)
logits [[ 0.5777253   0.56397086 -0.4317092  -2.8571463 ]]
Iteration 900 of 1000: loss=0.0675 " + "l1=0.000396" + "l2=0.0671 f=-0.534 shape=(1, 9000, 1)
logits [[ 0.56443936  0.560476   -0.44530898 -2.81492   ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.199 " + "l1=0.199" + "l2=0 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.597105   -1.0269619   0.33091697 -3.736127  ]]
Iteration 100 of 1000: loss=0.152 " + "l1=0.13" + "l2=0.0223 f=-0.499 shape=(1, 9000, 1)
logits [[ 1.9151242  -0.44661245  0.11731409 -3.5806832 ]]
Iteration 200 of 1000: loss=0.135 " + "l1=0.104" + "l2=0.0307 f=-0.512 shape=(1, 9000, 1)
logits [[ 1.6570333  -0.23112732  0.02738686 -3.503133  ]]
Iteration 300 of 1000: loss=0.122 " + "l1=0.0857" + "l2=0.0363 f=-0.517 shape=(1, 9000, 1)
logits [[ 1.4767022  -0.08128663 -0.04481445 -3.419744  ]]
Iteration 400 of 1000: loss=0.112 " + "l1=0.0718" + "l2=0.0401 f=-0.517 shape=(1, 9000, 1)
logits [[ 1.3357905   0.02976729 -0.10731276 -3.3246455 ]]
Iteration 500 of 1000: loss=0.104 " + "l1=0.0593" + "l2=0.0444 f=-0.516 shape=(1, 9000, 1)
logits [[ 1.2079625   0.13006268 -0.16660142 -3.2351336 ]]
Iteration 600 of 1000: loss=0.0968 " + "l1=0.0481" + "l2=0.0487 f=-0.516 shape=(1, 9000, 1)
logits [[ 1.0941114   0.22042951 -0.2213512  -3.1559312 ]]
Iteration 700 of 1000: loss=0.0906 " + "l1=0.0385" + "l2=0.0521 f=-0.515 shape=(1, 9000, 1)
logits [[ 0.9971515   0.29709798 -0.26723844 -3.086814  ]]
Iteration 800 of 1000: loss=0.0857 " + "l1=0.032" + "l2=0.0537 f=-0.514 shape=(1, 9000, 1)
logits [[ 0.9279604  0.3462442 -0.3019006 -3.0279298]]
Iteration 900 of 1000: loss=0.081 " + "l1=0.0266" + "l2=0.0545 f=-0.513 shape=(1, 9000, 1)
logits [[ 0.86805296  0.3851667  -0.33083805 -2.9756563 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.281 " + "l1=0.281" + "l2=0 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.597105   -1.0269619   0.33091697 -3.736127  ]]
Iteration 100 of 1000: loss=0.192 " + "l1=0.149" + "l2=0.0427 f=-0.514 shape=(1, 9000, 1)
logits [[ 1.6666507  -0.25562844  0.05337059 -3.5198739 ]]
Iteration 200 of 1000: loss=0.159 " + "l1=0.104" + "l2=0.0553 f=-0.53 shape=(1, 9000, 1)
logits [[ 1.3446232   0.00584035 -0.06687565 -3.405572  ]]
Iteration 300 of 1000: loss=0.136 " + "l1=0.0699" + "l2=0.0662 f=-0.537 shape=(1, 9000, 1)
logits [[ 1.0956621   0.19400673 -0.16241056 -3.2770247 ]]
Iteration 400 of 1000: loss=0.117 " + "l1=0.0419" + "l2=0.075 f=-0.54 shape=(1, 9000, 1)
logits [[ 0.8934633   0.35231352 -0.25047356 -3.1556683 ]]
Iteration 500 of 1000: loss=0.103 " + "l1=0.0207" + "l2=0.0825 f=-0.543 shape=(1, 9000, 1)
logits [[ 0.73959196  0.47235322 -0.3165636  -3.0662823 ]]
Iteration 600 of 1000: loss=0.0915 " + "l1=0.00181" + "l2=0.0897 f=-0.546 shape=(1, 9000, 1)
logits [[ 0.59768045  0.57433987 -0.381166   -2.9744518 ]]
Iteration 700 of 1000: loss=0.0833 " + "l1=0.0001" + "l2=0.0832 f=-0.542 shape=(1, 9000, 1)
logits [[ 0.5826403   0.5813497  -0.40366182 -2.9274933 ]]
Iteration 800 of 1000: loss=0.0768 " + "l1=0.000346" + "l2=0.0765 f=-0.538 shape=(1, 9000, 1)
logits [[ 0.5764055   0.571947   -0.41889468 -2.8810384 ]]
Iteration 900 of 1000: loss=0.0714 " + "l1=0" + "l2=0.0714 f=-0.535 shape=(1, 9000, 1)
logits [[ 0.5547308   0.57128525 -0.43649018 -2.8291075 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.24 " + "l1=0.24" + "l2=0 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.597105   -1.0269619   0.33091697 -3.736127  ]]
Iteration 100 of 1000: loss=0.174 " + "l1=0.142" + "l2=0.0314 f=-0.506 shape=(1, 9000, 1)
logits [[ 1.7937876  -0.35276383  0.08674113 -3.552281  ]]
Iteration 200 of 1000: loss=0.148 " + "l1=0.106" + "l2=0.0427 f=-0.521 shape=(1, 9000, 1)
logits [[ 1.4911135  -0.10502542 -0.02293507 -3.447745  ]]
Iteration 300 of 1000: loss=0.131 " + "l1=0.0815" + "l2=0.0499 f=-0.526 shape=(1, 9000, 1)
logits [[ 1.2858002   0.05486137 -0.10375338 -3.3418663 ]]
Iteration 400 of 1000: loss=0.117 " + "l1=0.06" + "l2=0.0573 f=-0.529 shape=(1, 9000, 1)
logits [[ 1.1035349   0.19735838 -0.18196413 -3.2348945 ]]
Iteration 500 of 1000: loss=0.106 " + "l1=0.042" + "l2=0.0637 f=-0.529 shape=(1, 9000, 1)
logits [[ 0.9506558   0.317337   -0.25035423 -3.1356115 ]]
Iteration 600 of 1000: loss=0.097 " + "l1=0.029" + "l2=0.068 f=-0.529 shape=(1, 9000, 1)
logits [[ 0.84066015  0.40361956 -0.30216107 -3.056584  ]]
Iteration 700 of 1000: loss=0.0895 " + "l1=0.0172" + "l2=0.0723 f=-0.531 shape=(1, 9000, 1)
logits [[ 0.7357175   0.47560826 -0.35028398 -2.9861948 ]]
Iteration 800 of 1000: loss=0.0827 " + "l1=0.00666" + "l2=0.0761 f=-0.534 shape=(1, 9000, 1)
logits [[ 0.6406691   0.54016584 -0.3909537  -2.9274447 ]]
Iteration 900 of 1000: loss=0.0759 " + "l1=0" + "l2=0.0759 f=-0.536 shape=(1, 9000, 1)
logits [[ 0.5692331  0.5761227 -0.4224449 -2.8656065]]
--- 285.90877509117126 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0227 " + "l1=0.0227" + "l2=0 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.597105   -1.0269619   0.33091697 -3.736127  ]]
Iteration 100 of 1000: loss=0.0224 " + "l1=0.0221" + "l2=0.000211 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.5399618  -0.9937281   0.32522306 -3.7208393 ]]
Iteration 200 of 1000: loss=0.0223 " + "l1=0.022" + "l2=0.000218 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.5270789  -0.9844972   0.32227674 -3.7166727 ]]
Iteration 300 of 1000: loss=0.0222 " + "l1=0.0219" + "l2=0.000276 f=-0.464 shape=(1, 9000, 1)
logits [[ 2.5112267  -0.9735964   0.31901118 -3.7116086 ]]
Iteration 400 of 1000: loss=0.0222 " + "l1=0.0218" + "l2=0.000349 f=-0.464 shape=(1, 9000, 1)
logits [[ 2.497308   -0.9643726   0.31604552 -3.7064095 ]]
Iteration 500 of 1000: loss=0.0221 " + "l1=0.0217" + "l2=0.000395 f=-0.465 shape=(1, 9000, 1)
logits [[ 2.4869716  -0.95703256  0.3142206  -3.7039552 ]]
Iteration 600 of 1000: loss=0.0221 " + "l1=0.0217" + "l2=0.000476 f=-0.465 shape=(1, 9000, 1)
logits [[ 2.4800673  -0.9524683   0.31299403 -3.7013695 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.227 " + "l1=0.227" + "l2=0 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.597105   -1.0269619   0.33091697 -3.736127  ]]
Iteration 100 of 1000: loss=0.196 " + "l1=0.178" + "l2=0.0178 f=-0.493 shape=(1, 9000, 1)
logits [[ 2.0571058  -0.70103896  0.27342594 -3.6025388 ]]
Iteration 200 of 1000: loss=0.186 " + "l1=0.163" + "l2=0.0232 f=-0.506 shape=(1, 9000, 1)
logits [[ 1.8669331  -0.59258926  0.23896284 -3.5380254 ]]
Iteration 300 of 1000: loss=0.179 " + "l1=0.151" + "l2=0.028 f=-0.513 shape=(1, 9000, 1)
logits [[ 1.7214072  -0.5097495   0.21320862 -3.477884  ]]
Iteration 400 of 1000: loss=0.173 " + "l1=0.14" + "l2=0.0331 f=-0.515 shape=(1, 9000, 1)
logits [[ 1.6061215  -0.464647    0.20991072 -3.4129133 ]]
Iteration 500 of 1000: loss=0.166 " + "l1=0.129" + "l2=0.0372 f=-0.515 shape=(1, 9000, 1)
logits [[ 1.5180677  -0.44635746  0.22500056 -3.3555279 ]]
Iteration 600 of 1000: loss=0.16 " + "l1=0.12" + "l2=0.0401 f=-0.516 shape=(1, 9000, 1)
logits [[ 1.4311501  -0.430264    0.22772105 -3.291703  ]]
Iteration 700 of 1000: loss=0.152 " + "l1=0.107" + "l2=0.0454 f=-0.51 shape=(1, 9000, 1)
logits [[ 1.3511903  -0.45717406  0.28420308 -3.2198477 ]]
Iteration 800 of 1000: loss=0.145 " + "l1=0.0976" + "l2=0.0473 f=-0.504 shape=(1, 9000, 1)
logits [[ 1.2834032  -0.45784885  0.30709705 -3.1493022 ]]
Iteration 900 of 1000: loss=0.139 " + "l1=0.0888" + "l2=0.0501 f=-0.497 shape=(1, 9000, 1)
logits [[ 1.220641   -0.45873836  0.33288506 -3.0843053 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.27 " + "l1=2.27" + "l2=0 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.597105   -1.0269619   0.33091697 -3.736127  ]]
Iteration 100 of 1000: loss=0.4 " + "l1=0" + "l2=0.4 f=-0.624 shape=(1, 9000, 1)
logits [[ 0.51504815 -0.23459765  0.5346205  -3.3111517 ]]
Iteration 200 of 1000: loss=0.274 " + "l1=0" + "l2=0.274 f=-0.592 shape=(1, 9000, 1)
logits [[ 0.6288773  -0.37373936  0.66218865 -3.2838933 ]]
Iteration 300 of 1000: loss=0.216 " + "l1=0" + "l2=0.216 f=-0.572 shape=(1, 9000, 1)
logits [[ 0.7197573 -0.5133404  0.7682053 -3.2635646]]
Iteration 400 of 1000: loss=0.186 " + "l1=0" + "l2=0.186 f=-0.564 shape=(1, 9000, 1)
logits [[ 0.73306686 -0.51496726  0.7479413  -3.2214563 ]]
Iteration 500 of 1000: loss=0.166 " + "l1=0" + "l2=0.166 f=-0.554 shape=(1, 9000, 1)
logits [[ 0.7515933  -0.53428525  0.7640781  -3.199366  ]]
Iteration 600 of 1000: loss=0.155 " + "l1=0" + "l2=0.155 f=-0.549 shape=(1, 9000, 1)
logits [[ 0.74977374 -0.5420126   0.7639975  -3.1665304 ]]
Iteration 700 of 1000: loss=0.146 " + "l1=0" + "l2=0.146 f=-0.541 shape=(1, 9000, 1)
logits [[ 0.733226   -0.543183    0.76365656 -3.119504  ]]
Iteration 800 of 1000: loss=0.134 " + "l1=0" + "l2=0.134 f=-0.533 shape=(1, 9000, 1)
logits [[ 0.7507742  -0.5576432   0.76413244 -3.0881438 ]]
Iteration 900 of 1000: loss=0.129 " + "l1=0" + "l2=0.129 f=-0.527 shape=(1, 9000, 1)
logits [[ 0.74510926 -0.57410014  0.77737623 -3.0571444 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.25 " + "l1=1.25" + "l2=0 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.597105   -1.0269619   0.33091697 -3.736127  ]]
Iteration 100 of 1000: loss=0.428 " + "l1=0.0317" + "l2=0.397 f=-0.613 shape=(1, 9000, 1)
logits [[ 0.36505067  0.05083693  0.3074281  -3.1737916 ]]
Iteration 200 of 1000: loss=0.271 " + "l1=0" + "l2=0.271 f=-0.61 shape=(1, 9000, 1)
logits [[ 0.31480402 -0.01225502  0.33102503 -3.0725353 ]]
Iteration 300 of 1000: loss=0.202 " + "l1=0" + "l2=0.202 f=-0.591 shape=(1, 9000, 1)
logits [[ 0.49155232 -0.2730019   0.4930351  -3.074753  ]]
Iteration 400 of 1000: loss=0.175 " + "l1=0.00564" + "l2=0.169 f=-0.561 shape=(1, 9000, 1)
logits [[ 0.60243833 -0.37376145  0.5921909  -3.0662506 ]]
Iteration 500 of 1000: loss=0.148 " + "l1=0.000128" + "l2=0.148 f=-0.538 shape=(1, 9000, 1)
logits [[ 0.6647238  -0.45331335  0.66449195 -3.0266557 ]]
Iteration 600 of 1000: loss=0.137 " + "l1=0" + "l2=0.137 f=-0.522 shape=(1, 9000, 1)
logits [[ 0.67337215 -0.49761486  0.7111998  -2.975585  ]]
Iteration 700 of 1000: loss=0.121 " + "l1=0" + "l2=0.121 f=-0.511 shape=(1, 9000, 1)
logits [[ 0.70928234 -0.5337567   0.71566814 -2.9344878 ]]
Iteration 800 of 1000: loss=0.112 " + "l1=0" + "l2=0.112 f=-0.501 shape=(1, 9000, 1)
logits [[ 0.7193305  -0.55985606  0.7221145  -2.8871815 ]]
Iteration 900 of 1000: loss=0.105 " + "l1=0" + "l2=0.105 f=-0.495 shape=(1, 9000, 1)
logits [[ 0.72366095 -0.58680505  0.73272145 -2.8493881 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.737 " + "l1=0.737" + "l2=0 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.597105   -1.0269619   0.33091697 -3.736127  ]]
Iteration 100 of 1000: loss=0.43 " + "l1=0.249" + "l2=0.181 f=-0.567 shape=(1, 9000, 1)
logits [[ 1.0426792  -0.23530334  0.27702135 -3.352966  ]]
Iteration 200 of 1000: loss=0.326 " + "l1=0.0915" + "l2=0.234 f=-0.58 shape=(1, 9000, 1)
logits [[ 0.5431367  -0.01076784  0.26149955 -3.115652  ]]
Iteration 300 of 1000: loss=0.234 " + "l1=0" + "l2=0.234 f=-0.6 shape=(1, 9000, 1)
logits [[ 0.20921548  0.1260727   0.21101469 -2.9455225 ]]
Iteration 400 of 1000: loss=0.181 " + "l1=0" + "l2=0.181 f=-0.591 shape=(1, 9000, 1)
logits [[ 0.4186321 -0.2292266  0.4212235 -2.9746742]]
Iteration 500 of 1000: loss=0.16 " + "l1=0" + "l2=0.16 f=-0.576 shape=(1, 9000, 1)
logits [[ 0.4469477  -0.2886929   0.45741403 -2.9196653 ]]
Iteration 600 of 1000: loss=0.137 " + "l1=0.000975" + "l2=0.136 f=-0.542 shape=(1, 9000, 1)
logits [[ 0.57400376 -0.4085612   0.57100224 -2.9063141 ]]
Iteration 700 of 1000: loss=0.12 " + "l1=0" + "l2=0.12 f=-0.522 shape=(1, 9000, 1)
logits [[ 0.6294667  -0.48451024  0.633606   -2.8664339 ]]
Iteration 800 of 1000: loss=0.11 " + "l1=0.00306" + "l2=0.106 f=-0.508 shape=(1, 9000, 1)
logits [[ 0.6764721  -0.55111325  0.66705847 -2.8235207 ]]
Iteration 900 of 1000: loss=0.1 " + "l1=0" + "l2=0.1 f=-0.502 shape=(1, 9000, 1)
logits [[ 0.6992874  -0.60785025  0.7060866  -2.8052564 ]]
--- 264.90510964393616 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0633 " + "l1=0.0633" + "l2=0 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.597105   -1.0269619   0.33091697 -3.736127  ]]
Iteration 100 of 1000: loss=0.0623 " + "l1=0.0618" + "l2=0.000502 f=-0.46 shape=(1, 9000, 1)
logits [[ 2.5024643  -0.96663105  0.3001466  -3.6766562 ]]
Iteration 200 of 1000: loss=0.0619 " + "l1=0.0612" + "l2=0.000632 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.4694922  -0.9454746   0.28755897 -3.6552312 ]]
Iteration 300 of 1000: loss=0.0615 " + "l1=0.0606" + "l2=0.000867 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.431582   -0.92193574  0.27253288 -3.6303368 ]]
Iteration 400 of 1000: loss=0.0611 " + "l1=0.06" + "l2=0.00104 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.3997722  -0.9033531   0.25830868 -3.604301  ]]
Iteration 500 of 1000: loss=0.0608 " + "l1=0.0595" + "l2=0.00131 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.368909   -0.8840969   0.24440512 -3.5791745 ]]
Iteration 600 of 1000: loss=0.0605 " + "l1=0.059" + "l2=0.00146 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.3437202  -0.8671738   0.23188889 -3.5554576 ]]
Iteration 700 of 1000: loss=0.0602 " + "l1=0.0585" + "l2=0.00171 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.319765   -0.8516674   0.21951745 -3.53093   ]]
Iteration 800 of 1000: loss=0.06 " + "l1=0.058" + "l2=0.00192 f=-0.46 shape=(1, 9000, 1)
logits [[ 2.2961028  -0.83687806  0.2082318  -3.5067496 ]]
Iteration 900 of 1000: loss=0.0597 " + "l1=0.0576" + "l2=0.00213 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.2737792  -0.82355034  0.19744664 -3.482262  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.633 " + "l1=0.633" + "l2=0 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.597105   -1.0269619   0.33091697 -3.736127  ]]
Iteration 100 of 1000: loss=0.53 " + "l1=0.479" + "l2=0.0516 f=-0.478 shape=(1, 9000, 1)
logits [[ 1.6214924  -0.41582537  0.04675416 -3.164409  ]]
Iteration 200 of 1000: loss=0.471 " + "l1=0.4" + "l2=0.0714 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.2251239  -0.23657303 -0.09865375 -2.7702794 ]]
Iteration 300 of 1000: loss=0.424 " + "l1=0.333" + "l2=0.091 f=-0.469 shape=(1, 9000, 1)
logits [[ 0.9014213  -0.12897693 -0.21915115 -2.4287817 ]]
Iteration 400 of 1000: loss=0.389 " + "l1=0.281" + "l2=0.108 f=-0.463 shape=(1, 9000, 1)
logits [[ 0.6606855 -0.0500285 -0.3107059 -2.1513925]]
Iteration 500 of 1000: loss=0.356 " + "l1=0.227" + "l2=0.129 f=-0.45 shape=(1, 9000, 1)
logits [[ 0.4213822   0.01630137 -0.3943715  -1.8449355 ]]
Iteration 600 of 1000: loss=0.323 " + "l1=0.169" + "l2=0.154 f=-0.437 shape=(1, 9000, 1)
logits [[ 0.17613791  0.0723154  -0.47971374 -1.5168736 ]]
Iteration 700 of 1000: loss=0.289 " + "l1=0.127" + "l2=0.163 f=-0.426 shape=(1, 9000, 1)
logits [[ 0.03726614  0.02701646 -0.538134   -1.2300228 ]]
Iteration 800 of 1000: loss=0.262 " + "l1=0.0979" + "l2=0.164 f=-0.418 shape=(1, 9000, 1)
logits [[-0.03476534 -0.05247124 -0.5720644  -1.0135657 ]]
Iteration 900 of 1000: loss=0.236 " + "l1=0.0682" + "l2=0.168 f=-0.411 shape=(1, 9000, 1)
logits [[-0.12343304 -0.11061419 -0.6192387  -0.79231805]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.33 " + "l1=6.33" + "l2=0 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.597105   -1.0269619   0.33091697 -3.736127  ]]
Iteration 100 of 1000: loss=1.27 " + "l1=0.0111" + "l2=1.26 f=-0.443 shape=(1, 9000, 1)
logits [[-0.4019905  -0.4004817  -0.557502   -0.41158837]]
Iteration 200 of 1000: loss=0.829 " + "l1=0" + "l2=0.829 f=-0.441 shape=(1, 9000, 1)
logits [[-0.3999963  -0.41048855 -0.61174965 -0.34211254]]
Iteration 300 of 1000: loss=0.594 " + "l1=0" + "l2=0.594 f=-0.447 shape=(1, 9000, 1)
logits [[-0.41234136 -0.3949327  -0.6004714  -0.380068  ]]
Iteration 400 of 1000: loss=0.467 " + "l1=0" + "l2=0.467 f=-0.447 shape=(1, 9000, 1)
logits [[-0.40261117 -0.41343924 -0.5902008  -0.38159096]]
Iteration 500 of 1000: loss=0.395 " + "l1=0" + "l2=0.395 f=-0.449 shape=(1, 9000, 1)
logits [[-0.40664294 -0.40880832 -0.5947336  -0.38605803]]
Iteration 600 of 1000: loss=0.347 " + "l1=0" + "l2=0.347 f=-0.447 shape=(1, 9000, 1)
logits [[-0.38628146 -0.42204016 -0.59436756 -0.38465393]]
Iteration 700 of 1000: loss=0.317 " + "l1=0" + "l2=0.317 f=-0.447 shape=(1, 9000, 1)
logits [[-0.3932682  -0.42506644 -0.5953449  -0.3725826 ]]
Iteration 800 of 1000: loss=0.291 " + "l1=0" + "l2=0.291 f=-0.449 shape=(1, 9000, 1)
logits [[-0.4127788  -0.39908773 -0.5976171  -0.3883963 ]]
Iteration 900 of 1000: loss=0.269 " + "l1=0" + "l2=0.269 f=-0.448 shape=(1, 9000, 1)
logits [[-0.3978928  -0.40817502 -0.599      -0.38679475]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.48 " + "l1=3.48" + "l2=0 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.597105   -1.0269619   0.33091697 -3.736127  ]]
Iteration 100 of 1000: loss=1.31 " + "l1=0.437" + "l2=0.872 f=-0.437 shape=(1, 9000, 1)
logits [[-0.17423108 -0.17825997 -0.4255265  -0.96951395]]
Iteration 200 of 1000: loss=0.655 " + "l1=0.000494" + "l2=0.655 f=-0.438 shape=(1, 9000, 1)
logits [[-0.37443975 -0.3930835  -0.6074327  -0.37533832]]
Iteration 300 of 1000: loss=0.465 " + "l1=0.0102" + "l2=0.454 f=-0.44 shape=(1, 9000, 1)
logits [[-0.37515494 -0.3857155  -0.60657537 -0.3937813 ]]
Iteration 400 of 1000: loss=0.386 " + "l1=0" + "l2=0.386 f=-0.447 shape=(1, 9000, 1)
logits [[-0.4008933 -0.3956782 -0.6263992 -0.3662898]]
Iteration 500 of 1000: loss=0.336 " + "l1=0" + "l2=0.336 f=-0.448 shape=(1, 9000, 1)
logits [[-0.39199802 -0.38844243 -0.6264335  -0.38360506]]
Iteration 600 of 1000: loss=0.306 " + "l1=0" + "l2=0.306 f=-0.45 shape=(1, 9000, 1)
logits [[-0.37973067 -0.40767956 -0.6342539  -0.37742668]]
Iteration 700 of 1000: loss=0.284 " + "l1=0" + "l2=0.284 f=-0.451 shape=(1, 9000, 1)
logits [[-0.39661652 -0.39967918 -0.6445596  -0.36246392]]
Iteration 800 of 1000: loss=0.259 " + "l1=0" + "l2=0.259 f=-0.454 shape=(1, 9000, 1)
logits [[-0.39819735 -0.38925654 -0.64888674 -0.37898842]]
Iteration 900 of 1000: loss=0.248 " + "l1=0" + "l2=0.248 f=-0.454 shape=(1, 9000, 1)
logits [[-0.42832634 -0.38609838 -0.66459364 -0.33618188]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.06 " + "l1=2.06" + "l2=0 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.597105   -1.0269619   0.33091697 -3.736127  ]]
Iteration 100 of 1000: loss=1.13 " + "l1=0.721" + "l2=0.409 f=-0.496 shape=(1, 9000, 1)
logits [[ 0.22234091  0.1352624  -0.3429723  -1.9972773 ]]
Iteration 200 of 1000: loss=0.718 " + "l1=0.307" + "l2=0.412 f=-0.423 shape=(1, 9000, 1)
logits [[-0.09367199 -0.10920215 -0.45206785 -1.0372206 ]]
Iteration 300 of 1000: loss=0.44 " + "l1=0.0071" + "l2=0.433 f=-0.402 shape=(1, 9000, 1)
logits [[-0.32001826 -0.33789217 -0.60682213 -0.34187442]]
Iteration 400 of 1000: loss=0.357 " + "l1=0.00439" + "l2=0.353 f=-0.42 shape=(1, 9000, 1)
logits [[-0.3349933  -0.3552279  -0.6423391  -0.34849527]]
Iteration 500 of 1000: loss=0.312 " + "l1=0.00492" + "l2=0.307 f=-0.43 shape=(1, 9000, 1)
logits [[-0.346558   -0.35478282 -0.6557506  -0.36168817]]
Iteration 600 of 1000: loss=0.28 " + "l1=0.0065" + "l2=0.274 f=-0.435 shape=(1, 9000, 1)
logits [[-0.34243354 -0.36736417 -0.6666092  -0.36241823]]
Iteration 700 of 1000: loss=0.251 " + "l1=0" + "l2=0.251 f=-0.438 shape=(1, 9000, 1)
logits [[-0.36612502 -0.36038667 -0.6800612  -0.34360707]]
Iteration 800 of 1000: loss=0.229 " + "l1=0" + "l2=0.229 f=-0.44 shape=(1, 9000, 1)
logits [[-0.35433683 -0.37212348 -0.6833465  -0.350524  ]]
Iteration 900 of 1000: loss=0.214 " + "l1=0" + "l2=0.214 f=-0.442 shape=(1, 9000, 1)
logits [[-0.36527324 -0.3619396  -0.68696916 -0.35446775]]
--- 289.1203660964966 seconds ---
Adv result:3
Loading record A06576
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0683 " + "l1=0.0683" + "l2=0 f=-0.73 shape=(1, 9000, 1)
logits [[  5.5767193  -1.253107    3.1337872 -10.37684  ]]
Iteration 100 of 1000: loss=0.0678 " + "l1=0.0675" + "l2=0.000333 f=-0.732 shape=(1, 9000, 1)
logits [[  5.528455   -1.2210997   3.112326  -10.34845  ]]
Iteration 200 of 1000: loss=0.0677 " + "l1=0.0674" + "l2=0.000339 f=-0.733 shape=(1, 9000, 1)
logits [[  5.5218906  -1.215812    3.1075745 -10.34367  ]]
Iteration 300 of 1000: loss=0.0676 " + "l1=0.0672" + "l2=0.000405 f=-0.733 shape=(1, 9000, 1)
logits [[  5.5134177  -1.2092941   3.1021178 -10.3378   ]]
Iteration 400 of 1000: loss=0.0676 " + "l1=0.0671" + "l2=0.000501 f=-0.733 shape=(1, 9000, 1)
logits [[  5.504971  -1.202738   3.096565 -10.332021]]
Iteration 500 of 1000: loss=0.0675 " + "l1=0.0669" + "l2=0.000601 f=-0.734 shape=(1, 9000, 1)
logits [[  5.4974303  -1.1966283   3.0914469 -10.327019 ]]
Iteration 600 of 1000: loss=0.0675 " + "l1=0.0668" + "l2=0.000705 f=-0.734 shape=(1, 9000, 1)
logits [[  5.490399   -1.1909093   3.0866218 -10.322483 ]]
Iteration 700 of 1000: loss=0.0675 " + "l1=0.0667" + "l2=0.000809 f=-0.734 shape=(1, 9000, 1)
logits [[  5.483585   -1.1853551   3.081862  -10.318057 ]]
Iteration 800 of 1000: loss=0.0675 " + "l1=0.0666" + "l2=0.00097 f=-0.735 shape=(1, 9000, 1)
logits [[  5.477168   -1.1800951   3.0774012 -10.314088 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.683 " + "l1=0.683" + "l2=0 f=-0.73 shape=(1, 9000, 1)
logits [[  5.5767193  -1.253107    3.1337872 -10.37684  ]]
Iteration 100 of 1000: loss=0.639 " + "l1=0.612" + "l2=0.0272 f=-0.75 shape=(1, 9000, 1)
logits [[  5.147005    -0.97043914   2.9437447  -10.122069  ]]
Iteration 200 of 1000: loss=0.621 " + "l1=0.583" + "l2=0.038 f=-0.756 shape=(1, 9000, 1)
logits [[ 4.971559   -0.85927916  2.8563497  -9.993413  ]]
Iteration 300 of 1000: loss=0.606 " + "l1=0.558" + "l2=0.0484 f=-0.758 shape=(1, 9000, 1)
logits [[ 4.8146114  -0.76047295  2.7694414  -9.855933  ]]
Iteration 400 of 1000: loss=0.59 " + "l1=0.532" + "l2=0.0573 f=-0.757 shape=(1, 9000, 1)
logits [[ 4.6647906 -0.658841   2.6734645 -9.708346 ]]
Iteration 500 of 1000: loss=0.572 " + "l1=0.508" + "l2=0.0643 f=-0.759 shape=(1, 9000, 1)
logits [[ 4.5171957 -0.5643087  2.5829859 -9.573321 ]]
Iteration 600 of 1000: loss=0.555 " + "l1=0.485" + "l2=0.0707 f=-0.763 shape=(1, 9000, 1)
logits [[ 4.3760056  -0.47201124  2.4957988  -9.451699  ]]
Iteration 700 of 1000: loss=0.538 " + "l1=0.462" + "l2=0.0761 f=-0.77 shape=(1, 9000, 1)
logits [[ 4.2287517  -0.39336073  2.4278867  -9.342925  ]]
Iteration 800 of 1000: loss=0.52 " + "l1=0.439" + "l2=0.0813 f=-0.778 shape=(1, 9000, 1)
logits [[ 4.0678964  -0.32149214  2.3663273  -9.224937  ]]
Iteration 900 of 1000: loss=0.502 " + "l1=0.414" + "l2=0.0885 f=-0.789 shape=(1, 9000, 1)
logits [[ 3.8906598  -0.24687906  2.3014808  -9.100402  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.83 " + "l1=6.83" + "l2=0 f=-0.73 shape=(1, 9000, 1)
logits [[  5.5767193  -1.253107    3.1337872 -10.37684  ]]
Iteration 100 of 1000: loss=2.56 " + "l1=0.788" + "l2=1.77 f=-0.962 shape=(1, 9000, 1)
logits [[ 1.7175089   0.93533516  1.7236047  -8.223946  ]]
Iteration 200 of 1000: loss=1.75 " + "l1=0.00944" + "l2=1.74 f=-0.976 shape=(1, 9000, 1)
logits [[ 1.3118739  1.3052771  1.314721  -7.8368225]]
Iteration 300 of 1000: loss=1.43 " + "l1=0.00143" + "l2=1.43 f=-0.967 shape=(1, 9000, 1)
logits [[ 1.2460939  1.2504914  1.251919  -7.614776 ]]
Iteration 400 of 1000: loss=1.26 " + "l1=0.00558" + "l2=1.26 f=-0.956 shape=(1, 9000, 1)
logits [[ 1.2079921  1.2117766  1.2173588 -7.459695 ]]
Iteration 500 of 1000: loss=1.16 " + "l1=0.0143" + "l2=1.15 f=-0.948 shape=(1, 9000, 1)
logits [[ 1.203979   1.1896302  1.194999  -7.379355 ]]
Iteration 600 of 1000: loss=1.09 " + "l1=0" + "l2=1.09 f=-0.946 shape=(1, 9000, 1)
logits [[ 1.1453938  1.1836473  1.1716607 -7.2851386]]
Iteration 700 of 1000: loss=1.01 " + "l1=0.00286" + "l2=1 f=-0.944 shape=(1, 9000, 1)
logits [[ 1.1528807  1.1548305  1.1576875 -7.24106  ]]
Iteration 800 of 1000: loss=0.946 " + "l1=0" + "l2=0.946 f=-0.942 shape=(1, 9000, 1)
logits [[ 1.1151121  1.1457151  1.1417034 -7.1698666]]
Iteration 900 of 1000: loss=0.903 " + "l1=0.0289" + "l2=0.874 f=-0.937 shape=(1, 9000, 1)
logits [[ 1.1435322  1.1146463  1.1292932 -7.1366844]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.76 " + "l1=3.76" + "l2=0 f=-0.73 shape=(1, 9000, 1)
logits [[  5.5767193  -1.253107    3.1337872 -10.37684  ]]
Iteration 100 of 1000: loss=2.21 " + "l1=1.26" + "l2=0.953 f=-0.897 shape=(1, 9000, 1)
logits [[ 2.617596   0.3271693  2.180885  -8.714254 ]]
Iteration 200 of 1000: loss=1.65 " + "l1=0.559" + "l2=1.09 f=-0.925 shape=(1, 9000, 1)
logits [[ 1.8084353  0.7912651  1.7981453 -8.096822 ]]
Iteration 300 of 1000: loss=1.35 " + "l1=0.317" + "l2=1.03 f=-0.941 shape=(1, 9000, 1)
logits [[ 1.5207474   0.95633894  1.5323104  -7.7741346 ]]
Iteration 400 of 1000: loss=1.17 " + "l1=0.177" + "l2=0.988 f=-0.932 shape=(1, 9000, 1)
logits [[ 1.3475679  1.0250372  1.3422867 -7.444358 ]]
Iteration 500 of 1000: loss=1.02 " + "l1=0.0808" + "l2=0.94 f=-0.93 shape=(1, 9000, 1)
logits [[ 1.2232573  1.0762751  1.2178749 -7.236211 ]]
Iteration 600 of 1000: loss=0.893 " + "l1=0.00333" + "l2=0.89 f=-0.924 shape=(1, 9000, 1)
logits [[ 1.1215577  1.1155068  1.1203092 -7.0546894]]
Iteration 700 of 1000: loss=0.827 " + "l1=0.0124" + "l2=0.815 f=-0.915 shape=(1, 9000, 1)
logits [[ 1.1124297  1.0899208  1.1075178 -6.9702673]]
Iteration 800 of 1000: loss=0.782 " + "l1=0.0132" + "l2=0.769 f=-0.907 shape=(1, 9000, 1)
logits [[ 1.0986336  1.0754956  1.0995051 -6.9005356]]
Iteration 900 of 1000: loss=0.752 " + "l1=0.00726" + "l2=0.745 f=-0.9 shape=(1, 9000, 1)
logits [[ 1.0828279  1.0696244  1.0794808 -6.833412 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.22 " + "l1=2.22" + "l2=0 f=-0.73 shape=(1, 9000, 1)
logits [[  5.5767193  -1.253107    3.1337872 -10.37684  ]]
Iteration 100 of 1000: loss=1.68 " + "l1=1.31" + "l2=0.374 f=-0.813 shape=(1, 9000, 1)
logits [[ 3.7960143  -0.22815512  2.4774168  -9.29853   ]]
Iteration 200 of 1000: loss=1.44 " + "l1=0.946" + "l2=0.492 f=-0.834 shape=(1, 9000, 1)
logits [[ 3.0620828   0.15075132  2.197486   -8.746404  ]]
Iteration 300 of 1000: loss=1.21 " + "l1=0.643" + "l2=0.572 f=-0.882 shape=(1, 9000, 1)
logits [[ 2.4131026   0.43538108  1.9654267  -8.340123  ]]
Iteration 400 of 1000: loss=1.05 " + "l1=0.404" + "l2=0.646 f=-0.912 shape=(1, 9000, 1)
logits [[ 1.8400813  0.5957643  1.7999749 -7.884145 ]]
Iteration 500 of 1000: loss=0.942 " + "l1=0.337" + "l2=0.605 f=-0.905 shape=(1, 9000, 1)
logits [[ 1.6796952  0.6413679  1.6752228 -7.617035 ]]
Iteration 600 of 1000: loss=0.866 " + "l1=0.296" + "l2=0.57 f=-0.894 shape=(1, 9000, 1)
logits [[ 1.5816159  0.6761579  1.586412  -7.4220815]]
Iteration 700 of 1000: loss=0.817 " + "l1=0.26" + "l2=0.557 f=-0.888 shape=(1, 9000, 1)
logits [[ 1.5102279  0.7109727  1.5102123 -7.2849774]]
Iteration 800 of 1000: loss=0.779 " + "l1=0.234" + "l2=0.545 f=-0.884 shape=(1, 9000, 1)
logits [[ 1.4513013   0.73172075  1.4488055  -7.166805  ]]
Iteration 900 of 1000: loss=0.744 " + "l1=0.204" + "l2=0.54 f=-0.878 shape=(1, 9000, 1)
logits [[ 1.3780979  0.7546372  1.3824401 -7.0287085]]
--- 280.79251623153687 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0244 " + "l1=0.0244" + "l2=0 f=-0.73 shape=(1, 9000, 1)
logits [[  5.5767193  -1.253107    3.1337872 -10.37684  ]]
Iteration 100 of 1000: loss=0.0243 " + "l1=0.0241" + "l2=0.000167 f=-0.731 shape=(1, 9000, 1)
logits [[  5.5494165  -1.2510378   3.140817  -10.364834 ]]
Iteration 200 of 1000: loss=0.0242 " + "l1=0.0241" + "l2=0.000142 f=-0.732 shape=(1, 9000, 1)
logits [[  5.548087   -1.2517321   3.1419334 -10.364791 ]]
Iteration 300 of 1000: loss=0.0242 " + "l1=0.024" + "l2=0.000185 f=-0.732 shape=(1, 9000, 1)
logits [[  5.5447617  -1.2524254   3.1436374 -10.363801 ]]
Iteration 400 of 1000: loss=0.0242 " + "l1=0.024" + "l2=0.000211 f=-0.732 shape=(1, 9000, 1)
logits [[  5.541156  -1.253292   3.145468 -10.36265 ]]
Iteration 500 of 1000: loss=0.0242 " + "l1=0.0239" + "l2=0.000299 f=-0.733 shape=(1, 9000, 1)
logits [[  5.537818   -1.2543722   3.1473022 -10.361585 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.244 " + "l1=0.244" + "l2=0 f=-0.73 shape=(1, 9000, 1)
logits [[  5.5767193  -1.253107    3.1337872 -10.37684  ]]
Iteration 100 of 1000: loss=0.228 " + "l1=0.217" + "l2=0.0101 f=-0.742 shape=(1, 9000, 1)
logits [[  5.3625937  -1.2313349   3.1879332 -10.286218 ]]
Iteration 200 of 1000: loss=0.221 " + "l1=0.207" + "l2=0.0139 f=-0.747 shape=(1, 9000, 1)
logits [[  5.2879558  -1.2387668   3.2131033 -10.249313 ]]
Iteration 300 of 1000: loss=0.216 " + "l1=0.198" + "l2=0.0178 f=-0.753 shape=(1, 9000, 1)
logits [[  5.216514   -1.2538148   3.2382262 -10.213569 ]]
Iteration 400 of 1000: loss=0.211 " + "l1=0.19" + "l2=0.0207 f=-0.757 shape=(1, 9000, 1)
logits [[  5.1559725  -1.2709227   3.2567    -10.170936 ]]
Iteration 500 of 1000: loss=0.206 " + "l1=0.182" + "l2=0.0241 f=-0.762 shape=(1, 9000, 1)
logits [[  5.0915875  -1.2873199   3.275653  -10.127871 ]]
Iteration 600 of 1000: loss=0.201 " + "l1=0.175" + "l2=0.026 f=-0.765 shape=(1, 9000, 1)
logits [[  5.044159   -1.3032714   3.2893078 -10.08825  ]]
Iteration 700 of 1000: loss=0.197 " + "l1=0.17" + "l2=0.0271 f=-0.767 shape=(1, 9000, 1)
logits [[  4.999827   -1.3182273   3.3007936 -10.050625 ]]
Iteration 800 of 1000: loss=0.193 " + "l1=0.164" + "l2=0.0291 f=-0.771 shape=(1, 9000, 1)
logits [[  4.948983   -1.3316777   3.3126338 -10.012119 ]]
Iteration 900 of 1000: loss=0.187 " + "l1=0.156" + "l2=0.031 f=-0.773 shape=(1, 9000, 1)
logits [[ 4.88807   -1.3470477  3.3249655 -9.957928 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.44 " + "l1=2.44" + "l2=0 f=-0.73 shape=(1, 9000, 1)
logits [[  5.5767193  -1.253107    3.1337872 -10.37684  ]]
Iteration 100 of 1000: loss=0.672 " + "l1=0" + "l2=0.672 f=-0.82 shape=(1, 9000, 1)
logits [[ 3.5175166 -1.1723555  3.5190268 -9.144081 ]]
Iteration 200 of 1000: loss=0.478 " + "l1=0" + "l2=0.478 f=-0.816 shape=(1, 9000, 1)
logits [[ 3.5288606 -1.2644695  3.531659  -9.060717 ]]
Iteration 300 of 1000: loss=0.402 " + "l1=0" + "l2=0.402 f=-0.81 shape=(1, 9000, 1)
logits [[ 3.5026965 -1.3221805  3.5215607 -8.940878 ]]
Iteration 400 of 1000: loss=0.351 " + "l1=0.0143" + "l2=0.337 f=-0.801 shape=(1, 9000, 1)
logits [[ 3.505913  -1.3473119  3.491594  -8.855102 ]]
Iteration 500 of 1000: loss=0.299 " + "l1=0" + "l2=0.299 f=-0.802 shape=(1, 9000, 1)
logits [[ 3.4704163 -1.355169   3.4731658 -8.796299 ]]
Iteration 600 of 1000: loss=0.266 " + "l1=0" + "l2=0.266 f=-0.804 shape=(1, 9000, 1)
logits [[ 3.444818  -1.3537402  3.4517012 -8.756972 ]]
Iteration 700 of 1000: loss=0.233 " + "l1=6.44e-05" + "l2=0.233 f=-0.805 shape=(1, 9000, 1)
logits [[ 3.422193  -1.350452   3.4221287 -8.71537  ]]
Iteration 800 of 1000: loss=0.21 " + "l1=0.00286" + "l2=0.207 f=-0.807 shape=(1, 9000, 1)
logits [[ 3.3912683 -1.3418037  3.3884053 -8.664311 ]]
Iteration 900 of 1000: loss=0.188 " + "l1=0" + "l2=0.188 f=-0.809 shape=(1, 9000, 1)
logits [[ 3.3553474 -1.3298496  3.360768  -8.622181 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.34 " + "l1=1.34" + "l2=0 f=-0.73 shape=(1, 9000, 1)
logits [[  5.5767193  -1.253107    3.1337872 -10.37684  ]]
Iteration 100 of 1000: loss=0.747 " + "l1=0.384" + "l2=0.363 f=-0.797 shape=(1, 9000, 1)
logits [[ 4.1333632 -1.1700833  3.4347236 -9.587039 ]]
Iteration 200 of 1000: loss=0.49 " + "l1=0.00195" + "l2=0.488 f=-0.821 shape=(1, 9000, 1)
logits [[ 3.5136154 -1.225955   3.5100732 -9.082532 ]]
Iteration 300 of 1000: loss=0.363 " + "l1=0.000916" + "l2=0.362 f=-0.819 shape=(1, 9000, 1)
logits [[ 3.4983084 -1.2835279  3.496643  -8.989177 ]]
Iteration 400 of 1000: loss=0.301 " + "l1=0.00735" + "l2=0.294 f=-0.814 shape=(1, 9000, 1)
logits [[ 3.469256  -1.2977148  3.455898  -8.883162 ]]
Iteration 500 of 1000: loss=0.258 " + "l1=0" + "l2=0.258 f=-0.817 shape=(1, 9000, 1)
logits [[ 3.4067779 -1.3009293  3.420364  -8.793076 ]]
Iteration 600 of 1000: loss=0.223 " + "l1=0" + "l2=0.223 f=-0.818 shape=(1, 9000, 1)
logits [[ 3.3764107 -1.2893736  3.3830183 -8.743128 ]]
Iteration 700 of 1000: loss=0.196 " + "l1=0.00195" + "l2=0.194 f=-0.819 shape=(1, 9000, 1)
logits [[ 3.353021  -1.2784475  3.3494723 -8.699812 ]]
Iteration 800 of 1000: loss=0.173 " + "l1=0" + "l2=0.173 f=-0.82 shape=(1, 9000, 1)
logits [[ 3.3204157 -1.2689322  3.320893  -8.653856 ]]
Iteration 900 of 1000: loss=0.158 " + "l1=0" + "l2=0.158 f=-0.82 shape=(1, 9000, 1)
logits [[ 3.2666643 -1.2670611  3.2989383 -8.577353 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.794 " + "l1=0.794" + "l2=0 f=-0.73 shape=(1, 9000, 1)
logits [[  5.5767193  -1.253107    3.1337872 -10.37684  ]]
Iteration 100 of 1000: loss=0.589 " + "l1=0.457" + "l2=0.132 f=-0.772 shape=(1, 9000, 1)
logits [[ 4.743818  -1.19173    3.3380296 -9.978287 ]]
Iteration 200 of 1000: loss=0.507 " + "l1=0.328" + "l2=0.179 f=-0.784 shape=(1, 9000, 1)
logits [[ 4.4109616 -1.2181484  3.4010534 -9.72993  ]]
Iteration 300 of 1000: loss=0.424 " + "l1=0.206" + "l2=0.218 f=-0.791 shape=(1, 9000, 1)
logits [[ 4.0773435 -1.2765225  3.443035  -9.406714 ]]
Iteration 400 of 1000: loss=0.345 " + "l1=0.103" + "l2=0.242 f=-0.805 shape=(1, 9000, 1)
logits [[ 3.8130674 -1.3371991  3.4947762 -9.189965 ]]
Iteration 500 of 1000: loss=0.277 " + "l1=0.0138" + "l2=0.263 f=-0.817 shape=(1, 9000, 1)
logits [[ 3.556434  -1.3710968  3.5138526 -8.9655075]]
Iteration 600 of 1000: loss=0.22 " + "l1=0.000486" + "l2=0.22 f=-0.819 shape=(1, 9000, 1)
logits [[ 3.474955  -1.3673949  3.4734583 -8.85683  ]]
Iteration 700 of 1000: loss=0.186 " + "l1=0.00316" + "l2=0.182 f=-0.815 shape=(1, 9000, 1)
logits [[ 3.4578888 -1.3601296  3.4481728 -8.806779 ]]
Iteration 800 of 1000: loss=0.16 " + "l1=0" + "l2=0.16 f=-0.813 shape=(1, 9000, 1)
logits [[ 3.4217813 -1.3481644  3.4220455 -8.746478 ]]
Iteration 900 of 1000: loss=0.14 " + "l1=0" + "l2=0.14 f=-0.809 shape=(1, 9000, 1)
logits [[ 3.389991  -1.3494744  3.3952687 -8.670287 ]]
--- 261.2388319969177 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.16 " + "l1=0.16" + "l2=0 f=-0.73 shape=(1, 9000, 1)
logits [[  5.5767193  -1.253107    3.1337872 -10.37684  ]]
Iteration 100 of 1000: loss=0.159 " + "l1=0.158" + "l2=0.000482 f=-0.728 shape=(1, 9000, 1)
logits [[  5.5207295  -1.2362432   3.1100867 -10.306284 ]]
Iteration 200 of 1000: loss=0.159 " + "l1=0.158" + "l2=0.000542 f=-0.728 shape=(1, 9000, 1)
logits [[  5.50976    -1.2337061   3.1042411 -10.29036  ]]
Iteration 300 of 1000: loss=0.158 " + "l1=0.158" + "l2=0.000675 f=-0.727 shape=(1, 9000, 1)
logits [[  5.497149   -1.2307683   3.0977776 -10.272088 ]]
Iteration 400 of 1000: loss=0.158 " + "l1=0.157" + "l2=0.000822 f=-0.726 shape=(1, 9000, 1)
logits [[  5.4849796  -1.2280942   3.0913868 -10.254168 ]]
Iteration 500 of 1000: loss=0.158 " + "l1=0.157" + "l2=0.000983 f=-0.726 shape=(1, 9000, 1)
logits [[  5.4741974  -1.2259904   3.0855553 -10.237893 ]]
Iteration 600 of 1000: loss=0.158 " + "l1=0.157" + "l2=0.00109 f=-0.726 shape=(1, 9000, 1)
logits [[  5.4643016  -1.2243302   3.0800664 -10.222576 ]]
Iteration 700 of 1000: loss=0.158 " + "l1=0.157" + "l2=0.00122 f=-0.725 shape=(1, 9000, 1)
logits [[  5.454755   -1.2230221   3.0746853 -10.207295 ]]
Iteration 800 of 1000: loss=0.158 " + "l1=0.156" + "l2=0.00138 f=-0.725 shape=(1, 9000, 1)
logits [[  5.4454703  -1.2220017   3.069449  -10.192121 ]]
Iteration 900 of 1000: loss=0.158 " + "l1=0.156" + "l2=0.00156 f=-0.724 shape=(1, 9000, 1)
logits [[  5.436447   -1.2214613   3.0644732 -10.176696 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.6 " + "l1=1.6" + "l2=0 f=-0.73 shape=(1, 9000, 1)
logits [[  5.5767193  -1.253107    3.1337872 -10.37684  ]]
Iteration 100 of 1000: loss=1.52 " + "l1=1.47" + "l2=0.0469 f=-0.712 shape=(1, 9000, 1)
logits [[ 5.009723  -1.091913   2.9088345 -9.673593 ]]
Iteration 200 of 1000: loss=1.47 " + "l1=1.4" + "l2=0.0739 f=-0.702 shape=(1, 9000, 1)
logits [[ 4.7063756 -1.026051   2.7948651 -9.281652 ]]
Iteration 300 of 1000: loss=1.43 " + "l1=1.33" + "l2=0.0992 f=-0.689 shape=(1, 9000, 1)
logits [[ 4.418136 -0.965526  2.680233 -8.887028]]
Iteration 400 of 1000: loss=1.38 " + "l1=1.26" + "l2=0.124 f=-0.678 shape=(1, 9000, 1)
logits [[ 4.114281  -0.8839039  2.5471032 -8.4881115]]
Iteration 500 of 1000: loss=1.34 " + "l1=1.2" + "l2=0.14 f=-0.666 shape=(1, 9000, 1)
logits [[ 3.8529418  -0.82542425  2.4201114  -8.112228  ]]
Iteration 600 of 1000: loss=1.28 " + "l1=1.14" + "l2=0.147 f=-0.654 shape=(1, 9000, 1)
logits [[ 3.6100209  -0.76876616  2.298833   -7.7573543 ]]
Iteration 700 of 1000: loss=1.22 " + "l1=1.07" + "l2=0.15 f=-0.645 shape=(1, 9000, 1)
logits [[ 3.3406167 -0.6763949  2.1323392 -7.3751893]]
Iteration 800 of 1000: loss=1.16 " + "l1=1.01" + "l2=0.15 f=-0.64 shape=(1, 9000, 1)
logits [[ 3.07824   -0.5916012  1.9754633 -7.0225277]]
Iteration 900 of 1000: loss=1.11 " + "l1=0.953" + "l2=0.153 f=-0.645 shape=(1, 9000, 1)
logits [[ 2.8409984  -0.55764914  1.8320129  -6.6938996 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=16 " + "l1=16" + "l2=0 f=-0.73 shape=(1, 9000, 1)
logits [[  5.5767193  -1.253107    3.1337872 -10.37684  ]]
Iteration 100 of 1000: loss=8.77 " + "l1=5.62" + "l2=3.15 f=-0.571 shape=(1, 9000, 1)
logits [[ 1.2076993  -0.28085274  1.2048025  -4.4156585 ]]
Iteration 200 of 1000: loss=6.39 " + "l1=2.75" + "l2=3.64 f=-0.503 shape=(1, 9000, 1)
logits [[ 0.12888259 -0.12846714  0.36778942 -2.3807306 ]]
Iteration 300 of 1000: loss=4.86 " + "l1=1.06" + "l2=3.8 f=-0.469 shape=(1, 9000, 1)
logits [[-0.63541174 -0.22186822  0.02040268 -1.0393757 ]]
Iteration 400 of 1000: loss=3.73 " + "l1=0.0616" + "l2=3.67 f=-0.4 shape=(1, 9000, 1)
logits [[-0.89430207 -0.29545093 -0.17341489 -0.2350002 ]]
Iteration 500 of 1000: loss=3.12 " + "l1=0" + "l2=3.12 f=-0.385 shape=(1, 9000, 1)
logits [[-0.8875642  -0.3040437  -0.18365937 -0.16376087]]
Iteration 600 of 1000: loss=2.76 " + "l1=0.0211" + "l2=2.74 f=-0.375 shape=(1, 9000, 1)
logits [[-0.78853464 -0.38642147 -0.15105744 -0.17216733]]
Iteration 700 of 1000: loss=2.44 " + "l1=0" + "l2=2.44 f=-0.362 shape=(1, 9000, 1)
logits [[-0.6953517  -0.46035895 -0.14717284 -0.14379713]]
Iteration 800 of 1000: loss=2.16 " + "l1=0" + "l2=2.16 f=-0.331 shape=(1, 9000, 1)
logits [[-0.5360514  -0.5606472  -0.12514305 -0.10179813]]
Iteration 900 of 1000: loss=1.91 " + "l1=0" + "l2=1.91 f=-0.313 shape=(1, 9000, 1)
logits [[-0.45001    -0.6466573  -0.09902932 -0.05516745]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=8.77 " + "l1=8.77" + "l2=0 f=-0.73 shape=(1, 9000, 1)
logits [[  5.5767193  -1.253107    3.1337872 -10.37684  ]]
Iteration 100 of 1000: loss=6.02 " + "l1=4.47" + "l2=1.55 f=-0.676 shape=(1, 9000, 1)
logits [[ 1.9358586  -0.37812877  1.9243753  -6.1873317 ]]
Iteration 200 of 1000: loss=4.99 " + "l1=3.35" + "l2=1.64 f=-0.623 shape=(1, 9000, 1)
logits [[ 1.3017858  -0.30810955  1.3030136  -4.7893825 ]]
Iteration 300 of 1000: loss=4.41 " + "l1=2.57" + "l2=1.84 f=-0.589 shape=(1, 9000, 1)
logits [[ 0.8491184  -0.23704724  0.8483304  -3.8163466 ]]
Iteration 400 of 1000: loss=3.81 " + "l1=1.82" + "l2=1.99 f=-0.539 shape=(1, 9000, 1)
logits [[ 0.44744858 -0.2501983   0.4818011  -2.833391  ]]
Iteration 500 of 1000: loss=3.1 " + "l1=1.14" + "l2=1.96 f=-0.502 shape=(1, 9000, 1)
logits [[ 0.06234117 -0.32591367  0.16491014 -1.9078618 ]]
Iteration 600 of 1000: loss=2.43 " + "l1=0.611" + "l2=1.81 f=-0.468 shape=(1, 9000, 1)
logits [[-0.33460107 -0.37835422 -0.02465065 -1.1352696 ]]
Iteration 700 of 1000: loss=1.83 " + "l1=0.0536" + "l2=1.78 f=-0.397 shape=(1, 9000, 1)
logits [[-0.5804362  -0.53295344 -0.18947752 -0.2869894 ]]
Iteration 800 of 1000: loss=1.5 " + "l1=0" + "l2=1.5 f=-0.373 shape=(1, 9000, 1)
logits [[-0.56131935 -0.6248316  -0.16224341 -0.14344591]]
Iteration 900 of 1000: loss=1.31 " + "l1=0.0274" + "l2=1.28 f=-0.36 shape=(1, 9000, 1)
logits [[-0.50687146 -0.6548429  -0.11419205 -0.16396156]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.18 " + "l1=5.18" + "l2=0 f=-0.73 shape=(1, 9000, 1)
logits [[  5.5767193  -1.253107    3.1337872 -10.37684  ]]
Iteration 100 of 1000: loss=4.19 " + "l1=3.59" + "l2=0.604 f=-0.675 shape=(1, 9000, 1)
logits [[ 3.3010392  -0.66162133  2.4045103  -7.745405  ]]
Iteration 200 of 1000: loss=3.67 " + "l1=2.78" + "l2=0.891 f=-0.67 shape=(1, 9000, 1)
logits [[ 2.1788607  -0.45755482  1.9665263  -6.369735  ]]
Iteration 300 of 1000: loss=3.3 " + "l1=2.33" + "l2=0.979 f=-0.644 shape=(1, 9000, 1)
logits [[ 1.6424583 -0.3692115  1.6529881 -5.502826 ]]
Iteration 400 of 1000: loss=3 " + "l1=2.03" + "l2=0.967 f=-0.617 shape=(1, 9000, 1)
logits [[ 1.3742331  -0.35461542  1.3788401  -4.865219  ]]
Iteration 500 of 1000: loss=2.63 " + "l1=1.68" + "l2=0.944 f=-0.598 shape=(1, 9000, 1)
logits [[ 1.037897  -0.3447345  1.0474782 -4.131423 ]]
Iteration 600 of 1000: loss=2.29 " + "l1=1.37" + "l2=0.915 f=-0.573 shape=(1, 9000, 1)
logits [[ 0.7636905 -0.3666302  0.7643468 -3.4521937]]
Iteration 700 of 1000: loss=1.94 " + "l1=1.04" + "l2=0.902 f=-0.544 shape=(1, 9000, 1)
logits [[ 0.48961833 -0.4524746   0.48986927 -2.702204  ]]
Iteration 800 of 1000: loss=1.64 " + "l1=0.734" + "l2=0.91 f=-0.504 shape=(1, 9000, 1)
logits [[ 0.16926277 -0.5017523   0.28735942 -1.9724836 ]]
Iteration 900 of 1000: loss=1.4 " + "l1=0.51" + "l2=0.892 f=-0.476 shape=(1, 9000, 1)
logits [[-0.07255679 -0.5177538   0.12871613 -1.4412612 ]]
--- 291.38318395614624 seconds ---
Adv result:3
Loading record A06590
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0269 " + "l1=0.0269" + "l2=0 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.566056   -1.1191168   0.90693074 -2.752872  ]]
Iteration 100 of 1000: loss=0.0262 " + "l1=0.0258" + "l2=0.000428 f=-0.344 shape=(1, 9000, 1)
logits [[ 1.5102209 -1.0691781  0.8808279 -2.6989725]]
Iteration 200 of 1000: loss=0.026 " + "l1=0.0256" + "l2=0.000456 f=-0.343 shape=(1, 9000, 1)
logits [[ 1.4994233 -1.059273   0.8760175 -2.6890044]]
Iteration 300 of 1000: loss=0.0259 " + "l1=0.0253" + "l2=0.000563 f=-0.342 shape=(1, 9000, 1)
logits [[ 1.4863119 -1.0483074  0.8706706 -2.677278 ]]
Iteration 400 of 1000: loss=0.0258 " + "l1=0.0251" + "l2=0.000647 f=-0.341 shape=(1, 9000, 1)
logits [[ 1.4734206  -1.0375298   0.86550444 -2.666156  ]]
Iteration 500 of 1000: loss=0.0257 " + "l1=0.0249" + "l2=0.000785 f=-0.34 shape=(1, 9000, 1)
logits [[ 1.4616476 -1.0274955  0.8607732 -2.6560903]]
Iteration 600 of 1000: loss=0.0256 " + "l1=0.0247" + "l2=0.000882 f=-0.339 shape=(1, 9000, 1)
logits [[ 1.4505726 -1.0176107  0.856391  -2.6472402]]
Iteration 700 of 1000: loss=0.0255 " + "l1=0.0245" + "l2=0.00105 f=-0.339 shape=(1, 9000, 1)
logits [[ 1.4402163 -1.00836    0.8523823 -2.6395462]]
Iteration 800 of 1000: loss=0.0254 " + "l1=0.0243" + "l2=0.00109 f=-0.338 shape=(1, 9000, 1)
logits [[ 1.4314457 -1.000207   0.848897  -2.6336598]]
Iteration 900 of 1000: loss=0.0254 " + "l1=0.0242" + "l2=0.00121 f=-0.338 shape=(1, 9000, 1)
logits [[ 1.423225  -0.9927618  0.8459038 -2.6286752]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.269 " + "l1=0.269" + "l2=0 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.566056   -1.1191168   0.90693074 -2.752872  ]]
Iteration 100 of 1000: loss=0.199 " + "l1=0.155" + "l2=0.0446 f=-0.295 shape=(1, 9000, 1)
logits [[ 0.9474647  -0.5996654   0.69364995 -2.220657  ]]
Iteration 200 of 1000: loss=0.161 " + "l1=0.098" + "l2=0.0631 f=-0.294 shape=(1, 9000, 1)
logits [[ 0.6178151  -0.3578204   0.62171245 -2.0571892 ]]
Iteration 300 of 1000: loss=0.146 " + "l1=0.0841" + "l2=0.0614 f=-0.292 shape=(1, 9000, 1)
logits [[ 0.5659334  -0.27555317  0.5645383  -2.0209649 ]]
Iteration 400 of 1000: loss=0.134 " + "l1=0.07" + "l2=0.0644 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.5110838  -0.18768671  0.51197475 -1.986799  ]]
Iteration 500 of 1000: loss=0.126 " + "l1=0.0579" + "l2=0.0677 f=-0.286 shape=(1, 9000, 1)
logits [[ 0.457157   -0.11167596  0.46730787 -1.9585696 ]]
Iteration 600 of 1000: loss=0.118 " + "l1=0.0496" + "l2=0.0685 f=-0.285 shape=(1, 9000, 1)
logits [[ 0.41828898 -0.06147242  0.43471217 -1.9328529 ]]
Iteration 700 of 1000: loss=0.112 " + "l1=0.0414" + "l2=0.0701 f=-0.282 shape=(1, 9000, 1)
logits [[ 0.39733022 -0.01708734  0.39632595 -1.906534  ]]
Iteration 800 of 1000: loss=0.106 " + "l1=0.0344" + "l2=0.0718 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.35342622  0.02522245  0.3690448  -1.8732253 ]]
Iteration 900 of 1000: loss=0.102 " + "l1=0.0295" + "l2=0.0723 f=-0.28 shape=(1, 9000, 1)
logits [[ 0.33748358  0.04953229  0.34481326 -1.8513578 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.69 " + "l1=2.69" + "l2=0 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.566056   -1.1191168   0.90693074 -2.752872  ]]
Iteration 100 of 1000: loss=0.263 " + "l1=0" + "l2=0.263 f=-0.302 shape=(1, 9000, 1)
logits [[ 0.01171366  0.30645913  0.2979393  -1.8247613 ]]
Iteration 200 of 1000: loss=0.19 " + "l1=0" + "l2=0.19 f=-0.311 shape=(1, 9000, 1)
logits [[ 0.04649945  0.31818303  0.29276153 -1.9029807 ]]
Iteration 300 of 1000: loss=0.156 " + "l1=0" + "l2=0.156 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.1191643   0.28975174  0.28602305 -1.9147654 ]]
Iteration 400 of 1000: loss=0.14 " + "l1=0" + "l2=0.14 f=-0.302 shape=(1, 9000, 1)
logits [[ 0.1433859   0.27929395  0.2764037  -1.9052119 ]]
Iteration 500 of 1000: loss=0.129 " + "l1=0" + "l2=0.129 f=-0.299 shape=(1, 9000, 1)
logits [[ 0.15724221  0.2712731   0.26777622 -1.8911784 ]]
Iteration 600 of 1000: loss=0.122 " + "l1=0" + "l2=0.122 f=-0.297 shape=(1, 9000, 1)
logits [[ 0.15856212  0.27022845  0.26210982 -1.8791144 ]]
Iteration 700 of 1000: loss=0.118 " + "l1=0" + "l2=0.118 f=-0.297 shape=(1, 9000, 1)
logits [[ 0.15312222  0.27263528  0.25426617 -1.8684211 ]]
Iteration 800 of 1000: loss=0.11 " + "l1=0" + "l2=0.11 f=-0.293 shape=(1, 9000, 1)
logits [[ 0.1896695   0.2534177   0.24298497 -1.8571295 ]]
Iteration 900 of 1000: loss=0.107 " + "l1=0" + "l2=0.107 f=-0.292 shape=(1, 9000, 1)
logits [[ 0.18209213  0.2585254   0.23496383 -1.8420663 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.48 " + "l1=1.48" + "l2=0 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.566056   -1.1191168   0.90693074 -2.752872  ]]
Iteration 100 of 1000: loss=0.246 " + "l1=0.00211" + "l2=0.244 f=-0.296 shape=(1, 9000, 1)
logits [[ 0.07639071  0.2993323   0.303164   -1.8648088 ]]
Iteration 200 of 1000: loss=0.176 " + "l1=0.00512" + "l2=0.171 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.1234583   0.28576684  0.29507524 -1.9220079 ]]
Iteration 300 of 1000: loss=0.145 " + "l1=0.000385" + "l2=0.144 f=-0.302 shape=(1, 9000, 1)
logits [[ 0.13881731  0.28235984  0.28305978 -1.9139454 ]]
Iteration 400 of 1000: loss=0.129 " + "l1=0" + "l2=0.129 f=-0.299 shape=(1, 9000, 1)
logits [[ 0.15653357  0.27190164  0.27051637 -1.8936414 ]]
Iteration 500 of 1000: loss=0.12 " + "l1=0" + "l2=0.12 f=-0.296 shape=(1, 9000, 1)
logits [[ 0.16076884  0.26676095  0.2603266  -1.8726479 ]]
Iteration 600 of 1000: loss=0.113 " + "l1=0" + "l2=0.113 f=-0.294 shape=(1, 9000, 1)
logits [[ 0.17190014  0.25725046  0.24652834 -1.8532982 ]]
Iteration 700 of 1000: loss=0.106 " + "l1=0" + "l2=0.106 f=-0.291 shape=(1, 9000, 1)
logits [[ 0.18593067  0.24634583  0.2454742  -1.8402216 ]]
Iteration 800 of 1000: loss=0.104 " + "l1=0" + "l2=0.104 f=-0.289 shape=(1, 9000, 1)
logits [[ 0.16690302  0.25584152  0.23812081 -1.8167301 ]]
Iteration 900 of 1000: loss=0.0996 " + "l1=0" + "l2=0.0996 f=-0.284 shape=(1, 9000, 1)
logits [[ 0.16640005  0.25210473  0.2368306  -1.7922292 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.873 " + "l1=0.873" + "l2=0 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.566056   -1.1191168   0.90693074 -2.752872  ]]
Iteration 100 of 1000: loss=0.274 " + "l1=0.0846" + "l2=0.19 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.28768036  0.11105235  0.37122002 -1.9025329 ]]
Iteration 200 of 1000: loss=0.174 " + "l1=0.00392" + "l2=0.17 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.1299907  0.2881611  0.300221  -1.9375163]]
Iteration 300 of 1000: loss=0.141 " + "l1=0" + "l2=0.141 f=-0.306 shape=(1, 9000, 1)
logits [[ 0.11927849  0.2918077   0.2821731  -1.9176532 ]]
Iteration 400 of 1000: loss=0.127 " + "l1=0.00415" + "l2=0.123 f=-0.3 shape=(1, 9000, 1)
logits [[ 0.1567344   0.2629724   0.27575523 -1.8943933 ]]
Iteration 500 of 1000: loss=0.116 " + "l1=0" + "l2=0.116 f=-0.299 shape=(1, 9000, 1)
logits [[ 0.14644217  0.2627765   0.25737455 -1.8609941 ]]
Iteration 600 of 1000: loss=0.109 " + "l1=0" + "l2=0.109 f=-0.297 shape=(1, 9000, 1)
logits [[ 0.14639437  0.26231834  0.2476538  -1.8456292 ]]
Iteration 700 of 1000: loss=0.102 " + "l1=0.00011" + "l2=0.102 f=-0.291 shape=(1, 9000, 1)
logits [[ 0.16963217  0.24537979  0.24571748 -1.8247617 ]]
Iteration 800 of 1000: loss=0.0974 " + "l1=0" + "l2=0.0974 f=-0.285 shape=(1, 9000, 1)
logits [[ 0.16674368  0.24354224  0.24329959 -1.7921951 ]]
Iteration 900 of 1000: loss=0.0936 " + "l1=0" + "l2=0.0936 f=-0.284 shape=(1, 9000, 1)
logits [[ 0.16610369  0.24225123  0.24024704 -1.7831913 ]]
--- 293.2379171848297 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00659 " + "l1=0.00659" + "l2=0 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.566056   -1.1191168   0.90693074 -2.752872  ]]
Iteration 100 of 1000: loss=0.0064 " + "l1=0.00623" + "l2=0.000169 f=-0.349 shape=(1, 9000, 1)
logits [[ 1.5331876 -1.1161716  0.9099593 -2.723232 ]]
Iteration 200 of 1000: loss=0.00635 " + "l1=0.0062" + "l2=0.000146 f=-0.349 shape=(1, 9000, 1)
logits [[ 1.5303254  -1.115782    0.91020304 -2.7208574 ]]
Iteration 300 of 1000: loss=0.00633 " + "l1=0.00614" + "l2=0.000188 f=-0.349 shape=(1, 9000, 1)
logits [[ 1.5249696  -1.1153126   0.91067964 -2.7165635 ]]
Iteration 400 of 1000: loss=0.00632 " + "l1=0.00608" + "l2=0.000236 f=-0.349 shape=(1, 9000, 1)
logits [[ 1.5193682  -1.1148494   0.91109747 -2.7120714 ]]
Iteration 500 of 1000: loss=0.00632 " + "l1=0.00602" + "l2=0.000292 f=-0.349 shape=(1, 9000, 1)
logits [[ 1.5137446 -1.1140918  0.9113156 -2.7074568]]
Iteration 600 of 1000: loss=0.00636 " + "l1=0.00597" + "l2=0.000394 f=-0.349 shape=(1, 9000, 1)
logits [[ 1.5081758 -1.1130822  0.9113089 -2.702849 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0659 " + "l1=0.0659" + "l2=0 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.566056   -1.1191168   0.90693074 -2.752872  ]]
Iteration 100 of 1000: loss=0.0479 " + "l1=0.0382" + "l2=0.00972 f=-0.34 shape=(1, 9000, 1)
logits [[ 1.3130258  -1.0745807   0.93133223 -2.5278735 ]]
Iteration 200 of 1000: loss=0.0387 " + "l1=0.0215" + "l2=0.0172 f=-0.33 shape=(1, 9000, 1)
logits [[ 1.1584003 -1.0236367  0.9437103 -2.40041  ]]
Iteration 300 of 1000: loss=0.0307 " + "l1=0.0076" + "l2=0.0231 f=-0.329 shape=(1, 9000, 1)
logits [[ 1.0382924 -1.0057284  0.9622467 -2.3097587]]
Iteration 400 of 1000: loss=0.0232 " + "l1=0.000566" + "l2=0.0227 f=-0.336 shape=(1, 9000, 1)
logits [[ 1.0128592 -1.0311065  1.0071968 -2.3313415]]
Iteration 500 of 1000: loss=0.0204 " + "l1=0.000284" + "l2=0.0201 f=-0.337 shape=(1, 9000, 1)
logits [[ 1.0082996 -1.0318154  1.005464  -2.3296535]]
Iteration 600 of 1000: loss=0.0188 " + "l1=0" + "l2=0.0188 f=-0.338 shape=(1, 9000, 1)
logits [[ 1.0025774 -1.0338763  1.0064186 -2.3282044]]
Iteration 700 of 1000: loss=0.0177 " + "l1=0" + "l2=0.0177 f=-0.34 shape=(1, 9000, 1)
logits [[ 1.0069401 -1.0381967  1.0070428 -2.3360825]]
Iteration 800 of 1000: loss=0.0171 " + "l1=0" + "l2=0.0171 f=-0.341 shape=(1, 9000, 1)
logits [[ 1.005092  -1.0386002  1.0067836 -2.3383393]]
Iteration 900 of 1000: loss=0.0166 " + "l1=0.000707" + "l2=0.0159 f=-0.342 shape=(1, 9000, 1)
logits [[ 1.0103431 -1.0379757  1.0032729 -2.344943 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0363 " + "l1=0.0363" + "l2=0 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.566056   -1.1191168   0.90693074 -2.752872  ]]
Iteration 100 of 1000: loss=0.031 " + "l1=0.0281" + "l2=0.00286 f=-0.346 shape=(1, 9000, 1)
logits [[ 1.4313371 -1.1023797  0.9206122 -2.6328852]]
Iteration 200 of 1000: loss=0.0289 " + "l1=0.0247" + "l2=0.00415 f=-0.343 shape=(1, 9000, 1)
logits [[ 1.3760104 -1.0934418  0.9268099 -2.5832715]]
Iteration 300 of 1000: loss=0.0273 " + "l1=0.0222" + "l2=0.00517 f=-0.343 shape=(1, 9000, 1)
logits [[ 1.3336223  -1.0887419   0.93057543 -2.5457718 ]]
Iteration 400 of 1000: loss=0.026 " + "l1=0.02" + "l2=0.00603 f=-0.342 shape=(1, 9000, 1)
logits [[ 1.2956194 -1.0836911  0.9324202 -2.513205 ]]
Iteration 500 of 1000: loss=0.0247 " + "l1=0.0175" + "l2=0.00728 f=-0.34 shape=(1, 9000, 1)
logits [[ 1.251248   -1.0714916   0.93365544 -2.473438  ]]
Iteration 600 of 1000: loss=0.0236 " + "l1=0.0154" + "l2=0.00819 f=-0.339 shape=(1, 9000, 1)
logits [[ 1.2146807 -1.0627505  0.9344347 -2.442308 ]]
Iteration 700 of 1000: loss=0.0225 " + "l1=0.0131" + "l2=0.00941 f=-0.338 shape=(1, 9000, 1)
logits [[ 1.1775736 -1.057153   0.9394173 -2.4115875]]
Iteration 800 of 1000: loss=0.0214 " + "l1=0.0104" + "l2=0.011 f=-0.336 shape=(1, 9000, 1)
logits [[ 1.1309662  -1.0433986   0.94272834 -2.3762124 ]]
Iteration 900 of 1000: loss=0.0202 " + "l1=0.00789" + "l2=0.0123 f=-0.337 shape=(1, 9000, 1)
logits [[ 1.092715  -1.037116   0.9492116 -2.3512805]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0511 " + "l1=0.0511" + "l2=0 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.566056   -1.1191168   0.90693074 -2.752872  ]]
Iteration 100 of 1000: loss=0.0403 " + "l1=0.0343" + "l2=0.00601 f=-0.342 shape=(1, 9000, 1)
logits [[ 1.3683205 -1.0867716  0.9261339 -2.5769932]]
Iteration 200 of 1000: loss=0.0362 " + "l1=0.0277" + "l2=0.00854 f=-0.339 shape=(1, 9000, 1)
logits [[ 1.2907739 -1.0746168  0.9336392 -2.5077004]]
Iteration 300 of 1000: loss=0.0321 " + "l1=0.0195" + "l2=0.0126 f=-0.335 shape=(1, 9000, 1)
logits [[ 1.1912915 -1.0442506  0.939816  -2.4251957]]
Iteration 400 of 1000: loss=0.028 " + "l1=0.0123" + "l2=0.0157 f=-0.331 shape=(1, 9000, 1)
logits [[ 1.1066618  -1.0206639   0.94813555 -2.3589857 ]]
Iteration 500 of 1000: loss=0.0246 " + "l1=0.00626" + "l2=0.0183 f=-0.33 shape=(1, 9000, 1)
logits [[ 1.0341821 -1.0098467  0.9534673 -2.2994287]]
Iteration 600 of 1000: loss=0.0216 " + "l1=0.000938" + "l2=0.0206 f=-0.331 shape=(1, 9000, 1)
logits [[ 0.97537065 -1.0040544   0.96326417 -2.2586064 ]]
Iteration 700 of 1000: loss=0.0195 " + "l1=5.09e-05" + "l2=0.0194 f=-0.332 shape=(1, 9000, 1)
logits [[ 0.965365  -1.0030448  0.9647084 -2.2536795]]
Iteration 800 of 1000: loss=0.0185 " + "l1=9.96e-06" + "l2=0.0185 f=-0.332 shape=(1, 9000, 1)
logits [[ 0.965502  -1.0035475  0.9653735 -2.2563372]]
Iteration 900 of 1000: loss=0.0177 " + "l1=0" + "l2=0.0177 f=-0.333 shape=(1, 9000, 1)
logits [[ 0.9652545  -1.0057585   0.96621454 -2.2581184 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0437 " + "l1=0.0437" + "l2=0 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.566056   -1.1191168   0.90693074 -2.752872  ]]
Iteration 100 of 1000: loss=0.0359 " + "l1=0.0317" + "l2=0.00425 f=-0.344 shape=(1, 9000, 1)
logits [[ 1.4012636  -1.0957321   0.92317146 -2.6058571 ]]
Iteration 200 of 1000: loss=0.0329 " + "l1=0.0269" + "l2=0.00603 f=-0.342 shape=(1, 9000, 1)
logits [[ 1.3372129  -1.0879847   0.93150985 -2.5491061 ]]
Iteration 300 of 1000: loss=0.0305 " + "l1=0.0226" + "l2=0.00796 f=-0.34 shape=(1, 9000, 1)
logits [[ 1.2748698 -1.0733252  0.9338549 -2.494185 ]]
Iteration 400 of 1000: loss=0.0282 " + "l1=0.0183" + "l2=0.00988 f=-0.337 shape=(1, 9000, 1)
logits [[ 1.2122262 -1.057365   0.9363428 -2.4408243]]
Iteration 500 of 1000: loss=0.0256 " + "l1=0.0126" + "l2=0.013 f=-0.334 shape=(1, 9000, 1)
logits [[ 1.1370078  -1.0359917   0.94725853 -2.3839273 ]]
Iteration 600 of 1000: loss=0.0235 " + "l1=0.00882" + "l2=0.0147 f=-0.333 shape=(1, 9000, 1)
logits [[ 1.083772   -1.0265164   0.95065856 -2.3418617 ]]
Iteration 700 of 1000: loss=0.0216 " + "l1=0.00473" + "l2=0.0169 f=-0.332 shape=(1, 9000, 1)
logits [[ 1.0236048  -1.0111436   0.95220304 -2.2923808 ]]
Iteration 800 of 1000: loss=0.0199 " + "l1=0.00222" + "l2=0.0177 f=-0.333 shape=(1, 9000, 1)
logits [[ 0.9901757 -1.0099174  0.9566582 -2.2683425]]
Iteration 900 of 1000: loss=0.0187 " + "l1=0.000656" + "l2=0.018 f=-0.333 shape=(1, 9000, 1)
logits [[ 0.9695887 -1.0090351  0.9596832 -2.2537122]]
--- 266.3198447227478 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0432 " + "l1=0.0432" + "l2=0 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.566056   -1.1191168   0.90693074 -2.752872  ]]
Iteration 100 of 1000: loss=0.0422 " + "l1=0.0416" + "l2=0.000585 f=-0.344 shape=(1, 9000, 1)
logits [[ 1.4948139  -1.0866562   0.88568854 -2.668354  ]]
Iteration 200 of 1000: loss=0.0419 " + "l1=0.0413" + "l2=0.000663 f=-0.342 shape=(1, 9000, 1)
logits [[ 1.4773566 -1.0786197  0.8805653 -2.64792  ]]
Iteration 300 of 1000: loss=0.0417 " + "l1=0.0408" + "l2=0.000845 f=-0.341 shape=(1, 9000, 1)
logits [[ 1.4581383 -1.0703906  0.8747362 -2.6257443]]
Iteration 400 of 1000: loss=0.0414 " + "l1=0.0404" + "l2=0.00099 f=-0.34 shape=(1, 9000, 1)
logits [[ 1.4395344 -1.0624357  0.8687556 -2.6040363]]
Iteration 500 of 1000: loss=0.0412 " + "l1=0.0401" + "l2=0.00111 f=-0.339 shape=(1, 9000, 1)
logits [[ 1.4242233 -1.057299   0.8636913 -2.5860243]]
Iteration 600 of 1000: loss=0.0411 " + "l1=0.0398" + "l2=0.00128 f=-0.338 shape=(1, 9000, 1)
logits [[ 1.4095557 -1.0526869  0.8590527 -2.568233 ]]
Iteration 700 of 1000: loss=0.0409 " + "l1=0.0394" + "l2=0.0015 f=-0.337 shape=(1, 9000, 1)
logits [[ 1.394469   -1.0481508   0.85422534 -2.5501015 ]]
Iteration 800 of 1000: loss=0.0408 " + "l1=0.0391" + "l2=0.00167 f=-0.337 shape=(1, 9000, 1)
logits [[ 1.3784457  -1.0437188   0.84865403 -2.5309355 ]]
Iteration 900 of 1000: loss=0.0407 " + "l1=0.0388" + "l2=0.00188 f=-0.337 shape=(1, 9000, 1)
logits [[ 1.363717   -1.0397428   0.84335905 -2.5133698 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.432 " + "l1=0.432" + "l2=0 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.566056   -1.1191168   0.90693074 -2.752872  ]]
Iteration 100 of 1000: loss=0.33 " + "l1=0.274" + "l2=0.0559 f=-0.294 shape=(1, 9000, 1)
logits [[ 0.8000206  -0.76007336  0.72053665 -1.9382539 ]]
Iteration 200 of 1000: loss=0.293 " + "l1=0.239" + "l2=0.054 f=-0.292 shape=(1, 9000, 1)
logits [[ 0.64496773 -0.7150468   0.6457485  -1.7427093 ]]
Iteration 300 of 1000: loss=0.272 " + "l1=0.22" + "l2=0.0528 f=-0.291 shape=(1, 9000, 1)
logits [[ 0.57655394 -0.7044936   0.5809066  -1.6153841 ]]
Iteration 400 of 1000: loss=0.255 " + "l1=0.199" + "l2=0.0567 f=-0.291 shape=(1, 9000, 1)
logits [[ 0.49742696 -0.66982     0.49885318 -1.4884906 ]]
Iteration 500 of 1000: loss=0.242 " + "l1=0.182" + "l2=0.0597 f=-0.293 shape=(1, 9000, 1)
logits [[ 0.4297841 -0.6494724  0.4343264 -1.3884099]]
Iteration 600 of 1000: loss=0.231 " + "l1=0.17" + "l2=0.0611 f=-0.295 shape=(1, 9000, 1)
logits [[ 0.3854445  -0.6446266   0.38893315 -1.3104223 ]]
Iteration 700 of 1000: loss=0.22 " + "l1=0.155" + "l2=0.0649 f=-0.294 shape=(1, 9000, 1)
logits [[ 0.32291272 -0.6305788   0.34308073 -1.2099229 ]]
Iteration 800 of 1000: loss=0.209 " + "l1=0.14" + "l2=0.0696 f=-0.29 shape=(1, 9000, 1)
logits [[ 0.2407144  -0.6138663   0.30449298 -1.0914981 ]]
Iteration 900 of 1000: loss=0.198 " + "l1=0.121" + "l2=0.0774 f=-0.286 shape=(1, 9000, 1)
logits [[ 0.12656558 -0.58050627  0.25846663 -0.94924545]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.32 " + "l1=4.32" + "l2=0 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.566056   -1.1191168   0.90693074 -2.752872  ]]
Iteration 100 of 1000: loss=0.835 " + "l1=0" + "l2=0.835 f=-0.227 shape=(1, 9000, 1)
logits [[-0.5671895  -0.15884778 -0.09171078 -0.08904804]]
Iteration 200 of 1000: loss=0.593 " + "l1=0" + "l2=0.593 f=-0.227 shape=(1, 9000, 1)
logits [[-0.571319   -0.18056159 -0.08578199 -0.07216877]]
Iteration 300 of 1000: loss=0.468 " + "l1=0.00264" + "l2=0.465 f=-0.234 shape=(1, 9000, 1)
logits [[-0.55309564 -0.21758683 -0.08150175 -0.08414585]]
Iteration 400 of 1000: loss=0.388 " + "l1=0" + "l2=0.388 f=-0.237 shape=(1, 9000, 1)
logits [[-0.55388147 -0.22071078 -0.09244277 -0.07905569]]
Iteration 500 of 1000: loss=0.319 " + "l1=0" + "l2=0.319 f=-0.24 shape=(1, 9000, 1)
logits [[-0.52985984 -0.25497693 -0.09629083 -0.08000614]]
Iteration 600 of 1000: loss=0.269 " + "l1=0" + "l2=0.269 f=-0.244 shape=(1, 9000, 1)
logits [[-0.5251522  -0.2855472  -0.08706179 -0.07939566]]
Iteration 700 of 1000: loss=0.236 " + "l1=0" + "l2=0.236 f=-0.245 shape=(1, 9000, 1)
logits [[-0.52520365 -0.30424875 -0.08738011 -0.06415289]]
Iteration 800 of 1000: loss=0.207 " + "l1=0" + "l2=0.207 f=-0.242 shape=(1, 9000, 1)
logits [[-0.47472396 -0.34092626 -0.07852291 -0.07438394]]
Iteration 900 of 1000: loss=0.19 " + "l1=0" + "l2=0.19 f=-0.242 shape=(1, 9000, 1)
logits [[-0.46850678 -0.36949044 -0.07219991 -0.05670486]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.38 " + "l1=2.38" + "l2=0 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.566056   -1.1191168   0.90693074 -2.752872  ]]
Iteration 100 of 1000: loss=0.848 " + "l1=0.306" + "l2=0.542 f=-0.241 shape=(1, 9000, 1)
logits [[-0.32339346 -0.21102184  0.06280428 -0.49317807]]
Iteration 200 of 1000: loss=0.514 " + "l1=0" + "l2=0.514 f=-0.237 shape=(1, 9000, 1)
logits [[-0.59890294 -0.20681183 -0.07530573 -0.06677825]]
Iteration 300 of 1000: loss=0.356 " + "l1=0" + "l2=0.356 f=-0.246 shape=(1, 9000, 1)
logits [[-0.56139517 -0.2601804  -0.08328912 -0.07785341]]
Iteration 400 of 1000: loss=0.268 " + "l1=0.00669" + "l2=0.262 f=-0.248 shape=(1, 9000, 1)
logits [[-0.53488594 -0.29674563 -0.07494564 -0.08710336]]
Iteration 500 of 1000: loss=0.221 " + "l1=0" + "l2=0.221 f=-0.25 shape=(1, 9000, 1)
logits [[-0.5241832  -0.3320521  -0.07736605 -0.06452861]]
Iteration 600 of 1000: loss=0.193 " + "l1=0" + "l2=0.193 f=-0.251 shape=(1, 9000, 1)
logits [[-0.50892633 -0.3713848  -0.06950156 -0.05323708]]
Iteration 700 of 1000: loss=0.175 " + "l1=0" + "l2=0.175 f=-0.253 shape=(1, 9000, 1)
logits [[-0.4884114  -0.42121273 -0.05988673 -0.04080646]]
Iteration 800 of 1000: loss=0.162 " + "l1=0" + "l2=0.162 f=-0.252 shape=(1, 9000, 1)
logits [[-0.47675928 -0.45206136 -0.04854637 -0.03194557]]
Iteration 900 of 1000: loss=0.151 " + "l1=0" + "l2=0.151 f=-0.253 shape=(1, 9000, 1)
logits [[-0.45084408 -0.49062788 -0.03758445 -0.03127988]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.4 " + "l1=1.4" + "l2=0 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.566056   -1.1191168   0.90693074 -2.752872  ]]
Iteration 100 of 1000: loss=0.715 " + "l1=0.492" + "l2=0.224 f=-0.259 shape=(1, 9000, 1)
logits [[ 0.2151664  -0.37915492  0.32122084 -1.191988  ]]
Iteration 200 of 1000: loss=0.546 " + "l1=0.285" + "l2=0.261 f=-0.256 shape=(1, 9000, 1)
logits [[-0.13094051 -0.30996993  0.14734848 -0.72958267]]
Iteration 300 of 1000: loss=0.372 " + "l1=0.0576" + "l2=0.314 f=-0.254 shape=(1, 9000, 1)
logits [[-0.49990296 -0.28055444 -0.0298525  -0.20704615]]
Iteration 400 of 1000: loss=0.238 " + "l1=0" + "l2=0.238 f=-0.257 shape=(1, 9000, 1)
logits [[-0.570625   -0.3167035  -0.07066172 -0.06965806]]
Iteration 500 of 1000: loss=0.201 " + "l1=0" + "l2=0.201 f=-0.256 shape=(1, 9000, 1)
logits [[-0.5498056  -0.35531086 -0.06553096 -0.05177811]]
Iteration 600 of 1000: loss=0.18 " + "l1=0" + "l2=0.18 f=-0.253 shape=(1, 9000, 1)
logits [[-0.52062786 -0.3938719  -0.05561808 -0.04118003]]
Iteration 700 of 1000: loss=0.164 " + "l1=0" + "l2=0.164 f=-0.249 shape=(1, 9000, 1)
logits [[-0.4975104  -0.42904907 -0.03847619 -0.03295659]]
Iteration 800 of 1000: loss=0.152 " + "l1=0" + "l2=0.152 f=-0.248 shape=(1, 9000, 1)
logits [[-0.47117633 -0.46944964 -0.02545583 -0.02399368]]
Iteration 900 of 1000: loss=0.144 " + "l1=0" + "l2=0.144 f=-0.247 shape=(1, 9000, 1)
logits [[-0.4692063  -0.49229258 -0.01972299 -0.00603691]]
--- 291.70865845680237 seconds ---
Adv result:3
Loading record A06610
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0204 " + "l1=0.0204" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 1.2266752 -0.8145923  1.2003037 -3.539267 ]]
Iteration 100 of 1000: loss=0.0194 " + "l1=0.0188" + "l2=0.000597 f=-0.485 shape=(1, 9000, 1)
logits [[ 1.1540285 -0.7263721  1.1545043 -3.523602 ]]
Iteration 200 of 1000: loss=0.0192 " + "l1=0.0186" + "l2=0.000671 f=-0.486 shape=(1, 9000, 1)
logits [[ 1.1447343  -0.71069354  1.1445994  -3.5213263 ]]
Iteration 300 of 1000: loss=0.0191 " + "l1=0.0184" + "l2=0.000759 f=-0.486 shape=(1, 9000, 1)
logits [[ 1.1368582 -0.6991623  1.1372697 -3.5191784]]
Iteration 400 of 1000: loss=0.019 " + "l1=0.0182" + "l2=0.000863 f=-0.486 shape=(1, 9000, 1)
logits [[ 1.1295447 -0.6881595  1.1301159 -3.5173259]]
Iteration 500 of 1000: loss=0.019 " + "l1=0.018" + "l2=0.000991 f=-0.487 shape=(1, 9000, 1)
logits [[ 1.1233968 -0.6791896  1.1242001 -3.5153153]]
Iteration 600 of 1000: loss=0.019 " + "l1=0.0179" + "l2=0.00107 f=-0.487 shape=(1, 9000, 1)
logits [[ 1.1198297 -0.67283    1.1198132 -3.5137994]]
Iteration 700 of 1000: loss=0.019 " + "l1=0.0178" + "l2=0.00119 f=-0.487 shape=(1, 9000, 1)
logits [[ 1.1153052  -0.66669893  1.1158834  -3.5121021 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.204 " + "l1=0.204" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 1.2266752 -0.8145923  1.2003037 -3.539267 ]]
Iteration 100 of 1000: loss=0.14 " + "l1=0.111" + "l2=0.029 f=-0.523 shape=(1, 9000, 1)
logits [[ 0.710747   -0.20181035  0.9086237  -3.5097258 ]]
Iteration 200 of 1000: loss=0.126 " + "l1=0.0939" + "l2=0.0318 f=-0.53 shape=(1, 9000, 1)
logits [[ 0.6140177  -0.08661091  0.8526896  -3.498495  ]]
Iteration 300 of 1000: loss=0.117 " + "l1=0.0801" + "l2=0.0365 f=-0.537 shape=(1, 9000, 1)
logits [[ 0.52061176  0.0102999   0.8114868  -3.4907775 ]]
Iteration 400 of 1000: loss=0.11 " + "l1=0.0687" + "l2=0.0411 f=-0.543 shape=(1, 9000, 1)
logits [[ 0.44114843  0.09001057  0.77671957 -3.4811363 ]]
Iteration 500 of 1000: loss=0.104 " + "l1=0.0599" + "l2=0.0444 f=-0.547 shape=(1, 9000, 1)
logits [[ 0.3794134   0.14967121  0.74856406 -3.4644156 ]]
Iteration 600 of 1000: loss=0.0997 " + "l1=0.0522" + "l2=0.0475 f=-0.549 shape=(1, 9000, 1)
logits [[ 0.3247684   0.20118634  0.7229648  -3.4455588 ]]
Iteration 700 of 1000: loss=0.0957 " + "l1=0.0458" + "l2=0.0499 f=-0.551 shape=(1, 9000, 1)
logits [[ 0.28132012  0.24373867  0.7019261  -3.42915   ]]
Iteration 800 of 1000: loss=0.0924 " + "l1=0.041" + "l2=0.0513 f=-0.551 shape=(1, 9000, 1)
logits [[ 0.24754271  0.27529824  0.68572444 -3.4123142 ]]
Iteration 900 of 1000: loss=0.0897 " + "l1=0.0372" + "l2=0.0525 f=-0.551 shape=(1, 9000, 1)
logits [[ 0.21988572  0.29999298  0.67215174 -3.396835  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.04 " + "l1=2.04" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 1.2266752 -0.8145923  1.2003037 -3.539267 ]]
Iteration 100 of 1000: loss=0.221 " + "l1=0" + "l2=0.221 f=-0.586 shape=(1, 9000, 1)
logits [[-0.13324884  0.6083154   0.6059287  -3.4261494 ]]
Iteration 200 of 1000: loss=0.156 " + "l1=0" + "l2=0.156 f=-0.587 shape=(1, 9000, 1)
logits [[-0.10938309  0.61049825  0.59493095 -3.444157  ]]
Iteration 300 of 1000: loss=0.127 " + "l1=0" + "l2=0.127 f=-0.585 shape=(1, 9000, 1)
logits [[-0.0804517  0.5958086  0.5907735 -3.4467194]]
Iteration 400 of 1000: loss=0.115 " + "l1=0" + "l2=0.115 f=-0.584 shape=(1, 9000, 1)
logits [[-0.07346771  0.5951944   0.58384365 -3.4396892 ]]
Iteration 500 of 1000: loss=0.107 " + "l1=0" + "l2=0.107 f=-0.581 shape=(1, 9000, 1)
logits [[-0.07155976  0.5926663   0.5771684  -3.4221184 ]]
Iteration 600 of 1000: loss=0.0991 " + "l1=0.00146" + "l2=0.0977 f=-0.577 shape=(1, 9000, 1)
logits [[-0.05565678  0.57523143  0.57669246 -3.4023697 ]]
Iteration 700 of 1000: loss=0.102 " + "l1=0.00985" + "l2=0.0918 f=-0.573 shape=(1, 9000, 1)
logits [[-0.04875437  0.56605667  0.57590693 -3.3867989 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.12 " + "l1=1.12" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 1.2266752 -0.8145923  1.2003037 -3.539267 ]]
Iteration 100 of 1000: loss=0.222 " + "l1=0.00477" + "l2=0.217 f=-0.587 shape=(1, 9000, 1)
logits [[-0.13204923  0.6047111   0.61337495 -3.435611  ]]
Iteration 200 of 1000: loss=0.148 " + "l1=0" + "l2=0.148 f=-0.588 shape=(1, 9000, 1)
logits [[-0.10136226  0.60931003  0.6014418  -3.4609985 ]]
Iteration 300 of 1000: loss=0.122 " + "l1=0" + "l2=0.122 f=-0.586 shape=(1, 9000, 1)
logits [[-0.07553404  0.6007107   0.5951702  -3.4636767 ]]
Iteration 400 of 1000: loss=0.108 " + "l1=0.000171" + "l2=0.107 f=-0.582 shape=(1, 9000, 1)
logits [[-0.06251513  0.5904578   0.59076786 -3.44762   ]]
Iteration 500 of 1000: loss=0.0993 " + "l1=0" + "l2=0.0993 f=-0.579 shape=(1, 9000, 1)
logits [[-0.06166976  0.58650655  0.58649117 -3.428978  ]]
Iteration 600 of 1000: loss=0.0963 " + "l1=0" + "l2=0.0963 f=-0.577 shape=(1, 9000, 1)
logits [[-0.07736852  0.59665     0.5772028  -3.406255  ]]
Iteration 700 of 1000: loss=0.0922 " + "l1=0" + "l2=0.0922 f=-0.574 shape=(1, 9000, 1)
logits [[-0.075562    0.59262717  0.57320654 -3.3877015 ]]
Iteration 800 of 1000: loss=0.0876 " + "l1=0" + "l2=0.0876 f=-0.571 shape=(1, 9000, 1)
logits [[-0.06670169  0.58020383  0.57210606 -3.3708727 ]]
Iteration 900 of 1000: loss=0.0867 " + "l1=0" + "l2=0.0867 f=-0.57 shape=(1, 9000, 1)
logits [[-0.07554843  0.58454794  0.5648854  -3.3521051 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.663 " + "l1=0.663" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 1.2266752 -0.8145923  1.2003037 -3.539267 ]]
Iteration 100 of 1000: loss=0.249 " + "l1=0.111" + "l2=0.138 f=-0.568 shape=(1, 9000, 1)
logits [[ 0.14477065  0.3512291   0.6933142  -3.4629555 ]]
Iteration 200 of 1000: loss=0.155 " + "l1=0.00137" + "l2=0.153 f=-0.586 shape=(1, 9000, 1)
logits [[-0.08415259  0.6000831   0.60431063 -3.464173  ]]
Iteration 300 of 1000: loss=0.121 " + "l1=0.00273" + "l2=0.119 f=-0.583 shape=(1, 9000, 1)
logits [[-0.05181374  0.59064007  0.5990387  -3.469408  ]]
Iteration 400 of 1000: loss=0.106 " + "l1=0.000488" + "l2=0.106 f=-0.581 shape=(1, 9000, 1)
logits [[-0.0556901   0.59046733  0.5919686  -3.4509296 ]]
Iteration 500 of 1000: loss=0.0982 " + "l1=0" + "l2=0.0982 f=-0.579 shape=(1, 9000, 1)
logits [[-0.06184997  0.58981663  0.58857477 -3.4324563 ]]
Iteration 600 of 1000: loss=0.0932 " + "l1=0" + "l2=0.0932 f=-0.576 shape=(1, 9000, 1)
logits [[-0.06318023  0.5873603   0.5841476  -3.414191  ]]
Iteration 700 of 1000: loss=0.0913 " + "l1=0.00395" + "l2=0.0873 f=-0.572 shape=(1, 9000, 1)
logits [[-0.04971886  0.57071596  0.5828714  -3.3913064 ]]
Iteration 800 of 1000: loss=0.0857 " + "l1=0" + "l2=0.0857 f=-0.57 shape=(1, 9000, 1)
logits [[-0.05854917  0.57544655  0.57485515 -3.3718338 ]]
Iteration 900 of 1000: loss=0.0858 " + "l1=0" + "l2=0.0858 f=-0.568 shape=(1, 9000, 1)
logits [[-0.07014862  0.58451015  0.5652847  -3.3526251 ]]
--- 251.5103783607483 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.000264 " + "l1=0.000264" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 1.2266752 -0.8145923  1.2003037 -3.539267 ]]
Iteration 100 of 1000: loss=8.23e-05 " + "l1=1.32e-07" + "l2=8.21e-05 f=-0.484 shape=(1, 9000, 1)
logits [[ 1.20387    -0.80812436  1.2038568  -3.53386   ]]
Iteration 200 of 1000: loss=5.8e-05 " + "l1=8.29e-07" + "l2=5.71e-05 f=-0.483 shape=(1, 9000, 1)
logits [[ 1.2035643  -0.80719227  1.2034814  -3.5337837 ]]
Iteration 300 of 1000: loss=5.74e-05 " + "l1=1.78e-07" + "l2=5.72e-05 f=-0.483 shape=(1, 9000, 1)
logits [[ 1.2034727  -0.80703235  1.203455   -3.533819  ]]
Iteration 400 of 1000: loss=7.4e-05 " + "l1=0" + "l2=7.4e-05 f=-0.484 shape=(1, 9000, 1)
logits [[ 1.2034101 -0.8070489  1.2035319 -3.5339184]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.000132 " + "l1=0.000132" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 1.2266752 -0.8145923  1.2003037 -3.539267 ]]
Iteration 100 of 1000: loss=8.12e-05 " + "l1=4.18e-06" + "l2=7.71e-05 f=-0.484 shape=(1, 9000, 1)
logits [[ 1.2045401 -0.8082184  1.2037042 -3.5340655]]
Iteration 200 of 1000: loss=5.81e-05 " + "l1=0" + "l2=5.81e-05 f=-0.484 shape=(1, 9000, 1)
logits [[ 1.2034309 -0.807061   1.2034605 -3.5338554]]
Iteration 300 of 1000: loss=5.98e-05 " + "l1=0" + "l2=5.98e-05 f=-0.484 shape=(1, 9000, 1)
logits [[ 1.2033867 -0.8069446  1.2034386 -3.5339398]]
const [0.0025]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.59e-05 " + "l1=6.59e-05" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 1.2266752 -0.8145923  1.2003037 -3.539267 ]]
Iteration 100 of 1000: loss=6.82e-05 " + "l1=1.82e-05" + "l2=5e-05 f=-0.483 shape=(1, 9000, 1)
logits [[ 1.210349   -0.81056845  1.203072   -3.5352807 ]]
const [0.00125]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.3e-05 " + "l1=3.3e-05" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 1.2266752 -0.8145923  1.2003037 -3.539267 ]]
Iteration 100 of 1000: loss=5.19e-05 " + "l1=1.38e-05" + "l2=3.8e-05 f=-0.483 shape=(1, 9000, 1)
logits [[ 1.2138615  -0.81181496  1.2027899  -3.536273  ]]
const [0.000625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.65e-05 " + "l1=1.65e-05" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 1.2266752 -0.8145923  1.2003037 -3.539267 ]]
Iteration 100 of 1000: loss=3.65e-05 " + "l1=8.7e-06" + "l2=2.78e-05 f=-0.483 shape=(1, 9000, 1)
logits [[ 1.2164307  -0.81261986  1.2025065  -3.5369418 ]]
--- 66.29257607460022 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0477 " + "l1=0.0477" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 1.2266752 -0.8145923  1.2003037 -3.539267 ]]
Iteration 100 of 1000: loss=0.0469 " + "l1=0.0465" + "l2=0.000395 f=-0.48 shape=(1, 9000, 1)
logits [[ 1.1710435 -0.7784633  1.1712075 -3.482407 ]]
Iteration 200 of 1000: loss=0.0468 " + "l1=0.0464" + "l2=0.000409 f=-0.479 shape=(1, 9000, 1)
logits [[ 1.1640997  -0.77265173  1.1639811  -3.4713192 ]]
Iteration 300 of 1000: loss=0.0466 " + "l1=0.0461" + "l2=0.000477 f=-0.478 shape=(1, 9000, 1)
logits [[ 1.156862  -0.7684681  1.1569461 -3.4578936]]
Iteration 400 of 1000: loss=0.0466 " + "l1=0.046" + "l2=0.000599 f=-0.477 shape=(1, 9000, 1)
logits [[ 1.1505319  -0.76560706  1.1506798  -3.444604  ]]
Iteration 500 of 1000: loss=0.0464 " + "l1=0.0458" + "l2=0.000673 f=-0.476 shape=(1, 9000, 1)
logits [[ 1.1453831  -0.76404804  1.1452703  -3.4316912 ]]
Iteration 600 of 1000: loss=0.0464 " + "l1=0.0456" + "l2=0.000803 f=-0.475 shape=(1, 9000, 1)
logits [[ 1.1397009  -0.76213914  1.1401881  -3.4191146 ]]
Iteration 700 of 1000: loss=0.0463 " + "l1=0.0454" + "l2=0.00091 f=-0.474 shape=(1, 9000, 1)
logits [[ 1.1359775 -0.7618449  1.1360116 -3.4074366]]
Iteration 800 of 1000: loss=0.0463 " + "l1=0.0453" + "l2=0.00102 f=-0.473 shape=(1, 9000, 1)
logits [[ 1.1316859 -0.7607408  1.1317916 -3.396565 ]]
Iteration 900 of 1000: loss=0.0463 " + "l1=0.0451" + "l2=0.00117 f=-0.473 shape=(1, 9000, 1)
logits [[ 1.1275239  -0.75932163  1.1278803  -3.3870707 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.477 " + "l1=0.477" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 1.2266752 -0.8145923  1.2003037 -3.539267 ]]
Iteration 100 of 1000: loss=0.431 " + "l1=0.411" + "l2=0.0205 f=-0.458 shape=(1, 9000, 1)
logits [[ 0.9191089  -0.59542733  0.9763815  -3.13025   ]]
Iteration 200 of 1000: loss=0.412 " + "l1=0.384" + "l2=0.0282 f=-0.442 shape=(1, 9000, 1)
logits [[ 0.82124895 -0.5721742   0.9109238  -2.9266603 ]]
Iteration 300 of 1000: loss=0.395 " + "l1=0.359" + "l2=0.036 f=-0.427 shape=(1, 9000, 1)
logits [[ 0.73054683 -0.55178756  0.85040057 -2.7357967 ]]
Iteration 400 of 1000: loss=0.378 " + "l1=0.334" + "l2=0.0442 f=-0.411 shape=(1, 9000, 1)
logits [[ 0.6492543  -0.5404069   0.79455394 -2.5474696 ]]
Iteration 500 of 1000: loss=0.365 " + "l1=0.314" + "l2=0.0514 f=-0.397 shape=(1, 9000, 1)
logits [[ 0.5914073  -0.54187274  0.74958336 -2.3859422 ]]
Iteration 600 of 1000: loss=0.352 " + "l1=0.293" + "l2=0.0591 f=-0.385 shape=(1, 9000, 1)
logits [[ 0.514655   -0.53567255  0.70583934 -2.2263138 ]]
Iteration 700 of 1000: loss=0.341 " + "l1=0.274" + "l2=0.0674 f=-0.377 shape=(1, 9000, 1)
logits [[ 0.42824078 -0.50799143  0.6555033  -2.0829926 ]]
Iteration 800 of 1000: loss=0.331 " + "l1=0.257" + "l2=0.0739 f=-0.367 shape=(1, 9000, 1)
logits [[ 0.376031  -0.5099258  0.6190808 -1.9519694]]
Iteration 900 of 1000: loss=0.321 " + "l1=0.241" + "l2=0.0802 f=-0.355 shape=(1, 9000, 1)
logits [[ 0.3276094  -0.50283396  0.5827596  -1.8272246 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.77 " + "l1=4.77" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 1.2266752 -0.8145923  1.2003037 -3.539267 ]]
Iteration 100 of 1000: loss=1.27 " + "l1=0" + "l2=1.27 f=-0.2 shape=(1, 9000, 1)
logits [[-0.5193107  -0.3975598   0.04644389  0.06844556]]
Iteration 200 of 1000: loss=0.722 " + "l1=0" + "l2=0.722 f=-0.176 shape=(1, 9000, 1)
logits [[-0.37428614 -0.41944784  0.03909253  0.05048979]]
Iteration 300 of 1000: loss=0.575 " + "l1=0.0111" + "l2=0.564 f=-0.178 shape=(1, 9000, 1)
logits [[-0.3442051  -0.44961247  0.04552419  0.03439035]]
Iteration 400 of 1000: loss=0.497 " + "l1=0" + "l2=0.497 f=-0.175 shape=(1, 9000, 1)
logits [[-0.33340225 -0.4681024   0.03669545  0.06436661]]
Iteration 500 of 1000: loss=0.45 " + "l1=0" + "l2=0.45 f=-0.176 shape=(1, 9000, 1)
logits [[-0.32814    -0.4912501   0.03873172  0.07503469]]
Iteration 600 of 1000: loss=0.411 " + "l1=0" + "l2=0.411 f=-0.179 shape=(1, 9000, 1)
logits [[-0.3228325  -0.4990604   0.04261534  0.06375539]]
Iteration 700 of 1000: loss=0.382 " + "l1=0.00294" + "l2=0.379 f=-0.181 shape=(1, 9000, 1)
logits [[-0.31002304 -0.5109549   0.04906611  0.04612545]]
Iteration 800 of 1000: loss=0.36 " + "l1=0" + "l2=0.36 f=-0.182 shape=(1, 9000, 1)
logits [[-0.32095385 -0.5137053   0.04021767  0.06539053]]
Iteration 900 of 1000: loss=0.338 " + "l1=0" + "l2=0.338 f=-0.186 shape=(1, 9000, 1)
logits [[-0.32008788 -0.5172733   0.03697863  0.05501325]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.62 " + "l1=2.62" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 1.2266752 -0.8145923  1.2003037 -3.539267 ]]
Iteration 100 of 1000: loss=1.43 " + "l1=0.882" + "l2=0.545 f=-0.311 shape=(1, 9000, 1)
logits [[ 0.00151821 -0.41130304  0.38515523 -1.2190964 ]]
Iteration 200 of 1000: loss=0.665 " + "l1=0" + "l2=0.665 f=-0.176 shape=(1, 9000, 1)
logits [[-0.36904454 -0.4077812   0.03144079  0.04314469]]
Iteration 300 of 1000: loss=0.506 " + "l1=0.011" + "l2=0.495 f=-0.176 shape=(1, 9000, 1)
logits [[-0.32813695 -0.4557498   0.05060387  0.03068495]]
Iteration 400 of 1000: loss=0.436 " + "l1=0" + "l2=0.436 f=-0.176 shape=(1, 9000, 1)
logits [[-0.3262048  -0.4828218   0.04851254  0.05653592]]
Iteration 500 of 1000: loss=0.396 " + "l1=0.00624" + "l2=0.39 f=-0.18 shape=(1, 9000, 1)
logits [[-0.31443158 -0.50405884  0.05509127  0.0437449 ]]
Iteration 600 of 1000: loss=0.362 " + "l1=0" + "l2=0.362 f=-0.182 shape=(1, 9000, 1)
logits [[-0.3203812  -0.51621556  0.04627882  0.06096547]]
Iteration 700 of 1000: loss=0.338 " + "l1=0" + "l2=0.338 f=-0.186 shape=(1, 9000, 1)
logits [[-0.32854867 -0.5152838   0.035263    0.0644886 ]]
Iteration 800 of 1000: loss=0.309 " + "l1=0" + "l2=0.309 f=-0.193 shape=(1, 9000, 1)
logits [[-0.33048388 -0.52202326  0.03582969  0.04577725]]
Iteration 900 of 1000: loss=0.285 " + "l1=0" + "l2=0.285 f=-0.196 shape=(1, 9000, 1)
logits [[-0.3403822  -0.53236413  0.03537696  0.05251667]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.55 " + "l1=1.55" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 1.2266752 -0.8145923  1.2003037 -3.539267 ]]
Iteration 100 of 1000: loss=1.12 " + "l1=0.924" + "l2=0.196 f=-0.378 shape=(1, 9000, 1)
logits [[ 0.4459054 -0.4741979  0.6809011 -2.1628535]]
Iteration 200 of 1000: loss=0.871 " + "l1=0.57" + "l2=0.302 f=-0.317 shape=(1, 9000, 1)
logits [[ 0.08437259 -0.4437229   0.42277077 -1.3307084 ]]
Iteration 300 of 1000: loss=0.598 " + "l1=0.134" + "l2=0.464 f=-0.21 shape=(1, 9000, 1)
logits [[-0.24623184 -0.4461668   0.1316623  -0.2809962 ]]
Iteration 400 of 1000: loss=0.438 " + "l1=0.00341" + "l2=0.435 f=-0.18 shape=(1, 9000, 1)
logits [[-0.31084284 -0.49558967  0.04845241  0.03796148]]
Iteration 500 of 1000: loss=0.382 " + "l1=0.00355" + "l2=0.378 f=-0.183 shape=(1, 9000, 1)
logits [[-0.29927728 -0.50688165  0.04256418  0.03165225]]
Iteration 600 of 1000: loss=0.346 " + "l1=0.0037" + "l2=0.342 f=-0.187 shape=(1, 9000, 1)
logits [[-0.29641554 -0.52415705  0.04207258  0.0306953 ]]
Iteration 700 of 1000: loss=0.314 " + "l1=0.00271" + "l2=0.312 f=-0.194 shape=(1, 9000, 1)
logits [[-0.32289952 -0.51835614  0.03579731  0.0274642 ]]
Iteration 800 of 1000: loss=0.286 " + "l1=0" + "l2=0.286 f=-0.197 shape=(1, 9000, 1)
logits [[-0.33527055 -0.5257168   0.0346377   0.03815173]]
Iteration 900 of 1000: loss=0.261 " + "l1=0.00163" + "l2=0.26 f=-0.205 shape=(1, 9000, 1)
logits [[-0.35459638 -0.53383577  0.03622584  0.03120292]]
--- 289.05765295028687 seconds ---
Adv result:3
Loading record A06627
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.066 " + "l1=0.066" + "l2=0 f=-0.31 shape=(1, 9000, 1)
logits [[ 4.260979  -2.335462   2.5385256 -5.703028 ]]
Iteration 100 of 1000: loss=0.0658 " + "l1=0.0656" + "l2=0.000181 f=-0.309 shape=(1, 9000, 1)
logits [[ 4.2349625 -2.322635   2.527363  -5.674324 ]]
Iteration 200 of 1000: loss=0.0657 " + "l1=0.0655" + "l2=0.000159 f=-0.309 shape=(1, 9000, 1)
logits [[ 4.23319   -2.320858   2.5262766 -5.67291  ]]
Iteration 300 of 1000: loss=0.0657 " + "l1=0.0655" + "l2=0.000202 f=-0.308 shape=(1, 9000, 1)
logits [[ 4.2293606 -2.3183022  2.5243008 -5.6692247]]
Iteration 400 of 1000: loss=0.0656 " + "l1=0.0654" + "l2=0.000231 f=-0.308 shape=(1, 9000, 1)
logits [[ 4.225103  -2.3156433  2.5220902 -5.6651025]]
Iteration 500 of 1000: loss=0.0656 " + "l1=0.0653" + "l2=0.000307 f=-0.308 shape=(1, 9000, 1)
logits [[ 4.22086   -2.31313    2.5199146 -5.66102  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.66 " + "l1=0.66" + "l2=0 f=-0.31 shape=(1, 9000, 1)
logits [[ 4.260979  -2.335462   2.5385256 -5.703028 ]]
Iteration 100 of 1000: loss=0.641 " + "l1=0.631" + "l2=0.0109 f=-0.302 shape=(1, 9000, 1)
logits [[ 4.063898  -2.2414165  2.4594707 -5.490087 ]]
Iteration 200 of 1000: loss=0.635 " + "l1=0.621" + "l2=0.0139 f=-0.3 shape=(1, 9000, 1)
logits [[ 4.001695  -2.209997   2.4345078 -5.427209 ]]
Iteration 300 of 1000: loss=0.629 " + "l1=0.613" + "l2=0.0165 f=-0.299 shape=(1, 9000, 1)
logits [[ 3.9472902 -2.1806273  2.4076946 -5.372312 ]]
Iteration 400 of 1000: loss=0.624 " + "l1=0.604" + "l2=0.0193 f=-0.299 shape=(1, 9000, 1)
logits [[ 3.8940504 -2.149253   2.3784928 -5.3186746]]
Iteration 500 of 1000: loss=0.618 " + "l1=0.596" + "l2=0.0217 f=-0.299 shape=(1, 9000, 1)
logits [[ 3.8440602 -2.1171362  2.3479419 -5.269711 ]]
Iteration 600 of 1000: loss=0.612 " + "l1=0.588" + "l2=0.0237 f=-0.298 shape=(1, 9000, 1)
logits [[ 3.794668  -2.0887837  2.3190932 -5.2178183]]
Iteration 700 of 1000: loss=0.607 " + "l1=0.581" + "l2=0.0256 f=-0.297 shape=(1, 9000, 1)
logits [[ 3.7495806 -2.0633333  2.296694  -5.1710362]]
Iteration 800 of 1000: loss=0.602 " + "l1=0.575" + "l2=0.0271 f=-0.296 shape=(1, 9000, 1)
logits [[ 3.703635  -2.041857   2.2764704 -5.1227527]]
Iteration 900 of 1000: loss=0.597 " + "l1=0.568" + "l2=0.0287 f=-0.295 shape=(1, 9000, 1)
logits [[ 3.6592386 -2.0231006  2.2576902 -5.0745525]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.6 " + "l1=6.6" + "l2=0 f=-0.31 shape=(1, 9000, 1)
logits [[ 4.260979  -2.335462   2.5385256 -5.703028 ]]
Iteration 100 of 1000: loss=4.69 " + "l1=3.69" + "l2=1 f=-0.237 shape=(1, 9000, 1)
logits [[ 2.2794087 -1.4126103  1.7557343 -3.5706365]]
Iteration 200 of 1000: loss=3.67 " + "l1=2.1" + "l2=1.58 f=-0.217 shape=(1, 9000, 1)
logits [[ 1.2699363 -0.826316   1.2480587 -2.558221 ]]
Iteration 300 of 1000: loss=3.1 " + "l1=1.51" + "l2=1.6 f=-0.217 shape=(1, 9000, 1)
logits [[ 0.98000956 -0.5254288   0.97787124 -2.3010807 ]]
Iteration 400 of 1000: loss=2.78 " + "l1=1.25" + "l2=1.54 f=-0.212 shape=(1, 9000, 1)
logits [[ 0.84703314 -0.40025222  0.84614915 -2.142035  ]]
Iteration 500 of 1000: loss=2.59 " + "l1=1.03" + "l2=1.55 f=-0.212 shape=(1, 9000, 1)
logits [[ 0.7164154  -0.31677008  0.71761465 -1.9669294 ]]
Iteration 600 of 1000: loss=2.45 " + "l1=0.878" + "l2=1.57 f=-0.198 shape=(1, 9000, 1)
logits [[ 0.623541   -0.24638133  0.63147    -1.8011243 ]]
Iteration 700 of 1000: loss=2.32 " + "l1=0.753" + "l2=1.57 f=-0.181 shape=(1, 9000, 1)
logits [[ 0.5707947  -0.1797678   0.57338905 -1.690151  ]]
Iteration 800 of 1000: loss=2.2 " + "l1=0.667" + "l2=1.53 f=-0.17 shape=(1, 9000, 1)
logits [[ 0.53323215 -0.13359426  0.5251579  -1.605622  ]]
Iteration 900 of 1000: loss=2.08 " + "l1=0.57" + "l2=1.51 f=-0.164 shape=(1, 9000, 1)
logits [[ 0.46910018 -0.09217622  0.47788048 -1.508925  ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=66 " + "l1=66" + "l2=0 f=-0.31 shape=(1, 9000, 1)
logits [[ 4.260979  -2.335462   2.5385256 -5.703028 ]]
Iteration 100 of 1000: loss=9.49 " + "l1=0" + "l2=9.49 f=-0.32 shape=(1, 9000, 1)
logits [[-0.0398682   0.26967052  0.26948264 -1.7796171 ]]
Iteration 200 of 1000: loss=6.25 " + "l1=0" + "l2=6.25 f=-0.318 shape=(1, 9000, 1)
logits [[ 0.08720617  0.25490245  0.25048044 -1.8650948 ]]
Iteration 300 of 1000: loss=5.23 " + "l1=0.0104" + "l2=5.22 f=-0.32 shape=(1, 9000, 1)
logits [[ 0.14911214  0.23569092  0.23673275 -1.8996848 ]]
Iteration 400 of 1000: loss=4.72 " + "l1=0" + "l2=4.72 f=-0.318 shape=(1, 9000, 1)
logits [[ 0.15401648  0.24126613  0.20906912 -1.8758814 ]]
Iteration 500 of 1000: loss=4.27 " + "l1=0" + "l2=4.27 f=-0.313 shape=(1, 9000, 1)
logits [[ 0.17288306  0.21917607  0.21522556 -1.8578751 ]]
Iteration 600 of 1000: loss=3.97 " + "l1=0" + "l2=3.97 f=-0.307 shape=(1, 9000, 1)
logits [[ 0.19499715  0.20846638  0.20590128 -1.8368131 ]]
Iteration 700 of 1000: loss=3.82 " + "l1=0" + "l2=3.82 f=-0.306 shape=(1, 9000, 1)
logits [[ 0.1641784   0.22617109  0.19359149 -1.8078163 ]]
Iteration 800 of 1000: loss=3.56 " + "l1=0" + "l2=3.56 f=-0.301 shape=(1, 9000, 1)
logits [[ 0.1608662   0.21364547  0.2130298  -1.7910371 ]]
Iteration 900 of 1000: loss=3.47 " + "l1=0" + "l2=3.47 f=-0.298 shape=(1, 9000, 1)
logits [[ 0.10292269  0.23722894  0.20346525 -1.7357057 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=36.3 " + "l1=36.3" + "l2=0 f=-0.31 shape=(1, 9000, 1)
logits [[ 4.260979  -2.335462   2.5385256 -5.703028 ]]
Iteration 100 of 1000: loss=8.4 " + "l1=0.685" + "l2=7.72 f=-0.306 shape=(1, 9000, 1)
logits [[ 0.17881078  0.19951357  0.32397404 -1.9248996 ]]
Iteration 200 of 1000: loss=5.19 " + "l1=0.0128" + "l2=5.17 f=-0.306 shape=(1, 9000, 1)
logits [[ 0.22278967  0.23699977  0.23932305 -1.9235926 ]]
Iteration 300 of 1000: loss=4.42 " + "l1=0.0682" + "l2=4.35 f=-0.308 shape=(1, 9000, 1)
logits [[ 0.16642207  0.2194812   0.23189025 -1.848495  ]]
Iteration 400 of 1000: loss=3.96 " + "l1=0" + "l2=3.96 f=-0.307 shape=(1, 9000, 1)
logits [[ 0.1373595   0.23370036  0.2244786  -1.823895  ]]
Iteration 500 of 1000: loss=3.67 " + "l1=0" + "l2=3.67 f=-0.301 shape=(1, 9000, 1)
logits [[ 0.17539893  0.23933028  0.21243773 -1.8309072 ]]
Iteration 600 of 1000: loss=3.46 " + "l1=0.106" + "l2=3.35 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.23185155  0.21252562  0.23126148 -1.8295723 ]]
Iteration 700 of 1000: loss=3.18 " + "l1=0" + "l2=3.18 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.19106263  0.24750477  0.23834532 -1.801669  ]]
Iteration 800 of 1000: loss=3.01 " + "l1=0" + "l2=3.01 f=-0.272 shape=(1, 9000, 1)
logits [[ 0.23341605  0.24887796  0.24101068 -1.8114567 ]]
Iteration 900 of 1000: loss=2.89 " + "l1=0" + "l2=2.89 f=-0.268 shape=(1, 9000, 1)
logits [[ 0.22511351  0.25678176  0.24149348 -1.7950592 ]]
--- 267.36191511154175 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0172 " + "l1=0.0172" + "l2=0 f=-0.31 shape=(1, 9000, 1)
logits [[ 4.260979  -2.335462   2.5385256 -5.703028 ]]
Iteration 100 of 1000: loss=0.0171 " + "l1=0.017" + "l2=0.000129 f=-0.31 shape=(1, 9000, 1)
logits [[ 4.241763  -2.3379548  2.541362  -5.683355 ]]
Iteration 200 of 1000: loss=0.0171 " + "l1=0.017" + "l2=9.12e-05 f=-0.31 shape=(1, 9000, 1)
logits [[ 4.2424283 -2.3380885  2.5419037 -5.684469 ]]
Iteration 300 of 1000: loss=0.0171 " + "l1=0.017" + "l2=0.000112 f=-0.31 shape=(1, 9000, 1)
logits [[ 4.2408295 -2.3382757  2.5423167 -5.6832347]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.172 " + "l1=0.172" + "l2=0 f=-0.31 shape=(1, 9000, 1)
logits [[ 4.260979  -2.335462   2.5385256 -5.703028 ]]
Iteration 100 of 1000: loss=0.163 " + "l1=0.157" + "l2=0.00607 f=-0.309 shape=(1, 9000, 1)
logits [[ 4.126796  -2.3471885  2.559782  -5.5735655]]
Iteration 200 of 1000: loss=0.16 " + "l1=0.152" + "l2=0.0077 f=-0.308 shape=(1, 9000, 1)
logits [[ 4.089824  -2.3524396  2.5683024 -5.538963 ]]
Iteration 300 of 1000: loss=0.158 " + "l1=0.148" + "l2=0.0092 f=-0.309 shape=(1, 9000, 1)
logits [[ 4.058525  -2.3568282  2.5753298 -5.511517 ]]
Iteration 400 of 1000: loss=0.156 " + "l1=0.145" + "l2=0.0105 f=-0.309 shape=(1, 9000, 1)
logits [[ 4.0313973 -2.360308   2.580953  -5.4889517]]
Iteration 500 of 1000: loss=0.154 " + "l1=0.142" + "l2=0.0113 f=-0.31 shape=(1, 9000, 1)
logits [[ 4.0078073 -2.3617983  2.5830114 -5.4706373]]
Iteration 600 of 1000: loss=0.152 " + "l1=0.14" + "l2=0.0122 f=-0.311 shape=(1, 9000, 1)
logits [[ 3.9837637 -2.3612096  2.5836453 -5.451684 ]]
Iteration 700 of 1000: loss=0.151 " + "l1=0.138" + "l2=0.0127 f=-0.312 shape=(1, 9000, 1)
logits [[ 3.9632971 -2.3598979  2.583362  -5.4361124]]
Iteration 800 of 1000: loss=0.149 " + "l1=0.136" + "l2=0.0134 f=-0.313 shape=(1, 9000, 1)
logits [[ 3.9403522 -2.3580124  2.5837154 -5.4184628]]
Iteration 900 of 1000: loss=0.147 " + "l1=0.133" + "l2=0.0141 f=-0.314 shape=(1, 9000, 1)
logits [[ 3.9181929 -2.3558953  2.5840945 -5.4015737]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.72 " + "l1=1.72" + "l2=0 f=-0.31 shape=(1, 9000, 1)
logits [[ 4.260979  -2.335462   2.5385256 -5.703028 ]]
Iteration 100 of 1000: loss=0.851 " + "l1=0.348" + "l2=0.504 f=-0.299 shape=(1, 9000, 1)
logits [[ 2.8964288 -2.321765   2.5485947 -4.3192835]]
Iteration 200 of 1000: loss=0.56 " + "l1=0.00334" + "l2=0.557 f=-0.287 shape=(1, 9000, 1)
logits [[ 2.6104617 -2.3485084  2.6071265 -4.018803 ]]
Iteration 300 of 1000: loss=0.464 " + "l1=0" + "l2=0.464 f=-0.29 shape=(1, 9000, 1)
logits [[ 2.6156166 -2.3489215  2.6177852 -4.0439982]]
Iteration 400 of 1000: loss=0.403 " + "l1=0" + "l2=0.403 f=-0.291 shape=(1, 9000, 1)
logits [[ 2.6087534 -2.3450599  2.6118903 -4.0414257]]
Iteration 500 of 1000: loss=0.36 " + "l1=0" + "l2=0.36 f=-0.29 shape=(1, 9000, 1)
logits [[ 2.6026077 -2.3385744  2.608122  -4.032427 ]]
Iteration 600 of 1000: loss=0.329 " + "l1=0" + "l2=0.329 f=-0.289 shape=(1, 9000, 1)
logits [[ 2.5900564 -2.321324   2.6018877 -4.027233 ]]
Iteration 700 of 1000: loss=0.298 " + "l1=0" + "l2=0.298 f=-0.286 shape=(1, 9000, 1)
logits [[ 2.5862    -2.3056133  2.597065  -4.0232863]]
Iteration 800 of 1000: loss=0.273 " + "l1=0.00807" + "l2=0.265 f=-0.284 shape=(1, 9000, 1)
logits [[ 2.612246  -2.3033178  2.6041772 -4.0491323]]
Iteration 900 of 1000: loss=0.247 " + "l1=0" + "l2=0.247 f=-0.279 shape=(1, 9000, 1)
logits [[ 2.6019766 -2.3021975  2.6178863 -4.032191 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.947 " + "l1=0.947" + "l2=0 f=-0.31 shape=(1, 9000, 1)
logits [[ 4.260979  -2.335462   2.5385256 -5.703028 ]]
Iteration 100 of 1000: loss=0.678 " + "l1=0.528" + "l2=0.15 f=-0.301 shape=(1, 9000, 1)
logits [[ 3.5683289 -2.370186   2.608386  -5.0111227]]
Iteration 200 of 1000: loss=0.599 " + "l1=0.409" + "l2=0.19 f=-0.298 shape=(1, 9000, 1)
logits [[ 3.3591974 -2.365538   2.6155121 -4.8022256]]
Iteration 300 of 1000: loss=0.508 " + "l1=0.243" + "l2=0.265 f=-0.303 shape=(1, 9000, 1)
logits [[ 3.013371  -2.3258138  2.5709465 -4.471719 ]]
Iteration 400 of 1000: loss=0.439 " + "l1=0.16" + "l2=0.279 f=-0.303 shape=(1, 9000, 1)
logits [[ 2.8706267 -2.3147268  2.5798051 -4.3477144]]
Iteration 500 of 1000: loss=0.38 " + "l1=0.093" + "l2=0.287 f=-0.303 shape=(1, 9000, 1)
logits [[ 2.7487729 -2.3139272  2.5797513 -4.2252464]]
Iteration 600 of 1000: loss=0.327 " + "l1=0.0129" + "l2=0.314 f=-0.296 shape=(1, 9000, 1)
logits [[ 2.6022875 -2.2978837  2.5788345 -4.0688553]]
Iteration 700 of 1000: loss=0.274 " + "l1=0.00182" + "l2=0.272 f=-0.291 shape=(1, 9000, 1)
logits [[ 2.5965974 -2.2947805  2.5932944 -4.0592957]]
Iteration 800 of 1000: loss=0.241 " + "l1=0.00773" + "l2=0.234 f=-0.286 shape=(1, 9000, 1)
logits [[ 2.6203356 -2.2928314  2.6062868 -4.0770383]]
Iteration 900 of 1000: loss=0.211 " + "l1=0.000525" + "l2=0.21 f=-0.283 shape=(1, 9000, 1)
logits [[ 2.614957  -2.2896502  2.6140034 -4.0723376]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.56 " + "l1=0.56" + "l2=0 f=-0.31 shape=(1, 9000, 1)
logits [[ 4.260979  -2.335462   2.5385256 -5.703028 ]]
Iteration 100 of 1000: loss=0.461 " + "l1=0.401" + "l2=0.0601 f=-0.305 shape=(1, 9000, 1)
logits [[ 3.8323011 -2.3748448  2.5986109 -5.277729 ]]
Iteration 200 of 1000: loss=0.431 " + "l1=0.356" + "l2=0.0751 f=-0.304 shape=(1, 9000, 1)
logits [[ 3.7042882 -2.375789   2.6101375 -5.156195 ]]
Iteration 300 of 1000: loss=0.408 " + "l1=0.324" + "l2=0.0844 f=-0.303 shape=(1, 9000, 1)
logits [[ 3.612031  -2.3676136  2.6152961 -5.072234 ]]
Iteration 400 of 1000: loss=0.387 " + "l1=0.292" + "l2=0.0958 f=-0.303 shape=(1, 9000, 1)
logits [[ 3.5089126 -2.354937   2.6114986 -4.9771976]]
Iteration 500 of 1000: loss=0.366 " + "l1=0.265" + "l2=0.102 f=-0.303 shape=(1, 9000, 1)
logits [[ 3.4201727 -2.3441267  2.6057062 -4.893598 ]]
Iteration 600 of 1000: loss=0.346 " + "l1=0.241" + "l2=0.105 f=-0.304 shape=(1, 9000, 1)
logits [[ 3.348025  -2.3372185  2.607861  -4.8337417]]
Iteration 700 of 1000: loss=0.323 " + "l1=0.21" + "l2=0.114 f=-0.301 shape=(1, 9000, 1)
logits [[ 3.25378   -2.3246622  2.6088653 -4.740194 ]]
Iteration 800 of 1000: loss=0.301 " + "l1=0.183" + "l2=0.117 f=-0.299 shape=(1, 9000, 1)
logits [[ 3.1615047 -2.3056498  2.597223  -4.6473737]]
Iteration 900 of 1000: loss=0.275 " + "l1=0.146" + "l2=0.129 f=-0.296 shape=(1, 9000, 1)
logits [[ 3.0320013 -2.2817898  2.5839472 -4.519459 ]]
--- 254.43082809448242 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0996 " + "l1=0.0996" + "l2=0 f=-0.31 shape=(1, 9000, 1)
logits [[ 4.260979  -2.335462   2.5385256 -5.703028 ]]
Iteration 100 of 1000: loss=0.0991 " + "l1=0.0986" + "l2=0.000449 f=-0.307 shape=(1, 9000, 1)
logits [[ 4.2191286 -2.328781   2.5266073 -5.643432 ]]
Iteration 200 of 1000: loss=0.0989 " + "l1=0.0985" + "l2=0.000427 f=-0.306 shape=(1, 9000, 1)
logits [[ 4.2144985 -2.327535   2.5252433 -5.637302 ]]
Iteration 300 of 1000: loss=0.0988 " + "l1=0.0984" + "l2=0.000483 f=-0.306 shape=(1, 9000, 1)
logits [[ 4.207776  -2.325774   2.523168  -5.6285048]]
Iteration 400 of 1000: loss=0.0988 " + "l1=0.0982" + "l2=0.000583 f=-0.305 shape=(1, 9000, 1)
logits [[ 4.2007613 -2.3239298  2.5208445 -5.6193132]]
Iteration 500 of 1000: loss=0.0987 " + "l1=0.098" + "l2=0.000651 f=-0.305 shape=(1, 9000, 1)
logits [[ 4.1938987 -2.3220963  2.5184147 -5.6103   ]]
Iteration 600 of 1000: loss=0.0987 " + "l1=0.0979" + "l2=0.000802 f=-0.305 shape=(1, 9000, 1)
logits [[ 4.187219  -2.3201287  2.5158856 -5.601501 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.996 " + "l1=0.996" + "l2=0 f=-0.31 shape=(1, 9000, 1)
logits [[ 4.260979  -2.335462   2.5385256 -5.703028 ]]
Iteration 100 of 1000: loss=0.944 " + "l1=0.91" + "l2=0.0337 f=-0.287 shape=(1, 9000, 1)
logits [[ 3.896363  -2.2750983  2.4365363 -5.205374 ]]
Iteration 200 of 1000: loss=0.927 " + "l1=0.881" + "l2=0.0459 f=-0.28 shape=(1, 9000, 1)
logits [[ 3.7671812 -2.2487524  2.4017072 -5.03999  ]]
Iteration 300 of 1000: loss=0.911 " + "l1=0.855" + "l2=0.0563 f=-0.273 shape=(1, 9000, 1)
logits [[ 3.6511495 -2.214197   2.3670213 -4.894949 ]]
Iteration 400 of 1000: loss=0.897 " + "l1=0.833" + "l2=0.064 f=-0.267 shape=(1, 9000, 1)
logits [[ 3.5534594 -2.178445   2.3314679 -4.7738357]]
Iteration 500 of 1000: loss=0.884 " + "l1=0.813" + "l2=0.0717 f=-0.262 shape=(1, 9000, 1)
logits [[ 3.4653974 -2.1506538  2.2954156 -4.660026 ]]
Iteration 600 of 1000: loss=0.873 " + "l1=0.795" + "l2=0.0786 f=-0.258 shape=(1, 9000, 1)
logits [[ 3.3885107 -2.1258843  2.2652693 -4.5586104]]
Iteration 700 of 1000: loss=0.863 " + "l1=0.779" + "l2=0.0842 f=-0.254 shape=(1, 9000, 1)
logits [[ 3.319418  -2.1057153  2.2365482 -4.4680476]]
Iteration 800 of 1000: loss=0.853 " + "l1=0.765" + "l2=0.088 f=-0.251 shape=(1, 9000, 1)
logits [[ 3.2608967 -2.086591   2.2111096 -4.3901978]]
Iteration 900 of 1000: loss=0.843 " + "l1=0.754" + "l2=0.0896 f=-0.249 shape=(1, 9000, 1)
logits [[ 3.2121265 -2.0688062  2.1884692 -4.3260503]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.96 " + "l1=9.96" + "l2=0 f=-0.31 shape=(1, 9000, 1)
logits [[ 4.260979  -2.335462   2.5385256 -5.703028 ]]
Iteration 100 of 1000: loss=5.33 " + "l1=3.3" + "l2=2.03 f=-0.105 shape=(1, 9000, 1)
logits [[ 1.5162109 -1.7267215  1.5434899 -1.7548919]]
Iteration 200 of 1000: loss=4.22 " + "l1=1.82" + "l2=2.4 f=-0.0796 shape=(1, 9000, 1)
logits [[ 0.9022822 -1.4103955  1.0057082 -0.8158158]]
Iteration 300 of 1000: loss=3.49 " + "l1=1.04" + "l2=2.44 f=-0.0809 shape=(1, 9000, 1)
logits [[ 0.52755296 -1.2339325   0.7138215  -0.33098108]]
Iteration 400 of 1000: loss=2.98 " + "l1=0.661" + "l2=2.32 f=-0.0849 shape=(1, 9000, 1)
logits [[ 0.36495334 -1.08292     0.51978534 -0.14151984]]
Iteration 500 of 1000: loss=2.67 " + "l1=0.376" + "l2=2.29 f=-0.0754 shape=(1, 9000, 1)
logits [[ 0.25622955 -1.0188624   0.41854736  0.04232923]]
Iteration 600 of 1000: loss=2.34 " + "l1=0.0353" + "l2=2.31 f=-0.054 shape=(1, 9000, 1)
logits [[ 0.13666356 -0.94252366  0.31257358  0.27728653]]
Iteration 700 of 1000: loss=2.06 " + "l1=0.0186" + "l2=2.04 f=-0.056 shape=(1, 9000, 1)
logits [[ 0.13407555 -0.92397493  0.292182    0.27361116]]
Iteration 800 of 1000: loss=1.88 " + "l1=0" + "l2=1.88 f=-0.0577 shape=(1, 9000, 1)
logits [[ 0.1338911  -0.9300255   0.27972278  0.28564933]]
Iteration 900 of 1000: loss=1.71 " + "l1=0" + "l2=1.71 f=-0.0585 shape=(1, 9000, 1)
logits [[ 0.1504364  -0.95271194  0.2815136   0.2868581 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.48 " + "l1=5.48" + "l2=0 f=-0.31 shape=(1, 9000, 1)
logits [[ 4.260979  -2.335462   2.5385256 -5.703028 ]]
Iteration 100 of 1000: loss=3.84 " + "l1=2.88" + "l2=0.958 f=-0.175 shape=(1, 9000, 1)
logits [[ 2.250852  -1.9471601  1.9810488 -2.9849713]]
Iteration 200 of 1000: loss=3.3 " + "l1=2.12" + "l2=1.18 f=-0.115 shape=(1, 9000, 1)
logits [[ 1.708605  -1.752902   1.7166712 -2.1311207]]
Iteration 300 of 1000: loss=2.94 " + "l1=1.77" + "l2=1.17 f=-0.0935 shape=(1, 9000, 1)
logits [[ 1.4804255 -1.601042   1.4851319 -1.7383587]]
Iteration 400 of 1000: loss=2.65 " + "l1=1.5" + "l2=1.15 f=-0.088 shape=(1, 9000, 1)
logits [[ 1.2814734 -1.4755417  1.2813395 -1.4394575]]
Iteration 500 of 1000: loss=2.36 " + "l1=1.21" + "l2=1.15 f=-0.0955 shape=(1, 9000, 1)
logits [[ 1.0317878 -1.2996439  1.0384563 -1.1527475]]
Iteration 600 of 1000: loss=2.19 " + "l1=1.04" + "l2=1.14 f=-0.0919 shape=(1, 9000, 1)
logits [[ 0.92313117 -1.2490824   0.9271168  -0.9688638 ]]
Iteration 700 of 1000: loss=2.05 " + "l1=0.902" + "l2=1.14 f=-0.0837 shape=(1, 9000, 1)
logits [[ 0.8322046  -1.2034667   0.83806187 -0.80170894]]
Iteration 800 of 1000: loss=1.92 " + "l1=0.793" + "l2=1.13 f=-0.0779 shape=(1, 9000, 1)
logits [[ 0.76017106 -1.173501    0.7718079  -0.670242  ]]
Iteration 900 of 1000: loss=1.79 " + "l1=0.658" + "l2=1.13 f=-0.0671 shape=(1, 9000, 1)
logits [[ 0.6811892  -1.1246592   0.6862344  -0.51103395]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=7.72 " + "l1=7.72" + "l2=0 f=-0.31 shape=(1, 9000, 1)
logits [[ 4.260979  -2.335462   2.5385256 -5.703028 ]]
Iteration 100 of 1000: loss=4.64 " + "l1=3.1" + "l2=1.54 f=-0.132 shape=(1, 9000, 1)
logits [[ 1.769651  -1.8274266  1.7625619 -2.231962 ]]
Iteration 200 of 1000: loss=3.85 " + "l1=2.16" + "l2=1.69 f=-0.0804 shape=(1, 9000, 1)
logits [[ 1.3520277 -1.5984323  1.354859  -1.430176 ]]
Iteration 300 of 1000: loss=3.28 " + "l1=1.5" + "l2=1.78 f=-0.0771 shape=(1, 9000, 1)
logits [[ 0.9890846  -1.3672519   1.0041187  -0.93420166]]
Iteration 400 of 1000: loss=2.84 " + "l1=1.07" + "l2=1.77 f=-0.0807 shape=(1, 9000, 1)
logits [[ 0.74700665 -1.2166485   0.76346457 -0.6165741 ]]
Iteration 500 of 1000: loss=2.55 " + "l1=0.803" + "l2=1.75 f=-0.0803 shape=(1, 9000, 1)
logits [[ 0.61132324 -1.1468757   0.62493813 -0.41062623]]
Iteration 600 of 1000: loss=2.32 " + "l1=0.571" + "l2=1.75 f=-0.0725 shape=(1, 9000, 1)
logits [[ 0.48926243 -1.0900832   0.52379614 -0.21281502]]
Iteration 700 of 1000: loss=2.12 " + "l1=0.336" + "l2=1.78 f=-0.0695 shape=(1, 9000, 1)
logits [[ 0.35081023 -1.0543543   0.42964143 -0.00412847]]
Iteration 800 of 1000: loss=1.93 " + "l1=0.155" + "l2=1.77 f=-0.0752 shape=(1, 9000, 1)
logits [[ 0.25488365 -1.0349226   0.33965793  0.13976827]]
Iteration 900 of 1000: loss=1.72 " + "l1=0.00115" + "l2=1.72 f=-0.0844 shape=(1, 9000, 1)
logits [[ 0.20214723 -1.0772669   0.2695797   0.268102  ]]
--- 273.1281318664551 seconds ---
Adv result:3
Loading record A06631
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0569 " + "l1=0.0569" + "l2=0 f=-0.225 shape=(1, 9000, 1)
logits [[ 3.2684097 -2.4215271  2.563194  -4.3084874]]
Iteration 100 of 1000: loss=0.0565 " + "l1=0.0562" + "l2=0.000322 f=-0.224 shape=(1, 9000, 1)
logits [[ 3.2307758 -2.3891625  2.538899  -4.2747793]]
Iteration 200 of 1000: loss=0.0565 " + "l1=0.0561" + "l2=0.000325 f=-0.223 shape=(1, 9000, 1)
logits [[ 3.2272317 -2.3853562  2.5358033 -4.2716103]]
Iteration 300 of 1000: loss=0.0564 " + "l1=0.056" + "l2=0.000392 f=-0.223 shape=(1, 9000, 1)
logits [[ 3.2226763 -2.3813207  2.5327907 -4.267583 ]]
Iteration 400 of 1000: loss=0.0564 " + "l1=0.056" + "l2=0.000454 f=-0.223 shape=(1, 9000, 1)
logits [[ 3.2186997 -2.3778982  2.5302935 -4.2641764]]
Iteration 500 of 1000: loss=0.0564 " + "l1=0.0559" + "l2=0.000497 f=-0.223 shape=(1, 9000, 1)
logits [[ 3.21516   -2.3748963  2.5282214 -4.2611465]]
Iteration 600 of 1000: loss=0.0564 " + "l1=0.0558" + "l2=0.000572 f=-0.223 shape=(1, 9000, 1)
logits [[ 3.2118254 -2.372183   2.526323  -4.2582064]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.569 " + "l1=0.569" + "l2=0 f=-0.225 shape=(1, 9000, 1)
logits [[ 3.2684097 -2.4215271  2.563194  -4.3084874]]
Iteration 100 of 1000: loss=0.532 " + "l1=0.507" + "l2=0.0248 f=-0.215 shape=(1, 9000, 1)
logits [[ 2.9447565 -2.1264143  2.3403852 -4.0193877]]
Iteration 200 of 1000: loss=0.52 " + "l1=0.487" + "l2=0.0332 f=-0.213 shape=(1, 9000, 1)
logits [[ 2.835564  -2.035542   2.2751288 -3.9271214]]
Iteration 300 of 1000: loss=0.512 " + "l1=0.473" + "l2=0.0392 f=-0.211 shape=(1, 9000, 1)
logits [[ 2.7564766 -1.9713701  2.2325325 -3.8596776]]
Iteration 400 of 1000: loss=0.505 " + "l1=0.463" + "l2=0.0424 f=-0.208 shape=(1, 9000, 1)
logits [[ 2.7023897 -1.9282894  2.204884  -3.8108864]]
Iteration 500 of 1000: loss=0.498 " + "l1=0.452" + "l2=0.0467 f=-0.205 shape=(1, 9000, 1)
logits [[ 2.6412292 -1.8741691  2.1693935 -3.7569637]]
Iteration 600 of 1000: loss=0.491 " + "l1=0.439" + "l2=0.0515 f=-0.202 shape=(1, 9000, 1)
logits [[ 2.579811  -1.811512   2.1260023 -3.7008116]]
Iteration 700 of 1000: loss=0.483 " + "l1=0.427" + "l2=0.0559 f=-0.199 shape=(1, 9000, 1)
logits [[ 2.520254  -1.7536132  2.082554  -3.646231 ]]
Iteration 800 of 1000: loss=0.475 " + "l1=0.415" + "l2=0.0605 f=-0.196 shape=(1, 9000, 1)
logits [[ 2.4519153 -1.6955625  2.0425806 -3.5835958]]
Iteration 900 of 1000: loss=0.466 " + "l1=0.399" + "l2=0.067 f=-0.194 shape=(1, 9000, 1)
logits [[ 2.3725524 -1.621002   1.9924581 -3.5193522]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.69 " + "l1=5.69" + "l2=0 f=-0.225 shape=(1, 9000, 1)
logits [[ 3.2684097 -2.4215271  2.563194  -4.3084874]]
Iteration 100 of 1000: loss=2.76 " + "l1=1.75" + "l2=1.01 f=-0.251 shape=(1, 9000, 1)
logits [[ 1.1856011  -0.56028354  1.1878029  -2.8154917 ]]
Iteration 200 of 1000: loss=1.95 " + "l1=0.809" + "l2=1.15 f=-0.311 shape=(1, 9000, 1)
logits [[ 0.78456056 -0.00839618  0.8003004  -2.819942  ]]
Iteration 300 of 1000: loss=1.54 " + "l1=0.254" + "l2=1.28 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.3783915   0.24784614  0.5020418  -2.5867977 ]]
Iteration 400 of 1000: loss=1.28 " + "l1=0.0376" + "l2=1.24 f=-0.372 shape=(1, 9000, 1)
logits [[ 0.19916579  0.32292378  0.36048564 -2.3716955 ]]
Iteration 500 of 1000: loss=1.03 " + "l1=0.0197" + "l2=1.01 f=-0.359 shape=(1, 9000, 1)
logits [[ 0.18398964  0.29903176  0.31875587 -2.236175  ]]
Iteration 600 of 1000: loss=0.853 " + "l1=0" + "l2=0.853 f=-0.361 shape=(1, 9000, 1)
logits [[ 0.1555507  0.2887139  0.2785202 -2.165094 ]]
Iteration 700 of 1000: loss=0.736 " + "l1=0.00369" + "l2=0.732 f=-0.357 shape=(1, 9000, 1)
logits [[ 0.18101493  0.26146075  0.26514712 -2.137518  ]]
Iteration 800 of 1000: loss=0.663 " + "l1=0.00424" + "l2=0.659 f=-0.351 shape=(1, 9000, 1)
logits [[ 0.22834983  0.24423967  0.24847914 -2.1254027 ]]
Iteration 900 of 1000: loss=0.611 " + "l1=0" + "l2=0.611 f=-0.351 shape=(1, 9000, 1)
logits [[ 0.22055483  0.24470644  0.24242635 -2.1124678 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.13 " + "l1=3.13" + "l2=0 f=-0.225 shape=(1, 9000, 1)
logits [[ 3.2684097 -2.4215271  2.563194  -4.3084874]]
Iteration 100 of 1000: loss=2 " + "l1=1.38" + "l2=0.612 f=-0.22 shape=(1, 9000, 1)
logits [[ 1.5220656  -0.99352294  1.5198998  -2.9297872 ]]
Iteration 200 of 1000: loss=1.57 " + "l1=0.947" + "l2=0.623 f=-0.279 shape=(1, 9000, 1)
logits [[ 1.2077329 -0.513711   1.2041618 -3.012717 ]]
Iteration 300 of 1000: loss=1.39 " + "l1=0.748" + "l2=0.639 f=-0.294 shape=(1, 9000, 1)
logits [[ 1.0379865  -0.31614083  1.0429707  -2.9424336 ]]
Iteration 400 of 1000: loss=1.25 " + "l1=0.63" + "l2=0.622 f=-0.31 shape=(1, 9000, 1)
logits [[ 0.92296916 -0.20905933  0.93729794 -2.893032  ]]
Iteration 500 of 1000: loss=1.13 " + "l1=0.537" + "l2=0.59 f=-0.317 shape=(1, 9000, 1)
logits [[ 0.841459   -0.13136624  0.84464806 -2.8208773 ]]
Iteration 600 of 1000: loss=0.998 " + "l1=0.394" + "l2=0.604 f=-0.317 shape=(1, 9000, 1)
logits [[ 0.6774313 -0.0202309  0.6958957 -2.6220193]]
Iteration 700 of 1000: loss=0.879 " + "l1=0.251" + "l2=0.628 f=-0.333 shape=(1, 9000, 1)
logits [[ 0.46651462  0.08261166  0.5388076  -2.418937  ]]
Iteration 800 of 1000: loss=0.772 " + "l1=0.105" + "l2=0.667 f=-0.348 shape=(1, 9000, 1)
logits [[ 0.23671398  0.16969074  0.36128834 -2.159013  ]]
Iteration 900 of 1000: loss=0.678 " + "l1=0.0129" + "l2=0.665 f=-0.362 shape=(1, 9000, 1)
logits [[ 0.10473445  0.22784625  0.251318   -2.0300758 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.85 " + "l1=1.85" + "l2=0 f=-0.225 shape=(1, 9000, 1)
logits [[ 3.2684097 -2.4215271  2.563194  -4.3084874]]
Iteration 100 of 1000: loss=1.47 " + "l1=1.24" + "l2=0.227 f=-0.202 shape=(1, 9000, 1)
logits [[ 2.2613318 -1.5520524  1.9081721 -3.4254115]]
Iteration 200 of 1000: loss=1.22 " + "l1=0.813" + "l2=0.411 f=-0.247 shape=(1, 9000, 1)
logits [[ 1.553458  -0.94893    1.5357809 -3.1281977]]
Iteration 300 of 1000: loss=1.09 " + "l1=0.701" + "l2=0.392 f=-0.27 shape=(1, 9000, 1)
logits [[ 1.392467  -0.7611603  1.3951744 -3.1049602]]
Iteration 400 of 1000: loss=1.02 " + "l1=0.642" + "l2=0.377 f=-0.284 shape=(1, 9000, 1)
logits [[ 1.3026465  -0.66874313  1.3064128  -3.0779047 ]]
Iteration 500 of 1000: loss=0.94 " + "l1=0.581" + "l2=0.36 f=-0.291 shape=(1, 9000, 1)
logits [[ 1.2182369 -0.5589996  1.227178  -3.0509675]]
Iteration 600 of 1000: loss=0.856 " + "l1=0.514" + "l2=0.343 f=-0.298 shape=(1, 9000, 1)
logits [[ 1.1416941  -0.43798935  1.1431458  -3.0404098 ]]
Iteration 700 of 1000: loss=0.802 " + "l1=0.472" + "l2=0.33 f=-0.299 shape=(1, 9000, 1)
logits [[ 1.0761209  -0.37696093  1.0763663  -2.9728532 ]]
Iteration 800 of 1000: loss=0.763 " + "l1=0.431" + "l2=0.332 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.0032846  -0.31720233  1.0081388  -2.86732   ]]
Iteration 900 of 1000: loss=0.733 " + "l1=0.393" + "l2=0.34 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.9218855  -0.26292107  0.94775826 -2.7596626 ]]
--- 270.91292095184326 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00705 " + "l1=0.00705" + "l2=0 f=-0.225 shape=(1, 9000, 1)
logits [[ 3.2684097 -2.4215271  2.563194  -4.3084874]]
Iteration 100 of 1000: loss=0.00693 " + "l1=0.00677" + "l2=0.000156 f=-0.225 shape=(1, 9000, 1)
logits [[ 3.247611  -2.4271207  2.5705159 -4.2912397]]
Iteration 200 of 1000: loss=0.00688 " + "l1=0.00677" + "l2=0.000113 f=-0.225 shape=(1, 9000, 1)
logits [[ 3.2476895 -2.427316   2.5706346 -4.2912955]]
Iteration 300 of 1000: loss=0.00689 " + "l1=0.00674" + "l2=0.000151 f=-0.225 shape=(1, 9000, 1)
logits [[ 3.245904  -2.42825    2.5717437 -4.2899094]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0705 " + "l1=0.0705" + "l2=0 f=-0.225 shape=(1, 9000, 1)
logits [[ 3.2684097 -2.4215271  2.563194  -4.3084874]]
Iteration 100 of 1000: loss=0.0583 " + "l1=0.0508" + "l2=0.00751 f=-0.227 shape=(1, 9000, 1)
logits [[ 3.1251822 -2.4678457  2.6176507 -4.1819115]]
Iteration 200 of 1000: loss=0.0545 " + "l1=0.0449" + "l2=0.00953 f=-0.227 shape=(1, 9000, 1)
logits [[ 3.083042  -2.4796703  2.6337872 -4.14412  ]]
Iteration 300 of 1000: loss=0.0507 " + "l1=0.0396" + "l2=0.0111 f=-0.227 shape=(1, 9000, 1)
logits [[ 3.0479593 -2.4931664  2.6518846 -4.1144633]]
Iteration 400 of 1000: loss=0.0468 " + "l1=0.0344" + "l2=0.0124 f=-0.227 shape=(1, 9000, 1)
logits [[ 3.0149562 -2.506676   2.670679  -4.0873675]]
Iteration 500 of 1000: loss=0.0425 " + "l1=0.0289" + "l2=0.0136 f=-0.226 shape=(1, 9000, 1)
logits [[ 2.9797397 -2.5217688  2.6910298 -4.0544267]]
Iteration 600 of 1000: loss=0.0375 " + "l1=0.023" + "l2=0.0145 f=-0.225 shape=(1, 9000, 1)
logits [[ 2.940434  -2.5340548  2.710625  -4.016418 ]]
Iteration 700 of 1000: loss=0.0328 " + "l1=0.0171" + "l2=0.0156 f=-0.224 shape=(1, 9000, 1)
logits [[ 2.8991027 -2.5474339  2.7276275 -3.9741325]]
Iteration 800 of 1000: loss=0.0281 " + "l1=0.0114" + "l2=0.0168 f=-0.223 shape=(1, 9000, 1)
logits [[ 2.8584044 -2.556972   2.7448308 -3.9389255]]
Iteration 900 of 1000: loss=0.0231 " + "l1=0.00509" + "l2=0.018 f=-0.223 shape=(1, 9000, 1)
logits [[ 2.8116941 -2.5654936  2.760815  -3.8990235]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0388 " + "l1=0.0388" + "l2=0 f=-0.225 shape=(1, 9000, 1)
logits [[ 3.2684097 -2.4215271  2.563194  -4.3084874]]
Iteration 100 of 1000: loss=0.035 " + "l1=0.0326" + "l2=0.0024 f=-0.226 shape=(1, 9000, 1)
logits [[ 3.1870692 -2.4481945  2.5939448 -4.2372146]]
Iteration 200 of 1000: loss=0.034 " + "l1=0.0311" + "l2=0.00286 f=-0.226 shape=(1, 9000, 1)
logits [[ 3.1665251 -2.4535007  2.6005957 -4.2184815]]
Iteration 300 of 1000: loss=0.033 " + "l1=0.0297" + "l2=0.00336 f=-0.226 shape=(1, 9000, 1)
logits [[ 3.147754  -2.4588718  2.608561  -4.2028446]]
Iteration 400 of 1000: loss=0.0321 " + "l1=0.0283" + "l2=0.00375 f=-0.226 shape=(1, 9000, 1)
logits [[ 3.1323755 -2.46504    2.617652  -4.190059 ]]
Iteration 500 of 1000: loss=0.031 " + "l1=0.0269" + "l2=0.00415 f=-0.227 shape=(1, 9000, 1)
logits [[ 3.1170528 -2.4723408  2.6280966 -4.1789145]]
Iteration 600 of 1000: loss=0.0299 " + "l1=0.0255" + "l2=0.00447 f=-0.227 shape=(1, 9000, 1)
logits [[ 3.1015382 -2.4792893  2.6385703 -4.1675296]]
Iteration 700 of 1000: loss=0.0288 " + "l1=0.0239" + "l2=0.00489 f=-0.227 shape=(1, 9000, 1)
logits [[ 3.0840316 -2.4863644  2.6496785 -4.154101 ]]
Iteration 800 of 1000: loss=0.0275 " + "l1=0.0223" + "l2=0.00524 f=-0.226 shape=(1, 9000, 1)
logits [[ 3.0662913 -2.494227   2.6613038 -4.1391544]]
Iteration 900 of 1000: loss=0.026 " + "l1=0.0203" + "l2=0.00567 f=-0.226 shape=(1, 9000, 1)
logits [[ 3.0430129 -2.5014057  2.673068  -4.116901 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0547 " + "l1=0.0547" + "l2=0 f=-0.225 shape=(1, 9000, 1)
logits [[ 3.2684097 -2.4215271  2.563194  -4.3084874]]
Iteration 100 of 1000: loss=0.0472 " + "l1=0.0426" + "l2=0.00461 f=-0.227 shape=(1, 9000, 1)
logits [[ 3.1556897 -2.4577067  2.605578  -4.209779 ]]
Iteration 200 of 1000: loss=0.0451 " + "l1=0.0393" + "l2=0.00571 f=-0.227 shape=(1, 9000, 1)
logits [[ 3.1250792 -2.4669292  2.6173656 -4.1820483]]
Iteration 300 of 1000: loss=0.043 " + "l1=0.0363" + "l2=0.00665 f=-0.227 shape=(1, 9000, 1)
logits [[ 3.098413  -2.4752474  2.6293824 -4.159418 ]]
Iteration 400 of 1000: loss=0.0408 " + "l1=0.0334" + "l2=0.00744 f=-0.227 shape=(1, 9000, 1)
logits [[ 3.075116 -2.486316  2.644584 -4.141992]]
Iteration 500 of 1000: loss=0.0385 " + "l1=0.0304" + "l2=0.00812 f=-0.227 shape=(1, 9000, 1)
logits [[ 3.0522559 -2.4973228  2.660295  -4.124274 ]]
Iteration 600 of 1000: loss=0.036 " + "l1=0.0271" + "l2=0.00884 f=-0.227 shape=(1, 9000, 1)
logits [[ 3.0270493 -2.50922    2.676864  -4.1030045]]
Iteration 700 of 1000: loss=0.033 " + "l1=0.0233" + "l2=0.00969 f=-0.226 shape=(1, 9000, 1)
logits [[ 2.9934554 -2.5187879  2.6928759 -4.07077  ]]
Iteration 800 of 1000: loss=0.03 " + "l1=0.02" + "l2=0.01 f=-0.224 shape=(1, 9000, 1)
logits [[ 2.9649684 -2.5283754  2.7064986 -4.0406632]]
Iteration 900 of 1000: loss=0.0273 " + "l1=0.0166" + "l2=0.0107 f=-0.224 shape=(1, 9000, 1)
logits [[ 2.9345682 -2.5373716  2.7203872 -4.013039 ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0626 " + "l1=0.0626" + "l2=0 f=-0.225 shape=(1, 9000, 1)
logits [[ 3.2684097 -2.4215271  2.563194  -4.3084874]]
Iteration 100 of 1000: loss=0.0529 " + "l1=0.0469" + "l2=0.00597 f=-0.227 shape=(1, 9000, 1)
logits [[ 3.1405277 -2.462519   2.6115541 -4.1960835]]
Iteration 200 of 1000: loss=0.05 " + "l1=0.0425" + "l2=0.00749 f=-0.227 shape=(1, 9000, 1)
logits [[ 3.1039126 -2.4724512  2.625126  -4.163329 ]]
Iteration 300 of 1000: loss=0.0472 " + "l1=0.0384" + "l2=0.00881 f=-0.227 shape=(1, 9000, 1)
logits [[ 3.0729697 -2.4842467  2.6408043 -4.136713 ]]
Iteration 400 of 1000: loss=0.0442 " + "l1=0.0344" + "l2=0.00982 f=-0.227 shape=(1, 9000, 1)
logits [[ 3.0451665 -2.4970825  2.6578999 -4.1140313]]
Iteration 500 of 1000: loss=0.041 " + "l1=0.0303" + "l2=0.0108 f=-0.227 shape=(1, 9000, 1)
logits [[ 3.0163949 -2.50907    2.6753924 -4.090076 ]]
Iteration 600 of 1000: loss=0.0372 " + "l1=0.0254" + "l2=0.0118 f=-0.226 shape=(1, 9000, 1)
logits [[ 2.9807856 -2.5219936  2.6942868 -4.0557046]]
Iteration 700 of 1000: loss=0.0333 " + "l1=0.021" + "l2=0.0124 f=-0.224 shape=(1, 9000, 1)
logits [[ 2.9465    -2.5326698  2.7103631 -4.0211453]]
Iteration 800 of 1000: loss=0.0298 " + "l1=0.0164" + "l2=0.0133 f=-0.224 shape=(1, 9000, 1)
logits [[ 2.9114115 -2.5438192  2.726341  -3.9882874]]
Iteration 900 of 1000: loss=0.026 " + "l1=0.0118" + "l2=0.0142 f=-0.223 shape=(1, 9000, 1)
logits [[ 2.874223  -2.5515428  2.7409441 -3.956016 ]]
--- 252.90413761138916 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0758 " + "l1=0.0758" + "l2=0 f=-0.225 shape=(1, 9000, 1)
logits [[ 3.2684097 -2.4215271  2.563194  -4.3084874]]
Iteration 100 of 1000: loss=0.0751 " + "l1=0.0745" + "l2=0.000521 f=-0.222 shape=(1, 9000, 1)
logits [[ 3.2150671 -2.406549   2.54168   -4.239154 ]]
Iteration 200 of 1000: loss=0.0749 " + "l1=0.0744" + "l2=0.000545 f=-0.222 shape=(1, 9000, 1)
logits [[ 3.2080863 -2.404977   2.538604  -4.2297206]]
Iteration 300 of 1000: loss=0.0748 " + "l1=0.0742" + "l2=0.00065 f=-0.222 shape=(1, 9000, 1)
logits [[ 3.1997416 -2.403673   2.535253  -4.217643 ]]
Iteration 400 of 1000: loss=0.0747 " + "l1=0.074" + "l2=0.000739 f=-0.221 shape=(1, 9000, 1)
logits [[ 3.1921535 -2.4026878  2.5322502 -4.2062073]]
Iteration 500 of 1000: loss=0.0747 " + "l1=0.0738" + "l2=0.000864 f=-0.221 shape=(1, 9000, 1)
logits [[ 3.1851575 -2.401945   2.5294685 -4.195112 ]]
Iteration 600 of 1000: loss=0.0746 " + "l1=0.0736" + "l2=0.000943 f=-0.22 shape=(1, 9000, 1)
logits [[ 3.1787648 -2.4013872  2.5270157 -4.1847024]]
Iteration 700 of 1000: loss=0.0746 " + "l1=0.0735" + "l2=0.00114 f=-0.22 shape=(1, 9000, 1)
logits [[ 3.1726305 -2.4007525  2.5246584 -4.1745744]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.758 " + "l1=0.758" + "l2=0 f=-0.225 shape=(1, 9000, 1)
logits [[ 3.2684097 -2.4215271  2.563194  -4.3084874]]
Iteration 100 of 1000: loss=0.692 " + "l1=0.652" + "l2=0.0398 f=-0.2 shape=(1, 9000, 1)
logits [[ 2.8103375 -2.263179   2.3631012 -3.7113204]]
Iteration 200 of 1000: loss=0.667 " + "l1=0.612" + "l2=0.0549 f=-0.191 shape=(1, 9000, 1)
logits [[ 2.638111  -2.2082632  2.2879915 -3.4800904]]
Iteration 300 of 1000: loss=0.645 " + "l1=0.577" + "l2=0.0679 f=-0.181 shape=(1, 9000, 1)
logits [[ 2.4906905 -2.1739402  2.23414   -3.2759178]]
Iteration 400 of 1000: loss=0.624 " + "l1=0.546" + "l2=0.078 f=-0.173 shape=(1, 9000, 1)
logits [[ 2.3624103 -2.1570034  2.198499  -3.0961192]]
Iteration 500 of 1000: loss=0.602 " + "l1=0.515" + "l2=0.0869 f=-0.165 shape=(1, 9000, 1)
logits [[ 2.2401488 -2.150482   2.1648738 -2.9140475]]
Iteration 600 of 1000: loss=0.577 " + "l1=0.486" + "l2=0.0913 f=-0.158 shape=(1, 9000, 1)
logits [[ 2.1213672 -2.135423   2.119659  -2.7379024]]
Iteration 700 of 1000: loss=0.554 " + "l1=0.465" + "l2=0.089 f=-0.151 shape=(1, 9000, 1)
logits [[ 2.048584  -2.1004665  2.0503924 -2.602182 ]]
Iteration 800 of 1000: loss=0.532 " + "l1=0.442" + "l2=0.0894 f=-0.147 shape=(1, 9000, 1)
logits [[ 1.9634615 -2.06418    1.9677823 -2.4547472]]
Iteration 900 of 1000: loss=0.507 " + "l1=0.414" + "l2=0.0925 f=-0.144 shape=(1, 9000, 1)
logits [[ 1.8391389 -2.0376797  1.8816718 -2.2600658]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.58 " + "l1=7.58" + "l2=0 f=-0.225 shape=(1, 9000, 1)
logits [[ 3.2684097 -2.4215271  2.563194  -4.3084874]]
Iteration 100 of 1000: loss=3.56 " + "l1=2.07" + "l2=1.49 f=-0.0856 shape=(1, 9000, 1)
logits [[ 0.8348307  -1.2750472   1.0860112  -0.98804843]]
Iteration 200 of 1000: loss=1.87 " + "l1=0" + "l2=1.87 f=-0.0979 shape=(1, 9000, 1)
logits [[-0.23013774 -0.99860495  0.4154788   0.42165363]]
Iteration 300 of 1000: loss=1.32 " + "l1=0.00112" + "l2=1.32 f=-0.136 shape=(1, 9000, 1)
logits [[-0.2651252  -1.1583979   0.4404249   0.43930838]]
Iteration 400 of 1000: loss=1.04 " + "l1=0.00148" + "l2=1.04 f=-0.156 shape=(1, 9000, 1)
logits [[-0.28085786 -1.3095205   0.48462528  0.4831443 ]]
Iteration 500 of 1000: loss=0.879 " + "l1=0" + "l2=0.879 f=-0.164 shape=(1, 9000, 1)
logits [[-0.28615507 -1.409074    0.5170153   0.52202475]]
Iteration 600 of 1000: loss=0.782 " + "l1=0" + "l2=0.782 f=-0.163 shape=(1, 9000, 1)
logits [[-0.2896423 -1.4689894  0.5433336  0.5645893]]
Iteration 700 of 1000: loss=0.704 " + "l1=0.00803" + "l2=0.696 f=-0.166 shape=(1, 9000, 1)
logits [[-0.27738535 -1.5182272   0.5694411   0.56140715]]
Iteration 800 of 1000: loss=0.655 " + "l1=0" + "l2=0.655 f=-0.169 shape=(1, 9000, 1)
logits [[-0.3153205  -1.5336521   0.5508055   0.62290674]]
Iteration 900 of 1000: loss=0.584 " + "l1=0" + "l2=0.584 f=-0.174 shape=(1, 9000, 1)
logits [[-0.28501636 -1.5821602   0.5690504   0.6006142 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.17 " + "l1=4.17" + "l2=0 f=-0.225 shape=(1, 9000, 1)
logits [[ 3.2684097 -2.4215271  2.563194  -4.3084874]]
Iteration 100 of 1000: loss=2.59 " + "l1=1.97" + "l2=0.622 f=-0.112 shape=(1, 9000, 1)
logits [[ 1.5956069 -1.6640309  1.6025677 -1.9818634]]
Iteration 200 of 1000: loss=2 " + "l1=1.15" + "l2=0.849 f=-0.089 shape=(1, 9000, 1)
logits [[ 0.92483586 -1.4143869   1.1135999  -0.9801479 ]]
Iteration 300 of 1000: loss=1.31 " + "l1=0.214" + "l2=1.1 f=-0.123 shape=(1, 9000, 1)
logits [[ 0.02985868 -1.2734181   0.570063    0.18016347]]
Iteration 400 of 1000: loss=0.89 " + "l1=0.0294" + "l2=0.86 f=-0.157 shape=(1, 9000, 1)
logits [[-0.16934788 -1.3767264   0.48635194  0.43294758]]
Iteration 500 of 1000: loss=0.721 " + "l1=0.00856" + "l2=0.712 f=-0.164 shape=(1, 9000, 1)
logits [[-0.18940166 -1.464825    0.5066839   0.49112716]]
Iteration 600 of 1000: loss=0.609 " + "l1=0" + "l2=0.609 f=-0.171 shape=(1, 9000, 1)
logits [[-0.19577199 -1.519707    0.5099208   0.52260107]]
Iteration 700 of 1000: loss=0.529 " + "l1=0.00736" + "l2=0.522 f=-0.174 shape=(1, 9000, 1)
logits [[-0.16287884 -1.5729382   0.5258924   0.5125032 ]]
Iteration 800 of 1000: loss=0.464 " + "l1=0" + "l2=0.464 f=-0.173 shape=(1, 9000, 1)
logits [[-0.14328589 -1.594643    0.52259743  0.524413  ]]
Iteration 900 of 1000: loss=0.413 " + "l1=0" + "l2=0.413 f=-0.168 shape=(1, 9000, 1)
logits [[-0.11289419 -1.6054671   0.5217786   0.523113  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.46 " + "l1=2.46" + "l2=0 f=-0.225 shape=(1, 9000, 1)
logits [[ 3.2684097 -2.4215271  2.563194  -4.3084874]]
Iteration 100 of 1000: loss=1.8 " + "l1=1.49" + "l2=0.307 f=-0.147 shape=(1, 9000, 1)
logits [[ 1.9821842 -1.9435424  1.9806651 -2.6057208]]
Iteration 200 of 1000: loss=1.58 " + "l1=1.22" + "l2=0.364 f=-0.117 shape=(1, 9000, 1)
logits [[ 1.6823858 -1.7736411  1.686622  -2.06206  ]]
Iteration 300 of 1000: loss=1.36 " + "l1=0.926" + "l2=0.431 f=-0.106 shape=(1, 9000, 1)
logits [[ 1.3332881 -1.66161    1.3775036 -1.471702 ]]
Iteration 400 of 1000: loss=1.12 " + "l1=0.608" + "l2=0.515 f=-0.114 shape=(1, 9000, 1)
logits [[ 0.81233174 -1.6206478   1.1114678  -0.7580095 ]]
Iteration 500 of 1000: loss=0.89 " + "l1=0.328" + "l2=0.563 f=-0.132 shape=(1, 9000, 1)
logits [[ 0.358356   -1.630711    0.87535316 -0.13294506]]
Iteration 600 of 1000: loss=0.677 " + "l1=0.0853" + "l2=0.592 f=-0.144 shape=(1, 9000, 1)
logits [[-0.04656553 -1.5305805   0.6320156   0.369628  ]]
Iteration 700 of 1000: loss=0.524 " + "l1=0.0038" + "l2=0.52 f=-0.157 shape=(1, 9000, 1)
logits [[-0.19827929 -1.5199277   0.55077577  0.5390695 ]]
Iteration 800 of 1000: loss=0.446 " + "l1=0.000479" + "l2=0.446 f=-0.163 shape=(1, 9000, 1)
logits [[-0.22452345 -1.5440897   0.55816835  0.55669475]]
Iteration 900 of 1000: loss=0.395 " + "l1=0.0019" + "l2=0.393 f=-0.167 shape=(1, 9000, 1)
logits [[-0.24225047 -1.5642867   0.57128525  0.56543475]]
--- 276.24798345565796 seconds ---
Adv result:3
Loading record A06648
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0391 " + "l1=0.0391" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.046289  -1.8618928  1.7351966 -3.1483934]]
Iteration 100 of 1000: loss=0.0384 " + "l1=0.038" + "l2=0.000413 f=-0.303 shape=(1, 9000, 1)
logits [[ 1.9864709 -1.8109682  1.7018155 -3.0882385]]
Iteration 200 of 1000: loss=0.0382 " + "l1=0.0377" + "l2=0.000465 f=-0.302 shape=(1, 9000, 1)
logits [[ 1.9736117 -1.7993094  1.6960877 -3.0769372]]
Iteration 300 of 1000: loss=0.038 " + "l1=0.0375" + "l2=0.000555 f=-0.301 shape=(1, 9000, 1)
logits [[ 1.9596593 -1.78773    1.6898909 -3.0643678]]
Iteration 400 of 1000: loss=0.0379 " + "l1=0.0372" + "l2=0.000663 f=-0.3 shape=(1, 9000, 1)
logits [[ 1.9465953 -1.77738    1.6841629 -3.051957 ]]
Iteration 500 of 1000: loss=0.0378 " + "l1=0.037" + "l2=0.000749 f=-0.299 shape=(1, 9000, 1)
logits [[ 1.9336343 -1.7676206  1.6788903 -3.0394545]]
Iteration 600 of 1000: loss=0.0376 " + "l1=0.0368" + "l2=0.000821 f=-0.298 shape=(1, 9000, 1)
logits [[ 1.9205265 -1.7582803  1.6736948 -3.0267463]]
Iteration 700 of 1000: loss=0.0375 " + "l1=0.0366" + "l2=0.00096 f=-0.297 shape=(1, 9000, 1)
logits [[ 1.9080107 -1.7497176  1.6684086 -3.0141475]]
Iteration 800 of 1000: loss=0.0375 " + "l1=0.0364" + "l2=0.00111 f=-0.296 shape=(1, 9000, 1)
logits [[ 1.8951192 -1.7412117  1.6631485 -3.0012238]]
Iteration 900 of 1000: loss=0.0374 " + "l1=0.0362" + "l2=0.00124 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.8825643 -1.7330298  1.6580648 -2.9886775]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.391 " + "l1=0.391" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.046289  -1.8618928  1.7351966 -3.1483934]]
Iteration 100 of 1000: loss=0.33 " + "l1=0.298" + "l2=0.0325 f=-0.267 shape=(1, 9000, 1)
logits [[ 1.5431201 -1.4336228  1.4286846 -2.6056232]]
Iteration 200 of 1000: loss=0.304 " + "l1=0.257" + "l2=0.0466 f=-0.255 shape=(1, 9000, 1)
logits [[ 1.3024439 -1.2722852  1.3005015 -2.3494017]]
Iteration 300 of 1000: loss=0.284 " + "l1=0.233" + "l2=0.0509 f=-0.246 shape=(1, 9000, 1)
logits [[ 1.1755061 -1.1524781  1.1758114 -2.1839068]]
Iteration 400 of 1000: loss=0.267 " + "l1=0.21" + "l2=0.0565 f=-0.237 shape=(1, 9000, 1)
logits [[ 1.0638299 -1.0362588  1.0616901 -2.0375211]]
Iteration 500 of 1000: loss=0.25 " + "l1=0.187" + "l2=0.0633 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.93973124 -0.92924494  0.9400031  -1.8697429 ]]
Iteration 600 of 1000: loss=0.236 " + "l1=0.166" + "l2=0.07 f=-0.222 shape=(1, 9000, 1)
logits [[ 0.8268535  -0.83147085  0.82750064 -1.7114246 ]]
Iteration 700 of 1000: loss=0.218 " + "l1=0.135" + "l2=0.0828 f=-0.206 shape=(1, 9000, 1)
logits [[ 0.6728116  -0.6724013   0.67501885 -1.4979429 ]]
Iteration 800 of 1000: loss=0.192 " + "l1=0.102" + "l2=0.0902 f=-0.189 shape=(1, 9000, 1)
logits [[ 0.50922006 -0.5093901   0.50531614 -1.2596047 ]]
Iteration 900 of 1000: loss=0.168 " + "l1=0.0786" + "l2=0.0894 f=-0.176 shape=(1, 9000, 1)
logits [[ 0.38528875 -0.40024194  0.3841992  -1.0722399 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.91 " + "l1=3.91" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.046289  -1.8618928  1.7351966 -3.1483934]]
Iteration 100 of 1000: loss=0.605 " + "l1=0.00164" + "l2=0.603 f=-0.189 shape=(1, 9000, 1)
logits [[ 0.04393521  0.042299    0.03654784 -0.8793603 ]]
Iteration 200 of 1000: loss=0.416 " + "l1=0" + "l2=0.416 f=-0.185 shape=(1, 9000, 1)
logits [[ 0.01779409  0.03057967  0.02526851 -0.81248784]]
Iteration 300 of 1000: loss=0.339 " + "l1=0" + "l2=0.339 f=-0.183 shape=(1, 9000, 1)
logits [[ 0.00876169  0.02816659  0.01765617 -0.78593767]]
Iteration 400 of 1000: loss=0.301 " + "l1=0" + "l2=0.301 f=-0.183 shape=(1, 9000, 1)
logits [[-0.00677742  0.03915083  0.00242323 -0.76509273]]
Iteration 500 of 1000: loss=0.267 " + "l1=0" + "l2=0.267 f=-0.184 shape=(1, 9000, 1)
logits [[-0.00559778  0.02646983  0.00991239 -0.76662797]]
Iteration 600 of 1000: loss=0.251 " + "l1=0" + "l2=0.251 f=-0.185 shape=(1, 9000, 1)
logits [[-2.7369751e-02  3.1151915e-02  2.4221325e-04 -7.4498928e-01]]
Iteration 700 of 1000: loss=0.234 " + "l1=0" + "l2=0.234 f=-0.186 shape=(1, 9000, 1)
logits [[-0.02744786  0.01657187  0.00795681 -0.7423439 ]]
Iteration 800 of 1000: loss=0.227 " + "l1=0" + "l2=0.227 f=-0.184 shape=(1, 9000, 1)
logits [[-0.02831177  0.0260364  -0.00315132 -0.7313575 ]]
Iteration 900 of 1000: loss=0.217 " + "l1=0" + "l2=0.217 f=-0.186 shape=(1, 9000, 1)
logits [[-0.04011473  0.00582026  0.00302742 -0.7144883 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.15 " + "l1=2.15" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.046289  -1.8618928  1.7351966 -3.1483934]]
Iteration 100 of 1000: loss=0.556 " + "l1=0" + "l2=0.556 f=-0.193 shape=(1, 9000, 1)
logits [[ 0.03457476  0.04206703  0.04202208 -0.8898878 ]]
Iteration 200 of 1000: loss=0.356 " + "l1=0" + "l2=0.356 f=-0.188 shape=(1, 9000, 1)
logits [[ 0.02701132  0.03245836  0.02767339 -0.83924454]]
Iteration 300 of 1000: loss=0.291 " + "l1=0" + "l2=0.291 f=-0.187 shape=(1, 9000, 1)
logits [[ 0.02366832  0.03030871  0.01862765 -0.82112545]]
Iteration 400 of 1000: loss=0.255 " + "l1=0.000822" + "l2=0.255 f=-0.187 shape=(1, 9000, 1)
logits [[ 0.01450585  0.01748593  0.0189808  -0.8008788 ]]
Iteration 500 of 1000: loss=0.239 " + "l1=0" + "l2=0.239 f=-0.185 shape=(1, 9000, 1)
logits [[ 1.4836969e-02  2.4526270e-02 -2.3378199e-04 -7.8041714e-01]]
Iteration 600 of 1000: loss=0.228 " + "l1=0" + "l2=0.228 f=-0.189 shape=(1, 9000, 1)
logits [[-4.1881032e-02  1.7127367e-02  3.9381767e-04 -7.3126143e-01]]
Iteration 700 of 1000: loss=0.223 " + "l1=0.00935" + "l2=0.214 f=-0.183 shape=(1, 9000, 1)
logits [[ 0.02162306  0.0046309   0.00193776 -0.76025325]]
Iteration 800 of 1000: loss=0.209 " + "l1=0" + "l2=0.209 f=-0.185 shape=(1, 9000, 1)
logits [[-0.02811332  0.00700148 -0.00665568 -0.7122287 ]]
Iteration 900 of 1000: loss=0.205 " + "l1=0" + "l2=0.205 f=-0.185 shape=(1, 9000, 1)
logits [[-0.03238629  0.01012695 -0.01316635 -0.7051309 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.27 " + "l1=1.27" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.046289  -1.8618928  1.7351966 -3.1483934]]
Iteration 100 of 1000: loss=0.606 " + "l1=0.253" + "l2=0.353 f=-0.192 shape=(1, 9000, 1)
logits [[ 0.4451554  -0.33279046  0.44363952 -1.3246893 ]]
Iteration 200 of 1000: loss=0.357 " + "l1=0.0165" + "l2=0.34 f=-0.186 shape=(1, 9000, 1)
logits [[ 0.05676067  0.00597749  0.05605419 -0.86454207]]
Iteration 300 of 1000: loss=0.275 " + "l1=0.00604" + "l2=0.269 f=-0.188 shape=(1, 9000, 1)
logits [[ 0.02881932  0.01425599  0.0328341  -0.8265877 ]]
Iteration 400 of 1000: loss=0.243 " + "l1=0" + "l2=0.243 f=-0.188 shape=(1, 9000, 1)
logits [[ 0.0016776   0.01613968  0.01282382 -0.78230375]]
Iteration 500 of 1000: loss=0.224 " + "l1=0.00148" + "l2=0.223 f=-0.187 shape=(1, 9000, 1)
logits [[ 4.5789964e-04  5.0146747e-03  9.5744077e-03 -7.6236820e-01]]
Iteration 600 of 1000: loss=0.212 " + "l1=0.0045" + "l2=0.207 f=-0.187 shape=(1, 9000, 1)
logits [[ 0.00788965 -0.00234276  0.0115042  -0.76477015]]
Iteration 700 of 1000: loss=0.195 " + "l1=0" + "l2=0.195 f=-0.187 shape=(1, 9000, 1)
logits [[-0.00579521  0.00532415 -0.00123509 -0.74630153]]
Iteration 800 of 1000: loss=0.182 " + "l1=0.00148" + "l2=0.181 f=-0.187 shape=(1, 9000, 1)
logits [[ 5.1933397e-03  6.4231642e-04 -1.8681060e-03 -7.5048846e-01]]
Iteration 900 of 1000: loss=0.171 " + "l1=0" + "l2=0.171 f=-0.188 shape=(1, 9000, 1)
logits [[-0.00770086  0.00125452 -0.00129119 -0.7438138 ]]
--- 296.0689001083374 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00311 " + "l1=0.00311" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.046289  -1.8618928  1.7351966 -3.1483934]]
Iteration 100 of 1000: loss=0.00285 " + "l1=0.00263" + "l2=0.000212 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.0140984 -1.8654872  1.7507457 -3.1263301]]
Iteration 200 of 1000: loss=0.00276 " + "l1=0.00257" + "l2=0.000191 f=-0.306 shape=(1, 9000, 1)
logits [[ 2.0097442 -1.8631207  1.7531039 -3.1250522]]
Iteration 300 of 1000: loss=0.00268 " + "l1=0.00247" + "l2=0.000216 f=-0.306 shape=(1, 9000, 1)
logits [[ 2.0036128 -1.8617895  1.7569097 -3.1229017]]
Iteration 400 of 1000: loss=0.00262 " + "l1=0.00236" + "l2=0.000258 f=-0.306 shape=(1, 9000, 1)
logits [[ 1.9969358 -1.8607587  1.7606666 -3.1199512]]
Iteration 500 of 1000: loss=0.00261 " + "l1=0.00225" + "l2=0.000355 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9899869 -1.8597767  1.7645131 -3.1165702]]
Iteration 600 of 1000: loss=0.00255 " + "l1=0.00215" + "l2=0.000397 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9832087 -1.8589042  1.7682117 -3.11308  ]]
Iteration 700 of 1000: loss=0.00258 " + "l1=0.00205" + "l2=0.000531 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.97662   -1.8583124  1.7714726 -3.1092186]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0311 " + "l1=0.0311" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.046289  -1.8618928  1.7351966 -3.1483934]]
Iteration 100 of 1000: loss=0.0094 " + "l1=7.62e-05" + "l2=0.00933 f=-0.306 shape=(1, 9000, 1)
logits [[ 1.8429961 -1.8901786  1.842234  -3.020539 ]]
Iteration 200 of 1000: loss=0.00632 " + "l1=0.000396" + "l2=0.00593 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.8442428 -1.8794731  1.8402821 -3.0262785]]
Iteration 300 of 1000: loss=0.00456 " + "l1=0.000124" + "l2=0.00444 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.8404378 -1.8768479  1.8391955 -3.0236692]]
Iteration 400 of 1000: loss=0.00363 " + "l1=0" + "l2=0.00363 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.836638  -1.8763195  1.8383304 -3.019533 ]]
Iteration 500 of 1000: loss=0.00289 " + "l1=0" + "l2=0.00289 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.8320609 -1.8749304  1.8370581 -3.015235 ]]
Iteration 600 of 1000: loss=0.00248 " + "l1=0" + "l2=0.00248 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.8320253 -1.8726904  1.834287  -3.0142436]]
Iteration 700 of 1000: loss=0.0021 " + "l1=0" + "l2=0.0021 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.8302875 -1.8709713  1.8327302 -3.0124578]]
Iteration 800 of 1000: loss=0.00202 " + "l1=3.85e-05" + "l2=0.00198 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.8308111 -1.868221   1.8304263 -3.0124898]]
Iteration 900 of 1000: loss=0.00189 " + "l1=0" + "l2=0.00189 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.8280258 -1.8672534  1.831014  -3.0113423]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0171 " + "l1=0.0171" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.046289  -1.8618928  1.7351966 -3.1483934]]
Iteration 100 of 1000: loss=0.0101 " + "l1=0.00672" + "l2=0.00343 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9226588 -1.8749666  1.8005555 -3.0698066]]
Iteration 200 of 1000: loss=0.00761 " + "l1=0.00305" + "l2=0.00455 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.8785605 -1.8722992  1.8230492 -3.0481997]]
Iteration 300 of 1000: loss=0.00546 " + "l1=0.000201" + "l2=0.00526 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.8429607 -1.8762928  1.8393012 -3.0264096]]
Iteration 400 of 1000: loss=0.00398 " + "l1=4.06e-05" + "l2=0.00394 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.8395219 -1.8759552  1.8387834 -3.0230744]]
Iteration 500 of 1000: loss=0.00308 " + "l1=0" + "l2=0.00308 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.8359826 -1.8742962  1.8365434 -3.0186415]]
Iteration 600 of 1000: loss=0.00257 " + "l1=0" + "l2=0.00257 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.8338053 -1.8728161  1.8345472 -3.0159695]]
Iteration 700 of 1000: loss=0.00214 " + "l1=0" + "l2=0.00214 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.8319684 -1.870999   1.8328178 -3.0141222]]
Iteration 800 of 1000: loss=0.00191 " + "l1=0" + "l2=0.00191 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.8293293 -1.8690698  1.831574  -3.0117364]]
Iteration 900 of 1000: loss=0.00194 " + "l1=0" + "l2=0.00194 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.8293196 -1.8666583  1.8301216 -3.0120332]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0101 " + "l1=0.0101" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.046289  -1.8618928  1.7351966 -3.1483934]]
Iteration 100 of 1000: loss=0.00752 " + "l1=0.00619" + "l2=0.00134 f=-0.306 shape=(1, 9000, 1)
logits [[ 1.9681534 -1.8704609  1.7778068 -3.0999424]]
Iteration 200 of 1000: loss=0.00658 " + "l1=0.00489" + "l2=0.00169 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9426093 -1.8656853  1.792176  -3.0879989]]
Iteration 300 of 1000: loss=0.00578 " + "l1=0.00382" + "l2=0.00197 f=-0.304 shape=(1, 9000, 1)
logits [[ 1.9207178 -1.8636632  1.8032755 -3.0759168]]
Iteration 400 of 1000: loss=0.00505 " + "l1=0.00286" + "l2=0.00219 f=-0.304 shape=(1, 9000, 1)
logits [[ 1.8995062 -1.864202   1.811372  -3.061919 ]]
Iteration 500 of 1000: loss=0.00436 " + "l1=0.00197" + "l2=0.0024 f=-0.304 shape=(1, 9000, 1)
logits [[ 1.8793814 -1.8659291  1.8189089 -3.0475752]]
Iteration 600 of 1000: loss=0.00359 " + "l1=0.000996" + "l2=0.00259 f=-0.304 shape=(1, 9000, 1)
logits [[ 1.8575122 -1.8676809  1.8268812 -3.0326912]]
Iteration 700 of 1000: loss=0.00283 " + "l1=2.59e-05" + "l2=0.0028 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.8346344 -1.869987   1.8338383 -3.0165465]]
Iteration 800 of 1000: loss=0.00229 " + "l1=0" + "l2=0.00229 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.8311987 -1.8687297  1.8322078 -3.0129929]]
Iteration 900 of 1000: loss=0.00199 " + "l1=3.98e-05" + "l2=0.00195 f=-0.304 shape=(1, 9000, 1)
logits [[ 1.8307936 -1.8666239  1.8295686 -3.0115047]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00661 " + "l1=0.00661" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.046289  -1.8618928  1.7351966 -3.1483934]]
Iteration 100 of 1000: loss=0.00546 " + "l1=0.0048" + "l2=0.000656 f=-0.306 shape=(1, 9000, 1)
logits [[ 1.9906056 -1.8678278  1.7646544 -3.1127942]]
Iteration 200 of 1000: loss=0.00506 " + "l1=0.0043" + "l2=0.000761 f=-0.306 shape=(1, 9000, 1)
logits [[ 1.9760524 -1.8647765  1.7736163 -3.107376 ]]
Iteration 300 of 1000: loss=0.0047 " + "l1=0.00382" + "l2=0.000881 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9620819 -1.8631558  1.7821565 -3.1013288]]
Iteration 400 of 1000: loss=0.00441 " + "l1=0.00337" + "l2=0.00103 f=-0.304 shape=(1, 9000, 1)
logits [[ 1.9485205 -1.8617046  1.789763  -3.0940683]]
Iteration 500 of 1000: loss=0.00411 " + "l1=0.00294" + "l2=0.00117 f=-0.304 shape=(1, 9000, 1)
logits [[ 1.9346318 -1.8614857  1.7962732 -3.0851119]]
Iteration 600 of 1000: loss=0.00381 " + "l1=0.00254" + "l2=0.00126 f=-0.304 shape=(1, 9000, 1)
logits [[ 1.9212098 -1.8615278  1.801656  -3.0761127]]
Iteration 700 of 1000: loss=0.00354 " + "l1=0.00214" + "l2=0.00141 f=-0.304 shape=(1, 9000, 1)
logits [[ 1.9075222 -1.8619416  1.8069471 -3.0671368]]
Iteration 800 of 1000: loss=0.00329 " + "l1=0.00176" + "l2=0.00153 f=-0.304 shape=(1, 9000, 1)
logits [[ 1.8941697 -1.8621906  1.8114866 -3.0579293]]
Iteration 900 of 1000: loss=0.00293 " + "l1=0.00132" + "l2=0.00161 f=-0.304 shape=(1, 9000, 1)
logits [[ 1.8784811 -1.8623796  1.8162444 -3.0473623]]
--- 274.1525251865387 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0519 " + "l1=0.0519" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.046289  -1.8618928  1.7351966 -3.1483934]]
Iteration 100 of 1000: loss=0.0508 " + "l1=0.0501" + "l2=0.000673 f=-0.302 shape=(1, 9000, 1)
logits [[ 1.9654119 -1.8264114  1.6987168 -3.047087 ]]
Iteration 200 of 1000: loss=0.0505 " + "l1=0.0497" + "l2=0.000762 f=-0.301 shape=(1, 9000, 1)
logits [[ 1.9461629 -1.8172344  1.690586  -3.0240393]]
Iteration 300 of 1000: loss=0.0502 " + "l1=0.0492" + "l2=0.000922 f=-0.3 shape=(1, 9000, 1)
logits [[ 1.9253697 -1.8087695  1.6819593 -2.9982727]]
Iteration 400 of 1000: loss=0.0498 " + "l1=0.0488" + "l2=0.00108 f=-0.299 shape=(1, 9000, 1)
logits [[ 1.9041868 -1.8007091  1.6730856 -2.9716816]]
Iteration 500 of 1000: loss=0.0495 " + "l1=0.0483" + "l2=0.00123 f=-0.298 shape=(1, 9000, 1)
logits [[ 1.8833925 -1.7930567  1.6646453 -2.945199 ]]
Iteration 600 of 1000: loss=0.0492 " + "l1=0.0478" + "l2=0.00143 f=-0.296 shape=(1, 9000, 1)
logits [[ 1.8625789 -1.7856406  1.6565261 -2.9188554]]
Iteration 700 of 1000: loss=0.049 " + "l1=0.0473" + "l2=0.00168 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.8420256 -1.7786144  1.6487567 -2.8925672]]
Iteration 800 of 1000: loss=0.0488 " + "l1=0.0469" + "l2=0.00191 f=-0.294 shape=(1, 9000, 1)
logits [[ 1.8207455 -1.7712305  1.6413369 -2.8664286]]
Iteration 900 of 1000: loss=0.0487 " + "l1=0.0464" + "l2=0.00227 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.7988222 -1.7635436  1.6337852 -2.8399947]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.519 " + "l1=0.519" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.046289  -1.8618928  1.7351966 -3.1483934]]
Iteration 100 of 1000: loss=0.406 " + "l1=0.346" + "l2=0.06 f=-0.267 shape=(1, 9000, 1)
logits [[ 1.3025585 -1.518106   1.3019841 -2.1554947]]
Iteration 200 of 1000: loss=0.356 " + "l1=0.275" + "l2=0.0805 f=-0.25 shape=(1, 9000, 1)
logits [[ 1.0381227 -1.3645258  1.039351  -1.7137179]]
Iteration 300 of 1000: loss=0.314 " + "l1=0.216" + "l2=0.0979 f=-0.235 shape=(1, 9000, 1)
logits [[ 0.81814384 -1.2569569   0.83046424 -1.3315171 ]]
Iteration 400 of 1000: loss=0.273 " + "l1=0.146" + "l2=0.126 f=-0.217 shape=(1, 9000, 1)
logits [[ 0.5230588 -1.1092873  0.591546  -0.872121 ]]
Iteration 500 of 1000: loss=0.218 " + "l1=0.0459" + "l2=0.172 f=-0.176 shape=(1, 9000, 1)
logits [[ 0.13580947 -0.82856315  0.22365159 -0.23548579]]
Iteration 600 of 1000: loss=0.186 " + "l1=0.0139" + "l2=0.172 f=-0.167 shape=(1, 9000, 1)
logits [[ 0.00815357 -0.8106079   0.13723166 -0.00217298]]
Iteration 700 of 1000: loss=0.164 " + "l1=0.0024" + "l2=0.162 f=-0.169 shape=(1, 9000, 1)
logits [[-0.04866333 -0.8178673   0.10799512  0.08398432]]
Iteration 800 of 1000: loss=0.148 " + "l1=0.000526" + "l2=0.148 f=-0.174 shape=(1, 9000, 1)
logits [[-0.06519728 -0.8600621   0.11741737  0.11215565]]
Iteration 900 of 1000: loss=0.133 " + "l1=0.00275" + "l2=0.13 f=-0.181 shape=(1, 9000, 1)
logits [[-0.06464836 -0.91976726  0.14302438  0.11552443]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.286 " + "l1=0.286" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.046289  -1.8618928  1.7351966 -3.1483934]]
Iteration 100 of 1000: loss=0.253 " + "l1=0.235" + "l2=0.0177 f=-0.286 shape=(1, 9000, 1)
logits [[ 1.6412041 -1.6873536  1.5396537 -2.635987 ]]
Iteration 200 of 1000: loss=0.237 " + "l1=0.21" + "l2=0.0265 f=-0.277 shape=(1, 9000, 1)
logits [[ 1.4433211 -1.612594   1.4426808 -2.382587 ]]
Iteration 300 of 1000: loss=0.223 " + "l1=0.193" + "l2=0.0296 f=-0.269 shape=(1, 9000, 1)
logits [[ 1.3257399 -1.5372009  1.3253982 -2.18819  ]]
Iteration 400 of 1000: loss=0.21 " + "l1=0.176" + "l2=0.0336 f=-0.261 shape=(1, 9000, 1)
logits [[ 1.2121468 -1.4711989  1.2117988 -1.9949074]]
Iteration 500 of 1000: loss=0.199 " + "l1=0.162" + "l2=0.0365 f=-0.25 shape=(1, 9000, 1)
logits [[ 1.1201048 -1.4181567  1.1230003 -1.8268038]]
Iteration 600 of 1000: loss=0.189 " + "l1=0.149" + "l2=0.0399 f=-0.244 shape=(1, 9000, 1)
logits [[ 1.0284616 -1.3767141  1.0394658 -1.6691405]]
Iteration 700 of 1000: loss=0.179 " + "l1=0.134" + "l2=0.0446 f=-0.241 shape=(1, 9000, 1)
logits [[ 0.9206866 -1.3376578  0.9474409 -1.4944237]]
Iteration 800 of 1000: loss=0.169 " + "l1=0.12" + "l2=0.0489 f=-0.234 shape=(1, 9000, 1)
logits [[ 0.8139322  -1.2924207   0.86484164 -1.3241801 ]]
Iteration 900 of 1000: loss=0.161 " + "l1=0.109" + "l2=0.052 f=-0.227 shape=(1, 9000, 1)
logits [[ 0.72947764 -1.2559708   0.7967364  -1.1790442 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.403 " + "l1=0.403" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.046289  -1.8618928  1.7351966 -3.1483934]]
Iteration 100 of 1000: loss=0.335 " + "l1=0.297" + "l2=0.0383 f=-0.277 shape=(1, 9000, 1)
logits [[ 1.4438288 -1.608483   1.4375815 -2.3829222]]
Iteration 200 of 1000: loss=0.303 " + "l1=0.253" + "l2=0.0505 f=-0.263 shape=(1, 9000, 1)
logits [[ 1.2270566 -1.4746072  1.2306371 -2.0332384]]
Iteration 300 of 1000: loss=0.277 " + "l1=0.219" + "l2=0.0578 f=-0.25 shape=(1, 9000, 1)
logits [[ 1.0666494 -1.3844129  1.0728611 -1.756361 ]]
Iteration 400 of 1000: loss=0.255 " + "l1=0.19" + "l2=0.0651 f=-0.243 shape=(1, 9000, 1)
logits [[ 0.92805684 -1.3270727   0.9371381  -1.5090714 ]]
Iteration 500 of 1000: loss=0.233 " + "l1=0.159" + "l2=0.074 f=-0.233 shape=(1, 9000, 1)
logits [[ 0.75791043 -1.2587425   0.8080199  -1.2375275 ]]
Iteration 600 of 1000: loss=0.211 " + "l1=0.128" + "l2=0.083 f=-0.222 shape=(1, 9000, 1)
logits [[ 0.5952397  -1.1946769   0.68254983 -0.97102565]]
Iteration 700 of 1000: loss=0.185 " + "l1=0.0819" + "l2=0.103 f=-0.201 shape=(1, 9000, 1)
logits [[ 0.3587892 -1.0360876  0.4651261 -0.5922578]]
Iteration 800 of 1000: loss=0.159 " + "l1=0.0497" + "l2=0.11 f=-0.189 shape=(1, 9000, 1)
logits [[ 0.20431943 -0.9724878   0.32695717 -0.31430376]]
Iteration 900 of 1000: loss=0.138 " + "l1=0.0218" + "l2=0.116 f=-0.176 shape=(1, 9000, 1)
logits [[ 0.05504157 -0.8989642   0.210539   -0.07046269]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.344 " + "l1=0.344" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.046289  -1.8618928  1.7351966 -3.1483934]]
Iteration 100 of 1000: loss=0.296 " + "l1=0.269" + "l2=0.0271 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.5427976 -1.6470665  1.4892021 -2.510865 ]]
Iteration 200 of 1000: loss=0.272 " + "l1=0.235" + "l2=0.0372 f=-0.269 shape=(1, 9000, 1)
logits [[ 1.3382673 -1.5415572  1.33837   -2.2118661]]
Iteration 300 of 1000: loss=0.252 " + "l1=0.209" + "l2=0.0429 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.1934456 -1.4581095  1.1925992 -1.9676847]]
Iteration 400 of 1000: loss=0.235 " + "l1=0.187" + "l2=0.0476 f=-0.248 shape=(1, 9000, 1)
logits [[ 1.0702384 -1.3886174  1.0754848 -1.7500864]]
Iteration 500 of 1000: loss=0.219 " + "l1=0.167" + "l2=0.0525 f=-0.243 shape=(1, 9000, 1)
logits [[ 0.95566154 -1.34098     0.96654356 -1.5523446 ]]
Iteration 600 of 1000: loss=0.204 " + "l1=0.146" + "l2=0.0582 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.8226807  -1.2885816   0.85945964 -1.3391021 ]]
Iteration 700 of 1000: loss=0.19 " + "l1=0.125" + "l2=0.0645 f=-0.226 shape=(1, 9000, 1)
logits [[ 0.690919  -1.2318195  0.762714  -1.12721  ]]
Iteration 800 of 1000: loss=0.174 " + "l1=0.0975" + "l2=0.0761 f=-0.212 shape=(1, 9000, 1)
logits [[ 0.5308197 -1.1376517  0.6156424 -0.8555162]]
Iteration 900 of 1000: loss=0.154 " + "l1=0.069" + "l2=0.0849 f=-0.198 shape=(1, 9000, 1)
logits [[ 0.36522892 -1.0395311   0.46112752 -0.58022696]]
--- 299.53092551231384 seconds ---
Adv result:3
Loading record A06676
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0925 " + "l1=0.0925" + "l2=0 f=-0.608 shape=(1, 9000, 1)
logits [[ 5.199324  -4.0548944  3.7690082 -7.3471885]]
Iteration 100 of 1000: loss=0.0922 " + "l1=0.0919" + "l2=0.000279 f=-0.606 shape=(1, 9000, 1)
logits [[ 5.152944  -4.035335   3.7517197 -7.29372  ]]
Iteration 200 of 1000: loss=0.0921 " + "l1=0.0918" + "l2=0.000268 f=-0.605 shape=(1, 9000, 1)
logits [[ 5.147971  -4.0321913  3.7492764 -7.286897 ]]
Iteration 300 of 1000: loss=0.092 " + "l1=0.0917" + "l2=0.000314 f=-0.605 shape=(1, 9000, 1)
logits [[ 5.1402326 -4.027763   3.7459104 -7.2768073]]
Iteration 400 of 1000: loss=0.0919 " + "l1=0.0915" + "l2=0.000393 f=-0.604 shape=(1, 9000, 1)
logits [[ 5.131506  -4.0228453  3.7421627 -7.2653747]]
Iteration 500 of 1000: loss=0.0919 " + "l1=0.0914" + "l2=0.000475 f=-0.603 shape=(1, 9000, 1)
logits [[ 5.122509  -4.017864   3.738348  -7.2534585]]
Iteration 600 of 1000: loss=0.0918 " + "l1=0.0913" + "l2=0.000538 f=-0.602 shape=(1, 9000, 1)
logits [[ 5.113505  -4.0130353  3.7345822 -7.2415047]]
Iteration 700 of 1000: loss=0.0918 " + "l1=0.0911" + "l2=0.000647 f=-0.601 shape=(1, 9000, 1)
logits [[ 5.104408  -4.0083113  3.7308185 -7.229338 ]]
Iteration 800 of 1000: loss=0.0917 " + "l1=0.091" + "l2=0.000745 f=-0.6 shape=(1, 9000, 1)
logits [[ 5.094852  -4.0036883  3.7271366 -7.2165704]]
Iteration 900 of 1000: loss=0.0917 " + "l1=0.0909" + "l2=0.000893 f=-0.599 shape=(1, 9000, 1)
logits [[ 5.0858464 -3.9991765  3.723654  -7.2043953]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.925 " + "l1=0.925" + "l2=0 f=-0.608 shape=(1, 9000, 1)
logits [[ 5.199324  -4.0548944  3.7690082 -7.3471885]]
Iteration 100 of 1000: loss=0.891 " + "l1=0.871" + "l2=0.0198 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.8256025 -3.8886392  3.6223452 -6.9164824]]
Iteration 200 of 1000: loss=0.876 " + "l1=0.849" + "l2=0.0273 f=-0.579 shape=(1, 9000, 1)
logits [[ 4.6748996 -3.8156323  3.5629873 -6.7378097]]
Iteration 300 of 1000: loss=0.86 " + "l1=0.826" + "l2=0.0347 f=-0.569 shape=(1, 9000, 1)
logits [[ 4.522397  -3.7331088  3.4968967 -6.5609603]]
Iteration 400 of 1000: loss=0.844 " + "l1=0.804" + "l2=0.0407 f=-0.56 shape=(1, 9000, 1)
logits [[ 4.391204  -3.6453993  3.4214876 -6.408759 ]]
Iteration 500 of 1000: loss=0.828 " + "l1=0.782" + "l2=0.0467 f=-0.55 shape=(1, 9000, 1)
logits [[ 4.2613683 -3.556727   3.3445995 -6.2508264]]
Iteration 600 of 1000: loss=0.813 " + "l1=0.759" + "l2=0.0539 f=-0.539 shape=(1, 9000, 1)
logits [[ 4.125303  -3.462394   3.2605271 -6.081404 ]]
Iteration 700 of 1000: loss=0.797 " + "l1=0.736" + "l2=0.061 f=-0.528 shape=(1, 9000, 1)
logits [[ 3.996285  -3.3677793  3.1786783 -5.9206696]]
Iteration 800 of 1000: loss=0.783 " + "l1=0.716" + "l2=0.0674 f=-0.517 shape=(1, 9000, 1)
logits [[ 3.876665  -3.2819607  3.1062403 -5.770795 ]]
Iteration 900 of 1000: loss=0.771 " + "l1=0.698" + "l2=0.0729 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.7673466 -3.2138124  3.042997  -5.631754 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.25 " + "l1=9.25" + "l2=0 f=-0.608 shape=(1, 9000, 1)
logits [[ 5.199324  -4.0548944  3.7690082 -7.3471885]]
Iteration 100 of 1000: loss=6.04 " + "l1=4.66" + "l2=1.38 f=-0.446 shape=(1, 9000, 1)
logits [[ 2.274136  -2.390577   2.2677622 -3.937008 ]]
Iteration 200 of 1000: loss=4.84 " + "l1=3.17" + "l2=1.67 f=-0.37 shape=(1, 9000, 1)
logits [[ 1.5926113 -1.5741453  1.6002698 -3.0969744]]
Iteration 300 of 1000: loss=3.68 " + "l1=1.57" + "l2=2.11 f=-0.285 shape=(1, 9000, 1)
logits [[ 0.857305  -0.7120195  0.8623975 -2.1468298]]
Iteration 400 of 1000: loss=2.9 " + "l1=0.818" + "l2=2.08 f=-0.255 shape=(1, 9000, 1)
logits [[ 0.50166976 -0.30955574  0.5084113  -1.7205992 ]]
Iteration 500 of 1000: loss=2.47 " + "l1=0.445" + "l2=2.03 f=-0.233 shape=(1, 9000, 1)
logits [[ 0.32714188 -0.10831489  0.3363934  -1.4862399 ]]
Iteration 600 of 1000: loss=2.21 " + "l1=0.195" + "l2=2.01 f=-0.223 shape=(1, 9000, 1)
logits [[ 0.18842033  0.01202926  0.20735049 -1.2984593 ]]
Iteration 700 of 1000: loss=2.01 " + "l1=0.0696" + "l2=1.94 f=-0.221 shape=(1, 9000, 1)
logits [[ 0.11023462  0.06112733  0.13068597 -1.1860206 ]]
Iteration 800 of 1000: loss=1.88 " + "l1=0" + "l2=1.88 f=-0.216 shape=(1, 9000, 1)
logits [[ 0.05814914  0.08803245  0.08331354 -1.0925288 ]]
Iteration 900 of 1000: loss=1.8 " + "l1=0.000151" + "l2=1.8 f=-0.208 shape=(1, 9000, 1)
logits [[ 0.08528056  0.08570529  0.0858563  -1.088416  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.09 " + "l1=5.09" + "l2=0 f=-0.608 shape=(1, 9000, 1)
logits [[ 5.199324  -4.0548944  3.7690082 -7.3471885]]
Iteration 100 of 1000: loss=3.97 " + "l1=3.39" + "l2=0.583 f=-0.508 shape=(1, 9000, 1)
logits [[ 3.0868905 -3.0719576  2.860131  -4.906683 ]]
Iteration 200 of 1000: loss=3.43 " + "l1=2.66" + "l2=0.767 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.3796318 -2.4653637  2.3600154 -4.0927987]]
Iteration 300 of 1000: loss=3.02 " + "l1=2.18" + "l2=0.84 f=-0.406 shape=(1, 9000, 1)
logits [[ 1.9592199 -2.0069606  1.9540676 -3.5296137]]
Iteration 400 of 1000: loss=2.62 " + "l1=1.67" + "l2=0.946 f=-0.364 shape=(1, 9000, 1)
logits [[ 1.5331101 -1.5080522  1.526742  -3.0085647]]
Iteration 500 of 1000: loss=2.29 " + "l1=1.19" + "l2=1.1 f=-0.316 shape=(1, 9000, 1)
logits [[ 1.1130527 -1.048288   1.1171689 -2.4447227]]
Iteration 600 of 1000: loss=2.02 " + "l1=0.8" + "l2=1.22 f=-0.284 shape=(1, 9000, 1)
logits [[ 0.7843218  -0.6711079   0.78019655 -2.0308332 ]]
Iteration 700 of 1000: loss=1.88 " + "l1=0.64" + "l2=1.24 f=-0.26 shape=(1, 9000, 1)
logits [[ 0.65332985 -0.5096859   0.65348184 -1.8369116 ]]
Iteration 800 of 1000: loss=1.8 " + "l1=0.564" + "l2=1.23 f=-0.243 shape=(1, 9000, 1)
logits [[ 0.58954394 -0.42917645  0.59538907 -1.72629   ]]
Iteration 900 of 1000: loss=1.74 " + "l1=0.508" + "l2=1.23 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.539327  -0.3755718  0.5488386 -1.6328163]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=7.17 " + "l1=7.17" + "l2=0 f=-0.608 shape=(1, 9000, 1)
logits [[ 5.199324  -4.0548944  3.7690082 -7.3471885]]
Iteration 100 of 1000: loss=5.08 " + "l1=4.1" + "l2=0.98 f=-0.475 shape=(1, 9000, 1)
logits [[ 2.5651765 -2.7243428  2.560094  -4.3008246]]
Iteration 200 of 1000: loss=4.22 " + "l1=3.04" + "l2=1.18 f=-0.408 shape=(1, 9000, 1)
logits [[ 1.9449534 -1.9742763  1.9428976 -3.5463524]]
Iteration 300 of 1000: loss=3.53 " + "l1=2.06" + "l2=1.47 f=-0.345 shape=(1, 9000, 1)
logits [[ 1.3496947 -1.3116186  1.352676  -2.7697654]]
Iteration 400 of 1000: loss=2.78 " + "l1=1.08" + "l2=1.7 f=-0.286 shape=(1, 9000, 1)
logits [[ 0.74556494 -0.6413157   0.7473027  -1.9967375 ]]
Iteration 500 of 1000: loss=2.35 " + "l1=0.733" + "l2=1.62 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.5470255  -0.3981998   0.54660535 -1.7616483 ]]
Iteration 600 of 1000: loss=2.15 " + "l1=0.549" + "l2=1.6 f=-0.246 shape=(1, 9000, 1)
logits [[ 0.42242125 -0.27167106  0.43730867 -1.5706713 ]]
Iteration 700 of 1000: loss=1.99 " + "l1=0.391" + "l2=1.6 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.33352098 -0.16088893  0.34298533 -1.4341158 ]]
Iteration 800 of 1000: loss=1.86 " + "l1=0.267" + "l2=1.6 f=-0.211 shape=(1, 9000, 1)
logits [[ 0.25784004 -0.07887328  0.2661342  -1.2897193 ]]
Iteration 900 of 1000: loss=1.79 " + "l1=0.192" + "l2=1.6 f=-0.2 shape=(1, 9000, 1)
logits [[ 0.21079269 -0.03174964  0.21643856 -1.193603  ]]
--- 293.3154947757721 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0143 " + "l1=0.0143" + "l2=0 f=-0.608 shape=(1, 9000, 1)
logits [[ 5.199324  -4.0548944  3.7690082 -7.3471885]]
Iteration 100 of 1000: loss=0.0141 " + "l1=0.0139" + "l2=0.000188 f=-0.609 shape=(1, 9000, 1)
logits [[ 5.164259  -4.058823   3.7724602 -7.313029 ]]
Iteration 200 of 1000: loss=0.014 " + "l1=0.0139" + "l2=0.000155 f=-0.609 shape=(1, 9000, 1)
logits [[ 5.1623316 -4.0591226  3.7729447 -7.3107114]]
Iteration 300 of 1000: loss=0.0141 " + "l1=0.0138" + "l2=0.000212 f=-0.608 shape=(1, 9000, 1)
logits [[ 5.158178  -4.059466   3.7738483 -7.3059163]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.143 " + "l1=0.143" + "l2=0 f=-0.608 shape=(1, 9000, 1)
logits [[ 5.199324  -4.0548944  3.7690082 -7.3471885]]
Iteration 100 of 1000: loss=0.125 " + "l1=0.114" + "l2=0.0106 f=-0.617 shape=(1, 9000, 1)
logits [[ 4.932186  -4.091128   3.7894099 -7.098295 ]]
Iteration 200 of 1000: loss=0.118 " + "l1=0.102" + "l2=0.0155 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.82618   -4.114091   3.8041477 -6.999998 ]]
Iteration 300 of 1000: loss=0.111 " + "l1=0.091" + "l2=0.0199 f=-0.623 shape=(1, 9000, 1)
logits [[ 4.730999  -4.1333194  3.8213043 -6.9103665]]
Iteration 400 of 1000: loss=0.105 " + "l1=0.0817" + "l2=0.0234 f=-0.624 shape=(1, 9000, 1)
logits [[ 4.650543  -4.14821    3.833588  -6.8317156]]
Iteration 500 of 1000: loss=0.0999 " + "l1=0.0733" + "l2=0.0266 f=-0.625 shape=(1, 9000, 1)
logits [[ 4.578076  -4.159783   3.8450456 -6.7619734]]
Iteration 600 of 1000: loss=0.0954 " + "l1=0.066" + "l2=0.0294 f=-0.626 shape=(1, 9000, 1)
logits [[ 4.5119896 -4.169974   3.8518662 -6.6965556]]
Iteration 700 of 1000: loss=0.0911 " + "l1=0.0596" + "l2=0.0316 f=-0.625 shape=(1, 9000, 1)
logits [[ 4.4522686 -4.176926   3.8565485 -6.631333 ]]
Iteration 800 of 1000: loss=0.087 " + "l1=0.0541" + "l2=0.0329 f=-0.622 shape=(1, 9000, 1)
logits [[ 4.403509  -4.1807976  3.8626328 -6.5715795]]
Iteration 900 of 1000: loss=0.0832 " + "l1=0.0492" + "l2=0.034 f=-0.618 shape=(1, 9000, 1)
logits [[ 4.358666  -4.182631   3.8667517 -6.51564  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.43 " + "l1=1.43" + "l2=0 f=-0.608 shape=(1, 9000, 1)
logits [[ 5.199324  -4.0548944  3.7690082 -7.3471885]]
Iteration 100 of 1000: loss=0.236 " + "l1=0" + "l2=0.236 f=-0.634 shape=(1, 9000, 1)
logits [[ 3.8787265 -4.244173   3.8862534 -6.057869 ]]
Iteration 200 of 1000: loss=0.166 " + "l1=0" + "l2=0.166 f=-0.63 shape=(1, 9000, 1)
logits [[ 3.8729553 -4.2403026  3.8838449 -6.0355144]]
Iteration 300 of 1000: loss=0.135 " + "l1=0" + "l2=0.135 f=-0.626 shape=(1, 9000, 1)
logits [[ 3.8870153 -4.244764   3.8886724 -6.033594 ]]
Iteration 400 of 1000: loss=0.123 " + "l1=0" + "l2=0.123 f=-0.62 shape=(1, 9000, 1)
logits [[ 3.8706021 -4.2454042  3.8922372 -5.999046 ]]
Iteration 500 of 1000: loss=0.106 " + "l1=0" + "l2=0.106 f=-0.615 shape=(1, 9000, 1)
logits [[ 3.8878975 -4.2374287  3.8882413 -5.998152 ]]
Iteration 600 of 1000: loss=0.106 " + "l1=0" + "l2=0.106 f=-0.61 shape=(1, 9000, 1)
logits [[ 3.849657  -4.235329   3.8865502 -5.9413185]]
Iteration 700 of 1000: loss=0.0989 " + "l1=0" + "l2=0.0989 f=-0.605 shape=(1, 9000, 1)
logits [[ 3.8433952 -4.2296567  3.880633  -5.9149156]]
Iteration 800 of 1000: loss=0.0887 " + "l1=0.00394" + "l2=0.0848 f=-0.601 shape=(1, 9000, 1)
logits [[ 3.87751   -4.222989   3.8735714 -5.930529 ]]
Iteration 900 of 1000: loss=0.0907 " + "l1=0.0105" + "l2=0.0802 f=-0.597 shape=(1, 9000, 1)
logits [[ 3.876739  -4.216      3.8662672 -5.913037 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.787 " + "l1=0.787" + "l2=0 f=-0.608 shape=(1, 9000, 1)
logits [[ 5.199324  -4.0548944  3.7690082 -7.3471885]]
Iteration 100 of 1000: loss=0.233 " + "l1=0" + "l2=0.233 f=-0.638 shape=(1, 9000, 1)
logits [[ 3.8890228 -4.254617   3.8926086 -6.080709 ]]
Iteration 200 of 1000: loss=0.156 " + "l1=0" + "l2=0.156 f=-0.633 shape=(1, 9000, 1)
logits [[ 3.8955722 -4.2536306  3.8957899 -6.070709 ]]
Iteration 300 of 1000: loss=0.131 " + "l1=0" + "l2=0.131 f=-0.627 shape=(1, 9000, 1)
logits [[ 3.8910139 -4.2582426  3.9019063 -6.044458 ]]
Iteration 400 of 1000: loss=0.115 " + "l1=0.00687" + "l2=0.108 f=-0.62 shape=(1, 9000, 1)
logits [[ 3.9167728 -4.2513747  3.9042842 -6.0508294]]
Iteration 500 of 1000: loss=0.0998 " + "l1=0" + "l2=0.0998 f=-0.613 shape=(1, 9000, 1)
logits [[ 3.899759  -4.2457194  3.9034493 -6.0092163]]
Iteration 600 of 1000: loss=0.0912 " + "l1=0" + "l2=0.0912 f=-0.606 shape=(1, 9000, 1)
logits [[ 3.8959222 -4.2386     3.8988972 -5.980553 ]]
Iteration 700 of 1000: loss=0.086 " + "l1=0" + "l2=0.086 f=-0.601 shape=(1, 9000, 1)
logits [[ 3.884132  -4.2335534  3.8928592 -5.94809  ]]
Iteration 800 of 1000: loss=0.0793 " + "l1=0.000474" + "l2=0.0789 f=-0.596 shape=(1, 9000, 1)
logits [[ 3.8871453 -4.2263026  3.8862844 -5.9328604]]
Iteration 900 of 1000: loss=0.0759 " + "l1=0" + "l2=0.0759 f=-0.592 shape=(1, 9000, 1)
logits [[ 3.8752322 -4.224215   3.8847444 -5.903884 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.465 " + "l1=0.465" + "l2=0 f=-0.608 shape=(1, 9000, 1)
logits [[ 5.199324  -4.0548944  3.7690082 -7.3471885]]
Iteration 100 of 1000: loss=0.257 " + "l1=0.143" + "l2=0.115 f=-0.636 shape=(1, 9000, 1)
logits [[ 4.2798295 -4.18752    3.8413057 -6.4792557]]
Iteration 200 of 1000: loss=0.176 " + "l1=0.0253" + "l2=0.151 f=-0.637 shape=(1, 9000, 1)
logits [[ 3.965779  -4.2473435  3.8878229 -6.1538496]]
Iteration 300 of 1000: loss=0.133 " + "l1=0.00236" + "l2=0.13 f=-0.63 shape=(1, 9000, 1)
logits [[ 3.9098024 -4.2595954  3.9025414 -6.0735917]]
Iteration 400 of 1000: loss=0.111 " + "l1=0.0012" + "l2=0.11 f=-0.623 shape=(1, 9000, 1)
logits [[ 3.9161046 -4.259435   3.9124215 -6.0617228]]
Iteration 500 of 1000: loss=0.0984 " + "l1=0.00172" + "l2=0.0967 f=-0.615 shape=(1, 9000, 1)
logits [[ 3.9147606 -4.2481613  3.9094746 -6.0347643]]
Iteration 600 of 1000: loss=0.0897 " + "l1=0" + "l2=0.0897 f=-0.608 shape=(1, 9000, 1)
logits [[ 3.9006042 -4.242527   3.9060543 -5.997239 ]]
Iteration 700 of 1000: loss=0.0822 " + "l1=0" + "l2=0.0822 f=-0.602 shape=(1, 9000, 1)
logits [[ 3.900017  -4.2342296  3.90143   -5.9747486]]
Iteration 800 of 1000: loss=0.0763 " + "l1=0" + "l2=0.0763 f=-0.596 shape=(1, 9000, 1)
logits [[ 3.8983245 -4.2286587  3.8988514 -5.951939 ]]
Iteration 900 of 1000: loss=0.0725 " + "l1=0" + "l2=0.0725 f=-0.591 shape=(1, 9000, 1)
logits [[ 3.892221  -4.2286496  3.899087  -5.9265733]]
--- 254.28006649017334 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.125 " + "l1=0.125" + "l2=0 f=-0.608 shape=(1, 9000, 1)
logits [[ 5.199324  -4.0548944  3.7690082 -7.3471885]]
Iteration 100 of 1000: loss=0.124 " + "l1=0.124" + "l2=0.000686 f=-0.604 shape=(1, 9000, 1)
logits [[ 5.121759  -4.042299   3.7476926 -7.244873 ]]
Iteration 200 of 1000: loss=0.124 " + "l1=0.123" + "l2=0.000747 f=-0.603 shape=(1, 9000, 1)
logits [[ 5.1066146 -4.039252   3.7439866 -7.2239757]]
Iteration 300 of 1000: loss=0.124 " + "l1=0.123" + "l2=0.000897 f=-0.601 shape=(1, 9000, 1)
logits [[ 5.0895877 -4.035174   3.7395122 -7.1998158]]
Iteration 400 of 1000: loss=0.123 " + "l1=0.122" + "l2=0.000996 f=-0.6 shape=(1, 9000, 1)
logits [[ 5.0725555 -4.030685   3.7345772 -7.174864 ]]
Iteration 500 of 1000: loss=0.123 " + "l1=0.122" + "l2=0.00119 f=-0.598 shape=(1, 9000, 1)
logits [[ 5.0552807 -4.0260015  3.729145  -7.149293 ]]
Iteration 600 of 1000: loss=0.123 " + "l1=0.122" + "l2=0.00138 f=-0.596 shape=(1, 9000, 1)
logits [[ 5.0377336 -4.0210686  3.7235518 -7.123036 ]]
Iteration 700 of 1000: loss=0.123 " + "l1=0.121" + "l2=0.00155 f=-0.594 shape=(1, 9000, 1)
logits [[ 5.0202875 -4.0161853  3.7178802 -7.096794 ]]
Iteration 800 of 1000: loss=0.122 " + "l1=0.121" + "l2=0.00169 f=-0.592 shape=(1, 9000, 1)
logits [[ 5.003046  -4.0114565  3.7120333 -7.0707583]]
Iteration 900 of 1000: loss=0.122 " + "l1=0.12" + "l2=0.00198 f=-0.59 shape=(1, 9000, 1)
logits [[ 4.98774   -4.0075483  3.7071536 -7.0470266]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.25 " + "l1=1.25" + "l2=0 f=-0.608 shape=(1, 9000, 1)
logits [[ 5.199324  -4.0548944  3.7690082 -7.3471885]]
Iteration 100 of 1000: loss=1.14 " + "l1=1.07" + "l2=0.0681 f=-0.58 shape=(1, 9000, 1)
logits [[ 4.4078264 -3.9404829  3.5547225 -6.3415275]]
Iteration 200 of 1000: loss=1.09 " + "l1=1" + "l2=0.0921 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.0822434 -3.898769   3.4754465 -5.922268 ]]
Iteration 300 of 1000: loss=1.05 " + "l1=0.942" + "l2=0.106 f=-0.55 shape=(1, 9000, 1)
logits [[ 3.8409514 -3.8482366  3.3883574 -5.5801926]]
Iteration 400 of 1000: loss=1 " + "l1=0.886" + "l2=0.119 f=-0.534 shape=(1, 9000, 1)
logits [[ 3.6076267 -3.785581   3.288503  -5.248127 ]]
Iteration 500 of 1000: loss=0.96 " + "l1=0.829" + "l2=0.131 f=-0.516 shape=(1, 9000, 1)
logits [[ 3.3802629 -3.7160454  3.1810627 -4.91033  ]]
Iteration 600 of 1000: loss=0.917 " + "l1=0.773" + "l2=0.144 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.1612968 -3.64196    3.082509  -4.564175 ]]
Iteration 700 of 1000: loss=0.882 " + "l1=0.732" + "l2=0.151 f=-0.468 shape=(1, 9000, 1)
logits [[ 3.0068917 -3.5757468  3.005854  -4.3086505]]
Iteration 800 of 1000: loss=0.858 " + "l1=0.708" + "l2=0.149 f=-0.447 shape=(1, 9000, 1)
logits [[ 2.9296794 -3.4956477  2.9288805 -4.15052  ]]
Iteration 900 of 1000: loss=0.839 " + "l1=0.686" + "l2=0.153 f=-0.427 shape=(1, 9000, 1)
logits [[ 2.8532975 -3.416737   2.8551443 -4.0007973]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.5 " + "l1=12.5" + "l2=0 f=-0.608 shape=(1, 9000, 1)
logits [[ 5.199324  -4.0548944  3.7690082 -7.3471885]]
Iteration 100 of 1000: loss=6.37 " + "l1=4.09" + "l2=2.28 f=-0.352 shape=(1, 9000, 1)
logits [[ 1.5301763 -3.0760672  2.1117685 -1.9753062]]
Iteration 200 of 1000: loss=4.45 " + "l1=1.33" + "l2=3.12 f=-0.224 shape=(1, 9000, 1)
logits [[ 0.45400473 -2.2956386   1.1354458  -0.19149306]]
Iteration 300 of 1000: loss=3.19 " + "l1=0.0286" + "l2=3.17 f=-0.135 shape=(1, 9000, 1)
logits [[ 0.07791575 -1.7768624   0.59331775  0.56473947]]
Iteration 400 of 1000: loss=2.62 " + "l1=0.00433" + "l2=2.62 f=-0.141 shape=(1, 9000, 1)
logits [[ 0.08080275 -1.6865696   0.5240139   0.5196845 ]]
Iteration 500 of 1000: loss=2.31 " + "l1=0" + "l2=2.31 f=-0.138 shape=(1, 9000, 1)
logits [[ 0.12511158 -1.6489474   0.4787451   0.4915102 ]]
Iteration 600 of 1000: loss=2.09 " + "l1=0.00821" + "l2=2.08 f=-0.14 shape=(1, 9000, 1)
logits [[ 0.17397946 -1.6173275   0.44644356  0.43823698]]
Iteration 700 of 1000: loss=1.92 " + "l1=0" + "l2=1.92 f=-0.144 shape=(1, 9000, 1)
logits [[ 0.19160663 -1.6227466   0.42768237  0.42876613]]
Iteration 800 of 1000: loss=1.79 " + "l1=0.00544" + "l2=1.79 f=-0.144 shape=(1, 9000, 1)
logits [[ 0.21354502 -1.6306814   0.4239329   0.41849086]]
Iteration 900 of 1000: loss=1.69 " + "l1=0" + "l2=1.69 f=-0.139 shape=(1, 9000, 1)
logits [[ 0.22404477 -1.6241952   0.4167189   0.42736337]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.9 " + "l1=6.9" + "l2=0 f=-0.608 shape=(1, 9000, 1)
logits [[ 5.199324  -4.0548944  3.7690082 -7.3471885]]
Iteration 100 of 1000: loss=4.36 " + "l1=3.44" + "l2=0.918 f=-0.437 shape=(1, 9000, 1)
logits [[ 2.5852325 -3.374305   2.6455472 -3.6052666]]
Iteration 200 of 1000: loss=3.66 " + "l1=2.53" + "l2=1.12 f=-0.364 shape=(1, 9000, 1)
logits [[ 1.867297  -3.0505695  2.16619   -2.4408643]]
Iteration 300 of 1000: loss=3.07 " + "l1=1.75" + "l2=1.32 f=-0.313 shape=(1, 9000, 1)
logits [[ 1.3309392 -2.6610737  1.629269  -1.5511832]]
Iteration 400 of 1000: loss=2.55 " + "l1=1.13" + "l2=1.41 f=-0.262 shape=(1, 9000, 1)
logits [[ 0.8881261 -2.357998   1.2424158 -0.8194782]]
Iteration 500 of 1000: loss=2.13 " + "l1=0.501" + "l2=1.63 f=-0.196 shape=(1, 9000, 1)
logits [[ 0.4476876  -2.0575218   0.86882275 -0.04184335]]
Iteration 600 of 1000: loss=1.81 " + "l1=0.157" + "l2=1.65 f=-0.149 shape=(1, 9000, 1)
logits [[ 0.2434622 -1.8568857  0.6517964  0.3664029]]
Iteration 700 of 1000: loss=1.58 " + "l1=0.0181" + "l2=1.57 f=-0.121 shape=(1, 9000, 1)
logits [[ 0.19458875 -1.746878    0.5515881   0.51867306]]
Iteration 800 of 1000: loss=1.45 " + "l1=0.024" + "l2=1.43 f=-0.114 shape=(1, 9000, 1)
logits [[ 0.22719239 -1.7301716   0.5446635   0.5010892 ]]
Iteration 900 of 1000: loss=1.34 " + "l1=0.0052" + "l2=1.34 f=-0.108 shape=(1, 9000, 1)
logits [[ 0.22367421 -1.7212076   0.53844887  0.52899116]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.08 " + "l1=4.08" + "l2=0 f=-0.608 shape=(1, 9000, 1)
logits [[ 5.199324  -4.0548944  3.7690082 -7.3471885]]
Iteration 100 of 1000: loss=2.95 " + "l1=2.45" + "l2=0.506 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.0564284 -3.6798625  3.058847  -4.4646096]]
Iteration 200 of 1000: loss=2.61 " + "l1=2.1" + "l2=0.511 f=-0.441 shape=(1, 9000, 1)
logits [[ 2.692982  -3.3964899  2.7039406 -3.7649612]]
Iteration 300 of 1000: loss=2.36 " + "l1=1.84" + "l2=0.524 f=-0.393 shape=(1, 9000, 1)
logits [[ 2.3925638 -3.134219   2.4096272 -3.2397568]]
Iteration 400 of 1000: loss=2.16 " + "l1=1.61" + "l2=0.551 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.1375792 -2.9603388  2.1771412 -2.7863967]]
Iteration 500 of 1000: loss=1.99 " + "l1=1.39" + "l2=0.601 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.8779849 -2.7406807  1.9070903 -2.3575525]]
Iteration 600 of 1000: loss=1.83 " + "l1=1.16" + "l2=0.667 f=-0.296 shape=(1, 9000, 1)
logits [[ 1.6203284 -2.542871   1.6552383 -1.9175011]]
Iteration 700 of 1000: loss=1.7 " + "l1=0.972" + "l2=0.731 f=-0.254 shape=(1, 9000, 1)
logits [[ 1.4241974 -2.3613265  1.4557154 -1.534367 ]]
Iteration 800 of 1000: loss=1.59 " + "l1=0.791" + "l2=0.796 f=-0.211 shape=(1, 9000, 1)
logits [[ 1.2301021 -2.153556   1.2572097 -1.17784  ]]
Iteration 900 of 1000: loss=1.49 " + "l1=0.656" + "l2=0.838 f=-0.189 shape=(1, 9000, 1)
logits [[ 1.0649489 -2.0472705  1.1233016 -0.8952392]]
--- 298.7277629375458 seconds ---
Adv result:3
Loading record A06677
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0376 " + "l1=0.0376" + "l2=0 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.8906605 -0.8726651  1.7910392 -6.539221 ]]
Iteration 100 of 1000: loss=0.0361 " + "l1=0.0354" + "l2=0.000763 f=-0.688 shape=(1, 9000, 1)
logits [[ 2.754397  -0.7812192  1.7753701 -6.5023766]]
Iteration 200 of 1000: loss=0.0356 " + "l1=0.0347" + "l2=0.000951 f=-0.69 shape=(1, 9000, 1)
logits [[ 2.7118876  -0.75388974  1.7709237  -6.4877443 ]]
Iteration 300 of 1000: loss=0.0352 " + "l1=0.034" + "l2=0.00121 f=-0.691 shape=(1, 9000, 1)
logits [[ 2.6694572 -0.7264231  1.7659925 -6.47304  ]]
Iteration 400 of 1000: loss=0.0348 " + "l1=0.0333" + "l2=0.00148 f=-0.692 shape=(1, 9000, 1)
logits [[ 2.6321394 -0.7021032  1.7605594 -6.459261 ]]
Iteration 500 of 1000: loss=0.0344 " + "l1=0.0328" + "l2=0.00168 f=-0.694 shape=(1, 9000, 1)
logits [[ 2.5964854  -0.67970407  1.7553318  -6.446152  ]]
Iteration 600 of 1000: loss=0.0342 " + "l1=0.0322" + "l2=0.00195 f=-0.695 shape=(1, 9000, 1)
logits [[ 2.5646176  -0.65897876  1.7498038  -6.43487   ]]
Iteration 700 of 1000: loss=0.0339 " + "l1=0.0317" + "l2=0.00218 f=-0.696 shape=(1, 9000, 1)
logits [[ 2.5345638 -0.6398468  1.7454225 -6.4238553]]
Iteration 800 of 1000: loss=0.0337 " + "l1=0.0313" + "l2=0.00248 f=-0.697 shape=(1, 9000, 1)
logits [[ 2.5057983 -0.6211998  1.7410182 -6.413216 ]]
Iteration 900 of 1000: loss=0.0334 " + "l1=0.0308" + "l2=0.00257 f=-0.698 shape=(1, 9000, 1)
logits [[ 2.478358  -0.6033422  1.736497  -6.40281  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.376 " + "l1=0.376" + "l2=0 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.8906605 -0.8726651  1.7910392 -6.539221 ]]
Iteration 100 of 1000: loss=0.254 " + "l1=0.2" + "l2=0.054 f=-0.737 shape=(1, 9000, 1)
logits [[ 1.7864758  -0.20976715  1.6985754  -6.2240252 ]]
Iteration 200 of 1000: loss=0.207 " + "l1=0.149" + "l2=0.0586 f=-0.741 shape=(1, 9000, 1)
logits [[ 1.5384763   0.05117416  1.536858   -6.090187  ]]
Iteration 300 of 1000: loss=0.169 " + "l1=0.102" + "l2=0.0668 f=-0.751 shape=(1, 9000, 1)
logits [[ 1.3363869   0.32029372  1.3419491  -6.003374  ]]
Iteration 400 of 1000: loss=0.14 " + "l1=0.0668" + "l2=0.073 f=-0.774 shape=(1, 9000, 1)
logits [[ 1.1745082  0.5069698  1.1746391 -5.953367 ]]
Iteration 500 of 1000: loss=0.116 " + "l1=0.0398" + "l2=0.0761 f=-0.793 shape=(1, 9000, 1)
logits [[ 1.0424831   0.64419854  1.0425307  -5.900136  ]]
Iteration 600 of 1000: loss=0.1 " + "l1=0.027" + "l2=0.0731 f=-0.802 shape=(1, 9000, 1)
logits [[ 0.96911633  0.70547825  0.9752939  -5.8562484 ]]
Iteration 700 of 1000: loss=0.0891 " + "l1=0.0174" + "l2=0.0717 f=-0.805 shape=(1, 9000, 1)
logits [[ 0.90622765  0.7523221   0.92634666 -5.8030453 ]]
Iteration 800 of 1000: loss=0.0783 " + "l1=0.00477" + "l2=0.0735 f=-0.806 shape=(1, 9000, 1)
logits [[ 0.85323554  0.8078622   0.85552037 -5.740455  ]]
Iteration 900 of 1000: loss=0.0701 " + "l1=6.11e-05" + "l2=0.0701 f=-0.806 shape=(1, 9000, 1)
logits [[ 0.80924565  0.83769894  0.8383097  -5.7083263 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.207 " + "l1=0.207" + "l2=0 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.8906605 -0.8726651  1.7910392 -6.539221 ]]
Iteration 100 of 1000: loss=0.168 " + "l1=0.151" + "l2=0.0171 f=-0.713 shape=(1, 9000, 1)
logits [[ 2.2609534 -0.4807924  1.731342  -6.3616037]]
Iteration 200 of 1000: loss=0.15 " + "l1=0.125" + "l2=0.0253 f=-0.725 shape=(1, 9000, 1)
logits [[ 1.9657987 -0.3103403  1.7097418 -6.2646413]]
Iteration 300 of 1000: loss=0.137 " + "l1=0.105" + "l2=0.032 f=-0.734 shape=(1, 9000, 1)
logits [[ 1.738908   -0.16583838  1.664889   -6.1726303 ]]
Iteration 400 of 1000: loss=0.125 " + "l1=0.0896" + "l2=0.035 f=-0.737 shape=(1, 9000, 1)
logits [[ 1.5903366  -0.03706361  1.5928472  -6.092721  ]]
Iteration 500 of 1000: loss=0.113 " + "l1=0.0768" + "l2=0.0358 f=-0.739 shape=(1, 9000, 1)
logits [[ 1.4916822   0.09714638  1.4931717  -6.0366125 ]]
Iteration 600 of 1000: loss=0.102 " + "l1=0.065" + "l2=0.0373 f=-0.744 shape=(1, 9000, 1)
logits [[ 1.3954525   0.22134762  1.4022707  -5.9946623 ]]
Iteration 700 of 1000: loss=0.0929 " + "l1=0.0557" + "l2=0.0372 f=-0.75 shape=(1, 9000, 1)
logits [[ 1.3224705   0.31303486  1.3256385  -5.962873  ]]
Iteration 800 of 1000: loss=0.0851 " + "l1=0.0479" + "l2=0.0372 f=-0.758 shape=(1, 9000, 1)
logits [[ 1.2552885   0.38462168  1.253713   -5.9263887 ]]
Iteration 900 of 1000: loss=0.0784 " + "l1=0.0396" + "l2=0.0388 f=-0.767 shape=(1, 9000, 1)
logits [[ 1.1776272   0.45798805  1.1787156  -5.884327  ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.292 " + "l1=0.292" + "l2=0 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.8906605 -0.8726651  1.7910392 -6.539221 ]]
Iteration 100 of 1000: loss=0.216 " + "l1=0.183" + "l2=0.0334 f=-0.725 shape=(1, 9000, 1)
logits [[ 2.0184147 -0.3415563  1.7165054 -6.2950706]]
Iteration 200 of 1000: loss=0.182 " + "l1=0.137" + "l2=0.0456 f=-0.739 shape=(1, 9000, 1)
logits [[ 1.6539872  -0.10912213  1.6535647  -6.1547036 ]]
Iteration 300 of 1000: loss=0.159 " + "l1=0.112" + "l2=0.0476 f=-0.74 shape=(1, 9000, 1)
logits [[ 1.5166764   0.07541449  1.5181079  -6.068616  ]]
Iteration 400 of 1000: loss=0.137 " + "l1=0.0848" + "l2=0.0519 f=-0.748 shape=(1, 9000, 1)
logits [[ 1.3710691   0.27647066  1.3656228  -6.004216  ]]
Iteration 500 of 1000: loss=0.12 " + "l1=0.0652" + "l2=0.0544 f=-0.763 shape=(1, 9000, 1)
logits [[ 1.2444003   0.41289136  1.2537467  -5.961413  ]]
Iteration 600 of 1000: loss=0.104 " + "l1=0.047" + "l2=0.057 f=-0.778 shape=(1, 9000, 1)
logits [[ 1.1360025  0.5301507  1.1353425 -5.9144936]]
Iteration 700 of 1000: loss=0.0918 " + "l1=0.0341" + "l2=0.0576 f=-0.789 shape=(1, 9000, 1)
logits [[ 1.0342155   0.61485887  1.0552617  -5.8617454 ]]
Iteration 800 of 1000: loss=0.0831 " + "l1=0.0269" + "l2=0.0562 f=-0.792 shape=(1, 9000, 1)
logits [[ 0.99113166  0.65329295  0.99996537 -5.8127904 ]]
Iteration 900 of 1000: loss=0.0768 " + "l1=0.0222" + "l2=0.0546 f=-0.793 shape=(1, 9000, 1)
logits [[ 0.96154934  0.67874074  0.96540713 -5.7762723 ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.334 " + "l1=0.334" + "l2=0 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.8906605 -0.8726651  1.7910392 -6.539221 ]]
Iteration 100 of 1000: loss=0.236 " + "l1=0.194" + "l2=0.0428 f=-0.731 shape=(1, 9000, 1)
logits [[ 1.9042734  -0.27733085  1.7097971  -6.2621465 ]]
Iteration 200 of 1000: loss=0.196 " + "l1=0.145" + "l2=0.051 f=-0.74 shape=(1, 9000, 1)
logits [[ 1.600082  -0.0330669  1.5956647 -6.122195 ]]
Iteration 300 of 1000: loss=0.166 " + "l1=0.11" + "l2=0.0563 f=-0.743 shape=(1, 9000, 1)
logits [[ 1.4328302   0.19383354  1.4314876  -6.0321245 ]]
Iteration 400 of 1000: loss=0.14 " + "l1=0.0796" + "l2=0.0607 f=-0.758 shape=(1, 9000, 1)
logits [[ 1.2802796  0.3839093  1.280418  -5.97804  ]]
Iteration 500 of 1000: loss=0.119 " + "l1=0.0527" + "l2=0.0663 f=-0.78 shape=(1, 9000, 1)
logits [[ 1.1355274   0.54160845  1.1338462  -5.9312925 ]]
Iteration 600 of 1000: loss=0.102 " + "l1=0.0356" + "l2=0.0665 f=-0.792 shape=(1, 9000, 1)
logits [[ 1.0330572   0.63877434  1.0402354  -5.8798604 ]]
Iteration 700 of 1000: loss=0.0906 " + "l1=0.0267" + "l2=0.0639 f=-0.797 shape=(1, 9000, 1)
logits [[ 0.9757181   0.6827153   0.98375404 -5.830993  ]]
Iteration 800 of 1000: loss=0.0824 " + "l1=0.0192" + "l2=0.0633 f=-0.798 shape=(1, 9000, 1)
logits [[ 0.9229654   0.7228041   0.93862945 -5.778001  ]]
Iteration 900 of 1000: loss=0.0745 " + "l1=0.011" + "l2=0.0635 f=-0.798 shape=(1, 9000, 1)
logits [[ 0.8860808  0.7633561  0.887344  -5.730775 ]]
--- 300.59327578544617 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.011 " + "l1=0.011" + "l2=0 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.8906605 -0.8726651  1.7910392 -6.539221 ]]
Iteration 100 of 1000: loss=0.0103 " + "l1=0.00986" + "l2=0.000411 f=-0.688 shape=(1, 9000, 1)
logits [[ 2.795916   -0.83998626  1.8094945  -6.5161824 ]]
Iteration 200 of 1000: loss=0.0101 " + "l1=0.00958" + "l2=0.000467 f=-0.689 shape=(1, 9000, 1)
logits [[ 2.7714024 -0.8308411  1.813087  -6.5084267]]
Iteration 300 of 1000: loss=0.00988 " + "l1=0.00928" + "l2=0.000597 f=-0.69 shape=(1, 9000, 1)
logits [[ 2.7454035  -0.82162195  1.8173765  -6.5003185 ]]
Iteration 400 of 1000: loss=0.00971 " + "l1=0.00899" + "l2=0.000719 f=-0.691 shape=(1, 9000, 1)
logits [[ 2.7208724 -0.8130746  1.8215806 -6.4926023]]
Iteration 500 of 1000: loss=0.0096 " + "l1=0.00873" + "l2=0.000877 f=-0.692 shape=(1, 9000, 1)
logits [[ 2.69821    -0.80522835  1.8255595  -6.4852276 ]]
Iteration 600 of 1000: loss=0.00951 " + "l1=0.0085" + "l2=0.00101 f=-0.693 shape=(1, 9000, 1)
logits [[ 2.678842   -0.79992163  1.8292788  -6.47852   ]]
Iteration 700 of 1000: loss=0.00951 " + "l1=0.00826" + "l2=0.00124 f=-0.694 shape=(1, 9000, 1)
logits [[ 2.6595669  -0.79466444  1.8331236  -6.4721975 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.11 " + "l1=0.11" + "l2=0 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.8906605 -0.8726651  1.7910392 -6.539221 ]]
Iteration 100 of 1000: loss=0.0428 " + "l1=0.00989" + "l2=0.0329 f=-0.734 shape=(1, 9000, 1)
logits [[ 2.0765138  -0.63688785  1.9776211  -6.3549523 ]]
Iteration 200 of 1000: loss=0.0247 " + "l1=0.000179" + "l2=0.0245 f=-0.737 shape=(1, 9000, 1)
logits [[ 1.9920127 -0.6214065  1.9902217 -6.309446 ]]
Iteration 300 of 1000: loss=0.0201 " + "l1=0" + "l2=0.0201 f=-0.736 shape=(1, 9000, 1)
logits [[ 1.9843743 -0.6237785  1.986234  -6.2900934]]
Iteration 400 of 1000: loss=0.0173 " + "l1=0.00015" + "l2=0.0171 f=-0.734 shape=(1, 9000, 1)
logits [[ 1.9854167  -0.62525725  1.9839157  -6.281282  ]]
Iteration 500 of 1000: loss=0.0151 " + "l1=0" + "l2=0.0151 f=-0.733 shape=(1, 9000, 1)
logits [[ 1.984952   -0.62866694  1.9852556  -6.2745    ]]
Iteration 600 of 1000: loss=0.0144 " + "l1=0" + "l2=0.0144 f=-0.732 shape=(1, 9000, 1)
logits [[ 1.9703321  -0.62810904  1.9916527  -6.2638454 ]]
Iteration 700 of 1000: loss=0.0127 " + "l1=0.000381" + "l2=0.0124 f=-0.729 shape=(1, 9000, 1)
logits [[ 1.9935966 -0.640607   1.9897842 -6.259904 ]]
Iteration 800 of 1000: loss=0.0115 " + "l1=9.66e-05" + "l2=0.0114 f=-0.728 shape=(1, 9000, 1)
logits [[ 1.9967294 -0.6492105  1.995763  -6.254174 ]]
Iteration 900 of 1000: loss=0.0106 " + "l1=4.51e-05" + "l2=0.0105 f=-0.726 shape=(1, 9000, 1)
logits [[ 2.0034122  -0.66107494  2.0029616  -6.2506437 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0605 " + "l1=0.0605" + "l2=0 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.8906605 -0.8726651  1.7910392 -6.539221 ]]
Iteration 100 of 1000: loss=0.0402 " + "l1=0.0305" + "l2=0.00975 f=-0.709 shape=(1, 9000, 1)
logits [[ 2.4407272  -0.73060584  1.8867118  -6.434517  ]]
Iteration 200 of 1000: loss=0.0306 " + "l1=0.0158" + "l2=0.0148 f=-0.723 shape=(1, 9000, 1)
logits [[ 2.2208416  -0.67060095  1.9334819  -6.375898  ]]
Iteration 300 of 1000: loss=0.0238 " + "l1=0.00451" + "l2=0.0193 f=-0.733 shape=(1, 9000, 1)
logits [[ 2.0539696 -0.6325922  1.9719707 -6.323627 ]]
Iteration 400 of 1000: loss=0.019 " + "l1=0.00023" + "l2=0.0187 f=-0.735 shape=(1, 9000, 1)
logits [[ 1.987925   -0.62124497  1.9837513  -6.290656  ]]
Iteration 500 of 1000: loss=0.0163 " + "l1=0.000163" + "l2=0.0161 f=-0.734 shape=(1, 9000, 1)
logits [[ 1.9865408  -0.62314034  1.9835817  -6.282461  ]]
Iteration 600 of 1000: loss=0.0144 " + "l1=5.25e-07" + "l2=0.0144 f=-0.732 shape=(1, 9000, 1)
logits [[ 1.9862509  -0.62739074  1.9862413  -6.2746778 ]]
Iteration 700 of 1000: loss=0.0129 " + "l1=4.5e-05" + "l2=0.0129 f=-0.731 shape=(1, 9000, 1)
logits [[ 1.9895611 -0.6341359  1.9887428 -6.2661757]]
Iteration 800 of 1000: loss=0.012 " + "l1=0.000398" + "l2=0.0116 f=-0.728 shape=(1, 9000, 1)
logits [[ 1.9989202 -0.6433684  1.9916788 -6.260416 ]]
Iteration 900 of 1000: loss=0.0111 " + "l1=0.000309" + "l2=0.0108 f=-0.727 shape=(1, 9000, 1)
logits [[ 2.003893  -0.6540852  1.9982797 -6.2550883]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0357 " + "l1=0.0357" + "l2=0 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.8906605 -0.8726651  1.7910392 -6.539221 ]]
Iteration 100 of 1000: loss=0.0288 " + "l1=0.0254" + "l2=0.00332 f=-0.697 shape=(1, 9000, 1)
logits [[ 2.626116  -0.7835938  1.8436723 -6.4755297]]
Iteration 200 of 1000: loss=0.0256 " + "l1=0.0205" + "l2=0.00515 f=-0.705 shape=(1, 9000, 1)
logits [[ 2.4987483 -0.7448496  1.8684841 -6.4416075]]
Iteration 300 of 1000: loss=0.0231 " + "l1=0.0164" + "l2=0.0067 f=-0.711 shape=(1, 9000, 1)
logits [[ 2.3940935 -0.7148239  1.8889272 -6.4120264]]
Iteration 400 of 1000: loss=0.021 " + "l1=0.0128" + "l2=0.00816 f=-0.716 shape=(1, 9000, 1)
logits [[ 2.3017504 -0.6896127  1.9073079 -6.383284 ]]
Iteration 500 of 1000: loss=0.0192 " + "l1=0.0101" + "l2=0.00912 f=-0.72 shape=(1, 9000, 1)
logits [[ 2.233905  -0.6749467  1.9244505 -6.361551 ]]
Iteration 600 of 1000: loss=0.0175 " + "l1=0.00767" + "l2=0.00981 f=-0.722 shape=(1, 9000, 1)
logits [[ 2.1757486 -0.6651004  1.9397317 -6.340195 ]]
Iteration 700 of 1000: loss=0.0159 " + "l1=0.00524" + "l2=0.0107 f=-0.725 shape=(1, 9000, 1)
logits [[ 2.1163702  -0.65496063  1.9551334  -6.3178635 ]]
Iteration 800 of 1000: loss=0.0144 " + "l1=0.00328" + "l2=0.0111 f=-0.727 shape=(1, 9000, 1)
logits [[ 2.0711994  -0.65141356  1.9703166  -6.2981467 ]]
Iteration 900 of 1000: loss=0.0131 " + "l1=0.00135" + "l2=0.0117 f=-0.728 shape=(1, 9000, 1)
logits [[ 2.0267997 -0.6479536  1.985388  -6.2778254]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0234 " + "l1=0.0234" + "l2=0 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.8906605 -0.8726651  1.7910392 -6.539221 ]]
Iteration 100 of 1000: loss=0.0203 " + "l1=0.0189" + "l2=0.00147 f=-0.692 shape=(1, 9000, 1)
logits [[ 2.7128043 -0.8109343  1.8255613 -6.495723 ]]
Iteration 200 of 1000: loss=0.0192 " + "l1=0.0172" + "l2=0.00201 f=-0.696 shape=(1, 9000, 1)
logits [[ 2.6448042 -0.7875169  1.8370328 -6.4763875]]
Iteration 300 of 1000: loss=0.0182 " + "l1=0.0155" + "l2=0.00266 f=-0.699 shape=(1, 9000, 1)
logits [[ 2.5795302 -0.7677018  1.8480388 -6.457647 ]]
Iteration 400 of 1000: loss=0.0173 " + "l1=0.0138" + "l2=0.00344 f=-0.703 shape=(1, 9000, 1)
logits [[ 2.5125084 -0.7486281  1.8622136 -6.438229 ]]
Iteration 500 of 1000: loss=0.0165 " + "l1=0.0125" + "l2=0.004 f=-0.705 shape=(1, 9000, 1)
logits [[ 2.461564  -0.7343004  1.8736081 -6.4224944]]
Iteration 600 of 1000: loss=0.0158 " + "l1=0.0113" + "l2=0.00447 f=-0.708 shape=(1, 9000, 1)
logits [[ 2.4158547  -0.72370964  1.8847773  -6.407514  ]]
Iteration 700 of 1000: loss=0.015 " + "l1=0.0102" + "l2=0.0048 f=-0.71 shape=(1, 9000, 1)
logits [[ 2.3752499  -0.71351516  1.8936715  -6.394293  ]]
Iteration 800 of 1000: loss=0.0145 " + "l1=0.00926" + "l2=0.00522 f=-0.712 shape=(1, 9000, 1)
logits [[ 2.3387985  -0.70549154  1.9028633  -6.3831286 ]]
Iteration 900 of 1000: loss=0.0137 " + "l1=0.00828" + "l2=0.00546 f=-0.714 shape=(1, 9000, 1)
logits [[ 2.303239  -0.6999543  1.913559  -6.3710747]]
--- 284.502334356308 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0943 " + "l1=0.0943" + "l2=0 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.8906605 -0.8726651  1.7910392 -6.539221 ]]
Iteration 100 of 1000: loss=0.0929 " + "l1=0.0923" + "l2=0.000664 f=-0.684 shape=(1, 9000, 1)
logits [[ 2.766086  -0.8192727  1.7794849 -6.460573 ]]
Iteration 200 of 1000: loss=0.0925 " + "l1=0.0917" + "l2=0.000811 f=-0.684 shape=(1, 9000, 1)
logits [[ 2.728037  -0.8025601  1.7763145 -6.437414 ]]
Iteration 300 of 1000: loss=0.092 " + "l1=0.091" + "l2=0.00105 f=-0.684 shape=(1, 9000, 1)
logits [[ 2.6879308  -0.78523964  1.7723325  -6.4115963 ]]
Iteration 400 of 1000: loss=0.0917 " + "l1=0.0903" + "l2=0.00134 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.6483092 -0.7686111  1.7682478 -6.38605  ]]
Iteration 500 of 1000: loss=0.0914 " + "l1=0.0898" + "l2=0.00163 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.6134439 -0.7541072  1.7638731 -6.362845 ]]
Iteration 600 of 1000: loss=0.091 " + "l1=0.0892" + "l2=0.00176 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.5825386  -0.74189764  1.759166   -6.3408003 ]]
Iteration 700 of 1000: loss=0.0908 " + "l1=0.0887" + "l2=0.00206 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.55389   -0.7308469  1.7543986 -6.3193483]]
Iteration 800 of 1000: loss=0.0906 " + "l1=0.0883" + "l2=0.00228 f=-0.686 shape=(1, 9000, 1)
logits [[ 2.5278566 -0.7208274  1.750084  -6.3002453]]
Iteration 900 of 1000: loss=0.0903 " + "l1=0.0879" + "l2=0.00247 f=-0.686 shape=(1, 9000, 1)
logits [[ 2.5038483  -0.71128607  1.7456405  -6.282349  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.943 " + "l1=0.943" + "l2=0 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.8906605 -0.8726651  1.7910392 -6.539221 ]]
Iteration 100 of 1000: loss=0.823 " + "l1=0.771" + "l2=0.0522 f=-0.703 shape=(1, 9000, 1)
logits [[ 1.8324755  -0.46715087  1.7030022  -5.878989  ]]
Iteration 200 of 1000: loss=0.772 " + "l1=0.71" + "l2=0.0616 f=-0.691 shape=(1, 9000, 1)
logits [[ 1.556592   -0.32928622  1.5556663  -5.5459332 ]]
Iteration 300 of 1000: loss=0.74 " + "l1=0.67" + "l2=0.0694 f=-0.671 shape=(1, 9000, 1)
logits [[ 1.4294776  -0.26524532  1.4246774  -5.274126  ]]
Iteration 400 of 1000: loss=0.711 " + "l1=0.632" + "l2=0.0787 f=-0.657 shape=(1, 9000, 1)
logits [[ 1.2836338  -0.18590719  1.2962615  -5.0221477 ]]
Iteration 500 of 1000: loss=0.681 " + "l1=0.595" + "l2=0.0859 f=-0.645 shape=(1, 9000, 1)
logits [[ 1.1613193  -0.11548357  1.1602569  -4.786857  ]]
Iteration 600 of 1000: loss=0.646 " + "l1=0.548" + "l2=0.098 f=-0.634 shape=(1, 9000, 1)
logits [[ 0.9979845  -0.0487212   0.99791044 -4.4835434 ]]
Iteration 700 of 1000: loss=0.606 " + "l1=0.494" + "l2=0.111 f=-0.629 shape=(1, 9000, 1)
logits [[ 7.9075450e-01  1.5387405e-03  8.1847560e-01 -4.1263881e+00]]
Iteration 800 of 1000: loss=0.566 " + "l1=0.441" + "l2=0.125 f=-0.623 shape=(1, 9000, 1)
logits [[ 0.5421207   0.04250601  0.6663633  -3.7440774 ]]
Iteration 900 of 1000: loss=0.529 " + "l1=0.388" + "l2=0.141 f=-0.617 shape=(1, 9000, 1)
logits [[ 0.31407169  0.07584322  0.51025015 -3.3684778 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.43 " + "l1=9.43" + "l2=0 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.8906605 -0.8726651  1.7910392 -6.539221 ]]
Iteration 100 of 1000: loss=3.88 " + "l1=1.88" + "l2=1.99 f=-0.438 shape=(1, 9000, 1)
logits [[-0.06018625 -0.07633328  0.13471869 -1.750036  ]]
Iteration 200 of 1000: loss=2.08 " + "l1=0" + "l2=2.08 f=-0.361 shape=(1, 9000, 1)
logits [[-0.5477433  -0.30797    -0.29514298 -0.29502198]]
Iteration 300 of 1000: loss=1.42 " + "l1=0.0025" + "l2=1.41 f=-0.392 shape=(1, 9000, 1)
logits [[-0.64350426 -0.30916455 -0.30638415 -0.30888823]]
Iteration 400 of 1000: loss=1.12 " + "l1=0" + "l2=1.12 f=-0.403 shape=(1, 9000, 1)
logits [[-0.72776544 -0.31607312 -0.29371324 -0.27636784]]
Iteration 500 of 1000: loss=0.936 " + "l1=0.0123" + "l2=0.924 f=-0.423 shape=(1, 9000, 1)
logits [[-0.7823179  -0.30311176 -0.29615527 -0.308452  ]]
Iteration 600 of 1000: loss=0.814 " + "l1=0" + "l2=0.814 f=-0.435 shape=(1, 9000, 1)
logits [[-0.84041727 -0.3081166  -0.30206698 -0.28769124]]
Iteration 700 of 1000: loss=0.731 " + "l1=0" + "l2=0.731 f=-0.442 shape=(1, 9000, 1)
logits [[-0.84519064 -0.33174568 -0.303285   -0.2868389 ]]
Iteration 800 of 1000: loss=0.662 " + "l1=0.00339" + "l2=0.658 f=-0.457 shape=(1, 9000, 1)
logits [[-0.8744208  -0.31247154 -0.32528996 -0.31585974]]
Iteration 900 of 1000: loss=0.609 " + "l1=0" + "l2=0.609 f=-0.465 shape=(1, 9000, 1)
logits [[-0.8840922  -0.3288397  -0.32775372 -0.32001156]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.19 " + "l1=5.19" + "l2=0 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.8906605 -0.8726651  1.7910392 -6.539221 ]]
Iteration 100 of 1000: loss=3.05 " + "l1=2.33" + "l2=0.724 f=-0.535 shape=(1, 9000, 1)
logits [[ 0.714341   -0.12903248  0.7561664  -3.4819736 ]]
Iteration 200 of 1000: loss=2.08 " + "l1=1.07" + "l2=1.01 f=-0.477 shape=(1, 9000, 1)
logits [[-0.17450306  0.06952328  0.07266563 -1.8743387 ]]
Iteration 300 of 1000: loss=1.45 " + "l1=0.404" + "l2=1.04 f=-0.428 shape=(1, 9000, 1)
logits [[-0.5099506  -0.15436816 -0.15851346 -0.8896118 ]]
Iteration 400 of 1000: loss=0.98 " + "l1=0" + "l2=0.98 f=-0.416 shape=(1, 9000, 1)
logits [[-0.7312242  -0.30894846 -0.31860542 -0.30582684]]
Iteration 500 of 1000: loss=0.752 " + "l1=0.00404" + "l2=0.748 f=-0.434 shape=(1, 9000, 1)
logits [[-0.76777446 -0.3190743  -0.32287663 -0.32642305]]
Iteration 600 of 1000: loss=0.636 " + "l1=0" + "l2=0.636 f=-0.445 shape=(1, 9000, 1)
logits [[-0.80634177 -0.32558942 -0.34123605 -0.30652842]]
Iteration 700 of 1000: loss=0.554 " + "l1=0" + "l2=0.554 f=-0.448 shape=(1, 9000, 1)
logits [[-0.7886838  -0.3439443  -0.3394761  -0.32114083]]
Iteration 800 of 1000: loss=0.495 " + "l1=0.000212" + "l2=0.494 f=-0.452 shape=(1, 9000, 1)
logits [[-0.79593277 -0.340783   -0.3353416  -0.33572626]]
Iteration 900 of 1000: loss=0.453 " + "l1=0" + "l2=0.453 f=-0.445 shape=(1, 9000, 1)
logits [[-0.8041716  -0.3410902  -0.32268953 -0.31352526]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.06 " + "l1=3.06" + "l2=0 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.8906605 -0.8726651  1.7910392 -6.539221 ]]
Iteration 100 of 1000: loss=2.17 " + "l1=1.86" + "l2=0.309 f=-0.633 shape=(1, 9000, 1)
logits [[ 1.108044   -0.17828576  1.1263022  -4.5891557 ]]
Iteration 200 of 1000: loss=1.77 " + "l1=1.3" + "l2=0.464 f=-0.56 shape=(1, 9000, 1)
logits [[ 5.5671215e-01 -3.1876173e-03  6.1060941e-01 -3.4043827e+00]]
Iteration 300 of 1000: loss=1.42 " + "l1=0.833" + "l2=0.583 f=-0.551 shape=(1, 9000, 1)
logits [[-0.13943471  0.15984876  0.17075543 -2.393252  ]]
Iteration 400 of 1000: loss=1.09 " + "l1=0.503" + "l2=0.583 f=-0.508 shape=(1, 9000, 1)
logits [[-0.40897366 -0.0232384  -0.02577487 -1.5722892 ]]
Iteration 500 of 1000: loss=0.807 " + "l1=0.232" + "l2=0.575 f=-0.491 shape=(1, 9000, 1)
logits [[-0.6408501  -0.20175503 -0.20688733 -0.9148796 ]]
Iteration 600 of 1000: loss=0.621 " + "l1=0.0413" + "l2=0.58 f=-0.461 shape=(1, 9000, 1)
logits [[-0.8374522  -0.29692164 -0.2904001  -0.41760397]]
Iteration 700 of 1000: loss=0.503 " + "l1=0.0033" + "l2=0.5 f=-0.453 shape=(1, 9000, 1)
logits [[-0.8403136  -0.33147943 -0.31511572 -0.32525456]]
Iteration 800 of 1000: loss=0.434 " + "l1=0.000169" + "l2=0.433 f=-0.449 shape=(1, 9000, 1)
logits [[-0.82570326 -0.32286692 -0.32423142 -0.32338643]]
Iteration 900 of 1000: loss=0.397 " + "l1=6.95e-05" + "l2=0.397 f=-0.446 shape=(1, 9000, 1)
logits [[-0.8318298  -0.31777743 -0.31635457 -0.31656852]]
--- 300.46310114860535 seconds ---
Adv result:3
