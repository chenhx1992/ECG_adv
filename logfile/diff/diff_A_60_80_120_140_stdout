Already up-to-date.
Loading model
Loading ground truth file
Attack diff is running...
Loading record A01076
(1, 3624)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0509 " + "l1=0.0509" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.9993181  -1.0873681   0.50976914 -5.669109  ]]
Iteration 100 of 1000: loss=0.0498 " + "l1=0.0493" + "l2=0.000463 f=-0.564 shape=(1, 9000, 1)
logits [[ 3.9045258 -1.0286925  0.5047071 -5.634776 ]]
Iteration 200 of 1000: loss=0.0493 " + "l1=0.0487" + "l2=0.000588 f=-0.564 shape=(1, 9000, 1)
logits [[ 3.864573  -1.0057628  0.5043956 -5.620472 ]]
Iteration 300 of 1000: loss=0.0488 " + "l1=0.048" + "l2=0.000766 f=-0.565 shape=(1, 9000, 1)
logits [[ 3.8221426  -0.98124063  0.50433046 -5.6056433 ]]
Iteration 400 of 1000: loss=0.0483 " + "l1=0.0474" + "l2=0.000979 f=-0.566 shape=(1, 9000, 1)
logits [[ 3.7798889  -0.95711744  0.50504154 -5.5909605 ]]
Iteration 500 of 1000: loss=0.0479 " + "l1=0.0467" + "l2=0.00124 f=-0.566 shape=(1, 9000, 1)
logits [[ 3.7374287  -0.93302107  0.50624484 -5.5759273 ]]
Iteration 600 of 1000: loss=0.0476 " + "l1=0.0461" + "l2=0.00153 f=-0.567 shape=(1, 9000, 1)
logits [[ 3.6980383  -0.9112554   0.50802577 -5.5609503 ]]
Iteration 700 of 1000: loss=0.0472 " + "l1=0.0455" + "l2=0.00171 f=-0.567 shape=(1, 9000, 1)
logits [[ 3.6615944  -0.89121115  0.50933754 -5.546044  ]]
Iteration 800 of 1000: loss=0.047 " + "l1=0.045" + "l2=0.00202 f=-0.566 shape=(1, 9000, 1)
logits [[ 3.6266518  -0.87301743  0.5108446  -5.52974   ]]
Iteration 900 of 1000: loss=0.0467 " + "l1=0.0445" + "l2=0.00222 f=-0.566 shape=(1, 9000, 1)
logits [[ 3.5929642  -0.85614026  0.51278406 -5.5122204 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.509 " + "l1=0.509" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.9993181  -1.0873681   0.50976914 -5.669109  ]]
Iteration 100 of 1000: loss=0.414 " + "l1=0.374" + "l2=0.0402 f=-0.57 shape=(1, 9000, 1)
logits [[ 3.1730144 -0.5662908  0.4546156 -5.3409505]]
Iteration 200 of 1000: loss=0.336 " + "l1=0.254" + "l2=0.0816 f=-0.547 shape=(1, 9000, 1)
logits [[ 2.375193   -0.16718784  0.57698387 -4.973941  ]]
Iteration 300 of 1000: loss=0.263 " + "l1=0.158" + "l2=0.105 f=-0.525 shape=(1, 9000, 1)
logits [[ 1.6897454   0.10980301  0.60633504 -4.5044923 ]]
Iteration 400 of 1000: loss=0.2 " + "l1=0.0802" + "l2=0.12 f=-0.507 shape=(1, 9000, 1)
logits [[ 1.127424    0.32528448  0.5456952  -4.0278196 ]]
Iteration 500 of 1000: loss=0.146 " + "l1=0.0157" + "l2=0.13 f=-0.493 shape=(1, 9000, 1)
logits [[ 0.6678795   0.51131225  0.4506168  -3.602767  ]]
Iteration 600 of 1000: loss=0.106 " + "l1=0.00143" + "l2=0.104 f=-0.475 shape=(1, 9000, 1)
logits [[ 0.5438783   0.52960974  0.40172216 -3.375506  ]]
Iteration 700 of 1000: loss=0.083 " + "l1=0" + "l2=0.083 f=-0.462 shape=(1, 9000, 1)
logits [[ 0.5041987   0.50599587  0.39280173 -3.2510207 ]]
Iteration 800 of 1000: loss=0.0665 " + "l1=0" + "l2=0.0665 f=-0.451 shape=(1, 9000, 1)
logits [[ 0.4911007   0.49154264  0.4027677  -3.1881268 ]]
Iteration 900 of 1000: loss=0.0561 " + "l1=0" + "l2=0.0561 f=-0.443 shape=(1, 9000, 1)
logits [[ 0.46828967  0.50120807  0.39678752 -3.1401405 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.28 " + "l1=0.28" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.9993181  -1.0873681   0.50976914 -5.669109  ]]
Iteration 100 of 1000: loss=0.251 " + "l1=0.239" + "l2=0.0119 f=-0.569 shape=(1, 9000, 1)
logits [[ 3.5443943  -0.79921204  0.47712344 -5.496849  ]]
Iteration 200 of 1000: loss=0.233 " + "l1=0.215" + "l2=0.018 f=-0.566 shape=(1, 9000, 1)
logits [[ 3.2668545  -0.64076775  0.47208437 -5.36325   ]]
Iteration 300 of 1000: loss=0.216 " + "l1=0.191" + "l2=0.0247 f=-0.553 shape=(1, 9000, 1)
logits [[ 2.979199   -0.4912396   0.47963664 -5.180717  ]]
Iteration 400 of 1000: loss=0.194 " + "l1=0.158" + "l2=0.0358 f=-0.53 shape=(1, 9000, 1)
logits [[ 2.5600486  -0.30944455  0.5670253  -4.938806  ]]
Iteration 500 of 1000: loss=0.172 " + "l1=0.127" + "l2=0.0446 f=-0.522 shape=(1, 9000, 1)
logits [[ 2.1732514  -0.13572395  0.60702145 -4.7324786 ]]
Iteration 600 of 1000: loss=0.154 " + "l1=0.105" + "l2=0.0496 f=-0.511 shape=(1, 9000, 1)
logits [[ 1.8867384  -0.01976429  0.56954056 -4.4815106 ]]
Iteration 700 of 1000: loss=0.138 " + "l1=0.0833" + "l2=0.0545 f=-0.505 shape=(1, 9000, 1)
logits [[ 1.5974951   0.08293625  0.52539295 -4.224562  ]]
Iteration 800 of 1000: loss=0.116 " + "l1=0.0553" + "l2=0.0608 f=-0.494 shape=(1, 9000, 1)
logits [[ 1.19699    0.190681   0.5405062 -3.9044755]]
Iteration 900 of 1000: loss=0.096 " + "l1=0.0348" + "l2=0.0612 f=-0.481 shape=(1, 9000, 1)
logits [[ 0.9242469   0.29120398  0.5160609  -3.654979  ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.394 " + "l1=0.394" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.9993181  -1.0873681   0.50976914 -5.669109  ]]
Iteration 100 of 1000: loss=0.337 " + "l1=0.312" + "l2=0.0245 f=-0.57 shape=(1, 9000, 1)
logits [[ 3.350435   -0.6789093   0.46425283 -5.417514  ]]
Iteration 200 of 1000: loss=0.3 " + "l1=0.262" + "l2=0.0377 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.935096   -0.45003486  0.46674767 -5.1844215 ]]
Iteration 300 of 1000: loss=0.251 " + "l1=0.189" + "l2=0.0623 f=-0.534 shape=(1, 9000, 1)
logits [[ 2.287113  -0.1517084  0.5939935 -4.8646145]]
Iteration 400 of 1000: loss=0.208 " + "l1=0.13" + "l2=0.0778 f=-0.52 shape=(1, 9000, 1)
logits [[ 1.7365061   0.0544246   0.60937816 -4.4793444 ]]
Iteration 500 of 1000: loss=0.17 " + "l1=0.0858" + "l2=0.0842 f=-0.508 shape=(1, 9000, 1)
logits [[ 1.3129447   0.20627344  0.5645061  -4.1138973 ]]
Iteration 600 of 1000: loss=0.136 " + "l1=0.0447" + "l2=0.0914 f=-0.494 shape=(1, 9000, 1)
logits [[ 0.941286    0.36511773  0.47617644 -3.758925  ]]
Iteration 700 of 1000: loss=0.104 " + "l1=0.00472" + "l2=0.0993 f=-0.481 shape=(1, 9000, 1)
logits [[ 0.57075936  0.5099188   0.4165353  -3.4192214 ]]
Iteration 800 of 1000: loss=0.0782 " + "l1=0" + "l2=0.0782 f=-0.459 shape=(1, 9000, 1)
logits [[ 0.50059474  0.50102496  0.4175608  -3.2570758 ]]
Iteration 900 of 1000: loss=0.0612 " + "l1=0" + "l2=0.0612 f=-0.449 shape=(1, 9000, 1)
logits [[ 0.4858441   0.49618423  0.41650695 -3.1941028 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.337 " + "l1=0.337" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.9993181  -1.0873681   0.50976914 -5.669109  ]]
Iteration 100 of 1000: loss=0.295 " + "l1=0.278" + "l2=0.0174 f=-0.57 shape=(1, 9000, 1)
logits [[ 3.4516983  -0.741773    0.47031435 -5.459433  ]]
Iteration 200 of 1000: loss=0.269 " + "l1=0.243" + "l2=0.0258 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.1195114  -0.5536681   0.46755165 -5.2836795 ]]
Iteration 300 of 1000: loss=0.241 " + "l1=0.203" + "l2=0.038 f=-0.543 shape=(1, 9000, 1)
logits [[ 2.7047708  -0.3560149   0.49739334 -5.018729  ]]
Iteration 400 of 1000: loss=0.205 " + "l1=0.151" + "l2=0.0542 f=-0.526 shape=(1, 9000, 1)
logits [[ 2.1602063  -0.11272191  0.6037394  -4.7536783 ]]
Iteration 500 of 1000: loss=0.176 " + "l1=0.11" + "l2=0.0658 f=-0.516 shape=(1, 9000, 1)
logits [[ 1.7070895   0.04675633  0.60002214 -4.4162407 ]]
Iteration 600 of 1000: loss=0.148 " + "l1=0.0773" + "l2=0.0709 f=-0.503 shape=(1, 9000, 1)
logits [[ 1.3317521  0.1645641  0.5697214 -4.07954  ]]
Iteration 700 of 1000: loss=0.123 " + "l1=0.0467" + "l2=0.0766 f=-0.491 shape=(1, 9000, 1)
logits [[ 1.0076616   0.30242765  0.50522375 -3.7804246 ]]
Iteration 800 of 1000: loss=0.0979 " + "l1=0.0175" + "l2=0.0804 f=-0.479 shape=(1, 9000, 1)
logits [[ 0.6887133   0.423972    0.46194014 -3.4893432 ]]
Iteration 900 of 1000: loss=0.0702 " + "l1=0.00075" + "l2=0.0694 f=-0.457 shape=(1, 9000, 1)
logits [[ 0.5060599   0.49474484  0.44055012 -3.2697496 ]]
--- 294.6032440662384 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0349 " + "l1=0.0349" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.9993181  -1.0873681   0.50976914 -5.669109  ]]
Iteration 100 of 1000: loss=0.0343 " + "l1=0.0341" + "l2=0.000258 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.9312344  -1.0657418   0.52607244 -5.642815  ]]
Iteration 200 of 1000: loss=0.034 " + "l1=0.0337" + "l2=0.000289 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.9056237  -1.055859    0.53326267 -5.6359324 ]]
Iteration 300 of 1000: loss=0.0337 " + "l1=0.0333" + "l2=0.000378 f=-0.564 shape=(1, 9000, 1)
logits [[ 3.8757231  -1.0444493   0.54111767 -5.627235  ]]
Iteration 400 of 1000: loss=0.0334 " + "l1=0.033" + "l2=0.000464 f=-0.564 shape=(1, 9000, 1)
logits [[ 3.8464086  -1.0335909   0.54879427 -5.6177073 ]]
Iteration 500 of 1000: loss=0.0332 " + "l1=0.0326" + "l2=0.000578 f=-0.564 shape=(1, 9000, 1)
logits [[ 3.8167727  -1.022448    0.55605584 -5.6073008 ]]
Iteration 600 of 1000: loss=0.033 " + "l1=0.0322" + "l2=0.000713 f=-0.564 shape=(1, 9000, 1)
logits [[ 3.7876897  -1.0119126   0.56278896 -5.595587  ]]
Iteration 700 of 1000: loss=0.0328 " + "l1=0.0319" + "l2=0.000862 f=-0.564 shape=(1, 9000, 1)
logits [[ 3.7590666 -1.0023468  0.5699341 -5.582708 ]]
Iteration 800 of 1000: loss=0.0325 " + "l1=0.0315" + "l2=0.000948 f=-0.564 shape=(1, 9000, 1)
logits [[ 3.7307558  -0.99404806  0.5777581  -5.5686073 ]]
Iteration 900 of 1000: loss=0.0324 " + "l1=0.0312" + "l2=0.00121 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.703246   -0.98675674  0.5852422  -5.5527925 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.349 " + "l1=0.349" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.9993181  -1.0873681   0.50976914 -5.669109  ]]
Iteration 100 of 1000: loss=0.295 " + "l1=0.268" + "l2=0.0265 f=-0.559 shape=(1, 9000, 1)
logits [[ 3.3687384 -0.8840961  0.6869372 -5.4070787]]
Iteration 200 of 1000: loss=0.243 " + "l1=0.194" + "l2=0.0489 f=-0.551 shape=(1, 9000, 1)
logits [[ 2.801165  -0.6885533  0.8563066 -5.171992 ]]
Iteration 300 of 1000: loss=0.2 " + "l1=0.142" + "l2=0.0582 f=-0.522 shape=(1, 9000, 1)
logits [[ 2.3667793  -0.58243066  0.9516876  -4.8221526 ]]
Iteration 400 of 1000: loss=0.142 " + "l1=0.0721" + "l2=0.0696 f=-0.517 shape=(1, 9000, 1)
logits [[ 1.7737722  -0.52403873  1.0526819  -4.3695517 ]]
Iteration 500 of 1000: loss=0.091 " + "l1=0.0266" + "l2=0.0644 f=-0.504 shape=(1, 9000, 1)
logits [[ 1.3680335 -0.5746952  1.1021873 -3.9102123]]
Iteration 600 of 1000: loss=0.0514 " + "l1=7.47e-05" + "l2=0.0514 f=-0.496 shape=(1, 9000, 1)
logits [[ 1.1151825 -0.5852768  1.1144356 -3.6294985]]
Iteration 700 of 1000: loss=0.0369 " + "l1=0.000336" + "l2=0.0365 f=-0.495 shape=(1, 9000, 1)
logits [[ 1.0855635 -0.5905399  1.0822043 -3.556219 ]]
Iteration 800 of 1000: loss=0.0289 " + "l1=0" + "l2=0.0289 f=-0.492 shape=(1, 9000, 1)
logits [[ 1.064539   -0.59430635  1.0668658  -3.5066109 ]]
Iteration 900 of 1000: loss=0.0239 " + "l1=0" + "l2=0.0239 f=-0.489 shape=(1, 9000, 1)
logits [[ 1.0584829 -0.6059901  1.0612259 -3.4677756]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.192 " + "l1=0.192" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.9993181  -1.0873681   0.50976914 -5.669109  ]]
Iteration 100 of 1000: loss=0.177 " + "l1=0.171" + "l2=0.00558 f=-0.565 shape=(1, 9000, 1)
logits [[ 3.6893435  -0.97982293  0.57446426 -5.5440516 ]]
Iteration 200 of 1000: loss=0.167 " + "l1=0.158" + "l2=0.00907 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.496016   -0.91735435  0.6278349  -5.4542294 ]]
Iteration 300 of 1000: loss=0.149 " + "l1=0.132" + "l2=0.0176 f=-0.522 shape=(1, 9000, 1)
logits [[ 3.2352836  -0.85808015  0.83939135 -5.305982  ]]
Iteration 400 of 1000: loss=0.135 " + "l1=0.116" + "l2=0.0192 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.0098817  -0.80939424  0.9027756  -5.125267  ]]
Iteration 500 of 1000: loss=0.12 " + "l1=0.0981" + "l2=0.0221 f=-0.485 shape=(1, 9000, 1)
logits [[ 2.7713938 -0.804802   0.9882722 -4.896772 ]]
Iteration 600 of 1000: loss=0.0997 " + "l1=0.0723" + "l2=0.0273 f=-0.465 shape=(1, 9000, 1)
logits [[ 2.4449434  -0.84431106  1.1296028  -4.5895605 ]]
Iteration 700 of 1000: loss=0.0808 " + "l1=0.0537" + "l2=0.0271 f=-0.454 shape=(1, 9000, 1)
logits [[ 2.1888492  -0.86432385  1.2128723  -4.354162  ]]
Iteration 800 of 1000: loss=0.0665 " + "l1=0.0398" + "l2=0.0268 f=-0.444 shape=(1, 9000, 1)
logits [[ 1.9798898  -0.84577775  1.2566285  -4.16852   ]]
Iteration 900 of 1000: loss=0.0555 " + "l1=0.0287" + "l2=0.0269 f=-0.437 shape=(1, 9000, 1)
logits [[ 1.7961161  -0.81556135  1.2751845  -4.0048285 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.27 " + "l1=0.27" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.9993181  -1.0873681   0.50976914 -5.669109  ]]
Iteration 100 of 1000: loss=0.241 " + "l1=0.229" + "l2=0.0117 f=-0.565 shape=(1, 9000, 1)
logits [[ 3.5574942  -0.93528855  0.6031865  -5.4849854 ]]
Iteration 200 of 1000: loss=0.208 " + "l1=0.18" + "l2=0.0277 f=-0.514 shape=(1, 9000, 1)
logits [[ 3.203695  -0.8550885  0.8805111 -5.2839375]]
Iteration 300 of 1000: loss=0.184 " + "l1=0.151" + "l2=0.0327 f=-0.499 shape=(1, 9000, 1)
logits [[ 2.8936744  -0.7957359   0.94592446 -5.038702  ]]
Iteration 400 of 1000: loss=0.151 " + "l1=0.107" + "l2=0.0441 f=-0.475 shape=(1, 9000, 1)
logits [[ 2.4741538 -0.8148287  1.0956346 -4.654354 ]]
Iteration 500 of 1000: loss=0.122 " + "l1=0.0769" + "l2=0.0448 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.1486845  -0.76987565  1.1566063  -4.3794527 ]]
Iteration 600 of 1000: loss=0.0946 " + "l1=0.0504" + "l2=0.0443 f=-0.451 shape=(1, 9000, 1)
logits [[ 1.8629719 -0.7573045  1.2127794 -4.1225967]]
Iteration 700 of 1000: loss=0.0685 " + "l1=0.0256" + "l2=0.0429 f=-0.438 shape=(1, 9000, 1)
logits [[ 1.6047685  -0.78267795  1.2746135  -3.8484757 ]]
Iteration 800 of 1000: loss=0.0443 " + "l1=0.000197" + "l2=0.0441 f=-0.422 shape=(1, 9000, 1)
logits [[ 1.3282579 -0.7945848  1.3257097 -3.5483835]]
Iteration 900 of 1000: loss=0.0324 " + "l1=4.83e-05" + "l2=0.0324 f=-0.423 shape=(1, 9000, 1)
logits [[ 1.2955803  -0.78321517  1.2949569  -3.4976823 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.231 " + "l1=0.231" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.9993181  -1.0873681   0.50976914 -5.669109  ]]
Iteration 100 of 1000: loss=0.21 " + "l1=0.201" + "l2=0.00816 f=-0.565 shape=(1, 9000, 1)
logits [[ 3.6278784 -0.9584466  0.5866376 -5.516013 ]]
Iteration 200 of 1000: loss=0.187 " + "l1=0.165" + "l2=0.022 f=-0.528 shape=(1, 9000, 1)
logits [[ 3.3159204 -0.8775772  0.8184719 -5.3702316]]
Iteration 300 of 1000: loss=0.168 " + "l1=0.144" + "l2=0.024 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.063381  -0.8182857  0.8964352 -5.179243 ]]
Iteration 400 of 1000: loss=0.144 " + "l1=0.112" + "l2=0.0322 f=-0.487 shape=(1, 9000, 1)
logits [[ 2.718465  -0.8232856  1.0261018 -4.8677697]]
Iteration 500 of 1000: loss=0.121 " + "l1=0.0857" + "l2=0.0354 f=-0.467 shape=(1, 9000, 1)
logits [[ 2.4112165  -0.81043667  1.1179667  -4.585876  ]]
Iteration 600 of 1000: loss=0.0984 " + "l1=0.0629" + "l2=0.0355 f=-0.456 shape=(1, 9000, 1)
logits [[ 2.127625  -0.7880478  1.1776835 -4.3417068]]
Iteration 700 of 1000: loss=0.0769 " + "l1=0.0426" + "l2=0.0343 f=-0.448 shape=(1, 9000, 1)
logits [[ 1.8787764 -0.7982651  1.2361028 -4.108336 ]]
Iteration 800 of 1000: loss=0.0603 " + "l1=0.0253" + "l2=0.0351 f=-0.438 shape=(1, 9000, 1)
logits [[ 1.6567903 -0.7962291  1.2751023 -3.8867452]]
Iteration 900 of 1000: loss=0.0432 " + "l1=0.00528" + "l2=0.0379 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.4027393 -0.7947106  1.3229687 -3.6149974]]
--- 293.0321366786957 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0967 " + "l1=0.0967" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.9993181  -1.0873681   0.50976914 -5.669109  ]]
Iteration 100 of 1000: loss=0.0954 " + "l1=0.0949" + "l2=0.000514 f=-0.561 shape=(1, 9000, 1)
logits [[ 3.8982632 -1.0565814  0.5004921 -5.587963 ]]
Iteration 200 of 1000: loss=0.0948 " + "l1=0.0941" + "l2=0.000674 f=-0.561 shape=(1, 9000, 1)
logits [[ 3.8571992 -1.0438558  0.4972733 -5.5548663]]
Iteration 300 of 1000: loss=0.0942 " + "l1=0.0933" + "l2=0.00091 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.8106873 -1.0296105  0.4942691 -5.517155 ]]
Iteration 400 of 1000: loss=0.0936 " + "l1=0.0924" + "l2=0.00121 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.7619567 -1.0149944  0.4918258 -5.477598 ]]
Iteration 500 of 1000: loss=0.093 " + "l1=0.0915" + "l2=0.00148 f=-0.559 shape=(1, 9000, 1)
logits [[ 3.713095   -1.0017135   0.49083424 -5.436772  ]]
Iteration 600 of 1000: loss=0.0924 " + "l1=0.0906" + "l2=0.00177 f=-0.557 shape=(1, 9000, 1)
logits [[ 3.6650574  -0.99031717  0.4911401  -5.395343  ]]
Iteration 700 of 1000: loss=0.0918 " + "l1=0.0897" + "l2=0.00208 f=-0.556 shape=(1, 9000, 1)
logits [[ 3.6157205  -0.980124    0.49281213 -5.3518577 ]]
Iteration 800 of 1000: loss=0.091 " + "l1=0.0887" + "l2=0.00232 f=-0.554 shape=(1, 9000, 1)
logits [[ 3.5641398  -0.96999204  0.4956823  -5.30528   ]]
Iteration 900 of 1000: loss=0.0903 " + "l1=0.0877" + "l2=0.00264 f=-0.551 shape=(1, 9000, 1)
logits [[ 3.5112264  -0.96071994  0.49915603 -5.255564  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.967 " + "l1=0.967" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.9993181  -1.0873681   0.50976914 -5.669109  ]]
Iteration 100 of 1000: loss=0.832 " + "l1=0.77" + "l2=0.0618 f=-0.547 shape=(1, 9000, 1)
logits [[ 2.9284468 -0.848493   0.5048661 -4.7747216]]
Iteration 200 of 1000: loss=0.674 " + "l1=0.559" + "l2=0.116 f=-0.514 shape=(1, 9000, 1)
logits [[ 1.8070728 -0.6379783  0.5514148 -3.778364 ]]
Iteration 300 of 1000: loss=0.446 " + "l1=0.278" + "l2=0.168 f=-0.494 shape=(1, 9000, 1)
logits [[ 0.45214376 -0.56155217  0.4575542  -2.3225691 ]]
Iteration 400 of 1000: loss=0.299 " + "l1=0.141" + "l2=0.158 f=-0.485 shape=(1, 9000, 1)
logits [[ 0.04594986 -0.710208    0.06851217 -1.3461722 ]]
Iteration 500 of 1000: loss=0.179 " + "l1=0.0146" + "l2=0.164 f=-0.465 shape=(1, 9000, 1)
logits [[-0.35786906 -0.71237797 -0.32153836 -0.46789303]]
Iteration 600 of 1000: loss=0.112 " + "l1=0" + "l2=0.112 f=-0.463 shape=(1, 9000, 1)
logits [[-0.37146565 -0.77811104 -0.35802487 -0.34597713]]
Iteration 700 of 1000: loss=0.0828 " + "l1=0.000937" + "l2=0.0819 f=-0.457 shape=(1, 9000, 1)
logits [[-0.3452106  -0.7894545  -0.3422235  -0.35158867]]
Iteration 800 of 1000: loss=0.0647 " + "l1=0.000422" + "l2=0.0643 f=-0.451 shape=(1, 9000, 1)
logits [[-0.33910888 -0.77802557 -0.3420112  -0.34332898]]
Iteration 900 of 1000: loss=0.0534 " + "l1=0" + "l2=0.0534 f=-0.446 shape=(1, 9000, 1)
logits [[-0.3455913  -0.7648686  -0.33921185 -0.33399692]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.532 " + "l1=0.532" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.9993181  -1.0873681   0.50976914 -5.669109  ]]
Iteration 100 of 1000: loss=0.495 " + "l1=0.481" + "l2=0.014 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.4881542  -0.92899287  0.46316388 -5.2609763 ]]
Iteration 200 of 1000: loss=0.465 " + "l1=0.44" + "l2=0.025 f=-0.552 shape=(1, 9000, 1)
logits [[ 3.094371   -0.8475972   0.45578027 -4.909355  ]]
Iteration 300 of 1000: loss=0.419 " + "l1=0.373" + "l2=0.0455 f=-0.529 shape=(1, 9000, 1)
logits [[ 2.4646375 -0.7772553  0.5153896 -4.31913  ]]
Iteration 400 of 1000: loss=0.356 " + "l1=0.289" + "l2=0.0672 f=-0.511 shape=(1, 9000, 1)
logits [[ 1.6565819  -0.70651376  0.6062434  -3.5992734 ]]
Iteration 500 of 1000: loss=0.277 " + "l1=0.19" + "l2=0.0868 f=-0.495 shape=(1, 9000, 1)
logits [[ 0.7728361  -0.67763287  0.60498226 -2.681465  ]]
Iteration 600 of 1000: loss=0.21 " + "l1=0.13" + "l2=0.0803 f=-0.487 shape=(1, 9000, 1)
logits [[ 0.3835687  -0.7491638   0.39051425 -1.9732442 ]]
Iteration 700 of 1000: loss=0.164 " + "l1=0.0911" + "l2=0.0728 f=-0.484 shape=(1, 9000, 1)
logits [[ 0.1740134  -0.8075512   0.17678504 -1.478972  ]]
Iteration 800 of 1000: loss=0.121 " + "l1=0.0507" + "l2=0.0705 f=-0.479 shape=(1, 9000, 1)
logits [[-0.08768503 -0.7904589  -0.05678593 -0.9794501 ]]
Iteration 900 of 1000: loss=0.0791 " + "l1=0.00635" + "l2=0.0727 f=-0.465 shape=(1, 9000, 1)
logits [[-0.33315685 -0.7440708  -0.3345043  -0.4485342 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.314 " + "l1=0.314" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.9993181  -1.0873681   0.50976914 -5.669109  ]]
Iteration 100 of 1000: loss=0.302 " + "l1=0.297" + "l2=0.00482 f=-0.561 shape=(1, 9000, 1)
logits [[ 3.6991982  -0.98988575  0.4799674  -5.433844  ]]
Iteration 200 of 1000: loss=0.293 " + "l1=0.286" + "l2=0.00739 f=-0.558 shape=(1, 9000, 1)
logits [[ 3.519672   -0.94202155  0.46845785 -5.278844  ]]
Iteration 300 of 1000: loss=0.284 " + "l1=0.273" + "l2=0.0108 f=-0.553 shape=(1, 9000, 1)
logits [[ 3.3169382  -0.8947051   0.46324947 -5.0967183 ]]
Iteration 400 of 1000: loss=0.273 " + "l1=0.258" + "l2=0.0152 f=-0.545 shape=(1, 9000, 1)
logits [[ 3.0609806  -0.8367925   0.46601573 -4.871066  ]]
Iteration 500 of 1000: loss=0.259 " + "l1=0.238" + "l2=0.0206 f=-0.538 shape=(1, 9000, 1)
logits [[ 2.740803  -0.7864426  0.4740891 -4.5804296]]
Iteration 600 of 1000: loss=0.235 " + "l1=0.205" + "l2=0.0299 f=-0.531 shape=(1, 9000, 1)
logits [[ 2.19736    -0.7805806   0.57093424 -4.112961  ]]
Iteration 700 of 1000: loss=0.208 " + "l1=0.171" + "l2=0.0374 f=-0.507 shape=(1, 9000, 1)
logits [[ 1.6618737  -0.79344857  0.69012976 -3.586308  ]]
Iteration 800 of 1000: loss=0.181 " + "l1=0.139" + "l2=0.042 f=-0.501 shape=(1, 9000, 1)
logits [[ 1.1758636  -0.77527267  0.68901104 -3.093326  ]]
Iteration 900 of 1000: loss=0.151 " + "l1=0.105" + "l2=0.0458 f=-0.489 shape=(1, 9000, 1)
logits [[ 0.7205362 -0.7748042  0.6152369 -2.5176482]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.423 " + "l1=0.423" + "l2=0 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.9993181  -1.0873681   0.50976914 -5.669109  ]]
Iteration 100 of 1000: loss=0.4 " + "l1=0.391" + "l2=0.00869 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.5967062  -0.9589129   0.47140214 -5.3510385 ]]
Iteration 200 of 1000: loss=0.383 " + "l1=0.369" + "l2=0.0145 f=-0.555 shape=(1, 9000, 1)
logits [[ 3.3218644 -0.8934512  0.4580954 -5.1074586]]
Iteration 300 of 1000: loss=0.362 " + "l1=0.34" + "l2=0.0226 f=-0.547 shape=(1, 9000, 1)
logits [[ 2.9680552 -0.816944   0.4559833 -4.7931747]]
Iteration 400 of 1000: loss=0.331 " + "l1=0.294" + "l2=0.0368 f=-0.533 shape=(1, 9000, 1)
logits [[ 2.429351   -0.7672378   0.49454167 -4.2904606 ]]
Iteration 500 of 1000: loss=0.287 " + "l1=0.237" + "l2=0.0502 f=-0.517 shape=(1, 9000, 1)
logits [[ 1.7445408  -0.76260465  0.61265504 -3.6620805 ]]
Iteration 600 of 1000: loss=0.236 " + "l1=0.174" + "l2=0.0624 f=-0.501 shape=(1, 9000, 1)
logits [[ 1.0278348 -0.7337494  0.6532171 -2.9512057]]
Iteration 700 of 1000: loss=0.186 " + "l1=0.122" + "l2=0.064 f=-0.49 shape=(1, 9000, 1)
logits [[ 0.52543837 -0.74359745  0.5283494  -2.270988  ]]
Iteration 800 of 1000: loss=0.15 " + "l1=0.0936" + "l2=0.0567 f=-0.477 shape=(1, 9000, 1)
logits [[ 0.33724913 -0.79015595  0.3421043  -1.7962003 ]]
Iteration 900 of 1000: loss=0.12 " + "l1=0.0684" + "l2=0.052 f=-0.468 shape=(1, 9000, 1)
logits [[ 0.15564016 -0.7782074   0.15800773 -1.4058048 ]]
--- 293.16991901397705 seconds ---
Adv result:3
Loading record A01087
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0398 " + "l1=0.0398" + "l2=0 f=-0.33 shape=(1, 9000, 1)
logits [[ 2.1816268 -1.7981467  1.7866837 -3.4901834]]
Iteration 100 of 1000: loss=0.0392 " + "l1=0.0389" + "l2=0.000342 f=-0.33 shape=(1, 9000, 1)
logits [[ 2.1248431 -1.7647995  1.7543    -3.434376 ]]
Iteration 200 of 1000: loss=0.0391 " + "l1=0.0387" + "l2=0.000353 f=-0.33 shape=(1, 9000, 1)
logits [[ 2.113518  -1.7576864  1.7479404 -3.4247887]]
Iteration 300 of 1000: loss=0.0389 " + "l1=0.0385" + "l2=0.000452 f=-0.331 shape=(1, 9000, 1)
logits [[ 2.0998    -1.748903   1.7396327 -3.4125803]]
Iteration 400 of 1000: loss=0.0388 " + "l1=0.0383" + "l2=0.000552 f=-0.331 shape=(1, 9000, 1)
logits [[ 2.0864677 -1.7405713  1.7315466 -3.4007456]]
Iteration 500 of 1000: loss=0.0387 " + "l1=0.0381" + "l2=0.000659 f=-0.331 shape=(1, 9000, 1)
logits [[ 2.074101  -1.7327577  1.7237014 -3.3893297]]
Iteration 600 of 1000: loss=0.0387 " + "l1=0.0379" + "l2=0.000799 f=-0.331 shape=(1, 9000, 1)
logits [[ 2.06227   -1.7253708  1.7163116 -3.3785324]]
Iteration 700 of 1000: loss=0.0386 " + "l1=0.0377" + "l2=0.000915 f=-0.332 shape=(1, 9000, 1)
logits [[ 2.0509222 -1.7181557  1.7087212 -3.3678207]]
Iteration 800 of 1000: loss=0.0386 " + "l1=0.0375" + "l2=0.00106 f=-0.332 shape=(1, 9000, 1)
logits [[ 2.0399723 -1.7112439  1.7014301 -3.3572128]]
Iteration 900 of 1000: loss=0.0385 " + "l1=0.0373" + "l2=0.00116 f=-0.332 shape=(1, 9000, 1)
logits [[ 2.0300894 -1.7048721  1.6947685 -3.3474457]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.398 " + "l1=0.398" + "l2=0 f=-0.33 shape=(1, 9000, 1)
logits [[ 2.1816268 -1.7981467  1.7866837 -3.4901834]]
Iteration 100 of 1000: loss=0.349 " + "l1=0.326" + "l2=0.0235 f=-0.316 shape=(1, 9000, 1)
logits [[ 1.7191893 -1.5390146  1.5287948 -2.9724772]]
Iteration 200 of 1000: loss=0.326 " + "l1=0.289" + "l2=0.0364 f=-0.303 shape=(1, 9000, 1)
logits [[ 1.4802439 -1.4140517  1.3953987 -2.6740172]]
Iteration 300 of 1000: loss=0.306 " + "l1=0.259" + "l2=0.0472 f=-0.291 shape=(1, 9000, 1)
logits [[ 1.2781293 -1.3095608  1.275033  -2.4087155]]
Iteration 400 of 1000: loss=0.291 " + "l1=0.24" + "l2=0.051 f=-0.284 shape=(1, 9000, 1)
logits [[ 1.1697699 -1.2315735  1.1700233 -2.2445538]]
Iteration 500 of 1000: loss=0.279 " + "l1=0.225" + "l2=0.054 f=-0.28 shape=(1, 9000, 1)
logits [[ 1.0808297 -1.1654749  1.0783241 -2.114696 ]]
Iteration 600 of 1000: loss=0.267 " + "l1=0.209" + "l2=0.0581 f=-0.274 shape=(1, 9000, 1)
logits [[ 0.99046636 -1.0986639   0.9900759  -1.9770837 ]]
Iteration 700 of 1000: loss=0.253 " + "l1=0.19" + "l2=0.0628 f=-0.258 shape=(1, 9000, 1)
logits [[ 0.88887495 -1.0120878   0.88766    -1.7958095 ]]
Iteration 800 of 1000: loss=0.241 " + "l1=0.176" + "l2=0.0651 f=-0.242 shape=(1, 9000, 1)
logits [[ 0.81994313 -0.936884    0.81960946 -1.6707366 ]]
Iteration 900 of 1000: loss=0.23 " + "l1=0.161" + "l2=0.0696 f=-0.232 shape=(1, 9000, 1)
logits [[ 0.73531723 -0.8718602   0.7340464  -1.5273111 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.98 " + "l1=3.98" + "l2=0 f=-0.33 shape=(1, 9000, 1)
logits [[ 2.1816268 -1.7981467  1.7866837 -3.4901834]]
Iteration 100 of 1000: loss=1.24 " + "l1=0.392" + "l2=0.846 f=-0.186 shape=(1, 9000, 1)
logits [[ 0.04653954 -0.19325493  0.19891886 -0.79737526]]
Iteration 200 of 1000: loss=0.634 " + "l1=0.00356" + "l2=0.63 f=-0.174 shape=(1, 9000, 1)
logits [[-0.24570394 -0.00743861 -0.00388226 -0.4409296 ]]
Iteration 300 of 1000: loss=0.503 " + "l1=0.00407" + "l2=0.499 f=-0.156 shape=(1, 9000, 1)
logits [[-0.23324332 -0.01911467 -0.01504262 -0.35545093]]
Iteration 400 of 1000: loss=0.439 " + "l1=0.0112" + "l2=0.428 f=-0.155 shape=(1, 9000, 1)
logits [[-0.22778814 -0.02344853 -0.01225317 -0.35514712]]
Iteration 500 of 1000: loss=0.389 " + "l1=0" + "l2=0.389 f=-0.154 shape=(1, 9000, 1)
logits [[-0.25279453 -0.02111295 -0.03025513 -0.31293198]]
Iteration 600 of 1000: loss=0.357 " + "l1=0" + "l2=0.357 f=-0.157 shape=(1, 9000, 1)
logits [[-0.28310624 -0.02371613 -0.03443973 -0.28756794]]
Iteration 700 of 1000: loss=0.328 " + "l1=0" + "l2=0.328 f=-0.154 shape=(1, 9000, 1)
logits [[-0.28521007 -0.02922984 -0.04223932 -0.25806874]]
Iteration 800 of 1000: loss=0.304 " + "l1=0" + "l2=0.304 f=-0.151 shape=(1, 9000, 1)
logits [[-0.292593   -0.03491338 -0.04876653 -0.22726583]]
Iteration 900 of 1000: loss=0.276 " + "l1=0" + "l2=0.276 f=-0.144 shape=(1, 9000, 1)
logits [[-0.27129635 -0.05060883 -0.05112484 -0.20474312]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.19 " + "l1=2.19" + "l2=0 f=-0.33 shape=(1, 9000, 1)
logits [[ 2.1816268 -1.7981467  1.7866837 -3.4901834]]
Iteration 100 of 1000: loss=1.03 " + "l1=0.625" + "l2=0.409 f=-0.227 shape=(1, 9000, 1)
logits [[ 0.54292476 -0.5808383   0.55479085 -1.4235744 ]]
Iteration 200 of 1000: loss=0.649 " + "l1=0.176" + "l2=0.473 f=-0.174 shape=(1, 9000, 1)
logits [[-0.00130015 -0.15981768  0.1604853  -0.69609207]]
Iteration 300 of 1000: loss=0.468 " + "l1=0.00139" + "l2=0.467 f=-0.154 shape=(1, 9000, 1)
logits [[-0.2407811  -0.01742059 -0.01489908 -0.34489188]]
Iteration 400 of 1000: loss=0.368 " + "l1=0" + "l2=0.368 f=-0.161 shape=(1, 9000, 1)
logits [[-0.25662085 -0.02101165 -0.02153148 -0.34677762]]
Iteration 500 of 1000: loss=0.322 " + "l1=0.00464" + "l2=0.317 f=-0.157 shape=(1, 9000, 1)
logits [[-0.24717094 -0.03911042 -0.03068182 -0.31303316]]
Iteration 600 of 1000: loss=0.294 " + "l1=0.00172" + "l2=0.292 f=-0.152 shape=(1, 9000, 1)
logits [[-0.25501254 -0.04431202 -0.04117968 -0.26680258]]
Iteration 700 of 1000: loss=0.273 " + "l1=0" + "l2=0.273 f=-0.146 shape=(1, 9000, 1)
logits [[-0.27508596 -0.04446384 -0.05212159 -0.21287581]]
Iteration 800 of 1000: loss=0.252 " + "l1=0" + "l2=0.252 f=-0.143 shape=(1, 9000, 1)
logits [[-0.27681354 -0.05140328 -0.05442793 -0.19015738]]
Iteration 900 of 1000: loss=0.239 " + "l1=0.00582" + "l2=0.234 f=-0.143 shape=(1, 9000, 1)
logits [[-0.28191543 -0.06545191 -0.05486769 -0.17091256]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.29 " + "l1=1.29" + "l2=0 f=-0.33 shape=(1, 9000, 1)
logits [[ 2.1816268 -1.7981467  1.7866837 -3.4901834]]
Iteration 100 of 1000: loss=0.812 " + "l1=0.614" + "l2=0.199 f=-0.268 shape=(1, 9000, 1)
logits [[ 0.92170954 -0.96631616  0.9146563  -1.9438052 ]]
Iteration 200 of 1000: loss=0.616 " + "l1=0.383" + "l2=0.232 f=-0.219 shape=(1, 9000, 1)
logits [[ 0.57294774 -0.6029709   0.5760902  -1.4220996 ]]
Iteration 300 of 1000: loss=0.492 " + "l1=0.246" + "l2=0.245 f=-0.191 shape=(1, 9000, 1)
logits [[ 0.34597325 -0.39995125  0.35790733 -1.0662799 ]]
Iteration 400 of 1000: loss=0.425 " + "l1=0.161" + "l2=0.264 f=-0.178 shape=(1, 9000, 1)
logits [[ 0.16025913 -0.26804355  0.22761463 -0.83363324]]
Iteration 500 of 1000: loss=0.363 " + "l1=0.0886" + "l2=0.275 f=-0.173 shape=(1, 9000, 1)
logits [[-0.05946001 -0.15463851  0.11787346 -0.59532297]]
Iteration 600 of 1000: loss=0.31 " + "l1=0.0311" + "l2=0.278 f=-0.162 shape=(1, 9000, 1)
logits [[-0.21563077 -0.07624897  0.01954018 -0.3763828 ]]
Iteration 700 of 1000: loss=0.276 " + "l1=0.014" + "l2=0.262 f=-0.154 shape=(1, 9000, 1)
logits [[-0.25419804 -0.05951018 -0.01641343 -0.2851827 ]]
Iteration 800 of 1000: loss=0.251 " + "l1=0.000611" + "l2=0.25 f=-0.15 shape=(1, 9000, 1)
logits [[-0.31287992 -0.04783155 -0.04595142 -0.19219413]]
Iteration 900 of 1000: loss=0.233 " + "l1=0" + "l2=0.233 f=-0.149 shape=(1, 9000, 1)
logits [[-0.33882916 -0.05623434 -0.0605899  -0.13883203]]
--- 295.0844376087189 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00395 " + "l1=0.00395" + "l2=0 f=-0.33 shape=(1, 9000, 1)
logits [[ 2.1816268 -1.7981467  1.7866837 -3.4901834]]
Iteration 100 of 1000: loss=0.00366 " + "l1=0.00348" + "l2=0.000182 f=-0.333 shape=(1, 9000, 1)
logits [[ 2.1453032 -1.8056518  1.7972718 -3.4676852]]
Iteration 200 of 1000: loss=0.00356 " + "l1=0.00338" + "l2=0.000174 f=-0.333 shape=(1, 9000, 1)
logits [[ 2.1394937 -1.8072917  1.8010061 -3.466578 ]]
Iteration 300 of 1000: loss=0.00348 " + "l1=0.00326" + "l2=0.000219 f=-0.334 shape=(1, 9000, 1)
logits [[ 2.1314611 -1.8100054  1.805873  -3.4634168]]
Iteration 400 of 1000: loss=0.00339 " + "l1=0.00312" + "l2=0.000278 f=-0.335 shape=(1, 9000, 1)
logits [[ 2.1232479 -1.8130988  1.8115679 -3.4599204]]
Iteration 500 of 1000: loss=0.00332 " + "l1=0.00298" + "l2=0.000342 f=-0.335 shape=(1, 9000, 1)
logits [[ 2.1151416 -1.8163328  1.8170779 -3.4563715]]
Iteration 600 of 1000: loss=0.0033 " + "l1=0.00285" + "l2=0.000449 f=-0.336 shape=(1, 9000, 1)
logits [[ 2.1072333 -1.8199422  1.8225317 -3.452609 ]]
Iteration 700 of 1000: loss=0.00329 " + "l1=0.00273" + "l2=0.000565 f=-0.336 shape=(1, 9000, 1)
logits [[ 2.099937  -1.8233885  1.8272152 -3.4489896]]
Iteration 800 of 1000: loss=0.00332 " + "l1=0.00261" + "l2=0.000706 f=-0.337 shape=(1, 9000, 1)
logits [[ 2.093028  -1.8269479  1.831768  -3.4453645]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0395 " + "l1=0.0395" + "l2=0 f=-0.33 shape=(1, 9000, 1)
logits [[ 2.1816268 -1.7981467  1.7866837 -3.4901834]]
Iteration 100 of 1000: loss=0.0161 " + "l1=0.00656" + "l2=0.00954 f=-0.346 shape=(1, 9000, 1)
logits [[ 1.9422554 -1.8652985  1.8766862 -3.336729 ]]
Iteration 200 of 1000: loss=0.00654 " + "l1=0.000117" + "l2=0.00643 f=-0.352 shape=(1, 9000, 1)
logits [[ 1.9182619 -1.908561   1.9170966 -3.3345122]]
Iteration 300 of 1000: loss=0.00466 " + "l1=0" + "l2=0.00466 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9252915 -1.9188181  1.926921  -3.3447597]]
Iteration 400 of 1000: loss=0.00391 " + "l1=0" + "l2=0.00391 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9314297 -1.9252524  1.9326309 -3.351428 ]]
Iteration 500 of 1000: loss=0.00355 " + "l1=0.000109" + "l2=0.00344 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9365934 -1.9294466  1.9355079 -3.3562384]]
Iteration 600 of 1000: loss=0.00341 " + "l1=0" + "l2=0.00341 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9363847 -1.931817   1.936462  -3.3546858]]
Iteration 700 of 1000: loss=0.0033 " + "l1=0.000159" + "l2=0.00314 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9381143 -1.933073   1.936529  -3.3544278]]
Iteration 800 of 1000: loss=0.00312 " + "l1=0" + "l2=0.00312 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9354308 -1.9352791  1.9376581 -3.351648 ]]
Iteration 900 of 1000: loss=0.00311 " + "l1=0" + "l2=0.00311 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9373057 -1.9364452  1.9375013 -3.3517795]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0217 " + "l1=0.0217" + "l2=0 f=-0.33 shape=(1, 9000, 1)
logits [[ 2.1816268 -1.7981467  1.7866837 -3.4901834]]
Iteration 100 of 1000: loss=0.0148 " + "l1=0.012" + "l2=0.00279 f=-0.337 shape=(1, 9000, 1)
logits [[ 2.0480673 -1.8241504  1.8300793 -3.4028652]]
Iteration 200 of 1000: loss=0.0109 " + "l1=0.00681" + "l2=0.00406 f=-0.342 shape=(1, 9000, 1)
logits [[ 1.989075  -1.8521011  1.8653227 -3.371208 ]]
Iteration 300 of 1000: loss=0.00634 " + "l1=0.00042" + "l2=0.00592 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.9205232 -1.900615   1.9128876 -3.3345435]]
Iteration 400 of 1000: loss=0.00439 " + "l1=2.42e-05" + "l2=0.00436 f=-0.352 shape=(1, 9000, 1)
logits [[ 1.9250902 -1.9151164  1.9246502 -3.3433805]]
Iteration 500 of 1000: loss=0.00375 " + "l1=1.9e-05" + "l2=0.00373 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9315193 -1.9224793  1.9311744 -3.3512123]]
Iteration 600 of 1000: loss=0.00343 " + "l1=0" + "l2=0.00343 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9337306 -1.9273008  1.9345222 -3.3533456]]
Iteration 700 of 1000: loss=0.00321 " + "l1=0" + "l2=0.00321 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9344479 -1.9304478  1.9359118 -3.3528073]]
Iteration 800 of 1000: loss=0.0031 " + "l1=0" + "l2=0.0031 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9354395 -1.9327979  1.9369134 -3.3525743]]
Iteration 900 of 1000: loss=0.00303 " + "l1=2.45e-05" + "l2=0.003 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9372761 -1.9343646  1.9368304 -3.3527408]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0128 " + "l1=0.0128" + "l2=0 f=-0.33 shape=(1, 9000, 1)
logits [[ 2.1816268 -1.7981467  1.7866837 -3.4901834]]
Iteration 100 of 1000: loss=0.0102 " + "l1=0.00915" + "l2=0.00109 f=-0.335 shape=(1, 9000, 1)
logits [[ 2.096201  -1.8147664  1.814753  -3.4373243]]
Iteration 200 of 1000: loss=0.00902 " + "l1=0.00764" + "l2=0.00138 f=-0.337 shape=(1, 9000, 1)
logits [[ 2.0664194 -1.8248651  1.831442  -3.4199648]]
Iteration 300 of 1000: loss=0.00786 " + "l1=0.00604" + "l2=0.00182 f=-0.339 shape=(1, 9000, 1)
logits [[ 2.0354617 -1.8378505  1.849539  -3.4018633]]
Iteration 400 of 1000: loss=0.0066 " + "l1=0.00408" + "l2=0.00252 f=-0.343 shape=(1, 9000, 1)
logits [[ 2.0012994 -1.8610561  1.8756524 -3.3871775]]
Iteration 500 of 1000: loss=0.00527 " + "l1=0.00205" + "l2=0.00322 f=-0.347 shape=(1, 9000, 1)
logits [[ 1.9659753 -1.8891314  1.9029673 -3.3692865]]
Iteration 600 of 1000: loss=0.00427 " + "l1=0.000422" + "l2=0.00385 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.9351017 -1.91001    1.9221214 -3.3490186]]
Iteration 700 of 1000: loss=0.00355 " + "l1=5.08e-05" + "l2=0.0035 f=-0.352 shape=(1, 9000, 1)
logits [[ 1.9340072 -1.9232707  1.9324445 -3.3521173]]
Iteration 800 of 1000: loss=0.00329 " + "l1=1.52e-05" + "l2=0.00328 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9358406 -1.9281535  1.935374  -3.3538322]]
Iteration 900 of 1000: loss=0.00316 " + "l1=0" + "l2=0.00316 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9367981 -1.9315542  1.9368705 -3.3540251]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00839 " + "l1=0.00839" + "l2=0 f=-0.33 shape=(1, 9000, 1)
logits [[ 2.1816268 -1.7981467  1.7866837 -3.4901834]]
Iteration 100 of 1000: loss=0.00721 " + "l1=0.00668" + "l2=0.000535 f=-0.334 shape=(1, 9000, 1)
logits [[ 2.1205163 -1.8100923  1.8063366 -3.452987 ]]
Iteration 200 of 1000: loss=0.00671 " + "l1=0.00608" + "l2=0.000629 f=-0.335 shape=(1, 9000, 1)
logits [[ 2.1025624 -1.8147994  1.8165416 -3.4449215]]
Iteration 300 of 1000: loss=0.00622 " + "l1=0.00542" + "l2=0.000801 f=-0.336 shape=(1, 9000, 1)
logits [[ 2.08335   -1.8219857  1.8282254 -3.4345372]]
Iteration 400 of 1000: loss=0.0058 " + "l1=0.00475" + "l2=0.00105 f=-0.337 shape=(1, 9000, 1)
logits [[ 2.0645382 -1.8311244  1.8410064 -3.4241111]]
Iteration 500 of 1000: loss=0.00543 " + "l1=0.00414" + "l2=0.00129 f=-0.339 shape=(1, 9000, 1)
logits [[ 2.046853  -1.8402978  1.8521594 -3.4144416]]
Iteration 600 of 1000: loss=0.00513 " + "l1=0.00354" + "l2=0.00159 f=-0.34 shape=(1, 9000, 1)
logits [[ 2.0288603 -1.8487974  1.862119  -3.4036992]]
Iteration 700 of 1000: loss=0.0047 " + "l1=0.00271" + "l2=0.00199 f=-0.344 shape=(1, 9000, 1)
logits [[ 2.0089095 -1.867486   1.8812052 -3.3969479]]
Iteration 800 of 1000: loss=0.00429 " + "l1=0.00197" + "l2=0.00232 f=-0.346 shape=(1, 9000, 1)
logits [[ 1.9891019 -1.8834662  1.8961629 -3.3856344]]
Iteration 900 of 1000: loss=0.00397 " + "l1=0.00139" + "l2=0.00258 f=-0.348 shape=(1, 9000, 1)
logits [[ 1.9728545 -1.8968657  1.9075636 -3.3756015]]
--- 279.83125019073486 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0567 " + "l1=0.0567" + "l2=0 f=-0.33 shape=(1, 9000, 1)
logits [[ 2.1816268 -1.7981467  1.7866837 -3.4901834]]
Iteration 100 of 1000: loss=0.0554 " + "l1=0.0547" + "l2=0.000683 f=-0.327 shape=(1, 9000, 1)
logits [[ 2.0973954 -1.7780553  1.7476832 -3.3748147]]
Iteration 200 of 1000: loss=0.055 " + "l1=0.0541" + "l2=0.000823 f=-0.326 shape=(1, 9000, 1)
logits [[ 2.0736737 -1.7748864  1.7370629 -3.341279 ]]
Iteration 300 of 1000: loss=0.0546 " + "l1=0.0535" + "l2=0.00108 f=-0.326 shape=(1, 9000, 1)
logits [[ 2.0473151 -1.7710756  1.7248325 -3.3031907]]
Iteration 400 of 1000: loss=0.0542 " + "l1=0.0529" + "l2=0.00134 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.0207021 -1.7673404  1.7133974 -3.2647448]]
Iteration 500 of 1000: loss=0.0539 " + "l1=0.0523" + "l2=0.0016 f=-0.323 shape=(1, 9000, 1)
logits [[ 1.996453  -1.7645419  1.7035018 -3.2292278]]
Iteration 600 of 1000: loss=0.0536 " + "l1=0.0517" + "l2=0.0019 f=-0.322 shape=(1, 9000, 1)
logits [[ 1.9732656 -1.7619544  1.6942873 -3.1953006]]
Iteration 700 of 1000: loss=0.0533 " + "l1=0.0511" + "l2=0.00219 f=-0.322 shape=(1, 9000, 1)
logits [[ 1.9509804 -1.7590873  1.6852164 -3.1634953]]
Iteration 800 of 1000: loss=0.0531 " + "l1=0.0506" + "l2=0.00242 f=-0.321 shape=(1, 9000, 1)
logits [[ 1.9302138 -1.7565078  1.6764461 -3.1333096]]
Iteration 900 of 1000: loss=0.0528 " + "l1=0.0502" + "l2=0.00264 f=-0.32 shape=(1, 9000, 1)
logits [[ 1.9115506 -1.7545176  1.6685067 -3.1054711]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.567 " + "l1=0.567" + "l2=0 f=-0.33 shape=(1, 9000, 1)
logits [[ 2.1816268 -1.7981467  1.7866837 -3.4901834]]
Iteration 100 of 1000: loss=0.432 " + "l1=0.371" + "l2=0.0611 f=-0.279 shape=(1, 9000, 1)
logits [[ 1.3859682 -1.5702366  1.3880324 -2.3203466]]
Iteration 200 of 1000: loss=0.367 " + "l1=0.286" + "l2=0.0812 f=-0.237 shape=(1, 9000, 1)
logits [[ 1.1263988 -1.4738812  1.1285756 -1.7272272]]
Iteration 300 of 1000: loss=0.312 " + "l1=0.206" + "l2=0.106 f=-0.194 shape=(1, 9000, 1)
logits [[ 0.85450697 -1.3743461   0.9032847  -1.1612892 ]]
Iteration 400 of 1000: loss=0.266 " + "l1=0.142" + "l2=0.123 f=-0.156 shape=(1, 9000, 1)
logits [[ 0.6204009  -1.2836229   0.731608   -0.69241995]]
Iteration 500 of 1000: loss=0.232 " + "l1=0.104" + "l2=0.128 f=-0.131 shape=(1, 9000, 1)
logits [[ 0.4796233  -1.2291204   0.6320388  -0.40696317]]
Iteration 600 of 1000: loss=0.201 " + "l1=0.0699" + "l2=0.131 f=-0.11 shape=(1, 9000, 1)
logits [[ 0.33891353 -1.2026614   0.5616719  -0.13753846]]
Iteration 700 of 1000: loss=0.172 " + "l1=0.0376" + "l2=0.135 f=-0.0893 shape=(1, 9000, 1)
logits [[ 0.19238797 -1.1784755   0.5023098   0.1266613 ]]
Iteration 800 of 1000: loss=0.141 " + "l1=0.00102" + "l2=0.14 f=-0.0642 shape=(1, 9000, 1)
logits [[ 0.04242405 -1.1406564   0.42584267  0.41559964]]
Iteration 900 of 1000: loss=0.117 " + "l1=0" + "l2=0.117 f=-0.066 shape=(1, 9000, 1)
logits [[ 0.03901712 -1.1370057   0.41678235  0.4172621 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.312 " + "l1=0.312" + "l2=0 f=-0.33 shape=(1, 9000, 1)
logits [[ 2.1816268 -1.7981467  1.7866837 -3.4901834]]
Iteration 100 of 1000: loss=0.273 " + "l1=0.255" + "l2=0.0185 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.7502178 -1.6776603  1.5863631 -2.8790686]]
Iteration 200 of 1000: loss=0.252 " + "l1=0.222" + "l2=0.03 f=-0.29 shape=(1, 9000, 1)
logits [[ 1.5118761 -1.6302128  1.475919  -2.5187104]]
Iteration 300 of 1000: loss=0.234 " + "l1=0.198" + "l2=0.0368 f=-0.272 shape=(1, 9000, 1)
logits [[ 1.3645914 -1.5892228  1.3646922 -2.2291663]]
Iteration 400 of 1000: loss=0.219 " + "l1=0.176" + "l2=0.0434 f=-0.251 shape=(1, 9000, 1)
logits [[ 1.2486194 -1.5504133  1.2494962 -1.9511545]]
Iteration 500 of 1000: loss=0.205 " + "l1=0.158" + "l2=0.0471 f=-0.234 shape=(1, 9000, 1)
logits [[ 1.1534326 -1.5172616  1.1539549 -1.7243952]]
Iteration 600 of 1000: loss=0.192 " + "l1=0.14" + "l2=0.0516 f=-0.216 shape=(1, 9000, 1)
logits [[ 1.0619979 -1.4982742  1.0627787 -1.4907023]]
Iteration 700 of 1000: loss=0.179 " + "l1=0.124" + "l2=0.0546 f=-0.203 shape=(1, 9000, 1)
logits [[ 0.9708002 -1.463948   0.9715534 -1.2904363]]
Iteration 800 of 1000: loss=0.167 " + "l1=0.11" + "l2=0.0569 f=-0.193 shape=(1, 9000, 1)
logits [[ 0.8940066  -1.459395    0.89905316 -1.1051888 ]]
Iteration 900 of 1000: loss=0.156 " + "l1=0.0979" + "l2=0.0582 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.84223163 -1.4744622   0.8429582  -0.9376712 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.44 " + "l1=0.44" + "l2=0 f=-0.33 shape=(1, 9000, 1)
logits [[ 2.1816268 -1.7981467  1.7866837 -3.4901834]]
Iteration 100 of 1000: loss=0.36 " + "l1=0.322" + "l2=0.0384 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.5563979 -1.6280227  1.4944477 -2.5949554]]
Iteration 200 of 1000: loss=0.317 " + "l1=0.264" + "l2=0.0534 f=-0.264 shape=(1, 9000, 1)
logits [[ 1.298763  -1.546194   1.2980666 -2.1056163]]
Iteration 300 of 1000: loss=0.285 " + "l1=0.219" + "l2=0.0658 f=-0.233 shape=(1, 9000, 1)
logits [[ 1.1250813 -1.483528   1.1283505 -1.7000089]]
Iteration 400 of 1000: loss=0.255 " + "l1=0.177" + "l2=0.078 f=-0.204 shape=(1, 9000, 1)
logits [[ 0.9568729 -1.4201514  0.9652553 -1.3192551]]
Iteration 500 of 1000: loss=0.228 " + "l1=0.142" + "l2=0.0863 f=-0.18 shape=(1, 9000, 1)
logits [[ 0.79968977 -1.3586229   0.8375721  -0.9967366 ]]
Iteration 600 of 1000: loss=0.205 " + "l1=0.112" + "l2=0.0928 f=-0.156 shape=(1, 9000, 1)
logits [[ 0.65405786 -1.3098154   0.7418463  -0.7091954 ]]
Iteration 700 of 1000: loss=0.187 " + "l1=0.091" + "l2=0.0963 f=-0.139 shape=(1, 9000, 1)
logits [[ 0.54316664 -1.2771688   0.67480433 -0.49879944]]
Iteration 800 of 1000: loss=0.169 " + "l1=0.0705" + "l2=0.0989 f=-0.125 shape=(1, 9000, 1)
logits [[ 0.42233768 -1.246646    0.6176514  -0.29171082]]
Iteration 900 of 1000: loss=0.152 " + "l1=0.051" + "l2=0.101 f=-0.11 shape=(1, 9000, 1)
logits [[ 0.30424115 -1.2232924   0.5690736  -0.08892425]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.503 " + "l1=0.503" + "l2=0 f=-0.33 shape=(1, 9000, 1)
logits [[ 2.1816268 -1.7981467  1.7866837 -3.4901834]]
Iteration 100 of 1000: loss=0.397 " + "l1=0.344" + "l2=0.0524 f=-0.287 shape=(1, 9000, 1)
logits [[ 1.4442065 -1.5994654  1.4424541 -2.4342706]]
Iteration 200 of 1000: loss=0.344 " + "l1=0.276" + "l2=0.0679 f=-0.249 shape=(1, 9000, 1)
logits [[ 1.2028149 -1.5074532  1.2076957 -1.8976774]]
Iteration 300 of 1000: loss=0.302 " + "l1=0.218" + "l2=0.084 f=-0.214 shape=(1, 9000, 1)
logits [[ 1.0016837 -1.4339755  1.0169257 -1.4401497]]
Iteration 400 of 1000: loss=0.262 " + "l1=0.163" + "l2=0.0993 f=-0.179 shape=(1, 9000, 1)
logits [[ 0.7865534 -1.3461502  0.8396507 -0.9978853]]
Iteration 500 of 1000: loss=0.231 " + "l1=0.12" + "l2=0.111 f=-0.15 shape=(1, 9000, 1)
logits [[ 0.60463095 -1.2831054   0.71592075 -0.637948  ]]
Iteration 600 of 1000: loss=0.206 " + "l1=0.0945" + "l2=0.111 f=-0.134 shape=(1, 9000, 1)
logits [[ 0.4937491  -1.2464244   0.64095056 -0.4234609 ]]
Iteration 700 of 1000: loss=0.182 " + "l1=0.0663" + "l2=0.116 f=-0.115 shape=(1, 9000, 1)
logits [[ 0.3532113  -1.2194823   0.5772987  -0.16918969]]
Iteration 800 of 1000: loss=0.159 " + "l1=0.0429" + "l2=0.116 f=-0.0965 shape=(1, 9000, 1)
logits [[ 0.23669082 -1.194754    0.5278671   0.04416222]]
Iteration 900 of 1000: loss=0.137 " + "l1=0.0138" + "l2=0.123 f=-0.0712 shape=(1, 9000, 1)
logits [[ 0.0983656  -1.1613448   0.46669993  0.3114263 ]]
--- 293.56619143486023 seconds ---
Adv result:3
Loading record A01092
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0536 " + "l1=0.0536" + "l2=0 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.8825097 -2.48182    2.1018672 -3.4422374]]
Iteration 100 of 1000: loss=0.0534 " + "l1=0.0531" + "l2=0.00022 f=-0.233 shape=(1, 9000, 1)
logits [[ 2.8512616 -2.463117   2.0897195 -3.4091377]]
Iteration 200 of 1000: loss=0.0533 " + "l1=0.0531" + "l2=0.000214 f=-0.233 shape=(1, 9000, 1)
logits [[ 2.847104  -2.4596813  2.087535  -3.4058082]]
Iteration 300 of 1000: loss=0.0532 " + "l1=0.053" + "l2=0.000258 f=-0.233 shape=(1, 9000, 1)
logits [[ 2.8415623 -2.4555535  2.0848925 -3.4009361]]
Iteration 400 of 1000: loss=0.0532 " + "l1=0.0529" + "l2=0.000327 f=-0.232 shape=(1, 9000, 1)
logits [[ 2.8357522 -2.4509938  2.0819852 -3.395734 ]]
Iteration 500 of 1000: loss=0.0532 " + "l1=0.0528" + "l2=0.000411 f=-0.232 shape=(1, 9000, 1)
logits [[ 2.8301957 -2.4466355  2.0792634 -3.3907459]]
Iteration 600 of 1000: loss=0.0532 " + "l1=0.0527" + "l2=0.000508 f=-0.232 shape=(1, 9000, 1)
logits [[ 2.824996  -2.4426281  2.0767636 -3.3860824]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.536 " + "l1=0.536" + "l2=0 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.8825097 -2.48182    2.1018672 -3.4422374]]
Iteration 100 of 1000: loss=0.509 " + "l1=0.492" + "l2=0.0167 f=-0.221 shape=(1, 9000, 1)
logits [[ 2.6044478 -2.3189023  1.9915807 -3.160678 ]]
Iteration 200 of 1000: loss=0.495 " + "l1=0.47" + "l2=0.0253 f=-0.217 shape=(1, 9000, 1)
logits [[ 2.4690568 -2.2269816  1.9319092 -3.0405138]]
Iteration 300 of 1000: loss=0.481 " + "l1=0.448" + "l2=0.033 f=-0.212 shape=(1, 9000, 1)
logits [[ 2.3456986 -2.1295128  1.870603  -2.933266 ]]
Iteration 400 of 1000: loss=0.47 " + "l1=0.431" + "l2=0.0392 f=-0.211 shape=(1, 9000, 1)
logits [[ 2.246739  -2.059328   1.8245492 -2.8566341]]
Iteration 500 of 1000: loss=0.463 " + "l1=0.42" + "l2=0.0432 f=-0.211 shape=(1, 9000, 1)
logits [[ 2.1776085 -2.0231183  1.8028238 -2.800434 ]]
Iteration 600 of 1000: loss=0.458 " + "l1=0.412" + "l2=0.0457 f=-0.21 shape=(1, 9000, 1)
logits [[ 2.1256614 -1.9942955  1.7873029 -2.7577918]]
Iteration 700 of 1000: loss=0.452 " + "l1=0.405" + "l2=0.0478 f=-0.208 shape=(1, 9000, 1)
logits [[ 2.0766847 -1.968819   1.7736155 -2.7145362]]
Iteration 800 of 1000: loss=0.447 " + "l1=0.396" + "l2=0.0506 f=-0.207 shape=(1, 9000, 1)
logits [[ 2.0219438 -1.9415015  1.7617373 -2.6687305]]
Iteration 900 of 1000: loss=0.442 " + "l1=0.389" + "l2=0.0528 f=-0.205 shape=(1, 9000, 1)
logits [[ 1.9709163 -1.918961   1.7519258 -2.624313 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.36 " + "l1=5.36" + "l2=0 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.8825097 -2.48182    2.1018672 -3.4422374]]
Iteration 100 of 1000: loss=3.4 " + "l1=2.82" + "l2=0.589 f=-0.183 shape=(1, 9000, 1)
logits [[ 1.3602407 -1.4524624  1.3628742 -2.002279 ]]
Iteration 200 of 1000: loss=3 " + "l1=2.38" + "l2=0.619 f=-0.18 shape=(1, 9000, 1)
logits [[ 1.1653352 -1.2063884  1.1747506 -1.854407 ]]
Iteration 300 of 1000: loss=2.74 " + "l1=2.04" + "l2=0.701 f=-0.172 shape=(1, 9000, 1)
logits [[ 0.9899374 -1.0421028  0.9993815 -1.6367279]]
Iteration 400 of 1000: loss=2.59 " + "l1=1.87" + "l2=0.721 f=-0.167 shape=(1, 9000, 1)
logits [[ 0.89379287 -0.9700664   0.9023491  -1.4931086 ]]
Iteration 500 of 1000: loss=2.48 " + "l1=1.73" + "l2=0.753 f=-0.167 shape=(1, 9000, 1)
logits [[ 0.7946698 -0.8963788  0.8293314 -1.3955104]]
Iteration 600 of 1000: loss=2.36 " + "l1=1.62" + "l2=0.734 f=-0.164 shape=(1, 9000, 1)
logits [[ 0.76852787 -0.84431297  0.77713805 -1.3581562 ]]
Iteration 700 of 1000: loss=2.28 " + "l1=1.51" + "l2=0.768 f=-0.154 shape=(1, 9000, 1)
logits [[ 0.6826394  -0.80007696  0.71369237 -1.2123817 ]]
Iteration 800 of 1000: loss=2.22 " + "l1=1.44" + "l2=0.782 f=-0.148 shape=(1, 9000, 1)
logits [[ 0.6038521  -0.77364236  0.66537195 -1.0894786 ]]
Iteration 900 of 1000: loss=2.18 " + "l1=1.39" + "l2=0.785 f=-0.144 shape=(1, 9000, 1)
logits [[ 0.5138247 -0.7486979  0.6441944 -0.9844948]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=53.6 " + "l1=53.6" + "l2=0 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.8825097 -2.48182    2.1018672 -3.4422374]]
Iteration 100 of 1000: loss=11.9 " + "l1=1.56" + "l2=10.3 f=-0.269 shape=(1, 9000, 1)
logits [[-0.61983067 -0.09358371  0.06241409 -0.42480713]]
Iteration 200 of 1000: loss=7.28 " + "l1=0.0789" + "l2=7.2 f=-0.268 shape=(1, 9000, 1)
logits [[-0.74545276 -0.00137522  0.00651325 -0.33177477]]
Iteration 300 of 1000: loss=6.28 " + "l1=0" + "l2=6.28 f=-0.249 shape=(1, 9000, 1)
logits [[-7.4362308e-01 -3.1125359e-04 -1.3004500e-02 -2.3771876e-01]]
Iteration 400 of 1000: loss=5.5 " + "l1=0.0324" + "l2=5.47 f=-0.228 shape=(1, 9000, 1)
logits [[-0.7166867  -0.01515829 -0.01191993 -0.1696074 ]]
Iteration 500 of 1000: loss=5.02 " + "l1=0.00673" + "l2=5.01 f=-0.213 shape=(1, 9000, 1)
logits [[-0.68118185 -0.01457991 -0.01390647 -0.14334282]]
Iteration 600 of 1000: loss=4.68 " + "l1=0" + "l2=4.68 f=-0.179 shape=(1, 9000, 1)
logits [[-0.62918884 -0.02248351 -0.03491112 -0.03020934]]
Iteration 700 of 1000: loss=4.47 " + "l1=0.0457" + "l2=4.42 f=-0.188 shape=(1, 9000, 1)
logits [[-0.53524905  0.01936047  0.0239332  -0.2586653 ]]
Iteration 800 of 1000: loss=4.24 " + "l1=0" + "l2=4.24 f=-0.174 shape=(1, 9000, 1)
logits [[-0.55528873  0.0078993  -0.01069875 -0.13825986]]
Iteration 900 of 1000: loss=4.04 " + "l1=0.0415" + "l2=3.99 f=-0.165 shape=(1, 9000, 1)
logits [[-0.56225836 -0.03212237 -0.02797176 -0.03920217]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=29.5 " + "l1=29.5" + "l2=0 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.8825097 -2.48182    2.1018672 -3.4422374]]
Iteration 100 of 1000: loss=10.4 " + "l1=5.34" + "l2=5.07 f=-0.242 shape=(1, 9000, 1)
logits [[ 0.17648426 -0.5091248   0.46139196 -1.095145  ]]
Iteration 200 of 1000: loss=6.41 " + "l1=0.0215" + "l2=6.38 f=-0.285 shape=(1, 9000, 1)
logits [[-0.5838749   0.00989814  0.01380369 -0.5805991 ]]
Iteration 300 of 1000: loss=5.13 " + "l1=0.0478" + "l2=5.08 f=-0.259 shape=(1, 9000, 1)
logits [[-0.589711    0.01432987  0.0230251  -0.48431543]]
Iteration 400 of 1000: loss=4.48 " + "l1=0.015" + "l2=4.46 f=-0.228 shape=(1, 9000, 1)
logits [[-0.5914654   0.00760196  0.01033762 -0.33730447]]
Iteration 500 of 1000: loss=4.06 " + "l1=0" + "l2=4.06 f=-0.189 shape=(1, 9000, 1)
logits [[-0.5752329  -0.00917291 -0.01307788 -0.15899214]]
Iteration 600 of 1000: loss=3.8 " + "l1=0" + "l2=3.8 f=-0.171 shape=(1, 9000, 1)
logits [[-0.56569016 -0.02858366 -0.03967163 -0.0499003 ]]
Iteration 700 of 1000: loss=3.62 " + "l1=0" + "l2=3.62 f=-0.163 shape=(1, 9000, 1)
logits [[-0.54277873 -0.02107651 -0.03883309 -0.04888393]]
Iteration 800 of 1000: loss=3.48 " + "l1=0" + "l2=3.48 f=-0.164 shape=(1, 9000, 1)
logits [[-0.49075586 -0.00300714 -0.00691817 -0.15709546]]
Iteration 900 of 1000: loss=3.39 " + "l1=0.0528" + "l2=3.34 f=-0.162 shape=(1, 9000, 1)
logits [[-0.48050642 -0.01069534 -0.00110205 -0.15606776]]
--- 271.08545780181885 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00781 " + "l1=0.00781" + "l2=0 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.8825097 -2.48182    2.1018672 -3.4422374]]
Iteration 100 of 1000: loss=0.00771 " + "l1=0.00759" + "l2=0.000123 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.8625052 -2.4801884  2.1036932 -3.4231355]]
Iteration 200 of 1000: loss=0.00767 " + "l1=0.00758" + "l2=9.22e-05 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.862279  -2.4800763  2.104106  -3.4235833]]
Iteration 300 of 1000: loss=0.00768 " + "l1=0.00756" + "l2=0.000119 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.8603187 -2.4799123  2.1046145 -3.4223185]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0781 " + "l1=0.0781" + "l2=0 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.8825097 -2.48182    2.1018672 -3.4422374]]
Iteration 100 of 1000: loss=0.0687 " + "l1=0.0633" + "l2=0.00545 f=-0.231 shape=(1, 9000, 1)
logits [[ 2.747446  -2.4717443  2.1146586 -3.3161771]]
Iteration 200 of 1000: loss=0.0653 " + "l1=0.0579" + "l2=0.00732 f=-0.23 shape=(1, 9000, 1)
logits [[ 2.6993628 -2.4674077  2.120079  -3.2718384]]
Iteration 300 of 1000: loss=0.062 " + "l1=0.0528" + "l2=0.00918 f=-0.229 shape=(1, 9000, 1)
logits [[ 2.6571996 -2.4661865  2.1294901 -3.2349916]]
Iteration 400 of 1000: loss=0.0587 " + "l1=0.0479" + "l2=0.0108 f=-0.228 shape=(1, 9000, 1)
logits [[ 2.6172931 -2.4623702  2.138392  -3.2051775]]
Iteration 500 of 1000: loss=0.0558 " + "l1=0.0435" + "l2=0.0123 f=-0.228 shape=(1, 9000, 1)
logits [[ 2.582522  -2.460403   2.1479223 -3.1810179]]
Iteration 600 of 1000: loss=0.0529 " + "l1=0.0393" + "l2=0.0136 f=-0.228 shape=(1, 9000, 1)
logits [[ 2.5481791 -2.4565997  2.1548142 -3.157237 ]]
Iteration 700 of 1000: loss=0.0496 " + "l1=0.034" + "l2=0.0156 f=-0.228 shape=(1, 9000, 1)
logits [[ 2.4998598 -2.449739   2.159543  -3.1201649]]
Iteration 800 of 1000: loss=0.0466 " + "l1=0.03" + "l2=0.0166 f=-0.227 shape=(1, 9000, 1)
logits [[ 2.4632547 -2.4423518  2.163751  -3.0941637]]
Iteration 900 of 1000: loss=0.0435 " + "l1=0.0259" + "l2=0.0176 f=-0.227 shape=(1, 9000, 1)
logits [[ 2.424947  -2.435031   2.1659584 -3.0657346]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.781 " + "l1=0.781" + "l2=0 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.8825097 -2.48182    2.1018672 -3.4422374]]
Iteration 100 of 1000: loss=0.117 " + "l1=0" + "l2=0.117 f=-0.223 shape=(1, 9000, 1)
logits [[ 2.1019287 -2.395149   2.1037662 -2.7007346]]
Iteration 200 of 1000: loss=0.0876 " + "l1=0" + "l2=0.0876 f=-0.22 shape=(1, 9000, 1)
logits [[ 2.1031072 -2.3805666  2.1111414 -2.7145705]]
Iteration 300 of 1000: loss=0.0721 " + "l1=0.00182" + "l2=0.0703 f=-0.22 shape=(1, 9000, 1)
logits [[ 2.1266422 -2.3795178  2.1248205 -2.7527387]]
Iteration 400 of 1000: loss=0.0641 " + "l1=0.0018" + "l2=0.0623 f=-0.221 shape=(1, 9000, 1)
logits [[ 2.1357384 -2.3787544  2.1339345 -2.774638 ]]
Iteration 500 of 1000: loss=0.057 " + "l1=0" + "l2=0.057 f=-0.222 shape=(1, 9000, 1)
logits [[ 2.1360965 -2.3788555  2.1400864 -2.7847128]]
Iteration 600 of 1000: loss=0.0523 " + "l1=0" + "l2=0.0523 f=-0.223 shape=(1, 9000, 1)
logits [[ 2.1407492 -2.3843348  2.147499  -2.7963803]]
Iteration 700 of 1000: loss=0.0478 " + "l1=0" + "l2=0.0478 f=-0.224 shape=(1, 9000, 1)
logits [[ 2.148264  -2.3931575  2.1574438 -2.8101172]]
Iteration 800 of 1000: loss=0.0431 " + "l1=0.00161" + "l2=0.0415 f=-0.225 shape=(1, 9000, 1)
logits [[ 2.1641386 -2.3995082  2.1625297 -2.8259177]]
Iteration 900 of 1000: loss=0.0383 " + "l1=0" + "l2=0.0383 f=-0.225 shape=(1, 9000, 1)
logits [[ 2.1602185 -2.4016535  2.168799  -2.82541  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.429 " + "l1=0.429" + "l2=0 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.8825097 -2.48182    2.1018672 -3.4422374]]
Iteration 100 of 1000: loss=0.115 " + "l1=0" + "l2=0.115 f=-0.222 shape=(1, 9000, 1)
logits [[ 2.1109242 -2.395327   2.110942  -2.7142296]]
Iteration 200 of 1000: loss=0.082 " + "l1=0" + "l2=0.082 f=-0.22 shape=(1, 9000, 1)
logits [[ 2.1221726 -2.3869138  2.123766  -2.7390072]]
Iteration 300 of 1000: loss=0.0692 " + "l1=0.00106" + "l2=0.0681 f=-0.22 shape=(1, 9000, 1)
logits [[ 2.1410277 -2.3862085  2.1391056 -2.7720218]]
Iteration 400 of 1000: loss=0.0628 " + "l1=0" + "l2=0.0628 f=-0.221 shape=(1, 9000, 1)
logits [[ 2.13756   -2.389287   2.1506417 -2.783055 ]]
Iteration 500 of 1000: loss=0.0546 " + "l1=0" + "l2=0.0546 f=-0.222 shape=(1, 9000, 1)
logits [[ 2.1555786 -2.3969815  2.1598363 -2.8084104]]
Iteration 600 of 1000: loss=0.0496 " + "l1=0" + "l2=0.0496 f=-0.224 shape=(1, 9000, 1)
logits [[ 2.1587188 -2.4065607  2.1696334 -2.819462 ]]
Iteration 700 of 1000: loss=0.0425 " + "l1=0" + "l2=0.0425 f=-0.225 shape=(1, 9000, 1)
logits [[ 2.1738029 -2.414356   2.175499  -2.8356059]]
Iteration 800 of 1000: loss=0.0386 " + "l1=0" + "l2=0.0386 f=-0.226 shape=(1, 9000, 1)
logits [[ 2.1747444 -2.4185736  2.1829214 -2.8432047]]
Iteration 900 of 1000: loss=0.034 " + "l1=0" + "l2=0.034 f=-0.227 shape=(1, 9000, 1)
logits [[ 2.175437  -2.4202704  2.1827843 -2.8478844]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.254 " + "l1=0.254" + "l2=0 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.8825097 -2.48182    2.1018672 -3.4422374]]
Iteration 100 of 1000: loss=0.139 " + "l1=0.0653" + "l2=0.0733 f=-0.226 shape=(1, 9000, 1)
logits [[ 2.3121035 -2.4180682  2.1110744 -2.9098475]]
Iteration 200 of 1000: loss=0.0851 " + "l1=0.00114" + "l2=0.084 f=-0.221 shape=(1, 9000, 1)
logits [[ 2.1281173 -2.3855631  2.1246037 -2.7498643]]
Iteration 300 of 1000: loss=0.0698 " + "l1=0" + "l2=0.0698 f=-0.22 shape=(1, 9000, 1)
logits [[ 2.140078  -2.3846107  2.14463   -2.7799149]]
Iteration 400 of 1000: loss=0.0612 " + "l1=0.00263" + "l2=0.0586 f=-0.222 shape=(1, 9000, 1)
logits [[ 2.167484  -2.3943055  2.1593916 -2.8186252]]
Iteration 500 of 1000: loss=0.0543 " + "l1=0" + "l2=0.0543 f=-0.223 shape=(1, 9000, 1)
logits [[ 2.1608872 -2.4000027  2.1683247 -2.822975 ]]
Iteration 600 of 1000: loss=0.0463 " + "l1=2.05e-05" + "l2=0.0463 f=-0.224 shape=(1, 9000, 1)
logits [[ 2.1771214 -2.4107668  2.1770585 -2.839912 ]]
Iteration 700 of 1000: loss=0.0404 " + "l1=0.00076" + "l2=0.0396 f=-0.225 shape=(1, 9000, 1)
logits [[ 2.1883883 -2.4188023  2.1860497 -2.8549688]]
Iteration 800 of 1000: loss=0.0355 " + "l1=0" + "l2=0.0355 f=-0.227 shape=(1, 9000, 1)
logits [[ 2.1830893 -2.4218247  2.187559  -2.8569877]]
Iteration 900 of 1000: loss=0.0308 " + "l1=0.000165" + "l2=0.0307 f=-0.228 shape=(1, 9000, 1)
logits [[ 2.1865158 -2.4234393  2.1860073 -2.8618226]]
--- 253.6208221912384 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0632 " + "l1=0.0632" + "l2=0 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.8825097 -2.48182    2.1018672 -3.4422374]]
Iteration 100 of 1000: loss=0.0627 " + "l1=0.0622" + "l2=0.000444 f=-0.231 shape=(1, 9000, 1)
logits [[ 2.8377182 -2.4674544  2.0884798 -3.3844774]]
Iteration 200 of 1000: loss=0.0625 " + "l1=0.0621" + "l2=0.000455 f=-0.231 shape=(1, 9000, 1)
logits [[ 2.8307097 -2.4645026  2.085837  -3.3767357]]
Iteration 300 of 1000: loss=0.0624 " + "l1=0.0619" + "l2=0.000534 f=-0.231 shape=(1, 9000, 1)
logits [[ 2.8223023 -2.461078   2.0825567 -3.3671167]]
Iteration 400 of 1000: loss=0.0624 " + "l1=0.0617" + "l2=0.00063 f=-0.231 shape=(1, 9000, 1)
logits [[ 2.8143094 -2.4579754  2.079439  -3.3579898]]
Iteration 500 of 1000: loss=0.0623 " + "l1=0.0616" + "l2=0.000711 f=-0.23 shape=(1, 9000, 1)
logits [[ 2.8068907 -2.4553142  2.0766206 -3.3494942]]
Iteration 600 of 1000: loss=0.0622 " + "l1=0.0614" + "l2=0.000825 f=-0.23 shape=(1, 9000, 1)
logits [[ 2.7995431 -2.4527407  2.07383   -3.3410914]]
Iteration 700 of 1000: loss=0.0622 " + "l1=0.0613" + "l2=0.00091 f=-0.23 shape=(1, 9000, 1)
logits [[ 2.792454  -2.4502156  2.0710938 -3.3329337]]
Iteration 800 of 1000: loss=0.0622 " + "l1=0.0611" + "l2=0.00106 f=-0.23 shape=(1, 9000, 1)
logits [[ 2.7856824 -2.447799   2.0685017 -3.3250914]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.632 " + "l1=0.632" + "l2=0 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.8825097 -2.48182    2.1018672 -3.4422374]]
Iteration 100 of 1000: loss=0.571 " + "l1=0.53" + "l2=0.0415 f=-0.211 shape=(1, 9000, 1)
logits [[ 2.4113634 -2.338688   1.9686491 -2.8836818]]
Iteration 200 of 1000: loss=0.547 " + "l1=0.486" + "l2=0.0614 f=-0.197 shape=(1, 9000, 1)
logits [[ 2.2120006 -2.265281   1.9095031 -2.643834 ]]
Iteration 300 of 1000: loss=0.527 " + "l1=0.455" + "l2=0.0723 f=-0.188 shape=(1, 9000, 1)
logits [[ 2.0686224 -2.2029283  1.8584678 -2.478039 ]]
Iteration 400 of 1000: loss=0.509 " + "l1=0.43" + "l2=0.0791 f=-0.183 shape=(1, 9000, 1)
logits [[ 1.9571303 -2.1512032  1.8078197 -2.346106 ]]
Iteration 500 of 1000: loss=0.491 " + "l1=0.405" + "l2=0.0861 f=-0.181 shape=(1, 9000, 1)
logits [[ 1.8381557 -2.100917   1.7511444 -2.210788 ]]
Iteration 600 of 1000: loss=0.473 " + "l1=0.379" + "l2=0.0933 f=-0.177 shape=(1, 9000, 1)
logits [[ 1.7204049 -2.0664587  1.7079116 -2.0716102]]
Iteration 700 of 1000: loss=0.454 " + "l1=0.368" + "l2=0.0859 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.6818857 -2.0617065  1.6807706 -2.0030634]]
Iteration 800 of 1000: loss=0.438 " + "l1=0.359" + "l2=0.0787 f=-0.177 shape=(1, 9000, 1)
logits [[ 1.6512054 -2.0720465  1.6525784 -1.9404223]]
Iteration 900 of 1000: loss=0.423 " + "l1=0.348" + "l2=0.0752 f=-0.178 shape=(1, 9000, 1)
logits [[ 1.6099522 -2.075554   1.6172264 -1.8619827]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.32 " + "l1=6.32" + "l2=0 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.8825097 -2.48182    2.1018672 -3.4422374]]
Iteration 100 of 1000: loss=2.84 " + "l1=1.48" + "l2=1.36 f=-0.103 shape=(1, 9000, 1)
logits [[ 0.65429294 -1.796941    1.1042262  -0.37545428]]
Iteration 200 of 1000: loss=1.57 " + "l1=0.0281" + "l2=1.54 f=-0.0415 shape=(1, 9000, 1)
logits [[ 0.1458383 -1.5671271  0.6416953  0.6135714]]
Iteration 300 of 1000: loss=1.24 " + "l1=0.0159" + "l2=1.23 f=-0.0467 shape=(1, 9000, 1)
logits [[ 0.14762387 -1.5497383   0.6155486   0.59968483]]
Iteration 400 of 1000: loss=1.08 " + "l1=0.021" + "l2=1.06 f=-0.0568 shape=(1, 9000, 1)
logits [[ 0.12473784 -1.5468881   0.60793656  0.5869041 ]]
Iteration 500 of 1000: loss=0.954 " + "l1=0" + "l2=0.954 f=-0.0654 shape=(1, 9000, 1)
logits [[ 0.08358653 -1.5342804   0.58588886  0.6033417 ]]
Iteration 600 of 1000: loss=0.87 " + "l1=0.0199" + "l2=0.85 f=-0.0756 shape=(1, 9000, 1)
logits [[ 0.07656441 -1.5428454   0.5918279   0.5718998 ]]
Iteration 700 of 1000: loss=0.782 " + "l1=0" + "l2=0.782 f=-0.0851 shape=(1, 9000, 1)
logits [[ 0.0442197 -1.5486442  0.5792598  0.5848477]]
Iteration 800 of 1000: loss=0.72 " + "l1=0" + "l2=0.72 f=-0.0888 shape=(1, 9000, 1)
logits [[ 0.03262056 -1.5494508   0.57335883  0.58821595]]
Iteration 900 of 1000: loss=0.666 " + "l1=0" + "l2=0.666 f=-0.091 shape=(1, 9000, 1)
logits [[ 0.02030692 -1.5573765   0.5761726   0.5970409 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.48 " + "l1=3.48" + "l2=0 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.8825097 -2.48182    2.1018672 -3.4422374]]
Iteration 100 of 1000: loss=2.09 " + "l1=1.59" + "l2=0.497 f=-0.137 shape=(1, 9000, 1)
logits [[ 1.342912  -1.8933978  1.4480526 -1.4441948]]
Iteration 200 of 1000: loss=1.69 " + "l1=1.03" + "l2=0.661 f=-0.109 shape=(1, 9000, 1)
logits [[ 0.86875427 -1.7562051   1.1662365  -0.7142181 ]]
Iteration 300 of 1000: loss=1.25 " + "l1=0.381" + "l2=0.871 f=-0.074 shape=(1, 9000, 1)
logits [[ 0.38029018 -1.6363186   0.82664925  0.13331597]]
Iteration 400 of 1000: loss=0.755 " + "l1=0.00274" + "l2=0.752 f=-0.0595 shape=(1, 9000, 1)
logits [[ 0.11956459 -1.636222    0.64179814  0.63680834]]
Iteration 500 of 1000: loss=0.592 " + "l1=0.00596" + "l2=0.586 f=-0.0594 shape=(1, 9000, 1)
logits [[ 0.12972395 -1.6760625   0.659719    0.6488848 ]]
Iteration 600 of 1000: loss=0.509 " + "l1=0" + "l2=0.509 f=-0.0542 shape=(1, 9000, 1)
logits [[ 0.12557274 -1.6783602   0.66159797  0.6745324 ]]
Iteration 700 of 1000: loss=0.459 " + "l1=0.00433" + "l2=0.454 f=-0.0496 shape=(1, 9000, 1)
logits [[ 0.14282358 -1.6794797   0.6730545   0.6651852 ]]
Iteration 800 of 1000: loss=0.427 " + "l1=0" + "l2=0.427 f=-0.0441 shape=(1, 9000, 1)
logits [[ 0.1544856 -1.6813089  0.6745601  0.6760591]]
Iteration 900 of 1000: loss=0.407 " + "l1=0" + "l2=0.407 f=-0.0391 shape=(1, 9000, 1)
logits [[ 0.16322252 -1.6831048   0.67836016  0.68495816]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.06 " + "l1=2.06" + "l2=0 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.8825097 -2.48182    2.1018672 -3.4422374]]
Iteration 100 of 1000: loss=1.43 " + "l1=1.18" + "l2=0.254 f=-0.159 shape=(1, 9000, 1)
logits [[ 1.6844438 -2.0625465  1.6858699 -1.943633 ]]
Iteration 200 of 1000: loss=1.28 " + "l1=0.998" + "l2=0.283 f=-0.145 shape=(1, 9000, 1)
logits [[ 1.4462184 -1.9124988  1.4786001 -1.5912883]]
Iteration 300 of 1000: loss=1.16 " + "l1=0.843" + "l2=0.322 f=-0.135 shape=(1, 9000, 1)
logits [[ 1.2048237 -1.8456519  1.3472434 -1.2462178]]
Iteration 400 of 1000: loss=1.04 " + "l1=0.676" + "l2=0.367 f=-0.127 shape=(1, 9000, 1)
logits [[ 0.95279187 -1.8256645   1.2232192  -0.85817564]]
Iteration 500 of 1000: loss=0.843 " + "l1=0.404" + "l2=0.44 f=-0.11 shape=(1, 9000, 1)
logits [[ 0.5714792  -1.7920352   1.0103501  -0.23127368]]
Iteration 600 of 1000: loss=0.58 " + "l1=0.122" + "l2=0.457 f=-0.064 shape=(1, 9000, 1)
logits [[ 0.29988208 -1.7132453   0.76708895  0.39045084]]
Iteration 700 of 1000: loss=0.483 " + "l1=0.0638" + "l2=0.42 f=-0.0456 shape=(1, 9000, 1)
logits [[ 0.25327256 -1.6957577   0.7281677   0.5319522 ]]
Iteration 800 of 1000: loss=0.436 " + "l1=0.0201" + "l2=0.415 f=-0.0382 shape=(1, 9000, 1)
logits [[ 0.22046304 -1.69131     0.6899246   0.62800056]]
Iteration 900 of 1000: loss=0.399 " + "l1=0.00384" + "l2=0.395 f=-0.0343 shape=(1, 9000, 1)
logits [[ 0.20505956 -1.6936563   0.6816394   0.6698216 ]]
--- 285.2547085285187 seconds ---
Adv result:3
Loading record A01104
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.106 " + "l1=0.106" + "l2=0 f=-0.825 shape=(1, 9000, 1)
logits [[  7.393685   -3.203106    3.2461784 -10.737887 ]]
Iteration 100 of 1000: loss=0.105 " + "l1=0.105" + "l2=0.000374 f=-0.821 shape=(1, 9000, 1)
logits [[  7.3423233  -3.152488    3.2126245 -10.685805 ]]
Iteration 200 of 1000: loss=0.105 " + "l1=0.105" + "l2=0.000368 f=-0.82 shape=(1, 9000, 1)
logits [[  7.3309803  -3.1411972   3.205155  -10.673638 ]]
Iteration 300 of 1000: loss=0.105 " + "l1=0.104" + "l2=0.000467 f=-0.818 shape=(1, 9000, 1)
logits [[  7.3153276  -3.1259193   3.1951954 -10.6576395]]
Iteration 400 of 1000: loss=0.105 " + "l1=0.104" + "l2=0.00057 f=-0.817 shape=(1, 9000, 1)
logits [[  7.298266   -3.1091278   3.1842747 -10.641107 ]]
Iteration 500 of 1000: loss=0.104 " + "l1=0.104" + "l2=0.000733 f=-0.816 shape=(1, 9000, 1)
logits [[  7.279813   -3.0913677   3.1729977 -10.623993 ]]
Iteration 600 of 1000: loss=0.104 " + "l1=0.103" + "l2=0.000875 f=-0.814 shape=(1, 9000, 1)
logits [[  7.2607193  -3.0733101   3.1615896 -10.606784 ]]
Iteration 700 of 1000: loss=0.104 " + "l1=0.103" + "l2=0.00106 f=-0.813 shape=(1, 9000, 1)
logits [[  7.2417364  -3.055917    3.150759  -10.590332 ]]
Iteration 800 of 1000: loss=0.104 " + "l1=0.103" + "l2=0.00122 f=-0.812 shape=(1, 9000, 1)
logits [[  7.2224646  -3.0386748   3.1401017 -10.573822 ]]
Iteration 900 of 1000: loss=0.104 " + "l1=0.102" + "l2=0.00149 f=-0.812 shape=(1, 9000, 1)
logits [[  7.2027655  -3.0212321   3.12947   -10.557432 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.06 " + "l1=1.06" + "l2=0 f=-0.825 shape=(1, 9000, 1)
logits [[  7.393685   -3.203106    3.2461784 -10.737887 ]]
Iteration 100 of 1000: loss=0.999 " + "l1=0.968" + "l2=0.0302 f=-0.792 shape=(1, 9000, 1)
logits [[  6.9296503  -2.75451     2.9436808 -10.288152 ]]
Iteration 200 of 1000: loss=0.963 " + "l1=0.923" + "l2=0.0393 f=-0.773 shape=(1, 9000, 1)
logits [[  6.7022953  -2.531194    2.7950053 -10.0596485]]
Iteration 300 of 1000: loss=0.927 " + "l1=0.875" + "l2=0.0523 f=-0.759 shape=(1, 9000, 1)
logits [[ 6.4454064 -2.303156   2.6398935 -9.817038 ]]
Iteration 400 of 1000: loss=0.894 " + "l1=0.834" + "l2=0.0604 f=-0.747 shape=(1, 9000, 1)
logits [[ 6.2137547 -2.1221504  2.5216546 -9.600286 ]]
Iteration 500 of 1000: loss=0.863 " + "l1=0.793" + "l2=0.0703 f=-0.735 shape=(1, 9000, 1)
logits [[ 5.970294  -1.9620533  2.4144065 -9.361122 ]]
Iteration 600 of 1000: loss=0.829 " + "l1=0.748" + "l2=0.0808 f=-0.721 shape=(1, 9000, 1)
logits [[ 5.6842813 -1.7928811  2.3027997 -9.077221 ]]
Iteration 700 of 1000: loss=0.793 " + "l1=0.7" + "l2=0.0936 f=-0.701 shape=(1, 9000, 1)
logits [[ 5.3779593 -1.6184894  2.197986  -8.761492 ]]
Iteration 800 of 1000: loss=0.767 " + "l1=0.666" + "l2=0.101 f=-0.685 shape=(1, 9000, 1)
logits [[ 5.157748  -1.500348   2.1241972 -8.523011 ]]
Iteration 900 of 1000: loss=0.745 " + "l1=0.636" + "l2=0.109 f=-0.673 shape=(1, 9000, 1)
logits [[ 4.952977  -1.4090759  2.0592139 -8.295887 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.6 " + "l1=10.6" + "l2=0 f=-0.825 shape=(1, 9000, 1)
logits [[  7.393685   -3.203106    3.2461784 -10.737887 ]]
Iteration 100 of 1000: loss=5.23 " + "l1=2.47" + "l2=2.76 f=-0.611 shape=(1, 9000, 1)
logits [[ 2.22962    -0.24429275  1.0005997  -5.4295583 ]]
Iteration 200 of 1000: loss=3.34 " + "l1=0.0429" + "l2=3.29 f=-0.56 shape=(1, 9000, 1)
logits [[ 0.46282983  0.41995817  0.3673597  -3.4908    ]]
Iteration 300 of 1000: loss=2.65 " + "l1=0.014" + "l2=2.63 f=-0.541 shape=(1, 9000, 1)
logits [[ 0.44341347  0.4294426   0.33585778 -3.3718367 ]]
Iteration 400 of 1000: loss=2.26 " + "l1=0" + "l2=2.26 f=-0.518 shape=(1, 9000, 1)
logits [[ 0.3654341   0.3852827   0.32683033 -3.1515203 ]]
Iteration 500 of 1000: loss=2.02 " + "l1=0.031" + "l2=1.99 f=-0.513 shape=(1, 9000, 1)
logits [[ 0.36677662  0.33580023  0.33844078 -3.0928419 ]]
Iteration 600 of 1000: loss=1.83 " + "l1=0.0393" + "l2=1.79 f=-0.515 shape=(1, 9000, 1)
logits [[ 0.3645168   0.32524505  0.34306777 -3.0916743 ]]
Iteration 700 of 1000: loss=1.65 " + "l1=0.0142" + "l2=1.63 f=-0.514 shape=(1, 9000, 1)
logits [[ 0.34494227  0.3307091   0.32888174 -3.0593774 ]]
Iteration 800 of 1000: loss=1.53 " + "l1=0" + "l2=1.53 f=-0.508 shape=(1, 9000, 1)
logits [[ 0.31514218  0.33201158  0.3171929  -2.9966908 ]]
Iteration 900 of 1000: loss=1.44 " + "l1=0" + "l2=1.44 f=-0.504 shape=(1, 9000, 1)
logits [[ 0.3102964  0.3256777  0.3161225 -2.9668176]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.83 " + "l1=5.83" + "l2=0 f=-0.825 shape=(1, 9000, 1)
logits [[  7.393685   -3.203106    3.2461784 -10.737887 ]]
Iteration 100 of 1000: loss=4.01 " + "l1=3.02" + "l2=0.989 f=-0.676 shape=(1, 9000, 1)
logits [[ 4.4147806 -1.0807109  1.7820567 -7.8213954]]
Iteration 200 of 1000: loss=3.2 " + "l1=1.89" + "l2=1.32 f=-0.583 shape=(1, 9000, 1)
logits [[ 2.9382288  -0.49677032  1.276198   -6.0480676 ]]
Iteration 300 of 1000: loss=2.67 " + "l1=1.29" + "l2=1.38 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.1194696 -0.2220821  0.9349811 -5.116079 ]]
Iteration 400 of 1000: loss=2.23 " + "l1=0.809" + "l2=1.42 f=-0.568 shape=(1, 9000, 1)
logits [[ 1.4391556  -0.03194047  0.6570943  -4.3347263 ]]
Iteration 500 of 1000: loss=1.77 " + "l1=0.277" + "l2=1.49 f=-0.542 shape=(1, 9000, 1)
logits [[ 0.6917155   0.18862319  0.35157123 -3.4008915 ]]
Iteration 600 of 1000: loss=1.42 " + "l1=0.0184" + "l2=1.41 f=-0.514 shape=(1, 9000, 1)
logits [[ 0.3141311   0.28074905  0.22104356 -2.873099  ]]
Iteration 700 of 1000: loss=1.28 " + "l1=0.0239" + "l2=1.26 f=-0.506 shape=(1, 9000, 1)
logits [[ 0.29083094  0.24746345  0.24566777 -2.8097615 ]]
Iteration 800 of 1000: loss=1.19 " + "l1=0.00959" + "l2=1.18 f=-0.496 shape=(1, 9000, 1)
logits [[ 0.24971375  0.2322705   0.23882197 -2.705861  ]]
Iteration 900 of 1000: loss=1.14 " + "l1=0" + "l2=1.14 f=-0.487 shape=(1, 9000, 1)
logits [[ 0.21126981  0.22691108  0.21746136 -2.6037133 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.44 " + "l1=3.44" + "l2=0 f=-0.825 shape=(1, 9000, 1)
logits [[  7.393685   -3.203106    3.2461784 -10.737887 ]]
Iteration 100 of 1000: loss=2.79 " + "l1=2.45" + "l2=0.34 f=-0.726 shape=(1, 9000, 1)
logits [[ 5.7446227 -1.7930354  2.2985551 -9.152665 ]]
Iteration 200 of 1000: loss=2.47 " + "l1=1.98" + "l2=0.48 f=-0.681 shape=(1, 9000, 1)
logits [[ 4.80365   -1.3035538  1.9340843 -8.157399 ]]
Iteration 300 of 1000: loss=2.16 " + "l1=1.61" + "l2=0.544 f=-0.626 shape=(1, 9000, 1)
logits [[ 4.0185833 -0.9501431  1.6999601 -7.2707534]]
Iteration 400 of 1000: loss=1.91 " + "l1=1.32" + "l2=0.589 f=-0.593 shape=(1, 9000, 1)
logits [[ 3.3396416 -0.7315053  1.4712385 -6.451002 ]]
Iteration 500 of 1000: loss=1.67 " + "l1=1.01" + "l2=0.664 f=-0.57 shape=(1, 9000, 1)
logits [[ 2.6159055 -0.4781466  1.1779402 -5.5972896]]
Iteration 600 of 1000: loss=1.48 " + "l1=0.803" + "l2=0.678 f=-0.559 shape=(1, 9000, 1)
logits [[ 2.1585984  -0.3112028   0.98188037 -5.0636134 ]]
Iteration 700 of 1000: loss=1.35 " + "l1=0.653" + "l2=0.699 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.8106463  -0.19748612  0.83712703 -4.6243224 ]]
Iteration 800 of 1000: loss=1.26 " + "l1=0.525" + "l2=0.735 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.5075027  -0.10856017  0.71826094 -4.239227  ]]
Iteration 900 of 1000: loss=1.19 " + "l1=0.426" + "l2=0.762 f=-0.514 shape=(1, 9000, 1)
logits [[ 1.2655314  -0.04437387  0.6407595  -3.9167833 ]]
--- 295.41055035591125 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0415 " + "l1=0.0415" + "l2=0 f=-0.825 shape=(1, 9000, 1)
logits [[  7.393685   -3.203106    3.2461784 -10.737887 ]]
Iteration 100 of 1000: loss=0.0413 " + "l1=0.0411" + "l2=0.00017 f=-0.827 shape=(1, 9000, 1)
logits [[  7.365367   -3.2099645   3.254811  -10.716357 ]]
Iteration 200 of 1000: loss=0.0412 " + "l1=0.0411" + "l2=0.000143 f=-0.827 shape=(1, 9000, 1)
logits [[  7.362961   -3.2097366   3.2548423 -10.714451 ]]
Iteration 300 of 1000: loss=0.0412 " + "l1=0.041" + "l2=0.000171 f=-0.827 shape=(1, 9000, 1)
logits [[  7.3580947  -3.2099373   3.2557647 -10.711404 ]]
Iteration 400 of 1000: loss=0.0412 " + "l1=0.041" + "l2=0.000203 f=-0.827 shape=(1, 9000, 1)
logits [[  7.3527436  -3.210171    3.256893  -10.708265 ]]
Iteration 500 of 1000: loss=0.0411 " + "l1=0.0409" + "l2=0.000255 f=-0.828 shape=(1, 9000, 1)
logits [[  7.347034   -3.210147    3.2579703 -10.705123 ]]
Iteration 600 of 1000: loss=0.0412 " + "l1=0.0408" + "l2=0.00034 f=-0.828 shape=(1, 9000, 1)
logits [[  7.3410373  -3.2099051   3.2590034 -10.701877 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.415 " + "l1=0.415" + "l2=0 f=-0.825 shape=(1, 9000, 1)
logits [[  7.393685   -3.203106    3.2461784 -10.737887 ]]
Iteration 100 of 1000: loss=0.398 " + "l1=0.388" + "l2=0.00912 f=-0.835 shape=(1, 9000, 1)
logits [[  7.196092   -3.2615047   3.311221  -10.5841055]]
Iteration 200 of 1000: loss=0.389 " + "l1=0.377" + "l2=0.0126 f=-0.837 shape=(1, 9000, 1)
logits [[  7.1018414  -3.2816095   3.3340907 -10.503362 ]]
Iteration 300 of 1000: loss=0.381 " + "l1=0.365" + "l2=0.0161 f=-0.84 shape=(1, 9000, 1)
logits [[  7.003315   -3.296225    3.3535655 -10.422204 ]]
Iteration 400 of 1000: loss=0.372 " + "l1=0.352" + "l2=0.0198 f=-0.845 shape=(1, 9000, 1)
logits [[  6.898045   -3.3130095   3.3761892 -10.341005 ]]
Iteration 500 of 1000: loss=0.362 " + "l1=0.338" + "l2=0.0235 f=-0.849 shape=(1, 9000, 1)
logits [[  6.7823343  -3.329792    3.4006126 -10.248398 ]]
Iteration 600 of 1000: loss=0.349 " + "l1=0.32" + "l2=0.0288 f=-0.852 shape=(1, 9000, 1)
logits [[  6.6300163  -3.359281    3.4299607 -10.108612 ]]
Iteration 700 of 1000: loss=0.334 " + "l1=0.301" + "l2=0.0336 f=-0.852 shape=(1, 9000, 1)
logits [[ 6.457936  -3.3686194  3.45175   -9.950723 ]]
Iteration 800 of 1000: loss=0.32 " + "l1=0.284" + "l2=0.0365 f=-0.854 shape=(1, 9000, 1)
logits [[ 6.301994  -3.3691096  3.4646387 -9.8143   ]]
Iteration 900 of 1000: loss=0.306 " + "l1=0.265" + "l2=0.0409 f=-0.854 shape=(1, 9000, 1)
logits [[ 6.135637  -3.375717   3.4811654 -9.65719  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.15 " + "l1=4.15" + "l2=0 f=-0.825 shape=(1, 9000, 1)
logits [[  7.393685   -3.203106    3.2461784 -10.737887 ]]
Iteration 100 of 1000: loss=2.18 " + "l1=1.26" + "l2=0.921 f=-0.864 shape=(1, 9000, 1)
logits [[ 4.905184  -3.5361392  3.6426673 -8.467031 ]]
Iteration 200 of 1000: loss=1.27 " + "l1=0" + "l2=1.27 f=-0.937 shape=(1, 9000, 1)
logits [[ 3.6813748 -3.8796856  3.6899693 -7.2411017]]
Iteration 300 of 1000: loss=0.892 " + "l1=0.0113" + "l2=0.881 f=-0.905 shape=(1, 9000, 1)
logits [[ 3.6743286 -3.9040391  3.6630685 -7.052109 ]]
Iteration 400 of 1000: loss=0.716 " + "l1=0.00426" + "l2=0.711 f=-0.892 shape=(1, 9000, 1)
logits [[ 3.6632278 -3.9398797  3.658963  -6.9502444]]
Iteration 500 of 1000: loss=0.608 " + "l1=0" + "l2=0.608 f=-0.9 shape=(1, 9000, 1)
logits [[ 3.6588836 -3.9843192  3.6602476 -6.9355736]]
Iteration 600 of 1000: loss=0.539 " + "l1=0" + "l2=0.539 f=-0.9 shape=(1, 9000, 1)
logits [[ 3.6426694 -3.994659   3.651436  -6.898406 ]]
Iteration 700 of 1000: loss=0.486 " + "l1=0" + "l2=0.486 f=-0.893 shape=(1, 9000, 1)
logits [[ 3.6583772 -4.0198894  3.6658099 -6.876213 ]]
Iteration 800 of 1000: loss=0.449 " + "l1=0.0052" + "l2=0.443 f=-0.888 shape=(1, 9000, 1)
logits [[ 3.673589  -4.0370626  3.6683874 -6.858566 ]]
Iteration 900 of 1000: loss=0.419 " + "l1=0" + "l2=0.419 f=-0.878 shape=(1, 9000, 1)
logits [[ 3.6490312 -4.0389686  3.6614501 -6.7835283]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.28 " + "l1=2.28" + "l2=0 f=-0.825 shape=(1, 9000, 1)
logits [[  7.393685   -3.203106    3.2461784 -10.737887 ]]
Iteration 100 of 1000: loss=1.64 " + "l1=1.33" + "l2=0.316 f=-0.862 shape=(1, 9000, 1)
logits [[ 6.00363   -3.520927   3.5908208 -9.52068  ]]
Iteration 200 of 1000: loss=1.29 " + "l1=0.893" + "l2=0.401 f=-0.867 shape=(1, 9000, 1)
logits [[ 5.3491225 -3.6439774  3.7262166 -8.898898 ]]
Iteration 300 of 1000: loss=1.01 " + "l1=0.54" + "l2=0.469 f=-0.867 shape=(1, 9000, 1)
logits [[ 4.7010193 -3.6487534  3.71994   -8.241824 ]]
Iteration 400 of 1000: loss=0.699 " + "l1=0.192" + "l2=0.507 f=-0.879 shape=(1, 9000, 1)
logits [[ 4.0690374 -3.7194846  3.7192261 -7.5839605]]
Iteration 500 of 1000: loss=0.428 " + "l1=0" + "l2=0.428 f=-0.891 shape=(1, 9000, 1)
logits [[ 3.6535656 -3.792031   3.655658  -7.0821137]]
Iteration 600 of 1000: loss=0.338 " + "l1=0.00192" + "l2=0.336 f=-0.896 shape=(1, 9000, 1)
logits [[ 3.6603444 -3.8510222  3.6568522 -7.048299 ]]
Iteration 700 of 1000: loss=0.294 " + "l1=0.000416" + "l2=0.294 f=-0.893 shape=(1, 9000, 1)
logits [[ 3.6580033 -3.8722641  3.657246  -7.0140605]]
Iteration 800 of 1000: loss=0.268 " + "l1=0" + "l2=0.268 f=-0.886 shape=(1, 9000, 1)
logits [[ 3.656312  -3.8739276  3.6592283 -6.9865885]]
Iteration 900 of 1000: loss=0.246 " + "l1=0.00143" + "l2=0.245 f=-0.881 shape=(1, 9000, 1)
logits [[ 3.6539109 -3.869605   3.651316  -6.9583893]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.35 " + "l1=1.35" + "l2=0 f=-0.825 shape=(1, 9000, 1)
logits [[  7.393685   -3.203106    3.2461784 -10.737887 ]]
Iteration 100 of 1000: loss=1.15 " + "l1=1.04" + "l2=0.109 f=-0.86 shape=(1, 9000, 1)
logits [[  6.664878   -3.4336257   3.4703507 -10.142426 ]]
Iteration 200 of 1000: loss=0.988 " + "l1=0.818" + "l2=0.169 f=-0.859 shape=(1, 9000, 1)
logits [[ 6.1364713 -3.5653973  3.6186912 -9.626984 ]]
Iteration 300 of 1000: loss=0.861 " + "l1=0.665" + "l2=0.196 f=-0.869 shape=(1, 9000, 1)
logits [[ 5.7205315 -3.6186197  3.6744108 -9.251423 ]]
Iteration 400 of 1000: loss=0.732 " + "l1=0.529" + "l2=0.203 f=-0.878 shape=(1, 9000, 1)
logits [[ 5.3345847 -3.652008   3.7058349 -8.901463 ]]
Iteration 500 of 1000: loss=0.61 " + "l1=0.402" + "l2=0.208 f=-0.882 shape=(1, 9000, 1)
logits [[ 4.94608   -3.671567   3.7102091 -8.512813 ]]
Iteration 600 of 1000: loss=0.512 " + "l1=0.288" + "l2=0.224 f=-0.882 shape=(1, 9000, 1)
logits [[ 4.606257  -3.6930945  3.7207158 -8.16377  ]]
Iteration 700 of 1000: loss=0.418 " + "l1=0.167" + "l2=0.251 f=-0.892 shape=(1, 9000, 1)
logits [[ 4.2289777 -3.757972   3.7146997 -7.7541275]]
Iteration 800 of 1000: loss=0.33 " + "l1=0.0502" + "l2=0.28 f=-0.89 shape=(1, 9000, 1)
logits [[ 3.8441179 -3.8135574  3.6895418 -7.2817755]]
Iteration 900 of 1000: loss=0.265 " + "l1=0" + "l2=0.265 f=-0.883 shape=(1, 9000, 1)
logits [[ 3.6388345 -3.8105266  3.6418338 -7.0036592]]
--- 276.88405561447144 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.181 " + "l1=0.181" + "l2=0 f=-0.825 shape=(1, 9000, 1)
logits [[  7.393685   -3.203106    3.2461784 -10.737887 ]]
Iteration 100 of 1000: loss=0.18 " + "l1=0.18" + "l2=0.000553 f=-0.819 shape=(1, 9000, 1)
logits [[  7.32624    -3.1735694   3.2164118 -10.646159 ]]
Iteration 200 of 1000: loss=0.18 " + "l1=0.179" + "l2=0.000636 f=-0.818 shape=(1, 9000, 1)
logits [[  7.3079357  -3.1646576   3.2077208 -10.623011 ]]
Iteration 300 of 1000: loss=0.18 " + "l1=0.179" + "l2=0.000791 f=-0.816 shape=(1, 9000, 1)
logits [[  7.2861576  -3.153389    3.197555  -10.595502 ]]
Iteration 400 of 1000: loss=0.179 " + "l1=0.178" + "l2=0.000979 f=-0.815 shape=(1, 9000, 1)
logits [[  7.2640634  -3.1412103   3.1872945 -10.568572 ]]
Iteration 500 of 1000: loss=0.179 " + "l1=0.178" + "l2=0.00124 f=-0.813 shape=(1, 9000, 1)
logits [[  7.241596   -3.1281538   3.1764069 -10.542468 ]]
Iteration 600 of 1000: loss=0.179 " + "l1=0.177" + "l2=0.00141 f=-0.812 shape=(1, 9000, 1)
logits [[  7.218044   -3.1141844   3.1651967 -10.515964 ]]
Iteration 700 of 1000: loss=0.178 " + "l1=0.177" + "l2=0.0016 f=-0.81 shape=(1, 9000, 1)
logits [[  7.1945677  -3.1000996   3.1543152 -10.49013  ]]
Iteration 800 of 1000: loss=0.178 " + "l1=0.176" + "l2=0.00186 f=-0.809 shape=(1, 9000, 1)
logits [[  7.171339   -3.0864346   3.1440794 -10.464989 ]]
Iteration 900 of 1000: loss=0.178 " + "l1=0.176" + "l2=0.00206 f=-0.808 shape=(1, 9000, 1)
logits [[  7.148083   -3.0736508   3.134696  -10.439863 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.81 " + "l1=1.81" + "l2=0 f=-0.825 shape=(1, 9000, 1)
logits [[  7.393685   -3.203106    3.2461784 -10.737887 ]]
Iteration 100 of 1000: loss=1.71 " + "l1=1.67" + "l2=0.0486 f=-0.778 shape=(1, 9000, 1)
logits [[ 6.7559643 -2.9402728  2.9810038 -9.907245 ]]
Iteration 200 of 1000: loss=1.66 " + "l1=1.59" + "l2=0.068 f=-0.752 shape=(1, 9000, 1)
logits [[ 6.422799  -2.798105   2.8466415 -9.480189 ]]
Iteration 300 of 1000: loss=1.6 " + "l1=1.5" + "l2=0.0992 f=-0.725 shape=(1, 9000, 1)
logits [[ 6.00183   -2.638132   2.7010057 -8.966644 ]]
Iteration 400 of 1000: loss=1.53 " + "l1=1.41" + "l2=0.121 f=-0.704 shape=(1, 9000, 1)
logits [[ 5.6179204 -2.4692392  2.5496323 -8.514762 ]]
Iteration 500 of 1000: loss=1.47 " + "l1=1.33" + "l2=0.145 f=-0.685 shape=(1, 9000, 1)
logits [[ 5.2242017 -2.3038805  2.4032633 -8.064199 ]]
Iteration 600 of 1000: loss=1.4 " + "l1=1.21" + "l2=0.182 f=-0.652 shape=(1, 9000, 1)
logits [[ 4.70413   -2.1069186  2.2339368 -7.4376464]]
Iteration 700 of 1000: loss=1.33 " + "l1=1.12" + "l2=0.212 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.2888484 -1.9942471  2.1277456 -6.898422 ]]
Iteration 800 of 1000: loss=1.27 " + "l1=1.03" + "l2=0.241 f=-0.593 shape=(1, 9000, 1)
logits [[ 3.9143925 -1.9325186  2.0445383 -6.3997574]]
Iteration 900 of 1000: loss=1.22 " + "l1=0.958" + "l2=0.259 f=-0.572 shape=(1, 9000, 1)
logits [[ 3.6042604 -1.9147995  2.0003636 -5.976482 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=18.1 " + "l1=18.1" + "l2=0 f=-0.825 shape=(1, 9000, 1)
logits [[  7.393685   -3.203106    3.2461784 -10.737887 ]]
Iteration 100 of 1000: loss=7.23 " + "l1=1.58" + "l2=5.65 f=-0.369 shape=(1, 9000, 1)
logits [[ 0.19054729 -0.5450679   0.22627534 -1.3489603 ]]
Iteration 200 of 1000: loss=4.43 " + "l1=0" + "l2=4.43 f=-0.246 shape=(1, 9000, 1)
logits [[-0.23822787 -0.32209536 -0.21288969 -0.21141535]]
Iteration 300 of 1000: loss=3.75 " + "l1=0.0676" + "l2=3.69 f=-0.24 shape=(1, 9000, 1)
logits [[-0.17050043 -0.38224363 -0.17056374 -0.23810187]]
Iteration 400 of 1000: loss=3.41 " + "l1=0" + "l2=3.41 f=-0.236 shape=(1, 9000, 1)
logits [[-0.20294738 -0.39722836 -0.18910263 -0.155943  ]]
Iteration 500 of 1000: loss=3.14 " + "l1=0.0214" + "l2=3.12 f=-0.234 shape=(1, 9000, 1)
logits [[-0.1648312  -0.4182712  -0.16664903 -0.18624234]]
Iteration 600 of 1000: loss=2.92 " + "l1=0.0176" + "l2=2.91 f=-0.235 shape=(1, 9000, 1)
logits [[-0.16838738 -0.43198118 -0.1605037  -0.17812464]]
Iteration 700 of 1000: loss=2.74 " + "l1=0" + "l2=2.74 f=-0.235 shape=(1, 9000, 1)
logits [[-0.19642746 -0.42713407 -0.175281   -0.13984454]]
Iteration 800 of 1000: loss=2.59 " + "l1=0.0416" + "l2=2.55 f=-0.243 shape=(1, 9000, 1)
logits [[-0.17005336 -0.4352273  -0.16236134 -0.20397785]]
Iteration 900 of 1000: loss=2.46 " + "l1=0" + "l2=2.46 f=-0.247 shape=(1, 9000, 1)
logits [[-0.22549722 -0.41592103 -0.20544939 -0.14013249]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=9.97 " + "l1=9.97" + "l2=0 f=-0.825 shape=(1, 9000, 1)
logits [[  7.393685   -3.203106    3.2461784 -10.737887 ]]
Iteration 100 of 1000: loss=6.34 " + "l1=4.23" + "l2=2.11 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.7926157 -1.5372924  1.4652953 -4.9056077]]
Iteration 200 of 1000: loss=4.21 " + "l1=1.25" + "l2=2.96 f=-0.336 shape=(1, 9000, 1)
logits [[ 0.639681   -0.89321476  0.55151236 -1.6400031 ]]
Iteration 300 of 1000: loss=3.46 " + "l1=0.613" + "l2=2.85 f=-0.27 shape=(1, 9000, 1)
logits [[ 0.26081976 -0.7478118   0.26006094 -0.8531541 ]]
Iteration 400 of 1000: loss=3.02 " + "l1=0.15" + "l2=2.87 f=-0.226 shape=(1, 9000, 1)
logits [[-0.00187002 -0.6347592   0.00190273 -0.2705596 ]]
Iteration 500 of 1000: loss=2.58 " + "l1=0.0139" + "l2=2.56 f=-0.217 shape=(1, 9000, 1)
logits [[-0.08626885 -0.5757631  -0.09518276 -0.11154031]]
Iteration 600 of 1000: loss=2.28 " + "l1=0.00689" + "l2=2.27 f=-0.212 shape=(1, 9000, 1)
logits [[-0.09979466 -0.56269884 -0.08696034 -0.09948479]]
Iteration 700 of 1000: loss=2.12 " + "l1=0" + "l2=2.12 f=-0.208 shape=(1, 9000, 1)
logits [[-0.09456991 -0.57429034 -0.08792083 -0.07594597]]
Iteration 800 of 1000: loss=2 " + "l1=0.0103" + "l2=1.99 f=-0.199 shape=(1, 9000, 1)
logits [[-0.05836861 -0.60844165 -0.05558709 -0.0742266 ]]
Iteration 900 of 1000: loss=1.91 " + "l1=0.0155" + "l2=1.89 f=-0.19 shape=(1, 9000, 1)
logits [[-0.03183906 -0.6459315  -0.02639179 -0.05454122]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.89 " + "l1=5.89" + "l2=0 f=-0.825 shape=(1, 9000, 1)
logits [[  7.393685   -3.203106    3.2461784 -10.737887 ]]
Iteration 100 of 1000: loss=4.68 " + "l1=3.97" + "l2=0.708 f=-0.65 shape=(1, 9000, 1)
logits [[ 4.7721543 -2.1852689  2.255108  -7.4415145]]
Iteration 200 of 1000: loss=3.79 " + "l1=2.65" + "l2=1.14 f=-0.521 shape=(1, 9000, 1)
logits [[ 3.05612   -1.7244693  1.6660883 -5.083004 ]]
Iteration 300 of 1000: loss=3.14 " + "l1=1.71" + "l2=1.43 f=-0.401 shape=(1, 9000, 1)
logits [[ 1.9268993 -1.4548078  1.26229   -3.3399699]]
Iteration 400 of 1000: loss=2.68 " + "l1=1.18" + "l2=1.5 f=-0.339 shape=(1, 9000, 1)
logits [[ 1.3159635 -1.3819299  1.0255023 -2.3171074]]
Iteration 500 of 1000: loss=2.31 " + "l1=0.781" + "l2=1.53 f=-0.297 shape=(1, 9000, 1)
logits [[ 0.837694   -1.2969062   0.83528566 -1.5656846 ]]
Iteration 600 of 1000: loss=2.06 " + "l1=0.584" + "l2=1.47 f=-0.269 shape=(1, 9000, 1)
logits [[ 0.63670915 -1.1893822   0.6381996  -1.1597325 ]]
Iteration 700 of 1000: loss=1.81 " + "l1=0.359" + "l2=1.45 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.40968928 -1.079282    0.41437608 -0.68976957]]
Iteration 800 of 1000: loss=1.56 " + "l1=0.201" + "l2=1.36 f=-0.203 shape=(1, 9000, 1)
logits [[ 0.26797214 -1.0167394   0.27729666 -0.34194088]]
Iteration 900 of 1000: loss=1.35 " + "l1=0.0698" + "l2=1.28 f=-0.18 shape=(1, 9000, 1)
logits [[ 0.15026382 -0.9934786   0.16952537 -0.04529275]]
--- 298.34817719459534 seconds ---
Adv result:3
Loading record A01153
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0631 " + "l1=0.0631" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.6362786 -1.6745222  2.6165123 -7.931187 ]]
Iteration 100 of 1000: loss=0.0627 " + "l1=0.0624" + "l2=0.000271 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.595311  -1.6488565  2.598824  -7.898093 ]]
Iteration 200 of 1000: loss=0.0626 " + "l1=0.0623" + "l2=0.000276 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.589259  -1.6441786  2.595161  -7.8934145]]
Iteration 300 of 1000: loss=0.0625 " + "l1=0.0622" + "l2=0.000333 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.5807886 -1.6384406  2.5909052 -7.8865886]]
Iteration 400 of 1000: loss=0.0625 " + "l1=0.0621" + "l2=0.00043 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.57221   -1.6329064  2.586828  -7.8796096]]
Iteration 500 of 1000: loss=0.0624 " + "l1=0.0619" + "l2=0.00053 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.564114  -1.627577   2.5829847 -7.8732347]]
Iteration 600 of 1000: loss=0.0624 " + "l1=0.0618" + "l2=0.000591 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.556307  -1.6226443  2.5794945 -7.8673043]]
Iteration 700 of 1000: loss=0.0623 " + "l1=0.0617" + "l2=0.000674 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.548993  -1.6181971  2.5763867 -7.8617735]]
Iteration 800 of 1000: loss=0.0624 " + "l1=0.0616" + "l2=0.000809 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.5418687 -1.6139932  2.5734935 -7.856326 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.631 " + "l1=0.631" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.6362786 -1.6745222  2.6165123 -7.931187 ]]
Iteration 100 of 1000: loss=0.595 " + "l1=0.577" + "l2=0.0185 f=-0.59 shape=(1, 9000, 1)
logits [[ 4.3156815 -1.4531089  2.4621391 -7.6828246]]
Iteration 200 of 1000: loss=0.578 " + "l1=0.551" + "l2=0.0269 f=-0.592 shape=(1, 9000, 1)
logits [[ 4.1509233 -1.3553368  2.39193   -7.556101 ]]
Iteration 300 of 1000: loss=0.56 " + "l1=0.524" + "l2=0.0361 f=-0.593 shape=(1, 9000, 1)
logits [[ 3.9816885 -1.2552977  2.3279512 -7.427955 ]]
Iteration 400 of 1000: loss=0.542 " + "l1=0.497" + "l2=0.0449 f=-0.595 shape=(1, 9000, 1)
logits [[ 3.8140044 -1.1595868  2.2702131 -7.3042197]]
Iteration 500 of 1000: loss=0.524 " + "l1=0.47" + "l2=0.0538 f=-0.6 shape=(1, 9000, 1)
logits [[ 3.635717  -1.0691323  2.2132986 -7.179668 ]]
Iteration 600 of 1000: loss=0.507 " + "l1=0.445" + "l2=0.0616 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.4628417 -0.9896775  2.1671662 -7.054836 ]]
Iteration 700 of 1000: loss=0.49 " + "l1=0.42" + "l2=0.0703 f=-0.608 shape=(1, 9000, 1)
logits [[ 3.2918386  -0.90602297  2.1268423  -6.9430003 ]]
Iteration 800 of 1000: loss=0.475 " + "l1=0.398" + "l2=0.0773 f=-0.613 shape=(1, 9000, 1)
logits [[ 3.1399906 -0.8401514  2.0879252 -6.841677 ]]
Iteration 900 of 1000: loss=0.463 " + "l1=0.382" + "l2=0.0815 f=-0.614 shape=(1, 9000, 1)
logits [[ 3.0226438 -0.7969029  2.0619853 -6.744438 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.31 " + "l1=6.31" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.6362786 -1.6745222  2.6165123 -7.931187 ]]
Iteration 100 of 1000: loss=2.91 " + "l1=1.62" + "l2=1.29 f=-0.612 shape=(1, 9000, 1)
logits [[ 1.682994    0.06117536  1.6805197  -5.872304  ]]
Iteration 200 of 1000: loss=2.2 " + "l1=1.11" + "l2=1.09 f=-0.625 shape=(1, 9000, 1)
logits [[ 1.4793102   0.38450035  1.498042   -5.8618145 ]]
Iteration 300 of 1000: loss=1.9 " + "l1=0.855" + "l2=1.05 f=-0.614 shape=(1, 9000, 1)
logits [[ 1.3472046  0.5349399  1.389529  -5.7293367]]
Iteration 400 of 1000: loss=1.67 " + "l1=0.661" + "l2=1.01 f=-0.599 shape=(1, 9000, 1)
logits [[ 1.2804084  0.6473028  1.3085694 -5.6342793]]
Iteration 500 of 1000: loss=1.48 " + "l1=0.483" + "l2=1 f=-0.602 shape=(1, 9000, 1)
logits [[ 1.1069512   0.75433916  1.2377719  -5.5054836 ]]
Iteration 600 of 1000: loss=1.31 " + "l1=0.268" + "l2=1.05 f=-0.608 shape=(1, 9000, 1)
logits [[ 0.8428811   0.87253267  1.1402398  -5.2864504 ]]
Iteration 700 of 1000: loss=1.17 " + "l1=0.106" + "l2=1.07 f=-0.614 shape=(1, 9000, 1)
logits [[ 0.6536664   0.95031697  1.0564626  -5.1147227 ]]
Iteration 800 of 1000: loss=1.1 " + "l1=0.0254" + "l2=1.07 f=-0.609 shape=(1, 9000, 1)
logits [[ 0.54482573  0.97287804  0.9982404  -4.9507213 ]]
Iteration 900 of 1000: loss=1.04 " + "l1=0.0301" + "l2=1.01 f=-0.601 shape=(1, 9000, 1)
logits [[ 0.52789515  0.9526783   0.9828054  -4.86719   ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.47 " + "l1=3.47" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.6362786 -1.6745222  2.6165123 -7.931187 ]]
Iteration 100 of 1000: loss=2.24 " + "l1=1.59" + "l2=0.649 f=-0.603 shape=(1, 9000, 1)
logits [[ 2.4499965  -0.44259876  1.8713449  -6.292267  ]]
Iteration 200 of 1000: loss=1.62 " + "l1=0.951" + "l2=0.667 f=-0.622 shape=(1, 9000, 1)
logits [[ 1.7099214  -0.01892995  1.70122    -5.8783565 ]]
Iteration 300 of 1000: loss=1.43 " + "l1=0.827" + "l2=0.598 f=-0.611 shape=(1, 9000, 1)
logits [[ 1.6024746   0.11644331  1.6208943  -5.7839684 ]]
Iteration 400 of 1000: loss=1.29 " + "l1=0.73" + "l2=0.563 f=-0.6 shape=(1, 9000, 1)
logits [[ 1.540201    0.22797857  1.5544877  -5.7234597 ]]
Iteration 500 of 1000: loss=1.19 " + "l1=0.656" + "l2=0.534 f=-0.587 shape=(1, 9000, 1)
logits [[ 1.4953648  0.3079841  1.5000494 -5.650225 ]]
Iteration 600 of 1000: loss=1.11 " + "l1=0.601" + "l2=0.514 f=-0.577 shape=(1, 9000, 1)
logits [[ 1.4489043   0.36953115  1.4613924  -5.587073  ]]
Iteration 700 of 1000: loss=1.05 " + "l1=0.535" + "l2=0.51 f=-0.573 shape=(1, 9000, 1)
logits [[ 1.3926069  0.4300778  1.4029641 -5.518583 ]]
Iteration 800 of 1000: loss=0.98 " + "l1=0.469" + "l2=0.511 f=-0.572 shape=(1, 9000, 1)
logits [[ 1.3001101   0.49344802  1.346792   -5.426987  ]]
Iteration 900 of 1000: loss=0.922 " + "l1=0.433" + "l2=0.489 f=-0.573 shape=(1, 9000, 1)
logits [[ 1.285099   0.5083091  1.2959182 -5.3814974]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.89 " + "l1=4.89" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.6362786 -1.6745222  2.6165123 -7.931187 ]]
Iteration 100 of 1000: loss=2.58 " + "l1=1.45" + "l2=1.13 f=-0.61 shape=(1, 9000, 1)
logits [[ 1.7652477  -0.10857774  1.7618344  -5.8596325 ]]
Iteration 200 of 1000: loss=1.94 " + "l1=1.1" + "l2=0.842 f=-0.619 shape=(1, 9000, 1)
logits [[ 1.597221    0.18606882  1.6052204  -5.864594  ]]
Iteration 300 of 1000: loss=1.68 " + "l1=0.916" + "l2=0.767 f=-0.605 shape=(1, 9000, 1)
logits [[ 1.5035951   0.32839614  1.5106144  -5.762548  ]]
Iteration 400 of 1000: loss=1.5 " + "l1=0.771" + "l2=0.729 f=-0.589 shape=(1, 9000, 1)
logits [[ 1.4323094   0.43746415  1.4282109  -5.6534286 ]]
Iteration 500 of 1000: loss=1.37 " + "l1=0.646" + "l2=0.724 f=-0.579 shape=(1, 9000, 1)
logits [[ 1.3560016   0.52947235  1.3628843  -5.5651364 ]]
Iteration 600 of 1000: loss=1.26 " + "l1=0.532" + "l2=0.728 f=-0.575 shape=(1, 9000, 1)
logits [[ 1.2127532   0.61416054  1.3004769  -5.429054  ]]
Iteration 700 of 1000: loss=1.15 " + "l1=0.444" + "l2=0.71 f=-0.577 shape=(1, 9000, 1)
logits [[ 1.078793   0.6645158  1.2375443 -5.288879 ]]
Iteration 800 of 1000: loss=1.06 " + "l1=0.355" + "l2=0.702 f=-0.58 shape=(1, 9000, 1)
logits [[ 0.9611161   0.70683676  1.165522   -5.1526    ]]
Iteration 900 of 1000: loss=0.991 " + "l1=0.286" + "l2=0.705 f=-0.588 shape=(1, 9000, 1)
logits [[ 0.81304693  0.7404262   1.1092541  -5.0153522 ]]
--- 287.1606538295746 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0202 " + "l1=0.0202" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.6362786 -1.6745222  2.6165123 -7.931187 ]]
Iteration 100 of 1000: loss=0.0201 " + "l1=0.0199" + "l2=0.000162 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.608154  -1.6764954  2.6182535 -7.9061112]]
Iteration 200 of 1000: loss=0.02 " + "l1=0.0199" + "l2=0.00012 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.6076207 -1.6760253  2.617911  -7.9056144]]
Iteration 300 of 1000: loss=0.02 " + "l1=0.0199" + "l2=0.000132 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.604143  -1.6758734  2.6178224 -7.9023504]]
Iteration 400 of 1000: loss=0.02 " + "l1=0.0198" + "l2=0.000186 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.600018  -1.6757848  2.6177177 -7.8983636]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.202 " + "l1=0.202" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.6362786 -1.6745222  2.6165123 -7.931187 ]]
Iteration 100 of 1000: loss=0.19 " + "l1=0.184" + "l2=0.00636 f=-0.594 shape=(1, 9000, 1)
logits [[ 4.4629655 -1.6844535  2.6269846 -7.7800517]]
Iteration 200 of 1000: loss=0.186 " + "l1=0.177" + "l2=0.00904 f=-0.594 shape=(1, 9000, 1)
logits [[ 4.393576  -1.6844244  2.6268847 -7.7136936]]
Iteration 300 of 1000: loss=0.182 " + "l1=0.171" + "l2=0.0112 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.3303905 -1.6810467  2.6234348 -7.6510277]]
Iteration 400 of 1000: loss=0.178 " + "l1=0.165" + "l2=0.0131 f=-0.594 shape=(1, 9000, 1)
logits [[ 4.265481  -1.6747267  2.618883  -7.5856476]]
Iteration 500 of 1000: loss=0.173 " + "l1=0.158" + "l2=0.0148 f=-0.593 shape=(1, 9000, 1)
logits [[ 4.195382  -1.6661028  2.615122  -7.5174174]]
Iteration 600 of 1000: loss=0.168 " + "l1=0.151" + "l2=0.0166 f=-0.592 shape=(1, 9000, 1)
logits [[ 4.121366  -1.6553174  2.6109445 -7.445545 ]]
Iteration 700 of 1000: loss=0.162 " + "l1=0.144" + "l2=0.0177 f=-0.592 shape=(1, 9000, 1)
logits [[ 4.0485387 -1.6476742  2.6055486 -7.3731284]]
Iteration 800 of 1000: loss=0.157 " + "l1=0.138" + "l2=0.0183 f=-0.591 shape=(1, 9000, 1)
logits [[ 3.9832306 -1.6419508  2.5998857 -7.306962 ]]
Iteration 900 of 1000: loss=0.152 " + "l1=0.133" + "l2=0.0181 f=-0.591 shape=(1, 9000, 1)
logits [[ 3.9307563 -1.6367257  2.5959952 -7.252974 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.02 " + "l1=2.02" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.6362786 -1.6745222  2.6165123 -7.931187 ]]
Iteration 100 of 1000: loss=0.703 " + "l1=0" + "l2=0.703 f=-0.602 shape=(1, 9000, 1)
logits [[ 2.6993294 -1.6449943  2.708717  -6.169055 ]]
Iteration 200 of 1000: loss=0.443 " + "l1=0" + "l2=0.443 f=-0.603 shape=(1, 9000, 1)
logits [[ 2.6991465 -1.6379105  2.7116199 -6.185314 ]]
Iteration 300 of 1000: loss=0.352 " + "l1=0" + "l2=0.352 f=-0.597 shape=(1, 9000, 1)
logits [[ 2.6867437 -1.5985694  2.6876047 -6.165004 ]]
Iteration 400 of 1000: loss=0.299 " + "l1=0" + "l2=0.299 f=-0.592 shape=(1, 9000, 1)
logits [[ 2.6630647 -1.5737542  2.6686826 -6.125701 ]]
Iteration 500 of 1000: loss=0.258 " + "l1=0.00128" + "l2=0.256 f=-0.586 shape=(1, 9000, 1)
logits [[ 2.6535923 -1.5584594  2.652309  -6.09019  ]]
Iteration 600 of 1000: loss=0.228 " + "l1=0" + "l2=0.228 f=-0.58 shape=(1, 9000, 1)
logits [[ 2.6319098 -1.5512133  2.6400633 -6.041159 ]]
Iteration 700 of 1000: loss=0.207 " + "l1=0.00867" + "l2=0.198 f=-0.574 shape=(1, 9000, 1)
logits [[ 2.6429338 -1.5525957  2.6342678 -6.020447 ]]
Iteration 800 of 1000: loss=0.181 " + "l1=0" + "l2=0.181 f=-0.57 shape=(1, 9000, 1)
logits [[ 2.615622  -1.548341   2.6278718 -5.973323 ]]
Iteration 900 of 1000: loss=0.159 " + "l1=0" + "l2=0.159 f=-0.568 shape=(1, 9000, 1)
logits [[ 2.6231127 -1.5490284  2.6272702 -5.9719896]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.11 " + "l1=1.11" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.6362786 -1.6745222  2.6165123 -7.931187 ]]
Iteration 100 of 1000: loss=0.713 " + "l1=0.484" + "l2=0.229 f=-0.608 shape=(1, 9000, 1)
logits [[ 3.545148  -1.6737703  2.6652017 -6.9682245]]
Iteration 200 of 1000: loss=0.515 " + "l1=0.179" + "l2=0.336 f=-0.615 shape=(1, 9000, 1)
logits [[ 2.9754543 -1.6233073  2.6503909 -6.460716 ]]
Iteration 300 of 1000: loss=0.349 " + "l1=0.005" + "l2=0.344 f=-0.601 shape=(1, 9000, 1)
logits [[ 2.6817708 -1.5966014  2.6726809 -6.1600227]]
Iteration 400 of 1000: loss=0.278 " + "l1=0" + "l2=0.278 f=-0.589 shape=(1, 9000, 1)
logits [[ 2.6482055 -1.5713954  2.6585054 -6.0906405]]
Iteration 500 of 1000: loss=0.225 " + "l1=0.00291" + "l2=0.222 f=-0.581 shape=(1, 9000, 1)
logits [[ 2.6524894 -1.5627468  2.6471968 -6.059136 ]]
Iteration 600 of 1000: loss=0.185 " + "l1=0" + "l2=0.185 f=-0.575 shape=(1, 9000, 1)
logits [[ 2.621847  -1.5529796  2.6267567 -5.994398 ]]
Iteration 700 of 1000: loss=0.156 " + "l1=0" + "l2=0.156 f=-0.573 shape=(1, 9000, 1)
logits [[ 2.6211572 -1.5567855  2.6238105 -5.9809084]]
Iteration 800 of 1000: loss=0.139 " + "l1=0" + "l2=0.139 f=-0.574 shape=(1, 9000, 1)
logits [[ 2.6126251 -1.5536987  2.6170971 -5.9715357]]
Iteration 900 of 1000: loss=0.127 " + "l1=0" + "l2=0.127 f=-0.575 shape=(1, 9000, 1)
logits [[ 2.6019075 -1.5494635  2.605782  -5.956516 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.656 " + "l1=0.656" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.6362786 -1.6745222  2.6165123 -7.931187 ]]
Iteration 100 of 1000: loss=0.524 " + "l1=0.449" + "l2=0.075 f=-0.603 shape=(1, 9000, 1)
logits [[ 4.029365  -1.6921153  2.6475136 -7.39764  ]]
Iteration 200 of 1000: loss=0.459 " + "l1=0.347" + "l2=0.112 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.7200394 -1.6857656  2.6523156 -7.1013374]]
Iteration 300 of 1000: loss=0.399 " + "l1=0.255" + "l2=0.144 f=-0.602 shape=(1, 9000, 1)
logits [[ 3.435523  -1.6544292  2.6508002 -6.839935 ]]
Iteration 400 of 1000: loss=0.345 " + "l1=0.189" + "l2=0.156 f=-0.598 shape=(1, 9000, 1)
logits [[ 3.209478  -1.6009465  2.6285245 -6.6298866]]
Iteration 500 of 1000: loss=0.287 " + "l1=0.105" + "l2=0.182 f=-0.592 shape=(1, 9000, 1)
logits [[ 2.953794  -1.5657954  2.630831  -6.38809  ]]
Iteration 600 of 1000: loss=0.225 " + "l1=0.031" + "l2=0.194 f=-0.588 shape=(1, 9000, 1)
logits [[ 2.7090201 -1.5409374  2.6136744 -6.1333137]]
Iteration 700 of 1000: loss=0.168 " + "l1=0" + "l2=0.168 f=-0.591 shape=(1, 9000, 1)
logits [[ 2.5944564 -1.5274132  2.594717  -6.024761 ]]
Iteration 800 of 1000: loss=0.14 " + "l1=0" + "l2=0.14 f=-0.6 shape=(1, 9000, 1)
logits [[ 2.5627992 -1.4744297  2.563238  -6.051575 ]]
Iteration 900 of 1000: loss=0.124 " + "l1=0" + "l2=0.124 f=-0.606 shape=(1, 9000, 1)
logits [[ 2.5243764 -1.4236606  2.5311294 -6.0578394]]
--- 265.6796340942383 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.126 " + "l1=0.126" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.6362786 -1.6745222  2.6165123 -7.931187 ]]
Iteration 100 of 1000: loss=0.125 " + "l1=0.124" + "l2=0.000474 f=-0.587 shape=(1, 9000, 1)
logits [[ 4.579551  -1.6630335  2.6013527 -7.865146 ]]
Iteration 200 of 1000: loss=0.125 " + "l1=0.124" + "l2=0.000507 f=-0.587 shape=(1, 9000, 1)
logits [[ 4.5677953 -1.6605607  2.5975683 -7.851259 ]]
Iteration 300 of 1000: loss=0.125 " + "l1=0.124" + "l2=0.00061 f=-0.586 shape=(1, 9000, 1)
logits [[ 4.55453   -1.657534   2.5932004 -7.8356433]]
Iteration 400 of 1000: loss=0.124 " + "l1=0.124" + "l2=0.000749 f=-0.586 shape=(1, 9000, 1)
logits [[ 4.541509  -1.6545879  2.5889425 -7.820367 ]]
Iteration 500 of 1000: loss=0.124 " + "l1=0.123" + "l2=0.000889 f=-0.586 shape=(1, 9000, 1)
logits [[ 4.5292964 -1.6521395  2.5851634 -7.8058634]]
Iteration 600 of 1000: loss=0.124 " + "l1=0.123" + "l2=0.0011 f=-0.586 shape=(1, 9000, 1)
logits [[ 4.5177045 -1.6499337  2.581724  -7.7922964]]
Iteration 700 of 1000: loss=0.124 " + "l1=0.123" + "l2=0.00116 f=-0.586 shape=(1, 9000, 1)
logits [[ 4.506777  -1.647958   2.578624  -7.7796693]]
Iteration 800 of 1000: loss=0.124 " + "l1=0.123" + "l2=0.00135 f=-0.585 shape=(1, 9000, 1)
logits [[ 4.495811  -1.6460432  2.5756578 -7.7673   ]]
Iteration 900 of 1000: loss=0.124 " + "l1=0.122" + "l2=0.00156 f=-0.585 shape=(1, 9000, 1)
logits [[ 4.4851646 -1.6442462  2.5728877 -7.755368 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.26 " + "l1=1.26" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.6362786 -1.6745222  2.6165123 -7.931187 ]]
Iteration 100 of 1000: loss=1.19 " + "l1=1.15" + "l2=0.0346 f=-0.575 shape=(1, 9000, 1)
logits [[ 4.162116  -1.5748649  2.4809706 -7.3683677]]
Iteration 200 of 1000: loss=1.15 " + "l1=1.09" + "l2=0.0547 f=-0.565 shape=(1, 9000, 1)
logits [[ 3.8997579 -1.5155312  2.399164  -7.04355  ]]
Iteration 300 of 1000: loss=1.11 " + "l1=1.04" + "l2=0.0719 f=-0.556 shape=(1, 9000, 1)
logits [[ 3.673852  -1.4687083  2.326261  -6.7537932]]
Iteration 400 of 1000: loss=1.08 " + "l1=0.994" + "l2=0.0888 f=-0.547 shape=(1, 9000, 1)
logits [[ 3.4624128 -1.41828    2.2502234 -6.4814253]]
Iteration 500 of 1000: loss=1.05 " + "l1=0.95" + "l2=0.101 f=-0.537 shape=(1, 9000, 1)
logits [[ 3.2677329 -1.3688005  2.1826837 -6.23103  ]]
Iteration 600 of 1000: loss=1.02 " + "l1=0.904" + "l2=0.113 f=-0.529 shape=(1, 9000, 1)
logits [[ 3.0666897 -1.3470613  2.137956  -5.9724493]]
Iteration 700 of 1000: loss=0.983 " + "l1=0.86" + "l2=0.123 f=-0.527 shape=(1, 9000, 1)
logits [[ 2.8665037 -1.3274016  2.0848727 -5.730926 ]]
Iteration 800 of 1000: loss=0.947 " + "l1=0.815" + "l2=0.132 f=-0.528 shape=(1, 9000, 1)
logits [[ 2.66326   -1.2973754  2.0081367 -5.485481 ]]
Iteration 900 of 1000: loss=0.913 " + "l1=0.773" + "l2=0.14 f=-0.529 shape=(1, 9000, 1)
logits [[ 2.4761963 -1.2722245  1.9340042 -5.2556787]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.6 " + "l1=12.6" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.6362786 -1.6745222  2.6165123 -7.931187 ]]
Iteration 100 of 1000: loss=6.98 " + "l1=4.85" + "l2=2.13 f=-0.351 shape=(1, 9000, 1)
logits [[ 1.243842  -0.8779088  1.5393842 -3.308901 ]]
Iteration 200 of 1000: loss=5 " + "l1=1.9" + "l2=3.1 f=-0.293 shape=(1, 9000, 1)
logits [[-0.20048195 -0.82076514  0.877717   -1.0271635 ]]
Iteration 300 of 1000: loss=3.7 " + "l1=0.509" + "l2=3.19 f=-0.311 shape=(1, 9000, 1)
logits [[-0.9502568  -0.76652765  0.48996398 -0.01866434]]
Iteration 400 of 1000: loss=2.93 " + "l1=0.0435" + "l2=2.88 f=-0.32 shape=(1, 9000, 1)
logits [[-1.1491537 -0.7774339  0.3445172  0.3010259]]
Iteration 500 of 1000: loss=2.47 " + "l1=0.00163" + "l2=2.47 f=-0.323 shape=(1, 9000, 1)
logits [[-1.1113411  -0.8409633   0.33081162  0.32917762]]
Iteration 600 of 1000: loss=2.1 " + "l1=0" + "l2=2.1 f=-0.331 shape=(1, 9000, 1)
logits [[-1.0369314  -0.91529775  0.3116088   0.3184582 ]]
Iteration 700 of 1000: loss=1.8 " + "l1=0.00201" + "l2=1.8 f=-0.333 shape=(1, 9000, 1)
logits [[-0.95196605 -0.95607525  0.28886437  0.2868592 ]]
Iteration 800 of 1000: loss=1.6 " + "l1=0.0288" + "l2=1.57 f=-0.334 shape=(1, 9000, 1)
logits [[-0.88300335 -0.9907307   0.28372896  0.25490797]]
Iteration 900 of 1000: loss=1.41 " + "l1=0" + "l2=1.41 f=-0.336 shape=(1, 9000, 1)
logits [[-0.8857532  -0.9908858   0.25424665  0.27788833]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.91 " + "l1=6.91" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.6362786 -1.6745222  2.6165123 -7.931187 ]]
Iteration 100 of 1000: loss=4.63 " + "l1=3.47" + "l2=1.16 f=-0.432 shape=(1, 9000, 1)
logits [[ 1.8527919 -1.0024079  1.8623962 -4.4424577]]
Iteration 200 of 1000: loss=3.96 " + "l1=2.9" + "l2=1.07 f=-0.389 shape=(1, 9000, 1)
logits [[ 1.5324966 -0.9463102  1.5628078 -3.7068825]]
Iteration 300 of 1000: loss=3.44 " + "l1=2.15" + "l2=1.3 f=-0.373 shape=(1, 9000, 1)
logits [[ 0.8510264  -0.90484476  1.2346252  -2.673273  ]]
Iteration 400 of 1000: loss=2.81 " + "l1=1.25" + "l2=1.56 f=-0.371 shape=(1, 9000, 1)
logits [[ 0.03183113 -0.8848205   0.818433   -1.451194  ]]
Iteration 500 of 1000: loss=2.34 " + "l1=0.837" + "l2=1.5 f=-0.362 shape=(1, 9000, 1)
logits [[-0.3355634  -0.90790683  0.6595819  -0.86213493]]
Iteration 600 of 1000: loss=1.91 " + "l1=0.459" + "l2=1.45 f=-0.35 shape=(1, 9000, 1)
logits [[-0.6065105  -0.9436334   0.49331436 -0.34133333]]
Iteration 700 of 1000: loss=1.5 " + "l1=0.0902" + "l2=1.41 f=-0.313 shape=(1, 9000, 1)
logits [[-0.7482682  -0.9578305   0.30849895  0.14449334]]
Iteration 800 of 1000: loss=1.21 " + "l1=0" + "l2=1.21 f=-0.301 shape=(1, 9000, 1)
logits [[-0.7261925  -0.97203857  0.24539001  0.24794558]]
Iteration 900 of 1000: loss=1.07 " + "l1=0" + "l2=1.07 f=-0.301 shape=(1, 9000, 1)
logits [[-0.69536865 -0.9804389   0.23474108  0.23901772]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.08 " + "l1=4.08" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.6362786 -1.6745222  2.6165123 -7.931187 ]]
Iteration 100 of 1000: loss=3.27 " + "l1=2.78" + "l2=0.482 f=-0.511 shape=(1, 9000, 1)
logits [[ 2.8116267 -1.1875576  2.090216  -5.7571564]]
Iteration 200 of 1000: loss=2.79 " + "l1=2.06" + "l2=0.734 f=-0.461 shape=(1, 9000, 1)
logits [[ 1.8279201 -0.9900653  1.8286968 -4.5090404]]
Iteration 300 of 1000: loss=2.5 " + "l1=1.86" + "l2=0.64 f=-0.444 shape=(1, 9000, 1)
logits [[ 1.6301708 -0.9410491  1.6355208 -4.101438 ]]
Iteration 400 of 1000: loss=2.29 " + "l1=1.69" + "l2=0.6 f=-0.441 shape=(1, 9000, 1)
logits [[ 1.4417763 -0.9324864  1.4675084 -3.7396386]]
Iteration 500 of 1000: loss=2.05 " + "l1=1.4" + "l2=0.648 f=-0.426 shape=(1, 9000, 1)
logits [[ 1.0330682 -0.961528   1.2709461 -3.0458663]]
Iteration 600 of 1000: loss=1.77 " + "l1=1.01" + "l2=0.766 f=-0.4 shape=(1, 9000, 1)
logits [[ 0.53083324 -0.9971848   0.9801413  -2.1155143 ]]
Iteration 700 of 1000: loss=1.56 " + "l1=0.788" + "l2=0.776 f=-0.394 shape=(1, 9000, 1)
logits [[ 0.2942622  -1.0296564   0.79226047 -1.633846  ]]
Iteration 800 of 1000: loss=1.38 " + "l1=0.632" + "l2=0.752 f=-0.391 shape=(1, 9000, 1)
logits [[ 0.11674218 -1.0942762   0.6776514  -1.2660097 ]]
Iteration 900 of 1000: loss=1.22 " + "l1=0.473" + "l2=0.744 f=-0.377 shape=(1, 9000, 1)
logits [[-0.08774078 -1.1111879   0.5724889  -0.8813983 ]]
--- 299.44633388519287 seconds ---
Adv result:3
Loading record A01192
(1, 6258)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0361 " + "l1=0.0361" + "l2=0 f=-0.245 shape=(1, 9000, 1)
logits [[ 1.6565888 -1.9511751  0.9662189 -1.6535124]]
Iteration 100 of 1000: loss=0.0358 " + "l1=0.0356" + "l2=0.000205 f=-0.246 shape=(1, 9000, 1)
logits [[ 1.6269348  -1.9334657   0.95715165 -1.6337147 ]]
Iteration 200 of 1000: loss=0.0357 " + "l1=0.0355" + "l2=0.000206 f=-0.246 shape=(1, 9000, 1)
logits [[ 1.6229708 -1.9303765  0.9555449 -1.6315773]]
Iteration 300 of 1000: loss=0.0357 " + "l1=0.0355" + "l2=0.000254 f=-0.246 shape=(1, 9000, 1)
logits [[ 1.618202  -1.9269001  0.9537015 -1.6286526]]
Iteration 400 of 1000: loss=0.0357 " + "l1=0.0354" + "l2=0.000299 f=-0.246 shape=(1, 9000, 1)
logits [[ 1.6136261 -1.9236999  0.9519239 -1.6255684]]
Iteration 500 of 1000: loss=0.0357 " + "l1=0.0353" + "l2=0.00037 f=-0.246 shape=(1, 9000, 1)
logits [[ 1.6095372  -1.9209297   0.95028996 -1.6224213 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.361 " + "l1=0.361" + "l2=0 f=-0.245 shape=(1, 9000, 1)
logits [[ 1.6565888 -1.9511751  0.9662189 -1.6535124]]
Iteration 100 of 1000: loss=0.337 " + "l1=0.324" + "l2=0.0124 f=-0.247 shape=(1, 9000, 1)
logits [[ 1.4317747  -1.8126848   0.90121484 -1.5070711 ]]
Iteration 200 of 1000: loss=0.328 " + "l1=0.31" + "l2=0.0185 f=-0.247 shape=(1, 9000, 1)
logits [[ 1.3436074 -1.7514864  0.8683354 -1.4473015]]
Iteration 300 of 1000: loss=0.321 " + "l1=0.296" + "l2=0.0247 f=-0.247 shape=(1, 9000, 1)
logits [[ 1.2646613  -1.6936078   0.83725333 -1.3944349 ]]
Iteration 400 of 1000: loss=0.315 " + "l1=0.287" + "l2=0.0281 f=-0.246 shape=(1, 9000, 1)
logits [[ 1.2133571 -1.6572863  0.8167941 -1.3554362]]
Iteration 500 of 1000: loss=0.31 " + "l1=0.279" + "l2=0.0315 f=-0.244 shape=(1, 9000, 1)
logits [[ 1.1651824  -1.6223553   0.80230784 -1.319537  ]]
Iteration 600 of 1000: loss=0.306 " + "l1=0.272" + "l2=0.0339 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.123421  -1.5933242  0.7908443 -1.2874691]]
Iteration 700 of 1000: loss=0.3 " + "l1=0.265" + "l2=0.0359 f=-0.239 shape=(1, 9000, 1)
logits [[ 1.0830071  -1.562696    0.78407156 -1.2588153 ]]
Iteration 800 of 1000: loss=0.295 " + "l1=0.257" + "l2=0.0385 f=-0.237 shape=(1, 9000, 1)
logits [[ 1.0342996 -1.5318134  0.7724587 -1.2216142]]
Iteration 900 of 1000: loss=0.289 " + "l1=0.248" + "l2=0.0409 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.9844905 -1.498051   0.7577588 -1.1876339]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.61 " + "l1=3.61" + "l2=0 f=-0.245 shape=(1, 9000, 1)
logits [[ 1.6565888 -1.9511751  0.9662189 -1.6535124]]
Iteration 100 of 1000: loss=1.71 " + "l1=1.05" + "l2=0.667 f=-0.297 shape=(1, 9000, 1)
logits [[ 0.21078691 -0.83532894  0.21204124 -0.7760238 ]]
Iteration 200 of 1000: loss=1.21 " + "l1=0.421" + "l2=0.785 f=-0.294 shape=(1, 9000, 1)
logits [[-0.09715733 -0.49819958 -0.07764037 -0.50371444]]
Iteration 300 of 1000: loss=0.79 " + "l1=0.00675" + "l2=0.783 f=-0.293 shape=(1, 9000, 1)
logits [[-0.29528734 -0.28298074 -0.27623078 -0.3155615 ]]
Iteration 400 of 1000: loss=0.647 " + "l1=0" + "l2=0.647 f=-0.285 shape=(1, 9000, 1)
logits [[-0.29399902 -0.26459953 -0.277581   -0.30209872]]
Iteration 500 of 1000: loss=0.568 " + "l1=0.00201" + "l2=0.566 f=-0.279 shape=(1, 9000, 1)
logits [[-0.30033228 -0.27065408 -0.27520123 -0.26864097]]
Iteration 600 of 1000: loss=0.518 " + "l1=0.00315" + "l2=0.514 f=-0.269 shape=(1, 9000, 1)
logits [[-0.28089038 -0.26184934 -0.258697   -0.27579463]]
Iteration 700 of 1000: loss=0.484 " + "l1=0" + "l2=0.484 f=-0.265 shape=(1, 9000, 1)
logits [[-0.2857072  -0.24953876 -0.25617722 -0.27047247]]
Iteration 800 of 1000: loss=0.453 " + "l1=0" + "l2=0.453 f=-0.258 shape=(1, 9000, 1)
logits [[-0.25707924 -0.2505816  -0.2534794  -0.27169198]]
Iteration 900 of 1000: loss=0.435 " + "l1=0.00225" + "l2=0.433 f=-0.254 shape=(1, 9000, 1)
logits [[-0.27778545 -0.24291812 -0.2531386  -0.24067137]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.98 " + "l1=1.98" + "l2=0 f=-0.245 shape=(1, 9000, 1)
logits [[ 1.6565888 -1.9511751  0.9662189 -1.6535124]]
Iteration 100 of 1000: loss=1.27 " + "l1=0.99" + "l2=0.285 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.5465098 -1.246964   0.5532153 -0.9760561]]
Iteration 200 of 1000: loss=1.05 " + "l1=0.702" + "l2=0.346 f=-0.292 shape=(1, 9000, 1)
logits [[ 0.31881395 -0.9567279   0.3145517  -0.8462581 ]]
Iteration 300 of 1000: loss=0.875 " + "l1=0.488" + "l2=0.387 f=-0.285 shape=(1, 9000, 1)
logits [[ 0.132262   -0.7458811   0.14127073 -0.6680262 ]]
Iteration 400 of 1000: loss=0.749 " + "l1=0.344" + "l2=0.405 f=-0.285 shape=(1, 9000, 1)
logits [[-0.02092188 -0.6276697  -0.00232119 -0.48904327]]
Iteration 500 of 1000: loss=0.615 " + "l1=0.148" + "l2=0.466 f=-0.275 shape=(1, 9000, 1)
logits [[-0.20921895 -0.4702363  -0.20090085 -0.22155225]]
Iteration 600 of 1000: loss=0.525 " + "l1=0.0662" + "l2=0.458 f=-0.267 shape=(1, 9000, 1)
logits [[-0.24200855 -0.35162717 -0.24187544 -0.23132622]]
Iteration 700 of 1000: loss=0.476 " + "l1=0.0315" + "l2=0.444 f=-0.258 shape=(1, 9000, 1)
logits [[-0.24001354 -0.28937414 -0.2320584  -0.2715209 ]]
Iteration 800 of 1000: loss=0.429 " + "l1=0.00339" + "l2=0.426 f=-0.251 shape=(1, 9000, 1)
logits [[-0.2471688  -0.25333858 -0.2493147  -0.25272477]]
Iteration 900 of 1000: loss=0.402 " + "l1=0.00294" + "l2=0.399 f=-0.244 shape=(1, 9000, 1)
logits [[-0.25592765 -0.24294539 -0.23759744 -0.23916548]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.17 " + "l1=1.17" + "l2=0 f=-0.245 shape=(1, 9000, 1)
logits [[ 1.6565888 -1.9511751  0.9662189 -1.6535124]]
Iteration 100 of 1000: loss=0.915 " + "l1=0.777" + "l2=0.138 f=-0.255 shape=(1, 9000, 1)
logits [[ 0.8957037 -1.4953382  0.7273858 -1.1474983]]
Iteration 200 of 1000: loss=0.794 " + "l1=0.602" + "l2=0.192 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.5808004  -1.2662375   0.58553666 -1.0254893 ]]
Iteration 300 of 1000: loss=0.725 " + "l1=0.519" + "l2=0.206 f=-0.284 shape=(1, 9000, 1)
logits [[ 0.46796286 -1.1234953   0.47297093 -0.9538367 ]]
Iteration 400 of 1000: loss=0.655 " + "l1=0.438" + "l2=0.217 f=-0.289 shape=(1, 9000, 1)
logits [[ 0.3484608  -0.99745303  0.34937152 -0.8583431 ]]
Iteration 500 of 1000: loss=0.601 " + "l1=0.375" + "l2=0.226 f=-0.279 shape=(1, 9000, 1)
logits [[ 0.25603452 -0.89752764  0.25511843 -0.7298636 ]]
Iteration 600 of 1000: loss=0.547 " + "l1=0.315" + "l2=0.232 f=-0.278 shape=(1, 9000, 1)
logits [[ 0.14503255 -0.81602657  0.15172702 -0.59112644]]
Iteration 700 of 1000: loss=0.501 " + "l1=0.266" + "l2=0.236 f=-0.275 shape=(1, 9000, 1)
logits [[ 0.05540907 -0.7586912   0.05839516 -0.45534855]]
Iteration 800 of 1000: loss=0.453 " + "l1=0.204" + "l2=0.249 f=-0.267 shape=(1, 9000, 1)
logits [[-0.05913854 -0.6850353  -0.05814061 -0.26579309]]
Iteration 900 of 1000: loss=0.407 " + "l1=0.154" + "l2=0.253 f=-0.261 shape=(1, 9000, 1)
logits [[-0.13625735 -0.6092503  -0.14386304 -0.15452561]]
--- 271.25996565818787 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0069 " + "l1=0.0069" + "l2=0 f=-0.245 shape=(1, 9000, 1)
logits [[ 1.6565888 -1.9511751  0.9662189 -1.6535124]]
Iteration 100 of 1000: loss=0.00679 " + "l1=0.00667" + "l2=0.00012 f=-0.247 shape=(1, 9000, 1)
logits [[ 1.6351609  -1.9496113   0.96785766 -1.641766  ]]
Iteration 200 of 1000: loss=0.00676 " + "l1=0.00666" + "l2=9.45e-05 f=-0.247 shape=(1, 9000, 1)
logits [[ 1.6342226  -1.9494708   0.96816134 -1.6419744 ]]
Iteration 300 of 1000: loss=0.00675 " + "l1=0.00663" + "l2=0.000116 f=-0.248 shape=(1, 9000, 1)
logits [[ 1.6316965  -1.9492657   0.96851736 -1.6411489 ]]
Iteration 400 of 1000: loss=0.00675 " + "l1=0.0066" + "l2=0.000147 f=-0.248 shape=(1, 9000, 1)
logits [[ 1.6290536 -1.9492289  0.9689223 -1.6401136]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.069 " + "l1=0.069" + "l2=0 f=-0.245 shape=(1, 9000, 1)
logits [[ 1.6565888 -1.9511751  0.9662189 -1.6535124]]
Iteration 100 of 1000: loss=0.0597 " + "l1=0.055" + "l2=0.00471 f=-0.254 shape=(1, 9000, 1)
logits [[ 1.5240463  -1.9350846   0.97424746 -1.580444  ]]
Iteration 200 of 1000: loss=0.0563 " + "l1=0.0494" + "l2=0.00691 f=-0.259 shape=(1, 9000, 1)
logits [[ 1.4756341 -1.9282801  0.9820656 -1.5636418]]
Iteration 300 of 1000: loss=0.0535 " + "l1=0.0449" + "l2=0.00861 f=-0.262 shape=(1, 9000, 1)
logits [[ 1.4365854 -1.9255964  0.9879579 -1.5481359]]
Iteration 400 of 1000: loss=0.0506 " + "l1=0.0403" + "l2=0.0103 f=-0.266 shape=(1, 9000, 1)
logits [[ 1.3983132 -1.924394   0.9954155 -1.5327641]]
Iteration 500 of 1000: loss=0.0477 " + "l1=0.036" + "l2=0.0117 f=-0.269 shape=(1, 9000, 1)
logits [[ 1.3624696 -1.9237612  1.0027229 -1.5174861]]
Iteration 600 of 1000: loss=0.0444 " + "l1=0.0315" + "l2=0.0129 f=-0.272 shape=(1, 9000, 1)
logits [[ 1.3266191 -1.9244703  1.0120364 -1.5016507]]
Iteration 700 of 1000: loss=0.0408 " + "l1=0.0266" + "l2=0.0142 f=-0.274 shape=(1, 9000, 1)
logits [[ 1.289683  -1.9245728  1.0232538 -1.4855762]]
Iteration 800 of 1000: loss=0.0369 " + "l1=0.0212" + "l2=0.0157 f=-0.277 shape=(1, 9000, 1)
logits [[ 1.2465937 -1.9244353  1.0345272 -1.4648675]]
Iteration 900 of 1000: loss=0.0333 " + "l1=0.0169" + "l2=0.0164 f=-0.279 shape=(1, 9000, 1)
logits [[ 1.2110362 -1.9290628  1.0415776 -1.4390442]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.69 " + "l1=0.69" + "l2=0 f=-0.245 shape=(1, 9000, 1)
logits [[ 1.6565888 -1.9511751  0.9662189 -1.6535124]]
Iteration 100 of 1000: loss=0.105 " + "l1=0" + "l2=0.105 f=-0.29 shape=(1, 9000, 1)
logits [[ 1.0061897 -1.8518488  1.0084912 -1.3219359]]
Iteration 200 of 1000: loss=0.0727 " + "l1=0" + "l2=0.0727 f=-0.294 shape=(1, 9000, 1)
logits [[ 1.0170498 -1.866196   1.0251346 -1.3524753]]
Iteration 300 of 1000: loss=0.0591 " + "l1=0" + "l2=0.0591 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.0247346 -1.8737285  1.0376728 -1.3680898]]
Iteration 400 of 1000: loss=0.0463 " + "l1=0" + "l2=0.0463 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.0391835 -1.8829223  1.0450735 -1.3810086]]
Iteration 500 of 1000: loss=0.0385 " + "l1=0" + "l2=0.0385 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.04706   -1.8936971  1.0501453 -1.3816624]]
Iteration 600 of 1000: loss=0.0331 " + "l1=0" + "l2=0.0331 f=-0.294 shape=(1, 9000, 1)
logits [[ 1.0463898 -1.8975236  1.055332  -1.3814249]]
Iteration 700 of 1000: loss=0.0282 " + "l1=0.000756" + "l2=0.0275 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.0569037 -1.9046956  1.0561476 -1.3808117]]
Iteration 800 of 1000: loss=0.0245 " + "l1=0" + "l2=0.0245 f=-0.292 shape=(1, 9000, 1)
logits [[ 1.0528035 -1.909761   1.0565497 -1.3694682]]
Iteration 900 of 1000: loss=0.023 " + "l1=0" + "l2=0.023 f=-0.292 shape=(1, 9000, 1)
logits [[ 1.0415962 -1.9143854  1.0564125 -1.3527659]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.38 " + "l1=0.38" + "l2=0 f=-0.245 shape=(1, 9000, 1)
logits [[ 1.6565888 -1.9511751  0.9662189 -1.6535124]]
Iteration 100 of 1000: loss=0.11 " + "l1=0.00321" + "l2=0.107 f=-0.289 shape=(1, 9000, 1)
logits [[ 1.0140679 -1.8475609  1.0082356 -1.3294688]]
Iteration 200 of 1000: loss=0.0711 " + "l1=0" + "l2=0.0711 f=-0.294 shape=(1, 9000, 1)
logits [[ 1.0186998 -1.865689   1.0236917 -1.3507092]]
Iteration 300 of 1000: loss=0.055 " + "l1=0" + "l2=0.055 f=-0.294 shape=(1, 9000, 1)
logits [[ 1.0322002 -1.8730478  1.037722  -1.3720257]]
Iteration 400 of 1000: loss=0.0436 " + "l1=0" + "l2=0.0436 f=-0.294 shape=(1, 9000, 1)
logits [[ 1.0437258 -1.887806   1.0459979 -1.3770399]]
Iteration 500 of 1000: loss=0.0366 " + "l1=0" + "l2=0.0366 f=-0.294 shape=(1, 9000, 1)
logits [[ 1.0446002 -1.8979951  1.0494529 -1.3715891]]
Iteration 600 of 1000: loss=0.0303 " + "l1=0" + "l2=0.0303 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.0495428 -1.907706   1.0521349 -1.3648676]]
Iteration 700 of 1000: loss=0.0258 " + "l1=0" + "l2=0.0258 f=-0.291 shape=(1, 9000, 1)
logits [[ 1.0525932 -1.9167814  1.0539007 -1.3535838]]
Iteration 800 of 1000: loss=0.0238 " + "l1=0" + "l2=0.0238 f=-0.29 shape=(1, 9000, 1)
logits [[ 1.0431736 -1.9219788  1.0560976 -1.3366125]]
Iteration 900 of 1000: loss=0.021 " + "l1=0.00137" + "l2=0.0196 f=-0.288 shape=(1, 9000, 1)
logits [[ 1.0588679 -1.9323025  1.056373  -1.335709 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.224 " + "l1=0.224" + "l2=0 f=-0.245 shape=(1, 9000, 1)
logits [[ 1.6565888 -1.9511751  0.9662189 -1.6535124]]
Iteration 100 of 1000: loss=0.128 " + "l1=0.0793" + "l2=0.0485 f=-0.273 shape=(1, 9000, 1)
logits [[ 1.2365315  -1.8856379   0.99263394 -1.4342904 ]]
Iteration 200 of 1000: loss=0.0807 " + "l1=0.00642" + "l2=0.0743 f=-0.289 shape=(1, 9000, 1)
logits [[ 1.0364671 -1.856935   1.0167165 -1.3517736]]
Iteration 300 of 1000: loss=0.0567 " + "l1=0.000698" + "l2=0.056 f=-0.292 shape=(1, 9000, 1)
logits [[ 1.0372138 -1.8677688  1.0350648 -1.3718175]]
Iteration 400 of 1000: loss=0.0439 " + "l1=0" + "l2=0.0439 f=-0.292 shape=(1, 9000, 1)
logits [[ 1.044887  -1.8853468  1.0465293 -1.3744797]]
Iteration 500 of 1000: loss=0.0356 " + "l1=0" + "l2=0.0356 f=-0.292 shape=(1, 9000, 1)
logits [[ 1.0524775 -1.8972188  1.0527861 -1.3769572]]
Iteration 600 of 1000: loss=0.03 " + "l1=0" + "l2=0.03 f=-0.291 shape=(1, 9000, 1)
logits [[ 1.0527174 -1.9047514  1.0566474 -1.3670744]]
Iteration 700 of 1000: loss=0.0251 " + "l1=0.000142" + "l2=0.0249 f=-0.289 shape=(1, 9000, 1)
logits [[ 1.0590521 -1.9143116  1.058614  -1.358176 ]]
Iteration 800 of 1000: loss=0.0225 " + "l1=0" + "l2=0.0225 f=-0.287 shape=(1, 9000, 1)
logits [[ 1.0530584 -1.9211833  1.0599034 -1.3407232]]
Iteration 900 of 1000: loss=0.0196 " + "l1=0" + "l2=0.0196 f=-0.286 shape=(1, 9000, 1)
logits [[ 1.0540862 -1.9290272  1.0601796 -1.329032 ]]
--- 265.77324318885803 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0331 " + "l1=0.0331" + "l2=0 f=-0.245 shape=(1, 9000, 1)
logits [[ 1.6565888 -1.9511751  0.9662189 -1.6535124]]
Iteration 100 of 1000: loss=0.0326 " + "l1=0.0322" + "l2=0.000346 f=-0.245 shape=(1, 9000, 1)
logits [[ 1.6178901 -1.9444876  0.953824  -1.6061472]]
Iteration 200 of 1000: loss=0.0325 " + "l1=0.0321" + "l2=0.000378 f=-0.245 shape=(1, 9000, 1)
logits [[ 1.6111376  -1.9429692   0.95135474 -1.5979654 ]]
Iteration 300 of 1000: loss=0.0324 " + "l1=0.0319" + "l2=0.000437 f=-0.244 shape=(1, 9000, 1)
logits [[ 1.6036702 -1.9412626  0.9486437 -1.5889429]]
Iteration 400 of 1000: loss=0.0323 " + "l1=0.0318" + "l2=0.000511 f=-0.244 shape=(1, 9000, 1)
logits [[ 1.5967848 -1.9398085  0.9460818 -1.5803466]]
Iteration 500 of 1000: loss=0.0322 " + "l1=0.0316" + "l2=0.000604 f=-0.244 shape=(1, 9000, 1)
logits [[ 1.5903786  -1.9385623   0.94357866 -1.5720063 ]]
Iteration 600 of 1000: loss=0.0322 " + "l1=0.0315" + "l2=0.000712 f=-0.244 shape=(1, 9000, 1)
logits [[ 1.5842675  -1.937514    0.94127053 -1.5638961 ]]
Iteration 700 of 1000: loss=0.0322 " + "l1=0.0313" + "l2=0.000809 f=-0.244 shape=(1, 9000, 1)
logits [[ 1.578441  -1.9365495  0.9390527 -1.5560308]]
Iteration 800 of 1000: loss=0.0322 " + "l1=0.0312" + "l2=0.000943 f=-0.244 shape=(1, 9000, 1)
logits [[ 1.572595   -1.9356467   0.93685544 -1.5481616 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.331 " + "l1=0.331" + "l2=0 f=-0.245 shape=(1, 9000, 1)
logits [[ 1.6565888 -1.9511751  0.9662189 -1.6535124]]
Iteration 100 of 1000: loss=0.287 " + "l1=0.262" + "l2=0.0252 f=-0.239 shape=(1, 9000, 1)
logits [[ 1.3531862  -1.9016942   0.86044866 -1.2694172 ]]
Iteration 200 of 1000: loss=0.269 " + "l1=0.234" + "l2=0.0356 f=-0.237 shape=(1, 9000, 1)
logits [[ 1.2275072  -1.8728029   0.80832773 -1.1105918 ]]
Iteration 300 of 1000: loss=0.253 " + "l1=0.208" + "l2=0.0451 f=-0.234 shape=(1, 9000, 1)
logits [[ 1.1155975  -1.8471768   0.76047057 -0.9631614 ]]
Iteration 400 of 1000: loss=0.236 " + "l1=0.185" + "l2=0.0508 f=-0.234 shape=(1, 9000, 1)
logits [[ 1.0168272 -1.8350143  0.718774  -0.8362662]]
Iteration 500 of 1000: loss=0.218 " + "l1=0.162" + "l2=0.0561 f=-0.235 shape=(1, 9000, 1)
logits [[ 0.91621053 -1.8213803   0.67328626 -0.7070834 ]]
Iteration 600 of 1000: loss=0.198 " + "l1=0.134" + "l2=0.0638 f=-0.237 shape=(1, 9000, 1)
logits [[ 0.7875034  -1.7941132   0.6147026  -0.55412936]]
Iteration 700 of 1000: loss=0.176 " + "l1=0.107" + "l2=0.0693 f=-0.237 shape=(1, 9000, 1)
logits [[ 0.66978365 -1.7746768   0.5573909  -0.40143353]]
Iteration 800 of 1000: loss=0.155 " + "l1=0.0801" + "l2=0.075 f=-0.238 shape=(1, 9000, 1)
logits [[ 0.5557051  -1.7579871   0.49729982 -0.24563164]]
Iteration 900 of 1000: loss=0.134 " + "l1=0.0545" + "l2=0.0794 f=-0.239 shape=(1, 9000, 1)
logits [[ 0.45078596 -1.7535993   0.4398949  -0.09422785]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.31 " + "l1=3.31" + "l2=0 f=-0.245 shape=(1, 9000, 1)
logits [[ 1.6565888 -1.9511751  0.9662189 -1.6535124]]
Iteration 100 of 1000: loss=0.574 " + "l1=0" + "l2=0.574 f=-0.202 shape=(1, 9000, 1)
logits [[ 0.29697925 -1.7330395   0.30843607  0.3187301 ]]
Iteration 200 of 1000: loss=0.411 " + "l1=0" + "l2=0.411 f=-0.204 shape=(1, 9000, 1)
logits [[ 0.29623452 -1.7022202   0.29361358  0.29803878]]
Iteration 300 of 1000: loss=0.329 " + "l1=0" + "l2=0.329 f=-0.211 shape=(1, 9000, 1)
logits [[ 0.2758858  -1.6753398   0.27740395  0.27844045]]
Iteration 400 of 1000: loss=0.277 " + "l1=0" + "l2=0.277 f=-0.214 shape=(1, 9000, 1)
logits [[ 0.26651743 -1.6640558   0.26586342  0.27444825]]
Iteration 500 of 1000: loss=0.239 " + "l1=0" + "l2=0.239 f=-0.213 shape=(1, 9000, 1)
logits [[ 0.2660391 -1.6646986  0.2561947  0.289767 ]]
Iteration 600 of 1000: loss=0.203 " + "l1=0" + "l2=0.203 f=-0.212 shape=(1, 9000, 1)
logits [[ 0.27186415 -1.6698233   0.26047397  0.2894211 ]]
Iteration 700 of 1000: loss=0.175 " + "l1=0.00284" + "l2=0.172 f=-0.211 shape=(1, 9000, 1)
logits [[ 0.27988908 -1.6711518   0.27042374  0.27704513]]
Iteration 800 of 1000: loss=0.152 " + "l1=0" + "l2=0.152 f=-0.209 shape=(1, 9000, 1)
logits [[ 0.2830041  -1.6791462   0.27328172  0.28852546]]
Iteration 900 of 1000: loss=0.136 " + "l1=0" + "l2=0.136 f=-0.21 shape=(1, 9000, 1)
logits [[ 0.274421   -1.6734886   0.2680053   0.29284257]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.82 " + "l1=1.82" + "l2=0 f=-0.245 shape=(1, 9000, 1)
logits [[ 1.6565888 -1.9511751  0.9662189 -1.6535124]]
Iteration 100 of 1000: loss=0.561 " + "l1=0.00352" + "l2=0.558 f=-0.21 shape=(1, 9000, 1)
logits [[ 0.30113217 -1.7360961   0.30106014  0.29473954]]
Iteration 200 of 1000: loss=0.39 " + "l1=0.0104" + "l2=0.379 f=-0.211 shape=(1, 9000, 1)
logits [[ 0.2907936  -1.696425    0.28802657  0.27189037]]
Iteration 300 of 1000: loss=0.304 " + "l1=0" + "l2=0.304 f=-0.216 shape=(1, 9000, 1)
logits [[ 0.26808238 -1.6648859   0.26305133  0.27010453]]
Iteration 400 of 1000: loss=0.243 " + "l1=0" + "l2=0.243 f=-0.221 shape=(1, 9000, 1)
logits [[ 0.25851908 -1.6580719   0.254196    0.2619582 ]]
Iteration 500 of 1000: loss=0.204 " + "l1=0.00396" + "l2=0.2 f=-0.223 shape=(1, 9000, 1)
logits [[ 0.25779092 -1.6663591   0.2624456   0.25524008]]
Iteration 600 of 1000: loss=0.168 " + "l1=0" + "l2=0.168 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.26389968 -1.6747888   0.26126537  0.2684859 ]]
Iteration 700 of 1000: loss=0.144 " + "l1=0" + "l2=0.144 f=-0.219 shape=(1, 9000, 1)
logits [[ 0.26171336 -1.6850281   0.26722565  0.27916843]]
Iteration 800 of 1000: loss=0.127 " + "l1=0" + "l2=0.127 f=-0.219 shape=(1, 9000, 1)
logits [[ 0.26916835 -1.6991155   0.27133965  0.28349227]]
Iteration 900 of 1000: loss=0.115 " + "l1=0" + "l2=0.115 f=-0.219 shape=(1, 9000, 1)
logits [[ 0.26522464 -1.7094885   0.27340576  0.29372448]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.08 " + "l1=1.08" + "l2=0 f=-0.245 shape=(1, 9000, 1)
logits [[ 1.6565888 -1.9511751  0.9662189 -1.6535124]]
Iteration 100 of 1000: loss=0.58 " + "l1=0.281" + "l2=0.299 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.55709946 -1.7524207   0.55869305 -0.30602422]]
Iteration 200 of 1000: loss=0.404 " + "l1=0.0752" + "l2=0.329 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.35663182 -1.7175009   0.3536605   0.12537858]]
Iteration 300 of 1000: loss=0.287 " + "l1=0.00283" + "l2=0.284 f=-0.219 shape=(1, 9000, 1)
logits [[ 0.27622476 -1.6850694   0.26646465  0.26753208]]
Iteration 400 of 1000: loss=0.217 " + "l1=0" + "l2=0.217 f=-0.224 shape=(1, 9000, 1)
logits [[ 0.25769606 -1.676596    0.25666797  0.26704937]]
Iteration 500 of 1000: loss=0.174 " + "l1=0.000949" + "l2=0.173 f=-0.226 shape=(1, 9000, 1)
logits [[ 0.26085284 -1.6820729   0.25924522  0.25793362]]
Iteration 600 of 1000: loss=0.147 " + "l1=0" + "l2=0.147 f=-0.226 shape=(1, 9000, 1)
logits [[ 0.26236263 -1.6961424   0.2580768   0.2711037 ]]
Iteration 700 of 1000: loss=0.124 " + "l1=0.0009" + "l2=0.124 f=-0.227 shape=(1, 9000, 1)
logits [[ 0.27305678 -1.7159616   0.26512432  0.27028826]]
Iteration 800 of 1000: loss=0.109 " + "l1=0.00148" + "l2=0.108 f=-0.227 shape=(1, 9000, 1)
logits [[ 0.27781388 -1.7306367   0.27069184  0.273267  ]]
Iteration 900 of 1000: loss=0.0961 " + "l1=0" + "l2=0.0961 f=-0.228 shape=(1, 9000, 1)
logits [[ 0.27564222 -1.739454    0.26654774  0.2863795 ]]
--- 290.50994515419006 seconds ---
Adv result:3
Loading record A01217
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0187 " + "l1=0.0187" + "l2=0 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.8809874  -0.99210805  0.83999085 -1.4586496 ]]
Iteration 100 of 1000: loss=0.0182 " + "l1=0.0179" + "l2=0.000316 f=-0.18 shape=(1, 9000, 1)
logits [[ 0.8337476 -0.9561703  0.8135334 -1.4115344]]
Iteration 200 of 1000: loss=0.0181 " + "l1=0.0177" + "l2=0.000343 f=-0.18 shape=(1, 9000, 1)
logits [[ 0.8245677 -0.9496258  0.8081351 -1.4024595]]
Iteration 300 of 1000: loss=0.018 " + "l1=0.0176" + "l2=0.000402 f=-0.179 shape=(1, 9000, 1)
logits [[ 0.8133222  -0.94185793  0.8017057  -1.3909892 ]]
Iteration 400 of 1000: loss=0.0179 " + "l1=0.0174" + "l2=0.000497 f=-0.179 shape=(1, 9000, 1)
logits [[ 0.8021256 -0.9342059  0.7952573 -1.3794421]]
Iteration 500 of 1000: loss=0.0178 " + "l1=0.0172" + "l2=0.0006 f=-0.179 shape=(1, 9000, 1)
logits [[ 0.7909234  -0.92657363  0.78847116 -1.3673477 ]]
Iteration 600 of 1000: loss=0.0177 " + "l1=0.017" + "l2=0.000658 f=-0.178 shape=(1, 9000, 1)
logits [[ 0.78232974 -0.9204524   0.78234273 -1.3566177 ]]
Iteration 700 of 1000: loss=0.0177 " + "l1=0.0169" + "l2=0.0008 f=-0.177 shape=(1, 9000, 1)
logits [[ 0.77642894 -0.91463786  0.7763509  -1.3480141 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.187 " + "l1=0.187" + "l2=0 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.8809874  -0.99210805  0.83999085 -1.4586496 ]]
Iteration 100 of 1000: loss=0.155 " + "l1=0.143" + "l2=0.0121 f=-0.165 shape=(1, 9000, 1)
logits [[ 0.65988284 -0.7718708   0.6606372  -1.2085024 ]]
Iteration 200 of 1000: loss=0.144 " + "l1=0.127" + "l2=0.0178 f=-0.16 shape=(1, 9000, 1)
logits [[ 0.5810074  -0.68433297  0.58105004 -1.1174501 ]]
Iteration 300 of 1000: loss=0.135 " + "l1=0.114" + "l2=0.0211 f=-0.155 shape=(1, 9000, 1)
logits [[ 0.51428175 -0.62702906  0.51593995 -1.0221757 ]]
Iteration 400 of 1000: loss=0.128 " + "l1=0.104" + "l2=0.0237 f=-0.152 shape=(1, 9000, 1)
logits [[ 0.45506382 -0.58390594  0.45979548 -0.9384063 ]]
Iteration 500 of 1000: loss=0.121 " + "l1=0.0946" + "l2=0.0262 f=-0.148 shape=(1, 9000, 1)
logits [[ 0.3951785  -0.5450361   0.40072414 -0.84361404]]
Iteration 600 of 1000: loss=0.113 " + "l1=0.085" + "l2=0.0283 f=-0.145 shape=(1, 9000, 1)
logits [[ 0.33692765 -0.51109946  0.33891642 -0.745732  ]]
Iteration 700 of 1000: loss=0.106 " + "l1=0.0776" + "l2=0.0288 f=-0.145 shape=(1, 9000, 1)
logits [[ 0.29171118 -0.48022267  0.29597467 -0.6867044 ]]
Iteration 800 of 1000: loss=0.1 " + "l1=0.0702" + "l2=0.0299 f=-0.143 shape=(1, 9000, 1)
logits [[ 0.2462371  -0.45243153  0.24957214 -0.6172385 ]]
Iteration 900 of 1000: loss=0.0941 " + "l1=0.0626" + "l2=0.0315 f=-0.145 shape=(1, 9000, 1)
logits [[ 0.2006848  -0.42417377  0.20194574 -0.5566125 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.87 " + "l1=1.87" + "l2=0 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.8809874  -0.99210805  0.83999085 -1.4586496 ]]
Iteration 100 of 1000: loss=0.365 " + "l1=0.00337" + "l2=0.361 f=-0.124 shape=(1, 9000, 1)
logits [[-0.27753818 -0.06950469 -0.06613408 -0.08344238]]
Iteration 200 of 1000: loss=0.249 " + "l1=0.00338" + "l2=0.246 f=-0.126 shape=(1, 9000, 1)
logits [[-0.24687994 -0.08271724 -0.07933728 -0.0932096 ]]
Iteration 300 of 1000: loss=0.21 " + "l1=0" + "l2=0.21 f=-0.133 shape=(1, 9000, 1)
logits [[-0.21604282 -0.07071298 -0.07849401 -0.16849855]]
Iteration 400 of 1000: loss=0.176 " + "l1=0" + "l2=0.176 f=-0.133 shape=(1, 9000, 1)
logits [[-0.23482525 -0.09461944 -0.10217889 -0.09872036]]
Iteration 500 of 1000: loss=0.151 " + "l1=0" + "l2=0.151 f=-0.138 shape=(1, 9000, 1)
logits [[-0.19564214 -0.10041821 -0.10139258 -0.15582564]]
Iteration 600 of 1000: loss=0.132 " + "l1=0" + "l2=0.132 f=-0.138 shape=(1, 9000, 1)
logits [[-0.18301606 -0.10706679 -0.11481501 -0.14656058]]
Iteration 700 of 1000: loss=0.116 " + "l1=0" + "l2=0.116 f=-0.139 shape=(1, 9000, 1)
logits [[-0.1715528  -0.11517958 -0.12049245 -0.14680159]]
Iteration 800 of 1000: loss=0.105 " + "l1=0" + "l2=0.105 f=-0.14 shape=(1, 9000, 1)
logits [[-0.16143611 -0.11855292 -0.12313341 -0.15782279]]
Iteration 900 of 1000: loss=0.0971 " + "l1=0" + "l2=0.0971 f=-0.144 shape=(1, 9000, 1)
logits [[-0.16092283 -0.12059022 -0.12848856 -0.16524574]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.03 " + "l1=1.03" + "l2=0 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.8809874  -0.99210805  0.83999085 -1.4586496 ]]
Iteration 100 of 1000: loss=0.404 " + "l1=0.181" + "l2=0.223 f=-0.131 shape=(1, 9000, 1)
logits [[-0.01765489 -0.22988912  0.09944838 -0.37511826]]
Iteration 200 of 1000: loss=0.25 " + "l1=0" + "l2=0.25 f=-0.125 shape=(1, 9000, 1)
logits [[-0.25682303 -0.07413753 -0.07695837 -0.09118778]]
Iteration 300 of 1000: loss=0.19 " + "l1=0" + "l2=0.19 f=-0.13 shape=(1, 9000, 1)
logits [[-0.2523208  -0.08703755 -0.08895709 -0.09081513]]
Iteration 400 of 1000: loss=0.155 " + "l1=0" + "l2=0.155 f=-0.134 shape=(1, 9000, 1)
logits [[-0.23642555 -0.09904388 -0.10077061 -0.10137554]]
Iteration 500 of 1000: loss=0.129 " + "l1=0" + "l2=0.129 f=-0.138 shape=(1, 9000, 1)
logits [[-0.20747313 -0.11324022 -0.11451587 -0.11586498]]
Iteration 600 of 1000: loss=0.114 " + "l1=0" + "l2=0.114 f=-0.139 shape=(1, 9000, 1)
logits [[-0.18141714 -0.11453012 -0.1210054  -0.13843155]]
Iteration 700 of 1000: loss=0.102 " + "l1=0" + "l2=0.102 f=-0.142 shape=(1, 9000, 1)
logits [[-0.16649106 -0.1166899  -0.1211517  -0.16309443]]
Iteration 800 of 1000: loss=0.0916 " + "l1=0" + "l2=0.0916 f=-0.143 shape=(1, 9000, 1)
logits [[-0.16675432 -0.12915564 -0.12966919 -0.14610541]]
Iteration 900 of 1000: loss=0.0869 " + "l1=0" + "l2=0.0869 f=-0.147 shape=(1, 9000, 1)
logits [[-0.16437551 -0.12453253 -0.12790108 -0.17054877]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.609 " + "l1=0.609" + "l2=0 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.8809874  -0.99210805  0.83999085 -1.4586496 ]]
Iteration 100 of 1000: loss=0.347 " + "l1=0.245" + "l2=0.103 f=-0.144 shape=(1, 9000, 1)
logits [[ 0.27551726 -0.441681    0.31074896 -0.7194688 ]]
Iteration 200 of 1000: loss=0.268 " + "l1=0.142" + "l2=0.126 f=-0.129 shape=(1, 9000, 1)
logits [[ 0.06497075 -0.2938396   0.14207391 -0.42948568]]
Iteration 300 of 1000: loss=0.213 " + "l1=0.0772" + "l2=0.135 f=-0.131 shape=(1, 9000, 1)
logits [[-0.09719399 -0.20984016  0.02777001 -0.2447525 ]]
Iteration 400 of 1000: loss=0.167 " + "l1=0.0349" + "l2=0.133 f=-0.138 shape=(1, 9000, 1)
logits [[-0.18283391 -0.16077895 -0.05353716 -0.15443358]]
Iteration 500 of 1000: loss=0.132 " + "l1=0.0032" + "l2=0.128 f=-0.142 shape=(1, 9000, 1)
logits [[-0.21267515 -0.12466598 -0.1148105  -0.11592416]]
Iteration 600 of 1000: loss=0.109 " + "l1=0" + "l2=0.109 f=-0.141 shape=(1, 9000, 1)
logits [[-0.1809884  -0.12626837 -0.12958454 -0.12802827]]
Iteration 700 of 1000: loss=0.0944 " + "l1=0.000282" + "l2=0.0942 f=-0.144 shape=(1, 9000, 1)
logits [[-0.17391992 -0.13357139 -0.13270459 -0.13588661]]
Iteration 800 of 1000: loss=0.0842 " + "l1=0.000204" + "l2=0.084 f=-0.147 shape=(1, 9000, 1)
logits [[-0.17278698 -0.13788292 -0.13725615 -0.1407279 ]]
Iteration 900 of 1000: loss=0.0755 " + "l1=0.000621" + "l2=0.0749 f=-0.15 shape=(1, 9000, 1)
logits [[-0.17781924 -0.14038293 -0.13847174 -0.14197958]]
--- 284.01272654533386 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00041 " + "l1=0.00041" + "l2=0 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.8809874  -0.99210805  0.83999085 -1.4586496 ]]
Iteration 100 of 1000: loss=0.000293 " + "l1=0.000179" + "l2=0.000115 f=-0.184 shape=(1, 9000, 1)
logits [[ 0.85829467 -0.98891     0.8404371  -1.4452335 ]]
Iteration 200 of 1000: loss=0.00025 " + "l1=0.000155" + "l2=9.45e-05 f=-0.184 shape=(1, 9000, 1)
logits [[ 0.856173   -0.98867875  0.8406277  -1.4446965 ]]
Iteration 300 of 1000: loss=0.000219 " + "l1=0.000113" + "l2=0.000106 f=-0.185 shape=(1, 9000, 1)
logits [[ 0.85225415 -0.98839074  0.84093875 -1.4428899 ]]
Iteration 400 of 1000: loss=0.000199 " + "l1=6.63e-05" + "l2=0.000133 f=-0.185 shape=(1, 9000, 1)
logits [[ 0.8479893  -0.98826545  0.84135634 -1.4407958 ]]
Iteration 500 of 1000: loss=0.000204 " + "l1=1.74e-05" + "l2=0.000187 f=-0.185 shape=(1, 9000, 1)
logits [[ 0.8436072 -0.98819    0.8418658 -1.4387589]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.000205 " + "l1=0.000205" + "l2=0 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.8809874  -0.99210805  0.83999085 -1.4586496 ]]
Iteration 100 of 1000: loss=0.000187 " + "l1=0.000121" + "l2=6.62e-05 f=-0.183 shape=(1, 9000, 1)
logits [[ 0.8645893 -0.9898463  0.8404072 -1.4489198]]
Iteration 200 of 1000: loss=0.000162 " + "l1=0.000126" + "l2=3.56e-05 f=-0.184 shape=(1, 9000, 1)
logits [[ 0.8656734  -0.9899375   0.84042317 -1.4502027 ]]
Iteration 300 of 1000: loss=0.000185 " + "l1=0.000121" + "l2=6.42e-05 f=-0.184 shape=(1, 9000, 1)
logits [[ 0.8646645  -0.98988193  0.8405525  -1.4499787 ]]
const [0.0025]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.000102 " + "l1=0.000102" + "l2=0 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.8809874  -0.99210805  0.83999085 -1.4586496 ]]
Iteration 100 of 1000: loss=0.000115 " + "l1=6.91e-05" + "l2=4.6e-05 f=-0.183 shape=(1, 9000, 1)
logits [[ 0.86806786 -0.9903435   0.8404233  -1.4511274 ]]
const [0.00125]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.12e-05 " + "l1=5.12e-05" + "l2=0 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.8809874  -0.99210805  0.83999085 -1.4586496 ]]
Iteration 100 of 1000: loss=7.18e-05 " + "l1=3.74e-05" + "l2=3.44e-05 f=-0.183 shape=(1, 9000, 1)
logits [[ 0.8702742  -0.99071056  0.84036344 -1.4522662 ]]
const [0.000625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.56e-05 " + "l1=2.56e-05" + "l2=0 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.8809874  -0.99210805  0.83999085 -1.4586496 ]]
Iteration 100 of 1000: loss=4.51e-05 " + "l1=1.99e-05" + "l2=2.52e-05 f=-0.183 shape=(1, 9000, 1)
logits [[ 0.87211406 -0.9909962   0.8403008  -1.4533861 ]]
--- 76.07862281799316 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0234 " + "l1=0.0234" + "l2=0 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.8809874  -0.99210805  0.83999085 -1.4586496 ]]
Iteration 100 of 1000: loss=0.0222 " + "l1=0.0216" + "l2=0.000636 f=-0.173 shape=(1, 9000, 1)
logits [[ 0.81438553 -0.9675905   0.8020083  -1.342534  ]]
Iteration 200 of 1000: loss=0.0218 " + "l1=0.0211" + "l2=0.000742 f=-0.172 shape=(1, 9000, 1)
logits [[ 0.79682094 -0.9623466   0.79190797 -1.3132087 ]]
Iteration 300 of 1000: loss=0.0215 " + "l1=0.0207" + "l2=0.000846 f=-0.17 shape=(1, 9000, 1)
logits [[ 0.7810085  -0.95776516  0.7810024  -1.2841625 ]]
Iteration 400 of 1000: loss=0.0212 " + "l1=0.0203" + "l2=0.000963 f=-0.168 shape=(1, 9000, 1)
logits [[ 0.7692748  -0.95321155  0.7691283  -1.2569408 ]]
Iteration 500 of 1000: loss=0.021 " + "l1=0.0199" + "l2=0.00108 f=-0.166 shape=(1, 9000, 1)
logits [[ 0.7575594 -0.94894    0.7576715 -1.2299476]]
Iteration 600 of 1000: loss=0.0207 " + "l1=0.0195" + "l2=0.00123 f=-0.164 shape=(1, 9000, 1)
logits [[ 0.74657077 -0.9445115   0.74662536 -1.2042598 ]]
Iteration 700 of 1000: loss=0.0206 " + "l1=0.0191" + "l2=0.00146 f=-0.162 shape=(1, 9000, 1)
logits [[ 0.73529464 -0.9400147   0.7355517  -1.1780535 ]]
Iteration 800 of 1000: loss=0.0204 " + "l1=0.0188" + "l2=0.00163 f=-0.16 shape=(1, 9000, 1)
logits [[ 0.72412443 -0.93585086  0.72435373 -1.1524351 ]]
Iteration 900 of 1000: loss=0.0202 " + "l1=0.0184" + "l2=0.00173 f=-0.158 shape=(1, 9000, 1)
logits [[ 0.71351063 -0.93195814  0.7137588  -1.1287321 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.234 " + "l1=0.234" + "l2=0 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.8809874  -0.99210805  0.83999085 -1.4586496 ]]
Iteration 100 of 1000: loss=0.154 " + "l1=0.12" + "l2=0.0341 f=-0.13 shape=(1, 9000, 1)
logits [[ 0.46300897 -0.85654014  0.53614295 -0.66128886]]
Iteration 200 of 1000: loss=0.115 " + "l1=0.0645" + "l2=0.0508 f=-0.112 shape=(1, 9000, 1)
logits [[ 0.26336223 -0.8148936   0.3733491  -0.2716517 ]]
Iteration 300 of 1000: loss=0.0835 " + "l1=0.0201" + "l2=0.0633 f=-0.0978 shape=(1, 9000, 1)
logits [[ 0.10922579 -0.79187846  0.24635872  0.04500518]]
Iteration 400 of 1000: loss=0.06 " + "l1=0" + "l2=0.06 f=-0.0902 shape=(1, 9000, 1)
logits [[ 0.04934559 -0.7864801   0.18599817  0.19030288]]
Iteration 500 of 1000: loss=0.0481 " + "l1=0" + "l2=0.0481 f=-0.0908 shape=(1, 9000, 1)
logits [[ 0.07371817 -0.7981843   0.17798185  0.18340126]]
Iteration 600 of 1000: loss=0.041 " + "l1=0" + "l2=0.041 f=-0.091 shape=(1, 9000, 1)
logits [[ 0.09319578 -0.80577296  0.1722868   0.17623287]]
Iteration 700 of 1000: loss=0.036 " + "l1=0" + "l2=0.036 f=-0.0908 shape=(1, 9000, 1)
logits [[ 0.10761526 -0.8112031   0.16990834  0.17061922]]
Iteration 800 of 1000: loss=0.0327 " + "l1=0" + "l2=0.0327 f=-0.0899 shape=(1, 9000, 1)
logits [[ 0.11713734 -0.8147458   0.16559653  0.17259511]]
Iteration 900 of 1000: loss=0.03 " + "l1=0" + "l2=0.03 f=-0.0889 shape=(1, 9000, 1)
logits [[ 0.12260281 -0.81679344  0.16186923  0.1765739 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.129 " + "l1=0.129" + "l2=0 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.8809874  -0.99210805  0.83999085 -1.4586496 ]]
Iteration 100 of 1000: loss=0.102 " + "l1=0.0913" + "l2=0.0109 f=-0.147 shape=(1, 9000, 1)
logits [[ 0.644282   -0.9057947   0.66684365 -0.9939957 ]]
Iteration 200 of 1000: loss=0.0916 " + "l1=0.0761" + "l2=0.0155 f=-0.137 shape=(1, 9000, 1)
logits [[ 0.53939337 -0.8758975   0.5865736  -0.7979143 ]]
Iteration 300 of 1000: loss=0.0815 " + "l1=0.0618" + "l2=0.0198 f=-0.128 shape=(1, 9000, 1)
logits [[ 0.44702792 -0.8561653   0.50976807 -0.613661  ]]
Iteration 400 of 1000: loss=0.0723 " + "l1=0.0492" + "l2=0.0231 f=-0.122 shape=(1, 9000, 1)
logits [[ 0.3620989  -0.84231126  0.44307715 -0.45108917]]
Iteration 500 of 1000: loss=0.0639 " + "l1=0.0376" + "l2=0.0263 f=-0.116 shape=(1, 9000, 1)
logits [[ 0.29511613 -0.8324858   0.3792754  -0.30392957]]
Iteration 600 of 1000: loss=0.0555 " + "l1=0.0263" + "l2=0.0292 f=-0.108 shape=(1, 9000, 1)
logits [[ 0.236166   -0.8173857   0.31363767 -0.16461018]]
Iteration 700 of 1000: loss=0.0485 " + "l1=0.0173" + "l2=0.0311 f=-0.103 shape=(1, 9000, 1)
logits [[ 0.18880163 -0.81126875  0.2630679  -0.05188111]]
Iteration 800 of 1000: loss=0.0417 " + "l1=0.00809" + "l2=0.0336 f=-0.0961 shape=(1, 9000, 1)
logits [[ 0.1456137  -0.8083644   0.21271415  0.06562418]]
Iteration 900 of 1000: loss=0.0355 " + "l1=0.000133" + "l2=0.0354 f=-0.0907 shape=(1, 9000, 1)
logits [[ 0.10518682 -0.80607945  0.17027661  0.16785249]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.076 " + "l1=0.076" + "l2=0 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.8809874  -0.99210805  0.83999085 -1.4586496 ]]
Iteration 100 of 1000: loss=0.0659 " + "l1=0.0617" + "l2=0.00418 f=-0.158 shape=(1, 9000, 1)
logits [[ 0.7330472  -0.93504393  0.7341178  -1.1651243 ]]
Iteration 200 of 1000: loss=0.0622 " + "l1=0.0566" + "l2=0.00569 f=-0.151 shape=(1, 9000, 1)
logits [[ 0.6762521  -0.9152671   0.68756276 -1.0526348 ]]
Iteration 300 of 1000: loss=0.059 " + "l1=0.0523" + "l2=0.00669 f=-0.146 shape=(1, 9000, 1)
logits [[ 0.6272559 -0.9011604  0.64903   -0.9610267]]
Iteration 400 of 1000: loss=0.0559 " + "l1=0.048" + "l2=0.00794 f=-0.142 shape=(1, 9000, 1)
logits [[ 0.57798654 -0.8876384   0.6087064  -0.86719334]]
Iteration 500 of 1000: loss=0.0529 " + "l1=0.0437" + "l2=0.00918 f=-0.137 shape=(1, 9000, 1)
logits [[ 0.5327326  -0.87592995  0.57004863 -0.77571034]]
Iteration 600 of 1000: loss=0.0501 " + "l1=0.0396" + "l2=0.0105 f=-0.133 shape=(1, 9000, 1)
logits [[ 0.4936494  -0.86972445  0.53158677 -0.68655443]]
Iteration 700 of 1000: loss=0.0475 " + "l1=0.0358" + "l2=0.0117 f=-0.129 shape=(1, 9000, 1)
logits [[ 0.4536824  -0.8625007   0.49608693 -0.6045959 ]]
Iteration 800 of 1000: loss=0.0451 " + "l1=0.0321" + "l2=0.013 f=-0.126 shape=(1, 9000, 1)
logits [[ 0.41620812 -0.8570104   0.46171775 -0.5260665 ]]
Iteration 900 of 1000: loss=0.0425 " + "l1=0.0285" + "l2=0.014 f=-0.123 shape=(1, 9000, 1)
logits [[ 0.3862783  -0.8523214   0.42619294 -0.45072213]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.102 " + "l1=0.102" + "l2=0 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.8809874  -0.99210805  0.83999085 -1.4586496 ]]
Iteration 100 of 1000: loss=0.0849 " + "l1=0.0778" + "l2=0.00717 f=-0.152 shape=(1, 9000, 1)
logits [[ 0.68883646 -0.91938204  0.69988775 -1.0775093 ]]
Iteration 200 of 1000: loss=0.0784 " + "l1=0.0688" + "l2=0.00962 f=-0.144 shape=(1, 9000, 1)
logits [[ 0.61092055 -0.8963338   0.64011693 -0.93194056]]
Iteration 300 of 1000: loss=0.0722 " + "l1=0.0598" + "l2=0.0124 f=-0.137 shape=(1, 9000, 1)
logits [[ 0.5350946  -0.8751902   0.57913315 -0.78716606]]
Iteration 400 of 1000: loss=0.0661 " + "l1=0.0513" + "l2=0.0149 f=-0.131 shape=(1, 9000, 1)
logits [[ 0.4706354  -0.86480516  0.52215904 -0.6500932 ]]
Iteration 500 of 1000: loss=0.0608 " + "l1=0.0438" + "l2=0.017 f=-0.126 shape=(1, 9000, 1)
logits [[ 0.4090939  -0.8545856   0.47160822 -0.52935517]]
Iteration 600 of 1000: loss=0.0558 " + "l1=0.0368" + "l2=0.019 f=-0.121 shape=(1, 9000, 1)
logits [[ 0.35643938 -0.8446666   0.42244536 -0.41797176]]
Iteration 700 of 1000: loss=0.0509 " + "l1=0.0299" + "l2=0.021 f=-0.115 shape=(1, 9000, 1)
logits [[ 0.31318024 -0.83760834  0.37289828 -0.30987465]]
Iteration 800 of 1000: loss=0.046 " + "l1=0.0231" + "l2=0.0229 f=-0.11 shape=(1, 9000, 1)
logits [[ 0.2677446  -0.8257073   0.32303855 -0.20525917]]
Iteration 900 of 1000: loss=0.0417 " + "l1=0.0179" + "l2=0.0238 f=-0.106 shape=(1, 9000, 1)
logits [[ 0.23561883 -0.82309395  0.28544357 -0.12273448]]
--- 304.6838915348053 seconds ---
Adv result:3
Loading record A01240
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.092 " + "l1=0.092" + "l2=0 f=-0.777 shape=(1, 9000, 1)
logits [[  6.9610257  -2.2425795   2.844815  -10.671696 ]]
Iteration 100 of 1000: loss=0.0915 " + "l1=0.0912" + "l2=0.000302 f=-0.777 shape=(1, 9000, 1)
logits [[  6.9197364  -2.1996753   2.8184924 -10.644586 ]]
Iteration 200 of 1000: loss=0.0913 " + "l1=0.091" + "l2=0.000315 f=-0.777 shape=(1, 9000, 1)
logits [[  6.910879  -2.188893   2.811983 -10.640531]]
Iteration 300 of 1000: loss=0.0912 " + "l1=0.0908" + "l2=0.000424 f=-0.777 shape=(1, 9000, 1)
logits [[  6.89912    -2.1759562   2.8042629 -10.634422 ]]
Iteration 400 of 1000: loss=0.0911 " + "l1=0.0905" + "l2=0.000558 f=-0.777 shape=(1, 9000, 1)
logits [[  6.8874855  -2.163335    2.796733  -10.628227 ]]
Iteration 500 of 1000: loss=0.091 " + "l1=0.0903" + "l2=0.000681 f=-0.777 shape=(1, 9000, 1)
logits [[  6.8756967  -2.1512496   2.789423  -10.6219225]]
Iteration 600 of 1000: loss=0.0909 " + "l1=0.0901" + "l2=0.000829 f=-0.777 shape=(1, 9000, 1)
logits [[  6.8647356  -2.1407816   2.783045  -10.616092 ]]
Iteration 700 of 1000: loss=0.0908 " + "l1=0.0899" + "l2=0.00093 f=-0.778 shape=(1, 9000, 1)
logits [[  6.8543687  -2.13145     2.7772653 -10.610442 ]]
Iteration 800 of 1000: loss=0.0909 " + "l1=0.0897" + "l2=0.00117 f=-0.778 shape=(1, 9000, 1)
logits [[  6.844754   -2.1228871   2.772154  -10.605055 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.92 " + "l1=0.92" + "l2=0 f=-0.777 shape=(1, 9000, 1)
logits [[  6.9610257  -2.2425795   2.844815  -10.671696 ]]
Iteration 100 of 1000: loss=0.867 " + "l1=0.841" + "l2=0.0263 f=-0.767 shape=(1, 9000, 1)
logits [[  6.5802045  -1.8301858   2.5741732 -10.393    ]]
Iteration 200 of 1000: loss=0.833 " + "l1=0.791" + "l2=0.0426 f=-0.772 shape=(1, 9000, 1)
logits [[  6.3027954  -1.6049675   2.4228013 -10.208933 ]]
Iteration 300 of 1000: loss=0.802 " + "l1=0.737" + "l2=0.0642 f=-0.77 shape=(1, 9000, 1)
logits [[ 5.995279  -1.3780613  2.3021    -9.997606 ]]
Iteration 400 of 1000: loss=0.777 " + "l1=0.694" + "l2=0.0834 f=-0.768 shape=(1, 9000, 1)
logits [[ 5.73558   -1.2018975  2.2139623 -9.819795 ]]
Iteration 500 of 1000: loss=0.759 " + "l1=0.663" + "l2=0.0957 f=-0.769 shape=(1, 9000, 1)
logits [[ 5.5439496 -1.08603    2.147476  -9.680587 ]]
Iteration 600 of 1000: loss=0.744 " + "l1=0.64" + "l2=0.104 f=-0.77 shape=(1, 9000, 1)
logits [[ 5.3973894 -1.0019017  2.0897875 -9.564814 ]]
Iteration 700 of 1000: loss=0.731 " + "l1=0.619" + "l2=0.112 f=-0.767 shape=(1, 9000, 1)
logits [[ 5.263562  -0.9256474  2.0402117 -9.447453 ]]
Iteration 800 of 1000: loss=0.718 " + "l1=0.598" + "l2=0.12 f=-0.764 shape=(1, 9000, 1)
logits [[ 5.1219473 -0.8585247  2.000646  -9.318805 ]]
Iteration 900 of 1000: loss=0.703 " + "l1=0.575" + "l2=0.128 f=-0.758 shape=(1, 9000, 1)
logits [[ 4.9672365  -0.78430027  1.9638437  -9.177412  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.2 " + "l1=9.2" + "l2=0 f=-0.777 shape=(1, 9000, 1)
logits [[  6.9610257  -2.2425795   2.844815  -10.671696 ]]
Iteration 100 of 1000: loss=2.35 " + "l1=0" + "l2=2.35 f=-0.865 shape=(1, 9000, 1)
logits [[ 1.2848632  1.3634161  1.2490624 -7.358115 ]]
Iteration 200 of 1000: loss=1.58 " + "l1=0" + "l2=1.58 f=-0.886 shape=(1, 9000, 1)
logits [[ 1.2404152  1.3615599  1.1722317 -7.319603 ]]
Iteration 300 of 1000: loss=1.33 " + "l1=0" + "l2=1.33 f=-0.901 shape=(1, 9000, 1)
logits [[ 1.2637188  1.3038492  1.1303532 -7.3003235]]
Iteration 400 of 1000: loss=1.22 " + "l1=0.0185" + "l2=1.2 f=-0.909 shape=(1, 9000, 1)
logits [[ 1.2676702  1.2491812  1.1096505 -7.261195 ]]
Iteration 500 of 1000: loss=1.15 " + "l1=0.0252" + "l2=1.13 f=-0.915 shape=(1, 9000, 1)
logits [[ 1.2359811  1.2107476  1.1014129 -7.208378 ]]
Iteration 600 of 1000: loss=1.08 " + "l1=0" + "l2=1.08 f=-0.918 shape=(1, 9000, 1)
logits [[ 1.17487    1.2066079  1.0953655 -7.1507816]]
Iteration 700 of 1000: loss=1.03 " + "l1=0" + "l2=1.03 f=-0.916 shape=(1, 9000, 1)
logits [[ 1.1765205  1.1773151  1.0969313 -7.1149187]]
Iteration 800 of 1000: loss=1.01 " + "l1=0" + "l2=1.01 f=-0.917 shape=(1, 9000, 1)
logits [[ 1.1433566  1.1735097  1.0893183 -7.0742445]]
Iteration 900 of 1000: loss=0.978 " + "l1=0" + "l2=0.978 f=-0.916 shape=(1, 9000, 1)
logits [[ 1.1359098  1.1670206  1.0749718 -7.04337  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.06 " + "l1=5.06" + "l2=0 f=-0.777 shape=(1, 9000, 1)
logits [[  6.9610257  -2.2425795   2.844815  -10.671696 ]]
Iteration 100 of 1000: loss=2.86 " + "l1=1.67" + "l2=1.19 f=-0.782 shape=(1, 9000, 1)
logits [[ 3.2823164   0.24282552  1.5917226  -8.244422  ]]
Iteration 200 of 1000: loss=1.36 " + "l1=0.0311" + "l2=1.33 f=-0.88 shape=(1, 9000, 1)
logits [[ 1.3193119  1.2627438  1.2239665 -7.3254366]]
Iteration 300 of 1000: loss=1.16 " + "l1=0" + "l2=1.16 f=-0.888 shape=(1, 9000, 1)
logits [[ 1.2277727  1.2462283  1.1703207 -7.1964736]]
Iteration 400 of 1000: loss=1.07 " + "l1=0" + "l2=1.07 f=-0.896 shape=(1, 9000, 1)
logits [[ 1.1922019  1.2175319  1.1271781 -7.1198454]]
Iteration 500 of 1000: loss=1.02 " + "l1=0.0182" + "l2=1 f=-0.894 shape=(1, 9000, 1)
logits [[ 1.2046728  1.1716233  1.1037574 -7.0542674]]
Iteration 600 of 1000: loss=0.976 " + "l1=0.00818" + "l2=0.968 f=-0.895 shape=(1, 9000, 1)
logits [[ 1.1792889  1.1644146  1.0764525 -7.001776 ]]
Iteration 700 of 1000: loss=0.937 " + "l1=0" + "l2=0.937 f=-0.899 shape=(1, 9000, 1)
logits [[ 1.1539226  1.1569464  1.0516531 -6.9582133]]
Iteration 800 of 1000: loss=0.904 " + "l1=0" + "l2=0.904 f=-0.903 shape=(1, 9000, 1)
logits [[ 1.1313369  1.1373174  1.0305928 -6.911836 ]]
Iteration 900 of 1000: loss=0.869 " + "l1=0" + "l2=0.869 f=-0.904 shape=(1, 9000, 1)
logits [[ 1.1095212  1.1194723  1.0089049 -6.854049 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.99 " + "l1=2.99" + "l2=0 f=-0.777 shape=(1, 9000, 1)
logits [[  6.9610257  -2.2425795   2.844815  -10.671696 ]]
Iteration 100 of 1000: loss=2.28 " + "l1=1.87" + "l2=0.412 f=-0.748 shape=(1, 9000, 1)
logits [[ 5.041078  -0.697662   1.9787558 -9.315085 ]]
Iteration 200 of 1000: loss=1.74 " + "l1=1.02" + "l2=0.722 f=-0.78 shape=(1, 9000, 1)
logits [[ 3.3421967   0.19744773  1.5802583  -8.240824  ]]
Iteration 300 of 1000: loss=1.18 " + "l1=0.0114" + "l2=1.17 f=-0.86 shape=(1, 9000, 1)
logits [[ 1.278756   1.2436894  1.2096764 -7.1740623]]
Iteration 400 of 1000: loss=1.02 " + "l1=0.000192" + "l2=1.02 f=-0.882 shape=(1, 9000, 1)
logits [[ 1.2102647  1.2096735  1.1213481 -7.068763 ]]
Iteration 500 of 1000: loss=0.953 " + "l1=0" + "l2=0.953 f=-0.891 shape=(1, 9000, 1)
logits [[ 1.1692176  1.178234   1.0759829 -6.986628 ]]
Iteration 600 of 1000: loss=0.899 " + "l1=0.00042" + "l2=0.899 f=-0.898 shape=(1, 9000, 1)
logits [[ 1.1557443  1.1544517  1.0334729 -6.9342456]]
Iteration 700 of 1000: loss=0.86 " + "l1=0.0116" + "l2=0.849 f=-0.904 shape=(1, 9000, 1)
logits [[ 1.1544919  1.1188904  0.9993804 -6.8874774]]
Iteration 800 of 1000: loss=0.813 " + "l1=0.00279" + "l2=0.81 f=-0.903 shape=(1, 9000, 1)
logits [[ 1.112292   1.103714   0.9730919 -6.8026285]]
Iteration 900 of 1000: loss=0.776 " + "l1=0" + "l2=0.776 f=-0.9 shape=(1, 9000, 1)
logits [[ 1.0806711  1.091936   0.9437026 -6.7173996]]
--- 292.5367569923401 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0412 " + "l1=0.0412" + "l2=0 f=-0.777 shape=(1, 9000, 1)
logits [[  6.9610257  -2.2425795   2.844815  -10.671696 ]]
Iteration 100 of 1000: loss=0.041 " + "l1=0.0409" + "l2=0.00016 f=-0.78 shape=(1, 9000, 1)
logits [[  6.939688  -2.247543   2.854652 -10.665529]]
Iteration 200 of 1000: loss=0.041 " + "l1=0.0408" + "l2=0.000128 f=-0.78 shape=(1, 9000, 1)
logits [[  6.938169   -2.2473345   2.8541245 -10.665935 ]]
Iteration 300 of 1000: loss=0.0409 " + "l1=0.0408" + "l2=0.000142 f=-0.781 shape=(1, 9000, 1)
logits [[  6.9343824  -2.2474954   2.8545504 -10.66523  ]]
Iteration 400 of 1000: loss=0.041 " + "l1=0.0408" + "l2=0.000236 f=-0.782 shape=(1, 9000, 1)
logits [[  6.9302187  -2.2476103   2.8549933 -10.664348 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.412 " + "l1=0.412" + "l2=0 f=-0.777 shape=(1, 9000, 1)
logits [[  6.9610257  -2.2425795   2.844815  -10.671696 ]]
Iteration 100 of 1000: loss=0.398 " + "l1=0.391" + "l2=0.00725 f=-0.795 shape=(1, 9000, 1)
logits [[  6.8121862  -2.2773268   2.9043703 -10.621071 ]]
Iteration 200 of 1000: loss=0.392 " + "l1=0.382" + "l2=0.0101 f=-0.809 shape=(1, 9000, 1)
logits [[  6.7348104  -2.2903638   2.9131408 -10.594589 ]]
Iteration 300 of 1000: loss=0.387 " + "l1=0.374" + "l2=0.0132 f=-0.822 shape=(1, 9000, 1)
logits [[  6.6540284  -2.297671    2.9165747 -10.562218 ]]
Iteration 400 of 1000: loss=0.38 " + "l1=0.362" + "l2=0.0183 f=-0.837 shape=(1, 9000, 1)
logits [[  6.5376186  -2.298651    2.9182165 -10.504291 ]]
Iteration 500 of 1000: loss=0.372 " + "l1=0.347" + "l2=0.0249 f=-0.852 shape=(1, 9000, 1)
logits [[  6.3939595  -2.2962554   2.9219604 -10.426867 ]]
Iteration 600 of 1000: loss=0.365 " + "l1=0.333" + "l2=0.0318 f=-0.867 shape=(1, 9000, 1)
logits [[  6.260494   -2.3005807   2.929543  -10.358377 ]]
Iteration 700 of 1000: loss=0.36 " + "l1=0.323" + "l2=0.0368 f=-0.878 shape=(1, 9000, 1)
logits [[  6.1575603  -2.2947607   2.9285827 -10.302006 ]]
Iteration 800 of 1000: loss=0.356 " + "l1=0.315" + "l2=0.0402 f=-0.885 shape=(1, 9000, 1)
logits [[  6.079548   -2.2898235   2.9258199 -10.254384 ]]
Iteration 900 of 1000: loss=0.352 " + "l1=0.309" + "l2=0.0427 f=-0.89 shape=(1, 9000, 1)
logits [[  6.012706   -2.2862818   2.9221694 -10.210259 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.12 " + "l1=4.12" + "l2=0 f=-0.777 shape=(1, 9000, 1)
logits [[  6.9610257  -2.2425795   2.844815  -10.671696 ]]
Iteration 100 of 1000: loss=1.86 " + "l1=0.644" + "l2=1.22 f=-1.03 shape=(1, 9000, 1)
logits [[ 3.9332445 -2.3809912  3.2888002 -8.962521 ]]
Iteration 200 of 1000: loss=0.983 " + "l1=0" + "l2=0.983 f=-1.1 shape=(1, 9000, 1)
logits [[ 3.300668  -2.4616146  3.3048005 -8.533173 ]]
Iteration 300 of 1000: loss=0.797 " + "l1=0.00646" + "l2=0.79 f=-1.1 shape=(1, 9000, 1)
logits [[ 3.266892  -2.4625428  3.2604356 -8.451809 ]]
Iteration 400 of 1000: loss=0.704 " + "l1=0" + "l2=0.704 f=-1.09 shape=(1, 9000, 1)
logits [[ 3.1909354 -2.3870888  3.199786  -8.370747 ]]
Iteration 500 of 1000: loss=0.645 " + "l1=0" + "l2=0.645 f=-1.08 shape=(1, 9000, 1)
logits [[ 3.142089  -2.2943664  3.145769  -8.30511  ]]
Iteration 600 of 1000: loss=0.603 " + "l1=0" + "l2=0.603 f=-1.06 shape=(1, 9000, 1)
logits [[ 3.087295  -2.194543   3.0964775 -8.248022 ]]
Iteration 700 of 1000: loss=0.566 " + "l1=0" + "l2=0.566 f=-1.05 shape=(1, 9000, 1)
logits [[ 3.034704  -2.0855331  3.0401335 -8.190058 ]]
Iteration 800 of 1000: loss=0.533 " + "l1=0" + "l2=0.533 f=-1.03 shape=(1, 9000, 1)
logits [[ 2.959319  -1.9304489  2.9735217 -8.114476 ]]
Iteration 900 of 1000: loss=0.502 " + "l1=0" + "l2=0.502 f=-1 shape=(1, 9000, 1)
logits [[ 2.895625  -1.7951864  2.9223244 -8.031971 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.26 " + "l1=2.26" + "l2=0 f=-0.777 shape=(1, 9000, 1)
logits [[  6.9610257  -2.2425795   2.844815  -10.671696 ]]
Iteration 100 of 1000: loss=1.67 " + "l1=1.32" + "l2=0.348 f=-0.919 shape=(1, 9000, 1)
logits [[ 5.524264  -2.4008665  3.1212924 -9.918906 ]]
Iteration 200 of 1000: loss=1.11 " + "l1=0.466" + "l2=0.639 f=-1.03 shape=(1, 9000, 1)
logits [[ 4.053805  -2.3696396  3.2058945 -9.011007 ]]
Iteration 300 of 1000: loss=0.805 " + "l1=0.0861" + "l2=0.719 f=-1.07 shape=(1, 9000, 1)
logits [[ 3.3982103 -2.3943343  3.2417262 -8.538419 ]]
Iteration 400 of 1000: loss=0.656 " + "l1=0.0225" + "l2=0.633 f=-1.07 shape=(1, 9000, 1)
logits [[ 3.2250535 -2.334358   3.184091  -8.363734 ]]
Iteration 500 of 1000: loss=0.589 " + "l1=0" + "l2=0.589 f=-1.06 shape=(1, 9000, 1)
logits [[ 3.1124265 -2.2058764  3.1125357 -8.254304 ]]
Iteration 600 of 1000: loss=0.559 " + "l1=0.0122" + "l2=0.546 f=-1.05 shape=(1, 9000, 1)
logits [[ 3.0581505 -2.0891643  3.0359473 -8.194821 ]]
Iteration 700 of 1000: loss=0.522 " + "l1=0.0055" + "l2=0.517 f=-1.03 shape=(1, 9000, 1)
logits [[ 2.9712589 -1.9205195  2.9612567 -8.119485 ]]
Iteration 800 of 1000: loss=0.491 " + "l1=0" + "l2=0.491 f=-1 shape=(1, 9000, 1)
logits [[ 2.9090617 -1.8017932  2.9142697 -8.03599  ]]
Iteration 900 of 1000: loss=0.466 " + "l1=0" + "l2=0.466 f=-0.984 shape=(1, 9000, 1)
logits [[ 2.8635721 -1.7242715  2.877932  -7.954361 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.34 " + "l1=1.34" + "l2=0 f=-0.777 shape=(1, 9000, 1)
logits [[  6.9610257  -2.2425795   2.844815  -10.671696 ]]
Iteration 100 of 1000: loss=1.17 " + "l1=1.06" + "l2=0.103 f=-0.855 shape=(1, 9000, 1)
logits [[  6.291726   -2.3639042   3.0178463 -10.363709 ]]
Iteration 200 of 1000: loss=1.02 " + "l1=0.849" + "l2=0.171 f=-0.918 shape=(1, 9000, 1)
logits [[  5.692434   -2.398171    3.0787935 -10.044268 ]]
Iteration 300 of 1000: loss=0.856 " + "l1=0.565" + "l2=0.291 f=-0.982 shape=(1, 9000, 1)
logits [[ 4.8346205 -2.3569872  3.0966883 -9.503019 ]]
Iteration 400 of 1000: loss=0.738 " + "l1=0.361" + "l2=0.377 f=-1.02 shape=(1, 9000, 1)
logits [[ 4.214403  -2.3485506  3.1032152 -9.063629 ]]
Iteration 500 of 1000: loss=0.684 " + "l1=0.267" + "l2=0.418 f=-1.05 shape=(1, 9000, 1)
logits [[ 3.9193618 -2.355935   3.0988574 -8.844654 ]]
Iteration 600 of 1000: loss=0.64 " + "l1=0.196" + "l2=0.445 f=-1.06 shape=(1, 9000, 1)
logits [[ 3.686886  -2.336321   3.0849252 -8.657698 ]]
Iteration 700 of 1000: loss=0.584 " + "l1=0.0931" + "l2=0.491 f=-1.05 shape=(1, 9000, 1)
logits [[ 3.3522468 -2.2319899  3.0657074 -8.384472 ]]
Iteration 800 of 1000: loss=0.519 " + "l1=0.0122" + "l2=0.507 f=-1.03 shape=(1, 9000, 1)
logits [[ 3.043626  -2.0850787  3.006023  -8.096159 ]]
Iteration 900 of 1000: loss=0.459 " + "l1=0.00215" + "l2=0.457 f=-1.01 shape=(1, 9000, 1)
logits [[ 2.9201074 -1.9137325  2.9135046 -7.9548287]]
--- 272.05346870422363 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.176 " + "l1=0.176" + "l2=0 f=-0.777 shape=(1, 9000, 1)
logits [[  6.9610257  -2.2425795   2.844815  -10.671696 ]]
Iteration 100 of 1000: loss=0.176 " + "l1=0.175" + "l2=0.000334 f=-0.777 shape=(1, 9000, 1)
logits [[  6.918051   -2.2184901   2.8247683 -10.63048  ]]
Iteration 200 of 1000: loss=0.176 " + "l1=0.175" + "l2=0.000322 f=-0.777 shape=(1, 9000, 1)
logits [[  6.909465   -2.2134297   2.8200855 -10.625179 ]]
Iteration 300 of 1000: loss=0.176 " + "l1=0.175" + "l2=0.000383 f=-0.778 shape=(1, 9000, 1)
logits [[  6.8982253  -2.2070348   2.8143923 -10.616976 ]]
Iteration 400 of 1000: loss=0.175 " + "l1=0.175" + "l2=0.000494 f=-0.778 shape=(1, 9000, 1)
logits [[  6.886416   -2.2006974   2.8085346 -10.608143 ]]
Iteration 500 of 1000: loss=0.175 " + "l1=0.175" + "l2=0.000597 f=-0.779 shape=(1, 9000, 1)
logits [[  6.8746295  -2.1947207   2.802809  -10.599135 ]]
Iteration 600 of 1000: loss=0.175 " + "l1=0.175" + "l2=0.00075 f=-0.78 shape=(1, 9000, 1)
logits [[  6.8631544  -2.189177    2.797473  -10.590117 ]]
Iteration 700 of 1000: loss=0.175 " + "l1=0.174" + "l2=0.00087 f=-0.78 shape=(1, 9000, 1)
logits [[  6.85135    -2.1841252   2.7921875 -10.580848 ]]
Iteration 800 of 1000: loss=0.175 " + "l1=0.174" + "l2=0.00102 f=-0.781 shape=(1, 9000, 1)
logits [[  6.838348   -2.1794329   2.7865288 -10.570671 ]]
Iteration 900 of 1000: loss=0.175 " + "l1=0.174" + "l2=0.00119 f=-0.782 shape=(1, 9000, 1)
logits [[  6.8267245  -2.175336    2.7815914 -10.561216 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.76 " + "l1=1.76" + "l2=0 f=-0.777 shape=(1, 9000, 1)
logits [[  6.9610257  -2.2425795   2.844815  -10.671696 ]]
Iteration 100 of 1000: loss=1.71 " + "l1=1.68" + "l2=0.03 f=-0.777 shape=(1, 9000, 1)
logits [[  6.543019   -2.0231378   2.6407328 -10.270453 ]]
Iteration 200 of 1000: loss=1.67 " + "l1=1.62" + "l2=0.0491 f=-0.786 shape=(1, 9000, 1)
logits [[  6.219506   -1.8893334   2.535648  -10.010149 ]]
Iteration 300 of 1000: loss=1.63 " + "l1=1.56" + "l2=0.0723 f=-0.79 shape=(1, 9000, 1)
logits [[ 5.873646  -1.7434139  2.4367115 -9.728126 ]]
Iteration 400 of 1000: loss=1.59 " + "l1=1.49" + "l2=0.1 f=-0.787 shape=(1, 9000, 1)
logits [[ 5.5212784 -1.5735362  2.3279974 -9.42275  ]]
Iteration 500 of 1000: loss=1.56 " + "l1=1.43" + "l2=0.131 f=-0.779 shape=(1, 9000, 1)
logits [[ 5.1591063 -1.3965523  2.2260525 -9.103087 ]]
Iteration 600 of 1000: loss=1.52 " + "l1=1.36" + "l2=0.159 f=-0.772 shape=(1, 9000, 1)
logits [[ 4.8073473 -1.2431397  2.1213398 -8.772052 ]]
Iteration 700 of 1000: loss=1.47 " + "l1=1.29" + "l2=0.187 f=-0.772 shape=(1, 9000, 1)
logits [[ 4.4512334 -1.1226612  2.005051  -8.419769 ]]
Iteration 800 of 1000: loss=1.43 " + "l1=1.23" + "l2=0.205 f=-0.761 shape=(1, 9000, 1)
logits [[ 4.1756124 -1.0131297  1.9108915 -8.119326 ]]
Iteration 900 of 1000: loss=1.39 " + "l1=1.17" + "l2=0.225 f=-0.735 shape=(1, 9000, 1)
logits [[ 3.8738275  -0.84929305  1.8146797  -7.7808433 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=17.6 " + "l1=17.6" + "l2=0 f=-0.777 shape=(1, 9000, 1)
logits [[  6.9610257  -2.2425795   2.844815  -10.671696 ]]
Iteration 100 of 1000: loss=9.59 " + "l1=6.47" + "l2=3.13 f=-0.665 shape=(1, 9000, 1)
logits [[ 1.0120093  0.7188681  1.0368032 -5.4282184]]
Iteration 200 of 1000: loss=7.7 " + "l1=4.72" + "l2=2.98 f=-0.578 shape=(1, 9000, 1)
logits [[ 0.60465854  0.59860694  0.60435283 -4.118854  ]]
Iteration 300 of 1000: loss=6.62 " + "l1=3.3" + "l2=3.32 f=-0.497 shape=(1, 9000, 1)
logits [[ 0.3291833   0.322968    0.32974017 -2.9715436 ]]
Iteration 400 of 1000: loss=5.36 " + "l1=1.61" + "l2=3.75 f=-0.401 shape=(1, 9000, 1)
logits [[-0.0142055   0.00521854  0.00777886 -1.6042757 ]]
Iteration 500 of 1000: loss=4.51 " + "l1=0.652" + "l2=3.86 f=-0.337 shape=(1, 9000, 1)
logits [[-0.20265436 -0.17482738 -0.15846758 -0.81064695]]
Iteration 600 of 1000: loss=3.7 " + "l1=0.0181" + "l2=3.68 f=-0.298 shape=(1, 9000, 1)
logits [[-0.29571554 -0.29975733 -0.28844136 -0.30659062]]
Iteration 700 of 1000: loss=3.22 " + "l1=0.0222" + "l2=3.19 f=-0.306 shape=(1, 9000, 1)
logits [[-0.31104642 -0.3016606  -0.29498944 -0.31723475]]
Iteration 800 of 1000: loss=2.88 " + "l1=0.0223" + "l2=2.86 f=-0.313 shape=(1, 9000, 1)
logits [[-0.2959455  -0.33490962 -0.30331546 -0.31820685]]
Iteration 900 of 1000: loss=2.56 " + "l1=0.0331" + "l2=2.53 f=-0.323 shape=(1, 9000, 1)
logits [[-0.3089458  -0.32292    -0.31859675 -0.3420595 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=9.7 " + "l1=9.7" + "l2=0 f=-0.777 shape=(1, 9000, 1)
logits [[  6.9610257  -2.2425795   2.844815  -10.671696 ]]
Iteration 100 of 1000: loss=6.94 " + "l1=5.28" + "l2=1.67 f=-0.675 shape=(1, 9000, 1)
logits [[ 2.6887395 -0.0525008  1.5675486 -6.9050612]]
Iteration 200 of 1000: loss=5.38 " + "l1=3.58" + "l2=1.8 f=-0.71 shape=(1, 9000, 1)
logits [[ 0.96314156  0.7883476   0.9588095  -5.54989   ]]
Iteration 300 of 1000: loss=4.78 " + "l1=3.1" + "l2=1.68 f=-0.659 shape=(1, 9000, 1)
logits [[ 0.75466955  0.7442861   0.7504582  -4.886645  ]]
Iteration 400 of 1000: loss=4.39 " + "l1=2.68" + "l2=1.71 f=-0.602 shape=(1, 9000, 1)
logits [[ 0.627985    0.61086756  0.59682304 -4.2437305 ]]
Iteration 500 of 1000: loss=4.02 " + "l1=2.22" + "l2=1.79 f=-0.544 shape=(1, 9000, 1)
logits [[ 0.49696717  0.50875485  0.3549442  -3.5358992 ]]
Iteration 600 of 1000: loss=3.52 " + "l1=1.56" + "l2=1.95 f=-0.458 shape=(1, 9000, 1)
logits [[ 0.272315    0.29597393  0.14619142 -2.5465891 ]]
Iteration 700 of 1000: loss=3.13 " + "l1=1.19" + "l2=1.93 f=-0.431 shape=(1, 9000, 1)
logits [[ 0.11257833  0.13600473  0.06333939 -2.0352356 ]]
Iteration 800 of 1000: loss=2.78 " + "l1=0.871" + "l2=1.9 f=-0.409 shape=(1, 9000, 1)
logits [[-0.015999   -0.017643   -0.00924665 -1.5937345 ]]
Iteration 900 of 1000: loss=2.48 " + "l1=0.614" + "l2=1.87 f=-0.381 shape=(1, 9000, 1)
logits [[-0.10825896 -0.09794988 -0.10220228 -1.2137519 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=13.7 " + "l1=13.7" + "l2=0 f=-0.777 shape=(1, 9000, 1)
logits [[  6.9610257  -2.2425795   2.844815  -10.671696 ]]
Iteration 100 of 1000: loss=8.26 " + "l1=5.57" + "l2=2.69 f=-0.707 shape=(1, 9000, 1)
logits [[ 1.2736977  0.5573326  1.2546949 -5.913914 ]]
Iteration 200 of 1000: loss=6.63 " + "l1=4.33" + "l2=2.3 f=-0.634 shape=(1, 9000, 1)
logits [[ 0.7977755   0.7087717   0.74720865 -4.7879486 ]]
Iteration 300 of 1000: loss=5.88 " + "l1=3.46" + "l2=2.42 f=-0.57 shape=(1, 9000, 1)
logits [[ 0.54837894  0.55019104  0.5398161  -3.919054  ]]
Iteration 400 of 1000: loss=5.21 " + "l1=2.5" + "l2=2.7 f=-0.514 shape=(1, 9000, 1)
logits [[ 0.2934095   0.2970569   0.28679577 -2.9315972 ]]
Iteration 500 of 1000: loss=4.47 " + "l1=1.62" + "l2=2.85 f=-0.432 shape=(1, 9000, 1)
logits [[ 0.09308302  0.08064205  0.09102269 -1.9918158 ]]
Iteration 600 of 1000: loss=3.92 " + "l1=1.12" + "l2=2.79 f=-0.393 shape=(1, 9000, 1)
logits [[-0.0656129  -0.01147573 -0.03146922 -1.4617026 ]]
Iteration 700 of 1000: loss=3.47 " + "l1=0.741" + "l2=2.73 f=-0.364 shape=(1, 9000, 1)
logits [[-0.12518404 -0.13171008 -0.12099594 -1.0772899 ]]
Iteration 800 of 1000: loss=3.04 " + "l1=0.368" + "l2=2.67 f=-0.339 shape=(1, 9000, 1)
logits [[-0.22917718 -0.21377932 -0.22191824 -0.68913436]]
Iteration 900 of 1000: loss=2.53 " + "l1=0.0116" + "l2=2.52 f=-0.341 shape=(1, 9000, 1)
logits [[-0.34761456 -0.33789024 -0.33100775 -0.34591526]]
--- 304.4391462802887 seconds ---
Adv result:3
Loading record A01244
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0646 " + "l1=0.0646" + "l2=0 f=-0.467 shape=(1, 9000, 1)
logits [[ 4.055154  -2.401315   2.2846797 -5.8081546]]
Iteration 100 of 1000: loss=0.0639 " + "l1=0.0636" + "l2=0.000364 f=-0.463 shape=(1, 9000, 1)
logits [[ 4.0088973 -2.3474636  2.247     -5.762006 ]]
Iteration 200 of 1000: loss=0.0637 " + "l1=0.0633" + "l2=0.00043 f=-0.462 shape=(1, 9000, 1)
logits [[ 3.9987717 -2.3318713  2.2361727 -5.7515697]]
Iteration 300 of 1000: loss=0.0636 " + "l1=0.063" + "l2=0.000518 f=-0.461 shape=(1, 9000, 1)
logits [[ 3.987217  -2.316737   2.225358  -5.7395287]]
Iteration 400 of 1000: loss=0.0634 " + "l1=0.0628" + "l2=0.000632 f=-0.46 shape=(1, 9000, 1)
logits [[ 3.9768572 -2.3033488  2.2156968 -5.7285967]]
Iteration 500 of 1000: loss=0.0633 " + "l1=0.0626" + "l2=0.000753 f=-0.459 shape=(1, 9000, 1)
logits [[ 3.9672027 -2.2908394  2.2066958 -5.7184777]]
Iteration 600 of 1000: loss=0.0632 " + "l1=0.0624" + "l2=0.000847 f=-0.458 shape=(1, 9000, 1)
logits [[ 3.9583688 -2.2795255  2.198517  -5.708995 ]]
Iteration 700 of 1000: loss=0.0632 " + "l1=0.0622" + "l2=0.00102 f=-0.457 shape=(1, 9000, 1)
logits [[ 3.9494293 -2.2676635  2.1898344 -5.6993876]]
Iteration 800 of 1000: loss=0.0631 " + "l1=0.062" + "l2=0.00112 f=-0.456 shape=(1, 9000, 1)
logits [[ 3.9407747 -2.2563019  2.1815343 -5.690182 ]]
Iteration 900 of 1000: loss=0.063 " + "l1=0.0618" + "l2=0.00122 f=-0.455 shape=(1, 9000, 1)
logits [[ 3.9331799 -2.24702    2.174821  -5.681806 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.646 " + "l1=0.646" + "l2=0 f=-0.467 shape=(1, 9000, 1)
logits [[ 4.055154  -2.401315   2.2846797 -5.8081546]]
Iteration 100 of 1000: loss=0.591 " + "l1=0.564" + "l2=0.0266 f=-0.43 shape=(1, 9000, 1)
logits [[ 3.6921656 -1.9486607  1.9763684 -5.4382305]]
Iteration 200 of 1000: loss=0.569 " + "l1=0.532" + "l2=0.0371 f=-0.412 shape=(1, 9000, 1)
logits [[ 3.5369148 -1.7852259  1.857664  -5.256375 ]]
Iteration 300 of 1000: loss=0.553 " + "l1=0.508" + "l2=0.0454 f=-0.397 shape=(1, 9000, 1)
logits [[ 3.406874  -1.6694868  1.7673963 -5.093441 ]]
Iteration 400 of 1000: loss=0.535 " + "l1=0.483" + "l2=0.0523 f=-0.381 shape=(1, 9000, 1)
logits [[ 3.2677648 -1.5638002  1.6829344 -4.9120264]]
Iteration 500 of 1000: loss=0.517 " + "l1=0.456" + "l2=0.0615 f=-0.368 shape=(1, 9000, 1)
logits [[ 3.1213002 -1.4342351  1.5786244 -4.736548 ]]
Iteration 600 of 1000: loss=0.501 " + "l1=0.435" + "l2=0.0654 f=-0.36 shape=(1, 9000, 1)
logits [[ 3.008431  -1.3464584  1.5056254 -4.6061378]]
Iteration 700 of 1000: loss=0.489 " + "l1=0.423" + "l2=0.0657 f=-0.354 shape=(1, 9000, 1)
logits [[ 2.932335  -1.2988802  1.4598808 -4.509343 ]]
Iteration 800 of 1000: loss=0.48 " + "l1=0.413" + "l2=0.0669 f=-0.349 shape=(1, 9000, 1)
logits [[ 2.865586  -1.2625585  1.4214356 -4.4220257]]
Iteration 900 of 1000: loss=0.472 " + "l1=0.404" + "l2=0.0682 f=-0.345 shape=(1, 9000, 1)
logits [[ 2.807354  -1.233602   1.3882486 -4.342919 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.46 " + "l1=6.46" + "l2=0 f=-0.467 shape=(1, 9000, 1)
logits [[ 4.055154  -2.401315   2.2846797 -5.8081546]]
Iteration 100 of 1000: loss=2.88 " + "l1=1.17" + "l2=1.71 f=-0.35 shape=(1, 9000, 1)
logits [[ 0.86033493 -0.31363496  0.78692377 -2.7317846 ]]
Iteration 200 of 1000: loss=1.85 " + "l1=0.41" + "l2=1.44 f=-0.309 shape=(1, 9000, 1)
logits [[ 0.4327036   0.02257744  0.43197757 -2.1232045 ]]
Iteration 300 of 1000: loss=1.46 " + "l1=0.169" + "l2=1.29 f=-0.279 shape=(1, 9000, 1)
logits [[ 0.2848588   0.13717823  0.30636406 -1.8429811 ]]
Iteration 400 of 1000: loss=1.22 " + "l1=0.00771" + "l2=1.21 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.19717783  0.18947047  0.19699262 -1.6524596 ]]
Iteration 500 of 1000: loss=1.07 " + "l1=0.000811" + "l2=1.07 f=-0.261 shape=(1, 9000, 1)
logits [[ 0.16011617  0.16859104  0.16940212 -1.5429085 ]]
Iteration 600 of 1000: loss=0.975 " + "l1=0.00542" + "l2=0.969 f=-0.256 shape=(1, 9000, 1)
logits [[ 0.13379884  0.15155143  0.15696707 -1.4679185 ]]
Iteration 700 of 1000: loss=0.9 " + "l1=0.00475" + "l2=0.895 f=-0.247 shape=(1, 9000, 1)
logits [[ 0.14349297  0.14277391  0.14752625 -1.4223493 ]]
Iteration 800 of 1000: loss=0.848 " + "l1=0" + "l2=0.848 f=-0.241 shape=(1, 9000, 1)
logits [[ 0.13441381  0.1417418   0.13982123 -1.3806734 ]]
Iteration 900 of 1000: loss=0.804 " + "l1=0.00248" + "l2=0.802 f=-0.237 shape=(1, 9000, 1)
logits [[ 0.12455836  0.13197021  0.13445489 -1.3391682 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.55 " + "l1=3.55" + "l2=0 f=-0.467 shape=(1, 9000, 1)
logits [[ 4.055154  -2.401315   2.2846797 -5.8081546]]
Iteration 100 of 1000: loss=2.33 " + "l1=1.8" + "l2=0.529 f=-0.334 shape=(1, 9000, 1)
logits [[ 2.3319235  -0.93938035  1.2344161  -3.9616492 ]]
Iteration 200 of 1000: loss=1.77 " + "l1=1.01" + "l2=0.758 f=-0.326 shape=(1, 9000, 1)
logits [[ 1.3245615  -0.52027816  0.88144207 -2.9894786 ]]
Iteration 300 of 1000: loss=1.34 " + "l1=0.461" + "l2=0.876 f=-0.307 shape=(1, 9000, 1)
logits [[ 0.6226789  -0.21541259  0.6107808  -2.2476468 ]]
Iteration 400 of 1000: loss=1.15 " + "l1=0.345" + "l2=0.81 f=-0.286 shape=(1, 9000, 1)
logits [[ 0.49813375 -0.12540832  0.502478   -2.0194213 ]]
Iteration 500 of 1000: loss=1.03 " + "l1=0.264" + "l2=0.77 f=-0.271 shape=(1, 9000, 1)
logits [[ 0.41179207 -0.06659766  0.41427872 -1.8451598 ]]
Iteration 600 of 1000: loss=0.943 " + "l1=0.201" + "l2=0.742 f=-0.258 shape=(1, 9000, 1)
logits [[ 0.346047   -0.01696434  0.34771544 -1.7100329 ]]
Iteration 700 of 1000: loss=0.868 " + "l1=0.153" + "l2=0.715 f=-0.246 shape=(1, 9000, 1)
logits [[ 0.29528278  0.02172323  0.29957625 -1.5997984 ]]
Iteration 800 of 1000: loss=0.807 " + "l1=0.107" + "l2=0.7 f=-0.234 shape=(1, 9000, 1)
logits [[ 0.24076757  0.05611417  0.2501877  -1.4813373 ]]
Iteration 900 of 1000: loss=0.756 " + "l1=0.0754" + "l2=0.681 f=-0.221 shape=(1, 9000, 1)
logits [[ 0.220347    0.08329085  0.21574634 -1.4026225 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5 " + "l1=5" + "l2=0 f=-0.467 shape=(1, 9000, 1)
logits [[ 4.055154  -2.401315   2.2846797 -5.8081546]]
Iteration 100 of 1000: loss=2.73 " + "l1=1.7" + "l2=1.03 f=-0.332 shape=(1, 9000, 1)
logits [[ 1.5933074  -0.5973601   0.98326737 -3.3056216 ]]
Iteration 200 of 1000: loss=1.77 " + "l1=0.559" + "l2=1.21 f=-0.313 shape=(1, 9000, 1)
logits [[ 0.58017623 -0.14071526  0.57303923 -2.2650695 ]]
Iteration 300 of 1000: loss=1.4 " + "l1=0.33" + "l2=1.07 f=-0.289 shape=(1, 9000, 1)
logits [[ 0.40393242 -0.02117364  0.40513644 -1.9454685 ]]
Iteration 400 of 1000: loss=1.21 " + "l1=0.204" + "l2=1.01 f=-0.277 shape=(1, 9000, 1)
logits [[ 0.28197035  0.04261353  0.3055543  -1.737141  ]]
Iteration 500 of 1000: loss=1.06 " + "l1=0.103" + "l2=0.959 f=-0.263 shape=(1, 9000, 1)
logits [[ 0.21535957  0.08895888  0.22179766 -1.5764799 ]]
Iteration 600 of 1000: loss=0.959 " + "l1=0.033" + "l2=0.926 f=-0.252 shape=(1, 9000, 1)
logits [[ 0.1648943   0.12353707  0.16608186 -1.4637108 ]]
Iteration 700 of 1000: loss=0.876 " + "l1=0.00808" + "l2=0.868 f=-0.246 shape=(1, 9000, 1)
logits [[ 0.13176884  0.13448416  0.14491421 -1.395619  ]]
Iteration 800 of 1000: loss=0.823 " + "l1=0.00767" + "l2=0.815 f=-0.241 shape=(1, 9000, 1)
logits [[ 0.11534242  0.13131283  0.14121008 -1.3529689 ]]
Iteration 900 of 1000: loss=0.769 " + "l1=0" + "l2=0.769 f=-0.234 shape=(1, 9000, 1)
logits [[ 0.12343398  0.12894921  0.12861183 -1.3180977 ]]
--- 306.02305245399475 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0177 " + "l1=0.0177" + "l2=0 f=-0.467 shape=(1, 9000, 1)
logits [[ 4.055154  -2.401315   2.2846797 -5.8081546]]
Iteration 100 of 1000: loss=0.0176 " + "l1=0.0174" + "l2=0.000159 f=-0.47 shape=(1, 9000, 1)
logits [[ 4.036279  -2.4142478  2.296676  -5.796974 ]]
Iteration 200 of 1000: loss=0.0175 " + "l1=0.0174" + "l2=0.000129 f=-0.47 shape=(1, 9000, 1)
logits [[ 4.034683  -2.4144287  2.297025  -5.7958426]]
Iteration 300 of 1000: loss=0.0175 " + "l1=0.0173" + "l2=0.000169 f=-0.47 shape=(1, 9000, 1)
logits [[ 4.0313873 -2.416017   2.2985647 -5.793606 ]]
Iteration 400 of 1000: loss=0.0175 " + "l1=0.0173" + "l2=0.000185 f=-0.47 shape=(1, 9000, 1)
logits [[ 4.0281157 -2.418007   2.3003728 -5.791345 ]]
Iteration 500 of 1000: loss=0.0175 " + "l1=0.0172" + "l2=0.000228 f=-0.47 shape=(1, 9000, 1)
logits [[ 4.0250525 -2.4198816  2.3020053 -5.789159 ]]
Iteration 600 of 1000: loss=0.0175 " + "l1=0.0172" + "l2=0.000312 f=-0.471 shape=(1, 9000, 1)
logits [[ 4.0216947 -2.4219382  2.303686  -5.786618 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.177 " + "l1=0.177" + "l2=0 f=-0.467 shape=(1, 9000, 1)
logits [[ 4.055154  -2.401315   2.2846797 -5.8081546]]
Iteration 100 of 1000: loss=0.162 " + "l1=0.155" + "l2=0.00764 f=-0.483 shape=(1, 9000, 1)
logits [[ 3.9258032 -2.4943528  2.3773344 -5.739149 ]]
Iteration 200 of 1000: loss=0.157 " + "l1=0.146" + "l2=0.0109 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.8670955 -2.528394   2.4090497 -5.6963296]]
Iteration 300 of 1000: loss=0.151 " + "l1=0.138" + "l2=0.0137 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.8138108 -2.5602546  2.4366298 -5.653174 ]]
Iteration 400 of 1000: loss=0.147 " + "l1=0.131" + "l2=0.0162 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.7731543 -2.596297   2.4639192 -5.6156096]]
Iteration 500 of 1000: loss=0.143 " + "l1=0.125" + "l2=0.018 f=-0.496 shape=(1, 9000, 1)
logits [[ 3.7351232 -2.622783   2.483443  -5.579836 ]]
Iteration 600 of 1000: loss=0.14 " + "l1=0.119" + "l2=0.0208 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.698278  -2.6609347  2.511085  -5.542951 ]]
Iteration 700 of 1000: loss=0.136 " + "l1=0.113" + "l2=0.023 f=-0.5 shape=(1, 9000, 1)
logits [[ 3.6576755 -2.6867325  2.5318441 -5.50084  ]]
Iteration 800 of 1000: loss=0.132 " + "l1=0.107" + "l2=0.0248 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.6137664 -2.7019677  2.5449657 -5.4525385]]
Iteration 900 of 1000: loss=0.128 " + "l1=0.101" + "l2=0.0271 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.5679307 -2.717456   2.5595024 -5.4040546]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.77 " + "l1=1.77" + "l2=0 f=-0.467 shape=(1, 9000, 1)
logits [[ 4.055154  -2.401315   2.2846797 -5.8081546]]
Iteration 100 of 1000: loss=0.523 " + "l1=0.00944" + "l2=0.513 f=-0.552 shape=(1, 9000, 1)
logits [[ 2.9368887 -3.120634   2.9274487 -4.9520903]]
Iteration 200 of 1000: loss=0.335 " + "l1=0.0119" + "l2=0.323 f=-0.538 shape=(1, 9000, 1)
logits [[ 2.914233  -3.0721745  2.902367  -4.8975854]]
Iteration 300 of 1000: loss=0.279 " + "l1=0.00659" + "l2=0.273 f=-0.528 shape=(1, 9000, 1)
logits [[ 2.8843935 -3.038896   2.8777986 -4.833541 ]]
Iteration 400 of 1000: loss=0.244 " + "l1=0" + "l2=0.244 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.8479662 -3.0012739  2.8484876 -4.7570586]]
Iteration 500 of 1000: loss=0.221 " + "l1=0" + "l2=0.221 f=-0.501 shape=(1, 9000, 1)
logits [[ 2.7921965 -2.9312994  2.7927427 -4.6587305]]
Iteration 600 of 1000: loss=0.204 " + "l1=0.00277" + "l2=0.201 f=-0.491 shape=(1, 9000, 1)
logits [[ 2.7472873 -2.873758   2.7445133 -4.5800576]]
Iteration 700 of 1000: loss=0.188 " + "l1=0" + "l2=0.188 f=-0.483 shape=(1, 9000, 1)
logits [[ 2.7121527 -2.839583   2.7132668 -4.5166354]]
Iteration 800 of 1000: loss=0.177 " + "l1=0" + "l2=0.177 f=-0.476 shape=(1, 9000, 1)
logits [[ 2.6859694 -2.8116288  2.6872847 -4.4660125]]
Iteration 900 of 1000: loss=0.169 " + "l1=0" + "l2=0.169 f=-0.472 shape=(1, 9000, 1)
logits [[ 2.6667523 -2.797001   2.6705873 -4.4279804]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.974 " + "l1=0.974" + "l2=0 f=-0.467 shape=(1, 9000, 1)
logits [[ 4.055154  -2.401315   2.2846797 -5.8081546]]
Iteration 100 of 1000: loss=0.556 " + "l1=0.362" + "l2=0.194 f=-0.528 shape=(1, 9000, 1)
logits [[ 3.3917165 -2.9085124  2.7328703 -5.328458 ]]
Iteration 200 of 1000: loss=0.372 " + "l1=0.0837" + "l2=0.289 f=-0.534 shape=(1, 9000, 1)
logits [[ 3.001854  -3.0210338  2.849589  -4.9659247]]
Iteration 300 of 1000: loss=0.27 " + "l1=0" + "l2=0.27 f=-0.523 shape=(1, 9000, 1)
logits [[ 2.861784  -3.0124135  2.8641307 -4.8038883]]
Iteration 400 of 1000: loss=0.232 " + "l1=0.00629" + "l2=0.226 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.8332605 -2.954344   2.8218155 -4.7254834]]
Iteration 500 of 1000: loss=0.201 " + "l1=0" + "l2=0.201 f=-0.491 shape=(1, 9000, 1)
logits [[ 2.7753334 -2.8962352  2.7781243 -4.623209 ]]
Iteration 600 of 1000: loss=0.183 " + "l1=0.000625" + "l2=0.182 f=-0.483 shape=(1, 9000, 1)
logits [[ 2.7408445 -2.8513424  2.739708  -4.5594316]]
Iteration 700 of 1000: loss=0.17 " + "l1=0.000448" + "l2=0.17 f=-0.477 shape=(1, 9000, 1)
logits [[ 2.716269  -2.8300653  2.7154548 -4.5086656]]
Iteration 800 of 1000: loss=0.162 " + "l1=0" + "l2=0.162 f=-0.472 shape=(1, 9000, 1)
logits [[ 2.695792  -2.819052   2.7001343 -4.465486 ]]
Iteration 900 of 1000: loss=0.154 " + "l1=0.000397" + "l2=0.154 f=-0.469 shape=(1, 9000, 1)
logits [[ 2.6867235 -2.8096218  2.686002  -4.438547 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.575 " + "l1=0.575" + "l2=0 f=-0.467 shape=(1, 9000, 1)
logits [[ 4.055154  -2.401315   2.2846797 -5.8081546]]
Iteration 100 of 1000: loss=0.425 " + "l1=0.349" + "l2=0.0765 f=-0.51 shape=(1, 9000, 1)
logits [[ 3.647923  -2.7233663  2.5755522 -5.54172  ]]
Iteration 200 of 1000: loss=0.357 " + "l1=0.248" + "l2=0.109 f=-0.52 shape=(1, 9000, 1)
logits [[ 3.4488764 -2.8611877  2.6843352 -5.353501 ]]
Iteration 300 of 1000: loss=0.303 " + "l1=0.171" + "l2=0.132 f=-0.519 shape=(1, 9000, 1)
logits [[ 3.2710464 -2.9120092  2.745311  -5.1795983]]
Iteration 400 of 1000: loss=0.259 " + "l1=0.111" + "l2=0.148 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.1160512 -2.9235477  2.7736113 -5.0135293]]
Iteration 500 of 1000: loss=0.225 " + "l1=0.0653" + "l2=0.16 f=-0.507 shape=(1, 9000, 1)
logits [[ 2.9914265 -2.9262254  2.7906058 -4.8825855]]
Iteration 600 of 1000: loss=0.189 " + "l1=0.0161" + "l2=0.173 f=-0.497 shape=(1, 9000, 1)
logits [[ 2.8409634 -2.9032917  2.7914574 -4.718358 ]]
Iteration 700 of 1000: loss=0.161 " + "l1=0" + "l2=0.161 f=-0.489 shape=(1, 9000, 1)
logits [[ 2.7467422 -2.85551    2.7504947 -4.596114 ]]
Iteration 800 of 1000: loss=0.144 " + "l1=0.000921" + "l2=0.143 f=-0.484 shape=(1, 9000, 1)
logits [[ 2.7207022 -2.8250537  2.7178688 -4.548374 ]]
Iteration 900 of 1000: loss=0.133 " + "l1=0.00123" + "l2=0.132 f=-0.483 shape=(1, 9000, 1)
logits [[ 2.7027276 -2.8155885  2.6989453 -4.5193977]]
--- 282.53908801078796 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0986 " + "l1=0.0986" + "l2=0 f=-0.467 shape=(1, 9000, 1)
logits [[ 4.055154  -2.401315   2.2846797 -5.8081546]]
Iteration 100 of 1000: loss=0.0978 " + "l1=0.0974" + "l2=0.000438 f=-0.463 shape=(1, 9000, 1)
logits [[ 4.0003176 -2.366987   2.2533896 -5.7390633]]
Iteration 200 of 1000: loss=0.0976 " + "l1=0.0971" + "l2=0.00051 f=-0.462 shape=(1, 9000, 1)
logits [[ 3.9859934 -2.3575692  2.2447972 -5.7210565]]
Iteration 300 of 1000: loss=0.0974 " + "l1=0.0967" + "l2=0.000648 f=-0.461 shape=(1, 9000, 1)
logits [[ 3.9706137 -2.348245   2.2359226 -5.7015843]]
Iteration 400 of 1000: loss=0.0972 " + "l1=0.0964" + "l2=0.000791 f=-0.46 shape=(1, 9000, 1)
logits [[ 3.9571257 -2.34071    2.228169  -5.6836877]]
Iteration 500 of 1000: loss=0.0971 " + "l1=0.0961" + "l2=0.00095 f=-0.459 shape=(1, 9000, 1)
logits [[ 3.9446657 -2.3332636  2.220612  -5.667074 ]]
Iteration 600 of 1000: loss=0.0969 " + "l1=0.0958" + "l2=0.00109 f=-0.458 shape=(1, 9000, 1)
logits [[ 3.932767  -2.3258946  2.2133656 -5.6509566]]
Iteration 700 of 1000: loss=0.0968 " + "l1=0.0956" + "l2=0.0012 f=-0.457 shape=(1, 9000, 1)
logits [[ 3.9214957 -2.3189394  2.2066524 -5.635612 ]]
Iteration 800 of 1000: loss=0.0966 " + "l1=0.0953" + "l2=0.00131 f=-0.456 shape=(1, 9000, 1)
logits [[ 3.911766  -2.3124568  2.200365  -5.621788 ]]
Iteration 900 of 1000: loss=0.0966 " + "l1=0.0951" + "l2=0.00155 f=-0.454 shape=(1, 9000, 1)
logits [[ 3.902077  -2.3056374  2.1939106 -5.60793  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.986 " + "l1=0.986" + "l2=0 f=-0.467 shape=(1, 9000, 1)
logits [[ 4.055154  -2.401315   2.2846797 -5.8081546]]
Iteration 100 of 1000: loss=0.915 " + "l1=0.882" + "l2=0.0331 f=-0.424 shape=(1, 9000, 1)
logits [[ 3.6048696 -2.111128   2.0259025 -5.215803 ]]
Iteration 200 of 1000: loss=0.875 " + "l1=0.822" + "l2=0.0524 f=-0.4 shape=(1, 9000, 1)
logits [[ 3.3535125 -1.9732735  1.8883971 -4.8673973]]
Iteration 300 of 1000: loss=0.838 " + "l1=0.769" + "l2=0.0696 f=-0.381 shape=(1, 9000, 1)
logits [[ 3.1264873 -1.8521856  1.7623171 -4.5592656]]
Iteration 400 of 1000: loss=0.808 " + "l1=0.725" + "l2=0.0832 f=-0.365 shape=(1, 9000, 1)
logits [[ 2.936144  -1.7509283  1.6662735 -4.3118925]]
Iteration 500 of 1000: loss=0.778 " + "l1=0.68" + "l2=0.0983 f=-0.35 shape=(1, 9000, 1)
logits [[ 2.7426865 -1.6648196  1.5817304 -4.0594573]]
Iteration 600 of 1000: loss=0.752 " + "l1=0.642" + "l2=0.11 f=-0.337 shape=(1, 9000, 1)
logits [[ 2.5798354 -1.5865967  1.5035827 -3.8448415]]
Iteration 700 of 1000: loss=0.727 " + "l1=0.607" + "l2=0.12 f=-0.328 shape=(1, 9000, 1)
logits [[ 2.426537  -1.5202554  1.4244652 -3.6409025]]
Iteration 800 of 1000: loss=0.702 " + "l1=0.575" + "l2=0.127 f=-0.32 shape=(1, 9000, 1)
logits [[ 2.2969916 -1.4831773  1.3601764 -3.4532855]]
Iteration 900 of 1000: loss=0.682 " + "l1=0.551" + "l2=0.131 f=-0.312 shape=(1, 9000, 1)
logits [[ 2.1998868 -1.4485376  1.3062292 -3.3072524]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.86 " + "l1=9.86" + "l2=0 f=-0.467 shape=(1, 9000, 1)
logits [[ 4.055154  -2.401315   2.2846797 -5.8081546]]
Iteration 100 of 1000: loss=3.91 " + "l1=1.22" + "l2=2.69 f=-0.221 shape=(1, 9000, 1)
logits [[ 0.33802858 -0.67989093  0.3406335  -0.8829599 ]]
Iteration 200 of 1000: loss=2.39 " + "l1=0.0175" + "l2=2.38 f=-0.152 shape=(1, 9000, 1)
logits [[-0.00449189 -0.5988156   0.00581916 -0.01169557]]
Iteration 300 of 1000: loss=1.75 " + "l1=0" + "l2=1.75 f=-0.123 shape=(1, 9000, 1)
logits [[ 0.02480795 -0.57822454  0.02904037  0.03105863]]
Iteration 400 of 1000: loss=1.41 " + "l1=0" + "l2=1.41 f=-0.109 shape=(1, 9000, 1)
logits [[ 0.03648671 -0.5840023   0.05215137  0.06114282]]
Iteration 500 of 1000: loss=1.22 " + "l1=0.00602" + "l2=1.21 f=-0.102 shape=(1, 9000, 1)
logits [[ 0.0568087  -0.57777524  0.06032003  0.0542973 ]]
Iteration 600 of 1000: loss=1.09 " + "l1=0.00944" + "l2=1.08 f=-0.0936 shape=(1, 9000, 1)
logits [[ 0.069091   -0.56997526  0.0669272   0.05965573]]
Iteration 700 of 1000: loss=0.996 " + "l1=0.0139" + "l2=0.982 f=-0.0879 shape=(1, 9000, 1)
logits [[ 0.07561016 -0.5680233   0.07743827  0.06352359]]
Iteration 800 of 1000: loss=0.915 " + "l1=0.00118" + "l2=0.914 f=-0.083 shape=(1, 9000, 1)
logits [[ 0.07944541 -0.56402045  0.07431411  0.07826476]]
Iteration 900 of 1000: loss=0.859 " + "l1=0.00736" + "l2=0.851 f=-0.0782 shape=(1, 9000, 1)
logits [[ 0.09006851 -0.5734867   0.08787159  0.08270992]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.42 " + "l1=5.42" + "l2=0 f=-0.467 shape=(1, 9000, 1)
logits [[ 4.055154  -2.401315   2.2846797 -5.8081546]]
Iteration 100 of 1000: loss=3.37 " + "l1=2.3" + "l2=1.07 f=-0.265 shape=(1, 9000, 1)
logits [[ 1.567495  -1.02677    1.0065262 -2.607816 ]]
Iteration 200 of 1000: loss=2.27 " + "l1=0.877" + "l2=1.39 f=-0.249 shape=(1, 9000, 1)
logits [[ 0.45638058 -0.77397674  0.45848235 -1.1355311 ]]
Iteration 300 of 1000: loss=1.69 " + "l1=0.362" + "l2=1.32 f=-0.173 shape=(1, 9000, 1)
logits [[ 0.21599641 -0.6839191   0.21668167 -0.44176844]]
Iteration 400 of 1000: loss=1.26 " + "l1=0.0308" + "l2=1.23 f=-0.12 shape=(1, 9000, 1)
logits [[ 0.04333541 -0.54728323  0.0375691  -0.01271175]]
Iteration 500 of 1000: loss=1.07 " + "l1=0" + "l2=1.07 f=-0.114 shape=(1, 9000, 1)
logits [[ 0.00266478 -0.5054275   0.02070229  0.02609259]]
Iteration 600 of 1000: loss=0.948 " + "l1=0" + "l2=0.948 f=-0.111 shape=(1, 9000, 1)
logits [[ 0.01487777 -0.49996305  0.01980353  0.02069548]]
Iteration 700 of 1000: loss=0.873 " + "l1=0.0204" + "l2=0.853 f=-0.106 shape=(1, 9000, 1)
logits [[ 0.0470576  -0.51293117  0.03203535  0.00994201]]
Iteration 800 of 1000: loss=0.796 " + "l1=0" + "l2=0.796 f=-0.104 shape=(1, 9000, 1)
logits [[ 0.03011144 -0.5140769   0.02850364  0.03851603]]
Iteration 900 of 1000: loss=0.744 " + "l1=0" + "l2=0.744 f=-0.102 shape=(1, 9000, 1)
logits [[ 0.02591463 -0.51335686  0.03362251  0.04391882]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.21 " + "l1=3.21" + "l2=0 f=-0.467 shape=(1, 9000, 1)
logits [[ 4.055154  -2.401315   2.2846797 -5.8081546]]
Iteration 100 of 1000: loss=2.46 " + "l1=2.11" + "l2=0.346 f=-0.336 shape=(1, 9000, 1)
logits [[ 2.5979338 -1.5403043  1.5070561 -3.9080174]]
Iteration 200 of 1000: loss=2 " + "l1=1.46" + "l2=0.542 f=-0.278 shape=(1, 9000, 1)
logits [[ 1.7126063 -1.1203768  1.0693989 -2.772063 ]]
Iteration 300 of 1000: loss=1.66 " + "l1=0.957" + "l2=0.704 f=-0.254 shape=(1, 9000, 1)
logits [[ 1.0566187  -0.93210745  0.7493296  -1.8892668 ]]
Iteration 400 of 1000: loss=1.42 " + "l1=0.64" + "l2=0.781 f=-0.227 shape=(1, 9000, 1)
logits [[ 0.678294   -0.86121005  0.5685488  -1.2923498 ]]
Iteration 500 of 1000: loss=1.2 " + "l1=0.366" + "l2=0.83 f=-0.179 shape=(1, 9000, 1)
logits [[ 0.3871846 -0.7518524  0.3850102 -0.7375881]]
Iteration 600 of 1000: loss=1.04 " + "l1=0.25" + "l2=0.792 f=-0.146 shape=(1, 9000, 1)
logits [[ 0.28305632 -0.6623361   0.28123072 -0.48532826]]
Iteration 700 of 1000: loss=0.931 " + "l1=0.182" + "l2=0.749 f=-0.134 shape=(1, 9000, 1)
logits [[ 0.20875725 -0.60167015  0.20955986 -0.3508633 ]]
Iteration 800 of 1000: loss=0.841 " + "l1=0.116" + "l2=0.725 f=-0.125 shape=(1, 9000, 1)
logits [[ 0.14168234 -0.57420474  0.14437902 -0.21351355]]
Iteration 900 of 1000: loss=0.759 " + "l1=0.0466" + "l2=0.712 f=-0.111 shape=(1, 9000, 1)
logits [[ 0.07689641 -0.5283088   0.07394843 -0.06640654]]
--- 300.94886779785156 seconds ---
Adv result:3
Loading record A01258
(1, 3842)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00525 " + "l1=0.00525" + "l2=0 f=-0.812 shape=(1, 9000, 1)
logits [[ 1.3233413   0.79839504  0.7055433  -6.0742197 ]]
Iteration 100 of 1000: loss=0.00432 " + "l1=0.00395" + "l2=0.000372 f=-0.81 shape=(1, 9000, 1)
logits [[ 1.2439733   0.8487474   0.70016646 -6.0342193 ]]
Iteration 200 of 1000: loss=0.00385 " + "l1=0.00335" + "l2=0.000496 f=-0.809 shape=(1, 9000, 1)
logits [[ 1.2072158  0.8718899  0.6965284 -6.0134563]]
Iteration 300 of 1000: loss=0.00341 " + "l1=0.00274" + "l2=0.000667 f=-0.808 shape=(1, 9000, 1)
logits [[ 1.1689283   0.89465386  0.69328314 -5.990368  ]]
Iteration 400 of 1000: loss=0.003 " + "l1=0.00214" + "l2=0.000862 f=-0.807 shape=(1, 9000, 1)
logits [[ 1.1300596  0.9165278  0.6908505 -5.966377 ]]
Iteration 500 of 1000: loss=0.00264 " + "l1=0.00155" + "l2=0.00109 f=-0.806 shape=(1, 9000, 1)
logits [[ 1.0918165  0.9364983  0.6892771 -5.941485 ]]
Iteration 600 of 1000: loss=0.00238 " + "l1=0.00101" + "l2=0.00136 f=-0.805 shape=(1, 9000, 1)
logits [[ 1.0553061  0.9540456  0.6883823 -5.91677  ]]
Iteration 700 of 1000: loss=0.00213 " + "l1=0.000525" + "l2=0.0016 f=-0.804 shape=(1, 9000, 1)
logits [[ 1.0220771  0.9695536  0.6875946 -5.8933396]]
Iteration 800 of 1000: loss=0.00183 " + "l1=1.88e-05" + "l2=0.00181 f=-0.802 shape=(1, 9000, 1)
logits [[ 0.9874511   0.98557234  0.6868231  -5.868953  ]]
Iteration 900 of 1000: loss=0.00177 " + "l1=0" + "l2=0.00177 f=-0.802 shape=(1, 9000, 1)
logits [[ 0.98478293  0.9850515   0.6879691  -5.865465  ]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.00262 " + "l1=0.00262" + "l2=0 f=-0.812 shape=(1, 9000, 1)
logits [[ 1.3233413   0.79839504  0.7055433  -6.0742197 ]]
Iteration 100 of 1000: loss=0.00238 " + "l1=0.00225" + "l2=0.000127 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.2771752  0.8275313  0.702297  -6.0508637]]
Iteration 200 of 1000: loss=0.00226 " + "l1=0.00212" + "l2=0.000134 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.2618599  0.8371823  0.7008995 -6.0424576]]
Iteration 300 of 1000: loss=0.00217 " + "l1=0.00198" + "l2=0.000191 f=-0.81 shape=(1, 9000, 1)
logits [[ 1.2437892  0.8484225  0.6995105 -6.0323057]]
Iteration 400 of 1000: loss=0.00209 " + "l1=0.00183" + "l2=0.000266 f=-0.81 shape=(1, 9000, 1)
logits [[ 1.2251204  0.8597603  0.6982341 -6.02167  ]]
Iteration 500 of 1000: loss=0.00201 " + "l1=0.00168" + "l2=0.00033 f=-0.809 shape=(1, 9000, 1)
logits [[ 1.2069267  0.8703534  0.6972019 -6.011077 ]]
Iteration 600 of 1000: loss=0.00199 " + "l1=0.00155" + "l2=0.000447 f=-0.809 shape=(1, 9000, 1)
logits [[ 1.1895744  0.8802642  0.6960979 -6.0005674]]
Iteration 700 of 1000: loss=0.00192 " + "l1=0.00142" + "l2=0.000506 f=-0.808 shape=(1, 9000, 1)
logits [[ 1.1731473  0.8895553  0.6951208 -5.9904065]]
Iteration 800 of 1000: loss=0.00196 " + "l1=0.00129" + "l2=0.000666 f=-0.808 shape=(1, 9000, 1)
logits [[ 1.1572268  0.8983125  0.6945434 -5.980618 ]]
const [0.0075]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.00394 " + "l1=0.00394" + "l2=0 f=-0.812 shape=(1, 9000, 1)
logits [[ 1.3233413   0.79839504  0.7055433  -6.0742197 ]]
Iteration 100 of 1000: loss=0.0034 " + "l1=0.00317" + "l2=0.00023 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.26041     0.8383527   0.70125973 -6.0426598 ]]
Iteration 200 of 1000: loss=0.00313 " + "l1=0.00285" + "l2=0.000289 f=-0.81 shape=(1, 9000, 1)
logits [[ 1.2342972   0.8548894   0.69862425 -6.0279765 ]]
Iteration 300 of 1000: loss=0.00289 " + "l1=0.00251" + "l2=0.000385 f=-0.809 shape=(1, 9000, 1)
logits [[ 1.206152    0.8720605   0.69642955 -6.0119634 ]]
Iteration 400 of 1000: loss=0.00267 " + "l1=0.00218" + "l2=0.000497 f=-0.809 shape=(1, 9000, 1)
logits [[ 1.1784295   0.88834053  0.6944199  -5.995215  ]]
Iteration 500 of 1000: loss=0.00253 " + "l1=0.00185" + "l2=0.000677 f=-0.808 shape=(1, 9000, 1)
logits [[ 1.1508218  0.9038257  0.6928242 -5.9782104]]
Iteration 600 of 1000: loss=0.00239 " + "l1=0.00155" + "l2=0.000839 f=-0.807 shape=(1, 9000, 1)
logits [[ 1.1247326   0.9180229   0.69167644 -5.9616423 ]]
Iteration 700 of 1000: loss=0.00222 " + "l1=0.00126" + "l2=0.000958 f=-0.806 shape=(1, 9000, 1)
logits [[ 1.0990701  0.9308749  0.691095  -5.944907 ]]
Iteration 800 of 1000: loss=0.00224 " + "l1=0.000983" + "l2=0.00126 f=-0.805 shape=(1, 9000, 1)
logits [[ 1.0739202  0.9428494  0.6907473 -5.928261 ]]
const [0.00875]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00459 " + "l1=0.00459" + "l2=0 f=-0.812 shape=(1, 9000, 1)
logits [[ 1.3233413   0.79839504  0.7055433  -6.0742197 ]]
Iteration 100 of 1000: loss=0.00388 " + "l1=0.00358" + "l2=0.000294 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.2529664   0.8432756   0.70077145 -6.0391536 ]]
Iteration 200 of 1000: loss=0.00352 " + "l1=0.00313" + "l2=0.000383 f=-0.81 shape=(1, 9000, 1)
logits [[ 1.2214074   0.86333144  0.69758177 -6.0215635 ]]
Iteration 300 of 1000: loss=0.00318 " + "l1=0.00267" + "l2=0.000511 f=-0.809 shape=(1, 9000, 1)
logits [[ 1.1886964  0.8831992  0.694951  -6.0023804]]
Iteration 400 of 1000: loss=0.0029 " + "l1=0.00221" + "l2=0.000684 f=-0.808 shape=(1, 9000, 1)
logits [[ 1.1552647  0.9023658  0.6926328 -5.982066 ]]
Iteration 500 of 1000: loss=0.00259 " + "l1=0.00178" + "l2=0.000816 f=-0.807 shape=(1, 9000, 1)
logits [[ 1.1231551   0.9200339   0.69102144 -5.9618897 ]]
Iteration 600 of 1000: loss=0.0024 " + "l1=0.00135" + "l2=0.00104 f=-0.806 shape=(1, 9000, 1)
logits [[ 1.091141    0.93631124  0.69003004 -5.940871  ]]
Iteration 700 of 1000: loss=0.00222 " + "l1=0.000966" + "l2=0.00126 f=-0.805 shape=(1, 9000, 1)
logits [[ 1.0607678  0.950418   0.6895287 -5.9201894]]
Iteration 800 of 1000: loss=0.00209 " + "l1=0.000613" + "l2=0.00148 f=-0.804 shape=(1, 9000, 1)
logits [[ 1.0332444   0.96313465  0.68904614 -5.9010386 ]]
Iteration 900 of 1000: loss=0.00191 " + "l1=0.000246" + "l2=0.00166 f=-0.803 shape=(1, 9000, 1)
logits [[ 1.0044239   0.9762591   0.68865925 -5.8808775 ]]
const [0.008125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00427 " + "l1=0.00427" + "l2=0 f=-0.812 shape=(1, 9000, 1)
logits [[ 1.3233413   0.79839504  0.7055433  -6.0742197 ]]
Iteration 100 of 1000: loss=0.00364 " + "l1=0.00338" + "l2=0.000261 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.2565114   0.84072894  0.7010546  -6.040726  ]]
Iteration 200 of 1000: loss=0.00332 " + "l1=0.00299" + "l2=0.000335 f=-0.81 shape=(1, 9000, 1)
logits [[ 1.227217    0.85926926  0.6980671  -6.024152  ]]
Iteration 300 of 1000: loss=0.00304 " + "l1=0.00259" + "l2=0.00045 f=-0.809 shape=(1, 9000, 1)
logits [[ 1.1964825  0.8779586  0.6956738 -6.0063705]]
Iteration 400 of 1000: loss=0.00277 " + "l1=0.00219" + "l2=0.000578 f=-0.808 shape=(1, 9000, 1)
logits [[ 1.165863   0.8957195  0.6934591 -5.987615 ]]
Iteration 500 of 1000: loss=0.00255 " + "l1=0.00181" + "l2=0.000741 f=-0.807 shape=(1, 9000, 1)
logits [[ 1.1354518   0.9125532   0.69186825 -5.9686666 ]]
Iteration 600 of 1000: loss=0.00238 " + "l1=0.00145" + "l2=0.000925 f=-0.806 shape=(1, 9000, 1)
logits [[ 1.1065294   0.92766476  0.6908672  -5.949952  ]]
Iteration 700 of 1000: loss=0.00224 " + "l1=0.0011" + "l2=0.00114 f=-0.805 shape=(1, 9000, 1)
logits [[ 1.0774028   0.9418232   0.69017094 -5.9305325 ]]
Iteration 800 of 1000: loss=0.00213 " + "l1=0.000806" + "l2=0.00133 f=-0.804 shape=(1, 9000, 1)
logits [[ 1.0523846  0.9531629  0.6901183 -5.9134703]]
Iteration 900 of 1000: loss=0.00203 " + "l1=0.000507" + "l2=0.00152 f=-0.804 shape=(1, 9000, 1)
logits [[ 1.0271318   0.96472573  0.6896421  -5.89605   ]]
--- 284.0549967288971 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00618 " + "l1=0.00618" + "l2=0 f=-0.812 shape=(1, 9000, 1)
logits [[ 1.3233413   0.79839504  0.7055433  -6.0742197 ]]
Iteration 100 of 1000: loss=0.00572 " + "l1=0.00549" + "l2=0.00023 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.2644774   0.81826913  0.71566486 -6.0418515 ]]
Iteration 200 of 1000: loss=0.00552 " + "l1=0.00527" + "l2=0.000256 f=-0.81 shape=(1, 9000, 1)
logits [[ 1.2436405  0.8276427  0.7168018 -6.0296345]]
Iteration 300 of 1000: loss=0.00536 " + "l1=0.00502" + "l2=0.000344 f=-0.81 shape=(1, 9000, 1)
logits [[ 1.2197068   0.83838373  0.7181766  -6.0152984 ]]
Iteration 400 of 1000: loss=0.00517 " + "l1=0.00476" + "l2=0.000417 f=-0.809 shape=(1, 9000, 1)
logits [[ 1.195227   0.8491147  0.719608  -6.0002046]]
Iteration 500 of 1000: loss=0.00501 " + "l1=0.00449" + "l2=0.000525 f=-0.808 shape=(1, 9000, 1)
logits [[ 1.169819    0.8598873   0.72115165 -5.984097  ]]
Iteration 600 of 1000: loss=0.00486 " + "l1=0.00421" + "l2=0.000656 f=-0.807 shape=(1, 9000, 1)
logits [[ 1.1437657   0.87076604  0.7230401  -5.967331  ]]
Iteration 700 of 1000: loss=0.00472 " + "l1=0.00392" + "l2=0.0008 f=-0.806 shape=(1, 9000, 1)
logits [[ 1.1175345   0.88116354  0.72536314 -5.949972  ]]
Iteration 800 of 1000: loss=0.00456 " + "l1=0.00358" + "l2=0.000979 f=-0.806 shape=(1, 9000, 1)
logits [[ 1.0879505   0.8893968   0.73009616 -5.930477  ]]
Iteration 900 of 1000: loss=0.00441 " + "l1=0.00323" + "l2=0.00118 f=-0.805 shape=(1, 9000, 1)
logits [[ 1.0584843   0.89691514  0.7354921  -5.9109797 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0618 " + "l1=0.0618" + "l2=0 f=-0.812 shape=(1, 9000, 1)
logits [[ 1.3233413   0.79839504  0.7055433  -6.0742197 ]]
Iteration 100 of 1000: loss=0.0244 " + "l1=0.0131" + "l2=0.0113 f=-0.808 shape=(1, 9000, 1)
logits [[ 0.90829664  0.91047597  0.779115   -5.830763  ]]
Iteration 200 of 1000: loss=0.0127 " + "l1=0.000303" + "l2=0.0124 f=-0.807 shape=(1, 9000, 1)
logits [[ 0.84559983  0.8505906   0.8475608  -5.770218  ]]
Iteration 300 of 1000: loss=0.00793 " + "l1=0.000247" + "l2=0.00768 f=-0.801 shape=(1, 9000, 1)
logits [[ 0.84499824  0.8512181   0.84874505 -5.748587  ]]
Iteration 400 of 1000: loss=0.00579 " + "l1=0" + "l2=0.00579 f=-0.798 shape=(1, 9000, 1)
logits [[ 0.84986514  0.8480395   0.84991175 -5.740934  ]]
Iteration 500 of 1000: loss=0.00482 " + "l1=0.000147" + "l2=0.00467 f=-0.796 shape=(1, 9000, 1)
logits [[ 0.8462641   0.85158587  0.85011417 -5.733331  ]]
Iteration 600 of 1000: loss=0.00406 " + "l1=0" + "l2=0.00406 f=-0.795 shape=(1, 9000, 1)
logits [[ 0.8469526   0.85004187  0.85385025 -5.7320113 ]]
Iteration 700 of 1000: loss=0.00356 " + "l1=0" + "l2=0.00356 f=-0.794 shape=(1, 9000, 1)
logits [[ 0.8469164  0.8509783  0.855194  -5.7310185]]
Iteration 800 of 1000: loss=0.00324 " + "l1=0" + "l2=0.00324 f=-0.794 shape=(1, 9000, 1)
logits [[ 0.84950846  0.85000265  0.8574522  -5.732437  ]]
Iteration 900 of 1000: loss=0.00292 " + "l1=0" + "l2=0.00292 f=-0.793 shape=(1, 9000, 1)
logits [[ 0.84731334  0.8536273   0.8580036  -5.7316837 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.034 " + "l1=0.034" + "l2=0 f=-0.812 shape=(1, 9000, 1)
logits [[ 1.3233413   0.79839504  0.7055433  -6.0742197 ]]
Iteration 100 of 1000: loss=0.0215 " + "l1=0.0161" + "l2=0.00531 f=-0.809 shape=(1, 9000, 1)
logits [[ 1.0373385   0.89652586  0.7439047  -5.9121466 ]]
Iteration 200 of 1000: loss=0.0145 " + "l1=0.00889" + "l2=0.00562 f=-0.806 shape=(1, 9000, 1)
logits [[ 0.921893    0.9234232   0.76171225 -5.8320894 ]]
Iteration 300 of 1000: loss=0.0108 " + "l1=0.00557" + "l2=0.00524 f=-0.805 shape=(1, 9000, 1)
logits [[ 0.89500767  0.8945472   0.7937377  -5.803068  ]]
Iteration 400 of 1000: loss=0.00786 " + "l1=0.00223" + "l2=0.00563 f=-0.803 shape=(1, 9000, 1)
logits [[ 0.8679676   0.86589545  0.8274132  -5.7730703 ]]
Iteration 500 of 1000: loss=0.00543 " + "l1=0" + "l2=0.00543 f=-0.801 shape=(1, 9000, 1)
logits [[ 0.8493494  0.8485498  0.8495003 -5.750935 ]]
Iteration 600 of 1000: loss=0.00428 " + "l1=0" + "l2=0.00428 f=-0.799 shape=(1, 9000, 1)
logits [[ 0.85011095  0.84816486  0.8510362  -5.7460957 ]]
Iteration 700 of 1000: loss=0.00358 " + "l1=9.85e-05" + "l2=0.00348 f=-0.798 shape=(1, 9000, 1)
logits [[ 0.8498061   0.8519965   0.85020536 -5.742659  ]]
Iteration 800 of 1000: loss=0.00318 " + "l1=4.19e-05" + "l2=0.00314 f=-0.797 shape=(1, 9000, 1)
logits [[ 0.8535147  0.850067   0.8527531 -5.742533 ]]
Iteration 900 of 1000: loss=0.00295 " + "l1=0.000162" + "l2=0.00279 f=-0.795 shape=(1, 9000, 1)
logits [[ 0.85643315  0.8514415   0.8534838  -5.743185  ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0201 " + "l1=0.0201" + "l2=0 f=-0.812 shape=(1, 9000, 1)
logits [[ 1.3233413   0.79839504  0.7055433  -6.0742197 ]]
Iteration 100 of 1000: loss=0.0157 " + "l1=0.0139" + "l2=0.0018 f=-0.809 shape=(1, 9000, 1)
logits [[ 1.1580389   0.8568337   0.72965044 -5.982085  ]]
Iteration 200 of 1000: loss=0.0132 " + "l1=0.0106" + "l2=0.0026 f=-0.808 shape=(1, 9000, 1)
logits [[ 1.0620474  0.8948857  0.7349805 -5.9225125]]
Iteration 300 of 1000: loss=0.0105 " + "l1=0.00686" + "l2=0.00361 f=-0.805 shape=(1, 9000, 1)
logits [[ 0.9540438   0.93216693  0.7430674  -5.848454  ]]
Iteration 400 of 1000: loss=0.00848 " + "l1=0.00535" + "l2=0.00313 f=-0.803 shape=(1, 9000, 1)
logits [[ 0.9245244  0.9218298  0.7599411 -5.8199105]]
Iteration 500 of 1000: loss=0.00718 " + "l1=0.00417" + "l2=0.00301 f=-0.802 shape=(1, 9000, 1)
logits [[ 0.90412235  0.90757763  0.7793563  -5.7992644 ]]
Iteration 600 of 1000: loss=0.00609 " + "l1=0.00308" + "l2=0.00301 f=-0.801 shape=(1, 9000, 1)
logits [[ 0.8913665   0.8922596   0.79743576 -5.7856035 ]]
Iteration 700 of 1000: loss=0.0052 " + "l1=0.00214" + "l2=0.00306 f=-0.8 shape=(1, 9000, 1)
logits [[ 0.88002574  0.87824446  0.81405103 -5.774286  ]]
Iteration 800 of 1000: loss=0.0044 " + "l1=0.00123" + "l2=0.00318 f=-0.8 shape=(1, 9000, 1)
logits [[ 0.86505455  0.86842424  0.8306756  -5.76339   ]]
Iteration 900 of 1000: loss=0.0037 " + "l1=0.000224" + "l2=0.00347 f=-0.799 shape=(1, 9000, 1)
logits [[ 0.85037297  0.85532933  0.84844524 -5.7495685 ]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0131 " + "l1=0.0131" + "l2=0 f=-0.812 shape=(1, 9000, 1)
logits [[ 1.3233413   0.79839504  0.7055433  -6.0742197 ]]
Iteration 100 of 1000: loss=0.0112 " + "l1=0.0104" + "l2=0.000804 f=-0.81 shape=(1, 9000, 1)
logits [[ 1.2118912   0.83822054  0.7223992  -6.0128345 ]]
Iteration 200 of 1000: loss=0.0103 " + "l1=0.00919" + "l2=0.00107 f=-0.809 shape=(1, 9000, 1)
logits [[ 1.1583501   0.85996586  0.72584915 -5.9801626 ]]
Iteration 300 of 1000: loss=0.00925 " + "l1=0.00783" + "l2=0.00142 f=-0.807 shape=(1, 9000, 1)
logits [[ 1.0976176   0.88468415  0.7293171  -5.94155   ]]
Iteration 400 of 1000: loss=0.0082 " + "l1=0.00635" + "l2=0.00185 f=-0.805 shape=(1, 9000, 1)
logits [[ 1.0323839   0.90937954  0.733636   -5.896943  ]]
Iteration 500 of 1000: loss=0.00699 " + "l1=0.00463" + "l2=0.00236 f=-0.803 shape=(1, 9000, 1)
logits [[ 0.960814   0.9289725  0.7429771 -5.845933 ]]
Iteration 600 of 1000: loss=0.00593 " + "l1=0.00374" + "l2=0.00219 f=-0.802 shape=(1, 9000, 1)
logits [[ 0.9306717   0.92787886  0.7547018  -5.821171  ]]
Iteration 700 of 1000: loss=0.00539 " + "l1=0.00321" + "l2=0.00219 f=-0.801 shape=(1, 9000, 1)
logits [[ 0.9193516   0.91755027  0.7684005  -5.8109655 ]]
Iteration 800 of 1000: loss=0.00496 " + "l1=0.00273" + "l2=0.00222 f=-0.801 shape=(1, 9000, 1)
logits [[ 0.90979946  0.90877664  0.7811154  -5.8034134 ]]
Iteration 900 of 1000: loss=0.0045 " + "l1=0.0023" + "l2=0.0022 f=-0.8 shape=(1, 9000, 1)
logits [[ 0.9013991   0.90037525  0.7933547  -5.7970886 ]]
--- 307.7988908290863 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.074 " + "l1=0.074" + "l2=0 f=-0.812 shape=(1, 9000, 1)
logits [[ 1.3233413   0.79839504  0.7055433  -6.0742197 ]]
Iteration 100 of 1000: loss=0.0725 " + "l1=0.072" + "l2=0.000554 f=-0.806 shape=(1, 9000, 1)
logits [[ 1.2269598   0.82492477  0.69292486 -5.9694934 ]]
Iteration 200 of 1000: loss=0.0718 " + "l1=0.0711" + "l2=0.000745 f=-0.804 shape=(1, 9000, 1)
logits [[ 1.1811388   0.83991534  0.68676436 -5.924573  ]]
Iteration 300 of 1000: loss=0.071 " + "l1=0.07" + "l2=0.00102 f=-0.802 shape=(1, 9000, 1)
logits [[ 1.1304929   0.85539114  0.6803489  -5.8726587 ]]
Iteration 400 of 1000: loss=0.0703 " + "l1=0.0689" + "l2=0.00137 f=-0.799 shape=(1, 9000, 1)
logits [[ 1.0744125   0.87130547  0.6736836  -5.814272  ]]
Iteration 500 of 1000: loss=0.0694 " + "l1=0.0677" + "l2=0.00173 f=-0.795 shape=(1, 9000, 1)
logits [[ 1.0179615  0.8853746  0.6681874 -5.753448 ]]
Iteration 600 of 1000: loss=0.0687 " + "l1=0.0665" + "l2=0.0022 f=-0.792 shape=(1, 9000, 1)
logits [[ 0.9586699  0.8987659  0.6641729 -5.6904902]]
Iteration 700 of 1000: loss=0.068 " + "l1=0.0654" + "l2=0.00256 f=-0.789 shape=(1, 9000, 1)
logits [[ 0.9072626  0.9077731  0.6612561 -5.632259 ]]
Iteration 800 of 1000: loss=0.0675 " + "l1=0.065" + "l2=0.00255 f=-0.787 shape=(1, 9000, 1)
logits [[ 0.8961701   0.89528924  0.66123104 -5.6003256 ]]
Iteration 900 of 1000: loss=0.0671 " + "l1=0.0646" + "l2=0.00255 f=-0.785 shape=(1, 9000, 1)
logits [[ 0.8851022  0.8850147  0.6607923 -5.570307 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.74 " + "l1=0.74" + "l2=0 f=-0.812 shape=(1, 9000, 1)
logits [[ 1.3233413   0.79839504  0.7055433  -6.0742197 ]]
Iteration 100 of 1000: loss=0.638 " + "l1=0.61" + "l2=0.0278 f=-0.771 shape=(1, 9000, 1)
logits [[ 0.79589665  0.8004107   0.6155104  -5.2973266 ]]
Iteration 200 of 1000: loss=0.59 " + "l1=0.549" + "l2=0.0405 f=-0.74 shape=(1, 9000, 1)
logits [[ 0.6465744   0.6577166   0.57165605 -4.8354273 ]]
Iteration 300 of 1000: loss=0.509 " + "l1=0.435" + "l2=0.0737 f=-0.642 shape=(1, 9000, 1)
logits [[ 0.29671443  0.4973769   0.49177894 -3.8529384 ]]
Iteration 400 of 1000: loss=0.418 " + "l1=0.312" + "l2=0.106 f=-0.594 shape=(1, 9000, 1)
logits [[-0.08067827  0.27387065  0.27439672 -2.843653  ]]
Iteration 500 of 1000: loss=0.29 " + "l1=0.142" + "l2=0.148 f=-0.485 shape=(1, 9000, 1)
logits [[-0.30581135 -0.07245976 -0.06877019 -1.4931881 ]]
Iteration 600 of 1000: loss=0.173 " + "l1=0.000538" + "l2=0.173 f=-0.422 shape=(1, 9000, 1)
logits [[-0.50994384 -0.3916805  -0.39091504 -0.39629382]]
Iteration 700 of 1000: loss=0.123 " + "l1=0.00199" + "l2=0.121 f=-0.423 shape=(1, 9000, 1)
logits [[-0.41053084 -0.46379325 -0.39898267 -0.4189324 ]]
Iteration 800 of 1000: loss=0.0976 " + "l1=0.000242" + "l2=0.0974 f=-0.416 shape=(1, 9000, 1)
logits [[-0.38333035 -0.5164567  -0.3804819  -0.3829053 ]]
Iteration 900 of 1000: loss=0.0843 " + "l1=0.000636" + "l2=0.0837 f=-0.411 shape=(1, 9000, 1)
logits [[-0.35643435 -0.5610015  -0.36191645 -0.36279085]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.407 " + "l1=0.407" + "l2=0 f=-0.812 shape=(1, 9000, 1)
logits [[ 1.3233413   0.79839504  0.7055433  -6.0742197 ]]
Iteration 100 of 1000: loss=0.367 " + "l1=0.355" + "l2=0.0117 f=-0.786 shape=(1, 9000, 1)
logits [[ 0.88884026  0.88899606  0.64995116 -5.572891  ]]
Iteration 200 of 1000: loss=0.353 " + "l1=0.34" + "l2=0.0128 f=-0.773 shape=(1, 9000, 1)
logits [[ 0.81774014  0.8201934   0.6265539  -5.356643  ]]
Iteration 300 of 1000: loss=0.339 " + "l1=0.323" + "l2=0.0158 f=-0.759 shape=(1, 9000, 1)
logits [[ 0.7422142   0.74583334  0.60373485 -5.1259737 ]]
Iteration 400 of 1000: loss=0.324 " + "l1=0.302" + "l2=0.0216 f=-0.733 shape=(1, 9000, 1)
logits [[ 0.63952714  0.6656265   0.5896082  -4.826596  ]]
Iteration 500 of 1000: loss=0.298 " + "l1=0.267" + "l2=0.0317 f=-0.676 shape=(1, 9000, 1)
logits [[ 0.5099578  0.5447477  0.5434249 -4.303537 ]]
Iteration 600 of 1000: loss=0.273 " + "l1=0.232" + "l2=0.0407 f=-0.651 shape=(1, 9000, 1)
logits [[ 0.31712452  0.43431073  0.43176147 -3.7853942 ]]
Iteration 700 of 1000: loss=0.245 " + "l1=0.195" + "l2=0.0502 f=-0.612 shape=(1, 9000, 1)
logits [[ 0.16017099  0.31172746  0.31240407 -3.232982  ]]
Iteration 800 of 1000: loss=0.206 " + "l1=0.144" + "l2=0.0624 f=-0.542 shape=(1, 9000, 1)
logits [[ 0.05495187  0.1305009   0.1308634  -2.4845626 ]]
Iteration 900 of 1000: loss=0.171 " + "l1=0.0988" + "l2=0.0724 f=-0.493 shape=(1, 9000, 1)
logits [[-0.05256543 -0.04211563 -0.04103633 -1.8377011 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.573 " + "l1=0.573" + "l2=0 f=-0.812 shape=(1, 9000, 1)
logits [[ 1.3233413   0.79839504  0.7055433  -6.0742197 ]]
Iteration 100 of 1000: loss=0.505 " + "l1=0.487" + "l2=0.0183 f=-0.778 shape=(1, 9000, 1)
logits [[ 0.8442909   0.84671986  0.63348114 -5.438062  ]]
Iteration 200 of 1000: loss=0.478 " + "l1=0.454" + "l2=0.024 f=-0.758 shape=(1, 9000, 1)
logits [[ 0.7352591   0.74980533  0.59269047 -5.1112776 ]]
Iteration 300 of 1000: loss=0.441 " + "l1=0.401" + "l2=0.0395 f=-0.704 shape=(1, 9000, 1)
logits [[ 0.5895196   0.5904225   0.59209937 -4.586718  ]]
Iteration 400 of 1000: loss=0.394 " + "l1=0.337" + "l2=0.0569 f=-0.646 shape=(1, 9000, 1)
logits [[ 0.31922755  0.48211718  0.48474753 -3.8699148 ]]
Iteration 500 of 1000: loss=0.339 " + "l1=0.262" + "l2=0.0775 f=-0.604 shape=(1, 9000, 1)
logits [[ 0.02088287  0.31471944  0.31255624 -3.0631468 ]]
Iteration 600 of 1000: loss=0.267 " + "l1=0.165" + "l2=0.102 f=-0.517 shape=(1, 9000, 1)
logits [[-0.20867386  0.08691961  0.09537335 -2.0396984 ]]
Iteration 700 of 1000: loss=0.194 " + "l1=0.0777" + "l2=0.116 f=-0.447 shape=(1, 9000, 1)
logits [[-0.3014843  -0.16658472 -0.1594734  -1.1622128 ]]
Iteration 800 of 1000: loss=0.128 " + "l1=0.000835" + "l2=0.127 f=-0.405 shape=(1, 9000, 1)
logits [[-0.45438775 -0.3964324  -0.37880307 -0.38957605]]
Iteration 900 of 1000: loss=0.0986 " + "l1=0" + "l2=0.0986 f=-0.413 shape=(1, 9000, 1)
logits [[-0.41621777 -0.42662427 -0.40395176 -0.4034864 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.49 " + "l1=0.49" + "l2=0 f=-0.812 shape=(1, 9000, 1)
logits [[ 1.3233413   0.79839504  0.7055433  -6.0742197 ]]
Iteration 100 of 1000: loss=0.437 " + "l1=0.422" + "l2=0.0144 f=-0.783 shape=(1, 9000, 1)
logits [[ 0.86822414  0.8671736   0.6415274  -5.507311  ]]
Iteration 200 of 1000: loss=0.416 " + "l1=0.399" + "l2=0.0177 f=-0.766 shape=(1, 9000, 1)
logits [[ 0.78050494  0.78301877  0.6085301  -5.2357187 ]]
Iteration 300 of 1000: loss=0.395 " + "l1=0.372" + "l2=0.0235 f=-0.744 shape=(1, 9000, 1)
logits [[ 0.67567915  0.6898241   0.58058    -4.9220667 ]]
Iteration 400 of 1000: loss=0.361 " + "l1=0.32" + "l2=0.041 f=-0.669 shape=(1, 9000, 1)
logits [[ 0.47938046  0.56038165  0.5588131  -4.2749043 ]]
Iteration 500 of 1000: loss=0.325 " + "l1=0.272" + "l2=0.0531 f=-0.63 shape=(1, 9000, 1)
logits [[ 0.23114556  0.45274976  0.45267022 -3.656187  ]]
Iteration 600 of 1000: loss=0.281 " + "l1=0.214" + "l2=0.0673 f=-0.584 shape=(1, 9000, 1)
logits [[ 0.01228688  0.2908942   0.29671767 -2.9367137 ]]
Iteration 700 of 1000: loss=0.226 " + "l1=0.141" + "l2=0.0847 f=-0.5 shape=(1, 9000, 1)
logits [[-0.16593385  0.09199868  0.10351064 -2.0288398 ]]
Iteration 800 of 1000: loss=0.17 " + "l1=0.0729" + "l2=0.0968 f=-0.432 shape=(1, 9000, 1)
logits [[-0.23613971 -0.17882353 -0.10522373 -1.2058755 ]]
Iteration 900 of 1000: loss=0.119 " + "l1=0.0118" + "l2=0.108 f=-0.387 shape=(1, 9000, 1)
logits [[-0.3477835  -0.3473732  -0.33714366 -0.5155677 ]]
--- 307.963045835495 seconds ---
Adv result:3
Loading record A01268
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0394 " + "l1=0.0394" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 2.2642617 -1.6717454  1.6825888 -2.9793472]]
Iteration 100 of 1000: loss=0.0388 " + "l1=0.0384" + "l2=0.000403 f=-0.172 shape=(1, 9000, 1)
logits [[ 2.204987  -1.6379694  1.657835  -2.9147232]]
Iteration 200 of 1000: loss=0.0387 " + "l1=0.0383" + "l2=0.00042 f=-0.172 shape=(1, 9000, 1)
logits [[ 2.1953864 -1.6315528  1.6530843 -2.9054928]]
Iteration 300 of 1000: loss=0.0386 " + "l1=0.0381" + "l2=0.000494 f=-0.172 shape=(1, 9000, 1)
logits [[ 2.1848257 -1.6246222  1.6481111 -2.8954377]]
Iteration 400 of 1000: loss=0.0385 " + "l1=0.0379" + "l2=0.00059 f=-0.171 shape=(1, 9000, 1)
logits [[ 2.1752996 -1.6180464  1.6436126 -2.8862648]]
Iteration 500 of 1000: loss=0.0385 " + "l1=0.0378" + "l2=0.000714 f=-0.171 shape=(1, 9000, 1)
logits [[ 2.166831  -1.6121908  1.6398007 -2.878283 ]]
Iteration 600 of 1000: loss=0.0385 " + "l1=0.0377" + "l2=0.000812 f=-0.171 shape=(1, 9000, 1)
logits [[ 2.1587768 -1.6066508  1.6364012 -2.8707025]]
Iteration 700 of 1000: loss=0.0384 " + "l1=0.0375" + "l2=0.000846 f=-0.17 shape=(1, 9000, 1)
logits [[ 2.151106  -1.6014152  1.6333328 -2.8638246]]
Iteration 800 of 1000: loss=0.0384 " + "l1=0.0374" + "l2=0.000967 f=-0.17 shape=(1, 9000, 1)
logits [[ 2.1439896 -1.5964727  1.6306552 -2.8572407]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.394 " + "l1=0.394" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 2.2642617 -1.6717454  1.6825888 -2.9793472]]
Iteration 100 of 1000: loss=0.345 " + "l1=0.317" + "l2=0.0276 f=-0.14 shape=(1, 9000, 1)
logits [[ 1.7755238 -1.3986495  1.4904847 -2.4254508]]
Iteration 200 of 1000: loss=0.332 " + "l1=0.297" + "l2=0.0346 f=-0.132 shape=(1, 9000, 1)
logits [[ 1.6446741 -1.3246638  1.4392912 -2.2875848]]
Iteration 300 of 1000: loss=0.322 " + "l1=0.282" + "l2=0.0392 f=-0.13 shape=(1, 9000, 1)
logits [[ 1.5483398 -1.2753885  1.4055897 -2.1987123]]
Iteration 400 of 1000: loss=0.313 " + "l1=0.271" + "l2=0.0423 f=-0.131 shape=(1, 9000, 1)
logits [[ 1.4724967 -1.2383906  1.375981  -2.135602 ]]
Iteration 500 of 1000: loss=0.307 " + "l1=0.263" + "l2=0.0445 f=-0.131 shape=(1, 9000, 1)
logits [[ 1.4146363 -1.2121464  1.3554007 -2.0831063]]
Iteration 600 of 1000: loss=0.301 " + "l1=0.255" + "l2=0.0468 f=-0.13 shape=(1, 9000, 1)
logits [[ 1.3599302 -1.1867365  1.3373865 -2.0302877]]
Iteration 700 of 1000: loss=0.296 " + "l1=0.249" + "l2=0.0474 f=-0.128 shape=(1, 9000, 1)
logits [[ 1.3244895 -1.1645906  1.3228141 -1.9952064]]
Iteration 800 of 1000: loss=0.292 " + "l1=0.244" + "l2=0.0479 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.3012922 -1.1420676  1.3026615 -1.9633346]]
Iteration 900 of 1000: loss=0.289 " + "l1=0.241" + "l2=0.0484 f=-0.122 shape=(1, 9000, 1)
logits [[ 1.2859972 -1.1246022  1.2857977 -1.935176 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.94 " + "l1=3.94" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 2.2642617 -1.6717454  1.6825888 -2.9793472]]
Iteration 100 of 1000: loss=1.79 " + "l1=1.08" + "l2=0.703 f=-0.0425 shape=(1, 9000, 1)
logits [[ 0.5756956  -0.5085138   0.57419616 -0.81131876]]
Iteration 200 of 1000: loss=1.1 " + "l1=0.161" + "l2=0.939 f=-0.0236 shape=(1, 9000, 1)
logits [[-0.00659423 -0.10608958  0.05453037 -0.03607292]]
Iteration 300 of 1000: loss=0.847 " + "l1=0.0089" + "l2=0.838 f=-0.0543 shape=(1, 9000, 1)
logits [[-0.16618039 -0.0150857  -0.0061817  -0.02988771]]
Iteration 400 of 1000: loss=0.762 " + "l1=0.0164" + "l2=0.746 f=-0.0633 shape=(1, 9000, 1)
logits [[-0.18750185 -0.0262848  -0.0098588  -0.02974713]]
Iteration 500 of 1000: loss=0.711 " + "l1=0" + "l2=0.711 f=-0.0697 shape=(1, 9000, 1)
logits [[-0.21530657 -0.0157666  -0.01604456 -0.0315004 ]]
Iteration 600 of 1000: loss=0.67 " + "l1=0.00251" + "l2=0.667 f=-0.0705 shape=(1, 9000, 1)
logits [[-0.22640565 -0.01658215 -0.01407704 -0.02477801]]
Iteration 700 of 1000: loss=0.636 " + "l1=0" + "l2=0.636 f=-0.0823 shape=(1, 9000, 1)
logits [[-0.28214338 -0.00304111 -0.00521547 -0.03896815]]
Iteration 800 of 1000: loss=0.583 " + "l1=0.0184" + "l2=0.564 f=-0.0886 shape=(1, 9000, 1)
logits [[-0.31293243 -0.00669218  0.01170505 -0.04629136]]
Iteration 900 of 1000: loss=0.546 " + "l1=0" + "l2=0.546 f=-0.0902 shape=(1, 9000, 1)
logits [[-0.3531904   0.01232865  0.00683414 -0.02677466]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.16 " + "l1=2.16" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 2.2642617 -1.6717454  1.6825888 -2.9793472]]
Iteration 100 of 1000: loss=1.29 " + "l1=0.998" + "l2=0.292 f=-0.0753 shape=(1, 9000, 1)
logits [[ 0.9481914  -0.85762864  0.95746535 -1.3490565 ]]
Iteration 200 of 1000: loss=1.13 " + "l1=0.781" + "l2=0.347 f=-0.0561 shape=(1, 9000, 1)
logits [[ 0.7539983  -0.65904725  0.76136625 -1.0806123 ]]
Iteration 300 of 1000: loss=1.01 " + "l1=0.612" + "l2=0.396 f=-0.0414 shape=(1, 9000, 1)
logits [[ 0.5799466  -0.52626234  0.58649606 -0.8056534 ]]
Iteration 400 of 1000: loss=0.918 " + "l1=0.451" + "l2=0.467 f=-0.0231 shape=(1, 9000, 1)
logits [[ 0.38963673 -0.3978208   0.42149058 -0.5056347 ]]
Iteration 500 of 1000: loss=0.858 " + "l1=0.336" + "l2=0.522 f=-0.015 shape=(1, 9000, 1)
logits [[ 0.2556236  -0.305744    0.30486336 -0.31456617]]
Iteration 600 of 1000: loss=0.793 " + "l1=0.233" + "l2=0.56 f=-0.013 shape=(1, 9000, 1)
logits [[ 0.12703797 -0.23098041  0.19251803 -0.14060554]]
Iteration 700 of 1000: loss=0.706 " + "l1=0.107" + "l2=0.599 f=-0.0328 shape=(1, 9000, 1)
logits [[-0.1147479  -0.11787557  0.07706247  0.02417735]]
Iteration 800 of 1000: loss=0.644 " + "l1=0.0373" + "l2=0.606 f=-0.0448 shape=(1, 9000, 1)
logits [[-0.22759795 -0.01646633  0.05141897  0.01364422]]
Iteration 900 of 1000: loss=0.617 " + "l1=0.0115" + "l2=0.606 f=-0.0515 shape=(1, 9000, 1)
logits [[-0.28620172  0.02326463  0.04425788  0.01283846]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.28 " + "l1=1.28" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 2.2642617 -1.6717454  1.6825888 -2.9793472]]
Iteration 100 of 1000: loss=0.879 " + "l1=0.716" + "l2=0.163 f=-0.0977 shape=(1, 9000, 1)
logits [[ 1.1634861 -1.0399768  1.1630323 -1.6773009]]
Iteration 200 of 1000: loss=0.81 " + "l1=0.639" + "l2=0.171 f=-0.0898 shape=(1, 9000, 1)
logits [[ 1.0399932  -0.92227906  1.0439825  -1.52075   ]]
Iteration 300 of 1000: loss=0.763 " + "l1=0.576" + "l2=0.187 f=-0.0805 shape=(1, 9000, 1)
logits [[ 0.93446815 -0.8329783   0.9402318  -1.3639023 ]]
Iteration 400 of 1000: loss=0.73 " + "l1=0.528" + "l2=0.202 f=-0.0754 shape=(1, 9000, 1)
logits [[ 0.8563092  -0.76580924  0.858555   -1.25059   ]]
Iteration 500 of 1000: loss=0.702 " + "l1=0.481" + "l2=0.221 f=-0.0745 shape=(1, 9000, 1)
logits [[ 0.77273184 -0.70529085  0.7759972  -1.141309  ]]
Iteration 600 of 1000: loss=0.679 " + "l1=0.448" + "l2=0.232 f=-0.0716 shape=(1, 9000, 1)
logits [[ 0.714189   -0.66133016  0.71641886 -1.055533  ]]
Iteration 700 of 1000: loss=0.647 " + "l1=0.385" + "l2=0.262 f=-0.065 shape=(1, 9000, 1)
logits [[ 0.60606015 -0.5715652   0.6117253  -0.90617913]]
Iteration 800 of 1000: loss=0.622 " + "l1=0.344" + "l2=0.279 f=-0.0573 shape=(1, 9000, 1)
logits [[ 0.53118306 -0.52354383  0.5342306  -0.77121603]]
Iteration 900 of 1000: loss=0.605 " + "l1=0.314" + "l2=0.29 f=-0.0485 shape=(1, 9000, 1)
logits [[ 0.47244248 -0.4860045   0.4806067  -0.66114235]]
--- 295.7895722389221 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00582 " + "l1=0.00582" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 2.2642617 -1.6717454  1.6825888 -2.9793472]]
Iteration 100 of 1000: loss=0.00569 " + "l1=0.00554" + "l2=0.000159 f=-0.174 shape=(1, 9000, 1)
logits [[ 2.23467   -1.661874   1.6811081 -2.9497368]]
Iteration 200 of 1000: loss=0.00565 " + "l1=0.00553" + "l2=0.000122 f=-0.174 shape=(1, 9000, 1)
logits [[ 2.2342741 -1.6613532  1.6813296 -2.9496152]]
Iteration 300 of 1000: loss=0.00564 " + "l1=0.0055" + "l2=0.000145 f=-0.174 shape=(1, 9000, 1)
logits [[ 2.231069  -1.6600406  1.6811345 -2.946868 ]]
Iteration 400 of 1000: loss=0.00565 " + "l1=0.00547" + "l2=0.000183 f=-0.174 shape=(1, 9000, 1)
logits [[ 2.227823  -1.6586673  1.6808745 -2.9442885]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0582 " + "l1=0.0582" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 2.2642617 -1.6717454  1.6825888 -2.9793472]]
Iteration 100 of 1000: loss=0.045 " + "l1=0.0366" + "l2=0.00833 f=-0.158 shape=(1, 9000, 1)
logits [[ 2.032122  -1.5884633  1.6658229 -2.7408361]]
Iteration 200 of 1000: loss=0.0411 " + "l1=0.0312" + "l2=0.00993 f=-0.156 shape=(1, 9000, 1)
logits [[ 1.9755981 -1.5708388  1.6634703 -2.6910074]]
Iteration 300 of 1000: loss=0.038 " + "l1=0.0264" + "l2=0.0116 f=-0.155 shape=(1, 9000, 1)
logits [[ 1.9215034 -1.5514926  1.6578461 -2.6460776]]
Iteration 400 of 1000: loss=0.0348 " + "l1=0.0213" + "l2=0.0135 f=-0.152 shape=(1, 9000, 1)
logits [[ 1.8635424 -1.5294046  1.6507183 -2.594372 ]]
Iteration 500 of 1000: loss=0.0321 " + "l1=0.018" + "l2=0.0141 f=-0.153 shape=(1, 9000, 1)
logits [[ 1.8312789 -1.5192345  1.6513904 -2.575022 ]]
Iteration 600 of 1000: loss=0.0294 " + "l1=0.0137" + "l2=0.0157 f=-0.153 shape=(1, 9000, 1)
logits [[ 1.7872407 -1.5041292  1.6498821 -2.5433757]]
Iteration 700 of 1000: loss=0.0265 " + "l1=0.00943" + "l2=0.0171 f=-0.153 shape=(1, 9000, 1)
logits [[ 1.7441901 -1.4920373  1.6499029 -2.513114 ]]
Iteration 800 of 1000: loss=0.0237 " + "l1=0.00559" + "l2=0.0181 f=-0.153 shape=(1, 9000, 1)
logits [[ 1.7084457 -1.484812   1.6525542 -2.4868073]]
Iteration 900 of 1000: loss=0.0208 " + "l1=0.00159" + "l2=0.0192 f=-0.152 shape=(1, 9000, 1)
logits [[ 1.6666701 -1.4750577  1.650769  -2.4522314]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.032 " + "l1=0.032" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 2.2642617 -1.6717454  1.6825888 -2.9793472]]
Iteration 100 of 1000: loss=0.028 " + "l1=0.0253" + "l2=0.00264 f=-0.166 shape=(1, 9000, 1)
logits [[ 2.135676  -1.6268885  1.6749909 -2.848038 ]]
Iteration 200 of 1000: loss=0.0269 " + "l1=0.0237" + "l2=0.00324 f=-0.164 shape=(1, 9000, 1)
logits [[ 2.1051707 -1.6151531  1.6745996 -2.818945 ]]
Iteration 300 of 1000: loss=0.0261 " + "l1=0.0222" + "l2=0.00389 f=-0.162 shape=(1, 9000, 1)
logits [[ 2.0763383 -1.6030241  1.6729327 -2.79323  ]]
Iteration 400 of 1000: loss=0.0253 " + "l1=0.0207" + "l2=0.00454 f=-0.161 shape=(1, 9000, 1)
logits [[ 2.0494056 -1.5922501  1.6722864 -2.7715244]]
Iteration 500 of 1000: loss=0.0245 " + "l1=0.0196" + "l2=0.00488 f=-0.16 shape=(1, 9000, 1)
logits [[ 2.0267205 -1.5827589  1.670839  -2.7539623]]
Iteration 600 of 1000: loss=0.0237 " + "l1=0.0184" + "l2=0.0053 f=-0.159 shape=(1, 9000, 1)
logits [[ 2.0031009 -1.5728618  1.6684521 -2.7349188]]
Iteration 700 of 1000: loss=0.023 " + "l1=0.0172" + "l2=0.00574 f=-0.159 shape=(1, 9000, 1)
logits [[ 1.9781387 -1.5620254  1.6648756 -2.7152917]]
Iteration 800 of 1000: loss=0.0222 " + "l1=0.0161" + "l2=0.00614 f=-0.158 shape=(1, 9000, 1)
logits [[ 1.9545852 -1.5523595  1.6620857 -2.6977377]]
Iteration 900 of 1000: loss=0.0215 " + "l1=0.0152" + "l2=0.00636 f=-0.159 shape=(1, 9000, 1)
logits [[ 1.9368911 -1.5458289  1.6611786 -2.6882946]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0451 " + "l1=0.0451" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 2.2642617 -1.6717454  1.6825888 -2.9793472]]
Iteration 100 of 1000: loss=0.0372 " + "l1=0.0321" + "l2=0.00505 f=-0.162 shape=(1, 9000, 1)
logits [[ 2.0858872 -1.6083326  1.6712456 -2.7958727]]
Iteration 200 of 1000: loss=0.0349 " + "l1=0.0283" + "l2=0.00654 f=-0.158 shape=(1, 9000, 1)
logits [[ 2.0348182 -1.5891372  1.6693933 -2.748896 ]]
Iteration 300 of 1000: loss=0.033 " + "l1=0.0255" + "l2=0.00746 f=-0.157 shape=(1, 9000, 1)
logits [[ 1.9959869 -1.575349   1.6665174 -2.7152529]]
Iteration 400 of 1000: loss=0.0313 " + "l1=0.023" + "l2=0.00826 f=-0.157 shape=(1, 9000, 1)
logits [[ 1.9604764 -1.562228   1.6634047 -2.6877623]]
Iteration 500 of 1000: loss=0.0297 " + "l1=0.0207" + "l2=0.00896 f=-0.156 shape=(1, 9000, 1)
logits [[ 1.9266003 -1.5493696  1.6593975 -2.6619842]]
Iteration 600 of 1000: loss=0.028 " + "l1=0.0184" + "l2=0.00964 f=-0.156 shape=(1, 9000, 1)
logits [[ 1.8953402 -1.5379896  1.6579374 -2.6386123]]
Iteration 700 of 1000: loss=0.0265 " + "l1=0.0163" + "l2=0.0102 f=-0.156 shape=(1, 9000, 1)
logits [[ 1.8676106 -1.5280564  1.6577251 -2.6217754]]
Iteration 800 of 1000: loss=0.0249 " + "l1=0.0141" + "l2=0.0108 f=-0.157 shape=(1, 9000, 1)
logits [[ 1.8371158 -1.5179168  1.6556929 -2.6018941]]
Iteration 900 of 1000: loss=0.0231 " + "l1=0.0117" + "l2=0.0114 f=-0.158 shape=(1, 9000, 1)
logits [[ 1.805634  -1.5100802  1.6541852 -2.579901 ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0516 " + "l1=0.0516" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 2.2642617 -1.6717454  1.6825888 -2.9793472]]
Iteration 100 of 1000: loss=0.0413 " + "l1=0.0346" + "l2=0.00664 f=-0.159 shape=(1, 9000, 1)
logits [[ 2.0587993 -1.5974534  1.6688178 -2.7670121]]
Iteration 200 of 1000: loss=0.0381 " + "l1=0.0297" + "l2=0.00842 f=-0.156 shape=(1, 9000, 1)
logits [[ 2.0004873 -1.5775598  1.6655407 -2.7135074]]
Iteration 300 of 1000: loss=0.0358 " + "l1=0.0265" + "l2=0.00931 f=-0.156 shape=(1, 9000, 1)
logits [[ 1.9614137 -1.565169   1.6633747 -2.6833901]]
Iteration 400 of 1000: loss=0.0335 " + "l1=0.0231" + "l2=0.0104 f=-0.155 shape=(1, 9000, 1)
logits [[ 1.9180555 -1.5491005  1.6580505 -2.6484673]]
Iteration 500 of 1000: loss=0.0312 " + "l1=0.0198" + "l2=0.0114 f=-0.155 shape=(1, 9000, 1)
logits [[ 1.8782849 -1.5349011  1.6548132 -2.6173437]]
Iteration 600 of 1000: loss=0.0292 " + "l1=0.0169" + "l2=0.0123 f=-0.155 shape=(1, 9000, 1)
logits [[ 1.8436587 -1.5224237  1.6535786 -2.593927 ]]
Iteration 700 of 1000: loss=0.0271 " + "l1=0.0136" + "l2=0.0134 f=-0.155 shape=(1, 9000, 1)
logits [[ 1.8049608 -1.5087832  1.6512151 -2.5668664]]
Iteration 800 of 1000: loss=0.0248 " + "l1=0.0105" + "l2=0.0142 f=-0.155 shape=(1, 9000, 1)
logits [[ 1.7688072 -1.4988785  1.6500729 -2.54187  ]]
Iteration 900 of 1000: loss=0.0225 " + "l1=0.00745" + "l2=0.015 f=-0.155 shape=(1, 9000, 1)
logits [[ 1.7351068 -1.4909656  1.6511074 -2.5169218]]
--- 272.2125413417816 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0524 " + "l1=0.0524" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 2.2642617 -1.6717454  1.6825888 -2.9793472]]
Iteration 100 of 1000: loss=0.0513 " + "l1=0.0505" + "l2=0.000839 f=-0.167 shape=(1, 9000, 1)
logits [[ 2.1823118 -1.635222   1.6499457 -2.8664718]]
Iteration 200 of 1000: loss=0.0511 " + "l1=0.0502" + "l2=0.000919 f=-0.166 shape=(1, 9000, 1)
logits [[ 2.1675384 -1.6265619  1.643936  -2.847698 ]]
Iteration 300 of 1000: loss=0.0509 " + "l1=0.0498" + "l2=0.00106 f=-0.164 shape=(1, 9000, 1)
logits [[ 2.1534562 -1.6184396  1.6379216 -2.8290393]]
Iteration 400 of 1000: loss=0.0507 " + "l1=0.0495" + "l2=0.00119 f=-0.163 shape=(1, 9000, 1)
logits [[ 2.1415536 -1.6116488  1.6330243 -2.813174 ]]
Iteration 500 of 1000: loss=0.0507 " + "l1=0.0493" + "l2=0.00138 f=-0.161 shape=(1, 9000, 1)
logits [[ 2.1301112 -1.6050432  1.6285268 -2.7976928]]
Iteration 600 of 1000: loss=0.0505 " + "l1=0.049" + "l2=0.00149 f=-0.16 shape=(1, 9000, 1)
logits [[ 2.1202366 -1.5993826  1.6243448 -2.7839613]]
Iteration 700 of 1000: loss=0.0505 " + "l1=0.0488" + "l2=0.00165 f=-0.158 shape=(1, 9000, 1)
logits [[ 2.1106777 -1.5937498  1.6202848 -2.7707279]]
Iteration 800 of 1000: loss=0.0504 " + "l1=0.0486" + "l2=0.00178 f=-0.157 shape=(1, 9000, 1)
logits [[ 2.102052  -1.5884967  1.6166188 -2.758676 ]]
Iteration 900 of 1000: loss=0.0504 " + "l1=0.0484" + "l2=0.00201 f=-0.156 shape=(1, 9000, 1)
logits [[ 2.092975  -1.5832214  1.6129667 -2.7462096]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.524 " + "l1=0.524" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 2.2642617 -1.6717454  1.6825888 -2.9793472]]
Iteration 100 of 1000: loss=0.418 " + "l1=0.353" + "l2=0.0651 f=-0.102 shape=(1, 9000, 1)
logits [[ 1.542863  -1.3660442  1.4028717 -1.9863454]]
Iteration 200 of 1000: loss=0.389 " + "l1=0.304" + "l2=0.0847 f=-0.0819 shape=(1, 9000, 1)
logits [[ 1.3509552 -1.2974716  1.3114028 -1.6924715]]
Iteration 300 of 1000: loss=0.368 " + "l1=0.273" + "l2=0.0954 f=-0.068 shape=(1, 9000, 1)
logits [[ 1.2366941 -1.2567841  1.2372289 -1.4889553]]
Iteration 400 of 1000: loss=0.352 " + "l1=0.259" + "l2=0.0927 f=-0.0607 shape=(1, 9000, 1)
logits [[ 1.1977512 -1.2429972  1.197092  -1.3946272]]
Iteration 500 of 1000: loss=0.34 " + "l1=0.246" + "l2=0.0934 f=-0.0562 shape=(1, 9000, 1)
logits [[ 1.1554031 -1.2352729  1.1595738 -1.304574 ]]
Iteration 600 of 1000: loss=0.33 " + "l1=0.236" + "l2=0.0944 f=-0.0505 shape=(1, 9000, 1)
logits [[ 1.1263682 -1.2284611  1.1279557 -1.2278049]]
Iteration 700 of 1000: loss=0.321 " + "l1=0.228" + "l2=0.0932 f=-0.0458 shape=(1, 9000, 1)
logits [[ 1.1048744 -1.2325046  1.1098409 -1.1656002]]
Iteration 800 of 1000: loss=0.313 " + "l1=0.219" + "l2=0.0946 f=-0.0419 shape=(1, 9000, 1)
logits [[ 1.072293  -1.2327607  1.0901037 -1.0974284]]
Iteration 900 of 1000: loss=0.307 " + "l1=0.21" + "l2=0.0973 f=-0.0379 shape=(1, 9000, 1)
logits [[ 1.038118  -1.2328106  1.0701412 -1.0271449]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.24 " + "l1=5.24" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 2.2642617 -1.6717454  1.6825888 -2.9793472]]
Iteration 100 of 1000: loss=0.859 " + "l1=0" + "l2=0.859 f=0.0502 shape=(1, 9000, 1)
logits [[ 0.19499418 -1.014986    0.50826323  0.5124416 ]]
Iteration 200 of 1000: loss=0.67 " + "l1=0" + "l2=0.67 f=0.0377 shape=(1, 9000, 1)
logits [[ 0.15260074 -0.9544368   0.47271776  0.47971866]]
Iteration 300 of 1000: loss=0.626 " + "l1=0" + "l2=0.626 f=0.0348 shape=(1, 9000, 1)
logits [[ 0.12487102 -0.93761194  0.4545471   0.49743044]]
Iteration 400 of 1000: loss=0.595 " + "l1=0" + "l2=0.595 f=0.0345 shape=(1, 9000, 1)
logits [[ 0.11756507 -0.9339115   0.45187518  0.5025236 ]]
Iteration 500 of 1000: loss=0.563 " + "l1=0" + "l2=0.563 f=0.0331 shape=(1, 9000, 1)
logits [[ 0.12964526 -0.93471116  0.46044242  0.47694373]]
Iteration 600 of 1000: loss=0.541 " + "l1=0" + "l2=0.541 f=0.0327 shape=(1, 9000, 1)
logits [[ 0.12515467 -0.93618476  0.46432248  0.47756353]]
Iteration 700 of 1000: loss=0.523 " + "l1=0" + "l2=0.523 f=0.0339 shape=(1, 9000, 1)
logits [[ 0.11653808 -0.93609524  0.47187802  0.4831341 ]]
Iteration 800 of 1000: loss=0.503 " + "l1=0.00431" + "l2=0.499 f=0.0352 shape=(1, 9000, 1)
logits [[ 0.11710414 -0.93656665  0.48224482  0.47793028]]
Iteration 900 of 1000: loss=0.48 " + "l1=0.00756" + "l2=0.472 f=0.0369 shape=(1, 9000, 1)
logits [[ 0.11395708 -0.9387866   0.48992422  0.48236564]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.88 " + "l1=2.88" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 2.2642617 -1.6717454  1.6825888 -2.9793472]]
Iteration 100 of 1000: loss=0.869 " + "l1=0.0147" + "l2=0.854 f=0.0565 shape=(1, 9000, 1)
logits [[ 0.25560454 -1.045648    0.5213952   0.4946058 ]]
Iteration 200 of 1000: loss=0.646 " + "l1=0.0127" + "l2=0.634 f=0.0361 shape=(1, 9000, 1)
logits [[ 0.16736019 -0.96124744  0.48066384  0.4576615 ]]
Iteration 300 of 1000: loss=0.577 " + "l1=0.00646" + "l2=0.571 f=0.0346 shape=(1, 9000, 1)
logits [[ 0.13503131 -0.9407239   0.4779284   0.4661797 ]]
Iteration 400 of 1000: loss=0.545 " + "l1=0.0201" + "l2=0.525 f=0.0312 shape=(1, 9000, 1)
logits [[ 0.12104967 -0.9359967   0.48806217  0.45160407]]
Iteration 500 of 1000: loss=0.507 " + "l1=0" + "l2=0.507 f=0.0296 shape=(1, 9000, 1)
logits [[ 0.08018353 -0.9258035   0.47690776  0.4871799 ]]
Iteration 600 of 1000: loss=0.477 " + "l1=0" + "l2=0.477 f=0.0305 shape=(1, 9000, 1)
logits [[ 0.08796555 -0.9169249   0.47540405  0.47571746]]
Iteration 700 of 1000: loss=0.455 " + "l1=0" + "l2=0.455 f=0.0316 shape=(1, 9000, 1)
logits [[ 0.08487432 -0.90689397  0.47040856  0.4781301 ]]
Iteration 800 of 1000: loss=0.434 " + "l1=0" + "l2=0.434 f=0.0341 shape=(1, 9000, 1)
logits [[ 0.09299289 -0.8962032   0.4627316   0.4767001 ]]
Iteration 900 of 1000: loss=0.416 " + "l1=0" + "l2=0.416 f=0.0398 shape=(1, 9000, 1)
logits [[ 0.10525593 -0.8965342   0.46036     0.489952  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.7 " + "l1=1.7" + "l2=0 f=-0.176 shape=(1, 9000, 1)
logits [[ 2.2642617 -1.6717454  1.6825888 -2.9793472]]
Iteration 100 of 1000: loss=0.835 " + "l1=0.455" + "l2=0.38 f=0.00546 shape=(1, 9000, 1)
logits [[ 0.81139135 -1.1430734   0.87658846 -0.52306056]]
Iteration 200 of 1000: loss=0.692 " + "l1=0.226" + "l2=0.466 f=0.0371 shape=(1, 9000, 1)
logits [[ 0.52759147 -1.1050452   0.71020603  0.01570786]]
Iteration 300 of 1000: loss=0.585 " + "l1=0.0616" + "l2=0.524 f=0.0389 shape=(1, 9000, 1)
logits [[ 0.25098386 -1.0256673   0.55981106  0.37037542]]
Iteration 400 of 1000: loss=0.51 " + "l1=0.00489" + "l2=0.505 f=0.037 shape=(1, 9000, 1)
logits [[ 0.11871508 -0.9781467   0.51121783  0.49617898]]
Iteration 500 of 1000: loss=0.473 " + "l1=0.0163" + "l2=0.457 f=0.0373 shape=(1, 9000, 1)
logits [[ 0.12254956 -0.9623382   0.51964605  0.46945304]]
Iteration 600 of 1000: loss=0.438 " + "l1=0" + "l2=0.438 f=0.0432 shape=(1, 9000, 1)
logits [[ 0.10449602 -0.9448616   0.50653857  0.5066875 ]]
Iteration 700 of 1000: loss=0.418 " + "l1=0" + "l2=0.418 f=0.05 shape=(1, 9000, 1)
logits [[ 0.10637352 -0.9454016   0.51480454  0.5241854 ]]
Iteration 800 of 1000: loss=0.4 " + "l1=0" + "l2=0.4 f=0.0502 shape=(1, 9000, 1)
logits [[ 0.08843084 -0.9358103   0.5108467   0.53743076]]
Iteration 900 of 1000: loss=0.378 " + "l1=0" + "l2=0.378 f=0.0467 shape=(1, 9000, 1)
logits [[ 0.08991925 -0.9412588   0.5178246   0.52027   ]]
--- 301.9744544029236 seconds ---
Adv result:3
Loading record A01302
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0317 " + "l1=0.0317" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[ 2.7942548  -0.38008782  2.175296   -8.047461  ]]
Iteration 100 of 1000: loss=0.0304 " + "l1=0.0295" + "l2=0.000916 f=-0.879 shape=(1, 9000, 1)
logits [[ 2.6679568  -0.28158674  2.1281648  -8.030646  ]]
Iteration 200 of 1000: loss=0.0301 " + "l1=0.0291" + "l2=0.000984 f=-0.882 shape=(1, 9000, 1)
logits [[ 2.6480803  -0.26590276  2.1211739  -8.030979  ]]
Iteration 300 of 1000: loss=0.0299 " + "l1=0.0287" + "l2=0.00113 f=-0.885 shape=(1, 9000, 1)
logits [[ 2.6249077  -0.24944265  2.1146498  -8.0301695 ]]
Iteration 400 of 1000: loss=0.0296 " + "l1=0.0283" + "l2=0.00127 f=-0.888 shape=(1, 9000, 1)
logits [[ 2.6004384 -0.2325703  2.1076288 -8.028881 ]]
Iteration 500 of 1000: loss=0.0294 " + "l1=0.0279" + "l2=0.00145 f=-0.891 shape=(1, 9000, 1)
logits [[ 2.5771031  -0.21630602  2.100786   -8.02669   ]]
Iteration 600 of 1000: loss=0.0291 " + "l1=0.0276" + "l2=0.00153 f=-0.894 shape=(1, 9000, 1)
logits [[ 2.5555696  -0.20111553  2.094008   -8.023933  ]]
Iteration 700 of 1000: loss=0.0289 " + "l1=0.0272" + "l2=0.00174 f=-0.896 shape=(1, 9000, 1)
logits [[ 2.5344646  -0.18601473  2.0868182  -8.020478  ]]
Iteration 800 of 1000: loss=0.0288 " + "l1=0.0268" + "l2=0.00191 f=-0.899 shape=(1, 9000, 1)
logits [[ 2.5133996  -0.17087793  2.0798304  -8.017147  ]]
Iteration 900 of 1000: loss=0.0285 " + "l1=0.0265" + "l2=0.00201 f=-0.901 shape=(1, 9000, 1)
logits [[ 2.493457   -0.15663172  2.0732872  -8.014003  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.317 " + "l1=0.317" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[ 2.7942548  -0.38008782  2.175296   -8.047461  ]]
Iteration 100 of 1000: loss=0.197 " + "l1=0.141" + "l2=0.0561 f=-0.971 shape=(1, 9000, 1)
logits [[ 1.8051198   0.39343083  1.806921   -7.890863  ]]
Iteration 200 of 1000: loss=0.183 " + "l1=0.127" + "l2=0.0555 f=-0.979 shape=(1, 9000, 1)
logits [[ 1.7469082   0.47243527  1.7473847  -7.881167  ]]
Iteration 300 of 1000: loss=0.173 " + "l1=0.116" + "l2=0.0571 f=-0.982 shape=(1, 9000, 1)
logits [[ 1.6835513  0.5374727  1.700175  -7.84865  ]]
Iteration 400 of 1000: loss=0.165 " + "l1=0.109" + "l2=0.0555 f=-0.978 shape=(1, 9000, 1)
logits [[ 1.6574603   0.57460946  1.6684016  -7.81333   ]]
Iteration 500 of 1000: loss=0.157 " + "l1=0.101" + "l2=0.0551 f=-0.975 shape=(1, 9000, 1)
logits [[ 1.610028   0.6256998  1.6399587 -7.7738466]]
Iteration 600 of 1000: loss=0.147 " + "l1=0.0914" + "l2=0.056 f=-0.97 shape=(1, 9000, 1)
logits [[ 1.5473417  0.6911527  1.6054192 -7.723348 ]]
Iteration 700 of 1000: loss=0.137 " + "l1=0.0784" + "l2=0.0586 f=-0.964 shape=(1, 9000, 1)
logits [[ 1.456217    0.77922255  1.5631769  -7.654966  ]]
Iteration 800 of 1000: loss=0.126 " + "l1=0.063" + "l2=0.0626 f=-0.958 shape=(1, 9000, 1)
logits [[ 1.3434243  0.8822073  1.5120928 -7.5698733]]
Iteration 900 of 1000: loss=0.109 " + "l1=0.037" + "l2=0.0718 f=-0.953 shape=(1, 9000, 1)
logits [[ 1.1638772  1.0468686  1.4163963 -7.437447 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.17 " + "l1=3.17" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[ 2.7942548  -0.38008782  2.175296   -8.047461  ]]
Iteration 100 of 1000: loss=0.302 " + "l1=0" + "l2=0.302 f=-1.05 shape=(1, 9000, 1)
logits [[ 0.6837607  1.3797132  1.3632634 -7.6219816]]
Iteration 200 of 1000: loss=0.242 " + "l1=0" + "l2=0.242 f=-1.04 shape=(1, 9000, 1)
logits [[ 0.73624736  1.3716863   1.3578087  -7.623245  ]]
Iteration 300 of 1000: loss=0.209 " + "l1=0.0038" + "l2=0.205 f=-1.03 shape=(1, 9000, 1)
logits [[ 0.7815899  1.3456116  1.349408  -7.583251 ]]
Iteration 400 of 1000: loss=0.178 " + "l1=0" + "l2=0.178 f=-1.01 shape=(1, 9000, 1)
logits [[ 0.7982944  1.3374275  1.3299698 -7.5020766]]
Iteration 500 of 1000: loss=0.159 " + "l1=0" + "l2=0.159 f=-0.994 shape=(1, 9000, 1)
logits [[ 0.8141092  1.3293748  1.3195097 -7.4407535]]
Iteration 600 of 1000: loss=0.144 " + "l1=0" + "l2=0.144 f=-0.981 shape=(1, 9000, 1)
logits [[ 0.8289518  1.3190382  1.3109871 -7.3824353]]
Iteration 700 of 1000: loss=0.133 " + "l1=0" + "l2=0.133 f=-0.967 shape=(1, 9000, 1)
logits [[ 0.84039754  1.312802    1.3009446  -7.3236027 ]]
Iteration 800 of 1000: loss=0.125 " + "l1=0" + "l2=0.125 f=-0.956 shape=(1, 9000, 1)
logits [[ 0.8441574  1.3105091  1.2898431 -7.2685676]]
Iteration 900 of 1000: loss=0.116 " + "l1=0" + "l2=0.116 f=-0.946 shape=(1, 9000, 1)
logits [[ 0.85240483  1.3024188   1.281804   -7.2198086 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.75 " + "l1=1.75" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[ 2.7942548  -0.38008782  2.175296   -8.047461  ]]
Iteration 100 of 1000: loss=0.283 " + "l1=0.00449" + "l2=0.279 f=-1.05 shape=(1, 9000, 1)
logits [[ 0.73589253  1.3530312   1.3612037  -7.6355414 ]]
Iteration 200 of 1000: loss=0.231 " + "l1=0" + "l2=0.231 f=-1.04 shape=(1, 9000, 1)
logits [[ 0.7533717  1.3636727  1.3526375 -7.626757 ]]
Iteration 300 of 1000: loss=0.202 " + "l1=0" + "l2=0.202 f=-1.03 shape=(1, 9000, 1)
logits [[ 0.76124126  1.3657726   1.3436053  -7.582894  ]]
Iteration 400 of 1000: loss=0.172 " + "l1=0" + "l2=0.172 f=-1.01 shape=(1, 9000, 1)
logits [[ 0.78761995  1.3521173   1.3352995  -7.5115595 ]]
Iteration 500 of 1000: loss=0.149 " + "l1=0" + "l2=0.149 f=-0.991 shape=(1, 9000, 1)
logits [[ 0.81571585  1.3341914   1.3286166  -7.4439635 ]]
Iteration 600 of 1000: loss=0.135 " + "l1=0" + "l2=0.135 f=-0.977 shape=(1, 9000, 1)
logits [[ 0.821989   1.3283349  1.3187659 -7.3764057]]
Iteration 700 of 1000: loss=0.125 " + "l1=0" + "l2=0.125 f=-0.965 shape=(1, 9000, 1)
logits [[ 0.81711626  1.3324777   1.3006656  -7.308265  ]]
Iteration 800 of 1000: loss=0.11 " + "l1=0.00267" + "l2=0.108 f=-0.95 shape=(1, 9000, 1)
logits [[ 0.86257493  1.2953749   1.3002269  -7.2571945 ]]
Iteration 900 of 1000: loss=0.0979 " + "l1=0" + "l2=0.0979 f=-0.941 shape=(1, 9000, 1)
logits [[ 0.8644115  1.2943302  1.2792156 -7.2006297]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.03 " + "l1=1.03" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[ 2.7942548  -0.38008782  2.175296   -8.047461  ]]
Iteration 100 of 1000: loss=0.279 " + "l1=0.00949" + "l2=0.27 f=-1.04 shape=(1, 9000, 1)
logits [[ 0.765836   1.33257    1.3617775 -7.640166 ]]
Iteration 200 of 1000: loss=0.226 " + "l1=0.00544" + "l2=0.22 f=-1.04 shape=(1, 9000, 1)
logits [[ 0.77634776  1.3429952   1.3597329  -7.6384897 ]]
Iteration 300 of 1000: loss=0.191 " + "l1=0.00363" + "l2=0.188 f=-1.03 shape=(1, 9000, 1)
logits [[ 0.78637886  1.3439246   1.3550963  -7.5870786 ]]
Iteration 400 of 1000: loss=0.161 " + "l1=0.00132" + "l2=0.16 f=-1.01 shape=(1, 9000, 1)
logits [[ 0.7972165  1.3460313  1.350082  -7.518647 ]]
Iteration 500 of 1000: loss=0.139 " + "l1=0" + "l2=0.139 f=-0.989 shape=(1, 9000, 1)
logits [[ 0.8010149  1.3451765  1.3326089 -7.433353 ]]
Iteration 600 of 1000: loss=0.12 " + "l1=0.00245" + "l2=0.118 f=-0.971 shape=(1, 9000, 1)
logits [[ 0.83418256  1.3182188   1.3257542  -7.363126  ]]
Iteration 700 of 1000: loss=0.0985 " + "l1=0" + "l2=0.0985 f=-0.959 shape=(1, 9000, 1)
logits [[ 0.8533686  1.302876   1.2990144 -7.2899575]]
Iteration 800 of 1000: loss=0.0864 " + "l1=0" + "l2=0.0864 f=-0.949 shape=(1, 9000, 1)
logits [[ 0.8498036  1.3016042  1.2836847 -7.229294 ]]
Iteration 900 of 1000: loss=0.0773 " + "l1=0" + "l2=0.0773 f=-0.94 shape=(1, 9000, 1)
logits [[ 0.85470635  1.2918768   1.2783544  -7.1849213 ]]
--- 307.06477546691895 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00619 " + "l1=0.00619" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[ 2.7942548  -0.38008782  2.175296   -8.047461  ]]
Iteration 100 of 1000: loss=0.00586 " + "l1=0.00556" + "l2=0.000297 f=-0.872 shape=(1, 9000, 1)
logits [[ 2.7327828 -0.3516807  2.176666  -8.044133 ]]
Iteration 200 of 1000: loss=0.00578 " + "l1=0.00553" + "l2=0.00025 f=-0.872 shape=(1, 9000, 1)
logits [[ 2.729961  -0.349801   2.1770015 -8.04527  ]]
Iteration 300 of 1000: loss=0.00573 " + "l1=0.00544" + "l2=0.000291 f=-0.873 shape=(1, 9000, 1)
logits [[ 2.720998   -0.34523815  2.1770675  -8.045566  ]]
Iteration 400 of 1000: loss=0.00571 " + "l1=0.00534" + "l2=0.000363 f=-0.874 shape=(1, 9000, 1)
logits [[ 2.7115731  -0.34072497  2.1773026  -8.045938  ]]
Iteration 500 of 1000: loss=0.0057 " + "l1=0.00525" + "l2=0.000457 f=-0.876 shape=(1, 9000, 1)
logits [[ 2.7022443  -0.33622617  2.177486   -8.046063  ]]
Iteration 600 of 1000: loss=0.00567 " + "l1=0.00516" + "l2=0.000506 f=-0.877 shape=(1, 9000, 1)
logits [[ 2.693529   -0.33193186  2.1775906  -8.046281  ]]
Iteration 700 of 1000: loss=0.00566 " + "l1=0.00508" + "l2=0.000586 f=-0.878 shape=(1, 9000, 1)
logits [[ 2.6853087  -0.32775897  2.177579   -8.046493  ]]
Iteration 800 of 1000: loss=0.00564 " + "l1=0.005" + "l2=0.000644 f=-0.879 shape=(1, 9000, 1)
logits [[ 2.6772237 -0.3234067  2.1773264 -8.046748 ]]
Iteration 900 of 1000: loss=0.00569 " + "l1=0.00492" + "l2=0.00077 f=-0.88 shape=(1, 9000, 1)
logits [[ 2.669551   -0.31906933  2.1771052  -8.047205  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0619 " + "l1=0.0619" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[ 2.7942548  -0.38008782  2.175296   -8.047461  ]]
Iteration 100 of 1000: loss=0.0309 " + "l1=0.0139" + "l2=0.017 f=-0.918 shape=(1, 9000, 1)
logits [[ 2.3123906  -0.14665428  2.1738138  -8.013061  ]]
Iteration 200 of 1000: loss=0.0186 " + "l1=0.000323" + "l2=0.0183 f=-0.936 shape=(1, 9000, 1)
logits [[ 2.1930418  -0.08756723  2.1898124  -8.039087  ]]
Iteration 300 of 1000: loss=0.0145 " + "l1=0" + "l2=0.0145 f=-0.938 shape=(1, 9000, 1)
logits [[ 2.1980722  -0.09809568  2.1988397  -8.0510025 ]]
Iteration 400 of 1000: loss=0.0125 " + "l1=0" + "l2=0.0125 f=-0.939 shape=(1, 9000, 1)
logits [[ 2.2012916 -0.1041749  2.2020173 -8.053977 ]]
Iteration 500 of 1000: loss=0.0114 " + "l1=0.000175" + "l2=0.0113 f=-0.938 shape=(1, 9000, 1)
logits [[ 2.2061956  -0.11028223  2.2044494  -8.052718  ]]
Iteration 600 of 1000: loss=0.0108 " + "l1=0" + "l2=0.0108 f=-0.938 shape=(1, 9000, 1)
logits [[ 2.1972177  -0.10792916  2.2054229  -8.048298  ]]
Iteration 700 of 1000: loss=0.00982 " + "l1=0" + "l2=0.00982 f=-0.937 shape=(1, 9000, 1)
logits [[ 2.2033978  -0.11173712  2.2052205  -8.045836  ]]
Iteration 800 of 1000: loss=0.00933 " + "l1=8.68e-05" + "l2=0.00924 f=-0.936 shape=(1, 9000, 1)
logits [[ 2.205504   -0.11279271  2.2046359  -8.042552  ]]
Iteration 900 of 1000: loss=0.00864 " + "l1=0" + "l2=0.00864 f=-0.936 shape=(1, 9000, 1)
logits [[ 2.2014873 -0.1103997  2.2036784 -8.037801 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.034 " + "l1=0.034" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[ 2.7942548  -0.38008782  2.175296   -8.047461  ]]
Iteration 100 of 1000: loss=0.0248 " + "l1=0.0197" + "l2=0.00517 f=-0.894 shape=(1, 9000, 1)
logits [[ 2.5319273  -0.25443965  2.1744883  -8.028527  ]]
Iteration 200 of 1000: loss=0.0213 " + "l1=0.0141" + "l2=0.00719 f=-0.907 shape=(1, 9000, 1)
logits [[ 2.4335093  -0.20498852  2.1763837  -8.032738  ]]
Iteration 300 of 1000: loss=0.0182 " + "l1=0.00911" + "l2=0.00906 f=-0.918 shape=(1, 9000, 1)
logits [[ 2.3478775  -0.16470584  2.1823032  -8.037136  ]]
Iteration 400 of 1000: loss=0.0152 " + "l1=0.00389" + "l2=0.0113 f=-0.93 shape=(1, 9000, 1)
logits [[ 2.260421   -0.12576479  2.1896555  -8.043891  ]]
Iteration 500 of 1000: loss=0.0125 " + "l1=5.93e-05" + "l2=0.0125 f=-0.938 shape=(1, 9000, 1)
logits [[ 2.1982129  -0.09867688  2.1971338  -8.050555  ]]
Iteration 600 of 1000: loss=0.0112 " + "l1=3.5e-06" + "l2=0.0112 f=-0.938 shape=(1, 9000, 1)
logits [[ 2.201358   -0.10493887  2.2012944  -8.050577  ]]
Iteration 700 of 1000: loss=0.0103 " + "l1=2.85e-05" + "l2=0.0103 f=-0.937 shape=(1, 9000, 1)
logits [[ 2.2031102  -0.10853673  2.2025914  -8.047116  ]]
Iteration 800 of 1000: loss=0.00969 " + "l1=6.89e-05" + "l2=0.00962 f=-0.937 shape=(1, 9000, 1)
logits [[ 2.20375    -0.10953416  2.2024977  -8.0437355 ]]
Iteration 900 of 1000: loss=0.00954 " + "l1=5.3e-05" + "l2=0.00949 f=-0.936 shape=(1, 9000, 1)
logits [[ 2.2024658  -0.10853869  2.2015023  -8.039343  ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0201 " + "l1=0.0201" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[ 2.7942548  -0.38008782  2.175296   -8.047461  ]]
Iteration 100 of 1000: loss=0.0169 " + "l1=0.0149" + "l2=0.00193 f=-0.883 shape=(1, 9000, 1)
logits [[ 2.6347444  -0.30365494  2.1751068  -8.037157  ]]
Iteration 200 of 1000: loss=0.0158 " + "l1=0.0134" + "l2=0.0024 f=-0.889 shape=(1, 9000, 1)
logits [[ 2.5897856  -0.28131577  2.176452   -8.040405  ]]
Iteration 300 of 1000: loss=0.0149 " + "l1=0.0119" + "l2=0.003 f=-0.895 shape=(1, 9000, 1)
logits [[ 2.5443006 -0.2601977  2.1782568 -8.043449 ]]
Iteration 400 of 1000: loss=0.014 " + "l1=0.0104" + "l2=0.00368 f=-0.902 shape=(1, 9000, 1)
logits [[ 2.4984496  -0.23857735  2.1796157  -8.046122  ]]
Iteration 500 of 1000: loss=0.0133 " + "l1=0.00902" + "l2=0.00428 f=-0.907 shape=(1, 9000, 1)
logits [[ 2.4592342  -0.22081196  2.181748   -8.046486  ]]
Iteration 600 of 1000: loss=0.0127 " + "l1=0.00774" + "l2=0.00495 f=-0.911 shape=(1, 9000, 1)
logits [[ 2.4211674  -0.20257424  2.1830664  -8.046144  ]]
Iteration 700 of 1000: loss=0.0121 " + "l1=0.00657" + "l2=0.00552 f=-0.915 shape=(1, 9000, 1)
logits [[ 2.3866084  -0.18605335  2.184516   -8.044435  ]]
Iteration 800 of 1000: loss=0.0114 " + "l1=0.00527" + "l2=0.00613 f=-0.92 shape=(1, 9000, 1)
logits [[ 2.347819   -0.16811854  2.1855466  -8.0434885 ]]
Iteration 900 of 1000: loss=0.0107 " + "l1=0.0042" + "l2=0.00655 f=-0.923 shape=(1, 9000, 1)
logits [[ 2.3161156  -0.15408218  2.1869783  -8.041871  ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0271 " + "l1=0.0271" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[ 2.7942548  -0.38008782  2.175296   -8.047461  ]]
Iteration 100 of 1000: loss=0.0212 " + "l1=0.0178" + "l2=0.00337 f=-0.888 shape=(1, 9000, 1)
logits [[ 2.583171   -0.27910554  2.1751797  -8.033224  ]]
Iteration 200 of 1000: loss=0.0192 " + "l1=0.0147" + "l2=0.00448 f=-0.898 shape=(1, 9000, 1)
logits [[ 2.512647  -0.2441865  2.1769688 -8.037633 ]]
Iteration 300 of 1000: loss=0.0173 " + "l1=0.0116" + "l2=0.00564 f=-0.907 shape=(1, 9000, 1)
logits [[ 2.4452393  -0.21227045  2.1796443  -8.041317  ]]
Iteration 400 of 1000: loss=0.0156 " + "l1=0.00874" + "l2=0.00686 f=-0.915 shape=(1, 9000, 1)
logits [[ 2.3831623  -0.18294762  2.1834528  -8.043035  ]]
Iteration 500 of 1000: loss=0.014 " + "l1=0.00579" + "l2=0.00823 f=-0.923 shape=(1, 9000, 1)
logits [[ 2.3201132  -0.15451251  2.1877782  -8.045642  ]]
Iteration 600 of 1000: loss=0.0126 " + "l1=0.00317" + "l2=0.00948 f=-0.93 shape=(1, 9000, 1)
logits [[ 2.2654335  -0.13144849  2.1930764  -8.045855  ]]
Iteration 700 of 1000: loss=0.0113 " + "l1=0.000666" + "l2=0.0107 f=-0.936 shape=(1, 9000, 1)
logits [[ 2.212898   -0.10815039  2.197686   -8.044751  ]]
Iteration 800 of 1000: loss=0.0102 " + "l1=9.61e-05" + "l2=0.0101 f=-0.937 shape=(1, 9000, 1)
logits [[ 2.203012   -0.10691053  2.2008145  -8.044349  ]]
Iteration 900 of 1000: loss=0.00942 " + "l1=3.76e-05" + "l2=0.00938 f=-0.936 shape=(1, 9000, 1)
logits [[ 2.2012858  -0.10672324  2.2004259  -8.039899  ]]
--- 303.90367698669434 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.108 " + "l1=0.108" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[ 2.7942548  -0.38008782  2.175296   -8.047461  ]]
Iteration 100 of 1000: loss=0.108 " + "l1=0.107" + "l2=0.000596 f=-0.869 shape=(1, 9000, 1)
logits [[ 2.703803   -0.32217413  2.1437805  -8.0013685 ]]
Iteration 200 of 1000: loss=0.107 " + "l1=0.107" + "l2=0.000579 f=-0.869 shape=(1, 9000, 1)
logits [[ 2.694749  -0.3165021  2.1403315 -7.9952474]]
Iteration 300 of 1000: loss=0.107 " + "l1=0.107" + "l2=0.000665 f=-0.87 shape=(1, 9000, 1)
logits [[ 2.681113   -0.30894804  2.136094   -7.987322  ]]
Iteration 400 of 1000: loss=0.107 " + "l1=0.106" + "l2=0.000756 f=-0.87 shape=(1, 9000, 1)
logits [[ 2.665934   -0.30027145  2.131251   -7.9783564 ]]
Iteration 500 of 1000: loss=0.107 " + "l1=0.106" + "l2=0.000856 f=-0.871 shape=(1, 9000, 1)
logits [[ 2.6507618  -0.29135126  2.1260183  -7.969335  ]]
Iteration 600 of 1000: loss=0.107 " + "l1=0.106" + "l2=0.000994 f=-0.872 shape=(1, 9000, 1)
logits [[ 2.635084   -0.28193814  2.1203268  -7.9602547 ]]
Iteration 700 of 1000: loss=0.107 " + "l1=0.106" + "l2=0.00107 f=-0.872 shape=(1, 9000, 1)
logits [[ 2.6201265  -0.27289668  2.1148677  -7.951359  ]]
Iteration 800 of 1000: loss=0.107 " + "l1=0.105" + "l2=0.00122 f=-0.873 shape=(1, 9000, 1)
logits [[ 2.605435   -0.26388967  2.109347   -7.9424706 ]]
Iteration 900 of 1000: loss=0.107 " + "l1=0.105" + "l2=0.00136 f=-0.873 shape=(1, 9000, 1)
logits [[ 2.5908608 -0.2547779  2.1036026 -7.9334083]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.08 " + "l1=1.08" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[ 2.7942548  -0.38008782  2.175296   -8.047461  ]]
Iteration 100 of 1000: loss=1.01 " + "l1=0.96" + "l2=0.0477 f=-0.907 shape=(1, 9000, 1)
logits [[ 1.970834    0.14433347  1.8883493  -7.632017  ]]
Iteration 200 of 1000: loss=0.984 " + "l1=0.933" + "l2=0.051 f=-0.906 shape=(1, 9000, 1)
logits [[ 1.8332045  0.2139936  1.8300191 -7.5005846]]
Iteration 300 of 1000: loss=0.969 " + "l1=0.919" + "l2=0.0497 f=-0.892 shape=(1, 9000, 1)
logits [[ 1.8054873   0.20694613  1.8041035  -7.385317  ]]
Iteration 400 of 1000: loss=0.955 " + "l1=0.902" + "l2=0.0527 f=-0.875 shape=(1, 9000, 1)
logits [[ 1.7714      0.21096767  1.7694085  -7.249867  ]]
Iteration 500 of 1000: loss=0.939 " + "l1=0.883" + "l2=0.0561 f=-0.857 shape=(1, 9000, 1)
logits [[ 1.7272547   0.22521472  1.7272199  -7.1064425 ]]
Iteration 600 of 1000: loss=0.919 " + "l1=0.86" + "l2=0.0591 f=-0.83 shape=(1, 9000, 1)
logits [[ 1.6736485   0.24988961  1.6766934  -6.921853  ]]
Iteration 700 of 1000: loss=0.898 " + "l1=0.839" + "l2=0.0584 f=-0.797 shape=(1, 9000, 1)
logits [[ 1.6451391   0.26403117  1.6474648  -6.7452536 ]]
Iteration 800 of 1000: loss=0.877 " + "l1=0.818" + "l2=0.0588 f=-0.768 shape=(1, 9000, 1)
logits [[ 1.6148965   0.26160982  1.6183416  -6.566506  ]]
Iteration 900 of 1000: loss=0.859 " + "l1=0.8" + "l2=0.0588 f=-0.741 shape=(1, 9000, 1)
logits [[ 1.5832483  0.2473457  1.6008525 -6.396838 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.8 " + "l1=10.8" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[ 2.7942548  -0.38008782  2.175296   -8.047461  ]]
Iteration 100 of 1000: loss=7.24 " + "l1=6.04" + "l2=1.2 f=-0.734 shape=(1, 9000, 1)
logits [[ 0.4227391   0.8832692   0.89835817 -5.140813  ]]
Iteration 200 of 1000: loss=5.73 " + "l1=4" + "l2=1.73 f=-0.548 shape=(1, 9000, 1)
logits [[ 0.22553591  0.51026946  0.53710216 -3.4655905 ]]
Iteration 300 of 1000: loss=3.55 " + "l1=1.24" + "l2=2.31 f=-0.32 shape=(1, 9000, 1)
logits [[-0.49879324  0.14764518  0.15452042 -1.0853509 ]]
Iteration 400 of 1000: loss=2.01 " + "l1=0.00198" + "l2=2.01 f=-0.286 shape=(1, 9000, 1)
logits [[-1.0160695  -0.04293306 -0.04162259 -0.04360715]]
Iteration 500 of 1000: loss=1.51 " + "l1=0.00669" + "l2=1.51 f=-0.321 shape=(1, 9000, 1)
logits [[-1.1694678  -0.03985147 -0.03346621 -0.04016095]]
Iteration 600 of 1000: loss=1.16 " + "l1=0.00622" + "l2=1.16 f=-0.34 shape=(1, 9000, 1)
logits [[-1.1989821  -0.0646578  -0.04439806 -0.05061869]]
Iteration 700 of 1000: loss=0.92 " + "l1=0" + "l2=0.92 f=-0.36 shape=(1, 9000, 1)
logits [[-1.2285095  -0.07944609 -0.06905504 -0.06298361]]
Iteration 800 of 1000: loss=0.763 " + "l1=0" + "l2=0.763 f=-0.384 shape=(1, 9000, 1)
logits [[-1.3010147  -0.09750008 -0.07438023 -0.06245724]]
Iteration 900 of 1000: loss=0.66 " + "l1=0" + "l2=0.66 f=-0.405 shape=(1, 9000, 1)
logits [[-1.3695623  -0.08385491 -0.09598196 -0.07016744]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.96 " + "l1=5.96" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[ 2.7942548  -0.38008782  2.175296   -8.047461  ]]
Iteration 100 of 1000: loss=4.57 " + "l1=4.05" + "l2=0.516 f=-0.821 shape=(1, 9000, 1)
logits [[ 0.96343136  0.800914    1.1574544  -6.207512  ]]
Iteration 200 of 1000: loss=4.08 " + "l1=3.39" + "l2=0.685 f=-0.722 shape=(1, 9000, 1)
logits [[ 0.6515757   0.80844384  0.9113781  -5.260224  ]]
Iteration 300 of 1000: loss=3.61 " + "l1=2.81" + "l2=0.8 f=-0.628 shape=(1, 9000, 1)
logits [[ 0.39690337  0.7356341   0.7324858  -4.376068  ]]
Iteration 400 of 1000: loss=2.72 " + "l1=1.67" + "l2=1.05 f=-0.461 shape=(1, 9000, 1)
logits [[-0.07935177  0.42683768  0.4253076  -2.617129  ]]
Iteration 500 of 1000: loss=1.84 " + "l1=0.705" + "l2=1.13 f=-0.37 shape=(1, 9000, 1)
logits [[-0.70698464  0.16870382  0.1693074  -1.1124482 ]]
Iteration 600 of 1000: loss=1.18 " + "l1=0.106" + "l2=1.07 f=-0.315 shape=(1, 9000, 1)
logits [[-1.1353289   0.01499375  0.02623254 -0.1673882 ]]
Iteration 700 of 1000: loss=0.867 " + "l1=0.00525" + "l2=0.861 f=-0.32 shape=(1, 9000, 1)
logits [[-1.2336035  -0.01973299 -0.00931722 -0.01886116]]
Iteration 800 of 1000: loss=0.714 " + "l1=0" + "l2=0.714 f=-0.327 shape=(1, 9000, 1)
logits [[-1.236853   -0.03313153 -0.02505833 -0.01427979]]
Iteration 900 of 1000: loss=0.616 " + "l1=0" + "l2=0.616 f=-0.332 shape=(1, 9000, 1)
logits [[-1.2303424  -0.03495013 -0.03236066 -0.03181095]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.52 " + "l1=3.52" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[ 2.7942548  -0.38008782  2.175296   -8.047461  ]]
Iteration 100 of 1000: loss=2.94 " + "l1=2.7" + "l2=0.234 f=-0.868 shape=(1, 9000, 1)
logits [[ 1.4307355  0.5512522  1.4301201 -6.8840194]]
Iteration 200 of 1000: loss=2.75 " + "l1=2.45" + "l2=0.301 f=-0.804 shape=(1, 9000, 1)
logits [[ 1.2232475  0.6329171  1.2373296 -6.310717 ]]
Iteration 300 of 1000: loss=2.58 " + "l1=2.26" + "l2=0.324 f=-0.757 shape=(1, 9000, 1)
logits [[ 1.0615487  0.6772962  1.0923941 -5.8574977]]
Iteration 400 of 1000: loss=2.35 " + "l1=1.99" + "l2=0.364 f=-0.693 shape=(1, 9000, 1)
logits [[ 0.7364585  0.775803   0.9195962 -5.2057147]]
Iteration 500 of 1000: loss=2.1 " + "l1=1.69" + "l2=0.409 f=-0.632 shape=(1, 9000, 1)
logits [[ 0.3970798   0.74230784  0.76926786 -4.4357023 ]]
Iteration 600 of 1000: loss=1.76 " + "l1=1.25" + "l2=0.505 f=-0.537 shape=(1, 9000, 1)
logits [[-0.03990275  0.5661323   0.58782905 -3.2609215 ]]
Iteration 700 of 1000: loss=1.32 " + "l1=0.733" + "l2=0.583 f=-0.465 shape=(1, 9000, 1)
logits [[-0.59610665  0.3128606   0.33937123 -1.9170381 ]]
Iteration 800 of 1000: loss=0.919 " + "l1=0.297" + "l2=0.622 f=-0.404 shape=(1, 9000, 1)
logits [[-1.0772784   0.12694551  0.12240483 -0.7875788 ]]
Iteration 900 of 1000: loss=0.646 " + "l1=0.0515" + "l2=0.595 f=-0.382 shape=(1, 9000, 1)
logits [[-1.3720672  -0.00167245  0.00221265 -0.15623206]]
--- 307.9972279071808 seconds ---
Adv result:3
Loading record A01303
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.067 " + "l1=0.067" + "l2=0 f=-0.663 shape=(1, 9000, 1)
logits [[ 4.227539  -2.4763944  2.6401756 -7.044445 ]]
Iteration 100 of 1000: loss=0.0664 " + "l1=0.066" + "l2=0.000415 f=-0.661 shape=(1, 9000, 1)
logits [[ 4.1728272 -2.430401   2.6092296 -6.9960165]]
Iteration 200 of 1000: loss=0.0663 " + "l1=0.0659" + "l2=0.000421 f=-0.661 shape=(1, 9000, 1)
logits [[ 4.16328   -2.4237115  2.6046042 -6.989908 ]]
Iteration 300 of 1000: loss=0.0662 " + "l1=0.0657" + "l2=0.000502 f=-0.662 shape=(1, 9000, 1)
logits [[ 4.1516643 -2.4152737  2.598851  -6.981647 ]]
Iteration 400 of 1000: loss=0.0661 " + "l1=0.0655" + "l2=0.00058 f=-0.662 shape=(1, 9000, 1)
logits [[ 4.140521  -2.4073715  2.5932918 -6.97356  ]]
Iteration 500 of 1000: loss=0.066 " + "l1=0.0653" + "l2=0.000696 f=-0.662 shape=(1, 9000, 1)
logits [[ 4.130135  -2.4000704  2.5882282 -6.9663763]]
Iteration 600 of 1000: loss=0.066 " + "l1=0.0651" + "l2=0.000813 f=-0.662 shape=(1, 9000, 1)
logits [[ 4.120562  -2.3933501  2.5836694 -6.959783 ]]
Iteration 700 of 1000: loss=0.0659 " + "l1=0.065" + "l2=0.000875 f=-0.662 shape=(1, 9000, 1)
logits [[ 4.111829  -2.3870847  2.579518  -6.9538617]]
Iteration 800 of 1000: loss=0.0658 " + "l1=0.0648" + "l2=0.00099 f=-0.663 shape=(1, 9000, 1)
logits [[ 4.1036386 -2.3811305  2.575731  -6.9482884]]
Iteration 900 of 1000: loss=0.0659 " + "l1=0.0647" + "l2=0.00115 f=-0.663 shape=(1, 9000, 1)
logits [[ 4.0955415 -2.375382   2.57205   -6.9426665]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.67 " + "l1=0.67" + "l2=0 f=-0.663 shape=(1, 9000, 1)
logits [[ 4.227539  -2.4763944  2.6401756 -7.044445 ]]
Iteration 100 of 1000: loss=0.62 " + "l1=0.592" + "l2=0.0281 f=-0.651 shape=(1, 9000, 1)
logits [[ 3.7864594 -2.1331897  2.3962936 -6.6524396]]
Iteration 200 of 1000: loss=0.598 " + "l1=0.556" + "l2=0.0422 f=-0.649 shape=(1, 9000, 1)
logits [[ 3.5690205 -1.9898194  2.2970543 -6.4712806]]
Iteration 300 of 1000: loss=0.579 " + "l1=0.523" + "l2=0.0562 f=-0.65 shape=(1, 9000, 1)
logits [[ 3.355319  -1.8716226  2.2212696 -6.305853 ]]
Iteration 400 of 1000: loss=0.564 " + "l1=0.499" + "l2=0.0648 f=-0.652 shape=(1, 9000, 1)
logits [[ 3.1915474 -1.7974845  2.1762207 -6.1788015]]
Iteration 500 of 1000: loss=0.55 " + "l1=0.476" + "l2=0.0733 f=-0.65 shape=(1, 9000, 1)
logits [[ 3.038993  -1.7242938  2.1399596 -6.05567  ]]
Iteration 600 of 1000: loss=0.535 " + "l1=0.456" + "l2=0.0793 f=-0.645 shape=(1, 9000, 1)
logits [[ 2.9115324 -1.6495187  2.1042001 -5.945601 ]]
Iteration 700 of 1000: loss=0.522 " + "l1=0.434" + "l2=0.0876 f=-0.643 shape=(1, 9000, 1)
logits [[ 2.7606382 -1.5804161  2.0753546 -5.8283067]]
Iteration 800 of 1000: loss=0.509 " + "l1=0.413" + "l2=0.0952 f=-0.642 shape=(1, 9000, 1)
logits [[ 2.621147  -1.5125045  2.0437298 -5.7220573]]
Iteration 900 of 1000: loss=0.495 " + "l1=0.397" + "l2=0.0987 f=-0.644 shape=(1, 9000, 1)
logits [[ 2.5153613 -1.4523928  2.0088892 -5.646964 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.7 " + "l1=6.7" + "l2=0 f=-0.663 shape=(1, 9000, 1)
logits [[ 4.227539  -2.4763944  2.6401756 -7.044445 ]]
Iteration 100 of 1000: loss=2.47 " + "l1=0.956" + "l2=1.51 f=-0.618 shape=(1, 9000, 1)
logits [[ 9.3854517e-01 -4.0334221e-03  9.5244795e-01 -4.3601046e+00]]
Iteration 200 of 1000: loss=1.73 " + "l1=0.306" + "l2=1.43 f=-0.648 shape=(1, 9000, 1)
logits [[ 0.30663446  0.40032825  0.706503   -4.0054584 ]]
Iteration 300 of 1000: loss=1.26 " + "l1=0.0208" + "l2=1.24 f=-0.672 shape=(1, 9000, 1)
logits [[-0.04604304  0.5535156   0.57427067 -3.768585  ]]
Iteration 400 of 1000: loss=1.08 " + "l1=0" + "l2=1.08 f=-0.66 shape=(1, 9000, 1)
logits [[-0.05696173  0.5296782   0.5293355  -3.6406252 ]]
Iteration 500 of 1000: loss=0.984 " + "l1=0" + "l2=0.984 f=-0.655 shape=(1, 9000, 1)
logits [[-0.07688357  0.5037465   0.49763742 -3.5425901 ]]
Iteration 600 of 1000: loss=0.909 " + "l1=0" + "l2=0.909 f=-0.653 shape=(1, 9000, 1)
logits [[-0.11568052  0.4887647   0.47909144 -3.463771  ]]
Iteration 700 of 1000: loss=0.824 " + "l1=0" + "l2=0.824 f=-0.653 shape=(1, 9000, 1)
logits [[-0.14732337  0.46224296  0.46080622 -3.388709  ]]
Iteration 800 of 1000: loss=0.767 " + "l1=0" + "l2=0.767 f=-0.652 shape=(1, 9000, 1)
logits [[-0.19415414  0.44385216  0.43272692 -3.2915792 ]]
Iteration 900 of 1000: loss=0.714 " + "l1=0" + "l2=0.714 f=-0.647 shape=(1, 9000, 1)
logits [[-0.20653856  0.41940254  0.41288134 -3.2119336 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.69 " + "l1=3.69" + "l2=0 f=-0.663 shape=(1, 9000, 1)
logits [[ 4.227539  -2.4763944  2.6401756 -7.044445 ]]
Iteration 100 of 1000: loss=1.96 " + "l1=1.17" + "l2=0.797 f=-0.642 shape=(1, 9000, 1)
logits [[ 1.4843562 -0.6310987  1.4920957 -4.914579 ]]
Iteration 200 of 1000: loss=1.5 " + "l1=0.703" + "l2=0.797 f=-0.624 shape=(1, 9000, 1)
logits [[ 1.1184708 -0.1546445  1.1242694 -4.582658 ]]
Iteration 300 of 1000: loss=1.23 " + "l1=0.459" + "l2=0.768 f=-0.626 shape=(1, 9000, 1)
logits [[ 0.8423835   0.05207545  0.8872179  -4.287059  ]]
Iteration 400 of 1000: loss=1.05 " + "l1=0.321" + "l2=0.731 f=-0.617 shape=(1, 9000, 1)
logits [[ 0.59886515  0.16716798  0.75016683 -3.9844697 ]]
Iteration 500 of 1000: loss=0.894 " + "l1=0.141" + "l2=0.753 f=-0.63 shape=(1, 9000, 1)
logits [[ 0.13555223  0.3412432   0.5981759  -3.5967433 ]]
Iteration 600 of 1000: loss=0.786 " + "l1=0.0624" + "l2=0.724 f=-0.657 shape=(1, 9000, 1)
logits [[-0.18651445  0.41507798  0.5285158  -3.3856208 ]]
Iteration 700 of 1000: loss=0.69 " + "l1=0" + "l2=0.69 f=-0.671 shape=(1, 9000, 1)
logits [[-0.42182997  0.46646684  0.4659554  -3.1939285 ]]
Iteration 800 of 1000: loss=0.635 " + "l1=0.00649" + "l2=0.628 f=-0.66 shape=(1, 9000, 1)
logits [[-0.41149357  0.4338482   0.44564438 -3.1081922 ]]
Iteration 900 of 1000: loss=0.609 " + "l1=0.0104" + "l2=0.599 f=-0.653 shape=(1, 9000, 1)
logits [[-0.4167759   0.42295235  0.4418976  -3.0612638 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.18 " + "l1=2.18" + "l2=0 f=-0.663 shape=(1, 9000, 1)
logits [[ 4.227539  -2.4763944  2.6401756 -7.044445 ]]
Iteration 100 of 1000: loss=1.53 " + "l1=1.11" + "l2=0.424 f=-0.644 shape=(1, 9000, 1)
logits [[ 2.1995711 -1.2043335  1.8876873 -5.4574833]]
Iteration 200 of 1000: loss=1.24 " + "l1=0.785" + "l2=0.455 f=-0.64 shape=(1, 9000, 1)
logits [[ 1.6390928  -0.77456725  1.6409353  -5.065698  ]]
Iteration 300 of 1000: loss=1.08 " + "l1=0.61" + "l2=0.473 f=-0.628 shape=(1, 9000, 1)
logits [[ 1.3945775 -0.4810928  1.3918905 -4.816111 ]]
Iteration 400 of 1000: loss=0.952 " + "l1=0.474" + "l2=0.478 f=-0.623 shape=(1, 9000, 1)
logits [[ 1.1627111  -0.28458667  1.1726608  -4.5435276 ]]
Iteration 500 of 1000: loss=0.84 " + "l1=0.383" + "l2=0.456 f=-0.621 shape=(1, 9000, 1)
logits [[ 1.0010749  -0.17497574  1.0044833  -4.3140216 ]]
Iteration 600 of 1000: loss=0.756 " + "l1=0.354" + "l2=0.402 f=-0.612 shape=(1, 9000, 1)
logits [[ 0.9333842  -0.15697299  0.93221766 -4.157662  ]]
Iteration 700 of 1000: loss=0.696 " + "l1=0.314" + "l2=0.382 f=-0.601 shape=(1, 9000, 1)
logits [[ 0.8295265  -0.10505299  0.85960907 -3.9893754 ]]
Iteration 800 of 1000: loss=0.644 " + "l1=0.266" + "l2=0.378 f=-0.594 shape=(1, 9000, 1)
logits [[ 0.67463243 -0.02286465  0.7963402  -3.8249571 ]]
Iteration 900 of 1000: loss=0.599 " + "l1=0.207" + "l2=0.391 f=-0.609 shape=(1, 9000, 1)
logits [[ 0.39839235  0.08620817  0.7235037  -3.64355   ]]
--- 305.7280910015106 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0159 " + "l1=0.0159" + "l2=0 f=-0.663 shape=(1, 9000, 1)
logits [[ 4.227539  -2.4763944  2.6401756 -7.044445 ]]
Iteration 100 of 1000: loss=0.0157 " + "l1=0.0155" + "l2=0.000173 f=-0.665 shape=(1, 9000, 1)
logits [[ 4.1969113 -2.4765096  2.6428585 -7.0222673]]
Iteration 200 of 1000: loss=0.0157 " + "l1=0.0155" + "l2=0.000133 f=-0.665 shape=(1, 9000, 1)
logits [[ 4.195646  -2.4760714  2.6426992 -7.021675 ]]
Iteration 300 of 1000: loss=0.0157 " + "l1=0.0155" + "l2=0.000161 f=-0.665 shape=(1, 9000, 1)
logits [[ 4.1918077 -2.4757218  2.642779  -7.019338 ]]
Iteration 400 of 1000: loss=0.0156 " + "l1=0.0154" + "l2=0.000197 f=-0.665 shape=(1, 9000, 1)
logits [[ 4.1876473 -2.4753094  2.6429062 -7.0169272]]
Iteration 500 of 1000: loss=0.0157 " + "l1=0.0154" + "l2=0.000258 f=-0.666 shape=(1, 9000, 1)
logits [[ 4.183327  -2.4748154  2.6430278 -7.0144157]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.159 " + "l1=0.159" + "l2=0 f=-0.663 shape=(1, 9000, 1)
logits [[ 4.227539  -2.4763944  2.6401756 -7.044445 ]]
Iteration 100 of 1000: loss=0.144 " + "l1=0.135" + "l2=0.00844 f=-0.676 shape=(1, 9000, 1)
logits [[ 4.013971  -2.4873421  2.6592164 -6.891435 ]]
Iteration 200 of 1000: loss=0.138 " + "l1=0.127" + "l2=0.0113 f=-0.682 shape=(1, 9000, 1)
logits [[ 3.9328198 -2.4906495  2.6640925 -6.8354774]]
Iteration 300 of 1000: loss=0.133 " + "l1=0.118" + "l2=0.0145 f=-0.688 shape=(1, 9000, 1)
logits [[ 3.850731  -2.493124   2.6690097 -6.7787385]]
Iteration 400 of 1000: loss=0.128 " + "l1=0.11" + "l2=0.0179 f=-0.693 shape=(1, 9000, 1)
logits [[ 3.771978  -2.4917428  2.6738024 -6.725011 ]]
Iteration 500 of 1000: loss=0.123 " + "l1=0.101" + "l2=0.0212 f=-0.698 shape=(1, 9000, 1)
logits [[ 3.687752  -2.4842453  2.674411  -6.6696663]]
Iteration 600 of 1000: loss=0.116 " + "l1=0.0913" + "l2=0.0252 f=-0.704 shape=(1, 9000, 1)
logits [[ 3.584199  -2.4726348  2.6709738 -6.5994773]]
Iteration 700 of 1000: loss=0.11 " + "l1=0.0806" + "l2=0.0289 f=-0.71 shape=(1, 9000, 1)
logits [[ 3.4735253 -2.4586163  2.667638  -6.5238886]]
Iteration 800 of 1000: loss=0.101 " + "l1=0.0688" + "l2=0.0327 f=-0.716 shape=(1, 9000, 1)
logits [[ 3.3556948 -2.4414847  2.6676812 -6.444997 ]]
Iteration 900 of 1000: loss=0.0937 " + "l1=0.0565" + "l2=0.0372 f=-0.72 shape=(1, 9000, 1)
logits [[ 3.2393744 -2.4297636  2.674047  -6.362947 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.59 " + "l1=1.59" + "l2=0 f=-0.663 shape=(1, 9000, 1)
logits [[ 4.227539  -2.4763944  2.6401756 -7.044445 ]]
Iteration 100 of 1000: loss=0.282 " + "l1=0.00696" + "l2=0.275 f=-0.765 shape=(1, 9000, 1)
logits [[ 2.8032546 -2.4969714  2.7962968 -6.163965 ]]
Iteration 200 of 1000: loss=0.198 " + "l1=0" + "l2=0.198 f=-0.763 shape=(1, 9000, 1)
logits [[ 2.7622766 -2.4588091  2.7809355 -6.1346087]]
Iteration 300 of 1000: loss=0.162 " + "l1=0" + "l2=0.162 f=-0.756 shape=(1, 9000, 1)
logits [[ 2.7554078 -2.457881   2.7827137 -6.1053824]]
Iteration 400 of 1000: loss=0.134 " + "l1=0" + "l2=0.134 f=-0.75 shape=(1, 9000, 1)
logits [[ 2.7823963 -2.4571636  2.782444  -6.1063404]]
Iteration 500 of 1000: loss=0.121 " + "l1=0" + "l2=0.121 f=-0.746 shape=(1, 9000, 1)
logits [[ 2.7710433 -2.455625   2.784625  -6.0845857]]
Iteration 600 of 1000: loss=0.11 " + "l1=0.00378" + "l2=0.106 f=-0.739 shape=(1, 9000, 1)
logits [[ 2.7603374 -2.416245   2.7565567 -6.0550447]]
Iteration 700 of 1000: loss=0.0979 " + "l1=0" + "l2=0.0979 f=-0.734 shape=(1, 9000, 1)
logits [[ 2.7472708 -2.404608   2.7537465 -6.0315824]]
Iteration 800 of 1000: loss=0.089 " + "l1=0" + "l2=0.089 f=-0.73 shape=(1, 9000, 1)
logits [[ 2.744089  -2.3942726  2.7486708 -6.017686 ]]
Iteration 900 of 1000: loss=0.0821 " + "l1=0" + "l2=0.0821 f=-0.727 shape=(1, 9000, 1)
logits [[ 2.7434404 -2.3867052  2.7449365 -6.0078287]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.873 " + "l1=0.873" + "l2=0 f=-0.663 shape=(1, 9000, 1)
logits [[ 4.227539  -2.4763944  2.6401756 -7.044445 ]]
Iteration 100 of 1000: loss=0.282 " + "l1=0.00171" + "l2=0.28 f=-0.765 shape=(1, 9000, 1)
logits [[ 2.7931113 -2.4888766  2.7899942 -6.1549225]]
Iteration 200 of 1000: loss=0.18 " + "l1=0.00118" + "l2=0.178 f=-0.758 shape=(1, 9000, 1)
logits [[ 2.7683847 -2.4394789  2.7662413 -6.128221 ]]
Iteration 300 of 1000: loss=0.143 " + "l1=0" + "l2=0.143 f=-0.748 shape=(1, 9000, 1)
logits [[ 2.7545722 -2.4127817  2.7550323 -6.08911  ]]
Iteration 400 of 1000: loss=0.122 " + "l1=0" + "l2=0.122 f=-0.742 shape=(1, 9000, 1)
logits [[ 2.745301  -2.3959877  2.7493906 -6.0657606]]
Iteration 500 of 1000: loss=0.109 " + "l1=0" + "l2=0.109 f=-0.737 shape=(1, 9000, 1)
logits [[ 2.7279103 -2.386266   2.7486966 -6.0387244]]
Iteration 600 of 1000: loss=0.0961 " + "l1=0" + "l2=0.0961 f=-0.732 shape=(1, 9000, 1)
logits [[ 2.729993  -2.379716   2.7432592 -6.021065 ]]
Iteration 700 of 1000: loss=0.0867 " + "l1=0" + "l2=0.0867 f=-0.727 shape=(1, 9000, 1)
logits [[ 2.7274518 -2.3679416  2.7393749 -6.005153 ]]
Iteration 800 of 1000: loss=0.0777 " + "l1=0" + "l2=0.0777 f=-0.723 shape=(1, 9000, 1)
logits [[ 2.735846  -2.3610003  2.7366636 -6.0027404]]
Iteration 900 of 1000: loss=0.0716 " + "l1=0.00127" + "l2=0.0703 f=-0.72 shape=(1, 9000, 1)
logits [[ 2.7389235 -2.353505   2.736617  -6.001624 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.516 " + "l1=0.516" + "l2=0 f=-0.663 shape=(1, 9000, 1)
logits [[ 4.227539  -2.4763944  2.6401756 -7.044445 ]]
Iteration 100 of 1000: loss=0.339 " + "l1=0.233" + "l2=0.106 f=-0.717 shape=(1, 9000, 1)
logits [[ 3.4123864 -2.5076435  2.6945617 -6.468015 ]]
Iteration 200 of 1000: loss=0.201 " + "l1=0.000851" + "l2=0.2 f=-0.755 shape=(1, 9000, 1)
logits [[ 2.7220972 -2.3796692  2.719478  -6.0822997]]
Iteration 300 of 1000: loss=0.144 " + "l1=0" + "l2=0.144 f=-0.744 shape=(1, 9000, 1)
logits [[ 2.7140963 -2.3586197  2.7183154 -6.047897 ]]
Iteration 400 of 1000: loss=0.118 " + "l1=0.00101" + "l2=0.117 f=-0.736 shape=(1, 9000, 1)
logits [[ 2.7254474 -2.3582087  2.7223358 -6.033894 ]]
Iteration 500 of 1000: loss=0.101 " + "l1=0" + "l2=0.101 f=-0.73 shape=(1, 9000, 1)
logits [[ 2.720471  -2.3520305  2.7266889 -6.016635 ]]
Iteration 600 of 1000: loss=0.0887 " + "l1=0" + "l2=0.0887 f=-0.726 shape=(1, 9000, 1)
logits [[ 2.718076  -2.3415763  2.7206137 -5.9994407]]
Iteration 700 of 1000: loss=0.0793 " + "l1=0.000789" + "l2=0.0785 f=-0.722 shape=(1, 9000, 1)
logits [[ 2.7174695 -2.3276446  2.7150416 -5.9923043]]
Iteration 800 of 1000: loss=0.0719 " + "l1=0.00106" + "l2=0.0709 f=-0.72 shape=(1, 9000, 1)
logits [[ 2.7229555 -2.3270326  2.7197063 -5.993682 ]]
Iteration 900 of 1000: loss=0.0647 " + "l1=0" + "l2=0.0647 f=-0.718 shape=(1, 9000, 1)
logits [[ 2.7297497 -2.3287911  2.7298245 -6.0030413]]
--- 284.3060324192047 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.113 " + "l1=0.113" + "l2=0 f=-0.663 shape=(1, 9000, 1)
logits [[ 4.227539  -2.4763944  2.6401756 -7.044445 ]]
Iteration 100 of 1000: loss=0.112 " + "l1=0.111" + "l2=0.00059 f=-0.661 shape=(1, 9000, 1)
logits [[ 4.159149  -2.4478223  2.6115432 -6.9668984]]
Iteration 200 of 1000: loss=0.112 " + "l1=0.111" + "l2=0.000639 f=-0.661 shape=(1, 9000, 1)
logits [[ 4.14568   -2.4418926  2.606167  -6.954413 ]]
Iteration 300 of 1000: loss=0.111 " + "l1=0.111" + "l2=0.000768 f=-0.661 shape=(1, 9000, 1)
logits [[ 4.1300745 -2.4353728  2.6000898 -6.939549 ]]
Iteration 400 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.000903 f=-0.661 shape=(1, 9000, 1)
logits [[ 4.1154695 -2.4292047  2.5944614 -6.9256744]]
Iteration 500 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.00104 f=-0.661 shape=(1, 9000, 1)
logits [[ 4.102098  -2.4235384  2.5895844 -6.913101 ]]
Iteration 600 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.00126 f=-0.661 shape=(1, 9000, 1)
logits [[ 4.0896044 -2.4181695  2.5851884 -6.9013863]]
Iteration 700 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.00142 f=-0.661 shape=(1, 9000, 1)
logits [[ 4.078813  -2.4135315  2.5816476 -6.891362 ]]
Iteration 800 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.00157 f=-0.661 shape=(1, 9000, 1)
logits [[ 4.0685315 -2.4091058  2.5783973 -6.881938 ]]
Iteration 900 of 1000: loss=0.111 " + "l1=0.109" + "l2=0.0016 f=-0.661 shape=(1, 9000, 1)
logits [[ 4.0585384 -2.404825   2.575241  -6.8729   ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.13 " + "l1=1.13" + "l2=0 f=-0.663 shape=(1, 9000, 1)
logits [[ 4.227539  -2.4763944  2.6401756 -7.044445 ]]
Iteration 100 of 1000: loss=1.04 " + "l1=0.99" + "l2=0.0519 f=-0.649 shape=(1, 9000, 1)
logits [[ 3.5774403 -2.2357981  2.384567  -6.323576 ]]
Iteration 200 of 1000: loss=1 " + "l1=0.921" + "l2=0.079 f=-0.65 shape=(1, 9000, 1)
logits [[ 3.2293239 -2.126959   2.280911  -5.9844346]]
Iteration 300 of 1000: loss=0.965 " + "l1=0.862" + "l2=0.102 f=-0.646 shape=(1, 9000, 1)
logits [[ 2.928944  -2.0231214  2.2046695 -5.6946216]]
Iteration 400 of 1000: loss=0.932 " + "l1=0.812" + "l2=0.12 f=-0.638 shape=(1, 9000, 1)
logits [[ 2.6848395 -1.9554161  2.1503155 -5.4333267]]
Iteration 500 of 1000: loss=0.901 " + "l1=0.77" + "l2=0.131 f=-0.636 shape=(1, 9000, 1)
logits [[ 2.4856532 -1.9030282  2.0924165 -5.219007 ]]
Iteration 600 of 1000: loss=0.873 " + "l1=0.735" + "l2=0.139 f=-0.632 shape=(1, 9000, 1)
logits [[ 2.3211322 -1.8524613  2.0283473 -5.024306 ]]
Iteration 700 of 1000: loss=0.849 " + "l1=0.706" + "l2=0.143 f=-0.629 shape=(1, 9000, 1)
logits [[ 2.1924193 -1.8132457  1.9694539 -4.862846 ]]
Iteration 800 of 1000: loss=0.824 " + "l1=0.677" + "l2=0.147 f=-0.629 shape=(1, 9000, 1)
logits [[ 2.0629692 -1.7772832  1.9058353 -4.7061462]]
Iteration 900 of 1000: loss=0.798 " + "l1=0.643" + "l2=0.155 f=-0.632 shape=(1, 9000, 1)
logits [[ 1.9065564 -1.7280997  1.8188597 -4.5262055]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.3 " + "l1=11.3" + "l2=0 f=-0.663 shape=(1, 9000, 1)
logits [[ 4.227539  -2.4763944  2.6401756 -7.044445 ]]
Iteration 100 of 1000: loss=5.49 " + "l1=3.24" + "l2=2.25 f=-0.452 shape=(1, 9000, 1)
logits [[ 0.7056718  -0.68110317  0.7019613  -2.5330627 ]]
Iteration 200 of 1000: loss=3.98 " + "l1=1.31" + "l2=2.68 f=-0.341 shape=(1, 9000, 1)
logits [[ 0.10289299 -0.4870773   0.16320169 -1.1421357 ]]
Iteration 300 of 1000: loss=2.61 " + "l1=0.0253" + "l2=2.59 f=-0.257 shape=(1, 9000, 1)
logits [[-0.40002552 -0.40629855 -0.0984991  -0.12376838]]
Iteration 400 of 1000: loss=2.02 " + "l1=0.0048" + "l2=2.01 f=-0.25 shape=(1, 9000, 1)
logits [[-0.32321376 -0.5002443  -0.08623288 -0.09103768]]
Iteration 500 of 1000: loss=1.71 " + "l1=0.0154" + "l2=1.69 f=-0.237 shape=(1, 9000, 1)
logits [[-0.27600557 -0.56502205 -0.0464639  -0.06182963]]
Iteration 600 of 1000: loss=1.52 " + "l1=0.0119" + "l2=1.51 f=-0.229 shape=(1, 9000, 1)
logits [[-0.26504266 -0.60834146 -0.01553825 -0.0274862 ]]
Iteration 700 of 1000: loss=1.38 " + "l1=0.0199" + "l2=1.36 f=-0.221 shape=(1, 9000, 1)
logits [[-0.2368733  -0.6522007   0.01227337 -0.00760676]]
Iteration 800 of 1000: loss=1.24 " + "l1=0" + "l2=1.24 f=-0.221 shape=(1, 9000, 1)
logits [[-0.25715366 -0.6626602   0.01108406  0.02424642]]
Iteration 900 of 1000: loss=1.14 " + "l1=0" + "l2=1.14 f=-0.217 shape=(1, 9000, 1)
logits [[-0.23276828 -0.7038565   0.03100321  0.03616744]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.2 " + "l1=6.2" + "l2=0 f=-0.663 shape=(1, 9000, 1)
logits [[ 4.227539  -2.4763944  2.6401756 -7.044445 ]]
Iteration 100 of 1000: loss=3.84 " + "l1=2.81" + "l2=1.03 f=-0.545 shape=(1, 9000, 1)
logits [[ 1.3591322 -1.1470708  1.3565797 -3.7482917]]
Iteration 200 of 1000: loss=3.2 " + "l1=2.08" + "l2=1.13 f=-0.495 shape=(1, 9000, 1)
logits [[ 0.86894697 -0.81608087  0.8716643  -2.903399  ]]
Iteration 300 of 1000: loss=2.62 " + "l1=1.37" + "l2=1.25 f=-0.43 shape=(1, 9000, 1)
logits [[ 0.44380394 -0.63839793  0.47875342 -2.0056875 ]]
Iteration 400 of 1000: loss=2.06 " + "l1=0.694" + "l2=1.36 f=-0.355 shape=(1, 9000, 1)
logits [[-0.03095768 -0.5760337   0.22412568 -1.0373428 ]]
Iteration 500 of 1000: loss=1.46 " + "l1=0.0447" + "l2=1.41 f=-0.272 shape=(1, 9000, 1)
logits [[-0.45692265 -0.5322079  -0.00870432 -0.0900467 ]]
Iteration 600 of 1000: loss=1.12 " + "l1=0.0139" + "l2=1.11 f=-0.273 shape=(1, 9000, 1)
logits [[-0.47418526 -0.59511596  0.00140551 -0.02378752]]
Iteration 700 of 1000: loss=0.923 " + "l1=0.0087" + "l2=0.914 f=-0.276 shape=(1, 9000, 1)
logits [[-0.49130353 -0.6196368   0.01152308 -0.00429992]]
Iteration 800 of 1000: loss=0.799 " + "l1=0.000828" + "l2=0.798 f=-0.267 shape=(1, 9000, 1)
logits [[-0.45248303 -0.68155175  0.03300131  0.03149625]]
Iteration 900 of 1000: loss=0.714 " + "l1=0.00164" + "l2=0.713 f=-0.258 shape=(1, 9000, 1)
logits [[-0.40527204 -0.7292293   0.05217913  0.04918934]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.66 " + "l1=3.66" + "l2=0 f=-0.663 shape=(1, 9000, 1)
logits [[ 4.227539  -2.4763944  2.6401756 -7.044445 ]]
Iteration 100 of 1000: loss=2.69 " + "l1=2.15" + "l2=0.543 f=-0.602 shape=(1, 9000, 1)
logits [[ 1.968829  -1.5441422  1.816742  -4.6491766]]
Iteration 200 of 1000: loss=2.34 " + "l1=1.77" + "l2=0.571 f=-0.567 shape=(1, 9000, 1)
logits [[ 1.4732385 -1.2691393  1.4804766 -3.9536052]]
Iteration 300 of 1000: loss=2.1 " + "l1=1.47" + "l2=0.625 f=-0.533 shape=(1, 9000, 1)
logits [[ 1.162897  -1.1019386  1.1659089 -3.3581557]]
Iteration 400 of 1000: loss=1.83 " + "l1=1.14" + "l2=0.686 f=-0.499 shape=(1, 9000, 1)
logits [[ 0.79147553 -0.8739069   0.7958481  -2.7090185 ]]
Iteration 500 of 1000: loss=1.58 " + "l1=0.869" + "l2=0.713 f=-0.433 shape=(1, 9000, 1)
logits [[ 0.5776446  -0.8255469   0.59465396 -2.0779164 ]]
Iteration 600 of 1000: loss=1.36 " + "l1=0.584" + "l2=0.78 f=-0.391 shape=(1, 9000, 1)
logits [[ 0.24928662 -0.8034084   0.39241514 -1.4036678 ]]
Iteration 700 of 1000: loss=1.15 " + "l1=0.324" + "l2=0.83 f=-0.353 shape=(1, 9000, 1)
logits [[-0.10304901 -0.78190345  0.23440899 -0.762644  ]]
Iteration 800 of 1000: loss=0.988 " + "l1=0.168" + "l2=0.82 f=-0.332 shape=(1, 9000, 1)
logits [[-0.3343301 -0.8228155  0.1734475 -0.3435188]]
Iteration 900 of 1000: loss=0.878 " + "l1=0.0805" + "l2=0.797 f=-0.317 shape=(1, 9000, 1)
logits [[-0.43810222 -0.81670445  0.1163096  -0.13125828]]
--- 312.8915181159973 seconds ---
Adv result:3
Loading record A01309
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0283 " + "l1=0.0283" + "l2=0 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.96229327 -1.8716145   0.90320593 -1.6305896 ]]
Iteration 100 of 1000: loss=0.0279 " + "l1=0.0276" + "l2=0.000308 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.9229885 -1.8357718  0.8738696 -1.5814049]]
Iteration 200 of 1000: loss=0.0278 " + "l1=0.0275" + "l2=0.000307 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.91800517 -1.8279759   0.8677292  -1.5742884 ]]
Iteration 300 of 1000: loss=0.0277 " + "l1=0.0273" + "l2=0.000388 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.91006863 -1.8185601   0.8600684  -1.5633655 ]]
Iteration 400 of 1000: loss=0.0276 " + "l1=0.0271" + "l2=0.000464 f=-0.402 shape=(1, 9000, 1)
logits [[ 0.9022252  -1.8090129   0.85218453 -1.5525224 ]]
Iteration 500 of 1000: loss=0.0275 " + "l1=0.0269" + "l2=0.000565 f=-0.401 shape=(1, 9000, 1)
logits [[ 0.8941992 -1.7991478  0.8440572 -1.5414052]]
Iteration 600 of 1000: loss=0.0274 " + "l1=0.0267" + "l2=0.000684 f=-0.399 shape=(1, 9000, 1)
logits [[ 0.8857705  -1.7889782   0.83562547 -1.5297701 ]]
Iteration 700 of 1000: loss=0.0273 " + "l1=0.0266" + "l2=0.000755 f=-0.398 shape=(1, 9000, 1)
logits [[ 0.8774142 -1.7789798  0.8272202 -1.518282 ]]
Iteration 800 of 1000: loss=0.0273 " + "l1=0.0264" + "l2=0.000949 f=-0.397 shape=(1, 9000, 1)
logits [[ 0.8692992 -1.7689402  0.8187558 -1.507012 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.283 " + "l1=0.283" + "l2=0 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.96229327 -1.8716145   0.90320593 -1.6305896 ]]
Iteration 100 of 1000: loss=0.237 " + "l1=0.206" + "l2=0.0305 f=-0.359 shape=(1, 9000, 1)
logits [[ 0.60683894 -1.4549661   0.578857   -1.1667475 ]]
Iteration 200 of 1000: loss=0.203 " + "l1=0.152" + "l2=0.051 f=-0.341 shape=(1, 9000, 1)
logits [[ 0.36257687 -1.1537548   0.36136308 -0.93268245]]
Iteration 300 of 1000: loss=0.181 " + "l1=0.129" + "l2=0.0515 f=-0.332 shape=(1, 9000, 1)
logits [[ 0.2789357  -1.0110581   0.28287113 -0.8792134 ]]
Iteration 400 of 1000: loss=0.169 " + "l1=0.115" + "l2=0.0545 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.23226196 -0.9133646   0.23304254 -0.84874445]]
Iteration 500 of 1000: loss=0.158 " + "l1=0.0927" + "l2=0.0657 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.1006157 -0.7831711  0.1442105 -0.727347 ]]
Iteration 600 of 1000: loss=0.148 " + "l1=0.0779" + "l2=0.0704 f=-0.316 shape=(1, 9000, 1)
logits [[-0.02596508 -0.7025965   0.07658944 -0.61061907]]
Iteration 700 of 1000: loss=0.14 " + "l1=0.0635" + "l2=0.0769 f=-0.309 shape=(1, 9000, 1)
logits [[-0.12202778 -0.6243614   0.0105499  -0.49863243]]
Iteration 800 of 1000: loss=0.131 " + "l1=0.0539" + "l2=0.0771 f=-0.306 shape=(1, 9000, 1)
logits [[-0.18551867 -0.5717542  -0.0325342  -0.43375295]]
Iteration 900 of 1000: loss=0.117 " + "l1=0.04" + "l2=0.0767 f=-0.302 shape=(1, 9000, 1)
logits [[-0.28534225 -0.4988132  -0.09913215 -0.32481122]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.83 " + "l1=2.83" + "l2=0 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.96229327 -1.8716145   0.90320593 -1.6305896 ]]
Iteration 100 of 1000: loss=0.393 " + "l1=0.00614" + "l2=0.387 f=-0.335 shape=(1, 9000, 1)
logits [[-0.5951469  -0.2466665  -0.2569302  -0.24052942]]
Iteration 200 of 1000: loss=0.245 " + "l1=0" + "l2=0.245 f=-0.334 shape=(1, 9000, 1)
logits [[-0.59355724 -0.24089585 -0.24303836 -0.2575394 ]]
Iteration 300 of 1000: loss=0.205 " + "l1=0" + "l2=0.205 f=-0.332 shape=(1, 9000, 1)
logits [[-0.5875174  -0.231429   -0.24203977 -0.2668071 ]]
Iteration 400 of 1000: loss=0.18 " + "l1=0" + "l2=0.18 f=-0.328 shape=(1, 9000, 1)
logits [[-0.57848436 -0.22725052 -0.23373045 -0.27100363]]
Iteration 500 of 1000: loss=0.162 " + "l1=0" + "l2=0.162 f=-0.323 shape=(1, 9000, 1)
logits [[-0.5818051  -0.22946055 -0.23921116 -0.24018928]]
Iteration 600 of 1000: loss=0.152 " + "l1=0" + "l2=0.152 f=-0.311 shape=(1, 9000, 1)
logits [[-0.5281787  -0.20344283 -0.22758456 -0.28333396]]
Iteration 700 of 1000: loss=0.133 " + "l1=0" + "l2=0.133 f=-0.303 shape=(1, 9000, 1)
logits [[-0.51310754 -0.21470721 -0.22591464 -0.2572482 ]]
Iteration 800 of 1000: loss=0.121 " + "l1=0" + "l2=0.121 f=-0.3 shape=(1, 9000, 1)
logits [[-0.512712   -0.22369947 -0.22609235 -0.23653474]]
Iteration 900 of 1000: loss=0.12 " + "l1=0.00322" + "l2=0.117 f=-0.299 shape=(1, 9000, 1)
logits [[-0.4748335  -0.21248181 -0.20925894 -0.30108723]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.56 " + "l1=1.56" + "l2=0 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.96229327 -1.8716145   0.90320593 -1.6305896 ]]
Iteration 100 of 1000: loss=0.372 " + "l1=0.0561" + "l2=0.316 f=-0.321 shape=(1, 9000, 1)
logits [[-0.49534544 -0.32335058 -0.22138582 -0.24521518]]
Iteration 200 of 1000: loss=0.222 " + "l1=0.000877" + "l2=0.221 f=-0.333 shape=(1, 9000, 1)
logits [[-0.59560424 -0.2453763  -0.24378245 -0.24553424]]
Iteration 300 of 1000: loss=0.182 " + "l1=0.00102" + "l2=0.181 f=-0.326 shape=(1, 9000, 1)
logits [[-0.57688296 -0.23664074 -0.2347887  -0.25385472]]
Iteration 400 of 1000: loss=0.157 " + "l1=0.00104" + "l2=0.156 f=-0.32 shape=(1, 9000, 1)
logits [[-0.577016   -0.2321252  -0.2302406  -0.24182504]]
Iteration 500 of 1000: loss=0.14 " + "l1=0.00228" + "l2=0.138 f=-0.314 shape=(1, 9000, 1)
logits [[-0.56131035 -0.22516759 -0.22101504 -0.24848717]]
Iteration 600 of 1000: loss=0.124 " + "l1=0.00149" + "l2=0.122 f=-0.31 shape=(1, 9000, 1)
logits [[-0.5661899  -0.22560622 -0.22289497 -0.22674814]]
Iteration 700 of 1000: loss=0.113 " + "l1=0" + "l2=0.113 f=-0.307 shape=(1, 9000, 1)
logits [[-0.5417486  -0.21243547 -0.21854606 -0.25352916]]
Iteration 800 of 1000: loss=0.107 " + "l1=0.00307" + "l2=0.103 f=-0.303 shape=(1, 9000, 1)
logits [[-0.5144901  -0.21769331 -0.21211614 -0.26651016]]
Iteration 900 of 1000: loss=0.102 " + "l1=0" + "l2=0.102 f=-0.302 shape=(1, 9000, 1)
logits [[-0.54222035 -0.20425488 -0.22859259 -0.23139021]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.921 " + "l1=0.921" + "l2=0 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.96229327 -1.8716145   0.90320593 -1.6305896 ]]
Iteration 100 of 1000: loss=0.367 " + "l1=0.135" + "l2=0.232 f=-0.303 shape=(1, 9000, 1)
logits [[-0.25263152 -0.52428657 -0.10872572 -0.32728207]]
Iteration 200 of 1000: loss=0.221 " + "l1=0.0214" + "l2=0.2 f=-0.319 shape=(1, 9000, 1)
logits [[-0.52657956 -0.28618068 -0.22026207 -0.24240893]]
Iteration 300 of 1000: loss=0.174 " + "l1=0.00193" + "l2=0.172 f=-0.321 shape=(1, 9000, 1)
logits [[-0.570409   -0.2384309  -0.23249714 -0.24277079]]
Iteration 400 of 1000: loss=0.147 " + "l1=0" + "l2=0.147 f=-0.321 shape=(1, 9000, 1)
logits [[-0.58032066 -0.23037739 -0.2351113  -0.23983821]]
Iteration 500 of 1000: loss=0.129 " + "l1=0.00437" + "l2=0.125 f=-0.317 shape=(1, 9000, 1)
logits [[-0.56167066 -0.23820268 -0.22475645 -0.2449066 ]]
Iteration 600 of 1000: loss=0.114 " + "l1=0" + "l2=0.114 f=-0.312 shape=(1, 9000, 1)
logits [[-0.5627617  -0.22456285 -0.22783753 -0.2322658 ]]
Iteration 700 of 1000: loss=0.106 " + "l1=0.00192" + "l2=0.104 f=-0.304 shape=(1, 9000, 1)
logits [[-0.53827256 -0.22648138 -0.22058898 -0.23064622]]
Iteration 800 of 1000: loss=0.099 " + "l1=0" + "l2=0.099 f=-0.302 shape=(1, 9000, 1)
logits [[-0.5336389  -0.2187175  -0.22705138 -0.22671938]]
Iteration 900 of 1000: loss=0.0959 " + "l1=0.00338" + "l2=0.0926 f=-0.299 shape=(1, 9000, 1)
logits [[-0.50424355 -0.22774751 -0.2173473  -0.24770117]]
--- 301.1969406604767 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.000591 " + "l1=0.000591" + "l2=0 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.96229327 -1.8716145   0.90320593 -1.6305896 ]]
Iteration 100 of 1000: loss=0.000479 " + "l1=0.000363" + "l2=0.000117 f=-0.41 shape=(1, 9000, 1)
logits [[ 0.9448442  -1.8773344   0.90858555 -1.6158792 ]]
Iteration 200 of 1000: loss=0.000441 " + "l1=0.000346" + "l2=9.5e-05 f=-0.41 shape=(1, 9000, 1)
logits [[ 0.9440573 -1.8793418  0.9094092 -1.6146001]]
Iteration 300 of 1000: loss=0.000426 " + "l1=0.000308" + "l2=0.000118 f=-0.41 shape=(1, 9000, 1)
logits [[ 0.94135237 -1.8814961   0.9105974  -1.6121073 ]]
Iteration 400 of 1000: loss=0.000429 " + "l1=0.000264" + "l2=0.000164 f=-0.411 shape=(1, 9000, 1)
logits [[ 0.9382346 -1.8836598  0.911805  -1.6093416]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.000295 " + "l1=0.000295" + "l2=0 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.96229327 -1.8716145   0.90320593 -1.6305896 ]]
Iteration 100 of 1000: loss=0.00028 " + "l1=0.000213" + "l2=6.74e-05 f=-0.41 shape=(1, 9000, 1)
logits [[ 0.9494564  -1.8753738   0.90684915 -1.6195745 ]]
Iteration 200 of 1000: loss=0.000252 " + "l1=0.00022" + "l2=3.2e-05 f=-0.41 shape=(1, 9000, 1)
logits [[ 0.9509812 -1.8762791  0.9069239 -1.6203649]]
Iteration 300 of 1000: loss=0.000274 " + "l1=0.000215" + "l2=5.97e-05 f=-0.41 shape=(1, 9000, 1)
logits [[ 0.9504081 -1.8773853  0.9074969 -1.6198484]]
const [0.0025]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.000148 " + "l1=0.000148" + "l2=0 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.96229327 -1.8716145   0.90320593 -1.6305896 ]]
Iteration 100 of 1000: loss=0.000163 " + "l1=0.000115" + "l2=4.81e-05 f=-0.41 shape=(1, 9000, 1)
logits [[ 0.9519731  -1.8744354   0.90605474 -1.6217092 ]]
const [0.00125]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.39e-05 " + "l1=7.39e-05" + "l2=0 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.96229327 -1.8716145   0.90320593 -1.6305896 ]]
Iteration 100 of 1000: loss=9.51e-05 " + "l1=6.03e-05" + "l2=3.48e-05 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.95371485 -1.8738353   0.9054737  -1.6231536 ]]
const [0.000625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.69e-05 " + "l1=3.69e-05" + "l2=0 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.96229327 -1.8716145   0.90320593 -1.6305896 ]]
Iteration 100 of 1000: loss=5.75e-05 " + "l1=3.13e-05" + "l2=2.61e-05 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.95523965 -1.8736221   0.90510035 -1.6243904 ]]
--- 80.78029751777649 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0259 " + "l1=0.0259" + "l2=0 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.96229327 -1.8716145   0.90320593 -1.6305896 ]]
Iteration 100 of 1000: loss=0.0251 " + "l1=0.0245" + "l2=0.000544 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.9046564  -1.8479648   0.87004215 -1.5465416 ]]
Iteration 200 of 1000: loss=0.0248 " + "l1=0.0242" + "l2=0.000586 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.89162815 -1.844166    0.86318374 -1.5283138 ]]
Iteration 300 of 1000: loss=0.0245 " + "l1=0.0238" + "l2=0.000738 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.87535125 -1.8395078   0.8549479  -1.5053301 ]]
Iteration 400 of 1000: loss=0.0243 " + "l1=0.0234" + "l2=0.000882 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.8584097 -1.8347213  0.8465164 -1.4816672]]
Iteration 500 of 1000: loss=0.0241 " + "l1=0.023" + "l2=0.00107 f=-0.402 shape=(1, 9000, 1)
logits [[ 0.8410382 -1.8298751  0.8380838 -1.4579561]]
Iteration 600 of 1000: loss=0.0238 " + "l1=0.0227" + "l2=0.00119 f=-0.401 shape=(1, 9000, 1)
logits [[ 0.8279909  -1.8227583   0.82804126 -1.4381163 ]]
Iteration 700 of 1000: loss=0.0237 " + "l1=0.0224" + "l2=0.0013 f=-0.4 shape=(1, 9000, 1)
logits [[ 0.8171447 -1.8141117  0.817135  -1.4207745]]
Iteration 800 of 1000: loss=0.0236 " + "l1=0.0221" + "l2=0.00148 f=-0.399 shape=(1, 9000, 1)
logits [[ 0.806859   -1.8056265   0.80681026 -1.4044259 ]]
Iteration 900 of 1000: loss=0.0235 " + "l1=0.0218" + "l2=0.00166 f=-0.398 shape=(1, 9000, 1)
logits [[ 0.79588044 -1.7972485   0.7959626  -1.387284  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.259 " + "l1=0.259" + "l2=0 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.96229327 -1.8716145   0.90320593 -1.6305896 ]]
Iteration 100 of 1000: loss=0.176 " + "l1=0.128" + "l2=0.0478 f=-0.358 shape=(1, 9000, 1)
logits [[ 0.4239815  -1.5538456   0.48910177 -0.7931144 ]]
Iteration 200 of 1000: loss=0.115 " + "l1=0.0329" + "l2=0.0825 f=-0.343 shape=(1, 9000, 1)
logits [[-0.06464162 -1.5004412   0.26040563 -0.06847332]]
Iteration 300 of 1000: loss=0.0701 " + "l1=0" + "l2=0.0701 f=-0.337 shape=(1, 9000, 1)
logits [[-0.22496283 -1.50339     0.18935388  0.18945485]]
Iteration 400 of 1000: loss=0.0543 " + "l1=0" + "l2=0.0543 f=-0.342 shape=(1, 9000, 1)
logits [[-0.23712191 -1.5508596   0.206792    0.21260592]]
Iteration 500 of 1000: loss=0.0448 " + "l1=0.00056" + "l2=0.0443 f=-0.345 shape=(1, 9000, 1)
logits [[-0.23212382 -1.572138    0.21397011  0.20836526]]
Iteration 600 of 1000: loss=0.0386 " + "l1=0.000154" + "l2=0.0385 f=-0.346 shape=(1, 9000, 1)
logits [[-0.23346229 -1.575417    0.21254057  0.21100232]]
Iteration 700 of 1000: loss=0.0341 " + "l1=0" + "l2=0.0341 f=-0.344 shape=(1, 9000, 1)
logits [[-0.23163497 -1.5713972   0.21041268  0.21475789]]
Iteration 800 of 1000: loss=0.0308 " + "l1=0.000254" + "l2=0.0305 f=-0.343 shape=(1, 9000, 1)
logits [[-0.22571734 -1.569275    0.21284625  0.21030843]]
Iteration 900 of 1000: loss=0.0279 " + "l1=0" + "l2=0.0279 f=-0.342 shape=(1, 9000, 1)
logits [[-0.22583556 -1.5643086   0.21058741  0.21242765]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.143 " + "l1=0.143" + "l2=0 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.96229327 -1.8716145   0.90320593 -1.6305896 ]]
Iteration 100 of 1000: loss=0.119 " + "l1=0.108" + "l2=0.0109 f=-0.386 shape=(1, 9000, 1)
logits [[ 0.71732444 -1.7337991   0.71856266 -1.2463987 ]]
Iteration 200 of 1000: loss=0.108 " + "l1=0.0896" + "l2=0.018 f=-0.376 shape=(1, 9000, 1)
logits [[ 0.5719904 -1.6576024  0.6047697 -1.0234802]]
Iteration 300 of 1000: loss=0.096 " + "l1=0.0714" + "l2=0.0246 f=-0.368 shape=(1, 9000, 1)
logits [[ 0.41208604 -1.6109319   0.51145583 -0.7861977 ]]
Iteration 400 of 1000: loss=0.0796 " + "l1=0.0472" + "l2=0.0324 f=-0.37 shape=(1, 9000, 1)
logits [[ 0.16038549 -1.6143274   0.41666648 -0.4422024 ]]
Iteration 500 of 1000: loss=0.0606 " + "l1=0.0205" + "l2=0.0401 f=-0.358 shape=(1, 9000, 1)
logits [[-0.06295899 -1.6054814   0.3041739  -0.06798861]]
Iteration 600 of 1000: loss=0.0463 " + "l1=0.00282" + "l2=0.0435 f=-0.346 shape=(1, 9000, 1)
logits [[-0.19239244 -1.5353978   0.1981217   0.14688852]]
Iteration 700 of 1000: loss=0.0379 " + "l1=0" + "l2=0.0379 f=-0.343 shape=(1, 9000, 1)
logits [[-0.21875781 -1.5419067   0.19430636  0.19561505]]
Iteration 800 of 1000: loss=0.0331 " + "l1=0.000325" + "l2=0.0328 f=-0.34 shape=(1, 9000, 1)
logits [[-0.21269636 -1.5352695   0.19791776  0.19200051]]
Iteration 900 of 1000: loss=0.0301 " + "l1=0.000617" + "l2=0.0295 f=-0.338 shape=(1, 9000, 1)
logits [[-0.20997888 -1.5308622   0.1993261   0.1881102 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0843 " + "l1=0.0843" + "l2=0 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.96229327 -1.8716145   0.90320593 -1.6305896 ]]
Iteration 100 of 1000: loss=0.0756 " + "l1=0.0716" + "l2=0.00407 f=-0.398 shape=(1, 9000, 1)
logits [[ 0.80451673 -1.8025277   0.8043116  -1.3971618 ]]
Iteration 200 of 1000: loss=0.0722 " + "l1=0.0666" + "l2=0.00557 f=-0.391 shape=(1, 9000, 1)
logits [[ 0.74891585 -1.7599086   0.74898684 -1.3015771 ]]
Iteration 300 of 1000: loss=0.0691 " + "l1=0.0619" + "l2=0.00721 f=-0.385 shape=(1, 9000, 1)
logits [[ 0.68971574 -1.7217494   0.69727045 -1.2061701 ]]
Iteration 400 of 1000: loss=0.0658 " + "l1=0.0568" + "l2=0.00898 f=-0.382 shape=(1, 9000, 1)
logits [[ 0.6179925 -1.6900393  0.6458593 -1.1018497]]
Iteration 500 of 1000: loss=0.0624 " + "l1=0.0518" + "l2=0.0106 f=-0.379 shape=(1, 9000, 1)
logits [[ 0.54561967 -1.6634612   0.5979906  -0.99718803]]
Iteration 600 of 1000: loss=0.0588 " + "l1=0.0461" + "l2=0.0128 f=-0.378 shape=(1, 9000, 1)
logits [[ 0.45051828 -1.6489412   0.5518642  -0.8657947 ]]
Iteration 700 of 1000: loss=0.0535 " + "l1=0.0374" + "l2=0.0161 f=-0.382 shape=(1, 9000, 1)
logits [[ 0.3001463  -1.6518805   0.48748398 -0.6623761 ]]
Iteration 800 of 1000: loss=0.0485 " + "l1=0.0305" + "l2=0.018 f=-0.377 shape=(1, 9000, 1)
logits [[ 0.20156102 -1.6379684   0.43232942 -0.5056953 ]]
Iteration 900 of 1000: loss=0.0438 " + "l1=0.0238" + "l2=0.02 f=-0.37 shape=(1, 9000, 1)
logits [[ 0.10699809 -1.6115706   0.37768736 -0.35349885]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.113 " + "l1=0.113" + "l2=0 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.96229327 -1.8716145   0.90320593 -1.6305896 ]]
Iteration 100 of 1000: loss=0.0982 " + "l1=0.0913" + "l2=0.00697 f=-0.392 shape=(1, 9000, 1)
logits [[ 0.76161337 -1.7697978   0.7621303  -1.3236166 ]]
Iteration 200 of 1000: loss=0.0917 " + "l1=0.0811" + "l2=0.0106 f=-0.384 shape=(1, 9000, 1)
logits [[ 0.6689513 -1.7108921  0.6809419 -1.1735494]]
Iteration 300 of 1000: loss=0.0851 " + "l1=0.0709" + "l2=0.0142 f=-0.377 shape=(1, 9000, 1)
logits [[ 0.56404954 -1.6611776   0.60402024 -1.0163665 ]]
Iteration 400 of 1000: loss=0.0782 " + "l1=0.0603" + "l2=0.0179 f=-0.374 shape=(1, 9000, 1)
logits [[ 0.44258565 -1.6326442   0.53707623 -0.84188443]]
Iteration 500 of 1000: loss=0.0686 " + "l1=0.0454" + "l2=0.0232 f=-0.376 shape=(1, 9000, 1)
logits [[ 0.24936733 -1.6315356   0.45831326 -0.5783935 ]]
Iteration 600 of 1000: loss=0.0581 " + "l1=0.0312" + "l2=0.0269 f=-0.372 shape=(1, 9000, 1)
logits [[ 0.09194016 -1.6218213   0.37824485 -0.3358154 ]]
Iteration 700 of 1000: loss=0.0478 " + "l1=0.0162" + "l2=0.0316 f=-0.356 shape=(1, 9000, 1)
logits [[-0.05014786 -1.5777433   0.28624117 -0.0839169 ]]
Iteration 800 of 1000: loss=0.0398 " + "l1=0.00581" + "l2=0.034 f=-0.346 shape=(1, 9000, 1)
logits [[-0.14472866 -1.5322652   0.21303517  0.08016158]]
Iteration 900 of 1000: loss=0.0336 " + "l1=0.000223" + "l2=0.0334 f=-0.337 shape=(1, 9000, 1)
logits [[-0.20130937 -1.5075375   0.18339139  0.17828345]]
--- 315.09570837020874 seconds ---
Adv result:3
Loading record A01313
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0677 " + "l1=0.0677" + "l2=0 f=-0.508 shape=(1, 9000, 1)
logits [[ 4.5692925 -2.199897   2.8991218 -7.3002896]]
Iteration 100 of 1000: loss=0.0675 " + "l1=0.0672" + "l2=0.000222 f=-0.509 shape=(1, 9000, 1)
logits [[ 4.5403624 -2.1826286  2.8862538 -7.2784534]]
Iteration 200 of 1000: loss=0.0674 " + "l1=0.0672" + "l2=0.000209 f=-0.509 shape=(1, 9000, 1)
logits [[ 4.537822  -2.1802204  2.8844872 -7.2770567]]
Iteration 300 of 1000: loss=0.0674 " + "l1=0.0671" + "l2=0.000254 f=-0.509 shape=(1, 9000, 1)
logits [[ 4.5339503 -2.177122   2.8823597 -7.2747188]]
Iteration 400 of 1000: loss=0.0673 " + "l1=0.067" + "l2=0.000295 f=-0.509 shape=(1, 9000, 1)
logits [[ 4.5300064 -2.1740773  2.8802018 -7.272224 ]]
Iteration 500 of 1000: loss=0.0673 " + "l1=0.067" + "l2=0.000358 f=-0.509 shape=(1, 9000, 1)
logits [[ 4.52628   -2.1712835  2.8781474 -7.269845 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.677 " + "l1=0.677" + "l2=0 f=-0.508 shape=(1, 9000, 1)
logits [[ 4.5692925 -2.199897   2.8991218 -7.3002896]]
Iteration 100 of 1000: loss=0.653 " + "l1=0.637" + "l2=0.0159 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.326154  -2.0429823  2.786279  -7.11772  ]]
Iteration 200 of 1000: loss=0.644 " + "l1=0.624" + "l2=0.0206 f=-0.513 shape=(1, 9000, 1)
logits [[ 4.247406  -1.991345   2.7489874 -7.059011 ]]
Iteration 300 of 1000: loss=0.637 " + "l1=0.612" + "l2=0.0245 f=-0.515 shape=(1, 9000, 1)
logits [[ 4.1790357 -1.9431002  2.7102141 -7.004993 ]]
Iteration 400 of 1000: loss=0.629 " + "l1=0.599" + "l2=0.0296 f=-0.514 shape=(1, 9000, 1)
logits [[ 4.10353   -1.8887845  2.6663358 -6.9387918]]
Iteration 500 of 1000: loss=0.619 " + "l1=0.583" + "l2=0.0364 f=-0.513 shape=(1, 9000, 1)
logits [[ 4.00877   -1.8176084  2.6114724 -6.8529096]]
Iteration 600 of 1000: loss=0.608 " + "l1=0.564" + "l2=0.0436 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.90344   -1.737454   2.551581  -6.7634444]]
Iteration 700 of 1000: loss=0.596 " + "l1=0.544" + "l2=0.0516 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.7905293 -1.6492513  2.4897017 -6.668774 ]]
Iteration 800 of 1000: loss=0.582 " + "l1=0.522" + "l2=0.0604 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.6702583 -1.5481862  2.4263136 -6.5778   ]]
Iteration 900 of 1000: loss=0.57 " + "l1=0.503" + "l2=0.0671 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.5685318 -1.462282   2.379738  -6.504385 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.77 " + "l1=6.77" + "l2=0 f=-0.508 shape=(1, 9000, 1)
logits [[ 4.5692925 -2.199897   2.8991218 -7.3002896]]
Iteration 100 of 1000: loss=3.92 " + "l1=2.09" + "l2=1.83 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.6443715  -0.42551917  1.6622566  -5.056048  ]]
Iteration 200 of 1000: loss=3.3 " + "l1=1.48" + "l2=1.83 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.3474225  -0.12563305  1.3503556  -4.750009  ]]
Iteration 300 of 1000: loss=2.91 " + "l1=1.09" + "l2=1.82 f=-0.537 shape=(1, 9000, 1)
logits [[ 1.125952    0.03865445  1.1278075  -4.4414487 ]]
Iteration 400 of 1000: loss=2.68 " + "l1=0.934" + "l2=1.75 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.0256549   0.10257647  1.0368407  -4.288158  ]]
Iteration 500 of 1000: loss=2.49 " + "l1=0.753" + "l2=1.74 f=-0.527 shape=(1, 9000, 1)
logits [[ 0.92392594  0.20053531  0.9534711  -4.1869297 ]]
Iteration 600 of 1000: loss=2.22 " + "l1=0.5" + "l2=1.72 f=-0.523 shape=(1, 9000, 1)
logits [[ 0.8002197   0.31858206  0.81895363 -4.030473  ]]
Iteration 700 of 1000: loss=1.73 " + "l1=0.0283" + "l2=1.7 f=-0.515 shape=(1, 9000, 1)
logits [[ 0.51936585  0.5013149   0.5296625  -3.61073   ]]
Iteration 800 of 1000: loss=1.42 " + "l1=0.00248" + "l2=1.42 f=-0.507 shape=(1, 9000, 1)
logits [[ 0.47382483  0.47377577  0.47625202 -3.452074  ]]
Iteration 900 of 1000: loss=1.28 " + "l1=0.00717" + "l2=1.27 f=-0.501 shape=(1, 9000, 1)
logits [[ 0.47018543  0.4665089   0.4736828  -3.4144871 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.72 " + "l1=3.72" + "l2=0 f=-0.508 shape=(1, 9000, 1)
logits [[ 4.5692925 -2.199897   2.8991218 -7.3002896]]
Iteration 100 of 1000: loss=2.9 " + "l1=2.29" + "l2=0.606 f=-0.521 shape=(1, 9000, 1)
logits [[ 2.9759686 -1.1955228  2.1960368 -6.060355 ]]
Iteration 200 of 1000: loss=2.48 " + "l1=1.61" + "l2=0.866 f=-0.527 shape=(1, 9000, 1)
logits [[ 2.1598904 -0.7700032  1.9589695 -5.4584556]]
Iteration 300 of 1000: loss=2.12 " + "l1=1.25" + "l2=0.872 f=-0.526 shape=(1, 9000, 1)
logits [[ 1.7883939  -0.48178798  1.7540146  -5.164421  ]]
Iteration 400 of 1000: loss=1.86 " + "l1=1.01" + "l2=0.851 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.549562   -0.28685588  1.5558181  -4.9431696 ]]
Iteration 500 of 1000: loss=1.67 " + "l1=0.857" + "l2=0.816 f=-0.523 shape=(1, 9000, 1)
logits [[ 1.4015508  -0.15643294  1.3927054  -4.727956  ]]
Iteration 600 of 1000: loss=1.54 " + "l1=0.796" + "l2=0.748 f=-0.512 shape=(1, 9000, 1)
logits [[ 1.324652   -0.12137642  1.3256706  -4.5787134 ]]
Iteration 700 of 1000: loss=1.46 " + "l1=0.754" + "l2=0.705 f=-0.504 shape=(1, 9000, 1)
logits [[ 1.2692368  -0.10023114  1.2715305  -4.4569435 ]]
Iteration 800 of 1000: loss=1.37 " + "l1=0.676" + "l2=0.697 f=-0.498 shape=(1, 9000, 1)
logits [[ 1.1667719  -0.04305784  1.1857874  -4.3001246 ]]
Iteration 900 of 1000: loss=1.21 " + "l1=0.514" + "l2=0.699 f=-0.484 shape=(1, 9000, 1)
logits [[ 1.0189734   0.08416489  1.0099032  -4.047647  ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.25 " + "l1=5.25" + "l2=0 f=-0.508 shape=(1, 9000, 1)
logits [[ 4.5692925 -2.199897   2.8991218 -7.3002896]]
Iteration 100 of 1000: loss=3.48 " + "l1=2.11" + "l2=1.37 f=-0.546 shape=(1, 9000, 1)
logits [[ 1.9710225 -0.7570181  1.9262438 -5.324332 ]]
Iteration 200 of 1000: loss=2.9 " + "l1=1.48" + "l2=1.43 f=-0.549 shape=(1, 9000, 1)
logits [[ 1.5664386  -0.33978963  1.5649471  -4.987277  ]]
Iteration 300 of 1000: loss=2.52 " + "l1=1.17" + "l2=1.34 f=-0.55 shape=(1, 9000, 1)
logits [[ 1.3501049  -0.15232621  1.362018   -4.7603917 ]]
Iteration 400 of 1000: loss=2.18 " + "l1=0.936" + "l2=1.25 f=-0.538 shape=(1, 9000, 1)
logits [[ 1.189714   -0.00541609  1.2016908  -4.538969  ]]
Iteration 500 of 1000: loss=1.98 " + "l1=0.845" + "l2=1.14 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.1310806  0.0406231  1.1284143 -4.4249125]]
Iteration 600 of 1000: loss=1.75 " + "l1=0.638" + "l2=1.11 f=-0.521 shape=(1, 9000, 1)
logits [[ 0.9757134  0.1524929  0.97572   -4.1888447]]
Iteration 700 of 1000: loss=1.47 " + "l1=0.38" + "l2=1.09 f=-0.512 shape=(1, 9000, 1)
logits [[ 0.7662508   0.27755502  0.768002   -3.857912  ]]
Iteration 800 of 1000: loss=1.21 " + "l1=0.102" + "l2=1.11 f=-0.503 shape=(1, 9000, 1)
logits [[ 0.53584266  0.4166426   0.5481048  -3.513006  ]]
Iteration 900 of 1000: loss=1.03 " + "l1=0.0146" + "l2=1.02 f=-0.495 shape=(1, 9000, 1)
logits [[ 0.46139476  0.44996175  0.46879306 -3.3584733 ]]
--- 289.33500933647156 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0167 " + "l1=0.0167" + "l2=0 f=-0.508 shape=(1, 9000, 1)
logits [[ 4.5692925 -2.199897   2.8991218 -7.3002896]]
Iteration 100 of 1000: loss=0.0165 " + "l1=0.0164" + "l2=0.000175 f=-0.509 shape=(1, 9000, 1)
logits [[ 4.545531  -2.2063158  2.9085999 -7.2837   ]]
Iteration 200 of 1000: loss=0.0165 " + "l1=0.0164" + "l2=0.000146 f=-0.509 shape=(1, 9000, 1)
logits [[ 4.545023  -2.206678   2.9091477 -7.2840004]]
Iteration 300 of 1000: loss=0.0165 " + "l1=0.0163" + "l2=0.000193 f=-0.509 shape=(1, 9000, 1)
logits [[ 4.542831  -2.2074502  2.9103076 -7.2828503]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.167 " + "l1=0.167" + "l2=0 f=-0.508 shape=(1, 9000, 1)
logits [[ 4.5692925 -2.199897   2.8991218 -7.3002896]]
Iteration 100 of 1000: loss=0.151 " + "l1=0.142" + "l2=0.00983 f=-0.515 shape=(1, 9000, 1)
logits [[ 4.3869095 -2.2469897  2.9711888 -7.172096 ]]
Iteration 200 of 1000: loss=0.147 " + "l1=0.134" + "l2=0.0133 f=-0.519 shape=(1, 9000, 1)
logits [[ 4.3364344 -2.2654119  2.9987612 -7.1441293]]
Iteration 300 of 1000: loss=0.144 " + "l1=0.128" + "l2=0.0162 f=-0.521 shape=(1, 9000, 1)
logits [[ 4.295078  -2.279065   3.0178578 -7.117935 ]]
Iteration 400 of 1000: loss=0.141 " + "l1=0.123" + "l2=0.0181 f=-0.522 shape=(1, 9000, 1)
logits [[ 4.2614517 -2.2865298  3.0302105 -7.0948615]]
Iteration 500 of 1000: loss=0.139 " + "l1=0.118" + "l2=0.0202 f=-0.523 shape=(1, 9000, 1)
logits [[ 4.2256565 -2.2920039  3.0409646 -7.0679326]]
Iteration 600 of 1000: loss=0.136 " + "l1=0.115" + "l2=0.0213 f=-0.525 shape=(1, 9000, 1)
logits [[ 4.1995153 -2.2957883  3.0494328 -7.052266 ]]
Iteration 700 of 1000: loss=0.134 " + "l1=0.112" + "l2=0.0226 f=-0.526 shape=(1, 9000, 1)
logits [[ 4.173756  -2.2996585  3.0586426 -7.038484 ]]
Iteration 800 of 1000: loss=0.132 " + "l1=0.107" + "l2=0.0244 f=-0.528 shape=(1, 9000, 1)
logits [[ 4.1435204 -2.3062682  3.0696063 -7.018682 ]]
Iteration 900 of 1000: loss=0.129 " + "l1=0.104" + "l2=0.0258 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.1145144 -2.312407   3.0794196 -7.0010858]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.67 " + "l1=1.67" + "l2=0 f=-0.508 shape=(1, 9000, 1)
logits [[ 4.5692925 -2.199897   2.8991218 -7.3002896]]
Iteration 100 of 1000: loss=0.356 " + "l1=0" + "l2=0.356 f=-0.543 shape=(1, 9000, 1)
logits [[ 3.321348  -2.447336   3.3400824 -6.387862 ]]
Iteration 200 of 1000: loss=0.265 " + "l1=0" + "l2=0.265 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.3425481 -2.4524987  3.3534055 -6.438301 ]]
Iteration 300 of 1000: loss=0.22 " + "l1=0" + "l2=0.22 f=-0.554 shape=(1, 9000, 1)
logits [[ 3.3497167 -2.4465215  3.3502083 -6.4684505]]
Iteration 400 of 1000: loss=0.195 " + "l1=0" + "l2=0.195 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.333775  -2.4368021  3.3436906 -6.48243  ]]
Iteration 500 of 1000: loss=0.177 " + "l1=0.00547" + "l2=0.171 f=-0.566 shape=(1, 9000, 1)
logits [[ 3.3416364 -2.4250007  3.336168  -6.5149145]]
Iteration 600 of 1000: loss=0.162 " + "l1=0" + "l2=0.162 f=-0.569 shape=(1, 9000, 1)
logits [[ 3.3224764 -2.4156191  3.3379657 -6.522462 ]]
Iteration 700 of 1000: loss=0.152 " + "l1=0" + "l2=0.152 f=-0.572 shape=(1, 9000, 1)
logits [[ 3.3045366 -2.4009407  3.334909  -6.527376 ]]
Iteration 800 of 1000: loss=0.141 " + "l1=0" + "l2=0.141 f=-0.574 shape=(1, 9000, 1)
logits [[ 3.2983265 -2.3865125  3.3306842 -6.538587 ]]
Iteration 900 of 1000: loss=0.133 " + "l1=0" + "l2=0.133 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.2815905 -2.3680344  3.321701  -6.5352516]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.919 " + "l1=0.919" + "l2=0 f=-0.508 shape=(1, 9000, 1)
logits [[ 4.5692925 -2.199897   2.8991218 -7.3002896]]
Iteration 100 of 1000: loss=0.356 " + "l1=0.00115" + "l2=0.355 f=-0.543 shape=(1, 9000, 1)
logits [[ 3.3350825 -2.4468544  3.3329968 -6.391629 ]]
Iteration 200 of 1000: loss=0.247 " + "l1=0" + "l2=0.247 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.349024  -2.458534   3.3554852 -6.442549 ]]
Iteration 300 of 1000: loss=0.205 " + "l1=0" + "l2=0.205 f=-0.556 shape=(1, 9000, 1)
logits [[ 3.357273  -2.4549022  3.3576694 -6.482086 ]]
Iteration 400 of 1000: loss=0.181 " + "l1=0.00355" + "l2=0.178 f=-0.561 shape=(1, 9000, 1)
logits [[ 3.356774  -2.4432588  3.3503277 -6.508419 ]]
Iteration 500 of 1000: loss=0.164 " + "l1=0" + "l2=0.164 f=-0.567 shape=(1, 9000, 1)
logits [[ 3.3396547 -2.4355924  3.35307   -6.5246034]]
Iteration 600 of 1000: loss=0.146 " + "l1=0.00036" + "l2=0.146 f=-0.571 shape=(1, 9000, 1)
logits [[ 3.348237  -2.4234955  3.3475833 -6.5565786]]
Iteration 700 of 1000: loss=0.136 " + "l1=0" + "l2=0.136 f=-0.573 shape=(1, 9000, 1)
logits [[ 3.3332295 -2.405284   3.3432531 -6.5638523]]
Iteration 800 of 1000: loss=0.127 " + "l1=0.00516" + "l2=0.122 f=-0.574 shape=(1, 9000, 1)
logits [[ 3.3393984 -2.3867755  3.3300083 -6.579308 ]]
Iteration 900 of 1000: loss=0.114 " + "l1=0" + "l2=0.114 f=-0.577 shape=(1, 9000, 1)
logits [[ 3.317757  -2.3711827  3.3186333 -6.5729976]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.543 " + "l1=0.543" + "l2=0 f=-0.508 shape=(1, 9000, 1)
logits [[ 4.5692925 -2.199897   2.8991218 -7.3002896]]
Iteration 100 of 1000: loss=0.361 " + "l1=0.238" + "l2=0.122 f=-0.535 shape=(1, 9000, 1)
logits [[ 3.8965607 -2.38285    3.1628604 -6.8174214]]
Iteration 200 of 1000: loss=0.28 " + "l1=0.0999" + "l2=0.18 f=-0.545 shape=(1, 9000, 1)
logits [[ 3.597564  -2.4488451  3.290262  -6.6172853]]
Iteration 300 of 1000: loss=0.221 " + "l1=0.00729" + "l2=0.214 f=-0.552 shape=(1, 9000, 1)
logits [[ 3.377659  -2.4635518  3.355224  -6.4756937]]
Iteration 400 of 1000: loss=0.185 " + "l1=0.000238" + "l2=0.185 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.3573725 -2.4551883  3.3566391 -6.4995623]]
Iteration 500 of 1000: loss=0.162 " + "l1=0.000157" + "l2=0.162 f=-0.565 shape=(1, 9000, 1)
logits [[ 3.3536084 -2.4420824  3.3531265 -6.5256314]]
Iteration 600 of 1000: loss=0.146 " + "l1=0" + "l2=0.146 f=-0.571 shape=(1, 9000, 1)
logits [[ 3.3405273 -2.422481   3.3472774 -6.5509763]]
Iteration 700 of 1000: loss=0.131 " + "l1=0" + "l2=0.131 f=-0.573 shape=(1, 9000, 1)
logits [[ 3.331107 -2.398972  3.336031 -6.560788]]
Iteration 800 of 1000: loss=0.118 " + "l1=0" + "l2=0.118 f=-0.577 shape=(1, 9000, 1)
logits [[ 3.3160498 -2.3785682  3.3223252 -6.566171 ]]
Iteration 900 of 1000: loss=0.104 " + "l1=0" + "l2=0.104 f=-0.581 shape=(1, 9000, 1)
logits [[ 3.302035  -2.3625753  3.3062258 -6.568013 ]]
--- 277.33157539367676 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.119 " + "l1=0.119" + "l2=0 f=-0.508 shape=(1, 9000, 1)
logits [[ 4.5692925 -2.199897   2.8991218 -7.3002896]]
Iteration 100 of 1000: loss=0.118 " + "l1=0.118" + "l2=0.000441 f=-0.507 shape=(1, 9000, 1)
logits [[ 4.524931  -2.1973176  2.8885684 -7.24373  ]]
Iteration 200 of 1000: loss=0.118 " + "l1=0.118" + "l2=0.000459 f=-0.507 shape=(1, 9000, 1)
logits [[ 4.5190935 -2.196492   2.8867087 -7.2361574]]
Iteration 300 of 1000: loss=0.118 " + "l1=0.117" + "l2=0.00055 f=-0.506 shape=(1, 9000, 1)
logits [[ 4.5122333 -2.1957223  2.8846257 -7.2270536]]
Iteration 400 of 1000: loss=0.118 " + "l1=0.117" + "l2=0.000638 f=-0.506 shape=(1, 9000, 1)
logits [[ 4.505829 -2.194961  2.882528 -7.218601]]
Iteration 500 of 1000: loss=0.118 " + "l1=0.117" + "l2=0.000759 f=-0.506 shape=(1, 9000, 1)
logits [[ 4.499792  -2.1942897  2.8805687 -7.211001 ]]
Iteration 600 of 1000: loss=0.118 " + "l1=0.117" + "l2=0.000868 f=-0.506 shape=(1, 9000, 1)
logits [[ 4.4943256 -2.193528   2.8787014 -7.204318 ]]
Iteration 700 of 1000: loss=0.118 " + "l1=0.117" + "l2=0.000983 f=-0.506 shape=(1, 9000, 1)
logits [[ 4.4891715 -2.1926796  2.876824  -7.1983438]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.19 " + "l1=1.19" + "l2=0 f=-0.508 shape=(1, 9000, 1)
logits [[ 4.5692925 -2.199897   2.8991218 -7.3002896]]
Iteration 100 of 1000: loss=1.13 " + "l1=1.1" + "l2=0.0345 f=-0.498 shape=(1, 9000, 1)
logits [[ 4.1727357 -2.1579332  2.801927  -6.8090305]]
Iteration 200 of 1000: loss=1.11 " + "l1=1.06" + "l2=0.0486 f=-0.495 shape=(1, 9000, 1)
logits [[ 4.019377  -2.1442618  2.7605762 -6.617084 ]]
Iteration 300 of 1000: loss=1.09 " + "l1=1.03" + "l2=0.0615 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.8791842 -2.1217082  2.7192345 -6.4517245]]
Iteration 400 of 1000: loss=1.08 " + "l1=1.01" + "l2=0.0729 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.7514694 -2.089141   2.6721246 -6.309335 ]]
Iteration 500 of 1000: loss=1.06 " + "l1=0.981" + "l2=0.0824 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.6335907 -2.0462427  2.62022   -6.1797986]]
Iteration 600 of 1000: loss=1.05 " + "l1=0.953" + "l2=0.094 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.4963903 -1.9926623  2.5624058 -6.0313644]]
Iteration 700 of 1000: loss=1.03 " + "l1=0.928" + "l2=0.101 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.3778982 -1.9424672  2.505941  -5.9064155]]
Iteration 800 of 1000: loss=1.01 " + "l1=0.899" + "l2=0.111 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.2342153 -1.8802198  2.4334228 -5.7583346]]
Iteration 900 of 1000: loss=0.989 " + "l1=0.874" + "l2=0.115 f=-0.497 shape=(1, 9000, 1)
logits [[ 3.1025774 -1.8184528  2.3619292 -5.633014 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.9 " + "l1=11.9" + "l2=0 f=-0.508 shape=(1, 9000, 1)
logits [[ 4.5692925 -2.199897   2.8991218 -7.3002896]]
Iteration 100 of 1000: loss=6.72 " + "l1=4.17" + "l2=2.55 f=-0.351 shape=(1, 9000, 1)
logits [[ 1.3896992 -1.4118165  1.394852  -2.7767515]]
Iteration 200 of 1000: loss=5.04 " + "l1=1.52" + "l2=3.52 f=-0.331 shape=(1, 9000, 1)
logits [[ 0.17499438 -1.0250053   0.52222496 -0.9958629 ]]
Iteration 300 of 1000: loss=4.04 " + "l1=0.379" + "l2=3.66 f=-0.308 shape=(1, 9000, 1)
logits [[-0.3398014  -0.8332378   0.15952902 -0.21911773]]
Iteration 400 of 1000: loss=3.52 " + "l1=0" + "l2=3.52 f=-0.29 shape=(1, 9000, 1)
logits [[-0.54826266 -0.7039366   0.04196498  0.04956024]]
Iteration 500 of 1000: loss=3.18 " + "l1=0.0727" + "l2=3.11 f=-0.286 shape=(1, 9000, 1)
logits [[-0.47914624 -0.67401105  0.0405699  -0.03210127]]
Iteration 600 of 1000: loss=2.82 " + "l1=0.0141" + "l2=2.81 f=-0.254 shape=(1, 9000, 1)
logits [[-0.3696426  -0.6570356   0.01182519 -0.00229976]]
Iteration 700 of 1000: loss=2.53 " + "l1=0.0138" + "l2=2.52 f=-0.225 shape=(1, 9000, 1)
logits [[-0.27141008 -0.68627346  0.03606613  0.02227939]]
Iteration 800 of 1000: loss=2.32 " + "l1=0.0429" + "l2=2.28 f=-0.201 shape=(1, 9000, 1)
logits [[-0.17130639 -0.7200582   0.06483155  0.02189226]]
Iteration 900 of 1000: loss=2.12 " + "l1=0" + "l2=2.12 f=-0.178 shape=(1, 9000, 1)
logits [[-0.10067894 -0.7930049   0.08873021  0.09478066]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.53 " + "l1=6.53" + "l2=0 f=-0.508 shape=(1, 9000, 1)
logits [[ 4.5692925 -2.199897   2.8991218 -7.3002896]]
Iteration 100 of 1000: loss=4.64 " + "l1=3.59" + "l2=1.05 f=-0.471 shape=(1, 9000, 1)
logits [[ 2.1395185 -1.7831696  2.148114  -4.388184 ]]
Iteration 200 of 1000: loss=4.09 " + "l1=2.85" + "l2=1.24 f=-0.42 shape=(1, 9000, 1)
logits [[ 1.6847645 -1.5601517  1.692465  -3.4964755]]
Iteration 300 of 1000: loss=3.65 " + "l1=2.15" + "l2=1.5 f=-0.374 shape=(1, 9000, 1)
logits [[ 1.2518703 -1.3973807  1.280318  -2.6288846]]
Iteration 400 of 1000: loss=3.13 " + "l1=1.57" + "l2=1.56 f=-0.366 shape=(1, 9000, 1)
logits [[ 0.79954684 -1.2248762   0.9061541  -1.944788  ]]
Iteration 500 of 1000: loss=2.64 " + "l1=1.12" + "l2=1.52 f=-0.378 shape=(1, 9000, 1)
logits [[ 0.35995212 -1.0192003   0.59435797 -1.4453118 ]]
Iteration 600 of 1000: loss=2.31 " + "l1=0.871" + "l2=1.44 f=-0.377 shape=(1, 9000, 1)
logits [[ 0.0968453  -0.8703482   0.42402372 -1.1602417 ]]
Iteration 700 of 1000: loss=1.94 " + "l1=0.517" + "l2=1.42 f=-0.376 shape=(1, 9000, 1)
logits [[-0.23460773 -0.69394493  0.1822152  -0.75794494]]
Iteration 800 of 1000: loss=1.69 " + "l1=0.275" + "l2=1.41 f=-0.361 shape=(1, 9000, 1)
logits [[-0.3959638  -0.629448    0.04164428 -0.4587766 ]]
Iteration 900 of 1000: loss=1.47 " + "l1=0" + "l2=1.47 f=-0.33 shape=(1, 9000, 1)
logits [[-0.60535836 -0.63884574 -0.04399753 -0.033748  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.86 " + "l1=3.86" + "l2=0 f=-0.508 shape=(1, 9000, 1)
logits [[ 4.5692925 -2.199897   2.8991218 -7.3002896]]
Iteration 100 of 1000: loss=3.18 " + "l1=2.68" + "l2=0.499 f=-0.48 shape=(1, 9000, 1)
logits [[ 2.902651  -2.0123253  2.540866  -5.350495 ]]
Iteration 200 of 1000: loss=2.87 " + "l1=2.26" + "l2=0.615 f=-0.478 shape=(1, 9000, 1)
logits [[ 2.287957  -1.811455   2.2754908 -4.6636252]]
Iteration 300 of 1000: loss=2.69 " + "l1=2.03" + "l2=0.656 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.0304074 -1.675397   2.0232592 -4.2210894]]
Iteration 400 of 1000: loss=2.5 " + "l1=1.81" + "l2=0.688 f=-0.436 shape=(1, 9000, 1)
logits [[ 1.7780418 -1.5061857  1.7835114 -3.79896  ]]
Iteration 500 of 1000: loss=2.23 " + "l1=1.51" + "l2=0.72 f=-0.413 shape=(1, 9000, 1)
logits [[ 1.4116299 -1.2887331  1.4315904 -3.2071502]]
Iteration 600 of 1000: loss=1.98 " + "l1=1.23" + "l2=0.757 f=-0.424 shape=(1, 9000, 1)
logits [[ 1.0134557 -1.1310551  1.0993139 -2.6791394]]
Iteration 700 of 1000: loss=1.73 " + "l1=0.928" + "l2=0.798 f=-0.416 shape=(1, 9000, 1)
logits [[ 0.5758371 -0.9452776  0.7809426 -2.0740101]]
Iteration 800 of 1000: loss=1.55 " + "l1=0.758" + "l2=0.792 f=-0.419 shape=(1, 9000, 1)
logits [[ 0.27699268 -0.859907    0.6194592  -1.7122983 ]]
Iteration 900 of 1000: loss=1.43 " + "l1=0.637" + "l2=0.788 f=-0.415 shape=(1, 9000, 1)
logits [[ 0.07509966 -0.80442053  0.5141741  -1.4467722 ]]
--- 302.0997848510742 seconds ---
Adv result:3
Loading record A01324
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0914 " + "l1=0.0914" + "l2=0 f=-0.752 shape=(1, 9000, 1)
logits [[ 5.420933  -3.714911   3.4673057 -8.18012  ]]
Iteration 100 of 1000: loss=0.0908 " + "l1=0.0904" + "l2=0.000414 f=-0.746 shape=(1, 9000, 1)
logits [[ 5.3723683 -3.6651325  3.4365437 -8.1295185]]
Iteration 200 of 1000: loss=0.0907 " + "l1=0.0902" + "l2=0.000431 f=-0.746 shape=(1, 9000, 1)
logits [[ 5.3647118 -3.6578133  3.4317932 -8.121609 ]]
Iteration 300 of 1000: loss=0.0905 " + "l1=0.09" + "l2=0.000508 f=-0.745 shape=(1, 9000, 1)
logits [[ 5.355006  -3.6489573  3.4259634 -8.111764 ]]
Iteration 400 of 1000: loss=0.0905 " + "l1=0.0899" + "l2=0.000625 f=-0.744 shape=(1, 9000, 1)
logits [[ 5.3457384 -3.6401818  3.4203036 -8.102767 ]]
Iteration 500 of 1000: loss=0.0904 " + "l1=0.0897" + "l2=0.000703 f=-0.744 shape=(1, 9000, 1)
logits [[ 5.337018  -3.6319098  3.4149833 -8.094627 ]]
Iteration 600 of 1000: loss=0.0904 " + "l1=0.0895" + "l2=0.000878 f=-0.743 shape=(1, 9000, 1)
logits [[ 5.3289146 -3.6242442  3.4101787 -8.087422 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.914 " + "l1=0.914" + "l2=0 f=-0.752 shape=(1, 9000, 1)
logits [[ 5.420933  -3.714911   3.4673057 -8.18012  ]]
Iteration 100 of 1000: loss=0.862 " + "l1=0.833" + "l2=0.0287 f=-0.709 shape=(1, 9000, 1)
logits [[ 5.029462  -3.3048043  3.223529  -7.784921 ]]
Iteration 200 of 1000: loss=0.839 " + "l1=0.798" + "l2=0.0417 f=-0.698 shape=(1, 9000, 1)
logits [[ 4.8400645 -3.1354003  3.110387  -7.6054807]]
Iteration 300 of 1000: loss=0.82 " + "l1=0.769" + "l2=0.0516 f=-0.688 shape=(1, 9000, 1)
logits [[ 4.687262  -2.998442   3.015774  -7.4565735]]
Iteration 400 of 1000: loss=0.801 " + "l1=0.739" + "l2=0.0615 f=-0.679 shape=(1, 9000, 1)
logits [[ 4.540876  -2.8503165  2.9231384 -7.328999 ]]
Iteration 500 of 1000: loss=0.778 " + "l1=0.71" + "l2=0.068 f=-0.675 shape=(1, 9000, 1)
logits [[ 4.3815575 -2.7169347  2.8328903 -7.198412 ]]
Iteration 600 of 1000: loss=0.754 " + "l1=0.678" + "l2=0.0754 f=-0.675 shape=(1, 9000, 1)
logits [[ 4.2030654 -2.581311   2.7446346 -7.067046 ]]
Iteration 700 of 1000: loss=0.724 " + "l1=0.642" + "l2=0.0822 f=-0.686 shape=(1, 9000, 1)
logits [[ 3.980925  -2.4341793  2.6658764 -6.9574666]]
Iteration 800 of 1000: loss=0.685 " + "l1=0.593" + "l2=0.0919 f=-0.706 shape=(1, 9000, 1)
logits [[ 3.6749642 -2.2544386  2.5831468 -6.828441 ]]
Iteration 900 of 1000: loss=0.651 " + "l1=0.552" + "l2=0.0999 f=-0.715 shape=(1, 9000, 1)
logits [[ 3.41278   -2.1035457  2.490104  -6.6610055]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.14 " + "l1=9.14" + "l2=0 f=-0.752 shape=(1, 9000, 1)
logits [[ 5.420933  -3.714911   3.4673057 -8.18012  ]]
Iteration 100 of 1000: loss=4.9 " + "l1=2.91" + "l2=1.99 f=-0.635 shape=(1, 9000, 1)
logits [[ 1.8090771 -1.0950202  1.8154511 -5.071073 ]]
Iteration 200 of 1000: loss=3.28 " + "l1=1.02" + "l2=2.25 f=-0.604 shape=(1, 9000, 1)
logits [[ 0.88953286 -0.13305202  0.887914   -4.06099   ]]
Iteration 300 of 1000: loss=2.45 " + "l1=0.209" + "l2=2.24 f=-0.589 shape=(1, 9000, 1)
logits [[ 0.47372982  0.264766    0.4712437  -3.564806  ]]
Iteration 400 of 1000: loss=1.87 " + "l1=0.00406" + "l2=1.87 f=-0.609 shape=(1, 9000, 1)
logits [[ 0.32116225  0.3215611   0.3256246  -3.4048817 ]]
Iteration 500 of 1000: loss=1.52 " + "l1=0.0225" + "l2=1.5 f=-0.623 shape=(1, 9000, 1)
logits [[ 0.30632076  0.2838419   0.3040155  -3.3871872 ]]
Iteration 600 of 1000: loss=1.26 " + "l1=0.0101" + "l2=1.25 f=-0.636 shape=(1, 9000, 1)
logits [[ 0.28274268  0.2758081   0.2859172  -3.3865016 ]]
Iteration 700 of 1000: loss=1.06 " + "l1=0" + "l2=1.06 f=-0.643 shape=(1, 9000, 1)
logits [[ 0.24189368  0.26657274  0.25891834 -3.3407605 ]]
Iteration 800 of 1000: loss=0.929 " + "l1=0.00172" + "l2=0.927 f=-0.654 shape=(1, 9000, 1)
logits [[ 0.22464299  0.24586622  0.24758725 -3.3334057 ]]
Iteration 900 of 1000: loss=0.837 " + "l1=0.00254" + "l2=0.835 f=-0.665 shape=(1, 9000, 1)
logits [[ 0.19446339  0.2361856   0.23872499 -3.3302443 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.02 " + "l1=5.02" + "l2=0 f=-0.752 shape=(1, 9000, 1)
logits [[ 5.420933  -3.714911   3.4673057 -8.18012  ]]
Iteration 100 of 1000: loss=3.5 " + "l1=2.71" + "l2=0.789 f=-0.66 shape=(1, 9000, 1)
logits [[ 3.0498405 -1.8735234  2.3738353 -6.190043 ]]
Iteration 200 of 1000: loss=2.79 " + "l1=1.67" + "l2=1.11 f=-0.648 shape=(1, 9000, 1)
logits [[ 1.9298233 -1.1113689  1.8044205 -5.213022 ]]
Iteration 300 of 1000: loss=2.07 " + "l1=0.919" + "l2=1.15 f=-0.639 shape=(1, 9000, 1)
logits [[ 1.1822395  -0.48850912  1.1756319  -4.4239993 ]]
Iteration 400 of 1000: loss=1.55 " + "l1=0.54" + "l2=1.01 f=-0.645 shape=(1, 9000, 1)
logits [[ 0.7934293  -0.18833151  0.7878481  -3.974932  ]]
Iteration 500 of 1000: loss=1.21 " + "l1=0.303" + "l2=0.904 f=-0.67 shape=(1, 9000, 1)
logits [[ 0.52415144 -0.00648022  0.5438813  -3.7419546 ]]
Iteration 600 of 1000: loss=1.03 " + "l1=0.221" + "l2=0.813 f=-0.679 shape=(1, 9000, 1)
logits [[ 0.4329335   0.04041868  0.44239452 -3.631589  ]]
Iteration 700 of 1000: loss=0.909 " + "l1=0.115" + "l2=0.794 f=-0.687 shape=(1, 9000, 1)
logits [[ 0.27723408  0.09363279  0.30278406 -3.4211857 ]]
Iteration 800 of 1000: loss=0.743 " + "l1=0.0109" + "l2=0.732 f=-0.697 shape=(1, 9000, 1)
logits [[ 0.15129533  0.14563124  0.16544129 -3.2505329 ]]
Iteration 900 of 1000: loss=0.614 " + "l1=0" + "l2=0.614 f=-0.701 shape=(1, 9000, 1)
logits [[ 0.1334855   0.14370371  0.14335003 -3.2248738 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.97 " + "l1=2.97" + "l2=0 f=-0.752 shape=(1, 9000, 1)
logits [[ 5.420933  -3.714911   3.4673057 -8.18012  ]]
Iteration 100 of 1000: loss=2.42 " + "l1=2.12" + "l2=0.295 f=-0.662 shape=(1, 9000, 1)
logits [[ 4.0264897 -2.4992514  2.7310686 -6.9081717]]
Iteration 200 of 1000: loss=2.13 " + "l1=1.69" + "l2=0.438 f=-0.664 shape=(1, 9000, 1)
logits [[ 3.2571568 -1.9568661  2.381284  -6.336851 ]]
Iteration 300 of 1000: loss=1.87 " + "l1=1.37" + "l2=0.504 f=-0.669 shape=(1, 9000, 1)
logits [[ 2.6315973 -1.5787857  2.1033127 -5.830793 ]]
Iteration 400 of 1000: loss=1.52 " + "l1=0.898" + "l2=0.619 f=-0.683 shape=(1, 9000, 1)
logits [[ 1.7441499 -1.0186437  1.6213444 -5.0784907]]
Iteration 500 of 1000: loss=1.15 " + "l1=0.558" + "l2=0.594 f=-0.68 shape=(1, 9000, 1)
logits [[ 1.1652848  -0.55268455  1.1638776  -4.4978514 ]]
Iteration 600 of 1000: loss=0.93 " + "l1=0.427" + "l2=0.503 f=-0.685 shape=(1, 9000, 1)
logits [[ 0.94787604 -0.36258653  0.95279    -4.27866   ]]
Iteration 700 of 1000: loss=0.824 " + "l1=0.354" + "l2=0.47 f=-0.688 shape=(1, 9000, 1)
logits [[ 0.81242734 -0.27341333  0.8164723  -4.1077094 ]]
Iteration 800 of 1000: loss=0.763 " + "l1=0.307" + "l2=0.456 f=-0.691 shape=(1, 9000, 1)
logits [[ 0.707896   -0.22233441  0.7210306  -3.9689167 ]]
Iteration 900 of 1000: loss=0.712 " + "l1=0.28" + "l2=0.432 f=-0.694 shape=(1, 9000, 1)
logits [[ 0.6583847  -0.19807757  0.66254807 -3.8971617 ]]
--- 298.1975681781769 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0195 " + "l1=0.0195" + "l2=0 f=-0.752 shape=(1, 9000, 1)
logits [[ 5.420933  -3.714911   3.4673057 -8.18012  ]]
Iteration 100 of 1000: loss=0.0194 " + "l1=0.0193" + "l2=0.000121 f=-0.752 shape=(1, 9000, 1)
logits [[ 5.39979   -3.7142823  3.4673243 -8.161684 ]]
Iteration 200 of 1000: loss=0.0194 " + "l1=0.0193" + "l2=9.5e-05 f=-0.752 shape=(1, 9000, 1)
logits [[ 5.3996053 -3.7135582  3.4671805 -8.161551 ]]
Iteration 300 of 1000: loss=0.0194 " + "l1=0.0193" + "l2=0.000102 f=-0.752 shape=(1, 9000, 1)
logits [[ 5.397223  -3.7131135  3.4672313 -8.159391 ]]
Iteration 400 of 1000: loss=0.0194 " + "l1=0.0193" + "l2=0.000148 f=-0.752 shape=(1, 9000, 1)
logits [[ 5.3946376 -3.7127616  3.4673827 -8.157133 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.195 " + "l1=0.195" + "l2=0 f=-0.752 shape=(1, 9000, 1)
logits [[ 5.420933  -3.714911   3.4673057 -8.18012  ]]
Iteration 100 of 1000: loss=0.187 " + "l1=0.182" + "l2=0.00499 f=-0.753 shape=(1, 9000, 1)
logits [[ 5.2835245 -3.7037926  3.46712   -8.060423 ]]
Iteration 200 of 1000: loss=0.183 " + "l1=0.177" + "l2=0.00651 f=-0.753 shape=(1, 9000, 1)
logits [[ 5.231675  -3.6934726  3.462915  -8.013879 ]]
Iteration 300 of 1000: loss=0.181 " + "l1=0.173" + "l2=0.00773 f=-0.753 shape=(1, 9000, 1)
logits [[ 5.1894135 -3.6870277  3.461167  -7.975327 ]]
Iteration 400 of 1000: loss=0.178 " + "l1=0.169" + "l2=0.0089 f=-0.753 shape=(1, 9000, 1)
logits [[ 5.154614  -3.6845214  3.4630713 -7.9443474]]
Iteration 500 of 1000: loss=0.176 " + "l1=0.166" + "l2=0.0102 f=-0.752 shape=(1, 9000, 1)
logits [[ 5.1189756 -3.6784332  3.4638722 -7.9129133]]
Iteration 600 of 1000: loss=0.173 " + "l1=0.162" + "l2=0.0113 f=-0.751 shape=(1, 9000, 1)
logits [[ 5.085624  -3.6718998  3.465506  -7.884408 ]]
Iteration 700 of 1000: loss=0.171 " + "l1=0.159" + "l2=0.0125 f=-0.75 shape=(1, 9000, 1)
logits [[ 5.052557  -3.6632044  3.465899  -7.854751 ]]
Iteration 800 of 1000: loss=0.169 " + "l1=0.156" + "l2=0.0134 f=-0.748 shape=(1, 9000, 1)
logits [[ 5.024207  -3.653392   3.4673834 -7.830461 ]]
Iteration 900 of 1000: loss=0.167 " + "l1=0.153" + "l2=0.0143 f=-0.746 shape=(1, 9000, 1)
logits [[ 4.9974055 -3.6448262  3.4697335 -7.8078055]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.95 " + "l1=1.95" + "l2=0 f=-0.752 shape=(1, 9000, 1)
logits [[ 5.420933  -3.714911   3.4673057 -8.18012  ]]
Iteration 100 of 1000: loss=0.641 " + "l1=0.00882" + "l2=0.632 f=-0.818 shape=(1, 9000, 1)
logits [[ 3.5744178 -3.4367352  3.5655994 -6.9750357]]
Iteration 200 of 1000: loss=0.413 " + "l1=0.0057" + "l2=0.408 f=-0.823 shape=(1, 9000, 1)
logits [[ 3.5871363 -3.3891506  3.5814388 -7.0711055]]
Iteration 300 of 1000: loss=0.33 " + "l1=0" + "l2=0.33 f=-0.823 shape=(1, 9000, 1)
logits [[ 3.5748668 -3.3762612  3.5875986 -7.0798736]]
Iteration 400 of 1000: loss=0.281 " + "l1=0" + "l2=0.281 f=-0.819 shape=(1, 9000, 1)
logits [[ 3.5640292 -3.3620408  3.5869992 -7.066297 ]]
Iteration 500 of 1000: loss=0.231 " + "l1=0" + "l2=0.231 f=-0.814 shape=(1, 9000, 1)
logits [[ 3.572926  -3.3537655  3.576755  -7.051279 ]]
Iteration 600 of 1000: loss=0.202 " + "l1=0.00517" + "l2=0.197 f=-0.81 shape=(1, 9000, 1)
logits [[ 3.580489  -3.3535473  3.575321  -7.041849 ]]
Iteration 700 of 1000: loss=0.174 " + "l1=0" + "l2=0.174 f=-0.807 shape=(1, 9000, 1)
logits [[ 3.5746288 -3.347614   3.5750718 -7.0306993]]
Iteration 800 of 1000: loss=0.155 " + "l1=0" + "l2=0.155 f=-0.805 shape=(1, 9000, 1)
logits [[ 3.5727456 -3.3457086  3.5745625 -7.0225253]]
Iteration 900 of 1000: loss=0.146 " + "l1=0.00642" + "l2=0.14 f=-0.804 shape=(1, 9000, 1)
logits [[ 3.5782578 -3.3443685  3.571835  -7.0208955]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.07 " + "l1=1.07" + "l2=0 f=-0.752 shape=(1, 9000, 1)
logits [[ 5.420933  -3.714911   3.4673057 -8.18012  ]]
Iteration 100 of 1000: loss=0.794 " + "l1=0.621" + "l2=0.172 f=-0.755 shape=(1, 9000, 1)
logits [[ 4.605211  -3.6278172  3.4753401 -7.4711666]]
Iteration 200 of 1000: loss=0.514 " + "l1=0.076" + "l2=0.438 f=-0.802 shape=(1, 9000, 1)
logits [[ 3.647213  -3.381805   3.5090806 -6.9839654]]
Iteration 300 of 1000: loss=0.32 " + "l1=0.000201" + "l2=0.32 f=-0.81 shape=(1, 9000, 1)
logits [[ 3.5410564 -3.305557   3.5406916 -7.0156   ]]
Iteration 400 of 1000: loss=0.249 " + "l1=0" + "l2=0.249 f=-0.808 shape=(1, 9000, 1)
logits [[ 3.5372689 -3.2965164  3.5480604 -7.019713 ]]
Iteration 500 of 1000: loss=0.202 " + "l1=0" + "l2=0.202 f=-0.802 shape=(1, 9000, 1)
logits [[ 3.5383997 -3.2879531  3.5483003 -7.007168 ]]
Iteration 600 of 1000: loss=0.169 " + "l1=0.00165" + "l2=0.167 f=-0.8 shape=(1, 9000, 1)
logits [[ 3.5571995 -3.2928748  3.5542061 -7.017982 ]]
Iteration 700 of 1000: loss=0.147 " + "l1=0" + "l2=0.147 f=-0.8 shape=(1, 9000, 1)
logits [[ 3.5529609 -3.294182   3.5611262 -7.0216966]]
Iteration 800 of 1000: loss=0.13 " + "l1=0" + "l2=0.13 f=-0.8 shape=(1, 9000, 1)
logits [[ 3.5517051 -3.2829614  3.5629132 -7.0308576]]
Iteration 900 of 1000: loss=0.118 " + "l1=0" + "l2=0.118 f=-0.798 shape=(1, 9000, 1)
logits [[ 3.553986  -3.2699306  3.5611753 -7.037813 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.635 " + "l1=0.635" + "l2=0 f=-0.752 shape=(1, 9000, 1)
logits [[ 5.420933  -3.714911   3.4673057 -8.18012  ]]
Iteration 100 of 1000: loss=0.542 " + "l1=0.489" + "l2=0.0528 f=-0.755 shape=(1, 9000, 1)
logits [[ 4.9806004 -3.6786342  3.4754457 -7.796045 ]]
Iteration 200 of 1000: loss=0.498 " + "l1=0.422" + "l2=0.0768 f=-0.752 shape=(1, 9000, 1)
logits [[ 4.7706714 -3.6427257  3.4735963 -7.6108937]]
Iteration 300 of 1000: loss=0.451 " + "l1=0.35" + "l2=0.102 f=-0.746 shape=(1, 9000, 1)
logits [[ 4.543711  -3.5924244  3.4680662 -7.404573 ]]
Iteration 400 of 1000: loss=0.403 " + "l1=0.278" + "l2=0.125 f=-0.74 shape=(1, 9000, 1)
logits [[ 4.3282332 -3.5541306  3.4728086 -7.208039 ]]
Iteration 500 of 1000: loss=0.347 " + "l1=0.187" + "l2=0.159 f=-0.745 shape=(1, 9000, 1)
logits [[ 4.054536  -3.4960287  3.4776516 -7.0143394]]
Iteration 600 of 1000: loss=0.281 " + "l1=0.0744" + "l2=0.206 f=-0.756 shape=(1, 9000, 1)
logits [[ 3.6816843 -3.3668349  3.452853  -6.7906547]]
Iteration 700 of 1000: loss=0.201 " + "l1=0" + "l2=0.201 f=-0.76 shape=(1, 9000, 1)
logits [[ 3.4625573 -3.2626188  3.4707532 -6.709162 ]]
Iteration 800 of 1000: loss=0.164 " + "l1=0.00101" + "l2=0.163 f=-0.756 shape=(1, 9000, 1)
logits [[ 3.4790616 -3.2372622  3.4759417 -6.7434406]]
Iteration 900 of 1000: loss=0.141 " + "l1=0.00174" + "l2=0.139 f=-0.756 shape=(1, 9000, 1)
logits [[ 3.4813178 -3.1994753  3.4759564 -6.78126  ]]
--- 289.61539244651794 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.136 " + "l1=0.136" + "l2=0 f=-0.752 shape=(1, 9000, 1)
logits [[ 5.420933  -3.714911   3.4673057 -8.18012  ]]
Iteration 100 of 1000: loss=0.135 " + "l1=0.135" + "l2=0.000536 f=-0.746 shape=(1, 9000, 1)
logits [[ 5.361615  -3.6814642  3.4375541 -8.102119 ]]
Iteration 200 of 1000: loss=0.135 " + "l1=0.134" + "l2=0.00059 f=-0.745 shape=(1, 9000, 1)
logits [[ 5.3500767 -3.675044   3.4315984 -8.088159 ]]
Iteration 300 of 1000: loss=0.135 " + "l1=0.134" + "l2=0.000732 f=-0.745 shape=(1, 9000, 1)
logits [[ 5.337152  -3.6681314  3.425154  -8.072323 ]]
Iteration 400 of 1000: loss=0.135 " + "l1=0.134" + "l2=0.000867 f=-0.744 shape=(1, 9000, 1)
logits [[ 5.3250294 -3.661539   3.4192958 -8.057636 ]]
Iteration 500 of 1000: loss=0.135 " + "l1=0.134" + "l2=0.00101 f=-0.743 shape=(1, 9000, 1)
logits [[ 5.314162  -3.655658   3.4142003 -8.044609 ]]
Iteration 600 of 1000: loss=0.135 " + "l1=0.133" + "l2=0.00121 f=-0.742 shape=(1, 9000, 1)
logits [[ 5.3041325 -3.6503458  3.409597  -8.03285  ]]
Iteration 700 of 1000: loss=0.134 " + "l1=0.133" + "l2=0.00129 f=-0.742 shape=(1, 9000, 1)
logits [[ 5.294824  -3.6453054  3.4053247 -8.022103 ]]
Iteration 800 of 1000: loss=0.134 " + "l1=0.133" + "l2=0.00142 f=-0.741 shape=(1, 9000, 1)
logits [[ 5.2860003 -3.6405625  3.4013436 -8.012054 ]]
Iteration 900 of 1000: loss=0.134 " + "l1=0.133" + "l2=0.00154 f=-0.741 shape=(1, 9000, 1)
logits [[ 5.27791   -3.6361556  3.3976758 -8.002908 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.36 " + "l1=1.36" + "l2=0 f=-0.752 shape=(1, 9000, 1)
logits [[ 5.420933  -3.714911   3.4673057 -8.18012  ]]
Iteration 100 of 1000: loss=1.28 " + "l1=1.24" + "l2=0.0403 f=-0.703 shape=(1, 9000, 1)
logits [[ 4.9160714 -3.4146898  3.21216   -7.52503  ]]
Iteration 200 of 1000: loss=1.25 " + "l1=1.19" + "l2=0.0626 f=-0.686 shape=(1, 9000, 1)
logits [[ 4.6689568 -3.2751741  3.0793903 -7.2161784]]
Iteration 300 of 1000: loss=1.23 " + "l1=1.15" + "l2=0.0788 f=-0.672 shape=(1, 9000, 1)
logits [[ 4.486548  -3.1805766  2.9897988 -6.9828176]]
Iteration 400 of 1000: loss=1.2 " + "l1=1.11" + "l2=0.0933 f=-0.659 shape=(1, 9000, 1)
logits [[ 4.318828  -3.0913978  2.9096775 -6.7744617]]
Iteration 500 of 1000: loss=1.17 " + "l1=1.06" + "l2=0.11 f=-0.647 shape=(1, 9000, 1)
logits [[ 4.0906587 -2.9757051  2.8139586 -6.51782  ]]
Iteration 600 of 1000: loss=1.14 " + "l1=1.02" + "l2=0.119 f=-0.64 shape=(1, 9000, 1)
logits [[ 3.896697  -2.8975766  2.7401702 -6.2989883]]
Iteration 700 of 1000: loss=1.11 " + "l1=0.977" + "l2=0.129 f=-0.631 shape=(1, 9000, 1)
logits [[ 3.682591  -2.774095   2.6515677 -6.0840063]]
Iteration 800 of 1000: loss=1.07 " + "l1=0.925" + "l2=0.141 f=-0.626 shape=(1, 9000, 1)
logits [[ 3.4239771 -2.6664858  2.5594645 -5.821696 ]]
Iteration 900 of 1000: loss=1.03 " + "l1=0.874" + "l2=0.153 f=-0.628 shape=(1, 9000, 1)
logits [[ 3.165298  -2.5642743  2.458443  -5.57049  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=13.6 " + "l1=13.6" + "l2=0 f=-0.752 shape=(1, 9000, 1)
logits [[ 5.420933  -3.714911   3.4673057 -8.18012  ]]
Iteration 100 of 1000: loss=7.35 " + "l1=4.64" + "l2=2.72 f=-0.473 shape=(1, 9000, 1)
logits [[ 1.495025  -1.7499391  1.4992987 -3.1378465]]
Iteration 200 of 1000: loss=5.27 " + "l1=1.76" + "l2=3.51 f=-0.337 shape=(1, 9000, 1)
logits [[ 0.43775967 -1.0220273   0.49969074 -1.2614453 ]]
Iteration 300 of 1000: loss=4.23 " + "l1=0.585" + "l2=3.65 f=-0.33 shape=(1, 9000, 1)
logits [[-0.07078679 -0.87922     0.10662767 -0.47853264]]
Iteration 400 of 1000: loss=3.43 " + "l1=0.0152" + "l2=3.42 f=-0.338 shape=(1, 9000, 1)
logits [[-0.3326165  -0.8554546  -0.07494079 -0.09012928]]
Iteration 500 of 1000: loss=2.92 " + "l1=0.00835" + "l2=2.91 f=-0.345 shape=(1, 9000, 1)
logits [[-0.31613293 -0.90560234 -0.07421744 -0.08256576]]
Iteration 600 of 1000: loss=2.53 " + "l1=0" + "l2=2.53 f=-0.359 shape=(1, 9000, 1)
logits [[-0.33200946 -0.94123787 -0.09055166 -0.07064206]]
Iteration 700 of 1000: loss=2.19 " + "l1=0.0058" + "l2=2.18 f=-0.375 shape=(1, 9000, 1)
logits [[-0.32632008 -0.9618352  -0.10396197 -0.10976617]]
Iteration 800 of 1000: loss=1.95 " + "l1=0" + "l2=1.95 f=-0.388 shape=(1, 9000, 1)
logits [[-0.38029101 -0.9706806  -0.11601878 -0.08350769]]
Iteration 900 of 1000: loss=1.76 " + "l1=0.0221" + "l2=1.74 f=-0.401 shape=(1, 9000, 1)
logits [[-0.3892381  -0.99704355 -0.09761381 -0.11966497]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.48 " + "l1=7.48" + "l2=0 f=-0.752 shape=(1, 9000, 1)
logits [[ 5.420933  -3.714911   3.4673057 -8.18012  ]]
Iteration 100 of 1000: loss=5.18 " + "l1=3.88" + "l2=1.29 f=-0.591 shape=(1, 9000, 1)
logits [[ 2.3745415 -2.3187127  2.2684517 -4.6881943]]
Iteration 200 of 1000: loss=4.26 " + "l1=2.74" + "l2=1.51 f=-0.512 shape=(1, 9000, 1)
logits [[ 1.5688092 -1.7746644  1.5728996 -3.4160438]]
Iteration 300 of 1000: loss=3.48 " + "l1=1.84" + "l2=1.64 f=-0.454 shape=(1, 9000, 1)
logits [[ 0.9321576 -1.2772144  0.9377768 -2.4083476]]
Iteration 400 of 1000: loss=2.86 " + "l1=1.22" + "l2=1.64 f=-0.417 shape=(1, 9000, 1)
logits [[ 0.4643439 -1.1435683  0.6153957 -1.6060959]]
Iteration 500 of 1000: loss=2.35 " + "l1=0.718" + "l2=1.63 f=-0.415 shape=(1, 9000, 1)
logits [[-0.00682638 -1.049025    0.35112703 -0.9535469 ]]
Iteration 600 of 1000: loss=1.86 " + "l1=0.231" + "l2=1.63 f=-0.414 shape=(1, 9000, 1)
logits [[-0.48632476 -0.89964736  0.07597948 -0.34459358]]
Iteration 700 of 1000: loss=1.52 " + "l1=0.0204" + "l2=1.49 f=-0.399 shape=(1, 9000, 1)
logits [[-0.6353962  -0.8730433  -0.02481758 -0.06187678]]
Iteration 800 of 1000: loss=1.28 " + "l1=0.00199" + "l2=1.28 f=-0.409 shape=(1, 9000, 1)
logits [[-0.6980449  -0.8899654  -0.02308409 -0.02670151]]
Iteration 900 of 1000: loss=1.1 " + "l1=0" + "l2=1.1 f=-0.408 shape=(1, 9000, 1)
logits [[-0.7282759  -0.92117107  0.00380337  0.01275214]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.42 " + "l1=4.42" + "l2=0 f=-0.752 shape=(1, 9000, 1)
logits [[ 5.420933  -3.714911   3.4673057 -8.18012  ]]
Iteration 100 of 1000: loss=3.59 " + "l1=3.12" + "l2=0.475 f=-0.633 shape=(1, 9000, 1)
logits [[ 3.5830195 -2.7468646  2.6489005 -6.015125 ]]
Iteration 200 of 1000: loss=3.15 " + "l1=2.42" + "l2=0.731 f=-0.606 shape=(1, 9000, 1)
logits [[ 2.537862  -2.3575869  2.2904177 -4.8944893]]
Iteration 300 of 1000: loss=2.76 " + "l1=1.93" + "l2=0.83 f=-0.575 shape=(1, 9000, 1)
logits [[ 1.9024197 -2.0834796  1.903344  -4.02117  ]]
Iteration 400 of 1000: loss=2.4 " + "l1=1.51" + "l2=0.892 f=-0.54 shape=(1, 9000, 1)
logits [[ 1.3983003 -1.7154205  1.4037062 -3.2475119]]
Iteration 500 of 1000: loss=2.09 " + "l1=1.16" + "l2=0.924 f=-0.502 shape=(1, 9000, 1)
logits [[ 0.9998021 -1.4625999  1.0169567 -2.5617588]]
Iteration 600 of 1000: loss=1.84 " + "l1=0.989" + "l2=0.855 f=-0.482 shape=(1, 9000, 1)
logits [[ 0.8023924  -1.4252119   0.86898154 -2.1734805 ]]
Iteration 700 of 1000: loss=1.62 " + "l1=0.772" + "l2=0.847 f=-0.476 shape=(1, 9000, 1)
logits [[ 0.4669167 -1.3181611  0.6610467 -1.7130867]]
Iteration 800 of 1000: loss=1.36 " + "l1=0.507" + "l2=0.854 f=-0.481 shape=(1, 9000, 1)
logits [[ 0.04791486 -1.1694156   0.37795818 -1.1810925 ]]
Iteration 900 of 1000: loss=1.17 " + "l1=0.351" + "l2=0.816 f=-0.489 shape=(1, 9000, 1)
logits [[-0.2522076  -1.1020551   0.23825444 -0.8408059 ]]
--- 323.21390771865845 seconds ---
Adv result:3
Loading record A01342
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0486 " + "l1=0.0486" + "l2=0 f=-0.67 shape=(1, 9000, 1)
logits [[ 3.7720673 -1.0876621  2.0629585 -7.427929 ]]
Iteration 100 of 1000: loss=0.0481 " + "l1=0.0477" + "l2=0.000397 f=-0.67 shape=(1, 9000, 1)
logits [[ 3.7221348 -1.0437285  2.0392003 -7.396688 ]]
Iteration 200 of 1000: loss=0.0479 " + "l1=0.0475" + "l2=0.000412 f=-0.669 shape=(1, 9000, 1)
logits [[ 3.7146246 -1.0363854  2.0337296 -7.3898797]]
Iteration 300 of 1000: loss=0.0478 " + "l1=0.0473" + "l2=0.000498 f=-0.669 shape=(1, 9000, 1)
logits [[ 3.7055283 -1.0278052  2.0276315 -7.3820853]]
Iteration 400 of 1000: loss=0.0478 " + "l1=0.0472" + "l2=0.000597 f=-0.669 shape=(1, 9000, 1)
logits [[ 3.6966188 -1.0191855  2.0216048 -7.3750587]]
Iteration 500 of 1000: loss=0.0477 " + "l1=0.047" + "l2=0.000711 f=-0.669 shape=(1, 9000, 1)
logits [[ 3.6889753 -1.0126506  2.0170803 -7.36936  ]]
Iteration 600 of 1000: loss=0.0477 " + "l1=0.0469" + "l2=0.00079 f=-0.669 shape=(1, 9000, 1)
logits [[ 3.6822746 -1.0066426  2.0126917 -7.3640294]]
Iteration 700 of 1000: loss=0.0477 " + "l1=0.0468" + "l2=0.000924 f=-0.669 shape=(1, 9000, 1)
logits [[ 3.6764622 -1.0013325  2.008701  -7.359389 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.486 " + "l1=0.486" + "l2=0 f=-0.67 shape=(1, 9000, 1)
logits [[ 3.7720673 -1.0876621  2.0629585 -7.427929 ]]
Iteration 100 of 1000: loss=0.428 " + "l1=0.388" + "l2=0.0401 f=-0.675 shape=(1, 9000, 1)
logits [[ 3.2723246  -0.61156267  1.7833979  -7.1437383 ]]
Iteration 200 of 1000: loss=0.401 " + "l1=0.333" + "l2=0.0683 f=-0.699 shape=(1, 9000, 1)
logits [[ 3.0116005  -0.31915373  1.6005409  -7.089867  ]]
Iteration 300 of 1000: loss=0.387 " + "l1=0.312" + "l2=0.0754 f=-0.699 shape=(1, 9000, 1)
logits [[ 2.8881097  -0.23230468  1.5385495  -6.9912033 ]]
Iteration 400 of 1000: loss=0.375 " + "l1=0.293" + "l2=0.0828 f=-0.702 shape=(1, 9000, 1)
logits [[ 2.778791   -0.14788541  1.4815583  -6.9201655 ]]
Iteration 500 of 1000: loss=0.364 " + "l1=0.274" + "l2=0.0898 f=-0.706 shape=(1, 9000, 1)
logits [[ 2.6774037  -0.06750334  1.4281137  -6.862241  ]]
Iteration 600 of 1000: loss=0.355 " + "l1=0.259" + "l2=0.0958 f=-0.708 shape=(1, 9000, 1)
logits [[ 2.5844116e+00 -5.8463346e-03  1.3914804e+00 -6.8023968e+00]]
Iteration 700 of 1000: loss=0.347 " + "l1=0.247" + "l2=0.1 f=-0.71 shape=(1, 9000, 1)
logits [[ 2.5114732   0.04214662  1.3630366  -6.755755  ]]
Iteration 800 of 1000: loss=0.341 " + "l1=0.239" + "l2=0.102 f=-0.711 shape=(1, 9000, 1)
logits [[ 2.4647634   0.07678521  1.347145   -6.7330766 ]]
Iteration 900 of 1000: loss=0.336 " + "l1=0.232" + "l2=0.103 f=-0.71 shape=(1, 9000, 1)
logits [[ 2.423828   0.1007974  1.3344939 -6.700823 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.86 " + "l1=4.86" + "l2=0 f=-0.67 shape=(1, 9000, 1)
logits [[ 3.7720673 -1.0876621  2.0629585 -7.427929 ]]
Iteration 100 of 1000: loss=0.844 " + "l1=0" + "l2=0.844 f=-0.779 shape=(1, 9000, 1)
logits [[ 1.1034751  1.1352214  1.124045  -6.4775686]]
Iteration 200 of 1000: loss=0.677 " + "l1=0.00624" + "l2=0.671 f=-0.781 shape=(1, 9000, 1)
logits [[ 1.1171403  1.127164   1.133407  -6.502545 ]]
Iteration 300 of 1000: loss=0.598 " + "l1=0.000224" + "l2=0.598 f=-0.777 shape=(1, 9000, 1)
logits [[ 1.1052653  1.1115109  1.1117349 -6.4363556]]
Iteration 400 of 1000: loss=0.563 " + "l1=0" + "l2=0.563 f=-0.776 shape=(1, 9000, 1)
logits [[ 1.0603185  1.1198007  1.0968941 -6.3813834]]
Iteration 500 of 1000: loss=0.531 " + "l1=0.0232" + "l2=0.508 f=-0.77 shape=(1, 9000, 1)
logits [[ 1.1071755  1.0839506  1.0843846 -6.3556004]]
Iteration 600 of 1000: loss=0.487 " + "l1=0" + "l2=0.487 f=-0.766 shape=(1, 9000, 1)
logits [[ 1.0816274  1.0954881  1.0796804 -6.3209453]]
Iteration 700 of 1000: loss=0.484 " + "l1=0" + "l2=0.484 f=-0.764 shape=(1, 9000, 1)
logits [[ 1.0110897  1.1228298  1.0779935 -6.2667365]]
Iteration 800 of 1000: loss=0.451 " + "l1=0.0146" + "l2=0.436 f=-0.749 shape=(1, 9000, 1)
logits [[ 1.0908924  1.076253   1.0579025 -6.2222023]]
Iteration 900 of 1000: loss=0.431 " + "l1=0" + "l2=0.431 f=-0.743 shape=(1, 9000, 1)
logits [[ 1.0274333  1.0870577  1.0590686 -6.144459 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.67 " + "l1=2.67" + "l2=0 f=-0.67 shape=(1, 9000, 1)
logits [[ 3.7720673 -1.0876621  2.0629585 -7.427929 ]]
Iteration 100 of 1000: loss=0.786 " + "l1=0.00714" + "l2=0.779 f=-0.781 shape=(1, 9000, 1)
logits [[ 1.1422598  1.1292864  1.141241  -6.535023 ]]
Iteration 200 of 1000: loss=0.617 " + "l1=0.0125" + "l2=0.604 f=-0.78 shape=(1, 9000, 1)
logits [[ 1.1390389  1.1162367  1.1222723 -6.497824 ]]
Iteration 300 of 1000: loss=0.541 " + "l1=0.0077" + "l2=0.533 f=-0.777 shape=(1, 9000, 1)
logits [[ 1.1118714  1.0978688  1.107948  -6.4265184]]
Iteration 400 of 1000: loss=0.496 " + "l1=0.00529" + "l2=0.491 f=-0.773 shape=(1, 9000, 1)
logits [[ 1.1024079  1.0927851  1.0985153 -6.387009 ]]
Iteration 500 of 1000: loss=0.467 " + "l1=0" + "l2=0.467 f=-0.77 shape=(1, 9000, 1)
logits [[ 1.0819995  1.0951958  1.086847  -6.3433385]]
Iteration 600 of 1000: loss=0.449 " + "l1=0.0114" + "l2=0.438 f=-0.765 shape=(1, 9000, 1)
logits [[ 1.0891012  1.0683513  1.0790561 -6.296066 ]]
Iteration 700 of 1000: loss=0.425 " + "l1=0" + "l2=0.425 f=-0.76 shape=(1, 9000, 1)
logits [[ 1.0635554  1.0694002  1.0629178 -6.236739 ]]
Iteration 800 of 1000: loss=0.407 " + "l1=0.00133" + "l2=0.405 f=-0.749 shape=(1, 9000, 1)
logits [[ 1.0594351  1.0570167  1.050157  -6.1615224]]
Iteration 900 of 1000: loss=0.391 " + "l1=0.000636" + "l2=0.391 f=-0.735 shape=(1, 9000, 1)
logits [[ 1.0558678  1.0547122  1.0414842 -6.0933895]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.58 " + "l1=1.58" + "l2=0 f=-0.67 shape=(1, 9000, 1)
logits [[ 3.7720673 -1.0876621  2.0629585 -7.427929 ]]
Iteration 100 of 1000: loss=0.836 " + "l1=0.363" + "l2=0.473 f=-0.744 shape=(1, 9000, 1)
logits [[ 1.7581551   0.64081275  1.2680938  -6.6448545 ]]
Iteration 200 of 1000: loss=0.596 " + "l1=0.0532" + "l2=0.543 f=-0.78 shape=(1, 9000, 1)
logits [[ 1.1987641  1.0351595  1.1782672 -6.533302 ]]
Iteration 300 of 1000: loss=0.504 " + "l1=0.000825" + "l2=0.503 f=-0.779 shape=(1, 9000, 1)
logits [[ 1.1093719  1.1068321  1.105409  -6.4369597]]
Iteration 400 of 1000: loss=0.469 " + "l1=0.009" + "l2=0.46 f=-0.776 shape=(1, 9000, 1)
logits [[ 1.0937626  1.0660578  1.0893079 -6.3543353]]
Iteration 500 of 1000: loss=0.445 " + "l1=0.0112" + "l2=0.433 f=-0.773 shape=(1, 9000, 1)
logits [[ 1.0802034  1.0458161  1.0626994 -6.282708 ]]
Iteration 600 of 1000: loss=0.426 " + "l1=0.0116" + "l2=0.414 f=-0.773 shape=(1, 9000, 1)
logits [[ 1.0699832  1.0344317  1.0423834 -6.2374635]]
Iteration 700 of 1000: loss=0.401 " + "l1=0" + "l2=0.401 f=-0.77 shape=(1, 9000, 1)
logits [[ 1.0303266  1.0344261  1.0304871 -6.173441 ]]
Iteration 800 of 1000: loss=0.381 " + "l1=0.00114" + "l2=0.38 f=-0.755 shape=(1, 9000, 1)
logits [[ 1.0232415  1.0197481  1.0221783 -6.084196 ]]
Iteration 900 of 1000: loss=0.366 " + "l1=0" + "l2=0.366 f=-0.738 shape=(1, 9000, 1)
logits [[ 0.9860295  1.022838   1.0182447 -5.9777613]]
--- 306.3508098125458 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0171 " + "l1=0.0171" + "l2=0 f=-0.67 shape=(1, 9000, 1)
logits [[ 3.7720673 -1.0876621  2.0629585 -7.427929 ]]
Iteration 100 of 1000: loss=0.0169 " + "l1=0.0166" + "l2=0.000213 f=-0.672 shape=(1, 9000, 1)
logits [[ 3.7408304 -1.0928367  2.07601   -7.4101963]]
Iteration 200 of 1000: loss=0.0168 " + "l1=0.0166" + "l2=0.000199 f=-0.672 shape=(1, 9000, 1)
logits [[ 3.73886   -1.0937032  2.0768242 -7.408712 ]]
Iteration 300 of 1000: loss=0.0168 " + "l1=0.0166" + "l2=0.00024 f=-0.672 shape=(1, 9000, 1)
logits [[ 3.7355466 -1.0949804  2.0785904 -7.4069705]]
Iteration 400 of 1000: loss=0.0168 " + "l1=0.0165" + "l2=0.000293 f=-0.672 shape=(1, 9000, 1)
logits [[ 3.732441  -1.0961746  2.0803123 -7.4055414]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.171 " + "l1=0.171" + "l2=0 f=-0.67 shape=(1, 9000, 1)
logits [[ 3.7720673 -1.0876621  2.0629585 -7.427929 ]]
Iteration 100 of 1000: loss=0.149 " + "l1=0.135" + "l2=0.014 f=-0.684 shape=(1, 9000, 1)
logits [[ 3.5204246 -1.141937   2.1711626 -7.285809 ]]
Iteration 200 of 1000: loss=0.143 " + "l1=0.124" + "l2=0.0182 f=-0.692 shape=(1, 9000, 1)
logits [[ 3.447766  -1.1612486  2.2040014 -7.256874 ]]
Iteration 300 of 1000: loss=0.138 " + "l1=0.117" + "l2=0.0216 f=-0.697 shape=(1, 9000, 1)
logits [[ 3.4006224 -1.1901494  2.2342267 -7.2342873]]
Iteration 400 of 1000: loss=0.135 " + "l1=0.111" + "l2=0.0243 f=-0.703 shape=(1, 9000, 1)
logits [[ 3.3667178 -1.2169391  2.2586985 -7.2209044]]
Iteration 500 of 1000: loss=0.132 " + "l1=0.104" + "l2=0.0278 f=-0.711 shape=(1, 9000, 1)
logits [[ 3.3329403 -1.2538561  2.2900023 -7.211652 ]]
Iteration 600 of 1000: loss=0.129 " + "l1=0.098" + "l2=0.0311 f=-0.717 shape=(1, 9000, 1)
logits [[ 3.3016276 -1.2905632  2.3218071 -7.202759 ]]
Iteration 700 of 1000: loss=0.127 " + "l1=0.0938" + "l2=0.0331 f=-0.721 shape=(1, 9000, 1)
logits [[ 3.2766786 -1.3065563  2.338196  -7.191857 ]]
Iteration 800 of 1000: loss=0.125 " + "l1=0.0904" + "l2=0.0346 f=-0.723 shape=(1, 9000, 1)
logits [[ 3.254589  -1.3186623  2.350103  -7.1800003]]
Iteration 900 of 1000: loss=0.123 " + "l1=0.0875" + "l2=0.0358 f=-0.725 shape=(1, 9000, 1)
logits [[ 3.233962  -1.324837   2.3586159 -7.169675 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.71 " + "l1=1.71" + "l2=0 f=-0.67 shape=(1, 9000, 1)
logits [[ 3.7720673 -1.0876621  2.0629585 -7.427929 ]]
Iteration 100 of 1000: loss=0.299 " + "l1=0.0123" + "l2=0.286 f=-0.762 shape=(1, 9000, 1)
logits [[ 2.580041  -1.4044261  2.567701  -6.790653 ]]
Iteration 200 of 1000: loss=0.23 " + "l1=0" + "l2=0.23 f=-0.772 shape=(1, 9000, 1)
logits [[ 2.590813  -1.4532104  2.605424  -6.829393 ]]
Iteration 300 of 1000: loss=0.206 " + "l1=0" + "l2=0.206 f=-0.776 shape=(1, 9000, 1)
logits [[ 2.6027687 -1.4819973  2.621767  -6.8483157]]
Iteration 400 of 1000: loss=0.19 " + "l1=0" + "l2=0.19 f=-0.779 shape=(1, 9000, 1)
logits [[ 2.6189916 -1.5029696  2.6275797 -6.8599014]]
Iteration 500 of 1000: loss=0.179 " + "l1=0" + "l2=0.179 f=-0.78 shape=(1, 9000, 1)
logits [[ 2.6200967 -1.5091465  2.6272762 -6.858354 ]]
Iteration 600 of 1000: loss=0.169 " + "l1=0" + "l2=0.169 f=-0.78 shape=(1, 9000, 1)
logits [[ 2.6214337 -1.5159941  2.6240737 -6.8509383]]
Iteration 700 of 1000: loss=0.173 " + "l1=0" + "l2=0.173 f=-0.783 shape=(1, 9000, 1)
logits [[ 2.5869179 -1.5201368  2.6274073 -6.8263516]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.94 " + "l1=0.94" + "l2=0 f=-0.67 shape=(1, 9000, 1)
logits [[ 3.7720673 -1.0876621  2.0629585 -7.427929 ]]
Iteration 100 of 1000: loss=0.286 " + "l1=0.00561" + "l2=0.28 f=-0.767 shape=(1, 9000, 1)
logits [[ 2.598371  -1.4336306  2.5881708 -6.82138  ]]
Iteration 200 of 1000: loss=0.216 " + "l1=0.00614" + "l2=0.21 f=-0.774 shape=(1, 9000, 1)
logits [[ 2.6295533 -1.4812572  2.6183968 -6.8643637]]
Iteration 300 of 1000: loss=0.193 " + "l1=0" + "l2=0.193 f=-0.78 shape=(1, 9000, 1)
logits [[ 2.6305702 -1.5167382  2.637735  -6.870316 ]]
Iteration 400 of 1000: loss=0.184 " + "l1=0.00857" + "l2=0.175 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.650407  -1.5267674  2.6348224 -6.8823023]]
Iteration 500 of 1000: loss=0.174 " + "l1=0" + "l2=0.174 f=-0.783 shape=(1, 9000, 1)
logits [[ 2.6209092 -1.533693   2.6385899 -6.8584766]]
Iteration 600 of 1000: loss=0.163 " + "l1=0" + "l2=0.163 f=-0.783 shape=(1, 9000, 1)
logits [[ 2.6220384 -1.5326794  2.6275492 -6.8493047]]
Iteration 700 of 1000: loss=0.157 " + "l1=0.00244" + "l2=0.154 f=-0.784 shape=(1, 9000, 1)
logits [[ 2.6210997 -1.5315284  2.6166716 -6.840933 ]]
Iteration 800 of 1000: loss=0.149 " + "l1=0" + "l2=0.149 f=-0.784 shape=(1, 9000, 1)
logits [[ 2.6018174 -1.5271157  2.6089215 -6.8212676]]
Iteration 900 of 1000: loss=0.144 " + "l1=0" + "l2=0.144 f=-0.784 shape=(1, 9000, 1)
logits [[ 2.590403  -1.5227238  2.6019692 -6.805253 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.555 " + "l1=0.555" + "l2=0 f=-0.67 shape=(1, 9000, 1)
logits [[ 3.7720673 -1.0876621  2.0629585 -7.427929 ]]
Iteration 100 of 1000: loss=0.317 " + "l1=0.16" + "l2=0.157 f=-0.733 shape=(1, 9000, 1)
logits [[ 2.9270403 -1.3167647  2.4359    -6.977308 ]]
Iteration 200 of 1000: loss=0.224 " + "l1=0.011" + "l2=0.214 f=-0.774 shape=(1, 9000, 1)
logits [[ 2.638113  -1.4752449  2.6043935 -6.8616714]]
Iteration 300 of 1000: loss=0.19 " + "l1=0.00281" + "l2=0.188 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.6398857 -1.5160465  2.6312418 -6.8774734]]
Iteration 400 of 1000: loss=0.176 " + "l1=0.00247" + "l2=0.173 f=-0.784 shape=(1, 9000, 1)
logits [[ 2.6468143 -1.5395845  2.6392112 -6.8809705]]
Iteration 500 of 1000: loss=0.164 " + "l1=0" + "l2=0.164 f=-0.785 shape=(1, 9000, 1)
logits [[ 2.631795  -1.5398363  2.6321523 -6.865562 ]]
Iteration 600 of 1000: loss=0.155 " + "l1=0" + "l2=0.155 f=-0.785 shape=(1, 9000, 1)
logits [[ 2.6188157 -1.5341188  2.6188896 -6.8451695]]
Iteration 700 of 1000: loss=0.147 " + "l1=0" + "l2=0.147 f=-0.785 shape=(1, 9000, 1)
logits [[ 2.6011412 -1.5268624  2.607787  -6.820725 ]]
Iteration 800 of 1000: loss=0.139 " + "l1=0" + "l2=0.139 f=-0.784 shape=(1, 9000, 1)
logits [[ 2.5924711 -1.5222837  2.598613  -6.806596 ]]
Iteration 900 of 1000: loss=0.132 " + "l1=0" + "l2=0.132 f=-0.782 shape=(1, 9000, 1)
logits [[ 2.5759592 -1.507829   2.5901706 -6.7845974]]
--- 270.14867758750916 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.112 " + "l1=0.112" + "l2=0 f=-0.67 shape=(1, 9000, 1)
logits [[ 3.7720673 -1.0876621  2.0629585 -7.427929 ]]
Iteration 100 of 1000: loss=0.111 " + "l1=0.111" + "l2=0.000522 f=-0.667 shape=(1, 9000, 1)
logits [[ 3.7105036 -1.0693661  2.046907  -7.357268 ]]
Iteration 200 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.00059 f=-0.667 shape=(1, 9000, 1)
logits [[ 3.6992846 -1.0642177  2.041964  -7.344201 ]]
Iteration 300 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.000713 f=-0.666 shape=(1, 9000, 1)
logits [[ 3.6873283 -1.0587064  2.036412  -7.3302817]]
Iteration 400 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.000888 f=-0.666 shape=(1, 9000, 1)
logits [[ 3.6762443 -1.0533202  2.030839  -7.317367 ]]
Iteration 500 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.00102 f=-0.666 shape=(1, 9000, 1)
logits [[ 3.6666207 -1.0485315  2.02587   -7.3060627]]
Iteration 600 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.00113 f=-0.665 shape=(1, 9000, 1)
logits [[ 3.658369  -1.0443162  2.0214317 -7.296393 ]]
Iteration 700 of 1000: loss=0.111 " + "l1=0.109" + "l2=0.0013 f=-0.665 shape=(1, 9000, 1)
logits [[ 3.6514845 -1.0403892  2.0172899 -7.288502 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.12 " + "l1=1.12" + "l2=0 f=-0.67 shape=(1, 9000, 1)
logits [[ 3.7720673 -1.0876621  2.0629585 -7.427929 ]]
Iteration 100 of 1000: loss=1.05 " + "l1=1" + "l2=0.0432 f=-0.642 shape=(1, 9000, 1)
logits [[ 3.227484  -0.8856365  1.8945714 -6.805622 ]]
Iteration 200 of 1000: loss=1.02 " + "l1=0.96" + "l2=0.0599 f=-0.63 shape=(1, 9000, 1)
logits [[ 3.0329962 -0.7957631  1.8124686 -6.568494 ]]
Iteration 300 of 1000: loss=1 " + "l1=0.926" + "l2=0.0753 f=-0.621 shape=(1, 9000, 1)
logits [[ 2.880267   -0.73292506  1.7490555  -6.3796744 ]]
Iteration 400 of 1000: loss=0.986 " + "l1=0.894" + "l2=0.0915 f=-0.615 shape=(1, 9000, 1)
logits [[ 2.7390728  -0.67837054  1.6817248  -6.204368  ]]
Iteration 500 of 1000: loss=0.97 " + "l1=0.865" + "l2=0.105 f=-0.61 shape=(1, 9000, 1)
logits [[ 2.6091168  -0.63845116  1.6255449  -6.036619  ]]
Iteration 600 of 1000: loss=0.951 " + "l1=0.836" + "l2=0.115 f=-0.603 shape=(1, 9000, 1)
logits [[ 2.4879029 -0.5966093  1.5707182 -5.874186 ]]
Iteration 700 of 1000: loss=0.935 " + "l1=0.81" + "l2=0.126 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.3777423  -0.55865216  1.5210856  -5.718854  ]]
Iteration 800 of 1000: loss=0.918 " + "l1=0.784" + "l2=0.133 f=-0.587 shape=(1, 9000, 1)
logits [[ 2.273088  -0.5239016  1.4728101 -5.570151 ]]
Iteration 900 of 1000: loss=0.894 " + "l1=0.751" + "l2=0.143 f=-0.578 shape=(1, 9000, 1)
logits [[ 2.138402   -0.48919606  1.4158593  -5.3762693 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.2 " + "l1=11.2" + "l2=0 f=-0.67 shape=(1, 9000, 1)
logits [[ 3.7720673 -1.0876621  2.0629585 -7.427929 ]]
Iteration 100 of 1000: loss=5.86 " + "l1=3.94" + "l2=1.93 f=-0.495 shape=(1, 9000, 1)
logits [[ 0.5798737   0.20497605  0.5860965  -3.3506906 ]]
Iteration 200 of 1000: loss=4.4 " + "l1=2.12" + "l2=2.28 f=-0.398 shape=(1, 9000, 1)
logits [[ 0.03845665  0.14433719  0.17197882 -1.9449008 ]]
Iteration 300 of 1000: loss=3.44 " + "l1=0.843" + "l2=2.59 f=-0.356 shape=(1, 9000, 1)
logits [[-0.37459162 -0.06859954 -0.06911859 -0.9120154 ]]
Iteration 400 of 1000: loss=2.61 " + "l1=0.0486" + "l2=2.56 f=-0.313 shape=(1, 9000, 1)
logits [[-0.5792848  -0.22887884 -0.19705564 -0.245668  ]]
Iteration 500 of 1000: loss=2.07 " + "l1=0.0117" + "l2=2.06 f=-0.313 shape=(1, 9000, 1)
logits [[-0.54937446 -0.23270044 -0.22905351 -0.24080199]]
Iteration 600 of 1000: loss=1.75 " + "l1=0.00206" + "l2=1.75 f=-0.317 shape=(1, 9000, 1)
logits [[-0.52867985 -0.25187522 -0.24213152 -0.24418685]]
Iteration 700 of 1000: loss=1.52 " + "l1=0" + "l2=1.52 f=-0.328 shape=(1, 9000, 1)
logits [[-0.5009298  -0.28496322 -0.26902965 -0.25869045]]
Iteration 800 of 1000: loss=1.4 " + "l1=0" + "l2=1.4 f=-0.335 shape=(1, 9000, 1)
logits [[-0.4940615  -0.320548   -0.27124605 -0.25259998]]
Iteration 900 of 1000: loss=1.28 " + "l1=0" + "l2=1.28 f=-0.342 shape=(1, 9000, 1)
logits [[-0.46676853 -0.35699868 -0.27313066 -0.27117205]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.16 " + "l1=6.16" + "l2=0 f=-0.67 shape=(1, 9000, 1)
logits [[ 3.7720673 -1.0876621  2.0629585 -7.427929 ]]
Iteration 100 of 1000: loss=4.03 " + "l1=3" + "l2=1.04 f=-0.557 shape=(1, 9000, 1)
logits [[ 1.0672662   0.00861099  1.0721092  -4.377136  ]]
Iteration 200 of 1000: loss=3.36 " + "l1=2.26" + "l2=1.1 f=-0.515 shape=(1, 9000, 1)
logits [[ 0.63344353  0.15793817  0.6299581  -3.4824786 ]]
Iteration 300 of 1000: loss=2.88 " + "l1=1.68" + "l2=1.2 f=-0.465 shape=(1, 9000, 1)
logits [[ 0.33351496  0.17691766  0.34410143 -2.7138853 ]]
Iteration 400 of 1000: loss=2.37 " + "l1=1.11" + "l2=1.25 f=-0.434 shape=(1, 9000, 1)
logits [[ 0.09282997 -0.03328437  0.11477727 -1.9096429 ]]
Iteration 500 of 1000: loss=1.99 " + "l1=0.751" + "l2=1.24 f=-0.427 shape=(1, 9000, 1)
logits [[-0.12358585 -0.09665927 -0.06087732 -1.426121  ]]
Iteration 600 of 1000: loss=1.75 " + "l1=0.494" + "l2=1.25 f=-0.427 shape=(1, 9000, 1)
logits [[-0.31391644 -0.19132967 -0.15213408 -1.0504843 ]]
Iteration 700 of 1000: loss=1.51 " + "l1=0.182" + "l2=1.33 f=-0.411 shape=(1, 9000, 1)
logits [[-0.5655806  -0.25979313 -0.24494846 -0.5755612 ]]
Iteration 800 of 1000: loss=1.35 " + "l1=0.0115" + "l2=1.34 f=-0.412 shape=(1, 9000, 1)
logits [[-0.7112386  -0.30479336 -0.30484712 -0.32563972]]
Iteration 900 of 1000: loss=1.23 " + "l1=0.00925" + "l2=1.22 f=-0.418 shape=(1, 9000, 1)
logits [[-0.64307547 -0.34659582 -0.33200657 -0.3488338 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.64 " + "l1=3.64" + "l2=0 f=-0.67 shape=(1, 9000, 1)
logits [[ 3.7720673 -1.0876621  2.0629585 -7.427929 ]]
Iteration 100 of 1000: loss=2.83 " + "l1=2.34" + "l2=0.486 f=-0.578 shape=(1, 9000, 1)
logits [[ 1.8957269 -0.386702   1.4875543 -5.308883 ]]
Iteration 200 of 1000: loss=2.51 " + "l1=1.84" + "l2=0.669 f=-0.582 shape=(1, 9000, 1)
logits [[ 1.1179572  -0.02248113  1.1177227  -4.5401106 ]]
Iteration 300 of 1000: loss=2.25 " + "l1=1.55" + "l2=0.695 f=-0.541 shape=(1, 9000, 1)
logits [[ 0.8523154   0.05320758  0.85169744 -3.9229622 ]]
Iteration 400 of 1000: loss=2.02 " + "l1=1.29" + "l2=0.737 f=-0.505 shape=(1, 9000, 1)
logits [[ 0.6077486   0.10639714  0.61003166 -3.3442585 ]]
Iteration 500 of 1000: loss=1.77 " + "l1=1.03" + "l2=0.746 f=-0.482 shape=(1, 9000, 1)
logits [[ 0.38963664  0.06644643  0.3900739  -2.7746377 ]]
Iteration 600 of 1000: loss=1.52 " + "l1=0.775" + "l2=0.745 f=-0.453 shape=(1, 9000, 1)
logits [[ 0.1816383  -0.00283395  0.19578989 -2.188404  ]]
Iteration 700 of 1000: loss=1.3 " + "l1=0.543" + "l2=0.754 f=-0.411 shape=(1, 9000, 1)
logits [[-0.01441589 -0.00925782  0.02557899 -1.6459446 ]]
Iteration 800 of 1000: loss=1.14 " + "l1=0.4" + "l2=0.737 f=-0.388 shape=(1, 9000, 1)
logits [[-0.13460296 -0.08904276 -0.04926633 -1.27961   ]]
Iteration 900 of 1000: loss=1.01 " + "l1=0.254" + "l2=0.758 f=-0.365 shape=(1, 9000, 1)
logits [[-0.30791435 -0.12716474 -0.12316048 -0.9034986 ]]
--- 307.1848647594452 seconds ---
Adv result:3
Loading record A01370
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.072 " + "l1=0.072" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[  6.302741    -0.89870304   2.8162305  -11.676692  ]]
Iteration 100 of 1000: loss=0.0713 " + "l1=0.071" + "l2=0.000363 f=-0.867 shape=(1, 9000, 1)
logits [[  6.2456684   -0.84962213   2.790126   -11.6550665 ]]
Iteration 200 of 1000: loss=0.0711 " + "l1=0.0707" + "l2=0.000405 f=-0.868 shape=(1, 9000, 1)
logits [[  6.230522   -0.8365397   2.7824492 -11.649137 ]]
Iteration 300 of 1000: loss=0.0709 " + "l1=0.0703" + "l2=0.000537 f=-0.869 shape=(1, 9000, 1)
logits [[  6.21225    -0.8215244   2.773878  -11.641562 ]]
Iteration 400 of 1000: loss=0.0707 " + "l1=0.07" + "l2=0.000694 f=-0.87 shape=(1, 9000, 1)
logits [[  6.1941495   -0.80700266   2.7657049  -11.633407  ]]
Iteration 500 of 1000: loss=0.0706 " + "l1=0.0697" + "l2=0.000854 f=-0.871 shape=(1, 9000, 1)
logits [[  6.176777   -0.793679    2.7584991 -11.624842 ]]
Iteration 600 of 1000: loss=0.0705 " + "l1=0.0694" + "l2=0.00103 f=-0.871 shape=(1, 9000, 1)
logits [[  6.1610208  -0.7821011   2.7518535 -11.6161175]]
Iteration 700 of 1000: loss=0.0704 " + "l1=0.0692" + "l2=0.0012 f=-0.872 shape=(1, 9000, 1)
logits [[  6.146595   -0.7720003   2.7455075 -11.607355 ]]
Iteration 800 of 1000: loss=0.0703 " + "l1=0.069" + "l2=0.00133 f=-0.872 shape=(1, 9000, 1)
logits [[  6.1335773   -0.76319873   2.7398367  -11.598852  ]]
Iteration 900 of 1000: loss=0.0703 " + "l1=0.0688" + "l2=0.00154 f=-0.872 shape=(1, 9000, 1)
logits [[  6.1218114   -0.75589806   2.73472    -11.590558  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.72 " + "l1=0.72" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[  6.302741    -0.89870304   2.8162305  -11.676692  ]]
Iteration 100 of 1000: loss=0.66 " + "l1=0.633" + "l2=0.0272 f=-0.887 shape=(1, 9000, 1)
logits [[  5.843699   -0.4835228   2.6044464 -11.511963 ]]
Iteration 200 of 1000: loss=0.625 " + "l1=0.579" + "l2=0.0463 f=-0.901 shape=(1, 9000, 1)
logits [[  5.549014    -0.23837353   2.47328    -11.388623  ]]
Iteration 300 of 1000: loss=0.592 " + "l1=0.523" + "l2=0.0691 f=-0.911 shape=(1, 9000, 1)
logits [[ 5.2381086e+00  5.5618454e-03  2.3462598e+00 -1.1233664e+01]]
Iteration 400 of 1000: loss=0.559 " + "l1=0.465" + "l2=0.0937 f=-0.92 shape=(1, 9000, 1)
logits [[  4.9021864   0.2508268   2.2315018 -11.063381 ]]
Iteration 500 of 1000: loss=0.525 " + "l1=0.405" + "l2=0.119 f=-0.934 shape=(1, 9000, 1)
logits [[  4.5343866    0.48038012   2.1359956  -10.886577  ]]
Iteration 600 of 1000: loss=0.496 " + "l1=0.356" + "l2=0.14 f=-0.946 shape=(1, 9000, 1)
logits [[  4.214855    0.6519417   2.075619  -10.72722  ]]
Iteration 700 of 1000: loss=0.468 " + "l1=0.307" + "l2=0.161 f=-0.952 shape=(1, 9000, 1)
logits [[  3.891824     0.82247174   2.030243   -10.551122  ]]
Iteration 800 of 1000: loss=0.437 " + "l1=0.253" + "l2=0.185 f=-0.957 shape=(1, 9000, 1)
logits [[  3.5308576   1.004632    1.9969879 -10.358692 ]]
Iteration 900 of 1000: loss=0.409 " + "l1=0.203" + "l2=0.206 f=-0.958 shape=(1, 9000, 1)
logits [[  3.1981475   1.1645308   1.9666846 -10.16017  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.2 " + "l1=7.2" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[  6.302741    -0.89870304   2.8162305  -11.676692  ]]
Iteration 100 of 1000: loss=1.37 " + "l1=0" + "l2=1.37 f=-1.07 shape=(1, 9000, 1)
logits [[  2.1848013   2.2682016   1.8993101 -10.627726 ]]
Iteration 200 of 1000: loss=0.984 " + "l1=0" + "l2=0.984 f=-1.08 shape=(1, 9000, 1)
logits [[  2.1819463   2.230576    1.8660865 -10.599307 ]]
Iteration 300 of 1000: loss=0.837 " + "l1=0" + "l2=0.837 f=-1.07 shape=(1, 9000, 1)
logits [[  2.1593757   2.199807    1.8511771 -10.507975 ]]
Iteration 400 of 1000: loss=0.739 " + "l1=0.0119" + "l2=0.727 f=-1.07 shape=(1, 9000, 1)
logits [[  2.1547232   2.1428297   1.8527405 -10.420219 ]]
Iteration 500 of 1000: loss=0.667 " + "l1=0" + "l2=0.667 f=-1.07 shape=(1, 9000, 1)
logits [[  2.078941    2.1325376   1.8518856 -10.327354 ]]
Iteration 600 of 1000: loss=0.605 " + "l1=0" + "l2=0.605 f=-1.06 shape=(1, 9000, 1)
logits [[  2.060565    2.0933123   1.8491297 -10.256556 ]]
Iteration 700 of 1000: loss=0.555 " + "l1=0" + "l2=0.555 f=-1.06 shape=(1, 9000, 1)
logits [[  2.045502    2.0615802   1.8406167 -10.188193 ]]
Iteration 800 of 1000: loss=0.52 " + "l1=0" + "l2=0.52 f=-1.06 shape=(1, 9000, 1)
logits [[  2.016013    2.0412326   1.8293107 -10.109716 ]]
Iteration 900 of 1000: loss=0.497 " + "l1=0" + "l2=0.497 f=-1.05 shape=(1, 9000, 1)
logits [[  1.9809592   2.030115    1.8223797 -10.037848 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.96 " + "l1=3.96" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[  6.302741    -0.89870304   2.8162305  -11.676692  ]]
Iteration 100 of 1000: loss=1.3 " + "l1=0" + "l2=1.3 f=-1.06 shape=(1, 9000, 1)
logits [[  2.2455523   2.250635    1.9178085 -10.63734  ]]
Iteration 200 of 1000: loss=0.84 " + "l1=0" + "l2=0.84 f=-1.07 shape=(1, 9000, 1)
logits [[  2.1907716   2.2009304   1.9013563 -10.591848 ]]
Iteration 300 of 1000: loss=0.681 " + "l1=0.00313" + "l2=0.678 f=-1.07 shape=(1, 9000, 1)
logits [[  2.1536887   2.1480017   1.8927675 -10.481225 ]]
Iteration 400 of 1000: loss=0.588 " + "l1=0.00277" + "l2=0.585 f=-1.06 shape=(1, 9000, 1)
logits [[  2.105471    2.100431    1.8874339 -10.346161 ]]
Iteration 500 of 1000: loss=0.54 " + "l1=0" + "l2=0.54 f=-1.06 shape=(1, 9000, 1)
logits [[  2.0302558   2.0848079   1.868835  -10.219473 ]]
Iteration 600 of 1000: loss=0.497 " + "l1=0" + "l2=0.497 f=-1.05 shape=(1, 9000, 1)
logits [[  2.0202541   2.0413744   1.8520753 -10.112736 ]]
Iteration 700 of 1000: loss=0.467 " + "l1=0" + "l2=0.467 f=-1.04 shape=(1, 9000, 1)
logits [[  2.0067341   2.00678     1.829825  -10.006882 ]]
Iteration 800 of 1000: loss=0.453 " + "l1=0" + "l2=0.453 f=-1.03 shape=(1, 9000, 1)
logits [[ 1.9534185  2.0030892  1.7993327 -9.892702 ]]
Iteration 900 of 1000: loss=0.428 " + "l1=0" + "l2=0.428 f=-1.02 shape=(1, 9000, 1)
logits [[ 1.9523379  1.965408   1.7773926 -9.792559 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.34 " + "l1=2.34" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[  6.302741    -0.89870304   2.8162305  -11.676692  ]]
Iteration 100 of 1000: loss=1.5 " + "l1=0.965" + "l2=0.532 f=-0.964 shape=(1, 9000, 1)
logits [[  4.0102596   1.0417913   2.01151   -10.920052 ]]
Iteration 200 of 1000: loss=0.83 " + "l1=0.0423" + "l2=0.788 f=-1.05 shape=(1, 9000, 1)
logits [[  2.272895    2.1428642   1.9120178 -10.524792 ]]
Iteration 300 of 1000: loss=0.609 " + "l1=0.00615" + "l2=0.603 f=-1.06 shape=(1, 9000, 1)
logits [[  2.1371076   2.1181867   1.9007638 -10.381502 ]]
Iteration 400 of 1000: loss=0.515 " + "l1=0" + "l2=0.515 f=-1.05 shape=(1, 9000, 1)
logits [[  2.0297928   2.0720978   1.8884648 -10.204051 ]]
Iteration 500 of 1000: loss=0.452 " + "l1=0" + "l2=0.452 f=-1.04 shape=(1, 9000, 1)
logits [[  2.0078523   2.0192847   1.8714714 -10.068405 ]]
Iteration 600 of 1000: loss=0.419 " + "l1=0.00652" + "l2=0.412 f=-1.03 shape=(1, 9000, 1)
logits [[ 1.9981427  1.9780687  1.851065  -9.946739 ]]
Iteration 700 of 1000: loss=0.391 " + "l1=0.00206" + "l2=0.389 f=-1.02 shape=(1, 9000, 1)
logits [[ 1.9645201  1.9581686  1.8211054 -9.822711 ]]
Iteration 800 of 1000: loss=0.371 " + "l1=0" + "l2=0.371 f=-1.01 shape=(1, 9000, 1)
logits [[ 1.9297265  1.9387292  1.7909204 -9.711493 ]]
Iteration 900 of 1000: loss=0.352 " + "l1=0" + "l2=0.352 f=-1 shape=(1, 9000, 1)
logits [[ 1.9062799  1.9125347  1.7688104 -9.600461 ]]
--- 316.9681670665741 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0349 " + "l1=0.0349" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[  6.302741    -0.89870304   2.8162305  -11.676692  ]]
Iteration 100 of 1000: loss=0.0346 " + "l1=0.0345" + "l2=0.000168 f=-0.868 shape=(1, 9000, 1)
logits [[  6.2708583  -0.8943351   2.8241513 -11.672445 ]]
Iteration 200 of 1000: loss=0.0346 " + "l1=0.0344" + "l2=0.000142 f=-0.868 shape=(1, 9000, 1)
logits [[  6.2663713  -0.8931815   2.824342  -11.670868 ]]
Iteration 300 of 1000: loss=0.0345 " + "l1=0.0343" + "l2=0.000169 f=-0.869 shape=(1, 9000, 1)
logits [[  6.259131   -0.8920316   2.8253956 -11.669009 ]]
Iteration 400 of 1000: loss=0.0345 " + "l1=0.0342" + "l2=0.000235 f=-0.87 shape=(1, 9000, 1)
logits [[  6.2514067  -0.8911241   2.8265586 -11.666838 ]]
Iteration 500 of 1000: loss=0.0345 " + "l1=0.0342" + "l2=0.000315 f=-0.871 shape=(1, 9000, 1)
logits [[  6.2436028   -0.89027023   2.8276448  -11.664395  ]]
Iteration 600 of 1000: loss=0.0345 " + "l1=0.0341" + "l2=0.000416 f=-0.872 shape=(1, 9000, 1)
logits [[  6.2361426  -0.8894764   2.8285701 -11.661794 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.349 " + "l1=0.349" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[  6.302741    -0.89870304   2.8162305  -11.676692  ]]
Iteration 100 of 1000: loss=0.331 " + "l1=0.323" + "l2=0.0075 f=-0.89 shape=(1, 9000, 1)
logits [[  6.0914764  -0.8662236   2.8582182 -11.645386 ]]
Iteration 200 of 1000: loss=0.322 " + "l1=0.311" + "l2=0.0109 f=-0.903 shape=(1, 9000, 1)
logits [[  5.9789367  -0.8421127   2.868135  -11.617724 ]]
Iteration 300 of 1000: loss=0.314 " + "l1=0.299" + "l2=0.0144 f=-0.915 shape=(1, 9000, 1)
logits [[  5.86585     -0.81978685   2.8726244  -11.577255  ]]
Iteration 400 of 1000: loss=0.306 " + "l1=0.288" + "l2=0.018 f=-0.925 shape=(1, 9000, 1)
logits [[  5.749239    -0.79849017   2.8732188  -11.522989  ]]
Iteration 500 of 1000: loss=0.297 " + "l1=0.275" + "l2=0.0225 f=-0.935 shape=(1, 9000, 1)
logits [[  5.6217184  -0.7761212   2.8721063 -11.456935 ]]
Iteration 600 of 1000: loss=0.29 " + "l1=0.263" + "l2=0.0265 f=-0.943 shape=(1, 9000, 1)
logits [[  5.497127    -0.74949884   2.8672965  -11.385081  ]]
Iteration 700 of 1000: loss=0.282 " + "l1=0.252" + "l2=0.0304 f=-0.949 shape=(1, 9000, 1)
logits [[  5.3821397   -0.72724783   2.8619957  -11.312745  ]]
Iteration 800 of 1000: loss=0.276 " + "l1=0.242" + "l2=0.0341 f=-0.954 shape=(1, 9000, 1)
logits [[  5.2758985  -0.708873    2.857331  -11.242079 ]]
Iteration 900 of 1000: loss=0.269 " + "l1=0.231" + "l2=0.0381 f=-0.96 shape=(1, 9000, 1)
logits [[  5.162106    -0.69356793   2.8527908  -11.161761  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.49 " + "l1=3.49" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[  6.302741    -0.89870304   2.8162305  -11.676692  ]]
Iteration 100 of 1000: loss=1.03 " + "l1=0.00658" + "l2=1.03 f=-1.14 shape=(1, 9000, 1)
logits [[  3.1551838    0.26220554   3.1486006  -11.115996  ]]
Iteration 200 of 1000: loss=0.669 " + "l1=0" + "l2=0.669 f=-1.14 shape=(1, 9000, 1)
logits [[  3.1022093    0.27503228   3.1119072  -11.055442  ]]
Iteration 300 of 1000: loss=0.52 " + "l1=0.00703" + "l2=0.513 f=-1.14 shape=(1, 9000, 1)
logits [[  3.0760968    0.26571783   3.0690637  -10.952348  ]]
Iteration 400 of 1000: loss=0.426 " + "l1=0" + "l2=0.426 f=-1.13 shape=(1, 9000, 1)
logits [[  3.0417848    0.25904587   3.0418067  -10.850244  ]]
Iteration 500 of 1000: loss=0.368 " + "l1=0" + "l2=0.368 f=-1.12 shape=(1, 9000, 1)
logits [[  3.015888    0.2528181   3.0216477 -10.766017 ]]
Iteration 600 of 1000: loss=0.335 " + "l1=0" + "l2=0.335 f=-1.11 shape=(1, 9000, 1)
logits [[  2.97141      0.25781348   3.0095356  -10.686688  ]]
Iteration 700 of 1000: loss=0.3 " + "l1=0" + "l2=0.3 f=-1.1 shape=(1, 9000, 1)
logits [[  2.9811184   0.2411082   2.984332  -10.60937  ]]
Iteration 800 of 1000: loss=0.285 " + "l1=0" + "l2=0.285 f=-1.09 shape=(1, 9000, 1)
logits [[  2.9472044    0.23872234   2.9672613  -10.529514  ]]
Iteration 900 of 1000: loss=0.27 " + "l1=0" + "l2=0.27 f=-1.09 shape=(1, 9000, 1)
logits [[  2.9253883   0.2300241   2.950186  -10.445707 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.92 " + "l1=1.92" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[  6.302741    -0.89870304   2.8162305  -11.676692  ]]
Iteration 100 of 1000: loss=1.28 " + "l1=0.905" + "l2=0.371 f=-1.02 shape=(1, 9000, 1)
logits [[  4.6226077   -0.40893012   2.9773853  -11.266787  ]]
Iteration 200 of 1000: loss=0.643 " + "l1=0.0146" + "l2=0.628 f=-1.13 shape=(1, 9000, 1)
logits [[  3.1444309    0.22795875   3.1178894  -10.997062  ]]
Iteration 300 of 1000: loss=0.441 " + "l1=0" + "l2=0.441 f=-1.13 shape=(1, 9000, 1)
logits [[  3.0317206    0.27352288   3.0567422  -10.865297  ]]
Iteration 400 of 1000: loss=0.343 " + "l1=0.00216" + "l2=0.341 f=-1.11 shape=(1, 9000, 1)
logits [[  3.0123734   0.2705455   3.0084467 -10.722534 ]]
Iteration 500 of 1000: loss=0.302 " + "l1=0.00436" + "l2=0.298 f=-1.09 shape=(1, 9000, 1)
logits [[  2.9914515    0.26008862   2.983522   -10.607949  ]]
Iteration 600 of 1000: loss=0.273 " + "l1=0" + "l2=0.273 f=-1.08 shape=(1, 9000, 1)
logits [[  2.9612198    0.24570368   2.96201    -10.507143  ]]
Iteration 700 of 1000: loss=0.254 " + "l1=0" + "l2=0.254 f=-1.07 shape=(1, 9000, 1)
logits [[  2.9285958    0.23176391   2.9419363  -10.402258  ]]
Iteration 800 of 1000: loss=0.236 " + "l1=0.00285" + "l2=0.233 f=-1.06 shape=(1, 9000, 1)
logits [[  2.9261198    0.20612673   2.920945   -10.313075  ]]
Iteration 900 of 1000: loss=0.22 " + "l1=8.52e-05" + "l2=0.22 f=-1.06 shape=(1, 9000, 1)
logits [[  2.9030643   0.1905588   2.9029093 -10.233281 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.13 " + "l1=1.13" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[  6.302741    -0.89870304   2.8162305  -11.676692  ]]
Iteration 100 of 1000: loss=0.943 " + "l1=0.851" + "l2=0.0921 f=-0.951 shape=(1, 9000, 1)
logits [[  5.529294    -0.72625965   2.9105392  -11.518585  ]]
Iteration 200 of 1000: loss=0.791 " + "l1=0.608" + "l2=0.183 f=-1.01 shape=(1, 9000, 1)
logits [[  4.8045135   -0.50083387   2.9346948  -11.267679  ]]
Iteration 300 of 1000: loss=0.634 " + "l1=0.349" + "l2=0.285 f=-1.04 shape=(1, 9000, 1)
logits [[  4.0391245  -0.2186266   2.9651392 -10.960474 ]]
Iteration 400 of 1000: loss=0.406 " + "l1=0.00123" + "l2=0.405 f=-1.09 shape=(1, 9000, 1)
logits [[  3.0349932    0.21309258   3.0312214  -10.632576  ]]
Iteration 500 of 1000: loss=0.31 " + "l1=0" + "l2=0.31 f=-1.07 shape=(1, 9000, 1)
logits [[  2.9740825    0.23855697   2.975507   -10.458072  ]]
Iteration 600 of 1000: loss=0.273 " + "l1=0.000223" + "l2=0.273 f=-1.06 shape=(1, 9000, 1)
logits [[  2.9470363    0.22073098   2.9463506  -10.347278  ]]
Iteration 700 of 1000: loss=0.248 " + "l1=0.00426" + "l2=0.243 f=-1.05 shape=(1, 9000, 1)
logits [[  2.9399168    0.18655412   2.9268208  -10.240894  ]]
Iteration 800 of 1000: loss=0.226 " + "l1=0.00142" + "l2=0.225 f=-1.04 shape=(1, 9000, 1)
logits [[  2.919108     0.16119762   2.9147375  -10.153296  ]]
Iteration 900 of 1000: loss=0.214 " + "l1=0" + "l2=0.214 f=-1.03 shape=(1, 9000, 1)
logits [[  2.8928013   0.1423732   2.902398  -10.074191 ]]
--- 299.0196144580841 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.18 " + "l1=0.18" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[  6.302741    -0.89870304   2.8162305  -11.676692  ]]
Iteration 100 of 1000: loss=0.179 " + "l1=0.179" + "l2=0.000315 f=-0.864 shape=(1, 9000, 1)
logits [[  6.251689   -0.8721813   2.793916  -11.630345 ]]
Iteration 200 of 1000: loss=0.179 " + "l1=0.179" + "l2=0.000325 f=-0.865 shape=(1, 9000, 1)
logits [[  6.237312    -0.86492604   2.7878506  -11.61949   ]]
Iteration 300 of 1000: loss=0.179 " + "l1=0.178" + "l2=0.000415 f=-0.865 shape=(1, 9000, 1)
logits [[  6.219585    -0.85660124   2.7803905  -11.604655  ]]
Iteration 400 of 1000: loss=0.178 " + "l1=0.178" + "l2=0.000547 f=-0.866 shape=(1, 9000, 1)
logits [[  6.200628   -0.8481633   2.7724793 -11.5882225]]
Iteration 500 of 1000: loss=0.178 " + "l1=0.178" + "l2=0.000687 f=-0.866 shape=(1, 9000, 1)
logits [[  6.1819935  -0.8406816   2.764848  -11.571047 ]]
Iteration 600 of 1000: loss=0.178 " + "l1=0.177" + "l2=0.000858 f=-0.867 shape=(1, 9000, 1)
logits [[  6.163704   -0.8339128   2.7574553 -11.553621 ]]
Iteration 700 of 1000: loss=0.178 " + "l1=0.177" + "l2=0.00101 f=-0.867 shape=(1, 9000, 1)
logits [[  6.1463647  -0.8278908   2.7504592 -11.536218 ]]
Iteration 800 of 1000: loss=0.178 " + "l1=0.176" + "l2=0.00128 f=-0.867 shape=(1, 9000, 1)
logits [[  6.129667   -0.8222594   2.7436795 -11.519151 ]]
Iteration 900 of 1000: loss=0.178 " + "l1=0.176" + "l2=0.00141 f=-0.867 shape=(1, 9000, 1)
logits [[  6.1138244  -0.8172998   2.7371628 -11.502237 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.8 " + "l1=1.8" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[  6.302741    -0.89870304   2.8162305  -11.676692  ]]
Iteration 100 of 1000: loss=1.74 " + "l1=1.72" + "l2=0.0229 f=-0.87 shape=(1, 9000, 1)
logits [[  5.875924   -0.6868473   2.6411505 -11.311539 ]]
Iteration 200 of 1000: loss=1.7 " + "l1=1.66" + "l2=0.0371 f=-0.873 shape=(1, 9000, 1)
logits [[  5.580332  -0.552285   2.520487 -11.041235]]
Iteration 300 of 1000: loss=1.65 " + "l1=1.6" + "l2=0.0531 f=-0.869 shape=(1, 9000, 1)
logits [[  5.263387    -0.42705202   2.4070067  -10.720501  ]]
Iteration 400 of 1000: loss=1.6 " + "l1=1.53" + "l2=0.0699 f=-0.86 shape=(1, 9000, 1)
logits [[  4.9649425  -0.3397038   2.316354  -10.382366 ]]
Iteration 500 of 1000: loss=1.56 " + "l1=1.47" + "l2=0.0885 f=-0.846 shape=(1, 9000, 1)
logits [[  4.672198    -0.26338494   2.231634   -10.023297  ]]
Iteration 600 of 1000: loss=1.51 " + "l1=1.4" + "l2=0.107 f=-0.83 shape=(1, 9000, 1)
logits [[ 4.377844   -0.19607031  2.1519992  -9.654445  ]]
Iteration 700 of 1000: loss=1.46 " + "l1=1.33" + "l2=0.129 f=-0.807 shape=(1, 9000, 1)
logits [[ 4.081226   -0.14578529  2.0823483  -9.246913  ]]
Iteration 800 of 1000: loss=1.41 " + "l1=1.26" + "l2=0.149 f=-0.778 shape=(1, 9000, 1)
logits [[ 3.8103516  -0.12830757  2.0374713  -8.833064  ]]
Iteration 900 of 1000: loss=1.36 " + "l1=1.19" + "l2=0.169 f=-0.744 shape=(1, 9000, 1)
logits [[ 3.544392   -0.11925282  1.9983636  -8.398734  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=18 " + "l1=18" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[  6.302741    -0.89870304   2.8162305  -11.676692  ]]
Iteration 100 of 1000: loss=11.9 " + "l1=9.09" + "l2=2.83 f=-0.796 shape=(1, 9000, 1)
logits [[ 1.4632869  1.4816811  1.474677  -7.603662 ]]
Iteration 200 of 1000: loss=9.12 " + "l1=5.6" + "l2=3.52 f=-0.551 shape=(1, 9000, 1)
logits [[ 0.8560844  0.8371474  0.8510119 -4.747569 ]]
Iteration 300 of 1000: loss=5.81 " + "l1=1.65" + "l2=4.15 f=-0.276 shape=(1, 9000, 1)
logits [[ 0.01628548  0.1739154   0.18004759 -1.4741521 ]]
Iteration 400 of 1000: loss=4.05 " + "l1=0.0461" + "l2=4.01 f=-0.208 shape=(1, 9000, 1)
logits [[-0.36702177 -0.14948756 -0.13411011 -0.18016726]]
Iteration 500 of 1000: loss=3 " + "l1=0" + "l2=3 f=-0.215 shape=(1, 9000, 1)
logits [[-0.35919315 -0.1997457  -0.15537858 -0.14712214]]
Iteration 600 of 1000: loss=2.5 " + "l1=0" + "l2=2.5 f=-0.229 shape=(1, 9000, 1)
logits [[-0.3837438  -0.18645038 -0.17675288 -0.16877553]]
Iteration 700 of 1000: loss=2.2 " + "l1=0" + "l2=2.2 f=-0.236 shape=(1, 9000, 1)
logits [[-0.40831333 -0.18388857 -0.17835563 -0.17152983]]
Iteration 800 of 1000: loss=1.99 " + "l1=0" + "l2=1.99 f=-0.237 shape=(1, 9000, 1)
logits [[-0.43116158 -0.17590128 -0.17488778 -0.16569653]]
Iteration 900 of 1000: loss=1.83 " + "l1=0.00567" + "l2=1.83 f=-0.233 shape=(1, 9000, 1)
logits [[-0.42781413 -0.17282937 -0.1632766  -0.16894868]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=9.89 " + "l1=9.89" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[  6.302741    -0.89870304   2.8162305  -11.676692  ]]
Iteration 100 of 1000: loss=7.92 " + "l1=6.88" + "l2=1.04 f=-0.821 shape=(1, 9000, 1)
logits [[ 3.2966328  0.7396057  1.8962756 -9.21503  ]]
Iteration 200 of 1000: loss=6.53 " + "l1=5.12" + "l2=1.41 f=-0.821 shape=(1, 9000, 1)
logits [[ 1.5753968  1.3273101  1.5499629 -7.7374945]]
Iteration 300 of 1000: loss=5.23 " + "l1=3.77" + "l2=1.47 f=-0.654 shape=(1, 9000, 1)
logits [[ 1.04861    1.0571336  1.0623349 -5.785461 ]]
Iteration 400 of 1000: loss=3.88 " + "l1=2.03" + "l2=1.85 f=-0.382 shape=(1, 9000, 1)
logits [[ 0.5316409   0.5380389   0.54494023 -3.1434135 ]]
Iteration 500 of 1000: loss=3.03 " + "l1=1.12" + "l2=1.92 f=-0.264 shape=(1, 9000, 1)
logits [[ 0.21365005  0.24589635  0.25663444 -1.772286  ]]
Iteration 600 of 1000: loss=2.4 " + "l1=0.476" + "l2=1.92 f=-0.23 shape=(1, 9000, 1)
logits [[-0.1613794   0.03364805  0.03741511 -0.82856256]]
Iteration 700 of 1000: loss=1.89 " + "l1=0.0323" + "l2=1.85 f=-0.223 shape=(1, 9000, 1)
logits [[-0.54681396 -0.09624862 -0.09524693 -0.15406492]]
Iteration 800 of 1000: loss=1.59 " + "l1=0.017" + "l2=1.57 f=-0.227 shape=(1, 9000, 1)
logits [[-0.5135535  -0.12508948 -0.11884034 -0.14970917]]
Iteration 900 of 1000: loss=1.42 " + "l1=0.00674" + "l2=1.41 f=-0.228 shape=(1, 9000, 1)
logits [[-0.50858414 -0.13039663 -0.13059306 -0.14265466]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.84 " + "l1=5.84" + "l2=0 f=-0.864 shape=(1, 9000, 1)
logits [[  6.302741    -0.89870304   2.8162305  -11.676692  ]]
Iteration 100 of 1000: loss=5.16 " + "l1=4.84" + "l2=0.322 f=-0.858 shape=(1, 9000, 1)
logits [[  4.6441975   -0.02196846   2.1969354  -10.252714  ]]
Iteration 200 of 1000: loss=4.62 " + "l1=4.12" + "l2=0.497 f=-0.844 shape=(1, 9000, 1)
logits [[ 3.4833236   0.46978977  1.8678828  -9.195024  ]]
Iteration 300 of 1000: loss=4.03 " + "l1=3.39" + "l2=0.639 f=-0.827 shape=(1, 9000, 1)
logits [[ 2.3855722  0.7653622  1.599632  -8.057639 ]]
Iteration 400 of 1000: loss=3.41 " + "l1=2.6" + "l2=0.81 f=-0.722 shape=(1, 9000, 1)
logits [[ 1.3580534   0.99319875  1.3734626  -6.6130457 ]]
Iteration 500 of 1000: loss=3 " + "l1=2.13" + "l2=0.87 f=-0.573 shape=(1, 9000, 1)
logits [[ 1.1878613  0.7150158  1.1851984 -5.378713 ]]
Iteration 600 of 1000: loss=2.68 " + "l1=1.72" + "l2=0.956 f=-0.456 shape=(1, 9000, 1)
logits [[ 0.9970218  0.4813783  1.0020233 -4.305205 ]]
Iteration 700 of 1000: loss=2.36 " + "l1=1.31" + "l2=1.05 f=-0.372 shape=(1, 9000, 1)
logits [[ 0.736282    0.32990065  0.7402457  -3.2928722 ]]
Iteration 800 of 1000: loss=2.07 " + "l1=1.02" + "l2=1.05 f=-0.317 shape=(1, 9000, 1)
logits [[ 0.54168636  0.20583612  0.55286705 -2.5703578 ]]
Iteration 900 of 1000: loss=1.79 " + "l1=0.75" + "l2=1.04 f=-0.275 shape=(1, 9000, 1)
logits [[ 0.37995845  0.0571465   0.38490808 -1.9217639 ]]
--- 321.56902742385864 seconds ---
Adv result:3
Loading record A01371
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0317 " + "l1=0.0317" + "l2=0 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.5086484 -1.6617613  1.2685679 -1.6170007]]
Iteration 100 of 1000: loss=0.0311 " + "l1=0.0306" + "l2=0.000429 f=-0.123 shape=(1, 9000, 1)
logits [[ 1.4452323 -1.619745   1.2396706 -1.5560757]]
Iteration 200 of 1000: loss=0.0309 " + "l1=0.0304" + "l2=0.000466 f=-0.122 shape=(1, 9000, 1)
logits [[ 1.4352436 -1.6094056  1.2339047 -1.5483707]]
Iteration 300 of 1000: loss=0.0308 " + "l1=0.0302" + "l2=0.000525 f=-0.121 shape=(1, 9000, 1)
logits [[ 1.4243572 -1.5984997  1.2279817 -1.5395955]]
Iteration 400 of 1000: loss=0.0306 " + "l1=0.03" + "l2=0.000664 f=-0.121 shape=(1, 9000, 1)
logits [[ 1.4120073 -1.5861076  1.2210164 -1.5293925]]
Iteration 500 of 1000: loss=0.0305 " + "l1=0.0297" + "l2=0.000764 f=-0.12 shape=(1, 9000, 1)
logits [[ 1.3997056 -1.5735085  1.2139658 -1.5193675]]
Iteration 600 of 1000: loss=0.0304 " + "l1=0.0295" + "l2=0.000939 f=-0.119 shape=(1, 9000, 1)
logits [[ 1.3878704 -1.5613517  1.2071137 -1.5098063]]
Iteration 700 of 1000: loss=0.0303 " + "l1=0.0293" + "l2=0.00103 f=-0.118 shape=(1, 9000, 1)
logits [[ 1.3775833 -1.5511864  1.2013817 -1.5009072]]
Iteration 800 of 1000: loss=0.0304 " + "l1=0.0291" + "l2=0.00127 f=-0.118 shape=(1, 9000, 1)
logits [[ 1.3681287 -1.5421002  1.196303  -1.4926659]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.317 " + "l1=0.317" + "l2=0 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.5086484 -1.6617613  1.2685679 -1.6170007]]
Iteration 100 of 1000: loss=0.261 " + "l1=0.237" + "l2=0.0238 f=-0.105 shape=(1, 9000, 1)
logits [[ 1.046968  -1.324432   1.0442343 -1.1864877]]
Iteration 200 of 1000: loss=0.245 " + "l1=0.218" + "l2=0.0271 f=-0.099 shape=(1, 9000, 1)
logits [[ 0.9652327 -1.2076377  0.9688851 -1.1222881]]
Iteration 300 of 1000: loss=0.231 " + "l1=0.2" + "l2=0.0313 f=-0.1 shape=(1, 9000, 1)
logits [[ 0.89406615 -1.1030283   0.894816   -1.0857288 ]]
Iteration 400 of 1000: loss=0.222 " + "l1=0.186" + "l2=0.036 f=-0.103 shape=(1, 9000, 1)
logits [[ 0.8330471  -1.0229068   0.83674526 -1.0605584 ]]
Iteration 500 of 1000: loss=0.215 " + "l1=0.175" + "l2=0.0405 f=-0.108 shape=(1, 9000, 1)
logits [[ 0.78673786 -0.9594245   0.78563863 -1.0444465 ]]
Iteration 600 of 1000: loss=0.211 " + "l1=0.166" + "l2=0.0445 f=-0.111 shape=(1, 9000, 1)
logits [[ 0.7441995 -0.9171817  0.7447259 -1.0166682]]
Iteration 700 of 1000: loss=0.207 " + "l1=0.16" + "l2=0.0477 f=-0.115 shape=(1, 9000, 1)
logits [[ 0.7083221  -0.88697314  0.7105429  -0.993354  ]]
Iteration 800 of 1000: loss=0.205 " + "l1=0.154" + "l2=0.0507 f=-0.12 shape=(1, 9000, 1)
logits [[ 0.67601395 -0.8615537   0.6791388  -0.9744698 ]]
Iteration 900 of 1000: loss=0.202 " + "l1=0.149" + "l2=0.0536 f=-0.123 shape=(1, 9000, 1)
logits [[ 0.6494086  -0.8371315   0.6513189  -0.95543385]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.17 " + "l1=3.17" + "l2=0 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.5086484 -1.6617613  1.2685679 -1.6170007]]
Iteration 100 of 1000: loss=0.936 " + "l1=0.303" + "l2=0.634 f=-0.138 shape=(1, 9000, 1)
logits [[-0.18990284 -0.19955634  0.10312111 -0.26601407]]
Iteration 200 of 1000: loss=0.542 " + "l1=0" + "l2=0.542 f=-0.178 shape=(1, 9000, 1)
logits [[-0.39447185 -0.03666974 -0.04665719 -0.23476765]]
Iteration 300 of 1000: loss=0.429 " + "l1=0.00196" + "l2=0.427 f=-0.183 shape=(1, 9000, 1)
logits [[-0.35998493 -0.03318422 -0.03122762 -0.30692536]]
Iteration 400 of 1000: loss=0.385 " + "l1=0" + "l2=0.385 f=-0.195 shape=(1, 9000, 1)
logits [[-0.36554325 -0.01714292 -0.03559012 -0.36175632]]
Iteration 500 of 1000: loss=0.353 " + "l1=0.00916" + "l2=0.344 f=-0.201 shape=(1, 9000, 1)
logits [[-0.3309318  -0.03312801 -0.02396563 -0.41598576]]
Iteration 600 of 1000: loss=0.332 " + "l1=0" + "l2=0.332 f=-0.208 shape=(1, 9000, 1)
logits [[-0.3344412  -0.03081627 -0.03885086 -0.42646918]]
Iteration 700 of 1000: loss=0.316 " + "l1=0" + "l2=0.316 f=-0.21 shape=(1, 9000, 1)
logits [[-0.30528924 -0.04650397 -0.04903243 -0.44104773]]
Iteration 800 of 1000: loss=0.307 " + "l1=0" + "l2=0.307 f=-0.209 shape=(1, 9000, 1)
logits [[-0.2845067  -0.06101919 -0.07037609 -0.41915247]]
Iteration 900 of 1000: loss=0.297 " + "l1=0" + "l2=0.297 f=-0.199 shape=(1, 9000, 1)
logits [[-0.24723694 -0.09222844 -0.10410392 -0.35317177]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.74 " + "l1=1.74" + "l2=0 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.5086484 -1.6617613  1.2685679 -1.6170007]]
Iteration 100 of 1000: loss=0.793 " + "l1=0.466" + "l2=0.327 f=-0.116 shape=(1, 9000, 1)
logits [[ 0.18710583 -0.5032502   0.34454843 -0.4928038 ]]
Iteration 200 of 1000: loss=0.609 " + "l1=0.285" + "l2=0.324 f=-0.143 shape=(1, 9000, 1)
logits [[ 0.00410409 -0.33119074  0.18661916 -0.42977947]]
Iteration 300 of 1000: loss=0.485 " + "l1=0.115" + "l2=0.37 f=-0.178 shape=(1, 9000, 1)
logits [[-0.2550958  -0.16053577  0.04870802 -0.34632182]]
Iteration 400 of 1000: loss=0.382 " + "l1=0" + "l2=0.382 f=-0.205 shape=(1, 9000, 1)
logits [[-0.3771339  -0.04971022 -0.05132926 -0.3404998 ]]
Iteration 500 of 1000: loss=0.337 " + "l1=0.015" + "l2=0.322 f=-0.206 shape=(1, 9000, 1)
logits [[-0.3180267  -0.09218563 -0.06482793 -0.34729764]]
Iteration 600 of 1000: loss=0.304 " + "l1=0" + "l2=0.304 f=-0.199 shape=(1, 9000, 1)
logits [[-0.29486027 -0.09784649 -0.10093161 -0.30223957]]
Iteration 700 of 1000: loss=0.288 " + "l1=0.00421" + "l2=0.284 f=-0.199 shape=(1, 9000, 1)
logits [[-0.28715983 -0.10648084 -0.09882598 -0.30360034]]
Iteration 800 of 1000: loss=0.276 " + "l1=0" + "l2=0.276 f=-0.203 shape=(1, 9000, 1)
logits [[-0.2964663  -0.10108065 -0.10319997 -0.30986676]]
Iteration 900 of 1000: loss=0.268 " + "l1=0.00244" + "l2=0.265 f=-0.204 shape=(1, 9000, 1)
logits [[-0.29078853 -0.11012327 -0.1056945  -0.30839255]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.03 " + "l1=1.03" + "l2=0 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.5086484 -1.6617613  1.2685679 -1.6170007]]
Iteration 100 of 1000: loss=0.62 " + "l1=0.462" + "l2=0.158 f=-0.103 shape=(1, 9000, 1)
logits [[ 0.591835   -0.80415475  0.61773324 -0.8186085 ]]
Iteration 200 of 1000: loss=0.507 " + "l1=0.325" + "l2=0.182 f=-0.128 shape=(1, 9000, 1)
logits [[ 0.32425264 -0.5849708   0.41528806 -0.6659523 ]]
Iteration 300 of 1000: loss=0.453 " + "l1=0.264" + "l2=0.189 f=-0.146 shape=(1, 9000, 1)
logits [[ 0.21575865 -0.49169213  0.32087868 -0.628295  ]]
Iteration 400 of 1000: loss=0.413 " + "l1=0.202" + "l2=0.212 f=-0.16 shape=(1, 9000, 1)
logits [[ 0.04647634 -0.3724057   0.24824674 -0.56372195]]
Iteration 500 of 1000: loss=0.382 " + "l1=0.154" + "l2=0.228 f=-0.172 shape=(1, 9000, 1)
logits [[-0.05980367 -0.2852126   0.18877314 -0.53207177]]
Iteration 600 of 1000: loss=0.353 " + "l1=0.112" + "l2=0.24 f=-0.184 shape=(1, 9000, 1)
logits [[-0.14044903 -0.22921465  0.115673   -0.48229015]]
Iteration 700 of 1000: loss=0.333 " + "l1=0.0896" + "l2=0.244 f=-0.186 shape=(1, 9000, 1)
logits [[-0.17069931 -0.19459586  0.08112171 -0.45966893]]
Iteration 800 of 1000: loss=0.315 " + "l1=0.0625" + "l2=0.253 f=-0.197 shape=(1, 9000, 1)
logits [[-0.24440134 -0.15685384  0.03534972 -0.4202041 ]]
Iteration 900 of 1000: loss=0.293 " + "l1=0.026" + "l2=0.267 f=-0.199 shape=(1, 9000, 1)
logits [[-0.31083134 -0.1316309  -0.05161107 -0.30001873]]
--- 312.4495859146118 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0024 " + "l1=0.0024" + "l2=0 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.5086484 -1.6617613  1.2685679 -1.6170007]]
Iteration 100 of 1000: loss=0.00226 " + "l1=0.00211" + "l2=0.000143 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.4760487 -1.6539792  1.26461   -1.5875922]]
Iteration 200 of 1000: loss=0.00222 " + "l1=0.0021" + "l2=0.000117 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.4754156 -1.6540644  1.2653245 -1.5876129]]
Iteration 300 of 1000: loss=0.00221 " + "l1=0.00206" + "l2=0.000143 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.472131  -1.6534325  1.2656461 -1.5852935]]
Iteration 400 of 1000: loss=0.00218 " + "l1=0.00202" + "l2=0.000151 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.4683831 -1.6526628  1.2659366 -1.5826547]]
Iteration 500 of 1000: loss=0.00221 " + "l1=0.00198" + "l2=0.000226 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.4645946 -1.6519864  1.2662774 -1.5800681]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.024 " + "l1=0.024" + "l2=0 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.5086484 -1.6617613  1.2685679 -1.6170007]]
Iteration 100 of 1000: loss=0.0107 " + "l1=0.0035" + "l2=0.00725 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.2755401 -1.6078683  1.2405853 -1.4076566]]
Iteration 200 of 1000: loss=0.00674 " + "l1=0.000146" + "l2=0.0066 f=-0.126 shape=(1, 9000, 1)
logits [[ 1.2462646 -1.6021146  1.2448047 -1.392131 ]]
Iteration 300 of 1000: loss=0.00523 " + "l1=0.000194" + "l2=0.00503 f=-0.126 shape=(1, 9000, 1)
logits [[ 1.2537919 -1.6039186  1.2518533 -1.4057561]]
Iteration 400 of 1000: loss=0.00437 " + "l1=0.000354" + "l2=0.00402 f=-0.126 shape=(1, 9000, 1)
logits [[ 1.2606145 -1.6071585  1.2570696 -1.4147094]]
Iteration 500 of 1000: loss=0.00349 " + "l1=0" + "l2=0.00349 f=-0.126 shape=(1, 9000, 1)
logits [[ 1.2598468 -1.6089386  1.2607647 -1.4170545]]
Iteration 600 of 1000: loss=0.00311 " + "l1=0" + "l2=0.00311 f=-0.126 shape=(1, 9000, 1)
logits [[ 1.2639617 -1.611886   1.265141  -1.4226986]]
Iteration 700 of 1000: loss=0.00272 " + "l1=0.000133" + "l2=0.00259 f=-0.127 shape=(1, 9000, 1)
logits [[ 1.2712232 -1.6161892  1.2698942 -1.4315541]]
Iteration 800 of 1000: loss=0.00277 " + "l1=0" + "l2=0.00277 f=-0.127 shape=(1, 9000, 1)
logits [[ 1.2692655 -1.6184306  1.2722887 -1.4316385]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0132 " + "l1=0.0132" + "l2=0 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.5086484 -1.6617613  1.2685679 -1.6170007]]
Iteration 100 of 1000: loss=0.00917 " + "l1=0.00687" + "l2=0.0023 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.3768371 -1.6314143  1.2518644 -1.497178 ]]
Iteration 200 of 1000: loss=0.00779 " + "l1=0.00471" + "l2=0.00308 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.3366854 -1.6229335  1.2510399 -1.4661212]]
Iteration 300 of 1000: loss=0.00649 " + "l1=0.00269" + "l2=0.00379 f=-0.126 shape=(1, 9000, 1)
logits [[ 1.3011119 -1.6153073  1.2521139 -1.4404666]]
Iteration 400 of 1000: loss=0.00525 " + "l1=0.000988" + "l2=0.00427 f=-0.126 shape=(1, 9000, 1)
logits [[ 1.2721946 -1.6090513  1.2542303 -1.4203743]]
Iteration 500 of 1000: loss=0.00413 " + "l1=9.34e-05" + "l2=0.00403 f=-0.126 shape=(1, 9000, 1)
logits [[ 1.2591354 -1.606679   1.257437  -1.4129703]]
Iteration 600 of 1000: loss=0.00363 " + "l1=9.27e-05" + "l2=0.00353 f=-0.126 shape=(1, 9000, 1)
logits [[ 1.2639971 -1.6100546  1.262312  -1.4202641]]
Iteration 700 of 1000: loss=0.00301 " + "l1=0" + "l2=0.00301 f=-0.126 shape=(1, 9000, 1)
logits [[ 1.2658694 -1.6123793  1.2663864 -1.4244227]]
Iteration 800 of 1000: loss=0.00269 " + "l1=0.000101" + "l2=0.00259 f=-0.126 shape=(1, 9000, 1)
logits [[ 1.2724367 -1.6161137  1.2705972 -1.4325746]]
Iteration 900 of 1000: loss=0.0023 " + "l1=4.52e-06" + "l2=0.0023 f=-0.127 shape=(1, 9000, 1)
logits [[ 1.2737147 -1.6184978  1.2736325 -1.4355648]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0078 " + "l1=0.0078" + "l2=0 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.5086484 -1.6617613  1.2685679 -1.6170007]]
Iteration 100 of 1000: loss=0.00636 " + "l1=0.00548" + "l2=0.000876 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.4270185 -1.6422577  1.2583171 -1.5426182]]
Iteration 200 of 1000: loss=0.00595 " + "l1=0.00493" + "l2=0.00102 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.410194 -1.638724  1.258649 -1.529664]]
Iteration 300 of 1000: loss=0.00562 " + "l1=0.00437" + "l2=0.00125 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.3939027 -1.6350155  1.2593578 -1.5181378]]
Iteration 400 of 1000: loss=0.00523 " + "l1=0.00377" + "l2=0.00147 f=-0.126 shape=(1, 9000, 1)
logits [[ 1.376097 -1.632132  1.260243 -1.506239]]
Iteration 500 of 1000: loss=0.00486 " + "l1=0.00318" + "l2=0.00168 f=-0.126 shape=(1, 9000, 1)
logits [[ 1.3597109 -1.6298177  1.2617729 -1.4958584]]
Iteration 600 of 1000: loss=0.00449 " + "l1=0.00262" + "l2=0.00186 f=-0.126 shape=(1, 9000, 1)
logits [[ 1.3444502 -1.6278532  1.2637506 -1.4862233]]
Iteration 700 of 1000: loss=0.00412 " + "l1=0.00206" + "l2=0.00206 f=-0.127 shape=(1, 9000, 1)
logits [[ 1.3287628 -1.6251321  1.2652555 -1.4757484]]
Iteration 800 of 1000: loss=0.00377 " + "l1=0.00148" + "l2=0.00229 f=-0.127 shape=(1, 9000, 1)
logits [[ 1.3121789 -1.622377   1.2666458 -1.4636679]]
Iteration 900 of 1000: loss=0.00335 " + "l1=0.000943" + "l2=0.00241 f=-0.127 shape=(1, 9000, 1)
logits [[ 1.2972007 -1.6205958  1.2681712 -1.4532762]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0105 " + "l1=0.0105" + "l2=0 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.5086484 -1.6617613  1.2685679 -1.6170007]]
Iteration 100 of 1000: loss=0.00793 " + "l1=0.00647" + "l2=0.00146 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.4035577 -1.6369314  1.2557076 -1.5210091]]
Iteration 200 of 1000: loss=0.00714 " + "l1=0.00524" + "l2=0.00189 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.3747457 -1.6309139  1.2549275 -1.4997058]]
Iteration 300 of 1000: loss=0.00636 " + "l1=0.00404" + "l2=0.00232 f=-0.126 shape=(1, 9000, 1)
logits [[ 1.3478068 -1.6255696  1.2555537 -1.4811913]]
Iteration 400 of 1000: loss=0.0056 " + "l1=0.00291" + "l2=0.00269 f=-0.126 shape=(1, 9000, 1)
logits [[ 1.3239048 -1.6211772  1.25748   -1.4656142]]
Iteration 500 of 1000: loss=0.00487 " + "l1=0.00182" + "l2=0.00305 f=-0.127 shape=(1, 9000, 1)
logits [[ 1.3006542 -1.6164759  1.2590674 -1.4499732]]
Iteration 600 of 1000: loss=0.00408 " + "l1=0.000786" + "l2=0.00329 f=-0.126 shape=(1, 9000, 1)
logits [[ 1.278362  -1.6120992  1.2604058 -1.4326625]]
Iteration 700 of 1000: loss=0.00348 " + "l1=7.75e-05" + "l2=0.0034 f=-0.127 shape=(1, 9000, 1)
logits [[ 1.2645457 -1.6108406  1.2627753 -1.4228718]]
Iteration 800 of 1000: loss=0.00291 " + "l1=0.000107" + "l2=0.00281 f=-0.127 shape=(1, 9000, 1)
logits [[ 1.2701069 -1.6140125  1.2676541 -1.430105 ]]
Iteration 900 of 1000: loss=0.00266 " + "l1=3e-05" + "l2=0.00263 f=-0.127 shape=(1, 9000, 1)
logits [[ 1.2716098 -1.61663    1.2709243 -1.4331458]]
--- 282.59848833084106 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0313 " + "l1=0.0313" + "l2=0 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.5086484 -1.6617613  1.2685679 -1.6170007]]
Iteration 100 of 1000: loss=0.0301 " + "l1=0.0293" + "l2=0.000808 f=-0.12 shape=(1, 9000, 1)
logits [[ 1.4230926 -1.6293242  1.2322794 -1.5080194]]
Iteration 200 of 1000: loss=0.0299 " + "l1=0.029" + "l2=0.000894 f=-0.119 shape=(1, 9000, 1)
logits [[ 1.4077314 -1.6216797  1.2258778 -1.4891944]]
Iteration 300 of 1000: loss=0.0297 " + "l1=0.0286" + "l2=0.00103 f=-0.118 shape=(1, 9000, 1)
logits [[ 1.3926172 -1.6141716  1.2196534 -1.4694717]]
Iteration 400 of 1000: loss=0.0295 " + "l1=0.0283" + "l2=0.00117 f=-0.116 shape=(1, 9000, 1)
logits [[ 1.3784553 -1.6069041  1.2138615 -1.4503903]]
Iteration 500 of 1000: loss=0.0292 " + "l1=0.028" + "l2=0.00129 f=-0.115 shape=(1, 9000, 1)
logits [[ 1.3643582 -1.5998253  1.2079234 -1.4310029]]
Iteration 600 of 1000: loss=0.0291 " + "l1=0.0276" + "l2=0.00154 f=-0.113 shape=(1, 9000, 1)
logits [[ 1.3494873 -1.5924863  1.201204  -1.4112407]]
Iteration 700 of 1000: loss=0.029 " + "l1=0.0273" + "l2=0.00169 f=-0.112 shape=(1, 9000, 1)
logits [[ 1.3348196 -1.5857215  1.1947939 -1.392078 ]]
Iteration 800 of 1000: loss=0.0288 " + "l1=0.0269" + "l2=0.00183 f=-0.111 shape=(1, 9000, 1)
logits [[ 1.3207426 -1.5796347  1.1886909 -1.3731247]]
Iteration 900 of 1000: loss=0.0287 " + "l1=0.0266" + "l2=0.00204 f=-0.11 shape=(1, 9000, 1)
logits [[ 1.3083311 -1.5745583  1.1834491 -1.3563459]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.313 " + "l1=0.313" + "l2=0 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.5086484 -1.6617613  1.2685679 -1.6170007]]
Iteration 100 of 1000: loss=0.22 " + "l1=0.181" + "l2=0.0388 f=-0.0814 shape=(1, 9000, 1)
logits [[ 0.95664823 -1.4329854   0.98071086 -0.8300807 ]]
Iteration 200 of 1000: loss=0.196 " + "l1=0.143" + "l2=0.0526 f=-0.0541 shape=(1, 9000, 1)
logits [[ 0.8230225  -1.3753544   0.88503355 -0.5490648 ]]
Iteration 300 of 1000: loss=0.174 " + "l1=0.109" + "l2=0.0652 f=-0.0241 shape=(1, 9000, 1)
logits [[ 0.71944106 -1.3155667   0.7926623  -0.2928166 ]]
Iteration 400 of 1000: loss=0.147 " + "l1=0.0626" + "l2=0.0847 f=0.00675 shape=(1, 9000, 1)
logits [[ 0.60018927 -1.267971    0.660328    0.03444182]]
Iteration 500 of 1000: loss=0.121 " + "l1=0.0185" + "l2=0.102 f=0.0312 shape=(1, 9000, 1)
logits [[ 0.5054826  -1.2385955   0.52151996  0.3363858 ]]
Iteration 600 of 1000: loss=0.101 " + "l1=0" + "l2=0.101 f=0.0408 shape=(1, 9000, 1)
logits [[ 0.46281248 -1.2308595   0.4626595   0.46856922]]
Iteration 700 of 1000: loss=0.09 " + "l1=0.00269" + "l2=0.0873 f=0.0396 shape=(1, 9000, 1)
logits [[ 0.46866113 -1.2456576   0.4812084   0.45429718]]
Iteration 800 of 1000: loss=0.0831 " + "l1=0" + "l2=0.0831 f=0.043 shape=(1, 9000, 1)
logits [[ 0.46288064 -1.2466928   0.47156873  0.48442736]]
Iteration 900 of 1000: loss=0.0772 " + "l1=0.000941" + "l2=0.0763 f=0.0449 shape=(1, 9000, 1)
logits [[ 0.47902742 -1.2540679   0.48208696  0.4726769 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.172 " + "l1=0.172" + "l2=0 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.5086484 -1.6617613  1.2685679 -1.6170007]]
Iteration 100 of 1000: loss=0.139 " + "l1=0.12" + "l2=0.0188 f=-0.0999 shape=(1, 9000, 1)
logits [[ 1.0948898 -1.5043807  1.0952107 -1.0853411]]
Iteration 200 of 1000: loss=0.13 " + "l1=0.111" + "l2=0.0196 f=-0.0869 shape=(1, 9000, 1)
logits [[ 1.0414941  -1.4620897   1.0422142  -0.96932894]]
Iteration 300 of 1000: loss=0.124 " + "l1=0.103" + "l2=0.021 f=-0.0759 shape=(1, 9000, 1)
logits [[ 1.0014026  -1.4296799   1.0021008  -0.87733144]]
Iteration 400 of 1000: loss=0.119 " + "l1=0.0962" + "l2=0.0227 f=-0.0652 shape=(1, 9000, 1)
logits [[ 0.9625755  -1.4022363   0.96416044 -0.7851138 ]]
Iteration 500 of 1000: loss=0.113 " + "l1=0.0886" + "l2=0.0249 f=-0.0538 shape=(1, 9000, 1)
logits [[ 0.92530596 -1.3818864   0.92645264 -0.68508875]]
Iteration 600 of 1000: loss=0.109 " + "l1=0.0812" + "l2=0.0275 f=-0.0441 shape=(1, 9000, 1)
logits [[ 0.8865418  -1.3654435   0.8893772  -0.58689016]]
Iteration 700 of 1000: loss=0.104 " + "l1=0.0745" + "l2=0.0298 f=-0.0351 shape=(1, 9000, 1)
logits [[ 0.8536572 -1.3551403  0.857401  -0.4962855]]
Iteration 800 of 1000: loss=0.0998 " + "l1=0.0669" + "l2=0.0329 f=-0.0252 shape=(1, 9000, 1)
logits [[ 0.8195251  -1.3476733   0.82170266 -0.394489  ]]
Iteration 900 of 1000: loss=0.0949 " + "l1=0.0591" + "l2=0.0358 f=-0.0151 shape=(1, 9000, 1)
logits [[ 0.7806355  -1.3345284   0.7836995  -0.29005253]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.242 " + "l1=0.242" + "l2=0 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.5086484 -1.6617613  1.2685679 -1.6170007]]
Iteration 100 of 1000: loss=0.182 " + "l1=0.156" + "l2=0.0263 f=-0.0902 shape=(1, 9000, 1)
logits [[ 1.0368682  -1.4666588   1.0382483  -0.96920174]]
Iteration 200 of 1000: loss=0.168 " + "l1=0.135" + "l2=0.033 f=-0.0717 shape=(1, 9000, 1)
logits [[ 0.9435187  -1.4127847   0.95935696 -0.77689284]]
Iteration 300 of 1000: loss=0.156 " + "l1=0.119" + "l2=0.0374 f=-0.0548 shape=(1, 9000, 1)
logits [[ 0.87795305 -1.3763702   0.9040691  -0.6250088 ]]
Iteration 400 of 1000: loss=0.144 " + "l1=0.102" + "l2=0.0418 f=-0.0368 shape=(1, 9000, 1)
logits [[ 0.81777763 -1.3465315   0.85017323 -0.468535  ]]
Iteration 500 of 1000: loss=0.132 " + "l1=0.083" + "l2=0.0495 f=-0.0186 shape=(1, 9000, 1)
logits [[ 0.748813   -1.3206301   0.78381276 -0.28651962]]
Iteration 600 of 1000: loss=0.12 " + "l1=0.0608" + "l2=0.0589 f=-0.00176 shape=(1, 9000, 1)
logits [[ 0.6702919  -1.2979541   0.7027744  -0.08215141]]
Iteration 700 of 1000: loss=0.107 " + "l1=0.0373" + "l2=0.0694 f=0.0126 shape=(1, 9000, 1)
logits [[ 0.5850288  -1.2718288   0.6090221   0.12823859]]
Iteration 800 of 1000: loss=0.0947 " + "l1=0.02" + "l2=0.0748 f=0.024 shape=(1, 9000, 1)
logits [[ 0.52721536 -1.2500186   0.5382506   0.28043142]]
Iteration 900 of 1000: loss=0.0855 " + "l1=0.00491" + "l2=0.0806 f=0.0385 shape=(1, 9000, 1)
logits [[ 0.48347154 -1.2324519   0.4828791   0.42011333]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.207 " + "l1=0.207" + "l2=0 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.5086484 -1.6617613  1.2685679 -1.6170007]]
Iteration 100 of 1000: loss=0.161 " + "l1=0.139" + "l2=0.022 f=-0.0951 shape=(1, 9000, 1)
logits [[ 1.0665088 -1.48661    1.0671232 -1.027327 ]]
Iteration 200 of 1000: loss=0.15 " + "l1=0.125" + "l2=0.0252 f=-0.0799 shape=(1, 9000, 1)
logits [[ 0.9966502 -1.4360969  1.0014918 -0.8817503]]
Iteration 300 of 1000: loss=0.142 " + "l1=0.113" + "l2=0.0284 f=-0.0658 shape=(1, 9000, 1)
logits [[ 0.9438228  -1.3992175   0.95070755 -0.75852424]]
Iteration 400 of 1000: loss=0.133 " + "l1=0.101" + "l2=0.0318 f=-0.0512 shape=(1, 9000, 1)
logits [[ 0.8914651  -1.3714119   0.90266556 -0.6276769 ]]
Iteration 500 of 1000: loss=0.125 " + "l1=0.0913" + "l2=0.0341 f=-0.0392 shape=(1, 9000, 1)
logits [[ 0.85034347 -1.3535372   0.8622622  -0.5159363 ]]
Iteration 600 of 1000: loss=0.118 " + "l1=0.0793" + "l2=0.0386 f=-0.0254 shape=(1, 9000, 1)
logits [[ 0.8049563  -1.3395958   0.81489027 -0.38183895]]
Iteration 700 of 1000: loss=0.11 " + "l1=0.0662" + "l2=0.0439 f=-0.0112 shape=(1, 9000, 1)
logits [[ 0.75198793 -1.3214144   0.76170343 -0.23711655]]
Iteration 800 of 1000: loss=0.103 " + "l1=0.0539" + "l2=0.0489 f=-0.00149 shape=(1, 9000, 1)
logits [[ 0.6988456  -1.3060647   0.70716435 -0.10591813]]
Iteration 900 of 1000: loss=0.0949 " + "l1=0.0392" + "l2=0.0557 f=0.00978 shape=(1, 9000, 1)
logits [[ 0.63330245 -1.2878426   0.64273995  0.0509053 ]]
--- 324.76790833473206 seconds ---
Adv result:3
Loading record A01376
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0363 " + "l1=0.0363" + "l2=0 f=-0.156 shape=(1, 9000, 1)
logits [[ 2.1061811 -1.525707   1.8372148 -3.0429635]]
Iteration 100 of 1000: loss=0.0356 " + "l1=0.0353" + "l2=0.000354 f=-0.16 shape=(1, 9000, 1)
logits [[ 2.0506668 -1.476877   1.7904502 -3.0062215]]
Iteration 200 of 1000: loss=0.0354 " + "l1=0.0349" + "l2=0.00043 f=-0.162 shape=(1, 9000, 1)
logits [[ 2.0334034 -1.4594439  1.7714736 -2.9935455]]
Iteration 300 of 1000: loss=0.0351 " + "l1=0.0346" + "l2=0.000536 f=-0.164 shape=(1, 9000, 1)
logits [[ 2.015427  -1.4424124  1.7528982 -2.980366 ]]
Iteration 400 of 1000: loss=0.0349 " + "l1=0.0343" + "l2=0.000672 f=-0.165 shape=(1, 9000, 1)
logits [[ 1.9990048 -1.4269136  1.7359583 -2.9684083]]
Iteration 500 of 1000: loss=0.0348 " + "l1=0.034" + "l2=0.000812 f=-0.167 shape=(1, 9000, 1)
logits [[ 1.9838245 -1.4129266  1.7205197 -2.9576647]]
Iteration 600 of 1000: loss=0.0347 " + "l1=0.0337" + "l2=0.000977 f=-0.168 shape=(1, 9000, 1)
logits [[ 1.9692198 -1.4000828  1.7065959 -2.9478073]]
Iteration 700 of 1000: loss=0.0346 " + "l1=0.0335" + "l2=0.0011 f=-0.169 shape=(1, 9000, 1)
logits [[ 1.9562718 -1.3889048  1.6950895 -2.9401417]]
Iteration 800 of 1000: loss=0.0344 " + "l1=0.0332" + "l2=0.00122 f=-0.171 shape=(1, 9000, 1)
logits [[ 1.9439951 -1.3780481  1.684487  -2.9334502]]
Iteration 900 of 1000: loss=0.0344 " + "l1=0.033" + "l2=0.00137 f=-0.172 shape=(1, 9000, 1)
logits [[ 1.9332373 -1.3691769  1.6759824 -2.9278312]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.363 " + "l1=0.363" + "l2=0 f=-0.156 shape=(1, 9000, 1)
logits [[ 2.1061811 -1.525707   1.8372148 -3.0429635]]
Iteration 100 of 1000: loss=0.308 " + "l1=0.286" + "l2=0.0218 f=-0.19 shape=(1, 9000, 1)
logits [[ 1.7024751 -1.1603035  1.4813427 -2.7851162]]
Iteration 200 of 1000: loss=0.269 " + "l1=0.227" + "l2=0.042 f=-0.246 shape=(1, 9000, 1)
logits [[ 1.3638711  -0.90180606  1.2401373  -2.6876006 ]]
Iteration 300 of 1000: loss=0.235 " + "l1=0.184" + "l2=0.0509 f=-0.287 shape=(1, 9000, 1)
logits [[ 1.108967  -0.7300599  1.1093855 -2.6369143]]
Iteration 400 of 1000: loss=0.224 " + "l1=0.172" + "l2=0.0522 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.0560954 -0.6658597  1.0537212 -2.623887 ]]
Iteration 500 of 1000: loss=0.218 " + "l1=0.164" + "l2=0.0539 f=-0.3 shape=(1, 9000, 1)
logits [[ 1.0175506  -0.62418234  1.0181452  -2.612501  ]]
Iteration 600 of 1000: loss=0.213 " + "l1=0.157" + "l2=0.0566 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.9834062  -0.5815996   0.98212284 -2.60173   ]]
Iteration 700 of 1000: loss=0.208 " + "l1=0.148" + "l2=0.0597 f=-0.309 shape=(1, 9000, 1)
logits [[ 0.94169945 -0.53877443  0.9454355  -2.5840259 ]]
Iteration 800 of 1000: loss=0.204 " + "l1=0.142" + "l2=0.0622 f=-0.313 shape=(1, 9000, 1)
logits [[ 0.90816844 -0.5073453   0.91446626 -2.568839  ]]
Iteration 900 of 1000: loss=0.202 " + "l1=0.139" + "l2=0.0631 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.89427227 -0.4938851   0.89707756 -2.5600154 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.63 " + "l1=3.63" + "l2=0 f=-0.156 shape=(1, 9000, 1)
logits [[ 2.1061811 -1.525707   1.8372148 -3.0429635]]
Iteration 100 of 1000: loss=0.923 " + "l1=0.216" + "l2=0.707 f=-0.398 shape=(1, 9000, 1)
logits [[ 0.06995952  0.184659    0.40087545 -2.248477  ]]
Iteration 200 of 1000: loss=0.486 " + "l1=0" + "l2=0.486 f=-0.447 shape=(1, 9000, 1)
logits [[-0.13597663  0.34397268  0.3427672  -2.3402362 ]]
Iteration 300 of 1000: loss=0.402 " + "l1=0.00702" + "l2=0.395 f=-0.45 shape=(1, 9000, 1)
logits [[-0.16812713  0.3329076   0.3399302  -2.3048673 ]]
Iteration 400 of 1000: loss=0.363 " + "l1=0" + "l2=0.363 f=-0.454 shape=(1, 9000, 1)
logits [[-0.21043555  0.33684176  0.33302793 -2.2756515 ]]
Iteration 500 of 1000: loss=0.337 " + "l1=0" + "l2=0.337 f=-0.455 shape=(1, 9000, 1)
logits [[-0.24081132  0.335145    0.33436665 -2.250233  ]]
Iteration 600 of 1000: loss=0.32 " + "l1=0.000677" + "l2=0.32 f=-0.454 shape=(1, 9000, 1)
logits [[-0.2698637   0.33743176  0.33810833 -2.223109  ]]
Iteration 700 of 1000: loss=0.306 " + "l1=0" + "l2=0.306 f=-0.459 shape=(1, 9000, 1)
logits [[-0.33390507  0.3517921   0.34675795 -2.199715  ]]
Iteration 800 of 1000: loss=0.294 " + "l1=0" + "l2=0.294 f=-0.461 shape=(1, 9000, 1)
logits [[-0.36301318  0.3562546   0.3511687  -2.1874347 ]]
Iteration 900 of 1000: loss=0.283 " + "l1=0" + "l2=0.283 f=-0.462 shape=(1, 9000, 1)
logits [[-0.37943998  0.35857657  0.35691857 -2.1852117 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2 " + "l1=2" + "l2=0 f=-0.156 shape=(1, 9000, 1)
logits [[ 2.1061811 -1.525707   1.8372148 -3.0429635]]
Iteration 100 of 1000: loss=0.85 " + "l1=0.545" + "l2=0.306 f=-0.322 shape=(1, 9000, 1)
logits [[ 0.68705034 -0.2696518   0.7209355  -2.4257076 ]]
Iteration 200 of 1000: loss=0.515 " + "l1=0.122" + "l2=0.393 f=-0.413 shape=(1, 9000, 1)
logits [[ 0.09996825  0.18676883  0.4091676  -2.3466313 ]]
Iteration 300 of 1000: loss=0.373 " + "l1=0" + "l2=0.373 f=-0.451 shape=(1, 9000, 1)
logits [[-0.18093339  0.33708912  0.33692333 -2.2990563 ]]
Iteration 400 of 1000: loss=0.332 " + "l1=0.00451" + "l2=0.327 f=-0.452 shape=(1, 9000, 1)
logits [[-0.21428517  0.32525268  0.33345583 -2.2522256 ]]
Iteration 500 of 1000: loss=0.311 " + "l1=0" + "l2=0.311 f=-0.454 shape=(1, 9000, 1)
logits [[-0.2599219   0.33197305  0.32729593 -2.2154593 ]]
Iteration 600 of 1000: loss=0.295 " + "l1=0" + "l2=0.295 f=-0.459 shape=(1, 9000, 1)
logits [[-0.32477328  0.33998004  0.33904427 -2.188661  ]]
Iteration 700 of 1000: loss=0.284 " + "l1=0" + "l2=0.284 f=-0.461 shape=(1, 9000, 1)
logits [[-0.37080243  0.34768635  0.34663975 -2.16894   ]]
Iteration 800 of 1000: loss=0.276 " + "l1=0" + "l2=0.276 f=-0.463 shape=(1, 9000, 1)
logits [[-0.4023367   0.3553912   0.35331106 -2.1565068 ]]
Iteration 900 of 1000: loss=0.268 " + "l1=0" + "l2=0.268 f=-0.465 shape=(1, 9000, 1)
logits [[-0.4358439   0.3654887   0.36162266 -2.151889  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.18 " + "l1=1.18" + "l2=0 f=-0.156 shape=(1, 9000, 1)
logits [[ 2.1061811 -1.525707   1.8372148 -3.0429635]]
Iteration 100 of 1000: loss=0.643 " + "l1=0.486" + "l2=0.157 f=-0.296 shape=(1, 9000, 1)
logits [[ 0.95085114 -0.54323834  0.95331615 -2.5435    ]]
Iteration 200 of 1000: loss=0.504 " + "l1=0.321" + "l2=0.183 f=-0.337 shape=(1, 9000, 1)
logits [[ 0.6907186  -0.27025682  0.715968   -2.4846199 ]]
Iteration 300 of 1000: loss=0.416 " + "l1=0.199" + "l2=0.216 f=-0.382 shape=(1, 9000, 1)
logits [[ 0.43795958 -0.06874306  0.5445809  -2.441144  ]]
Iteration 400 of 1000: loss=0.38 " + "l1=0.146" + "l2=0.234 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.29168105  0.025796    0.47457793 -2.4051812 ]]
Iteration 500 of 1000: loss=0.349 " + "l1=0.095" + "l2=0.254 f=-0.417 shape=(1, 9000, 1)
logits [[ 0.1519688   0.1191056   0.41145152 -2.3524551 ]]
Iteration 600 of 1000: loss=0.323 " + "l1=0.0671" + "l2=0.256 f=-0.419 shape=(1, 9000, 1)
logits [[ 0.07271669  0.16967666  0.37623215 -2.2958415 ]]
Iteration 700 of 1000: loss=0.308 " + "l1=0.0518" + "l2=0.256 f=-0.423 shape=(1, 9000, 1)
logits [[ 0.03162108  0.19664283  0.35599193 -2.2747002 ]]
Iteration 800 of 1000: loss=0.296 " + "l1=0.0366" + "l2=0.26 f=-0.429 shape=(1, 9000, 1)
logits [[-0.02766201  0.22946952  0.34205148 -2.2608867 ]]
Iteration 900 of 1000: loss=0.288 " + "l1=0.0268" + "l2=0.261 f=-0.436 shape=(1, 9000, 1)
logits [[-0.07766212  0.24864791  0.3311958  -2.2443204 ]]
--- 319.6387937068939 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00269 " + "l1=0.00269" + "l2=0 f=-0.156 shape=(1, 9000, 1)
logits [[ 2.1061811 -1.525707   1.8372148 -3.0429635]]
Iteration 100 of 1000: loss=0.0025 " + "l1=0.00233" + "l2=0.000167 f=-0.156 shape=(1, 9000, 1)
logits [[ 2.0851705 -1.5351362  1.8516967 -3.0274074]]
Iteration 200 of 1000: loss=0.00244 " + "l1=0.0023" + "l2=0.000141 f=-0.156 shape=(1, 9000, 1)
logits [[ 2.0838661 -1.5366132  1.8537025 -3.0265265]]
Iteration 300 of 1000: loss=0.00243 " + "l1=0.00224" + "l2=0.000184 f=-0.156 shape=(1, 9000, 1)
logits [[ 2.0811932 -1.538881   1.8568217 -3.0246942]]
Iteration 400 of 1000: loss=0.0024 " + "l1=0.00218" + "l2=0.000221 f=-0.156 shape=(1, 9000, 1)
logits [[ 2.0783737 -1.5411305  1.8600067 -3.0228004]]
Iteration 500 of 1000: loss=0.0024 " + "l1=0.00213" + "l2=0.000269 f=-0.156 shape=(1, 9000, 1)
logits [[ 2.0756664 -1.5433246  1.8630898 -3.02108  ]]
Iteration 600 of 1000: loss=0.00241 " + "l1=0.00207" + "l2=0.000335 f=-0.156 shape=(1, 9000, 1)
logits [[ 2.0732627 -1.5452889  1.8659154 -3.0196543]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0269 " + "l1=0.0269" + "l2=0 f=-0.156 shape=(1, 9000, 1)
logits [[ 2.1061811 -1.525707   1.8372148 -3.0429635]]
Iteration 100 of 1000: loss=0.0111 " + "l1=0.00348" + "l2=0.00765 f=-0.161 shape=(1, 9000, 1)
logits [[ 1.9536781 -1.5719116  1.9189163 -2.9458988]]
Iteration 200 of 1000: loss=0.00663 " + "l1=3.29e-05" + "l2=0.0066 f=-0.161 shape=(1, 9000, 1)
logits [[ 1.9286622 -1.5764701  1.9283332 -2.925042 ]]
Iteration 300 of 1000: loss=0.00539 " + "l1=7.78e-05" + "l2=0.00531 f=-0.161 shape=(1, 9000, 1)
logits [[ 1.9292595 -1.5770926  1.9284818 -2.9243767]]
Iteration 400 of 1000: loss=0.00475 " + "l1=6.65e-05" + "l2=0.00468 f=-0.161 shape=(1, 9000, 1)
logits [[ 1.9286686 -1.5767761  1.9280034 -2.9257991]]
Iteration 500 of 1000: loss=0.00435 " + "l1=0" + "l2=0.00435 f=-0.162 shape=(1, 9000, 1)
logits [[ 1.9265414 -1.576539   1.9285493 -2.9264224]]
Iteration 600 of 1000: loss=0.00402 " + "l1=7.52e-05" + "l2=0.00395 f=-0.162 shape=(1, 9000, 1)
logits [[ 1.9282856 -1.5760624  1.927534  -2.9283817]]
Iteration 700 of 1000: loss=0.00373 " + "l1=4.08e-05" + "l2=0.00369 f=-0.162 shape=(1, 9000, 1)
logits [[ 1.9275397 -1.5751985  1.9271319 -2.9292595]]
Iteration 800 of 1000: loss=0.00371 " + "l1=0.000127" + "l2=0.00358 f=-0.163 shape=(1, 9000, 1)
logits [[ 1.927577  -1.5741788  1.9263043 -2.9300501]]
Iteration 900 of 1000: loss=0.00357 " + "l1=0" + "l2=0.00357 f=-0.163 shape=(1, 9000, 1)
logits [[ 1.9246199 -1.5736179  1.9265598 -2.9290786]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0148 " + "l1=0.0148" + "l2=0 f=-0.156 shape=(1, 9000, 1)
logits [[ 2.1061811 -1.525707   1.8372148 -3.0429635]]
Iteration 100 of 1000: loss=0.00984 " + "l1=0.00733" + "l2=0.00251 f=-0.159 shape=(1, 9000, 1)
logits [[ 2.0221064 -1.5572804  1.888775  -2.9885976]]
Iteration 200 of 1000: loss=0.008 " + "l1=0.00463" + "l2=0.00338 f=-0.159 shape=(1, 9000, 1)
logits [[ 1.990293  -1.5674871  1.9061916 -2.9654884]]
Iteration 300 of 1000: loss=0.00655 " + "l1=0.00229" + "l2=0.00427 f=-0.16 shape=(1, 9000, 1)
logits [[ 1.9607915 -1.5746657  1.91923   -2.9450715]]
Iteration 400 of 1000: loss=0.00543 " + "l1=0.000428" + "l2=0.005 f=-0.161 shape=(1, 9000, 1)
logits [[ 1.935545  -1.5778689  1.9277611 -2.9287999]]
Iteration 500 of 1000: loss=0.00465 " + "l1=2.53e-05" + "l2=0.00463 f=-0.161 shape=(1, 9000, 1)
logits [[ 1.9291553 -1.5776618  1.9286954 -2.9258177]]
Iteration 600 of 1000: loss=0.00428 " + "l1=5.67e-05" + "l2=0.00423 f=-0.162 shape=(1, 9000, 1)
logits [[ 1.9292504 -1.5771366  1.9282197 -2.9275362]]
Iteration 700 of 1000: loss=0.00413 " + "l1=3.42e-05" + "l2=0.0041 f=-0.162 shape=(1, 9000, 1)
logits [[ 1.9285797 -1.5765404  1.9279587 -2.9286535]]
Iteration 800 of 1000: loss=0.00371 " + "l1=1.86e-05" + "l2=0.00369 f=-0.162 shape=(1, 9000, 1)
logits [[ 1.9276167 -1.5754441  1.927278  -2.9293392]]
Iteration 900 of 1000: loss=0.00344 " + "l1=0" + "l2=0.00344 f=-0.163 shape=(1, 9000, 1)
logits [[ 1.926439  -1.5743924  1.9267752 -2.9294043]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00874 " + "l1=0.00874" + "l2=0 f=-0.156 shape=(1, 9000, 1)
logits [[ 2.1061811 -1.525707   1.8372148 -3.0429635]]
Iteration 100 of 1000: loss=0.00696 " + "l1=0.00603" + "l2=0.000922 f=-0.157 shape=(1, 9000, 1)
logits [[ 2.055889  -1.5466285  1.8702246 -3.008092 ]]
Iteration 200 of 1000: loss=0.00634 " + "l1=0.00517" + "l2=0.00117 f=-0.157 shape=(1, 9000, 1)
logits [[ 2.0413177 -1.5545496  1.8823543 -2.9970498]]
Iteration 300 of 1000: loss=0.00584 " + "l1=0.00432" + "l2=0.00152 f=-0.158 shape=(1, 9000, 1)
logits [[ 2.024794  -1.5607505  1.8918325 -2.986658 ]]
Iteration 400 of 1000: loss=0.00541 " + "l1=0.00359" + "l2=0.00182 f=-0.158 shape=(1, 9000, 1)
logits [[ 2.0100088 -1.56571    1.8995165 -2.9765005]]
Iteration 500 of 1000: loss=0.00511 " + "l1=0.00296" + "l2=0.00214 f=-0.159 shape=(1, 9000, 1)
logits [[ 1.9975202 -1.5698094  1.9063461 -2.9687293]]
Iteration 600 of 1000: loss=0.00483 " + "l1=0.00241" + "l2=0.00242 f=-0.159 shape=(1, 9000, 1)
logits [[ 1.9855974 -1.5727693  1.9115878 -2.9615037]]
Iteration 700 of 1000: loss=0.00455 " + "l1=0.00192" + "l2=0.00264 f=-0.16 shape=(1, 9000, 1)
logits [[ 1.9753599 -1.5751085  1.9163282 -2.9555273]]
Iteration 800 of 1000: loss=0.00435 " + "l1=0.0015" + "l2=0.00285 f=-0.16 shape=(1, 9000, 1)
logits [[ 1.9657043 -1.5759797  1.9195148 -2.950118 ]]
Iteration 900 of 1000: loss=0.00411 " + "l1=0.00109" + "l2=0.00302 f=-0.161 shape=(1, 9000, 1)
logits [[ 1.9556803 -1.5763756  1.922092  -2.944526 ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0118 " + "l1=0.0118" + "l2=0 f=-0.156 shape=(1, 9000, 1)
logits [[ 2.1061811 -1.525707   1.8372148 -3.0429635]]
Iteration 100 of 1000: loss=0.00859 " + "l1=0.00692" + "l2=0.00166 f=-0.158 shape=(1, 9000, 1)
logits [[ 2.0380762 -1.5524056  1.8798516 -2.9979262]]
Iteration 200 of 1000: loss=0.00742 " + "l1=0.00526" + "l2=0.00216 f=-0.158 shape=(1, 9000, 1)
logits [[ 2.0156486 -1.5622594  1.8953527 -2.9824646]]
Iteration 300 of 1000: loss=0.00651 " + "l1=0.00375" + "l2=0.00276 f=-0.159 shape=(1, 9000, 1)
logits [[ 1.9921913 -1.5689566  1.9064617 -2.9657207]]
Iteration 400 of 1000: loss=0.00576 " + "l1=0.00247" + "l2=0.00328 f=-0.16 shape=(1, 9000, 1)
logits [[ 1.9721682 -1.5742085  1.915668  -2.9523535]]
Iteration 500 of 1000: loss=0.00516 " + "l1=0.00142" + "l2=0.00374 f=-0.16 shape=(1, 9000, 1)
logits [[ 1.9542971 -1.5763371  1.9218733 -2.9417608]]
Iteration 600 of 1000: loss=0.00466 " + "l1=0.000478" + "l2=0.00419 f=-0.161 shape=(1, 9000, 1)
logits [[ 1.9378302 -1.5779448  1.9268986 -2.9326594]]
Iteration 700 of 1000: loss=0.0041 " + "l1=3.47e-05" + "l2=0.00407 f=-0.162 shape=(1, 9000, 1)
logits [[ 1.9295169 -1.5780668  1.9287236 -2.92812  ]]
Iteration 800 of 1000: loss=0.00392 " + "l1=3.85e-05" + "l2=0.00388 f=-0.162 shape=(1, 9000, 1)
logits [[ 1.928645  -1.5767729  1.9277645 -2.9288514]]
Iteration 900 of 1000: loss=0.00361 " + "l1=3.53e-05" + "l2=0.00358 f=-0.163 shape=(1, 9000, 1)
logits [[ 1.9279032 -1.5756923  1.927096  -2.9294922]]
--- 301.61797165870667 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0515 " + "l1=0.0515" + "l2=0 f=-0.156 shape=(1, 9000, 1)
logits [[ 2.1061811 -1.525707   1.8372148 -3.0429635]]
Iteration 100 of 1000: loss=0.0506 " + "l1=0.0501" + "l2=0.000447 f=-0.157 shape=(1, 9000, 1)
logits [[ 2.0418577 -1.4975109  1.7993819 -2.971549 ]]
Iteration 200 of 1000: loss=0.0503 " + "l1=0.0497" + "l2=0.000528 f=-0.158 shape=(1, 9000, 1)
logits [[ 2.0224836 -1.4860902  1.7844875 -2.9509802]]
Iteration 300 of 1000: loss=0.05 " + "l1=0.0493" + "l2=0.000698 f=-0.158 shape=(1, 9000, 1)
logits [[ 2.0012739 -1.4755546  1.7699566 -2.9286892]]
Iteration 400 of 1000: loss=0.0498 " + "l1=0.0489" + "l2=0.000883 f=-0.159 shape=(1, 9000, 1)
logits [[ 1.98263   -1.4661487  1.7575085 -2.9093797]]
Iteration 500 of 1000: loss=0.0496 " + "l1=0.0486" + "l2=0.00105 f=-0.159 shape=(1, 9000, 1)
logits [[ 1.9652787 -1.4568992  1.7455391 -2.8914437]]
Iteration 600 of 1000: loss=0.0495 " + "l1=0.0483" + "l2=0.00121 f=-0.16 shape=(1, 9000, 1)
logits [[ 1.9512585 -1.4478945  1.7345406 -2.877153 ]]
Iteration 700 of 1000: loss=0.0494 " + "l1=0.048" + "l2=0.00135 f=-0.16 shape=(1, 9000, 1)
logits [[ 1.9391427 -1.4406743  1.7254337 -2.8650434]]
Iteration 800 of 1000: loss=0.0494 " + "l1=0.0478" + "l2=0.0016 f=-0.161 shape=(1, 9000, 1)
logits [[ 1.9281925 -1.4344074  1.7176056 -2.8539784]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.515 " + "l1=0.515" + "l2=0 f=-0.156 shape=(1, 9000, 1)
logits [[ 2.1061811 -1.525707   1.8372148 -3.0429635]]
Iteration 100 of 1000: loss=0.444 " + "l1=0.414" + "l2=0.0302 f=-0.163 shape=(1, 9000, 1)
logits [[ 1.6291918 -1.3371158  1.5662    -2.5109632]]
Iteration 200 of 1000: loss=0.412 " + "l1=0.37" + "l2=0.0423 f=-0.168 shape=(1, 9000, 1)
logits [[ 1.4244463 -1.2431802  1.4237245 -2.2757595]]
Iteration 300 of 1000: loss=0.392 " + "l1=0.344" + "l2=0.0486 f=-0.169 shape=(1, 9000, 1)
logits [[ 1.3047305 -1.1559755  1.3060081 -2.1320014]]
Iteration 400 of 1000: loss=0.378 " + "l1=0.325" + "l2=0.0535 f=-0.171 shape=(1, 9000, 1)
logits [[ 1.216112  -1.0840682  1.2145808 -2.0300643]]
Iteration 500 of 1000: loss=0.367 " + "l1=0.308" + "l2=0.0583 f=-0.172 shape=(1, 9000, 1)
logits [[ 1.1382936 -1.0222967  1.1392965 -1.9442899]]
Iteration 600 of 1000: loss=0.357 " + "l1=0.295" + "l2=0.0624 f=-0.173 shape=(1, 9000, 1)
logits [[ 1.0756661 -0.9747236  1.0777045 -1.8714119]]
Iteration 700 of 1000: loss=0.35 " + "l1=0.284" + "l2=0.0656 f=-0.172 shape=(1, 9000, 1)
logits [[ 1.0337353  -0.94888103  1.035213   -1.8075533 ]]
Iteration 800 of 1000: loss=0.343 " + "l1=0.275" + "l2=0.068 f=-0.172 shape=(1, 9000, 1)
logits [[ 0.99429214 -0.92338943  0.9970884  -1.7554579 ]]
Iteration 900 of 1000: loss=0.337 " + "l1=0.266" + "l2=0.071 f=-0.172 shape=(1, 9000, 1)
logits [[ 0.95439255 -0.900989    0.96153367 -1.7029084 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.15 " + "l1=5.15" + "l2=0 f=-0.156 shape=(1, 9000, 1)
logits [[ 2.1061811 -1.525707   1.8372148 -3.0429635]]
Iteration 100 of 1000: loss=1.97 " + "l1=0.978" + "l2=0.987 f=-0.195 shape=(1, 9000, 1)
logits [[-0.05622911 -0.45291507  0.35466707 -0.6238156 ]]
Iteration 200 of 1000: loss=0.957 " + "l1=0.00986" + "l2=0.947 f=-0.196 shape=(1, 9000, 1)
logits [[-0.46737382 -0.3780965   0.03529295  0.02543407]]
Iteration 300 of 1000: loss=0.745 " + "l1=0.00548" + "l2=0.74 f=-0.187 shape=(1, 9000, 1)
logits [[-0.44572148 -0.43027312  0.06641757  0.06093398]]
Iteration 400 of 1000: loss=0.658 " + "l1=0" + "l2=0.658 f=-0.181 shape=(1, 9000, 1)
logits [[-0.43996647 -0.45266843  0.07681621  0.09226231]]
Iteration 500 of 1000: loss=0.6 " + "l1=0.00906" + "l2=0.591 f=-0.176 shape=(1, 9000, 1)
logits [[-0.4254799  -0.4644088   0.0982712   0.08921587]]
Iteration 600 of 1000: loss=0.556 " + "l1=0" + "l2=0.556 f=-0.17 shape=(1, 9000, 1)
logits [[-0.42286143 -0.47256178  0.10587993  0.11112723]]
Iteration 700 of 1000: loss=0.527 " + "l1=0" + "l2=0.527 f=-0.166 shape=(1, 9000, 1)
logits [[-0.41724572 -0.47342154  0.11017174  0.11717841]]
Iteration 800 of 1000: loss=0.496 " + "l1=0" + "l2=0.496 f=-0.162 shape=(1, 9000, 1)
logits [[-0.4080316  -0.47284967  0.11553679  0.11901976]]
Iteration 900 of 1000: loss=0.474 " + "l1=0.00605" + "l2=0.468 f=-0.156 shape=(1, 9000, 1)
logits [[-0.39592752 -0.46708766  0.12227617  0.11622211]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.83 " + "l1=2.83" + "l2=0 f=-0.156 shape=(1, 9000, 1)
logits [[ 2.1061811 -1.525707   1.8372148 -3.0429635]]
Iteration 100 of 1000: loss=1.55 " + "l1=1.15" + "l2=0.4 f=-0.168 shape=(1, 9000, 1)
logits [[ 0.6374606 -0.7419184  0.7645828 -1.3317736]]
Iteration 200 of 1000: loss=1.1 " + "l1=0.539" + "l2=0.564 f=-0.197 shape=(1, 9000, 1)
logits [[-0.07737812 -0.47926512  0.3748636  -0.6056959 ]]
Iteration 300 of 1000: loss=0.784 " + "l1=0.0983" + "l2=0.686 f=-0.194 shape=(1, 9000, 1)
logits [[-0.42063102 -0.4129532   0.11755927 -0.06113825]]
Iteration 400 of 1000: loss=0.622 " + "l1=0.00764" + "l2=0.614 f=-0.187 shape=(1, 9000, 1)
logits [[-0.4571586  -0.4382341   0.08137149  0.0674722 ]]
Iteration 500 of 1000: loss=0.551 " + "l1=0.00607" + "l2=0.545 f=-0.181 shape=(1, 9000, 1)
logits [[-0.45512456 -0.4403573   0.09120044  0.08015663]]
Iteration 600 of 1000: loss=0.508 " + "l1=0.00699" + "l2=0.501 f=-0.176 shape=(1, 9000, 1)
logits [[-0.4443191  -0.42708817  0.09082229  0.07811431]]
Iteration 700 of 1000: loss=0.471 " + "l1=0.00597" + "l2=0.465 f=-0.169 shape=(1, 9000, 1)
logits [[-0.42845187 -0.41163334  0.08754217  0.07669403]]
Iteration 800 of 1000: loss=0.435 " + "l1=0" + "l2=0.435 f=-0.162 shape=(1, 9000, 1)
logits [[-0.4122673  -0.39965257  0.08099811  0.08462899]]
Iteration 900 of 1000: loss=0.407 " + "l1=0" + "l2=0.407 f=-0.156 shape=(1, 9000, 1)
logits [[-0.38826352 -0.3880838   0.07518187  0.0761934 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.67 " + "l1=1.67" + "l2=0 f=-0.156 shape=(1, 9000, 1)
logits [[ 2.1061811 -1.525707   1.8372148 -3.0429635]]
Iteration 100 of 1000: loss=1.12 " + "l1=0.946" + "l2=0.176 f=-0.156 shape=(1, 9000, 1)
logits [[ 1.0947027 -1.0145788  1.1042715 -1.8075967]]
Iteration 200 of 1000: loss=0.932 " + "l1=0.685" + "l2=0.247 f=-0.184 shape=(1, 9000, 1)
logits [[ 0.6263419  -0.7359231   0.74144334 -1.3673687 ]]
Iteration 300 of 1000: loss=0.809 " + "l1=0.511" + "l2=0.299 f=-0.193 shape=(1, 9000, 1)
logits [[ 0.2956551  -0.6502141   0.5768427  -0.99534374]]
Iteration 400 of 1000: loss=0.728 " + "l1=0.385" + "l2=0.344 f=-0.184 shape=(1, 9000, 1)
logits [[ 0.1136034  -0.6187096   0.4770625  -0.70617336]]
Iteration 500 of 1000: loss=0.652 " + "l1=0.269" + "l2=0.383 f=-0.173 shape=(1, 9000, 1)
logits [[-0.05455676 -0.57065094  0.38046518 -0.44673198]]
Iteration 600 of 1000: loss=0.584 " + "l1=0.152" + "l2=0.432 f=-0.176 shape=(1, 9000, 1)
logits [[-0.24889323 -0.49281037  0.25177333 -0.215981  ]]
Iteration 700 of 1000: loss=0.52 " + "l1=0.0685" + "l2=0.452 f=-0.17 shape=(1, 9000, 1)
logits [[-0.3398324  -0.45824492  0.16383398 -0.04681756]]
Iteration 800 of 1000: loss=0.458 " + "l1=0.0074" + "l2=0.45 f=-0.155 shape=(1, 9000, 1)
logits [[-0.36138567 -0.44428504  0.10337682  0.08060123]]
Iteration 900 of 1000: loss=0.405 " + "l1=0.00178" + "l2=0.404 f=-0.146 shape=(1, 9000, 1)
logits [[-0.34326094 -0.422875    0.09331153  0.08784451]]
--- 314.34154295921326 seconds ---
Adv result:3
Loading model
Loading ground truth file
Attack diff is running...
Loading record A02104
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00489 " + "l1=0.00489" + "l2=0 f=-0.791 shape=(1, 9000, 1)
logits [[ 1.4706612   0.98143893  1.1350927  -6.7500005 ]]
Iteration 100 of 1000: loss=0.00348 " + "l1=0.00266" + "l2=0.000819 f=-0.801 shape=(1, 9000, 1)
logits [[ 1.3336179  1.0679843  1.1261699 -6.731083 ]]
Iteration 200 of 1000: loss=0.00312 " + "l1=0.00212" + "l2=0.001 f=-0.803 shape=(1, 9000, 1)
logits [[ 1.3001412  1.0883487  1.1228055 -6.7221885]]
Iteration 300 of 1000: loss=0.00284 " + "l1=0.0016" + "l2=0.00125 f=-0.804 shape=(1, 9000, 1)
logits [[ 1.2679328  1.1083362  1.1190108 -6.712975 ]]
Iteration 400 of 1000: loss=0.00265 " + "l1=0.00114" + "l2=0.00151 f=-0.806 shape=(1, 9000, 1)
logits [[ 1.2400461  1.1262871  1.115259  -6.7048507]]
Iteration 500 of 1000: loss=0.00249 " + "l1=0.000756" + "l2=0.00174 f=-0.807 shape=(1, 9000, 1)
logits [[ 1.2172894  1.1417086  1.1118336 -6.698405 ]]
Iteration 600 of 1000: loss=0.00239 " + "l1=0.000425" + "l2=0.00197 f=-0.808 shape=(1, 9000, 1)
logits [[ 1.197823   1.1552968  1.1087346 -6.692915 ]]
Iteration 700 of 1000: loss=0.00228 " + "l1=0.000145" + "l2=0.00213 f=-0.808 shape=(1, 9000, 1)
logits [[ 1.1817905  1.1673394  1.1057032 -6.6884885]]
Iteration 800 of 1000: loss=0.00219 " + "l1=2.89e-05" + "l2=0.00216 f=-0.808 shape=(1, 9000, 1)
logits [[ 1.1755588  1.172673   1.1035646 -6.685752 ]]
Iteration 900 of 1000: loss=0.00217 " + "l1=1.53e-05" + "l2=0.00216 f=-0.808 shape=(1, 9000, 1)
logits [[ 1.1757472  1.1742146  1.1022452 -6.684817 ]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.00245 " + "l1=0.00245" + "l2=0 f=-0.791 shape=(1, 9000, 1)
logits [[ 1.4706612   0.98143893  1.1350927  -6.7500005 ]]
Iteration 100 of 1000: loss=0.00207 " + "l1=0.00178" + "l2=0.000293 f=-0.797 shape=(1, 9000, 1)
logits [[ 1.3889711  1.0330887  1.1299807 -6.739205 ]]
Iteration 200 of 1000: loss=0.00199 " + "l1=0.0017" + "l2=0.000281 f=-0.797 shape=(1, 9000, 1)
logits [[ 1.3793434  1.03837    1.1286122 -6.735012 ]]
Iteration 300 of 1000: loss=0.00194 " + "l1=0.0016" + "l2=0.000344 f=-0.798 shape=(1, 9000, 1)
logits [[ 1.3663737  1.0461408  1.1270143 -6.7310233]]
Iteration 400 of 1000: loss=0.00192 " + "l1=0.0015" + "l2=0.000417 f=-0.799 shape=(1, 9000, 1)
logits [[ 1.3545144  1.0536819  1.1254137 -6.7276473]]
Iteration 500 of 1000: loss=0.00191 " + "l1=0.00142" + "l2=0.000494 f=-0.799 shape=(1, 9000, 1)
logits [[ 1.3440585  1.0607821  1.1238606 -6.724956 ]]
Iteration 600 of 1000: loss=0.00198 " + "l1=0.00134" + "l2=0.000639 f=-0.799 shape=(1, 9000, 1)
logits [[ 1.3351016  1.0673018  1.1224394 -6.722747 ]]
const [0.0075]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.00367 " + "l1=0.00367" + "l2=0 f=-0.791 shape=(1, 9000, 1)
logits [[ 1.4706612   0.98143893  1.1350927  -6.7500005 ]]
Iteration 100 of 1000: loss=0.00285 " + "l1=0.00232" + "l2=0.000525 f=-0.799 shape=(1, 9000, 1)
logits [[ 1.3605459  1.0509052  1.1280358 -6.7350755]]
Iteration 200 of 1000: loss=0.00266 " + "l1=0.00208" + "l2=0.00058 f=-0.8 shape=(1, 9000, 1)
logits [[ 1.3399351  1.0630609  1.125721  -6.7286563]]
Iteration 300 of 1000: loss=0.00255 " + "l1=0.00181" + "l2=0.000737 f=-0.801 shape=(1, 9000, 1)
logits [[ 1.3179029  1.0766027  1.1231577 -6.7223887]]
Iteration 400 of 1000: loss=0.00244 " + "l1=0.00156" + "l2=0.000875 f=-0.802 shape=(1, 9000, 1)
logits [[ 1.2976916  1.0895329  1.1205456 -6.7166305]]
Iteration 500 of 1000: loss=0.0024 " + "l1=0.00135" + "l2=0.00105 f=-0.803 shape=(1, 9000, 1)
logits [[ 1.2812067  1.1007401  1.118144  -6.7119775]]
Iteration 600 of 1000: loss=0.00231 " + "l1=0.00117" + "l2=0.00114 f=-0.804 shape=(1, 9000, 1)
logits [[ 1.2671291  1.1106505  1.1158568 -6.708072 ]]
Iteration 700 of 1000: loss=0.0023 " + "l1=0.00101" + "l2=0.00128 f=-0.804 shape=(1, 9000, 1)
logits [[ 1.2549827  1.1197582  1.1135277 -6.704831 ]]
Iteration 800 of 1000: loss=0.00229 " + "l1=0.000877" + "l2=0.00141 f=-0.805 shape=(1, 9000, 1)
logits [[ 1.2446259  1.1276964  1.1115655 -6.7020984]]
Iteration 900 of 1000: loss=0.0023 " + "l1=0.000754" + "l2=0.00154 f=-0.805 shape=(1, 9000, 1)
logits [[ 1.2354412  1.1349081  1.109733  -6.6995397]]
const [0.00875]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00428 " + "l1=0.00428" + "l2=0 f=-0.791 shape=(1, 9000, 1)
logits [[ 1.4706612   0.98143893  1.1350927  -6.7500005 ]]
Iteration 100 of 1000: loss=0.00318 " + "l1=0.00251" + "l2=0.000666 f=-0.8 shape=(1, 9000, 1)
logits [[ 1.3468845  1.0596312  1.1270293 -6.7328715]]
Iteration 200 of 1000: loss=0.00292 " + "l1=0.00214" + "l2=0.000777 f=-0.801 shape=(1, 9000, 1)
logits [[ 1.320239   1.0756093  1.1243215 -6.725491 ]]
Iteration 300 of 1000: loss=0.00272 " + "l1=0.00175" + "l2=0.000962 f=-0.803 shape=(1, 9000, 1)
logits [[ 1.2928733  1.0924464  1.1211762 -6.7177143]]
Iteration 400 of 1000: loss=0.00256 " + "l1=0.00141" + "l2=0.00115 f=-0.804 shape=(1, 9000, 1)
logits [[ 1.2692797  1.1075743  1.1180652 -6.710868 ]]
Iteration 500 of 1000: loss=0.00247 " + "l1=0.00112" + "l2=0.00135 f=-0.805 shape=(1, 9000, 1)
logits [[ 1.249214   1.1210203  1.1151316 -6.705213 ]]
Iteration 600 of 1000: loss=0.00248 " + "l1=0.000875" + "l2=0.0016 f=-0.806 shape=(1, 9000, 1)
logits [[ 1.2327262  1.1327664  1.112378  -6.700805 ]]
const [0.009375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00459 " + "l1=0.00459" + "l2=0 f=-0.791 shape=(1, 9000, 1)
logits [[ 1.4706612   0.98143893  1.1350927  -6.7500005 ]]
Iteration 100 of 1000: loss=0.00333 " + "l1=0.00259" + "l2=0.000739 f=-0.8 shape=(1, 9000, 1)
logits [[ 1.3402926  1.0638317  1.1266421 -6.7321043]]
Iteration 200 of 1000: loss=0.00303 " + "l1=0.00214" + "l2=0.000886 f=-0.802 shape=(1, 9000, 1)
logits [[ 1.3102537  1.0820224  1.123575  -6.7239766]]
Iteration 300 of 1000: loss=0.00278 " + "l1=0.00169" + "l2=0.00109 f=-0.804 shape=(1, 9000, 1)
logits [[ 1.2806369  1.1003407  1.1200908 -6.715504 ]]
Iteration 400 of 1000: loss=0.00261 " + "l1=0.00129" + "l2=0.00132 f=-0.805 shape=(1, 9000, 1)
logits [[ 1.2548441  1.1168354  1.1166964 -6.707928 ]]
Iteration 500 of 1000: loss=0.00251 " + "l1=0.000952" + "l2=0.00156 f=-0.806 shape=(1, 9000, 1)
logits [[ 1.2331523  1.1316304  1.1134005 -6.701904 ]]
Iteration 600 of 1000: loss=0.00242 " + "l1=0.000672" + "l2=0.00174 f=-0.807 shape=(1, 9000, 1)
logits [[ 1.215561   1.1439284  1.1105586 -6.697019 ]]
Iteration 700 of 1000: loss=0.00232 " + "l1=0.000421" + "l2=0.0019 f=-0.807 shape=(1, 9000, 1)
logits [[ 1.2001345  1.1552001  1.107777  -6.6926785]]
Iteration 800 of 1000: loss=0.00224 " + "l1=0.000195" + "l2=0.00205 f=-0.808 shape=(1, 9000, 1)
logits [[ 1.186468   1.1656666  1.1051422 -6.6890593]]
Iteration 900 of 1000: loss=0.00217 " + "l1=2.71e-05" + "l2=0.00215 f=-0.808 shape=(1, 9000, 1)
logits [[ 1.1762168  1.1733272  1.1030278 -6.6860046]]
--- 239.83533310890198 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00336 " + "l1=0.00336" + "l2=0 f=-0.791 shape=(1, 9000, 1)
logits [[ 1.4706612   0.98143893  1.1350927  -6.7500005 ]]
Iteration 100 of 1000: loss=0.00278 " + "l1=0.00239" + "l2=0.000391 f=-0.798 shape=(1, 9000, 1)
logits [[ 1.3774114  1.0301456  1.1381352 -6.738649 ]]
Iteration 200 of 1000: loss=0.00265 " + "l1=0.00224" + "l2=0.000414 f=-0.799 shape=(1, 9000, 1)
logits [[ 1.3626646  1.0364202  1.1386822 -6.734325 ]]
Iteration 300 of 1000: loss=0.00258 " + "l1=0.00206" + "l2=0.000513 f=-0.8 shape=(1, 9000, 1)
logits [[ 1.34569    1.0439744  1.139233  -6.7298203]]
Iteration 400 of 1000: loss=0.00252 " + "l1=0.00191" + "l2=0.000618 f=-0.801 shape=(1, 9000, 1)
logits [[ 1.3303169  1.0508124  1.1397268 -6.72566  ]]
Iteration 500 of 1000: loss=0.00253 " + "l1=0.00177" + "l2=0.000758 f=-0.802 shape=(1, 9000, 1)
logits [[ 1.317572   1.0564718  1.1401422 -6.722109 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0336 " + "l1=0.0336" + "l2=0 f=-0.791 shape=(1, 9000, 1)
logits [[ 1.4706612   0.98143893  1.1350927  -6.7500005 ]]
Iteration 100 of 1000: loss=0.00467 " + "l1=0.00016" + "l2=0.00451 f=-0.816 shape=(1, 9000, 1)
logits [[ 1.151154   1.1439419  1.1495554 -6.7102237]]
Iteration 200 of 1000: loss=0.00362 " + "l1=0" + "l2=0.00362 f=-0.816 shape=(1, 9000, 1)
logits [[ 1.1443611  1.1426963  1.1486114 -6.698635 ]]
Iteration 300 of 1000: loss=0.00334 " + "l1=0" + "l2=0.00334 f=-0.815 shape=(1, 9000, 1)
logits [[ 1.1374196  1.1434096  1.1465703 -6.6888056]]
Iteration 400 of 1000: loss=0.00306 " + "l1=0" + "l2=0.00306 f=-0.815 shape=(1, 9000, 1)
logits [[ 1.139927   1.1408867  1.1452355 -6.6850214]]
Iteration 500 of 1000: loss=0.00307 " + "l1=0" + "l2=0.00307 f=-0.815 shape=(1, 9000, 1)
logits [[ 1.13889    1.1392078  1.1458718 -6.68271  ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0185 " + "l1=0.0185" + "l2=0 f=-0.791 shape=(1, 9000, 1)
logits [[ 1.4706612   0.98143893  1.1350927  -6.7500005 ]]
Iteration 100 of 1000: loss=0.00485 " + "l1=0" + "l2=0.00485 f=-0.817 shape=(1, 9000, 1)
logits [[ 1.1478964  1.1468402  1.1480823 -6.7093644]]
Iteration 200 of 1000: loss=0.00362 " + "l1=0" + "l2=0.00362 f=-0.816 shape=(1, 9000, 1)
logits [[ 1.1442775  1.1453855  1.1469005 -6.6993833]]
Iteration 300 of 1000: loss=0.00318 " + "l1=3.48e-05" + "l2=0.00314 f=-0.815 shape=(1, 9000, 1)
logits [[ 1.1457587  1.1414101  1.1451252 -6.6909027]]
Iteration 400 of 1000: loss=0.00297 " + "l1=0" + "l2=0.00297 f=-0.814 shape=(1, 9000, 1)
logits [[ 1.1439906  1.1402704  1.1443686 -6.685973 ]]
Iteration 500 of 1000: loss=0.00297 " + "l1=0" + "l2=0.00297 f=-0.814 shape=(1, 9000, 1)
logits [[ 1.1406615  1.1407282  1.1441634 -6.682904 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0109 " + "l1=0.0109" + "l2=0 f=-0.791 shape=(1, 9000, 1)
logits [[ 1.4706612   0.98143893  1.1350927  -6.7500005 ]]
Iteration 100 of 1000: loss=0.00562 " + "l1=0.00296" + "l2=0.00265 f=-0.81 shape=(1, 9000, 1)
logits [[ 1.2346439  1.1039153  1.1434389 -6.7200704]]
Iteration 200 of 1000: loss=0.0039 " + "l1=0.000159" + "l2=0.00374 f=-0.815 shape=(1, 9000, 1)
logits [[ 1.1517496  1.1434036  1.146846  -6.703821 ]]
Iteration 300 of 1000: loss=0.00324 " + "l1=0" + "l2=0.00324 f=-0.815 shape=(1, 9000, 1)
logits [[ 1.1451441  1.1434815  1.1452823 -6.6930785]]
Iteration 400 of 1000: loss=0.00304 " + "l1=2.88e-05" + "l2=0.00301 f=-0.814 shape=(1, 9000, 1)
logits [[ 1.1451874  1.1410061  1.1443015 -6.687323 ]]
Iteration 500 of 1000: loss=0.0029 " + "l1=0" + "l2=0.0029 f=-0.814 shape=(1, 9000, 1)
logits [[ 1.1438125  1.1401232  1.1440126 -6.6842275]]
Iteration 600 of 1000: loss=0.0028 " + "l1=0" + "l2=0.0028 f=-0.814 shape=(1, 9000, 1)
logits [[ 1.1427739  1.139501   1.1440346 -6.6822853]]
Iteration 700 of 1000: loss=0.00272 " + "l1=3.99e-05" + "l2=0.00268 f=-0.814 shape=(1, 9000, 1)
logits [[ 1.145493   1.1368793  1.1442668 -6.681232 ]]
Iteration 800 of 1000: loss=0.00284 " + "l1=3.43e-05" + "l2=0.0028 f=-0.813 shape=(1, 9000, 1)
logits [[ 1.1457893  1.135411   1.1447335 -6.679851 ]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00713 " + "l1=0.00713" + "l2=0 f=-0.791 shape=(1, 9000, 1)
logits [[ 1.4706612   0.98143893  1.1350927  -6.7500005 ]]
Iteration 100 of 1000: loss=0.00473 " + "l1=0.00344" + "l2=0.00129 f=-0.804 shape=(1, 9000, 1)
logits [[ 1.3025599  1.0689881  1.140556  -6.7285867]]
Iteration 200 of 1000: loss=0.00405 " + "l1=0.00234" + "l2=0.00171 f=-0.808 shape=(1, 9000, 1)
logits [[ 1.2526298  1.0928382  1.1425437 -6.7182903]]
Iteration 300 of 1000: loss=0.00359 " + "l1=0.00138" + "l2=0.00221 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.2084554  1.1130848  1.1435014 -6.7072105]]
Iteration 400 of 1000: loss=0.00327 " + "l1=0.000612" + "l2=0.00265 f=-0.813 shape=(1, 9000, 1)
logits [[ 1.1726899  1.1289991  1.1438795 -6.696443 ]]
Iteration 500 of 1000: loss=0.00302 " + "l1=7.29e-05" + "l2=0.00294 f=-0.814 shape=(1, 9000, 1)
logits [[ 1.1477065  1.1396692  1.1442772 -6.688315 ]]
Iteration 600 of 1000: loss=0.00285 " + "l1=3.06e-05" + "l2=0.00282 f=-0.814 shape=(1, 9000, 1)
logits [[ 1.1454133  1.1390167  1.1439714 -6.684416 ]]
Iteration 700 of 1000: loss=0.00283 " + "l1=1.65e-05" + "l2=0.00281 f=-0.814 shape=(1, 9000, 1)
logits [[ 1.1448061  1.13795    1.1440316 -6.682243 ]]
Iteration 800 of 1000: loss=0.00273 " + "l1=2.5e-05" + "l2=0.0027 f=-0.814 shape=(1, 9000, 1)
logits [[ 1.1455746  1.1362315  1.1443963 -6.680802 ]]
Iteration 900 of 1000: loss=0.00274 " + "l1=5.05e-05" + "l2=0.00269 f=-0.813 shape=(1, 9000, 1)
logits [[ 1.1471876  1.1342138  1.1448116 -6.679732 ]]
--- 188.2008273601532 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0822 " + "l1=0.0822" + "l2=0 f=-0.791 shape=(1, 9000, 1)
logits [[ 1.4706612   0.98143893  1.1350927  -6.7500005 ]]
Iteration 100 of 1000: loss=0.0811 " + "l1=0.0805" + "l2=0.000593 f=-0.795 shape=(1, 9000, 1)
logits [[ 1.3597927  1.033595   1.122481  -6.6948714]]
Iteration 200 of 1000: loss=0.0809 " + "l1=0.0802" + "l2=0.000706 f=-0.796 shape=(1, 9000, 1)
logits [[ 1.3336675  1.0457995  1.1196098 -6.682599 ]]
Iteration 300 of 1000: loss=0.0807 " + "l1=0.0798" + "l2=0.000909 f=-0.797 shape=(1, 9000, 1)
logits [[ 1.3063319  1.058418   1.1164076 -6.6695127]]
Iteration 400 of 1000: loss=0.0805 " + "l1=0.0794" + "l2=0.00114 f=-0.798 shape=(1, 9000, 1)
logits [[ 1.2825317  1.0695348  1.1135439 -6.6576066]]
Iteration 500 of 1000: loss=0.0804 " + "l1=0.0791" + "l2=0.00134 f=-0.799 shape=(1, 9000, 1)
logits [[ 1.2625847  1.0789295  1.1110035 -6.647418 ]]
Iteration 600 of 1000: loss=0.0804 " + "l1=0.0789" + "l2=0.00152 f=-0.799 shape=(1, 9000, 1)
logits [[ 1.2465483  1.0865526  1.1088715 -6.6389832]]
Iteration 700 of 1000: loss=0.0803 " + "l1=0.0786" + "l2=0.00165 f=-0.8 shape=(1, 9000, 1)
logits [[ 1.2330105  1.0930963  1.1068882 -6.63173  ]]
Iteration 800 of 1000: loss=0.0803 " + "l1=0.0785" + "l2=0.00182 f=-0.8 shape=(1, 9000, 1)
logits [[ 1.221108   1.0988686  1.1050321 -6.6250663]]
Iteration 900 of 1000: loss=0.0802 " + "l1=0.0783" + "l2=0.00195 f=-0.8 shape=(1, 9000, 1)
logits [[ 1.2101474  1.1040953  1.1031941 -6.618717 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.822 " + "l1=0.822" + "l2=0 f=-0.791 shape=(1, 9000, 1)
logits [[ 1.4706612   0.98143893  1.1350927  -6.7500005 ]]
Iteration 100 of 1000: loss=0.765 " + "l1=0.75" + "l2=0.0151 f=-0.791 shape=(1, 9000, 1)
logits [[ 1.0830362  1.0866708  1.0777721 -6.4096107]]
Iteration 200 of 1000: loss=0.752 " + "l1=0.731" + "l2=0.0217 f=-0.78 shape=(1, 9000, 1)
logits [[ 1.047018   1.0468762  1.0473439 -6.259507 ]]
Iteration 300 of 1000: loss=0.745 " + "l1=0.718" + "l2=0.0269 f=-0.773 shape=(1, 9000, 1)
logits [[ 1.0246558  1.0200058  1.0218427 -6.1566715]]
Iteration 400 of 1000: loss=0.739 " + "l1=0.708" + "l2=0.0306 f=-0.769 shape=(1, 9000, 1)
logits [[ 0.99805856  1.0033284   1.0019794  -6.0799947 ]]
Iteration 500 of 1000: loss=0.733 " + "l1=0.699" + "l2=0.0343 f=-0.767 shape=(1, 9000, 1)
logits [[ 0.9732783  0.9842056  0.9829505 -6.0068355]]
Iteration 600 of 1000: loss=0.729 " + "l1=0.692" + "l2=0.0368 f=-0.764 shape=(1, 9000, 1)
logits [[ 0.9519216   0.97234523  0.9640275  -5.9460826 ]]
Iteration 700 of 1000: loss=0.724 " + "l1=0.685" + "l2=0.039 f=-0.762 shape=(1, 9000, 1)
logits [[ 0.9288949   0.95872205  0.95104265 -5.888508  ]]
Iteration 800 of 1000: loss=0.718 " + "l1=0.676" + "l2=0.0412 f=-0.759 shape=(1, 9000, 1)
logits [[ 0.92325085  0.9358388   0.9334359  -5.8276124 ]]
Iteration 900 of 1000: loss=0.712 " + "l1=0.669" + "l2=0.0431 f=-0.755 shape=(1, 9000, 1)
logits [[ 0.9109247   0.91716194  0.9196811  -5.769587  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.22 " + "l1=8.22" + "l2=0 f=-0.791 shape=(1, 9000, 1)
logits [[ 1.4706612   0.98143893  1.1350927  -6.7500005 ]]
Iteration 100 of 1000: loss=6 " + "l1=5.27" + "l2=0.735 f=-0.636 shape=(1, 9000, 1)
logits [[ 0.65365994  0.6931602   0.6849336  -4.575971  ]]
Iteration 200 of 1000: loss=5.35 " + "l1=4.25" + "l2=1.1 f=-0.565 shape=(1, 9000, 1)
logits [[ 0.3349442  0.5524497  0.5469741 -3.6927757]]
Iteration 300 of 1000: loss=4.69 " + "l1=3.28" + "l2=1.41 f=-0.512 shape=(1, 9000, 1)
logits [[-1.9742157e-03  4.0190896e-01  4.1693783e-01 -2.8650219e+00]]
Iteration 400 of 1000: loss=3.83 " + "l1=2.1" + "l2=1.73 f=-0.431 shape=(1, 9000, 1)
logits [[-0.37101495  0.244716    0.25036672 -1.8494098 ]]
Iteration 500 of 1000: loss=3.04 " + "l1=1.31" + "l2=1.73 f=-0.386 shape=(1, 9000, 1)
logits [[-0.5329664   0.09637592  0.09995222 -1.2076263 ]]
Iteration 600 of 1000: loss=2.4 " + "l1=0.642" + "l2=1.76 f=-0.347 shape=(1, 9000, 1)
logits [[-0.665341   -0.02979183 -0.02454737 -0.666894  ]]
Iteration 700 of 1000: loss=1.77 " + "l1=0.0011" + "l2=1.77 f=-0.308 shape=(1, 9000, 1)
logits [[-0.81533706 -0.15291697 -0.13180833 -0.1329042 ]]
Iteration 800 of 1000: loss=1.5 " + "l1=0" + "l2=1.5 f=-0.332 shape=(1, 9000, 1)
logits [[-0.874852   -0.17486595 -0.14654608 -0.13353908]]
Iteration 900 of 1000: loss=1.32 " + "l1=0.00307" + "l2=1.32 f=-0.345 shape=(1, 9000, 1)
logits [[-0.8904364  -0.16605426 -0.16044192 -0.16350985]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.52 " + "l1=4.52" + "l2=0 f=-0.791 shape=(1, 9000, 1)
logits [[ 1.4706612   0.98143893  1.1350927  -6.7500005 ]]
Iteration 100 of 1000: loss=3.66 " + "l1=3.37" + "l2=0.289 f=-0.697 shape=(1, 9000, 1)
logits [[ 0.8309488  0.8303254  0.8360172 -5.2847915]]
Iteration 200 of 1000: loss=3.4 " + "l1=2.94" + "l2=0.457 f=-0.656 shape=(1, 9000, 1)
logits [[ 0.6143181   0.7058713   0.70079213 -4.643082  ]]
Iteration 300 of 1000: loss=3.21 " + "l1=2.68" + "l2=0.533 f=-0.627 shape=(1, 9000, 1)
logits [[ 0.44641694  0.63938636  0.6366672  -4.2287207 ]]
Iteration 400 of 1000: loss=2.99 " + "l1=2.39" + "l2=0.596 f=-0.591 shape=(1, 9000, 1)
logits [[ 0.3191414  0.5572607  0.549035  -3.7907512]]
Iteration 500 of 1000: loss=2.69 " + "l1=1.99" + "l2=0.705 f=-0.533 shape=(1, 9000, 1)
logits [[ 0.08494312  0.46364114  0.4683298  -3.1481628 ]]
Iteration 600 of 1000: loss=2.38 " + "l1=1.56" + "l2=0.817 f=-0.499 shape=(1, 9000, 1)
logits [[-0.31362477  0.38137072  0.38862556 -2.4530919 ]]
Iteration 700 of 1000: loss=2.14 " + "l1=1.31" + "l2=0.836 f=-0.481 shape=(1, 9000, 1)
logits [[-0.46972468  0.30887833  0.30255166 -2.066645  ]]
Iteration 800 of 1000: loss=1.95 " + "l1=1.12" + "l2=0.831 f=-0.454 shape=(1, 9000, 1)
logits [[-0.5004415   0.23285882  0.24238239 -1.7902526 ]]
Iteration 900 of 1000: loss=1.79 " + "l1=0.959" + "l2=0.834 f=-0.437 shape=(1, 9000, 1)
logits [[-0.57508683  0.18886563  0.19106685 -1.551843  ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=6.37 " + "l1=6.37" + "l2=0 f=-0.791 shape=(1, 9000, 1)
logits [[ 1.4706612   0.98143893  1.1350927  -6.7500005 ]]
Iteration 100 of 1000: loss=4.88 " + "l1=4.37" + "l2=0.511 f=-0.663 shape=(1, 9000, 1)
logits [[ 0.7122706   0.7597488   0.75050324 -4.873451  ]]
Iteration 200 of 1000: loss=4.44 " + "l1=3.68" + "l2=0.753 f=-0.605 shape=(1, 9000, 1)
logits [[ 0.48041007  0.6156094   0.6173893  -4.1338625 ]]
Iteration 300 of 1000: loss=4.07 " + "l1=3.18" + "l2=0.896 f=-0.57 shape=(1, 9000, 1)
logits [[ 0.22937962  0.53304493  0.52338374 -3.5643964 ]]
Iteration 400 of 1000: loss=3.59 " + "l1=2.52" + "l2=1.07 f=-0.518 shape=(1, 9000, 1)
logits [[-0.05095384  0.39777684  0.4183717  -2.836002  ]]
Iteration 500 of 1000: loss=2.96 " + "l1=1.72" + "l2=1.24 f=-0.465 shape=(1, 9000, 1)
logits [[-0.4725538   0.2820713   0.26653844 -1.934114  ]]
Iteration 600 of 1000: loss=2.56 " + "l1=1.31" + "l2=1.24 f=-0.437 shape=(1, 9000, 1)
logits [[-0.57429326  0.16616692  0.17750989 -1.518361  ]]
Iteration 700 of 1000: loss=2.17 " + "l1=0.922" + "l2=1.25 f=-0.393 shape=(1, 9000, 1)
logits [[-0.574491    0.06241049  0.06416671 -1.125371  ]]
Iteration 800 of 1000: loss=1.9 " + "l1=0.646" + "l2=1.26 f=-0.371 shape=(1, 9000, 1)
logits [[-0.6539086  -0.00646021  0.00536453 -0.82868516]]
Iteration 900 of 1000: loss=1.48 " + "l1=0.0902" + "l2=1.39 f=-0.348 shape=(1, 9000, 1)
logits [[-0.91049314 -0.12313195 -0.12137921 -0.23778126]]
--- 290.3756802082062 seconds ---
Adv result:3
Loading record A02110
(1, 4336)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0315 " + "l1=0.0315" + "l2=0 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.3940892  -1.7552646  -0.34098274 -0.9825279 ]]
Iteration 100 of 1000: loss=0.0307 " + "l1=0.0301" + "l2=0.000622 f=-0.42 shape=(1, 9000, 1)
logits [[ 1.3064824  -1.6987765  -0.37614256 -0.9135621 ]]
Iteration 200 of 1000: loss=0.0305 " + "l1=0.0298" + "l2=0.000716 f=-0.42 shape=(1, 9000, 1)
logits [[ 1.2857965  -1.6892078  -0.38256833 -0.8956445 ]]
Iteration 300 of 1000: loss=0.0303 " + "l1=0.0294" + "l2=0.000845 f=-0.42 shape=(1, 9000, 1)
logits [[ 1.2646315  -1.6790528  -0.3885837  -0.87741005]]
Iteration 400 of 1000: loss=0.0301 " + "l1=0.0291" + "l2=0.000968 f=-0.42 shape=(1, 9000, 1)
logits [[ 1.2446194  -1.6692446  -0.39384755 -0.8604348 ]]
Iteration 500 of 1000: loss=0.0299 " + "l1=0.0288" + "l2=0.0011 f=-0.419 shape=(1, 9000, 1)
logits [[ 1.2242265  -1.6598215  -0.3984421  -0.84278005]]
Iteration 600 of 1000: loss=0.0298 " + "l1=0.0286" + "l2=0.0012 f=-0.418 shape=(1, 9000, 1)
logits [[ 1.2057686  -1.6511328  -0.40193468 -0.82667136]]
Iteration 700 of 1000: loss=0.0296 " + "l1=0.0283" + "l2=0.00135 f=-0.418 shape=(1, 9000, 1)
logits [[ 1.1855645  -1.6425189  -0.40587023 -0.8086601 ]]
Iteration 800 of 1000: loss=0.0294 " + "l1=0.028" + "l2=0.00148 f=-0.417 shape=(1, 9000, 1)
logits [[ 1.1624258 -1.632896  -0.4108913 -0.7884052]]
Iteration 900 of 1000: loss=0.0293 " + "l1=0.0276" + "l2=0.00173 f=-0.417 shape=(1, 9000, 1)
logits [[ 1.1378748  -1.6217395  -0.41670266 -0.7671152 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.315 " + "l1=0.315" + "l2=0 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.3940892  -1.7552646  -0.34098274 -0.9825279 ]]
Iteration 100 of 1000: loss=0.155 " + "l1=0.0381" + "l2=0.117 f=-0.462 shape=(1, 9000, 1)
logits [[-0.18617463 -0.5676409  -0.90236664 -0.19263378]]
Iteration 200 of 1000: loss=0.0953 " + "l1=0.00152" + "l2=0.0938 f=-0.504 shape=(1, 9000, 1)
logits [[-0.35121867 -0.36639607 -0.9252557  -0.37497026]]
Iteration 300 of 1000: loss=0.0779 " + "l1=0" + "l2=0.0779 f=-0.51 shape=(1, 9000, 1)
logits [[-0.37384847 -0.3708647  -0.9219735  -0.37496457]]
Iteration 400 of 1000: loss=0.0716 " + "l1=0" + "l2=0.0716 f=-0.516 shape=(1, 9000, 1)
logits [[-0.37950584 -0.36249042 -0.9169786  -0.40524435]]
Iteration 500 of 1000: loss=0.0663 " + "l1=0" + "l2=0.0663 f=-0.512 shape=(1, 9000, 1)
logits [[-0.38453448 -0.377068   -0.9025235  -0.38410717]]
Iteration 600 of 1000: loss=0.0633 " + "l1=0.000655" + "l2=0.0627 f=-0.512 shape=(1, 9000, 1)
logits [[-0.3783271  -0.3848751  -0.8928385  -0.39095154]]
Iteration 700 of 1000: loss=0.0614 " + "l1=0.00159" + "l2=0.0598 f=-0.514 shape=(1, 9000, 1)
logits [[-0.37536013 -0.39127094 -0.87941015 -0.41157615]]
Iteration 800 of 1000: loss=0.0593 " + "l1=0" + "l2=0.0593 f=-0.516 shape=(1, 9000, 1)
logits [[-0.42233407 -0.37001967 -0.8779953  -0.3947466 ]]
Iteration 900 of 1000: loss=0.0563 " + "l1=0.00199" + "l2=0.0543 f=-0.513 shape=(1, 9000, 1)
logits [[-0.3786523  -0.39854443 -0.8664595  -0.4065488 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.173 " + "l1=0.173" + "l2=0 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.3940892  -1.7552646  -0.34098274 -0.9825279 ]]
Iteration 100 of 1000: loss=0.143 " + "l1=0.117" + "l2=0.0254 f=-0.418 shape=(1, 9000, 1)
logits [[ 0.77894354 -1.3568674  -0.5791576  -0.51558524]]
Iteration 200 of 1000: loss=0.122 " + "l1=0.0762" + "l2=0.0456 f=-0.418 shape=(1, 9000, 1)
logits [[ 0.32861272 -1.0571939  -0.726664   -0.2150521 ]]
Iteration 300 of 1000: loss=0.093 " + "l1=0.0318" + "l2=0.0612 f=-0.445 shape=(1, 9000, 1)
logits [[-0.10989079 -0.68839735 -0.8574179  -0.12396423]]
Iteration 400 of 1000: loss=0.0811 " + "l1=0.0171" + "l2=0.064 f=-0.473 shape=(1, 9000, 1)
logits [[-0.22369197 -0.5347189  -0.8773328  -0.25590944]]
Iteration 500 of 1000: loss=0.0716 " + "l1=0.00207" + "l2=0.0695 f=-0.504 shape=(1, 9000, 1)
logits [[-0.3534641  -0.39102682 -0.90585226 -0.36523667]]
Iteration 600 of 1000: loss=0.066 " + "l1=0.000903" + "l2=0.0651 f=-0.508 shape=(1, 9000, 1)
logits [[-0.36953706 -0.3859615  -0.9044051  -0.37297028]]
Iteration 700 of 1000: loss=0.0625 " + "l1=0.000723" + "l2=0.0618 f=-0.51 shape=(1, 9000, 1)
logits [[-0.37302914 -0.38617426 -0.8974073  -0.3847063 ]]
Iteration 800 of 1000: loss=0.0594 " + "l1=0" + "l2=0.0594 f=-0.512 shape=(1, 9000, 1)
logits [[-0.38781273 -0.38399044 -0.8919651  -0.384171  ]]
Iteration 900 of 1000: loss=0.0565 " + "l1=0.000269" + "l2=0.0563 f=-0.51 shape=(1, 9000, 1)
logits [[-0.39993924 -0.37818208 -0.886671   -0.37329978]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.102 " + "l1=0.102" + "l2=0 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.3940892  -1.7552646  -0.34098274 -0.9825279 ]]
Iteration 100 of 1000: loss=0.0929 " + "l1=0.0857" + "l2=0.00722 f=-0.42 shape=(1, 9000, 1)
logits [[ 1.0765911  -1.5609825  -0.46505907 -0.73212826]]
Iteration 200 of 1000: loss=0.0895 " + "l1=0.0799" + "l2=0.00964 f=-0.418 shape=(1, 9000, 1)
logits [[ 0.9596362  -1.4984328  -0.49910137 -0.6358782 ]]
Iteration 300 of 1000: loss=0.0858 " + "l1=0.0731" + "l2=0.0126 f=-0.415 shape=(1, 9000, 1)
logits [[ 0.8320787  -1.4182383  -0.5401939  -0.53494847]]
Iteration 400 of 1000: loss=0.0795 " + "l1=0.0627" + "l2=0.0169 f=-0.41 shape=(1, 9000, 1)
logits [[ 0.6251944 -1.3025681 -0.600795  -0.3600388]]
Iteration 500 of 1000: loss=0.0741 " + "l1=0.0531" + "l2=0.0211 f=-0.407 shape=(1, 9000, 1)
logits [[ 0.42768896 -1.2051079  -0.65641946 -0.19397092]]
Iteration 600 of 1000: loss=0.0687 " + "l1=0.0455" + "l2=0.0232 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.28883502 -1.1124388  -0.70029855 -0.11382519]]
Iteration 700 of 1000: loss=0.0617 " + "l1=0.0341" + "l2=0.0277 f=-0.416 shape=(1, 9000, 1)
logits [[ 0.0843852  -0.96369386 -0.7569581  -0.02805755]]
Iteration 800 of 1000: loss=0.0526 " + "l1=0.0259" + "l2=0.0267 f=-0.43 shape=(1, 9000, 1)
logits [[-0.04552548 -0.841587   -0.78432333 -0.04749609]]
Iteration 900 of 1000: loss=0.0401 " + "l1=0.0148" + "l2=0.0253 f=-0.474 shape=(1, 9000, 1)
logits [[-0.20831613 -0.66405594 -0.8031605  -0.21982652]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.138 " + "l1=0.138" + "l2=0 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.3940892  -1.7552646  -0.34098274 -0.9825279 ]]
Iteration 100 of 1000: loss=0.12 " + "l1=0.105" + "l2=0.0143 f=-0.42 shape=(1, 9000, 1)
logits [[ 0.9402068  -1.4700407  -0.51799667 -0.6306301 ]]
Iteration 200 of 1000: loss=0.111 " + "l1=0.0903" + "l2=0.0212 f=-0.415 shape=(1, 9000, 1)
logits [[ 0.7343269  -1.3301219  -0.5829874  -0.48133305]]
Iteration 300 of 1000: loss=0.0979 " + "l1=0.0669" + "l2=0.031 f=-0.415 shape=(1, 9000, 1)
logits [[ 0.40028822 -1.1290817  -0.69244623 -0.23990661]]
Iteration 400 of 1000: loss=0.0852 " + "l1=0.0405" + "l2=0.0447 f=-0.425 shape=(1, 9000, 1)
logits [[ 0.04459526 -0.88106674 -0.8034401  -0.06040762]]
Iteration 500 of 1000: loss=0.0753 " + "l1=0.0284" + "l2=0.0469 f=-0.441 shape=(1, 9000, 1)
logits [[-0.08398232 -0.731983   -0.8323807  -0.11492575]]
Iteration 600 of 1000: loss=0.0673 " + "l1=0.0195" + "l2=0.0479 f=-0.46 shape=(1, 9000, 1)
logits [[-0.18764193 -0.6212772  -0.8528225  -0.17649493]]
Iteration 700 of 1000: loss=0.0576 " + "l1=0.012" + "l2=0.0456 f=-0.485 shape=(1, 9000, 1)
logits [[-0.2625758  -0.53774184 -0.86651516 -0.27177757]]
Iteration 800 of 1000: loss=0.0407 " + "l1=0.000732" + "l2=0.0399 f=-0.53 shape=(1, 9000, 1)
logits [[-0.40648302 -0.41425002 -0.9022726  -0.39751813]]
Iteration 900 of 1000: loss=0.0303 " + "l1=0" + "l2=0.0303 f=-0.551 shape=(1, 9000, 1)
logits [[-0.4420169  -0.42596778 -0.9001998  -0.43634784]]
--- 291.3190121650696 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0174 " + "l1=0.0174" + "l2=0 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.3940892  -1.7552646  -0.34098274 -0.9825279 ]]
Iteration 100 of 1000: loss=0.0171 " + "l1=0.0168" + "l2=0.000238 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.3430175  -1.7532672  -0.33885524 -0.9333724 ]]
Iteration 200 of 1000: loss=0.0169 " + "l1=0.0167" + "l2=0.000227 f=-0.42 shape=(1, 9000, 1)
logits [[ 1.3346448 -1.7526616 -0.3374599 -0.924582 ]]
Iteration 300 of 1000: loss=0.0169 " + "l1=0.0166" + "l2=0.000272 f=-0.419 shape=(1, 9000, 1)
logits [[ 1.3234746  -1.7519825  -0.3356359  -0.91266525]]
Iteration 400 of 1000: loss=0.0168 " + "l1=0.0164" + "l2=0.000333 f=-0.418 shape=(1, 9000, 1)
logits [[ 1.3112439  -1.7511606  -0.33360463 -0.89919376]]
Iteration 500 of 1000: loss=0.0167 " + "l1=0.0163" + "l2=0.000421 f=-0.417 shape=(1, 9000, 1)
logits [[ 1.2984943  -1.7500193  -0.33137167 -0.8848149 ]]
Iteration 600 of 1000: loss=0.0167 " + "l1=0.0161" + "l2=0.000511 f=-0.415 shape=(1, 9000, 1)
logits [[ 1.2860951  -1.7487699  -0.32867667 -0.87047195]]
Iteration 700 of 1000: loss=0.0166 " + "l1=0.016" + "l2=0.00061 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.2728716 -1.7473766 -0.3258725 -0.8549137]]
Iteration 800 of 1000: loss=0.0165 " + "l1=0.0158" + "l2=0.00071 f=-0.412 shape=(1, 9000, 1)
logits [[ 1.2582942  -1.7459655  -0.3231545  -0.83727545]]
Iteration 900 of 1000: loss=0.0165 " + "l1=0.0156" + "l2=0.000842 f=-0.41 shape=(1, 9000, 1)
logits [[ 1.2430834  -1.7444533  -0.32042626 -0.81866336]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.174 " + "l1=0.174" + "l2=0 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.3940892  -1.7552646  -0.34098274 -0.9825279 ]]
Iteration 100 of 1000: loss=0.137 " + "l1=0.116" + "l2=0.0208 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.7992997 -1.7064935 -0.363726  -0.3445681]]
Iteration 200 of 1000: loss=0.117 " + "l1=0.0869" + "l2=0.0296 f=-0.38 shape=(1, 9000, 1)
logits [[ 0.56481564 -1.7285904  -0.30417007 -0.05349777]]
Iteration 300 of 1000: loss=0.0988 " + "l1=0.0608" + "l2=0.038 f=-0.37 shape=(1, 9000, 1)
logits [[ 0.34048733 -1.7236395  -0.26796284  0.17151338]]
Iteration 400 of 1000: loss=0.0828 " + "l1=0.0458" + "l2=0.037 f=-0.361 shape=(1, 9000, 1)
logits [[ 0.27678785 -1.7559465  -0.18112803  0.21602178]]
Iteration 500 of 1000: loss=0.0707 " + "l1=0.0354" + "l2=0.0353 f=-0.354 shape=(1, 9000, 1)
logits [[ 0.26146773 -1.8165536  -0.09281927  0.23239854]]
Iteration 600 of 1000: loss=0.0623 " + "l1=0.0291" + "l2=0.0332 f=-0.351 shape=(1, 9000, 1)
logits [[ 0.24435839 -1.845802   -0.04599172  0.24472752]]
Iteration 700 of 1000: loss=0.0561 " + "l1=0.0235" + "l2=0.0326 f=-0.342 shape=(1, 9000, 1)
logits [[ 0.2554542  -1.8903886   0.02021864  0.24571022]]
Iteration 800 of 1000: loss=0.0521 " + "l1=0.0198" + "l2=0.0322 f=-0.337 shape=(1, 9000, 1)
logits [[ 0.2673886  -1.9209793   0.0690643   0.23564428]]
Iteration 900 of 1000: loss=0.0497 " + "l1=0.0163" + "l2=0.0334 f=-0.331 shape=(1, 9000, 1)
logits [[ 0.24897638 -1.9460312   0.10422264  0.26737887]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.74 " + "l1=1.74" + "l2=0 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.3940892  -1.7552646  -0.34098274 -0.9825279 ]]
Iteration 100 of 1000: loss=0.198 " + "l1=0" + "l2=0.198 f=-0.346 shape=(1, 9000, 1)
logits [[ 0.2296311  -1.7852997   0.24297582 -0.07169623]]
Iteration 200 of 1000: loss=0.138 " + "l1=0" + "l2=0.138 f=-0.344 shape=(1, 9000, 1)
logits [[ 0.3026522  -1.8574698   0.33208388 -0.15412101]]
Iteration 300 of 1000: loss=0.117 " + "l1=0" + "l2=0.117 f=-0.339 shape=(1, 9000, 1)
logits [[ 0.29520515 -1.8895297   0.3178822  -0.08149032]]
Iteration 400 of 1000: loss=0.101 " + "l1=0.00183" + "l2=0.0988 f=-0.338 shape=(1, 9000, 1)
logits [[ 0.27178937 -1.9049021   0.2699627   0.00978529]]
Iteration 500 of 1000: loss=0.088 " + "l1=0" + "l2=0.088 f=-0.339 shape=(1, 9000, 1)
logits [[ 0.24899992 -1.9215984   0.25006157  0.06517242]]
Iteration 600 of 1000: loss=0.0795 " + "l1=0" + "l2=0.0795 f=-0.344 shape=(1, 9000, 1)
logits [[ 0.23876613 -1.9314309   0.25324595  0.06519993]]
Iteration 700 of 1000: loss=0.0739 " + "l1=0" + "l2=0.0739 f=-0.344 shape=(1, 9000, 1)
logits [[ 0.23003687 -1.9422641   0.2687462   0.06945679]]
Iteration 800 of 1000: loss=0.0691 " + "l1=0" + "l2=0.0691 f=-0.345 shape=(1, 9000, 1)
logits [[ 0.21849775 -1.9571174   0.2653272   0.09408972]]
Iteration 900 of 1000: loss=0.0605 " + "l1=0" + "l2=0.0605 f=-0.349 shape=(1, 9000, 1)
logits [[ 0.22788057 -1.9617887   0.2385015   0.10028451]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.954 " + "l1=0.954" + "l2=0 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.3940892  -1.7552646  -0.34098274 -0.9825279 ]]
Iteration 100 of 1000: loss=0.2 " + "l1=0.00278" + "l2=0.197 f=-0.362 shape=(1, 9000, 1)
logits [[ 0.29707178 -1.9842545   0.2920204  -0.05289443]]
Iteration 200 of 1000: loss=0.107 " + "l1=0.00217" + "l2=0.105 f=-0.353 shape=(1, 9000, 1)
logits [[ 0.2433897  -1.9508641   0.23945324  0.05593875]]
Iteration 300 of 1000: loss=0.0886 " + "l1=0" + "l2=0.0886 f=-0.342 shape=(1, 9000, 1)
logits [[ 0.26285502 -1.9777304   0.2659136   0.07936668]]
Iteration 400 of 1000: loss=0.0794 " + "l1=0.000443" + "l2=0.079 f=-0.335 shape=(1, 9000, 1)
logits [[ 0.2793227  -1.9905797   0.27851704  0.09382826]]
Iteration 500 of 1000: loss=0.0719 " + "l1=0" + "l2=0.0719 f=-0.328 shape=(1, 9000, 1)
logits [[ 0.29296383 -1.9993576   0.29702732  0.09743907]]
Iteration 600 of 1000: loss=0.0669 " + "l1=0.00308" + "l2=0.0639 f=-0.325 shape=(1, 9000, 1)
logits [[ 0.3075769  -2.0097132   0.30197182  0.10126363]]
Iteration 700 of 1000: loss=0.0586 " + "l1=0" + "l2=0.0586 f=-0.319 shape=(1, 9000, 1)
logits [[ 0.3003013  -2.0219426   0.3162166   0.13057733]]
Iteration 800 of 1000: loss=0.0511 " + "l1=0" + "l2=0.0511 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.3031753  -2.0276642   0.3066887   0.15490761]]
Iteration 900 of 1000: loss=0.0456 " + "l1=0" + "l2=0.0456 f=-0.313 shape=(1, 9000, 1)
logits [[ 0.28638735 -2.037498    0.30069166  0.19669634]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.564 " + "l1=0.564" + "l2=0 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.3940892  -1.7552646  -0.34098274 -0.9825279 ]]
Iteration 100 of 1000: loss=0.232 " + "l1=0.133" + "l2=0.0988 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.24906215 -1.7801913  -0.15943848  0.23011133]]
Iteration 200 of 1000: loss=0.115 " + "l1=0" + "l2=0.115 f=-0.361 shape=(1, 9000, 1)
logits [[ 0.2039268  -1.9613354   0.20515157  0.10758111]]
Iteration 300 of 1000: loss=0.0861 " + "l1=0" + "l2=0.0861 f=-0.366 shape=(1, 9000, 1)
logits [[ 0.18146008 -1.9780374   0.18256055  0.15153408]]
Iteration 400 of 1000: loss=0.0739 " + "l1=0" + "l2=0.0739 f=-0.366 shape=(1, 9000, 1)
logits [[ 0.18074211 -1.998932    0.19442081  0.16103205]]
Iteration 500 of 1000: loss=0.0639 " + "l1=0" + "l2=0.0639 f=-0.364 shape=(1, 9000, 1)
logits [[ 0.18104489 -2.0022342   0.18667339  0.17823899]]
Iteration 600 of 1000: loss=0.0563 " + "l1=0" + "l2=0.0563 f=-0.361 shape=(1, 9000, 1)
logits [[ 0.19510382 -2.0206804   0.20032872  0.18141547]]
Iteration 700 of 1000: loss=0.0499 " + "l1=0" + "l2=0.0499 f=-0.359 shape=(1, 9000, 1)
logits [[ 0.20451817 -2.0524514   0.21804348  0.19564345]]
Iteration 800 of 1000: loss=0.0418 " + "l1=0" + "l2=0.0418 f=-0.353 shape=(1, 9000, 1)
logits [[ 0.22606406 -2.0847144   0.23262624  0.2141552 ]]
Iteration 900 of 1000: loss=0.0374 " + "l1=0.00112" + "l2=0.0363 f=-0.35 shape=(1, 9000, 1)
logits [[ 0.31790897 -2.1465485   0.31445917  0.11550099]]
--- 290.69995307922363 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0238 " + "l1=0.0238" + "l2=0 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.3940892  -1.7552646  -0.34098274 -0.9825279 ]]
Iteration 100 of 1000: loss=0.022 " + "l1=0.0208" + "l2=0.00113 f=-0.419 shape=(1, 9000, 1)
logits [[ 1.2577314  -1.7269833  -0.37959203 -0.82571816]]
Iteration 200 of 1000: loss=0.0213 " + "l1=0.0199" + "l2=0.00144 f=-0.417 shape=(1, 9000, 1)
logits [[ 1.2165942  -1.7241501  -0.38661033 -0.77299225]]
Iteration 300 of 1000: loss=0.0207 " + "l1=0.0189" + "l2=0.00173 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.1767275 -1.7222857 -0.3909814 -0.717757 ]]
Iteration 400 of 1000: loss=0.0199 " + "l1=0.0177" + "l2=0.00217 f=-0.409 shape=(1, 9000, 1)
logits [[ 1.1261685 -1.718137  -0.3965097 -0.6473465]]
Iteration 500 of 1000: loss=0.0191 " + "l1=0.0165" + "l2=0.00262 f=-0.404 shape=(1, 9000, 1)
logits [[ 1.0738214  -1.7164214  -0.40144673 -0.5730623 ]]
Iteration 600 of 1000: loss=0.0183 " + "l1=0.0153" + "l2=0.00299 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.0275722  -1.7150314  -0.40675905 -0.50611687]]
Iteration 700 of 1000: loss=0.0176 " + "l1=0.0142" + "l2=0.0034 f=-0.396 shape=(1, 9000, 1)
logits [[ 0.98207104 -1.7146533  -0.4117875  -0.44021475]]
Iteration 800 of 1000: loss=0.0168 " + "l1=0.013" + "l2=0.00383 f=-0.392 shape=(1, 9000, 1)
logits [[ 0.92879844 -1.7137371  -0.4186413  -0.366267  ]]
Iteration 900 of 1000: loss=0.016 " + "l1=0.0117" + "l2=0.00433 f=-0.389 shape=(1, 9000, 1)
logits [[ 0.87238616 -1.706421   -0.4296032  -0.29327384]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.238 " + "l1=0.238" + "l2=0 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.3940892  -1.7552646  -0.34098274 -0.9825279 ]]
Iteration 100 of 1000: loss=0.0551 " + "l1=0.00199" + "l2=0.0531 f=-0.389 shape=(1, 9000, 1)
logits [[ 0.30508226 -1.5569768  -0.5876971   0.2852128 ]]
Iteration 200 of 1000: loss=0.0388 " + "l1=0" + "l2=0.0388 f=-0.38 shape=(1, 9000, 1)
logits [[ 0.31881648 -1.6015778  -0.55818474  0.31895933]]
Iteration 300 of 1000: loss=0.0314 " + "l1=0.000745" + "l2=0.0307 f=-0.376 shape=(1, 9000, 1)
logits [[ 0.33486512 -1.6178837  -0.54925984  0.32741594]]
Iteration 400 of 1000: loss=0.0257 " + "l1=0" + "l2=0.0257 f=-0.372 shape=(1, 9000, 1)
logits [[ 0.33591756 -1.6284332  -0.5468795   0.3527227 ]]
Iteration 500 of 1000: loss=0.0213 " + "l1=0.000863" + "l2=0.0205 f=-0.369 shape=(1, 9000, 1)
logits [[ 0.3575168 -1.6370416 -0.5445292  0.3488864]]
Iteration 600 of 1000: loss=0.0181 " + "l1=0" + "l2=0.0181 f=-0.364 shape=(1, 9000, 1)
logits [[ 0.3361365 -1.6354661 -0.5493556  0.3915453]]
Iteration 700 of 1000: loss=0.0146 " + "l1=0" + "l2=0.0146 f=-0.362 shape=(1, 9000, 1)
logits [[ 0.36486515 -1.6447715  -0.54360163  0.37434024]]
Iteration 800 of 1000: loss=0.0133 " + "l1=0" + "l2=0.0133 f=-0.36 shape=(1, 9000, 1)
logits [[ 0.36148643 -1.6481774  -0.541856    0.3877185 ]]
Iteration 900 of 1000: loss=0.0118 " + "l1=0" + "l2=0.0118 f=-0.358 shape=(1, 9000, 1)
logits [[ 0.37126282 -1.6591237  -0.5319868   0.3870941 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.131 " + "l1=0.131" + "l2=0 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.3940892  -1.7552646  -0.34098274 -0.9825279 ]]
Iteration 100 of 1000: loss=0.0628 " + "l1=0.0196" + "l2=0.0432 f=-0.392 shape=(1, 9000, 1)
logits [[ 0.45880452 -1.576515   -0.5544062   0.10319524]]
Iteration 200 of 1000: loss=0.0393 " + "l1=0.00146" + "l2=0.0378 f=-0.379 shape=(1, 9000, 1)
logits [[ 0.3287387  -1.5955962  -0.55204785  0.3021049 ]]
Iteration 300 of 1000: loss=0.029 " + "l1=4.9e-06" + "l2=0.029 f=-0.374 shape=(1, 9000, 1)
logits [[ 0.3334033  -1.620713   -0.5438563   0.33331424]]
Iteration 400 of 1000: loss=0.0219 " + "l1=0.000154" + "l2=0.0218 f=-0.371 shape=(1, 9000, 1)
logits [[ 0.34597167 -1.6291233  -0.54251295  0.34317896]]
Iteration 500 of 1000: loss=0.0162 " + "l1=0" + "l2=0.0162 f=-0.369 shape=(1, 9000, 1)
logits [[ 0.34725896 -1.6240777  -0.55213493  0.3514503 ]]
Iteration 600 of 1000: loss=0.0141 " + "l1=0" + "l2=0.0141 f=-0.368 shape=(1, 9000, 1)
logits [[ 0.34469196 -1.6284795  -0.5519815   0.3644805 ]]
Iteration 700 of 1000: loss=0.0125 " + "l1=0" + "l2=0.0125 f=-0.366 shape=(1, 9000, 1)
logits [[ 0.35745528 -1.6353889  -0.5457662   0.3613017 ]]
Iteration 800 of 1000: loss=0.0116 " + "l1=0.00025" + "l2=0.0113 f=-0.363 shape=(1, 9000, 1)
logits [[ 0.36686465 -1.6430439  -0.5373009   0.36231434]]
Iteration 900 of 1000: loss=0.0106 " + "l1=0" + "l2=0.0106 f=-0.361 shape=(1, 9000, 1)
logits [[ 0.36331937 -1.647672   -0.53308785  0.37318277]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0772 " + "l1=0.0772" + "l2=0 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.3940892  -1.7552646  -0.34098274 -0.9825279 ]]
Iteration 100 of 1000: loss=0.0554 " + "l1=0.041" + "l2=0.0144 f=-0.407 shape=(1, 9000, 1)
logits [[ 0.8758766  -1.6512462  -0.46747062 -0.38580674]]
Iteration 200 of 1000: loss=0.045 " + "l1=0.0262" + "l2=0.0188 f=-0.391 shape=(1, 9000, 1)
logits [[ 0.68651813 -1.6495242  -0.47962633 -0.12038023]]
Iteration 300 of 1000: loss=0.0358 " + "l1=0.0128" + "l2=0.023 f=-0.376 shape=(1, 9000, 1)
logits [[ 0.51515573 -1.644554   -0.4958635   0.12193621]]
Iteration 400 of 1000: loss=0.0236 " + "l1=0.000478" + "l2=0.0231 f=-0.372 shape=(1, 9000, 1)
logits [[ 0.34320787 -1.6086473  -0.5528145   0.32849357]]
Iteration 500 of 1000: loss=0.0171 " + "l1=0" + "l2=0.0171 f=-0.372 shape=(1, 9000, 1)
logits [[ 0.33585802 -1.6149825  -0.560206    0.35123223]]
Iteration 600 of 1000: loss=0.0139 " + "l1=0.000126" + "l2=0.0137 f=-0.37 shape=(1, 9000, 1)
logits [[ 0.35137543 -1.6273928  -0.5526424   0.34749928]]
Iteration 700 of 1000: loss=0.0125 " + "l1=0" + "l2=0.0125 f=-0.368 shape=(1, 9000, 1)
logits [[ 0.3449146  -1.6283255  -0.5506015   0.36290294]]
Iteration 800 of 1000: loss=0.0111 " + "l1=0" + "l2=0.0111 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.3562425  -1.6354634  -0.5414794   0.36155513]]
Iteration 900 of 1000: loss=0.0102 " + "l1=0" + "l2=0.0102 f=-0.363 shape=(1, 9000, 1)
logits [[ 0.3563724  -1.6390473  -0.5372943   0.36841938]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0505 " + "l1=0.0505" + "l2=0 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.3940892  -1.7552646  -0.34098274 -0.9825279 ]]
Iteration 100 of 1000: loss=0.0421 " + "l1=0.0366" + "l2=0.00552 f=-0.415 shape=(1, 9000, 1)
logits [[ 1.0868301  -1.6879414  -0.42524907 -0.63465965]]
Iteration 200 of 1000: loss=0.0373 " + "l1=0.0291" + "l2=0.00823 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.93674743 -1.6809189  -0.43991026 -0.43328694]]
Iteration 300 of 1000: loss=0.0334 " + "l1=0.0242" + "l2=0.00924 f=-0.394 shape=(1, 9000, 1)
logits [[ 0.84598327 -1.6889932  -0.44145295 -0.29239962]]
Iteration 400 of 1000: loss=0.0297 " + "l1=0.0191" + "l2=0.0106 f=-0.385 shape=(1, 9000, 1)
logits [[ 0.74967086 -1.6927963  -0.44737178 -0.15138829]]
Iteration 500 of 1000: loss=0.0246 " + "l1=0.0119" + "l2=0.0126 f=-0.38 shape=(1, 9000, 1)
logits [[ 0.59307057 -1.6561656  -0.49109533  0.03266296]]
Iteration 600 of 1000: loss=0.0188 " + "l1=0.00474" + "l2=0.014 f=-0.376 shape=(1, 9000, 1)
logits [[ 0.4409153  -1.6327235  -0.5284065   0.21785784]]
Iteration 700 of 1000: loss=0.0145 " + "l1=0.000218" + "l2=0.0143 f=-0.37 shape=(1, 9000, 1)
logits [[ 0.35270736 -1.6265515  -0.54705316  0.34244573]]
Iteration 800 of 1000: loss=0.0121 " + "l1=0" + "l2=0.0121 f=-0.367 shape=(1, 9000, 1)
logits [[ 0.35262373 -1.6323307  -0.5441946   0.35443622]]
Iteration 900 of 1000: loss=0.0109 " + "l1=0" + "l2=0.0109 f=-0.364 shape=(1, 9000, 1)
logits [[ 0.3563625  -1.6378025  -0.5363171   0.36317414]]
--- 287.2786409854889 seconds ---
Adv result:3
Loading record A02126
(1, 3198)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.059 " + "l1=0.059" + "l2=0 f=-0.68 shape=(1, 9000, 1)
logits [[ 4.0325665 -1.8658679 -2.6131544 -2.2737615]]
Iteration 100 of 1000: loss=0.0557 " + "l1=0.0543" + "l2=0.00137 f=-0.695 shape=(1, 9000, 1)
logits [[ 3.7469554 -1.6822652 -2.6938002 -2.1505945]]
Iteration 200 of 1000: loss=0.0539 " + "l1=0.0521" + "l2=0.00184 f=-0.702 shape=(1, 9000, 1)
logits [[ 3.6107256 -1.5981395 -2.7348135 -2.0842152]]
Iteration 300 of 1000: loss=0.0519 " + "l1=0.0494" + "l2=0.00246 f=-0.71 shape=(1, 9000, 1)
logits [[ 3.4424677 -1.4976366 -2.783691  -2.0018156]]
Iteration 400 of 1000: loss=0.0495 " + "l1=0.0465" + "l2=0.003 f=-0.718 shape=(1, 9000, 1)
logits [[ 3.2624784 -1.3924488 -2.8319094 -1.9101238]]
Iteration 500 of 1000: loss=0.0471 " + "l1=0.0435" + "l2=0.00362 f=-0.724 shape=(1, 9000, 1)
logits [[ 3.071731  -1.2805101 -2.8818903 -1.806966 ]]
Iteration 600 of 1000: loss=0.0449 " + "l1=0.0407" + "l2=0.00419 f=-0.729 shape=(1, 9000, 1)
logits [[ 2.8873484 -1.1788706 -2.9276426 -1.6955706]]
Iteration 700 of 1000: loss=0.0427 " + "l1=0.038" + "l2=0.00473 f=-0.731 shape=(1, 9000, 1)
logits [[ 2.709335  -1.0875173 -2.9694502 -1.5768738]]
Iteration 800 of 1000: loss=0.0406 " + "l1=0.0353" + "l2=0.00532 f=-0.732 shape=(1, 9000, 1)
logits [[ 2.5274143 -1.0006328 -3.0061564 -1.449326 ]]
Iteration 900 of 1000: loss=0.0384 " + "l1=0.0323" + "l2=0.00606 f=-0.727 shape=(1, 9000, 1)
logits [[ 2.3347657 -0.8965702 -3.0233583 -1.3216442]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.59 " + "l1=0.59" + "l2=0 f=-0.68 shape=(1, 9000, 1)
logits [[ 4.0325665 -1.8658679 -2.6131544 -2.2737615]]
Iteration 100 of 1000: loss=0.237 " + "l1=0.0707" + "l2=0.166 f=-0.712 shape=(1, 9000, 1)
logits [[ 0.69264704 -0.01430553 -2.5948951  -0.9323371 ]]
Iteration 200 of 1000: loss=0.112 " + "l1=0.003" + "l2=0.109 f=-0.689 shape=(1, 9000, 1)
logits [[ 0.19379893  0.16384685 -2.551721   -0.56089723]]
Iteration 300 of 1000: loss=0.0782 " + "l1=0" + "l2=0.0782 f=-0.659 shape=(1, 9000, 1)
logits [[ 0.12673491  0.1294486  -2.541242   -0.3515711 ]]
Iteration 400 of 1000: loss=0.0638 " + "l1=0" + "l2=0.0638 f=-0.615 shape=(1, 9000, 1)
logits [[ 0.06733335  0.09260591 -2.43714    -0.18349579]]
Iteration 500 of 1000: loss=0.0544 " + "l1=0" + "l2=0.0544 f=-0.604 shape=(1, 9000, 1)
logits [[ 0.04921912  0.07391367 -2.4533818  -0.08710951]]
Iteration 600 of 1000: loss=0.0463 " + "l1=0" + "l2=0.0463 f=-0.597 shape=(1, 9000, 1)
logits [[ 0.03909338  0.04848491 -2.4653015  -0.0086997 ]]
Iteration 700 of 1000: loss=0.0384 " + "l1=0" + "l2=0.0384 f=-0.587 shape=(1, 9000, 1)
logits [[ 0.02909828  0.03627806 -2.441195    0.0295022 ]]
Iteration 800 of 1000: loss=0.0336 " + "l1=0.000439" + "l2=0.0331 f=-0.578 shape=(1, 9000, 1)
logits [[ 0.03523368  0.03083917 -2.4055986   0.02642529]]
Iteration 900 of 1000: loss=0.0309 " + "l1=0.000889" + "l2=0.03 f=-0.571 shape=(1, 9000, 1)
logits [[ 0.03435661  0.0254711  -2.3674498   0.02300681]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.324 " + "l1=0.324" + "l2=0 f=-0.68 shape=(1, 9000, 1)
logits [[ 4.0325665 -1.8658679 -2.6131544 -2.2737615]]
Iteration 100 of 1000: loss=0.223 " + "l1=0.178" + "l2=0.045 f=-0.76 shape=(1, 9000, 1)
logits [[ 2.346568  -0.8831709 -2.996684  -1.5069715]]
Iteration 200 of 1000: loss=0.139 " + "l1=0.0666" + "l2=0.0729 f=-0.713 shape=(1, 9000, 1)
logits [[ 1.0064012  -0.20367074 -2.7006404  -0.95550895]]
Iteration 300 of 1000: loss=0.0944 " + "l1=0.0217" + "l2=0.0727 f=-0.692 shape=(1, 9000, 1)
logits [[ 0.41254047  0.01849495 -2.6704254  -0.530122  ]]
Iteration 400 of 1000: loss=0.067 " + "l1=0" + "l2=0.067 f=-0.661 shape=(1, 9000, 1)
logits [[ 0.11475739  0.11681971 -2.6536572  -0.22122866]]
Iteration 500 of 1000: loss=0.0532 " + "l1=4.63e-05" + "l2=0.0531 f=-0.638 shape=(1, 9000, 1)
logits [[ 0.09733837  0.09649649 -2.639238   -0.10677959]]
Iteration 600 of 1000: loss=0.0425 " + "l1=0.000428" + "l2=0.0421 f=-0.618 shape=(1, 9000, 1)
logits [[ 0.07655188  0.06876192 -2.5959194  -0.01997475]]
Iteration 700 of 1000: loss=0.0366 " + "l1=0.000309" + "l2=0.0363 f=-0.609 shape=(1, 9000, 1)
logits [[ 0.06052747  0.05491111 -2.5739787   0.02367012]]
Iteration 800 of 1000: loss=0.0323 " + "l1=6.79e-05" + "l2=0.0323 f=-0.599 shape=(1, 9000, 1)
logits [[ 0.05308772  0.05185303 -2.5363584   0.03385703]]
Iteration 900 of 1000: loss=0.0298 " + "l1=0.000364" + "l2=0.0294 f=-0.593 shape=(1, 9000, 1)
logits [[ 0.05234646  0.0457256  -2.505088    0.03557406]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.192 " + "l1=0.192" + "l2=0 f=-0.68 shape=(1, 9000, 1)
logits [[ 4.0325665 -1.8658679 -2.6131544 -2.2737615]]
Iteration 100 of 1000: loss=0.156 " + "l1=0.14" + "l2=0.0162 f=-0.735 shape=(1, 9000, 1)
logits [[ 3.0461557 -1.2617755 -2.876421  -1.8475833]]
Iteration 200 of 1000: loss=0.132 " + "l1=0.111" + "l2=0.0212 f=-0.751 shape=(1, 9000, 1)
logits [[ 2.4625683  -0.94666225 -2.9848955  -1.5352491 ]]
Iteration 300 of 1000: loss=0.106 " + "l1=0.0779" + "l2=0.0286 f=-0.748 shape=(1, 9000, 1)
logits [[ 1.7901759  -0.60591793 -3.0407376  -1.1337792 ]]
Iteration 400 of 1000: loss=0.077 " + "l1=0.043" + "l2=0.034 f=-0.681 shape=(1, 9000, 1)
logits [[ 1.0366161  -0.2873462  -2.7202885  -0.75267774]]
Iteration 500 of 1000: loss=0.0636 " + "l1=0.0291" + "l2=0.0345 f=-0.666 shape=(1, 9000, 1)
logits [[ 0.7149307  -0.17960015 -2.700893   -0.49856395]]
Iteration 600 of 1000: loss=0.0535 " + "l1=0.0185" + "l2=0.035 f=-0.651 shape=(1, 9000, 1)
logits [[ 0.47221485 -0.09557679 -2.7020547  -0.27858514]]
Iteration 700 of 1000: loss=0.0445 " + "l1=0.00781" + "l2=0.0367 f=-0.621 shape=(1, 9000, 1)
logits [[ 0.2038857  -0.03644562 -2.6140087  -0.03803382]]
Iteration 800 of 1000: loss=0.0385 " + "l1=0.00385" + "l2=0.0346 f=-0.608 shape=(1, 9000, 1)
logits [[ 0.09976467 -0.01880932 -2.5662818   0.05362044]]
Iteration 900 of 1000: loss=0.0346 " + "l1=0.00169" + "l2=0.0329 f=-0.604 shape=(1, 9000, 1)
logits [[ 0.06175045  0.00985315 -2.5447786   0.05640468]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.125 " + "l1=0.125" + "l2=0 f=-0.68 shape=(1, 9000, 1)
logits [[ 4.0325665 -1.8658679 -2.6131544 -2.2737615]]
Iteration 100 of 1000: loss=0.11 " + "l1=0.104" + "l2=0.00658 f=-0.714 shape=(1, 9000, 1)
logits [[ 3.4121802 -1.4758275 -2.787836  -2.0055358]]
Iteration 200 of 1000: loss=0.1 " + "l1=0.0906" + "l2=0.00949 f=-0.734 shape=(1, 9000, 1)
logits [[ 3.017638  -1.2448611 -2.8878536 -1.8205053]]
Iteration 300 of 1000: loss=0.0896 " + "l1=0.0784" + "l2=0.0113 f=-0.742 shape=(1, 9000, 1)
logits [[ 2.641422  -1.0459253 -2.968524  -1.5964152]]
Iteration 400 of 1000: loss=0.0791 " + "l1=0.065" + "l2=0.0142 f=-0.746 shape=(1, 9000, 1)
logits [[ 2.2200232  -0.83860886 -3.0307367  -1.3341067 ]]
Iteration 500 of 1000: loss=0.0651 " + "l1=0.046" + "l2=0.0191 f=-0.701 shape=(1, 9000, 1)
logits [[ 1.6529641  -0.51390916 -2.897906   -1.0443    ]]
Iteration 600 of 1000: loss=0.0563 " + "l1=0.0368" + "l2=0.0195 f=-0.682 shape=(1, 9000, 1)
logits [[ 1.3377864  -0.39413273 -2.8320694  -0.8378894 ]]
Iteration 700 of 1000: loss=0.0497 " + "l1=0.0292" + "l2=0.0205 f=-0.664 shape=(1, 9000, 1)
logits [[ 1.0664318  -0.30905545 -2.7408547  -0.67191607]]
Iteration 800 of 1000: loss=0.0448 " + "l1=0.0241" + "l2=0.0208 f=-0.656 shape=(1, 9000, 1)
logits [[ 0.87929505 -0.2533852  -2.7397237  -0.5113132 ]]
Iteration 900 of 1000: loss=0.0409 " + "l1=0.0198" + "l2=0.0211 f=-0.643 shape=(1, 9000, 1)
logits [[ 0.7251017  -0.20689763 -2.7103777  -0.38022354]]
--- 288.47140097618103 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0665 " + "l1=0.0665" + "l2=0 f=-0.68 shape=(1, 9000, 1)
logits [[ 4.0325665 -1.8658679 -2.6131544 -2.2737615]]
Iteration 100 of 1000: loss=0.0656 " + "l1=0.0652" + "l2=0.000386 f=-0.685 shape=(1, 9000, 1)
logits [[ 3.8875077 -1.7930906 -2.6338577 -2.201169 ]]
Iteration 200 of 1000: loss=0.0652 " + "l1=0.0648" + "l2=0.000473 f=-0.687 shape=(1, 9000, 1)
logits [[ 3.8376389 -1.7694083 -2.640043  -2.1750424]]
Iteration 300 of 1000: loss=0.0649 " + "l1=0.0643" + "l2=0.000602 f=-0.689 shape=(1, 9000, 1)
logits [[ 3.780511  -1.7412248 -2.64948   -2.1445374]]
Iteration 400 of 1000: loss=0.0645 " + "l1=0.0638" + "l2=0.000765 f=-0.691 shape=(1, 9000, 1)
logits [[ 3.7161136 -1.7093545 -2.6611228 -2.1106644]]
Iteration 500 of 1000: loss=0.0642 " + "l1=0.0632" + "l2=0.000972 f=-0.694 shape=(1, 9000, 1)
logits [[ 3.6471965 -1.676427  -2.6731112 -2.0735033]]
Iteration 600 of 1000: loss=0.0638 " + "l1=0.0626" + "l2=0.0012 f=-0.697 shape=(1, 9000, 1)
logits [[ 3.5692794 -1.6387671 -2.6858444 -2.0321665]]
Iteration 700 of 1000: loss=0.0633 " + "l1=0.0619" + "l2=0.00145 f=-0.7 shape=(1, 9000, 1)
logits [[ 3.4844239 -1.5975819 -2.7011218 -1.9868745]]
Iteration 800 of 1000: loss=0.0628 " + "l1=0.0611" + "l2=0.00173 f=-0.703 shape=(1, 9000, 1)
logits [[ 3.395855  -1.5542665 -2.7157996 -1.9395097]]
Iteration 900 of 1000: loss=0.0622 " + "l1=0.0602" + "l2=0.00198 f=-0.706 shape=(1, 9000, 1)
logits [[ 3.298007  -1.5076511 -2.7238913 -1.8892001]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.665 " + "l1=0.665" + "l2=0 f=-0.68 shape=(1, 9000, 1)
logits [[ 4.0325665 -1.8658679 -2.6131544 -2.2737615]]
Iteration 100 of 1000: loss=0.479 " + "l1=0.379" + "l2=0.0996 f=-0.642 shape=(1, 9000, 1)
logits [[ 1.7769288 -1.0863863 -2.012421  -1.2471   ]]
Iteration 200 of 1000: loss=0.331 " + "l1=0.197" + "l2=0.134 f=-0.569 shape=(1, 9000, 1)
logits [[ 0.3672885 -0.6809349 -1.6011473 -0.3608451]]
Iteration 300 of 1000: loss=0.246 " + "l1=0.133" + "l2=0.113 f=-0.555 shape=(1, 9000, 1)
logits [[-0.05577994 -0.72899115 -1.3809879  -0.05448613]]
Iteration 400 of 1000: loss=0.207 " + "l1=0.106" + "l2=0.101 f=-0.528 shape=(1, 9000, 1)
logits [[-0.06170529 -0.8223221  -1.1244444  -0.10536797]]
Iteration 500 of 1000: loss=0.183 " + "l1=0.082" + "l2=0.101 f=-0.507 shape=(1, 9000, 1)
logits [[-0.10787894 -0.8677734  -0.92830616 -0.12405532]]
Iteration 600 of 1000: loss=0.159 " + "l1=0.0597" + "l2=0.0998 f=-0.471 shape=(1, 9000, 1)
logits [[-0.15192637 -0.8653244  -0.73262113 -0.13590395]]
Iteration 700 of 1000: loss=0.124 " + "l1=0.0127" + "l2=0.112 f=-0.445 shape=(1, 9000, 1)
logits [[-0.20320714 -1.0236925  -0.33059567 -0.22235805]]
Iteration 800 of 1000: loss=0.0994 " + "l1=0.000989" + "l2=0.0984 f=-0.421 shape=(1, 9000, 1)
logits [[-0.21950269 -1.0597874  -0.20731649 -0.19742844]]
Iteration 900 of 1000: loss=0.0791 " + "l1=0" + "l2=0.0791 f=-0.395 shape=(1, 9000, 1)
logits [[-0.17887154 -1.070127   -0.16451699 -0.16612601]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.366 " + "l1=0.366" + "l2=0 f=-0.68 shape=(1, 9000, 1)
logits [[ 4.0325665 -1.8658679 -2.6131544 -2.2737615]]
Iteration 100 of 1000: loss=0.337 " + "l1=0.32" + "l2=0.0165 f=-0.707 shape=(1, 9000, 1)
logits [[ 3.149189  -1.4297415 -2.6745906 -1.871596 ]]
Iteration 200 of 1000: loss=0.276 " + "l1=0.216" + "l2=0.0594 f=-0.63 shape=(1, 9000, 1)
logits [[ 1.9483165 -1.1582625 -1.983961  -1.3262826]]
Iteration 300 of 1000: loss=0.225 " + "l1=0.167" + "l2=0.0581 f=-0.615 shape=(1, 9000, 1)
logits [[ 1.2365572  -1.0100626  -1.8028274  -0.88361853]]
Iteration 400 of 1000: loss=0.184 " + "l1=0.125" + "l2=0.059 f=-0.588 shape=(1, 9000, 1)
logits [[ 0.6494309  -1.0409008  -1.6171513  -0.34434703]]
Iteration 500 of 1000: loss=0.15 " + "l1=0.0921" + "l2=0.0578 f=-0.533 shape=(1, 9000, 1)
logits [[ 0.20413628 -0.9589103  -1.4695897   0.09154976]]
Iteration 600 of 1000: loss=0.13 " + "l1=0.0783" + "l2=0.0518 f=-0.499 shape=(1, 9000, 1)
logits [[ 0.13864006 -0.9510155  -1.2850175   0.10019732]]
Iteration 700 of 1000: loss=0.119 " + "l1=0.0688" + "l2=0.0503 f=-0.486 shape=(1, 9000, 1)
logits [[ 0.09495199 -0.94622296 -1.1557173   0.0626816 ]]
Iteration 800 of 1000: loss=0.111 " + "l1=0.0608" + "l2=0.0507 f=-0.476 shape=(1, 9000, 1)
logits [[ 0.06455732 -0.9753572  -1.0409273   0.04577515]]
Iteration 900 of 1000: loss=0.106 " + "l1=0.0554" + "l2=0.0507 f=-0.469 shape=(1, 9000, 1)
logits [[ 0.04812063 -0.99410444 -0.9594481   0.02999651]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.515 " + "l1=0.515" + "l2=0 f=-0.68 shape=(1, 9000, 1)
logits [[ 4.0325665 -1.8658679 -2.6131544 -2.2737615]]
Iteration 100 of 1000: loss=0.409 " + "l1=0.334" + "l2=0.0752 f=-0.649 shape=(1, 9000, 1)
logits [[ 2.2176676 -1.2078179 -2.0945737 -1.5116934]]
Iteration 200 of 1000: loss=0.319 " + "l1=0.233" + "l2=0.0866 f=-0.618 shape=(1, 9000, 1)
logits [[ 1.2226064  -1.0274643  -1.7779275  -0.88817227]]
Iteration 300 of 1000: loss=0.243 " + "l1=0.157" + "l2=0.0853 f=-0.582 shape=(1, 9000, 1)
logits [[ 0.4618524  -1.0046347  -1.5681293  -0.21787542]]
Iteration 400 of 1000: loss=0.192 " + "l1=0.119" + "l2=0.0736 f=-0.545 shape=(1, 9000, 1)
logits [[ 0.11782867 -0.98218083 -1.4157346   0.1014422 ]]
Iteration 500 of 1000: loss=0.161 " + "l1=0.0934" + "l2=0.0678 f=-0.504 shape=(1, 9000, 1)
logits [[ 0.0497235  -0.9738289  -1.1479427   0.05754749]]
Iteration 600 of 1000: loss=0.141 " + "l1=0.0716" + "l2=0.0692 f=-0.482 shape=(1, 9000, 1)
logits [[-0.01472021 -0.9586554  -0.9383892  -0.01452889]]
Iteration 700 of 1000: loss=0.128 " + "l1=0.0589" + "l2=0.0692 f=-0.46 shape=(1, 9000, 1)
logits [[-0.04669978 -0.94188935 -0.804949   -0.04557477]]
Iteration 800 of 1000: loss=0.118 " + "l1=0.0485" + "l2=0.0699 f=-0.435 shape=(1, 9000, 1)
logits [[-0.05710541 -0.9165538  -0.68266875 -0.08188461]]
Iteration 900 of 1000: loss=0.111 " + "l1=0.0396" + "l2=0.0709 f=-0.421 shape=(1, 9000, 1)
logits [[-0.07557206 -0.92745465 -0.58667463 -0.09268899]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.59 " + "l1=0.59" + "l2=0 f=-0.68 shape=(1, 9000, 1)
logits [[ 4.0325665 -1.8658679 -2.6131544 -2.2737615]]
Iteration 100 of 1000: loss=0.445 " + "l1=0.356" + "l2=0.0889 f=-0.646 shape=(1, 9000, 1)
logits [[ 1.9830737 -1.1616077 -2.0315108 -1.3723642]]
Iteration 200 of 1000: loss=0.328 " + "l1=0.223" + "l2=0.104 f=-0.596 shape=(1, 9000, 1)
logits [[ 0.87279487 -1.0384983  -1.6434917  -0.57503957]]
Iteration 300 of 1000: loss=0.249 " + "l1=0.152" + "l2=0.097 f=-0.573 shape=(1, 9000, 1)
logits [[ 2.1100606e-01 -9.9864620e-01 -1.5050089e+00  6.4115971e-04]]
Iteration 400 of 1000: loss=0.202 " + "l1=0.124" + "l2=0.0782 f=-0.541 shape=(1, 9000, 1)
logits [[ 0.08258251 -1.0172334  -1.3118777   0.08289053]]
Iteration 500 of 1000: loss=0.168 " + "l1=0.0921" + "l2=0.0761 f=-0.498 shape=(1, 9000, 1)
logits [[ 0.02849996 -1.0142981  -1.0089065   0.00108445]]
Iteration 600 of 1000: loss=0.144 " + "l1=0.0653" + "l2=0.0791 f=-0.467 shape=(1, 9000, 1)
logits [[-0.04404514 -0.9603489  -0.77933127 -0.08291424]]
Iteration 700 of 1000: loss=0.129 " + "l1=0.0437" + "l2=0.0848 f=-0.433 shape=(1, 9000, 1)
logits [[-0.1131712  -0.90932286 -0.6012038  -0.10843871]]
Iteration 800 of 1000: loss=0.109 " + "l1=0.0113" + "l2=0.0979 f=-0.424 shape=(1, 9000, 1)
logits [[-0.17951608 -1.0483102  -0.29801482 -0.17057326]]
Iteration 900 of 1000: loss=0.0924 " + "l1=0" + "l2=0.0924 f=-0.411 shape=(1, 9000, 1)
logits [[-0.16788    -1.1054847  -0.16478968 -0.20531878]]
--- 288.4690399169922 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0631 " + "l1=0.0631" + "l2=0 f=-0.68 shape=(1, 9000, 1)
logits [[ 4.0325665 -1.8658679 -2.6131544 -2.2737615]]
Iteration 100 of 1000: loss=0.0597 " + "l1=0.0584" + "l2=0.0013 f=-0.69 shape=(1, 9000, 1)
logits [[ 3.7510684 -1.7306153 -2.6921046 -2.0874305]]
Iteration 200 of 1000: loss=0.0578 " + "l1=0.0559" + "l2=0.00185 f=-0.695 shape=(1, 9000, 1)
logits [[ 3.6067286 -1.6657634 -2.735106  -1.9848745]]
Iteration 300 of 1000: loss=0.0555 " + "l1=0.053" + "l2=0.00255 f=-0.701 shape=(1, 9000, 1)
logits [[ 3.4336994 -1.5908517 -2.785744  -1.8614668]]
Iteration 400 of 1000: loss=0.0529 " + "l1=0.0496" + "l2=0.00336 f=-0.708 shape=(1, 9000, 1)
logits [[ 3.2360618 -1.5050617 -2.8421073 -1.7207806]]
Iteration 500 of 1000: loss=0.0497 " + "l1=0.0454" + "l2=0.0043 f=-0.714 shape=(1, 9000, 1)
logits [[ 2.996082  -1.4026029 -2.9034822 -1.5471796]]
Iteration 600 of 1000: loss=0.0463 " + "l1=0.041" + "l2=0.00524 f=-0.721 shape=(1, 9000, 1)
logits [[ 2.742418  -1.2945479 -2.971393  -1.359378 ]]
Iteration 700 of 1000: loss=0.0424 " + "l1=0.0362" + "l2=0.00616 f=-0.724 shape=(1, 9000, 1)
logits [[ 2.4816606 -1.1963724 -3.0393755 -1.1430774]]
Iteration 800 of 1000: loss=0.0384 " + "l1=0.0315" + "l2=0.00697 f=-0.725 shape=(1, 9000, 1)
logits [[ 2.2246666  -1.1056526  -3.0969336  -0.92036194]]
Iteration 900 of 1000: loss=0.0344 " + "l1=0.0267" + "l2=0.00773 f=-0.722 shape=(1, 9000, 1)
logits [[ 1.98651   -1.0531307 -3.1439633 -0.6789687]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.631 " + "l1=0.631" + "l2=0 f=-0.68 shape=(1, 9000, 1)
logits [[ 4.0325665 -1.8658679 -2.6131544 -2.2737615]]
Iteration 100 of 1000: loss=0.236 " + "l1=0.0717" + "l2=0.164 f=-0.707 shape=(1, 9000, 1)
logits [[ 0.83459693 -0.7402997  -3.0406456   0.1180176 ]]
Iteration 200 of 1000: loss=0.0764 " + "l1=0.00293" + "l2=0.0735 f=-0.684 shape=(1, 9000, 1)
logits [[ 0.6267878 -0.8492326 -3.1113145  0.597444 ]]
Iteration 300 of 1000: loss=0.0462 " + "l1=0" + "l2=0.0462 f=-0.66 shape=(1, 9000, 1)
logits [[ 0.61193234 -0.84604746 -3.0479991   0.64076155]]
Iteration 400 of 1000: loss=0.0328 " + "l1=0" + "l2=0.0328 f=-0.644 shape=(1, 9000, 1)
logits [[ 0.6303205  -0.85951644 -3.0019214   0.6546598 ]]
Iteration 500 of 1000: loss=0.0246 " + "l1=0.000431" + "l2=0.0242 f=-0.633 shape=(1, 9000, 1)
logits [[ 0.66000044 -0.8825964  -2.966636    0.65569496]]
Iteration 600 of 1000: loss=0.0193 " + "l1=0" + "l2=0.0193 f=-0.624 shape=(1, 9000, 1)
logits [[ 0.658235  -0.894475  -2.9430811  0.6844181]]
Iteration 700 of 1000: loss=0.0165 " + "l1=0.00111" + "l2=0.0154 f=-0.619 shape=(1, 9000, 1)
logits [[ 0.69404036 -0.91482085 -2.9387145   0.682918  ]]
Iteration 800 of 1000: loss=0.0134 " + "l1=0.00033" + "l2=0.0131 f=-0.614 shape=(1, 9000, 1)
logits [[ 0.7078267 -0.9325542 -2.9369404  0.7045234]]
Iteration 900 of 1000: loss=0.0119 " + "l1=0" + "l2=0.0119 f=-0.609 shape=(1, 9000, 1)
logits [[ 0.71296006 -0.9462014  -2.9433918   0.7390425 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.347 " + "l1=0.347" + "l2=0 f=-0.68 shape=(1, 9000, 1)
logits [[ 4.0325665 -1.8658679 -2.6131544 -2.2737615]]
Iteration 100 of 1000: loss=0.229 " + "l1=0.176" + "l2=0.0529 f=-0.734 shape=(1, 9000, 1)
logits [[ 2.20452   -1.0829849 -3.0551245 -1.0042355]]
Iteration 200 of 1000: loss=0.117 " + "l1=0.0404" + "l2=0.0769 f=-0.706 shape=(1, 9000, 1)
logits [[ 0.9141996  -0.8334733  -3.082719    0.17875957]]
Iteration 300 of 1000: loss=0.0524 " + "l1=0.000476" + "l2=0.052 f=-0.676 shape=(1, 9000, 1)
logits [[ 0.65249765 -0.8588452  -3.140411    0.643839  ]]
Iteration 400 of 1000: loss=0.0352 " + "l1=0.000184" + "l2=0.035 f=-0.661 shape=(1, 9000, 1)
logits [[ 0.66567767 -0.86112726 -3.1121762   0.66232675]]
Iteration 500 of 1000: loss=0.0258 " + "l1=0.000764" + "l2=0.025 f=-0.647 shape=(1, 9000, 1)
logits [[ 0.6873141  -0.88251233 -3.068229    0.6734276 ]]
Iteration 600 of 1000: loss=0.0193 " + "l1=0" + "l2=0.0193 f=-0.635 shape=(1, 9000, 1)
logits [[ 0.6873145 -0.8997344 -3.0326653  0.7053979]]
Iteration 700 of 1000: loss=0.0153 " + "l1=0" + "l2=0.0153 f=-0.625 shape=(1, 9000, 1)
logits [[ 0.7063964  -0.91603917 -3.0000854   0.7116999 ]]
Iteration 800 of 1000: loss=0.0131 " + "l1=0.000384" + "l2=0.0127 f=-0.617 shape=(1, 9000, 1)
logits [[ 0.7266279 -0.9324718 -2.9809065  0.7196457]]
Iteration 900 of 1000: loss=0.0114 " + "l1=0" + "l2=0.0114 f=-0.611 shape=(1, 9000, 1)
logits [[ 0.7246897 -0.9430265 -2.9794006  0.7537225]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.205 " + "l1=0.205" + "l2=0 f=-0.68 shape=(1, 9000, 1)
logits [[ 4.0325665 -1.8658679 -2.6131544 -2.2737615]]
Iteration 100 of 1000: loss=0.167 " + "l1=0.151" + "l2=0.0167 f=-0.718 shape=(1, 9000, 1)
logits [[ 3.024703  -1.4043156 -2.879607  -1.6130078]]
Iteration 200 of 1000: loss=0.133 " + "l1=0.106" + "l2=0.0264 f=-0.73 shape=(1, 9000, 1)
logits [[ 2.2547312 -1.1138797 -3.0465286 -1.0153512]]
Iteration 300 of 1000: loss=0.0917 " + "l1=0.0556" + "l2=0.0362 f=-0.724 shape=(1, 9000, 1)
logits [[ 1.4314789  -0.89528924 -3.153805   -0.2786214 ]]
Iteration 400 of 1000: loss=0.0517 " + "l1=0.00724" + "l2=0.0445 f=-0.683 shape=(1, 9000, 1)
logits [[ 0.74119693 -0.858036   -3.1332824   0.51848483]]
Iteration 500 of 1000: loss=0.0309 " + "l1=0" + "l2=0.0309 f=-0.657 shape=(1, 9000, 1)
logits [[ 0.66934705 -0.88849866 -3.0915036   0.6827881 ]]
Iteration 600 of 1000: loss=0.0218 " + "l1=0" + "l2=0.0218 f=-0.642 shape=(1, 9000, 1)
logits [[ 0.6877161  -0.90077907 -3.0429468   0.688348  ]]
Iteration 700 of 1000: loss=0.0171 " + "l1=0" + "l2=0.0171 f=-0.631 shape=(1, 9000, 1)
logits [[ 0.6958043  -0.9099623  -3.025963    0.71574676]]
Iteration 800 of 1000: loss=0.014 " + "l1=0.000136" + "l2=0.0138 f=-0.624 shape=(1, 9000, 1)
logits [[ 0.7221745  -0.9239743  -3.0126703   0.71798295]]
Iteration 900 of 1000: loss=0.0121 " + "l1=0.000204" + "l2=0.0119 f=-0.618 shape=(1, 9000, 1)
logits [[ 0.736314  -0.9333833 -3.0030413  0.7300489]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.134 " + "l1=0.134" + "l2=0 f=-0.68 shape=(1, 9000, 1)
logits [[ 4.0325665 -1.8658679 -2.6131544 -2.2737615]]
Iteration 100 of 1000: loss=0.119 " + "l1=0.112" + "l2=0.00638 f=-0.704 shape=(1, 9000, 1)
logits [[ 3.412136  -1.5696611 -2.7874556 -1.8705323]]
Iteration 200 of 1000: loss=0.106 " + "l1=0.0961" + "l2=0.0104 f=-0.719 shape=(1, 9000, 1)
logits [[ 2.968124  -1.3914616 -2.8984165 -1.5536768]]
Iteration 300 of 1000: loss=0.0909 " + "l1=0.0763" + "l2=0.0146 f=-0.729 shape=(1, 9000, 1)
logits [[ 2.4420593 -1.18692   -3.0241797 -1.1465492]]
Iteration 400 of 1000: loss=0.0733 " + "l1=0.0542" + "l2=0.0191 f=-0.728 shape=(1, 9000, 1)
logits [[ 1.8881022 -1.0106683 -3.1282568 -0.6615129]]
Iteration 500 of 1000: loss=0.0554 " + "l1=0.0324" + "l2=0.023 f=-0.718 shape=(1, 9000, 1)
logits [[ 1.3859155  -0.92451054 -3.193303   -0.14058092]]
Iteration 600 of 1000: loss=0.0375 " + "l1=0.011" + "l2=0.0265 f=-0.68 shape=(1, 9000, 1)
logits [[ 0.9162584  -0.8947227  -3.1373386   0.39684397]]
Iteration 700 of 1000: loss=0.0228 " + "l1=0" + "l2=0.0228 f=-0.63 shape=(1, 9000, 1)
logits [[ 0.68241274 -0.88720375 -3.00203     0.6858585 ]]
Iteration 800 of 1000: loss=0.0171 " + "l1=0" + "l2=0.0171 f=-0.618 shape=(1, 9000, 1)
logits [[ 0.7026063 -0.8988244 -2.981133   0.7050944]]
Iteration 900 of 1000: loss=0.0138 " + "l1=0" + "l2=0.0138 f=-0.61 shape=(1, 9000, 1)
logits [[ 0.72139096 -0.90522677 -2.9801078   0.7226584 ]]
--- 290.2100396156311 seconds ---
Adv result:3
Loading record A02150
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0693 " + "l1=0.0693" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.9877758 -2.9439387  2.7829785 -5.850112 ]]
Iteration 100 of 1000: loss=0.0689 " + "l1=0.0686" + "l2=0.000277 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.947215  -2.9174612  2.7616792 -5.8092804]]
Iteration 200 of 1000: loss=0.0688 " + "l1=0.0685" + "l2=0.000275 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.9415388 -2.9125576  2.7577796 -5.803291 ]]
Iteration 300 of 1000: loss=0.0687 " + "l1=0.0684" + "l2=0.000326 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.933991  -2.9064782  2.7528608 -5.795377 ]]
Iteration 400 of 1000: loss=0.0687 " + "l1=0.0683" + "l2=0.000414 f=-0.503 shape=(1, 9000, 1)
logits [[ 3.9264183 -2.9002926  2.747666  -5.7871213]]
Iteration 500 of 1000: loss=0.0686 " + "l1=0.0681" + "l2=0.000483 f=-0.503 shape=(1, 9000, 1)
logits [[ 3.91887   -2.8943133  2.742442  -5.778723 ]]
Iteration 600 of 1000: loss=0.0686 " + "l1=0.068" + "l2=0.000597 f=-0.503 shape=(1, 9000, 1)
logits [[ 3.9111967 -2.8884263  2.7372952 -5.770198 ]]
Iteration 700 of 1000: loss=0.0686 " + "l1=0.0679" + "l2=0.000691 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.9033697 -2.8827944  2.732466  -5.7615438]]
Iteration 800 of 1000: loss=0.0685 " + "l1=0.0677" + "l2=0.000802 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.8953805 -2.8776267  2.727966  -5.752518 ]]
Iteration 900 of 1000: loss=0.0685 " + "l1=0.0676" + "l2=0.000879 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.8873858 -2.8726783  2.7236319 -5.743368 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.693 " + "l1=0.693" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.9877758 -2.9439387  2.7829785 -5.850112 ]]
Iteration 100 of 1000: loss=0.659 " + "l1=0.642" + "l2=0.0172 f=-0.498 shape=(1, 9000, 1)
logits [[ 3.6836243 -2.7384176  2.623111  -5.5608573]]
Iteration 200 of 1000: loss=0.643 " + "l1=0.618" + "l2=0.0244 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.5379734 -2.6442676  2.5435603 -5.409044 ]]
Iteration 300 of 1000: loss=0.627 " + "l1=0.596" + "l2=0.0305 f=-0.484 shape=(1, 9000, 1)
logits [[ 3.400575  -2.5628364  2.4784193 -5.2507067]]
Iteration 400 of 1000: loss=0.613 " + "l1=0.577" + "l2=0.0358 f=-0.473 shape=(1, 9000, 1)
logits [[ 3.2764227 -2.496415   2.4276032 -5.0997458]]
Iteration 500 of 1000: loss=0.601 " + "l1=0.562" + "l2=0.039 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.1725426 -2.4442797  2.387721  -4.967986 ]]
Iteration 600 of 1000: loss=0.588 " + "l1=0.547" + "l2=0.0411 f=-0.452 shape=(1, 9000, 1)
logits [[ 3.0721164 -2.3966308  2.3499274 -4.8318577]]
Iteration 700 of 1000: loss=0.574 " + "l1=0.529" + "l2=0.0444 f=-0.44 shape=(1, 9000, 1)
logits [[ 2.9556446 -2.3374817  2.3030672 -4.6802373]]
Iteration 800 of 1000: loss=0.557 " + "l1=0.508" + "l2=0.0488 f=-0.427 shape=(1, 9000, 1)
logits [[ 2.8188076 -2.2582033  2.2404041 -4.5089846]]
Iteration 900 of 1000: loss=0.537 " + "l1=0.483" + "l2=0.053 f=-0.413 shape=(1, 9000, 1)
logits [[ 2.6712656 -2.1635869  2.1640322 -4.3228617]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.93 " + "l1=6.93" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.9877758 -2.9439387  2.7829785 -5.850112 ]]
Iteration 100 of 1000: loss=4.24 " + "l1=3.09" + "l2=1.15 f=-0.326 shape=(1, 9000, 1)
logits [[ 1.6324673 -1.4559027  1.6328049 -3.114145 ]]
Iteration 200 of 1000: loss=3.04 " + "l1=1.69" + "l2=1.35 f=-0.252 shape=(1, 9000, 1)
logits [[ 0.964706   -0.72809964  0.9665839  -2.2109513 ]]
Iteration 300 of 1000: loss=2.37 " + "l1=1.07" + "l2=1.3 f=-0.216 shape=(1, 9000, 1)
logits [[ 0.61817586 -0.4361039   0.63676566 -1.6838653 ]]
Iteration 400 of 1000: loss=1.92 " + "l1=0.656" + "l2=1.27 f=-0.2 shape=(1, 9000, 1)
logits [[ 0.36178797 -0.22021094  0.43586302 -1.3763981 ]]
Iteration 500 of 1000: loss=1.65 " + "l1=0.457" + "l2=1.19 f=-0.188 shape=(1, 9000, 1)
logits [[ 0.23176733 -0.11239693  0.34463042 -1.2154303 ]]
Iteration 600 of 1000: loss=1.44 " + "l1=0.263" + "l2=1.17 f=-0.187 shape=(1, 9000, 1)
logits [[ 0.06233611 -0.01656177  0.24681109 -1.0386682 ]]
Iteration 700 of 1000: loss=1.28 " + "l1=0.149" + "l2=1.13 f=-0.186 shape=(1, 9000, 1)
logits [[-0.03428086  0.03292645  0.18169056 -0.9256143 ]]
Iteration 800 of 1000: loss=1.1 " + "l1=0" + "l2=1.1 f=-0.19 shape=(1, 9000, 1)
logits [[-0.20303944  0.11324044  0.11054173 -0.78165704]]
Iteration 900 of 1000: loss=0.978 " + "l1=0" + "l2=0.978 f=-0.182 shape=(1, 9000, 1)
logits [[-0.20149282  0.07479104  0.07350715 -0.676355  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.81 " + "l1=3.81" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.9877758 -2.9439387  2.7829785 -5.850112 ]]
Iteration 100 of 1000: loss=2.88 " + "l1=2.45" + "l2=0.435 f=-0.409 shape=(1, 9000, 1)
logits [[ 2.4150991 -2.0338185  2.113001  -4.1302843]]
Iteration 200 of 1000: loss=2.42 " + "l1=1.87" + "l2=0.55 f=-0.345 shape=(1, 9000, 1)
logits [[ 1.7543122 -1.6514935  1.7481945 -3.230483 ]]
Iteration 300 of 1000: loss=1.94 " + "l1=1.31" + "l2=0.627 f=-0.275 shape=(1, 9000, 1)
logits [[ 1.2739837 -1.1042659  1.2803261 -2.5500848]]
Iteration 400 of 1000: loss=1.61 " + "l1=1.03" + "l2=0.581 f=-0.225 shape=(1, 9000, 1)
logits [[ 1.0570385 -0.8100821  1.0583401 -2.2054737]]
Iteration 500 of 1000: loss=1.37 " + "l1=0.792" + "l2=0.581 f=-0.193 shape=(1, 9000, 1)
logits [[ 0.824107   -0.60100836  0.838154   -1.8328081 ]]
Iteration 600 of 1000: loss=1.22 " + "l1=0.631" + "l2=0.59 f=-0.173 shape=(1, 9000, 1)
logits [[ 0.677829   -0.45324492  0.6936338  -1.6103102 ]]
Iteration 700 of 1000: loss=1.1 " + "l1=0.517" + "l2=0.584 f=-0.159 shape=(1, 9000, 1)
logits [[ 0.5790348  -0.35501367  0.58482444 -1.4449898 ]]
Iteration 800 of 1000: loss=1.03 " + "l1=0.451" + "l2=0.576 f=-0.149 shape=(1, 9000, 1)
logits [[ 0.50699055 -0.30617324  0.51409847 -1.309038  ]]
Iteration 900 of 1000: loss=0.957 " + "l1=0.382" + "l2=0.575 f=-0.14 shape=(1, 9000, 1)
logits [[ 0.36985716 -0.25370464  0.44040385 -1.1177092 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.37 " + "l1=5.37" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.9877758 -2.9439387  2.7829785 -5.850112 ]]
Iteration 100 of 1000: loss=3.61 " + "l1=2.77" + "l2=0.842 f=-0.356 shape=(1, 9000, 1)
logits [[ 1.8662573 -1.7106124  1.86624   -3.444214 ]]
Iteration 200 of 1000: loss=2.74 " + "l1=1.76" + "l2=0.977 f=-0.284 shape=(1, 9000, 1)
logits [[ 1.2220154 -1.0467236  1.2226199 -2.5345168]]
Iteration 300 of 1000: loss=2.21 " + "l1=1.22" + "l2=0.991 f=-0.229 shape=(1, 9000, 1)
logits [[ 0.8925552  -0.67402023  0.89863735 -2.0349948 ]]
Iteration 400 of 1000: loss=1.86 " + "l1=0.911" + "l2=0.944 f=-0.217 shape=(1, 9000, 1)
logits [[ 0.6723771 -0.501216   0.6744018 -1.7140884]]
Iteration 500 of 1000: loss=1.59 " + "l1=0.623" + "l2=0.962 f=-0.197 shape=(1, 9000, 1)
logits [[ 0.45248553 -0.3131725   0.49111062 -1.4184495 ]]
Iteration 600 of 1000: loss=1.44 " + "l1=0.505" + "l2=0.932 f=-0.186 shape=(1, 9000, 1)
logits [[ 0.3647275  -0.24430434  0.40714383 -1.2735462 ]]
Iteration 700 of 1000: loss=1.34 " + "l1=0.438" + "l2=0.9 f=-0.179 shape=(1, 9000, 1)
logits [[ 0.30699593 -0.21164462  0.3536641  -1.1661135 ]]
Iteration 800 of 1000: loss=1.21 " + "l1=0.293" + "l2=0.914 f=-0.177 shape=(1, 9000, 1)
logits [[ 0.14369768 -0.11026891  0.26743516 -1.0086778 ]]
Iteration 900 of 1000: loss=1.06 " + "l1=0.157" + "l2=0.899 f=-0.181 shape=(1, 9000, 1)
logits [[ 0.02310785 -0.02527778  0.17789213 -0.8979266 ]]
--- 290.23572158813477 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.012 " + "l1=0.012" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.9877758 -2.9439387  2.7829785 -5.850112 ]]
Iteration 100 of 1000: loss=0.0119 " + "l1=0.0117" + "l2=0.000162 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.9605474 -2.9487875  2.7884777 -5.8213377]]
Iteration 200 of 1000: loss=0.0118 " + "l1=0.0117" + "l2=0.00013 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.959382  -2.949348   2.7891176 -5.819644 ]]
Iteration 300 of 1000: loss=0.0118 " + "l1=0.0117" + "l2=0.00017 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.95574   -2.9507947  2.7905736 -5.8153796]]
Iteration 400 of 1000: loss=0.0118 " + "l1=0.0116" + "l2=0.000184 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.9517035 -2.9523194  2.7920885 -5.810705 ]]
Iteration 500 of 1000: loss=0.0118 " + "l1=0.0115" + "l2=0.000274 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.9479537 -2.953838   2.793413  -5.8062997]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.12 " + "l1=0.12" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.9877758 -2.9439387  2.7829785 -5.850112 ]]
Iteration 100 of 1000: loss=0.106 " + "l1=0.0984" + "l2=0.00736 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.8051934 -2.9757977  2.8206987 -5.6663136]]
Iteration 200 of 1000: loss=0.0982 " + "l1=0.0873" + "l2=0.0109 f=-0.503 shape=(1, 9000, 1)
logits [[ 3.7182305 -2.9924095  2.8452568 -5.583633 ]]
Iteration 300 of 1000: loss=0.0908 " + "l1=0.0756" + "l2=0.0153 f=-0.503 shape=(1, 9000, 1)
logits [[ 3.624343  -3.0107543  2.8685026 -5.4929714]]
Iteration 400 of 1000: loss=0.0842 " + "l1=0.0653" + "l2=0.0189 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.543618  -3.026011   2.8910284 -5.4178567]]
Iteration 500 of 1000: loss=0.0784 " + "l1=0.0561" + "l2=0.0222 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.4714336 -3.0375202  2.9100766 -5.350905 ]]
Iteration 600 of 1000: loss=0.0726 " + "l1=0.0478" + "l2=0.0247 f=-0.5 shape=(1, 9000, 1)
logits [[ 3.3986511 -3.0406113  2.9203322 -5.279363 ]]
Iteration 700 of 1000: loss=0.0665 " + "l1=0.0399" + "l2=0.0266 f=-0.497 shape=(1, 9000, 1)
logits [[ 3.3273227 -3.0436327  2.9283435 -5.2004395]]
Iteration 800 of 1000: loss=0.0595 " + "l1=0.0319" + "l2=0.0276 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.2525122 -3.0456104  2.9330518 -5.1107354]]
Iteration 900 of 1000: loss=0.0532 " + "l1=0.0247" + "l2=0.0285 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.187096  -3.0473313  2.9404454 -5.0333266]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.2 " + "l1=1.2" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.9877758 -2.9439387  2.7829785 -5.850112 ]]
Iteration 100 of 1000: loss=0.182 " + "l1=0.00583" + "l2=0.177 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.0129163 -3.09402    3.0070896 -4.891231 ]]
Iteration 200 of 1000: loss=0.116 " + "l1=0.000488" + "l2=0.116 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.0277605 -3.1047523  3.0272727 -4.908121 ]]
Iteration 300 of 1000: loss=0.0941 " + "l1=0" + "l2=0.0941 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.0297663 -3.113383   3.0380569 -4.907495 ]]
Iteration 400 of 1000: loss=0.0804 " + "l1=0" + "l2=0.0804 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.0259867 -3.114024   3.0379064 -4.8997154]]
Iteration 500 of 1000: loss=0.0688 " + "l1=0" + "l2=0.0688 f=-0.486 shape=(1, 9000, 1)
logits [[ 3.0214803 -3.1094804  3.0299041 -4.887042 ]]
Iteration 600 of 1000: loss=0.06 " + "l1=0" + "l2=0.06 f=-0.485 shape=(1, 9000, 1)
logits [[ 3.0160942 -3.1092172  3.0243852 -4.8719234]]
Iteration 700 of 1000: loss=0.0524 " + "l1=0" + "l2=0.0524 f=-0.485 shape=(1, 9000, 1)
logits [[ 3.010104 -3.109125  3.01741  -4.859964]]
Iteration 800 of 1000: loss=0.0455 " + "l1=0" + "l2=0.0455 f=-0.486 shape=(1, 9000, 1)
logits [[ 3.0094478 -3.1094813  3.009578  -4.8542624]]
Iteration 900 of 1000: loss=0.0424 " + "l1=0" + "l2=0.0424 f=-0.487 shape=(1, 9000, 1)
logits [[ 2.9918082 -3.113123   3.007239  -4.832824 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.663 " + "l1=0.663" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.9877758 -2.9439387  2.7829785 -5.850112 ]]
Iteration 100 of 1000: loss=0.19 " + "l1=0.00134" + "l2=0.188 f=-0.497 shape=(1, 9000, 1)
logits [[ 3.0184033 -3.089849   3.0159733 -4.931648 ]]
Iteration 200 of 1000: loss=0.112 " + "l1=0" + "l2=0.112 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.035071  -3.1096373  3.0373428 -4.9301734]]
Iteration 300 of 1000: loss=0.0906 " + "l1=0" + "l2=0.0906 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.0344656 -3.1154633  3.0461097 -4.91647  ]]
Iteration 400 of 1000: loss=0.0742 " + "l1=0" + "l2=0.0742 f=-0.486 shape=(1, 9000, 1)
logits [[ 3.0362682 -3.1123664  3.039957  -4.90812  ]]
Iteration 500 of 1000: loss=0.0628 " + "l1=0" + "l2=0.0628 f=-0.484 shape=(1, 9000, 1)
logits [[ 3.0266714 -3.110138   3.0319946 -4.8845825]]
Iteration 600 of 1000: loss=0.0533 " + "l1=0" + "l2=0.0533 f=-0.483 shape=(1, 9000, 1)
logits [[ 3.0241978 -3.1142986  3.0275128 -4.869171 ]]
Iteration 700 of 1000: loss=0.0463 " + "l1=0" + "l2=0.0463 f=-0.483 shape=(1, 9000, 1)
logits [[ 3.0183413 -3.1152747  3.0204008 -4.856619 ]]
Iteration 800 of 1000: loss=0.0413 " + "l1=0" + "l2=0.0413 f=-0.484 shape=(1, 9000, 1)
logits [[ 3.0067258 -3.1139755  3.011603  -4.839526 ]]
Iteration 900 of 1000: loss=0.0368 " + "l1=0" + "l2=0.0368 f=-0.485 shape=(1, 9000, 1)
logits [[ 2.9988074 -3.1101446  3.0006578 -4.8280277]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.392 " + "l1=0.392" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.9877758 -2.9439387  2.7829785 -5.850112 ]]
Iteration 100 of 1000: loss=0.221 " + "l1=0.134" + "l2=0.0874 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.34479   -3.0329132  2.933072  -5.2684484]]
Iteration 200 of 1000: loss=0.128 " + "l1=0.00531" + "l2=0.123 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.0524952 -3.1052263  3.036155  -4.965022 ]]
Iteration 300 of 1000: loss=0.0913 " + "l1=0.00196" + "l2=0.0893 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.0548413 -3.1185703  3.0487998 -4.940055 ]]
Iteration 400 of 1000: loss=0.0737 " + "l1=0" + "l2=0.0737 f=-0.486 shape=(1, 9000, 1)
logits [[ 3.0412178 -3.1156988  3.043342  -4.912365 ]]
Iteration 500 of 1000: loss=0.0612 " + "l1=0.000263" + "l2=0.0609 f=-0.483 shape=(1, 9000, 1)
logits [[ 3.034704  -3.1116436  3.033894  -4.8904605]]
Iteration 600 of 1000: loss=0.0522 " + "l1=0" + "l2=0.0522 f=-0.482 shape=(1, 9000, 1)
logits [[ 3.022138  -3.1150177  3.0291595 -4.863851 ]]
Iteration 700 of 1000: loss=0.0445 " + "l1=2.04e-05" + "l2=0.0445 f=-0.482 shape=(1, 9000, 1)
logits [[ 3.0182405 -3.1139991  3.0181777 -4.8513155]]
Iteration 800 of 1000: loss=0.0403 " + "l1=0.00164" + "l2=0.0386 f=-0.483 shape=(1, 9000, 1)
logits [[ 3.0115852 -3.1109197  3.0065327 -4.839657 ]]
Iteration 900 of 1000: loss=0.0355 " + "l1=0.000667" + "l2=0.0348 f=-0.484 shape=(1, 9000, 1)
logits [[ 3.00009   -3.1092043  2.998039  -4.8245287]]
--- 263.6802976131439 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0984 " + "l1=0.0984" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.9877758 -2.9439387  2.7829785 -5.850112 ]]
Iteration 100 of 1000: loss=0.0975 " + "l1=0.0969" + "l2=0.000535 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.927447  -2.9317296  2.7657683 -5.7675495]]
Iteration 200 of 1000: loss=0.0972 " + "l1=0.0966" + "l2=0.000591 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.914294  -2.9288116  2.7619421 -5.7495503]]
Iteration 300 of 1000: loss=0.097 " + "l1=0.0963" + "l2=0.000727 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.8987625 -2.9256043  2.7573197 -5.7283163]]
Iteration 400 of 1000: loss=0.0968 " + "l1=0.0959" + "l2=0.000869 f=-0.498 shape=(1, 9000, 1)
logits [[ 3.883638  -2.9223485  2.752477  -5.70744  ]]
Iteration 500 of 1000: loss=0.0966 " + "l1=0.0956" + "l2=0.00102 f=-0.497 shape=(1, 9000, 1)
logits [[ 3.869026  -2.9191382  2.7476904 -5.6870193]]
Iteration 600 of 1000: loss=0.0964 " + "l1=0.0952" + "l2=0.00117 f=-0.496 shape=(1, 9000, 1)
logits [[ 3.8543625 -2.9158833  2.7428443 -5.666659 ]]
Iteration 700 of 1000: loss=0.0962 " + "l1=0.0949" + "l2=0.00134 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.8396387 -2.9125652  2.7382925 -5.6469197]]
Iteration 800 of 1000: loss=0.0959 " + "l1=0.0945" + "l2=0.00143 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.8243444 -2.9089866  2.733623  -5.626623 ]]
Iteration 900 of 1000: loss=0.0958 " + "l1=0.0942" + "l2=0.00162 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.808994  -2.9053648  2.7290444 -5.6061826]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.984 " + "l1=0.984" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.9877758 -2.9439387  2.7829785 -5.850112 ]]
Iteration 100 of 1000: loss=0.902 " + "l1=0.861" + "l2=0.041 f=-0.471 shape=(1, 9000, 1)
logits [[ 3.4587824 -2.826714   2.6330485 -5.14892  ]]
Iteration 200 of 1000: loss=0.858 " + "l1=0.797" + "l2=0.0608 f=-0.452 shape=(1, 9000, 1)
logits [[ 3.185436  -2.7529068  2.547746  -4.786431 ]]
Iteration 300 of 1000: loss=0.819 " + "l1=0.74" + "l2=0.0794 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.9381843 -2.6863253  2.468549  -4.4609175]]
Iteration 400 of 1000: loss=0.783 " + "l1=0.689" + "l2=0.0938 f=-0.42 shape=(1, 9000, 1)
logits [[ 2.7156386 -2.618639   2.395346  -4.1740494]]
Iteration 500 of 1000: loss=0.745 " + "l1=0.641" + "l2=0.104 f=-0.403 shape=(1, 9000, 1)
logits [[ 2.512865  -2.5600677  2.328922  -3.8953798]]
Iteration 600 of 1000: loss=0.704 " + "l1=0.584" + "l2=0.12 f=-0.384 shape=(1, 9000, 1)
logits [[ 2.278028  -2.4915435  2.2441554 -3.565975 ]]
Iteration 700 of 1000: loss=0.666 " + "l1=0.545" + "l2=0.121 f=-0.365 shape=(1, 9000, 1)
logits [[ 2.128832  -2.3987956  2.1295633 -3.3194385]]
Iteration 800 of 1000: loss=0.632 " + "l1=0.51" + "l2=0.122 f=-0.345 shape=(1, 9000, 1)
logits [[ 2.0017304 -2.2911074  2.0029004 -3.0944645]]
Iteration 900 of 1000: loss=0.598 " + "l1=0.471" + "l2=0.127 f=-0.326 shape=(1, 9000, 1)
logits [[ 1.856687  -2.1658983  1.859934  -2.854797 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.84 " + "l1=9.84" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.9877758 -2.9439387  2.7829785 -5.850112 ]]
Iteration 100 of 1000: loss=4.22 " + "l1=1.96" + "l2=2.26 f=-0.21 shape=(1, 9000, 1)
logits [[ 0.59358406 -1.6031792   1.0658308  -0.89466864]]
Iteration 200 of 1000: loss=2.04 " + "l1=0.0471" + "l2=2 f=-0.166 shape=(1, 9000, 1)
logits [[-0.2483777  -1.1662116   0.39906868  0.35201237]]
Iteration 300 of 1000: loss=1.47 " + "l1=0.0188" + "l2=1.45 f=-0.145 shape=(1, 9000, 1)
logits [[-0.21072635 -1.1626537   0.40616283  0.3873908 ]]
Iteration 400 of 1000: loss=1.21 " + "l1=0.0267" + "l2=1.19 f=-0.127 shape=(1, 9000, 1)
logits [[-0.14192949 -1.1396121   0.39978772  0.37307507]]
Iteration 500 of 1000: loss=1.06 " + "l1=0" + "l2=1.06 f=-0.111 shape=(1, 9000, 1)
logits [[-0.12593871 -1.0929842   0.36911193  0.40474135]]
Iteration 600 of 1000: loss=0.948 " + "l1=0" + "l2=0.948 f=-0.109 shape=(1, 9000, 1)
logits [[-0.09389353 -1.0950294   0.37563324  0.37585214]]
Iteration 700 of 1000: loss=0.872 " + "l1=0" + "l2=0.872 f=-0.109 shape=(1, 9000, 1)
logits [[-0.08111841 -1.102379    0.37119436  0.377702  ]]
Iteration 800 of 1000: loss=0.818 " + "l1=0.0146" + "l2=0.803 f=-0.109 shape=(1, 9000, 1)
logits [[-0.06370899 -1.1176406   0.3793072   0.36465973]]
Iteration 900 of 1000: loss=0.764 " + "l1=0" + "l2=0.764 f=-0.111 shape=(1, 9000, 1)
logits [[-0.08254407 -1.1334963   0.3711659   0.40117157]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.41 " + "l1=5.41" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.9877758 -2.9439387  2.7829785 -5.850112 ]]
Iteration 100 of 1000: loss=3.26 " + "l1=2.47" + "l2=0.796 f=-0.32 shape=(1, 9000, 1)
logits [[ 1.7742631 -2.2226233  1.8261342 -2.6581843]]
Iteration 200 of 1000: loss=2.22 " + "l1=1.04" + "l2=1.18 f=-0.201 shape=(1, 9000, 1)
logits [[ 0.63404226 -1.5963745   1.0224749  -0.8644282 ]]
Iteration 300 of 1000: loss=1.45 " + "l1=0.172" + "l2=1.28 f=-0.136 shape=(1, 9000, 1)
logits [[-0.05577718 -1.20529     0.51468056  0.20196763]]
Iteration 400 of 1000: loss=1.06 " + "l1=0.00175" + "l2=1.06 f=-0.113 shape=(1, 9000, 1)
logits [[-0.13951853 -1.1334789   0.41119903  0.40801784]]
Iteration 500 of 1000: loss=0.87 " + "l1=0.00883" + "l2=0.861 f=-0.111 shape=(1, 9000, 1)
logits [[-0.1104822  -1.135931    0.40871415  0.39266348]]
Iteration 600 of 1000: loss=0.766 " + "l1=0.0127" + "l2=0.754 f=-0.11 shape=(1, 9000, 1)
logits [[-0.09483774 -1.1425794   0.4105763   0.3874855 ]]
Iteration 700 of 1000: loss=0.692 " + "l1=0" + "l2=0.692 f=-0.11 shape=(1, 9000, 1)
logits [[-0.10084624 -1.1526469   0.40116087  0.41289482]]
Iteration 800 of 1000: loss=0.639 " + "l1=0.00722" + "l2=0.632 f=-0.113 shape=(1, 9000, 1)
logits [[-0.08557751 -1.1686392   0.40833154  0.3952082 ]]
Iteration 900 of 1000: loss=0.59 " + "l1=0" + "l2=0.59 f=-0.118 shape=(1, 9000, 1)
logits [[-0.09119063 -1.1871444   0.40293905  0.40375248]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.2 " + "l1=3.2" + "l2=0 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.9877758 -2.9439387  2.7829785 -5.850112 ]]
Iteration 100 of 1000: loss=2.29 " + "l1=1.85" + "l2=0.446 f=-0.389 shape=(1, 9000, 1)
logits [[ 2.2108262 -2.5229397  2.220552  -3.4644182]]
Iteration 200 of 1000: loss=1.94 " + "l1=1.5" + "l2=0.44 f=-0.335 shape=(1, 9000, 1)
logits [[ 1.8411233 -2.2420871  1.843405  -2.783364 ]]
Iteration 300 of 1000: loss=1.58 " + "l1=1.01" + "l2=0.57 f=-0.261 shape=(1, 9000, 1)
logits [[ 1.2210555 -1.8734331  1.3608346 -1.7527292]]
Iteration 400 of 1000: loss=1.24 " + "l1=0.593" + "l2=0.649 f=-0.193 shape=(1, 9000, 1)
logits [[ 0.68160075 -1.5381588   0.95456797 -0.8715192 ]]
Iteration 500 of 1000: loss=1.01 " + "l1=0.296" + "l2=0.711 f=-0.131 shape=(1, 9000, 1)
logits [[ 0.2578002  -1.265967    0.69785243 -0.21349886]]
Iteration 600 of 1000: loss=0.809 " + "l1=0.0791" + "l2=0.73 f=-0.0916 shape=(1, 9000, 1)
logits [[-0.03531948 -1.0722095   0.49224776  0.24895182]]
Iteration 700 of 1000: loss=0.652 " + "l1=0.00535" + "l2=0.646 f=-0.072 shape=(1, 9000, 1)
logits [[-0.09676344 -1.0081443   0.41677308  0.40032086]]
Iteration 800 of 1000: loss=0.554 " + "l1=0" + "l2=0.554 f=-0.0631 shape=(1, 9000, 1)
logits [[-0.09549762 -0.9948874   0.41755077  0.42039996]]
Iteration 900 of 1000: loss=0.484 " + "l1=0" + "l2=0.484 f=-0.0619 shape=(1, 9000, 1)
logits [[-0.10847925 -1.0038737   0.42767617  0.43693426]]
--- 296.8051393032074 seconds ---
Adv result:3
Loading record A02159
(1, 3818)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0106 " + "l1=0.0106" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[ 1.9355465   0.8760108  -0.10597792 -5.9843326 ]]
Iteration 100 of 1000: loss=0.00958 " + "l1=0.00904" + "l2=0.000535 f=-0.819 shape=(1, 9000, 1)
logits [[ 1.8453462   0.9413094  -0.12004393 -5.9434633 ]]
Iteration 200 of 1000: loss=0.00921 " + "l1=0.00856" + "l2=0.000655 f=-0.819 shape=(1, 9000, 1)
logits [[ 1.8149346   0.9590461  -0.12355837 -5.9244995 ]]
Iteration 300 of 1000: loss=0.00891 " + "l1=0.00809" + "l2=0.000817 f=-0.817 shape=(1, 9000, 1)
logits [[ 1.783865    0.97470856 -0.12607004 -5.9018745 ]]
Iteration 400 of 1000: loss=0.00863 " + "l1=0.00765" + "l2=0.000987 f=-0.816 shape=(1, 9000, 1)
logits [[ 1.7530982   0.9883617  -0.12711194 -5.8778453 ]]
Iteration 500 of 1000: loss=0.00839 " + "l1=0.00721" + "l2=0.00118 f=-0.814 shape=(1, 9000, 1)
logits [[ 1.7221485  1.0010312 -0.1274522 -5.852861 ]]
Iteration 600 of 1000: loss=0.00809 " + "l1=0.00674" + "l2=0.00135 f=-0.812 shape=(1, 9000, 1)
logits [[ 1.6867632   1.0131501  -0.12473115 -5.824363  ]]
Iteration 700 of 1000: loss=0.00793 " + "l1=0.00631" + "l2=0.00163 f=-0.81 shape=(1, 9000, 1)
logits [[ 1.6547452   1.0240554  -0.12186033 -5.7974825 ]]
Iteration 800 of 1000: loss=0.00769 " + "l1=0.00592" + "l2=0.00178 f=-0.808 shape=(1, 9000, 1)
logits [[ 1.6250886   1.0334933  -0.11921698 -5.7721624 ]]
Iteration 900 of 1000: loss=0.00757 " + "l1=0.00555" + "l2=0.00202 f=-0.806 shape=(1, 9000, 1)
logits [[ 1.5968779   1.0423726  -0.11664291 -5.7478876 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.106 " + "l1=0.106" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[ 1.9355465   0.8760108  -0.10597792 -5.9843326 ]]
Iteration 100 of 1000: loss=0.0236 " + "l1=8.88e-05" + "l2=0.0235 f=-0.815 shape=(1, 9000, 1)
logits [[ 1.3027073   1.3018194  -0.19698925 -5.6679955 ]]
Iteration 200 of 1000: loss=0.0151 " + "l1=0" + "l2=0.0151 f=-0.806 shape=(1, 9000, 1)
logits [[ 1.2737178   1.2784089  -0.18035085 -5.596862  ]]
Iteration 300 of 1000: loss=0.0121 " + "l1=0" + "l2=0.0121 f=-0.801 shape=(1, 9000, 1)
logits [[ 1.2471334   1.2587013  -0.17025015 -5.5391445 ]]
Iteration 400 of 1000: loss=0.0104 " + "l1=0" + "l2=0.0104 f=-0.797 shape=(1, 9000, 1)
logits [[ 1.2296927   1.2429228  -0.16227487 -5.5002904 ]]
Iteration 500 of 1000: loss=0.00901 " + "l1=0" + "l2=0.00901 f=-0.794 shape=(1, 9000, 1)
logits [[ 1.2204926   1.2266903  -0.15328531 -5.4710746 ]]
Iteration 600 of 1000: loss=0.00825 " + "l1=0" + "l2=0.00825 f=-0.791 shape=(1, 9000, 1)
logits [[ 1.2099061  1.2149128 -0.144886  -5.4456897]]
Iteration 700 of 1000: loss=0.00759 " + "l1=0" + "l2=0.00759 f=-0.789 shape=(1, 9000, 1)
logits [[ 1.2040842   1.2075194  -0.13876052 -5.4302006 ]]
Iteration 800 of 1000: loss=0.00716 " + "l1=0" + "l2=0.00716 f=-0.788 shape=(1, 9000, 1)
logits [[ 1.196545    1.2108097  -0.13499445 -5.4230595 ]]
Iteration 900 of 1000: loss=0.00645 " + "l1=0" + "l2=0.00645 f=-0.787 shape=(1, 9000, 1)
logits [[ 1.1961193   1.2179332  -0.12899727 -5.431503  ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0583 " + "l1=0.0583" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[ 1.9355465   0.8760108  -0.10597792 -5.9843326 ]]
Iteration 100 of 1000: loss=0.0294 " + "l1=0.0142" + "l2=0.0151 f=-0.818 shape=(1, 9000, 1)
logits [[ 1.4625893  1.2037911 -0.1765561 -5.7601323]]
Iteration 200 of 1000: loss=0.0166 " + "l1=0" + "l2=0.0166 f=-0.809 shape=(1, 9000, 1)
logits [[ 1.2805098   1.2843779  -0.18322347 -5.616396  ]]
Iteration 300 of 1000: loss=0.0124 " + "l1=0" + "l2=0.0124 f=-0.802 shape=(1, 9000, 1)
logits [[ 1.2536936   1.2590983  -0.17050406 -5.5484753 ]]
Iteration 400 of 1000: loss=0.0102 " + "l1=0" + "l2=0.0102 f=-0.797 shape=(1, 9000, 1)
logits [[ 1.2376697   1.239456   -0.16139975 -5.504994  ]]
Iteration 500 of 1000: loss=0.0091 " + "l1=0.000294" + "l2=0.00881 f=-0.794 shape=(1, 9000, 1)
logits [[ 1.2278843   1.2225419  -0.15209961 -5.473711  ]]
Iteration 600 of 1000: loss=0.00815 " + "l1=6.72e-05" + "l2=0.00809 f=-0.791 shape=(1, 9000, 1)
logits [[ 1.2139533   1.2127309  -0.14415325 -5.446608  ]]
Iteration 700 of 1000: loss=0.00748 " + "l1=9.26e-05" + "l2=0.00738 f=-0.789 shape=(1, 9000, 1)
logits [[ 1.2080963   1.2064122  -0.13879438 -5.431713  ]]
Iteration 800 of 1000: loss=0.00695 " + "l1=5.18e-05" + "l2=0.0069 f=-0.787 shape=(1, 9000, 1)
logits [[ 1.2075919   1.2066505  -0.13338116 -5.430387  ]]
Iteration 900 of 1000: loss=0.00622 " + "l1=0" + "l2=0.00622 f=-0.786 shape=(1, 9000, 1)
logits [[ 1.2095914   1.213378   -0.12669061 -5.4417267 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0344 " + "l1=0.0344" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[ 1.9355465   0.8760108  -0.10597792 -5.9843326 ]]
Iteration 100 of 1000: loss=0.0248 " + "l1=0.02" + "l2=0.0048 f=-0.819 shape=(1, 9000, 1)
logits [[ 1.6761153   1.06189    -0.14865641 -5.8640375 ]]
Iteration 200 of 1000: loss=0.0198 " + "l1=0.0125" + "l2=0.00729 f=-0.814 shape=(1, 9000, 1)
logits [[ 1.5249401   1.1410903  -0.15491661 -5.7666297 ]]
Iteration 300 of 1000: loss=0.0153 " + "l1=0.00596" + "l2=0.00938 f=-0.808 shape=(1, 9000, 1)
logits [[ 1.3832299   1.1999629  -0.15957248 -5.654036  ]]
Iteration 400 of 1000: loss=0.0119 " + "l1=0.00122" + "l2=0.0107 f=-0.801 shape=(1, 9000, 1)
logits [[ 1.2731377   1.2357001  -0.16288872 -5.5515614 ]]
Iteration 500 of 1000: loss=0.00971 " + "l1=4.42e-05" + "l2=0.00967 f=-0.796 shape=(1, 9000, 1)
logits [[ 1.2327539   1.2313925  -0.15536742 -5.4919095 ]]
Iteration 600 of 1000: loss=0.00863 " + "l1=0.000189" + "l2=0.00844 f=-0.792 shape=(1, 9000, 1)
logits [[ 1.2212521   1.2154213  -0.14595653 -5.458778  ]]
Iteration 700 of 1000: loss=0.00804 " + "l1=0.000147" + "l2=0.0079 f=-0.789 shape=(1, 9000, 1)
logits [[ 1.2098854   1.2053614  -0.13793457 -5.433917  ]]
Iteration 800 of 1000: loss=0.00736 " + "l1=0.000117" + "l2=0.00724 f=-0.787 shape=(1, 9000, 1)
logits [[ 1.2040858   1.200498   -0.13329832 -5.419717  ]]
Iteration 900 of 1000: loss=0.0067 " + "l1=0.000127" + "l2=0.00657 f=-0.786 shape=(1, 9000, 1)
logits [[ 1.2045081   1.2005879  -0.12891182 -5.418947  ]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0225 " + "l1=0.0225" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[ 1.9355465   0.8760108  -0.10597792 -5.9843326 ]]
Iteration 100 of 1000: loss=0.0183 " + "l1=0.0162" + "l2=0.00206 f=-0.819 shape=(1, 9000, 1)
logits [[ 1.7636304   1.0006399  -0.13428906 -5.906096  ]]
Iteration 200 of 1000: loss=0.0165 " + "l1=0.0137" + "l2=0.00285 f=-0.817 shape=(1, 9000, 1)
logits [[ 1.6856264   1.0426211  -0.14076743 -5.8537264 ]]
Iteration 300 of 1000: loss=0.0147 " + "l1=0.0109" + "l2=0.00378 f=-0.813 shape=(1, 9000, 1)
logits [[ 1.5964273   1.0820446  -0.14126481 -5.7884173 ]]
Iteration 400 of 1000: loss=0.0131 " + "l1=0.0084" + "l2=0.00466 f=-0.808 shape=(1, 9000, 1)
logits [[ 1.5115485   1.1162308  -0.14092158 -5.7199025 ]]
Iteration 500 of 1000: loss=0.0115 " + "l1=0.00601" + "l2=0.00552 f=-0.804 shape=(1, 9000, 1)
logits [[ 1.4282687   1.1453137  -0.14096849 -5.648628  ]]
Iteration 600 of 1000: loss=0.0104 " + "l1=0.00415" + "l2=0.00626 f=-0.8 shape=(1, 9000, 1)
logits [[ 1.3615471   1.1662304  -0.14056748 -5.587758  ]]
Iteration 700 of 1000: loss=0.00938 " + "l1=0.00259" + "l2=0.00678 f=-0.796 shape=(1, 9000, 1)
logits [[ 1.3042604   1.1821895  -0.13941395 -5.532571  ]]
Iteration 800 of 1000: loss=0.00846 " + "l1=0.00108" + "l2=0.00738 f=-0.793 shape=(1, 9000, 1)
logits [[ 1.2485288   1.1979027  -0.13765971 -5.478899  ]]
Iteration 900 of 1000: loss=0.00761 " + "l1=9.79e-05" + "l2=0.00751 f=-0.788 shape=(1, 9000, 1)
logits [[ 1.2094204   1.2048115  -0.13392268 -5.4324794 ]]
--- 297.1781487464905 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0204 " + "l1=0.0204" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[ 1.9355465   0.8760108  -0.10597792 -5.9843326 ]]
Iteration 100 of 1000: loss=0.0199 " + "l1=0.0197" + "l2=0.00023 f=-0.818 shape=(1, 9000, 1)
logits [[ 1.87323     0.893878   -0.09726071 -5.941475  ]]
Iteration 200 of 1000: loss=0.0197 " + "l1=0.0195" + "l2=0.000251 f=-0.817 shape=(1, 9000, 1)
logits [[ 1.851637    0.89655393 -0.09525314 -5.9189487 ]]
Iteration 300 of 1000: loss=0.0195 " + "l1=0.0192" + "l2=0.000328 f=-0.815 shape=(1, 9000, 1)
logits [[ 1.8242636   0.89942133 -0.09239981 -5.8901277 ]]
Iteration 400 of 1000: loss=0.0193 " + "l1=0.0188" + "l2=0.000439 f=-0.813 shape=(1, 9000, 1)
logits [[ 1.7952979   0.9016519  -0.08898696 -5.8584847 ]]
Iteration 500 of 1000: loss=0.0191 " + "l1=0.0185" + "l2=0.000598 f=-0.81 shape=(1, 9000, 1)
logits [[ 1.7652395   0.9031338  -0.08489031 -5.8251348 ]]
Iteration 600 of 1000: loss=0.0188 " + "l1=0.0181" + "l2=0.000761 f=-0.808 shape=(1, 9000, 1)
logits [[ 1.7281379   0.90523523 -0.07816374 -5.786519  ]]
Iteration 700 of 1000: loss=0.0186 " + "l1=0.0176" + "l2=0.000944 f=-0.805 shape=(1, 9000, 1)
logits [[ 1.6916432   0.90654814 -0.07104589 -5.7475047 ]]
Iteration 800 of 1000: loss=0.0183 " + "l1=0.0172" + "l2=0.00112 f=-0.802 shape=(1, 9000, 1)
logits [[ 1.6581575  0.9076155 -0.0641528 -5.7111173]]
Iteration 900 of 1000: loss=0.0182 " + "l1=0.0168" + "l2=0.00132 f=-0.8 shape=(1, 9000, 1)
logits [[ 1.6263734   0.9088023  -0.05765639 -5.676379  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.204 " + "l1=0.204" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[ 1.9355465   0.8760108  -0.10597792 -5.9843326 ]]
Iteration 100 of 1000: loss=0.156 " + "l1=0.137" + "l2=0.0199 f=-0.798 shape=(1, 9000, 1)
logits [[ 1.3535484   1.0179121  -0.01177044 -5.550125  ]]
Iteration 200 of 1000: loss=0.123 " + "l1=0.0962" + "l2=0.0268 f=-0.765 shape=(1, 9000, 1)
logits [[ 1.0303423   1.0077178   0.06811786 -5.1673055 ]]
Iteration 300 of 1000: loss=0.102 " + "l1=0.0737" + "l2=0.0283 f=-0.733 shape=(1, 9000, 1)
logits [[ 0.9049511  0.8950434  0.1677155 -4.901633 ]]
Iteration 400 of 1000: loss=0.0849 " + "l1=0.0542" + "l2=0.0307 f=-0.714 shape=(1, 9000, 1)
logits [[ 0.79101175  0.7876422   0.24859072 -4.685123  ]]
Iteration 500 of 1000: loss=0.07 " + "l1=0.0382" + "l2=0.0318 f=-0.697 shape=(1, 9000, 1)
logits [[ 0.69810843  0.6967085   0.3164026  -4.500922  ]]
Iteration 600 of 1000: loss=0.055 " + "l1=0.0203" + "l2=0.0347 f=-0.667 shape=(1, 9000, 1)
logits [[ 0.6005246   0.5956415   0.39759758 -4.260879  ]]
Iteration 700 of 1000: loss=0.038 " + "l1=0.000897" + "l2=0.0371 f=-0.642 shape=(1, 9000, 1)
logits [[ 0.488488    0.48626357  0.47951692 -4.0211415 ]]
Iteration 800 of 1000: loss=0.0285 " + "l1=0" + "l2=0.0285 f=-0.643 shape=(1, 9000, 1)
logits [[ 0.46613237  0.46286166  0.46818063 -3.9698143 ]]
Iteration 900 of 1000: loss=0.0231 " + "l1=0" + "l2=0.0231 f=-0.648 shape=(1, 9000, 1)
logits [[ 0.45539206  0.44805664  0.45663515 -3.9521723 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.112 " + "l1=0.112" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[ 1.9355465   0.8760108  -0.10597792 -5.9843326 ]]
Iteration 100 of 1000: loss=0.0985 " + "l1=0.0928" + "l2=0.00571 f=-0.81 shape=(1, 9000, 1)
logits [[ 1.6248748   0.96276575 -0.06207072 -5.766479  ]]
Iteration 200 of 1000: loss=0.0881 " + "l1=0.0798" + "l2=0.00834 f=-0.797 shape=(1, 9000, 1)
logits [[ 1.4197444   0.9815476  -0.03121323 -5.557129  ]]
Iteration 300 of 1000: loss=0.0784 " + "l1=0.0666" + "l2=0.0118 f=-0.78 shape=(1, 9000, 1)
logits [[ 1.2187692   0.9838844   0.00870306 -5.3318253 ]]
Iteration 400 of 1000: loss=0.0693 " + "l1=0.0538" + "l2=0.0156 f=-0.755 shape=(1, 9000, 1)
logits [[ 1.0464013   0.96917385  0.06861821 -5.104902  ]]
Iteration 500 of 1000: loss=0.0618 " + "l1=0.0451" + "l2=0.0167 f=-0.737 shape=(1, 9000, 1)
logits [[ 0.9380836   0.9342761   0.11774065 -4.9377174 ]]
Iteration 600 of 1000: loss=0.0556 " + "l1=0.0391" + "l2=0.0166 f=-0.724 shape=(1, 9000, 1)
logits [[ 0.8749604   0.8727307   0.16443305 -4.8080163 ]]
Iteration 700 of 1000: loss=0.0502 " + "l1=0.033" + "l2=0.0171 f=-0.708 shape=(1, 9000, 1)
logits [[ 0.81561655  0.8101272   0.21506016 -4.674001  ]]
Iteration 800 of 1000: loss=0.0447 " + "l1=0.0271" + "l2=0.0175 f=-0.7 shape=(1, 9000, 1)
logits [[ 0.7491342   0.75177026  0.25864983 -4.5608196 ]]
Iteration 900 of 1000: loss=0.0395 " + "l1=0.0218" + "l2=0.0176 f=-0.686 shape=(1, 9000, 1)
logits [[ 0.693759    0.6967985   0.29972157 -4.4338517 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.158 " + "l1=0.158" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[ 1.9355465   0.8760108  -0.10597792 -5.9843326 ]]
Iteration 100 of 1000: loss=0.13 " + "l1=0.118" + "l2=0.0117 f=-0.804 shape=(1, 9000, 1)
logits [[ 1.4857965   0.99496824 -0.03830836 -5.6600194 ]]
Iteration 200 of 1000: loss=0.109 " + "l1=0.0909" + "l2=0.0185 f=-0.78 shape=(1, 9000, 1)
logits [[ 1.1975306   1.0024226   0.02436336 -5.344807  ]]
Iteration 300 of 1000: loss=0.0914 " + "l1=0.0696" + "l2=0.0218 f=-0.75 shape=(1, 9000, 1)
logits [[ 0.9938024   0.9741032   0.09526449 -5.0640087 ]]
Iteration 400 of 1000: loss=0.079 " + "l1=0.0566" + "l2=0.0223 f=-0.73 shape=(1, 9000, 1)
logits [[ 0.8939266   0.88720447  0.16313685 -4.8627663 ]]
Iteration 500 of 1000: loss=0.0682 " + "l1=0.0444" + "l2=0.0238 f=-0.71 shape=(1, 9000, 1)
logits [[ 0.8045421   0.8023281   0.23131453 -4.678267  ]]
Iteration 600 of 1000: loss=0.0585 " + "l1=0.0341" + "l2=0.0244 f=-0.696 shape=(1, 9000, 1)
logits [[ 0.73211044  0.7249743   0.2915375  -4.5314913 ]]
Iteration 700 of 1000: loss=0.049 " + "l1=0.0234" + "l2=0.0256 f=-0.671 shape=(1, 9000, 1)
logits [[ 0.65973437  0.6430683   0.35780895 -4.345569  ]]
Iteration 800 of 1000: loss=0.0388 " + "l1=0.0113" + "l2=0.0275 f=-0.647 shape=(1, 9000, 1)
logits [[ 0.5623302   0.5575623   0.41685155 -4.1264596 ]]
Iteration 900 of 1000: loss=0.0286 " + "l1=0.000297" + "l2=0.0283 f=-0.637 shape=(1, 9000, 1)
logits [[ 0.47775528  0.46641803  0.47391757 -3.9641442 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.135 " + "l1=0.135" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[ 1.9355465   0.8760108  -0.10597792 -5.9843326 ]]
Iteration 100 of 1000: loss=0.115 " + "l1=0.106" + "l2=0.00863 f=-0.807 shape=(1, 9000, 1)
logits [[ 1.5514525   0.9785513  -0.04869663 -5.70886   ]]
Iteration 200 of 1000: loss=0.0999 " + "l1=0.0873" + "l2=0.0126 f=-0.79 shape=(1, 9000, 1)
logits [[ 1.3080974   0.99396026 -0.00988853 -5.451482  ]]
Iteration 300 of 1000: loss=0.0853 " + "l1=0.067" + "l2=0.0183 f=-0.762 shape=(1, 9000, 1)
logits [[ 1.0698649   0.9849732   0.05833669 -5.1605625 ]]
Iteration 400 of 1000: loss=0.0743 " + "l1=0.0548" + "l2=0.0196 f=-0.738 shape=(1, 9000, 1)
logits [[ 0.9472897   0.9382243   0.12080245 -4.958329  ]]
Iteration 500 of 1000: loss=0.0654 " + "l1=0.0453" + "l2=0.0201 f=-0.722 shape=(1, 9000, 1)
logits [[ 0.86458594  0.8630412   0.18106844 -4.797988  ]]
Iteration 600 of 1000: loss=0.0578 " + "l1=0.0372" + "l2=0.0206 f=-0.707 shape=(1, 9000, 1)
logits [[ 0.79707694  0.7907158   0.23528858 -4.649818  ]]
Iteration 700 of 1000: loss=0.0501 " + "l1=0.0289" + "l2=0.0212 f=-0.694 shape=(1, 9000, 1)
logits [[ 0.7251847   0.7239194   0.28892866 -4.5145383 ]]
Iteration 800 of 1000: loss=0.0427 " + "l1=0.0209" + "l2=0.0218 f=-0.674 shape=(1, 9000, 1)
logits [[ 0.6573823   0.6513721   0.34215212 -4.347172  ]]
Iteration 900 of 1000: loss=0.035 " + "l1=0.0119" + "l2=0.0231 f=-0.657 shape=(1, 9000, 1)
logits [[ 0.5681533   0.5696674   0.39053497 -4.157635  ]]
--- 296.1033959388733 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0792 " + "l1=0.0792" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[ 1.9355465   0.8760108  -0.10597792 -5.9843326 ]]
Iteration 100 of 1000: loss=0.0775 " + "l1=0.0769" + "l2=0.000561 f=-0.815 shape=(1, 9000, 1)
logits [[ 1.8248631   0.9003039  -0.11765385 -5.8671174 ]]
Iteration 200 of 1000: loss=0.0764 " + "l1=0.0757" + "l2=0.00079 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.7684602   0.90106416 -0.11816291 -5.7972193 ]]
Iteration 300 of 1000: loss=0.0753 " + "l1=0.0742" + "l2=0.00116 f=-0.807 shape=(1, 9000, 1)
logits [[ 1.7023083   0.9008125  -0.11766675 -5.7144313 ]]
Iteration 400 of 1000: loss=0.0742 " + "l1=0.0725" + "l2=0.00164 f=-0.803 shape=(1, 9000, 1)
logits [[ 1.6288071   0.89988226 -0.11370237 -5.625511  ]]
Iteration 500 of 1000: loss=0.0731 " + "l1=0.071" + "l2=0.0021 f=-0.798 shape=(1, 9000, 1)
logits [[ 1.5579194   0.898645   -0.10988133 -5.537623  ]]
Iteration 600 of 1000: loss=0.0721 " + "l1=0.0694" + "l2=0.00268 f=-0.793 shape=(1, 9000, 1)
logits [[ 1.4903754   0.89770544 -0.10653377 -5.452983  ]]
Iteration 700 of 1000: loss=0.0712 " + "l1=0.068" + "l2=0.00322 f=-0.788 shape=(1, 9000, 1)
logits [[ 1.4274827   0.8948574  -0.10292532 -5.3725033 ]]
Iteration 800 of 1000: loss=0.0703 " + "l1=0.0667" + "l2=0.00359 f=-0.784 shape=(1, 9000, 1)
logits [[ 1.371839    0.8903236  -0.09945169 -5.299734  ]]
Iteration 900 of 1000: loss=0.0695 " + "l1=0.0655" + "l2=0.00404 f=-0.78 shape=(1, 9000, 1)
logits [[ 1.3187404   0.8853563  -0.09614502 -5.229117  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.792 " + "l1=0.792" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[ 1.9355465   0.8760108  -0.10597792 -5.9843326 ]]
Iteration 100 of 1000: loss=0.632 " + "l1=0.59" + "l2=0.0419 f=-0.778 shape=(1, 9000, 1)
logits [[ 0.99089646  0.9921892  -0.18847813 -4.908448  ]]
Iteration 200 of 1000: loss=0.534 " + "l1=0.47" + "l2=0.0639 f=-0.691 shape=(1, 9000, 1)
logits [[ 0.67651653  0.68076056 -0.10101432 -4.020563  ]]
Iteration 300 of 1000: loss=0.461 " + "l1=0.383" + "l2=0.0783 f=-0.655 shape=(1, 9000, 1)
logits [[ 0.42658877  0.4330969  -0.08313842 -3.3976617 ]]
Iteration 400 of 1000: loss=0.399 " + "l1=0.301" + "l2=0.0985 f=-0.633 shape=(1, 9000, 1)
logits [[ 0.18154544  0.18795712 -0.08170902 -2.8215394 ]]
Iteration 500 of 1000: loss=0.331 " + "l1=0.214" + "l2=0.118 f=-0.579 shape=(1, 9000, 1)
logits [[-0.06122261 -0.04055025 -0.03991203 -2.1751623 ]]
Iteration 600 of 1000: loss=0.26 " + "l1=0.124" + "l2=0.136 f=-0.496 shape=(1, 9000, 1)
logits [[-0.35694918 -0.13284448 -0.12637147 -1.3658423 ]]
Iteration 700 of 1000: loss=0.162 " + "l1=0" + "l2=0.162 f=-0.458 shape=(1, 9000, 1)
logits [[-0.7165902  -0.37275234 -0.37213773 -0.37052763]]
Iteration 800 of 1000: loss=0.116 " + "l1=0" + "l2=0.116 f=-0.444 shape=(1, 9000, 1)
logits [[-0.66443807 -0.3732786  -0.38582188 -0.3541566 ]]
Iteration 900 of 1000: loss=0.0914 " + "l1=0.000232" + "l2=0.0912 f=-0.44 shape=(1, 9000, 1)
logits [[-0.6175925  -0.389551   -0.37472183 -0.37703764]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.436 " + "l1=0.436" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[ 1.9355465   0.8760108  -0.10597792 -5.9843326 ]]
Iteration 100 of 1000: loss=0.384 " + "l1=0.365" + "l2=0.0183 f=-0.795 shape=(1, 9000, 1)
logits [[ 1.3057773   1.0053365  -0.15416858 -5.3387647 ]]
Iteration 200 of 1000: loss=0.345 " + "l1=0.321" + "l2=0.0242 f=-0.77 shape=(1, 9000, 1)
logits [[ 0.9674531   0.9726846  -0.16197821 -4.8571377 ]]
Iteration 300 of 1000: loss=0.318 " + "l1=0.29" + "l2=0.028 f=-0.739 shape=(1, 9000, 1)
logits [[ 0.8092049   0.8081921  -0.11608975 -4.4554315 ]]
Iteration 400 of 1000: loss=0.289 " + "l1=0.252" + "l2=0.0374 f=-0.678 shape=(1, 9000, 1)
logits [[ 0.6390935  0.6490152 -0.0655122 -3.9333007]]
Iteration 500 of 1000: loss=0.27 " + "l1=0.228" + "l2=0.0425 f=-0.66 shape=(1, 9000, 1)
logits [[ 0.512733    0.5190353  -0.05205468 -3.618283  ]]
Iteration 600 of 1000: loss=0.253 " + "l1=0.206" + "l2=0.0465 f=-0.649 shape=(1, 9000, 1)
logits [[ 0.3998601   0.39985603 -0.04752678 -3.3480844 ]]
Iteration 700 of 1000: loss=0.234 " + "l1=0.182" + "l2=0.0519 f=-0.634 shape=(1, 9000, 1)
logits [[ 0.27213994  0.27473497 -0.05076512 -3.0331442 ]]
Iteration 800 of 1000: loss=0.207 " + "l1=0.146" + "l2=0.0616 f=-0.613 shape=(1, 9000, 1)
logits [[ 0.08530416  0.08522173 -0.05756307 -2.563008  ]]
Iteration 900 of 1000: loss=0.175 " + "l1=0.106" + "l2=0.0682 f=-0.59 shape=(1, 9000, 1)
logits [[-0.10762933 -0.10693255 -0.10463239 -2.0393443 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.614 " + "l1=0.614" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[ 1.9355465   0.8760108  -0.10597792 -5.9843326 ]]
Iteration 100 of 1000: loss=0.511 " + "l1=0.476" + "l2=0.0349 f=-0.787 shape=(1, 9000, 1)
logits [[ 1.0664701   1.0501736  -0.18464693 -5.078232  ]]
Iteration 200 of 1000: loss=0.453 " + "l1=0.417" + "l2=0.0361 f=-0.751 shape=(1, 9000, 1)
logits [[ 0.8420742   0.84374803 -0.1550189  -4.5342765 ]]
Iteration 300 of 1000: loss=0.397 " + "l1=0.344" + "l2=0.0528 f=-0.675 shape=(1, 9000, 1)
logits [[ 0.60134095  0.60926795 -0.07997966 -3.8307145 ]]
Iteration 400 of 1000: loss=0.358 " + "l1=0.296" + "l2=0.0617 f=-0.653 shape=(1, 9000, 1)
logits [[ 0.4215351   0.42688835 -0.07018    -3.390211  ]]
Iteration 500 of 1000: loss=0.322 " + "l1=0.249" + "l2=0.0732 f=-0.643 shape=(1, 9000, 1)
logits [[ 0.23181707  0.23846652 -0.06727517 -2.973819  ]]
Iteration 600 of 1000: loss=0.28 " + "l1=0.194" + "l2=0.0858 f=-0.606 shape=(1, 9000, 1)
logits [[ 0.04803307  0.04392023 -0.0564294  -2.4601014 ]]
Iteration 700 of 1000: loss=0.224 " + "l1=0.125" + "l2=0.0987 f=-0.579 shape=(1, 9000, 1)
logits [[-0.21603167 -0.15963548 -0.16192886 -1.7769711 ]]
Iteration 800 of 1000: loss=0.168 " + "l1=0.051" + "l2=0.117 f=-0.534 shape=(1, 9000, 1)
logits [[-0.50747263 -0.3262331  -0.32272324 -0.98052114]]
Iteration 900 of 1000: loss=0.119 " + "l1=0.00145" + "l2=0.117 f=-0.472 shape=(1, 9000, 1)
logits [[-0.7360432  -0.38131452 -0.37586433 -0.39460254]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.525 " + "l1=0.525" + "l2=0 f=-0.82 shape=(1, 9000, 1)
logits [[ 1.9355465   0.8760108  -0.10597792 -5.9843326 ]]
Iteration 100 of 1000: loss=0.45 " + "l1=0.423" + "l2=0.027 f=-0.791 shape=(1, 9000, 1)
logits [[ 1.1739098   1.0355264  -0.16916685 -5.2039495 ]]
Iteration 200 of 1000: loss=0.4 " + "l1=0.37" + "l2=0.0297 f=-0.757 shape=(1, 9000, 1)
logits [[ 0.90260524  0.90394396 -0.1514826  -4.6847835 ]]
Iteration 300 of 1000: loss=0.358 " + "l1=0.315" + "l2=0.0423 f=-0.69 shape=(1, 9000, 1)
logits [[ 0.69393575  0.6954839  -0.08518857 -4.0657945 ]]
Iteration 400 of 1000: loss=0.326 " + "l1=0.277" + "l2=0.0493 f=-0.665 shape=(1, 9000, 1)
logits [[ 0.52633834  0.53648984 -0.0751446  -3.64714   ]]
Iteration 500 of 1000: loss=0.3 " + "l1=0.244" + "l2=0.0561 f=-0.648 shape=(1, 9000, 1)
logits [[ 0.3793129   0.38721117 -0.06140701 -3.296934  ]]
Iteration 600 of 1000: loss=0.274 " + "l1=0.209" + "l2=0.0645 f=-0.632 shape=(1, 9000, 1)
logits [[ 0.21986248  0.23821694 -0.06664044 -2.9183855 ]]
Iteration 700 of 1000: loss=0.233 " + "l1=0.156" + "l2=0.0777 f=-0.601 shape=(1, 9000, 1)
logits [[ 0.00455848  0.00833895 -0.07556359 -2.3421617 ]]
Iteration 800 of 1000: loss=0.188 " + "l1=0.0998" + "l2=0.0881 f=-0.589 shape=(1, 9000, 1)
logits [[-0.22930974 -0.20557654 -0.20876518 -1.7114978 ]]
Iteration 900 of 1000: loss=0.151 " + "l1=0.053" + "l2=0.098 f=-0.538 shape=(1, 9000, 1)
logits [[-0.47415325 -0.2935842  -0.29146996 -1.0914919 ]]
--- 297.38452410697937 seconds ---
Adv result:3
Loading record A02197
(1, 6396)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.027 " + "l1=0.027" + "l2=0 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.0501974 -1.6455803  0.8042221 -1.2499208]]
Iteration 100 of 1000: loss=0.0262 " + "l1=0.0256" + "l2=0.000539 f=-0.262 shape=(1, 9000, 1)
logits [[ 0.9694982 -1.5934287  0.7629646 -1.1876545]]
Iteration 200 of 1000: loss=0.0259 " + "l1=0.0253" + "l2=0.000629 f=-0.262 shape=(1, 9000, 1)
logits [[ 0.9486673  -1.5771251   0.74683994 -1.1666083 ]]
Iteration 300 of 1000: loss=0.0257 " + "l1=0.0248" + "l2=0.000809 f=-0.262 shape=(1, 9000, 1)
logits [[ 0.9246676 -1.5598606  0.7302369 -1.1449423]]
Iteration 400 of 1000: loss=0.0254 " + "l1=0.0244" + "l2=0.00102 f=-0.263 shape=(1, 9000, 1)
logits [[ 0.897567  -1.5387571  0.7104724 -1.1211281]]
Iteration 500 of 1000: loss=0.0251 " + "l1=0.0239" + "l2=0.00124 f=-0.263 shape=(1, 9000, 1)
logits [[ 0.8714205  -1.5189774   0.69247085 -1.0979449 ]]
Iteration 600 of 1000: loss=0.025 " + "l1=0.0235" + "l2=0.00145 f=-0.264 shape=(1, 9000, 1)
logits [[ 0.8485919 -1.5025057  0.6775333 -1.0783831]]
Iteration 700 of 1000: loss=0.0247 " + "l1=0.0232" + "l2=0.00157 f=-0.265 shape=(1, 9000, 1)
logits [[ 0.82725745 -1.4897361   0.6664797  -1.0620912 ]]
Iteration 800 of 1000: loss=0.0247 " + "l1=0.0229" + "l2=0.0018 f=-0.265 shape=(1, 9000, 1)
logits [[ 0.80799496 -1.4778371   0.65624076 -1.0480208 ]]
Iteration 900 of 1000: loss=0.0246 " + "l1=0.0226" + "l2=0.002 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.7902753 -1.4672236  0.6468022 -1.0347387]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.27 " + "l1=0.27" + "l2=0 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.0501974 -1.6455803  0.8042221 -1.2499208]]
Iteration 100 of 1000: loss=0.17 " + "l1=0.118" + "l2=0.0516 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.21960145 -0.9622865   0.2216271  -0.6276102 ]]
Iteration 200 of 1000: loss=0.105 " + "l1=0.0316" + "l2=0.0736 f=-0.327 shape=(1, 9000, 1)
logits [[-0.22635284 -0.5308552  -0.21507677 -0.33415988]]
Iteration 300 of 1000: loss=0.0856 " + "l1=0.0188" + "l2=0.0668 f=-0.329 shape=(1, 9000, 1)
logits [[-0.30717105 -0.46191376 -0.27371824 -0.2742416 ]]
Iteration 400 of 1000: loss=0.0744 " + "l1=0.013" + "l2=0.0614 f=-0.332 shape=(1, 9000, 1)
logits [[-0.3129857  -0.42269224 -0.30065385 -0.292819  ]]
Iteration 500 of 1000: loss=0.0637 " + "l1=0.00713" + "l2=0.0566 f=-0.338 shape=(1, 9000, 1)
logits [[-0.3268713  -0.38508102 -0.3138196  -0.32809114]]
Iteration 600 of 1000: loss=0.0562 " + "l1=0.00231" + "l2=0.0539 f=-0.343 shape=(1, 9000, 1)
logits [[-0.33950117 -0.35699305 -0.33391127 -0.34172475]]
Iteration 700 of 1000: loss=0.051 " + "l1=0.000949" + "l2=0.05 f=-0.343 shape=(1, 9000, 1)
logits [[-0.34173462 -0.34680694 -0.33731377 -0.34718066]]
Iteration 800 of 1000: loss=0.0455 " + "l1=0.000609" + "l2=0.0449 f=-0.343 shape=(1, 9000, 1)
logits [[-0.34586903 -0.34559506 -0.34212223 -0.33950937]]
Iteration 900 of 1000: loss=0.0403 " + "l1=0" + "l2=0.0403 f=-0.345 shape=(1, 9000, 1)
logits [[-0.35032365 -0.33807632 -0.3476481  -0.34219885]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.148 " + "l1=0.148" + "l2=0 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.0501974 -1.6455803  0.8042221 -1.2499208]]
Iteration 100 of 1000: loss=0.121 " + "l1=0.105" + "l2=0.0158 f=-0.272 shape=(1, 9000, 1)
logits [[ 0.5762571  -1.3410358   0.5633297  -0.88852274]]
Iteration 200 of 1000: loss=0.102 " + "l1=0.0763" + "l2=0.0258 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.31165144 -1.0751376   0.30991524 -0.669975  ]]
Iteration 300 of 1000: loss=0.0809 " + "l1=0.0454" + "l2=0.0356 f=-0.301 shape=(1, 9000, 1)
logits [[ 0.03535389 -0.7893926   0.0344944  -0.48413646]]
Iteration 400 of 1000: loss=0.0714 " + "l1=0.0346" + "l2=0.0368 f=-0.306 shape=(1, 9000, 1)
logits [[-0.07421844 -0.6974337  -0.06878664 -0.38200065]]
Iteration 500 of 1000: loss=0.0645 " + "l1=0.0279" + "l2=0.0366 f=-0.31 shape=(1, 9000, 1)
logits [[-0.14214168 -0.6412739  -0.13418894 -0.32187504]]
Iteration 600 of 1000: loss=0.058 " + "l1=0.0219" + "l2=0.036 f=-0.317 shape=(1, 9000, 1)
logits [[-0.20168775 -0.59273356 -0.19382012 -0.2799071 ]]
Iteration 700 of 1000: loss=0.0525 " + "l1=0.0176" + "l2=0.0349 f=-0.323 shape=(1, 9000, 1)
logits [[-0.2381461  -0.5560453  -0.23596023 -0.26234448]]
Iteration 800 of 1000: loss=0.0475 " + "l1=0.0149" + "l2=0.0326 f=-0.33 shape=(1, 9000, 1)
logits [[-0.2613847  -0.53004855 -0.2583766  -0.27210945]]
Iteration 900 of 1000: loss=0.0438 " + "l1=0.0128" + "l2=0.0309 f=-0.335 shape=(1, 9000, 1)
logits [[-0.27907744 -0.50800014 -0.27496544 -0.27841425]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.209 " + "l1=0.209" + "l2=0 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.0501974 -1.6455803  0.8042221 -1.2499208]]
Iteration 100 of 1000: loss=0.152 " + "l1=0.121" + "l2=0.0309 f=-0.275 shape=(1, 9000, 1)
logits [[ 0.40410358 -1.1592841   0.40073928 -0.74549836]]
Iteration 200 of 1000: loss=0.107 " + "l1=0.0575" + "l2=0.05 f=-0.305 shape=(1, 9000, 1)
logits [[-0.0027195  -0.74049205  0.00099276 -0.4766281 ]]
Iteration 300 of 1000: loss=0.0844 " + "l1=0.0284" + "l2=0.0559 f=-0.315 shape=(1, 9000, 1)
logits [[-0.20845109 -0.56285095 -0.19588254 -0.29187295]]
Iteration 400 of 1000: loss=0.0737 " + "l1=0.0225" + "l2=0.0511 f=-0.317 shape=(1, 9000, 1)
logits [[-0.24202852 -0.52463037 -0.23371194 -0.26887614]]
Iteration 500 of 1000: loss=0.0645 " + "l1=0.0159" + "l2=0.0486 f=-0.328 shape=(1, 9000, 1)
logits [[-0.2841465  -0.47774795 -0.27295735 -0.27846298]]
Iteration 600 of 1000: loss=0.0574 " + "l1=0.0122" + "l2=0.0452 f=-0.336 shape=(1, 9000, 1)
logits [[-0.30710375 -0.44908473 -0.29441097 -0.2915271 ]]
Iteration 700 of 1000: loss=0.0521 " + "l1=0.0101" + "l2=0.042 f=-0.341 shape=(1, 9000, 1)
logits [[-0.31459498 -0.43442094 -0.30366555 -0.30946934]]
Iteration 800 of 1000: loss=0.0469 " + "l1=0.00758" + "l2=0.0394 f=-0.342 shape=(1, 9000, 1)
logits [[-0.31312042 -0.4108629  -0.3152443  -0.32842785]]
Iteration 900 of 1000: loss=0.042 " + "l1=0.00357" + "l2=0.0384 f=-0.342 shape=(1, 9000, 1)
logits [[-0.32876483 -0.37485164 -0.32927683 -0.33407718]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.239 " + "l1=0.239" + "l2=0 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.0501974 -1.6455803  0.8042221 -1.2499208]]
Iteration 100 of 1000: loss=0.162 " + "l1=0.121" + "l2=0.0407 f=-0.28 shape=(1, 9000, 1)
logits [[ 0.31121585 -1.0570836   0.3081846  -0.68191576]]
Iteration 200 of 1000: loss=0.106 " + "l1=0.0451" + "l2=0.0607 f=-0.315 shape=(1, 9000, 1)
logits [[-0.11994867 -0.62422895 -0.1162227  -0.40146145]]
Iteration 300 of 1000: loss=0.0844 " + "l1=0.022" + "l2=0.0624 f=-0.321 shape=(1, 9000, 1)
logits [[-0.27139702 -0.49897873 -0.2515269  -0.26075011]]
Iteration 400 of 1000: loss=0.0735 " + "l1=0.0171" + "l2=0.0564 f=-0.329 shape=(1, 9000, 1)
logits [[-0.30007073 -0.4659247  -0.27364087 -0.27566534]]
Iteration 500 of 1000: loss=0.0641 " + "l1=0.0124" + "l2=0.0517 f=-0.333 shape=(1, 9000, 1)
logits [[-0.29316482 -0.4332903  -0.29386526 -0.31182498]]
Iteration 600 of 1000: loss=0.057 " + "l1=0.00838" + "l2=0.0486 f=-0.341 shape=(1, 9000, 1)
logits [[-0.32208738 -0.40500286 -0.3105324  -0.3245036 ]]
Iteration 700 of 1000: loss=0.0515 " + "l1=0.00467" + "l2=0.0468 f=-0.344 shape=(1, 9000, 1)
logits [[-0.34220532 -0.37918508 -0.32730952 -0.3265525 ]]
Iteration 800 of 1000: loss=0.0454 " + "l1=0.000271" + "l2=0.0451 f=-0.345 shape=(1, 9000, 1)
logits [[-0.35261416 -0.34392595 -0.34086707 -0.34406188]]
Iteration 900 of 1000: loss=0.0406 " + "l1=0.000197" + "l2=0.0404 f=-0.344 shape=(1, 9000, 1)
logits [[-0.33850798 -0.34073016 -0.34372422 -0.3520732 ]]
--- 296.92626762390137 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00246 " + "l1=0.00246" + "l2=0 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.0501974 -1.6455803  0.8042221 -1.2499208]]
Iteration 100 of 1000: loss=0.00192 " + "l1=0.00151" + "l2=0.000415 f=-0.268 shape=(1, 9000, 1)
logits [[ 0.9906812  -1.67069     0.83991265 -1.2338945 ]]
Iteration 200 of 1000: loss=0.00177 " + "l1=0.00134" + "l2=0.00043 f=-0.27 shape=(1, 9000, 1)
logits [[ 0.9799807 -1.6753281  0.8460268 -1.2308327]]
Iteration 300 of 1000: loss=0.00166 " + "l1=0.00116" + "l2=0.000506 f=-0.272 shape=(1, 9000, 1)
logits [[ 0.9686311 -1.6810719  0.8529884 -1.2280359]]
Iteration 400 of 1000: loss=0.00157 " + "l1=0.000974" + "l2=0.000593 f=-0.274 shape=(1, 9000, 1)
logits [[ 0.9572152  -1.6868389   0.85983163 -1.2248015 ]]
Iteration 500 of 1000: loss=0.00153 " + "l1=0.000802" + "l2=0.000725 f=-0.275 shape=(1, 9000, 1)
logits [[ 0.94662017 -1.692618    0.8663863  -1.2210685 ]]
Iteration 600 of 1000: loss=0.00148 " + "l1=0.000635" + "l2=0.000842 f=-0.277 shape=(1, 9000, 1)
logits [[ 0.9361034 -1.698115   0.8725868 -1.2165796]]
Iteration 700 of 1000: loss=0.00139 " + "l1=0.000483" + "l2=0.000907 f=-0.278 shape=(1, 9000, 1)
logits [[ 0.9265313 -1.7032094  0.8782459 -1.2122438]]
Iteration 800 of 1000: loss=0.00144 " + "l1=0.000315" + "l2=0.00112 f=-0.279 shape=(1, 9000, 1)
logits [[ 0.91533864 -1.7080222   0.88388103 -1.2073355 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0246 " + "l1=0.0246" + "l2=0 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.0501974 -1.6455803  0.8042221 -1.2499208]]
Iteration 100 of 1000: loss=0.00268 " + "l1=0" + "l2=0.00268 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.8888685  -1.7130955   0.89644873 -1.2036287 ]]
Iteration 200 of 1000: loss=0.00204 " + "l1=0" + "l2=0.00204 f=-0.284 shape=(1, 9000, 1)
logits [[ 0.884069  -1.7149379  0.8966524 -1.2019538]]
Iteration 300 of 1000: loss=0.00155 " + "l1=0" + "l2=0.00155 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.8913219  -1.713951    0.89269394 -1.2032171 ]]
Iteration 400 of 1000: loss=0.00147 " + "l1=0" + "l2=0.00147 f=-0.284 shape=(1, 9000, 1)
logits [[ 0.8872025  -1.7167423   0.89479923 -1.2004472 ]]
Iteration 500 of 1000: loss=0.00137 " + "l1=0" + "l2=0.00137 f=-0.284 shape=(1, 9000, 1)
logits [[ 0.886255   -1.7179934   0.89539236 -1.1982487 ]]
Iteration 600 of 1000: loss=0.00133 " + "l1=0" + "l2=0.00133 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.88684016 -1.7187082   0.895547   -1.1965189 ]]
Iteration 700 of 1000: loss=0.00119 " + "l1=0" + "l2=0.00119 f=-0.282 shape=(1, 9000, 1)
logits [[ 0.89069366 -1.7175596   0.89362234 -1.1950402 ]]
Iteration 800 of 1000: loss=0.00141 " + "l1=0.000302" + "l2=0.00111 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.8948722  -1.7165892   0.89185375 -1.194038  ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0135 " + "l1=0.0135" + "l2=0 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.0501974 -1.6455803  0.8042221 -1.2499208]]
Iteration 100 of 1000: loss=0.00258 " + "l1=4.73e-05" + "l2=0.00254 f=-0.282 shape=(1, 9000, 1)
logits [[ 0.8948951 -1.7109109  0.8940346 -1.2055074]]
Iteration 200 of 1000: loss=0.00194 " + "l1=0.000147" + "l2=0.00179 f=-0.282 shape=(1, 9000, 1)
logits [[ 0.89482147 -1.7112113   0.892152   -1.205687  ]]
Iteration 300 of 1000: loss=0.00156 " + "l1=0" + "l2=0.00156 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.8912223 -1.7140753  0.8935436 -1.2039691]]
Iteration 400 of 1000: loss=0.00137 " + "l1=2.2e-05" + "l2=0.00135 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.8929304  -1.7146221   0.89252967 -1.2029974 ]]
Iteration 500 of 1000: loss=0.00134 " + "l1=0" + "l2=0.00134 f=-0.284 shape=(1, 9000, 1)
logits [[ 0.8859811 -1.7181919  0.8962546 -1.1992763]]
Iteration 600 of 1000: loss=0.00136 " + "l1=0.000149" + "l2=0.00121 f=-0.282 shape=(1, 9000, 1)
logits [[ 0.8944437 -1.7155187  0.89174   -1.1994933]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00799 " + "l1=0.00799" + "l2=0 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.0501974 -1.6455803  0.8042221 -1.2499208]]
Iteration 100 of 1000: loss=0.00272 " + "l1=0" + "l2=0.00272 f=-0.282 shape=(1, 9000, 1)
logits [[ 0.89468294 -1.7120628   0.89573383 -1.2053246 ]]
Iteration 200 of 1000: loss=0.00188 " + "l1=0" + "l2=0.00188 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.893608   -1.7119155   0.89381164 -1.2058554 ]]
Iteration 300 of 1000: loss=0.00156 " + "l1=3.7e-06" + "l2=0.00156 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.8933805 -1.7133311  0.8932666 -1.2053761]]
Iteration 400 of 1000: loss=0.00138 " + "l1=0" + "l2=0.00138 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.8922967 -1.7147764  0.8935105 -1.2036514]]
Iteration 500 of 1000: loss=0.00123 " + "l1=0" + "l2=0.00123 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.8927528  -1.7154518   0.89306724 -1.2016957 ]]
Iteration 600 of 1000: loss=0.00124 " + "l1=0" + "l2=0.00124 f=-0.282 shape=(1, 9000, 1)
logits [[ 0.8928681 -1.7159961  0.8929871 -1.1995902]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00523 " + "l1=0.00523" + "l2=0 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.0501974 -1.6455803  0.8042221 -1.2499208]]
Iteration 100 of 1000: loss=0.00291 " + "l1=0.00147" + "l2=0.00144 f=-0.276 shape=(1, 9000, 1)
logits [[ 0.93980795 -1.693118    0.8706004  -1.2197608 ]]
Iteration 200 of 1000: loss=0.0021 " + "l1=0.000193" + "l2=0.00191 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.9006777 -1.7098441  0.8916055 -1.2073926]]
Iteration 300 of 1000: loss=0.00163 " + "l1=1.49e-05" + "l2=0.00161 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.8944026 -1.7133425  0.8936998 -1.2055978]]
Iteration 400 of 1000: loss=0.00141 " + "l1=6.25e-06" + "l2=0.0014 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.8937611 -1.7145232  0.893467  -1.2041703]]
Iteration 500 of 1000: loss=0.0013 " + "l1=0" + "l2=0.0013 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.8922695  -1.7158949   0.89385563 -1.2020001 ]]
Iteration 600 of 1000: loss=0.00121 " + "l1=0" + "l2=0.00121 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.89281934 -1.7163337   0.8934649  -1.2000662 ]]
Iteration 700 of 1000: loss=0.00115 " + "l1=3.47e-05" + "l2=0.00112 f=-0.282 shape=(1, 9000, 1)
logits [[ 0.8944353 -1.7163073  0.8928003 -1.1982334]]
Iteration 800 of 1000: loss=0.00118 " + "l1=0" + "l2=0.00118 f=-0.282 shape=(1, 9000, 1)
logits [[ 0.89257944 -1.7169152   0.8933963  -1.1955867 ]]
--- 215.21848273277283 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.023 " + "l1=0.023" + "l2=0 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.0501974 -1.6455803  0.8042221 -1.2499208]]
Iteration 100 of 1000: loss=0.0217 " + "l1=0.0209" + "l2=0.000799 f=-0.261 shape=(1, 9000, 1)
logits [[ 0.9432909 -1.612865   0.7712825 -1.1454098]]
Iteration 200 of 1000: loss=0.0213 " + "l1=0.0203" + "l2=0.000945 f=-0.261 shape=(1, 9000, 1)
logits [[ 0.91548604 -1.5985307   0.75554764 -1.116037  ]]
Iteration 300 of 1000: loss=0.0209 " + "l1=0.0197" + "l2=0.00121 f=-0.261 shape=(1, 9000, 1)
logits [[ 0.8844594 -1.5847111  0.7398062 -1.0850135]]
Iteration 400 of 1000: loss=0.0206 " + "l1=0.019" + "l2=0.00153 f=-0.262 shape=(1, 9000, 1)
logits [[ 0.85058385 -1.5678667   0.7224489  -1.0522823 ]]
Iteration 500 of 1000: loss=0.0202 " + "l1=0.0184" + "l2=0.00181 f=-0.262 shape=(1, 9000, 1)
logits [[ 0.8167861  -1.5500244   0.70481294 -1.0202122 ]]
Iteration 600 of 1000: loss=0.0199 " + "l1=0.0177" + "l2=0.00217 f=-0.263 shape=(1, 9000, 1)
logits [[ 0.7822104  -1.532768    0.6882575  -0.98927563]]
Iteration 700 of 1000: loss=0.0196 " + "l1=0.017" + "l2=0.00255 f=-0.263 shape=(1, 9000, 1)
logits [[ 0.7469663  -1.5166837   0.67298824 -0.95718586]]
Iteration 800 of 1000: loss=0.0192 " + "l1=0.0164" + "l2=0.00279 f=-0.264 shape=(1, 9000, 1)
logits [[ 0.715483  -1.5033922  0.6603354 -0.9293921]]
Iteration 900 of 1000: loss=0.019 " + "l1=0.0159" + "l2=0.00309 f=-0.265 shape=(1, 9000, 1)
logits [[ 0.686907   -1.4942908   0.6520308  -0.90491307]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.23 " + "l1=0.23" + "l2=0 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.0501974 -1.6455803  0.8042221 -1.2499208]]
Iteration 100 of 1000: loss=0.102 " + "l1=0.0402" + "l2=0.0616 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.18735611 -1.0838139   0.18777691 -0.2139554 ]]
Iteration 200 of 1000: loss=0.0521 " + "l1=0" + "l2=0.0521 f=-0.245 shape=(1, 9000, 1)
logits [[-0.02149255 -0.9323997  -0.0141913  -0.01324296]]
Iteration 300 of 1000: loss=0.0408 " + "l1=0" + "l2=0.0408 f=-0.255 shape=(1, 9000, 1)
logits [[-0.04963578 -0.9196183  -0.03093164 -0.01814553]]
Iteration 400 of 1000: loss=0.0344 " + "l1=0" + "l2=0.0344 f=-0.255 shape=(1, 9000, 1)
logits [[-0.03797273 -0.92379487 -0.03178604 -0.02786189]]
Iteration 500 of 1000: loss=0.0305 " + "l1=0" + "l2=0.0305 f=-0.257 shape=(1, 9000, 1)
logits [[-0.03859311 -0.9267179  -0.03213226 -0.02867568]]
Iteration 600 of 1000: loss=0.0278 " + "l1=0" + "l2=0.0278 f=-0.257 shape=(1, 9000, 1)
logits [[-0.04833407 -0.9264499  -0.03473194 -0.01814457]]
Iteration 700 of 1000: loss=0.0251 " + "l1=0" + "l2=0.0251 f=-0.255 shape=(1, 9000, 1)
logits [[-0.04031537 -0.9311719  -0.03305941 -0.01479263]]
Iteration 800 of 1000: loss=0.0226 " + "l1=0.000223" + "l2=0.0224 f=-0.257 shape=(1, 9000, 1)
logits [[-0.04563651 -0.93877095 -0.02140572 -0.02363266]]
Iteration 900 of 1000: loss=0.0209 " + "l1=0" + "l2=0.0209 f=-0.254 shape=(1, 9000, 1)
logits [[-0.03659366 -0.9364386  -0.02896544 -0.01480024]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.127 " + "l1=0.127" + "l2=0 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.0501974 -1.6455803  0.8042221 -1.2499208]]
Iteration 100 of 1000: loss=0.0868 " + "l1=0.0687" + "l2=0.0181 f=-0.251 shape=(1, 9000, 1)
logits [[ 0.54602695 -1.3914099   0.5442816  -0.7027327 ]]
Iteration 200 of 1000: loss=0.0675 " + "l1=0.0391" + "l2=0.0283 f=-0.243 shape=(1, 9000, 1)
logits [[ 0.30389985 -1.1766341   0.30592355 -0.4057567 ]]
Iteration 300 of 1000: loss=0.0491 " + "l1=0.0103" + "l2=0.0387 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.05362372 -0.9798272   0.06103563 -0.12710503]]
Iteration 400 of 1000: loss=0.0376 " + "l1=0.000444" + "l2=0.0372 f=-0.251 shape=(1, 9000, 1)
logits [[-0.02697935 -0.9223403  -0.02401614 -0.03208105]]
Iteration 500 of 1000: loss=0.0323 " + "l1=0.000447" + "l2=0.0318 f=-0.253 shape=(1, 9000, 1)
logits [[-0.02491958 -0.9289922  -0.02458392 -0.03271303]]
Iteration 600 of 1000: loss=0.0284 " + "l1=0.000553" + "l2=0.0279 f=-0.254 shape=(1, 9000, 1)
logits [[-0.02827129 -0.9363979  -0.02132942 -0.03138668]]
Iteration 700 of 1000: loss=0.0252 " + "l1=0.000317" + "l2=0.0249 f=-0.254 shape=(1, 9000, 1)
logits [[-0.02985958 -0.9357283  -0.02254017 -0.02829746]]
Iteration 800 of 1000: loss=0.0228 " + "l1=0.000174" + "l2=0.0226 f=-0.253 shape=(1, 9000, 1)
logits [[-0.02649841 -0.93970287 -0.0214127  -0.02458006]]
Iteration 900 of 1000: loss=0.0211 " + "l1=0" + "l2=0.0211 f=-0.253 shape=(1, 9000, 1)
logits [[-0.0294636  -0.9398544  -0.02405485 -0.01785511]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0748 " + "l1=0.0748" + "l2=0 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.0501974 -1.6455803  0.8042221 -1.2499208]]
Iteration 100 of 1000: loss=0.0604 " + "l1=0.0521" + "l2=0.00832 f=-0.263 shape=(1, 9000, 1)
logits [[ 0.693788  -1.5277036  0.6909024 -0.9094909]]
Iteration 200 of 1000: loss=0.0542 " + "l1=0.0443" + "l2=0.00986 f=-0.258 shape=(1, 9000, 1)
logits [[ 0.586924  -1.4336648  0.5880982 -0.7748999]]
Iteration 300 of 1000: loss=0.0493 " + "l1=0.0372" + "l2=0.0121 f=-0.252 shape=(1, 9000, 1)
logits [[ 0.4946802  -1.3471262   0.49416393 -0.6502083 ]]
Iteration 400 of 1000: loss=0.0439 " + "l1=0.0284" + "l2=0.0156 f=-0.25 shape=(1, 9000, 1)
logits [[ 0.3714669  -1.2439765   0.37293035 -0.5002396 ]]
Iteration 500 of 1000: loss=0.039 " + "l1=0.0203" + "l2=0.0187 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.2591962  -1.1553494   0.26300427 -0.3606475 ]]
Iteration 600 of 1000: loss=0.0346 " + "l1=0.0137" + "l2=0.0209 f=-0.252 shape=(1, 9000, 1)
logits [[ 0.16162854 -1.0761901   0.1641602  -0.25787553]]
Iteration 700 of 1000: loss=0.0306 " + "l1=0.00851" + "l2=0.0221 f=-0.255 shape=(1, 9000, 1)
logits [[ 0.08286276 -1.0153614   0.08620434 -0.1755903 ]]
Iteration 800 of 1000: loss=0.0272 " + "l1=0.0049" + "l2=0.0223 f=-0.255 shape=(1, 9000, 1)
logits [[ 0.03389393 -0.9834244   0.04026654 -0.11044499]]
Iteration 900 of 1000: loss=0.0243 " + "l1=0.00094" + "l2=0.0233 f=-0.255 shape=(1, 9000, 1)
logits [[-0.03105226 -0.9452161  -0.00769926 -0.03660872]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0489 " + "l1=0.0489" + "l2=0 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.0501974 -1.6455803  0.8042221 -1.2499208]]
Iteration 100 of 1000: loss=0.043 " + "l1=0.0396" + "l2=0.00338 f=-0.261 shape=(1, 9000, 1)
logits [[ 0.83148855 -1.575023    0.7337574  -1.0339493 ]]
Iteration 200 of 1000: loss=0.0403 " + "l1=0.0354" + "l2=0.00495 f=-0.263 shape=(1, 9000, 1)
logits [[ 0.7259313 -1.5264431  0.6860996 -0.9376206]]
Iteration 300 of 1000: loss=0.0377 " + "l1=0.0316" + "l2=0.00616 f=-0.264 shape=(1, 9000, 1)
logits [[ 0.6366753 -1.4786053  0.6361653 -0.8491265]]
Iteration 400 of 1000: loss=0.0358 " + "l1=0.0291" + "l2=0.00664 f=-0.261 shape=(1, 9000, 1)
logits [[ 0.5893455  -1.4376616   0.58825696 -0.7821076 ]]
Iteration 500 of 1000: loss=0.0342 " + "l1=0.0267" + "l2=0.00749 f=-0.259 shape=(1, 9000, 1)
logits [[ 0.53819776 -1.3923889   0.5376707  -0.7178852 ]]
Iteration 600 of 1000: loss=0.0325 " + "l1=0.0241" + "l2=0.00842 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.48216537 -1.3468137   0.48337573 -0.64851487]]
Iteration 700 of 1000: loss=0.0309 " + "l1=0.0212" + "l2=0.00966 f=-0.256 shape=(1, 9000, 1)
logits [[ 0.4245892  -1.2992281   0.42466155 -0.5732676 ]]
Iteration 800 of 1000: loss=0.0296 " + "l1=0.0189" + "l2=0.0106 f=-0.254 shape=(1, 9000, 1)
logits [[ 0.37921983 -1.2612921   0.37660435 -0.51238465]]
Iteration 900 of 1000: loss=0.0281 " + "l1=0.0168" + "l2=0.0113 f=-0.253 shape=(1, 9000, 1)
logits [[ 0.33455294 -1.2269032   0.3347747  -0.45460904]]
--- 296.6169185638428 seconds ---
Adv result:3
Loading record A02224
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0726 " + "l1=0.0726" + "l2=0 f=-0.639 shape=(1, 9000, 1)
logits [[ 4.571719  -2.6876004  3.05216   -7.4926095]]
Iteration 100 of 1000: loss=0.0716 " + "l1=0.0708" + "l2=0.000779 f=-0.634 shape=(1, 9000, 1)
logits [[ 4.49186   -2.5879064  2.9810712 -7.4199896]]
Iteration 200 of 1000: loss=0.0714 " + "l1=0.0705" + "l2=0.000893 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.4784193 -2.5713124  2.9695895 -7.4080243]]
Iteration 300 of 1000: loss=0.0713 " + "l1=0.0703" + "l2=0.000995 f=-0.632 shape=(1, 9000, 1)
logits [[ 4.4676175 -2.559384   2.961693  -7.3967466]]
Iteration 400 of 1000: loss=0.0712 " + "l1=0.07" + "l2=0.00112 f=-0.631 shape=(1, 9000, 1)
logits [[ 4.456499  -2.5472438  2.9534488 -7.385223 ]]
Iteration 500 of 1000: loss=0.0711 " + "l1=0.0698" + "l2=0.00125 f=-0.63 shape=(1, 9000, 1)
logits [[ 4.4460125 -2.5363383  2.945599  -7.374843 ]]
Iteration 600 of 1000: loss=0.0711 " + "l1=0.0696" + "l2=0.00143 f=-0.629 shape=(1, 9000, 1)
logits [[ 4.4359684 -2.5256956  2.93789   -7.3652015]]
Iteration 700 of 1000: loss=0.071 " + "l1=0.0694" + "l2=0.00155 f=-0.629 shape=(1, 9000, 1)
logits [[ 4.4276104 -2.5167944  2.9313624 -7.3572245]]
Iteration 800 of 1000: loss=0.0709 " + "l1=0.0693" + "l2=0.00165 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.4197354 -2.508393   2.9252174 -7.3499966]]
Iteration 900 of 1000: loss=0.0709 " + "l1=0.0691" + "l2=0.00179 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.4125037 -2.5004735  2.919438  -7.3435364]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.726 " + "l1=0.726" + "l2=0 f=-0.639 shape=(1, 9000, 1)
logits [[ 4.571719  -2.6876004  3.05216   -7.4926095]]
Iteration 100 of 1000: loss=0.634 " + "l1=0.582" + "l2=0.0527 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.8862333 -1.9291254  2.5456965 -6.9202676]]
Iteration 200 of 1000: loss=0.608 " + "l1=0.544" + "l2=0.0642 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.681014  -1.7575312  2.4325192 -6.6888003]]
Iteration 300 of 1000: loss=0.587 " + "l1=0.514" + "l2=0.0737 f=-0.567 shape=(1, 9000, 1)
logits [[ 3.522684  -1.6135553  2.3305063 -6.506426 ]]
Iteration 400 of 1000: loss=0.569 " + "l1=0.489" + "l2=0.0799 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.3891943 -1.5022812  2.239893  -6.3675175]]
Iteration 500 of 1000: loss=0.553 " + "l1=0.47" + "l2=0.0829 f=-0.558 shape=(1, 9000, 1)
logits [[ 3.2769477 -1.4253575  2.1709933 -6.2556424]]
Iteration 600 of 1000: loss=0.54 " + "l1=0.452" + "l2=0.0878 f=-0.558 shape=(1, 9000, 1)
logits [[ 3.165088  -1.3531357  2.1037107 -6.1465907]]
Iteration 700 of 1000: loss=0.528 " + "l1=0.434" + "l2=0.0942 f=-0.554 shape=(1, 9000, 1)
logits [[ 3.0616195 -1.2808068  2.0407693 -6.0360394]]
Iteration 800 of 1000: loss=0.515 " + "l1=0.415" + "l2=0.0996 f=-0.553 shape=(1, 9000, 1)
logits [[ 2.953494  -1.1991645  1.9761108 -5.944381 ]]
Iteration 900 of 1000: loss=0.504 " + "l1=0.398" + "l2=0.106 f=-0.551 shape=(1, 9000, 1)
logits [[ 2.8486528 -1.1333245  1.9281476 -5.847251 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.26 " + "l1=7.26" + "l2=0 f=-0.639 shape=(1, 9000, 1)
logits [[ 4.571719  -2.6876004  3.05216   -7.4926095]]
Iteration 100 of 1000: loss=1.71 " + "l1=0" + "l2=1.71 f=-0.606 shape=(1, 9000, 1)
logits [[ 0.65073454  0.69086504  0.65274864 -4.4189105 ]]
Iteration 200 of 1000: loss=1.16 " + "l1=0" + "l2=1.16 f=-0.64 shape=(1, 9000, 1)
logits [[ 0.66326195  0.69302267  0.66235393 -4.5791855 ]]
Iteration 300 of 1000: loss=0.999 " + "l1=0" + "l2=0.999 f=-0.642 shape=(1, 9000, 1)
logits [[ 0.6419174  0.7044371  0.6461462 -4.559219 ]]
Iteration 400 of 1000: loss=0.898 " + "l1=0.00121" + "l2=0.897 f=-0.635 shape=(1, 9000, 1)
logits [[ 0.6739078  0.672697   0.6533851 -4.540353 ]]
Iteration 500 of 1000: loss=0.844 " + "l1=0" + "l2=0.844 f=-0.638 shape=(1, 9000, 1)
logits [[ 0.64473593  0.66394955  0.6619491  -4.5246315 ]]
Iteration 600 of 1000: loss=0.81 " + "l1=0" + "l2=0.81 f=-0.633 shape=(1, 9000, 1)
logits [[ 0.62582743  0.6782366   0.64845324 -4.4825215 ]]
Iteration 700 of 1000: loss=0.764 " + "l1=0.000179" + "l2=0.763 f=-0.624 shape=(1, 9000, 1)
logits [[ 0.6522565  0.6520771  0.6481816 -4.4499097]]
Iteration 800 of 1000: loss=0.738 " + "l1=0" + "l2=0.738 f=-0.619 shape=(1, 9000, 1)
logits [[ 0.636568    0.65554726  0.6361684  -4.4054756 ]]
Iteration 900 of 1000: loss=0.706 " + "l1=0" + "l2=0.706 f=-0.617 shape=(1, 9000, 1)
logits [[ 0.6339606   0.64621955  0.63514024 -4.3848605 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.99 " + "l1=3.99" + "l2=0 f=-0.639 shape=(1, 9000, 1)
logits [[ 4.571719  -2.6876004  3.05216   -7.4926095]]
Iteration 100 of 1000: loss=1.85 " + "l1=0.765" + "l2=1.09 f=-0.602 shape=(1, 9000, 1)
logits [[ 1.2622454  -0.12850992  1.2204521  -4.7606335 ]]
Iteration 200 of 1000: loss=0.994 " + "l1=0" + "l2=0.994 f=-0.632 shape=(1, 9000, 1)
logits [[ 0.65997696  0.6965853   0.67511475 -4.5612535 ]]
Iteration 300 of 1000: loss=0.864 " + "l1=0.0077" + "l2=0.857 f=-0.632 shape=(1, 9000, 1)
logits [[ 0.69031227  0.6763156   0.6720506  -4.567094  ]]
Iteration 400 of 1000: loss=0.793 " + "l1=0.00341" + "l2=0.789 f=-0.631 shape=(1, 9000, 1)
logits [[ 0.6709889   0.66507596  0.6712711  -4.533027  ]]
Iteration 500 of 1000: loss=0.753 " + "l1=0.00548" + "l2=0.747 f=-0.627 shape=(1, 9000, 1)
logits [[ 0.652382    0.65462965  0.6645988  -4.480542  ]]
Iteration 600 of 1000: loss=0.723 " + "l1=0.00789" + "l2=0.715 f=-0.623 shape=(1, 9000, 1)
logits [[ 0.6515254  0.6452908  0.6596397 -4.4484277]]
Iteration 700 of 1000: loss=0.694 " + "l1=0" + "l2=0.694 f=-0.617 shape=(1, 9000, 1)
logits [[ 0.645098    0.6530302   0.64720285 -4.4144025 ]]
Iteration 800 of 1000: loss=0.677 " + "l1=0.00131" + "l2=0.676 f=-0.621 shape=(1, 9000, 1)
logits [[ 0.6081091   0.648726    0.65111303 -4.392486  ]]
Iteration 900 of 1000: loss=0.651 " + "l1=0" + "l2=0.651 f=-0.615 shape=(1, 9000, 1)
logits [[ 0.63102907  0.6413991   0.64137477 -4.372417  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.36 " + "l1=2.36" + "l2=0 f=-0.639 shape=(1, 9000, 1)
logits [[ 4.571719  -2.6876004  3.05216   -7.4926095]]
Iteration 100 of 1000: loss=1.55 " + "l1=1.13" + "l2=0.414 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.5392184  -0.94287604  1.8472317  -5.6756005 ]]
Iteration 200 of 1000: loss=1.22 " + "l1=0.587" + "l2=0.637 f=-0.586 shape=(1, 9000, 1)
logits [[ 1.5529327  -0.25347677  1.2556927  -4.898957  ]]
Iteration 300 of 1000: loss=0.858 " + "l1=0.00318" + "l2=0.855 f=-0.619 shape=(1, 9000, 1)
logits [[ 0.66108257  0.65129334  0.6609841  -4.449065  ]]
Iteration 400 of 1000: loss=0.761 " + "l1=0.00137" + "l2=0.76 f=-0.623 shape=(1, 9000, 1)
logits [[ 0.62299263  0.64884454  0.65306103 -4.417532  ]]
Iteration 500 of 1000: loss=0.711 " + "l1=0.0085" + "l2=0.703 f=-0.613 shape=(1, 9000, 1)
logits [[ 0.657613   0.6314489  0.6404437 -4.3832664]]
Iteration 600 of 1000: loss=0.68 " + "l1=0" + "l2=0.68 f=-0.615 shape=(1, 9000, 1)
logits [[ 0.62434214  0.6398306   0.6371564  -4.3621006 ]]
Iteration 700 of 1000: loss=0.652 " + "l1=0.00224" + "l2=0.65 f=-0.609 shape=(1, 9000, 1)
logits [[ 0.63438857  0.6274877   0.630021   -4.3287153 ]]
Iteration 800 of 1000: loss=0.631 " + "l1=0.00205" + "l2=0.629 f=-0.607 shape=(1, 9000, 1)
logits [[ 0.62314653  0.6175134   0.62381774 -4.294122  ]]
Iteration 900 of 1000: loss=0.617 " + "l1=0.00314" + "l2=0.613 f=-0.603 shape=(1, 9000, 1)
logits [[ 0.6152704   0.60658157  0.61623317 -4.248745  ]]
--- 295.62291407585144 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0152 " + "l1=0.0152" + "l2=0 f=-0.639 shape=(1, 9000, 1)
logits [[ 4.571719  -2.6876004  3.05216   -7.4926095]]
Iteration 100 of 1000: loss=0.0149 " + "l1=0.0146" + "l2=0.000294 f=-0.641 shape=(1, 9000, 1)
logits [[ 4.5425158 -2.7137675  3.0829234 -7.4776187]]
Iteration 200 of 1000: loss=0.0148 " + "l1=0.0146" + "l2=0.000271 f=-0.641 shape=(1, 9000, 1)
logits [[ 4.540214  -2.7153258  3.0846128 -7.4748063]]
Iteration 300 of 1000: loss=0.0148 " + "l1=0.0145" + "l2=0.000298 f=-0.642 shape=(1, 9000, 1)
logits [[ 4.535651  -2.7177417  3.0871668 -7.4711447]]
Iteration 400 of 1000: loss=0.0147 " + "l1=0.0144" + "l2=0.000336 f=-0.642 shape=(1, 9000, 1)
logits [[ 4.5310054 -2.7203624  3.089881  -7.4676623]]
Iteration 500 of 1000: loss=0.0148 " + "l1=0.0143" + "l2=0.00044 f=-0.642 shape=(1, 9000, 1)
logits [[ 4.526368  -2.7228088  3.0926008 -7.4644585]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.152 " + "l1=0.152" + "l2=0 f=-0.639 shape=(1, 9000, 1)
logits [[ 4.571719  -2.6876004  3.05216   -7.4926095]]
Iteration 100 of 1000: loss=0.121 " + "l1=0.0999" + "l2=0.0211 f=-0.657 shape=(1, 9000, 1)
logits [[ 4.2969785 -2.8818264  3.2979584 -7.341717 ]]
Iteration 200 of 1000: loss=0.111 " + "l1=0.0837" + "l2=0.0269 f=-0.659 shape=(1, 9000, 1)
logits [[ 4.189061  -2.923729   3.35214   -7.2521477]]
Iteration 300 of 1000: loss=0.101 " + "l1=0.0706" + "l2=0.0309 f=-0.661 shape=(1, 9000, 1)
logits [[ 4.0963564 -2.9556363  3.390427  -7.176519 ]]
Iteration 400 of 1000: loss=0.0935 " + "l1=0.0586" + "l2=0.0349 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.008697  -2.984489   3.4226363 -7.1219482]]
Iteration 500 of 1000: loss=0.087 " + "l1=0.0494" + "l2=0.0376 f=-0.677 shape=(1, 9000, 1)
logits [[ 3.9417365 -3.015763   3.4476724 -7.082    ]]
Iteration 600 of 1000: loss=0.0821 " + "l1=0.042" + "l2=0.0401 f=-0.684 shape=(1, 9000, 1)
logits [[ 3.8860116 -3.0384262  3.4660294 -7.0488696]]
Iteration 700 of 1000: loss=0.078 " + "l1=0.0357" + "l2=0.0423 f=-0.69 shape=(1, 9000, 1)
logits [[ 3.8434832 -3.0631027  3.486784  -7.0259886]]
Iteration 800 of 1000: loss=0.0746 " + "l1=0.0312" + "l2=0.0434 f=-0.693 shape=(1, 9000, 1)
logits [[ 3.8118339 -3.0789526  3.499627  -7.004255 ]]
Iteration 900 of 1000: loss=0.0713 " + "l1=0.0252" + "l2=0.046 f=-0.695 shape=(1, 9000, 1)
logits [[ 3.7713308 -3.1032424  3.5189075 -6.966008 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.52 " + "l1=1.52" + "l2=0 f=-0.639 shape=(1, 9000, 1)
logits [[ 4.571719  -2.6876004  3.05216   -7.4926095]]
Iteration 100 of 1000: loss=0.174 " + "l1=0" + "l2=0.174 f=-0.719 shape=(1, 9000, 1)
logits [[ 3.6065009 -3.1362898  3.6179843 -6.964628 ]]
Iteration 200 of 1000: loss=0.128 " + "l1=0" + "l2=0.128 f=-0.707 shape=(1, 9000, 1)
logits [[ 3.594266  -3.132584   3.6191351 -6.9097824]]
Iteration 300 of 1000: loss=0.107 " + "l1=0" + "l2=0.107 f=-0.702 shape=(1, 9000, 1)
logits [[ 3.59177   -3.1378615  3.6158333 -6.877312 ]]
Iteration 400 of 1000: loss=0.0957 " + "l1=0" + "l2=0.0957 f=-0.702 shape=(1, 9000, 1)
logits [[ 3.591704  -3.148186   3.6169348 -6.866728 ]]
Iteration 500 of 1000: loss=0.0858 " + "l1=0" + "l2=0.0858 f=-0.703 shape=(1, 9000, 1)
logits [[ 3.6029115 -3.1536214  3.6131296 -6.8740096]]
Iteration 600 of 1000: loss=0.0808 " + "l1=0" + "l2=0.0808 f=-0.703 shape=(1, 9000, 1)
logits [[ 3.6012728 -3.1631167  3.6158772 -6.8678517]]
Iteration 700 of 1000: loss=0.0772 " + "l1=0" + "l2=0.0772 f=-0.703 shape=(1, 9000, 1)
logits [[ 3.5947301 -3.1682713  3.6146114 -6.852282 ]]
Iteration 800 of 1000: loss=0.0715 " + "l1=0" + "l2=0.0715 f=-0.699 shape=(1, 9000, 1)
logits [[ 3.6040335 -3.1663952  3.6071513 -6.840774 ]]
Iteration 900 of 1000: loss=0.0711 " + "l1=0" + "l2=0.0711 f=-0.698 shape=(1, 9000, 1)
logits [[ 3.589163  -3.175485   3.6132214 -6.818689 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.836 " + "l1=0.836" + "l2=0 f=-0.639 shape=(1, 9000, 1)
logits [[ 4.571719  -2.6876004  3.05216   -7.4926095]]
Iteration 100 of 1000: loss=0.166 " + "l1=0" + "l2=0.166 f=-0.711 shape=(1, 9000, 1)
logits [[ 3.602705  -3.1117337  3.6063573 -6.9400835]]
Iteration 200 of 1000: loss=0.117 " + "l1=0" + "l2=0.117 f=-0.699 shape=(1, 9000, 1)
logits [[ 3.603144  -3.1169827  3.6035635 -6.8843336]]
Iteration 300 of 1000: loss=0.0984 " + "l1=0" + "l2=0.0984 f=-0.698 shape=(1, 9000, 1)
logits [[ 3.597918 -3.128932  3.601388 -6.861118]]
Iteration 400 of 1000: loss=0.0909 " + "l1=0" + "l2=0.0909 f=-0.7 shape=(1, 9000, 1)
logits [[ 3.5864768 -3.1457374  3.610175  -6.8511567]]
Iteration 500 of 1000: loss=0.0806 " + "l1=0" + "l2=0.0806 f=-0.7 shape=(1, 9000, 1)
logits [[ 3.6003165 -3.1519787  3.6031222 -6.8525352]]
Iteration 600 of 1000: loss=0.0769 " + "l1=0.00245" + "l2=0.0744 f=-0.7 shape=(1, 9000, 1)
logits [[ 3.605858  -3.1590931  3.6014097 -6.8483562]]
Iteration 700 of 1000: loss=0.0724 " + "l1=0.00228" + "l2=0.0701 f=-0.699 shape=(1, 9000, 1)
logits [[ 3.6075857 -3.167185   3.603434  -6.8384094]]
Iteration 800 of 1000: loss=0.0707 " + "l1=0" + "l2=0.0707 f=-0.699 shape=(1, 9000, 1)
logits [[ 3.5862296 -3.180542   3.6148536 -6.818026 ]]
Iteration 900 of 1000: loss=0.0647 " + "l1=0" + "l2=0.0647 f=-0.697 shape=(1, 9000, 1)
logits [[ 3.5990598 -3.1736681  3.6019826 -6.8168697]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.494 " + "l1=0.494" + "l2=0 f=-0.639 shape=(1, 9000, 1)
logits [[ 4.571719  -2.6876004  3.05216   -7.4926095]]
Iteration 100 of 1000: loss=0.175 " + "l1=0.0051" + "l2=0.17 f=-0.699 shape=(1, 9000, 1)
logits [[ 3.61665   -3.0823355  3.6009717 -6.9293604]]
Iteration 200 of 1000: loss=0.118 " + "l1=0.00162" + "l2=0.116 f=-0.694 shape=(1, 9000, 1)
logits [[ 3.606546  -3.1103344  3.601552  -6.8751254]]
Iteration 300 of 1000: loss=0.0963 " + "l1=0" + "l2=0.0963 f=-0.695 shape=(1, 9000, 1)
logits [[ 3.6031194 -3.131907   3.6041422 -6.8571277]]
Iteration 400 of 1000: loss=0.0878 " + "l1=0" + "l2=0.0878 f=-0.698 shape=(1, 9000, 1)
logits [[ 3.591356  -3.1469839  3.6081195 -6.8447213]]
Iteration 500 of 1000: loss=0.0795 " + "l1=0" + "l2=0.0795 f=-0.699 shape=(1, 9000, 1)
logits [[ 3.5973568 -3.161434   3.608888  -6.8426223]]
Iteration 600 of 1000: loss=0.0722 " + "l1=0" + "l2=0.0722 f=-0.699 shape=(1, 9000, 1)
logits [[ 3.6037745 -3.1675224  3.604512  -6.836514 ]]
Iteration 700 of 1000: loss=0.0709 " + "l1=0" + "l2=0.0709 f=-0.7 shape=(1, 9000, 1)
logits [[ 3.592701  -3.1837769  3.6154401 -6.8227205]]
Iteration 800 of 1000: loss=0.0659 " + "l1=0" + "l2=0.0659 f=-0.698 shape=(1, 9000, 1)
logits [[ 3.599704  -3.1822672  3.607983  -6.8190737]]
Iteration 900 of 1000: loss=0.0637 " + "l1=0" + "l2=0.0637 f=-0.698 shape=(1, 9000, 1)
logits [[ 3.5918267 -3.1850383  3.6084988 -6.8057346]]
--- 268.00299310684204 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.121 " + "l1=0.121" + "l2=0 f=-0.639 shape=(1, 9000, 1)
logits [[ 4.571719  -2.6876004  3.05216   -7.4926095]]
Iteration 100 of 1000: loss=0.119 " + "l1=0.119" + "l2=0.000815 f=-0.631 shape=(1, 9000, 1)
logits [[ 4.481496  -2.6297133  2.999807  -7.3742924]]
Iteration 200 of 1000: loss=0.119 " + "l1=0.118" + "l2=0.000969 f=-0.629 shape=(1, 9000, 1)
logits [[ 4.4615397 -2.6202636  2.9905407 -7.3458967]]
Iteration 300 of 1000: loss=0.119 " + "l1=0.118" + "l2=0.00116 f=-0.626 shape=(1, 9000, 1)
logits [[ 4.4430866 -2.6141756  2.9837577 -7.3170004]]
Iteration 400 of 1000: loss=0.119 " + "l1=0.117" + "l2=0.00138 f=-0.624 shape=(1, 9000, 1)
logits [[ 4.4258695 -2.6080418  2.9765174 -7.2895894]]
Iteration 500 of 1000: loss=0.118 " + "l1=0.117" + "l2=0.00155 f=-0.622 shape=(1, 9000, 1)
logits [[ 4.4104853 -2.6027818  2.9702137 -7.2643685]]
Iteration 600 of 1000: loss=0.118 " + "l1=0.116" + "l2=0.00178 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.3973403 -2.5999386  2.965894  -7.2411666]]
Iteration 700 of 1000: loss=0.118 " + "l1=0.116" + "l2=0.00198 f=-0.618 shape=(1, 9000, 1)
logits [[ 4.3848476 -2.598262   2.9621046 -7.219207 ]]
Iteration 800 of 1000: loss=0.118 " + "l1=0.116" + "l2=0.00213 f=-0.616 shape=(1, 9000, 1)
logits [[ 4.373556  -2.5970309  2.9585497 -7.1987395]]
Iteration 900 of 1000: loss=0.118 " + "l1=0.115" + "l2=0.00227 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.3626513 -2.5952647  2.9549284 -7.1792545]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.21 " + "l1=1.21" + "l2=0 f=-0.639 shape=(1, 9000, 1)
logits [[ 4.571719  -2.6876004  3.05216   -7.4926095]]
Iteration 100 of 1000: loss=1.08 " + "l1=1" + "l2=0.0746 f=-0.561 shape=(1, 9000, 1)
logits [[ 3.6783226 -2.210885   2.6521928 -6.3640656]]
Iteration 200 of 1000: loss=1.02 " + "l1=0.918" + "l2=0.106 f=-0.519 shape=(1, 9000, 1)
logits [[ 3.330654  -2.0437784  2.4896922 -5.851239 ]]
Iteration 300 of 1000: loss=0.979 " + "l1=0.854" + "l2=0.125 f=-0.486 shape=(1, 9000, 1)
logits [[ 3.094488  -1.9470937  2.3519237 -5.4445615]]
Iteration 400 of 1000: loss=0.938 " + "l1=0.789" + "l2=0.149 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.851496  -1.8683157  2.2107003 -5.0411043]]
Iteration 500 of 1000: loss=0.897 " + "l1=0.727" + "l2=0.17 f=-0.441 shape=(1, 9000, 1)
logits [[ 2.6151958 -1.8214666  2.095371  -4.6549187]]
Iteration 600 of 1000: loss=0.85 " + "l1=0.654" + "l2=0.196 f=-0.419 shape=(1, 9000, 1)
logits [[ 2.3235762 -1.7576758  1.9804763 -4.220527 ]]
Iteration 700 of 1000: loss=0.801 " + "l1=0.582" + "l2=0.219 f=-0.4 shape=(1, 9000, 1)
logits [[ 2.0278256 -1.7037526  1.8713539 -3.7948704]]
Iteration 800 of 1000: loss=0.752 " + "l1=0.514" + "l2=0.238 f=-0.388 shape=(1, 9000, 1)
logits [[ 1.7465224 -1.6537912  1.7456566 -3.3920286]]
Iteration 900 of 1000: loss=0.71 " + "l1=0.467" + "l2=0.243 f=-0.372 shape=(1, 9000, 1)
logits [[ 1.5897561 -1.5929637  1.5906461 -3.0753977]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.1 " + "l1=12.1" + "l2=0 f=-0.639 shape=(1, 9000, 1)
logits [[ 4.571719  -2.6876004  3.05216   -7.4926095]]
Iteration 100 of 1000: loss=3.67 " + "l1=0.549" + "l2=3.12 f=-0.187 shape=(1, 9000, 1)
logits [[-0.01244409 -0.29731822  0.05535828 -0.49362278]]
Iteration 200 of 1000: loss=2.05 " + "l1=0" + "l2=2.05 f=-0.162 shape=(1, 9000, 1)
logits [[-0.17042905 -0.23133689 -0.12402627 -0.12144754]]
Iteration 300 of 1000: loss=1.68 " + "l1=0.0438" + "l2=1.64 f=-0.155 shape=(1, 9000, 1)
logits [[-0.10358016 -0.29058716 -0.09106733 -0.1348348 ]]
Iteration 400 of 1000: loss=1.43 " + "l1=0.0047" + "l2=1.42 f=-0.148 shape=(1, 9000, 1)
logits [[-0.07510153 -0.35838124 -0.07929654 -0.0798039 ]]
Iteration 500 of 1000: loss=1.25 " + "l1=0.0119" + "l2=1.24 f=-0.147 shape=(1, 9000, 1)
logits [[-0.05886373 -0.39538896 -0.06166988 -0.07076441]]
Iteration 600 of 1000: loss=1.16 " + "l1=0" + "l2=1.16 f=-0.15 shape=(1, 9000, 1)
logits [[-0.09890793 -0.41417542 -0.06777853 -0.02084357]]
Iteration 700 of 1000: loss=1.05 " + "l1=0" + "l2=1.05 f=-0.156 shape=(1, 9000, 1)
logits [[-0.06465404 -0.46504676 -0.05445002 -0.04038961]]
Iteration 800 of 1000: loss=0.98 " + "l1=0" + "l2=0.98 f=-0.166 shape=(1, 9000, 1)
logits [[-0.07316715 -0.5052028  -0.05754481 -0.02706605]]
Iteration 900 of 1000: loss=0.922 " + "l1=0.00866" + "l2=0.914 f=-0.176 shape=(1, 9000, 1)
logits [[-0.05345485 -0.54093474 -0.05056108 -0.05921889]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.64 " + "l1=6.64" + "l2=0 f=-0.639 shape=(1, 9000, 1)
logits [[ 4.571719  -2.6876004  3.05216   -7.4926095]]
Iteration 100 of 1000: loss=3.31 " + "l1=1.85" + "l2=1.46 f=-0.285 shape=(1, 9000, 1)
logits [[ 1.0213284 -0.8448173  1.0277191 -2.3447824]]
Iteration 200 of 1000: loss=1.87 " + "l1=0.0846" + "l2=1.78 f=-0.167 shape=(1, 9000, 1)
logits [[-0.13259603 -0.26622492 -0.05809555 -0.21182704]]
Iteration 300 of 1000: loss=1.34 " + "l1=0.0179" + "l2=1.32 f=-0.16 shape=(1, 9000, 1)
logits [[-0.08679496 -0.38277233 -0.06941229 -0.10197557]]
Iteration 400 of 1000: loss=1.13 " + "l1=0.00823" + "l2=1.12 f=-0.167 shape=(1, 9000, 1)
logits [[-0.05230152 -0.4937982  -0.05306342 -0.06726878]]
Iteration 500 of 1000: loss=1.01 " + "l1=0.0154" + "l2=0.991 f=-0.177 shape=(1, 9000, 1)
logits [[-0.04749371 -0.5688343  -0.03267045 -0.06073505]]
Iteration 600 of 1000: loss=0.912 " + "l1=0.00351" + "l2=0.909 f=-0.185 shape=(1, 9000, 1)
logits [[-0.05791409 -0.6253026  -0.02566403 -0.03204584]]
Iteration 700 of 1000: loss=0.839 " + "l1=0.00317" + "l2=0.835 f=-0.199 shape=(1, 9000, 1)
logits [[-0.05799448 -0.7099717  -0.01176003 -0.01751764]]
Iteration 800 of 1000: loss=0.782 " + "l1=0" + "l2=0.782 f=-0.211 shape=(1, 9000, 1)
logits [[-0.09142257 -0.7626823  -0.00915672  0.01818956]]
Iteration 900 of 1000: loss=0.731 " + "l1=0" + "l2=0.731 f=-0.218 shape=(1, 9000, 1)
logits [[-0.08727704 -0.8285194   0.01298235  0.02894258]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.92 " + "l1=3.92" + "l2=0 f=-0.639 shape=(1, 9000, 1)
logits [[ 4.571719  -2.6876004  3.05216   -7.4926095]]
Iteration 100 of 1000: loss=2.62 " + "l1=1.93" + "l2=0.691 f=-0.392 shape=(1, 9000, 1)
logits [[ 1.960298  -1.4254564  1.8612784 -3.9639175]]
Iteration 200 of 1000: loss=1.97 " + "l1=1.07" + "l2=0.902 f=-0.287 shape=(1, 9000, 1)
logits [[ 1.0387777  -0.98210883  1.0439429  -2.2467322 ]]
Iteration 300 of 1000: loss=1.46 " + "l1=0.431" + "l2=1.03 f=-0.197 shape=(1, 9000, 1)
logits [[ 0.3929384 -0.6488791  0.3965599 -0.9283399]]
Iteration 400 of 1000: loss=1.12 " + "l1=0.0479" + "l2=1.07 f=-0.174 shape=(1, 9000, 1)
logits [[-0.02298713 -0.58321047  0.02922097 -0.11823458]]
Iteration 500 of 1000: loss=0.937 " + "l1=0.0135" + "l2=0.923 f=-0.185 shape=(1, 9000, 1)
logits [[-0.04650247 -0.70394     0.0261283  -0.01536711]]
Iteration 600 of 1000: loss=0.815 " + "l1=0.0038" + "l2=0.811 f=-0.201 shape=(1, 9000, 1)
logits [[-0.07389876 -0.7864633   0.03330556  0.02159889]]
Iteration 700 of 1000: loss=0.739 " + "l1=0" + "l2=0.739 f=-0.22 shape=(1, 9000, 1)
logits [[-0.09577002 -0.8782426   0.04385779  0.04954126]]
Iteration 800 of 1000: loss=0.692 " + "l1=0.0021" + "l2=0.69 f=-0.234 shape=(1, 9000, 1)
logits [[-0.11170954 -0.95014435  0.0653072   0.05884252]]
Iteration 900 of 1000: loss=0.654 " + "l1=0" + "l2=0.654 f=-0.245 shape=(1, 9000, 1)
logits [[-0.13848305 -0.98875326  0.07331907  0.07513816]]
--- 296.4354054927826 seconds ---
Adv result:3
Loading record A02279
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0477 " + "l1=0.0477" + "l2=0 f=-0.368 shape=(1, 9000, 1)
logits [[ 3.0591242 -1.7137119  1.5734537 -4.391004 ]]
Iteration 100 of 1000: loss=0.047 " + "l1=0.0466" + "l2=0.000393 f=-0.364 shape=(1, 9000, 1)
logits [[ 3.0065975 -1.6557566  1.5507513 -4.357744 ]]
Iteration 200 of 1000: loss=0.0467 " + "l1=0.0463" + "l2=0.000474 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.9919205 -1.6339028  1.5428658 -4.3511977]]
Iteration 300 of 1000: loss=0.0465 " + "l1=0.0459" + "l2=0.000616 f=-0.361 shape=(1, 9000, 1)
logits [[ 2.9754117 -1.6107258  1.5347539 -4.343609 ]]
Iteration 400 of 1000: loss=0.0463 " + "l1=0.0455" + "l2=0.000821 f=-0.36 shape=(1, 9000, 1)
logits [[ 2.9585395 -1.587796   1.5269315 -4.3364644]]
Iteration 500 of 1000: loss=0.046 " + "l1=0.0451" + "l2=0.000961 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.942227  -1.5652199  1.5190716 -4.329184 ]]
Iteration 600 of 1000: loss=0.0459 " + "l1=0.0448" + "l2=0.00111 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.9288883 -1.5471927  1.5120054 -4.3223104]]
Iteration 700 of 1000: loss=0.0458 " + "l1=0.0445" + "l2=0.00129 f=-0.356 shape=(1, 9000, 1)
logits [[ 2.91743   -1.5322899  1.5057378 -4.3154674]]
Iteration 800 of 1000: loss=0.0458 " + "l1=0.0443" + "l2=0.0015 f=-0.355 shape=(1, 9000, 1)
logits [[ 2.9072154 -1.518853   1.4997904 -4.308853 ]]
Iteration 900 of 1000: loss=0.0457 " + "l1=0.044" + "l2=0.00167 f=-0.354 shape=(1, 9000, 1)
logits [[ 2.8972616 -1.5053842  1.4934946 -4.30194  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.477 " + "l1=0.477" + "l2=0 f=-0.368 shape=(1, 9000, 1)
logits [[ 3.0591242 -1.7137119  1.5734537 -4.391004 ]]
Iteration 100 of 1000: loss=0.416 " + "l1=0.387" + "l2=0.029 f=-0.347 shape=(1, 9000, 1)
logits [[ 2.6203597 -1.2492774  1.3891754 -4.1490316]]
Iteration 200 of 1000: loss=0.39 " + "l1=0.355" + "l2=0.0348 f=-0.345 shape=(1, 9000, 1)
logits [[ 2.4656477 -1.0879219  1.309089  -4.06709  ]]
Iteration 300 of 1000: loss=0.372 " + "l1=0.33" + "l2=0.0415 f=-0.346 shape=(1, 9000, 1)
logits [[ 2.32672   -0.9748839  1.2435299 -3.978622 ]]
Iteration 400 of 1000: loss=0.357 " + "l1=0.309" + "l2=0.0484 f=-0.345 shape=(1, 9000, 1)
logits [[ 2.2016025  -0.88824993  1.1895654  -3.8839595 ]]
Iteration 500 of 1000: loss=0.344 " + "l1=0.286" + "l2=0.0577 f=-0.349 shape=(1, 9000, 1)
logits [[ 2.065912   -0.79579425  1.1403036  -3.8059769 ]]
Iteration 600 of 1000: loss=0.332 " + "l1=0.268" + "l2=0.0637 f=-0.345 shape=(1, 9000, 1)
logits [[ 1.9531457 -0.7263023  1.0920557 -3.6983993]]
Iteration 700 of 1000: loss=0.322 " + "l1=0.253" + "l2=0.0685 f=-0.346 shape=(1, 9000, 1)
logits [[ 1.8510839  -0.68360114  1.0509182  -3.60072   ]]
Iteration 800 of 1000: loss=0.313 " + "l1=0.238" + "l2=0.0743 f=-0.348 shape=(1, 9000, 1)
logits [[ 1.7418418 -0.6426193  1.0068008 -3.4973147]]
Iteration 900 of 1000: loss=0.303 " + "l1=0.223" + "l2=0.08 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.6240895 -0.6048516  0.9554078 -3.3856633]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.77 " + "l1=4.77" + "l2=0 f=-0.368 shape=(1, 9000, 1)
logits [[ 3.0591242 -1.7137119  1.5734537 -4.391004 ]]
Iteration 100 of 1000: loss=1.47 " + "l1=0.336" + "l2=1.14 f=-0.354 shape=(1, 9000, 1)
logits [[ 0.50628763  0.18119337  0.51681167 -2.6202028 ]]
Iteration 200 of 1000: loss=0.839 " + "l1=0" + "l2=0.839 f=-0.378 shape=(1, 9000, 1)
logits [[ 0.28236225  0.28920242  0.28908584 -2.3736298 ]]
Iteration 300 of 1000: loss=0.643 " + "l1=0.000863" + "l2=0.642 f=-0.376 shape=(1, 9000, 1)
logits [[ 0.28442428  0.28356138  0.2662307  -2.3387892 ]]
Iteration 400 of 1000: loss=0.542 " + "l1=0.00476" + "l2=0.537 f=-0.379 shape=(1, 9000, 1)
logits [[ 0.2655258   0.26514286  0.26989934 -2.3161304 ]]
Iteration 500 of 1000: loss=0.483 " + "l1=0.00188" + "l2=0.481 f=-0.375 shape=(1, 9000, 1)
logits [[ 0.2595252   0.25764585  0.25453407 -2.2708676 ]]
Iteration 600 of 1000: loss=0.443 " + "l1=0" + "l2=0.443 f=-0.376 shape=(1, 9000, 1)
logits [[ 0.23336503  0.25244185  0.2482204  -2.238362  ]]
Iteration 700 of 1000: loss=0.409 " + "l1=0" + "l2=0.409 f=-0.373 shape=(1, 9000, 1)
logits [[ 0.23834512  0.24365051  0.236207   -2.2121508 ]]
Iteration 800 of 1000: loss=0.387 " + "l1=0" + "l2=0.387 f=-0.37 shape=(1, 9000, 1)
logits [[ 0.22389258  0.24074839  0.22842279 -2.1749468 ]]
Iteration 900 of 1000: loss=0.364 " + "l1=0" + "l2=0.364 f=-0.37 shape=(1, 9000, 1)
logits [[ 0.2162228   0.22885531  0.22654505 -2.1526847 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.63 " + "l1=2.63" + "l2=0 f=-0.368 shape=(1, 9000, 1)
logits [[ 3.0591242 -1.7137119  1.5734537 -4.391004 ]]
Iteration 100 of 1000: loss=1.34 " + "l1=0.703" + "l2=0.64 f=-0.373 shape=(1, 9000, 1)
logits [[ 1.0635778  -0.21443684  0.9038887  -3.2464528 ]]
Iteration 200 of 1000: loss=0.843 " + "l1=0.239" + "l2=0.604 f=-0.375 shape=(1, 9000, 1)
logits [[ 0.5433693   0.10858827  0.5432622  -2.6957486 ]]
Iteration 300 of 1000: loss=0.578 " + "l1=0.00755" + "l2=0.571 f=-0.366 shape=(1, 9000, 1)
logits [[ 0.2893336  0.2763914  0.2901218 -2.3180213]]
Iteration 400 of 1000: loss=0.467 " + "l1=0" + "l2=0.467 f=-0.363 shape=(1, 9000, 1)
logits [[ 0.24952132  0.2615366   0.25635868 -2.2205107 ]]
Iteration 500 of 1000: loss=0.409 " + "l1=0.0015" + "l2=0.407 f=-0.362 shape=(1, 9000, 1)
logits [[ 0.24954817  0.24681458  0.24740826 -2.1935132 ]]
Iteration 600 of 1000: loss=0.372 " + "l1=0.000529" + "l2=0.372 f=-0.362 shape=(1, 9000, 1)
logits [[ 0.23161927  0.23680873  0.23777105 -2.1536255 ]]
Iteration 700 of 1000: loss=0.345 " + "l1=0" + "l2=0.345 f=-0.359 shape=(1, 9000, 1)
logits [[ 0.2285339   0.23010506  0.22571515 -2.1186295 ]]
Iteration 800 of 1000: loss=0.329 " + "l1=0" + "l2=0.329 f=-0.359 shape=(1, 9000, 1)
logits [[ 0.20221196  0.22605     0.2185007  -2.0840385 ]]
Iteration 900 of 1000: loss=0.312 " + "l1=0" + "l2=0.312 f=-0.356 shape=(1, 9000, 1)
logits [[ 0.19593942  0.2174021   0.2130186  -2.0520186 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.55 " + "l1=1.55" + "l2=0 f=-0.368 shape=(1, 9000, 1)
logits [[ 3.0591242 -1.7137119  1.5734537 -4.391004 ]]
Iteration 100 of 1000: loss=1.05 " + "l1=0.813" + "l2=0.233 f=-0.365 shape=(1, 9000, 1)
logits [[ 1.8161035 -0.686631   1.1434767 -3.7334595]]
Iteration 200 of 1000: loss=0.821 " + "l1=0.505" + "l2=0.315 f=-0.368 shape=(1, 9000, 1)
logits [[ 1.2492074  -0.30533355  0.89371914 -3.308938  ]]
Iteration 300 of 1000: loss=0.639 " + "l1=0.258" + "l2=0.381 f=-0.381 shape=(1, 9000, 1)
logits [[ 0.7262435  -0.06756864  0.67340595 -2.8543682 ]]
Iteration 400 of 1000: loss=0.518 " + "l1=0.152" + "l2=0.367 f=-0.371 shape=(1, 9000, 1)
logits [[ 0.51196337  0.04578481  0.5015396  -2.544617  ]]
Iteration 500 of 1000: loss=0.443 " + "l1=0.0773" + "l2=0.365 f=-0.363 shape=(1, 9000, 1)
logits [[ 0.37283576  0.13520643  0.37301117 -2.332759  ]]
Iteration 600 of 1000: loss=0.387 " + "l1=0.0145" + "l2=0.373 f=-0.356 shape=(1, 9000, 1)
logits [[ 0.2479639   0.21689527  0.26145598 -2.148356  ]]
Iteration 700 of 1000: loss=0.338 " + "l1=0.00113" + "l2=0.337 f=-0.352 shape=(1, 9000, 1)
logits [[ 0.22104144  0.2188024   0.22229092 -2.070758  ]]
Iteration 800 of 1000: loss=0.31 " + "l1=0.00241" + "l2=0.307 f=-0.351 shape=(1, 9000, 1)
logits [[ 0.21164489  0.20423397  0.21150032 -2.032308  ]]
Iteration 900 of 1000: loss=0.287 " + "l1=0.00356" + "l2=0.283 f=-0.354 shape=(1, 9000, 1)
logits [[ 0.19633225  0.18851908  0.19947797 -2.0020473 ]]
--- 297.13264775276184 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0149 " + "l1=0.0149" + "l2=0 f=-0.368 shape=(1, 9000, 1)
logits [[ 3.0591242 -1.7137119  1.5734537 -4.391004 ]]
Iteration 100 of 1000: loss=0.0147 " + "l1=0.0146" + "l2=0.000128 f=-0.368 shape=(1, 9000, 1)
logits [[ 3.0339077 -1.7044417  1.5747547 -4.3762765]]
Iteration 200 of 1000: loss=0.0147 " + "l1=0.0146" + "l2=0.000112 f=-0.368 shape=(1, 9000, 1)
logits [[ 3.0308194 -1.7026012  1.5743772 -4.374027 ]]
Iteration 300 of 1000: loss=0.0147 " + "l1=0.0145" + "l2=0.000141 f=-0.368 shape=(1, 9000, 1)
logits [[ 3.026317  -1.7000289  1.5742651 -4.371255 ]]
Iteration 400 of 1000: loss=0.0147 " + "l1=0.0145" + "l2=0.000194 f=-0.367 shape=(1, 9000, 1)
logits [[ 3.0217614 -1.6974164  1.5741891 -4.368436 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.149 " + "l1=0.149" + "l2=0 f=-0.368 shape=(1, 9000, 1)
logits [[ 3.0591242 -1.7137119  1.5734537 -4.391004 ]]
Iteration 100 of 1000: loss=0.136 " + "l1=0.128" + "l2=0.00809 f=-0.372 shape=(1, 9000, 1)
logits [[ 2.8581161 -1.6341765  1.5829841 -4.2945757]]
Iteration 200 of 1000: loss=0.131 " + "l1=0.121" + "l2=0.01 f=-0.372 shape=(1, 9000, 1)
logits [[ 2.7918541 -1.5983684  1.5852216 -4.268284 ]]
Iteration 300 of 1000: loss=0.126 " + "l1=0.114" + "l2=0.0126 f=-0.373 shape=(1, 9000, 1)
logits [[ 2.725222  -1.5608026  1.5866263 -4.2421393]]
Iteration 400 of 1000: loss=0.123 " + "l1=0.108" + "l2=0.0152 f=-0.375 shape=(1, 9000, 1)
logits [[ 2.6657393 -1.541919   1.5904794 -4.2129455]]
Iteration 500 of 1000: loss=0.118 " + "l1=0.1" + "l2=0.0183 f=-0.379 shape=(1, 9000, 1)
logits [[ 2.595818  -1.5224173  1.5947047 -4.183394 ]]
Iteration 600 of 1000: loss=0.114 " + "l1=0.0933" + "l2=0.0211 f=-0.382 shape=(1, 9000, 1)
logits [[ 2.5335975 -1.5093364  1.6002451 -4.1528406]]
Iteration 700 of 1000: loss=0.11 " + "l1=0.0861" + "l2=0.0241 f=-0.385 shape=(1, 9000, 1)
logits [[ 2.4654806 -1.4935837  1.6040814 -4.1155763]]
Iteration 800 of 1000: loss=0.106 " + "l1=0.0797" + "l2=0.026 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.4052563 -1.4862823  1.6080738 -4.0760746]]
Iteration 900 of 1000: loss=0.102 " + "l1=0.0745" + "l2=0.0277 f=-0.389 shape=(1, 9000, 1)
logits [[ 2.3546412 -1.4741478  1.609926  -4.0470924]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.49 " + "l1=1.49" + "l2=0 f=-0.368 shape=(1, 9000, 1)
logits [[ 3.0591242 -1.7137119  1.5734537 -4.391004 ]]
Iteration 100 of 1000: loss=0.316 " + "l1=0.00466" + "l2=0.311 f=-0.477 shape=(1, 9000, 1)
logits [[ 1.7670836 -1.4662151  1.7624267 -3.972429 ]]
Iteration 200 of 1000: loss=0.235 " + "l1=0" + "l2=0.235 f=-0.478 shape=(1, 9000, 1)
logits [[ 1.7608263 -1.5000123  1.7791914 -3.9503772]]
Iteration 300 of 1000: loss=0.198 " + "l1=0.00644" + "l2=0.191 f=-0.471 shape=(1, 9000, 1)
logits [[ 1.7814448 -1.502401   1.7750092 -3.938303 ]]
Iteration 400 of 1000: loss=0.171 " + "l1=0" + "l2=0.171 f=-0.468 shape=(1, 9000, 1)
logits [[ 1.7667891 -1.4991664  1.7725054 -3.9111786]]
Iteration 500 of 1000: loss=0.159 " + "l1=0" + "l2=0.159 f=-0.466 shape=(1, 9000, 1)
logits [[ 1.75179   -1.5004969  1.7723294 -3.8893213]]
Iteration 600 of 1000: loss=0.143 " + "l1=0.00243" + "l2=0.14 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.7634295 -1.4958417  1.7609988 -3.8792496]]
Iteration 700 of 1000: loss=0.13 " + "l1=0" + "l2=0.13 f=-0.46 shape=(1, 9000, 1)
logits [[ 1.7566258 -1.4958055  1.7585021 -3.8604262]]
Iteration 800 of 1000: loss=0.124 " + "l1=0" + "l2=0.124 f=-0.457 shape=(1, 9000, 1)
logits [[ 1.7358115 -1.4910866  1.7541355 -3.8281817]]
Iteration 900 of 1000: loss=0.113 " + "l1=0" + "l2=0.113 f=-0.453 shape=(1, 9000, 1)
logits [[ 1.7396052 -1.4897064  1.7476653 -3.810421 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.817 " + "l1=0.817" + "l2=0 f=-0.368 shape=(1, 9000, 1)
logits [[ 3.0591242 -1.7137119  1.5734537 -4.391004 ]]
Iteration 100 of 1000: loss=0.329 " + "l1=0.0199" + "l2=0.309 f=-0.479 shape=(1, 9000, 1)
logits [[ 1.792021  -1.4551336  1.755836  -4.010681 ]]
Iteration 200 of 1000: loss=0.213 " + "l1=0" + "l2=0.213 f=-0.48 shape=(1, 9000, 1)
logits [[ 1.7759537 -1.4940206  1.7769457 -3.978173 ]]
Iteration 300 of 1000: loss=0.172 " + "l1=0" + "l2=0.172 f=-0.475 shape=(1, 9000, 1)
logits [[ 1.7783786 -1.5058098  1.7805018 -3.9527736]]
Iteration 400 of 1000: loss=0.148 " + "l1=0.00139" + "l2=0.147 f=-0.471 shape=(1, 9000, 1)
logits [[ 1.7797666 -1.5067917  1.7772361 -3.9324708]]
Iteration 500 of 1000: loss=0.131 " + "l1=0" + "l2=0.131 f=-0.468 shape=(1, 9000, 1)
logits [[ 1.7716224 -1.5007808  1.7716831 -3.9149473]]
Iteration 600 of 1000: loss=0.122 " + "l1=0" + "l2=0.122 f=-0.465 shape=(1, 9000, 1)
logits [[ 1.7589432 -1.5015856  1.7711781 -3.887753 ]]
Iteration 700 of 1000: loss=0.113 " + "l1=0" + "l2=0.113 f=-0.46 shape=(1, 9000, 1)
logits [[ 1.7593392 -1.496751   1.7610664 -3.8621416]]
Iteration 800 of 1000: loss=0.107 " + "l1=0" + "l2=0.107 f=-0.455 shape=(1, 9000, 1)
logits [[ 1.7420474 -1.486305   1.7489716 -3.8234844]]
Iteration 900 of 1000: loss=0.101 " + "l1=0" + "l2=0.101 f=-0.45 shape=(1, 9000, 1)
logits [[ 1.7340295 -1.4823135  1.7408354 -3.791985 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.483 " + "l1=0.483" + "l2=0 f=-0.368 shape=(1, 9000, 1)
logits [[ 3.0591242 -1.7137119  1.5734537 -4.391004 ]]
Iteration 100 of 1000: loss=0.331 " + "l1=0.228" + "l2=0.104 f=-0.409 shape=(1, 9000, 1)
logits [[ 2.3466096 -1.5129616  1.6455212 -4.115431 ]]
Iteration 200 of 1000: loss=0.24 " + "l1=0.0853" + "l2=0.154 f=-0.455 shape=(1, 9000, 1)
logits [[ 1.9830093 -1.4638163  1.7206858 -4.0596094]]
Iteration 300 of 1000: loss=0.175 " + "l1=0.00339" + "l2=0.172 f=-0.479 shape=(1, 9000, 1)
logits [[ 1.7772834 -1.4818447  1.7668535 -3.9781141]]
Iteration 400 of 1000: loss=0.142 " + "l1=0.00386" + "l2=0.138 f=-0.471 shape=(1, 9000, 1)
logits [[ 1.7814229 -1.4911296  1.769553  -3.9421074]]
Iteration 500 of 1000: loss=0.127 " + "l1=0" + "l2=0.127 f=-0.467 shape=(1, 9000, 1)
logits [[ 1.7604667 -1.4863323  1.7648598 -3.9086583]]
Iteration 600 of 1000: loss=0.116 " + "l1=0" + "l2=0.116 f=-0.462 shape=(1, 9000, 1)
logits [[ 1.7531983 -1.4790008  1.7562174 -3.8790667]]
Iteration 700 of 1000: loss=0.108 " + "l1=0" + "l2=0.108 f=-0.457 shape=(1, 9000, 1)
logits [[ 1.7444375 -1.4724482  1.7490933 -3.8506765]]
Iteration 800 of 1000: loss=0.103 " + "l1=0" + "l2=0.103 f=-0.453 shape=(1, 9000, 1)
logits [[ 1.7268966 -1.4695795  1.7417098 -3.8126578]]
Iteration 900 of 1000: loss=0.0954 " + "l1=0" + "l2=0.0954 f=-0.447 shape=(1, 9000, 1)
logits [[ 1.7295226 -1.4693564  1.7320571 -3.781653 ]]
--- 262.9716229438782 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0745 " + "l1=0.0745" + "l2=0 f=-0.368 shape=(1, 9000, 1)
logits [[ 3.0591242 -1.7137119  1.5734537 -4.391004 ]]
Iteration 100 of 1000: loss=0.0737 " + "l1=0.0733" + "l2=0.000445 f=-0.363 shape=(1, 9000, 1)
logits [[ 3.0042026 -1.6867578  1.551433  -4.322597 ]]
Iteration 200 of 1000: loss=0.0735 " + "l1=0.0729" + "l2=0.000514 f=-0.362 shape=(1, 9000, 1)
logits [[ 2.9904149 -1.6785449  1.5447099 -4.3044343]]
Iteration 300 of 1000: loss=0.0732 " + "l1=0.0726" + "l2=0.000639 f=-0.36 shape=(1, 9000, 1)
logits [[ 2.975902 -1.670315  1.537844 -4.284798]]
Iteration 400 of 1000: loss=0.0731 " + "l1=0.0723" + "l2=0.000788 f=-0.359 shape=(1, 9000, 1)
logits [[ 2.961866  -1.6621193  1.531542  -4.266125 ]]
Iteration 500 of 1000: loss=0.0729 " + "l1=0.072" + "l2=0.000944 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.9483604 -1.6532339  1.5253531 -4.2486596]]
Iteration 600 of 1000: loss=0.0728 " + "l1=0.0717" + "l2=0.00112 f=-0.355 shape=(1, 9000, 1)
logits [[ 2.935206  -1.644692   1.5193527 -4.231757 ]]
Iteration 700 of 1000: loss=0.0727 " + "l1=0.0714" + "l2=0.00127 f=-0.354 shape=(1, 9000, 1)
logits [[ 2.9235766 -1.6368248  1.5136479 -4.21652  ]]
Iteration 800 of 1000: loss=0.0725 " + "l1=0.0711" + "l2=0.0014 f=-0.353 shape=(1, 9000, 1)
logits [[ 2.9120467 -1.629036   1.5079267 -4.2012663]]
Iteration 900 of 1000: loss=0.0724 " + "l1=0.0709" + "l2=0.00153 f=-0.351 shape=(1, 9000, 1)
logits [[ 2.901526  -1.6223505  1.5024695 -4.1860666]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.745 " + "l1=0.745" + "l2=0 f=-0.368 shape=(1, 9000, 1)
logits [[ 3.0591242 -1.7137119  1.5734537 -4.391004 ]]
Iteration 100 of 1000: loss=0.679 " + "l1=0.646" + "l2=0.0333 f=-0.333 shape=(1, 9000, 1)
logits [[ 2.6138453 -1.4843935  1.388406  -3.8479176]]
Iteration 200 of 1000: loss=0.648 " + "l1=0.604" + "l2=0.0447 f=-0.321 shape=(1, 9000, 1)
logits [[ 2.4313462 -1.4001358  1.2890637 -3.6053686]]
Iteration 300 of 1000: loss=0.621 " + "l1=0.563" + "l2=0.058 f=-0.311 shape=(1, 9000, 1)
logits [[ 2.2574797 -1.3225156  1.1944523 -3.3742902]]
Iteration 400 of 1000: loss=0.594 " + "l1=0.52" + "l2=0.0737 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.0630596 -1.234759   1.107318  -3.1359072]]
Iteration 500 of 1000: loss=0.566 " + "l1=0.477" + "l2=0.0884 f=-0.289 shape=(1, 9000, 1)
logits [[ 1.8763323 -1.1528696  1.0190891 -2.898465 ]]
Iteration 600 of 1000: loss=0.536 " + "l1=0.435" + "l2=0.101 f=-0.278 shape=(1, 9000, 1)
logits [[ 1.6874113  -1.062005    0.92774636 -2.663622  ]]
Iteration 700 of 1000: loss=0.508 " + "l1=0.395" + "l2=0.113 f=-0.267 shape=(1, 9000, 1)
logits [[ 1.5154434  -0.99364203  0.8398427  -2.4315257 ]]
Iteration 800 of 1000: loss=0.481 " + "l1=0.36" + "l2=0.12 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.3688649  -0.9377224   0.76285475 -2.2335525 ]]
Iteration 900 of 1000: loss=0.454 " + "l1=0.327" + "l2=0.127 f=-0.252 shape=(1, 9000, 1)
logits [[ 1.2296023  -0.89170355  0.6911074  -2.0365882 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.45 " + "l1=7.45" + "l2=0 f=-0.368 shape=(1, 9000, 1)
logits [[ 3.0591242 -1.7137119  1.5734537 -4.391004 ]]
Iteration 100 of 1000: loss=2.31 " + "l1=0.135" + "l2=2.18 f=-0.124 shape=(1, 9000, 1)
logits [[ 0.09575234 -0.6606655   0.10116091 -0.03372835]]
Iteration 200 of 1000: loss=1.39 " + "l1=0.0187" + "l2=1.38 f=-0.127 shape=(1, 9000, 1)
logits [[ 0.07845898 -0.72188634  0.07406899  0.059784  ]]
Iteration 300 of 1000: loss=1.07 " + "l1=0" + "l2=1.07 f=-0.141 shape=(1, 9000, 1)
logits [[ 0.05136853 -0.752716    0.06744448  0.06818029]]
Iteration 400 of 1000: loss=0.899 " + "l1=0" + "l2=0.899 f=-0.151 shape=(1, 9000, 1)
logits [[ 0.01926141 -0.6976585   0.02483644  0.04888147]]
Iteration 500 of 1000: loss=0.779 " + "l1=0" + "l2=0.779 f=-0.163 shape=(1, 9000, 1)
logits [[-0.0212386  -0.6578101   0.00158854  0.02367005]]
Iteration 600 of 1000: loss=0.682 " + "l1=0" + "l2=0.682 f=-0.168 shape=(1, 9000, 1)
logits [[-0.02293701 -0.62807554 -0.01277433 -0.00694554]]
Iteration 700 of 1000: loss=0.613 " + "l1=0" + "l2=0.613 f=-0.169 shape=(1, 9000, 1)
logits [[-0.03378809 -0.59861135 -0.035399   -0.01007568]]
Iteration 800 of 1000: loss=0.561 " + "l1=0" + "l2=0.561 f=-0.172 shape=(1, 9000, 1)
logits [[-0.05060659 -0.57503843 -0.05050777 -0.01212459]]
Iteration 900 of 1000: loss=0.509 " + "l1=0" + "l2=0.509 f=-0.176 shape=(1, 9000, 1)
logits [[-0.05622309 -0.567087   -0.0406248  -0.03863863]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.1 " + "l1=4.1" + "l2=0 f=-0.368 shape=(1, 9000, 1)
logits [[ 3.0591242 -1.7137119  1.5734537 -4.391004 ]]
Iteration 100 of 1000: loss=2.16 " + "l1=1.14" + "l2=1.03 f=-0.222 shape=(1, 9000, 1)
logits [[ 0.6863129  -0.8584796   0.65985525 -1.3775859 ]]
Iteration 200 of 1000: loss=1.33 " + "l1=0.258" + "l2=1.07 f=-0.135 shape=(1, 9000, 1)
logits [[ 0.20195204 -0.67918456  0.20287867 -0.26534587]]
Iteration 300 of 1000: loss=0.899 " + "l1=0.000669" + "l2=0.899 f=-0.131 shape=(1, 9000, 1)
logits [[ 0.02549965 -0.5990979   0.02421117  0.02428349]]
Iteration 400 of 1000: loss=0.719 " + "l1=0.00221" + "l2=0.717 f=-0.141 shape=(1, 9000, 1)
logits [[-0.01512948 -0.5135395  -0.01740913 -0.01915022]]
Iteration 500 of 1000: loss=0.621 " + "l1=0" + "l2=0.621 f=-0.145 shape=(1, 9000, 1)
logits [[-0.03878261 -0.47231823 -0.03845237 -0.03195241]]
Iteration 600 of 1000: loss=0.551 " + "l1=0" + "l2=0.551 f=-0.149 shape=(1, 9000, 1)
logits [[-0.05788543 -0.4459987  -0.05379114 -0.03915188]]
Iteration 700 of 1000: loss=0.489 " + "l1=0" + "l2=0.489 f=-0.157 shape=(1, 9000, 1)
logits [[-0.0746619  -0.4398446  -0.05648795 -0.05528348]]
Iteration 800 of 1000: loss=0.438 " + "l1=0" + "l2=0.438 f=-0.159 shape=(1, 9000, 1)
logits [[-0.07628112 -0.438075   -0.06393412 -0.05630679]]
Iteration 900 of 1000: loss=0.391 " + "l1=0.00059" + "l2=0.39 f=-0.16 shape=(1, 9000, 1)
logits [[-0.06909853 -0.44311795 -0.06431302 -0.0653851 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.42 " + "l1=2.42" + "l2=0 f=-0.368 shape=(1, 9000, 1)
logits [[ 3.0591242 -1.7137119  1.5734537 -4.391004 ]]
Iteration 100 of 1000: loss=1.75 " + "l1=1.36" + "l2=0.385 f=-0.274 shape=(1, 9000, 1)
logits [[ 1.5924757 -1.1273601  1.034548  -2.5940468]]
Iteration 200 of 1000: loss=1.31 " + "l1=0.759" + "l2=0.551 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.8076773 -0.8579447  0.6578253 -1.5278237]]
Iteration 300 of 1000: loss=0.971 " + "l1=0.374" + "l2=0.596 f=-0.177 shape=(1, 9000, 1)
logits [[ 0.37048864 -0.67627144  0.3745876  -0.7770327 ]]
Iteration 400 of 1000: loss=0.76 " + "l1=0.154" + "l2=0.606 f=-0.15 shape=(1, 9000, 1)
logits [[ 0.14257777 -0.55322105  0.14263268 -0.33068934]]
Iteration 500 of 1000: loss=0.605 " + "l1=0.00347" + "l2=0.602 f=-0.14 shape=(1, 9000, 1)
logits [[-0.02340349 -0.48348287 -0.02089635 -0.03158503]]
Iteration 600 of 1000: loss=0.512 " + "l1=0" + "l2=0.512 f=-0.146 shape=(1, 9000, 1)
logits [[-0.04253539 -0.46933034 -0.03552293 -0.03488528]]
Iteration 700 of 1000: loss=0.442 " + "l1=0" + "l2=0.442 f=-0.149 shape=(1, 9000, 1)
logits [[-0.04084015 -0.46439403 -0.05452818 -0.03471786]]
Iteration 800 of 1000: loss=0.383 " + "l1=0" + "l2=0.383 f=-0.156 shape=(1, 9000, 1)
logits [[-0.0540489  -0.46895087 -0.05555875 -0.04551864]]
Iteration 900 of 1000: loss=0.336 " + "l1=0" + "l2=0.336 f=-0.161 shape=(1, 9000, 1)
logits [[-0.05425004 -0.48366743 -0.05572441 -0.0510128 ]]
--- 297.4044768810272 seconds ---
Adv result:3
Loading record A02290
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0379 " + "l1=0.0379" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[  4.166134     0.37709057   1.9111649  -10.239739  ]]
Iteration 100 of 1000: loss=0.037 " + "l1=0.0364" + "l2=0.000532 f=-0.956 shape=(1, 9000, 1)
logits [[  4.071816    0.4279669   1.9068123 -10.2319   ]]
Iteration 200 of 1000: loss=0.0367 " + "l1=0.0361" + "l2=0.000615 f=-0.958 shape=(1, 9000, 1)
logits [[  4.0498176   0.439514    1.9048088 -10.226657 ]]
Iteration 300 of 1000: loss=0.0366 " + "l1=0.0358" + "l2=0.000797 f=-0.96 shape=(1, 9000, 1)
logits [[  4.02687      0.45143083   1.9031276  -10.220897  ]]
Iteration 400 of 1000: loss=0.0364 " + "l1=0.0354" + "l2=0.000958 f=-0.961 shape=(1, 9000, 1)
logits [[  4.0058107    0.46223357   1.9018939  -10.215497  ]]
Iteration 500 of 1000: loss=0.0363 " + "l1=0.0352" + "l2=0.0011 f=-0.963 shape=(1, 9000, 1)
logits [[  3.9872599   0.4716905   1.9009607 -10.210525 ]]
Iteration 600 of 1000: loss=0.0362 " + "l1=0.0349" + "l2=0.00127 f=-0.964 shape=(1, 9000, 1)
logits [[  3.9699242   0.4801183   1.9003937 -10.20573  ]]
Iteration 700 of 1000: loss=0.0362 " + "l1=0.0346" + "l2=0.00154 f=-0.965 shape=(1, 9000, 1)
logits [[  3.9516108   0.4888362   1.9002682 -10.200629 ]]
Iteration 800 of 1000: loss=0.036 " + "l1=0.0344" + "l2=0.00164 f=-0.966 shape=(1, 9000, 1)
logits [[  3.935852     0.49591255   1.9002665  -10.195509  ]]
Iteration 900 of 1000: loss=0.036 " + "l1=0.0342" + "l2=0.00176 f=-0.967 shape=(1, 9000, 1)
logits [[  3.9218519   0.5020167   1.9002448 -10.190365 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.379 " + "l1=0.379" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[  4.166134     0.37709057   1.9111649  -10.239739  ]]
Iteration 100 of 1000: loss=0.298 " + "l1=0.26" + "l2=0.0374 f=-1.02 shape=(1, 9000, 1)
logits [[  3.4047184   0.7999194   1.9151907 -10.180705 ]]
Iteration 200 of 1000: loss=0.262 " + "l1=0.202" + "l2=0.0598 f=-1.04 shape=(1, 9000, 1)
logits [[  3.0134752   0.9937616   1.9208168 -10.094557 ]]
Iteration 300 of 1000: loss=0.233 " + "l1=0.147" + "l2=0.0854 f=-1.06 shape=(1, 9000, 1)
logits [[  2.6441836   1.1728406   1.9448755 -10.014282 ]]
Iteration 400 of 1000: loss=0.209 " + "l1=0.103" + "l2=0.106 f=-1.08 shape=(1, 9000, 1)
logits [[ 2.3454494  1.3159893  1.9762475 -9.950466 ]]
Iteration 500 of 1000: loss=0.188 " + "l1=0.0637" + "l2=0.124 f=-1.09 shape=(1, 9000, 1)
logits [[ 2.0850496  1.4478434  1.9956241 -9.889063 ]]
Iteration 600 of 1000: loss=0.17 " + "l1=0.0481" + "l2=0.122 f=-1.09 shape=(1, 9000, 1)
logits [[ 1.9887943  1.5073724  1.9837481 -9.825165 ]]
Iteration 700 of 1000: loss=0.158 " + "l1=0.0443" + "l2=0.114 f=-1.08 shape=(1, 9000, 1)
logits [[ 1.967057   1.5241995  1.9643519 -9.774121 ]]
Iteration 800 of 1000: loss=0.149 " + "l1=0.0422" + "l2=0.107 f=-1.08 shape=(1, 9000, 1)
logits [[ 1.9505413  1.5285344  1.9497634 -9.733011 ]]
Iteration 900 of 1000: loss=0.142 " + "l1=0.0408" + "l2=0.101 f=-1.07 shape=(1, 9000, 1)
logits [[ 1.9363965  1.5283626  1.9340684 -9.690939 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.79 " + "l1=3.79" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[  4.166134     0.37709057   1.9111649  -10.239739  ]]
Iteration 100 of 1000: loss=0.392 " + "l1=0" + "l2=0.392 f=-1.11 shape=(1, 9000, 1)
logits [[ 1.8250835  1.8307459  1.8300093 -9.944918 ]]
Iteration 200 of 1000: loss=0.283 " + "l1=0" + "l2=0.283 f=-1.1 shape=(1, 9000, 1)
logits [[ 1.7847706  1.8001677  1.7917776 -9.790202 ]]
Iteration 300 of 1000: loss=0.241 " + "l1=0" + "l2=0.241 f=-1.1 shape=(1, 9000, 1)
logits [[ 1.771002   1.7730933  1.7664187 -9.707075 ]]
Iteration 400 of 1000: loss=0.222 " + "l1=0" + "l2=0.222 f=-1.1 shape=(1, 9000, 1)
logits [[ 1.7021666  1.7757196  1.7643356 -9.647106 ]]
Iteration 500 of 1000: loss=0.203 " + "l1=0" + "l2=0.203 f=-1.1 shape=(1, 9000, 1)
logits [[ 1.7189665  1.7579802  1.7441121 -9.601224 ]]
Iteration 600 of 1000: loss=0.199 " + "l1=0" + "l2=0.199 f=-1.1 shape=(1, 9000, 1)
logits [[ 1.6439444  1.7802992  1.7433493 -9.55614  ]]
Iteration 700 of 1000: loss=0.178 " + "l1=0" + "l2=0.178 f=-1.09 shape=(1, 9000, 1)
logits [[ 1.6659279  1.7491915  1.7442585 -9.5237465]]
Iteration 800 of 1000: loss=0.164 " + "l1=0" + "l2=0.164 f=-1.08 shape=(1, 9000, 1)
logits [[ 1.6978935  1.7327236  1.7261275 -9.488735 ]]
Iteration 900 of 1000: loss=0.167 " + "l1=0" + "l2=0.167 f=-1.09 shape=(1, 9000, 1)
logits [[ 1.6086847  1.7783947  1.7250161 -9.459748 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.08 " + "l1=2.08" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[  4.166134     0.37709057   1.9111649  -10.239739  ]]
Iteration 100 of 1000: loss=0.374 " + "l1=0.00804" + "l2=0.366 f=-1.11 shape=(1, 9000, 1)
logits [[ 1.8358332  1.8340331  1.8486457 -9.976082 ]]
Iteration 200 of 1000: loss=0.259 " + "l1=0.00384" + "l2=0.255 f=-1.1 shape=(1, 9000, 1)
logits [[ 1.7836506  1.7936245  1.8006098 -9.791613 ]]
Iteration 300 of 1000: loss=0.222 " + "l1=0" + "l2=0.222 f=-1.1 shape=(1, 9000, 1)
logits [[ 1.7273685  1.7836803  1.7779217 -9.69946  ]]
Iteration 400 of 1000: loss=0.197 " + "l1=0" + "l2=0.197 f=-1.1 shape=(1, 9000, 1)
logits [[ 1.7437282  1.7564123  1.7524267 -9.6357975]]
Iteration 500 of 1000: loss=0.185 " + "l1=0" + "l2=0.185 f=-1.1 shape=(1, 9000, 1)
logits [[ 1.6913867  1.7631874  1.7493259 -9.585346 ]]
Iteration 600 of 1000: loss=0.17 " + "l1=0" + "l2=0.17 f=-1.09 shape=(1, 9000, 1)
logits [[ 1.6979864  1.7532461  1.7372073 -9.540536 ]]
Iteration 700 of 1000: loss=0.156 " + "l1=0" + "l2=0.156 f=-1.08 shape=(1, 9000, 1)
logits [[ 1.6979885  1.7429764  1.7377776 -9.506564 ]]
Iteration 800 of 1000: loss=0.145 " + "l1=0" + "l2=0.145 f=-1.08 shape=(1, 9000, 1)
logits [[ 1.6966658  1.7402167  1.7285436 -9.470024 ]]
Iteration 900 of 1000: loss=0.135 " + "l1=0" + "l2=0.135 f=-1.07 shape=(1, 9000, 1)
logits [[ 1.678308   1.7372887  1.7319047 -9.438349 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.23 " + "l1=1.23" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[  4.166134     0.37709057   1.9111649  -10.239739  ]]
Iteration 100 of 1000: loss=0.377 " + "l1=0.0763" + "l2=0.301 f=-1.11 shape=(1, 9000, 1)
logits [[  1.9308268   1.7014351   1.9362998 -10.003854 ]]
Iteration 200 of 1000: loss=0.258 " + "l1=0.015" + "l2=0.243 f=-1.1 shape=(1, 9000, 1)
logits [[ 1.8157593  1.7765769  1.8227574 -9.816215 ]]
Iteration 300 of 1000: loss=0.212 " + "l1=0.000289" + "l2=0.212 f=-1.1 shape=(1, 9000, 1)
logits [[ 1.7686526  1.7723192  1.7732093 -9.696615 ]]
Iteration 400 of 1000: loss=0.189 " + "l1=0.000107" + "l2=0.189 f=-1.09 shape=(1, 9000, 1)
logits [[ 1.7378899  1.7580508  1.7583786 -9.625932 ]]
Iteration 500 of 1000: loss=0.17 " + "l1=0.00222" + "l2=0.168 f=-1.09 shape=(1, 9000, 1)
logits [[ 1.7415662  1.7397442  1.7465612 -9.571644 ]]
Iteration 600 of 1000: loss=0.158 " + "l1=0" + "l2=0.158 f=-1.08 shape=(1, 9000, 1)
logits [[ 1.7120199  1.7456774  1.7427074 -9.525614 ]]
Iteration 700 of 1000: loss=0.147 " + "l1=0" + "l2=0.147 f=-1.08 shape=(1, 9000, 1)
logits [[ 1.7005942  1.7428814  1.7388352 -9.487254 ]]
Iteration 800 of 1000: loss=0.136 " + "l1=0.00043" + "l2=0.135 f=-1.07 shape=(1, 9000, 1)
logits [[ 1.707174   1.7313061  1.7326293 -9.451264 ]]
Iteration 900 of 1000: loss=0.126 " + "l1=0" + "l2=0.126 f=-1.07 shape=(1, 9000, 1)
logits [[ 1.694985   1.7327374  1.7267948 -9.419481 ]]
--- 294.1796500682831 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0225 " + "l1=0.0225" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[  4.166134     0.37709057   1.9111649  -10.239739  ]]
Iteration 100 of 1000: loss=0.0221 " + "l1=0.0218" + "l2=0.00033 f=-0.956 shape=(1, 9000, 1)
logits [[  4.097126    0.4018743   1.9210798 -10.242451 ]]
Iteration 200 of 1000: loss=0.022 " + "l1=0.0216" + "l2=0.000343 f=-0.957 shape=(1, 9000, 1)
logits [[  4.0848036    0.40674657   1.9212875  -10.240271  ]]
Iteration 300 of 1000: loss=0.0219 " + "l1=0.0215" + "l2=0.000409 f=-0.958 shape=(1, 9000, 1)
logits [[  4.0698843    0.41220298   1.9223294  -10.238195  ]]
Iteration 400 of 1000: loss=0.0218 " + "l1=0.0213" + "l2=0.000498 f=-0.96 shape=(1, 9000, 1)
logits [[  4.0562997    0.41704962   1.9233129  -10.235323  ]]
Iteration 500 of 1000: loss=0.0218 " + "l1=0.0212" + "l2=0.000585 f=-0.961 shape=(1, 9000, 1)
logits [[  4.0445123    0.42118272   1.9243497  -10.232512  ]]
Iteration 600 of 1000: loss=0.0218 " + "l1=0.0211" + "l2=0.000676 f=-0.962 shape=(1, 9000, 1)
logits [[  4.0330253    0.42529017   1.9254761  -10.230179  ]]
Iteration 700 of 1000: loss=0.0218 " + "l1=0.021" + "l2=0.00081 f=-0.962 shape=(1, 9000, 1)
logits [[  4.021845    0.4292254   1.926514  -10.227481 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.225 " + "l1=0.225" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[  4.166134     0.37709057   1.9111649  -10.239739  ]]
Iteration 100 of 1000: loss=0.182 " + "l1=0.161" + "l2=0.0217 f=-1.01 shape=(1, 9000, 1)
logits [[  3.614716     0.58753395   2.007819   -10.252442  ]]
Iteration 200 of 1000: loss=0.163 " + "l1=0.128" + "l2=0.0343 f=-1.04 shape=(1, 9000, 1)
logits [[  3.3390017    0.68900317   2.0550025  -10.234726  ]]
Iteration 300 of 1000: loss=0.149 " + "l1=0.105" + "l2=0.0437 f=-1.05 shape=(1, 9000, 1)
logits [[  3.1306825   0.7615194   2.080015  -10.185444 ]]
Iteration 400 of 1000: loss=0.137 " + "l1=0.0846" + "l2=0.0523 f=-1.07 shape=(1, 9000, 1)
logits [[  2.9446921    0.83321553   2.0986726  -10.139196  ]]
Iteration 500 of 1000: loss=0.125 " + "l1=0.0643" + "l2=0.0605 f=-1.08 shape=(1, 9000, 1)
logits [[  2.7646039    0.90382326   2.1211748  -10.091993  ]]
Iteration 600 of 1000: loss=0.11 " + "l1=0.0386" + "l2=0.071 f=-1.09 shape=(1, 9000, 1)
logits [[  2.542353    0.9946787   2.156842  -10.03693  ]]
Iteration 700 of 1000: loss=0.0945 " + "l1=0.0168" + "l2=0.0777 f=-1.09 shape=(1, 9000, 1)
logits [[ 2.3585563  1.0647923  2.1905928 -9.9784975]]
Iteration 800 of 1000: loss=0.0788 " + "l1=0.000201" + "l2=0.0786 f=-1.09 shape=(1, 9000, 1)
logits [[ 2.2167854  1.1160957  2.214772  -9.911442 ]]
Iteration 900 of 1000: loss=0.0673 " + "l1=0" + "l2=0.0673 f=-1.08 shape=(1, 9000, 1)
logits [[ 2.2089493  1.1066285  2.209487  -9.852968 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.124 " + "l1=0.124" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[  4.166134     0.37709057   1.9111649  -10.239739  ]]
Iteration 100 of 1000: loss=0.111 " + "l1=0.104" + "l2=0.00664 f=-0.984 shape=(1, 9000, 1)
logits [[  3.8592134    0.49211574   1.9602742  -10.248186  ]]
Iteration 200 of 1000: loss=0.106 " + "l1=0.0964" + "l2=0.00955 f=-0.998 shape=(1, 9000, 1)
logits [[  3.730157     0.54329795   1.9773433  -10.240817  ]]
Iteration 300 of 1000: loss=0.102 " + "l1=0.0892" + "l2=0.0127 f=-1.01 shape=(1, 9000, 1)
logits [[  3.6153998   0.5876618   1.9929255 -10.229047 ]]
Iteration 400 of 1000: loss=0.0986 " + "l1=0.0831" + "l2=0.0154 f=-1.02 shape=(1, 9000, 1)
logits [[  3.5180156   0.6234549   2.006626  -10.216966 ]]
Iteration 500 of 1000: loss=0.0956 " + "l1=0.0779" + "l2=0.0177 f=-1.02 shape=(1, 9000, 1)
logits [[  3.432743    0.6537925   2.01692   -10.197909 ]]
Iteration 600 of 1000: loss=0.0928 " + "l1=0.0732" + "l2=0.0195 f=-1.03 shape=(1, 9000, 1)
logits [[  3.356706    0.6787597   2.0249295 -10.173068 ]]
Iteration 700 of 1000: loss=0.0899 " + "l1=0.0689" + "l2=0.021 f=-1.03 shape=(1, 9000, 1)
logits [[  3.2849133   0.7020816   2.032854  -10.145067 ]]
Iteration 800 of 1000: loss=0.0868 " + "l1=0.0647" + "l2=0.0221 f=-1.03 shape=(1, 9000, 1)
logits [[  3.215775    0.7237123   2.0401814 -10.115141 ]]
Iteration 900 of 1000: loss=0.0834 " + "l1=0.0602" + "l2=0.0232 f=-1.04 shape=(1, 9000, 1)
logits [[  3.1421869   0.7464175   2.0471067 -10.080701 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.175 " + "l1=0.175" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[  4.166134     0.37709057   1.9111649  -10.239739  ]]
Iteration 100 of 1000: loss=0.149 " + "l1=0.136" + "l2=0.0129 f=-0.998 shape=(1, 9000, 1)
logits [[  3.7388759   0.5386836   1.982321  -10.250258 ]]
Iteration 200 of 1000: loss=0.138 " + "l1=0.118" + "l2=0.0199 f=-1.02 shape=(1, 9000, 1)
logits [[  3.5381327   0.617681    2.0146022 -10.241369 ]]
Iteration 300 of 1000: loss=0.129 " + "l1=0.103" + "l2=0.0267 f=-1.03 shape=(1, 9000, 1)
logits [[  3.366477     0.67982453   2.0399797  -10.218884  ]]
Iteration 400 of 1000: loss=0.123 " + "l1=0.0911" + "l2=0.0315 f=-1.04 shape=(1, 9000, 1)
logits [[  3.2311475   0.7246616   2.0554285 -10.180528 ]]
Iteration 500 of 1000: loss=0.117 " + "l1=0.0813" + "l2=0.0353 f=-1.05 shape=(1, 9000, 1)
logits [[  3.1151857   0.7667711   2.066316  -10.144559 ]]
Iteration 600 of 1000: loss=0.11 " + "l1=0.0714" + "l2=0.0388 f=-1.06 shape=(1, 9000, 1)
logits [[  3.0016446   0.8083335   2.0798616 -10.111418 ]]
Iteration 700 of 1000: loss=0.103 " + "l1=0.0613" + "l2=0.0421 f=-1.06 shape=(1, 9000, 1)
logits [[  2.8848445    0.84970766   2.093238   -10.066631  ]]
Iteration 800 of 1000: loss=0.0951 " + "l1=0.049" + "l2=0.0461 f=-1.06 shape=(1, 9000, 1)
logits [[  2.7467828   0.8983366   2.114037  -10.016609 ]]
Iteration 900 of 1000: loss=0.0857 " + "l1=0.0339" + "l2=0.0518 f=-1.07 shape=(1, 9000, 1)
logits [[ 2.577378   0.9600505  2.1397579 -9.957293 ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.2 " + "l1=0.2" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[  4.166134     0.37709057   1.9111649  -10.239739  ]]
Iteration 100 of 1000: loss=0.166 " + "l1=0.149" + "l2=0.0168 f=-1 shape=(1, 9000, 1)
logits [[  3.6781945   0.5631446   1.9942667 -10.250159 ]]
Iteration 200 of 1000: loss=0.151 " + "l1=0.125" + "l2=0.0266 f=-1.03 shape=(1, 9000, 1)
logits [[  3.4408205    0.65295464   2.035513   -10.240725  ]]
Iteration 300 of 1000: loss=0.14 " + "l1=0.105" + "l2=0.0348 f=-1.04 shape=(1, 9000, 1)
logits [[  3.246608    0.7194642   2.0612748 -10.199679 ]]
Iteration 400 of 1000: loss=0.131 " + "l1=0.0902" + "l2=0.0409 f=-1.05 shape=(1, 9000, 1)
logits [[  3.092428    0.7769407   2.0760896 -10.158006 ]]
Iteration 500 of 1000: loss=0.122 " + "l1=0.0763" + "l2=0.0462 f=-1.06 shape=(1, 9000, 1)
logits [[  2.9495664    0.83098716   2.0900042  -10.11834   ]]
Iteration 600 of 1000: loss=0.113 " + "l1=0.0612" + "l2=0.0519 f=-1.07 shape=(1, 9000, 1)
logits [[  2.7996647   0.8895856   2.1098902 -10.070422 ]]
Iteration 700 of 1000: loss=0.102 " + "l1=0.0418" + "l2=0.0597 f=-1.08 shape=(1, 9000, 1)
logits [[  2.6131504   0.9625622   2.142062  -10.019722 ]]
Iteration 800 of 1000: loss=0.0895 " + "l1=0.0249" + "l2=0.0645 f=-1.08 shape=(1, 9000, 1)
logits [[ 2.44994    1.0188793  2.1691873 -9.959691 ]]
Iteration 900 of 1000: loss=0.076 " + "l1=0.0068" + "l2=0.0693 f=-1.08 shape=(1, 9000, 1)
logits [[ 2.274653   1.07834    2.1980367 -9.886772 ]]
--- 282.22576427459717 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.144 " + "l1=0.144" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[  4.166134     0.37709057   1.9111649  -10.239739  ]]
Iteration 100 of 1000: loss=0.143 " + "l1=0.143" + "l2=0.00046 f=-0.948 shape=(1, 9000, 1)
logits [[  4.0888953    0.40101734   1.897326   -10.178239  ]]
Iteration 200 of 1000: loss=0.143 " + "l1=0.142" + "l2=0.00055 f=-0.948 shape=(1, 9000, 1)
logits [[  4.06836      0.40699795   1.892797   -10.159321  ]]
Iteration 300 of 1000: loss=0.143 " + "l1=0.142" + "l2=0.000702 f=-0.948 shape=(1, 9000, 1)
logits [[  4.0450535    0.41329622   1.8878227  -10.137114  ]]
Iteration 400 of 1000: loss=0.142 " + "l1=0.141" + "l2=0.000903 f=-0.948 shape=(1, 9000, 1)
logits [[  4.0231586   0.4185444   1.883179  -10.115131 ]]
Iteration 500 of 1000: loss=0.142 " + "l1=0.141" + "l2=0.00108 f=-0.947 shape=(1, 9000, 1)
logits [[  4.0033393   0.4225538   1.8788203 -10.094024 ]]
Iteration 600 of 1000: loss=0.142 " + "l1=0.141" + "l2=0.00125 f=-0.947 shape=(1, 9000, 1)
logits [[  3.9847546    0.42577824   1.8749009  -10.0738125 ]]
Iteration 700 of 1000: loss=0.142 " + "l1=0.14" + "l2=0.00141 f=-0.947 shape=(1, 9000, 1)
logits [[  3.9672627    0.42835537   1.8713522  -10.054059  ]]
Iteration 800 of 1000: loss=0.141 " + "l1=0.14" + "l2=0.0016 f=-0.946 shape=(1, 9000, 1)
logits [[  3.9510453   0.4303949   1.8681132 -10.035022 ]]
Iteration 900 of 1000: loss=0.141 " + "l1=0.14" + "l2=0.00176 f=-0.946 shape=(1, 9000, 1)
logits [[  3.935229    0.4321404   1.864898  -10.016044 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.44 " + "l1=1.44" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[  4.166134     0.37709057   1.9111649  -10.239739  ]]
Iteration 100 of 1000: loss=1.35 " + "l1=1.32" + "l2=0.0352 f=-0.95 shape=(1, 9000, 1)
logits [[ 3.491497   0.5655264  1.8066123 -9.662647 ]]
Iteration 200 of 1000: loss=1.3 " + "l1=1.24" + "l2=0.0595 f=-0.951 shape=(1, 9000, 1)
logits [[ 3.0717425   0.66543454  1.7467353  -9.288308  ]]
Iteration 300 of 1000: loss=1.25 " + "l1=1.16" + "l2=0.0854 f=-0.951 shape=(1, 9000, 1)
logits [[ 2.699108    0.74413806  1.688134   -8.936029  ]]
Iteration 400 of 1000: loss=1.21 " + "l1=1.1" + "l2=0.105 f=-0.946 shape=(1, 9000, 1)
logits [[ 2.4127035  0.7857539  1.6466231 -8.6273155]]
Iteration 500 of 1000: loss=1.17 " + "l1=1.04" + "l2=0.122 f=-0.938 shape=(1, 9000, 1)
logits [[ 2.1254952  0.8194547  1.612039  -8.309957 ]]
Iteration 600 of 1000: loss=1.12 " + "l1=0.985" + "l2=0.134 f=-0.934 shape=(1, 9000, 1)
logits [[ 1.847337    0.84440756  1.5754235  -8.004249  ]]
Iteration 700 of 1000: loss=1.07 " + "l1=0.921" + "l2=0.147 f=-0.928 shape=(1, 9000, 1)
logits [[ 1.5518936  0.8615734  1.5314132 -7.656    ]]
Iteration 800 of 1000: loss=1.02 " + "l1=0.878" + "l2=0.145 f=-0.905 shape=(1, 9000, 1)
logits [[ 1.4487267  0.8135238  1.4470516 -7.33015  ]]
Iteration 900 of 1000: loss=0.982 " + "l1=0.837" + "l2=0.145 f=-0.879 shape=(1, 9000, 1)
logits [[ 1.360863   0.7769782  1.3590549 -7.0118556]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=14.4 " + "l1=14.4" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[  4.166134     0.37709057   1.9111649  -10.239739  ]]
Iteration 100 of 1000: loss=8.55 " + "l1=6.22" + "l2=2.33 f=-0.677 shape=(1, 9000, 1)
logits [[ 0.93706316  0.71061134  0.9249749  -5.280003  ]]
Iteration 200 of 1000: loss=5.96 " + "l1=2.7" + "l2=3.25 f=-0.379 shape=(1, 9000, 1)
logits [[ 0.27002662  0.30181804  0.30712476 -2.3943267 ]]
Iteration 300 of 1000: loss=4.37 " + "l1=1.04" + "l2=3.34 f=-0.235 shape=(1, 9000, 1)
logits [[-0.05042428  0.04971375  0.0474898  -0.9868591 ]]
Iteration 400 of 1000: loss=3.21 " + "l1=0.115" + "l2=3.09 f=-0.211 shape=(1, 9000, 1)
logits [[-0.2514261  -0.15886377 -0.15886123 -0.27415198]]
Iteration 500 of 1000: loss=2.54 " + "l1=0.00527" + "l2=2.54 f=-0.242 shape=(1, 9000, 1)
logits [[-0.34184837 -0.21135622 -0.20488676 -0.21015784]]
Iteration 600 of 1000: loss=2.18 " + "l1=0" + "l2=2.18 f=-0.242 shape=(1, 9000, 1)
logits [[-0.27475002 -0.26879537 -0.2135698  -0.21155858]]
Iteration 700 of 1000: loss=1.94 " + "l1=0.0124" + "l2=1.93 f=-0.248 shape=(1, 9000, 1)
logits [[-0.25676605 -0.25547528 -0.23439412 -0.24684209]]
Iteration 800 of 1000: loss=1.79 " + "l1=0.00919" + "l2=1.78 f=-0.255 shape=(1, 9000, 1)
logits [[-0.26096693 -0.26026404 -0.24418096 -0.2533665 ]]
Iteration 900 of 1000: loss=1.66 " + "l1=0" + "l2=1.66 f=-0.262 shape=(1, 9000, 1)
logits [[-0.2831901  -0.25643942 -0.2579373  -0.2490482 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.92 " + "l1=7.92" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[  4.166134     0.37709057   1.9111649  -10.239739  ]]
Iteration 100 of 1000: loss=5.68 " + "l1=4.88" + "l2=0.803 f=-0.905 shape=(1, 9000, 1)
logits [[ 1.4334445  0.9528667  1.432438  -7.436836 ]]
Iteration 200 of 1000: loss=4.66 " + "l1=3.47" + "l2=1.19 f=-0.728 shape=(1, 9000, 1)
logits [[ 0.9060996   0.69297606  0.9007673  -5.4113812 ]]
Iteration 300 of 1000: loss=3.84 " + "l1=2.38" + "l2=1.46 f=-0.578 shape=(1, 9000, 1)
logits [[ 0.48972413  0.5047696   0.514953   -3.8198974 ]]
Iteration 400 of 1000: loss=3.21 " + "l1=1.62" + "l2=1.58 f=-0.427 shape=(1, 9000, 1)
logits [[ 0.30587795  0.31258196  0.3145062  -2.6391518 ]]
Iteration 500 of 1000: loss=2.73 " + "l1=1.01" + "l2=1.72 f=-0.319 shape=(1, 9000, 1)
logits [[ 0.13564217  0.14391975  0.14497332 -1.7001027 ]]
Iteration 600 of 1000: loss=2.31 " + "l1=0.578" + "l2=1.73 f=-0.241 shape=(1, 9000, 1)
logits [[ 0.02162539  0.01776922  0.02326035 -1.0285505 ]]
Iteration 700 of 1000: loss=2.02 " + "l1=0.372" + "l2=1.65 f=-0.207 shape=(1, 9000, 1)
logits [[-0.05526608 -0.03226666 -0.03423431 -0.70821065]]
Iteration 800 of 1000: loss=1.82 " + "l1=0.199" + "l2=1.62 f=-0.184 shape=(1, 9000, 1)
logits [[-0.12626126 -0.08550615 -0.08074242 -0.44206727]]
Iteration 900 of 1000: loss=1.63 " + "l1=0.0855" + "l2=1.54 f=-0.175 shape=(1, 9000, 1)
logits [[-0.1747114  -0.12965758 -0.11912543 -0.27464128]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.68 " + "l1=4.68" + "l2=0 f=-0.946 shape=(1, 9000, 1)
logits [[  4.166134     0.37709057   1.9111649  -10.239739  ]]
Iteration 100 of 1000: loss=3.76 " + "l1=3.33" + "l2=0.43 f=-0.972 shape=(1, 9000, 1)
logits [[ 1.8157365  1.0487095  1.6910235 -8.444802 ]]
Iteration 200 of 1000: loss=3.3 " + "l1=2.81" + "l2=0.494 f=-0.886 shape=(1, 9000, 1)
logits [[ 1.4027234  0.8924872  1.3892281 -7.228764 ]]
Iteration 300 of 1000: loss=2.97 " + "l1=2.4" + "l2=0.578 f=-0.815 shape=(1, 9000, 1)
logits [[ 1.0972669  0.7772302  1.1201326 -6.254794 ]]
Iteration 400 of 1000: loss=2.69 " + "l1=2.01" + "l2=0.674 f=-0.741 shape=(1, 9000, 1)
logits [[ 0.82321364  0.7414258   0.83537567 -5.362585  ]]
Iteration 500 of 1000: loss=2.41 " + "l1=1.73" + "l2=0.673 f=-0.666 shape=(1, 9000, 1)
logits [[ 0.67193866  0.6600869   0.66604716 -4.6636524 ]]
Iteration 600 of 1000: loss=2.19 " + "l1=1.48" + "l2=0.705 f=-0.591 shape=(1, 9000, 1)
logits [[ 0.5324568   0.55108273  0.55252266 -4.001745  ]]
Iteration 700 of 1000: loss=1.99 " + "l1=1.24" + "l2=0.746 f=-0.507 shape=(1, 9000, 1)
logits [[ 0.44535843  0.4478163   0.4527273  -3.3741443 ]]
Iteration 800 of 1000: loss=1.83 " + "l1=1.09" + "l2=0.741 f=-0.448 shape=(1, 9000, 1)
logits [[ 0.39095697  0.38165608  0.38503048 -2.9488542 ]]
Iteration 900 of 1000: loss=1.69 " + "l1=0.927" + "l2=0.759 f=-0.392 shape=(1, 9000, 1)
logits [[ 0.31743467  0.32397085  0.31738484 -2.5280478 ]]
--- 301.12963819503784 seconds ---
Adv result:3
Loading record A02291
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0537 " + "l1=0.0537" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.842372  -2.5302446  2.4416726 -4.676097 ]]
Iteration 100 of 1000: loss=0.0533 " + "l1=0.053" + "l2=0.000282 f=-0.479 shape=(1, 9000, 1)
logits [[ 2.804096  -2.5004766  2.4215815 -4.641516 ]]
Iteration 200 of 1000: loss=0.0532 " + "l1=0.0529" + "l2=0.000277 f=-0.479 shape=(1, 9000, 1)
logits [[ 2.7981772 -2.4946494  2.4166982 -4.6362734]]
Iteration 300 of 1000: loss=0.0531 " + "l1=0.0528" + "l2=0.000327 f=-0.479 shape=(1, 9000, 1)
logits [[ 2.7899413 -2.4873428  2.410882  -4.6286454]]
Iteration 400 of 1000: loss=0.053 " + "l1=0.0526" + "l2=0.000432 f=-0.478 shape=(1, 9000, 1)
logits [[ 2.7811723 -2.4795358  2.4053717 -4.62059  ]]
Iteration 500 of 1000: loss=0.053 " + "l1=0.0524" + "l2=0.000505 f=-0.478 shape=(1, 9000, 1)
logits [[ 2.772781  -2.472083   2.4000173 -4.612735 ]]
Iteration 600 of 1000: loss=0.0529 " + "l1=0.0523" + "l2=0.000614 f=-0.478 shape=(1, 9000, 1)
logits [[ 2.764295  -2.4648867  2.3946447 -4.604378 ]]
Iteration 700 of 1000: loss=0.0528 " + "l1=0.0521" + "l2=0.000688 f=-0.477 shape=(1, 9000, 1)
logits [[ 2.7559023 -2.4579675  2.3895144 -4.595844 ]]
Iteration 800 of 1000: loss=0.0529 " + "l1=0.052" + "l2=0.000871 f=-0.476 shape=(1, 9000, 1)
logits [[ 2.7477918 -2.451276   2.3847594 -4.587104 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.537 " + "l1=0.537" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.842372  -2.5302446  2.4416726 -4.676097 ]]
Iteration 100 of 1000: loss=0.496 " + "l1=0.474" + "l2=0.0217 f=-0.468 shape=(1, 9000, 1)
logits [[ 2.4821146 -2.262016   2.2846382 -4.3780456]]
Iteration 200 of 1000: loss=0.476 " + "l1=0.445" + "l2=0.0309 f=-0.465 shape=(1, 9000, 1)
logits [[ 2.2972937 -2.156948   2.2135532 -4.214606 ]]
Iteration 300 of 1000: loss=0.458 " + "l1=0.42" + "l2=0.0378 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.1372602 -2.0655155  2.1377857 -4.0603385]]
Iteration 400 of 1000: loss=0.446 " + "l1=0.41" + "l2=0.0362 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.089013  -2.011598   2.0870337 -3.996147 ]]
Iteration 500 of 1000: loss=0.439 " + "l1=0.403" + "l2=0.0351 f=-0.453 shape=(1, 9000, 1)
logits [[ 2.0539596 -1.9785061  2.0552914 -3.9432898]]
Iteration 600 of 1000: loss=0.433 " + "l1=0.399" + "l2=0.0344 f=-0.447 shape=(1, 9000, 1)
logits [[ 2.0291402 -1.9570906  2.0282223 -3.88982  ]]
Iteration 700 of 1000: loss=0.428 " + "l1=0.394" + "l2=0.0337 f=-0.442 shape=(1, 9000, 1)
logits [[ 2.0011418 -1.9384481  2.0032668 -3.8344593]]
Iteration 800 of 1000: loss=0.423 " + "l1=0.389" + "l2=0.0345 f=-0.437 shape=(1, 9000, 1)
logits [[ 1.971384  -1.9159298  1.971544  -3.7730966]]
Iteration 900 of 1000: loss=0.419 " + "l1=0.384" + "l2=0.0349 f=-0.433 shape=(1, 9000, 1)
logits [[ 1.9439399 -1.8951957  1.9443455 -3.7256575]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.37 " + "l1=5.37" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.842372  -2.5302446  2.4416726 -4.676097 ]]
Iteration 100 of 1000: loss=3.37 " + "l1=2.78" + "l2=0.589 f=-0.432 shape=(1, 9000, 1)
logits [[ 1.3788619 -1.2987758  1.4824523 -3.2911453]]
Iteration 200 of 1000: loss=2.92 " + "l1=2.24" + "l2=0.676 f=-0.396 shape=(1, 9000, 1)
logits [[ 1.0137881 -1.0155373  1.2275422 -2.8084111]]
Iteration 300 of 1000: loss=2.48 " + "l1=1.64" + "l2=0.84 f=-0.337 shape=(1, 9000, 1)
logits [[ 0.50869817 -0.6675632   0.9689292  -2.1562784 ]]
Iteration 400 of 1000: loss=2.06 " + "l1=1.2" + "l2=0.86 f=-0.284 shape=(1, 9000, 1)
logits [[ 0.10630372 -0.48197785  0.7206822  -1.4803982 ]]
Iteration 500 of 1000: loss=1.8 " + "l1=0.931" + "l2=0.873 f=-0.27 shape=(1, 9000, 1)
logits [[-0.12548241 -0.3693934   0.5618369  -1.1454521 ]]
Iteration 600 of 1000: loss=1.63 " + "l1=0.736" + "l2=0.893 f=-0.252 shape=(1, 9000, 1)
logits [[-0.30358976 -0.29003066  0.44604373 -0.86222357]]
Iteration 700 of 1000: loss=1.45 " + "l1=0.528" + "l2=0.926 f=-0.225 shape=(1, 9000, 1)
logits [[-0.45711383 -0.19260472  0.33541727 -0.5841157 ]]
Iteration 800 of 1000: loss=1.28 " + "l1=0.302" + "l2=0.982 f=-0.192 shape=(1, 9000, 1)
logits [[-0.6201129  -0.11874167  0.18344973 -0.21341345]]
Iteration 900 of 1000: loss=1.11 " + "l1=0.104" + "l2=1.01 f=-0.19 shape=(1, 9000, 1)
logits [[-0.81771624 -0.02754028  0.07686327  0.00901836]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.95 " + "l1=2.95" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.842372  -2.5302446  2.4416726 -4.676097 ]]
Iteration 100 of 1000: loss=2.15 " + "l1=1.91" + "l2=0.238 f=-0.441 shape=(1, 9000, 1)
logits [[ 1.7921728 -1.6707374  1.8053662 -3.6900358]]
Iteration 200 of 1000: loss=1.91 " + "l1=1.62" + "l2=0.295 f=-0.424 shape=(1, 9000, 1)
logits [[ 1.4560807 -1.3924621  1.5503584 -3.3109527]]
Iteration 300 of 1000: loss=1.77 " + "l1=1.43" + "l2=0.333 f=-0.389 shape=(1, 9000, 1)
logits [[ 1.2072777 -1.2272377  1.38176   -2.9183357]]
Iteration 400 of 1000: loss=1.63 " + "l1=1.24" + "l2=0.388 f=-0.363 shape=(1, 9000, 1)
logits [[ 0.9550242 -1.0514712  1.2003564 -2.5556858]]
Iteration 500 of 1000: loss=1.49 " + "l1=1.07" + "l2=0.421 f=-0.335 shape=(1, 9000, 1)
logits [[ 0.713325   -0.91227895  1.0395998  -2.1818438 ]]
Iteration 600 of 1000: loss=1.36 " + "l1=0.89" + "l2=0.467 f=-0.285 shape=(1, 9000, 1)
logits [[ 0.48283425 -0.75684106  0.8617311  -1.7269075 ]]
Iteration 700 of 1000: loss=1.26 " + "l1=0.793" + "l2=0.467 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.32757923 -0.6776586   0.76426107 -1.4832314 ]]
Iteration 800 of 1000: loss=1.2 " + "l1=0.732" + "l2=0.463 f=-0.26 shape=(1, 9000, 1)
logits [[ 0.23168948 -0.63159126  0.69977295 -1.3381081 ]]
Iteration 900 of 1000: loss=1.13 " + "l1=0.663" + "l2=0.471 f=-0.253 shape=(1, 9000, 1)
logits [[ 0.10900627 -0.58218527  0.62331396 -1.1637787 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.16 " + "l1=4.16" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.842372  -2.5302446  2.4416726 -4.676097 ]]
Iteration 100 of 1000: loss=2.77 " + "l1=2.36" + "l2=0.411 f=-0.441 shape=(1, 9000, 1)
logits [[ 1.5388396 -1.4377481  1.6082406 -3.4740577]]
Iteration 200 of 1000: loss=2.45 " + "l1=1.99" + "l2=0.46 f=-0.399 shape=(1, 9000, 1)
logits [[ 1.2098298 -1.1947653  1.3734685 -2.9834297]]
Iteration 300 of 1000: loss=2.22 " + "l1=1.7" + "l2=0.518 f=-0.364 shape=(1, 9000, 1)
logits [[ 0.89960223 -1.0117813   1.1799943  -2.5236247 ]]
Iteration 400 of 1000: loss=1.9 " + "l1=1.25" + "l2=0.653 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.48908272 -0.71035254  0.89831257 -1.8967562 ]]
Iteration 500 of 1000: loss=1.66 " + "l1=1.01" + "l2=0.651 f=-0.273 shape=(1, 9000, 1)
logits [[ 0.20561191 -0.56834143  0.7379434  -1.4667919 ]]
Iteration 600 of 1000: loss=1.51 " + "l1=0.857" + "l2=0.656 f=-0.271 shape=(1, 9000, 1)
logits [[-0.00158822 -0.49307126  0.6121163  -1.2013419 ]]
Iteration 700 of 1000: loss=1.4 " + "l1=0.72" + "l2=0.675 f=-0.26 shape=(1, 9000, 1)
logits [[-0.14138778 -0.40909892  0.5201892  -1.0094353 ]]
Iteration 800 of 1000: loss=1.29 " + "l1=0.607" + "l2=0.686 f=-0.249 shape=(1, 9000, 1)
logits [[-0.27313218 -0.35140035  0.4320143  -0.80266565]]
Iteration 900 of 1000: loss=1.2 " + "l1=0.498" + "l2=0.699 f=-0.235 shape=(1, 9000, 1)
logits [[-0.35745516 -0.2986047   0.34337053 -0.6280133 ]]
--- 289.5409083366394 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00401 " + "l1=0.00401" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.842372  -2.5302446  2.4416726 -4.676097 ]]
Iteration 100 of 1000: loss=0.00389 " + "l1=0.00376" + "l2=0.000127 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.8206472 -2.5302556  2.444289  -4.6578493]]
Iteration 200 of 1000: loss=0.00385 " + "l1=0.00376" + "l2=9.36e-05 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.8204985 -2.5311394  2.4448664 -4.658162 ]]
Iteration 300 of 1000: loss=0.00385 " + "l1=0.00372" + "l2=0.000123 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.818101  -2.5321136  2.4458058 -4.656402 ]]
Iteration 400 of 1000: loss=0.00383 " + "l1=0.00369" + "l2=0.000139 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.8152251 -2.5326905  2.4464366 -4.6542244]]
Iteration 500 of 1000: loss=0.00385 " + "l1=0.00365" + "l2=0.000199 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.812242  -2.533294   2.4470687 -4.6518874]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0401 " + "l1=0.0401" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.842372  -2.5302446  2.4416726 -4.676097 ]]
Iteration 100 of 1000: loss=0.0297 " + "l1=0.0245" + "l2=0.00523 f=-0.482 shape=(1, 9000, 1)
logits [[ 2.704078  -2.5281372  2.4593136 -4.5638013]]
Iteration 200 of 1000: loss=0.0251 " + "l1=0.0172" + "l2=0.00786 f=-0.483 shape=(1, 9000, 1)
logits [[ 2.6391842 -2.523796   2.4668458 -4.513448 ]]
Iteration 300 of 1000: loss=0.0202 " + "l1=0.00971" + "l2=0.0105 f=-0.483 shape=(1, 9000, 1)
logits [[ 2.5741355 -2.5210934  2.4770706 -4.462949 ]]
Iteration 400 of 1000: loss=0.0149 " + "l1=0.0014" + "l2=0.0135 f=-0.485 shape=(1, 9000, 1)
logits [[ 2.4992104 -2.5122418  2.4852004 -4.411567 ]]
Iteration 500 of 1000: loss=0.0114 " + "l1=1.02e-05" + "l2=0.0114 f=-0.487 shape=(1, 9000, 1)
logits [[ 2.4878619 -2.516611   2.4877596 -4.40892  ]]
Iteration 600 of 1000: loss=0.00962 " + "l1=0.000224" + "l2=0.00939 f=-0.488 shape=(1, 9000, 1)
logits [[ 2.4933298 -2.5248785  2.491089  -4.4126253]]
Iteration 700 of 1000: loss=0.00834 " + "l1=8.8e-05" + "l2=0.00825 f=-0.488 shape=(1, 9000, 1)
logits [[ 2.4954782 -2.531187   2.4945977 -4.4125504]]
Iteration 800 of 1000: loss=0.00748 " + "l1=0" + "l2=0.00748 f=-0.488 shape=(1, 9000, 1)
logits [[ 2.4961998 -2.5351822  2.496348  -4.410283 ]]
Iteration 900 of 1000: loss=0.00673 " + "l1=0.000106" + "l2=0.00662 f=-0.488 shape=(1, 9000, 1)
logits [[ 2.498204  -2.537473   2.497141  -4.4086175]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.022 " + "l1=0.022" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.842372  -2.5302446  2.4416726 -4.676097 ]]
Iteration 100 of 1000: loss=0.0188 " + "l1=0.0172" + "l2=0.00167 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.7628    -2.5282755  2.4507287 -4.6112275]]
Iteration 200 of 1000: loss=0.0177 " + "l1=0.0156" + "l2=0.00216 f=-0.482 shape=(1, 9000, 1)
logits [[ 2.738943  -2.5313199  2.4561718 -4.5931892]]
Iteration 300 of 1000: loss=0.0167 " + "l1=0.014" + "l2=0.00268 f=-0.483 shape=(1, 9000, 1)
logits [[ 2.7144308 -2.533042   2.4599001 -4.5739355]]
Iteration 400 of 1000: loss=0.0156 " + "l1=0.0123" + "l2=0.00329 f=-0.484 shape=(1, 9000, 1)
logits [[ 2.6879854 -2.5329256  2.4636767 -4.553597 ]]
Iteration 500 of 1000: loss=0.0145 " + "l1=0.0105" + "l2=0.00399 f=-0.484 shape=(1, 9000, 1)
logits [[ 2.660384  -2.5315506  2.4686737 -4.531837 ]]
Iteration 600 of 1000: loss=0.0135 " + "l1=0.00876" + "l2=0.00472 f=-0.483 shape=(1, 9000, 1)
logits [[ 2.631894  -2.5303235  2.4727015 -4.5077653]]
Iteration 700 of 1000: loss=0.0123 " + "l1=0.00692" + "l2=0.00536 f=-0.483 shape=(1, 9000, 1)
logits [[ 2.6013985 -2.527006   2.475625  -4.482624 ]]
Iteration 800 of 1000: loss=0.0111 " + "l1=0.00493" + "l2=0.00616 f=-0.484 shape=(1, 9000, 1)
logits [[ 2.5689971 -2.5261297  2.4794316 -4.457448 ]]
Iteration 900 of 1000: loss=0.00996 " + "l1=0.0031" + "l2=0.00686 f=-0.485 shape=(1, 9000, 1)
logits [[ 2.53899   -2.5259924  2.4826643 -4.434117 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0311 " + "l1=0.0311" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.842372  -2.5302446  2.4416726 -4.676097 ]]
Iteration 100 of 1000: loss=0.0248 " + "l1=0.0217" + "l2=0.00316 f=-0.482 shape=(1, 9000, 1)
logits [[ 2.7351198 -2.5286582  2.4556787 -4.5897555]]
Iteration 200 of 1000: loss=0.0224 " + "l1=0.0181" + "l2=0.00429 f=-0.483 shape=(1, 9000, 1)
logits [[ 2.6960251 -2.530689   2.4618378 -4.558557 ]]
Iteration 300 of 1000: loss=0.0199 " + "l1=0.0141" + "l2=0.00579 f=-0.483 shape=(1, 9000, 1)
logits [[ 2.6497202 -2.5274384  2.467809  -4.52322  ]]
Iteration 400 of 1000: loss=0.0173 " + "l1=0.0102" + "l2=0.00713 f=-0.483 shape=(1, 9000, 1)
logits [[ 2.6069539 -2.5270317  2.475396  -4.48879  ]]
Iteration 500 of 1000: loss=0.0144 " + "l1=0.00529" + "l2=0.00911 f=-0.484 shape=(1, 9000, 1)
logits [[ 2.5503852 -2.5213034  2.482073  -4.4467907]]
Iteration 600 of 1000: loss=0.0116 " + "l1=0.00104" + "l2=0.0105 f=-0.486 shape=(1, 9000, 1)
logits [[ 2.5035992 -2.520624   2.4901419 -4.416404 ]]
Iteration 700 of 1000: loss=0.00931 " + "l1=7.21e-05" + "l2=0.00924 f=-0.487 shape=(1, 9000, 1)
logits [[ 2.4935932 -2.5256033  2.4926634 -4.4104943]]
Iteration 800 of 1000: loss=0.00806 " + "l1=0" + "l2=0.00806 f=-0.488 shape=(1, 9000, 1)
logits [[ 2.4949524 -2.531774   2.4957647 -4.409709 ]]
Iteration 900 of 1000: loss=0.00738 " + "l1=0.000125" + "l2=0.00725 f=-0.487 shape=(1, 9000, 1)
logits [[ 2.4988053 -2.5360088  2.4971979 -4.409928 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0265 " + "l1=0.0265" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.842372  -2.5302446  2.4416726 -4.676097 ]]
Iteration 100 of 1000: loss=0.022 " + "l1=0.0196" + "l2=0.00236 f=-0.482 shape=(1, 9000, 1)
logits [[ 2.7490726 -2.5286698  2.453329  -4.600685 ]]
Iteration 200 of 1000: loss=0.0203 " + "l1=0.0172" + "l2=0.00312 f=-0.483 shape=(1, 9000, 1)
logits [[ 2.7181728 -2.5314949  2.459265  -4.5769267]]
Iteration 300 of 1000: loss=0.0186 " + "l1=0.0146" + "l2=0.004 f=-0.483 shape=(1, 9000, 1)
logits [[ 2.6844916 -2.5309436  2.463592  -4.550643 ]]
Iteration 400 of 1000: loss=0.0169 " + "l1=0.0118" + "l2=0.00503 f=-0.484 shape=(1, 9000, 1)
logits [[ 2.6484542 -2.5301757  2.4698105 -4.5227156]]
Iteration 500 of 1000: loss=0.0152 " + "l1=0.0092" + "l2=0.00599 f=-0.483 shape=(1, 9000, 1)
logits [[ 2.6143327 -2.5293546  2.475457  -4.4944186]]
Iteration 600 of 1000: loss=0.0132 " + "l1=0.00593" + "l2=0.0073 f=-0.484 shape=(1, 9000, 1)
logits [[ 2.56909   -2.5247712  2.47956   -4.4586463]]
Iteration 700 of 1000: loss=0.0114 " + "l1=0.00289" + "l2=0.00847 f=-0.485 shape=(1, 9000, 1)
logits [[ 2.5297673 -2.5239801  2.486119  -4.4329557]]
Iteration 800 of 1000: loss=0.00934 " + "l1=6.4e-05" + "l2=0.00927 f=-0.487 shape=(1, 9000, 1)
logits [[ 2.4916706 -2.5226572  2.4907043 -4.406931 ]]
Iteration 900 of 1000: loss=0.008 " + "l1=8.98e-05" + "l2=0.00791 f=-0.487 shape=(1, 9000, 1)
logits [[ 2.4949646 -2.5285738  2.4936094 -4.4082184]]
--- 273.2645447254181 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0752 " + "l1=0.0752" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.842372  -2.5302446  2.4416726 -4.676097 ]]
Iteration 100 of 1000: loss=0.0744 " + "l1=0.0739" + "l2=0.000462 f=-0.475 shape=(1, 9000, 1)
logits [[ 2.791877  -2.5135934  2.421296  -4.6013093]]
Iteration 200 of 1000: loss=0.0742 " + "l1=0.0737" + "l2=0.000499 f=-0.474 shape=(1, 9000, 1)
logits [[ 2.781251  -2.5101008  2.4155807 -4.5839367]]
Iteration 300 of 1000: loss=0.0739 " + "l1=0.0733" + "l2=0.000621 f=-0.473 shape=(1, 9000, 1)
logits [[ 2.7684832 -2.5058818  2.4092772 -4.5627427]]
Iteration 400 of 1000: loss=0.0737 " + "l1=0.073" + "l2=0.000761 f=-0.471 shape=(1, 9000, 1)
logits [[ 2.75557   -2.5012655  2.4026449 -4.5409675]]
Iteration 500 of 1000: loss=0.0735 " + "l1=0.0726" + "l2=0.000919 f=-0.469 shape=(1, 9000, 1)
logits [[ 2.7425406 -2.4969046  2.395577  -4.5168786]]
Iteration 600 of 1000: loss=0.0733 " + "l1=0.0722" + "l2=0.00115 f=-0.466 shape=(1, 9000, 1)
logits [[ 2.7285602 -2.4925156  2.3877795 -4.48922  ]]
Iteration 700 of 1000: loss=0.0731 " + "l1=0.0717" + "l2=0.00135 f=-0.464 shape=(1, 9000, 1)
logits [[ 2.7143662 -2.4880033  2.3796914 -4.460082 ]]
Iteration 800 of 1000: loss=0.0728 " + "l1=0.0713" + "l2=0.00149 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.699818  -2.4833775  2.3719542 -4.431998 ]]
Iteration 900 of 1000: loss=0.0726 " + "l1=0.0709" + "l2=0.00171 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.685987  -2.4787366  2.3646414 -4.4037647]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.752 " + "l1=0.752" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.842372  -2.5302446  2.4416726 -4.676097 ]]
Iteration 100 of 1000: loss=0.665 " + "l1=0.622" + "l2=0.0426 f=-0.421 shape=(1, 9000, 1)
logits [[ 2.3302379 -2.3576624  2.2368557 -3.8915823]]
Iteration 200 of 1000: loss=0.612 " + "l1=0.554" + "l2=0.0587 f=-0.382 shape=(1, 9000, 1)
logits [[ 2.105327  -2.3064835  2.1049662 -3.4319732]]
Iteration 300 of 1000: loss=0.585 " + "l1=0.523" + "l2=0.0622 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.0135238 -2.2759573  2.0210934 -3.2114286]]
Iteration 400 of 1000: loss=0.564 " + "l1=0.498" + "l2=0.0666 f=-0.348 shape=(1, 9000, 1)
logits [[ 1.9072347 -2.2310548  1.9543309 -3.0217018]]
Iteration 500 of 1000: loss=0.545 " + "l1=0.473" + "l2=0.0715 f=-0.333 shape=(1, 9000, 1)
logits [[ 1.8055437 -2.1903043  1.8923085 -2.8390477]]
Iteration 600 of 1000: loss=0.526 " + "l1=0.448" + "l2=0.0781 f=-0.319 shape=(1, 9000, 1)
logits [[ 1.6995504 -2.15444    1.828198  -2.6502209]]
Iteration 700 of 1000: loss=0.507 " + "l1=0.421" + "l2=0.0859 f=-0.307 shape=(1, 9000, 1)
logits [[ 1.5903654 -2.1284027  1.7622799 -2.451583 ]]
Iteration 800 of 1000: loss=0.489 " + "l1=0.395" + "l2=0.0939 f=-0.292 shape=(1, 9000, 1)
logits [[ 1.4866369 -2.1013374  1.6972859 -2.2523065]]
Iteration 900 of 1000: loss=0.469 " + "l1=0.368" + "l2=0.102 f=-0.277 shape=(1, 9000, 1)
logits [[ 1.3813154 -2.072356   1.6282843 -2.0470688]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.52 " + "l1=7.52" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.842372  -2.5302446  2.4416726 -4.676097 ]]
Iteration 100 of 1000: loss=2.18 " + "l1=0.00586" + "l2=2.17 f=-0.109 shape=(1, 9000, 1)
logits [[-0.16871276 -1.6641829   0.7015035   0.6956451 ]]
Iteration 200 of 1000: loss=1.31 " + "l1=0" + "l2=1.31 f=-0.131 shape=(1, 9000, 1)
logits [[-0.1940501  -1.7037994   0.67838407  0.69598496]]
Iteration 300 of 1000: loss=1.03 " + "l1=0" + "l2=1.03 f=-0.13 shape=(1, 9000, 1)
logits [[-0.18375334 -1.6976823   0.65670365  0.70345056]]
Iteration 400 of 1000: loss=0.831 " + "l1=0" + "l2=0.831 f=-0.133 shape=(1, 9000, 1)
logits [[-0.15315323 -1.7085744   0.6557039   0.67502713]]
Iteration 500 of 1000: loss=0.723 " + "l1=0" + "l2=0.723 f=-0.135 shape=(1, 9000, 1)
logits [[-0.14028467 -1.7316421   0.6578823   0.6727661 ]]
Iteration 600 of 1000: loss=0.655 " + "l1=0" + "l2=0.655 f=-0.137 shape=(1, 9000, 1)
logits [[-0.1364385  -1.7501984   0.65921545  0.6782791 ]]
Iteration 700 of 1000: loss=0.602 " + "l1=0" + "l2=0.602 f=-0.137 shape=(1, 9000, 1)
logits [[-0.13031411 -1.7598045   0.6626718   0.6812022 ]]
Iteration 800 of 1000: loss=0.56 " + "l1=0.00796" + "l2=0.552 f=-0.133 shape=(1, 9000, 1)
logits [[-0.1091978 -1.7641796  0.6741039  0.6661424]]
Iteration 900 of 1000: loss=0.527 " + "l1=0" + "l2=0.527 f=-0.128 shape=(1, 9000, 1)
logits [[-0.13267614 -1.7603633   0.6647019   0.7171054 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.14 " + "l1=4.14" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.842372  -2.5302446  2.4416726 -4.676097 ]]
Iteration 100 of 1000: loss=2.27 " + "l1=1.55" + "l2=0.719 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.9028106 -2.0024776  1.4283633 -1.3969455]]
Iteration 200 of 1000: loss=1.12 " + "l1=0.012" + "l2=1.11 f=-0.157 shape=(1, 9000, 1)
logits [[-0.23780732 -1.724723    0.67817086  0.65631545]]
Iteration 300 of 1000: loss=0.763 " + "l1=0.0041" + "l2=0.759 f=-0.14 shape=(1, 9000, 1)
logits [[-0.11382095 -1.737668    0.6503875   0.642924  ]]
Iteration 400 of 1000: loss=0.606 " + "l1=0" + "l2=0.606 f=-0.132 shape=(1, 9000, 1)
logits [[-0.04897442 -1.7447815   0.6280146   0.6384379 ]]
Iteration 500 of 1000: loss=0.526 " + "l1=0" + "l2=0.526 f=-0.131 shape=(1, 9000, 1)
logits [[-0.04002623 -1.7435828   0.6213728   0.63651   ]]
Iteration 600 of 1000: loss=0.475 " + "l1=0" + "l2=0.475 f=-0.135 shape=(1, 9000, 1)
logits [[-0.05019986 -1.7332448   0.6073699   0.63573664]]
Iteration 700 of 1000: loss=0.43 " + "l1=0" + "l2=0.43 f=-0.14 shape=(1, 9000, 1)
logits [[-0.05008611 -1.726881    0.6060956   0.6108064 ]]
Iteration 800 of 1000: loss=0.404 " + "l1=0" + "l2=0.404 f=-0.14 shape=(1, 9000, 1)
logits [[-0.07797109 -1.7164464   0.59721106  0.63717544]]
Iteration 900 of 1000: loss=0.378 " + "l1=0" + "l2=0.378 f=-0.137 shape=(1, 9000, 1)
logits [[-0.0846336  -1.7094048   0.6033246   0.64275867]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.44 " + "l1=2.44" + "l2=0 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.842372  -2.5302446  2.4416726 -4.676097 ]]
Iteration 100 of 1000: loss=1.69 " + "l1=1.44" + "l2=0.259 f=-0.326 shape=(1, 9000, 1)
logits [[ 1.6227304 -2.1797462  1.83386   -2.5822837]]
Iteration 200 of 1000: loss=1.33 " + "l1=0.867" + "l2=0.466 f=-0.276 shape=(1, 9000, 1)
logits [[ 0.8552096 -2.0115092  1.3598694 -1.308392 ]]
Iteration 300 of 1000: loss=0.931 " + "l1=0.263" + "l2=0.668 f=-0.198 shape=(1, 9000, 1)
logits [[ 0.10398661 -1.8034419   0.85764986  0.04917215]]
Iteration 400 of 1000: loss=0.615 " + "l1=0.00575" + "l2=0.609 f=-0.151 shape=(1, 9000, 1)
logits [[-0.10315504 -1.7327228   0.62487483  0.6071952 ]]
Iteration 500 of 1000: loss=0.48 " + "l1=0" + "l2=0.48 f=-0.141 shape=(1, 9000, 1)
logits [[-0.06611533 -1.7017205   0.59587675  0.6098617 ]]
Iteration 600 of 1000: loss=0.413 " + "l1=0.0019" + "l2=0.411 f=-0.142 shape=(1, 9000, 1)
logits [[-0.06527268 -1.6905009   0.59709424  0.591233  ]]
Iteration 700 of 1000: loss=0.374 " + "l1=0" + "l2=0.374 f=-0.137 shape=(1, 9000, 1)
logits [[-0.07389344 -1.6845833   0.60015994  0.60897857]]
Iteration 800 of 1000: loss=0.344 " + "l1=0" + "l2=0.344 f=-0.133 shape=(1, 9000, 1)
logits [[-0.07312971 -1.6768249   0.6078267   0.6087559 ]]
Iteration 900 of 1000: loss=0.323 " + "l1=0" + "l2=0.323 f=-0.129 shape=(1, 9000, 1)
logits [[-0.08695541 -1.6675452   0.61308587  0.62728345]]
--- 302.93468284606934 seconds ---
Adv result:3
Loading record A02326
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0774 " + "l1=0.0774" + "l2=0 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.681542  -3.0540905  2.7657304 -6.6553187]]
Iteration 100 of 1000: loss=0.0771 " + "l1=0.0769" + "l2=0.000199 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.6521816 -3.0386605  2.7567341 -6.6215363]]
Iteration 200 of 1000: loss=0.077 " + "l1=0.0769" + "l2=0.000173 f=-0.562 shape=(1, 9000, 1)
logits [[ 4.648855  -3.036304   2.7552803 -6.6169043]]
Iteration 300 of 1000: loss=0.077 " + "l1=0.0768" + "l2=0.000208 f=-0.562 shape=(1, 9000, 1)
logits [[ 4.642841  -3.0328016  2.7532077 -6.6092486]]
Iteration 400 of 1000: loss=0.0769 " + "l1=0.0767" + "l2=0.000261 f=-0.561 shape=(1, 9000, 1)
logits [[ 4.6363173 -3.0291343  2.75107   -6.60104  ]]
Iteration 500 of 1000: loss=0.0769 " + "l1=0.0765" + "l2=0.000336 f=-0.56 shape=(1, 9000, 1)
logits [[ 4.6294117 -3.025333   2.7488775 -6.5924635]]
Iteration 600 of 1000: loss=0.0768 " + "l1=0.0764" + "l2=0.000396 f=-0.559 shape=(1, 9000, 1)
logits [[ 4.622429  -3.0215225  2.7467625 -6.5838594]]
Iteration 700 of 1000: loss=0.0768 " + "l1=0.0763" + "l2=0.000503 f=-0.558 shape=(1, 9000, 1)
logits [[ 4.6154056 -3.0177488  2.7447011 -6.5753007]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.774 " + "l1=0.774" + "l2=0 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.681542  -3.0540905  2.7657304 -6.6553187]]
Iteration 100 of 1000: loss=0.751 " + "l1=0.74" + "l2=0.0113 f=-0.542 shape=(1, 9000, 1)
logits [[ 4.4636908 -2.934368   2.6992464 -6.3981977]]
Iteration 200 of 1000: loss=0.74 " + "l1=0.724" + "l2=0.016 f=-0.527 shape=(1, 9000, 1)
logits [[ 4.363473  -2.8745573  2.6669183 -6.2651806]]
Iteration 300 of 1000: loss=0.728 " + "l1=0.708" + "l2=0.02 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.2688556 -2.815723   2.6333814 -6.1362834]]
Iteration 400 of 1000: loss=0.717 " + "l1=0.693" + "l2=0.0239 f=-0.498 shape=(1, 9000, 1)
logits [[ 4.172616  -2.7545764  2.5989027 -6.007264 ]]
Iteration 500 of 1000: loss=0.705 " + "l1=0.677" + "l2=0.028 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.073981  -2.6924043  2.5632129 -5.8804855]]
Iteration 600 of 1000: loss=0.693 " + "l1=0.661" + "l2=0.0319 f=-0.473 shape=(1, 9000, 1)
logits [[ 3.9757626 -2.6355724  2.528692  -5.7616625]]
Iteration 700 of 1000: loss=0.681 " + "l1=0.645" + "l2=0.0365 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.8680255 -2.577942   2.4912457 -5.633528 ]]
Iteration 800 of 1000: loss=0.669 " + "l1=0.628" + "l2=0.0409 f=-0.451 shape=(1, 9000, 1)
logits [[ 3.7628279 -2.5183423  2.4528081 -5.5010424]]
Iteration 900 of 1000: loss=0.658 " + "l1=0.612" + "l2=0.0456 f=-0.439 shape=(1, 9000, 1)
logits [[ 3.6570473 -2.4630263  2.41785   -5.3669767]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.74 " + "l1=7.74" + "l2=0 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.681542  -3.0540905  2.7657304 -6.6553187]]
Iteration 100 of 1000: loss=5.75 " + "l1=4.84" + "l2=0.913 f=-0.379 shape=(1, 9000, 1)
logits [[ 2.8100927 -2.03172    2.099169  -4.3947697]]
Iteration 200 of 1000: loss=4.5 " + "l1=3.2" + "l2=1.3 f=-0.323 shape=(1, 9000, 1)
logits [[ 1.7718734 -1.4268131  1.6854401 -3.320773 ]]
Iteration 300 of 1000: loss=3.76 " + "l1=2.54" + "l2=1.21 f=-0.271 shape=(1, 9000, 1)
logits [[ 1.4384601 -1.1050907  1.4284347 -2.8450468]]
Iteration 400 of 1000: loss=3.36 " + "l1=2.2" + "l2=1.16 f=-0.224 shape=(1, 9000, 1)
logits [[ 1.2820698 -0.9214502  1.2829438 -2.5412319]]
Iteration 500 of 1000: loss=3.16 " + "l1=2.02" + "l2=1.14 f=-0.197 shape=(1, 9000, 1)
logits [[ 1.1834098 -0.8330138  1.1798993 -2.3170776]]
Iteration 600 of 1000: loss=3.01 " + "l1=1.86" + "l2=1.15 f=-0.167 shape=(1, 9000, 1)
logits [[ 1.0879761 -0.7597858  1.1001995 -2.0952015]]
Iteration 700 of 1000: loss=2.88 " + "l1=1.73" + "l2=1.15 f=-0.139 shape=(1, 9000, 1)
logits [[ 1.0286574 -0.7022554  1.0322354 -1.9156274]]
Iteration 800 of 1000: loss=2.77 " + "l1=1.66" + "l2=1.11 f=-0.126 shape=(1, 9000, 1)
logits [[ 0.9815638 -0.6745495  0.983049  -1.7927053]]
Iteration 900 of 1000: loss=2.66 " + "l1=1.55" + "l2=1.11 f=-0.111 shape=(1, 9000, 1)
logits [[ 0.9130991 -0.6355567  0.9149037 -1.6352674]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=77.4 " + "l1=77.4" + "l2=0 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.681542  -3.0540905  2.7657304 -6.6553187]]
Iteration 100 of 1000: loss=20.8 " + "l1=8.36" + "l2=12.4 f=-0.291 shape=(1, 9000, 1)
logits [[ 0.6030489  -0.20982368  0.62661886 -2.1844127 ]]
Iteration 200 of 1000: loss=10.6 " + "l1=0.0749" + "l2=10.6 f=-0.24 shape=(1, 9000, 1)
logits [[ 0.23578188  0.2878659   0.29535422 -1.7803144 ]]
Iteration 300 of 1000: loss=8.85 " + "l1=0.133" + "l2=8.72 f=-0.239 shape=(1, 9000, 1)
logits [[ 0.28777453  0.27798542  0.2912916  -1.8142366 ]]
Iteration 400 of 1000: loss=7.68 " + "l1=0.12" + "l2=7.56 f=-0.242 shape=(1, 9000, 1)
logits [[ 0.2782718   0.28155524  0.29351938 -1.8200501 ]]
Iteration 500 of 1000: loss=6.94 " + "l1=0" + "l2=6.94 f=-0.247 shape=(1, 9000, 1)
logits [[ 0.25779262  0.292202    0.27148506 -1.810467  ]]
Iteration 600 of 1000: loss=6.46 " + "l1=0" + "l2=6.46 f=-0.253 shape=(1, 9000, 1)
logits [[ 0.23996848  0.28042626  0.2680594  -1.8000928 ]]
Iteration 700 of 1000: loss=6.14 " + "l1=0.123" + "l2=6.02 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.21488579  0.26394165  0.27624613 -1.7825487 ]]
Iteration 800 of 1000: loss=5.69 " + "l1=0" + "l2=5.69 f=-0.261 shape=(1, 9000, 1)
logits [[ 0.25908795  0.26034915  0.25974086 -1.8224125 ]]
Iteration 900 of 1000: loss=5.38 " + "l1=0" + "l2=5.38 f=-0.272 shape=(1, 9000, 1)
logits [[ 0.18886635  0.26595294  0.26435867 -1.8090279 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=42.5 " + "l1=42.5" + "l2=0 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.681542  -3.0540905  2.7657304 -6.6553187]]
Iteration 100 of 1000: loss=16.3 " + "l1=8.89" + "l2=7.44 f=-0.307 shape=(1, 9000, 1)
logits [[ 0.9782064 -0.6229173  0.9941315 -2.5765772]]
Iteration 200 of 1000: loss=9.54 " + "l1=0.434" + "l2=9.11 f=-0.24 shape=(1, 9000, 1)
logits [[ 0.29809347  0.24695577  0.3259312  -1.830069  ]]
Iteration 300 of 1000: loss=7.22 " + "l1=0" + "l2=7.22 f=-0.253 shape=(1, 9000, 1)
logits [[ 0.25155     0.29250836  0.28563604 -1.8429579 ]]
Iteration 400 of 1000: loss=6.31 " + "l1=0" + "l2=6.31 f=-0.258 shape=(1, 9000, 1)
logits [[ 0.27120864  0.2789286   0.27380636 -1.8549197 ]]
Iteration 500 of 1000: loss=5.61 " + "l1=0" + "l2=5.61 f=-0.268 shape=(1, 9000, 1)
logits [[ 0.22670846  0.2917838   0.27727652 -1.8660864 ]]
Iteration 600 of 1000: loss=5.09 " + "l1=0" + "l2=5.09 f=-0.268 shape=(1, 9000, 1)
logits [[ 0.22739881  0.27630794  0.27080294 -1.8481202 ]]
Iteration 700 of 1000: loss=4.67 " + "l1=0.0519" + "l2=4.62 f=-0.27 shape=(1, 9000, 1)
logits [[ 0.24949759  0.25460908  0.26404944 -1.8495559 ]]
Iteration 800 of 1000: loss=4.35 " + "l1=0" + "l2=4.35 f=-0.274 shape=(1, 9000, 1)
logits [[ 0.23552099  0.25083387  0.24415122 -1.8247689 ]]
Iteration 900 of 1000: loss=4.11 " + "l1=0" + "l2=4.11 f=-0.278 shape=(1, 9000, 1)
logits [[ 0.18267475  0.24471416  0.23810501 -1.7782147 ]]
--- 285.0109760761261 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0192 " + "l1=0.0192" + "l2=0 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.681542  -3.0540905  2.7657304 -6.6553187]]
Iteration 100 of 1000: loss=0.0191 " + "l1=0.0189" + "l2=0.000134 f=-0.564 shape=(1, 9000, 1)
logits [[ 4.6588163 -3.051763   2.7666962 -6.6315937]]
Iteration 200 of 1000: loss=0.019 " + "l1=0.0189" + "l2=9.02e-05 f=-0.564 shape=(1, 9000, 1)
logits [[ 4.658703  -3.0521624  2.7669303 -6.631436 ]]
Iteration 300 of 1000: loss=0.019 " + "l1=0.0189" + "l2=0.000125 f=-0.564 shape=(1, 9000, 1)
logits [[ 4.6556287 -3.0519922  2.7671285 -6.6282787]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.192 " + "l1=0.192" + "l2=0 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.681542  -3.0540905  2.7657304 -6.6553187]]
Iteration 100 of 1000: loss=0.182 " + "l1=0.176" + "l2=0.00526 f=-0.56 shape=(1, 9000, 1)
logits [[ 4.5377836 -3.0424464  2.774002  -6.507521 ]]
Iteration 200 of 1000: loss=0.178 " + "l1=0.171" + "l2=0.00681 f=-0.555 shape=(1, 9000, 1)
logits [[ 4.4849033 -3.0355673  2.7748923 -6.4450593]]
Iteration 300 of 1000: loss=0.174 " + "l1=0.165" + "l2=0.00858 f=-0.551 shape=(1, 9000, 1)
logits [[ 4.4261565 -3.0259452  2.774281  -6.376571 ]]
Iteration 400 of 1000: loss=0.17 " + "l1=0.16" + "l2=0.00986 f=-0.547 shape=(1, 9000, 1)
logits [[ 4.3734355 -3.0185695  2.773145  -6.3159814]]
Iteration 500 of 1000: loss=0.166 " + "l1=0.155" + "l2=0.0113 f=-0.543 shape=(1, 9000, 1)
logits [[ 4.319079  -3.0103312  2.772523  -6.2521067]]
Iteration 600 of 1000: loss=0.162 " + "l1=0.149" + "l2=0.0127 f=-0.537 shape=(1, 9000, 1)
logits [[ 4.2624335 -2.9987597  2.7706263 -6.183935 ]]
Iteration 700 of 1000: loss=0.158 " + "l1=0.143" + "l2=0.0145 f=-0.532 shape=(1, 9000, 1)
logits [[ 4.203375  -2.986979   2.770172  -6.1156807]]
Iteration 800 of 1000: loss=0.154 " + "l1=0.138" + "l2=0.0159 f=-0.529 shape=(1, 9000, 1)
logits [[ 4.147976  -2.9794807  2.7712622 -6.054189 ]]
Iteration 900 of 1000: loss=0.15 " + "l1=0.133" + "l2=0.017 f=-0.526 shape=(1, 9000, 1)
logits [[ 4.0992174 -2.9722798  2.7713974 -6.0022163]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.92 " + "l1=1.92" + "l2=0 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.681542  -3.0540905  2.7657304 -6.6553187]]
Iteration 100 of 1000: loss=1.01 " + "l1=0.574" + "l2=0.436 f=-0.478 shape=(1, 9000, 1)
logits [[ 3.3948307 -2.9267533  2.8209996 -5.201533 ]]
Iteration 200 of 1000: loss=0.641 " + "l1=0.129" + "l2=0.512 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.9517884 -2.907838   2.822433  -4.711513 ]]
Iteration 300 of 1000: loss=0.385 " + "l1=0.00752" + "l2=0.377 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.8008654 -2.9008596  2.7933424 -4.5278935]]
Iteration 400 of 1000: loss=0.266 " + "l1=0.00612" + "l2=0.26 f=-0.456 shape=(1, 9000, 1)
logits [[ 2.7924001 -2.907235   2.7862778 -4.495224 ]]
Iteration 500 of 1000: loss=0.203 " + "l1=0.00508" + "l2=0.198 f=-0.453 shape=(1, 9000, 1)
logits [[ 2.7676146 -2.9023075  2.7625363 -4.438182 ]]
Iteration 600 of 1000: loss=0.166 " + "l1=0.00325" + "l2=0.163 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.741369  -2.896141   2.7381146 -4.376035 ]]
Iteration 700 of 1000: loss=0.142 " + "l1=0" + "l2=0.142 f=-0.445 shape=(1, 9000, 1)
logits [[ 2.7111382 -2.903107   2.7252197 -4.314913 ]]
Iteration 800 of 1000: loss=0.122 " + "l1=0" + "l2=0.122 f=-0.445 shape=(1, 9000, 1)
logits [[ 2.7124724 -2.910612   2.7161703 -4.2962465]]
Iteration 900 of 1000: loss=0.111 " + "l1=0" + "l2=0.111 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.7024305 -2.9150264  2.7082627 -4.269303 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.05 " + "l1=1.05" + "l2=0 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.681542  -3.0540905  2.7657304 -6.6553187]]
Iteration 100 of 1000: loss=0.762 " + "l1=0.609" + "l2=0.152 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.9082825 -2.9728734  2.800383  -5.773208 ]]
Iteration 200 of 1000: loss=0.624 " + "l1=0.423" + "l2=0.202 f=-0.486 shape=(1, 9000, 1)
logits [[ 3.5835998 -2.948077   2.8151114 -5.393646 ]]
Iteration 300 of 1000: loss=0.506 " + "l1=0.269" + "l2=0.237 f=-0.473 shape=(1, 9000, 1)
logits [[ 3.3081598 -2.932304   2.819116  -5.0881224]]
Iteration 400 of 1000: loss=0.384 " + "l1=0.137" + "l2=0.246 f=-0.464 shape=(1, 9000, 1)
logits [[ 3.0556505 -2.9094126  2.8057866 -4.808653 ]]
Iteration 500 of 1000: loss=0.264 " + "l1=0.0122" + "l2=0.251 f=-0.456 shape=(1, 9000, 1)
logits [[ 2.8055825 -2.8947423  2.7834704 -4.5190153]]
Iteration 600 of 1000: loss=0.184 " + "l1=0" + "l2=0.184 f=-0.45 shape=(1, 9000, 1)
logits [[ 2.7530792 -2.9013124  2.754817  -4.406542 ]]
Iteration 700 of 1000: loss=0.148 " + "l1=0" + "l2=0.148 f=-0.446 shape=(1, 9000, 1)
logits [[ 2.7314115 -2.8998091  2.7326767 -4.3500085]]
Iteration 800 of 1000: loss=0.127 " + "l1=0" + "l2=0.127 f=-0.444 shape=(1, 9000, 1)
logits [[ 2.7242043 -2.9111161  2.729867  -4.3185067]]
Iteration 900 of 1000: loss=0.113 " + "l1=0" + "l2=0.113 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.715939  -2.9223807  2.72517   -4.2895775]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.623 " + "l1=0.623" + "l2=0 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.681542  -3.0540905  2.7657304 -6.6553187]]
Iteration 100 of 1000: loss=0.521 " + "l1=0.468" + "l2=0.0535 f=-0.535 shape=(1, 9000, 1)
logits [[ 4.224265  -3.0058215  2.7849972 -6.141888 ]]
Iteration 200 of 1000: loss=0.469 " + "l1=0.394" + "l2=0.0743 f=-0.515 shape=(1, 9000, 1)
logits [[ 4.005273  -2.9823115  2.7916949 -5.8756204]]
Iteration 300 of 1000: loss=0.423 " + "l1=0.338" + "l2=0.0852 f=-0.503 shape=(1, 9000, 1)
logits [[ 3.8363068 -2.9720016  2.7973208 -5.6732545]]
Iteration 400 of 1000: loss=0.382 " + "l1=0.288" + "l2=0.0944 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.6828787 -2.955434   2.7982426 -5.4911075]]
Iteration 500 of 1000: loss=0.34 " + "l1=0.233" + "l2=0.107 f=-0.483 shape=(1, 9000, 1)
logits [[ 3.513652  -2.9393265  2.7952862 -5.300663 ]]
Iteration 600 of 1000: loss=0.297 " + "l1=0.175" + "l2=0.123 f=-0.473 shape=(1, 9000, 1)
logits [[ 3.3278313 -2.9268715  2.7903578 -5.084833 ]]
Iteration 700 of 1000: loss=0.255 " + "l1=0.121" + "l2=0.134 f=-0.467 shape=(1, 9000, 1)
logits [[ 3.1456983 -2.91792    2.7743497 -4.8691154]]
Iteration 800 of 1000: loss=0.212 " + "l1=0.072" + "l2=0.14 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.983502  -2.9130764  2.7619603 -4.6809683]]
Iteration 900 of 1000: loss=0.166 " + "l1=0.0185" + "l2=0.148 f=-0.453 shape=(1, 9000, 1)
logits [[ 2.8011343 -2.906079   2.7440913 -4.452248 ]]
--- 264.5690598487854 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.113 " + "l1=0.113" + "l2=0 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.681542  -3.0540905  2.7657304 -6.6553187]]
Iteration 100 of 1000: loss=0.113 " + "l1=0.112" + "l2=0.000413 f=-0.561 shape=(1, 9000, 1)
logits [[ 4.6375146 -3.0425794  2.7559144 -6.5940366]]
Iteration 200 of 1000: loss=0.113 " + "l1=0.112" + "l2=0.000401 f=-0.56 shape=(1, 9000, 1)
logits [[ 4.6292987 -3.0395024  2.7536142 -6.581969 ]]
Iteration 300 of 1000: loss=0.112 " + "l1=0.112" + "l2=0.000483 f=-0.558 shape=(1, 9000, 1)
logits [[ 4.6178927 -3.0357444  2.7507179 -6.5655975]]
Iteration 400 of 1000: loss=0.112 " + "l1=0.112" + "l2=0.000595 f=-0.557 shape=(1, 9000, 1)
logits [[ 4.6058283 -3.0318878  2.7475588 -6.5483003]]
Iteration 500 of 1000: loss=0.112 " + "l1=0.111" + "l2=0.000702 f=-0.555 shape=(1, 9000, 1)
logits [[ 4.593346  -3.0278194  2.7441797 -6.530355 ]]
Iteration 600 of 1000: loss=0.112 " + "l1=0.111" + "l2=0.000865 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.580695  -3.0236998  2.7408361 -6.512087 ]]
Iteration 700 of 1000: loss=0.112 " + "l1=0.111" + "l2=0.00103 f=-0.552 shape=(1, 9000, 1)
logits [[ 4.56781   -3.01946    2.7373958 -6.493556 ]]
Iteration 800 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.00119 f=-0.55 shape=(1, 9000, 1)
logits [[ 4.5548615 -3.015126   2.733949  -6.474919 ]]
Iteration 900 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.00135 f=-0.549 shape=(1, 9000, 1)
logits [[ 4.5418677 -3.0104685  2.7304404 -6.4561195]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.13 " + "l1=1.13" + "l2=0 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.681542  -3.0540905  2.7657304 -6.6553187]]
Iteration 100 of 1000: loss=1.07 " + "l1=1.04" + "l2=0.0331 f=-0.513 shape=(1, 9000, 1)
logits [[ 4.293894  -2.9383936  2.685221  -6.092513 ]]
Iteration 200 of 1000: loss=1.04 " + "l1=0.993" + "l2=0.0454 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.109139  -2.8731217  2.6458023 -5.8175936]]
Iteration 300 of 1000: loss=1.01 " + "l1=0.953" + "l2=0.0541 f=-0.462 shape=(1, 9000, 1)
logits [[ 3.9469526 -2.8156192  2.6022694 -5.581362 ]]
Iteration 400 of 1000: loss=0.976 " + "l1=0.912" + "l2=0.0639 f=-0.444 shape=(1, 9000, 1)
logits [[ 3.7795875 -2.7612123  2.5497801 -5.342382 ]]
Iteration 500 of 1000: loss=0.944 " + "l1=0.87" + "l2=0.0737 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.6088212 -2.7070808  2.4915102 -5.095177 ]]
Iteration 600 of 1000: loss=0.912 " + "l1=0.829" + "l2=0.0833 f=-0.407 shape=(1, 9000, 1)
logits [[ 3.4423537 -2.659642   2.4338758 -4.843769 ]]
Iteration 700 of 1000: loss=0.877 " + "l1=0.783" + "l2=0.0943 f=-0.384 shape=(1, 9000, 1)
logits [[ 3.2615228 -2.6015494  2.3692482 -4.564794 ]]
Iteration 800 of 1000: loss=0.843 " + "l1=0.74" + "l2=0.103 f=-0.363 shape=(1, 9000, 1)
logits [[ 3.0923934 -2.543674   2.3089583 -4.307679 ]]
Iteration 900 of 1000: loss=0.817 " + "l1=0.705" + "l2=0.112 f=-0.347 shape=(1, 9000, 1)
logits [[ 2.9465938 -2.5010962  2.266774  -4.1011796]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.3 " + "l1=11.3" + "l2=0 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.681542  -3.0540905  2.7657304 -6.6553187]]
Iteration 100 of 1000: loss=6.63 " + "l1=4.68" + "l2=1.95 f=-0.287 shape=(1, 9000, 1)
logits [[ 1.9676685 -2.373218   1.9669973 -2.7099745]]
Iteration 200 of 1000: loss=5.11 " + "l1=3.27" + "l2=1.84 f=-0.217 shape=(1, 9000, 1)
logits [[ 1.4553895 -2.1135755  1.5283865 -1.7368107]]
Iteration 300 of 1000: loss=4.06 " + "l1=2.21" + "l2=1.85 f=-0.165 shape=(1, 9000, 1)
logits [[ 0.9425148 -1.9680712  1.287554  -0.9214759]]
Iteration 400 of 1000: loss=3.11 " + "l1=1.13" + "l2=1.98 f=-0.0957 shape=(1, 9000, 1)
logits [[ 0.49828437 -1.8795396   1.0657517  -0.06742988]]
Iteration 500 of 1000: loss=2.28 " + "l1=0.213" + "l2=2.07 f=-0.0346 shape=(1, 9000, 1)
logits [[ 0.2280973  -1.8133714   0.8299818   0.61684066]]
Iteration 600 of 1000: loss=1.81 " + "l1=0.00835" + "l2=1.8 f=-0.0221 shape=(1, 9000, 1)
logits [[ 0.24121612 -1.7912482   0.7349352   0.72658074]]
Iteration 700 of 1000: loss=1.63 " + "l1=0.00144" + "l2=1.62 f=-0.0251 shape=(1, 9000, 1)
logits [[ 0.22747846 -1.7795286   0.7265567   0.72511727]]
Iteration 800 of 1000: loss=1.52 " + "l1=0" + "l2=1.52 f=-0.027 shape=(1, 9000, 1)
logits [[ 0.21524781 -1.7753118   0.7240182   0.7281907 ]]
Iteration 900 of 1000: loss=1.45 " + "l1=0.00951" + "l2=1.44 f=-0.0295 shape=(1, 9000, 1)
logits [[ 0.20491433 -1.7824553   0.73446155  0.7249536 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.24 " + "l1=6.24" + "l2=0 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.681542  -3.0540905  2.7657304 -6.6553187]]
Iteration 100 of 1000: loss=4.53 " + "l1=3.7" + "l2=0.83 f=-0.349 shape=(1, 9000, 1)
logits [[ 2.7805295 -2.5429966  2.3219852 -3.9541225]]
Iteration 200 of 1000: loss=3.59 " + "l1=2.58" + "l2=1.02 f=-0.29 shape=(1, 9000, 1)
logits [[ 1.9501213 -2.3212895  1.946797  -2.7349584]]
Iteration 300 of 1000: loss=2.99 " + "l1=2.09" + "l2=0.896 f=-0.238 shape=(1, 9000, 1)
logits [[ 1.6484581 -2.1341684  1.6668535 -2.132608 ]]
Iteration 400 of 1000: loss=2.55 " + "l1=1.66" + "l2=0.889 f=-0.186 shape=(1, 9000, 1)
logits [[ 1.3250499 -2.0210834  1.4895753 -1.5360562]]
Iteration 500 of 1000: loss=2.19 " + "l1=1.22" + "l2=0.968 f=-0.128 shape=(1, 9000, 1)
logits [[ 0.9737469  -1.9139984   1.3270184  -0.89868003]]
Iteration 600 of 1000: loss=1.89 " + "l1=0.86" + "l2=1.03 f=-0.0766 shape=(1, 9000, 1)
logits [[ 0.71466845 -1.8433241   1.1924891  -0.37026444]]
Iteration 700 of 1000: loss=1.66 " + "l1=0.56" + "l2=1.1 f=-0.0512 shape=(1, 9000, 1)
logits [[ 0.5144964  -1.8017129   1.0498905   0.03244917]]
Iteration 800 of 1000: loss=1.5 " + "l1=0.364" + "l2=1.14 f=-0.0405 shape=(1, 9000, 1)
logits [[ 0.3784928  -1.7897162   0.9551181   0.29395616]]
Iteration 900 of 1000: loss=1.38 " + "l1=0.192" + "l2=1.18 f=-0.0332 shape=(1, 9000, 1)
logits [[ 0.2812485  -1.7789761   0.85686016  0.5082523 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=8.79 " + "l1=8.79" + "l2=0 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.681542  -3.0540905  2.7657304 -6.6553187]]
Iteration 100 of 1000: loss=5.65 " + "l1=4.11" + "l2=1.54 f=-0.31 shape=(1, 9000, 1)
logits [[ 2.1835306 -2.4343047  2.1340673 -3.122636 ]]
Iteration 200 of 1000: loss=4.4 " + "l1=3" + "l2=1.4 f=-0.248 shape=(1, 9000, 1)
logits [[ 1.7017791 -2.2233953  1.7014774 -2.1713557]]
Iteration 300 of 1000: loss=3.59 " + "l1=2.18" + "l2=1.41 f=-0.188 shape=(1, 9000, 1)
logits [[ 1.2354199 -2.0266845  1.4223733 -1.3847067]]
Iteration 400 of 1000: loss=2.94 " + "l1=1.54" + "l2=1.4 f=-0.145 shape=(1, 9000, 1)
logits [[ 0.85277355 -1.955263    1.2539386  -0.73131645]]
Iteration 500 of 1000: loss=2.34 " + "l1=0.818" + "l2=1.53 f=-0.0807 shape=(1, 9000, 1)
logits [[ 0.46625355 -1.8495402   1.057729    0.00272099]]
Iteration 600 of 1000: loss=1.89 " + "l1=0.303" + "l2=1.58 f=-0.0374 shape=(1, 9000, 1)
logits [[ 0.3069923  -1.791295    0.86277413  0.47180992]]
Iteration 700 of 1000: loss=1.6 " + "l1=0.00127" + "l2=1.6 f=-0.0283 shape=(1, 9000, 1)
logits [[ 0.2034681  -1.7913843   0.7380971   0.73646224]]
Iteration 800 of 1000: loss=1.48 " + "l1=0.00299" + "l2=1.48 f=-0.0322 shape=(1, 9000, 1)
logits [[ 0.19574268 -1.7815593   0.7304884   0.7266321 ]]
Iteration 900 of 1000: loss=1.39 " + "l1=0" + "l2=1.39 f=-0.0331 shape=(1, 9000, 1)
logits [[ 0.17897788 -1.7790736   0.7320634   0.73564065]]
--- 303.32599568367004 seconds ---
Adv result:3
Loading record A02330
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0264 " + "l1=0.0264" + "l2=0 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.5400536 -1.0963825  1.1228063 -3.066904 ]]
Iteration 100 of 1000: loss=0.0257 " + "l1=0.0253" + "l2=0.000423 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.4764762 -1.050869   1.0895194 -3.0146065]]
Iteration 200 of 1000: loss=0.0255 " + "l1=0.025" + "l2=0.000477 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.4632496 -1.0395349  1.0811492 -3.004364 ]]
Iteration 300 of 1000: loss=0.0254 " + "l1=0.0248" + "l2=0.000612 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.4483396 -1.0270799  1.0722957 -2.993142 ]]
Iteration 400 of 1000: loss=0.0252 " + "l1=0.0245" + "l2=0.000713 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.4343444 -1.0156672  1.0642478 -2.9827106]]
Iteration 500 of 1000: loss=0.0251 " + "l1=0.0243" + "l2=0.000861 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.4211575 -1.0049912  1.0567211 -2.9726875]]
Iteration 600 of 1000: loss=0.0251 " + "l1=0.024" + "l2=0.00106 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.4087391  -0.99441165  1.0492857  -2.9632201 ]]
Iteration 700 of 1000: loss=0.025 " + "l1=0.0238" + "l2=0.0012 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.3975658 -0.9853896  1.042982  -2.9550042]]
Iteration 800 of 1000: loss=0.025 " + "l1=0.0236" + "l2=0.00137 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.3872216 -0.9772979  1.037375  -2.9473321]]
Iteration 900 of 1000: loss=0.025 " + "l1=0.0235" + "l2=0.00151 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.3777546 -0.9702961  1.0325603 -2.9401867]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.264 " + "l1=0.264" + "l2=0 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.5400536 -1.0963825  1.1228063 -3.066904 ]]
Iteration 100 of 1000: loss=0.172 " + "l1=0.113" + "l2=0.0595 f=-0.379 shape=(1, 9000, 1)
logits [[ 0.7442211 -0.3835934  0.7219227 -2.5978   ]]
Iteration 200 of 1000: loss=0.142 " + "l1=0.0884" + "l2=0.0532 f=-0.387 shape=(1, 9000, 1)
logits [[ 0.6406063  -0.24129225  0.6424355  -2.5884478 ]]
Iteration 300 of 1000: loss=0.131 " + "l1=0.0779" + "l2=0.0529 f=-0.393 shape=(1, 9000, 1)
logits [[ 0.5928588 -0.1832869  0.5957268 -2.5761645]]
Iteration 400 of 1000: loss=0.123 " + "l1=0.0676" + "l2=0.0554 f=-0.399 shape=(1, 9000, 1)
logits [[ 0.5434555  -0.12863804  0.54751074 -2.5586512 ]]
Iteration 500 of 1000: loss=0.116 " + "l1=0.0566" + "l2=0.0593 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.49187276 -0.0690035   0.49698755 -2.541247  ]]
Iteration 600 of 1000: loss=0.111 " + "l1=0.0489" + "l2=0.0617 f=-0.41 shape=(1, 9000, 1)
logits [[ 0.4511423  -0.03007626  0.45897797 -2.5185187 ]]
Iteration 700 of 1000: loss=0.107 " + "l1=0.0446" + "l2=0.0624 f=-0.411 shape=(1, 9000, 1)
logits [[ 0.43297732 -0.01045129  0.43524238 -2.4997783 ]]
Iteration 800 of 1000: loss=0.104 " + "l1=0.0393" + "l2=0.0643 f=-0.411 shape=(1, 9000, 1)
logits [[ 0.39748356  0.01725214  0.41060102 -2.4709566 ]]
Iteration 900 of 1000: loss=0.101 " + "l1=0.0364" + "l2=0.0641 f=-0.412 shape=(1, 9000, 1)
logits [[ 0.3899901   0.02853544  0.39258856 -2.4603152 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.64 " + "l1=2.64" + "l2=0 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.5400536 -1.0963825  1.1228063 -3.066904 ]]
Iteration 100 of 1000: loss=0.255 " + "l1=0" + "l2=0.255 f=-0.425 shape=(1, 9000, 1)
logits [[ 0.01487726  0.23352857  0.22972229 -2.179447  ]]
Iteration 200 of 1000: loss=0.179 " + "l1=0" + "l2=0.179 f=-0.424 shape=(1, 9000, 1)
logits [[ 0.05819773  0.2298366   0.22828083 -2.2134929 ]]
Iteration 300 of 1000: loss=0.152 " + "l1=0" + "l2=0.152 f=-0.421 shape=(1, 9000, 1)
logits [[ 0.05967133  0.23735408  0.22501117 -2.2057667 ]]
Iteration 400 of 1000: loss=0.136 " + "l1=0.00399" + "l2=0.132 f=-0.416 shape=(1, 9000, 1)
logits [[ 0.08839008  0.22685045  0.2308415  -2.2092721 ]]
Iteration 500 of 1000: loss=0.123 " + "l1=0" + "l2=0.123 f=-0.414 shape=(1, 9000, 1)
logits [[ 0.10371288  0.23258246  0.22915979 -2.22195   ]]
Iteration 600 of 1000: loss=0.119 " + "l1=0.0038" + "l2=0.115 f=-0.412 shape=(1, 9000, 1)
logits [[ 0.12322986  0.22648825  0.23028576 -2.2270892 ]]
Iteration 700 of 1000: loss=0.111 " + "l1=0" + "l2=0.111 f=-0.411 shape=(1, 9000, 1)
logits [[ 0.12386005  0.22691232  0.22352578 -2.2185435 ]]
Iteration 800 of 1000: loss=0.108 " + "l1=0" + "l2=0.108 f=-0.411 shape=(1, 9000, 1)
logits [[ 0.12510511  0.22840461  0.21944174 -2.2155192 ]]
Iteration 900 of 1000: loss=0.104 " + "l1=0" + "l2=0.104 f=-0.41 shape=(1, 9000, 1)
logits [[ 0.12977675  0.22492133  0.21853314 -2.2113633 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.45 " + "l1=1.45" + "l2=0 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.5400536 -1.0963825  1.1228063 -3.066904 ]]
Iteration 100 of 1000: loss=0.239 " + "l1=0.000706" + "l2=0.238 f=-0.435 shape=(1, 9000, 1)
logits [[ 0.02492131  0.22807358  0.2293577  -2.2205887 ]]
Iteration 200 of 1000: loss=0.165 " + "l1=0.00166" + "l2=0.163 f=-0.426 shape=(1, 9000, 1)
logits [[ 0.06951075  0.22660841  0.22961907 -2.2312243 ]]
Iteration 300 of 1000: loss=0.139 " + "l1=0.0035" + "l2=0.135 f=-0.419 shape=(1, 9000, 1)
logits [[ 0.09846624  0.224758    0.2311306  -2.231531  ]]
Iteration 400 of 1000: loss=0.123 " + "l1=0.00263" + "l2=0.121 f=-0.417 shape=(1, 9000, 1)
logits [[ 0.11662504  0.22448564  0.22926891 -2.2371252 ]]
Iteration 500 of 1000: loss=0.113 " + "l1=0" + "l2=0.113 f=-0.414 shape=(1, 9000, 1)
logits [[ 0.12133653  0.22631681  0.22248279 -2.225476  ]]
Iteration 600 of 1000: loss=0.107 " + "l1=0" + "l2=0.107 f=-0.412 shape=(1, 9000, 1)
logits [[ 0.12059215  0.225278    0.21750338 -2.2096598 ]]
Iteration 700 of 1000: loss=0.101 " + "l1=0" + "l2=0.101 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.12956756  0.2195283   0.21683073 -2.202199  ]]
Iteration 800 of 1000: loss=0.0977 " + "l1=0" + "l2=0.0977 f=-0.407 shape=(1, 9000, 1)
logits [[ 0.12511191  0.22230479  0.21209341 -2.1885989 ]]
Iteration 900 of 1000: loss=0.0955 " + "l1=0" + "l2=0.0955 f=-0.406 shape=(1, 9000, 1)
logits [[ 0.11543511  0.2301129   0.20490848 -2.172561  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.857 " + "l1=0.857" + "l2=0 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.5400536 -1.0963825  1.1228063 -3.066904 ]]
Iteration 100 of 1000: loss=0.254 " + "l1=0.0788" + "l2=0.175 f=-0.423 shape=(1, 9000, 1)
logits [[ 0.24600857  0.09169306  0.3342398  -2.3654268 ]]
Iteration 200 of 1000: loss=0.162 " + "l1=0.00229" + "l2=0.159 f=-0.428 shape=(1, 9000, 1)
logits [[ 0.07942444  0.22951211  0.23656435 -2.2587101 ]]
Iteration 300 of 1000: loss=0.133 " + "l1=0" + "l2=0.133 f=-0.424 shape=(1, 9000, 1)
logits [[ 0.10311726  0.23431756  0.23267077 -2.265411  ]]
Iteration 400 of 1000: loss=0.121 " + "l1=0" + "l2=0.121 f=-0.422 shape=(1, 9000, 1)
logits [[ 0.11276475  0.23433885  0.22525418 -2.2593868 ]]
Iteration 500 of 1000: loss=0.112 " + "l1=0" + "l2=0.112 f=-0.419 shape=(1, 9000, 1)
logits [[ 0.12686452  0.22654848  0.22422408 -2.2529228 ]]
Iteration 600 of 1000: loss=0.106 " + "l1=0" + "l2=0.106 f=-0.417 shape=(1, 9000, 1)
logits [[ 0.13104379  0.22582997  0.22127624 -2.2458358 ]]
Iteration 700 of 1000: loss=0.102 " + "l1=0" + "l2=0.102 f=-0.416 shape=(1, 9000, 1)
logits [[ 0.13789815  0.22190283  0.22001006 -2.2446144 ]]
Iteration 800 of 1000: loss=0.0981 " + "l1=0" + "l2=0.0981 f=-0.415 shape=(1, 9000, 1)
logits [[ 0.13989845  0.22130932  0.21804674 -2.2408676 ]]
Iteration 900 of 1000: loss=0.0945 " + "l1=0" + "l2=0.0945 f=-0.416 shape=(1, 9000, 1)
logits [[ 0.14732616  0.21977025  0.21618204 -2.247958  ]]
--- 306.702210187912 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00417 " + "l1=0.00417" + "l2=0 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.5400536 -1.0963825  1.1228063 -3.066904 ]]
Iteration 100 of 1000: loss=0.00402 " + "l1=0.00385" + "l2=0.000163 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.5091063 -1.0919482  1.1237164 -3.042142 ]]
Iteration 200 of 1000: loss=0.00398 " + "l1=0.00384" + "l2=0.00014 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.5075092 -1.0918323  1.1236874 -3.0410504]]
Iteration 300 of 1000: loss=0.00395 " + "l1=0.0038" + "l2=0.000155 f=-0.376 shape=(1, 9000, 1)
logits [[ 1.5036358 -1.0913019  1.1239135 -3.0384579]]
Iteration 400 of 1000: loss=0.00394 " + "l1=0.00375" + "l2=0.000191 f=-0.376 shape=(1, 9000, 1)
logits [[ 1.4994334 -1.0905776  1.1240748 -3.0358067]]
Iteration 500 of 1000: loss=0.00395 " + "l1=0.00371" + "l2=0.000234 f=-0.376 shape=(1, 9000, 1)
logits [[ 1.4953614 -1.0897828  1.1241193 -3.033284 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0417 " + "l1=0.0417" + "l2=0 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.5400536 -1.0963825  1.1228063 -3.066904 ]]
Iteration 100 of 1000: loss=0.0275 " + "l1=0.0196" + "l2=0.00792 f=-0.376 shape=(1, 9000, 1)
logits [[ 1.3186278 -1.057      1.1228079 -2.8903408]]
Iteration 200 of 1000: loss=0.022 " + "l1=0.01" + "l2=0.012 f=-0.378 shape=(1, 9000, 1)
logits [[ 1.2232759 -1.0315073  1.1229527 -2.826719 ]]
Iteration 300 of 1000: loss=0.0171 " + "l1=0.00187" + "l2=0.0152 f=-0.38 shape=(1, 9000, 1)
logits [[ 1.1397796 -1.0043019  1.1210719 -2.7771962]]
Iteration 400 of 1000: loss=0.0138 " + "l1=6.81e-05" + "l2=0.0137 f=-0.383 shape=(1, 9000, 1)
logits [[ 1.11847   -0.9928253  1.1177889 -2.7740836]]
Iteration 500 of 1000: loss=0.0121 " + "l1=0.000534" + "l2=0.0116 f=-0.385 shape=(1, 9000, 1)
logits [[ 1.1212972  -0.99083585  1.1159549  -2.7867415 ]]
Iteration 600 of 1000: loss=0.0109 " + "l1=0.000206" + "l2=0.0107 f=-0.387 shape=(1, 9000, 1)
logits [[ 1.1172327 -0.9895167  1.1151704 -2.7905462]]
Iteration 700 of 1000: loss=0.0101 " + "l1=0" + "l2=0.0101 f=-0.388 shape=(1, 9000, 1)
logits [[ 1.1136165 -0.9895566  1.1158309 -2.7934196]]
Iteration 800 of 1000: loss=0.00932 " + "l1=9.66e-05" + "l2=0.00923 f=-0.39 shape=(1, 9000, 1)
logits [[ 1.1185143 -0.993357   1.1175479 -2.801097 ]]
Iteration 900 of 1000: loss=0.00867 " + "l1=0" + "l2=0.00867 f=-0.391 shape=(1, 9000, 1)
logits [[ 1.1161156 -0.9962078  1.1200048 -2.8030899]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0229 " + "l1=0.0229" + "l2=0 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.5400536 -1.0963825  1.1228063 -3.066904 ]]
Iteration 100 of 1000: loss=0.0186 " + "l1=0.016" + "l2=0.00253 f=-0.376 shape=(1, 9000, 1)
logits [[ 1.4149994 -1.0754294  1.1235546 -2.9670157]]
Iteration 200 of 1000: loss=0.0172 " + "l1=0.014" + "l2=0.00325 f=-0.377 shape=(1, 9000, 1)
logits [[ 1.3784186 -1.0685318  1.1244776 -2.9408767]]
Iteration 300 of 1000: loss=0.0161 " + "l1=0.0121" + "l2=0.00401 f=-0.378 shape=(1, 9000, 1)
logits [[ 1.3436117 -1.0603763  1.1242217 -2.9176636]]
Iteration 400 of 1000: loss=0.015 " + "l1=0.0103" + "l2=0.0047 f=-0.378 shape=(1, 9000, 1)
logits [[ 1.3111879 -1.051878   1.1235527 -2.89685  ]]
Iteration 500 of 1000: loss=0.0141 " + "l1=0.00877" + "l2=0.00532 f=-0.38 shape=(1, 9000, 1)
logits [[ 1.2817386 -1.0429894  1.1223584 -2.879682 ]]
Iteration 600 of 1000: loss=0.0133 " + "l1=0.00735" + "l2=0.00597 f=-0.381 shape=(1, 9000, 1)
logits [[ 1.2554911 -1.0356885  1.1217755 -2.8647318]]
Iteration 700 of 1000: loss=0.0126 " + "l1=0.00599" + "l2=0.0066 f=-0.382 shape=(1, 9000, 1)
logits [[ 1.2298009 -1.028327   1.1208642 -2.8500867]]
Iteration 800 of 1000: loss=0.0118 " + "l1=0.00445" + "l2=0.0073 f=-0.384 shape=(1, 9000, 1)
logits [[ 1.2005014 -1.0193957  1.1195247 -2.8346364]]
Iteration 900 of 1000: loss=0.0108 " + "l1=0.00269" + "l2=0.00811 f=-0.386 shape=(1, 9000, 1)
logits [[ 1.1666428 -1.0087079  1.1178205 -2.8180509]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0323 " + "l1=0.0323" + "l2=0 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.5400536 -1.0963825  1.1228063 -3.066904 ]]
Iteration 100 of 1000: loss=0.0237 " + "l1=0.0189" + "l2=0.0048 f=-0.376 shape=(1, 9000, 1)
logits [[ 1.3682036 -1.0671902  1.1238341 -2.9290137]]
Iteration 200 of 1000: loss=0.0208 " + "l1=0.0142" + "l2=0.00657 f=-0.377 shape=(1, 9000, 1)
logits [[ 1.3073367 -1.0538467  1.123752  -2.8860538]]
Iteration 300 of 1000: loss=0.0183 " + "l1=0.00991" + "l2=0.00835 f=-0.378 shape=(1, 9000, 1)
logits [[ 1.2509335 -1.0384462  1.1230752 -2.8491652]]
Iteration 400 of 1000: loss=0.016 " + "l1=0.00551" + "l2=0.0105 f=-0.38 shape=(1, 9000, 1)
logits [[ 1.1930773 -1.019362   1.1219856 -2.8165529]]
Iteration 500 of 1000: loss=0.0136 " + "l1=0.00145" + "l2=0.0121 f=-0.383 shape=(1, 9000, 1)
logits [[ 1.1360396  -0.99810964  1.1173472  -2.7864223 ]]
Iteration 600 of 1000: loss=0.0116 " + "l1=0" + "l2=0.0116 f=-0.385 shape=(1, 9000, 1)
logits [[ 1.115024   -0.99051136  1.1161042  -2.7821565 ]]
Iteration 700 of 1000: loss=0.0105 " + "l1=1.63e-05" + "l2=0.0105 f=-0.387 shape=(1, 9000, 1)
logits [[ 1.1162974 -0.99084    1.1160866 -2.7906926]]
Iteration 800 of 1000: loss=0.00995 " + "l1=0.000256" + "l2=0.00969 f=-0.389 shape=(1, 9000, 1)
logits [[ 1.1203812 -0.9933781  1.1170815 -2.7987874]]
Iteration 900 of 1000: loss=0.00921 " + "l1=2.26e-06" + "l2=0.00921 f=-0.39 shape=(1, 9000, 1)
logits [[ 1.1191535 -0.9963295  1.1191243 -2.801944 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0276 " + "l1=0.0276" + "l2=0 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.5400536 -1.0963825  1.1228063 -3.066904 ]]
Iteration 100 of 1000: loss=0.0213 " + "l1=0.0178" + "l2=0.00355 f=-0.376 shape=(1, 9000, 1)
logits [[ 1.3923361 -1.0712814  1.1236916 -2.9488876]]
Iteration 200 of 1000: loss=0.0193 " + "l1=0.0145" + "l2=0.00475 f=-0.377 shape=(1, 9000, 1)
logits [[ 1.3440117 -1.0617963  1.1245587 -2.914619 ]]
Iteration 300 of 1000: loss=0.0175 " + "l1=0.0117" + "l2=0.00587 f=-0.378 shape=(1, 9000, 1)
logits [[ 1.3005384 -1.051255   1.1242871 -2.8856604]]
Iteration 400 of 1000: loss=0.016 " + "l1=0.00904" + "l2=0.00693 f=-0.379 shape=(1, 9000, 1)
logits [[ 1.2592037 -1.0388709  1.1227584 -2.8602571]]
Iteration 500 of 1000: loss=0.0146 " + "l1=0.00653" + "l2=0.00812 f=-0.381 shape=(1, 9000, 1)
logits [[ 1.2204113 -1.0280449  1.1218482 -2.836497 ]]
Iteration 600 of 1000: loss=0.0131 " + "l1=0.00348" + "l2=0.0096 f=-0.383 shape=(1, 9000, 1)
logits [[ 1.1708578 -1.0096638  1.118283  -2.8112357]]
Iteration 700 of 1000: loss=0.0115 " + "l1=0.000741" + "l2=0.0107 f=-0.385 shape=(1, 9000, 1)
logits [[ 1.128956   -0.99661404  1.1177644  -2.7915258 ]]
Iteration 800 of 1000: loss=0.0102 " + "l1=9.06e-05" + "l2=0.0101 f=-0.387 shape=(1, 9000, 1)
logits [[ 1.11938    -0.99400157  1.118012   -2.7928874 ]]
Iteration 900 of 1000: loss=0.00942 " + "l1=4.7e-05" + "l2=0.00937 f=-0.389 shape=(1, 9000, 1)
logits [[ 1.1197743  -0.99605864  1.1190647  -2.7983186 ]]
--- 279.0936164855957 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0461 " + "l1=0.0461" + "l2=0 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.5400536 -1.0963825  1.1228063 -3.066904 ]]
Iteration 100 of 1000: loss=0.0451 " + "l1=0.0444" + "l2=0.000627 f=-0.372 shape=(1, 9000, 1)
logits [[ 1.4638923 -1.0610952  1.0902773 -2.9803503]]
Iteration 200 of 1000: loss=0.0448 " + "l1=0.0441" + "l2=0.000703 f=-0.371 shape=(1, 9000, 1)
logits [[ 1.4480597 -1.0523089  1.082929  -2.9634478]]
Iteration 300 of 1000: loss=0.0446 " + "l1=0.0437" + "l2=0.000853 f=-0.37 shape=(1, 9000, 1)
logits [[ 1.4306338 -1.0424086  1.0744494 -2.9441826]]
Iteration 400 of 1000: loss=0.0444 " + "l1=0.0434" + "l2=0.00103 f=-0.37 shape=(1, 9000, 1)
logits [[ 1.4141624 -1.0332196  1.0662996 -2.9255743]]
Iteration 500 of 1000: loss=0.0443 " + "l1=0.0431" + "l2=0.00118 f=-0.369 shape=(1, 9000, 1)
logits [[ 1.3993107 -1.0252465  1.0590186 -2.9082272]]
Iteration 600 of 1000: loss=0.0441 " + "l1=0.0428" + "l2=0.00136 f=-0.368 shape=(1, 9000, 1)
logits [[ 1.3858255 -1.0182071  1.0525213 -2.8923602]]
Iteration 700 of 1000: loss=0.0441 " + "l1=0.0425" + "l2=0.00154 f=-0.367 shape=(1, 9000, 1)
logits [[ 1.3735905 -1.0121927  1.0468512 -2.8774629]]
Iteration 800 of 1000: loss=0.044 " + "l1=0.0422" + "l2=0.00174 f=-0.366 shape=(1, 9000, 1)
logits [[ 1.3620296 -1.0057412  1.0408329 -2.8623643]]
Iteration 900 of 1000: loss=0.0439 " + "l1=0.042" + "l2=0.00194 f=-0.365 shape=(1, 9000, 1)
logits [[ 1.3513703 -1.000117   1.0354543 -2.8486364]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.461 " + "l1=0.461" + "l2=0 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.5400536 -1.0963825  1.1228063 -3.066904 ]]
Iteration 100 of 1000: loss=0.364 " + "l1=0.316" + "l2=0.0479 f=-0.349 shape=(1, 9000, 1)
logits [[ 0.8384051  -0.7461072   0.83591104 -2.3250499 ]]
Iteration 200 of 1000: loss=0.338 " + "l1=0.288" + "l2=0.05 f=-0.344 shape=(1, 9000, 1)
logits [[ 0.7070025 -0.614392   0.708217  -2.176332 ]]
Iteration 300 of 1000: loss=0.321 " + "l1=0.264" + "l2=0.0574 f=-0.339 shape=(1, 9000, 1)
logits [[ 0.5954155  -0.52237254  0.60413134 -2.03403   ]]
Iteration 400 of 1000: loss=0.308 " + "l1=0.246" + "l2=0.0616 f=-0.331 shape=(1, 9000, 1)
logits [[ 0.53676647 -0.48575705  0.54202193 -1.9177186 ]]
Iteration 500 of 1000: loss=0.296 " + "l1=0.229" + "l2=0.0676 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.45997325 -0.4582786   0.4930651  -1.7924334 ]]
Iteration 600 of 1000: loss=0.285 " + "l1=0.211" + "l2=0.074 f=-0.317 shape=(1, 9000, 1)
logits [[ 0.38912922 -0.4476269   0.45119852 -1.6588708 ]]
Iteration 700 of 1000: loss=0.271 " + "l1=0.192" + "l2=0.0797 f=-0.308 shape=(1, 9000, 1)
logits [[ 0.29670253 -0.43036616  0.40810627 -1.507307  ]]
Iteration 800 of 1000: loss=0.255 " + "l1=0.172" + "l2=0.0828 f=-0.302 shape=(1, 9000, 1)
logits [[ 0.1986105  -0.40622705  0.3603103  -1.3597211 ]]
Iteration 900 of 1000: loss=0.242 " + "l1=0.158" + "l2=0.0837 f=-0.294 shape=(1, 9000, 1)
logits [[ 0.13962086 -0.3971346   0.3298656  -1.2493219 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.61 " + "l1=4.61" + "l2=0 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.5400536 -1.0963825  1.1228063 -3.066904 ]]
Iteration 100 of 1000: loss=0.811 " + "l1=0.00769" + "l2=0.803 f=-0.304 shape=(1, 9000, 1)
logits [[-0.7442603  -0.17423074 -0.1446206  -0.15230915]]
Iteration 200 of 1000: loss=0.573 " + "l1=0.00316" + "l2=0.57 f=-0.282 shape=(1, 9000, 1)
logits [[-0.64857906 -0.22810353 -0.12487641 -0.12803781]]
Iteration 300 of 1000: loss=0.478 " + "l1=0.0071" + "l2=0.471 f=-0.275 shape=(1, 9000, 1)
logits [[-0.5828026  -0.27967164 -0.1146882  -0.12178461]]
Iteration 400 of 1000: loss=0.419 " + "l1=0" + "l2=0.419 f=-0.271 shape=(1, 9000, 1)
logits [[-0.56099486 -0.30975658 -0.11969946 -0.09288851]]
Iteration 500 of 1000: loss=0.372 " + "l1=0" + "l2=0.372 f=-0.267 shape=(1, 9000, 1)
logits [[-0.5157117  -0.33515158 -0.11142176 -0.10442983]]
Iteration 600 of 1000: loss=0.35 " + "l1=0" + "l2=0.35 f=-0.262 shape=(1, 9000, 1)
logits [[-0.50957817 -0.36086574 -0.11413532 -0.06353587]]
Iteration 700 of 1000: loss=0.315 " + "l1=0" + "l2=0.315 f=-0.256 shape=(1, 9000, 1)
logits [[-0.44605812 -0.39583772 -0.09256481 -0.08923756]]
Iteration 800 of 1000: loss=0.299 " + "l1=0.007" + "l2=0.292 f=-0.25 shape=(1, 9000, 1)
logits [[-0.4059356  -0.44155806 -0.07205588 -0.07905333]]
Iteration 900 of 1000: loss=0.272 " + "l1=0" + "l2=0.272 f=-0.244 shape=(1, 9000, 1)
logits [[-0.37979677 -0.47190464 -0.06311508 -0.06121288]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.53 " + "l1=2.53" + "l2=0 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.5400536 -1.0963825  1.1228063 -3.066904 ]]
Iteration 100 of 1000: loss=0.84 " + "l1=0.149" + "l2=0.691 f=-0.309 shape=(1, 9000, 1)
logits [[-0.620643   -0.13935839 -0.1014516  -0.3728972 ]]
Iteration 200 of 1000: loss=0.496 " + "l1=0.00388" + "l2=0.492 f=-0.285 shape=(1, 9000, 1)
logits [[-0.6699291  -0.22308822 -0.12007677 -0.12713507]]
Iteration 300 of 1000: loss=0.406 " + "l1=0.00583" + "l2=0.4 f=-0.278 shape=(1, 9000, 1)
logits [[-0.60808843 -0.28491858 -0.10360251 -0.11419353]]
Iteration 400 of 1000: loss=0.355 " + "l1=0" + "l2=0.355 f=-0.271 shape=(1, 9000, 1)
logits [[-0.56311774 -0.32621482 -0.10671902 -0.08782645]]
Iteration 500 of 1000: loss=0.324 " + "l1=0.013" + "l2=0.311 f=-0.264 shape=(1, 9000, 1)
logits [[-0.49565318 -0.36339262 -0.08712806 -0.11080784]]
Iteration 600 of 1000: loss=0.289 " + "l1=0" + "l2=0.289 f=-0.259 shape=(1, 9000, 1)
logits [[-0.47791827 -0.39974698 -0.08589324 -0.07210802]]
Iteration 700 of 1000: loss=0.269 " + "l1=0" + "l2=0.269 f=-0.254 shape=(1, 9000, 1)
logits [[-0.4632958  -0.4299376  -0.07937061 -0.04398615]]
Iteration 800 of 1000: loss=0.244 " + "l1=0" + "l2=0.244 f=-0.251 shape=(1, 9000, 1)
logits [[-0.42871228 -0.46150094 -0.05927641 -0.05491076]]
Iteration 900 of 1000: loss=0.228 " + "l1=0.00146" + "l2=0.227 f=-0.248 shape=(1, 9000, 1)
logits [[-0.41537955 -0.48437867 -0.04466042 -0.04732293]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.5 " + "l1=1.5" + "l2=0 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.5400536 -1.0963825  1.1228063 -3.066904 ]]
Iteration 100 of 1000: loss=0.785 " + "l1=0.498" + "l2=0.288 f=-0.331 shape=(1, 9000, 1)
logits [[ 0.06380225 -0.3019415   0.22190735 -1.3096181 ]]
Iteration 200 of 1000: loss=0.552 " + "l1=0.153" + "l2=0.399 f=-0.294 shape=(1, 9000, 1)
logits [[-0.47488877 -0.14521232 -0.04274926 -0.51381224]]
Iteration 300 of 1000: loss=0.388 " + "l1=0.00273" + "l2=0.385 f=-0.271 shape=(1, 9000, 1)
logits [[-0.61035705 -0.2441458  -0.11035522 -0.11875225]]
Iteration 400 of 1000: loss=0.319 " + "l1=0" + "l2=0.319 f=-0.267 shape=(1, 9000, 1)
logits [[-0.56002104 -0.2990802  -0.104802   -0.10236564]]
Iteration 500 of 1000: loss=0.275 " + "l1=0" + "l2=0.275 f=-0.266 shape=(1, 9000, 1)
logits [[-0.53637993 -0.32700238 -0.1006387  -0.10013681]]
Iteration 600 of 1000: loss=0.251 " + "l1=0" + "l2=0.251 f=-0.263 shape=(1, 9000, 1)
logits [[-0.525549   -0.3505051  -0.10065911 -0.07576243]]
Iteration 700 of 1000: loss=0.227 " + "l1=0" + "l2=0.227 f=-0.259 shape=(1, 9000, 1)
logits [[-0.49509713 -0.39580566 -0.07338104 -0.0697372 ]]
Iteration 800 of 1000: loss=0.213 " + "l1=0" + "l2=0.213 f=-0.255 shape=(1, 9000, 1)
logits [[-0.50439274 -0.41381046 -0.06532452 -0.03806613]]
Iteration 900 of 1000: loss=0.195 " + "l1=0" + "l2=0.195 f=-0.252 shape=(1, 9000, 1)
logits [[-0.48145688 -0.4357044  -0.04550172 -0.04400431]]
--- 304.5360658168793 seconds ---
Adv result:3
Loading record A02375
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0442 " + "l1=0.0442" + "l2=0 f=-0.37 shape=(1, 9000, 1)
logits [[ 2.1379616 -2.282771   1.6986641 -3.0347764]]
Iteration 100 of 1000: loss=0.0438 " + "l1=0.0436" + "l2=0.000225 f=-0.37 shape=(1, 9000, 1)
logits [[ 2.10047   -2.2609515  1.6756066 -2.9936852]]
Iteration 200 of 1000: loss=0.0437 " + "l1=0.0435" + "l2=0.000221 f=-0.37 shape=(1, 9000, 1)
logits [[ 2.0939941 -2.2564118  1.6703578 -2.9865842]]
Iteration 300 of 1000: loss=0.0437 " + "l1=0.0434" + "l2=0.000301 f=-0.37 shape=(1, 9000, 1)
logits [[ 2.0852525 -2.2507832  1.6639094 -2.9769177]]
Iteration 400 of 1000: loss=0.0436 " + "l1=0.0432" + "l2=0.000354 f=-0.37 shape=(1, 9000, 1)
logits [[ 2.0758097 -2.2446117  1.6570524 -2.966719 ]]
Iteration 500 of 1000: loss=0.0435 " + "l1=0.0431" + "l2=0.000415 f=-0.369 shape=(1, 9000, 1)
logits [[ 2.0668504 -2.238472   1.6502745 -2.9563336]]
Iteration 600 of 1000: loss=0.0435 " + "l1=0.0429" + "l2=0.000562 f=-0.369 shape=(1, 9000, 1)
logits [[ 2.0577257 -2.2323601  1.6435909 -2.945394 ]]
Iteration 700 of 1000: loss=0.0434 " + "l1=0.0427" + "l2=0.000631 f=-0.369 shape=(1, 9000, 1)
logits [[ 2.0480566 -2.2261932  1.6364968 -2.9335139]]
Iteration 800 of 1000: loss=0.0434 " + "l1=0.0426" + "l2=0.000806 f=-0.368 shape=(1, 9000, 1)
logits [[ 2.0384917 -2.2198725  1.6295196 -2.921693 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.442 " + "l1=0.442" + "l2=0 f=-0.37 shape=(1, 9000, 1)
logits [[ 2.1379616 -2.282771   1.6986641 -3.0347764]]
Iteration 100 of 1000: loss=0.411 " + "l1=0.396" + "l2=0.0149 f=-0.366 shape=(1, 9000, 1)
logits [[ 1.8547032 -2.108498   1.5215386 -2.7326488]]
Iteration 200 of 1000: loss=0.396 " + "l1=0.375" + "l2=0.0207 f=-0.364 shape=(1, 9000, 1)
logits [[ 1.724515  -2.027687   1.4366947 -2.5879712]]
Iteration 300 of 1000: loss=0.379 " + "l1=0.353" + "l2=0.0255 f=-0.359 shape=(1, 9000, 1)
logits [[ 1.5905629 -1.9403247  1.3477595 -2.4334905]]
Iteration 400 of 1000: loss=0.361 " + "l1=0.327" + "l2=0.0337 f=-0.355 shape=(1, 9000, 1)
logits [[ 1.4277458 -1.8414491  1.2442194 -2.2500198]]
Iteration 500 of 1000: loss=0.34 " + "l1=0.297" + "l2=0.0427 f=-0.349 shape=(1, 9000, 1)
logits [[ 1.2484515 -1.7242967  1.1352571 -2.0560033]]
Iteration 600 of 1000: loss=0.323 " + "l1=0.275" + "l2=0.0488 f=-0.343 shape=(1, 9000, 1)
logits [[ 1.1087387 -1.6378303  1.0521387 -1.8941085]]
Iteration 700 of 1000: loss=0.31 " + "l1=0.258" + "l2=0.0525 f=-0.336 shape=(1, 9000, 1)
logits [[ 1.0042044  -1.5746272   0.99903005 -1.7731296 ]]
Iteration 800 of 1000: loss=0.3 " + "l1=0.247" + "l2=0.0524 f=-0.33 shape=(1, 9000, 1)
logits [[ 0.9523967  -1.519092    0.95218384 -1.7044729 ]]
Iteration 900 of 1000: loss=0.29 " + "l1=0.239" + "l2=0.0511 f=-0.323 shape=(1, 9000, 1)
logits [[ 0.9164625 -1.4767855  0.9149561 -1.6479352]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.42 " + "l1=4.42" + "l2=0 f=-0.37 shape=(1, 9000, 1)
logits [[ 2.1379616 -2.282771   1.6986641 -3.0347764]]
Iteration 100 of 1000: loss=2.16 " + "l1=1.29" + "l2=0.864 f=-0.242 shape=(1, 9000, 1)
logits [[ 0.41689417 -0.86169285  0.42959467 -0.9513774 ]]
Iteration 200 of 1000: loss=1.5 " + "l1=0.573" + "l2=0.93 f=-0.244 shape=(1, 9000, 1)
logits [[ 0.04920217 -0.51666963  0.05666742 -0.5648846 ]]
Iteration 300 of 1000: loss=1.04 " + "l1=0.174" + "l2=0.869 f=-0.328 shape=(1, 9000, 1)
logits [[-0.19442314 -0.323279   -0.1489182  -0.6452195 ]]
Iteration 400 of 1000: loss=0.819 " + "l1=0.0104" + "l2=0.808 f=-0.361 shape=(1, 9000, 1)
logits [[-0.3288448  -0.24209847 -0.23168656 -0.64141506]]
Iteration 500 of 1000: loss=0.735 " + "l1=0.00246" + "l2=0.732 f=-0.376 shape=(1, 9000, 1)
logits [[-0.358369   -0.24676801 -0.24430701 -0.6531043 ]]
Iteration 600 of 1000: loss=0.686 " + "l1=0.00444" + "l2=0.682 f=-0.378 shape=(1, 9000, 1)
logits [[-0.36301735 -0.25571844 -0.25127375 -0.6407134 ]]
Iteration 700 of 1000: loss=0.653 " + "l1=0" + "l2=0.653 f=-0.379 shape=(1, 9000, 1)
logits [[-0.3780568  -0.26350582 -0.26355806 -0.6118327 ]]
Iteration 800 of 1000: loss=0.635 " + "l1=0" + "l2=0.635 f=-0.378 shape=(1, 9000, 1)
logits [[-0.39357328 -0.26442227 -0.26924872 -0.5829013 ]]
Iteration 900 of 1000: loss=0.617 " + "l1=0" + "l2=0.617 f=-0.374 shape=(1, 9000, 1)
logits [[-0.39564615 -0.2648409  -0.27361575 -0.56268924]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.43 " + "l1=2.43" + "l2=0 f=-0.37 shape=(1, 9000, 1)
logits [[ 2.1379616 -2.282771   1.6986641 -3.0347764]]
Iteration 100 of 1000: loss=1.54 " + "l1=1.17" + "l2=0.36 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.8066773 -1.3271052  0.8086395 -1.5532482]]
Iteration 200 of 1000: loss=1.24 " + "l1=0.887" + "l2=0.351 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.5452721 -1.0635464  0.5500314 -1.2486472]]
Iteration 300 of 1000: loss=1.05 " + "l1=0.643" + "l2=0.405 f=-0.306 shape=(1, 9000, 1)
logits [[ 0.32133216 -0.8468442   0.32226342 -1.0201987 ]]
Iteration 400 of 1000: loss=0.884 " + "l1=0.418" + "l2=0.466 f=-0.329 shape=(1, 9000, 1)
logits [[ 0.10967433 -0.6395457   0.12000188 -0.9049581 ]]
Iteration 500 of 1000: loss=0.763 " + "l1=0.307" + "l2=0.455 f=-0.336 shape=(1, 9000, 1)
logits [[-0.00575776 -0.54887044  0.01005766 -0.79968035]]
Iteration 600 of 1000: loss=0.664 " + "l1=0.196" + "l2=0.468 f=-0.346 shape=(1, 9000, 1)
logits [[-0.09891059 -0.43751988 -0.08058839 -0.76747185]]
Iteration 700 of 1000: loss=0.618 " + "l1=0.14" + "l2=0.478 f=-0.347 shape=(1, 9000, 1)
logits [[-0.17077821 -0.3897624  -0.13490483 -0.69355696]]
Iteration 800 of 1000: loss=0.579 " + "l1=0.073" + "l2=0.506 f=-0.352 shape=(1, 9000, 1)
logits [[-0.27556637 -0.3262816  -0.19348961 -0.61381716]]
Iteration 900 of 1000: loss=0.554 " + "l1=0.039" + "l2=0.515 f=-0.353 shape=(1, 9000, 1)
logits [[-0.3217689  -0.29373202 -0.22281574 -0.5722368 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.43 " + "l1=3.43" + "l2=0 f=-0.37 shape=(1, 9000, 1)
logits [[ 2.1379616 -2.282771   1.6986641 -3.0347764]]
Iteration 100 of 1000: loss=1.9 " + "l1=1.31" + "l2=0.585 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.6069708  -1.0888766   0.60379165 -1.2684761 ]]
Iteration 200 of 1000: loss=1.45 " + "l1=0.86" + "l2=0.591 f=-0.27 shape=(1, 9000, 1)
logits [[ 0.3198548  -0.79008496  0.31315365 -0.9244525 ]]
Iteration 300 of 1000: loss=1.11 " + "l1=0.426" + "l2=0.681 f=-0.318 shape=(1, 9000, 1)
logits [[ 0.01732487 -0.5192538   0.0307539  -0.79963356]]
Iteration 400 of 1000: loss=0.91 " + "l1=0.218" + "l2=0.692 f=-0.345 shape=(1, 9000, 1)
logits [[-0.14782442 -0.38673714 -0.10568105 -0.74015003]]
Iteration 500 of 1000: loss=0.757 " + "l1=0.0642" + "l2=0.693 f=-0.37 shape=(1, 9000, 1)
logits [[-0.29186508 -0.28168598 -0.19885819 -0.705619  ]]
Iteration 600 of 1000: loss=0.667 " + "l1=0.0091" + "l2=0.658 f=-0.375 shape=(1, 9000, 1)
logits [[-0.36168292 -0.25607437 -0.24433301 -0.6365994 ]]
Iteration 700 of 1000: loss=0.6 " + "l1=0.000525" + "l2=0.6 f=-0.369 shape=(1, 9000, 1)
logits [[-0.3826866  -0.2570184  -0.25634158 -0.58193725]]
Iteration 800 of 1000: loss=0.569 " + "l1=0.00674" + "l2=0.562 f=-0.363 shape=(1, 9000, 1)
logits [[-0.3774908  -0.26436055 -0.255665   -0.5539538 ]]
Iteration 900 of 1000: loss=0.542 " + "l1=0" + "l2=0.542 f=-0.362 shape=(1, 9000, 1)
logits [[-0.38456774 -0.2609282  -0.26151156 -0.5408409 ]]
--- 294.6533010005951 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00439 " + "l1=0.00439" + "l2=0 f=-0.37 shape=(1, 9000, 1)
logits [[ 2.1379616 -2.282771   1.6986641 -3.0347764]]
Iteration 100 of 1000: loss=0.00426 " + "l1=0.00413" + "l2=0.000127 f=-0.371 shape=(1, 9000, 1)
logits [[ 2.1156945 -2.2868233  1.7027986 -3.013728 ]]
Iteration 200 of 1000: loss=0.00421 " + "l1=0.00411" + "l2=0.000106 f=-0.371 shape=(1, 9000, 1)
logits [[ 2.1142774 -2.2875865  1.7035545 -3.012248 ]]
Iteration 300 of 1000: loss=0.0042 " + "l1=0.00406" + "l2=0.000141 f=-0.371 shape=(1, 9000, 1)
logits [[ 2.1111553 -2.2889664  1.7048606 -3.0092995]]
Iteration 400 of 1000: loss=0.00419 " + "l1=0.00401" + "l2=0.000181 f=-0.371 shape=(1, 9000, 1)
logits [[ 2.1076024 -2.2904572  1.7062649 -3.0059986]]
Iteration 500 of 1000: loss=0.00418 " + "l1=0.00396" + "l2=0.000217 f=-0.371 shape=(1, 9000, 1)
logits [[ 2.1039858 -2.2919257  1.7076371 -3.0026908]]
Iteration 600 of 1000: loss=0.00424 " + "l1=0.00391" + "l2=0.000327 f=-0.371 shape=(1, 9000, 1)
logits [[ 2.1003172 -2.2933326  1.7089248 -2.9993107]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0439 " + "l1=0.0439" + "l2=0 f=-0.37 shape=(1, 9000, 1)
logits [[ 2.1379616 -2.282771   1.6986641 -3.0347764]]
Iteration 100 of 1000: loss=0.0315 " + "l1=0.025" + "l2=0.00653 f=-0.373 shape=(1, 9000, 1)
logits [[ 1.9904289 -2.3227282  1.7408401 -2.8990467]]
Iteration 200 of 1000: loss=0.0257 " + "l1=0.0173" + "l2=0.0084 f=-0.376 shape=(1, 9000, 1)
logits [[ 1.9377054 -2.347795   1.7644738 -2.8565862]]
Iteration 300 of 1000: loss=0.0199 " + "l1=0.00895" + "l2=0.011 f=-0.379 shape=(1, 9000, 1)
logits [[ 1.8839209 -2.3792024  1.7944318 -2.8146143]]
Iteration 400 of 1000: loss=0.0148 " + "l1=0.00185" + "l2=0.0129 f=-0.381 shape=(1, 9000, 1)
logits [[ 1.8356622 -2.4032412  1.8171784 -2.7746134]]
Iteration 500 of 1000: loss=0.0111 " + "l1=3.64e-05" + "l2=0.011 f=-0.382 shape=(1, 9000, 1)
logits [[ 1.8239672 -2.4099586  1.8236028 -2.7658756]]
Iteration 600 of 1000: loss=0.00898 " + "l1=6.58e-05" + "l2=0.00891 f=-0.382 shape=(1, 9000, 1)
logits [[ 1.8254856 -2.4100447  1.824828  -2.768365 ]]
Iteration 700 of 1000: loss=0.00759 " + "l1=0" + "l2=0.00759 f=-0.382 shape=(1, 9000, 1)
logits [[ 1.8236554 -2.4078953  1.8237941 -2.7673404]]
Iteration 800 of 1000: loss=0.00665 " + "l1=0" + "l2=0.00665 f=-0.382 shape=(1, 9000, 1)
logits [[ 1.822235  -2.4063597  1.8236355 -2.767055 ]]
Iteration 900 of 1000: loss=0.00581 " + "l1=0" + "l2=0.00581 f=-0.382 shape=(1, 9000, 1)
logits [[ 1.8199054 -2.4040754  1.8225964 -2.765439 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0242 " + "l1=0.0242" + "l2=0 f=-0.37 shape=(1, 9000, 1)
logits [[ 2.1379616 -2.282771   1.6986641 -3.0347764]]
Iteration 100 of 1000: loss=0.0204 " + "l1=0.0183" + "l2=0.00202 f=-0.371 shape=(1, 9000, 1)
logits [[ 2.0538762 -2.3028805  1.7202588 -2.9562197]]
Iteration 200 of 1000: loss=0.0188 " + "l1=0.0161" + "l2=0.00266 f=-0.372 shape=(1, 9000, 1)
logits [[ 2.0255566 -2.3144405  1.732368  -2.9298916]]
Iteration 300 of 1000: loss=0.0172 " + "l1=0.0139" + "l2=0.00334 f=-0.372 shape=(1, 9000, 1)
logits [[ 1.9965177 -2.3267803  1.7445295 -2.9040778]]
Iteration 400 of 1000: loss=0.0157 " + "l1=0.0117" + "l2=0.00405 f=-0.374 shape=(1, 9000, 1)
logits [[ 1.9698586 -2.3414228  1.7577859 -2.8818636]]
Iteration 500 of 1000: loss=0.0142 " + "l1=0.00962" + "l2=0.00457 f=-0.376 shape=(1, 9000, 1)
logits [[ 1.9460285 -2.3548076  1.771163  -2.8655698]]
Iteration 600 of 1000: loss=0.0128 " + "l1=0.00768" + "l2=0.00515 f=-0.377 shape=(1, 9000, 1)
logits [[ 1.9231229 -2.3663144  1.7834762 -2.8474731]]
Iteration 700 of 1000: loss=0.0114 " + "l1=0.00586" + "l2=0.00554 f=-0.378 shape=(1, 9000, 1)
logits [[ 1.9006697 -2.3766518  1.7940457 -2.8299675]]
Iteration 800 of 1000: loss=0.0101 " + "l1=0.00415" + "l2=0.00592 f=-0.379 shape=(1, 9000, 1)
logits [[ 1.8777455 -2.3845932  1.8023077 -2.8116128]]
Iteration 900 of 1000: loss=0.00869 " + "l1=0.00234" + "l2=0.00635 f=-0.38 shape=(1, 9000, 1)
logits [[ 1.8525196 -2.3909736  1.8100195 -2.7906184]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.034 " + "l1=0.034" + "l2=0 f=-0.37 shape=(1, 9000, 1)
logits [[ 2.1379616 -2.282771   1.6986641 -3.0347764]]
Iteration 100 of 1000: loss=0.0266 " + "l1=0.0226" + "l2=0.00396 f=-0.372 shape=(1, 9000, 1)
logits [[ 2.0224724 -2.3127396  1.7303869 -2.9276402]]
Iteration 200 of 1000: loss=0.0232 " + "l1=0.0179" + "l2=0.0053 f=-0.373 shape=(1, 9000, 1)
logits [[ 1.9787863 -2.330096   1.7480025 -2.888356 ]]
Iteration 300 of 1000: loss=0.0199 " + "l1=0.0135" + "l2=0.00641 f=-0.376 shape=(1, 9000, 1)
logits [[ 1.9417709 -2.3509164  1.7671528 -2.8608327]]
Iteration 400 of 1000: loss=0.0168 " + "l1=0.00906" + "l2=0.00772 f=-0.378 shape=(1, 9000, 1)
logits [[ 1.9049854 -2.3732128  1.788055  -2.8317556]]
Iteration 500 of 1000: loss=0.0139 " + "l1=0.00508" + "l2=0.00883 f=-0.38 shape=(1, 9000, 1)
logits [[ 1.8700686 -2.390478   1.8044958 -2.8040578]]
Iteration 600 of 1000: loss=0.0111 " + "l1=0.00131" + "l2=0.00982 f=-0.382 shape=(1, 9000, 1)
logits [[ 1.8355703 -2.405384   1.8186108 -2.7756958]]
Iteration 700 of 1000: loss=0.00865 " + "l1=0" + "l2=0.00865 f=-0.382 shape=(1, 9000, 1)
logits [[ 1.8231503 -2.4092648  1.8236144 -2.765633 ]]
Iteration 800 of 1000: loss=0.00746 " + "l1=0" + "l2=0.00746 f=-0.382 shape=(1, 9000, 1)
logits [[ 1.8225662 -2.4064698  1.8225902 -2.7662241]]
Iteration 900 of 1000: loss=0.00638 " + "l1=0" + "l2=0.00638 f=-0.382 shape=(1, 9000, 1)
logits [[ 1.8225361 -2.4047546  1.8227377 -2.7674918]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0291 " + "l1=0.0291" + "l2=0 f=-0.37 shape=(1, 9000, 1)
logits [[ 2.1379616 -2.282771   1.6986641 -3.0347764]]
Iteration 100 of 1000: loss=0.0236 " + "l1=0.0207" + "l2=0.0029 f=-0.372 shape=(1, 9000, 1)
logits [[ 2.0384464 -2.308052   1.7255602 -2.9420662]]
Iteration 200 of 1000: loss=0.0212 " + "l1=0.0173" + "l2=0.00392 f=-0.372 shape=(1, 9000, 1)
logits [[ 2.0014863 -2.3227155  1.7407453 -2.9082847]]
Iteration 300 of 1000: loss=0.0189 " + "l1=0.014" + "l2=0.00482 f=-0.374 shape=(1, 9000, 1)
logits [[ 1.9679317 -2.3393233  1.7561203 -2.8802874]]
Iteration 400 of 1000: loss=0.0166 " + "l1=0.0109" + "l2=0.0057 f=-0.376 shape=(1, 9000, 1)
logits [[ 1.9375836 -2.3577461  1.7736402 -2.8585165]]
Iteration 500 of 1000: loss=0.0144 " + "l1=0.00788" + "l2=0.00653 f=-0.378 shape=(1, 9000, 1)
logits [[ 1.9078015 -2.3731878  1.7889289 -2.8343914]]
Iteration 600 of 1000: loss=0.0124 " + "l1=0.00519" + "l2=0.00723 f=-0.379 shape=(1, 9000, 1)
logits [[ 1.8801788 -2.385924   1.8018336 -2.8127375]]
Iteration 700 of 1000: loss=0.0104 " + "l1=0.00252" + "l2=0.00784 f=-0.38 shape=(1, 9000, 1)
logits [[ 1.8514524 -2.3974712  1.81346   -2.7892232]]
Iteration 800 of 1000: loss=0.00831 " + "l1=0.000109" + "l2=0.0082 f=-0.381 shape=(1, 9000, 1)
logits [[ 1.8240916 -2.4054642  1.8224456 -2.765839 ]]
Iteration 900 of 1000: loss=0.00701 " + "l1=0.000236" + "l2=0.00677 f=-0.381 shape=(1, 9000, 1)
logits [[ 1.8259358 -2.4037004  1.8223697 -2.7683039]]
--- 287.2823305130005 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0517 " + "l1=0.0517" + "l2=0 f=-0.37 shape=(1, 9000, 1)
logits [[ 2.1379616 -2.282771   1.6986641 -3.0347764]]
Iteration 100 of 1000: loss=0.0509 " + "l1=0.0504" + "l2=0.000477 f=-0.369 shape=(1, 9000, 1)
logits [[ 2.0812705 -2.2694585  1.6729865 -2.9592128]]
Iteration 200 of 1000: loss=0.0506 " + "l1=0.0501" + "l2=0.000521 f=-0.368 shape=(1, 9000, 1)
logits [[ 2.0679479 -2.2656832  1.6663377 -2.9423046]]
Iteration 300 of 1000: loss=0.0504 " + "l1=0.0497" + "l2=0.000629 f=-0.368 shape=(1, 9000, 1)
logits [[ 2.0519772 -2.2609372  1.6580561 -2.9220748]]
Iteration 400 of 1000: loss=0.0501 " + "l1=0.0494" + "l2=0.000764 f=-0.368 shape=(1, 9000, 1)
logits [[ 2.0354826 -2.2555737  1.6490935 -2.901016 ]]
Iteration 500 of 1000: loss=0.0499 " + "l1=0.049" + "l2=0.000902 f=-0.368 shape=(1, 9000, 1)
logits [[ 2.0190773 -2.250142   1.6400728 -2.879887 ]]
Iteration 600 of 1000: loss=0.0497 " + "l1=0.0486" + "l2=0.00108 f=-0.367 shape=(1, 9000, 1)
logits [[ 2.0034127 -2.244386   1.6317836 -2.859705 ]]
Iteration 700 of 1000: loss=0.0495 " + "l1=0.0483" + "l2=0.00121 f=-0.367 shape=(1, 9000, 1)
logits [[ 1.9873817 -2.238608   1.6234468 -2.8392508]]
Iteration 800 of 1000: loss=0.0494 " + "l1=0.0479" + "l2=0.00145 f=-0.366 shape=(1, 9000, 1)
logits [[ 1.9719046 -2.2325237  1.6152081 -2.8198102]]
Iteration 900 of 1000: loss=0.0493 " + "l1=0.0476" + "l2=0.0017 f=-0.366 shape=(1, 9000, 1)
logits [[ 1.9562509 -2.22664    1.6073216 -2.7997952]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.517 " + "l1=0.517" + "l2=0 f=-0.37 shape=(1, 9000, 1)
logits [[ 2.1379616 -2.282771   1.6986641 -3.0347764]]
Iteration 100 of 1000: loss=0.443 " + "l1=0.405" + "l2=0.0381 f=-0.358 shape=(1, 9000, 1)
logits [[ 1.6527618 -2.1785388  1.4865611 -2.3941662]]
Iteration 200 of 1000: loss=0.4 " + "l1=0.342" + "l2=0.0572 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.3741374 -2.1037412  1.3666769 -2.0503204]]
Iteration 300 of 1000: loss=0.362 " + "l1=0.306" + "l2=0.0569 f=-0.345 shape=(1, 9000, 1)
logits [[ 1.2233497 -1.9943806  1.2232125 -1.8327552]]
Iteration 400 of 1000: loss=0.336 " + "l1=0.278" + "l2=0.0581 f=-0.339 shape=(1, 9000, 1)
logits [[ 1.1073141 -1.9025015  1.1109576 -1.6702793]]
Iteration 500 of 1000: loss=0.313 " + "l1=0.249" + "l2=0.0647 f=-0.333 shape=(1, 9000, 1)
logits [[ 0.973231  -1.8042878  0.9929672 -1.4937257]]
Iteration 600 of 1000: loss=0.295 " + "l1=0.225" + "l2=0.0703 f=-0.329 shape=(1, 9000, 1)
logits [[ 0.8547852 -1.7400299  0.9095407 -1.342008 ]]
Iteration 700 of 1000: loss=0.281 " + "l1=0.206" + "l2=0.0749 f=-0.323 shape=(1, 9000, 1)
logits [[ 0.7534478 -1.6961852  0.8542525 -1.2018033]]
Iteration 800 of 1000: loss=0.267 " + "l1=0.188" + "l2=0.0796 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.6578348 -1.6602194  0.8086874 -1.069065 ]]
Iteration 900 of 1000: loss=0.255 " + "l1=0.171" + "l2=0.0842 f=-0.308 shape=(1, 9000, 1)
logits [[ 0.5683048  -1.6274563   0.76779985 -0.9411948 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.17 " + "l1=5.17" + "l2=0 f=-0.37 shape=(1, 9000, 1)
logits [[ 2.1379616 -2.282771   1.6986641 -3.0347764]]
Iteration 100 of 1000: loss=1.12 " + "l1=0.0177" + "l2=1.1 f=-0.211 shape=(1, 9000, 1)
logits [[-0.25701055 -1.3564359   0.39350012  0.3758448 ]]
Iteration 200 of 1000: loss=0.776 " + "l1=0" + "l2=0.776 f=-0.219 shape=(1, 9000, 1)
logits [[-0.25742733 -1.344547    0.36237484  0.36301267]]
Iteration 300 of 1000: loss=0.643 " + "l1=0.0247" + "l2=0.618 f=-0.236 shape=(1, 9000, 1)
logits [[-0.24463038 -1.361739    0.34324548  0.31852892]]
Iteration 400 of 1000: loss=0.529 " + "l1=0" + "l2=0.529 f=-0.248 shape=(1, 9000, 1)
logits [[-0.2603602 -1.3781562  0.3213053  0.324166 ]]
Iteration 500 of 1000: loss=0.469 " + "l1=0" + "l2=0.469 f=-0.255 shape=(1, 9000, 1)
logits [[-0.2725463  -1.3817158   0.3018758   0.33050495]]
Iteration 600 of 1000: loss=0.407 " + "l1=0" + "l2=0.407 f=-0.265 shape=(1, 9000, 1)
logits [[-0.2627392 -1.3925837  0.2954444  0.3004329]]
Iteration 700 of 1000: loss=0.374 " + "l1=0" + "l2=0.374 f=-0.273 shape=(1, 9000, 1)
logits [[-0.2812939  -1.4063818   0.28030312  0.31663498]]
Iteration 800 of 1000: loss=0.332 " + "l1=0" + "l2=0.332 f=-0.279 shape=(1, 9000, 1)
logits [[-0.27367386 -1.4250529   0.28553668  0.2973951 ]]
Iteration 900 of 1000: loss=0.316 " + "l1=0" + "l2=0.316 f=-0.279 shape=(1, 9000, 1)
logits [[-0.30533156 -1.4265908   0.27292842  0.34179166]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.85 " + "l1=2.85" + "l2=0 f=-0.37 shape=(1, 9000, 1)
logits [[ 2.1379616 -2.282771   1.6986641 -3.0347764]]
Iteration 100 of 1000: loss=1.19 " + "l1=0.481" + "l2=0.706 f=-0.274 shape=(1, 9000, 1)
logits [[ 0.1636076  -1.563309    0.58857936 -0.2855747 ]]
Iteration 200 of 1000: loss=0.635 " + "l1=0.0064" + "l2=0.629 f=-0.244 shape=(1, 9000, 1)
logits [[-0.26460746 -1.3750365   0.3385551   0.3269116 ]]
Iteration 300 of 1000: loss=0.481 " + "l1=0.0143" + "l2=0.467 f=-0.258 shape=(1, 9000, 1)
logits [[-0.25191492 -1.3820764   0.3138279   0.28780556]]
Iteration 400 of 1000: loss=0.39 " + "l1=0.00571" + "l2=0.385 f=-0.266 shape=(1, 9000, 1)
logits [[-0.26254556 -1.3838421   0.29656094  0.28617966]]
Iteration 500 of 1000: loss=0.337 " + "l1=0.00625" + "l2=0.331 f=-0.271 shape=(1, 9000, 1)
logits [[-0.2612168  -1.3975952   0.2925672   0.28120157]]
Iteration 600 of 1000: loss=0.294 " + "l1=0.00213" + "l2=0.292 f=-0.274 shape=(1, 9000, 1)
logits [[-0.2671675  -1.4018989   0.28837496  0.2845046 ]]
Iteration 700 of 1000: loss=0.265 " + "l1=0" + "l2=0.265 f=-0.272 shape=(1, 9000, 1)
logits [[-0.27840915 -1.3986764   0.28553286  0.3034514 ]]
Iteration 800 of 1000: loss=0.241 " + "l1=0.00146" + "l2=0.239 f=-0.271 shape=(1, 9000, 1)
logits [[-0.26458895 -1.4017158   0.29268703  0.2900292 ]]
Iteration 900 of 1000: loss=0.224 " + "l1=0.00203" + "l2=0.222 f=-0.266 shape=(1, 9000, 1)
logits [[-0.26136062 -1.4017913   0.30080342  0.29711825]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.68 " + "l1=1.68" + "l2=0 f=-0.37 shape=(1, 9000, 1)
logits [[ 2.1379616 -2.282771   1.6986641 -3.0347764]]
Iteration 100 of 1000: loss=0.988 " + "l1=0.708" + "l2=0.28 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.845242  -1.8487395  0.9602578 -1.2195213]]
Iteration 200 of 1000: loss=0.71 " + "l1=0.377" + "l2=0.333 f=-0.297 shape=(1, 9000, 1)
logits [[ 0.3114335 -1.5962853  0.6293232 -0.5311408]]
Iteration 300 of 1000: loss=0.481 " + "l1=0.0677" + "l2=0.414 f=-0.277 shape=(1, 9000, 1)
logits [[-0.17442256 -1.4235953   0.3485506   0.14034027]]
Iteration 400 of 1000: loss=0.343 " + "l1=0.0045" + "l2=0.339 f=-0.269 shape=(1, 9000, 1)
logits [[-0.25949693 -1.3876605   0.29286584  0.2790154 ]]
Iteration 500 of 1000: loss=0.284 " + "l1=7.62e-05" + "l2=0.283 f=-0.265 shape=(1, 9000, 1)
logits [[-0.26093057 -1.3788512   0.28975862  0.28952405]]
Iteration 600 of 1000: loss=0.252 " + "l1=0.00183" + "l2=0.25 f=-0.261 shape=(1, 9000, 1)
logits [[-0.2570537  -1.379706    0.29910558  0.29347473]]
Iteration 700 of 1000: loss=0.228 " + "l1=0" + "l2=0.228 f=-0.257 shape=(1, 9000, 1)
logits [[-0.259232   -1.3798424   0.30643663  0.30648446]]
Iteration 800 of 1000: loss=0.21 " + "l1=0.0013" + "l2=0.209 f=-0.252 shape=(1, 9000, 1)
logits [[-0.2592958 -1.3841633  0.3192493  0.3152467]]
Iteration 900 of 1000: loss=0.196 " + "l1=0.000725" + "l2=0.196 f=-0.249 shape=(1, 9000, 1)
logits [[-0.25932652 -1.3894821   0.32843938  0.3262094 ]]
--- 310.0229980945587 seconds ---
Adv result:3
Loading record A02391
(1, 6592)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0602 " + "l1=0.0602" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 4.682414  -1.3371339  1.498957  -7.11708  ]]
Iteration 100 of 1000: loss=0.0597 " + "l1=0.0595" + "l2=0.000292 f=-0.567 shape=(1, 9000, 1)
logits [[ 4.6398935 -1.3056965  1.4819163 -7.082994 ]]
Iteration 200 of 1000: loss=0.0596 " + "l1=0.0593" + "l2=0.000302 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.633393  -1.2983898  1.4768398 -7.0769033]]
Iteration 300 of 1000: loss=0.0595 " + "l1=0.0592" + "l2=0.000364 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.625213  -1.2902824  1.4714942 -7.0697355]]
Iteration 400 of 1000: loss=0.0594 " + "l1=0.059" + "l2=0.000442 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.6162415 -1.2816502  1.4660846 -7.0622153]]
Iteration 500 of 1000: loss=0.0593 " + "l1=0.0588" + "l2=0.000535 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.6069665 -1.2723907  1.4606807 -7.055003 ]]
Iteration 600 of 1000: loss=0.0593 " + "l1=0.0586" + "l2=0.000698 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.597997  -1.2635738  1.4553657 -7.0481176]]
Iteration 700 of 1000: loss=0.0592 " + "l1=0.0584" + "l2=0.000789 f=-0.564 shape=(1, 9000, 1)
logits [[ 4.588763  -1.2548089  1.4500974 -7.040862 ]]
Iteration 800 of 1000: loss=0.0592 " + "l1=0.0583" + "l2=0.000952 f=-0.564 shape=(1, 9000, 1)
logits [[ 4.579554  -1.2466614  1.4451572 -7.0334153]]
Iteration 900 of 1000: loss=0.0592 " + "l1=0.0581" + "l2=0.00106 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.570115  -1.2389319  1.4404202 -7.0255556]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.602 " + "l1=0.602" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 4.682414  -1.3371339  1.498957  -7.11708  ]]
Iteration 100 of 1000: loss=0.558 " + "l1=0.533" + "l2=0.0247 f=-0.555 shape=(1, 9000, 1)
logits [[ 4.279706  -1.0520267  1.337562  -6.7843075]]
Iteration 200 of 1000: loss=0.536 " + "l1=0.501" + "l2=0.0347 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.0926332 -0.9191876  1.2482587 -6.6373954]]
Iteration 300 of 1000: loss=0.516 " + "l1=0.47" + "l2=0.0452 f=-0.552 shape=(1, 9000, 1)
logits [[ 3.903584   -0.80055904  1.1702195  -6.4805775 ]]
Iteration 400 of 1000: loss=0.494 " + "l1=0.434" + "l2=0.0609 f=-0.548 shape=(1, 9000, 1)
logits [[ 3.679327  -0.6558965  1.0831125 -6.297242 ]]
Iteration 500 of 1000: loss=0.473 " + "l1=0.4" + "l2=0.0725 f=-0.548 shape=(1, 9000, 1)
logits [[ 3.47603   -0.5263841  1.0071985 -6.1498537]]
Iteration 600 of 1000: loss=0.453 " + "l1=0.371" + "l2=0.0816 f=-0.548 shape=(1, 9000, 1)
logits [[ 3.2905    -0.4209924  0.9419664 -6.004968 ]]
Iteration 700 of 1000: loss=0.432 " + "l1=0.339" + "l2=0.0934 f=-0.546 shape=(1, 9000, 1)
logits [[ 3.0632114  -0.32302755  0.8790893  -5.803609  ]]
Iteration 800 of 1000: loss=0.412 " + "l1=0.309" + "l2=0.103 f=-0.541 shape=(1, 9000, 1)
logits [[ 2.8473876  -0.24422075  0.8280307  -5.5938616 ]]
Iteration 900 of 1000: loss=0.392 " + "l1=0.282" + "l2=0.11 f=-0.533 shape=(1, 9000, 1)
logits [[ 2.6552937  -0.16337729  0.79543126 -5.4206095 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.02 " + "l1=6.02" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 4.682414  -1.3371339  1.498957  -7.11708  ]]
Iteration 100 of 1000: loss=1.42 " + "l1=0.0333" + "l2=1.39 f=-0.647 shape=(1, 9000, 1)
logits [[ 0.93564844  0.90233046  0.50356305 -4.92799   ]]
Iteration 200 of 1000: loss=1 " + "l1=0" + "l2=1 f=-0.66 shape=(1, 9000, 1)
logits [[ 0.88357544  0.89565563  0.48901448 -4.906739  ]]
Iteration 300 of 1000: loss=0.859 " + "l1=0.0163" + "l2=0.843 f=-0.652 shape=(1, 9000, 1)
logits [[ 0.8902432   0.87396675  0.4690651  -4.842548  ]]
Iteration 400 of 1000: loss=0.777 " + "l1=0" + "l2=0.777 f=-0.648 shape=(1, 9000, 1)
logits [[ 0.8330339  0.8781387  0.4500811 -4.7550955]]
Iteration 500 of 1000: loss=0.709 " + "l1=0.00885" + "l2=0.7 f=-0.637 shape=(1, 9000, 1)
logits [[ 0.86895204  0.8601007   0.43220943 -4.708333  ]]
Iteration 600 of 1000: loss=0.645 " + "l1=0" + "l2=0.645 f=-0.628 shape=(1, 9000, 1)
logits [[ 0.864349    0.8677145   0.41351244 -4.655787  ]]
Iteration 700 of 1000: loss=0.594 " + "l1=0.000556" + "l2=0.593 f=-0.622 shape=(1, 9000, 1)
logits [[ 0.8621349   0.8615793   0.39676204 -4.6067452 ]]
Iteration 800 of 1000: loss=0.551 " + "l1=0" + "l2=0.551 f=-0.617 shape=(1, 9000, 1)
logits [[ 0.8421584  0.8525326  0.3885444 -4.5518336]]
Iteration 900 of 1000: loss=0.518 " + "l1=0" + "l2=0.518 f=-0.611 shape=(1, 9000, 1)
logits [[ 0.8253774   0.8544351   0.38080737 -4.505892  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.31 " + "l1=3.31" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 4.682414  -1.3371339  1.498957  -7.11708  ]]
Iteration 100 of 1000: loss=1.48 " + "l1=0.347" + "l2=1.14 f=-0.631 shape=(1, 9000, 1)
logits [[ 1.2714723   0.64121795  0.6052169  -5.042493  ]]
Iteration 200 of 1000: loss=0.88 " + "l1=0.00991" + "l2=0.87 f=-0.666 shape=(1, 9000, 1)
logits [[ 0.8780659  0.8600562  0.5133381 -4.914353 ]]
Iteration 300 of 1000: loss=0.73 " + "l1=0.0164" + "l2=0.713 f=-0.65 shape=(1, 9000, 1)
logits [[ 0.879427    0.849606    0.49387854 -4.8234196 ]]
Iteration 400 of 1000: loss=0.636 " + "l1=0" + "l2=0.636 f=-0.639 shape=(1, 9000, 1)
logits [[ 0.8305412   0.8515322   0.46435705 -4.703865  ]]
Iteration 500 of 1000: loss=0.568 " + "l1=0.00583" + "l2=0.562 f=-0.628 shape=(1, 9000, 1)
logits [[ 0.84121287  0.8306195   0.4444944  -4.6296244 ]]
Iteration 600 of 1000: loss=0.519 " + "l1=0" + "l2=0.519 f=-0.619 shape=(1, 9000, 1)
logits [[ 0.8167466   0.83115226  0.4368662  -4.5608773 ]]
Iteration 700 of 1000: loss=0.485 " + "l1=0" + "l2=0.485 f=-0.605 shape=(1, 9000, 1)
logits [[ 0.806797    0.82445216  0.43415698 -4.4834437 ]]
Iteration 800 of 1000: loss=0.459 " + "l1=0" + "l2=0.459 f=-0.596 shape=(1, 9000, 1)
logits [[ 0.7850411   0.80605227  0.4387456  -4.415483  ]]
Iteration 900 of 1000: loss=0.437 " + "l1=0" + "l2=0.437 f=-0.587 shape=(1, 9000, 1)
logits [[ 0.7675129   0.781727    0.45469064 -4.3534913 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.96 " + "l1=1.96" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 4.682414  -1.3371339  1.498957  -7.11708  ]]
Iteration 100 of 1000: loss=1.39 " + "l1=1.03" + "l2=0.357 f=-0.53 shape=(1, 9000, 1)
logits [[ 2.9228897  -0.25520033  0.89494807 -5.682159  ]]
Iteration 200 of 1000: loss=0.988 " + "l1=0.369" + "l2=0.619 f=-0.622 shape=(1, 9000, 1)
logits [[ 1.5808151   0.44682857  0.61347014 -5.1291003 ]]
Iteration 300 of 1000: loss=0.665 " + "l1=0" + "l2=0.665 f=-0.658 shape=(1, 9000, 1)
logits [[ 0.8373178   0.86181355  0.47676474 -4.807711  ]]
Iteration 400 of 1000: loss=0.534 " + "l1=0.0132" + "l2=0.521 f=-0.638 shape=(1, 9000, 1)
logits [[ 0.8770943   0.83662015  0.44931236 -4.7166815 ]]
Iteration 500 of 1000: loss=0.476 " + "l1=0" + "l2=0.476 f=-0.625 shape=(1, 9000, 1)
logits [[ 0.8096751   0.8205796   0.45020851 -4.581382  ]]
Iteration 600 of 1000: loss=0.439 " + "l1=0" + "l2=0.439 f=-0.609 shape=(1, 9000, 1)
logits [[ 0.7914707   0.796647    0.46142635 -4.4843254 ]]
Iteration 700 of 1000: loss=0.413 " + "l1=0.000933" + "l2=0.412 f=-0.591 shape=(1, 9000, 1)
logits [[ 0.78002965  0.7771602   0.47314563 -4.396184  ]]
Iteration 800 of 1000: loss=0.396 " + "l1=0.00556" + "l2=0.39 f=-0.581 shape=(1, 9000, 1)
logits [[ 0.77042747  0.7533108   0.48046887 -4.329229  ]]
Iteration 900 of 1000: loss=0.379 " + "l1=0.00105" + "l2=0.378 f=-0.573 shape=(1, 9000, 1)
logits [[ 0.7382512   0.73501253  0.48696393 -4.2538295 ]]
--- 304.77965116500854 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0318 " + "l1=0.0318" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 4.682414  -1.3371339  1.498957  -7.11708  ]]
Iteration 100 of 1000: loss=0.0316 " + "l1=0.0315" + "l2=0.000168 f=-0.57 shape=(1, 9000, 1)
logits [[ 4.6538897 -1.3390741  1.5063732 -7.10071  ]]
Iteration 200 of 1000: loss=0.0316 " + "l1=0.0314" + "l2=0.00015 f=-0.57 shape=(1, 9000, 1)
logits [[ 4.6520195 -1.3402803  1.5074252 -7.099816 ]]
Iteration 300 of 1000: loss=0.0316 " + "l1=0.0314" + "l2=0.000187 f=-0.57 shape=(1, 9000, 1)
logits [[ 4.648457 -1.341407  1.508731 -7.097765]]
Iteration 400 of 1000: loss=0.0316 " + "l1=0.0313" + "l2=0.000226 f=-0.571 shape=(1, 9000, 1)
logits [[ 4.6445045 -1.3425018  1.5099714 -7.095347 ]]
Iteration 500 of 1000: loss=0.0316 " + "l1=0.0313" + "l2=0.00026 f=-0.571 shape=(1, 9000, 1)
logits [[ 4.6402864 -1.3435217  1.5111054 -7.0925636]]
Iteration 600 of 1000: loss=0.0316 " + "l1=0.0312" + "l2=0.000385 f=-0.571 shape=(1, 9000, 1)
logits [[ 4.6360264 -1.3443952  1.5120479 -7.089676 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.318 " + "l1=0.318" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 4.682414  -1.3371339  1.498957  -7.11708  ]]
Iteration 100 of 1000: loss=0.301 " + "l1=0.29" + "l2=0.0112 f=-0.578 shape=(1, 9000, 1)
logits [[ 4.445343  -1.3449478  1.5502219 -6.962276 ]]
Iteration 200 of 1000: loss=0.294 " + "l1=0.279" + "l2=0.0146 f=-0.585 shape=(1, 9000, 1)
logits [[ 4.3574834 -1.3565059  1.5640051 -6.9041004]]
Iteration 300 of 1000: loss=0.288 " + "l1=0.271" + "l2=0.0172 f=-0.592 shape=(1, 9000, 1)
logits [[ 4.2811456 -1.3716159  1.5751119 -6.853172 ]]
Iteration 400 of 1000: loss=0.281 " + "l1=0.261" + "l2=0.0202 f=-0.6 shape=(1, 9000, 1)
logits [[ 4.1941643 -1.3901869  1.5847272 -6.7868414]]
Iteration 500 of 1000: loss=0.273 " + "l1=0.25" + "l2=0.0231 f=-0.607 shape=(1, 9000, 1)
logits [[ 4.0954213 -1.4119915  1.5932499 -6.7041626]]
Iteration 600 of 1000: loss=0.264 " + "l1=0.239" + "l2=0.0254 f=-0.614 shape=(1, 9000, 1)
logits [[ 3.991434  -1.4432328  1.6016364 -6.606129 ]]
Iteration 700 of 1000: loss=0.254 " + "l1=0.225" + "l2=0.0288 f=-0.624 shape=(1, 9000, 1)
logits [[ 3.8509877 -1.4782554  1.6018239 -6.470837 ]]
Iteration 800 of 1000: loss=0.244 " + "l1=0.211" + "l2=0.0324 f=-0.63 shape=(1, 9000, 1)
logits [[ 3.7210221 -1.5080492  1.6099803 -6.342919 ]]
Iteration 900 of 1000: loss=0.233 " + "l1=0.197" + "l2=0.0356 f=-0.631 shape=(1, 9000, 1)
logits [[ 3.5960758 -1.5374948  1.6232111 -6.206293 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.18 " + "l1=3.18" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 4.682414  -1.3371339  1.498957  -7.11708  ]]
Iteration 100 of 1000: loss=1.08 " + "l1=0.0565" + "l2=1.03 f=-0.644 shape=(1, 9000, 1)
logits [[ 2.218562  -1.7040203  2.162079  -5.2522845]]
Iteration 200 of 1000: loss=0.616 " + "l1=0.0222" + "l2=0.594 f=-0.647 shape=(1, 9000, 1)
logits [[ 2.4147224 -1.9557934  2.3925552 -5.441065 ]]
Iteration 300 of 1000: loss=0.457 " + "l1=0" + "l2=0.457 f=-0.662 shape=(1, 9000, 1)
logits [[ 2.4757037 -2.1489422  2.4815438 -5.456402 ]]
Iteration 400 of 1000: loss=0.359 " + "l1=0.00106" + "l2=0.358 f=-0.669 shape=(1, 9000, 1)
logits [[ 2.5077372 -2.221618   2.506674  -5.470054 ]]
Iteration 500 of 1000: loss=0.296 " + "l1=0" + "l2=0.296 f=-0.67 shape=(1, 9000, 1)
logits [[ 2.5048642 -2.2522674  2.5164914 -5.4486856]]
Iteration 600 of 1000: loss=0.257 " + "l1=0" + "l2=0.257 f=-0.666 shape=(1, 9000, 1)
logits [[ 2.5042162 -2.2741675  2.5116217 -5.406596 ]]
Iteration 700 of 1000: loss=0.23 " + "l1=0" + "l2=0.23 f=-0.661 shape=(1, 9000, 1)
logits [[ 2.4958894 -2.284449   2.499382  -5.3547015]]
Iteration 800 of 1000: loss=0.208 " + "l1=0" + "l2=0.208 f=-0.654 shape=(1, 9000, 1)
logits [[ 2.486498  -2.3008895  2.4950259 -5.2975726]]
Iteration 900 of 1000: loss=0.188 " + "l1=0" + "l2=0.188 f=-0.648 shape=(1, 9000, 1)
logits [[ 2.453926  -2.2949185  2.4683566 -5.221256 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.75 " + "l1=1.75" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 4.682414  -1.3371339  1.498957  -7.11708  ]]
Iteration 100 of 1000: loss=1.16 " + "l1=0.797" + "l2=0.361 f=-0.637 shape=(1, 9000, 1)
logits [[ 3.1644893 -1.3906418  1.7161646 -6.038145 ]]
Iteration 200 of 1000: loss=0.736 " + "l1=0.143" + "l2=0.593 f=-0.643 shape=(1, 9000, 1)
logits [[ 2.3621428 -1.7131646  2.1017506 -5.323312 ]]
Iteration 300 of 1000: loss=0.434 " + "l1=0.0101" + "l2=0.424 f=-0.636 shape=(1, 9000, 1)
logits [[ 2.350142  -1.9342318  2.3318326 -5.291075 ]]
Iteration 400 of 1000: loss=0.326 " + "l1=0.00903" + "l2=0.317 f=-0.632 shape=(1, 9000, 1)
logits [[ 2.4758222 -2.1368725  2.4593954 -5.3281455]]
Iteration 500 of 1000: loss=0.269 " + "l1=0.00159" + "l2=0.267 f=-0.635 shape=(1, 9000, 1)
logits [[ 2.4625185 -2.1993637  2.4596303 -5.2644587]]
Iteration 600 of 1000: loss=0.234 " + "l1=0.00719" + "l2=0.227 f=-0.632 shape=(1, 9000, 1)
logits [[ 2.4195359 -2.191737   2.4064698 -5.16314  ]]
Iteration 700 of 1000: loss=0.203 " + "l1=0" + "l2=0.203 f=-0.63 shape=(1, 9000, 1)
logits [[ 2.3689494 -2.2057781  2.3918288 -5.0755672]]
Iteration 800 of 1000: loss=0.176 " + "l1=0" + "l2=0.176 f=-0.627 shape=(1, 9000, 1)
logits [[ 2.3431978 -2.211262   2.348488  -4.988682 ]]
Iteration 900 of 1000: loss=0.16 " + "l1=0" + "l2=0.16 f=-0.621 shape=(1, 9000, 1)
logits [[ 2.300827  -2.2025192  2.31563   -4.89795  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.03 " + "l1=1.03" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 4.682414  -1.3371339  1.498957  -7.11708  ]]
Iteration 100 of 1000: loss=0.843 " + "l1=0.733" + "l2=0.11 f=-0.606 shape=(1, 9000, 1)
logits [[ 3.890616  -1.3799156  1.6345223 -6.5681496]]
Iteration 200 of 1000: loss=0.729 " + "l1=0.554" + "l2=0.175 f=-0.642 shape=(1, 9000, 1)
logits [[ 3.3923802 -1.4562562  1.6889206 -6.1926413]]
Iteration 300 of 1000: loss=0.604 " + "l1=0.399" + "l2=0.205 f=-0.659 shape=(1, 9000, 1)
logits [[ 2.964943  -1.5207769  1.7379074 -5.8177633]]
Iteration 400 of 1000: loss=0.451 " + "l1=0.181" + "l2=0.27 f=-0.673 shape=(1, 9000, 1)
logits [[ 2.5554447 -1.8245667  1.998967  -5.420041 ]]
Iteration 500 of 1000: loss=0.272 " + "l1=0" + "l2=0.272 f=-0.646 shape=(1, 9000, 1)
logits [[ 2.337288  -2.1085773  2.3375132 -5.1513157]]
Iteration 600 of 1000: loss=0.192 " + "l1=0.0014" + "l2=0.191 f=-0.632 shape=(1, 9000, 1)
logits [[ 2.3436162 -2.163688   2.3393185 -5.048562 ]]
Iteration 700 of 1000: loss=0.154 " + "l1=0" + "l2=0.154 f=-0.627 shape=(1, 9000, 1)
logits [[ 2.2886467 -2.1597655  2.2907212 -4.9279675]]
Iteration 800 of 1000: loss=0.129 " + "l1=0.000697" + "l2=0.128 f=-0.622 shape=(1, 9000, 1)
logits [[ 2.257465  -2.1620193  2.2553208 -4.83957  ]]
Iteration 900 of 1000: loss=0.11 " + "l1=0" + "l2=0.11 f=-0.613 shape=(1, 9000, 1)
logits [[ 2.259654  -2.186298   2.26219   -4.7860603]]
--- 282.97326827049255 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.118 " + "l1=0.118" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 4.682414  -1.3371339  1.498957  -7.11708  ]]
Iteration 100 of 1000: loss=0.117 " + "l1=0.117" + "l2=0.000502 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.6253166 -1.3209068  1.4804983 -7.0439944]]
Iteration 200 of 1000: loss=0.117 " + "l1=0.116" + "l2=0.000553 f=-0.564 shape=(1, 9000, 1)
logits [[ 4.6133804 -1.3172712  1.4750799 -7.0282373]]
Iteration 300 of 1000: loss=0.117 " + "l1=0.116" + "l2=0.000659 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.5999093 -1.3127154  1.4688597 -7.009936 ]]
Iteration 400 of 1000: loss=0.117 " + "l1=0.116" + "l2=0.000778 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.58658   -1.3095359  1.4635174 -6.9923635]]
Iteration 500 of 1000: loss=0.116 " + "l1=0.115" + "l2=0.000924 f=-0.562 shape=(1, 9000, 1)
logits [[ 4.5725923 -1.3064243  1.4582512 -6.974202 ]]
Iteration 600 of 1000: loss=0.116 " + "l1=0.115" + "l2=0.00106 f=-0.562 shape=(1, 9000, 1)
logits [[ 4.557741  -1.302992   1.452832  -6.9555416]]
Iteration 700 of 1000: loss=0.116 " + "l1=0.115" + "l2=0.0013 f=-0.562 shape=(1, 9000, 1)
logits [[ 4.5426183 -1.2994841  1.4472969 -6.9368353]]
Iteration 800 of 1000: loss=0.116 " + "l1=0.114" + "l2=0.00138 f=-0.561 shape=(1, 9000, 1)
logits [[ 4.527376  -1.2964647  1.4422114 -6.918243 ]]
Iteration 900 of 1000: loss=0.116 " + "l1=0.114" + "l2=0.00151 f=-0.561 shape=(1, 9000, 1)
logits [[ 4.5113583 -1.2936181  1.4371451 -6.898723 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.18 " + "l1=1.18" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 4.682414  -1.3371339  1.498957  -7.11708  ]]
Iteration 100 of 1000: loss=1.1 " + "l1=1.05" + "l2=0.0497 f=-0.545 shape=(1, 9000, 1)
logits [[ 4.0819693 -1.1938266  1.3148692 -6.381137 ]]
Iteration 200 of 1000: loss=1.05 " + "l1=0.976" + "l2=0.0739 f=-0.543 shape=(1, 9000, 1)
logits [[ 3.7624786 -1.1300966  1.1977136 -6.000186 ]]
Iteration 300 of 1000: loss=0.994 " + "l1=0.898" + "l2=0.0955 f=-0.541 shape=(1, 9000, 1)
logits [[ 3.4092784 -1.0906593  1.091957  -5.573122 ]]
Iteration 400 of 1000: loss=0.932 " + "l1=0.816" + "l2=0.116 f=-0.52 shape=(1, 9000, 1)
logits [[ 3.0738158 -1.0700845  1.006767  -5.090493 ]]
Iteration 500 of 1000: loss=0.876 " + "l1=0.746" + "l2=0.13 f=-0.5 shape=(1, 9000, 1)
logits [[ 2.7828689  -1.0288997   0.92443424 -4.680012  ]]
Iteration 600 of 1000: loss=0.821 " + "l1=0.68" + "l2=0.141 f=-0.489 shape=(1, 9000, 1)
logits [[ 2.4904313  -0.9546649   0.81583005 -4.3056374 ]]
Iteration 700 of 1000: loss=0.752 " + "l1=0.592" + "l2=0.16 f=-0.466 shape=(1, 9000, 1)
logits [[ 2.1006045  -0.8243076   0.68117476 -3.8197374 ]]
Iteration 800 of 1000: loss=0.658 " + "l1=0.477" + "l2=0.181 f=-0.446 shape=(1, 9000, 1)
logits [[ 1.5741231  -0.6752573   0.51129013 -3.1926765 ]]
Iteration 900 of 1000: loss=0.553 " + "l1=0.353" + "l2=0.2 f=-0.426 shape=(1, 9000, 1)
logits [[ 1.0277846 -0.5596641  0.3292428 -2.5000315]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.8 " + "l1=11.8" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 4.682414  -1.3371339  1.498957  -7.11708  ]]
Iteration 100 of 1000: loss=4.34 " + "l1=1.14" + "l2=3.2 f=-0.333 shape=(1, 9000, 1)
logits [[-0.03636787 -0.06099254 -0.05679715 -1.178766  ]]
Iteration 200 of 1000: loss=2.72 " + "l1=0.0038" + "l2=2.72 f=-0.27 shape=(1, 9000, 1)
logits [[-0.28937125 -0.26428387 -0.2614932  -0.26528838]]
Iteration 300 of 1000: loss=2.17 " + "l1=0.0202" + "l2=2.15 f=-0.276 shape=(1, 9000, 1)
logits [[-0.26531968 -0.2791017  -0.27540687 -0.28554004]]
Iteration 400 of 1000: loss=1.89 " + "l1=0.0337" + "l2=1.85 f=-0.281 shape=(1, 9000, 1)
logits [[-0.24969858 -0.333967   -0.25825983 -0.2834416 ]]
Iteration 500 of 1000: loss=1.68 " + "l1=0.0555" + "l2=1.62 f=-0.275 shape=(1, 9000, 1)
logits [[-0.208392   -0.3900417  -0.23585358 -0.26384586]]
Iteration 600 of 1000: loss=1.5 " + "l1=0" + "l2=1.5 f=-0.269 shape=(1, 9000, 1)
logits [[-0.2529003  -0.4357294  -0.22109643 -0.1679157 ]]
Iteration 700 of 1000: loss=1.34 " + "l1=0" + "l2=1.34 f=-0.259 shape=(1, 9000, 1)
logits [[-0.17339961 -0.55246013 -0.17157    -0.1391302 ]]
Iteration 800 of 1000: loss=1.22 " + "l1=0" + "l2=1.22 f=-0.246 shape=(1, 9000, 1)
logits [[-0.13587163 -0.63742733 -0.1395373  -0.07224992]]
Iteration 900 of 1000: loss=1.1 " + "l1=0" + "l2=1.1 f=-0.239 shape=(1, 9000, 1)
logits [[-0.07488998 -0.759634   -0.06861077 -0.05098172]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.49 " + "l1=6.49" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 4.682414  -1.3371339  1.498957  -7.11708  ]]
Iteration 100 of 1000: loss=3.81 " + "l1=2.31" + "l2=1.51 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.2124892  -0.38281754  0.55012995 -2.979391  ]]
Iteration 200 of 1000: loss=2.48 " + "l1=0.754" + "l2=1.73 f=-0.36 shape=(1, 9000, 1)
logits [[ 5.8837421e-04 -5.7484441e-02 -1.2123223e-02 -1.3697448e+00]]
Iteration 300 of 1000: loss=1.63 " + "l1=0.027" + "l2=1.6 f=-0.282 shape=(1, 9000, 1)
logits [[-0.2572845  -0.28671396 -0.27768072 -0.30638182]]
Iteration 400 of 1000: loss=1.22 " + "l1=0.0158" + "l2=1.2 f=-0.288 shape=(1, 9000, 1)
logits [[-0.27050796 -0.30757517 -0.2741411  -0.29930884]]
Iteration 500 of 1000: loss=0.958 " + "l1=0.00798" + "l2=0.95 f=-0.278 shape=(1, 9000, 1)
logits [[-0.25374034 -0.318036   -0.27361816 -0.2682565 ]]
Iteration 600 of 1000: loss=0.788 " + "l1=0" + "l2=0.788 f=-0.271 shape=(1, 9000, 1)
logits [[-0.27750868 -0.32326397 -0.26658213 -0.21581092]]
Iteration 700 of 1000: loss=0.658 " + "l1=0" + "l2=0.658 f=-0.262 shape=(1, 9000, 1)
logits [[-0.22000164 -0.3670342  -0.24564405 -0.21471825]]
Iteration 800 of 1000: loss=0.578 " + "l1=0.00622" + "l2=0.572 f=-0.259 shape=(1, 9000, 1)
logits [[-0.20456405 -0.40873757 -0.208133   -0.2158691 ]]
Iteration 900 of 1000: loss=0.515 " + "l1=0" + "l2=0.515 f=-0.257 shape=(1, 9000, 1)
logits [[-0.19471806 -0.47633657 -0.19079538 -0.1645512 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.83 " + "l1=3.83" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 4.682414  -1.3371339  1.498957  -7.11708  ]]
Iteration 100 of 1000: loss=2.83 " + "l1=2.26" + "l2=0.566 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.522894  -0.7480025  0.8698508 -4.437509 ]]
Iteration 200 of 1000: loss=2.22 " + "l1=1.42" + "l2=0.794 f=-0.412 shape=(1, 9000, 1)
logits [[ 1.344778   -0.49877143  0.5418102  -3.0360878 ]]
Iteration 300 of 1000: loss=1.67 " + "l1=0.703" + "l2=0.965 f=-0.367 shape=(1, 9000, 1)
logits [[ 0.31467518 -0.12749086  0.19397333 -1.8479114 ]]
Iteration 400 of 1000: loss=1.14 " + "l1=0.243" + "l2=0.897 f=-0.315 shape=(1, 9000, 1)
logits [[-0.11269087 -0.12079293 -0.164881   -0.8616138 ]]
Iteration 500 of 1000: loss=0.766 " + "l1=0" + "l2=0.766 f=-0.278 shape=(1, 9000, 1)
logits [[-0.30820784 -0.26628366 -0.29215336 -0.24388385]]
Iteration 600 of 1000: loss=0.59 " + "l1=0" + "l2=0.59 f=-0.272 shape=(1, 9000, 1)
logits [[-0.26323658 -0.29979417 -0.27117714 -0.2543381 ]]
Iteration 700 of 1000: loss=0.503 " + "l1=0.00803" + "l2=0.495 f=-0.276 shape=(1, 9000, 1)
logits [[-0.2290461  -0.3900613  -0.22913533 -0.25376636]]
Iteration 800 of 1000: loss=0.441 " + "l1=0.00214" + "l2=0.439 f=-0.276 shape=(1, 9000, 1)
logits [[-0.21060759 -0.4636934  -0.21101917 -0.21720096]]
Iteration 900 of 1000: loss=0.394 " + "l1=0" + "l2=0.394 f=-0.277 shape=(1, 9000, 1)
logits [[-0.20628217 -0.5217698  -0.19762996 -0.18378901]]
--- 305.28767800331116 seconds ---
Adv result:3
Loading record A02400
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0486 " + "l1=0.0486" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 3.2944753 -1.5626734  2.246297  -5.207477 ]]
Iteration 100 of 1000: loss=0.0481 " + "l1=0.0478" + "l2=0.000291 f=-0.308 shape=(1, 9000, 1)
logits [[ 3.2432194 -1.53475    2.2255921 -5.164317 ]]
Iteration 200 of 1000: loss=0.0479 " + "l1=0.0476" + "l2=0.000322 f=-0.307 shape=(1, 9000, 1)
logits [[ 3.2329836 -1.5275655  2.2202618 -5.1547093]]
Iteration 300 of 1000: loss=0.0478 " + "l1=0.0474" + "l2=0.00041 f=-0.307 shape=(1, 9000, 1)
logits [[ 3.2210472 -1.5194782  2.2148778 -5.144756 ]]
Iteration 400 of 1000: loss=0.0477 " + "l1=0.0472" + "l2=0.000489 f=-0.307 shape=(1, 9000, 1)
logits [[ 3.2096941 -1.5114892  2.2098103 -5.1360483]]
Iteration 500 of 1000: loss=0.0476 " + "l1=0.047" + "l2=0.000595 f=-0.307 shape=(1, 9000, 1)
logits [[ 3.198987  -1.5038742  2.2052987 -5.128485 ]]
Iteration 600 of 1000: loss=0.0475 " + "l1=0.0469" + "l2=0.000658 f=-0.307 shape=(1, 9000, 1)
logits [[ 3.1888099 -1.4963034  2.2010798 -5.1217775]]
Iteration 700 of 1000: loss=0.0475 " + "l1=0.0467" + "l2=0.000816 f=-0.307 shape=(1, 9000, 1)
logits [[ 3.1791525 -1.4888779  2.1972656 -5.115629 ]]
Iteration 800 of 1000: loss=0.0474 " + "l1=0.0465" + "l2=0.000908 f=-0.307 shape=(1, 9000, 1)
logits [[ 3.1691682 -1.4810247  2.1932142 -5.109304 ]]
Iteration 900 of 1000: loss=0.0474 " + "l1=0.0463" + "l2=0.00106 f=-0.307 shape=(1, 9000, 1)
logits [[ 3.1592622 -1.4730492  2.1890101 -5.103095 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.486 " + "l1=0.486" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 3.2944753 -1.5626734  2.246297  -5.207477 ]]
Iteration 100 of 1000: loss=0.442 " + "l1=0.422" + "l2=0.0199 f=-0.313 shape=(1, 9000, 1)
logits [[ 2.8847399 -1.3401428  2.0730646 -4.8716326]]
Iteration 200 of 1000: loss=0.42 " + "l1=0.39" + "l2=0.0302 f=-0.317 shape=(1, 9000, 1)
logits [[ 2.6654224 -1.2312208  1.9727437 -4.6733465]]
Iteration 300 of 1000: loss=0.405 " + "l1=0.367" + "l2=0.0382 f=-0.316 shape=(1, 9000, 1)
logits [[ 2.5165179 -1.1526629  1.9103202 -4.5388947]]
Iteration 400 of 1000: loss=0.393 " + "l1=0.348" + "l2=0.045 f=-0.315 shape=(1, 9000, 1)
logits [[ 2.3880005 -1.0935113  1.8697598 -4.42273  ]]
Iteration 500 of 1000: loss=0.383 " + "l1=0.336" + "l2=0.0475 f=-0.313 shape=(1, 9000, 1)
logits [[ 2.3057978 -1.0534748  1.8430238 -4.346269 ]]
Iteration 600 of 1000: loss=0.375 " + "l1=0.326" + "l2=0.0493 f=-0.312 shape=(1, 9000, 1)
logits [[ 2.238015  -1.0225954  1.8171916 -4.281464 ]]
Iteration 700 of 1000: loss=0.367 " + "l1=0.317" + "l2=0.0507 f=-0.313 shape=(1, 9000, 1)
logits [[ 2.1741612  -0.99357194  1.7948005  -4.226411  ]]
Iteration 800 of 1000: loss=0.36 " + "l1=0.307" + "l2=0.0531 f=-0.314 shape=(1, 9000, 1)
logits [[ 2.1008558 -0.9652958  1.7704341 -4.1630225]]
Iteration 900 of 1000: loss=0.353 " + "l1=0.298" + "l2=0.0548 f=-0.316 shape=(1, 9000, 1)
logits [[ 2.0365741  -0.94275475  1.7488166  -4.1054916 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.86 " + "l1=4.86" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 3.2944753 -1.5626734  2.246297  -5.207477 ]]
Iteration 100 of 1000: loss=2.49 " + "l1=1.83" + "l2=0.658 f=-0.327 shape=(1, 9000, 1)
logits [[ 1.3029609 -0.5195553  1.313027  -3.4033175]]
Iteration 200 of 1000: loss=1.97 " + "l1=1.15" + "l2=0.818 f=-0.294 shape=(1, 9000, 1)
logits [[ 0.9357158 -0.1745742  0.9768013 -2.9156997]]
Iteration 300 of 1000: loss=1.72 " + "l1=0.819" + "l2=0.899 f=-0.291 shape=(1, 9000, 1)
logits [[ 0.71935815  0.00616123  0.82559055 -2.7154105 ]]
Iteration 400 of 1000: loss=1.56 " + "l1=0.6" + "l2=0.963 f=-0.296 shape=(1, 9000, 1)
logits [[ 0.5549833   0.1323299   0.73196334 -2.603014  ]]
Iteration 500 of 1000: loss=1.47 " + "l1=0.487" + "l2=0.986 f=-0.298 shape=(1, 9000, 1)
logits [[ 0.43826374  0.19146127  0.6784657  -2.498964  ]]
Iteration 600 of 1000: loss=1.42 " + "l1=0.42" + "l2=1 f=-0.298 shape=(1, 9000, 1)
logits [[ 0.35193786  0.22394225  0.64417166 -2.4135816 ]]
Iteration 700 of 1000: loss=1.39 " + "l1=0.37" + "l2=1.02 f=-0.3 shape=(1, 9000, 1)
logits [[ 0.28382513  0.24347995  0.6131199  -2.3403504 ]]
Iteration 800 of 1000: loss=1.37 " + "l1=0.352" + "l2=1.02 f=-0.301 shape=(1, 9000, 1)
logits [[ 0.2585285   0.25142953  0.60295945 -2.3188257 ]]
Iteration 900 of 1000: loss=1.36 " + "l1=0.346" + "l2=1.01 f=-0.303 shape=(1, 9000, 1)
logits [[ 0.24460417  0.2511092   0.59702873 -2.3046556 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=48.6 " + "l1=48.6" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 3.2944753 -1.5626734  2.246297  -5.207477 ]]
Iteration 100 of 1000: loss=5.03 " + "l1=0" + "l2=5.03 f=-0.339 shape=(1, 9000, 1)
logits [[-0.26944643  0.46506953  0.454465   -2.0052335 ]]
Iteration 200 of 1000: loss=3.5 " + "l1=0" + "l2=3.5 f=-0.353 shape=(1, 9000, 1)
logits [[-0.16261658  0.5064101   0.48698393 -2.2434795 ]]
Iteration 300 of 1000: loss=2.81 " + "l1=0" + "l2=2.81 f=-0.354 shape=(1, 9000, 1)
logits [[-0.07795577  0.51578075  0.51368934 -2.3692675 ]]
Iteration 400 of 1000: loss=2.39 " + "l1=0" + "l2=2.39 f=-0.354 shape=(1, 9000, 1)
logits [[-0.01512293  0.52937776  0.5275164  -2.4569647 ]]
Iteration 500 of 1000: loss=2.14 " + "l1=0" + "l2=2.14 f=-0.362 shape=(1, 9000, 1)
logits [[-0.03650546  0.5345624   0.53409165 -2.4803064 ]]
Iteration 600 of 1000: loss=2.01 " + "l1=0" + "l2=2.01 f=-0.366 shape=(1, 9000, 1)
logits [[-0.05949613  0.5400609   0.5277745  -2.4741714 ]]
Iteration 700 of 1000: loss=1.91 " + "l1=0" + "l2=1.91 f=-0.368 shape=(1, 9000, 1)
logits [[-0.07116237  0.5386302   0.5267137  -2.4662468 ]]
Iteration 800 of 1000: loss=1.84 " + "l1=0" + "l2=1.84 f=-0.373 shape=(1, 9000, 1)
logits [[-0.09434635  0.5421535   0.52327085 -2.4632547 ]]
Iteration 900 of 1000: loss=1.79 " + "l1=0" + "l2=1.79 f=-0.376 shape=(1, 9000, 1)
logits [[-0.10832189  0.5398394   0.5187692  -2.4542387 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=26.7 " + "l1=26.7" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 3.2944753 -1.5626734  2.246297  -5.207477 ]]
Iteration 100 of 1000: loss=4.27 " + "l1=0.08" + "l2=4.19 f=-0.339 shape=(1, 9000, 1)
logits [[-0.19257817  0.4556804   0.47022298 -2.0886378 ]]
Iteration 200 of 1000: loss=2.82 " + "l1=0" + "l2=2.82 f=-0.357 shape=(1, 9000, 1)
logits [[-0.11153545  0.5113844   0.50416666 -2.3320003 ]]
Iteration 300 of 1000: loss=2.27 " + "l1=0" + "l2=2.27 f=-0.363 shape=(1, 9000, 1)
logits [[-0.07569396  0.5399794   0.5323058  -2.4478676 ]]
Iteration 400 of 1000: loss=2.04 " + "l1=0.0122" + "l2=2.03 f=-0.37 shape=(1, 9000, 1)
logits [[-0.0923477  0.5364517  0.5386722 -2.4636638]]
Iteration 500 of 1000: loss=1.89 " + "l1=0" + "l2=1.89 f=-0.38 shape=(1, 9000, 1)
logits [[-0.12591802  0.54039514  0.5386177  -2.4739392 ]]
Iteration 600 of 1000: loss=1.83 " + "l1=0" + "l2=1.83 f=-0.389 shape=(1, 9000, 1)
logits [[-0.16612844  0.5496455   0.52607137 -2.4638228 ]]
Iteration 700 of 1000: loss=1.73 " + "l1=0" + "l2=1.73 f=-0.391 shape=(1, 9000, 1)
logits [[-0.16364403  0.534461    0.5311586  -2.4676073 ]]
Iteration 800 of 1000: loss=1.68 " + "l1=0.0185" + "l2=1.66 f=-0.392 shape=(1, 9000, 1)
logits [[-0.16321217  0.5271242   0.5304941  -2.46164   ]]
Iteration 900 of 1000: loss=1.65 " + "l1=0.0383" + "l2=1.61 f=-0.391 shape=(1, 9000, 1)
logits [[-0.17153835  0.5236011   0.5305608  -2.4464192 ]]
--- 307.1771056652069 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0105 " + "l1=0.0105" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 3.2944753 -1.5626734  2.246297  -5.207477 ]]
Iteration 100 of 1000: loss=0.0104 " + "l1=0.0102" + "l2=0.000139 f=-0.308 shape=(1, 9000, 1)
logits [[ 3.2655468 -1.5547811  2.244121  -5.1868663]]
Iteration 200 of 1000: loss=0.0103 " + "l1=0.0102" + "l2=0.000107 f=-0.308 shape=(1, 9000, 1)
logits [[ 3.2642124 -1.5539943  2.2436402 -5.1861873]]
Iteration 300 of 1000: loss=0.0103 " + "l1=0.0102" + "l2=0.000124 f=-0.308 shape=(1, 9000, 1)
logits [[ 3.260311  -1.5526952  2.243224  -5.183933 ]]
Iteration 400 of 1000: loss=0.0103 " + "l1=0.0101" + "l2=0.000159 f=-0.308 shape=(1, 9000, 1)
logits [[ 3.2561727 -1.5513042  2.2428296 -5.181604 ]]
Iteration 500 of 1000: loss=0.0103 " + "l1=0.0101" + "l2=0.000214 f=-0.309 shape=(1, 9000, 1)
logits [[ 3.2523656 -1.5499192  2.2425635 -5.179751 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.105 " + "l1=0.105" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 3.2944753 -1.5626734  2.246297  -5.207477 ]]
Iteration 100 of 1000: loss=0.0934 " + "l1=0.0868" + "l2=0.00655 f=-0.315 shape=(1, 9000, 1)
logits [[ 3.1048174 -1.5190706  2.2367725 -5.0823345]]
Iteration 200 of 1000: loss=0.0892 " + "l1=0.0805" + "l2=0.00862 f=-0.317 shape=(1, 9000, 1)
logits [[ 3.028706  -1.4938823  2.2232213 -5.027985 ]]
Iteration 300 of 1000: loss=0.0853 " + "l1=0.0747" + "l2=0.0106 f=-0.319 shape=(1, 9000, 1)
logits [[ 2.9613056 -1.4718256  2.2138772 -4.9812026]]
Iteration 400 of 1000: loss=0.0817 " + "l1=0.0696" + "l2=0.0122 f=-0.321 shape=(1, 9000, 1)
logits [[ 2.9038036 -1.4535018  2.2081127 -4.9434257]]
Iteration 500 of 1000: loss=0.0781 " + "l1=0.0645" + "l2=0.0137 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.849028  -1.4376005  2.2044582 -4.9096923]]
Iteration 600 of 1000: loss=0.0746 " + "l1=0.0596" + "l2=0.015 f=-0.325 shape=(1, 9000, 1)
logits [[ 2.7952924 -1.4219389  2.1992364 -4.873128 ]]
Iteration 700 of 1000: loss=0.071 " + "l1=0.054" + "l2=0.017 f=-0.327 shape=(1, 9000, 1)
logits [[ 2.7347791 -1.4051946  2.1950476 -4.832658 ]]
Iteration 800 of 1000: loss=0.0676 " + "l1=0.0494" + "l2=0.0182 f=-0.329 shape=(1, 9000, 1)
logits [[ 2.6830552 -1.3906366  2.1891441 -4.798835 ]]
Iteration 900 of 1000: loss=0.0648 " + "l1=0.0451" + "l2=0.0197 f=-0.331 shape=(1, 9000, 1)
logits [[ 2.634545  -1.3774636  2.1836822 -4.765232 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.05 " + "l1=1.05" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 3.2944753 -1.5626734  2.246297  -5.207477 ]]
Iteration 100 of 1000: loss=0.208 " + "l1=0" + "l2=0.208 f=-0.346 shape=(1, 9000, 1)
logits [[ 2.1672363 -1.3487722  2.1742358 -4.3755536]]
Iteration 200 of 1000: loss=0.136 " + "l1=0" + "l2=0.136 f=-0.342 shape=(1, 9000, 1)
logits [[ 2.1085    -1.2914106  2.114372  -4.300094 ]]
Iteration 300 of 1000: loss=0.11 " + "l1=0" + "l2=0.11 f=-0.342 shape=(1, 9000, 1)
logits [[ 2.0793345 -1.2775854  2.0916862 -4.261935 ]]
Iteration 400 of 1000: loss=0.0927 " + "l1=0" + "l2=0.0927 f=-0.341 shape=(1, 9000, 1)
logits [[ 2.0838666 -1.2867192  2.0985422 -4.2602143]]
Iteration 500 of 1000: loss=0.079 " + "l1=0" + "l2=0.079 f=-0.341 shape=(1, 9000, 1)
logits [[ 2.1082065 -1.3011072  2.1098905 -4.281812 ]]
Iteration 600 of 1000: loss=0.0723 " + "l1=0" + "l2=0.0723 f=-0.344 shape=(1, 9000, 1)
logits [[ 2.1051412 -1.3071586  2.1125562 -4.28697  ]]
Iteration 700 of 1000: loss=0.0664 " + "l1=0" + "l2=0.0664 f=-0.347 shape=(1, 9000, 1)
logits [[ 2.1061795 -1.3135072  2.11305   -4.29385  ]]
Iteration 800 of 1000: loss=0.0616 " + "l1=0" + "l2=0.0616 f=-0.349 shape=(1, 9000, 1)
logits [[ 2.1057658 -1.3188102  2.1157734 -4.2978015]]
Iteration 900 of 1000: loss=0.0575 " + "l1=0" + "l2=0.0575 f=-0.351 shape=(1, 9000, 1)
logits [[ 2.1058807 -1.3207387  2.1134744 -4.3014026]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.576 " + "l1=0.576" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 3.2944753 -1.5626734  2.246297  -5.207477 ]]
Iteration 100 of 1000: loss=0.227 " + "l1=0.0349" + "l2=0.192 f=-0.347 shape=(1, 9000, 1)
logits [[ 2.2365525 -1.355704   2.1730754 -4.440932 ]]
Iteration 200 of 1000: loss=0.133 " + "l1=0.00285" + "l2=0.13 f=-0.347 shape=(1, 9000, 1)
logits [[ 2.1026797 -1.2809374  2.0974956 -4.3071585]]
Iteration 300 of 1000: loss=0.106 " + "l1=0" + "l2=0.106 f=-0.345 shape=(1, 9000, 1)
logits [[ 2.0720885 -1.2719824  2.0887094 -4.269694 ]]
Iteration 400 of 1000: loss=0.0846 " + "l1=0" + "l2=0.0846 f=-0.342 shape=(1, 9000, 1)
logits [[ 2.0980668 -1.286705   2.1035929 -4.2844462]]
Iteration 500 of 1000: loss=0.0749 " + "l1=0" + "l2=0.0749 f=-0.344 shape=(1, 9000, 1)
logits [[ 2.1050692 -1.2949742  2.1112874 -4.2963123]]
Iteration 600 of 1000: loss=0.0682 " + "l1=0" + "l2=0.0682 f=-0.347 shape=(1, 9000, 1)
logits [[ 2.1054127 -1.3007185  2.1148252 -4.306198 ]]
Iteration 700 of 1000: loss=0.0608 " + "l1=0" + "l2=0.0608 f=-0.349 shape=(1, 9000, 1)
logits [[ 2.1138062 -1.304254   2.1146145 -4.318694 ]]
Iteration 800 of 1000: loss=0.0573 " + "l1=0" + "l2=0.0573 f=-0.351 shape=(1, 9000, 1)
logits [[ 2.103163  -1.3061295  2.1125214 -4.314699 ]]
Iteration 900 of 1000: loss=0.0523 " + "l1=0" + "l2=0.0523 f=-0.352 shape=(1, 9000, 1)
logits [[ 2.1075594 -1.3078581  2.112274  -4.3198123]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.341 " + "l1=0.341" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 3.2944753 -1.5626734  2.246297  -5.207477 ]]
Iteration 100 of 1000: loss=0.22 " + "l1=0.15" + "l2=0.0697 f=-0.332 shape=(1, 9000, 1)
logits [[ 2.672446  -1.4306953  2.209974  -4.7808213]]
Iteration 200 of 1000: loss=0.162 " + "l1=0.0619" + "l2=0.0997 f=-0.342 shape=(1, 9000, 1)
logits [[ 2.3289495 -1.3339942  2.1383758 -4.499583 ]]
Iteration 300 of 1000: loss=0.113 " + "l1=0.0013" + "l2=0.112 f=-0.348 shape=(1, 9000, 1)
logits [[ 2.0914824 -1.2690827  2.0874705 -4.3028865]]
Iteration 400 of 1000: loss=0.0877 " + "l1=0" + "l2=0.0877 f=-0.345 shape=(1, 9000, 1)
logits [[ 2.0913973 -1.2790004  2.0974395 -4.2887983]]
Iteration 500 of 1000: loss=0.0739 " + "l1=0" + "l2=0.0739 f=-0.344 shape=(1, 9000, 1)
logits [[ 2.1078107 -1.2920641  2.110021  -4.3032613]]
Iteration 600 of 1000: loss=0.0658 " + "l1=0" + "l2=0.0658 f=-0.347 shape=(1, 9000, 1)
logits [[ 2.112915  -1.2996675  2.1135364 -4.316631 ]]
Iteration 700 of 1000: loss=0.0601 " + "l1=0" + "l2=0.0601 f=-0.35 shape=(1, 9000, 1)
logits [[ 2.110115  -1.3026853  2.1137938 -4.3226333]]
Iteration 800 of 1000: loss=0.0556 " + "l1=0.00137" + "l2=0.0543 f=-0.352 shape=(1, 9000, 1)
logits [[ 2.117742 -1.306672  2.113533 -4.331828]]
Iteration 900 of 1000: loss=0.0507 " + "l1=0.000189" + "l2=0.0505 f=-0.353 shape=(1, 9000, 1)
logits [[ 2.1124914 -1.30817    2.1119099 -4.329853 ]]
--- 278.5965344905853 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.085 " + "l1=0.085" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 3.2944753 -1.5626734  2.246297  -5.207477 ]]
Iteration 100 of 1000: loss=0.0841 " + "l1=0.0836" + "l2=0.000489 f=-0.306 shape=(1, 9000, 1)
logits [[ 3.2302964 -1.5400338  2.2197335 -5.1337395]]
Iteration 200 of 1000: loss=0.0839 " + "l1=0.0833" + "l2=0.000606 f=-0.305 shape=(1, 9000, 1)
logits [[ 3.2150886 -1.5327345  2.2116923 -5.1156263]]
Iteration 300 of 1000: loss=0.0837 " + "l1=0.083" + "l2=0.000767 f=-0.305 shape=(1, 9000, 1)
logits [[ 3.19904   -1.5254139  2.2040014 -5.097525 ]]
Iteration 400 of 1000: loss=0.0836 " + "l1=0.0827" + "l2=0.000925 f=-0.305 shape=(1, 9000, 1)
logits [[ 3.1847718 -1.5189828  2.1974711 -5.082037 ]]
Iteration 500 of 1000: loss=0.0835 " + "l1=0.0824" + "l2=0.00107 f=-0.304 shape=(1, 9000, 1)
logits [[ 3.1719708 -1.5129095  2.1916637 -5.0686507]]
Iteration 600 of 1000: loss=0.0834 " + "l1=0.0822" + "l2=0.00121 f=-0.304 shape=(1, 9000, 1)
logits [[ 3.1596994 -1.5068586  2.186344  -5.056178 ]]
Iteration 700 of 1000: loss=0.0833 " + "l1=0.0819" + "l2=0.00139 f=-0.304 shape=(1, 9000, 1)
logits [[ 3.1481924 -1.5011848  2.1815853 -5.0448494]]
Iteration 800 of 1000: loss=0.0832 " + "l1=0.0817" + "l2=0.00151 f=-0.304 shape=(1, 9000, 1)
logits [[ 3.1378982 -1.4960407  2.1774864 -5.0347915]]
Iteration 900 of 1000: loss=0.0831 " + "l1=0.0815" + "l2=0.0016 f=-0.304 shape=(1, 9000, 1)
logits [[ 3.1273744 -1.4906629  2.1732748 -5.0248694]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.85 " + "l1=0.85" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 3.2944753 -1.5626734  2.246297  -5.207477 ]]
Iteration 100 of 1000: loss=0.771 " + "l1=0.733" + "l2=0.0378 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.7398548 -1.3807024  2.0134425 -4.588528 ]]
Iteration 200 of 1000: loss=0.726 " + "l1=0.663" + "l2=0.0627 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.4182048 -1.2716216  1.8653514 -4.2124333]]
Iteration 300 of 1000: loss=0.696 " + "l1=0.614" + "l2=0.0824 f=-0.293 shape=(1, 9000, 1)
logits [[ 2.1966333 -1.1954004  1.7720767 -3.944347 ]]
Iteration 400 of 1000: loss=0.674 " + "l1=0.575" + "l2=0.099 f=-0.289 shape=(1, 9000, 1)
logits [[ 2.018992  -1.1538025  1.706724  -3.7294502]]
Iteration 500 of 1000: loss=0.653 " + "l1=0.539" + "l2=0.113 f=-0.285 shape=(1, 9000, 1)
logits [[ 1.8607966 -1.1353978  1.668905  -3.5337927]]
Iteration 600 of 1000: loss=0.631 " + "l1=0.504" + "l2=0.127 f=-0.282 shape=(1, 9000, 1)
logits [[ 1.7028713 -1.1274577  1.6379548 -3.3419018]]
Iteration 700 of 1000: loss=0.614 " + "l1=0.484" + "l2=0.13 f=-0.28 shape=(1, 9000, 1)
logits [[ 1.6158524 -1.1313741  1.6163203 -3.219156 ]]
Iteration 800 of 1000: loss=0.598 " + "l1=0.474" + "l2=0.123 f=-0.277 shape=(1, 9000, 1)
logits [[ 1.5932856 -1.1392283  1.5908971 -3.1513638]]
Iteration 900 of 1000: loss=0.581 " + "l1=0.462" + "l2=0.119 f=-0.274 shape=(1, 9000, 1)
logits [[ 1.5559716 -1.1397624  1.5560576 -3.0662696]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.5 " + "l1=8.5" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 3.2944753 -1.5626734  2.246297  -5.207477 ]]
Iteration 100 of 1000: loss=4.01 " + "l1=2.47" + "l2=1.54 f=-0.17 shape=(1, 9000, 1)
logits [[ 0.7149391  -0.8918832   0.98279464 -1.486041  ]]
Iteration 200 of 1000: loss=2.43 " + "l1=0.201" + "l2=2.23 f=-0.11 shape=(1, 9000, 1)
logits [[-0.21939132 -0.8488588   0.41478783  0.21352807]]
Iteration 300 of 1000: loss=1.84 " + "l1=0" + "l2=1.84 f=-0.0945 shape=(1, 9000, 1)
logits [[-0.32371727 -0.8409059   0.38459376  0.40183017]]
Iteration 400 of 1000: loss=1.58 " + "l1=0.0137" + "l2=1.57 f=-0.0865 shape=(1, 9000, 1)
logits [[-0.29212245 -0.8436328   0.40173542  0.38801968]]
Iteration 500 of 1000: loss=1.35 " + "l1=0" + "l2=1.35 f=-0.0802 shape=(1, 9000, 1)
logits [[-0.29554793 -0.834819    0.39746416  0.41208574]]
Iteration 600 of 1000: loss=1.13 " + "l1=0" + "l2=1.13 f=-0.0754 shape=(1, 9000, 1)
logits [[-0.30408546 -0.81788504  0.40704194  0.41348162]]
Iteration 700 of 1000: loss=0.946 " + "l1=0.0038" + "l2=0.942 f=-0.0708 shape=(1, 9000, 1)
logits [[-0.29935667 -0.8114985   0.41567186  0.41186875]]
Iteration 800 of 1000: loss=0.815 " + "l1=0" + "l2=0.815 f=-0.072 shape=(1, 9000, 1)
logits [[-0.30769542 -0.80222285  0.40281725  0.41895506]]
Iteration 900 of 1000: loss=0.713 " + "l1=0" + "l2=0.713 f=-0.0729 shape=(1, 9000, 1)
logits [[-0.33146483 -0.80175316  0.40478265  0.43674594]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.68 " + "l1=4.68" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 3.2944753 -1.5626734  2.246297  -5.207477 ]]
Iteration 100 of 1000: loss=2.82 " + "l1=2.18" + "l2=0.637 f=-0.239 shape=(1, 9000, 1)
logits [[ 1.3203375 -1.0113902  1.3494159 -2.615855 ]]
Iteration 200 of 1000: loss=2.29 " + "l1=1.54" + "l2=0.751 f=-0.18 shape=(1, 9000, 1)
logits [[ 0.8849567  -0.94611526  1.0677999  -1.725828  ]]
Iteration 300 of 1000: loss=2.01 " + "l1=1.05" + "l2=0.953 f=-0.146 shape=(1, 9000, 1)
logits [[ 0.50014734 -0.922327    0.87648636 -1.038087  ]]
Iteration 400 of 1000: loss=1.6 " + "l1=0.429" + "l2=1.17 f=-0.102 shape=(1, 9000, 1)
logits [[ 0.07351411 -0.88518614  0.5923661  -0.18686071]]
Iteration 500 of 1000: loss=1.14 " + "l1=0.0152" + "l2=1.12 f=-0.0706 shape=(1, 9000, 1)
logits [[-0.22047152 -0.8078098   0.38681504  0.35912976]]
Iteration 600 of 1000: loss=0.787 " + "l1=0.00167" + "l2=0.785 f=-0.0751 shape=(1, 9000, 1)
logits [[-0.29111665 -0.7571776   0.37549192  0.37245575]]
Iteration 700 of 1000: loss=0.65 " + "l1=0.00121" + "l2=0.648 f=-0.0835 shape=(1, 9000, 1)
logits [[-0.3263968  -0.7308336   0.36278227  0.36057532]]
Iteration 800 of 1000: loss=0.55 " + "l1=0.0055" + "l2=0.545 f=-0.0923 shape=(1, 9000, 1)
logits [[-0.35250053 -0.7132993   0.3532584   0.3432667 ]]
Iteration 900 of 1000: loss=0.469 " + "l1=0" + "l2=0.469 f=-0.0987 shape=(1, 9000, 1)
logits [[-0.37984988 -0.71127623  0.34425038  0.35219806]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.76 " + "l1=2.76" + "l2=0 f=-0.307 shape=(1, 9000, 1)
logits [[ 3.2944753 -1.5626734  2.246297  -5.207477 ]]
Iteration 100 of 1000: loss=1.97 " + "l1=1.59" + "l2=0.376 f=-0.287 shape=(1, 9000, 1)
logits [[ 1.6225955 -1.1088738  1.6167014 -3.2798612]]
Iteration 200 of 1000: loss=1.68 " + "l1=1.3" + "l2=0.374 f=-0.236 shape=(1, 9000, 1)
logits [[ 1.3548511 -1.0284677  1.369737  -2.6415064]]
Iteration 300 of 1000: loss=1.55 " + "l1=1.14" + "l2=0.41 f=-0.211 shape=(1, 9000, 1)
logits [[ 1.1945451 -1.0031023  1.2374432 -2.2738602]]
Iteration 400 of 1000: loss=1.46 " + "l1=1.02" + "l2=0.441 f=-0.183 shape=(1, 9000, 1)
logits [[ 1.0838329 -0.9907908  1.1622871 -1.9860208]]
Iteration 500 of 1000: loss=1.36 " + "l1=0.889" + "l2=0.466 f=-0.153 shape=(1, 9000, 1)
logits [[ 0.92725885 -0.9680971   1.0814996  -1.6544018 ]]
Iteration 600 of 1000: loss=1.16 " + "l1=0.633" + "l2=0.53 f=-0.124 shape=(1, 9000, 1)
logits [[ 0.62960637 -0.92024785  0.87217355 -1.0756255 ]]
Iteration 700 of 1000: loss=0.838 " + "l1=0.29" + "l2=0.547 f=-0.096 shape=(1, 9000, 1)
logits [[ 0.14104077 -0.7941367   0.5807897  -0.31176636]]
Iteration 800 of 1000: loss=0.623 " + "l1=0.0707" + "l2=0.552 f=-0.0787 shape=(1, 9000, 1)
logits [[-0.16480793 -0.72983295  0.39871344  0.18127435]]
Iteration 900 of 1000: loss=0.448 " + "l1=0.00116" + "l2=0.447 f=-0.0889 shape=(1, 9000, 1)
logits [[-0.30854678 -0.6974704   0.32697982  0.32342067]]
--- 308.39832162857056 seconds ---
Adv result:3
Loading record A02402
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0294 " + "l1=0.0294" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.8205101  -0.11837419  1.4913805  -6.015437  ]]
Iteration 100 of 1000: loss=0.0281 " + "l1=0.0273" + "l2=0.000764 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.6909494  -0.04314815  1.4520994  -5.930026  ]]
Iteration 200 of 1000: loss=0.0277 " + "l1=0.0269" + "l2=0.000862 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.6627777  -0.02531187  1.4423878  -5.911306  ]]
Iteration 300 of 1000: loss=0.0274 " + "l1=0.0264" + "l2=0.00106 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.6303082  -0.00621968  1.431565   -5.8882914 ]]
Iteration 400 of 1000: loss=0.0271 " + "l1=0.0259" + "l2=0.00123 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.5973594   0.01235002  1.4210416  -5.8649697 ]]
Iteration 500 of 1000: loss=0.0267 " + "l1=0.0253" + "l2=0.00144 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.56227     0.03150319  1.4100912  -5.8406625 ]]
Iteration 600 of 1000: loss=0.0265 " + "l1=0.0248" + "l2=0.00167 f=-0.46 shape=(1, 9000, 1)
logits [[ 2.5289216  0.0502395  1.3998811 -5.817486 ]]
Iteration 700 of 1000: loss=0.0261 " + "l1=0.0243" + "l2=0.00186 f=-0.46 shape=(1, 9000, 1)
logits [[ 2.495508    0.06803028  1.3901094  -5.794173  ]]
Iteration 800 of 1000: loss=0.0258 " + "l1=0.0238" + "l2=0.00199 f=-0.46 shape=(1, 9000, 1)
logits [[ 2.4637566   0.08381618  1.3809874  -5.7704034 ]]
Iteration 900 of 1000: loss=0.0255 " + "l1=0.0233" + "l2=0.00214 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.4305634   0.09790107  1.372724   -5.7472196 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.294 " + "l1=0.294" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.8205101  -0.11837419  1.4913805  -6.015437  ]]
Iteration 100 of 1000: loss=0.164 " + "l1=0.0889" + "l2=0.075 f=-0.505 shape=(1, 9000, 1)
logits [[ 1.4634438  0.5740451  1.1833873 -5.241904 ]]
Iteration 200 of 1000: loss=0.11 " + "l1=0.0302" + "l2=0.0795 f=-0.519 shape=(1, 9000, 1)
logits [[ 1.0841341  0.7818426  1.0736442 -5.0156493]]
Iteration 300 of 1000: loss=0.082 " + "l1=0.0126" + "l2=0.0694 f=-0.518 shape=(1, 9000, 1)
logits [[ 0.992975    0.8671898   0.99123585 -4.9247165 ]]
Iteration 400 of 1000: loss=0.065 " + "l1=0.000423" + "l2=0.0646 f=-0.515 shape=(1, 9000, 1)
logits [[ 0.92906165  0.92833453  0.93256164 -4.8486032 ]]
Iteration 500 of 1000: loss=0.0543 " + "l1=0.000357" + "l2=0.0539 f=-0.51 shape=(1, 9000, 1)
logits [[ 0.92401415  0.9204406   0.92333233 -4.8065667 ]]
Iteration 600 of 1000: loss=0.0486 " + "l1=0" + "l2=0.0486 f=-0.505 shape=(1, 9000, 1)
logits [[ 0.90990174  0.9218299   0.913626   -4.7662134 ]]
Iteration 700 of 1000: loss=0.0445 " + "l1=0.00159" + "l2=0.0429 f=-0.5 shape=(1, 9000, 1)
logits [[ 0.919526   0.9036678  0.9185181 -4.7431436]]
Iteration 800 of 1000: loss=0.0409 " + "l1=0" + "l2=0.0409 f=-0.498 shape=(1, 9000, 1)
logits [[ 0.9021132   0.91089594  0.9066203  -4.7100234 ]]
Iteration 900 of 1000: loss=0.0386 " + "l1=0" + "l2=0.0386 f=-0.495 shape=(1, 9000, 1)
logits [[ 0.8966857  0.9071575  0.9034011 -4.689075 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.162 " + "l1=0.162" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.8205101  -0.11837419  1.4913805  -6.015437  ]]
Iteration 100 of 1000: loss=0.124 " + "l1=0.104" + "l2=0.0208 f=-0.476 shape=(1, 9000, 1)
logits [[ 2.1422455   0.25758204  1.3027027  -5.6065316 ]]
Iteration 200 of 1000: loss=0.107 " + "l1=0.0763" + "l2=0.0306 f=-0.492 shape=(1, 9000, 1)
logits [[ 1.8001635   0.41294014  1.228599   -5.410027  ]]
Iteration 300 of 1000: loss=0.0899 " + "l1=0.0531" + "l2=0.0368 f=-0.505 shape=(1, 9000, 1)
logits [[ 1.4953845  0.530298   1.1672848 -5.2113466]]
Iteration 400 of 1000: loss=0.0748 " + "l1=0.0308" + "l2=0.0439 f=-0.515 shape=(1, 9000, 1)
logits [[ 1.2129064  0.6521454  1.1150934 -5.040728 ]]
Iteration 500 of 1000: loss=0.0624 " + "l1=0.0194" + "l2=0.0431 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.0734078   0.72335494  1.075248   -4.9430437 ]]
Iteration 600 of 1000: loss=0.0548 " + "l1=0.0162" + "l2=0.0386 f=-0.512 shape=(1, 9000, 1)
logits [[ 1.0476693   0.75362754  1.0383668  -4.888761  ]]
Iteration 700 of 1000: loss=0.0493 " + "l1=0.0126" + "l2=0.0367 f=-0.508 shape=(1, 9000, 1)
logits [[ 1.0125718  0.783557   1.0067388 -4.8338065]]
Iteration 800 of 1000: loss=0.0452 " + "l1=0.00904" + "l2=0.0362 f=-0.504 shape=(1, 9000, 1)
logits [[ 0.98001266  0.81567377  0.97873783 -4.788737  ]]
Iteration 900 of 1000: loss=0.0416 " + "l1=0.00618" + "l2=0.0354 f=-0.501 shape=(1, 9000, 1)
logits [[ 0.9506482   0.84210306  0.95452094 -4.750348  ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.228 " + "l1=0.228" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.8205101  -0.11837419  1.4913805  -6.015437  ]]
Iteration 100 of 1000: loss=0.151 " + "l1=0.106" + "l2=0.0455 f=-0.493 shape=(1, 9000, 1)
logits [[ 1.793003    0.42734432  1.2339306  -5.427258  ]]
Iteration 200 of 1000: loss=0.115 " + "l1=0.0514" + "l2=0.0637 f=-0.513 shape=(1, 9000, 1)
logits [[ 1.3003542   0.63737863  1.1475898  -5.1366014 ]]
Iteration 300 of 1000: loss=0.0862 " + "l1=0.0247" + "l2=0.0615 f=-0.523 shape=(1, 9000, 1)
logits [[ 1.0719414   0.75276595  1.0680196  -4.98422   ]]
Iteration 400 of 1000: loss=0.0711 " + "l1=0.0157" + "l2=0.0554 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.0153974  0.8126935  1.0095342 -4.909529 ]]
Iteration 500 of 1000: loss=0.0595 " + "l1=0.00684" + "l2=0.0527 f=-0.513 shape=(1, 9000, 1)
logits [[ 0.9542185   0.8704835   0.95871615 -4.8354554 ]]
Iteration 600 of 1000: loss=0.0505 " + "l1=0.000588" + "l2=0.0499 f=-0.507 shape=(1, 9000, 1)
logits [[ 0.9175712   0.91372484  0.9213084  -4.780758  ]]
Iteration 700 of 1000: loss=0.0448 " + "l1=0.000784" + "l2=0.044 f=-0.502 shape=(1, 9000, 1)
logits [[ 0.91480017  0.90778035  0.9178991  -4.7484097 ]]
Iteration 800 of 1000: loss=0.0414 " + "l1=0.000124" + "l2=0.0413 f=-0.499 shape=(1, 9000, 1)
logits [[ 0.9013218   0.90936905  0.9109726  -4.717006  ]]
Iteration 900 of 1000: loss=0.0389 " + "l1=0.000372" + "l2=0.0385 f=-0.495 shape=(1, 9000, 1)
logits [[ 0.9059147   0.9023858   0.90718365 -4.6973104 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.195 " + "l1=0.195" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.8205101  -0.11837419  1.4913805  -6.015437  ]]
Iteration 100 of 1000: loss=0.14 " + "l1=0.108" + "l2=0.032 f=-0.484 shape=(1, 9000, 1)
logits [[ 1.9727272   0.34354827  1.2692306  -5.522056  ]]
Iteration 200 of 1000: loss=0.114 " + "l1=0.0686" + "l2=0.0452 f=-0.502 shape=(1, 9000, 1)
logits [[ 1.5543768   0.51958686  1.1866871  -5.2700853 ]]
Iteration 300 of 1000: loss=0.0891 " + "l1=0.0322" + "l2=0.0568 f=-0.521 shape=(1, 9000, 1)
logits [[ 1.1635023   0.67674273  1.1156106  -5.0414386 ]]
Iteration 400 of 1000: loss=0.0722 " + "l1=0.0211" + "l2=0.0511 f=-0.521 shape=(1, 9000, 1)
logits [[ 1.0624589   0.74376947  1.0622053  -4.9538817 ]]
Iteration 500 of 1000: loss=0.0617 " + "l1=0.0152" + "l2=0.0465 f=-0.516 shape=(1, 9000, 1)
logits [[ 1.0201548  0.7906208  1.0174598 -4.8931103]]
Iteration 600 of 1000: loss=0.0537 " + "l1=0.00919" + "l2=0.0445 f=-0.512 shape=(1, 9000, 1)
logits [[ 0.9696743   0.83746856  0.9761837  -4.831692  ]]
Iteration 700 of 1000: loss=0.0474 " + "l1=0.0043" + "l2=0.0431 f=-0.507 shape=(1, 9000, 1)
logits [[ 0.93374395  0.8767665   0.9416262  -4.7805066 ]]
Iteration 800 of 1000: loss=0.0428 " + "l1=0.000459" + "l2=0.0423 f=-0.502 shape=(1, 9000, 1)
logits [[ 0.91248256  0.90567994  0.91261154 -4.738631  ]]
Iteration 900 of 1000: loss=0.0396 " + "l1=3.13e-05" + "l2=0.0396 f=-0.499 shape=(1, 9000, 1)
logits [[ 0.898119    0.9069515   0.90742373 -4.7065005 ]]
--- 308.4271502494812 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0133 " + "l1=0.0133" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.8205101  -0.11837419  1.4913805  -6.015437  ]]
Iteration 100 of 1000: loss=0.0128 " + "l1=0.0125" + "l2=0.000318 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.7411807  -0.09927742  1.4891293  -5.9669495 ]]
Iteration 200 of 1000: loss=0.0127 " + "l1=0.0124" + "l2=0.000301 f=-0.46 shape=(1, 9000, 1)
logits [[ 2.7306383  -0.09878685  1.4902371  -5.9603086 ]]
Iteration 300 of 1000: loss=0.0126 " + "l1=0.0122" + "l2=0.000372 f=-0.46 shape=(1, 9000, 1)
logits [[ 2.7137055 -0.0964677  1.4910191 -5.949245 ]]
Iteration 400 of 1000: loss=0.0125 " + "l1=0.012" + "l2=0.000446 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.696473   -0.09439956  1.4919586  -5.937438  ]]
Iteration 500 of 1000: loss=0.0124 " + "l1=0.0119" + "l2=0.000521 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.6783824  -0.09218435  1.4932873  -5.9255786 ]]
Iteration 600 of 1000: loss=0.0123 " + "l1=0.0117" + "l2=0.000635 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.660452   -0.09000962  1.4940188  -5.9132757 ]]
Iteration 700 of 1000: loss=0.0122 " + "l1=0.0115" + "l2=0.000738 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.6425562  -0.08775225  1.4943483  -5.900411  ]]
Iteration 800 of 1000: loss=0.012 " + "l1=0.0113" + "l2=0.000754 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.62361    -0.08465186  1.4942049  -5.886891  ]]
Iteration 900 of 1000: loss=0.0121 " + "l1=0.0111" + "l2=0.000953 f=-0.464 shape=(1, 9000, 1)
logits [[ 2.6044586  -0.08169091  1.4940747  -5.873332  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.133 " + "l1=0.133" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.8205101  -0.11837419  1.4913805  -6.015437  ]]
Iteration 100 of 1000: loss=0.0898 " + "l1=0.0657" + "l2=0.0242 f=-0.491 shape=(1, 9000, 1)
logits [[ 2.1280982   0.06492005  1.4714398  -5.6288652 ]]
Iteration 200 of 1000: loss=0.0633 " + "l1=0.0207" + "l2=0.0426 f=-0.521 shape=(1, 9000, 1)
logits [[ 1.660722    0.17712541  1.4541355  -5.3773894 ]]
Iteration 300 of 1000: loss=0.0399 " + "l1=0.00133" + "l2=0.0385 f=-0.534 shape=(1, 9000, 1)
logits [[ 1.4638305   0.18329193  1.4505166  -5.2325506 ]]
Iteration 400 of 1000: loss=0.0295 " + "l1=0.000524" + "l2=0.029 f=-0.533 shape=(1, 9000, 1)
logits [[ 1.4470347   0.16985975  1.4417961  -5.189129  ]]
Iteration 500 of 1000: loss=0.0237 " + "l1=0" + "l2=0.0237 f=-0.53 shape=(1, 9000, 1)
logits [[ 1.4342626   0.16035934  1.4378366  -5.152714  ]]
Iteration 600 of 1000: loss=0.0195 " + "l1=0.00012" + "l2=0.0194 f=-0.526 shape=(1, 9000, 1)
logits [[ 1.4379143   0.15182842  1.4367126  -5.131697  ]]
Iteration 700 of 1000: loss=0.0165 " + "l1=0" + "l2=0.0165 f=-0.524 shape=(1, 9000, 1)
logits [[ 1.4318131   0.14706133  1.4348651  -5.111641  ]]
Iteration 800 of 1000: loss=0.0144 " + "l1=0" + "l2=0.0144 f=-0.523 shape=(1, 9000, 1)
logits [[ 1.429388    0.14219289  1.4329996  -5.09659   ]]
Iteration 900 of 1000: loss=0.0126 " + "l1=0.000418" + "l2=0.0122 f=-0.521 shape=(1, 9000, 1)
logits [[ 1.4352822   0.13762365  1.4310995  -5.088788  ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0731 " + "l1=0.0731" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.8205101  -0.11837419  1.4913805  -6.015437  ]]
Iteration 100 of 1000: loss=0.0606 " + "l1=0.0544" + "l2=0.00629 f=-0.472 shape=(1, 9000, 1)
logits [[ 2.4740644  -0.03055621  1.4857856  -5.815826  ]]
Iteration 200 of 1000: loss=0.0549 " + "l1=0.0456" + "l2=0.00925 f=-0.479 shape=(1, 9000, 1)
logits [[ 2.3147087e+00  2.3381058e-03  1.4849528e+00 -5.7192216e+00]]
Iteration 300 of 1000: loss=0.0492 " + "l1=0.0371" + "l2=0.0121 f=-0.487 shape=(1, 9000, 1)
logits [[ 2.149017    0.04037605  1.4741302  -5.6098266 ]]
Iteration 400 of 1000: loss=0.0431 " + "l1=0.0278" + "l2=0.0153 f=-0.497 shape=(1, 9000, 1)
logits [[ 1.9621139  0.0810916  1.457496  -5.487546 ]]
Iteration 500 of 1000: loss=0.0352 " + "l1=0.0159" + "l2=0.0193 f=-0.512 shape=(1, 9000, 1)
logits [[ 1.7261192   0.13698433  1.4374094  -5.347688  ]]
Iteration 600 of 1000: loss=0.0277 " + "l1=0.00544" + "l2=0.0223 f=-0.52 shape=(1, 9000, 1)
logits [[ 1.535567   0.167452   1.4366453 -5.221308 ]]
Iteration 700 of 1000: loss=0.0212 " + "l1=0" + "l2=0.0212 f=-0.524 shape=(1, 9000, 1)
logits [[ 1.4344136   0.17655854  1.4370742  -5.144143  ]]
Iteration 800 of 1000: loss=0.0173 " + "l1=0.000149" + "l2=0.0172 f=-0.521 shape=(1, 9000, 1)
logits [[ 1.4360584  0.1695459  1.4333516 -5.1235843]]
Iteration 900 of 1000: loss=0.0148 " + "l1=2.69e-05" + "l2=0.0148 f=-0.52 shape=(1, 9000, 1)
logits [[ 1.4322977   0.16336729  1.431808   -5.1060038 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0432 " + "l1=0.0432" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.8205101  -0.11837419  1.4913805  -6.015437  ]]
Iteration 100 of 1000: loss=0.0388 " + "l1=0.0365" + "l2=0.00227 f=-0.465 shape=(1, 9000, 1)
logits [[ 2.6104755  -0.06437574  1.4871478  -5.8950205 ]]
Iteration 200 of 1000: loss=0.0371 " + "l1=0.0341" + "l2=0.00293 f=-0.469 shape=(1, 9000, 1)
logits [[ 2.5386271  -0.05083485  1.488026   -5.850968  ]]
Iteration 300 of 1000: loss=0.0354 " + "l1=0.0317" + "l2=0.00363 f=-0.471 shape=(1, 9000, 1)
logits [[ 2.4670663  -0.03947713  1.4901488  -5.802207  ]]
Iteration 400 of 1000: loss=0.0337 " + "l1=0.0293" + "l2=0.00435 f=-0.473 shape=(1, 9000, 1)
logits [[ 2.39081   -0.0253374  1.488749  -5.7480564]]
Iteration 500 of 1000: loss=0.032 " + "l1=0.0269" + "l2=0.00504 f=-0.476 shape=(1, 9000, 1)
logits [[ 2.3135996  -0.01026891  1.4846162  -5.6909175 ]]
Iteration 600 of 1000: loss=0.0301 " + "l1=0.0244" + "l2=0.00575 f=-0.479 shape=(1, 9000, 1)
logits [[ 2.2288337e+00  4.3159146e-03  1.4790107e+00 -5.6282325e+00]]
Iteration 700 of 1000: loss=0.0283 " + "l1=0.0219" + "l2=0.00637 f=-0.482 shape=(1, 9000, 1)
logits [[ 2.1487126   0.01751964  1.4737532  -5.5691466 ]]
Iteration 800 of 1000: loss=0.0262 " + "l1=0.0188" + "l2=0.0074 f=-0.488 shape=(1, 9000, 1)
logits [[ 2.0426276   0.04110326  1.4636238  -5.501164  ]]
Iteration 900 of 1000: loss=0.0238 " + "l1=0.0153" + "l2=0.00848 f=-0.497 shape=(1, 9000, 1)
logits [[ 1.9209089   0.06941787  1.4497472  -5.426935  ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0581 " + "l1=0.0581" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.8205101  -0.11837419  1.4913805  -6.015437  ]]
Iteration 100 of 1000: loss=0.0502 " + "l1=0.0462" + "l2=0.00401 f=-0.469 shape=(1, 9000, 1)
logits [[ 2.5413284  -0.04639243  1.4854658  -5.8553567 ]]
Iteration 200 of 1000: loss=0.0469 " + "l1=0.0415" + "l2=0.00546 f=-0.473 shape=(1, 9000, 1)
logits [[ 2.435888   -0.02695027  1.4881822  -5.7897277 ]]
Iteration 300 of 1000: loss=0.0435 " + "l1=0.0364" + "l2=0.00713 f=-0.478 shape=(1, 9000, 1)
logits [[ 2.3176773e+00 -4.0827449e-03  1.4852118e+00 -5.7102795e+00]]
Iteration 400 of 1000: loss=0.0403 " + "l1=0.032" + "l2=0.00832 f=-0.482 shape=(1, 9000, 1)
logits [[ 2.2104287   0.01519046  1.4791402  -5.6308794 ]]
Iteration 500 of 1000: loss=0.0367 " + "l1=0.027" + "l2=0.00977 f=-0.486 shape=(1, 9000, 1)
logits [[ 2.0873244   0.04165947  1.4709378  -5.544119  ]]
Iteration 600 of 1000: loss=0.0325 " + "l1=0.021" + "l2=0.0116 f=-0.495 shape=(1, 9000, 1)
logits [[ 1.9351594   0.07451246  1.4557472  -5.4464235 ]]
Iteration 700 of 1000: loss=0.0277 " + "l1=0.0139" + "l2=0.0138 f=-0.507 shape=(1, 9000, 1)
logits [[ 1.7575094   0.11890551  1.439611   -5.343307  ]]
Iteration 800 of 1000: loss=0.0234 " + "l1=0.00792" + "l2=0.0154 f=-0.513 shape=(1, 9000, 1)
logits [[ 1.6150677   0.15003698  1.4341307  -5.2520533 ]]
Iteration 900 of 1000: loss=0.0188 " + "l1=0.00151" + "l2=0.0173 f=-0.52 shape=(1, 9000, 1)
logits [[ 1.472664    0.16784279  1.4381014  -5.1587844 ]]
--- 304.5163254737854 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0884 " + "l1=0.0884" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.8205101  -0.11837419  1.4913805  -6.015437  ]]
Iteration 100 of 1000: loss=0.0865 " + "l1=0.0855" + "l2=0.000969 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.6703563  -0.06189516  1.4514607  -5.879611  ]]
Iteration 200 of 1000: loss=0.0859 " + "l1=0.0848" + "l2=0.00111 f=-0.454 shape=(1, 9000, 1)
logits [[ 2.6332917  -0.04973347  1.4404216  -5.8418026 ]]
Iteration 300 of 1000: loss=0.0853 " + "l1=0.0838" + "l2=0.00142 f=-0.454 shape=(1, 9000, 1)
logits [[ 2.5877142  -0.03586201  1.4281346  -5.795862  ]]
Iteration 400 of 1000: loss=0.0846 " + "l1=0.0829" + "l2=0.00172 f=-0.453 shape=(1, 9000, 1)
logits [[ 2.540733   -0.02248879  1.4165517  -5.747849  ]]
Iteration 500 of 1000: loss=0.0839 " + "l1=0.0819" + "l2=0.00203 f=-0.453 shape=(1, 9000, 1)
logits [[ 2.4924037  -0.00944395  1.4052562  -5.6996365 ]]
Iteration 600 of 1000: loss=0.0833 " + "l1=0.081" + "l2=0.00236 f=-0.453 shape=(1, 9000, 1)
logits [[ 2.4441054e+00  3.0480269e-03  1.3939400e+00 -5.6512084e+00]]
Iteration 700 of 1000: loss=0.0827 " + "l1=0.08" + "l2=0.00269 f=-0.453 shape=(1, 9000, 1)
logits [[ 2.3950727   0.01457119  1.3832486  -5.6037908 ]]
Iteration 800 of 1000: loss=0.082 " + "l1=0.079" + "l2=0.00301 f=-0.454 shape=(1, 9000, 1)
logits [[ 2.3439283   0.02530027  1.3726722  -5.5560246 ]]
Iteration 900 of 1000: loss=0.0813 " + "l1=0.078" + "l2=0.00333 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.2909207   0.03634313  1.3618072  -5.5076666 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.884 " + "l1=0.884" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.8205101  -0.11837419  1.4913805  -6.015437  ]]
Iteration 100 of 1000: loss=0.683 " + "l1=0.581" + "l2=0.102 f=-0.488 shape=(1, 9000, 1)
logits [[ 1.1430988   0.43500203  1.1367607  -4.6675177 ]]
Iteration 200 of 1000: loss=0.608 " + "l1=0.524" + "l2=0.0843 f=-0.465 shape=(1, 9000, 1)
logits [[ 0.97148836  0.44651324  0.97914755 -4.2558713 ]]
Iteration 300 of 1000: loss=0.563 " + "l1=0.476" + "l2=0.0872 f=-0.442 shape=(1, 9000, 1)
logits [[ 0.8261829   0.47283298  0.84550834 -3.9115117 ]]
Iteration 400 of 1000: loss=0.53 " + "l1=0.439" + "l2=0.0905 f=-0.423 shape=(1, 9000, 1)
logits [[ 0.69203866  0.5101281   0.74821883 -3.6424584 ]]
Iteration 500 of 1000: loss=0.5 " + "l1=0.399" + "l2=0.102 f=-0.416 shape=(1, 9000, 1)
logits [[ 0.43288764  0.58843184  0.6493577  -3.336087  ]]
Iteration 600 of 1000: loss=0.476 " + "l1=0.37" + "l2=0.105 f=-0.408 shape=(1, 9000, 1)
logits [[ 0.28463718  0.5913552   0.5974498  -3.1056454 ]]
Iteration 700 of 1000: loss=0.456 " + "l1=0.345" + "l2=0.111 f=-0.401 shape=(1, 9000, 1)
logits [[ 0.14419669  0.5647151   0.56707674 -2.8811843 ]]
Iteration 800 of 1000: loss=0.438 " + "l1=0.321" + "l2=0.117 f=-0.394 shape=(1, 9000, 1)
logits [[ 0.03963134  0.5308961   0.53305435 -2.6796255 ]]
Iteration 900 of 1000: loss=0.426 " + "l1=0.305" + "l2=0.121 f=-0.387 shape=(1, 9000, 1)
logits [[-0.03129171  0.5102181   0.5125096  -2.5385334 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.84 " + "l1=8.84" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.8205101  -0.11837419  1.4913805  -6.015437  ]]
Iteration 100 of 1000: loss=2.78 " + "l1=1.42" + "l2=1.36 f=-0.29 shape=(1, 9000, 1)
logits [[-0.38930348  0.21974276  0.21331939 -1.2032522 ]]
Iteration 200 of 1000: loss=1.23 " + "l1=0.00655" + "l2=1.23 f=-0.218 shape=(1, 9000, 1)
logits [[-0.77027977 -0.03601909 -0.02920615 -0.03575515]]
Iteration 300 of 1000: loss=0.905 " + "l1=0.0156" + "l2=0.889 f=-0.208 shape=(1, 9000, 1)
logits [[-0.76421684 -0.02599209 -0.01245116 -0.0280463 ]]
Iteration 400 of 1000: loss=0.74 " + "l1=0" + "l2=0.74 f=-0.208 shape=(1, 9000, 1)
logits [[-0.82682145  0.00262553 -0.02014415  0.0106703 ]]
Iteration 500 of 1000: loss=0.644 " + "l1=0.00657" + "l2=0.637 f=-0.206 shape=(1, 9000, 1)
logits [[-8.3209234e-01  4.3422226e-03  5.8406466e-03 -7.3266774e-04]]
Iteration 600 of 1000: loss=0.571 " + "l1=0" + "l2=0.571 f=-0.209 shape=(1, 9000, 1)
logits [[-0.87055165  0.00376363  0.01196771  0.01885528]]
Iteration 700 of 1000: loss=0.518 " + "l1=0" + "l2=0.518 f=-0.212 shape=(1, 9000, 1)
logits [[-0.9060777   0.01220621  0.01586976  0.02981929]]
Iteration 800 of 1000: loss=0.479 " + "l1=0" + "l2=0.479 f=-0.211 shape=(1, 9000, 1)
logits [[-0.9120109  -0.0063874   0.0172153   0.05594438]]
Iteration 900 of 1000: loss=0.441 " + "l1=0" + "l2=0.441 f=-0.214 shape=(1, 9000, 1)
logits [[-0.92573667  0.02279583  0.00960409  0.03540797]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.86 " + "l1=4.86" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.8205101  -0.11837419  1.4913805  -6.015437  ]]
Iteration 100 of 1000: loss=2.16 " + "l1=1.57" + "l2=0.594 f=-0.363 shape=(1, 9000, 1)
logits [[ 0.09253762  0.43486723  0.43606052 -2.4149346 ]]
Iteration 200 of 1000: loss=1.37 " + "l1=0.534" + "l2=0.837 f=-0.265 shape=(1, 9000, 1)
logits [[-0.48498     0.13526061  0.12403353 -0.8358918 ]]
Iteration 300 of 1000: loss=0.804 " + "l1=0.00922" + "l2=0.795 f=-0.202 shape=(1, 9000, 1)
logits [[-0.7554219  -0.01941541 -0.00832419 -0.02508193]]
Iteration 400 of 1000: loss=0.633 " + "l1=0.00194" + "l2=0.631 f=-0.201 shape=(1, 9000, 1)
logits [[-7.8681326e-01 -1.9062104e-02  3.0160178e-03 -5.0932914e-04]]
Iteration 500 of 1000: loss=0.546 " + "l1=0" + "l2=0.546 f=-0.202 shape=(1, 9000, 1)
logits [[-8.2563680e-01 -6.6797249e-04  7.3874672e-03  1.2685902e-02]]
Iteration 600 of 1000: loss=0.484 " + "l1=0" + "l2=0.484 f=-0.209 shape=(1, 9000, 1)
logits [[-0.8844325   0.00686649  0.01381705  0.02653129]]
Iteration 700 of 1000: loss=0.438 " + "l1=0" + "l2=0.438 f=-0.213 shape=(1, 9000, 1)
logits [[-0.92710704  0.01544312  0.02027048  0.04076263]]
Iteration 800 of 1000: loss=0.403 " + "l1=0" + "l2=0.403 f=-0.212 shape=(1, 9000, 1)
logits [[-9.3583691e-01 -7.0801005e-05  3.3211887e-02  5.2984916e-02]]
Iteration 900 of 1000: loss=0.372 " + "l1=0.00086" + "l2=0.371 f=-0.218 shape=(1, 9000, 1)
logits [[-0.9688331   0.03230087  0.03348054  0.03191737]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.87 " + "l1=2.87" + "l2=0 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.8205101  -0.11837419  1.4913805  -6.015437  ]]
Iteration 100 of 1000: loss=1.57 " + "l1=1.24" + "l2=0.326 f=-0.406 shape=(1, 9000, 1)
logits [[ 0.38701794  0.600895    0.60494083 -3.2167745 ]]
Iteration 200 of 1000: loss=1.23 " + "l1=0.852" + "l2=0.382 f=-0.346 shape=(1, 9000, 1)
logits [[ 0.1016878   0.37929922  0.37669465 -2.242499  ]]
Iteration 300 of 1000: loss=0.964 " + "l1=0.499" + "l2=0.466 f=-0.293 shape=(1, 9000, 1)
logits [[-0.2943462   0.21520373  0.22036417 -1.3145804 ]]
Iteration 400 of 1000: loss=0.743 " + "l1=0.222" + "l2=0.521 f=-0.248 shape=(1, 9000, 1)
logits [[-0.572903    0.08798165  0.08928928 -0.5948346 ]]
Iteration 500 of 1000: loss=0.542 " + "l1=0.00815" + "l2=0.534 f=-0.216 shape=(1, 9000, 1)
logits [[-0.821229   -0.0110415  -0.00252086 -0.02759425]]
Iteration 600 of 1000: loss=0.449 " + "l1=0.00232" + "l2=0.447 f=-0.224 shape=(1, 9000, 1)
logits [[-0.9267268   0.01479542  0.01008194  0.00766449]]
Iteration 700 of 1000: loss=0.406 " + "l1=0.00335" + "l2=0.403 f=-0.227 shape=(1, 9000, 1)
logits [[-0.9588002   0.01193509  0.02409821  0.01378465]]
Iteration 800 of 1000: loss=0.376 " + "l1=0" + "l2=0.376 f=-0.231 shape=(1, 9000, 1)
logits [[-1.0050842   0.01775762  0.02588261  0.03860269]]
Iteration 900 of 1000: loss=0.35 " + "l1=0" + "l2=0.35 f=-0.235 shape=(1, 9000, 1)
logits [[-1.0470821   0.02722217  0.035866    0.0423558 ]]
--- 310.91187739372253 seconds ---
Adv result:3
Loading record A02425
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.101 " + "l1=0.101" + "l2=0 f=-0.762 shape=(1, 9000, 1)
logits [[ 6.036451 -4.086658  3.838049 -8.835135]]
Iteration 100 of 1000: loss=0.101 " + "l1=0.1" + "l2=0.000323 f=-0.757 shape=(1, 9000, 1)
logits [[ 5.996016  -4.0478926  3.8077588 -8.782882 ]]
Iteration 200 of 1000: loss=0.101 " + "l1=0.1" + "l2=0.00033 f=-0.755 shape=(1, 9000, 1)
logits [[ 5.989899  -4.039072   3.8012471 -8.773683 ]]
Iteration 300 of 1000: loss=0.1 " + "l1=0.1" + "l2=0.00038 f=-0.754 shape=(1, 9000, 1)
logits [[ 5.9813657 -4.0299006  3.7939978 -8.761532 ]]
Iteration 400 of 1000: loss=0.1 " + "l1=0.0999" + "l2=0.000482 f=-0.753 shape=(1, 9000, 1)
logits [[ 5.972207  -4.020447   3.7864509 -8.748368 ]]
Iteration 500 of 1000: loss=0.1 " + "l1=0.0997" + "l2=0.000555 f=-0.751 shape=(1, 9000, 1)
logits [[ 5.9628954 -4.0107255  3.7787826 -8.734912 ]]
Iteration 600 of 1000: loss=0.1 " + "l1=0.0995" + "l2=0.000694 f=-0.749 shape=(1, 9000, 1)
logits [[ 5.9531965 -4.0005226  3.770743  -8.720874 ]]
Iteration 700 of 1000: loss=0.1 " + "l1=0.0994" + "l2=0.000845 f=-0.748 shape=(1, 9000, 1)
logits [[ 5.944079  -3.9916644  3.7635138 -8.707533 ]]
Iteration 800 of 1000: loss=0.1 " + "l1=0.0992" + "l2=0.000908 f=-0.747 shape=(1, 9000, 1)
logits [[ 5.9357066 -3.9839962  3.7571082 -8.695045 ]]
Iteration 900 of 1000: loss=0.1 " + "l1=0.099" + "l2=0.00111 f=-0.745 shape=(1, 9000, 1)
logits [[ 5.9270887 -3.9760606  3.7505655 -8.682056 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.01 " + "l1=1.01" + "l2=0 f=-0.762 shape=(1, 9000, 1)
logits [[ 6.036451 -4.086658  3.838049 -8.835135]]
Iteration 100 of 1000: loss=0.968 " + "l1=0.943" + "l2=0.025 f=-0.715 shape=(1, 9000, 1)
logits [[ 5.7056746 -3.7210765  3.5553708 -8.398245 ]]
Iteration 200 of 1000: loss=0.941 " + "l1=0.896" + "l2=0.0441 f=-0.69 shape=(1, 9000, 1)
logits [[ 5.5033545 -3.461546   3.3271685 -8.1284075]]
Iteration 300 of 1000: loss=0.921 " + "l1=0.867" + "l2=0.054 f=-0.667 shape=(1, 9000, 1)
logits [[ 5.3702884 -3.300824   3.1946034 -7.9335403]]
Iteration 400 of 1000: loss=0.907 " + "l1=0.846" + "l2=0.061 f=-0.648 shape=(1, 9000, 1)
logits [[ 5.2641892 -3.195325   3.109856  -7.7701344]]
Iteration 500 of 1000: loss=0.895 " + "l1=0.829" + "l2=0.0657 f=-0.633 shape=(1, 9000, 1)
logits [[ 5.1719737 -3.12168    3.042702  -7.624399 ]]
Iteration 600 of 1000: loss=0.886 " + "l1=0.816" + "l2=0.0695 f=-0.621 shape=(1, 9000, 1)
logits [[ 5.0894256 -3.072066   2.9928331 -7.492818 ]]
Iteration 700 of 1000: loss=0.877 " + "l1=0.804" + "l2=0.0725 f=-0.607 shape=(1, 9000, 1)
logits [[ 5.0109377 -3.0304558  2.9521508 -7.361966 ]]
Iteration 800 of 1000: loss=0.867 " + "l1=0.788" + "l2=0.0783 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.916269  -2.9668171  2.9013011 -7.2079897]]
Iteration 900 of 1000: loss=0.857 " + "l1=0.773" + "l2=0.0834 f=-0.574 shape=(1, 9000, 1)
logits [[ 4.8265963 -2.9049413  2.852042  -7.068245 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.1 " + "l1=10.1" + "l2=0 f=-0.762 shape=(1, 9000, 1)
logits [[ 6.036451 -4.086658  3.838049 -8.835135]]
Iteration 100 of 1000: loss=6.17 " + "l1=4.37" + "l2=1.8 f=-0.329 shape=(1, 9000, 1)
logits [[ 2.7614949 -1.6106935  1.9008127 -4.369522 ]]
Iteration 200 of 1000: loss=4.7 " + "l1=2.24" + "l2=2.45 f=-0.248 shape=(1, 9000, 1)
logits [[ 1.5183973 -0.7254452  1.2458922 -3.032318 ]]
Iteration 300 of 1000: loss=3.86 " + "l1=1.19" + "l2=2.68 f=-0.249 shape=(1, 9000, 1)
logits [[ 0.8924551  -0.29711476  0.83125865 -2.4222221 ]]
Iteration 400 of 1000: loss=2.97 " + "l1=0.362" + "l2=2.61 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.45961517  0.0974546   0.45705542 -1.9383938 ]]
Iteration 500 of 1000: loss=2.35 " + "l1=0.0122" + "l2=2.34 f=-0.234 shape=(1, 9000, 1)
logits [[ 0.2612935  0.2565709  0.2687385 -1.7210062]]
Iteration 600 of 1000: loss=2.07 " + "l1=0" + "l2=2.07 f=-0.245 shape=(1, 9000, 1)
logits [[ 0.23217168  0.2406122   0.22302876 -1.6754497 ]]
Iteration 700 of 1000: loss=1.88 " + "l1=0.0037" + "l2=1.87 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.19999206  0.19629188  0.18658201 -1.5755068 ]]
Iteration 800 of 1000: loss=1.77 " + "l1=0" + "l2=1.77 f=-0.244 shape=(1, 9000, 1)
logits [[ 0.1648864   0.17500436  0.16896504 -1.4846265 ]]
Iteration 900 of 1000: loss=1.7 " + "l1=0" + "l2=1.7 f=-0.242 shape=(1, 9000, 1)
logits [[ 0.1478804   0.15803456  0.15744834 -1.4306275 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.57 " + "l1=5.57" + "l2=0 f=-0.762 shape=(1, 9000, 1)
logits [[ 6.036451 -4.086658  3.838049 -8.835135]]
Iteration 100 of 1000: loss=4.13 " + "l1=3.36" + "l2=0.771 f=-0.459 shape=(1, 9000, 1)
logits [[ 3.8916676 -2.212684   2.3773994 -5.8908305]]
Iteration 200 of 1000: loss=3.6 " + "l1=2.69" + "l2=0.912 f=-0.346 shape=(1, 9000, 1)
logits [[ 3.0983794 -1.7940309  2.0128753 -4.701736 ]]
Iteration 300 of 1000: loss=3.26 " + "l1=2.28" + "l2=0.981 f=-0.282 shape=(1, 9000, 1)
logits [[ 2.5985217 -1.5395329  1.7644072 -3.9517953]]
Iteration 400 of 1000: loss=2.99 " + "l1=1.94" + "l2=1.06 f=-0.248 shape=(1, 9000, 1)
logits [[ 2.1823041 -1.3379205  1.564118  -3.3999987]]
Iteration 500 of 1000: loss=2.67 " + "l1=1.44" + "l2=1.23 f=-0.236 shape=(1, 9000, 1)
logits [[ 1.712461  -0.9013854  1.1794345 -2.9342916]]
Iteration 600 of 1000: loss=2.39 " + "l1=1.05" + "l2=1.34 f=-0.227 shape=(1, 9000, 1)
logits [[ 1.3158609  -0.5908369   0.92833155 -2.561619  ]]
Iteration 700 of 1000: loss=2.13 " + "l1=0.613" + "l2=1.52 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.82298124 -0.29230404  0.7364086  -2.1905365 ]]
Iteration 800 of 1000: loss=1.93 " + "l1=0.362" + "l2=1.57 f=-0.226 shape=(1, 9000, 1)
logits [[ 0.5551813  -0.10363162  0.5347939  -1.8915561 ]]
Iteration 900 of 1000: loss=1.73 " + "l1=0.181" + "l2=1.55 f=-0.241 shape=(1, 9000, 1)
logits [[ 0.3419572   0.01233527  0.33719003 -1.6571755 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=7.85 " + "l1=7.85" + "l2=0 f=-0.762 shape=(1, 9000, 1)
logits [[ 6.036451 -4.086658  3.838049 -8.835135]]
Iteration 100 of 1000: loss=5.23 " + "l1=3.96" + "l2=1.27 f=-0.385 shape=(1, 9000, 1)
logits [[ 3.2426703 -1.865501   2.100786  -5.0196624]]
Iteration 200 of 1000: loss=4.4 " + "l1=2.95" + "l2=1.45 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.3811038 -1.4300922  1.7289155 -3.7607946]]
Iteration 300 of 1000: loss=3.84 " + "l1=2.11" + "l2=1.73 f=-0.24 shape=(1, 9000, 1)
logits [[ 1.7001832 -1.016912   1.3312097 -2.9747941]]
Iteration 400 of 1000: loss=3.28 " + "l1=1.41" + "l2=1.87 f=-0.227 shape=(1, 9000, 1)
logits [[ 1.241415  -0.5838648  1.0044526 -2.5698442]]
Iteration 500 of 1000: loss=2.63 " + "l1=0.573" + "l2=2.06 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.6471699  -0.09175891  0.6393743  -2.075197  ]]
Iteration 600 of 1000: loss=2.18 " + "l1=0.162" + "l2=2.02 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.36442748  0.15581752  0.36453888 -1.8299906 ]]
Iteration 700 of 1000: loss=1.88 " + "l1=0.0102" + "l2=1.87 f=-0.256 shape=(1, 9000, 1)
logits [[ 0.23186484  0.21913393  0.23232181 -1.7075374 ]]
Iteration 800 of 1000: loss=1.77 " + "l1=0" + "l2=1.77 f=-0.26 shape=(1, 9000, 1)
logits [[ 0.17631361  0.20521443  0.19946955 -1.6203235 ]]
Iteration 900 of 1000: loss=1.69 " + "l1=0.0111" + "l2=1.67 f=-0.26 shape=(1, 9000, 1)
logits [[ 0.18595114  0.17167425  0.16711901 -1.5646693 ]]
--- 304.9327304363251 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.022 " + "l1=0.022" + "l2=0 f=-0.762 shape=(1, 9000, 1)
logits [[ 6.036451 -4.086658  3.838049 -8.835135]]
Iteration 100 of 1000: loss=0.0218 " + "l1=0.0217" + "l2=0.000167 f=-0.763 shape=(1, 9000, 1)
logits [[ 6.0125685 -4.0991645  3.847002  -8.813418 ]]
Iteration 200 of 1000: loss=0.0218 " + "l1=0.0216" + "l2=0.000137 f=-0.763 shape=(1, 9000, 1)
logits [[ 6.012112  -4.1004715  3.848005  -8.813153 ]]
Iteration 300 of 1000: loss=0.0218 " + "l1=0.0216" + "l2=0.000173 f=-0.764 shape=(1, 9000, 1)
logits [[ 6.0096087 -4.102413   3.8494446 -8.811009 ]]
Iteration 400 of 1000: loss=0.0218 " + "l1=0.0216" + "l2=0.000228 f=-0.764 shape=(1, 9000, 1)
logits [[ 6.006659  -4.104055   3.8506413 -8.808426 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.22 " + "l1=0.22" + "l2=0 f=-0.762 shape=(1, 9000, 1)
logits [[ 6.036451 -4.086658  3.838049 -8.835135]]
Iteration 100 of 1000: loss=0.206 " + "l1=0.198" + "l2=0.00798 f=-0.773 shape=(1, 9000, 1)
logits [[ 5.874348  -4.169658   3.8981528 -8.694872 ]]
Iteration 200 of 1000: loss=0.201 " + "l1=0.19" + "l2=0.0111 f=-0.778 shape=(1, 9000, 1)
logits [[ 5.815214  -4.20098    3.9195461 -8.643965 ]]
Iteration 300 of 1000: loss=0.196 " + "l1=0.182" + "l2=0.0139 f=-0.781 shape=(1, 9000, 1)
logits [[ 5.7627096 -4.2254825  3.9381309 -8.598653 ]]
Iteration 400 of 1000: loss=0.192 " + "l1=0.175" + "l2=0.0172 f=-0.784 shape=(1, 9000, 1)
logits [[ 5.7102923 -4.247462   3.959158  -8.556839 ]]
Iteration 500 of 1000: loss=0.189 " + "l1=0.168" + "l2=0.0201 f=-0.786 shape=(1, 9000, 1)
logits [[ 5.6644416 -4.2645445  3.9796999 -8.522212 ]]
Iteration 600 of 1000: loss=0.185 " + "l1=0.162" + "l2=0.0228 f=-0.787 shape=(1, 9000, 1)
logits [[ 5.6159635 -4.2730513  3.9943492 -8.485495 ]]
Iteration 700 of 1000: loss=0.182 " + "l1=0.157" + "l2=0.0246 f=-0.787 shape=(1, 9000, 1)
logits [[ 5.5692368 -4.2742276  3.9993083 -8.443917 ]]
Iteration 800 of 1000: loss=0.178 " + "l1=0.152" + "l2=0.026 f=-0.787 shape=(1, 9000, 1)
logits [[ 5.52103   -4.2711434  3.996865  -8.395589 ]]
Iteration 900 of 1000: loss=0.175 " + "l1=0.148" + "l2=0.0272 f=-0.786 shape=(1, 9000, 1)
logits [[ 5.472063 -4.265505  3.992223 -8.344243]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.2 " + "l1=2.2" + "l2=0 f=-0.762 shape=(1, 9000, 1)
logits [[ 6.036451 -4.086658  3.838049 -8.835135]]
Iteration 100 of 1000: loss=0.705 " + "l1=0.0175" + "l2=0.688 f=-0.757 shape=(1, 9000, 1)
logits [[ 3.9480357 -4.3443017  3.930557  -6.562802 ]]
Iteration 200 of 1000: loss=0.463 " + "l1=0" + "l2=0.463 f=-0.749 shape=(1, 9000, 1)
logits [[ 3.9194248 -4.3443227  3.9278915 -6.497478 ]]
Iteration 300 of 1000: loss=0.39 " + "l1=0.00947" + "l2=0.381 f=-0.75 shape=(1, 9000, 1)
logits [[ 3.9663725 -4.3768616  3.9569018 -6.545999 ]]
Iteration 400 of 1000: loss=0.346 " + "l1=4.34e-05" + "l2=0.346 f=-0.754 shape=(1, 9000, 1)
logits [[ 3.9614403 -4.395224   3.961397  -6.542005 ]]
Iteration 500 of 1000: loss=0.324 " + "l1=0" + "l2=0.324 f=-0.753 shape=(1, 9000, 1)
logits [[ 3.9512844 -4.397122   3.9576173 -6.5238476]]
Iteration 600 of 1000: loss=0.305 " + "l1=0.00794" + "l2=0.297 f=-0.753 shape=(1, 9000, 1)
logits [[ 3.9595942 -4.397232   3.9516556 -6.5271797]]
Iteration 700 of 1000: loss=0.28 " + "l1=0.000287" + "l2=0.28 f=-0.756 shape=(1, 9000, 1)
logits [[ 3.9509122 -4.407326   3.9506254 -6.517049 ]]
Iteration 800 of 1000: loss=0.266 " + "l1=0" + "l2=0.266 f=-0.761 shape=(1, 9000, 1)
logits [[ 3.938456  -4.416193   3.9460113 -6.513377 ]]
Iteration 900 of 1000: loss=0.249 " + "l1=0" + "l2=0.249 f=-0.766 shape=(1, 9000, 1)
logits [[ 3.9290385 -4.418744   3.932789  -6.507488 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.21 " + "l1=1.21" + "l2=0 f=-0.762 shape=(1, 9000, 1)
logits [[ 6.036451 -4.086658  3.838049 -8.835135]]
Iteration 100 of 1000: loss=0.749 " + "l1=0.478" + "l2=0.272 f=-0.788 shape=(1, 9000, 1)
logits [[ 4.8462067 -4.3324246  3.9773054 -7.642067 ]]
Iteration 200 of 1000: loss=0.524 " + "l1=0.144" + "l2=0.379 f=-0.775 shape=(1, 9000, 1)
logits [[ 4.2004604 -4.3705344  3.9384458 -6.8678336]]
Iteration 300 of 1000: loss=0.362 " + "l1=0.00308" + "l2=0.359 f=-0.757 shape=(1, 9000, 1)
logits [[ 3.9670498 -4.3946075  3.9614444 -6.5615215]]
Iteration 400 of 1000: loss=0.322 " + "l1=0" + "l2=0.322 f=-0.758 shape=(1, 9000, 1)
logits [[ 3.9431913 -4.398815   3.9489024 -6.5233307]]
Iteration 500 of 1000: loss=0.298 " + "l1=0.0028" + "l2=0.296 f=-0.759 shape=(1, 9000, 1)
logits [[ 3.9389749 -4.3896437  3.9338927 -6.517594 ]]
Iteration 600 of 1000: loss=0.279 " + "l1=0" + "l2=0.279 f=-0.76 shape=(1, 9000, 1)
logits [[ 3.924356  -4.386759   3.9254937 -6.5041933]]
Iteration 700 of 1000: loss=0.266 " + "l1=0.0084" + "l2=0.257 f=-0.763 shape=(1, 9000, 1)
logits [[ 3.9283638 -4.3807445  3.9130926 -6.5123634]]
Iteration 800 of 1000: loss=0.248 " + "l1=0" + "l2=0.248 f=-0.764 shape=(1, 9000, 1)
logits [[ 3.9014633 -4.3745627  3.9036167 -6.487107 ]]
Iteration 900 of 1000: loss=0.239 " + "l1=0" + "l2=0.239 f=-0.764 shape=(1, 9000, 1)
logits [[ 3.8812497 -4.3686194  3.8909984 -6.4597726]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.714 " + "l1=0.714" + "l2=0 f=-0.762 shape=(1, 9000, 1)
logits [[ 6.036451 -4.086658  3.838049 -8.835135]]
Iteration 100 of 1000: loss=0.557 " + "l1=0.464" + "l2=0.0934 f=-0.795 shape=(1, 9000, 1)
logits [[ 5.4197154 -4.305186   3.9933624 -8.288856 ]]
Iteration 200 of 1000: loss=0.484 " + "l1=0.358" + "l2=0.126 f=-0.792 shape=(1, 9000, 1)
logits [[ 5.114391  -4.3299575  4.011582  -7.9648275]]
Iteration 300 of 1000: loss=0.429 " + "l1=0.268" + "l2=0.161 f=-0.786 shape=(1, 9000, 1)
logits [[ 4.8150725 -4.34173    3.9900355 -7.608938 ]]
Iteration 400 of 1000: loss=0.377 " + "l1=0.174" + "l2=0.204 f=-0.778 shape=(1, 9000, 1)
logits [[ 4.4960628 -4.354205   3.9620101 -7.217799 ]]
Iteration 500 of 1000: loss=0.329 " + "l1=0.0894" + "l2=0.239 f=-0.769 shape=(1, 9000, 1)
logits [[ 4.22933   -4.3631535  3.9541717 -6.8959146]]
Iteration 600 of 1000: loss=0.293 " + "l1=0.0303" + "l2=0.262 f=-0.767 shape=(1, 9000, 1)
logits [[ 4.028582  -4.3775263  3.9354575 -6.6537323]]
Iteration 700 of 1000: loss=0.265 " + "l1=0.00696" + "l2=0.258 f=-0.765 shape=(1, 9000, 1)
logits [[ 3.9353871 -4.3743525  3.91398   -6.5369916]]
Iteration 800 of 1000: loss=0.247 " + "l1=0.0025" + "l2=0.245 f=-0.765 shape=(1, 9000, 1)
logits [[ 3.903587  -4.361904   3.8959064 -6.49861  ]]
Iteration 900 of 1000: loss=0.235 " + "l1=0.00187" + "l2=0.233 f=-0.765 shape=(1, 9000, 1)
logits [[ 3.8883789 -4.356971   3.8826292 -6.4741874]]
--- 280.50057649612427 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.149 " + "l1=0.149" + "l2=0 f=-0.762 shape=(1, 9000, 1)
logits [[ 6.036451 -4.086658  3.838049 -8.835135]]
Iteration 100 of 1000: loss=0.148 " + "l1=0.147" + "l2=0.000615 f=-0.754 shape=(1, 9000, 1)
logits [[ 5.973138  -4.067064   3.8096793 -8.732357 ]]
Iteration 200 of 1000: loss=0.147 " + "l1=0.147" + "l2=0.000677 f=-0.752 shape=(1, 9000, 1)
logits [[ 5.959113  -4.0606966  3.8016098 -8.708267 ]]
Iteration 300 of 1000: loss=0.147 " + "l1=0.146" + "l2=0.000805 f=-0.75 shape=(1, 9000, 1)
logits [[ 5.943203  -4.053858   3.7924883 -8.68137  ]]
Iteration 400 of 1000: loss=0.147 " + "l1=0.146" + "l2=0.000938 f=-0.748 shape=(1, 9000, 1)
logits [[ 5.9283295 -4.047297   3.7835681 -8.655945 ]]
Iteration 500 of 1000: loss=0.147 " + "l1=0.145" + "l2=0.00112 f=-0.746 shape=(1, 9000, 1)
logits [[ 5.913924  -4.040116   3.7742567 -8.6316805]]
Iteration 600 of 1000: loss=0.146 " + "l1=0.145" + "l2=0.00127 f=-0.744 shape=(1, 9000, 1)
logits [[ 5.89949   -4.032924   3.7651675 -8.60771  ]]
Iteration 700 of 1000: loss=0.146 " + "l1=0.145" + "l2=0.00149 f=-0.742 shape=(1, 9000, 1)
logits [[ 5.8850813 -4.0254183  3.7559886 -8.583793 ]]
Iteration 800 of 1000: loss=0.146 " + "l1=0.144" + "l2=0.00175 f=-0.74 shape=(1, 9000, 1)
logits [[ 5.871441  -4.0184126  3.7473564 -8.560982 ]]
Iteration 900 of 1000: loss=0.146 " + "l1=0.144" + "l2=0.00176 f=-0.738 shape=(1, 9000, 1)
logits [[ 5.8583717 -4.012242   3.7392535 -8.539231 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.49 " + "l1=1.49" + "l2=0 f=-0.762 shape=(1, 9000, 1)
logits [[ 6.036451 -4.086658  3.838049 -8.835135]]
Iteration 100 of 1000: loss=1.38 " + "l1=1.32" + "l2=0.0583 f=-0.691 shape=(1, 9000, 1)
logits [[ 5.4112663 -3.892838   3.5472414 -7.8297434]]
Iteration 200 of 1000: loss=1.32 " + "l1=1.22" + "l2=0.0997 f=-0.647 shape=(1, 9000, 1)
logits [[ 5.0120316 -3.6938858  3.2979693 -7.2046933]]
Iteration 300 of 1000: loss=1.27 " + "l1=1.13" + "l2=0.134 f=-0.613 shape=(1, 9000, 1)
logits [[ 4.6748405 -3.6076937  3.1450765 -6.666036 ]]
Iteration 400 of 1000: loss=1.22 " + "l1=1.06" + "l2=0.162 f=-0.582 shape=(1, 9000, 1)
logits [[ 4.384993  -3.5169222  3.0056148 -6.2017517]]
Iteration 500 of 1000: loss=1.18 " + "l1=1" + "l2=0.18 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.180095  -3.442797   2.9054086 -5.855129 ]]
Iteration 600 of 1000: loss=1.15 " + "l1=0.965" + "l2=0.187 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.041779  -3.378318   2.8294282 -5.611997 ]]
Iteration 700 of 1000: loss=1.12 " + "l1=0.927" + "l2=0.195 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.9037502 -3.31548    2.7557082 -5.3689003]]
Iteration 800 of 1000: loss=1.09 " + "l1=0.884" + "l2=0.208 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.7429159 -3.2369423  2.668627  -5.1001434]]
Iteration 900 of 1000: loss=1.07 " + "l1=0.854" + "l2=0.214 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.6320612 -3.1787894  2.6026082 -4.9097934]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=14.9 " + "l1=14.9" + "l2=0 f=-0.762 shape=(1, 9000, 1)
logits [[ 6.036451 -4.086658  3.838049 -8.835135]]
Iteration 100 of 1000: loss=6.63 " + "l1=3.55" + "l2=3.08 f=-0.18 shape=(1, 9000, 1)
logits [[ 1.6773132 -2.2037637  1.6779121 -1.8700191]]
Iteration 200 of 1000: loss=4.95 " + "l1=1.72" + "l2=3.24 f=-0.0804 shape=(1, 9000, 1)
logits [[ 1.0282413  -1.7083418   1.03746    -0.67893404]]
Iteration 300 of 1000: loss=4.07 " + "l1=0.73" + "l2=3.34 f=-0.0453 shape=(1, 9000, 1)
logits [[ 0.61502546 -1.3749199   0.65449244 -0.0756323 ]]
Iteration 400 of 1000: loss=3.33 " + "l1=0.0251" + "l2=3.31 f=-0.0507 shape=(1, 9000, 1)
logits [[ 0.27909538 -1.1020362   0.3226441   0.29754287]]
Iteration 500 of 1000: loss=2.81 " + "l1=0.00118" + "l2=2.8 f=-0.0576 shape=(1, 9000, 1)
logits [[ 0.2849567  -1.082342    0.28333881  0.2837811 ]]
Iteration 600 of 1000: loss=2.38 " + "l1=0" + "l2=2.38 f=-0.0811 shape=(1, 9000, 1)
logits [[ 0.24705145 -1.0855799   0.25440145  0.25977558]]
Iteration 700 of 1000: loss=2.1 " + "l1=0.0143" + "l2=2.09 f=-0.102 shape=(1, 9000, 1)
logits [[ 0.22780406 -1.0861835   0.23259093  0.21831724]]
Iteration 800 of 1000: loss=1.91 " + "l1=0" + "l2=1.91 f=-0.115 shape=(1, 9000, 1)
logits [[ 0.20019363 -1.110723    0.21036346  0.23851702]]
Iteration 900 of 1000: loss=1.76 " + "l1=0" + "l2=1.76 f=-0.128 shape=(1, 9000, 1)
logits [[ 0.18235219 -1.1261632   0.19779973  0.23305741]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=8.18 " + "l1=8.18" + "l2=0 f=-0.762 shape=(1, 9000, 1)
logits [[ 6.036451 -4.086658  3.838049 -8.835135]]
Iteration 100 of 1000: loss=4.76 " + "l1=3.1" + "l2=1.66 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.3692636 -2.890128   2.3679385 -3.2743468]]
Iteration 200 of 1000: loss=3.9 " + "l1=2.27" + "l2=1.63 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.8648244 -2.444654   1.8657037 -2.2531483]]
Iteration 300 of 1000: loss=3.42 " + "l1=1.69" + "l2=1.73 f=-0.171 shape=(1, 9000, 1)
logits [[ 1.5117029 -2.1489675  1.5160007 -1.5626566]]
Iteration 400 of 1000: loss=3.06 " + "l1=1.28" + "l2=1.78 f=-0.125 shape=(1, 9000, 1)
logits [[ 1.2576175 -1.9459153  1.2528644 -1.0656189]]
Iteration 500 of 1000: loss=2.81 " + "l1=1.04" + "l2=1.77 f=-0.096 shape=(1, 9000, 1)
logits [[ 1.1001341 -1.7908897  1.096596  -0.790019 ]]
Iteration 600 of 1000: loss=2.57 " + "l1=0.784" + "l2=1.79 f=-0.0853 shape=(1, 9000, 1)
logits [[ 0.9013235  -1.6205496   0.9013145  -0.52335095]]
Iteration 700 of 1000: loss=2.32 " + "l1=0.483" + "l2=1.83 f=-0.075 shape=(1, 9000, 1)
logits [[ 0.6702463 -1.4290429  0.6667794 -0.2080532]]
Iteration 800 of 1000: loss=1.96 " + "l1=0.122" + "l2=1.84 f=-0.0565 shape=(1, 9000, 1)
logits [[ 0.4078977  -1.2480936   0.41777351  0.19662216]]
Iteration 900 of 1000: loss=1.59 " + "l1=0" + "l2=1.59 f=-0.0795 shape=(1, 9000, 1)
logits [[ 0.30714017 -1.3203456   0.33895144  0.3562712 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.83 " + "l1=4.83" + "l2=0 f=-0.762 shape=(1, 9000, 1)
logits [[ 6.036451 -4.086658  3.838049 -8.835135]]
Iteration 100 of 1000: loss=3.48 " + "l1=2.71" + "l2=0.765 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.453767  -3.2755313  2.7552848 -4.8995857]]
Iteration 200 of 1000: loss=2.99 " + "l1=2.06" + "l2=0.933 f=-0.397 shape=(1, 9000, 1)
logits [[ 2.6573591 -3.0462883  2.4694867 -3.6686487]]
Iteration 300 of 1000: loss=2.66 " + "l1=1.64" + "l2=1.02 f=-0.329 shape=(1, 9000, 1)
logits [[ 2.1970415 -2.8398216  2.187334  -2.8622665]]
Iteration 400 of 1000: loss=2.45 " + "l1=1.41" + "l2=1.04 f=-0.28 shape=(1, 9000, 1)
logits [[ 1.9486517 -2.604414   1.9389744 -2.4024737]]
Iteration 500 of 1000: loss=2.28 " + "l1=1.24" + "l2=1.04 f=-0.249 shape=(1, 9000, 1)
logits [[ 1.7436244 -2.4235168  1.7450398 -2.0609446]]
Iteration 600 of 1000: loss=2.13 " + "l1=1.07" + "l2=1.06 f=-0.217 shape=(1, 9000, 1)
logits [[ 1.5622953 -2.2630794  1.5549417 -1.720721 ]]
Iteration 700 of 1000: loss=1.98 " + "l1=0.895" + "l2=1.09 f=-0.188 shape=(1, 9000, 1)
logits [[ 1.3675989 -2.1024058  1.367873  -1.387066 ]]
Iteration 800 of 1000: loss=1.85 " + "l1=0.775" + "l2=1.07 f=-0.168 shape=(1, 9000, 1)
logits [[ 1.2488768 -2.0309741  1.245056  -1.1351614]]
Iteration 900 of 1000: loss=1.71 " + "l1=0.652" + "l2=1.06 f=-0.137 shape=(1, 9000, 1)
logits [[ 1.137141  -1.9530185  1.1358799 -0.868829 ]]
--- 312.23690819740295 seconds ---
Adv result:3
Loading record A02426
(1, 3300)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0462 " + "l1=0.0462" + "l2=0 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.0786412 -1.5450315 -1.1604234 -2.5701926]]
Iteration 100 of 1000: loss=0.0447 " + "l1=0.0435" + "l2=0.00117 f=-0.547 shape=(1, 9000, 1)
logits [[ 2.9395528 -1.4094206 -1.1785474 -2.5385418]]
Iteration 200 of 1000: loss=0.0443 " + "l1=0.0429" + "l2=0.00137 f=-0.547 shape=(1, 9000, 1)
logits [[ 2.9074626 -1.3826514 -1.1804575 -2.531451 ]]
Iteration 300 of 1000: loss=0.044 " + "l1=0.0424" + "l2=0.00155 f=-0.547 shape=(1, 9000, 1)
logits [[ 2.8815303 -1.363231  -1.1816031 -2.5228708]]
Iteration 400 of 1000: loss=0.0438 " + "l1=0.0421" + "l2=0.00172 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.8587382 -1.3469169 -1.182306  -2.5128963]]
Iteration 500 of 1000: loss=0.0436 " + "l1=0.0417" + "l2=0.00189 f=-0.545 shape=(1, 9000, 1)
logits [[ 2.8379567 -1.3315775 -1.1831174 -2.5041592]]
Iteration 600 of 1000: loss=0.0434 " + "l1=0.0412" + "l2=0.00218 f=-0.545 shape=(1, 9000, 1)
logits [[ 2.8129196 -1.3105451 -1.1850691 -2.4954364]]
Iteration 700 of 1000: loss=0.0432 " + "l1=0.0408" + "l2=0.00239 f=-0.543 shape=(1, 9000, 1)
logits [[ 2.790191  -1.2928569 -1.186073  -2.484232 ]]
Iteration 800 of 1000: loss=0.043 " + "l1=0.0403" + "l2=0.00271 f=-0.543 shape=(1, 9000, 1)
logits [[ 2.7629108 -1.27002   -1.1878546 -2.475642 ]]
Iteration 900 of 1000: loss=0.0428 " + "l1=0.0399" + "l2=0.0029 f=-0.542 shape=(1, 9000, 1)
logits [[ 2.7394545 -1.2549008 -1.1873754 -2.4640539]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.462 " + "l1=0.462" + "l2=0 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.0786412 -1.5450315 -1.1604234 -2.5701926]]
Iteration 100 of 1000: loss=0.222 " + "l1=0.0591" + "l2=0.163 f=-0.523 shape=(1, 9000, 1)
logits [[ 0.6834971   0.09206446 -0.6296633  -2.2393875 ]]
Iteration 200 of 1000: loss=0.139 " + "l1=0" + "l2=0.139 f=-0.53 shape=(1, 9000, 1)
logits [[ 0.31228617  0.31504467 -0.63032466 -2.1187    ]]
Iteration 300 of 1000: loss=0.112 " + "l1=0.000418" + "l2=0.112 f=-0.524 shape=(1, 9000, 1)
logits [[ 0.25240603  0.24822104 -0.5242759  -2.0711782 ]]
Iteration 400 of 1000: loss=0.0963 " + "l1=0.000645" + "l2=0.0956 f=-0.521 shape=(1, 9000, 1)
logits [[ 0.23182115  0.22536658 -0.5010203  -2.0384347 ]]
Iteration 500 of 1000: loss=0.0856 " + "l1=0" + "l2=0.0856 f=-0.519 shape=(1, 9000, 1)
logits [[ 0.22200799  0.23576538 -0.5227695  -2.0091121 ]]
Iteration 600 of 1000: loss=0.079 " + "l1=0" + "l2=0.079 f=-0.514 shape=(1, 9000, 1)
logits [[ 0.22895145  0.23552732 -0.5403691  -1.9796627 ]]
Iteration 700 of 1000: loss=0.0756 " + "l1=0.000544" + "l2=0.075 f=-0.51 shape=(1, 9000, 1)
logits [[ 0.24032551  0.23488781 -0.55362195 -1.9634606 ]]
Iteration 800 of 1000: loss=0.073 " + "l1=0" + "l2=0.073 f=-0.504 shape=(1, 9000, 1)
logits [[ 0.2156809   0.25071338 -0.56656665 -1.9158196 ]]
Iteration 900 of 1000: loss=0.0689 " + "l1=0" + "l2=0.0689 f=-0.495 shape=(1, 9000, 1)
logits [[ 0.22110975  0.2362589  -0.56769246 -1.8704237 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.254 " + "l1=0.254" + "l2=0 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.0786412 -1.5450315 -1.1604234 -2.5701926]]
Iteration 100 of 1000: loss=0.209 " + "l1=0.179" + "l2=0.0303 f=-0.569 shape=(1, 9000, 1)
logits [[ 2.3381553 -0.9098081 -1.2782605 -2.4264216]]
Iteration 200 of 1000: loss=0.157 " + "l1=0.0959" + "l2=0.0612 f=-0.509 shape=(1, 9000, 1)
logits [[ 1.4055564  -0.33860135 -0.79551584 -2.307655  ]]
Iteration 300 of 1000: loss=0.126 " + "l1=0.0498" + "l2=0.0759 f=-0.509 shape=(1, 9000, 1)
logits [[ 0.8342381  -0.07042806 -0.59976906 -2.1985693 ]]
Iteration 400 of 1000: loss=0.109 " + "l1=0.0235" + "l2=0.0851 f=-0.515 shape=(1, 9000, 1)
logits [[ 0.5052124   0.07713108 -0.55232304 -2.0891535 ]]
Iteration 500 of 1000: loss=0.0938 " + "l1=0.00238" + "l2=0.0914 f=-0.523 shape=(1, 9000, 1)
logits [[ 0.22829935  0.18505307 -0.5202083  -1.9854457 ]]
Iteration 600 of 1000: loss=0.086 " + "l1=0.00162" + "l2=0.0843 f=-0.513 shape=(1, 9000, 1)
logits [[ 0.21359485  0.18406658 -0.5289417  -1.9219863 ]]
Iteration 700 of 1000: loss=0.0804 " + "l1=0" + "l2=0.0804 f=-0.505 shape=(1, 9000, 1)
logits [[ 0.18764743  0.1991458  -0.5307792  -1.8770193 ]]
Iteration 800 of 1000: loss=0.074 " + "l1=0" + "l2=0.074 f=-0.489 shape=(1, 9000, 1)
logits [[ 0.17173219  0.17414518 -0.48071128 -1.8226147 ]]
Iteration 900 of 1000: loss=0.0697 " + "l1=0.000345" + "l2=0.0693 f=-0.479 shape=(1, 9000, 1)
logits [[ 0.17073575  0.16446303 -0.4548955  -1.7974195 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.15 " + "l1=0.15" + "l2=0 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.0786412 -1.5450315 -1.1604234 -2.5701926]]
Iteration 100 of 1000: loss=0.135 " + "l1=0.125" + "l2=0.00966 f=-0.554 shape=(1, 9000, 1)
logits [[ 2.6824398 -1.1698155 -1.222649  -2.5062685]]
Iteration 200 of 1000: loss=0.13 " + "l1=0.116" + "l2=0.0135 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.516471  -1.0613844 -1.2347938 -2.4443598]]
Iteration 300 of 1000: loss=0.115 " + "l1=0.0859" + "l2=0.0293 f=-0.512 shape=(1, 9000, 1)
logits [[ 1.9608572  -0.68372506 -0.92673624 -2.396702  ]]
Iteration 400 of 1000: loss=0.0992 " + "l1=0.0625" + "l2=0.0367 f=-0.477 shape=(1, 9000, 1)
logits [[ 1.4572431  -0.46506473 -0.61118364 -2.2897115 ]]
Iteration 500 of 1000: loss=0.0909 " + "l1=0.053" + "l2=0.0378 f=-0.474 shape=(1, 9000, 1)
logits [[ 1.2699726  -0.36119434 -0.56903845 -2.2343152 ]]
Iteration 600 of 1000: loss=0.0839 " + "l1=0.0445" + "l2=0.0394 f=-0.473 shape=(1, 9000, 1)
logits [[ 1.1051186 -0.2634762 -0.5552701 -2.1788943]]
Iteration 700 of 1000: loss=0.0803 " + "l1=0.0392" + "l2=0.041 f=-0.473 shape=(1, 9000, 1)
logits [[ 1.0057954  -0.20065646 -0.5494937  -2.1484594 ]]
Iteration 800 of 1000: loss=0.078 " + "l1=0.0373" + "l2=0.0407 f=-0.472 shape=(1, 9000, 1)
logits [[ 0.96540314 -0.18186848 -0.5482971  -2.1234272 ]]
Iteration 900 of 1000: loss=0.0752 " + "l1=0.0347" + "l2=0.0405 f=-0.472 shape=(1, 9000, 1)
logits [[ 0.90320456 -0.16457026 -0.53811485 -2.0894163 ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.202 " + "l1=0.202" + "l2=0 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.0786412 -1.5450315 -1.1604234 -2.5701926]]
Iteration 100 of 1000: loss=0.174 " + "l1=0.156" + "l2=0.0185 f=-0.561 shape=(1, 9000, 1)
logits [[ 2.5160751 -1.0400277 -1.2516019 -2.4670746]]
Iteration 200 of 1000: loss=0.148 " + "l1=0.106" + "l2=0.0424 f=-0.525 shape=(1, 9000, 1)
logits [[ 1.8308675 -0.5855189 -0.9345895 -2.410272 ]]
Iteration 300 of 1000: loss=0.121 " + "l1=0.0675" + "l2=0.0531 f=-0.488 shape=(1, 9000, 1)
logits [[ 1.2293046  -0.31289172 -0.587833   -2.2805836 ]]
Iteration 400 of 1000: loss=0.109 " + "l1=0.0513" + "l2=0.0574 f=-0.491 shape=(1, 9000, 1)
logits [[ 0.98767006 -0.18473524 -0.56372416 -2.2045577 ]]
Iteration 500 of 1000: loss=0.099 " + "l1=0.0401" + "l2=0.0589 f=-0.496 shape=(1, 9000, 1)
logits [[ 0.81958747 -0.09688982 -0.5656795  -2.1401236 ]]
Iteration 600 of 1000: loss=0.0915 " + "l1=0.0286" + "l2=0.0629 f=-0.495 shape=(1, 9000, 1)
logits [[ 0.6243797  -0.03015838 -0.5194139  -2.0565226 ]]
Iteration 700 of 1000: loss=0.0836 " + "l1=0.0205" + "l2=0.0631 f=-0.493 shape=(1, 9000, 1)
logits [[ 0.48883286  0.02037666 -0.5089146  -1.9734371 ]]
Iteration 800 of 1000: loss=0.075 " + "l1=0.0117" + "l2=0.0632 f=-0.496 shape=(1, 9000, 1)
logits [[ 0.35058138  0.08225022 -0.5031308  -1.9118731 ]]
Iteration 900 of 1000: loss=0.0681 " + "l1=0.00354" + "l2=0.0645 f=-0.484 shape=(1, 9000, 1)
logits [[ 0.18738022  0.10647321 -0.4388216  -1.7907724 ]]
--- 313.93962812423706 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0424 " + "l1=0.0424" + "l2=0 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.0786412 -1.5450315 -1.1604234 -2.5701926]]
Iteration 100 of 1000: loss=0.0418 " + "l1=0.0415" + "l2=0.000359 f=-0.545 shape=(1, 9000, 1)
logits [[ 3.0032926 -1.5072255 -1.1442156 -2.5303435]]
Iteration 200 of 1000: loss=0.0417 " + "l1=0.0412" + "l2=0.000422 f=-0.543 shape=(1, 9000, 1)
logits [[ 2.9848938 -1.4974078 -1.1397133 -2.5205672]]
Iteration 300 of 1000: loss=0.0416 " + "l1=0.041" + "l2=0.000525 f=-0.542 shape=(1, 9000, 1)
logits [[ 2.9685762 -1.4908744 -1.1351557 -2.5106907]]
Iteration 400 of 1000: loss=0.0415 " + "l1=0.0409" + "l2=0.000609 f=-0.541 shape=(1, 9000, 1)
logits [[ 2.9544528 -1.4861927 -1.1310011 -2.5009944]]
Iteration 500 of 1000: loss=0.0414 " + "l1=0.0407" + "l2=0.000735 f=-0.54 shape=(1, 9000, 1)
logits [[ 2.9410813 -1.4823586 -1.1273981 -2.491735 ]]
Iteration 600 of 1000: loss=0.0414 " + "l1=0.0405" + "l2=0.000834 f=-0.54 shape=(1, 9000, 1)
logits [[ 2.9283938 -1.4803218 -1.1235187 -2.482733 ]]
Iteration 700 of 1000: loss=0.0413 " + "l1=0.0404" + "l2=0.000961 f=-0.539 shape=(1, 9000, 1)
logits [[ 2.9171033 -1.4789164 -1.1199585 -2.4745915]]
Iteration 800 of 1000: loss=0.0413 " + "l1=0.0402" + "l2=0.00108 f=-0.538 shape=(1, 9000, 1)
logits [[ 2.904002  -1.4754899 -1.1160259 -2.466159 ]]
Iteration 900 of 1000: loss=0.0413 " + "l1=0.04" + "l2=0.00131 f=-0.538 shape=(1, 9000, 1)
logits [[ 2.890203  -1.4728328 -1.1116061 -2.4575136]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.424 " + "l1=0.424" + "l2=0 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.0786412 -1.5450315 -1.1604234 -2.5701926]]
Iteration 100 of 1000: loss=0.28 " + "l1=0.189" + "l2=0.0905 f=-0.465 shape=(1, 9000, 1)
logits [[ 1.5498803  -0.77767366 -0.34085757 -2.2903078 ]]
Iteration 200 of 1000: loss=0.224 " + "l1=0.136" + "l2=0.0879 f=-0.456 shape=(1, 9000, 1)
logits [[ 1.1599948  -0.72300553 -0.20419927 -2.0552576 ]]
Iteration 300 of 1000: loss=0.194 " + "l1=0.0998" + "l2=0.0946 f=-0.442 shape=(1, 9000, 1)
logits [[ 0.8693069  -0.6441891  -0.12917024 -1.8622493 ]]
Iteration 400 of 1000: loss=0.151 " + "l1=0.042" + "l2=0.109 f=-0.367 shape=(1, 9000, 1)
logits [[ 0.51483816 -0.627651    0.09436294 -1.4491497 ]]
Iteration 500 of 1000: loss=0.123 " + "l1=0.00715" + "l2=0.116 f=-0.342 shape=(1, 9000, 1)
logits [[ 0.22552048 -0.5923652   0.15397607 -1.1548501 ]]
Iteration 600 of 1000: loss=0.0996 " + "l1=0.00102" + "l2=0.0985 f=-0.331 shape=(1, 9000, 1)
logits [[ 0.16395271 -0.5864759   0.15374963 -1.0554564 ]]
Iteration 700 of 1000: loss=0.0881 " + "l1=0" + "l2=0.0881 f=-0.329 shape=(1, 9000, 1)
logits [[ 0.11802313 -0.5685009   0.14287637 -1.0099301 ]]
Iteration 800 of 1000: loss=0.063 " + "l1=0" + "l2=0.063 f=-0.346 shape=(1, 9000, 1)
logits [[ 0.15385176 -0.5959848   0.15530024 -1.0966064 ]]
Iteration 900 of 1000: loss=0.0548 " + "l1=0" + "l2=0.0548 f=-0.354 shape=(1, 9000, 1)
logits [[ 0.14620835 -0.58731955  0.1470389  -1.1227723 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.233 " + "l1=0.233" + "l2=0 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.0786412 -1.5450315 -1.1604234 -2.5701926]]
Iteration 100 of 1000: loss=0.216 " + "l1=0.206" + "l2=0.0107 f=-0.538 shape=(1, 9000, 1)
logits [[ 2.6617231 -1.3188277 -1.0785475 -2.416797 ]]
Iteration 200 of 1000: loss=0.19 " + "l1=0.162" + "l2=0.0278 f=-0.484 shape=(1, 9000, 1)
logits [[ 2.2388084  -1.1425334  -0.71442235 -2.3181674 ]]
Iteration 300 of 1000: loss=0.154 " + "l1=0.104" + "l2=0.0501 f=-0.436 shape=(1, 9000, 1)
logits [[ 1.6174031  -0.9577029  -0.27590054 -2.129247  ]]
Iteration 400 of 1000: loss=0.141 " + "l1=0.091" + "l2=0.05 f=-0.418 shape=(1, 9000, 1)
logits [[ 1.4409628 -0.9122722 -0.2131492 -1.9861217]]
Iteration 500 of 1000: loss=0.127 " + "l1=0.0746" + "l2=0.0519 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.1964779  -0.8341514  -0.16067934 -1.802109  ]]
Iteration 600 of 1000: loss=0.114 " + "l1=0.0598" + "l2=0.0542 f=-0.374 shape=(1, 9000, 1)
logits [[ 1.0084438  -0.8275176  -0.07960809 -1.5979168 ]]
Iteration 700 of 1000: loss=0.105 " + "l1=0.0494" + "l2=0.0553 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.85085124 -0.77542305 -0.04736025 -1.4878099 ]]
Iteration 800 of 1000: loss=0.0967 " + "l1=0.0386" + "l2=0.0581 f=-0.356 shape=(1, 9000, 1)
logits [[ 0.6884877  -0.7520554  -0.01347508 -1.3482285 ]]
Iteration 900 of 1000: loss=0.0886 " + "l1=0.0281" + "l2=0.0605 f=-0.346 shape=(1, 9000, 1)
logits [[ 0.5272449  -0.7337701   0.01609881 -1.1946843 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.329 " + "l1=0.329" + "l2=0 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.0786412 -1.5450315 -1.1604234 -2.5701926]]
Iteration 100 of 1000: loss=0.27 " + "l1=0.229" + "l2=0.0409 f=-0.486 shape=(1, 9000, 1)
logits [[ 2.2512085 -1.1601725 -0.7022033 -2.332858 ]]
Iteration 200 of 1000: loss=0.198 " + "l1=0.127" + "l2=0.0712 f=-0.435 shape=(1, 9000, 1)
logits [[ 1.4178872  -0.89834577 -0.22151218 -2.0400004 ]]
Iteration 300 of 1000: loss=0.172 " + "l1=0.0974" + "l2=0.0749 f=-0.42 shape=(1, 9000, 1)
logits [[ 1.1207534  -0.83558327 -0.13625766 -1.8282708 ]]
Iteration 400 of 1000: loss=0.15 " + "l1=0.0725" + "l2=0.0779 f=-0.393 shape=(1, 9000, 1)
logits [[ 0.85784715 -0.75355446 -0.0782493  -1.5983481 ]]
Iteration 500 of 1000: loss=0.13 " + "l1=0.049" + "l2=0.0813 f=-0.371 shape=(1, 9000, 1)
logits [[ 0.62652713 -0.6802876  -0.0056144  -1.4242189 ]]
Iteration 600 of 1000: loss=0.113 " + "l1=0.0262" + "l2=0.0863 f=-0.348 shape=(1, 9000, 1)
logits [[ 0.40175352 -0.63291854  0.06317611 -1.2223588 ]]
Iteration 700 of 1000: loss=0.0942 " + "l1=0.000649" + "l2=0.0935 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.13476592 -0.5897254   0.12639397 -0.96728957]]
Iteration 800 of 1000: loss=0.0773 " + "l1=0" + "l2=0.0773 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.10222537 -0.5936148   0.10238136 -0.87663084]]
Iteration 900 of 1000: loss=0.0642 " + "l1=0.000415" + "l2=0.0638 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.09037119 -0.59868985  0.08501264 -0.8407629 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.281 " + "l1=0.281" + "l2=0 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.0786412 -1.5450315 -1.1604234 -2.5701926]]
Iteration 100 of 1000: loss=0.241 " + "l1=0.207" + "l2=0.033 f=-0.489 shape=(1, 9000, 1)
logits [[ 2.3735774 -1.1880237 -0.7580649 -2.382314 ]]
Iteration 200 of 1000: loss=0.192 " + "l1=0.132" + "l2=0.0607 f=-0.454 shape=(1, 9000, 1)
logits [[ 1.6514674  -0.91881764 -0.33577678 -2.2134273 ]]
Iteration 300 of 1000: loss=0.166 " + "l1=0.104" + "l2=0.0623 f=-0.425 shape=(1, 9000, 1)
logits [[ 1.3674135  -0.89136434 -0.19658528 -1.9790068 ]]
Iteration 400 of 1000: loss=0.149 " + "l1=0.0854" + "l2=0.0633 f=-0.416 shape=(1, 9000, 1)
logits [[ 1.1270931  -0.8210669  -0.16262294 -1.8089342 ]]
Iteration 500 of 1000: loss=0.129 " + "l1=0.063" + "l2=0.066 f=-0.377 shape=(1, 9000, 1)
logits [[ 0.89081955 -0.7869129  -0.06042766 -1.5522785 ]]
Iteration 600 of 1000: loss=0.116 " + "l1=0.0478" + "l2=0.0682 f=-0.36 shape=(1, 9000, 1)
logits [[ 0.71410334 -0.7416636  -0.00692336 -1.4041039 ]]
Iteration 700 of 1000: loss=0.104 " + "l1=0.0338" + "l2=0.0699 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.53495955 -0.70746636  0.02403462 -1.2378508 ]]
Iteration 800 of 1000: loss=0.0908 " + "l1=0.0162" + "l2=0.0747 f=-0.335 shape=(1, 9000, 1)
logits [[ 0.3061407  -0.6729844   0.06236561 -1.0336249 ]]
Iteration 900 of 1000: loss=0.0766 " + "l1=0.000822" + "l2=0.0757 f=-0.328 shape=(1, 9000, 1)
logits [[ 0.06557357 -0.6124205   0.05316692 -0.82010555]]
--- 307.56024408340454 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0565 " + "l1=0.0565" + "l2=0 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.0786412 -1.5450315 -1.1604234 -2.5701926]]
Iteration 100 of 1000: loss=0.0551 " + "l1=0.0545" + "l2=0.000674 f=-0.541 shape=(1, 9000, 1)
logits [[ 2.9690504 -1.4916995 -1.1633029 -2.477344 ]]
Iteration 200 of 1000: loss=0.0547 " + "l1=0.0539" + "l2=0.000812 f=-0.539 shape=(1, 9000, 1)
logits [[ 2.9393623 -1.4823111 -1.1643889 -2.4494395]]
Iteration 300 of 1000: loss=0.0543 " + "l1=0.0533" + "l2=0.00102 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.9115803 -1.4753667 -1.165077  -2.419764 ]]
Iteration 400 of 1000: loss=0.054 " + "l1=0.0527" + "l2=0.00132 f=-0.535 shape=(1, 9000, 1)
logits [[ 2.8816102 -1.4670289 -1.1660334 -2.3887599]]
Iteration 500 of 1000: loss=0.0537 " + "l1=0.0521" + "l2=0.00162 f=-0.533 shape=(1, 9000, 1)
logits [[ 2.853229  -1.4618556 -1.1661929 -2.356938 ]]
Iteration 600 of 1000: loss=0.0534 " + "l1=0.0515" + "l2=0.00187 f=-0.531 shape=(1, 9000, 1)
logits [[ 2.826988  -1.4573191 -1.1662916 -2.3264165]]
Iteration 700 of 1000: loss=0.0532 " + "l1=0.051" + "l2=0.00218 f=-0.529 shape=(1, 9000, 1)
logits [[ 2.8026803 -1.4539919 -1.1668526 -2.2973917]]
Iteration 800 of 1000: loss=0.053 " + "l1=0.0505" + "l2=0.00247 f=-0.527 shape=(1, 9000, 1)
logits [[ 2.7795951 -1.4505178 -1.1675197 -2.2703276]]
Iteration 900 of 1000: loss=0.0528 " + "l1=0.05" + "l2=0.00278 f=-0.526 shape=(1, 9000, 1)
logits [[ 2.7562861 -1.4470203 -1.167752  -2.2445388]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.565 " + "l1=0.565" + "l2=0 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.0786412 -1.5450315 -1.1604234 -2.5701926]]
Iteration 100 of 1000: loss=0.401 " + "l1=0.309" + "l2=0.092 f=-0.516 shape=(1, 9000, 1)
logits [[ 1.5356486 -1.0011235 -1.0447322 -1.5520656]]
Iteration 200 of 1000: loss=0.284 " + "l1=0.142" + "l2=0.141 f=-0.417 shape=(1, 9000, 1)
logits [[ 0.53966665 -0.7258837  -0.5975368  -0.8841682 ]]
Iteration 300 of 1000: loss=0.141 " + "l1=0" + "l2=0.141 f=-0.368 shape=(1, 9000, 1)
logits [[-0.2589861  -0.6858251  -0.27346078 -0.2555501 ]]
Iteration 400 of 1000: loss=0.105 " + "l1=0.00214" + "l2=0.103 f=-0.369 shape=(1, 9000, 1)
logits [[-0.22472608 -0.7277067  -0.27832663 -0.24615261]]
Iteration 500 of 1000: loss=0.0861 " + "l1=0.00226" + "l2=0.0839 f=-0.367 shape=(1, 9000, 1)
logits [[-0.20259437 -0.75736266 -0.28387687 -0.22523516]]
Iteration 600 of 1000: loss=0.0714 " + "l1=0" + "l2=0.0714 f=-0.361 shape=(1, 9000, 1)
logits [[-0.2200582  -0.7575484  -0.2682547  -0.19760045]]
Iteration 700 of 1000: loss=0.0633 " + "l1=0.00164" + "l2=0.0616 f=-0.354 shape=(1, 9000, 1)
logits [[-0.18730268 -0.7681383  -0.25603703 -0.20372412]]
Iteration 800 of 1000: loss=0.0566 " + "l1=0" + "l2=0.0566 f=-0.351 shape=(1, 9000, 1)
logits [[-0.19925499 -0.7710409  -0.24672388 -0.18853849]]
Iteration 900 of 1000: loss=0.0521 " + "l1=0" + "l2=0.0521 f=-0.352 shape=(1, 9000, 1)
logits [[-0.21162382 -0.7720845  -0.23103859 -0.19180459]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.311 " + "l1=0.311" + "l2=0 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.0786412 -1.5450315 -1.1604234 -2.5701926]]
Iteration 100 of 1000: loss=0.272 " + "l1=0.25" + "l2=0.0226 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.4321237 -1.2703184 -1.1969213 -2.1093442]]
Iteration 200 of 1000: loss=0.237 " + "l1=0.192" + "l2=0.0453 f=-0.515 shape=(1, 9000, 1)
logits [[ 1.7978072 -1.128893  -1.0402597 -1.6884608]]
Iteration 300 of 1000: loss=0.21 " + "l1=0.158" + "l2=0.0521 f=-0.498 shape=(1, 9000, 1)
logits [[ 1.4894052 -1.0845159 -1.0136809 -1.3829013]]
Iteration 400 of 1000: loss=0.168 " + "l1=0.0928" + "l2=0.0754 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.6821923  -0.75187075 -0.5634744  -1.0043597 ]]
Iteration 500 of 1000: loss=0.131 " + "l1=0.0426" + "l2=0.0888 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.22041844 -0.6995707  -0.42543575 -0.55448097]]
Iteration 600 of 1000: loss=0.09 " + "l1=9.62e-05" + "l2=0.0899 f=-0.343 shape=(1, 9000, 1)
logits [[-0.1372591  -0.7477688  -0.34956104 -0.13900805]]
Iteration 700 of 1000: loss=0.0731 " + "l1=0" + "l2=0.0731 f=-0.348 shape=(1, 9000, 1)
logits [[-0.1480327  -0.794563   -0.30764255 -0.14110649]]
Iteration 800 of 1000: loss=0.0632 " + "l1=0" + "l2=0.0632 f=-0.344 shape=(1, 9000, 1)
logits [[-0.16563727 -0.7945022  -0.25568777 -0.15995699]]
Iteration 900 of 1000: loss=0.0567 " + "l1=0" + "l2=0.0567 f=-0.342 shape=(1, 9000, 1)
logits [[-0.18419223 -0.79069453 -0.23163013 -0.1615648 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.184 " + "l1=0.184" + "l2=0 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.0786412 -1.5450315 -1.1604234 -2.5701926]]
Iteration 100 of 1000: loss=0.171 " + "l1=0.165" + "l2=0.00646 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.7416708 -1.3855268 -1.1801596 -2.3215923]]
Iteration 200 of 1000: loss=0.164 " + "l1=0.154" + "l2=0.00987 f=-0.531 shape=(1, 9000, 1)
logits [[ 2.5772433 -1.3418683 -1.1844081 -2.1751196]]
Iteration 300 of 1000: loss=0.157 " + "l1=0.143" + "l2=0.014 f=-0.523 shape=(1, 9000, 1)
logits [[ 2.3902054 -1.3113028 -1.1563467 -2.0131266]]
Iteration 400 of 1000: loss=0.146 " + "l1=0.124" + "l2=0.022 f=-0.507 shape=(1, 9000, 1)
logits [[ 2.023116  -1.2461042 -1.0260524 -1.7774312]]
Iteration 500 of 1000: loss=0.136 " + "l1=0.111" + "l2=0.0258 f=-0.494 shape=(1, 9000, 1)
logits [[ 1.8110697 -1.1946484 -1.0006788 -1.5929102]]
Iteration 600 of 1000: loss=0.125 " + "l1=0.0925" + "l2=0.0326 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.4702911 -1.1251603 -0.8182445 -1.3772599]]
Iteration 700 of 1000: loss=0.108 " + "l1=0.0671" + "l2=0.0414 f=-0.408 shape=(1, 9000, 1)
logits [[ 0.89940494 -0.92707187 -0.440579   -1.1651498 ]]
Iteration 800 of 1000: loss=0.0901 " + "l1=0.0433" + "l2=0.0468 f=-0.369 shape=(1, 9000, 1)
logits [[ 0.48964557 -0.8607084  -0.2643235  -0.8422226 ]]
Iteration 900 of 1000: loss=0.0777 " + "l1=0.028" + "l2=0.0497 f=-0.357 shape=(1, 9000, 1)
logits [[ 0.23058781 -0.8118702  -0.2143015  -0.6314683 ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.247 " + "l1=0.247" + "l2=0 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.0786412 -1.5450315 -1.1604234 -2.5701926]]
Iteration 100 of 1000: loss=0.224 " + "l1=0.211" + "l2=0.0125 f=-0.535 shape=(1, 9000, 1)
logits [[ 2.6065981 -1.3346572 -1.1879911 -2.2251542]]
Iteration 200 of 1000: loss=0.209 " + "l1=0.187" + "l2=0.0224 f=-0.529 shape=(1, 9000, 1)
logits [[ 2.2868989 -1.2546453 -1.170805  -1.9782823]]
Iteration 300 of 1000: loss=0.187 " + "l1=0.15" + "l2=0.037 f=-0.512 shape=(1, 9000, 1)
logits [[ 1.7917507 -1.1592966 -1.0330863 -1.6454369]]
Iteration 400 of 1000: loss=0.17 " + "l1=0.127" + "l2=0.043 f=-0.494 shape=(1, 9000, 1)
logits [[ 1.508988   -1.1137698  -0.98628205 -1.3852806 ]]
Iteration 500 of 1000: loss=0.141 " + "l1=0.0848" + "l2=0.0566 f=-0.423 shape=(1, 9000, 1)
logits [[ 0.8847988  -0.93265647 -0.5899038  -1.0529994 ]]
Iteration 600 of 1000: loss=0.108 " + "l1=0.0384" + "l2=0.0699 f=-0.367 shape=(1, 9000, 1)
logits [[ 0.25852588 -0.8286264  -0.27866766 -0.61938596]]
Iteration 700 of 1000: loss=0.0862 " + "l1=0.0093" + "l2=0.0769 f=-0.342 shape=(1, 9000, 1)
logits [[-0.0783085  -0.7854772  -0.21451305 -0.2907851 ]]
Iteration 800 of 1000: loss=0.0684 " + "l1=0" + "l2=0.0684 f=-0.335 shape=(1, 9000, 1)
logits [[-0.16094929 -0.82697445 -0.1930421  -0.16040531]]
Iteration 900 of 1000: loss=0.0597 " + "l1=0.000187" + "l2=0.0595 f=-0.333 shape=(1, 9000, 1)
logits [[-0.15816687 -0.83992064 -0.17151353 -0.1624347 ]]
--- 314.4346685409546 seconds ---
Adv result:3
Loading record A02429
(1, 5364)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0495 " + "l1=0.0495" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 3.1159163  -1.832301    0.65945786 -3.3328197 ]]
Iteration 100 of 1000: loss=0.0488 " + "l1=0.0484" + "l2=0.000367 f=-0.353 shape=(1, 9000, 1)
logits [[ 3.0543427  -1.7886797   0.63695407 -3.3132915 ]]
Iteration 200 of 1000: loss=0.0486 " + "l1=0.0481" + "l2=0.000419 f=-0.354 shape=(1, 9000, 1)
logits [[ 3.036267   -1.7769239   0.63151807 -3.3079228 ]]
Iteration 300 of 1000: loss=0.0483 " + "l1=0.0478" + "l2=0.000557 f=-0.356 shape=(1, 9000, 1)
logits [[ 3.0140998 -1.7633079  0.6249135 -3.3003712]]
Iteration 400 of 1000: loss=0.0482 " + "l1=0.0474" + "l2=0.000744 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.9911733  -1.7497455   0.61749405 -3.291874  ]]
Iteration 500 of 1000: loss=0.048 " + "l1=0.0471" + "l2=0.000904 f=-0.36 shape=(1, 9000, 1)
logits [[ 2.9700553  -1.738138    0.60978276 -3.2820585 ]]
Iteration 600 of 1000: loss=0.0479 " + "l1=0.0468" + "l2=0.00107 f=-0.362 shape=(1, 9000, 1)
logits [[ 2.950747   -1.7287292   0.60239846 -3.2714486 ]]
Iteration 700 of 1000: loss=0.0477 " + "l1=0.0465" + "l2=0.00118 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.9324152 -1.7204565  0.5955662 -3.2601185]]
Iteration 800 of 1000: loss=0.0476 " + "l1=0.0463" + "l2=0.00136 f=-0.364 shape=(1, 9000, 1)
logits [[ 2.915134  -1.7133734  0.5888654 -3.2480025]]
Iteration 900 of 1000: loss=0.0476 " + "l1=0.0461" + "l2=0.00154 f=-0.365 shape=(1, 9000, 1)
logits [[ 2.8985767 -1.706614   0.5822848 -3.2355325]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.495 " + "l1=0.495" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 3.1159163  -1.832301    0.65945786 -3.3328197 ]]
Iteration 100 of 1000: loss=0.418 " + "l1=0.379" + "l2=0.0398 f=-0.415 shape=(1, 9000, 1)
logits [[ 2.425048   -1.3608866   0.44248638 -3.1667085 ]]
Iteration 200 of 1000: loss=0.36 " + "l1=0.283" + "l2=0.0761 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.8471107  -0.9875856   0.29619813 -3.034084  ]]
Iteration 300 of 1000: loss=0.307 " + "l1=0.209" + "l2=0.0984 f=-0.505 shape=(1, 9000, 1)
logits [[ 1.3840728  -0.70522803  0.1586159  -2.8581848 ]]
Iteration 400 of 1000: loss=0.279 " + "l1=0.167" + "l2=0.112 f=-0.508 shape=(1, 9000, 1)
logits [[ 1.1068898  -0.56372637  0.07271181 -2.648853  ]]
Iteration 500 of 1000: loss=0.255 " + "l1=0.131" + "l2=0.124 f=-0.511 shape=(1, 9000, 1)
logits [[ 0.8658347  -0.44078687 -0.02555682 -2.4440806 ]]
Iteration 600 of 1000: loss=0.229 " + "l1=0.0942" + "l2=0.134 f=-0.516 shape=(1, 9000, 1)
logits [[ 0.6373703  -0.30475807 -0.1318005  -2.2629168 ]]
Iteration 700 of 1000: loss=0.202 " + "l1=0.0579" + "l2=0.144 f=-0.52 shape=(1, 9000, 1)
logits [[ 0.40381444 -0.17532292 -0.23899435 -2.0704226 ]]
Iteration 800 of 1000: loss=0.178 " + "l1=0.0222" + "l2=0.156 f=-0.521 shape=(1, 9000, 1)
logits [[ 0.171503   -0.05051544 -0.3306739  -1.8754673 ]]
Iteration 900 of 1000: loss=0.159 " + "l1=0.00161" + "l2=0.158 f=-0.511 shape=(1, 9000, 1)
logits [[ 0.03421027  0.01814097 -0.38913593 -1.7067038 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.272 " + "l1=0.272" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 3.1159163  -1.832301    0.65945786 -3.3328197 ]]
Iteration 100 of 1000: loss=0.251 " + "l1=0.241" + "l2=0.0107 f=-0.382 shape=(1, 9000, 1)
logits [[ 2.7758505 -1.5977331  0.5507711 -3.2568424]]
Iteration 200 of 1000: loss=0.238 " + "l1=0.221" + "l2=0.0177 f=-0.403 shape=(1, 9000, 1)
logits [[ 2.5540295  -1.4579006   0.48951617 -3.1987443 ]]
Iteration 300 of 1000: loss=0.227 " + "l1=0.203" + "l2=0.0243 f=-0.42 shape=(1, 9000, 1)
logits [[ 2.342409  -1.341192   0.4267922 -3.107344 ]]
Iteration 400 of 1000: loss=0.215 " + "l1=0.181" + "l2=0.0337 f=-0.441 shape=(1, 9000, 1)
logits [[ 2.0991626 -1.1908166  0.3414143 -3.0137012]]
Iteration 500 of 1000: loss=0.202 " + "l1=0.157" + "l2=0.0448 f=-0.458 shape=(1, 9000, 1)
logits [[ 1.8420957  -1.0201175   0.25997868 -2.9120486 ]]
Iteration 600 of 1000: loss=0.194 " + "l1=0.144" + "l2=0.0504 f=-0.462 shape=(1, 9000, 1)
logits [[ 1.6854093  -0.933339    0.21375154 -2.814501  ]]
Iteration 700 of 1000: loss=0.188 " + "l1=0.134" + "l2=0.054 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.5680274  -0.8751278   0.16952455 -2.7157767 ]]
Iteration 800 of 1000: loss=0.182 " + "l1=0.123" + "l2=0.0587 f=-0.464 shape=(1, 9000, 1)
logits [[ 1.4395521 -0.7969072  0.1141658 -2.6138773]]
Iteration 900 of 1000: loss=0.175 " + "l1=0.113" + "l2=0.0616 f=-0.467 shape=(1, 9000, 1)
logits [[ 1.3198144  -0.74029046  0.06292908 -2.5096438 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.383 " + "l1=0.383" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 3.1159163  -1.832301    0.65945786 -3.3328197 ]]
Iteration 100 of 1000: loss=0.339 " + "l1=0.315" + "l2=0.0238 f=-0.4 shape=(1, 9000, 1)
logits [[ 2.5966787  -1.4737465   0.49585187 -3.2195284 ]]
Iteration 200 of 1000: loss=0.311 " + "l1=0.271" + "l2=0.0396 f=-0.43 shape=(1, 9000, 1)
logits [[ 2.2381015  -1.2594736   0.40264386 -3.1017237 ]]
Iteration 300 of 1000: loss=0.279 " + "l1=0.22" + "l2=0.0594 f=-0.469 shape=(1, 9000, 1)
logits [[ 1.8351488  -0.99923414  0.28144786 -2.9920685 ]]
Iteration 400 of 1000: loss=0.254 " + "l1=0.18" + "l2=0.0737 f=-0.489 shape=(1, 9000, 1)
logits [[ 1.5181525  -0.8090157   0.18666297 -2.8536117 ]]
Iteration 500 of 1000: loss=0.239 " + "l1=0.155" + "l2=0.0835 f=-0.493 shape=(1, 9000, 1)
logits [[ 1.30838    -0.69604737  0.11820358 -2.701745  ]]
Iteration 600 of 1000: loss=0.225 " + "l1=0.135" + "l2=0.0903 f=-0.494 shape=(1, 9000, 1)
logits [[ 1.1312739  -0.61013407  0.04470889 -2.5436678 ]]
Iteration 700 of 1000: loss=0.211 " + "l1=0.114" + "l2=0.0969 f=-0.496 shape=(1, 9000, 1)
logits [[ 0.9566248  -0.5138941  -0.03511934 -2.3920736 ]]
Iteration 800 of 1000: loss=0.195 " + "l1=0.0931" + "l2=0.102 f=-0.495 shape=(1, 9000, 1)
logits [[ 0.78620136 -0.41569772 -0.1161231  -2.236094  ]]
Iteration 900 of 1000: loss=0.18 " + "l1=0.0717" + "l2=0.108 f=-0.492 shape=(1, 9000, 1)
logits [[ 0.61106306 -0.31387618 -0.20070674 -2.065655  ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.439 " + "l1=0.439" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 3.1159163  -1.832301    0.65945786 -3.3328197 ]]
Iteration 100 of 1000: loss=0.38 " + "l1=0.349" + "l2=0.0313 f=-0.408 shape=(1, 9000, 1)
logits [[ 2.51112    -1.416169    0.46959624 -3.1960359 ]]
Iteration 200 of 1000: loss=0.338 " + "l1=0.28" + "l2=0.0575 f=-0.445 shape=(1, 9000, 1)
logits [[ 2.0390372  -1.1184199   0.35095415 -3.0528722 ]]
Iteration 300 of 1000: loss=0.294 " + "l1=0.214" + "l2=0.0802 f=-0.492 shape=(1, 9000, 1)
logits [[ 1.5816739  -0.83203804  0.21234994 -2.9310818 ]]
Iteration 400 of 1000: loss=0.269 " + "l1=0.176" + "l2=0.093 f=-0.501 shape=(1, 9000, 1)
logits [[ 1.301037   -0.6783308   0.12996897 -2.7554462 ]]
Iteration 500 of 1000: loss=0.25 " + "l1=0.148" + "l2=0.102 f=-0.501 shape=(1, 9000, 1)
logits [[ 1.0884657  -0.57501423  0.05243124 -2.5714304 ]]
Iteration 600 of 1000: loss=0.231 " + "l1=0.119" + "l2=0.112 f=-0.505 shape=(1, 9000, 1)
logits [[ 0.8846937  -0.46167332 -0.03958385 -2.4029865 ]]
Iteration 700 of 1000: loss=0.211 " + "l1=0.0928" + "l2=0.118 f=-0.505 shape=(1, 9000, 1)
logits [[ 0.69685763 -0.34855607 -0.1316967  -2.2378762 ]]
Iteration 800 of 1000: loss=0.19 " + "l1=0.064" + "l2=0.126 f=-0.509 shape=(1, 9000, 1)
logits [[ 0.48777118 -0.23335396 -0.22879289 -2.0607343 ]]
Iteration 900 of 1000: loss=0.172 " + "l1=0.0392" + "l2=0.133 f=-0.507 shape=(1, 9000, 1)
logits [[ 0.30397508 -0.13821661 -0.30620265 -1.8856028 ]]
--- 318.17302775382996 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0246 " + "l1=0.0246" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 3.1159163  -1.832301    0.65945786 -3.3328197 ]]
Iteration 100 of 1000: loss=0.0243 " + "l1=0.0242" + "l2=0.000165 f=-0.35 shape=(1, 9000, 1)
logits [[ 3.0818083  -1.8225522   0.66328204 -3.3212771 ]]
Iteration 200 of 1000: loss=0.0243 " + "l1=0.0241" + "l2=0.000155 f=-0.35 shape=(1, 9000, 1)
logits [[ 3.074972   -1.8192252   0.66335833 -3.3193212 ]]
Iteration 300 of 1000: loss=0.0242 " + "l1=0.024" + "l2=0.000188 f=-0.351 shape=(1, 9000, 1)
logits [[ 3.0665996 -1.8161597  0.663766  -3.3164756]]
Iteration 400 of 1000: loss=0.0242 " + "l1=0.0239" + "l2=0.00026 f=-0.351 shape=(1, 9000, 1)
logits [[ 3.057746   -1.813177    0.66415256 -3.3132658 ]]
Iteration 500 of 1000: loss=0.0242 " + "l1=0.0238" + "l2=0.000323 f=-0.352 shape=(1, 9000, 1)
logits [[ 3.049106  -1.8104128  0.6644513 -3.3098636]]
Iteration 600 of 1000: loss=0.0241 " + "l1=0.0238" + "l2=0.000354 f=-0.352 shape=(1, 9000, 1)
logits [[ 3.0406969 -1.8079143  0.6646125 -3.3063555]]
Iteration 700 of 1000: loss=0.0241 " + "l1=0.0237" + "l2=0.000458 f=-0.353 shape=(1, 9000, 1)
logits [[ 3.032798  -1.8057791  0.6645578 -3.3031301]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.246 " + "l1=0.246" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 3.1159163  -1.832301    0.65945786 -3.3328197 ]]
Iteration 100 of 1000: loss=0.225 " + "l1=0.216" + "l2=0.00962 f=-0.368 shape=(1, 9000, 1)
logits [[ 2.845889   -1.7434866   0.68735665 -3.2629848 ]]
Iteration 200 of 1000: loss=0.214 " + "l1=0.197" + "l2=0.0168 f=-0.389 shape=(1, 9000, 1)
logits [[ 2.6532905 -1.6646888  0.684746  -3.2293875]]
Iteration 300 of 1000: loss=0.203 " + "l1=0.18" + "l2=0.0227 f=-0.409 shape=(1, 9000, 1)
logits [[ 2.4746566 -1.5998286  0.6700731 -3.1801462]]
Iteration 400 of 1000: loss=0.194 " + "l1=0.167" + "l2=0.0271 f=-0.424 shape=(1, 9000, 1)
logits [[ 2.3231401 -1.5548248  0.6567185 -3.1228504]]
Iteration 500 of 1000: loss=0.185 " + "l1=0.153" + "l2=0.0322 f=-0.438 shape=(1, 9000, 1)
logits [[ 2.1825294 -1.5251659  0.6523699 -3.0601034]]
Iteration 600 of 1000: loss=0.176 " + "l1=0.14" + "l2=0.0359 f=-0.45 shape=(1, 9000, 1)
logits [[ 2.0517628 -1.5092844  0.6501394 -2.9944525]]
Iteration 700 of 1000: loss=0.166 " + "l1=0.126" + "l2=0.0399 f=-0.458 shape=(1, 9000, 1)
logits [[ 1.909825   -1.4912591   0.65047336 -2.901206  ]]
Iteration 800 of 1000: loss=0.155 " + "l1=0.11" + "l2=0.0451 f=-0.471 shape=(1, 9000, 1)
logits [[ 1.7450961 -1.477179   0.6458569 -2.797855 ]]
Iteration 900 of 1000: loss=0.145 " + "l1=0.0962" + "l2=0.0489 f=-0.479 shape=(1, 9000, 1)
logits [[ 1.6208545  -1.4959693   0.65910184 -2.7003736 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.46 " + "l1=2.46" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 3.1159163  -1.832301    0.65945786 -3.3328197 ]]
Iteration 100 of 1000: loss=0.49 " + "l1=0" + "l2=0.49 f=-0.541 shape=(1, 9000, 1)
logits [[ 0.974924  -1.2700728  0.9898033 -2.859376 ]]
Iteration 200 of 1000: loss=0.318 " + "l1=0" + "l2=0.318 f=-0.539 shape=(1, 9000, 1)
logits [[ 0.9797987 -1.2654941  0.9940503 -2.8632421]]
Iteration 300 of 1000: loss=0.251 " + "l1=0" + "l2=0.251 f=-0.533 shape=(1, 9000, 1)
logits [[ 0.9728199  -1.3134512   0.97655123 -2.7673266 ]]
Iteration 400 of 1000: loss=0.216 " + "l1=0.000891" + "l2=0.215 f=-0.527 shape=(1, 9000, 1)
logits [[ 0.9760375 -1.3654132  0.9751464 -2.693913 ]]
Iteration 500 of 1000: loss=0.203 " + "l1=0" + "l2=0.203 f=-0.523 shape=(1, 9000, 1)
logits [[ 0.95447147 -1.4111977   1.0143638  -2.648946  ]]
Iteration 600 of 1000: loss=0.18 " + "l1=0" + "l2=0.18 f=-0.516 shape=(1, 9000, 1)
logits [[ 0.99859595 -1.4501199   1.0001422  -2.611271  ]]
Iteration 700 of 1000: loss=0.17 " + "l1=0" + "l2=0.17 f=-0.515 shape=(1, 9000, 1)
logits [[ 0.997627  -1.4781535  1.0020695 -2.5796702]]
Iteration 800 of 1000: loss=0.163 " + "l1=0.0034" + "l2=0.16 f=-0.513 shape=(1, 9000, 1)
logits [[ 1.0115428 -1.5147375  1.0081477 -2.5588014]]
Iteration 900 of 1000: loss=0.153 " + "l1=0" + "l2=0.153 f=-0.514 shape=(1, 9000, 1)
logits [[ 1.0145512 -1.5438545  1.0214545 -2.5500617]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.35 " + "l1=1.35" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 3.1159163  -1.832301    0.65945786 -3.3328197 ]]
Iteration 100 of 1000: loss=0.64 " + "l1=0.293" + "l2=0.347 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.2312934 -1.1551576  0.6989713 -2.8979971]]
Iteration 200 of 1000: loss=0.314 " + "l1=0.000801" + "l2=0.314 f=-0.583 shape=(1, 9000, 1)
logits [[ 0.5718465  -0.84619325  0.57038957 -2.6291342 ]]
Iteration 300 of 1000: loss=0.256 " + "l1=0.00919" + "l2=0.247 f=-0.569 shape=(1, 9000, 1)
logits [[ 0.56166714 -0.89213985  0.54495424 -2.4893541 ]]
Iteration 400 of 1000: loss=0.223 " + "l1=0" + "l2=0.223 f=-0.565 shape=(1, 9000, 1)
logits [[ 0.5193849 -0.9083632  0.5229283 -2.3938267]]
Iteration 500 of 1000: loss=0.203 " + "l1=0" + "l2=0.203 f=-0.568 shape=(1, 9000, 1)
logits [[ 0.5034692 -0.9203644  0.5082155 -2.3639429]]
Iteration 600 of 1000: loss=0.191 " + "l1=0" + "l2=0.191 f=-0.571 shape=(1, 9000, 1)
logits [[ 0.4977568 -0.9427958  0.5102642 -2.3490644]]
Iteration 700 of 1000: loss=0.175 " + "l1=0" + "l2=0.175 f=-0.562 shape=(1, 9000, 1)
logits [[ 0.5369615 -0.9853182  0.5372826 -2.3355782]]
Iteration 800 of 1000: loss=0.164 " + "l1=0" + "l2=0.164 f=-0.552 shape=(1, 9000, 1)
logits [[ 0.56498474 -1.0370718   0.57120395 -2.3075745 ]]
Iteration 900 of 1000: loss=0.152 " + "l1=0.000178" + "l2=0.152 f=-0.541 shape=(1, 9000, 1)
logits [[ 0.59981   -1.0885599  0.599487  -2.2742958]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.798 " + "l1=0.798" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 3.1159163  -1.832301    0.65945786 -3.3328197 ]]
Iteration 100 of 1000: loss=0.547 " + "l1=0.419" + "l2=0.127 f=-0.468 shape=(1, 9000, 1)
logits [[ 1.9777741 -1.4320769  0.6878359 -3.103989 ]]
Iteration 200 of 1000: loss=0.397 " + "l1=0.203" + "l2=0.194 f=-0.525 shape=(1, 9000, 1)
logits [[ 1.2579198 -1.1269184  0.6344786 -2.8669105]]
Iteration 300 of 1000: loss=0.27 " + "l1=0.00755" + "l2=0.263 f=-0.573 shape=(1, 9000, 1)
logits [[ 0.57820046 -0.8950426   0.55497336 -2.531325  ]]
Iteration 400 of 1000: loss=0.22 " + "l1=0" + "l2=0.22 f=-0.571 shape=(1, 9000, 1)
logits [[ 0.5149852  -0.9193726   0.51653194 -2.3973777 ]]
Iteration 500 of 1000: loss=0.193 " + "l1=0.0018" + "l2=0.191 f=-0.576 shape=(1, 9000, 1)
logits [[ 0.50470793 -0.95195055  0.49916324 -2.3551366 ]]
Iteration 600 of 1000: loss=0.178 " + "l1=0.00203" + "l2=0.176 f=-0.577 shape=(1, 9000, 1)
logits [[ 0.50892586 -0.99023634  0.50267935 -2.3294458 ]]
Iteration 700 of 1000: loss=0.166 " + "l1=0.00161" + "l2=0.165 f=-0.573 shape=(1, 9000, 1)
logits [[ 0.5168137 -1.0306256  0.5118572 -2.289204 ]]
Iteration 800 of 1000: loss=0.155 " + "l1=0.000906" + "l2=0.154 f=-0.564 shape=(1, 9000, 1)
logits [[ 0.5302324  -1.0716075   0.52744555 -2.242376  ]]
Iteration 900 of 1000: loss=0.145 " + "l1=0" + "l2=0.145 f=-0.551 shape=(1, 9000, 1)
logits [[ 0.5495802 -1.1166508  0.5569171 -2.195246 ]]
--- 300.9504954814911 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0645 " + "l1=0.0645" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 3.1159163  -1.832301    0.65945786 -3.3328197 ]]
Iteration 100 of 1000: loss=0.0636 " + "l1=0.0632" + "l2=0.000354 f=-0.346 shape=(1, 9000, 1)
logits [[ 3.0583873 -1.8150274  0.640532  -3.2659004]]
Iteration 200 of 1000: loss=0.0632 " + "l1=0.0628" + "l2=0.000423 f=-0.345 shape=(1, 9000, 1)
logits [[ 3.0396256 -1.8092669  0.6340455 -3.2430403]]
Iteration 300 of 1000: loss=0.0629 " + "l1=0.0623" + "l2=0.000555 f=-0.344 shape=(1, 9000, 1)
logits [[ 3.016931  -1.8024563  0.6256925 -3.215491 ]]
Iteration 400 of 1000: loss=0.0625 " + "l1=0.0618" + "l2=0.000708 f=-0.343 shape=(1, 9000, 1)
logits [[ 2.9922218 -1.795335   0.6161786 -3.184973 ]]
Iteration 500 of 1000: loss=0.0621 " + "l1=0.0612" + "l2=0.000836 f=-0.342 shape=(1, 9000, 1)
logits [[ 2.9685445  -1.7882351   0.60674804 -3.1552262 ]]
Iteration 600 of 1000: loss=0.0617 " + "l1=0.0607" + "l2=0.001 f=-0.341 shape=(1, 9000, 1)
logits [[ 2.944493  -1.7815405  0.5963834 -3.1235778]]
Iteration 700 of 1000: loss=0.0613 " + "l1=0.0601" + "l2=0.00117 f=-0.34 shape=(1, 9000, 1)
logits [[ 2.9198248 -1.7747339  0.5850495 -3.0898838]]
Iteration 800 of 1000: loss=0.0608 " + "l1=0.0595" + "l2=0.00132 f=-0.339 shape=(1, 9000, 1)
logits [[ 2.8954742 -1.7683359  0.5732305 -3.0547776]]
Iteration 900 of 1000: loss=0.0603 " + "l1=0.0589" + "l2=0.00145 f=-0.337 shape=(1, 9000, 1)
logits [[ 2.869844   -1.7624735   0.56096584 -3.0172513 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.645 " + "l1=0.645" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 3.1159163  -1.832301    0.65945786 -3.3328197 ]]
Iteration 100 of 1000: loss=0.557 " + "l1=0.519" + "l2=0.0379 f=-0.335 shape=(1, 9000, 1)
logits [[ 2.5171385 -1.6439413  0.4585845 -2.6698868]]
Iteration 200 of 1000: loss=0.489 " + "l1=0.431" + "l2=0.0584 f=-0.317 shape=(1, 9000, 1)
logits [[ 2.11499    -1.5319824   0.34281778 -2.1954212 ]]
Iteration 300 of 1000: loss=0.42 " + "l1=0.345" + "l2=0.0755 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.7423848  -1.4381007   0.21886961 -1.7046938 ]]
Iteration 400 of 1000: loss=0.349 " + "l1=0.254" + "l2=0.0947 f=-0.285 shape=(1, 9000, 1)
logits [[ 1.3484719  -1.3659275   0.06698929 -1.1911719 ]]
Iteration 500 of 1000: loss=0.285 " + "l1=0.176" + "l2=0.109 f=-0.28 shape=(1, 9000, 1)
logits [[ 0.9871533  -1.2186707  -0.11327088 -0.7745914 ]]
Iteration 600 of 1000: loss=0.222 " + "l1=0.103" + "l2=0.119 f=-0.275 shape=(1, 9000, 1)
logits [[ 0.65457296 -1.0835652  -0.29178366 -0.37759453]]
Iteration 700 of 1000: loss=0.159 " + "l1=0.0313" + "l2=0.128 f=-0.272 shape=(1, 9000, 1)
logits [[ 0.32481283 -0.9393679  -0.48544225  0.01167453]]
Iteration 800 of 1000: loss=0.109 " + "l1=0.000706" + "l2=0.108 f=-0.273 shape=(1, 9000, 1)
logits [[ 0.18921143 -0.85570484 -0.608381    0.18215513]]
Iteration 900 of 1000: loss=0.0819 " + "l1=0.000466" + "l2=0.0814 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.2188762  -0.85407376 -0.64717174  0.21421146]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.355 " + "l1=0.355" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 3.1159163  -1.832301    0.65945786 -3.3328197 ]]
Iteration 100 of 1000: loss=0.33 " + "l1=0.321" + "l2=0.00986 f=-0.339 shape=(1, 9000, 1)
logits [[ 2.8247516 -1.743274   0.566344  -3.0036082]]
Iteration 200 of 1000: loss=0.314 " + "l1=0.297" + "l2=0.0165 f=-0.334 shape=(1, 9000, 1)
logits [[ 2.6274626  -1.6908277   0.49950323 -2.7728426 ]]
Iteration 300 of 1000: loss=0.295 " + "l1=0.273" + "l2=0.022 f=-0.325 shape=(1, 9000, 1)
logits [[ 2.4352796 -1.6374422  0.4320126 -2.5282967]]
Iteration 400 of 1000: loss=0.276 " + "l1=0.248" + "l2=0.0278 f=-0.316 shape=(1, 9000, 1)
logits [[ 2.233474  -1.5845817  0.3606153 -2.2716227]]
Iteration 500 of 1000: loss=0.254 " + "l1=0.221" + "l2=0.0332 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.0189478 -1.5282307  0.2828431 -1.9913559]]
Iteration 600 of 1000: loss=0.232 " + "l1=0.194" + "l2=0.0376 f=-0.297 shape=(1, 9000, 1)
logits [[ 1.8136368  -1.4823965   0.20212826 -1.720682  ]]
Iteration 700 of 1000: loss=0.211 " + "l1=0.171" + "l2=0.0406 f=-0.292 shape=(1, 9000, 1)
logits [[ 1.6345983  -1.4632448   0.12899823 -1.4685497 ]]
Iteration 800 of 1000: loss=0.192 " + "l1=0.15" + "l2=0.0422 f=-0.288 shape=(1, 9000, 1)
logits [[ 1.4692935  -1.4071418   0.04794279 -1.262558  ]]
Iteration 900 of 1000: loss=0.174 " + "l1=0.129" + "l2=0.0448 f=-0.279 shape=(1, 9000, 1)
logits [[ 1.3027312  -1.3368995  -0.04080174 -1.0411048 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.5 " + "l1=0.5" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 3.1159163  -1.832301    0.65945786 -3.3328197 ]]
Iteration 100 of 1000: loss=0.449 " + "l1=0.427" + "l2=0.0222 f=-0.338 shape=(1, 9000, 1)
logits [[ 2.669838  -1.695255   0.5132761 -2.8389957]]
Iteration 200 of 1000: loss=0.411 " + "l1=0.376" + "l2=0.035 f=-0.325 shape=(1, 9000, 1)
logits [[ 2.3722606 -1.6090211  0.417331  -2.4810066]]
Iteration 300 of 1000: loss=0.371 " + "l1=0.325" + "l2=0.0462 f=-0.31 shape=(1, 9000, 1)
logits [[ 2.073728   -1.5271767   0.33061466 -2.1156807 ]]
Iteration 400 of 1000: loss=0.33 " + "l1=0.274" + "l2=0.0554 f=-0.297 shape=(1, 9000, 1)
logits [[ 1.7953768  -1.4641752   0.22584708 -1.7462763 ]]
Iteration 500 of 1000: loss=0.288 " + "l1=0.224" + "l2=0.0642 f=-0.291 shape=(1, 9000, 1)
logits [[ 1.5190003  -1.4278378   0.11895812 -1.3736017 ]]
Iteration 600 of 1000: loss=0.253 " + "l1=0.182" + "l2=0.071 f=-0.284 shape=(1, 9000, 1)
logits [[ 1.2740135  -1.3380295   0.00194085 -1.0720547 ]]
Iteration 700 of 1000: loss=0.216 " + "l1=0.139" + "l2=0.0766 f=-0.273 shape=(1, 9000, 1)
logits [[ 1.0333985  -1.2320614  -0.1345084  -0.76055646]]
Iteration 800 of 1000: loss=0.179 " + "l1=0.0978" + "l2=0.0813 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.79685277 -1.1343585  -0.26647785 -0.46530047]]
Iteration 900 of 1000: loss=0.14 " + "l1=0.0508" + "l2=0.0887 f=-0.265 shape=(1, 9000, 1)
logits [[ 0.5170059  -1.0185933  -0.4190185  -0.13901922]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.572 " + "l1=0.572" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 3.1159163  -1.832301    0.65945786 -3.3328197 ]]
Iteration 100 of 1000: loss=0.504 " + "l1=0.475" + "l2=0.0292 f=-0.336 shape=(1, 9000, 1)
logits [[ 2.5972445 -1.6722322  0.4882059 -2.757315 ]]
Iteration 200 of 1000: loss=0.453 " + "l1=0.407" + "l2=0.0464 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.2434936 -1.5700332  0.3800795 -2.3424518]]
Iteration 300 of 1000: loss=0.399 " + "l1=0.339" + "l2=0.0598 f=-0.302 shape=(1, 9000, 1)
logits [[ 1.9093401  -1.480415    0.27821264 -1.9146866 ]]
Iteration 400 of 1000: loss=0.345 " + "l1=0.271" + "l2=0.0737 f=-0.291 shape=(1, 9000, 1)
logits [[ 1.5780262  -1.4219878   0.15550643 -1.4736239 ]]
Iteration 500 of 1000: loss=0.294 " + "l1=0.21" + "l2=0.0836 f=-0.285 shape=(1, 9000, 1)
logits [[ 1.2735972  -1.3408091   0.02126244 -1.0936108 ]]
Iteration 600 of 1000: loss=0.244 " + "l1=0.151" + "l2=0.0929 f=-0.275 shape=(1, 9000, 1)
logits [[ 0.9772192  -1.2140728  -0.13658069 -0.72806937]]
Iteration 700 of 1000: loss=0.195 " + "l1=0.0941" + "l2=0.101 f=-0.272 shape=(1, 9000, 1)
logits [[ 0.6837062  -1.0959318  -0.2980477  -0.37683362]]
Iteration 800 of 1000: loss=0.145 " + "l1=0.0362" + "l2=0.109 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.3865336  -0.9668906  -0.46749792 -0.0218065 ]]
Iteration 900 of 1000: loss=0.101 " + "l1=0.000167" + "l2=0.101 f=-0.268 shape=(1, 9000, 1)
logits [[ 0.19867405 -0.8682691  -0.5998319   0.19678953]]
--- 314.513060092926 seconds ---
Adv result:3
Loading record A02451
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.04 " + "l1=0.04" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1159668 -1.888019   1.8766754 -3.324959 ]]
Iteration 100 of 1000: loss=0.0397 " + "l1=0.0394" + "l2=0.000285 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.0731688 -1.8668995  1.8625313 -3.2839031]]
Iteration 200 of 1000: loss=0.0396 " + "l1=0.0393" + "l2=0.000276 f=-0.303 shape=(1, 9000, 1)
logits [[ 2.0677278 -1.8631457  1.8601568 -3.27788  ]]
Iteration 300 of 1000: loss=0.0395 " + "l1=0.0392" + "l2=0.000325 f=-0.303 shape=(1, 9000, 1)
logits [[ 2.0610957 -1.8589147  1.8576657 -3.27088  ]]
Iteration 400 of 1000: loss=0.0395 " + "l1=0.0391" + "l2=0.000384 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.055616  -1.8553647  1.8555765 -3.2649486]]
Iteration 500 of 1000: loss=0.0395 " + "l1=0.039" + "l2=0.000442 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.0493736 -1.8515071  1.8529828 -3.258549 ]]
Iteration 600 of 1000: loss=0.0395 " + "l1=0.0389" + "l2=0.00061 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.0436463 -1.8480315  1.8506534 -3.2525208]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.4 " + "l1=0.4" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1159668 -1.888019   1.8766754 -3.324959 ]]
Iteration 100 of 1000: loss=0.369 " + "l1=0.35" + "l2=0.0193 f=-0.298 shape=(1, 9000, 1)
logits [[ 1.777111  -1.7197322  1.7530725 -3.0024529]]
Iteration 200 of 1000: loss=0.36 " + "l1=0.339" + "l2=0.0208 f=-0.291 shape=(1, 9000, 1)
logits [[ 1.7177106 -1.6716274  1.7162765 -2.9280288]]
Iteration 300 of 1000: loss=0.354 " + "l1=0.331" + "l2=0.0226 f=-0.287 shape=(1, 9000, 1)
logits [[ 1.6838142 -1.6291966  1.6822357 -2.8838038]]
Iteration 400 of 1000: loss=0.349 " + "l1=0.325" + "l2=0.0239 f=-0.283 shape=(1, 9000, 1)
logits [[ 1.6567979 -1.5965662  1.6552888 -2.8494954]]
Iteration 500 of 1000: loss=0.345 " + "l1=0.32" + "l2=0.0255 f=-0.28 shape=(1, 9000, 1)
logits [[ 1.6307493 -1.5678203  1.6311386 -2.8127475]]
Iteration 600 of 1000: loss=0.342 " + "l1=0.315" + "l2=0.0271 f=-0.276 shape=(1, 9000, 1)
logits [[ 1.6058325 -1.5437946  1.6095306 -2.7747245]]
Iteration 700 of 1000: loss=0.34 " + "l1=0.312" + "l2=0.0281 f=-0.272 shape=(1, 9000, 1)
logits [[ 1.5892258 -1.5248336  1.590768  -2.7438087]]
Iteration 800 of 1000: loss=0.337 " + "l1=0.308" + "l2=0.0294 f=-0.268 shape=(1, 9000, 1)
logits [[ 1.5710149 -1.5063125  1.5710669 -2.7091112]]
Iteration 900 of 1000: loss=0.335 " + "l1=0.304" + "l2=0.0311 f=-0.265 shape=(1, 9000, 1)
logits [[ 1.5512016 -1.4873506  1.5529075 -2.6749818]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4 " + "l1=4" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1159668 -1.888019   1.8766754 -3.324959 ]]
Iteration 100 of 1000: loss=2.26 " + "l1=1.51" + "l2=0.755 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.72306573 -0.7769918   0.73242205 -1.6709155 ]]
Iteration 200 of 1000: loss=1.62 " + "l1=0.807" + "l2=0.812 f=-0.239 shape=(1, 9000, 1)
logits [[ 0.3281107  -0.43220502  0.3746927  -1.2278827 ]]
Iteration 300 of 1000: loss=1.25 " + "l1=0.362" + "l2=0.885 f=-0.237 shape=(1, 9000, 1)
logits [[ 0.10756907 -0.18495385  0.17750604 -1.0499476 ]]
Iteration 400 of 1000: loss=0.991 " + "l1=0.0461" + "l2=0.945 f=-0.258 shape=(1, 9000, 1)
logits [[-0.11241528 -0.01728963  0.02883416 -0.93276864]]
Iteration 500 of 1000: loss=0.87 " + "l1=0.00559" + "l2=0.864 f=-0.256 shape=(1, 9000, 1)
logits [[-0.13306572  0.00442301  0.01001436 -0.9038074 ]]
Iteration 600 of 1000: loss=0.816 " + "l1=0.0105" + "l2=0.805 f=-0.255 shape=(1, 9000, 1)
logits [[-0.12892962  0.00753433  0.01801505 -0.91683656]]
Iteration 700 of 1000: loss=0.782 " + "l1=0" + "l2=0.782 f=-0.251 shape=(1, 9000, 1)
logits [[-0.13415532  0.01441834  0.01320999 -0.89855576]]
Iteration 800 of 1000: loss=0.753 " + "l1=0.000769" + "l2=0.752 f=-0.249 shape=(1, 9000, 1)
logits [[-0.13226798  0.01310427  0.01387341 -0.89035213]]
Iteration 900 of 1000: loss=0.733 " + "l1=0.00163" + "l2=0.732 f=-0.248 shape=(1, 9000, 1)
logits [[-0.12796794  0.00671572  0.00834101 -0.8808873 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.2 " + "l1=2.2" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1159668 -1.888019   1.8766754 -3.324959 ]]
Iteration 100 of 1000: loss=1.6 " + "l1=1.36" + "l2=0.245 f=-0.245 shape=(1, 9000, 1)
logits [[ 1.2446761 -1.2159327  1.2507128 -2.261264 ]]
Iteration 200 of 1000: loss=1.38 " + "l1=1.04" + "l2=0.343 f=-0.247 shape=(1, 9000, 1)
logits [[ 0.9382132 -0.9455165  0.9362161 -1.9152323]]
Iteration 300 of 1000: loss=1.14 " + "l1=0.673" + "l2=0.466 f=-0.263 shape=(1, 9000, 1)
logits [[ 0.58868575 -0.6212983   0.6029141  -1.6220977 ]]
Iteration 400 of 1000: loss=0.993 " + "l1=0.528" + "l2=0.466 f=-0.263 shape=(1, 9000, 1)
logits [[ 0.48145267 -0.45966378  0.49981627 -1.5723869 ]]
Iteration 500 of 1000: loss=0.892 " + "l1=0.423" + "l2=0.468 f=-0.247 shape=(1, 9000, 1)
logits [[ 0.38233724 -0.3667088   0.40301445 -1.4077768 ]]
Iteration 600 of 1000: loss=0.84 " + "l1=0.363" + "l2=0.477 f=-0.24 shape=(1, 9000, 1)
logits [[ 0.34349486 -0.3139746   0.34571904 -1.3334769 ]]
Iteration 700 of 1000: loss=0.803 " + "l1=0.307" + "l2=0.496 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.26744798 -0.26322415  0.29538423 -1.2438674 ]]
Iteration 800 of 1000: loss=0.775 " + "l1=0.263" + "l2=0.512 f=-0.235 shape=(1, 9000, 1)
logits [[ 0.21319011 -0.2276857   0.25023067 -1.1775577 ]]
Iteration 900 of 1000: loss=0.752 " + "l1=0.225" + "l2=0.527 f=-0.233 shape=(1, 9000, 1)
logits [[ 0.16121903 -0.19784428  0.2110393  -1.1082004 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.1 " + "l1=3.1" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1159668 -1.888019   1.8766754 -3.324959 ]]
Iteration 100 of 1000: loss=2.02 " + "l1=1.58" + "l2=0.439 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.0024481 -1.0230052  1.017894  -1.9649163]]
Iteration 200 of 1000: loss=1.49 " + "l1=0.857" + "l2=0.634 f=-0.258 shape=(1, 9000, 1)
logits [[ 0.5105492 -0.5745791  0.5309433 -1.4971715]]
Iteration 300 of 1000: loss=1.23 " + "l1=0.559" + "l2=0.67 f=-0.244 shape=(1, 9000, 1)
logits [[ 0.32012936 -0.36135155  0.3595895  -1.2962626 ]]
Iteration 400 of 1000: loss=1.03 " + "l1=0.344" + "l2=0.687 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.18301713 -0.21245976  0.23124613 -1.146204  ]]
Iteration 500 of 1000: loss=0.922 " + "l1=0.21" + "l2=0.712 f=-0.24 shape=(1, 9000, 1)
logits [[ 0.04984902 -0.11879065  0.15228492 -1.0448905 ]]
Iteration 600 of 1000: loss=0.849 " + "l1=0.0922" + "l2=0.756 f=-0.244 shape=(1, 9000, 1)
logits [[-0.05766696 -0.04756552  0.07142385 -0.94221455]]
Iteration 700 of 1000: loss=0.794 " + "l1=0.0263" + "l2=0.767 f=-0.248 shape=(1, 9000, 1)
logits [[-0.1131016  -0.01298948  0.02091072 -0.8885096 ]]
Iteration 800 of 1000: loss=0.752 " + "l1=0.00269" + "l2=0.749 f=-0.252 shape=(1, 9000, 1)
logits [[-0.13002473  0.00358375  0.00705629 -0.88952327]]
Iteration 900 of 1000: loss=0.726 " + "l1=0" + "l2=0.726 f=-0.254 shape=(1, 9000, 1)
logits [[-0.12217936  0.0036776   0.00229908 -0.8997821 ]]
--- 294.9141798019409 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00239 " + "l1=0.00239" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1159668 -1.888019   1.8766754 -3.324959 ]]
Iteration 100 of 1000: loss=0.00222 " + "l1=0.00207" + "l2=0.000158 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.086157  -1.8860202  1.8796215 -3.3008823]]
Iteration 200 of 1000: loss=0.00218 " + "l1=0.00203" + "l2=0.000141 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.08441   -1.8864096  1.880942  -3.3000646]]
Iteration 300 of 1000: loss=0.00215 " + "l1=0.00198" + "l2=0.000162 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.0806468 -1.8865695  1.8822274 -3.2973845]]
Iteration 400 of 1000: loss=0.00218 " + "l1=0.00194" + "l2=0.000244 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.0771403 -1.8865815  1.8832723 -3.294747 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0239 " + "l1=0.0239" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1159668 -1.888019   1.8766754 -3.324959 ]]
Iteration 100 of 1000: loss=0.00969 " + "l1=0.00213" + "l2=0.00756 f=-0.306 shape=(1, 9000, 1)
logits [[ 1.9175062 -1.8738881  1.8962433 -3.1638672]]
Iteration 200 of 1000: loss=0.00614 " + "l1=2.62e-05" + "l2=0.00612 f=-0.306 shape=(1, 9000, 1)
logits [[ 1.9090494 -1.8828297  1.9087876 -3.1593332]]
Iteration 300 of 1000: loss=0.00489 " + "l1=0.000171" + "l2=0.00472 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9178023 -1.8886364  1.9160931 -3.1669452]]
Iteration 400 of 1000: loss=0.00418 " + "l1=0.000124" + "l2=0.00406 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9206946 -1.8896748  1.9194527 -3.1698616]]
Iteration 500 of 1000: loss=0.00386 " + "l1=0" + "l2=0.00386 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9208039 -1.8903586  1.9220192 -3.170585 ]]
Iteration 600 of 1000: loss=0.00349 " + "l1=0" + "l2=0.00349 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.923202  -1.8910005  1.9234562 -3.1740763]]
Iteration 700 of 1000: loss=0.00336 " + "l1=0" + "l2=0.00336 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9230387 -1.8909369  1.9239799 -3.1752167]]
Iteration 800 of 1000: loss=0.00316 " + "l1=0.000155" + "l2=0.00301 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9258106 -1.8912954  1.9242631 -3.1783717]]
Iteration 900 of 1000: loss=0.00302 " + "l1=0" + "l2=0.00302 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9221946 -1.8907164  1.9248266 -3.1767232]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0132 " + "l1=0.0132" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1159668 -1.888019   1.8766754 -3.324959 ]]
Iteration 100 of 1000: loss=0.00859 " + "l1=0.00608" + "l2=0.00252 f=-0.306 shape=(1, 9000, 1)
logits [[ 1.998198  -1.8793559  1.8877144 -3.230121 ]]
Iteration 200 of 1000: loss=0.00707 " + "l1=0.0038" + "l2=0.00326 f=-0.306 shape=(1, 9000, 1)
logits [[ 1.9669489 -1.8824247  1.8978014 -3.205073 ]]
Iteration 300 of 1000: loss=0.00583 " + "l1=0.00189" + "l2=0.00393 f=-0.306 shape=(1, 9000, 1)
logits [[ 1.9412392 -1.8854977  1.9068203 -3.1856668]]
Iteration 400 of 1000: loss=0.00475 " + "l1=0.000132" + "l2=0.00461 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.91826   -1.888302   1.9158567 -3.1668122]]
Iteration 500 of 1000: loss=0.00403 " + "l1=2.31e-05" + "l2=0.00401 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9199035 -1.8896536  1.9194835 -3.1688864]]
Iteration 600 of 1000: loss=0.00375 " + "l1=8.49e-05" + "l2=0.00366 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9234908 -1.8909848  1.9219466 -3.1726167]]
Iteration 700 of 1000: loss=0.0034 " + "l1=3.7e-05" + "l2=0.00336 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9238386 -1.8912263  1.9231663 -3.1742208]]
Iteration 800 of 1000: loss=0.00329 " + "l1=0.000166" + "l2=0.00313 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9264913 -1.8916181  1.9234731 -3.1777031]]
Iteration 900 of 1000: loss=0.00313 " + "l1=7.2e-05" + "l2=0.00306 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9252633 -1.8912363  1.923955  -3.1775904]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00778 " + "l1=0.00778" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1159668 -1.888019   1.8766754 -3.324959 ]]
Iteration 100 of 1000: loss=0.00612 " + "l1=0.00515" + "l2=0.000965 f=-0.306 shape=(1, 9000, 1)
logits [[ 2.041897  -1.8821551  1.8834265 -3.265268 ]]
Iteration 200 of 1000: loss=0.00562 " + "l1=0.00442" + "l2=0.00119 f=-0.306 shape=(1, 9000, 1)
logits [[ 2.024344  -1.8831024  1.8883151 -3.2516496]]
Iteration 300 of 1000: loss=0.00517 " + "l1=0.00373" + "l2=0.00144 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.0086176 -1.8847473  1.8937417 -3.2395222]]
Iteration 400 of 1000: loss=0.00482 " + "l1=0.00314" + "l2=0.00167 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9955819 -1.8867805  1.8989161 -3.2292414]]
Iteration 500 of 1000: loss=0.00451 " + "l1=0.00261" + "l2=0.0019 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9838166 -1.8881254  1.9034896 -3.2201035]]
Iteration 600 of 1000: loss=0.00427 " + "l1=0.00211" + "l2=0.00215 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9725041 -1.8893434  1.9074425 -3.2114737]]
Iteration 700 of 1000: loss=0.00395 " + "l1=0.00161" + "l2=0.00234 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9607524 -1.8904104  1.9113126 -3.2022927]]
Iteration 800 of 1000: loss=0.00382 " + "l1=0.00118" + "l2=0.00263 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.951069  -1.8910142  1.9147005 -3.19477  ]]
Iteration 900 of 1000: loss=0.00359 " + "l1=0.000847" + "l2=0.00274 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9428897 -1.8906583  1.9168228 -3.188328 ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0105 " + "l1=0.0105" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1159668 -1.888019   1.8766754 -3.324959 ]]
Iteration 100 of 1000: loss=0.00755 " + "l1=0.00589" + "l2=0.00166 f=-0.306 shape=(1, 9000, 1)
logits [[ 2.0198276 -1.8803161  1.8852638 -3.2474735]]
Iteration 200 of 1000: loss=0.00659 " + "l1=0.0045" + "l2=0.00209 f=-0.306 shape=(1, 9000, 1)
logits [[ 1.9951863 -1.8821118  1.8922912 -3.2282774]]
Iteration 300 of 1000: loss=0.0058 " + "l1=0.00328" + "l2=0.00252 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9752277 -1.8851044  1.9002723 -3.2123418]]
Iteration 400 of 1000: loss=0.00519 " + "l1=0.00229" + "l2=0.0029 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9586978 -1.8868564  1.906434  -3.200186 ]]
Iteration 500 of 1000: loss=0.00455 " + "l1=0.00126" + "l2=0.00328 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9418542 -1.889168   1.912984  -3.1865382]]
Iteration 600 of 1000: loss=0.00401 " + "l1=0.000431" + "l2=0.00358 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9276353 -1.8895055  1.9177864 -3.1748614]]
Iteration 700 of 1000: loss=0.0036 " + "l1=8.22e-05" + "l2=0.00352 f=-0.304 shape=(1, 9000, 1)
logits [[ 1.9229172 -1.8900859  1.9210383 -3.1718106]]
Iteration 800 of 1000: loss=0.00341 " + "l1=5.55e-05" + "l2=0.00335 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9237448 -1.8905932  1.9224756 -3.17406  ]]
Iteration 900 of 1000: loss=0.00315 " + "l1=0" + "l2=0.00315 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.922452  -1.8903433  1.9232448 -3.1741781]]
--- 282.9697184562683 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0544 " + "l1=0.0544" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1159668 -1.888019   1.8766754 -3.324959 ]]
Iteration 100 of 1000: loss=0.0536 " + "l1=0.0531" + "l2=0.00055 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.0553703 -1.8697686  1.8592846 -3.2535236]]
Iteration 200 of 1000: loss=0.0534 " + "l1=0.0529" + "l2=0.000581 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.0450978 -1.8665107  1.8567517 -3.2404928]]
Iteration 300 of 1000: loss=0.0533 " + "l1=0.0526" + "l2=0.000668 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.0343199 -1.8633708  1.8541831 -3.2263768]]
Iteration 400 of 1000: loss=0.0531 " + "l1=0.0524" + "l2=0.000748 f=-0.299 shape=(1, 9000, 1)
logits [[ 2.0241165 -1.8599716  1.8513149 -3.2129052]]
Iteration 500 of 1000: loss=0.053 " + "l1=0.0522" + "l2=0.000898 f=-0.298 shape=(1, 9000, 1)
logits [[ 2.0148168 -1.8573418  1.8489919 -3.2001858]]
Iteration 600 of 1000: loss=0.0529 " + "l1=0.0519" + "l2=0.00099 f=-0.297 shape=(1, 9000, 1)
logits [[ 2.0056286 -1.8544866  1.8463554 -3.1873133]]
Iteration 700 of 1000: loss=0.0528 " + "l1=0.0517" + "l2=0.00112 f=-0.297 shape=(1, 9000, 1)
logits [[ 1.997051  -1.851964   1.8439766 -3.1751173]]
Iteration 800 of 1000: loss=0.0528 " + "l1=0.0515" + "l2=0.00126 f=-0.296 shape=(1, 9000, 1)
logits [[ 1.9889731 -1.8496317  1.841716  -3.1634264]]
Iteration 900 of 1000: loss=0.0528 " + "l1=0.0513" + "l2=0.00144 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.9814684 -1.8474253  1.8395443 -3.1523814]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.544 " + "l1=0.544" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1159668 -1.888019   1.8766754 -3.324959 ]]
Iteration 100 of 1000: loss=0.48 " + "l1=0.451" + "l2=0.0297 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.7083799 -1.745254   1.7093345 -2.7981384]]
Iteration 200 of 1000: loss=0.466 " + "l1=0.431" + "l2=0.0352 f=-0.269 shape=(1, 9000, 1)
logits [[ 1.6447827 -1.7030668  1.6452252 -2.6610522]]
Iteration 300 of 1000: loss=0.455 " + "l1=0.415" + "l2=0.0401 f=-0.258 shape=(1, 9000, 1)
logits [[ 1.5951982 -1.6721573  1.5959008 -2.5502684]]
Iteration 400 of 1000: loss=0.445 " + "l1=0.401" + "l2=0.044 f=-0.249 shape=(1, 9000, 1)
logits [[ 1.5477114 -1.638887   1.5509645 -2.455091 ]]
Iteration 500 of 1000: loss=0.433 " + "l1=0.386" + "l2=0.0478 f=-0.238 shape=(1, 9000, 1)
logits [[ 1.5032622 -1.6092765  1.5052972 -2.3512323]]
Iteration 600 of 1000: loss=0.422 " + "l1=0.369" + "l2=0.0532 f=-0.227 shape=(1, 9000, 1)
logits [[ 1.4562645 -1.5830501  1.4557273 -2.2352653]]
Iteration 700 of 1000: loss=0.413 " + "l1=0.357" + "l2=0.0562 f=-0.221 shape=(1, 9000, 1)
logits [[ 1.415651  -1.5587738  1.4144276 -2.1545942]]
Iteration 800 of 1000: loss=0.405 " + "l1=0.346" + "l2=0.0597 f=-0.215 shape=(1, 9000, 1)
logits [[ 1.3785391 -1.5387024  1.3781847 -2.0777059]]
Iteration 900 of 1000: loss=0.398 " + "l1=0.334" + "l2=0.0637 f=-0.211 shape=(1, 9000, 1)
logits [[ 1.3402758 -1.5235009  1.3410196 -2.001883 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.44 " + "l1=5.44" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1159668 -1.888019   1.8766754 -3.324959 ]]
Iteration 100 of 1000: loss=1.91 " + "l1=0.535" + "l2=1.38 f=-0.171 shape=(1, 9000, 1)
logits [[-0.06652616 -0.99349016  0.45573294 -0.07915857]]
Iteration 200 of 1000: loss=1.16 " + "l1=0" + "l2=1.16 f=-0.146 shape=(1, 9000, 1)
logits [[-0.17726317 -0.9146369   0.24946289  0.25969553]]
Iteration 300 of 1000: loss=0.972 " + "l1=0.0279" + "l2=0.944 f=-0.133 shape=(1, 9000, 1)
logits [[-0.08239572 -0.92455554  0.25131097  0.22342184]]
Iteration 400 of 1000: loss=0.851 " + "l1=0" + "l2=0.851 f=-0.122 shape=(1, 9000, 1)
logits [[-0.04860952 -0.9187266   0.23709424  0.24244711]]
Iteration 500 of 1000: loss=0.785 " + "l1=0.00178" + "l2=0.783 f=-0.12 shape=(1, 9000, 1)
logits [[-0.02966646 -0.91804135  0.23485024  0.23307359]]
Iteration 600 of 1000: loss=0.736 " + "l1=0.00296" + "l2=0.733 f=-0.119 shape=(1, 9000, 1)
logits [[-0.01856942 -0.9238274   0.23419659  0.23123562]]
Iteration 700 of 1000: loss=0.696 " + "l1=0.000268" + "l2=0.696 f=-0.121 shape=(1, 9000, 1)
logits [[-0.0131591  -0.9307453   0.23050007  0.23023245]]
Iteration 800 of 1000: loss=0.66 " + "l1=0" + "l2=0.66 f=-0.124 shape=(1, 9000, 1)
logits [[-0.0094889  -0.9422016   0.22416125  0.23229924]]
Iteration 900 of 1000: loss=0.626 " + "l1=0" + "l2=0.626 f=-0.125 shape=(1, 9000, 1)
logits [[-0.00969314 -0.95157254  0.22934818  0.23240975]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.99 " + "l1=2.99" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1159668 -1.888019   1.8766754 -3.324959 ]]
Iteration 100 of 1000: loss=1.7 " + "l1=1.08" + "l2=0.621 f=-0.197 shape=(1, 9000, 1)
logits [[ 0.5953258 -1.2550129  0.9147203 -1.0444216]]
Iteration 200 of 1000: loss=1.23 " + "l1=0.441" + "l2=0.785 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.08920413 -0.9971599   0.4904951  -0.31137088]]
Iteration 300 of 1000: loss=0.948 " + "l1=0.119" + "l2=0.83 f=-0.157 shape=(1, 9000, 1)
logits [[-0.07715444 -0.85480595  0.25899112  0.04330196]]
Iteration 400 of 1000: loss=0.785 " + "l1=0.01" + "l2=0.775 f=-0.148 shape=(1, 9000, 1)
logits [[-0.1189669  -0.8131379   0.17972739  0.16154814]]
Iteration 500 of 1000: loss=0.702 " + "l1=0" + "l2=0.702 f=-0.149 shape=(1, 9000, 1)
logits [[-0.09879607 -0.81899065  0.16133301  0.16180763]]
Iteration 600 of 1000: loss=0.65 " + "l1=0.00283" + "l2=0.647 f=-0.15 shape=(1, 9000, 1)
logits [[-0.06408902 -0.83366734  0.15212274  0.14697075]]
Iteration 700 of 1000: loss=0.614 " + "l1=0.00308" + "l2=0.611 f=-0.15 shape=(1, 9000, 1)
logits [[-0.04421841 -0.84251827  0.14708732  0.14148688]]
Iteration 800 of 1000: loss=0.588 " + "l1=0" + "l2=0.588 f=-0.15 shape=(1, 9000, 1)
logits [[-0.04897142 -0.84532064  0.13941783  0.15315533]]
Iteration 900 of 1000: loss=0.558 " + "l1=0" + "l2=0.558 f=-0.149 shape=(1, 9000, 1)
logits [[-0.03593609 -0.85515153  0.14397384  0.15158418]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.77 " + "l1=1.77" + "l2=0 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1159668 -1.888019   1.8766754 -3.324959 ]]
Iteration 100 of 1000: loss=1.26 " + "l1=1.02" + "l2=0.243 f=-0.222 shape=(1, 9000, 1)
logits [[ 1.1497136 -1.490409   1.2892588 -1.8367324]]
Iteration 200 of 1000: loss=1.08 " + "l1=0.751" + "l2=0.333 f=-0.205 shape=(1, 9000, 1)
logits [[ 0.83152825 -1.2993033   0.97956616 -1.33165   ]]
Iteration 300 of 1000: loss=0.928 " + "l1=0.518" + "l2=0.41 f=-0.195 shape=(1, 9000, 1)
logits [[ 0.5475441  -1.1041801   0.68644404 -0.9086035 ]]
Iteration 400 of 1000: loss=0.812 " + "l1=0.388" + "l2=0.424 f=-0.187 shape=(1, 9000, 1)
logits [[ 0.38734725 -1.0187135   0.53843457 -0.6554504 ]]
Iteration 500 of 1000: loss=0.729 " + "l1=0.293" + "l2=0.436 f=-0.181 shape=(1, 9000, 1)
logits [[ 0.2797107  -0.9910671   0.44336608 -0.4573791 ]]
Iteration 600 of 1000: loss=0.667 " + "l1=0.214" + "l2=0.453 f=-0.177 shape=(1, 9000, 1)
logits [[ 0.20729572 -0.9757288   0.35937554 -0.29993185]]
Iteration 700 of 1000: loss=0.624 " + "l1=0.168" + "l2=0.455 f=-0.174 shape=(1, 9000, 1)
logits [[ 0.16304928 -0.9562927   0.30810836 -0.21009701]]
Iteration 800 of 1000: loss=0.589 " + "l1=0.136" + "l2=0.453 f=-0.17 shape=(1, 9000, 1)
logits [[ 0.13175994 -0.94185144  0.27329105 -0.1440998 ]]
Iteration 900 of 1000: loss=0.555 " + "l1=0.108" + "l2=0.447 f=-0.165 shape=(1, 9000, 1)
logits [[ 0.11587703 -0.93592095  0.24496545 -0.08630813]]
--- 316.72301173210144 seconds ---
Adv result:3
