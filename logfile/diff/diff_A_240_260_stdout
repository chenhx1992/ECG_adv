Updating 912353f..7b65ebe
Fast-forward
 EOT_tile-test.py | 7 +++++--
 EOT_tile_tf.py   | 4 ++--
 2 files changed, 7 insertions(+), 4 deletions(-)
Loading model
Loading ground truth file
Attack diff is running...
Loading record A04594
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0307 " + "l1=0.0307" + "l2=0 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.988195  -1.0857263  1.4123133 -4.4397635]]
Iteration 100 of 1000: loss=0.0301 " + "l1=0.0297" + "l2=0.000397 f=-0.534 shape=(1, 9000, 1)
logits [[ 1.9283812 -1.0448323  1.3861796 -4.406342 ]]
Iteration 200 of 1000: loss=0.03 " + "l1=0.0295" + "l2=0.000417 f=-0.534 shape=(1, 9000, 1)
logits [[ 1.9188157 -1.0350932  1.379324  -4.399719 ]]
Iteration 300 of 1000: loss=0.0298 " + "l1=0.0293" + "l2=0.000524 f=-0.534 shape=(1, 9000, 1)
logits [[ 1.9069633 -1.0232656  1.3713881 -4.3914404]]
Iteration 400 of 1000: loss=0.0297 " + "l1=0.0291" + "l2=0.000648 f=-0.534 shape=(1, 9000, 1)
logits [[ 1.89571   -1.0115917  1.3636788 -4.383298 ]]
Iteration 500 of 1000: loss=0.0297 " + "l1=0.0289" + "l2=0.000795 f=-0.534 shape=(1, 9000, 1)
logits [[ 1.8854214 -1.0003713  1.3565416 -4.3759665]]
Iteration 600 of 1000: loss=0.0296 " + "l1=0.0287" + "l2=0.000892 f=-0.533 shape=(1, 9000, 1)
logits [[ 1.8772802 -0.9932594  1.3518347 -4.3694687]]
Iteration 700 of 1000: loss=0.0295 " + "l1=0.0286" + "l2=0.00096 f=-0.533 shape=(1, 9000, 1)
logits [[ 1.8702453 -0.9869489  1.3478153 -4.363535 ]]
Iteration 800 of 1000: loss=0.0296 " + "l1=0.0284" + "l2=0.00116 f=-0.533 shape=(1, 9000, 1)
logits [[ 1.8630278 -0.9804036  1.3437824 -4.357458 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.307 " + "l1=0.307" + "l2=0 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.988195  -1.0857263  1.4123133 -4.4397635]]
Iteration 100 of 1000: loss=0.254 " + "l1=0.223" + "l2=0.0313 f=-0.543 shape=(1, 9000, 1)
logits [[ 1.4974837  -0.73030823  1.1651039  -4.1038613 ]]
Iteration 200 of 1000: loss=0.233 " + "l1=0.185" + "l2=0.0478 f=-0.55 shape=(1, 9000, 1)
logits [[ 1.2559052 -0.5967249  1.0689778 -3.9292395]]
Iteration 300 of 1000: loss=0.207 " + "l1=0.127" + "l2=0.0795 f=-0.573 shape=(1, 9000, 1)
logits [[ 0.9221678  -0.35276774  0.8858246  -3.7456176 ]]
Iteration 400 of 1000: loss=0.185 " + "l1=0.0937" + "l2=0.0917 f=-0.589 shape=(1, 9000, 1)
logits [[ 0.7454968 -0.1915126  0.7441603 -3.655605 ]]
Iteration 500 of 1000: loss=0.166 " + "l1=0.0609" + "l2=0.105 f=-0.61 shape=(1, 9000, 1)
logits [[ 0.5949804  -0.01439114  0.58892727 -3.6079233 ]]
Iteration 600 of 1000: loss=0.15 " + "l1=0.0465" + "l2=0.103 f=-0.615 shape=(1, 9000, 1)
logits [[ 0.5191475   0.05553938  0.52075213 -3.5535378 ]]
Iteration 700 of 1000: loss=0.129 " + "l1=0.0311" + "l2=0.0981 f=-0.616 shape=(1, 9000, 1)
logits [[ 0.44943556  0.1381084   0.44773418 -3.4992523 ]]
Iteration 800 of 1000: loss=0.12 " + "l1=0.024" + "l2=0.0955 f=-0.614 shape=(1, 9000, 1)
logits [[ 0.41158733  0.17208771  0.41231117 -3.4507246 ]]
Iteration 900 of 1000: loss=0.115 " + "l1=0.0202" + "l2=0.0948 f=-0.609 shape=(1, 9000, 1)
logits [[ 0.3903329   0.19154705  0.3938909  -3.412613  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.07 " + "l1=3.07" + "l2=0 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.988195  -1.0857263  1.4123133 -4.4397635]]
Iteration 100 of 1000: loss=0.352 " + "l1=0" + "l2=0.352 f=-0.67 shape=(1, 9000, 1)
logits [[ 0.28616598  0.32631168  0.30622244 -3.5994084 ]]
Iteration 200 of 1000: loss=0.262 " + "l1=0" + "l2=0.262 f=-0.66 shape=(1, 9000, 1)
logits [[ 0.30109486  0.31883904  0.3111317  -3.5712094 ]]
Iteration 300 of 1000: loss=0.232 " + "l1=0.00935" + "l2=0.223 f=-0.647 shape=(1, 9000, 1)
logits [[ 0.3051693  0.3091669  0.3185121 -3.5198252]]
Iteration 400 of 1000: loss=0.212 " + "l1=0" + "l2=0.212 f=-0.642 shape=(1, 9000, 1)
logits [[ 0.24523273  0.34524113  0.3037397  -3.464     ]]
Iteration 500 of 1000: loss=0.191 " + "l1=0" + "l2=0.191 f=-0.633 shape=(1, 9000, 1)
logits [[ 0.26355243  0.33228603  0.31421372 -3.442192  ]]
Iteration 600 of 1000: loss=0.176 " + "l1=0" + "l2=0.176 f=-0.623 shape=(1, 9000, 1)
logits [[ 0.29906622  0.31923375  0.31622747 -3.4246628 ]]
Iteration 700 of 1000: loss=0.174 " + "l1=0" + "l2=0.174 f=-0.621 shape=(1, 9000, 1)
logits [[ 0.2644889   0.34876257  0.2931168  -3.3922787 ]]
Iteration 800 of 1000: loss=0.16 " + "l1=0.00085" + "l2=0.159 f=-0.613 shape=(1, 9000, 1)
logits [[ 0.27433786  0.31925988  0.32010958 -3.3676822 ]]
Iteration 900 of 1000: loss=0.153 " + "l1=0" + "l2=0.153 f=-0.608 shape=(1, 9000, 1)
logits [[ 0.30444154  0.31867754  0.30907524 -3.3661845 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.69 " + "l1=1.69" + "l2=0 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.988195  -1.0857263  1.4123133 -4.4397635]]
Iteration 100 of 1000: loss=0.327 " + "l1=0" + "l2=0.327 f=-0.669 shape=(1, 9000, 1)
logits [[ 0.30942526  0.32160723  0.31291163 -3.6179705 ]]
Iteration 200 of 1000: loss=0.242 " + "l1=0" + "l2=0.242 f=-0.658 shape=(1, 9000, 1)
logits [[ 0.29905716  0.31882948  0.31403717 -3.5642655 ]]
Iteration 300 of 1000: loss=0.209 " + "l1=0" + "l2=0.209 f=-0.647 shape=(1, 9000, 1)
logits [[ 0.26866594  0.32478282  0.31806237 -3.4982307 ]]
Iteration 400 of 1000: loss=0.186 " + "l1=0" + "l2=0.186 f=-0.635 shape=(1, 9000, 1)
logits [[ 0.28971532  0.32026088  0.31706366 -3.4686995 ]]
Iteration 500 of 1000: loss=0.172 " + "l1=0" + "l2=0.172 f=-0.627 shape=(1, 9000, 1)
logits [[ 0.31538543  0.31981388  0.3067575  -3.4488127 ]]
Iteration 600 of 1000: loss=0.163 " + "l1=0" + "l2=0.163 f=-0.619 shape=(1, 9000, 1)
logits [[ 0.31632382  0.32167202  0.30289844 -3.4176736 ]]
Iteration 700 of 1000: loss=0.156 " + "l1=0" + "l2=0.156 f=-0.615 shape=(1, 9000, 1)
logits [[ 0.2969985   0.3264272   0.30252343 -3.3862472 ]]
Iteration 800 of 1000: loss=0.148 " + "l1=0" + "l2=0.148 f=-0.61 shape=(1, 9000, 1)
logits [[ 0.3017884  0.3166312  0.3099594 -3.370199 ]]
Iteration 900 of 1000: loss=0.143 " + "l1=0" + "l2=0.143 f=-0.608 shape=(1, 9000, 1)
logits [[ 0.3033403   0.3200654   0.30629265 -3.3618915 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.999 " + "l1=0.999" + "l2=0 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.988195  -1.0857263  1.4123133 -4.4397635]]
Iteration 100 of 1000: loss=0.314 " + "l1=0.00448" + "l2=0.31 f=-0.673 shape=(1, 9000, 1)
logits [[ 0.32433143  0.31190014  0.325678   -3.6531603 ]]
Iteration 200 of 1000: loss=0.221 " + "l1=0.004" + "l2=0.217 f=-0.657 shape=(1, 9000, 1)
logits [[ 0.31589916  0.31024325  0.32255355 -3.578261  ]]
Iteration 300 of 1000: loss=0.191 " + "l1=0" + "l2=0.191 f=-0.646 shape=(1, 9000, 1)
logits [[ 0.2932392   0.32525277  0.30952933 -3.5120351 ]]
Iteration 400 of 1000: loss=0.173 " + "l1=0" + "l2=0.173 f=-0.634 shape=(1, 9000, 1)
logits [[ 0.3183432   0.3189679   0.30389246 -3.478735  ]]
Iteration 500 of 1000: loss=0.161 " + "l1=0.000934" + "l2=0.16 f=-0.628 shape=(1, 9000, 1)
logits [[ 0.3076261   0.3111544   0.31402722 -3.4443054 ]]
Iteration 600 of 1000: loss=0.151 " + "l1=0" + "l2=0.151 f=-0.622 shape=(1, 9000, 1)
logits [[ 0.31117854  0.31225663  0.31030026 -3.421111  ]]
Iteration 700 of 1000: loss=0.146 " + "l1=0.00271" + "l2=0.143 f=-0.616 shape=(1, 9000, 1)
logits [[ 0.3049758   0.30981237  0.31815144 -3.3961895 ]]
Iteration 800 of 1000: loss=0.139 " + "l1=0" + "l2=0.139 f=-0.611 shape=(1, 9000, 1)
logits [[ 0.31589743  0.31923237  0.30643344 -3.3848052 ]]
Iteration 900 of 1000: loss=0.134 " + "l1=0" + "l2=0.134 f=-0.609 shape=(1, 9000, 1)
logits [[ 0.30760193  0.31711867  0.30851397 -3.3686664 ]]
--- 274.51301312446594 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00576 " + "l1=0.00576" + "l2=0 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.988195  -1.0857263  1.4123133 -4.4397635]]
Iteration 100 of 1000: loss=0.00556 " + "l1=0.00535" + "l2=0.000211 f=-0.534 shape=(1, 9000, 1)
logits [[ 1.9519863 -1.083564   1.4170637 -4.421935 ]]
Iteration 200 of 1000: loss=0.00551 " + "l1=0.00533" + "l2=0.000172 f=-0.534 shape=(1, 9000, 1)
logits [[ 1.9502645 -1.0834051  1.4168882 -4.421632 ]]
Iteration 300 of 1000: loss=0.0055 " + "l1=0.0053" + "l2=0.0002 f=-0.535 shape=(1, 9000, 1)
logits [[ 1.9469088 -1.0833639  1.4172527 -4.4200525]]
Iteration 400 of 1000: loss=0.0055 " + "l1=0.00525" + "l2=0.000243 f=-0.535 shape=(1, 9000, 1)
logits [[ 1.9430051 -1.0833108  1.4177295 -4.418154 ]]
Iteration 500 of 1000: loss=0.0055 " + "l1=0.00521" + "l2=0.000294 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.9392734 -1.0832757  1.4182825 -4.416371 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0576 " + "l1=0.0576" + "l2=0 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.988195  -1.0857263  1.4123133 -4.4397635]]
Iteration 100 of 1000: loss=0.0409 " + "l1=0.0308" + "l2=0.0102 f=-0.555 shape=(1, 9000, 1)
logits [[ 1.7424517 -1.0812265  1.4347084 -4.3141236]]
Iteration 200 of 1000: loss=0.0354 " + "l1=0.0218" + "l2=0.0137 f=-0.565 shape=(1, 9000, 1)
logits [[ 1.6592898 -1.0845407  1.441736  -4.2762003]]
Iteration 300 of 1000: loss=0.029 " + "l1=0.0102" + "l2=0.0188 f=-0.575 shape=(1, 9000, 1)
logits [[ 1.5525237 -1.0866314  1.4502281 -4.214165 ]]
Iteration 400 of 1000: loss=0.0219 " + "l1=0.000283" + "l2=0.0216 f=-0.584 shape=(1, 9000, 1)
logits [[ 1.460594  -1.0961387  1.4577615 -4.160024 ]]
Iteration 500 of 1000: loss=0.018 " + "l1=0.000503" + "l2=0.0175 f=-0.584 shape=(1, 9000, 1)
logits [[ 1.4590116 -1.095753   1.4539847 -4.154223 ]]
Iteration 600 of 1000: loss=0.0152 " + "l1=3.74e-05" + "l2=0.0151 f=-0.585 shape=(1, 9000, 1)
logits [[ 1.4547099 -1.0968152  1.4543363 -4.1510034]]
Iteration 700 of 1000: loss=0.0134 " + "l1=0.000107" + "l2=0.0133 f=-0.584 shape=(1, 9000, 1)
logits [[ 1.4565723 -1.0990342  1.4555051 -4.14962  ]]
Iteration 800 of 1000: loss=0.0119 " + "l1=0.000186" + "l2=0.0118 f=-0.583 shape=(1, 9000, 1)
logits [[ 1.459004  -1.1005613  1.4571425 -4.1485515]]
Iteration 900 of 1000: loss=0.0108 " + "l1=0" + "l2=0.0108 f=-0.582 shape=(1, 9000, 1)
logits [[ 1.4618036 -1.1047529  1.4621369 -4.148947 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0317 " + "l1=0.0317" + "l2=0 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.988195  -1.0857263  1.4123133 -4.4397635]]
Iteration 100 of 1000: loss=0.0264 " + "l1=0.0233" + "l2=0.00309 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.851135 -1.081531  1.4266   -4.371317]]
Iteration 200 of 1000: loss=0.0251 " + "l1=0.0212" + "l2=0.00388 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.8159162 -1.0802128  1.4299914 -4.3550115]]
Iteration 300 of 1000: loss=0.0239 " + "l1=0.0194" + "l2=0.00457 f=-0.55 shape=(1, 9000, 1)
logits [[ 1.7848233 -1.0811136  1.432938  -4.338318 ]]
Iteration 400 of 1000: loss=0.0227 " + "l1=0.0175" + "l2=0.00523 f=-0.554 shape=(1, 9000, 1)
logits [[ 1.7551659 -1.0845686  1.4367977 -4.322673 ]]
Iteration 500 of 1000: loss=0.0214 " + "l1=0.0154" + "l2=0.00604 f=-0.559 shape=(1, 9000, 1)
logits [[ 1.7197176 -1.0903293  1.4402357 -4.3060484]]
Iteration 600 of 1000: loss=0.02 " + "l1=0.0135" + "l2=0.00651 f=-0.562 shape=(1, 9000, 1)
logits [[ 1.6920024 -1.0939461  1.4459431 -4.2908974]]
Iteration 700 of 1000: loss=0.0188 " + "l1=0.0116" + "l2=0.00721 f=-0.565 shape=(1, 9000, 1)
logits [[ 1.662819  -1.0980766  1.4519014 -4.275371 ]]
Iteration 800 of 1000: loss=0.0175 " + "l1=0.00951" + "l2=0.00798 f=-0.568 shape=(1, 9000, 1)
logits [[ 1.6306832 -1.1012285  1.457822  -4.2584114]]
Iteration 900 of 1000: loss=0.0161 " + "l1=0.00716" + "l2=0.00896 f=-0.571 shape=(1, 9000, 1)
logits [[ 1.5935282 -1.1041099  1.4633026 -4.237621 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0446 " + "l1=0.0446" + "l2=0 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.988195  -1.0857263  1.4123133 -4.4397635]]
Iteration 100 of 1000: loss=0.0345 " + "l1=0.0285" + "l2=0.00603 f=-0.549 shape=(1, 9000, 1)
logits [[ 1.7979218 -1.0805655  1.4306742 -4.3434343]]
Iteration 200 of 1000: loss=0.0317 " + "l1=0.0238" + "l2=0.00786 f=-0.555 shape=(1, 9000, 1)
logits [[ 1.7433603 -1.0811776  1.435779  -4.3169546]]
Iteration 300 of 1000: loss=0.0287 " + "l1=0.0193" + "l2=0.00935 f=-0.562 shape=(1, 9000, 1)
logits [[ 1.6900328 -1.0870109  1.4403758 -4.2927732]]
Iteration 400 of 1000: loss=0.0259 " + "l1=0.0147" + "l2=0.0112 f=-0.568 shape=(1, 9000, 1)
logits [[ 1.6341257 -1.0884064  1.4444196 -4.2606173]]
Iteration 500 of 1000: loss=0.0222 " + "l1=0.00773" + "l2=0.0145 f=-0.575 shape=(1, 9000, 1)
logits [[ 1.5512612 -1.0937141  1.4515381 -4.210499 ]]
Iteration 600 of 1000: loss=0.0183 " + "l1=0.00123" + "l2=0.0171 f=-0.583 shape=(1, 9000, 1)
logits [[ 1.4767492 -1.1014644  1.4608794 -4.1692495]]
Iteration 700 of 1000: loss=0.0151 " + "l1=5.85e-05" + "l2=0.015 f=-0.585 shape=(1, 9000, 1)
logits [[ 1.4643154 -1.106124   1.4635607 -4.161426 ]]
Iteration 800 of 1000: loss=0.013 " + "l1=0.000154" + "l2=0.0128 f=-0.584 shape=(1, 9000, 1)
logits [[ 1.4682052 -1.1099094  1.4662127 -4.161138 ]]
Iteration 900 of 1000: loss=0.0117 " + "l1=0" + "l2=0.0117 f=-0.583 shape=(1, 9000, 1)
logits [[ 1.4683254 -1.112369   1.4698229 -4.159499 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0382 " + "l1=0.0382" + "l2=0 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.988195  -1.0857263  1.4123133 -4.4397635]]
Iteration 100 of 1000: loss=0.0307 " + "l1=0.0261" + "l2=0.00452 f=-0.546 shape=(1, 9000, 1)
logits [[ 1.8232353 -1.0808859  1.4285916 -4.35681  ]]
Iteration 200 of 1000: loss=0.0287 " + "l1=0.0231" + "l2=0.00563 f=-0.551 shape=(1, 9000, 1)
logits [[ 1.7807716 -1.0802026  1.4324647 -4.336044 ]]
Iteration 300 of 1000: loss=0.0269 " + "l1=0.0201" + "l2=0.00672 f=-0.556 shape=(1, 9000, 1)
logits [[ 1.7403253 -1.0832285  1.4363889 -4.316998 ]]
Iteration 400 of 1000: loss=0.0247 " + "l1=0.017" + "l2=0.00776 f=-0.562 shape=(1, 9000, 1)
logits [[ 1.696971  -1.0883214  1.4406509 -4.2958045]]
Iteration 500 of 1000: loss=0.0229 " + "l1=0.0141" + "l2=0.00874 f=-0.565 shape=(1, 9000, 1)
logits [[ 1.65899   -1.0912899  1.4456811 -4.274076 ]]
Iteration 600 of 1000: loss=0.0207 " + "l1=0.0105" + "l2=0.0102 f=-0.57 shape=(1, 9000, 1)
logits [[ 1.6095966 -1.0951825  1.4506409 -4.245771 ]]
Iteration 700 of 1000: loss=0.018 " + "l1=0.00554" + "l2=0.0125 f=-0.576 shape=(1, 9000, 1)
logits [[ 1.542256  -1.1004335  1.458569  -4.206329 ]]
Iteration 800 of 1000: loss=0.0154 " + "l1=0.00114" + "l2=0.0142 f=-0.583 shape=(1, 9000, 1)
logits [[ 1.4835092 -1.1070544  1.4663717 -4.175186 ]]
Iteration 900 of 1000: loss=0.013 " + "l1=0" + "l2=0.013 f=-0.584 shape=(1, 9000, 1)
logits [[ 1.4698675 -1.1099523  1.4704891 -4.1651974]]
--- 257.26214814186096 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0643 " + "l1=0.0643" + "l2=0 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.988195  -1.0857263  1.4123133 -4.4397635]]
Iteration 100 of 1000: loss=0.0634 " + "l1=0.0629" + "l2=0.000506 f=-0.532 shape=(1, 9000, 1)
logits [[ 1.9204308 -1.0647604  1.3889693 -4.37379  ]]
Iteration 200 of 1000: loss=0.0632 " + "l1=0.0627" + "l2=0.000548 f=-0.532 shape=(1, 9000, 1)
logits [[ 1.9082205 -1.0596702  1.3826656 -4.360223 ]]
Iteration 300 of 1000: loss=0.0631 " + "l1=0.0624" + "l2=0.000669 f=-0.532 shape=(1, 9000, 1)
logits [[ 1.8942548 -1.0539411  1.3758414 -4.344337 ]]
Iteration 400 of 1000: loss=0.0629 " + "l1=0.0621" + "l2=0.0008 f=-0.532 shape=(1, 9000, 1)
logits [[ 1.8813928 -1.048398   1.3694541 -4.3290505]]
Iteration 500 of 1000: loss=0.0628 " + "l1=0.0619" + "l2=0.000955 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.8703506 -1.0430751  1.3635436 -4.3146667]]
Iteration 600 of 1000: loss=0.0627 " + "l1=0.0616" + "l2=0.00107 f=-0.53 shape=(1, 9000, 1)
logits [[ 1.8602873 -1.0380355  1.3580168 -4.301036 ]]
Iteration 700 of 1000: loss=0.0626 " + "l1=0.0614" + "l2=0.00123 f=-0.529 shape=(1, 9000, 1)
logits [[ 1.8506842 -1.0336343  1.3530538 -4.288012 ]]
Iteration 800 of 1000: loss=0.0625 " + "l1=0.0612" + "l2=0.00134 f=-0.529 shape=(1, 9000, 1)
logits [[ 1.8416755 -1.0296457  1.3484117 -4.2755256]]
Iteration 900 of 1000: loss=0.0625 " + "l1=0.061" + "l2=0.00151 f=-0.528 shape=(1, 9000, 1)
logits [[ 1.8331463 -1.0260035  1.3441834 -4.2636395]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.643 " + "l1=0.643" + "l2=0 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.988195  -1.0857263  1.4123133 -4.4397635]]
Iteration 100 of 1000: loss=0.562 " + "l1=0.509" + "l2=0.053 f=-0.535 shape=(1, 9000, 1)
logits [[ 1.3103899 -0.8739307  1.1997579 -3.7753966]]
Iteration 200 of 1000: loss=0.52 " + "l1=0.462" + "l2=0.0588 f=-0.519 shape=(1, 9000, 1)
logits [[ 1.1052984 -0.7771071  1.1058875 -3.5095236]]
Iteration 300 of 1000: loss=0.496 " + "l1=0.432" + "l2=0.0635 f=-0.499 shape=(1, 9000, 1)
logits [[ 1.0089389 -0.7106254  1.0140858 -3.30991  ]]
Iteration 400 of 1000: loss=0.472 " + "l1=0.4" + "l2=0.0724 f=-0.475 shape=(1, 9000, 1)
logits [[ 0.92046183 -0.6680208   0.92466104 -3.0765524 ]]
Iteration 500 of 1000: loss=0.451 " + "l1=0.369" + "l2=0.0818 f=-0.454 shape=(1, 9000, 1)
logits [[ 0.83854306 -0.64914936  0.84431195 -2.850156  ]]
Iteration 600 of 1000: loss=0.433 " + "l1=0.345" + "l2=0.0881 f=-0.436 shape=(1, 9000, 1)
logits [[ 0.77076995 -0.6173776   0.77528316 -2.6734507 ]]
Iteration 700 of 1000: loss=0.415 " + "l1=0.322" + "l2=0.0936 f=-0.423 shape=(1, 9000, 1)
logits [[ 0.69974506 -0.5829719   0.70337313 -2.5125034 ]]
Iteration 800 of 1000: loss=0.394 " + "l1=0.293" + "l2=0.102 f=-0.421 shape=(1, 9000, 1)
logits [[ 0.58679664 -0.5206717   0.5890705  -2.337731  ]]
Iteration 900 of 1000: loss=0.372 " + "l1=0.264" + "l2=0.108 f=-0.421 shape=(1, 9000, 1)
logits [[ 0.4556662  -0.4197064   0.45978084 -2.1800623 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.43 " + "l1=6.43" + "l2=0 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.988195  -1.0857263  1.4123133 -4.4397635]]
Iteration 100 of 1000: loss=1.66 " + "l1=0.0311" + "l2=1.63 f=-0.367 shape=(1, 9000, 1)
logits [[-0.8003882  -0.23726262 -0.200078   -0.23120281]]
Iteration 200 of 1000: loss=1.04 " + "l1=0.0164" + "l2=1.02 f=-0.358 shape=(1, 9000, 1)
logits [[-0.7111423  -0.25136876 -0.22604756 -0.24249429]]
Iteration 300 of 1000: loss=0.828 " + "l1=0" + "l2=0.828 f=-0.329 shape=(1, 9000, 1)
logits [[-0.6206521  -0.28798926 -0.2054615  -0.20189652]]
Iteration 400 of 1000: loss=0.71 " + "l1=0.00393" + "l2=0.706 f=-0.31 shape=(1, 9000, 1)
logits [[-0.5576615  -0.24521373 -0.21675791 -0.2206927 ]]
Iteration 500 of 1000: loss=0.634 " + "l1=0" + "l2=0.634 f=-0.295 shape=(1, 9000, 1)
logits [[-0.5025666  -0.24756904 -0.21488617 -0.21474484]]
Iteration 600 of 1000: loss=0.596 " + "l1=0" + "l2=0.596 f=-0.28 shape=(1, 9000, 1)
logits [[-0.47870314 -0.26802608 -0.21974261 -0.15346906]]
Iteration 700 of 1000: loss=0.553 " + "l1=0" + "l2=0.553 f=-0.275 shape=(1, 9000, 1)
logits [[-0.42979482 -0.29936936 -0.20892408 -0.16090009]]
Iteration 800 of 1000: loss=0.524 " + "l1=0" + "l2=0.524 f=-0.27 shape=(1, 9000, 1)
logits [[-0.399699   -0.31486297 -0.20985135 -0.15408671]]
Iteration 900 of 1000: loss=0.494 " + "l1=0" + "l2=0.494 f=-0.27 shape=(1, 9000, 1)
logits [[-0.36995682 -0.32688662 -0.21411921 -0.16758412]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.54 " + "l1=3.54" + "l2=0 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.988195  -1.0857263  1.4123133 -4.4397635]]
Iteration 100 of 1000: loss=1.7 " + "l1=0.894" + "l2=0.805 f=-0.471 shape=(1, 9000, 1)
logits [[-0.19255778 -0.04551473 -0.01066796 -1.6356559 ]]
Iteration 200 of 1000: loss=0.902 " + "l1=0" + "l2=0.902 f=-0.352 shape=(1, 9000, 1)
logits [[-0.7034522  -0.24368437 -0.23874842 -0.22284007]]
Iteration 300 of 1000: loss=0.669 " + "l1=0.00268" + "l2=0.667 f=-0.319 shape=(1, 9000, 1)
logits [[-0.58199596 -0.23545268 -0.22779931 -0.23267287]]
Iteration 400 of 1000: loss=0.567 " + "l1=0" + "l2=0.567 f=-0.298 shape=(1, 9000, 1)
logits [[-0.5059378  -0.2578933  -0.21607418 -0.21193132]]
Iteration 500 of 1000: loss=0.511 " + "l1=0" + "l2=0.511 f=-0.287 shape=(1, 9000, 1)
logits [[-0.4462041  -0.28017044 -0.21193124 -0.20891458]]
Iteration 600 of 1000: loss=0.477 " + "l1=0" + "l2=0.477 f=-0.276 shape=(1, 9000, 1)
logits [[-0.4338876  -0.2994138  -0.20584722 -0.16581276]]
Iteration 700 of 1000: loss=0.434 " + "l1=0" + "l2=0.434 f=-0.266 shape=(1, 9000, 1)
logits [[-0.376215   -0.32840574 -0.18281947 -0.17684183]]
Iteration 800 of 1000: loss=0.402 " + "l1=0" + "l2=0.402 f=-0.258 shape=(1, 9000, 1)
logits [[-0.3377575  -0.35192588 -0.17223455 -0.17001086]]
Iteration 900 of 1000: loss=0.375 " + "l1=0" + "l2=0.375 f=-0.249 shape=(1, 9000, 1)
logits [[-0.30014798 -0.3871733  -0.16212992 -0.14550278]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.09 " + "l1=2.09" + "l2=0 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.988195  -1.0857263  1.4123133 -4.4397635]]
Iteration 100 of 1000: loss=1.38 " + "l1=1.09" + "l2=0.288 f=-0.465 shape=(1, 9000, 1)
logits [[ 0.6560638 -0.5081833  0.6697938 -2.679051 ]]
Iteration 200 of 1000: loss=1.04 " + "l1=0.613" + "l2=0.429 f=-0.444 shape=(1, 9000, 1)
logits [[ 0.07361408 -0.20339979  0.12000535 -1.7648096 ]]
Iteration 300 of 1000: loss=0.732 " + "l1=0.172" + "l2=0.56 f=-0.365 shape=(1, 9000, 1)
logits [[-0.4535927  -0.16796689 -0.15399167 -0.68447125]]
Iteration 400 of 1000: loss=0.541 " + "l1=0.00349" + "l2=0.538 f=-0.301 shape=(1, 9000, 1)
logits [[-0.5073068  -0.257295   -0.21485658 -0.22558531]]
Iteration 500 of 1000: loss=0.472 " + "l1=0" + "l2=0.472 f=-0.294 shape=(1, 9000, 1)
logits [[-0.47561935 -0.24971987 -0.2258208  -0.22547472]]
Iteration 600 of 1000: loss=0.42 " + "l1=0" + "l2=0.42 f=-0.28 shape=(1, 9000, 1)
logits [[-0.43068913 -0.2695738  -0.21594617 -0.2055844 ]]
Iteration 700 of 1000: loss=0.372 " + "l1=0" + "l2=0.372 f=-0.273 shape=(1, 9000, 1)
logits [[-0.3873609  -0.295834   -0.20393625 -0.20361209]]
Iteration 800 of 1000: loss=0.338 " + "l1=0.00353" + "l2=0.335 f=-0.265 shape=(1, 9000, 1)
logits [[-0.33747026 -0.31397027 -0.19876926 -0.20962602]]
Iteration 900 of 1000: loss=0.308 " + "l1=0.000652" + "l2=0.308 f=-0.261 shape=(1, 9000, 1)
logits [[-0.32415453 -0.30236214 -0.20800059 -0.21000782]]
--- 283.76506543159485 seconds ---
Adv result:3
Loading record A04596
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0449 " + "l1=0.0449" + "l2=0 f=-0.746 shape=(1, 9000, 1)
logits [[ 3.667531  -0.8253869  2.242627  -8.070728 ]]
Iteration 100 of 1000: loss=0.0445 " + "l1=0.0442" + "l2=0.000291 f=-0.745 shape=(1, 9000, 1)
logits [[ 3.623143   -0.80157995  2.23465    -8.036454  ]]
Iteration 200 of 1000: loss=0.0444 " + "l1=0.0442" + "l2=0.000292 f=-0.745 shape=(1, 9000, 1)
logits [[ 3.6169488 -0.7980543  2.2330391 -8.030191 ]]
Iteration 300 of 1000: loss=0.0444 " + "l1=0.044" + "l2=0.000377 f=-0.744 shape=(1, 9000, 1)
logits [[ 3.6098044 -0.7937865  2.2313168 -8.023666 ]]
Iteration 400 of 1000: loss=0.0444 " + "l1=0.0439" + "l2=0.000419 f=-0.744 shape=(1, 9000, 1)
logits [[ 3.6039262  -0.79001135  2.2298846  -8.018597  ]]
Iteration 500 of 1000: loss=0.0444 " + "l1=0.0439" + "l2=0.000536 f=-0.743 shape=(1, 9000, 1)
logits [[ 3.5989711  -0.78667957  2.228636   -8.014484  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.449 " + "l1=0.449" + "l2=0 f=-0.746 shape=(1, 9000, 1)
logits [[ 3.667531  -0.8253869  2.242627  -8.070728 ]]
Iteration 100 of 1000: loss=0.413 " + "l1=0.391" + "l2=0.0218 f=-0.733 shape=(1, 9000, 1)
logits [[ 3.2906125 -0.6233381  2.172225  -7.772756 ]]
Iteration 200 of 1000: loss=0.4 " + "l1=0.37" + "l2=0.0298 f=-0.727 shape=(1, 9000, 1)
logits [[ 3.149927   -0.55286944  2.1428888  -7.6492214 ]]
Iteration 300 of 1000: loss=0.391 " + "l1=0.357" + "l2=0.0343 f=-0.722 shape=(1, 9000, 1)
logits [[ 3.0599828  -0.50718063  2.1203434  -7.560916  ]]
Iteration 400 of 1000: loss=0.383 " + "l1=0.343" + "l2=0.0398 f=-0.719 shape=(1, 9000, 1)
logits [[ 2.9678388  -0.46529177  2.0998838  -7.4789186 ]]
Iteration 500 of 1000: loss=0.373 " + "l1=0.328" + "l2=0.0453 f=-0.717 shape=(1, 9000, 1)
logits [[ 2.862897   -0.41666514  2.080396   -7.3937583 ]]
Iteration 600 of 1000: loss=0.362 " + "l1=0.31" + "l2=0.0515 f=-0.715 shape=(1, 9000, 1)
logits [[ 2.7416694  -0.35940757  2.0601285  -7.301677  ]]
Iteration 700 of 1000: loss=0.35 " + "l1=0.295" + "l2=0.0556 f=-0.714 shape=(1, 9000, 1)
logits [[ 2.633803   -0.31143376  2.0414922  -7.2207594 ]]
Iteration 800 of 1000: loss=0.337 " + "l1=0.277" + "l2=0.0606 f=-0.714 shape=(1, 9000, 1)
logits [[ 2.5072715 -0.2577458  2.022659  -7.128638 ]]
Iteration 900 of 1000: loss=0.326 " + "l1=0.264" + "l2=0.0619 f=-0.714 shape=(1, 9000, 1)
logits [[ 2.413995   -0.22528134  2.013902   -7.058849  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.49 " + "l1=4.49" + "l2=0 f=-0.746 shape=(1, 9000, 1)
logits [[ 3.667531  -0.8253869  2.242627  -8.070728 ]]
Iteration 100 of 1000: loss=2.2 " + "l1=1.42" + "l2=0.787 f=-0.713 shape=(1, 9000, 1)
logits [[ 1.6640086   0.25505388  1.6713345  -6.4438167 ]]
Iteration 200 of 1000: loss=1.91 " + "l1=1.14" + "l2=0.77 f=-0.712 shape=(1, 9000, 1)
logits [[ 1.5160416   0.37300557  1.5109137  -6.2486196 ]]
Iteration 300 of 1000: loss=1.73 " + "l1=0.991" + "l2=0.74 f=-0.72 shape=(1, 9000, 1)
logits [[ 1.4271773   0.43575937  1.4253643  -6.1683784 ]]
Iteration 400 of 1000: loss=1.62 " + "l1=0.879" + "l2=0.741 f=-0.726 shape=(1, 9000, 1)
logits [[ 1.3489633  0.4832106  1.3617529 -6.097298 ]]
Iteration 500 of 1000: loss=1.54 " + "l1=0.793" + "l2=0.747 f=-0.722 shape=(1, 9000, 1)
logits [[ 1.3027925   0.52170587  1.3149086  -6.026066  ]]
Iteration 600 of 1000: loss=1.48 " + "l1=0.739" + "l2=0.743 f=-0.712 shape=(1, 9000, 1)
logits [[ 1.2660621   0.54773945  1.2868916  -5.9505496 ]]
Iteration 700 of 1000: loss=1.43 " + "l1=0.689" + "l2=0.744 f=-0.704 shape=(1, 9000, 1)
logits [[ 1.2367816  0.579266   1.2679365 -5.9008746]]
Iteration 800 of 1000: loss=1.39 " + "l1=0.642" + "l2=0.749 f=-0.695 shape=(1, 9000, 1)
logits [[ 1.21668     0.60339695  1.2457991  -5.847402  ]]
Iteration 900 of 1000: loss=1.35 " + "l1=0.602" + "l2=0.751 f=-0.686 shape=(1, 9000, 1)
logits [[ 1.1960504  0.6245161  1.2265661 -5.7916265]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=44.9 " + "l1=44.9" + "l2=0 f=-0.746 shape=(1, 9000, 1)
logits [[ 3.667531  -0.8253869  2.242627  -8.070728 ]]
Iteration 100 of 1000: loss=4.29 " + "l1=0.0494" + "l2=4.24 f=-0.726 shape=(1, 9000, 1)
logits [[ 0.63026106  1.058802    1.0637406  -5.6583285 ]]
Iteration 200 of 1000: loss=3.28 " + "l1=0.0943" + "l2=3.18 f=-0.744 shape=(1, 9000, 1)
logits [[ 0.85170275  1.0362264   1.0456568  -5.9086976 ]]
Iteration 300 of 1000: loss=2.83 " + "l1=0" + "l2=2.83 f=-0.748 shape=(1, 9000, 1)
logits [[ 0.9215847  1.0373626  1.0265812 -5.9763246]]
Iteration 400 of 1000: loss=2.57 " + "l1=0.0045" + "l2=2.56 f=-0.747 shape=(1, 9000, 1)
logits [[ 0.98911893  1.0223892   1.0228393  -6.0221252 ]]
Iteration 500 of 1000: loss=2.42 " + "l1=0" + "l2=2.42 f=-0.745 shape=(1, 9000, 1)
logits [[ 1.0082405  1.0180378  1.0142461 -6.0193396]]
Iteration 600 of 1000: loss=2.33 " + "l1=0" + "l2=2.33 f=-0.744 shape=(1, 9000, 1)
logits [[ 0.9882277  1.0218645  1.0109578 -5.995311 ]]
Iteration 700 of 1000: loss=2.21 " + "l1=0" + "l2=2.21 f=-0.74 shape=(1, 9000, 1)
logits [[ 0.98554444  1.0120215   1.0110382  -5.970464  ]]
Iteration 800 of 1000: loss=2.19 " + "l1=0.0691" + "l2=2.12 f=-0.735 shape=(1, 9000, 1)
logits [[ 0.98339033  0.99797493  1.0048895  -5.9271197 ]]
Iteration 900 of 1000: loss=2.07 " + "l1=0" + "l2=2.07 f=-0.731 shape=(1, 9000, 1)
logits [[ 0.9687687   1.0006977   0.99536985 -5.8880196 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=24.7 " + "l1=24.7" + "l2=0 f=-0.746 shape=(1, 9000, 1)
logits [[ 3.667531  -0.8253869  2.242627  -8.070728 ]]
Iteration 100 of 1000: loss=3.73 " + "l1=0.0225" + "l2=3.7 f=-0.728 shape=(1, 9000, 1)
logits [[ 0.77039987  1.0447278   1.0488242  -5.7777314 ]]
Iteration 200 of 1000: loss=2.81 " + "l1=0" + "l2=2.81 f=-0.749 shape=(1, 9000, 1)
logits [[ 0.92061156  1.0364873   1.0353602  -5.9897313 ]]
Iteration 300 of 1000: loss=2.5 " + "l1=0.0328" + "l2=2.46 f=-0.746 shape=(1, 9000, 1)
logits [[ 1.0069021  1.0199203  1.0258912 -6.037517 ]]
Iteration 400 of 1000: loss=2.32 " + "l1=0.0495" + "l2=2.27 f=-0.745 shape=(1, 9000, 1)
logits [[ 1.0092347  1.0113249  1.0203322 -6.0215673]]
Iteration 500 of 1000: loss=2.19 " + "l1=0" + "l2=2.19 f=-0.747 shape=(1, 9000, 1)
logits [[ 0.90501213  1.0250685   1.0196993  -5.9366846 ]]
Iteration 600 of 1000: loss=2.07 " + "l1=0" + "l2=2.07 f=-0.739 shape=(1, 9000, 1)
logits [[ 0.96519125  1.0098168   1.0060992  -5.9363008 ]]
Iteration 700 of 1000: loss=2.01 " + "l1=0.0584" + "l2=1.95 f=-0.731 shape=(1, 9000, 1)
logits [[ 0.9748558   0.98343235  0.9940483  -5.87568   ]]
Iteration 800 of 1000: loss=1.94 " + "l1=0" + "l2=1.94 f=-0.733 shape=(1, 9000, 1)
logits [[ 0.8396511   0.9990421   0.99110407 -5.7634406 ]]
Iteration 900 of 1000: loss=1.9 " + "l1=0" + "l2=1.9 f=-0.728 shape=(1, 9000, 1)
logits [[ 0.8368345   0.99463934  0.980343   -5.7230673 ]]
--- 258.4492745399475 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0142 " + "l1=0.0142" + "l2=0 f=-0.746 shape=(1, 9000, 1)
logits [[ 3.667531  -0.8253869  2.242627  -8.070728 ]]
Iteration 100 of 1000: loss=0.0141 " + "l1=0.0139" + "l2=0.00018 f=-0.747 shape=(1, 9000, 1)
logits [[ 3.6336768 -0.8193395  2.2440066 -8.046738 ]]
Iteration 200 of 1000: loss=0.014 " + "l1=0.0139" + "l2=0.000155 f=-0.747 shape=(1, 9000, 1)
logits [[ 3.6318123  -0.81879693  2.2438197  -8.04522   ]]
Iteration 300 of 1000: loss=0.014 " + "l1=0.0138" + "l2=0.000183 f=-0.747 shape=(1, 9000, 1)
logits [[ 3.6278791 -0.8178493  2.2438157 -8.042289 ]]
Iteration 400 of 1000: loss=0.014 " + "l1=0.0138" + "l2=0.00024 f=-0.747 shape=(1, 9000, 1)
logits [[ 3.624197  -0.817023   2.2438915 -8.039608 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.142 " + "l1=0.142" + "l2=0 f=-0.746 shape=(1, 9000, 1)
logits [[ 3.667531  -0.8253869  2.242627  -8.070728 ]]
Iteration 100 of 1000: loss=0.127 " + "l1=0.118" + "l2=0.00924 f=-0.751 shape=(1, 9000, 1)
logits [[ 3.4257674  -0.77314466  2.249022   -7.903868  ]]
Iteration 200 of 1000: loss=0.122 " + "l1=0.108" + "l2=0.0133 f=-0.75 shape=(1, 9000, 1)
logits [[ 3.3347528 -0.7555914  2.250505  -7.8311734]]
Iteration 300 of 1000: loss=0.118 " + "l1=0.101" + "l2=0.0164 f=-0.749 shape=(1, 9000, 1)
logits [[ 3.2661638  -0.73952514  2.2511947  -7.7738414 ]]
Iteration 400 of 1000: loss=0.115 " + "l1=0.0964" + "l2=0.0187 f=-0.748 shape=(1, 9000, 1)
logits [[ 3.2154388 -0.7267216  2.2516522 -7.7312093]]
Iteration 500 of 1000: loss=0.113 " + "l1=0.0924" + "l2=0.0201 f=-0.746 shape=(1, 9000, 1)
logits [[ 3.176105  -0.7176897  2.252311  -7.695682 ]]
Iteration 600 of 1000: loss=0.11 " + "l1=0.0886" + "l2=0.0212 f=-0.745 shape=(1, 9000, 1)
logits [[ 3.1387613 -0.7090155  2.2529893 -7.662503 ]]
Iteration 700 of 1000: loss=0.107 " + "l1=0.0848" + "l2=0.0221 f=-0.744 shape=(1, 9000, 1)
logits [[ 3.1018922  -0.70063263  2.2538702  -7.6303983 ]]
Iteration 800 of 1000: loss=0.104 " + "l1=0.0805" + "l2=0.0234 f=-0.742 shape=(1, 9000, 1)
logits [[ 3.0590384 -0.688828   2.2544947 -7.5914803]]
Iteration 900 of 1000: loss=0.1 " + "l1=0.0758" + "l2=0.0245 f=-0.74 shape=(1, 9000, 1)
logits [[ 3.0137825  -0.67712206  2.2556388  -7.552901  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.42 " + "l1=1.42" + "l2=0 f=-0.746 shape=(1, 9000, 1)
logits [[ 3.667531  -0.8253869  2.242627  -8.070728 ]]
Iteration 100 of 1000: loss=0.296 " + "l1=0.00851" + "l2=0.287 f=-0.77 shape=(1, 9000, 1)
logits [[ 2.2388022 -0.5000354  2.2302942 -7.0477962]]
Iteration 200 of 1000: loss=0.222 " + "l1=0" + "l2=0.222 f=-0.764 shape=(1, 9000, 1)
logits [[ 2.2067456 -0.5267011  2.2156594 -6.9533215]]
Iteration 300 of 1000: loss=0.195 " + "l1=0" + "l2=0.195 f=-0.76 shape=(1, 9000, 1)
logits [[ 2.2051306 -0.5412118  2.209594  -6.915195 ]]
Iteration 400 of 1000: loss=0.181 " + "l1=0" + "l2=0.181 f=-0.76 shape=(1, 9000, 1)
logits [[ 2.1922991 -0.5504263  2.2080882 -6.890302 ]]
Iteration 500 of 1000: loss=0.168 " + "l1=0" + "l2=0.168 f=-0.76 shape=(1, 9000, 1)
logits [[ 2.1824272  -0.56025803  2.2083874  -6.8720493 ]]
Iteration 600 of 1000: loss=0.15 " + "l1=0.00409" + "l2=0.146 f=-0.759 shape=(1, 9000, 1)
logits [[ 2.2148552  -0.57085675  2.2107694  -6.889463  ]]
Iteration 700 of 1000: loss=0.137 " + "l1=0.00618" + "l2=0.131 f=-0.759 shape=(1, 9000, 1)
logits [[ 2.216942  -0.5747388  2.2107596 -6.8888373]]
Iteration 800 of 1000: loss=0.121 " + "l1=0" + "l2=0.121 f=-0.76 shape=(1, 9000, 1)
logits [[ 2.20175    -0.57387024  2.2112064  -6.8804803 ]]
Iteration 900 of 1000: loss=0.108 " + "l1=0" + "l2=0.108 f=-0.76 shape=(1, 9000, 1)
logits [[ 2.2085805 -0.5733617  2.211539  -6.888204 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.784 " + "l1=0.784" + "l2=0 f=-0.746 shape=(1, 9000, 1)
logits [[ 3.667531  -0.8253869  2.242627  -8.070728 ]]
Iteration 100 of 1000: loss=0.308 " + "l1=0.0256" + "l2=0.282 f=-0.769 shape=(1, 9000, 1)
logits [[ 2.2807455  -0.49074715  2.2341242  -7.1001596 ]]
Iteration 200 of 1000: loss=0.212 " + "l1=0" + "l2=0.212 f=-0.764 shape=(1, 9000, 1)
logits [[ 2.213416   -0.51414174  2.214102   -6.969901  ]]
Iteration 300 of 1000: loss=0.182 " + "l1=0" + "l2=0.182 f=-0.759 shape=(1, 9000, 1)
logits [[ 2.2020102  -0.52054876  2.2044518  -6.923481  ]]
Iteration 400 of 1000: loss=0.159 " + "l1=0" + "l2=0.159 f=-0.755 shape=(1, 9000, 1)
logits [[ 2.1969316 -0.5151598  2.2027156 -6.902956 ]]
Iteration 500 of 1000: loss=0.136 " + "l1=0" + "l2=0.136 f=-0.753 shape=(1, 9000, 1)
logits [[ 2.202164  -0.5133355  2.2034273 -6.9045777]]
Iteration 600 of 1000: loss=0.119 " + "l1=0" + "l2=0.119 f=-0.751 shape=(1, 9000, 1)
logits [[ 2.195628   -0.49897593  2.205719   -6.906301  ]]
Iteration 700 of 1000: loss=0.105 " + "l1=0" + "l2=0.105 f=-0.748 shape=(1, 9000, 1)
logits [[ 2.1948333 -0.4927333  2.2128818 -6.9087043]]
Iteration 800 of 1000: loss=0.0945 " + "l1=0" + "l2=0.0945 f=-0.748 shape=(1, 9000, 1)
logits [[ 2.1969638 -0.4878729  2.2190688 -6.919455 ]]
Iteration 900 of 1000: loss=0.0849 " + "l1=0" + "l2=0.0849 f=-0.747 shape=(1, 9000, 1)
logits [[ 2.2066069 -0.4870773  2.224633  -6.9328246]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.463 " + "l1=0.463" + "l2=0 f=-0.746 shape=(1, 9000, 1)
logits [[ 3.667531  -0.8253869  2.242627  -8.070728 ]]
Iteration 100 of 1000: loss=0.296 " + "l1=0.197" + "l2=0.099 f=-0.755 shape=(1, 9000, 1)
logits [[ 2.8571246  -0.63034475  2.251722   -7.4984946 ]]
Iteration 200 of 1000: loss=0.238 " + "l1=0.1" + "l2=0.137 f=-0.755 shape=(1, 9000, 1)
logits [[ 2.5458968 -0.5663985  2.2372324 -7.23682  ]]
Iteration 300 of 1000: loss=0.186 " + "l1=0.0129" + "l2=0.173 f=-0.757 shape=(1, 9000, 1)
logits [[ 2.2544756  -0.52404475  2.214804   -6.9727745 ]]
Iteration 400 of 1000: loss=0.148 " + "l1=0.00162" + "l2=0.147 f=-0.748 shape=(1, 9000, 1)
logits [[ 2.2107353  -0.49470365  2.2057364  -6.915369  ]]
Iteration 500 of 1000: loss=0.123 " + "l1=0" + "l2=0.123 f=-0.743 shape=(1, 9000, 1)
logits [[ 2.209538   -0.46746394  2.211232   -6.9239926 ]]
Iteration 600 of 1000: loss=0.104 " + "l1=0.00143" + "l2=0.103 f=-0.737 shape=(1, 9000, 1)
logits [[ 2.2261498 -0.4559262  2.221753  -6.9396625]]
Iteration 700 of 1000: loss=0.0913 " + "l1=0" + "l2=0.0913 f=-0.736 shape=(1, 9000, 1)
logits [[ 2.2238574  -0.44350326  2.2292585  -6.9525294 ]]
Iteration 800 of 1000: loss=0.0796 " + "l1=0" + "l2=0.0796 f=-0.733 shape=(1, 9000, 1)
logits [[ 2.23176    -0.43954295  2.234877   -6.959068  ]]
Iteration 900 of 1000: loss=0.0701 " + "l1=0.00191" + "l2=0.0682 f=-0.731 shape=(1, 9000, 1)
logits [[ 2.2424347 -0.4355886  2.2365663 -6.9685426]]
--- 252.74102878570557 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.117 " + "l1=0.117" + "l2=0 f=-0.746 shape=(1, 9000, 1)
logits [[ 3.667531  -0.8253869  2.242627  -8.070728 ]]
Iteration 100 of 1000: loss=0.117 " + "l1=0.116" + "l2=0.00053 f=-0.743 shape=(1, 9000, 1)
logits [[ 3.6072717  -0.81165075  2.2295623  -7.997253  ]]
Iteration 200 of 1000: loss=0.116 " + "l1=0.116" + "l2=0.000617 f=-0.742 shape=(1, 9000, 1)
logits [[ 3.595202 -0.808343  2.226886 -7.983582]]
Iteration 300 of 1000: loss=0.116 " + "l1=0.116" + "l2=0.000747 f=-0.742 shape=(1, 9000, 1)
logits [[ 3.5833828  -0.80535203  2.22435    -7.969659  ]]
Iteration 400 of 1000: loss=0.116 " + "l1=0.115" + "l2=0.000905 f=-0.741 shape=(1, 9000, 1)
logits [[ 3.5733755 -0.8028718  2.2221262 -7.957341 ]]
Iteration 500 of 1000: loss=0.116 " + "l1=0.115" + "l2=0.00103 f=-0.741 shape=(1, 9000, 1)
logits [[ 3.5651455  -0.80080485  2.220251   -7.9470754 ]]
Iteration 600 of 1000: loss=0.116 " + "l1=0.115" + "l2=0.00119 f=-0.74 shape=(1, 9000, 1)
logits [[ 3.5582187 -0.7991194  2.2186666 -7.938343 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.17 " + "l1=1.17" + "l2=0 f=-0.746 shape=(1, 9000, 1)
logits [[ 3.667531  -0.8253869  2.242627  -8.070728 ]]
Iteration 100 of 1000: loss=1.1 " + "l1=1.05" + "l2=0.0454 f=-0.719 shape=(1, 9000, 1)
logits [[ 3.108285   -0.68428856  2.118488   -7.418393  ]]
Iteration 200 of 1000: loss=1.07 " + "l1=1" + "l2=0.0666 f=-0.708 shape=(1, 9000, 1)
logits [[ 2.873358  -0.6391203  2.0613644 -7.1267686]]
Iteration 300 of 1000: loss=1.04 " + "l1=0.954" + "l2=0.0881 f=-0.698 shape=(1, 9000, 1)
logits [[ 2.6693296  -0.60315436  2.0140412  -6.872296  ]]
Iteration 400 of 1000: loss=1.02 " + "l1=0.914" + "l2=0.108 f=-0.691 shape=(1, 9000, 1)
logits [[ 2.4903772  -0.57700175  1.9744842  -6.6512675 ]]
Iteration 500 of 1000: loss=1 " + "l1=0.88" + "l2=0.121 f=-0.687 shape=(1, 9000, 1)
logits [[ 2.3361294 -0.5549555  1.9403026 -6.467719 ]]
Iteration 600 of 1000: loss=0.984 " + "l1=0.853" + "l2=0.13 f=-0.682 shape=(1, 9000, 1)
logits [[ 2.2132165 -0.5367756  1.9135548 -6.319817 ]]
Iteration 700 of 1000: loss=0.966 " + "l1=0.826" + "l2=0.14 f=-0.681 shape=(1, 9000, 1)
logits [[ 2.0864289  -0.51638293  1.8830264  -6.17544   ]]
Iteration 800 of 1000: loss=0.944 " + "l1=0.793" + "l2=0.151 f=-0.68 shape=(1, 9000, 1)
logits [[ 1.9269048  -0.48932832  1.8480269  -6.003852  ]]
Iteration 900 of 1000: loss=0.921 " + "l1=0.77" + "l2=0.152 f=-0.676 shape=(1, 9000, 1)
logits [[ 1.8207631  -0.47713655  1.8229322  -5.872231  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.7 " + "l1=11.7" + "l2=0 f=-0.746 shape=(1, 9000, 1)
logits [[ 3.667531  -0.8253869  2.242627  -8.070728 ]]
Iteration 100 of 1000: loss=6.52 " + "l1=3.94" + "l2=2.58 f=-0.485 shape=(1, 9000, 1)
logits [[ 0.31750366 -0.3756059   1.02828    -2.9119754 ]]
Iteration 200 of 1000: loss=5.09 " + "l1=1.95" + "l2=3.15 f=-0.372 shape=(1, 9000, 1)
logits [[-0.37170878 -0.41019848  0.62138873 -1.3261049 ]]
Iteration 300 of 1000: loss=4.18 " + "l1=1.04" + "l2=3.14 f=-0.315 shape=(1, 9000, 1)
logits [[-0.58636785 -0.46533757  0.41424775 -0.62407905]]
Iteration 400 of 1000: loss=3.35 " + "l1=0.248" + "l2=3.1 f=-0.266 shape=(1, 9000, 1)
logits [[-0.7656937  -0.464255    0.20699541 -0.04111782]]
Iteration 500 of 1000: loss=2.71 " + "l1=0" + "l2=2.71 f=-0.245 shape=(1, 9000, 1)
logits [[-0.7700778  -0.4563972   0.10953168  0.13752422]]
Iteration 600 of 1000: loss=2.28 " + "l1=0" + "l2=2.28 f=-0.238 shape=(1, 9000, 1)
logits [[-0.7283894  -0.4834911   0.11392117  0.14423162]]
Iteration 700 of 1000: loss=1.91 " + "l1=0" + "l2=1.91 f=-0.235 shape=(1, 9000, 1)
logits [[-0.6236907  -0.55934316  0.12008013  0.12157115]]
Iteration 800 of 1000: loss=1.63 " + "l1=0" + "l2=1.63 f=-0.229 shape=(1, 9000, 1)
logits [[-0.54918194 -0.61633784  0.12341434  0.12754595]]
Iteration 900 of 1000: loss=1.42 " + "l1=0.00124" + "l2=1.42 f=-0.224 shape=(1, 9000, 1)
logits [[-0.52063257 -0.65345174  0.13875267  0.13750836]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.46 " + "l1=6.46" + "l2=0 f=-0.746 shape=(1, 9000, 1)
logits [[ 3.667531  -0.8253869  2.242627  -8.070728 ]]
Iteration 100 of 1000: loss=4.47 " + "l1=3.65" + "l2=0.82 f=-0.6 shape=(1, 9000, 1)
logits [[ 1.5645351  -0.46241188  1.5657142  -5.067361  ]]
Iteration 200 of 1000: loss=3.91 " + "l1=2.79" + "l2=1.12 f=-0.532 shape=(1, 9000, 1)
logits [[ 0.9178494  -0.47558057  1.246061   -3.818031  ]]
Iteration 300 of 1000: loss=3.45 " + "l1=2.21" + "l2=1.25 f=-0.497 shape=(1, 9000, 1)
logits [[ 0.47499397 -0.4786377   1.0155556  -3.0002565 ]]
Iteration 400 of 1000: loss=3.04 " + "l1=1.58" + "l2=1.46 f=-0.433 shape=(1, 9000, 1)
logits [[ 0.04528042 -0.4716393   0.7813057  -2.0872068 ]]
Iteration 500 of 1000: loss=2.58 " + "l1=1.01" + "l2=1.56 f=-0.377 shape=(1, 9000, 1)
logits [[-0.2967446  -0.4661777   0.55059874 -1.2945485 ]]
Iteration 600 of 1000: loss=2.12 " + "l1=0.585" + "l2=1.54 f=-0.357 shape=(1, 9000, 1)
logits [[-0.54037315 -0.4558003   0.31487823 -0.7485426 ]]
Iteration 700 of 1000: loss=1.72 " + "l1=0.258" + "l2=1.46 f=-0.33 shape=(1, 9000, 1)
logits [[-0.70207155 -0.4759468   0.1643946  -0.30447963]]
Iteration 800 of 1000: loss=1.4 " + "l1=0.0164" + "l2=1.38 f=-0.296 shape=(1, 9000, 1)
logits [[-0.77775174 -0.5273036   0.07540292  0.04559311]]
Iteration 900 of 1000: loss=1.15 " + "l1=0.00294" + "l2=1.15 f=-0.283 shape=(1, 9000, 1)
logits [[-0.76301    -0.571114    0.10378444  0.09844285]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.81 " + "l1=3.81" + "l2=0 f=-0.746 shape=(1, 9000, 1)
logits [[ 3.667531  -0.8253869  2.242627  -8.070728 ]]
Iteration 100 of 1000: loss=2.96 " + "l1=2.48" + "l2=0.48 f=-0.671 shape=(1, 9000, 1)
logits [[ 1.8097278  -0.46891367  1.8050859  -5.8302994 ]]
Iteration 200 of 1000: loss=2.7 " + "l1=2.25" + "l2=0.454 f=-0.634 shape=(1, 9000, 1)
logits [[ 1.6243067  -0.49619126  1.6276976  -5.2910852 ]]
Iteration 300 of 1000: loss=2.55 " + "l1=2.03" + "l2=0.519 f=-0.604 shape=(1, 9000, 1)
logits [[ 1.4391167 -0.518681   1.4621077 -4.796598 ]]
Iteration 400 of 1000: loss=2.39 " + "l1=1.79" + "l2=0.607 f=-0.578 shape=(1, 9000, 1)
logits [[ 1.1371696 -0.5405387  1.294858  -4.2035837]]
Iteration 500 of 1000: loss=2.26 " + "l1=1.59" + "l2=0.665 f=-0.546 shape=(1, 9000, 1)
logits [[ 0.89332086 -0.52688605  1.1729056  -3.7244396 ]]
Iteration 600 of 1000: loss=2.12 " + "l1=1.44" + "l2=0.676 f=-0.514 shape=(1, 9000, 1)
logits [[ 0.7703838 -0.561661   1.083226  -3.3496392]]
Iteration 700 of 1000: loss=1.96 " + "l1=1.23" + "l2=0.73 f=-0.488 shape=(1, 9000, 1)
logits [[ 0.5091202 -0.5592964  0.9357161 -2.8368125]]
Iteration 800 of 1000: loss=1.79 " + "l1=1" + "l2=0.785 f=-0.459 shape=(1, 9000, 1)
logits [[ 0.26066652 -0.57894695  0.77925473 -2.2973738 ]]
Iteration 900 of 1000: loss=1.61 " + "l1=0.787" + "l2=0.826 f=-0.433 shape=(1, 9000, 1)
logits [[ 0.02965056 -0.568794    0.615361   -1.8071002 ]]
--- 267.0343451499939 seconds ---
Adv result:3
Loading record A04658
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0726 " + "l1=0.0726" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[ 4.8023205 -2.4531648  2.3555799 -7.8409467]]
Iteration 100 of 1000: loss=0.0722 " + "l1=0.072" + "l2=0.000263 f=-0.783 shape=(1, 9000, 1)
logits [[ 4.7649913 -2.4301374  2.3376658 -7.8029437]]
Iteration 200 of 1000: loss=0.0721 " + "l1=0.0719" + "l2=0.000245 f=-0.782 shape=(1, 9000, 1)
logits [[ 4.761127  -2.4269595  2.3352134 -7.798437 ]]
Iteration 300 of 1000: loss=0.0721 " + "l1=0.0718" + "l2=0.000293 f=-0.782 shape=(1, 9000, 1)
logits [[ 4.7551565 -2.4227648  2.3320622 -7.791817 ]]
Iteration 400 of 1000: loss=0.072 " + "l1=0.0717" + "l2=0.000371 f=-0.781 shape=(1, 9000, 1)
logits [[ 4.7490745 -2.4185674  2.328986  -7.785209 ]]
Iteration 500 of 1000: loss=0.072 " + "l1=0.0716" + "l2=0.00047 f=-0.781 shape=(1, 9000, 1)
logits [[ 4.7432356 -2.4145951  2.3262196 -7.778906 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.726 " + "l1=0.726" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[ 4.8023205 -2.4531648  2.3555799 -7.8409467]]
Iteration 100 of 1000: loss=0.696 " + "l1=0.681" + "l2=0.0151 f=-0.77 shape=(1, 9000, 1)
logits [[ 4.5251575 -2.2798836  2.2250657 -7.552246 ]]
Iteration 200 of 1000: loss=0.682 " + "l1=0.658" + "l2=0.0233 f=-0.759 shape=(1, 9000, 1)
logits [[ 4.403913  -2.179923   2.1505334 -7.411022 ]]
Iteration 300 of 1000: loss=0.671 " + "l1=0.64" + "l2=0.0313 f=-0.749 shape=(1, 9000, 1)
logits [[ 4.2960453 -2.1010454  2.089685  -7.282483 ]]
Iteration 400 of 1000: loss=0.662 " + "l1=0.625" + "l2=0.0369 f=-0.742 shape=(1, 9000, 1)
logits [[ 4.203302  -2.0486424  2.0523138 -7.1751904]]
Iteration 500 of 1000: loss=0.654 " + "l1=0.612" + "l2=0.0418 f=-0.737 shape=(1, 9000, 1)
logits [[ 4.1142435 -2.0088813  2.020922  -7.0742154]]
Iteration 600 of 1000: loss=0.644 " + "l1=0.596" + "l2=0.0479 f=-0.732 shape=(1, 9000, 1)
logits [[ 3.9969292 -1.9678081  1.9856361 -6.941712 ]]
Iteration 700 of 1000: loss=0.633 " + "l1=0.579" + "l2=0.0544 f=-0.724 shape=(1, 9000, 1)
logits [[ 3.8699763 -1.9175096  1.9504222 -6.8000526]]
Iteration 800 of 1000: loss=0.622 " + "l1=0.565" + "l2=0.0574 f=-0.716 shape=(1, 9000, 1)
logits [[ 3.7771707 -1.870443   1.9240649 -6.693667 ]]
Iteration 900 of 1000: loss=0.611 " + "l1=0.551" + "l2=0.0594 f=-0.707 shape=(1, 9000, 1)
logits [[ 3.6916378 -1.8198133  1.901712  -6.600886 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.26 " + "l1=7.26" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[ 4.8023205 -2.4531648  2.3555799 -7.8409467]]
Iteration 100 of 1000: loss=3.88 " + "l1=1.97" + "l2=1.91 f=-0.604 shape=(1, 9000, 1)
logits [[ 1.499407   -0.46864867  0.8680579  -4.316167  ]]
Iteration 200 of 1000: loss=2.38 " + "l1=0.106" + "l2=2.28 f=-0.599 shape=(1, 9000, 1)
logits [[ 0.30042908  0.21153294  0.31798667 -3.2263455 ]]
Iteration 300 of 1000: loss=1.92 " + "l1=0" + "l2=1.92 f=-0.608 shape=(1, 9000, 1)
logits [[ 0.25265616  0.25731713  0.25274327 -3.1962566 ]]
Iteration 400 of 1000: loss=1.7 " + "l1=0.0232" + "l2=1.67 f=-0.611 shape=(1, 9000, 1)
logits [[ 0.23780447  0.2145664   0.23191868 -3.1281815 ]]
Iteration 500 of 1000: loss=1.52 " + "l1=0.018" + "l2=1.51 f=-0.609 shape=(1, 9000, 1)
logits [[ 0.21689048  0.19892652  0.20755662 -3.061051  ]]
Iteration 600 of 1000: loss=1.38 " + "l1=0" + "l2=1.38 f=-0.615 shape=(1, 9000, 1)
logits [[ 0.16471377  0.19898771  0.19163762 -3.0155346 ]]
Iteration 700 of 1000: loss=1.24 " + "l1=0" + "l2=1.24 f=-0.616 shape=(1, 9000, 1)
logits [[ 0.17924371  0.1960565   0.1838799  -3.0225322 ]]
Iteration 800 of 1000: loss=1.1 " + "l1=0" + "l2=1.1 f=-0.619 shape=(1, 9000, 1)
logits [[ 0.19268364  0.20552525  0.20379879 -3.0797548 ]]
Iteration 900 of 1000: loss=0.994 " + "l1=0.00137" + "l2=0.993 f=-0.625 shape=(1, 9000, 1)
logits [[ 0.19581011  0.21828462  0.21965411 -3.132732  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.99 " + "l1=3.99" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[ 4.8023205 -2.4531648  2.3555799 -7.8409467]]
Iteration 100 of 1000: loss=2.99 " + "l1=2.45" + "l2=0.542 f=-0.67 shape=(1, 9000, 1)
logits [[ 3.0543678 -1.4021789  1.5578487 -5.888738 ]]
Iteration 200 of 1000: loss=2.38 " + "l1=1.44" + "l2=0.949 f=-0.598 shape=(1, 9000, 1)
logits [[ 1.9253012 -0.6854885  1.0376772 -4.6712074]]
Iteration 300 of 1000: loss=1.87 " + "l1=0.715" + "l2=1.15 f=-0.579 shape=(1, 9000, 1)
logits [[ 0.9595915  -0.34000474  0.72038037 -3.6569128 ]]
Iteration 400 of 1000: loss=1.43 " + "l1=0.296" + "l2=1.13 f=-0.591 shape=(1, 9000, 1)
logits [[ 0.4588034  -0.07689892  0.46064156 -3.2072659 ]]
Iteration 500 of 1000: loss=1.15 " + "l1=0.185" + "l2=0.965 f=-0.592 shape=(1, 9000, 1)
logits [[ 0.37215784  0.03628089  0.3685097  -3.1432881 ]]
Iteration 600 of 1000: loss=0.927 " + "l1=0.0916" + "l2=0.835 f=-0.604 shape=(1, 9000, 1)
logits [[ 0.33354497  0.16707177  0.32972813 -3.2456584 ]]
Iteration 700 of 1000: loss=0.778 " + "l1=0.00916" + "l2=0.769 f=-0.602 shape=(1, 9000, 1)
logits [[ 0.23889205  0.23763381  0.25428838 -3.137334  ]]
Iteration 800 of 1000: loss=0.633 " + "l1=0" + "l2=0.633 f=-0.591 shape=(1, 9000, 1)
logits [[ 0.232194    0.25275558  0.24648291 -3.0967073 ]]
Iteration 900 of 1000: loss=0.538 " + "l1=0" + "l2=0.538 f=-0.576 shape=(1, 9000, 1)
logits [[ 0.22776039  0.23195253  0.23051298 -2.9946802 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.36 " + "l1=2.36" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[ 4.8023205 -2.4531648  2.3555799 -7.8409467]]
Iteration 100 of 1000: loss=2.01 " + "l1=1.82" + "l2=0.187 f=-0.716 shape=(1, 9000, 1)
logits [[ 3.8004832 -1.813593   1.8745387 -6.7260623]]
Iteration 200 of 1000: loss=1.83 " + "l1=1.54" + "l2=0.292 f=-0.678 shape=(1, 9000, 1)
logits [[ 3.2429502 -1.5023148  1.6194501 -6.070249 ]]
Iteration 300 of 1000: loss=1.67 " + "l1=1.26" + "l2=0.4 f=-0.641 shape=(1, 9000, 1)
logits [[ 2.6745827 -1.2174801  1.4037862 -5.4256573]]
Iteration 400 of 1000: loss=1.52 " + "l1=1.05" + "l2=0.471 f=-0.625 shape=(1, 9000, 1)
logits [[ 2.1927385 -1.0270115  1.2497457 -4.916204 ]]
Iteration 500 of 1000: loss=1.36 " + "l1=0.794" + "l2=0.57 f=-0.585 shape=(1, 9000, 1)
logits [[ 1.7298156 -0.7142993  1.0330484 -4.389602 ]]
Iteration 600 of 1000: loss=1.21 " + "l1=0.587" + "l2=0.621 f=-0.58 shape=(1, 9000, 1)
logits [[ 1.2709526  -0.53538805  0.8675598  -3.9219673 ]]
Iteration 700 of 1000: loss=0.986 " + "l1=0.313" + "l2=0.673 f=-0.605 shape=(1, 9000, 1)
logits [[ 0.70231324 -0.2615551   0.69424415 -3.5531826 ]]
Iteration 800 of 1000: loss=0.762 " + "l1=0.201" + "l2=0.561 f=-0.592 shape=(1, 9000, 1)
logits [[ 0.57183075 -0.04803582  0.5717979  -3.4644208 ]]
Iteration 900 of 1000: loss=0.638 " + "l1=0.143" + "l2=0.496 f=-0.577 shape=(1, 9000, 1)
logits [[ 0.4803433   0.05131013  0.48981047 -3.3307467 ]]
--- 259.77312541007996 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0245 " + "l1=0.0245" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[ 4.8023205 -2.4531648  2.3555799 -7.8409467]]
Iteration 100 of 1000: loss=0.0243 " + "l1=0.0241" + "l2=0.000176 f=-0.785 shape=(1, 9000, 1)
logits [[ 4.773387  -2.4594655  2.3609316 -7.8163505]]
Iteration 200 of 1000: loss=0.0242 " + "l1=0.0241" + "l2=0.000141 f=-0.786 shape=(1, 9000, 1)
logits [[ 4.772351  -2.4601986  2.3614972 -7.8161507]]
Iteration 300 of 1000: loss=0.0242 " + "l1=0.0241" + "l2=0.000166 f=-0.786 shape=(1, 9000, 1)
logits [[ 4.7688737 -2.4614508  2.3626196 -7.8137345]]
Iteration 400 of 1000: loss=0.0242 " + "l1=0.024" + "l2=0.000198 f=-0.786 shape=(1, 9000, 1)
logits [[ 4.765022  -2.4626973  2.3638585 -7.8110495]]
Iteration 500 of 1000: loss=0.0242 " + "l1=0.024" + "l2=0.000277 f=-0.786 shape=(1, 9000, 1)
logits [[ 4.7612114 -2.4638052  2.3650784 -7.8084702]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.245 " + "l1=0.245" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[ 4.8023205 -2.4531648  2.3555799 -7.8409467]]
Iteration 100 of 1000: loss=0.23 " + "l1=0.222" + "l2=0.00769 f=-0.791 shape=(1, 9000, 1)
logits [[ 4.60719   -2.4914198  2.3870957 -7.6660724]]
Iteration 200 of 1000: loss=0.224 " + "l1=0.213" + "l2=0.0107 f=-0.793 shape=(1, 9000, 1)
logits [[ 4.5325193 -2.5053208  2.4004538 -7.6009355]]
Iteration 300 of 1000: loss=0.219 " + "l1=0.205" + "l2=0.0136 f=-0.795 shape=(1, 9000, 1)
logits [[ 4.4630117 -2.5167944  2.4133582 -7.5405035]]
Iteration 400 of 1000: loss=0.214 " + "l1=0.197" + "l2=0.0163 f=-0.797 shape=(1, 9000, 1)
logits [[ 4.3997483 -2.52496    2.4251068 -7.4861913]]
Iteration 500 of 1000: loss=0.21 " + "l1=0.191" + "l2=0.0186 f=-0.796 shape=(1, 9000, 1)
logits [[ 4.34488   -2.5294526  2.4355233 -7.436547 ]]
Iteration 600 of 1000: loss=0.206 " + "l1=0.185" + "l2=0.0207 f=-0.796 shape=(1, 9000, 1)
logits [[ 4.291079  -2.5307806  2.4423053 -7.387105 ]]
Iteration 700 of 1000: loss=0.202 " + "l1=0.179" + "l2=0.0231 f=-0.796 shape=(1, 9000, 1)
logits [[ 4.2320933 -2.5316288  2.44635   -7.332587 ]]
Iteration 800 of 1000: loss=0.197 " + "l1=0.17" + "l2=0.0265 f=-0.798 shape=(1, 9000, 1)
logits [[ 4.147604  -2.529361   2.4457886 -7.2558436]]
Iteration 900 of 1000: loss=0.191 " + "l1=0.162" + "l2=0.0295 f=-0.799 shape=(1, 9000, 1)
logits [[ 4.0637565 -2.5263705  2.4456778 -7.181006 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.45 " + "l1=2.45" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[ 4.8023205 -2.4531648  2.3555799 -7.8409467]]
Iteration 100 of 1000: loss=1.22 " + "l1=0.662" + "l2=0.561 f=-0.819 shape=(1, 9000, 1)
logits [[ 3.128824  -2.5501122  2.466527  -6.3214793]]
Iteration 200 of 1000: loss=0.678 " + "l1=0.00712" + "l2=0.671 f=-0.807 shape=(1, 9000, 1)
logits [[ 2.5041103 -2.5763462  2.496993  -5.6521764]]
Iteration 300 of 1000: loss=0.443 " + "l1=0" + "l2=0.443 f=-0.822 shape=(1, 9000, 1)
logits [[ 2.5192919 -2.687781   2.5279489 -5.6480355]]
Iteration 400 of 1000: loss=0.334 " + "l1=0.00573" + "l2=0.328 f=-0.822 shape=(1, 9000, 1)
logits [[ 2.5489733 -2.740414   2.5432482 -5.638081 ]]
Iteration 500 of 1000: loss=0.27 " + "l1=0" + "l2=0.27 f=-0.822 shape=(1, 9000, 1)
logits [[ 2.5559034 -2.7804117  2.559777  -5.6218715]]
Iteration 600 of 1000: loss=0.234 " + "l1=0.00727" + "l2=0.226 f=-0.817 shape=(1, 9000, 1)
logits [[ 2.574853  -2.800246   2.5675845 -5.610802 ]]
Iteration 700 of 1000: loss=0.207 " + "l1=0.00726" + "l2=0.2 f=-0.811 shape=(1, 9000, 1)
logits [[ 2.5768192 -2.809933   2.5695555 -5.57991  ]]
Iteration 800 of 1000: loss=0.185 " + "l1=0" + "l2=0.185 f=-0.805 shape=(1, 9000, 1)
logits [[ 2.5673223 -2.814862   2.5688016 -5.5405316]]
Iteration 900 of 1000: loss=0.174 " + "l1=0" + "l2=0.174 f=-0.797 shape=(1, 9000, 1)
logits [[ 2.5464187 -2.8044212  2.5594196 -5.4908457]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.35 " + "l1=1.35" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[ 4.8023205 -2.4531648  2.3555799 -7.8409467]]
Iteration 100 of 1000: loss=0.934 " + "l1=0.749" + "l2=0.185 f=-0.802 shape=(1, 9000, 1)
logits [[ 3.808352  -2.5490718  2.445871  -6.913283 ]]
Iteration 200 of 1000: loss=0.75 " + "l1=0.488" + "l2=0.262 f=-0.808 shape=(1, 9000, 1)
logits [[ 3.3623898 -2.548599   2.4755929 -6.52006  ]]
Iteration 300 of 1000: loss=0.584 " + "l1=0.269" + "l2=0.315 f=-0.796 shape=(1, 9000, 1)
logits [[ 2.9708393 -2.531303   2.48163   -6.1038914]]
Iteration 400 of 1000: loss=0.439 " + "l1=0.0887" + "l2=0.35 f=-0.794 shape=(1, 9000, 1)
logits [[ 2.6250365 -2.533718   2.4637635 -5.729347 ]]
Iteration 500 of 1000: loss=0.308 " + "l1=0.00223" + "l2=0.306 f=-0.81 shape=(1, 9000, 1)
logits [[ 2.5008132 -2.6534975  2.496765  -5.5820937]]
Iteration 600 of 1000: loss=0.246 " + "l1=0.0016" + "l2=0.244 f=-0.813 shape=(1, 9000, 1)
logits [[ 2.518029  -2.701377   2.5151281 -5.5823355]]
Iteration 700 of 1000: loss=0.212 " + "l1=0" + "l2=0.212 f=-0.806 shape=(1, 9000, 1)
logits [[ 2.5193636 -2.7148216  2.5248523 -5.551477 ]]
Iteration 800 of 1000: loss=0.186 " + "l1=0.00133" + "l2=0.184 f=-0.796 shape=(1, 9000, 1)
logits [[ 2.535391  -2.714513   2.5329683 -5.5383425]]
Iteration 900 of 1000: loss=0.167 " + "l1=0" + "l2=0.167 f=-0.786 shape=(1, 9000, 1)
logits [[ 2.5349169 -2.7139997  2.5402887 -5.5059175]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.795 " + "l1=0.795" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[ 4.8023205 -2.4531648  2.3555799 -7.8409467]]
Iteration 100 of 1000: loss=0.642 " + "l1=0.563" + "l2=0.0793 f=-0.795 shape=(1, 9000, 1)
logits [[ 4.159302  -2.5305169  2.4269233 -7.23632  ]]
Iteration 200 of 1000: loss=0.574 " + "l1=0.47" + "l2=0.103 f=-0.799 shape=(1, 9000, 1)
logits [[ 3.8920794 -2.544878   2.444932  -6.990052 ]]
Iteration 300 of 1000: loss=0.512 " + "l1=0.389" + "l2=0.123 f=-0.801 shape=(1, 9000, 1)
logits [[ 3.641852  -2.5340652  2.4448564 -6.758631 ]]
Iteration 400 of 1000: loss=0.458 " + "l1=0.317" + "l2=0.141 f=-0.802 shape=(1, 9000, 1)
logits [[ 3.431234  -2.5221865  2.4553657 -6.5720944]]
Iteration 500 of 1000: loss=0.41 " + "l1=0.251" + "l2=0.159 f=-0.797 shape=(1, 9000, 1)
logits [[ 3.2514756 -2.534052   2.4802034 -6.387278 ]]
Iteration 600 of 1000: loss=0.367 " + "l1=0.189" + "l2=0.178 f=-0.789 shape=(1, 9000, 1)
logits [[ 3.0687048 -2.5319192  2.4870284 -6.181236 ]]
Iteration 700 of 1000: loss=0.32 " + "l1=0.128" + "l2=0.193 f=-0.783 shape=(1, 9000, 1)
logits [[ 2.8680258 -2.5173876  2.4749467 -5.9561357]]
Iteration 800 of 1000: loss=0.277 " + "l1=0.0764" + "l2=0.201 f=-0.782 shape=(1, 9000, 1)
logits [[ 2.6882033 -2.496613   2.4530365 -5.7707953]]
Iteration 900 of 1000: loss=0.232 " + "l1=0.0163" + "l2=0.215 f=-0.78 shape=(1, 9000, 1)
logits [[ 2.4870272 -2.4876807  2.436729  -5.554193 ]]
--- 262.0392036437988 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.126 " + "l1=0.126" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[ 4.8023205 -2.4531648  2.3555799 -7.8409467]]
Iteration 100 of 1000: loss=0.126 " + "l1=0.125" + "l2=0.000528 f=-0.781 shape=(1, 9000, 1)
logits [[ 4.744378  -2.4427757  2.3401282 -7.7674427]]
Iteration 200 of 1000: loss=0.125 " + "l1=0.125" + "l2=0.000548 f=-0.781 shape=(1, 9000, 1)
logits [[ 4.734653  -2.4403694  2.3370225 -7.756477 ]]
Iteration 300 of 1000: loss=0.125 " + "l1=0.125" + "l2=0.000675 f=-0.781 shape=(1, 9000, 1)
logits [[ 4.7231097 -2.43772    2.3336873 -7.7424607]]
Iteration 400 of 1000: loss=0.125 " + "l1=0.124" + "l2=0.000823 f=-0.78 shape=(1, 9000, 1)
logits [[ 4.712114  -2.4352295  2.3308227 -7.7286224]]
Iteration 500 of 1000: loss=0.125 " + "l1=0.124" + "l2=0.000941 f=-0.78 shape=(1, 9000, 1)
logits [[ 4.701972  -2.432814   2.3282635 -7.716094 ]]
Iteration 600 of 1000: loss=0.125 " + "l1=0.124" + "l2=0.00105 f=-0.779 shape=(1, 9000, 1)
logits [[ 4.6925883 -2.4304602  2.3260205 -7.7046065]]
Iteration 700 of 1000: loss=0.125 " + "l1=0.124" + "l2=0.00121 f=-0.779 shape=(1, 9000, 1)
logits [[ 4.683999  -2.4282558  2.3240168 -7.6941743]]
Iteration 800 of 1000: loss=0.125 " + "l1=0.124" + "l2=0.00142 f=-0.778 shape=(1, 9000, 1)
logits [[ 4.6760416 -2.4261465  2.3222346 -7.684697 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.26 " + "l1=1.26" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[ 4.8023205 -2.4531648  2.3555799 -7.8409467]]
Iteration 100 of 1000: loss=1.19 " + "l1=1.15" + "l2=0.0413 f=-0.758 shape=(1, 9000, 1)
logits [[ 4.290033  -2.3650608  2.232443  -7.1896534]]
Iteration 200 of 1000: loss=1.15 " + "l1=1.09" + "l2=0.0604 f=-0.744 shape=(1, 9000, 1)
logits [[ 4.053178  -2.3035297  2.16413   -6.8898067]]
Iteration 300 of 1000: loss=1.12 " + "l1=1.04" + "l2=0.0781 f=-0.733 shape=(1, 9000, 1)
logits [[ 3.8164222 -2.238055   2.0892959 -6.598478 ]]
Iteration 400 of 1000: loss=1.09 " + "l1=0.996" + "l2=0.0959 f=-0.719 shape=(1, 9000, 1)
logits [[ 3.6156843 -2.1781363  2.0300262 -6.3454685]]
Iteration 500 of 1000: loss=1.07 " + "l1=0.96" + "l2=0.109 f=-0.706 shape=(1, 9000, 1)
logits [[ 3.4598224 -2.1251354  1.9804454 -6.1389647]]
Iteration 600 of 1000: loss=1.05 " + "l1=0.927" + "l2=0.122 f=-0.694 shape=(1, 9000, 1)
logits [[ 3.315719  -2.076318   1.9357834 -5.9530826]]
Iteration 700 of 1000: loss=1.03 " + "l1=0.891" + "l2=0.134 f=-0.681 shape=(1, 9000, 1)
logits [[ 3.1565144 -2.022555   1.8952664 -5.7530646]]
Iteration 800 of 1000: loss=1 " + "l1=0.856" + "l2=0.145 f=-0.665 shape=(1, 9000, 1)
logits [[ 3.0025802 -1.9738042  1.8651745 -5.553119 ]]
Iteration 900 of 1000: loss=0.971 " + "l1=0.818" + "l2=0.153 f=-0.648 shape=(1, 9000, 1)
logits [[ 2.835076  -1.917361   1.8316308 -5.343208 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.6 " + "l1=12.6" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[ 4.8023205 -2.4531648  2.3555799 -7.8409467]]
Iteration 100 of 1000: loss=5.84 " + "l1=2.53" + "l2=3.3 f=-0.471 shape=(1, 9000, 1)
logits [[ 0.5712849 -1.0672475  0.572632  -1.960255 ]]
Iteration 200 of 1000: loss=3.64 " + "l1=0.289" + "l2=3.35 f=-0.384 shape=(1, 9000, 1)
logits [[-0.32810923 -0.5477225  -0.18655922 -0.47553432]]
Iteration 300 of 1000: loss=2.62 " + "l1=0.0189" + "l2=2.6 f=-0.33 shape=(1, 9000, 1)
logits [[-0.30203837 -0.6528689  -0.17316517 -0.19210842]]
Iteration 400 of 1000: loss=2.11 " + "l1=0" + "l2=2.11 f=-0.281 shape=(1, 9000, 1)
logits [[-0.1896123  -0.70061857 -0.12670052 -0.10853326]]
Iteration 500 of 1000: loss=1.81 " + "l1=0.00948" + "l2=1.8 f=-0.251 shape=(1, 9000, 1)
logits [[-0.10918423 -0.72014064 -0.08288464 -0.09236071]]
Iteration 600 of 1000: loss=1.65 " + "l1=0.0283" + "l2=1.62 f=-0.24 shape=(1, 9000, 1)
logits [[-0.0637123  -0.75304145 -0.05715217 -0.08548686]]
Iteration 700 of 1000: loss=1.49 " + "l1=0" + "l2=1.49 f=-0.233 shape=(1, 9000, 1)
logits [[-0.08603372 -0.7743187  -0.03902884 -0.03086647]]
Iteration 800 of 1000: loss=1.39 " + "l1=0.0143" + "l2=1.37 f=-0.227 shape=(1, 9000, 1)
logits [[-0.0314991  -0.7943358  -0.03755366 -0.04584227]]
Iteration 900 of 1000: loss=1.29 " + "l1=0" + "l2=1.29 f=-0.228 shape=(1, 9000, 1)
logits [[-0.04539833 -0.8165762  -0.02706437 -0.02097694]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.95 " + "l1=6.95" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[ 4.8023205 -2.4531648  2.3555799 -7.8409467]]
Iteration 100 of 1000: loss=4.62 " + "l1=3.32" + "l2=1.3 f=-0.603 shape=(1, 9000, 1)
logits [[ 1.9447215 -1.6411461  1.3833312 -4.098073 ]]
Iteration 200 of 1000: loss=3.39 " + "l1=1.55" + "l2=1.84 f=-0.497 shape=(1, 9000, 1)
logits [[ 0.63412374 -1.071236    0.6341713  -2.1851895 ]]
Iteration 300 of 1000: loss=2.68 " + "l1=0.852" + "l2=1.83 f=-0.426 shape=(1, 9000, 1)
logits [[ 0.17927709 -0.698047    0.1826878  -1.3669022 ]]
Iteration 400 of 1000: loss=2.08 " + "l1=0.242" + "l2=1.84 f=-0.328 shape=(1, 9000, 1)
logits [[-0.10706811 -0.64291227 -0.06057779 -0.5014487 ]]
Iteration 500 of 1000: loss=1.59 " + "l1=0.0255" + "l2=1.56 f=-0.268 shape=(1, 9000, 1)
logits [[-0.100334   -0.7469494  -0.08992286 -0.13636029]]
Iteration 600 of 1000: loss=1.34 " + "l1=0.0207" + "l2=1.32 f=-0.265 shape=(1, 9000, 1)
logits [[-0.08738602 -0.78600526 -0.07373679 -0.11131702]]
Iteration 700 of 1000: loss=1.15 " + "l1=0" + "l2=1.15 f=-0.265 shape=(1, 9000, 1)
logits [[-0.09527314 -0.8187957  -0.0755837  -0.06998721]]
Iteration 800 of 1000: loss=1.01 " + "l1=0" + "l2=1.01 f=-0.265 shape=(1, 9000, 1)
logits [[-0.09674327 -0.8260129  -0.07457953 -0.06268021]]
Iteration 900 of 1000: loss=0.909 " + "l1=0.00409" + "l2=0.905 f=-0.264 shape=(1, 9000, 1)
logits [[-0.08208039 -0.81803536 -0.07337368 -0.08080947]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.11 " + "l1=4.11" + "l2=0 f=-0.784 shape=(1, 9000, 1)
logits [[ 4.8023205 -2.4531648  2.3555799 -7.8409467]]
Iteration 100 of 1000: loss=3.31 " + "l1=2.91" + "l2=0.399 f=-0.687 shape=(1, 9000, 1)
logits [[ 3.191304  -2.026723   1.8537385 -5.7659426]]
Iteration 200 of 1000: loss=2.8 " + "l1=2.08" + "l2=0.722 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.091672  -1.652395   1.4900279 -4.307934 ]]
Iteration 300 of 1000: loss=2.39 " + "l1=1.48" + "l2=0.909 f=-0.555 shape=(1, 9000, 1)
logits [[ 1.2937653 -1.3945296  1.132312  -3.2530947]]
Iteration 400 of 1000: loss=2.01 " + "l1=1.01" + "l2=0.991 f=-0.489 shape=(1, 9000, 1)
logits [[ 0.7255748  -1.0111711   0.72687715 -2.3953784 ]]
Iteration 500 of 1000: loss=1.72 " + "l1=0.753" + "l2=0.962 f=-0.427 shape=(1, 9000, 1)
logits [[ 0.4683883  -0.80733734  0.47416374 -1.8422449 ]]
Iteration 600 of 1000: loss=1.48 " + "l1=0.51" + "l2=0.974 f=-0.386 shape=(1, 9000, 1)
logits [[ 0.25703618 -0.7495951   0.25997406 -1.3101653 ]]
Iteration 700 of 1000: loss=1.21 " + "l1=0.21" + "l2=0.998 f=-0.355 shape=(1, 9000, 1)
logits [[-0.12052561 -0.66476667  0.00527355 -0.6410945 ]]
Iteration 800 of 1000: loss=0.919 " + "l1=0" + "l2=0.919 f=-0.312 shape=(1, 9000, 1)
logits [[-0.2923682  -0.6391083  -0.16075172 -0.15511763]]
Iteration 900 of 1000: loss=0.743 " + "l1=0.00518" + "l2=0.738 f=-0.305 shape=(1, 9000, 1)
logits [[-0.24405901 -0.6075852  -0.17624877 -0.19219846]]
--- 279.3482096195221 seconds ---
Adv result:3
Loading record A04697
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0725 " + "l1=0.0725" + "l2=0 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.5083804 -2.7401586  2.6870298 -6.716978 ]]
Iteration 100 of 1000: loss=0.0722 " + "l1=0.072" + "l2=0.000209 f=-0.564 shape=(1, 9000, 1)
logits [[ 4.4790835 -2.722013   2.6761217 -6.68806  ]]
Iteration 200 of 1000: loss=0.0721 " + "l1=0.072" + "l2=0.000188 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.4761972 -2.7195277  2.6743455 -6.6843305]]
Iteration 300 of 1000: loss=0.0721 " + "l1=0.0719" + "l2=0.000231 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.4709177 -2.7158942  2.6719277 -6.6785846]]
Iteration 400 of 1000: loss=0.072 " + "l1=0.0718" + "l2=0.000277 f=-0.562 shape=(1, 9000, 1)
logits [[ 4.46515   -2.7119179  2.6693625 -6.67242  ]]
Iteration 500 of 1000: loss=0.072 " + "l1=0.0717" + "l2=0.000342 f=-0.562 shape=(1, 9000, 1)
logits [[ 4.4593983 -2.7077773  2.666792  -6.6662736]]
Iteration 600 of 1000: loss=0.072 " + "l1=0.0716" + "l2=0.000399 f=-0.561 shape=(1, 9000, 1)
logits [[ 4.453909 -2.703729  2.664329 -6.660365]]
Iteration 700 of 1000: loss=0.072 " + "l1=0.0715" + "l2=0.000504 f=-0.561 shape=(1, 9000, 1)
logits [[ 4.4483657 -2.6996539  2.6619942 -6.6542916]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.725 " + "l1=0.725" + "l2=0 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.5083804 -2.7401586  2.6870298 -6.716978 ]]
Iteration 100 of 1000: loss=0.701 " + "l1=0.688" + "l2=0.0129 f=-0.551 shape=(1, 9000, 1)
logits [[ 4.275943  -2.6062932  2.6032588 -6.476294 ]]
Iteration 200 of 1000: loss=0.692 " + "l1=0.675" + "l2=0.0167 f=-0.543 shape=(1, 9000, 1)
logits [[ 4.196154  -2.5573423  2.5739312 -6.3866186]]
Iteration 300 of 1000: loss=0.684 " + "l1=0.666" + "l2=0.0187 f=-0.537 shape=(1, 9000, 1)
logits [[ 4.1387177 -2.5193803  2.5488207 -6.315339 ]]
Iteration 400 of 1000: loss=0.677 " + "l1=0.656" + "l2=0.0211 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.0792513 -2.4778216  2.5224082 -6.2418475]]
Iteration 500 of 1000: loss=0.669 " + "l1=0.646" + "l2=0.0231 f=-0.522 shape=(1, 9000, 1)
logits [[ 4.0218406 -2.436911   2.4961298 -6.1670694]]
Iteration 600 of 1000: loss=0.662 " + "l1=0.638" + "l2=0.0243 f=-0.514 shape=(1, 9000, 1)
logits [[ 3.9701536 -2.4065742  2.4774647 -6.0989904]]
Iteration 700 of 1000: loss=0.656 " + "l1=0.63" + "l2=0.026 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.917703  -2.3780344  2.4606981 -6.0344357]]
Iteration 800 of 1000: loss=0.65 " + "l1=0.622" + "l2=0.0278 f=-0.503 shape=(1, 9000, 1)
logits [[ 3.8668904 -2.3511004  2.4449923 -5.971891 ]]
Iteration 900 of 1000: loss=0.644 " + "l1=0.614" + "l2=0.0295 f=-0.496 shape=(1, 9000, 1)
logits [[ 3.8160756 -2.324129   2.4305217 -5.905398 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.25 " + "l1=7.25" + "l2=0 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.5083804 -2.7401586  2.6870298 -6.716978 ]]
Iteration 100 of 1000: loss=5.49 " + "l1=4.57" + "l2=0.918 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.7735574 -1.7962801  2.009724  -4.8061004]]
Iteration 200 of 1000: loss=4.79 " + "l1=3.45" + "l2=1.34 f=-0.414 shape=(1, 9000, 1)
logits [[ 2.0377848 -1.4168848  1.7058408 -3.9834974]]
Iteration 300 of 1000: loss=4.25 " + "l1=2.66" + "l2=1.6 f=-0.336 shape=(1, 9000, 1)
logits [[ 1.5263927 -1.1291753  1.5267192 -3.2693594]]
Iteration 400 of 1000: loss=3.93 " + "l1=2.42" + "l2=1.51 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.408723  -1.0112256  1.4048936 -3.0324302]]
Iteration 500 of 1000: loss=3.67 " + "l1=2.18" + "l2=1.49 f=-0.289 shape=(1, 9000, 1)
logits [[ 1.2742207 -0.9074714  1.2764692 -2.7973673]]
Iteration 600 of 1000: loss=3.46 " + "l1=2.06" + "l2=1.4 f=-0.274 shape=(1, 9000, 1)
logits [[ 1.1832415 -0.8702052  1.1863679 -2.5967886]]
Iteration 700 of 1000: loss=3.29 " + "l1=1.91" + "l2=1.38 f=-0.258 shape=(1, 9000, 1)
logits [[ 1.0836699  -0.82123286  1.0891191  -2.3855314 ]]
Iteration 800 of 1000: loss=3.14 " + "l1=1.7" + "l2=1.44 f=-0.238 shape=(1, 9000, 1)
logits [[ 0.95818293 -0.73989177  0.9606096  -2.1312814 ]]
Iteration 900 of 1000: loss=2.98 " + "l1=1.54" + "l2=1.44 f=-0.227 shape=(1, 9000, 1)
logits [[ 0.82365674 -0.7059731   0.83603716 -1.8613634 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=72.5 " + "l1=72.5" + "l2=0 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.5083804 -2.7401586  2.6870298 -6.716978 ]]
Iteration 100 of 1000: loss=19.2 " + "l1=7.4" + "l2=11.8 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.4878982 -0.0655047  0.6748393 -2.3944774]]
Iteration 200 of 1000: loss=10.1 " + "l1=0" + "l2=10.1 f=-0.312 shape=(1, 9000, 1)
logits [[-0.13769984  0.35319075  0.34974197 -1.813607  ]]
Iteration 300 of 1000: loss=8.4 " + "l1=0.0938" + "l2=8.31 f=-0.306 shape=(1, 9000, 1)
logits [[-0.06933251  0.34780082  0.35717857 -1.8605121 ]]
Iteration 400 of 1000: loss=7.59 " + "l1=0" + "l2=7.59 f=-0.305 shape=(1, 9000, 1)
logits [[-0.05402812  0.35001552  0.32986066 -1.8445729 ]]
Iteration 500 of 1000: loss=6.96 " + "l1=0" + "l2=6.96 f=-0.299 shape=(1, 9000, 1)
logits [[-0.00515427  0.3180801   0.3145465  -1.8238628 ]]
Iteration 600 of 1000: loss=6.56 " + "l1=0" + "l2=6.56 f=-0.296 shape=(1, 9000, 1)
logits [[ 0.01400925  0.30256447  0.29446205 -1.7945559 ]]
Iteration 700 of 1000: loss=6.2 " + "l1=0" + "l2=6.2 f=-0.282 shape=(1, 9000, 1)
logits [[ 0.07907264  0.28471622  0.2699465  -1.763504  ]]
Iteration 800 of 1000: loss=5.89 " + "l1=0.104" + "l2=5.78 f=-0.274 shape=(1, 9000, 1)
logits [[ 0.16087371  0.24741502  0.2578468  -1.7606235 ]]
Iteration 900 of 1000: loss=5.64 " + "l1=0.144" + "l2=5.5 f=-0.262 shape=(1, 9000, 1)
logits [[ 0.21323836  0.22079271  0.23524207 -1.7185967 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=39.9 " + "l1=39.9" + "l2=0 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.5083804 -2.7401586  2.6870298 -6.716978 ]]
Iteration 100 of 1000: loss=15.1 " + "l1=8.2" + "l2=6.85 f=-0.344 shape=(1, 9000, 1)
logits [[ 0.990464   -0.48402643  1.0071994  -2.8876927 ]]
Iteration 200 of 1000: loss=9.23 " + "l1=1.38" + "l2=7.85 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.37928712  0.19326697  0.44496223 -2.1692724 ]]
Iteration 300 of 1000: loss=7.16 " + "l1=0.0135" + "l2=7.14 f=-0.284 shape=(1, 9000, 1)
logits [[ 0.18708007  0.32165003  0.32409847 -1.9706826 ]]
Iteration 400 of 1000: loss=6.34 " + "l1=0.0287" + "l2=6.31 f=-0.272 shape=(1, 9000, 1)
logits [[ 0.21218121  0.2888446   0.29406205 -1.8848977 ]]
Iteration 500 of 1000: loss=5.82 " + "l1=0.0358" + "l2=5.78 f=-0.263 shape=(1, 9000, 1)
logits [[ 0.20822173  0.25641254  0.2629182  -1.781354  ]]
Iteration 600 of 1000: loss=5.42 " + "l1=0.0447" + "l2=5.38 f=-0.261 shape=(1, 9000, 1)
logits [[ 0.15866739  0.24276087  0.25088647 -1.6975604 ]]
Iteration 700 of 1000: loss=5.06 " + "l1=0.0214" + "l2=5.04 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.13457078  0.22033024  0.2242254  -1.606735  ]]
Iteration 800 of 1000: loss=4.78 " + "l1=0.1" + "l2=4.68 f=-0.241 shape=(1, 9000, 1)
logits [[ 0.18979979  0.18402304  0.20219602 -1.5380666 ]]
Iteration 900 of 1000: loss=4.55 " + "l1=0" + "l2=4.55 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.12791203  0.19476677  0.19064485 -1.4580826 ]]
--- 273.0461223125458 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0182 " + "l1=0.0182" + "l2=0 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.5083804 -2.7401586  2.6870298 -6.716978 ]]
Iteration 100 of 1000: loss=0.0181 " + "l1=0.018" + "l2=0.000127 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.488414  -2.7394326  2.6885297 -6.701015 ]]
Iteration 200 of 1000: loss=0.0181 " + "l1=0.018" + "l2=9.43e-05 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.4888926 -2.738837   2.6880634 -6.700637 ]]
Iteration 300 of 1000: loss=0.0181 " + "l1=0.018" + "l2=9.23e-05 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.4869885 -2.7382743  2.6878033 -6.6986346]]
Iteration 400 of 1000: loss=0.0181 " + "l1=0.018" + "l2=0.000126 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.4847217 -2.7377183  2.6875772 -6.696422 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.182 " + "l1=0.182" + "l2=0 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.5083804 -2.7401586  2.6870298 -6.716978 ]]
Iteration 100 of 1000: loss=0.173 " + "l1=0.167" + "l2=0.00616 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.361335  -2.7295086  2.6954808 -6.588356 ]]
Iteration 200 of 1000: loss=0.17 " + "l1=0.163" + "l2=0.00741 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.32373   -2.726852   2.6961777 -6.554943 ]]
Iteration 300 of 1000: loss=0.168 " + "l1=0.16" + "l2=0.0085 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.2922235 -2.7221823  2.6959033 -6.5248246]]
Iteration 400 of 1000: loss=0.166 " + "l1=0.157" + "l2=0.00942 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.2636914 -2.7164092  2.6950393 -6.495241 ]]
Iteration 500 of 1000: loss=0.165 " + "l1=0.154" + "l2=0.0102 f=-0.562 shape=(1, 9000, 1)
logits [[ 4.2385626 -2.7117226  2.694122  -6.4677444]]
Iteration 600 of 1000: loss=0.163 " + "l1=0.152" + "l2=0.0108 f=-0.561 shape=(1, 9000, 1)
logits [[ 4.217166  -2.707985   2.6929138 -6.4447246]]
Iteration 700 of 1000: loss=0.162 " + "l1=0.15" + "l2=0.0114 f=-0.56 shape=(1, 9000, 1)
logits [[ 4.194006  -2.7057672  2.690338  -6.4180717]]
Iteration 800 of 1000: loss=0.16 " + "l1=0.148" + "l2=0.0119 f=-0.559 shape=(1, 9000, 1)
logits [[ 4.1722503 -2.7036088  2.6887567 -6.3933372]]
Iteration 900 of 1000: loss=0.159 " + "l1=0.147" + "l2=0.0125 f=-0.558 shape=(1, 9000, 1)
logits [[ 4.154239  -2.7009923  2.6883206 -6.373112 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.82 " + "l1=1.82" + "l2=0 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.5083804 -2.7401586  2.6870298 -6.716978 ]]
Iteration 100 of 1000: loss=1.06 " + "l1=0.635" + "l2=0.422 f=-0.574 shape=(1, 9000, 1)
logits [[ 3.4352992 -2.799713   2.800659  -5.7310085]]
Iteration 200 of 1000: loss=0.781 " + "l1=0.235" + "l2=0.545 f=-0.594 shape=(1, 9000, 1)
logits [[ 3.1544402 -2.9549632  2.9189708 -5.4924912]]
Iteration 300 of 1000: loss=0.594 " + "l1=0.00954" + "l2=0.585 f=-0.592 shape=(1, 9000, 1)
logits [[ 2.9757311 -3.0284905  2.9661918 -5.279501 ]]
Iteration 400 of 1000: loss=0.497 " + "l1=0.00471" + "l2=0.492 f=-0.596 shape=(1, 9000, 1)
logits [[ 3.0255625 -3.0963926  3.0208516 -5.3351088]]
Iteration 500 of 1000: loss=0.433 " + "l1=0.0111" + "l2=0.422 f=-0.585 shape=(1, 9000, 1)
logits [[ 3.047536  -3.1151729  3.0364065 -5.3087687]]
Iteration 600 of 1000: loss=0.392 " + "l1=0" + "l2=0.392 f=-0.577 shape=(1, 9000, 1)
logits [[ 3.0228324 -3.1280775  3.0348272 -5.2379136]]
Iteration 700 of 1000: loss=0.347 " + "l1=0.00682" + "l2=0.34 f=-0.571 shape=(1, 9000, 1)
logits [[ 3.018672  -3.136105   3.0118518 -5.178067 ]]
Iteration 800 of 1000: loss=0.308 " + "l1=0.00477" + "l2=0.303 f=-0.566 shape=(1, 9000, 1)
logits [[ 2.9880197 -3.1351004  2.983248  -5.100983 ]]
Iteration 900 of 1000: loss=0.269 " + "l1=0" + "l2=0.269 f=-0.56 shape=(1, 9000, 1)
logits [[ 2.940293  -3.135241   2.9470582 -4.993582 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1 " + "l1=1" + "l2=0 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.5083804 -2.7401586  2.6870298 -6.716978 ]]
Iteration 100 of 1000: loss=0.75 " + "l1=0.612" + "l2=0.138 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.8635638 -2.7345815  2.7502446 -6.1287303]]
Iteration 200 of 1000: loss=0.682 " + "l1=0.51" + "l2=0.172 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.693913  -2.7535954  2.7669835 -5.958377 ]]
Iteration 300 of 1000: loss=0.607 " + "l1=0.4" + "l2=0.208 f=-0.571 shape=(1, 9000, 1)
logits [[ 3.5384848 -2.8318098  2.8120887 -5.802211 ]]
Iteration 400 of 1000: loss=0.554 " + "l1=0.334" + "l2=0.221 f=-0.573 shape=(1, 9000, 1)
logits [[ 3.4354892 -2.855692   2.8291001 -5.7008185]]
Iteration 500 of 1000: loss=0.51 " + "l1=0.27" + "l2=0.24 f=-0.57 shape=(1, 9000, 1)
logits [[ 3.3414521 -2.878664   2.8505561 -5.5935407]]
Iteration 600 of 1000: loss=0.462 " + "l1=0.207" + "l2=0.255 f=-0.565 shape=(1, 9000, 1)
logits [[ 3.2576575 -2.9172294  2.880856  -5.4808435]]
Iteration 700 of 1000: loss=0.414 " + "l1=0.134" + "l2=0.28 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.1537826 -2.9630394  2.9105034 -5.3406925]]
Iteration 800 of 1000: loss=0.361 " + "l1=0.0599" + "l2=0.301 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.0334353 -3.0043046  2.9244843 -5.1951556]]
Iteration 900 of 1000: loss=0.281 " + "l1=0.0106" + "l2=0.271 f=-0.57 shape=(1, 9000, 1)
logits [[ 2.9627683 -3.0806522  2.9434474 -5.103941 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.592 " + "l1=0.592" + "l2=0 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.5083804 -2.7401586  2.6870298 -6.716978 ]]
Iteration 100 of 1000: loss=0.499 " + "l1=0.444" + "l2=0.0549 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.08379   -2.7227194  2.7177422 -6.3324575]]
Iteration 200 of 1000: loss=0.472 " + "l1=0.402" + "l2=0.0708 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.9702868 -2.7229013  2.7345283 -6.2205157]]
Iteration 300 of 1000: loss=0.453 " + "l1=0.374" + "l2=0.0787 f=-0.558 shape=(1, 9000, 1)
logits [[ 3.891212  -2.7232203  2.7409909 -6.139671 ]]
Iteration 400 of 1000: loss=0.434 " + "l1=0.351" + "l2=0.0829 f=-0.557 shape=(1, 9000, 1)
logits [[ 3.8233564 -2.7314053  2.7444725 -6.062508 ]]
Iteration 500 of 1000: loss=0.414 " + "l1=0.324" + "l2=0.0903 f=-0.553 shape=(1, 9000, 1)
logits [[ 3.7409897 -2.732221   2.7453182 -5.964196 ]]
Iteration 600 of 1000: loss=0.392 " + "l1=0.292" + "l2=0.0993 f=-0.558 shape=(1, 9000, 1)
logits [[ 3.6723032 -2.7809727  2.7729588 -5.898096 ]]
Iteration 700 of 1000: loss=0.375 " + "l1=0.27" + "l2=0.105 f=-0.556 shape=(1, 9000, 1)
logits [[ 3.6086874 -2.8021593  2.7787256 -5.8109093]]
Iteration 800 of 1000: loss=0.36 " + "l1=0.253" + "l2=0.107 f=-0.552 shape=(1, 9000, 1)
logits [[ 3.55837   -2.8023758  2.7813864 -5.7470117]]
Iteration 900 of 1000: loss=0.346 " + "l1=0.236" + "l2=0.11 f=-0.546 shape=(1, 9000, 1)
logits [[ 3.514071  -2.8029764  2.7867262 -5.6823225]]
--- 257.69079422950745 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.112 " + "l1=0.112" + "l2=0 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.5083804 -2.7401586  2.6870298 -6.716978 ]]
Iteration 100 of 1000: loss=0.112 " + "l1=0.111" + "l2=0.000405 f=-0.562 shape=(1, 9000, 1)
logits [[ 4.465972  -2.7278512  2.6746724 -6.6625667]]
Iteration 200 of 1000: loss=0.112 " + "l1=0.111" + "l2=0.000411 f=-0.562 shape=(1, 9000, 1)
logits [[ 4.4595456 -2.724617   2.6719263 -6.6547046]]
Iteration 300 of 1000: loss=0.111 " + "l1=0.111" + "l2=0.000487 f=-0.561 shape=(1, 9000, 1)
logits [[ 4.4510365 -2.720938   2.6686738 -6.6441174]]
Iteration 400 of 1000: loss=0.111 " + "l1=0.111" + "l2=0.000576 f=-0.561 shape=(1, 9000, 1)
logits [[ 4.4426403 -2.7170503  2.6655748 -6.6334877]]
Iteration 500 of 1000: loss=0.111 " + "l1=0.111" + "l2=0.000662 f=-0.56 shape=(1, 9000, 1)
logits [[ 4.4342446 -2.7131681  2.6625104 -6.6227927]]
Iteration 600 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.000752 f=-0.559 shape=(1, 9000, 1)
logits [[ 4.4261417 -2.7093823  2.6596045 -6.6123548]]
Iteration 700 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.000916 f=-0.558 shape=(1, 9000, 1)
logits [[ 4.4182334 -2.7055426  2.6567767 -6.60203  ]]
Iteration 800 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.00102 f=-0.557 shape=(1, 9000, 1)
logits [[ 4.4103317 -2.7017698  2.65401   -6.591701 ]]
Iteration 900 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.00109 f=-0.556 shape=(1, 9000, 1)
logits [[ 4.403043  -2.6982718  2.6514843 -6.581931 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.12 " + "l1=1.12" + "l2=0 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.5083804 -2.7401586  2.6870298 -6.716978 ]]
Iteration 100 of 1000: loss=1.07 " + "l1=1.04" + "l2=0.0323 f=-0.536 shape=(1, 9000, 1)
logits [[ 4.1401544 -2.6321719  2.5791383 -6.2296185]]
Iteration 200 of 1000: loss=1.05 " + "l1=1.01" + "l2=0.0397 f=-0.523 shape=(1, 9000, 1)
logits [[ 4.0293393 -2.5835195  2.5372174 -6.0754304]]
Iteration 300 of 1000: loss=1.03 " + "l1=0.986" + "l2=0.0463 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.9295063 -2.537894   2.5009177 -5.928448 ]]
Iteration 400 of 1000: loss=1.01 " + "l1=0.961" + "l2=0.052 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.8331752 -2.4925804  2.4632285 -5.7776127]]
Iteration 500 of 1000: loss=0.994 " + "l1=0.937" + "l2=0.0576 f=-0.476 shape=(1, 9000, 1)
logits [[ 3.7434747 -2.449687   2.4272144 -5.625044 ]]
Iteration 600 of 1000: loss=0.976 " + "l1=0.913" + "l2=0.0635 f=-0.461 shape=(1, 9000, 1)
logits [[ 3.6512594 -2.4071255  2.3924727 -5.4787107]]
Iteration 700 of 1000: loss=0.96 " + "l1=0.892" + "l2=0.0683 f=-0.448 shape=(1, 9000, 1)
logits [[ 3.570735  -2.376122   2.3622222 -5.347178 ]]
Iteration 800 of 1000: loss=0.945 " + "l1=0.872" + "l2=0.0735 f=-0.434 shape=(1, 9000, 1)
logits [[ 3.4960406 -2.3467119  2.3346305 -5.2207413]]
Iteration 900 of 1000: loss=0.93 " + "l1=0.852" + "l2=0.0775 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.4250941 -2.3214035  2.3075848 -5.097861 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.2 " + "l1=11.2" + "l2=0 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.5083804 -2.7401586  2.6870298 -6.716978 ]]
Iteration 100 of 1000: loss=7.09 " + "l1=4.9" + "l2=2.18 f=-0.36 shape=(1, 9000, 1)
logits [[ 1.8623936 -2.1260073  1.8620149 -3.0398307]]
Iteration 200 of 1000: loss=5.83 " + "l1=3.66" + "l2=2.17 f=-0.292 shape=(1, 9000, 1)
logits [[ 1.4664034 -1.9136308  1.4689455 -2.1913471]]
Iteration 300 of 1000: loss=4.71 " + "l1=2.39" + "l2=2.32 f=-0.229 shape=(1, 9000, 1)
logits [[ 1.0158467 -1.7428071  1.099557  -1.2890375]]
Iteration 400 of 1000: loss=3.53 " + "l1=1.05" + "l2=2.48 f=-0.16 shape=(1, 9000, 1)
logits [[ 0.49716005 -1.6905681   0.80122733 -0.24594486]]
Iteration 500 of 1000: loss=2.46 " + "l1=0.0557" + "l2=2.4 f=-0.11 shape=(1, 9000, 1)
logits [[ 0.10693559 -1.6153398   0.5612471   0.50551236]]
Iteration 600 of 1000: loss=1.87 " + "l1=0.034" + "l2=1.84 f=-0.107 shape=(1, 9000, 1)
logits [[ 0.15726534 -1.6449221   0.54642904  0.51239246]]
Iteration 700 of 1000: loss=1.57 " + "l1=0.00343" + "l2=1.57 f=-0.103 shape=(1, 9000, 1)
logits [[ 0.1504223  -1.6664948   0.5532587   0.54982597]]
Iteration 800 of 1000: loss=1.4 " + "l1=0.00574" + "l2=1.4 f=-0.104 shape=(1, 9000, 1)
logits [[ 0.14507833 -1.6802878   0.5630905   0.5573478 ]]
Iteration 900 of 1000: loss=1.27 " + "l1=0" + "l2=1.27 f=-0.106 shape=(1, 9000, 1)
logits [[ 0.13179883 -1.6890733   0.560945    0.5730035 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.17 " + "l1=6.17" + "l2=0 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.5083804 -2.7401586  2.6870298 -6.716978 ]]
Iteration 100 of 1000: loss=4.78 " + "l1=4.01" + "l2=0.77 f=-0.419 shape=(1, 9000, 1)
logits [[ 2.863448  -2.2987533  2.1843047 -4.423842 ]]
Iteration 200 of 1000: loss=4.16 " + "l1=3.08" + "l2=1.08 f=-0.368 shape=(1, 9000, 1)
logits [[ 2.1773283 -2.2031739  1.9713515 -3.4195042]]
Iteration 300 of 1000: loss=3.57 " + "l1=2.44" + "l2=1.13 f=-0.306 shape=(1, 9000, 1)
logits [[ 1.7812618 -2.131256   1.7774882 -2.6496656]]
Iteration 400 of 1000: loss=3.04 " + "l1=1.99" + "l2=1.05 f=-0.248 shape=(1, 9000, 1)
logits [[ 1.54917   -2.0225115  1.5478092 -2.065234 ]]
Iteration 500 of 1000: loss=2.49 " + "l1=1.37" + "l2=1.12 f=-0.192 shape=(1, 9000, 1)
logits [[ 1.1574837 -1.9183371  1.2419709 -1.2475688]]
Iteration 600 of 1000: loss=2.02 " + "l1=0.884" + "l2=1.14 f=-0.145 shape=(1, 9000, 1)
logits [[ 0.75827426 -1.857371    1.0622505  -0.54418856]]
Iteration 700 of 1000: loss=1.59 " + "l1=0.406" + "l2=1.18 f=-0.125 shape=(1, 9000, 1)
logits [[ 0.37501806 -1.7716297   0.8165605   0.07895013]]
Iteration 800 of 1000: loss=1.18 " + "l1=0.0132" + "l2=1.17 f=-0.11 shape=(1, 9000, 1)
logits [[ 0.12620172 -1.7147077   0.5865931   0.5625509 ]]
Iteration 900 of 1000: loss=0.991 " + "l1=0.00977" + "l2=0.981 f=-0.106 shape=(1, 9000, 1)
logits [[ 0.15669669 -1.769017    0.6032466   0.58547413]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.65 " + "l1=3.65" + "l2=0 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.5083804 -2.7401586  2.6870298 -6.716978 ]]
Iteration 100 of 1000: loss=3.12 " + "l1=2.82" + "l2=0.303 f=-0.467 shape=(1, 9000, 1)
logits [[ 3.4397244 -2.4218807  2.3502443 -5.2377687]]
Iteration 200 of 1000: loss=2.91 " + "l1=2.55" + "l2=0.366 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.106878  -2.335152   2.2425663 -4.728976 ]]
Iteration 300 of 1000: loss=2.71 " + "l1=2.27" + "l2=0.441 f=-0.393 shape=(1, 9000, 1)
logits [[ 2.7776525 -2.28499    2.132703  -4.1964116]]
Iteration 400 of 1000: loss=2.48 " + "l1=1.93" + "l2=0.543 f=-0.345 shape=(1, 9000, 1)
logits [[ 2.4007635 -2.2229886  1.9898828 -3.5470464]]
Iteration 500 of 1000: loss=2.2 " + "l1=1.58" + "l2=0.619 f=-0.294 shape=(1, 9000, 1)
logits [[ 2.0204818 -2.1956604  1.8497446 -2.848842 ]]
Iteration 600 of 1000: loss=1.9 " + "l1=1.27" + "l2=0.629 f=-0.241 shape=(1, 9000, 1)
logits [[ 1.6979396 -2.145173   1.6975119 -2.2141747]]
Iteration 700 of 1000: loss=1.64 " + "l1=1.06" + "l2=0.573 f=-0.197 shape=(1, 9000, 1)
logits [[ 1.5221331 -2.0921187  1.5276513 -1.746165 ]]
Iteration 800 of 1000: loss=1.42 " + "l1=0.822" + "l2=0.598 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.2132947 -2.0374293  1.325107  -1.2049465]]
Iteration 900 of 1000: loss=1.2 " + "l1=0.542" + "l2=0.66 f=-0.16 shape=(1, 9000, 1)
logits [[ 0.83328104 -1.974882    1.0840367  -0.58256155]]
--- 293.8679234981537 seconds ---
Adv result:3
Loading record A04704
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0391 " + "l1=0.0391" + "l2=0 f=-0.0857 shape=(1, 9000, 1)
logits [[ 1.5248042 -2.3837922  1.2836204 -0.7673431]]
Iteration 100 of 1000: loss=0.0386 " + "l1=0.0382" + "l2=0.000332 f=-0.0865 shape=(1, 9000, 1)
logits [[ 1.4771763  -2.344808    1.2518944  -0.73023707]]
Iteration 200 of 1000: loss=0.0383 " + "l1=0.038" + "l2=0.000342 f=-0.0864 shape=(1, 9000, 1)
logits [[ 1.4671243  -2.3330853   1.2424824  -0.72192425]]
Iteration 300 of 1000: loss=0.0381 " + "l1=0.0377" + "l2=0.00041 f=-0.0866 shape=(1, 9000, 1)
logits [[ 1.4533681 -2.3192976  1.2311629 -0.711465 ]]
Iteration 400 of 1000: loss=0.0379 " + "l1=0.0374" + "l2=0.000499 f=-0.0869 shape=(1, 9000, 1)
logits [[ 1.4381512 -2.304439   1.2188616 -0.7002519]]
Iteration 500 of 1000: loss=0.0377 " + "l1=0.0371" + "l2=0.000629 f=-0.0876 shape=(1, 9000, 1)
logits [[ 1.4211155  -2.2889485   1.2056648  -0.68819463]]
Iteration 600 of 1000: loss=0.0375 " + "l1=0.0367" + "l2=0.000768 f=-0.0884 shape=(1, 9000, 1)
logits [[ 1.4024197 -2.2721329  1.1913925 -0.6754422]]
Iteration 700 of 1000: loss=0.0373 " + "l1=0.0364" + "l2=0.000937 f=-0.0895 shape=(1, 9000, 1)
logits [[ 1.3816013  -2.2535331   1.1753407  -0.66130763]]
Iteration 800 of 1000: loss=0.037 " + "l1=0.0359" + "l2=0.00108 f=-0.0908 shape=(1, 9000, 1)
logits [[ 1.3594172 -2.2337203  1.1580641 -0.646821 ]]
Iteration 900 of 1000: loss=0.0369 " + "l1=0.0355" + "l2=0.00138 f=-0.0922 shape=(1, 9000, 1)
logits [[ 1.3365676  -2.2126772   1.1396711  -0.63226193]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.391 " + "l1=0.391" + "l2=0 f=-0.0857 shape=(1, 9000, 1)
logits [[ 1.5248042 -2.3837922  1.2836204 -0.7673431]]
Iteration 100 of 1000: loss=0.331 " + "l1=0.301" + "l2=0.0301 f=-0.0972 shape=(1, 9000, 1)
logits [[ 1.0559183  -1.954168    0.9336419  -0.42402822]]
Iteration 200 of 1000: loss=0.262 " + "l1=0.2" + "l2=0.0624 f=-0.106 shape=(1, 9000, 1)
logits [[ 0.56084603 -1.4370736   0.51420087 -0.06172601]]
Iteration 300 of 1000: loss=0.176 " + "l1=0.0737" + "l2=0.102 f=-0.11 shape=(1, 9000, 1)
logits [[ 0.08632372 -0.65108234  0.04332109  0.08164462]]
Iteration 400 of 1000: loss=0.13 " + "l1=0.0398" + "l2=0.0898 f=-0.156 shape=(1, 9000, 1)
logits [[-0.01363794 -0.41200158 -0.17621179 -0.02233782]]
Iteration 500 of 1000: loss=0.112 " + "l1=0.0245" + "l2=0.0876 f=-0.169 shape=(1, 9000, 1)
logits [[-0.06357652 -0.3070269  -0.24309961 -0.0621204 ]]
Iteration 600 of 1000: loss=0.0932 " + "l1=0.00173" + "l2=0.0915 f=-0.185 shape=(1, 9000, 1)
logits [[-0.13862094 -0.15538205 -0.30775368 -0.13803571]]
Iteration 700 of 1000: loss=0.0685 " + "l1=0" + "l2=0.0685 f=-0.19 shape=(1, 9000, 1)
logits [[-0.16166298 -0.13963675 -0.31045514 -0.14766955]]
Iteration 800 of 1000: loss=0.0606 " + "l1=0" + "l2=0.0606 f=-0.189 shape=(1, 9000, 1)
logits [[-0.15662205 -0.14774558 -0.3009384  -0.14951736]]
Iteration 900 of 1000: loss=0.0566 " + "l1=3.19e-05" + "l2=0.0565 f=-0.188 shape=(1, 9000, 1)
logits [[-0.15264927 -0.15296848 -0.29159296 -0.15398318]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.215 " + "l1=0.215" + "l2=0 f=-0.0857 shape=(1, 9000, 1)
logits [[ 1.5248042 -2.3837922  1.2836204 -0.7673431]]
Iteration 100 of 1000: loss=0.199 " + "l1=0.19" + "l2=0.00877 f=-0.0896 shape=(1, 9000, 1)
logits [[ 1.2879598  -2.1701896   1.1139077  -0.59027517]]
Iteration 200 of 1000: loss=0.187 " + "l1=0.174" + "l2=0.0126 f=-0.0981 shape=(1, 9000, 1)
logits [[ 1.1344349  -2.0313373   0.99222565 -0.48771983]]
Iteration 300 of 1000: loss=0.168 " + "l1=0.149" + "l2=0.0188 f=-0.107 shape=(1, 9000, 1)
logits [[ 0.9109055  -1.7979423   0.77912945 -0.32048216]]
Iteration 400 of 1000: loss=0.144 " + "l1=0.116" + "l2=0.0284 f=-0.111 shape=(1, 9000, 1)
logits [[ 0.57896966 -1.5230411   0.5765216  -0.07477346]]
Iteration 500 of 1000: loss=0.127 " + "l1=0.0937" + "l2=0.0333 f=-0.104 shape=(1, 9000, 1)
logits [[ 0.4085632  -1.2958288   0.40839157  0.06433094]]
Iteration 600 of 1000: loss=0.0996 " + "l1=0.0593" + "l2=0.0403 f=-0.12 shape=(1, 9000, 1)
logits [[ 0.16733176 -0.91015065  0.10128152  0.16274974]]
Iteration 700 of 1000: loss=0.0743 " + "l1=0.0285" + "l2=0.0458 f=-0.144 shape=(1, 9000, 1)
logits [[ 0.01771788 -0.50067353 -0.11115642  0.01724333]]
Iteration 800 of 1000: loss=0.0639 " + "l1=0.0216" + "l2=0.0423 f=-0.155 shape=(1, 9000, 1)
logits [[-0.02804456 -0.4148078  -0.15412892 -0.02240822]]
Iteration 900 of 1000: loss=0.0564 " + "l1=0.0153" + "l2=0.0411 f=-0.165 shape=(1, 9000, 1)
logits [[-0.06346773 -0.34125558 -0.19231386 -0.06257463]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.303 " + "l1=0.303" + "l2=0 f=-0.0857 shape=(1, 9000, 1)
logits [[ 1.5248042 -2.3837922  1.2836204 -0.7673431]]
Iteration 100 of 1000: loss=0.269 " + "l1=0.252" + "l2=0.0176 f=-0.0942 shape=(1, 9000, 1)
logits [[ 1.1765748 -2.0703614  1.0317552 -0.5148566]]
Iteration 200 of 1000: loss=0.237 " + "l1=0.209" + "l2=0.0279 f=-0.106 shape=(1, 9000, 1)
logits [[ 0.9095516  -1.7936479   0.7772573  -0.31594065]]
Iteration 300 of 1000: loss=0.19 " + "l1=0.147" + "l2=0.0431 f=-0.108 shape=(1, 9000, 1)
logits [[ 0.49263898 -1.406885    0.49373385 -0.01169778]]
Iteration 400 of 1000: loss=0.144 " + "l1=0.0867" + "l2=0.0574 f=-0.0964 shape=(1, 9000, 1)
logits [[ 0.19292305 -0.9262474   0.15937704  0.18854228]]
Iteration 500 of 1000: loss=0.0893 " + "l1=0.0285" + "l2=0.0608 f=-0.152 shape=(1, 9000, 1)
logits [[-0.03182325 -0.39112905 -0.16295369 -0.02334466]]
Iteration 600 of 1000: loss=0.0728 " + "l1=0.0135" + "l2=0.0593 f=-0.176 shape=(1, 9000, 1)
logits [[-0.10291786 -0.2686466  -0.23596902 -0.09486751]]
Iteration 700 of 1000: loss=0.0604 " + "l1=0.00368" + "l2=0.0568 f=-0.189 shape=(1, 9000, 1)
logits [[-0.15048364 -0.18616521 -0.28232062 -0.13868949]]
Iteration 800 of 1000: loss=0.0514 " + "l1=0.000699" + "l2=0.0507 f=-0.193 shape=(1, 9000, 1)
logits [[-0.15916552 -0.16818035 -0.2833825  -0.16296583]]
Iteration 900 of 1000: loss=0.0471 " + "l1=0.000784" + "l2=0.0463 f=-0.194 shape=(1, 9000, 1)
logits [[-0.16144393 -0.17156453 -0.27640447 -0.166691  ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.259 " + "l1=0.259" + "l2=0 f=-0.0857 shape=(1, 9000, 1)
logits [[ 1.5248042 -2.3837922  1.2836204 -0.7673431]]
Iteration 100 of 1000: loss=0.235 " + "l1=0.222" + "l2=0.0126 f=-0.0923 shape=(1, 9000, 1)
logits [[ 1.233698  -2.1223905  1.0741256 -0.5544625]]
Iteration 200 of 1000: loss=0.214 " + "l1=0.195" + "l2=0.0192 f=-0.101 shape=(1, 9000, 1)
logits [[ 1.0290444  -1.9148529   0.88722986 -0.40444195]]
Iteration 300 of 1000: loss=0.182 " + "l1=0.151" + "l2=0.0309 f=-0.111 shape=(1, 9000, 1)
logits [[ 0.6848751  -1.5899348   0.622803   -0.16325653]]
Iteration 400 of 1000: loss=0.152 " + "l1=0.114" + "l2=0.0388 f=-0.102 shape=(1, 9000, 1)
logits [[ 0.41564757 -1.2997804   0.41376606  0.06239574]]
Iteration 500 of 1000: loss=0.108 " + "l1=0.054" + "l2=0.0543 f=-0.109 shape=(1, 9000, 1)
logits [[ 0.11612627 -0.6997125   0.03269637  0.11326088]]
Iteration 600 of 1000: loss=0.0796 " + "l1=0.0276" + "l2=0.052 f=-0.152 shape=(1, 9000, 1)
logits [[-0.01681372 -0.43230745 -0.14525126 -0.01511832]]
Iteration 700 of 1000: loss=0.0678 " + "l1=0.0179" + "l2=0.0499 f=-0.166 shape=(1, 9000, 1)
logits [[-0.0760359  -0.3252677  -0.20910992 -0.05525969]]
Iteration 800 of 1000: loss=0.0569 " + "l1=0.00771" + "l2=0.0492 f=-0.183 shape=(1, 9000, 1)
logits [[-0.12666215 -0.23523991 -0.25062558 -0.11878995]]
Iteration 900 of 1000: loss=0.0495 " + "l1=0.000787" + "l2=0.0487 f=-0.195 shape=(1, 9000, 1)
logits [[-0.16234984 -0.17423235 -0.2766765  -0.16541728]]
--- 294.00606775283813 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00241 " + "l1=0.00241" + "l2=0 f=-0.0857 shape=(1, 9000, 1)
logits [[ 1.5248042 -2.3837922  1.2836204 -0.7673431]]
Iteration 100 of 1000: loss=0.00221 " + "l1=0.00202" + "l2=0.000198 f=-0.0884 shape=(1, 9000, 1)
logits [[ 1.4947379  -2.3968613   1.2931346  -0.74448603]]
Iteration 200 of 1000: loss=0.00214 " + "l1=0.00199" + "l2=0.000151 f=-0.0884 shape=(1, 9000, 1)
logits [[ 1.4936891 -2.3980935  1.2943797 -0.7433867]]
Iteration 300 of 1000: loss=0.00212 " + "l1=0.00193" + "l2=0.000189 f=-0.0886 shape=(1, 9000, 1)
logits [[ 1.4895086 -2.4005208  1.2962474 -0.7396175]]
Iteration 400 of 1000: loss=0.00209 " + "l1=0.00186" + "l2=0.000227 f=-0.0888 shape=(1, 9000, 1)
logits [[ 1.4844968 -2.4032905  1.2981201 -0.7347204]]
Iteration 500 of 1000: loss=0.00208 " + "l1=0.00179" + "l2=0.000282 f=-0.0891 shape=(1, 9000, 1)
logits [[ 1.4792204 -2.4059741  1.299839  -0.7295696]]
Iteration 600 of 1000: loss=0.00215 " + "l1=0.00173" + "l2=0.000418 f=-0.0893 shape=(1, 9000, 1)
logits [[ 1.4742618  -2.408549    1.301543   -0.72447157]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0241 " + "l1=0.0241" + "l2=0 f=-0.0857 shape=(1, 9000, 1)
logits [[ 1.5248042 -2.3837922  1.2836204 -0.7673431]]
Iteration 100 of 1000: loss=0.00654 " + "l1=0.000137" + "l2=0.00641 f=-0.0992 shape=(1, 9000, 1)
logits [[ 1.333982   -2.4581888   1.3326123  -0.60520405]]
Iteration 200 of 1000: loss=0.00412 " + "l1=3.08e-05" + "l2=0.00409 f=-0.0981 shape=(1, 9000, 1)
logits [[ 1.3347653 -2.4630466  1.3344578 -0.5986853]]
Iteration 300 of 1000: loss=0.00322 " + "l1=0" + "l2=0.00322 f=-0.0982 shape=(1, 9000, 1)
logits [[ 1.3333317  -2.4639463   1.3337642  -0.59588116]]
Iteration 400 of 1000: loss=0.00291 " + "l1=0" + "l2=0.00291 f=-0.0983 shape=(1, 9000, 1)
logits [[ 1.328107  -2.4631405  1.3320044 -0.5902325]]
Iteration 500 of 1000: loss=0.00254 " + "l1=0.000117" + "l2=0.00242 f=-0.0977 shape=(1, 9000, 1)
logits [[ 1.3302232  -2.459988    1.3290572  -0.59004605]]
Iteration 600 of 1000: loss=0.00244 " + "l1=0" + "l2=0.00244 f=-0.0979 shape=(1, 9000, 1)
logits [[ 1.3246907 -2.4601572  1.328734  -0.5848762]]
Iteration 700 of 1000: loss=0.00215 " + "l1=0" + "l2=0.00215 f=-0.0979 shape=(1, 9000, 1)
logits [[ 1.3263104  -2.4582188   1.327244   -0.58710223]]
Iteration 800 of 1000: loss=0.00218 " + "l1=0.000141" + "l2=0.00204 f=-0.0977 shape=(1, 9000, 1)
logits [[ 1.3278772  -2.4566402   1.3264674  -0.58838916]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0133 " + "l1=0.0133" + "l2=0 f=-0.0857 shape=(1, 9000, 1)
logits [[ 1.5248042 -2.3837922  1.2836204 -0.7673431]]
Iteration 100 of 1000: loss=0.00762 " + "l1=0.00466" + "l2=0.00296 f=-0.0962 shape=(1, 9000, 1)
logits [[ 1.4018819 -2.4349575  1.3170993 -0.668745 ]]
Iteration 200 of 1000: loss=0.00518 " + "l1=0.00117" + "l2=0.00402 f=-0.0975 shape=(1, 9000, 1)
logits [[ 1.3520316 -2.4559183  1.3308312 -0.616955 ]]
Iteration 300 of 1000: loss=0.00356 " + "l1=1.72e-06" + "l2=0.00356 f=-0.0983 shape=(1, 9000, 1)
logits [[ 1.3350147  -2.4641852   1.3349833  -0.59892416]]
Iteration 400 of 1000: loss=0.00292 " + "l1=0" + "l2=0.00292 f=-0.0982 shape=(1, 9000, 1)
logits [[ 1.3330784  -2.4630682   1.3331479  -0.59603566]]
Iteration 500 of 1000: loss=0.00259 " + "l1=1.06e-05" + "l2=0.00258 f=-0.0979 shape=(1, 9000, 1)
logits [[ 1.3309145 -2.461055   1.3307215 -0.5922214]]
Iteration 600 of 1000: loss=0.00231 " + "l1=0" + "l2=0.00231 f=-0.0977 shape=(1, 9000, 1)
logits [[ 1.3287102  -2.459825    1.3291535  -0.58898157]]
Iteration 700 of 1000: loss=0.00229 " + "l1=3e-05" + "l2=0.00226 f=-0.098 shape=(1, 9000, 1)
logits [[ 1.3280641  -2.4580784   1.327519   -0.58946854]]
Iteration 800 of 1000: loss=0.00215 " + "l1=0" + "l2=0.00215 f=-0.0981 shape=(1, 9000, 1)
logits [[ 1.3266197 -2.4575543  1.3273169 -0.5886829]]
Iteration 900 of 1000: loss=0.00204 " + "l1=0" + "l2=0.00204 f=-0.0979 shape=(1, 9000, 1)
logits [[ 1.3267006 -2.4569187  1.3272527 -0.5886068]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00784 " + "l1=0.00784" + "l2=0 f=-0.0857 shape=(1, 9000, 1)
logits [[ 1.5248042 -2.3837922  1.2836204 -0.7673431]]
Iteration 100 of 1000: loss=0.00583 " + "l1=0.00468" + "l2=0.00115 f=-0.0925 shape=(1, 9000, 1)
logits [[ 1.449225  -2.415873   1.3052604 -0.7087013]]
Iteration 200 of 1000: loss=0.00511 " + "l1=0.00368" + "l2=0.00143 f=-0.0936 shape=(1, 9000, 1)
logits [[ 1.4261664 -2.427577   1.3128543 -0.6859285]]
Iteration 300 of 1000: loss=0.00437 " + "l1=0.00253" + "l2=0.00184 f=-0.094 shape=(1, 9000, 1)
logits [[ 1.3993577 -2.4407172  1.3213991 -0.6560399]]
Iteration 400 of 1000: loss=0.00369 " + "l1=0.00152" + "l2=0.00218 f=-0.0955 shape=(1, 9000, 1)
logits [[ 1.3725251 -2.4502363  1.3258033 -0.6299567]]
Iteration 500 of 1000: loss=0.00312 " + "l1=0.000661" + "l2=0.00245 f=-0.097 shape=(1, 9000, 1)
logits [[ 1.3499719 -2.4578655  1.3296213 -0.6097216]]
Iteration 600 of 1000: loss=0.00271 " + "l1=3.14e-05" + "l2=0.00268 f=-0.098 shape=(1, 9000, 1)
logits [[ 1.332131  -2.4619744  1.3311661 -0.5932814]]
Iteration 700 of 1000: loss=0.00237 " + "l1=5.13e-06" + "l2=0.00236 f=-0.0978 shape=(1, 9000, 1)
logits [[ 1.3300053  -2.4608333   1.3298475  -0.59010386]]
Iteration 800 of 1000: loss=0.00235 " + "l1=0" + "l2=0.00235 f=-0.0977 shape=(1, 9000, 1)
logits [[ 1.3288424  -2.459465    1.3288949  -0.58897036]]
Iteration 900 of 1000: loss=0.0022 " + "l1=0" + "l2=0.0022 f=-0.0978 shape=(1, 9000, 1)
logits [[ 1.3279339  -2.4584596   1.3282453  -0.58898854]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00513 " + "l1=0.00513" + "l2=0 f=-0.0857 shape=(1, 9000, 1)
logits [[ 1.5248042 -2.3837922  1.2836204 -0.7673431]]
Iteration 100 of 1000: loss=0.00425 " + "l1=0.00369" + "l2=0.000565 f=-0.0905 shape=(1, 9000, 1)
logits [[ 1.472612  -2.406028   1.2990906 -0.727805 ]]
Iteration 200 of 1000: loss=0.00398 " + "l1=0.00338" + "l2=0.000594 f=-0.091 shape=(1, 9000, 1)
logits [[ 1.462371   -2.4116952   1.3031603  -0.71778363]]
Iteration 300 of 1000: loss=0.00374 " + "l1=0.003" + "l2=0.00074 f=-0.0917 shape=(1, 9000, 1)
logits [[ 1.4492998  -2.4189827   1.3079523  -0.70499897]]
Iteration 400 of 1000: loss=0.00351 " + "l1=0.00258" + "l2=0.000933 f=-0.0921 shape=(1, 9000, 1)
logits [[ 1.434534   -2.4269643   1.3131902  -0.68914336]]
Iteration 500 of 1000: loss=0.00323 " + "l1=0.00213" + "l2=0.0011 f=-0.0925 shape=(1, 9000, 1)
logits [[ 1.4176227  -2.4337606   1.3173138  -0.67109966]]
Iteration 600 of 1000: loss=0.00303 " + "l1=0.00174" + "l2=0.00129 f=-0.0931 shape=(1, 9000, 1)
logits [[ 1.4023428 -2.4395368  1.3204596 -0.6557302]]
Iteration 700 of 1000: loss=0.00278 " + "l1=0.00137" + "l2=0.00141 f=-0.0942 shape=(1, 9000, 1)
logits [[ 1.387369  -2.4451582  1.3228668 -0.6416934]]
Iteration 800 of 1000: loss=0.00275 " + "l1=0.00106" + "l2=0.00169 f=-0.0951 shape=(1, 9000, 1)
logits [[ 1.3744292 -2.448964   1.3245564 -0.63048  ]]
Iteration 900 of 1000: loss=0.00249 " + "l1=0.000776" + "l2=0.00171 f=-0.0959 shape=(1, 9000, 1)
logits [[ 1.3628285  -2.451985    1.3262908  -0.62056875]]
--- 259.93364810943604 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0229 " + "l1=0.0229" + "l2=0 f=-0.0857 shape=(1, 9000, 1)
logits [[ 1.5248042 -2.3837922  1.2836204 -0.7673431]]
Iteration 100 of 1000: loss=0.022 " + "l1=0.0215" + "l2=0.000523 f=-0.0861 shape=(1, 9000, 1)
logits [[ 1.4585876 -2.3717597  1.2618718 -0.6931456]]
Iteration 200 of 1000: loss=0.0217 " + "l1=0.0211" + "l2=0.000573 f=-0.0856 shape=(1, 9000, 1)
logits [[ 1.4418578  -2.3662205   1.2547083  -0.67287594]]
Iteration 300 of 1000: loss=0.0214 " + "l1=0.0207" + "l2=0.000703 f=-0.0851 shape=(1, 9000, 1)
logits [[ 1.4215201  -2.3617043   1.2473668  -0.64738643]]
Iteration 400 of 1000: loss=0.0211 " + "l1=0.0202" + "l2=0.000879 f=-0.0845 shape=(1, 9000, 1)
logits [[ 1.3986001  -2.3566477   1.2388473  -0.61873573]]
Iteration 500 of 1000: loss=0.0207 " + "l1=0.0196" + "l2=0.00113 f=-0.0837 shape=(1, 9000, 1)
logits [[ 1.3732276 -2.352161   1.2300508 -0.5860116]]
Iteration 600 of 1000: loss=0.0203 " + "l1=0.019" + "l2=0.00134 f=-0.0834 shape=(1, 9000, 1)
logits [[ 1.3457491  -2.3459547   1.2196654  -0.55294234]]
Iteration 700 of 1000: loss=0.02 " + "l1=0.0184" + "l2=0.00162 f=-0.0833 shape=(1, 9000, 1)
logits [[ 1.3174729 -2.339188   1.2083575 -0.5198589]]
Iteration 800 of 1000: loss=0.0197 " + "l1=0.0178" + "l2=0.00186 f=-0.0835 shape=(1, 9000, 1)
logits [[ 1.2898608  -2.3293188   1.1950822  -0.48970464]]
Iteration 900 of 1000: loss=0.0191 " + "l1=0.0171" + "l2=0.00206 f=-0.083 shape=(1, 9000, 1)
logits [[ 1.2555814 -2.3142734  1.1782638 -0.4517005]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.229 " + "l1=0.229" + "l2=0 f=-0.0857 shape=(1, 9000, 1)
logits [[ 1.5248042 -2.3837922  1.2836204 -0.7673431]]
Iteration 100 of 1000: loss=0.148 " + "l1=0.115" + "l2=0.0325 f=-0.0795 shape=(1, 9000, 1)
logits [[ 1.0114514  -2.202589    1.0124624  -0.13921893]]
Iteration 200 of 1000: loss=0.0858 " + "l1=0.0376" + "l2=0.0482 f=-0.0731 shape=(1, 9000, 1)
logits [[ 0.62897843 -1.9840529   0.71928364  0.3434707 ]]
Iteration 300 of 1000: loss=0.04 " + "l1=0.00154" + "l2=0.0385 f=-0.0759 shape=(1, 9000, 1)
logits [[ 0.417711   -1.9438035   0.61902106  0.6036211 ]]
Iteration 400 of 1000: loss=0.0285 " + "l1=0" + "l2=0.0285 f=-0.0799 shape=(1, 9000, 1)
logits [[ 0.39256158 -1.9386085   0.6130192   0.61333966]]
Iteration 500 of 1000: loss=0.0235 " + "l1=0.000103" + "l2=0.0234 f=-0.0826 shape=(1, 9000, 1)
logits [[ 0.3770101  -1.9316369   0.612702    0.61167055]]
Iteration 600 of 1000: loss=0.0204 " + "l1=0" + "l2=0.0204 f=-0.0846 shape=(1, 9000, 1)
logits [[ 0.3583968 -1.9156764  0.6035341  0.615153 ]]
Iteration 700 of 1000: loss=0.0176 " + "l1=0" + "l2=0.0176 f=-0.0884 shape=(1, 9000, 1)
logits [[ 0.35522452 -1.8987789   0.59440875  0.59564584]]
Iteration 800 of 1000: loss=0.0158 " + "l1=0" + "l2=0.0158 f=-0.0926 shape=(1, 9000, 1)
logits [[ 0.33962506 -1.871844    0.5757337   0.58612096]]
Iteration 900 of 1000: loss=0.0142 " + "l1=0" + "l2=0.0142 f=-0.0956 shape=(1, 9000, 1)
logits [[ 0.33237746 -1.8470843   0.5600977   0.5722504 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.126 " + "l1=0.126" + "l2=0 f=-0.0857 shape=(1, 9000, 1)
logits [[ 1.5248042 -2.3837922  1.2836204 -0.7673431]]
Iteration 100 of 1000: loss=0.0993 " + "l1=0.0866" + "l2=0.0127 f=-0.0849 shape=(1, 9000, 1)
logits [[ 1.1917989 -2.3271806  1.178189  -0.3823826]]
Iteration 200 of 1000: loss=0.0858 " + "l1=0.0714" + "l2=0.0144 f=-0.0814 shape=(1, 9000, 1)
logits [[ 1.0776327  -2.2638185   1.0793133  -0.21867517]]
Iteration 300 of 1000: loss=0.0639 " + "l1=0.0452" + "l2=0.0187 f=-0.0765 shape=(1, 9000, 1)
logits [[ 0.8550296  -2.140078    0.90073615  0.07817404]]
Iteration 400 of 1000: loss=0.0463 " + "l1=0.0229" + "l2=0.0235 f=-0.072 shape=(1, 9000, 1)
logits [[ 0.6300542  -2.0636342   0.78062123  0.36482078]]
Iteration 500 of 1000: loss=0.0318 " + "l1=0.00349" + "l2=0.0284 f=-0.0758 shape=(1, 9000, 1)
logits [[ 0.42368993 -1.9879812   0.66234523  0.5989442 ]]
Iteration 600 of 1000: loss=0.0236 " + "l1=0.000101" + "l2=0.0235 f=-0.0803 shape=(1, 9000, 1)
logits [[ 0.37659046 -1.9630576   0.6334617   0.6316327 ]]
Iteration 700 of 1000: loss=0.02 " + "l1=0" + "l2=0.02 f=-0.083 shape=(1, 9000, 1)
logits [[ 0.36259845 -1.944955    0.62471426  0.62574667]]
Iteration 800 of 1000: loss=0.0173 " + "l1=0" + "l2=0.0173 f=-0.086 shape=(1, 9000, 1)
logits [[ 0.35066923 -1.9209591   0.60983765  0.61632967]]
Iteration 900 of 1000: loss=0.0153 " + "l1=0" + "l2=0.0153 f=-0.0906 shape=(1, 9000, 1)
logits [[ 0.34484807 -1.8919952   0.5902756   0.5943838 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0745 " + "l1=0.0745" + "l2=0 f=-0.0857 shape=(1, 9000, 1)
logits [[ 1.5248042 -2.3837922  1.2836204 -0.7673431]]
Iteration 100 of 1000: loss=0.0653 " + "l1=0.0607" + "l2=0.00459 f=-0.0852 shape=(1, 9000, 1)
logits [[ 1.3268946 -2.3484764  1.2208451 -0.5400372]]
Iteration 200 of 1000: loss=0.0605 " + "l1=0.0541" + "l2=0.00635 f=-0.0848 shape=(1, 9000, 1)
logits [[ 1.2363713 -2.3394291  1.1932513 -0.4293049]]
Iteration 300 of 1000: loss=0.0551 " + "l1=0.0475" + "l2=0.00761 f=-0.0844 shape=(1, 9000, 1)
logits [[ 1.1442735  -2.309018    1.1447692  -0.31748864]]
Iteration 400 of 1000: loss=0.0475 " + "l1=0.0388" + "l2=0.00872 f=-0.078 shape=(1, 9000, 1)
logits [[ 1.0347503  -2.2294135   1.0376525  -0.15509647]]
Iteration 500 of 1000: loss=0.0403 " + "l1=0.0297" + "l2=0.0106 f=-0.0748 shape=(1, 9000, 1)
logits [[ 0.89449835 -2.168251    0.94429576  0.03015962]]
Iteration 600 of 1000: loss=0.0349 " + "l1=0.0224" + "l2=0.0125 f=-0.0742 shape=(1, 9000, 1)
logits [[ 0.7690221  -2.118396    0.87055147  0.1820372 ]]
Iteration 700 of 1000: loss=0.0304 " + "l1=0.0167" + "l2=0.0137 f=-0.0747 shape=(1, 9000, 1)
logits [[ 0.66826046 -2.0784168   0.81323063  0.29805854]]
Iteration 800 of 1000: loss=0.0261 " + "l1=0.011" + "l2=0.0151 f=-0.076 shape=(1, 9000, 1)
logits [[ 0.56263053 -2.0347369   0.7530003   0.414957  ]]
Iteration 900 of 1000: loss=0.022 " + "l1=0.00542" + "l2=0.0166 f=-0.0786 shape=(1, 9000, 1)
logits [[ 0.45979288 -1.9935666   0.69312495  0.52637017]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0487 " + "l1=0.0487" + "l2=0 f=-0.0857 shape=(1, 9000, 1)
logits [[ 1.5248042 -2.3837922  1.2836204 -0.7673431]]
Iteration 100 of 1000: loss=0.0448 " + "l1=0.0428" + "l2=0.00202 f=-0.0859 shape=(1, 9000, 1)
logits [[ 1.3943018  -2.359677    1.2412187  -0.61960065]]
Iteration 200 of 1000: loss=0.043 " + "l1=0.0402" + "l2=0.00272 f=-0.0845 shape=(1, 9000, 1)
logits [[ 1.3414861  -2.3527176   1.2258333  -0.55256236]]
Iteration 300 of 1000: loss=0.041 " + "l1=0.0376" + "l2=0.00337 f=-0.0838 shape=(1, 9000, 1)
logits [[ 1.2858304  -2.344402    1.2067091  -0.48338175]]
Iteration 400 of 1000: loss=0.0389 " + "l1=0.0347" + "l2=0.00415 f=-0.0846 shape=(1, 9000, 1)
logits [[ 1.2217728  -2.3275723   1.1788489  -0.41125914]]
Iteration 500 of 1000: loss=0.0357 " + "l1=0.0306" + "l2=0.00504 f=-0.0824 shape=(1, 9000, 1)
logits [[ 1.1352682 -2.294234   1.1349572 -0.3055261]]
Iteration 600 of 1000: loss=0.0321 " + "l1=0.0264" + "l2=0.00565 f=-0.0765 shape=(1, 9000, 1)
logits [[ 1.0574338  -2.2397752   1.0596952  -0.18353891]]
Iteration 700 of 1000: loss=0.0294 " + "l1=0.0228" + "l2=0.00667 f=-0.0761 shape=(1, 9000, 1)
logits [[ 0.97377867 -2.1981478   0.9959028  -0.07576112]]
Iteration 800 of 1000: loss=0.0271 " + "l1=0.0196" + "l2=0.00755 f=-0.0733 shape=(1, 9000, 1)
logits [[ 0.8921676 -2.1665225  0.9513298  0.0296657]]
Iteration 900 of 1000: loss=0.0251 " + "l1=0.0169" + "l2=0.00823 f=-0.0736 shape=(1, 9000, 1)
logits [[ 0.82266307 -2.1369493   0.90795594  0.11187943]]
--- 294.3666751384735 seconds ---
Adv result:3
Loading record A04762
(1, 7640)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0473 " + "l1=0.0473" + "l2=0 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9138625 -2.8153174  1.6508642 -2.1628587]]
Iteration 100 of 1000: loss=0.0469 " + "l1=0.0467" + "l2=0.00028 f=-0.351 shape=(1, 9000, 1)
logits [[ 1.8721719 -2.7937846  1.6325158 -2.1159976]]
Iteration 200 of 1000: loss=0.0469 " + "l1=0.0466" + "l2=0.000269 f=-0.351 shape=(1, 9000, 1)
logits [[ 1.8678077 -2.790669   1.6302761 -2.11126  ]]
Iteration 300 of 1000: loss=0.0468 " + "l1=0.0465" + "l2=0.00032 f=-0.351 shape=(1, 9000, 1)
logits [[ 1.8615069 -2.7867892  1.6274033 -2.1041882]]
Iteration 400 of 1000: loss=0.0468 " + "l1=0.0464" + "l2=0.000372 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.8552915 -2.782986   1.6247288 -2.0973098]]
Iteration 500 of 1000: loss=0.0467 " + "l1=0.0463" + "l2=0.000457 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.8491703 -2.7790537  1.6221279 -2.0903687]]
Iteration 600 of 1000: loss=0.0467 " + "l1=0.0462" + "l2=0.000541 f=-0.349 shape=(1, 9000, 1)
logits [[ 1.8429434 -2.7753286  1.619757  -2.0837023]]
Iteration 700 of 1000: loss=0.0466 " + "l1=0.0461" + "l2=0.000557 f=-0.349 shape=(1, 9000, 1)
logits [[ 1.8366675 -2.7721062  1.6177086 -2.0770953]]
Iteration 800 of 1000: loss=0.0467 " + "l1=0.046" + "l2=0.00068 f=-0.348 shape=(1, 9000, 1)
logits [[ 1.8303692 -2.768911   1.615736  -2.0705338]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.473 " + "l1=0.473" + "l2=0 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9138625 -2.8153174  1.6508642 -2.1628587]]
Iteration 100 of 1000: loss=0.432 " + "l1=0.403" + "l2=0.0292 f=-0.339 shape=(1, 9000, 1)
logits [[ 1.4726346 -2.5570722  1.4334114 -1.7058148]]
Iteration 200 of 1000: loss=0.413 " + "l1=0.375" + "l2=0.0379 f=-0.329 shape=(1, 9000, 1)
logits [[ 1.3293532 -2.4210818  1.3287141 -1.5549393]]
Iteration 300 of 1000: loss=0.399 " + "l1=0.353" + "l2=0.0459 f=-0.317 shape=(1, 9000, 1)
logits [[ 1.2354513 -2.2951357  1.2364873 -1.4432555]]
Iteration 400 of 1000: loss=0.388 " + "l1=0.335" + "l2=0.0529 f=-0.307 shape=(1, 9000, 1)
logits [[ 1.154807  -2.190994   1.1531922 -1.3455215]]
Iteration 500 of 1000: loss=0.376 " + "l1=0.314" + "l2=0.0621 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.0654668 -2.073075   1.0625006 -1.236839 ]]
Iteration 600 of 1000: loss=0.361 " + "l1=0.283" + "l2=0.0785 f=-0.282 shape=(1, 9000, 1)
logits [[ 0.93483037 -1.8857981   0.9405583  -1.1195745 ]]
Iteration 700 of 1000: loss=0.346 " + "l1=0.255" + "l2=0.0914 f=-0.269 shape=(1, 9000, 1)
logits [[ 0.8317271  -1.7090112   0.83804214 -1.0383264 ]]
Iteration 800 of 1000: loss=0.33 " + "l1=0.235" + "l2=0.0951 f=-0.263 shape=(1, 9000, 1)
logits [[ 0.76973987 -1.5819714   0.77119106 -1.0110108 ]]
Iteration 900 of 1000: loss=0.32 " + "l1=0.225" + "l2=0.0944 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.73928654 -1.5146258   0.73866785 -0.990584  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.73 " + "l1=4.73" + "l2=0 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9138625 -2.8153174  1.6508642 -2.1628587]]
Iteration 100 of 1000: loss=1.34 " + "l1=0.399" + "l2=0.945 f=-0.248 shape=(1, 9000, 1)
logits [[-0.15285844 -0.54222065 -0.14365941 -0.15453973]]
Iteration 200 of 1000: loss=0.843 " + "l1=0" + "l2=0.843 f=-0.28 shape=(1, 9000, 1)
logits [[-0.30486533 -0.25446835 -0.2712295  -0.2898414 ]]
Iteration 300 of 1000: loss=0.685 " + "l1=0" + "l2=0.685 f=-0.255 shape=(1, 9000, 1)
logits [[-0.279109   -0.23811425 -0.26097026 -0.24249542]]
Iteration 400 of 1000: loss=0.612 " + "l1=0" + "l2=0.612 f=-0.246 shape=(1, 9000, 1)
logits [[-0.26241702 -0.23760273 -0.24370572 -0.239227  ]]
Iteration 500 of 1000: loss=0.576 " + "l1=0" + "l2=0.576 f=-0.241 shape=(1, 9000, 1)
logits [[-0.2403065  -0.23263675 -0.23538499 -0.2549222 ]]
Iteration 600 of 1000: loss=0.553 " + "l1=0.0114" + "l2=0.541 f=-0.243 shape=(1, 9000, 1)
logits [[-0.26363647 -0.23735692 -0.22594364 -0.24318922]]
Iteration 700 of 1000: loss=0.518 " + "l1=0.00141" + "l2=0.516 f=-0.236 shape=(1, 9000, 1)
logits [[-0.2452885  -0.23362288 -0.23220848 -0.23478332]]
Iteration 800 of 1000: loss=0.499 " + "l1=0" + "l2=0.499 f=-0.234 shape=(1, 9000, 1)
logits [[-0.24780157 -0.20988144 -0.23693375 -0.24088147]]
Iteration 900 of 1000: loss=0.477 " + "l1=0" + "l2=0.477 f=-0.242 shape=(1, 9000, 1)
logits [[-0.28751224 -0.21553698 -0.2269227  -0.23851544]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.6 " + "l1=2.6" + "l2=0 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9138625 -2.8153174  1.6508642 -2.1628587]]
Iteration 100 of 1000: loss=1.16 " + "l1=0.497" + "l2=0.659 f=-0.249 shape=(1, 9000, 1)
logits [[-0.02016856 -0.88818204  0.0159106  -0.10512803]]
Iteration 200 of 1000: loss=0.712 " + "l1=0.0937" + "l2=0.618 f=-0.279 shape=(1, 9000, 1)
logits [[-0.26390615 -0.38353053 -0.21323855 -0.2560228 ]]
Iteration 300 of 1000: loss=0.549 " + "l1=0.00316" + "l2=0.546 f=-0.271 shape=(1, 9000, 1)
logits [[-0.27559426 -0.270147   -0.264398   -0.2746789 ]]
Iteration 400 of 1000: loss=0.506 " + "l1=0" + "l2=0.506 f=-0.266 shape=(1, 9000, 1)
logits [[-0.2827157  -0.25526136 -0.25676554 -0.26925114]]
Iteration 500 of 1000: loss=0.488 " + "l1=0" + "l2=0.488 f=-0.261 shape=(1, 9000, 1)
logits [[-0.28532103 -0.24228717 -0.2597794  -0.2556546 ]]
Iteration 600 of 1000: loss=0.471 " + "l1=0.0013" + "l2=0.47 f=-0.252 shape=(1, 9000, 1)
logits [[-0.24933937 -0.2497739  -0.24741672 -0.26157326]]
Iteration 700 of 1000: loss=0.462 " + "l1=0.000271" + "l2=0.462 f=-0.252 shape=(1, 9000, 1)
logits [[-0.2513934  -0.24826543 -0.24777295 -0.26006997]]
Iteration 800 of 1000: loss=0.457 " + "l1=0.00167" + "l2=0.455 f=-0.254 shape=(1, 9000, 1)
logits [[-0.2576522  -0.254705   -0.25274444 -0.2516606 ]]
Iteration 900 of 1000: loss=0.454 " + "l1=0" + "l2=0.454 f=-0.257 shape=(1, 9000, 1)
logits [[-0.26818815 -0.24835233 -0.25493273 -0.25590625]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.54 " + "l1=1.54" + "l2=0 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9138625 -2.8153174  1.6508642 -2.1628587]]
Iteration 100 of 1000: loss=0.994 " + "l1=0.671" + "l2=0.323 f=-0.27 shape=(1, 9000, 1)
logits [[ 0.5677707  -1.4979815   0.56594294 -0.715578  ]]
Iteration 200 of 1000: loss=0.758 " + "l1=0.372" + "l2=0.386 f=-0.264 shape=(1, 9000, 1)
logits [[ 0.1359553  -1.0040454   0.14038387 -0.32815808]]
Iteration 300 of 1000: loss=0.592 " + "l1=0.168" + "l2=0.424 f=-0.265 shape=(1, 9000, 1)
logits [[-0.15054806 -0.6332485  -0.11730978 -0.1607117 ]]
Iteration 400 of 1000: loss=0.521 " + "l1=0.0803" + "l2=0.44 f=-0.273 shape=(1, 9000, 1)
logits [[-0.23130228 -0.44236612 -0.19542383 -0.22161794]]
Iteration 500 of 1000: loss=0.49 " + "l1=0.0466" + "l2=0.444 f=-0.272 shape=(1, 9000, 1)
logits [[-0.24558443 -0.36815912 -0.22477782 -0.24980876]]
Iteration 600 of 1000: loss=0.478 " + "l1=0.0346" + "l2=0.444 f=-0.269 shape=(1, 9000, 1)
logits [[-0.25212032 -0.34260315 -0.24345675 -0.23607454]]
Iteration 700 of 1000: loss=0.464 " + "l1=0.0243" + "l2=0.44 f=-0.262 shape=(1, 9000, 1)
logits [[-0.23510222 -0.30741578 -0.23273176 -0.27397648]]
Iteration 800 of 1000: loss=0.451 " + "l1=0.00844" + "l2=0.443 f=-0.256 shape=(1, 9000, 1)
logits [[-0.27043518 -0.26613057 -0.24015094 -0.2466518 ]]
Iteration 900 of 1000: loss=0.447 " + "l1=0.00825" + "l2=0.438 f=-0.252 shape=(1, 9000, 1)
logits [[-0.2586507  -0.2636854  -0.24553591 -0.23830074]]
--- 282.5540635585785 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00263 " + "l1=0.00263" + "l2=0 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9138625 -2.8153174  1.6508642 -2.1628587]]
Iteration 100 of 1000: loss=0.00245 " + "l1=0.00227" + "l2=0.000182 f=-0.355 shape=(1, 9000, 1)
logits [[ 1.8821244 -2.820613   1.6556119 -2.1362796]]
Iteration 200 of 1000: loss=0.00239 " + "l1=0.00223" + "l2=0.000159 f=-0.355 shape=(1, 9000, 1)
logits [[ 1.8804084 -2.8214405  1.6572727 -2.1357224]]
Iteration 300 of 1000: loss=0.00236 " + "l1=0.00217" + "l2=0.000185 f=-0.355 shape=(1, 9000, 1)
logits [[ 1.8763543 -2.8226566  1.6590606 -2.1329434]]
Iteration 400 of 1000: loss=0.00237 " + "l1=0.00211" + "l2=0.000256 f=-0.355 shape=(1, 9000, 1)
logits [[ 1.872189  -2.823797   1.660748  -2.1299837]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0263 " + "l1=0.0263" + "l2=0 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9138625 -2.8153174  1.6508642 -2.1628587]]
Iteration 100 of 1000: loss=0.0074 " + "l1=0" + "l2=0.0074 f=-0.363 shape=(1, 9000, 1)
logits [[ 1.7004561 -2.866872   1.7017833 -1.9853783]]
Iteration 200 of 1000: loss=0.00532 " + "l1=0" + "l2=0.00532 f=-0.362 shape=(1, 9000, 1)
logits [[ 1.7087456 -2.8707821  1.7103944 -1.9964058]]
Iteration 300 of 1000: loss=0.00451 " + "l1=0" + "l2=0.00451 f=-0.362 shape=(1, 9000, 1)
logits [[ 1.7141122 -2.8738148  1.7161204 -2.0048237]]
Iteration 400 of 1000: loss=0.00403 " + "l1=0" + "l2=0.00403 f=-0.362 shape=(1, 9000, 1)
logits [[ 1.7160355 -2.8738465  1.7178302 -2.0082734]]
Iteration 500 of 1000: loss=0.00378 " + "l1=0.000141" + "l2=0.00364 f=-0.362 shape=(1, 9000, 1)
logits [[ 1.7177305 -2.8709836  1.7163252 -2.0092983]]
Iteration 600 of 1000: loss=0.00348 " + "l1=0" + "l2=0.00348 f=-0.361 shape=(1, 9000, 1)
logits [[ 1.713178  -2.8673062  1.7139827 -2.0047784]]
Iteration 700 of 1000: loss=0.00333 " + "l1=0.000166" + "l2=0.00316 f=-0.361 shape=(1, 9000, 1)
logits [[ 1.7122061 -2.8628955  1.7105433 -2.0024967]]
Iteration 800 of 1000: loss=0.00338 " + "l1=0" + "l2=0.00338 f=-0.361 shape=(1, 9000, 1)
logits [[ 1.7060002 -2.8616078  1.7094399 -1.996836 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0145 " + "l1=0.0145" + "l2=0 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9138625 -2.8153174  1.6508642 -2.1628587]]
Iteration 100 of 1000: loss=0.00855 " + "l1=0.0048" + "l2=0.00374 f=-0.36 shape=(1, 9000, 1)
logits [[ 1.7701123 -2.8488934  1.6827645 -2.0455565]]
Iteration 200 of 1000: loss=0.00593 " + "l1=0.000352" + "l2=0.00558 f=-0.363 shape=(1, 9000, 1)
logits [[ 1.7142363 -2.8707705  1.7078308 -2.0025754]]
Iteration 300 of 1000: loss=0.00466 " + "l1=3.28e-05" + "l2=0.00463 f=-0.362 shape=(1, 9000, 1)
logits [[ 1.7163196 -2.8750012  1.7157226 -2.006965 ]]
Iteration 400 of 1000: loss=0.00415 " + "l1=3.33e-05" + "l2=0.00411 f=-0.362 shape=(1, 9000, 1)
logits [[ 1.7185897 -2.8746428  1.7179834 -2.0104585]]
Iteration 500 of 1000: loss=0.00382 " + "l1=0" + "l2=0.00382 f=-0.362 shape=(1, 9000, 1)
logits [[ 1.7164149 -2.8731866  1.718099  -2.0091836]]
Iteration 600 of 1000: loss=0.00352 " + "l1=0" + "l2=0.00352 f=-0.361 shape=(1, 9000, 1)
logits [[ 1.7148106 -2.8692467  1.7153028 -2.0066357]]
Iteration 700 of 1000: loss=0.00335 " + "l1=0.000154" + "l2=0.0032 f=-0.361 shape=(1, 9000, 1)
logits [[ 1.7137265 -2.8636534  1.710924  -2.0040119]]
Iteration 800 of 1000: loss=0.0032 " + "l1=0" + "l2=0.0032 f=-0.361 shape=(1, 9000, 1)
logits [[ 1.7082015 -2.862128   1.7095696 -1.99897  ]]
Iteration 900 of 1000: loss=0.00314 " + "l1=1.59e-05" + "l2=0.00312 f=-0.361 shape=(1, 9000, 1)
logits [[ 1.7072424 -2.859569   1.706954  -1.9972191]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00855 " + "l1=0.00855" + "l2=0 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9138625 -2.8153174  1.6508642 -2.1628587]]
Iteration 100 of 1000: loss=0.00657 " + "l1=0.00526" + "l2=0.00131 f=-0.357 shape=(1, 9000, 1)
logits [[ 1.8290851 -2.832515   1.6671118 -2.0936537]]
Iteration 200 of 1000: loss=0.00593 " + "l1=0.00427" + "l2=0.00166 f=-0.359 shape=(1, 9000, 1)
logits [[ 1.8075389 -2.8407907  1.6761458 -2.077993 ]]
Iteration 300 of 1000: loss=0.00532 " + "l1=0.00316" + "l2=0.00216 f=-0.36 shape=(1, 9000, 1)
logits [[ 1.7833513 -2.8480992  1.6860865 -2.0597572]]
Iteration 400 of 1000: loss=0.00478 " + "l1=0.00219" + "l2=0.00259 f=-0.36 shape=(1, 9000, 1)
logits [[ 1.7621694 -2.8540719  1.6948471 -2.043818 ]]
Iteration 500 of 1000: loss=0.00434 " + "l1=0.00139" + "l2=0.00294 f=-0.361 shape=(1, 9000, 1)
logits [[ 1.7439654 -2.8587036  1.7011511 -2.0292244]]
Iteration 600 of 1000: loss=0.00392 " + "l1=0.00062" + "l2=0.0033 f=-0.361 shape=(1, 9000, 1)
logits [[ 1.7260879 -2.862804   1.7070211 -2.0148706]]
Iteration 700 of 1000: loss=0.00361 " + "l1=0.000135" + "l2=0.00347 f=-0.361 shape=(1, 9000, 1)
logits [[ 1.7139586 -2.863637   1.709805  -2.0044582]]
Iteration 800 of 1000: loss=0.00337 " + "l1=1.41e-05" + "l2=0.00336 f=-0.361 shape=(1, 9000, 1)
logits [[ 1.7096951 -2.8614585  1.7092627 -2.0003796]]
Iteration 900 of 1000: loss=0.00314 " + "l1=9.63e-06" + "l2=0.00313 f=-0.36 shape=(1, 9000, 1)
logits [[ 1.7077281 -2.8590562  1.7074319 -1.9979744]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00559 " + "l1=0.00559" + "l2=0 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9138625 -2.8153174  1.6508642 -2.1628587]]
Iteration 100 of 1000: loss=0.00475 " + "l1=0.00414" + "l2=0.000604 f=-0.356 shape=(1, 9000, 1)
logits [[ 1.8562152 -2.8263254  1.6612865 -2.11547  ]]
Iteration 200 of 1000: loss=0.0045 " + "l1=0.00381" + "l2=0.000682 f=-0.357 shape=(1, 9000, 1)
logits [[ 1.8452945 -2.8299057  1.6658252 -2.1079106]]
Iteration 300 of 1000: loss=0.00431 " + "l1=0.00345" + "l2=0.000864 f=-0.357 shape=(1, 9000, 1)
logits [[ 1.833103  -2.8339918  1.6709148 -2.0991943]]
Iteration 400 of 1000: loss=0.00412 " + "l1=0.00312" + "l2=0.001 f=-0.358 shape=(1, 9000, 1)
logits [[ 1.821794  -2.8373997  1.67519   -2.0908089]]
Iteration 500 of 1000: loss=0.00401 " + "l1=0.0028" + "l2=0.00121 f=-0.358 shape=(1, 9000, 1)
logits [[ 1.8105717 -2.839959   1.6790239 -2.082001 ]]
Iteration 600 of 1000: loss=0.00385 " + "l1=0.00247" + "l2=0.00139 f=-0.358 shape=(1, 9000, 1)
logits [[ 1.7985976 -2.8418655  1.6825253 -2.0726707]]
Iteration 700 of 1000: loss=0.00369 " + "l1=0.00218" + "l2=0.00151 f=-0.359 shape=(1, 9000, 1)
logits [[ 1.7878802 -2.8432357  1.6850613 -2.0642269]]
Iteration 800 of 1000: loss=0.00364 " + "l1=0.00192" + "l2=0.00172 f=-0.359 shape=(1, 9000, 1)
logits [[ 1.7775717 -2.8444896  1.687213  -2.055947 ]]
Iteration 900 of 1000: loss=0.00354 " + "l1=0.00166" + "l2=0.00189 f=-0.359 shape=(1, 9000, 1)
logits [[ 1.7671276 -2.8455634  1.689169  -2.047459 ]]
--- 248.84639692306519 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0408 " + "l1=0.0408" + "l2=0 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9138625 -2.8153174  1.6508642 -2.1628587]]
Iteration 100 of 1000: loss=0.0398 " + "l1=0.0392" + "l2=0.000625 f=-0.352 shape=(1, 9000, 1)
logits [[ 1.843977  -2.8044922  1.6301055 -2.0779035]]
Iteration 200 of 1000: loss=0.0396 " + "l1=0.039" + "l2=0.000672 f=-0.352 shape=(1, 9000, 1)
logits [[ 1.8320383 -2.8022878  1.6268753 -2.0641124]]
Iteration 300 of 1000: loss=0.0395 " + "l1=0.0387" + "l2=0.000828 f=-0.351 shape=(1, 9000, 1)
logits [[ 1.8189255 -2.799951   1.6234378 -2.0478394]]
Iteration 400 of 1000: loss=0.0393 " + "l1=0.0384" + "l2=0.000921 f=-0.351 shape=(1, 9000, 1)
logits [[ 1.8070393 -2.7977557  1.620418  -2.032502 ]]
Iteration 500 of 1000: loss=0.0392 " + "l1=0.0381" + "l2=0.00103 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.7957588 -2.795595   1.6175922 -2.0179875]]
Iteration 600 of 1000: loss=0.0391 " + "l1=0.0379" + "l2=0.00119 f=-0.349 shape=(1, 9000, 1)
logits [[ 1.783865  -2.7932844  1.6146019 -2.002895 ]]
Iteration 700 of 1000: loss=0.0389 " + "l1=0.0376" + "l2=0.00131 f=-0.349 shape=(1, 9000, 1)
logits [[ 1.7718841 -2.7907872  1.611414  -1.9880368]]
Iteration 800 of 1000: loss=0.0388 " + "l1=0.0373" + "l2=0.00149 f=-0.348 shape=(1, 9000, 1)
logits [[ 1.7604336 -2.788136   1.6082122 -1.9734282]]
Iteration 900 of 1000: loss=0.0387 " + "l1=0.0371" + "l2=0.00161 f=-0.347 shape=(1, 9000, 1)
logits [[ 1.7493578 -2.7852204  1.605161  -1.9591569]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.408 " + "l1=0.408" + "l2=0 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9138625 -2.8153174  1.6508642 -2.1628587]]
Iteration 100 of 1000: loss=0.322 " + "l1=0.278" + "l2=0.0445 f=-0.33 shape=(1, 9000, 1)
logits [[ 1.355015  -2.6100647  1.3577808 -1.4218233]]
Iteration 200 of 1000: loss=0.296 " + "l1=0.233" + "l2=0.0638 f=-0.315 shape=(1, 9000, 1)
logits [[ 1.1612554 -2.50627    1.2049882 -1.1200752]]
Iteration 300 of 1000: loss=0.268 " + "l1=0.18" + "l2=0.0881 f=-0.294 shape=(1, 9000, 1)
logits [[ 0.944019  -2.4008536  1.0400935 -0.7584599]]
Iteration 400 of 1000: loss=0.24 " + "l1=0.131" + "l2=0.109 f=-0.269 shape=(1, 9000, 1)
logits [[ 0.7298044  -2.2848763   0.8951607  -0.41669837]]
Iteration 500 of 1000: loss=0.211 " + "l1=0.0834" + "l2=0.128 f=-0.252 shape=(1, 9000, 1)
logits [[ 0.55236316 -2.1884127   0.73026675 -0.10384155]]
Iteration 600 of 1000: loss=0.183 " + "l1=0.0486" + "l2=0.135 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.46649018 -2.115807    0.60783905  0.12146597]]
Iteration 700 of 1000: loss=0.16 " + "l1=0.0204" + "l2=0.14 f=-0.217 shape=(1, 9000, 1)
logits [[ 0.37095535 -2.0447829   0.5045574   0.30089742]]
Iteration 800 of 1000: loss=0.135 " + "l1=0" + "l2=0.135 f=-0.214 shape=(1, 9000, 1)
logits [[ 0.29184297 -2.0096593   0.43051046  0.4319014 ]]
Iteration 900 of 1000: loss=0.118 " + "l1=0.00387" + "l2=0.114 f=-0.212 shape=(1, 9000, 1)
logits [[ 0.31044713 -2.0353441   0.4586295   0.41995215]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.224 " + "l1=0.224" + "l2=0 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9138625 -2.8153174  1.6508642 -2.1628587]]
Iteration 100 of 1000: loss=0.196 " + "l1=0.178" + "l2=0.0172 f=-0.345 shape=(1, 9000, 1)
logits [[ 1.537039  -2.7448387  1.5357012 -1.7081407]]
Iteration 200 of 1000: loss=0.189 " + "l1=0.17" + "l2=0.019 f=-0.338 shape=(1, 9000, 1)
logits [[ 1.4765599 -2.6992257  1.4774449 -1.6079369]]
Iteration 300 of 1000: loss=0.183 " + "l1=0.161" + "l2=0.0218 f=-0.335 shape=(1, 9000, 1)
logits [[ 1.4126862 -2.6527448  1.4180545 -1.516536 ]]
Iteration 400 of 1000: loss=0.178 " + "l1=0.153" + "l2=0.0244 f=-0.329 shape=(1, 9000, 1)
logits [[ 1.3626009 -2.6141794  1.3624007 -1.4250038]]
Iteration 500 of 1000: loss=0.172 " + "l1=0.145" + "l2=0.0273 f=-0.321 shape=(1, 9000, 1)
logits [[ 1.3077725 -2.581792   1.3103187 -1.3209517]]
Iteration 600 of 1000: loss=0.166 " + "l1=0.136" + "l2=0.0306 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.2498806 -2.5520277  1.2589352 -1.2047037]]
Iteration 700 of 1000: loss=0.16 " + "l1=0.127" + "l2=0.0332 f=-0.302 shape=(1, 9000, 1)
logits [[ 1.2016882 -2.5224996  1.2088834 -1.097558 ]]
Iteration 800 of 1000: loss=0.154 " + "l1=0.118" + "l2=0.0357 f=-0.294 shape=(1, 9000, 1)
logits [[ 1.14196    -2.5026343   1.1681293  -0.98243934]]
Iteration 900 of 1000: loss=0.146 " + "l1=0.109" + "l2=0.0379 f=-0.283 shape=(1, 9000, 1)
logits [[ 1.0830536  -2.479975    1.1201361  -0.85352486]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.316 " + "l1=0.316" + "l2=0 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9138625 -2.8153174  1.6508642 -2.1628587]]
Iteration 100 of 1000: loss=0.263 " + "l1=0.234" + "l2=0.0285 f=-0.337 shape=(1, 9000, 1)
logits [[ 1.4476497 -2.678497   1.4518696 -1.5680919]]
Iteration 200 of 1000: loss=0.249 " + "l1=0.213" + "l2=0.0356 f=-0.329 shape=(1, 9000, 1)
logits [[ 1.3400531 -2.6041095  1.3480635 -1.4017148]]
Iteration 300 of 1000: loss=0.236 " + "l1=0.192" + "l2=0.0437 f=-0.319 shape=(1, 9000, 1)
logits [[ 1.2444928 -2.5387588  1.2476712 -1.2276425]]
Iteration 400 of 1000: loss=0.221 " + "l1=0.166" + "l2=0.0548 f=-0.303 shape=(1, 9000, 1)
logits [[ 1.1285468 -2.4698842  1.1361189 -1.0072525]]
Iteration 500 of 1000: loss=0.206 " + "l1=0.142" + "l2=0.0642 f=-0.288 shape=(1, 9000, 1)
logits [[ 1.0151712  -2.4019835   1.0306042  -0.79706943]]
Iteration 600 of 1000: loss=0.192 " + "l1=0.122" + "l2=0.0699 f=-0.278 shape=(1, 9000, 1)
logits [[ 0.925911   -2.3451695   0.9422267  -0.63473517]]
Iteration 700 of 1000: loss=0.177 " + "l1=0.102" + "l2=0.0749 f=-0.259 shape=(1, 9000, 1)
logits [[ 0.8380261 -2.2973244  0.8704428 -0.4482907]]
Iteration 800 of 1000: loss=0.159 " + "l1=0.0744" + "l2=0.0847 f=-0.234 shape=(1, 9000, 1)
logits [[ 0.72672355 -2.2444868   0.7708099  -0.18873906]]
Iteration 900 of 1000: loss=0.142 " + "l1=0.0578" + "l2=0.0845 f=-0.222 shape=(1, 9000, 1)
logits [[ 0.6691803  -2.1888103   0.68871146 -0.05771534]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.362 " + "l1=0.362" + "l2=0 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9138625 -2.8153174  1.6508642 -2.1628587]]
Iteration 100 of 1000: loss=0.293 " + "l1=0.258" + "l2=0.0359 f=-0.334 shape=(1, 9000, 1)
logits [[ 1.4019306 -2.6450737  1.4056278 -1.4966869]]
Iteration 200 of 1000: loss=0.274 " + "l1=0.227" + "l2=0.0476 f=-0.323 shape=(1, 9000, 1)
logits [[ 1.2622274 -2.5537457  1.277043  -1.2776817]]
Iteration 300 of 1000: loss=0.254 " + "l1=0.191" + "l2=0.0635 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.1048315 -2.4705997  1.1486303 -1.0037115]]
Iteration 400 of 1000: loss=0.234 " + "l1=0.158" + "l2=0.0764 f=-0.289 shape=(1, 9000, 1)
logits [[ 0.9471554 -2.3959818  1.0333378 -0.7424069]]
Iteration 500 of 1000: loss=0.216 " + "l1=0.13" + "l2=0.0861 f=-0.274 shape=(1, 9000, 1)
logits [[ 0.8128887  -2.3197985   0.9367189  -0.52550083]]
Iteration 600 of 1000: loss=0.194 " + "l1=0.0912" + "l2=0.103 f=-0.25 shape=(1, 9000, 1)
logits [[ 0.65006596 -2.247037    0.8126561  -0.21497467]]
Iteration 700 of 1000: loss=0.171 " + "l1=0.0616" + "l2=0.11 f=-0.227 shape=(1, 9000, 1)
logits [[ 0.5594675  -2.1713924   0.69848824  0.00492523]]
Iteration 800 of 1000: loss=0.152 " + "l1=0.0382" + "l2=0.113 f=-0.214 shape=(1, 9000, 1)
logits [[ 0.4740928  -2.116069    0.60932046  0.17841625]]
Iteration 900 of 1000: loss=0.131 " + "l1=0.0155" + "l2=0.115 f=-0.205 shape=(1, 9000, 1)
logits [[ 0.37893763 -2.050911    0.51331365  0.3383371 ]]
--- 295.8910930156708 seconds ---
Adv result:3
Loading record A04815
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0826 " + "l1=0.0826" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 5.784388  -2.4776373  2.6586533 -8.913672 ]]
Iteration 100 of 1000: loss=0.082 " + "l1=0.0816" + "l2=0.000394 f=-0.736 shape=(1, 9000, 1)
logits [[ 5.7218266 -2.4358177  2.6250234 -8.855627 ]]
Iteration 200 of 1000: loss=0.0818 " + "l1=0.0814" + "l2=0.000397 f=-0.736 shape=(1, 9000, 1)
logits [[ 5.7097044 -2.4284568  2.6192477 -8.843353 ]]
Iteration 300 of 1000: loss=0.0816 " + "l1=0.0811" + "l2=0.000494 f=-0.735 shape=(1, 9000, 1)
logits [[ 5.694655  -2.418558   2.6115272 -8.828835 ]]
Iteration 400 of 1000: loss=0.0815 " + "l1=0.0809" + "l2=0.000616 f=-0.735 shape=(1, 9000, 1)
logits [[ 5.6799083 -2.4085424  2.6037242 -8.814584 ]]
Iteration 500 of 1000: loss=0.0814 " + "l1=0.0806" + "l2=0.000741 f=-0.734 shape=(1, 9000, 1)
logits [[ 5.665592  -2.3990052  2.5962605 -8.800535 ]]
Iteration 600 of 1000: loss=0.0813 " + "l1=0.0804" + "l2=0.000907 f=-0.734 shape=(1, 9000, 1)
logits [[ 5.6520066 -2.3896227  2.5890255 -8.787273 ]]
Iteration 700 of 1000: loss=0.0812 " + "l1=0.0802" + "l2=0.000978 f=-0.733 shape=(1, 9000, 1)
logits [[ 5.639112  -2.3805144  2.5821736 -8.774629 ]]
Iteration 800 of 1000: loss=0.0812 " + "l1=0.08" + "l2=0.00121 f=-0.733 shape=(1, 9000, 1)
logits [[ 5.627194  -2.3716047  2.575594  -8.763076 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.826 " + "l1=0.826" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 5.784388  -2.4776373  2.6586533 -8.913672 ]]
Iteration 100 of 1000: loss=0.772 " + "l1=0.748" + "l2=0.0244 f=-0.726 shape=(1, 9000, 1)
logits [[ 5.3221817 -2.1572962  2.4354136 -8.503263 ]]
Iteration 200 of 1000: loss=0.749 " + "l1=0.714" + "l2=0.0349 f=-0.711 shape=(1, 9000, 1)
logits [[ 5.1318865 -2.0129046  2.3518913 -8.314066 ]]
Iteration 300 of 1000: loss=0.728 " + "l1=0.684" + "l2=0.0436 f=-0.698 shape=(1, 9000, 1)
logits [[ 4.963918  -1.8780241  2.2664528 -8.1433   ]]
Iteration 400 of 1000: loss=0.703 " + "l1=0.648" + "l2=0.0548 f=-0.685 shape=(1, 9000, 1)
logits [[ 4.7873073 -1.6920694  2.137722  -7.971861 ]]
Iteration 500 of 1000: loss=0.678 " + "l1=0.613" + "l2=0.0649 f=-0.671 shape=(1, 9000, 1)
logits [[ 4.588458  -1.5387148  2.0401235 -7.7732368]]
Iteration 600 of 1000: loss=0.658 " + "l1=0.587" + "l2=0.0713 f=-0.651 shape=(1, 9000, 1)
logits [[ 4.4294734 -1.4398124  1.9808604 -7.5726366]]
Iteration 700 of 1000: loss=0.644 " + "l1=0.571" + "l2=0.073 f=-0.632 shape=(1, 9000, 1)
logits [[ 4.334505  -1.3801935  1.9419882 -7.4225535]]
Iteration 800 of 1000: loss=0.634 " + "l1=0.559" + "l2=0.0751 f=-0.615 shape=(1, 9000, 1)
logits [[ 4.2597747 -1.3320047  1.9099135 -7.2993054]]
Iteration 900 of 1000: loss=0.627 " + "l1=0.55" + "l2=0.0772 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.197996  -1.2991724  1.8840828 -7.199795 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.26 " + "l1=8.26" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 5.784388  -2.4776373  2.6586533 -8.913672 ]]
Iteration 100 of 1000: loss=3.18 " + "l1=0.825" + "l2=2.35 f=-0.723 shape=(1, 9000, 1)
logits [[ 1.0651795   0.25659567  1.0819327  -5.2950826 ]]
Iteration 200 of 1000: loss=1.92 " + "l1=0" + "l2=1.92 f=-0.737 shape=(1, 9000, 1)
logits [[ 0.7091576   0.76238817  0.74731106 -5.16719   ]]
Iteration 300 of 1000: loss=1.63 " + "l1=0" + "l2=1.63 f=-0.723 shape=(1, 9000, 1)
logits [[ 0.7040186   0.72060937  0.71715564 -5.0330496 ]]
Iteration 400 of 1000: loss=1.45 " + "l1=0.00661" + "l2=1.45 f=-0.709 shape=(1, 9000, 1)
logits [[ 0.6895808  0.691888   0.6984968 -4.9177547]]
Iteration 500 of 1000: loss=1.34 " + "l1=0" + "l2=1.34 f=-0.7 shape=(1, 9000, 1)
logits [[ 0.6561224   0.6854041   0.68237484 -4.8241887 ]]
Iteration 600 of 1000: loss=1.26 " + "l1=0.00459" + "l2=1.25 f=-0.687 shape=(1, 9000, 1)
logits [[ 0.65501916  0.66661006  0.6711958  -4.739084  ]]
Iteration 700 of 1000: loss=1.19 " + "l1=0" + "l2=1.19 f=-0.678 shape=(1, 9000, 1)
logits [[ 0.6530614  0.6664456  0.6596441 -4.691724 ]]
Iteration 800 of 1000: loss=1.13 " + "l1=0" + "l2=1.13 f=-0.677 shape=(1, 9000, 1)
logits [[ 0.6106956   0.6510294   0.64714164 -4.6175814 ]]
Iteration 900 of 1000: loss=1.06 " + "l1=0.00271" + "l2=1.06 f=-0.665 shape=(1, 9000, 1)
logits [[ 0.6215919  0.6293817  0.6320914 -4.541267 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.54 " + "l1=4.54" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 5.784388  -2.4776373  2.6586533 -8.913672 ]]
Iteration 100 of 1000: loss=2.98 " + "l1=2.13" + "l2=0.845 f=-0.693 shape=(1, 9000, 1)
logits [[ 3.0086527  -0.86486214  1.6090819  -6.5256705 ]]
Iteration 200 of 1000: loss=1.94 " + "l1=0.503" + "l2=1.43 f=-0.698 shape=(1, 9000, 1)
logits [[ 1.1102705   0.19587748  1.0867411  -5.183795  ]]
Iteration 300 of 1000: loss=1.47 " + "l1=0.171" + "l2=1.3 f=-0.718 shape=(1, 9000, 1)
logits [[ 0.82723796  0.5156031   0.8148784  -5.030742  ]]
Iteration 400 of 1000: loss=1.26 " + "l1=0.0387" + "l2=1.23 f=-0.707 shape=(1, 9000, 1)
logits [[ 0.6841345  0.6272774  0.6977185 -4.8373084]]
Iteration 500 of 1000: loss=1.14 " + "l1=0.005" + "l2=1.14 f=-0.694 shape=(1, 9000, 1)
logits [[ 0.6221204   0.64113283  0.6502312  -4.687937  ]]
Iteration 600 of 1000: loss=1.03 " + "l1=0.00649" + "l2=1.02 f=-0.672 shape=(1, 9000, 1)
logits [[ 0.61702025  0.6115103   0.6233185  -4.5382648 ]]
Iteration 700 of 1000: loss=0.957 " + "l1=0.00283" + "l2=0.954 f=-0.654 shape=(1, 9000, 1)
logits [[ 0.5944121   0.59839386  0.603544   -4.4134665 ]]
Iteration 800 of 1000: loss=0.911 " + "l1=0.00417" + "l2=0.907 f=-0.638 shape=(1, 9000, 1)
logits [[ 0.57078034  0.57792664  0.5855086  -4.284771  ]]
Iteration 900 of 1000: loss=0.867 " + "l1=0" + "l2=0.867 f=-0.615 shape=(1, 9000, 1)
logits [[ 0.55116326  0.5645529   0.5635318  -4.138091  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.69 " + "l1=2.69" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 5.784388  -2.4776373  2.6586533 -8.913672 ]]
Iteration 100 of 1000: loss=2.14 " + "l1=1.86" + "l2=0.28 f=-0.676 shape=(1, 9000, 1)
logits [[ 4.236015  -1.495241   2.0247657 -7.468254 ]]
Iteration 200 of 1000: loss=1.85 " + "l1=1.41" + "l2=0.44 f=-0.673 shape=(1, 9000, 1)
logits [[ 3.3406606 -0.9984786  1.7017125 -6.7342362]]
Iteration 300 of 1000: loss=1.61 " + "l1=1.05" + "l2=0.566 f=-0.653 shape=(1, 9000, 1)
logits [[ 2.5664117 -0.6495908  1.4805053 -6.007946 ]]
Iteration 400 of 1000: loss=1.35 " + "l1=0.621" + "l2=0.726 f=-0.63 shape=(1, 9000, 1)
logits [[ 1.6764227 -0.2340288  1.2219847 -5.1824822]]
Iteration 500 of 1000: loss=1.14 " + "l1=0.342" + "l2=0.797 f=-0.646 shape=(1, 9000, 1)
logits [[ 1.0804651   0.02680266  1.0538911  -4.74667   ]]
Iteration 600 of 1000: loss=1.01 " + "l1=0.283" + "l2=0.725 f=-0.642 shape=(1, 9000, 1)
logits [[ 0.9787202   0.10808668  0.9705729  -4.6256585 ]]
Iteration 700 of 1000: loss=0.912 " + "l1=0.266" + "l2=0.646 f=-0.617 shape=(1, 9000, 1)
logits [[ 0.9336957   0.11618079  0.932185   -4.451869  ]]
Iteration 800 of 1000: loss=0.827 " + "l1=0.225" + "l2=0.602 f=-0.574 shape=(1, 9000, 1)
logits [[ 0.86731845  0.1758389   0.8557029  -4.1939883 ]]
Iteration 900 of 1000: loss=0.763 " + "l1=0.174" + "l2=0.589 f=-0.555 shape=(1, 9000, 1)
logits [[ 0.7573221   0.23541458  0.7700254  -3.980763  ]]
--- 284.25948786735535 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0313 " + "l1=0.0313" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 5.784388  -2.4776373  2.6586533 -8.913672 ]]
Iteration 100 of 1000: loss=0.0311 " + "l1=0.0309" + "l2=0.000198 f=-0.738 shape=(1, 9000, 1)
logits [[ 5.7475266 -2.4799526  2.6595788 -8.878611 ]]
Iteration 200 of 1000: loss=0.031 " + "l1=0.0309" + "l2=0.00014 f=-0.738 shape=(1, 9000, 1)
logits [[ 5.7457666 -2.4787824  2.6582894 -8.876324 ]]
Iteration 300 of 1000: loss=0.031 " + "l1=0.0308" + "l2=0.00016 f=-0.738 shape=(1, 9000, 1)
logits [[ 5.740678  -2.4783444  2.6577668 -8.87088  ]]
Iteration 400 of 1000: loss=0.031 " + "l1=0.0308" + "l2=0.000218 f=-0.738 shape=(1, 9000, 1)
logits [[ 5.734583  -2.477934   2.6572766 -8.8645315]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.313 " + "l1=0.313" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 5.784388  -2.4776373  2.6586533 -8.913672 ]]
Iteration 100 of 1000: loss=0.297 " + "l1=0.289" + "l2=0.00785 f=-0.743 shape=(1, 9000, 1)
logits [[ 5.5542364 -2.4921036  2.662254  -8.694932 ]]
Iteration 200 of 1000: loss=0.292 " + "l1=0.282" + "l2=0.0104 f=-0.744 shape=(1, 9000, 1)
logits [[ 5.469569  -2.4855657  2.6540172 -8.615378 ]]
Iteration 300 of 1000: loss=0.288 " + "l1=0.275" + "l2=0.0126 f=-0.745 shape=(1, 9000, 1)
logits [[ 5.4051576 -2.482848   2.6526127 -8.553891 ]]
Iteration 400 of 1000: loss=0.284 " + "l1=0.269" + "l2=0.0153 f=-0.746 shape=(1, 9000, 1)
logits [[ 5.3356423 -2.4757817  2.6495798 -8.4924135]]
Iteration 500 of 1000: loss=0.28 " + "l1=0.261" + "l2=0.0185 f=-0.746 shape=(1, 9000, 1)
logits [[ 5.2612867 -2.465985   2.6472483 -8.428202 ]]
Iteration 600 of 1000: loss=0.276 " + "l1=0.255" + "l2=0.0207 f=-0.746 shape=(1, 9000, 1)
logits [[ 5.199667  -2.4570398  2.6457283 -8.373062 ]]
Iteration 700 of 1000: loss=0.273 " + "l1=0.25" + "l2=0.0232 f=-0.746 shape=(1, 9000, 1)
logits [[ 5.1414375 -2.4515498  2.6460214 -8.31982  ]]
Iteration 800 of 1000: loss=0.269 " + "l1=0.243" + "l2=0.026 f=-0.744 shape=(1, 9000, 1)
logits [[ 5.0792546 -2.441865   2.6533701 -8.265783 ]]
Iteration 900 of 1000: loss=0.264 " + "l1=0.236" + "l2=0.0284 f=-0.742 shape=(1, 9000, 1)
logits [[ 5.018019  -2.430611   2.6589296 -8.215448 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.13 " + "l1=3.13" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 5.784388  -2.4776373  2.6586533 -8.913672 ]]
Iteration 100 of 1000: loss=1.41 " + "l1=0.474" + "l2=0.936 f=-0.792 shape=(1, 9000, 1)
logits [[ 3.3004057 -2.387641   2.826829  -6.909153 ]]
Iteration 200 of 1000: loss=0.833 " + "l1=0.00494" + "l2=0.828 f=-0.796 shape=(1, 9000, 1)
logits [[ 2.8000283 -2.2480075  2.795085  -6.5295963]]
Iteration 300 of 1000: loss=0.696 " + "l1=0.0149" + "l2=0.681 f=-0.79 shape=(1, 9000, 1)
logits [[ 2.7847745 -2.222354   2.7698612 -6.4911056]]
Iteration 400 of 1000: loss=0.593 " + "l1=0" + "l2=0.593 f=-0.776 shape=(1, 9000, 1)
logits [[ 2.7396495 -2.1881664  2.7400167 -6.3957725]]
Iteration 500 of 1000: loss=0.527 " + "l1=0" + "l2=0.527 f=-0.765 shape=(1, 9000, 1)
logits [[ 2.6974943 -2.1791797  2.7079532 -6.284533 ]]
Iteration 600 of 1000: loss=0.47 " + "l1=0.00797" + "l2=0.462 f=-0.753 shape=(1, 9000, 1)
logits [[ 2.6780398 -2.1737013  2.6700737 -6.1857343]]
Iteration 700 of 1000: loss=0.412 " + "l1=0.00119" + "l2=0.411 f=-0.745 shape=(1, 9000, 1)
logits [[ 2.6455638 -2.1865945  2.6443725 -6.0823307]]
Iteration 800 of 1000: loss=0.374 " + "l1=0.00598" + "l2=0.368 f=-0.738 shape=(1, 9000, 1)
logits [[ 2.6315556 -2.2082703  2.625572  -6.000379 ]]
Iteration 900 of 1000: loss=0.341 " + "l1=0" + "l2=0.341 f=-0.731 shape=(1, 9000, 1)
logits [[ 2.605847  -2.2204068  2.6113148 -5.918881 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.72 " + "l1=1.72" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 5.784388  -2.4776373  2.6586533 -8.913672 ]]
Iteration 100 of 1000: loss=1.23 " + "l1=0.974" + "l2=0.26 f=-0.766 shape=(1, 9000, 1)
logits [[ 4.4783916 -2.4950235  2.7079437 -7.75584  ]]
Iteration 200 of 1000: loss=0.97 " + "l1=0.537" + "l2=0.433 f=-0.775 shape=(1, 9000, 1)
logits [[ 3.7115383 -2.3915489  2.7347455 -7.1529727]]
Iteration 300 of 1000: loss=0.765 " + "l1=0.246" + "l2=0.518 f=-0.779 shape=(1, 9000, 1)
logits [[ 3.2298021 -2.322509   2.781826  -6.807045 ]]
Iteration 400 of 1000: loss=0.572 " + "l1=0.0166" + "l2=0.555 f=-0.77 shape=(1, 9000, 1)
logits [[ 2.7545438 -2.1841254  2.724371  -6.3735986]]
Iteration 500 of 1000: loss=0.453 " + "l1=0.00641" + "l2=0.446 f=-0.755 shape=(1, 9000, 1)
logits [[ 2.6977613 -2.1622589  2.6861045 -6.242778 ]]
Iteration 600 of 1000: loss=0.386 " + "l1=0.00622" + "l2=0.379 f=-0.744 shape=(1, 9000, 1)
logits [[ 2.6669965 -2.1628919  2.6556866 -6.134526 ]]
Iteration 700 of 1000: loss=0.341 " + "l1=0.00407" + "l2=0.336 f=-0.732 shape=(1, 9000, 1)
logits [[ 2.639049  -2.172261   2.6316514 -6.027544 ]]
Iteration 800 of 1000: loss=0.307 " + "l1=0.0022" + "l2=0.305 f=-0.723 shape=(1, 9000, 1)
logits [[ 2.6099467 -2.183712   2.6059499 -5.9249005]]
Iteration 900 of 1000: loss=0.285 " + "l1=0.00315" + "l2=0.282 f=-0.716 shape=(1, 9000, 1)
logits [[ 2.5864484 -2.1895013  2.5807261 -5.8398757]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.02 " + "l1=1.02" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 5.784388  -2.4776373  2.6586533 -8.913672 ]]
Iteration 100 of 1000: loss=0.851 " + "l1=0.762" + "l2=0.0894 f=-0.753 shape=(1, 9000, 1)
logits [[ 5.046432  -2.5162783  2.7028346 -8.245626 ]]
Iteration 200 of 1000: loss=0.775 " + "l1=0.641" + "l2=0.134 f=-0.764 shape=(1, 9000, 1)
logits [[ 4.6613584 -2.4956992  2.688056  -7.909238 ]]
Iteration 300 of 1000: loss=0.707 " + "l1=0.542" + "l2=0.165 f=-0.755 shape=(1, 9000, 1)
logits [[ 4.364366  -2.4250877  2.695154  -7.656175 ]]
Iteration 400 of 1000: loss=0.646 " + "l1=0.459" + "l2=0.187 f=-0.755 shape=(1, 9000, 1)
logits [[ 4.123628  -2.4262283  2.711946  -7.4296503]]
Iteration 500 of 1000: loss=0.601 " + "l1=0.402" + "l2=0.199 f=-0.752 shape=(1, 9000, 1)
logits [[ 3.9595854 -2.443053   2.7222323 -7.2456326]]
Iteration 600 of 1000: loss=0.554 " + "l1=0.328" + "l2=0.226 f=-0.751 shape=(1, 9000, 1)
logits [[ 3.7395937 -2.4611106  2.730581  -7.0117126]]
Iteration 700 of 1000: loss=0.511 " + "l1=0.261" + "l2=0.251 f=-0.747 shape=(1, 9000, 1)
logits [[ 3.5027893 -2.4560385  2.7008684 -6.736782 ]]
Iteration 800 of 1000: loss=0.466 " + "l1=0.198" + "l2=0.268 f=-0.742 shape=(1, 9000, 1)
logits [[ 3.2753496 -2.4297607  2.6659994 -6.479067 ]]
Iteration 900 of 1000: loss=0.417 " + "l1=0.132" + "l2=0.285 f=-0.733 shape=(1, 9000, 1)
logits [[ 3.0418732 -2.3926136  2.6347919 -6.2162623]]
--- 262.30047488212585 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.147 " + "l1=0.147" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 5.784388  -2.4776373  2.6586533 -8.913672 ]]
Iteration 100 of 1000: loss=0.146 " + "l1=0.145" + "l2=0.000642 f=-0.735 shape=(1, 9000, 1)
logits [[ 5.69787   -2.4554696  2.627278  -8.811069 ]]
Iteration 200 of 1000: loss=0.145 " + "l1=0.145" + "l2=0.000744 f=-0.735 shape=(1, 9000, 1)
logits [[ 5.6758423 -2.448063   2.618729  -8.785558 ]]
Iteration 300 of 1000: loss=0.145 " + "l1=0.144" + "l2=0.000945 f=-0.734 shape=(1, 9000, 1)
logits [[ 5.6519156 -2.4402778  2.6094208 -8.757237 ]]
Iteration 400 of 1000: loss=0.145 " + "l1=0.144" + "l2=0.00116 f=-0.733 shape=(1, 9000, 1)
logits [[ 5.6294794 -2.432776   2.6007156 -8.730343 ]]
Iteration 500 of 1000: loss=0.145 " + "l1=0.143" + "l2=0.00135 f=-0.733 shape=(1, 9000, 1)
logits [[ 5.6087737 -2.4261432  2.5928116 -8.705874 ]]
Iteration 600 of 1000: loss=0.144 " + "l1=0.143" + "l2=0.00155 f=-0.732 shape=(1, 9000, 1)
logits [[ 5.589079  -2.4197335  2.5853543 -8.682524 ]]
Iteration 700 of 1000: loss=0.144 " + "l1=0.142" + "l2=0.00173 f=-0.731 shape=(1, 9000, 1)
logits [[ 5.57275   -2.414315   2.5787864 -8.662839 ]]
Iteration 800 of 1000: loss=0.144 " + "l1=0.142" + "l2=0.00194 f=-0.731 shape=(1, 9000, 1)
logits [[ 5.558479  -2.4092696  2.5729046 -8.645649 ]]
Iteration 900 of 1000: loss=0.144 " + "l1=0.142" + "l2=0.00211 f=-0.73 shape=(1, 9000, 1)
logits [[ 5.5446477 -2.40439    2.567257  -8.628966 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.47 " + "l1=1.47" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 5.784388  -2.4776373  2.6586533 -8.913672 ]]
Iteration 100 of 1000: loss=1.37 " + "l1=1.33" + "l2=0.045 f=-0.716 shape=(1, 9000, 1)
logits [[ 5.1267476 -2.2946522  2.4336095 -8.129594 ]]
Iteration 200 of 1000: loss=1.32 " + "l1=1.24" + "l2=0.0782 f=-0.689 shape=(1, 9000, 1)
logits [[ 4.744894  -2.150909   2.3044016 -7.6524763]]
Iteration 300 of 1000: loss=1.26 " + "l1=1.16" + "l2=0.109 f=-0.659 shape=(1, 9000, 1)
logits [[ 4.378243  -2.006027   2.1663752 -7.1727233]]
Iteration 400 of 1000: loss=1.22 " + "l1=1.09" + "l2=0.131 f=-0.629 shape=(1, 9000, 1)
logits [[ 4.101688  -1.8975092  2.050397  -6.770638 ]]
Iteration 500 of 1000: loss=1.17 " + "l1=1.02" + "l2=0.155 f=-0.606 shape=(1, 9000, 1)
logits [[ 3.8093107 -1.804979   1.934862  -6.362631 ]]
Iteration 600 of 1000: loss=1.13 " + "l1=0.956" + "l2=0.173 f=-0.58 shape=(1, 9000, 1)
logits [[ 3.5562315 -1.7378386  1.8637412 -6.001342 ]]
Iteration 700 of 1000: loss=1.09 " + "l1=0.89" + "l2=0.195 f=-0.559 shape=(1, 9000, 1)
logits [[ 3.2800794 -1.6980842  1.802608  -5.6193843]]
Iteration 800 of 1000: loss=1.04 " + "l1=0.823" + "l2=0.218 f=-0.53 shape=(1, 9000, 1)
logits [[ 3.0179553 -1.6629535  1.7353129 -5.211189 ]]
Iteration 900 of 1000: loss=0.989 " + "l1=0.742" + "l2=0.247 f=-0.502 shape=(1, 9000, 1)
logits [[ 2.70961   -1.6518716  1.6428256 -4.7072277]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=14.7 " + "l1=14.7" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 5.784388  -2.4776373  2.6586533 -8.913672 ]]
Iteration 100 of 1000: loss=5.9 " + "l1=2.47" + "l2=3.43 f=-0.393 shape=(1, 9000, 1)
logits [[ 0.66271514 -1.1183304   0.6749742  -1.7916973 ]]
Iteration 200 of 1000: loss=3.52 " + "l1=0" + "l2=3.52 f=-0.27 shape=(1, 9000, 1)
logits [[-0.19780913 -1.047958    0.07429623  0.09240049]]
Iteration 300 of 1000: loss=2.65 " + "l1=0" + "l2=2.65 f=-0.28 shape=(1, 9000, 1)
logits [[-0.18524681 -1.1022874   0.07418974  0.0915371 ]]
Iteration 400 of 1000: loss=2.15 " + "l1=0" + "l2=2.15 f=-0.289 shape=(1, 9000, 1)
logits [[-0.17498787 -1.1752648   0.09450855  0.09876979]]
Iteration 500 of 1000: loss=1.8 " + "l1=0" + "l2=1.8 f=-0.298 shape=(1, 9000, 1)
logits [[-0.19248891 -1.206701    0.09067163  0.11822411]]
Iteration 600 of 1000: loss=1.53 " + "l1=0" + "l2=1.53 f=-0.299 shape=(1, 9000, 1)
logits [[-0.18409824 -1.2051469   0.08685981  0.10474975]]
Iteration 700 of 1000: loss=1.34 " + "l1=0" + "l2=1.34 f=-0.302 shape=(1, 9000, 1)
logits [[-0.1758644  -1.2135779   0.08462615  0.09860744]]
Iteration 800 of 1000: loss=1.2 " + "l1=0" + "l2=1.2 f=-0.299 shape=(1, 9000, 1)
logits [[-0.1777129  -1.2243764   0.08733647  0.11868561]]
Iteration 900 of 1000: loss=1.08 " + "l1=0.00398" + "l2=1.08 f=-0.292 shape=(1, 9000, 1)
logits [[-0.1352801  -1.2368906   0.10462069  0.10063762]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=8.08 " + "l1=8.08" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 5.784388  -2.4776373  2.6586533 -8.913672 ]]
Iteration 100 of 1000: loss=4.86 " + "l1=3.15" + "l2=1.71 f=-0.542 shape=(1, 9000, 1)
logits [[ 1.8459096 -1.4725752  1.3459816 -3.8861616]]
Iteration 200 of 1000: loss=3.3 " + "l1=1.41" + "l2=1.89 f=-0.395 shape=(1, 9000, 1)
logits [[ 0.7237157 -1.1877929  0.7200394 -1.8353128]]
Iteration 300 of 1000: loss=2.39 " + "l1=0.551" + "l2=1.84 f=-0.313 shape=(1, 9000, 1)
logits [[ 0.20343557 -1.1483843   0.34678867 -0.6551778 ]]
Iteration 400 of 1000: loss=1.68 " + "l1=0.0104" + "l2=1.67 f=-0.281 shape=(1, 9000, 1)
logits [[-0.21812907 -1.1061527   0.10963133  0.09076897]]
Iteration 500 of 1000: loss=1.27 " + "l1=0.011" + "l2=1.26 f=-0.278 shape=(1, 9000, 1)
logits [[-0.19673914 -1.1829934   0.14439657  0.12438925]]
Iteration 600 of 1000: loss=1.09 " + "l1=0.00618" + "l2=1.08 f=-0.269 shape=(1, 9000, 1)
logits [[-0.16317602 -1.2097234   0.15495779  0.14371967]]
Iteration 700 of 1000: loss=0.966 " + "l1=0" + "l2=0.966 f=-0.257 shape=(1, 9000, 1)
logits [[-0.14601378 -1.2401301   0.17395635  0.18289798]]
Iteration 800 of 1000: loss=0.87 " + "l1=0.000343" + "l2=0.87 f=-0.25 shape=(1, 9000, 1)
logits [[-0.11155635 -1.2549059   0.18364008  0.18301696]]
Iteration 900 of 1000: loss=0.792 " + "l1=0" + "l2=0.792 f=-0.243 shape=(1, 9000, 1)
logits [[-0.08486931 -1.247244    0.1750768   0.18513924]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.78 " + "l1=4.78" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 5.784388  -2.4776373  2.6586533 -8.913672 ]]
Iteration 100 of 1000: loss=3.61 " + "l1=2.96" + "l2=0.653 f=-0.636 shape=(1, 9000, 1)
logits [[ 3.2858262 -1.8252711  1.8105034 -5.8141623]]
Iteration 200 of 1000: loss=2.94 " + "l1=1.96" + "l2=0.988 f=-0.526 shape=(1, 9000, 1)
logits [[ 1.9867897 -1.4090837  1.348938  -4.0296946]]
Iteration 300 of 1000: loss=2.25 " + "l1=1.06" + "l2=1.19 f=-0.421 shape=(1, 9000, 1)
logits [[ 0.953653   -1.2752951   0.94750935 -2.3114407 ]]
Iteration 400 of 1000: loss=1.77 " + "l1=0.711" + "l2=1.06 f=-0.366 shape=(1, 9000, 1)
logits [[ 0.669863   -1.2938664   0.67443925 -1.5129417 ]]
Iteration 500 of 1000: loss=1.45 " + "l1=0.467" + "l2=0.988 f=-0.327 shape=(1, 9000, 1)
logits [[ 0.43557206 -1.2955489   0.49426976 -0.94122714]]
Iteration 600 of 1000: loss=1.13 " + "l1=0.193" + "l2=0.938 f=-0.268 shape=(1, 9000, 1)
logits [[ 0.14097916 -1.2512412   0.31697538 -0.27677694]]
Iteration 700 of 1000: loss=0.885 " + "l1=0.031" + "l2=0.854 f=-0.24 shape=(1, 9000, 1)
logits [[-0.04599826 -1.2371559   0.20826589  0.11292913]]
Iteration 800 of 1000: loss=0.742 " + "l1=0" + "l2=0.742 f=-0.238 shape=(1, 9000, 1)
logits [[-0.06676231 -1.2163022   0.16120733  0.16797984]]
Iteration 900 of 1000: loss=0.669 " + "l1=0.00204" + "l2=0.667 f=-0.243 shape=(1, 9000, 1)
logits [[-0.05785496 -1.2026123   0.14719523  0.14091668]]
--- 301.91847681999207 seconds ---
Adv result:3
Loading record A04816
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0636 " + "l1=0.0636" + "l2=0 f=-0.592 shape=(1, 9000, 1)
logits [[ 3.5351233 -2.821678   2.256902  -5.3370676]]
Iteration 100 of 1000: loss=0.0631 " + "l1=0.0628" + "l2=0.000285 f=-0.589 shape=(1, 9000, 1)
logits [[ 3.4973795 -2.7846162  2.2260349 -5.2955613]]
Iteration 200 of 1000: loss=0.063 " + "l1=0.0627" + "l2=0.000275 f=-0.589 shape=(1, 9000, 1)
logits [[ 3.4910288 -2.7785199  2.220765  -5.287373 ]]
Iteration 300 of 1000: loss=0.0628 " + "l1=0.0625" + "l2=0.000325 f=-0.588 shape=(1, 9000, 1)
logits [[ 3.4822278 -2.770046   2.213627  -5.2764883]]
Iteration 400 of 1000: loss=0.0628 " + "l1=0.0623" + "l2=0.000412 f=-0.587 shape=(1, 9000, 1)
logits [[ 3.473117  -2.7615535  2.2063391 -5.265281 ]]
Iteration 500 of 1000: loss=0.0627 " + "l1=0.0622" + "l2=0.000543 f=-0.586 shape=(1, 9000, 1)
logits [[ 3.4642575 -2.7533512  2.199306  -5.254294 ]]
Iteration 600 of 1000: loss=0.0627 " + "l1=0.062" + "l2=0.000641 f=-0.585 shape=(1, 9000, 1)
logits [[ 3.4555144 -2.7455027  2.1925046 -5.243628 ]]
Iteration 700 of 1000: loss=0.0625 " + "l1=0.0618" + "l2=0.00068 f=-0.585 shape=(1, 9000, 1)
logits [[ 3.4469175 -2.7380624  2.186126  -5.2330136]]
Iteration 800 of 1000: loss=0.0625 " + "l1=0.0617" + "l2=0.000824 f=-0.584 shape=(1, 9000, 1)
logits [[ 3.4384942 -2.7310126  2.1800942 -5.2227592]]
Iteration 900 of 1000: loss=0.0625 " + "l1=0.0615" + "l2=0.000943 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.4305222 -2.7243154  2.1743686 -5.2131257]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.636 " + "l1=0.636" + "l2=0 f=-0.592 shape=(1, 9000, 1)
logits [[ 3.5351233 -2.821678   2.256902  -5.3370676]]
Iteration 100 of 1000: loss=0.597 " + "l1=0.578" + "l2=0.0189 f=-0.568 shape=(1, 9000, 1)
logits [[ 3.2438965 -2.539411   2.0427227 -5.018536 ]]
Iteration 200 of 1000: loss=0.574 " + "l1=0.532" + "l2=0.0414 f=-0.551 shape=(1, 9000, 1)
logits [[ 3.012552  -2.3111959  1.9067476 -4.8131843]]
Iteration 300 of 1000: loss=0.556 " + "l1=0.506" + "l2=0.0505 f=-0.542 shape=(1, 9000, 1)
logits [[ 2.8603632 -2.1967492  1.8075117 -4.6385136]]
Iteration 400 of 1000: loss=0.543 " + "l1=0.486" + "l2=0.0567 f=-0.533 shape=(1, 9000, 1)
logits [[ 2.7445922 -2.1137817  1.7288003 -4.492338 ]]
Iteration 500 of 1000: loss=0.53 " + "l1=0.466" + "l2=0.0633 f=-0.524 shape=(1, 9000, 1)
logits [[ 2.6286592 -2.033391   1.6537346 -4.344144 ]]
Iteration 600 of 1000: loss=0.517 " + "l1=0.449" + "l2=0.0685 f=-0.514 shape=(1, 9000, 1)
logits [[ 2.5243409 -1.9626167  1.5909144 -4.209626 ]]
Iteration 700 of 1000: loss=0.506 " + "l1=0.432" + "l2=0.0734 f=-0.504 shape=(1, 9000, 1)
logits [[ 2.4240248 -1.9003646  1.5462042 -4.0845666]]
Iteration 800 of 1000: loss=0.496 " + "l1=0.42" + "l2=0.0764 f=-0.494 shape=(1, 9000, 1)
logits [[ 2.3433325 -1.8518038  1.5096359 -3.9773195]]
Iteration 900 of 1000: loss=0.487 " + "l1=0.408" + "l2=0.0785 f=-0.486 shape=(1, 9000, 1)
logits [[ 2.2770455 -1.8069277  1.4778764 -3.892397 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.36 " + "l1=6.36" + "l2=0 f=-0.592 shape=(1, 9000, 1)
logits [[ 3.5351233 -2.821678   2.256902  -5.3370676]]
Iteration 100 of 1000: loss=1.91 " + "l1=0" + "l2=1.91 f=-0.486 shape=(1, 9000, 1)
logits [[ 0.0310235   0.03904206  0.03682771 -2.049235  ]]
Iteration 200 of 1000: loss=1.2 " + "l1=0" + "l2=1.2 f=-0.457 shape=(1, 9000, 1)
logits [[ 0.05995676  0.0604502   0.05032878 -1.9993253 ]]
Iteration 300 of 1000: loss=0.997 " + "l1=0" + "l2=0.997 f=-0.436 shape=(1, 9000, 1)
logits [[ 0.05024907  0.06099878  0.0383157  -1.8955183 ]]
Iteration 400 of 1000: loss=0.887 " + "l1=0" + "l2=0.887 f=-0.435 shape=(1, 9000, 1)
logits [[ 0.02142243  0.03809062  0.02553248 -1.8241631 ]]
Iteration 500 of 1000: loss=0.821 " + "l1=0.0151" + "l2=0.806 f=-0.422 shape=(1, 9000, 1)
logits [[ 0.04462391  0.02955736  0.01111151 -1.7716231 ]]
Iteration 600 of 1000: loss=0.764 " + "l1=0" + "l2=0.764 f=-0.417 shape=(1, 9000, 1)
logits [[ 0.01411428  0.0557318  -0.01799989 -1.7214173 ]]
Iteration 700 of 1000: loss=0.728 " + "l1=0.0212" + "l2=0.707 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.05663517  0.03548364 -0.00997824 -1.7193366 ]]
Iteration 800 of 1000: loss=0.681 " + "l1=0" + "l2=0.681 f=-0.41 shape=(1, 9000, 1)
logits [[ 0.0183232   0.04142888 -0.01000009 -1.6898986 ]]
Iteration 900 of 1000: loss=0.652 " + "l1=0" + "l2=0.652 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.01548001  0.03940283 -0.00454423 -1.672096  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.5 " + "l1=3.5" + "l2=0 f=-0.592 shape=(1, 9000, 1)
logits [[ 3.5351233 -2.821678   2.256902  -5.3370676]]
Iteration 100 of 1000: loss=1.91 " + "l1=1" + "l2=0.914 f=-0.542 shape=(1, 9000, 1)
logits [[ 0.92347866 -0.8942856   0.9105383  -3.105817  ]]
Iteration 200 of 1000: loss=1.33 " + "l1=0.357" + "l2=0.975 f=-0.468 shape=(1, 9000, 1)
logits [[ 0.36898085 -0.280917    0.3551977  -2.3143082 ]]
Iteration 300 of 1000: loss=0.992 " + "l1=0.0187" + "l2=0.974 f=-0.445 shape=(1, 9000, 1)
logits [[ 0.03880352  0.01105026  0.04505238 -1.8754921 ]]
Iteration 400 of 1000: loss=0.823 " + "l1=0.00248" + "l2=0.821 f=-0.422 shape=(1, 9000, 1)
logits [[ 0.01541846  0.01091623 -0.00904424 -1.7049538 ]]
Iteration 500 of 1000: loss=0.75 " + "l1=0.00782" + "l2=0.742 f=-0.413 shape=(1, 9000, 1)
logits [[ 0.00362921 -0.0105889  -0.00703283 -1.6361133 ]]
Iteration 600 of 1000: loss=0.704 " + "l1=0" + "l2=0.704 f=-0.4 shape=(1, 9000, 1)
logits [[-0.02761885 -0.0048399  -0.01946341 -1.5497049 ]]
Iteration 700 of 1000: loss=0.653 " + "l1=0" + "l2=0.653 f=-0.394 shape=(1, 9000, 1)
logits [[-0.01982505 -0.0056165  -0.01369925 -1.5379533 ]]
Iteration 800 of 1000: loss=0.61 " + "l1=0" + "l2=0.61 f=-0.389 shape=(1, 9000, 1)
logits [[-0.0022099   0.00161947 -0.01669616 -1.5377527 ]]
Iteration 900 of 1000: loss=0.583 " + "l1=0.00178" + "l2=0.581 f=-0.39 shape=(1, 9000, 1)
logits [[-2.0030437e-02 -3.3671614e-03 -1.2999726e-04 -1.5367246e+00]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.07 " + "l1=2.07" + "l2=0 f=-0.592 shape=(1, 9000, 1)
logits [[ 3.5351233 -2.821678   2.256902  -5.3370676]]
Iteration 100 of 1000: loss=1.53 " + "l1=1.23" + "l2=0.302 f=-0.52 shape=(1, 9000, 1)
logits [[ 2.155902  -1.6233472  1.3752927 -3.986758 ]]
Iteration 200 of 1000: loss=1.26 " + "l1=0.808" + "l2=0.451 f=-0.514 shape=(1, 9000, 1)
logits [[ 1.3631456 -1.1237091  1.0057044 -3.3014276]]
Iteration 300 of 1000: loss=1.09 " + "l1=0.553" + "l2=0.54 f=-0.492 shape=(1, 9000, 1)
logits [[ 0.8672338 -0.8350662  0.786956  -2.7890043]]
Iteration 400 of 1000: loss=0.972 " + "l1=0.409" + "l2=0.564 f=-0.47 shape=(1, 9000, 1)
logits [[ 0.61639476 -0.64181983  0.60072297 -2.4557927 ]]
Iteration 500 of 1000: loss=0.881 " + "l1=0.296" + "l2=0.585 f=-0.447 shape=(1, 9000, 1)
logits [[ 0.44249457 -0.46742636  0.44117847 -2.205188  ]]
Iteration 600 of 1000: loss=0.808 " + "l1=0.208" + "l2=0.6 f=-0.439 shape=(1, 9000, 1)
logits [[ 0.3098394  -0.33093807  0.3079486  -2.0438464 ]]
Iteration 700 of 1000: loss=0.73 " + "l1=0.0951" + "l2=0.635 f=-0.42 shape=(1, 9000, 1)
logits [[ 0.1662174  -0.12626307  0.14166738 -1.8623238 ]]
Iteration 800 of 1000: loss=0.637 " + "l1=0.00339" + "l2=0.633 f=-0.41 shape=(1, 9000, 1)
logits [[ 0.04646866  0.03602755  0.04575802 -1.768635  ]]
Iteration 900 of 1000: loss=0.588 " + "l1=0.00297" + "l2=0.585 f=-0.401 shape=(1, 9000, 1)
logits [[ 0.05116844  0.0420398   0.04610458 -1.7420831 ]]
--- 303.8890919685364 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0128 " + "l1=0.0128" + "l2=0 f=-0.592 shape=(1, 9000, 1)
logits [[ 3.5351233 -2.821678   2.256902  -5.3370676]]
Iteration 100 of 1000: loss=0.0126 " + "l1=0.0124" + "l2=0.000178 f=-0.593 shape=(1, 9000, 1)
logits [[ 3.512367  -2.8338292  2.2717602 -5.322088 ]]
Iteration 200 of 1000: loss=0.0125 " + "l1=0.0124" + "l2=0.000149 f=-0.593 shape=(1, 9000, 1)
logits [[ 3.5114975 -2.835359   2.2735016 -5.322147 ]]
Iteration 300 of 1000: loss=0.0125 " + "l1=0.0123" + "l2=0.000181 f=-0.593 shape=(1, 9000, 1)
logits [[ 3.508784  -2.8379261  2.2766676 -5.320938 ]]
Iteration 400 of 1000: loss=0.0125 " + "l1=0.0123" + "l2=0.000229 f=-0.594 shape=(1, 9000, 1)
logits [[ 3.505657  -2.840533   2.2798529 -5.319413 ]]
Iteration 500 of 1000: loss=0.0125 " + "l1=0.0122" + "l2=0.000285 f=-0.594 shape=(1, 9000, 1)
logits [[ 3.50253   -2.842907   2.2828493 -5.3178606]]
Iteration 600 of 1000: loss=0.0125 " + "l1=0.0121" + "l2=0.000377 f=-0.594 shape=(1, 9000, 1)
logits [[ 3.4995372 -2.8450217  2.2855346 -5.3164325]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.128 " + "l1=0.128" + "l2=0 f=-0.592 shape=(1, 9000, 1)
logits [[ 3.5351233 -2.821678   2.256902  -5.3370676]]
Iteration 100 of 1000: loss=0.111 " + "l1=0.103" + "l2=0.00811 f=-0.601 shape=(1, 9000, 1)
logits [[ 3.4002333 -2.9192758  2.3722775 -5.2574553]]
Iteration 200 of 1000: loss=0.104 " + "l1=0.0915" + "l2=0.012 f=-0.605 shape=(1, 9000, 1)
logits [[ 3.3422246 -2.9658797  2.4268284 -5.22333  ]]
Iteration 300 of 1000: loss=0.0972 " + "l1=0.0819" + "l2=0.0153 f=-0.608 shape=(1, 9000, 1)
logits [[ 3.2824342 -2.9978666  2.4638557 -5.179713 ]]
Iteration 400 of 1000: loss=0.092 " + "l1=0.0737" + "l2=0.0182 f=-0.61 shape=(1, 9000, 1)
logits [[ 3.2248216 -3.018088   2.487349  -5.1348395]]
Iteration 500 of 1000: loss=0.0871 " + "l1=0.0665" + "l2=0.0206 f=-0.612 shape=(1, 9000, 1)
logits [[ 3.169196  -3.0278482  2.5041018 -5.0917454]]
Iteration 600 of 1000: loss=0.0823 " + "l1=0.06" + "l2=0.0223 f=-0.614 shape=(1, 9000, 1)
logits [[ 3.1165497 -3.035165   2.5169756 -5.053193 ]]
Iteration 700 of 1000: loss=0.0775 " + "l1=0.0535" + "l2=0.024 f=-0.616 shape=(1, 9000, 1)
logits [[ 3.0598285 -3.04067    2.525048  -5.009926 ]]
Iteration 800 of 1000: loss=0.0725 " + "l1=0.0468" + "l2=0.0258 f=-0.618 shape=(1, 9000, 1)
logits [[ 3.0001419 -3.0443337  2.5325892 -4.9620667]]
Iteration 900 of 1000: loss=0.068 " + "l1=0.0408" + "l2=0.0272 f=-0.62 shape=(1, 9000, 1)
logits [[ 2.945072  -3.0431163  2.5374525 -4.9184213]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.28 " + "l1=1.28" + "l2=0 f=-0.592 shape=(1, 9000, 1)
logits [[ 3.5351233 -2.821678   2.256902  -5.3370676]]
Iteration 100 of 1000: loss=0.206 " + "l1=0.00105" + "l2=0.205 f=-0.601 shape=(1, 9000, 1)
logits [[ 2.6133013 -3.0128956  2.612249  -4.6148353]]
Iteration 200 of 1000: loss=0.149 " + "l1=0" + "l2=0.149 f=-0.601 shape=(1, 9000, 1)
logits [[ 2.6093657 -3.0159082  2.6176522 -4.613508 ]]
Iteration 300 of 1000: loss=0.12 " + "l1=0" + "l2=0.12 f=-0.606 shape=(1, 9000, 1)
logits [[ 2.618382  -3.0334947  2.6227062 -4.6308537]]
Iteration 400 of 1000: loss=0.1 " + "l1=0" + "l2=0.1 f=-0.61 shape=(1, 9000, 1)
logits [[ 2.6261227 -3.048441   2.626838  -4.644913 ]]
Iteration 500 of 1000: loss=0.087 " + "l1=0" + "l2=0.087 f=-0.616 shape=(1, 9000, 1)
logits [[ 2.6214397 -3.0632029  2.6328218 -4.653219 ]]
Iteration 600 of 1000: loss=0.0733 " + "l1=0" + "l2=0.0733 f=-0.62 shape=(1, 9000, 1)
logits [[ 2.6205707 -3.067438   2.6265416 -4.661589 ]]
Iteration 700 of 1000: loss=0.063 " + "l1=0" + "l2=0.063 f=-0.622 shape=(1, 9000, 1)
logits [[ 2.6182432 -3.072173   2.6245384 -4.658079 ]]
Iteration 800 of 1000: loss=0.0551 " + "l1=0" + "l2=0.0551 f=-0.624 shape=(1, 9000, 1)
logits [[ 2.6148355 -3.0749042  2.6240737 -4.661054 ]]
Iteration 900 of 1000: loss=0.0496 " + "l1=0" + "l2=0.0496 f=-0.626 shape=(1, 9000, 1)
logits [[ 2.6102548 -3.0763998  2.6242332 -4.6627903]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.703 " + "l1=0.703" + "l2=0 f=-0.592 shape=(1, 9000, 1)
logits [[ 3.5351233 -2.821678   2.256902  -5.3370676]]
Iteration 100 of 1000: loss=0.216 " + "l1=0" + "l2=0.216 f=-0.605 shape=(1, 9000, 1)
logits [[ 2.6369925 -3.0448785  2.6385407 -4.650707 ]]
Iteration 200 of 1000: loss=0.14 " + "l1=0" + "l2=0.14 f=-0.604 shape=(1, 9000, 1)
logits [[ 2.6267447 -3.0326715  2.6277394 -4.639803 ]]
Iteration 300 of 1000: loss=0.111 " + "l1=0.00147" + "l2=0.11 f=-0.61 shape=(1, 9000, 1)
logits [[ 2.6410477 -3.060359   2.6383767 -4.6581883]]
Iteration 400 of 1000: loss=0.0907 " + "l1=0" + "l2=0.0907 f=-0.616 shape=(1, 9000, 1)
logits [[ 2.6430957 -3.0808823  2.6436472 -4.670687 ]]
Iteration 500 of 1000: loss=0.0764 " + "l1=0" + "l2=0.0764 f=-0.623 shape=(1, 9000, 1)
logits [[ 2.6289415 -3.0921304  2.6393855 -4.6675243]]
Iteration 600 of 1000: loss=0.0622 " + "l1=0" + "l2=0.0622 f=-0.626 shape=(1, 9000, 1)
logits [[ 2.6334796 -3.1031175  2.6358953 -4.672253 ]]
Iteration 700 of 1000: loss=0.0526 " + "l1=0" + "l2=0.0526 f=-0.63 shape=(1, 9000, 1)
logits [[ 2.6330392 -3.107004   2.6359363 -4.680244 ]]
Iteration 800 of 1000: loss=0.0467 " + "l1=0" + "l2=0.0467 f=-0.632 shape=(1, 9000, 1)
logits [[ 2.63132   -3.1063204  2.6366868 -4.687732 ]]
Iteration 900 of 1000: loss=0.0425 " + "l1=0" + "l2=0.0425 f=-0.633 shape=(1, 9000, 1)
logits [[ 2.6277893 -3.1043134  2.6351264 -4.6907544]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.415 " + "l1=0.415" + "l2=0 f=-0.592 shape=(1, 9000, 1)
logits [[ 3.5351233 -2.821678   2.256902  -5.3370676]]
Iteration 100 of 1000: loss=0.237 " + "l1=0.151" + "l2=0.0867 f=-0.615 shape=(1, 9000, 1)
logits [[ 3.0335417 -3.0852802  2.5701716 -4.978779 ]]
Iteration 200 of 1000: loss=0.163 " + "l1=0.0392" + "l2=0.124 f=-0.615 shape=(1, 9000, 1)
logits [[ 2.761917  -3.1184893  2.6414318 -4.74577  ]]
Iteration 300 of 1000: loss=0.114 " + "l1=0.0021" + "l2=0.112 f=-0.612 shape=(1, 9000, 1)
logits [[ 2.6638265 -3.1011472  2.657358  -4.666279 ]]
Iteration 400 of 1000: loss=0.0907 " + "l1=0.00301" + "l2=0.0877 f=-0.618 shape=(1, 9000, 1)
logits [[ 2.6588345 -3.1033628  2.6495643 -4.6771736]]
Iteration 500 of 1000: loss=0.0717 " + "l1=0.000702" + "l2=0.071 f=-0.626 shape=(1, 9000, 1)
logits [[ 2.6494234 -3.1183627  2.6472623 -4.68063  ]]
Iteration 600 of 1000: loss=0.0578 " + "l1=0.000783" + "l2=0.0571 f=-0.63 shape=(1, 9000, 1)
logits [[ 2.651814  -3.1338017  2.6494045 -4.6880317]]
Iteration 700 of 1000: loss=0.0489 " + "l1=0" + "l2=0.0489 f=-0.633 shape=(1, 9000, 1)
logits [[ 2.6451771 -3.1345851  2.649782  -4.691883 ]]
Iteration 800 of 1000: loss=0.0434 " + "l1=0" + "l2=0.0434 f=-0.635 shape=(1, 9000, 1)
logits [[ 2.639759  -3.1263742  2.6411235 -4.6928587]]
Iteration 900 of 1000: loss=0.0403 " + "l1=0" + "l2=0.0403 f=-0.635 shape=(1, 9000, 1)
logits [[ 2.6300666 -3.1174657  2.6352346 -4.6875205]]
--- 283.12274289131165 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0887 " + "l1=0.0887" + "l2=0 f=-0.592 shape=(1, 9000, 1)
logits [[ 3.5351233 -2.821678   2.256902  -5.3370676]]
Iteration 100 of 1000: loss=0.0879 " + "l1=0.0875" + "l2=0.000421 f=-0.588 shape=(1, 9000, 1)
logits [[ 3.48364   -2.8004985  2.2329154 -5.267086 ]]
Iteration 200 of 1000: loss=0.0877 " + "l1=0.0872" + "l2=0.000457 f=-0.587 shape=(1, 9000, 1)
logits [[ 3.471611  -2.7950532  2.2264698 -5.250007 ]]
Iteration 300 of 1000: loss=0.0875 " + "l1=0.0869" + "l2=0.000583 f=-0.585 shape=(1, 9000, 1)
logits [[ 3.4572637 -2.7881045  2.2187293 -5.2294884]]
Iteration 400 of 1000: loss=0.0873 " + "l1=0.0865" + "l2=0.000723 f=-0.584 shape=(1, 9000, 1)
logits [[ 3.4435945 -2.781067   2.211003  -5.2099586]]
Iteration 500 of 1000: loss=0.087 " + "l1=0.0862" + "l2=0.00085 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.4298303 -2.7738287  2.203069  -5.1901937]]
Iteration 600 of 1000: loss=0.0869 " + "l1=0.0859" + "l2=0.00103 f=-0.581 shape=(1, 9000, 1)
logits [[ 3.4157436 -2.766438   2.1953597 -5.1704206]]
Iteration 700 of 1000: loss=0.0868 " + "l1=0.0855" + "l2=0.00124 f=-0.58 shape=(1, 9000, 1)
logits [[ 3.4019852 -2.759442   2.188021  -5.1509886]]
Iteration 800 of 1000: loss=0.0866 " + "l1=0.0852" + "l2=0.0014 f=-0.579 shape=(1, 9000, 1)
logits [[ 3.3888106 -2.7525873  2.1809406 -5.132534 ]]
Iteration 900 of 1000: loss=0.0865 " + "l1=0.0849" + "l2=0.00159 f=-0.578 shape=(1, 9000, 1)
logits [[ 3.3759613 -2.7457745  2.173944  -5.114509 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.887 " + "l1=0.887" + "l2=0 f=-0.592 shape=(1, 9000, 1)
logits [[ 3.5351233 -2.821678   2.256902  -5.3370676]]
Iteration 100 of 1000: loss=0.81 " + "l1=0.774" + "l2=0.0366 f=-0.552 shape=(1, 9000, 1)
logits [[ 3.0540893 -2.6308444  2.051814  -4.6842875]]
Iteration 200 of 1000: loss=0.764 " + "l1=0.704" + "l2=0.0597 f=-0.526 shape=(1, 9000, 1)
logits [[ 2.7640402 -2.5083077  1.914887  -4.2748456]]
Iteration 300 of 1000: loss=0.725 " + "l1=0.642" + "l2=0.0831 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.5119367 -2.3840318  1.7859242 -3.9050796]]
Iteration 400 of 1000: loss=0.695 " + "l1=0.599" + "l2=0.0962 f=-0.478 shape=(1, 9000, 1)
logits [[ 2.339173  -2.2948005  1.6905533 -3.6464508]]
Iteration 500 of 1000: loss=0.667 " + "l1=0.556" + "l2=0.111 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.1709504 -2.1985092  1.5842983 -3.388891 ]]
Iteration 600 of 1000: loss=0.644 " + "l1=0.524" + "l2=0.12 f=-0.442 shape=(1, 9000, 1)
logits [[ 2.0437388 -2.1221776  1.5111263 -3.198846 ]]
Iteration 700 of 1000: loss=0.624 " + "l1=0.498" + "l2=0.126 f=-0.43 shape=(1, 9000, 1)
logits [[ 1.9347748 -2.0628548  1.4539628 -3.0456917]]
Iteration 800 of 1000: loss=0.605 " + "l1=0.472" + "l2=0.133 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.8226426 -2.0180502  1.4093134 -2.8986425]]
Iteration 900 of 1000: loss=0.589 " + "l1=0.451" + "l2=0.137 f=-0.414 shape=(1, 9000, 1)
logits [[ 1.7299969 -1.980167   1.3797333 -2.784348 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.87 " + "l1=8.87" + "l2=0 f=-0.592 shape=(1, 9000, 1)
logits [[ 3.5351233 -2.821678   2.256902  -5.3370676]]
Iteration 100 of 1000: loss=2.53 " + "l1=0.0132" + "l2=2.52 f=-0.246 shape=(1, 9000, 1)
logits [[-0.07157196 -0.7991137  -0.04976953 -0.06297434]]
Iteration 200 of 1000: loss=1.59 " + "l1=0.0109" + "l2=1.58 f=-0.263 shape=(1, 9000, 1)
logits [[-0.09386579 -0.7487027  -0.10318457 -0.1047445 ]]
Iteration 300 of 1000: loss=1.3 " + "l1=0.0296" + "l2=1.27 f=-0.268 shape=(1, 9000, 1)
logits [[-0.1086349  -0.72002465 -0.1065211  -0.13610658]]
Iteration 400 of 1000: loss=1.14 " + "l1=0" + "l2=1.14 f=-0.271 shape=(1, 9000, 1)
logits [[-0.14933285 -0.6841845  -0.1325204  -0.11715475]]
Iteration 500 of 1000: loss=1.05 " + "l1=0" + "l2=1.05 f=-0.272 shape=(1, 9000, 1)
logits [[-0.15066881 -0.67809814 -0.13730802 -0.11993372]]
Iteration 600 of 1000: loss=0.98 " + "l1=0" + "l2=0.98 f=-0.266 shape=(1, 9000, 1)
logits [[-0.14116992 -0.66994953 -0.14593092 -0.10811039]]
Iteration 700 of 1000: loss=0.92 " + "l1=0" + "l2=0.92 f=-0.267 shape=(1, 9000, 1)
logits [[-0.13818172 -0.6747824  -0.13151442 -0.12471264]]
Iteration 800 of 1000: loss=0.877 " + "l1=0.00643" + "l2=0.871 f=-0.262 shape=(1, 9000, 1)
logits [[-0.1174558  -0.68372005 -0.12283039 -0.12388652]]
Iteration 900 of 1000: loss=0.842 " + "l1=0.00897" + "l2=0.833 f=-0.257 shape=(1, 9000, 1)
logits [[-0.10580185 -0.67813146 -0.12799764 -0.11476783]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.88 " + "l1=4.88" + "l2=0 f=-0.592 shape=(1, 9000, 1)
logits [[ 3.5351233 -2.821678   2.256902  -5.3370676]]
Iteration 100 of 1000: loss=2.5 " + "l1=1.39" + "l2=1.12 f=-0.349 shape=(1, 9000, 1)
logits [[ 0.87366974 -1.5037184   0.8788809  -1.6434274 ]]
Iteration 200 of 1000: loss=1.61 " + "l1=0.261" + "l2=1.35 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.11676659 -0.90416163  0.11690973 -0.35700083]]
Iteration 300 of 1000: loss=1.19 " + "l1=0" + "l2=1.19 f=-0.26 shape=(1, 9000, 1)
logits [[-0.1034444  -0.7645034  -0.09657094 -0.07649323]]
Iteration 400 of 1000: loss=1.03 " + "l1=0.0186" + "l2=1.01 f=-0.263 shape=(1, 9000, 1)
logits [[-0.08048049 -0.7641363  -0.09193785 -0.11430831]]
Iteration 500 of 1000: loss=0.921 " + "l1=0.013" + "l2=0.908 f=-0.26 shape=(1, 9000, 1)
logits [[-0.09666923 -0.75285023 -0.08268863 -0.10629351]]
Iteration 600 of 1000: loss=0.845 " + "l1=0.00193" + "l2=0.843 f=-0.255 shape=(1, 9000, 1)
logits [[-0.09264277 -0.73705727 -0.09286527 -0.09615888]]
Iteration 700 of 1000: loss=0.792 " + "l1=0.00109" + "l2=0.791 f=-0.252 shape=(1, 9000, 1)
logits [[-0.1008671  -0.72118497 -0.09268755 -0.09466361]]
Iteration 800 of 1000: loss=0.741 " + "l1=0.00385" + "l2=0.737 f=-0.247 shape=(1, 9000, 1)
logits [[-0.08880693 -0.7136608  -0.08839128 -0.09539823]]
Iteration 900 of 1000: loss=0.688 " + "l1=0.002" + "l2=0.686 f=-0.235 shape=(1, 9000, 1)
logits [[-0.06880283 -0.7322409  -0.06694065 -0.07057498]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.88 " + "l1=2.88" + "l2=0 f=-0.592 shape=(1, 9000, 1)
logits [[ 3.5351233 -2.821678   2.256902  -5.3370676]]
Iteration 100 of 1000: loss=1.93 " + "l1=1.41" + "l2=0.525 f=-0.423 shape=(1, 9000, 1)
logits [[ 1.563735  -1.9055159  1.4158728 -2.7676895]]
Iteration 200 of 1000: loss=1.55 " + "l1=0.952" + "l2=0.594 f=-0.366 shape=(1, 9000, 1)
logits [[ 1.0114071 -1.5787121  1.0160803 -1.9118856]]
Iteration 300 of 1000: loss=1.27 " + "l1=0.585" + "l2=0.685 f=-0.319 shape=(1, 9000, 1)
logits [[ 0.60389525 -1.2890598   0.60540026 -1.1956335 ]]
Iteration 400 of 1000: loss=1.08 " + "l1=0.336" + "l2=0.748 f=-0.279 shape=(1, 9000, 1)
logits [[ 0.33221495 -1.0887175   0.337434   -0.6967469 ]]
Iteration 500 of 1000: loss=0.941 " + "l1=0.147" + "l2=0.794 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.1241878  -0.94736373  0.12044917 -0.32691985]]
Iteration 600 of 1000: loss=0.835 " + "l1=0.0156" + "l2=0.819 f=-0.246 shape=(1, 9000, 1)
logits [[-0.03809953 -0.8245512  -0.03658749 -0.0844835 ]]
Iteration 700 of 1000: loss=0.738 " + "l1=0.00222" + "l2=0.736 f=-0.238 shape=(1, 9000, 1)
logits [[-0.06019954 -0.7727561  -0.05557325 -0.06241416]]
Iteration 800 of 1000: loss=0.662 " + "l1=0.00753" + "l2=0.655 f=-0.225 shape=(1, 9000, 1)
logits [[-0.02734009 -0.7913567  -0.02882339 -0.05049588]]
Iteration 900 of 1000: loss=0.596 " + "l1=0.000254" + "l2=0.595 f=-0.211 shape=(1, 9000, 1)
logits [[-0.01389751 -0.81406724 -0.00685687 -0.00763983]]
--- 304.22767424583435 seconds ---
Adv result:3
Loading record A04861
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0793 " + "l1=0.0793" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.7071657 -3.2203882  3.3897612 -6.8028827]]
Iteration 100 of 1000: loss=0.0791 " + "l1=0.0789" + "l2=0.000176 f=-0.48 shape=(1, 9000, 1)
logits [[ 4.6845384 -3.2061672  3.3771567 -6.775762 ]]
Iteration 200 of 1000: loss=0.079 " + "l1=0.0789" + "l2=0.000148 f=-0.48 shape=(1, 9000, 1)
logits [[ 4.6835485 -3.2047777  3.3759074 -6.7743416]]
Iteration 300 of 1000: loss=0.079 " + "l1=0.0788" + "l2=0.000161 f=-0.48 shape=(1, 9000, 1)
logits [[ 4.6805925 -3.2027116  3.3740096 -6.7705956]]
Iteration 400 of 1000: loss=0.079 " + "l1=0.0788" + "l2=0.000222 f=-0.479 shape=(1, 9000, 1)
logits [[ 4.677269  -3.200552   3.3720279 -6.766393 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.793 " + "l1=0.793" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.7071657 -3.2203882  3.3897612 -6.8028827]]
Iteration 100 of 1000: loss=0.776 " + "l1=0.767" + "l2=0.00894 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.552309  -3.120561   3.2987843 -6.6232424]]
Iteration 200 of 1000: loss=0.771 " + "l1=0.76" + "l2=0.0113 f=-0.47 shape=(1, 9000, 1)
logits [[ 4.5034084 -3.0919108  3.2701309 -6.5616846]]
Iteration 300 of 1000: loss=0.766 " + "l1=0.752" + "l2=0.0138 f=-0.467 shape=(1, 9000, 1)
logits [[ 4.4514685 -3.0657735  3.2427819 -6.496558 ]]
Iteration 400 of 1000: loss=0.761 " + "l1=0.745" + "l2=0.016 f=-0.464 shape=(1, 9000, 1)
logits [[ 4.404704  -3.0415118  3.2186677 -6.438461 ]]
Iteration 500 of 1000: loss=0.756 " + "l1=0.738" + "l2=0.0183 f=-0.461 shape=(1, 9000, 1)
logits [[ 4.3599877 -3.018722   3.1954858 -6.3813753]]
Iteration 600 of 1000: loss=0.752 " + "l1=0.731" + "l2=0.0208 f=-0.458 shape=(1, 9000, 1)
logits [[ 4.3161445 -2.993361   3.1707265 -6.3262186]]
Iteration 700 of 1000: loss=0.747 " + "l1=0.724" + "l2=0.0235 f=-0.455 shape=(1, 9000, 1)
logits [[ 4.2709846 -2.968793   3.1474342 -6.270573 ]]
Iteration 800 of 1000: loss=0.744 " + "l1=0.718" + "l2=0.0255 f=-0.453 shape=(1, 9000, 1)
logits [[ 4.232457  -2.9483037  3.1281338 -6.22376  ]]
Iteration 900 of 1000: loss=0.74 " + "l1=0.712" + "l2=0.028 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.1903987 -2.929695   3.1085796 -6.172203 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.93 " + "l1=7.93" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.7071657 -3.2203882  3.3897612 -6.8028827]]
Iteration 100 of 1000: loss=6.27 " + "l1=5.27" + "l2=1 f=-0.425 shape=(1, 9000, 1)
logits [[ 2.8509173 -2.4167082  2.4869397 -4.6208773]]
Iteration 200 of 1000: loss=5.57 " + "l1=4.28" + "l2=1.29 f=-0.382 shape=(1, 9000, 1)
logits [[ 2.1358383 -2.1398947  2.1307142 -3.6541114]]
Iteration 300 of 1000: loss=5.24 " + "l1=3.97" + "l2=1.26 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.9764023 -1.9963309  1.9671551 -3.3577802]]
Iteration 400 of 1000: loss=5.02 " + "l1=3.76" + "l2=1.26 f=-0.334 shape=(1, 9000, 1)
logits [[ 1.8518717 -1.9058943  1.8543041 -3.1358073]]
Iteration 500 of 1000: loss=4.81 " + "l1=3.5" + "l2=1.31 f=-0.32 shape=(1, 9000, 1)
logits [[ 1.6937121 -1.8076769  1.6790648 -2.8451796]]
Iteration 600 of 1000: loss=4.54 " + "l1=3.09" + "l2=1.45 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.4289637 -1.6574185  1.4295679 -2.3729613]]
Iteration 700 of 1000: loss=4.16 " + "l1=2.62" + "l2=1.55 f=-0.277 shape=(1, 9000, 1)
logits [[ 1.143725  -1.4713535  1.1439048 -1.9252455]]
Iteration 800 of 1000: loss=3.58 " + "l1=1.89" + "l2=1.68 f=-0.25 shape=(1, 9000, 1)
logits [[ 0.76971394 -1.1252654   0.764995   -1.4108118 ]]
Iteration 900 of 1000: loss=3.19 " + "l1=1.49" + "l2=1.7 f=-0.239 shape=(1, 9000, 1)
logits [[ 0.56440234 -0.9182336   0.56840456 -1.1693864 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=79.3 " + "l1=79.3" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.7071657 -3.2203882  3.3897612 -6.8028827]]
Iteration 100 of 1000: loss=19.3 " + "l1=3.89" + "l2=15.4 f=-0.132 shape=(1, 9000, 1)
logits [[ 0.22953022 -0.11537933  0.27359474 -0.9144059 ]]
Iteration 200 of 1000: loss=10.2 " + "l1=0" + "l2=10.2 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.0648604   0.09330982  0.0792951  -1.2298347 ]]
Iteration 300 of 1000: loss=8.96 " + "l1=0" + "l2=8.96 f=-0.276 shape=(1, 9000, 1)
logits [[ 0.04190531  0.09634139  0.08191879 -1.323982  ]]
Iteration 400 of 1000: loss=8.09 " + "l1=0" + "l2=8.09 f=-0.284 shape=(1, 9000, 1)
logits [[ 0.08041923  0.08619753  0.0853387  -1.3891464 ]]
Iteration 500 of 1000: loss=7.53 " + "l1=0" + "l2=7.53 f=-0.29 shape=(1, 9000, 1)
logits [[ 0.04167771  0.08841408  0.08237286 -1.3712351 ]]
Iteration 600 of 1000: loss=7.35 " + "l1=0" + "l2=7.35 f=-0.297 shape=(1, 9000, 1)
logits [[-0.02146499  0.14302553  0.0248728  -1.3330646 ]]
Iteration 700 of 1000: loss=6.81 " + "l1=0" + "l2=6.81 f=-0.292 shape=(1, 9000, 1)
logits [[ 0.04819954  0.10319462  0.08025651 -1.4014992 ]]
Iteration 800 of 1000: loss=6.57 " + "l1=0" + "l2=6.57 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.07720637  0.12349265  0.06244606 -1.4159161 ]]
Iteration 900 of 1000: loss=6.36 " + "l1=0" + "l2=6.36 f=-0.284 shape=(1, 9000, 1)
logits [[ 0.0375362   0.13485989  0.06651094 -1.3765298 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=43.6 " + "l1=43.6" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.7071657 -3.2203882  3.3897612 -6.8028827]]
Iteration 100 of 1000: loss=18.2 " + "l1=10.1" + "l2=8.07 f=-0.187 shape=(1, 9000, 1)
logits [[ 1.032198   -0.80311847  1.0421191  -2.018174  ]]
Iteration 200 of 1000: loss=9.17 " + "l1=0" + "l2=9.17 f=-0.208 shape=(1, 9000, 1)
logits [[ 0.03842923  0.09259867  0.0918358  -1.0532508 ]]
Iteration 300 of 1000: loss=7.82 " + "l1=0" + "l2=7.82 f=-0.238 shape=(1, 9000, 1)
logits [[ 0.07639209  0.10111172  0.08801442 -1.215668  ]]
Iteration 400 of 1000: loss=7.26 " + "l1=0" + "l2=7.26 f=-0.249 shape=(1, 9000, 1)
logits [[ 0.05019546  0.09149265  0.06353372 -1.1996541 ]]
Iteration 500 of 1000: loss=6.9 " + "l1=0.147" + "l2=6.75 f=-0.246 shape=(1, 9000, 1)
logits [[ 0.05654999  0.0631269   0.08980558 -1.1941264 ]]
Iteration 600 of 1000: loss=6.37 " + "l1=0.0125" + "l2=6.36 f=-0.246 shape=(1, 9000, 1)
logits [[ 0.03626543  0.0630956   0.06536444 -1.1479902 ]]
Iteration 700 of 1000: loss=6.09 " + "l1=0" + "l2=6.09 f=-0.243 shape=(1, 9000, 1)
logits [[-0.01445659  0.08244366  0.0314354  -1.0733259 ]]
Iteration 800 of 1000: loss=5.64 " + "l1=0" + "l2=5.64 f=-0.233 shape=(1, 9000, 1)
logits [[ 0.04025192  0.05916564  0.04160716 -1.0724788 ]]
Iteration 900 of 1000: loss=5.41 " + "l1=0.058" + "l2=5.35 f=-0.223 shape=(1, 9000, 1)
logits [[ 0.05850712  0.04796977  0.03848069 -1.0376453 ]]
--- 269.8139045238495 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0132 " + "l1=0.0132" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.7071657 -3.2203882  3.3897612 -6.8028827]]
Iteration 100 of 1000: loss=0.0131 " + "l1=0.013" + "l2=0.000101 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.6932263 -3.2227364  3.391123  -6.789862 ]]
Iteration 200 of 1000: loss=0.0131 " + "l1=0.013" + "l2=6.42e-05 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.6940584 -3.2224152  3.3910384 -6.7907763]]
Iteration 300 of 1000: loss=0.0131 " + "l1=0.013" + "l2=7.5e-05 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.6930857 -3.2225237  3.3913069 -6.7902083]]
Iteration 400 of 1000: loss=0.0131 " + "l1=0.013" + "l2=0.000112 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.691804  -3.2226923  3.3916059 -6.7893553]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.132 " + "l1=0.132" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.7071657 -3.2203882  3.3897612 -6.8028827]]
Iteration 100 of 1000: loss=0.126 " + "l1=0.122" + "l2=0.00363 f=-0.486 shape=(1, 9000, 1)
logits [[ 4.623034  -3.2361238  3.4007282 -6.730247 ]]
Iteration 200 of 1000: loss=0.124 " + "l1=0.119" + "l2=0.00451 f=-0.486 shape=(1, 9000, 1)
logits [[ 4.5990634 -3.2402291  3.4044712 -6.7084885]]
Iteration 300 of 1000: loss=0.122 " + "l1=0.117" + "l2=0.00533 f=-0.487 shape=(1, 9000, 1)
logits [[ 4.5765624 -3.243425   3.4073112 -6.688459 ]]
Iteration 400 of 1000: loss=0.121 " + "l1=0.114" + "l2=0.00635 f=-0.488 shape=(1, 9000, 1)
logits [[ 4.5522356 -3.2464533  3.409778  -6.6672606]]
Iteration 500 of 1000: loss=0.119 " + "l1=0.112" + "l2=0.00723 f=-0.489 shape=(1, 9000, 1)
logits [[ 4.52853   -3.2470253  3.4099514 -6.6457396]]
Iteration 600 of 1000: loss=0.118 " + "l1=0.11" + "l2=0.00803 f=-0.489 shape=(1, 9000, 1)
logits [[ 4.506495  -3.2475603  3.4102771 -6.62576  ]]
Iteration 700 of 1000: loss=0.116 " + "l1=0.108" + "l2=0.00875 f=-0.49 shape=(1, 9000, 1)
logits [[ 4.485753  -3.2460122  3.4096813 -6.608219 ]]
Iteration 800 of 1000: loss=0.115 " + "l1=0.106" + "l2=0.00946 f=-0.49 shape=(1, 9000, 1)
logits [[ 4.469014  -3.2445803  3.4103115 -6.5949707]]
Iteration 900 of 1000: loss=0.114 " + "l1=0.104" + "l2=0.0101 f=-0.49 shape=(1, 9000, 1)
logits [[ 4.4505224 -3.2424004  3.410244  -6.578933 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.32 " + "l1=1.32" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.7071657 -3.2203882  3.3897612 -6.8028827]]
Iteration 100 of 1000: loss=0.601 " + "l1=0.132" + "l2=0.469 f=-0.537 shape=(1, 9000, 1)
logits [[ 3.5114028 -3.3932204  3.3796136 -5.646048 ]]
Iteration 200 of 1000: loss=0.393 " + "l1=0.0119" + "l2=0.381 f=-0.545 shape=(1, 9000, 1)
logits [[ 3.3922276 -3.4410796  3.3803608 -5.5106225]]
Iteration 300 of 1000: loss=0.328 " + "l1=0" + "l2=0.328 f=-0.542 shape=(1, 9000, 1)
logits [[ 3.3653119 -3.442939   3.3663042 -5.4569635]]
Iteration 400 of 1000: loss=0.287 " + "l1=0" + "l2=0.287 f=-0.537 shape=(1, 9000, 1)
logits [[ 3.3534405 -3.43538    3.3550665 -5.4228806]]
Iteration 500 of 1000: loss=0.259 " + "l1=0.00214" + "l2=0.257 f=-0.533 shape=(1, 9000, 1)
logits [[ 3.3328896 -3.4236574  3.3307545 -5.3736906]]
Iteration 600 of 1000: loss=0.234 " + "l1=0.0018" + "l2=0.232 f=-0.531 shape=(1, 9000, 1)
logits [[ 3.303928  -3.4040334  3.3021233 -5.3246927]]
Iteration 700 of 1000: loss=0.215 " + "l1=0.00597" + "l2=0.209 f=-0.529 shape=(1, 9000, 1)
logits [[ 3.2802322 -3.3848248  3.2742631 -5.286622 ]]
Iteration 800 of 1000: loss=0.193 " + "l1=0" + "l2=0.193 f=-0.526 shape=(1, 9000, 1)
logits [[ 3.2464337 -3.3663704  3.2498326 -5.232793 ]]
Iteration 900 of 1000: loss=0.179 " + "l1=0" + "l2=0.179 f=-0.522 shape=(1, 9000, 1)
logits [[ 3.229988  -3.3486454  3.2324836 -5.202768 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.725 " + "l1=0.725" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.7071657 -3.2203882  3.3897612 -6.8028827]]
Iteration 100 of 1000: loss=0.534 " + "l1=0.418" + "l2=0.116 f=-0.502 shape=(1, 9000, 1)
logits [[ 4.178255  -3.2953386  3.4181757 -6.3107066]]
Iteration 200 of 1000: loss=0.438 " + "l1=0.253" + "l2=0.185 f=-0.517 shape=(1, 9000, 1)
logits [[ 3.8550584 -3.3534048  3.3956933 -5.9658813]]
Iteration 300 of 1000: loss=0.357 " + "l1=0.12" + "l2=0.236 f=-0.526 shape=(1, 9000, 1)
logits [[ 3.588236  -3.3947015  3.3697548 -5.668065 ]]
Iteration 400 of 1000: loss=0.293 " + "l1=0.0234" + "l2=0.269 f=-0.532 shape=(1, 9000, 1)
logits [[ 3.3862998 -3.4088132  3.3436782 -5.44985  ]]
Iteration 500 of 1000: loss=0.245 " + "l1=0.00234" + "l2=0.243 f=-0.533 shape=(1, 9000, 1)
logits [[ 3.3206177 -3.4028306  3.316366  -5.367432 ]]
Iteration 600 of 1000: loss=0.218 " + "l1=0.00225" + "l2=0.215 f=-0.53 shape=(1, 9000, 1)
logits [[ 3.295085  -3.3825092  3.2909906 -5.3218865]]
Iteration 700 of 1000: loss=0.198 " + "l1=0" + "l2=0.198 f=-0.528 shape=(1, 9000, 1)
logits [[ 3.2627766 -3.3613963  3.2639234 -5.2775846]]
Iteration 800 of 1000: loss=0.182 " + "l1=0.002" + "l2=0.18 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.246766  -3.3366349  3.2431345 -5.254989 ]]
Iteration 900 of 1000: loss=0.17 " + "l1=0" + "l2=0.17 f=-0.524 shape=(1, 9000, 1)
logits [[ 3.2286747 -3.3203554  3.230736  -5.235328 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.428 " + "l1=0.428" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.7071657 -3.2203882  3.3897612 -6.8028827]]
Iteration 100 of 1000: loss=0.366 " + "l1=0.329" + "l2=0.0369 f=-0.493 shape=(1, 9000, 1)
logits [[ 4.432097  -3.2678552  3.4190533 -6.554093 ]]
Iteration 200 of 1000: loss=0.338 " + "l1=0.283" + "l2=0.0552 f=-0.497 shape=(1, 9000, 1)
logits [[ 4.2856293 -3.2801912  3.4163783 -6.408849 ]]
Iteration 300 of 1000: loss=0.314 " + "l1=0.242" + "l2=0.0722 f=-0.502 shape=(1, 9000, 1)
logits [[ 4.156059  -3.295061   3.412189  -6.2799315]]
Iteration 400 of 1000: loss=0.292 " + "l1=0.204" + "l2=0.0883 f=-0.508 shape=(1, 9000, 1)
logits [[ 4.0282936 -3.312561   3.4002883 -6.1463466]]
Iteration 500 of 1000: loss=0.272 " + "l1=0.17" + "l2=0.102 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.9161377 -3.3305902  3.3935425 -6.0215545]]
Iteration 600 of 1000: loss=0.257 " + "l1=0.141" + "l2=0.115 f=-0.515 shape=(1, 9000, 1)
logits [[ 3.8088334 -3.3355381  3.3740752 -5.907001 ]]
Iteration 700 of 1000: loss=0.244 " + "l1=0.116" + "l2=0.128 f=-0.517 shape=(1, 9000, 1)
logits [[ 3.709733  -3.3342667  3.3514767 -5.7935605]]
Iteration 800 of 1000: loss=0.232 " + "l1=0.0923" + "l2=0.14 f=-0.518 shape=(1, 9000, 1)
logits [[ 3.6186488 -3.3341277  3.3347507 -5.692984 ]]
Iteration 900 of 1000: loss=0.217 " + "l1=0.0667" + "l2=0.151 f=-0.518 shape=(1, 9000, 1)
logits [[ 3.5311368 -3.3274033  3.3258593 -5.601526 ]]
--- 267.349102973938 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.115 " + "l1=0.115" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.7071657 -3.2203882  3.3897612 -6.8028827]]
Iteration 100 of 1000: loss=0.115 " + "l1=0.114" + "l2=0.000375 f=-0.479 shape=(1, 9000, 1)
logits [[ 4.672143  -3.2119083  3.373477  -6.7493157]]
Iteration 200 of 1000: loss=0.114 " + "l1=0.114" + "l2=0.000357 f=-0.479 shape=(1, 9000, 1)
logits [[ 4.668059  -3.2101336  3.3710926 -6.7431574]]
Iteration 300 of 1000: loss=0.114 " + "l1=0.114" + "l2=0.000435 f=-0.478 shape=(1, 9000, 1)
logits [[ 4.6621485 -3.2081032  3.3680575 -6.733915 ]]
Iteration 400 of 1000: loss=0.114 " + "l1=0.114" + "l2=0.000501 f=-0.477 shape=(1, 9000, 1)
logits [[ 4.6560726 -3.2060583  3.3649898 -6.72426  ]]
Iteration 500 of 1000: loss=0.114 " + "l1=0.114" + "l2=0.000607 f=-0.477 shape=(1, 9000, 1)
logits [[ 4.6501083 -3.2039077  3.3619387 -6.71472  ]]
Iteration 600 of 1000: loss=0.114 " + "l1=0.114" + "l2=0.000718 f=-0.476 shape=(1, 9000, 1)
logits [[ 4.6444573 -3.201856   3.3591263 -6.705653 ]]
Iteration 700 of 1000: loss=0.114 " + "l1=0.113" + "l2=0.000829 f=-0.475 shape=(1, 9000, 1)
logits [[ 4.6388927 -3.1997445  3.3563888 -6.696792 ]]
Iteration 800 of 1000: loss=0.114 " + "l1=0.113" + "l2=0.00101 f=-0.475 shape=(1, 9000, 1)
logits [[ 4.6336193 -3.1974952  3.353642  -6.688334 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.15 " + "l1=1.15" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.7071657 -3.2203882  3.3897612 -6.8028827]]
Iteration 100 of 1000: loss=1.1 " + "l1=1.08" + "l2=0.0259 f=-0.464 shape=(1, 9000, 1)
logits [[ 4.4149437 -3.1654348  3.2623267 -6.3679647]]
Iteration 200 of 1000: loss=1.08 " + "l1=1.05" + "l2=0.0376 f=-0.457 shape=(1, 9000, 1)
logits [[ 4.2870197 -3.146241   3.210842  -6.178185 ]]
Iteration 300 of 1000: loss=1.06 " + "l1=1.01" + "l2=0.0502 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.154291  -3.1325614  3.1584227 -5.9852104]]
Iteration 400 of 1000: loss=1.04 " + "l1=0.98" + "l2=0.0641 f=-0.446 shape=(1, 9000, 1)
logits [[ 4.016801  -3.1213284  3.1066802 -5.7864003]]
Iteration 500 of 1000: loss=1.02 " + "l1=0.946" + "l2=0.0772 f=-0.438 shape=(1, 9000, 1)
logits [[ 3.8807907 -3.107687   3.050863  -5.5745406]]
Iteration 600 of 1000: loss=1 " + "l1=0.907" + "l2=0.093 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.7295592 -3.096932   2.9879715 -5.3382998]]
Iteration 700 of 1000: loss=0.976 " + "l1=0.866" + "l2=0.11 f=-0.424 shape=(1, 9000, 1)
logits [[ 3.5641394 -3.0771544  2.9123728 -5.094096 ]]
Iteration 800 of 1000: loss=0.953 " + "l1=0.828" + "l2=0.126 f=-0.42 shape=(1, 9000, 1)
logits [[ 3.4061918 -3.0593271  2.8435807 -4.8700027]]
Iteration 900 of 1000: loss=0.938 " + "l1=0.805" + "l2=0.133 f=-0.416 shape=(1, 9000, 1)
logits [[ 3.3132012 -3.042332   2.8027885 -4.737515 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.5 " + "l1=11.5" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.7071657 -3.2203882  3.3897612 -6.8028827]]
Iteration 100 of 1000: loss=6.69 " + "l1=4.59" + "l2=2.09 f=-0.23 shape=(1, 9000, 1)
logits [[ 2.1020222 -2.7423983  2.157543  -2.4372613]]
Iteration 200 of 1000: loss=5.32 " + "l1=2.58" + "l2=2.73 f=-0.159 shape=(1, 9000, 1)
logits [[ 1.2333329 -2.343825   1.5285535 -1.0526217]]
Iteration 300 of 1000: loss=4.35 " + "l1=1.4" + "l2=2.94 f=-0.124 shape=(1, 9000, 1)
logits [[ 0.80979407 -2.1251383   1.1097938  -0.29190144]]
Iteration 400 of 1000: loss=3.48 " + "l1=0.421" + "l2=3.06 f=-0.0892 shape=(1, 9000, 1)
logits [[ 0.40951815 -1.8514024   0.75312585  0.33195266]]
Iteration 500 of 1000: loss=2.72 " + "l1=0.0629" + "l2=2.66 f=-0.068 shape=(1, 9000, 1)
logits [[ 0.31711826 -1.7163572   0.5951463   0.53221357]]
Iteration 600 of 1000: loss=2.2 " + "l1=0.0444" + "l2=2.16 f=-0.0759 shape=(1, 9000, 1)
logits [[ 0.32247117 -1.6605748   0.5394314   0.49505866]]
Iteration 700 of 1000: loss=1.92 " + "l1=0" + "l2=1.92 f=-0.0823 shape=(1, 9000, 1)
logits [[ 0.2938639  -1.6267713   0.49315768  0.5104805 ]]
Iteration 800 of 1000: loss=1.75 " + "l1=0" + "l2=1.75 f=-0.0862 shape=(1, 9000, 1)
logits [[ 0.28788206 -1.6027128   0.4765987   0.4934825 ]]
Iteration 900 of 1000: loss=1.63 " + "l1=0" + "l2=1.63 f=-0.0906 shape=(1, 9000, 1)
logits [[ 0.27562705 -1.5739578   0.46189737  0.47388843]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.33 " + "l1=6.33" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.7071657 -3.2203882  3.3897612 -6.8028827]]
Iteration 100 of 1000: loss=4.51 " + "l1=3.42" + "l2=1.09 f=-0.36 shape=(1, 9000, 1)
logits [[ 2.5993712 -3.0228803  2.595432  -3.6118426]]
Iteration 200 of 1000: loss=3.95 " + "l1=2.9" + "l2=1.05 f=-0.299 shape=(1, 9000, 1)
logits [[ 2.3255665 -2.9006999  2.3291774 -2.9486024]]
Iteration 300 of 1000: loss=3.54 " + "l1=2.49" + "l2=1.05 f=-0.257 shape=(1, 9000, 1)
logits [[ 2.0937796 -2.7890043  2.1003854 -2.4323246]]
Iteration 400 of 1000: loss=3.11 " + "l1=1.97" + "l2=1.14 f=-0.224 shape=(1, 9000, 1)
logits [[ 1.757516  -2.6530385  1.7903179 -1.7913228]]
Iteration 500 of 1000: loss=2.68 " + "l1=1.43" + "l2=1.24 f=-0.197 shape=(1, 9000, 1)
logits [[ 1.3204308 -2.450504   1.4738791 -1.1318566]]
Iteration 600 of 1000: loss=2.31 " + "l1=1.02" + "l2=1.29 f=-0.173 shape=(1, 9000, 1)
logits [[ 0.9724294 -2.2521129  1.2215444 -0.6326107]]
Iteration 700 of 1000: loss=2.01 " + "l1=0.657" + "l2=1.36 f=-0.156 shape=(1, 9000, 1)
logits [[ 0.6669338  -2.04478     0.97509116 -0.21938154]]
Iteration 800 of 1000: loss=1.81 " + "l1=0.385" + "l2=1.42 f=-0.15 shape=(1, 9000, 1)
logits [[ 0.44098964 -1.9475738   0.80402917  0.10362426]]
Iteration 900 of 1000: loss=1.63 " + "l1=0.147" + "l2=1.48 f=-0.146 shape=(1, 9000, 1)
logits [[ 0.2759267  -1.8035643   0.6057695   0.33926326]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.74 " + "l1=3.74" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.7071657 -3.2203882  3.3897612 -6.8028827]]
Iteration 100 of 1000: loss=3.12 " + "l1=2.71" + "l2=0.407 f=-0.431 shape=(1, 9000, 1)
logits [[ 3.4168234 -3.0950072  2.8722851 -4.9194155]]
Iteration 200 of 1000: loss=2.78 " + "l1=2.21" + "l2=0.566 f=-0.395 shape=(1, 9000, 1)
logits [[ 2.8190434 -3.0595372  2.656783  -3.996165 ]]
Iteration 300 of 1000: loss=2.54 " + "l1=1.95" + "l2=0.589 f=-0.354 shape=(1, 9000, 1)
logits [[ 2.5363603 -3.0161276  2.5373137 -3.4750602]]
Iteration 400 of 1000: loss=2.37 " + "l1=1.8" + "l2=0.57 f=-0.316 shape=(1, 9000, 1)
logits [[ 2.4110665 -2.9606373  2.4108844 -3.125218 ]]
Iteration 500 of 1000: loss=2.19 " + "l1=1.61" + "l2=0.582 f=-0.296 shape=(1, 9000, 1)
logits [[ 2.217635  -2.8927145  2.2197685 -2.7273583]]
Iteration 600 of 1000: loss=2 " + "l1=1.39" + "l2=0.609 f=-0.282 shape=(1, 9000, 1)
logits [[ 1.967429  -2.7703905  1.9736303 -2.2995536]]
Iteration 700 of 1000: loss=1.87 " + "l1=1.24" + "l2=0.634 f=-0.277 shape=(1, 9000, 1)
logits [[ 1.7503783 -2.6658292  1.8071121 -1.9989669]]
Iteration 800 of 1000: loss=1.77 " + "l1=1.14" + "l2=0.634 f=-0.278 shape=(1, 9000, 1)
logits [[ 1.614093  -2.5779512  1.6798102 -1.8267955]]
Iteration 900 of 1000: loss=1.65 " + "l1=1.02" + "l2=0.632 f=-0.276 shape=(1, 9000, 1)
logits [[ 1.4535348 -2.4938462  1.538918  -1.6017189]]
--- 288.6313669681549 seconds ---
Adv result:3
Loading record A04897
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0691 " + "l1=0.0691" + "l2=0 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.9168942 -2.990501   3.2904139 -6.0914288]]
Iteration 100 of 1000: loss=0.0684 " + "l1=0.0678" + "l2=0.000512 f=-0.466 shape=(1, 9000, 1)
logits [[ 3.8606286 -2.9235046  3.2432003 -6.0458517]]
Iteration 200 of 1000: loss=0.0682 " + "l1=0.0676" + "l2=0.000595 f=-0.466 shape=(1, 9000, 1)
logits [[ 3.851188  -2.911206   3.2357132 -6.038252 ]]
Iteration 300 of 1000: loss=0.0681 " + "l1=0.0674" + "l2=0.000705 f=-0.465 shape=(1, 9000, 1)
logits [[ 3.8422694 -2.9013736  3.2301965 -6.0316257]]
Iteration 400 of 1000: loss=0.0681 " + "l1=0.0673" + "l2=0.000824 f=-0.465 shape=(1, 9000, 1)
logits [[ 3.8346386 -2.8934772  3.2258866 -6.026224 ]]
Iteration 500 of 1000: loss=0.0681 " + "l1=0.0672" + "l2=0.000905 f=-0.465 shape=(1, 9000, 1)
logits [[ 3.828778 -2.887195  3.222356 -6.022063]]
Iteration 600 of 1000: loss=0.0681 " + "l1=0.067" + "l2=0.00109 f=-0.464 shape=(1, 9000, 1)
logits [[ 3.8236823 -2.8810718  3.21881   -6.018549 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.691 " + "l1=0.691" + "l2=0 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.9168942 -2.990501   3.2904139 -6.0914288]]
Iteration 100 of 1000: loss=0.62 " + "l1=0.578" + "l2=0.0419 f=-0.452 shape=(1, 9000, 1)
logits [[ 3.4062688 -2.3710244  2.8666067 -5.711112 ]]
Iteration 200 of 1000: loss=0.603 " + "l1=0.55" + "l2=0.0529 f=-0.454 shape=(1, 9000, 1)
logits [[ 3.248265  -2.2541106  2.7933555 -5.6036105]]
Iteration 300 of 1000: loss=0.595 " + "l1=0.537" + "l2=0.0579 f=-0.455 shape=(1, 9000, 1)
logits [[ 3.1603856 -2.2074094  2.7657173 -5.5376663]]
Iteration 400 of 1000: loss=0.589 " + "l1=0.526" + "l2=0.0629 f=-0.456 shape=(1, 9000, 1)
logits [[ 3.1028624 -2.160771   2.7289112 -5.4942155]]
Iteration 500 of 1000: loss=0.585 " + "l1=0.518" + "l2=0.0668 f=-0.457 shape=(1, 9000, 1)
logits [[ 3.0560913 -2.1265202  2.701316  -5.457805 ]]
Iteration 600 of 1000: loss=0.582 " + "l1=0.512" + "l2=0.0704 f=-0.458 shape=(1, 9000, 1)
logits [[ 3.0209465 -2.0949378  2.6741302 -5.4319496]]
Iteration 700 of 1000: loss=0.579 " + "l1=0.507" + "l2=0.0725 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.992689  -2.0737152  2.6585214 -5.410714 ]]
Iteration 800 of 1000: loss=0.577 " + "l1=0.503" + "l2=0.0738 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.9734519 -2.0558183  2.6479573 -5.3938746]]
Iteration 900 of 1000: loss=0.575 " + "l1=0.5" + "l2=0.0748 f=-0.456 shape=(1, 9000, 1)
logits [[ 2.9603155 -2.0392108  2.6359067 -5.380127 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.91 " + "l1=6.91" + "l2=0 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.9168942 -2.990501   3.2904139 -6.0914288]]
Iteration 100 of 1000: loss=2.83 " + "l1=1.11" + "l2=1.73 f=-0.565 shape=(1, 9000, 1)
logits [[ 0.95728815 -0.14820643  0.95496786 -4.024355  ]]
Iteration 200 of 1000: loss=1.96 " + "l1=0.015" + "l2=1.95 f=-0.614 shape=(1, 9000, 1)
logits [[ 0.64397615  0.6290036   0.636105   -4.366842  ]]
Iteration 300 of 1000: loss=1.69 " + "l1=0" + "l2=1.69 f=-0.609 shape=(1, 9000, 1)
logits [[ 0.6362512   0.63688546  0.63355696 -4.3421493 ]]
Iteration 400 of 1000: loss=1.61 " + "l1=0.0159" + "l2=1.59 f=-0.604 shape=(1, 9000, 1)
logits [[ 0.6587906   0.64290833  0.63391656 -4.352975  ]]
Iteration 500 of 1000: loss=1.54 " + "l1=0" + "l2=1.54 f=-0.6 shape=(1, 9000, 1)
logits [[ 0.6380624  0.6452179  0.6442574 -4.328321 ]]
Iteration 600 of 1000: loss=1.52 " + "l1=0" + "l2=1.52 f=-0.603 shape=(1, 9000, 1)
logits [[ 0.6001521  0.649933   0.6437889 -4.3061376]]
Iteration 700 of 1000: loss=1.49 " + "l1=0.0243" + "l2=1.46 f=-0.598 shape=(1, 9000, 1)
logits [[ 0.6447577   0.620448    0.64284354 -4.3016    ]]
Iteration 800 of 1000: loss=1.47 " + "l1=0" + "l2=1.47 f=-0.603 shape=(1, 9000, 1)
logits [[ 0.61013055  0.6445494   0.62934166 -4.296585  ]]
Iteration 900 of 1000: loss=1.47 " + "l1=0" + "l2=1.47 f=-0.604 shape=(1, 9000, 1)
logits [[ 0.59527755  0.6460687   0.62512666 -4.2821035 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.8 " + "l1=3.8" + "l2=0 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.9168942 -2.990501   3.2904139 -6.0914288]]
Iteration 100 of 1000: loss=2.24 " + "l1=1.41" + "l2=0.834 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.687589   -0.87233734  1.5865263  -4.47349   ]]
Iteration 200 of 1000: loss=1.95 " + "l1=0.99" + "l2=0.958 f=-0.526 shape=(1, 9000, 1)
logits [[ 1.2610302 -0.5386198  1.2489604 -4.075127 ]]
Iteration 300 of 1000: loss=1.82 " + "l1=0.773" + "l2=1.04 f=-0.532 shape=(1, 9000, 1)
logits [[ 1.070991   -0.33416167  1.0518535  -3.91796   ]]
Iteration 400 of 1000: loss=1.76 " + "l1=0.663" + "l2=1.09 f=-0.537 shape=(1, 9000, 1)
logits [[ 0.97601455 -0.2297643   0.9764275  -3.8704386 ]]
Iteration 500 of 1000: loss=1.67 " + "l1=0.534" + "l2=1.14 f=-0.531 shape=(1, 9000, 1)
logits [[ 0.8880855  -0.08325298  0.8705036  -3.8001873 ]]
Iteration 600 of 1000: loss=1.63 " + "l1=0.481" + "l2=1.15 f=-0.535 shape=(1, 9000, 1)
logits [[ 0.81873435 -0.04518641  0.8284845  -3.7425377 ]]
Iteration 700 of 1000: loss=1.61 " + "l1=0.43" + "l2=1.18 f=-0.537 shape=(1, 9000, 1)
logits [[ 7.8412580e-01  3.0997265e-03  7.8215235e-01 -3.7166536e+00]]
Iteration 800 of 1000: loss=1.58 " + "l1=0.387" + "l2=1.2 f=-0.539 shape=(1, 9000, 1)
logits [[ 0.74341077  0.04024322  0.7370936  -3.674947  ]]
Iteration 900 of 1000: loss=1.55 " + "l1=0.323" + "l2=1.22 f=-0.537 shape=(1, 9000, 1)
logits [[ 0.6586875   0.08069047  0.6679354  -3.5561512 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.35 " + "l1=5.35" + "l2=0 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.9168942 -2.990501   3.2904139 -6.0914288]]
Iteration 100 of 1000: loss=2.59 " + "l1=1.3" + "l2=1.29 f=-0.54 shape=(1, 9000, 1)
logits [[ 1.2232665  -0.45239532  1.2086089  -4.138791  ]]
Iteration 200 of 1000: loss=2.1 " + "l1=0.652" + "l2=1.45 f=-0.569 shape=(1, 9000, 1)
logits [[ 0.85049456  0.00875887  0.82500356 -3.9594164 ]]
Iteration 300 of 1000: loss=1.73 " + "l1=0.00335" + "l2=1.73 f=-0.607 shape=(1, 9000, 1)
logits [[ 0.60585624  0.6015354   0.6034758  -4.2368755 ]]
Iteration 400 of 1000: loss=1.6 " + "l1=0.00435" + "l2=1.59 f=-0.605 shape=(1, 9000, 1)
logits [[ 0.65060425  0.64499027  0.6239117  -4.3385887 ]]
Iteration 500 of 1000: loss=1.53 " + "l1=0.0293" + "l2=1.5 f=-0.596 shape=(1, 9000, 1)
logits [[ 0.6626729  0.6248445  0.6481808 -4.321121 ]]
Iteration 600 of 1000: loss=1.49 " + "l1=0" + "l2=1.49 f=-0.601 shape=(1, 9000, 1)
logits [[ 0.63723695  0.640738    0.63086843 -4.3137007 ]]
Iteration 700 of 1000: loss=1.46 " + "l1=0.00636" + "l2=1.46 f=-0.6 shape=(1, 9000, 1)
logits [[ 0.6298702  0.6263754  0.6345789 -4.292099 ]]
Iteration 800 of 1000: loss=1.46 " + "l1=0.0364" + "l2=1.42 f=-0.596 shape=(1, 9000, 1)
logits [[ 0.6568077   0.6098253   0.63228256 -4.282549  ]]
Iteration 900 of 1000: loss=1.43 " + "l1=0.0103" + "l2=1.42 f=-0.598 shape=(1, 9000, 1)
logits [[ 0.63503563  0.62169963  0.61865467 -4.265843  ]]
--- 277.25756573677063 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00626 " + "l1=0.00626" + "l2=0 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.9168942 -2.990501   3.2904139 -6.0914288]]
Iteration 100 of 1000: loss=0.00591 " + "l1=0.00562" + "l2=0.000296 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.881555  -3.0115614  3.3196392 -6.065574 ]]
Iteration 200 of 1000: loss=0.00584 " + "l1=0.00556" + "l2=0.000277 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.8784904 -3.0126948  3.322227  -6.0626826]]
Iteration 300 of 1000: loss=0.0058 " + "l1=0.00548" + "l2=0.000323 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.8741052 -3.0149434  3.326135  -6.05946  ]]
Iteration 400 of 1000: loss=0.00577 " + "l1=0.00538" + "l2=0.000394 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.8688855 -3.0180898  3.3309588 -6.0564685]]
Iteration 500 of 1000: loss=0.00577 " + "l1=0.00529" + "l2=0.000482 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.8643198 -3.0208967  3.3352833 -6.05368  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0626 " + "l1=0.0626" + "l2=0 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.9168942 -2.990501   3.2904139 -6.0914288]]
Iteration 100 of 1000: loss=0.0318 " + "l1=0.0142" + "l2=0.0177 f=-0.464 shape=(1, 9000, 1)
logits [[ 3.676011  -3.1418743  3.5344782 -5.9245095]]
Iteration 200 of 1000: loss=0.0224 " + "l1=0.00133" + "l2=0.0211 f=-0.464 shape=(1, 9000, 1)
logits [[ 3.603068  -3.164847   3.5897415 -5.8825417]]
Iteration 300 of 1000: loss=0.0176 " + "l1=0.000154" + "l2=0.0174 f=-0.465 shape=(1, 9000, 1)
logits [[ 3.5996184 -3.1650972  3.59808   -5.8932667]]
Iteration 400 of 1000: loss=0.0156 " + "l1=0.00088" + "l2=0.0147 f=-0.466 shape=(1, 9000, 1)
logits [[ 3.6066723 -3.1655757  3.5978763 -5.9042444]]
Iteration 500 of 1000: loss=0.0139 " + "l1=0.000304" + "l2=0.0136 f=-0.467 shape=(1, 9000, 1)
logits [[ 3.6081116 -3.1704426  3.6050696 -5.9117346]]
Iteration 600 of 1000: loss=0.0129 " + "l1=0" + "l2=0.0129 f=-0.468 shape=(1, 9000, 1)
logits [[ 3.6093316 -3.1748345  3.6104765 -5.9173627]]
Iteration 700 of 1000: loss=0.0123 " + "l1=0" + "l2=0.0123 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.6113367 -3.1800027  3.6162047 -5.9237123]]
Iteration 800 of 1000: loss=0.012 " + "l1=0" + "l2=0.012 f=-0.47 shape=(1, 9000, 1)
logits [[ 3.6150079 -3.1826491  3.618541  -5.9301233]]
Iteration 900 of 1000: loss=0.0115 " + "l1=0" + "l2=0.0115 f=-0.47 shape=(1, 9000, 1)
logits [[ 3.6160953 -3.1869948  3.6235943 -5.9337044]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0345 " + "l1=0.0345" + "l2=0 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.9168942 -2.990501   3.2904139 -6.0914288]]
Iteration 100 of 1000: loss=0.0248 " + "l1=0.019" + "l2=0.00575 f=-0.467 shape=(1, 9000, 1)
logits [[ 3.7764254 -3.0835624  3.4306269 -5.9915423]]
Iteration 200 of 1000: loss=0.0219 " + "l1=0.0146" + "l2=0.00732 f=-0.467 shape=(1, 9000, 1)
logits [[ 3.7349768 -3.1051285  3.4699457 -5.9661345]]
Iteration 300 of 1000: loss=0.0196 " + "l1=0.011" + "l2=0.00867 f=-0.466 shape=(1, 9000, 1)
logits [[ 3.7013497 -3.1222346  3.5021632 -5.9457774]]
Iteration 400 of 1000: loss=0.0178 " + "l1=0.00799" + "l2=0.00976 f=-0.465 shape=(1, 9000, 1)
logits [[ 3.672076  -3.1319015  3.5267262 -5.928245 ]]
Iteration 500 of 1000: loss=0.0161 " + "l1=0.00537" + "l2=0.0107 f=-0.465 shape=(1, 9000, 1)
logits [[ 3.646521  -3.141852   3.5488114 -5.9143558]]
Iteration 600 of 1000: loss=0.0148 " + "l1=0.00293" + "l2=0.0119 f=-0.466 shape=(1, 9000, 1)
logits [[ 3.6313949 -3.15797    3.5781217 -5.916578 ]]
Iteration 700 of 1000: loss=0.0135 " + "l1=0.0009" + "l2=0.0126 f=-0.467 shape=(1, 9000, 1)
logits [[ 3.6168156 -3.1700072  3.6004548 -5.91586  ]]
Iteration 800 of 1000: loss=0.0125 " + "l1=0.00031" + "l2=0.0122 f=-0.468 shape=(1, 9000, 1)
logits [[ 3.6128798 -3.174595   3.607236  -5.9187064]]
Iteration 900 of 1000: loss=0.0119 " + "l1=7.64e-05" + "l2=0.0118 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.6144464 -3.1797698  3.6130579 -5.924697 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0204 " + "l1=0.0204" + "l2=0 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.9168942 -2.990501   3.2904139 -6.0914288]]
Iteration 100 of 1000: loss=0.0169 " + "l1=0.0147" + "l2=0.00217 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.8255894 -3.0487742  3.3733222 -6.024632 ]]
Iteration 200 of 1000: loss=0.016 " + "l1=0.0134" + "l2=0.00261 f=-0.468 shape=(1, 9000, 1)
logits [[ 3.8031197 -3.0592287  3.3920448 -6.0076485]]
Iteration 300 of 1000: loss=0.0152 " + "l1=0.0122" + "l2=0.00308 f=-0.467 shape=(1, 9000, 1)
logits [[ 3.7822437 -3.066908   3.4078782 -5.992745 ]]
Iteration 400 of 1000: loss=0.0146 " + "l1=0.011" + "l2=0.00362 f=-0.467 shape=(1, 9000, 1)
logits [[ 3.767169  -3.078738   3.4291584 -5.9864345]]
Iteration 500 of 1000: loss=0.0141 " + "l1=0.00995" + "l2=0.00413 f=-0.467 shape=(1, 9000, 1)
logits [[ 3.752397  -3.087878   3.446138  -5.9796405]]
Iteration 600 of 1000: loss=0.0135 " + "l1=0.00906" + "l2=0.00445 f=-0.467 shape=(1, 9000, 1)
logits [[ 3.740442  -3.0963345  3.4615648 -5.9744096]]
Iteration 700 of 1000: loss=0.0131 " + "l1=0.0083" + "l2=0.00483 f=-0.467 shape=(1, 9000, 1)
logits [[ 3.729993  -3.1038253  3.474698  -5.9697275]]
Iteration 800 of 1000: loss=0.0127 " + "l1=0.00756" + "l2=0.00517 f=-0.467 shape=(1, 9000, 1)
logits [[ 3.7199147 -3.1106212  3.487278  -5.9655237]]
Iteration 900 of 1000: loss=0.0125 " + "l1=0.00699" + "l2=0.00551 f=-0.467 shape=(1, 9000, 1)
logits [[ 3.7116277 -3.1160254  3.4966633 -5.9618244]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0274 " + "l1=0.0274" + "l2=0 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.9168942 -2.990501   3.2904139 -6.0914288]]
Iteration 100 of 1000: loss=0.0212 " + "l1=0.0176" + "l2=0.00365 f=-0.468 shape=(1, 9000, 1)
logits [[ 3.8000743 -3.0640583  3.3984187 -6.0054097]]
Iteration 200 of 1000: loss=0.0195 " + "l1=0.0148" + "l2=0.00468 f=-0.467 shape=(1, 9000, 1)
logits [[ 3.768012  -3.0812793  3.42994   -5.9838004]]
Iteration 300 of 1000: loss=0.018 " + "l1=0.0124" + "l2=0.00565 f=-0.467 shape=(1, 9000, 1)
logits [[ 3.7419906 -3.0967965  3.4589016 -5.9707346]]
Iteration 400 of 1000: loss=0.0168 " + "l1=0.0104" + "l2=0.0064 f=-0.467 shape=(1, 9000, 1)
logits [[ 3.720245  -3.1096895  3.4826636 -5.9595904]]
Iteration 500 of 1000: loss=0.0158 " + "l1=0.00865" + "l2=0.00713 f=-0.466 shape=(1, 9000, 1)
logits [[ 3.7009733 -3.1202383  3.503347  -5.9497485]]
Iteration 600 of 1000: loss=0.0149 " + "l1=0.0072" + "l2=0.0077 f=-0.466 shape=(1, 9000, 1)
logits [[ 3.6846805 -3.1288853  3.5201194 -5.9406447]]
Iteration 700 of 1000: loss=0.0142 " + "l1=0.00594" + "l2=0.00825 f=-0.466 shape=(1, 9000, 1)
logits [[ 3.6707306 -3.137054   3.5349004 -5.933135 ]]
Iteration 800 of 1000: loss=0.0135 " + "l1=0.00466" + "l2=0.00888 f=-0.467 shape=(1, 9000, 1)
logits [[ 3.662168  -3.1493385  3.5557535 -5.9371505]]
Iteration 900 of 1000: loss=0.0129 " + "l1=0.00352" + "l2=0.00935 f=-0.468 shape=(1, 9000, 1)
logits [[ 3.6531675 -3.1589005  3.5727308 -5.9383683]]
--- 273.5195732116699 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.1 " + "l1=0.1" + "l2=0 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.9168942 -2.990501   3.2904139 -6.0914288]]
Iteration 100 of 1000: loss=0.0991 " + "l1=0.0984" + "l2=0.000704 f=-0.464 shape=(1, 9000, 1)
logits [[ 3.8403533 -2.9691002  3.2678487 -5.9968977]]
Iteration 200 of 1000: loss=0.0989 " + "l1=0.0981" + "l2=0.000783 f=-0.464 shape=(1, 9000, 1)
logits [[ 3.8276792 -2.963974   3.2636337 -5.9817605]]
Iteration 300 of 1000: loss=0.0988 " + "l1=0.0978" + "l2=0.000947 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.8147137 -2.9605856  3.2606125 -5.9662747]]
Iteration 400 of 1000: loss=0.0987 " + "l1=0.0976" + "l2=0.0011 f=-0.462 shape=(1, 9000, 1)
logits [[ 3.8036132 -2.9583766  3.2589    -5.953131 ]]
Iteration 500 of 1000: loss=0.0986 " + "l1=0.0974" + "l2=0.00128 f=-0.462 shape=(1, 9000, 1)
logits [[ 3.7944067 -2.9572704  3.2580945 -5.941923 ]]
Iteration 600 of 1000: loss=0.0985 " + "l1=0.0972" + "l2=0.00136 f=-0.461 shape=(1, 9000, 1)
logits [[ 3.7860777 -2.9563706  3.2575755 -5.9318757]]
Iteration 700 of 1000: loss=0.0985 " + "l1=0.097" + "l2=0.00146 f=-0.461 shape=(1, 9000, 1)
logits [[ 3.778598  -2.9560578  3.2573893 -5.9228296]]
Iteration 800 of 1000: loss=0.0985 " + "l1=0.0969" + "l2=0.00166 f=-0.46 shape=(1, 9000, 1)
logits [[ 3.7720923 -2.9560192  3.257497  -5.9149637]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1 " + "l1=1" + "l2=0 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.9168942 -2.990501   3.2904139 -6.0914288]]
Iteration 100 of 1000: loss=0.91 " + "l1=0.857" + "l2=0.0528 f=-0.427 shape=(1, 9000, 1)
logits [[ 3.2675874 -2.7729502  3.1013327 -5.3026094]]
Iteration 200 of 1000: loss=0.883 " + "l1=0.813" + "l2=0.0699 f=-0.419 shape=(1, 9000, 1)
logits [[ 3.0457458 -2.685264   3.0447905 -5.0824857]]
Iteration 300 of 1000: loss=0.87 " + "l1=0.796" + "l2=0.0746 f=-0.417 shape=(1, 9000, 1)
logits [[ 2.9747367 -2.6369188  2.9755585 -4.982995 ]]
Iteration 400 of 1000: loss=0.864 " + "l1=0.786" + "l2=0.0779 f=-0.416 shape=(1, 9000, 1)
logits [[ 2.934616  -2.6112735  2.9354942 -4.9227357]]
Iteration 500 of 1000: loss=0.859 " + "l1=0.777" + "l2=0.0818 f=-0.415 shape=(1, 9000, 1)
logits [[ 2.8987925 -2.5850396  2.8971214 -4.8703036]]
Iteration 600 of 1000: loss=0.854 " + "l1=0.769" + "l2=0.0853 f=-0.415 shape=(1, 9000, 1)
logits [[ 2.8654563 -2.5597224  2.861302  -4.8251824]]
Iteration 700 of 1000: loss=0.85 " + "l1=0.763" + "l2=0.0875 f=-0.413 shape=(1, 9000, 1)
logits [[ 2.8408608 -2.549654   2.8422081 -4.7872386]]
Iteration 800 of 1000: loss=0.847 " + "l1=0.759" + "l2=0.0882 f=-0.413 shape=(1, 9000, 1)
logits [[ 2.8290093 -2.5437505  2.8273337 -4.7633553]]
Iteration 900 of 1000: loss=0.845 " + "l1=0.755" + "l2=0.0905 f=-0.411 shape=(1, 9000, 1)
logits [[ 2.8061805 -2.5371578  2.8161077 -4.7297654]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10 " + "l1=10" + "l2=0 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.9168942 -2.990501   3.2904139 -6.0914288]]
Iteration 100 of 1000: loss=5.48 " + "l1=3.68" + "l2=1.81 f=-0.408 shape=(1, 9000, 1)
logits [[ 1.0427046 -1.1660833  1.084893  -2.591637 ]]
Iteration 200 of 1000: loss=4.28 " + "l1=1.96" + "l2=2.32 f=-0.375 shape=(1, 9000, 1)
logits [[ 0.25841552 -0.65285033  0.42826372 -1.5353478 ]]
Iteration 300 of 1000: loss=3.56 " + "l1=0.796" + "l2=2.77 f=-0.34 shape=(1, 9000, 1)
logits [[-0.20646957 -0.39735997  0.02062585 -0.7751717 ]]
Iteration 400 of 1000: loss=2.97 " + "l1=0.0364" + "l2=2.93 f=-0.313 shape=(1, 9000, 1)
logits [[-0.4680584  -0.38728282 -0.1800578  -0.21646386]]
Iteration 500 of 1000: loss=2.59 " + "l1=0.0536" + "l2=2.54 f=-0.267 shape=(1, 9000, 1)
logits [[-0.3445322  -0.5358345  -0.06704456 -0.12063012]]
Iteration 600 of 1000: loss=2.27 " + "l1=0.0373" + "l2=2.24 f=-0.235 shape=(1, 9000, 1)
logits [[-0.2502433  -0.6214756  -0.01471218 -0.05205033]]
Iteration 700 of 1000: loss=2.12 " + "l1=0" + "l2=2.12 f=-0.23 shape=(1, 9000, 1)
logits [[-0.25227842 -0.6492495  -0.01725249 -0.0030992 ]]
Iteration 800 of 1000: loss=1.99 " + "l1=0.00379" + "l2=1.98 f=-0.228 shape=(1, 9000, 1)
logits [[-0.2455593  -0.6873258   0.012467    0.00867407]]
Iteration 900 of 1000: loss=1.88 " + "l1=0" + "l2=1.88 f=-0.224 shape=(1, 9000, 1)
logits [[-0.2674779  -0.7190624   0.04153717  0.04876524]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.5 " + "l1=5.5" + "l2=0 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.9168942 -2.990501   3.2904139 -6.0914288]]
Iteration 100 of 1000: loss=3.75 " + "l1=3" + "l2=0.752 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.8489738 -1.7953049  1.8565129 -3.5938084]]
Iteration 200 of 1000: loss=3.34 " + "l1=2.29" + "l2=1.05 f=-0.404 shape=(1, 9000, 1)
logits [[ 1.2738134 -1.3683422  1.3205066 -2.8415637]]
Iteration 300 of 1000: loss=3.07 " + "l1=1.82" + "l2=1.26 f=-0.393 shape=(1, 9000, 1)
logits [[ 0.9014232 -1.0495033  0.9400324 -2.3658524]]
Iteration 400 of 1000: loss=2.9 " + "l1=1.55" + "l2=1.35 f=-0.371 shape=(1, 9000, 1)
logits [[ 0.7396971 -0.9458859  0.7705202 -2.048406 ]]
Iteration 500 of 1000: loss=2.75 " + "l1=1.32" + "l2=1.43 f=-0.349 shape=(1, 9000, 1)
logits [[ 0.584929  -0.8358322  0.6286479 -1.7730286]]
Iteration 600 of 1000: loss=2.57 " + "l1=1.09" + "l2=1.48 f=-0.315 shape=(1, 9000, 1)
logits [[ 0.5020362 -0.8006181  0.5075374 -1.4704123]]
Iteration 700 of 1000: loss=2.19 " + "l1=0.624" + "l2=1.57 f=-0.247 shape=(1, 9000, 1)
logits [[ 0.27806178 -0.79056865  0.3303068  -0.8041269 ]]
Iteration 800 of 1000: loss=1.94 " + "l1=0.342" + "l2=1.6 f=-0.254 shape=(1, 9000, 1)
logits [[ 0.00301784 -0.8270701   0.21398632 -0.40704352]]
Iteration 900 of 1000: loss=1.76 " + "l1=0.159" + "l2=1.6 f=-0.264 shape=(1, 9000, 1)
logits [[-0.22078082 -0.87743586  0.16622825 -0.12264136]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=7.76 " + "l1=7.76" + "l2=0 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.9168942 -2.990501   3.2904139 -6.0914288]]
Iteration 100 of 1000: loss=4.73 " + "l1=3.46" + "l2=1.26 f=-0.412 shape=(1, 9000, 1)
logits [[ 1.4141413 -1.4367198  1.4214594 -3.044972 ]]
Iteration 200 of 1000: loss=3.9 " + "l1=2.17" + "l2=1.73 f=-0.389 shape=(1, 9000, 1)
logits [[ 0.65601486 -0.86125803  0.7226184  -2.0731144 ]]
Iteration 300 of 1000: loss=3.49 " + "l1=1.63" + "l2=1.87 f=-0.36 shape=(1, 9000, 1)
logits [[ 0.38936204 -0.7178713   0.49274123 -1.6047986 ]]
Iteration 400 of 1000: loss=3.13 " + "l1=0.924" + "l2=2.2 f=-0.335 shape=(1, 9000, 1)
logits [[ 0.03704519 -0.52603084  0.16989522 -1.0227541 ]]
Iteration 500 of 1000: loss=2.73 " + "l1=0.476" + "l2=2.26 f=-0.274 shape=(1, 9000, 1)
logits [[-0.06630083 -0.5608425   0.07157375 -0.54197985]]
Iteration 600 of 1000: loss=2.23 " + "l1=0.0293" + "l2=2.2 f=-0.235 shape=(1, 9000, 1)
logits [[-0.24618168 -0.60962456 -0.02402192 -0.06180451]]
Iteration 700 of 1000: loss=2.01 " + "l1=0.0166" + "l2=1.99 f=-0.234 shape=(1, 9000, 1)
logits [[-0.27203482 -0.6885393   0.0228262   0.00144018]]
Iteration 800 of 1000: loss=1.82 " + "l1=0.0163" + "l2=1.81 f=-0.235 shape=(1, 9000, 1)
logits [[-0.28312457 -0.7553268   0.06025942  0.03921672]]
Iteration 900 of 1000: loss=1.71 " + "l1=0.0604" + "l2=1.65 f=-0.241 shape=(1, 9000, 1)
logits [[-0.31215194 -0.8482716   0.1374292   0.05944637]]
--- 291.2831377983093 seconds ---
Adv result:3
Loading model
Loading ground truth file
Attack diff is running...
Loading record A04901
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0993 " + "l1=0.0993" + "l2=0 f=-0.642 shape=(1, 9000, 1)
logits [[ 6.4480953 -3.477225   3.8012426 -9.341926 ]]
Iteration 100 of 1000: loss=0.0986 " + "l1=0.0982" + "l2=0.000435 f=-0.641 shape=(1, 9000, 1)
logits [[ 6.39162   -3.4238365  3.7631037 -9.294383 ]]
Iteration 200 of 1000: loss=0.0984 " + "l1=0.098" + "l2=0.000463 f=-0.641 shape=(1, 9000, 1)
logits [[ 6.3807783 -3.4148843  3.756622  -9.285541 ]]
Iteration 300 of 1000: loss=0.0983 " + "l1=0.0977" + "l2=0.000547 f=-0.641 shape=(1, 9000, 1)
logits [[ 6.367646 -3.404255  3.748809 -9.274931]]
Iteration 400 of 1000: loss=0.0981 " + "l1=0.0975" + "l2=0.000657 f=-0.641 shape=(1, 9000, 1)
logits [[ 6.354514  -3.3941202  3.7412498 -9.264683 ]]
Iteration 500 of 1000: loss=0.098 " + "l1=0.0973" + "l2=0.000777 f=-0.641 shape=(1, 9000, 1)
logits [[ 6.3416147 -3.384236   3.7338223 -9.254848 ]]
Iteration 600 of 1000: loss=0.098 " + "l1=0.097" + "l2=0.000955 f=-0.641 shape=(1, 9000, 1)
logits [[ 6.3290086 -3.3747342  3.7267165 -9.245645 ]]
Iteration 700 of 1000: loss=0.0978 " + "l1=0.0968" + "l2=0.00103 f=-0.642 shape=(1, 9000, 1)
logits [[ 6.3161182 -3.3649757  3.7191558 -9.23632  ]]
Iteration 800 of 1000: loss=0.0978 " + "l1=0.0966" + "l2=0.00124 f=-0.642 shape=(1, 9000, 1)
logits [[ 6.3018613 -3.354293   3.7109447 -9.226072 ]]
Iteration 900 of 1000: loss=0.0976 " + "l1=0.0963" + "l2=0.00132 f=-0.642 shape=(1, 9000, 1)
logits [[ 6.288225  -3.3444448  3.7033024 -9.216444 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.993 " + "l1=0.993" + "l2=0 f=-0.642 shape=(1, 9000, 1)
logits [[ 6.4480953 -3.477225   3.8012426 -9.341926 ]]
Iteration 100 of 1000: loss=0.927 " + "l1=0.884" + "l2=0.0423 f=-0.635 shape=(1, 9000, 1)
logits [[ 5.8973722 -2.9467485  3.39506   -8.886362 ]]
Iteration 200 of 1000: loss=0.89 " + "l1=0.823" + "l2=0.0672 f=-0.633 shape=(1, 9000, 1)
logits [[ 5.5711102 -2.6578043  3.1650133 -8.609721 ]]
Iteration 300 of 1000: loss=0.848 " + "l1=0.765" + "l2=0.0827 f=-0.633 shape=(1, 9000, 1)
logits [[ 5.254052  -2.3971076  2.9503253 -8.338108 ]]
Iteration 400 of 1000: loss=0.8 " + "l1=0.703" + "l2=0.0966 f=-0.635 shape=(1, 9000, 1)
logits [[ 4.886774  -2.1458523  2.7298038 -8.009426 ]]
Iteration 500 of 1000: loss=0.755 " + "l1=0.646" + "l2=0.109 f=-0.632 shape=(1, 9000, 1)
logits [[ 4.5101504 -1.9448992  2.5563514 -7.6515427]]
Iteration 600 of 1000: loss=0.725 " + "l1=0.608" + "l2=0.116 f=-0.631 shape=(1, 9000, 1)
logits [[ 4.2554984 -1.8265468  2.4571009 -7.408956 ]]
Iteration 700 of 1000: loss=0.698 " + "l1=0.568" + "l2=0.129 f=-0.631 shape=(1, 9000, 1)
logits [[ 3.979954  -1.7019216  2.337391  -7.139988 ]]
Iteration 800 of 1000: loss=0.673 " + "l1=0.536" + "l2=0.137 f=-0.635 shape=(1, 9000, 1)
logits [[ 3.7570674 -1.6060932  2.2428777 -6.9358516]]
Iteration 900 of 1000: loss=0.649 " + "l1=0.508" + "l2=0.142 f=-0.645 shape=(1, 9000, 1)
logits [[ 3.5637486 -1.5118165  2.1450243 -6.778697 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.93 " + "l1=9.93" + "l2=0 f=-0.642 shape=(1, 9000, 1)
logits [[ 6.4480953 -3.477225   3.8012426 -9.341926 ]]
Iteration 100 of 1000: loss=3.41 " + "l1=0.78" + "l2=2.63 f=-0.68 shape=(1, 9000, 1)
logits [[ 0.92196715  0.15602015  0.9364559  -4.733735  ]]
Iteration 200 of 1000: loss=2.33 " + "l1=0.0345" + "l2=2.29 f=-0.69 shape=(1, 9000, 1)
logits [[ 0.54993176  0.5375315   0.5720325  -4.4191804 ]]
Iteration 300 of 1000: loss=1.94 " + "l1=0.0229" + "l2=1.92 f=-0.678 shape=(1, 9000, 1)
logits [[ 0.5198711   0.52093256  0.54380375 -4.2971435 ]]
Iteration 400 of 1000: loss=1.74 " + "l1=0" + "l2=1.74 f=-0.673 shape=(1, 9000, 1)
logits [[ 0.5186492  0.5306402  0.5198383 -4.2616663]]
Iteration 500 of 1000: loss=1.62 " + "l1=0" + "l2=1.62 f=-0.668 shape=(1, 9000, 1)
logits [[ 0.48414794  0.5278007   0.50752586 -4.1914096 ]]
Iteration 600 of 1000: loss=1.51 " + "l1=0.0179" + "l2=1.49 f=-0.66 shape=(1, 9000, 1)
logits [[ 0.5259074  0.5079646  0.5216583 -4.19529  ]]
Iteration 700 of 1000: loss=1.42 " + "l1=0" + "l2=1.42 f=-0.653 shape=(1, 9000, 1)
logits [[ 0.5104488   0.5198193   0.51731247 -4.161453  ]]
Iteration 800 of 1000: loss=1.35 " + "l1=0" + "l2=1.35 f=-0.648 shape=(1, 9000, 1)
logits [[ 0.5063165  0.5211627  0.5119498 -4.130075 ]]
Iteration 900 of 1000: loss=1.29 " + "l1=0" + "l2=1.29 f=-0.643 shape=(1, 9000, 1)
logits [[ 0.5050469  0.5188517  0.5136024 -4.1077366]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.46 " + "l1=5.46" + "l2=0 f=-0.642 shape=(1, 9000, 1)
logits [[ 6.4480953 -3.477225   3.8012426 -9.341926 ]]
Iteration 100 of 1000: loss=3.07 " + "l1=1.83" + "l2=1.24 f=-0.625 shape=(1, 9000, 1)
logits [[ 2.667985   -0.65385926  1.5964469  -6.1086655 ]]
Iteration 200 of 1000: loss=2.13 " + "l1=0.603" + "l2=1.53 f=-0.683 shape=(1, 9000, 1)
logits [[ 1.1115062   0.01566635  1.0876373  -4.9468455 ]]
Iteration 300 of 1000: loss=1.72 " + "l1=0.385" + "l2=1.33 f=-0.684 shape=(1, 9000, 1)
logits [[ 0.9236842   0.22297157  0.92080194 -4.801838  ]]
Iteration 400 of 1000: loss=1.43 " + "l1=0.162" + "l2=1.26 f=-0.679 shape=(1, 9000, 1)
logits [[ 0.6672888   0.40217495  0.69629353 -4.4826894 ]]
Iteration 500 of 1000: loss=1.18 " + "l1=0.0135" + "l2=1.17 f=-0.671 shape=(1, 9000, 1)
logits [[ 0.5027741   0.487473    0.51209813 -4.1870627 ]]
Iteration 600 of 1000: loss=1.05 " + "l1=0.00509" + "l2=1.05 f=-0.663 shape=(1, 9000, 1)
logits [[ 0.48772213  0.48534322  0.49459204 -4.1208496 ]]
Iteration 700 of 1000: loss=0.972 " + "l1=0.00164" + "l2=0.971 f=-0.657 shape=(1, 9000, 1)
logits [[ 0.48214397  0.47916585  0.48101917 -4.072129  ]]
Iteration 800 of 1000: loss=0.922 " + "l1=0" + "l2=0.922 f=-0.655 shape=(1, 9000, 1)
logits [[ 0.45977655  0.4789793   0.464829   -4.024745  ]]
Iteration 900 of 1000: loss=0.882 " + "l1=0" + "l2=0.882 f=-0.654 shape=(1, 9000, 1)
logits [[ 0.44908276  0.46738186  0.45734736 -3.9878554 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.23 " + "l1=3.23" + "l2=0 f=-0.642 shape=(1, 9000, 1)
logits [[ 6.4480953 -3.477225   3.8012426 -9.341926 ]]
Iteration 100 of 1000: loss=2.3 " + "l1=1.72" + "l2=0.579 f=-0.597 shape=(1, 9000, 1)
logits [[ 4.019377  -1.2876929  2.099466  -7.217462 ]]
Iteration 200 of 1000: loss=1.9 " + "l1=1.26" + "l2=0.639 f=-0.618 shape=(1, 9000, 1)
logits [[ 3.1160886  -0.76713747  1.678413   -6.501157  ]]
Iteration 300 of 1000: loss=1.62 " + "l1=0.882" + "l2=0.739 f=-0.632 shape=(1, 9000, 1)
logits [[ 2.2743905  -0.43876967  1.435653   -5.7991586 ]]
Iteration 400 of 1000: loss=1.38 " + "l1=0.528" + "l2=0.847 f=-0.645 shape=(1, 9000, 1)
logits [[ 1.4986607  -0.12713166  1.1750449  -5.125067  ]]
Iteration 500 of 1000: loss=1.17 " + "l1=0.308" + "l2=0.861 f=-0.647 shape=(1, 9000, 1)
logits [[ 1.0172489   0.06991687  1.0011526  -4.6760845 ]]
Iteration 600 of 1000: loss=1.04 " + "l1=0.208" + "l2=0.832 f=-0.639 shape=(1, 9000, 1)
logits [[ 0.8328101   0.19185211  0.8301573  -4.412586  ]]
Iteration 700 of 1000: loss=0.942 " + "l1=0.143" + "l2=0.799 f=-0.636 shape=(1, 9000, 1)
logits [[ 0.71209025  0.272166    0.70618224 -4.2360845 ]]
Iteration 800 of 1000: loss=0.88 " + "l1=0.107" + "l2=0.772 f=-0.635 shape=(1, 9000, 1)
logits [[ 0.6372433  0.3066322  0.6336143 -4.1162395]]
Iteration 900 of 1000: loss=0.829 " + "l1=0.078" + "l2=0.751 f=-0.633 shape=(1, 9000, 1)
logits [[ 0.58135164  0.34138638  0.5671134  -4.022239  ]]
--- 282.93554186820984 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0265 " + "l1=0.0265" + "l2=0 f=-0.642 shape=(1, 9000, 1)
logits [[ 6.4480953 -3.477225   3.8012426 -9.341926 ]]
Iteration 100 of 1000: loss=0.0261 " + "l1=0.0258" + "l2=0.000275 f=-0.645 shape=(1, 9000, 1)
logits [[ 6.40806   -3.4958367  3.8264601 -9.31803  ]]
Iteration 200 of 1000: loss=0.026 " + "l1=0.0257" + "l2=0.000273 f=-0.645 shape=(1, 9000, 1)
logits [[ 6.4028325 -3.4979298  3.8298714 -9.315723 ]]
Iteration 300 of 1000: loss=0.0259 " + "l1=0.0256" + "l2=0.000323 f=-0.646 shape=(1, 9000, 1)
logits [[ 6.3957195 -3.5003371  3.8339067 -9.311959 ]]
Iteration 400 of 1000: loss=0.0259 " + "l1=0.0255" + "l2=0.000414 f=-0.646 shape=(1, 9000, 1)
logits [[ 6.388465  -3.502378   3.8376226 -9.308089 ]]
Iteration 500 of 1000: loss=0.0259 " + "l1=0.0254" + "l2=0.000488 f=-0.646 shape=(1, 9000, 1)
logits [[ 6.381493  -3.504355   3.8413267 -9.30445  ]]
Iteration 600 of 1000: loss=0.0259 " + "l1=0.0253" + "l2=0.00056 f=-0.647 shape=(1, 9000, 1)
logits [[ 6.3747535 -3.5061135  3.8447452 -9.301048 ]]
Iteration 700 of 1000: loss=0.0259 " + "l1=0.0252" + "l2=0.000693 f=-0.647 shape=(1, 9000, 1)
logits [[ 6.3681946 -3.5074627  3.8475397 -9.297672 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.265 " + "l1=0.265" + "l2=0 f=-0.642 shape=(1, 9000, 1)
logits [[ 6.4480953 -3.477225   3.8012426 -9.341926 ]]
Iteration 100 of 1000: loss=0.233 " + "l1=0.217" + "l2=0.0162 f=-0.662 shape=(1, 9000, 1)
logits [[ 6.140001  -3.6079338  3.9718983 -9.151914 ]]
Iteration 200 of 1000: loss=0.222 " + "l1=0.199" + "l2=0.0228 f=-0.669 shape=(1, 9000, 1)
logits [[ 6.0194473 -3.6480544  4.0290475 -9.076031 ]]
Iteration 300 of 1000: loss=0.213 " + "l1=0.185" + "l2=0.0275 f=-0.675 shape=(1, 9000, 1)
logits [[ 5.9186106 -3.669721   4.0644093 -9.013547 ]]
Iteration 400 of 1000: loss=0.205 " + "l1=0.175" + "l2=0.031 f=-0.679 shape=(1, 9000, 1)
logits [[ 5.8279405 -3.6725433  4.082823  -8.953806 ]]
Iteration 500 of 1000: loss=0.198 " + "l1=0.161" + "l2=0.037 f=-0.683 shape=(1, 9000, 1)
logits [[ 5.7197657 -3.6834042  4.112895  -8.87931  ]]
Iteration 600 of 1000: loss=0.191 " + "l1=0.15" + "l2=0.0408 f=-0.687 shape=(1, 9000, 1)
logits [[ 5.620329  -3.6660166  4.121343  -8.823072 ]]
Iteration 700 of 1000: loss=0.184 " + "l1=0.141" + "l2=0.0436 f=-0.692 shape=(1, 9000, 1)
logits [[ 5.5289116 -3.6372867  4.121454  -8.781383 ]]
Iteration 800 of 1000: loss=0.178 " + "l1=0.132" + "l2=0.0465 f=-0.697 shape=(1, 9000, 1)
logits [[ 5.441583  -3.6082067  4.1222258 -8.741951 ]]
Iteration 900 of 1000: loss=0.173 " + "l1=0.122" + "l2=0.0502 f=-0.703 shape=(1, 9000, 1)
logits [[ 5.3477063 -3.5781567  4.123123  -8.70435  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.65 " + "l1=2.65" + "l2=0 f=-0.642 shape=(1, 9000, 1)
logits [[ 6.4480953 -3.477225   3.8012426 -9.341926 ]]
Iteration 100 of 1000: loss=0.517 " + "l1=0" + "l2=0.517 f=-0.768 shape=(1, 9000, 1)
logits [[ 4.393697  -3.7716258  4.3972936 -8.091055 ]]
Iteration 200 of 1000: loss=0.405 " + "l1=0" + "l2=0.405 f=-0.764 shape=(1, 9000, 1)
logits [[ 4.3928194 -3.7709858  4.40885   -8.08848  ]]
Iteration 300 of 1000: loss=0.35 " + "l1=0" + "l2=0.35 f=-0.763 shape=(1, 9000, 1)
logits [[ 4.4118423 -3.7747977  4.4278183 -8.116971 ]]
Iteration 400 of 1000: loss=0.317 " + "l1=0" + "l2=0.317 f=-0.761 shape=(1, 9000, 1)
logits [[ 4.4067755 -3.7718253  4.433177  -8.113826 ]]
Iteration 500 of 1000: loss=0.288 " + "l1=0" + "l2=0.288 f=-0.761 shape=(1, 9000, 1)
logits [[ 4.4162583 -3.7646759  4.4252195 -8.119843 ]]
Iteration 600 of 1000: loss=0.276 " + "l1=0.0124" + "l2=0.263 f=-0.76 shape=(1, 9000, 1)
logits [[ 4.426539  -3.7538052  4.4141374 -8.126119 ]]
Iteration 700 of 1000: loss=0.256 " + "l1=0.00682" + "l2=0.249 f=-0.761 shape=(1, 9000, 1)
logits [[ 4.408221  -3.7417898  4.401398  -8.111716 ]]
Iteration 800 of 1000: loss=0.237 " + "l1=0" + "l2=0.237 f=-0.761 shape=(1, 9000, 1)
logits [[ 4.384791  -3.7307184  4.3867598 -8.0853405]]
Iteration 900 of 1000: loss=0.231 " + "l1=0" + "l2=0.231 f=-0.762 shape=(1, 9000, 1)
logits [[ 4.346868  -3.7257214  4.3787975 -8.047081 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.46 " + "l1=1.46" + "l2=0 f=-0.642 shape=(1, 9000, 1)
logits [[ 6.4480953 -3.477225   3.8012426 -9.341926 ]]
Iteration 100 of 1000: loss=0.498 " + "l1=0.00583" + "l2=0.492 f=-0.768 shape=(1, 9000, 1)
logits [[ 4.421015  -3.7708433  4.410412  -8.132    ]]
Iteration 200 of 1000: loss=0.358 " + "l1=0" + "l2=0.358 f=-0.764 shape=(1, 9000, 1)
logits [[ 4.4266143 -3.7857537  4.428235  -8.123444 ]]
Iteration 300 of 1000: loss=0.312 " + "l1=0" + "l2=0.312 f=-0.76 shape=(1, 9000, 1)
logits [[ 4.4001293 -3.767896   4.431101  -8.103556 ]]
Iteration 400 of 1000: loss=0.273 " + "l1=0.00356" + "l2=0.27 f=-0.756 shape=(1, 9000, 1)
logits [[ 4.414139  -3.7472658  4.4076586 -8.098301 ]]
Iteration 500 of 1000: loss=0.248 " + "l1=0.000126" + "l2=0.247 f=-0.755 shape=(1, 9000, 1)
logits [[ 4.3892207 -3.7311134  4.3889923 -8.066135 ]]
Iteration 600 of 1000: loss=0.23 " + "l1=0" + "l2=0.23 f=-0.753 shape=(1, 9000, 1)
logits [[ 4.3693376 -3.7153401  4.374433  -8.042354 ]]
Iteration 700 of 1000: loss=0.219 " + "l1=0.00521" + "l2=0.214 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.363752  -3.6953871  4.3542705 -8.025539 ]]
Iteration 800 of 1000: loss=0.215 " + "l1=0.0139" + "l2=0.201 f=-0.749 shape=(1, 9000, 1)
logits [[ 4.3558536 -3.6749694  4.330629  -8.007602 ]]
Iteration 900 of 1000: loss=0.201 " + "l1=0" + "l2=0.201 f=-0.752 shape=(1, 9000, 1)
logits [[ 4.299894  -3.6691225  4.323933  -7.961729 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.86 " + "l1=0.86" + "l2=0 f=-0.642 shape=(1, 9000, 1)
logits [[ 6.4480953 -3.477225   3.8012426 -9.341926 ]]
Iteration 100 of 1000: loss=0.519 " + "l1=0.301" + "l2=0.218 f=-0.711 shape=(1, 9000, 1)
logits [[ 5.1672225 -3.7193987  4.240966  -8.531182 ]]
Iteration 200 of 1000: loss=0.381 " + "l1=0.0984" + "l2=0.283 f=-0.742 shape=(1, 9000, 1)
logits [[ 4.7093716 -3.794231   4.406693  -8.289754 ]]
Iteration 300 of 1000: loss=0.29 " + "l1=0" + "l2=0.29 f=-0.749 shape=(1, 9000, 1)
logits [[ 4.4272923 -3.7566915  4.4365597 -8.104435 ]]
Iteration 400 of 1000: loss=0.245 " + "l1=0.0022" + "l2=0.243 f=-0.743 shape=(1, 9000, 1)
logits [[ 4.420608 -3.722124  4.413844 -8.085256]]
Iteration 500 of 1000: loss=0.22 " + "l1=0.00171" + "l2=0.218 f=-0.742 shape=(1, 9000, 1)
logits [[ 4.389864  -3.6848495  4.3846107 -8.056774 ]]
Iteration 600 of 1000: loss=0.207 " + "l1=0" + "l2=0.207 f=-0.742 shape=(1, 9000, 1)
logits [[ 4.3487597 -3.6567745  4.3609076 -8.021375 ]]
Iteration 700 of 1000: loss=0.194 " + "l1=0.00519" + "l2=0.189 f=-0.74 shape=(1, 9000, 1)
logits [[ 4.346349  -3.6265771  4.3303905 -8.010039 ]]
Iteration 800 of 1000: loss=0.18 " + "l1=0.00114" + "l2=0.179 f=-0.74 shape=(1, 9000, 1)
logits [[ 4.3171735 -3.6078079  4.313678  -7.9830127]]
Iteration 900 of 1000: loss=0.17 " + "l1=0" + "l2=0.17 f=-0.739 shape=(1, 9000, 1)
logits [[ 4.2985797 -3.5901225  4.2992    -7.9622264]]
--- 266.79260873794556 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.158 " + "l1=0.158" + "l2=0 f=-0.642 shape=(1, 9000, 1)
logits [[ 6.4480953 -3.477225   3.8012426 -9.341926 ]]
Iteration 100 of 1000: loss=0.157 " + "l1=0.156" + "l2=0.000626 f=-0.64 shape=(1, 9000, 1)
logits [[ 6.3707943 -3.4555123  3.7801058 -9.254164 ]]
Iteration 200 of 1000: loss=0.157 " + "l1=0.156" + "l2=0.000727 f=-0.639 shape=(1, 9000, 1)
logits [[ 6.3530507 -3.4493806  3.774691  -9.235598 ]]
Iteration 300 of 1000: loss=0.156 " + "l1=0.155" + "l2=0.000887 f=-0.639 shape=(1, 9000, 1)
logits [[ 6.3342123 -3.4428544  3.7686746 -9.215763 ]]
Iteration 400 of 1000: loss=0.156 " + "l1=0.155" + "l2=0.00105 f=-0.639 shape=(1, 9000, 1)
logits [[ 6.316035  -3.4365435  3.7627535 -9.197183 ]]
Iteration 500 of 1000: loss=0.156 " + "l1=0.155" + "l2=0.00122 f=-0.639 shape=(1, 9000, 1)
logits [[ 6.2982116 -3.4300714  3.7564895 -9.17946  ]]
Iteration 600 of 1000: loss=0.156 " + "l1=0.154" + "l2=0.00141 f=-0.639 shape=(1, 9000, 1)
logits [[ 6.28019   -3.4233778  3.74984   -9.161906 ]]
Iteration 700 of 1000: loss=0.156 " + "l1=0.154" + "l2=0.00157 f=-0.639 shape=(1, 9000, 1)
logits [[ 6.2618737 -3.4170253  3.7432868 -9.144689 ]]
Iteration 800 of 1000: loss=0.155 " + "l1=0.154" + "l2=0.00175 f=-0.64 shape=(1, 9000, 1)
logits [[ 6.243143  -3.410255   3.7361176 -9.127336 ]]
Iteration 900 of 1000: loss=0.155 " + "l1=0.153" + "l2=0.00193 f=-0.64 shape=(1, 9000, 1)
logits [[ 6.22319   -3.4027312  3.7284641 -9.109544 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.58 " + "l1=1.58" + "l2=0 f=-0.642 shape=(1, 9000, 1)
logits [[ 6.4480953 -3.477225   3.8012426 -9.341926 ]]
Iteration 100 of 1000: loss=1.48 " + "l1=1.41" + "l2=0.0667 f=-0.626 shape=(1, 9000, 1)
logits [[ 5.6371603 -3.203102   3.5154614 -8.451886 ]]
Iteration 200 of 1000: loss=1.42 " + "l1=1.31" + "l2=0.108 f=-0.62 shape=(1, 9000, 1)
logits [[ 5.154548  -2.9943912  3.296257  -7.9373717]]
Iteration 300 of 1000: loss=1.35 " + "l1=1.21" + "l2=0.141 f=-0.612 shape=(1, 9000, 1)
logits [[ 4.688179  -2.7419891  3.0351849 -7.4312067]]
Iteration 400 of 1000: loss=1.28 " + "l1=1.11" + "l2=0.167 f=-0.609 shape=(1, 9000, 1)
logits [[ 4.196753  -2.505129   2.792925  -6.9204197]]
Iteration 500 of 1000: loss=1.21 " + "l1=1.02" + "l2=0.188 f=-0.598 shape=(1, 9000, 1)
logits [[ 3.7813315 -2.330093   2.6060405 -6.4481397]]
Iteration 600 of 1000: loss=1.16 " + "l1=0.952" + "l2=0.205 f=-0.58 shape=(1, 9000, 1)
logits [[ 3.4702182 -2.2218008  2.481021  -6.0499353]]
Iteration 700 of 1000: loss=1.11 " + "l1=0.888" + "l2=0.224 f=-0.569 shape=(1, 9000, 1)
logits [[ 3.1813884 -2.117424   2.355124  -5.6939917]]
Iteration 800 of 1000: loss=1.07 " + "l1=0.835" + "l2=0.236 f=-0.561 shape=(1, 9000, 1)
logits [[ 2.9429114 -2.0306304  2.2518096 -5.407837 ]]
Iteration 900 of 1000: loss=1.03 " + "l1=0.78" + "l2=0.254 f=-0.551 shape=(1, 9000, 1)
logits [[ 2.6972094 -1.9431446  2.1491113 -5.1073737]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=15.8 " + "l1=15.8" + "l2=0 f=-0.642 shape=(1, 9000, 1)
logits [[ 6.4480953 -3.477225   3.8012426 -9.341926 ]]
Iteration 100 of 1000: loss=6.34 " + "l1=2.39" + "l2=3.95 f=-0.348 shape=(1, 9000, 1)
logits [[ 0.5826456  -0.87090707  0.6450504  -1.7472658 ]]
Iteration 200 of 1000: loss=4.26 " + "l1=0.133" + "l2=4.13 f=-0.311 shape=(1, 9000, 1)
logits [[-0.4081797  -0.3693241  -0.16623206 -0.2991873 ]]
Iteration 300 of 1000: loss=3.39 " + "l1=0.0325" + "l2=3.36 f=-0.328 shape=(1, 9000, 1)
logits [[-0.5294158  -0.35924962 -0.19509836 -0.22761413]]
Iteration 400 of 1000: loss=3.03 " + "l1=0.017" + "l2=3.02 f=-0.344 shape=(1, 9000, 1)
logits [[-0.6066377  -0.34284824 -0.20550689 -0.22249773]]
Iteration 500 of 1000: loss=2.78 " + "l1=0.0437" + "l2=2.73 f=-0.354 shape=(1, 9000, 1)
logits [[-0.66971993 -0.31646958 -0.19331369 -0.23700437]]
Iteration 600 of 1000: loss=2.58 " + "l1=0" + "l2=2.58 f=-0.349 shape=(1, 9000, 1)
logits [[-0.71500415 -0.31034547 -0.19085865 -0.17824104]]
Iteration 700 of 1000: loss=2.47 " + "l1=0.0343" + "l2=2.43 f=-0.348 shape=(1, 9000, 1)
logits [[-0.70491475 -0.31391042 -0.16900763 -0.20328322]]
Iteration 800 of 1000: loss=2.36 " + "l1=0.0148" + "l2=2.35 f=-0.343 shape=(1, 9000, 1)
logits [[-0.71092016 -0.31363982 -0.16695526 -0.18172446]]
Iteration 900 of 1000: loss=2.28 " + "l1=0.0361" + "l2=2.24 f=-0.344 shape=(1, 9000, 1)
logits [[-0.7141292  -0.3195722  -0.15281768 -0.18894693]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=8.68 " + "l1=8.68" + "l2=0 f=-0.642 shape=(1, 9000, 1)
logits [[ 6.4480953 -3.477225   3.8012426 -9.341926 ]]
Iteration 100 of 1000: loss=4.94 " + "l1=2.84" + "l2=2.09 f=-0.471 shape=(1, 9000, 1)
logits [[ 1.5795001 -1.4418547  1.5709784 -3.5921395]]
Iteration 200 of 1000: loss=3.82 " + "l1=1.67" + "l2=2.15 f=-0.415 shape=(1, 9000, 1)
logits [[ 0.6917736  -0.74374866  0.71224725 -2.3220859 ]]
Iteration 300 of 1000: loss=3.14 " + "l1=1" + "l2=2.14 f=-0.4 shape=(1, 9000, 1)
logits [[ 0.18759936 -0.4683432   0.2519836  -1.5693035 ]]
Iteration 400 of 1000: loss=2.81 " + "l1=0.722" + "l2=2.09 f=-0.4 shape=(1, 9000, 1)
logits [[-0.05525309 -0.4139581   0.09133925 -1.2209265 ]]
Iteration 500 of 1000: loss=2.58 " + "l1=0.572" + "l2=2.01 f=-0.394 shape=(1, 9000, 1)
logits [[-0.171613   -0.38769263  0.01265793 -1.0281878 ]]
Iteration 600 of 1000: loss=2.3 " + "l1=0.415" + "l2=1.88 f=-0.371 shape=(1, 9000, 1)
logits [[-0.25860444 -0.40929803 -0.0318548  -0.7862251 ]]
Iteration 700 of 1000: loss=1.96 " + "l1=0.164" + "l2=1.79 f=-0.352 shape=(1, 9000, 1)
logits [[-0.45869616 -0.4425164  -0.10495453 -0.40245527]]
Iteration 800 of 1000: loss=1.64 " + "l1=0.0155" + "l2=1.63 f=-0.35 shape=(1, 9000, 1)
logits [[-0.5286949  -0.4605707  -0.19140618 -0.21953973]]
Iteration 900 of 1000: loss=1.47 " + "l1=0.0224" + "l2=1.45 f=-0.359 shape=(1, 9000, 1)
logits [[-0.49411303 -0.4701855  -0.2151184  -0.2557719 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.13 " + "l1=5.13" + "l2=0 f=-0.642 shape=(1, 9000, 1)
logits [[ 6.4480953 -3.477225   3.8012426 -9.341926 ]]
Iteration 100 of 1000: loss=3.74 " + "l1=2.79" + "l2=0.95 f=-0.585 shape=(1, 9000, 1)
logits [[ 3.0253599 -2.2071948  2.3900998 -5.5501738]]
Iteration 200 of 1000: loss=3.1 " + "l1=1.83" + "l2=1.27 f=-0.521 shape=(1, 9000, 1)
logits [[ 1.6897956 -1.5181928  1.6910402 -3.9457874]]
Iteration 300 of 1000: loss=2.65 " + "l1=1.5" + "l2=1.16 f=-0.476 shape=(1, 9000, 1)
logits [[ 1.2985837 -1.1999192  1.3011476 -3.304895 ]]
Iteration 400 of 1000: loss=2.31 " + "l1=1.18" + "l2=1.13 f=-0.446 shape=(1, 9000, 1)
logits [[ 0.8998216 -0.9026132  0.9168111 -2.6994905]]
Iteration 500 of 1000: loss=1.98 " + "l1=0.878" + "l2=1.1 f=-0.432 shape=(1, 9000, 1)
logits [[ 0.55561763 -0.74836385  0.584683   -2.1182263 ]]
Iteration 600 of 1000: loss=1.73 " + "l1=0.67" + "l2=1.06 f=-0.421 shape=(1, 9000, 1)
logits [[ 0.28894648 -0.73290765  0.40967548 -1.6511301 ]]
Iteration 700 of 1000: loss=1.54 " + "l1=0.519" + "l2=1.03 f=-0.416 shape=(1, 9000, 1)
logits [[ 0.10699667 -0.7633493   0.2939016  -1.3024982 ]]
Iteration 800 of 1000: loss=1.4 " + "l1=0.371" + "l2=1.02 f=-0.424 shape=(1, 9000, 1)
logits [[-0.1201057  -0.7728296   0.16956349 -0.9719865 ]]
Iteration 900 of 1000: loss=1.28 " + "l1=0.258" + "l2=1.02 f=-0.429 shape=(1, 9000, 1)
logits [[-0.2767397  -0.8027826   0.07750735 -0.7156811 ]]
--- 287.00161504745483 seconds ---
Adv result:3
Loading record A04905
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0705 " + "l1=0.0705" + "l2=0 f=-0.428 shape=(1, 9000, 1)
logits [[ 4.438204  -2.6099765  2.8664262 -6.405518 ]]
Iteration 100 of 1000: loss=0.0702 " + "l1=0.0699" + "l2=0.000241 f=-0.426 shape=(1, 9000, 1)
logits [[ 4.3992214 -2.5930831  2.853928  -6.36411  ]]
Iteration 200 of 1000: loss=0.0701 " + "l1=0.0699" + "l2=0.000218 f=-0.426 shape=(1, 9000, 1)
logits [[ 4.3948107 -2.5905309  2.8521192 -6.3593473]]
Iteration 300 of 1000: loss=0.07 " + "l1=0.0697" + "l2=0.000255 f=-0.425 shape=(1, 9000, 1)
logits [[ 4.3873725 -2.5867329  2.8493938 -6.351173 ]]
Iteration 400 of 1000: loss=0.0699 " + "l1=0.0696" + "l2=0.000317 f=-0.425 shape=(1, 9000, 1)
logits [[ 4.3791714 -2.5826898  2.8464062 -6.3421273]]
Iteration 500 of 1000: loss=0.0699 " + "l1=0.0695" + "l2=0.000411 f=-0.424 shape=(1, 9000, 1)
logits [[ 4.3707027 -2.578662   2.8433108 -6.3327975]]
Iteration 600 of 1000: loss=0.0699 " + "l1=0.0694" + "l2=0.00049 f=-0.424 shape=(1, 9000, 1)
logits [[ 4.362327  -2.5747488  2.840252  -6.323498 ]]
Iteration 700 of 1000: loss=0.0698 " + "l1=0.0692" + "l2=0.00057 f=-0.423 shape=(1, 9000, 1)
logits [[ 4.3540316 -2.5709395  2.8372672 -6.3143077]]
Iteration 800 of 1000: loss=0.0698 " + "l1=0.0691" + "l2=0.00066 f=-0.423 shape=(1, 9000, 1)
logits [[ 4.345537  -2.5672555  2.8342798 -6.3049784]]
Iteration 900 of 1000: loss=0.0698 " + "l1=0.069" + "l2=0.000826 f=-0.423 shape=(1, 9000, 1)
logits [[ 4.3371863 -2.5638125  2.8313766 -6.2957892]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.705 " + "l1=0.705" + "l2=0 f=-0.428 shape=(1, 9000, 1)
logits [[ 4.438204  -2.6099765  2.8664262 -6.405518 ]]
Iteration 100 of 1000: loss=0.677 " + "l1=0.661" + "l2=0.0153 f=-0.415 shape=(1, 9000, 1)
logits [[ 4.1344137 -2.478015   2.7691565 -6.085399 ]]
Iteration 200 of 1000: loss=0.663 " + "l1=0.642" + "l2=0.0208 f=-0.41 shape=(1, 9000, 1)
logits [[ 3.9913034 -2.4260998  2.732216  -5.9356065]]
Iteration 300 of 1000: loss=0.649 " + "l1=0.623" + "l2=0.026 f=-0.403 shape=(1, 9000, 1)
logits [[ 3.8580174 -2.3712227  2.6924455 -5.7910953]]
Iteration 400 of 1000: loss=0.637 " + "l1=0.607" + "l2=0.0298 f=-0.396 shape=(1, 9000, 1)
logits [[ 3.7486227 -2.319338   2.657087  -5.670315 ]]
Iteration 500 of 1000: loss=0.626 " + "l1=0.592" + "l2=0.0336 f=-0.391 shape=(1, 9000, 1)
logits [[ 3.6453462 -2.2745686  2.6257155 -5.5585055]]
Iteration 600 of 1000: loss=0.617 " + "l1=0.579" + "l2=0.0373 f=-0.386 shape=(1, 9000, 1)
logits [[ 3.5559158 -2.236481   2.5971153 -5.461483 ]]
Iteration 700 of 1000: loss=0.609 " + "l1=0.568" + "l2=0.0407 f=-0.382 shape=(1, 9000, 1)
logits [[ 3.474858  -2.2044415  2.5740132 -5.373853 ]]
Iteration 800 of 1000: loss=0.601 " + "l1=0.557" + "l2=0.044 f=-0.379 shape=(1, 9000, 1)
logits [[ 3.3970413 -2.1739063  2.549242  -5.287766 ]]
Iteration 900 of 1000: loss=0.593 " + "l1=0.545" + "l2=0.0481 f=-0.375 shape=(1, 9000, 1)
logits [[ 3.3064208 -2.139087   2.52135   -5.190005 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.05 " + "l1=7.05" + "l2=0 f=-0.428 shape=(1, 9000, 1)
logits [[ 4.438204  -2.6099765  2.8664262 -6.405518 ]]
Iteration 100 of 1000: loss=4.49 " + "l1=3.31" + "l2=1.19 f=-0.292 shape=(1, 9000, 1)
logits [[ 1.8713622 -1.4271523  1.8797199 -3.4912143]]
Iteration 200 of 1000: loss=3.66 " + "l1=2.29" + "l2=1.38 f=-0.248 shape=(1, 9000, 1)
logits [[ 1.3618984 -0.9152897  1.3711016 -2.8103974]]
Iteration 300 of 1000: loss=3.13 " + "l1=1.75" + "l2=1.38 f=-0.224 shape=(1, 9000, 1)
logits [[ 1.1023244  -0.64495164  1.1062331  -2.460695  ]]
Iteration 400 of 1000: loss=2.7 " + "l1=1.27" + "l2=1.43 f=-0.189 shape=(1, 9000, 1)
logits [[ 0.857346  -0.404486   0.8643345 -2.0718033]]
Iteration 500 of 1000: loss=2.36 " + "l1=0.938" + "l2=1.42 f=-0.16 shape=(1, 9000, 1)
logits [[ 0.65503037 -0.25644314  0.68189764 -1.7190558 ]]
Iteration 600 of 1000: loss=2.03 " + "l1=0.593" + "l2=1.44 f=-0.145 shape=(1, 9000, 1)
logits [[ 0.4895877  -0.09635051  0.49617985 -1.4712662 ]]
Iteration 700 of 1000: loss=1.73 " + "l1=0.279" + "l2=1.45 f=-0.151 shape=(1, 9000, 1)
logits [[ 0.2916107   0.04124396  0.32067624 -1.2571293 ]]
Iteration 800 of 1000: loss=1.59 " + "l1=0.102" + "l2=1.48 f=-0.138 shape=(1, 9000, 1)
logits [[ 0.20488068  0.11313993  0.21537788 -1.0868108 ]]
Iteration 900 of 1000: loss=1.48 " + "l1=0.0304" + "l2=1.45 f=-0.137 shape=(1, 9000, 1)
logits [[ 0.15300931  0.15196174  0.18236347 -1.03428   ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.88 " + "l1=3.88" + "l2=0 f=-0.428 shape=(1, 9000, 1)
logits [[ 4.438204  -2.6099765  2.8664262 -6.405518 ]]
Iteration 100 of 1000: loss=2.99 " + "l1=2.53" + "l2=0.465 f=-0.328 shape=(1, 9000, 1)
logits [[ 2.7081237 -1.8864452  2.3684752 -4.5012393]]
Iteration 200 of 1000: loss=2.63 " + "l1=2.03" + "l2=0.595 f=-0.291 shape=(1, 9000, 1)
logits [[ 2.0926971 -1.6008415  2.096203  -3.7511935]]
Iteration 300 of 1000: loss=2.31 " + "l1=1.69" + "l2=0.616 f=-0.272 shape=(1, 9000, 1)
logits [[ 1.7767909 -1.3013916  1.7633094 -3.327467 ]]
Iteration 400 of 1000: loss=2.08 " + "l1=1.47" + "l2=0.615 f=-0.249 shape=(1, 9000, 1)
logits [[ 1.5561118 -1.1165146  1.5556583 -2.992564 ]]
Iteration 500 of 1000: loss=1.9 " + "l1=1.28" + "l2=0.614 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.3584502  -0.97209764  1.362553   -2.7164147 ]]
Iteration 600 of 1000: loss=1.75 " + "l1=1.11" + "l2=0.637 f=-0.225 shape=(1, 9000, 1)
logits [[ 1.1751016  -0.83620244  1.1842914  -2.4216375 ]]
Iteration 700 of 1000: loss=1.66 " + "l1=1.01" + "l2=0.648 f=-0.206 shape=(1, 9000, 1)
logits [[ 1.0885098  -0.75223464  1.0916188  -2.2508404 ]]
Iteration 800 of 1000: loss=1.59 " + "l1=0.911" + "l2=0.675 f=-0.194 shape=(1, 9000, 1)
logits [[ 0.9921652  -0.65990174  0.99629056 -2.1035001 ]]
Iteration 900 of 1000: loss=1.46 " + "l1=0.719" + "l2=0.745 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.8365661  -0.46943483  0.8384913  -1.933323  ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.46 " + "l1=5.46" + "l2=0 f=-0.428 shape=(1, 9000, 1)
logits [[ 4.438204  -2.6099765  2.8664262 -6.405518 ]]
Iteration 100 of 1000: loss=3.81 " + "l1=2.95" + "l2=0.862 f=-0.303 shape=(1, 9000, 1)
logits [[ 2.1471026 -1.6519961  2.1506612 -3.8561947]]
Iteration 200 of 1000: loss=3.18 " + "l1=2.21" + "l2=0.973 f=-0.266 shape=(1, 9000, 1)
logits [[ 1.6538521 -1.1951348  1.650539  -3.17361  ]]
Iteration 300 of 1000: loss=2.78 " + "l1=1.77" + "l2=1.02 f=-0.235 shape=(1, 9000, 1)
logits [[ 1.3511221 -0.9162973  1.3613461 -2.7374856]]
Iteration 400 of 1000: loss=2.48 " + "l1=1.47" + "l2=1.01 f=-0.214 shape=(1, 9000, 1)
logits [[ 1.1635277 -0.7308165  1.1636132 -2.45398  ]]
Iteration 500 of 1000: loss=2.21 " + "l1=1.23" + "l2=0.985 f=-0.191 shape=(1, 9000, 1)
logits [[ 0.9965744 -0.5822073  1.0010147 -2.1797445]]
Iteration 600 of 1000: loss=2 " + "l1=1.01" + "l2=0.992 f=-0.173 shape=(1, 9000, 1)
logits [[ 0.8367652  -0.46096164  0.8425804  -1.9116395 ]]
Iteration 700 of 1000: loss=1.74 " + "l1=0.645" + "l2=1.1 f=-0.162 shape=(1, 9000, 1)
logits [[ 0.60150194 -0.22005716  0.6122221  -1.6398659 ]]
Iteration 800 of 1000: loss=1.59 " + "l1=0.472" + "l2=1.12 f=-0.153 shape=(1, 9000, 1)
logits [[ 0.48254856 -0.12290228  0.4858463  -1.4577582 ]]
Iteration 900 of 1000: loss=1.52 " + "l1=0.385" + "l2=1.14 f=-0.148 shape=(1, 9000, 1)
logits [[ 0.41234574 -0.07481747  0.42187357 -1.3523293 ]]
--- 281.4730291366577 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0157 " + "l1=0.0157" + "l2=0 f=-0.428 shape=(1, 9000, 1)
logits [[ 4.438204  -2.6099765  2.8664262 -6.405518 ]]
Iteration 100 of 1000: loss=0.0155 " + "l1=0.0154" + "l2=0.000191 f=-0.428 shape=(1, 9000, 1)
logits [[ 4.405684  -2.610695   2.8704984 -6.378951 ]]
Iteration 200 of 1000: loss=0.0155 " + "l1=0.0153" + "l2=0.000151 f=-0.428 shape=(1, 9000, 1)
logits [[ 4.4046464 -2.611029   2.871466  -6.378787 ]]
Iteration 300 of 1000: loss=0.0155 " + "l1=0.0153" + "l2=0.000179 f=-0.428 shape=(1, 9000, 1)
logits [[ 4.400672  -2.6110766  2.8723807 -6.3759212]]
Iteration 400 of 1000: loss=0.0155 " + "l1=0.0152" + "l2=0.000229 f=-0.429 shape=(1, 9000, 1)
logits [[ 4.396175  -2.6109896  2.8732204 -6.3726025]]
Iteration 500 of 1000: loss=0.0154 " + "l1=0.0152" + "l2=0.00026 f=-0.429 shape=(1, 9000, 1)
logits [[ 4.391644  -2.6107123  2.8737733 -6.3691545]]
Iteration 600 of 1000: loss=0.0156 " + "l1=0.0151" + "l2=0.000449 f=-0.429 shape=(1, 9000, 1)
logits [[ 4.3870916 -2.6102931  2.8741164 -6.3656287]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.157 " + "l1=0.157" + "l2=0 f=-0.428 shape=(1, 9000, 1)
logits [[ 4.438204  -2.6099765  2.8664262 -6.405518 ]]
Iteration 100 of 1000: loss=0.141 " + "l1=0.133" + "l2=0.00873 f=-0.43 shape=(1, 9000, 1)
logits [[ 4.2294183 -2.6192906  2.9028928 -6.231267 ]]
Iteration 200 of 1000: loss=0.135 " + "l1=0.123" + "l2=0.012 f=-0.43 shape=(1, 9000, 1)
logits [[ 4.148415  -2.6234398  2.9161162 -6.1609297]]
Iteration 300 of 1000: loss=0.13 " + "l1=0.115" + "l2=0.015 f=-0.429 shape=(1, 9000, 1)
logits [[ 4.0708156 -2.620568   2.9236858 -6.091473 ]]
Iteration 400 of 1000: loss=0.125 " + "l1=0.108" + "l2=0.0174 f=-0.428 shape=(1, 9000, 1)
logits [[ 3.9995422 -2.6132495  2.924533  -6.022302 ]]
Iteration 500 of 1000: loss=0.12 " + "l1=0.1" + "l2=0.0196 f=-0.428 shape=(1, 9000, 1)
logits [[ 3.9244468 -2.6040986  2.921558  -5.9557776]]
Iteration 600 of 1000: loss=0.115 " + "l1=0.0936" + "l2=0.0213 f=-0.428 shape=(1, 9000, 1)
logits [[ 3.8578672 -2.5922053  2.92139   -5.8992906]]
Iteration 700 of 1000: loss=0.11 " + "l1=0.0874" + "l2=0.0228 f=-0.427 shape=(1, 9000, 1)
logits [[ 3.7982304 -2.5818954  2.9243913 -5.8497515]]
Iteration 800 of 1000: loss=0.106 " + "l1=0.0822" + "l2=0.0236 f=-0.427 shape=(1, 9000, 1)
logits [[ 3.7521403 -2.5749795  2.9305933 -5.817142 ]]
Iteration 900 of 1000: loss=0.102 " + "l1=0.0776" + "l2=0.0243 f=-0.428 shape=(1, 9000, 1)
logits [[ 3.7125406 -2.5690136  2.9363112 -5.79055  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.57 " + "l1=1.57" + "l2=0 f=-0.428 shape=(1, 9000, 1)
logits [[ 4.438204  -2.6099765  2.8664262 -6.405518 ]]
Iteration 100 of 1000: loss=0.359 " + "l1=0.0107" + "l2=0.348 f=-0.398 shape=(1, 9000, 1)
logits [[ 2.9932444 -2.531127   2.9825027 -5.038447 ]]
Iteration 200 of 1000: loss=0.253 " + "l1=0" + "l2=0.253 f=-0.396 shape=(1, 9000, 1)
logits [[ 2.9859867 -2.5318189  2.9888022 -5.026863 ]]
Iteration 300 of 1000: loss=0.205 " + "l1=0" + "l2=0.205 f=-0.395 shape=(1, 9000, 1)
logits [[ 2.9707053 -2.5193748  2.9787617 -5.0084157]]
Iteration 400 of 1000: loss=0.166 " + "l1=0" + "l2=0.166 f=-0.395 shape=(1, 9000, 1)
logits [[ 2.9632962 -2.5066016  2.9673836 -5.003308 ]]
Iteration 500 of 1000: loss=0.144 " + "l1=0" + "l2=0.144 f=-0.394 shape=(1, 9000, 1)
logits [[ 2.9456973 -2.4985988  2.9646008 -4.988892 ]]
Iteration 600 of 1000: loss=0.124 " + "l1=0" + "l2=0.124 f=-0.397 shape=(1, 9000, 1)
logits [[ 2.9380717 -2.4952807  2.962613  -4.9938803]]
Iteration 700 of 1000: loss=0.106 " + "l1=0" + "l2=0.106 f=-0.399 shape=(1, 9000, 1)
logits [[ 2.9553134 -2.4917004  2.9568613 -5.016762 ]]
Iteration 800 of 1000: loss=0.0973 " + "l1=0" + "l2=0.0973 f=-0.4 shape=(1, 9000, 1)
logits [[ 2.942831  -2.4864023  2.9507766 -5.006945 ]]
Iteration 900 of 1000: loss=0.0894 " + "l1=0" + "l2=0.0894 f=-0.401 shape=(1, 9000, 1)
logits [[ 2.9391038 -2.4865427  2.945786  -5.002875 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.864 " + "l1=0.864" + "l2=0 f=-0.428 shape=(1, 9000, 1)
logits [[ 4.438204  -2.6099765  2.8664262 -6.405518 ]]
Iteration 100 of 1000: loss=0.399 " + "l1=0.151" + "l2=0.248 f=-0.411 shape=(1, 9000, 1)
logits [[ 3.261828  -2.5700815  2.9881444 -5.324303 ]]
Iteration 200 of 1000: loss=0.242 " + "l1=0.000247" + "l2=0.242 f=-0.397 shape=(1, 9000, 1)
logits [[ 3.0014806 -2.543058   3.0010319 -5.0478296]]
Iteration 300 of 1000: loss=0.179 " + "l1=0.000151" + "l2=0.179 f=-0.395 shape=(1, 9000, 1)
logits [[ 2.9902146 -2.528746   2.9899406 -5.032023 ]]
Iteration 400 of 1000: loss=0.145 " + "l1=0" + "l2=0.145 f=-0.396 shape=(1, 9000, 1)
logits [[ 2.973504  -2.5138578  2.9775827 -5.0225163]]
Iteration 500 of 1000: loss=0.123 " + "l1=0" + "l2=0.123 f=-0.4 shape=(1, 9000, 1)
logits [[ 2.9637363 -2.502819   2.9718938 -5.0316873]]
Iteration 600 of 1000: loss=0.108 " + "l1=0.00394" + "l2=0.104 f=-0.404 shape=(1, 9000, 1)
logits [[ 2.9742541 -2.4990683  2.9670823 -5.057272 ]]
Iteration 700 of 1000: loss=0.0953 " + "l1=0" + "l2=0.0953 f=-0.405 shape=(1, 9000, 1)
logits [[ 2.9557078 -2.4936953  2.9609337 -5.04352  ]]
Iteration 800 of 1000: loss=0.088 " + "l1=0" + "l2=0.088 f=-0.406 shape=(1, 9000, 1)
logits [[ 2.9472544 -2.4916663  2.9559329 -5.0362873]]
Iteration 900 of 1000: loss=0.0805 " + "l1=0" + "l2=0.0805 f=-0.408 shape=(1, 9000, 1)
logits [[ 2.9506211 -2.492504   2.953218  -5.042184 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.511 " + "l1=0.511" + "l2=0 f=-0.428 shape=(1, 9000, 1)
logits [[ 4.438204  -2.6099765  2.8664262 -6.405518 ]]
Iteration 100 of 1000: loss=0.34 " + "l1=0.249" + "l2=0.0912 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.7252657 -2.612834   2.9589157 -5.7754083]]
Iteration 200 of 1000: loss=0.276 " + "l1=0.158" + "l2=0.118 f=-0.417 shape=(1, 9000, 1)
logits [[ 3.4597614 -2.5790136  2.9748135 -5.525098 ]]
Iteration 300 of 1000: loss=0.223 " + "l1=0.0846" + "l2=0.138 f=-0.408 shape=(1, 9000, 1)
logits [[ 3.2488961 -2.5519185  2.988468  -5.315858 ]]
Iteration 400 of 1000: loss=0.163 " + "l1=0.00572" + "l2=0.157 f=-0.395 shape=(1, 9000, 1)
logits [[ 3.004664  -2.5161033  2.9870596 -5.056379 ]]
Iteration 500 of 1000: loss=0.127 " + "l1=0" + "l2=0.127 f=-0.398 shape=(1, 9000, 1)
logits [[ 2.972922  -2.5005183  2.9734843 -5.0382257]]
Iteration 600 of 1000: loss=0.107 " + "l1=0" + "l2=0.107 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.9671736 -2.4952037  2.9694526 -5.0508833]]
Iteration 700 of 1000: loss=0.0943 " + "l1=0" + "l2=0.0943 f=-0.405 shape=(1, 9000, 1)
logits [[ 2.959257  -2.4898264  2.9612508 -5.0517545]]
Iteration 800 of 1000: loss=0.0848 " + "l1=0" + "l2=0.0848 f=-0.408 shape=(1, 9000, 1)
logits [[ 2.9612834 -2.494214   2.9624078 -5.059989 ]]
Iteration 900 of 1000: loss=0.0789 " + "l1=0.00137" + "l2=0.0776 f=-0.409 shape=(1, 9000, 1)
logits [[ 2.9639513 -2.497952   2.959746  -5.062801 ]]
--- 267.6488814353943 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.108 " + "l1=0.108" + "l2=0 f=-0.428 shape=(1, 9000, 1)
logits [[ 4.438204  -2.6099765  2.8664262 -6.405518 ]]
Iteration 100 of 1000: loss=0.108 " + "l1=0.107" + "l2=0.000513 f=-0.426 shape=(1, 9000, 1)
logits [[ 4.378187  -2.5987673  2.8522222 -6.334453 ]]
Iteration 200 of 1000: loss=0.107 " + "l1=0.107" + "l2=0.000516 f=-0.425 shape=(1, 9000, 1)
logits [[ 4.367416  -2.595737   2.848695  -6.3220015]]
Iteration 300 of 1000: loss=0.107 " + "l1=0.107" + "l2=0.000615 f=-0.425 shape=(1, 9000, 1)
logits [[ 4.353701  -2.5919788  2.8445349 -6.305379 ]]
Iteration 400 of 1000: loss=0.107 " + "l1=0.106" + "l2=0.000704 f=-0.424 shape=(1, 9000, 1)
logits [[ 4.339197  -2.5878572  2.8400083 -6.2877135]]
Iteration 500 of 1000: loss=0.107 " + "l1=0.106" + "l2=0.000875 f=-0.423 shape=(1, 9000, 1)
logits [[ 4.3242545 -2.5834773  2.8350928 -6.26943  ]]
Iteration 600 of 1000: loss=0.107 " + "l1=0.106" + "l2=0.00103 f=-0.423 shape=(1, 9000, 1)
logits [[ 4.3089967 -2.5788355  2.82984   -6.250688 ]]
Iteration 700 of 1000: loss=0.106 " + "l1=0.105" + "l2=0.0012 f=-0.422 shape=(1, 9000, 1)
logits [[ 4.293655  -2.5742955  2.8245409 -6.232094 ]]
Iteration 800 of 1000: loss=0.106 " + "l1=0.105" + "l2=0.00138 f=-0.421 shape=(1, 9000, 1)
logits [[ 4.278546  -2.5698106  2.8192484 -6.2137656]]
Iteration 900 of 1000: loss=0.106 " + "l1=0.105" + "l2=0.00156 f=-0.421 shape=(1, 9000, 1)
logits [[ 4.2633324 -2.5653162  2.813959  -6.1955357]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.08 " + "l1=1.08" + "l2=0 f=-0.428 shape=(1, 9000, 1)
logits [[ 4.438204  -2.6099765  2.8664262 -6.405518 ]]
Iteration 100 of 1000: loss=1.01 " + "l1=0.964" + "l2=0.0417 f=-0.409 shape=(1, 9000, 1)
logits [[ 3.8879395 -2.5038624  2.7357724 -5.754644 ]]
Iteration 200 of 1000: loss=0.972 " + "l1=0.917" + "l2=0.0548 f=-0.394 shape=(1, 9000, 1)
logits [[ 3.6786017 -2.445175   2.6810923 -5.4921694]]
Iteration 300 of 1000: loss=0.94 " + "l1=0.87" + "l2=0.0697 f=-0.377 shape=(1, 9000, 1)
logits [[ 3.4721682 -2.3779109  2.6248345 -5.2287817]]
Iteration 400 of 1000: loss=0.91 " + "l1=0.826" + "l2=0.0844 f=-0.363 shape=(1, 9000, 1)
logits [[ 3.2806919 -2.3194842  2.5664377 -4.977801 ]]
Iteration 500 of 1000: loss=0.879 " + "l1=0.777" + "l2=0.102 f=-0.347 shape=(1, 9000, 1)
logits [[ 3.066138  -2.2667248  2.513474  -4.7016964]]
Iteration 600 of 1000: loss=0.849 " + "l1=0.732" + "l2=0.117 f=-0.336 shape=(1, 9000, 1)
logits [[ 2.8656409 -2.2084663  2.4513705 -4.454048 ]]
Iteration 700 of 1000: loss=0.819 " + "l1=0.689" + "l2=0.13 f=-0.326 shape=(1, 9000, 1)
logits [[ 2.6752973 -2.1528482  2.38331   -4.210534 ]]
Iteration 800 of 1000: loss=0.791 " + "l1=0.65" + "l2=0.141 f=-0.319 shape=(1, 9000, 1)
logits [[ 2.5101197 -2.1149955  2.3183706 -3.9902296]]
Iteration 900 of 1000: loss=0.769 " + "l1=0.618" + "l2=0.151 f=-0.309 shape=(1, 9000, 1)
logits [[ 2.380856  -2.076301   2.2586713 -3.7991738]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.8 " + "l1=10.8" + "l2=0 f=-0.428 shape=(1, 9000, 1)
logits [[ 4.438204  -2.6099765  2.8664262 -6.405518 ]]
Iteration 100 of 1000: loss=5.14 " + "l1=2.72" + "l2=2.42 f=-0.147 shape=(1, 9000, 1)
logits [[ 1.0740175 -1.7115005  1.3855127 -1.334298 ]]
Iteration 200 of 1000: loss=3.49 " + "l1=0.435" + "l2=3.06 f=-0.0274 shape=(1, 9000, 1)
logits [[ 0.25583065 -1.3196676   0.6946397   0.25979054]]
Iteration 300 of 1000: loss=2.68 " + "l1=0.0444" + "l2=2.63 f=-0.0267 shape=(1, 9000, 1)
logits [[ 0.06991962 -1.2722913   0.57007873  0.5256515 ]]
Iteration 400 of 1000: loss=2.31 " + "l1=0" + "l2=2.31 f=-0.0326 shape=(1, 9000, 1)
logits [[-0.01580091 -1.2557783   0.5651838   0.57616204]]
Iteration 500 of 1000: loss=2.13 " + "l1=0.0437" + "l2=2.08 f=-0.0322 shape=(1, 9000, 1)
logits [[-0.00935688 -1.2296565   0.5768715   0.5332108 ]]
Iteration 600 of 1000: loss=1.98 " + "l1=0.0198" + "l2=1.96 f=-0.0242 shape=(1, 9000, 1)
logits [[-0.01213458 -1.1852236   0.5602641   0.5404208 ]]
Iteration 700 of 1000: loss=1.85 " + "l1=0.0152" + "l2=1.84 f=-0.0211 shape=(1, 9000, 1)
logits [[-0.01573244 -1.1424918   0.5445191   0.52935624]]
Iteration 800 of 1000: loss=1.73 " + "l1=0" + "l2=1.73 f=-0.0175 shape=(1, 9000, 1)
logits [[-0.03049021 -1.0949113   0.52453244  0.53077465]]
Iteration 900 of 1000: loss=1.64 " + "l1=0" + "l2=1.64 f=-0.00889 shape=(1, 9000, 1)
logits [[-0.02626882 -1.053758    0.5107545   0.53373146]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.96 " + "l1=5.96" + "l2=0 f=-0.428 shape=(1, 9000, 1)
logits [[ 4.438204  -2.6099765  2.8664262 -6.405518 ]]
Iteration 100 of 1000: loss=3.74 " + "l1=2.74" + "l2=1.01 f=-0.25 shape=(1, 9000, 1)
logits [[ 1.9973671 -2.0245976  2.0007715 -2.9745097]]
Iteration 200 of 1000: loss=3.13 " + "l1=1.91" + "l2=1.22 f=-0.206 shape=(1, 9000, 1)
logits [[ 1.4195893 -1.7986592  1.5139569 -1.9598688]]
Iteration 300 of 1000: loss=2.71 " + "l1=1.35" + "l2=1.36 f=-0.149 shape=(1, 9000, 1)
logits [[ 1.0125939 -1.5871761  1.2205522 -1.2425734]]
Iteration 400 of 1000: loss=2.28 " + "l1=0.825" + "l2=1.46 f=-0.0934 shape=(1, 9000, 1)
logits [[ 0.5967041 -1.4314128  0.9806076 -0.5196818]]
Iteration 500 of 1000: loss=1.83 " + "l1=0.164" + "l2=1.66 f=-0.0325 shape=(1, 9000, 1)
logits [[ 0.09032075 -1.2049837   0.6417754   0.34293863]]
Iteration 600 of 1000: loss=1.46 " + "l1=0.00666" + "l2=1.45 f=-0.0167 shape=(1, 9000, 1)
logits [[-0.07620778 -1.1138842   0.5676962   0.5555946 ]]
Iteration 700 of 1000: loss=1.29 " + "l1=0.0111" + "l2=1.28 f=-0.0369 shape=(1, 9000, 1)
logits [[-0.08208142 -1.1107162   0.5327492   0.51252216]]
Iteration 800 of 1000: loss=1.19 " + "l1=0" + "l2=1.19 f=-0.0456 shape=(1, 9000, 1)
logits [[-0.11149683 -1.1120964   0.5117737   0.5294056 ]]
Iteration 900 of 1000: loss=1.11 " + "l1=0" + "l2=1.11 f=-0.0512 shape=(1, 9000, 1)
logits [[-0.10992809 -1.128661    0.516507    0.51741236]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.52 " + "l1=3.52" + "l2=0 f=-0.428 shape=(1, 9000, 1)
logits [[ 4.438204  -2.6099765  2.8664262 -6.405518 ]]
Iteration 100 of 1000: loss=2.65 " + "l1=2.13" + "l2=0.514 f=-0.316 shape=(1, 9000, 1)
logits [[ 2.55627   -2.206814   2.3878906 -4.000314 ]]
Iteration 200 of 1000: loss=2.3 " + "l1=1.76" + "l2=0.548 f=-0.266 shape=(1, 9000, 1)
logits [[ 2.1252425 -2.045344   2.1282449 -3.273551 ]]
Iteration 300 of 1000: loss=2.08 " + "l1=1.52" + "l2=0.556 f=-0.24 shape=(1, 9000, 1)
logits [[ 1.8656553 -1.8914042  1.8725632 -2.8082733]]
Iteration 400 of 1000: loss=1.85 " + "l1=1.23" + "l2=0.617 f=-0.21 shape=(1, 9000, 1)
logits [[ 1.5176682 -1.7276574  1.582514  -2.2136974]]
Iteration 500 of 1000: loss=1.64 " + "l1=0.953" + "l2=0.691 f=-0.164 shape=(1, 9000, 1)
logits [[ 1.1704484 -1.6133832  1.3593246 -1.572986 ]]
Iteration 600 of 1000: loss=1.45 " + "l1=0.682" + "l2=0.764 f=-0.114 shape=(1, 9000, 1)
logits [[ 0.87277186 -1.4839083   1.1260505  -0.9721803 ]]
Iteration 700 of 1000: loss=1.25 " + "l1=0.411" + "l2=0.84 f=-0.0761 shape=(1, 9000, 1)
logits [[ 0.56035656 -1.3245461   0.8621839  -0.40243357]]
Iteration 800 of 1000: loss=1.05 " + "l1=0.157" + "l2=0.889 f=-0.0268 shape=(1, 9000, 1)
logits [[ 0.2623552 -1.1883743  0.6513612  0.1673617]]
Iteration 900 of 1000: loss=0.876 " + "l1=0.0178" + "l2=0.858 f=0.0174 shape=(1, 9000, 1)
logits [[ 0.1538958  -1.1557941   0.56309426  0.50826114]]
--- 290.8714077472687 seconds ---
Adv result:3
Loading record A04936
(1, 3056)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0365 " + "l1=0.0365" + "l2=0 f=-0.666 shape=(1, 9000, 1)
logits [[ 2.0372121  -1.6080514  -3.2716358   0.17786866]]
Iteration 100 of 1000: loss=0.0342 " + "l1=0.033" + "l2=0.00112 f=-0.663 shape=(1, 9000, 1)
logits [[ 1.8192344  -1.4845531  -3.291601    0.30382103]]
Iteration 200 of 1000: loss=0.0333 " + "l1=0.0319" + "l2=0.00138 f=-0.662 shape=(1, 9000, 1)
logits [[ 1.7431729  -1.4476731  -3.298001    0.35494527]]
Iteration 300 of 1000: loss=0.0325 " + "l1=0.0308" + "l2=0.00168 f=-0.66 shape=(1, 9000, 1)
logits [[ 1.6689525  -1.4120322  -3.3019109   0.40369883]]
Iteration 400 of 1000: loss=0.0317 " + "l1=0.0296" + "l2=0.00205 f=-0.659 shape=(1, 9000, 1)
logits [[ 1.5904093 -1.37427   -3.304453   0.4517718]]
Iteration 500 of 1000: loss=0.0309 " + "l1=0.0286" + "l2=0.00232 f=-0.657 shape=(1, 9000, 1)
logits [[ 1.519928   -1.3426331  -3.3045905   0.49910045]]
Iteration 600 of 1000: loss=0.0302 " + "l1=0.0275" + "l2=0.00277 f=-0.653 shape=(1, 9000, 1)
logits [[ 1.4428428  -1.3041432  -3.2957683   0.54542875]]
Iteration 700 of 1000: loss=0.0295 " + "l1=0.0262" + "l2=0.00337 f=-0.645 shape=(1, 9000, 1)
logits [[ 1.3585389  -1.2565402  -3.27282     0.59211427]]
Iteration 800 of 1000: loss=0.0277 " + "l1=0.023" + "l2=0.0047 f=-0.622 shape=(1, 9000, 1)
logits [[ 1.1751786  -1.128855   -3.1758215   0.64270175]]
Iteration 900 of 1000: loss=0.0258 " + "l1=0.0203" + "l2=0.00542 f=-0.602 shape=(1, 9000, 1)
logits [[ 1.0097312  -1.025142   -3.0872183   0.69564295]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.365 " + "l1=0.365" + "l2=0 f=-0.666 shape=(1, 9000, 1)
logits [[ 2.0372121  -1.6080514  -3.2716358   0.17786866]]
Iteration 100 of 1000: loss=0.179 " + "l1=0.128" + "l2=0.0508 f=-0.565 shape=(1, 9000, 1)
logits [[ 0.6029284  -0.6401084  -2.8617978   0.63792837]]
Iteration 200 of 1000: loss=0.122 " + "l1=0.06" + "l2=0.0619 f=-0.517 shape=(1, 9000, 1)
logits [[ 0.34667006 -0.25371736 -2.496823    0.33586195]]
Iteration 300 of 1000: loss=0.0827 " + "l1=0.015" + "l2=0.0677 f=-0.494 shape=(1, 9000, 1)
logits [[ 0.1494813   0.0080015  -2.2898848   0.15817839]]
Iteration 400 of 1000: loss=0.0552 " + "l1=0.000263" + "l2=0.055 f=-0.455 shape=(1, 9000, 1)
logits [[ 0.08084264  0.07821296 -2.0534847   0.07374448]]
Iteration 500 of 1000: loss=0.0483 " + "l1=0" + "l2=0.0483 f=-0.454 shape=(1, 9000, 1)
logits [[ 0.0153346   0.08964438 -2.0074365   0.08601552]]
Iteration 600 of 1000: loss=0.0448 " + "l1=0.00257" + "l2=0.0422 f=-0.463 shape=(1, 9000, 1)
logits [[ 0.08285201  0.05710583 -2.033469    0.04295278]]
Iteration 700 of 1000: loss=0.0387 " + "l1=0" + "l2=0.0387 f=-0.459 shape=(1, 9000, 1)
logits [[ 0.03604449  0.05708732 -1.9710433   0.04363564]]
Iteration 800 of 1000: loss=0.0363 " + "l1=0.00067" + "l2=0.0356 f=-0.458 shape=(1, 9000, 1)
logits [[ 0.04586454  0.0391617  -1.9453884   0.02717604]]
Iteration 900 of 1000: loss=0.0334 " + "l1=0" + "l2=0.0334 f=-0.455 shape=(1, 9000, 1)
logits [[ 0.00979249  0.03300822 -1.8899603   0.02540844]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.2 " + "l1=0.2" + "l2=0 f=-0.666 shape=(1, 9000, 1)
logits [[ 2.0372121  -1.6080514  -3.2716358   0.17786866]]
Iteration 100 of 1000: loss=0.128 " + "l1=0.0907" + "l2=0.0371 f=-0.592 shape=(1, 9000, 1)
logits [[ 0.7697792 -0.8787766 -2.9987903  0.7386632]]
Iteration 200 of 1000: loss=0.108 " + "l1=0.0823" + "l2=0.0261 f=-0.577 shape=(1, 9000, 1)
logits [[ 0.71488875 -0.780886   -2.9459577   0.7048473 ]]
Iteration 300 of 1000: loss=0.0827 " + "l1=0.0503" + "l2=0.0323 f=-0.527 shape=(1, 9000, 1)
logits [[ 0.48656318 -0.42829627 -2.645948    0.48085433]]
Iteration 400 of 1000: loss=0.0729 " + "l1=0.0379" + "l2=0.035 f=-0.513 shape=(1, 9000, 1)
logits [[ 0.38946614 -0.28157288 -2.5685923   0.4071252 ]]
Iteration 500 of 1000: loss=0.0634 " + "l1=0.0239" + "l2=0.0395 f=-0.483 shape=(1, 9000, 1)
logits [[ 0.29025665 -0.14480358 -2.3680508   0.28961957]]
Iteration 600 of 1000: loss=0.054 " + "l1=0.00879" + "l2=0.0452 f=-0.454 shape=(1, 9000, 1)
logits [[ 0.16509952  0.00534137 -2.1423104   0.15707874]]
Iteration 700 of 1000: loss=0.0437 " + "l1=0.000545" + "l2=0.0432 f=-0.449 shape=(1, 9000, 1)
logits [[ 0.08797058  0.07805454 -2.0377834   0.0771177 ]]
Iteration 800 of 1000: loss=0.0392 " + "l1=0.000313" + "l2=0.0389 f=-0.451 shape=(1, 9000, 1)
logits [[ 0.07567856  0.0699921  -2.0095778   0.06038941]]
Iteration 900 of 1000: loss=0.037 " + "l1=0.000549" + "l2=0.0364 f=-0.449 shape=(1, 9000, 1)
logits [[ 0.05296177  0.06156931 -1.9835322   0.07155705]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.118 " + "l1=0.118" + "l2=0 f=-0.666 shape=(1, 9000, 1)
logits [[ 2.0372121  -1.6080514  -3.2716358   0.17786866]]
Iteration 100 of 1000: loss=0.0972 " + "l1=0.0871" + "l2=0.0101 f=-0.657 shape=(1, 9000, 1)
logits [[ 1.4034978 -1.2774099 -3.2909958  0.5357705]]
Iteration 200 of 1000: loss=0.0789 " + "l1=0.0593" + "l2=0.0196 f=-0.599 shape=(1, 9000, 1)
logits [[ 0.8802825  -0.94310415 -3.0461752   0.713401  ]]
Iteration 300 of 1000: loss=0.0714 " + "l1=0.0539" + "l2=0.0175 f=-0.588 shape=(1, 9000, 1)
logits [[ 0.77144337 -0.8830046  -3.0166361   0.7742017 ]]
Iteration 400 of 1000: loss=0.0669 " + "l1=0.0501" + "l2=0.0167 f=-0.581 shape=(1, 9000, 1)
logits [[ 0.7366549  -0.8063652  -2.989107    0.73517394]]
Iteration 500 of 1000: loss=0.0583 " + "l1=0.0379" + "l2=0.0204 f=-0.546 shape=(1, 9000, 1)
logits [[ 0.5857084  -0.57879335 -2.778858    0.5870949 ]]
Iteration 600 of 1000: loss=0.0538 " + "l1=0.0346" + "l2=0.0193 f=-0.54 shape=(1, 9000, 1)
logits [[ 0.5378264  -0.51758397 -2.725819    0.54550356]]
Iteration 700 of 1000: loss=0.0495 " + "l1=0.0307" + "l2=0.0188 f=-0.531 shape=(1, 9000, 1)
logits [[ 0.49567577 -0.44974923 -2.658887    0.49018532]]
Iteration 800 of 1000: loss=0.0471 " + "l1=0.0272" + "l2=0.0199 f=-0.519 shape=(1, 9000, 1)
logits [[ 0.4549885  -0.38062304 -2.5897145   0.4393293 ]]
Iteration 900 of 1000: loss=0.0436 " + "l1=0.0222" + "l2=0.0214 f=-0.499 shape=(1, 9000, 1)
logits [[ 0.37750658 -0.29326686 -2.4697852   0.39049104]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.159 " + "l1=0.159" + "l2=0 f=-0.666 shape=(1, 9000, 1)
logits [[ 2.0372121  -1.6080514  -3.2716358   0.17786866]]
Iteration 100 of 1000: loss=0.112 " + "l1=0.0846" + "l2=0.0277 f=-0.608 shape=(1, 9000, 1)
logits [[ 0.9571614 -0.9762111 -3.075216   0.6627576]]
Iteration 200 of 1000: loss=0.0938 " + "l1=0.0708" + "l2=0.023 f=-0.588 shape=(1, 9000, 1)
logits [[ 0.7555263 -0.8632231 -2.9989693  0.755753 ]]
Iteration 300 of 1000: loss=0.0776 " + "l1=0.0508" + "l2=0.0268 f=-0.542 shape=(1, 9000, 1)
logits [[ 0.58296645 -0.57668704 -2.758309    0.5849553 ]]
Iteration 400 of 1000: loss=0.069 " + "l1=0.0412" + "l2=0.0278 f=-0.528 shape=(1, 9000, 1)
logits [[ 0.5042436  -0.43824834 -2.673427    0.49581426]]
Iteration 500 of 1000: loss=0.0634 " + "l1=0.0336" + "l2=0.0298 f=-0.518 shape=(1, 9000, 1)
logits [[ 0.43618837 -0.33134013 -2.6102045   0.43298802]]
Iteration 600 of 1000: loss=0.0584 " + "l1=0.0258" + "l2=0.0326 f=-0.498 shape=(1, 9000, 1)
logits [[ 0.362655   -0.22716893 -2.4893947   0.36190897]]
Iteration 700 of 1000: loss=0.0524 " + "l1=0.0164" + "l2=0.0361 f=-0.468 shape=(1, 9000, 1)
logits [[ 0.25652245 -0.11734407 -2.2643929   0.25376838]]
Iteration 800 of 1000: loss=0.0448 " + "l1=0.00665" + "l2=0.0381 f=-0.45 shape=(1, 9000, 1)
logits [[ 0.14870387  0.00250306 -2.104075    0.15445817]]
Iteration 900 of 1000: loss=0.0396 " + "l1=0.00131" + "l2=0.0383 f=-0.447 shape=(1, 9000, 1)
logits [[ 0.08943799  0.05956063 -2.007984    0.07062707]]
--- 293.6376051902771 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0531 " + "l1=0.0531" + "l2=0 f=-0.666 shape=(1, 9000, 1)
logits [[ 2.0372121  -1.6080514  -3.2716358   0.17786866]]
Iteration 100 of 1000: loss=0.0522 " + "l1=0.0517" + "l2=0.00048 f=-0.663 shape=(1, 9000, 1)
logits [[ 1.8954153  -1.5416653  -3.2721393   0.26547772]]
Iteration 200 of 1000: loss=0.0518 " + "l1=0.0512" + "l2=0.000555 f=-0.662 shape=(1, 9000, 1)
logits [[ 1.8511821  -1.523527   -3.2717628   0.29671383]]
Iteration 300 of 1000: loss=0.0515 " + "l1=0.0508" + "l2=0.00068 f=-0.661 shape=(1, 9000, 1)
logits [[ 1.8070395  -1.505004   -3.271286    0.32677472]]
Iteration 400 of 1000: loss=0.0511 " + "l1=0.0503" + "l2=0.000826 f=-0.659 shape=(1, 9000, 1)
logits [[ 1.7609608  -1.486538   -3.2709074   0.35862446]]
Iteration 500 of 1000: loss=0.0509 " + "l1=0.0498" + "l2=0.00103 f=-0.658 shape=(1, 9000, 1)
logits [[ 1.7131876 -1.467367  -3.2696295  0.3909459]]
Iteration 600 of 1000: loss=0.0505 " + "l1=0.0493" + "l2=0.00121 f=-0.657 shape=(1, 9000, 1)
logits [[ 1.6664939 -1.4490412 -3.2667305  0.4220163]]
Iteration 700 of 1000: loss=0.0503 " + "l1=0.0488" + "l2=0.00145 f=-0.655 shape=(1, 9000, 1)
logits [[ 1.6182508 -1.4301571 -3.2625577  0.4544881]]
Iteration 800 of 1000: loss=0.05 " + "l1=0.0482" + "l2=0.00175 f=-0.653 shape=(1, 9000, 1)
logits [[ 1.5661443  -1.4092165  -3.2571647   0.48779938]]
Iteration 900 of 1000: loss=0.0495 " + "l1=0.0473" + "l2=0.00226 f=-0.647 shape=(1, 9000, 1)
logits [[ 1.4937515 -1.3703066 -3.2337637  0.5231277]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.531 " + "l1=0.531" + "l2=0 f=-0.666 shape=(1, 9000, 1)
logits [[ 2.0372121  -1.6080514  -3.2716358   0.17786866]]
Iteration 100 of 1000: loss=0.378 " + "l1=0.316" + "l2=0.0619 f=-0.545 shape=(1, 9000, 1)
logits [[ 0.65208197 -0.98641354 -2.5011394   0.6548279 ]]
Iteration 200 of 1000: loss=0.344 " + "l1=0.284" + "l2=0.0597 f=-0.528 shape=(1, 9000, 1)
logits [[ 0.56192064 -0.9719484  -2.2714663   0.57060814]]
Iteration 300 of 1000: loss=0.281 " + "l1=0.203" + "l2=0.0773 f=-0.407 shape=(1, 9000, 1)
logits [[ 0.4120581 -0.8766145 -1.5981277  0.4361379]]
Iteration 400 of 1000: loss=0.253 " + "l1=0.17" + "l2=0.0831 f=-0.38 shape=(1, 9000, 1)
logits [[ 0.28434658 -0.72925144 -1.388132    0.31305397]]
Iteration 500 of 1000: loss=0.2 " + "l1=0.0719" + "l2=0.128 f=-0.315 shape=(1, 9000, 1)
logits [[ 0.016803   -0.5501848  -0.7024247  -0.02597647]]
Iteration 600 of 1000: loss=0.133 " + "l1=0.00243" + "l2=0.13 f=-0.309 shape=(1, 9000, 1)
logits [[-0.22934249 -0.5249563  -0.25366908 -0.22992945]]
Iteration 700 of 1000: loss=0.0978 " + "l1=0.00169" + "l2=0.0962 f=-0.335 shape=(1, 9000, 1)
logits [[-0.2883699  -0.46115828 -0.30399066 -0.2871048 ]]
Iteration 800 of 1000: loss=0.0843 " + "l1=0" + "l2=0.0843 f=-0.351 shape=(1, 9000, 1)
logits [[-0.3572416  -0.41580668 -0.2997628  -0.3320516 ]]
Iteration 900 of 1000: loss=0.0738 " + "l1=0" + "l2=0.0738 f=-0.359 shape=(1, 9000, 1)
logits [[-0.35228923 -0.4155313  -0.32874644 -0.33920226]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.292 " + "l1=0.292" + "l2=0 f=-0.666 shape=(1, 9000, 1)
logits [[ 2.0372121  -1.6080514  -3.2716358   0.17786866]]
Iteration 100 of 1000: loss=0.244 " + "l1=0.213" + "l2=0.0309 f=-0.592 shape=(1, 9000, 1)
logits [[ 0.93075943 -0.9975783  -2.9374943   0.63639945]]
Iteration 200 of 1000: loss=0.219 " + "l1=0.189" + "l2=0.0307 f=-0.568 shape=(1, 9000, 1)
logits [[ 0.71592695 -0.9839306  -2.7118704   0.7064557 ]]
Iteration 300 of 1000: loss=0.205 " + "l1=0.174" + "l2=0.0307 f=-0.549 shape=(1, 9000, 1)
logits [[ 0.6580792 -1.0088689 -2.5081363  0.6617792]]
Iteration 400 of 1000: loss=0.186 " + "l1=0.152" + "l2=0.0337 f=-0.498 shape=(1, 9000, 1)
logits [[ 0.5486602 -0.9207133 -2.1913898  0.5705118]]
Iteration 500 of 1000: loss=0.164 " + "l1=0.124" + "l2=0.0397 f=-0.458 shape=(1, 9000, 1)
logits [[ 0.3842296 -0.7812245 -1.844033   0.4080259]]
Iteration 600 of 1000: loss=0.151 " + "l1=0.107" + "l2=0.0437 f=-0.44 shape=(1, 9000, 1)
logits [[ 0.28074175 -0.6771222  -1.6546743   0.28946579]]
Iteration 700 of 1000: loss=0.139 " + "l1=0.0935" + "l2=0.0455 f=-0.432 shape=(1, 9000, 1)
logits [[ 0.19539641 -0.5998836  -1.5055014   0.18091294]]
Iteration 800 of 1000: loss=0.125 " + "l1=0.0749" + "l2=0.0502 f=-0.429 shape=(1, 9000, 1)
logits [[ 0.03369638 -0.45994487 -1.3253149   0.03576064]]
Iteration 900 of 1000: loss=0.0984 " + "l1=0.0402" + "l2=0.0581 f=-0.432 shape=(1, 9000, 1)
logits [[-0.248685   -0.24964519 -0.98027384 -0.25080115]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.411 " + "l1=0.411" + "l2=0 f=-0.666 shape=(1, 9000, 1)
logits [[ 2.0372121  -1.6080514  -3.2716358   0.17786866]]
Iteration 100 of 1000: loss=0.317 " + "l1=0.273" + "l2=0.0439 f=-0.578 shape=(1, 9000, 1)
logits [[ 0.71809816 -0.9385885  -2.8092406   0.71826214]]
Iteration 200 of 1000: loss=0.284 " + "l1=0.237" + "l2=0.0471 f=-0.537 shape=(1, 9000, 1)
logits [[ 0.6246111 -0.9811281 -2.4279647  0.634527 ]]
Iteration 300 of 1000: loss=0.265 " + "l1=0.216" + "l2=0.0493 f=-0.52 shape=(1, 9000, 1)
logits [[ 0.5495301  -0.94123787 -2.2356431   0.54932326]]
Iteration 400 of 1000: loss=0.207 " + "l1=0.136" + "l2=0.0716 f=-0.406 shape=(1, 9000, 1)
logits [[ 0.24791604 -0.62226015 -1.5021231   0.25099045]]
Iteration 500 of 1000: loss=0.18 " + "l1=0.0998" + "l2=0.0802 f=-0.396 shape=(1, 9000, 1)
logits [[ 0.02986988 -0.38052207 -1.2574561   0.02291201]]
Iteration 600 of 1000: loss=0.139 " + "l1=0.0479" + "l2=0.0909 f=-0.394 shape=(1, 9000, 1)
logits [[-0.2506437  -0.24006756 -0.85087514 -0.23267698]]
Iteration 700 of 1000: loss=0.108 " + "l1=0.0148" + "l2=0.0935 f=-0.384 shape=(1, 9000, 1)
logits [[-0.34354424 -0.3460987  -0.5184751  -0.32751083]]
Iteration 800 of 1000: loss=0.0895 " + "l1=0.000589" + "l2=0.0889 f=-0.395 shape=(1, 9000, 1)
logits [[-0.3810123  -0.40740007 -0.3886088  -0.402413  ]]
Iteration 900 of 1000: loss=0.082 " + "l1=0" + "l2=0.082 f=-0.392 shape=(1, 9000, 1)
logits [[-0.38172352 -0.4497568  -0.36309952 -0.37192982]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.352 " + "l1=0.352" + "l2=0 f=-0.666 shape=(1, 9000, 1)
logits [[ 2.0372121  -1.6080514  -3.2716358   0.17786866]]
Iteration 100 of 1000: loss=0.281 " + "l1=0.238" + "l2=0.0424 f=-0.58 shape=(1, 9000, 1)
logits [[ 0.73793733 -0.93945795 -2.8585548   0.7405621 ]]
Iteration 200 of 1000: loss=0.251 " + "l1=0.212" + "l2=0.0392 f=-0.547 shape=(1, 9000, 1)
logits [[ 0.65200305 -0.9908356  -2.5270429   0.6766686 ]]
Iteration 300 of 1000: loss=0.238 " + "l1=0.197" + "l2=0.0408 f=-0.533 shape=(1, 9000, 1)
logits [[ 0.59666115 -0.98353714 -2.3604584   0.6167089 ]]
Iteration 400 of 1000: loss=0.201 " + "l1=0.152" + "l2=0.0497 f=-0.433 shape=(1, 9000, 1)
logits [[ 0.46145892 -0.8870034  -1.7972987   0.4911488 ]]
Iteration 500 of 1000: loss=0.185 " + "l1=0.133" + "l2=0.0526 f=-0.417 shape=(1, 9000, 1)
logits [[ 0.37855172 -0.77692646 -1.6241338   0.35453892]]
Iteration 600 of 1000: loss=0.171 " + "l1=0.116" + "l2=0.0548 f=-0.411 shape=(1, 9000, 1)
logits [[ 0.24962941 -0.6574783  -1.4915271   0.25625664]]
Iteration 700 of 1000: loss=0.147 " + "l1=0.0865" + "l2=0.0604 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.04725431 -0.45388296 -1.2583166   0.04599439]]
Iteration 800 of 1000: loss=0.108 " + "l1=0.0385" + "l2=0.0691 f=-0.404 shape=(1, 9000, 1)
logits [[-0.26830247 -0.2573094  -0.83638084 -0.2553175 ]]
Iteration 900 of 1000: loss=0.0862 " + "l1=0.0132" + "l2=0.073 f=-0.395 shape=(1, 9000, 1)
logits [[-0.3534512  -0.34335774 -0.5403038  -0.34166056]]
--- 293.2910752296448 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0186 " + "l1=0.0186" + "l2=0 f=-0.666 shape=(1, 9000, 1)
logits [[ 2.0372121  -1.6080514  -3.2716358   0.17786866]]
Iteration 100 of 1000: loss=0.0156 " + "l1=0.0143" + "l2=0.00122 f=-0.661 shape=(1, 9000, 1)
logits [[ 1.7968434 -1.5042081 -3.298807   0.3638789]]
Iteration 200 of 1000: loss=0.0142 " + "l1=0.0125" + "l2=0.00171 f=-0.658 shape=(1, 9000, 1)
logits [[ 1.6995089  -1.4701748  -3.3098714   0.44788516]]
Iteration 300 of 1000: loss=0.013 " + "l1=0.0107" + "l2=0.00227 f=-0.656 shape=(1, 9000, 1)
logits [[ 1.6029493  -1.4390944  -3.3182838   0.53218573]]
Iteration 400 of 1000: loss=0.0118 " + "l1=0.00896" + "l2=0.00279 f=-0.653 shape=(1, 9000, 1)
logits [[ 1.5102985  -1.4129839  -3.3243468   0.61389244]]
Iteration 500 of 1000: loss=0.0106 " + "l1=0.00719" + "l2=0.00338 f=-0.65 shape=(1, 9000, 1)
logits [[ 1.4183732  -1.390041   -3.329906    0.69965965]]
Iteration 600 of 1000: loss=0.00928 " + "l1=0.00529" + "l2=0.00399 f=-0.647 shape=(1, 9000, 1)
logits [[ 1.3198025 -1.3665413 -3.3332613  0.790943 ]]
Iteration 700 of 1000: loss=0.00802 " + "l1=0.00336" + "l2=0.00466 f=-0.644 shape=(1, 9000, 1)
logits [[ 1.2209129  -1.3451114  -3.3363547   0.88472897]]
Iteration 800 of 1000: loss=0.0067 " + "l1=0.00146" + "l2=0.00525 f=-0.64 shape=(1, 9000, 1)
logits [[ 1.1248639  -1.3260986  -3.3379214   0.97933704]]
Iteration 900 of 1000: loss=0.00531 " + "l1=1.71e-05" + "l2=0.00529 f=-0.637 shape=(1, 9000, 1)
logits [[ 1.0539505 -1.3160102 -3.3393466  1.0522357]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0093 " + "l1=0.0093" + "l2=0 f=-0.666 shape=(1, 9000, 1)
logits [[ 2.0372121  -1.6080514  -3.2716358   0.17786866]]
Iteration 100 of 1000: loss=0.00844 " + "l1=0.00806" + "l2=0.000375 f=-0.663 shape=(1, 9000, 1)
logits [[ 1.8986809  -1.549373   -3.2867916   0.28655952]]
Iteration 200 of 1000: loss=0.00813 " + "l1=0.00768" + "l2=0.000448 f=-0.661 shape=(1, 9000, 1)
logits [[ 1.8582157  -1.5342731  -3.291551    0.32214403]]
Iteration 300 of 1000: loss=0.00784 " + "l1=0.00728" + "l2=0.000559 f=-0.66 shape=(1, 9000, 1)
logits [[ 1.8162844  -1.5191735  -3.2963228   0.35930997]]
Iteration 400 of 1000: loss=0.00757 " + "l1=0.00688" + "l2=0.000693 f=-0.659 shape=(1, 9000, 1)
logits [[ 1.7726656  -1.5036229  -3.3010645   0.39746398]]
Iteration 500 of 1000: loss=0.00736 " + "l1=0.00649" + "l2=0.000866 f=-0.657 shape=(1, 9000, 1)
logits [[ 1.732036  -1.4902667 -3.3050597  0.433699 ]]
Iteration 600 of 1000: loss=0.00712 " + "l1=0.00611" + "l2=0.00102 f=-0.656 shape=(1, 9000, 1)
logits [[ 1.6912975  -1.4770074  -3.3085186   0.46968085]]
Iteration 700 of 1000: loss=0.00694 " + "l1=0.00573" + "l2=0.00121 f=-0.655 shape=(1, 9000, 1)
logits [[ 1.6512265  -1.4647684  -3.3113785   0.50547475]]
Iteration 800 of 1000: loss=0.00675 " + "l1=0.00536" + "l2=0.00139 f=-0.654 shape=(1, 9000, 1)
logits [[ 1.6119984 -1.4531962 -3.3136995  0.5404719]]
Iteration 900 of 1000: loss=0.00658 " + "l1=0.00498" + "l2=0.0016 f=-0.652 shape=(1, 9000, 1)
logits [[ 1.5719283  -1.4415165  -3.3164246   0.57632065]]
const [0.0075]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0139 " + "l1=0.0139" + "l2=0 f=-0.666 shape=(1, 9000, 1)
logits [[ 2.0372121  -1.6080514  -3.2716358   0.17786866]]
Iteration 100 of 1000: loss=0.0122 " + "l1=0.0114" + "l2=0.000731 f=-0.662 shape=(1, 9000, 1)
logits [[ 1.8480694 -1.5266424 -3.2926579  0.324873 ]]
Iteration 200 of 1000: loss=0.0114 " + "l1=0.0105" + "l2=0.000966 f=-0.66 shape=(1, 9000, 1)
logits [[ 1.7808228  -1.5020111  -3.3013015   0.38343817]]
Iteration 300 of 1000: loss=0.0108 " + "l1=0.00953" + "l2=0.00124 f=-0.658 shape=(1, 9000, 1)
logits [[ 1.7136595 -1.479554  -3.3083875  0.4427973]]
Iteration 400 of 1000: loss=0.0102 " + "l1=0.00857" + "l2=0.00158 f=-0.656 shape=(1, 9000, 1)
logits [[ 1.6455615 -1.4572967 -3.3140805  0.5023589]]
Iteration 500 of 1000: loss=0.0095 " + "l1=0.00762" + "l2=0.00188 f=-0.654 shape=(1, 9000, 1)
logits [[ 1.5779241 -1.436662  -3.3193202  0.5625398]]
Iteration 600 of 1000: loss=0.00891 " + "l1=0.00671" + "l2=0.0022 f=-0.652 shape=(1, 9000, 1)
logits [[ 1.5140618 -1.4193684 -3.323523   0.6200331]]
Iteration 700 of 1000: loss=0.00832 " + "l1=0.00575" + "l2=0.00258 f=-0.65 shape=(1, 9000, 1)
logits [[ 1.4471467 -1.4012597 -3.3270357  0.6808466]]
Iteration 800 of 1000: loss=0.00776 " + "l1=0.00476" + "l2=0.003 f=-0.647 shape=(1, 9000, 1)
logits [[ 1.3784018 -1.382768  -3.3295343  0.7439158]]
Iteration 900 of 1000: loss=0.00711 " + "l1=0.00376" + "l2=0.00336 f=-0.645 shape=(1, 9000, 1)
logits [[ 1.3100227  -1.3662099  -3.332219    0.80919486]]
const [0.00875]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0163 " + "l1=0.0163" + "l2=0 f=-0.666 shape=(1, 9000, 1)
logits [[ 2.0372121  -1.6080514  -3.2716358   0.17786866]]
Iteration 100 of 1000: loss=0.0139 " + "l1=0.0129" + "l2=0.000958 f=-0.661 shape=(1, 9000, 1)
logits [[ 1.823205   -1.5156407  -3.2956245   0.34380692]]
Iteration 200 of 1000: loss=0.0129 " + "l1=0.0116" + "l2=0.00131 f=-0.659 shape=(1, 9000, 1)
logits [[ 1.7409489  -1.4864746  -3.3059971   0.41553444]]
Iteration 300 of 1000: loss=0.012 " + "l1=0.0102" + "l2=0.00173 f=-0.657 shape=(1, 9000, 1)
logits [[ 1.6586955  -1.459276   -3.3136268   0.48753458]]
Iteration 400 of 1000: loss=0.0111 " + "l1=0.00889" + "l2=0.00218 f=-0.654 shape=(1, 9000, 1)
logits [[ 1.5762808  -1.4337912  -3.3202102   0.56013507]]
Iteration 500 of 1000: loss=0.0102 " + "l1=0.00762" + "l2=0.00258 f=-0.652 shape=(1, 9000, 1)
logits [[ 1.4996051 -1.4131887 -3.32512    0.6290387]]
Iteration 600 of 1000: loss=0.00931 " + "l1=0.00627" + "l2=0.00303 f=-0.65 shape=(1, 9000, 1)
logits [[ 1.4198877 -1.3928125 -3.3295333  0.7031058]]
Iteration 700 of 1000: loss=0.00839 " + "l1=0.00488" + "l2=0.00351 f=-0.647 shape=(1, 9000, 1)
logits [[ 1.3378197 -1.3725393 -3.3324418  0.7796846]]
Iteration 800 of 1000: loss=0.00753 " + "l1=0.00344" + "l2=0.00409 f=-0.644 shape=(1, 9000, 1)
logits [[ 1.2531598 -1.3533248 -3.3354633  0.8599967]]
Iteration 900 of 1000: loss=0.00646 " + "l1=0.00195" + "l2=0.0045 f=-0.64 shape=(1, 9000, 1)
logits [[ 1.1667762 -1.3354304 -3.3368132  0.9436364]]
const [0.009375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0174 " + "l1=0.0174" + "l2=0 f=-0.666 shape=(1, 9000, 1)
logits [[ 2.0372121  -1.6080514  -3.2716358   0.17786866]]
Iteration 100 of 1000: loss=0.0147 " + "l1=0.0137" + "l2=0.00108 f=-0.661 shape=(1, 9000, 1)
logits [[ 1.8103783  -1.5101103  -3.297252    0.35377204]]
Iteration 200 of 1000: loss=0.0136 " + "l1=0.0121" + "l2=0.0015 f=-0.659 shape=(1, 9000, 1)
logits [[ 1.721087  -1.4788933 -3.30795    0.431515 ]]
Iteration 300 of 1000: loss=0.0125 " + "l1=0.0105" + "l2=0.00198 f=-0.656 shape=(1, 9000, 1)
logits [[ 1.6319298 -1.4498216 -3.3159387  0.509582 ]]
Iteration 400 of 1000: loss=0.0115 " + "l1=0.00898" + "l2=0.00248 f=-0.654 shape=(1, 9000, 1)
logits [[ 1.544411   -1.4241037  -3.3222594   0.58674186]]
Iteration 500 of 1000: loss=0.0104 " + "l1=0.00746" + "l2=0.00298 f=-0.651 shape=(1, 9000, 1)
logits [[ 1.4598957 -1.4020178 -3.3274617  0.6637749]]
Iteration 600 of 1000: loss=0.00937 " + "l1=0.00583" + "l2=0.00355 f=-0.649 shape=(1, 9000, 1)
logits [[ 1.3688774  -1.3790164  -3.3317585   0.74744165]]
Iteration 700 of 1000: loss=0.00835 " + "l1=0.00423" + "l2=0.00412 f=-0.645 shape=(1, 9000, 1)
logits [[ 1.2820157 -1.3596835 -3.3342996  0.8304915]]
Iteration 800 of 1000: loss=0.00717 " + "l1=0.0025" + "l2=0.00466 f=-0.642 shape=(1, 9000, 1)
logits [[ 1.1877633 -1.3397616 -3.3369448  0.9206463]]
Iteration 900 of 1000: loss=0.00594 " + "l1=0.000802" + "l2=0.00514 f=-0.638 shape=(1, 9000, 1)
logits [[ 1.0958017 -1.321665  -3.3380215  1.0102426]]
--- 293.19857382774353 seconds ---
Adv result:3
Loading record A04942
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0608 " + "l1=0.0608" + "l2=0 f=-0.45 shape=(1, 9000, 1)
logits [[ 4.1014113 -1.9835232  2.4380128 -6.3559685]]
Iteration 100 of 1000: loss=0.0605 " + "l1=0.0602" + "l2=0.000274 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.064063  -1.9583097  2.4236555 -6.333551 ]]
Iteration 200 of 1000: loss=0.0604 " + "l1=0.0601" + "l2=0.000265 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.0601873 -1.9545243  2.4213576 -6.3323965]]
Iteration 300 of 1000: loss=0.0604 " + "l1=0.06" + "l2=0.000336 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.0546417 -1.9498744  2.4185536 -6.3299336]]
Iteration 400 of 1000: loss=0.0603 " + "l1=0.0599" + "l2=0.00039 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.0491724 -1.9455653  2.415857  -6.3273554]]
Iteration 500 of 1000: loss=0.0603 " + "l1=0.0599" + "l2=0.000489 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.0439973 -1.9416903  2.4134088 -6.3248944]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.608 " + "l1=0.608" + "l2=0 f=-0.45 shape=(1, 9000, 1)
logits [[ 4.1014113 -1.9835232  2.4380128 -6.3559685]]
Iteration 100 of 1000: loss=0.579 " + "l1=0.564" + "l2=0.0154 f=-0.455 shape=(1, 9000, 1)
logits [[ 3.8391528 -1.8019614  2.3335888 -6.192507 ]]
Iteration 200 of 1000: loss=0.571 " + "l1=0.551" + "l2=0.0202 f=-0.456 shape=(1, 9000, 1)
logits [[ 3.761498  -1.7470298  2.3015573 -6.13882  ]]
Iteration 300 of 1000: loss=0.565 " + "l1=0.54" + "l2=0.0243 f=-0.456 shape=(1, 9000, 1)
logits [[ 3.7010386 -1.7024485  2.2737544 -6.09441  ]]
Iteration 400 of 1000: loss=0.56 " + "l1=0.532" + "l2=0.0275 f=-0.455 shape=(1, 9000, 1)
logits [[ 3.6515088 -1.6703477  2.251166  -6.05286  ]]
Iteration 500 of 1000: loss=0.556 " + "l1=0.525" + "l2=0.0309 f=-0.456 shape=(1, 9000, 1)
logits [[ 3.603335  -1.6431857  2.2312815 -6.014285 ]]
Iteration 600 of 1000: loss=0.552 " + "l1=0.517" + "l2=0.0344 f=-0.456 shape=(1, 9000, 1)
logits [[ 3.5542512 -1.6166863  2.2121572 -5.9740176]]
Iteration 700 of 1000: loss=0.548 " + "l1=0.511" + "l2=0.0366 f=-0.456 shape=(1, 9000, 1)
logits [[ 3.5158505 -1.5969312  2.1970026 -5.941709 ]]
Iteration 800 of 1000: loss=0.544 " + "l1=0.506" + "l2=0.0384 f=-0.457 shape=(1, 9000, 1)
logits [[ 3.4780157 -1.5796726  2.1830435 -5.9096475]]
Iteration 900 of 1000: loss=0.541 " + "l1=0.501" + "l2=0.0397 f=-0.459 shape=(1, 9000, 1)
logits [[ 3.4454482 -1.5681093  2.1720178 -5.8837733]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.08 " + "l1=6.08" + "l2=0 f=-0.45 shape=(1, 9000, 1)
logits [[ 4.1014113 -1.9835232  2.4380128 -6.3559685]]
Iteration 100 of 1000: loss=3.94 " + "l1=2.8" + "l2=1.14 f=-0.419 shape=(1, 9000, 1)
logits [[ 1.9691224 -0.834285   1.7185526 -4.53037  ]]
Iteration 200 of 1000: loss=3.31 " + "l1=2.15" + "l2=1.16 f=-0.423 shape=(1, 9000, 1)
logits [[ 1.5091916  -0.64554274  1.5002404  -4.0556746 ]]
Iteration 300 of 1000: loss=3.05 " + "l1=1.92" + "l2=1.12 f=-0.409 shape=(1, 9000, 1)
logits [[ 1.3690766 -0.5520173  1.372555  -3.8257442]]
Iteration 400 of 1000: loss=2.81 " + "l1=1.7" + "l2=1.11 f=-0.386 shape=(1, 9000, 1)
logits [[ 1.2456704  -0.45236754  1.2475868  -3.5832636 ]]
Iteration 500 of 1000: loss=2.63 " + "l1=1.48" + "l2=1.15 f=-0.363 shape=(1, 9000, 1)
logits [[ 1.1106213  -0.37110502  1.1134423  -3.3064032 ]]
Iteration 600 of 1000: loss=2.46 " + "l1=1.32" + "l2=1.15 f=-0.344 shape=(1, 9000, 1)
logits [[ 0.99705875 -0.31908327  0.9983347  -3.0529656 ]]
Iteration 700 of 1000: loss=2.32 " + "l1=1.18" + "l2=1.14 f=-0.33 shape=(1, 9000, 1)
logits [[ 0.90370953 -0.27315387  0.9067972  -2.85608   ]]
Iteration 800 of 1000: loss=2.22 " + "l1=1.08" + "l2=1.14 f=-0.323 shape=(1, 9000, 1)
logits [[ 0.8126811  -0.24183185  0.83686984 -2.699347  ]]
Iteration 900 of 1000: loss=2.14 " + "l1=1.02" + "l2=1.12 f=-0.318 shape=(1, 9000, 1)
logits [[ 0.76372284 -0.22789703  0.7936397  -2.6000025 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=60.8 " + "l1=60.8" + "l2=0 f=-0.45 shape=(1, 9000, 1)
logits [[ 4.1014113 -1.9835232  2.4380128 -6.3559685]]
Iteration 100 of 1000: loss=10.2 " + "l1=0.195" + "l2=9.99 f=-0.275 shape=(1, 9000, 1)
logits [[ 8.1578828e-04  5.2917486e-01  5.4866272e-01 -2.1784005e+00]]
Iteration 200 of 1000: loss=6.52 " + "l1=0" + "l2=6.52 f=-0.263 shape=(1, 9000, 1)
logits [[ 0.14767812  0.52740926  0.5188658  -2.2451808 ]]
Iteration 300 of 1000: loss=5.51 " + "l1=0" + "l2=5.51 f=-0.251 shape=(1, 9000, 1)
logits [[ 0.30535224  0.49335846  0.49317065 -2.2957532 ]]
Iteration 400 of 1000: loss=5.01 " + "l1=0" + "l2=5.01 f=-0.252 shape=(1, 9000, 1)
logits [[ 0.3322292   0.47373602  0.4561217  -2.2700534 ]]
Iteration 500 of 1000: loss=4.67 " + "l1=0" + "l2=4.67 f=-0.244 shape=(1, 9000, 1)
logits [[ 0.37064216  0.44930458  0.43692216 -2.231882  ]]
Iteration 600 of 1000: loss=4.41 " + "l1=0.0327" + "l2=4.37 f=-0.245 shape=(1, 9000, 1)
logits [[ 0.37992036  0.4326766   0.43594366 -2.228646  ]]
Iteration 700 of 1000: loss=4.22 " + "l1=0.052" + "l2=4.17 f=-0.251 shape=(1, 9000, 1)
logits [[ 0.36396727  0.4261166   0.43131688 -2.226082  ]]
Iteration 800 of 1000: loss=3.95 " + "l1=0" + "l2=3.95 f=-0.261 shape=(1, 9000, 1)
logits [[ 0.33030894  0.42370853  0.4176173  -2.2166307 ]]
Iteration 900 of 1000: loss=3.79 " + "l1=0" + "l2=3.79 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.30718228  0.42774028  0.40972233 -2.2145634 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=33.5 " + "l1=33.5" + "l2=0 f=-0.45 shape=(1, 9000, 1)
logits [[ 4.1014113 -1.9835232  2.4380128 -6.3559685]]
Iteration 100 of 1000: loss=9.59 " + "l1=4" + "l2=5.59 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.7890738   0.08980294  0.81752443 -2.8493662 ]]
Iteration 200 of 1000: loss=5.71 " + "l1=0" + "l2=5.71 f=-0.233 shape=(1, 9000, 1)
logits [[ 0.32677686  0.46072775  0.45275554 -2.1709616 ]]
Iteration 300 of 1000: loss=4.8 " + "l1=0.00594" + "l2=4.8 f=-0.224 shape=(1, 9000, 1)
logits [[ 0.3945398   0.4390216   0.44010195 -2.1702218 ]]
Iteration 400 of 1000: loss=4.4 " + "l1=0.0153" + "l2=4.39 f=-0.226 shape=(1, 9000, 1)
logits [[ 0.41819456  0.4278488   0.43063822 -2.1792903 ]]
Iteration 500 of 1000: loss=4.16 " + "l1=0" + "l2=4.16 f=-0.223 shape=(1, 9000, 1)
logits [[ 0.40292865  0.42855832  0.41871414 -2.1411316 ]]
Iteration 600 of 1000: loss=3.94 " + "l1=0" + "l2=3.94 f=-0.224 shape=(1, 9000, 1)
logits [[ 0.39031345  0.4190975   0.4171775  -2.121993  ]]
Iteration 700 of 1000: loss=3.78 " + "l1=0" + "l2=3.78 f=-0.222 shape=(1, 9000, 1)
logits [[ 0.39545152  0.41255343  0.41248935 -2.1079545 ]]
Iteration 800 of 1000: loss=3.66 " + "l1=0" + "l2=3.66 f=-0.227 shape=(1, 9000, 1)
logits [[ 0.33185264  0.4182583   0.40686238 -2.0650911 ]]
Iteration 900 of 1000: loss=3.49 " + "l1=0" + "l2=3.49 f=-0.218 shape=(1, 9000, 1)
logits [[ 0.3912047   0.40095845  0.398878   -2.0617552 ]]
--- 267.9687747955322 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0166 " + "l1=0.0166" + "l2=0 f=-0.45 shape=(1, 9000, 1)
logits [[ 4.1014113 -1.9835232  2.4380128 -6.3559685]]
Iteration 100 of 1000: loss=0.0165 " + "l1=0.0164" + "l2=0.000119 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.0797143 -1.977769   2.4372113 -6.343603 ]]
Iteration 200 of 1000: loss=0.0165 " + "l1=0.0164" + "l2=9.37e-05 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.08013   -1.9779633  2.4373953 -6.34445  ]]
Iteration 300 of 1000: loss=0.0165 " + "l1=0.0164" + "l2=0.000104 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.0785217 -1.9775921  2.4374845 -6.344075 ]]
Iteration 400 of 1000: loss=0.0165 " + "l1=0.0164" + "l2=0.000147 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.0764537 -1.9771538  2.4375472 -6.343341 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.166 " + "l1=0.166" + "l2=0 f=-0.45 shape=(1, 9000, 1)
logits [[ 4.1014113 -1.9835232  2.4380128 -6.3559685]]
Iteration 100 of 1000: loss=0.158 " + "l1=0.154" + "l2=0.00469 f=-0.457 shape=(1, 9000, 1)
logits [[ 3.9672847 -1.9441807  2.431787  -6.283512 ]]
Iteration 200 of 1000: loss=0.156 " + "l1=0.15" + "l2=0.0061 f=-0.46 shape=(1, 9000, 1)
logits [[ 3.9288187 -1.9343563  2.432384  -6.267622 ]]
Iteration 300 of 1000: loss=0.154 " + "l1=0.146" + "l2=0.00719 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.8983781 -1.9287674  2.4339287 -6.2554193]]
Iteration 400 of 1000: loss=0.152 " + "l1=0.144" + "l2=0.00818 f=-0.466 shape=(1, 9000, 1)
logits [[ 3.8716686 -1.9248513  2.4351435 -6.2442327]]
Iteration 500 of 1000: loss=0.15 " + "l1=0.141" + "l2=0.00907 f=-0.468 shape=(1, 9000, 1)
logits [[ 3.8471653 -1.9213936  2.4360342 -6.2344947]]
Iteration 600 of 1000: loss=0.149 " + "l1=0.139" + "l2=0.00966 f=-0.47 shape=(1, 9000, 1)
logits [[ 3.8257132 -1.9195535  2.436832  -6.224419 ]]
Iteration 700 of 1000: loss=0.147 " + "l1=0.137" + "l2=0.0102 f=-0.472 shape=(1, 9000, 1)
logits [[ 3.806178  -1.9179167  2.4376042 -6.215012 ]]
Iteration 800 of 1000: loss=0.146 " + "l1=0.135" + "l2=0.0107 f=-0.474 shape=(1, 9000, 1)
logits [[ 3.7865577 -1.9163473  2.4376855 -6.205276 ]]
Iteration 900 of 1000: loss=0.144 " + "l1=0.133" + "l2=0.0111 f=-0.476 shape=(1, 9000, 1)
logits [[ 3.7678518 -1.915144   2.437905  -6.195893 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.66 " + "l1=1.66" + "l2=0 f=-0.45 shape=(1, 9000, 1)
logits [[ 4.1014113 -1.9835232  2.4380128 -6.3559685]]
Iteration 100 of 1000: loss=0.942 " + "l1=0.553" + "l2=0.389 f=-0.489 shape=(1, 9000, 1)
logits [[ 2.9497466 -1.7169416  2.39699   -5.585065 ]]
Iteration 200 of 1000: loss=0.62 " + "l1=0.0838" + "l2=0.536 f=-0.527 shape=(1, 9000, 1)
logits [[ 2.4655683 -1.6960304  2.3817267 -5.2609987]]
Iteration 300 of 1000: loss=0.418 " + "l1=0.000968" + "l2=0.417 f=-0.543 shape=(1, 9000, 1)
logits [[ 2.4006639 -1.7333205  2.3996959 -5.239073 ]]
Iteration 400 of 1000: loss=0.343 " + "l1=0.00135" + "l2=0.341 f=-0.547 shape=(1, 9000, 1)
logits [[ 2.4013753 -1.7609092  2.4000235 -5.229214 ]]
Iteration 500 of 1000: loss=0.296 " + "l1=0.00874" + "l2=0.287 f=-0.553 shape=(1, 9000, 1)
logits [[ 2.402808  -1.788704   2.3940654 -5.2193694]]
Iteration 600 of 1000: loss=0.254 " + "l1=0" + "l2=0.254 f=-0.557 shape=(1, 9000, 1)
logits [[ 2.3746414 -1.7932016  2.381202  -5.1921015]]
Iteration 700 of 1000: loss=0.223 " + "l1=0.00265" + "l2=0.22 f=-0.56 shape=(1, 9000, 1)
logits [[ 2.3778355 -1.8072437  2.3751893 -5.184346 ]]
Iteration 800 of 1000: loss=0.2 " + "l1=0.0041" + "l2=0.196 f=-0.562 shape=(1, 9000, 1)
logits [[ 2.3736198 -1.8204464  2.3695166 -5.171729 ]]
Iteration 900 of 1000: loss=0.179 " + "l1=0.0017" + "l2=0.178 f=-0.564 shape=(1, 9000, 1)
logits [[ 2.3645759 -1.8301816  2.3628712 -5.152237 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.915 " + "l1=0.915" + "l2=0 f=-0.45 shape=(1, 9000, 1)
logits [[ 4.1014113 -1.9835232  2.4380128 -6.3559685]]
Iteration 100 of 1000: loss=0.691 " + "l1=0.563" + "l2=0.127 f=-0.478 shape=(1, 9000, 1)
logits [[ 3.442813  -1.8220788  2.4190292 -5.9533763]]
Iteration 200 of 1000: loss=0.609 " + "l1=0.442" + "l2=0.167 f=-0.486 shape=(1, 9000, 1)
logits [[ 3.2214217 -1.7775072  2.4178977 -5.8050466]]
Iteration 300 of 1000: loss=0.536 " + "l1=0.334" + "l2=0.203 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.023864  -1.7646825  2.4170218 -5.6705313]]
Iteration 400 of 1000: loss=0.453 " + "l1=0.211" + "l2=0.242 f=-0.523 shape=(1, 9000, 1)
logits [[ 2.786136  -1.7697061  2.4022174 -5.5108347]]
Iteration 500 of 1000: loss=0.365 " + "l1=0.0957" + "l2=0.269 f=-0.544 shape=(1, 9000, 1)
logits [[ 2.566207  -1.7894372  2.392255  -5.344881 ]]
Iteration 600 of 1000: loss=0.305 " + "l1=0.0328" + "l2=0.273 f=-0.551 shape=(1, 9000, 1)
logits [[ 2.441612  -1.7979791  2.381906  -5.2290273]]
Iteration 700 of 1000: loss=0.258 " + "l1=0.00394" + "l2=0.254 f=-0.553 shape=(1, 9000, 1)
logits [[ 2.374343  -1.8015925  2.3671784 -5.1516676]]
Iteration 800 of 1000: loss=0.228 " + "l1=0" + "l2=0.228 f=-0.55 shape=(1, 9000, 1)
logits [[ 2.3514633 -1.8076754  2.3559518 -5.0979934]]
Iteration 900 of 1000: loss=0.202 " + "l1=0" + "l2=0.202 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.342463  -1.8118373  2.3429384 -5.058046 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.541 " + "l1=0.541" + "l2=0 f=-0.45 shape=(1, 9000, 1)
logits [[ 4.1014113 -1.9835232  2.4380128 -6.3559685]]
Iteration 100 of 1000: loss=0.46 " + "l1=0.416" + "l2=0.0443 f=-0.471 shape=(1, 9000, 1)
logits [[ 3.705877  -1.882555   2.4260972 -6.1341786]]
Iteration 200 of 1000: loss=0.432 " + "l1=0.372" + "l2=0.0602 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.5743914 -1.8581903  2.429212  -6.0546155]]
Iteration 300 of 1000: loss=0.41 " + "l1=0.338" + "l2=0.0715 f=-0.483 shape=(1, 9000, 1)
logits [[ 3.4744031 -1.8425087  2.4338808 -5.999684 ]]
Iteration 400 of 1000: loss=0.389 " + "l1=0.306" + "l2=0.0822 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.3741436 -1.8271881  2.431075  -5.9331174]]
Iteration 500 of 1000: loss=0.366 " + "l1=0.274" + "l2=0.0921 f=-0.496 shape=(1, 9000, 1)
logits [[ 3.2714477 -1.8165534  2.428089  -5.866252 ]]
Iteration 600 of 1000: loss=0.341 " + "l1=0.241" + "l2=0.1 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.1714892 -1.8237407  2.4295127 -5.7932467]]
Iteration 700 of 1000: loss=0.315 " + "l1=0.21" + "l2=0.106 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.0668974 -1.8282065  2.4219875 -5.708035 ]]
Iteration 800 of 1000: loss=0.283 " + "l1=0.163" + "l2=0.12 f=-0.524 shape=(1, 9000, 1)
logits [[ 2.923274  -1.8398359  2.4217575 -5.6030664]]
Iteration 900 of 1000: loss=0.253 " + "l1=0.131" + "l2=0.123 f=-0.531 shape=(1, 9000, 1)
logits [[ 2.8104055 -1.8516728  2.4087067 -5.4929996]]
--- 261.09678506851196 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.105 " + "l1=0.105" + "l2=0 f=-0.45 shape=(1, 9000, 1)
logits [[ 4.1014113 -1.9835232  2.4380128 -6.3559685]]
Iteration 100 of 1000: loss=0.104 " + "l1=0.104" + "l2=0.000366 f=-0.449 shape=(1, 9000, 1)
logits [[ 4.060276  -1.9684093  2.423326  -6.311915 ]]
Iteration 200 of 1000: loss=0.104 " + "l1=0.104" + "l2=0.000368 f=-0.449 shape=(1, 9000, 1)
logits [[ 4.0552173 -1.9661415  2.4210494 -6.3067636]]
Iteration 300 of 1000: loss=0.104 " + "l1=0.103" + "l2=0.000452 f=-0.449 shape=(1, 9000, 1)
logits [[ 4.0487127 -1.9634931  2.4181545 -6.2998376]]
Iteration 400 of 1000: loss=0.104 " + "l1=0.103" + "l2=0.00053 f=-0.449 shape=(1, 9000, 1)
logits [[ 4.042346  -1.9610139  2.415276  -6.2927938]]
Iteration 500 of 1000: loss=0.104 " + "l1=0.103" + "l2=0.000571 f=-0.449 shape=(1, 9000, 1)
logits [[ 4.0365705 -1.9589945  2.412782  -6.2863355]]
Iteration 600 of 1000: loss=0.104 " + "l1=0.103" + "l2=0.000685 f=-0.449 shape=(1, 9000, 1)
logits [[ 4.0313454 -1.9573792  2.4106202 -6.280421 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.05 " + "l1=1.05" + "l2=0 f=-0.45 shape=(1, 9000, 1)
logits [[ 4.1014113 -1.9835232  2.4380128 -6.3559685]]
Iteration 100 of 1000: loss=1 " + "l1=0.979" + "l2=0.0248 f=-0.442 shape=(1, 9000, 1)
logits [[ 3.7842607 -1.8681471  2.3201041 -6.0061975]]
Iteration 200 of 1000: loss=0.989 " + "l1=0.955" + "l2=0.0339 f=-0.442 shape=(1, 9000, 1)
logits [[ 3.6716175 -1.8326272  2.2753828 -5.8810143]]
Iteration 300 of 1000: loss=0.977 " + "l1=0.935" + "l2=0.0422 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.5779166 -1.8040128  2.2357707 -5.7715826]]
Iteration 400 of 1000: loss=0.966 " + "l1=0.916" + "l2=0.0498 f=-0.439 shape=(1, 9000, 1)
logits [[ 3.4910734 -1.7755514  2.1970477 -5.6678853]]
Iteration 500 of 1000: loss=0.955 " + "l1=0.899" + "l2=0.0559 f=-0.437 shape=(1, 9000, 1)
logits [[ 3.4157507 -1.7527097  2.1628768 -5.575397 ]]
Iteration 600 of 1000: loss=0.943 " + "l1=0.881" + "l2=0.0621 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.3375037 -1.7399217  2.1313086 -5.4741707]]
Iteration 700 of 1000: loss=0.93 " + "l1=0.862" + "l2=0.0683 f=-0.437 shape=(1, 9000, 1)
logits [[ 3.2533898 -1.7358044  2.0984645 -5.362581 ]]
Iteration 800 of 1000: loss=0.916 " + "l1=0.843" + "l2=0.0732 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.176167  -1.7325765  2.0694447 -5.2559447]]
Iteration 900 of 1000: loss=0.903 " + "l1=0.826" + "l2=0.0772 f=-0.435 shape=(1, 9000, 1)
logits [[ 3.1048245 -1.7296361  2.040849  -5.1551323]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.5 " + "l1=10.5" + "l2=0 f=-0.45 shape=(1, 9000, 1)
logits [[ 4.1014113 -1.9835232  2.4380128 -6.3559685]]
Iteration 100 of 1000: loss=6.07 " + "l1=3.74" + "l2=2.34 f=-0.256 shape=(1, 9000, 1)
logits [[ 1.2848417 -1.1427248  1.2855233 -2.4517837]]
Iteration 200 of 1000: loss=4.62 " + "l1=2.02" + "l2=2.6 f=-0.16 shape=(1, 9000, 1)
logits [[ 0.80497235 -1.0864918   0.8319972  -1.1912353 ]]
Iteration 300 of 1000: loss=3.56 " + "l1=0.774" + "l2=2.78 f=-0.111 shape=(1, 9000, 1)
logits [[ 0.33916476 -0.98805827  0.4896603  -0.28435203]]
Iteration 400 of 1000: loss=2.78 " + "l1=0.0283" + "l2=2.76 f=-0.0888 shape=(1, 9000, 1)
logits [[ 0.11139044 -1.0124793   0.2871116   0.25880867]]
Iteration 500 of 1000: loss=2.41 " + "l1=0.0314" + "l2=2.38 f=-0.0876 shape=(1, 9000, 1)
logits [[ 0.1747384  -1.049778    0.27796564  0.24651775]]
Iteration 600 of 1000: loss=2.15 " + "l1=0" + "l2=2.15 f=-0.0825 shape=(1, 9000, 1)
logits [[ 0.2333788  -1.079115    0.25773776  0.25816244]]
Iteration 700 of 1000: loss=1.96 " + "l1=0" + "l2=1.96 f=-0.0802 shape=(1, 9000, 1)
logits [[ 0.2621652  -1.1164688   0.2636666   0.26974362]]
Iteration 800 of 1000: loss=1.84 " + "l1=0.0114" + "l2=1.83 f=-0.0801 shape=(1, 9000, 1)
logits [[ 0.27618662 -1.1468548   0.2807401   0.2693466 ]]
Iteration 900 of 1000: loss=1.76 " + "l1=0" + "l2=1.76 f=-0.0782 shape=(1, 9000, 1)
logits [[ 0.27397996 -1.1619145   0.27953845  0.2957186 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.75 " + "l1=5.75" + "l2=0 f=-0.45 shape=(1, 9000, 1)
logits [[ 4.1014113 -1.9835232  2.4380128 -6.3559685]]
Iteration 100 of 1000: loss=4.35 " + "l1=3.43" + "l2=0.918 f=-0.352 shape=(1, 9000, 1)
logits [[ 2.2288322 -1.370278   1.7372444 -4.003081 ]]
Iteration 200 of 1000: loss=3.66 " + "l1=2.32" + "l2=1.34 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.406431  -1.2152845  1.3977993 -2.820532 ]]
Iteration 300 of 1000: loss=3.18 " + "l1=1.84" + "l2=1.34 f=-0.255 shape=(1, 9000, 1)
logits [[ 1.1643329 -1.1720322  1.1642762 -2.1750977]]
Iteration 400 of 1000: loss=2.83 " + "l1=1.42" + "l2=1.41 f=-0.216 shape=(1, 9000, 1)
logits [[ 0.9416878  -1.1078893   0.94209677 -1.6385038 ]]
Iteration 500 of 1000: loss=2.55 " + "l1=1.11" + "l2=1.44 f=-0.189 shape=(1, 9000, 1)
logits [[ 0.7823461 -1.093126   0.7875618 -1.2336615]]
Iteration 600 of 1000: loss=2.27 " + "l1=0.769" + "l2=1.5 f=-0.161 shape=(1, 9000, 1)
logits [[ 0.610943   -1.1096634   0.62632495 -0.771079  ]]
Iteration 700 of 1000: loss=2 " + "l1=0.458" + "l2=1.54 f=-0.142 shape=(1, 9000, 1)
logits [[ 0.4468002  -1.0782332   0.44760814 -0.38536012]]
Iteration 800 of 1000: loss=1.78 " + "l1=0.261" + "l2=1.51 f=-0.136 shape=(1, 9000, 1)
logits [[ 0.2731851  -1.0279607   0.3420297  -0.13233465]]
Iteration 900 of 1000: loss=1.57 " + "l1=0.049" + "l2=1.52 f=-0.135 shape=(1, 9000, 1)
logits [[ 0.0588221  -0.94754875  0.21944965  0.13033316]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.4 " + "l1=3.4" + "l2=0 f=-0.45 shape=(1, 9000, 1)
logits [[ 4.1014113 -1.9835232  2.4380128 -6.3559685]]
Iteration 100 of 1000: loss=2.93 " + "l1=2.64" + "l2=0.292 f=-0.413 shape=(1, 9000, 1)
logits [[ 3.0209873 -1.6109092  2.0276072 -5.089981 ]]
Iteration 200 of 1000: loss=2.71 " + "l1=2.28" + "l2=0.437 f=-0.391 shape=(1, 9000, 1)
logits [[ 2.5400095 -1.4549049  1.8207188 -4.4680085]]
Iteration 300 of 1000: loss=2.51 " + "l1=1.97" + "l2=0.543 f=-0.369 shape=(1, 9000, 1)
logits [[ 2.146735  -1.3771118  1.6588849 -3.9035273]]
Iteration 400 of 1000: loss=2.34 " + "l1=1.74" + "l2=0.6 f=-0.352 shape=(1, 9000, 1)
logits [[ 1.8793831 -1.3426399  1.5168    -3.4600768]]
Iteration 500 of 1000: loss=2.18 " + "l1=1.5" + "l2=0.677 f=-0.338 shape=(1, 9000, 1)
logits [[ 1.596513  -1.2921989  1.3741347 -3.0294087]]
Iteration 600 of 1000: loss=2.02 " + "l1=1.27" + "l2=0.747 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.3315337 -1.2396913  1.227332  -2.5691354]]
Iteration 700 of 1000: loss=1.83 " + "l1=1.02" + "l2=0.817 f=-0.276 shape=(1, 9000, 1)
logits [[ 1.0875809 -1.2327492  1.0848176 -2.042301 ]]
Iteration 800 of 1000: loss=1.65 " + "l1=0.828" + "l2=0.825 f=-0.228 shape=(1, 9000, 1)
logits [[ 0.97050637 -1.2772454   0.9701169  -1.5761214 ]]
Iteration 900 of 1000: loss=1.52 " + "l1=0.691" + "l2=0.826 f=-0.201 shape=(1, 9000, 1)
logits [[ 0.87734365 -1.3070309   0.87466425 -1.2475584 ]]
--- 273.99843978881836 seconds ---
Adv result:3
Loading record A04943
(1, 3214)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0354 " + "l1=0.0354" + "l2=0 f=-0.572 shape=(1, 9000, 1)
logits [[ 2.0512304  -1.4889832  -2.9344504   0.08469713]]
Iteration 100 of 1000: loss=0.0339 " + "l1=0.0333" + "l2=0.000567 f=-0.57 shape=(1, 9000, 1)
logits [[ 1.9192182  -1.4120281  -2.9653666   0.17689785]]
Iteration 200 of 1000: loss=0.0331 " + "l1=0.0323" + "l2=0.000789 f=-0.57 shape=(1, 9000, 1)
logits [[ 1.8536681  -1.376899   -2.9839778   0.22714272]]
Iteration 300 of 1000: loss=0.0324 " + "l1=0.0313" + "l2=0.00108 f=-0.57 shape=(1, 9000, 1)
logits [[ 1.7901213 -1.343386  -3.0001814  0.2753535]]
Iteration 400 of 1000: loss=0.0318 " + "l1=0.0304" + "l2=0.0014 f=-0.569 shape=(1, 9000, 1)
logits [[ 1.7295039  -1.3101306  -3.0144997   0.32036227]]
Iteration 500 of 1000: loss=0.0313 " + "l1=0.0295" + "l2=0.00179 f=-0.568 shape=(1, 9000, 1)
logits [[ 1.6748511  -1.278919   -3.0261338   0.35812885]]
Iteration 600 of 1000: loss=0.0309 " + "l1=0.0288" + "l2=0.0021 f=-0.567 shape=(1, 9000, 1)
logits [[ 1.6277953  -1.2504468  -3.0358245   0.38896722]]
Iteration 700 of 1000: loss=0.0305 " + "l1=0.0281" + "l2=0.00244 f=-0.567 shape=(1, 9000, 1)
logits [[ 1.5835631  -1.2225891  -3.0453174   0.41667345]]
Iteration 800 of 1000: loss=0.0302 " + "l1=0.0275" + "l2=0.00274 f=-0.567 shape=(1, 9000, 1)
logits [[ 1.5471419 -1.1984683 -3.0525653  0.4369736]]
Iteration 900 of 1000: loss=0.0299 " + "l1=0.027" + "l2=0.00296 f=-0.567 shape=(1, 9000, 1)
logits [[ 1.517468   -1.1782535  -3.0571678   0.45083308]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.354 " + "l1=0.354" + "l2=0 f=-0.572 shape=(1, 9000, 1)
logits [[ 2.0512304  -1.4889832  -2.9344504   0.08469713]]
Iteration 100 of 1000: loss=0.142 " + "l1=0.0765" + "l2=0.0652 f=-0.499 shape=(1, 9000, 1)
logits [[ 0.38297448 -0.38158867 -2.3778353   0.37871686]]
Iteration 200 of 1000: loss=0.11 " + "l1=0.0487" + "l2=0.0616 f=-0.511 shape=(1, 9000, 1)
logits [[ 0.2706162  -0.21615776 -2.3616228   0.26503783]]
Iteration 300 of 1000: loss=0.0869 " + "l1=0.0181" + "l2=0.0688 f=-0.502 shape=(1, 9000, 1)
logits [[ 0.15273984 -0.01752959 -2.3055048   0.16324618]]
Iteration 400 of 1000: loss=0.0591 " + "l1=0.00164" + "l2=0.0574 f=-0.469 shape=(1, 9000, 1)
logits [[ 0.12168872  0.10527103 -2.2047572   0.10378411]]
Iteration 500 of 1000: loss=0.0457 " + "l1=0.000647" + "l2=0.045 f=-0.448 shape=(1, 9000, 1)
logits [[ 0.11666061  0.11019016 -2.1274574   0.10973018]]
Iteration 600 of 1000: loss=0.0403 " + "l1=0" + "l2=0.0403 f=-0.439 shape=(1, 9000, 1)
logits [[ 0.11246243  0.12204355 -2.1103668   0.11983706]]
Iteration 700 of 1000: loss=0.0366 " + "l1=0" + "l2=0.0366 f=-0.433 shape=(1, 9000, 1)
logits [[ 0.10765964  0.11623374 -2.0721633   0.11563825]]
Iteration 800 of 1000: loss=0.0329 " + "l1=0" + "l2=0.0329 f=-0.425 shape=(1, 9000, 1)
logits [[ 0.09847664  0.10615368 -2.0100942   0.10395329]]
Iteration 900 of 1000: loss=0.0288 " + "l1=0" + "l2=0.0288 f=-0.423 shape=(1, 9000, 1)
logits [[ 0.09238584  0.10073879 -1.9861631   0.09924626]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.195 " + "l1=0.195" + "l2=0 f=-0.572 shape=(1, 9000, 1)
logits [[ 2.0512304  -1.4889832  -2.9344504   0.08469713]]
Iteration 100 of 1000: loss=0.152 " + "l1=0.135" + "l2=0.0179 f=-0.559 shape=(1, 9000, 1)
logits [[ 1.3443539 -1.1016184 -3.0432148  0.5653844]]
Iteration 200 of 1000: loss=0.0909 " + "l1=0.0518" + "l2=0.0392 f=-0.499 shape=(1, 9000, 1)
logits [[ 0.47347072 -0.4678227  -2.470314    0.47006255]]
Iteration 300 of 1000: loss=0.0766 " + "l1=0.0415" + "l2=0.0351 f=-0.504 shape=(1, 9000, 1)
logits [[ 0.39622697 -0.35838467 -2.4518661   0.3961119 ]]
Iteration 400 of 1000: loss=0.0696 " + "l1=0.0328" + "l2=0.0368 f=-0.505 shape=(1, 9000, 1)
logits [[ 0.3387331  -0.25720766 -2.426089    0.32302088]]
Iteration 500 of 1000: loss=0.0603 " + "l1=0.0233" + "l2=0.037 f=-0.493 shape=(1, 9000, 1)
logits [[ 0.27710792 -0.14563116 -2.372966    0.26803038]]
Iteration 600 of 1000: loss=0.0503 " + "l1=0.0115" + "l2=0.0388 f=-0.466 shape=(1, 9000, 1)
logits [[ 0.19259852 -0.016402   -2.2216303   0.18309867]]
Iteration 700 of 1000: loss=0.0427 " + "l1=0.00138" + "l2=0.0413 f=-0.447 shape=(1, 9000, 1)
logits [[ 0.11350545  0.09725906 -2.1210155   0.12243813]]
Iteration 800 of 1000: loss=0.0385 " + "l1=0.000703" + "l2=0.0378 f=-0.434 shape=(1, 9000, 1)
logits [[ 0.1283736   0.11559349 -2.0962226   0.11465093]]
Iteration 900 of 1000: loss=0.036 " + "l1=0.000702" + "l2=0.0353 f=-0.427 shape=(1, 9000, 1)
logits [[ 0.12684458  0.11408658 -2.0721276   0.12180473]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.115 " + "l1=0.115" + "l2=0 f=-0.572 shape=(1, 9000, 1)
logits [[ 2.0512304  -1.4889832  -2.9344504   0.08469713]]
Iteration 100 of 1000: loss=0.101 " + "l1=0.0951" + "l2=0.00559 f=-0.57 shape=(1, 9000, 1)
logits [[ 1.6554654  -1.2711813  -3.0312195   0.36697516]]
Iteration 200 of 1000: loss=0.0903 " + "l1=0.0799" + "l2=0.0104 f=-0.556 shape=(1, 9000, 1)
logits [[ 1.3490254 -1.1088339 -3.0137656  0.5481335]]
Iteration 300 of 1000: loss=0.0749 " + "l1=0.0519" + "l2=0.023 f=-0.516 shape=(1, 9000, 1)
logits [[ 0.8144243 -0.7825076 -2.7801692  0.683823 ]]
Iteration 400 of 1000: loss=0.0578 " + "l1=0.0336" + "l2=0.0242 f=-0.499 shape=(1, 9000, 1)
logits [[ 0.5254283 -0.5049865 -2.546314   0.5288583]]
Iteration 500 of 1000: loss=0.0536 " + "l1=0.0308" + "l2=0.0229 f=-0.499 shape=(1, 9000, 1)
logits [[ 0.48885134 -0.45637706 -2.516713    0.4899461 ]]
Iteration 600 of 1000: loss=0.05 " + "l1=0.0283" + "l2=0.0217 f=-0.502 shape=(1, 9000, 1)
logits [[ 0.45771143 -0.41159073 -2.5107694   0.45761245]]
Iteration 700 of 1000: loss=0.0473 " + "l1=0.0259" + "l2=0.0214 f=-0.505 shape=(1, 9000, 1)
logits [[ 0.4292278  -0.36782902 -2.5077856   0.42827848]]
Iteration 800 of 1000: loss=0.0409 " + "l1=0.0202" + "l2=0.0206 f=-0.493 shape=(1, 9000, 1)
logits [[ 0.35609254 -0.26668453 -2.4147463   0.35490888]]
Iteration 900 of 1000: loss=0.0324 " + "l1=0.0143" + "l2=0.0181 f=-0.468 shape=(1, 9000, 1)
logits [[ 0.27685827 -0.16314861 -2.261383    0.27584535]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.155 " + "l1=0.155" + "l2=0 f=-0.572 shape=(1, 9000, 1)
logits [[ 2.0512304  -1.4889832  -2.9344504   0.08469713]]
Iteration 100 of 1000: loss=0.129 " + "l1=0.118" + "l2=0.0103 f=-0.567 shape=(1, 9000, 1)
logits [[ 1.5101808 -1.1928242 -3.0508735  0.4655978]]
Iteration 200 of 1000: loss=0.0866 " + "l1=0.0466" + "l2=0.04 f=-0.496 shape=(1, 9000, 1)
logits [[ 0.5262047 -0.5318755 -2.5118644  0.5332158]]
Iteration 300 of 1000: loss=0.0704 " + "l1=0.0409" + "l2=0.0295 f=-0.5 shape=(1, 9000, 1)
logits [[ 0.4781646  -0.45610464 -2.4958901   0.4722165 ]]
Iteration 400 of 1000: loss=0.0654 " + "l1=0.0356" + "l2=0.0298 f=-0.504 shape=(1, 9000, 1)
logits [[ 0.43190643 -0.3824089  -2.4936588   0.42828324]]
Iteration 500 of 1000: loss=0.0608 " + "l1=0.0299" + "l2=0.0309 f=-0.505 shape=(1, 9000, 1)
logits [[ 0.38073727 -0.3017711  -2.4793837   0.38053417]]
Iteration 600 of 1000: loss=0.0551 " + "l1=0.0236" + "l2=0.0314 f=-0.494 shape=(1, 9000, 1)
logits [[ 0.32790917 -0.20955405 -2.4263208   0.33098352]]
Iteration 700 of 1000: loss=0.0476 " + "l1=0.0156" + "l2=0.0321 f=-0.469 shape=(1, 9000, 1)
logits [[ 0.25182658 -0.10034628 -2.281166    0.25541586]]
Iteration 800 of 1000: loss=0.043 " + "l1=0.01" + "l2=0.033 f=-0.455 shape=(1, 9000, 1)
logits [[ 0.19688031 -0.02185941 -2.2025015   0.20703503]]
Iteration 900 of 1000: loss=0.0392 " + "l1=0.00515" + "l2=0.0341 f=-0.442 shape=(1, 9000, 1)
logits [[ 0.1566518   0.04877077 -2.1405308   0.16652545]]
--- 298.62781524658203 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0499 " + "l1=0.0499" + "l2=0 f=-0.572 shape=(1, 9000, 1)
logits [[ 2.0512304  -1.4889832  -2.9344504   0.08469713]]
Iteration 100 of 1000: loss=0.0493 " + "l1=0.049" + "l2=0.000249 f=-0.569 shape=(1, 9000, 1)
logits [[ 1.9702687 -1.4564195 -2.9336407  0.1431317]]
Iteration 200 of 1000: loss=0.0491 " + "l1=0.0487" + "l2=0.000307 f=-0.568 shape=(1, 9000, 1)
logits [[ 1.9405962 -1.4451373 -2.9337533  0.1668143]]
Iteration 300 of 1000: loss=0.0488 " + "l1=0.0484" + "l2=0.000418 f=-0.566 shape=(1, 9000, 1)
logits [[ 1.9091365  -1.4328734  -2.9339113   0.19204447]]
Iteration 400 of 1000: loss=0.0487 " + "l1=0.0481" + "l2=0.000568 f=-0.565 shape=(1, 9000, 1)
logits [[ 1.8783468  -1.4197775  -2.9334638   0.21569854]]
Iteration 500 of 1000: loss=0.0485 " + "l1=0.0478" + "l2=0.00074 f=-0.563 shape=(1, 9000, 1)
logits [[ 1.8478503  -1.4056703  -2.9311235   0.23730323]]
Iteration 600 of 1000: loss=0.0484 " + "l1=0.0475" + "l2=0.000939 f=-0.561 shape=(1, 9000, 1)
logits [[ 1.8193709 -1.3922497 -2.9269404  0.2563087]]
Iteration 700 of 1000: loss=0.0483 " + "l1=0.047" + "l2=0.00123 f=-0.558 shape=(1, 9000, 1)
logits [[ 1.7867771 -1.3757973 -2.9158428  0.2733418]]
Iteration 800 of 1000: loss=0.048 " + "l1=0.0464" + "l2=0.00161 f=-0.553 shape=(1, 9000, 1)
logits [[ 1.7470236  -1.3554834  -2.8966517   0.29117116]]
Iteration 900 of 1000: loss=0.0477 " + "l1=0.0456" + "l2=0.00211 f=-0.546 shape=(1, 9000, 1)
logits [[ 1.6944747 -1.3286349 -2.8616924  0.3110997]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.499 " + "l1=0.499" + "l2=0 f=-0.572 shape=(1, 9000, 1)
logits [[ 2.0512304  -1.4889832  -2.9344504   0.08469713]]
Iteration 100 of 1000: loss=0.31 " + "l1=0.234" + "l2=0.0756 f=-0.429 shape=(1, 9000, 1)
logits [[ 0.5352123  -0.98084456 -1.8052297   0.5354073 ]]
Iteration 200 of 1000: loss=0.28 " + "l1=0.21" + "l2=0.0702 f=-0.425 shape=(1, 9000, 1)
logits [[ 0.44350165 -0.9465704  -1.647071    0.44953948]]
Iteration 300 of 1000: loss=0.246 " + "l1=0.173" + "l2=0.0734 f=-0.41 shape=(1, 9000, 1)
logits [[ 0.36684516 -1.0197966  -1.3574831   0.37063283]]
Iteration 400 of 1000: loss=0.215 " + "l1=0.129" + "l2=0.0855 f=-0.394 shape=(1, 9000, 1)
logits [[ 0.1908375 -0.8892976 -1.0838879  0.2078239]]
Iteration 500 of 1000: loss=0.205 " + "l1=0.116" + "l2=0.0882 f=-0.388 shape=(1, 9000, 1)
logits [[ 0.16304919 -0.87162286 -1.0002302   0.15802419]]
Iteration 600 of 1000: loss=0.198 " + "l1=0.109" + "l2=0.0885 f=-0.384 shape=(1, 9000, 1)
logits [[ 0.14917606 -0.88730294 -0.9425667   0.14412317]]
Iteration 700 of 1000: loss=0.19 " + "l1=0.0988" + "l2=0.091 f=-0.381 shape=(1, 9000, 1)
logits [[ 0.11358187 -0.90582573 -0.8610029   0.12724909]]
Iteration 800 of 1000: loss=0.172 " + "l1=0.0565" + "l2=0.115 f=-0.39 shape=(1, 9000, 1)
logits [[ 0.04931651 -1.119871   -0.51601076  0.02838355]]
Iteration 900 of 1000: loss=0.151 " + "l1=0.0234" + "l2=0.128 f=-0.391 shape=(1, 9000, 1)
logits [[-0.04117119 -1.1856021  -0.27467868 -0.06168101]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.274 " + "l1=0.274" + "l2=0 f=-0.572 shape=(1, 9000, 1)
logits [[ 2.0512304  -1.4889832  -2.9344504   0.08469713]]
Iteration 100 of 1000: loss=0.241 " + "l1=0.211" + "l2=0.0306 f=-0.514 shape=(1, 9000, 1)
logits [[ 1.2619731  -1.1244416  -2.566342    0.37187862]]
Iteration 200 of 1000: loss=0.184 " + "l1=0.138" + "l2=0.0461 f=-0.435 shape=(1, 9000, 1)
logits [[ 0.597932   -1.0166377  -1.9100454   0.58730364]]
Iteration 300 of 1000: loss=0.17 " + "l1=0.13" + "l2=0.0403 f=-0.426 shape=(1, 9000, 1)
logits [[ 0.54504627 -0.967041   -1.81532     0.5320882 ]]
Iteration 400 of 1000: loss=0.155 " + "l1=0.119" + "l2=0.0365 f=-0.416 shape=(1, 9000, 1)
logits [[ 0.44248757 -0.8223455  -1.7172912   0.4316491 ]]
Iteration 500 of 1000: loss=0.148 " + "l1=0.11" + "l2=0.0376 f=-0.412 shape=(1, 9000, 1)
logits [[ 0.3822988  -0.7734675  -1.6245191   0.36804384]]
Iteration 600 of 1000: loss=0.143 " + "l1=0.103" + "l2=0.0397 f=-0.407 shape=(1, 9000, 1)
logits [[ 0.3451316 -0.7792343 -1.5311881  0.3357256]]
Iteration 700 of 1000: loss=0.136 " + "l1=0.0927" + "l2=0.0428 f=-0.398 shape=(1, 9000, 1)
logits [[ 0.32404345 -0.89113706 -1.3556999   0.32923526]]
Iteration 800 of 1000: loss=0.129 " + "l1=0.0868" + "l2=0.0417 f=-0.399 shape=(1, 9000, 1)
logits [[ 0.28250334 -0.8541591  -1.2960844   0.27257803]]
Iteration 900 of 1000: loss=0.123 " + "l1=0.0794" + "l2=0.0433 f=-0.395 shape=(1, 9000, 1)
logits [[ 0.2125701  -0.7908318  -1.2226145   0.22143042]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.386 " + "l1=0.386" + "l2=0 f=-0.572 shape=(1, 9000, 1)
logits [[ 2.0512304  -1.4889832  -2.9344504   0.08469713]]
Iteration 100 of 1000: loss=0.261 " + "l1=0.189" + "l2=0.0715 f=-0.433 shape=(1, 9000, 1)
logits [[ 0.5790741 -0.9999712 -1.8605186  0.5512197]]
Iteration 200 of 1000: loss=0.234 " + "l1=0.177" + "l2=0.0572 f=-0.43 shape=(1, 9000, 1)
logits [[ 0.5160747  -0.98355824 -1.7683961   0.5154459 ]]
Iteration 300 of 1000: loss=0.221 " + "l1=0.165" + "l2=0.0559 f=-0.424 shape=(1, 9000, 1)
logits [[ 0.46480238 -0.9505034  -1.6661388   0.45461416]]
Iteration 400 of 1000: loss=0.188 " + "l1=0.13" + "l2=0.0581 f=-0.407 shape=(1, 9000, 1)
logits [[ 0.3410288 -0.968866  -1.332233   0.3301797]]
Iteration 500 of 1000: loss=0.175 " + "l1=0.114" + "l2=0.0609 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.25341645 -0.89979976 -1.2214426   0.25210643]]
Iteration 600 of 1000: loss=0.168 " + "l1=0.103" + "l2=0.0646 f=-0.406 shape=(1, 9000, 1)
logits [[ 0.17953056 -0.8486701  -1.1445909   0.18845981]]
Iteration 700 of 1000: loss=0.161 " + "l1=0.0951" + "l2=0.0663 f=-0.406 shape=(1, 9000, 1)
logits [[ 0.1442667  -0.8132321  -1.082705    0.12676108]]
Iteration 800 of 1000: loss=0.156 " + "l1=0.0883" + "l2=0.0676 f=-0.396 shape=(1, 9000, 1)
logits [[ 0.12610029 -0.82209206 -1.0127507   0.12406053]]
Iteration 900 of 1000: loss=0.151 " + "l1=0.0826" + "l2=0.0688 f=-0.39 shape=(1, 9000, 1)
logits [[ 0.11855802 -0.840436   -0.9467871   0.10753598]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.442 " + "l1=0.442" + "l2=0 f=-0.572 shape=(1, 9000, 1)
logits [[ 2.0512304  -1.4889832  -2.9344504   0.08469713]]
Iteration 100 of 1000: loss=0.284 " + "l1=0.212" + "l2=0.0723 f=-0.43 shape=(1, 9000, 1)
logits [[ 0.5466972  -0.9878792  -1.8335253   0.55456686]]
Iteration 200 of 1000: loss=0.258 " + "l1=0.195" + "l2=0.0634 f=-0.428 shape=(1, 9000, 1)
logits [[ 0.473225  -0.960622  -1.7118722  0.4857273]]
Iteration 300 of 1000: loss=0.237 " + "l1=0.175" + "l2=0.0626 f=-0.43 shape=(1, 9000, 1)
logits [[ 0.4076227 -0.9659208 -1.560726   0.3995818]]
Iteration 400 of 1000: loss=0.208 " + "l1=0.145" + "l2=0.0632 f=-0.413 shape=(1, 9000, 1)
logits [[ 0.29979086 -0.94486064 -1.3207074   0.31292236]]
Iteration 500 of 1000: loss=0.181 " + "l1=0.108" + "l2=0.0726 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.13976726 -0.82769585 -1.0759876   0.14314222]]
Iteration 600 of 1000: loss=0.173 " + "l1=0.0985" + "l2=0.0743 f=-0.406 shape=(1, 9000, 1)
logits [[ 0.08798245 -0.78351724 -1.0188599   0.09066923]]
Iteration 700 of 1000: loss=0.166 " + "l1=0.0915" + "l2=0.075 f=-0.398 shape=(1, 9000, 1)
logits [[ 0.07777405 -0.80309415 -0.9495166   0.08123175]]
Iteration 800 of 1000: loss=0.158 " + "l1=0.0821" + "l2=0.0761 f=-0.392 shape=(1, 9000, 1)
logits [[ 0.06157502 -0.8171654  -0.8631433   0.04977256]]
Iteration 900 of 1000: loss=0.15 " + "l1=0.0701" + "l2=0.0798 f=-0.386 shape=(1, 9000, 1)
logits [[ 0.01014064 -0.80727166 -0.7686285   0.02092258]]
--- 298.2004909515381 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0197 " + "l1=0.0197" + "l2=0 f=-0.572 shape=(1, 9000, 1)
logits [[ 2.0512304  -1.4889832  -2.9344504   0.08469713]]
Iteration 100 of 1000: loss=0.0173 " + "l1=0.0165" + "l2=0.000818 f=-0.568 shape=(1, 9000, 1)
logits [[ 1.8927795  -1.4312251  -2.9753015   0.24351469]]
Iteration 200 of 1000: loss=0.016 " + "l1=0.0147" + "l2=0.00126 f=-0.566 shape=(1, 9000, 1)
logits [[ 1.8043746 -1.4013367 -2.9996865  0.3311223]]
Iteration 300 of 1000: loss=0.0149 " + "l1=0.013" + "l2=0.00188 f=-0.565 shape=(1, 9000, 1)
logits [[ 1.7179554 -1.3737017 -3.0208952  0.4171097]]
Iteration 400 of 1000: loss=0.014 " + "l1=0.0115" + "l2=0.00255 f=-0.563 shape=(1, 9000, 1)
logits [[ 1.6403693  -1.3474106  -3.0396113   0.49319887]]
Iteration 500 of 1000: loss=0.0133 " + "l1=0.0102" + "l2=0.00319 f=-0.562 shape=(1, 9000, 1)
logits [[ 1.5734061  -1.3224659  -3.0562632   0.55794615]]
Iteration 600 of 1000: loss=0.0129 " + "l1=0.0091" + "l2=0.00381 f=-0.561 shape=(1, 9000, 1)
logits [[ 1.5190089 -1.3011004 -3.0701919  0.6089248]]
Iteration 700 of 1000: loss=0.0126 " + "l1=0.00846" + "l2=0.00412 f=-0.56 shape=(1, 9000, 1)
logits [[ 1.4847397  -1.2870044  -3.076757    0.63825065]]
Iteration 800 of 1000: loss=0.0124 " + "l1=0.0079" + "l2=0.00448 f=-0.559 shape=(1, 9000, 1)
logits [[ 1.4537835 -1.2734357 -3.082393   0.6641858]]
Iteration 900 of 1000: loss=0.0122 " + "l1=0.00742" + "l2=0.00475 f=-0.559 shape=(1, 9000, 1)
logits [[ 1.427311  -1.261461  -3.0868995  0.6854204]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.197 " + "l1=0.197" + "l2=0 f=-0.572 shape=(1, 9000, 1)
logits [[ 2.0512304  -1.4889832  -2.9344504   0.08469713]]
Iteration 100 of 1000: loss=0.0307 " + "l1=0.00139" + "l2=0.0293 f=-0.539 shape=(1, 9000, 1)
logits [[ 1.0129014 -1.1754929 -2.9917006  0.9990244]]
Iteration 200 of 1000: loss=0.0192 " + "l1=0" + "l2=0.0192 f=-0.539 shape=(1, 9000, 1)
logits [[ 1.0198442 -1.1860142 -3.0105953  1.0220675]]
Iteration 300 of 1000: loss=0.0175 " + "l1=0.0014" + "l2=0.0161 f=-0.542 shape=(1, 9000, 1)
logits [[ 1.0369581 -1.1878303 -3.040273   1.0229751]]
Iteration 400 of 1000: loss=0.0152 " + "l1=0" + "l2=0.0152 f=-0.542 shape=(1, 9000, 1)
logits [[ 1.0330126 -1.1787697 -3.0641181  1.0400232]]
Iteration 500 of 1000: loss=0.0146 " + "l1=0" + "l2=0.0146 f=-0.542 shape=(1, 9000, 1)
logits [[ 1.0268306 -1.1707531 -3.068398   1.0437273]]
Iteration 600 of 1000: loss=0.014 " + "l1=0" + "l2=0.014 f=-0.543 shape=(1, 9000, 1)
logits [[ 1.0294544 -1.165074  -3.0721636  1.0371606]]
Iteration 700 of 1000: loss=0.0135 " + "l1=0" + "l2=0.0135 f=-0.543 shape=(1, 9000, 1)
logits [[ 1.0263656 -1.1580439 -3.0750966  1.0361818]]
Iteration 800 of 1000: loss=0.0133 " + "l1=0" + "l2=0.0133 f=-0.542 shape=(1, 9000, 1)
logits [[ 1.0182953 -1.1499534 -3.0800223  1.0433369]]
Iteration 900 of 1000: loss=0.0135 " + "l1=0.00103" + "l2=0.0124 f=-0.543 shape=(1, 9000, 1)
logits [[ 1.0352957 -1.1508955 -3.0829449  1.024963 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.108 " + "l1=0.108" + "l2=0 f=-0.572 shape=(1, 9000, 1)
logits [[ 2.0512304  -1.4889832  -2.9344504   0.08469713]]
Iteration 100 of 1000: loss=0.0389 " + "l1=0.00864" + "l2=0.0302 f=-0.551 shape=(1, 9000, 1)
logits [[ 1.1274664  -1.1790855  -3.1232777   0.97034806]]
Iteration 200 of 1000: loss=0.0189 " + "l1=0" + "l2=0.0189 f=-0.543 shape=(1, 9000, 1)
logits [[ 1.0340962 -1.1718354 -3.0738132  1.0411366]]
Iteration 300 of 1000: loss=0.016 " + "l1=0" + "l2=0.016 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.0417899 -1.1751993 -3.0847132  1.0438405]]
Iteration 400 of 1000: loss=0.015 " + "l1=0" + "l2=0.015 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.041903  -1.1715285 -3.0907376  1.045222 ]]
Iteration 500 of 1000: loss=0.0142 " + "l1=6.69e-05" + "l2=0.0141 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.0399678 -1.1645477 -3.0895033  1.0387511]]
Iteration 600 of 1000: loss=0.0138 " + "l1=0" + "l2=0.0138 f=-0.543 shape=(1, 9000, 1)
logits [[ 1.0300277 -1.1542578 -3.0921247  1.0435624]]
Iteration 700 of 1000: loss=0.0133 " + "l1=0" + "l2=0.0133 f=-0.543 shape=(1, 9000, 1)
logits [[ 1.0253086 -1.1458011 -3.093667   1.0435742]]
Iteration 800 of 1000: loss=0.0129 " + "l1=0" + "l2=0.0129 f=-0.542 shape=(1, 9000, 1)
logits [[ 1.0226753 -1.1386825 -3.0934176  1.0409654]]
Iteration 900 of 1000: loss=0.0124 " + "l1=0" + "l2=0.0124 f=-0.541 shape=(1, 9000, 1)
logits [[ 1.0200944 -1.1323118 -3.0911694  1.0374092]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0639 " + "l1=0.0639" + "l2=0 f=-0.572 shape=(1, 9000, 1)
logits [[ 2.0512304  -1.4889832  -2.9344504   0.08469713]]
Iteration 100 of 1000: loss=0.0404 " + "l1=0.0318" + "l2=0.00863 f=-0.562 shape=(1, 9000, 1)
logits [[ 1.5539905 -1.3094977 -3.0676231  0.5749773]]
Iteration 200 of 1000: loss=0.0255 " + "l1=0.0108" + "l2=0.0147 f=-0.555 shape=(1, 9000, 1)
logits [[ 1.2289699 -1.2131593 -3.1324883  0.8970909]]
Iteration 300 of 1000: loss=0.0167 " + "l1=0" + "l2=0.0167 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.0579191 -1.1686493 -3.134275   1.0580086]]
Iteration 400 of 1000: loss=0.0151 " + "l1=0" + "l2=0.0151 f=-0.545 shape=(1, 9000, 1)
logits [[ 1.0527481 -1.1637743 -3.126158   1.056446 ]]
Iteration 500 of 1000: loss=0.0141 " + "l1=0" + "l2=0.0141 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.0477623 -1.1533267 -3.122899   1.0508473]]
Iteration 600 of 1000: loss=0.0132 " + "l1=1.76e-05" + "l2=0.0132 f=-0.543 shape=(1, 9000, 1)
logits [[ 1.0440142 -1.1445649 -3.115589   1.0434713]]
Iteration 700 of 1000: loss=0.0126 " + "l1=0" + "l2=0.0126 f=-0.541 shape=(1, 9000, 1)
logits [[ 1.0352231 -1.1343428 -3.1008809  1.0374414]]
Iteration 800 of 1000: loss=0.0117 " + "l1=0" + "l2=0.0117 f=-0.534 shape=(1, 9000, 1)
logits [[ 1.0141242 -1.1163188 -3.0500467  1.0178242]]
Iteration 900 of 1000: loss=0.0106 " + "l1=0" + "l2=0.0106 f=-0.526 shape=(1, 9000, 1)
logits [[ 0.96917486 -1.0912505  -2.9521356   0.9712101 ]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0418 " + "l1=0.0418" + "l2=0 f=-0.572 shape=(1, 9000, 1)
logits [[ 2.0512304  -1.4889832  -2.9344504   0.08469713]]
Iteration 100 of 1000: loss=0.0318 " + "l1=0.0281" + "l2=0.00361 f=-0.565 shape=(1, 9000, 1)
logits [[ 1.7284375  -1.3714433  -3.0214677   0.40384912]]
Iteration 200 of 1000: loss=0.0256 " + "l1=0.0196" + "l2=0.00592 f=-0.561 shape=(1, 9000, 1)
logits [[ 1.5283433 -1.3085829 -3.068722   0.6041161]]
Iteration 300 of 1000: loss=0.0207 " + "l1=0.0118" + "l2=0.00888 f=-0.558 shape=(1, 9000, 1)
logits [[ 1.3441404  -1.2529624  -3.1096807   0.78738546]]
Iteration 400 of 1000: loss=0.0173 " + "l1=0.00545" + "l2=0.0118 f=-0.553 shape=(1, 9000, 1)
logits [[ 1.193641   -1.2063767  -3.1376526   0.93694645]]
Iteration 500 of 1000: loss=0.0152 " + "l1=0.000916" + "l2=0.0143 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.0821215 -1.1679968 -3.140249   1.0390002]]
Iteration 600 of 1000: loss=0.014 " + "l1=0" + "l2=0.014 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.0557367 -1.1546836 -3.1321144  1.0561833]]
Iteration 700 of 1000: loss=0.0132 " + "l1=3.95e-05" + "l2=0.0131 f=-0.541 shape=(1, 9000, 1)
logits [[ 1.0492628 -1.1437594 -3.1177342  1.0474036]]
Iteration 800 of 1000: loss=0.0123 " + "l1=0.000148" + "l2=0.0122 f=-0.537 shape=(1, 9000, 1)
logits [[ 1.037241  -1.1286517 -3.0855405  1.0302718]]
Iteration 900 of 1000: loss=0.0111 " + "l1=0.000102" + "l2=0.011 f=-0.529 shape=(1, 9000, 1)
logits [[ 0.9948273 -1.0998528 -2.9995854  0.9900328]]
--- 293.8985197544098 seconds ---
Adv result:3
Loading record A04952
(1, 8696)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.106 " + "l1=0.106" + "l2=0 f=-0.61 shape=(1, 9000, 1)
logits [[ 6.4918957 -4.096475   3.8162112 -8.650712 ]]
Iteration 100 of 1000: loss=0.105 " + "l1=0.105" + "l2=0.000424 f=-0.607 shape=(1, 9000, 1)
logits [[ 6.438361 -4.040252  3.767508 -8.591927]]
Iteration 200 of 1000: loss=0.105 " + "l1=0.105" + "l2=0.000438 f=-0.605 shape=(1, 9000, 1)
logits [[ 6.427026 -4.027705  3.756428 -8.577533]]
Iteration 300 of 1000: loss=0.105 " + "l1=0.104" + "l2=0.000555 f=-0.604 shape=(1, 9000, 1)
logits [[ 6.412589  -4.0114756  3.741876  -8.560328 ]]
Iteration 400 of 1000: loss=0.105 " + "l1=0.104" + "l2=0.00063 f=-0.603 shape=(1, 9000, 1)
logits [[ 6.398165  -3.9953628  3.7272215 -8.543013 ]]
Iteration 500 of 1000: loss=0.104 " + "l1=0.104" + "l2=0.000805 f=-0.602 shape=(1, 9000, 1)
logits [[ 6.383524  -3.9781322  3.7116704 -8.524958 ]]
Iteration 600 of 1000: loss=0.104 " + "l1=0.103" + "l2=0.000923 f=-0.601 shape=(1, 9000, 1)
logits [[ 6.369314  -3.9611144  3.6963053 -8.507255 ]]
Iteration 700 of 1000: loss=0.104 " + "l1=0.103" + "l2=0.0011 f=-0.6 shape=(1, 9000, 1)
logits [[ 6.355312  -3.9461415  3.6827602 -8.490269 ]]
Iteration 800 of 1000: loss=0.104 " + "l1=0.103" + "l2=0.00126 f=-0.598 shape=(1, 9000, 1)
logits [[ 6.3421974 -3.9316247  3.6695359 -8.473875 ]]
Iteration 900 of 1000: loss=0.104 " + "l1=0.102" + "l2=0.0014 f=-0.597 shape=(1, 9000, 1)
logits [[ 6.330369  -3.9188333  3.6577888 -8.458915 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.06 " + "l1=1.06" + "l2=0 f=-0.61 shape=(1, 9000, 1)
logits [[ 6.4918957 -4.096475   3.8162112 -8.650712 ]]
Iteration 100 of 1000: loss=0.999 " + "l1=0.97" + "l2=0.0294 f=-0.584 shape=(1, 9000, 1)
logits [[ 6.053736  -3.6461618  3.4257247 -8.168679 ]]
Iteration 200 of 1000: loss=0.971 " + "l1=0.93" + "l2=0.0412 f=-0.565 shape=(1, 9000, 1)
logits [[ 5.845962  -3.454718   3.2701626 -7.9228816]]
Iteration 300 of 1000: loss=0.946 " + "l1=0.895" + "l2=0.0507 f=-0.544 shape=(1, 9000, 1)
logits [[ 5.669478  -3.2823613  3.1227279 -7.686192 ]]
Iteration 400 of 1000: loss=0.924 " + "l1=0.863" + "l2=0.0608 f=-0.525 shape=(1, 9000, 1)
logits [[ 5.504191  -3.123881   2.9806383 -7.462348 ]]
Iteration 500 of 1000: loss=0.904 " + "l1=0.836" + "l2=0.0682 f=-0.511 shape=(1, 9000, 1)
logits [[ 5.3589945 -3.0039544  2.8732429 -7.2731996]]
Iteration 600 of 1000: loss=0.884 " + "l1=0.809" + "l2=0.0753 f=-0.498 shape=(1, 9000, 1)
logits [[ 5.2039924 -2.8855684  2.7666016 -7.076347 ]]
Iteration 700 of 1000: loss=0.863 " + "l1=0.779" + "l2=0.0836 f=-0.479 shape=(1, 9000, 1)
logits [[ 5.032922 -2.75695   2.657285 -6.849519]]
Iteration 800 of 1000: loss=0.839 " + "l1=0.748" + "l2=0.0909 f=-0.46 shape=(1, 9000, 1)
logits [[ 4.84793   -2.6336782  2.5459986 -6.601276 ]]
Iteration 900 of 1000: loss=0.814 " + "l1=0.713" + "l2=0.1 f=-0.438 shape=(1, 9000, 1)
logits [[ 4.642906  -2.4902036  2.418186  -6.3233576]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.6 " + "l1=10.6" + "l2=0 f=-0.61 shape=(1, 9000, 1)
logits [[ 6.4918957 -4.096475   3.8162112 -8.650712 ]]
Iteration 100 of 1000: loss=6.46 " + "l1=4.81" + "l2=1.65 f=-0.382 shape=(1, 9000, 1)
logits [[ 3.3372135 -1.474497   1.5549686 -4.9464283]]
Iteration 200 of 1000: loss=4.78 " + "l1=2.48" + "l2=2.29 f=-0.333 shape=(1, 9000, 1)
logits [[ 1.8152913 -0.66894    0.7402327 -3.2195418]]
Iteration 300 of 1000: loss=3.44 " + "l1=0.658" + "l2=2.78 f=-0.271 shape=(1, 9000, 1)
logits [[ 0.3515982  -0.29814875  0.35941803 -1.4978231 ]]
Iteration 400 of 1000: loss=2.3 " + "l1=0" + "l2=2.3 f=-0.312 shape=(1, 9000, 1)
logits [[ 0.09617125  0.10813528  0.10162164 -1.5529767 ]]
Iteration 500 of 1000: loss=1.85 " + "l1=0.00203" + "l2=1.84 f=-0.333 shape=(1, 9000, 1)
logits [[ 0.14061627  0.13859037  0.13412537 -1.7456057 ]]
Iteration 600 of 1000: loss=1.62 " + "l1=0.00133" + "l2=1.62 f=-0.337 shape=(1, 9000, 1)
logits [[ 0.13104838  0.1297167   0.12471044 -1.7354711 ]]
Iteration 700 of 1000: loss=1.42 " + "l1=0" + "l2=1.42 f=-0.328 shape=(1, 9000, 1)
logits [[ 0.11002329  0.11462021  0.11158748 -1.6482986 ]]
Iteration 800 of 1000: loss=1.29 " + "l1=0" + "l2=1.29 f=-0.314 shape=(1, 9000, 1)
logits [[ 0.0852116   0.09458668  0.09402267 -1.5290529 ]]
Iteration 900 of 1000: loss=1.19 " + "l1=0" + "l2=1.19 f=-0.303 shape=(1, 9000, 1)
logits [[ 0.05378893  0.08488198  0.06867108 -1.4196829 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.82 " + "l1=5.82" + "l2=0 f=-0.61 shape=(1, 9000, 1)
logits [[ 6.4918957 -4.096475   3.8162112 -8.650712 ]]
Iteration 100 of 1000: loss=4.29 " + "l1=3.6" + "l2=0.692 f=-0.436 shape=(1, 9000, 1)
logits [[ 4.3696103 -2.1728067  2.2142227 -6.15472  ]]
Iteration 200 of 1000: loss=3.62 " + "l1=2.69" + "l2=0.93 f=-0.371 shape=(1, 9000, 1)
logits [[ 3.3531244 -1.5302795  1.5758512 -4.881634 ]]
Iteration 300 of 1000: loss=3.08 " + "l1=2.02" + "l2=1.06 f=-0.331 shape=(1, 9000, 1)
logits [[ 2.5044882 -1.1646146  1.1941222 -3.8591177]]
Iteration 400 of 1000: loss=2.44 " + "l1=1.24" + "l2=1.2 f=-0.275 shape=(1, 9000, 1)
logits [[ 1.4413941  -0.81863976  0.72953737 -2.4506567 ]]
Iteration 500 of 1000: loss=1.81 " + "l1=0.486" + "l2=1.32 f=-0.202 shape=(1, 9000, 1)
logits [[ 0.38107798 -0.50266737  0.37912285 -1.0654756 ]]
Iteration 600 of 1000: loss=1.49 " + "l1=0.288" + "l2=1.21 f=-0.186 shape=(1, 9000, 1)
logits [[ 0.17798619 -0.34529078  0.17663707 -0.75448596]]
Iteration 700 of 1000: loss=1.3 " + "l1=0.112" + "l2=1.19 f=-0.192 shape=(1, 9000, 1)
logits [[ 0.02607898 -0.1749597   0.02795357 -0.64601254]]
Iteration 800 of 1000: loss=1.15 " + "l1=0.00429" + "l2=1.14 f=-0.194 shape=(1, 9000, 1)
logits [[-0.04675561 -0.05455089 -0.046788   -0.62951857]]
Iteration 900 of 1000: loss=1.04 " + "l1=0" + "l2=1.04 f=-0.199 shape=(1, 9000, 1)
logits [[-0.02992365 -0.02933937 -0.03394611 -0.70162904]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.44 " + "l1=3.44" + "l2=0 f=-0.61 shape=(1, 9000, 1)
logits [[ 6.4918957 -4.096475   3.8162112 -8.650712 ]]
Iteration 100 of 1000: loss=2.85 " + "l1=2.56" + "l2=0.289 f=-0.498 shape=(1, 9000, 1)
logits [[ 5.137923  -2.7477398  2.6988966 -7.081746 ]]
Iteration 200 of 1000: loss=2.58 " + "l1=2.18" + "l2=0.394 f=-0.447 shape=(1, 9000, 1)
logits [[ 4.488693  -2.2334037  2.239386  -6.281029 ]]
Iteration 300 of 1000: loss=2.3 " + "l1=1.84" + "l2=0.467 f=-0.397 shape=(1, 9000, 1)
logits [[ 3.822327  -1.8326702  1.8573292 -5.4369626]]
Iteration 400 of 1000: loss=2.07 " + "l1=1.55" + "l2=0.518 f=-0.352 shape=(1, 9000, 1)
logits [[ 3.255272  -1.5233661  1.5511831 -4.691951 ]]
Iteration 500 of 1000: loss=1.83 " + "l1=1.24" + "l2=0.592 f=-0.311 shape=(1, 9000, 1)
logits [[ 2.5670874 -1.2382511  1.2367414 -3.8084471]]
Iteration 600 of 1000: loss=1.5 " + "l1=0.875" + "l2=0.628 f=-0.249 shape=(1, 9000, 1)
logits [[ 1.7811277  -0.9104358   0.84571934 -2.7136214 ]]
Iteration 700 of 1000: loss=1.24 " + "l1=0.577" + "l2=0.666 f=-0.184 shape=(1, 9000, 1)
logits [[ 1.0961579  -0.6786783   0.57579374 -1.7307795 ]]
Iteration 800 of 1000: loss=1 " + "l1=0.265" + "l2=0.736 f=-0.143 shape=(1, 9000, 1)
logits [[ 0.34917763 -0.46695375  0.34091952 -0.7969522 ]]
Iteration 900 of 1000: loss=0.85 " + "l1=0.141" + "l2=0.709 f=-0.112 shape=(1, 9000, 1)
logits [[ 0.16069835 -0.26436907  0.16941826 -0.5150814 ]]
--- 302.61405420303345 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0268 " + "l1=0.0268" + "l2=0 f=-0.61 shape=(1, 9000, 1)
logits [[ 6.4918957 -4.096475   3.8162112 -8.650712 ]]
Iteration 100 of 1000: loss=0.0265 " + "l1=0.0263" + "l2=0.000222 f=-0.614 shape=(1, 9000, 1)
logits [[ 6.463016  -4.1167216  3.8329544 -8.634647 ]]
Iteration 200 of 1000: loss=0.0265 " + "l1=0.0263" + "l2=0.000194 f=-0.614 shape=(1, 9000, 1)
logits [[ 6.460431  -4.1183076  3.8344598 -8.633013 ]]
Iteration 300 of 1000: loss=0.0264 " + "l1=0.0262" + "l2=0.000236 f=-0.615 shape=(1, 9000, 1)
logits [[ 6.455722  -4.121521   3.8371627 -8.629902 ]]
Iteration 400 of 1000: loss=0.0264 " + "l1=0.0261" + "l2=0.000247 f=-0.615 shape=(1, 9000, 1)
logits [[ 6.450182  -4.1243954  3.8392577 -8.625667 ]]
Iteration 500 of 1000: loss=0.0264 " + "l1=0.026" + "l2=0.000335 f=-0.616 shape=(1, 9000, 1)
logits [[ 6.444467  -4.1269116  3.8408961 -8.621135 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.268 " + "l1=0.268" + "l2=0 f=-0.61 shape=(1, 9000, 1)
logits [[ 6.4918957 -4.096475   3.8162112 -8.650712 ]]
Iteration 100 of 1000: loss=0.248 " + "l1=0.237" + "l2=0.0104 f=-0.638 shape=(1, 9000, 1)
logits [[ 6.295474  -4.2192693  3.9219913 -8.550889 ]]
Iteration 200 of 1000: loss=0.241 " + "l1=0.227" + "l2=0.0136 f=-0.647 shape=(1, 9000, 1)
logits [[ 6.214847  -4.2450747  3.9400282 -8.49971  ]]
Iteration 300 of 1000: loss=0.236 " + "l1=0.219" + "l2=0.0164 f=-0.656 shape=(1, 9000, 1)
logits [[ 6.1424685 -4.265023   3.9493337 -8.4495125]]
Iteration 400 of 1000: loss=0.231 " + "l1=0.212" + "l2=0.0188 f=-0.663 shape=(1, 9000, 1)
logits [[ 6.0749807 -4.283554   3.9540546 -8.398334 ]]
Iteration 500 of 1000: loss=0.227 " + "l1=0.205" + "l2=0.0214 f=-0.67 shape=(1, 9000, 1)
logits [[ 6.0070424 -4.3005915  3.954984  -8.342489 ]]
Iteration 600 of 1000: loss=0.222 " + "l1=0.199" + "l2=0.0236 f=-0.678 shape=(1, 9000, 1)
logits [[ 5.9415617 -4.315443   3.9530263 -8.290432 ]]
Iteration 700 of 1000: loss=0.219 " + "l1=0.192" + "l2=0.0263 f=-0.684 shape=(1, 9000, 1)
logits [[ 5.8784323 -4.333699   3.955362  -8.237253 ]]
Iteration 800 of 1000: loss=0.215 " + "l1=0.187" + "l2=0.0285 f=-0.688 shape=(1, 9000, 1)
logits [[ 5.8203373 -4.346058   3.9514048 -8.179183 ]]
Iteration 900 of 1000: loss=0.212 " + "l1=0.181" + "l2=0.0304 f=-0.693 shape=(1, 9000, 1)
logits [[ 5.7592278 -4.3600698  3.9456728 -8.117761 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.68 " + "l1=2.68" + "l2=0 f=-0.61 shape=(1, 9000, 1)
logits [[ 6.4918957 -4.096475   3.8162112 -8.650712 ]]
Iteration 100 of 1000: loss=1.13 " + "l1=0.45" + "l2=0.683 f=-0.793 shape=(1, 9000, 1)
logits [[ 4.7955055 -4.7728252  4.345632  -7.540242 ]]
Iteration 200 of 1000: loss=0.571 " + "l1=0" + "l2=0.571 f=-0.807 shape=(1, 9000, 1)
logits [[ 4.3923807 -4.9783926  4.3927875 -7.0359454]]
Iteration 300 of 1000: loss=0.396 " + "l1=0" + "l2=0.396 f=-0.787 shape=(1, 9000, 1)
logits [[ 4.301275  -5.0207696  4.3112874 -6.7387834]]
Iteration 400 of 1000: loss=0.309 " + "l1=0" + "l2=0.309 f=-0.777 shape=(1, 9000, 1)
logits [[ 4.21885   -4.9998384  4.232114  -6.561046 ]]
Iteration 500 of 1000: loss=0.263 " + "l1=0.00482" + "l2=0.258 f=-0.771 shape=(1, 9000, 1)
logits [[ 4.1712375 -4.981455   4.1664133 -6.4401817]]
Iteration 600 of 1000: loss=0.229 " + "l1=0" + "l2=0.229 f=-0.769 shape=(1, 9000, 1)
logits [[ 4.1005464 -4.952086   4.112112  -6.3385334]]
Iteration 700 of 1000: loss=0.208 " + "l1=0" + "l2=0.208 f=-0.765 shape=(1, 9000, 1)
logits [[ 4.0578704 -4.925287   4.0662866 -6.2603316]]
Iteration 800 of 1000: loss=0.194 " + "l1=0.00355" + "l2=0.19 f=-0.761 shape=(1, 9000, 1)
logits [[ 4.0310783 -4.8986278  4.0275292 -6.2025204]]
Iteration 900 of 1000: loss=0.186 " + "l1=0" + "l2=0.186 f=-0.758 shape=(1, 9000, 1)
logits [[ 3.9675188 -4.881039   4.0037327 -6.122244 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.47 " + "l1=1.47" + "l2=0 f=-0.61 shape=(1, 9000, 1)
logits [[ 6.4918957 -4.096475   3.8162112 -8.650712 ]]
Iteration 100 of 1000: loss=0.95 " + "l1=0.696" + "l2=0.254 f=-0.743 shape=(1, 9000, 1)
logits [[ 5.4377403 -4.562208   4.1726856 -8.021232 ]]
Iteration 200 of 1000: loss=0.707 " + "l1=0.345" + "l2=0.362 f=-0.792 shape=(1, 9000, 1)
logits [[ 4.884421  -4.7631145  4.256596  -7.546723 ]]
Iteration 300 of 1000: loss=0.446 " + "l1=0.00391" + "l2=0.442 f=-0.8 shape=(1, 9000, 1)
logits [[ 4.284787  -4.9760685  4.2776866 -6.7852445]]
Iteration 400 of 1000: loss=0.308 " + "l1=0" + "l2=0.308 f=-0.774 shape=(1, 9000, 1)
logits [[ 4.200436  -4.974548   4.2091093 -6.5297523]]
Iteration 500 of 1000: loss=0.253 " + "l1=0" + "l2=0.253 f=-0.764 shape=(1, 9000, 1)
logits [[ 4.1200438 -4.948707   4.126299  -6.3532915]]
Iteration 600 of 1000: loss=0.218 " + "l1=0.00197" + "l2=0.216 f=-0.761 shape=(1, 9000, 1)
logits [[ 4.0445805 -4.905811   4.040995  -6.2237043]]
Iteration 700 of 1000: loss=0.196 " + "l1=0.00061" + "l2=0.195 f=-0.759 shape=(1, 9000, 1)
logits [[ 4.007047  -4.879918   4.005938  -6.1687407]]
Iteration 800 of 1000: loss=0.182 " + "l1=0" + "l2=0.182 f=-0.754 shape=(1, 9000, 1)
logits [[ 3.9597006 -4.852418   3.96323   -6.086588 ]]
Iteration 900 of 1000: loss=0.172 " + "l1=0" + "l2=0.172 f=-0.75 shape=(1, 9000, 1)
logits [[ 3.9158788 -4.8272     3.9243493 -6.0144477]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.87 " + "l1=0.87" + "l2=0 f=-0.61 shape=(1, 9000, 1)
logits [[ 6.4918957 -4.096475   3.8162112 -8.650712 ]]
Iteration 100 of 1000: loss=0.679 " + "l1=0.584" + "l2=0.0952 f=-0.697 shape=(1, 9000, 1)
logits [[ 5.856165  -4.3999467  4.0596123 -8.304781 ]]
Iteration 200 of 1000: loss=0.6 " + "l1=0.463" + "l2=0.137 f=-0.73 shape=(1, 9000, 1)
logits [[ 5.534705  -4.4935484  4.109657  -8.070871 ]]
Iteration 300 of 1000: loss=0.522 " + "l1=0.354" + "l2=0.168 f=-0.761 shape=(1, 9000, 1)
logits [[ 5.22123   -4.6131806  4.132809  -7.783875 ]]
Iteration 400 of 1000: loss=0.441 " + "l1=0.24" + "l2=0.201 f=-0.779 shape=(1, 9000, 1)
logits [[ 4.855943  -4.739323   4.1159716 -7.3505597]]
Iteration 500 of 1000: loss=0.365 " + "l1=0.132" + "l2=0.232 f=-0.77 shape=(1, 9000, 1)
logits [[ 4.5399823 -4.8600297  4.13252   -6.8915873]]
Iteration 600 of 1000: loss=0.268 " + "l1=0" + "l2=0.268 f=-0.763 shape=(1, 9000, 1)
logits [[ 4.116563  -4.91888    4.117906  -6.3694625]]
Iteration 700 of 1000: loss=0.221 " + "l1=0.0042" + "l2=0.216 f=-0.755 shape=(1, 9000, 1)
logits [[ 4.020873  -4.870076   4.0079355 -6.1784663]]
Iteration 800 of 1000: loss=0.194 " + "l1=0" + "l2=0.194 f=-0.753 shape=(1, 9000, 1)
logits [[ 3.9519103 -4.8390346  3.957235  -6.0806246]]
Iteration 900 of 1000: loss=0.178 " + "l1=0.00368" + "l2=0.174 f=-0.748 shape=(1, 9000, 1)
logits [[ 3.9134254 -4.802182   3.9020915 -6.004635 ]]
--- 268.8395495414734 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.151 " + "l1=0.151" + "l2=0 f=-0.61 shape=(1, 9000, 1)
logits [[ 6.4918957 -4.096475   3.8162112 -8.650712 ]]
Iteration 100 of 1000: loss=0.15 " + "l1=0.15" + "l2=0.000591 f=-0.607 shape=(1, 9000, 1)
logits [[ 6.4164667 -4.0640593  3.7748258 -8.553735 ]]
Iteration 200 of 1000: loss=0.15 " + "l1=0.149" + "l2=0.000666 f=-0.606 shape=(1, 9000, 1)
logits [[ 6.397204  -4.0556006  3.765079  -8.528936 ]]
Iteration 300 of 1000: loss=0.15 " + "l1=0.149" + "l2=0.00082 f=-0.604 shape=(1, 9000, 1)
logits [[ 6.375597  -4.0454865  3.7528346 -8.500564 ]]
Iteration 400 of 1000: loss=0.149 " + "l1=0.148" + "l2=0.00101 f=-0.603 shape=(1, 9000, 1)
logits [[ 6.3541007 -4.035406   3.7401674 -8.471824 ]]
Iteration 500 of 1000: loss=0.149 " + "l1=0.148" + "l2=0.00122 f=-0.602 shape=(1, 9000, 1)
logits [[ 6.3330674 -4.02574    3.7276576 -8.443482 ]]
Iteration 600 of 1000: loss=0.149 " + "l1=0.147" + "l2=0.00138 f=-0.601 shape=(1, 9000, 1)
logits [[ 6.3126225 -4.016139   3.7153053 -8.41614  ]]
Iteration 700 of 1000: loss=0.148 " + "l1=0.147" + "l2=0.0016 f=-0.6 shape=(1, 9000, 1)
logits [[ 6.2936115 -4.0062623  3.7030575 -8.390571 ]]
Iteration 800 of 1000: loss=0.148 " + "l1=0.146" + "l2=0.00189 f=-0.599 shape=(1, 9000, 1)
logits [[ 6.274775  -3.996161   3.6907768 -8.365254 ]]
Iteration 900 of 1000: loss=0.148 " + "l1=0.146" + "l2=0.00206 f=-0.598 shape=(1, 9000, 1)
logits [[ 6.256705  -3.9864943  3.6790166 -8.340724 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.51 " + "l1=1.51" + "l2=0 f=-0.61 shape=(1, 9000, 1)
logits [[ 6.4918957 -4.096475   3.8162112 -8.650712 ]]
Iteration 100 of 1000: loss=1.41 " + "l1=1.36" + "l2=0.0493 f=-0.578 shape=(1, 9000, 1)
logits [[ 5.834718  -3.784253   3.4260466 -7.789458 ]]
Iteration 200 of 1000: loss=1.36 " + "l1=1.28" + "l2=0.0733 f=-0.558 shape=(1, 9000, 1)
logits [[ 5.494594  -3.6338246  3.2344248 -7.3253427]]
Iteration 300 of 1000: loss=1.3 " + "l1=1.21" + "l2=0.0947 f=-0.54 shape=(1, 9000, 1)
logits [[ 5.1930676 -3.5175593  3.05409   -6.88971  ]]
Iteration 400 of 1000: loss=1.24 " + "l1=1.12" + "l2=0.12 f=-0.525 shape=(1, 9000, 1)
logits [[ 4.8280754 -3.4163918  2.8644497 -6.3760405]]
Iteration 500 of 1000: loss=1.16 " + "l1=1.01" + "l2=0.151 f=-0.51 shape=(1, 9000, 1)
logits [[ 4.377598  -3.3233197  2.657559  -5.7520022]]
Iteration 600 of 1000: loss=1.09 " + "l1=0.919" + "l2=0.174 f=-0.483 shape=(1, 9000, 1)
logits [[ 4.001393  -3.2311876  2.4835637 -5.1846933]]
Iteration 700 of 1000: loss=1.02 " + "l1=0.822" + "l2=0.203 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.6180205 -3.1560543  2.3421795 -4.6022696]]
Iteration 800 of 1000: loss=0.953 " + "l1=0.722" + "l2=0.232 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.1909125 -3.076037   2.2184434 -4.0249486]]
Iteration 900 of 1000: loss=0.879 " + "l1=0.623" + "l2=0.256 f=-0.384 shape=(1, 9000, 1)
logits [[ 2.777733  -2.9779432  2.1176407 -3.452882 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=15.1 " + "l1=15.1" + "l2=0 f=-0.61 shape=(1, 9000, 1)
logits [[ 6.4918957 -4.096475   3.8162112 -8.650712 ]]
Iteration 100 of 1000: loss=7.44 " + "l1=4.25" + "l2=3.19 f=-0.255 shape=(1, 9000, 1)
logits [[ 1.9694396 -2.076889   1.3659502 -2.2800796]]
Iteration 200 of 1000: loss=3.35 " + "l1=0" + "l2=3.35 f=-0.123 shape=(1, 9000, 1)
logits [[ 0.23539272 -1.4490095   0.344421    0.37752938]]
Iteration 300 of 1000: loss=2.38 " + "l1=0.00663" + "l2=2.37 f=-0.128 shape=(1, 9000, 1)
logits [[ 0.20519054 -1.4897544   0.389667    0.38303939]]
Iteration 400 of 1000: loss=1.93 " + "l1=0" + "l2=1.93 f=-0.123 shape=(1, 9000, 1)
logits [[ 0.17208648 -1.504545    0.3904738   0.4515847 ]]
Iteration 500 of 1000: loss=1.64 " + "l1=0" + "l2=1.64 f=-0.118 shape=(1, 9000, 1)
logits [[ 0.19944528 -1.5219423   0.41075304  0.44097328]]
Iteration 600 of 1000: loss=1.45 " + "l1=0.00413" + "l2=1.44 f=-0.112 shape=(1, 9000, 1)
logits [[ 0.2303082  -1.5405451   0.43224975  0.4281155 ]]
Iteration 700 of 1000: loss=1.3 " + "l1=0" + "l2=1.3 f=-0.103 shape=(1, 9000, 1)
logits [[ 0.23137543 -1.5267793   0.43391898  0.44981694]]
Iteration 800 of 1000: loss=1.19 " + "l1=0.0259" + "l2=1.16 f=-0.0955 shape=(1, 9000, 1)
logits [[ 0.2678159  -1.5069368   0.44154477  0.41560888]]
Iteration 900 of 1000: loss=1.08 " + "l1=0.00931" + "l2=1.07 f=-0.0889 shape=(1, 9000, 1)
logits [[ 0.27646393 -1.4789408   0.42818037  0.4188668 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=8.33 " + "l1=8.33" + "l2=0 f=-0.61 shape=(1, 9000, 1)
logits [[ 6.4918957 -4.096475   3.8162112 -8.650712 ]]
Iteration 100 of 1000: loss=5.52 " + "l1=4.3" + "l2=1.22 f=-0.369 shape=(1, 9000, 1)
logits [[ 3.4524086 -2.6059816  2.0426517 -4.3653145]]
Iteration 200 of 1000: loss=3.42 " + "l1=1.48" + "l2=1.93 f=-0.245 shape=(1, 9000, 1)
logits [[ 1.3140491 -2.1450922  1.2384168 -1.3854319]]
Iteration 300 of 1000: loss=2.16 " + "l1=0.24" + "l2=1.92 f=-0.141 shape=(1, 9000, 1)
logits [[ 0.35255545 -1.5550585   0.536759    0.10073714]]
Iteration 400 of 1000: loss=1.58 " + "l1=0.00368" + "l2=1.58 f=-0.12 shape=(1, 9000, 1)
logits [[ 0.17358038 -1.4748054   0.41360226  0.4069111 ]]
Iteration 500 of 1000: loss=1.3 " + "l1=0.00551" + "l2=1.3 f=-0.112 shape=(1, 9000, 1)
logits [[ 0.17245832 -1.4889964   0.43976057  0.42973578]]
Iteration 600 of 1000: loss=1.14 " + "l1=0" + "l2=1.14 f=-0.101 shape=(1, 9000, 1)
logits [[ 0.17416632 -1.4741535   0.4423068   0.45171362]]
Iteration 700 of 1000: loss=1.04 " + "l1=0" + "l2=1.04 f=-0.091 shape=(1, 9000, 1)
logits [[ 0.187221   -1.4940696   0.46551883  0.47725362]]
Iteration 800 of 1000: loss=0.969 " + "l1=0" + "l2=0.969 f=-0.0854 shape=(1, 9000, 1)
logits [[ 0.19991568 -1.496962    0.47745985  0.47815993]]
Iteration 900 of 1000: loss=0.917 " + "l1=0" + "l2=0.917 f=-0.0817 shape=(1, 9000, 1)
logits [[ 0.19679952 -1.4998641   0.48262227  0.49362245]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.92 " + "l1=4.92" + "l2=0 f=-0.61 shape=(1, 9000, 1)
logits [[ 6.4918957 -4.096475   3.8162112 -8.650712 ]]
Iteration 100 of 1000: loss=3.84 " + "l1=3.35" + "l2=0.491 f=-0.468 shape=(1, 9000, 1)
logits [[ 4.473174  -3.1351345  2.6109328 -5.819656 ]]
Iteration 200 of 1000: loss=3.12 " + "l1=2.36" + "l2=0.762 f=-0.395 shape=(1, 9000, 1)
logits [[ 3.2175052 -2.732005   1.9811267 -4.0477295]]
Iteration 300 of 1000: loss=2.29 " + "l1=1.28" + "l2=1 f=-0.323 shape=(1, 9000, 1)
logits [[ 1.8002288 -2.426517   1.4881825 -2.1519852]]
Iteration 400 of 1000: loss=1.74 " + "l1=0.691" + "l2=1.05 f=-0.218 shape=(1, 9000, 1)
logits [[ 1.094394  -2.045348   1.102262  -1.0251262]]
Iteration 500 of 1000: loss=1.42 " + "l1=0.359" + "l2=1.06 f=-0.166 shape=(1, 9000, 1)
logits [[ 0.67666537 -1.7851608   0.77350676 -0.33033246]]
Iteration 600 of 1000: loss=1.03 " + "l1=0" + "l2=1.03 f=-0.103 shape=(1, 9000, 1)
logits [[ 0.16624476 -1.5916926   0.49700764  0.5176953 ]]
Iteration 700 of 1000: loss=0.855 " + "l1=0.0105" + "l2=0.844 f=-0.0846 shape=(1, 9000, 1)
logits [[ 0.22715056 -1.6240927   0.54554826  0.5131606 ]]
Iteration 800 of 1000: loss=0.749 " + "l1=0.000188" + "l2=0.749 f=-0.0664 shape=(1, 9000, 1)
logits [[ 0.23484358 -1.5720078   0.53615195  0.5355745 ]]
Iteration 900 of 1000: loss=0.687 " + "l1=0.00766" + "l2=0.68 f=-0.05 shape=(1, 9000, 1)
logits [[ 0.25368783 -1.5224411   0.54617757  0.52262354]]
--- 297.61821818351746 seconds ---
Adv result:3
Loading record A05005
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0762 " + "l1=0.0762" + "l2=0 f=-0.596 shape=(1, 9000, 1)
logits [[ 4.921669  -2.6979175  2.797284  -7.4030657]]
Iteration 100 of 1000: loss=0.0758 " + "l1=0.0755" + "l2=0.000306 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.871382  -2.6774487  2.780658  -7.3541403]]
Iteration 200 of 1000: loss=0.0757 " + "l1=0.0754" + "l2=0.000285 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.865499  -2.674158   2.7781298 -7.3480215]]
Iteration 300 of 1000: loss=0.0756 " + "l1=0.0753" + "l2=0.000342 f=-0.594 shape=(1, 9000, 1)
logits [[ 4.8563924 -2.6695564  2.7745168 -7.3388453]]
Iteration 400 of 1000: loss=0.0755 " + "l1=0.0751" + "l2=0.000403 f=-0.594 shape=(1, 9000, 1)
logits [[ 4.847029  -2.664763   2.7709064 -7.3294506]]
Iteration 500 of 1000: loss=0.0755 " + "l1=0.075" + "l2=0.000515 f=-0.594 shape=(1, 9000, 1)
logits [[ 4.8381515 -2.6601596  2.7675254 -7.320537 ]]
Iteration 600 of 1000: loss=0.0755 " + "l1=0.0749" + "l2=0.000626 f=-0.593 shape=(1, 9000, 1)
logits [[ 4.829646  -2.6558454  2.764492  -7.3120527]]
Iteration 700 of 1000: loss=0.0755 " + "l1=0.0747" + "l2=0.000738 f=-0.593 shape=(1, 9000, 1)
logits [[ 4.8214393 -2.6516905  2.7617362 -7.3039503]]
Iteration 800 of 1000: loss=0.0754 " + "l1=0.0746" + "l2=0.000772 f=-0.593 shape=(1, 9000, 1)
logits [[ 4.8136353 -2.6477566  2.7592328 -7.296073 ]]
Iteration 900 of 1000: loss=0.0755 " + "l1=0.0745" + "l2=0.00097 f=-0.592 shape=(1, 9000, 1)
logits [[ 4.8065014 -2.644314   2.757175  -7.288457 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.762 " + "l1=0.762" + "l2=0 f=-0.596 shape=(1, 9000, 1)
logits [[ 4.921669  -2.6979175  2.797284  -7.4030657]]
Iteration 100 of 1000: loss=0.728 " + "l1=0.711" + "l2=0.0177 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.557179  -2.550554   2.6732688 -7.034636 ]]
Iteration 200 of 1000: loss=0.714 " + "l1=0.689" + "l2=0.0251 f=-0.581 shape=(1, 9000, 1)
logits [[ 4.4026523 -2.4824874  2.6112838 -6.855802 ]]
Iteration 300 of 1000: loss=0.7 " + "l1=0.67" + "l2=0.0307 f=-0.572 shape=(1, 9000, 1)
logits [[ 4.282143  -2.4160473  2.5561464 -6.709007 ]]
Iteration 400 of 1000: loss=0.688 " + "l1=0.651" + "l2=0.0366 f=-0.562 shape=(1, 9000, 1)
logits [[ 4.169114  -2.3429985  2.5013268 -6.5758348]]
Iteration 500 of 1000: loss=0.676 " + "l1=0.632" + "l2=0.0438 f=-0.552 shape=(1, 9000, 1)
logits [[ 4.050943  -2.271189   2.4446824 -6.434145 ]]
Iteration 600 of 1000: loss=0.665 " + "l1=0.616" + "l2=0.0489 f=-0.545 shape=(1, 9000, 1)
logits [[ 3.953308  -2.2089107  2.3978631 -6.3207126]]
Iteration 700 of 1000: loss=0.652 " + "l1=0.595" + "l2=0.0571 f=-0.534 shape=(1, 9000, 1)
logits [[ 3.820324  -2.1322095  2.3416715 -6.1670833]]
Iteration 800 of 1000: loss=0.638 " + "l1=0.572" + "l2=0.0652 f=-0.522 shape=(1, 9000, 1)
logits [[ 3.6760209 -2.0477295  2.285324  -6.000423 ]]
Iteration 900 of 1000: loss=0.623 " + "l1=0.549" + "l2=0.0738 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.5225847 -1.9713356  2.2376127 -5.8327184]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.62 " + "l1=7.62" + "l2=0 f=-0.596 shape=(1, 9000, 1)
logits [[ 4.921669  -2.6979175  2.797284  -7.4030657]]
Iteration 100 of 1000: loss=4.15 " + "l1=2.75" + "l2=1.4 f=-0.452 shape=(1, 9000, 1)
logits [[ 1.6333934 -1.1133138  1.629884  -3.9576497]]
Iteration 200 of 1000: loss=3.23 " + "l1=1.75" + "l2=1.47 f=-0.452 shape=(1, 9000, 1)
logits [[ 1.15861   -0.5746585  1.1788312 -3.5718644]]
Iteration 300 of 1000: loss=2.72 " + "l1=1.35" + "l2=1.37 f=-0.449 shape=(1, 9000, 1)
logits [[ 1.0215993 -0.3298077  1.014724  -3.5016637]]
Iteration 400 of 1000: loss=2.43 " + "l1=1.08" + "l2=1.35 f=-0.447 shape=(1, 9000, 1)
logits [[ 0.9032152  -0.17185257  0.9099328  -3.4287071 ]]
Iteration 500 of 1000: loss=2.25 " + "l1=0.934" + "l2=1.31 f=-0.447 shape=(1, 9000, 1)
logits [[ 0.8414527  -0.08801232  0.8455609  -3.3856888 ]]
Iteration 600 of 1000: loss=2.12 " + "l1=0.787" + "l2=1.33 f=-0.444 shape=(1, 9000, 1)
logits [[ 0.74329025 -0.01775439  0.7687863  -3.2723186 ]]
Iteration 700 of 1000: loss=2.02 " + "l1=0.674" + "l2=1.34 f=-0.437 shape=(1, 9000, 1)
logits [[ 0.6811493   0.03069745  0.70425516 -3.1622467 ]]
Iteration 800 of 1000: loss=1.86 " + "l1=0.479" + "l2=1.38 f=-0.418 shape=(1, 9000, 1)
logits [[ 0.57874095  0.09983385  0.5775723  -2.9282694 ]]
Iteration 900 of 1000: loss=1.66 " + "l1=0.275" + "l2=1.38 f=-0.401 shape=(1, 9000, 1)
logits [[ 0.44882312  0.18863022  0.4638237  -2.7061958 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=76.2 " + "l1=76.2" + "l2=0 f=-0.596 shape=(1, 9000, 1)
logits [[ 4.921669  -2.6979175  2.797284  -7.4030657]]
Iteration 100 of 1000: loss=9.52 " + "l1=0" + "l2=9.52 f=-0.483 shape=(1, 9000, 1)
logits [[-2.3116674e-03  6.1290646e-01  5.8217889e-01 -3.1263034e+00]]
Iteration 200 of 1000: loss=5.6 " + "l1=0" + "l2=5.6 f=-0.486 shape=(1, 9000, 1)
logits [[ 0.20881227  0.58365345  0.5696164  -3.3076496 ]]
Iteration 300 of 1000: loss=4.74 " + "l1=0" + "l2=4.74 f=-0.486 shape=(1, 9000, 1)
logits [[ 0.2803554   0.56231314  0.5592311  -3.3450553 ]]
Iteration 400 of 1000: loss=4.34 " + "l1=0.0283" + "l2=4.31 f=-0.486 shape=(1, 9000, 1)
logits [[ 0.28657457  0.55013955  0.552973   -3.3341913 ]]
Iteration 500 of 1000: loss=4.11 " + "l1=0" + "l2=4.11 f=-0.486 shape=(1, 9000, 1)
logits [[ 0.2691144   0.56745976  0.5427784  -3.324961  ]]
Iteration 600 of 1000: loss=3.86 " + "l1=0" + "l2=3.86 f=-0.483 shape=(1, 9000, 1)
logits [[ 0.31087828  0.5646917   0.5609475  -3.3675666 ]]
Iteration 700 of 1000: loss=3.71 " + "l1=0" + "l2=3.71 f=-0.479 shape=(1, 9000, 1)
logits [[ 0.33936962  0.5777331   0.5699548  -3.402725  ]]
Iteration 800 of 1000: loss=3.58 " + "l1=0.0261" + "l2=3.56 f=-0.474 shape=(1, 9000, 1)
logits [[ 0.35648486  0.56951433  0.5721264  -3.395415  ]]
Iteration 900 of 1000: loss=3.46 " + "l1=0" + "l2=3.46 f=-0.473 shape=(1, 9000, 1)
logits [[ 0.34240058  0.57505137  0.569011   -3.3769827 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=41.9 " + "l1=41.9" + "l2=0 f=-0.596 shape=(1, 9000, 1)
logits [[ 4.921669  -2.6979175  2.797284  -7.4030657]]
Iteration 100 of 1000: loss=8.32 " + "l1=2.31" + "l2=6.01 f=-0.461 shape=(1, 9000, 1)
logits [[ 0.5898021   0.31055203  0.73107356 -3.4738202 ]]
Iteration 200 of 1000: loss=4.63 " + "l1=0" + "l2=4.63 f=-0.468 shape=(1, 9000, 1)
logits [[ 0.30584612  0.5578849   0.5568894  -3.2915494 ]]
Iteration 300 of 1000: loss=4.05 " + "l1=0.0498" + "l2=4 f=-0.463 shape=(1, 9000, 1)
logits [[ 0.33996806  0.54906255  0.5581205  -3.2996151 ]]
Iteration 400 of 1000: loss=3.71 " + "l1=0" + "l2=3.71 f=-0.464 shape=(1, 9000, 1)
logits [[ 0.35124707  0.5615694   0.5507446  -3.3211951 ]]
Iteration 500 of 1000: loss=3.48 " + "l1=0" + "l2=3.48 f=-0.468 shape=(1, 9000, 1)
logits [[ 0.37315503  0.5613914   0.55969673 -3.3676047 ]]
Iteration 600 of 1000: loss=3.32 " + "l1=0" + "l2=3.32 f=-0.47 shape=(1, 9000, 1)
logits [[ 0.3889652  0.5700417  0.5665389 -3.4066968]]
Iteration 700 of 1000: loss=3.17 " + "l1=0" + "l2=3.17 f=-0.476 shape=(1, 9000, 1)
logits [[ 0.4053389  0.5777196  0.5715308 -3.4582133]]
Iteration 800 of 1000: loss=3.06 " + "l1=0.0388" + "l2=3.02 f=-0.479 shape=(1, 9000, 1)
logits [[ 0.41769463  0.5640196   0.5710818  -3.4674017 ]]
Iteration 900 of 1000: loss=2.91 " + "l1=0.00688" + "l2=2.9 f=-0.481 shape=(1, 9000, 1)
logits [[ 0.378148    0.5669188   0.56816953 -3.4377048 ]]
--- 292.1082100868225 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0212 " + "l1=0.0212" + "l2=0 f=-0.596 shape=(1, 9000, 1)
logits [[ 4.921669  -2.6979175  2.797284  -7.4030657]]
Iteration 100 of 1000: loss=0.021 " + "l1=0.0208" + "l2=0.000234 f=-0.597 shape=(1, 9000, 1)
logits [[ 4.8801227 -2.7024524  2.80065   -7.3681054]]
Iteration 200 of 1000: loss=0.021 " + "l1=0.0208" + "l2=0.000184 f=-0.597 shape=(1, 9000, 1)
logits [[ 4.8787036 -2.702254   2.800688  -7.36707  ]]
Iteration 300 of 1000: loss=0.0209 " + "l1=0.0207" + "l2=0.000211 f=-0.598 shape=(1, 9000, 1)
logits [[ 4.873494  -2.702514   2.8010721 -7.3629327]]
Iteration 400 of 1000: loss=0.0209 " + "l1=0.0207" + "l2=0.000238 f=-0.598 shape=(1, 9000, 1)
logits [[ 4.867947  -2.7027013  2.801509  -7.358433 ]]
Iteration 500 of 1000: loss=0.0209 " + "l1=0.0206" + "l2=0.000318 f=-0.598 shape=(1, 9000, 1)
logits [[ 4.8625474 -2.7026706  2.8018823 -7.3539734]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.212 " + "l1=0.212" + "l2=0 f=-0.596 shape=(1, 9000, 1)
logits [[ 4.921669  -2.6979175  2.797284  -7.4030657]]
Iteration 100 of 1000: loss=0.192 " + "l1=0.18" + "l2=0.0116 f=-0.612 shape=(1, 9000, 1)
logits [[ 4.632203  -2.745323   2.8277452 -7.1627235]]
Iteration 200 of 1000: loss=0.185 " + "l1=0.169" + "l2=0.0166 f=-0.616 shape=(1, 9000, 1)
logits [[ 4.5277705 -2.7624729  2.8409226 -7.0701413]]
Iteration 300 of 1000: loss=0.18 " + "l1=0.16" + "l2=0.0203 f=-0.618 shape=(1, 9000, 1)
logits [[ 4.4443755 -2.7751157  2.8486292 -6.9901524]]
Iteration 400 of 1000: loss=0.176 " + "l1=0.153" + "l2=0.0224 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.384369  -2.7796652  2.851179  -6.9304013]]
Iteration 500 of 1000: loss=0.172 " + "l1=0.148" + "l2=0.024 f=-0.618 shape=(1, 9000, 1)
logits [[ 4.330625  -2.7763367  2.848955  -6.8751197]]
Iteration 600 of 1000: loss=0.169 " + "l1=0.144" + "l2=0.0253 f=-0.616 shape=(1, 9000, 1)
logits [[ 4.2845116 -2.770844   2.845933  -6.8233027]]
Iteration 700 of 1000: loss=0.166 " + "l1=0.14" + "l2=0.0266 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.240958 -2.765095  2.842666 -6.773357]]
Iteration 800 of 1000: loss=0.164 " + "l1=0.137" + "l2=0.0271 f=-0.611 shape=(1, 9000, 1)
logits [[ 4.2041273 -2.7554684  2.8367105 -6.7285976]]
Iteration 900 of 1000: loss=0.161 " + "l1=0.134" + "l2=0.0278 f=-0.608 shape=(1, 9000, 1)
logits [[ 4.164752  -2.7463756  2.829688  -6.68081  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.12 " + "l1=2.12" + "l2=0 f=-0.596 shape=(1, 9000, 1)
logits [[ 4.921669  -2.6979175  2.797284  -7.4030657]]
Iteration 100 of 1000: loss=0.49 " + "l1=0.00227" + "l2=0.488 f=-0.619 shape=(1, 9000, 1)
logits [[ 2.9284375 -2.8806782  2.9261675 -5.448935 ]]
Iteration 200 of 1000: loss=0.391 " + "l1=0" + "l2=0.391 f=-0.618 shape=(1, 9000, 1)
logits [[ 2.9347732 -2.8868802  2.9427474 -5.4613247]]
Iteration 300 of 1000: loss=0.343 " + "l1=0.00254" + "l2=0.34 f=-0.609 shape=(1, 9000, 1)
logits [[ 2.9341068 -2.8615305  2.9315624 -5.4395924]]
Iteration 400 of 1000: loss=0.317 " + "l1=0.0108" + "l2=0.306 f=-0.604 shape=(1, 9000, 1)
logits [[ 2.9188921 -2.83431    2.9080498 -5.4082007]]
Iteration 500 of 1000: loss=0.288 " + "l1=0" + "l2=0.288 f=-0.601 shape=(1, 9000, 1)
logits [[ 2.8837535 -2.8131342  2.885567  -5.359243 ]]
Iteration 600 of 1000: loss=0.275 " + "l1=0.00772" + "l2=0.267 f=-0.597 shape=(1, 9000, 1)
logits [[ 2.8701982 -2.78487    2.8624747 -5.3364806]]
Iteration 700 of 1000: loss=0.259 " + "l1=0.0073" + "l2=0.252 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.8550606 -2.769242   2.8477561 -5.3143106]]
Iteration 800 of 1000: loss=0.242 " + "l1=0.00558" + "l2=0.236 f=-0.594 shape=(1, 9000, 1)
logits [[ 2.8404589 -2.7553427  2.8348813 -5.295406 ]]
Iteration 900 of 1000: loss=0.23 " + "l1=0" + "l2=0.23 f=-0.592 shape=(1, 9000, 1)
logits [[ 2.7953708 -2.7468357  2.8228638 -5.2395825]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.17 " + "l1=1.17" + "l2=0 f=-0.596 shape=(1, 9000, 1)
logits [[ 4.921669  -2.6979175  2.797284  -7.4030657]]
Iteration 100 of 1000: loss=0.556 " + "l1=0.213" + "l2=0.343 f=-0.634 shape=(1, 9000, 1)
logits [[ 3.3345037 -2.92494    2.9477403 -5.8917675]]
Iteration 200 of 1000: loss=0.386 " + "l1=0.00121" + "l2=0.385 f=-0.624 shape=(1, 9000, 1)
logits [[ 2.9870467 -2.9474134  2.9848428 -5.518522 ]]
Iteration 300 of 1000: loss=0.328 " + "l1=0.0016" + "l2=0.327 f=-0.608 shape=(1, 9000, 1)
logits [[ 2.9584577 -2.8785582  2.9555485 -5.4673147]]
Iteration 400 of 1000: loss=0.298 " + "l1=0.00361" + "l2=0.294 f=-0.605 shape=(1, 9000, 1)
logits [[ 2.9195938 -2.8295171  2.9130247 -5.4222345]]
Iteration 500 of 1000: loss=0.275 " + "l1=0.00229" + "l2=0.273 f=-0.6 shape=(1, 9000, 1)
logits [[ 2.8816833 -2.7899675  2.8775263 -5.3689427]]
Iteration 600 of 1000: loss=0.255 " + "l1=0.00167" + "l2=0.254 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.8596165 -2.7659526  2.8565826 -5.331624 ]]
Iteration 700 of 1000: loss=0.238 " + "l1=0.00636" + "l2=0.232 f=-0.591 shape=(1, 9000, 1)
logits [[ 2.8461971 -2.7433383  2.8346274 -5.3020673]]
Iteration 800 of 1000: loss=0.218 " + "l1=0.00405" + "l2=0.214 f=-0.586 shape=(1, 9000, 1)
logits [[ 2.824753  -2.7256122  2.8173878 -5.258554 ]]
Iteration 900 of 1000: loss=0.2 " + "l1=0.00301" + "l2=0.197 f=-0.579 shape=(1, 9000, 1)
logits [[ 2.816297  -2.7066855  2.810829  -5.236267 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.69 " + "l1=0.69" + "l2=0 f=-0.596 shape=(1, 9000, 1)
logits [[ 4.921669  -2.6979175  2.797284  -7.4030657]]
Iteration 100 of 1000: loss=0.477 " + "l1=0.364" + "l2=0.113 f=-0.63 shape=(1, 9000, 1)
logits [[ 4.0230246 -2.8550189  2.9043365 -6.5939574]]
Iteration 200 of 1000: loss=0.406 " + "l1=0.227" + "l2=0.179 f=-0.636 shape=(1, 9000, 1)
logits [[ 3.6524973 -2.9196122  2.9543102 -6.229232 ]]
Iteration 300 of 1000: loss=0.362 " + "l1=0.153" + "l2=0.208 f=-0.628 shape=(1, 9000, 1)
logits [[ 3.434322  -2.9102232  2.9620183 -5.9981904]]
Iteration 400 of 1000: loss=0.329 " + "l1=0.0995" + "l2=0.23 f=-0.617 shape=(1, 9000, 1)
logits [[ 3.24812   -2.8708305  2.9418366 -5.789029 ]]
Iteration 500 of 1000: loss=0.288 " + "l1=0.0379" + "l2=0.25 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.01783   -2.7906935  2.901127  -5.5436845]]
Iteration 600 of 1000: loss=0.257 " + "l1=0.0114" + "l2=0.245 f=-0.596 shape=(1, 9000, 1)
logits [[ 2.9044037 -2.7498453  2.8691807 -5.4078097]]
Iteration 700 of 1000: loss=0.224 " + "l1=0.00123" + "l2=0.223 f=-0.591 shape=(1, 9000, 1)
logits [[ 2.8513403 -2.7289143  2.847554  -5.333838 ]]
Iteration 800 of 1000: loss=0.198 " + "l1=0.000963" + "l2=0.197 f=-0.585 shape=(1, 9000, 1)
logits [[ 2.8356042 -2.71789    2.8326416 -5.2886753]]
Iteration 900 of 1000: loss=0.18 " + "l1=0.000396" + "l2=0.179 f=-0.581 shape=(1, 9000, 1)
logits [[ 2.8156462 -2.6971254  2.8144274 -5.255243 ]]
--- 269.55146765708923 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.123 " + "l1=0.123" + "l2=0 f=-0.596 shape=(1, 9000, 1)
logits [[ 4.921669  -2.6979175  2.797284  -7.4030657]]
Iteration 100 of 1000: loss=0.122 " + "l1=0.121" + "l2=0.000762 f=-0.594 shape=(1, 9000, 1)
logits [[ 4.837147  -2.6929927  2.7770514 -7.2965384]]
Iteration 200 of 1000: loss=0.122 " + "l1=0.121" + "l2=0.000826 f=-0.593 shape=(1, 9000, 1)
logits [[ 4.8221726 -2.6899188  2.7716544 -7.276917 ]]
Iteration 300 of 1000: loss=0.122 " + "l1=0.121" + "l2=0.000975 f=-0.592 shape=(1, 9000, 1)
logits [[ 4.805379 -2.686756  2.765927 -7.254444]]
Iteration 400 of 1000: loss=0.121 " + "l1=0.12" + "l2=0.00111 f=-0.592 shape=(1, 9000, 1)
logits [[ 4.790189  -2.6834624  2.7607126 -7.233609 ]]
Iteration 500 of 1000: loss=0.121 " + "l1=0.12" + "l2=0.00132 f=-0.591 shape=(1, 9000, 1)
logits [[ 4.775026  -2.680068   2.755833  -7.2130837]]
Iteration 600 of 1000: loss=0.121 " + "l1=0.12" + "l2=0.00152 f=-0.59 shape=(1, 9000, 1)
logits [[ 4.760773  -2.676626   2.7512782 -7.193464 ]]
Iteration 700 of 1000: loss=0.121 " + "l1=0.119" + "l2=0.00167 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.7471137 -2.6732755  2.7471497 -7.174737 ]]
Iteration 800 of 1000: loss=0.121 " + "l1=0.119" + "l2=0.00184 f=-0.587 shape=(1, 9000, 1)
logits [[ 4.7338696 -2.669947   2.7431924 -7.1568274]]
Iteration 900 of 1000: loss=0.121 " + "l1=0.119" + "l2=0.00201 f=-0.586 shape=(1, 9000, 1)
logits [[ 4.7213135 -2.66665    2.7395363 -7.139554 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.23 " + "l1=1.23" + "l2=0 f=-0.596 shape=(1, 9000, 1)
logits [[ 4.921669  -2.6979175  2.797284  -7.4030657]]
Iteration 100 of 1000: loss=1.12 " + "l1=1.06" + "l2=0.061 f=-0.578 shape=(1, 9000, 1)
logits [[ 4.1754155 -2.6626565  2.6123722 -6.4366884]]
Iteration 200 of 1000: loss=1.08 " + "l1=0.987" + "l2=0.0901 f=-0.557 shape=(1, 9000, 1)
logits [[ 3.8736036 -2.6197188  2.5177214 -5.999175 ]]
Iteration 300 of 1000: loss=1.03 " + "l1=0.902" + "l2=0.125 f=-0.535 shape=(1, 9000, 1)
logits [[ 3.526488  -2.5676107  2.397452  -5.495206 ]]
Iteration 400 of 1000: loss=0.98 " + "l1=0.831" + "l2=0.149 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.2437885 -2.495515   2.2975247 -5.0658627]]
Iteration 500 of 1000: loss=0.943 " + "l1=0.776" + "l2=0.167 f=-0.48 shape=(1, 9000, 1)
logits [[ 3.0221522 -2.4161518  2.2131953 -4.737813 ]]
Iteration 600 of 1000: loss=0.907 " + "l1=0.721" + "l2=0.186 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.7875757 -2.3193142  2.1325893 -4.4209094]]
Iteration 700 of 1000: loss=0.869 " + "l1=0.673" + "l2=0.196 f=-0.432 shape=(1, 9000, 1)
logits [[ 2.5755177 -2.2161348  2.0681386 -4.157217 ]]
Iteration 800 of 1000: loss=0.839 " + "l1=0.634" + "l2=0.205 f=-0.419 shape=(1, 9000, 1)
logits [[ 2.3997822 -2.1566768  2.018643  -3.9392872]]
Iteration 900 of 1000: loss=0.814 " + "l1=0.603" + "l2=0.21 f=-0.409 shape=(1, 9000, 1)
logits [[ 2.2608511 -2.1071148  1.9834552 -3.7727845]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.3 " + "l1=12.3" + "l2=0 f=-0.596 shape=(1, 9000, 1)
logits [[ 4.921669  -2.6979175  2.797284  -7.4030657]]
Iteration 100 of 1000: loss=4.62 " + "l1=2.24" + "l2=2.38 f=-0.213 shape=(1, 9000, 1)
logits [[ 0.7219436 -1.9567492  1.3129243 -0.9304526]]
Iteration 200 of 1000: loss=2.95 " + "l1=0.0521" + "l2=2.9 f=-0.135 shape=(1, 9000, 1)
logits [[-0.03641514 -1.7228097   0.6365758   0.5845179 ]]
Iteration 300 of 1000: loss=2.5 " + "l1=0.00824" + "l2=2.49 f=-0.136 shape=(1, 9000, 1)
logits [[ 0.03112817 -1.7868391   0.60915715  0.6009171 ]]
Iteration 400 of 1000: loss=2.27 " + "l1=0.00672" + "l2=2.26 f=-0.135 shape=(1, 9000, 1)
logits [[ 0.06427536 -1.792673    0.5985352   0.5918156 ]]
Iteration 500 of 1000: loss=2.13 " + "l1=0.0112" + "l2=2.12 f=-0.133 shape=(1, 9000, 1)
logits [[ 0.08774585 -1.783406    0.5870861   0.5758614 ]]
Iteration 600 of 1000: loss=2.06 " + "l1=0.00334" + "l2=2.05 f=-0.132 shape=(1, 9000, 1)
logits [[ 0.09623631 -1.7828704   0.5803517   0.5770077 ]]
Iteration 700 of 1000: loss=1.99 " + "l1=0" + "l2=1.99 f=-0.133 shape=(1, 9000, 1)
logits [[ 0.09967323 -1.7878115   0.57696027  0.58046126]]
Iteration 800 of 1000: loss=1.93 " + "l1=0.00513" + "l2=1.93 f=-0.135 shape=(1, 9000, 1)
logits [[ 0.09740657 -1.7917943   0.5799914   0.57486314]]
Iteration 900 of 1000: loss=1.88 " + "l1=0.0137" + "l2=1.86 f=-0.135 shape=(1, 9000, 1)
logits [[ 0.09834646 -1.7858052   0.579587    0.5658798 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.78 " + "l1=6.78" + "l2=0 f=-0.596 shape=(1, 9000, 1)
logits [[ 4.921669  -2.6979175  2.797284  -7.4030657]]
Iteration 100 of 1000: loss=3.55 " + "l1=2.43" + "l2=1.12 f=-0.326 shape=(1, 9000, 1)
logits [[ 1.7576855 -2.234717   1.7903653 -2.6187356]]
Iteration 200 of 1000: loss=2.76 " + "l1=1.3" + "l2=1.46 f=-0.21 shape=(1, 9000, 1)
logits [[ 0.9872714 -2.00958    1.2725816 -1.0910984]]
Iteration 300 of 1000: loss=2.37 " + "l1=0.789" + "l2=1.58 f=-0.178 shape=(1, 9000, 1)
logits [[ 0.6237278  -1.9156882   1.0077977  -0.42631778]]
Iteration 400 of 1000: loss=2.13 " + "l1=0.472" + "l2=1.66 f=-0.165 shape=(1, 9000, 1)
logits [[ 0.3676336  -1.8498838   0.8403136  -0.01707459]]
Iteration 500 of 1000: loss=1.94 " + "l1=0.246" + "l2=1.69 f=-0.159 shape=(1, 9000, 1)
logits [[ 0.18379384 -1.7929662   0.70917815  0.26237315]]
Iteration 600 of 1000: loss=1.79 " + "l1=0.0474" + "l2=1.74 f=-0.163 shape=(1, 9000, 1)
logits [[ 0.0426999 -1.748327   0.5707411  0.4844998]]
Iteration 700 of 1000: loss=1.67 " + "l1=0.000436" + "l2=1.67 f=-0.165 shape=(1, 9000, 1)
logits [[-0.00361137 -1.7222153   0.5323799   0.53158647]]
Iteration 800 of 1000: loss=1.55 " + "l1=0.00722" + "l2=1.55 f=-0.167 shape=(1, 9000, 1)
logits [[-0.01333123 -1.6935971   0.52679455  0.5136744 ]]
Iteration 900 of 1000: loss=1.44 " + "l1=0" + "l2=1.44 f=-0.163 shape=(1, 9000, 1)
logits [[-0.02889538 -1.6766878   0.52520996  0.5290041 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.01 " + "l1=4.01" + "l2=0 f=-0.596 shape=(1, 9000, 1)
logits [[ 4.921669  -2.6979175  2.797284  -7.4030657]]
Iteration 100 of 1000: loss=2.64 " + "l1=1.86" + "l2=0.775 f=-0.427 shape=(1, 9000, 1)
logits [[ 2.1643279 -2.4466467  2.1388102 -3.5653496]]
Iteration 200 of 1000: loss=2.21 " + "l1=1.41" + "l2=0.799 f=-0.318 shape=(1, 9000, 1)
logits [[ 1.7474782 -2.1965873  1.760502  -2.585067 ]]
Iteration 300 of 1000: loss=1.98 " + "l1=1.15" + "l2=0.829 f=-0.269 shape=(1, 9000, 1)
logits [[ 1.515212  -2.089067   1.5219537 -2.023288 ]]
Iteration 400 of 1000: loss=1.82 " + "l1=0.971" + "l2=0.849 f=-0.229 shape=(1, 9000, 1)
logits [[ 1.3384435 -1.9876784  1.3610193 -1.6277642]]
Iteration 500 of 1000: loss=1.73 " + "l1=0.853" + "l2=0.876 f=-0.207 shape=(1, 9000, 1)
logits [[ 1.2137938 -1.9326683  1.2568359 -1.3673491]]
Iteration 600 of 1000: loss=1.67 " + "l1=0.761" + "l2=0.907 f=-0.196 shape=(1, 9000, 1)
logits [[ 1.0939267 -1.9014056  1.182874  -1.1578866]]
Iteration 700 of 1000: loss=1.62 " + "l1=0.688" + "l2=0.928 f=-0.189 shape=(1, 9000, 1)
logits [[ 0.9975134 -1.8857542  1.1240253 -0.9922605]]
Iteration 800 of 1000: loss=1.55 " + "l1=0.611" + "l2=0.939 f=-0.174 shape=(1, 9000, 1)
logits [[ 0.9179347 -1.8703924  1.0681494 -0.8130398]]
Iteration 900 of 1000: loss=1.43 " + "l1=0.453" + "l2=0.973 f=-0.153 shape=(1, 9000, 1)
logits [[ 0.7271131  -1.8369533   0.94527394 -0.44853848]]
--- 302.5396409034729 seconds ---
Adv result:3
Loading record A05043
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0888 " + "l1=0.0888" + "l2=0 f=-0.888 shape=(1, 9000, 1)
logits [[ 5.3658996 -3.5149     3.9159198 -9.316941 ]]
Iteration 100 of 1000: loss=0.0884 " + "l1=0.0881" + "l2=0.000295 f=-0.884 shape=(1, 9000, 1)
logits [[ 5.3324704 -3.4760473  3.8869479 -9.278075 ]]
Iteration 200 of 1000: loss=0.0882 " + "l1=0.0879" + "l2=0.000315 f=-0.883 shape=(1, 9000, 1)
logits [[ 5.3262773 -3.4664266  3.8786366 -9.269996 ]]
Iteration 300 of 1000: loss=0.0882 " + "l1=0.0877" + "l2=0.000406 f=-0.882 shape=(1, 9000, 1)
logits [[ 5.3184705 -3.455896   3.8696897 -9.26044  ]]
Iteration 400 of 1000: loss=0.0881 " + "l1=0.0875" + "l2=0.000506 f=-0.881 shape=(1, 9000, 1)
logits [[ 5.3101687 -3.444515   3.860247  -9.250474 ]]
Iteration 500 of 1000: loss=0.088 " + "l1=0.0874" + "l2=0.000636 f=-0.88 shape=(1, 9000, 1)
logits [[ 5.3016553 -3.4339323  3.8514628 -9.240784 ]]
Iteration 600 of 1000: loss=0.088 " + "l1=0.0872" + "l2=0.00081 f=-0.88 shape=(1, 9000, 1)
logits [[ 5.2929816 -3.423704   3.8427799 -9.231447 ]]
Iteration 700 of 1000: loss=0.0879 " + "l1=0.087" + "l2=0.000912 f=-0.879 shape=(1, 9000, 1)
logits [[ 5.2850475 -3.4153304  3.835684  -9.223113 ]]
Iteration 800 of 1000: loss=0.0879 " + "l1=0.0868" + "l2=0.0011 f=-0.879 shape=(1, 9000, 1)
logits [[ 5.2773314 -3.407445   3.8290048 -9.214397 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.888 " + "l1=0.888" + "l2=0 f=-0.888 shape=(1, 9000, 1)
logits [[ 5.3658996 -3.5149     3.9159198 -9.316941 ]]
Iteration 100 of 1000: loss=0.836 " + "l1=0.807" + "l2=0.0291 f=-0.845 shape=(1, 9000, 1)
logits [[ 5.037209  -3.0348406  3.555242  -8.938391 ]]
Iteration 200 of 1000: loss=0.807 " + "l1=0.761" + "l2=0.0459 f=-0.81 shape=(1, 9000, 1)
logits [[ 4.846589  -2.767822   3.3639627 -8.682992 ]]
Iteration 300 of 1000: loss=0.79 " + "l1=0.734" + "l2=0.056 f=-0.799 shape=(1, 9000, 1)
logits [[ 4.6988964 -2.6408095  3.2675898 -8.520304 ]]
Iteration 400 of 1000: loss=0.778 " + "l1=0.713" + "l2=0.0648 f=-0.79 shape=(1, 9000, 1)
logits [[ 4.594089  -2.5399299  3.1971517 -8.40937  ]]
Iteration 500 of 1000: loss=0.769 " + "l1=0.697" + "l2=0.0724 f=-0.781 shape=(1, 9000, 1)
logits [[ 4.5032516 -2.4635303  3.1478887 -8.3097315]]
Iteration 600 of 1000: loss=0.762 " + "l1=0.685" + "l2=0.0765 f=-0.774 shape=(1, 9000, 1)
logits [[ 4.435318  -2.4192698  3.1213443 -8.234207 ]]
Iteration 700 of 1000: loss=0.755 " + "l1=0.674" + "l2=0.0808 f=-0.768 shape=(1, 9000, 1)
logits [[ 4.368717  -2.3722012  3.0925436 -8.160033 ]]
Iteration 800 of 1000: loss=0.748 " + "l1=0.663" + "l2=0.085 f=-0.761 shape=(1, 9000, 1)
logits [[ 4.2999005 -2.3259852  3.067242  -8.085923 ]]
Iteration 900 of 1000: loss=0.74 " + "l1=0.65" + "l2=0.0895 f=-0.755 shape=(1, 9000, 1)
logits [[ 4.2254624 -2.279016   3.0401654 -8.005783 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.88 " + "l1=8.88" + "l2=0 f=-0.888 shape=(1, 9000, 1)
logits [[ 5.3658996 -3.5149     3.9159198 -9.316941 ]]
Iteration 100 of 1000: loss=4.95 " + "l1=3.31" + "l2=1.64 f=-0.599 shape=(1, 9000, 1)
logits [[ 2.3012223 -1.000575   2.3052983 -6.0024076]]
Iteration 200 of 1000: loss=4.04 " + "l1=2.56" + "l2=1.48 f=-0.549 shape=(1, 9000, 1)
logits [[ 1.9842911 -0.5794378  1.9821583 -5.5816755]]
Iteration 300 of 1000: loss=3.61 " + "l1=2.2" + "l2=1.42 f=-0.524 shape=(1, 9000, 1)
logits [[ 1.7762938 -0.4208968  1.7757986 -5.2255926]]
Iteration 400 of 1000: loss=3.39 " + "l1=1.99" + "l2=1.4 f=-0.5 shape=(1, 9000, 1)
logits [[ 1.6640524  -0.32090235  1.6691481  -5.0128703 ]]
Iteration 500 of 1000: loss=3.23 " + "l1=1.78" + "l2=1.45 f=-0.48 shape=(1, 9000, 1)
logits [[ 1.5273597 -0.2288636  1.5492173 -4.7685475]]
Iteration 600 of 1000: loss=3.03 " + "l1=1.55" + "l2=1.48 f=-0.449 shape=(1, 9000, 1)
logits [[ 1.3289994  -0.15183665  1.3988104  -4.3719873 ]]
Iteration 700 of 1000: loss=2.74 " + "l1=1.22" + "l2=1.53 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.0816154  -0.03894932  1.1790495  -3.8301575 ]]
Iteration 800 of 1000: loss=2.44 " + "l1=0.864" + "l2=1.58 f=-0.373 shape=(1, 9000, 1)
logits [[ 0.6925755   0.03260966  0.8961184  -3.1135113 ]]
Iteration 900 of 1000: loss=2.2 " + "l1=0.608" + "l2=1.6 f=-0.331 shape=(1, 9000, 1)
logits [[ 0.44335133  0.10016247  0.7080284  -2.5758579 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=88.8 " + "l1=88.8" + "l2=0 f=-0.888 shape=(1, 9000, 1)
logits [[ 5.3658996 -3.5149     3.9159198 -9.316941 ]]
Iteration 100 of 1000: loss=11.9 " + "l1=0" + "l2=11.9 f=-0.463 shape=(1, 9000, 1)
logits [[-0.30741534  0.852856    0.78426385 -3.1835155 ]]
Iteration 200 of 1000: loss=7.46 " + "l1=0" + "l2=7.46 f=-0.478 shape=(1, 9000, 1)
logits [[-0.09035815  0.8106437   0.80000794 -3.434203  ]]
Iteration 300 of 1000: loss=6.4 " + "l1=0" + "l2=6.4 f=-0.487 shape=(1, 9000, 1)
logits [[-0.05603605  0.81987303  0.80549604 -3.5185995 ]]
Iteration 400 of 1000: loss=5.87 " + "l1=0" + "l2=5.87 f=-0.484 shape=(1, 9000, 1)
logits [[-0.01109099  0.80199176  0.78156835 -3.5065792 ]]
Iteration 500 of 1000: loss=5.55 " + "l1=0" + "l2=5.55 f=-0.481 shape=(1, 9000, 1)
logits [[-0.02960625  0.78427964  0.7494933  -3.4279392 ]]
Iteration 600 of 1000: loss=5.32 " + "l1=0" + "l2=5.32 f=-0.476 shape=(1, 9000, 1)
logits [[-0.0267616  0.7809329  0.7343509 -3.3942134]]
Iteration 700 of 1000: loss=5.02 " + "l1=0" + "l2=5.02 f=-0.474 shape=(1, 9000, 1)
logits [[ 0.04409651  0.74909395  0.7317935  -3.4200137 ]]
Iteration 800 of 1000: loss=4.83 " + "l1=0" + "l2=4.83 f=-0.469 shape=(1, 9000, 1)
logits [[ 0.06057383  0.735342    0.7244936  -3.395565  ]]
Iteration 900 of 1000: loss=4.73 " + "l1=0" + "l2=4.73 f=-0.473 shape=(1, 9000, 1)
logits [[ 0.01941458  0.7388428   0.71890706 -3.3693323 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=48.8 " + "l1=48.8" + "l2=0 f=-0.888 shape=(1, 9000, 1)
logits [[ 5.3658996 -3.5149     3.9159198 -9.316941 ]]
Iteration 100 of 1000: loss=11.4 " + "l1=3.79" + "l2=7.57 f=-0.438 shape=(1, 9000, 1)
logits [[ 0.6571695  0.4210379  1.1108925 -3.9419231]]
Iteration 200 of 1000: loss=6.48 " + "l1=0" + "l2=6.48 f=-0.451 shape=(1, 9000, 1)
logits [[ 0.07161535  0.7855136   0.7745561  -3.4351695 ]]
Iteration 300 of 1000: loss=5.65 " + "l1=0" + "l2=5.65 f=-0.465 shape=(1, 9000, 1)
logits [[ 0.05237088  0.7601346   0.75827986 -3.4321797 ]]
Iteration 400 of 1000: loss=5.24 " + "l1=0.103" + "l2=5.14 f=-0.466 shape=(1, 9000, 1)
logits [[ 0.10839929  0.72194195  0.7407349  -3.43687   ]]
Iteration 500 of 1000: loss=4.85 " + "l1=0.0292" + "l2=4.82 f=-0.463 shape=(1, 9000, 1)
logits [[ 0.08667037  0.707266    0.7125778  -3.3569958 ]]
Iteration 600 of 1000: loss=4.65 " + "l1=0.0539" + "l2=4.6 f=-0.461 shape=(1, 9000, 1)
logits [[ 0.06837529  0.692061    0.7018617  -3.306124  ]]
Iteration 700 of 1000: loss=4.46 " + "l1=0.0275" + "l2=4.43 f=-0.454 shape=(1, 9000, 1)
logits [[ 0.07542729  0.68973076  0.69472337 -3.2769005 ]]
Iteration 800 of 1000: loss=4.27 " + "l1=0" + "l2=4.27 f=-0.445 shape=(1, 9000, 1)
logits [[ 0.11348157  0.6955217   0.6894922  -3.2783623 ]]
Iteration 900 of 1000: loss=4.15 " + "l1=0" + "l2=4.15 f=-0.432 shape=(1, 9000, 1)
logits [[ 0.11344172  0.70682615  0.6740266  -3.2228084 ]]
--- 292.5159628391266 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0145 " + "l1=0.0145" + "l2=0 f=-0.888 shape=(1, 9000, 1)
logits [[ 5.3658996 -3.5149     3.9159198 -9.316941 ]]
Iteration 100 of 1000: loss=0.0143 " + "l1=0.0141" + "l2=0.000198 f=-0.889 shape=(1, 9000, 1)
logits [[ 5.3436246 -3.5320616  3.9354863 -9.301635 ]]
Iteration 200 of 1000: loss=0.0142 " + "l1=0.014" + "l2=0.00018 f=-0.889 shape=(1, 9000, 1)
logits [[ 5.3420906 -3.5345857  3.9376132 -9.299214 ]]
Iteration 300 of 1000: loss=0.0142 " + "l1=0.014" + "l2=0.000222 f=-0.889 shape=(1, 9000, 1)
logits [[ 5.3386707 -3.5376356  3.9403722 -9.295655 ]]
Iteration 400 of 1000: loss=0.0142 " + "l1=0.0139" + "l2=0.000268 f=-0.889 shape=(1, 9000, 1)
logits [[ 5.3349357 -3.5403206  3.9427726 -9.29184  ]]
Iteration 500 of 1000: loss=0.0142 " + "l1=0.0139" + "l2=0.00032 f=-0.889 shape=(1, 9000, 1)
logits [[ 5.331144  -3.5426815  3.9449358 -9.287964 ]]
Iteration 600 of 1000: loss=0.0142 " + "l1=0.0138" + "l2=0.0004 f=-0.889 shape=(1, 9000, 1)
logits [[ 5.3274703 -3.5447662  3.9468358 -9.2842455]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.145 " + "l1=0.145" + "l2=0 f=-0.888 shape=(1, 9000, 1)
logits [[ 5.3658996 -3.5149     3.9159198 -9.316941 ]]
Iteration 100 of 1000: loss=0.125 " + "l1=0.114" + "l2=0.0115 f=-0.9 shape=(1, 9000, 1)
logits [[ 5.1918254 -3.6341286  4.0522914 -9.209699 ]]
Iteration 200 of 1000: loss=0.118 " + "l1=0.103" + "l2=0.0155 f=-0.902 shape=(1, 9000, 1)
logits [[ 5.115715  -3.6690688  4.088199  -9.143916 ]]
Iteration 300 of 1000: loss=0.112 " + "l1=0.0946" + "l2=0.0179 f=-0.903 shape=(1, 9000, 1)
logits [[ 5.0531864 -3.6899357  4.1076393 -9.083863 ]]
Iteration 400 of 1000: loss=0.108 " + "l1=0.0877" + "l2=0.0203 f=-0.903 shape=(1, 9000, 1)
logits [[ 5.000352  -3.706972   4.1234922 -9.030584 ]]
Iteration 500 of 1000: loss=0.104 " + "l1=0.0809" + "l2=0.0232 f=-0.904 shape=(1, 9000, 1)
logits [[ 4.9478106 -3.7246785  4.1391993 -8.977599 ]]
Iteration 600 of 1000: loss=0.101 " + "l1=0.0749" + "l2=0.0257 f=-0.903 shape=(1, 9000, 1)
logits [[ 4.901198  -3.7362185  4.152216  -8.9297495]]
Iteration 700 of 1000: loss=0.0973 " + "l1=0.0696" + "l2=0.0278 f=-0.903 shape=(1, 9000, 1)
logits [[ 4.857997  -3.7466495  4.1624537 -8.886669 ]]
Iteration 800 of 1000: loss=0.0942 " + "l1=0.0643" + "l2=0.0299 f=-0.905 shape=(1, 9000, 1)
logits [[ 4.814952  -3.7615523  4.172038  -8.843481 ]]
Iteration 900 of 1000: loss=0.0908 " + "l1=0.0586" + "l2=0.0322 f=-0.906 shape=(1, 9000, 1)
logits [[ 4.7683153 -3.7787218  4.182299  -8.796456 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.45 " + "l1=1.45" + "l2=0 f=-0.888 shape=(1, 9000, 1)
logits [[ 5.3658996 -3.5149     3.9159198 -9.316941 ]]
Iteration 100 of 1000: loss=0.256 " + "l1=0" + "l2=0.256 f=-0.928 shape=(1, 9000, 1)
logits [[ 4.31203   -3.8692875  4.3292093 -8.484788 ]]
Iteration 200 of 1000: loss=0.178 " + "l1=0" + "l2=0.178 f=-0.923 shape=(1, 9000, 1)
logits [[ 4.2940207 -3.894139   4.3160014 -8.409285 ]]
Iteration 300 of 1000: loss=0.144 " + "l1=0" + "l2=0.144 f=-0.919 shape=(1, 9000, 1)
logits [[ 4.280238  -3.9060745  4.306144  -8.355039 ]]
Iteration 400 of 1000: loss=0.117 " + "l1=0.00055" + "l2=0.117 f=-0.916 shape=(1, 9000, 1)
logits [[ 4.3053565 -3.9135993  4.3048067 -8.3602295]]
Iteration 500 of 1000: loss=0.105 " + "l1=0" + "l2=0.105 f=-0.914 shape=(1, 9000, 1)
logits [[ 4.29982   -3.9193246  4.3054404 -8.340394 ]]
Iteration 600 of 1000: loss=0.101 " + "l1=0" + "l2=0.101 f=-0.912 shape=(1, 9000, 1)
logits [[ 4.2729955 -3.9306476  4.310347  -8.299123 ]]
Iteration 700 of 1000: loss=0.0869 " + "l1=0" + "l2=0.0869 f=-0.909 shape=(1, 9000, 1)
logits [[ 4.2943764 -3.9282901  4.2960544 -8.297704 ]]
Iteration 800 of 1000: loss=0.0812 " + "l1=0" + "l2=0.0812 f=-0.909 shape=(1, 9000, 1)
logits [[ 4.289864  -3.9343581  4.2926435 -8.284142 ]]
Iteration 900 of 1000: loss=0.0764 " + "l1=0" + "l2=0.0764 f=-0.909 shape=(1, 9000, 1)
logits [[ 4.2837925 -3.9378223  4.2875037 -8.267618 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.797 " + "l1=0.797" + "l2=0 f=-0.888 shape=(1, 9000, 1)
logits [[ 5.3658996 -3.5149     3.9159198 -9.316941 ]]
Iteration 100 of 1000: loss=0.256 " + "l1=0" + "l2=0.256 f=-0.928 shape=(1, 9000, 1)
logits [[ 4.3283796 -3.870393   4.328739  -8.497988 ]]
Iteration 200 of 1000: loss=0.168 " + "l1=0.00721" + "l2=0.161 f=-0.921 shape=(1, 9000, 1)
logits [[ 4.3087053 -3.8805482  4.2955976 -8.408718 ]]
Iteration 300 of 1000: loss=0.13 " + "l1=0" + "l2=0.13 f=-0.917 shape=(1, 9000, 1)
logits [[ 4.290575  -3.8988495  4.290627  -8.351578 ]]
Iteration 400 of 1000: loss=0.111 " + "l1=0.00105" + "l2=0.11 f=-0.915 shape=(1, 9000, 1)
logits [[ 4.289138  -3.9098623  4.287235  -8.328217 ]]
Iteration 500 of 1000: loss=0.099 " + "l1=0.00135" + "l2=0.0977 f=-0.912 shape=(1, 9000, 1)
logits [[ 4.2853084 -3.912029   4.282861  -8.304185 ]]
Iteration 600 of 1000: loss=0.0898 " + "l1=0" + "l2=0.0898 f=-0.91 shape=(1, 9000, 1)
logits [[ 4.272172  -3.917202   4.2784724 -8.272661 ]]
Iteration 700 of 1000: loss=0.0833 " + "l1=0" + "l2=0.0833 f=-0.909 shape=(1, 9000, 1)
logits [[ 4.2657466 -3.9252355  4.279735  -8.256107 ]]
Iteration 800 of 1000: loss=0.0784 " + "l1=0" + "l2=0.0784 f=-0.908 shape=(1, 9000, 1)
logits [[ 4.2612123 -3.9333692  4.280695  -8.240994 ]]
Iteration 900 of 1000: loss=0.0745 " + "l1=0" + "l2=0.0745 f=-0.907 shape=(1, 9000, 1)
logits [[ 4.254396  -3.9356997  4.2788777 -8.225292 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.471 " + "l1=0.471" + "l2=0 f=-0.888 shape=(1, 9000, 1)
logits [[ 5.3658996 -3.5149     3.9159198 -9.316941 ]]
Iteration 100 of 1000: loss=0.278 " + "l1=0.174" + "l2=0.104 f=-0.918 shape=(1, 9000, 1)
logits [[ 4.7536306 -3.7660944  4.217532  -8.876438 ]]
Iteration 200 of 1000: loss=0.192 " + "l1=0.0332" + "l2=0.159 f=-0.918 shape=(1, 9000, 1)
logits [[ 4.380146  -3.8416388  4.2780666 -8.490304 ]]
Iteration 300 of 1000: loss=0.136 " + "l1=0.00199" + "l2=0.134 f=-0.916 shape=(1, 9000, 1)
logits [[ 4.2802186 -3.865233   4.2740965 -8.351098 ]]
Iteration 400 of 1000: loss=0.111 " + "l1=0" + "l2=0.111 f=-0.913 shape=(1, 9000, 1)
logits [[ 4.2698946 -3.8814309  4.2714825 -8.311332 ]]
Iteration 500 of 1000: loss=0.097 " + "l1=0" + "l2=0.097 f=-0.909 shape=(1, 9000, 1)
logits [[ 4.267492  -3.8879862  4.2686133 -8.283543 ]]
Iteration 600 of 1000: loss=0.0895 " + "l1=0" + "l2=0.0895 f=-0.906 shape=(1, 9000, 1)
logits [[ 4.2512927 -3.8943748  4.2672706 -8.24877  ]]
Iteration 700 of 1000: loss=0.0807 " + "l1=0" + "l2=0.0807 f=-0.904 shape=(1, 9000, 1)
logits [[ 4.251243  -3.894303   4.2567377 -8.23097  ]]
Iteration 800 of 1000: loss=0.0743 " + "l1=0.000292" + "l2=0.074 f=-0.903 shape=(1, 9000, 1)
logits [[ 4.251953  -3.8978937  4.2510543 -8.218187 ]]
Iteration 900 of 1000: loss=0.0702 " + "l1=0.00203" + "l2=0.0682 f=-0.902 shape=(1, 9000, 1)
logits [[ 4.250598  -3.8972273  4.244362  -8.20391  ]]
--- 280.83794236183167 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.147 " + "l1=0.147" + "l2=0 f=-0.888 shape=(1, 9000, 1)
logits [[ 5.3658996 -3.5149     3.9159198 -9.316941 ]]
Iteration 100 of 1000: loss=0.146 " + "l1=0.146" + "l2=0.000464 f=-0.883 shape=(1, 9000, 1)
logits [[ 5.3151565 -3.5019987  3.898046  -9.242209 ]]
Iteration 200 of 1000: loss=0.146 " + "l1=0.145" + "l2=0.000526 f=-0.882 shape=(1, 9000, 1)
logits [[ 5.3016467 -3.4972625  3.8917484 -9.224572 ]]
Iteration 300 of 1000: loss=0.146 " + "l1=0.145" + "l2=0.00065 f=-0.881 shape=(1, 9000, 1)
logits [[ 5.2864084 -3.4924846  3.8847854 -9.204228 ]]
Iteration 400 of 1000: loss=0.145 " + "l1=0.145" + "l2=0.000838 f=-0.881 shape=(1, 9000, 1)
logits [[ 5.271509  -3.4873786  3.8775878 -9.184272 ]]
Iteration 500 of 1000: loss=0.145 " + "l1=0.144" + "l2=0.000976 f=-0.88 shape=(1, 9000, 1)
logits [[ 5.2572174 -3.4823823  3.8707783 -9.165804 ]]
Iteration 600 of 1000: loss=0.145 " + "l1=0.144" + "l2=0.00116 f=-0.88 shape=(1, 9000, 1)
logits [[ 5.2439437 -3.4782958  3.8649437 -9.148654 ]]
Iteration 700 of 1000: loss=0.145 " + "l1=0.144" + "l2=0.00133 f=-0.879 shape=(1, 9000, 1)
logits [[ 5.2318015 -3.4747355  3.8597124 -9.132834 ]]
Iteration 800 of 1000: loss=0.145 " + "l1=0.143" + "l2=0.0015 f=-0.879 shape=(1, 9000, 1)
logits [[ 5.2203627 -3.470662   3.8540165 -9.117988 ]]
Iteration 900 of 1000: loss=0.145 " + "l1=0.143" + "l2=0.00178 f=-0.878 shape=(1, 9000, 1)
logits [[ 5.209052  -3.4664216  3.848125  -9.103181 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.47 " + "l1=1.47" + "l2=0 f=-0.888 shape=(1, 9000, 1)
logits [[ 5.3658996 -3.5149     3.9159198 -9.316941 ]]
Iteration 100 of 1000: loss=1.39 " + "l1=1.35" + "l2=0.0424 f=-0.847 shape=(1, 9000, 1)
logits [[ 4.8573294 -3.3368819  3.716597  -8.62521  ]]
Iteration 200 of 1000: loss=1.35 " + "l1=1.29" + "l2=0.0623 f=-0.839 shape=(1, 9000, 1)
logits [[ 4.5810213 -3.2316692  3.5897515 -8.293712 ]]
Iteration 300 of 1000: loss=1.31 " + "l1=1.22" + "l2=0.0863 f=-0.813 shape=(1, 9000, 1)
logits [[ 4.312088  -3.0616252  3.4297705 -7.931632 ]]
Iteration 400 of 1000: loss=1.27 " + "l1=1.16" + "l2=0.108 f=-0.804 shape=(1, 9000, 1)
logits [[ 4.0387187 -3.0379684  3.378481  -7.594801 ]]
Iteration 500 of 1000: loss=1.23 " + "l1=1.1" + "l2=0.135 f=-0.785 shape=(1, 9000, 1)
logits [[ 3.7486095 -2.9874568  3.305502  -7.2072883]]
Iteration 600 of 1000: loss=1.19 " + "l1=1.03" + "l2=0.157 f=-0.751 shape=(1, 9000, 1)
logits [[ 3.500472  -2.8738241  3.203813  -6.832503 ]]
Iteration 700 of 1000: loss=1.16 " + "l1=0.979" + "l2=0.177 f=-0.721 shape=(1, 9000, 1)
logits [[ 3.2913373 -2.794335   3.122134  -6.502212 ]]
Iteration 800 of 1000: loss=1.12 " + "l1=0.921" + "l2=0.2 f=-0.688 shape=(1, 9000, 1)
logits [[ 3.0657685 -2.7035158  3.0327501 -6.1484985]]
Iteration 900 of 1000: loss=1.09 " + "l1=0.885" + "l2=0.204 f=-0.66 shape=(1, 9000, 1)
logits [[ 2.9377859 -2.607687   2.9371748 -5.9090877]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=14.7 " + "l1=14.7" + "l2=0 f=-0.888 shape=(1, 9000, 1)
logits [[ 5.3658996 -3.5149     3.9159198 -9.316941 ]]
Iteration 100 of 1000: loss=7.88 " + "l1=5.06" + "l2=2.83 f=-0.423 shape=(1, 9000, 1)
logits [[ 1.6503428 -1.672589   1.6937778 -3.3642101]]
Iteration 200 of 1000: loss=4.85 " + "l1=1.13" + "l2=3.72 f=-0.282 shape=(1, 9000, 1)
logits [[-0.06760432 -1.5110009   0.791075   -0.3417625 ]]
Iteration 300 of 1000: loss=3.24 " + "l1=0" + "l2=3.24 f=-0.286 shape=(1, 9000, 1)
logits [[-0.70714027 -1.4444314   0.49123052  0.5151783 ]]
Iteration 400 of 1000: loss=2.77 " + "l1=0" + "l2=2.77 f=-0.297 shape=(1, 9000, 1)
logits [[-0.7558433  -1.4224403   0.49472827  0.4947636 ]]
Iteration 500 of 1000: loss=2.51 " + "l1=0.0307" + "l2=2.48 f=-0.312 shape=(1, 9000, 1)
logits [[-0.791398   -1.42655     0.49987677  0.46914047]]
Iteration 600 of 1000: loss=2.29 " + "l1=0" + "l2=2.29 f=-0.313 shape=(1, 9000, 1)
logits [[-0.8188337 -1.4362413  0.4893158  0.5128196]]
Iteration 700 of 1000: loss=2.11 " + "l1=0" + "l2=2.11 f=-0.313 shape=(1, 9000, 1)
logits [[-0.7976222  -1.4836597   0.51256335  0.5173987 ]]
Iteration 800 of 1000: loss=1.98 " + "l1=0" + "l2=1.98 f=-0.311 shape=(1, 9000, 1)
logits [[-0.77715194 -1.534931    0.51732427  0.55212253]]
Iteration 900 of 1000: loss=1.83 " + "l1=0" + "l2=1.83 f=-0.313 shape=(1, 9000, 1)
logits [[-0.7617378  -1.5937722   0.52734005  0.574992  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=8.08 " + "l1=8.08" + "l2=0 f=-0.888 shape=(1, 9000, 1)
logits [[ 5.3658996 -3.5149     3.9159198 -9.316941 ]]
Iteration 100 of 1000: loss=5.5 " + "l1=4.26" + "l2=1.24 f=-0.582 shape=(1, 9000, 1)
logits [[ 2.5510736 -2.2332375  2.546368  -5.193742 ]]
Iteration 200 of 1000: loss=4.47 " + "l1=3.01" + "l2=1.46 f=-0.438 shape=(1, 9000, 1)
logits [[ 1.8287189 -1.7807764  1.8385311 -3.639205 ]]
Iteration 300 of 1000: loss=3.52 " + "l1=1.79" + "l2=1.73 f=-0.363 shape=(1, 9000, 1)
logits [[ 0.8481127 -1.5635711  1.2631078 -1.9997406]]
Iteration 400 of 1000: loss=2.76 " + "l1=0.806" + "l2=1.96 f=-0.31 shape=(1, 9000, 1)
logits [[-0.16876    -1.4117092   0.9032984  -0.56172365]]
Iteration 500 of 1000: loss=2.21 " + "l1=0.0384" + "l2=2.17 f=-0.28 shape=(1, 9000, 1)
logits [[-0.8605909 -1.377245   0.5945187  0.5247577]]
Iteration 600 of 1000: loss=1.81 " + "l1=0" + "l2=1.81 f=-0.291 shape=(1, 9000, 1)
logits [[-0.87000686 -1.4755756   0.58986     0.5907162 ]]
Iteration 700 of 1000: loss=1.52 " + "l1=0.000392" + "l2=1.52 f=-0.295 shape=(1, 9000, 1)
logits [[-0.81797135 -1.5392368   0.5883446   0.58763176]]
Iteration 800 of 1000: loss=1.34 " + "l1=0.00625" + "l2=1.34 f=-0.299 shape=(1, 9000, 1)
logits [[-0.7978223 -1.5839076  0.5993865  0.5880303]]
Iteration 900 of 1000: loss=1.23 " + "l1=0" + "l2=1.23 f=-0.298 shape=(1, 9000, 1)
logits [[-0.803529  -1.619312   0.6066649  0.6244404]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.77 " + "l1=4.77" + "l2=0 f=-0.888 shape=(1, 9000, 1)
logits [[ 5.3658996 -3.5149     3.9159198 -9.316941 ]]
Iteration 100 of 1000: loss=3.87 " + "l1=3.36" + "l2=0.513 f=-0.74 shape=(1, 9000, 1)
logits [[ 3.5133338 -2.7635822  3.1071453 -6.8161697]]
Iteration 200 of 1000: loss=3.29 " + "l1=2.57" + "l2=0.712 f=-0.596 shape=(1, 9000, 1)
logits [[ 2.6128623 -2.3131347  2.6165032 -5.300193 ]]
Iteration 300 of 1000: loss=2.93 " + "l1=2.15" + "l2=0.784 f=-0.514 shape=(1, 9000, 1)
logits [[ 2.1888127 -2.0245826  2.1936662 -4.4142365]]
Iteration 400 of 1000: loss=2.64 " + "l1=1.77" + "l2=0.868 f=-0.448 shape=(1, 9000, 1)
logits [[ 1.740685  -1.8207788  1.8662184 -3.578845 ]]
Iteration 500 of 1000: loss=2.33 " + "l1=1.36" + "l2=0.976 f=-0.382 shape=(1, 9000, 1)
logits [[ 1.196278  -1.666625   1.5579228 -2.6169238]]
Iteration 600 of 1000: loss=2.03 " + "l1=0.985" + "l2=1.05 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.668993  -1.5950432  1.3302566 -1.7008779]]
Iteration 700 of 1000: loss=1.84 " + "l1=0.741" + "l2=1.1 f=-0.311 shape=(1, 9000, 1)
logits [[ 0.277268  -1.5450412  1.1518484 -1.1274433]]
Iteration 800 of 1000: loss=1.67 " + "l1=0.519" + "l2=1.15 f=-0.302 shape=(1, 9000, 1)
logits [[-0.06082354 -1.5418073   0.99514896 -0.60245484]]
Iteration 900 of 1000: loss=1.44 " + "l1=0.161" + "l2=1.28 f=-0.257 shape=(1, 9000, 1)
logits [[-0.50824857 -1.507255    0.74064416  0.24633753]]
--- 294.4222960472107 seconds ---
Adv result:3
Loading record A05059
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0667 " + "l1=0.0667" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.8947837 -2.7718282  2.8027823 -5.9432693]]
Iteration 100 of 1000: loss=0.0664 " + "l1=0.0663" + "l2=0.000177 f=-0.503 shape=(1, 9000, 1)
logits [[ 3.8694115 -2.7575543  2.7942383 -5.9164457]]
Iteration 200 of 1000: loss=0.0664 " + "l1=0.0662" + "l2=0.000153 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.8671517 -2.7558546  2.7927942 -5.9138656]]
Iteration 300 of 1000: loss=0.0663 " + "l1=0.0662" + "l2=0.000173 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.862455  -2.7527893  2.7904143 -5.9086905]]
Iteration 400 of 1000: loss=0.0663 " + "l1=0.0661" + "l2=0.000202 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.8571453 -2.749368   2.787691  -5.9027796]]
Iteration 500 of 1000: loss=0.0662 " + "l1=0.066" + "l2=0.000257 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.8516827 -2.7458086  2.7848442 -5.8966527]]
Iteration 600 of 1000: loss=0.0662 " + "l1=0.0659" + "l2=0.00033 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.8461337 -2.7421775  2.7819421 -5.8903384]]
Iteration 700 of 1000: loss=0.0663 " + "l1=0.0658" + "l2=0.000469 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.8404756 -2.7385411  2.7790575 -5.8837833]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.667 " + "l1=0.667" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.8947837 -2.7718282  2.8027823 -5.9432693]]
Iteration 100 of 1000: loss=0.646 " + "l1=0.634" + "l2=0.0118 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.700495  -2.6439624  2.724586  -5.7346783]]
Iteration 200 of 1000: loss=0.636 " + "l1=0.62" + "l2=0.0165 f=-0.483 shape=(1, 9000, 1)
logits [[ 3.6163733 -2.581472   2.6757963 -5.6442647]]
Iteration 300 of 1000: loss=0.625 " + "l1=0.605" + "l2=0.0208 f=-0.478 shape=(1, 9000, 1)
logits [[ 3.527396  -2.5179312  2.6203954 -5.543507 ]]
Iteration 400 of 1000: loss=0.615 " + "l1=0.591" + "l2=0.0237 f=-0.473 shape=(1, 9000, 1)
logits [[ 3.4457715 -2.4671679  2.5729983 -5.444821 ]]
Iteration 500 of 1000: loss=0.607 " + "l1=0.581" + "l2=0.0259 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.3770843 -2.432883   2.5363383 -5.3574553]]
Iteration 600 of 1000: loss=0.6 " + "l1=0.572" + "l2=0.0286 f=-0.466 shape=(1, 9000, 1)
logits [[ 3.3132055 -2.4048502  2.505061  -5.276498 ]]
Iteration 700 of 1000: loss=0.594 " + "l1=0.563" + "l2=0.0312 f=-0.464 shape=(1, 9000, 1)
logits [[ 3.2525496 -2.3807523  2.4773257 -5.204568 ]]
Iteration 800 of 1000: loss=0.588 " + "l1=0.553" + "l2=0.0342 f=-0.462 shape=(1, 9000, 1)
logits [[ 3.1824448 -2.3518746  2.4429603 -5.121872 ]]
Iteration 900 of 1000: loss=0.581 " + "l1=0.544" + "l2=0.0368 f=-0.461 shape=(1, 9000, 1)
logits [[ 3.112888  -2.325812   2.4109004 -5.040418 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.67 " + "l1=6.67" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.8947837 -2.7718282  2.8027823 -5.9432693]]
Iteration 100 of 1000: loss=4.66 " + "l1=3.69" + "l2=0.978 f=-0.403 shape=(1, 9000, 1)
logits [[ 2.0734518 -1.6117091  2.071649  -4.1447086]]
Iteration 200 of 1000: loss=3.99 " + "l1=2.95" + "l2=1.04 f=-0.374 shape=(1, 9000, 1)
logits [[ 1.7205825 -1.2285271  1.7217212 -3.7112224]]
Iteration 300 of 1000: loss=3.44 " + "l1=2.35" + "l2=1.09 f=-0.344 shape=(1, 9000, 1)
logits [[ 1.4581771 -0.8897648  1.4608617 -3.4059885]]
Iteration 400 of 1000: loss=2.96 " + "l1=1.85" + "l2=1.11 f=-0.327 shape=(1, 9000, 1)
logits [[ 1.2251426 -0.6254278  1.2217976 -3.1307986]]
Iteration 500 of 1000: loss=2.62 " + "l1=1.57" + "l2=1.06 f=-0.341 shape=(1, 9000, 1)
logits [[ 1.0376313  -0.52433205  1.0432056  -2.9195123 ]]
Iteration 600 of 1000: loss=2.38 " + "l1=1.33" + "l2=1.05 f=-0.35 shape=(1, 9000, 1)
logits [[ 0.86887395 -0.43492022  0.89173436 -2.7241979 ]]
Iteration 700 of 1000: loss=2.21 " + "l1=1.12" + "l2=1.09 f=-0.363 shape=(1, 9000, 1)
logits [[ 0.73567206 -0.3543279   0.7665134  -2.6014748 ]]
Iteration 800 of 1000: loss=2.07 " + "l1=0.954" + "l2=1.11 f=-0.369 shape=(1, 9000, 1)
logits [[ 0.6355374 -0.2834641  0.6703581 -2.4992142]]
Iteration 900 of 1000: loss=1.96 " + "l1=0.838" + "l2=1.12 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.54096675 -0.22236602  0.6153056  -2.395254  ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=66.7 " + "l1=66.7" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.8947837 -2.7718282  2.8027823 -5.9432693]]
Iteration 100 of 1000: loss=14.7 " + "l1=2.01" + "l2=12.7 f=-0.45 shape=(1, 9000, 1)
logits [[ 0.00451668  0.239958    0.44111833 -2.4866803 ]]
Iteration 200 of 1000: loss=7.07 " + "l1=0.013" + "l2=7.05 f=-0.504 shape=(1, 9000, 1)
logits [[-0.06212752  0.3297166   0.33101276 -2.6149063 ]]
Iteration 300 of 1000: loss=5.57 " + "l1=0" + "l2=5.57 f=-0.515 shape=(1, 9000, 1)
logits [[-0.03346534  0.3230242   0.30692667 -2.6553605 ]]
Iteration 400 of 1000: loss=4.78 " + "l1=0.0299" + "l2=4.75 f=-0.512 shape=(1, 9000, 1)
logits [[ 0.00345374  0.3071469   0.31014162 -2.667773  ]]
Iteration 500 of 1000: loss=4.26 " + "l1=0" + "l2=4.26 f=-0.511 shape=(1, 9000, 1)
logits [[-1.1743512e-03  3.0651242e-01  3.0366829e-01 -2.6532514e+00]]
Iteration 600 of 1000: loss=4 " + "l1=0" + "l2=4 f=-0.51 shape=(1, 9000, 1)
logits [[-0.02878289  0.32339716  0.27145162 -2.6066227 ]]
Iteration 700 of 1000: loss=3.63 " + "l1=0" + "l2=3.63 f=-0.501 shape=(1, 9000, 1)
logits [[ 0.02543272  0.2877154   0.2837148  -2.5994432 ]]
Iteration 800 of 1000: loss=3.43 " + "l1=0" + "l2=3.43 f=-0.496 shape=(1, 9000, 1)
logits [[ 0.01285498  0.29439655  0.26580298 -2.5588102 ]]
Iteration 900 of 1000: loss=3.26 " + "l1=0.0767" + "l2=3.19 f=-0.489 shape=(1, 9000, 1)
logits [[ 0.04849508  0.26794958  0.27562204 -2.54659   ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=36.7 " + "l1=36.7" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.8947837 -2.7718282  2.8027823 -5.9432693]]
Iteration 100 of 1000: loss=13.5 " + "l1=7.43" + "l2=6.03 f=-0.375 shape=(1, 9000, 1)
logits [[ 0.9340112  -0.37419304  0.9764965  -3.036327  ]]
Iteration 200 of 1000: loss=7.15 " + "l1=0.0228" + "l2=7.13 f=-0.432 shape=(1, 9000, 1)
logits [[-0.0941108   0.32458344  0.32873544 -2.2874525 ]]
Iteration 300 of 1000: loss=4.81 " + "l1=0.0334" + "l2=4.77 f=-0.476 shape=(1, 9000, 1)
logits [[-0.11050705  0.32127845  0.3273571  -2.441172  ]]
Iteration 400 of 1000: loss=3.82 " + "l1=0" + "l2=3.82 f=-0.49 shape=(1, 9000, 1)
logits [[-0.05641937  0.28245708  0.2809026  -2.468396  ]]
Iteration 500 of 1000: loss=3.4 " + "l1=0" + "l2=3.4 f=-0.489 shape=(1, 9000, 1)
logits [[-0.04404473  0.27449042  0.2563641  -2.4432805 ]]
Iteration 600 of 1000: loss=3.08 " + "l1=0" + "l2=3.08 f=-0.486 shape=(1, 9000, 1)
logits [[-0.01169862  0.2579995   0.25558496 -2.4455378 ]]
Iteration 700 of 1000: loss=2.85 " + "l1=0" + "l2=2.85 f=-0.488 shape=(1, 9000, 1)
logits [[-0.0101422   0.24957563  0.2385627  -2.4303818 ]]
Iteration 800 of 1000: loss=2.65 " + "l1=0" + "l2=2.65 f=-0.487 shape=(1, 9000, 1)
logits [[ 0.00464234  0.23867364  0.23188528 -2.421832  ]]
Iteration 900 of 1000: loss=2.51 " + "l1=0" + "l2=2.51 f=-0.485 shape=(1, 9000, 1)
logits [[ 0.00911514  0.24046107  0.21906161 -2.4080114 ]]
--- 284.77778935432434 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0109 " + "l1=0.0109" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.8947837 -2.7718282  2.8027823 -5.9432693]]
Iteration 100 of 1000: loss=0.0108 " + "l1=0.0107" + "l2=0.000109 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.8774922 -2.7702768  2.8048117 -5.928773 ]]
Iteration 200 of 1000: loss=0.0108 " + "l1=0.0107" + "l2=7.52e-05 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.8776097 -2.7705438  2.8051736 -5.929339 ]]
Iteration 300 of 1000: loss=0.0108 " + "l1=0.0107" + "l2=9.88e-05 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.8754797 -2.7705286  2.8055682 -5.9279094]]
Iteration 400 of 1000: loss=0.0108 " + "l1=0.0107" + "l2=0.000103 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.8728979 -2.7704508  2.8059921 -5.9261937]]
Iteration 500 of 1000: loss=0.0108 " + "l1=0.0106" + "l2=0.000191 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.8700945 -2.7703245  2.8064573 -5.9243584]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.109 " + "l1=0.109" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.8947837 -2.7718282  2.8027823 -5.9432693]]
Iteration 100 of 1000: loss=0.101 " + "l1=0.0968" + "l2=0.00432 f=-0.503 shape=(1, 9000, 1)
logits [[ 3.784733  -2.7633886  2.8167024 -5.8518386]]
Iteration 200 of 1000: loss=0.0978 " + "l1=0.0921" + "l2=0.00572 f=-0.503 shape=(1, 9000, 1)
logits [[ 3.7434855 -2.7601264  2.8229647 -5.8185525]]
Iteration 300 of 1000: loss=0.0944 " + "l1=0.0872" + "l2=0.00723 f=-0.503 shape=(1, 9000, 1)
logits [[ 3.702833  -2.757881   2.8312929 -5.788701 ]]
Iteration 400 of 1000: loss=0.0911 " + "l1=0.0828" + "l2=0.00833 f=-0.503 shape=(1, 9000, 1)
logits [[ 3.6677418 -2.7566938  2.8401165 -5.7638154]]
Iteration 500 of 1000: loss=0.0878 " + "l1=0.0782" + "l2=0.00953 f=-0.503 shape=(1, 9000, 1)
logits [[ 3.6336164 -2.7571902  2.851154  -5.7396226]]
Iteration 600 of 1000: loss=0.0844 " + "l1=0.0738" + "l2=0.0106 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.5999942 -2.7600691  2.8620284 -5.719538 ]]
Iteration 700 of 1000: loss=0.0811 " + "l1=0.0698" + "l2=0.0113 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.568335  -2.7609286  2.8699465 -5.7017164]]
Iteration 800 of 1000: loss=0.0777 " + "l1=0.0655" + "l2=0.0122 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.5320208 -2.7608285  2.8773663 -5.6774654]]
Iteration 900 of 1000: loss=0.074 " + "l1=0.0606" + "l2=0.0134 f=-0.508 shape=(1, 9000, 1)
logits [[ 3.4925387 -2.7632058  2.8863127 -5.648889 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.09 " + "l1=1.09" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.8947837 -2.7718282  2.8027823 -5.9432693]]
Iteration 100 of 1000: loss=0.352 " + "l1=0.0101" + "l2=0.341 f=-0.478 shape=(1, 9000, 1)
logits [[ 2.9217408 -2.6048074  2.9116132 -5.141176 ]]
Iteration 200 of 1000: loss=0.214 " + "l1=0" + "l2=0.214 f=-0.489 shape=(1, 9000, 1)
logits [[ 2.9150848 -2.6385174  2.9191027 -5.150119 ]]
Iteration 300 of 1000: loss=0.157 " + "l1=0" + "l2=0.157 f=-0.492 shape=(1, 9000, 1)
logits [[ 2.9121294 -2.646613   2.91496   -5.149548 ]]
Iteration 400 of 1000: loss=0.121 " + "l1=0.00166" + "l2=0.12 f=-0.494 shape=(1, 9000, 1)
logits [[ 2.9159236 -2.6532712  2.9142659 -5.1547885]]
Iteration 500 of 1000: loss=0.0985 " + "l1=0" + "l2=0.0985 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.91122   -2.655948   2.9158916 -5.1613894]]
Iteration 600 of 1000: loss=0.0822 " + "l1=0" + "l2=0.0822 f=-0.499 shape=(1, 9000, 1)
logits [[ 2.918479  -2.6592467  2.9205837 -5.176505 ]]
Iteration 700 of 1000: loss=0.0728 " + "l1=0" + "l2=0.0728 f=-0.5 shape=(1, 9000, 1)
logits [[ 2.9234138 -2.6644278  2.929516  -5.1904464]]
Iteration 800 of 1000: loss=0.0645 " + "l1=0" + "l2=0.0645 f=-0.502 shape=(1, 9000, 1)
logits [[ 2.9299562 -2.67075    2.9357405 -5.204445 ]]
Iteration 900 of 1000: loss=0.0577 " + "l1=0.000728" + "l2=0.0569 f=-0.505 shape=(1, 9000, 1)
logits [[ 2.939121  -2.677453   2.9383934 -5.2205935]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.601 " + "l1=0.601" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.8947837 -2.7718282  2.8027823 -5.9432693]]
Iteration 100 of 1000: loss=0.357 " + "l1=0.236" + "l2=0.121 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.3091724 -2.6745083  2.8799522 -5.4640718]]
Iteration 200 of 1000: loss=0.249 " + "l1=0.0922" + "l2=0.157 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.0769777 -2.6571507  2.9094148 -5.283099 ]]
Iteration 300 of 1000: loss=0.157 " + "l1=0.000741" + "l2=0.156 f=-0.494 shape=(1, 9000, 1)
logits [[ 2.935891  -2.6653118  2.9345431 -5.1805305]]
Iteration 400 of 1000: loss=0.116 " + "l1=0.00217" + "l2=0.114 f=-0.493 shape=(1, 9000, 1)
logits [[ 2.9460719 -2.6668236  2.9421277 -5.1943817]]
Iteration 500 of 1000: loss=0.0926 " + "l1=0" + "l2=0.0926 f=-0.494 shape=(1, 9000, 1)
logits [[ 2.9398096 -2.6658032  2.944983  -5.1948824]]
Iteration 600 of 1000: loss=0.0781 " + "l1=0.00281" + "l2=0.0753 f=-0.497 shape=(1, 9000, 1)
logits [[ 2.9505847 -2.6697557  2.9454765 -5.212915 ]]
Iteration 700 of 1000: loss=0.0669 " + "l1=0" + "l2=0.0669 f=-0.5 shape=(1, 9000, 1)
logits [[ 2.946329  -2.6748407  2.9484549 -5.220569 ]]
Iteration 800 of 1000: loss=0.0593 " + "l1=0" + "l2=0.0593 f=-0.503 shape=(1, 9000, 1)
logits [[ 2.9485877 -2.6793263  2.9503367 -5.233355 ]]
Iteration 900 of 1000: loss=0.0542 " + "l1=0.00113" + "l2=0.053 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.9524248 -2.684436   2.9503772 -5.244219 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.355 " + "l1=0.355" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.8947837 -2.7718282  2.8027823 -5.9432693]]
Iteration 100 of 1000: loss=0.27 " + "l1=0.225" + "l2=0.0447 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.543641  -2.7186043  2.8499959 -5.652308 ]]
Iteration 200 of 1000: loss=0.228 " + "l1=0.168" + "l2=0.0602 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.3955963 -2.706131   2.879067  -5.547297 ]]
Iteration 300 of 1000: loss=0.191 " + "l1=0.121" + "l2=0.0703 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.2699032 -2.695624   2.8975818 -5.44631  ]]
Iteration 400 of 1000: loss=0.155 " + "l1=0.0789" + "l2=0.0763 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.1640692 -2.694117   2.9211524 -5.355445 ]]
Iteration 500 of 1000: loss=0.124 " + "l1=0.0422" + "l2=0.0818 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.0682254 -2.6881335  2.9383037 -5.2839355]]
Iteration 600 of 1000: loss=0.0955 " + "l1=0.00762" + "l2=0.0879 f=-0.491 shape=(1, 9000, 1)
logits [[ 2.9704509 -2.6713636  2.9469972 -5.210794 ]]
Iteration 700 of 1000: loss=0.0761 " + "l1=0.00202" + "l2=0.0741 f=-0.495 shape=(1, 9000, 1)
logits [[ 2.9528873 -2.6710408  2.946662  -5.208012 ]]
Iteration 800 of 1000: loss=0.0647 " + "l1=0.00144" + "l2=0.0632 f=-0.499 shape=(1, 9000, 1)
logits [[ 2.955499  -2.678441   2.9510531 -5.2239766]]
Iteration 900 of 1000: loss=0.0567 " + "l1=6.26e-05" + "l2=0.0566 f=-0.503 shape=(1, 9000, 1)
logits [[ 2.9548416 -2.6829274  2.954649  -5.2383647]]
--- 269.22818398475647 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0984 " + "l1=0.0984" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.8947837 -2.7718282  2.8027823 -5.9432693]]
Iteration 100 of 1000: loss=0.0979 " + "l1=0.0976" + "l2=0.000331 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.860195  -2.7607193  2.7929235 -5.898145 ]]
Iteration 200 of 1000: loss=0.0978 " + "l1=0.0975" + "l2=0.000298 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.8550975 -2.7588816  2.7907107 -5.891475 ]]
Iteration 300 of 1000: loss=0.0976 " + "l1=0.0973" + "l2=0.000363 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.847095  -2.7559564  2.7874923 -5.8810015]]
Iteration 400 of 1000: loss=0.0975 " + "l1=0.0971" + "l2=0.000439 f=-0.5 shape=(1, 9000, 1)
logits [[ 3.8381305 -2.7527742  2.7837849 -5.869131 ]]
Iteration 500 of 1000: loss=0.0974 " + "l1=0.0969" + "l2=0.000555 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.8289082 -2.7493665  2.7797782 -5.8566666]]
Iteration 600 of 1000: loss=0.0973 " + "l1=0.0966" + "l2=0.000647 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.8195395 -2.7459202  2.775682  -5.84409  ]]
Iteration 700 of 1000: loss=0.0971 " + "l1=0.0964" + "l2=0.000731 f=-0.498 shape=(1, 9000, 1)
logits [[ 3.810144  -2.7423172  2.7713513 -5.8313475]]
Iteration 800 of 1000: loss=0.0971 " + "l1=0.0962" + "l2=0.000877 f=-0.497 shape=(1, 9000, 1)
logits [[ 3.8009806 -2.7386835  2.766895  -5.8186436]]
Iteration 900 of 1000: loss=0.097 " + "l1=0.096" + "l2=0.00101 f=-0.497 shape=(1, 9000, 1)
logits [[ 3.7919555 -2.7350755  2.7624056 -5.80609  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.984 " + "l1=0.984" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.8947837 -2.7718282  2.8027823 -5.9432693]]
Iteration 100 of 1000: loss=0.941 " + "l1=0.919" + "l2=0.0229 f=-0.478 shape=(1, 9000, 1)
logits [[ 3.6085978 -2.6555746  2.7121897 -5.5767717]]
Iteration 200 of 1000: loss=0.918 " + "l1=0.884" + "l2=0.034 f=-0.464 shape=(1, 9000, 1)
logits [[ 3.4596066 -2.5893545  2.6518786 -5.37888  ]]
Iteration 300 of 1000: loss=0.892 " + "l1=0.851" + "l2=0.0412 f=-0.457 shape=(1, 9000, 1)
logits [[ 3.3206656 -2.534201   2.5762455 -5.1909966]]
Iteration 400 of 1000: loss=0.867 " + "l1=0.817" + "l2=0.0502 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.1702852 -2.4644709  2.4928133 -4.9963975]]
Iteration 500 of 1000: loss=0.84 " + "l1=0.781" + "l2=0.0591 f=-0.446 shape=(1, 9000, 1)
logits [[ 3.0124876 -2.4051664  2.408261  -4.801316 ]]
Iteration 600 of 1000: loss=0.815 " + "l1=0.748" + "l2=0.067 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.8571093 -2.3581839  2.3315823 -4.6227465]]
Iteration 700 of 1000: loss=0.795 " + "l1=0.721" + "l2=0.0737 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.7320821 -2.3111634  2.2676392 -4.480578 ]]
Iteration 800 of 1000: loss=0.778 " + "l1=0.699" + "l2=0.0789 f=-0.446 shape=(1, 9000, 1)
logits [[ 2.6328602 -2.272588   2.217251  -4.3616076]]
Iteration 900 of 1000: loss=0.762 " + "l1=0.678" + "l2=0.0843 f=-0.445 shape=(1, 9000, 1)
logits [[ 2.5344179 -2.2344391  2.1669643 -4.245301 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.84 " + "l1=9.84" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.8947837 -2.7718282  2.8027823 -5.9432693]]
Iteration 100 of 1000: loss=6.53 " + "l1=5.35" + "l2=1.18 f=-0.349 shape=(1, 9000, 1)
logits [[ 1.933069  -1.844181   1.9320637 -3.4152129]]
Iteration 200 of 1000: loss=5.57 " + "l1=4.24" + "l2=1.33 f=-0.286 shape=(1, 9000, 1)
logits [[ 1.5451508 -1.5404556  1.5418442 -2.6920145]]
Iteration 300 of 1000: loss=4.8 " + "l1=3.29" + "l2=1.51 f=-0.233 shape=(1, 9000, 1)
logits [[ 1.1724164 -1.2486255  1.217349  -2.0728614]]
Iteration 400 of 1000: loss=4.02 " + "l1=2.35" + "l2=1.67 f=-0.2 shape=(1, 9000, 1)
logits [[ 0.7539797  -1.0050511   0.90172154 -1.4502685 ]]
Iteration 500 of 1000: loss=3.46 " + "l1=1.77" + "l2=1.69 f=-0.184 shape=(1, 9000, 1)
logits [[ 0.5534227  -0.90091366  0.68860614 -1.0788825 ]]
Iteration 600 of 1000: loss=3.05 " + "l1=1.32" + "l2=1.72 f=-0.164 shape=(1, 9000, 1)
logits [[ 0.3604197  -0.80472237  0.555477   -0.76666677]]
Iteration 700 of 1000: loss=2.72 " + "l1=0.925" + "l2=1.8 f=-0.15 shape=(1, 9000, 1)
logits [[ 0.20694458 -0.7535586   0.43581435 -0.48921633]]
Iteration 800 of 1000: loss=2.39 " + "l1=0.493" + "l2=1.9 f=-0.14 shape=(1, 9000, 1)
logits [[-0.00934472 -0.6900811   0.31686363 -0.17606372]]
Iteration 900 of 1000: loss=2.04 " + "l1=0.00371" + "l2=2.03 f=-0.126 shape=(1, 9000, 1)
logits [[-0.20979808 -0.7043554   0.2073257   0.2036148 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.41 " + "l1=5.41" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.8947837 -2.7718282  2.8027823 -5.9432693]]
Iteration 100 of 1000: loss=4.12 " + "l1=3.49" + "l2=0.63 f=-0.386 shape=(1, 9000, 1)
logits [[ 2.3316157 -2.113052   2.2530072 -4.013821 ]]
Iteration 200 of 1000: loss=3.6 " + "l1=2.98" + "l2=0.617 f=-0.369 shape=(1, 9000, 1)
logits [[ 1.9547777 -1.9128413  1.9534398 -3.4713929]]
Iteration 300 of 1000: loss=3.29 " + "l1=2.7" + "l2=0.591 f=-0.351 shape=(1, 9000, 1)
logits [[ 1.7529747 -1.7681158  1.7594575 -3.1467702]]
Iteration 400 of 1000: loss=3.03 " + "l1=2.43" + "l2=0.595 f=-0.329 shape=(1, 9000, 1)
logits [[ 1.5688788 -1.6109452  1.575183  -2.8479323]]
Iteration 500 of 1000: loss=2.73 " + "l1=2.07" + "l2=0.665 f=-0.289 shape=(1, 9000, 1)
logits [[ 1.3028862 -1.3658632  1.3329569 -2.424954 ]]
Iteration 600 of 1000: loss=2.47 " + "l1=1.73" + "l2=0.741 f=-0.256 shape=(1, 9000, 1)
logits [[ 1.0190991 -1.1684608  1.137063  -2.01364  ]]
Iteration 700 of 1000: loss=2.3 " + "l1=1.51" + "l2=0.796 f=-0.238 shape=(1, 9000, 1)
logits [[ 0.8542329 -1.0839037  1.0063723 -1.7302287]]
Iteration 800 of 1000: loss=2.18 " + "l1=1.36" + "l2=0.815 f=-0.233 shape=(1, 9000, 1)
logits [[ 0.7560782 -1.0647794  0.9250119 -1.5478121]]
Iteration 900 of 1000: loss=2.05 " + "l1=1.21" + "l2=0.839 f=-0.227 shape=(1, 9000, 1)
logits [[ 0.6473217  -1.0482057   0.84506613 -1.350404  ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=7.62 " + "l1=7.62" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.8947837 -2.7718282  2.8027823 -5.9432693]]
Iteration 100 of 1000: loss=5.37 " + "l1=4.47" + "l2=0.895 f=-0.367 shape=(1, 9000, 1)
logits [[ 2.0887127 -1.971246   2.0928667 -3.679177 ]]
Iteration 200 of 1000: loss=4.65 " + "l1=3.78" + "l2=0.876 f=-0.329 shape=(1, 9000, 1)
logits [[ 1.7706187 -1.7548071  1.7713485 -3.1039119]]
Iteration 300 of 1000: loss=4.17 " + "l1=3.23" + "l2=0.939 f=-0.292 shape=(1, 9000, 1)
logits [[ 1.5106033 -1.5317589  1.5138234 -2.6593997]]
Iteration 400 of 1000: loss=3.65 " + "l1=2.58" + "l2=1.07 f=-0.256 shape=(1, 9000, 1)
logits [[ 1.1456518 -1.2888267  1.2247802 -2.1062212]]
Iteration 500 of 1000: loss=3.17 " + "l1=2.01" + "l2=1.16 f=-0.233 shape=(1, 9000, 1)
logits [[ 0.8233756 -1.1151605  0.97458   -1.6151865]]
Iteration 600 of 1000: loss=2.82 " + "l1=1.66" + "l2=1.16 f=-0.223 shape=(1, 9000, 1)
logits [[ 0.6530877  -1.0060855   0.80137557 -1.3415526 ]]
Iteration 700 of 1000: loss=2.58 " + "l1=1.4" + "l2=1.18 f=-0.209 shape=(1, 9000, 1)
logits [[ 0.5345112  -0.94711995  0.69316936 -1.1155696 ]]
Iteration 800 of 1000: loss=2.38 " + "l1=1.14" + "l2=1.24 f=-0.192 shape=(1, 9000, 1)
logits [[ 0.41674173 -0.91240406  0.59904164 -0.8708362 ]]
Iteration 900 of 1000: loss=2.18 " + "l1=0.865" + "l2=1.32 f=-0.181 shape=(1, 9000, 1)
logits [[ 0.2640075  -0.88826793  0.5079558  -0.60822964]]
--- 299.75840878486633 seconds ---
Adv result:3
Loading record A05119
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0683 " + "l1=0.0683" + "l2=0 f=-0.344 shape=(1, 9000, 1)
logits [[ 4.169973  -2.6623619  2.6955938 -5.5800076]]
Iteration 100 of 1000: loss=0.0681 " + "l1=0.0679" + "l2=0.000195 f=-0.343 shape=(1, 9000, 1)
logits [[ 4.1421156 -2.6481504  2.6844442 -5.5484457]]
Iteration 200 of 1000: loss=0.068 " + "l1=0.0679" + "l2=0.000163 f=-0.342 shape=(1, 9000, 1)
logits [[ 4.1401362 -2.646312   2.682958  -5.546096 ]]
Iteration 300 of 1000: loss=0.068 " + "l1=0.0678" + "l2=0.000201 f=-0.342 shape=(1, 9000, 1)
logits [[ 4.1356096 -2.6433725  2.6806002 -5.540715 ]]
Iteration 400 of 1000: loss=0.068 " + "l1=0.0677" + "l2=0.000263 f=-0.342 shape=(1, 9000, 1)
logits [[ 4.130677  -2.6402478  2.678125  -5.534761 ]]
Iteration 500 of 1000: loss=0.0679 " + "l1=0.0676" + "l2=0.0003 f=-0.341 shape=(1, 9000, 1)
logits [[ 4.1257544 -2.6371694  2.6757126 -5.5287447]]
Iteration 600 of 1000: loss=0.068 " + "l1=0.0676" + "l2=0.000401 f=-0.341 shape=(1, 9000, 1)
logits [[ 4.1208525 -2.6342807  2.6734197 -5.522789 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.683 " + "l1=0.683" + "l2=0 f=-0.344 shape=(1, 9000, 1)
logits [[ 4.169973  -2.6623619  2.6955938 -5.5800076]]
Iteration 100 of 1000: loss=0.664 " + "l1=0.653" + "l2=0.0109 f=-0.332 shape=(1, 9000, 1)
logits [[ 3.9712563 -2.56157    2.6125941 -5.351555 ]]
Iteration 200 of 1000: loss=0.656 " + "l1=0.642" + "l2=0.0143 f=-0.329 shape=(1, 9000, 1)
logits [[ 3.8980706 -2.5219064  2.5797882 -5.2718067]]
Iteration 300 of 1000: loss=0.649 " + "l1=0.632" + "l2=0.0171 f=-0.324 shape=(1, 9000, 1)
logits [[ 3.8336632 -2.4857829  2.5517085 -5.197163 ]]
Iteration 400 of 1000: loss=0.643 " + "l1=0.624" + "l2=0.019 f=-0.32 shape=(1, 9000, 1)
logits [[ 3.7808583 -2.4566061  2.5283887 -5.134253 ]]
Iteration 500 of 1000: loss=0.637 " + "l1=0.615" + "l2=0.0216 f=-0.317 shape=(1, 9000, 1)
logits [[ 3.724094  -2.4286175  2.5044534 -5.068588 ]]
Iteration 600 of 1000: loss=0.631 " + "l1=0.608" + "l2=0.0229 f=-0.314 shape=(1, 9000, 1)
logits [[ 3.6781294 -2.4051151  2.485368  -5.0160637]]
Iteration 700 of 1000: loss=0.626 " + "l1=0.602" + "l2=0.0241 f=-0.311 shape=(1, 9000, 1)
logits [[ 3.6329584 -2.3848803  2.4686875 -4.9625063]]
Iteration 800 of 1000: loss=0.62 " + "l1=0.595" + "l2=0.0256 f=-0.309 shape=(1, 9000, 1)
logits [[ 3.5827224 -2.3660398  2.452816  -4.9060607]]
Iteration 900 of 1000: loss=0.615 " + "l1=0.587" + "l2=0.0278 f=-0.307 shape=(1, 9000, 1)
logits [[ 3.5274615 -2.344834   2.4362307 -4.848242 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.83 " + "l1=6.83" + "l2=0 f=-0.344 shape=(1, 9000, 1)
logits [[ 4.169973  -2.6623619  2.6955938 -5.5800076]]
Iteration 100 of 1000: loss=4.85 " + "l1=3.74" + "l2=1.11 f=-0.251 shape=(1, 9000, 1)
logits [[ 2.016636  -1.7241081  1.8311546 -3.1258302]]
Iteration 200 of 1000: loss=4.1 " + "l1=2.9" + "l2=1.19 f=-0.225 shape=(1, 9000, 1)
logits [[ 1.5318916 -1.3708804  1.5302405 -2.5920238]]
Iteration 300 of 1000: loss=3.6 " + "l1=2.29" + "l2=1.31 f=-0.22 shape=(1, 9000, 1)
logits [[ 1.2374475 -1.054784   1.2334439 -2.29584  ]]
Iteration 400 of 1000: loss=3.14 " + "l1=1.69" + "l2=1.45 f=-0.228 shape=(1, 9000, 1)
logits [[ 0.9196831  -0.77258915  0.92039    -1.9788294 ]]
Iteration 500 of 1000: loss=2.83 " + "l1=1.31" + "l2=1.52 f=-0.219 shape=(1, 9000, 1)
logits [[ 0.7232471  -0.5742689   0.73460436 -1.760925  ]]
Iteration 600 of 1000: loss=2.58 " + "l1=0.989" + "l2=1.59 f=-0.221 shape=(1, 9000, 1)
logits [[ 0.5694926  -0.41965055  0.5692255  -1.6018296 ]]
Iteration 700 of 1000: loss=2.38 " + "l1=0.671" + "l2=1.71 f=-0.225 shape=(1, 9000, 1)
logits [[ 0.39332935 -0.27776173  0.38561657 -1.4001086 ]]
Iteration 800 of 1000: loss=2.2 " + "l1=0.425" + "l2=1.78 f=-0.233 shape=(1, 9000, 1)
logits [[ 0.24789435 -0.17398547  0.25103855 -1.2577775 ]]
Iteration 900 of 1000: loss=2.08 " + "l1=0.27" + "l2=1.81 f=-0.228 shape=(1, 9000, 1)
logits [[ 0.17252778 -0.0975594   0.16642947 -1.1551689 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=68.3 " + "l1=68.3" + "l2=0 f=-0.344 shape=(1, 9000, 1)
logits [[ 4.169973  -2.6623619  2.6955938 -5.5800076]]
Iteration 100 of 1000: loss=10.5 " + "l1=0" + "l2=10.5 f=-0.279 shape=(1, 9000, 1)
logits [[ 0.03544589  0.05198358  0.03973356 -1.2439251 ]]
Iteration 200 of 1000: loss=7.61 " + "l1=0" + "l2=7.61 f=-0.289 shape=(1, 9000, 1)
logits [[-0.05350707  0.0921234   0.06382068 -1.2597864 ]]
Iteration 300 of 1000: loss=6.44 " + "l1=0" + "l2=6.44 f=-0.286 shape=(1, 9000, 1)
logits [[ 3.8474984e-04  8.6487845e-02  7.6932147e-02 -1.3064532e+00]]
Iteration 400 of 1000: loss=5.8 " + "l1=0" + "l2=5.8 f=-0.285 shape=(1, 9000, 1)
logits [[-0.03658886  0.1015576   0.08775578 -1.2946671 ]]
Iteration 500 of 1000: loss=5.27 " + "l1=0.0171" + "l2=5.25 f=-0.274 shape=(1, 9000, 1)
logits [[ 0.05831929  0.08154774  0.08325376 -1.3197715 ]]
Iteration 600 of 1000: loss=5.03 " + "l1=0" + "l2=5.03 f=-0.28 shape=(1, 9000, 1)
logits [[-0.06747241  0.1271714   0.08038525 -1.261795  ]]
Iteration 700 of 1000: loss=4.65 " + "l1=0" + "l2=4.65 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.03670964  0.10648087  0.0684692  -1.2784008 ]]
Iteration 800 of 1000: loss=4.35 " + "l1=0" + "l2=4.35 f=-0.27 shape=(1, 9000, 1)
logits [[-0.04144703  0.10297786  0.09549379 -1.2375946 ]]
Iteration 900 of 1000: loss=4.17 " + "l1=0" + "l2=4.17 f=-0.259 shape=(1, 9000, 1)
logits [[ 0.00475753  0.1044324   0.06541153 -1.2107558 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=37.6 " + "l1=37.6" + "l2=0 f=-0.344 shape=(1, 9000, 1)
logits [[ 4.169973  -2.6623619  2.6955938 -5.5800076]]
Iteration 100 of 1000: loss=9.54 " + "l1=0" + "l2=9.54 f=-0.278 shape=(1, 9000, 1)
logits [[-0.01994839  0.09823806  0.07724372 -1.2685226 ]]
Iteration 200 of 1000: loss=6.32 " + "l1=0" + "l2=6.32 f=-0.276 shape=(1, 9000, 1)
logits [[ 0.01050978  0.09964256  0.0956559  -1.3108978 ]]
Iteration 300 of 1000: loss=5.37 " + "l1=0" + "l2=5.37 f=-0.275 shape=(1, 9000, 1)
logits [[ 0.00823455  0.10610237  0.08588399 -1.3020753 ]]
Iteration 400 of 1000: loss=4.76 " + "l1=0" + "l2=4.76 f=-0.269 shape=(1, 9000, 1)
logits [[ 0.06292997  0.08870482  0.0858103  -1.3123173 ]]
Iteration 500 of 1000: loss=4.38 " + "l1=0" + "l2=4.38 f=-0.264 shape=(1, 9000, 1)
logits [[ 0.06627967  0.08097049  0.07110588 -1.2762226 ]]
Iteration 600 of 1000: loss=4.06 " + "l1=0.0083" + "l2=4.05 f=-0.265 shape=(1, 9000, 1)
logits [[ 0.00419203  0.0776666   0.07917639 -1.2197895 ]]
Iteration 700 of 1000: loss=3.77 " + "l1=0" + "l2=3.77 f=-0.262 shape=(1, 9000, 1)
logits [[-0.01229666  0.07500873  0.07272811 -1.1851048 ]]
Iteration 800 of 1000: loss=3.49 " + "l1=0.0211" + "l2=3.47 f=-0.254 shape=(1, 9000, 1)
logits [[ 0.03663972  0.05433287  0.05817574 -1.1639472 ]]
Iteration 900 of 1000: loss=3.25 " + "l1=0" + "l2=3.25 f=-0.255 shape=(1, 9000, 1)
logits [[-0.01488689  0.05887242  0.05677664 -1.1215473 ]]
--- 274.8292992115021 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0147 " + "l1=0.0147" + "l2=0 f=-0.344 shape=(1, 9000, 1)
logits [[ 4.169973  -2.6623619  2.6955938 -5.5800076]]
Iteration 100 of 1000: loss=0.0147 " + "l1=0.0146" + "l2=0.000107 f=-0.344 shape=(1, 9000, 1)
logits [[ 4.1513968 -2.6612535  2.6955113 -5.56285  ]]
Iteration 200 of 1000: loss=0.0146 " + "l1=0.0146" + "l2=7.3e-05 f=-0.344 shape=(1, 9000, 1)
logits [[ 4.151968  -2.6614485  2.6959972 -5.564114 ]]
Iteration 300 of 1000: loss=0.0146 " + "l1=0.0145" + "l2=8.72e-05 f=-0.345 shape=(1, 9000, 1)
logits [[ 4.1500735 -2.6613958  2.6962621 -5.563122 ]]
Iteration 400 of 1000: loss=0.0146 " + "l1=0.0145" + "l2=0.000132 f=-0.345 shape=(1, 9000, 1)
logits [[ 4.147812  -2.6613026  2.6964853 -5.561746 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.147 " + "l1=0.147" + "l2=0 f=-0.344 shape=(1, 9000, 1)
logits [[ 4.169973  -2.6623619  2.6955938 -5.5800076]]
Iteration 100 of 1000: loss=0.14 " + "l1=0.136" + "l2=0.00429 f=-0.346 shape=(1, 9000, 1)
logits [[ 4.0548096 -2.659753   2.6956182 -5.4758735]]
Iteration 200 of 1000: loss=0.138 " + "l1=0.132" + "l2=0.00556 f=-0.348 shape=(1, 9000, 1)
logits [[ 4.018724 -2.659148  2.697958 -5.448619]]
Iteration 300 of 1000: loss=0.135 " + "l1=0.128" + "l2=0.00683 f=-0.35 shape=(1, 9000, 1)
logits [[ 3.9843283 -2.6584795  2.7003736 -5.4256887]]
Iteration 400 of 1000: loss=0.133 " + "l1=0.125" + "l2=0.00796 f=-0.352 shape=(1, 9000, 1)
logits [[ 3.9514158 -2.6571963  2.7024765 -5.405779 ]]
Iteration 500 of 1000: loss=0.131 " + "l1=0.122" + "l2=0.00882 f=-0.355 shape=(1, 9000, 1)
logits [[ 3.9227595 -2.6566222  2.704215  -5.3892164]]
Iteration 600 of 1000: loss=0.128 " + "l1=0.119" + "l2=0.00978 f=-0.357 shape=(1, 9000, 1)
logits [[ 3.8910835 -2.6563148  2.7055576 -5.368836 ]]
Iteration 700 of 1000: loss=0.126 " + "l1=0.115" + "l2=0.0107 f=-0.359 shape=(1, 9000, 1)
logits [[ 3.859319  -2.654426   2.7066147 -5.347728 ]]
Iteration 800 of 1000: loss=0.123 " + "l1=0.112" + "l2=0.0116 f=-0.362 shape=(1, 9000, 1)
logits [[ 3.8250806 -2.6524525  2.7076933 -5.326425 ]]
Iteration 900 of 1000: loss=0.12 " + "l1=0.108" + "l2=0.0124 f=-0.364 shape=(1, 9000, 1)
logits [[ 3.7869837 -2.64926    2.708362  -5.3023376]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.47 " + "l1=1.47" + "l2=0 f=-0.344 shape=(1, 9000, 1)
logits [[ 4.169973  -2.6623619  2.6955938 -5.5800076]]
Iteration 100 of 1000: loss=0.644 " + "l1=0.162" + "l2=0.482 f=-0.376 shape=(1, 9000, 1)
logits [[ 2.8104258 -2.6396158  2.648106  -4.3225355]]
Iteration 200 of 1000: loss=0.378 " + "l1=0.0024" + "l2=0.375 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.7130852 -2.696837   2.7106893 -4.333903 ]]
Iteration 300 of 1000: loss=0.268 " + "l1=0" + "l2=0.268 f=-0.419 shape=(1, 9000, 1)
logits [[ 2.740372  -2.7377589  2.746613  -4.4268637]]
Iteration 400 of 1000: loss=0.208 " + "l1=0" + "l2=0.208 f=-0.432 shape=(1, 9000, 1)
logits [[ 2.7846372 -2.7727385  2.7853937 -4.5255966]]
Iteration 500 of 1000: loss=0.17 " + "l1=0" + "l2=0.17 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.7980406 -2.7768245  2.7998688 -4.561357 ]]
Iteration 600 of 1000: loss=0.143 " + "l1=0" + "l2=0.143 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.7931635 -2.7773392  2.808082  -4.565412 ]]
Iteration 700 of 1000: loss=0.116 " + "l1=0.00218" + "l2=0.114 f=-0.432 shape=(1, 9000, 1)
logits [[ 2.8258464 -2.776298   2.8236666 -4.5996537]]
Iteration 800 of 1000: loss=0.1 " + "l1=0" + "l2=0.1 f=-0.428 shape=(1, 9000, 1)
logits [[ 2.82033   -2.7733376  2.8322396 -4.5905733]]
Iteration 900 of 1000: loss=0.0852 " + "l1=0.000243" + "l2=0.085 f=-0.422 shape=(1, 9000, 1)
logits [[ 2.838654  -2.7691479  2.8384113 -4.597867 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.811 " + "l1=0.811" + "l2=0 f=-0.344 shape=(1, 9000, 1)
logits [[ 4.169973  -2.6623619  2.6955938 -5.5800076]]
Iteration 100 of 1000: loss=0.558 " + "l1=0.383" + "l2=0.175 f=-0.365 shape=(1, 9000, 1)
logits [[ 3.3612833 -2.6597188  2.665104  -4.8281865]]
Iteration 200 of 1000: loss=0.449 " + "l1=0.234" + "l2=0.215 f=-0.375 shape=(1, 9000, 1)
logits [[ 3.0924828 -2.66194    2.6679094 -4.5985174]]
Iteration 300 of 1000: loss=0.331 " + "l1=0.07" + "l2=0.26 f=-0.396 shape=(1, 9000, 1)
logits [[ 2.8233595 -2.6828048  2.6960056 -4.420858 ]]
Iteration 400 of 1000: loss=0.209 " + "l1=0" + "l2=0.209 f=-0.432 shape=(1, 9000, 1)
logits [[ 2.7770596 -2.7721937  2.780324  -4.514478 ]]
Iteration 500 of 1000: loss=0.157 " + "l1=0.00402" + "l2=0.153 f=-0.437 shape=(1, 9000, 1)
logits [[ 2.814829  -2.783659   2.8075256 -4.587686 ]]
Iteration 600 of 1000: loss=0.12 " + "l1=0.00136" + "l2=0.119 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.8273718 -2.784286   2.824904  -4.600553 ]]
Iteration 700 of 1000: loss=0.0985 " + "l1=0.000854" + "l2=0.0976 f=-0.427 shape=(1, 9000, 1)
logits [[ 2.8336167 -2.776198   2.8320634 -4.595572 ]]
Iteration 800 of 1000: loss=0.0833 " + "l1=0.00111" + "l2=0.0822 f=-0.42 shape=(1, 9000, 1)
logits [[ 2.8457782 -2.772312   2.8437605 -4.5964065]]
Iteration 900 of 1000: loss=0.0708 " + "l1=0.00108" + "l2=0.0697 f=-0.414 shape=(1, 9000, 1)
logits [[ 2.8514612 -2.7652118  2.849492  -4.5903177]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.479 " + "l1=0.479" + "l2=0 f=-0.344 shape=(1, 9000, 1)
logits [[ 4.169973  -2.6623619  2.6955938 -5.5800076]]
Iteration 100 of 1000: loss=0.397 " + "l1=0.342" + "l2=0.0547 f=-0.354 shape=(1, 9000, 1)
logits [[ 3.749194  -2.6633544  2.695427  -5.1985435]]
Iteration 200 of 1000: loss=0.361 " + "l1=0.288" + "l2=0.0724 f=-0.361 shape=(1, 9000, 1)
logits [[ 3.5882893 -2.6716044  2.7010317 -5.0626574]]
Iteration 300 of 1000: loss=0.33 " + "l1=0.244" + "l2=0.0866 f=-0.367 shape=(1, 9000, 1)
logits [[ 3.4545906 -2.6719785  2.704191  -4.9558372]]
Iteration 400 of 1000: loss=0.298 " + "l1=0.199" + "l2=0.099 f=-0.375 shape=(1, 9000, 1)
logits [[ 3.3229787 -2.6662705  2.7118714 -4.8698354]]
Iteration 500 of 1000: loss=0.239 " + "l1=0.116" + "l2=0.124 f=-0.407 shape=(1, 9000, 1)
logits [[ 3.1137393 -2.7219107  2.7583263 -4.779138 ]]
Iteration 600 of 1000: loss=0.174 " + "l1=0.0439" + "l2=0.13 f=-0.431 shape=(1, 9000, 1)
logits [[ 2.9473462 -2.7840807  2.8123772 -4.6999063]]
Iteration 700 of 1000: loss=0.122 " + "l1=0.000907" + "l2=0.121 f=-0.432 shape=(1, 9000, 1)
logits [[ 2.8341935 -2.7991884  2.831403  -4.5958776]]
Iteration 800 of 1000: loss=0.0943 " + "l1=0.000313" + "l2=0.0939 f=-0.424 shape=(1, 9000, 1)
logits [[ 2.8375697 -2.7851548  2.8366053 -4.5867143]]
Iteration 900 of 1000: loss=0.0779 " + "l1=0.000295" + "l2=0.0777 f=-0.418 shape=(1, 9000, 1)
logits [[ 2.8465295 -2.7765846  2.845621  -4.5875134]]
--- 263.6512961387634 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0975 " + "l1=0.0975" + "l2=0 f=-0.344 shape=(1, 9000, 1)
logits [[ 4.169973  -2.6623619  2.6955938 -5.5800076]]
Iteration 100 of 1000: loss=0.0969 " + "l1=0.0965" + "l2=0.000442 f=-0.341 shape=(1, 9000, 1)
logits [[ 4.12753   -2.6522408  2.679391  -5.5205235]]
Iteration 200 of 1000: loss=0.0968 " + "l1=0.0963" + "l2=0.000419 f=-0.341 shape=(1, 9000, 1)
logits [[ 4.121895  -2.649719   2.6765428 -5.512859 ]]
Iteration 300 of 1000: loss=0.0966 " + "l1=0.0962" + "l2=0.000478 f=-0.34 shape=(1, 9000, 1)
logits [[ 4.1140404 -2.646788   2.6727638 -5.501745 ]]
Iteration 400 of 1000: loss=0.0965 " + "l1=0.096" + "l2=0.000576 f=-0.34 shape=(1, 9000, 1)
logits [[ 4.1057334 -2.643759   2.6686945 -5.489921 ]]
Iteration 500 of 1000: loss=0.0964 " + "l1=0.0958" + "l2=0.000669 f=-0.339 shape=(1, 9000, 1)
logits [[ 4.0973682 -2.640651   2.664466  -5.477904 ]]
Iteration 600 of 1000: loss=0.0963 " + "l1=0.0956" + "l2=0.00079 f=-0.339 shape=(1, 9000, 1)
logits [[ 4.0891485 -2.6375484  2.660294  -5.4660697]]
Iteration 700 of 1000: loss=0.0962 " + "l1=0.0954" + "l2=0.000827 f=-0.338 shape=(1, 9000, 1)
logits [[ 4.0809402 -2.6345139  2.6560643 -5.4542227]]
Iteration 800 of 1000: loss=0.0962 " + "l1=0.0952" + "l2=0.00101 f=-0.337 shape=(1, 9000, 1)
logits [[ 4.07285   -2.631577   2.65181   -5.4426146]]
Iteration 900 of 1000: loss=0.0962 " + "l1=0.095" + "l2=0.0012 f=-0.337 shape=(1, 9000, 1)
logits [[ 4.0649686 -2.6287522  2.6476378 -5.4313145]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.975 " + "l1=0.975" + "l2=0 f=-0.344 shape=(1, 9000, 1)
logits [[ 4.169973  -2.6623619  2.6955938 -5.5800076]]
Iteration 100 of 1000: loss=0.92 " + "l1=0.884" + "l2=0.036 f=-0.324 shape=(1, 9000, 1)
logits [[ 3.7869482 -2.5858858  2.5558765 -5.0534925]]
Iteration 200 of 1000: loss=0.897 " + "l1=0.849" + "l2=0.0484 f=-0.318 shape=(1, 9000, 1)
logits [[ 3.6387427 -2.557996   2.4997382 -4.8514457]]
Iteration 300 of 1000: loss=0.877 " + "l1=0.821" + "l2=0.0567 f=-0.31 shape=(1, 9000, 1)
logits [[ 3.5224416 -2.5350842  2.4560924 -4.6835504]]
Iteration 400 of 1000: loss=0.86 " + "l1=0.797" + "l2=0.0625 f=-0.303 shape=(1, 9000, 1)
logits [[ 3.4251003 -2.5051742  2.4142952 -4.5450435]]
Iteration 500 of 1000: loss=0.844 " + "l1=0.778" + "l2=0.0661 f=-0.297 shape=(1, 9000, 1)
logits [[ 3.3473978 -2.485463   2.3834538 -4.4338183]]
Iteration 600 of 1000: loss=0.83 " + "l1=0.759" + "l2=0.0711 f=-0.294 shape=(1, 9000, 1)
logits [[ 3.265553  -2.4665399  2.3501027 -4.325834 ]]
Iteration 700 of 1000: loss=0.816 " + "l1=0.738" + "l2=0.0784 f=-0.291 shape=(1, 9000, 1)
logits [[ 3.174568  -2.445339   2.3095818 -4.2040124]]
Iteration 800 of 1000: loss=0.804 " + "l1=0.719" + "l2=0.0851 f=-0.289 shape=(1, 9000, 1)
logits [[ 3.091273  -2.4217215  2.2706878 -4.0943985]]
Iteration 900 of 1000: loss=0.789 " + "l1=0.698" + "l2=0.0911 f=-0.286 shape=(1, 9000, 1)
logits [[ 3.0000155 -2.3994262  2.2330403 -3.9767687]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.75 " + "l1=9.75" + "l2=0 f=-0.344 shape=(1, 9000, 1)
logits [[ 4.169973  -2.6623619  2.6955938 -5.5800076]]
Iteration 100 of 1000: loss=5.13 " + "l1=3.08" + "l2=2.05 f=-0.16 shape=(1, 9000, 1)
logits [[ 1.5217065 -2.1186564  1.5139093 -1.5550022]]
Iteration 200 of 1000: loss=4.18 " + "l1=2.01" + "l2=2.17 f=-0.0923 shape=(1, 9000, 1)
logits [[ 1.1956027 -1.9448725  1.1973261 -0.8170991]]
Iteration 300 of 1000: loss=3.56 " + "l1=1.27" + "l2=2.29 f=-0.0657 shape=(1, 9000, 1)
logits [[ 0.9169067  -1.7609733   0.92385346 -0.3426306 ]]
Iteration 400 of 1000: loss=2.93 " + "l1=0.556" + "l2=2.38 f=-0.0584 shape=(1, 9000, 1)
logits [[ 0.63338923 -1.5807467   0.6348575   0.07905177]]
Iteration 500 of 1000: loss=2.41 " + "l1=0" + "l2=2.41 f=-0.032 shape=(1, 9000, 1)
logits [[ 0.44440946 -1.4762788   0.44897252  0.4550116 ]]
Iteration 600 of 1000: loss=2.11 " + "l1=0" + "l2=2.11 f=-0.0355 shape=(1, 9000, 1)
logits [[ 0.43925393 -1.471216    0.44036967  0.44967672]]
Iteration 700 of 1000: loss=1.93 " + "l1=0.0434" + "l2=1.89 f=-0.0409 shape=(1, 9000, 1)
logits [[ 0.45058596 -1.4770894   0.45316637  0.40973184]]
Iteration 800 of 1000: loss=1.8 " + "l1=0.0188" + "l2=1.78 f=-0.0468 shape=(1, 9000, 1)
logits [[ 0.42319986 -1.4688448   0.43855646  0.41973943]]
Iteration 900 of 1000: loss=1.71 " + "l1=0" + "l2=1.71 f=-0.0468 shape=(1, 9000, 1)
logits [[ 0.42036477 -1.4675825   0.42464778  0.4354249 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.36 " + "l1=5.36" + "l2=0 f=-0.344 shape=(1, 9000, 1)
logits [[ 4.169973  -2.6623619  2.6955938 -5.5800076]]
Iteration 100 of 1000: loss=3.61 " + "l1=2.61" + "l2=1.01 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.0869675 -2.3166432  1.9429228 -2.6499927]]
Iteration 200 of 1000: loss=3.09 " + "l1=1.97" + "l2=1.11 f=-0.184 shape=(1, 9000, 1)
logits [[ 1.6769943 -2.1728625  1.6712445 -1.9112214]]
Iteration 300 of 1000: loss=2.78 " + "l1=1.67" + "l2=1.11 f=-0.142 shape=(1, 9000, 1)
logits [[ 1.5100741 -2.0612478  1.5104847 -1.5256393]]
Iteration 400 of 1000: loss=2.5 " + "l1=1.38" + "l2=1.12 f=-0.119 shape=(1, 9000, 1)
logits [[ 1.3225975 -1.9424117  1.3244694 -1.1803   ]]
Iteration 500 of 1000: loss=2.26 " + "l1=1.12" + "l2=1.14 f=-0.1 shape=(1, 9000, 1)
logits [[ 1.1524099  -1.8234279   1.1543158  -0.88391024]]
Iteration 600 of 1000: loss=2.04 " + "l1=0.865" + "l2=1.18 f=-0.0854 shape=(1, 9000, 1)
logits [[ 0.9764328  -1.6987152   0.97703594 -0.5962009 ]]
Iteration 700 of 1000: loss=1.87 " + "l1=0.624" + "l2=1.24 f=-0.0742 shape=(1, 9000, 1)
logits [[ 0.81811523 -1.6184411   0.81906426 -0.31572315]]
Iteration 800 of 1000: loss=1.72 " + "l1=0.444" + "l2=1.28 f=-0.0733 shape=(1, 9000, 1)
logits [[ 0.68838906 -1.558983    0.692505   -0.11510509]]
Iteration 900 of 1000: loss=1.59 " + "l1=0.254" + "l2=1.34 f=-0.0711 shape=(1, 9000, 1)
logits [[ 0.55832493 -1.5051271   0.5621691   0.10011564]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=7.56 " + "l1=7.56" + "l2=0 f=-0.344 shape=(1, 9000, 1)
logits [[ 4.169973  -2.6623619  2.6955938 -5.5800076]]
Iteration 100 of 1000: loss=4.44 " + "l1=2.91" + "l2=1.53 f=-0.192 shape=(1, 9000, 1)
logits [[ 1.7338601 -2.2109594  1.7295411 -2.0191696]]
Iteration 200 of 1000: loss=3.71 " + "l1=2.12" + "l2=1.59 f=-0.123 shape=(1, 9000, 1)
logits [[ 1.4340868 -2.0545003  1.4318217 -1.3052983]]
Iteration 300 of 1000: loss=3.24 " + "l1=1.6" + "l2=1.64 f=-0.0872 shape=(1, 9000, 1)
logits [[ 1.21534    -1.931226    1.2141557  -0.84692746]]
Iteration 400 of 1000: loss=2.82 " + "l1=1.09" + "l2=1.73 f=-0.076 shape=(1, 9000, 1)
logits [[ 0.95776093 -1.7655238   0.9571118  -0.45337364]]
Iteration 500 of 1000: loss=2.43 " + "l1=0.662" + "l2=1.77 f=-0.0736 shape=(1, 9000, 1)
logits [[ 0.71975267 -1.6133242   0.72638625 -0.1271936 ]]
Iteration 600 of 1000: loss=2.13 " + "l1=0.32" + "l2=1.81 f=-0.0629 shape=(1, 9000, 1)
logits [[ 0.5604178  -1.5292804   0.56517     0.15190265]]
Iteration 700 of 1000: loss=1.86 " + "l1=0" + "l2=1.86 f=-0.0494 shape=(1, 9000, 1)
logits [[ 0.41726366 -1.4604927   0.4178872   0.4275685 ]]
Iteration 800 of 1000: loss=1.71 " + "l1=0.00212" + "l2=1.7 f=-0.0548 shape=(1, 9000, 1)
logits [[ 0.4191282  -1.477843    0.42122176  0.41848695]]
Iteration 900 of 1000: loss=1.61 " + "l1=0.0205" + "l2=1.59 f=-0.0569 shape=(1, 9000, 1)
logits [[ 0.43262085 -1.4985297   0.43217745  0.40619266]]
--- 294.1992094516754 seconds ---
Adv result:3
