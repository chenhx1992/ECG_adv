Updating f389245..912353f
Fast-forward
 cw_eva_diff.py => cw_eval.py |   0
 cw_eval_diff.py              | 159 +++++++++++++++++++++++++++++++++++++++++++
 myattacks_diff.py            |   2 +-
 myattacks_tf_diff.py         |  32 +++------
 plotone.py                   |  26 ++++++-
 5 files changed, 193 insertions(+), 26 deletions(-)
 rename cw_eva_diff.py => cw_eval.py (100%)
 create mode 100644 cw_eval_diff.py
Loading model
Loading ground truth file
Attack diff is running...
Loading record A00432
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0774 " + "l1=0.0774" + "l2=0 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.974579  -2.7613957  3.2272491 -8.061484 ]]
Iteration 100 of 1000: loss=0.077 " + "l1=0.0768" + "l2=0.000268 f=-0.651 shape=(1, 9000, 1)
logits [[ 4.9367223 -2.739265   3.2148457 -8.017186 ]]
Iteration 200 of 1000: loss=0.0769 " + "l1=0.0767" + "l2=0.000247 f=-0.65 shape=(1, 9000, 1)
logits [[ 4.9315104 -2.7352686  3.212689  -8.010151 ]]
Iteration 300 of 1000: loss=0.0769 " + "l1=0.0765" + "l2=0.000311 f=-0.649 shape=(1, 9000, 1)
logits [[ 4.9240117 -2.7302089  3.2099302 -8.000492 ]]
Iteration 400 of 1000: loss=0.0768 " + "l1=0.0764" + "l2=0.000361 f=-0.648 shape=(1, 9000, 1)
logits [[ 4.9162474 -2.725043   3.207155  -7.9907956]]
Iteration 500 of 1000: loss=0.0767 " + "l1=0.0763" + "l2=0.000446 f=-0.647 shape=(1, 9000, 1)
logits [[ 4.908447  -2.7198737  3.2044144 -7.981221 ]]
Iteration 600 of 1000: loss=0.0767 " + "l1=0.0762" + "l2=0.000542 f=-0.646 shape=(1, 9000, 1)
logits [[ 4.900871  -2.7148914  3.2017324 -7.9723654]]
Iteration 700 of 1000: loss=0.0767 " + "l1=0.076" + "l2=0.000634 f=-0.646 shape=(1, 9000, 1)
logits [[ 4.893523  -2.7104018  3.199318  -7.9644594]]
Iteration 800 of 1000: loss=0.0767 " + "l1=0.0759" + "l2=0.000744 f=-0.645 shape=(1, 9000, 1)
logits [[ 4.886408  -2.7060769  3.1970222 -7.9567404]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.774 " + "l1=0.774" + "l2=0 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.974579  -2.7613957  3.2272491 -8.061484 ]]
Iteration 100 of 1000: loss=0.74 " + "l1=0.718" + "l2=0.0217 f=-0.618 shape=(1, 9000, 1)
logits [[ 4.6228642 -2.5612597  3.114889  -7.6473303]]
Iteration 200 of 1000: loss=0.725 " + "l1=0.696" + "l2=0.0293 f=-0.6 shape=(1, 9000, 1)
logits [[ 4.4834213 -2.4728591  3.0583525 -7.4702735]]
Iteration 300 of 1000: loss=0.712 " + "l1=0.678" + "l2=0.0337 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.377995  -2.4062634  3.0075629 -7.3332844]]
Iteration 400 of 1000: loss=0.701 " + "l1=0.664" + "l2=0.0376 f=-0.579 shape=(1, 9000, 1)
logits [[ 4.287081  -2.349426   2.9617512 -7.2159195]]
Iteration 500 of 1000: loss=0.692 " + "l1=0.65" + "l2=0.0416 f=-0.571 shape=(1, 9000, 1)
logits [[ 4.205204  -2.2989855  2.9212432 -7.110319 ]]
Iteration 600 of 1000: loss=0.685 " + "l1=0.641" + "l2=0.0444 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.144092  -2.2634647  2.8929784 -7.0371714]]
Iteration 700 of 1000: loss=0.68 " + "l1=0.634" + "l2=0.0463 f=-0.564 shape=(1, 9000, 1)
logits [[ 4.093628  -2.2419975  2.8767908 -6.9843726]]
Iteration 800 of 1000: loss=0.675 " + "l1=0.626" + "l2=0.0488 f=-0.562 shape=(1, 9000, 1)
logits [[ 4.041517  -2.2206821  2.8614976 -6.92898  ]]
Iteration 900 of 1000: loss=0.67 " + "l1=0.62" + "l2=0.0507 f=-0.561 shape=(1, 9000, 1)
logits [[ 3.9930186 -2.2025135  2.8486423 -6.8839054]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.74 " + "l1=7.74" + "l2=0 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.974579  -2.7613957  3.2272491 -8.061484 ]]
Iteration 100 of 1000: loss=5.3 " + "l1=4.17" + "l2=1.13 f=-0.501 shape=(1, 9000, 1)
logits [[ 2.5373209 -1.6326113  2.3691335 -5.2789755]]
Iteration 200 of 1000: loss=4.76 " + "l1=3.49" + "l2=1.26 f=-0.449 shape=(1, 9000, 1)
logits [[ 2.132109  -1.3586838  2.13593   -4.706305 ]]
Iteration 300 of 1000: loss=4.41 " + "l1=3.14" + "l2=1.27 f=-0.418 shape=(1, 9000, 1)
logits [[ 1.9746336 -1.1640967  1.9781317 -4.458748 ]]
Iteration 400 of 1000: loss=4.16 " + "l1=2.86" + "l2=1.3 f=-0.398 shape=(1, 9000, 1)
logits [[ 1.8440453 -1.0146285  1.8402059 -4.2602124]]
Iteration 500 of 1000: loss=3.98 " + "l1=2.6" + "l2=1.38 f=-0.38 shape=(1, 9000, 1)
logits [[ 1.7105365 -0.8866946  1.7133693 -4.058593 ]]
Iteration 600 of 1000: loss=3.85 " + "l1=2.46" + "l2=1.39 f=-0.365 shape=(1, 9000, 1)
logits [[ 1.6508201 -0.8068388  1.6357261 -3.9390378]]
Iteration 700 of 1000: loss=3.67 " + "l1=2.26" + "l2=1.41 f=-0.348 shape=(1, 9000, 1)
logits [[ 1.5300199  -0.72662973  1.5306778  -3.7243414 ]]
Iteration 800 of 1000: loss=3.5 " + "l1=2.02" + "l2=1.48 f=-0.344 shape=(1, 9000, 1)
logits [[ 1.3829621 -0.6198691  1.3978243 -3.5367315]]
Iteration 900 of 1000: loss=3.23 " + "l1=1.72" + "l2=1.52 f=-0.34 shape=(1, 9000, 1)
logits [[ 1.215162  -0.5021648  1.2162913 -3.288806 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=77.4 " + "l1=77.4" + "l2=0 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.974579  -2.7613957  3.2272491 -8.061484 ]]
Iteration 100 of 1000: loss=14.7 " + "l1=1.1" + "l2=13.6 f=-0.356 shape=(1, 9000, 1)
logits [[ 0.08664513  0.33895117  0.44860685 -2.2962625 ]]
Iteration 200 of 1000: loss=9.65 " + "l1=0.00364" + "l2=9.65 f=-0.361 shape=(1, 9000, 1)
logits [[ 0.28095317  0.4026381   0.4030018  -2.5292218 ]]
Iteration 300 of 1000: loss=8.65 " + "l1=0" + "l2=8.65 f=-0.364 shape=(1, 9000, 1)
logits [[ 0.30413935  0.41496485  0.40272257 -2.5789118 ]]
Iteration 400 of 1000: loss=8.06 " + "l1=0" + "l2=8.06 f=-0.366 shape=(1, 9000, 1)
logits [[ 0.34251752  0.40927216  0.40529025 -2.62237   ]]
Iteration 500 of 1000: loss=7.66 " + "l1=0" + "l2=7.66 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.37220505  0.41222233  0.40367278 -2.6495984 ]]
Iteration 600 of 1000: loss=7.33 " + "l1=0" + "l2=7.33 f=-0.368 shape=(1, 9000, 1)
logits [[ 0.29866526  0.42540967  0.4236661  -2.620262  ]]
Iteration 700 of 1000: loss=7.05 " + "l1=0" + "l2=7.05 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.39244944  0.4225381   0.4122002  -2.686866  ]]
Iteration 800 of 1000: loss=6.82 " + "l1=0" + "l2=6.82 f=-0.366 shape=(1, 9000, 1)
logits [[ 0.38790792  0.4251339   0.40867794 -2.6846354 ]]
Iteration 900 of 1000: loss=6.64 " + "l1=0.114" + "l2=6.52 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.39647296  0.412528    0.42396352 -2.692506  ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=42.5 " + "l1=42.5" + "l2=0 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.974579  -2.7613957  3.2272491 -8.061484 ]]
Iteration 100 of 1000: loss=13.5 " + "l1=5.69" + "l2=7.76 f=-0.351 shape=(1, 9000, 1)
logits [[ 0.8927636  -0.12922285  0.9061155  -3.0720744 ]]
Iteration 200 of 1000: loss=8.8 " + "l1=0.132" + "l2=8.67 f=-0.362 shape=(1, 9000, 1)
logits [[ 0.3349082   0.38825303  0.41224042 -2.5818214 ]]
Iteration 300 of 1000: loss=7.7 " + "l1=0" + "l2=7.7 f=-0.361 shape=(1, 9000, 1)
logits [[ 0.39693323  0.41820645  0.40948868 -2.6669903 ]]
Iteration 400 of 1000: loss=7.16 " + "l1=0.0643" + "l2=7.09 f=-0.364 shape=(1, 9000, 1)
logits [[ 0.40048262  0.41288543  0.42456776 -2.6939662 ]]
Iteration 500 of 1000: loss=6.73 " + "l1=0.0107" + "l2=6.72 f=-0.368 shape=(1, 9000, 1)
logits [[ 0.40913412  0.41596296  0.4179163  -2.7163215 ]]
Iteration 600 of 1000: loss=6.52 " + "l1=0.111" + "l2=6.41 f=-0.367 shape=(1, 9000, 1)
logits [[ 0.41549087  0.40128922  0.4214562  -2.7049901 ]]
Iteration 700 of 1000: loss=6.27 " + "l1=0" + "l2=6.27 f=-0.369 shape=(1, 9000, 1)
logits [[ 0.37488     0.40825224  0.40557384 -2.6640658 ]]
Iteration 800 of 1000: loss=6.09 " + "l1=0" + "l2=6.09 f=-0.371 shape=(1, 9000, 1)
logits [[ 0.36986426  0.40254787  0.39701173 -2.6527739 ]]
Iteration 900 of 1000: loss=5.93 " + "l1=0.0137" + "l2=5.92 f=-0.373 shape=(1, 9000, 1)
logits [[ 0.36737445  0.39364296  0.39613256 -2.6475537 ]]
--- 274.0436282157898 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0175 " + "l1=0.0175" + "l2=0 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.974579  -2.7613957  3.2272491 -8.061484 ]]
Iteration 100 of 1000: loss=0.0173 " + "l1=0.0171" + "l2=0.000157 f=-0.654 shape=(1, 9000, 1)
logits [[ 4.9476085 -2.761138   3.2332244 -8.036565 ]]
Iteration 200 of 1000: loss=0.0172 " + "l1=0.0171" + "l2=0.000138 f=-0.654 shape=(1, 9000, 1)
logits [[ 4.9451976 -2.761391   3.234301  -8.034557 ]]
Iteration 300 of 1000: loss=0.0172 " + "l1=0.017" + "l2=0.00016 f=-0.654 shape=(1, 9000, 1)
logits [[ 4.9403386 -2.7617295  3.2357934 -8.0304575]]
Iteration 400 of 1000: loss=0.0172 " + "l1=0.017" + "l2=0.000198 f=-0.654 shape=(1, 9000, 1)
logits [[ 4.9351754 -2.7620592  3.2373085 -8.026364 ]]
Iteration 500 of 1000: loss=0.0172 " + "l1=0.0169" + "l2=0.000277 f=-0.654 shape=(1, 9000, 1)
logits [[ 4.93003   -2.7622986  3.2387242 -8.022407 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.175 " + "l1=0.175" + "l2=0 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.974579  -2.7613957  3.2272491 -8.061484 ]]
Iteration 100 of 1000: loss=0.158 " + "l1=0.146" + "l2=0.0111 f=-0.645 shape=(1, 9000, 1)
logits [[ 4.7474337 -2.7592652  3.2829406 -7.852245 ]]
Iteration 200 of 1000: loss=0.15 " + "l1=0.136" + "l2=0.014 f=-0.642 shape=(1, 9000, 1)
logits [[ 4.661729  -2.7590384  3.3066015 -7.776022 ]]
Iteration 300 of 1000: loss=0.143 " + "l1=0.126" + "l2=0.0167 f=-0.639 shape=(1, 9000, 1)
logits [[ 4.5893874 -2.7577674  3.3249323 -7.712201 ]]
Iteration 400 of 1000: loss=0.138 " + "l1=0.119" + "l2=0.0188 f=-0.637 shape=(1, 9000, 1)
logits [[ 4.5291805 -2.7549775  3.3387537 -7.659954 ]]
Iteration 500 of 1000: loss=0.134 " + "l1=0.113" + "l2=0.0205 f=-0.636 shape=(1, 9000, 1)
logits [[ 4.480849  -2.7517824  3.3498724 -7.622755 ]]
Iteration 600 of 1000: loss=0.13 " + "l1=0.108" + "l2=0.0217 f=-0.637 shape=(1, 9000, 1)
logits [[ 4.4403744 -2.7501621  3.360371  -7.596671 ]]
Iteration 700 of 1000: loss=0.126 " + "l1=0.103" + "l2=0.0228 f=-0.637 shape=(1, 9000, 1)
logits [[ 4.403292  -2.7504747  3.3699083 -7.5724344]]
Iteration 800 of 1000: loss=0.123 " + "l1=0.099" + "l2=0.0239 f=-0.638 shape=(1, 9000, 1)
logits [[ 4.3677444 -2.7508695  3.3779588 -7.5483556]]
Iteration 900 of 1000: loss=0.12 " + "l1=0.0948" + "l2=0.0249 f=-0.64 shape=(1, 9000, 1)
logits [[ 4.333848  -2.7505484  3.3855815 -7.527788 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.75 " + "l1=1.75" + "l2=0 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.974579  -2.7613957  3.2272491 -8.061484 ]]
Iteration 100 of 1000: loss=0.498 " + "l1=0.0059" + "l2=0.492 f=-0.607 shape=(1, 9000, 1)
logits [[ 3.4466677 -2.7457964  3.4407701 -6.571172 ]]
Iteration 200 of 1000: loss=0.335 " + "l1=0.00868" + "l2=0.327 f=-0.607 shape=(1, 9000, 1)
logits [[ 3.4501648 -2.7505603  3.4414802 -6.5688753]]
Iteration 300 of 1000: loss=0.264 " + "l1=0" + "l2=0.264 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.4329784 -2.7318141  3.4367077 -6.5531454]]
Iteration 400 of 1000: loss=0.234 " + "l1=0.00939" + "l2=0.224 f=-0.605 shape=(1, 9000, 1)
logits [[ 3.4441724 -2.7344038  3.4347863 -6.5661736]]
Iteration 500 of 1000: loss=0.206 " + "l1=0" + "l2=0.206 f=-0.613 shape=(1, 9000, 1)
logits [[ 3.4277859 -2.7403011  3.438207  -6.5772805]]
Iteration 600 of 1000: loss=0.191 " + "l1=0.00871" + "l2=0.182 f=-0.617 shape=(1, 9000, 1)
logits [[ 3.4474432 -2.7442923  3.4387348 -6.609281 ]]
Iteration 700 of 1000: loss=0.175 " + "l1=0" + "l2=0.175 f=-0.618 shape=(1, 9000, 1)
logits [[ 3.4319427 -2.7437868  3.437795  -6.5966187]]
Iteration 800 of 1000: loss=0.162 " + "l1=0" + "l2=0.162 f=-0.615 shape=(1, 9000, 1)
logits [[ 3.440023  -2.7484193  3.4406562 -6.593583 ]]
Iteration 900 of 1000: loss=0.159 " + "l1=0" + "l2=0.159 f=-0.617 shape=(1, 9000, 1)
logits [[ 3.428306  -2.7558193  3.446428  -6.586909 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.961 " + "l1=0.961" + "l2=0 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.974579  -2.7613957  3.2272491 -8.061484 ]]
Iteration 100 of 1000: loss=0.503 " + "l1=0.275" + "l2=0.229 f=-0.626 shape=(1, 9000, 1)
logits [[ 3.8854263 -2.7277696  3.3861008 -7.0470567]]
Iteration 200 of 1000: loss=0.346 " + "l1=0.0697" + "l2=0.276 f=-0.611 shape=(1, 9000, 1)
logits [[ 3.5684068 -2.753532   3.441727  -6.6991224]]
Iteration 300 of 1000: loss=0.25 " + "l1=0.000838" + "l2=0.249 f=-0.601 shape=(1, 9000, 1)
logits [[ 3.462754  -2.7603192  3.4612298 -6.567735 ]]
Iteration 400 of 1000: loss=0.213 " + "l1=0.000308" + "l2=0.213 f=-0.603 shape=(1, 9000, 1)
logits [[ 3.4645903 -2.7639818  3.4640296 -6.5748796]]
Iteration 500 of 1000: loss=0.191 " + "l1=0.00634" + "l2=0.185 f=-0.606 shape=(1, 9000, 1)
logits [[ 3.4806585 -2.7675922  3.4691262 -6.6054277]]
Iteration 600 of 1000: loss=0.172 " + "l1=0" + "l2=0.172 f=-0.611 shape=(1, 9000, 1)
logits [[ 3.4605112 -2.76748    3.4657915 -6.6012897]]
Iteration 700 of 1000: loss=0.158 " + "l1=0" + "l2=0.158 f=-0.614 shape=(1, 9000, 1)
logits [[ 3.4543684 -2.7683637  3.460053  -6.6035733]]
Iteration 800 of 1000: loss=0.146 " + "l1=0.000209" + "l2=0.146 f=-0.618 shape=(1, 9000, 1)
logits [[ 3.4589062 -2.767727   3.4585266 -6.6216927]]
Iteration 900 of 1000: loss=0.138 " + "l1=0.00195" + "l2=0.137 f=-0.621 shape=(1, 9000, 1)
logits [[ 3.4629612 -2.768143   3.4594238 -6.6383977]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.568 " + "l1=0.568" + "l2=0 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.974579  -2.7613957  3.2272491 -8.061484 ]]
Iteration 100 of 1000: loss=0.39 " + "l1=0.295" + "l2=0.095 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.265424  -2.735532   3.3577664 -7.420176 ]]
Iteration 200 of 1000: loss=0.33 " + "l1=0.212" + "l2=0.118 f=-0.625 shape=(1, 9000, 1)
logits [[ 4.04696   -2.7437966  3.3938358 -7.197992 ]]
Iteration 300 of 1000: loss=0.279 " + "l1=0.143" + "l2=0.137 f=-0.618 shape=(1, 9000, 1)
logits [[ 3.8748255 -2.769027   3.4362237 -7.015384 ]]
Iteration 400 of 1000: loss=0.244 " + "l1=0.0935" + "l2=0.151 f=-0.616 shape=(1, 9000, 1)
logits [[ 3.7485054 -2.7765663  3.460821  -6.8957887]]
Iteration 500 of 1000: loss=0.215 " + "l1=0.0605" + "l2=0.155 f=-0.616 shape=(1, 9000, 1)
logits [[ 3.664073  -2.7750864  3.4779236 -6.8320475]]
Iteration 600 of 1000: loss=0.193 " + "l1=0.0332" + "l2=0.16 f=-0.615 shape=(1, 9000, 1)
logits [[ 3.5805166 -2.7621534  3.4784725 -6.7567897]]
Iteration 700 of 1000: loss=0.169 " + "l1=0.00262" + "l2=0.166 f=-0.609 shape=(1, 9000, 1)
logits [[ 3.491179 -2.763515  3.483131 -6.64679 ]]
Iteration 800 of 1000: loss=0.151 " + "l1=0.0025" + "l2=0.148 f=-0.61 shape=(1, 9000, 1)
logits [[ 3.4830122 -2.762817   3.4753208 -6.6343727]]
Iteration 900 of 1000: loss=0.137 " + "l1=0.00017" + "l2=0.137 f=-0.613 shape=(1, 9000, 1)
logits [[ 3.4657001 -2.7587438  3.4651768 -6.6243677]]
--- 258.5091145038605 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.13 " + "l1=0.13" + "l2=0 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.974579  -2.7613957  3.2272491 -8.061484 ]]
Iteration 100 of 1000: loss=0.13 " + "l1=0.129" + "l2=0.000533 f=-0.648 shape=(1, 9000, 1)
logits [[ 4.9183683 -2.7423315  3.2138414 -7.9804506]]
Iteration 200 of 1000: loss=0.129 " + "l1=0.129" + "l2=0.000578 f=-0.646 shape=(1, 9000, 1)
logits [[ 4.9063773 -2.7375815  3.2113798 -7.9626694]]
Iteration 300 of 1000: loss=0.129 " + "l1=0.128" + "l2=0.000707 f=-0.643 shape=(1, 9000, 1)
logits [[ 4.89235   -2.732282   3.2081912 -7.942    ]]
Iteration 400 of 1000: loss=0.129 " + "l1=0.128" + "l2=0.000853 f=-0.641 shape=(1, 9000, 1)
logits [[ 4.87843   -2.7274616  3.2052484 -7.921983 ]]
Iteration 500 of 1000: loss=0.129 " + "l1=0.128" + "l2=0.00103 f=-0.64 shape=(1, 9000, 1)
logits [[ 4.8650036 -2.7229145  3.2026074 -7.9029994]]
Iteration 600 of 1000: loss=0.129 " + "l1=0.127" + "l2=0.00116 f=-0.638 shape=(1, 9000, 1)
logits [[ 4.8521223 -2.7185156  3.2000725 -7.884936 ]]
Iteration 700 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.00133 f=-0.636 shape=(1, 9000, 1)
logits [[ 4.8396144 -2.714349   3.19772   -7.8677473]]
Iteration 800 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.00149 f=-0.635 shape=(1, 9000, 1)
logits [[ 4.8274636 -2.710429   3.1953328 -7.8512516]]
Iteration 900 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.00171 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.815829  -2.7067537  3.1931348 -7.8354692]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.3 " + "l1=1.3" + "l2=0 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.974579  -2.7613957  3.2272491 -8.061484 ]]
Iteration 100 of 1000: loss=1.22 " + "l1=1.16" + "l2=0.0529 f=-0.585 shape=(1, 9000, 1)
logits [[ 4.385871  -2.5811656  3.102953  -7.2457943]]
Iteration 200 of 1000: loss=1.18 " + "l1=1.1" + "l2=0.0738 f=-0.548 shape=(1, 9000, 1)
logits [[ 4.155079  -2.5177588  3.0401325 -6.8708453]]
Iteration 300 of 1000: loss=1.14 " + "l1=1.04" + "l2=0.0971 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.927217  -2.4391532  2.9554157 -6.4904385]]
Iteration 400 of 1000: loss=1.11 " + "l1=1" + "l2=0.107 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.7847161 -2.391605   2.893006  -6.245171 ]]
Iteration 500 of 1000: loss=1.09 " + "l1=0.968" + "l2=0.119 f=-0.472 shape=(1, 9000, 1)
logits [[ 3.659125  -2.362607   2.8377178 -6.0216856]]
Iteration 600 of 1000: loss=1.06 " + "l1=0.93" + "l2=0.134 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.527937  -2.3461516  2.7874615 -5.770642 ]]
Iteration 700 of 1000: loss=1.05 " + "l1=0.904" + "l2=0.142 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.437946  -2.3344662  2.7566922 -5.604677 ]]
Iteration 800 of 1000: loss=1.03 " + "l1=0.885" + "l2=0.148 f=-0.424 shape=(1, 9000, 1)
logits [[ 3.3714423 -2.332377   2.740994  -5.4764705]]
Iteration 900 of 1000: loss=1.02 " + "l1=0.869" + "l2=0.153 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.3180645 -2.3308785  2.728964  -5.374937 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=13 " + "l1=13" + "l2=0 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.974579  -2.7613957  3.2272491 -8.061484 ]]
Iteration 100 of 1000: loss=7.31 " + "l1=4.86" + "l2=2.45 f=-0.249 shape=(1, 9000, 1)
logits [[ 1.921889  -1.9007168  1.9211371 -2.937538 ]]
Iteration 200 of 1000: loss=6.29 " + "l1=3.81" + "l2=2.48 f=-0.17 shape=(1, 9000, 1)
logits [[ 1.5979205 -1.6729081  1.6009098 -2.207221 ]]
Iteration 300 of 1000: loss=5.63 " + "l1=3.03" + "l2=2.6 f=-0.142 shape=(1, 9000, 1)
logits [[ 1.2484995 -1.5341568  1.3740134 -1.6550342]]
Iteration 400 of 1000: loss=5.08 " + "l1=2.4" + "l2=2.67 f=-0.138 shape=(1, 9000, 1)
logits [[ 0.95551616 -1.4786688   1.1882452  -1.2159922 ]]
Iteration 500 of 1000: loss=4.58 " + "l1=1.79" + "l2=2.79 f=-0.134 shape=(1, 9000, 1)
logits [[ 0.64835554 -1.3889222   0.9971091  -0.7939812 ]]
Iteration 600 of 1000: loss=4.19 " + "l1=1.36" + "l2=2.83 f=-0.134 shape=(1, 9000, 1)
logits [[ 0.39365283 -1.3072807   0.87099785 -0.49371684]]
Iteration 700 of 1000: loss=3.65 " + "l1=0.74" + "l2=2.91 f=-0.158 shape=(1, 9000, 1)
logits [[ 0.00219553 -1.1849501   0.64573723 -0.09453005]]
Iteration 800 of 1000: loss=3.22 " + "l1=0.338" + "l2=2.88 f=-0.16 shape=(1, 9000, 1)
logits [[-0.19008908 -1.0560522   0.4711384   0.13323846]]
Iteration 900 of 1000: loss=2.8 " + "l1=0.0597" + "l2=2.74 f=-0.157 shape=(1, 9000, 1)
logits [[-0.2856501  -0.9714787   0.34481505  0.28508288]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.17 " + "l1=7.17" + "l2=0 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.974579  -2.7613957  3.2272491 -8.061484 ]]
Iteration 100 of 1000: loss=4.86 " + "l1=3.64" + "l2=1.23 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.4522266 -2.1070123  2.3889403 -4.1618114]]
Iteration 200 of 1000: loss=4.27 " + "l1=3.17" + "l2=1.1 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.2036533 -2.0789514  2.207283  -3.5506876]]
Iteration 300 of 1000: loss=3.92 " + "l1=2.76" + "l2=1.16 f=-0.251 shape=(1, 9000, 1)
logits [[ 1.9808533 -1.9306079  1.9835308 -3.0376663]]
Iteration 400 of 1000: loss=3.62 " + "l1=2.42" + "l2=1.2 f=-0.214 shape=(1, 9000, 1)
logits [[ 1.7791134 -1.7958074  1.7845104 -2.6219366]]
Iteration 500 of 1000: loss=3.34 " + "l1=2.12" + "l2=1.22 f=-0.194 shape=(1, 9000, 1)
logits [[ 1.5756133 -1.6898246  1.594169  -2.2542448]]
Iteration 600 of 1000: loss=3.06 " + "l1=1.74" + "l2=1.32 f=-0.185 shape=(1, 9000, 1)
logits [[ 1.2397025 -1.5849848  1.3867685 -1.7796906]]
Iteration 700 of 1000: loss=2.87 " + "l1=1.52" + "l2=1.35 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.0285223 -1.5143692  1.2729218 -1.4926202]]
Iteration 800 of 1000: loss=2.65 " + "l1=1.23" + "l2=1.41 f=-0.176 shape=(1, 9000, 1)
logits [[ 0.7189935 -1.4235399  1.1230124 -1.1215714]]
Iteration 900 of 1000: loss=2.4 " + "l1=0.979" + "l2=1.42 f=-0.166 shape=(1, 9000, 1)
logits [[ 0.47330493 -1.3411983   0.99235344 -0.7873212 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=10.1 " + "l1=10.1" + "l2=0 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.974579  -2.7613957  3.2272491 -8.061484 ]]
Iteration 100 of 1000: loss=6.17 " + "l1=4.38" + "l2=1.8 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.1454835 -2.0123796  2.1385632 -3.4997442]]
Iteration 200 of 1000: loss=5.4 " + "l1=3.52" + "l2=1.88 f=-0.209 shape=(1, 9000, 1)
logits [[ 1.8356589 -1.8369515  1.8518177 -2.6871922]]
Iteration 300 of 1000: loss=4.89 " + "l1=3.08" + "l2=1.81 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.6545573 -1.7254511  1.6708076 -2.303551 ]]
Iteration 400 of 1000: loss=4.45 " + "l1=2.65" + "l2=1.8 f=-0.153 shape=(1, 9000, 1)
logits [[ 1.4338026 -1.6052392  1.489573  -1.9293225]]
Iteration 500 of 1000: loss=4.09 " + "l1=2.28" + "l2=1.81 f=-0.148 shape=(1, 9000, 1)
logits [[ 1.202501  -1.5583689  1.3527817 -1.5886891]]
Iteration 600 of 1000: loss=3.72 " + "l1=1.81" + "l2=1.9 f=-0.146 shape=(1, 9000, 1)
logits [[ 0.8586323 -1.4887305  1.1936255 -1.1461313]]
Iteration 700 of 1000: loss=3.37 " + "l1=1.39" + "l2=1.98 f=-0.138 shape=(1, 9000, 1)
logits [[ 0.5768838  -1.409602    1.0386732  -0.75842553]]
Iteration 800 of 1000: loss=2.95 " + "l1=0.851" + "l2=2.1 f=-0.142 shape=(1, 9000, 1)
logits [[ 0.17796823 -1.2498991   0.8003796  -0.29743236]]
Iteration 900 of 1000: loss=2.55 " + "l1=0.456" + "l2=2.1 f=-0.124 shape=(1, 9000, 1)
logits [[-0.05133472 -1.1309837   0.6376031   0.0488089 ]]
--- 287.4014368057251 seconds ---
Adv result:3
Loading record A00438
(1, 4492)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.101 " + "l1=0.101" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.7730927 -5.3079247  3.6451795 -5.160059 ]]
Iteration 100 of 1000: loss=0.1 " + "l1=0.1" + "l2=0.000338 f=-0.508 shape=(1, 9000, 1)
logits [[ 4.7293177 -5.27284    3.6221287 -5.1119556]]
Iteration 200 of 1000: loss=0.1 " + "l1=0.0999" + "l2=0.000375 f=-0.507 shape=(1, 9000, 1)
logits [[ 4.719768  -5.268211   3.6202269 -5.100685 ]]
Iteration 300 of 1000: loss=0.1 " + "l1=0.0997" + "l2=0.000441 f=-0.506 shape=(1, 9000, 1)
logits [[ 4.711246  -5.2636485  3.6178625 -5.0905848]]
Iteration 400 of 1000: loss=0.1 " + "l1=0.0996" + "l2=0.000524 f=-0.506 shape=(1, 9000, 1)
logits [[ 4.7044477 -5.2598453  3.6155975 -5.0823526]]
Iteration 500 of 1000: loss=0.1 " + "l1=0.0996" + "l2=0.000617 f=-0.505 shape=(1, 9000, 1)
logits [[ 4.6986184 -5.2566843  3.6136003 -5.0753164]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.01 " + "l1=1.01" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.7730927 -5.3079247  3.6451795 -5.160059 ]]
Iteration 100 of 1000: loss=0.962 " + "l1=0.932" + "l2=0.0301 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.3347754 -4.9885035  3.4371545 -4.673764 ]]
Iteration 200 of 1000: loss=0.947 " + "l1=0.904" + "l2=0.0428 f=-0.453 shape=(1, 9000, 1)
logits [[ 4.1598253 -4.882933   3.3720117 -4.461775 ]]
Iteration 300 of 1000: loss=0.933 " + "l1=0.875" + "l2=0.058 f=-0.437 shape=(1, 9000, 1)
logits [[ 3.9666083 -4.783574   3.3228457 -4.2519665]]
Iteration 400 of 1000: loss=0.92 " + "l1=0.85" + "l2=0.0701 f=-0.42 shape=(1, 9000, 1)
logits [[ 3.8062365 -4.6932125  3.2791626 -4.072243 ]]
Iteration 500 of 1000: loss=0.908 " + "l1=0.83" + "l2=0.0778 f=-0.404 shape=(1, 9000, 1)
logits [[ 3.6811295 -4.6157527  3.2394361 -3.9221067]]
Iteration 600 of 1000: loss=0.896 " + "l1=0.81" + "l2=0.0856 f=-0.39 shape=(1, 9000, 1)
logits [[ 3.567987  -4.536144   3.1884978 -3.7816246]]
Iteration 700 of 1000: loss=0.883 " + "l1=0.79" + "l2=0.0937 f=-0.379 shape=(1, 9000, 1)
logits [[ 3.4472258 -4.448043   3.122349  -3.6377306]]
Iteration 800 of 1000: loss=0.866 " + "l1=0.762" + "l2=0.104 f=-0.385 shape=(1, 9000, 1)
logits [[ 3.2870193 -4.3338785  3.0264919 -3.5190818]]
Iteration 900 of 1000: loss=0.845 " + "l1=0.733" + "l2=0.112 f=-0.383 shape=(1, 9000, 1)
logits [[ 3.0844238 -4.2434325  2.966906  -3.3385692]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.1 " + "l1=10.1" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.7730927 -5.3079247  3.6451795 -5.160059 ]]
Iteration 100 of 1000: loss=5.6 " + "l1=3.57" + "l2=2.03 f=-0.23 shape=(1, 9000, 1)
logits [[ 1.3609775 -2.198345   1.3691046 -1.4514728]]
Iteration 200 of 1000: loss=4.34 " + "l1=1.89" + "l2=2.45 f=-0.194 shape=(1, 9000, 1)
logits [[ 0.41793403 -1.4696668   0.42268288 -0.14681518]]
Iteration 300 of 1000: loss=3.71 " + "l1=1.41" + "l2=2.3 f=-0.175 shape=(1, 9000, 1)
logits [[ 0.1795251  -1.2135105   0.19531901  0.1401211 ]]
Iteration 400 of 1000: loss=3.29 " + "l1=1.19" + "l2=2.09 f=-0.183 shape=(1, 9000, 1)
logits [[ 0.10116937 -1.0666478   0.12659411  0.10655007]]
Iteration 500 of 1000: loss=3 " + "l1=0.964" + "l2=2.04 f=-0.191 shape=(1, 9000, 1)
logits [[ 0.04478936 -0.8967045   0.06698627  0.01972031]]
Iteration 600 of 1000: loss=2.83 " + "l1=0.815" + "l2=2.01 f=-0.209 shape=(1, 9000, 1)
logits [[-0.01882189 -0.80636215  0.00862752 -0.01750572]]
Iteration 700 of 1000: loss=2.7 " + "l1=0.753" + "l2=1.95 f=-0.223 shape=(1, 9000, 1)
logits [[-0.04837804 -0.76961285 -0.01680367 -0.05905205]]
Iteration 800 of 1000: loss=2.52 " + "l1=0.538" + "l2=1.98 f=-0.257 shape=(1, 9000, 1)
logits [[-0.12990077 -0.6484906  -0.13725893 -0.11047752]]
Iteration 900 of 1000: loss=2.05 " + "l1=0.0196" + "l2=2.03 f=-0.276 shape=(1, 9000, 1)
logits [[-0.29219833 -0.25744268 -0.23780991 -0.31506133]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.54 " + "l1=5.54" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.7730927 -5.3079247  3.6451795 -5.160059 ]]
Iteration 100 of 1000: loss=3.95 " + "l1=2.98" + "l2=0.976 f=-0.277 shape=(1, 9000, 1)
logits [[ 2.2339935 -3.181951   2.2179732 -2.3773377]]
Iteration 200 of 1000: loss=3.33 " + "l1=2.15" + "l2=1.17 f=-0.204 shape=(1, 9000, 1)
logits [[ 1.4869735 -2.4301531  1.45899   -1.3314279]]
Iteration 300 of 1000: loss=2.92 " + "l1=1.68" + "l2=1.24 f=-0.186 shape=(1, 9000, 1)
logits [[ 0.9604586  -2.080683    0.9727827  -0.59828657]]
Iteration 400 of 1000: loss=2.55 " + "l1=1.3" + "l2=1.26 f=-0.171 shape=(1, 9000, 1)
logits [[ 0.5538732 -1.794979   0.5600697 -0.0020441]]
Iteration 500 of 1000: loss=2.24 " + "l1=1.04" + "l2=1.21 f=-0.186 shape=(1, 9000, 1)
logits [[ 0.26367643 -1.587896    0.28321373  0.29539818]]
Iteration 600 of 1000: loss=2.12 " + "l1=0.991" + "l2=1.13 f=-0.213 shape=(1, 9000, 1)
logits [[ 0.25177944 -1.5493386   0.25167736  0.19491062]]
Iteration 700 of 1000: loss=2.05 " + "l1=0.929" + "l2=1.13 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.1642285  -1.4903113   0.1814747   0.19947016]]
Iteration 800 of 1000: loss=1.99 " + "l1=0.841" + "l2=1.15 f=-0.249 shape=(1, 9000, 1)
logits [[ 0.12518951 -1.3905537   0.13851738  0.1310657 ]]
Iteration 900 of 1000: loss=1.92 " + "l1=0.827" + "l2=1.1 f=-0.251 shape=(1, 9000, 1)
logits [[ 0.13012779 -1.3708253   0.13307318  0.10327209]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=7.81 " + "l1=7.81" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.7730927 -5.3079247  3.6451795 -5.160059 ]]
Iteration 100 of 1000: loss=4.85 " + "l1=3.31" + "l2=1.54 f=-0.244 shape=(1, 9000, 1)
logits [[ 1.6864465 -2.572564   1.6984216 -1.7891265]]
Iteration 200 of 1000: loss=3.9 " + "l1=2.03" + "l2=1.87 f=-0.209 shape=(1, 9000, 1)
logits [[ 0.79908305 -1.8123716   0.80586475 -0.6284264 ]]
Iteration 300 of 1000: loss=3.34 " + "l1=1.46" + "l2=1.88 f=-0.185 shape=(1, 9000, 1)
logits [[ 0.38132837 -1.4977746   0.38680336 -0.00961848]]
Iteration 400 of 1000: loss=2.91 " + "l1=1.19" + "l2=1.71 f=-0.187 shape=(1, 9000, 1)
logits [[ 0.20129114 -1.3384677   0.19689833  0.19371349]]
Iteration 500 of 1000: loss=2.69 " + "l1=1.13" + "l2=1.57 f=-0.194 shape=(1, 9000, 1)
logits [[ 0.14967048 -1.271129    0.18182227  0.16281205]]
Iteration 600 of 1000: loss=2.54 " + "l1=1.01" + "l2=1.53 f=-0.204 shape=(1, 9000, 1)
logits [[ 0.08761932 -1.1482251   0.15012376  0.09610093]]
Iteration 700 of 1000: loss=2.39 " + "l1=0.881" + "l2=1.51 f=-0.223 shape=(1, 9000, 1)
logits [[ 0.06210327 -1.074341    0.06197961  0.05655437]]
Iteration 800 of 1000: loss=2.32 " + "l1=0.864" + "l2=1.46 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.02643123 -1.0613695   0.0392224   0.05299482]]
Iteration 900 of 1000: loss=2.26 " + "l1=0.851" + "l2=1.41 f=-0.247 shape=(1, 9000, 1)
logits [[ 0.02933371 -1.0620526   0.03631267  0.00721639]]
--- 262.47972416877747 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0113 " + "l1=0.0113" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.7730927 -5.3079247  3.6451795 -5.160059 ]]
Iteration 100 of 1000: loss=0.011 " + "l1=0.0107" + "l2=0.000253 f=-0.513 shape=(1, 9000, 1)
logits [[ 4.7381687 -5.319004   3.6664631 -5.1358185]]
Iteration 200 of 1000: loss=0.0109 " + "l1=0.0106" + "l2=0.000261 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.7323184 -5.3193994  3.6687958 -5.1313453]]
Iteration 300 of 1000: loss=0.0109 " + "l1=0.0105" + "l2=0.00031 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.726365  -5.3201957  3.6717021 -5.127363 ]]
Iteration 400 of 1000: loss=0.0109 " + "l1=0.0105" + "l2=0.00039 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.7216134 -5.320793   3.6742227 -5.1245546]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.113 " + "l1=0.113" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.7730927 -5.3079247  3.6451795 -5.160059 ]]
Iteration 100 of 1000: loss=0.0798 " + "l1=0.0614" + "l2=0.0184 f=-0.514 shape=(1, 9000, 1)
logits [[ 4.441244  -5.3998084  3.8270323 -4.92605  ]]
Iteration 200 of 1000: loss=0.0671 " + "l1=0.0384" + "l2=0.0287 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.2919755 -5.4218154  3.9082654 -4.8255033]]
Iteration 300 of 1000: loss=0.0543 " + "l1=0.0106" + "l2=0.0437 f=-0.5 shape=(1, 9000, 1)
logits [[ 4.1625733 -5.462618   4.0564857 -4.7557797]]
Iteration 400 of 1000: loss=0.0445 " + "l1=0.00073" + "l2=0.0438 f=-0.498 shape=(1, 9000, 1)
logits [[ 4.1050205 -5.477242   4.097722  -4.716865 ]]
Iteration 500 of 1000: loss=0.0379 " + "l1=3.72e-05" + "l2=0.0379 f=-0.494 shape=(1, 9000, 1)
logits [[ 4.1083784 -5.47665    4.108006  -4.7139096]]
Iteration 600 of 1000: loss=0.0338 " + "l1=0.00116" + "l2=0.0327 f=-0.491 shape=(1, 9000, 1)
logits [[ 4.1217732 -5.474676   4.110147  -4.720106 ]]
Iteration 700 of 1000: loss=0.0304 " + "l1=0.000256" + "l2=0.0301 f=-0.488 shape=(1, 9000, 1)
logits [[ 4.120597  -5.477793   4.1180334 -4.7147255]]
Iteration 800 of 1000: loss=0.0283 " + "l1=0.00122" + "l2=0.0271 f=-0.489 shape=(1, 9000, 1)
logits [[ 4.127555  -5.479471   4.1153636 -4.7182508]]
Iteration 900 of 1000: loss=0.0257 " + "l1=0" + "l2=0.0257 f=-0.489 shape=(1, 9000, 1)
logits [[ 4.1144943 -5.4819436  4.1176877 -4.7049923]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.062 " + "l1=0.062" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.7730927 -5.3079247  3.6451795 -5.160059 ]]
Iteration 100 of 1000: loss=0.0525 " + "l1=0.0469" + "l2=0.00556 f=-0.513 shape=(1, 9000, 1)
logits [[ 4.6012564 -5.363933   3.748656  -5.039013 ]]
Iteration 200 of 1000: loss=0.0491 " + "l1=0.0405" + "l2=0.00858 f=-0.513 shape=(1, 9000, 1)
logits [[ 4.5220137 -5.377323   3.785565  -4.9842257]]
Iteration 300 of 1000: loss=0.0467 " + "l1=0.0355" + "l2=0.0113 f=-0.514 shape=(1, 9000, 1)
logits [[ 4.4626575 -5.387207   3.8177485 -4.9479227]]
Iteration 400 of 1000: loss=0.045 " + "l1=0.0319" + "l2=0.0132 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.425827  -5.3915496  3.846146  -4.9291453]]
Iteration 500 of 1000: loss=0.0436 " + "l1=0.0291" + "l2=0.0145 f=-0.511 shape=(1, 9000, 1)
logits [[ 4.394715 -5.392503  3.866323 -4.911261]]
Iteration 600 of 1000: loss=0.0416 " + "l1=0.0254" + "l2=0.0163 f=-0.506 shape=(1, 9000, 1)
logits [[ 4.363515  -5.3996344  3.9017973 -4.8898163]]
Iteration 700 of 1000: loss=0.0379 " + "l1=0.0193" + "l2=0.0186 f=-0.497 shape=(1, 9000, 1)
logits [[ 4.3238626 -5.4211574  3.9725971 -4.8619685]]
Iteration 800 of 1000: loss=0.0347 " + "l1=0.0142" + "l2=0.0206 f=-0.494 shape=(1, 9000, 1)
logits [[ 4.2804055 -5.4421244  4.022769  -4.83894  ]]
Iteration 900 of 1000: loss=0.0319 " + "l1=0.0104" + "l2=0.0216 f=-0.491 shape=(1, 9000, 1)
logits [[ 4.2452855 -5.453733   4.0568614 -4.810732 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0874 " + "l1=0.0874" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.7730927 -5.3079247  3.6451795 -5.160059 ]]
Iteration 100 of 1000: loss=0.068 " + "l1=0.0572" + "l2=0.0108 f=-0.514 shape=(1, 9000, 1)
logits [[ 4.523581 -5.380796  3.786051 -4.983104]]
Iteration 200 of 1000: loss=0.0607 " + "l1=0.0438" + "l2=0.0169 f=-0.514 shape=(1, 9000, 1)
logits [[ 4.4083962 -5.403372   3.8437448 -4.906484 ]]
Iteration 300 of 1000: loss=0.056 " + "l1=0.0337" + "l2=0.0223 f=-0.51 shape=(1, 9000, 1)
logits [[ 4.3291316 -5.4090414  3.8944612 -4.8550487]]
Iteration 400 of 1000: loss=0.0508 " + "l1=0.0229" + "l2=0.028 f=-0.502 shape=(1, 9000, 1)
logits [[ 4.25981   -5.4233108  3.964784  -4.8088894]]
Iteration 500 of 1000: loss=0.0433 " + "l1=0.00963" + "l2=0.0337 f=-0.497 shape=(1, 9000, 1)
logits [[ 4.183148  -5.458967   4.0589175 -4.7721806]]
Iteration 600 of 1000: loss=0.037 " + "l1=0.00211" + "l2=0.0349 f=-0.493 shape=(1, 9000, 1)
logits [[ 4.1286483 -5.4724174  4.1014423 -4.730002 ]]
Iteration 700 of 1000: loss=0.0326 " + "l1=0.000251" + "l2=0.0323 f=-0.489 shape=(1, 9000, 1)
logits [[ 4.1178875 -5.4753423  4.1146507 -4.71463  ]]
Iteration 800 of 1000: loss=0.0296 " + "l1=2.31e-05" + "l2=0.0296 f=-0.487 shape=(1, 9000, 1)
logits [[ 4.11842   -5.4770107  4.1181216 -4.7094684]]
Iteration 900 of 1000: loss=0.027 " + "l1=0.000274" + "l2=0.0267 f=-0.488 shape=(1, 9000, 1)
logits [[ 4.118314  -5.477723   4.114784  -4.7072167]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0747 " + "l1=0.0747" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.7730927 -5.3079247  3.6451795 -5.160059 ]]
Iteration 100 of 1000: loss=0.0606 " + "l1=0.0526" + "l2=0.008 f=-0.513 shape=(1, 9000, 1)
logits [[ 4.5612264 -5.371608   3.7671773 -5.0094304]]
Iteration 200 of 1000: loss=0.0554 " + "l1=0.0427" + "l2=0.0127 f=-0.514 shape=(1, 9000, 1)
logits [[ 4.4609003 -5.391305   3.816218  -4.9415774]]
Iteration 300 of 1000: loss=0.052 " + "l1=0.0359" + "l2=0.0161 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.398389  -5.399443   3.8565533 -4.9049125]]
Iteration 400 of 1000: loss=0.0495 " + "l1=0.0308" + "l2=0.0187 f=-0.509 shape=(1, 9000, 1)
logits [[ 4.3499985 -5.399411   3.8850448 -4.872014 ]]
Iteration 500 of 1000: loss=0.0456 " + "l1=0.0226" + "l2=0.023 f=-0.5 shape=(1, 9000, 1)
logits [[ 4.2998233 -5.4179215  3.958571  -4.841042 ]]
Iteration 600 of 1000: loss=0.0405 " + "l1=0.0143" + "l2=0.0262 f=-0.498 shape=(1, 9000, 1)
logits [[ 4.243844  -5.4474483  4.028435  -4.815139 ]]
Iteration 700 of 1000: loss=0.0356 " + "l1=0.00752" + "l2=0.0281 f=-0.493 shape=(1, 9000, 1)
logits [[ 4.1898994 -5.463417   4.07644   -4.7742167]]
Iteration 800 of 1000: loss=0.0322 " + "l1=0.00354" + "l2=0.0286 f=-0.489 shape=(1, 9000, 1)
logits [[ 4.153851  -5.4688945  4.1004868 -4.740409 ]]
Iteration 900 of 1000: loss=0.0293 " + "l1=0.000606" + "l2=0.0287 f=-0.487 shape=(1, 9000, 1)
logits [[ 4.127876  -5.478036   4.118729  -4.7159576]]
--- 253.78463315963745 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0993 " + "l1=0.0993" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.7730927 -5.3079247  3.6451795 -5.160059 ]]
Iteration 100 of 1000: loss=0.0984 " + "l1=0.0978" + "l2=0.000593 f=-0.506 shape=(1, 9000, 1)
logits [[ 4.7040462 -5.2831945  3.628844  -5.073463 ]]
Iteration 200 of 1000: loss=0.0981 " + "l1=0.0974" + "l2=0.000735 f=-0.504 shape=(1, 9000, 1)
logits [[ 4.686709  -5.278792   3.6270254 -5.0512652]]
Iteration 300 of 1000: loss=0.098 " + "l1=0.097" + "l2=0.000929 f=-0.503 shape=(1, 9000, 1)
logits [[ 4.671687 -5.274654  3.624484 -5.031588]]
Iteration 400 of 1000: loss=0.0978 " + "l1=0.0967" + "l2=0.00112 f=-0.501 shape=(1, 9000, 1)
logits [[ 4.6577296 -5.2706656  3.621302  -5.013722 ]]
Iteration 500 of 1000: loss=0.0978 " + "l1=0.0965" + "l2=0.00132 f=-0.5 shape=(1, 9000, 1)
logits [[ 4.6471887 -5.267261   3.6182399 -4.9999733]]
Iteration 600 of 1000: loss=0.0977 " + "l1=0.0963" + "l2=0.00143 f=-0.5 shape=(1, 9000, 1)
logits [[ 4.6377683 -5.2640224  3.6154025 -4.9882755]]
Iteration 700 of 1000: loss=0.0977 " + "l1=0.0961" + "l2=0.0016 f=-0.499 shape=(1, 9000, 1)
logits [[ 4.629325  -5.261143   3.6126187 -4.9778666]]
Iteration 800 of 1000: loss=0.0977 " + "l1=0.0959" + "l2=0.00183 f=-0.499 shape=(1, 9000, 1)
logits [[ 4.6218686 -5.2582836  3.6099865 -4.968565 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.993 " + "l1=0.993" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.7730927 -5.3079247  3.6451795 -5.160059 ]]
Iteration 100 of 1000: loss=0.887 " + "l1=0.825" + "l2=0.0614 f=-0.449 shape=(1, 9000, 1)
logits [[ 4.0138016 -5.0534453  3.481624  -4.2396393]]
Iteration 200 of 1000: loss=0.835 " + "l1=0.735" + "l2=0.0997 f=-0.418 shape=(1, 9000, 1)
logits [[ 3.6036322 -4.950244   3.4231527 -3.7468104]]
Iteration 300 of 1000: loss=0.792 " + "l1=0.665" + "l2=0.127 f=-0.382 shape=(1, 9000, 1)
logits [[ 3.3185012 -4.832697   3.316673  -3.3289804]]
Iteration 400 of 1000: loss=0.759 " + "l1=0.621" + "l2=0.138 f=-0.351 shape=(1, 9000, 1)
logits [[ 3.1790676 -4.723482   3.1745589 -3.0331066]]
Iteration 500 of 1000: loss=0.719 " + "l1=0.572" + "l2=0.147 f=-0.333 shape=(1, 9000, 1)
logits [[ 3.0059614 -4.6223993  3.0016642 -2.7181418]]
Iteration 600 of 1000: loss=0.661 " + "l1=0.499" + "l2=0.162 f=-0.332 shape=(1, 9000, 1)
logits [[ 2.7081318 -4.4778743  2.7175808 -2.275531 ]]
Iteration 700 of 1000: loss=0.622 " + "l1=0.448" + "l2=0.174 f=-0.33 shape=(1, 9000, 1)
logits [[ 2.5030005 -4.3618593  2.506888  -1.9698393]]
Iteration 800 of 1000: loss=0.589 " + "l1=0.405" + "l2=0.184 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.3447838 -4.2825785  2.3481405 -1.7037858]]
Iteration 900 of 1000: loss=0.559 " + "l1=0.37" + "l2=0.189 f=-0.316 shape=(1, 9000, 1)
logits [[ 2.2068114 -4.2194796  2.2223704 -1.4739417]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.93 " + "l1=9.93" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.7730927 -5.3079247  3.6451795 -5.160059 ]]
Iteration 100 of 1000: loss=3.73 " + "l1=1.08" + "l2=2.65 f=-0.137 shape=(1, 9000, 1)
logits [[ 1.179303   -3.072231    1.2143167   0.12999964]]
Iteration 200 of 1000: loss=1.98 " + "l1=0" + "l2=1.98 f=-0.0908 shape=(1, 9000, 1)
logits [[ 0.7864403  -2.7961307   0.8206201   0.82576853]]
Iteration 300 of 1000: loss=1.58 " + "l1=0" + "l2=1.58 f=-0.086 shape=(1, 9000, 1)
logits [[ 0.7912648 -2.8198996  0.8303686  0.8543682]]
Iteration 400 of 1000: loss=1.35 " + "l1=0.0082" + "l2=1.35 f=-0.105 shape=(1, 9000, 1)
logits [[ 0.8005136  -2.8841734   0.8357236   0.82752776]]
Iteration 500 of 1000: loss=1.19 " + "l1=0.00367" + "l2=1.18 f=-0.116 shape=(1, 9000, 1)
logits [[ 0.81715804 -2.9249313   0.82321185  0.81954104]]
Iteration 600 of 1000: loss=1.07 " + "l1=0" + "l2=1.07 f=-0.123 shape=(1, 9000, 1)
logits [[ 0.8195621  -2.9650948   0.8242744   0.82743573]]
Iteration 700 of 1000: loss=0.986 " + "l1=0" + "l2=0.986 f=-0.126 shape=(1, 9000, 1)
logits [[ 0.80159426 -2.98899     0.8255821   0.8561515 ]]
Iteration 800 of 1000: loss=0.9 " + "l1=0.00294" + "l2=0.897 f=-0.128 shape=(1, 9000, 1)
logits [[ 0.7926562  -3.0321417   0.86499685  0.8620574 ]]
Iteration 900 of 1000: loss=0.823 " + "l1=0" + "l2=0.823 f=-0.132 shape=(1, 9000, 1)
logits [[ 0.8130704 -3.058051   0.8571114  0.8579543]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.46 " + "l1=5.46" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.7730927 -5.3079247  3.6451795 -5.160059 ]]
Iteration 100 of 1000: loss=3.03 " + "l1=1.99" + "l2=1.04 f=-0.186 shape=(1, 9000, 1)
logits [[ 2.2112265 -3.7947195  2.2316735 -1.3940779]]
Iteration 200 of 1000: loss=1.87 " + "l1=0.282" + "l2=1.59 f=-0.0563 shape=(1, 9000, 1)
logits [[ 0.9784773 -2.9502807  1.1296426  0.6171475]]
Iteration 300 of 1000: loss=1.25 " + "l1=0.0216" + "l2=1.23 f=-0.0913 shape=(1, 9000, 1)
logits [[ 0.8049353 -2.9228165  0.8960474  0.8567814]]
Iteration 400 of 1000: loss=0.996 " + "l1=0" + "l2=0.996 f=-0.111 shape=(1, 9000, 1)
logits [[ 0.76780754 -2.945441    0.84771514  0.88498324]]
Iteration 500 of 1000: loss=0.823 " + "l1=0" + "l2=0.823 f=-0.125 shape=(1, 9000, 1)
logits [[ 0.75727075 -2.9753559   0.8514522   0.86692435]]
Iteration 600 of 1000: loss=0.707 " + "l1=0.00402" + "l2=0.703 f=-0.146 shape=(1, 9000, 1)
logits [[ 0.73969287 -3.0354033   0.8595029   0.8522004 ]]
Iteration 700 of 1000: loss=0.634 " + "l1=0.0136" + "l2=0.62 f=-0.157 shape=(1, 9000, 1)
logits [[ 0.74083644 -3.0881274   0.87136865  0.84658474]]
Iteration 800 of 1000: loss=0.568 " + "l1=0" + "l2=0.568 f=-0.165 shape=(1, 9000, 1)
logits [[ 0.72247493 -3.117145    0.86567205  0.8704988 ]]
Iteration 900 of 1000: loss=0.525 " + "l1=0.0033" + "l2=0.522 f=-0.172 shape=(1, 9000, 1)
logits [[ 0.7077948 -3.1468673  0.87832    0.8723187]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.23 " + "l1=3.23" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.7730927 -5.3079247  3.6451795 -5.160059 ]]
Iteration 100 of 1000: loss=2.21 " + "l1=1.75" + "l2=0.454 f=-0.291 shape=(1, 9000, 1)
logits [[ 2.8739154 -4.3839483  2.869496  -2.524357 ]]
Iteration 200 of 1000: loss=1.74 " + "l1=1.1" + "l2=0.647 f=-0.146 shape=(1, 9000, 1)
logits [[ 2.1804767 -3.815876   2.2132082 -1.1603734]]
Iteration 300 of 1000: loss=1.37 " + "l1=0.554" + "l2=0.819 f=-0.0797 shape=(1, 9000, 1)
logits [[ 1.5016998  -3.4055867   1.6450878  -0.05997091]]
Iteration 400 of 1000: loss=0.937 " + "l1=0.0155" + "l2=0.921 f=-0.073 shape=(1, 9000, 1)
logits [[ 0.7168461 -3.0073645  1.0231272  0.9754824]]
Iteration 500 of 1000: loss=0.683 " + "l1=0.00708" + "l2=0.676 f=-0.118 shape=(1, 9000, 1)
logits [[ 0.6581648 -3.0840726  0.9882332  0.9664525]]
Iteration 600 of 1000: loss=0.549 " + "l1=0.00126" + "l2=0.548 f=-0.146 shape=(1, 9000, 1)
logits [[ 0.63149625 -3.1469183   0.9679194   0.9640504 ]]
Iteration 700 of 1000: loss=0.482 " + "l1=0.00408" + "l2=0.478 f=-0.167 shape=(1, 9000, 1)
logits [[ 0.5885315  -3.20072     0.97801757  0.96545535]]
Iteration 800 of 1000: loss=0.43 " + "l1=0" + "l2=0.43 f=-0.186 shape=(1, 9000, 1)
logits [[ 0.5454632  -3.2449062   0.9759512   0.97821295]]
Iteration 900 of 1000: loss=0.393 " + "l1=0" + "l2=0.393 f=-0.208 shape=(1, 9000, 1)
logits [[ 0.51673543 -3.2859824   0.960648    0.9782317 ]]
--- 278.39457058906555 seconds ---
Adv result:3
Loading record A00439
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0707 " + "l1=0.0707" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.3603454 -2.713896   2.7911756 -6.367142 ]]
Iteration 100 of 1000: loss=0.0703 " + "l1=0.0699" + "l2=0.00035 f=-0.48 shape=(1, 9000, 1)
logits [[ 4.310742  -2.6825185  2.7663753 -6.3153324]]
Iteration 200 of 1000: loss=0.0702 " + "l1=0.0698" + "l2=0.000328 f=-0.48 shape=(1, 9000, 1)
logits [[ 4.304696  -2.6786606  2.763645  -6.3093376]]
Iteration 300 of 1000: loss=0.0701 " + "l1=0.0697" + "l2=0.000382 f=-0.479 shape=(1, 9000, 1)
logits [[ 4.29557   -2.6730149  2.7596388 -6.300012 ]]
Iteration 400 of 1000: loss=0.07 " + "l1=0.0695" + "l2=0.00048 f=-0.479 shape=(1, 9000, 1)
logits [[ 4.2855644 -2.6670418  2.7556012 -6.289788 ]]
Iteration 500 of 1000: loss=0.0699 " + "l1=0.0694" + "l2=0.000577 f=-0.478 shape=(1, 9000, 1)
logits [[ 4.275697  -2.6612906  2.751888  -6.279805 ]]
Iteration 600 of 1000: loss=0.0699 " + "l1=0.0692" + "l2=0.000639 f=-0.478 shape=(1, 9000, 1)
logits [[ 4.2663307 -2.6556807  2.7484336 -6.2705464]]
Iteration 700 of 1000: loss=0.0699 " + "l1=0.0691" + "l2=0.000781 f=-0.477 shape=(1, 9000, 1)
logits [[ 4.25704   -2.6507661  2.7455137 -6.261458 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.707 " + "l1=0.707" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.3603454 -2.713896   2.7911756 -6.367142 ]]
Iteration 100 of 1000: loss=0.666 " + "l1=0.644" + "l2=0.0219 f=-0.46 shape=(1, 9000, 1)
logits [[ 3.9890604 -2.4487486  2.581709  -5.960843 ]]
Iteration 200 of 1000: loss=0.648 " + "l1=0.617" + "l2=0.0312 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.8442225 -2.3284373  2.487492  -5.8039827]]
Iteration 300 of 1000: loss=0.634 " + "l1=0.593" + "l2=0.0403 f=-0.444 shape=(1, 9000, 1)
logits [[ 3.7061808 -2.2275674  2.403201  -5.6569867]]
Iteration 400 of 1000: loss=0.62 " + "l1=0.573" + "l2=0.0472 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.5794826 -2.1519628  2.3408997 -5.529654 ]]
Iteration 500 of 1000: loss=0.606 " + "l1=0.55" + "l2=0.0556 f=-0.438 shape=(1, 9000, 1)
logits [[ 3.4223301 -2.078944   2.279639  -5.3747253]]
Iteration 600 of 1000: loss=0.592 " + "l1=0.531" + "l2=0.0612 f=-0.438 shape=(1, 9000, 1)
logits [[ 3.2904792 -2.0178165  2.231775  -5.2566323]]
Iteration 700 of 1000: loss=0.578 " + "l1=0.512" + "l2=0.0668 f=-0.439 shape=(1, 9000, 1)
logits [[ 3.1556537 -1.9599721  2.1883624 -5.1380825]]
Iteration 800 of 1000: loss=0.564 " + "l1=0.491" + "l2=0.0727 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.010463  -1.903021   2.1418295 -5.010325 ]]
Iteration 900 of 1000: loss=0.548 " + "l1=0.469" + "l2=0.0793 f=-0.441 shape=(1, 9000, 1)
logits [[ 2.8501024 -1.8414056  2.0920064 -4.8632307]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.07 " + "l1=7.07" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.3603454 -2.713896   2.7911756 -6.367142 ]]
Iteration 100 of 1000: loss=3.25 " + "l1=1.39" + "l2=1.86 f=-0.352 shape=(1, 9000, 1)
logits [[ 0.8767664  -0.5145943   0.73645973 -2.5059044 ]]
Iteration 200 of 1000: loss=1.65 " + "l1=0.00628" + "l2=1.64 f=-0.381 shape=(1, 9000, 1)
logits [[ 0.16885215  0.16334753  0.16962282 -2.0252538 ]]
Iteration 300 of 1000: loss=1.23 " + "l1=0.00552" + "l2=1.23 f=-0.413 shape=(1, 9000, 1)
logits [[ 0.15240319  0.16220044  0.16772391 -2.1337874 ]]
Iteration 400 of 1000: loss=1.02 " + "l1=0" + "l2=1.02 f=-0.436 shape=(1, 9000, 1)
logits [[ 0.1317897   0.15624367  0.13929282 -2.1720872 ]]
Iteration 500 of 1000: loss=0.892 " + "l1=0.0137" + "l2=0.878 f=-0.45 shape=(1, 9000, 1)
logits [[ 0.12829    0.1174151  0.1311637 -2.1762507]]
Iteration 600 of 1000: loss=0.823 " + "l1=0" + "l2=0.823 f=-0.452 shape=(1, 9000, 1)
logits [[ 0.06888172  0.12563938  0.08797325 -2.0918376 ]]
Iteration 700 of 1000: loss=0.752 " + "l1=0" + "l2=0.752 f=-0.45 shape=(1, 9000, 1)
logits [[ 0.08767051  0.09589756  0.08891734 -2.0737875 ]]
Iteration 800 of 1000: loss=0.713 " + "l1=0" + "l2=0.713 f=-0.447 shape=(1, 9000, 1)
logits [[ 0.07328088  0.09558822  0.07571498 -2.032162  ]]
Iteration 900 of 1000: loss=0.667 " + "l1=0" + "l2=0.667 f=-0.444 shape=(1, 9000, 1)
logits [[ 0.06985649  0.08112945  0.08017431 -2.0065217 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.89 " + "l1=3.89" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.3603454 -2.713896   2.7911756 -6.367142 ]]
Iteration 100 of 1000: loss=2.59 " + "l1=1.94" + "l2=0.653 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.2483268 -1.2706798  1.5187327 -4.045582 ]]
Iteration 200 of 1000: loss=1.85 " + "l1=0.897" + "l2=0.953 f=-0.39 shape=(1, 9000, 1)
logits [[ 1.025086   -0.60663176  0.7849018  -2.7644725 ]]
Iteration 300 of 1000: loss=1.25 " + "l1=0.213" + "l2=1.04 f=-0.391 shape=(1, 9000, 1)
logits [[ 0.2804992  -0.10430191  0.2826634  -2.0224311 ]]
Iteration 400 of 1000: loss=0.905 " + "l1=0" + "l2=0.905 f=-0.415 shape=(1, 9000, 1)
logits [[ 0.06594507  0.08450006  0.07698085 -1.888548  ]]
Iteration 500 of 1000: loss=0.777 " + "l1=0.014" + "l2=0.763 f=-0.428 shape=(1, 9000, 1)
logits [[ 0.08486696  0.0594674   0.07677561 -1.9315183 ]]
Iteration 600 of 1000: loss=0.71 " + "l1=0.00908" + "l2=0.701 f=-0.431 shape=(1, 9000, 1)
logits [[ 0.06333631  0.04681945  0.06288074 -1.8981216 ]]
Iteration 700 of 1000: loss=0.667 " + "l1=0.0006" + "l2=0.666 f=-0.438 shape=(1, 9000, 1)
logits [[ 0.03805977  0.0369696   0.03271117 -1.8603636 ]]
Iteration 800 of 1000: loss=0.636 " + "l1=0" + "l2=0.636 f=-0.444 shape=(1, 9000, 1)
logits [[ 0.01023119  0.02553211  0.01974172 -1.8318973 ]]
Iteration 900 of 1000: loss=0.609 " + "l1=0" + "l2=0.609 f=-0.447 shape=(1, 9000, 1)
logits [[ 0.00991252  0.0187398   0.01097458 -1.825736  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.3 " + "l1=2.3" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.3603454 -2.713896   2.7911756 -6.367142 ]]
Iteration 100 of 1000: loss=1.85 " + "l1=1.61" + "l2=0.237 f=-0.42 shape=(1, 9000, 1)
logits [[ 3.143407  -1.8249328  2.0559998 -5.054431 ]]
Iteration 200 of 1000: loss=1.59 " + "l1=1.23" + "l2=0.364 f=-0.406 shape=(1, 9000, 1)
logits [[ 2.381393  -1.4016068  1.6356211 -4.2407303]]
Iteration 300 of 1000: loss=1.38 " + "l1=0.91" + "l2=0.468 f=-0.412 shape=(1, 9000, 1)
logits [[ 1.687355  -1.1121997  1.2988875 -3.5223408]]
Iteration 400 of 1000: loss=1.15 " + "l1=0.592" + "l2=0.556 f=-0.426 shape=(1, 9000, 1)
logits [[ 1.0565639 -0.7643233  0.8918299 -2.888622 ]]
Iteration 500 of 1000: loss=0.921 " + "l1=0.3" + "l2=0.621 f=-0.428 shape=(1, 9000, 1)
logits [[ 0.501803   -0.41982234  0.50295097 -2.295556  ]]
Iteration 600 of 1000: loss=0.777 " + "l1=0.154" + "l2=0.623 f=-0.445 shape=(1, 9000, 1)
logits [[ 0.26551053 -0.20684381  0.26826528 -2.1079423 ]]
Iteration 700 of 1000: loss=0.682 " + "l1=0.0771" + "l2=0.605 f=-0.464 shape=(1, 9000, 1)
logits [[ 0.1394293  -0.09502213  0.1423368  -2.041391  ]]
Iteration 800 of 1000: loss=0.625 " + "l1=0.034" + "l2=0.591 f=-0.475 shape=(1, 9000, 1)
logits [[ 0.06226094 -0.03767342  0.06683373 -1.9931991 ]]
Iteration 900 of 1000: loss=0.58 " + "l1=0.00505" + "l2=0.575 f=-0.475 shape=(1, 9000, 1)
logits [[ 0.01714901  0.00491184  0.02045725 -1.9410584 ]]
--- 272.2471661567688 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0157 " + "l1=0.0157" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.3603454 -2.713896   2.7911756 -6.367142 ]]
Iteration 100 of 1000: loss=0.0155 " + "l1=0.0153" + "l2=0.000212 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.3240156 -2.7230046  2.7977188 -6.33573  ]]
Iteration 200 of 1000: loss=0.0154 " + "l1=0.0152" + "l2=0.000167 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.3219066 -2.7226255  2.797639  -6.3336544]]
Iteration 300 of 1000: loss=0.0154 " + "l1=0.0152" + "l2=0.000193 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.316538  -2.7231762  2.7983627 -6.328811 ]]
Iteration 400 of 1000: loss=0.0153 " + "l1=0.0151" + "l2=0.00023 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.310177  -2.7239823  2.7993407 -6.323176 ]]
Iteration 500 of 1000: loss=0.0153 " + "l1=0.015" + "l2=0.000288 f=-0.485 shape=(1, 9000, 1)
logits [[ 4.3033667 -2.7248044  2.8003747 -6.3172016]]
Iteration 600 of 1000: loss=0.0153 " + "l1=0.015" + "l2=0.000392 f=-0.485 shape=(1, 9000, 1)
logits [[ 4.2964225 -2.7255623  2.8014016 -6.311165 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.157 " + "l1=0.157" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.3603454 -2.713896   2.7911756 -6.367142 ]]
Iteration 100 of 1000: loss=0.139 " + "l1=0.131" + "l2=0.00821 f=-0.49 shape=(1, 9000, 1)
logits [[ 4.1348495 -2.7550216  2.823224  -6.1620555]]
Iteration 200 of 1000: loss=0.132 " + "l1=0.12" + "l2=0.0113 f=-0.49 shape=(1, 9000, 1)
logits [[ 4.0395293 -2.7679663  2.8368974 -6.0698423]]
Iteration 300 of 1000: loss=0.124 " + "l1=0.111" + "l2=0.0135 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.9615524 -2.7827063  2.8516674 -5.9957085]]
Iteration 400 of 1000: loss=0.117 " + "l1=0.1" + "l2=0.0165 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.8666263 -2.7947414  2.864573  -5.902636 ]]
Iteration 500 of 1000: loss=0.108 " + "l1=0.089" + "l2=0.0192 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.7675087 -2.8042686  2.8770092 -5.8041887]]
Iteration 600 of 1000: loss=0.099 " + "l1=0.0769" + "l2=0.022 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.6615174 -2.8171284  2.8923466 -5.6988096]]
Iteration 700 of 1000: loss=0.0893 " + "l1=0.0648" + "l2=0.0245 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.5587149 -2.833733   2.9109797 -5.5940194]]
Iteration 800 of 1000: loss=0.081 " + "l1=0.0547" + "l2=0.0263 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.4766722 -2.8529563  2.929311  -5.513027 ]]
Iteration 900 of 1000: loss=0.0731 " + "l1=0.0453" + "l2=0.0278 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.397367  -2.8715224  2.944115  -5.434162 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.57 " + "l1=1.57" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.3603454 -2.713896   2.7911756 -6.367142 ]]
Iteration 100 of 1000: loss=0.31 " + "l1=0" + "l2=0.31 f=-0.511 shape=(1, 9000, 1)
logits [[ 2.9604726 -2.9390678  2.9650955 -5.029598 ]]
Iteration 200 of 1000: loss=0.179 " + "l1=0" + "l2=0.179 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.9535832 -2.9413078  2.9602234 -5.0066137]]
Iteration 300 of 1000: loss=0.124 " + "l1=0" + "l2=0.124 f=-0.511 shape=(1, 9000, 1)
logits [[ 2.9436924 -2.957731   2.960634  -4.990187 ]]
Iteration 400 of 1000: loss=0.0909 " + "l1=0" + "l2=0.0909 f=-0.51 shape=(1, 9000, 1)
logits [[ 2.9458194 -2.9528244  2.9537637 -4.9862595]]
Iteration 500 of 1000: loss=0.0731 " + "l1=0" + "l2=0.0731 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.9393444 -2.9429624  2.94803   -4.97949  ]]
Iteration 600 of 1000: loss=0.0617 " + "l1=0" + "l2=0.0617 f=-0.507 shape=(1, 9000, 1)
logits [[ 2.929759  -2.9278386  2.9438133 -4.972542 ]]
Iteration 700 of 1000: loss=0.0534 " + "l1=0" + "l2=0.0534 f=-0.504 shape=(1, 9000, 1)
logits [[ 2.9269967 -2.9141033  2.9402096 -4.9700327]]
Iteration 800 of 1000: loss=0.0473 " + "l1=0" + "l2=0.0473 f=-0.503 shape=(1, 9000, 1)
logits [[ 2.923654  -2.9082985  2.9405942 -4.9691133]]
Iteration 900 of 1000: loss=0.0427 " + "l1=0" + "l2=0.0427 f=-0.503 shape=(1, 9000, 1)
logits [[ 2.9242065 -2.9011471  2.9407141 -4.9740624]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.863 " + "l1=0.863" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.3603454 -2.713896   2.7911756 -6.367142 ]]
Iteration 100 of 1000: loss=0.382 " + "l1=0.175" + "l2=0.206 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.2338033 -2.858391   2.9148648 -5.3121095]]
Iteration 200 of 1000: loss=0.175 " + "l1=0" + "l2=0.175 f=-0.501 shape=(1, 9000, 1)
logits [[ 2.9210196 -2.8960917  2.9228148 -4.949853 ]]
Iteration 300 of 1000: loss=0.11 " + "l1=0.00139" + "l2=0.109 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.925697  -2.8956883  2.9231699 -4.9456425]]
Iteration 400 of 1000: loss=0.0802 " + "l1=0" + "l2=0.0802 f=-0.496 shape=(1, 9000, 1)
logits [[ 2.9231699 -2.8926713  2.9236822 -4.936478 ]]
Iteration 500 of 1000: loss=0.0644 " + "l1=0.001" + "l2=0.0634 f=-0.494 shape=(1, 9000, 1)
logits [[ 2.9280617 -2.8891912  2.9262385 -4.939347 ]]
Iteration 600 of 1000: loss=0.0557 " + "l1=0" + "l2=0.0557 f=-0.493 shape=(1, 9000, 1)
logits [[ 2.9095774 -2.8893573  2.9319627 -4.922959 ]]
Iteration 700 of 1000: loss=0.0462 " + "l1=0" + "l2=0.0462 f=-0.491 shape=(1, 9000, 1)
logits [[ 2.933798  -2.883193   2.9346342 -4.9503016]]
Iteration 800 of 1000: loss=0.0415 " + "l1=0" + "l2=0.0415 f=-0.491 shape=(1, 9000, 1)
logits [[ 2.9346342 -2.8816988  2.9389267 -4.957092 ]]
Iteration 900 of 1000: loss=0.0377 " + "l1=0" + "l2=0.0377 f=-0.491 shape=(1, 9000, 1)
logits [[ 2.9381187 -2.879626   2.9427752 -4.966083 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.51 " + "l1=0.51" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.3603454 -2.713896   2.7911756 -6.367142 ]]
Iteration 100 of 1000: loss=0.336 " + "l1=0.262" + "l2=0.0746 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.6803634 -2.8214083  2.8757367 -5.7378364]]
Iteration 200 of 1000: loss=0.233 " + "l1=0.121" + "l2=0.113 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.2871444 -2.8711257  2.9162486 -5.3349576]]
Iteration 300 of 1000: loss=0.138 " + "l1=0.000944" + "l2=0.137 f=-0.497 shape=(1, 9000, 1)
logits [[ 2.9237976 -2.8919318  2.920892  -4.940764 ]]
Iteration 400 of 1000: loss=0.0891 " + "l1=0.00166" + "l2=0.0874 f=-0.491 shape=(1, 9000, 1)
logits [[ 2.9269464 -2.8890588  2.9218485 -4.9240026]]
Iteration 500 of 1000: loss=0.0676 " + "l1=0.00124" + "l2=0.0664 f=-0.489 shape=(1, 9000, 1)
logits [[ 2.9336631 -2.8925436  2.929857  -4.9287176]]
Iteration 600 of 1000: loss=0.0549 " + "l1=0" + "l2=0.0549 f=-0.489 shape=(1, 9000, 1)
logits [[ 2.9323711 -2.8945937  2.9369261 -4.929921 ]]
Iteration 700 of 1000: loss=0.0467 " + "l1=0" + "l2=0.0467 f=-0.489 shape=(1, 9000, 1)
logits [[ 2.938251  -2.8918898  2.9414566 -4.9419127]]
Iteration 800 of 1000: loss=0.0415 " + "l1=0" + "l2=0.0415 f=-0.488 shape=(1, 9000, 1)
logits [[ 2.9381664 -2.8882658  2.9445872 -4.948367 ]]
Iteration 900 of 1000: loss=0.0373 " + "l1=0" + "l2=0.0373 f=-0.488 shape=(1, 9000, 1)
logits [[ 2.9424796 -2.8821802  2.946033  -4.9601355]]
--- 268.04661560058594 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.107 " + "l1=0.107" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.3603454 -2.713896   2.7911756 -6.367142 ]]
Iteration 100 of 1000: loss=0.106 " + "l1=0.106" + "l2=0.000648 f=-0.479 shape=(1, 9000, 1)
logits [[ 4.285862  -2.6976671  2.769149  -6.2752247]]
Iteration 200 of 1000: loss=0.106 " + "l1=0.105" + "l2=0.000691 f=-0.479 shape=(1, 9000, 1)
logits [[ 4.2708216 -2.6948206  2.7656088 -6.2574415]]
Iteration 300 of 1000: loss=0.106 " + "l1=0.105" + "l2=0.000839 f=-0.478 shape=(1, 9000, 1)
logits [[ 4.252979  -2.6910295  2.7613745 -6.235486 ]]
Iteration 400 of 1000: loss=0.105 " + "l1=0.104" + "l2=0.000997 f=-0.477 shape=(1, 9000, 1)
logits [[ 4.234816  -2.6874604  2.757478  -6.2130404]]
Iteration 500 of 1000: loss=0.105 " + "l1=0.104" + "l2=0.00115 f=-0.476 shape=(1, 9000, 1)
logits [[ 4.2172318 -2.6841712  2.7540379 -6.191454 ]]
Iteration 600 of 1000: loss=0.105 " + "l1=0.104" + "l2=0.00141 f=-0.475 shape=(1, 9000, 1)
logits [[ 4.2005825 -2.681164   2.7512174 -6.1710057]]
Iteration 700 of 1000: loss=0.105 " + "l1=0.103" + "l2=0.0015 f=-0.474 shape=(1, 9000, 1)
logits [[ 4.1839485 -2.6784005  2.74882   -6.1509314]]
Iteration 800 of 1000: loss=0.105 " + "l1=0.103" + "l2=0.00167 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.167341  -2.6756635  2.7466347 -6.131211 ]]
Iteration 900 of 1000: loss=0.105 " + "l1=0.103" + "l2=0.00192 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.1515226 -2.672991   2.7448716 -6.112368 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.07 " + "l1=1.07" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.3603454 -2.713896   2.7911756 -6.367142 ]]
Iteration 100 of 1000: loss=0.981 " + "l1=0.937" + "l2=0.0437 f=-0.451 shape=(1, 9000, 1)
logits [[ 3.7615306 -2.5589619  2.6001806 -5.60837  ]]
Iteration 200 of 1000: loss=0.932 " + "l1=0.865" + "l2=0.0667 f=-0.434 shape=(1, 9000, 1)
logits [[ 3.4469678 -2.4946957  2.516217  -5.2027507]]
Iteration 300 of 1000: loss=0.885 " + "l1=0.796" + "l2=0.0889 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.1381364 -2.4454236  2.4373488 -4.817846 ]]
Iteration 400 of 1000: loss=0.836 " + "l1=0.724" + "l2=0.111 f=-0.414 shape=(1, 9000, 1)
logits [[ 2.8201187 -2.3986945  2.3471231 -4.4229074]]
Iteration 500 of 1000: loss=0.792 " + "l1=0.667" + "l2=0.125 f=-0.409 shape=(1, 9000, 1)
logits [[ 2.5579212 -2.3533192  2.2686327 -4.1085815]]
Iteration 600 of 1000: loss=0.753 " + "l1=0.62" + "l2=0.133 f=-0.407 shape=(1, 9000, 1)
logits [[ 2.3448973 -2.3138292  2.1924148 -3.851948 ]]
Iteration 700 of 1000: loss=0.717 " + "l1=0.579" + "l2=0.138 f=-0.405 shape=(1, 9000, 1)
logits [[ 2.1658401 -2.2951853  2.1296964 -3.6211388]]
Iteration 800 of 1000: loss=0.68 " + "l1=0.542" + "l2=0.138 f=-0.4 shape=(1, 9000, 1)
logits [[ 2.0247896 -2.2505221  2.0239289 -3.398836 ]]
Iteration 900 of 1000: loss=0.643 " + "l1=0.5" + "l2=0.143 f=-0.395 shape=(1, 9000, 1)
logits [[ 1.8593495 -2.1631484  1.8595484 -3.1372252]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.7 " + "l1=10.7" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.3603454 -2.713896   2.7911756 -6.367142 ]]
Iteration 100 of 1000: loss=3.8 " + "l1=0.811" + "l2=2.99 f=-0.229 shape=(1, 9000, 1)
logits [[ 0.22586814 -0.79807085  0.23300837 -0.5775436 ]]
Iteration 200 of 1000: loss=2.15 " + "l1=0" + "l2=2.15 f=-0.217 shape=(1, 9000, 1)
logits [[-0.07018363 -0.6700803  -0.06998058 -0.05836899]]
Iteration 300 of 1000: loss=1.67 " + "l1=0" + "l2=1.67 f=-0.234 shape=(1, 9000, 1)
logits [[-0.07649843 -0.7250191  -0.06970751 -0.06536712]]
Iteration 400 of 1000: loss=1.41 " + "l1=0.0046" + "l2=1.41 f=-0.236 shape=(1, 9000, 1)
logits [[-0.05374239 -0.77404994 -0.05971855 -0.05834037]]
Iteration 500 of 1000: loss=1.25 " + "l1=0" + "l2=1.25 f=-0.239 shape=(1, 9000, 1)
logits [[-0.0826711  -0.8003312  -0.07540158  0.00089657]]
Iteration 600 of 1000: loss=1.09 " + "l1=0.00646" + "l2=1.08 f=-0.243 shape=(1, 9000, 1)
logits [[-0.04630197 -0.8630741  -0.02836649 -0.03482315]]
Iteration 700 of 1000: loss=0.975 " + "l1=0" + "l2=0.975 f=-0.235 shape=(1, 9000, 1)
logits [[-0.01556755 -0.914318   -0.01136053  0.00113147]]
Iteration 800 of 1000: loss=0.892 " + "l1=0" + "l2=0.892 f=-0.227 shape=(1, 9000, 1)
logits [[ 0.01542716 -0.9837992   0.01863091  0.04029312]]
Iteration 900 of 1000: loss=0.844 " + "l1=0" + "l2=0.844 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.01385106 -0.996358    0.01682943  0.08468782]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.9 " + "l1=5.9" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.3603454 -2.713896   2.7911756 -6.367142 ]]
Iteration 100 of 1000: loss=3.41 " + "l1=2.22" + "l2=1.19 f=-0.36 shape=(1, 9000, 1)
logits [[ 1.4653004 -1.7988901  1.4648141 -2.571141 ]]
Iteration 200 of 1000: loss=2.3 " + "l1=0.7" + "l2=1.6 f=-0.278 shape=(1, 9000, 1)
logits [[ 0.39935237 -1.0398833   0.40047637 -0.87283593]]
Iteration 300 of 1000: loss=1.39 " + "l1=0.027" + "l2=1.37 f=-0.228 shape=(1, 9000, 1)
logits [[ 0.00116807 -0.8713829   0.00346536 -0.04571271]]
Iteration 400 of 1000: loss=1.06 " + "l1=0" + "l2=1.06 f=-0.226 shape=(1, 9000, 1)
logits [[-0.00894455 -0.87759477 -0.01236436 -0.00643375]]
Iteration 500 of 1000: loss=0.883 " + "l1=0" + "l2=0.883 f=-0.226 shape=(1, 9000, 1)
logits [[-0.00721267 -0.91082287 -0.00424535  0.01753167]]
Iteration 600 of 1000: loss=0.794 " + "l1=0.00655" + "l2=0.787 f=-0.225 shape=(1, 9000, 1)
logits [[ 0.02045649 -0.94583595  0.01854147  0.00854023]]
Iteration 700 of 1000: loss=0.728 " + "l1=5.09e-05" + "l2=0.728 f=-0.221 shape=(1, 9000, 1)
logits [[ 0.0276993  -0.96525544  0.02510573  0.02760669]]
Iteration 800 of 1000: loss=0.681 " + "l1=0" + "l2=0.681 f=-0.217 shape=(1, 9000, 1)
logits [[ 0.02310278 -0.96284276  0.02111108  0.04934407]]
Iteration 900 of 1000: loss=0.638 " + "l1=0" + "l2=0.638 f=-0.212 shape=(1, 9000, 1)
logits [[ 0.0284056  -0.9540492   0.03186454  0.04641352]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.49 " + "l1=3.49" + "l2=0 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.3603454 -2.713896   2.7911756 -6.367142 ]]
Iteration 100 of 1000: loss=2.52 " + "l1=2.04" + "l2=0.484 f=-0.399 shape=(1, 9000, 1)
logits [[ 2.3865175 -2.2061043  2.1010573 -3.8763752]]
Iteration 200 of 1000: loss=2.01 " + "l1=1.44" + "l2=0.573 f=-0.388 shape=(1, 9000, 1)
logits [[ 1.5976909 -1.9192355  1.5977389 -2.827869 ]]
Iteration 300 of 1000: loss=1.67 " + "l1=0.985" + "l2=0.684 f=-0.349 shape=(1, 9000, 1)
logits [[ 1.0556245 -1.5323943  1.0565697 -1.974389 ]]
Iteration 400 of 1000: loss=1.31 " + "l1=0.488" + "l2=0.817 f=-0.274 shape=(1, 9000, 1)
logits [[ 0.5195348  -1.1873477   0.5363018  -0.96474737]]
Iteration 500 of 1000: loss=0.992 " + "l1=0.093" + "l2=0.899 f=-0.235 shape=(1, 9000, 1)
logits [[ 0.11157367 -0.9911714   0.11336422 -0.17286903]]
Iteration 600 of 1000: loss=0.796 " + "l1=0" + "l2=0.796 f=-0.219 shape=(1, 9000, 1)
logits [[ 0.02285811 -0.96441424  0.02959334  0.03723572]]
Iteration 700 of 1000: loss=0.702 " + "l1=0.00704" + "l2=0.695 f=-0.21 shape=(1, 9000, 1)
logits [[ 0.05509206 -1.0049523   0.0653533   0.04368609]]
Iteration 800 of 1000: loss=0.638 " + "l1=0.00143" + "l2=0.637 f=-0.203 shape=(1, 9000, 1)
logits [[ 0.05705812 -0.9961571   0.06674435  0.06234208]]
Iteration 900 of 1000: loss=0.6 " + "l1=0" + "l2=0.6 f=-0.194 shape=(1, 9000, 1)
logits [[ 0.05880158 -0.99592334  0.06800298  0.09131927]]
--- 290.8202097415924 seconds ---
Adv result:3
Loading record A00441
(1, 3844)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0488 " + "l1=0.0488" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 3.146689   -1.7382289  -0.20319532 -3.8285792 ]]
Iteration 100 of 1000: loss=0.0466 " + "l1=0.0454" + "l2=0.00121 f=-0.668 shape=(1, 9000, 1)
logits [[ 2.9716132  -1.5657499  -0.25062042 -3.8263485 ]]
Iteration 200 of 1000: loss=0.0457 " + "l1=0.0442" + "l2=0.0015 f=-0.67 shape=(1, 9000, 1)
logits [[ 2.9100492 -1.5106118 -0.2679936 -3.8132062]]
Iteration 300 of 1000: loss=0.045 " + "l1=0.0431" + "l2=0.00188 f=-0.673 shape=(1, 9000, 1)
logits [[ 2.8506067  -1.4589381  -0.28512344 -3.797445  ]]
Iteration 400 of 1000: loss=0.0444 " + "l1=0.0421" + "l2=0.00228 f=-0.674 shape=(1, 9000, 1)
logits [[ 2.7974663  -1.4111022  -0.30130628 -3.7796946 ]]
Iteration 500 of 1000: loss=0.0439 " + "l1=0.0412" + "l2=0.0027 f=-0.674 shape=(1, 9000, 1)
logits [[ 2.7521217  -1.370498   -0.31625468 -3.7611153 ]]
Iteration 600 of 1000: loss=0.0434 " + "l1=0.0405" + "l2=0.00297 f=-0.674 shape=(1, 9000, 1)
logits [[ 2.7115142  -1.3343921  -0.33062622 -3.7438562 ]]
Iteration 700 of 1000: loss=0.0431 " + "l1=0.0397" + "l2=0.00338 f=-0.675 shape=(1, 9000, 1)
logits [[ 2.6704137 -1.2987262 -0.3451306 -3.724652 ]]
Iteration 800 of 1000: loss=0.0427 " + "l1=0.0389" + "l2=0.00378 f=-0.675 shape=(1, 9000, 1)
logits [[ 2.6291556 -1.2645901 -0.3599402 -3.706192 ]]
Iteration 900 of 1000: loss=0.0424 " + "l1=0.0382" + "l2=0.00411 f=-0.676 shape=(1, 9000, 1)
logits [[ 2.5904107  -1.2342743  -0.37439865 -3.6869354 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.488 " + "l1=0.488" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 3.146689   -1.7382289  -0.20319532 -3.8285792 ]]
Iteration 100 of 1000: loss=0.244 " + "l1=0.112" + "l2=0.132 f=-0.778 shape=(1, 9000, 1)
logits [[ 0.99766314 -0.12018041 -0.5384089  -3.4502552 ]]
Iteration 200 of 1000: loss=0.151 " + "l1=0.00229" + "l2=0.149 f=-0.786 shape=(1, 9000, 1)
logits [[ 0.32720265  0.30430946 -0.6950013  -3.080595  ]]
Iteration 300 of 1000: loss=0.115 " + "l1=0.00152" + "l2=0.113 f=-0.769 shape=(1, 9000, 1)
logits [[ 0.31488454  0.29967308 -0.7605786  -2.9313622 ]]
Iteration 400 of 1000: loss=0.0982 " + "l1=0.00145" + "l2=0.0968 f=-0.763 shape=(1, 9000, 1)
logits [[ 0.30067593  0.28613842 -0.8179125  -2.819789  ]]
Iteration 500 of 1000: loss=0.0873 " + "l1=0" + "l2=0.0873 f=-0.758 shape=(1, 9000, 1)
logits [[ 0.27391902  0.28388306 -0.87164485 -2.7197816 ]]
Iteration 600 of 1000: loss=0.0805 " + "l1=0.000955" + "l2=0.0796 f=-0.754 shape=(1, 9000, 1)
logits [[ 0.276395   0.2668403 -0.9196208 -2.640497 ]]
Iteration 700 of 1000: loss=0.0759 " + "l1=0" + "l2=0.0759 f=-0.751 shape=(1, 9000, 1)
logits [[ 0.2622246   0.26435557 -0.9620652  -2.5669553 ]]
Iteration 800 of 1000: loss=0.0736 " + "l1=0" + "l2=0.0736 f=-0.746 shape=(1, 9000, 1)
logits [[ 0.24463439  0.26265478 -1.0051444  -2.4876673 ]]
Iteration 900 of 1000: loss=0.0708 " + "l1=0.000913" + "l2=0.0699 f=-0.74 shape=(1, 9000, 1)
logits [[ 0.25696957  0.24783486 -1.0370463  -2.4257705 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.269 " + "l1=0.269" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 3.146689   -1.7382289  -0.20319532 -3.8285792 ]]
Iteration 100 of 1000: loss=0.198 " + "l1=0.156" + "l2=0.0414 f=-0.733 shape=(1, 9000, 1)
logits [[ 2.0155034  -0.8233094  -0.42382857 -3.701882  ]]
Iteration 200 of 1000: loss=0.161 " + "l1=0.101" + "l2=0.061 f=-0.755 shape=(1, 9000, 1)
logits [[ 1.4167116  -0.41080016 -0.51635253 -3.5078967 ]]
Iteration 300 of 1000: loss=0.133 " + "l1=0.0612" + "l2=0.0721 f=-0.76 shape=(1, 9000, 1)
logits [[ 0.98649263 -0.12625019 -0.6177102  -3.2829933 ]]
Iteration 400 of 1000: loss=0.114 " + "l1=0.035" + "l2=0.0792 f=-0.765 shape=(1, 9000, 1)
logits [[ 0.6843618   0.04872049 -0.714012   -3.0782063 ]]
Iteration 500 of 1000: loss=0.0992 " + "l1=0.0148" + "l2=0.0844 f=-0.765 shape=(1, 9000, 1)
logits [[ 0.45076114  0.1814656  -0.8032371  -2.887524  ]]
Iteration 600 of 1000: loss=0.0867 " + "l1=0.00215" + "l2=0.0845 f=-0.761 shape=(1, 9000, 1)
logits [[ 0.29808214  0.2589439  -0.8814348  -2.7196414 ]]
Iteration 700 of 1000: loss=0.0791 " + "l1=0.000746" + "l2=0.0784 f=-0.756 shape=(1, 9000, 1)
logits [[ 0.2755308   0.26197517 -0.9403294  -2.6225162 ]]
Iteration 800 of 1000: loss=0.0749 " + "l1=0" + "l2=0.0749 f=-0.751 shape=(1, 9000, 1)
logits [[ 0.25931108  0.2646826  -0.9867207  -2.5425596 ]]
Iteration 900 of 1000: loss=0.0719 " + "l1=0" + "l2=0.0719 f=-0.746 shape=(1, 9000, 1)
logits [[ 0.2454052   0.26143485 -1.0279187  -2.4611013 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.159 " + "l1=0.159" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 3.146689   -1.7382289  -0.20319532 -3.8285792 ]]
Iteration 100 of 1000: loss=0.135 " + "l1=0.123" + "l2=0.0126 f=-0.694 shape=(1, 9000, 1)
logits [[ 2.5620203  -1.2098243  -0.34286997 -3.78689   ]]
Iteration 200 of 1000: loss=0.124 " + "l1=0.106" + "l2=0.0184 f=-0.71 shape=(1, 9000, 1)
logits [[ 2.2640388  -0.98595095 -0.4021468  -3.7140996 ]]
Iteration 300 of 1000: loss=0.115 " + "l1=0.0904" + "l2=0.0247 f=-0.721 shape=(1, 9000, 1)
logits [[ 1.9826126  -0.7987137  -0.45680693 -3.6121302 ]]
Iteration 400 of 1000: loss=0.107 " + "l1=0.0771" + "l2=0.0301 f=-0.729 shape=(1, 9000, 1)
logits [[ 1.7349156 -0.6366391 -0.512044  -3.503527 ]]
Iteration 500 of 1000: loss=0.0994 " + "l1=0.0631" + "l2=0.0364 f=-0.735 shape=(1, 9000, 1)
logits [[ 1.4758806 -0.4642421 -0.5823128 -3.3692322]]
Iteration 600 of 1000: loss=0.0934 " + "l1=0.0533" + "l2=0.0401 f=-0.736 shape=(1, 9000, 1)
logits [[ 1.2952747  -0.34579676 -0.6434697  -3.251757  ]]
Iteration 700 of 1000: loss=0.0886 " + "l1=0.0453" + "l2=0.0433 f=-0.737 shape=(1, 9000, 1)
logits [[ 1.144242   -0.25098312 -0.70059663 -3.1407003 ]]
Iteration 800 of 1000: loss=0.0844 " + "l1=0.0392" + "l2=0.0452 f=-0.736 shape=(1, 9000, 1)
logits [[ 1.026022   -0.18078257 -0.75963837 -3.031114  ]]
Iteration 900 of 1000: loss=0.0804 " + "l1=0.0336" + "l2=0.0468 f=-0.734 shape=(1, 9000, 1)
logits [[ 0.9142689  -0.12045392 -0.82038707 -2.908203  ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.214 " + "l1=0.214" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 3.146689   -1.7382289  -0.20319532 -3.8285792 ]]
Iteration 100 of 1000: loss=0.17 " + "l1=0.147" + "l2=0.0233 f=-0.71 shape=(1, 9000, 1)
logits [[ 2.3306131  -1.0311978  -0.38482067 -3.7557774 ]]
Iteration 200 of 1000: loss=0.148 " + "l1=0.111" + "l2=0.0372 f=-0.735 shape=(1, 9000, 1)
logits [[ 1.8344814  -0.7049004  -0.45895678 -3.6121953 ]]
Iteration 300 of 1000: loss=0.13 " + "l1=0.0795" + "l2=0.0501 f=-0.747 shape=(1, 9000, 1)
logits [[ 1.4071698  -0.41003737 -0.54445666 -3.4425633 ]]
Iteration 400 of 1000: loss=0.114 " + "l1=0.0573" + "l2=0.0571 f=-0.75 shape=(1, 9000, 1)
logits [[ 1.1021963  -0.2084745  -0.62552536 -3.2676136 ]]
Iteration 500 of 1000: loss=0.104 " + "l1=0.0425" + "l2=0.0612 f=-0.752 shape=(1, 9000, 1)
logits [[ 0.88792175 -0.08355543 -0.7022821  -3.1081486 ]]
Iteration 600 of 1000: loss=0.0948 " + "l1=0.0297" + "l2=0.0651 f=-0.752 shape=(1, 9000, 1)
logits [[ 0.7015381   0.02305546 -0.7792173  -2.954415  ]]
Iteration 700 of 1000: loss=0.0866 " + "l1=0.0189" + "l2=0.0677 f=-0.751 shape=(1, 9000, 1)
logits [[ 0.54316366  0.1113501  -0.8555163  -2.803824  ]]
Iteration 800 of 1000: loss=0.0803 " + "l1=0.00846" + "l2=0.0719 f=-0.753 shape=(1, 9000, 1)
logits [[ 0.38673148  0.19336176 -0.92848724 -2.6645758 ]]
Iteration 900 of 1000: loss=0.0752 " + "l1=0.000901" + "l2=0.0743 f=-0.752 shape=(1, 9000, 1)
logits [[ 0.27003214  0.24943416 -0.9935512  -2.5338166 ]]
--- 289.25721549987793 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0335 " + "l1=0.0335" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 3.146689   -1.7382289  -0.20319532 -3.8285792 ]]
Iteration 100 of 1000: loss=0.033 " + "l1=0.0326" + "l2=0.000371 f=-0.661 shape=(1, 9000, 1)
logits [[ 3.0606174  -1.6853921  -0.19954856 -3.8194783 ]]
Iteration 200 of 1000: loss=0.0328 " + "l1=0.0324" + "l2=0.000398 f=-0.662 shape=(1, 9000, 1)
logits [[ 3.0424292  -1.6737721  -0.19906904 -3.8160696 ]]
Iteration 300 of 1000: loss=0.0327 " + "l1=0.0322" + "l2=0.000471 f=-0.662 shape=(1, 9000, 1)
logits [[ 3.0221155  -1.6606718  -0.19935554 -3.8118575 ]]
Iteration 400 of 1000: loss=0.0326 " + "l1=0.032" + "l2=0.000581 f=-0.663 shape=(1, 9000, 1)
logits [[ 3.0012598  -1.6465858  -0.20102921 -3.8074877 ]]
Iteration 500 of 1000: loss=0.0325 " + "l1=0.0319" + "l2=0.000661 f=-0.664 shape=(1, 9000, 1)
logits [[ 2.9845133  -1.635211   -0.20178054 -3.8034227 ]]
Iteration 600 of 1000: loss=0.0325 " + "l1=0.0317" + "l2=0.000753 f=-0.664 shape=(1, 9000, 1)
logits [[ 2.96985    -1.6255155  -0.20103279 -3.800284  ]]
Iteration 700 of 1000: loss=0.0325 " + "l1=0.0316" + "l2=0.000882 f=-0.665 shape=(1, 9000, 1)
logits [[ 2.9572103  -1.6167266  -0.20165603 -3.7970176 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.335 " + "l1=0.335" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 3.146689   -1.7382289  -0.20319532 -3.8285792 ]]
Iteration 100 of 1000: loss=0.267 " + "l1=0.214" + "l2=0.0531 f=-0.699 shape=(1, 9000, 1)
logits [[ 2.0880127  -1.1657705  -0.04930234 -3.6674817 ]]
Iteration 200 of 1000: loss=0.233 " + "l1=0.164" + "l2=0.0689 f=-0.722 shape=(1, 9000, 1)
logits [[ 1.5669458  -0.85804087 -0.07280659 -3.5225847 ]]
Iteration 300 of 1000: loss=0.208 " + "l1=0.124" + "l2=0.0848 f=-0.719 shape=(1, 9000, 1)
logits [[ 1.1487567  -0.5935213  -0.08745618 -3.3455026 ]]
Iteration 400 of 1000: loss=0.187 " + "l1=0.0852" + "l2=0.101 f=-0.691 shape=(1, 9000, 1)
logits [[ 0.7825698  -0.40383387 -0.06933774 -3.0722883 ]]
Iteration 500 of 1000: loss=0.17 " + "l1=0.0588" + "l2=0.111 f=-0.66 shape=(1, 9000, 1)
logits [[ 0.5697678  -0.3293873  -0.01818835 -2.8617957 ]]
Iteration 600 of 1000: loss=0.157 " + "l1=0.0443" + "l2=0.113 f=-0.657 shape=(1, 9000, 1)
logits [[ 0.43038115 -0.27195007 -0.01257361 -2.7745538 ]]
Iteration 700 of 1000: loss=0.147 " + "l1=0.0332" + "l2=0.114 f=-0.65 shape=(1, 9000, 1)
logits [[ 0.32709023 -0.22133638 -0.00491521 -2.701918  ]]
Iteration 800 of 1000: loss=0.137 " + "l1=0.0189" + "l2=0.118 f=-0.641 shape=(1, 9000, 1)
logits [[ 0.21640795 -0.17010675  0.02701273 -2.6376903 ]]
Iteration 900 of 1000: loss=0.124 " + "l1=0.00445" + "l2=0.12 f=-0.615 shape=(1, 9000, 1)
logits [[ 0.13797718 -0.15181443  0.09346671 -2.5399635 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.184 " + "l1=0.184" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 3.146689   -1.7382289  -0.20319532 -3.8285792 ]]
Iteration 100 of 1000: loss=0.169 " + "l1=0.161" + "l2=0.00848 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.7248936  -1.4772003  -0.19770928 -3.7835937 ]]
Iteration 200 of 1000: loss=0.163 " + "l1=0.15" + "l2=0.0131 f=-0.691 shape=(1, 9000, 1)
logits [[ 2.5204158  -1.3526341  -0.20158547 -3.728664  ]]
Iteration 300 of 1000: loss=0.153 " + "l1=0.124" + "l2=0.0288 f=-0.686 shape=(1, 9000, 1)
logits [[ 2.169492  -1.2036724 -0.0819658 -3.6265728]]
Iteration 400 of 1000: loss=0.146 " + "l1=0.116" + "l2=0.0298 f=-0.689 shape=(1, 9000, 1)
logits [[ 2.0250924  -1.128878   -0.09044044 -3.5617428 ]]
Iteration 500 of 1000: loss=0.142 " + "l1=0.109" + "l2=0.0327 f=-0.685 shape=(1, 9000, 1)
logits [[ 1.8887373  -1.0632018  -0.09082429 -3.4748693 ]]
Iteration 600 of 1000: loss=0.136 " + "l1=0.101" + "l2=0.0349 f=-0.683 shape=(1, 9000, 1)
logits [[ 1.7400274  -0.9820261  -0.09730171 -3.3915408 ]]
Iteration 700 of 1000: loss=0.13 " + "l1=0.0921" + "l2=0.038 f=-0.666 shape=(1, 9000, 1)
logits [[ 1.6020871  -0.9213545  -0.07299452 -3.2712805 ]]
Iteration 800 of 1000: loss=0.125 " + "l1=0.0841" + "l2=0.0412 f=-0.647 shape=(1, 9000, 1)
logits [[ 1.4853562  -0.8763953  -0.04317152 -3.152013  ]]
Iteration 900 of 1000: loss=0.12 " + "l1=0.0752" + "l2=0.0447 f=-0.621 shape=(1, 9000, 1)
logits [[ 1.3817322  -0.8385166   0.01496011 -3.0430393 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.26 " + "l1=0.26" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 3.146689   -1.7382289  -0.20319532 -3.8285792 ]]
Iteration 100 of 1000: loss=0.228 " + "l1=0.209" + "l2=0.0198 f=-0.7 shape=(1, 9000, 1)
logits [[ 2.4871588  -1.3331964  -0.20441698 -3.7512414 ]]
Iteration 200 of 1000: loss=0.202 " + "l1=0.16" + "l2=0.0414 f=-0.702 shape=(1, 9000, 1)
logits [[ 1.9947689 -1.1055851 -0.074236  -3.6237423]]
Iteration 300 of 1000: loss=0.188 " + "l1=0.138" + "l2=0.0505 f=-0.713 shape=(1, 9000, 1)
logits [[ 1.6754972  -0.9152432  -0.10126063 -3.5096905 ]]
Iteration 400 of 1000: loss=0.175 " + "l1=0.113" + "l2=0.0625 f=-0.706 shape=(1, 9000, 1)
logits [[ 1.3505472  -0.7249365  -0.10716254 -3.3428957 ]]
Iteration 500 of 1000: loss=0.165 " + "l1=0.0926" + "l2=0.0723 f=-0.69 shape=(1, 9000, 1)
logits [[ 1.096102   -0.59068733 -0.09845516 -3.164977  ]]
Iteration 600 of 1000: loss=0.153 " + "l1=0.0725" + "l2=0.0808 f=-0.657 shape=(1, 9000, 1)
logits [[ 0.8883936  -0.5048674  -0.04716063 -2.9636948 ]]
Iteration 700 of 1000: loss=0.142 " + "l1=0.0606" + "l2=0.0816 f=-0.648 shape=(1, 9000, 1)
logits [[ 0.75149834 -0.44499332 -0.03087802 -2.8672445 ]]
Iteration 800 of 1000: loss=0.133 " + "l1=0.0507" + "l2=0.0824 f=-0.64 shape=(1, 9000, 1)
logits [[ 0.6512199  -0.39891952 -0.0031979  -2.807565  ]]
Iteration 900 of 1000: loss=0.126 " + "l1=0.0427" + "l2=0.0838 f=-0.633 shape=(1, 9000, 1)
logits [[ 0.57268846 -0.3615456   0.02196442 -2.7632875 ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.297 " + "l1=0.297" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 3.146689   -1.7382289  -0.20319532 -3.8285792 ]]
Iteration 100 of 1000: loss=0.252 " + "l1=0.22" + "l2=0.032 f=-0.709 shape=(1, 9000, 1)
logits [[ 2.303545  -1.2473067 -0.1776613 -3.71356  ]]
Iteration 200 of 1000: loss=0.219 " + "l1=0.165" + "l2=0.0542 f=-0.713 shape=(1, 9000, 1)
logits [[ 1.7806116  -0.9887274  -0.07296954 -3.569459  ]]
Iteration 300 of 1000: loss=0.2 " + "l1=0.132" + "l2=0.0681 f=-0.718 shape=(1, 9000, 1)
logits [[ 1.3911091  -0.74009436 -0.09695681 -3.4251225 ]]
Iteration 400 of 1000: loss=0.183 " + "l1=0.101" + "l2=0.0816 f=-0.702 shape=(1, 9000, 1)
logits [[ 1.0555637 -0.5572615 -0.0879706 -3.219902 ]]
Iteration 500 of 1000: loss=0.169 " + "l1=0.0772" + "l2=0.0919 f=-0.679 shape=(1, 9000, 1)
logits [[ 0.7947657  -0.42483744 -0.07516854 -3.0105553 ]]
Iteration 600 of 1000: loss=0.156 " + "l1=0.0581" + "l2=0.0981 f=-0.655 shape=(1, 9000, 1)
logits [[ 0.6276171  -0.37039056 -0.02653673 -2.8515885 ]]
Iteration 700 of 1000: loss=0.147 " + "l1=0.0466" + "l2=0.101 f=-0.651 shape=(1, 9000, 1)
logits [[ 0.5060682  -0.31456575 -0.01930174 -2.7759335 ]]
Iteration 800 of 1000: loss=0.139 " + "l1=0.0366" + "l2=0.102 f=-0.643 shape=(1, 9000, 1)
logits [[ 4.156138e-01 -2.679150e-01  2.694775e-03 -2.722721e+00]]
Iteration 900 of 1000: loss=0.127 " + "l1=0.0253" + "l2=0.101 f=-0.636 shape=(1, 9000, 1)
logits [[ 0.3252254  -0.23590094  0.03991433 -2.6742828 ]]
--- 273.7084152698517 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0698 " + "l1=0.0698" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 3.146689   -1.7382289  -0.20319532 -3.8285792 ]]
Iteration 100 of 1000: loss=0.0684 " + "l1=0.0678" + "l2=0.00058 f=-0.658 shape=(1, 9000, 1)
logits [[ 3.0290534  -1.671464   -0.23326091 -3.7555919 ]]
Iteration 200 of 1000: loss=0.0679 " + "l1=0.0671" + "l2=0.000767 f=-0.657 shape=(1, 9000, 1)
logits [[ 2.9879148  -1.6473423  -0.24596117 -3.7232878 ]]
Iteration 300 of 1000: loss=0.0674 " + "l1=0.0663" + "l2=0.00104 f=-0.656 shape=(1, 9000, 1)
logits [[ 2.9455233  -1.621451   -0.26055497 -3.6887908 ]]
Iteration 400 of 1000: loss=0.0669 " + "l1=0.0656" + "l2=0.00136 f=-0.655 shape=(1, 9000, 1)
logits [[ 2.902882  -1.5939264 -0.2763667 -3.6542358]]
Iteration 500 of 1000: loss=0.0665 " + "l1=0.0649" + "l2=0.00167 f=-0.655 shape=(1, 9000, 1)
logits [[ 2.863091  -1.5678005 -0.292818  -3.622462 ]]
Iteration 600 of 1000: loss=0.0662 " + "l1=0.0641" + "l2=0.00205 f=-0.654 shape=(1, 9000, 1)
logits [[ 2.826246  -1.5458436 -0.3085534 -3.5871909]]
Iteration 700 of 1000: loss=0.0658 " + "l1=0.0635" + "l2=0.00233 f=-0.653 shape=(1, 9000, 1)
logits [[ 2.7906234  -1.5234895  -0.32479456 -3.5544536 ]]
Iteration 800 of 1000: loss=0.0654 " + "l1=0.0628" + "l2=0.00261 f=-0.653 shape=(1, 9000, 1)
logits [[ 2.754261  -1.5018973 -0.3413866 -3.5222461]]
Iteration 900 of 1000: loss=0.065 " + "l1=0.0621" + "l2=0.00293 f=-0.653 shape=(1, 9000, 1)
logits [[ 2.7184181 -1.480677  -0.358384  -3.4896622]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.698 " + "l1=0.698" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 3.146689   -1.7382289  -0.20319532 -3.8285792 ]]
Iteration 100 of 1000: loss=0.55 " + "l1=0.473" + "l2=0.0773 f=-0.703 shape=(1, 9000, 1)
logits [[ 1.684207   -0.92313135 -0.52893645 -3.04532   ]]
Iteration 200 of 1000: loss=0.415 " + "l1=0.271" + "l2=0.144 f=-0.629 shape=(1, 9000, 1)
logits [[ 0.6353322  -0.49149483 -0.58776385 -2.0722997 ]]
Iteration 300 of 1000: loss=0.311 " + "l1=0.134" + "l2=0.177 f=-0.599 shape=(1, 9000, 1)
logits [[-0.00716414 -0.26752967 -0.77560574 -1.3459042 ]]
Iteration 400 of 1000: loss=0.228 " + "l1=0.036" + "l2=0.192 f=-0.536 shape=(1, 9000, 1)
logits [[-0.28046805 -0.30501702 -0.9195784  -0.6400063 ]]
Iteration 500 of 1000: loss=0.184 " + "l1=0.00112" + "l2=0.183 f=-0.501 shape=(1, 9000, 1)
logits [[-0.33442172 -0.34580338 -0.97862434 -0.34558138]]
Iteration 600 of 1000: loss=0.162 " + "l1=0" + "l2=0.162 f=-0.498 shape=(1, 9000, 1)
logits [[-0.3095884 -0.334183  -1.0557356 -0.2915994]]
Iteration 700 of 1000: loss=0.144 " + "l1=2.64e-05" + "l2=0.144 f=-0.502 shape=(1, 9000, 1)
logits [[-0.29008675 -0.30128798 -1.1251802  -0.29035085]]
Iteration 800 of 1000: loss=0.133 " + "l1=0.000903" + "l2=0.132 f=-0.498 shape=(1, 9000, 1)
logits [[-0.27284983 -0.295876   -1.1425065  -0.28187534]]
Iteration 900 of 1000: loss=0.122 " + "l1=0.00152" + "l2=0.12 f=-0.5 shape=(1, 9000, 1)
logits [[-0.27722275 -0.28625017 -1.1458762  -0.29242447]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.384 " + "l1=0.384" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 3.146689   -1.7382289  -0.20319532 -3.8285792 ]]
Iteration 100 of 1000: loss=0.344 " + "l1=0.325" + "l2=0.0191 f=-0.675 shape=(1, 9000, 1)
logits [[ 2.4724073  -1.3617768  -0.37184083 -3.437464  ]]
Iteration 200 of 1000: loss=0.316 " + "l1=0.283" + "l2=0.0329 f=-0.68 shape=(1, 9000, 1)
logits [[ 2.0107384 -1.1059359 -0.4953706 -3.1295617]]
Iteration 300 of 1000: loss=0.284 " + "l1=0.233" + "l2=0.0513 f=-0.674 shape=(1, 9000, 1)
logits [[ 1.4833462 -0.8300307 -0.6007948 -2.7491448]]
Iteration 400 of 1000: loss=0.252 " + "l1=0.18" + "l2=0.0722 f=-0.627 shape=(1, 9000, 1)
logits [[ 1.0501934  -0.69845766 -0.64053196 -2.2173004 ]]
Iteration 500 of 1000: loss=0.222 " + "l1=0.138" + "l2=0.0846 f=-0.614 shape=(1, 9000, 1)
logits [[ 0.6899396 -0.5426726 -0.7874668 -1.8155507]]
Iteration 600 of 1000: loss=0.198 " + "l1=0.103" + "l2=0.0947 f=-0.6 shape=(1, 9000, 1)
logits [[ 0.4269623  -0.4421938  -0.92967516 -1.4533658 ]]
Iteration 700 of 1000: loss=0.178 " + "l1=0.0778" + "l2=0.1 f=-0.588 shape=(1, 9000, 1)
logits [[ 0.23461977 -0.36973768 -1.0382366  -1.180414  ]]
Iteration 800 of 1000: loss=0.161 " + "l1=0.0573" + "l2=0.104 f=-0.575 shape=(1, 9000, 1)
logits [[ 0.08391634 -0.3161959  -1.1101997  -0.9585764 ]]
Iteration 900 of 1000: loss=0.146 " + "l1=0.0396" + "l2=0.107 f=-0.569 shape=(1, 9000, 1)
logits [[-0.05765431 -0.25752887 -1.1833072  -0.77684313]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.541 " + "l1=0.541" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 3.146689   -1.7382289  -0.20319532 -3.8285792 ]]
Iteration 100 of 1000: loss=0.456 " + "l1=0.412" + "l2=0.044 f=-0.694 shape=(1, 9000, 1)
logits [[ 2.0753703  -1.1464468  -0.46115902 -3.245156  ]]
Iteration 200 of 1000: loss=0.389 " + "l1=0.316" + "l2=0.0733 f=-0.677 shape=(1, 9000, 1)
logits [[ 1.3568356  -0.7725948  -0.57469445 -2.7169137 ]]
Iteration 300 of 1000: loss=0.316 " + "l1=0.203" + "l2=0.112 f=-0.627 shape=(1, 9000, 1)
logits [[ 0.6406394 -0.5055867 -0.6588024 -1.9847045]]
Iteration 400 of 1000: loss=0.259 " + "l1=0.127" + "l2=0.132 f=-0.6 shape=(1, 9000, 1)
logits [[ 0.2208279  -0.37427244 -0.83240783 -1.412159  ]]
Iteration 500 of 1000: loss=0.211 " + "l1=0.0613" + "l2=0.15 f=-0.576 shape=(1, 9000, 1)
logits [[-0.10840796 -0.2982857  -0.9973199  -0.899017  ]]
Iteration 600 of 1000: loss=0.179 " + "l1=0.0234" + "l2=0.156 f=-0.548 shape=(1, 9000, 1)
logits [[-0.25211415 -0.29154596 -1.0956901  -0.5538598 ]]
Iteration 700 of 1000: loss=0.154 " + "l1=0.000772" + "l2=0.153 f=-0.525 shape=(1, 9000, 1)
logits [[-0.3041289  -0.30857822 -1.1720418  -0.3140864 ]]
Iteration 800 of 1000: loss=0.14 " + "l1=0.000324" + "l2=0.14 f=-0.512 shape=(1, 9000, 1)
logits [[-0.2542019  -0.3313745  -1.2049645  -0.25837708]]
Iteration 900 of 1000: loss=0.129 " + "l1=0.00095" + "l2=0.128 f=-0.518 shape=(1, 9000, 1)
logits [[-0.25859746 -0.3023332  -1.2412443  -0.2708614 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.462 " + "l1=0.462" + "l2=0 f=-0.656 shape=(1, 9000, 1)
logits [[ 3.146689   -1.7382289  -0.20319532 -3.8285792 ]]
Iteration 100 of 1000: loss=0.402 " + "l1=0.371" + "l2=0.0315 f=-0.686 shape=(1, 9000, 1)
logits [[ 2.2600653  -1.2449634  -0.42287886 -3.3347085 ]]
Iteration 200 of 1000: loss=0.357 " + "l1=0.305" + "l2=0.0522 f=-0.687 shape=(1, 9000, 1)
logits [[ 1.6612457  -0.9130791  -0.55438495 -2.9423776 ]]
Iteration 300 of 1000: loss=0.304 " + "l1=0.221" + "l2=0.0834 f=-0.627 shape=(1, 9000, 1)
logits [[ 1.0547979  -0.69588566 -0.5879747  -2.2770436 ]]
Iteration 400 of 1000: loss=0.26 " + "l1=0.16" + "l2=0.101 f=-0.62 shape=(1, 9000, 1)
logits [[ 0.5913641  -0.49979383 -0.75360197 -1.8197942 ]]
Iteration 500 of 1000: loss=0.222 " + "l1=0.106" + "l2=0.116 f=-0.598 shape=(1, 9000, 1)
logits [[ 0.25695544 -0.38538134 -0.92468494 -1.3379915 ]]
Iteration 600 of 1000: loss=0.192 " + "l1=0.0653" + "l2=0.127 f=-0.58 shape=(1, 9000, 1)
logits [[ 0.01092271 -0.31260535 -1.0441561  -0.9752459 ]]
Iteration 700 of 1000: loss=0.169 " + "l1=0.0356" + "l2=0.133 f=-0.567 shape=(1, 9000, 1)
logits [[-0.17640781 -0.23761593 -1.1382898  -0.7143455 ]]
Iteration 800 of 1000: loss=0.149 " + "l1=0.0176" + "l2=0.132 f=-0.543 shape=(1, 9000, 1)
logits [[-0.21952333 -0.25841165 -1.2078141  -0.48517865]]
Iteration 900 of 1000: loss=0.136 " + "l1=0.00594" + "l2=0.13 f=-0.528 shape=(1, 9000, 1)
logits [[-0.24321184 -0.27557832 -1.2608051  -0.3328061 ]]
--- 289.83594155311584 seconds ---
Adv result:3
Loading record A00456
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0793 " + "l1=0.0793" + "l2=0 f=-0.558 shape=(1, 9000, 1)
logits [[ 4.802368  -3.12627    3.0347252 -6.9429293]]
Iteration 100 of 1000: loss=0.079 " + "l1=0.0787" + "l2=0.000259 f=-0.556 shape=(1, 9000, 1)
logits [[ 4.762253  -3.1074157  3.018918  -6.8997517]]
Iteration 200 of 1000: loss=0.0789 " + "l1=0.0786" + "l2=0.000224 f=-0.556 shape=(1, 9000, 1)
logits [[ 4.7589703 -3.1053374  3.0170395 -6.895367 ]]
Iteration 300 of 1000: loss=0.0788 " + "l1=0.0785" + "l2=0.000256 f=-0.556 shape=(1, 9000, 1)
logits [[ 4.7522173 -3.1024718  3.014284  -6.8878145]]
Iteration 400 of 1000: loss=0.0788 " + "l1=0.0784" + "l2=0.000314 f=-0.556 shape=(1, 9000, 1)
logits [[ 4.744461  -3.0992825  3.0111468 -6.879005 ]]
Iteration 500 of 1000: loss=0.0787 " + "l1=0.0783" + "l2=0.00039 f=-0.555 shape=(1, 9000, 1)
logits [[ 4.7364025 -3.0959063  3.0077763 -6.869685 ]]
Iteration 600 of 1000: loss=0.0786 " + "l1=0.0782" + "l2=0.000443 f=-0.555 shape=(1, 9000, 1)
logits [[ 4.72814   -3.0924606  3.004258  -6.8600097]]
Iteration 700 of 1000: loss=0.0786 " + "l1=0.0781" + "l2=0.000554 f=-0.555 shape=(1, 9000, 1)
logits [[ 4.7203217 -3.0892558  3.0009048 -6.8507886]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.793 " + "l1=0.793" + "l2=0 f=-0.558 shape=(1, 9000, 1)
logits [[ 4.802368  -3.12627    3.0347252 -6.9429293]]
Iteration 100 of 1000: loss=0.763 " + "l1=0.745" + "l2=0.0172 f=-0.542 shape=(1, 9000, 1)
logits [[ 4.5016494 -2.9526877  2.8862188 -6.6023006]]
Iteration 200 of 1000: loss=0.748 " + "l1=0.721" + "l2=0.027 f=-0.532 shape=(1, 9000, 1)
logits [[ 4.3522215 -2.8608618  2.8018413 -6.419432 ]]
Iteration 300 of 1000: loss=0.735 " + "l1=0.701" + "l2=0.0336 f=-0.522 shape=(1, 9000, 1)
logits [[ 4.22754   -2.7842932  2.734418  -6.266708 ]]
Iteration 400 of 1000: loss=0.72 " + "l1=0.679" + "l2=0.0414 f=-0.511 shape=(1, 9000, 1)
logits [[ 4.089369  -2.6983495  2.6605601 -6.096861 ]]
Iteration 500 of 1000: loss=0.702 " + "l1=0.654" + "l2=0.0487 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.9265108 -2.6105852  2.5900106 -5.9039226]]
Iteration 600 of 1000: loss=0.687 " + "l1=0.634" + "l2=0.0526 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.7856488 -2.5574472  2.5449052 -5.7314453]]
Iteration 700 of 1000: loss=0.674 " + "l1=0.618" + "l2=0.0556 f=-0.484 shape=(1, 9000, 1)
logits [[ 3.660838  -2.5189652  2.5016599 -5.57904  ]]
Iteration 800 of 1000: loss=0.662 " + "l1=0.602" + "l2=0.0597 f=-0.479 shape=(1, 9000, 1)
logits [[ 3.541613  -2.4790473  2.4529402 -5.4300027]]
Iteration 900 of 1000: loss=0.65 " + "l1=0.586" + "l2=0.0632 f=-0.474 shape=(1, 9000, 1)
logits [[ 3.4247792 -2.4390697  2.3999197 -5.2823358]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.93 " + "l1=7.93" + "l2=0 f=-0.558 shape=(1, 9000, 1)
logits [[ 4.802368  -3.12627    3.0347252 -6.9429293]]
Iteration 100 of 1000: loss=5.15 " + "l1=3.77" + "l2=1.39 f=-0.368 shape=(1, 9000, 1)
logits [[ 2.2658331 -1.5025104  1.7472049 -3.9843886]]
Iteration 200 of 1000: loss=3.8 " + "l1=2.08" + "l2=1.72 f=-0.334 shape=(1, 9000, 1)
logits [[ 1.233042   -0.83992195  1.2374802  -2.966006  ]]
Iteration 300 of 1000: loss=3.13 " + "l1=1.47" + "l2=1.66 f=-0.31 shape=(1, 9000, 1)
logits [[ 0.92881685 -0.5358385   0.93654585 -2.569887  ]]
Iteration 400 of 1000: loss=2.57 " + "l1=0.916" + "l2=1.65 f=-0.289 shape=(1, 9000, 1)
logits [[ 0.65416616 -0.26218998  0.65299976 -2.2022402 ]]
Iteration 500 of 1000: loss=2.16 " + "l1=0.61" + "l2=1.55 f=-0.269 shape=(1, 9000, 1)
logits [[ 0.49065408 -0.11805581  0.49218407 -1.9399073 ]]
Iteration 600 of 1000: loss=1.94 " + "l1=0.41" + "l2=1.53 f=-0.256 shape=(1, 9000, 1)
logits [[ 0.37304062 -0.02347401  0.38652664 -1.7593559 ]]
Iteration 700 of 1000: loss=1.74 " + "l1=0.243" + "l2=1.49 f=-0.254 shape=(1, 9000, 1)
logits [[ 0.2941989   0.05675095  0.29951942 -1.6647751 ]]
Iteration 800 of 1000: loss=1.58 " + "l1=0.0835" + "l2=1.49 f=-0.253 shape=(1, 9000, 1)
logits [[ 0.22450048  0.14099951  0.22112155 -1.597936  ]]
Iteration 900 of 1000: loss=1.46 " + "l1=0.0105" + "l2=1.45 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.1705845   0.1638275   0.17432731 -1.5005002 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.36 " + "l1=4.36" + "l2=0 f=-0.558 shape=(1, 9000, 1)
logits [[ 4.802368  -3.12627    3.0347252 -6.9429293]]
Iteration 100 of 1000: loss=3.46 " + "l1=3.04" + "l2=0.419 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.2526383 -2.2685127  2.303223  -5.08681  ]]
Iteration 200 of 1000: loss=2.95 " + "l1=2.32" + "l2=0.633 f=-0.393 shape=(1, 9000, 1)
logits [[ 2.4669623 -1.753079   1.8605716 -4.146098 ]]
Iteration 300 of 1000: loss=2.53 " + "l1=1.74" + "l2=0.793 f=-0.359 shape=(1, 9000, 1)
logits [[ 1.845029  -1.318693   1.5075965 -3.4713674]]
Iteration 400 of 1000: loss=2.29 " + "l1=1.41" + "l2=0.886 f=-0.34 shape=(1, 9000, 1)
logits [[ 1.4510564 -1.109749   1.322204  -3.0243034]]
Iteration 500 of 1000: loss=2.11 " + "l1=1.2" + "l2=0.905 f=-0.325 shape=(1, 9000, 1)
logits [[ 1.1951188 -0.989361   1.196895  -2.7034504]]
Iteration 600 of 1000: loss=1.93 " + "l1=1.09" + "l2=0.844 f=-0.306 shape=(1, 9000, 1)
logits [[ 1.0793765  -0.89594847  1.0826558  -2.4885147 ]]
Iteration 700 of 1000: loss=1.78 " + "l1=0.979" + "l2=0.796 f=-0.277 shape=(1, 9000, 1)
logits [[ 0.9862163  -0.7937134   0.98579216 -2.2874808 ]]
Iteration 800 of 1000: loss=1.65 " + "l1=0.855" + "l2=0.8 f=-0.25 shape=(1, 9000, 1)
logits [[ 0.87359285 -0.6801221   0.8727948  -2.0645602 ]]
Iteration 900 of 1000: loss=1.55 " + "l1=0.717" + "l2=0.836 f=-0.229 shape=(1, 9000, 1)
logits [[ 0.73242706 -0.56679857  0.73712313 -1.8178507 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=6.14 " + "l1=6.14" + "l2=0 f=-0.558 shape=(1, 9000, 1)
logits [[ 4.802368  -3.12627    3.0347252 -6.9429293]]
Iteration 100 of 1000: loss=4.44 " + "l1=3.61" + "l2=0.829 f=-0.403 shape=(1, 9000, 1)
logits [[ 2.7584543 -1.9030064  2.0226653 -4.492083 ]]
Iteration 200 of 1000: loss=3.44 " + "l1=2.2" + "l2=1.23 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.6765562 -1.1667428  1.4650943 -3.3876312]]
Iteration 300 of 1000: loss=2.93 " + "l1=1.66" + "l2=1.27 f=-0.341 shape=(1, 9000, 1)
logits [[ 1.2347175 -0.9098512  1.232706  -2.9228344]]
Iteration 400 of 1000: loss=2.51 " + "l1=1.27" + "l2=1.24 f=-0.312 shape=(1, 9000, 1)
logits [[ 0.9863099 -0.657345   0.9869305 -2.5622234]]
Iteration 500 of 1000: loss=2.17 " + "l1=0.953" + "l2=1.22 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.7737504  -0.45620638  0.7642884  -2.2125611 ]]
Iteration 600 of 1000: loss=1.94 " + "l1=0.713" + "l2=1.23 f=-0.269 shape=(1, 9000, 1)
logits [[ 0.605739   -0.30870688  0.611024   -1.9842635 ]]
Iteration 700 of 1000: loss=1.75 " + "l1=0.558" + "l2=1.19 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.49883988 -0.21856436  0.5018696  -1.8094316 ]]
Iteration 800 of 1000: loss=1.61 " + "l1=0.464" + "l2=1.15 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.42777577 -0.16930202  0.43002632 -1.6805648 ]]
Iteration 900 of 1000: loss=1.52 " + "l1=0.398" + "l2=1.12 f=-0.24 shape=(1, 9000, 1)
logits [[ 0.3774988  -0.12964362  0.38387954 -1.5921934 ]]
--- 275.06290459632874 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0177 " + "l1=0.0177" + "l2=0 f=-0.558 shape=(1, 9000, 1)
logits [[ 4.802368  -3.12627    3.0347252 -6.9429293]]
Iteration 100 of 1000: loss=0.0175 " + "l1=0.0173" + "l2=0.000208 f=-0.56 shape=(1, 9000, 1)
logits [[ 4.769239  -3.1331358  3.0408015 -6.9185004]]
Iteration 200 of 1000: loss=0.0174 " + "l1=0.0173" + "l2=0.000155 f=-0.56 shape=(1, 9000, 1)
logits [[ 4.768702  -3.1329076  3.0405326 -6.917895 ]]
Iteration 300 of 1000: loss=0.0174 " + "l1=0.0172" + "l2=0.000184 f=-0.561 shape=(1, 9000, 1)
logits [[ 4.7646174 -3.1336386  3.0413346 -6.914666 ]]
Iteration 400 of 1000: loss=0.0174 " + "l1=0.0172" + "l2=0.000221 f=-0.561 shape=(1, 9000, 1)
logits [[ 4.759884  -3.1349828  3.0428758 -6.910979 ]]
Iteration 500 of 1000: loss=0.0174 " + "l1=0.0171" + "l2=0.000294 f=-0.561 shape=(1, 9000, 1)
logits [[ 4.7550454 -3.135963   3.0440483 -6.907185 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.177 " + "l1=0.177" + "l2=0 f=-0.558 shape=(1, 9000, 1)
logits [[ 4.802368  -3.12627    3.0347252 -6.9429293]]
Iteration 100 of 1000: loss=0.159 " + "l1=0.149" + "l2=0.0101 f=-0.576 shape=(1, 9000, 1)
logits [[ 4.5865808 -3.195608   3.0994973 -6.792971 ]]
Iteration 200 of 1000: loss=0.152 " + "l1=0.139" + "l2=0.0128 f=-0.577 shape=(1, 9000, 1)
logits [[ 4.5159645 -3.2093298  3.1213212 -6.736839 ]]
Iteration 300 of 1000: loss=0.147 " + "l1=0.133" + "l2=0.0148 f=-0.577 shape=(1, 9000, 1)
logits [[ 4.458413  -3.2138371  3.1321805 -6.686385 ]]
Iteration 400 of 1000: loss=0.144 " + "l1=0.127" + "l2=0.0169 f=-0.578 shape=(1, 9000, 1)
logits [[ 4.404864  -3.2167072  3.137739  -6.6381335]]
Iteration 500 of 1000: loss=0.139 " + "l1=0.12" + "l2=0.0193 f=-0.578 shape=(1, 9000, 1)
logits [[ 4.341331  -3.2162263  3.1396399 -6.578518 ]]
Iteration 600 of 1000: loss=0.135 " + "l1=0.113" + "l2=0.0217 f=-0.579 shape=(1, 9000, 1)
logits [[ 4.2652555 -3.2142677  3.1346774 -6.500474 ]]
Iteration 700 of 1000: loss=0.13 " + "l1=0.107" + "l2=0.0232 f=-0.58 shape=(1, 9000, 1)
logits [[ 4.198921  -3.211663   3.1266706 -6.4334726]]
Iteration 800 of 1000: loss=0.127 " + "l1=0.102" + "l2=0.0244 f=-0.581 shape=(1, 9000, 1)
logits [[ 4.1393523 -3.2062385  3.1182783 -6.3740644]]
Iteration 900 of 1000: loss=0.123 " + "l1=0.0974" + "l2=0.0253 f=-0.581 shape=(1, 9000, 1)
logits [[ 4.0839076 -3.198408   3.1099234 -6.3196607]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.77 " + "l1=1.77" + "l2=0 f=-0.558 shape=(1, 9000, 1)
logits [[ 4.802368  -3.12627    3.0347252 -6.9429293]]
Iteration 100 of 1000: loss=0.503 " + "l1=0.00716" + "l2=0.496 f=-0.585 shape=(1, 9000, 1)
logits [[ 3.2395372 -3.264689   3.2323766 -5.5489187]]
Iteration 200 of 1000: loss=0.294 " + "l1=0" + "l2=0.294 f=-0.576 shape=(1, 9000, 1)
logits [[ 3.1565936 -3.2012894  3.1600711 -5.4209833]]
Iteration 300 of 1000: loss=0.237 " + "l1=0.0116" + "l2=0.225 f=-0.572 shape=(1, 9000, 1)
logits [[ 3.1357212 -3.1780705  3.1241045 -5.369358 ]]
Iteration 400 of 1000: loss=0.197 " + "l1=0.00539" + "l2=0.192 f=-0.571 shape=(1, 9000, 1)
logits [[ 3.1139028 -3.1667159  3.108515  -5.3381867]]
Iteration 500 of 1000: loss=0.169 " + "l1=0.00133" + "l2=0.168 f=-0.57 shape=(1, 9000, 1)
logits [[ 3.098416  -3.1588678  3.097088  -5.3167496]]
Iteration 600 of 1000: loss=0.153 " + "l1=0" + "l2=0.153 f=-0.569 shape=(1, 9000, 1)
logits [[ 3.0614152 -3.154011   3.0827785 -5.266416 ]]
Iteration 700 of 1000: loss=0.134 " + "l1=0" + "l2=0.134 f=-0.569 shape=(1, 9000, 1)
logits [[ 3.053241  -3.1462634  3.0644283 -5.248656 ]]
Iteration 800 of 1000: loss=0.124 " + "l1=0" + "l2=0.124 f=-0.571 shape=(1, 9000, 1)
logits [[ 3.0186453 -3.1429749  3.0475717 -5.2084675]]
Iteration 900 of 1000: loss=0.108 " + "l1=0" + "l2=0.108 f=-0.573 shape=(1, 9000, 1)
logits [[ 3.0190887 -3.135714   3.0282705 -5.2023816]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.972 " + "l1=0.972" + "l2=0 f=-0.558 shape=(1, 9000, 1)
logits [[ 4.802368  -3.12627    3.0347252 -6.9429293]]
Iteration 100 of 1000: loss=0.522 " + "l1=0.326" + "l2=0.196 f=-0.599 shape=(1, 9000, 1)
logits [[ 3.8162332 -3.300974   3.2240436 -6.1345716]]
Iteration 200 of 1000: loss=0.33 " + "l1=0.0539" + "l2=0.276 f=-0.591 shape=(1, 9000, 1)
logits [[ 3.273749  -3.2244997  3.1757596 -5.5877886]]
Iteration 300 of 1000: loss=0.228 " + "l1=0.00144" + "l2=0.227 f=-0.581 shape=(1, 9000, 1)
logits [[ 3.1195898 -3.1831014  3.116974  -5.378411 ]]
Iteration 400 of 1000: loss=0.188 " + "l1=0" + "l2=0.188 f=-0.58 shape=(1, 9000, 1)
logits [[ 3.0922632 -3.1758041  3.0925088 -5.330862 ]]
Iteration 500 of 1000: loss=0.162 " + "l1=0" + "l2=0.162 f=-0.58 shape=(1, 9000, 1)
logits [[ 3.066941  -3.1611004  3.0680366 -5.293022 ]]
Iteration 600 of 1000: loss=0.142 " + "l1=0" + "l2=0.142 f=-0.58 shape=(1, 9000, 1)
logits [[ 3.0381963 -3.149518   3.042299  -5.2515764]]
Iteration 700 of 1000: loss=0.126 " + "l1=0" + "l2=0.126 f=-0.58 shape=(1, 9000, 1)
logits [[ 3.0124211 -3.1408129  3.0211704 -5.2132587]]
Iteration 800 of 1000: loss=0.112 " + "l1=0" + "l2=0.112 f=-0.579 shape=(1, 9000, 1)
logits [[ 2.9968889 -3.1310236  3.0018575 -5.1844325]]
Iteration 900 of 1000: loss=0.103 " + "l1=0" + "l2=0.103 f=-0.578 shape=(1, 9000, 1)
logits [[ 2.969883  -3.125108   2.9908645 -5.149488 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.574 " + "l1=0.574" + "l2=0 f=-0.558 shape=(1, 9000, 1)
logits [[ 4.802368  -3.12627    3.0347252 -6.9429293]]
Iteration 100 of 1000: loss=0.401 " + "l1=0.314" + "l2=0.087 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.1576734 -3.2820094  3.190325  -6.444364 ]]
Iteration 200 of 1000: loss=0.335 " + "l1=0.229" + "l2=0.106 f=-0.594 shape=(1, 9000, 1)
logits [[ 3.9040382 -3.2784286  3.1998734 -6.201131 ]]
Iteration 300 of 1000: loss=0.28 " + "l1=0.154" + "l2=0.126 f=-0.592 shape=(1, 9000, 1)
logits [[ 3.6318915 -3.2289426  3.1577058 -5.9306293]]
Iteration 400 of 1000: loss=0.233 " + "l1=0.0785" + "l2=0.154 f=-0.589 shape=(1, 9000, 1)
logits [[ 3.362325  -3.1969385  3.1208644 -5.6409535]]
Iteration 500 of 1000: loss=0.19 " + "l1=0.0104" + "l2=0.18 f=-0.586 shape=(1, 9000, 1)
logits [[ 3.1224966 -3.1843197  3.0903656 -5.3711314]]
Iteration 600 of 1000: loss=0.158 " + "l1=0.0015" + "l2=0.157 f=-0.585 shape=(1, 9000, 1)
logits [[ 3.0568457 -3.1676674  3.05223   -5.2795596]]
Iteration 700 of 1000: loss=0.136 " + "l1=0" + "l2=0.136 f=-0.584 shape=(1, 9000, 1)
logits [[ 3.0247908 -3.1583886  3.0253146 -5.22635  ]]
Iteration 800 of 1000: loss=0.119 " + "l1=0.000483" + "l2=0.119 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.0058055 -3.1463373  3.0043197 -5.195048 ]]
Iteration 900 of 1000: loss=0.105 " + "l1=0" + "l2=0.105 f=-0.583 shape=(1, 9000, 1)
logits [[ 2.985882  -3.1367545  2.9891863 -5.168489 ]]
--- 264.8901333808899 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.117 " + "l1=0.117" + "l2=0 f=-0.558 shape=(1, 9000, 1)
logits [[ 4.802368  -3.12627    3.0347252 -6.9429293]]
Iteration 100 of 1000: loss=0.117 " + "l1=0.116" + "l2=0.000551 f=-0.556 shape=(1, 9000, 1)
logits [[ 4.739847  -3.11596    3.0165567 -6.8655314]]
Iteration 200 of 1000: loss=0.116 " + "l1=0.116" + "l2=0.000554 f=-0.556 shape=(1, 9000, 1)
logits [[ 4.7285037 -3.1139596  3.0127993 -6.852685 ]]
Iteration 300 of 1000: loss=0.116 " + "l1=0.115" + "l2=0.00064 f=-0.556 shape=(1, 9000, 1)
logits [[ 4.7140775 -3.1113849  3.0082278 -6.8350487]]
Iteration 400 of 1000: loss=0.116 " + "l1=0.115" + "l2=0.000742 f=-0.556 shape=(1, 9000, 1)
logits [[ 4.699401  -3.1085694  3.0033932 -6.816809 ]]
Iteration 500 of 1000: loss=0.116 " + "l1=0.115" + "l2=0.00089 f=-0.555 shape=(1, 9000, 1)
logits [[ 4.684369  -3.1054764  2.9981518 -6.7977858]]
Iteration 600 of 1000: loss=0.115 " + "l1=0.114" + "l2=0.00096 f=-0.555 shape=(1, 9000, 1)
logits [[ 4.669557  -3.1024218  2.9928217 -6.7789745]]
Iteration 700 of 1000: loss=0.115 " + "l1=0.114" + "l2=0.00116 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.654405  -3.09951    2.9872437 -6.7596107]]
Iteration 800 of 1000: loss=0.115 " + "l1=0.114" + "l2=0.00131 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.639074  -3.0964324  2.981377  -6.7397876]]
Iteration 900 of 1000: loss=0.115 " + "l1=0.113" + "l2=0.00151 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.623616  -3.0930223  2.9751832 -6.7196693]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.17 " + "l1=1.17" + "l2=0 f=-0.558 shape=(1, 9000, 1)
logits [[ 4.802368  -3.12627    3.0347252 -6.9429293]]
Iteration 100 of 1000: loss=1.09 " + "l1=1.05" + "l2=0.0441 f=-0.538 shape=(1, 9000, 1)
logits [[ 4.255007  -3.004116   2.8325589 -6.2357574]]
Iteration 200 of 1000: loss=1.05 " + "l1=0.989" + "l2=0.0637 f=-0.532 shape=(1, 9000, 1)
logits [[ 3.9916945 -2.939619   2.7193022 -5.900596 ]]
Iteration 300 of 1000: loss=1.01 " + "l1=0.933" + "l2=0.0804 f=-0.522 shape=(1, 9000, 1)
logits [[ 3.7440171 -2.8564694  2.6111476 -5.5856543]]
Iteration 400 of 1000: loss=0.971 " + "l1=0.872" + "l2=0.0987 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.4844506 -2.7568293  2.4971044 -5.2394843]]
Iteration 500 of 1000: loss=0.932 " + "l1=0.822" + "l2=0.11 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.263443  -2.6901443  2.4056323 -4.951578 ]]
Iteration 600 of 1000: loss=0.896 " + "l1=0.775" + "l2=0.121 f=-0.486 shape=(1, 9000, 1)
logits [[ 3.0619795 -2.6507063  2.3335145 -4.690136 ]]
Iteration 700 of 1000: loss=0.86 " + "l1=0.729" + "l2=0.13 f=-0.475 shape=(1, 9000, 1)
logits [[ 2.867497  -2.5945776  2.2526052 -4.4252806]]
Iteration 800 of 1000: loss=0.828 " + "l1=0.691" + "l2=0.137 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.7120419 -2.5607748  2.1999795 -4.193709 ]]
Iteration 900 of 1000: loss=0.797 " + "l1=0.654" + "l2=0.143 f=-0.447 shape=(1, 9000, 1)
logits [[ 2.5660503 -2.5333533  2.1565654 -3.9759064]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.7 " + "l1=11.7" + "l2=0 f=-0.558 shape=(1, 9000, 1)
logits [[ 4.802368  -3.12627    3.0347252 -6.9429293]]
Iteration 100 of 1000: loss=6.2 " + "l1=4.09" + "l2=2.1 f=-0.256 shape=(1, 9000, 1)
logits [[ 1.7125689 -2.0769937  1.7180456 -2.3761768]]
Iteration 200 of 1000: loss=4.59 " + "l1=2.34" + "l2=2.25 f=-0.181 shape=(1, 9000, 1)
logits [[ 1.1063989 -1.7140156  1.1125717 -1.2280593]]
Iteration 300 of 1000: loss=3.41 " + "l1=1.03" + "l2=2.39 f=-0.125 shape=(1, 9000, 1)
logits [[ 0.6274821  -1.4982709   0.6983682  -0.32808343]]
Iteration 400 of 1000: loss=2.46 " + "l1=0.0346" + "l2=2.43 f=-0.0861 shape=(1, 9000, 1)
logits [[ 0.15213689 -1.3781383   0.4581559   0.42354643]]
Iteration 500 of 1000: loss=1.93 " + "l1=0.0219" + "l2=1.91 f=-0.0904 shape=(1, 9000, 1)
logits [[ 0.13044962 -1.3634131   0.4466155   0.42475706]]
Iteration 600 of 1000: loss=1.67 " + "l1=0" + "l2=1.67 f=-0.0973 shape=(1, 9000, 1)
logits [[ 0.09029584 -1.3474696   0.43358606  0.43437877]]
Iteration 700 of 1000: loss=1.5 " + "l1=0.00396" + "l2=1.49 f=-0.105 shape=(1, 9000, 1)
logits [[ 0.06333166 -1.3639066   0.4431552   0.43919152]]
Iteration 800 of 1000: loss=1.38 " + "l1=0" + "l2=1.38 f=-0.109 shape=(1, 9000, 1)
logits [[ 0.01662017 -1.3684657   0.44522044  0.46942103]]
Iteration 900 of 1000: loss=1.27 " + "l1=0" + "l2=1.27 f=-0.115 shape=(1, 9000, 1)
logits [[-0.00299004 -1.3854603   0.45947665  0.47039002]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.46 " + "l1=6.46" + "l2=0 f=-0.558 shape=(1, 9000, 1)
logits [[ 4.802368  -3.12627    3.0347252 -6.9429293]]
Iteration 100 of 1000: loss=4.26 " + "l1=3.24" + "l2=1.02 f=-0.371 shape=(1, 9000, 1)
logits [[ 2.3367796 -2.4532323  2.186038  -3.5527723]]
Iteration 200 of 1000: loss=3.42 " + "l1=2.37" + "l2=1.05 f=-0.307 shape=(1, 9000, 1)
logits [[ 1.7709213 -2.2247994  1.7688878 -2.5424955]]
Iteration 300 of 1000: loss=2.87 " + "l1=1.73" + "l2=1.14 f=-0.255 shape=(1, 9000, 1)
logits [[ 1.3673284 -1.9727749  1.3678795 -1.7811701]]
Iteration 400 of 1000: loss=2.4 " + "l1=1.27" + "l2=1.13 f=-0.211 shape=(1, 9000, 1)
logits [[ 1.0983045 -1.8380432  1.102462  -1.2069056]]
Iteration 500 of 1000: loss=2.04 " + "l1=0.932" + "l2=1.11 f=-0.185 shape=(1, 9000, 1)
logits [[ 0.87007153 -1.6938993   0.89000475 -0.8043145 ]]
Iteration 600 of 1000: loss=1.74 " + "l1=0.564" + "l2=1.18 f=-0.157 shape=(1, 9000, 1)
logits [[ 0.5466084  -1.5277969   0.68846023 -0.33722365]]
Iteration 700 of 1000: loss=1.49 " + "l1=0.245" + "l2=1.24 f=-0.131 shape=(1, 9000, 1)
logits [[ 0.24163482 -1.4326271   0.557314    0.11110125]]
Iteration 800 of 1000: loss=1.32 " + "l1=0.09" + "l2=1.23 f=-0.121 shape=(1, 9000, 1)
logits [[ 0.07203078 -1.3652433   0.4865079   0.32286245]]
Iteration 900 of 1000: loss=1.19 " + "l1=0.0152" + "l2=1.17 f=-0.121 shape=(1, 9000, 1)
logits [[-0.03760947 -1.353209    0.4676087   0.4400249 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.82 " + "l1=3.82" + "l2=0 f=-0.558 shape=(1, 9000, 1)
logits [[ 4.802368  -3.12627    3.0347252 -6.9429293]]
Iteration 100 of 1000: loss=2.96 " + "l1=2.54" + "l2=0.417 f=-0.459 shape=(1, 9000, 1)
logits [[ 3.1329474 -2.6488912  2.3742697 -4.6938443]]
Iteration 200 of 1000: loss=2.52 " + "l1=1.95" + "l2=0.572 f=-0.409 shape=(1, 9000, 1)
logits [[ 2.3403838 -2.4775019  2.1504333 -3.64891  ]]
Iteration 300 of 1000: loss=2.2 " + "l1=1.63" + "l2=0.568 f=-0.386 shape=(1, 9000, 1)
logits [[ 1.9559342 -2.385714   1.9531121 -3.0677638]]
Iteration 400 of 1000: loss=1.97 " + "l1=1.4" + "l2=0.57 f=-0.338 shape=(1, 9000, 1)
logits [[ 1.744369  -2.2690434  1.7418085 -2.5703604]]
Iteration 500 of 1000: loss=1.77 " + "l1=1.17" + "l2=0.6 f=-0.29 shape=(1, 9000, 1)
logits [[ 1.5218031 -2.1397452  1.5245477 -2.0657356]]
Iteration 600 of 1000: loss=1.6 " + "l1=0.977" + "l2=0.628 f=-0.255 shape=(1, 9000, 1)
logits [[ 1.3287815 -2.01119    1.3347162 -1.6709276]]
Iteration 700 of 1000: loss=1.46 " + "l1=0.809" + "l2=0.655 f=-0.231 shape=(1, 9000, 1)
logits [[ 1.1390861 -1.8560691  1.1402003 -1.3491328]]
Iteration 800 of 1000: loss=1.34 " + "l1=0.68" + "l2=0.663 f=-0.208 shape=(1, 9000, 1)
logits [[ 0.9819217 -1.7779813  1.0290623 -1.0638742]]
Iteration 900 of 1000: loss=1.24 " + "l1=0.572" + "l2=0.666 f=-0.193 shape=(1, 9000, 1)
logits [[ 0.81618387 -1.7215806   0.94613063 -0.8135694 ]]
--- 291.13884592056274 seconds ---
Adv result:3
Loading record A00465
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0383 " + "l1=0.0383" + "l2=0 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.7344797 -2.0969484  1.7302948 -2.5484333]]
Iteration 100 of 1000: loss=0.0381 " + "l1=0.038" + "l2=0.000137 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.7159557 -2.0795972  1.718756  -2.5289562]]
Iteration 200 of 1000: loss=0.038 " + "l1=0.0379" + "l2=0.000124 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.7160397 -2.0764554  1.7160441 -2.5282314]]
Iteration 300 of 1000: loss=0.038 " + "l1=0.0379" + "l2=0.000166 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.7130903 -2.0723176  1.7132521 -2.5251262]]
Iteration 400 of 1000: loss=0.038 " + "l1=0.0378" + "l2=0.000198 f=-0.292 shape=(1, 9000, 1)
logits [[ 1.7102423 -2.0682456  1.7104806 -2.5220766]]
Iteration 500 of 1000: loss=0.038 " + "l1=0.0377" + "l2=0.000271 f=-0.292 shape=(1, 9000, 1)
logits [[ 1.7074721 -2.0641809  1.7078031 -2.5190902]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.383 " + "l1=0.383" + "l2=0 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.7344797 -2.0969484  1.7302948 -2.5484333]]
Iteration 100 of 1000: loss=0.363 " + "l1=0.349" + "l2=0.0139 f=-0.286 shape=(1, 9000, 1)
logits [[ 1.5868095 -1.9049797  1.5867964 -2.4114072]]
Iteration 200 of 1000: loss=0.347 " + "l1=0.315" + "l2=0.0317 f=-0.277 shape=(1, 9000, 1)
logits [[ 1.4557699 -1.6949232  1.455343  -2.3233721]]
Iteration 300 of 1000: loss=0.333 " + "l1=0.298" + "l2=0.0353 f=-0.27 shape=(1, 9000, 1)
logits [[ 1.3909708 -1.5862713  1.390914  -2.2755075]]
Iteration 400 of 1000: loss=0.321 " + "l1=0.285" + "l2=0.0351 f=-0.264 shape=(1, 9000, 1)
logits [[ 1.3450937 -1.5095485  1.3440088 -2.2372997]]
Iteration 500 of 1000: loss=0.309 " + "l1=0.273" + "l2=0.0359 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.2985501 -1.4341806  1.300453  -2.2044704]]
Iteration 600 of 1000: loss=0.301 " + "l1=0.264" + "l2=0.0364 f=-0.258 shape=(1, 9000, 1)
logits [[ 1.2648317 -1.3784839  1.2647074 -2.1846955]]
Iteration 700 of 1000: loss=0.295 " + "l1=0.257" + "l2=0.0373 f=-0.257 shape=(1, 9000, 1)
logits [[ 1.2370567 -1.337201   1.2363893 -2.163033 ]]
Iteration 800 of 1000: loss=0.291 " + "l1=0.254" + "l2=0.0372 f=-0.256 shape=(1, 9000, 1)
logits [[ 1.2213912 -1.3143423  1.2205576 -2.1508572]]
Iteration 900 of 1000: loss=0.288 " + "l1=0.25" + "l2=0.038 f=-0.255 shape=(1, 9000, 1)
logits [[ 1.2069019 -1.296002   1.2069957 -2.1397517]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.83 " + "l1=3.83" + "l2=0 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.7344797 -2.0969484  1.7302948 -2.5484333]]
Iteration 100 of 1000: loss=1.87 " + "l1=1.06" + "l2=0.806 f=-0.298 shape=(1, 9000, 1)
logits [[ 0.55300134 -0.4733289   0.591332   -1.8616352 ]]
Iteration 200 of 1000: loss=1.51 " + "l1=0.644" + "l2=0.868 f=-0.31 shape=(1, 9000, 1)
logits [[ 0.34768772 -0.25061396  0.39371598 -1.729965  ]]
Iteration 300 of 1000: loss=1.31 " + "l1=0.425" + "l2=0.881 f=-0.323 shape=(1, 9000, 1)
logits [[ 0.19050454 -0.13145836  0.2936695  -1.6459391 ]]
Iteration 400 of 1000: loss=1.18 " + "l1=0.306" + "l2=0.877 f=-0.323 shape=(1, 9000, 1)
logits [[ 0.11599773 -0.07319378  0.23291738 -1.5674298 ]]
Iteration 500 of 1000: loss=1.08 " + "l1=0.204" + "l2=0.879 f=-0.318 shape=(1, 9000, 1)
logits [[ 0.05125187 -0.01832444  0.18558723 -1.4895704 ]]
Iteration 600 of 1000: loss=1 " + "l1=0.113" + "l2=0.889 f=-0.314 shape=(1, 9000, 1)
logits [[-0.04035687  0.03417598  0.14752528 -1.397714  ]]
Iteration 700 of 1000: loss=0.945 " + "l1=0.0586" + "l2=0.886 f=-0.309 shape=(1, 9000, 1)
logits [[-0.07001462  0.05808781  0.11668667 -1.3417561 ]]
Iteration 800 of 1000: loss=0.884 " + "l1=0.0136" + "l2=0.871 f=-0.307 shape=(1, 9000, 1)
logits [[-0.1110708   0.07948943  0.09308245 -1.2911245 ]]
Iteration 900 of 1000: loss=0.833 " + "l1=0" + "l2=0.833 f=-0.323 shape=(1, 9000, 1)
logits [[-0.22166169  0.09276647  0.09146034 -1.2544645 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.11 " + "l1=2.11" + "l2=0 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.7344797 -2.0969484  1.7302948 -2.5484333]]
Iteration 100 of 1000: loss=1.33 " + "l1=0.992" + "l2=0.343 f=-0.279 shape=(1, 9000, 1)
logits [[ 0.9125174  -0.88704133  0.91693115 -2.0602827 ]]
Iteration 200 of 1000: loss=1.18 " + "l1=0.794" + "l2=0.386 f=-0.282 shape=(1, 9000, 1)
logits [[ 0.7573086  -0.6731868   0.76960295 -1.9802508 ]]
Iteration 300 of 1000: loss=1.08 " + "l1=0.661" + "l2=0.415 f=-0.29 shape=(1, 9000, 1)
logits [[ 0.6381565 -0.5438435  0.6582689 -1.9131639]]
Iteration 400 of 1000: loss=0.989 " + "l1=0.566" + "l2=0.423 f=-0.294 shape=(1, 9000, 1)
logits [[ 0.5611115 -0.4562024  0.5730941 -1.853462 ]]
Iteration 500 of 1000: loss=0.929 " + "l1=0.514" + "l2=0.416 f=-0.292 shape=(1, 9000, 1)
logits [[ 0.51938736 -0.40834486  0.52531785 -1.8050351 ]]
Iteration 600 of 1000: loss=0.884 " + "l1=0.465" + "l2=0.419 f=-0.296 shape=(1, 9000, 1)
logits [[ 0.4591259  -0.36749563  0.47778854 -1.7529275 ]]
Iteration 700 of 1000: loss=0.851 " + "l1=0.424" + "l2=0.428 f=-0.295 shape=(1, 9000, 1)
logits [[ 0.39670756 -0.33080828  0.43955722 -1.6872836 ]]
Iteration 800 of 1000: loss=0.825 " + "l1=0.391" + "l2=0.434 f=-0.293 shape=(1, 9000, 1)
logits [[ 0.34636834 -0.30198956  0.40845844 -1.623847  ]]
Iteration 900 of 1000: loss=0.803 " + "l1=0.36" + "l2=0.443 f=-0.292 shape=(1, 9000, 1)
logits [[ 0.30035037 -0.27423882  0.38112235 -1.5732569 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.97 " + "l1=2.97" + "l2=0 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.7344797 -2.0969484  1.7302948 -2.5484333]]
Iteration 100 of 1000: loss=1.65 " + "l1=1.12" + "l2=0.533 f=-0.285 shape=(1, 9000, 1)
logits [[ 0.7608006 -0.6776376  0.7657594 -1.9869488]]
Iteration 200 of 1000: loss=1.39 " + "l1=0.747" + "l2=0.644 f=-0.303 shape=(1, 9000, 1)
logits [[ 0.5052892 -0.4196292  0.5438789 -1.8411248]]
Iteration 300 of 1000: loss=1.22 " + "l1=0.566" + "l2=0.658 f=-0.309 shape=(1, 9000, 1)
logits [[ 0.37346074 -0.30036843  0.42964342 -1.7386963 ]]
Iteration 400 of 1000: loss=1.12 " + "l1=0.493" + "l2=0.625 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.31971848 -0.25348654  0.382115   -1.6669596 ]]
Iteration 500 of 1000: loss=1.04 " + "l1=0.421" + "l2=0.618 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.25529346 -0.20473444  0.3380303  -1.6041342 ]]
Iteration 600 of 1000: loss=0.978 " + "l1=0.346" + "l2=0.632 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.1806762  -0.15029575  0.29588422 -1.5464138 ]]
Iteration 700 of 1000: loss=0.928 " + "l1=0.278" + "l2=0.649 f=-0.309 shape=(1, 9000, 1)
logits [[ 0.10962686 -0.10657763  0.2526163  -1.4913415 ]]
Iteration 800 of 1000: loss=0.891 " + "l1=0.215" + "l2=0.676 f=-0.312 shape=(1, 9000, 1)
logits [[ 0.02954854 -0.062153    0.21497297 -1.4314234 ]]
Iteration 900 of 1000: loss=0.861 " + "l1=0.158" + "l2=0.703 f=-0.317 shape=(1, 9000, 1)
logits [[-0.04203036 -0.02489067  0.1784975  -1.3779864 ]]
--- 263.4370732307434 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=4.18e-05 " + "l1=4.18e-05" + "l2=0 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.7344797 -2.0969484  1.7302948 -2.5484333]]
Iteration 100 of 1000: loss=4.05e-05 " + "l1=0" + "l2=4.05e-05 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.726863  -2.095892   1.7318398 -2.5422447]]
Iteration 200 of 1000: loss=1.44e-05 " + "l1=0" + "l2=1.44e-05 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.7307018 -2.0962963  1.7308271 -2.5452874]]
Iteration 300 of 1000: loss=1.8e-05 " + "l1=0" + "l2=1.8e-05 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.7306559 -2.0961542  1.730685  -2.545389 ]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=2.09e-05 " + "l1=2.09e-05" + "l2=0 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.7344797 -2.0969484  1.7302948 -2.5484333]]
Iteration 100 of 1000: loss=3.53e-05 " + "l1=0" + "l2=3.53e-05 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.7273836 -2.096143   1.7317854 -2.542655 ]]
const [0.0025]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.05e-05 " + "l1=1.05e-05" + "l2=0 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.7344797 -2.0969484  1.7302948 -2.5484333]]
Iteration 100 of 1000: loss=3.19e-05 " + "l1=0" + "l2=3.19e-05 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.7278752 -2.0961845  1.7317076 -2.5430896]]
const [0.00125]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.23e-06 " + "l1=5.23e-06" + "l2=0 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.7344797 -2.0969484  1.7302948 -2.5484333]]
Iteration 100 of 1000: loss=2.59e-05 " + "l1=0" + "l2=2.59e-05 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.728522  -2.0962224  1.7315719 -2.5436785]]
const [0.000625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.62e-06 " + "l1=2.62e-06" + "l2=0 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.7344797 -2.0969484  1.7302948 -2.5484333]]
Iteration 100 of 1000: loss=2.05e-05 " + "l1=0" + "l2=2.05e-05 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.7293537 -2.0963187  1.7314521 -2.5443614]]
--- 49.89813256263733 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0428 " + "l1=0.0428" + "l2=0 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.7344797 -2.0969484  1.7302948 -2.5484333]]
Iteration 100 of 1000: loss=0.0425 " + "l1=0.0423" + "l2=0.000212 f=-0.292 shape=(1, 9000, 1)
logits [[ 1.7100923 -2.0841467  1.718046  -2.513096 ]]
Iteration 200 of 1000: loss=0.0424 " + "l1=0.0423" + "l2=0.000187 f=-0.292 shape=(1, 9000, 1)
logits [[ 1.708997  -2.0813224  1.7151165 -2.5099022]]
Iteration 300 of 1000: loss=0.0424 " + "l1=0.0422" + "l2=0.000232 f=-0.291 shape=(1, 9000, 1)
logits [[ 1.7053939 -2.078201   1.7121369 -2.504287 ]]
Iteration 400 of 1000: loss=0.0424 " + "l1=0.0421" + "l2=0.000291 f=-0.291 shape=(1, 9000, 1)
logits [[ 1.701326  -2.074908   1.7092737 -2.4984057]]
Iteration 500 of 1000: loss=0.0424 " + "l1=0.042" + "l2=0.000356 f=-0.29 shape=(1, 9000, 1)
logits [[ 1.6976416 -2.072037   1.7067682 -2.493055 ]]
Iteration 600 of 1000: loss=0.0424 " + "l1=0.0419" + "l2=0.000435 f=-0.29 shape=(1, 9000, 1)
logits [[ 1.6939449 -2.069033   1.7043315 -2.4879148]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.428 " + "l1=0.428" + "l2=0 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.7344797 -2.0969484  1.7302948 -2.5484333]]
Iteration 100 of 1000: loss=0.404 " + "l1=0.389" + "l2=0.0143 f=-0.275 shape=(1, 9000, 1)
logits [[ 1.578848  -1.9784194  1.5953747 -2.297355 ]]
Iteration 200 of 1000: loss=0.394 " + "l1=0.376" + "l2=0.0186 f=-0.266 shape=(1, 9000, 1)
logits [[ 1.5364741 -1.9306581  1.5429333 -2.2125995]]
Iteration 300 of 1000: loss=0.386 " + "l1=0.363" + "l2=0.0232 f=-0.256 shape=(1, 9000, 1)
logits [[ 1.493646  -1.8834753  1.4959503 -2.1315646]]
Iteration 400 of 1000: loss=0.377 " + "l1=0.349" + "l2=0.0288 f=-0.247 shape=(1, 9000, 1)
logits [[ 1.4321642 -1.8074273  1.4361142 -2.0499465]]
Iteration 500 of 1000: loss=0.369 " + "l1=0.336" + "l2=0.0323 f=-0.239 shape=(1, 9000, 1)
logits [[ 1.3808223 -1.7382457  1.3820485 -1.9819354]]
Iteration 600 of 1000: loss=0.36 " + "l1=0.325" + "l2=0.0349 f=-0.232 shape=(1, 9000, 1)
logits [[ 1.3284416 -1.6685214  1.3320634 -1.9188634]]
Iteration 700 of 1000: loss=0.351 " + "l1=0.313" + "l2=0.0382 f=-0.224 shape=(1, 9000, 1)
logits [[ 1.2724918 -1.5918653  1.2763566 -1.8538496]]
Iteration 800 of 1000: loss=0.343 " + "l1=0.304" + "l2=0.039 f=-0.219 shape=(1, 9000, 1)
logits [[ 1.2406878 -1.5609152  1.2418976 -1.7972444]]
Iteration 900 of 1000: loss=0.336 " + "l1=0.296" + "l2=0.0397 f=-0.214 shape=(1, 9000, 1)
logits [[ 1.2154881 -1.5470375  1.2167944 -1.7423687]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.28 " + "l1=4.28" + "l2=0 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.7344797 -2.0969484  1.7302948 -2.5484333]]
Iteration 100 of 1000: loss=2.14 " + "l1=0.793" + "l2=1.34 f=-0.0847 shape=(1, 9000, 1)
logits [[ 0.49113843 -1.0706787   0.51688343 -0.27614027]]
Iteration 200 of 1000: loss=1.5 " + "l1=0.00906" + "l2=1.5 f=-0.0561 shape=(1, 9000, 1)
logits [[ 0.22016214 -1.006427    0.28549507  0.27643225]]
Iteration 300 of 1000: loss=1.21 " + "l1=0.015" + "l2=1.2 f=-0.0647 shape=(1, 9000, 1)
logits [[ 0.19126603 -0.991795    0.278366    0.26337868]]
Iteration 400 of 1000: loss=1.03 " + "l1=0" + "l2=1.03 f=-0.0751 shape=(1, 9000, 1)
logits [[ 0.15701698 -1.006076    0.26354203  0.28515208]]
Iteration 500 of 1000: loss=0.888 " + "l1=0" + "l2=0.888 f=-0.084 shape=(1, 9000, 1)
logits [[ 0.1352396  -1.0656934   0.29038453  0.30416209]]
Iteration 600 of 1000: loss=0.794 " + "l1=0" + "l2=0.794 f=-0.0923 shape=(1, 9000, 1)
logits [[ 0.10619654 -1.0964415   0.30374536  0.31744802]]
Iteration 700 of 1000: loss=0.702 " + "l1=0" + "l2=0.702 f=-0.0918 shape=(1, 9000, 1)
logits [[ 0.10484409 -1.1202102   0.32212138  0.32604122]]
Iteration 800 of 1000: loss=0.611 " + "l1=0.00302" + "l2=0.608 f=-0.0942 shape=(1, 9000, 1)
logits [[ 0.12249762 -1.1731787   0.3384855   0.33546895]]
Iteration 900 of 1000: loss=0.536 " + "l1=0.00606" + "l2=0.529 f=-0.0955 shape=(1, 9000, 1)
logits [[ 0.14203846 -1.2171534   0.34957522  0.34351966]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.36 " + "l1=2.36" + "l2=0 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.7344797 -2.0969484  1.7302948 -2.5484333]]
Iteration 100 of 1000: loss=1.66 " + "l1=1.27" + "l2=0.389 f=-0.18 shape=(1, 9000, 1)
logits [[ 0.9506342 -1.2979133  0.9651007 -1.3366493]]
Iteration 200 of 1000: loss=1.43 " + "l1=0.933" + "l2=0.494 f=-0.129 shape=(1, 9000, 1)
logits [[ 0.79470223 -1.2058057   0.79663825 -0.9003365 ]]
Iteration 300 of 1000: loss=1.26 " + "l1=0.674" + "l2=0.583 f=-0.111 shape=(1, 9000, 1)
logits [[ 0.61729324 -1.1350318   0.64909095 -0.57577634]]
Iteration 400 of 1000: loss=1.1 " + "l1=0.506" + "l2=0.598 f=-0.0971 shape=(1, 9000, 1)
logits [[ 0.51021034 -1.0901977   0.55557257 -0.3639803 ]]
Iteration 500 of 1000: loss=0.875 " + "l1=0.218" + "l2=0.657 f=-0.0999 shape=(1, 9000, 1)
logits [[ 0.3068398  -1.0362843   0.36312678 -0.03339501]]
Iteration 600 of 1000: loss=0.597 " + "l1=0.00508" + "l2=0.592 f=-0.0931 shape=(1, 9000, 1)
logits [[ 0.2110599  -1.1193476   0.2726134   0.26337475]]
Iteration 700 of 1000: loss=0.451 " + "l1=0" + "l2=0.451 f=-0.0898 shape=(1, 9000, 1)
logits [[ 0.26071608 -1.205718    0.29242387  0.2934704 ]]
Iteration 800 of 1000: loss=0.372 " + "l1=0" + "l2=0.372 f=-0.0853 shape=(1, 9000, 1)
logits [[ 0.29696915 -1.2508744   0.29886082  0.31364444]]
Iteration 900 of 1000: loss=0.314 " + "l1=0" + "l2=0.314 f=-0.0878 shape=(1, 9000, 1)
logits [[ 0.2994933 -1.2788899  0.3079525  0.3201025]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.39 " + "l1=1.39" + "l2=0 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.7344797 -2.0969484  1.7302948 -2.5484333]]
Iteration 100 of 1000: loss=1.13 " + "l1=0.986" + "l2=0.142 f=-0.222 shape=(1, 9000, 1)
logits [[ 1.2356144 -1.558979   1.2356495 -1.7993805]]
Iteration 200 of 1000: loss=1.03 " + "l1=0.849" + "l2=0.183 f=-0.193 shape=(1, 9000, 1)
logits [[ 1.083129  -1.4281737  1.0911249 -1.5196686]]
Iteration 300 of 1000: loss=0.962 " + "l1=0.755" + "l2=0.206 f=-0.169 shape=(1, 9000, 1)
logits [[ 0.99885356 -1.3514456   1.0013311  -1.3230909 ]]
Iteration 400 of 1000: loss=0.902 " + "l1=0.69" + "l2=0.212 f=-0.156 shape=(1, 9000, 1)
logits [[ 0.9355477 -1.330468   0.9472494 -1.1767772]]
Iteration 500 of 1000: loss=0.841 " + "l1=0.615" + "l2=0.226 f=-0.145 shape=(1, 9000, 1)
logits [[ 0.8519496  -1.3178391   0.88924164 -1.0038085 ]]
Iteration 600 of 1000: loss=0.752 " + "l1=0.506" + "l2=0.246 f=-0.138 shape=(1, 9000, 1)
logits [[ 0.71821   -1.3219383  0.8052196 -0.7528242]]
Iteration 700 of 1000: loss=0.652 " + "l1=0.383" + "l2=0.269 f=-0.132 shape=(1, 9000, 1)
logits [[ 0.5886591 -1.335749   0.6991028 -0.4798311]]
Iteration 800 of 1000: loss=0.505 " + "l1=0.211" + "l2=0.294 f=-0.11 shape=(1, 9000, 1)
logits [[ 0.50304973 -1.4118737   0.55936694 -0.08967602]]
Iteration 900 of 1000: loss=0.382 " + "l1=0.052" + "l2=0.33 f=-0.0919 shape=(1, 9000, 1)
logits [[ 0.37267995 -1.3912566   0.40537515  0.24544284]]
--- 272.71698808670044 seconds ---
Adv result:3
Loading record A00486
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0477 " + "l1=0.0477" + "l2=0 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.565607  -2.2039566  1.7731569 -3.0695941]]
Iteration 100 of 1000: loss=0.0472 " + "l1=0.047" + "l2=0.000263 f=-0.232 shape=(1, 9000, 1)
logits [[ 2.526032  -2.1701207  1.746808  -3.0292869]]
Iteration 200 of 1000: loss=0.0471 " + "l1=0.0468" + "l2=0.000296 f=-0.231 shape=(1, 9000, 1)
logits [[ 2.5173213 -2.162064   1.7401463 -3.0208228]]
Iteration 300 of 1000: loss=0.047 " + "l1=0.0466" + "l2=0.000364 f=-0.231 shape=(1, 9000, 1)
logits [[ 2.5069873 -2.1529198  1.7322721 -3.01066  ]]
Iteration 400 of 1000: loss=0.0469 " + "l1=0.0464" + "l2=0.000485 f=-0.231 shape=(1, 9000, 1)
logits [[ 2.496673  -2.1434555  1.7242336 -3.0006058]]
Iteration 500 of 1000: loss=0.0468 " + "l1=0.0462" + "l2=0.00058 f=-0.231 shape=(1, 9000, 1)
logits [[ 2.485754  -2.1328037  1.7153924 -2.9915175]]
Iteration 600 of 1000: loss=0.0467 " + "l1=0.046" + "l2=0.000707 f=-0.231 shape=(1, 9000, 1)
logits [[ 2.4748862 -2.1227586  1.7069985 -2.9823923]]
Iteration 700 of 1000: loss=0.0466 " + "l1=0.0458" + "l2=0.000864 f=-0.231 shape=(1, 9000, 1)
logits [[ 2.4639506 -2.1136272  1.6991651 -2.973161 ]]
Iteration 800 of 1000: loss=0.0465 " + "l1=0.0456" + "l2=0.000898 f=-0.231 shape=(1, 9000, 1)
logits [[ 2.4531548 -2.104932   1.6917568 -2.9639251]]
Iteration 900 of 1000: loss=0.0464 " + "l1=0.0454" + "l2=0.00106 f=-0.231 shape=(1, 9000, 1)
logits [[ 2.4417439 -2.0959437  1.6839517 -2.9541817]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.477 " + "l1=0.477" + "l2=0 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.565607  -2.2039566  1.7731569 -3.0695941]]
Iteration 100 of 1000: loss=0.434 " + "l1=0.415" + "l2=0.0188 f=-0.221 shape=(1, 9000, 1)
logits [[ 2.249409  -1.8985068  1.5400113 -2.7759998]]
Iteration 200 of 1000: loss=0.404 " + "l1=0.374" + "l2=0.0304 f=-0.207 shape=(1, 9000, 1)
logits [[ 2.0732877 -1.6648196  1.358646  -2.5954547]]
Iteration 300 of 1000: loss=0.379 " + "l1=0.338" + "l2=0.0417 f=-0.199 shape=(1, 9000, 1)
logits [[ 1.8968297 -1.4805305  1.2207578 -2.4342089]]
Iteration 400 of 1000: loss=0.361 " + "l1=0.31" + "l2=0.0503 f=-0.195 shape=(1, 9000, 1)
logits [[ 1.7423131 -1.3598226  1.1266776 -2.2882025]]
Iteration 500 of 1000: loss=0.345 " + "l1=0.289" + "l2=0.0562 f=-0.195 shape=(1, 9000, 1)
logits [[ 1.6116965 -1.273873   1.0572042 -2.17593  ]]
Iteration 600 of 1000: loss=0.333 " + "l1=0.273" + "l2=0.0596 f=-0.197 shape=(1, 9000, 1)
logits [[ 1.5071551 -1.2231563  1.0101148 -2.080939 ]]
Iteration 700 of 1000: loss=0.322 " + "l1=0.261" + "l2=0.061 f=-0.202 shape=(1, 9000, 1)
logits [[ 1.4075612  -1.2029334   0.97984713 -1.9924138 ]]
Iteration 800 of 1000: loss=0.313 " + "l1=0.249" + "l2=0.0639 f=-0.206 shape=(1, 9000, 1)
logits [[ 1.3090096  -1.1833748   0.95513415 -1.9047266 ]]
Iteration 900 of 1000: loss=0.304 " + "l1=0.238" + "l2=0.0663 f=-0.207 shape=(1, 9000, 1)
logits [[ 1.218964  -1.1603724  0.9432361 -1.830446 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.77 " + "l1=4.77" + "l2=0 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.565607  -2.2039566  1.7731569 -3.0695941]]
Iteration 100 of 1000: loss=1.91 " + "l1=1.13" + "l2=0.786 f=-0.193 shape=(1, 9000, 1)
logits [[ 0.58092695 -0.54680264  0.58029956 -1.3851022 ]]
Iteration 200 of 1000: loss=1.28 " + "l1=0.388" + "l2=0.89 f=-0.259 shape=(1, 9000, 1)
logits [[ 0.22486536 -0.14246406  0.2452431  -1.3634297 ]]
Iteration 300 of 1000: loss=0.927 " + "l1=0.00278" + "l2=0.924 f=-0.291 shape=(1, 9000, 1)
logits [[-1.5775381e-02 -7.5918995e-04  2.0201043e-03 -1.1496221e+00]]
Iteration 400 of 1000: loss=0.82 " + "l1=0.00256" + "l2=0.817 f=-0.295 shape=(1, 9000, 1)
logits [[-0.01288204 -0.01543817 -0.0136163  -1.1363591 ]]
Iteration 500 of 1000: loss=0.742 " + "l1=0" + "l2=0.742 f=-0.305 shape=(1, 9000, 1)
logits [[-0.0385128  -0.02973492 -0.03678029 -1.1165708 ]]
Iteration 600 of 1000: loss=0.682 " + "l1=0.00276" + "l2=0.679 f=-0.305 shape=(1, 9000, 1)
logits [[-0.04929752 -0.05181511 -0.04905188 -1.0713415 ]]
Iteration 700 of 1000: loss=0.644 " + "l1=0.00485" + "l2=0.639 f=-0.311 shape=(1, 9000, 1)
logits [[-0.08542932 -0.07250594 -0.06765708 -1.0185807 ]]
Iteration 800 of 1000: loss=0.607 " + "l1=0.00352" + "l2=0.603 f=-0.314 shape=(1, 9000, 1)
logits [[-0.10788715 -0.0890484  -0.08552589 -0.97514373]]
Iteration 900 of 1000: loss=0.579 " + "l1=0" + "l2=0.579 f=-0.313 shape=(1, 9000, 1)
logits [[-0.10869762 -0.10205898 -0.10348129 -0.9393643 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.62 " + "l1=2.62" + "l2=0 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.565607  -2.2039566  1.7731569 -3.0695941]]
Iteration 100 of 1000: loss=1.49 " + "l1=1.05" + "l2=0.447 f=-0.185 shape=(1, 9000, 1)
logits [[ 0.99102783 -0.91015106  0.8405637  -1.6623822 ]]
Iteration 200 of 1000: loss=1.09 " + "l1=0.63" + "l2=0.464 f=-0.19 shape=(1, 9000, 1)
logits [[ 0.56707424 -0.57385045  0.57096785 -1.3258407 ]]
Iteration 300 of 1000: loss=0.939 " + "l1=0.462" + "l2=0.477 f=-0.212 shape=(1, 9000, 1)
logits [[ 0.4142482  -0.42537528  0.40928566 -1.2458668 ]]
Iteration 400 of 1000: loss=0.827 " + "l1=0.328" + "l2=0.499 f=-0.239 shape=(1, 9000, 1)
logits [[ 0.2616411  -0.32356375  0.27313912 -1.166442  ]]
Iteration 500 of 1000: loss=0.719 " + "l1=0.179" + "l2=0.539 f=-0.265 shape=(1, 9000, 1)
logits [[ 0.09076145 -0.2273692   0.09888735 -1.0226873 ]]
Iteration 600 of 1000: loss=0.664 " + "l1=0.129" + "l2=0.535 f=-0.279 shape=(1, 9000, 1)
logits [[ 0.0378003  -0.1959047   0.03919375 -0.9971568 ]]
Iteration 700 of 1000: loss=0.611 " + "l1=0.052" + "l2=0.559 f=-0.285 shape=(1, 9000, 1)
logits [[-0.04691444 -0.141431   -0.05030353 -0.9033393 ]]
Iteration 800 of 1000: loss=0.555 " + "l1=0.00483" + "l2=0.55 f=-0.279 shape=(1, 9000, 1)
logits [[-0.10871308 -0.11420076 -0.10541608 -0.7866625 ]]
Iteration 900 of 1000: loss=0.53 " + "l1=0.0104" + "l2=0.519 f=-0.273 shape=(1, 9000, 1)
logits [[-0.11312693 -0.13201235 -0.11662501 -0.7295871 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.55 " + "l1=1.55" + "l2=0 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.565607  -2.2039566  1.7731569 -3.0695941]]
Iteration 100 of 1000: loss=1.1 " + "l1=0.916" + "l2=0.189 f=-0.19 shape=(1, 9000, 1)
logits [[ 1.5771446 -1.2415019  1.048815  -2.143989 ]]
Iteration 200 of 1000: loss=0.896 " + "l1=0.64" + "l2=0.256 f=-0.171 shape=(1, 9000, 1)
logits [[ 1.0233345 -0.945984   0.8816394 -1.6420603]]
Iteration 300 of 1000: loss=0.755 " + "l1=0.492" + "l2=0.263 f=-0.169 shape=(1, 9000, 1)
logits [[ 0.73058784 -0.7822981   0.72612566 -1.3508093 ]]
Iteration 400 of 1000: loss=0.694 " + "l1=0.436" + "l2=0.258 f=-0.178 shape=(1, 9000, 1)
logits [[ 0.62800694 -0.71482885  0.62138295 -1.2445828 ]]
Iteration 500 of 1000: loss=0.655 " + "l1=0.392" + "l2=0.263 f=-0.189 shape=(1, 9000, 1)
logits [[ 0.53933275 -0.66418374  0.54216444 -1.1722609 ]]
Iteration 600 of 1000: loss=0.611 " + "l1=0.338" + "l2=0.273 f=-0.215 shape=(1, 9000, 1)
logits [[ 0.4462398  -0.58517087  0.45510826 -1.1768627 ]]
Iteration 700 of 1000: loss=0.589 " + "l1=0.321" + "l2=0.268 f=-0.229 shape=(1, 9000, 1)
logits [[ 0.41190955 -0.57650524  0.40984973 -1.1616292 ]]
Iteration 800 of 1000: loss=0.575 " + "l1=0.301" + "l2=0.274 f=-0.24 shape=(1, 9000, 1)
logits [[ 0.36162725 -0.5650972   0.36154506 -1.118013  ]]
Iteration 900 of 1000: loss=0.562 " + "l1=0.283" + "l2=0.279 f=-0.249 shape=(1, 9000, 1)
logits [[ 0.31991234 -0.55011314  0.32096842 -1.0865247 ]]
--- 291.2206063270569 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00792 " + "l1=0.00792" + "l2=0 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.565607  -2.2039566  1.7731569 -3.0695941]]
Iteration 100 of 1000: loss=0.00773 " + "l1=0.00759" + "l2=0.000141 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.5389054 -2.2125711  1.7799729 -3.0409849]]
Iteration 200 of 1000: loss=0.00767 " + "l1=0.00754" + "l2=0.000126 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.536015  -2.2156353  1.7818011 -3.0373752]]
Iteration 300 of 1000: loss=0.00764 " + "l1=0.00747" + "l2=0.000169 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.5307946 -2.2188308  1.7838725 -3.0311835]]
Iteration 400 of 1000: loss=0.00759 " + "l1=0.00739" + "l2=0.000197 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.525123  -2.2217407  1.7857275 -3.0243204]]
Iteration 500 of 1000: loss=0.00755 " + "l1=0.00732" + "l2=0.000235 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.5191915 -2.2243047  1.7873338 -3.0169215]]
Iteration 600 of 1000: loss=0.00756 " + "l1=0.00724" + "l2=0.000316 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.513011  -2.2267432  1.7887799 -3.0092828]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0792 " + "l1=0.0792" + "l2=0 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.565607  -2.2039566  1.7731569 -3.0695941]]
Iteration 100 of 1000: loss=0.0643 " + "l1=0.0584" + "l2=0.00589 f=-0.236 shape=(1, 9000, 1)
logits [[ 2.404223  -2.2622638  1.8199022 -2.9047647]]
Iteration 200 of 1000: loss=0.0565 " + "l1=0.0473" + "l2=0.00919 f=-0.236 shape=(1, 9000, 1)
logits [[ 2.3135886 -2.2918706  1.8404485 -2.8065562]]
Iteration 300 of 1000: loss=0.049 " + "l1=0.0362" + "l2=0.0128 f=-0.236 shape=(1, 9000, 1)
logits [[ 2.2238717 -2.3216388  1.8613889 -2.7073114]]
Iteration 400 of 1000: loss=0.0414 " + "l1=0.0254" + "l2=0.0159 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.1357355 -2.3513575  1.8815011 -2.6068661]]
Iteration 500 of 1000: loss=0.0334 " + "l1=0.0148" + "l2=0.0187 f=-0.233 shape=(1, 9000, 1)
logits [[ 2.0498385 -2.380004   1.9022491 -2.5041745]]
Iteration 600 of 1000: loss=0.0253 " + "l1=0.00399" + "l2=0.0213 f=-0.23 shape=(1, 9000, 1)
logits [[ 1.9644347 -2.4078465  1.9245425 -2.4027908]]
Iteration 700 of 1000: loss=0.0192 " + "l1=0.000132" + "l2=0.019 f=-0.229 shape=(1, 9000, 1)
logits [[ 1.924476  -2.4156256  1.923155  -2.346589 ]]
Iteration 800 of 1000: loss=0.0158 " + "l1=0.000149" + "l2=0.0157 f=-0.228 shape=(1, 9000, 1)
logits [[ 1.9174483 -2.4137182  1.9159567 -2.3320153]]
Iteration 900 of 1000: loss=0.0134 " + "l1=9.34e-05" + "l2=0.0133 f=-0.228 shape=(1, 9000, 1)
logits [[ 1.9127059 -2.4130669  1.9117721 -2.3235872]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0436 " + "l1=0.0436" + "l2=0 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.565607  -2.2039566  1.7731569 -3.0695941]]
Iteration 100 of 1000: loss=0.0388 " + "l1=0.0368" + "l2=0.00196 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.4710069 -2.2385576  1.8011829 -2.9719293]]
Iteration 200 of 1000: loss=0.0366 " + "l1=0.0337" + "l2=0.00285 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.4275892 -2.2584383  1.8141546 -2.9235141]]
Iteration 300 of 1000: loss=0.0346 " + "l1=0.0308" + "l2=0.0038 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.3838644 -2.2750587  1.8237303 -2.8740294]]
Iteration 400 of 1000: loss=0.0327 " + "l1=0.0281" + "l2=0.00459 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.3431206 -2.2897506  1.8328508 -2.8276231]]
Iteration 500 of 1000: loss=0.0307 " + "l1=0.0254" + "l2=0.00529 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.302255  -2.3019428  1.8403405 -2.7795584]]
Iteration 600 of 1000: loss=0.0287 " + "l1=0.0228" + "l2=0.00598 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.2605956 -2.315449   1.8469508 -2.7310357]]
Iteration 700 of 1000: loss=0.0266 " + "l1=0.0198" + "l2=0.00683 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.2156763 -2.3311603  1.8559656 -2.6765082]]
Iteration 800 of 1000: loss=0.0244 " + "l1=0.0169" + "l2=0.00749 f=-0.233 shape=(1, 9000, 1)
logits [[ 2.1705015 -2.3444176  1.8626479 -2.6220539]]
Iteration 900 of 1000: loss=0.0222 " + "l1=0.0139" + "l2=0.00826 f=-0.233 shape=(1, 9000, 1)
logits [[ 2.1239462 -2.3586965  1.8704282 -2.56806  ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0614 " + "l1=0.0614" + "l2=0 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.565607  -2.2039566  1.7731569 -3.0695941]]
Iteration 100 of 1000: loss=0.0522 " + "l1=0.0485" + "l2=0.00368 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.4375978 -2.2509768  1.8112104 -2.9378161]]
Iteration 200 of 1000: loss=0.0477 " + "l1=0.0422" + "l2=0.00552 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.37191   -2.2759156  1.8273597 -2.8652222]]
Iteration 300 of 1000: loss=0.0436 " + "l1=0.0362" + "l2=0.00738 f=-0.236 shape=(1, 9000, 1)
logits [[ 2.3095746 -2.2974527  1.842131  -2.7963214]]
Iteration 400 of 1000: loss=0.0394 " + "l1=0.0301" + "l2=0.00924 f=-0.236 shape=(1, 9000, 1)
logits [[ 2.2452614 -2.3197134  1.8563528 -2.7239797]]
Iteration 500 of 1000: loss=0.035 " + "l1=0.024" + "l2=0.0109 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.1809933 -2.3424442  1.8708258 -2.6495323]]
Iteration 600 of 1000: loss=0.0305 " + "l1=0.018" + "l2=0.0125 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.115713  -2.3637745  1.8837838 -2.5725026]]
Iteration 700 of 1000: loss=0.0257 " + "l1=0.0118" + "l2=0.014 f=-0.232 shape=(1, 9000, 1)
logits [[ 2.0502412 -2.384683   1.8981678 -2.4916384]]
Iteration 800 of 1000: loss=0.0209 " + "l1=0.00538" + "l2=0.0155 f=-0.23 shape=(1, 9000, 1)
logits [[ 1.9813077 -2.402272   1.9118706 -2.4120734]]
Iteration 900 of 1000: loss=0.0164 " + "l1=7.01e-05" + "l2=0.0163 f=-0.228 shape=(1, 9000, 1)
logits [[ 1.9228274 -2.4173553  1.9219223 -2.3392303]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0525 " + "l1=0.0525" + "l2=0 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.565607  -2.2039566  1.7731569 -3.0695941]]
Iteration 100 of 1000: loss=0.0457 " + "l1=0.0429" + "l2=0.00274 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.4547231 -2.2451952  1.8065916 -2.9550486]]
Iteration 200 of 1000: loss=0.0424 " + "l1=0.0384" + "l2=0.00403 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.4008768 -2.2680051  1.8212332 -2.8950076]]
Iteration 300 of 1000: loss=0.0395 " + "l1=0.0341" + "l2=0.00538 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.3475447 -2.2864192  1.8330299 -2.8353212]]
Iteration 400 of 1000: loss=0.0366 " + "l1=0.03" + "l2=0.00657 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.297634  -2.3040054  1.8441002 -2.7791975]]
Iteration 500 of 1000: loss=0.0336 " + "l1=0.0258" + "l2=0.00779 f=-0.235 shape=(1, 9000, 1)
logits [[ 2.243138  -2.3207667  1.85404   -2.7150009]]
Iteration 600 of 1000: loss=0.0304 " + "l1=0.0214" + "l2=0.00896 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.1884372 -2.3387747  1.8647254 -2.650011 ]]
Iteration 700 of 1000: loss=0.0271 " + "l1=0.017" + "l2=0.0101 f=-0.233 shape=(1, 9000, 1)
logits [[ 2.1319077 -2.3574286  1.8753415 -2.5832477]]
Iteration 800 of 1000: loss=0.0238 " + "l1=0.0127" + "l2=0.0111 f=-0.232 shape=(1, 9000, 1)
logits [[ 2.07864  -2.374249  1.886299 -2.518564]]
Iteration 900 of 1000: loss=0.0205 " + "l1=0.00823" + "l2=0.0123 f=-0.231 shape=(1, 9000, 1)
logits [[ 2.0205917 -2.3892348  1.896296  -2.450706 ]]
--- 273.8523325920105 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0564 " + "l1=0.0564" + "l2=0 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.565607  -2.2039566  1.7731569 -3.0695941]]
Iteration 100 of 1000: loss=0.0554 " + "l1=0.0549" + "l2=0.00044 f=-0.23 shape=(1, 9000, 1)
logits [[ 2.5051084 -2.1913702  1.754398  -2.988235 ]]
Iteration 200 of 1000: loss=0.055 " + "l1=0.0545" + "l2=0.000546 f=-0.229 shape=(1, 9000, 1)
logits [[ 2.4862704 -2.1900334  1.7487668 -2.9620166]]
Iteration 300 of 1000: loss=0.0547 " + "l1=0.054" + "l2=0.000692 f=-0.228 shape=(1, 9000, 1)
logits [[ 2.4648337 -2.1880054  1.7417402 -2.932274 ]]
Iteration 400 of 1000: loss=0.0544 " + "l1=0.0535" + "l2=0.0009 f=-0.228 shape=(1, 9000, 1)
logits [[ 2.443444  -2.186165   1.7344259 -2.9030895]]
Iteration 500 of 1000: loss=0.054 " + "l1=0.053" + "l2=0.00108 f=-0.227 shape=(1, 9000, 1)
logits [[ 2.4217095 -2.184724   1.727271  -2.8741899]]
Iteration 600 of 1000: loss=0.0537 " + "l1=0.0525" + "l2=0.00125 f=-0.227 shape=(1, 9000, 1)
logits [[ 2.3997538 -2.1837862  1.7207384 -2.8457723]]
Iteration 700 of 1000: loss=0.0534 " + "l1=0.052" + "l2=0.00145 f=-0.227 shape=(1, 9000, 1)
logits [[ 2.378713  -2.182843   1.7148503 -2.8188443]]
Iteration 800 of 1000: loss=0.0531 " + "l1=0.0515" + "l2=0.00162 f=-0.227 shape=(1, 9000, 1)
logits [[ 2.3565776 -2.182235   1.7089081 -2.7910151]]
Iteration 900 of 1000: loss=0.0528 " + "l1=0.051" + "l2=0.00186 f=-0.227 shape=(1, 9000, 1)
logits [[ 2.3337226 -2.181631   1.7028744 -2.7628455]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.564 " + "l1=0.564" + "l2=0 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.565607  -2.2039566  1.7731569 -3.0695941]]
Iteration 100 of 1000: loss=0.482 " + "l1=0.452" + "l2=0.0299 f=-0.211 shape=(1, 9000, 1)
logits [[ 2.079764  -2.0951514  1.6139224 -2.441297 ]]
Iteration 200 of 1000: loss=0.433 " + "l1=0.384" + "l2=0.0491 f=-0.195 shape=(1, 9000, 1)
logits [[ 1.7882422 -2.0359478  1.5187569 -2.049769 ]]
Iteration 300 of 1000: loss=0.383 " + "l1=0.314" + "l2=0.069 f=-0.173 shape=(1, 9000, 1)
logits [[ 1.4984105 -1.9798061  1.4304461 -1.6426742]]
Iteration 400 of 1000: loss=0.341 " + "l1=0.268" + "l2=0.0728 f=-0.167 shape=(1, 9000, 1)
logits [[ 1.311617  -1.9196132  1.3103099 -1.3686854]]
Iteration 500 of 1000: loss=0.314 " + "l1=0.24" + "l2=0.074 f=-0.164 shape=(1, 9000, 1)
logits [[ 1.2023283 -1.8640047  1.2048898 -1.1993625]]
Iteration 600 of 1000: loss=0.295 " + "l1=0.219" + "l2=0.0765 f=-0.16 shape=(1, 9000, 1)
logits [[ 1.1212765 -1.8176271  1.1223234 -1.0660504]]
Iteration 700 of 1000: loss=0.277 " + "l1=0.194" + "l2=0.0824 f=-0.158 shape=(1, 9000, 1)
logits [[ 1.0233684 -1.7624902  1.0245868 -0.9189778]]
Iteration 800 of 1000: loss=0.261 " + "l1=0.173" + "l2=0.0878 f=-0.159 shape=(1, 9000, 1)
logits [[ 0.92791843 -1.702858    0.9351266  -0.79579   ]]
Iteration 900 of 1000: loss=0.248 " + "l1=0.155" + "l2=0.0933 f=-0.157 shape=(1, 9000, 1)
logits [[ 0.8533594  -1.648129    0.85603476 -0.6899248 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.64 " + "l1=5.64" + "l2=0 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.565607  -2.2039566  1.7731569 -3.0695941]]
Iteration 100 of 1000: loss=1.4 " + "l1=0.0272" + "l2=1.37 f=-0.114 shape=(1, 9000, 1)
logits [[ 0.04583266 -1.2364153   0.3818009   0.35456693]]
Iteration 200 of 1000: loss=0.744 " + "l1=0.012" + "l2=0.732 f=-0.102 shape=(1, 9000, 1)
logits [[ 0.08710604 -1.2536021   0.38514957  0.37319633]]
Iteration 300 of 1000: loss=0.555 " + "l1=0.0113" + "l2=0.544 f=-0.0987 shape=(1, 9000, 1)
logits [[ 0.1212385  -1.2663114   0.38085186  0.36956847]]
Iteration 400 of 1000: loss=0.462 " + "l1=0" + "l2=0.462 f=-0.1 shape=(1, 9000, 1)
logits [[ 0.13768804 -1.2713428   0.35615987  0.37698507]]
Iteration 500 of 1000: loss=0.401 " + "l1=0" + "l2=0.401 f=-0.106 shape=(1, 9000, 1)
logits [[ 0.15396336 -1.2814267   0.34736863  0.3568191 ]]
Iteration 600 of 1000: loss=0.365 " + "l1=0" + "l2=0.365 f=-0.11 shape=(1, 9000, 1)
logits [[ 0.15811723 -1.2933475   0.34303436  0.3504038 ]]
Iteration 700 of 1000: loss=0.335 " + "l1=0.00263" + "l2=0.332 f=-0.114 shape=(1, 9000, 1)
logits [[ 0.16771801 -1.310056    0.34519792  0.3425639 ]]
Iteration 800 of 1000: loss=0.309 " + "l1=0" + "l2=0.309 f=-0.119 shape=(1, 9000, 1)
logits [[ 0.15979339 -1.323079    0.33901513  0.35023272]]
Iteration 900 of 1000: loss=0.295 " + "l1=0" + "l2=0.295 f=-0.124 shape=(1, 9000, 1)
logits [[ 0.14913383 -1.3391126   0.33157426  0.36110657]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.1 " + "l1=3.1" + "l2=0 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.565607  -2.2039566  1.7731569 -3.0695941]]
Iteration 100 of 1000: loss=1.36 " + "l1=0.797" + "l2=0.558 f=-0.0944 shape=(1, 9000, 1)
logits [[ 0.8315799 -1.4499283  0.8451019 -0.6043519]]
Iteration 200 of 1000: loss=0.725 " + "l1=0.088" + "l2=0.637 f=-0.104 shape=(1, 9000, 1)
logits [[ 0.16567978 -1.2766955   0.4279834   0.26806712]]
Iteration 300 of 1000: loss=0.461 " + "l1=0.00418" + "l2=0.457 f=-0.107 shape=(1, 9000, 1)
logits [[ 0.13205495 -1.2660002   0.35591277  0.3483086 ]]
Iteration 400 of 1000: loss=0.381 " + "l1=0" + "l2=0.381 f=-0.117 shape=(1, 9000, 1)
logits [[ 0.12812221 -1.2948194   0.34345564  0.3540637 ]]
Iteration 500 of 1000: loss=0.33 " + "l1=0.00366" + "l2=0.327 f=-0.125 shape=(1, 9000, 1)
logits [[ 0.1412013  -1.3250235   0.34543943  0.33878857]]
Iteration 600 of 1000: loss=0.295 " + "l1=0.00414" + "l2=0.291 f=-0.133 shape=(1, 9000, 1)
logits [[ 0.14503753 -1.3504556   0.34040907  0.33288687]]
Iteration 700 of 1000: loss=0.268 " + "l1=0" + "l2=0.268 f=-0.14 shape=(1, 9000, 1)
logits [[ 0.13914312 -1.3680199   0.3290866   0.33919466]]
Iteration 800 of 1000: loss=0.249 " + "l1=0" + "l2=0.249 f=-0.146 shape=(1, 9000, 1)
logits [[ 0.13214593 -1.387298    0.32604495  0.34316725]]
Iteration 900 of 1000: loss=0.23 " + "l1=0" + "l2=0.23 f=-0.152 shape=(1, 9000, 1)
logits [[ 0.12936755 -1.4057198   0.328601    0.3389862 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.83 " + "l1=1.83" + "l2=0 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.565607  -2.2039566  1.7731569 -3.0695941]]
Iteration 100 of 1000: loss=1.07 " + "l1=0.825" + "l2=0.242 f=-0.145 shape=(1, 9000, 1)
logits [[ 1.2575164 -1.8202888  1.2607226 -1.277739 ]]
Iteration 200 of 1000: loss=0.761 " + "l1=0.468" + "l2=0.293 f=-0.101 shape=(1, 9000, 1)
logits [[ 0.8267928  -1.5107745   0.86067915 -0.5790116 ]]
Iteration 300 of 1000: loss=0.531 " + "l1=0.181" + "l2=0.35 f=-0.107 shape=(1, 9000, 1)
logits [[ 0.3920944  -1.3335686   0.53521603 -0.02128885]]
Iteration 400 of 1000: loss=0.371 " + "l1=0.00039" + "l2=0.371 f=-0.124 shape=(1, 9000, 1)
logits [[ 0.11157694 -1.2937196   0.3438965   0.34269795]]
Iteration 500 of 1000: loss=0.303 " + "l1=0" + "l2=0.303 f=-0.135 shape=(1, 9000, 1)
logits [[ 0.12012824 -1.3311855   0.33335596  0.33620644]]
Iteration 600 of 1000: loss=0.266 " + "l1=0" + "l2=0.266 f=-0.143 shape=(1, 9000, 1)
logits [[ 0.1297642  -1.3578241   0.32552078  0.32881212]]
Iteration 700 of 1000: loss=0.24 " + "l1=0" + "l2=0.24 f=-0.152 shape=(1, 9000, 1)
logits [[ 0.12411918 -1.3849807   0.3253427   0.32859302]]
Iteration 800 of 1000: loss=0.22 " + "l1=0" + "l2=0.22 f=-0.157 shape=(1, 9000, 1)
logits [[ 0.11298484 -1.4121125   0.33281216  0.33651373]]
Iteration 900 of 1000: loss=0.205 " + "l1=0.0025" + "l2=0.203 f=-0.159 shape=(1, 9000, 1)
logits [[ 0.11030264 -1.4284469   0.3441013   0.33639932]]
--- 299.98022842407227 seconds ---
Adv result:3
Loading record A00509
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0505 " + "l1=0.0505" + "l2=0 f=-0.658 shape=(1, 9000, 1)
logits [[ 4.443016  -0.6030752  1.7784841 -8.249693 ]]
Iteration 100 of 1000: loss=0.0496 " + "l1=0.049" + "l2=0.000539 f=-0.662 shape=(1, 9000, 1)
logits [[ 4.360327   -0.54083055  1.7555321  -8.224009  ]]
Iteration 200 of 1000: loss=0.0493 " + "l1=0.0486" + "l2=0.000637 f=-0.663 shape=(1, 9000, 1)
logits [[ 4.340617   -0.52337193  1.7473607  -8.216368  ]]
Iteration 300 of 1000: loss=0.0491 " + "l1=0.0483" + "l2=0.000814 f=-0.664 shape=(1, 9000, 1)
logits [[ 4.319275  -0.50582    1.7397733 -8.208014 ]]
Iteration 400 of 1000: loss=0.0489 " + "l1=0.0479" + "l2=0.00102 f=-0.664 shape=(1, 9000, 1)
logits [[ 4.297929  -0.4893465  1.7329924 -8.198584 ]]
Iteration 500 of 1000: loss=0.0488 " + "l1=0.0475" + "l2=0.00127 f=-0.665 shape=(1, 9000, 1)
logits [[ 4.2785068 -0.474667   1.7271495 -8.1908245]]
Iteration 600 of 1000: loss=0.0487 " + "l1=0.0472" + "l2=0.00145 f=-0.666 shape=(1, 9000, 1)
logits [[ 4.25989    -0.46105736  1.722152   -8.183073  ]]
Iteration 700 of 1000: loss=0.0486 " + "l1=0.0469" + "l2=0.0017 f=-0.666 shape=(1, 9000, 1)
logits [[ 4.2434583  -0.44922644  1.7180449  -8.177072  ]]
Iteration 800 of 1000: loss=0.0486 " + "l1=0.0467" + "l2=0.00189 f=-0.667 shape=(1, 9000, 1)
logits [[ 4.22923    -0.43970934  1.7150624  -8.172227  ]]
Iteration 900 of 1000: loss=0.0485 " + "l1=0.0465" + "l2=0.00203 f=-0.668 shape=(1, 9000, 1)
logits [[ 4.2167335  -0.43178707  1.7126199  -8.168364  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.505 " + "l1=0.505" + "l2=0 f=-0.658 shape=(1, 9000, 1)
logits [[ 4.443016  -0.6030752  1.7784841 -8.249693 ]]
Iteration 100 of 1000: loss=0.4 " + "l1=0.348" + "l2=0.0522 f=-0.72 shape=(1, 9000, 1)
logits [[ 3.5250309  0.0480196  1.5529604 -8.005258 ]]
Iteration 200 of 1000: loss=0.349 " + "l1=0.268" + "l2=0.0813 f=-0.774 shape=(1, 9000, 1)
logits [[ 3.0482988  0.3709991  1.437473  -7.953502 ]]
Iteration 300 of 1000: loss=0.297 " + "l1=0.17" + "l2=0.127 f=-0.853 shape=(1, 9000, 1)
logits [[ 2.4558582  0.7556502  1.3125021 -7.937869 ]]
Iteration 400 of 1000: loss=0.224 " + "l1=0.0199" + "l2=0.204 f=-0.958 shape=(1, 9000, 1)
logits [[ 1.5351903  1.3357688  1.2257959 -7.9280705]]
Iteration 500 of 1000: loss=0.19 " + "l1=0" + "l2=0.19 f=-0.978 shape=(1, 9000, 1)
logits [[ 1.3802885  1.3981385  1.2243264 -7.913543 ]]
Iteration 600 of 1000: loss=0.176 " + "l1=0.00104" + "l2=0.175 f=-0.979 shape=(1, 9000, 1)
logits [[ 1.3755447  1.3651631  1.2367969 -7.892575 ]]
Iteration 700 of 1000: loss=0.166 " + "l1=0" + "l2=0.166 f=-0.984 shape=(1, 9000, 1)
logits [[ 1.3433135  1.3524911  1.2495271 -7.8806076]]
Iteration 800 of 1000: loss=0.157 " + "l1=0" + "l2=0.157 f=-0.987 shape=(1, 9000, 1)
logits [[ 1.3158723  1.3386892  1.2636878 -7.8673   ]]
Iteration 900 of 1000: loss=0.15 " + "l1=0" + "l2=0.15 f=-0.99 shape=(1, 9000, 1)
logits [[ 1.2915229  1.3229313  1.2758254 -7.8518624]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.278 " + "l1=0.278" + "l2=0 f=-0.658 shape=(1, 9000, 1)
logits [[ 4.443016  -0.6030752  1.7784841 -8.249693 ]]
Iteration 100 of 1000: loss=0.248 " + "l1=0.233" + "l2=0.0152 f=-0.684 shape=(1, 9000, 1)
logits [[ 3.9766777  -0.25153366  1.648076   -8.109369  ]]
Iteration 200 of 1000: loss=0.233 " + "l1=0.209" + "l2=0.0239 f=-0.705 shape=(1, 9000, 1)
logits [[ 3.7272546  -0.06918669  1.5794228  -8.056161  ]]
Iteration 300 of 1000: loss=0.222 " + "l1=0.19" + "l2=0.0325 f=-0.722 shape=(1, 9000, 1)
logits [[ 3.5245185   0.07516926  1.5288963  -8.014634  ]]
Iteration 400 of 1000: loss=0.215 " + "l1=0.175" + "l2=0.0393 f=-0.739 shape=(1, 9000, 1)
logits [[ 3.3691127   0.18074901  1.4883726  -7.995298  ]]
Iteration 500 of 1000: loss=0.208 " + "l1=0.162" + "l2=0.0463 f=-0.759 shape=(1, 9000, 1)
logits [[ 3.2171168   0.27453208  1.450762   -7.977569  ]]
Iteration 600 of 1000: loss=0.201 " + "l1=0.145" + "l2=0.0553 f=-0.784 shape=(1, 9000, 1)
logits [[ 3.0297976  0.3850912  1.410453  -7.9619894]]
Iteration 700 of 1000: loss=0.192 " + "l1=0.127" + "l2=0.0652 f=-0.813 shape=(1, 9000, 1)
logits [[ 2.8148692  0.5027231  1.3729738 -7.9426675]]
Iteration 800 of 1000: loss=0.185 " + "l1=0.112" + "l2=0.073 f=-0.834 shape=(1, 9000, 1)
logits [[ 2.6365204  0.5931922  1.3496947 -7.9148865]]
Iteration 900 of 1000: loss=0.178 " + "l1=0.0972" + "l2=0.0811 f=-0.853 shape=(1, 9000, 1)
logits [[ 2.452429   0.6848827  1.3300301 -7.8804135]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.391 " + "l1=0.391" + "l2=0 f=-0.658 shape=(1, 9000, 1)
logits [[ 4.443016  -0.6030752  1.7784841 -8.249693 ]]
Iteration 100 of 1000: loss=0.329 " + "l1=0.298" + "l2=0.0308 f=-0.702 shape=(1, 9000, 1)
logits [[ 3.7509649  -0.09941984  1.5974103  -8.0553665 ]]
Iteration 200 of 1000: loss=0.299 " + "l1=0.251" + "l2=0.0482 f=-0.733 shape=(1, 9000, 1)
logits [[ 3.391706    0.15461022  1.506771   -7.9865217 ]]
Iteration 300 of 1000: loss=0.278 " + "l1=0.211" + "l2=0.0665 f=-0.771 shape=(1, 9000, 1)
logits [[ 3.08428     0.36018234  1.4317333  -7.9587073 ]]
Iteration 400 of 1000: loss=0.253 " + "l1=0.163" + "l2=0.0901 f=-0.822 shape=(1, 9000, 1)
logits [[ 2.7050447   0.59930855  1.3476547  -7.940685  ]]
Iteration 500 of 1000: loss=0.227 " + "l1=0.108" + "l2=0.119 f=-0.878 shape=(1, 9000, 1)
logits [[ 2.256419   0.8623137  1.2731006 -7.901941 ]]
Iteration 600 of 1000: loss=0.198 " + "l1=0.0401" + "l2=0.158 f=-0.936 shape=(1, 9000, 1)
logits [[ 1.7068113  1.1899954  1.2446615 -7.885382 ]]
Iteration 700 of 1000: loss=0.176 " + "l1=0" + "l2=0.176 f=-0.978 shape=(1, 9000, 1)
logits [[ 1.3574659  1.3683393  1.244972  -7.88107  ]]
Iteration 800 of 1000: loss=0.163 " + "l1=0.000207" + "l2=0.163 f=-0.981 shape=(1, 9000, 1)
logits [[ 1.3451817  1.3425049  1.2590723 -7.868762 ]]
Iteration 900 of 1000: loss=0.153 " + "l1=0.00085" + "l2=0.152 f=-0.984 shape=(1, 9000, 1)
logits [[ 1.3295584  1.3185868  1.2742224 -7.856942 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.334 " + "l1=0.334" + "l2=0 f=-0.658 shape=(1, 9000, 1)
logits [[ 4.443016  -0.6030752  1.7784841 -8.249693 ]]
Iteration 100 of 1000: loss=0.29 " + "l1=0.268" + "l2=0.0221 f=-0.693 shape=(1, 9000, 1)
logits [[ 3.8691082  -0.17934336  1.6232891  -8.084296  ]]
Iteration 200 of 1000: loss=0.268 " + "l1=0.233" + "l2=0.0353 f=-0.718 shape=(1, 9000, 1)
logits [[ 3.556499    0.04586219  1.54124    -8.016057  ]]
Iteration 300 of 1000: loss=0.253 " + "l1=0.206" + "l2=0.0469 f=-0.742 shape=(1, 9000, 1)
logits [[ 3.3210368   0.20996721  1.482406   -7.9828568 ]]
Iteration 400 of 1000: loss=0.24 " + "l1=0.181" + "l2=0.0595 f=-0.772 shape=(1, 9000, 1)
logits [[ 3.0904007   0.35842228  1.4248343  -7.9617133 ]]
Iteration 500 of 1000: loss=0.225 " + "l1=0.147" + "l2=0.0776 f=-0.812 shape=(1, 9000, 1)
logits [[ 2.7779312  0.5523228  1.3645178 -7.943413 ]]
Iteration 600 of 1000: loss=0.211 " + "l1=0.117" + "l2=0.0939 f=-0.851 shape=(1, 9000, 1)
logits [[ 2.4761226   0.71539104  1.3130041  -7.9072566 ]]
Iteration 700 of 1000: loss=0.196 " + "l1=0.0803" + "l2=0.115 f=-0.89 shape=(1, 9000, 1)
logits [[ 2.1258874  0.9142663  1.279791  -7.880956 ]]
Iteration 800 of 1000: loss=0.182 " + "l1=0.0485" + "l2=0.134 f=-0.924 shape=(1, 9000, 1)
logits [[ 1.820611   1.0885289  1.2696226 -7.8738456]]
Iteration 900 of 1000: loss=0.168 " + "l1=0.0127" + "l2=0.155 f=-0.963 shape=(1, 9000, 1)
logits [[ 1.4686588  1.276637   1.2709972 -7.868393 ]]
--- 300.0788834095001 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0266 " + "l1=0.0266" + "l2=0 f=-0.658 shape=(1, 9000, 1)
logits [[ 4.443016  -0.6030752  1.7784841 -8.249693 ]]
Iteration 100 of 1000: loss=0.0264 " + "l1=0.0261" + "l2=0.00024 f=-0.662 shape=(1, 9000, 1)
logits [[ 4.3936987  -0.58544284  1.7808856  -8.239001  ]]
Iteration 200 of 1000: loss=0.0263 " + "l1=0.0261" + "l2=0.0002 f=-0.663 shape=(1, 9000, 1)
logits [[ 4.3901434  -0.58434117  1.7813381  -8.238395  ]]
Iteration 300 of 1000: loss=0.0263 " + "l1=0.026" + "l2=0.000252 f=-0.664 shape=(1, 9000, 1)
logits [[ 4.382059  -0.5817654  1.7820113 -8.236512 ]]
Iteration 400 of 1000: loss=0.0262 " + "l1=0.0259" + "l2=0.00031 f=-0.664 shape=(1, 9000, 1)
logits [[ 4.3735504  -0.57906514  1.7826966  -8.2345495 ]]
Iteration 500 of 1000: loss=0.0262 " + "l1=0.0258" + "l2=0.000374 f=-0.665 shape=(1, 9000, 1)
logits [[ 4.365458  -0.5765996  1.7833841 -8.232645 ]]
Iteration 600 of 1000: loss=0.0262 " + "l1=0.0257" + "l2=0.000456 f=-0.666 shape=(1, 9000, 1)
logits [[ 4.357713  -0.5743125  1.7841108 -8.23075  ]]
Iteration 700 of 1000: loss=0.0262 " + "l1=0.0257" + "l2=0.00056 f=-0.666 shape=(1, 9000, 1)
logits [[ 4.3503747 -0.5722371  1.7848042 -8.228883 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.266 " + "l1=0.266" + "l2=0 f=-0.658 shape=(1, 9000, 1)
logits [[ 4.443016  -0.6030752  1.7784841 -8.249693 ]]
Iteration 100 of 1000: loss=0.241 " + "l1=0.227" + "l2=0.0139 f=-0.688 shape=(1, 9000, 1)
logits [[ 4.0554986  -0.44787908  1.787304   -8.14571   ]]
Iteration 200 of 1000: loss=0.229 " + "l1=0.209" + "l2=0.0203 f=-0.705 shape=(1, 9000, 1)
logits [[ 3.8874364  -0.38827556  1.7989758  -8.119083  ]]
Iteration 300 of 1000: loss=0.218 " + "l1=0.19" + "l2=0.0277 f=-0.729 shape=(1, 9000, 1)
logits [[ 3.7024758  -0.32101607  1.8002474  -8.098134  ]]
Iteration 400 of 1000: loss=0.208 " + "l1=0.175" + "l2=0.0337 f=-0.746 shape=(1, 9000, 1)
logits [[ 3.5468426  -0.25498703  1.8001798  -8.075059  ]]
Iteration 500 of 1000: loss=0.199 " + "l1=0.159" + "l2=0.0403 f=-0.767 shape=(1, 9000, 1)
logits [[ 3.3715146  -0.16136347  1.7834055  -8.063168  ]]
Iteration 600 of 1000: loss=0.191 " + "l1=0.145" + "l2=0.0458 f=-0.785 shape=(1, 9000, 1)
logits [[ 3.22378    -0.09305609  1.7738308  -8.046402  ]]
Iteration 700 of 1000: loss=0.182 " + "l1=0.129" + "l2=0.0528 f=-0.803 shape=(1, 9000, 1)
logits [[ 3.0492067e+00 -6.0586259e-05  1.7617767e+00 -8.0224037e+00]]
Iteration 800 of 1000: loss=0.172 " + "l1=0.112" + "l2=0.0596 f=-0.826 shape=(1, 9000, 1)
logits [[ 2.864881   0.0890086  1.7440443 -8.00243  ]]
Iteration 900 of 1000: loss=0.157 " + "l1=0.0841" + "l2=0.0725 f=-0.859 shape=(1, 9000, 1)
logits [[ 2.5741265   0.23145975  1.7335085  -7.973978  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.66 " + "l1=2.66" + "l2=0 f=-0.658 shape=(1, 9000, 1)
logits [[ 4.443016  -0.6030752  1.7784841 -8.249693 ]]
Iteration 100 of 1000: loss=0.437 " + "l1=0" + "l2=0.437 f=-0.93 shape=(1, 9000, 1)
logits [[ 1.8129437  0.5201985  1.8216426 -7.87394  ]]
Iteration 200 of 1000: loss=0.312 " + "l1=0" + "l2=0.312 f=-0.943 shape=(1, 9000, 1)
logits [[ 1.7847061  0.5722295  1.8015285 -7.9301143]]
Iteration 300 of 1000: loss=0.263 " + "l1=0" + "l2=0.263 f=-0.954 shape=(1, 9000, 1)
logits [[ 1.7111888  0.6431923  1.7797505 -7.9496384]]
Iteration 400 of 1000: loss=0.22 " + "l1=0" + "l2=0.22 f=-0.952 shape=(1, 9000, 1)
logits [[ 1.7404401  0.6447829  1.7599419 -7.9536834]]
Iteration 500 of 1000: loss=0.195 " + "l1=0.000178" + "l2=0.195 f=-0.954 shape=(1, 9000, 1)
logits [[ 1.7435312  0.6554944  1.7433536 -7.9572587]]
Iteration 600 of 1000: loss=0.182 " + "l1=0" + "l2=0.182 f=-0.959 shape=(1, 9000, 1)
logits [[ 1.6902608   0.69241357  1.729335   -7.949808  ]]
Iteration 700 of 1000: loss=0.166 " + "l1=0" + "l2=0.166 f=-0.958 shape=(1, 9000, 1)
logits [[ 1.6792262   0.70400935  1.7102981  -7.9256277 ]]
Iteration 800 of 1000: loss=0.154 " + "l1=0" + "l2=0.154 f=-0.955 shape=(1, 9000, 1)
logits [[ 1.6843426  0.7056814  1.6958433 -7.906473 ]]
Iteration 900 of 1000: loss=0.144 " + "l1=0" + "l2=0.144 f=-0.954 shape=(1, 9000, 1)
logits [[ 1.6783638  0.7023789  1.6888392 -7.8851166]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.47 " + "l1=1.47" + "l2=0 f=-0.658 shape=(1, 9000, 1)
logits [[ 4.443016  -0.6030752  1.7784841 -8.249693 ]]
Iteration 100 of 1000: loss=0.431 " + "l1=0.00621" + "l2=0.425 f=-0.932 shape=(1, 9000, 1)
logits [[ 1.8643241   0.47546247  1.8530253  -7.919144  ]]
Iteration 200 of 1000: loss=0.293 " + "l1=0" + "l2=0.293 f=-0.949 shape=(1, 9000, 1)
logits [[ 1.7965205  0.5510182  1.8192046 -7.964222 ]]
Iteration 300 of 1000: loss=0.232 " + "l1=0" + "l2=0.232 f=-0.956 shape=(1, 9000, 1)
logits [[ 1.7650117   0.61308384  1.7813505  -7.9846454 ]]
Iteration 400 of 1000: loss=0.196 " + "l1=0.00238" + "l2=0.194 f=-0.958 shape=(1, 9000, 1)
logits [[ 1.7664455  0.6272834  1.7621226 -7.9892564]]
Iteration 500 of 1000: loss=0.179 " + "l1=0" + "l2=0.179 f=-0.965 shape=(1, 9000, 1)
logits [[ 1.7018596   0.67420006  1.7463294  -7.9816732 ]]
Iteration 600 of 1000: loss=0.158 " + "l1=0" + "l2=0.158 f=-0.959 shape=(1, 9000, 1)
logits [[ 1.7187963  0.6767359  1.7238014 -7.9542885]]
Iteration 700 of 1000: loss=0.146 " + "l1=0" + "l2=0.146 f=-0.957 shape=(1, 9000, 1)
logits [[ 1.7074877  0.6832412  1.7092992 -7.9270678]]
Iteration 800 of 1000: loss=0.148 " + "l1=0.0125" + "l2=0.136 f=-0.953 shape=(1, 9000, 1)
logits [[ 1.71999     0.67236996  1.6973319  -7.90029   ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.866 " + "l1=0.866" + "l2=0 f=-0.658 shape=(1, 9000, 1)
logits [[ 4.443016  -0.6030752  1.7784841 -8.249693 ]]
Iteration 100 of 1000: loss=0.528 " + "l1=0.312" + "l2=0.216 f=-0.823 shape=(1, 9000, 1)
logits [[ 2.7523751   0.08995453  1.7917801  -7.9244432 ]]
Iteration 200 of 1000: loss=0.287 " + "l1=0.00117" + "l2=0.285 f=-0.943 shape=(1, 9000, 1)
logits [[ 1.8431747   0.54784304  1.83959    -8.003917  ]]
Iteration 300 of 1000: loss=0.21 " + "l1=0.00255" + "l2=0.208 f=-0.951 shape=(1, 9000, 1)
logits [[ 1.8116252  0.607983   1.803788  -8.027668 ]]
Iteration 400 of 1000: loss=0.176 " + "l1=0" + "l2=0.176 f=-0.955 shape=(1, 9000, 1)
logits [[ 1.7756268  0.6418418  1.7785068 -8.015188 ]]
Iteration 500 of 1000: loss=0.158 " + "l1=0" + "l2=0.158 f=-0.952 shape=(1, 9000, 1)
logits [[ 1.7567036  0.6663697  1.768015  -7.9994597]]
Iteration 600 of 1000: loss=0.144 " + "l1=0" + "l2=0.144 f=-0.948 shape=(1, 9000, 1)
logits [[ 1.7400167   0.68053156  1.7524455  -7.965744  ]]
Iteration 700 of 1000: loss=0.135 " + "l1=0" + "l2=0.135 f=-0.948 shape=(1, 9000, 1)
logits [[ 1.7055721   0.69553393  1.7370458  -7.931933  ]]
Iteration 800 of 1000: loss=0.124 " + "l1=0" + "l2=0.124 f=-0.945 shape=(1, 9000, 1)
logits [[ 1.7104905  0.6864619  1.7207386 -7.897281 ]]
Iteration 900 of 1000: loss=0.117 " + "l1=0" + "l2=0.117 f=-0.945 shape=(1, 9000, 1)
logits [[ 1.6770145   0.68826884  1.7146169  -7.8616605 ]]
--- 269.941349029541 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.127 " + "l1=0.127" + "l2=0 f=-0.658 shape=(1, 9000, 1)
logits [[ 4.443016  -0.6030752  1.7784841 -8.249693 ]]
Iteration 100 of 1000: loss=0.126 " + "l1=0.126" + "l2=0.000471 f=-0.659 shape=(1, 9000, 1)
logits [[ 4.370839   -0.56787235  1.7585114  -8.197427  ]]
Iteration 200 of 1000: loss=0.126 " + "l1=0.125" + "l2=0.000503 f=-0.659 shape=(1, 9000, 1)
logits [[ 4.356183  -0.5586968  1.7525737 -8.18732  ]]
Iteration 300 of 1000: loss=0.126 " + "l1=0.125" + "l2=0.000642 f=-0.66 shape=(1, 9000, 1)
logits [[ 4.3386106  -0.54876626  1.7463459  -8.174804  ]]
Iteration 400 of 1000: loss=0.126 " + "l1=0.125" + "l2=0.00082 f=-0.66 shape=(1, 9000, 1)
logits [[ 4.3194704 -0.537862   1.740301  -8.16143  ]]
Iteration 500 of 1000: loss=0.126 " + "l1=0.125" + "l2=0.000997 f=-0.66 shape=(1, 9000, 1)
logits [[ 4.3022013 -0.5287196  1.7353532 -8.1498   ]]
Iteration 600 of 1000: loss=0.125 " + "l1=0.124" + "l2=0.00116 f=-0.661 shape=(1, 9000, 1)
logits [[ 4.2859893  -0.52056164  1.7312988  -8.139303  ]]
Iteration 700 of 1000: loss=0.125 " + "l1=0.124" + "l2=0.0014 f=-0.661 shape=(1, 9000, 1)
logits [[ 4.2707796 -0.5131713  1.7280587 -8.129615 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.27 " + "l1=1.27" + "l2=0 f=-0.658 shape=(1, 9000, 1)
logits [[ 4.443016  -0.6030752  1.7784841 -8.249693 ]]
Iteration 100 of 1000: loss=1.19 " + "l1=1.15" + "l2=0.042 f=-0.674 shape=(1, 9000, 1)
logits [[ 3.7112567  -0.23261316  1.5979103  -7.7732964 ]]
Iteration 200 of 1000: loss=1.16 " + "l1=1.1" + "l2=0.0581 f=-0.689 shape=(1, 9000, 1)
logits [[ 3.3928928  -0.05736837  1.5137221  -7.6035557 ]]
Iteration 300 of 1000: loss=1.13 " + "l1=1.05" + "l2=0.077 f=-0.703 shape=(1, 9000, 1)
logits [[ 3.1024563   0.09866347  1.4326992  -7.446263  ]]
Iteration 400 of 1000: loss=1.11 " + "l1=1.01" + "l2=0.097 f=-0.719 shape=(1, 9000, 1)
logits [[ 2.7990727   0.25326034  1.3538109  -7.2817254 ]]
Iteration 500 of 1000: loss=1.08 " + "l1=0.958" + "l2=0.119 f=-0.735 shape=(1, 9000, 1)
logits [[ 2.4603422   0.42134506  1.2950324  -7.1164675 ]]
Iteration 600 of 1000: loss=1.05 " + "l1=0.907" + "l2=0.139 f=-0.756 shape=(1, 9000, 1)
logits [[ 2.118022   0.5796454  1.2315307 -6.9512997]]
Iteration 700 of 1000: loss=1.01 " + "l1=0.852" + "l2=0.158 f=-0.783 shape=(1, 9000, 1)
logits [[ 1.7331765   0.75945765  1.162112   -6.7872667 ]]
Iteration 800 of 1000: loss=0.967 " + "l1=0.784" + "l2=0.184 f=-0.82 shape=(1, 9000, 1)
logits [[ 1.2327735  0.9930481  1.09984   -6.604952 ]]
Iteration 900 of 1000: loss=0.931 " + "l1=0.749" + "l2=0.182 f=-0.825 shape=(1, 9000, 1)
logits [[ 1.0506256  1.0362153  1.0496764 -6.437332 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.7 " + "l1=12.7" + "l2=0 f=-0.658 shape=(1, 9000, 1)
logits [[ 4.443016  -0.6030752  1.7784841 -8.249693 ]]
Iteration 100 of 1000: loss=7.26 " + "l1=5.35" + "l2=1.9 f=-0.671 shape=(1, 9000, 1)
logits [[ 0.6216476   0.68481314  0.6770534  -4.6667633 ]]
Iteration 200 of 1000: loss=5.46 " + "l1=2.7" + "l2=2.76 f=-0.474 shape=(1, 9000, 1)
logits [[ 0.1626743   0.21338677  0.21239696 -2.4824932 ]]
Iteration 300 of 1000: loss=4.3 " + "l1=1.29" + "l2=3.01 f=-0.376 shape=(1, 9000, 1)
logits [[-0.12054539 -0.03551175 -0.03003654 -1.3163167 ]]
Iteration 400 of 1000: loss=3.69 " + "l1=0.585" + "l2=3.1 f=-0.331 shape=(1, 9000, 1)
logits [[-0.32211474 -0.1384004  -0.14007814 -0.7233476 ]]
Iteration 500 of 1000: loss=3.21 " + "l1=0.0637" + "l2=3.15 f=-0.292 shape=(1, 9000, 1)
logits [[-0.5065234  -0.21211846 -0.19300456 -0.25667658]]
Iteration 600 of 1000: loss=2.88 " + "l1=0.0264" + "l2=2.85 f=-0.292 shape=(1, 9000, 1)
logits [[-0.6390722  -0.15890111 -0.18384713 -0.1853447 ]]
Iteration 700 of 1000: loss=2.66 " + "l1=0.00836" + "l2=2.65 f=-0.286 shape=(1, 9000, 1)
logits [[-0.6105778  -0.18541847 -0.17081288 -0.17916825]]
Iteration 800 of 1000: loss=2.5 " + "l1=0.0136" + "l2=2.49 f=-0.29 shape=(1, 9000, 1)
logits [[-0.5917242  -0.19760479 -0.17775823 -0.19132873]]
Iteration 900 of 1000: loss=2.37 " + "l1=0.023" + "l2=2.35 f=-0.293 shape=(1, 9000, 1)
logits [[-0.5948607  -0.18104419 -0.19020835 -0.20401815]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.98 " + "l1=6.98" + "l2=0 f=-0.658 shape=(1, 9000, 1)
logits [[ 4.443016  -0.6030752  1.7784841 -8.249693 ]]
Iteration 100 of 1000: loss=4.77 " + "l1=3.85" + "l2=0.923 f=-0.756 shape=(1, 9000, 1)
logits [[ 1.0518574   0.77598166  1.0725721  -5.9250383 ]]
Iteration 200 of 1000: loss=4.09 " + "l1=3.13" + "l2=0.961 f=-0.687 shape=(1, 9000, 1)
logits [[ 0.7467603   0.7169506   0.73888457 -4.9510484 ]]
Iteration 300 of 1000: loss=3.56 " + "l1=2.45" + "l2=1.11 f=-0.603 shape=(1, 9000, 1)
logits [[ 0.51236594  0.5071672   0.51277864 -3.9456615 ]]
Iteration 400 of 1000: loss=3.18 " + "l1=1.88" + "l2=1.31 f=-0.53 shape=(1, 9000, 1)
logits [[ 0.30220702  0.3341671   0.32462853 -3.0794075 ]]
Iteration 500 of 1000: loss=2.89 " + "l1=1.39" + "l2=1.5 f=-0.469 shape=(1, 9000, 1)
logits [[ 0.1356729   0.1723253   0.17221706 -2.357852  ]]
Iteration 600 of 1000: loss=2.64 " + "l1=0.981" + "l2=1.66 f=-0.413 shape=(1, 9000, 1)
logits [[-0.06228139  0.06402914  0.06447178 -1.7187461 ]]
Iteration 700 of 1000: loss=2.46 " + "l1=0.739" + "l2=1.72 f=-0.382 shape=(1, 9000, 1)
logits [[-1.7943065e-01 -3.7014876e-03 -4.1262386e-04 -1.3438902e+00]]
Iteration 800 of 1000: loss=2.28 " + "l1=0.534" + "l2=1.75 f=-0.357 shape=(1, 9000, 1)
logits [[-0.3102244  -0.05608521 -0.04532084 -1.0154681 ]]
Iteration 900 of 1000: loss=2.11 " + "l1=0.375" + "l2=1.73 f=-0.35 shape=(1, 9000, 1)
logits [[-0.45402998 -0.0952554  -0.08365102 -0.76538545]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=9.84 " + "l1=9.84" + "l2=0 f=-0.658 shape=(1, 9000, 1)
logits [[ 4.443016  -0.6030752  1.7784841 -8.249693 ]]
Iteration 100 of 1000: loss=6.13 " + "l1=4.74" + "l2=1.39 f=-0.692 shape=(1, 9000, 1)
logits [[ 0.84068763  0.74786127  0.88205    -5.2402825 ]]
Iteration 200 of 1000: loss=4.97 " + "l1=3.24" + "l2=1.72 f=-0.577 shape=(1, 9000, 1)
logits [[ 0.4671831   0.4639914   0.47376123 -3.7131627 ]]
Iteration 300 of 1000: loss=4.05 " + "l1=2.03" + "l2=2.02 f=-0.464 shape=(1, 9000, 1)
logits [[ 0.15561749  0.20520283  0.1998715  -2.4170296 ]]
Iteration 400 of 1000: loss=3.49 " + "l1=1.28" + "l2=2.21 f=-0.406 shape=(1, 9000, 1)
logits [[-0.13581772  0.05695844  0.05538936 -1.59861   ]]
Iteration 500 of 1000: loss=3.1 " + "l1=0.783" + "l2=2.32 f=-0.384 shape=(1, 9000, 1)
logits [[-0.38460976 -0.04004399 -0.06056097 -1.05047   ]]
Iteration 600 of 1000: loss=2.76 " + "l1=0.325" + "l2=2.44 f=-0.34 shape=(1, 9000, 1)
logits [[-0.58851194 -0.11519777 -0.1199982  -0.5348431 ]]
Iteration 700 of 1000: loss=2.52 " + "l1=0.137" + "l2=2.38 f=-0.339 shape=(1, 9000, 1)
logits [[-0.68831956 -0.16696706 -0.1614589  -0.33808878]]
Iteration 800 of 1000: loss=2.32 " + "l1=0.0214" + "l2=2.3 f=-0.328 shape=(1, 9000, 1)
logits [[-0.7566849  -0.17175423 -0.18433265 -0.19937682]]
Iteration 900 of 1000: loss=2.15 " + "l1=0" + "l2=2.15 f=-0.32 shape=(1, 9000, 1)
logits [[-0.7312554  -0.18585818 -0.18443392 -0.17987034]]
--- 281.887247800827 seconds ---
Adv result:3
Loading record A00520
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0552 " + "l1=0.0552" + "l2=0 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.8589783 -2.6653068  2.3660114 -3.9875264]]
Iteration 100 of 1000: loss=0.055 " + "l1=0.0549" + "l2=0.000179 f=-0.356 shape=(1, 9000, 1)
logits [[ 2.8337846 -2.651643   2.3571515 -3.9638133]]
Iteration 200 of 1000: loss=0.055 " + "l1=0.0548" + "l2=0.000168 f=-0.356 shape=(1, 9000, 1)
logits [[ 2.8315089 -2.6498284  2.35609   -3.9619699]]
Iteration 300 of 1000: loss=0.055 " + "l1=0.0547" + "l2=0.000206 f=-0.356 shape=(1, 9000, 1)
logits [[ 2.8276932 -2.6472874  2.3545806 -3.9587138]]
Iteration 400 of 1000: loss=0.0549 " + "l1=0.0547" + "l2=0.000242 f=-0.356 shape=(1, 9000, 1)
logits [[ 2.8238463 -2.6447973  2.3531122 -3.9554198]]
Iteration 500 of 1000: loss=0.0549 " + "l1=0.0546" + "l2=0.000299 f=-0.356 shape=(1, 9000, 1)
logits [[ 2.820032  -2.6423714  2.3517134 -3.9521298]]
Iteration 600 of 1000: loss=0.0549 " + "l1=0.0546" + "l2=0.00038 f=-0.356 shape=(1, 9000, 1)
logits [[ 2.8162203 -2.6399424  2.35033   -3.9488807]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.552 " + "l1=0.552" + "l2=0 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.8589783 -2.6653068  2.3660114 -3.9875264]]
Iteration 100 of 1000: loss=0.533 " + "l1=0.521" + "l2=0.0117 f=-0.35 shape=(1, 9000, 1)
logits [[ 2.656845  -2.5526767  2.2938323 -3.7964153]]
Iteration 200 of 1000: loss=0.526 " + "l1=0.511" + "l2=0.0152 f=-0.346 shape=(1, 9000, 1)
logits [[ 2.5920563 -2.5136065  2.2719157 -3.734276 ]]
Iteration 300 of 1000: loss=0.52 " + "l1=0.502" + "l2=0.0182 f=-0.342 shape=(1, 9000, 1)
logits [[ 2.5413783 -2.4772813  2.252417  -3.6834908]]
Iteration 400 of 1000: loss=0.514 " + "l1=0.493" + "l2=0.021 f=-0.339 shape=(1, 9000, 1)
logits [[ 2.4935584 -2.4413664  2.2328727 -3.6393294]]
Iteration 500 of 1000: loss=0.509 " + "l1=0.485" + "l2=0.0238 f=-0.335 shape=(1, 9000, 1)
logits [[ 2.444382  -2.4078     2.2128377 -3.589839 ]]
Iteration 600 of 1000: loss=0.503 " + "l1=0.476" + "l2=0.0269 f=-0.332 shape=(1, 9000, 1)
logits [[ 2.391476  -2.370655   2.1906886 -3.5375602]]
Iteration 700 of 1000: loss=0.497 " + "l1=0.468" + "l2=0.0295 f=-0.328 shape=(1, 9000, 1)
logits [[ 2.34293   -2.3365996  2.170082  -3.4896789]]
Iteration 800 of 1000: loss=0.492 " + "l1=0.461" + "l2=0.031 f=-0.326 shape=(1, 9000, 1)
logits [[ 2.3010535 -2.3100736  2.1536868 -3.447671 ]]
Iteration 900 of 1000: loss=0.488 " + "l1=0.455" + "l2=0.0327 f=-0.325 shape=(1, 9000, 1)
logits [[ 2.261623  -2.286973   2.1374917 -3.4114628]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.52 " + "l1=5.52" + "l2=0 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.8589783 -2.6653068  2.3660114 -3.9875264]]
Iteration 100 of 1000: loss=3.9 " + "l1=3.14" + "l2=0.755 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.5817709 -1.5501388  1.5918934 -2.746014 ]]
Iteration 200 of 1000: loss=3.42 " + "l1=2.56" + "l2=0.86 f=-0.294 shape=(1, 9000, 1)
logits [[ 1.3010362 -1.2516916  1.3113253 -2.5382428]]
Iteration 300 of 1000: loss=3.01 " + "l1=2.02" + "l2=0.991 f=-0.297 shape=(1, 9000, 1)
logits [[ 0.9942529 -0.9815595  1.0413179 -2.2405393]]
Iteration 400 of 1000: loss=2.58 " + "l1=1.45" + "l2=1.12 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.6802021  -0.6652543   0.78731036 -1.8705548 ]]
Iteration 500 of 1000: loss=2.24 " + "l1=1.06" + "l2=1.19 f=-0.251 shape=(1, 9000, 1)
logits [[ 0.39852586 -0.45718336  0.59880537 -1.5453823 ]]
Iteration 600 of 1000: loss=1.97 " + "l1=0.759" + "l2=1.21 f=-0.233 shape=(1, 9000, 1)
logits [[ 0.22371858 -0.30081362  0.45780063 -1.3138771 ]]
Iteration 700 of 1000: loss=1.72 " + "l1=0.514" + "l2=1.21 f=-0.221 shape=(1, 9000, 1)
logits [[ 0.10571024 -0.17046426  0.34306878 -1.1610535 ]]
Iteration 800 of 1000: loss=1.53 " + "l1=0.36" + "l2=1.17 f=-0.21 shape=(1, 9000, 1)
logits [[ 0.0441782  -0.07633441  0.28325176 -1.0929796 ]]
Iteration 900 of 1000: loss=1.31 " + "l1=0.199" + "l2=1.11 f=-0.195 shape=(1, 9000, 1)
logits [[ 0.01341022  0.01363907  0.21234623 -1.0213635 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=55.2 " + "l1=55.2" + "l2=0 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.8589783 -2.6653068  2.3660114 -3.9875264]]
Iteration 100 of 1000: loss=8.48 " + "l1=0" + "l2=8.48 f=-0.323 shape=(1, 9000, 1)
logits [[-0.91675293  0.24315824  0.23499043 -0.85377014]]
Iteration 200 of 1000: loss=5.5 " + "l1=0" + "l2=5.5 f=-0.342 shape=(1, 9000, 1)
logits [[-0.77244896  0.24672726  0.22528343 -1.0694185 ]]
Iteration 300 of 1000: loss=4.64 " + "l1=0" + "l2=4.64 f=-0.341 shape=(1, 9000, 1)
logits [[-0.7066848   0.23330124  0.22517757 -1.1177231 ]]
Iteration 400 of 1000: loss=4.28 " + "l1=0" + "l2=4.28 f=-0.338 shape=(1, 9000, 1)
logits [[-0.6653066   0.2375124   0.19776358 -1.1214459 ]]
Iteration 500 of 1000: loss=3.87 " + "l1=0.0063" + "l2=3.87 f=-0.331 shape=(1, 9000, 1)
logits [[-0.58040094  0.20382304  0.20445322 -1.1507496 ]]
Iteration 600 of 1000: loss=3.69 " + "l1=0" + "l2=3.69 f=-0.327 shape=(1, 9000, 1)
logits [[-0.57287675  0.21456943  0.19259475 -1.1417557 ]]
Iteration 700 of 1000: loss=3.55 " + "l1=0.131" + "l2=3.42 f=-0.321 shape=(1, 9000, 1)
logits [[-0.5160366   0.19287935  0.20594588 -1.1674078 ]]
Iteration 800 of 1000: loss=3.4 " + "l1=0" + "l2=3.4 f=-0.32 shape=(1, 9000, 1)
logits [[-0.5648037   0.2351617   0.17475496 -1.126975  ]]
Iteration 900 of 1000: loss=3.15 " + "l1=0" + "l2=3.15 f=-0.316 shape=(1, 9000, 1)
logits [[-0.50266266  0.20007122  0.19274427 -1.1541066 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=30.4 " + "l1=30.4" + "l2=0 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.8589783 -2.6653068  2.3660114 -3.9875264]]
Iteration 100 of 1000: loss=7.8 " + "l1=0.731" + "l2=7.07 f=-0.311 shape=(1, 9000, 1)
logits [[-0.67920965  0.1489295   0.2817649  -0.995189  ]]
Iteration 200 of 1000: loss=4.65 " + "l1=0" + "l2=4.65 f=-0.347 shape=(1, 9000, 1)
logits [[-0.6543596   0.22652975  0.22240287 -1.1814779 ]]
Iteration 300 of 1000: loss=4.01 " + "l1=0.00788" + "l2=4 f=-0.348 shape=(1, 9000, 1)
logits [[-0.5917896   0.2093964   0.21082829 -1.2208962 ]]
Iteration 400 of 1000: loss=3.68 " + "l1=0.0842" + "l2=3.59 f=-0.341 shape=(1, 9000, 1)
logits [[-0.54280186  0.19531076  0.21061379 -1.2253151 ]]
Iteration 500 of 1000: loss=3.36 " + "l1=0" + "l2=3.36 f=-0.336 shape=(1, 9000, 1)
logits [[-0.5338124   0.20806235  0.19972558 -1.2168928 ]]
Iteration 600 of 1000: loss=3.19 " + "l1=0" + "l2=3.19 f=-0.33 shape=(1, 9000, 1)
logits [[-0.5275506   0.22277991  0.1970485  -1.2116537 ]]
Iteration 700 of 1000: loss=2.97 " + "l1=0.000837" + "l2=2.97 f=-0.323 shape=(1, 9000, 1)
logits [[-0.48491976  0.2063128   0.2064649  -1.2201521 ]]
Iteration 800 of 1000: loss=2.84 " + "l1=0" + "l2=2.84 f=-0.317 shape=(1, 9000, 1)
logits [[-0.4633049   0.19909205  0.19440798 -1.1969635 ]]
Iteration 900 of 1000: loss=2.72 " + "l1=0" + "l2=2.72 f=-0.313 shape=(1, 9000, 1)
logits [[-0.44062662  0.19026102  0.18782558 -1.1876817 ]]
--- 275.90848755836487 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00493 " + "l1=0.00493" + "l2=0 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.8589783 -2.6653068  2.3660114 -3.9875264]]
Iteration 100 of 1000: loss=0.00486 " + "l1=0.00477" + "l2=9.31e-05 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.842507  -2.6626995  2.365793  -3.9733212]]
Iteration 200 of 1000: loss=0.00484 " + "l1=0.00476" + "l2=7.82e-05 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.8424914 -2.6628003  2.3660054 -3.973398 ]]
Iteration 300 of 1000: loss=0.00485 " + "l1=0.00475" + "l2=0.000107 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.8409383 -2.6625998  2.3661947 -3.9721954]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0493 " + "l1=0.0493" + "l2=0 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.8589783 -2.6653068  2.3660114 -3.9875264]]
Iteration 100 of 1000: loss=0.0423 " + "l1=0.0378" + "l2=0.00445 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.7420812 -2.6479445  2.363751  -3.889415 ]]
Iteration 200 of 1000: loss=0.0398 " + "l1=0.034" + "l2=0.00581 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.7067213 -2.6411328  2.3664806 -3.8614368]]
Iteration 300 of 1000: loss=0.0379 " + "l1=0.0309" + "l2=0.00692 f=-0.356 shape=(1, 9000, 1)
logits [[ 2.677811  -2.634948   2.368382  -3.8367367]]
Iteration 400 of 1000: loss=0.0362 " + "l1=0.0281" + "l2=0.00805 f=-0.355 shape=(1, 9000, 1)
logits [[ 2.651299  -2.6294844  2.3698618 -3.8123693]]
Iteration 500 of 1000: loss=0.0347 " + "l1=0.0258" + "l2=0.00895 f=-0.354 shape=(1, 9000, 1)
logits [[ 2.6292634 -2.6246822  2.3713145 -3.7924402]]
Iteration 600 of 1000: loss=0.0334 " + "l1=0.0237" + "l2=0.00973 f=-0.353 shape=(1, 9000, 1)
logits [[ 2.6092455 -2.6203659  2.37225   -3.7729468]]
Iteration 700 of 1000: loss=0.0322 " + "l1=0.0218" + "l2=0.0105 f=-0.352 shape=(1, 9000, 1)
logits [[ 2.5905085 -2.6161275  2.3728049 -3.753634 ]]
Iteration 800 of 1000: loss=0.0312 " + "l1=0.0199" + "l2=0.0112 f=-0.35 shape=(1, 9000, 1)
logits [[ 2.5732517 -2.6116667  2.3738592 -3.7357404]]
Iteration 900 of 1000: loss=0.0302 " + "l1=0.0182" + "l2=0.0119 f=-0.349 shape=(1, 9000, 1)
logits [[ 2.55663   -2.6071205  2.3744743 -3.7190354]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.493 " + "l1=0.493" + "l2=0 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.8589783 -2.6653068  2.3660114 -3.9875264]]
Iteration 100 of 1000: loss=0.0714 " + "l1=0.00295" + "l2=0.0684 f=-0.354 shape=(1, 9000, 1)
logits [[ 2.3762174 -2.6042998  2.3732636 -3.562156 ]]
Iteration 200 of 1000: loss=0.0587 " + "l1=0.00589" + "l2=0.0528 f=-0.349 shape=(1, 9000, 1)
logits [[ 2.3905582 -2.6047025  2.3846714 -3.5646846]]
Iteration 300 of 1000: loss=0.0471 " + "l1=0" + "l2=0.0471 f=-0.345 shape=(1, 9000, 1)
logits [[ 2.3860202 -2.5999784  2.3891704 -3.5534976]]
Iteration 400 of 1000: loss=0.0421 " + "l1=0" + "l2=0.0421 f=-0.342 shape=(1, 9000, 1)
logits [[ 2.385698  -2.5968282  2.3903873 -3.5453663]]
Iteration 500 of 1000: loss=0.038 " + "l1=0" + "l2=0.038 f=-0.339 shape=(1, 9000, 1)
logits [[ 2.38583   -2.5934694  2.3904321 -3.540332 ]]
Iteration 600 of 1000: loss=0.0357 " + "l1=0" + "l2=0.0357 f=-0.337 shape=(1, 9000, 1)
logits [[ 2.3831513 -2.5909395  2.3903239 -3.5321836]]
Iteration 700 of 1000: loss=0.0332 " + "l1=0" + "l2=0.0332 f=-0.336 shape=(1, 9000, 1)
logits [[ 2.3798213 -2.5861835  2.3885875 -3.5266483]]
Iteration 800 of 1000: loss=0.0315 " + "l1=0" + "l2=0.0315 f=-0.335 shape=(1, 9000, 1)
logits [[ 2.376884  -2.5825713  2.3875763 -3.5222805]]
Iteration 900 of 1000: loss=0.029 " + "l1=0" + "l2=0.029 f=-0.335 shape=(1, 9000, 1)
logits [[ 2.379667  -2.5799067  2.3859694 -3.5238993]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.271 " + "l1=0.271" + "l2=0 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.8589783 -2.6653068  2.3660114 -3.9875264]]
Iteration 100 of 1000: loss=0.0681 " + "l1=0" + "l2=0.0681 f=-0.354 shape=(1, 9000, 1)
logits [[ 2.3760767 -2.6089103  2.3769822 -3.5593903]]
Iteration 200 of 1000: loss=0.0527 " + "l1=0.000331" + "l2=0.0523 f=-0.347 shape=(1, 9000, 1)
logits [[ 2.3880756 -2.6066325  2.3874733 -3.5587103]]
Iteration 300 of 1000: loss=0.0448 " + "l1=0.000889" + "l2=0.0439 f=-0.344 shape=(1, 9000, 1)
logits [[ 2.3907895 -2.6011522  2.3891733 -3.5533946]]
Iteration 400 of 1000: loss=0.0408 " + "l1=0" + "l2=0.0408 f=-0.341 shape=(1, 9000, 1)
logits [[ 2.3798645 -2.5968401  2.3903801 -3.5385802]]
Iteration 500 of 1000: loss=0.0357 " + "l1=0" + "l2=0.0357 f=-0.339 shape=(1, 9000, 1)
logits [[ 2.3838334 -2.592535   2.3890593 -3.5366535]]
Iteration 600 of 1000: loss=0.0322 " + "l1=0.000425" + "l2=0.0318 f=-0.337 shape=(1, 9000, 1)
logits [[ 2.3889017 -2.5897348  2.3881283 -3.5368557]]
Iteration 700 of 1000: loss=0.0312 " + "l1=0" + "l2=0.0312 f=-0.336 shape=(1, 9000, 1)
logits [[ 2.3725948 -2.5834408  2.3857012 -3.5171444]]
Iteration 800 of 1000: loss=0.0301 " + "l1=0" + "l2=0.0301 f=-0.334 shape=(1, 9000, 1)
logits [[ 2.3653333 -2.5813031  2.3853903 -3.5066304]]
Iteration 900 of 1000: loss=0.0273 " + "l1=0" + "l2=0.0273 f=-0.334 shape=(1, 9000, 1)
logits [[ 2.367367  -2.581299   2.38473   -3.5053928]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.16 " + "l1=0.16" + "l2=0 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.8589783 -2.6653068  2.3660114 -3.9875264]]
Iteration 100 of 1000: loss=0.0801 " + "l1=0.0279" + "l2=0.0523 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.4549973 -2.6161246  2.3692834 -3.6376657]]
Iteration 200 of 1000: loss=0.0534 " + "l1=0.0026" + "l2=0.0508 f=-0.348 shape=(1, 9000, 1)
logits [[ 2.3944    -2.6084335  2.3863852 -3.564828 ]]
Iteration 300 of 1000: loss=0.0432 " + "l1=7.31e-05" + "l2=0.0432 f=-0.344 shape=(1, 9000, 1)
logits [[ 2.3892038 -2.6020074  2.3889787 -3.5529158]]
Iteration 400 of 1000: loss=0.0375 " + "l1=0" + "l2=0.0375 f=-0.341 shape=(1, 9000, 1)
logits [[ 2.3869743 -2.5976684  2.3891075 -3.5429277]]
Iteration 500 of 1000: loss=0.0335 " + "l1=0.00117" + "l2=0.0323 f=-0.339 shape=(1, 9000, 1)
logits [[ 2.3930013 -2.5950189  2.3893936 -3.541966 ]]
Iteration 600 of 1000: loss=0.0291 " + "l1=9.38e-06" + "l2=0.0291 f=-0.337 shape=(1, 9000, 1)
logits [[ 2.3886468 -2.5934877  2.388618  -3.5311651]]
Iteration 700 of 1000: loss=0.026 " + "l1=0" + "l2=0.026 f=-0.335 shape=(1, 9000, 1)
logits [[ 2.387536  -2.5930476  2.388398  -3.5246265]]
Iteration 800 of 1000: loss=0.0245 " + "l1=0" + "l2=0.0245 f=-0.335 shape=(1, 9000, 1)
logits [[ 2.3819048 -2.5933318  2.388331  -3.5176795]]
Iteration 900 of 1000: loss=0.0232 " + "l1=0.00192" + "l2=0.0213 f=-0.336 shape=(1, 9000, 1)
logits [[ 2.3926141 -2.5948696  2.3867197 -3.5283296]]
--- 258.9499499797821 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0685 " + "l1=0.0685" + "l2=0 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.8589783 -2.6653068  2.3660114 -3.9875264]]
Iteration 100 of 1000: loss=0.068 " + "l1=0.0676" + "l2=0.000365 f=-0.355 shape=(1, 9000, 1)
logits [[ 2.822826  -2.6567025  2.3543184 -3.9387114]]
Iteration 200 of 1000: loss=0.0679 " + "l1=0.0675" + "l2=0.000379 f=-0.354 shape=(1, 9000, 1)
logits [[ 2.8179836 -2.655105   2.352557  -3.9327974]]
Iteration 300 of 1000: loss=0.0678 " + "l1=0.0674" + "l2=0.000433 f=-0.354 shape=(1, 9000, 1)
logits [[ 2.8120456 -2.6532483  2.3505871 -3.9253361]]
Iteration 400 of 1000: loss=0.0678 " + "l1=0.0672" + "l2=0.000539 f=-0.354 shape=(1, 9000, 1)
logits [[ 2.80617   -2.6514173  2.3486717 -3.9178584]]
Iteration 500 of 1000: loss=0.0677 " + "l1=0.0671" + "l2=0.000572 f=-0.353 shape=(1, 9000, 1)
logits [[ 2.8002992 -2.649606   2.3467367 -3.9103365]]
Iteration 600 of 1000: loss=0.0677 " + "l1=0.067" + "l2=0.000753 f=-0.353 shape=(1, 9000, 1)
logits [[ 2.7946496 -2.6479516  2.3448508 -3.9030912]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.685 " + "l1=0.685" + "l2=0 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.8589783 -2.6653068  2.3660114 -3.9875264]]
Iteration 100 of 1000: loss=0.64 " + "l1=0.611" + "l2=0.0282 f=-0.339 shape=(1, 9000, 1)
logits [[ 2.5427516 -2.5896459  2.2644238 -3.5718553]]
Iteration 200 of 1000: loss=0.625 " + "l1=0.587" + "l2=0.0377 f=-0.33 shape=(1, 9000, 1)
logits [[ 2.4374528 -2.5612044  2.2327788 -3.4307418]]
Iteration 300 of 1000: loss=0.611 " + "l1=0.565" + "l2=0.0459 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.344243  -2.5345914  2.2074196 -3.303411 ]]
Iteration 400 of 1000: loss=0.596 " + "l1=0.538" + "l2=0.0573 f=-0.309 shape=(1, 9000, 1)
logits [[ 2.2334814 -2.5048487  2.186391  -3.149902 ]]
Iteration 500 of 1000: loss=0.581 " + "l1=0.521" + "l2=0.0601 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.1640003 -2.4852083  2.1645446 -3.0435424]]
Iteration 600 of 1000: loss=0.568 " + "l1=0.511" + "l2=0.0571 f=-0.293 shape=(1, 9000, 1)
logits [[ 2.136143  -2.4685063  2.1350417 -2.974572 ]]
Iteration 700 of 1000: loss=0.558 " + "l1=0.501" + "l2=0.0567 f=-0.288 shape=(1, 9000, 1)
logits [[ 2.100473  -2.4537141  2.104197  -2.904289 ]]
Iteration 800 of 1000: loss=0.549 " + "l1=0.493" + "l2=0.0561 f=-0.286 shape=(1, 9000, 1)
logits [[ 2.0748947 -2.44348    2.0762148 -2.8500469]]
Iteration 900 of 1000: loss=0.541 " + "l1=0.484" + "l2=0.0568 f=-0.283 shape=(1, 9000, 1)
logits [[ 2.046695  -2.4329305  2.0498242 -2.7947829]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.85 " + "l1=6.85" + "l2=0 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.8589783 -2.6653068  2.3660114 -3.9875264]]
Iteration 100 of 1000: loss=3.79 " + "l1=2.28" + "l2=1.51 f=-0.185 shape=(1, 9000, 1)
logits [[ 0.8154738  -1.994259    1.3589854  -0.92015964]]
Iteration 200 of 1000: loss=2.63 " + "l1=0.492" + "l2=2.14 f=-0.173 shape=(1, 9000, 1)
logits [[-0.00683502 -1.6215867   0.7144965   0.2221885 ]]
Iteration 300 of 1000: loss=1.81 " + "l1=0" + "l2=1.81 f=-0.188 shape=(1, 9000, 1)
logits [[-0.19422206 -1.590339    0.51493055  0.5160715 ]]
Iteration 400 of 1000: loss=1.41 " + "l1=0.0108" + "l2=1.4 f=-0.203 shape=(1, 9000, 1)
logits [[-0.18382809 -1.6214734   0.5022365   0.4914778 ]]
Iteration 500 of 1000: loss=1.13 " + "l1=0" + "l2=1.13 f=-0.209 shape=(1, 9000, 1)
logits [[-0.20296101 -1.6276312   0.49751475  0.49778214]]
Iteration 600 of 1000: loss=0.932 " + "l1=0" + "l2=0.932 f=-0.213 shape=(1, 9000, 1)
logits [[-0.21698467 -1.6119562   0.48785114  0.48952305]]
Iteration 700 of 1000: loss=0.821 " + "l1=0.00828" + "l2=0.813 f=-0.217 shape=(1, 9000, 1)
logits [[-0.23287465 -1.6091994   0.49089736  0.48261753]]
Iteration 800 of 1000: loss=0.746 " + "l1=0" + "l2=0.746 f=-0.217 shape=(1, 9000, 1)
logits [[-0.26657358 -1.5974816   0.48993647  0.5070251 ]]
Iteration 900 of 1000: loss=0.684 " + "l1=0" + "l2=0.684 f=-0.213 shape=(1, 9000, 1)
logits [[-0.27292505 -1.5895891   0.49810454  0.51286083]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.77 " + "l1=3.77" + "l2=0 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.8589783 -2.6653068  2.3660114 -3.9875264]]
Iteration 100 of 1000: loss=2.68 " + "l1=2.16" + "l2=0.521 f=-0.245 shape=(1, 9000, 1)
logits [[ 1.6374356 -2.3192086  1.8107725 -2.1100407]]
Iteration 200 of 1000: loss=2.34 " + "l1=1.67" + "l2=0.674 f=-0.211 shape=(1, 9000, 1)
logits [[ 1.2111418 -2.10006    1.5423701 -1.4958054]]
Iteration 300 of 1000: loss=2.01 " + "l1=1.22" + "l2=0.785 f=-0.201 shape=(1, 9000, 1)
logits [[ 0.78500766 -1.9277985   1.2805536  -0.94251114]]
Iteration 400 of 1000: loss=1.7 " + "l1=0.867" + "l2=0.832 f=-0.2 shape=(1, 9000, 1)
logits [[ 0.494823  -1.7935194  1.03834   -0.5379428]]
Iteration 500 of 1000: loss=1.28 " + "l1=0.297" + "l2=0.988 f=-0.22 shape=(1, 9000, 1)
logits [[-0.02819711 -1.6770346   0.6818324   0.14155826]]
Iteration 600 of 1000: loss=0.858 " + "l1=0" + "l2=0.858 f=-0.218 shape=(1, 9000, 1)
logits [[-0.26859093 -1.6429428   0.51914686  0.5220052 ]]
Iteration 700 of 1000: loss=0.699 " + "l1=0.00867" + "l2=0.691 f=-0.218 shape=(1, 9000, 1)
logits [[-0.25061795 -1.6732022   0.53339547  0.5176255 ]]
Iteration 800 of 1000: loss=0.611 " + "l1=0" + "l2=0.611 f=-0.21 shape=(1, 9000, 1)
logits [[-0.2557318  -1.6942493   0.54594177  0.56216425]]
Iteration 900 of 1000: loss=0.547 " + "l1=0" + "l2=0.547 f=-0.205 shape=(1, 9000, 1)
logits [[-0.25054553 -1.690082    0.5580247   0.56402403]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.23 " + "l1=2.23" + "l2=0 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.8589783 -2.6653068  2.3660114 -3.9875264]]
Iteration 100 of 1000: loss=1.77 " + "l1=1.55" + "l2=0.217 f=-0.284 shape=(1, 9000, 1)
logits [[ 2.021604  -2.438649   2.030371  -2.7502754]]
Iteration 200 of 1000: loss=1.67 " + "l1=1.42" + "l2=0.249 f=-0.255 shape=(1, 9000, 1)
logits [[ 1.8511841 -2.3558102  1.9264995 -2.4426088]]
Iteration 300 of 1000: loss=1.55 " + "l1=1.27" + "l2=0.286 f=-0.237 shape=(1, 9000, 1)
logits [[ 1.6248887 -2.2437909  1.784016  -2.1128159]]
Iteration 400 of 1000: loss=1.45 " + "l1=1.12" + "l2=0.325 f=-0.224 shape=(1, 9000, 1)
logits [[ 1.4099281 -2.1448655  1.647035  -1.8100377]]
Iteration 500 of 1000: loss=1.36 " + "l1=0.994" + "l2=0.366 f=-0.222 shape=(1, 9000, 1)
logits [[ 1.1916677 -2.0596006  1.5192121 -1.5385997]]
Iteration 600 of 1000: loss=1.23 " + "l1=0.796" + "l2=0.431 f=-0.224 shape=(1, 9000, 1)
logits [[ 0.87832946 -1.9628584   1.3193073  -1.130449  ]]
Iteration 700 of 1000: loss=1.1 " + "l1=0.667" + "l2=0.437 f=-0.218 shape=(1, 9000, 1)
logits [[ 0.703592  -1.9144797  1.1943786 -0.8564314]]
Iteration 800 of 1000: loss=0.967 " + "l1=0.49" + "l2=0.477 f=-0.208 shape=(1, 9000, 1)
logits [[ 0.4525722 -1.8331355  1.0273939 -0.4788593]]
Iteration 900 of 1000: loss=0.74 " + "l1=0.237" + "l2=0.503 f=-0.219 shape=(1, 9000, 1)
logits [[ 0.06402333 -1.732974    0.7612501   0.03204691]]
--- 278.2819321155548 seconds ---
Adv result:3
Loading record A00542
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0676 " + "l1=0.0676" + "l2=0 f=-0.754 shape=(1, 9000, 1)
logits [[ 4.372479  -2.3865125  2.7718465 -7.773409 ]]
Iteration 100 of 1000: loss=0.0669 " + "l1=0.0664" + "l2=0.000451 f=-0.752 shape=(1, 9000, 1)
logits [[ 4.316672  -2.3264582  2.7277606 -7.7251134]]
Iteration 200 of 1000: loss=0.0667 " + "l1=0.0662" + "l2=0.000522 f=-0.752 shape=(1, 9000, 1)
logits [[ 4.304269  -2.3114426  2.7160146 -7.714956 ]]
Iteration 300 of 1000: loss=0.0665 " + "l1=0.0659" + "l2=0.000658 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.29005   -2.2961516  2.7037475 -7.702507 ]]
Iteration 400 of 1000: loss=0.0664 " + "l1=0.0656" + "l2=0.000802 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.276644  -2.2828715  2.6928566 -7.690305 ]]
Iteration 500 of 1000: loss=0.0663 " + "l1=0.0654" + "l2=0.000966 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.264429  -2.2712688  2.6831331 -7.6792355]]
Iteration 600 of 1000: loss=0.0663 " + "l1=0.0651" + "l2=0.00113 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.252801  -2.2608562  2.6743631 -7.6688547]]
Iteration 700 of 1000: loss=0.0662 " + "l1=0.0649" + "l2=0.00128 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.242015  -2.251574   2.6665177 -7.6592617]]
Iteration 800 of 1000: loss=0.0662 " + "l1=0.0648" + "l2=0.00142 f=-0.751 shape=(1, 9000, 1)
logits [[ 4.2327847 -2.2444377  2.6604733 -7.650865 ]]
Iteration 900 of 1000: loss=0.0662 " + "l1=0.0646" + "l2=0.00153 f=-0.75 shape=(1, 9000, 1)
logits [[ 4.224248  -2.237986   2.6549938 -7.6432333]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.676 " + "l1=0.676" + "l2=0 f=-0.754 shape=(1, 9000, 1)
logits [[ 4.372479  -2.3865125  2.7718465 -7.773409 ]]
Iteration 100 of 1000: loss=0.577 " + "l1=0.522" + "l2=0.0552 f=-0.789 shape=(1, 9000, 1)
logits [[ 3.5533173 -1.6661973  2.2662957 -7.3105297]]
Iteration 200 of 1000: loss=0.533 " + "l1=0.449" + "l2=0.0841 f=-0.802 shape=(1, 9000, 1)
logits [[ 3.1172938 -1.3714141  2.1374574 -7.0921755]]
Iteration 300 of 1000: loss=0.494 " + "l1=0.375" + "l2=0.118 f=-0.809 shape=(1, 9000, 1)
logits [[ 2.6749084 -1.0775263  2.050918  -6.885613 ]]
Iteration 400 of 1000: loss=0.464 " + "l1=0.32" + "l2=0.145 f=-0.809 shape=(1, 9000, 1)
logits [[ 2.3449185  -0.85482436  1.9821827  -6.706922  ]]
Iteration 500 of 1000: loss=0.438 " + "l1=0.268" + "l2=0.169 f=-0.813 shape=(1, 9000, 1)
logits [[ 2.035846  -0.646858   1.9143088 -6.556337 ]]
Iteration 600 of 1000: loss=0.417 " + "l1=0.238" + "l2=0.179 f=-0.809 shape=(1, 9000, 1)
logits [[ 1.8698492 -0.5113658  1.8325268 -6.4259825]]
Iteration 700 of 1000: loss=0.397 " + "l1=0.218" + "l2=0.179 f=-0.8 shape=(1, 9000, 1)
logits [[ 1.7638737 -0.4187855  1.7639529 -6.3102646]]
Iteration 800 of 1000: loss=0.377 " + "l1=0.201" + "l2=0.176 f=-0.787 shape=(1, 9000, 1)
logits [[ 1.6874803  -0.32623023  1.6816871  -6.191522  ]]
Iteration 900 of 1000: loss=0.344 " + "l1=0.176" + "l2=0.168 f=-0.776 shape=(1, 9000, 1)
logits [[ 1.57705    -0.18668762  1.5631334  -6.0570397 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.76 " + "l1=6.76" + "l2=0 f=-0.754 shape=(1, 9000, 1)
logits [[ 4.372479  -2.3865125  2.7718465 -7.773409 ]]
Iteration 100 of 1000: loss=1.45 " + "l1=0.042" + "l2=1.41 f=-0.737 shape=(1, 9000, 1)
logits [[ 0.8572678   0.82551825  0.8675058  -5.5001435 ]]
Iteration 200 of 1000: loss=1.02 " + "l1=0" + "l2=1.02 f=-0.739 shape=(1, 9000, 1)
logits [[ 0.7886642   0.83627367  0.82850766 -5.409685  ]]
Iteration 300 of 1000: loss=0.831 " + "l1=0" + "l2=0.831 f=-0.734 shape=(1, 9000, 1)
logits [[ 0.776363   0.8102189  0.7997048 -5.3227296]]
Iteration 400 of 1000: loss=0.73 " + "l1=0" + "l2=0.73 f=-0.736 shape=(1, 9000, 1)
logits [[ 0.70960766  0.81383103  0.77478015 -5.2405825 ]]
Iteration 500 of 1000: loss=0.635 " + "l1=0" + "l2=0.635 f=-0.734 shape=(1, 9000, 1)
logits [[ 0.7091479  0.7815586  0.7693027 -5.196749 ]]
Iteration 600 of 1000: loss=0.563 " + "l1=0" + "l2=0.563 f=-0.736 shape=(1, 9000, 1)
logits [[ 0.70893127  0.7496448   0.7487661  -5.151468  ]]
Iteration 700 of 1000: loss=0.515 " + "l1=0" + "l2=0.515 f=-0.73 shape=(1, 9000, 1)
logits [[ 0.7343903   0.73441726  0.7033381  -5.092827  ]]
Iteration 800 of 1000: loss=0.473 " + "l1=0.00131" + "l2=0.472 f=-0.733 shape=(1, 9000, 1)
logits [[ 0.6956774  0.7178214  0.719136  -5.064285 ]]
Iteration 900 of 1000: loss=0.448 " + "l1=0.00281" + "l2=0.445 f=-0.73 shape=(1, 9000, 1)
logits [[ 0.6940487  0.7005905  0.703402  -5.019489 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.72 " + "l1=3.72" + "l2=0 f=-0.754 shape=(1, 9000, 1)
logits [[ 4.372479  -2.3865125  2.7718465 -7.773409 ]]
Iteration 100 of 1000: loss=1.37 " + "l1=0.601" + "l2=0.77 f=-0.765 shape=(1, 9000, 1)
logits [[ 1.3461052  0.2531156  1.33943   -5.9973807]]
Iteration 200 of 1000: loss=0.972 " + "l1=0.213" + "l2=0.758 f=-0.734 shape=(1, 9000, 1)
logits [[ 0.97215474  0.60744035  0.99545074 -5.5104175 ]]
Iteration 300 of 1000: loss=0.672 " + "l1=0.00572" + "l2=0.666 f=-0.724 shape=(1, 9000, 1)
logits [[ 0.750296   0.7592013  0.7696011 -5.17554  ]]
Iteration 400 of 1000: loss=0.551 " + "l1=0.00295" + "l2=0.549 f=-0.721 shape=(1, 9000, 1)
logits [[ 0.7082953   0.7034121   0.70876884 -5.002956  ]]
Iteration 500 of 1000: loss=0.492 " + "l1=0.000263" + "l2=0.492 f=-0.714 shape=(1, 9000, 1)
logits [[ 0.67144346  0.67659694  0.6770759  -4.8795652 ]]
Iteration 600 of 1000: loss=0.461 " + "l1=0" + "l2=0.461 f=-0.708 shape=(1, 9000, 1)
logits [[ 0.64783573  0.6588316   0.6554973  -4.794516  ]]
Iteration 700 of 1000: loss=0.442 " + "l1=0.00607" + "l2=0.436 f=-0.701 shape=(1, 9000, 1)
logits [[ 0.65118414  0.6401472   0.6405438  -4.735665  ]]
Iteration 800 of 1000: loss=0.417 " + "l1=0" + "l2=0.417 f=-0.699 shape=(1, 9000, 1)
logits [[ 0.6117153   0.63306457  0.6275416  -4.6666727 ]]
Iteration 900 of 1000: loss=0.393 " + "l1=0.00356" + "l2=0.389 f=-0.693 shape=(1, 9000, 1)
logits [[ 0.62335014  0.6168694   0.6162507  -4.630251  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.2 " + "l1=2.2" + "l2=0 f=-0.754 shape=(1, 9000, 1)
logits [[ 4.372479  -2.3865125  2.7718465 -7.773409 ]]
Iteration 100 of 1000: loss=1.14 " + "l1=0.707" + "l2=0.434 f=-0.815 shape=(1, 9000, 1)
logits [[ 1.8036846 -0.3704276  1.8008921 -6.4952364]]
Iteration 200 of 1000: loss=0.858 " + "l1=0.416" + "l2=0.442 f=-0.776 shape=(1, 9000, 1)
logits [[ 1.4108342   0.13177563  1.4094597  -6.0543    ]]
Iteration 300 of 1000: loss=0.735 " + "l1=0.302" + "l2=0.433 f=-0.763 shape=(1, 9000, 1)
logits [[ 1.2239913   0.29613033  1.2251697  -5.796881  ]]
Iteration 400 of 1000: loss=0.62 " + "l1=0.196" + "l2=0.424 f=-0.752 shape=(1, 9000, 1)
logits [[ 1.0461202  0.4424748  1.0442947 -5.5400543]]
Iteration 500 of 1000: loss=0.495 " + "l1=0.0802" + "l2=0.414 f=-0.738 shape=(1, 9000, 1)
logits [[ 0.82252306  0.59316075  0.83996415 -5.2059946 ]]
Iteration 600 of 1000: loss=0.39 " + "l1=0.00141" + "l2=0.389 f=-0.715 shape=(1, 9000, 1)
logits [[ 0.67198145  0.6963747   0.70071876 -4.92736   ]]
Iteration 700 of 1000: loss=0.344 " + "l1=0.00483" + "l2=0.339 f=-0.703 shape=(1, 9000, 1)
logits [[ 0.6854389  0.6705868  0.6754574 -4.8433876]]
Iteration 800 of 1000: loss=0.315 " + "l1=0.00134" + "l2=0.313 f=-0.699 shape=(1, 9000, 1)
logits [[ 0.64669174  0.6637947   0.66792464 -4.77268   ]]
Iteration 900 of 1000: loss=0.298 " + "l1=0.00645" + "l2=0.292 f=-0.69 shape=(1, 9000, 1)
logits [[ 0.6552385   0.63799524  0.65784985 -4.712357  ]]
--- 299.1543643474579 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.016 " + "l1=0.016" + "l2=0 f=-0.754 shape=(1, 9000, 1)
logits [[ 4.372479  -2.3865125  2.7718465 -7.773409 ]]
Iteration 100 of 1000: loss=0.0158 " + "l1=0.0156" + "l2=0.00018 f=-0.756 shape=(1, 9000, 1)
logits [[ 4.347152  -2.3994925  2.7852697 -7.7575693]]
Iteration 200 of 1000: loss=0.0157 " + "l1=0.0156" + "l2=0.000162 f=-0.757 shape=(1, 9000, 1)
logits [[ 4.3449664 -2.4007623  2.786322  -7.756968 ]]
Iteration 300 of 1000: loss=0.0157 " + "l1=0.0155" + "l2=0.000187 f=-0.757 shape=(1, 9000, 1)
logits [[ 4.341057  -2.4034069  2.7886343 -7.755476 ]]
Iteration 400 of 1000: loss=0.0157 " + "l1=0.0155" + "l2=0.000255 f=-0.758 shape=(1, 9000, 1)
logits [[ 4.336875  -2.4061463  2.7909672 -7.7537336]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.16 " + "l1=0.16" + "l2=0 f=-0.754 shape=(1, 9000, 1)
logits [[ 4.372479  -2.3865125  2.7718465 -7.773409 ]]
Iteration 100 of 1000: loss=0.141 " + "l1=0.131" + "l2=0.0104 f=-0.773 shape=(1, 9000, 1)
logits [[ 4.1843996 -2.4862432  2.8751445 -7.665993 ]]
Iteration 200 of 1000: loss=0.133 " + "l1=0.12" + "l2=0.0137 f=-0.78 shape=(1, 9000, 1)
logits [[ 4.112714  -2.521663   2.9144099 -7.624138 ]]
Iteration 300 of 1000: loss=0.127 " + "l1=0.111" + "l2=0.0166 f=-0.786 shape=(1, 9000, 1)
logits [[ 4.0447745 -2.5427215  2.936618  -7.583824 ]]
Iteration 400 of 1000: loss=0.121 " + "l1=0.102" + "l2=0.0198 f=-0.793 shape=(1, 9000, 1)
logits [[ 3.9809713 -2.560097   2.9647908 -7.5575533]]
Iteration 500 of 1000: loss=0.116 " + "l1=0.0936" + "l2=0.0225 f=-0.799 shape=(1, 9000, 1)
logits [[ 3.9141402 -2.5670033  2.9785492 -7.5231295]]
Iteration 600 of 1000: loss=0.11 " + "l1=0.0834" + "l2=0.0266 f=-0.807 shape=(1, 9000, 1)
logits [[ 3.7987514 -2.5309787  2.9645693 -7.458434 ]]
Iteration 700 of 1000: loss=0.104 " + "l1=0.0742" + "l2=0.0298 f=-0.813 shape=(1, 9000, 1)
logits [[ 3.6914952 -2.4944487  2.9492054 -7.399503 ]]
Iteration 800 of 1000: loss=0.0984 " + "l1=0.0651" + "l2=0.0333 f=-0.818 shape=(1, 9000, 1)
logits [[ 3.5923097 -2.4652464  2.9408143 -7.340748 ]]
Iteration 900 of 1000: loss=0.0929 " + "l1=0.0559" + "l2=0.037 f=-0.822 shape=(1, 9000, 1)
logits [[ 3.4869094 -2.4282968  2.9280887 -7.276045 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.6 " + "l1=1.6" + "l2=0 f=-0.754 shape=(1, 9000, 1)
logits [[ 4.372479  -2.3865125  2.7718465 -7.773409 ]]
Iteration 100 of 1000: loss=0.266 " + "l1=0" + "l2=0.266 f=-0.854 shape=(1, 9000, 1)
logits [[ 2.9563942 -2.329504   2.9662986 -7.0104904]]
Iteration 200 of 1000: loss=0.146 " + "l1=0" + "l2=0.146 f=-0.909 shape=(1, 9000, 1)
logits [[ 2.773255  -2.0274944  2.8131871 -7.1945105]]
Iteration 300 of 1000: loss=0.121 " + "l1=0" + "l2=0.121 f=-0.909 shape=(1, 9000, 1)
logits [[ 2.775557  -2.0017517  2.7932758 -7.2037477]]
Iteration 400 of 1000: loss=0.11 " + "l1=0" + "l2=0.11 f=-0.907 shape=(1, 9000, 1)
logits [[ 2.7627456 -1.9853125  2.7855325 -7.189143 ]]
Iteration 500 of 1000: loss=0.102 " + "l1=0" + "l2=0.102 f=-0.904 shape=(1, 9000, 1)
logits [[ 2.7557924 -1.9783634  2.7768612 -7.1705966]]
Iteration 600 of 1000: loss=0.0986 " + "l1=0" + "l2=0.0986 f=-0.903 shape=(1, 9000, 1)
logits [[ 2.7370641 -1.9754101  2.774886  -7.146769 ]]
Iteration 700 of 1000: loss=0.0933 " + "l1=0" + "l2=0.0933 f=-0.9 shape=(1, 9000, 1)
logits [[ 2.7370286 -1.9771049  2.7678227 -7.126542 ]]
Iteration 800 of 1000: loss=0.089 " + "l1=0" + "l2=0.089 f=-0.898 shape=(1, 9000, 1)
logits [[ 2.7361991 -1.9812458  2.7620208 -7.108451 ]]
Iteration 900 of 1000: loss=0.0855 " + "l1=0" + "l2=0.0855 f=-0.897 shape=(1, 9000, 1)
logits [[ 2.7367496 -1.9862199  2.7554367 -7.093766 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.88 " + "l1=0.88" + "l2=0 f=-0.754 shape=(1, 9000, 1)
logits [[ 4.372479  -2.3865125  2.7718465 -7.773409 ]]
Iteration 100 of 1000: loss=0.276 " + "l1=0" + "l2=0.276 f=-0.856 shape=(1, 9000, 1)
logits [[ 2.9823732 -2.3606205  2.9942122 -7.039091 ]]
Iteration 200 of 1000: loss=0.132 " + "l1=0.00116" + "l2=0.131 f=-0.915 shape=(1, 9000, 1)
logits [[ 2.816676  -2.0410576  2.814575  -7.2495856]]
Iteration 300 of 1000: loss=0.116 " + "l1=0.00463" + "l2=0.112 f=-0.912 shape=(1, 9000, 1)
logits [[ 2.805608  -2.0106015  2.7971878 -7.241231 ]]
Iteration 400 of 1000: loss=0.107 " + "l1=0" + "l2=0.107 f=-0.912 shape=(1, 9000, 1)
logits [[ 2.7606666 -1.9906288  2.7973588 -7.214691 ]]
Iteration 500 of 1000: loss=0.0969 " + "l1=0" + "l2=0.0969 f=-0.907 shape=(1, 9000, 1)
logits [[ 2.7712698 -1.9889668  2.7850978 -7.194406 ]]
Iteration 600 of 1000: loss=0.0912 " + "l1=0" + "l2=0.0912 f=-0.903 shape=(1, 9000, 1)
logits [[ 2.7653198 -1.9901129  2.779331  -7.1675997]]
Iteration 700 of 1000: loss=0.0856 " + "l1=0" + "l2=0.0856 f=-0.9 shape=(1, 9000, 1)
logits [[ 2.7692611 -1.9919492  2.7695227 -7.146412 ]]
Iteration 800 of 1000: loss=0.0837 " + "l1=0" + "l2=0.0837 f=-0.9 shape=(1, 9000, 1)
logits [[ 2.7502143 -1.9932619  2.7669683 -7.1232476]]
Iteration 900 of 1000: loss=0.0796 " + "l1=0" + "l2=0.0796 f=-0.899 shape=(1, 9000, 1)
logits [[ 2.7465546 -1.9970042  2.7600088 -7.1073966]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.52 " + "l1=0.52" + "l2=0 f=-0.754 shape=(1, 9000, 1)
logits [[ 4.372479  -2.3865125  2.7718465 -7.773409 ]]
Iteration 100 of 1000: loss=0.317 " + "l1=0.202" + "l2=0.115 f=-0.812 shape=(1, 9000, 1)
logits [[ 3.6791902 -2.6116066  3.0582035 -7.3737307]]
Iteration 200 of 1000: loss=0.151 " + "l1=0.00138" + "l2=0.15 f=-0.904 shape=(1, 9000, 1)
logits [[ 2.857975  -2.1155572  2.8537438 -7.213528 ]]
Iteration 300 of 1000: loss=0.113 " + "l1=0.00229" + "l2=0.111 f=-0.913 shape=(1, 9000, 1)
logits [[ 2.8207772 -2.0309103  2.81374   -7.257016 ]]
Iteration 400 of 1000: loss=0.101 " + "l1=0" + "l2=0.101 f=-0.911 shape=(1, 9000, 1)
logits [[ 2.7974122 -2.0089312  2.802782  -7.2344913]]
Iteration 500 of 1000: loss=0.0947 " + "l1=0" + "l2=0.0947 f=-0.907 shape=(1, 9000, 1)
logits [[ 2.77973   -2.0030801  2.794642  -7.2010245]]
Iteration 600 of 1000: loss=0.089 " + "l1=0" + "l2=0.089 f=-0.904 shape=(1, 9000, 1)
logits [[ 2.7712762 -1.9988815  2.7836926 -7.172415 ]]
Iteration 700 of 1000: loss=0.0837 " + "l1=0" + "l2=0.0837 f=-0.901 shape=(1, 9000, 1)
logits [[ 2.7682326 -1.9982048  2.7726614 -7.1486535]]
Iteration 800 of 1000: loss=0.0796 " + "l1=0.000506" + "l2=0.0791 f=-0.901 shape=(1, 9000, 1)
logits [[ 2.7649913 -2.0002415  2.763435  -7.130237 ]]
Iteration 900 of 1000: loss=0.076 " + "l1=0.00112" + "l2=0.0749 f=-0.899 shape=(1, 9000, 1)
logits [[ 2.7591784 -2.002993   2.75572   -7.108825 ]]
--- 266.2362449169159 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.121 " + "l1=0.121" + "l2=0 f=-0.754 shape=(1, 9000, 1)
logits [[ 4.372479  -2.3865125  2.7718465 -7.773409 ]]
Iteration 100 of 1000: loss=0.121 " + "l1=0.12" + "l2=0.000472 f=-0.752 shape=(1, 9000, 1)
logits [[ 4.309139  -2.3547482  2.7402105 -7.702337 ]]
Iteration 200 of 1000: loss=0.12 " + "l1=0.12" + "l2=0.00052 f=-0.752 shape=(1, 9000, 1)
logits [[ 4.2941384 -2.34735    2.731905  -7.6865153]]
Iteration 300 of 1000: loss=0.12 " + "l1=0.119" + "l2=0.000663 f=-0.752 shape=(1, 9000, 1)
logits [[ 4.276305  -2.3387856  2.7218792 -7.667122 ]]
Iteration 400 of 1000: loss=0.12 " + "l1=0.119" + "l2=0.000812 f=-0.752 shape=(1, 9000, 1)
logits [[ 4.258591  -2.3304052  2.7117617 -7.6477237]]
Iteration 500 of 1000: loss=0.12 " + "l1=0.119" + "l2=0.00103 f=-0.752 shape=(1, 9000, 1)
logits [[ 4.2408996 -2.3231869  2.7022603 -7.6283736]]
Iteration 600 of 1000: loss=0.12 " + "l1=0.118" + "l2=0.00117 f=-0.752 shape=(1, 9000, 1)
logits [[ 4.224795  -2.3173845  2.6940074 -7.6102843]]
Iteration 700 of 1000: loss=0.119 " + "l1=0.118" + "l2=0.00129 f=-0.752 shape=(1, 9000, 1)
logits [[ 4.209598  -2.3125937  2.6867986 -7.5932155]]
Iteration 800 of 1000: loss=0.119 " + "l1=0.118" + "l2=0.00158 f=-0.752 shape=(1, 9000, 1)
logits [[ 4.1952324 -2.3083003  2.6801467 -7.5768685]]
Iteration 900 of 1000: loss=0.119 " + "l1=0.117" + "l2=0.00171 f=-0.753 shape=(1, 9000, 1)
logits [[ 4.1812963 -2.3043032  2.6738253 -7.561    ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.21 " + "l1=1.21" + "l2=0 f=-0.754 shape=(1, 9000, 1)
logits [[ 4.372479  -2.3865125  2.7718465 -7.773409 ]]
Iteration 100 of 1000: loss=1.12 " + "l1=1.07" + "l2=0.0512 f=-0.766 shape=(1, 9000, 1)
logits [[ 3.5858526 -1.9268616  2.3628466 -7.0853887]]
Iteration 200 of 1000: loss=1.06 " + "l1=0.976" + "l2=0.084 f=-0.795 shape=(1, 9000, 1)
logits [[ 3.0221028 -1.6462073  2.1880338 -6.7420163]]
Iteration 300 of 1000: loss=1.02 " + "l1=0.918" + "l2=0.1 f=-0.79 shape=(1, 9000, 1)
logits [[ 2.710276  -1.4896853  2.0906262 -6.470121 ]]
Iteration 400 of 1000: loss=0.988 " + "l1=0.874" + "l2=0.114 f=-0.786 shape=(1, 9000, 1)
logits [[ 2.485076  -1.3842123  2.0107076 -6.255538 ]]
Iteration 500 of 1000: loss=0.961 " + "l1=0.833" + "l2=0.128 f=-0.783 shape=(1, 9000, 1)
logits [[ 2.2672982 -1.2759584  1.9407665 -6.062776 ]]
Iteration 600 of 1000: loss=0.931 " + "l1=0.79" + "l2=0.142 f=-0.78 shape=(1, 9000, 1)
logits [[ 2.038214  -1.1715872  1.8690431 -5.857407 ]]
Iteration 700 of 1000: loss=0.892 " + "l1=0.74" + "l2=0.152 f=-0.773 shape=(1, 9000, 1)
logits [[ 1.8004111 -1.075109   1.7821165 -5.5996213]]
Iteration 800 of 1000: loss=0.854 " + "l1=0.707" + "l2=0.146 f=-0.752 shape=(1, 9000, 1)
logits [[ 1.7016053 -1.0376866  1.6986364 -5.3711495]]
Iteration 900 of 1000: loss=0.82 " + "l1=0.68" + "l2=0.14 f=-0.732 shape=(1, 9000, 1)
logits [[ 1.6247352 -1.0017434  1.6216407 -5.173995 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.1 " + "l1=12.1" + "l2=0 f=-0.754 shape=(1, 9000, 1)
logits [[ 4.372479  -2.3865125  2.7718465 -7.773409 ]]
Iteration 100 of 1000: loss=6.31 " + "l1=3.89" + "l2=2.41 f=-0.48 shape=(1, 9000, 1)
logits [[ 0.6390303   0.02471194  0.6542822  -3.2399268 ]]
Iteration 200 of 1000: loss=3.96 " + "l1=0.994" + "l2=2.97 f=-0.354 shape=(1, 9000, 1)
logits [[-0.39257923 -0.01936918 -0.00514464 -0.99881583]]
Iteration 300 of 1000: loss=2.8 " + "l1=0.0309" + "l2=2.77 f=-0.242 shape=(1, 9000, 1)
logits [[-0.59797907 -0.10984736 -0.11787993 -0.14069974]]
Iteration 400 of 1000: loss=2.2 " + "l1=0" + "l2=2.2 f=-0.226 shape=(1, 9000, 1)
logits [[-0.5280409  -0.15670666 -0.11090651 -0.11002266]]
Iteration 500 of 1000: loss=1.85 " + "l1=0" + "l2=1.85 f=-0.223 shape=(1, 9000, 1)
logits [[-0.55757457 -0.10788334 -0.12657966 -0.09926717]]
Iteration 600 of 1000: loss=1.62 " + "l1=0" + "l2=1.62 f=-0.222 shape=(1, 9000, 1)
logits [[-0.5339474  -0.14466648 -0.10620931 -0.10305544]]
Iteration 700 of 1000: loss=1.46 " + "l1=0.0119" + "l2=1.45 f=-0.225 shape=(1, 9000, 1)
logits [[-0.514186   -0.12830637 -0.12188309 -0.13381258]]
Iteration 800 of 1000: loss=1.34 " + "l1=0.0062" + "l2=1.33 f=-0.232 shape=(1, 9000, 1)
logits [[-0.502056   -0.13909374 -0.13991107 -0.14529145]]
Iteration 900 of 1000: loss=1.24 " + "l1=0" + "l2=1.24 f=-0.236 shape=(1, 9000, 1)
logits [[-0.48384023 -0.17637302 -0.15291204 -0.13201213]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.68 " + "l1=6.68" + "l2=0 f=-0.754 shape=(1, 9000, 1)
logits [[ 4.372479  -2.3865125  2.7718465 -7.773409 ]]
Iteration 100 of 1000: loss=4.34 " + "l1=3.49" + "l2=0.85 f=-0.661 shape=(1, 9000, 1)
logits [[ 1.3893063  -0.48941207  1.4009695  -4.9450097 ]]
Iteration 200 of 1000: loss=3.43 " + "l1=2.31" + "l2=1.12 f=-0.523 shape=(1, 9000, 1)
logits [[ 6.9702059e-01 -2.6694480e-03  7.0364428e-01 -3.4900074e+00]]
Iteration 300 of 1000: loss=2.48 " + "l1=1.12" + "l2=1.36 f=-0.429 shape=(1, 9000, 1)
logits [[-0.21348888  0.15863137  0.18310374 -1.8446584 ]]
Iteration 400 of 1000: loss=1.94 " + "l1=0.701" + "l2=1.24 f=-0.369 shape=(1, 9000, 1)
logits [[-0.3285825   0.03504764  0.04691893 -1.2279158 ]]
Iteration 500 of 1000: loss=1.57 " + "l1=0.388" + "l2=1.19 f=-0.344 shape=(1, 9000, 1)
logits [[-0.38840207 -0.0972347  -0.09284741 -0.7977586 ]]
Iteration 600 of 1000: loss=1.31 " + "l1=0.0723" + "l2=1.24 f=-0.304 shape=(1, 9000, 1)
logits [[-0.48368797 -0.2061965  -0.19795175 -0.32937118]]
Iteration 700 of 1000: loss=1.11 " + "l1=0.00378" + "l2=1.11 f=-0.288 shape=(1, 9000, 1)
logits [[-0.48205528 -0.2169075  -0.22878431 -0.22377434]]
Iteration 800 of 1000: loss=1.01 " + "l1=0.0118" + "l2=0.994 f=-0.277 shape=(1, 9000, 1)
logits [[-0.4388545  -0.22923724 -0.20949614 -0.23101616]]
Iteration 900 of 1000: loss=0.927 " + "l1=0" + "l2=0.927 f=-0.27 shape=(1, 9000, 1)
logits [[-0.42280158 -0.23567744 -0.21273811 -0.20781377]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.95 " + "l1=3.95" + "l2=0 f=-0.754 shape=(1, 9000, 1)
logits [[ 4.372479  -2.3865125  2.7718465 -7.773409 ]]
Iteration 100 of 1000: loss=2.91 " + "l1=2.5" + "l2=0.408 f=-0.767 shape=(1, 9000, 1)
logits [[ 1.8796258 -0.9981175  1.8567253 -5.8081226]]
Iteration 200 of 1000: loss=2.54 " + "l1=2.06" + "l2=0.477 f=-0.688 shape=(1, 9000, 1)
logits [[ 1.3459969  -0.45556682  1.3507961  -4.9935203 ]]
Iteration 300 of 1000: loss=2.22 " + "l1=1.65" + "l2=0.57 f=-0.628 shape=(1, 9000, 1)
logits [[ 0.90764815 -0.14703546  0.90275383 -4.1772466 ]]
Iteration 400 of 1000: loss=1.89 " + "l1=1.21" + "l2=0.679 f=-0.528 shape=(1, 9000, 1)
logits [[ 0.57318723 -0.12859757  0.5819682  -3.1382637 ]]
Iteration 500 of 1000: loss=1.61 " + "l1=0.939" + "l2=0.667 f=-0.481 shape=(1, 9000, 1)
logits [[ 0.31369126 -0.06822286  0.36124337 -2.5293767 ]]
Iteration 600 of 1000: loss=1.42 " + "l1=0.751" + "l2=0.672 f=-0.453 shape=(1, 9000, 1)
logits [[ 0.03371471  0.0256042   0.21984744 -2.0909755 ]]
Iteration 700 of 1000: loss=1.3 " + "l1=0.63" + "l2=0.666 f=-0.431 shape=(1, 9000, 1)
logits [[-0.1236483   0.04375091  0.14599912 -1.7909346 ]]
Iteration 800 of 1000: loss=1.14 " + "l1=0.497" + "l2=0.643 f=-0.402 shape=(1, 9000, 1)
logits [[-0.20977995  0.04430664  0.04205842 -1.4846053 ]]
Iteration 900 of 1000: loss=1.03 " + "l1=0.408" + "l2=0.622 f=-0.382 shape=(1, 9000, 1)
logits [[-0.23007894 -0.01538309 -0.01370807 -1.2704545 ]]
--- 299.0723297595978 seconds ---
Adv result:3
Loading record A00592
(1, 2996)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.117 " + "l1=0.117" + "l2=0 f=-1.03 shape=(1, 9000, 1)
logits [[ 7.3066444 -4.4139147 -2.1883247 -4.8132052]]
Iteration 100 of 1000: loss=0.116 " + "l1=0.116" + "l2=0.000364 f=-1.02 shape=(1, 9000, 1)
logits [[ 7.2195907 -4.383565  -2.1894634 -4.7436047]]
Iteration 200 of 1000: loss=0.116 " + "l1=0.116" + "l2=0.000449 f=-1.02 shape=(1, 9000, 1)
logits [[ 7.1886735 -4.372844  -2.1889386 -4.7197485]]
Iteration 300 of 1000: loss=0.116 " + "l1=0.115" + "l2=0.000568 f=-1.02 shape=(1, 9000, 1)
logits [[ 7.1542063 -4.3612785 -2.1884027 -4.6929717]]
Iteration 400 of 1000: loss=0.115 " + "l1=0.115" + "l2=0.000762 f=-1.02 shape=(1, 9000, 1)
logits [[ 7.114768  -4.345471  -2.1834195 -4.665782 ]]
Iteration 500 of 1000: loss=0.115 " + "l1=0.114" + "l2=0.00104 f=-1.02 shape=(1, 9000, 1)
logits [[ 7.063534  -4.3197365 -2.170107  -4.634465 ]]
Iteration 600 of 1000: loss=0.114 " + "l1=0.113" + "l2=0.00116 f=-1.01 shape=(1, 9000, 1)
logits [[ 7.016741  -4.3013024 -2.1637404 -4.599874 ]]
Iteration 700 of 1000: loss=0.114 " + "l1=0.112" + "l2=0.0015 f=-1.01 shape=(1, 9000, 1)
logits [[ 6.9486227 -4.268575  -2.1437178 -4.5567803]]
Iteration 800 of 1000: loss=0.112 " + "l1=0.11" + "l2=0.00234 f=-0.984 shape=(1, 9000, 1)
logits [[ 6.820543  -4.1840734 -2.0650074 -4.506013 ]]
Iteration 900 of 1000: loss=0.108 " + "l1=0.102" + "l2=0.00548 f=-0.926 shape=(1, 9000, 1)
logits [[ 6.3937173 -3.8441374 -1.7280221 -4.5257993]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.17 " + "l1=1.17" + "l2=0 f=-1.03 shape=(1, 9000, 1)
logits [[ 7.3066444 -4.4139147 -2.1883247 -4.8132052]]
Iteration 100 of 1000: loss=0.949 " + "l1=0.833" + "l2=0.116 f=-0.798 shape=(1, 9000, 1)
logits [[ 5.1952744 -3.135635  -1.0458207 -4.2042475]]
Iteration 200 of 1000: loss=0.82 " + "l1=0.665" + "l2=0.155 f=-0.728 shape=(1, 9000, 1)
logits [[ 3.8821647  -2.7653985  -0.71560776 -3.3115866 ]]
Iteration 300 of 1000: loss=0.605 " + "l1=0.396" + "l2=0.21 f=-0.59 shape=(1, 9000, 1)
logits [[ 1.7931468  -2.1628401  -0.30885428 -1.6830668 ]]
Iteration 400 of 1000: loss=0.443 " + "l1=0.232" + "l2=0.212 f=-0.522 shape=(1, 9000, 1)
logits [[ 0.6149998  -1.700011   -0.24581759 -0.75634426]]
Iteration 500 of 1000: loss=0.277 " + "l1=0.0936" + "l2=0.183 f=-0.55 shape=(1, 9000, 1)
logits [[-0.12210289 -1.058455   -0.12669583 -0.89246017]]
Iteration 600 of 1000: loss=0.213 " + "l1=0.0757" + "l2=0.138 f=-0.561 shape=(1, 9000, 1)
logits [[-0.24667564 -1.0000521  -0.24303012 -0.75224966]]
Iteration 700 of 1000: loss=0.179 " + "l1=0.0598" + "l2=0.119 f=-0.566 shape=(1, 9000, 1)
logits [[-0.374161   -0.95844036 -0.36024553 -0.571477  ]]
Iteration 800 of 1000: loss=0.156 " + "l1=0.0471" + "l2=0.109 f=-0.57 shape=(1, 9000, 1)
logits [[-0.46504506 -0.90868735 -0.4376063  -0.46814638]]
Iteration 900 of 1000: loss=0.142 " + "l1=0.0423" + "l2=0.0994 f=-0.566 shape=(1, 9000, 1)
logits [[-0.45798942 -0.8805354  -0.45859942 -0.46542865]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.7 " + "l1=11.7" + "l2=0 f=-1.03 shape=(1, 9000, 1)
logits [[ 7.3066444 -4.4139147 -2.1883247 -4.8132052]]
Iteration 100 of 1000: loss=1.74 " + "l1=0.0129" + "l2=1.73 f=-0.498 shape=(1, 9000, 1)
logits [[-0.48930475 -0.5022436  -0.49407467 -0.5048641 ]]
Iteration 200 of 1000: loss=1.04 " + "l1=0" + "l2=1.04 f=-0.534 shape=(1, 9000, 1)
logits [[-0.5160949  -0.47985432 -0.49158525 -0.649291  ]]
Iteration 300 of 1000: loss=0.786 " + "l1=0.00958" + "l2=0.776 f=-0.531 shape=(1, 9000, 1)
logits [[-0.5108695  -0.49382734 -0.48424724 -0.6367986 ]]
Iteration 400 of 1000: loss=0.626 " + "l1=0" + "l2=0.626 f=-0.519 shape=(1, 9000, 1)
logits [[-0.53423274 -0.4731738  -0.48679635 -0.58266616]]
Iteration 500 of 1000: loss=0.506 " + "l1=0" + "l2=0.506 f=-0.51 shape=(1, 9000, 1)
logits [[-0.53849477 -0.4660403  -0.46980527 -0.5642111 ]]
Iteration 600 of 1000: loss=0.414 " + "l1=0.00753" + "l2=0.406 f=-0.505 shape=(1, 9000, 1)
logits [[-0.4937443  -0.50127476 -0.50662154 -0.5179598 ]]
Iteration 700 of 1000: loss=0.34 " + "l1=0" + "l2=0.34 f=-0.509 shape=(1, 9000, 1)
logits [[-0.5321347  -0.45775595 -0.47502875 -0.5698343 ]]
Iteration 800 of 1000: loss=0.28 " + "l1=0" + "l2=0.28 f=-0.512 shape=(1, 9000, 1)
logits [[-0.52521205 -0.45691246 -0.4600231  -0.60541236]]
Iteration 900 of 1000: loss=0.245 " + "l1=0.00803" + "l2=0.237 f=-0.51 shape=(1, 9000, 1)
logits [[-0.4965805  -0.47818598 -0.470152   -0.5950522 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.45 " + "l1=6.45" + "l2=0 f=-1.03 shape=(1, 9000, 1)
logits [[ 7.3066444 -4.4139147 -2.1883247 -4.8132052]]
Iteration 100 of 1000: loss=1.54 " + "l1=0.392" + "l2=1.14 f=-0.554 shape=(1, 9000, 1)
logits [[-0.10479602 -0.8182417  -0.12993585 -1.1622603 ]]
Iteration 200 of 1000: loss=0.778 " + "l1=0.00379" + "l2=0.774 f=-0.555 shape=(1, 9000, 1)
logits [[-0.49188724 -0.49134654 -0.48445073 -0.7523638 ]]
Iteration 300 of 1000: loss=0.536 " + "l1=0.00207" + "l2=0.534 f=-0.551 shape=(1, 9000, 1)
logits [[-0.53431034 -0.46035478 -0.4565897  -0.75423807]]
Iteration 400 of 1000: loss=0.402 " + "l1=0" + "l2=0.402 f=-0.553 shape=(1, 9000, 1)
logits [[-0.4983006  -0.48589924 -0.49138573 -0.7352808 ]]
Iteration 500 of 1000: loss=0.332 " + "l1=0" + "l2=0.332 f=-0.557 shape=(1, 9000, 1)
logits [[-0.5515075  -0.4663781  -0.47118697 -0.73725563]]
Iteration 600 of 1000: loss=0.27 " + "l1=0" + "l2=0.27 f=-0.563 shape=(1, 9000, 1)
logits [[-0.52326083 -0.48358604 -0.4888247  -0.75447893]]
Iteration 700 of 1000: loss=0.235 " + "l1=0" + "l2=0.235 f=-0.561 shape=(1, 9000, 1)
logits [[-0.52375823 -0.47191146 -0.48067567 -0.76937383]]
Iteration 800 of 1000: loss=0.21 " + "l1=0" + "l2=0.21 f=-0.563 shape=(1, 9000, 1)
logits [[-0.5209371  -0.49137878 -0.49355137 -0.7462448 ]]
Iteration 900 of 1000: loss=0.188 " + "l1=0" + "l2=0.188 f=-0.56 shape=(1, 9000, 1)
logits [[-0.505127   -0.502011   -0.50411475 -0.72683567]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.81 " + "l1=3.81" + "l2=0 f=-1.03 shape=(1, 9000, 1)
logits [[ 7.3066444 -4.4139147 -2.1883247 -4.8132052]]
Iteration 100 of 1000: loss=1.77 " + "l1=0.995" + "l2=0.774 f=-0.551 shape=(1, 9000, 1)
logits [[ 1.0386684  -2.0232654  -0.15569077 -1.065415  ]]
Iteration 200 of 1000: loss=0.702 " + "l1=0.144" + "l2=0.558 f=-0.561 shape=(1, 9000, 1)
logits [[-0.2895727  -0.73210484 -0.30264923 -0.9177983 ]]
Iteration 300 of 1000: loss=0.417 " + "l1=0.000571" + "l2=0.416 f=-0.548 shape=(1, 9000, 1)
logits [[-0.50346625 -0.49386156 -0.4921055  -0.7009979 ]]
Iteration 400 of 1000: loss=0.311 " + "l1=0" + "l2=0.311 f=-0.546 shape=(1, 9000, 1)
logits [[-0.5244489  -0.48756206 -0.4894442  -0.6808013 ]]
Iteration 500 of 1000: loss=0.258 " + "l1=0" + "l2=0.258 f=-0.543 shape=(1, 9000, 1)
logits [[-0.540242   -0.5077676  -0.512741   -0.61303955]]
Iteration 600 of 1000: loss=0.216 " + "l1=0" + "l2=0.216 f=-0.543 shape=(1, 9000, 1)
logits [[-0.54151964 -0.48929548 -0.4933984  -0.64930457]]
Iteration 700 of 1000: loss=0.187 " + "l1=0" + "l2=0.187 f=-0.545 shape=(1, 9000, 1)
logits [[-0.5338568  -0.5294757  -0.53182596 -0.58464473]]
Iteration 800 of 1000: loss=0.17 " + "l1=0.000292" + "l2=0.17 f=-0.541 shape=(1, 9000, 1)
logits [[-0.5348002  -0.52644426 -0.52554595 -0.57791317]]
Iteration 900 of 1000: loss=0.157 " + "l1=0" + "l2=0.157 f=-0.54 shape=(1, 9000, 1)
logits [[-0.5229237  -0.51802427 -0.52472043 -0.5930171 ]]
--- 298.92700457572937 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0949 " + "l1=0.0949" + "l2=0 f=-1.03 shape=(1, 9000, 1)
logits [[ 7.3066444 -4.4139147 -2.1883247 -4.8132052]]
Iteration 100 of 1000: loss=0.0944 " + "l1=0.0941" + "l2=0.00027 f=-1.03 shape=(1, 9000, 1)
logits [[ 7.235051  -4.399043  -2.1777503 -4.7587357]]
Iteration 200 of 1000: loss=0.0942 " + "l1=0.0938" + "l2=0.000318 f=-1.02 shape=(1, 9000, 1)
logits [[ 7.2118893 -4.393725  -2.1726825 -4.7434726]]
Iteration 300 of 1000: loss=0.0939 " + "l1=0.0935" + "l2=0.00042 f=-1.02 shape=(1, 9000, 1)
logits [[ 7.1847553 -4.3873334 -2.1676636 -4.724813 ]]
Iteration 400 of 1000: loss=0.0937 " + "l1=0.0932" + "l2=0.000518 f=-1.02 shape=(1, 9000, 1)
logits [[ 7.1551785 -4.379933  -2.1613648 -4.7046804]]
Iteration 500 of 1000: loss=0.0934 " + "l1=0.0927" + "l2=0.000707 f=-1.02 shape=(1, 9000, 1)
logits [[ 7.1189904 -4.367957  -2.149896  -4.684039 ]]
Iteration 600 of 1000: loss=0.0931 " + "l1=0.0921" + "l2=0.000987 f=-1.02 shape=(1, 9000, 1)
logits [[ 7.07468   -4.3510075 -2.131934  -4.659261 ]]
Iteration 700 of 1000: loss=0.0926 " + "l1=0.0914" + "l2=0.00124 f=-1.01 shape=(1, 9000, 1)
logits [[ 7.0269017 -4.3334503 -2.1105587 -4.6311836]]
Iteration 800 of 1000: loss=0.0915 " + "l1=0.0893" + "l2=0.00227 f=-0.991 shape=(1, 9000, 1)
logits [[ 6.9129376 -4.2668176 -2.0140467 -4.5974236]]
Iteration 900 of 1000: loss=0.0888 " + "l1=0.0851" + "l2=0.00371 f=-0.959 shape=(1, 9000, 1)
logits [[ 6.711155  -4.1608863 -1.794962  -4.5908346]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.949 " + "l1=0.949" + "l2=0 f=-1.03 shape=(1, 9000, 1)
logits [[ 7.3066444 -4.4139147 -2.1883247 -4.8132052]]
Iteration 100 of 1000: loss=0.669 " + "l1=0.523" + "l2=0.146 f=-0.774 shape=(1, 9000, 1)
logits [[ 5.0603857  -3.5809295  -0.17229219 -4.4031796 ]]
Iteration 200 of 1000: loss=0.544 " + "l1=0.362" + "l2=0.182 f=-0.695 shape=(1, 9000, 1)
logits [[ 4.143755  -3.667871   0.5223499 -3.7785935]]
Iteration 300 of 1000: loss=0.416 " + "l1=0.188" + "l2=0.227 f=-0.643 shape=(1, 9000, 1)
logits [[ 3.0472586 -3.9012895  1.1635666 -2.8806317]]
Iteration 400 of 1000: loss=0.307 " + "l1=0.0898" + "l2=0.218 f=-0.614 shape=(1, 9000, 1)
logits [[ 2.1548564 -3.7979972  1.2571874 -2.0688028]]
Iteration 500 of 1000: loss=0.215 " + "l1=0.0173" + "l2=0.198 f=-0.582 shape=(1, 9000, 1)
logits [[ 1.5092282 -3.6239128  1.3361012 -1.5507985]]
Iteration 600 of 1000: loss=0.152 " + "l1=0.00257" + "l2=0.149 f=-0.59 shape=(1, 9000, 1)
logits [[ 1.2927582 -3.4339175  1.2670099 -1.4874285]]
Iteration 700 of 1000: loss=0.121 " + "l1=0" + "l2=0.121 f=-0.6 shape=(1, 9000, 1)
logits [[ 1.2046726 -3.4047055  1.2100916 -1.410148 ]]
Iteration 800 of 1000: loss=0.101 " + "l1=0" + "l2=0.101 f=-0.619 shape=(1, 9000, 1)
logits [[ 1.1692224 -3.3848464  1.187915  -1.4467866]]
Iteration 900 of 1000: loss=0.0875 " + "l1=0" + "l2=0.0875 f=-0.632 shape=(1, 9000, 1)
logits [[ 1.1243541 -3.3620927  1.1657937 -1.4575843]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.522 " + "l1=0.522" + "l2=0 f=-1.03 shape=(1, 9000, 1)
logits [[ 7.3066444 -4.4139147 -2.1883247 -4.8132052]]
Iteration 100 of 1000: loss=0.482 " + "l1=0.456" + "l2=0.0263 f=-0.951 shape=(1, 9000, 1)
logits [[ 6.557672  -4.0466986 -1.7294664 -4.5848017]]
Iteration 200 of 1000: loss=0.396 " + "l1=0.326" + "l2=0.0705 f=-0.863 shape=(1, 9000, 1)
logits [[ 5.3697543 -3.6582782 -0.5509504 -4.6107607]]
Iteration 300 of 1000: loss=0.377 " + "l1=0.303" + "l2=0.0746 f=-0.849 shape=(1, 9000, 1)
logits [[ 5.077876   -3.6463227  -0.42946818 -4.399712  ]]
Iteration 400 of 1000: loss=0.347 " + "l1=0.264" + "l2=0.0835 f=-0.814 shape=(1, 9000, 1)
logits [[ 4.6039014 -3.6495664 -0.1903815 -4.0180326]]
Iteration 500 of 1000: loss=0.307 " + "l1=0.215" + "l2=0.0917 f=-0.789 shape=(1, 9000, 1)
logits [[ 3.9845262  -3.631638    0.07261072 -3.5799658 ]]
Iteration 600 of 1000: loss=0.269 " + "l1=0.174" + "l2=0.0951 f=-0.733 shape=(1, 9000, 1)
logits [[ 3.4581387 -3.6573532  0.2939386 -3.0257533]]
Iteration 700 of 1000: loss=0.223 " + "l1=0.128" + "l2=0.0948 f=-0.702 shape=(1, 9000, 1)
logits [[ 2.8901968 -3.7516427  0.5558199 -2.5031135]]
Iteration 800 of 1000: loss=0.185 " + "l1=0.0903" + "l2=0.0943 f=-0.677 shape=(1, 9000, 1)
logits [[ 2.3781996  -3.784744    0.73728806 -2.0367622 ]]
Iteration 900 of 1000: loss=0.155 " + "l1=0.0627" + "l2=0.0926 f=-0.666 shape=(1, 9000, 1)
logits [[ 1.9252062  -3.763396    0.78567225 -1.6117425 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.736 " + "l1=0.736" + "l2=0 f=-1.03 shape=(1, 9000, 1)
logits [[ 7.3066444 -4.4139147 -2.1883247 -4.8132052]]
Iteration 100 of 1000: loss=0.595 " + "l1=0.502" + "l2=0.0934 f=-0.863 shape=(1, 9000, 1)
logits [[ 5.5546503  -3.550298   -0.92178714 -4.535114  ]]
Iteration 200 of 1000: loss=0.489 " + "l1=0.368" + "l2=0.121 f=-0.748 shape=(1, 9000, 1)
logits [[ 4.788533   -3.6437283   0.03721622 -4.174073  ]]
Iteration 300 of 1000: loss=0.434 " + "l1=0.289" + "l2=0.145 f=-0.72 shape=(1, 9000, 1)
logits [[ 4.136652   -3.6816182   0.40146443 -3.735661  ]]
Iteration 400 of 1000: loss=0.362 " + "l1=0.188" + "l2=0.173 f=-0.706 shape=(1, 9000, 1)
logits [[ 3.297071  -3.8268914  0.8655588 -3.1611092]]
Iteration 500 of 1000: loss=0.292 " + "l1=0.107" + "l2=0.185 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.5269709 -3.8414502  1.147833  -2.573436 ]]
Iteration 600 of 1000: loss=0.239 " + "l1=0.0596" + "l2=0.18 f=-0.661 shape=(1, 9000, 1)
logits [[ 1.9843414 -3.781889   1.215912  -2.0623844]]
Iteration 700 of 1000: loss=0.2 " + "l1=0.0226" + "l2=0.177 f=-0.635 shape=(1, 9000, 1)
logits [[ 1.54398   -3.6907337  1.253011  -1.6456517]]
Iteration 800 of 1000: loss=0.153 " + "l1=0.00111" + "l2=0.152 f=-0.657 shape=(1, 9000, 1)
logits [[ 1.2178866 -3.6500695  1.2035329 -1.3987998]]
Iteration 900 of 1000: loss=0.112 " + "l1=0" + "l2=0.112 f=-0.686 shape=(1, 9000, 1)
logits [[ 1.1503171 -3.6752806  1.1516577 -1.3689375]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.629 " + "l1=0.629" + "l2=0 f=-1.03 shape=(1, 9000, 1)
logits [[ 7.3066444 -4.4139147 -2.1883247 -4.8132052]]
Iteration 100 of 1000: loss=0.549 " + "l1=0.496" + "l2=0.0528 f=-0.908 shape=(1, 9000, 1)
logits [[ 6.1127324 -3.885265  -1.3700457 -4.4891353]]
Iteration 200 of 1000: loss=0.45 " + "l1=0.364" + "l2=0.0861 f=-0.817 shape=(1, 9000, 1)
logits [[ 5.1355624  -3.6316638  -0.35799313 -4.414471  ]]
Iteration 300 of 1000: loss=0.408 " + "l1=0.291" + "l2=0.117 f=-0.771 shape=(1, 9000, 1)
logits [[ 4.5223494  -3.6621473   0.12808533 -4.0702996 ]]
Iteration 400 of 1000: loss=0.359 " + "l1=0.224" + "l2=0.135 f=-0.68 shape=(1, 9000, 1)
logits [[ 3.9049687 -3.7294781  0.5203308 -3.4176595]]
Iteration 500 of 1000: loss=0.293 " + "l1=0.153" + "l2=0.14 f=-0.634 shape=(1, 9000, 1)
logits [[ 3.1724484  -3.8220015   0.85916114 -2.745545  ]]
Iteration 600 of 1000: loss=0.226 " + "l1=0.0885" + "l2=0.138 f=-0.636 shape=(1, 9000, 1)
logits [[ 2.4322474 -3.9089768  1.0970005 -2.1658928]]
Iteration 700 of 1000: loss=0.183 " + "l1=0.0506" + "l2=0.132 f=-0.611 shape=(1, 9000, 1)
logits [[ 1.9169098 -3.8575628  1.1528298 -1.6556923]]
Iteration 800 of 1000: loss=0.144 " + "l1=0.0168" + "l2=0.127 f=-0.591 shape=(1, 9000, 1)
logits [[ 1.4727486 -3.7502506  1.2197889 -1.30449  ]]
Iteration 900 of 1000: loss=0.115 " + "l1=0.000807" + "l2=0.115 f=-0.588 shape=(1, 9000, 1)
logits [[ 1.2024863 -3.652146   1.1903124 -1.0916181]]
--- 298.67857360839844 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.121 " + "l1=0.121" + "l2=0 f=-1.03 shape=(1, 9000, 1)
logits [[ 7.3066444 -4.4139147 -2.1883247 -4.8132052]]
Iteration 100 of 1000: loss=0.119 " + "l1=0.119" + "l2=0.000755 f=-1.02 shape=(1, 9000, 1)
logits [[ 7.178698  -4.387163  -2.1950355 -4.691321 ]]
Iteration 200 of 1000: loss=0.119 " + "l1=0.118" + "l2=0.00102 f=-1.02 shape=(1, 9000, 1)
logits [[ 7.1270065 -4.37693   -2.1987882 -4.6435423]]
Iteration 300 of 1000: loss=0.118 " + "l1=0.117" + "l2=0.0013 f=-1.02 shape=(1, 9000, 1)
logits [[ 7.073239  -4.3658357 -2.2023032 -4.5945945]]
Iteration 400 of 1000: loss=0.117 " + "l1=0.116" + "l2=0.00155 f=-1.02 shape=(1, 9000, 1)
logits [[ 7.0149217 -4.3534493 -2.2047338 -4.5423594]]
Iteration 500 of 1000: loss=0.116 " + "l1=0.114" + "l2=0.00186 f=-1.02 shape=(1, 9000, 1)
logits [[ 6.945217  -4.33767   -2.205567  -4.4813614]]
Iteration 600 of 1000: loss=0.115 " + "l1=0.113" + "l2=0.0021 f=-1.02 shape=(1, 9000, 1)
logits [[ 6.8658576 -4.3194413 -2.2061965 -4.4122972]]
Iteration 700 of 1000: loss=0.113 " + "l1=0.111" + "l2=0.00253 f=-1.02 shape=(1, 9000, 1)
logits [[ 6.7667437 -4.2969136 -2.2081451 -4.3274803]]
Iteration 800 of 1000: loss=0.112 " + "l1=0.109" + "l2=0.00291 f=-1.02 shape=(1, 9000, 1)
logits [[ 6.651858  -4.2713895 -2.209969  -4.2317348]]
Iteration 900 of 1000: loss=0.11 " + "l1=0.106" + "l2=0.00353 f=-1.01 shape=(1, 9000, 1)
logits [[ 6.514324  -4.2412457 -2.208243  -4.11892  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.21 " + "l1=1.21" + "l2=0 f=-1.03 shape=(1, 9000, 1)
logits [[ 7.3066444 -4.4139147 -2.1883247 -4.8132052]]
Iteration 100 of 1000: loss=0.966 " + "l1=0.824" + "l2=0.141 f=-0.885 shape=(1, 9000, 1)
logits [[ 5.1306806 -3.7870038 -1.768462  -3.1135242]]
Iteration 200 of 1000: loss=0.622 " + "l1=0.352" + "l2=0.27 f=-0.681 shape=(1, 9000, 1)
logits [[ 2.374003  -2.8886147 -1.0587969 -1.1507026]]
Iteration 300 of 1000: loss=0.277 " + "l1=0.0134" + "l2=0.264 f=-0.625 shape=(1, 9000, 1)
logits [[ 0.4574707  -2.4867835  -0.79334944  0.3229887 ]]
Iteration 400 of 1000: loss=0.141 " + "l1=0.00219" + "l2=0.139 f=-0.627 shape=(1, 9000, 1)
logits [[ 0.40061238 -2.472293   -0.81404084  0.37869862]]
Iteration 500 of 1000: loss=0.0846 " + "l1=0" + "l2=0.0846 f=-0.624 shape=(1, 9000, 1)
logits [[ 0.408328   -2.4809725  -0.83708733  0.41246054]]
Iteration 600 of 1000: loss=0.0581 " + "l1=0" + "l2=0.0581 f=-0.622 shape=(1, 9000, 1)
logits [[ 0.43434685 -2.4984882  -0.86984867  0.44607103]]
Iteration 700 of 1000: loss=0.0441 " + "l1=0.00121" + "l2=0.0429 f=-0.624 shape=(1, 9000, 1)
logits [[ 0.49658504 -2.551136   -0.92551625  0.48449478]]
Iteration 800 of 1000: loss=0.0345 " + "l1=0" + "l2=0.0345 f=-0.624 shape=(1, 9000, 1)
logits [[ 0.53519446 -2.5977526  -0.9793321   0.54696065]]
Iteration 900 of 1000: loss=0.0285 " + "l1=0" + "l2=0.0285 f=-0.627 shape=(1, 9000, 1)
logits [[ 0.5753296 -2.6351316 -1.0354413  0.5891482]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.667 " + "l1=0.667" + "l2=0 f=-1.03 shape=(1, 9000, 1)
logits [[ 7.3066444 -4.4139147 -2.1883247 -4.8132052]]
Iteration 100 of 1000: loss=0.613 " + "l1=0.587" + "l2=0.026 f=-1.01 shape=(1, 9000, 1)
logits [[ 6.5575633 -4.2466555 -2.2399106 -4.109429 ]]
Iteration 200 of 1000: loss=0.547 " + "l1=0.485" + "l2=0.0618 f=-0.933 shape=(1, 9000, 1)
logits [[ 5.442668  -3.8695183 -1.9258512 -3.3797066]]
Iteration 300 of 1000: loss=0.414 " + "l1=0.31" + "l2=0.105 f=-0.754 shape=(1, 9000, 1)
logits [[ 3.4964375 -3.2197497 -1.1582017 -2.1344883]]
Iteration 400 of 1000: loss=0.259 " + "l1=0.125" + "l2=0.134 f=-0.67 shape=(1, 9000, 1)
logits [[ 1.6593492 -2.8830638 -0.8405921 -0.6162401]]
Iteration 500 of 1000: loss=0.152 " + "l1=0.0354" + "l2=0.117 f=-0.639 shape=(1, 9000, 1)
logits [[ 0.71277225 -2.5297577  -0.80721444  0.06916019]]
Iteration 600 of 1000: loss=0.0875 " + "l1=0.000781" + "l2=0.0867 f=-0.616 shape=(1, 9000, 1)
logits [[ 0.3900957  -2.4142647  -0.81551915  0.3758922 ]]
Iteration 700 of 1000: loss=0.0566 " + "l1=0" + "l2=0.0566 f=-0.617 shape=(1, 9000, 1)
logits [[ 0.44092706 -2.4811168  -0.87511575  0.44611165]]
Iteration 800 of 1000: loss=0.0412 " + "l1=0.000338" + "l2=0.0409 f=-0.623 shape=(1, 9000, 1)
logits [[ 0.506421   -2.5445688  -0.95541555  0.50026935]]
Iteration 900 of 1000: loss=0.0321 " + "l1=0.000118" + "l2=0.032 f=-0.628 shape=(1, 9000, 1)
logits [[ 0.55833864 -2.6030815  -1.0232325   0.5561949 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.394 " + "l1=0.394" + "l2=0 f=-1.03 shape=(1, 9000, 1)
logits [[ 7.3066444 -4.4139147 -2.1883247 -4.8132052]]
Iteration 100 of 1000: loss=0.376 " + "l1=0.369" + "l2=0.00771 f=-1.02 shape=(1, 9000, 1)
logits [[ 6.911101  -4.328607  -2.2162642 -4.4329   ]]
Iteration 200 of 1000: loss=0.364 " + "l1=0.35" + "l2=0.0136 f=-1.01 shape=(1, 9000, 1)
logits [[ 6.605842  -4.2574263 -2.228311  -4.166118 ]]
Iteration 300 of 1000: loss=0.343 " + "l1=0.321" + "l2=0.0225 f=-0.988 shape=(1, 9000, 1)
logits [[ 6.097199  -4.1176977 -2.1545017 -3.775899 ]]
Iteration 400 of 1000: loss=0.301 " + "l1=0.261" + "l2=0.0395 f=-0.865 shape=(1, 9000, 1)
logits [[ 4.916424  -3.709317  -1.5393986 -3.129499 ]]
Iteration 500 of 1000: loss=0.251 " + "l1=0.2" + "l2=0.051 f=-0.8 shape=(1, 9000, 1)
logits [[ 3.7689784 -3.4435678 -1.1388946 -2.3852978]]
Iteration 600 of 1000: loss=0.191 " + "l1=0.128" + "l2=0.0629 f=-0.734 shape=(1, 9000, 1)
logits [[ 2.5056915 -3.144029  -0.862722  -1.4334282]]
Iteration 700 of 1000: loss=0.138 " + "l1=0.0717" + "l2=0.0659 f=-0.714 shape=(1, 9000, 1)
logits [[ 1.5528159  -2.8995357  -0.8539586  -0.65351367]]
Iteration 800 of 1000: loss=0.0955 " + "l1=0.036" + "l2=0.0595 f=-0.683 shape=(1, 9000, 1)
logits [[ 0.93053484 -2.6468878  -0.83695114 -0.17679161]]
Iteration 900 of 1000: loss=0.0641 " + "l1=0.0093" + "l2=0.0548 f=-0.65 shape=(1, 9000, 1)
logits [[ 0.54781306 -2.5312543  -0.8781875   0.26170853]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.258 " + "l1=0.258" + "l2=0 f=-1.03 shape=(1, 9000, 1)
logits [[ 7.3066444 -4.4139147 -2.1883247 -4.8132052]]
Iteration 100 of 1000: loss=0.25 " + "l1=0.247" + "l2=0.00321 f=-1.02 shape=(1, 9000, 1)
logits [[ 7.0514507 -4.3604975 -2.205238  -4.5679326]]
Iteration 200 of 1000: loss=0.246 " + "l1=0.241" + "l2=0.00499 f=-1.02 shape=(1, 9000, 1)
logits [[ 6.9080215 -4.3294    -2.2135675 -4.4336967]]
Iteration 300 of 1000: loss=0.241 " + "l1=0.234" + "l2=0.00698 f=-1.01 shape=(1, 9000, 1)
logits [[ 6.7287207 -4.289752  -2.2191505 -4.275243 ]]
Iteration 400 of 1000: loss=0.234 " + "l1=0.224" + "l2=0.00956 f=-1.01 shape=(1, 9000, 1)
logits [[ 6.471173  -4.227272  -2.2086856 -4.069063 ]]
Iteration 500 of 1000: loss=0.222 " + "l1=0.209" + "l2=0.0132 f=-0.989 shape=(1, 9000, 1)
logits [[ 6.075396  -4.1388664 -2.1210122 -3.770339 ]]
Iteration 600 of 1000: loss=0.205 " + "l1=0.185" + "l2=0.0199 f=-0.905 shape=(1, 9000, 1)
logits [[ 5.352974  -3.8732839 -1.752472  -3.3489926]]
Iteration 700 of 1000: loss=0.185 " + "l1=0.161" + "l2=0.0234 f=-0.864 shape=(1, 9000, 1)
logits [[ 4.6552954 -3.6651511 -1.5096132 -2.938298 ]]
Iteration 800 of 1000: loss=0.164 " + "l1=0.136" + "l2=0.0274 f=-0.834 shape=(1, 9000, 1)
logits [[ 3.9864578 -3.5489395 -1.3534577 -2.4198265]]
Iteration 900 of 1000: loss=0.135 " + "l1=0.101" + "l2=0.0344 f=-0.763 shape=(1, 9000, 1)
logits [[ 2.9665618 -3.2492692 -1.0037059 -1.7668648]]
--- 300.91531920433044 seconds ---
Adv result:3
Loading record A00611
(1, 4130)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0229 " + "l1=0.0229" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.141893   -1.146744    0.80462724 -2.6505063 ]]
Iteration 100 of 1000: loss=0.0218 " + "l1=0.0212" + "l2=0.000555 f=-0.464 shape=(1, 9000, 1)
logits [[ 1.0430831  -1.0814712   0.77529716 -2.5929198 ]]
Iteration 200 of 1000: loss=0.0213 " + "l1=0.0207" + "l2=0.000691 f=-0.464 shape=(1, 9000, 1)
logits [[ 1.0091612 -1.0561727  0.7622309 -2.5726418]]
Iteration 300 of 1000: loss=0.0209 " + "l1=0.02" + "l2=0.000896 f=-0.465 shape=(1, 9000, 1)
logits [[ 0.9710027 -1.0265559  0.7464037 -2.5501168]]
Iteration 400 of 1000: loss=0.0204 " + "l1=0.0192" + "l2=0.00112 f=-0.466 shape=(1, 9000, 1)
logits [[ 0.93010086 -0.99397224  0.7290531  -2.5279677 ]]
Iteration 500 of 1000: loss=0.0199 " + "l1=0.0185" + "l2=0.00136 f=-0.466 shape=(1, 9000, 1)
logits [[ 0.88967466 -0.9614127   0.71184945 -2.5053542 ]]
Iteration 600 of 1000: loss=0.0194 " + "l1=0.0178" + "l2=0.0016 f=-0.467 shape=(1, 9000, 1)
logits [[ 0.84956044 -0.92989904  0.69516146 -2.4822245 ]]
Iteration 700 of 1000: loss=0.019 " + "l1=0.0171" + "l2=0.00187 f=-0.467 shape=(1, 9000, 1)
logits [[ 0.8105988  -0.8993257   0.67860025 -2.458865  ]]
Iteration 800 of 1000: loss=0.0185 " + "l1=0.0164" + "l2=0.00212 f=-0.468 shape=(1, 9000, 1)
logits [[ 0.77070767 -0.8690657   0.6631362  -2.4361508 ]]
Iteration 900 of 1000: loss=0.0181 " + "l1=0.0157" + "l2=0.00243 f=-0.468 shape=(1, 9000, 1)
logits [[ 0.7274784 -0.8384178  0.6477006 -2.4105062]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.229 " + "l1=0.229" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.141893   -1.146744    0.80462724 -2.6505063 ]]
Iteration 100 of 1000: loss=0.138 " + "l1=0.107" + "l2=0.0302 f=-0.475 shape=(1, 9000, 1)
logits [[ 0.47204974 -0.59123856  0.4828589  -2.2621694 ]]
Iteration 200 of 1000: loss=0.102 " + "l1=0.0625" + "l2=0.0392 f=-0.488 shape=(1, 9000, 1)
logits [[ 0.1842789 -0.314514   0.3101696 -2.1319988]]
Iteration 300 of 1000: loss=0.0739 " + "l1=0.03" + "l2=0.0439 f=-0.503 shape=(1, 9000, 1)
logits [[-0.08691059 -0.10554819  0.19462697 -2.0156128 ]]
Iteration 400 of 1000: loss=0.0568 " + "l1=0.00913" + "l2=0.0477 f=-0.513 shape=(1, 9000, 1)
logits [[-0.26785105  0.03352831  0.12487535 -1.9431845 ]]
Iteration 500 of 1000: loss=0.0462 " + "l1=0.000158" + "l2=0.0461 f=-0.516 shape=(1, 9000, 1)
logits [[-0.3306051   0.10282715  0.10441092 -1.939832  ]]
Iteration 600 of 1000: loss=0.0415 " + "l1=0" + "l2=0.0415 f=-0.515 shape=(1, 9000, 1)
logits [[-0.31849825  0.114672    0.11173172 -1.9689316 ]]
Iteration 700 of 1000: loss=0.0384 " + "l1=2.43e-05" + "l2=0.0384 f=-0.514 shape=(1, 9000, 1)
logits [[-0.3087264   0.12010422  0.12034743 -1.9865077 ]]
Iteration 800 of 1000: loss=0.0368 " + "l1=0" + "l2=0.0368 f=-0.511 shape=(1, 9000, 1)
logits [[-0.3146465   0.12884156  0.1255074  -1.9855455 ]]
Iteration 900 of 1000: loss=0.0344 " + "l1=0" + "l2=0.0344 f=-0.51 shape=(1, 9000, 1)
logits [[-0.3209      0.13159956  0.13135646 -1.9816766 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.126 " + "l1=0.126" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.141893   -1.146744    0.80462724 -2.6505063 ]]
Iteration 100 of 1000: loss=0.0921 " + "l1=0.0766" + "l2=0.0155 f=-0.472 shape=(1, 9000, 1)
logits [[ 0.6174191  -0.77510256  0.61498034 -2.3454218 ]]
Iteration 200 of 1000: loss=0.0791 " + "l1=0.0639" + "l2=0.0151 f=-0.476 shape=(1, 9000, 1)
logits [[ 0.51660454 -0.645946    0.5166951  -2.289384  ]]
Iteration 300 of 1000: loss=0.0685 " + "l1=0.0528" + "l2=0.0157 f=-0.478 shape=(1, 9000, 1)
logits [[ 0.4283376  -0.52324015  0.43649414 -2.2536554 ]]
Iteration 400 of 1000: loss=0.06 " + "l1=0.0413" + "l2=0.0187 f=-0.484 shape=(1, 9000, 1)
logits [[ 0.29784822 -0.38617155  0.36553004 -2.2150488 ]]
Iteration 500 of 1000: loss=0.0534 " + "l1=0.0314" + "l2=0.022 f=-0.492 shape=(1, 9000, 1)
logits [[ 0.15809238 -0.2670885   0.304439   -2.1625435 ]]
Iteration 600 of 1000: loss=0.0482 " + "l1=0.0246" + "l2=0.0237 f=-0.497 shape=(1, 9000, 1)
logits [[ 0.05582651 -0.18092677  0.26581082 -2.1281524 ]]
Iteration 700 of 1000: loss=0.044 " + "l1=0.0193" + "l2=0.0247 f=-0.501 shape=(1, 9000, 1)
logits [[-0.03649886 -0.11350033  0.23726884 -2.0908232 ]]
Iteration 800 of 1000: loss=0.0397 " + "l1=0.0147" + "l2=0.025 f=-0.503 shape=(1, 9000, 1)
logits [[-0.1179136  -0.05127519  0.216717   -2.0606205 ]]
Iteration 900 of 1000: loss=0.0361 " + "l1=0.011" + "l2=0.0251 f=-0.503 shape=(1, 9000, 1)
logits [[-1.9478808e-01 -6.1649922e-04  1.9887526e-01 -2.0170722e+00]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.177 " + "l1=0.177" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.141893   -1.146744    0.80462724 -2.6505063 ]]
Iteration 100 of 1000: loss=0.117 " + "l1=0.0946" + "l2=0.0221 f=-0.473 shape=(1, 9000, 1)
logits [[ 0.54198724 -0.6784551   0.54256004 -2.298637  ]]
Iteration 200 of 1000: loss=0.0951 " + "l1=0.0702" + "l2=0.0249 f=-0.479 shape=(1, 9000, 1)
logits [[ 0.3940279  -0.49235976  0.41397986 -2.23036   ]]
Iteration 300 of 1000: loss=0.0761 " + "l1=0.0457" + "l2=0.0304 f=-0.49 shape=(1, 9000, 1)
logits [[ 0.16371208 -0.28668347  0.3030167  -2.138666  ]]
Iteration 400 of 1000: loss=0.0616 " + "l1=0.0272" + "l2=0.0344 f=-0.5 shape=(1, 9000, 1)
logits [[-0.03137796 -0.1296815   0.22109576 -2.0596693 ]]
Iteration 500 of 1000: loss=0.0522 " + "l1=0.0149" + "l2=0.0373 f=-0.509 shape=(1, 9000, 1)
logits [[-0.16577913 -0.02143354  0.17124988 -2.0192518 ]]
Iteration 600 of 1000: loss=0.0452 " + "l1=0.00494" + "l2=0.0402 f=-0.511 shape=(1, 9000, 1)
logits [[-0.28418368  0.069414    0.133098   -1.963195  ]]
Iteration 700 of 1000: loss=0.04 " + "l1=0" + "l2=0.04 f=-0.511 shape=(1, 9000, 1)
logits [[-0.33236462  0.11990166  0.11903195 -1.9499471 ]]
Iteration 800 of 1000: loss=0.0372 " + "l1=4.89e-05" + "l2=0.0371 f=-0.51 shape=(1, 9000, 1)
logits [[-0.32157516  0.12460008  0.12523104 -1.9678138 ]]
Iteration 900 of 1000: loss=0.0352 " + "l1=1.94e-05" + "l2=0.0351 f=-0.508 shape=(1, 9000, 1)
logits [[-0.32839245  0.12972625  0.12997673 -1.9649596 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.152 " + "l1=0.152" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.141893   -1.146744    0.80462724 -2.6505063 ]]
Iteration 100 of 1000: loss=0.105 " + "l1=0.086" + "l2=0.0188 f=-0.473 shape=(1, 9000, 1)
logits [[ 0.5752164 -0.7223555  0.5754617 -2.3193045]]
Iteration 200 of 1000: loss=0.088 " + "l1=0.0687" + "l2=0.0193 f=-0.477 shape=(1, 9000, 1)
logits [[ 0.45732513 -0.57088965  0.46572033 -2.2585633 ]]
Iteration 300 of 1000: loss=0.0735 " + "l1=0.0508" + "l2=0.0227 f=-0.484 shape=(1, 9000, 1)
logits [[ 0.30409375 -0.39936805  0.36722365 -2.2071872 ]]
Iteration 400 of 1000: loss=0.0622 " + "l1=0.0356" + "l2=0.0266 f=-0.493 shape=(1, 9000, 1)
logits [[ 0.12866384 -0.24888851  0.2889085  -2.142306  ]]
Iteration 500 of 1000: loss=0.0541 " + "l1=0.0246" + "l2=0.0295 f=-0.501 shape=(1, 9000, 1)
logits [[-0.00619145 -0.1359126   0.2355043  -2.0984972 ]]
Iteration 600 of 1000: loss=0.048 " + "l1=0.0166" + "l2=0.0314 f=-0.506 shape=(1, 9000, 1)
logits [[-0.11270745 -0.05208144  0.19774918 -2.058872  ]]
Iteration 700 of 1000: loss=0.0429 " + "l1=0.00965" + "l2=0.0332 f=-0.509 shape=(1, 9000, 1)
logits [[-0.21338525  0.0228001   0.16840158 -2.0132682 ]]
Iteration 800 of 1000: loss=0.0389 " + "l1=0.00439" + "l2=0.0345 f=-0.51 shape=(1, 9000, 1)
logits [[-0.29373002  0.08047394  0.146724   -1.9723978 ]]
Iteration 900 of 1000: loss=0.0351 " + "l1=0.0003" + "l2=0.0348 f=-0.51 shape=(1, 9000, 1)
logits [[-0.3644476   0.1255409   0.13007541 -1.9315798 ]]
--- 303.18946743011475 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00337 " + "l1=0.00337" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.141893   -1.146744    0.80462724 -2.6505063 ]]
Iteration 100 of 1000: loss=0.00299 " + "l1=0.00274" + "l2=0.000259 f=-0.464 shape=(1, 9000, 1)
logits [[ 1.0828528 -1.133931   0.8092826 -2.6151774]]
Iteration 200 of 1000: loss=0.00288 " + "l1=0.0026" + "l2=0.000272 f=-0.464 shape=(1, 9000, 1)
logits [[ 1.0698459 -1.1308398  0.8094176 -2.6062334]]
Iteration 300 of 1000: loss=0.00281 " + "l1=0.00247" + "l2=0.000339 f=-0.464 shape=(1, 9000, 1)
logits [[ 1.0556489 -1.1281412  0.8085855 -2.5939565]]
Iteration 400 of 1000: loss=0.00273 " + "l1=0.00234" + "l2=0.000392 f=-0.464 shape=(1, 9000, 1)
logits [[ 1.040622   -1.1251326   0.80688894 -2.5798793 ]]
Iteration 500 of 1000: loss=0.00265 " + "l1=0.00221" + "l2=0.000434 f=-0.464 shape=(1, 9000, 1)
logits [[ 1.0260428 -1.1223924  0.8048343 -2.5654566]]
Iteration 600 of 1000: loss=0.00261 " + "l1=0.00209" + "l2=0.000527 f=-0.464 shape=(1, 9000, 1)
logits [[ 1.0112909 -1.11938    0.8026562 -2.5506628]]
Iteration 700 of 1000: loss=0.0026 " + "l1=0.00196" + "l2=0.00064 f=-0.464 shape=(1, 9000, 1)
logits [[ 0.9960207  -1.1161749   0.80041254 -2.5351062 ]]
Iteration 800 of 1000: loss=0.00262 " + "l1=0.00183" + "l2=0.000796 f=-0.463 shape=(1, 9000, 1)
logits [[ 0.98041403 -1.112476    0.7975531  -2.518795  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0337 " + "l1=0.0337" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.141893   -1.146744    0.80462724 -2.6505063 ]]
Iteration 100 of 1000: loss=0.00707 " + "l1=1.66e-05" + "l2=0.00705 f=-0.466 shape=(1, 9000, 1)
logits [[ 0.80608803 -1.0631999   0.805922   -2.4114761 ]]
Iteration 200 of 1000: loss=0.00469 " + "l1=0" + "l2=0.00469 f=-0.465 shape=(1, 9000, 1)
logits [[ 0.7905472 -1.0663962  0.7924451 -2.3760672]]
Iteration 300 of 1000: loss=0.0035 " + "l1=0" + "l2=0.0035 f=-0.464 shape=(1, 9000, 1)
logits [[ 0.781      -1.0706942   0.78262514 -2.3473969 ]]
Iteration 400 of 1000: loss=0.00277 " + "l1=0" + "l2=0.00277 f=-0.462 shape=(1, 9000, 1)
logits [[ 0.77433795 -1.0742853   0.77607536 -2.3248599 ]]
Iteration 500 of 1000: loss=0.00235 " + "l1=0" + "l2=0.00235 f=-0.461 shape=(1, 9000, 1)
logits [[ 0.7690116 -1.0751591  0.7703943 -2.3075094]]
Iteration 600 of 1000: loss=0.00211 " + "l1=0" + "l2=0.00211 f=-0.46 shape=(1, 9000, 1)
logits [[ 0.76403224 -1.0752333   0.76559365 -2.2929263 ]]
Iteration 700 of 1000: loss=0.00198 " + "l1=0" + "l2=0.00198 f=-0.459 shape=(1, 9000, 1)
logits [[ 0.75792587 -1.0724593   0.76159716 -2.2811546 ]]
Iteration 800 of 1000: loss=0.00179 " + "l1=0" + "l2=0.00179 f=-0.457 shape=(1, 9000, 1)
logits [[ 0.75545555 -1.0697379   0.7577887  -2.2731879 ]]
Iteration 900 of 1000: loss=0.00184 " + "l1=0" + "l2=0.00184 f=-0.456 shape=(1, 9000, 1)
logits [[ 0.7491442 -1.0653503  0.7551287 -2.2647893]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0185 " + "l1=0.0185" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.141893   -1.146744    0.80462724 -2.6505063 ]]
Iteration 100 of 1000: loss=0.00869 " + "l1=0.0037" + "l2=0.00499 f=-0.466 shape=(1, 9000, 1)
logits [[ 0.8806375 -1.0791367  0.813328  -2.4793663]]
Iteration 200 of 1000: loss=0.0052 " + "l1=9.41e-05" + "l2=0.0051 f=-0.465 shape=(1, 9000, 1)
logits [[ 0.80147064 -1.0681411   0.79975885 -2.393658  ]]
Iteration 300 of 1000: loss=0.00379 " + "l1=0" + "l2=0.00379 f=-0.464 shape=(1, 9000, 1)
logits [[ 0.7841691 -1.0707089  0.7873255 -2.356834 ]]
Iteration 400 of 1000: loss=0.00295 " + "l1=9.24e-05" + "l2=0.00285 f=-0.463 shape=(1, 9000, 1)
logits [[ 0.7803987  -1.0744355   0.77871865 -2.3347588 ]]
Iteration 500 of 1000: loss=0.00243 " + "l1=0" + "l2=0.00243 f=-0.461 shape=(1, 9000, 1)
logits [[ 0.77099675 -1.0743566   0.7729463  -2.3141122 ]]
Iteration 600 of 1000: loss=0.0022 " + "l1=8.61e-05" + "l2=0.00212 f=-0.46 shape=(1, 9000, 1)
logits [[ 0.7694398 -1.0759531  0.7678744 -2.3000994]]
Iteration 700 of 1000: loss=0.00193 " + "l1=0" + "l2=0.00193 f=-0.458 shape=(1, 9000, 1)
logits [[ 0.7631377  -1.0736954   0.76386255 -2.2869737 ]]
Iteration 800 of 1000: loss=0.00189 " + "l1=0.000132" + "l2=0.00176 f=-0.457 shape=(1, 9000, 1)
logits [[ 0.76189363 -1.0715033   0.75948983 -2.2787213 ]]
Iteration 900 of 1000: loss=0.00176 " + "l1=0" + "l2=0.00176 f=-0.456 shape=(1, 9000, 1)
logits [[ 0.7553072 -1.0664307  0.7569481 -2.27123  ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.011 " + "l1=0.011" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.141893   -1.146744    0.80462724 -2.6505063 ]]
Iteration 100 of 1000: loss=0.00736 " + "l1=0.00551" + "l2=0.00185 f=-0.466 shape=(1, 9000, 1)
logits [[ 0.9849286 -1.1084355  0.8155033 -2.5548618]]
Iteration 200 of 1000: loss=0.00611 " + "l1=0.00366" + "l2=0.00245 f=-0.466 shape=(1, 9000, 1)
logits [[ 0.9223576 -1.091957   0.8098952 -2.503689 ]]
Iteration 300 of 1000: loss=0.00491 " + "l1=0.00187" + "l2=0.00305 f=-0.465 shape=(1, 9000, 1)
logits [[ 0.85784215 -1.0798597   0.8004403  -2.4383996 ]]
Iteration 400 of 1000: loss=0.00367 " + "l1=0.000263" + "l2=0.00341 f=-0.464 shape=(1, 9000, 1)
logits [[ 0.79763967 -1.0707892   0.78954935 -2.3720286 ]]
Iteration 500 of 1000: loss=0.00273 " + "l1=0" + "l2=0.00273 f=-0.462 shape=(1, 9000, 1)
logits [[ 0.77901113 -1.0704803   0.7791763  -2.337429  ]]
Iteration 600 of 1000: loss=0.00234 " + "l1=0" + "l2=0.00234 f=-0.461 shape=(1, 9000, 1)
logits [[ 0.7723021 -1.0713471  0.7729466 -2.3174121]]
Iteration 700 of 1000: loss=0.002 " + "l1=0" + "l2=0.002 f=-0.459 shape=(1, 9000, 1)
logits [[ 0.7681936 -1.0720378  0.7684781 -2.3021138]]
Iteration 800 of 1000: loss=0.0019 " + "l1=0" + "l2=0.0019 f=-0.458 shape=(1, 9000, 1)
logits [[ 0.7639761 -1.069965   0.764265  -2.2907286]]
Iteration 900 of 1000: loss=0.00183 " + "l1=0" + "l2=0.00183 f=-0.457 shape=(1, 9000, 1)
logits [[ 0.7590724 -1.0666097  0.7607586 -2.281201 ]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00717 " + "l1=0.00717" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.141893   -1.146744    0.80462724 -2.6505063 ]]
Iteration 100 of 1000: loss=0.00556 " + "l1=0.0047" + "l2=0.00086 f=-0.465 shape=(1, 9000, 1)
logits [[ 1.0346819 -1.1220623  0.8133766 -2.5864584]]
Iteration 200 of 1000: loss=0.00505 " + "l1=0.00396" + "l2=0.00109 f=-0.465 shape=(1, 9000, 1)
logits [[ 0.99855506 -1.1140515   0.81215066 -2.5581863 ]]
Iteration 300 of 1000: loss=0.00459 " + "l1=0.0033" + "l2=0.00129 f=-0.465 shape=(1, 9000, 1)
logits [[ 0.9626186 -1.1059011  0.8073924 -2.5256863]]
Iteration 400 of 1000: loss=0.00415 " + "l1=0.00266" + "l2=0.0015 f=-0.465 shape=(1, 9000, 1)
logits [[ 0.9260588 -1.0973089  0.8010109 -2.490248 ]]
Iteration 500 of 1000: loss=0.00367 " + "l1=0.00193" + "l2=0.00174 f=-0.464 shape=(1, 9000, 1)
logits [[ 0.885215  -1.0903887  0.7944451 -2.4465442]]
Iteration 600 of 1000: loss=0.00315 " + "l1=0.00117" + "l2=0.00198 f=-0.463 shape=(1, 9000, 1)
logits [[ 0.8419143 -1.0825264  0.7867233 -2.3987043]]
Iteration 700 of 1000: loss=0.00268 " + "l1=0.000425" + "l2=0.00225 f=-0.462 shape=(1, 9000, 1)
logits [[ 0.7986606  -1.074137    0.77866936 -2.350733  ]]
Iteration 800 of 1000: loss=0.00225 " + "l1=0" + "l2=0.00225 f=-0.461 shape=(1, 9000, 1)
logits [[ 0.7702075 -1.0683106  0.7703969 -2.3148134]]
Iteration 900 of 1000: loss=0.00197 " + "l1=0" + "l2=0.00197 f=-0.459 shape=(1, 9000, 1)
logits [[ 0.7645152 -1.0672593  0.7649662 -2.298438 ]]
--- 283.79870986938477 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0379 " + "l1=0.0379" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.141893   -1.146744    0.80462724 -2.6505063 ]]
Iteration 100 of 1000: loss=0.0357 " + "l1=0.0349" + "l2=0.000825 f=-0.456 shape=(1, 9000, 1)
logits [[ 1.0137485 -1.1231394  0.7575683 -2.471565 ]]
Iteration 200 of 1000: loss=0.0346 " + "l1=0.0335" + "l2=0.00115 f=-0.452 shape=(1, 9000, 1)
logits [[ 0.9600985  -1.1198078   0.73685867 -2.3868873 ]]
Iteration 300 of 1000: loss=0.0335 " + "l1=0.0319" + "l2=0.00158 f=-0.448 shape=(1, 9000, 1)
logits [[ 0.9005624 -1.1178648  0.7122937 -2.2878737]]
Iteration 400 of 1000: loss=0.0322 " + "l1=0.0302" + "l2=0.00208 f=-0.444 shape=(1, 9000, 1)
logits [[ 0.83593774 -1.1172298   0.68606097 -2.1802323 ]]
Iteration 500 of 1000: loss=0.031 " + "l1=0.0283" + "l2=0.00264 f=-0.439 shape=(1, 9000, 1)
logits [[ 0.7680377  -1.1177608   0.65883636 -2.0659258 ]]
Iteration 600 of 1000: loss=0.0298 " + "l1=0.0265" + "l2=0.00327 f=-0.435 shape=(1, 9000, 1)
logits [[ 0.6974782  -1.11828     0.63231295 -1.9510452 ]]
Iteration 700 of 1000: loss=0.0285 " + "l1=0.0246" + "l2=0.0039 f=-0.431 shape=(1, 9000, 1)
logits [[ 0.6255829 -1.1190555  0.606609  -1.8379287]]
Iteration 800 of 1000: loss=0.0274 " + "l1=0.0232" + "l2=0.00423 f=-0.427 shape=(1, 9000, 1)
logits [[ 0.5791077  -1.1280494   0.57926524 -1.7395657 ]]
Iteration 900 of 1000: loss=0.0266 " + "l1=0.0222" + "l2=0.00444 f=-0.424 shape=(1, 9000, 1)
logits [[ 0.55281484 -1.1379706   0.55390185 -1.6650344 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.379 " + "l1=0.379" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.141893   -1.146744    0.80462724 -2.6505063 ]]
Iteration 100 of 1000: loss=0.17 " + "l1=0.0929" + "l2=0.0773 f=-0.382 shape=(1, 9000, 1)
logits [[ 0.01165757 -0.9676939   0.17769815 -0.7511897 ]]
Iteration 200 of 1000: loss=0.0723 " + "l1=0.000959" + "l2=0.0713 f=-0.355 shape=(1, 9000, 1)
logits [[-0.3244634  -0.999878   -0.0428264  -0.05241488]]
Iteration 300 of 1000: loss=0.0499 " + "l1=0" + "l2=0.0499 f=-0.357 shape=(1, 9000, 1)
logits [[-0.3420774  -1.0288992  -0.04361338 -0.01391515]]
Iteration 400 of 1000: loss=0.0388 " + "l1=0" + "l2=0.0388 f=-0.363 shape=(1, 9000, 1)
logits [[-0.3492597  -1.0567888  -0.03253295 -0.01224367]]
Iteration 500 of 1000: loss=0.0315 " + "l1=0" + "l2=0.0315 f=-0.369 shape=(1, 9000, 1)
logits [[-0.37249768 -1.0755315  -0.01918557 -0.0106461 ]]
Iteration 600 of 1000: loss=0.0261 " + "l1=0" + "l2=0.0261 f=-0.377 shape=(1, 9000, 1)
logits [[-0.40814045 -1.0853009  -0.00804842 -0.00573619]]
Iteration 700 of 1000: loss=0.0226 " + "l1=0" + "l2=0.0226 f=-0.381 shape=(1, 9000, 1)
logits [[-0.4411861  -1.0908253   0.00261254  0.00569163]]
Iteration 800 of 1000: loss=0.0198 " + "l1=0" + "l2=0.0198 f=-0.383 shape=(1, 9000, 1)
logits [[-0.4718229  -1.0919474   0.01257415  0.01766733]]
Iteration 900 of 1000: loss=0.0176 " + "l1=0" + "l2=0.0176 f=-0.385 shape=(1, 9000, 1)
logits [[-0.49501228 -1.0937908   0.02263655  0.02621066]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.209 " + "l1=0.209" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.141893   -1.146744    0.80462724 -2.6505063 ]]
Iteration 100 of 1000: loss=0.142 " + "l1=0.12" + "l2=0.0223 f=-0.424 shape=(1, 9000, 1)
logits [[ 0.5103181  -1.0451516   0.51108307 -1.6737086 ]]
Iteration 200 of 1000: loss=0.106 " + "l1=0.0711" + "l2=0.0348 f=-0.396 shape=(1, 9000, 1)
logits [[ 0.2099216  -1.0703926   0.28420624 -1.0085001 ]]
Iteration 300 of 1000: loss=0.0715 " + "l1=0.0241" + "l2=0.0474 f=-0.374 shape=(1, 9000, 1)
logits [[-0.14640719 -1.0473883   0.06840987 -0.36895448]]
Iteration 400 of 1000: loss=0.0459 " + "l1=0.000328" + "l2=0.0455 f=-0.36 shape=(1, 9000, 1)
logits [[-0.31971177 -1.0507634  -0.03198357 -0.03794049]]
Iteration 500 of 1000: loss=0.0351 " + "l1=7.72e-05" + "l2=0.035 f=-0.365 shape=(1, 9000, 1)
logits [[-0.34032542 -1.0788095  -0.01966446 -0.02106841]]
Iteration 600 of 1000: loss=0.0286 " + "l1=0" + "l2=0.0286 f=-0.372 shape=(1, 9000, 1)
logits [[-0.38704196 -1.0826854  -0.01296303 -0.00366178]]
Iteration 700 of 1000: loss=0.0238 " + "l1=0" + "l2=0.0238 f=-0.378 shape=(1, 9000, 1)
logits [[-0.42932805 -1.0843614  -0.00142148  0.00288534]]
Iteration 800 of 1000: loss=0.0206 " + "l1=0" + "l2=0.0206 f=-0.38 shape=(1, 9000, 1)
logits [[-0.4680147  -1.0828446   0.00825309  0.02190062]]
Iteration 900 of 1000: loss=0.0179 " + "l1=2.65e-05" + "l2=0.0179 f=-0.383 shape=(1, 9000, 1)
logits [[-0.4947532  -1.080373    0.02249043  0.02200799]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.123 " + "l1=0.123" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.141893   -1.146744    0.80462724 -2.6505063 ]]
Iteration 100 of 1000: loss=0.0992 " + "l1=0.0894" + "l2=0.00985 f=-0.441 shape=(1, 9000, 1)
logits [[ 0.6979386 -1.0544865  0.6450123 -2.052462 ]]
Iteration 200 of 1000: loss=0.0853 " + "l1=0.0732" + "l2=0.0121 f=-0.425 shape=(1, 9000, 1)
logits [[ 0.54177475 -1.0761278   0.5422041  -1.7088585 ]]
Iteration 300 of 1000: loss=0.0735 " + "l1=0.0583" + "l2=0.0152 f=-0.41 shape=(1, 9000, 1)
logits [[ 0.4146333 -1.1091013  0.424542  -1.3693292]]
Iteration 400 of 1000: loss=0.0625 " + "l1=0.0429" + "l2=0.0196 f=-0.4 shape=(1, 9000, 1)
logits [[ 0.22190098 -1.1146168   0.3075342  -1.013328  ]]
Iteration 500 of 1000: loss=0.052 " + "l1=0.0277" + "l2=0.0243 f=-0.39 shape=(1, 9000, 1)
logits [[ 0.00941732 -1.1012594   0.19268775 -0.66024137]]
Iteration 600 of 1000: loss=0.0421 " + "l1=0.0143" + "l2=0.0277 f=-0.38 shape=(1, 9000, 1)
logits [[-0.17110273 -1.0850675   0.08805654 -0.35229874]]
Iteration 700 of 1000: loss=0.0319 " + "l1=0.00137" + "l2=0.0305 f=-0.37 shape=(1, 9000, 1)
logits [[-0.35146913 -1.0708194  -0.00723814 -0.04935057]]
Iteration 800 of 1000: loss=0.0248 " + "l1=7.9e-05" + "l2=0.0247 f=-0.376 shape=(1, 9000, 1)
logits [[-0.42309391 -1.0745302  -0.00201118 -0.00444182]]
Iteration 900 of 1000: loss=0.0208 " + "l1=0.000214" + "l2=0.0206 f=-0.38 shape=(1, 9000, 1)
logits [[-0.46532562 -1.073143    0.01320189  0.00661965]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0806 " + "l1=0.0806" + "l2=0 f=-0.463 shape=(1, 9000, 1)
logits [[ 1.141893   -1.146744    0.80462724 -2.6505063 ]]
Iteration 100 of 1000: loss=0.0708 " + "l1=0.067" + "l2=0.00384 f=-0.449 shape=(1, 9000, 1)
logits [[ 0.868155   -1.0892276   0.70690614 -2.282473  ]]
Iteration 200 of 1000: loss=0.0647 " + "l1=0.0587" + "l2=0.00597 f=-0.44 shape=(1, 9000, 1)
logits [[ 0.72015816 -1.0809734   0.64676154 -2.044375  ]]
Iteration 300 of 1000: loss=0.0585 " + "l1=0.0509" + "l2=0.00763 f=-0.43 shape=(1, 9000, 1)
logits [[ 0.5869293  -1.0861124   0.58643395 -1.8069038 ]]
Iteration 400 of 1000: loss=0.0534 " + "l1=0.045" + "l2=0.00837 f=-0.42 shape=(1, 9000, 1)
logits [[ 0.5180817  -1.1143281   0.51760453 -1.6002367 ]]
Iteration 500 of 1000: loss=0.0491 " + "l1=0.0394" + "l2=0.00968 f=-0.411 shape=(1, 9000, 1)
logits [[ 0.44014004 -1.1352617   0.45193186 -1.4027038 ]]
Iteration 600 of 1000: loss=0.0451 " + "l1=0.0335" + "l2=0.0115 f=-0.407 shape=(1, 9000, 1)
logits [[ 0.32037443 -1.1408588   0.3851504  -1.1936512 ]]
Iteration 700 of 1000: loss=0.0412 " + "l1=0.0277" + "l2=0.0135 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.18342638 -1.1354679   0.3203542  -0.982925  ]]
Iteration 800 of 1000: loss=0.0372 " + "l1=0.022" + "l2=0.0152 f=-0.399 shape=(1, 9000, 1)
logits [[ 0.04816765 -1.1215125   0.2574396  -0.7790062 ]]
Iteration 900 of 1000: loss=0.0329 " + "l1=0.0163" + "l2=0.0166 f=-0.395 shape=(1, 9000, 1)
logits [[-0.09214971 -1.1078203   0.19259703 -0.57427055]]
--- 301.5428488254547 seconds ---
Adv result:3
Loading record A00621
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0711 " + "l1=0.0711" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[  6.0415454  -1.0700943   2.3717732 -10.337647 ]]
Iteration 100 of 1000: loss=0.0707 " + "l1=0.0704" + "l2=0.00029 f=-0.751 shape=(1, 9000, 1)
logits [[  5.998881   -1.0417874   2.3553317 -10.315551 ]]
Iteration 200 of 1000: loss=0.0706 " + "l1=0.0703" + "l2=0.00028 f=-0.751 shape=(1, 9000, 1)
logits [[  5.993036   -1.0372409   2.3512416 -10.310555 ]]
Iteration 300 of 1000: loss=0.0705 " + "l1=0.0702" + "l2=0.000352 f=-0.751 shape=(1, 9000, 1)
logits [[  5.98458    -1.0311826   2.3468153 -10.304371 ]]
Iteration 400 of 1000: loss=0.0705 " + "l1=0.07" + "l2=0.000446 f=-0.751 shape=(1, 9000, 1)
logits [[  5.976143   -1.0253571   2.3426778 -10.298193 ]]
Iteration 500 of 1000: loss=0.0704 " + "l1=0.0699" + "l2=0.000518 f=-0.751 shape=(1, 9000, 1)
logits [[  5.9682355  -1.02016     2.3390367 -10.292207 ]]
Iteration 600 of 1000: loss=0.0704 " + "l1=0.0698" + "l2=0.00064 f=-0.751 shape=(1, 9000, 1)
logits [[  5.960772   -1.0156165   2.3358629 -10.286436 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.711 " + "l1=0.711" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[  6.0415454  -1.0700943   2.3717732 -10.337647 ]]
Iteration 100 of 1000: loss=0.669 " + "l1=0.646" + "l2=0.023 f=-0.77 shape=(1, 9000, 1)
logits [[  5.66468     -0.79877084   2.2100298  -10.157902  ]]
Iteration 200 of 1000: loss=0.647 " + "l1=0.609" + "l2=0.038 f=-0.783 shape=(1, 9000, 1)
logits [[  5.4382963   -0.65187293   2.1012719  -10.020504  ]]
Iteration 300 of 1000: loss=0.629 " + "l1=0.577" + "l2=0.0524 f=-0.795 shape=(1, 9000, 1)
logits [[ 5.233003  -0.5368246  2.0084002 -9.883442 ]]
Iteration 400 of 1000: loss=0.612 " + "l1=0.545" + "l2=0.0669 f=-0.804 shape=(1, 9000, 1)
logits [[ 5.029123   -0.42509043  1.9203998  -9.7387    ]]
Iteration 500 of 1000: loss=0.596 " + "l1=0.518" + "l2=0.0775 f=-0.807 shape=(1, 9000, 1)
logits [[ 4.854366  -0.3270045  1.853079  -9.610221 ]]
Iteration 600 of 1000: loss=0.577 " + "l1=0.489" + "l2=0.0884 f=-0.818 shape=(1, 9000, 1)
logits [[ 4.647194   -0.24063359  1.7837132  -9.463689  ]]
Iteration 700 of 1000: loss=0.557 " + "l1=0.456" + "l2=0.101 f=-0.833 shape=(1, 9000, 1)
logits [[ 4.4001384 -0.1599933  1.7093647 -9.280614 ]]
Iteration 800 of 1000: loss=0.536 " + "l1=0.423" + "l2=0.113 f=-0.848 shape=(1, 9000, 1)
logits [[ 4.1424685  -0.08515502  1.6431851  -9.093427  ]]
Iteration 900 of 1000: loss=0.518 " + "l1=0.393" + "l2=0.125 f=-0.856 shape=(1, 9000, 1)
logits [[ 3.9155984  -0.01301919  1.5916749  -8.916287  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.11 " + "l1=7.11" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[  6.0415454  -1.0700943   2.3717732 -10.337647 ]]
Iteration 100 of 1000: loss=1.71 " + "l1=0.000475" + "l2=1.71 f=-1.03 shape=(1, 9000, 1)
logits [[ 1.366009   1.3655338  1.28927   -8.139986 ]]
Iteration 200 of 1000: loss=1.17 " + "l1=0" + "l2=1.17 f=-1.05 shape=(1, 9000, 1)
logits [[ 1.2971302  1.357724   1.2329288 -8.074285 ]]
Iteration 300 of 1000: loss=0.99 " + "l1=0" + "l2=0.99 f=-1.04 shape=(1, 9000, 1)
logits [[ 1.2952561  1.3214183  1.2124212 -7.9988456]]
Iteration 400 of 1000: loss=0.906 " + "l1=0" + "l2=0.906 f=-1.04 shape=(1, 9000, 1)
logits [[ 1.2621804  1.2944989  1.2051809 -7.9301   ]]
Iteration 500 of 1000: loss=0.851 " + "l1=0" + "l2=0.851 f=-1.04 shape=(1, 9000, 1)
logits [[ 1.2210462  1.2748877  1.203081  -7.8638315]]
Iteration 600 of 1000: loss=0.794 " + "l1=0.00457" + "l2=0.79 f=-1.03 shape=(1, 9000, 1)
logits [[ 1.2451843  1.2406173  1.2060372 -7.825558 ]]
Iteration 700 of 1000: loss=0.77 " + "l1=0" + "l2=0.77 f=-1.03 shape=(1, 9000, 1)
logits [[ 1.1634817  1.2470375  1.2110219 -7.7420173]]
Iteration 800 of 1000: loss=0.732 " + "l1=0" + "l2=0.732 f=-1.02 shape=(1, 9000, 1)
logits [[ 1.1604624  1.230532   1.211091  -7.681915 ]]
Iteration 900 of 1000: loss=0.694 " + "l1=0" + "l2=0.694 f=-1.01 shape=(1, 9000, 1)
logits [[ 1.2002991  1.2189671  1.2001024 -7.641918 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.91 " + "l1=3.91" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[  6.0415454  -1.0700943   2.3717732 -10.337647 ]]
Iteration 100 of 1000: loss=1.98 " + "l1=0.81" + "l2=1.17 f=-0.972 shape=(1, 9000, 1)
logits [[ 2.389072   0.9168007  1.3825951 -8.576761 ]]
Iteration 200 of 1000: loss=1.04 " + "l1=0" + "l2=1.04 f=-1.04 shape=(1, 9000, 1)
logits [[ 1.3122433  1.3157843  1.2500396 -8.042751 ]]
Iteration 300 of 1000: loss=0.868 " + "l1=0" + "l2=0.868 f=-1.04 shape=(1, 9000, 1)
logits [[ 1.2640424  1.2835377  1.232741  -7.934255 ]]
Iteration 400 of 1000: loss=0.777 " + "l1=0" + "l2=0.777 f=-1.03 shape=(1, 9000, 1)
logits [[ 1.243924   1.2505685  1.233182  -7.844381 ]]
Iteration 500 of 1000: loss=0.724 " + "l1=0" + "l2=0.724 f=-1.02 shape=(1, 9000, 1)
logits [[ 1.2247459  1.2422334  1.2298098 -7.764916 ]]
Iteration 600 of 1000: loss=0.692 " + "l1=0.0145" + "l2=0.677 f=-1 shape=(1, 9000, 1)
logits [[ 1.2438574  1.217446   1.2212341 -7.6995025]]
Iteration 700 of 1000: loss=0.656 " + "l1=0" + "l2=0.656 f=-0.996 shape=(1, 9000, 1)
logits [[ 1.2073528  1.2207526  1.2135127 -7.6236234]]
Iteration 800 of 1000: loss=0.635 " + "l1=0.00095" + "l2=0.634 f=-0.985 shape=(1, 9000, 1)
logits [[ 1.206096   1.2046467  1.2063748 -7.5566225]]
Iteration 900 of 1000: loss=0.626 " + "l1=0.0101" + "l2=0.616 f=-0.974 shape=(1, 9000, 1)
logits [[ 1.2128423  1.1944597  1.1892012 -7.490957 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.31 " + "l1=2.31" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[  6.0415454  -1.0700943   2.3717732 -10.337647 ]]
Iteration 100 of 1000: loss=1.76 " + "l1=1.44" + "l2=0.322 f=-0.858 shape=(1, 9000, 1)
logits [[ 4.3739877  -0.04513048  1.7259157  -9.487293  ]]
Iteration 200 of 1000: loss=1.24 " + "l1=0.535" + "l2=0.701 f=-0.976 shape=(1, 9000, 1)
logits [[ 2.4417741  0.7956847  1.3452325 -8.488049 ]]
Iteration 300 of 1000: loss=0.834 " + "l1=0.00605" + "l2=0.828 f=-1.03 shape=(1, 9000, 1)
logits [[ 1.2688026  1.2501935  1.241733  -7.871028 ]]
Iteration 400 of 1000: loss=0.707 " + "l1=0.0133" + "l2=0.694 f=-1.01 shape=(1, 9000, 1)
logits [[ 1.2579364  1.2171007  1.2230752 -7.730924 ]]
Iteration 500 of 1000: loss=0.643 " + "l1=0.00717" + "l2=0.636 f=-0.994 shape=(1, 9000, 1)
logits [[ 1.2254092  1.2033409  1.209544  -7.6144767]]
Iteration 600 of 1000: loss=0.599 " + "l1=0" + "l2=0.599 f=-0.978 shape=(1, 9000, 1)
logits [[ 1.1991585  1.2000602  1.1980273 -7.5111346]]
Iteration 700 of 1000: loss=0.562 " + "l1=0" + "l2=0.562 f=-0.961 shape=(1, 9000, 1)
logits [[ 1.1825271  1.1886756  1.1868377 -7.4017925]]
Iteration 800 of 1000: loss=0.529 " + "l1=0" + "l2=0.529 f=-0.943 shape=(1, 9000, 1)
logits [[ 1.1717095  1.1799456  1.1637517 -7.288702 ]]
Iteration 900 of 1000: loss=0.497 " + "l1=0.000116" + "l2=0.497 f=-0.928 shape=(1, 9000, 1)
logits [[ 1.1504053  1.1500485  1.1500196 -7.1624775]]
--- 282.7940754890442 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0367 " + "l1=0.0367" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[  6.0415454  -1.0700943   2.3717732 -10.337647 ]]
Iteration 100 of 1000: loss=0.0366 " + "l1=0.0364" + "l2=0.000167 f=-0.751 shape=(1, 9000, 1)
logits [[  6.014584   -1.0675751   2.3747916 -10.327662 ]]
Iteration 200 of 1000: loss=0.0365 " + "l1=0.0364" + "l2=0.000117 f=-0.751 shape=(1, 9000, 1)
logits [[  6.014773   -1.0674989   2.3741415 -10.326532 ]]
Iteration 300 of 1000: loss=0.0365 " + "l1=0.0364" + "l2=0.000139 f=-0.751 shape=(1, 9000, 1)
logits [[  6.0117874  -1.0671185   2.3742576 -10.324515 ]]
Iteration 400 of 1000: loss=0.0365 " + "l1=0.0363" + "l2=0.000212 f=-0.752 shape=(1, 9000, 1)
logits [[  6.0083513  -1.0667164   2.3745477 -10.322432 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.367 " + "l1=0.367" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[  6.0415454  -1.0700943   2.3717732 -10.337647 ]]
Iteration 100 of 1000: loss=0.355 " + "l1=0.349" + "l2=0.00634 f=-0.764 shape=(1, 9000, 1)
logits [[  5.8776     -1.0558151   2.3914292 -10.270097 ]]
Iteration 200 of 1000: loss=0.35 " + "l1=0.341" + "l2=0.00924 f=-0.771 shape=(1, 9000, 1)
logits [[  5.799573   -1.0487846   2.3918056 -10.2251625]]
Iteration 300 of 1000: loss=0.345 " + "l1=0.333" + "l2=0.0122 f=-0.777 shape=(1, 9000, 1)
logits [[  5.72009    -1.0439167   2.3913376 -10.176761 ]]
Iteration 400 of 1000: loss=0.34 " + "l1=0.325" + "l2=0.0149 f=-0.783 shape=(1, 9000, 1)
logits [[  5.642251   -1.042896    2.390315  -10.1233835]]
Iteration 500 of 1000: loss=0.335 " + "l1=0.318" + "l2=0.0171 f=-0.789 shape=(1, 9000, 1)
logits [[  5.5695786  -1.0437512   2.3899233 -10.070668 ]]
Iteration 600 of 1000: loss=0.33 " + "l1=0.311" + "l2=0.0194 f=-0.793 shape=(1, 9000, 1)
logits [[  5.498302   -1.0433421   2.3889756 -10.01737  ]]
Iteration 700 of 1000: loss=0.326 " + "l1=0.304" + "l2=0.0216 f=-0.798 shape=(1, 9000, 1)
logits [[ 5.4251    -1.0395832  2.3845253 -9.960624 ]]
Iteration 800 of 1000: loss=0.321 " + "l1=0.298" + "l2=0.0236 f=-0.801 shape=(1, 9000, 1)
logits [[ 5.3511343 -1.0312644  2.3758044 -9.900575 ]]
Iteration 900 of 1000: loss=0.317 " + "l1=0.292" + "l2=0.025 f=-0.805 shape=(1, 9000, 1)
logits [[ 5.282186  -1.01951    2.3656232 -9.846747 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.67 " + "l1=3.67" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[  6.0415454  -1.0700943   2.3717732 -10.337647 ]]
Iteration 100 of 1000: loss=1.86 " + "l1=0.791" + "l2=1.07 f=-0.948 shape=(1, 9000, 1)
logits [[ 3.2005203 -0.7508628  2.4095988 -8.651998 ]]
Iteration 200 of 1000: loss=0.909 " + "l1=0" + "l2=0.909 f=-1.01 shape=(1, 9000, 1)
logits [[ 2.2495177 -0.3483162  2.2621136 -8.218106 ]]
Iteration 300 of 1000: loss=0.716 " + "l1=0" + "l2=0.716 f=-1.01 shape=(1, 9000, 1)
logits [[ 2.148354   -0.24089463  2.1617641  -8.091465  ]]
Iteration 400 of 1000: loss=0.614 " + "l1=0" + "l2=0.614 f=-1 shape=(1, 9000, 1)
logits [[ 2.1015885  -0.19601662  2.1165824  -8.026418  ]]
Iteration 500 of 1000: loss=0.553 " + "l1=0" + "l2=0.553 f=-0.996 shape=(1, 9000, 1)
logits [[ 2.0624025  -0.16716485  2.0953708  -7.9757123 ]]
Iteration 600 of 1000: loss=0.507 " + "l1=0.0176" + "l2=0.49 f=-0.992 shape=(1, 9000, 1)
logits [[ 2.0904493  -0.17933606  2.0728827  -7.9510713 ]]
Iteration 700 of 1000: loss=0.463 " + "l1=0" + "l2=0.463 f=-0.992 shape=(1, 9000, 1)
logits [[ 2.0345998 -0.1772695  2.0513017 -7.8748517]]
Iteration 800 of 1000: loss=0.44 " + "l1=0.0139" + "l2=0.426 f=-0.988 shape=(1, 9000, 1)
logits [[ 2.0422003  -0.20909235  2.028291   -7.813155  ]]
Iteration 900 of 1000: loss=0.406 " + "l1=0" + "l2=0.406 f=-0.987 shape=(1, 9000, 1)
logits [[ 2.0035987  -0.22771601  2.019055   -7.744446  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.02 " + "l1=2.02" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[  6.0415454  -1.0700943   2.3717732 -10.337647 ]]
Iteration 100 of 1000: loss=1.55 " + "l1=1.28" + "l2=0.275 f=-0.864 shape=(1, 9000, 1)
logits [[ 4.748974   -0.98357236  2.4261308  -9.647237  ]]
Iteration 200 of 1000: loss=1.19 " + "l1=0.632" + "l2=0.554 f=-0.951 shape=(1, 9000, 1)
logits [[ 3.492303   -0.80663365  2.3423696  -8.831139  ]]
Iteration 300 of 1000: loss=0.739 " + "l1=0.00734" + "l2=0.732 f=-1.01 shape=(1, 9000, 1)
logits [[ 2.246657   -0.36811185  2.2333097  -8.147172  ]]
Iteration 400 of 1000: loss=0.561 " + "l1=0.000924" + "l2=0.56 f=-0.997 shape=(1, 9000, 1)
logits [[ 2.112484   -0.17385283  2.1108046  -8.03872   ]]
Iteration 500 of 1000: loss=0.487 " + "l1=0.012" + "l2=0.475 f=-0.992 shape=(1, 9000, 1)
logits [[ 2.0906286  -0.14131762  2.0687642  -7.985235  ]]
Iteration 600 of 1000: loss=0.429 " + "l1=0.00234" + "l2=0.427 f=-0.99 shape=(1, 9000, 1)
logits [[ 2.0422833  -0.13510065  2.0380242  -7.906231  ]]
Iteration 700 of 1000: loss=0.385 " + "l1=0" + "l2=0.385 f=-0.987 shape=(1, 9000, 1)
logits [[ 2.0015178  -0.15254395  2.0137239  -7.8089104 ]]
Iteration 800 of 1000: loss=0.347 " + "l1=0.000731" + "l2=0.346 f=-0.981 shape=(1, 9000, 1)
logits [[ 1.9902155  -0.19157055  1.9888862  -7.712096  ]]
Iteration 900 of 1000: loss=0.317 " + "l1=0" + "l2=0.317 f=-0.971 shape=(1, 9000, 1)
logits [[ 1.9421362 -0.2108288  1.9584786 -7.573604 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.19 " + "l1=1.19" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[  6.0415454  -1.0700943   2.3717732 -10.337647 ]]
Iteration 100 of 1000: loss=1.05 " + "l1=0.96" + "l2=0.0854 f=-0.811 shape=(1, 9000, 1)
logits [[  5.367232   -1.0175055   2.4142473 -10.008858 ]]
Iteration 200 of 1000: loss=0.962 " + "l1=0.828" + "l2=0.134 f=-0.845 shape=(1, 9000, 1)
logits [[ 4.951836  -1.0050359  2.40455   -9.732164 ]]
Iteration 300 of 1000: loss=0.885 " + "l1=0.712" + "l2=0.173 f=-0.874 shape=(1, 9000, 1)
logits [[ 4.553694  -0.9750191  2.3632832 -9.439538 ]]
Iteration 400 of 1000: loss=0.788 " + "l1=0.559" + "l2=0.229 f=-0.9 shape=(1, 9000, 1)
logits [[ 4.011802   -0.87383527  2.2916205  -9.030731  ]]
Iteration 500 of 1000: loss=0.677 " + "l1=0.354" + "l2=0.322 f=-0.926 shape=(1, 9000, 1)
logits [[ 3.3203216 -0.6758706  2.2301633 -8.576862 ]]
Iteration 600 of 1000: loss=0.563 " + "l1=0.165" + "l2=0.398 f=-0.955 shape=(1, 9000, 1)
logits [[ 2.6681378 -0.4574489  2.1603065 -8.191143 ]]
Iteration 700 of 1000: loss=0.465 " + "l1=0.00706" + "l2=0.458 f=-0.974 shape=(1, 9000, 1)
logits [[ 2.1156678 -0.2746279  2.0939422 -7.8303   ]]
Iteration 800 of 1000: loss=0.401 " + "l1=0.00555" + "l2=0.395 f=-0.965 shape=(1, 9000, 1)
logits [[ 2.0338717  -0.25706652  2.0167968  -7.6539927 ]]
Iteration 900 of 1000: loss=0.361 " + "l1=0" + "l2=0.361 f=-0.954 shape=(1, 9000, 1)
logits [[ 1.9605192  -0.25744396  1.9715364  -7.49204   ]]
--- 272.29228115081787 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.164 " + "l1=0.164" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[  6.0415454  -1.0700943   2.3717732 -10.337647 ]]
Iteration 100 of 1000: loss=0.163 " + "l1=0.163" + "l2=0.000359 f=-0.749 shape=(1, 9000, 1)
logits [[  5.9920287  -1.059022    2.3524406 -10.282224 ]]
Iteration 200 of 1000: loss=0.163 " + "l1=0.163" + "l2=0.000387 f=-0.749 shape=(1, 9000, 1)
logits [[  5.981655   -1.0560124   2.3467827 -10.269192 ]]
Iteration 300 of 1000: loss=0.163 " + "l1=0.162" + "l2=0.000494 f=-0.749 shape=(1, 9000, 1)
logits [[  5.9687624  -1.0529772   2.3406126 -10.252856 ]]
Iteration 400 of 1000: loss=0.163 " + "l1=0.162" + "l2=0.000628 f=-0.749 shape=(1, 9000, 1)
logits [[  5.9558787  -1.0502025   2.3344693 -10.235888 ]]
Iteration 500 of 1000: loss=0.162 " + "l1=0.162" + "l2=0.000774 f=-0.749 shape=(1, 9000, 1)
logits [[  5.943409   -1.0478256   2.3286948 -10.219095 ]]
Iteration 600 of 1000: loss=0.162 " + "l1=0.161" + "l2=0.000883 f=-0.748 shape=(1, 9000, 1)
logits [[  5.9311666  -1.0456712   2.3232303 -10.202515 ]]
Iteration 700 of 1000: loss=0.162 " + "l1=0.161" + "l2=0.0011 f=-0.748 shape=(1, 9000, 1)
logits [[  5.919841   -1.0441276   2.3182735 -10.186796 ]]
Iteration 800 of 1000: loss=0.162 " + "l1=0.161" + "l2=0.00127 f=-0.748 shape=(1, 9000, 1)
logits [[  5.9084167  -1.0427274   2.313516  -10.171073 ]]
Iteration 900 of 1000: loss=0.162 " + "l1=0.161" + "l2=0.00139 f=-0.748 shape=(1, 9000, 1)
logits [[  5.896747   -1.041352    2.3086915 -10.155387 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.64 " + "l1=1.64" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[  6.0415454  -1.0700943   2.3717732 -10.337647 ]]
Iteration 100 of 1000: loss=1.57 " + "l1=1.55" + "l2=0.0281 f=-0.759 shape=(1, 9000, 1)
logits [[ 5.5934453 -0.9589146  2.2013645 -9.872666 ]]
Iteration 200 of 1000: loss=1.53 " + "l1=1.48" + "l2=0.0505 f=-0.773 shape=(1, 9000, 1)
logits [[ 5.272956  -0.8854258  2.0742574 -9.553745 ]]
Iteration 300 of 1000: loss=1.49 " + "l1=1.42" + "l2=0.0726 f=-0.785 shape=(1, 9000, 1)
logits [[ 4.955449  -0.8174502  1.9399066 -9.215915 ]]
Iteration 400 of 1000: loss=1.44 " + "l1=1.34" + "l2=0.101 f=-0.793 shape=(1, 9000, 1)
logits [[ 4.5658407 -0.7499114  1.804409  -8.794041 ]]
Iteration 500 of 1000: loss=1.38 " + "l1=1.25" + "l2=0.128 f=-0.799 shape=(1, 9000, 1)
logits [[ 4.1515436  -0.67628473  1.67845    -8.348166  ]]
Iteration 600 of 1000: loss=1.33 " + "l1=1.17" + "l2=0.154 f=-0.791 shape=(1, 9000, 1)
logits [[ 3.7967224 -0.599227   1.5741283 -7.9371943]]
Iteration 700 of 1000: loss=1.28 " + "l1=1.11" + "l2=0.179 f=-0.785 shape=(1, 9000, 1)
logits [[ 3.4718835 -0.5244604  1.5024155 -7.5882373]]
Iteration 800 of 1000: loss=1.25 " + "l1=1.05" + "l2=0.195 f=-0.781 shape=(1, 9000, 1)
logits [[ 3.209521   -0.49365908  1.460082   -7.301081  ]]
Iteration 900 of 1000: loss=1.21 " + "l1=0.993" + "l2=0.213 f=-0.778 shape=(1, 9000, 1)
logits [[ 2.9318979 -0.4579042  1.4169966 -7.002687 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=16.4 " + "l1=16.4" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[  6.0415454  -1.0700943   2.3717732 -10.337647 ]]
Iteration 100 of 1000: loss=8.45 " + "l1=5.66" + "l2=2.79 f=-0.699 shape=(1, 9000, 1)
logits [[ 0.9035091   0.15515353  0.9006887  -4.7562275 ]]
Iteration 200 of 1000: loss=4.97 " + "l1=1.23" + "l2=3.75 f=-0.39 shape=(1, 9000, 1)
logits [[-0.12793921 -0.06803934 -0.07025485 -1.2938408 ]]
Iteration 300 of 1000: loss=3.37 " + "l1=0.00342" + "l2=3.37 f=-0.296 shape=(1, 9000, 1)
logits [[-0.36171615 -0.27152655 -0.27704632 -0.27494997]]
Iteration 400 of 1000: loss=2.79 " + "l1=0.00827" + "l2=2.78 f=-0.294 shape=(1, 9000, 1)
logits [[-0.3095421  -0.29702565 -0.28122458 -0.28949127]]
Iteration 500 of 1000: loss=2.41 " + "l1=0" + "l2=2.41 f=-0.303 shape=(1, 9000, 1)
logits [[-0.33045378 -0.31208548 -0.2928468  -0.27784792]]
Iteration 600 of 1000: loss=2.11 " + "l1=0.0136" + "l2=2.1 f=-0.323 shape=(1, 9000, 1)
logits [[-0.36614165 -0.31405348 -0.29966494 -0.31323963]]
Iteration 700 of 1000: loss=1.88 " + "l1=0" + "l2=1.88 f=-0.334 shape=(1, 9000, 1)
logits [[-0.3743278  -0.3468136  -0.30714974 -0.30651224]]
Iteration 800 of 1000: loss=1.68 " + "l1=0" + "l2=1.68 f=-0.352 shape=(1, 9000, 1)
logits [[-0.41458377 -0.33705357 -0.33190805 -0.32447404]]
Iteration 900 of 1000: loss=1.51 " + "l1=0" + "l2=1.51 f=-0.359 shape=(1, 9000, 1)
logits [[-0.39616916 -0.3663191  -0.3477976  -0.32504505]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=9.01 " + "l1=9.01" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[  6.0415454  -1.0700943   2.3717732 -10.337647 ]]
Iteration 100 of 1000: loss=6.13 " + "l1=4.64" + "l2=1.49 f=-0.809 shape=(1, 9000, 1)
logits [[ 1.9601896  -0.07381023  1.3496376  -6.4719734 ]]
Iteration 200 of 1000: loss=4.44 " + "l1=2.74" + "l2=1.7 f=-0.692 shape=(1, 9000, 1)
logits [[ 0.65483904  0.22322476  0.6701525  -4.315197  ]]
Iteration 300 of 1000: loss=3.38 " + "l1=1.43" + "l2=1.95 f=-0.518 shape=(1, 9000, 1)
logits [[ 0.11421978  0.13403308  0.14241055 -2.4629261 ]]
Iteration 400 of 1000: loss=2.64 " + "l1=0.647" + "l2=1.99 f=-0.41 shape=(1, 9000, 1)
logits [[-0.11893144 -0.11732232 -0.11343262 -1.2891889 ]]
Iteration 500 of 1000: loss=2.07 " + "l1=0.11" + "l2=1.96 f=-0.345 shape=(1, 9000, 1)
logits [[-0.35786322 -0.27788496 -0.27150795 -0.4719723 ]]
Iteration 600 of 1000: loss=1.67 " + "l1=0.000115" + "l2=1.67 f=-0.343 shape=(1, 9000, 1)
logits [[-0.3999333  -0.32574487 -0.3229525  -0.32316092]]
Iteration 700 of 1000: loss=1.42 " + "l1=0.00152" + "l2=1.42 f=-0.356 shape=(1, 9000, 1)
logits [[-0.36086062 -0.35740927 -0.3512019  -0.35397208]]
Iteration 800 of 1000: loss=1.25 " + "l1=0.00128" + "l2=1.25 f=-0.375 shape=(1, 9000, 1)
logits [[-0.38012445 -0.37933624 -0.3686932  -0.3710233 ]]
Iteration 900 of 1000: loss=1.13 " + "l1=0" + "l2=1.13 f=-0.386 shape=(1, 9000, 1)
logits [[-0.4093789  -0.38268876 -0.38533726 -0.36771744]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.32 " + "l1=5.32" + "l2=0 f=-0.749 shape=(1, 9000, 1)
logits [[  6.0415454  -1.0700943   2.3717732 -10.337647 ]]
Iteration 100 of 1000: loss=4.4 " + "l1=3.9" + "l2=0.502 f=-0.819 shape=(1, 9000, 1)
logits [[ 3.8057132 -0.5712745  1.6904927 -8.20063  ]]
Iteration 200 of 1000: loss=3.57 " + "l1=2.71" + "l2=0.862 f=-0.801 shape=(1, 9000, 1)
logits [[ 2.0185223  -0.20062388  1.3010273  -6.321393  ]]
Iteration 300 of 1000: loss=3.01 " + "l1=1.98" + "l2=1.04 f=-0.773 shape=(1, 9000, 1)
logits [[ 0.96806264  0.08145092  0.97088414 -5.1133924 ]]
Iteration 400 of 1000: loss=2.54 " + "l1=1.45" + "l2=1.1 f=-0.671 shape=(1, 9000, 1)
logits [[ 0.5341674   0.15604423  0.5374731  -3.9135005 ]]
Iteration 500 of 1000: loss=2.17 " + "l1=1.1" + "l2=1.07 f=-0.578 shape=(1, 9000, 1)
logits [[ 0.3090625   0.13241857  0.31314972 -3.0665298 ]]
Iteration 600 of 1000: loss=1.85 " + "l1=0.824" + "l2=1.03 f=-0.517 shape=(1, 9000, 1)
logits [[ 0.12912825  0.06220667  0.13792105 -2.3968008 ]]
Iteration 700 of 1000: loss=1.57 " + "l1=0.547" + "l2=1.02 f=-0.46 shape=(1, 9000, 1)
logits [[-0.03553253 -0.04964029 -0.03525158 -1.7181222 ]]
Iteration 800 of 1000: loss=1.32 " + "l1=0.328" + "l2=0.99 f=-0.415 shape=(1, 9000, 1)
logits [[-0.1726254  -0.16193773 -0.15674062 -1.1675093 ]]
Iteration 900 of 1000: loss=1.08 " + "l1=0.108" + "l2=0.972 f=-0.368 shape=(1, 9000, 1)
logits [[-0.2844549  -0.28700167 -0.28343016 -0.6161785 ]]
--- 307.8575270175934 seconds ---
Adv result:3
Loading record A00625
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0564 " + "l1=0.0564" + "l2=0 f=-0.709 shape=(1, 9000, 1)
logits [[ 3.417957  -2.225778   1.4422771 -5.472221 ]]
Iteration 100 of 1000: loss=0.0559 " + "l1=0.0556" + "l2=0.000295 f=-0.709 shape=(1, 9000, 1)
logits [[ 3.3685145 -2.19435    1.413453  -5.421733 ]]
Iteration 200 of 1000: loss=0.0558 " + "l1=0.0554" + "l2=0.00032 f=-0.709 shape=(1, 9000, 1)
logits [[ 3.3560426 -2.1871061  1.4056284 -5.4096775]]
Iteration 300 of 1000: loss=0.0556 " + "l1=0.0552" + "l2=0.000398 f=-0.709 shape=(1, 9000, 1)
logits [[ 3.3422706 -2.1791131  1.3969309 -5.3959374]]
Iteration 400 of 1000: loss=0.0555 " + "l1=0.055" + "l2=0.000491 f=-0.709 shape=(1, 9000, 1)
logits [[ 3.3285632 -2.1710572  1.3881096 -5.382089 ]]
Iteration 500 of 1000: loss=0.0554 " + "l1=0.0548" + "l2=0.000599 f=-0.709 shape=(1, 9000, 1)
logits [[ 3.3154564 -2.1631947  1.3794342 -5.368974 ]]
Iteration 600 of 1000: loss=0.0553 " + "l1=0.0546" + "l2=0.000722 f=-0.71 shape=(1, 9000, 1)
logits [[ 3.3032851 -2.155813   1.3708957 -5.3565645]]
Iteration 700 of 1000: loss=0.0552 " + "l1=0.0544" + "l2=0.000844 f=-0.71 shape=(1, 9000, 1)
logits [[ 3.2915516 -2.1489952  1.3627212 -5.344101 ]]
Iteration 800 of 1000: loss=0.0552 " + "l1=0.0542" + "l2=0.000998 f=-0.71 shape=(1, 9000, 1)
logits [[ 3.2801664 -2.1424549  1.3546559 -5.331835 ]]
Iteration 900 of 1000: loss=0.0552 " + "l1=0.0541" + "l2=0.00116 f=-0.71 shape=(1, 9000, 1)
logits [[ 3.2691936 -2.1365635  1.3466699 -5.3196745]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.564 " + "l1=0.564" + "l2=0 f=-0.709 shape=(1, 9000, 1)
logits [[ 3.417957  -2.225778   1.4422771 -5.472221 ]]
Iteration 100 of 1000: loss=0.522 " + "l1=0.504" + "l2=0.018 f=-0.707 shape=(1, 9000, 1)
logits [[ 3.0485015 -1.9944423  1.2320359 -5.1132917]]
Iteration 200 of 1000: loss=0.503 " + "l1=0.475" + "l2=0.0274 f=-0.705 shape=(1, 9000, 1)
logits [[ 2.8554041 -1.8995434  1.1277758 -4.901732 ]]
Iteration 300 of 1000: loss=0.487 " + "l1=0.452" + "l2=0.0343 f=-0.696 shape=(1, 9000, 1)
logits [[ 2.7083967 -1.8158363  1.0281082 -4.7031937]]
Iteration 400 of 1000: loss=0.469 " + "l1=0.423" + "l2=0.0458 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.5276396  -1.7063338   0.92003256 -4.482472  ]]
Iteration 500 of 1000: loss=0.454 " + "l1=0.404" + "l2=0.0501 f=-0.675 shape=(1, 9000, 1)
logits [[ 2.3958607 -1.6393567  0.8652972 -4.322147 ]]
Iteration 600 of 1000: loss=0.44 " + "l1=0.388" + "l2=0.0526 f=-0.666 shape=(1, 9000, 1)
logits [[ 2.286696   -1.5887824   0.82196707 -4.1849904 ]]
Iteration 700 of 1000: loss=0.427 " + "l1=0.374" + "l2=0.0533 f=-0.658 shape=(1, 9000, 1)
logits [[ 2.1965125 -1.5448911  0.7893364 -4.0727096]]
Iteration 800 of 1000: loss=0.417 " + "l1=0.363" + "l2=0.0537 f=-0.652 shape=(1, 9000, 1)
logits [[ 2.1179812  -1.515849    0.76604646 -3.9743989 ]]
Iteration 900 of 1000: loss=0.407 " + "l1=0.35" + "l2=0.0565 f=-0.644 shape=(1, 9000, 1)
logits [[ 2.0249698  -1.4781946   0.73831105 -3.8596652 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.64 " + "l1=5.64" + "l2=0 f=-0.709 shape=(1, 9000, 1)
logits [[ 3.417957  -2.225778   1.4422771 -5.472221 ]]
Iteration 100 of 1000: loss=2.7 " + "l1=1.56" + "l2=1.14 f=-0.615 shape=(1, 9000, 1)
logits [[ 0.7648234  -0.7963084   0.39616188 -2.8236248 ]]
Iteration 200 of 1000: loss=1.72 " + "l1=0.575" + "l2=1.15 f=-0.553 shape=(1, 9000, 1)
logits [[ 0.10075819 -0.46663308  0.10876239 -1.9561093 ]]
Iteration 300 of 1000: loss=1.41 " + "l1=0.304" + "l2=1.11 f=-0.522 shape=(1, 9000, 1)
logits [[-0.08474392 -0.36514488 -0.06136493 -1.5749837 ]]
Iteration 400 of 1000: loss=1.21 " + "l1=0.119" + "l2=1.09 f=-0.509 shape=(1, 9000, 1)
logits [[-0.20560291 -0.3065737  -0.18710507 -1.3350747 ]]
Iteration 500 of 1000: loss=1.01 " + "l1=0.00418" + "l2=1.01 f=-0.485 shape=(1, 9000, 1)
logits [[-0.2900258  -0.2781944  -0.27401105 -1.0993173 ]]
Iteration 600 of 1000: loss=0.905 " + "l1=0.00591" + "l2=0.899 f=-0.478 shape=(1, 9000, 1)
logits [[-0.30372086 -0.29532716 -0.28941703 -1.0221395 ]]
Iteration 700 of 1000: loss=0.84 " + "l1=0" + "l2=0.84 f=-0.473 shape=(1, 9000, 1)
logits [[-0.32200342 -0.30401605 -0.30961803 -0.955517  ]]
Iteration 800 of 1000: loss=0.791 " + "l1=0" + "l2=0.791 f=-0.464 shape=(1, 9000, 1)
logits [[-0.32166663 -0.32015705 -0.32355028 -0.8894742 ]]
Iteration 900 of 1000: loss=0.757 " + "l1=0" + "l2=0.757 f=-0.459 shape=(1, 9000, 1)
logits [[-0.33869088 -0.32624072 -0.33100206 -0.8393401 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.1 " + "l1=3.1" + "l2=0 f=-0.709 shape=(1, 9000, 1)
logits [[ 3.417957  -2.225778   1.4422771 -5.472221 ]]
Iteration 100 of 1000: loss=2.06 " + "l1=1.56" + "l2=0.495 f=-0.659 shape=(1, 9000, 1)
logits [[ 1.5884576  -1.2481217   0.64066046 -3.615183  ]]
Iteration 200 of 1000: loss=1.53 " + "l1=0.924" + "l2=0.606 f=-0.6 shape=(1, 9000, 1)
logits [[ 0.82295513 -0.8567262   0.44429493 -2.811285  ]]
Iteration 300 of 1000: loss=1.19 " + "l1=0.508" + "l2=0.679 f=-0.553 shape=(1, 9000, 1)
logits [[ 0.28408828 -0.6390587   0.28216964 -2.1388426 ]]
Iteration 400 of 1000: loss=1.03 " + "l1=0.419" + "l2=0.611 f=-0.522 shape=(1, 9000, 1)
logits [[ 0.17293388 -0.58909214  0.1693616  -1.842479  ]]
Iteration 500 of 1000: loss=0.93 " + "l1=0.34" + "l2=0.59 f=-0.503 shape=(1, 9000, 1)
logits [[ 0.07071456 -0.5391708   0.07848067 -1.6206095 ]]
Iteration 600 of 1000: loss=0.836 " + "l1=0.265" + "l2=0.571 f=-0.484 shape=(1, 9000, 1)
logits [[-5.4074507e-03 -4.8201865e-01 -5.3483527e-05 -1.4504864e+00]]
Iteration 700 of 1000: loss=0.762 " + "l1=0.211" + "l2=0.551 f=-0.465 shape=(1, 9000, 1)
logits [[-0.06291801 -0.44455743 -0.06114671 -1.2927787 ]]
Iteration 800 of 1000: loss=0.706 " + "l1=0.177" + "l2=0.529 f=-0.453 shape=(1, 9000, 1)
logits [[-0.10527921 -0.42629734 -0.11075354 -1.1697661 ]]
Iteration 900 of 1000: loss=0.634 " + "l1=0.111" + "l2=0.522 f=-0.444 shape=(1, 9000, 1)
logits [[-0.18808098 -0.3820132  -0.17951691 -1.0252796 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.37 " + "l1=4.37" + "l2=0 f=-0.709 shape=(1, 9000, 1)
logits [[ 3.417957  -2.225778   1.4422771 -5.472221 ]]
Iteration 100 of 1000: loss=2.43 " + "l1=1.57" + "l2=0.859 f=-0.63 shape=(1, 9000, 1)
logits [[ 1.0626441  -0.96590453  0.48620453 -3.104924  ]]
Iteration 200 of 1000: loss=1.63 " + "l1=0.635" + "l2=0.993 f=-0.568 shape=(1, 9000, 1)
logits [[ 0.23853576 -0.57423645  0.24525951 -2.1823053 ]]
Iteration 300 of 1000: loss=1.34 " + "l1=0.453" + "l2=0.884 f=-0.526 shape=(1, 9000, 1)
logits [[ 0.09216387 -0.4926859   0.08782306 -1.7907652 ]]
Iteration 400 of 1000: loss=1.17 " + "l1=0.322" + "l2=0.852 f=-0.51 shape=(1, 9000, 1)
logits [[-0.03094409 -0.44276434 -0.02759185 -1.5380481 ]]
Iteration 500 of 1000: loss=1.03 " + "l1=0.193" + "l2=0.835 f=-0.485 shape=(1, 9000, 1)
logits [[-0.14897381 -0.3807417  -0.13152681 -1.279775  ]]
Iteration 600 of 1000: loss=0.887 " + "l1=0.0854" + "l2=0.802 f=-0.456 shape=(1, 9000, 1)
logits [[-0.23068184 -0.33122438 -0.2210394  -1.0418245 ]]
Iteration 700 of 1000: loss=0.786 " + "l1=0.00606" + "l2=0.78 f=-0.44 shape=(1, 9000, 1)
logits [[-0.3128008  -0.29718953 -0.2893722  -0.8601658 ]]
Iteration 800 of 1000: loss=0.7 " + "l1=0.00443" + "l2=0.696 f=-0.432 shape=(1, 9000, 1)
logits [[-0.31310424 -0.31649107 -0.3107724  -0.7870674 ]]
Iteration 900 of 1000: loss=0.625 " + "l1=0.00406" + "l2=0.621 f=-0.425 shape=(1, 9000, 1)
logits [[-0.32136452 -0.31775674 -0.31251165 -0.74883634]]
--- 309.74858689308167 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0198 " + "l1=0.0198" + "l2=0 f=-0.709 shape=(1, 9000, 1)
logits [[ 3.417957  -2.225778   1.4422771 -5.472221 ]]
Iteration 100 of 1000: loss=0.0196 " + "l1=0.0195" + "l2=0.000133 f=-0.71 shape=(1, 9000, 1)
logits [[ 3.3923426 -2.224332   1.444554  -5.454023 ]]
Iteration 200 of 1000: loss=0.0196 " + "l1=0.0194" + "l2=0.000108 f=-0.71 shape=(1, 9000, 1)
logits [[ 3.3896248 -2.2244759  1.4446992 -5.451299 ]]
Iteration 300 of 1000: loss=0.0195 " + "l1=0.0194" + "l2=0.000143 f=-0.711 shape=(1, 9000, 1)
logits [[ 3.3849092 -2.2246668  1.4453919 -5.4477882]]
Iteration 400 of 1000: loss=0.0195 " + "l1=0.0193" + "l2=0.000171 f=-0.711 shape=(1, 9000, 1)
logits [[ 3.3800333 -2.2250838  1.4463526 -5.4443574]]
Iteration 500 of 1000: loss=0.0195 " + "l1=0.0193" + "l2=0.000206 f=-0.711 shape=(1, 9000, 1)
logits [[ 3.375094  -2.2255645  1.4473349 -5.440846 ]]
Iteration 600 of 1000: loss=0.0195 " + "l1=0.0192" + "l2=0.00028 f=-0.711 shape=(1, 9000, 1)
logits [[ 3.3702323 -2.226065   1.4483272 -5.4374027]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.198 " + "l1=0.198" + "l2=0 f=-0.709 shape=(1, 9000, 1)
logits [[ 3.417957  -2.225778   1.4422771 -5.472221 ]]
Iteration 100 of 1000: loss=0.185 " + "l1=0.179" + "l2=0.00565 f=-0.714 shape=(1, 9000, 1)
logits [[ 3.2569187 -2.21716    1.4639385 -5.3587627]]
Iteration 200 of 1000: loss=0.179 " + "l1=0.171" + "l2=0.00818 f=-0.714 shape=(1, 9000, 1)
logits [[ 3.1873944 -2.2155435  1.4768511 -5.30432  ]]
Iteration 300 of 1000: loss=0.174 " + "l1=0.164" + "l2=0.0105 f=-0.714 shape=(1, 9000, 1)
logits [[ 3.1289933 -2.218554   1.4929698 -5.259295 ]]
Iteration 400 of 1000: loss=0.169 " + "l1=0.157" + "l2=0.0126 f=-0.714 shape=(1, 9000, 1)
logits [[ 3.0665617 -2.2185695  1.4984391 -5.201441 ]]
Iteration 500 of 1000: loss=0.165 " + "l1=0.151" + "l2=0.0141 f=-0.714 shape=(1, 9000, 1)
logits [[ 3.009397  -2.2217605  1.5024668 -5.1467314]]
Iteration 600 of 1000: loss=0.16 " + "l1=0.144" + "l2=0.016 f=-0.716 shape=(1, 9000, 1)
logits [[ 2.9433718 -2.2245975  1.5018924 -5.0832963]]
Iteration 700 of 1000: loss=0.155 " + "l1=0.138" + "l2=0.0178 f=-0.718 shape=(1, 9000, 1)
logits [[ 2.8757873 -2.2215254  1.4999361 -5.0264935]]
Iteration 800 of 1000: loss=0.15 " + "l1=0.131" + "l2=0.0195 f=-0.721 shape=(1, 9000, 1)
logits [[ 2.817239  -2.2270403  1.5069176 -4.9816613]]
Iteration 900 of 1000: loss=0.145 " + "l1=0.125" + "l2=0.0209 f=-0.724 shape=(1, 9000, 1)
logits [[ 2.757948  -2.2296638  1.5125077 -4.935212 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.98 " + "l1=1.98" + "l2=0 f=-0.709 shape=(1, 9000, 1)
logits [[ 3.417957  -2.225778   1.4422771 -5.472221 ]]
Iteration 100 of 1000: loss=0.69 " + "l1=0.0873" + "l2=0.602 f=-0.797 shape=(1, 9000, 1)
logits [[ 1.6853269 -2.0456953  1.5980066 -4.426437 ]]
Iteration 200 of 1000: loss=0.365 " + "l1=0.00174" + "l2=0.363 f=-0.799 shape=(1, 9000, 1)
logits [[ 1.5715005 -1.994582   1.5697631 -4.340931 ]]
Iteration 300 of 1000: loss=0.302 " + "l1=0" + "l2=0.302 f=-0.791 shape=(1, 9000, 1)
logits [[ 1.5327244 -1.9829303  1.548858  -4.263075 ]]
Iteration 400 of 1000: loss=0.26 " + "l1=0" + "l2=0.26 f=-0.786 shape=(1, 9000, 1)
logits [[ 1.516732  -1.9874519  1.5327132 -4.2056365]]
Iteration 500 of 1000: loss=0.227 " + "l1=0" + "l2=0.227 f=-0.783 shape=(1, 9000, 1)
logits [[ 1.5120263 -1.9931098  1.5243877 -4.175137 ]]
Iteration 600 of 1000: loss=0.199 " + "l1=0" + "l2=0.199 f=-0.779 shape=(1, 9000, 1)
logits [[ 1.5112022 -2.0034142  1.5142921 -4.1387186]]
Iteration 700 of 1000: loss=0.178 " + "l1=0" + "l2=0.178 f=-0.776 shape=(1, 9000, 1)
logits [[ 1.506761  -2.0242774  1.5072283 -4.0935984]]
Iteration 800 of 1000: loss=0.163 " + "l1=0" + "l2=0.163 f=-0.774 shape=(1, 9000, 1)
logits [[ 1.49561   -2.0356755  1.504185  -4.0582304]]
Iteration 900 of 1000: loss=0.151 " + "l1=0" + "l2=0.151 f=-0.772 shape=(1, 9000, 1)
logits [[ 1.4807931 -2.0393808  1.498343  -4.02914  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.09 " + "l1=1.09" + "l2=0 f=-0.709 shape=(1, 9000, 1)
logits [[ 3.417957  -2.225778   1.4422771 -5.472221 ]]
Iteration 100 of 1000: loss=0.695 " + "l1=0.505" + "l2=0.191 f=-0.744 shape=(1, 9000, 1)
logits [[ 2.4654107 -2.1377525  1.5480332 -4.849754 ]]
Iteration 200 of 1000: loss=0.473 " + "l1=0.173" + "l2=0.301 f=-0.773 shape=(1, 9000, 1)
logits [[ 1.8571556 -2.0666943  1.5433807 -4.42492  ]]
Iteration 300 of 1000: loss=0.315 " + "l1=0" + "l2=0.315 f=-0.779 shape=(1, 9000, 1)
logits [[ 1.5384363 -2.0145154  1.5412062 -4.1801677]]
Iteration 400 of 1000: loss=0.246 " + "l1=0" + "l2=0.246 f=-0.77 shape=(1, 9000, 1)
logits [[ 1.5180163 -2.0205944  1.5190278 -4.0979733]]
Iteration 500 of 1000: loss=0.202 " + "l1=0" + "l2=0.202 f=-0.77 shape=(1, 9000, 1)
logits [[ 1.5091631 -2.0269966  1.5149441 -4.075481 ]]
Iteration 600 of 1000: loss=0.17 " + "l1=0.00248" + "l2=0.168 f=-0.768 shape=(1, 9000, 1)
logits [[ 1.5079588 -2.0318375  1.5034475 -4.053422 ]]
Iteration 700 of 1000: loss=0.15 " + "l1=0.00307" + "l2=0.147 f=-0.766 shape=(1, 9000, 1)
logits [[ 1.4992316 -2.0381489  1.493642  -4.0185113]]
Iteration 800 of 1000: loss=0.134 " + "l1=0" + "l2=0.134 f=-0.763 shape=(1, 9000, 1)
logits [[ 1.4871415 -2.0466352  1.4884559 -3.9820402]]
Iteration 900 of 1000: loss=0.124 " + "l1=0" + "l2=0.124 f=-0.76 shape=(1, 9000, 1)
logits [[ 1.4801832 -2.0571966  1.4845843 -3.9473257]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.642 " + "l1=0.642" + "l2=0 f=-0.709 shape=(1, 9000, 1)
logits [[ 3.417957  -2.225778   1.4422771 -5.472221 ]]
Iteration 100 of 1000: loss=0.515 " + "l1=0.454" + "l2=0.0605 f=-0.724 shape=(1, 9000, 1)
logits [[ 2.9051554 -2.1880777  1.5078183 -5.1214504]]
Iteration 200 of 1000: loss=0.436 " + "l1=0.335" + "l2=0.101 f=-0.734 shape=(1, 9000, 1)
logits [[ 2.562601  -2.1654067  1.5309885 -4.8650117]]
Iteration 300 of 1000: loss=0.38 " + "l1=0.259" + "l2=0.121 f=-0.735 shape=(1, 9000, 1)
logits [[ 2.3364897 -2.154251   1.5394992 -4.6616225]]
Iteration 400 of 1000: loss=0.33 " + "l1=0.192" + "l2=0.138 f=-0.738 shape=(1, 9000, 1)
logits [[ 2.1432633 -2.1487365  1.5522143 -4.4994974]]
Iteration 500 of 1000: loss=0.267 " + "l1=0.0994" + "l2=0.168 f=-0.756 shape=(1, 9000, 1)
logits [[ 1.8340979 -2.095716   1.5282071 -4.2888155]]
Iteration 600 of 1000: loss=0.206 " + "l1=0.019" + "l2=0.187 f=-0.761 shape=(1, 9000, 1)
logits [[ 1.5856407 -2.0568871  1.5272003 -4.1017365]]
Iteration 700 of 1000: loss=0.161 " + "l1=0.00116" + "l2=0.16 f=-0.756 shape=(1, 9000, 1)
logits [[ 1.5170295 -2.043118   1.5134726 -4.0104613]]
Iteration 800 of 1000: loss=0.137 " + "l1=0.00112" + "l2=0.136 f=-0.75 shape=(1, 9000, 1)
logits [[ 1.5082111 -2.0516405  1.5047556 -3.9615812]]
Iteration 900 of 1000: loss=0.122 " + "l1=0.000835" + "l2=0.121 f=-0.746 shape=(1, 9000, 1)
logits [[ 1.4970257 -2.0667357  1.4944578 -3.9080222]]
--- 285.4739770889282 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0889 " + "l1=0.0889" + "l2=0 f=-0.709 shape=(1, 9000, 1)
logits [[ 3.417957  -2.225778   1.4422771 -5.472221 ]]
Iteration 100 of 1000: loss=0.0878 " + "l1=0.0872" + "l2=0.000539 f=-0.706 shape=(1, 9000, 1)
logits [[ 3.3501985 -2.2043617  1.4045265 -5.3743987]]
Iteration 200 of 1000: loss=0.0874 " + "l1=0.0867" + "l2=0.000651 f=-0.706 shape=(1, 9000, 1)
logits [[ 3.3278935 -2.1982794  1.3914981 -5.3440275]]
Iteration 300 of 1000: loss=0.087 " + "l1=0.0862" + "l2=0.000846 f=-0.705 shape=(1, 9000, 1)
logits [[ 3.304008  -2.1919062  1.3773606 -5.311257 ]]
Iteration 400 of 1000: loss=0.0867 " + "l1=0.0856" + "l2=0.00104 f=-0.705 shape=(1, 9000, 1)
logits [[ 3.2816498 -2.1861565  1.3643655 -5.28042  ]]
Iteration 500 of 1000: loss=0.0864 " + "l1=0.0852" + "l2=0.00123 f=-0.705 shape=(1, 9000, 1)
logits [[ 3.262979  -2.18052    1.3530349 -5.254539 ]]
Iteration 600 of 1000: loss=0.0862 " + "l1=0.0848" + "l2=0.00143 f=-0.704 shape=(1, 9000, 1)
logits [[ 3.2454445 -2.175364   1.3425977 -5.230026 ]]
Iteration 700 of 1000: loss=0.086 " + "l1=0.0844" + "l2=0.00162 f=-0.704 shape=(1, 9000, 1)
logits [[ 3.2288244 -2.170485   1.3328091 -5.206949 ]]
Iteration 800 of 1000: loss=0.0857 " + "l1=0.084" + "l2=0.00172 f=-0.703 shape=(1, 9000, 1)
logits [[ 3.2125773 -2.165904   1.3235743 -5.1841974]]
Iteration 900 of 1000: loss=0.0855 " + "l1=0.0836" + "l2=0.00188 f=-0.703 shape=(1, 9000, 1)
logits [[ 3.1979506 -2.1614385  1.3151289 -5.1646214]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.889 " + "l1=0.889" + "l2=0 f=-0.709 shape=(1, 9000, 1)
logits [[ 3.417957  -2.225778   1.4422771 -5.472221 ]]
Iteration 100 of 1000: loss=0.794 " + "l1=0.753" + "l2=0.0411 f=-0.682 shape=(1, 9000, 1)
logits [[ 2.8576481 -2.0496838  1.1379516 -4.672803 ]]
Iteration 200 of 1000: loss=0.742 " + "l1=0.678" + "l2=0.0645 f=-0.659 shape=(1, 9000, 1)
logits [[ 2.5597835 -1.9565883  0.9825035 -4.2206593]]
Iteration 300 of 1000: loss=0.699 " + "l1=0.615" + "l2=0.0844 f=-0.625 shape=(1, 9000, 1)
logits [[ 2.3297732 -1.8389542  0.8259039 -3.81872  ]]
Iteration 400 of 1000: loss=0.665 " + "l1=0.568" + "l2=0.0965 f=-0.6 shape=(1, 9000, 1)
logits [[ 2.1510265 -1.7437457  0.726073  -3.533253 ]]
Iteration 500 of 1000: loss=0.634 " + "l1=0.528" + "l2=0.106 f=-0.58 shape=(1, 9000, 1)
logits [[ 1.9872432 -1.6743507  0.6638926 -3.297458 ]]
Iteration 600 of 1000: loss=0.603 " + "l1=0.489" + "l2=0.114 f=-0.561 shape=(1, 9000, 1)
logits [[ 1.8267471 -1.6190165  0.6068119 -3.0593822]]
Iteration 700 of 1000: loss=0.571 " + "l1=0.452" + "l2=0.119 f=-0.543 shape=(1, 9000, 1)
logits [[ 1.6821163 -1.5722313  0.553637  -2.8370132]]
Iteration 800 of 1000: loss=0.542 " + "l1=0.422" + "l2=0.12 f=-0.529 shape=(1, 9000, 1)
logits [[ 1.5711483 -1.5385401  0.506203  -2.6531317]]
Iteration 900 of 1000: loss=0.514 " + "l1=0.393" + "l2=0.121 f=-0.515 shape=(1, 9000, 1)
logits [[ 1.4613171  -1.5084788   0.45469397 -2.4676678 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.89 " + "l1=8.89" + "l2=0 f=-0.709 shape=(1, 9000, 1)
logits [[ 3.417957  -2.225778   1.4422771 -5.472221 ]]
Iteration 100 of 1000: loss=2.84 " + "l1=0.298" + "l2=2.54 f=-0.4 shape=(1, 9000, 1)
logits [[-0.08932418 -0.9943157  -0.12960888 -0.38781404]]
Iteration 200 of 1000: loss=1.65 " + "l1=0" + "l2=1.65 f=-0.398 shape=(1, 9000, 1)
logits [[-0.2138342  -0.9729051  -0.20535107 -0.2012156 ]]
Iteration 300 of 1000: loss=1.34 " + "l1=0.0244" + "l2=1.31 f=-0.387 shape=(1, 9000, 1)
logits [[-0.17610618 -0.97733265 -0.1940196  -0.20052856]]
Iteration 400 of 1000: loss=1.16 " + "l1=0" + "l2=1.16 f=-0.379 shape=(1, 9000, 1)
logits [[-0.18656705 -0.98194474 -0.18854441 -0.16082233]]
Iteration 500 of 1000: loss=1.03 " + "l1=0" + "l2=1.03 f=-0.374 shape=(1, 9000, 1)
logits [[-0.18015103 -0.9914114  -0.17046371 -0.1552006 ]]
Iteration 600 of 1000: loss=0.919 " + "l1=0" + "l2=0.919 f=-0.37 shape=(1, 9000, 1)
logits [[-0.15816651 -1.0101999  -0.1625935  -0.14811069]]
Iteration 700 of 1000: loss=0.828 " + "l1=0" + "l2=0.828 f=-0.366 shape=(1, 9000, 1)
logits [[-0.14200583 -1.0186744  -0.17254205 -0.1316463 ]]
Iteration 800 of 1000: loss=0.747 " + "l1=0" + "l2=0.747 f=-0.362 shape=(1, 9000, 1)
logits [[-0.12378817 -1.0213606  -0.18443365 -0.12032414]]
Iteration 900 of 1000: loss=0.687 " + "l1=0" + "l2=0.687 f=-0.356 shape=(1, 9000, 1)
logits [[-0.11324818 -1.0164088  -0.20300233 -0.09138374]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.89 " + "l1=4.89" + "l2=0 f=-0.709 shape=(1, 9000, 1)
logits [[ 3.417957  -2.225778   1.4422771 -5.472221 ]]
Iteration 100 of 1000: loss=2.68 " + "l1=1.73" + "l2=0.954 f=-0.483 shape=(1, 9000, 1)
logits [[ 1.1412243 -1.34296    0.2637658 -1.9951704]]
Iteration 200 of 1000: loss=1.6 " + "l1=0.267" + "l2=1.33 f=-0.39 shape=(1, 9000, 1)
logits [[ 0.03633759 -1.0466238  -0.10180967 -0.44925213]]
Iteration 300 of 1000: loss=1.12 " + "l1=0.000935" + "l2=1.11 f=-0.364 shape=(1, 9000, 1)
logits [[-0.14456244 -1.0073422  -0.15965873 -0.14626181]]
Iteration 400 of 1000: loss=0.937 " + "l1=0" + "l2=0.937 f=-0.358 shape=(1, 9000, 1)
logits [[-0.1437074  -1.0094949  -0.14461172 -0.13424289]]
Iteration 500 of 1000: loss=0.826 " + "l1=0" + "l2=0.826 f=-0.354 shape=(1, 9000, 1)
logits [[-0.13794756 -1.0078099  -0.14891978 -0.12245325]]
Iteration 600 of 1000: loss=0.733 " + "l1=0" + "l2=0.733 f=-0.349 shape=(1, 9000, 1)
logits [[-0.12122445 -1.0100818  -0.15975438 -0.10484008]]
Iteration 700 of 1000: loss=0.65 " + "l1=0" + "l2=0.65 f=-0.343 shape=(1, 9000, 1)
logits [[-0.10158893 -1.0157309  -0.17637025 -0.07921095]]
Iteration 800 of 1000: loss=0.575 " + "l1=0.00779" + "l2=0.568 f=-0.333 shape=(1, 9000, 1)
logits [[-0.04948251 -1.023569   -0.1959156  -0.06363859]]
Iteration 900 of 1000: loss=0.512 " + "l1=0.00309" + "l2=0.509 f=-0.323 shape=(1, 9000, 1)
logits [[-0.02345594 -1.015343   -0.22285697 -0.02906619]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.89 " + "l1=2.89" + "l2=0 f=-0.709 shape=(1, 9000, 1)
logits [[ 3.417957  -2.225778   1.4422771 -5.472221 ]]
Iteration 100 of 1000: loss=2.01 " + "l1=1.61" + "l2=0.398 f=-0.587 shape=(1, 9000, 1)
logits [[ 1.8200244  -1.6796865   0.63690394 -3.1269245 ]]
Iteration 200 of 1000: loss=1.55 " + "l1=1.05" + "l2=0.501 f=-0.49 shape=(1, 9000, 1)
logits [[ 1.1517074 -1.3573025  0.3162417 -2.0706947]]
Iteration 300 of 1000: loss=1.22 " + "l1=0.554" + "l2=0.663 f=-0.41 shape=(1, 9000, 1)
logits [[ 0.55040944 -1.1470896   0.11078388 -1.1541592 ]]
Iteration 400 of 1000: loss=0.969 " + "l1=0.226" + "l2=0.743 f=-0.372 shape=(1, 9000, 1)
logits [[ 0.13852748 -1.0348696  -0.03739622 -0.5556679 ]]
Iteration 500 of 1000: loss=0.81 " + "l1=0.0668" + "l2=0.743 f=-0.361 shape=(1, 9000, 1)
logits [[-0.05926554 -0.99059767 -0.13090253 -0.26487595]]
Iteration 600 of 1000: loss=0.673 " + "l1=0.0046" + "l2=0.668 f=-0.354 shape=(1, 9000, 1)
logits [[-0.12549245 -0.97559637 -0.1771896  -0.13964844]]
Iteration 700 of 1000: loss=0.577 " + "l1=0" + "l2=0.577 f=-0.346 shape=(1, 9000, 1)
logits [[-0.10509906 -0.97025275 -0.22229095 -0.08708989]]
Iteration 800 of 1000: loss=0.499 " + "l1=0" + "l2=0.499 f=-0.332 shape=(1, 9000, 1)
logits [[-0.05013603 -0.98912424 -0.2536403  -0.03684155]]
Iteration 900 of 1000: loss=0.44 " + "l1=0.00538" + "l2=0.434 f=-0.322 shape=(1, 9000, 1)
logits [[ 0.00180569 -0.9938038  -0.28062662 -0.01475889]]
--- 310.0750324726105 seconds ---
Adv result:3
Loading record A00666
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0668 " + "l1=0.0668" + "l2=0 f=-0.399 shape=(1, 9000, 1)
logits [[ 3.2382793 -3.4378502  3.0698955 -4.465734 ]]
Iteration 100 of 1000: loss=0.0658 " + "l1=0.0654" + "l2=0.000482 f=-0.39 shape=(1, 9000, 1)
logits [[ 3.1644948 -3.3720403  3.005031  -4.3567324]]
Iteration 200 of 1000: loss=0.0655 " + "l1=0.0649" + "l2=0.000575 f=-0.386 shape=(1, 9000, 1)
logits [[ 3.1433754 -3.3503926  2.9839582 -4.322488 ]]
Iteration 300 of 1000: loss=0.0652 " + "l1=0.0645" + "l2=0.000743 f=-0.383 shape=(1, 9000, 1)
logits [[ 3.118952  -3.326723   2.960918  -4.2836924]]
Iteration 400 of 1000: loss=0.0649 " + "l1=0.064" + "l2=0.0009 f=-0.379 shape=(1, 9000, 1)
logits [[ 3.0947168 -3.30425    2.9388835 -4.24535  ]]
Iteration 500 of 1000: loss=0.0646 " + "l1=0.0635" + "l2=0.00111 f=-0.375 shape=(1, 9000, 1)
logits [[ 3.069654  -3.2814088  2.9168081 -4.205956 ]]
Iteration 600 of 1000: loss=0.0643 " + "l1=0.063" + "l2=0.00124 f=-0.371 shape=(1, 9000, 1)
logits [[ 3.044227  -3.258582   2.8945575 -4.165702 ]]
Iteration 700 of 1000: loss=0.064 " + "l1=0.0625" + "l2=0.00147 f=-0.367 shape=(1, 9000, 1)
logits [[ 3.0162876 -3.2342756  2.8703637 -4.12202  ]]
Iteration 800 of 1000: loss=0.0636 " + "l1=0.0619" + "l2=0.00169 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.9855535 -3.2084227  2.8445432 -4.0747466]]
Iteration 900 of 1000: loss=0.0632 " + "l1=0.0613" + "l2=0.00189 f=-0.359 shape=(1, 9000, 1)
logits [[ 2.9521103 -3.1811194  2.817833  -4.024281 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.668 " + "l1=0.668" + "l2=0 f=-0.399 shape=(1, 9000, 1)
logits [[ 3.2382793 -3.4378502  3.0698955 -4.465734 ]]
Iteration 100 of 1000: loss=0.576 " + "l1=0.534" + "l2=0.0424 f=-0.311 shape=(1, 9000, 1)
logits [[ 2.5438547 -2.7964633  2.4373922 -3.4284346]]
Iteration 200 of 1000: loss=0.517 " + "l1=0.447" + "l2=0.0698 f=-0.269 shape=(1, 9000, 1)
logits [[ 2.0541663 -2.4139593  1.9883885 -2.705885 ]]
Iteration 300 of 1000: loss=0.485 " + "l1=0.401" + "l2=0.0845 f=-0.25 shape=(1, 9000, 1)
logits [[ 1.8153522 -2.1919339  1.7241205 -2.3457847]]
Iteration 400 of 1000: loss=0.459 " + "l1=0.367" + "l2=0.0912 f=-0.237 shape=(1, 9000, 1)
logits [[ 1.6367286 -2.0378797  1.5402131 -2.0871835]]
Iteration 500 of 1000: loss=0.437 " + "l1=0.339" + "l2=0.0986 f=-0.225 shape=(1, 9000, 1)
logits [[ 1.4709672 -1.9145988  1.3862001 -1.8445008]]
Iteration 600 of 1000: loss=0.417 " + "l1=0.311" + "l2=0.106 f=-0.222 shape=(1, 9000, 1)
logits [[ 1.29111   -1.8235689  1.2588717 -1.6153146]]
Iteration 700 of 1000: loss=0.398 " + "l1=0.286" + "l2=0.112 f=-0.222 shape=(1, 9000, 1)
logits [[ 1.1309434 -1.7250088  1.126347  -1.4203957]]
Iteration 800 of 1000: loss=0.378 " + "l1=0.26" + "l2=0.118 f=-0.223 shape=(1, 9000, 1)
logits [[ 0.98924005 -1.606512    0.99001163 -1.265329  ]]
Iteration 900 of 1000: loss=0.356 " + "l1=0.238" + "l2=0.118 f=-0.221 shape=(1, 9000, 1)
logits [[ 0.8713478 -1.506666   0.8712773 -1.1201816]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.68 " + "l1=6.68" + "l2=0 f=-0.399 shape=(1, 9000, 1)
logits [[ 3.2382793 -3.4378502  3.0698955 -4.465734 ]]
Iteration 100 of 1000: loss=1.47 " + "l1=0.215" + "l2=1.26 f=-0.151 shape=(1, 9000, 1)
logits [[-0.1228409  -0.2975785  -0.10121822 -0.08259633]]
Iteration 200 of 1000: loss=1.01 " + "l1=0.0166" + "l2=0.992 f=-0.171 shape=(1, 9000, 1)
logits [[-0.2073283  -0.15557815 -0.18195657 -0.13896498]]
Iteration 300 of 1000: loss=0.808 " + "l1=0.00903" + "l2=0.799 f=-0.172 shape=(1, 9000, 1)
logits [[-0.1852879  -0.16320537 -0.18394701 -0.15417138]]
Iteration 400 of 1000: loss=0.69 " + "l1=0.00536" + "l2=0.685 f=-0.173 shape=(1, 9000, 1)
logits [[-0.15261889 -0.15797472 -0.17558232 -0.20590901]]
Iteration 500 of 1000: loss=0.614 " + "l1=0" + "l2=0.614 f=-0.171 shape=(1, 9000, 1)
logits [[-0.17510767 -0.15871297 -0.17734362 -0.17154217]]
Iteration 600 of 1000: loss=0.562 " + "l1=0" + "l2=0.562 f=-0.177 shape=(1, 9000, 1)
logits [[-0.19145353 -0.1571245  -0.16166046 -0.19963306]]
Iteration 700 of 1000: loss=0.529 " + "l1=0" + "l2=0.529 f=-0.178 shape=(1, 9000, 1)
logits [[-0.18168429 -0.1500925  -0.18552755 -0.19525394]]
Iteration 800 of 1000: loss=0.503 " + "l1=0" + "l2=0.503 f=-0.187 shape=(1, 9000, 1)
logits [[-0.21826771 -0.16150129 -0.17268583 -0.19414935]]
Iteration 900 of 1000: loss=0.481 " + "l1=0.00561" + "l2=0.475 f=-0.185 shape=(1, 9000, 1)
logits [[-0.15737608 -0.16298775 -0.18252516 -0.23599184]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.67 " + "l1=3.67" + "l2=0 f=-0.399 shape=(1, 9000, 1)
logits [[ 3.2382793 -3.4378502  3.0698955 -4.465734 ]]
Iteration 100 of 1000: loss=1.26 " + "l1=0.372" + "l2=0.892 f=-0.134 shape=(1, 9000, 1)
logits [[ 0.08257622 -0.5939545   0.04054254 -0.06391138]]
Iteration 200 of 1000: loss=0.854 " + "l1=0.137" + "l2=0.717 f=-0.16 shape=(1, 9000, 1)
logits [[-0.09950999 -0.34443846 -0.0953842  -0.10227998]]
Iteration 300 of 1000: loss=0.722 " + "l1=0.0444" + "l2=0.677 f=-0.177 shape=(1, 9000, 1)
logits [[-0.18106219 -0.22021578 -0.16739005 -0.13945243]]
Iteration 400 of 1000: loss=0.614 " + "l1=0.00914" + "l2=0.605 f=-0.175 shape=(1, 9000, 1)
logits [[-0.17206435 -0.1782073  -0.18952958 -0.16158381]]
Iteration 500 of 1000: loss=0.55 " + "l1=0.0221" + "l2=0.528 f=-0.172 shape=(1, 9000, 1)
logits [[-0.14068224 -0.18093602 -0.18020022 -0.18772441]]
Iteration 600 of 1000: loss=0.505 " + "l1=0" + "l2=0.505 f=-0.187 shape=(1, 9000, 1)
logits [[-0.20766458 -0.16174425 -0.18689014 -0.19278184]]
Iteration 700 of 1000: loss=0.473 " + "l1=0.0079" + "l2=0.465 f=-0.189 shape=(1, 9000, 1)
logits [[-0.17437367 -0.18873654 -0.1809409  -0.21035656]]
Iteration 800 of 1000: loss=0.451 " + "l1=0" + "l2=0.451 f=-0.191 shape=(1, 9000, 1)
logits [[-0.19850418 -0.1824546  -0.19683096 -0.18440112]]
Iteration 900 of 1000: loss=0.436 " + "l1=0.00231" + "l2=0.433 f=-0.193 shape=(1, 9000, 1)
logits [[-0.19574402 -0.19182172 -0.18762942 -0.1982652 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.17 " + "l1=2.17" + "l2=0 f=-0.399 shape=(1, 9000, 1)
logits [[ 3.2382793 -3.4378502  3.0698955 -4.465734 ]]
Iteration 100 of 1000: loss=1.21 " + "l1=0.784" + "l2=0.426 f=-0.191 shape=(1, 9000, 1)
logits [[ 0.9660838  -1.4457866   0.94689333 -1.2323227 ]]
Iteration 200 of 1000: loss=0.829 " + "l1=0.284" + "l2=0.545 f=-0.124 shape=(1, 9000, 1)
logits [[ 0.14784291 -0.7155976   0.15904768 -0.08890332]]
Iteration 300 of 1000: loss=0.677 " + "l1=0.199" + "l2=0.478 f=-0.13 shape=(1, 9000, 1)
logits [[ 0.03332806 -0.5796883   0.02878118 -0.00064566]]
Iteration 400 of 1000: loss=0.606 " + "l1=0.171" + "l2=0.435 f=-0.133 shape=(1, 9000, 1)
logits [[ 0.01914522 -0.5077472   0.00715548 -0.05243926]]
Iteration 500 of 1000: loss=0.543 " + "l1=0.122" + "l2=0.421 f=-0.143 shape=(1, 9000, 1)
logits [[-0.06863491 -0.4116685  -0.05538684 -0.03621474]]
Iteration 600 of 1000: loss=0.48 " + "l1=0.0871" + "l2=0.392 f=-0.148 shape=(1, 9000, 1)
logits [[-0.08923025 -0.34122145 -0.08784859 -0.07315162]]
Iteration 700 of 1000: loss=0.452 " + "l1=0.0777" + "l2=0.374 f=-0.154 shape=(1, 9000, 1)
logits [[-0.07950273 -0.3186046  -0.10375128 -0.11523745]]
Iteration 800 of 1000: loss=0.432 " + "l1=0.0625" + "l2=0.369 f=-0.163 shape=(1, 9000, 1)
logits [[-0.13870369 -0.2976966  -0.1109931  -0.10545901]]
Iteration 900 of 1000: loss=0.419 " + "l1=0.0558" + "l2=0.363 f=-0.164 shape=(1, 9000, 1)
logits [[-0.1388796  -0.2803385  -0.12896518 -0.10849945]]
--- 317.2118339538574 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00168 " + "l1=0.00168" + "l2=0 f=-0.399 shape=(1, 9000, 1)
logits [[ 3.2382793 -3.4378502  3.0698955 -4.465734 ]]
Iteration 100 of 1000: loss=0.00142 " + "l1=0.00124" + "l2=0.000177 f=-0.4 shape=(1, 9000, 1)
logits [[ 3.207567  -3.4559476  3.0835874 -4.436392 ]]
Iteration 200 of 1000: loss=0.00133 " + "l1=0.00116" + "l2=0.000178 f=-0.401 shape=(1, 9000, 1)
logits [[ 3.2028115 -3.460301   3.0872319 -4.4326878]]
Iteration 300 of 1000: loss=0.00128 " + "l1=0.00105" + "l2=0.000221 f=-0.401 shape=(1, 9000, 1)
logits [[ 3.1966467 -3.465058   3.0911856 -4.4276257]]
Iteration 400 of 1000: loss=0.00123 " + "l1=0.000954" + "l2=0.000278 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.1904247 -3.469629   3.094992  -4.422776 ]]
Iteration 500 of 1000: loss=0.00121 " + "l1=0.000856" + "l2=0.000353 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.1842227 -3.473935   3.0986264 -4.417871 ]]
Iteration 600 of 1000: loss=0.00121 " + "l1=0.00076" + "l2=0.000452 f=-0.403 shape=(1, 9000, 1)
logits [[ 3.1779668 -3.4779139  3.101933  -4.412797 ]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.000842 " + "l1=0.000842" + "l2=0 f=-0.399 shape=(1, 9000, 1)
logits [[ 3.2382793 -3.4378502  3.0698955 -4.465734 ]]
Iteration 100 of 1000: loss=0.000776 " + "l1=0.000696" + "l2=7.99e-05 f=-0.4 shape=(1, 9000, 1)
logits [[ 3.217863  -3.4496286  3.0786033 -4.4460177]]
Iteration 200 of 1000: loss=0.000751 " + "l1=0.00069" + "l2=6.13e-05 f=-0.4 shape=(1, 9000, 1)
logits [[ 3.217512  -3.4506223  3.0795932 -4.445978 ]]
Iteration 300 of 1000: loss=0.000743 " + "l1=0.000671" + "l2=7.19e-05 f=-0.4 shape=(1, 9000, 1)
logits [[ 3.2152832 -3.4523702  3.0811236 -4.4442234]]
Iteration 400 of 1000: loss=0.00078 " + "l1=0.000649" + "l2=0.000132 f=-0.4 shape=(1, 9000, 1)
logits [[ 3.2125404 -3.4543471  3.082827  -4.4420805]]
const [0.0075]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.00126 " + "l1=0.00126" + "l2=0 f=-0.399 shape=(1, 9000, 1)
logits [[ 3.2382793 -3.4378502  3.0698955 -4.465734 ]]
Iteration 100 of 1000: loss=0.00111 " + "l1=0.000983" + "l2=0.000125 f=-0.4 shape=(1, 9000, 1)
logits [[ 3.2123137 -3.453106   3.081281  -4.4408917]]
Iteration 200 of 1000: loss=0.00106 " + "l1=0.000948" + "l2=0.000111 f=-0.4 shape=(1, 9000, 1)
logits [[ 3.2099185 -3.4557111  3.083555  -4.4392004]]
Iteration 300 of 1000: loss=0.00106 " + "l1=0.000896" + "l2=0.000167 f=-0.401 shape=(1, 9000, 1)
logits [[ 3.2056005 -3.45886    3.0861838 -4.4356036]]
const [0.00875]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00147 " + "l1=0.00147" + "l2=0 f=-0.399 shape=(1, 9000, 1)
logits [[ 3.2382793 -3.4378502  3.0698955 -4.465734 ]]
Iteration 100 of 1000: loss=0.00126 " + "l1=0.00111" + "l2=0.000151 f=-0.4 shape=(1, 9000, 1)
logits [[ 3.2097638 -3.45464    3.0824533 -4.4384756]]
Iteration 200 of 1000: loss=0.0012 " + "l1=0.00106" + "l2=0.000144 f=-0.401 shape=(1, 9000, 1)
logits [[ 3.206252  -3.458039   3.0853994 -4.435868 ]]
Iteration 300 of 1000: loss=0.00117 " + "l1=0.000982" + "l2=0.000183 f=-0.401 shape=(1, 9000, 1)
logits [[ 3.2009335 -3.4619546  3.0886729 -4.431403 ]]
Iteration 400 of 1000: loss=0.00113 " + "l1=0.000906" + "l2=0.000228 f=-0.401 shape=(1, 9000, 1)
logits [[ 3.195685  -3.4660175  3.0921164 -4.4273453]]
Iteration 500 of 1000: loss=0.00109 " + "l1=0.000832" + "l2=0.000262 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.1903687 -3.4697466  3.095236  -4.42333  ]]
Iteration 600 of 1000: loss=0.0011 " + "l1=0.000761" + "l2=0.000342 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.185229  -3.4732466  3.0982137 -4.419385 ]]
const [0.008125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00137 " + "l1=0.00137" + "l2=0 f=-0.399 shape=(1, 9000, 1)
logits [[ 3.2382793 -3.4378502  3.0698955 -4.465734 ]]
Iteration 100 of 1000: loss=0.00119 " + "l1=0.00105" + "l2=0.000137 f=-0.4 shape=(1, 9000, 1)
logits [[ 3.2110937 -3.4538991  3.0818741 -4.4396353]]
Iteration 200 of 1000: loss=0.00113 " + "l1=0.001" + "l2=0.000129 f=-0.4 shape=(1, 9000, 1)
logits [[ 3.2081356 -3.4569592  3.0845578 -4.437586 ]]
Iteration 300 of 1000: loss=0.00111 " + "l1=0.000941" + "l2=0.00017 f=-0.401 shape=(1, 9000, 1)
logits [[ 3.2033117 -3.4605048  3.0875404 -4.4336095]]
Iteration 400 of 1000: loss=0.00107 " + "l1=0.000875" + "l2=0.000198 f=-0.401 shape=(1, 9000, 1)
logits [[ 3.1982493 -3.4641173  3.0906055 -4.4294477]]
Iteration 500 of 1000: loss=0.00106 " + "l1=0.000812" + "l2=0.000248 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.1935344 -3.467685   3.0936143 -4.4260473]]
Iteration 600 of 1000: loss=0.00111 " + "l1=0.000751" + "l2=0.000358 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.1888099 -3.4709032  3.0963566 -4.422552 ]]
--- 170.2506399154663 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.077 " + "l1=0.077" + "l2=0 f=-0.399 shape=(1, 9000, 1)
logits [[ 3.2382793 -3.4378502  3.0698955 -4.465734 ]]
Iteration 100 of 1000: loss=0.075 " + "l1=0.0741" + "l2=0.000941 f=-0.388 shape=(1, 9000, 1)
logits [[ 3.121611  -3.3833938  2.9981349 -4.2884707]]
Iteration 200 of 1000: loss=0.0742 " + "l1=0.073" + "l2=0.00125 f=-0.383 shape=(1, 9000, 1)
logits [[ 3.0780902 -3.3599381  2.9683664 -4.2192655]]
Iteration 300 of 1000: loss=0.0734 " + "l1=0.0718" + "l2=0.00165 f=-0.378 shape=(1, 9000, 1)
logits [[ 3.0318913 -3.3350813  2.9374146 -4.1460867]]
Iteration 400 of 1000: loss=0.0726 " + "l1=0.0705" + "l2=0.00206 f=-0.372 shape=(1, 9000, 1)
logits [[ 2.98415   -3.3099904  2.906543  -4.070372 ]]
Iteration 500 of 1000: loss=0.0718 " + "l1=0.0693" + "l2=0.00244 f=-0.367 shape=(1, 9000, 1)
logits [[ 2.937372  -3.2844162  2.8752408 -3.996525 ]]
Iteration 600 of 1000: loss=0.071 " + "l1=0.0681" + "l2=0.0029 f=-0.362 shape=(1, 9000, 1)
logits [[ 2.887636  -3.2554786  2.840713  -3.919352 ]]
Iteration 700 of 1000: loss=0.07 " + "l1=0.0667" + "l2=0.00333 f=-0.356 shape=(1, 9000, 1)
logits [[ 2.8325286 -3.2223105  2.8029506 -3.8356662]]
Iteration 800 of 1000: loss=0.069 " + "l1=0.0654" + "l2=0.00358 f=-0.351 shape=(1, 9000, 1)
logits [[ 2.7822642 -3.1943626  2.7666254 -3.760329 ]]
Iteration 900 of 1000: loss=0.0682 " + "l1=0.0643" + "l2=0.00397 f=-0.348 shape=(1, 9000, 1)
logits [[ 2.7345157 -3.1651661  2.7287896 -3.6906574]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.77 " + "l1=0.77" + "l2=0 f=-0.399 shape=(1, 9000, 1)
logits [[ 3.2382793 -3.4378502  3.0698955 -4.465734 ]]
Iteration 100 of 1000: loss=0.584 " + "l1=0.51" + "l2=0.0739 f=-0.286 shape=(1, 9000, 1)
logits [[ 2.2393248 -2.759006   2.2396238 -2.864318 ]]
Iteration 200 of 1000: loss=0.478 " + "l1=0.362" + "l2=0.115 f=-0.24 shape=(1, 9000, 1)
logits [[ 1.6637336 -2.3297992  1.6646228 -1.9583439]]
Iteration 300 of 1000: loss=0.423 " + "l1=0.28" + "l2=0.144 f=-0.205 shape=(1, 9000, 1)
logits [[ 1.3440694 -2.1024232  1.3682153 -1.4300616]]
Iteration 400 of 1000: loss=0.379 " + "l1=0.216" + "l2=0.163 f=-0.193 shape=(1, 9000, 1)
logits [[ 1.0447751 -1.956361   1.1497946 -1.0104215]]
Iteration 500 of 1000: loss=0.341 " + "l1=0.167" + "l2=0.174 f=-0.187 shape=(1, 9000, 1)
logits [[ 0.81176615 -1.8560278   0.9842128  -0.6897495 ]]
Iteration 600 of 1000: loss=0.308 " + "l1=0.123" + "l2=0.185 f=-0.175 shape=(1, 9000, 1)
logits [[ 0.6111912 -1.7410891  0.8313967 -0.4016988]]
Iteration 700 of 1000: loss=0.278 " + "l1=0.0846" + "l2=0.194 f=-0.16 shape=(1, 9000, 1)
logits [[ 0.43308836 -1.6345668   0.70335776 -0.14274567]]
Iteration 800 of 1000: loss=0.235 " + "l1=0.0346" + "l2=0.201 f=-0.137 shape=(1, 9000, 1)
logits [[ 0.22998582 -1.5216662   0.5449296   0.19904369]]
Iteration 900 of 1000: loss=0.196 " + "l1=0.00329" + "l2=0.192 f=-0.12 shape=(1, 9000, 1)
logits [[ 0.12391499 -1.4719667   0.45083058  0.41788748]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.424 " + "l1=0.424" + "l2=0 f=-0.399 shape=(1, 9000, 1)
logits [[ 3.2382793 -3.4378502  3.0698955 -4.465734 ]]
Iteration 100 of 1000: loss=0.365 " + "l1=0.341" + "l2=0.0243 f=-0.336 shape=(1, 9000, 1)
logits [[ 2.6531966 -3.1013653  2.6534605 -3.5486002]]
Iteration 200 of 1000: loss=0.331 " + "l1=0.294" + "l2=0.037 f=-0.299 shape=(1, 9000, 1)
logits [[ 2.3263938 -2.8403182  2.3272867 -3.0107982]]
Iteration 300 of 1000: loss=0.302 " + "l1=0.255" + "l2=0.0472 f=-0.279 shape=(1, 9000, 1)
logits [[ 2.056358  -2.646644   2.0578873 -2.5823984]]
Iteration 400 of 1000: loss=0.283 " + "l1=0.229" + "l2=0.054 f=-0.266 shape=(1, 9000, 1)
logits [[ 1.8736655 -2.5228062  1.875114  -2.2913172]]
Iteration 500 of 1000: loss=0.268 " + "l1=0.211" + "l2=0.0575 f=-0.254 shape=(1, 9000, 1)
logits [[ 1.7478915 -2.4279118  1.7475859 -2.0833504]]
Iteration 600 of 1000: loss=0.255 " + "l1=0.195" + "l2=0.0603 f=-0.249 shape=(1, 9000, 1)
logits [[ 1.6182871 -2.3559418  1.6405666 -1.8986369]]
Iteration 700 of 1000: loss=0.241 " + "l1=0.181" + "l2=0.0609 f=-0.247 shape=(1, 9000, 1)
logits [[ 1.4912924 -2.3083673  1.5567096 -1.7265309]]
Iteration 800 of 1000: loss=0.226 " + "l1=0.163" + "l2=0.0623 f=-0.238 shape=(1, 9000, 1)
logits [[ 1.3610687 -2.2340953  1.4443324 -1.5230314]]
Iteration 900 of 1000: loss=0.211 " + "l1=0.148" + "l2=0.0636 f=-0.231 shape=(1, 9000, 1)
logits [[ 1.2431471 -2.1613362  1.3405421 -1.3462539]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.597 " + "l1=0.597" + "l2=0 f=-0.399 shape=(1, 9000, 1)
logits [[ 3.2382793 -3.4378502  3.0698955 -4.465734 ]]
Iteration 100 of 1000: loss=0.484 " + "l1=0.439" + "l2=0.0449 f=-0.31 shape=(1, 9000, 1)
logits [[ 2.4523873 -2.9324906  2.4542613 -3.2138715]]
Iteration 200 of 1000: loss=0.415 " + "l1=0.343" + "l2=0.0716 f=-0.268 shape=(1, 9000, 1)
logits [[ 1.9733691 -2.5683534  1.9742444 -2.452221 ]]
Iteration 300 of 1000: loss=0.374 " + "l1=0.284" + "l2=0.0894 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.6852992 -2.3620093  1.6877571 -1.9796456]]
Iteration 400 of 1000: loss=0.344 " + "l1=0.246" + "l2=0.0987 f=-0.227 shape=(1, 9000, 1)
logits [[ 1.4822845 -2.234675   1.5076511 -1.6618574]]
Iteration 500 of 1000: loss=0.32 " + "l1=0.215" + "l2=0.105 f=-0.223 shape=(1, 9000, 1)
logits [[ 1.2840093 -2.1533725  1.3750507 -1.3987281]]
Iteration 600 of 1000: loss=0.298 " + "l1=0.188" + "l2=0.11 f=-0.225 shape=(1, 9000, 1)
logits [[ 1.0996404 -2.0817547  1.2518865 -1.1685567]]
Iteration 700 of 1000: loss=0.279 " + "l1=0.167" + "l2=0.112 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.972682  -2.013422   1.1567626 -0.9976732]]
Iteration 800 of 1000: loss=0.261 " + "l1=0.149" + "l2=0.112 f=-0.216 shape=(1, 9000, 1)
logits [[ 0.86486554 -1.9399312   1.067292   -0.85423416]]
Iteration 900 of 1000: loss=0.243 " + "l1=0.129" + "l2=0.114 f=-0.208 shape=(1, 9000, 1)
logits [[ 0.74061453 -1.8664293   0.9772604  -0.68222964]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.684 " + "l1=0.684" + "l2=0 f=-0.399 shape=(1, 9000, 1)
logits [[ 3.2382793 -3.4378502  3.0698955 -4.465734 ]]
Iteration 100 of 1000: loss=0.537 " + "l1=0.478" + "l2=0.0588 f=-0.298 shape=(1, 9000, 1)
logits [[ 2.343952  -2.8481278  2.3480492 -3.0357835]]
Iteration 200 of 1000: loss=0.449 " + "l1=0.354" + "l2=0.0947 f=-0.253 shape=(1, 9000, 1)
logits [[ 1.8019933 -2.435976   1.8040222 -2.1828823]]
Iteration 300 of 1000: loss=0.402 " + "l1=0.288" + "l2=0.114 f=-0.224 shape=(1, 9000, 1)
logits [[ 1.523811  -2.2379181  1.5324934 -1.7142632]]
Iteration 400 of 1000: loss=0.366 " + "l1=0.238" + "l2=0.128 f=-0.211 shape=(1, 9000, 1)
logits [[ 1.2632251 -2.1047213  1.3383747 -1.3391755]]
Iteration 500 of 1000: loss=0.335 " + "l1=0.196" + "l2=0.139 f=-0.206 shape=(1, 9000, 1)
logits [[ 1.0292858 -2.0017118  1.1754347 -1.0288852]]
Iteration 600 of 1000: loss=0.309 " + "l1=0.163" + "l2=0.147 f=-0.199 shape=(1, 9000, 1)
logits [[ 0.8618561 -1.9143896  1.0455745 -0.7908767]]
Iteration 700 of 1000: loss=0.285 " + "l1=0.13" + "l2=0.155 f=-0.188 shape=(1, 9000, 1)
logits [[ 0.6959816  -1.8092105   0.9126422  -0.55298984]]
Iteration 800 of 1000: loss=0.26 " + "l1=0.101" + "l2=0.159 f=-0.176 shape=(1, 9000, 1)
logits [[ 0.5418495  -1.7151917   0.80096424 -0.3320405 ]]
Iteration 900 of 1000: loss=0.227 " + "l1=0.064" + "l2=0.163 f=-0.16 shape=(1, 9000, 1)
logits [[ 0.36407652 -1.6145008   0.6650989  -0.05581004]]
--- 313.2174756526947 seconds ---
Adv result:3
Loading record A00670
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0382 " + "l1=0.0382" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 2.6748304 -1.1405382  2.6209846 -7.5626326]]
Iteration 100 of 1000: loss=0.0376 " + "l1=0.0371" + "l2=0.000409 f=-0.854 shape=(1, 9000, 1)
logits [[ 2.6188364 -1.0960919  2.6069777 -7.5467296]]
Iteration 200 of 1000: loss=0.0374 " + "l1=0.0369" + "l2=0.000446 f=-0.855 shape=(1, 9000, 1)
logits [[ 2.606742  -1.0873021  2.6042595 -7.5430717]]
Iteration 300 of 1000: loss=0.0372 " + "l1=0.0368" + "l2=0.000448 f=-0.855 shape=(1, 9000, 1)
logits [[ 2.5997894 -1.0798831  2.5996728 -7.539106 ]]
Iteration 400 of 1000: loss=0.0372 " + "l1=0.0367" + "l2=0.000521 f=-0.855 shape=(1, 9000, 1)
logits [[ 2.5942233 -1.0730107  2.594496  -7.5346437]]
Iteration 500 of 1000: loss=0.0371 " + "l1=0.0366" + "l2=0.000548 f=-0.855 shape=(1, 9000, 1)
logits [[ 2.5892408 -1.0664803  2.5890949 -7.529939 ]]
Iteration 600 of 1000: loss=0.0371 " + "l1=0.0364" + "l2=0.000696 f=-0.854 shape=(1, 9000, 1)
logits [[ 2.5837169 -1.0599422  2.583764  -7.5250278]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.382 " + "l1=0.382" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 2.6748304 -1.1405382  2.6209846 -7.5626326]]
Iteration 100 of 1000: loss=0.338 " + "l1=0.313" + "l2=0.025 f=-0.861 shape=(1, 9000, 1)
logits [[ 2.3364005 -0.738149   2.3920693 -7.4342046]]
Iteration 200 of 1000: loss=0.324 " + "l1=0.294" + "l2=0.0298 f=-0.858 shape=(1, 9000, 1)
logits [[ 2.2452865  -0.62496585  2.3162088  -7.3677034 ]]
Iteration 300 of 1000: loss=0.311 " + "l1=0.278" + "l2=0.0327 f=-0.85 shape=(1, 9000, 1)
logits [[ 2.178785   -0.53400135  2.2487075  -7.2938643 ]]
Iteration 400 of 1000: loss=0.298 " + "l1=0.261" + "l2=0.037 f=-0.841 shape=(1, 9000, 1)
logits [[ 2.1034646 -0.43936    2.1706316 -7.2004437]]
Iteration 500 of 1000: loss=0.286 " + "l1=0.243" + "l2=0.0429 f=-0.833 shape=(1, 9000, 1)
logits [[ 2.011695   -0.33893177  2.0929801  -7.098816  ]]
Iteration 600 of 1000: loss=0.272 " + "l1=0.224" + "l2=0.0479 f=-0.82 shape=(1, 9000, 1)
logits [[ 1.9145917  -0.23927097  2.0033488  -6.9604363 ]]
Iteration 700 of 1000: loss=0.26 " + "l1=0.211" + "l2=0.0499 f=-0.809 shape=(1, 9000, 1)
logits [[ 1.8424997  -0.17178178  1.9341332  -6.840982  ]]
Iteration 800 of 1000: loss=0.251 " + "l1=0.199" + "l2=0.0526 f=-0.802 shape=(1, 9000, 1)
logits [[ 1.7635605  -0.10953724  1.879602   -6.7397203 ]]
Iteration 900 of 1000: loss=0.241 " + "l1=0.188" + "l2=0.053 f=-0.79 shape=(1, 9000, 1)
logits [[ 1.6972463  -0.05903207  1.8250667  -6.625146  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.82 " + "l1=3.82" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 2.6748304 -1.1405382  2.6209846 -7.5626326]]
Iteration 100 of 1000: loss=0.914 " + "l1=0" + "l2=0.914 f=-0.993 shape=(1, 9000, 1)
logits [[-0.19240807  1.5845742   1.5666659  -6.9316254 ]]
Iteration 200 of 1000: loss=0.613 " + "l1=0.00205" + "l2=0.611 f=-0.965 shape=(1, 9000, 1)
logits [[-0.08961713  1.4845873   1.4866387  -6.7418838 ]]
Iteration 300 of 1000: loss=0.511 " + "l1=0.00223" + "l2=0.509 f=-0.95 shape=(1, 9000, 1)
logits [[-0.07173081  1.4418957   1.4441274  -6.61482   ]]
Iteration 400 of 1000: loss=0.448 " + "l1=0" + "l2=0.448 f=-0.933 shape=(1, 9000, 1)
logits [[-0.04937582  1.3935231   1.3916937  -6.469158  ]]
Iteration 500 of 1000: loss=0.409 " + "l1=0" + "l2=0.409 f=-0.923 shape=(1, 9000, 1)
logits [[-0.04807644  1.3656775   1.3639913  -6.3728485 ]]
Iteration 600 of 1000: loss=0.388 " + "l1=0.00881" + "l2=0.379 f=-0.913 shape=(1, 9000, 1)
logits [[-0.03749429  1.3374814   1.3462932  -6.296786  ]]
Iteration 700 of 1000: loss=0.365 " + "l1=0.00436" + "l2=0.36 f=-0.907 shape=(1, 9000, 1)
logits [[-0.05370878  1.3309093   1.3352656  -6.2402005 ]]
Iteration 800 of 1000: loss=0.35 " + "l1=0" + "l2=0.35 f=-0.905 shape=(1, 9000, 1)
logits [[-0.08657914  1.3357762   1.3174074  -6.1856384 ]]
Iteration 900 of 1000: loss=0.334 " + "l1=0.00101" + "l2=0.333 f=-0.898 shape=(1, 9000, 1)
logits [[-0.0864533  1.3087212  1.3097318 -6.122725 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.1 " + "l1=2.1" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 2.6748304 -1.1405382  2.6209846 -7.5626326]]
Iteration 100 of 1000: loss=1.07 " + "l1=0.563" + "l2=0.509 f=-0.884 shape=(1, 9000, 1)
logits [[ 0.850889    0.74867433  1.7721826  -6.9065046 ]]
Iteration 200 of 1000: loss=0.588 " + "l1=0" + "l2=0.588 f=-0.95 shape=(1, 9000, 1)
logits [[-0.09143312  1.4752709   1.468217   -6.6508446 ]]
Iteration 300 of 1000: loss=0.446 " + "l1=0.00146" + "l2=0.445 f=-0.933 shape=(1, 9000, 1)
logits [[-0.06979821  1.401594    1.4042481  -6.4674506 ]]
Iteration 400 of 1000: loss=0.383 " + "l1=0" + "l2=0.383 f=-0.921 shape=(1, 9000, 1)
logits [[-0.08800249  1.3659835   1.3536812  -6.3157773 ]]
Iteration 500 of 1000: loss=0.349 " + "l1=0" + "l2=0.349 f=-0.911 shape=(1, 9000, 1)
logits [[-0.09755708  1.338972    1.333687   -6.2181425 ]]
Iteration 600 of 1000: loss=0.329 " + "l1=0" + "l2=0.329 f=-0.904 shape=(1, 9000, 1)
logits [[-0.12543567  1.3300574   1.313427   -6.1339564 ]]
Iteration 700 of 1000: loss=0.311 " + "l1=0" + "l2=0.311 f=-0.895 shape=(1, 9000, 1)
logits [[-0.13156559  1.3090538   1.3001248  -6.058382  ]]
Iteration 800 of 1000: loss=0.3 " + "l1=0.00688" + "l2=0.293 f=-0.883 shape=(1, 9000, 1)
logits [[-0.11980599  1.2759857   1.2884872  -5.9749146 ]]
Iteration 900 of 1000: loss=0.289 " + "l1=0.0092" + "l2=0.28 f=-0.873 shape=(1, 9000, 1)
logits [[-0.13073175  1.2552167   1.2719505  -5.8878016 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.24 " + "l1=1.24" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 2.6748304 -1.1405382  2.6209846 -7.5626326]]
Iteration 100 of 1000: loss=0.856 " + "l1=0.664" + "l2=0.192 f=-0.859 shape=(1, 9000, 1)
logits [[ 1.6459481e+00  6.9072414e-03  2.0496473e+00 -7.1399031e+00]]
Iteration 200 of 1000: loss=0.701 " + "l1=0.457" + "l2=0.244 f=-0.858 shape=(1, 9000, 1)
logits [[ 1.2225138   0.40482682  1.8124933  -6.8699617 ]]
Iteration 300 of 1000: loss=0.543 " + "l1=0.215" + "l2=0.328 f=-0.866 shape=(1, 9000, 1)
logits [[ 0.5990919  0.8854062  1.5479717 -6.4960656]]
Iteration 400 of 1000: loss=0.404 " + "l1=0.0113" + "l2=0.393 f=-0.906 shape=(1, 9000, 1)
logits [[-0.08712839  1.3336943   1.3684891  -6.239606  ]]
Iteration 500 of 1000: loss=0.345 " + "l1=0.00723" + "l2=0.337 f=-0.899 shape=(1, 9000, 1)
logits [[-0.12238032  1.3042569   1.326514   -6.104226  ]]
Iteration 600 of 1000: loss=0.314 " + "l1=4.61e-05" + "l2=0.314 f=-0.893 shape=(1, 9000, 1)
logits [[-0.1670954  1.2985533  1.2986951 -6.0039196]]
Iteration 700 of 1000: loss=0.296 " + "l1=0.00526" + "l2=0.291 f=-0.882 shape=(1, 9000, 1)
logits [[-0.17663461  1.2653795   1.2815601  -5.8971524 ]]
Iteration 800 of 1000: loss=0.279 " + "l1=0" + "l2=0.279 f=-0.871 shape=(1, 9000, 1)
logits [[-0.21255001  1.2578347   1.257113   -5.7878013 ]]
Iteration 900 of 1000: loss=0.268 " + "l1=6.73e-05" + "l2=0.268 f=-0.864 shape=(1, 9000, 1)
logits [[-0.23352696  1.2382532   1.2384602  -5.698243  ]]
--- 288.79919934272766 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.000538 " + "l1=0.000538" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 2.6748304 -1.1405382  2.6209846 -7.5626326]]
Iteration 100 of 1000: loss=0.000295 " + "l1=0.000108" + "l2=0.000187 f=-0.855 shape=(1, 9000, 1)
logits [[ 2.6402714 -1.1297426  2.629475  -7.560439 ]]
Iteration 200 of 1000: loss=0.000231 " + "l1=3.5e-05" + "l2=0.000196 f=-0.856 shape=(1, 9000, 1)
logits [[ 2.6345863 -1.1276269  2.6310863 -7.560781 ]]
Iteration 300 of 1000: loss=0.000181 " + "l1=0" + "l2=0.000181 f=-0.856 shape=(1, 9000, 1)
logits [[ 2.6320739 -1.1269896  2.632113  -7.5609813]]
Iteration 400 of 1000: loss=0.000186 " + "l1=0" + "l2=0.000186 f=-0.856 shape=(1, 9000, 1)
logits [[ 2.6322114 -1.1272378  2.6323233 -7.5610356]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.000269 " + "l1=0.000269" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 2.6748304 -1.1405382  2.6209846 -7.5626326]]
Iteration 100 of 1000: loss=0.000213 " + "l1=0.000132" + "l2=8.08e-05 f=-0.854 shape=(1, 9000, 1)
logits [[ 2.6529903 -1.1341114  2.6265252 -7.5612354]]
Iteration 200 of 1000: loss=0.00019 " + "l1=0.000128" + "l2=6.23e-05 f=-0.854 shape=(1, 9000, 1)
logits [[ 2.6522214 -1.1334779  2.626623  -7.5614686]]
Iteration 300 of 1000: loss=0.000208 " + "l1=0.000111" + "l2=9.62e-05 f=-0.854 shape=(1, 9000, 1)
logits [[ 2.6496599 -1.132632   2.6273606 -7.5614843]]
const [0.0025]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.000135 " + "l1=0.000135" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 2.6748304 -1.1405382  2.6209846 -7.5626326]]
Iteration 100 of 1000: loss=0.000133 " + "l1=8.65e-05" + "l2=4.68e-05 f=-0.853 shape=(1, 9000, 1)
logits [[ 2.6596076 -1.1363653  2.6249986 -7.561626 ]]
Iteration 200 of 1000: loss=0.000115 " + "l1=9.17e-05" + "l2=2.33e-05 f=-0.853 shape=(1, 9000, 1)
logits [[ 2.6611083 -1.1364434  2.6244185 -7.5618796]]
Iteration 300 of 1000: loss=0.000141 " + "l1=8.96e-05" + "l2=5.18e-05 f=-0.853 shape=(1, 9000, 1)
logits [[ 2.6604798 -1.1361963  2.6246247 -7.5619736]]
const [0.00125]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.73e-05 " + "l1=6.73e-05" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 2.6748304 -1.1405382  2.6209846 -7.5626326]]
Iteration 100 of 1000: loss=8.18e-05 " + "l1=4.9e-05" + "l2=3.28e-05 f=-0.853 shape=(1, 9000, 1)
logits [[ 2.6633852 -1.137611   2.6241817 -7.5618773]]
const [0.000625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.37e-05 " + "l1=3.37e-05" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 2.6748304 -1.1405382  2.6209846 -7.5626326]]
Iteration 100 of 1000: loss=5.15e-05 " + "l1=2.63e-05" + "l2=2.52e-05 f=-0.853 shape=(1, 9000, 1)
logits [[ 2.665707  -1.1382021  2.623626  -7.5621567]]
--- 95.98662304878235 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.102 " + "l1=0.102" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 2.6748304 -1.1405382  2.6209846 -7.5626326]]
Iteration 100 of 1000: loss=0.102 " + "l1=0.102" + "l2=0.000307 f=-0.852 shape=(1, 9000, 1)
logits [[ 2.628533  -1.1148559  2.6071417 -7.5283117]]
Iteration 200 of 1000: loss=0.102 " + "l1=0.101" + "l2=0.000327 f=-0.852 shape=(1, 9000, 1)
logits [[ 2.6184874 -1.1095307  2.6041431 -7.520723 ]]
Iteration 300 of 1000: loss=0.102 " + "l1=0.101" + "l2=0.000401 f=-0.852 shape=(1, 9000, 1)
logits [[ 2.6074162 -1.103942   2.6003277 -7.5113616]]
Iteration 400 of 1000: loss=0.101 " + "l1=0.101" + "l2=0.00048 f=-0.852 shape=(1, 9000, 1)
logits [[ 2.5963867 -1.0983406  2.5959275 -7.5012927]]
Iteration 500 of 1000: loss=0.101 " + "l1=0.101" + "l2=0.000543 f=-0.851 shape=(1, 9000, 1)
logits [[ 2.5897608 -1.094102   2.5900064 -7.4911885]]
Iteration 600 of 1000: loss=0.101 " + "l1=0.101" + "l2=0.000628 f=-0.851 shape=(1, 9000, 1)
logits [[ 2.5839112 -1.0900286  2.5836668 -7.4811773]]
Iteration 700 of 1000: loss=0.101 " + "l1=0.1" + "l2=0.000715 f=-0.851 shape=(1, 9000, 1)
logits [[ 2.577107  -1.0855434  2.5772655 -7.4708347]]
Iteration 800 of 1000: loss=0.101 " + "l1=0.1" + "l2=0.000872 f=-0.85 shape=(1, 9000, 1)
logits [[ 2.5706651 -1.080983   2.5705738 -7.4604826]]
Iteration 900 of 1000: loss=0.101 " + "l1=0.1" + "l2=0.000928 f=-0.85 shape=(1, 9000, 1)
logits [[ 2.5642965 -1.0764556  2.5638628 -7.4502697]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.02 " + "l1=1.02" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 2.6748304 -1.1405382  2.6209846 -7.5626326]]
Iteration 100 of 1000: loss=0.991 " + "l1=0.975" + "l2=0.0154 f=-0.838 shape=(1, 9000, 1)
logits [[ 2.44862   -0.9556904  2.4549558 -7.298489 ]]
Iteration 200 of 1000: loss=0.973 " + "l1=0.951" + "l2=0.0223 f=-0.83 shape=(1, 9000, 1)
logits [[ 2.3474195 -0.8725272  2.356655  -7.1496663]]
Iteration 300 of 1000: loss=0.953 " + "l1=0.925" + "l2=0.028 f=-0.819 shape=(1, 9000, 1)
logits [[ 2.2579513 -0.8006623  2.2598844 -6.99173  ]]
Iteration 400 of 1000: loss=0.93 " + "l1=0.895" + "l2=0.0349 f=-0.804 shape=(1, 9000, 1)
logits [[ 2.1543803  -0.73128706  2.1553464  -6.796141  ]]
Iteration 500 of 1000: loss=0.898 " + "l1=0.855" + "l2=0.0431 f=-0.787 shape=(1, 9000, 1)
logits [[ 2.0207424 -0.6558369  2.0190187 -6.531781 ]]
Iteration 600 of 1000: loss=0.868 " + "l1=0.818" + "l2=0.0495 f=-0.769 shape=(1, 9000, 1)
logits [[ 1.8929485 -0.591494   1.9027185 -6.2804484]]
Iteration 700 of 1000: loss=0.837 " + "l1=0.782" + "l2=0.055 f=-0.744 shape=(1, 9000, 1)
logits [[ 1.793968   -0.55048263  1.800878   -6.021917  ]]
Iteration 800 of 1000: loss=0.808 " + "l1=0.747" + "l2=0.0614 f=-0.72 shape=(1, 9000, 1)
logits [[ 1.695549  -0.51259    1.7007848 -5.7652316]]
Iteration 900 of 1000: loss=0.78 " + "l1=0.713" + "l2=0.0672 f=-0.698 shape=(1, 9000, 1)
logits [[ 1.5852098  -0.47503722  1.6126832  -5.516393  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.2 " + "l1=10.2" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 2.6748304 -1.1405382  2.6209846 -7.5626326]]
Iteration 100 of 1000: loss=6.6 " + "l1=4.62" + "l2=1.99 f=-0.595 shape=(1, 9000, 1)
logits [[ 0.1732816   0.19078557  0.93635327 -3.6793094 ]]
Iteration 200 of 1000: loss=4.26 " + "l1=1.75" + "l2=2.51 f=-0.394 shape=(1, 9000, 1)
logits [[-0.5283252   0.22711198  0.23909463 -1.514554  ]]
Iteration 300 of 1000: loss=2.43 " + "l1=0.0211" + "l2=2.41 f=-0.221 shape=(1, 9000, 1)
logits [[-0.7478581  -0.05799675 -0.02816694 -0.04928564]]
Iteration 400 of 1000: loss=1.8 " + "l1=0" + "l2=1.8 f=-0.23 shape=(1, 9000, 1)
logits [[-0.76792777 -0.04997608 -0.06901194 -0.03468788]]
Iteration 500 of 1000: loss=1.5 " + "l1=0.0132" + "l2=1.49 f=-0.254 shape=(1, 9000, 1)
logits [[-0.7254914  -0.12410643 -0.07625325 -0.08941942]]
Iteration 600 of 1000: loss=1.31 " + "l1=0" + "l2=1.31 f=-0.274 shape=(1, 9000, 1)
logits [[-0.73436815 -0.15241662 -0.1046955  -0.10253387]]
Iteration 700 of 1000: loss=1.19 " + "l1=0" + "l2=1.19 f=-0.291 shape=(1, 9000, 1)
logits [[-0.80192745 -0.1089566  -0.14983653 -0.1031448 ]]
Iteration 800 of 1000: loss=1.11 " + "l1=0" + "l2=1.11 f=-0.295 shape=(1, 9000, 1)
logits [[-0.7696691  -0.17085738 -0.15124452 -0.08659478]]
Iteration 900 of 1000: loss=1.02 " + "l1=0.00554" + "l2=1.01 f=-0.304 shape=(1, 9000, 1)
logits [[-0.7760651  -0.1354255  -0.16442026 -0.14096794]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.63 " + "l1=5.63" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 2.6748304 -1.1405382  2.6209846 -7.5626326]]
Iteration 100 of 1000: loss=4.58 " + "l1=4.06" + "l2=0.522 f=-0.724 shape=(1, 9000, 1)
logits [[ 1.5454671  -0.29655027  1.616489   -5.759411  ]]
Iteration 200 of 1000: loss=3.68 " + "l1=2.8" + "l2=0.881 f=-0.593 shape=(1, 9000, 1)
logits [[ 0.66272044  0.03366215  1.0144802  -4.0811925 ]]
Iteration 300 of 1000: loss=2.82 " + "l1=1.85" + "l2=0.969 f=-0.482 shape=(1, 9000, 1)
logits [[-0.01477249  0.15936308  0.6435691  -2.7146907 ]]
Iteration 400 of 1000: loss=2.08 " + "l1=0.947" + "l2=1.13 f=-0.366 shape=(1, 9000, 1)
logits [[-0.48402706  0.18349996  0.27842104 -1.4432833 ]]
Iteration 500 of 1000: loss=1.47 " + "l1=0.21" + "l2=1.26 f=-0.251 shape=(1, 9000, 1)
logits [[-0.64346504 -0.00491032  0.01221289 -0.36979896]]
Iteration 600 of 1000: loss=1.12 " + "l1=0.0026" + "l2=1.12 f=-0.236 shape=(1, 9000, 1)
logits [[-0.71293515 -0.07290491 -0.07866196 -0.07763026]]
Iteration 700 of 1000: loss=0.969 " + "l1=0" + "l2=0.969 f=-0.245 shape=(1, 9000, 1)
logits [[-0.7053571  -0.1096437  -0.08368886 -0.08249196]]
Iteration 800 of 1000: loss=0.846 " + "l1=0" + "l2=0.846 f=-0.246 shape=(1, 9000, 1)
logits [[-0.6950612  -0.10226175 -0.09509508 -0.08995795]]
Iteration 900 of 1000: loss=0.762 " + "l1=0" + "l2=0.762 f=-0.246 shape=(1, 9000, 1)
logits [[-0.66632295 -0.11842602 -0.10418864 -0.09599443]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.33 " + "l1=3.33" + "l2=0 f=-0.852 shape=(1, 9000, 1)
logits [[ 2.6748304 -1.1405382  2.6209846 -7.5626326]]
Iteration 100 of 1000: loss=2.97 " + "l1=2.81" + "l2=0.162 f=-0.784 shape=(1, 9000, 1)
logits [[ 2.0244358  -0.58177876  2.0290139  -6.60839   ]]
Iteration 200 of 1000: loss=2.69 " + "l1=2.43" + "l2=0.262 f=-0.737 shape=(1, 9000, 1)
logits [[ 1.615073   -0.35285577  1.6263115  -5.8361363 ]]
Iteration 300 of 1000: loss=2.39 " + "l1=2.05" + "l2=0.342 f=-0.671 shape=(1, 9000, 1)
logits [[ 1.2132313  -0.19587941  1.3026962  -5.005475  ]]
Iteration 400 of 1000: loss=2.04 " + "l1=1.6" + "l2=0.44 f=-0.596 shape=(1, 9000, 1)
logits [[ 0.6368005 -0.0875902  1.0014075 -3.9358673]]
Iteration 500 of 1000: loss=1.73 " + "l1=1.16" + "l2=0.565 f=-0.511 shape=(1, 9000, 1)
logits [[ 1.3304925e-01  1.2016613e-03  7.0260304e-01 -2.8800576e+00]]
Iteration 600 of 1000: loss=1.46 " + "l1=0.819" + "l2=0.638 f=-0.438 shape=(1, 9000, 1)
logits [[-0.19188946  0.08419856  0.4392121  -2.081794  ]]
Iteration 700 of 1000: loss=1.22 " + "l1=0.501" + "l2=0.715 f=-0.372 shape=(1, 9000, 1)
logits [[-0.44039616  0.12627633  0.18336369 -1.3568141 ]]
Iteration 800 of 1000: loss=1 " + "l1=0.272" + "l2=0.731 f=-0.302 shape=(1, 9000, 1)
logits [[-0.4540389   0.02002795  0.03117423 -0.8054657 ]]
Iteration 900 of 1000: loss=0.85 " + "l1=0.0863" + "l2=0.764 f=-0.247 shape=(1, 9000, 1)
logits [[-0.5110282  -0.07066917 -0.07129047 -0.33628386]]
--- 315.7181205749512 seconds ---
Adv result:3
Loading record A00725
(1, 9020)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0687 " + "l1=0.0687" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.9573276 -2.910026   3.0347888 -6.0492435]]
Iteration 100 of 1000: loss=0.0684 " + "l1=0.0682" + "l2=0.000203 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.9234955 -2.8946745  3.0221488 -6.016279 ]]
Iteration 200 of 1000: loss=0.0683 " + "l1=0.0681" + "l2=0.00019 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.918717  -2.8918602  3.0200007 -6.011548 ]]
Iteration 300 of 1000: loss=0.0682 " + "l1=0.068" + "l2=0.000242 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.9116178 -2.888205   3.0170243 -6.0047026]]
Iteration 400 of 1000: loss=0.0682 " + "l1=0.0679" + "l2=0.0003 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.9044986 -2.8846927  3.0140643 -5.9979787]]
Iteration 500 of 1000: loss=0.0681 " + "l1=0.0678" + "l2=0.000342 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.8971171 -2.8812654  3.0110471 -5.991124 ]]
Iteration 600 of 1000: loss=0.0681 " + "l1=0.0677" + "l2=0.000443 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.889779  -2.8777292  3.0080338 -5.9844136]]
Iteration 700 of 1000: loss=0.0681 " + "l1=0.0676" + "l2=0.000552 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.8824706 -2.8742692  3.0050716 -5.9777737]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.687 " + "l1=0.687" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.9573276 -2.910026   3.0347888 -6.0492435]]
Iteration 100 of 1000: loss=0.661 " + "l1=0.646" + "l2=0.015 f=-0.483 shape=(1, 9000, 1)
logits [[ 3.6893919 -2.7730615  2.9297264 -5.7777653]]
Iteration 200 of 1000: loss=0.647 " + "l1=0.626" + "l2=0.0217 f=-0.478 shape=(1, 9000, 1)
logits [[ 3.555486  -2.7019777  2.8724947 -5.636591 ]]
Iteration 300 of 1000: loss=0.634 " + "l1=0.607" + "l2=0.0271 f=-0.476 shape=(1, 9000, 1)
logits [[ 3.4315584 -2.642395   2.8215272 -5.5141025]]
Iteration 400 of 1000: loss=0.622 " + "l1=0.589" + "l2=0.0325 f=-0.473 shape=(1, 9000, 1)
logits [[ 3.3113556 -2.581712   2.775395  -5.3985777]]
Iteration 500 of 1000: loss=0.611 " + "l1=0.573" + "l2=0.0381 f=-0.471 shape=(1, 9000, 1)
logits [[ 3.204726  -2.525196   2.7300608 -5.2930975]]
Iteration 600 of 1000: loss=0.602 " + "l1=0.56" + "l2=0.042 f=-0.47 shape=(1, 9000, 1)
logits [[ 3.123913  -2.4803522  2.691592  -5.213714 ]]
Iteration 700 of 1000: loss=0.594 " + "l1=0.548" + "l2=0.0462 f=-0.468 shape=(1, 9000, 1)
logits [[ 3.0415242 -2.433949   2.654141  -5.1323996]]
Iteration 800 of 1000: loss=0.585 " + "l1=0.533" + "l2=0.0518 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.9500024 -2.3771894  2.6122534 -5.037404 ]]
Iteration 900 of 1000: loss=0.574 " + "l1=0.516" + "l2=0.0585 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.8503692 -2.3080938  2.5620675 -4.9253607]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.87 " + "l1=6.87" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.9573276 -2.910026   3.0347888 -6.0492435]]
Iteration 100 of 1000: loss=4.35 " + "l1=3.32" + "l2=1.03 f=-0.433 shape=(1, 9000, 1)
logits [[ 1.823661  -1.4916245  1.828846  -3.894293 ]]
Iteration 200 of 1000: loss=3.73 " + "l1=2.86" + "l2=0.878 f=-0.44 shape=(1, 9000, 1)
logits [[ 1.6181958 -1.2377609  1.6184609 -3.7585597]]
Iteration 300 of 1000: loss=3.42 " + "l1=2.55" + "l2=0.869 f=-0.446 shape=(1, 9000, 1)
logits [[ 1.4555433 -1.0929625  1.4619871 -3.6081545]]
Iteration 400 of 1000: loss=3.19 " + "l1=2.24" + "l2=0.943 f=-0.457 shape=(1, 9000, 1)
logits [[ 1.2838395 -0.9514514  1.2932767 -3.4522738]]
Iteration 500 of 1000: loss=3.01 " + "l1=2.05" + "l2=0.961 f=-0.453 shape=(1, 9000, 1)
logits [[ 1.1741549  -0.86531466  1.1869799  -3.308393  ]]
Iteration 600 of 1000: loss=2.88 " + "l1=1.91" + "l2=0.972 f=-0.447 shape=(1, 9000, 1)
logits [[ 1.0752387 -0.7970949  1.1088876 -3.1764274]]
Iteration 700 of 1000: loss=2.75 " + "l1=1.73" + "l2=1.02 f=-0.441 shape=(1, 9000, 1)
logits [[ 0.9394633 -0.7099646  1.0225894 -3.0159311]]
Iteration 800 of 1000: loss=2.66 " + "l1=1.59" + "l2=1.06 f=-0.434 shape=(1, 9000, 1)
logits [[ 0.8003806 -0.6363264  0.9585138 -2.8602345]]
Iteration 900 of 1000: loss=2.52 " + "l1=1.41" + "l2=1.11 f=-0.428 shape=(1, 9000, 1)
logits [[ 0.6557923 -0.5185025  0.8899134 -2.7378855]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=68.7 " + "l1=68.7" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.9573276 -2.910026   3.0347888 -6.0492435]]
Iteration 100 of 1000: loss=13.2 " + "l1=0.901" + "l2=12.3 f=-0.434 shape=(1, 9000, 1)
logits [[-0.41336825  0.2655611   0.35563466 -1.942205  ]]
Iteration 200 of 1000: loss=7.81 " + "l1=0" + "l2=7.81 f=-0.505 shape=(1, 9000, 1)
logits [[-0.48287103  0.31534308  0.30491447 -2.1556907 ]]
Iteration 300 of 1000: loss=6.48 " + "l1=0" + "l2=6.48 f=-0.522 shape=(1, 9000, 1)
logits [[-0.4965556   0.31060076  0.30466464 -2.2066524 ]]
Iteration 400 of 1000: loss=5.81 " + "l1=0.063" + "l2=5.75 f=-0.526 shape=(1, 9000, 1)
logits [[-0.4899162   0.29872862  0.30503222 -2.2183688 ]]
Iteration 500 of 1000: loss=5.32 " + "l1=0" + "l2=5.32 f=-0.541 shape=(1, 9000, 1)
logits [[-0.5140602   0.3096094   0.29081172 -2.248935  ]]
Iteration 600 of 1000: loss=4.95 " + "l1=0" + "l2=4.95 f=-0.542 shape=(1, 9000, 1)
logits [[-0.50739235  0.3052928   0.29345277 -2.2595468 ]]
Iteration 700 of 1000: loss=4.67 " + "l1=0" + "l2=4.67 f=-0.542 shape=(1, 9000, 1)
logits [[-0.5150926   0.30495998  0.29704747 -2.2554348 ]]
Iteration 800 of 1000: loss=4.42 " + "l1=0" + "l2=4.42 f=-0.544 shape=(1, 9000, 1)
logits [[-0.5295461   0.3029685   0.30148682 -2.2501862 ]]
Iteration 900 of 1000: loss=4.29 " + "l1=0" + "l2=4.29 f=-0.546 shape=(1, 9000, 1)
logits [[-0.5685129   0.32556784  0.29941997 -2.2406223 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=37.8 " + "l1=37.8" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.9573276 -2.910026   3.0347888 -6.0492435]]
Iteration 100 of 1000: loss=12 " + "l1=5.14" + "l2=6.83 f=-0.432 shape=(1, 9000, 1)
logits [[ 0.29871884 -0.2492262   0.6850937  -2.4616034 ]]
Iteration 200 of 1000: loss=6.67 " + "l1=0" + "l2=6.67 f=-0.531 shape=(1, 9000, 1)
logits [[-0.4180324   0.30623126  0.2966183  -2.3090382 ]]
Iteration 300 of 1000: loss=5.37 " + "l1=0.02" + "l2=5.35 f=-0.539 shape=(1, 9000, 1)
logits [[-0.4679067   0.29090708  0.29453844 -2.2751937 ]]
Iteration 400 of 1000: loss=4.79 " + "l1=0.0206" + "l2=4.77 f=-0.542 shape=(1, 9000, 1)
logits [[-0.48167333  0.29775667  0.30150458 -2.286834  ]]
Iteration 500 of 1000: loss=4.48 " + "l1=0.114" + "l2=4.36 f=-0.544 shape=(1, 9000, 1)
logits [[-0.49029312  0.29266962  0.31344864 -2.2927413 ]]
Iteration 600 of 1000: loss=4.13 " + "l1=0" + "l2=4.13 f=-0.545 shape=(1, 9000, 1)
logits [[-0.5501943   0.31471837  0.31100425 -2.255747  ]]
Iteration 700 of 1000: loss=3.88 " + "l1=0.0198" + "l2=3.86 f=-0.549 shape=(1, 9000, 1)
logits [[-0.5631798   0.313717    0.31732145 -2.2620575 ]]
Iteration 800 of 1000: loss=3.66 " + "l1=0" + "l2=3.66 f=-0.553 shape=(1, 9000, 1)
logits [[-0.5849691   0.3298418   0.31744546 -2.2751114 ]]
Iteration 900 of 1000: loss=3.46 " + "l1=0.0419" + "l2=3.42 f=-0.555 shape=(1, 9000, 1)
logits [[-0.57643527  0.3264535   0.3340775  -2.3033586 ]]
--- 295.05646276474 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00923 " + "l1=0.00923" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.9573276 -2.910026   3.0347888 -6.0492435]]
Iteration 100 of 1000: loss=0.00913 " + "l1=0.00902" + "l2=0.00011 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.9350622 -2.907442   3.032723  -6.0286593]]
Iteration 200 of 1000: loss=0.0091 " + "l1=0.00902" + "l2=7.99e-05 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.9346745 -2.9070542  3.0327473 -6.0283084]]
Iteration 300 of 1000: loss=0.0091 " + "l1=0.00899" + "l2=0.000109 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.9318237 -2.9064443  3.0325007 -6.025766 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0923 " + "l1=0.0923" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.9573276 -2.910026   3.0347888 -6.0492435]]
Iteration 100 of 1000: loss=0.0839 " + "l1=0.0793" + "l2=0.00455 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.8176174 -2.8959036  3.024253  -5.9229684]]
Iteration 200 of 1000: loss=0.0808 " + "l1=0.075" + "l2=0.00583 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.7696943 -2.8877568  3.019903  -5.879718 ]]
Iteration 300 of 1000: loss=0.0781 " + "l1=0.071" + "l2=0.00703 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.7259877 -2.8806667  3.015674  -5.8392773]]
Iteration 400 of 1000: loss=0.0752 " + "l1=0.0669" + "l2=0.0083 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.6789494 -2.8712778  3.0098107 -5.7942767]]
Iteration 500 of 1000: loss=0.0727 " + "l1=0.0633" + "l2=0.00938 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.6354232 -2.8613908  3.002191  -5.7536144]]
Iteration 600 of 1000: loss=0.0702 " + "l1=0.0598" + "l2=0.0104 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.5929387 -2.8518739  2.9948816 -5.7129397]]
Iteration 700 of 1000: loss=0.0676 " + "l1=0.056" + "l2=0.0116 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.548267  -2.843415   2.9879453 -5.670359 ]]
Iteration 800 of 1000: loss=0.0649 " + "l1=0.0523" + "l2=0.0126 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.5047233 -2.8348994  2.9817247 -5.6291003]]
Iteration 900 of 1000: loss=0.0621 " + "l1=0.0484" + "l2=0.0136 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.4592533 -2.8227208  2.9748757 -5.586506 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.923 " + "l1=0.923" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.9573276 -2.910026   3.0347888 -6.0492435]]
Iteration 100 of 1000: loss=0.218 " + "l1=0.00138" + "l2=0.217 f=-0.492 shape=(1, 9000, 1)
logits [[ 2.9654095 -2.8005059  2.96403   -5.098461 ]]
Iteration 200 of 1000: loss=0.146 " + "l1=0.00268" + "l2=0.143 f=-0.489 shape=(1, 9000, 1)
logits [[ 2.9783313 -2.7942753  2.9756525 -5.114557 ]]
Iteration 300 of 1000: loss=0.115 " + "l1=0.00229" + "l2=0.112 f=-0.485 shape=(1, 9000, 1)
logits [[ 2.9761214 -2.7836607  2.9738333 -5.1054535]]
Iteration 400 of 1000: loss=0.0953 " + "l1=0" + "l2=0.0953 f=-0.483 shape=(1, 9000, 1)
logits [[ 2.9638262 -2.7733762  2.9657483 -5.087092 ]]
Iteration 500 of 1000: loss=0.0846 " + "l1=0" + "l2=0.0846 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.9427793 -2.7643294  2.9558873 -5.0596485]]
Iteration 600 of 1000: loss=0.0717 " + "l1=0" + "l2=0.0717 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.9437888 -2.7522624  2.9437957 -5.0575204]]
Iteration 700 of 1000: loss=0.0656 " + "l1=0.000283" + "l2=0.0653 f=-0.479 shape=(1, 9000, 1)
logits [[ 2.9367316 -2.7455034  2.9364488 -5.045592 ]]
Iteration 800 of 1000: loss=0.06 " + "l1=0" + "l2=0.06 f=-0.479 shape=(1, 9000, 1)
logits [[ 2.9295363 -2.740758   2.9306324 -5.0364976]]
Iteration 900 of 1000: loss=0.0574 " + "l1=0" + "l2=0.0574 f=-0.479 shape=(1, 9000, 1)
logits [[ 2.9191873 -2.7369952  2.9240553 -5.022745 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.507 " + "l1=0.507" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.9573276 -2.910026   3.0347888 -6.0492435]]
Iteration 100 of 1000: loss=0.258 " + "l1=0.128" + "l2=0.13 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.1924312 -2.8099868  2.9596503 -5.315981 ]]
Iteration 200 of 1000: loss=0.151 " + "l1=0.000613" + "l2=0.15 f=-0.489 shape=(1, 9000, 1)
logits [[ 2.9737678 -2.7892146  2.9726536 -5.1131935]]
Iteration 300 of 1000: loss=0.111 " + "l1=0.00156" + "l2=0.109 f=-0.483 shape=(1, 9000, 1)
logits [[ 2.9688265 -2.771747   2.965996  -5.0939717]]
Iteration 400 of 1000: loss=0.0894 " + "l1=0.00107" + "l2=0.0884 f=-0.478 shape=(1, 9000, 1)
logits [[ 2.948254  -2.747861   2.9463153 -5.0603395]]
Iteration 500 of 1000: loss=0.0759 " + "l1=0.00101" + "l2=0.0749 f=-0.477 shape=(1, 9000, 1)
logits [[ 2.936745  -2.7372196  2.9349055 -5.0440655]]
Iteration 600 of 1000: loss=0.0671 " + "l1=0" + "l2=0.0671 f=-0.476 shape=(1, 9000, 1)
logits [[ 2.9202344 -2.7233515  2.923782  -5.0260615]]
Iteration 700 of 1000: loss=0.0609 " + "l1=0" + "l2=0.0609 f=-0.476 shape=(1, 9000, 1)
logits [[ 2.9139955 -2.7172215  2.9174228 -5.0174603]]
Iteration 800 of 1000: loss=0.0566 " + "l1=0" + "l2=0.0566 f=-0.476 shape=(1, 9000, 1)
logits [[ 2.9052122 -2.7114093  2.9096737 -5.006151 ]]
Iteration 900 of 1000: loss=0.0533 " + "l1=0.00139" + "l2=0.0519 f=-0.476 shape=(1, 9000, 1)
logits [[ 2.9061828 -2.708948   2.903664  -5.0046544]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.3 " + "l1=0.3" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.9573276 -2.910026   3.0347888 -6.0492435]]
Iteration 100 of 1000: loss=0.215 " + "l1=0.168" + "l2=0.0465 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.5115006 -2.8532383  2.9935703 -5.6320376]]
Iteration 200 of 1000: loss=0.174 " + "l1=0.107" + "l2=0.0663 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.2968962 -2.8196273  2.9667242 -5.413213 ]]
Iteration 300 of 1000: loss=0.137 " + "l1=0.0588" + "l2=0.0784 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.1336093 -2.7825196  2.9526756 -5.267859 ]]
Iteration 400 of 1000: loss=0.107 " + "l1=0.0229" + "l2=0.0844 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.0167003 -2.7598844  2.946279  -5.15127  ]]
Iteration 500 of 1000: loss=0.0806 " + "l1=0.001" + "l2=0.0796 f=-0.479 shape=(1, 9000, 1)
logits [[ 2.9293492 -2.7257082  2.9262688 -5.047724 ]]
Iteration 600 of 1000: loss=0.0679 " + "l1=0" + "l2=0.0679 f=-0.476 shape=(1, 9000, 1)
logits [[ 2.9122493 -2.7100673  2.9166243 -5.024068 ]]
Iteration 700 of 1000: loss=0.0597 " + "l1=0.000991" + "l2=0.0587 f=-0.475 shape=(1, 9000, 1)
logits [[ 2.9143536 -2.7030756  2.9113038 -5.0228667]]
Iteration 800 of 1000: loss=0.0534 " + "l1=0.000724" + "l2=0.0527 f=-0.475 shape=(1, 9000, 1)
logits [[ 2.9068954 -2.696546   2.904668  -5.0139594]]
Iteration 900 of 1000: loss=0.0494 " + "l1=0.000408" + "l2=0.049 f=-0.475 shape=(1, 9000, 1)
logits [[ 2.9011683 -2.6924996  2.8999126 -5.009056 ]]
--- 274.5049378871918 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.1 " + "l1=0.1" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.9573276 -2.910026   3.0347888 -6.0492435]]
Iteration 100 of 1000: loss=0.0994 " + "l1=0.099" + "l2=0.000404 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.9090784 -2.89781    3.0183878 -5.9933667]]
Iteration 200 of 1000: loss=0.0992 " + "l1=0.0988" + "l2=0.000423 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.899385  -2.894694   3.0146077 -5.98235  ]]
Iteration 300 of 1000: loss=0.0991 " + "l1=0.0986" + "l2=0.000509 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.887665  -2.8910885  3.0101848 -5.969036 ]]
Iteration 400 of 1000: loss=0.0989 " + "l1=0.0983" + "l2=0.000618 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.8759089 -2.8876276  3.0058467 -5.955593 ]]
Iteration 500 of 1000: loss=0.0988 " + "l1=0.0981" + "l2=0.000772 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.8641443 -2.8841429  3.0016153 -5.942165 ]]
Iteration 600 of 1000: loss=0.0988 " + "l1=0.0978" + "l2=0.000941 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.8534932 -2.8811505  2.9977603 -5.9299088]]
Iteration 700 of 1000: loss=0.0986 " + "l1=0.0976" + "l2=0.00103 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.8431907 -2.8782284  2.9939454 -5.917966 ]]
Iteration 800 of 1000: loss=0.0985 " + "l1=0.0974" + "l2=0.0011 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.8329883 -2.8753457  2.9902155 -5.9061337]]
Iteration 900 of 1000: loss=0.0985 " + "l1=0.0972" + "l2=0.00129 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.823094  -2.8723311  2.9866347 -5.8946114]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1 " + "l1=1" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.9573276 -2.910026   3.0347888 -6.0492435]]
Iteration 100 of 1000: loss=0.94 " + "l1=0.904" + "l2=0.0362 f=-0.476 shape=(1, 9000, 1)
logits [[ 3.5168552 -2.7729042  2.8764021 -5.5255394]]
Iteration 200 of 1000: loss=0.911 " + "l1=0.862" + "l2=0.049 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.3225806 -2.7042124  2.802749  -5.2988963]]
Iteration 300 of 1000: loss=0.886 " + "l1=0.831" + "l2=0.0552 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.1788719 -2.6484509  2.7497869 -5.1323767]]
Iteration 400 of 1000: loss=0.863 " + "l1=0.797" + "l2=0.0663 f=-0.452 shape=(1, 9000, 1)
logits [[ 3.0253577 -2.580488   2.690007  -4.9441648]]
Iteration 500 of 1000: loss=0.836 " + "l1=0.756" + "l2=0.0803 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.8486083 -2.4953697  2.618111  -4.70954  ]]
Iteration 600 of 1000: loss=0.812 " + "l1=0.723" + "l2=0.0897 f=-0.425 shape=(1, 9000, 1)
logits [[ 2.7030525 -2.4554615  2.5752869 -4.52203  ]]
Iteration 700 of 1000: loss=0.79 " + "l1=0.692" + "l2=0.0986 f=-0.415 shape=(1, 9000, 1)
logits [[ 2.5785193 -2.4305506  2.5307076 -4.337157 ]]
Iteration 800 of 1000: loss=0.773 " + "l1=0.669" + "l2=0.104 f=-0.408 shape=(1, 9000, 1)
logits [[ 2.4917352 -2.4166236  2.4913363 -4.20011  ]]
Iteration 900 of 1000: loss=0.759 " + "l1=0.657" + "l2=0.102 f=-0.406 shape=(1, 9000, 1)
logits [[ 2.4473605 -2.400366   2.447817  -4.118324 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10 " + "l1=10" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.9573276 -2.910026   3.0347888 -6.0492435]]
Iteration 100 of 1000: loss=5.87 " + "l1=4.19" + "l2=1.68 f=-0.321 shape=(1, 9000, 1)
logits [[ 1.3632482 -1.8228874  1.682449  -2.5065923]]
Iteration 200 of 1000: loss=4.82 " + "l1=2.91" + "l2=1.91 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.86099565 -1.6599451   1.3202021  -1.5889995 ]]
Iteration 300 of 1000: loss=4.04 " + "l1=2.18" + "l2=1.87 f=-0.242 shape=(1, 9000, 1)
logits [[ 0.62064826 -1.6273434   1.1063406  -1.0693504 ]]
Iteration 400 of 1000: loss=3.11 " + "l1=0.997" + "l2=2.11 f=-0.219 shape=(1, 9000, 1)
logits [[ 0.22936785 -1.5690169   0.731495   -0.26592854]]
Iteration 500 of 1000: loss=2.08 " + "l1=0.0185" + "l2=2.06 f=-0.191 shape=(1, 9000, 1)
logits [[-0.18915024 -1.3957748   0.41961306  0.4010728 ]]
Iteration 600 of 1000: loss=1.69 " + "l1=0.0395" + "l2=1.65 f=-0.183 shape=(1, 9000, 1)
logits [[-0.18688363 -1.3685983   0.4307796   0.3912527 ]]
Iteration 700 of 1000: loss=1.45 " + "l1=0.0093" + "l2=1.44 f=-0.174 shape=(1, 9000, 1)
logits [[-0.20090255 -1.3414714   0.42794976  0.41864905]]
Iteration 800 of 1000: loss=1.3 " + "l1=0.0074" + "l2=1.29 f=-0.167 shape=(1, 9000, 1)
logits [[-0.201902   -1.3271464   0.43358797  0.42619076]]
Iteration 900 of 1000: loss=1.19 " + "l1=0.0153" + "l2=1.17 f=-0.163 shape=(1, 9000, 1)
logits [[-0.19244218 -1.3180778   0.43719438  0.42193618]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.5 " + "l1=5.5" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.9573276 -2.910026   3.0347888 -6.0492435]]
Iteration 100 of 1000: loss=3.92 " + "l1=3.22" + "l2=0.699 f=-0.378 shape=(1, 9000, 1)
logits [[ 2.1504881 -2.2619712  2.2226305 -3.625051 ]]
Iteration 200 of 1000: loss=3.4 " + "l1=2.57" + "l2=0.833 f=-0.343 shape=(1, 9000, 1)
logits [[ 1.6400589 -1.8744984  1.7694995 -2.9071116]]
Iteration 300 of 1000: loss=3.06 " + "l1=2.25" + "l2=0.81 f=-0.325 shape=(1, 9000, 1)
logits [[ 1.3941866 -1.744664   1.5690459 -2.5180457]]
Iteration 400 of 1000: loss=2.7 " + "l1=1.84" + "l2=0.86 f=-0.284 shape=(1, 9000, 1)
logits [[ 1.1387438 -1.6354703  1.3512179 -1.9919116]]
Iteration 500 of 1000: loss=2.41 " + "l1=1.57" + "l2=0.841 f=-0.25 shape=(1, 9000, 1)
logits [[ 0.9908978 -1.6137052  1.2399344 -1.6154637]]
Iteration 600 of 1000: loss=2.04 " + "l1=1.09" + "l2=0.941 f=-0.207 shape=(1, 9000, 1)
logits [[ 0.67392135 -1.5675545   1.0267562  -0.9629355 ]]
Iteration 700 of 1000: loss=1.61 " + "l1=0.608" + "l2=1 f=-0.187 shape=(1, 9000, 1)
logits [[ 0.2624047  -1.4215099   0.7595146  -0.34646457]]
Iteration 800 of 1000: loss=1.33 " + "l1=0.358" + "l2=0.969 f=-0.164 shape=(1, 9000, 1)
logits [[ 0.07217676 -1.3373059   0.63023263 -0.02117888]]
Iteration 900 of 1000: loss=1.15 " + "l1=0.185" + "l2=0.961 f=-0.153 shape=(1, 9000, 1)
logits [[-0.03830335 -1.3115274   0.5372755   0.20143375]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=7.76 " + "l1=7.76" + "l2=0 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.9573276 -2.910026   3.0347888 -6.0492435]]
Iteration 100 of 1000: loss=4.98 " + "l1=3.8" + "l2=1.18 f=-0.346 shape=(1, 9000, 1)
logits [[ 1.7155957 -2.00074    1.9004508 -3.0008118]]
Iteration 200 of 1000: loss=4.25 " + "l1=2.98" + "l2=1.27 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.2727671 -1.760256   1.5578597 -2.2913003]]
Iteration 300 of 1000: loss=3.66 " + "l1=2.37" + "l2=1.29 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.97477067 -1.6557139   1.2942069  -1.7611587 ]]
Iteration 400 of 1000: loss=3.09 " + "l1=1.75" + "l2=1.34 f=-0.255 shape=(1, 9000, 1)
logits [[ 0.66702485 -1.6165007   1.0932631  -1.1624423 ]]
Iteration 500 of 1000: loss=2.41 " + "l1=0.915" + "l2=1.5 f=-0.212 shape=(1, 9000, 1)
logits [[ 0.2940985  -1.547069    0.79311055 -0.38731432]]
Iteration 600 of 1000: loss=1.66 " + "l1=0.101" + "l2=1.56 f=-0.19 shape=(1, 9000, 1)
logits [[-0.16817227 -1.3686978   0.45443738  0.32440132]]
Iteration 700 of 1000: loss=1.33 " + "l1=0.01" + "l2=1.32 f=-0.174 shape=(1, 9000, 1)
logits [[-0.21487913 -1.3322268   0.4329501   0.41999137]]
Iteration 800 of 1000: loss=1.17 " + "l1=0" + "l2=1.17 f=-0.166 shape=(1, 9000, 1)
logits [[-0.22097336 -1.3233129   0.43623865  0.44593784]]
Iteration 900 of 1000: loss=1.07 " + "l1=0.0091" + "l2=1.06 f=-0.163 shape=(1, 9000, 1)
logits [[-0.20358068 -1.3244331   0.444873    0.4331343 ]]
--- 314.245836019516 seconds ---
Adv result:3
Loading record A00733
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0373 " + "l1=0.0373" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.2695343 -1.4600084  1.7266325 -4.719603 ]]
Iteration 100 of 1000: loss=0.0367 " + "l1=0.0363" + "l2=0.000369 f=-0.544 shape=(1, 9000, 1)
logits [[ 2.2191567 -1.4158074  1.6953522 -4.674307 ]]
Iteration 200 of 1000: loss=0.0366 " + "l1=0.0362" + "l2=0.000397 f=-0.544 shape=(1, 9000, 1)
logits [[ 2.2096024 -1.4064374  1.6881487 -4.6658244]]
Iteration 300 of 1000: loss=0.0364 " + "l1=0.0359" + "l2=0.000476 f=-0.543 shape=(1, 9000, 1)
logits [[ 2.197988  -1.3954662  1.6801372 -4.6559377]]
Iteration 400 of 1000: loss=0.0363 " + "l1=0.0357" + "l2=0.00061 f=-0.543 shape=(1, 9000, 1)
logits [[ 2.1866393 -1.385254   1.6727726 -4.6466002]]
Iteration 500 of 1000: loss=0.0362 " + "l1=0.0355" + "l2=0.000716 f=-0.543 shape=(1, 9000, 1)
logits [[ 2.1764512 -1.3763936  1.666494  -4.6382985]]
Iteration 600 of 1000: loss=0.0362 " + "l1=0.0354" + "l2=0.000883 f=-0.543 shape=(1, 9000, 1)
logits [[ 2.1671062 -1.3685598  1.6610581 -4.630831 ]]
Iteration 700 of 1000: loss=0.0362 " + "l1=0.0352" + "l2=0.000968 f=-0.543 shape=(1, 9000, 1)
logits [[ 2.1580565 -1.3614671  1.6561636 -4.623561 ]]
Iteration 800 of 1000: loss=0.0361 " + "l1=0.035" + "l2=0.00102 f=-0.543 shape=(1, 9000, 1)
logits [[ 2.149141  -1.3550358  1.65181   -4.6166587]]
Iteration 900 of 1000: loss=0.0362 " + "l1=0.0349" + "l2=0.0013 f=-0.543 shape=(1, 9000, 1)
logits [[ 2.1408129 -1.3493676  1.647911  -4.609983 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.373 " + "l1=0.373" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.2695343 -1.4600084  1.7266325 -4.719603 ]]
Iteration 100 of 1000: loss=0.321 " + "l1=0.293" + "l2=0.0277 f=-0.54 shape=(1, 9000, 1)
logits [[ 1.8214387 -1.1080253  1.4723817 -4.3474846]]
Iteration 200 of 1000: loss=0.291 " + "l1=0.244" + "l2=0.0476 f=-0.551 shape=(1, 9000, 1)
logits [[ 1.5260195  -0.90969896  1.3345264  -4.1530848 ]]
Iteration 300 of 1000: loss=0.259 " + "l1=0.189" + "l2=0.0705 f=-0.568 shape=(1, 9000, 1)
logits [[ 1.1948345  -0.69101405  1.1888071  -3.9628677 ]]
Iteration 400 of 1000: loss=0.236 " + "l1=0.164" + "l2=0.0726 f=-0.571 shape=(1, 9000, 1)
logits [[ 1.0888001 -0.5488273  1.0903157 -3.9156854]]
Iteration 500 of 1000: loss=0.218 " + "l1=0.141" + "l2=0.0772 f=-0.571 shape=(1, 9000, 1)
logits [[ 1.0064275  -0.39905524  1.0076045  -3.8989644 ]]
Iteration 600 of 1000: loss=0.204 " + "l1=0.125" + "l2=0.0789 f=-0.573 shape=(1, 9000, 1)
logits [[ 0.92957926 -0.30482197  0.9417247  -3.8586912 ]]
Iteration 700 of 1000: loss=0.189 " + "l1=0.109" + "l2=0.0799 f=-0.581 shape=(1, 9000, 1)
logits [[ 0.81032443 -0.21021824  0.88357705 -3.8057852 ]]
Iteration 800 of 1000: loss=0.173 " + "l1=0.0907" + "l2=0.0821 f=-0.598 shape=(1, 9000, 1)
logits [[ 0.6124953  -0.09392051  0.8134112  -3.72459   ]]
Iteration 900 of 1000: loss=0.156 " + "l1=0.0705" + "l2=0.0857 f=-0.613 shape=(1, 9000, 1)
logits [[ 0.38564152  0.03075309  0.7353814  -3.6027637 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.73 " + "l1=3.73" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.2695343 -1.4600084  1.7266325 -4.719603 ]]
Iteration 100 of 1000: loss=0.705 " + "l1=0" + "l2=0.705 f=-0.595 shape=(1, 9000, 1)
logits [[-0.04938427  0.4422691   0.44013605 -3.2118404 ]]
Iteration 200 of 1000: loss=0.424 " + "l1=0" + "l2=0.424 f=-0.612 shape=(1, 9000, 1)
logits [[-0.1069021   0.45780206  0.44916102 -3.2491825 ]]
Iteration 300 of 1000: loss=0.332 " + "l1=0" + "l2=0.332 f=-0.627 shape=(1, 9000, 1)
logits [[-0.16075097  0.46267065  0.43754673 -3.2489686 ]]
Iteration 400 of 1000: loss=0.289 " + "l1=0" + "l2=0.289 f=-0.632 shape=(1, 9000, 1)
logits [[-0.18586653  0.45359448  0.41495624 -3.20897   ]]
Iteration 500 of 1000: loss=0.254 " + "l1=0" + "l2=0.254 f=-0.631 shape=(1, 9000, 1)
logits [[-0.17658274  0.42768162  0.40090838 -3.176559  ]]
Iteration 600 of 1000: loss=0.227 " + "l1=0" + "l2=0.227 f=-0.631 shape=(1, 9000, 1)
logits [[-0.18616018  0.4091059   0.391446   -3.139191  ]]
Iteration 700 of 1000: loss=0.207 " + "l1=0" + "l2=0.207 f=-0.635 shape=(1, 9000, 1)
logits [[-0.22302215  0.41091043  0.37053505 -3.09782   ]]
Iteration 800 of 1000: loss=0.182 " + "l1=0" + "l2=0.182 f=-0.633 shape=(1, 9000, 1)
logits [[-0.21669038  0.38313636  0.36111316 -3.0611696 ]]
Iteration 900 of 1000: loss=0.162 " + "l1=0.00335" + "l2=0.159 f=-0.631 shape=(1, 9000, 1)
logits [[-0.20769154  0.3596142   0.36296484 -3.0386395 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.05 " + "l1=2.05" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.2695343 -1.4600084  1.7266325 -4.719603 ]]
Iteration 100 of 1000: loss=0.73 " + "l1=0.261" + "l2=0.469 f=-0.58 shape=(1, 9000, 1)
logits [[ 0.4148347   0.15765907  0.63144416 -3.5242712 ]]
Iteration 200 of 1000: loss=0.374 " + "l1=0.00853" + "l2=0.365 f=-0.623 shape=(1, 9000, 1)
logits [[-0.1036801   0.45518374  0.47069955 -3.315948  ]]
Iteration 300 of 1000: loss=0.286 " + "l1=0.00105" + "l2=0.285 f=-0.636 shape=(1, 9000, 1)
logits [[-0.14890386  0.4366659   0.4385779  -3.271832  ]]
Iteration 400 of 1000: loss=0.242 " + "l1=0" + "l2=0.242 f=-0.639 shape=(1, 9000, 1)
logits [[-0.1672242   0.41952127  0.4182575  -3.2245593 ]]
Iteration 500 of 1000: loss=0.21 " + "l1=0" + "l2=0.21 f=-0.641 shape=(1, 9000, 1)
logits [[-0.1866694   0.4084759   0.40090445 -3.1869287 ]]
Iteration 600 of 1000: loss=0.18 " + "l1=0" + "l2=0.18 f=-0.641 shape=(1, 9000, 1)
logits [[-0.20362139  0.38668424  0.38512892 -3.1328192 ]]
Iteration 700 of 1000: loss=0.157 " + "l1=0" + "l2=0.157 f=-0.639 shape=(1, 9000, 1)
logits [[-0.22948684  0.3759049   0.37212744 -3.0753345 ]]
Iteration 800 of 1000: loss=0.142 " + "l1=0" + "l2=0.142 f=-0.639 shape=(1, 9000, 1)
logits [[-0.2651762   0.38261968  0.3601935  -3.0324066 ]]
Iteration 900 of 1000: loss=0.132 " + "l1=0.00853" + "l2=0.124 f=-0.638 shape=(1, 9000, 1)
logits [[-0.26029125  0.358387    0.37389234 -3.0231843 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.21 " + "l1=1.21" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.2695343 -1.4600084  1.7266325 -4.719603 ]]
Iteration 100 of 1000: loss=0.637 " + "l1=0.414" + "l2=0.223 f=-0.564 shape=(1, 9000, 1)
logits [[ 0.93665296 -0.32658148  0.94665605 -3.8142388 ]]
Iteration 200 of 1000: loss=0.42 " + "l1=0.124" + "l2=0.296 f=-0.603 shape=(1, 9000, 1)
logits [[ 0.2619984   0.23411827  0.61669546 -3.5250669 ]]
Iteration 300 of 1000: loss=0.279 " + "l1=0.00296" + "l2=0.276 f=-0.64 shape=(1, 9000, 1)
logits [[-0.14960764  0.4333433   0.44243863 -3.2850628 ]]
Iteration 400 of 1000: loss=0.226 " + "l1=0" + "l2=0.226 f=-0.648 shape=(1, 9000, 1)
logits [[-0.20541295  0.42667958  0.41724455 -3.229679  ]]
Iteration 500 of 1000: loss=0.184 " + "l1=0" + "l2=0.184 f=-0.648 shape=(1, 9000, 1)
logits [[-0.23242113  0.4024826   0.39940163 -3.1630647 ]]
Iteration 600 of 1000: loss=0.156 " + "l1=0.000635" + "l2=0.155 f=-0.649 shape=(1, 9000, 1)
logits [[-0.26433542  0.38837457  0.39032727 -3.1086328 ]]
Iteration 700 of 1000: loss=0.138 " + "l1=0.00296" + "l2=0.135 f=-0.648 shape=(1, 9000, 1)
logits [[-0.28586987  0.38026595  0.38938358 -3.0754464 ]]
Iteration 800 of 1000: loss=0.122 " + "l1=0" + "l2=0.122 f=-0.648 shape=(1, 9000, 1)
logits [[-0.32952115  0.39583722  0.38971335 -3.0481143 ]]
Iteration 900 of 1000: loss=0.111 " + "l1=0.000205" + "l2=0.111 f=-0.649 shape=(1, 9000, 1)
logits [[-0.35000458  0.39631587  0.39694813 -3.0382478 ]]
--- 308.9952952861786 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00543 " + "l1=0.00543" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.2695343 -1.4600084  1.7266325 -4.719603 ]]
Iteration 100 of 1000: loss=0.00526 " + "l1=0.00509" + "l2=0.000167 f=-0.547 shape=(1, 9000, 1)
logits [[ 2.2417245 -1.464311   1.7322736 -4.6995378]]
Iteration 200 of 1000: loss=0.00522 " + "l1=0.00508" + "l2=0.000136 f=-0.548 shape=(1, 9000, 1)
logits [[ 2.2412498 -1.4652945  1.7330548 -4.700004 ]]
Iteration 300 of 1000: loss=0.00521 " + "l1=0.00504" + "l2=0.000166 f=-0.548 shape=(1, 9000, 1)
logits [[ 2.2382684 -1.4664508  1.734213  -4.6984305]]
Iteration 400 of 1000: loss=0.00517 " + "l1=0.00499" + "l2=0.000177 f=-0.548 shape=(1, 9000, 1)
logits [[ 2.234667  -1.4674278  1.7352953 -4.696326 ]]
Iteration 500 of 1000: loss=0.0052 " + "l1=0.00495" + "l2=0.000253 f=-0.549 shape=(1, 9000, 1)
logits [[ 2.2309537 -1.4684184  1.7363979 -4.6940165]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0543 " + "l1=0.0543" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.2695343 -1.4600084  1.7266325 -4.719603 ]]
Iteration 100 of 1000: loss=0.0399 " + "l1=0.0324" + "l2=0.00747 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.0917637 -1.4950597  1.7677655 -4.5893006]]
Iteration 200 of 1000: loss=0.0343 " + "l1=0.0236" + "l2=0.0107 f=-0.563 shape=(1, 9000, 1)
logits [[ 2.028104  -1.5145607  1.7917849 -4.557052 ]]
Iteration 300 of 1000: loss=0.0287 " + "l1=0.0144" + "l2=0.0143 f=-0.571 shape=(1, 9000, 1)
logits [[ 1.9619225 -1.5403918  1.8177801 -4.5227203]]
Iteration 400 of 1000: loss=0.0211 " + "l1=0.00158" + "l2=0.0195 f=-0.583 shape=(1, 9000, 1)
logits [[ 1.8882622 -1.5951307  1.8724244 -4.497104 ]]
Iteration 500 of 1000: loss=0.0163 " + "l1=0.000148" + "l2=0.0161 f=-0.587 shape=(1, 9000, 1)
logits [[ 1.8856381 -1.6096221  1.8841538 -4.509132 ]]
Iteration 600 of 1000: loss=0.0138 " + "l1=0.000136" + "l2=0.0136 f=-0.588 shape=(1, 9000, 1)
logits [[ 1.8902752 -1.6176828  1.8889127 -4.515259 ]]
Iteration 700 of 1000: loss=0.0122 " + "l1=0.000136" + "l2=0.0121 f=-0.589 shape=(1, 9000, 1)
logits [[ 1.8908194 -1.6204545  1.8894571 -4.5148854]]
Iteration 800 of 1000: loss=0.0108 " + "l1=3.56e-05" + "l2=0.0107 f=-0.589 shape=(1, 9000, 1)
logits [[ 1.8876348 -1.6190969  1.887279  -4.5109415]]
Iteration 900 of 1000: loss=0.00978 " + "l1=0" + "l2=0.00978 f=-0.588 shape=(1, 9000, 1)
logits [[ 1.8836741 -1.6155541  1.8837031 -4.50507  ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0299 " + "l1=0.0299" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.2695343 -1.4600084  1.7266325 -4.719603 ]]
Iteration 100 of 1000: loss=0.0254 " + "l1=0.023" + "l2=0.00238 f=-0.552 shape=(1, 9000, 1)
logits [[ 2.1679575 -1.4807085  1.7498225 -4.6441035]]
Iteration 200 of 1000: loss=0.0239 " + "l1=0.0207" + "l2=0.00314 f=-0.555 shape=(1, 9000, 1)
logits [[ 2.1388617 -1.4923333  1.7620515 -4.6301203]]
Iteration 300 of 1000: loss=0.0225 " + "l1=0.0187" + "l2=0.0038 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.1129818 -1.5026822  1.7721493 -4.6152515]]
Iteration 400 of 1000: loss=0.0213 " + "l1=0.0169" + "l2=0.00442 f=-0.561 shape=(1, 9000, 1)
logits [[ 2.0878756 -1.511119   1.7809362 -4.6022716]]
Iteration 500 of 1000: loss=0.02 " + "l1=0.015" + "l2=0.00504 f=-0.564 shape=(1, 9000, 1)
logits [[ 2.0622723 -1.5197855  1.7899386 -4.588669 ]]
Iteration 600 of 1000: loss=0.0187 " + "l1=0.013" + "l2=0.00569 f=-0.567 shape=(1, 9000, 1)
logits [[ 2.03621   -1.5277159  1.7994229 -4.5742574]]
Iteration 700 of 1000: loss=0.0173 " + "l1=0.0109" + "l2=0.00643 f=-0.57 shape=(1, 9000, 1)
logits [[ 2.009788  -1.5403129  1.8112434 -4.5596995]]
Iteration 800 of 1000: loss=0.0159 " + "l1=0.00856" + "l2=0.00737 f=-0.574 shape=(1, 9000, 1)
logits [[ 1.9830713 -1.5569929  1.827492  -4.548296 ]]
Iteration 900 of 1000: loss=0.0141 " + "l1=0.00595" + "l2=0.00812 f=-0.578 shape=(1, 9000, 1)
logits [[ 1.9550732 -1.577121   1.8469524 -4.537864 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0421 " + "l1=0.0421" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.2695343 -1.4600084  1.7266325 -4.719603 ]]
Iteration 100 of 1000: loss=0.0333 " + "l1=0.0289" + "l2=0.00448 f=-0.554 shape=(1, 9000, 1)
logits [[ 2.1316445 -1.4889452  1.7593516 -4.6190734]]
Iteration 200 of 1000: loss=0.0302 " + "l1=0.0241" + "l2=0.00618 f=-0.559 shape=(1, 9000, 1)
logits [[ 2.0878866 -1.5061641  1.7775333 -4.5962334]]
Iteration 300 of 1000: loss=0.0273 " + "l1=0.0197" + "l2=0.00768 f=-0.564 shape=(1, 9000, 1)
logits [[ 2.0459206 -1.5177974  1.7921613 -4.5751734]]
Iteration 400 of 1000: loss=0.0245 " + "l1=0.0152" + "l2=0.00928 f=-0.569 shape=(1, 9000, 1)
logits [[ 2.003961  -1.5336064  1.8082329 -4.554957 ]]
Iteration 500 of 1000: loss=0.0209 " + "l1=0.0091" + "l2=0.0118 f=-0.576 shape=(1, 9000, 1)
logits [[ 1.956846  -1.5656589  1.8394793 -4.5337324]]
Iteration 600 of 1000: loss=0.0167 " + "l1=0.0023" + "l2=0.0144 f=-0.583 shape=(1, 9000, 1)
logits [[ 1.9052527 -1.6035591  1.8756224 -4.510513 ]]
Iteration 700 of 1000: loss=0.0136 " + "l1=0" + "l2=0.0136 f=-0.588 shape=(1, 9000, 1)
logits [[ 1.8877294 -1.6173184  1.8886673 -4.509271 ]]
Iteration 800 of 1000: loss=0.0121 " + "l1=0" + "l2=0.0121 f=-0.588 shape=(1, 9000, 1)
logits [[ 1.887428  -1.6197759  1.8891166 -4.509564 ]]
Iteration 900 of 1000: loss=0.0107 " + "l1=2.52e-05" + "l2=0.0106 f=-0.588 shape=(1, 9000, 1)
logits [[ 1.8863254 -1.6172998  1.8859999 -4.5075507]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.036 " + "l1=0.036" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.2695343 -1.4600084  1.7266325 -4.719603 ]]
Iteration 100 of 1000: loss=0.0295 " + "l1=0.0261" + "l2=0.00337 f=-0.553 shape=(1, 9000, 1)
logits [[ 2.1490817 -1.484796   1.7545383 -4.6313324]]
Iteration 200 of 1000: loss=0.0273 " + "l1=0.0228" + "l2=0.00445 f=-0.557 shape=(1, 9000, 1)
logits [[ 2.1142702 -1.4994498  1.7696745 -4.6139274]]
Iteration 300 of 1000: loss=0.0253 " + "l1=0.0198" + "l2=0.00551 f=-0.561 shape=(1, 9000, 1)
logits [[ 2.0811992 -1.5113845  1.7821639 -4.5969987]]
Iteration 400 of 1000: loss=0.0233 " + "l1=0.0168" + "l2=0.00655 f=-0.565 shape=(1, 9000, 1)
logits [[ 2.0464842 -1.520388   1.7934753 -4.5783377]]
Iteration 500 of 1000: loss=0.0213 " + "l1=0.0138" + "l2=0.00747 f=-0.569 shape=(1, 9000, 1)
logits [[ 2.0161757 -1.5344585  1.8073226 -4.5631795]]
Iteration 600 of 1000: loss=0.019 " + "l1=0.01" + "l2=0.00892 f=-0.574 shape=(1, 9000, 1)
logits [[ 1.9804726 -1.5569376  1.8289032 -4.5495563]]
Iteration 700 of 1000: loss=0.0162 " + "l1=0.00522" + "l2=0.011 f=-0.581 shape=(1, 9000, 1)
logits [[ 1.9390632 -1.5893071  1.8602736 -4.5323   ]]
Iteration 800 of 1000: loss=0.0137 " + "l1=0.00125" + "l2=0.0124 f=-0.586 shape=(1, 9000, 1)
logits [[ 1.902177  -1.6124502  1.883335  -4.515131 ]]
Iteration 900 of 1000: loss=0.0114 " + "l1=1.65e-05" + "l2=0.0114 f=-0.588 shape=(1, 9000, 1)
logits [[ 1.8889791 -1.6193038  1.8887302 -4.508633 ]]
--- 285.6384494304657 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0699 " + "l1=0.0699" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.2695343 -1.4600084  1.7266325 -4.719603 ]]
Iteration 100 of 1000: loss=0.069 " + "l1=0.0684" + "l2=0.000554 f=-0.542 shape=(1, 9000, 1)
logits [[ 2.2045472 -1.4328055  1.6986148 -4.638753 ]]
Iteration 200 of 1000: loss=0.0687 " + "l1=0.0681" + "l2=0.000614 f=-0.541 shape=(1, 9000, 1)
logits [[ 2.190884  -1.4257874  1.6915293 -4.6224866]]
Iteration 300 of 1000: loss=0.0685 " + "l1=0.0678" + "l2=0.000734 f=-0.541 shape=(1, 9000, 1)
logits [[ 2.1751397 -1.4181837  1.6836125 -4.603522 ]]
Iteration 400 of 1000: loss=0.0684 " + "l1=0.0675" + "l2=0.000908 f=-0.54 shape=(1, 9000, 1)
logits [[ 2.1604664 -1.411619   1.6764339 -4.5855103]]
Iteration 500 of 1000: loss=0.0682 " + "l1=0.0671" + "l2=0.00106 f=-0.539 shape=(1, 9000, 1)
logits [[ 2.1464713 -1.405568   1.6698128 -4.568176 ]]
Iteration 600 of 1000: loss=0.068 " + "l1=0.0669" + "l2=0.00118 f=-0.539 shape=(1, 9000, 1)
logits [[ 2.1335924 -1.400553   1.6642096 -4.552162 ]]
Iteration 700 of 1000: loss=0.0679 " + "l1=0.0666" + "l2=0.0013 f=-0.538 shape=(1, 9000, 1)
logits [[ 2.1218176 -1.3961331  1.6594206 -4.5375395]]
Iteration 800 of 1000: loss=0.0679 " + "l1=0.0663" + "l2=0.00151 f=-0.538 shape=(1, 9000, 1)
logits [[ 2.1106374 -1.3918369  1.6548887 -4.5237746]]
Iteration 900 of 1000: loss=0.0677 " + "l1=0.0661" + "l2=0.00158 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.09985   -1.3877114  1.6505553 -4.5103526]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.699 " + "l1=0.699" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.2695343 -1.4600084  1.7266325 -4.719603 ]]
Iteration 100 of 1000: loss=0.613 " + "l1=0.566" + "l2=0.0471 f=-0.526 shape=(1, 9000, 1)
logits [[ 1.6526711 -1.2142149  1.467552  -4.008137 ]]
Iteration 200 of 1000: loss=0.568 " + "l1=0.5" + "l2=0.0678 f=-0.524 shape=(1, 9000, 1)
logits [[ 1.3260156 -1.0680562  1.3248069 -3.6773882]]
Iteration 300 of 1000: loss=0.541 " + "l1=0.471" + "l2=0.0695 f=-0.516 shape=(1, 9000, 1)
logits [[ 1.207746  -0.9801003  1.2093956 -3.5017247]]
Iteration 400 of 1000: loss=0.52 " + "l1=0.445" + "l2=0.0748 f=-0.509 shape=(1, 9000, 1)
logits [[ 1.1053011  -0.90398765  1.1083776  -3.346124  ]]
Iteration 500 of 1000: loss=0.503 " + "l1=0.424" + "l2=0.0783 f=-0.505 shape=(1, 9000, 1)
logits [[ 1.0215855  -0.85171616  1.0268751  -3.2172124 ]]
Iteration 600 of 1000: loss=0.487 " + "l1=0.406" + "l2=0.0807 f=-0.503 shape=(1, 9000, 1)
logits [[ 0.9349018  -0.80889004  0.96155787 -3.0985863 ]]
Iteration 700 of 1000: loss=0.471 " + "l1=0.386" + "l2=0.0846 f=-0.504 shape=(1, 9000, 1)
logits [[ 0.8214597 -0.7522987  0.8875187 -2.9724643]]
Iteration 800 of 1000: loss=0.454 " + "l1=0.367" + "l2=0.0869 f=-0.506 shape=(1, 9000, 1)
logits [[ 0.7081804 -0.6936846  0.8139191 -2.8541436]]
Iteration 900 of 1000: loss=0.434 " + "l1=0.34" + "l2=0.0932 f=-0.516 shape=(1, 9000, 1)
logits [[ 0.54568183 -0.60909456  0.70150614 -2.7026494 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.99 " + "l1=6.99" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.2695343 -1.4600084  1.7266325 -4.719603 ]]
Iteration 100 of 1000: loss=2.44 " + "l1=0.705" + "l2=1.73 f=-0.457 shape=(1, 9000, 1)
logits [[-0.99178475 -0.04073441 -0.04846798 -0.7455731 ]]
Iteration 200 of 1000: loss=1.47 " + "l1=0.00699" + "l2=1.46 f=-0.41 shape=(1, 9000, 1)
logits [[-1.1775593  -0.14537756 -0.16357444 -0.15236303]]
Iteration 300 of 1000: loss=1.19 " + "l1=0.00342" + "l2=1.19 f=-0.405 shape=(1, 9000, 1)
logits [[-1.1280421  -0.15767767 -0.17447498 -0.16109478]]
Iteration 400 of 1000: loss=1.03 " + "l1=0" + "l2=1.03 f=-0.403 shape=(1, 9000, 1)
logits [[-1.1009731  -0.16706024 -0.19080384 -0.15206853]]
Iteration 500 of 1000: loss=0.914 " + "l1=0.00763" + "l2=0.907 f=-0.402 shape=(1, 9000, 1)
logits [[-1.049152   -0.18314904 -0.18563381 -0.19077578]]
Iteration 600 of 1000: loss=0.829 " + "l1=0" + "l2=0.829 f=-0.4 shape=(1, 9000, 1)
logits [[-1.015884   -0.2103034  -0.19405831 -0.1785231 ]]
Iteration 700 of 1000: loss=0.755 " + "l1=0" + "l2=0.755 f=-0.399 shape=(1, 9000, 1)
logits [[-0.9715402  -0.22056167 -0.21757977 -0.18582001]]
Iteration 800 of 1000: loss=0.685 " + "l1=0.0149" + "l2=0.67 f=-0.4 shape=(1, 9000, 1)
logits [[-0.903224   -0.22831328 -0.22653921 -0.24146962]]
Iteration 900 of 1000: loss=0.629 " + "l1=0.0126" + "l2=0.616 f=-0.398 shape=(1, 9000, 1)
logits [[-0.8755743  -0.23146357 -0.2405202  -0.24403843]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.84 " + "l1=3.84" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.2695343 -1.4600084  1.7266325 -4.719603 ]]
Iteration 100 of 1000: loss=2.05 " + "l1=1.34" + "l2=0.714 f=-0.481 shape=(1, 9000, 1)
logits [[-0.00953993 -0.38212714  0.44779858 -1.981042  ]]
Iteration 200 of 1000: loss=1.42 " + "l1=0.518" + "l2=0.902 f=-0.463 shape=(1, 9000, 1)
logits [[-0.8589516  -0.02437083 -0.012208   -0.9546798 ]]
Iteration 300 of 1000: loss=1.09 " + "l1=0.216" + "l2=0.873 f=-0.422 shape=(1, 9000, 1)
logits [[-1.011292   -0.10734726 -0.08763961 -0.48008823]]
Iteration 400 of 1000: loss=0.914 " + "l1=0.0526" + "l2=0.861 f=-0.41 shape=(1, 9000, 1)
logits [[-1.1384698  -0.14278112 -0.13104337 -0.22662905]]
Iteration 500 of 1000: loss=0.776 " + "l1=0.00508" + "l2=0.771 f=-0.407 shape=(1, 9000, 1)
logits [[-1.154268   -0.1634457  -0.15035927 -0.15959209]]
Iteration 600 of 1000: loss=0.669 " + "l1=0.00419" + "l2=0.665 f=-0.404 shape=(1, 9000, 1)
logits [[-1.1160928  -0.16671517 -0.16201502 -0.1696386 ]]
Iteration 700 of 1000: loss=0.591 " + "l1=0.00577" + "l2=0.585 f=-0.408 shape=(1, 9000, 1)
logits [[-1.0749236  -0.19290058 -0.17736053 -0.18785858]]
Iteration 800 of 1000: loss=0.526 " + "l1=0.0144" + "l2=0.512 f=-0.41 shape=(1, 9000, 1)
logits [[-0.981537   -0.23173164 -0.20031849 -0.22647232]]
Iteration 900 of 1000: loss=0.459 " + "l1=0.0035" + "l2=0.456 f=-0.408 shape=(1, 9000, 1)
logits [[-0.9245336  -0.24971707 -0.2255559  -0.2319138 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.27 " + "l1=2.27" + "l2=0 f=-0.546 shape=(1, 9000, 1)
logits [[ 2.2695343 -1.4600084  1.7266325 -4.719603 ]]
Iteration 100 of 1000: loss=1.52 " + "l1=1.23" + "l2=0.289 f=-0.481 shape=(1, 9000, 1)
logits [[ 0.7739275  -0.7307035   0.90731686 -2.874841  ]]
Iteration 200 of 1000: loss=1.24 " + "l1=0.853" + "l2=0.388 f=-0.487 shape=(1, 9000, 1)
logits [[ 0.10906926 -0.40568092  0.48606148 -2.1370175 ]]
Iteration 300 of 1000: loss=1.04 " + "l1=0.581" + "l2=0.456 f=-0.49 shape=(1, 9000, 1)
logits [[-0.38983658 -0.15698275  0.18690957 -1.6020417 ]]
Iteration 400 of 1000: loss=0.877 " + "l1=0.395" + "l2=0.482 f=-0.473 shape=(1, 9000, 1)
logits [[-0.74280816  0.01351696  0.02544036 -1.1895107 ]]
Iteration 500 of 1000: loss=0.759 " + "l1=0.298" + "l2=0.461 f=-0.466 shape=(1, 9000, 1)
logits [[-0.8894277  -0.02743663 -0.01485479 -0.9321558 ]]
Iteration 600 of 1000: loss=0.676 " + "l1=0.232" + "l2=0.444 f=-0.459 shape=(1, 9000, 1)
logits [[-0.9710062  -0.04923136 -0.05160021 -0.76264036]]
Iteration 700 of 1000: loss=0.606 " + "l1=0.173" + "l2=0.433 f=-0.45 shape=(1, 9000, 1)
logits [[-1.0085253  -0.08702666 -0.08526011 -0.6174557 ]]
Iteration 800 of 1000: loss=0.543 " + "l1=0.122" + "l2=0.421 f=-0.443 shape=(1, 9000, 1)
logits [[-1.0726844  -0.12047493 -0.10068329 -0.47712594]]
Iteration 900 of 1000: loss=0.47 " + "l1=0.0476" + "l2=0.423 f=-0.436 shape=(1, 9000, 1)
logits [[-1.2067759  -0.13112395 -0.13032402 -0.27683404]]
--- 315.0152554512024 seconds ---
Adv result:3
Loading record A00739
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0546 " + "l1=0.0546" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 3.5812101 -1.8763368  1.933565  -4.854982 ]]
Iteration 100 of 1000: loss=0.0542 " + "l1=0.0539" + "l2=0.000318 f=-0.301 shape=(1, 9000, 1)
logits [[ 3.538572  -1.8508905  1.915747  -4.805966 ]]
Iteration 200 of 1000: loss=0.0541 " + "l1=0.0538" + "l2=0.000296 f=-0.3 shape=(1, 9000, 1)
logits [[ 3.5357428 -1.847884   1.9139909 -4.8022566]]
Iteration 300 of 1000: loss=0.0541 " + "l1=0.0537" + "l2=0.000341 f=-0.3 shape=(1, 9000, 1)
logits [[ 3.5305493 -1.8443443  1.9115397 -4.795819 ]]
Iteration 400 of 1000: loss=0.0541 " + "l1=0.0537" + "l2=0.000396 f=-0.299 shape=(1, 9000, 1)
logits [[ 3.524927  -1.8407646  1.9089466 -4.7888184]]
Iteration 500 of 1000: loss=0.0541 " + "l1=0.0536" + "l2=0.000499 f=-0.298 shape=(1, 9000, 1)
logits [[ 3.5193503 -1.8376522  1.9065052 -4.7817736]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.546 " + "l1=0.546" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 3.5812101 -1.8763368  1.933565  -4.854982 ]]
Iteration 100 of 1000: loss=0.513 " + "l1=0.491" + "l2=0.022 f=-0.276 shape=(1, 9000, 1)
logits [[ 3.2436476 -1.664505   1.7788997 -4.463216 ]]
Iteration 200 of 1000: loss=0.503 " + "l1=0.474" + "l2=0.0296 f=-0.267 shape=(1, 9000, 1)
logits [[ 3.1390855 -1.5973797  1.7314955 -4.341707 ]]
Iteration 300 of 1000: loss=0.495 " + "l1=0.461" + "l2=0.0335 f=-0.26 shape=(1, 9000, 1)
logits [[ 3.0596457 -1.5531348  1.6965294 -4.2443233]]
Iteration 400 of 1000: loss=0.486 " + "l1=0.448" + "l2=0.038 f=-0.254 shape=(1, 9000, 1)
logits [[ 2.967031  -1.5120777  1.6605753 -4.130849 ]]
Iteration 500 of 1000: loss=0.477 " + "l1=0.438" + "l2=0.0391 f=-0.251 shape=(1, 9000, 1)
logits [[ 2.8923945 -1.4890269  1.6337235 -4.0413   ]]
Iteration 600 of 1000: loss=0.469 " + "l1=0.427" + "l2=0.0422 f=-0.248 shape=(1, 9000, 1)
logits [[ 2.8063884 -1.4598492  1.6006942 -3.9384317]]
Iteration 700 of 1000: loss=0.461 " + "l1=0.416" + "l2=0.0443 f=-0.243 shape=(1, 9000, 1)
logits [[ 2.7313259 -1.4335312  1.5715202 -3.8414288]]
Iteration 800 of 1000: loss=0.453 " + "l1=0.406" + "l2=0.0469 f=-0.238 shape=(1, 9000, 1)
logits [[ 2.6531937 -1.4033022  1.5363952 -3.7363572]]
Iteration 900 of 1000: loss=0.442 " + "l1=0.393" + "l2=0.0491 f=-0.229 shape=(1, 9000, 1)
logits [[ 2.569848  -1.3592918  1.495593  -3.621414 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.46 " + "l1=5.46" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 3.5812101 -1.8763368  1.933565  -4.854982 ]]
Iteration 100 of 1000: loss=2.59 " + "l1=1.25" + "l2=1.34 f=-0.176 shape=(1, 9000, 1)
logits [[ 0.7007519 -0.5496156  0.6986322 -1.5543371]]
Iteration 200 of 1000: loss=1.84 " + "l1=0.474" + "l2=1.36 f=-0.184 shape=(1, 9000, 1)
logits [[ 0.26241446 -0.20512109  0.26856294 -1.0601774 ]]
Iteration 300 of 1000: loss=1.48 " + "l1=0.122" + "l2=1.36 f=-0.179 shape=(1, 9000, 1)
logits [[ 0.06983231 -0.04318588  0.07844147 -0.8228443 ]]
Iteration 400 of 1000: loss=1.28 " + "l1=0.0222" + "l2=1.26 f=-0.166 shape=(1, 9000, 1)
logits [[-0.00249743 -0.00540424  0.01679097 -0.67308235]]
Iteration 500 of 1000: loss=1.17 " + "l1=0.00805" + "l2=1.16 f=-0.163 shape=(1, 9000, 1)
logits [[-0.00230902 -0.00516747  0.00288437 -0.6461838 ]]
Iteration 600 of 1000: loss=1.09 " + "l1=0.0164" + "l2=1.07 f=-0.16 shape=(1, 9000, 1)
logits [[-7.0529245e-04 -1.6608609e-02 -1.7539365e-04 -6.2193936e-01]]
Iteration 700 of 1000: loss=1.02 " + "l1=0.024" + "l2=0.993 f=-0.159 shape=(1, 9000, 1)
logits [[ 6.3845888e-05 -2.3900239e-02 -6.3244696e-03 -6.0689169e-01]]
Iteration 800 of 1000: loss=0.939 " + "l1=0.0127" + "l2=0.926 f=-0.171 shape=(1, 9000, 1)
logits [[-0.02775905 -0.03146502 -0.01879653 -0.6063941 ]]
Iteration 900 of 1000: loss=0.878 " + "l1=0" + "l2=0.878 f=-0.176 shape=(1, 9000, 1)
logits [[-0.03391413 -0.0316157  -0.03337888 -0.6033538 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3 " + "l1=3" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 3.5812101 -1.8763368  1.933565  -4.854982 ]]
Iteration 100 of 1000: loss=2.06 " + "l1=1.56" + "l2=0.501 f=-0.204 shape=(1, 9000, 1)
logits [[ 1.8074794 -1.0300697  1.2240766 -2.8179586]]
Iteration 200 of 1000: loss=1.61 " + "l1=0.839" + "l2=0.771 f=-0.186 shape=(1, 9000, 1)
logits [[ 0.8710687 -0.655069   0.8010937 -1.7618239]]
Iteration 300 of 1000: loss=1.36 " + "l1=0.57" + "l2=0.794 f=-0.172 shape=(1, 9000, 1)
logits [[ 0.5724846 -0.4633989  0.5684712 -1.3659607]]
Iteration 400 of 1000: loss=1.25 " + "l1=0.467" + "l2=0.779 f=-0.161 shape=(1, 9000, 1)
logits [[ 0.45502862 -0.39442462  0.44986093 -1.1549838 ]]
Iteration 500 of 1000: loss=1.14 " + "l1=0.391" + "l2=0.749 f=-0.149 shape=(1, 9000, 1)
logits [[ 0.36052284 -0.35015425  0.3570703  -0.9649055 ]]
Iteration 600 of 1000: loss=1.04 " + "l1=0.315" + "l2=0.724 f=-0.146 shape=(1, 9000, 1)
logits [[ 0.268286   -0.30493498  0.2643981  -0.81298   ]]
Iteration 700 of 1000: loss=0.97 " + "l1=0.266" + "l2=0.704 f=-0.145 shape=(1, 9000, 1)
logits [[ 0.19884077 -0.2843032   0.197772   -0.69118774]]
Iteration 800 of 1000: loss=0.924 " + "l1=0.216" + "l2=0.708 f=-0.137 shape=(1, 9000, 1)
logits [[ 0.12924212 -0.26191264  0.13156384 -0.54660183]]
Iteration 900 of 1000: loss=0.898 " + "l1=0.181" + "l2=0.717 f=-0.13 shape=(1, 9000, 1)
logits [[ 0.08601905 -0.24220024  0.08685465 -0.4489646 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.23 " + "l1=4.23" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 3.5812101 -1.8763368  1.933565  -4.854982 ]]
Iteration 100 of 1000: loss=2.41 " + "l1=1.37" + "l2=1.04 f=-0.184 shape=(1, 9000, 1)
logits [[ 1.0096546  -0.75285006  0.9213494  -1.9154482 ]]
Iteration 200 of 1000: loss=1.74 " + "l1=0.667" + "l2=1.07 f=-0.172 shape=(1, 9000, 1)
logits [[ 0.47925475 -0.38056827  0.48047715 -1.267367  ]]
Iteration 300 of 1000: loss=1.49 " + "l1=0.445" + "l2=1.05 f=-0.159 shape=(1, 9000, 1)
logits [[ 0.30739206 -0.26113337  0.31346047 -0.9969918 ]]
Iteration 400 of 1000: loss=1.33 " + "l1=0.268" + "l2=1.06 f=-0.153 shape=(1, 9000, 1)
logits [[ 0.1752827  -0.1702746   0.17515208 -0.79248834]]
Iteration 500 of 1000: loss=1.21 " + "l1=0.159" + "l2=1.05 f=-0.148 shape=(1, 9000, 1)
logits [[ 0.0942975  -0.11057176  0.08569086 -0.66220754]]
Iteration 600 of 1000: loss=1.09 " + "l1=0.0547" + "l2=1.04 f=-0.151 shape=(1, 9000, 1)
logits [[-0.00431263 -0.06873723  0.00184589 -0.53311926]]
Iteration 700 of 1000: loss=0.994 " + "l1=0.0105" + "l2=0.984 f=-0.155 shape=(1, 9000, 1)
logits [[-0.03586581 -0.04591243 -0.03233819 -0.50625104]]
Iteration 800 of 1000: loss=0.911 " + "l1=0.0036" + "l2=0.908 f=-0.153 shape=(1, 9000, 1)
logits [[-0.04011194 -0.04032633 -0.03568397 -0.4949563 ]]
Iteration 900 of 1000: loss=0.862 " + "l1=0.00594" + "l2=0.856 f=-0.151 shape=(1, 9000, 1)
logits [[-0.06083997 -0.04205321 -0.03438288 -0.46694714]]
--- 285.21893215179443 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0165 " + "l1=0.0165" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 3.5812101 -1.8763368  1.933565  -4.854982 ]]
Iteration 100 of 1000: loss=0.0164 " + "l1=0.0162" + "l2=0.000151 f=-0.303 shape=(1, 9000, 1)
logits [[ 3.555585  -1.8736117  1.9341753 -4.827403 ]]
Iteration 200 of 1000: loss=0.0163 " + "l1=0.0162" + "l2=0.000107 f=-0.303 shape=(1, 9000, 1)
logits [[ 3.5564907 -1.873683   1.9345671 -4.8285985]]
Iteration 300 of 1000: loss=0.0163 " + "l1=0.0162" + "l2=0.000152 f=-0.303 shape=(1, 9000, 1)
logits [[ 3.5543249 -1.8732692  1.9346503 -4.8262615]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.165 " + "l1=0.165" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 3.5812101 -1.8763368  1.933565  -4.854982 ]]
Iteration 100 of 1000: loss=0.154 " + "l1=0.146" + "l2=0.00735 f=-0.297 shape=(1, 9000, 1)
logits [[ 3.3968167 -1.8562152  1.93508   -4.6628594]]
Iteration 200 of 1000: loss=0.15 " + "l1=0.141" + "l2=0.00906 f=-0.294 shape=(1, 9000, 1)
logits [[ 3.3524313 -1.8516113  1.9405512 -4.6159353]]
Iteration 300 of 1000: loss=0.147 " + "l1=0.137" + "l2=0.0106 f=-0.291 shape=(1, 9000, 1)
logits [[ 3.311398  -1.8480694  1.9440635 -4.572167 ]]
Iteration 400 of 1000: loss=0.145 " + "l1=0.133" + "l2=0.012 f=-0.288 shape=(1, 9000, 1)
logits [[ 3.2725534 -1.841968   1.9459729 -4.5303044]]
Iteration 500 of 1000: loss=0.142 " + "l1=0.128" + "l2=0.0136 f=-0.285 shape=(1, 9000, 1)
logits [[ 3.228127  -1.835239   1.9452658 -4.4795437]]
Iteration 600 of 1000: loss=0.139 " + "l1=0.125" + "l2=0.0145 f=-0.284 shape=(1, 9000, 1)
logits [[ 3.1905172 -1.8295001  1.9432335 -4.440703 ]]
Iteration 700 of 1000: loss=0.136 " + "l1=0.121" + "l2=0.0153 f=-0.283 shape=(1, 9000, 1)
logits [[ 3.150538  -1.8260572  1.9399087 -4.3978744]]
Iteration 800 of 1000: loss=0.133 " + "l1=0.117" + "l2=0.0166 f=-0.282 shape=(1, 9000, 1)
logits [[ 3.1047683 -1.822376   1.9360313 -4.347627 ]]
Iteration 900 of 1000: loss=0.13 " + "l1=0.112" + "l2=0.018 f=-0.281 shape=(1, 9000, 1)
logits [[ 3.054605  -1.816161   1.9303502 -4.2927012]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.65 " + "l1=1.65" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 3.5812101 -1.8763368  1.933565  -4.854982 ]]
Iteration 100 of 1000: loss=0.512 " + "l1=0.00273" + "l2=0.51 f=-0.269 shape=(1, 9000, 1)
logits [[ 1.8300352 -1.7486295  1.8273042 -2.985838 ]]
Iteration 200 of 1000: loss=0.369 " + "l1=0" + "l2=0.369 f=-0.278 shape=(1, 9000, 1)
logits [[ 1.8315302 -1.7834859  1.8319993 -2.990762 ]]
Iteration 300 of 1000: loss=0.312 " + "l1=0.00831" + "l2=0.304 f=-0.277 shape=(1, 9000, 1)
logits [[ 1.8540919 -1.8001202  1.8457811 -3.007173 ]]
Iteration 400 of 1000: loss=0.274 " + "l1=0.0107" + "l2=0.263 f=-0.269 shape=(1, 9000, 1)
logits [[ 1.8657119 -1.7987758  1.85497   -2.9995205]]
Iteration 500 of 1000: loss=0.238 " + "l1=0" + "l2=0.238 f=-0.263 shape=(1, 9000, 1)
logits [[ 1.8498255 -1.791193   1.8557872 -2.965885 ]]
Iteration 600 of 1000: loss=0.216 " + "l1=0" + "l2=0.216 f=-0.259 shape=(1, 9000, 1)
logits [[ 1.8392011 -1.7837309  1.8522114 -2.9423556]]
Iteration 700 of 1000: loss=0.194 " + "l1=0.00565" + "l2=0.189 f=-0.253 shape=(1, 9000, 1)
logits [[ 1.8558767 -1.7788785  1.8502305 -2.9394054]]
Iteration 800 of 1000: loss=0.174 " + "l1=0" + "l2=0.174 f=-0.25 shape=(1, 9000, 1)
logits [[ 1.8453488 -1.7758956  1.8460412 -2.9137971]]
Iteration 900 of 1000: loss=0.163 " + "l1=0.00622" + "l2=0.157 f=-0.249 shape=(1, 9000, 1)
logits [[ 1.8569092 -1.7834107  1.8506929 -2.9199448]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.906 " + "l1=0.906" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 3.5812101 -1.8763368  1.933565  -4.854982 ]]
Iteration 100 of 1000: loss=0.549 " + "l1=0.324" + "l2=0.225 f=-0.279 shape=(1, 9000, 1)
logits [[ 2.4780085 -1.7952275  1.8882644 -3.6878378]]
Iteration 200 of 1000: loss=0.41 " + "l1=0.126" + "l2=0.284 f=-0.272 shape=(1, 9000, 1)
logits [[ 2.114707  -1.7817981  1.8864337 -3.3084564]]
Iteration 300 of 1000: loss=0.297 " + "l1=0.00676" + "l2=0.29 f=-0.282 shape=(1, 9000, 1)
logits [[ 1.8797678 -1.8235117  1.8674821 -3.0533462]]
Iteration 400 of 1000: loss=0.232 " + "l1=0.00744" + "l2=0.224 f=-0.266 shape=(1, 9000, 1)
logits [[ 1.8867389 -1.8108672  1.873203  -3.0137153]]
Iteration 500 of 1000: loss=0.193 " + "l1=0.00414" + "l2=0.189 f=-0.255 shape=(1, 9000, 1)
logits [[ 1.8725216 -1.7832774  1.8649994 -2.9757705]]
Iteration 600 of 1000: loss=0.168 " + "l1=0.00209" + "l2=0.166 f=-0.251 shape=(1, 9000, 1)
logits [[ 1.8618236 -1.7678602  1.8580267 -2.9553623]]
Iteration 700 of 1000: loss=0.15 " + "l1=0.000289" + "l2=0.15 f=-0.249 shape=(1, 9000, 1)
logits [[ 1.8481964 -1.765142   1.8476707 -2.926628 ]]
Iteration 800 of 1000: loss=0.136 " + "l1=0" + "l2=0.136 f=-0.248 shape=(1, 9000, 1)
logits [[ 1.8358349 -1.7655624  1.8376848 -2.900067 ]]
Iteration 900 of 1000: loss=0.125 " + "l1=0" + "l2=0.125 f=-0.249 shape=(1, 9000, 1)
logits [[ 1.8239558 -1.7701212  1.8343514 -2.886107 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.535 " + "l1=0.535" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 3.5812101 -1.8763368  1.933565  -4.854982 ]]
Iteration 100 of 1000: loss=0.417 " + "l1=0.345" + "l2=0.0719 f=-0.285 shape=(1, 9000, 1)
logits [[ 2.9893146 -1.8190325  1.9268916 -4.236411 ]]
Iteration 200 of 1000: loss=0.369 " + "l1=0.264" + "l2=0.104 f=-0.276 shape=(1, 9000, 1)
logits [[ 2.7372034 -1.7995769  1.9243228 -3.965338 ]]
Iteration 300 of 1000: loss=0.324 " + "l1=0.203" + "l2=0.121 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.5413384 -1.7745055  1.9171066 -3.7446785]]
Iteration 400 of 1000: loss=0.282 " + "l1=0.149" + "l2=0.134 f=-0.261 shape=(1, 9000, 1)
logits [[ 2.3652933 -1.7785809  1.9077089 -3.5391495]]
Iteration 500 of 1000: loss=0.243 " + "l1=0.0971" + "l2=0.146 f=-0.252 shape=(1, 9000, 1)
logits [[ 2.207561  -1.7706091  1.9089067 -3.3521683]]
Iteration 600 of 1000: loss=0.199 " + "l1=0.0316" + "l2=0.168 f=-0.239 shape=(1, 9000, 1)
logits [[ 1.9834275 -1.7398006  1.8860494 -3.0866752]]
Iteration 700 of 1000: loss=0.157 " + "l1=0.00616" + "l2=0.151 f=-0.234 shape=(1, 9000, 1)
logits [[ 1.8794723 -1.7231493  1.8605305 -2.9534826]]
Iteration 800 of 1000: loss=0.127 " + "l1=0.00117" + "l2=0.126 f=-0.238 shape=(1, 9000, 1)
logits [[ 1.8444874 -1.7250736  1.8408728 -2.9138944]]
Iteration 900 of 1000: loss=0.112 " + "l1=0" + "l2=0.112 f=-0.241 shape=(1, 9000, 1)
logits [[ 1.8225838 -1.7295285  1.8231885 -2.8819957]]
--- 277.87934970855713 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0844 " + "l1=0.0844" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 3.5812101 -1.8763368  1.933565  -4.854982 ]]
Iteration 100 of 1000: loss=0.0835 " + "l1=0.0828" + "l2=0.000662 f=-0.298 shape=(1, 9000, 1)
logits [[ 3.5172963 -1.8560274  1.9117478 -4.7669797]]
Iteration 200 of 1000: loss=0.0833 " + "l1=0.0826" + "l2=0.000676 f=-0.298 shape=(1, 9000, 1)
logits [[ 3.5090377 -1.8527073  1.908321  -4.7556024]]
Iteration 300 of 1000: loss=0.0832 " + "l1=0.0824" + "l2=0.000746 f=-0.297 shape=(1, 9000, 1)
logits [[ 3.4996116 -1.8493724  1.90486   -4.742333 ]]
Iteration 400 of 1000: loss=0.0831 " + "l1=0.0822" + "l2=0.000856 f=-0.296 shape=(1, 9000, 1)
logits [[ 3.4903471 -1.8462683  1.9015998 -4.7291756]]
Iteration 500 of 1000: loss=0.083 " + "l1=0.082" + "l2=0.000985 f=-0.295 shape=(1, 9000, 1)
logits [[ 3.4811037 -1.843357   1.8984326 -4.7160435]]
Iteration 600 of 1000: loss=0.0828 " + "l1=0.0817" + "l2=0.00107 f=-0.294 shape=(1, 9000, 1)
logits [[ 3.4717999 -1.8404512  1.8951577 -4.702789 ]]
Iteration 700 of 1000: loss=0.0827 " + "l1=0.0815" + "l2=0.00118 f=-0.293 shape=(1, 9000, 1)
logits [[ 3.462718  -1.8378242  1.8919685 -4.689991 ]]
Iteration 800 of 1000: loss=0.0826 " + "l1=0.0813" + "l2=0.00131 f=-0.292 shape=(1, 9000, 1)
logits [[ 3.4538088 -1.8351092  1.8888736 -4.67745  ]]
Iteration 900 of 1000: loss=0.0825 " + "l1=0.0811" + "l2=0.00137 f=-0.292 shape=(1, 9000, 1)
logits [[ 3.4450185 -1.8325028  1.885805  -4.665002 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.844 " + "l1=0.844" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 3.5812101 -1.8763368  1.933565  -4.854982 ]]
Iteration 100 of 1000: loss=0.757 " + "l1=0.699" + "l2=0.0583 f=-0.254 shape=(1, 9000, 1)
logits [[ 2.9759204 -1.69091    1.7130215 -4.01406  ]]
Iteration 200 of 1000: loss=0.726 " + "l1=0.643" + "l2=0.0823 f=-0.239 shape=(1, 9000, 1)
logits [[ 2.7425203 -1.6397206  1.6334258 -3.6920326]]
Iteration 300 of 1000: loss=0.695 " + "l1=0.602" + "l2=0.0932 f=-0.227 shape=(1, 9000, 1)
logits [[ 2.5695765 -1.6144301  1.5860643 -3.4473426]]
Iteration 400 of 1000: loss=0.663 " + "l1=0.561" + "l2=0.102 f=-0.211 shape=(1, 9000, 1)
logits [[ 2.4065974 -1.5865762  1.5394157 -3.2047226]]
Iteration 500 of 1000: loss=0.634 " + "l1=0.524" + "l2=0.11 f=-0.194 shape=(1, 9000, 1)
logits [[ 2.2560523 -1.5475485  1.4934733 -2.979664 ]]
Iteration 600 of 1000: loss=0.605 " + "l1=0.485" + "l2=0.12 f=-0.179 shape=(1, 9000, 1)
logits [[ 2.0982873 -1.5105085  1.4430012 -2.7484279]]
Iteration 700 of 1000: loss=0.577 " + "l1=0.447" + "l2=0.13 f=-0.166 shape=(1, 9000, 1)
logits [[ 1.9473647 -1.484773   1.3934122 -2.5206523]]
Iteration 800 of 1000: loss=0.55 " + "l1=0.41" + "l2=0.14 f=-0.153 shape=(1, 9000, 1)
logits [[ 1.8028597 -1.4649926  1.347246  -2.2979026]]
Iteration 900 of 1000: loss=0.518 " + "l1=0.365" + "l2=0.153 f=-0.141 shape=(1, 9000, 1)
logits [[ 1.6156497 -1.4547004  1.3034472 -2.029912 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.44 " + "l1=8.44" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 3.5812101 -1.8763368  1.933565  -4.854982 ]]
Iteration 100 of 1000: loss=2.08 " + "l1=0.0279" + "l2=2.06 f=-0.023 shape=(1, 9000, 1)
logits [[ 0.34372643 -1.1464788   0.36939403  0.34146678]]
Iteration 200 of 1000: loss=1.52 " + "l1=0" + "l2=1.52 f=-0.0111 shape=(1, 9000, 1)
logits [[ 0.34254912 -1.0817077   0.34507242  0.3496623 ]]
Iteration 300 of 1000: loss=1.28 " + "l1=0" + "l2=1.28 f=0.00329 shape=(1, 9000, 1)
logits [[ 0.32455286 -1.0247924   0.3331122   0.38026735]]
Iteration 400 of 1000: loss=1.12 " + "l1=0.0318" + "l2=1.09 f=0.00375 shape=(1, 9000, 1)
logits [[ 0.34093225 -1.0124303   0.35915715  0.32734185]]
Iteration 500 of 1000: loss=0.975 " + "l1=0" + "l2=0.975 f=0.0139 shape=(1, 9000, 1)
logits [[ 0.34664807 -1.010444    0.35686952  0.36233708]]
Iteration 600 of 1000: loss=0.885 " + "l1=0" + "l2=0.885 f=0.0192 shape=(1, 9000, 1)
logits [[ 0.3417006  -1.0065174   0.35516277  0.38646987]]
Iteration 700 of 1000: loss=0.818 " + "l1=0" + "l2=0.818 f=0.0162 shape=(1, 9000, 1)
logits [[ 0.31547406 -1.0207343   0.35819757  0.4119969 ]]
Iteration 800 of 1000: loss=0.748 " + "l1=0" + "l2=0.748 f=0.0168 shape=(1, 9000, 1)
logits [[ 0.35167906 -1.033277    0.36341187  0.3854632 ]]
Iteration 900 of 1000: loss=0.708 " + "l1=0.00993" + "l2=0.698 f=0.0176 shape=(1, 9000, 1)
logits [[ 0.37572378 -1.0463667   0.37514123  0.36578882]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.64 " + "l1=4.64" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 3.5812101 -1.8763368  1.933565  -4.854982 ]]
Iteration 100 of 1000: loss=2.02 " + "l1=0.805" + "l2=1.22 f=-0.0765 shape=(1, 9000, 1)
logits [[ 0.8032125  -1.263155    0.8085845  -0.65463376]]
Iteration 200 of 1000: loss=1.32 " + "l1=0.00617" + "l2=1.32 f=-0.0217 shape=(1, 9000, 1)
logits [[ 0.29826376 -1.035806    0.33100435  0.31978637]]
Iteration 300 of 1000: loss=1.08 " + "l1=0" + "l2=1.08 f=-0.0176 shape=(1, 9000, 1)
logits [[ 0.29039302 -0.9991633   0.31006286  0.32814464]]
Iteration 400 of 1000: loss=0.934 " + "l1=0.0311" + "l2=0.903 f=-0.00739 shape=(1, 9000, 1)
logits [[ 0.35107237 -1.014358    0.33920082  0.29451898]]
Iteration 500 of 1000: loss=0.8 " + "l1=0.00488" + "l2=0.795 f=-0.00469 shape=(1, 9000, 1)
logits [[ 0.3417733  -1.0413102   0.34482384  0.33595642]]
Iteration 600 of 1000: loss=0.726 " + "l1=0.0014" + "l2=0.725 f=-0.00191 shape=(1, 9000, 1)
logits [[ 0.34633586 -1.0500401   0.34930006  0.3467571 ]]
Iteration 700 of 1000: loss=0.678 " + "l1=0" + "l2=0.678 f=0.00512 shape=(1, 9000, 1)
logits [[ 0.35131413 -1.0470454   0.3507872   0.36540797]]
Iteration 800 of 1000: loss=0.64 " + "l1=0.00651" + "l2=0.633 f=0.0066 shape=(1, 9000, 1)
logits [[ 0.36226034 -1.0514921   0.36373115  0.35188934]]
Iteration 900 of 1000: loss=0.613 " + "l1=0" + "l2=0.613 f=0.00951 shape=(1, 9000, 1)
logits [[ 0.3337973  -1.0415028   0.35332292  0.39242965]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.74 " + "l1=2.74" + "l2=0 f=-0.304 shape=(1, 9000, 1)
logits [[ 3.5812101 -1.8763368  1.933565  -4.854982 ]]
Iteration 100 of 1000: loss=1.71 " + "l1=1.08" + "l2=0.629 f=-0.166 shape=(1, 9000, 1)
logits [[ 1.467285  -1.4638236  1.2010306 -1.8702903]]
Iteration 200 of 1000: loss=1.33 " + "l1=0.58" + "l2=0.752 f=-0.0931 shape=(1, 9000, 1)
logits [[ 0.9008157  -1.2909439   0.90170544 -0.8840454 ]]
Iteration 300 of 1000: loss=1.12 " + "l1=0.325" + "l2=0.796 f=-0.0582 shape=(1, 9000, 1)
logits [[ 0.64391166 -1.1711389   0.6475129  -0.35328466]]
Iteration 400 of 1000: loss=0.938 " + "l1=0.124" + "l2=0.814 f=-0.0349 shape=(1, 9000, 1)
logits [[ 0.44382644 -1.1013032   0.45024312  0.06773198]]
Iteration 500 of 1000: loss=0.77 " + "l1=0.012" + "l2=0.758 f=-0.0217 shape=(1, 9000, 1)
logits [[ 0.33873856 -1.0863785   0.3489991   0.31201836]]
Iteration 600 of 1000: loss=0.671 " + "l1=0" + "l2=0.671 f=-0.00108 shape=(1, 9000, 1)
logits [[ 0.35175785 -1.0997938   0.36641535  0.37728274]]
Iteration 700 of 1000: loss=0.605 " + "l1=0.00284" + "l2=0.602 f=0.0106 shape=(1, 9000, 1)
logits [[ 0.3835414  -1.1267062   0.39725545  0.38850838]]
Iteration 800 of 1000: loss=0.567 " + "l1=0" + "l2=0.567 f=0.0169 shape=(1, 9000, 1)
logits [[ 0.3877647  -1.1332749   0.393903    0.41928238]]
Iteration 900 of 1000: loss=0.525 " + "l1=0" + "l2=0.525 f=0.0162 shape=(1, 9000, 1)
logits [[ 0.39948922 -1.1463157   0.4052839   0.40639699]]
--- 316.6359553337097 seconds ---
Adv result:3
Loading record A00772
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0798 " + "l1=0.0798" + "l2=0 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.109321  -2.8718607  3.1561844 -7.636335 ]]
Iteration 100 of 1000: loss=0.0795 " + "l1=0.0793" + "l2=0.000245 f=-0.558 shape=(1, 9000, 1)
logits [[ 5.07509   -2.853291   3.1409042 -7.5954633]]
Iteration 200 of 1000: loss=0.0795 " + "l1=0.0792" + "l2=0.000227 f=-0.558 shape=(1, 9000, 1)
logits [[ 5.0722985 -2.851548   3.1391935 -7.5914884]]
Iteration 300 of 1000: loss=0.0795 " + "l1=0.0792" + "l2=0.00028 f=-0.557 shape=(1, 9000, 1)
logits [[ 5.0682526 -2.8487914  3.1366673 -7.5861096]]
Iteration 400 of 1000: loss=0.0794 " + "l1=0.0791" + "l2=0.000316 f=-0.557 shape=(1, 9000, 1)
logits [[ 5.0640798 -2.8459568  3.1340508 -7.5806246]]
Iteration 500 of 1000: loss=0.0794 " + "l1=0.079" + "l2=0.000375 f=-0.557 shape=(1, 9000, 1)
logits [[ 5.0602403 -2.843249   3.1314924 -7.5756006]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.798 " + "l1=0.798" + "l2=0 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.109321  -2.8718607  3.1561844 -7.636335 ]]
Iteration 100 of 1000: loss=0.774 " + "l1=0.757" + "l2=0.0161 f=-0.541 shape=(1, 9000, 1)
logits [[ 4.8384137 -2.7363381  3.0398474 -7.30763  ]]
Iteration 200 of 1000: loss=0.767 " + "l1=0.747" + "l2=0.0198 f=-0.535 shape=(1, 9000, 1)
logits [[ 4.7708516 -2.6971822  3.0071678 -7.2227755]]
Iteration 300 of 1000: loss=0.76 " + "l1=0.737" + "l2=0.0233 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.711161  -2.6584804  2.9752135 -7.1479697]]
Iteration 400 of 1000: loss=0.754 " + "l1=0.728" + "l2=0.0262 f=-0.525 shape=(1, 9000, 1)
logits [[ 4.659278  -2.622804   2.9443116 -7.082478 ]]
Iteration 500 of 1000: loss=0.749 " + "l1=0.72" + "l2=0.0286 f=-0.522 shape=(1, 9000, 1)
logits [[ 4.609728  -2.5922377  2.9131298 -7.0182543]]
Iteration 600 of 1000: loss=0.743 " + "l1=0.712" + "l2=0.0312 f=-0.518 shape=(1, 9000, 1)
logits [[ 4.5601726 -2.5619333  2.8824587 -6.9512424]]
Iteration 700 of 1000: loss=0.738 " + "l1=0.704" + "l2=0.0337 f=-0.514 shape=(1, 9000, 1)
logits [[ 4.5068107 -2.5325828  2.8514621 -6.882021 ]]
Iteration 800 of 1000: loss=0.732 " + "l1=0.697" + "l2=0.0358 f=-0.511 shape=(1, 9000, 1)
logits [[ 4.457103  -2.508179   2.8235958 -6.816087 ]]
Iteration 900 of 1000: loss=0.727 " + "l1=0.689" + "l2=0.0378 f=-0.508 shape=(1, 9000, 1)
logits [[ 4.407624  -2.4825513  2.796644  -6.751953 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.98 " + "l1=7.98" + "l2=0 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.109321  -2.8718607  3.1561844 -7.636335 ]]
Iteration 100 of 1000: loss=5.9 " + "l1=4.82" + "l2=1.08 f=-0.468 shape=(1, 9000, 1)
logits [[ 2.9417584 -1.880743   2.0365264 -4.9704785]]
Iteration 200 of 1000: loss=5 " + "l1=3.56" + "l2=1.45 f=-0.399 shape=(1, 9000, 1)
logits [[ 2.1652808 -1.3899077  1.5026277 -3.8759968]]
Iteration 300 of 1000: loss=4.3 " + "l1=2.57" + "l2=1.73 f=-0.355 shape=(1, 9000, 1)
logits [[ 1.6348741  -0.93749195  1.0162966  -3.1349108 ]]
Iteration 400 of 1000: loss=3.63 " + "l1=1.56" + "l2=2.07 f=-0.32 shape=(1, 9000, 1)
logits [[ 1.022855  -0.5345419  0.6447356 -2.4136372]]
Iteration 500 of 1000: loss=3.07 " + "l1=0.797" + "l2=2.28 f=-0.315 shape=(1, 9000, 1)
logits [[ 0.5468037  -0.25055286  0.40507144 -1.9596654 ]]
Iteration 600 of 1000: loss=2.64 " + "l1=0.239" + "l2=2.4 f=-0.328 shape=(1, 9000, 1)
logits [[ 0.19069496 -0.04432525  0.19479102 -1.6532056 ]]
Iteration 700 of 1000: loss=2.38 " + "l1=0.0287" + "l2=2.35 f=-0.342 shape=(1, 9000, 1)
logits [[ 0.07015677  0.0415025   0.06255452 -1.5425335 ]]
Iteration 800 of 1000: loss=2.21 " + "l1=0.0181" + "l2=2.19 f=-0.337 shape=(1, 9000, 1)
logits [[ 0.05448937  0.03707081  0.05521719 -1.493047  ]]
Iteration 900 of 1000: loss=2.1 " + "l1=0.0381" + "l2=2.06 f=-0.331 shape=(1, 9000, 1)
logits [[ 0.07305717  0.03491899  0.05939562 -1.4901893 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.39 " + "l1=4.39" + "l2=0 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.109321  -2.8718607  3.1561844 -7.636335 ]]
Iteration 100 of 1000: loss=3.71 " + "l1=3.35" + "l2=0.362 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.8183603 -2.2689383  2.5354443 -6.048279 ]]
Iteration 200 of 1000: loss=3.42 " + "l1=2.89" + "l2=0.522 f=-0.473 shape=(1, 9000, 1)
logits [[ 3.2585945 -2.0025241  2.1733189 -5.3209047]]
Iteration 300 of 1000: loss=3.19 " + "l1=2.56" + "l2=0.626 f=-0.428 shape=(1, 9000, 1)
logits [[ 2.8998327 -1.7537711  1.9383291 -4.794616 ]]
Iteration 400 of 1000: loss=2.93 " + "l1=2.24" + "l2=0.698 f=-0.385 shape=(1, 9000, 1)
logits [[ 2.5696924 -1.4973629  1.6961708 -4.309223 ]]
Iteration 500 of 1000: loss=2.74 " + "l1=1.95" + "l2=0.784 f=-0.367 shape=(1, 9000, 1)
logits [[ 2.2884223 -1.259031   1.4381545 -3.9336915]]
Iteration 600 of 1000: loss=2.57 " + "l1=1.72" + "l2=0.844 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.0603695 -1.0689929  1.2154361 -3.635906 ]]
Iteration 700 of 1000: loss=2.4 " + "l1=1.45" + "l2=0.948 f=-0.345 shape=(1, 9000, 1)
logits [[ 1.8037853 -0.8302119  0.9707395 -3.3245373]]
Iteration 800 of 1000: loss=2.26 " + "l1=1.25" + "l2=1.01 f=-0.335 shape=(1, 9000, 1)
logits [[ 1.5705118  -0.7060614   0.85272056 -3.0573285 ]]
Iteration 900 of 1000: loss=2.16 " + "l1=1.08" + "l2=1.08 f=-0.324 shape=(1, 9000, 1)
logits [[ 1.3478309  -0.6129202   0.75310993 -2.7847214 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=6.19 " + "l1=6.19" + "l2=0 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.109321  -2.8718607  3.1561844 -7.636335 ]]
Iteration 100 of 1000: loss=4.88 " + "l1=4.19" + "l2=0.694 f=-0.48 shape=(1, 9000, 1)
logits [[ 3.321673  -2.0814247  2.2652748 -5.4259934]]
Iteration 200 of 1000: loss=4.33 " + "l1=3.43" + "l2=0.901 f=-0.437 shape=(1, 9000, 1)
logits [[ 2.7218893 -1.7080678  1.8430759 -4.604304 ]]
Iteration 300 of 1000: loss=3.81 " + "l1=2.74" + "l2=1.07 f=-0.372 shape=(1, 9000, 1)
logits [[ 2.2191808 -1.3182034  1.4690697 -3.8600273]]
Iteration 400 of 1000: loss=3.44 " + "l1=2.26" + "l2=1.18 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.9086201 -1.0046197  1.1476314 -3.467786 ]]
Iteration 500 of 1000: loss=3.05 " + "l1=1.58" + "l2=1.46 f=-0.32 shape=(1, 9000, 1)
logits [[ 1.3790061  -0.66176134  0.8174282  -2.8163676 ]]
Iteration 600 of 1000: loss=2.65 " + "l1=0.959" + "l2=1.69 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.8491268  -0.38832057  0.5573727  -2.2804177 ]]
Iteration 700 of 1000: loss=2.45 " + "l1=0.682" + "l2=1.77 f=-0.312 shape=(1, 9000, 1)
logits [[ 0.59916973 -0.28091395  0.42728373 -1.9927006 ]]
Iteration 800 of 1000: loss=2.33 " + "l1=0.503" + "l2=1.82 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.43058607 -0.21818411  0.34835795 -1.7825462 ]]
Iteration 900 of 1000: loss=2.16 " + "l1=0.295" + "l2=1.87 f=-0.293 shape=(1, 9000, 1)
logits [[ 0.26179937 -0.11926078  0.25687385 -1.5718447 ]]
--- 284.81796431541443 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0195 " + "l1=0.0195" + "l2=0 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.109321  -2.8718607  3.1561844 -7.636335 ]]
Iteration 100 of 1000: loss=0.0194 " + "l1=0.0193" + "l2=0.000142 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.086188  -2.8736482  3.1581879 -7.6135554]]
Iteration 200 of 1000: loss=0.0194 " + "l1=0.0193" + "l2=0.000106 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.086749  -2.8738556  3.1589823 -7.6143656]]
Iteration 300 of 1000: loss=0.0194 " + "l1=0.0193" + "l2=0.000121 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.085059  -2.8742995  3.1598637 -7.6129336]]
Iteration 400 of 1000: loss=0.0194 " + "l1=0.0192" + "l2=0.000166 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.0831785 -2.8747184  3.1607041 -7.611399 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.195 " + "l1=0.195" + "l2=0 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.109321  -2.8718607  3.1561844 -7.636335 ]]
Iteration 100 of 1000: loss=0.185 " + "l1=0.178" + "l2=0.00648 f=-0.559 shape=(1, 9000, 1)
logits [[ 4.9458065 -2.876616   3.1643512 -7.4702773]]
Iteration 200 of 1000: loss=0.181 " + "l1=0.173" + "l2=0.00868 f=-0.559 shape=(1, 9000, 1)
logits [[ 4.900781  -2.8838158  3.1733122 -7.4275675]]
Iteration 300 of 1000: loss=0.179 " + "l1=0.169" + "l2=0.0103 f=-0.56 shape=(1, 9000, 1)
logits [[ 4.8695765 -2.8909974  3.1830785 -7.400897 ]]
Iteration 400 of 1000: loss=0.177 " + "l1=0.165" + "l2=0.0118 f=-0.56 shape=(1, 9000, 1)
logits [[ 4.8435674 -2.8952618  3.1907861 -7.379883 ]]
Iteration 500 of 1000: loss=0.175 " + "l1=0.162" + "l2=0.0133 f=-0.561 shape=(1, 9000, 1)
logits [[ 4.8168483 -2.8976338  3.1966994 -7.3588943]]
Iteration 600 of 1000: loss=0.173 " + "l1=0.159" + "l2=0.0144 f=-0.561 shape=(1, 9000, 1)
logits [[ 4.790138  -2.8971412  3.2003305 -7.3378234]]
Iteration 700 of 1000: loss=0.172 " + "l1=0.157" + "l2=0.0152 f=-0.562 shape=(1, 9000, 1)
logits [[ 4.7673526 -2.8956485  3.2023115 -7.320578 ]]
Iteration 800 of 1000: loss=0.17 " + "l1=0.154" + "l2=0.0158 f=-0.562 shape=(1, 9000, 1)
logits [[ 4.746836  -2.8942196  3.2042022 -7.306065 ]]
Iteration 900 of 1000: loss=0.169 " + "l1=0.152" + "l2=0.0166 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.7252007 -2.891254   3.204756  -7.2903633]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.95 " + "l1=1.95" + "l2=0 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.109321  -2.8718607  3.1561844 -7.636335 ]]
Iteration 100 of 1000: loss=0.856 " + "l1=0.265" + "l2=0.591 f=-0.602 shape=(1, 9000, 1)
logits [[ 3.565605  -3.2270162  3.3010724 -6.0476494]]
Iteration 200 of 1000: loss=0.52 " + "l1=0" + "l2=0.52 f=-0.623 shape=(1, 9000, 1)
logits [[ 3.3814023 -3.3753846  3.3871002 -5.883152 ]]
Iteration 300 of 1000: loss=0.438 " + "l1=0" + "l2=0.438 f=-0.622 shape=(1, 9000, 1)
logits [[ 3.371003  -3.3568857  3.3826802 -5.8835545]]
Iteration 400 of 1000: loss=0.379 " + "l1=0.000399" + "l2=0.379 f=-0.624 shape=(1, 9000, 1)
logits [[ 3.3831983 -3.3463304  3.382799  -5.9153647]]
Iteration 500 of 1000: loss=0.343 " + "l1=0.00675" + "l2=0.336 f=-0.625 shape=(1, 9000, 1)
logits [[ 3.3940697 -3.3470426  3.387321  -5.9339576]]
Iteration 600 of 1000: loss=0.318 " + "l1=0" + "l2=0.318 f=-0.625 shape=(1, 9000, 1)
logits [[ 3.3770137 -3.3475318  3.3910003 -5.919066 ]]
Iteration 700 of 1000: loss=0.293 " + "l1=0" + "l2=0.293 f=-0.619 shape=(1, 9000, 1)
logits [[ 3.3844414 -3.3374798  3.3925161 -5.9171014]]
Iteration 800 of 1000: loss=0.272 " + "l1=0.000639" + "l2=0.271 f=-0.614 shape=(1, 9000, 1)
logits [[ 3.395422  -3.3227186  3.3947825 -5.9237857]]
Iteration 900 of 1000: loss=0.261 " + "l1=0.00731" + "l2=0.254 f=-0.609 shape=(1, 9000, 1)
logits [[ 3.4015992 -3.3090646  3.394294  -5.921184 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.07 " + "l1=1.07" + "l2=0 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.109321  -2.8718607  3.1561844 -7.636335 ]]
Iteration 100 of 1000: loss=0.748 " + "l1=0.544" + "l2=0.204 f=-0.567 shape=(1, 9000, 1)
logits [[ 4.1921353 -2.9821672  3.2029765 -6.6824126]]
Iteration 200 of 1000: loss=0.6 " + "l1=0.31" + "l2=0.29 f=-0.589 shape=(1, 9000, 1)
logits [[ 3.8582144 -3.144287   3.2943873 -6.3651085]]
Iteration 300 of 1000: loss=0.485 " + "l1=0.13" + "l2=0.354 f=-0.607 shape=(1, 9000, 1)
logits [[ 3.5997932 -3.274206   3.3626187 -6.1156273]]
Iteration 400 of 1000: loss=0.379 " + "l1=0.00968" + "l2=0.37 f=-0.621 shape=(1, 9000, 1)
logits [[ 3.4103985 -3.3622398  3.3927937 -5.9264812]]
Iteration 500 of 1000: loss=0.329 " + "l1=0.00177" + "l2=0.327 f=-0.623 shape=(1, 9000, 1)
logits [[ 3.4045525 -3.364495   3.4013271 -5.933684 ]]
Iteration 600 of 1000: loss=0.295 " + "l1=0.000246" + "l2=0.295 f=-0.619 shape=(1, 9000, 1)
logits [[ 3.4000065 -3.3459265  3.399559  -5.930539 ]]
Iteration 700 of 1000: loss=0.268 " + "l1=0.000761" + "l2=0.267 f=-0.614 shape=(1, 9000, 1)
logits [[ 3.4052153 -3.3238702  3.403831  -5.939945 ]]
Iteration 800 of 1000: loss=0.251 " + "l1=0.00798" + "l2=0.243 f=-0.607 shape=(1, 9000, 1)
logits [[ 3.4147663 -3.2990508  3.4002502 -5.9431705]]
Iteration 900 of 1000: loss=0.228 " + "l1=0.000676" + "l2=0.227 f=-0.6 shape=(1, 9000, 1)
logits [[ 3.4106483 -3.2821283  3.4094188 -5.936118 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.635 " + "l1=0.635" + "l2=0 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.109321  -2.8718607  3.1561844 -7.636335 ]]
Iteration 100 of 1000: loss=0.524 " + "l1=0.459" + "l2=0.0648 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.5886903 -2.8875723  3.1767128 -7.088292 ]]
Iteration 200 of 1000: loss=0.482 " + "l1=0.392" + "l2=0.0904 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.4167705 -2.9374924  3.2119699 -6.9536834]]
Iteration 300 of 1000: loss=0.445 " + "l1=0.326" + "l2=0.119 f=-0.572 shape=(1, 9000, 1)
logits [[ 4.257863  -2.9874933  3.2554877 -6.8146205]]
Iteration 400 of 1000: loss=0.416 " + "l1=0.279" + "l2=0.137 f=-0.575 shape=(1, 9000, 1)
logits [[ 4.1492186 -3.0146544  3.289612  -6.7248845]]
Iteration 500 of 1000: loss=0.391 " + "l1=0.244" + "l2=0.148 f=-0.574 shape=(1, 9000, 1)
logits [[ 4.060262  -3.0204332  3.3097763 -6.6442122]]
Iteration 600 of 1000: loss=0.367 " + "l1=0.209" + "l2=0.158 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.9666522 -3.030892   3.3250585 -6.5607257]]
Iteration 700 of 1000: loss=0.342 " + "l1=0.177" + "l2=0.166 f=-0.58 shape=(1, 9000, 1)
logits [[ 3.8773167 -3.0447488  3.3331378 -6.4856467]]
Iteration 800 of 1000: loss=0.315 " + "l1=0.143" + "l2=0.171 f=-0.587 shape=(1, 9000, 1)
logits [[ 3.7856483 -3.068702   3.3443692 -6.4095273]]
Iteration 900 of 1000: loss=0.289 " + "l1=0.116" + "l2=0.173 f=-0.588 shape=(1, 9000, 1)
logits [[ 3.7064016 -3.0712023  3.3501263 -6.338557 ]]
--- 281.2013828754425 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.127 " + "l1=0.127" + "l2=0 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.109321  -2.8718607  3.1561844 -7.636335 ]]
Iteration 100 of 1000: loss=0.127 " + "l1=0.126" + "l2=0.000591 f=-0.557 shape=(1, 9000, 1)
logits [[ 5.051128  -2.8599029  3.1349847 -7.555547 ]]
Iteration 200 of 1000: loss=0.126 " + "l1=0.126" + "l2=0.000614 f=-0.557 shape=(1, 9000, 1)
logits [[ 5.043948  -2.8588347  3.1317425 -7.5446286]]
Iteration 300 of 1000: loss=0.126 " + "l1=0.126" + "l2=0.00069 f=-0.556 shape=(1, 9000, 1)
logits [[ 5.0357604 -2.8572996  3.1279135 -7.5318203]]
Iteration 400 of 1000: loss=0.126 " + "l1=0.125" + "l2=0.000793 f=-0.556 shape=(1, 9000, 1)
logits [[ 5.028011  -2.8555229  3.1239865 -7.5196486]]
Iteration 500 of 1000: loss=0.126 " + "l1=0.125" + "l2=0.000882 f=-0.555 shape=(1, 9000, 1)
logits [[ 5.020982  -2.8539908  3.1201108 -7.5083513]]
Iteration 600 of 1000: loss=0.126 " + "l1=0.125" + "l2=0.000971 f=-0.555 shape=(1, 9000, 1)
logits [[ 5.0140505 -2.8523657  3.116005  -7.4970384]]
Iteration 700 of 1000: loss=0.126 " + "l1=0.125" + "l2=0.00107 f=-0.554 shape=(1, 9000, 1)
logits [[ 5.007394  -2.8507583  3.1118765 -7.486062 ]]
Iteration 800 of 1000: loss=0.126 " + "l1=0.125" + "l2=0.00126 f=-0.554 shape=(1, 9000, 1)
logits [[ 5.000797  -2.849176   3.1077592 -7.475126 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.27 " + "l1=1.27" + "l2=0 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.109321  -2.8718607  3.1561844 -7.636335 ]]
Iteration 100 of 1000: loss=1.2 " + "l1=1.14" + "l2=0.0531 f=-0.532 shape=(1, 9000, 1)
logits [[ 4.5675216 -2.7899325  2.9597065 -6.865113 ]]
Iteration 200 of 1000: loss=1.17 " + "l1=1.1" + "l2=0.07 f=-0.525 shape=(1, 9000, 1)
logits [[ 4.386137  -2.7839112  2.8913813 -6.593278 ]]
Iteration 300 of 1000: loss=1.14 " + "l1=1.07" + "l2=0.0795 f=-0.517 shape=(1, 9000, 1)
logits [[ 4.2589617 -2.769523   2.838043  -6.394678 ]]
Iteration 400 of 1000: loss=1.12 " + "l1=1.03" + "l2=0.0897 f=-0.509 shape=(1, 9000, 1)
logits [[ 4.133951  -2.7498133  2.7822175 -6.201933 ]]
Iteration 500 of 1000: loss=1.1 " + "l1=1.01" + "l2=0.0974 f=-0.503 shape=(1, 9000, 1)
logits [[ 4.0205197 -2.7298572  2.7281885 -6.032025 ]]
Iteration 600 of 1000: loss=1.08 " + "l1=0.977" + "l2=0.105 f=-0.498 shape=(1, 9000, 1)
logits [[ 3.9099014 -2.7089844  2.670423  -5.864336 ]]
Iteration 700 of 1000: loss=1.06 " + "l1=0.949" + "l2=0.114 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.798084  -2.6833358  2.612906  -5.692318 ]]
Iteration 800 of 1000: loss=1.04 " + "l1=0.926" + "l2=0.119 f=-0.486 shape=(1, 9000, 1)
logits [[ 3.7056897 -2.6610765  2.5627108 -5.551558 ]]
Iteration 900 of 1000: loss=1.03 " + "l1=0.901" + "l2=0.125 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.6101778 -2.6412263  2.5098755 -5.403018 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.7 " + "l1=12.7" + "l2=0 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.109321  -2.8718607  3.1561844 -7.636335 ]]
Iteration 100 of 1000: loss=6.85 " + "l1=4.41" + "l2=2.44 f=-0.358 shape=(1, 9000, 1)
logits [[ 1.8184158 -2.480806   1.8187342 -2.5880473]]
Iteration 200 of 1000: loss=5.29 " + "l1=2.7" + "l2=2.59 f=-0.277 shape=(1, 9000, 1)
logits [[ 1.2322241 -2.1108606  1.2343854 -1.4628742]]
Iteration 300 of 1000: loss=4.35 " + "l1=1.49" + "l2=2.85 f=-0.197 shape=(1, 9000, 1)
logits [[ 0.8131168  -1.7840232   0.837828   -0.65448606]]
Iteration 400 of 1000: loss=3.52 " + "l1=0.413" + "l2=3.11 f=-0.15 shape=(1, 9000, 1)
logits [[ 0.43770683 -1.5171616   0.44695565  0.03369983]]
Iteration 500 of 1000: loss=2.94 " + "l1=0.00893" + "l2=2.94 f=-0.13 shape=(1, 9000, 1)
logits [[ 0.2897716 -1.4227668  0.3104702  0.3015392]]
Iteration 600 of 1000: loss=2.66 " + "l1=0.0356" + "l2=2.63 f=-0.128 shape=(1, 9000, 1)
logits [[ 0.31207892 -1.4315913   0.32248962  0.28693497]]
Iteration 700 of 1000: loss=2.45 " + "l1=0" + "l2=2.45 f=-0.115 shape=(1, 9000, 1)
logits [[ 0.31030366 -1.4166784   0.31623164  0.3314559 ]]
Iteration 800 of 1000: loss=2.26 " + "l1=0.0054" + "l2=2.25 f=-0.106 shape=(1, 9000, 1)
logits [[ 0.31613803 -1.3998635   0.3322701   0.32687098]]
Iteration 900 of 1000: loss=2.1 " + "l1=0" + "l2=2.1 f=-0.095 shape=(1, 9000, 1)
logits [[ 0.32643008 -1.3756052   0.3259806   0.34310412]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.01 " + "l1=7.01" + "l2=0 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.109321  -2.8718607  3.1561844 -7.636335 ]]
Iteration 100 of 1000: loss=4.82 " + "l1=3.69" + "l2=1.13 f=-0.434 shape=(1, 9000, 1)
logits [[ 2.7034352 -2.6662302  2.2399192 -4.0139656]]
Iteration 200 of 1000: loss=3.92 " + "l1=2.55" + "l2=1.36 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.9079915 -2.5814652  1.9083693 -2.7368808]]
Iteration 300 of 1000: loss=3.47 " + "l1=2.07" + "l2=1.4 f=-0.326 shape=(1, 9000, 1)
logits [[ 1.6220298 -2.4067302  1.6193296 -2.1368818]]
Iteration 400 of 1000: loss=3.15 " + "l1=1.68" + "l2=1.47 f=-0.277 shape=(1, 9000, 1)
logits [[ 1.3953114 -2.240526   1.3949754 -1.6559114]]
Iteration 500 of 1000: loss=2.88 " + "l1=1.4" + "l2=1.48 f=-0.233 shape=(1, 9000, 1)
logits [[ 1.254497  -2.1568096  1.2565262 -1.2879351]]
Iteration 600 of 1000: loss=2.64 " + "l1=1.12" + "l2=1.52 f=-0.186 shape=(1, 9000, 1)
logits [[ 1.0950859  -2.0171356   1.103417   -0.92665625]]
Iteration 700 of 1000: loss=2.43 " + "l1=0.86" + "l2=1.57 f=-0.149 shape=(1, 9000, 1)
logits [[ 0.9508209  -1.882357    0.9494601  -0.61208665]]
Iteration 800 of 1000: loss=2.24 " + "l1=0.599" + "l2=1.64 f=-0.121 shape=(1, 9000, 1)
logits [[ 0.78595966 -1.7461447   0.78117955 -0.30327386]]
Iteration 900 of 1000: loss=2.07 " + "l1=0.406" + "l2=1.67 f=-0.0945 shape=(1, 9000, 1)
logits [[ 0.6631058  -1.6266956   0.66116923 -0.07571571]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=9.88 " + "l1=9.88" + "l2=0 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.109321  -2.8718607  3.1561844 -7.636335 ]]
Iteration 100 of 1000: loss=5.93 " + "l1=4.03" + "l2=1.89 f=-0.393 shape=(1, 9000, 1)
logits [[ 2.096858  -2.5973282  2.036417  -3.1095054]]
Iteration 200 of 1000: loss=4.7 " + "l1=2.73" + "l2=1.97 f=-0.33 shape=(1, 9000, 1)
logits [[ 1.509554  -2.3337147  1.514655  -2.0121307]]
Iteration 300 of 1000: loss=4.04 " + "l1=2.05" + "l2=1.99 f=-0.262 shape=(1, 9000, 1)
logits [[ 1.2441996 -2.1578705  1.255297  -1.3909717]]
Iteration 400 of 1000: loss=3.56 " + "l1=1.5" + "l2=2.06 f=-0.202 shape=(1, 9000, 1)
logits [[ 1.0488067 -2.031394   1.0537513 -0.8796765]]
Iteration 500 of 1000: loss=3.14 " + "l1=0.983" + "l2=2.16 f=-0.155 shape=(1, 9000, 1)
logits [[ 0.83015054 -1.8482939   0.8343668  -0.43455392]]
Iteration 600 of 1000: loss=2.74 " + "l1=0.399" + "l2=2.34 f=-0.124 shape=(1, 9000, 1)
logits [[ 0.54104894 -1.6066031   0.54281366  0.02827378]]
Iteration 700 of 1000: loss=2.38 " + "l1=0.0349" + "l2=2.35 f=-0.106 shape=(1, 9000, 1)
logits [[ 0.35699502 -1.4444504   0.35191104  0.31192303]]
Iteration 800 of 1000: loss=2.13 " + "l1=0.0183" + "l2=2.11 f=-0.0976 shape=(1, 9000, 1)
logits [[ 0.35439196 -1.4281309   0.35254106  0.3307978 ]]
Iteration 900 of 1000: loss=1.94 " + "l1=0" + "l2=1.94 f=-0.0853 shape=(1, 9000, 1)
logits [[ 0.3537257  -1.4178623   0.35931143  0.36368233]]
--- 306.692174911499 seconds ---
Adv result:3
