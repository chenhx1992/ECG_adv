Updating f389245..912353f
Fast-forward
 cw_eva_diff.py => cw_eval.py |   0
 cw_eval_diff.py              | 159 +++++++++++++++++++++++++++++++++++++++++++
 myattacks_diff.py            |   2 +-
 myattacks_tf_diff.py         |  32 +++------
 plotone.py                   |  26 ++++++-
 5 files changed, 193 insertions(+), 26 deletions(-)
 rename cw_eva_diff.py => cw_eval.py (100%)
 create mode 100644 cw_eval_diff.py
Loading model
Loading ground truth file
Attack diff is running...
Loading record A00004
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0145 " + "l1=0.0145" + "l2=0 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.646616    0.19848101  1.4489509  -6.538589  ]]
Iteration 100 of 1000: loss=0.0138 " + "l1=0.0134" + "l2=0.000411 f=-0.816 shape=(1, 9000, 1)
logits [[ 1.58164     0.23926131  1.4418565  -6.5254908 ]]
Iteration 200 of 1000: loss=0.0137 " + "l1=0.0132" + "l2=0.000447 f=-0.817 shape=(1, 9000, 1)
logits [[ 1.5705149   0.24731942  1.43979    -6.523704  ]]
Iteration 300 of 1000: loss=0.0136 " + "l1=0.013" + "l2=0.000578 f=-0.818 shape=(1, 9000, 1)
logits [[ 1.5572958   0.25604028  1.4376827  -6.52103   ]]
Iteration 400 of 1000: loss=0.0135 " + "l1=0.0128" + "l2=0.000678 f=-0.818 shape=(1, 9000, 1)
logits [[ 1.5453857  0.2635086  1.4358203 -6.518165 ]]
Iteration 500 of 1000: loss=0.0134 " + "l1=0.0126" + "l2=0.000793 f=-0.819 shape=(1, 9000, 1)
logits [[ 1.5347649   0.27016497  1.4342806  -6.515341  ]]
Iteration 600 of 1000: loss=0.0134 " + "l1=0.0125" + "l2=0.000948 f=-0.82 shape=(1, 9000, 1)
logits [[ 1.5249027   0.27664906  1.4329882  -6.513194  ]]
Iteration 700 of 1000: loss=0.0135 " + "l1=0.0123" + "l2=0.00113 f=-0.82 shape=(1, 9000, 1)
logits [[ 1.516194    0.28243813  1.4318594  -6.5110927 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.145 " + "l1=0.145" + "l2=0 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.646616    0.19848101  1.4489509  -6.538589  ]]
Iteration 100 of 1000: loss=0.104 " + "l1=0.0898" + "l2=0.0143 f=-0.835 shape=(1, 9000, 1)
logits [[ 1.3563952   0.45912832  1.3566414  -6.513353  ]]
Iteration 200 of 1000: loss=0.0952 " + "l1=0.0767" + "l2=0.0185 f=-0.84 shape=(1, 9000, 1)
logits [[ 1.3029417   0.53963107  1.3067144  -6.5109124 ]]
Iteration 300 of 1000: loss=0.0902 " + "l1=0.0686" + "l2=0.0217 f=-0.842 shape=(1, 9000, 1)
logits [[ 1.2689818   0.58661413  1.2723882  -6.4940314 ]]
Iteration 400 of 1000: loss=0.087 " + "l1=0.0624" + "l2=0.0246 f=-0.841 shape=(1, 9000, 1)
logits [[ 1.2397593  0.6208609  1.2447519 -6.46911  ]]
Iteration 500 of 1000: loss=0.0847 " + "l1=0.0579" + "l2=0.0268 f=-0.84 shape=(1, 9000, 1)
logits [[ 1.2179445  0.6443769  1.2234823 -6.445806 ]]
Iteration 600 of 1000: loss=0.083 " + "l1=0.0549" + "l2=0.0282 f=-0.838 shape=(1, 9000, 1)
logits [[ 1.2048038   0.65841854  1.2069827  -6.422745  ]]
Iteration 700 of 1000: loss=0.0816 " + "l1=0.0524" + "l2=0.0292 f=-0.837 shape=(1, 9000, 1)
logits [[ 1.1867917  0.6708795  1.1952124 -6.4010215]]
Iteration 800 of 1000: loss=0.0801 " + "l1=0.0503" + "l2=0.0298 f=-0.835 shape=(1, 9000, 1)
logits [[ 1.1823179   0.68001735  1.1828744  -6.3863125 ]]
Iteration 900 of 1000: loss=0.0786 " + "l1=0.0483" + "l2=0.0303 f=-0.834 shape=(1, 9000, 1)
logits [[ 1.1711537   0.69011724  1.1734434  -6.370321  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.45 " + "l1=1.45" + "l2=0 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.646616    0.19848101  1.4489509  -6.538589  ]]
Iteration 100 of 1000: loss=0.162 " + "l1=0" + "l2=0.162 f=-0.897 shape=(1, 9000, 1)
logits [[ 0.6861966  1.0941067  1.0873697 -6.456164 ]]
Iteration 200 of 1000: loss=0.125 " + "l1=0" + "l2=0.125 f=-0.893 shape=(1, 9000, 1)
logits [[ 0.69198406  1.0763075   1.0713971  -6.4117584 ]]
Iteration 300 of 1000: loss=0.111 " + "l1=0" + "l2=0.111 f=-0.887 shape=(1, 9000, 1)
logits [[ 0.7000711  1.0638402  1.0589354 -6.3705344]]
Iteration 400 of 1000: loss=0.103 " + "l1=0" + "l2=0.103 f=-0.88 shape=(1, 9000, 1)
logits [[ 0.7083693  1.055131   1.0529007 -6.338086 ]]
Iteration 500 of 1000: loss=0.1 " + "l1=0.00312" + "l2=0.0972 f=-0.875 shape=(1, 9000, 1)
logits [[ 0.71904856  1.0453725   1.048494   -6.314419  ]]
Iteration 600 of 1000: loss=0.0962 " + "l1=0" + "l2=0.0962 f=-0.873 shape=(1, 9000, 1)
logits [[ 0.7147091  1.0495543  1.0400279 -6.296107 ]]
Iteration 700 of 1000: loss=0.0929 " + "l1=0" + "l2=0.0929 f=-0.87 shape=(1, 9000, 1)
logits [[ 0.7190998  1.0442419  1.0357883 -6.27832  ]]
Iteration 800 of 1000: loss=0.0895 " + "l1=0" + "l2=0.0895 f=-0.867 shape=(1, 9000, 1)
logits [[ 0.7265959  1.0358318  1.0336275 -6.2624717]]
Iteration 900 of 1000: loss=0.0884 " + "l1=0" + "l2=0.0884 f=-0.864 shape=(1, 9000, 1)
logits [[ 0.72123307  1.0382241   1.0272124  -6.2443523 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.796 " + "l1=0.796" + "l2=0 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.646616    0.19848101  1.4489509  -6.538589  ]]
Iteration 100 of 1000: loss=0.161 " + "l1=0.00177" + "l2=0.159 f=-0.898 shape=(1, 9000, 1)
logits [[ 0.70158225  1.0889797   1.0921901  -6.472854  ]]
Iteration 200 of 1000: loss=0.122 " + "l1=0.000445" + "l2=0.122 f=-0.893 shape=(1, 9000, 1)
logits [[ 0.698516   1.0719678  1.0727776 -6.4165926]]
Iteration 300 of 1000: loss=0.108 " + "l1=0" + "l2=0.108 f=-0.886 shape=(1, 9000, 1)
logits [[ 0.6988869  1.0633899  1.06105   -6.365857 ]]
Iteration 400 of 1000: loss=0.1 " + "l1=0.000491" + "l2=0.1 f=-0.879 shape=(1, 9000, 1)
logits [[ 0.71240056  1.0520828   1.0529764  -6.335372  ]]
Iteration 500 of 1000: loss=0.0974 " + "l1=0" + "l2=0.0974 f=-0.875 shape=(1, 9000, 1)
logits [[ 0.7116071  1.0527326  1.0453231 -6.311032 ]]
Iteration 600 of 1000: loss=0.0928 " + "l1=0" + "l2=0.0928 f=-0.871 shape=(1, 9000, 1)
logits [[ 0.72228175  1.0435414   1.0417283  -6.2929473 ]]
Iteration 700 of 1000: loss=0.0907 " + "l1=0" + "l2=0.0907 f=-0.869 shape=(1, 9000, 1)
logits [[ 0.7201762  1.0440727  1.0347973 -6.2755985]]
Iteration 800 of 1000: loss=0.0878 " + "l1=0" + "l2=0.0878 f=-0.866 shape=(1, 9000, 1)
logits [[ 0.72547364  1.0373362   1.0315058  -6.259273  ]]
Iteration 900 of 1000: loss=0.0851 " + "l1=0" + "l2=0.0851 f=-0.863 shape=(1, 9000, 1)
logits [[ 0.7314327  1.031829   1.027894  -6.2440495]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.471 " + "l1=0.471" + "l2=0 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.646616    0.19848101  1.4489509  -6.538589  ]]
Iteration 100 of 1000: loss=0.181 " + "l1=0.0532" + "l2=0.128 f=-0.883 shape=(1, 9000, 1)
logits [[ 0.86094224  0.97023803  1.1340263  -6.4964824 ]]
Iteration 200 of 1000: loss=0.125 " + "l1=0.00161" + "l2=0.123 f=-0.894 shape=(1, 9000, 1)
logits [[ 0.7111337  1.0707214  1.0756857 -6.4348087]]
Iteration 300 of 1000: loss=0.109 " + "l1=0" + "l2=0.109 f=-0.886 shape=(1, 9000, 1)
logits [[ 0.7009197  1.0669091  1.0610058 -6.374143 ]]
Iteration 400 of 1000: loss=0.0997 " + "l1=0.000423" + "l2=0.0992 f=-0.88 shape=(1, 9000, 1)
logits [[ 0.71769655  1.0518895   1.0531923  -6.341584  ]]
Iteration 500 of 1000: loss=0.0954 " + "l1=0.00142" + "l2=0.094 f=-0.875 shape=(1, 9000, 1)
logits [[ 0.7280916  1.0432137  1.0475714 -6.317444 ]]
Iteration 600 of 1000: loss=0.0919 " + "l1=0" + "l2=0.0919 f=-0.872 shape=(1, 9000, 1)
logits [[ 0.72684807  1.0461149   1.0400699  -6.3005075 ]]
Iteration 700 of 1000: loss=0.0891 " + "l1=0.00201" + "l2=0.0871 f=-0.868 shape=(1, 9000, 1)
logits [[ 0.7406527  1.0329105  1.0390905 -6.2846284]]
Iteration 800 of 1000: loss=0.0854 " + "l1=0.000362" + "l2=0.085 f=-0.865 shape=(1, 9000, 1)
logits [[ 0.74276495  1.0322648   1.0333796  -6.2671328 ]]
Iteration 900 of 1000: loss=0.0834 " + "l1=0" + "l2=0.0834 f=-0.862 shape=(1, 9000, 1)
logits [[ 0.7429929  1.0315719  1.0288364 -6.2504115]]
--- 276.91208124160767 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00198 " + "l1=0.00198" + "l2=0 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.646616    0.19848101  1.4489509  -6.538589  ]]
Iteration 100 of 1000: loss=0.00165 " + "l1=0.00139" + "l2=0.000259 f=-0.814 shape=(1, 9000, 1)
logits [[ 1.5975387   0.21285276  1.4584585  -6.5264053 ]]
Iteration 200 of 1000: loss=0.00158 " + "l1=0.00133" + "l2=0.000242 f=-0.815 shape=(1, 9000, 1)
logits [[ 1.5925474   0.21436766  1.4592215  -6.524703  ]]
Iteration 300 of 1000: loss=0.00153 " + "l1=0.00124" + "l2=0.000294 f=-0.815 shape=(1, 9000, 1)
logits [[ 1.5848988   0.21643068  1.4609162  -6.5225897 ]]
Iteration 400 of 1000: loss=0.00151 " + "l1=0.00115" + "l2=0.000362 f=-0.815 shape=(1, 9000, 1)
logits [[ 1.5776157   0.21849267  1.4626945  -6.520703  ]]
Iteration 500 of 1000: loss=0.0015 " + "l1=0.00107" + "l2=0.000431 f=-0.816 shape=(1, 9000, 1)
logits [[ 1.5710249   0.22036864  1.4644927  -6.5191236 ]]
Iteration 600 of 1000: loss=0.00147 " + "l1=0.000988" + "l2=0.000487 f=-0.816 shape=(1, 9000, 1)
logits [[ 1.5649832   0.22201622  1.4662273  -6.5179305 ]]
Iteration 700 of 1000: loss=0.00152 " + "l1=0.000917" + "l2=0.0006 f=-0.816 shape=(1, 9000, 1)
logits [[ 1.5596228   0.22340168  1.4679081  -6.516823  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0198 " + "l1=0.0198" + "l2=0 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.646616    0.19848101  1.4489509  -6.538589  ]]
Iteration 100 of 1000: loss=0.00302 " + "l1=0.000135" + "l2=0.00288 f=-0.822 shape=(1, 9000, 1)
logits [[ 1.4835486   0.24517356  1.4821986  -6.4983053 ]]
Iteration 200 of 1000: loss=0.00215 " + "l1=7.78e-05" + "l2=0.00207 f=-0.822 shape=(1, 9000, 1)
logits [[ 1.4821817   0.24694176  1.4814038  -6.4982285 ]]
Iteration 300 of 1000: loss=0.00192 " + "l1=0" + "l2=0.00192 f=-0.822 shape=(1, 9000, 1)
logits [[ 1.4770788   0.24767129  1.4830498  -6.4955196 ]]
Iteration 400 of 1000: loss=0.0017 " + "l1=0" + "l2=0.0017 f=-0.821 shape=(1, 9000, 1)
logits [[ 1.4824758   0.24570924  1.4831481  -6.496629  ]]
Iteration 500 of 1000: loss=0.0017 " + "l1=0" + "l2=0.0017 f=-0.821 shape=(1, 9000, 1)
logits [[ 1.48112     0.24557842  1.4848475  -6.496151  ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0109 " + "l1=0.0109" + "l2=0 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.646616    0.19848101  1.4489509  -6.538589  ]]
Iteration 100 of 1000: loss=0.0031 " + "l1=7.93e-06" + "l2=0.00309 f=-0.822 shape=(1, 9000, 1)
logits [[ 1.4825548   0.24492255  1.4824106  -6.4973207 ]]
Iteration 200 of 1000: loss=0.00218 " + "l1=5.74e-05" + "l2=0.00212 f=-0.822 shape=(1, 9000, 1)
logits [[ 1.4823529   0.24701533  1.4813098  -6.498452  ]]
Iteration 300 of 1000: loss=0.00183 " + "l1=0" + "l2=0.00183 f=-0.822 shape=(1, 9000, 1)
logits [[ 1.481142    0.24684891  1.4819564  -6.4970107 ]]
Iteration 400 of 1000: loss=0.00164 " + "l1=0" + "l2=0.00164 f=-0.821 shape=(1, 9000, 1)
logits [[ 1.481874    0.24589814  1.483047   -6.496447  ]]
Iteration 500 of 1000: loss=0.00167 " + "l1=0" + "l2=0.00167 f=-0.821 shape=(1, 9000, 1)
logits [[ 1.4827154   0.24517587  1.4842201  -6.4966297 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00642 " + "l1=0.00642" + "l2=0 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.646616    0.19848101  1.4489509  -6.538589  ]]
Iteration 100 of 1000: loss=0.00341 " + "l1=0.00185" + "l2=0.00156 f=-0.819 shape=(1, 9000, 1)
logits [[ 1.5296835   0.23152308  1.4727902  -6.5092773 ]]
Iteration 200 of 1000: loss=0.00246 " + "l1=0.0004" + "l2=0.00206 f=-0.821 shape=(1, 9000, 1)
logits [[ 1.4922807   0.24368285  1.4799608  -6.5009704 ]]
Iteration 300 of 1000: loss=0.0019 " + "l1=3.57e-05" + "l2=0.00186 f=-0.822 shape=(1, 9000, 1)
logits [[ 1.4828236   0.24668299  1.481726   -6.498568  ]]
Iteration 400 of 1000: loss=0.00171 " + "l1=0" + "l2=0.00171 f=-0.822 shape=(1, 9000, 1)
logits [[ 1.4819896   0.24608116  1.4827402  -6.497085  ]]
Iteration 500 of 1000: loss=0.00159 " + "l1=0" + "l2=0.00159 f=-0.821 shape=(1, 9000, 1)
logits [[ 1.4835899   0.24500495  1.4836551  -6.497014  ]]
Iteration 600 of 1000: loss=0.00156 " + "l1=1.8e-05" + "l2=0.00154 f=-0.821 shape=(1, 9000, 1)
logits [[ 1.4852041   0.24409132  1.4846488  -6.4974732 ]]
Iteration 700 of 1000: loss=0.00143 " + "l1=1.74e-05" + "l2=0.00141 f=-0.821 shape=(1, 9000, 1)
logits [[ 1.4863096   0.24342005  1.4857743  -6.498086  ]]
Iteration 800 of 1000: loss=0.00155 " + "l1=2.78e-05" + "l2=0.00152 f=-0.82 shape=(1, 9000, 1)
logits [[ 1.4876494   0.24280144  1.4867944  -6.4988914 ]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0042 " + "l1=0.0042" + "l2=0 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.646616    0.19848101  1.4489509  -6.538589  ]]
Iteration 100 of 1000: loss=0.00283 " + "l1=0.00204" + "l2=0.000782 f=-0.817 shape=(1, 9000, 1)
logits [[ 1.5621619   0.22245522  1.4660158  -6.517829  ]]
Iteration 200 of 1000: loss=0.00247 " + "l1=0.00154" + "l2=0.000928 f=-0.818 shape=(1, 9000, 1)
logits [[ 1.5419132   0.22916071  1.4694974  -6.5129    ]]
Iteration 300 of 1000: loss=0.00219 " + "l1=0.00102" + "l2=0.00117 f=-0.819 shape=(1, 9000, 1)
logits [[ 1.5217892   0.23486958  1.4739598  -6.5076838 ]]
Iteration 400 of 1000: loss=0.00193 " + "l1=0.000535" + "l2=0.00139 f=-0.82 shape=(1, 9000, 1)
logits [[ 1.5033187   0.24007635  1.4781505  -6.5029006 ]]
Iteration 500 of 1000: loss=0.00173 " + "l1=9.65e-05" + "l2=0.00163 f=-0.821 shape=(1, 9000, 1)
logits [[ 1.4868636   0.24421571  1.4823216  -6.4983597 ]]
Iteration 600 of 1000: loss=0.00156 " + "l1=9.67e-06" + "l2=0.00155 f=-0.821 shape=(1, 9000, 1)
logits [[ 1.4843761   0.24457769  1.4839209  -6.497569  ]]
Iteration 700 of 1000: loss=0.00156 " + "l1=5.08e-06" + "l2=0.00155 f=-0.821 shape=(1, 9000, 1)
logits [[ 1.4852681   0.24389221  1.485029   -6.4978004 ]]
Iteration 800 of 1000: loss=0.00161 " + "l1=2.65e-05" + "l2=0.00159 f=-0.821 shape=(1, 9000, 1)
logits [[ 1.4872504   0.24297215  1.4860054  -6.49869   ]]
--- 196.1180021762848 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0819 " + "l1=0.0819" + "l2=0 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.646616    0.19848101  1.4489509  -6.538589  ]]
Iteration 100 of 1000: loss=0.0811 " + "l1=0.0807" + "l2=0.000421 f=-0.809 shape=(1, 9000, 1)
logits [[ 1.5872375   0.21360967  1.4440318  -6.48182   ]]
Iteration 200 of 1000: loss=0.0809 " + "l1=0.0805" + "l2=0.000458 f=-0.809 shape=(1, 9000, 1)
logits [[ 1.5761967   0.21637695  1.4424187  -6.4698462 ]]
Iteration 300 of 1000: loss=0.0808 " + "l1=0.0802" + "l2=0.000577 f=-0.808 shape=(1, 9000, 1)
logits [[ 1.563141    0.21953365  1.4403521  -6.455115  ]]
Iteration 400 of 1000: loss=0.0806 " + "l1=0.0799" + "l2=0.000712 f=-0.807 shape=(1, 9000, 1)
logits [[ 1.5508704   0.22242017  1.4381036  -6.4403796 ]]
Iteration 500 of 1000: loss=0.0805 " + "l1=0.0797" + "l2=0.00087 f=-0.807 shape=(1, 9000, 1)
logits [[ 1.539463    0.22484119  1.4358927  -6.426446  ]]
Iteration 600 of 1000: loss=0.0804 " + "l1=0.0794" + "l2=0.001 f=-0.806 shape=(1, 9000, 1)
logits [[ 1.5290816   0.22688726  1.4338266  -6.4133744 ]]
Iteration 700 of 1000: loss=0.0804 " + "l1=0.0792" + "l2=0.00115 f=-0.805 shape=(1, 9000, 1)
logits [[ 1.520229    0.22851603  1.431909   -6.401231  ]]
Iteration 800 of 1000: loss=0.0804 " + "l1=0.079" + "l2=0.00137 f=-0.804 shape=(1, 9000, 1)
logits [[ 1.5124581   0.22991441  1.4300429  -6.389683  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.819 " + "l1=0.819" + "l2=0 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.646616    0.19848101  1.4489509  -6.538589  ]]
Iteration 100 of 1000: loss=0.77 " + "l1=0.754" + "l2=0.0153 f=-0.787 shape=(1, 9000, 1)
logits [[ 1.3790225  0.2587807  1.3778888 -6.164609 ]]
Iteration 200 of 1000: loss=0.751 " + "l1=0.73" + "l2=0.021 f=-0.769 shape=(1, 9000, 1)
logits [[ 1.3201611   0.26418483  1.3225464  -5.9818153 ]]
Iteration 300 of 1000: loss=0.735 " + "l1=0.707" + "l2=0.0283 f=-0.749 shape=(1, 9000, 1)
logits [[ 1.2664894  0.2691294  1.2670869 -5.799027 ]]
Iteration 400 of 1000: loss=0.72 " + "l1=0.685" + "l2=0.0351 f=-0.733 shape=(1, 9000, 1)
logits [[ 1.2116154   0.28009522  1.2134134  -5.6386046 ]]
Iteration 500 of 1000: loss=0.707 " + "l1=0.666" + "l2=0.0409 f=-0.72 shape=(1, 9000, 1)
logits [[ 1.1626377   0.28847215  1.1640154  -5.4943647 ]]
Iteration 600 of 1000: loss=0.694 " + "l1=0.648" + "l2=0.0457 f=-0.706 shape=(1, 9000, 1)
logits [[ 1.1219355   0.28894424  1.1233726  -5.3600616 ]]
Iteration 700 of 1000: loss=0.682 " + "l1=0.633" + "l2=0.0497 f=-0.694 shape=(1, 9000, 1)
logits [[ 1.086569    0.28866962  1.0872644  -5.238923  ]]
Iteration 800 of 1000: loss=0.671 " + "l1=0.618" + "l2=0.0532 f=-0.683 shape=(1, 9000, 1)
logits [[ 1.0530744   0.28817126  1.0544512  -5.127565  ]]
Iteration 900 of 1000: loss=0.661 " + "l1=0.605" + "l2=0.056 f=-0.672 shape=(1, 9000, 1)
logits [[ 1.0217031   0.28735563  1.0251333  -5.022398  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.19 " + "l1=8.19" + "l2=0 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.646616    0.19848101  1.4489509  -6.538589  ]]
Iteration 100 of 1000: loss=5.14 " + "l1=3.77" + "l2=1.38 f=-0.522 shape=(1, 9000, 1)
logits [[ 0.24351522  0.34703588  0.5437362  -3.2221446 ]]
Iteration 200 of 1000: loss=3.88 " + "l1=2.19" + "l2=1.69 f=-0.407 shape=(1, 9000, 1)
logits [[-0.18893458  0.21957088  0.26631162 -1.9246424 ]]
Iteration 300 of 1000: loss=2.83 " + "l1=0.972" + "l2=1.85 f=-0.32 shape=(1, 9000, 1)
logits [[-0.42640117  0.03081391  0.04298866 -0.9290831 ]]
Iteration 400 of 1000: loss=1.67 " + "l1=0.00379" + "l2=1.67 f=-0.277 shape=(1, 9000, 1)
logits [[-0.62374437 -0.16575721 -0.15759626 -0.16138607]]
Iteration 500 of 1000: loss=1.24 " + "l1=0.00297" + "l2=1.24 f=-0.282 shape=(1, 9000, 1)
logits [[-0.6250967  -0.17681569 -0.1609944  -0.1639626 ]]
Iteration 600 of 1000: loss=1 " + "l1=0" + "l2=1 f=-0.284 shape=(1, 9000, 1)
logits [[-0.6153991  -0.24387951 -0.14524631 -0.13021466]]
Iteration 700 of 1000: loss=0.846 " + "l1=0.00532" + "l2=0.84 f=-0.287 shape=(1, 9000, 1)
logits [[-0.59588486 -0.32848012 -0.10963446 -0.11495585]]
Iteration 800 of 1000: loss=0.739 " + "l1=0" + "l2=0.739 f=-0.291 shape=(1, 9000, 1)
logits [[-0.598042   -0.40597123 -0.08250525 -0.07680877]]
Iteration 900 of 1000: loss=0.658 " + "l1=0" + "l2=0.658 f=-0.292 shape=(1, 9000, 1)
logits [[-0.58308166 -0.46955338 -0.05820675 -0.05630867]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.5 " + "l1=4.5" + "l2=0 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.646616    0.19848101  1.4489509  -6.538589  ]]
Iteration 100 of 1000: loss=3.47 " + "l1=3.08" + "l2=0.396 f=-0.63 shape=(1, 9000, 1)
logits [[ 0.91070616  0.3212706   0.9194097  -4.6728206 ]]
Iteration 200 of 1000: loss=2.88 " + "l1=2.25" + "l2=0.637 f=-0.532 shape=(1, 9000, 1)
logits [[ 0.40977257  0.35797563  0.59410137 -3.4905674 ]]
Iteration 300 of 1000: loss=2.51 " + "l1=1.77" + "l2=0.741 f=-0.473 shape=(1, 9000, 1)
logits [[ 0.15447336  0.3674189   0.40482125 -2.819292  ]]
Iteration 400 of 1000: loss=2.1 " + "l1=1.23" + "l2=0.875 f=-0.387 shape=(1, 9000, 1)
logits [[ 1.0968614e-03  2.2097027e-01  2.3264328e-01 -2.0011191e+00]]
Iteration 500 of 1000: loss=1.53 " + "l1=0.551" + "l2=0.979 f=-0.295 shape=(1, 9000, 1)
logits [[-0.13859172 -0.04212783  0.00145717 -1.0000594 ]]
Iteration 600 of 1000: loss=1.13 " + "l1=0.167" + "l2=0.96 f=-0.249 shape=(1, 9000, 1)
logits [[-0.27854893 -0.24457632 -0.08464254 -0.38768387]]
Iteration 700 of 1000: loss=0.795 " + "l1=0.00561" + "l2=0.79 f=-0.253 shape=(1, 9000, 1)
logits [[-0.40079597 -0.37676403 -0.111909   -0.12211382]]
Iteration 800 of 1000: loss=0.627 " + "l1=0" + "l2=0.627 f=-0.262 shape=(1, 9000, 1)
logits [[-0.4217685  -0.47092962 -0.08340313 -0.07015671]]
Iteration 900 of 1000: loss=0.516 " + "l1=0" + "l2=0.516 f=-0.266 shape=(1, 9000, 1)
logits [[-0.42255753 -0.5068038  -0.06819463 -0.06745628]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.66 " + "l1=2.66" + "l2=0 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.646616    0.19848101  1.4489509  -6.538589  ]]
Iteration 100 of 1000: loss=2.26 " + "l1=2.12" + "l2=0.142 f=-0.703 shape=(1, 9000, 1)
logits [[ 1.1309323  0.2998789  1.1386999 -5.382992 ]]
Iteration 200 of 1000: loss=2.05 " + "l1=1.83" + "l2=0.224 f=-0.637 shape=(1, 9000, 1)
logits [[ 0.91189736  0.31353182  0.9266795  -4.69947   ]]
Iteration 300 of 1000: loss=1.87 " + "l1=1.55" + "l2=0.321 f=-0.571 shape=(1, 9000, 1)
logits [[ 0.6997152   0.32577595  0.72618586 -4.0343165 ]]
Iteration 400 of 1000: loss=1.73 " + "l1=1.36" + "l2=0.362 f=-0.527 shape=(1, 9000, 1)
logits [[ 0.575254    0.31650496  0.59868497 -3.5992181 ]]
Iteration 500 of 1000: loss=1.59 " + "l1=1.18" + "l2=0.411 f=-0.48 shape=(1, 9000, 1)
logits [[ 0.43725964  0.306522    0.4850684  -3.1495533 ]]
Iteration 600 of 1000: loss=1.44 " + "l1=0.987" + "l2=0.455 f=-0.435 shape=(1, 9000, 1)
logits [[ 0.35267884  0.21106887  0.36664417 -2.671479  ]]
Iteration 700 of 1000: loss=1.23 " + "l1=0.713" + "l2=0.512 f=-0.369 shape=(1, 9000, 1)
logits [[ 0.25973573 -0.07337538  0.26552618 -1.9287478 ]]
Iteration 800 of 1000: loss=1.03 " + "l1=0.506" + "l2=0.523 f=-0.332 shape=(1, 9000, 1)
logits [[ 0.14940225 -0.25838876  0.16868848 -1.388138  ]]
Iteration 900 of 1000: loss=0.87 " + "l1=0.338" + "l2=0.533 f=-0.294 shape=(1, 9000, 1)
logits [[ 0.02811784 -0.3665396   0.09996887 -0.9390851 ]]
--- 282.33881521224976 seconds ---
Adv result:3
Loading record A00005
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0699 " + "l1=0.0699" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 4.4074287 -2.5798318  2.7787988 -6.3464317]]
Iteration 100 of 1000: loss=0.0694 " + "l1=0.0691" + "l2=0.000326 f=-0.433 shape=(1, 9000, 1)
logits [[ 4.358522  -2.5482476  2.7533054 -6.2940454]]
Iteration 200 of 1000: loss=0.0693 " + "l1=0.0689" + "l2=0.000329 f=-0.432 shape=(1, 9000, 1)
logits [[ 4.3503475 -2.5421247  2.7484477 -6.2855115]]
Iteration 300 of 1000: loss=0.0691 " + "l1=0.0687" + "l2=0.000396 f=-0.432 shape=(1, 9000, 1)
logits [[ 4.3388305 -2.5341952  2.7421854 -6.273095 ]]
Iteration 400 of 1000: loss=0.069 " + "l1=0.0685" + "l2=0.000496 f=-0.431 shape=(1, 9000, 1)
logits [[ 4.3262596 -2.5256782  2.7354617 -6.259421 ]]
Iteration 500 of 1000: loss=0.0689 " + "l1=0.0683" + "l2=0.000614 f=-0.43 shape=(1, 9000, 1)
logits [[ 4.313523  -2.517039   2.7286353 -6.245571 ]]
Iteration 600 of 1000: loss=0.0689 " + "l1=0.0681" + "l2=0.000728 f=-0.43 shape=(1, 9000, 1)
logits [[ 4.3032227 -2.5096512  2.7223942 -6.234274 ]]
Iteration 700 of 1000: loss=0.0688 " + "l1=0.0679" + "l2=0.000836 f=-0.429 shape=(1, 9000, 1)
logits [[ 4.2925034 -2.5017853  2.7156627 -6.222386 ]]
Iteration 800 of 1000: loss=0.0687 " + "l1=0.0678" + "l2=0.000969 f=-0.428 shape=(1, 9000, 1)
logits [[ 4.282147  -2.4939463  2.708903  -6.2108026]]
Iteration 900 of 1000: loss=0.0686 " + "l1=0.0676" + "l2=0.00104 f=-0.428 shape=(1, 9000, 1)
logits [[ 4.2721825 -2.486153   2.7023134 -6.199527 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.699 " + "l1=0.699" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 4.4074287 -2.5798318  2.7787988 -6.3464317]]
Iteration 100 of 1000: loss=0.654 " + "l1=0.631" + "l2=0.0225 f=-0.411 shape=(1, 9000, 1)
logits [[ 4.0162845 -2.2972648  2.561685  -5.925144 ]]
Iteration 200 of 1000: loss=0.636 " + "l1=0.606" + "l2=0.0295 f=-0.403 shape=(1, 9000, 1)
logits [[ 3.8663876 -2.1971183  2.4751823 -5.7561665]]
Iteration 300 of 1000: loss=0.621 " + "l1=0.587" + "l2=0.0339 f=-0.398 shape=(1, 9000, 1)
logits [[ 3.7433982 -2.124041   2.406554  -5.6173925]]
Iteration 400 of 1000: loss=0.606 " + "l1=0.567" + "l2=0.0388 f=-0.392 shape=(1, 9000, 1)
logits [[ 3.6254606 -2.0476236  2.3410318 -5.4869437]]
Iteration 500 of 1000: loss=0.593 " + "l1=0.549" + "l2=0.0432 f=-0.386 shape=(1, 9000, 1)
logits [[ 3.513259 -1.980653  2.281517 -5.36005 ]]
Iteration 600 of 1000: loss=0.579 " + "l1=0.531" + "l2=0.0479 f=-0.384 shape=(1, 9000, 1)
logits [[ 3.3937478 -1.9191903  2.2206416 -5.2314277]]
Iteration 700 of 1000: loss=0.568 " + "l1=0.515" + "l2=0.053 f=-0.385 shape=(1, 9000, 1)
logits [[ 3.2820575 -1.8690461  2.1678784 -5.121917 ]]
Iteration 800 of 1000: loss=0.557 " + "l1=0.5" + "l2=0.0568 f=-0.387 shape=(1, 9000, 1)
logits [[ 3.1786926 -1.8239309  2.1240766 -5.028193 ]]
Iteration 900 of 1000: loss=0.546 " + "l1=0.487" + "l2=0.0596 f=-0.389 shape=(1, 9000, 1)
logits [[ 3.0788693 -1.7863317  2.0865808 -4.934116 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.99 " + "l1=6.99" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 4.4074287 -2.5798318  2.7787988 -6.3464317]]
Iteration 100 of 1000: loss=4.12 " + "l1=2.91" + "l2=1.21 f=-0.39 shape=(1, 9000, 1)
logits [[ 1.7676873 -1.1435696  1.4615259 -3.6460485]]
Iteration 200 of 1000: loss=3.19 " + "l1=1.85" + "l2=1.35 f=-0.355 shape=(1, 9000, 1)
logits [[ 1.0922168 -0.7548421  1.0853759 -2.8430452]]
Iteration 300 of 1000: loss=2.81 " + "l1=1.55" + "l2=1.26 f=-0.342 shape=(1, 9000, 1)
logits [[ 0.9216812  -0.62482476  0.9194607  -2.582418  ]]
Iteration 400 of 1000: loss=2.55 " + "l1=1.38" + "l2=1.18 f=-0.341 shape=(1, 9000, 1)
logits [[ 0.8209451 -0.5491274  0.8265315 -2.463009 ]]
Iteration 500 of 1000: loss=2.37 " + "l1=1.22" + "l2=1.15 f=-0.341 shape=(1, 9000, 1)
logits [[ 0.73542696 -0.4810667   0.73399913 -2.3533509 ]]
Iteration 600 of 1000: loss=2.21 " + "l1=1.05" + "l2=1.16 f=-0.33 shape=(1, 9000, 1)
logits [[ 0.65294605 -0.39279824  0.6515681  -2.2334409 ]]
Iteration 700 of 1000: loss=2.04 " + "l1=0.859" + "l2=1.18 f=-0.323 shape=(1, 9000, 1)
logits [[ 0.5564035  -0.29298186  0.56621784 -2.1196887 ]]
Iteration 800 of 1000: loss=1.95 " + "l1=0.781" + "l2=1.16 f=-0.32 shape=(1, 9000, 1)
logits [[ 0.5065448  -0.25994796  0.5215488  -2.0474741 ]]
Iteration 900 of 1000: loss=1.89 " + "l1=0.745" + "l2=1.15 f=-0.315 shape=(1, 9000, 1)
logits [[ 0.4917452  -0.24657463  0.49834755 -2.004143  ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=69.9 " + "l1=69.9" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 4.4074287 -2.5798318  2.7787988 -6.3464317]]
Iteration 100 of 1000: loss=10.9 " + "l1=1.59" + "l2=9.31 f=-0.285 shape=(1, 9000, 1)
logits [[ 0.24435529  0.12912698  0.28822005 -1.802003  ]]
Iteration 200 of 1000: loss=6.27 " + "l1=0" + "l2=6.27 f=-0.28 shape=(1, 9000, 1)
logits [[ 0.1770053   0.26457736  0.25142896 -1.8134576 ]]
Iteration 300 of 1000: loss=5.13 " + "l1=0" + "l2=5.13 f=-0.271 shape=(1, 9000, 1)
logits [[ 0.22237763  0.27652872  0.26433763 -1.8471363 ]]
Iteration 400 of 1000: loss=4.5 " + "l1=0" + "l2=4.5 f=-0.268 shape=(1, 9000, 1)
logits [[ 0.23587713  0.29600507  0.28460178 -1.8902954 ]]
Iteration 500 of 1000: loss=4.09 " + "l1=0" + "l2=4.09 f=-0.264 shape=(1, 9000, 1)
logits [[ 0.20681459  0.2947934   0.29455882 -1.8537992 ]]
Iteration 600 of 1000: loss=3.78 " + "l1=0" + "l2=3.78 f=-0.263 shape=(1, 9000, 1)
logits [[ 0.20643485  0.29467282  0.29034454 -1.8417857 ]]
Iteration 700 of 1000: loss=3.55 " + "l1=0" + "l2=3.55 f=-0.26 shape=(1, 9000, 1)
logits [[ 0.21392736  0.29360756  0.27782825 -1.8243873 ]]
Iteration 800 of 1000: loss=3.32 " + "l1=0" + "l2=3.32 f=-0.258 shape=(1, 9000, 1)
logits [[ 0.23206937  0.27805695  0.2717832  -1.8155333 ]]
Iteration 900 of 1000: loss=3.14 " + "l1=0" + "l2=3.14 f=-0.256 shape=(1, 9000, 1)
logits [[ 0.2441903   0.26819494  0.25929713 -1.7946973 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=38.4 " + "l1=38.4" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 4.4074287 -2.5798318  2.7787988 -6.3464317]]
Iteration 100 of 1000: loss=9.31 " + "l1=3.63" + "l2=5.68 f=-0.296 shape=(1, 9000, 1)
logits [[ 0.5297464  -0.12262141  0.5371218  -2.1263661 ]]
Iteration 200 of 1000: loss=5.2 " + "l1=0.0286" + "l2=5.17 f=-0.279 shape=(1, 9000, 1)
logits [[ 0.22871186  0.25883442  0.26403213 -1.867783  ]]
Iteration 300 of 1000: loss=4.25 " + "l1=0.0255" + "l2=4.23 f=-0.268 shape=(1, 9000, 1)
logits [[ 0.25807485  0.276372    0.28100628 -1.8892941 ]]
Iteration 400 of 1000: loss=3.8 " + "l1=0.0573" + "l2=3.74 f=-0.265 shape=(1, 9000, 1)
logits [[ 0.23544213  0.27120274  0.2816249  -1.8501675 ]]
Iteration 500 of 1000: loss=3.4 " + "l1=0" + "l2=3.4 f=-0.259 shape=(1, 9000, 1)
logits [[ 0.24728566  0.26470166  0.26459005 -1.8111548 ]]
Iteration 600 of 1000: loss=3.13 " + "l1=0" + "l2=3.13 f=-0.253 shape=(1, 9000, 1)
logits [[ 0.2327632   0.25976533  0.24768202 -1.7533505 ]]
Iteration 700 of 1000: loss=2.92 " + "l1=0.0199" + "l2=2.9 f=-0.252 shape=(1, 9000, 1)
logits [[ 0.19900864  0.24735318  0.25097075 -1.7055464 ]]
Iteration 800 of 1000: loss=2.77 " + "l1=0.00827" + "l2=2.76 f=-0.245 shape=(1, 9000, 1)
logits [[ 0.20714277  0.24016084  0.24166426 -1.6709509 ]]
Iteration 900 of 1000: loss=2.65 " + "l1=0" + "l2=2.65 f=-0.239 shape=(1, 9000, 1)
logits [[ 0.22459975  0.23443392  0.23254687 -1.6459178 ]]
--- 299.0189747810364 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0163 " + "l1=0.0163" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 4.4074287 -2.5798318  2.7787988 -6.3464317]]
Iteration 100 of 1000: loss=0.0162 " + "l1=0.0161" + "l2=0.00013 f=-0.435 shape=(1, 9000, 1)
logits [[ 4.381487  -2.5763307  2.7761838 -6.3209925]]
Iteration 200 of 1000: loss=0.0161 " + "l1=0.0161" + "l2=8.99e-05 f=-0.435 shape=(1, 9000, 1)
logits [[ 4.381042  -2.5760107  2.775902  -6.3207335]]
Iteration 300 of 1000: loss=0.0161 " + "l1=0.016" + "l2=0.000121 f=-0.435 shape=(1, 9000, 1)
logits [[ 4.3774586 -2.5755284  2.7754304 -6.3174596]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.163 " + "l1=0.163" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 4.4074287 -2.5798318  2.7787988 -6.3464317]]
Iteration 100 of 1000: loss=0.154 " + "l1=0.149" + "l2=0.00467 f=-0.432 shape=(1, 9000, 1)
logits [[ 4.253726  -2.552241   2.7651193 -6.195384 ]]
Iteration 200 of 1000: loss=0.15 " + "l1=0.144" + "l2=0.00613 f=-0.432 shape=(1, 9000, 1)
logits [[ 4.20564   -2.5488508  2.7657418 -6.150316 ]]
Iteration 300 of 1000: loss=0.147 " + "l1=0.139" + "l2=0.00756 f=-0.433 shape=(1, 9000, 1)
logits [[ 4.1582794 -2.5478492  2.7666695 -6.108253 ]]
Iteration 400 of 1000: loss=0.143 " + "l1=0.134" + "l2=0.00889 f=-0.434 shape=(1, 9000, 1)
logits [[ 4.112095  -2.5471392  2.7672634 -6.0673323]]
Iteration 500 of 1000: loss=0.14 " + "l1=0.13" + "l2=0.00977 f=-0.435 shape=(1, 9000, 1)
logits [[ 4.0702405 -2.5461185  2.765673  -6.028663 ]]
Iteration 600 of 1000: loss=0.137 " + "l1=0.126" + "l2=0.011 f=-0.435 shape=(1, 9000, 1)
logits [[ 4.0266633 -2.5434053  2.7638645 -5.985936 ]]
Iteration 700 of 1000: loss=0.134 " + "l1=0.122" + "l2=0.0122 f=-0.434 shape=(1, 9000, 1)
logits [[ 3.9838219 -2.5405056  2.7620325 -5.943071 ]]
Iteration 800 of 1000: loss=0.131 " + "l1=0.118" + "l2=0.0132 f=-0.434 shape=(1, 9000, 1)
logits [[ 3.9439738 -2.5366867  2.7611358 -5.9050035]]
Iteration 900 of 1000: loss=0.129 " + "l1=0.114" + "l2=0.0142 f=-0.434 shape=(1, 9000, 1)
logits [[ 3.9050274 -2.5330307  2.7604587 -5.867463 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.63 " + "l1=1.63" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 4.4074287 -2.5798318  2.7787988 -6.3464317]]
Iteration 100 of 1000: loss=0.89 " + "l1=0.561" + "l2=0.329 f=-0.43 shape=(1, 9000, 1)
logits [[ 3.2052577 -2.420331   2.644229  -5.1483874]]
Iteration 200 of 1000: loss=0.511 " + "l1=0.0022" + "l2=0.508 f=-0.432 shape=(1, 9000, 1)
logits [[ 2.636419  -2.3835845  2.63422   -4.614091 ]]
Iteration 300 of 1000: loss=0.331 " + "l1=0.00157" + "l2=0.329 f=-0.423 shape=(1, 9000, 1)
logits [[ 2.6107054 -2.3622932  2.6091323 -4.5488095]]
Iteration 400 of 1000: loss=0.248 " + "l1=0" + "l2=0.248 f=-0.42 shape=(1, 9000, 1)
logits [[ 2.5879617 -2.3449454  2.5888817 -4.5119224]]
Iteration 500 of 1000: loss=0.204 " + "l1=0" + "l2=0.204 f=-0.419 shape=(1, 9000, 1)
logits [[ 2.5775964 -2.346148   2.584161  -4.490081 ]]
Iteration 600 of 1000: loss=0.174 " + "l1=0" + "l2=0.174 f=-0.414 shape=(1, 9000, 1)
logits [[ 2.5876722 -2.3546257  2.5913825 -4.4822946]]
Iteration 700 of 1000: loss=0.156 " + "l1=0.00251" + "l2=0.154 f=-0.409 shape=(1, 9000, 1)
logits [[ 2.6086164 -2.3663816  2.6061053 -4.486283 ]]
Iteration 800 of 1000: loss=0.142 " + "l1=0" + "l2=0.142 f=-0.405 shape=(1, 9000, 1)
logits [[ 2.6139867 -2.374469   2.6179075 -4.4793305]]
Iteration 900 of 1000: loss=0.131 " + "l1=0" + "l2=0.131 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.6228342 -2.381521   2.6278827 -4.478247 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.896 " + "l1=0.896" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 4.4074287 -2.5798318  2.7787988 -6.3464317]]
Iteration 100 of 1000: loss=0.643 " + "l1=0.52" + "l2=0.123 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.6608317 -2.4753063  2.7158933 -5.604338 ]]
Iteration 200 of 1000: loss=0.547 " + "l1=0.391" + "l2=0.156 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.3911266 -2.4409158  2.6802208 -5.321383 ]]
Iteration 300 of 1000: loss=0.457 " + "l1=0.27" + "l2=0.188 f=-0.421 shape=(1, 9000, 1)
logits [[ 3.122858  -2.3870964  2.6323824 -5.050628 ]]
Iteration 400 of 1000: loss=0.336 " + "l1=0.109" + "l2=0.227 f=-0.42 shape=(1, 9000, 1)
logits [[ 2.8178315 -2.349377   2.6194508 -4.7697663]]
Iteration 500 of 1000: loss=0.229 " + "l1=0.00408" + "l2=0.225 f=-0.42 shape=(1, 9000, 1)
logits [[ 2.6103046 -2.3351388  2.60288   -4.5569835]]
Iteration 600 of 1000: loss=0.178 " + "l1=0" + "l2=0.178 f=-0.415 shape=(1, 9000, 1)
logits [[ 2.6046185 -2.3463173  2.6064384 -4.526697 ]]
Iteration 700 of 1000: loss=0.152 " + "l1=0.000596" + "l2=0.152 f=-0.409 shape=(1, 9000, 1)
logits [[ 2.6288705 -2.3663335  2.6277876 -4.5271163]]
Iteration 800 of 1000: loss=0.135 " + "l1=7.91e-05" + "l2=0.135 f=-0.405 shape=(1, 9000, 1)
logits [[ 2.6433554 -2.380663   2.6432116 -4.526078 ]]
Iteration 900 of 1000: loss=0.122 " + "l1=0.000911" + "l2=0.121 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.660774  -2.398156   2.659118  -4.5280404]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.529 " + "l1=0.529" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 4.4074287 -2.5798318  2.7787988 -6.3464317]]
Iteration 100 of 1000: loss=0.436 " + "l1=0.391" + "l2=0.0457 f=-0.431 shape=(1, 9000, 1)
logits [[ 3.955779  -2.5144832  2.754089  -5.9174166]]
Iteration 200 of 1000: loss=0.397 " + "l1=0.336" + "l2=0.0618 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.7656362 -2.4898682  2.7326314 -5.710424 ]]
Iteration 300 of 1000: loss=0.365 " + "l1=0.295" + "l2=0.0699 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.62426   -2.4824815  2.7171085 -5.560952 ]]
Iteration 400 of 1000: loss=0.335 " + "l1=0.259" + "l2=0.0757 f=-0.421 shape=(1, 9000, 1)
logits [[ 3.4916942 -2.4511218  2.6939752 -5.420531 ]]
Iteration 500 of 1000: loss=0.304 " + "l1=0.221" + "l2=0.0832 f=-0.421 shape=(1, 9000, 1)
logits [[ 3.3479328 -2.417998   2.6688302 -5.2826495]]
Iteration 600 of 1000: loss=0.265 " + "l1=0.167" + "l2=0.098 f=-0.42 shape=(1, 9000, 1)
logits [[ 3.1766226 -2.3981538  2.6612508 -5.1180325]]
Iteration 700 of 1000: loss=0.225 " + "l1=0.113" + "l2=0.112 f=-0.416 shape=(1, 9000, 1)
logits [[ 3.0097363 -2.3855557  2.661809  -4.95118  ]]
Iteration 800 of 1000: loss=0.186 " + "l1=0.0606" + "l2=0.126 f=-0.412 shape=(1, 9000, 1)
logits [[ 2.8553445 -2.3839617  2.6688788 -4.787106 ]]
Iteration 900 of 1000: loss=0.15 " + "l1=0.011" + "l2=0.139 f=-0.409 shape=(1, 9000, 1)
logits [[ 2.7133956 -2.401617   2.6795483 -4.627344 ]]
--- 256.89407896995544 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.108 " + "l1=0.108" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 4.4074287 -2.5798318  2.7787988 -6.3464317]]
Iteration 100 of 1000: loss=0.107 " + "l1=0.106" + "l2=0.000537 f=-0.431 shape=(1, 9000, 1)
logits [[ 4.3435388 -2.553227   2.7508461 -6.266225 ]]
Iteration 200 of 1000: loss=0.106 " + "l1=0.106" + "l2=0.000576 f=-0.43 shape=(1, 9000, 1)
logits [[ 4.328909  -2.546157   2.7437131 -6.2477236]]
Iteration 300 of 1000: loss=0.106 " + "l1=0.105" + "l2=0.000714 f=-0.429 shape=(1, 9000, 1)
logits [[ 4.309739  -2.5372438  2.7348037 -6.223091 ]]
Iteration 400 of 1000: loss=0.106 " + "l1=0.105" + "l2=0.000859 f=-0.428 shape=(1, 9000, 1)
logits [[ 4.2915726 -2.528835   2.7258751 -6.1988416]]
Iteration 500 of 1000: loss=0.106 " + "l1=0.105" + "l2=0.00105 f=-0.426 shape=(1, 9000, 1)
logits [[ 4.274649  -2.5207953  2.7166252 -6.1758766]]
Iteration 600 of 1000: loss=0.105 " + "l1=0.104" + "l2=0.00121 f=-0.425 shape=(1, 9000, 1)
logits [[ 4.2582574 -2.513145   2.707601  -6.153539 ]]
Iteration 700 of 1000: loss=0.105 " + "l1=0.104" + "l2=0.00149 f=-0.424 shape=(1, 9000, 1)
logits [[ 4.2417603 -2.5054846  2.69861   -6.1310773]]
Iteration 800 of 1000: loss=0.105 " + "l1=0.103" + "l2=0.0017 f=-0.423 shape=(1, 9000, 1)
logits [[ 4.226749  -2.4990008  2.6907706 -6.1104455]]
Iteration 900 of 1000: loss=0.105 " + "l1=0.103" + "l2=0.00187 f=-0.422 shape=(1, 9000, 1)
logits [[ 4.2130136 -2.492447   2.6840012 -6.091596 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.08 " + "l1=1.08" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 4.4074287 -2.5798318  2.7787988 -6.3464317]]
Iteration 100 of 1000: loss=0.989 " + "l1=0.946" + "l2=0.043 f=-0.397 shape=(1, 9000, 1)
logits [[ 3.840378  -2.3208792  2.5137682 -5.622192 ]]
Iteration 200 of 1000: loss=0.948 " + "l1=0.888" + "l2=0.0596 f=-0.387 shape=(1, 9000, 1)
logits [[ 3.585823  -2.2338414  2.3948274 -5.293419 ]]
Iteration 300 of 1000: loss=0.911 " + "l1=0.838" + "l2=0.073 f=-0.378 shape=(1, 9000, 1)
logits [[ 3.3701575 -2.1690273  2.2908022 -5.005893 ]]
Iteration 400 of 1000: loss=0.879 " + "l1=0.796" + "l2=0.0827 f=-0.369 shape=(1, 9000, 1)
logits [[ 3.190207  -2.099752   2.2006295 -4.7679033]]
Iteration 500 of 1000: loss=0.851 " + "l1=0.755" + "l2=0.0953 f=-0.36 shape=(1, 9000, 1)
logits [[ 3.014392  -2.0284407  2.1136432 -4.5395584]]
Iteration 600 of 1000: loss=0.823 " + "l1=0.713" + "l2=0.11 f=-0.354 shape=(1, 9000, 1)
logits [[ 2.8221624 -1.9543691  2.02715   -4.3101454]]
Iteration 700 of 1000: loss=0.796 " + "l1=0.671" + "l2=0.124 f=-0.349 shape=(1, 9000, 1)
logits [[ 2.628547  -1.8857025  1.9473242 -4.085413 ]]
Iteration 800 of 1000: loss=0.775 " + "l1=0.642" + "l2=0.133 f=-0.342 shape=(1, 9000, 1)
logits [[ 2.497956  -1.8441637  1.8987125 -3.9215264]]
Iteration 900 of 1000: loss=0.757 " + "l1=0.618" + "l2=0.139 f=-0.337 shape=(1, 9000, 1)
logits [[ 2.3942032 -1.8207309  1.8604871 -3.7820754]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.8 " + "l1=10.8" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 4.4074287 -2.5798318  2.7787988 -6.3464317]]
Iteration 100 of 1000: loss=5.85 " + "l1=4.09" + "l2=1.76 f=-0.337 shape=(1, 9000, 1)
logits [[ 1.4090195 -1.3793753  1.3016906 -2.6800058]]
Iteration 200 of 1000: loss=4.2 " + "l1=2.23" + "l2=1.96 f=-0.249 shape=(1, 9000, 1)
logits [[ 0.7742133 -1.0821618  0.7724916 -1.4590017]]
Iteration 300 of 1000: loss=3.44 " + "l1=1.51" + "l2=1.93 f=-0.186 shape=(1, 9000, 1)
logits [[ 0.5564641  -0.9768836   0.59337276 -0.91588795]]
Iteration 400 of 1000: loss=2.92 " + "l1=0.917" + "l2=2.01 f=-0.171 shape=(1, 9000, 1)
logits [[ 0.21425906 -0.88883823  0.45425054 -0.46285024]]
Iteration 500 of 1000: loss=2.46 " + "l1=0.412" + "l2=2.04 f=-0.182 shape=(1, 9000, 1)
logits [[-0.10524622 -0.83916867  0.31487456 -0.09689897]]
Iteration 600 of 1000: loss=2.05 " + "l1=0.00602" + "l2=2.04 f=-0.189 shape=(1, 9000, 1)
logits [[-0.38128528 -0.83097345  0.23101829  0.22500029]]
Iteration 700 of 1000: loss=1.77 " + "l1=0.0122" + "l2=1.76 f=-0.192 shape=(1, 9000, 1)
logits [[-0.4098957  -0.8706237   0.26179692  0.24962255]]
Iteration 800 of 1000: loss=1.59 " + "l1=0" + "l2=1.59 f=-0.191 shape=(1, 9000, 1)
logits [[-0.43825373 -0.8736933   0.273153    0.27321893]]
Iteration 900 of 1000: loss=1.46 " + "l1=0.00126" + "l2=1.46 f=-0.185 shape=(1, 9000, 1)
logits [[-0.43205    -0.8934943   0.29287317  0.2916091 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.91 " + "l1=5.91" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 4.4074287 -2.5798318  2.7787988 -6.3464317]]
Iteration 100 of 1000: loss=3.99 " + "l1=3.22" + "l2=0.771 f=-0.368 shape=(1, 9000, 1)
logits [[ 2.2157636 -1.7463803  1.6959186 -3.6363165]]
Iteration 200 of 1000: loss=3.19 " + "l1=2.22" + "l2=0.973 f=-0.322 shape=(1, 9000, 1)
logits [[ 1.4264278 -1.4697343  1.3625666 -2.6058965]]
Iteration 300 of 1000: loss=2.67 " + "l1=1.68" + "l2=0.99 f=-0.276 shape=(1, 9000, 1)
logits [[ 1.0865957 -1.3250525  1.0906909 -1.957331 ]]
Iteration 400 of 1000: loss=2.33 " + "l1=1.33" + "l2=0.996 f=-0.239 shape=(1, 9000, 1)
logits [[ 0.8935156 -1.2239965  0.9002802 -1.5262063]]
Iteration 500 of 1000: loss=2.1 " + "l1=1.08" + "l2=1.01 f=-0.219 shape=(1, 9000, 1)
logits [[ 0.7134278  -1.1504477   0.76557755 -1.2063857 ]]
Iteration 600 of 1000: loss=1.89 " + "l1=0.837" + "l2=1.06 f=-0.205 shape=(1, 9000, 1)
logits [[ 0.48427662 -1.0717168   0.6444265  -0.8777696 ]]
Iteration 700 of 1000: loss=1.71 " + "l1=0.613" + "l2=1.1 f=-0.191 shape=(1, 9000, 1)
logits [[ 0.27064547 -1.0106657   0.5465181  -0.5685368 ]]
Iteration 800 of 1000: loss=1.55 " + "l1=0.437" + "l2=1.12 f=-0.184 shape=(1, 9000, 1)
logits [[ 0.0725245  -0.9736087   0.47939426 -0.31440324]]
Iteration 900 of 1000: loss=1.39 " + "l1=0.266" + "l2=1.13 f=-0.176 shape=(1, 9000, 1)
logits [[-0.11506404 -0.9635967   0.4299179  -0.05392147]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=8.33 " + "l1=8.33" + "l2=0 f=-0.435 shape=(1, 9000, 1)
logits [[ 4.4074287 -2.5798318  2.7787988 -6.3464317]]
Iteration 100 of 1000: loss=5.01 " + "l1=3.78" + "l2=1.23 f=-0.355 shape=(1, 9000, 1)
logits [[ 1.7641951 -1.5448104  1.4750559 -3.113771 ]]
Iteration 200 of 1000: loss=3.75 " + "l1=2.22" + "l2=1.54 f=-0.302 shape=(1, 9000, 1)
logits [[ 0.9542775 -1.2081132  0.9515689 -1.905843 ]]
Iteration 300 of 1000: loss=3.14 " + "l1=1.63" + "l2=1.51 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.7521219  -1.1070422   0.75380445 -1.344603  ]]
Iteration 400 of 1000: loss=2.75 " + "l1=1.24" + "l2=1.51 f=-0.209 shape=(1, 9000, 1)
logits [[ 0.5642274 -1.0311561  0.6171898 -0.9858567]]
Iteration 500 of 1000: loss=2.4 " + "l1=0.938" + "l2=1.46 f=-0.2 shape=(1, 9000, 1)
logits [[ 0.33789012 -0.98931926  0.5316375  -0.67825156]]
Iteration 600 of 1000: loss=2.1 " + "l1=0.588" + "l2=1.51 f=-0.195 shape=(1, 9000, 1)
logits [[ 0.03668057 -0.93731755  0.43894586 -0.31912556]]
Iteration 700 of 1000: loss=1.83 " + "l1=0.268" + "l2=1.56 f=-0.196 shape=(1, 9000, 1)
logits [[-2.3211464e-01 -8.9428216e-01  3.4459612e-01 -8.8230520e-04]]
Iteration 800 of 1000: loss=1.54 " + "l1=0.00772" + "l2=1.53 f=-0.195 shape=(1, 9000, 1)
logits [[-0.4492285  -0.88541275  0.28239375  0.27243072]]
Iteration 900 of 1000: loss=1.37 " + "l1=0.00592" + "l2=1.36 f=-0.185 shape=(1, 9000, 1)
logits [[-0.43976355 -0.8995916   0.30267295  0.2950294 ]]
--- 298.0708510875702 seconds ---
Adv result:3
Loading record A00009
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0406 " + "l1=0.0406" + "l2=0 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.5632699 -1.4974971  1.697621  -4.216313 ]]
Iteration 100 of 1000: loss=0.0401 " + "l1=0.0398" + "l2=0.000311 f=-0.361 shape=(1, 9000, 1)
logits [[ 2.5171635 -1.465598   1.673724  -4.168496 ]]
Iteration 200 of 1000: loss=0.04 " + "l1=0.0397" + "l2=0.000324 f=-0.36 shape=(1, 9000, 1)
logits [[ 2.508378  -1.4590412  1.6683311 -4.1580596]]
Iteration 300 of 1000: loss=0.0399 " + "l1=0.0395" + "l2=0.000405 f=-0.359 shape=(1, 9000, 1)
logits [[ 2.4968963 -1.4512709  1.6620334 -4.145407 ]]
Iteration 400 of 1000: loss=0.0398 " + "l1=0.0393" + "l2=0.000512 f=-0.359 shape=(1, 9000, 1)
logits [[ 2.4854698 -1.4440739  1.655951  -4.133221 ]]
Iteration 500 of 1000: loss=0.0397 " + "l1=0.0391" + "l2=0.000587 f=-0.359 shape=(1, 9000, 1)
logits [[ 2.4743702 -1.4373597  1.6500107 -4.121824 ]]
Iteration 600 of 1000: loss=0.0397 " + "l1=0.0389" + "l2=0.000742 f=-0.359 shape=(1, 9000, 1)
logits [[ 2.4635737 -1.4309775  1.6444361 -4.111469 ]]
Iteration 700 of 1000: loss=0.0396 " + "l1=0.0388" + "l2=0.000826 f=-0.359 shape=(1, 9000, 1)
logits [[ 2.4532778 -1.4251232  1.6391134 -4.101658 ]]
Iteration 800 of 1000: loss=0.0396 " + "l1=0.0386" + "l2=0.000968 f=-0.359 shape=(1, 9000, 1)
logits [[ 2.4435322 -1.4198656  1.63402   -4.09221  ]]
Iteration 900 of 1000: loss=0.0396 " + "l1=0.0385" + "l2=0.00108 f=-0.359 shape=(1, 9000, 1)
logits [[ 2.4339359 -1.4151043  1.6292408 -4.0830197]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.406 " + "l1=0.406" + "l2=0 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.5632699 -1.4974971  1.697621  -4.216313 ]]
Iteration 100 of 1000: loss=0.359 " + "l1=0.334" + "l2=0.0249 f=-0.334 shape=(1, 9000, 1)
logits [[ 2.166094  -1.172077   1.4403359 -3.7692528]]
Iteration 200 of 1000: loss=0.333 " + "l1=0.297" + "l2=0.036 f=-0.329 shape=(1, 9000, 1)
logits [[ 1.9524709 -1.0168492  1.3033509 -3.553095 ]]
Iteration 300 of 1000: loss=0.311 " + "l1=0.263" + "l2=0.0486 f=-0.329 shape=(1, 9000, 1)
logits [[ 1.7502667 -0.8774617  1.1694146 -3.359819 ]]
Iteration 400 of 1000: loss=0.292 " + "l1=0.231" + "l2=0.061 f=-0.323 shape=(1, 9000, 1)
logits [[ 1.5746536 -0.7375198  1.0328739 -3.1626556]]
Iteration 500 of 1000: loss=0.272 " + "l1=0.199" + "l2=0.0727 f=-0.319 shape=(1, 9000, 1)
logits [[ 1.398608  -0.5903031  0.8847837 -2.969592 ]]
Iteration 600 of 1000: loss=0.248 " + "l1=0.164" + "l2=0.0843 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.2550546  -0.38351905  0.6952683  -2.7456052 ]]
Iteration 700 of 1000: loss=0.231 " + "l1=0.139" + "l2=0.0915 f=-0.291 shape=(1, 9000, 1)
logits [[ 1.1103241  -0.28027475  0.6016931  -2.597172  ]]
Iteration 800 of 1000: loss=0.216 " + "l1=0.118" + "l2=0.0982 f=-0.299 shape=(1, 9000, 1)
logits [[ 0.9649449  -0.21725692  0.5543162  -2.4993992 ]]
Iteration 900 of 1000: loss=0.2 " + "l1=0.0891" + "l2=0.111 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.7686325  -0.12268705  0.4980909  -2.3639274 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.06 " + "l1=4.06" + "l2=0 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.5632699 -1.4974971  1.697621  -4.216313 ]]
Iteration 100 of 1000: loss=0.732 " + "l1=0" + "l2=0.732 f=-0.285 shape=(1, 9000, 1)
logits [[ 0.2012263   0.20712957  0.20024292 -1.7502204 ]]
Iteration 200 of 1000: loss=0.442 " + "l1=0" + "l2=0.442 f=-0.309 shape=(1, 9000, 1)
logits [[ 0.1974299   0.21701263  0.20526661 -1.8553884 ]]
Iteration 300 of 1000: loss=0.347 " + "l1=0" + "l2=0.347 f=-0.312 shape=(1, 9000, 1)
logits [[ 0.21450403  0.22588928  0.18265323 -1.8702358 ]]
Iteration 400 of 1000: loss=0.307 " + "l1=0" + "l2=0.307 f=-0.317 shape=(1, 9000, 1)
logits [[ 0.18251923  0.22150758  0.1925355  -1.8636302 ]]
Iteration 500 of 1000: loss=0.276 " + "l1=0" + "l2=0.276 f=-0.318 shape=(1, 9000, 1)
logits [[ 0.20379962  0.22889851  0.17065884 -1.8755026 ]]
Iteration 600 of 1000: loss=0.247 " + "l1=0" + "l2=0.247 f=-0.32 shape=(1, 9000, 1)
logits [[ 0.19935519  0.21401857  0.19493973 -1.887258  ]]
Iteration 700 of 1000: loss=0.229 " + "l1=0" + "l2=0.229 f=-0.322 shape=(1, 9000, 1)
logits [[ 0.18991885  0.21781948  0.19260137 -1.8885204 ]]
Iteration 800 of 1000: loss=0.212 " + "l1=0" + "l2=0.212 f=-0.325 shape=(1, 9000, 1)
logits [[ 0.19346638  0.20912509  0.20329787 -1.904264  ]]
Iteration 900 of 1000: loss=0.204 " + "l1=0" + "l2=0.204 f=-0.327 shape=(1, 9000, 1)
logits [[ 0.1753613   0.22110094  0.18879929 -1.8943299 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.23 " + "l1=2.23" + "l2=0 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.5632699 -1.4974971  1.697621  -4.216313 ]]
Iteration 100 of 1000: loss=0.811 " + "l1=0.185" + "l2=0.626 f=-0.295 shape=(1, 9000, 1)
logits [[ 0.3629746   0.02638018  0.35213152 -1.9210862 ]]
Iteration 200 of 1000: loss=0.392 " + "l1=0.0104" + "l2=0.382 f=-0.309 shape=(1, 9000, 1)
logits [[ 0.22236368  0.20348556  0.20049287 -1.8613006 ]]
Iteration 300 of 1000: loss=0.311 " + "l1=0.0126" + "l2=0.299 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.21463941  0.19170259  0.20277643 -1.8721558 ]]
Iteration 400 of 1000: loss=0.262 " + "l1=0.00515" + "l2=0.257 f=-0.32 shape=(1, 9000, 1)
logits [[ 0.20792812  0.19856696  0.19739042 -1.8841529 ]]
Iteration 500 of 1000: loss=0.229 " + "l1=0.000731" + "l2=0.229 f=-0.322 shape=(1, 9000, 1)
logits [[ 0.20208734  0.20075749  0.19787614 -1.8900094 ]]
Iteration 600 of 1000: loss=0.217 " + "l1=0" + "l2=0.217 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.16242447  0.21321197  0.18883552 -1.8702937 ]]
Iteration 700 of 1000: loss=0.199 " + "l1=0" + "l2=0.199 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.19296342  0.20182192  0.18398155 -1.8810986 ]]
Iteration 800 of 1000: loss=0.192 " + "l1=0.00393" + "l2=0.188 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.17730817  0.19213267  0.1992727  -1.8733006 ]]
Iteration 900 of 1000: loss=0.183 " + "l1=0" + "l2=0.183 f=-0.33 shape=(1, 9000, 1)
logits [[ 0.1513545   0.19732274  0.19171649 -1.8585359 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.32 " + "l1=1.32" + "l2=0 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.5632699 -1.4974971  1.697621  -4.216313 ]]
Iteration 100 of 1000: loss=0.797 " + "l1=0.549" + "l2=0.248 f=-0.314 shape=(1, 9000, 1)
logits [[ 1.2171837  -0.47246343  0.8396773  -2.8423297 ]]
Iteration 200 of 1000: loss=0.449 " + "l1=0.064" + "l2=0.385 f=-0.302 shape=(1, 9000, 1)
logits [[ 0.30739656  0.11054347  0.30646703 -1.9338753 ]]
Iteration 300 of 1000: loss=0.3 " + "l1=0.0118" + "l2=0.288 f=-0.314 shape=(1, 9000, 1)
logits [[ 0.22228307  0.18587203  0.20475926 -1.8698524 ]]
Iteration 400 of 1000: loss=0.245 " + "l1=0.0023" + "l2=0.242 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.2023147   0.19522695  0.19770625 -1.8918219 ]]
Iteration 500 of 1000: loss=0.217 " + "l1=0.00111" + "l2=0.216 f=-0.325 shape=(1, 9000, 1)
logits [[ 0.19933617  0.19592784  0.19866158 -1.895361  ]]
Iteration 600 of 1000: loss=0.2 " + "l1=0" + "l2=0.2 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.19005421  0.19781998  0.18706389 -1.8782135 ]]
Iteration 700 of 1000: loss=0.188 " + "l1=0" + "l2=0.188 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.18256035  0.19179352  0.18842687 -1.8657721 ]]
Iteration 800 of 1000: loss=0.179 " + "l1=0.00224" + "l2=0.177 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.18681866  0.18475688  0.19165644 -1.858583  ]]
Iteration 900 of 1000: loss=0.171 " + "l1=0" + "l2=0.171 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.1709179   0.19075832  0.1836638  -1.8409216 ]]
--- 298.8897793292999 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00866 " + "l1=0.00866" + "l2=0 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.5632699 -1.4974971  1.697621  -4.216313 ]]
Iteration 100 of 1000: loss=0.00837 " + "l1=0.00814" + "l2=0.000224 f=-0.366 shape=(1, 9000, 1)
logits [[ 2.5270026 -1.5065836  1.7126632 -4.1966076]]
Iteration 200 of 1000: loss=0.00828 " + "l1=0.00808" + "l2=0.000205 f=-0.366 shape=(1, 9000, 1)
logits [[ 2.523059  -1.5088894  1.7154384 -4.1948586]]
Iteration 300 of 1000: loss=0.00823 " + "l1=0.00797" + "l2=0.000256 f=-0.367 shape=(1, 9000, 1)
logits [[ 2.516055  -1.5111763  1.7186445 -4.19093  ]]
Iteration 400 of 1000: loss=0.00819 " + "l1=0.00788" + "l2=0.000312 f=-0.367 shape=(1, 9000, 1)
logits [[ 2.5089216 -1.5131775  1.721374  -4.1865807]]
Iteration 500 of 1000: loss=0.00819 " + "l1=0.00779" + "l2=0.000406 f=-0.368 shape=(1, 9000, 1)
logits [[ 2.5021524 -1.5146749  1.7236195 -4.1824703]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0866 " + "l1=0.0866" + "l2=0 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.5632699 -1.4974971  1.697621  -4.216313 ]]
Iteration 100 of 1000: loss=0.0628 " + "l1=0.0508" + "l2=0.012 f=-0.38 shape=(1, 9000, 1)
logits [[ 2.3170288 -1.5631413  1.8093649 -4.084409 ]]
Iteration 200 of 1000: loss=0.0532 " + "l1=0.037" + "l2=0.0162 f=-0.383 shape=(1, 9000, 1)
logits [[ 2.2161107 -1.5663666  1.8456422 -4.0260887]]
Iteration 300 of 1000: loss=0.0462 " + "l1=0.0255" + "l2=0.0206 f=-0.384 shape=(1, 9000, 1)
logits [[ 2.121281  -1.5639576  1.8660314 -3.9591274]]
Iteration 400 of 1000: loss=0.0409 " + "l1=0.0164" + "l2=0.0245 f=-0.386 shape=(1, 9000, 1)
logits [[ 2.0457945 -1.563448   1.8818057 -3.9066603]]
Iteration 500 of 1000: loss=0.0368 " + "l1=0.00977" + "l2=0.027 f=-0.385 shape=(1, 9000, 1)
logits [[ 2.002696  -1.570217   1.9049742 -3.8779902]]
Iteration 600 of 1000: loss=0.0332 " + "l1=0.00334" + "l2=0.0298 f=-0.385 shape=(1, 9000, 1)
logits [[ 1.9629421 -1.5768223  1.9295114 -3.8538165]]
Iteration 700 of 1000: loss=0.0305 " + "l1=0.00044" + "l2=0.03 f=-0.382 shape=(1, 9000, 1)
logits [[ 1.9478155 -1.5785826  1.9434165 -3.841061 ]]
Iteration 800 of 1000: loss=0.0288 " + "l1=0.000299" + "l2=0.0285 f=-0.38 shape=(1, 9000, 1)
logits [[ 1.950661  -1.5768603  1.9476671 -3.8410962]]
Iteration 900 of 1000: loss=0.0276 " + "l1=0.000155" + "l2=0.0274 f=-0.378 shape=(1, 9000, 1)
logits [[ 1.949223  -1.5718799  1.9476693 -3.835152 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0476 " + "l1=0.0476" + "l2=0 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.5632699 -1.4974971  1.697621  -4.216313 ]]
Iteration 100 of 1000: loss=0.0402 " + "l1=0.0363" + "l2=0.00391 f=-0.374 shape=(1, 9000, 1)
logits [[ 2.4212728 -1.5384301  1.7621336 -4.1393757]]
Iteration 200 of 1000: loss=0.0373 " + "l1=0.0322" + "l2=0.00514 f=-0.376 shape=(1, 9000, 1)
logits [[ 2.3703477 -1.5474881  1.7847651 -4.11293  ]]
Iteration 300 of 1000: loss=0.0351 " + "l1=0.0285" + "l2=0.00655 f=-0.378 shape=(1, 9000, 1)
logits [[ 2.3225312 -1.5523678  1.8035929 -4.0869746]]
Iteration 400 of 1000: loss=0.0333 " + "l1=0.0257" + "l2=0.00765 f=-0.378 shape=(1, 9000, 1)
logits [[ 2.2809644 -1.5500902  1.8145821 -4.0588207]]
Iteration 500 of 1000: loss=0.0319 " + "l1=0.0232" + "l2=0.00878 f=-0.379 shape=(1, 9000, 1)
logits [[ 2.2454581 -1.54726    1.8243676 -4.0380173]]
Iteration 600 of 1000: loss=0.0308 " + "l1=0.0209" + "l2=0.00988 f=-0.379 shape=(1, 9000, 1)
logits [[ 2.211307  -1.5419958  1.8309532 -4.017362 ]]
Iteration 700 of 1000: loss=0.0299 " + "l1=0.0192" + "l2=0.0106 f=-0.38 shape=(1, 9000, 1)
logits [[ 2.1814935 -1.5375924  1.8315443 -3.9943254]]
Iteration 800 of 1000: loss=0.029 " + "l1=0.0177" + "l2=0.0113 f=-0.38 shape=(1, 9000, 1)
logits [[ 2.1533346 -1.5339229  1.8320903 -3.9728978]]
Iteration 900 of 1000: loss=0.0283 " + "l1=0.0162" + "l2=0.0121 f=-0.381 shape=(1, 9000, 1)
logits [[ 2.1258705 -1.5294583  1.8317851 -3.9521112]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0671 " + "l1=0.0671" + "l2=0 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.5632699 -1.4974971  1.697621  -4.216313 ]]
Iteration 100 of 1000: loss=0.0526 " + "l1=0.0452" + "l2=0.00739 f=-0.377 shape=(1, 9000, 1)
logits [[ 2.37027   -1.5521162  1.7866668 -4.1133547]]
Iteration 200 of 1000: loss=0.0468 " + "l1=0.0369" + "l2=0.00993 f=-0.38 shape=(1, 9000, 1)
logits [[ 2.2951474 -1.5608597  1.8192269 -4.0733986]]
Iteration 300 of 1000: loss=0.0424 " + "l1=0.0296" + "l2=0.0127 f=-0.381 shape=(1, 9000, 1)
logits [[ 2.2228408 -1.557555   1.8403136 -4.0307345]]
Iteration 400 of 1000: loss=0.0391 " + "l1=0.0241" + "l2=0.0151 f=-0.382 shape=(1, 9000, 1)
logits [[ 2.161427  -1.5537491  1.8507313 -3.9874964]]
Iteration 500 of 1000: loss=0.0365 " + "l1=0.0194" + "l2=0.0172 f=-0.383 shape=(1, 9000, 1)
logits [[ 2.1066384 -1.5488414  1.8565401 -3.9472203]]
Iteration 600 of 1000: loss=0.0344 " + "l1=0.0158" + "l2=0.0187 f=-0.384 shape=(1, 9000, 1)
logits [[ 2.0648725 -1.545239   1.8616335 -3.91602  ]]
Iteration 700 of 1000: loss=0.0325 " + "l1=0.0127" + "l2=0.0198 f=-0.384 shape=(1, 9000, 1)
logits [[ 2.0347261 -1.5438057  1.8711799 -3.8981311]]
Iteration 800 of 1000: loss=0.031 " + "l1=0.0102" + "l2=0.0208 f=-0.384 shape=(1, 9000, 1)
logits [[ 2.01027   -1.5429516  1.8784158 -3.8811407]]
Iteration 900 of 1000: loss=0.0299 " + "l1=0.00826" + "l2=0.0216 f=-0.383 shape=(1, 9000, 1)
logits [[ 1.9916117 -1.5426801  1.8850055 -3.8672013]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0768 " + "l1=0.0768" + "l2=0 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.5632699 -1.4974971  1.697621  -4.216313 ]]
Iteration 100 of 1000: loss=0.058 " + "l1=0.0483" + "l2=0.00967 f=-0.379 shape=(1, 9000, 1)
logits [[ 2.341866  -1.5582615  1.7976333 -4.0967507]]
Iteration 200 of 1000: loss=0.0504 " + "l1=0.0376" + "l2=0.0129 f=-0.381 shape=(1, 9000, 1)
logits [[ 2.2545311 -1.5642949  1.8312639 -4.0469675]]
Iteration 300 of 1000: loss=0.0446 " + "l1=0.0282" + "l2=0.0164 f=-0.383 shape=(1, 9000, 1)
logits [[ 2.1700048 -1.5586548  1.8522943 -3.9944146]]
Iteration 400 of 1000: loss=0.0405 " + "l1=0.021" + "l2=0.0195 f=-0.384 shape=(1, 9000, 1)
logits [[ 2.099513  -1.5546957  1.8628641 -3.942957 ]]
Iteration 500 of 1000: loss=0.0372 " + "l1=0.0152" + "l2=0.022 f=-0.385 shape=(1, 9000, 1)
logits [[ 2.0460694 -1.5553142  1.8747656 -3.9051106]]
Iteration 600 of 1000: loss=0.0345 " + "l1=0.0106" + "l2=0.0239 f=-0.385 shape=(1, 9000, 1)
logits [[ 2.0094156 -1.557929   1.8904564 -3.882153 ]]
Iteration 700 of 1000: loss=0.0321 " + "l1=0.0068" + "l2=0.0253 f=-0.383 shape=(1, 9000, 1)
logits [[ 1.9851928 -1.5618528  1.9085717 -3.8657413]]
Iteration 800 of 1000: loss=0.0302 " + "l1=0.00321" + "l2=0.027 f=-0.382 shape=(1, 9000, 1)
logits [[ 1.9614522 -1.5660158  1.9252924 -3.8494952]]
Iteration 900 of 1000: loss=0.0284 " + "l1=0.000705" + "l2=0.0277 f=-0.38 shape=(1, 9000, 1)
logits [[ 1.9470814 -1.5678241  1.9391426 -3.8387742]]
--- 270.7597768306732 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0678 " + "l1=0.0678" + "l2=0 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.5632699 -1.4974971  1.697621  -4.216313 ]]
Iteration 100 of 1000: loss=0.0667 " + "l1=0.0661" + "l2=0.000574 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.4930923 -1.4825438  1.671859  -4.114551 ]]
Iteration 200 of 1000: loss=0.0663 " + "l1=0.0656" + "l2=0.000651 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.475243  -1.4789722  1.6641046 -4.0882764]]
Iteration 300 of 1000: loss=0.0659 " + "l1=0.0651" + "l2=0.000844 f=-0.356 shape=(1, 9000, 1)
logits [[ 2.4534347 -1.4749594  1.6547997 -4.056161 ]]
Iteration 400 of 1000: loss=0.0656 " + "l1=0.0645" + "l2=0.00108 f=-0.355 shape=(1, 9000, 1)
logits [[ 2.430902  -1.4708135  1.6445653 -4.0227175]]
Iteration 500 of 1000: loss=0.0653 " + "l1=0.064" + "l2=0.00134 f=-0.353 shape=(1, 9000, 1)
logits [[ 2.4086623 -1.4658213  1.6334434 -3.9891257]]
Iteration 600 of 1000: loss=0.0651 " + "l1=0.0635" + "l2=0.0016 f=-0.352 shape=(1, 9000, 1)
logits [[ 2.388066  -1.4617894  1.6230638 -3.9581296]]
Iteration 700 of 1000: loss=0.0648 " + "l1=0.063" + "l2=0.00183 f=-0.351 shape=(1, 9000, 1)
logits [[ 2.368768  -1.4585651  1.6132101 -3.928991 ]]
Iteration 800 of 1000: loss=0.0646 " + "l1=0.0625" + "l2=0.00204 f=-0.351 shape=(1, 9000, 1)
logits [[ 2.3507452 -1.4557844  1.60393   -3.9020329]]
Iteration 900 of 1000: loss=0.0644 " + "l1=0.0621" + "l2=0.00225 f=-0.35 shape=(1, 9000, 1)
logits [[ 2.3348281 -1.4536294  1.5957446 -3.8779888]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.678 " + "l1=0.678" + "l2=0 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.5632699 -1.4974971  1.697621  -4.216313 ]]
Iteration 100 of 1000: loss=0.57 " + "l1=0.517" + "l2=0.0538 f=-0.31 shape=(1, 9000, 1)
logits [[ 1.919833  -1.3044814  1.391023  -3.2471445]]
Iteration 200 of 1000: loss=0.5 " + "l1=0.413" + "l2=0.0872 f=-0.285 shape=(1, 9000, 1)
logits [[ 1.5161014 -1.2202902  1.1783746 -2.61472  ]]
Iteration 300 of 1000: loss=0.437 " + "l1=0.315" + "l2=0.121 f=-0.25 shape=(1, 9000, 1)
logits [[ 1.1515628 -1.1379982  0.9870452 -2.001545 ]]
Iteration 400 of 1000: loss=0.385 " + "l1=0.238" + "l2=0.146 f=-0.207 shape=(1, 9000, 1)
logits [[ 0.8889759 -1.0871005  0.8610221 -1.4916933]]
Iteration 500 of 1000: loss=0.338 " + "l1=0.179" + "l2=0.158 f=-0.163 shape=(1, 9000, 1)
logits [[ 0.7222589 -1.0215242  0.7189384 -1.0725068]]
Iteration 600 of 1000: loss=0.3 " + "l1=0.13" + "l2=0.17 f=-0.124 shape=(1, 9000, 1)
logits [[ 0.5952161 -0.9814972  0.5949377 -0.7062734]]
Iteration 700 of 1000: loss=0.267 " + "l1=0.0896" + "l2=0.177 f=-0.0968 shape=(1, 9000, 1)
logits [[ 0.49054667 -0.95840526  0.48594946 -0.40545183]]
Iteration 800 of 1000: loss=0.238 " + "l1=0.0482" + "l2=0.19 f=-0.0767 shape=(1, 9000, 1)
logits [[ 0.3673267  -0.933916    0.37100056 -0.11135209]]
Iteration 900 of 1000: loss=0.211 " + "l1=0.0155" + "l2=0.195 f=-0.0641 shape=(1, 9000, 1)
logits [[ 0.27305764 -0.91955346  0.27256158  0.11757367]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.373 " + "l1=0.373" + "l2=0 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.5632699 -1.4974971  1.697621  -4.216313 ]]
Iteration 100 of 1000: loss=0.342 " + "l1=0.328" + "l2=0.014 f=-0.338 shape=(1, 9000, 1)
logits [[ 2.2297342 -1.4053845  1.5510001 -3.7262297]]
Iteration 200 of 1000: loss=0.324 " + "l1=0.301" + "l2=0.0229 f=-0.325 shape=(1, 9000, 1)
logits [[ 2.0441172 -1.3441628  1.4392844 -3.4375978]]
Iteration 300 of 1000: loss=0.309 " + "l1=0.277" + "l2=0.0319 f=-0.314 shape=(1, 9000, 1)
logits [[ 1.8723752 -1.3009306  1.3330599 -3.1594617]]
Iteration 400 of 1000: loss=0.293 " + "l1=0.252" + "l2=0.0413 f=-0.303 shape=(1, 9000, 1)
logits [[ 1.700961  -1.2638485  1.2276238 -2.8773851]]
Iteration 500 of 1000: loss=0.28 " + "l1=0.229" + "l2=0.0504 f=-0.285 shape=(1, 9000, 1)
logits [[ 1.5598989 -1.2298591  1.1400522 -2.608518 ]]
Iteration 600 of 1000: loss=0.266 " + "l1=0.207" + "l2=0.0585 f=-0.266 shape=(1, 9000, 1)
logits [[ 1.4260314 -1.2070478  1.0623406 -2.3450394]]
Iteration 700 of 1000: loss=0.252 " + "l1=0.187" + "l2=0.065 f=-0.244 shape=(1, 9000, 1)
logits [[ 1.3113908 -1.1921928  0.9983552 -2.0942943]]
Iteration 800 of 1000: loss=0.24 " + "l1=0.171" + "l2=0.0686 f=-0.225 shape=(1, 9000, 1)
logits [[ 1.2217271 -1.1836896  0.9504054 -1.8903393]]
Iteration 900 of 1000: loss=0.229 " + "l1=0.157" + "l2=0.0718 f=-0.208 shape=(1, 9000, 1)
logits [[ 1.1406341 -1.1673658  0.9093523 -1.7142184]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.525 " + "l1=0.525" + "l2=0 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.5632699 -1.4974971  1.697621  -4.216313 ]]
Iteration 100 of 1000: loss=0.462 " + "l1=0.431" + "l2=0.0308 f=-0.325 shape=(1, 9000, 1)
logits [[ 2.0742316 -1.3531542  1.4717058 -3.4933743]]
Iteration 200 of 1000: loss=0.424 " + "l1=0.374" + "l2=0.05 f=-0.303 shape=(1, 9000, 1)
logits [[ 1.7906344 -1.2653998  1.3001646 -3.038446 ]]
Iteration 300 of 1000: loss=0.388 " + "l1=0.319" + "l2=0.0693 f=-0.283 shape=(1, 9000, 1)
logits [[ 1.5199844 -1.2041938  1.1442717 -2.5913026]]
Iteration 400 of 1000: loss=0.355 " + "l1=0.265" + "l2=0.09 f=-0.258 shape=(1, 9000, 1)
logits [[ 1.2646362 -1.1630081  1.013711  -2.1492336]]
Iteration 500 of 1000: loss=0.326 " + "l1=0.223" + "l2=0.103 f=-0.227 shape=(1, 9000, 1)
logits [[ 1.0848117 -1.1317772  0.9278021 -1.790477 ]]
Iteration 600 of 1000: loss=0.299 " + "l1=0.183" + "l2=0.116 f=-0.193 shape=(1, 9000, 1)
logits [[ 0.919904   -1.0991604   0.84365696 -1.4370085 ]]
Iteration 700 of 1000: loss=0.275 " + "l1=0.15" + "l2=0.125 f=-0.166 shape=(1, 9000, 1)
logits [[ 0.77967495 -1.0556114   0.7703874  -1.1575861 ]]
Iteration 800 of 1000: loss=0.253 " + "l1=0.123" + "l2=0.13 f=-0.139 shape=(1, 9000, 1)
logits [[ 0.68432844 -1.0300962   0.685491   -0.8957799 ]]
Iteration 900 of 1000: loss=0.234 " + "l1=0.0995" + "l2=0.134 f=-0.114 shape=(1, 9000, 1)
logits [[ 0.61239314 -1.0059803   0.610201   -0.6713932 ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.602 " + "l1=0.602" + "l2=0 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.5632699 -1.4974971  1.697621  -4.216313 ]]
Iteration 100 of 1000: loss=0.518 " + "l1=0.476" + "l2=0.0416 f=-0.318 shape=(1, 9000, 1)
logits [[ 1.9965744 -1.3276752  1.430397  -3.3700807]]
Iteration 200 of 1000: loss=0.465 " + "l1=0.397" + "l2=0.0673 f=-0.297 shape=(1, 9000, 1)
logits [[ 1.6495477 -1.2405313  1.2318316 -2.8281775]]
Iteration 300 of 1000: loss=0.416 " + "l1=0.321" + "l2=0.0949 f=-0.266 shape=(1, 9000, 1)
logits [[ 1.332708  -1.1778533  1.0655541 -2.2843397]]
Iteration 400 of 1000: loss=0.373 " + "l1=0.258" + "l2=0.115 f=-0.235 shape=(1, 9000, 1)
logits [[ 1.0767814 -1.1237257  0.9393141 -1.8319268]]
Iteration 500 of 1000: loss=0.334 " + "l1=0.198" + "l2=0.136 f=-0.192 shape=(1, 9000, 1)
logits [[ 0.8573399 -1.086505   0.8333239 -1.3703544]]
Iteration 600 of 1000: loss=0.302 " + "l1=0.16" + "l2=0.143 f=-0.16 shape=(1, 9000, 1)
logits [[ 0.72785974 -1.0288535   0.7287621  -1.0697337 ]]
Iteration 700 of 1000: loss=0.273 " + "l1=0.123" + "l2=0.15 f=-0.129 shape=(1, 9000, 1)
logits [[ 0.62381476 -0.9976805   0.62273103 -0.7636675 ]]
Iteration 800 of 1000: loss=0.249 " + "l1=0.0935" + "l2=0.155 f=-0.105 shape=(1, 9000, 1)
logits [[ 0.5375868  -0.97542816  0.53545076 -0.5162028 ]]
Iteration 900 of 1000: loss=0.227 " + "l1=0.0653" + "l2=0.162 f=-0.0825 shape=(1, 9000, 1)
logits [[ 0.45537105 -0.9544227   0.44969004 -0.2807254 ]]
--- 300.23907136917114 seconds ---
Adv result:3
Loading record A00071
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0962 " + "l1=0.0962" + "l2=0 f=-0.809 shape=(1, 9000, 1)
logits [[  7.9709253  -1.647532    3.349491  -12.90702  ]]
Iteration 100 of 1000: loss=0.096 " + "l1=0.0958" + "l2=0.000182 f=-0.81 shape=(1, 9000, 1)
logits [[  7.9500813  -1.6280131   3.3419454 -12.90319  ]]
Iteration 200 of 1000: loss=0.0959 " + "l1=0.0957" + "l2=0.000164 f=-0.81 shape=(1, 9000, 1)
logits [[  7.9479084  -1.6246021   3.3404896 -12.903991 ]]
Iteration 300 of 1000: loss=0.0958 " + "l1=0.0956" + "l2=0.000208 f=-0.81 shape=(1, 9000, 1)
logits [[  7.94388    -1.6199704   3.3384998 -12.904308 ]]
Iteration 400 of 1000: loss=0.0958 " + "l1=0.0955" + "l2=0.000253 f=-0.811 shape=(1, 9000, 1)
logits [[  7.939572   -1.6152245   3.3365142 -12.90475  ]]
Iteration 500 of 1000: loss=0.0958 " + "l1=0.0955" + "l2=0.000321 f=-0.811 shape=(1, 9000, 1)
logits [[  7.9353113  -1.6105491   3.3345919 -12.905241 ]]
Iteration 600 of 1000: loss=0.0958 " + "l1=0.0954" + "l2=0.000446 f=-0.812 shape=(1, 9000, 1)
logits [[  7.9311714  -1.6063067   3.332875  -12.905587 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.962 " + "l1=0.962" + "l2=0 f=-0.809 shape=(1, 9000, 1)
logits [[  7.9709253  -1.647532    3.349491  -12.90702  ]]
Iteration 100 of 1000: loss=0.942 " + "l1=0.932" + "l2=0.00966 f=-0.821 shape=(1, 9000, 1)
logits [[  7.814427   -1.5080521   3.2952929 -12.884375 ]]
Iteration 200 of 1000: loss=0.93 " + "l1=0.915" + "l2=0.0149 f=-0.827 shape=(1, 9000, 1)
logits [[  7.7342787  -1.4205011   3.2578313 -12.881594 ]]
Iteration 300 of 1000: loss=0.919 " + "l1=0.897" + "l2=0.022 f=-0.835 shape=(1, 9000, 1)
logits [[  7.645936   -1.3261995   3.214604  -12.873373 ]]
Iteration 400 of 1000: loss=0.911 " + "l1=0.883" + "l2=0.0275 f=-0.841 shape=(1, 9000, 1)
logits [[  7.5732055  -1.2606457   3.1729832 -12.851097 ]]
Iteration 500 of 1000: loss=0.903 " + "l1=0.871" + "l2=0.0323 f=-0.848 shape=(1, 9000, 1)
logits [[  7.5040884  -1.2046398   3.1291697 -12.818717 ]]
Iteration 600 of 1000: loss=0.895 " + "l1=0.858" + "l2=0.037 f=-0.852 shape=(1, 9000, 1)
logits [[  7.4305396  -1.1502264   3.0866637 -12.774712 ]]
Iteration 700 of 1000: loss=0.886 " + "l1=0.845" + "l2=0.0419 f=-0.854 shape=(1, 9000, 1)
logits [[  7.3497896  -1.0957675   3.0465674 -12.717275 ]]
Iteration 800 of 1000: loss=0.877 " + "l1=0.829" + "l2=0.0472 f=-0.855 shape=(1, 9000, 1)
logits [[  7.2538166  -1.0397794   3.0060246 -12.639121 ]]
Iteration 900 of 1000: loss=0.865 " + "l1=0.814" + "l2=0.0516 f=-0.853 shape=(1, 9000, 1)
logits [[  7.148433   -0.9886059   2.9672256 -12.538606 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.62 " + "l1=9.62" + "l2=0 f=-0.809 shape=(1, 9000, 1)
logits [[  7.9709253  -1.647532    3.349491  -12.90702  ]]
Iteration 100 of 1000: loss=6.22 " + "l1=4.08" + "l2=2.14 f=-1.02 shape=(1, 9000, 1)
logits [[  4.4372153    0.35676196   2.3402636  -11.226565  ]]
Iteration 200 of 1000: loss=3.73 " + "l1=0.752" + "l2=2.98 f=-1.03 shape=(1, 9000, 1)
logits [[ 2.0801768  1.328541   2.072007  -9.600499 ]]
Iteration 300 of 1000: loss=3.11 " + "l1=0.407" + "l2=2.7 f=-0.972 shape=(1, 9000, 1)
logits [[ 1.8114069  1.4189972  1.8264427 -8.944169 ]]
Iteration 400 of 1000: loss=2.8 " + "l1=0.261" + "l2=2.54 f=-0.936 shape=(1, 9000, 1)
logits [[ 1.6929072  1.4315717  1.6923069 -8.55953  ]]
Iteration 500 of 1000: loss=2.56 " + "l1=0.167" + "l2=2.39 f=-0.91 shape=(1, 9000, 1)
logits [[ 1.5988073  1.4319209  1.5989523 -8.268653 ]]
Iteration 600 of 1000: loss=2.35 " + "l1=0.0735" + "l2=2.28 f=-0.878 shape=(1, 9000, 1)
logits [[ 1.5002241  1.426684   1.4909174 -7.9286475]]
Iteration 700 of 1000: loss=2.2 " + "l1=0.0101" + "l2=2.19 f=-0.866 shape=(1, 9000, 1)
logits [[ 1.4097911  1.3996528  1.4083788 -7.6804466]]
Iteration 800 of 1000: loss=2.06 " + "l1=0.0104" + "l2=2.05 f=-0.855 shape=(1, 9000, 1)
logits [[ 1.333043   1.3427907  1.3532133 -7.447105 ]]
Iteration 900 of 1000: loss=1.92 " + "l1=0.0142" + "l2=1.91 f=-0.83 shape=(1, 9000, 1)
logits [[ 1.298795   1.2846187  1.2875161 -7.189236 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.29 " + "l1=5.29" + "l2=0 f=-0.809 shape=(1, 9000, 1)
logits [[  7.9709253  -1.647532    3.349491  -12.90702  ]]
Iteration 100 of 1000: loss=4.46 " + "l1=3.94" + "l2=0.516 f=-0.924 shape=(1, 9000, 1)
logits [[  6.5506086  -0.6196946   2.7626219 -12.390005 ]]
Iteration 200 of 1000: loss=3.7 " + "l1=2.71" + "l2=0.999 f=-1.01 shape=(1, 9000, 1)
logits [[  5.043267     0.12409762   2.3722253  -11.588573  ]]
Iteration 300 of 1000: loss=3.02 " + "l1=1.6" + "l2=1.42 f=-0.989 shape=(1, 9000, 1)
logits [[  3.5652103   0.6475089   2.1892097 -10.359247 ]]
Iteration 400 of 1000: loss=2.43 " + "l1=0.796" + "l2=1.64 f=-0.919 shape=(1, 9000, 1)
logits [[ 2.39277    0.9455051  2.0602183 -9.074972 ]]
Iteration 500 of 1000: loss=2.12 " + "l1=0.485" + "l2=1.63 f=-0.873 shape=(1, 9000, 1)
logits [[ 1.9102433  1.0287209  1.9028382 -8.333844 ]]
Iteration 600 of 1000: loss=1.98 " + "l1=0.467" + "l2=1.51 f=-0.839 shape=(1, 9000, 1)
logits [[ 1.8373064   0.98907906  1.8334364  -8.01474   ]]
Iteration 700 of 1000: loss=1.88 " + "l1=0.453" + "l2=1.42 f=-0.807 shape=(1, 9000, 1)
logits [[ 1.7808745   0.95641875  1.7752961  -7.741527  ]]
Iteration 800 of 1000: loss=1.79 " + "l1=0.436" + "l2=1.35 f=-0.784 shape=(1, 9000, 1)
logits [[ 1.7172036  0.9247678  1.712525  -7.491089 ]]
Iteration 900 of 1000: loss=1.72 " + "l1=0.408" + "l2=1.31 f=-0.76 shape=(1, 9000, 1)
logits [[ 1.6423042  0.9027521  1.6449876 -7.2300296]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=7.45 " + "l1=7.45" + "l2=0 f=-0.809 shape=(1, 9000, 1)
logits [[  7.9709253  -1.647532    3.349491  -12.90702  ]]
Iteration 100 of 1000: loss=5.55 " + "l1=4.34" + "l2=1.21 f=-0.992 shape=(1, 9000, 1)
logits [[  5.492627    -0.10970467   2.4874284  -11.837132  ]]
Iteration 200 of 1000: loss=3.86 " + "l1=1.5" + "l2=2.37 f=-1.05 shape=(1, 9000, 1)
logits [[  2.8617387    0.93205756   2.212732   -10.201655  ]]
Iteration 300 of 1000: loss=2.91 " + "l1=0.57" + "l2=2.34 f=-0.968 shape=(1, 9000, 1)
logits [[ 1.9811349  1.2528704  1.988812  -9.094506 ]]
Iteration 400 of 1000: loss=2.54 " + "l1=0.422" + "l2=2.12 f=-0.913 shape=(1, 9000, 1)
logits [[ 1.8203652  1.2760932  1.8159612 -8.563493 ]]
Iteration 500 of 1000: loss=2.31 " + "l1=0.292" + "l2=2.02 f=-0.87 shape=(1, 9000, 1)
logits [[ 1.6617712  1.296778   1.6732521 -8.11172  ]]
Iteration 600 of 1000: loss=2.16 " + "l1=0.211" + "l2=1.95 f=-0.844 shape=(1, 9000, 1)
logits [[ 1.5543094  1.2955498  1.5678221 -7.7930574]]
Iteration 700 of 1000: loss=2.05 " + "l1=0.157" + "l2=1.89 f=-0.828 shape=(1, 9000, 1)
logits [[ 1.4856824  1.2866389  1.4887409 -7.571255 ]]
Iteration 800 of 1000: loss=1.95 " + "l1=0.117" + "l2=1.83 f=-0.813 shape=(1, 9000, 1)
logits [[ 1.3979973  1.2655404  1.4164016 -7.330229 ]]
Iteration 900 of 1000: loss=1.83 " + "l1=0.0891" + "l2=1.74 f=-0.792 shape=(1, 9000, 1)
logits [[ 1.3495321  1.2345533  1.3463812 -7.096897 ]]
--- 276.5545287132263 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0462 " + "l1=0.0462" + "l2=0 f=-0.809 shape=(1, 9000, 1)
logits [[  7.9709253  -1.647532    3.349491  -12.90702  ]]
Iteration 100 of 1000: loss=0.0461 " + "l1=0.046" + "l2=0.000114 f=-0.81 shape=(1, 9000, 1)
logits [[  7.9569335  -1.6462575   3.3553882 -12.904907 ]]
Iteration 200 of 1000: loss=0.0461 " + "l1=0.046" + "l2=7.91e-05 f=-0.81 shape=(1, 9000, 1)
logits [[  7.95699    -1.6462206   3.3557153 -12.905575 ]]
Iteration 300 of 1000: loss=0.0461 " + "l1=0.046" + "l2=9.4e-05 f=-0.81 shape=(1, 9000, 1)
logits [[  7.9554653  -1.6462967   3.3569288 -12.905924 ]]
Iteration 400 of 1000: loss=0.0461 " + "l1=0.046" + "l2=0.000149 f=-0.81 shape=(1, 9000, 1)
logits [[  7.953673   -1.6463343   3.3581953 -12.906241 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.462 " + "l1=0.462" + "l2=0 f=-0.809 shape=(1, 9000, 1)
logits [[  7.9709253  -1.647532    3.349491  -12.90702  ]]
Iteration 100 of 1000: loss=0.454 " + "l1=0.449" + "l2=0.00462 f=-0.817 shape=(1, 9000, 1)
logits [[  7.8794203  -1.6431544   3.3878314 -12.891143 ]]
Iteration 200 of 1000: loss=0.45 " + "l1=0.444" + "l2=0.00603 f=-0.82 shape=(1, 9000, 1)
logits [[  7.845206   -1.6387578   3.4020205 -12.888954 ]]
Iteration 300 of 1000: loss=0.447 " + "l1=0.44" + "l2=0.00756 f=-0.824 shape=(1, 9000, 1)
logits [[  7.8107877  -1.6332195   3.414399  -12.88729  ]]
Iteration 400 of 1000: loss=0.444 " + "l1=0.435" + "l2=0.00916 f=-0.827 shape=(1, 9000, 1)
logits [[  7.7767982  -1.6286964   3.4263153 -12.884084 ]]
Iteration 500 of 1000: loss=0.441 " + "l1=0.431" + "l2=0.0107 f=-0.83 shape=(1, 9000, 1)
logits [[  7.7433605  -1.6256615   3.437261  -12.876217 ]]
Iteration 600 of 1000: loss=0.438 " + "l1=0.426" + "l2=0.0121 f=-0.832 shape=(1, 9000, 1)
logits [[  7.71029    -1.6223826   3.4469829 -12.864853 ]]
Iteration 700 of 1000: loss=0.435 " + "l1=0.422" + "l2=0.0137 f=-0.835 shape=(1, 9000, 1)
logits [[  7.6730766  -1.61937     3.457161  -12.851307 ]]
Iteration 800 of 1000: loss=0.432 " + "l1=0.417" + "l2=0.015 f=-0.837 shape=(1, 9000, 1)
logits [[  7.633818  -1.616311   3.465866 -12.831574]]
Iteration 900 of 1000: loss=0.428 " + "l1=0.412" + "l2=0.0162 f=-0.839 shape=(1, 9000, 1)
logits [[  7.593422   -1.6144608   3.4731715 -12.80643  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.62 " + "l1=4.62" + "l2=0 f=-0.809 shape=(1, 9000, 1)
logits [[  7.9709253  -1.647532    3.349491  -12.90702  ]]
Iteration 100 of 1000: loss=3.56 " + "l1=2.85" + "l2=0.702 f=-0.899 shape=(1, 9000, 1)
logits [[  6.503478   -1.6326637   3.6502562 -12.118993 ]]
Iteration 200 of 1000: loss=2.56 " + "l1=1.15" + "l2=1.41 f=-0.897 shape=(1, 9000, 1)
logits [[  5.041738   -1.8251652   3.8892496 -10.694384 ]]
Iteration 300 of 1000: loss=1.62 " + "l1=0.0193" + "l2=1.6 f=-0.857 shape=(1, 9000, 1)
logits [[ 3.9971685 -1.884755   3.9778686 -9.519651 ]]
Iteration 400 of 1000: loss=1.31 " + "l1=0.00194" + "l2=1.31 f=-0.844 shape=(1, 9000, 1)
logits [[ 3.8793218 -1.8015481  3.8773773 -9.332432 ]]
Iteration 500 of 1000: loss=1.18 " + "l1=0.00657" + "l2=1.17 f=-0.841 shape=(1, 9000, 1)
logits [[ 3.8058703 -1.7567574  3.799303  -9.210655 ]]
Iteration 600 of 1000: loss=1.07 " + "l1=0.0231" + "l2=1.05 f=-0.839 shape=(1, 9000, 1)
logits [[ 3.755504  -1.7470031  3.7323644 -9.095425 ]]
Iteration 700 of 1000: loss=0.956 " + "l1=0.00187" + "l2=0.954 f=-0.837 shape=(1, 9000, 1)
logits [[ 3.6975188 -1.7865808  3.6956472 -8.95307  ]]
Iteration 800 of 1000: loss=0.883 " + "l1=0" + "l2=0.883 f=-0.834 shape=(1, 9000, 1)
logits [[ 3.6458387 -1.810048   3.6595218 -8.829599 ]]
Iteration 900 of 1000: loss=0.823 " + "l1=0.000718" + "l2=0.822 f=-0.829 shape=(1, 9000, 1)
logits [[ 3.6144881 -1.8113911  3.6137698 -8.73267  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.54 " + "l1=2.54" + "l2=0 f=-0.809 shape=(1, 9000, 1)
logits [[  7.9709253  -1.647532    3.349491  -12.90702  ]]
Iteration 100 of 1000: loss=2.27 " + "l1=2.11" + "l2=0.161 f=-0.862 shape=(1, 9000, 1)
logits [[  7.3541064  -1.6261324   3.517297  -12.694062 ]]
Iteration 200 of 1000: loss=2.09 " + "l1=1.81" + "l2=0.277 f=-0.886 shape=(1, 9000, 1)
logits [[  6.8907495  -1.5905664   3.594137  -12.437636 ]]
Iteration 300 of 1000: loss=1.89 " + "l1=1.48" + "l2=0.403 f=-0.89 shape=(1, 9000, 1)
logits [[  6.3288555  -1.5865874   3.6319394 -11.933227 ]]
Iteration 400 of 1000: loss=1.66 " + "l1=1.17" + "l2=0.496 f=-0.88 shape=(1, 9000, 1)
logits [[  5.7715654  -1.6318349   3.6477206 -11.307587 ]]
Iteration 500 of 1000: loss=1.4 " + "l1=0.726" + "l2=0.676 f=-0.84 shape=(1, 9000, 1)
logits [[  5.035212   -1.7384069   3.7149785 -10.370367 ]]
Iteration 600 of 1000: loss=1.26 " + "l1=0.487" + "l2=0.769 f=-0.827 shape=(1, 9000, 1)
logits [[ 4.5882773 -1.7630593  3.7021065 -9.835393 ]]
Iteration 700 of 1000: loss=1.13 " + "l1=0.274" + "l2=0.855 f=-0.831 shape=(1, 9000, 1)
logits [[ 4.1763062 -1.8035175  3.6772568 -9.375862 ]]
Iteration 800 of 1000: loss=0.949 " + "l1=0.0191" + "l2=0.93 f=-0.816 shape=(1, 9000, 1)
logits [[ 3.7037482 -1.8643333  3.6690118 -8.772581 ]]
Iteration 900 of 1000: loss=0.832 " + "l1=0.00364" + "l2=0.829 f=-0.801 shape=(1, 9000, 1)
logits [[ 3.608427  -1.8462294  3.6018136 -8.568254 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.5 " + "l1=1.5" + "l2=0 f=-0.809 shape=(1, 9000, 1)
logits [[  7.9709253  -1.647532    3.349491  -12.90702  ]]
Iteration 100 of 1000: loss=1.41 " + "l1=1.37" + "l2=0.0471 f=-0.836 shape=(1, 9000, 1)
logits [[  7.6617384  -1.6283089   3.4568567 -12.835632 ]]
Iteration 200 of 1000: loss=1.37 " + "l1=1.29" + "l2=0.0719 f=-0.853 shape=(1, 9000, 1)
logits [[  7.4821935  -1.6185358   3.5027387 -12.777931 ]]
Iteration 300 of 1000: loss=1.32 " + "l1=1.22" + "l2=0.096 f=-0.863 shape=(1, 9000, 1)
logits [[  7.3000145  -1.6004379   3.5409303 -12.694364 ]]
Iteration 400 of 1000: loss=1.26 " + "l1=1.14" + "l2=0.126 f=-0.866 shape=(1, 9000, 1)
logits [[  7.068823   -1.58447     3.5741718 -12.521164 ]]
Iteration 500 of 1000: loss=1.19 " + "l1=1.03" + "l2=0.154 f=-0.858 shape=(1, 9000, 1)
logits [[  6.788016   -1.5913436   3.6123545 -12.242871 ]]
Iteration 600 of 1000: loss=1.12 " + "l1=0.945" + "l2=0.177 f=-0.856 shape=(1, 9000, 1)
logits [[  6.508077   -1.6047883   3.5988603 -11.9261465]]
Iteration 700 of 1000: loss=1.07 " + "l1=0.87" + "l2=0.2 f=-0.849 shape=(1, 9000, 1)
logits [[  6.249937   -1.6049635   3.5735648 -11.613104 ]]
Iteration 800 of 1000: loss=1.01 " + "l1=0.78" + "l2=0.228 f=-0.83 shape=(1, 9000, 1)
logits [[  5.941618   -1.5967107   3.5410655 -11.20689  ]]
Iteration 900 of 1000: loss=0.955 " + "l1=0.704" + "l2=0.251 f=-0.818 shape=(1, 9000, 1)
logits [[  5.670393   -1.589301    3.5042362 -10.855664 ]]
--- 263.90309953689575 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.209 " + "l1=0.209" + "l2=0 f=-0.809 shape=(1, 9000, 1)
logits [[  7.9709253  -1.647532    3.349491  -12.90702  ]]
Iteration 100 of 1000: loss=0.209 " + "l1=0.208" + "l2=0.000188 f=-0.808 shape=(1, 9000, 1)
logits [[  7.953207   -1.6426969   3.3449829 -12.886841 ]]
Iteration 200 of 1000: loss=0.209 " + "l1=0.208" + "l2=0.00016 f=-0.808 shape=(1, 9000, 1)
logits [[  7.9518695  -1.6417547   3.344065  -12.885922 ]]
Iteration 300 of 1000: loss=0.209 " + "l1=0.208" + "l2=0.000193 f=-0.808 shape=(1, 9000, 1)
logits [[  7.949014   -1.6405667   3.3428495 -12.883089 ]]
Iteration 400 of 1000: loss=0.208 " + "l1=0.208" + "l2=0.00023 f=-0.808 shape=(1, 9000, 1)
logits [[  7.9460254  -1.6394116   3.3416374 -12.880059 ]]
Iteration 500 of 1000: loss=0.208 " + "l1=0.208" + "l2=0.00028 f=-0.808 shape=(1, 9000, 1)
logits [[  7.9430137  -1.6382565   3.3404462 -12.877086 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=2.09 " + "l1=2.09" + "l2=0 f=-0.809 shape=(1, 9000, 1)
logits [[  7.9709253  -1.647532    3.349491  -12.90702  ]]
Iteration 100 of 1000: loss=2.07 " + "l1=2.06" + "l2=0.0112 f=-0.806 shape=(1, 9000, 1)
logits [[  7.8301525  -1.6132202   3.3141794 -12.754044 ]]
Iteration 200 of 1000: loss=2.06 " + "l1=2.05" + "l2=0.0154 f=-0.804 shape=(1, 9000, 1)
logits [[  7.7712226  -1.5947285   3.294508  -12.687486 ]]
Iteration 300 of 1000: loss=2.05 " + "l1=2.03" + "l2=0.0201 f=-0.802 shape=(1, 9000, 1)
logits [[  7.710628   -1.5736334   3.2742581 -12.618165 ]]
Iteration 400 of 1000: loss=2.04 " + "l1=2.02" + "l2=0.0257 f=-0.798 shape=(1, 9000, 1)
logits [[  7.6420283  -1.5498402   3.2514422 -12.535846 ]]
Iteration 500 of 1000: loss=2.03 " + "l1=2" + "l2=0.0318 f=-0.793 shape=(1, 9000, 1)
logits [[  7.552764   -1.5174327   3.2197843 -12.426264 ]]
Iteration 600 of 1000: loss=2.01 " + "l1=1.97" + "l2=0.0385 f=-0.786 shape=(1, 9000, 1)
logits [[  7.42924    -1.4814695   3.181244  -12.274476 ]]
Iteration 700 of 1000: loss=1.98 " + "l1=1.93" + "l2=0.0497 f=-0.776 shape=(1, 9000, 1)
logits [[  7.236466  -1.435999   3.128348 -12.032416]]
Iteration 800 of 1000: loss=1.93 " + "l1=1.87" + "l2=0.0634 f=-0.755 shape=(1, 9000, 1)
logits [[  6.983638   -1.384245    3.0664775 -11.687277 ]]
Iteration 900 of 1000: loss=1.88 " + "l1=1.8" + "l2=0.0788 f=-0.735 shape=(1, 9000, 1)
logits [[  6.704865   -1.3613366   3.024318  -11.30902  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=20.9 " + "l1=20.9" + "l2=0 f=-0.809 shape=(1, 9000, 1)
logits [[  7.9709253  -1.647532    3.349491  -12.90702  ]]
Iteration 100 of 1000: loss=15.6 " + "l1=11.8" + "l2=3.81 f=-0.679 shape=(1, 9000, 1)
logits [[ 3.8086858 -0.9781328  2.4656138 -8.01177  ]]
Iteration 200 of 1000: loss=10.9 " + "l1=5.69" + "l2=5.16 f=-0.514 shape=(1, 9000, 1)
logits [[ 1.3543565 -0.4294888  1.3562092 -4.335844 ]]
Iteration 300 of 1000: loss=8.41 " + "l1=3.04" + "l2=5.37 f=-0.334 shape=(1, 9000, 1)
logits [[ 0.68777823 -0.55119497  0.7827245  -2.2556782 ]]
Iteration 400 of 1000: loss=6.8 " + "l1=1.18" + "l2=5.62 f=-0.249 shape=(1, 9000, 1)
logits [[-0.01286007 -0.7159709   0.45614433 -0.7250225 ]]
Iteration 500 of 1000: loss=5.57 " + "l1=0.416" + "l2=5.15 f=-0.172 shape=(1, 9000, 1)
logits [[-0.19269934 -0.84421235  0.3828133  -0.03343722]]
Iteration 600 of 1000: loss=4.54 " + "l1=0.044" + "l2=4.5 f=-0.137 shape=(1, 9000, 1)
logits [[-0.2378498  -0.92722386  0.33098835  0.2869503 ]]
Iteration 700 of 1000: loss=3.76 " + "l1=0.00617" + "l2=3.76 f=-0.137 shape=(1, 9000, 1)
logits [[-0.17998835 -0.9744766   0.30666557  0.30049577]]
Iteration 800 of 1000: loss=3.18 " + "l1=0.00752" + "l2=3.17 f=-0.128 shape=(1, 9000, 1)
logits [[-0.12617609 -0.9777254   0.29903367  0.29150948]]
Iteration 900 of 1000: loss=2.74 " + "l1=0.0224" + "l2=2.72 f=-0.112 shape=(1, 9000, 1)
logits [[-0.06824883 -0.9622803   0.30157378  0.2791995 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=11.5 " + "l1=11.5" + "l2=0 f=-0.809 shape=(1, 9000, 1)
logits [[  7.9709253  -1.647532    3.349491  -12.90702  ]]
Iteration 100 of 1000: loss=10.3 " + "l1=9.4" + "l2=0.933 f=-0.781 shape=(1, 9000, 1)
logits [[  6.192775   -1.3319194   2.909863  -10.894056 ]]
Iteration 200 of 1000: loss=8.91 " + "l1=7.18" + "l2=1.73 f=-0.717 shape=(1, 9000, 1)
logits [[ 4.4187965 -1.2626685  2.6187932 -8.644757 ]]
Iteration 300 of 1000: loss=7.21 " + "l1=4.79" + "l2=2.42 f=-0.62 shape=(1, 9000, 1)
logits [[ 2.547846  -1.0244931  2.155859  -6.1606894]]
Iteration 400 of 1000: loss=5.88 " + "l1=3.07" + "l2=2.82 f=-0.448 shape=(1, 9000, 1)
logits [[ 1.5058966 -0.7428401  1.5102037 -4.06479  ]]
Iteration 500 of 1000: loss=4.95 " + "l1=2.19" + "l2=2.75 f=-0.347 shape=(1, 9000, 1)
logits [[ 1.096433  -0.6936261  1.096852  -2.8892899]]
Iteration 600 of 1000: loss=4.32 " + "l1=1.66" + "l2=2.66 f=-0.284 shape=(1, 9000, 1)
logits [[ 0.88393766 -0.79181653  0.8937438  -2.1217928 ]]
Iteration 700 of 1000: loss=3.75 " + "l1=1.13" + "l2=2.62 f=-0.198 shape=(1, 9000, 1)
logits [[ 0.69855803 -0.8515586   0.711735   -1.3492641 ]]
Iteration 800 of 1000: loss=3.1 " + "l1=0.525" + "l2=2.58 f=-0.132 shape=(1, 9000, 1)
logits [[ 0.4081489  -0.91163456  0.46496063 -0.49024287]]
Iteration 900 of 1000: loss=2.55 " + "l1=0.103" + "l2=2.44 f=-0.0855 shape=(1, 9000, 1)
logits [[ 0.1665206  -0.9698388   0.32407403  0.13712767]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=6.79 " + "l1=6.79" + "l2=0 f=-0.809 shape=(1, 9000, 1)
logits [[  7.9709253  -1.647532    3.349491  -12.90702  ]]
Iteration 100 of 1000: loss=6.52 " + "l1=6.3" + "l2=0.216 f=-0.803 shape=(1, 9000, 1)
logits [[  7.2628746  -1.5262748   3.1712677 -12.119781 ]]
Iteration 200 of 1000: loss=6.22 " + "l1=5.77" + "l2=0.456 f=-0.782 shape=(1, 9000, 1)
logits [[  6.501721   -1.3782682   2.9953043 -11.246454 ]]
Iteration 300 of 1000: loss=5.69 " + "l1=4.93" + "l2=0.759 f=-0.694 shape=(1, 9000, 1)
logits [[ 5.4205165 -1.2874887  2.846736  -9.757244 ]]
Iteration 400 of 1000: loss=5.07 " + "l1=4.09" + "l2=0.981 f=-0.641 shape=(1, 9000, 1)
logits [[ 4.3602705 -1.2448752  2.549803  -8.229655 ]]
Iteration 500 of 1000: loss=4.51 " + "l1=3.28" + "l2=1.23 f=-0.59 shape=(1, 9000, 1)
logits [[ 3.3354406 -1.1850092  2.2452838 -6.7566986]]
Iteration 600 of 1000: loss=4.04 " + "l1=2.71" + "l2=1.33 f=-0.541 shape=(1, 9000, 1)
logits [[ 2.6695554 -1.1713268  2.0097117 -5.6714497]]
Iteration 700 of 1000: loss=3.53 " + "l1=2.11" + "l2=1.42 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.0258467 -1.1609932  1.7465804 -4.461716 ]]
Iteration 800 of 1000: loss=3.04 " + "l1=1.57" + "l2=1.47 f=-0.37 shape=(1, 9000, 1)
logits [[ 1.5164716 -1.1690137  1.4968015 -3.3240523]]
Iteration 900 of 1000: loss=2.63 " + "l1=1.24" + "l2=1.38 f=-0.339 shape=(1, 9000, 1)
logits [[ 1.175108  -1.0540565  1.172169  -2.6487796]]
--- 272.5314071178436 seconds ---
Adv result:3
Loading record A00090
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0395 " + "l1=0.0395" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 2.6004963 -1.3541565  1.818498  -5.465495 ]]
Iteration 100 of 1000: loss=0.0391 " + "l1=0.0387" + "l2=0.000345 f=-0.603 shape=(1, 9000, 1)
logits [[ 2.5389593 -1.3317909  1.801542  -5.4188213]]
Iteration 200 of 1000: loss=0.0389 " + "l1=0.0386" + "l2=0.000341 f=-0.602 shape=(1, 9000, 1)
logits [[ 2.530201  -1.32744    1.7982178 -5.410267 ]]
Iteration 300 of 1000: loss=0.0388 " + "l1=0.0384" + "l2=0.000424 f=-0.602 shape=(1, 9000, 1)
logits [[ 2.5200467 -1.3214636  1.7938856 -5.4012337]]
Iteration 400 of 1000: loss=0.0387 " + "l1=0.0383" + "l2=0.000488 f=-0.602 shape=(1, 9000, 1)
logits [[ 2.5095096 -1.3156949  1.7895374 -5.3915277]]
Iteration 500 of 1000: loss=0.0387 " + "l1=0.0381" + "l2=0.000616 f=-0.602 shape=(1, 9000, 1)
logits [[ 2.4988601 -1.3100073  1.7852064 -5.381459 ]]
Iteration 600 of 1000: loss=0.0387 " + "l1=0.0379" + "l2=0.000724 f=-0.602 shape=(1, 9000, 1)
logits [[ 2.488542  -1.3047261  1.7811385 -5.371199 ]]
Iteration 700 of 1000: loss=0.0386 " + "l1=0.0378" + "l2=0.000828 f=-0.601 shape=(1, 9000, 1)
logits [[ 2.4786794 -1.2998313  1.7773582 -5.3611417]]
Iteration 800 of 1000: loss=0.0387 " + "l1=0.0376" + "l2=0.00102 f=-0.601 shape=(1, 9000, 1)
logits [[ 2.4693239 -1.2955612  1.7740792 -5.351596 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.395 " + "l1=0.395" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 2.6004963 -1.3541565  1.818498  -5.465495 ]]
Iteration 100 of 1000: loss=0.352 " + "l1=0.329" + "l2=0.023 f=-0.622 shape=(1, 9000, 1)
logits [[ 2.121129  -1.1708455  1.6715522 -5.109986 ]]
Iteration 200 of 1000: loss=0.333 " + "l1=0.3" + "l2=0.0323 f=-0.618 shape=(1, 9000, 1)
logits [[ 1.9362551 -1.0672308  1.5909876 -4.9333673]]
Iteration 300 of 1000: loss=0.316 " + "l1=0.276" + "l2=0.0399 f=-0.614 shape=(1, 9000, 1)
logits [[ 1.7953088  -0.96870744  1.5165378  -4.7973676 ]]
Iteration 400 of 1000: loss=0.302 " + "l1=0.255" + "l2=0.0475 f=-0.61 shape=(1, 9000, 1)
logits [[ 1.6702237 -0.8784092  1.4520802 -4.683334 ]]
Iteration 500 of 1000: loss=0.29 " + "l1=0.235" + "l2=0.055 f=-0.61 shape=(1, 9000, 1)
logits [[ 1.5489722 -0.8022075  1.4049842 -4.5922103]]
Iteration 600 of 1000: loss=0.279 " + "l1=0.218" + "l2=0.0614 f=-0.613 shape=(1, 9000, 1)
logits [[ 1.4429843 -0.7357919  1.3627242 -4.521932 ]]
Iteration 700 of 1000: loss=0.269 " + "l1=0.202" + "l2=0.0673 f=-0.615 shape=(1, 9000, 1)
logits [[ 1.3464718  -0.66925436  1.3211386  -4.459727  ]]
Iteration 800 of 1000: loss=0.26 " + "l1=0.19" + "l2=0.0693 f=-0.616 shape=(1, 9000, 1)
logits [[ 1.2834703 -0.6189006  1.2794367 -4.408357 ]]
Iteration 900 of 1000: loss=0.249 " + "l1=0.175" + "l2=0.074 f=-0.618 shape=(1, 9000, 1)
logits [[ 1.2063488  -0.54139704  1.2012175  -4.3367567 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.95 " + "l1=3.95" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 2.6004963 -1.3541565  1.818498  -5.465495 ]]
Iteration 100 of 1000: loss=1.42 " + "l1=0.549" + "l2=0.867 f=-0.595 shape=(1, 9000, 1)
logits [[ 0.5922673   0.05905487  0.6082948  -3.6414442 ]]
Iteration 200 of 1000: loss=0.737 " + "l1=0" + "l2=0.737 f=-0.568 shape=(1, 9000, 1)
logits [[ 0.3324536   0.3352112   0.32389098 -3.2643397 ]]
Iteration 300 of 1000: loss=0.527 " + "l1=0" + "l2=0.527 f=-0.571 shape=(1, 9000, 1)
logits [[ 0.31911805  0.32404554  0.32133147 -3.2485256 ]]
Iteration 400 of 1000: loss=0.42 " + "l1=0" + "l2=0.42 f=-0.577 shape=(1, 9000, 1)
logits [[ 0.31780633  0.32421806  0.32418916 -3.2728746 ]]
Iteration 500 of 1000: loss=0.368 " + "l1=0.00623" + "l2=0.361 f=-0.58 shape=(1, 9000, 1)
logits [[ 0.3311166   0.32488742  0.32208034 -3.2966168 ]]
Iteration 600 of 1000: loss=0.325 " + "l1=0.00413" + "l2=0.321 f=-0.586 shape=(1, 9000, 1)
logits [[ 0.31900457  0.32304838  0.3271739  -3.3146465 ]]
Iteration 700 of 1000: loss=0.289 " + "l1=0" + "l2=0.289 f=-0.589 shape=(1, 9000, 1)
logits [[ 0.31755337  0.32950935  0.32286736 -3.3277051 ]]
Iteration 800 of 1000: loss=0.257 " + "l1=0" + "l2=0.257 f=-0.599 shape=(1, 9000, 1)
logits [[ 0.28850576  0.32916766  0.323577   -3.3373954 ]]
Iteration 900 of 1000: loss=0.228 " + "l1=0" + "l2=0.228 f=-0.604 shape=(1, 9000, 1)
logits [[ 0.28192076  0.32872522  0.3275041  -3.3536944 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.18 " + "l1=2.18" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 2.6004963 -1.3541565  1.818498  -5.465495 ]]
Iteration 100 of 1000: loss=1.15 " + "l1=0.755" + "l2=0.392 f=-0.624 shape=(1, 9000, 1)
logits [[ 0.9983705  -0.37453175  0.9849115  -4.1027694 ]]
Iteration 200 of 1000: loss=0.785 " + "l1=0.322" + "l2=0.463 f=-0.594 shape=(1, 9000, 1)
logits [[ 0.6108813   0.02862216  0.6145064  -3.6298027 ]]
Iteration 300 of 1000: loss=0.502 " + "l1=0.0196" + "l2=0.483 f=-0.566 shape=(1, 9000, 1)
logits [[ 0.34208643  0.31277382  0.34834626 -3.2687788 ]]
Iteration 400 of 1000: loss=0.365 " + "l1=0.00241" + "l2=0.363 f=-0.572 shape=(1, 9000, 1)
logits [[ 0.3363888   0.33529598  0.3396782  -3.2985728 ]]
Iteration 500 of 1000: loss=0.296 " + "l1=0.000656" + "l2=0.296 f=-0.577 shape=(1, 9000, 1)
logits [[ 0.32914743  0.3407305   0.3419226  -3.3185375 ]]
Iteration 600 of 1000: loss=0.239 " + "l1=0.0032" + "l2=0.236 f=-0.584 shape=(1, 9000, 1)
logits [[ 0.33043155  0.33713531  0.34295124 -3.34674   ]]
Iteration 700 of 1000: loss=0.2 " + "l1=0.000224" + "l2=0.199 f=-0.596 shape=(1, 9000, 1)
logits [[ 0.31086788  0.34025782  0.34066555 -3.3762667 ]]
Iteration 800 of 1000: loss=0.173 " + "l1=0" + "l2=0.173 f=-0.599 shape=(1, 9000, 1)
logits [[ 0.33405557  0.34330404  0.34219557 -3.4169798 ]]
Iteration 900 of 1000: loss=0.158 " + "l1=0.000805" + "l2=0.157 f=-0.607 shape=(1, 9000, 1)
logits [[ 0.31917253  0.34089303  0.34235606 -3.429032  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.29 " + "l1=1.29" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 2.6004963 -1.3541565  1.818498  -5.465495 ]]
Iteration 100 of 1000: loss=0.857 " + "l1=0.666" + "l2=0.19 f=-0.639 shape=(1, 9000, 1)
logits [[ 1.3149309 -0.7353547  1.3124486 -4.4475765]]
Iteration 200 of 1000: loss=0.693 " + "l1=0.464" + "l2=0.229 f=-0.617 shape=(1, 9000, 1)
logits [[ 1.0262471  -0.40193862  1.0250216  -4.115738  ]]
Iteration 300 of 1000: loss=0.57 " + "l1=0.309" + "l2=0.261 f=-0.599 shape=(1, 9000, 1)
logits [[ 0.79045546 -0.15128511  0.7986959  -3.8346248 ]]
Iteration 400 of 1000: loss=0.449 " + "l1=0.165" + "l2=0.284 f=-0.586 shape=(1, 9000, 1)
logits [[ 0.58147657  0.08337601  0.5901811  -3.6000774 ]]
Iteration 500 of 1000: loss=0.312 " + "l1=0.0468" + "l2=0.265 f=-0.575 shape=(1, 9000, 1)
logits [[ 0.4108212   0.27385807  0.41787574 -3.4037848 ]]
Iteration 600 of 1000: loss=0.217 " + "l1=0.00188" + "l2=0.215 f=-0.588 shape=(1, 9000, 1)
logits [[ 0.34670338  0.34775907  0.3535429  -3.4016588 ]]
Iteration 700 of 1000: loss=0.179 " + "l1=0" + "l2=0.179 f=-0.596 shape=(1, 9000, 1)
logits [[ 0.34936914  0.35213745  0.3519787  -3.4388437 ]]
Iteration 800 of 1000: loss=0.162 " + "l1=0" + "l2=0.162 f=-0.601 shape=(1, 9000, 1)
logits [[ 0.335458    0.35053733  0.34208485 -3.430845  ]]
Iteration 900 of 1000: loss=0.15 " + "l1=0" + "l2=0.15 f=-0.603 shape=(1, 9000, 1)
logits [[ 0.3326957   0.34233272  0.3377803  -3.422979  ]]
--- 288.27171897888184 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00782 " + "l1=0.00782" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 2.6004963 -1.3541565  1.818498  -5.465495 ]]
Iteration 100 of 1000: loss=0.00749 " + "l1=0.00722" + "l2=0.000264 f=-0.605 shape=(1, 9000, 1)
logits [[ 2.548899  -1.359099   1.8266951 -5.434562 ]]
Iteration 200 of 1000: loss=0.00741 " + "l1=0.00716" + "l2=0.000253 f=-0.605 shape=(1, 9000, 1)
logits [[ 2.543805  -1.3596483  1.8277975 -5.4316077]]
Iteration 300 of 1000: loss=0.00736 " + "l1=0.00707" + "l2=0.000292 f=-0.605 shape=(1, 9000, 1)
logits [[ 2.5363817 -1.3603964  1.8291788 -5.4265575]]
Iteration 400 of 1000: loss=0.00734 " + "l1=0.00698" + "l2=0.000359 f=-0.606 shape=(1, 9000, 1)
logits [[ 2.5289915 -1.3609856  1.8305347 -5.4214263]]
Iteration 500 of 1000: loss=0.00731 " + "l1=0.0069" + "l2=0.000407 f=-0.606 shape=(1, 9000, 1)
logits [[ 2.5217757 -1.3615062  1.8318453 -5.4162917]]
Iteration 600 of 1000: loss=0.00733 " + "l1=0.00682" + "l2=0.000511 f=-0.606 shape=(1, 9000, 1)
logits [[ 2.514767  -1.3620433  1.8329992 -5.4113135]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0782 " + "l1=0.0782" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 2.6004963 -1.3541565  1.818498  -5.465495 ]]
Iteration 100 of 1000: loss=0.0498 " + "l1=0.0335" + "l2=0.0163 f=-0.637 shape=(1, 9000, 1)
logits [[ 2.2122726 -1.3975247  1.8769537 -5.2383647]]
Iteration 200 of 1000: loss=0.0413 " + "l1=0.0218" + "l2=0.0194 f=-0.644 shape=(1, 9000, 1)
logits [[ 2.113826  -1.4080378  1.8954611 -5.1765714]]
Iteration 300 of 1000: loss=0.0346 " + "l1=0.013" + "l2=0.0216 f=-0.649 shape=(1, 9000, 1)
logits [[ 2.0405328 -1.415087   1.9107215 -5.133779 ]]
Iteration 400 of 1000: loss=0.029 " + "l1=0.0054" + "l2=0.0236 f=-0.654 shape=(1, 9000, 1)
logits [[ 1.9765239 -1.4190578  1.9225038 -5.094559 ]]
Iteration 500 of 1000: loss=0.0237 " + "l1=0.00032" + "l2=0.0234 f=-0.658 shape=(1, 9000, 1)
logits [[ 1.9376343 -1.4202912  1.934431  -5.082998 ]]
Iteration 600 of 1000: loss=0.0206 " + "l1=0" + "l2=0.0206 f=-0.657 shape=(1, 9000, 1)
logits [[ 1.9358275 -1.4131725  1.9361502 -5.0879993]]
Iteration 700 of 1000: loss=0.0183 " + "l1=0.000291" + "l2=0.018 f=-0.657 shape=(1, 9000, 1)
logits [[ 1.939877  -1.4061368  1.9369688 -5.0990906]]
Iteration 800 of 1000: loss=0.017 " + "l1=0.000506" + "l2=0.0165 f=-0.657 shape=(1, 9000, 1)
logits [[ 1.9425111 -1.4011351  1.937449  -5.108258 ]]
Iteration 900 of 1000: loss=0.0159 " + "l1=0" + "l2=0.0159 f=-0.659 shape=(1, 9000, 1)
logits [[ 1.9344515 -1.3964843  1.9381756 -5.112841 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.043 " + "l1=0.043" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 2.6004963 -1.3541565  1.818498  -5.465495 ]]
Iteration 100 of 1000: loss=0.0342 " + "l1=0.0292" + "l2=0.00507 f=-0.621 shape=(1, 9000, 1)
logits [[ 2.3806033 -1.3779131  1.8504225 -5.335531 ]]
Iteration 200 of 1000: loss=0.0316 " + "l1=0.0249" + "l2=0.00669 f=-0.625 shape=(1, 9000, 1)
logits [[ 2.31544   -1.3873669  1.8632371 -5.2911634]]
Iteration 300 of 1000: loss=0.0293 " + "l1=0.0214" + "l2=0.00792 f=-0.628 shape=(1, 9000, 1)
logits [[ 2.2614276 -1.3929337  1.8725184 -5.2545557]]
Iteration 400 of 1000: loss=0.0272 " + "l1=0.0183" + "l2=0.00891 f=-0.631 shape=(1, 9000, 1)
logits [[ 2.2124674 -1.3966858  1.879584  -5.2202168]]
Iteration 500 of 1000: loss=0.0254 " + "l1=0.0156" + "l2=0.00971 f=-0.634 shape=(1, 9000, 1)
logits [[ 2.1693468 -1.396841   1.8848246 -5.1928997]]
Iteration 600 of 1000: loss=0.0238 " + "l1=0.0136" + "l2=0.0101 f=-0.636 shape=(1, 9000, 1)
logits [[ 2.138804  -1.3963825  1.8906568 -5.1761227]]
Iteration 700 of 1000: loss=0.0223 " + "l1=0.0116" + "l2=0.0108 f=-0.638 shape=(1, 9000, 1)
logits [[ 2.1075318 -1.3971622  1.8969423 -5.1585875]]
Iteration 800 of 1000: loss=0.0211 " + "l1=0.00982" + "l2=0.0113 f=-0.64 shape=(1, 9000, 1)
logits [[ 2.0806105 -1.3976549  1.9021217 -5.1454363]]
Iteration 900 of 1000: loss=0.0198 " + "l1=0.0081" + "l2=0.0117 f=-0.642 shape=(1, 9000, 1)
logits [[ 2.054496  -1.3976102  1.9071409 -5.133158 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0606 " + "l1=0.0606" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 2.6004963 -1.3541565  1.818498  -5.465495 ]]
Iteration 100 of 1000: loss=0.0434 " + "l1=0.0333" + "l2=0.01 f=-0.629 shape=(1, 9000, 1)
logits [[ 2.294478  -1.3894411  1.864303  -5.2846675]]
Iteration 200 of 1000: loss=0.0379 " + "l1=0.025" + "l2=0.013 f=-0.635 shape=(1, 9000, 1)
logits [[ 2.203548  -1.3993311  1.8815379 -5.226396 ]]
Iteration 300 of 1000: loss=0.0335 " + "l1=0.0193" + "l2=0.0142 f=-0.639 shape=(1, 9000, 1)
logits [[ 2.1406264 -1.4027095  1.890954  -5.1848073]]
Iteration 400 of 1000: loss=0.0299 " + "l1=0.0144" + "l2=0.0155 f=-0.643 shape=(1, 9000, 1)
logits [[ 2.0876722 -1.406916   1.9019623 -5.153959 ]]
Iteration 500 of 1000: loss=0.0267 " + "l1=0.01" + "l2=0.0166 f=-0.646 shape=(1, 9000, 1)
logits [[ 2.0404341 -1.4091564  1.9108117 -5.12605  ]]
Iteration 600 of 1000: loss=0.0237 " + "l1=0.00582" + "l2=0.0179 f=-0.65 shape=(1, 9000, 1)
logits [[ 1.99401   -1.4098085  1.9188948 -5.103734 ]]
Iteration 700 of 1000: loss=0.0208 " + "l1=0.00165" + "l2=0.0192 f=-0.655 shape=(1, 9000, 1)
logits [[ 1.9499102 -1.4096898  1.9285834 -5.0881157]]
Iteration 800 of 1000: loss=0.0182 " + "l1=0.000196" + "l2=0.018 f=-0.657 shape=(1, 9000, 1)
logits [[ 1.9367981 -1.4057273  1.9342748 -5.0921993]]
Iteration 900 of 1000: loss=0.017 " + "l1=0.000438" + "l2=0.0166 f=-0.657 shape=(1, 9000, 1)
logits [[ 1.9404095 -1.4000305  1.9347527 -5.102708 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0518 " + "l1=0.0518" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 2.6004963 -1.3541565  1.818498  -5.465495 ]]
Iteration 100 of 1000: loss=0.0391 " + "l1=0.0317" + "l2=0.0074 f=-0.625 shape=(1, 9000, 1)
logits [[ 2.3363304 -1.38455    1.8577063 -5.307822 ]]
Iteration 200 of 1000: loss=0.0352 " + "l1=0.0255" + "l2=0.00967 f=-0.631 shape=(1, 9000, 1)
logits [[ 2.2583058 -1.3944933  1.8728726 -5.258917 ]]
Iteration 300 of 1000: loss=0.0319 " + "l1=0.0206" + "l2=0.0113 f=-0.634 shape=(1, 9000, 1)
logits [[ 2.1946967 -1.3994106  1.8834834 -5.2166686]]
Iteration 400 of 1000: loss=0.029 " + "l1=0.0168" + "l2=0.0122 f=-0.637 shape=(1, 9000, 1)
logits [[ 2.14468   -1.4006747  1.8907852 -5.1845937]]
Iteration 500 of 1000: loss=0.0266 " + "l1=0.0136" + "l2=0.013 f=-0.64 shape=(1, 9000, 1)
logits [[ 2.1051893 -1.4033686  1.8999339 -5.1621084]]
Iteration 600 of 1000: loss=0.0244 " + "l1=0.0108" + "l2=0.0136 f=-0.642 shape=(1, 9000, 1)
logits [[ 2.068774  -1.4036032  1.906363  -5.1406813]]
Iteration 700 of 1000: loss=0.0224 " + "l1=0.00807" + "l2=0.0143 f=-0.645 shape=(1, 9000, 1)
logits [[ 2.0341063 -1.4043349  1.9122277 -5.121793 ]]
Iteration 800 of 1000: loss=0.0205 " + "l1=0.00508" + "l2=0.0154 f=-0.649 shape=(1, 9000, 1)
logits [[ 1.9969306 -1.4039218  1.9202939 -5.1090918]]
Iteration 900 of 1000: loss=0.0186 " + "l1=0.00229" + "l2=0.0163 f=-0.653 shape=(1, 9000, 1)
logits [[ 1.9626553 -1.4020501  1.9281504 -5.0999303]]
--- 277.12039017677307 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0807 " + "l1=0.0807" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 2.6004963 -1.3541565  1.818498  -5.465495 ]]
Iteration 100 of 1000: loss=0.0795 " + "l1=0.0788" + "l2=0.000701 f=-0.599 shape=(1, 9000, 1)
logits [[ 2.5127563 -1.3437383  1.8007139 -5.36482  ]]
Iteration 200 of 1000: loss=0.0791 " + "l1=0.0784" + "l2=0.000776 f=-0.598 shape=(1, 9000, 1)
logits [[ 2.4951117 -1.3417002  1.7964847 -5.341697 ]]
Iteration 300 of 1000: loss=0.0788 " + "l1=0.0779" + "l2=0.000953 f=-0.597 shape=(1, 9000, 1)
logits [[ 2.4747007 -1.3384316  1.7908581 -5.3141894]]
Iteration 400 of 1000: loss=0.0785 " + "l1=0.0774" + "l2=0.00113 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.45474   -1.3349954  1.7850919 -5.286494 ]]
Iteration 500 of 1000: loss=0.0783 " + "l1=0.077" + "l2=0.00138 f=-0.594 shape=(1, 9000, 1)
logits [[ 2.4359746 -1.3316058  1.7794644 -5.259828 ]]
Iteration 600 of 1000: loss=0.078 " + "l1=0.0765" + "l2=0.00149 f=-0.593 shape=(1, 9000, 1)
logits [[ 2.4181745 -1.3281591  1.7741665 -5.23421  ]]
Iteration 700 of 1000: loss=0.0778 " + "l1=0.0761" + "l2=0.00172 f=-0.591 shape=(1, 9000, 1)
logits [[ 2.4009705 -1.3250997  1.7692758 -5.2089725]]
Iteration 800 of 1000: loss=0.0776 " + "l1=0.0757" + "l2=0.00189 f=-0.59 shape=(1, 9000, 1)
logits [[ 2.3843277 -1.322349   1.7646465 -5.184853 ]]
Iteration 900 of 1000: loss=0.0774 " + "l1=0.0753" + "l2=0.0021 f=-0.588 shape=(1, 9000, 1)
logits [[ 2.368597  -1.3199244  1.7604233 -5.162189 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.807 " + "l1=0.807" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 2.6004963 -1.3541565  1.818498  -5.465495 ]]
Iteration 100 of 1000: loss=0.706 " + "l1=0.657" + "l2=0.0486 f=-0.591 shape=(1, 9000, 1)
logits [[ 1.9050934 -1.2569069  1.6552554 -4.6662064]]
Iteration 200 of 1000: loss=0.663 " + "l1=0.6" + "l2=0.0631 f=-0.576 shape=(1, 9000, 1)
logits [[ 1.6624649 -1.1901698  1.5654597 -4.3407383]]
Iteration 300 of 1000: loss=0.633 " + "l1=0.557" + "l2=0.0758 f=-0.563 shape=(1, 9000, 1)
logits [[ 1.486511  -1.1281468  1.4778156 -4.08797  ]]
Iteration 400 of 1000: loss=0.613 " + "l1=0.531" + "l2=0.0821 f=-0.549 shape=(1, 9000, 1)
logits [[ 1.3936257 -1.0732181  1.3946782 -3.9127233]]
Iteration 500 of 1000: loss=0.597 " + "l1=0.507" + "l2=0.0896 f=-0.539 shape=(1, 9000, 1)
logits [[ 1.3118117 -1.0194417  1.3127284 -3.7604015]]
Iteration 600 of 1000: loss=0.581 " + "l1=0.483" + "l2=0.0981 f=-0.528 shape=(1, 9000, 1)
logits [[ 1.2287059 -0.964855   1.2290115 -3.6045806]]
Iteration 700 of 1000: loss=0.567 " + "l1=0.463" + "l2=0.104 f=-0.52 shape=(1, 9000, 1)
logits [[ 1.1554376 -0.9160215  1.1569918 -3.4751482]]
Iteration 800 of 1000: loss=0.553 " + "l1=0.443" + "l2=0.11 f=-0.512 shape=(1, 9000, 1)
logits [[ 1.0834484  -0.87020826  1.0852159  -3.3456237 ]]
Iteration 900 of 1000: loss=0.535 " + "l1=0.419" + "l2=0.117 f=-0.505 shape=(1, 9000, 1)
logits [[ 0.9854287  -0.80491     0.99279386 -3.1942265 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.07 " + "l1=8.07" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 2.6004963 -1.3541565  1.818498  -5.465495 ]]
Iteration 100 of 1000: loss=3.36 " + "l1=1.74" + "l2=1.62 f=-0.416 shape=(1, 9000, 1)
logits [[ 0.07082377 -0.4397215   0.22319733 -1.5163257 ]]
Iteration 200 of 1000: loss=2.1 " + "l1=0.223" + "l2=1.88 f=-0.382 shape=(1, 9000, 1)
logits [[-0.4594534  -0.28855872 -0.27731764 -0.50081235]]
Iteration 300 of 1000: loss=1.39 " + "l1=0.00146" + "l2=1.39 f=-0.364 shape=(1, 9000, 1)
logits [[-0.37548575 -0.38613135 -0.34671164 -0.34817654]]
Iteration 400 of 1000: loss=1.18 " + "l1=0" + "l2=1.18 f=-0.37 shape=(1, 9000, 1)
logits [[-0.3710108  -0.44625598 -0.3394668  -0.32369864]]
Iteration 500 of 1000: loss=1.04 " + "l1=0" + "l2=1.04 f=-0.374 shape=(1, 9000, 1)
logits [[-0.34220207 -0.4889676  -0.33610556 -0.3293081 ]]
Iteration 600 of 1000: loss=0.937 " + "l1=0.00172" + "l2=0.935 f=-0.374 shape=(1, 9000, 1)
logits [[-0.32900324 -0.55491865 -0.30591115 -0.30763063]]
Iteration 700 of 1000: loss=0.865 " + "l1=0" + "l2=0.865 f=-0.373 shape=(1, 9000, 1)
logits [[-0.3256402  -0.588955   -0.29943076 -0.2775904 ]]
Iteration 800 of 1000: loss=0.797 " + "l1=0" + "l2=0.797 f=-0.376 shape=(1, 9000, 1)
logits [[-0.33306476 -0.58201873 -0.30052    -0.28799164]]
Iteration 900 of 1000: loss=0.736 " + "l1=0" + "l2=0.736 f=-0.381 shape=(1, 9000, 1)
logits [[-0.3589322  -0.5614313  -0.30472738 -0.2993706 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.44 " + "l1=4.44" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 2.6004963 -1.3541565  1.818498  -5.465495 ]]
Iteration 100 of 1000: loss=2.53 " + "l1=1.83" + "l2=0.706 f=-0.454 shape=(1, 9000, 1)
logits [[ 0.7292848  -0.6967599   0.73472583 -2.5843995 ]]
Iteration 200 of 1000: loss=1.92 " + "l1=1.05" + "l2=0.868 f=-0.434 shape=(1, 9000, 1)
logits [[ 0.20062327 -0.45078197  0.21286227 -1.6986743 ]]
Iteration 300 of 1000: loss=1.6 " + "l1=0.701" + "l2=0.899 f=-0.423 shape=(1, 9000, 1)
logits [[-0.02278757 -0.3641528  -0.01525994 -1.2902969 ]]
Iteration 400 of 1000: loss=1.25 " + "l1=0.167" + "l2=1.08 f=-0.393 shape=(1, 9000, 1)
logits [[-0.33124906 -0.32549745 -0.30562708 -0.6091102 ]]
Iteration 500 of 1000: loss=0.943 " + "l1=0.00458" + "l2=0.938 f=-0.38 shape=(1, 9000, 1)
logits [[-0.37768257 -0.3825565  -0.37474027 -0.38306063]]
Iteration 600 of 1000: loss=0.772 " + "l1=0" + "l2=0.772 f=-0.372 shape=(1, 9000, 1)
logits [[-0.38318014 -0.381275   -0.36180493 -0.36098543]]
Iteration 700 of 1000: loss=0.664 " + "l1=0.00118" + "l2=0.663 f=-0.376 shape=(1, 9000, 1)
logits [[-0.4251178  -0.40508312 -0.3360604  -0.33820984]]
Iteration 800 of 1000: loss=0.606 " + "l1=0.018" + "l2=0.588 f=-0.375 shape=(1, 9000, 1)
logits [[-0.41784042 -0.43317592 -0.30818805 -0.34089676]]
Iteration 900 of 1000: loss=0.557 " + "l1=0.00546" + "l2=0.551 f=-0.377 shape=(1, 9000, 1)
logits [[-0.45273986 -0.41746092 -0.31403282 -0.32396412]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.62 " + "l1=2.62" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 2.6004963 -1.3541565  1.818498  -5.465495 ]]
Iteration 100 of 1000: loss=1.8 " + "l1=1.47" + "l2=0.332 f=-0.516 shape=(1, 9000, 1)
logits [[ 1.1189946 -0.9085642  1.12046   -3.3951235]]
Iteration 200 of 1000: loss=1.51 " + "l1=1.11" + "l2=0.403 f=-0.465 shape=(1, 9000, 1)
logits [[ 0.7399373 -0.6935252  0.7557308 -2.662535 ]]
Iteration 300 of 1000: loss=1.33 " + "l1=0.881" + "l2=0.444 f=-0.448 shape=(1, 9000, 1)
logits [[ 0.48833475 -0.570699    0.50003695 -2.2101572 ]]
Iteration 400 of 1000: loss=1.2 " + "l1=0.707" + "l2=0.492 f=-0.446 shape=(1, 9000, 1)
logits [[ 0.28646883 -0.4692669   0.28678387 -1.8894203 ]]
Iteration 500 of 1000: loss=1.1 " + "l1=0.616" + "l2=0.484 f=-0.445 shape=(1, 9000, 1)
logits [[ 0.15677345 -0.39890042  0.17902657 -1.7158782 ]]
Iteration 600 of 1000: loss=0.969 " + "l1=0.506" + "l2=0.463 f=-0.449 shape=(1, 9000, 1)
logits [[-0.00618344 -0.31378582  0.03969533 -1.5167098 ]]
Iteration 700 of 1000: loss=0.841 " + "l1=0.386" + "l2=0.455 f=-0.445 shape=(1, 9000, 1)
logits [[-0.2040596  -0.23294027 -0.07859004 -1.2651694 ]]
Iteration 800 of 1000: loss=0.745 " + "l1=0.258" + "l2=0.487 f=-0.466 shape=(1, 9000, 1)
logits [[-0.47350964 -0.2061135  -0.19541797 -0.988615  ]]
Iteration 900 of 1000: loss=0.628 " + "l1=0.0917" + "l2=0.537 f=-0.473 shape=(1, 9000, 1)
logits [[-0.7799638  -0.27780157 -0.27524924 -0.55744153]]
--- 299.24605798721313 seconds ---
Adv result:3
Loading record A00101
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0729 " + "l1=0.0729" + "l2=0 f=-0.438 shape=(1, 9000, 1)
logits [[ 4.6531096 -2.6392276  3.0684931 -6.8354425]]
Iteration 100 of 1000: loss=0.0724 " + "l1=0.072" + "l2=0.00036 f=-0.437 shape=(1, 9000, 1)
logits [[ 4.593088  -2.6071317  3.046969  -6.782752 ]]
Iteration 200 of 1000: loss=0.0722 " + "l1=0.0718" + "l2=0.00037 f=-0.437 shape=(1, 9000, 1)
logits [[ 4.5815344 -2.600621   3.0420086 -6.7720466]]
Iteration 300 of 1000: loss=0.072 " + "l1=0.0716" + "l2=0.000459 f=-0.437 shape=(1, 9000, 1)
logits [[ 4.566521  -2.5924697  3.0358112 -6.758147 ]]
Iteration 400 of 1000: loss=0.0719 " + "l1=0.0713" + "l2=0.00055 f=-0.437 shape=(1, 9000, 1)
logits [[ 4.550609  -2.5841577  3.029307  -6.743225 ]]
Iteration 500 of 1000: loss=0.0717 " + "l1=0.0711" + "l2=0.000635 f=-0.437 shape=(1, 9000, 1)
logits [[ 4.533345  -2.575076   3.0223322 -6.7272644]]
Iteration 600 of 1000: loss=0.0716 " + "l1=0.0708" + "l2=0.000781 f=-0.436 shape=(1, 9000, 1)
logits [[ 4.5156665 -2.5662992  3.0154521 -6.710682 ]]
Iteration 700 of 1000: loss=0.0714 " + "l1=0.0706" + "l2=0.00084 f=-0.436 shape=(1, 9000, 1)
logits [[ 4.4979014 -2.5577366  3.008634  -6.693856 ]]
Iteration 800 of 1000: loss=0.0714 " + "l1=0.0703" + "l2=0.00107 f=-0.436 shape=(1, 9000, 1)
logits [[ 4.4803963 -2.5496206  3.002379  -6.677557 ]]
Iteration 900 of 1000: loss=0.0713 " + "l1=0.0701" + "l2=0.00121 f=-0.436 shape=(1, 9000, 1)
logits [[ 4.463666 -2.541932  2.996598 -6.662089]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.729 " + "l1=0.729" + "l2=0 f=-0.438 shape=(1, 9000, 1)
logits [[ 4.6531096 -2.6392276  3.0684931 -6.8354425]]
Iteration 100 of 1000: loss=0.676 " + "l1=0.647" + "l2=0.029 f=-0.429 shape=(1, 9000, 1)
logits [[ 4.1179733 -2.354168   2.870306  -6.3511653]]
Iteration 200 of 1000: loss=0.654 " + "l1=0.615" + "l2=0.0391 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.90184   -2.2463353  2.780764  -6.128944 ]]
Iteration 300 of 1000: loss=0.634 " + "l1=0.589" + "l2=0.0454 f=-0.421 shape=(1, 9000, 1)
logits [[ 3.717608  -2.1676958  2.7070618 -5.9414883]]
Iteration 400 of 1000: loss=0.616 " + "l1=0.566" + "l2=0.0493 f=-0.42 shape=(1, 9000, 1)
logits [[ 3.5647595 -2.0978897  2.6423402 -5.78735  ]]
Iteration 500 of 1000: loss=0.599 " + "l1=0.545" + "l2=0.0538 f=-0.416 shape=(1, 9000, 1)
logits [[ 3.4211051 -2.0270746  2.5790737 -5.637245 ]]
Iteration 600 of 1000: loss=0.583 " + "l1=0.527" + "l2=0.0566 f=-0.412 shape=(1, 9000, 1)
logits [[ 3.2955925 -1.9719441  2.529167  -5.4992023]]
Iteration 700 of 1000: loss=0.569 " + "l1=0.508" + "l2=0.0606 f=-0.407 shape=(1, 9000, 1)
logits [[ 3.166767  -1.9165434  2.4798608 -5.3574085]]
Iteration 800 of 1000: loss=0.555 " + "l1=0.492" + "l2=0.0626 f=-0.404 shape=(1, 9000, 1)
logits [[ 3.0550575 -1.8644222  2.432848  -5.237956 ]]
Iteration 900 of 1000: loss=0.539 " + "l1=0.472" + "l2=0.0667 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.9239619 -1.8003856  2.3741102 -5.1038947]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.29 " + "l1=7.29" + "l2=0 f=-0.438 shape=(1, 9000, 1)
logits [[ 4.6531096 -2.6392276  3.0684931 -6.8354425]]
Iteration 100 of 1000: loss=3.93 " + "l1=2.79" + "l2=1.14 f=-0.387 shape=(1, 9000, 1)
logits [[ 1.7849739 -1.0058726  1.7794559 -4.1075387]]
Iteration 200 of 1000: loss=3.32 " + "l1=2.18" + "l2=1.14 f=-0.368 shape=(1, 9000, 1)
logits [[ 1.4892918  -0.68225616  1.4995303  -3.7802286 ]]
Iteration 300 of 1000: loss=3 " + "l1=1.84" + "l2=1.16 f=-0.362 shape=(1, 9000, 1)
logits [[ 1.31409   -0.500393   1.3353485 -3.5983722]]
Iteration 400 of 1000: loss=2.74 " + "l1=1.49" + "l2=1.25 f=-0.356 shape=(1, 9000, 1)
logits [[ 1.1517043  -0.32861522  1.1614193  -3.4081173 ]]
Iteration 500 of 1000: loss=2.57 " + "l1=1.3" + "l2=1.26 f=-0.345 shape=(1, 9000, 1)
logits [[ 1.0641675  -0.23763804  1.0586419  -3.2653415 ]]
Iteration 600 of 1000: loss=2.42 " + "l1=1.16" + "l2=1.26 f=-0.341 shape=(1, 9000, 1)
logits [[ 0.96441185 -0.1803105   0.9815431  -3.1301832 ]]
Iteration 700 of 1000: loss=2.31 " + "l1=1.06" + "l2=1.26 f=-0.329 shape=(1, 9000, 1)
logits [[ 0.89661676 -0.1436022   0.91243774 -2.980212  ]]
Iteration 800 of 1000: loss=2.22 " + "l1=0.963" + "l2=1.26 f=-0.32 shape=(1, 9000, 1)
logits [[ 0.83158505 -0.11675847  0.8459864  -2.842743  ]]
Iteration 900 of 1000: loss=2.13 " + "l1=0.879" + "l2=1.25 f=-0.321 shape=(1, 9000, 1)
logits [[ 0.76561445 -0.09133607  0.787958   -2.7453668 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=72.9 " + "l1=72.9" + "l2=0 f=-0.438 shape=(1, 9000, 1)
logits [[ 4.6531096 -2.6392276  3.0684931 -6.8354425]]
Iteration 100 of 1000: loss=10.7 " + "l1=0" + "l2=10.7 f=-0.359 shape=(1, 9000, 1)
logits [[ 0.05787328  0.4490674   0.39930353 -2.3415055 ]]
Iteration 200 of 1000: loss=6.21 " + "l1=0" + "l2=6.21 f=-0.349 shape=(1, 9000, 1)
logits [[ 0.04399843  0.37811548  0.3762551  -2.1951551 ]]
Iteration 300 of 1000: loss=5.13 " + "l1=0" + "l2=5.13 f=-0.339 shape=(1, 9000, 1)
logits [[ 0.06716472  0.37490097  0.36781195 -2.166809  ]]
Iteration 400 of 1000: loss=4.67 " + "l1=0.153" + "l2=4.52 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.09783502  0.35868934  0.37400955 -2.1337278 ]]
Iteration 500 of 1000: loss=4.21 " + "l1=0" + "l2=4.21 f=-0.314 shape=(1, 9000, 1)
logits [[ 0.08511718  0.36826995  0.34870893 -2.0562227 ]]
Iteration 600 of 1000: loss=3.94 " + "l1=0" + "l2=3.94 f=-0.31 shape=(1, 9000, 1)
logits [[ 0.09120113  0.37344125  0.34066603 -2.0458171 ]]
Iteration 700 of 1000: loss=3.62 " + "l1=0" + "l2=3.62 f=-0.309 shape=(1, 9000, 1)
logits [[ 0.12675488  0.35431302  0.3477411  -2.0645564 ]]
Iteration 800 of 1000: loss=3.42 " + "l1=0" + "l2=3.42 f=-0.307 shape=(1, 9000, 1)
logits [[ 0.12027767  0.36818907  0.34294966 -2.0581675 ]]
Iteration 900 of 1000: loss=3.18 " + "l1=0" + "l2=3.18 f=-0.306 shape=(1, 9000, 1)
logits [[ 0.13156226  0.3656018   0.35224485 -2.0716012 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=40.1 " + "l1=40.1" + "l2=0 f=-0.438 shape=(1, 9000, 1)
logits [[ 4.6531096 -2.6392276  3.0684931 -6.8354425]]
Iteration 100 of 1000: loss=9.86 " + "l1=3.66" + "l2=6.21 f=-0.36 shape=(1, 9000, 1)
logits [[ 0.6869748   0.09790411  0.7624736  -2.987225  ]]
Iteration 200 of 1000: loss=5.18 " + "l1=0" + "l2=5.18 f=-0.338 shape=(1, 9000, 1)
logits [[ 0.13233909  0.39243704  0.38320923 -2.259487  ]]
Iteration 300 of 1000: loss=4.31 " + "l1=0" + "l2=4.31 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.17656454  0.37932596  0.37143418 -2.2247043 ]]
Iteration 400 of 1000: loss=3.77 " + "l1=0" + "l2=3.77 f=-0.32 shape=(1, 9000, 1)
logits [[ 0.1748758  0.3721321  0.3703799 -2.198103 ]]
Iteration 500 of 1000: loss=3.46 " + "l1=0" + "l2=3.46 f=-0.318 shape=(1, 9000, 1)
logits [[ 0.13855988  0.38087243  0.3488749  -2.139212  ]]
Iteration 600 of 1000: loss=3.12 " + "l1=0.00662" + "l2=3.12 f=-0.315 shape=(1, 9000, 1)
logits [[ 0.15292373  0.36098734  0.36219025 -2.1341705 ]]
Iteration 700 of 1000: loss=2.97 " + "l1=0.078" + "l2=2.89 f=-0.312 shape=(1, 9000, 1)
logits [[ 0.14802453  0.35001093  0.3641967  -2.1109345 ]]
Iteration 800 of 1000: loss=2.8 " + "l1=0" + "l2=2.8 f=-0.313 shape=(1, 9000, 1)
logits [[ 0.09407857  0.36142996  0.33796373 -2.0454288 ]]
Iteration 900 of 1000: loss=2.69 " + "l1=0.0506" + "l2=2.64 f=-0.312 shape=(1, 9000, 1)
logits [[ 0.10554117  0.33822906  0.3474291  -2.0406115 ]]
--- 301.8540291786194 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0158 " + "l1=0.0158" + "l2=0 f=-0.438 shape=(1, 9000, 1)
logits [[ 4.6531096 -2.6392276  3.0684931 -6.8354425]]
Iteration 100 of 1000: loss=0.0157 " + "l1=0.0155" + "l2=0.000189 f=-0.439 shape=(1, 9000, 1)
logits [[ 4.6123457 -2.6335144  3.0658593 -6.8013706]]
Iteration 200 of 1000: loss=0.0156 " + "l1=0.0154" + "l2=0.000154 f=-0.439 shape=(1, 9000, 1)
logits [[ 4.609282  -2.6334245  3.0652385 -6.7984977]]
Iteration 300 of 1000: loss=0.0156 " + "l1=0.0154" + "l2=0.00019 f=-0.44 shape=(1, 9000, 1)
logits [[ 4.602925  -2.632893   3.0645816 -6.792936 ]]
Iteration 400 of 1000: loss=0.0155 " + "l1=0.0153" + "l2=0.000227 f=-0.44 shape=(1, 9000, 1)
logits [[ 4.5958004 -2.6321504  3.06383   -6.7868533]]
Iteration 500 of 1000: loss=0.0155 " + "l1=0.0153" + "l2=0.000261 f=-0.44 shape=(1, 9000, 1)
logits [[ 4.588538  -2.6312373  3.063055  -6.7807355]]
Iteration 600 of 1000: loss=0.0155 " + "l1=0.0152" + "l2=0.000352 f=-0.44 shape=(1, 9000, 1)
logits [[ 4.580681  -2.63006    3.0621195 -6.774161 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.158 " + "l1=0.158" + "l2=0 f=-0.438 shape=(1, 9000, 1)
logits [[ 4.6531096 -2.6392276  3.0684931 -6.8354425]]
Iteration 100 of 1000: loss=0.141 " + "l1=0.131" + "l2=0.00981 f=-0.444 shape=(1, 9000, 1)
logits [[ 4.3658185 -2.6004097  3.0518425 -6.592591 ]]
Iteration 200 of 1000: loss=0.133 " + "l1=0.119" + "l2=0.0146 f=-0.447 shape=(1, 9000, 1)
logits [[ 4.224198  -2.5823722  3.037042  -6.4649262]]
Iteration 300 of 1000: loss=0.126 " + "l1=0.108" + "l2=0.0177 f=-0.449 shape=(1, 9000, 1)
logits [[ 4.102278  -2.572337   3.0231087 -6.349586 ]]
Iteration 400 of 1000: loss=0.118 " + "l1=0.0981" + "l2=0.0197 f=-0.452 shape=(1, 9000, 1)
logits [[ 3.9910803 -2.5615377  3.0097616 -6.248156 ]]
Iteration 500 of 1000: loss=0.111 " + "l1=0.0895" + "l2=0.0211 f=-0.455 shape=(1, 9000, 1)
logits [[ 3.8943536 -2.5527556  2.9993575 -6.162305 ]]
Iteration 600 of 1000: loss=0.104 " + "l1=0.0823" + "l2=0.0218 f=-0.459 shape=(1, 9000, 1)
logits [[ 3.81215   -2.5423577  2.9894676 -6.095374 ]]
Iteration 700 of 1000: loss=0.0979 " + "l1=0.0748" + "l2=0.023 f=-0.462 shape=(1, 9000, 1)
logits [[ 3.727571  -2.5316906  2.979226  -6.0240026]]
Iteration 800 of 1000: loss=0.0919 " + "l1=0.0678" + "l2=0.0242 f=-0.465 shape=(1, 9000, 1)
logits [[ 3.6508021 -2.5229247  2.9732156 -5.960592 ]]
Iteration 900 of 1000: loss=0.0858 " + "l1=0.0611" + "l2=0.0248 f=-0.467 shape=(1, 9000, 1)
logits [[ 3.577039  -2.5120556  2.9664943 -5.9005575]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.58 " + "l1=1.58" + "l2=0 f=-0.438 shape=(1, 9000, 1)
logits [[ 4.6531096 -2.6392276  3.0684931 -6.8354425]]
Iteration 100 of 1000: loss=0.311 " + "l1=0.00576" + "l2=0.305 f=-0.446 shape=(1, 9000, 1)
logits [[ 3.050077  -2.5405571  3.0443137 -5.338078 ]]
Iteration 200 of 1000: loss=0.221 " + "l1=0.00528" + "l2=0.216 f=-0.457 shape=(1, 9000, 1)
logits [[ 3.0302484 -2.5349398  3.0249732 -5.348241 ]]
Iteration 300 of 1000: loss=0.181 " + "l1=0" + "l2=0.181 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.9831533 -2.518285   3.0016563 -5.3178253]]
Iteration 400 of 1000: loss=0.147 " + "l1=0" + "l2=0.147 f=-0.467 shape=(1, 9000, 1)
logits [[ 2.9804835 -2.5057983  2.983511  -5.327181 ]]
Iteration 500 of 1000: loss=0.127 " + "l1=0" + "l2=0.127 f=-0.471 shape=(1, 9000, 1)
logits [[ 2.9583874 -2.498055   2.9700637 -5.3132834]]
Iteration 600 of 1000: loss=0.107 " + "l1=0" + "l2=0.107 f=-0.474 shape=(1, 9000, 1)
logits [[ 2.961705  -2.4944422  2.961808  -5.3268332]]
Iteration 700 of 1000: loss=0.0936 " + "l1=0" + "l2=0.0936 f=-0.477 shape=(1, 9000, 1)
logits [[ 2.9526947 -2.4916954  2.9573996 -5.3246565]]
Iteration 800 of 1000: loss=0.0834 " + "l1=0.00161" + "l2=0.0818 f=-0.479 shape=(1, 9000, 1)
logits [[ 2.9547966 -2.4903655  2.9531884 -5.3335695]]
Iteration 900 of 1000: loss=0.0755 " + "l1=0" + "l2=0.0755 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.9358993 -2.4880433  2.9471655 -5.318018 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.872 " + "l1=0.872" + "l2=0 f=-0.438 shape=(1, 9000, 1)
logits [[ 4.6531096 -2.6392276  3.0684931 -6.8354425]]
Iteration 100 of 1000: loss=0.322 " + "l1=0.0195" + "l2=0.302 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.0833905 -2.5526755  3.0479882 -5.380367 ]]
Iteration 200 of 1000: loss=0.207 " + "l1=0.00544" + "l2=0.201 f=-0.458 shape=(1, 9000, 1)
logits [[ 3.0290773 -2.5445619  3.019193  -5.3370433]]
Iteration 300 of 1000: loss=0.158 " + "l1=0" + "l2=0.158 f=-0.466 shape=(1, 9000, 1)
logits [[ 2.9954736 -2.5342152  2.9959335 -5.319254 ]]
Iteration 400 of 1000: loss=0.131 " + "l1=0.00164" + "l2=0.129 f=-0.469 shape=(1, 9000, 1)
logits [[ 2.979323  -2.521485   2.9763324 -5.311093 ]]
Iteration 500 of 1000: loss=0.11 " + "l1=0.0022" + "l2=0.108 f=-0.473 shape=(1, 9000, 1)
logits [[ 2.9667292 -2.5097582  2.9627259 -5.3135133]]
Iteration 600 of 1000: loss=0.0937 " + "l1=0.00108" + "l2=0.0926 f=-0.477 shape=(1, 9000, 1)
logits [[ 2.9552252 -2.506743   2.9532533 -5.3094134]]
Iteration 700 of 1000: loss=0.0834 " + "l1=0" + "l2=0.0834 f=-0.479 shape=(1, 9000, 1)
logits [[ 2.9345975 -2.5075     2.949458  -5.2929835]]
Iteration 800 of 1000: loss=0.0728 " + "l1=0" + "l2=0.0728 f=-0.48 shape=(1, 9000, 1)
logits [[ 2.9363823 -2.506196   2.9432807 -5.295025 ]]
Iteration 900 of 1000: loss=0.0677 " + "l1=0" + "l2=0.0677 f=-0.482 shape=(1, 9000, 1)
logits [[ 2.9211497 -2.5052502  2.9413464 -5.2871795]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.515 " + "l1=0.515" + "l2=0 f=-0.438 shape=(1, 9000, 1)
logits [[ 4.6531096 -2.6392276  3.0684931 -6.8354425]]
Iteration 100 of 1000: loss=0.316 " + "l1=0.194" + "l2=0.121 f=-0.453 shape=(1, 9000, 1)
logits [[ 3.622751  -2.5537622  3.024957  -5.9052544]]
Iteration 200 of 1000: loss=0.237 " + "l1=0.089" + "l2=0.148 f=-0.461 shape=(1, 9000, 1)
logits [[ 3.2922935 -2.5468693  3.0183241 -5.6096325]]
Iteration 300 of 1000: loss=0.174 " + "l1=0.0123" + "l2=0.161 f=-0.466 shape=(1, 9000, 1)
logits [[ 3.0373216 -2.5386655  2.9995565 -5.3635745]]
Iteration 400 of 1000: loss=0.133 " + "l1=0.00332" + "l2=0.129 f=-0.471 shape=(1, 9000, 1)
logits [[ 2.9749606 -2.517463   2.9647446 -5.3046756]]
Iteration 500 of 1000: loss=0.108 " + "l1=0.00288" + "l2=0.105 f=-0.474 shape=(1, 9000, 1)
logits [[ 2.955505  -2.5039601  2.946657  -5.2948775]]
Iteration 600 of 1000: loss=0.0893 " + "l1=0.000544" + "l2=0.0888 f=-0.477 shape=(1, 9000, 1)
logits [[ 2.936746  -2.4954758  2.935072  -5.2858524]]
Iteration 700 of 1000: loss=0.0771 " + "l1=0.00289" + "l2=0.0742 f=-0.479 shape=(1, 9000, 1)
logits [[ 2.9334583 -2.4911313  2.9245737 -5.280943 ]]
Iteration 800 of 1000: loss=0.0673 " + "l1=0.00296" + "l2=0.0643 f=-0.479 shape=(1, 9000, 1)
logits [[ 2.924895  -2.488057   2.9157834 -5.270238 ]]
Iteration 900 of 1000: loss=0.0605 " + "l1=0" + "l2=0.0605 f=-0.48 shape=(1, 9000, 1)
logits [[ 2.8978372 -2.4850657  2.9102738 -5.2430844]]
--- 277.5640366077423 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.115 " + "l1=0.115" + "l2=0 f=-0.438 shape=(1, 9000, 1)
logits [[ 4.6531096 -2.6392276  3.0684931 -6.8354425]]
Iteration 100 of 1000: loss=0.114 " + "l1=0.113" + "l2=0.000702 f=-0.436 shape=(1, 9000, 1)
logits [[ 4.566449  -2.6196241  3.0423174 -6.731514 ]]
Iteration 200 of 1000: loss=0.113 " + "l1=0.113" + "l2=0.000776 f=-0.435 shape=(1, 9000, 1)
logits [[ 4.545851  -2.6135058  3.0352476 -6.707881 ]]
Iteration 300 of 1000: loss=0.113 " + "l1=0.112" + "l2=0.000943 f=-0.434 shape=(1, 9000, 1)
logits [[ 4.521898  -2.606479   3.0270982 -6.680257 ]]
Iteration 400 of 1000: loss=0.113 " + "l1=0.111" + "l2=0.0011 f=-0.434 shape=(1, 9000, 1)
logits [[ 4.496898  -2.5987244  3.0182898 -6.6515245]]
Iteration 500 of 1000: loss=0.112 " + "l1=0.111" + "l2=0.00131 f=-0.433 shape=(1, 9000, 1)
logits [[ 4.471609  -2.5902948  3.0089655 -6.622202 ]]
Iteration 600 of 1000: loss=0.112 " + "l1=0.11" + "l2=0.00157 f=-0.432 shape=(1, 9000, 1)
logits [[ 4.445661  -2.5818696  2.9996066 -6.5923405]]
Iteration 700 of 1000: loss=0.112 " + "l1=0.11" + "l2=0.0017 f=-0.432 shape=(1, 9000, 1)
logits [[ 4.420842  -2.573817   2.9911788 -6.5644736]]
Iteration 800 of 1000: loss=0.111 " + "l1=0.109" + "l2=0.00192 f=-0.431 shape=(1, 9000, 1)
logits [[ 4.3952518 -2.5653331  2.9827788 -6.53641  ]]
Iteration 900 of 1000: loss=0.111 " + "l1=0.109" + "l2=0.00211 f=-0.43 shape=(1, 9000, 1)
logits [[ 4.368021  -2.5569077  2.974362  -6.5071435]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.15 " + "l1=1.15" + "l2=0 f=-0.438 shape=(1, 9000, 1)
logits [[ 4.6531096 -2.6392276  3.0684931 -6.8354425]]
Iteration 100 of 1000: loss=1.03 " + "l1=0.956" + "l2=0.069 f=-0.412 shape=(1, 9000, 1)
logits [[ 3.7752988 -2.4367666  2.803472  -5.7890406]]
Iteration 200 of 1000: loss=0.972 " + "l1=0.884" + "l2=0.0879 f=-0.4 shape=(1, 9000, 1)
logits [[ 3.453652  -2.352578   2.6878736 -5.390447 ]]
Iteration 300 of 1000: loss=0.932 " + "l1=0.832" + "l2=0.1 f=-0.388 shape=(1, 9000, 1)
logits [[ 3.2245011 -2.2910078  2.6078618 -5.0952444]]
Iteration 400 of 1000: loss=0.897 " + "l1=0.785" + "l2=0.112 f=-0.375 shape=(1, 9000, 1)
logits [[ 3.0186899 -2.226744   2.5375047 -4.8314204]]
Iteration 500 of 1000: loss=0.861 " + "l1=0.737" + "l2=0.124 f=-0.36 shape=(1, 9000, 1)
logits [[ 2.8147912 -2.1735535  2.4730468 -4.556131 ]]
Iteration 600 of 1000: loss=0.824 " + "l1=0.688" + "l2=0.136 f=-0.345 shape=(1, 9000, 1)
logits [[ 2.6073315 -2.127877   2.4131727 -4.2743616]]
Iteration 700 of 1000: loss=0.784 " + "l1=0.638" + "l2=0.145 f=-0.328 shape=(1, 9000, 1)
logits [[ 2.4023786 -2.078608   2.3451118 -3.9801755]]
Iteration 800 of 1000: loss=0.747 " + "l1=0.605" + "l2=0.141 f=-0.313 shape=(1, 9000, 1)
logits [[ 2.2747846 -2.0221484  2.2750537 -3.779213 ]]
Iteration 900 of 1000: loss=0.723 " + "l1=0.59" + "l2=0.133 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.2249951 -1.9794849  2.2242656 -3.6778667]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.5 " + "l1=11.5" + "l2=0 f=-0.438 shape=(1, 9000, 1)
logits [[ 4.6531096 -2.6392276  3.0684931 -6.8354425]]
Iteration 100 of 1000: loss=5.32 " + "l1=3.25" + "l2=2.07 f=-0.153 shape=(1, 9000, 1)
logits [[ 0.93251824 -1.6482512   1.6787214  -1.5755107 ]]
Iteration 200 of 1000: loss=3.42 " + "l1=0.52" + "l2=2.9 f=-0.0516 shape=(1, 9000, 1)
logits [[-0.11168315 -1.3255863   0.8754298   0.3553189 ]]
Iteration 300 of 1000: loss=2.67 " + "l1=0" + "l2=2.67 f=-0.0298 shape=(1, 9000, 1)
logits [[-0.24285807 -1.2855955   0.6984401   0.711012  ]]
Iteration 400 of 1000: loss=2.27 " + "l1=0.0338" + "l2=2.23 f=-0.0296 shape=(1, 9000, 1)
logits [[-0.19047017 -1.2973151   0.70149815  0.6677298 ]]
Iteration 500 of 1000: loss=2.03 " + "l1=0.018" + "l2=2.01 f=-0.0307 shape=(1, 9000, 1)
logits [[-0.17627135 -1.3097067   0.6906661   0.67266893]]
Iteration 600 of 1000: loss=1.85 " + "l1=0" + "l2=1.85 f=-0.0254 shape=(1, 9000, 1)
logits [[-0.16071016 -1.3274698   0.6880442   0.69866556]]
Iteration 700 of 1000: loss=1.7 " + "l1=0.0144" + "l2=1.69 f=-0.0265 shape=(1, 9000, 1)
logits [[-0.12413329 -1.3446114   0.68863654  0.67422336]]
Iteration 800 of 1000: loss=1.56 " + "l1=0" + "l2=1.56 f=-0.0275 shape=(1, 9000, 1)
logits [[-0.11232525 -1.3580334   0.66691476  0.6932843 ]]
Iteration 900 of 1000: loss=1.42 " + "l1=0.00241" + "l2=1.42 f=-0.0238 shape=(1, 9000, 1)
logits [[-0.06073968 -1.3850502   0.6764786   0.6740639 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.32 " + "l1=6.32" + "l2=0 f=-0.438 shape=(1, 9000, 1)
logits [[ 4.6531096 -2.6392276  3.0684931 -6.8354425]]
Iteration 100 of 1000: loss=3.76 " + "l1=2.87" + "l2=0.891 f=-0.265 shape=(1, 9000, 1)
logits [[ 1.9396752 -1.9042231  2.062358  -3.159041 ]]
Iteration 200 of 1000: loss=3.09 " + "l1=1.95" + "l2=1.14 f=-0.149 shape=(1, 9000, 1)
logits [[ 1.1833986 -1.618627   1.6947443 -1.8554273]]
Iteration 300 of 1000: loss=2.6 " + "l1=1.25" + "l2=1.35 f=-0.0995 shape=(1, 9000, 1)
logits [[ 0.56926996 -1.476403    1.3927319  -0.88351405]]
Iteration 400 of 1000: loss=2.17 " + "l1=0.738" + "l2=1.43 f=-0.071 shape=(1, 9000, 1)
logits [[ 0.22232637 -1.4184701   1.1267135  -0.21472111]]
Iteration 500 of 1000: loss=1.79 " + "l1=0.344" + "l2=1.44 f=-0.0446 shape=(1, 9000, 1)
logits [[ 0.01221086 -1.3838654   0.9096831   0.28366736]]
Iteration 600 of 1000: loss=1.41 " + "l1=0.0357" + "l2=1.37 f=-0.0154 shape=(1, 9000, 1)
logits [[-0.03504357 -1.4647162   0.7516066   0.6866928 ]]
Iteration 700 of 1000: loss=1.21 " + "l1=0.0144" + "l2=1.19 f=-6.39e-05 shape=(1, 9000, 1)
logits [[ 0.05805157 -1.5381697   0.75303     0.7268324 ]]
Iteration 800 of 1000: loss=1.07 " + "l1=0.00996" + "l2=1.06 f=0.0173 shape=(1, 9000, 1)
logits [[ 0.1502623  -1.600074    0.7685978   0.75048065]]
Iteration 900 of 1000: loss=0.959 " + "l1=0" + "l2=0.959 f=0.0334 shape=(1, 9000, 1)
logits [[ 0.20651725 -1.6448414   0.78496873  0.7867911 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.73 " + "l1=3.73" + "l2=0 f=-0.438 shape=(1, 9000, 1)
logits [[ 4.6531096 -2.6392276  3.0684931 -6.8354425]]
Iteration 100 of 1000: loss=2.57 " + "l1=2.04" + "l2=0.528 f=-0.333 shape=(1, 9000, 1)
logits [[ 2.3521142 -2.1057045  2.3516333 -3.9306605]]
Iteration 200 of 1000: loss=2.28 " + "l1=1.77" + "l2=0.504 f=-0.259 shape=(1, 9000, 1)
logits [[ 2.0906909 -1.886219   2.1076944 -3.3464665]]
Iteration 300 of 1000: loss=2.06 " + "l1=1.49" + "l2=0.568 f=-0.194 shape=(1, 9000, 1)
logits [[ 1.721158  -1.7217498  1.9073178 -2.6828694]]
Iteration 400 of 1000: loss=1.89 " + "l1=1.28" + "l2=0.608 f=-0.156 shape=(1, 9000, 1)
logits [[ 1.4405483 -1.641343   1.7617866 -2.1849642]]
Iteration 500 of 1000: loss=1.75 " + "l1=1.1" + "l2=0.657 f=-0.129 shape=(1, 9000, 1)
logits [[ 1.1696095 -1.5692946  1.6265289 -1.7435213]]
Iteration 600 of 1000: loss=1.61 " + "l1=0.904" + "l2=0.701 f=-0.114 shape=(1, 9000, 1)
logits [[ 0.88904756 -1.5417957   1.4885837  -1.2920835 ]]
Iteration 700 of 1000: loss=1.43 " + "l1=0.696" + "l2=0.733 f=-0.0805 shape=(1, 9000, 1)
logits [[ 0.68075645 -1.540051    1.3395375  -0.8023416 ]]
Iteration 800 of 1000: loss=1.19 " + "l1=0.411" + "l2=0.777 f=-0.0337 shape=(1, 9000, 1)
logits [[ 0.46408728 -1.543778    1.1046978  -0.15972951]]
Iteration 900 of 1000: loss=0.957 " + "l1=0.215" + "l2=0.743 f=0.0211 shape=(1, 9000, 1)
logits [[ 0.41607675 -1.6242539   0.976446    0.31603432]]
--- 304.23095178604126 seconds ---
Adv result:3
Loading record A00102
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0229 " + "l1=0.0229" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.4127098  -0.87575525  1.0888454  -3.7714922 ]]
Iteration 100 of 1000: loss=0.0221 " + "l1=0.0216" + "l2=0.000571 f=-0.534 shape=(1, 9000, 1)
logits [[ 1.3500186  -0.80647194  1.0541527  -3.7343667 ]]
Iteration 200 of 1000: loss=0.022 " + "l1=0.0213" + "l2=0.000624 f=-0.534 shape=(1, 9000, 1)
logits [[ 1.339713  -0.7940735  1.0476909 -3.7281144]]
Iteration 300 of 1000: loss=0.0219 " + "l1=0.0211" + "l2=0.000726 f=-0.533 shape=(1, 9000, 1)
logits [[ 1.3295513  -0.78394353  1.0429516  -3.7218254 ]]
Iteration 400 of 1000: loss=0.0218 " + "l1=0.0209" + "l2=0.000835 f=-0.533 shape=(1, 9000, 1)
logits [[ 1.3191686  -0.77457124  1.038589   -3.7152278 ]]
Iteration 500 of 1000: loss=0.0217 " + "l1=0.0208" + "l2=0.000967 f=-0.533 shape=(1, 9000, 1)
logits [[ 1.3095267 -0.766092   1.0348196 -3.7091095]]
Iteration 600 of 1000: loss=0.0217 " + "l1=0.0206" + "l2=0.00111 f=-0.532 shape=(1, 9000, 1)
logits [[ 1.3003111  -0.75821644  1.0314809  -3.7032957 ]]
Iteration 700 of 1000: loss=0.0217 " + "l1=0.0204" + "l2=0.00125 f=-0.532 shape=(1, 9000, 1)
logits [[ 1.2915952 -0.7508271  1.0283582 -3.6977236]]
Iteration 800 of 1000: loss=0.0216 " + "l1=0.0203" + "l2=0.00131 f=-0.532 shape=(1, 9000, 1)
logits [[ 1.2843891  -0.74551755  1.0264388  -3.693458  ]]
Iteration 900 of 1000: loss=0.0216 " + "l1=0.0202" + "l2=0.00146 f=-0.532 shape=(1, 9000, 1)
logits [[ 1.2768836 -0.7393832  1.0241033 -3.6890078]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.229 " + "l1=0.229" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.4127098  -0.87575525  1.0888454  -3.7714922 ]]
Iteration 100 of 1000: loss=0.154 " + "l1=0.117" + "l2=0.0378 f=-0.536 shape=(1, 9000, 1)
logits [[ 0.8383466  -0.32605433  0.839378   -3.4963236 ]]
Iteration 200 of 1000: loss=0.134 " + "l1=0.0916" + "l2=0.0423 f=-0.533 shape=(1, 9000, 1)
logits [[ 0.7443121  -0.17125218  0.74310434 -3.4497752 ]]
Iteration 300 of 1000: loss=0.12 " + "l1=0.0741" + "l2=0.0463 f=-0.53 shape=(1, 9000, 1)
logits [[ 0.67303854 -0.06572111  0.67516184 -3.402126  ]]
Iteration 400 of 1000: loss=0.112 " + "l1=0.063" + "l2=0.0487 f=-0.526 shape=(1, 9000, 1)
logits [[ 6.2681162e-01  2.0327568e-03  6.3169909e-01 -3.3636484e+00]]
Iteration 500 of 1000: loss=0.104 " + "l1=0.0502" + "l2=0.0539 f=-0.525 shape=(1, 9000, 1)
logits [[ 0.56714416  0.07897089  0.5812594  -3.326605  ]]
Iteration 600 of 1000: loss=0.0965 " + "l1=0.038" + "l2=0.0585 f=-0.525 shape=(1, 9000, 1)
logits [[ 0.5037643   0.15323555  0.53330237 -3.288628  ]]
Iteration 700 of 1000: loss=0.0897 " + "l1=0.0288" + "l2=0.0609 f=-0.528 shape=(1, 9000, 1)
logits [[ 0.43234888  0.20996283  0.4976463  -3.2500508 ]]
Iteration 800 of 1000: loss=0.0823 " + "l1=0.016" + "l2=0.0663 f=-0.532 shape=(1, 9000, 1)
logits [[ 0.3405908   0.28894496  0.44896683 -3.2061687 ]]
Iteration 900 of 1000: loss=0.0747 " + "l1=0.000502" + "l2=0.0742 f=-0.539 shape=(1, 9000, 1)
logits [[ 0.22423512  0.38615704  0.39117384 -3.1586392 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.126 " + "l1=0.126" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.4127098  -0.87575525  1.0888454  -3.7714922 ]]
Iteration 100 of 1000: loss=0.103 " + "l1=0.0898" + "l2=0.0131 f=-0.533 shape=(1, 9000, 1)
logits [[ 1.0842106 -0.5485121  0.9376206 -3.6033978]]
Iteration 200 of 1000: loss=0.0952 " + "l1=0.0769" + "l2=0.0183 f=-0.536 shape=(1, 9000, 1)
logits [[ 0.95124924 -0.4463572   0.8984858  -3.5454378 ]]
Iteration 300 of 1000: loss=0.0882 " + "l1=0.0673" + "l2=0.0209 f=-0.537 shape=(1, 9000, 1)
logits [[ 0.85910374 -0.3641638   0.8581695  -3.5018716 ]]
Iteration 400 of 1000: loss=0.0839 " + "l1=0.0621" + "l2=0.0218 f=-0.535 shape=(1, 9000, 1)
logits [[ 0.81945294 -0.3088077   0.81888765 -3.468535  ]]
Iteration 500 of 1000: loss=0.0808 " + "l1=0.0578" + "l2=0.0229 f=-0.533 shape=(1, 9000, 1)
logits [[ 0.7863761 -0.2640946  0.7875788 -3.4406023]]
Iteration 600 of 1000: loss=0.0781 " + "l1=0.0539" + "l2=0.0242 f=-0.532 shape=(1, 9000, 1)
logits [[ 0.75720626 -0.22188191  0.75819415 -3.42027   ]]
Iteration 700 of 1000: loss=0.0759 " + "l1=0.0506" + "l2=0.0254 f=-0.531 shape=(1, 9000, 1)
logits [[ 0.73234206 -0.1853501   0.73430413 -3.404767  ]]
Iteration 800 of 1000: loss=0.0743 " + "l1=0.0483" + "l2=0.0261 f=-0.53 shape=(1, 9000, 1)
logits [[ 0.71513414 -0.16171598  0.715609   -3.3873482 ]]
Iteration 900 of 1000: loss=0.0728 " + "l1=0.0464" + "l2=0.0264 f=-0.529 shape=(1, 9000, 1)
logits [[ 0.69763863 -0.1427669   0.70076466 -3.3711975 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.177 " + "l1=0.177" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.4127098  -0.87575525  1.0888454  -3.7714922 ]]
Iteration 100 of 1000: loss=0.132 " + "l1=0.107" + "l2=0.0252 f=-0.535 shape=(1, 9000, 1)
logits [[ 0.94125915 -0.43672383  0.89482886 -3.5402308 ]]
Iteration 200 of 1000: loss=0.117 " + "l1=0.087" + "l2=0.0301 f=-0.536 shape=(1, 9000, 1)
logits [[ 0.82232463 -0.2997851   0.8226882  -3.487478  ]]
Iteration 300 of 1000: loss=0.107 " + "l1=0.0741" + "l2=0.0331 f=-0.533 shape=(1, 9000, 1)
logits [[ 0.7545428 -0.2009025  0.7557273 -3.4404569]]
Iteration 400 of 1000: loss=0.1 " + "l1=0.0657" + "l2=0.0345 f=-0.531 shape=(1, 9000, 1)
logits [[ 0.71021104 -0.13565342  0.7122162  -3.4101646 ]]
Iteration 500 of 1000: loss=0.0954 " + "l1=0.0594" + "l2=0.0359 f=-0.528 shape=(1, 9000, 1)
logits [[ 0.6796007  -0.08707822  0.6794898  -3.3825648 ]]
Iteration 600 of 1000: loss=0.0918 " + "l1=0.0539" + "l2=0.0379 f=-0.525 shape=(1, 9000, 1)
logits [[ 0.6466362  -0.04611886  0.64893115 -3.3499477 ]]
Iteration 700 of 1000: loss=0.0882 " + "l1=0.0481" + "l2=0.0401 f=-0.525 shape=(1, 9000, 1)
logits [[ 6.1310011e-01 -2.3975503e-03  6.1801702e-01 -3.3273118e+00]]
Iteration 800 of 1000: loss=0.0845 " + "l1=0.0427" + "l2=0.0418 f=-0.524 shape=(1, 9000, 1)
logits [[ 0.5817707   0.03567477  0.5861549  -3.3004277 ]]
Iteration 900 of 1000: loss=0.0809 " + "l1=0.0373" + "l2=0.0436 f=-0.524 shape=(1, 9000, 1)
logits [[ 0.5520101   0.07265046  0.5541385  -3.2755957 ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.203 " + "l1=0.203" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.4127098  -0.87575525  1.0888454  -3.7714922 ]]
Iteration 100 of 1000: loss=0.144 " + "l1=0.111" + "l2=0.0325 f=-0.537 shape=(1, 9000, 1)
logits [[ 0.87328875 -0.37804523  0.8697985  -3.5123053 ]]
Iteration 200 of 1000: loss=0.126 " + "l1=0.0898" + "l2=0.0364 f=-0.534 shape=(1, 9000, 1)
logits [[ 0.780517   -0.23114248  0.7806442  -3.4655628 ]]
Iteration 300 of 1000: loss=0.114 " + "l1=0.0762" + "l2=0.0383 f=-0.531 shape=(1, 9000, 1)
logits [[ 0.7191534  -0.13959819  0.7179216  -3.4231124 ]]
Iteration 400 of 1000: loss=0.106 " + "l1=0.0657" + "l2=0.0408 f=-0.528 shape=(1, 9000, 1)
logits [[ 0.67161375 -0.06724674  0.67271096 -3.3885396 ]]
Iteration 500 of 1000: loss=0.101 " + "l1=0.0578" + "l2=0.0431 f=-0.525 shape=(1, 9000, 1)
logits [[ 0.63393265 -0.01556781  0.6354858  -3.3530369 ]]
Iteration 600 of 1000: loss=0.0955 " + "l1=0.0496" + "l2=0.046 f=-0.524 shape=(1, 9000, 1)
logits [[ 0.59090054  0.03969901  0.59818506 -3.323056  ]]
Iteration 700 of 1000: loss=0.0902 " + "l1=0.0408" + "l2=0.0495 f=-0.523 shape=(1, 9000, 1)
logits [[ 0.54483837  0.09611107  0.5555863  -3.290013  ]]
Iteration 800 of 1000: loss=0.0853 " + "l1=0.0328" + "l2=0.0524 f=-0.525 shape=(1, 9000, 1)
logits [[ 0.48660442  0.1493161   0.51927567 -3.2552032 ]]
Iteration 900 of 1000: loss=0.08 " + "l1=0.0239" + "l2=0.0562 f=-0.529 shape=(1, 9000, 1)
logits [[ 0.40927503  0.21268944  0.48164874 -3.2209382 ]]
--- 295.80750274658203 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00324 " + "l1=0.00324" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.4127098  -0.87575525  1.0888454  -3.7714922 ]]
Iteration 100 of 1000: loss=0.00301 " + "l1=0.0028" + "l2=0.000213 f=-0.539 shape=(1, 9000, 1)
logits [[ 1.379144   -0.87766004  1.0993515  -3.7570786 ]]
Iteration 200 of 1000: loss=0.00296 " + "l1=0.00277" + "l2=0.000188 f=-0.539 shape=(1, 9000, 1)
logits [[ 1.3768975 -0.8778341  1.0999942 -3.7568917]]
Iteration 300 of 1000: loss=0.00293 " + "l1=0.00271" + "l2=0.000216 f=-0.54 shape=(1, 9000, 1)
logits [[ 1.3725988  -0.87788993  1.101191   -3.7553298 ]]
Iteration 400 of 1000: loss=0.00292 " + "l1=0.00265" + "l2=0.000266 f=-0.54 shape=(1, 9000, 1)
logits [[ 1.3679258  -0.87791634  1.1024444  -3.7533247 ]]
Iteration 500 of 1000: loss=0.0029 " + "l1=0.0026" + "l2=0.000301 f=-0.541 shape=(1, 9000, 1)
logits [[ 1.3632812 -0.8775968  1.1034275 -3.7512023]]
Iteration 600 of 1000: loss=0.00291 " + "l1=0.00255" + "l2=0.000364 f=-0.541 shape=(1, 9000, 1)
logits [[ 1.3588616 -0.8773314  1.1043262 -3.749059 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0324 " + "l1=0.0324" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.4127098  -0.87575525  1.0888454  -3.7714922 ]]
Iteration 100 of 1000: loss=0.0112 " + "l1=0.000212" + "l2=0.0109 f=-0.558 shape=(1, 9000, 1)
logits [[ 1.171803   -0.89539784  1.1696851  -3.6778932 ]]
Iteration 200 of 1000: loss=0.00793 " + "l1=0.000186" + "l2=0.00775 f=-0.558 shape=(1, 9000, 1)
logits [[ 1.1638058  -0.88147163  1.1619501  -3.676749  ]]
Iteration 300 of 1000: loss=0.0065 " + "l1=5.75e-05" + "l2=0.00645 f=-0.558 shape=(1, 9000, 1)
logits [[ 1.1582532 -0.8765729  1.1576786 -3.6719837]]
Iteration 400 of 1000: loss=0.00575 " + "l1=9.36e-05" + "l2=0.00566 f=-0.558 shape=(1, 9000, 1)
logits [[ 1.1572292  -0.87675464  1.156293   -3.6686437 ]]
Iteration 500 of 1000: loss=0.00529 " + "l1=0.000269" + "l2=0.00503 f=-0.558 shape=(1, 9000, 1)
logits [[ 1.1557605 -0.8743123  1.1530678 -3.664901 ]]
Iteration 600 of 1000: loss=0.00487 " + "l1=0" + "l2=0.00487 f=-0.558 shape=(1, 9000, 1)
logits [[ 1.1487813 -0.873938   1.1531204 -3.6590147]]
Iteration 700 of 1000: loss=0.00456 " + "l1=0.000121" + "l2=0.00444 f=-0.557 shape=(1, 9000, 1)
logits [[ 1.151332  -0.8725989  1.1501173 -3.657571 ]]
Iteration 800 of 1000: loss=0.00429 " + "l1=6.26e-05" + "l2=0.00423 f=-0.557 shape=(1, 9000, 1)
logits [[ 1.1493143 -0.8718053  1.1486883 -3.6541624]]
Iteration 900 of 1000: loss=0.00402 " + "l1=0" + "l2=0.00402 f=-0.557 shape=(1, 9000, 1)
logits [[ 1.1451266 -0.8706142  1.1477342 -3.650206 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0178 " + "l1=0.0178" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.4127098  -0.87575525  1.0888454  -3.7714922 ]]
Iteration 100 of 1000: loss=0.0115 " + "l1=0.00785" + "l2=0.00362 f=-0.548 shape=(1, 9000, 1)
logits [[ 1.2782506  -0.89017904  1.135587   -3.7146008 ]]
Iteration 200 of 1000: loss=0.00939 " + "l1=0.00435" + "l2=0.00504 f=-0.553 shape=(1, 9000, 1)
logits [[ 1.2277664 -0.8872939  1.1486267 -3.699307 ]]
Iteration 300 of 1000: loss=0.00756 " + "l1=0.00114" + "l2=0.00643 f=-0.557 shape=(1, 9000, 1)
logits [[ 1.1825976 -0.888021   1.1619221 -3.6850843]]
Iteration 400 of 1000: loss=0.00618 " + "l1=0" + "l2=0.00618 f=-0.558 shape=(1, 9000, 1)
logits [[ 1.1615553 -0.8828935  1.1619142 -3.6740694]]
Iteration 500 of 1000: loss=0.00547 " + "l1=9.55e-05" + "l2=0.00537 f=-0.558 shape=(1, 9000, 1)
logits [[ 1.1591389  -0.87896323  1.1574017  -3.6690483 ]]
Iteration 600 of 1000: loss=0.00493 " + "l1=2.79e-06" + "l2=0.00493 f=-0.558 shape=(1, 9000, 1)
logits [[ 1.1549023  -0.87652856  1.1548516  -3.6642292 ]]
Iteration 700 of 1000: loss=0.00466 " + "l1=0" + "l2=0.00466 f=-0.557 shape=(1, 9000, 1)
logits [[ 1.1524986 -0.87501    1.1527396 -3.660087 ]]
Iteration 800 of 1000: loss=0.00431 " + "l1=0" + "l2=0.00431 f=-0.557 shape=(1, 9000, 1)
logits [[ 1.1500864  -0.87493193  1.1517879  -3.6565828 ]]
Iteration 900 of 1000: loss=0.00443 " + "l1=0" + "l2=0.00443 f=-0.557 shape=(1, 9000, 1)
logits [[ 1.1483537 -0.8732443  1.149638  -3.6532617]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0105 " + "l1=0.0105" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.4127098  -0.87575525  1.0888454  -3.7714922 ]]
Iteration 100 of 1000: loss=0.00828 " + "l1=0.00697" + "l2=0.00131 f=-0.543 shape=(1, 9000, 1)
logits [[ 1.3311514 -0.8837546  1.1166348 -3.7359922]]
Iteration 200 of 1000: loss=0.00767 " + "l1=0.006" + "l2=0.00166 f=-0.545 shape=(1, 9000, 1)
logits [[ 1.3081484 -0.8840193  1.1235018 -3.7285857]]
Iteration 300 of 1000: loss=0.00712 " + "l1=0.00505" + "l2=0.00207 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.2854002 -0.8843453  1.1299043 -3.7202342]]
Iteration 400 of 1000: loss=0.00666 " + "l1=0.00424" + "l2=0.00242 f=-0.549 shape=(1, 9000, 1)
logits [[ 1.2646413  -0.88293445  1.134222   -3.7117155 ]]
Iteration 500 of 1000: loss=0.00626 " + "l1=0.00347" + "l2=0.0028 f=-0.55 shape=(1, 9000, 1)
logits [[ 1.2454281  -0.88269776  1.138782   -3.703039  ]]
Iteration 600 of 1000: loss=0.00592 " + "l1=0.0028" + "l2=0.00312 f=-0.552 shape=(1, 9000, 1)
logits [[ 1.2276095 -0.8811862  1.1415178 -3.6941535]]
Iteration 700 of 1000: loss=0.00558 " + "l1=0.00217" + "l2=0.00341 f=-0.553 shape=(1, 9000, 1)
logits [[ 1.2105945  -0.87954444  1.1438754  -3.6855469 ]]
Iteration 800 of 1000: loss=0.00521 " + "l1=0.00146" + "l2=0.00375 f=-0.554 shape=(1, 9000, 1)
logits [[ 1.1910563 -0.8770199  1.1462026 -3.6756983]]
Iteration 900 of 1000: loss=0.00491 " + "l1=0.000603" + "l2=0.00431 f=-0.556 shape=(1, 9000, 1)
logits [[ 1.171133   -0.88003564  1.152581   -3.6679723 ]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00688 " + "l1=0.00688" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.4127098  -0.87575525  1.0888454  -3.7714922 ]]
Iteration 100 of 1000: loss=0.00589 " + "l1=0.00525" + "l2=0.000635 f=-0.541 shape=(1, 9000, 1)
logits [[ 1.3549461  -0.88041395  1.1078668  -3.746441  ]]
Iteration 200 of 1000: loss=0.00564 " + "l1=0.00494" + "l2=0.000704 f=-0.542 shape=(1, 9000, 1)
logits [[ 1.343992  -0.8810336  1.1114844 -3.7430415]]
Iteration 300 of 1000: loss=0.00547 " + "l1=0.00461" + "l2=0.000856 f=-0.543 shape=(1, 9000, 1)
logits [[ 1.3317847  -0.88076323  1.1146514  -3.738146  ]]
Iteration 400 of 1000: loss=0.00528 " + "l1=0.00428" + "l2=0.00101 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.3189243 -0.8800993  1.1176556 -3.7328074]]
Iteration 500 of 1000: loss=0.00513 " + "l1=0.00396" + "l2=0.00117 f=-0.545 shape=(1, 9000, 1)
logits [[ 1.3065727 -0.8791747  1.1202115 -3.7271779]]
Iteration 600 of 1000: loss=0.00503 " + "l1=0.00366" + "l2=0.00137 f=-0.546 shape=(1, 9000, 1)
logits [[ 1.2950974 -0.8791231  1.122857  -3.721669 ]]
Iteration 700 of 1000: loss=0.0049 " + "l1=0.00339" + "l2=0.00151 f=-0.546 shape=(1, 9000, 1)
logits [[ 1.2846181 -0.8787898  1.1251105 -3.7167628]]
Iteration 800 of 1000: loss=0.00494 " + "l1=0.00315" + "l2=0.0018 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.2749779  -0.87857246  1.1269643  -3.7122183 ]]
--- 260.96986961364746 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0518 " + "l1=0.0518" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.4127098  -0.87575525  1.0888454  -3.7714922 ]]
Iteration 100 of 1000: loss=0.0511 " + "l1=0.0506" + "l2=0.000511 f=-0.532 shape=(1, 9000, 1)
logits [[ 1.3524802 -0.8406485  1.0677085 -3.7091856]]
Iteration 200 of 1000: loss=0.051 " + "l1=0.0504" + "l2=0.000545 f=-0.532 shape=(1, 9000, 1)
logits [[ 1.3425326  -0.83353055  1.0633055  -3.6999986 ]]
Iteration 300 of 1000: loss=0.0508 " + "l1=0.0502" + "l2=0.000662 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.3303307  -0.82574457  1.0585448  -3.6878645 ]]
Iteration 400 of 1000: loss=0.0507 " + "l1=0.0499" + "l2=0.000775 f=-0.53 shape=(1, 9000, 1)
logits [[ 1.3182876  -0.81861323  1.0543554  -3.6757414 ]]
Iteration 500 of 1000: loss=0.0506 " + "l1=0.0497" + "l2=0.00093 f=-0.53 shape=(1, 9000, 1)
logits [[ 1.3072035  -0.81302154  1.0511899  -3.6646316 ]]
Iteration 600 of 1000: loss=0.0506 " + "l1=0.0495" + "l2=0.00105 f=-0.529 shape=(1, 9000, 1)
logits [[ 1.297748   -0.80932474  1.0491819  -3.655114  ]]
Iteration 700 of 1000: loss=0.0505 " + "l1=0.0493" + "l2=0.0012 f=-0.529 shape=(1, 9000, 1)
logits [[ 1.2882944 -0.805461   1.0471106 -3.6458378]]
Iteration 800 of 1000: loss=0.0505 " + "l1=0.0492" + "l2=0.00132 f=-0.529 shape=(1, 9000, 1)
logits [[ 1.2795538  -0.80240613  1.0456098  -3.6374052 ]]
Iteration 900 of 1000: loss=0.0505 " + "l1=0.049" + "l2=0.00149 f=-0.528 shape=(1, 9000, 1)
logits [[ 1.2712682 -0.7996734  1.0443588 -3.6293654]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.518 " + "l1=0.518" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.4127098  -0.87575525  1.0888454  -3.7714922 ]]
Iteration 100 of 1000: loss=0.45 " + "l1=0.42" + "l2=0.0306 f=-0.511 shape=(1, 9000, 1)
logits [[ 0.9054758  -0.56517375  0.9057597  -3.2913706 ]]
Iteration 200 of 1000: loss=0.431 " + "l1=0.395" + "l2=0.0362 f=-0.498 shape=(1, 9000, 1)
logits [[ 0.8070091  -0.4731704   0.81155765 -3.1363156 ]]
Iteration 300 of 1000: loss=0.413 " + "l1=0.37" + "l2=0.0429 f=-0.486 shape=(1, 9000, 1)
logits [[ 0.713957  -0.3923621  0.7168376 -2.982408 ]]
Iteration 400 of 1000: loss=0.398 " + "l1=0.35" + "l2=0.0486 f=-0.478 shape=(1, 9000, 1)
logits [[ 0.63305813 -0.32991022  0.639988   -2.8561854 ]]
Iteration 500 of 1000: loss=0.386 " + "l1=0.33" + "l2=0.056 f=-0.474 shape=(1, 9000, 1)
logits [[ 0.5256896  -0.26171672  0.56775224 -2.728054  ]]
Iteration 600 of 1000: loss=0.371 " + "l1=0.307" + "l2=0.0644 f=-0.471 shape=(1, 9000, 1)
logits [[ 0.3961679  -0.19978313  0.4939276  -2.572503  ]]
Iteration 700 of 1000: loss=0.355 " + "l1=0.285" + "l2=0.0703 f=-0.468 shape=(1, 9000, 1)
logits [[ 0.27514902 -0.1475248   0.42554733 -2.4247744 ]]
Iteration 800 of 1000: loss=0.341 " + "l1=0.266" + "l2=0.0746 f=-0.464 shape=(1, 9000, 1)
logits [[ 0.17578283 -0.10740478  0.37010652 -2.2946045 ]]
Iteration 900 of 1000: loss=0.33 " + "l1=0.253" + "l2=0.0767 f=-0.461 shape=(1, 9000, 1)
logits [[ 0.10440996 -0.0782414   0.32976565 -2.2000694 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.18 " + "l1=5.18" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.4127098  -0.87575525  1.0888454  -3.7714922 ]]
Iteration 100 of 1000: loss=2.05 " + "l1=1.03" + "l2=1.02 f=-0.381 shape=(1, 9000, 1)
logits [[-0.60039115  0.03598772  0.03297672 -0.99226934]]
Iteration 200 of 1000: loss=1.06 " + "l1=0" + "l2=1.06 f=-0.315 shape=(1, 9000, 1)
logits [[-0.8929305  -0.1268342  -0.12219589 -0.11862765]]
Iteration 300 of 1000: loss=0.738 " + "l1=0.000421" + "l2=0.737 f=-0.32 shape=(1, 9000, 1)
logits [[-0.925238   -0.13730964 -0.10945985 -0.10988117]]
Iteration 400 of 1000: loss=0.587 " + "l1=0" + "l2=0.587 f=-0.315 shape=(1, 9000, 1)
logits [[-0.93075126 -0.11550119 -0.11222116 -0.10208323]]
Iteration 500 of 1000: loss=0.491 " + "l1=0" + "l2=0.491 f=-0.309 shape=(1, 9000, 1)
logits [[-0.9224011  -0.10633466 -0.11511592 -0.09271535]]
Iteration 600 of 1000: loss=0.424 " + "l1=0.00561" + "l2=0.419 f=-0.312 shape=(1, 9000, 1)
logits [[-0.91051584 -0.12748867 -0.101344   -0.10695467]]
Iteration 700 of 1000: loss=0.377 " + "l1=0" + "l2=0.377 f=-0.313 shape=(1, 9000, 1)
logits [[-0.9349263  -0.12999098 -0.10244697 -0.08487143]]
Iteration 800 of 1000: loss=0.341 " + "l1=0" + "l2=0.341 f=-0.319 shape=(1, 9000, 1)
logits [[-0.95583934 -0.12326921 -0.10266534 -0.09252923]]
Iteration 900 of 1000: loss=0.319 " + "l1=0" + "l2=0.319 f=-0.319 shape=(1, 9000, 1)
logits [[-0.97919714 -0.11823118 -0.10083007 -0.07706301]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.85 " + "l1=2.85" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.4127098  -0.87575525  1.0888454  -3.7714922 ]]
Iteration 100 of 1000: loss=1.62 " + "l1=1.17" + "l2=0.454 f=-0.423 shape=(1, 9000, 1)
logits [[-0.09193265 -0.00850308  0.26260296 -1.8560272 ]]
Iteration 200 of 1000: loss=1.11 " + "l1=0.527" + "l2=0.581 f=-0.381 shape=(1, 9000, 1)
logits [[-5.7460546e-01 -4.9312972e-04  5.5943099e-03 -9.5289546e-01]]
Iteration 300 of 1000: loss=0.815 " + "l1=0.235" + "l2=0.58 f=-0.347 shape=(1, 9000, 1)
logits [[-0.7883553  -0.05627017 -0.05780941 -0.48405588]]
Iteration 400 of 1000: loss=0.54 " + "l1=0" + "l2=0.54 f=-0.305 shape=(1, 9000, 1)
logits [[-0.923578   -0.10229447 -0.09838381 -0.09413417]]
Iteration 500 of 1000: loss=0.425 " + "l1=0.001" + "l2=0.424 f=-0.296 shape=(1, 9000, 1)
logits [[-0.94519985 -0.09848924 -0.06935646 -0.07117407]]
Iteration 600 of 1000: loss=0.364 " + "l1=0" + "l2=0.364 f=-0.296 shape=(1, 9000, 1)
logits [[-0.99552846 -0.0741373  -0.06451281 -0.05069841]]
Iteration 700 of 1000: loss=0.318 " + "l1=0" + "l2=0.318 f=-0.296 shape=(1, 9000, 1)
logits [[-1.0064259  -0.06301782 -0.05669255 -0.0562993 ]]
Iteration 800 of 1000: loss=0.295 " + "l1=0.00642" + "l2=0.289 f=-0.297 shape=(1, 9000, 1)
logits [[-1.0177003  -0.06314601 -0.04700002 -0.05867793]]
Iteration 900 of 1000: loss=0.275 " + "l1=0.00143" + "l2=0.273 f=-0.3 shape=(1, 9000, 1)
logits [[-1.0378032  -0.06938064 -0.04417311 -0.04677621]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.68 " + "l1=1.68" + "l2=0 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.4127098  -0.87575525  1.0888454  -3.7714922 ]]
Iteration 100 of 1000: loss=1.17 " + "l1=0.963" + "l2=0.21 f=-0.444 shape=(1, 9000, 1)
logits [[ 0.37167588 -0.14215644  0.47809643 -2.4846537 ]]
Iteration 200 of 1000: loss=0.949 " + "l1=0.663" + "l2=0.286 f=-0.431 shape=(1, 9000, 1)
logits [[-0.10580622  0.00655716  0.20773368 -1.8316528 ]]
Iteration 300 of 1000: loss=0.798 " + "l1=0.482" + "l2=0.316 f=-0.409 shape=(1, 9000, 1)
logits [[-0.3391608   0.02388329  0.0812206  -1.400698  ]]
Iteration 400 of 1000: loss=0.671 " + "l1=0.329" + "l2=0.342 f=-0.388 shape=(1, 9000, 1)
logits [[-0.57453233  0.01012859  0.0122756  -1.0013332 ]]
Iteration 500 of 1000: loss=0.551 " + "l1=0.197" + "l2=0.354 f=-0.359 shape=(1, 9000, 1)
logits [[-0.7753581  -0.02219749 -0.0161835  -0.62246186]]
Iteration 600 of 1000: loss=0.442 " + "l1=0.0595" + "l2=0.383 f=-0.32 shape=(1, 9000, 1)
logits [[-0.9426954  -0.05037178 -0.05232228 -0.23356596]]
Iteration 700 of 1000: loss=0.346 " + "l1=0.00099" + "l2=0.345 f=-0.298 shape=(1, 9000, 1)
logits [[-1.0212786  -0.06260148 -0.05166275 -0.05470871]]
Iteration 800 of 1000: loss=0.302 " + "l1=0.00118" + "l2=0.301 f=-0.293 shape=(1, 9000, 1)
logits [[-1.019578   -0.06972359 -0.03855869 -0.04218601]]
Iteration 900 of 1000: loss=0.276 " + "l1=0.000617" + "l2=0.275 f=-0.297 shape=(1, 9000, 1)
logits [[-1.0498139  -0.05814422 -0.03936574 -0.04126558]]
--- 296.5943067073822 seconds ---
Adv result:3
Loading record A00128
(1, 7028)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.048 " + "l1=0.048" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.7784863 -1.0240159  1.2651795 -6.0694156]]
Iteration 100 of 1000: loss=0.0476 " + "l1=0.0473" + "l2=0.000294 f=-0.514 shape=(1, 9000, 1)
logits [[ 3.7358973  -0.99257416  1.2492876  -6.0473948 ]]
Iteration 200 of 1000: loss=0.0474 " + "l1=0.0471" + "l2=0.000296 f=-0.513 shape=(1, 9000, 1)
logits [[ 3.7289312  -0.98599464  1.2456509  -6.042399  ]]
Iteration 300 of 1000: loss=0.0473 " + "l1=0.047" + "l2=0.000364 f=-0.514 shape=(1, 9000, 1)
logits [[ 3.7194123  -0.97798055  1.2413561  -6.036803  ]]
Iteration 400 of 1000: loss=0.0472 " + "l1=0.0468" + "l2=0.00043 f=-0.514 shape=(1, 9000, 1)
logits [[ 3.7091892  -0.96997905  1.2370805  -6.0308747 ]]
Iteration 500 of 1000: loss=0.0472 " + "l1=0.0466" + "l2=0.000577 f=-0.514 shape=(1, 9000, 1)
logits [[ 3.6986341 -0.9620011  1.2329497 -6.0246177]]
Iteration 600 of 1000: loss=0.0471 " + "l1=0.0464" + "l2=0.000653 f=-0.514 shape=(1, 9000, 1)
logits [[ 3.687932  -0.9545178  1.2291368 -6.018425 ]]
Iteration 700 of 1000: loss=0.047 " + "l1=0.0462" + "l2=0.000788 f=-0.514 shape=(1, 9000, 1)
logits [[ 3.6774738  -0.94714576  1.2254889  -6.012383  ]]
Iteration 800 of 1000: loss=0.047 " + "l1=0.0461" + "l2=0.000889 f=-0.514 shape=(1, 9000, 1)
logits [[ 3.6673262 -0.9396438  1.2217531 -6.006317 ]]
Iteration 900 of 1000: loss=0.0469 " + "l1=0.0459" + "l2=0.00102 f=-0.514 shape=(1, 9000, 1)
logits [[ 3.657554  -0.932358   1.2180735 -6.0002947]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.48 " + "l1=0.48" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.7784863 -1.0240159  1.2651795 -6.0694156]]
Iteration 100 of 1000: loss=0.423 " + "l1=0.381" + "l2=0.0418 f=-0.479 shape=(1, 9000, 1)
logits [[ 3.3160853  -0.49210846  1.0226437  -5.7631254 ]]
Iteration 200 of 1000: loss=0.389 " + "l1=0.316" + "l2=0.0722 f=-0.469 shape=(1, 9000, 1)
logits [[ 2.989573  -0.1750937  0.9548155 -5.646684 ]]
Iteration 300 of 1000: loss=0.36 " + "l1=0.273" + "l2=0.0868 f=-0.485 shape=(1, 9000, 1)
logits [[ 2.7307541e+00  2.6876219e-03  9.3046367e-01 -5.6027274e+00]]
Iteration 400 of 1000: loss=0.335 " + "l1=0.232" + "l2=0.103 f=-0.502 shape=(1, 9000, 1)
logits [[ 2.4900157   0.16801682  0.8971238  -5.5645075 ]]
Iteration 500 of 1000: loss=0.314 " + "l1=0.199" + "l2=0.115 f=-0.525 shape=(1, 9000, 1)
logits [[ 2.2861001   0.29488373  0.8751248  -5.554517  ]]
Iteration 600 of 1000: loss=0.291 " + "l1=0.155" + "l2=0.136 f=-0.557 shape=(1, 9000, 1)
logits [[ 2.0144737   0.46020022  0.8517584  -5.5556684 ]]
Iteration 700 of 1000: loss=0.268 " + "l1=0.112" + "l2=0.156 f=-0.588 shape=(1, 9000, 1)
logits [[ 1.7386572   0.614244    0.83710164 -5.543989  ]]
Iteration 800 of 1000: loss=0.247 " + "l1=0.0733" + "l2=0.174 f=-0.625 shape=(1, 9000, 1)
logits [[ 1.4593948   0.72650844  0.83486277 -5.520822  ]]
Iteration 900 of 1000: loss=0.228 " + "l1=0.0424" + "l2=0.186 f=-0.638 shape=(1, 9000, 1)
logits [[ 1.2482978   0.82407373  0.8345954  -5.4581966 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.8 " + "l1=4.8" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.7784863 -1.0240159  1.2651795 -6.0694156]]
Iteration 100 of 1000: loss=0.652 " + "l1=0.013" + "l2=0.639 f=-0.722 shape=(1, 9000, 1)
logits [[ 1.0212514  1.0082346  0.7738714 -5.6916976]]
Iteration 200 of 1000: loss=0.48 " + "l1=0" + "l2=0.48 f=-0.726 shape=(1, 9000, 1)
logits [[ 1.029401   1.0725385  0.7631624 -5.767547 ]]
Iteration 300 of 1000: loss=0.422 " + "l1=0" + "l2=0.422 f=-0.726 shape=(1, 9000, 1)
logits [[ 1.0043826  1.116749   0.7476367 -5.771536 ]]
Iteration 400 of 1000: loss=0.363 " + "l1=0" + "l2=0.363 f=-0.718 shape=(1, 9000, 1)
logits [[ 1.0606507  1.0899013  0.7466674 -5.7673035]]
Iteration 500 of 1000: loss=0.327 " + "l1=0" + "l2=0.327 f=-0.725 shape=(1, 9000, 1)
logits [[ 1.0533503   1.0718125   0.75426126 -5.778611  ]]
Iteration 600 of 1000: loss=0.312 " + "l1=0" + "l2=0.312 f=-0.728 shape=(1, 9000, 1)
logits [[ 1.0255864   1.0778251   0.75623095 -5.7724404 ]]
Iteration 700 of 1000: loss=0.3 " + "l1=0" + "l2=0.3 f=-0.727 shape=(1, 9000, 1)
logits [[ 1.0188266  1.0735407  0.7494903 -5.7487617]]
Iteration 800 of 1000: loss=0.288 " + "l1=0" + "l2=0.288 f=-0.726 shape=(1, 9000, 1)
logits [[ 1.0200601  1.0664563  0.7401854 -5.729395 ]]
Iteration 900 of 1000: loss=0.28 " + "l1=0" + "l2=0.28 f=-0.725 shape=(1, 9000, 1)
logits [[ 1.0128757   1.0583405   0.73914963 -5.7100673 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.64 " + "l1=2.64" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.7784863 -1.0240159  1.2651795 -6.0694156]]
Iteration 100 of 1000: loss=0.598 " + "l1=0" + "l2=0.598 f=-0.722 shape=(1, 9000, 1)
logits [[ 1.0252166  1.0404581  0.7626838 -5.715635 ]]
Iteration 200 of 1000: loss=0.433 " + "l1=0" + "l2=0.433 f=-0.716 shape=(1, 9000, 1)
logits [[ 1.0465134  1.0809408  0.7652075 -5.7575135]]
Iteration 300 of 1000: loss=0.361 " + "l1=0" + "l2=0.361 f=-0.716 shape=(1, 9000, 1)
logits [[ 1.0494863  1.086996   0.7697236 -5.7683296]]
Iteration 400 of 1000: loss=0.336 " + "l1=0" + "l2=0.336 f=-0.724 shape=(1, 9000, 1)
logits [[ 1.0014712  1.1033491  0.774314  -5.7760515]]
Iteration 500 of 1000: loss=0.309 " + "l1=0" + "l2=0.309 f=-0.722 shape=(1, 9000, 1)
logits [[ 1.0109541  1.0894479  0.7749273 -5.763173 ]]
Iteration 600 of 1000: loss=0.287 " + "l1=0" + "l2=0.287 f=-0.718 shape=(1, 9000, 1)
logits [[ 1.0364177  1.0553612  0.7703014 -5.7348895]]
Iteration 700 of 1000: loss=0.283 " + "l1=0" + "l2=0.283 f=-0.722 shape=(1, 9000, 1)
logits [[ 0.99109423  1.066238    0.7660409  -5.7100487 ]]
Iteration 800 of 1000: loss=0.281 " + "l1=0.0185" + "l2=0.262 f=-0.715 shape=(1, 9000, 1)
logits [[ 1.042894    1.0092635   0.76202184 -5.67488   ]]
Iteration 900 of 1000: loss=0.261 " + "l1=0" + "l2=0.261 f=-0.719 shape=(1, 9000, 1)
logits [[ 1.001227   1.0282146  0.7587049 -5.6633954]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.56 " + "l1=1.56" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.7784863 -1.0240159  1.2651795 -6.0694156]]
Iteration 100 of 1000: loss=0.656 " + "l1=0.126" + "l2=0.53 f=-0.649 shape=(1, 9000, 1)
logits [[ 1.3243874   0.93742657  0.7698652  -5.6270823 ]]
Iteration 200 of 1000: loss=0.394 " + "l1=0" + "l2=0.394 f=-0.711 shape=(1, 9000, 1)
logits [[ 1.0527756  1.0625213  0.7696392 -5.73081  ]]
Iteration 300 of 1000: loss=0.336 " + "l1=0.000437" + "l2=0.336 f=-0.715 shape=(1, 9000, 1)
logits [[ 1.0571831   1.05584     0.77359617 -5.745178  ]]
Iteration 400 of 1000: loss=0.309 " + "l1=0" + "l2=0.309 f=-0.713 shape=(1, 9000, 1)
logits [[ 1.0447304  1.0631778  0.7732851 -5.733471 ]]
Iteration 500 of 1000: loss=0.289 " + "l1=0" + "l2=0.289 f=-0.71 shape=(1, 9000, 1)
logits [[ 1.0482745  1.0571142  0.7728816 -5.7172747]]
Iteration 600 of 1000: loss=0.277 " + "l1=0" + "l2=0.277 f=-0.707 shape=(1, 9000, 1)
logits [[ 1.0382599   1.0557514   0.76930785 -5.69204   ]]
Iteration 700 of 1000: loss=0.268 " + "l1=0" + "l2=0.268 f=-0.707 shape=(1, 9000, 1)
logits [[ 1.0271173  1.049627   0.7667144 -5.670896 ]]
Iteration 800 of 1000: loss=0.26 " + "l1=0" + "l2=0.26 f=-0.704 shape=(1, 9000, 1)
logits [[ 1.0094682  1.0502495  0.7647682 -5.638561 ]]
Iteration 900 of 1000: loss=0.248 " + "l1=0" + "l2=0.248 f=-0.698 shape=(1, 9000, 1)
logits [[ 1.0233109  1.0248522  0.76225   -5.603439 ]]
--- 305.09584736824036 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0251 " + "l1=0.0251" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.7784863 -1.0240159  1.2651795 -6.0694156]]
Iteration 100 of 1000: loss=0.0249 " + "l1=0.0248" + "l2=0.000151 f=-0.516 shape=(1, 9000, 1)
logits [[ 3.7503204 -1.025879   1.2720602 -6.058879 ]]
Iteration 200 of 1000: loss=0.0249 " + "l1=0.0247" + "l2=0.000143 f=-0.516 shape=(1, 9000, 1)
logits [[ 3.7463636 -1.0263369  1.2727116 -6.056683 ]]
Iteration 300 of 1000: loss=0.0248 " + "l1=0.0247" + "l2=0.00017 f=-0.516 shape=(1, 9000, 1)
logits [[ 3.740471  -1.0267715  1.2736886 -6.053324 ]]
Iteration 400 of 1000: loss=0.0248 " + "l1=0.0246" + "l2=0.000228 f=-0.517 shape=(1, 9000, 1)
logits [[ 3.7341545 -1.0271701  1.2746624 -6.049386 ]]
Iteration 500 of 1000: loss=0.0248 " + "l1=0.0245" + "l2=0.000273 f=-0.517 shape=(1, 9000, 1)
logits [[ 3.727587  -1.0274569  1.2755485 -6.0450053]]
Iteration 600 of 1000: loss=0.0248 " + "l1=0.0244" + "l2=0.000401 f=-0.518 shape=(1, 9000, 1)
logits [[ 3.7211277 -1.0276773  1.2764409 -6.04058  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.251 " + "l1=0.251" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.7784863 -1.0240159  1.2651795 -6.0694156]]
Iteration 100 of 1000: loss=0.235 " + "l1=0.226" + "l2=0.00837 f=-0.536 shape=(1, 9000, 1)
logits [[ 3.5790408 -1.0354346  1.3145769 -6.0009665]]
Iteration 200 of 1000: loss=0.226 " + "l1=0.213" + "l2=0.0132 f=-0.547 shape=(1, 9000, 1)
logits [[ 3.4707668 -1.0376425  1.3380245 -5.9579725]]
Iteration 300 of 1000: loss=0.217 " + "l1=0.198" + "l2=0.0189 f=-0.561 shape=(1, 9000, 1)
logits [[ 3.3441556 -1.0462724  1.3610221 -5.903062 ]]
Iteration 400 of 1000: loss=0.209 " + "l1=0.186" + "l2=0.0225 f=-0.571 shape=(1, 9000, 1)
logits [[ 3.2405038 -1.0613922  1.3794538 -5.843686 ]]
Iteration 500 of 1000: loss=0.195 " + "l1=0.155" + "l2=0.0398 f=-0.622 shape=(1, 9000, 1)
logits [[ 2.98925   -1.0960258  1.4380453 -5.817602 ]]
Iteration 600 of 1000: loss=0.184 " + "l1=0.138" + "l2=0.0455 f=-0.633 shape=(1, 9000, 1)
logits [[ 2.8392005 -1.113576   1.4570242 -5.713152 ]]
Iteration 700 of 1000: loss=0.174 " + "l1=0.124" + "l2=0.0501 f=-0.637 shape=(1, 9000, 1)
logits [[ 2.7030866 -1.1235058  1.4607761 -5.5882363]]
Iteration 800 of 1000: loss=0.166 " + "l1=0.113" + "l2=0.0523 f=-0.638 shape=(1, 9000, 1)
logits [[ 2.5903828 -1.1311083  1.4560982 -5.4680424]]
Iteration 900 of 1000: loss=0.159 " + "l1=0.105" + "l2=0.0538 f=-0.638 shape=(1, 9000, 1)
logits [[ 2.4966323 -1.1358019  1.4475946 -5.3601055]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.51 " + "l1=2.51" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.7784863 -1.0240159  1.2651795 -6.0694156]]
Iteration 100 of 1000: loss=0.527 " + "l1=0" + "l2=0.527 f=-0.795 shape=(1, 9000, 1)
logits [[ 1.6656499 -1.0584682  1.6712753 -5.460217 ]]
Iteration 200 of 1000: loss=0.318 " + "l1=0" + "l2=0.318 f=-0.808 shape=(1, 9000, 1)
logits [[ 1.6594878 -1.1009319  1.6753291 -5.466605 ]]
Iteration 300 of 1000: loss=0.254 " + "l1=0" + "l2=0.254 f=-0.801 shape=(1, 9000, 1)
logits [[ 1.636121  -1.1274942  1.6550847 -5.369418 ]]
Iteration 400 of 1000: loss=0.213 " + "l1=0.00467" + "l2=0.208 f=-0.791 shape=(1, 9000, 1)
logits [[ 1.6226721 -1.131487   1.6180052 -5.274265 ]]
Iteration 500 of 1000: loss=0.185 " + "l1=0" + "l2=0.185 f=-0.791 shape=(1, 9000, 1)
logits [[ 1.5742154 -1.1197599  1.5801078 -5.1991405]]
Iteration 600 of 1000: loss=0.168 " + "l1=0" + "l2=0.168 f=-0.785 shape=(1, 9000, 1)
logits [[ 1.5493776 -1.1096327  1.5540544 -5.1355505]]
Iteration 700 of 1000: loss=0.156 " + "l1=0" + "l2=0.156 f=-0.779 shape=(1, 9000, 1)
logits [[ 1.530031  -1.1079078  1.5341132 -5.0720806]]
Iteration 800 of 1000: loss=0.159 " + "l1=0" + "l2=0.159 f=-0.778 shape=(1, 9000, 1)
logits [[ 1.4588819 -1.102435   1.5344056 -5.0032215]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.38 " + "l1=1.38" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.7784863 -1.0240159  1.2651795 -6.0694156]]
Iteration 100 of 1000: loss=0.635 " + "l1=0.236" + "l2=0.399 f=-0.757 shape=(1, 9000, 1)
logits [[ 2.0343711 -1.0369331  1.6058599 -5.631242 ]]
Iteration 200 of 1000: loss=0.303 " + "l1=0.00531" + "l2=0.298 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.6660552 -1.1146979  1.6564095 -5.4519105]]
Iteration 300 of 1000: loss=0.226 " + "l1=0" + "l2=0.226 f=-0.8 shape=(1, 9000, 1)
logits [[ 1.6177973 -1.1332138  1.61861   -5.3026276]]
Iteration 400 of 1000: loss=0.198 " + "l1=0.00907" + "l2=0.189 f=-0.794 shape=(1, 9000, 1)
logits [[ 1.5882325 -1.126867   1.571738  -5.2081933]]
Iteration 500 of 1000: loss=0.172 " + "l1=0.0014" + "l2=0.171 f=-0.789 shape=(1, 9000, 1)
logits [[ 1.5409658 -1.1162721  1.5384291 -5.1184387]]
Iteration 600 of 1000: loss=0.16 " + "l1=0" + "l2=0.16 f=-0.782 shape=(1, 9000, 1)
logits [[ 1.5046898 -1.1101992  1.5186433 -5.040503 ]]
Iteration 700 of 1000: loss=0.147 " + "l1=0" + "l2=0.147 f=-0.774 shape=(1, 9000, 1)
logits [[ 1.4853235 -1.1021434  1.4950502 -4.973798 ]]
Iteration 800 of 1000: loss=0.14 " + "l1=0.00302" + "l2=0.137 f=-0.765 shape=(1, 9000, 1)
logits [[ 1.4788313 -1.0940188  1.4733425 -4.918179 ]]
Iteration 900 of 1000: loss=0.134 " + "l1=0" + "l2=0.134 f=-0.76 shape=(1, 9000, 1)
logits [[ 1.4388074 -1.084613   1.4644154 -4.857378 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.817 " + "l1=0.817" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.7784863 -1.0240159  1.2651795 -6.0694156]]
Iteration 100 of 1000: loss=0.568 " + "l1=0.421" + "l2=0.147 f=-0.662 shape=(1, 9000, 1)
logits [[ 2.7795186 -1.0579379  1.4850861 -5.855899 ]]
Iteration 200 of 1000: loss=0.406 " + "l1=0.202" + "l2=0.205 f=-0.722 shape=(1, 9000, 1)
logits [[ 2.1948152 -1.0767442  1.5744264 -5.5806513]]
Iteration 300 of 1000: loss=0.264 " + "l1=0.00717" + "l2=0.257 f=-0.762 shape=(1, 9000, 1)
logits [[ 1.641321  -1.1016972  1.6192635 -5.20773  ]]
Iteration 400 of 1000: loss=0.191 " + "l1=0" + "l2=0.191 f=-0.776 shape=(1, 9000, 1)
logits [[ 1.573376  -1.1317011  1.5741982 -5.120984 ]]
Iteration 500 of 1000: loss=0.165 " + "l1=0" + "l2=0.165 f=-0.777 shape=(1, 9000, 1)
logits [[ 1.526199  -1.1235479  1.5351453 -5.0470366]]
Iteration 600 of 1000: loss=0.148 " + "l1=0" + "l2=0.148 f=-0.774 shape=(1, 9000, 1)
logits [[ 1.50032   -1.1170013  1.5010037 -4.9799657]]
Iteration 700 of 1000: loss=0.14 " + "l1=0" + "l2=0.14 f=-0.768 shape=(1, 9000, 1)
logits [[ 1.4652772 -1.1029941  1.4761202 -4.909806 ]]
Iteration 800 of 1000: loss=0.132 " + "l1=0" + "l2=0.132 f=-0.76 shape=(1, 9000, 1)
logits [[ 1.4496784 -1.0970657  1.4573762 -4.850752 ]]
Iteration 900 of 1000: loss=0.124 " + "l1=0" + "l2=0.124 f=-0.75 shape=(1, 9000, 1)
logits [[ 1.4325786 -1.0859702  1.434621  -4.7822886]]
--- 270.09212470054626 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0985 " + "l1=0.0985" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.7784863 -1.0240159  1.2651795 -6.0694156]]
Iteration 100 of 1000: loss=0.0978 " + "l1=0.0974" + "l2=0.000355 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.7312415 -1.0114183  1.2499692 -6.012654 ]]
Iteration 200 of 1000: loss=0.0975 " + "l1=0.0972" + "l2=0.000374 f=-0.51 shape=(1, 9000, 1)
logits [[ 3.719021  -1.0097753  1.2466234 -5.9973392]]
Iteration 300 of 1000: loss=0.0973 " + "l1=0.0968" + "l2=0.000457 f=-0.51 shape=(1, 9000, 1)
logits [[ 3.703867  -1.0087963  1.2422345 -5.9773865]]
Iteration 400 of 1000: loss=0.097 " + "l1=0.0964" + "l2=0.000576 f=-0.51 shape=(1, 9000, 1)
logits [[ 3.687848  -1.0084984  1.2377064 -5.9556174]]
Iteration 500 of 1000: loss=0.0968 " + "l1=0.096" + "l2=0.000747 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.6712081 -1.0080371  1.2330568 -5.9332957]]
Iteration 600 of 1000: loss=0.0965 " + "l1=0.0956" + "l2=0.000889 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.654365  -1.0076396  1.2283497 -5.910381 ]]
Iteration 700 of 1000: loss=0.0963 " + "l1=0.0952" + "l2=0.00108 f=-0.508 shape=(1, 9000, 1)
logits [[ 3.6372395 -1.0079205  1.2237546 -5.8869257]]
Iteration 800 of 1000: loss=0.0961 " + "l1=0.0948" + "l2=0.00128 f=-0.508 shape=(1, 9000, 1)
logits [[ 3.6201162 -1.008232   1.2191268 -5.863782 ]]
Iteration 900 of 1000: loss=0.0961 " + "l1=0.0944" + "l2=0.00165 f=-0.508 shape=(1, 9000, 1)
logits [[ 3.6026278 -1.0091907  1.2146852 -5.8395195]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.985 " + "l1=0.985" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.7784863 -1.0240159  1.2651795 -6.0694156]]
Iteration 100 of 1000: loss=0.921 " + "l1=0.889" + "l2=0.0321 f=-0.485 shape=(1, 9000, 1)
logits [[ 3.3479753  -0.85923475  1.1142783  -5.5436797 ]]
Iteration 200 of 1000: loss=0.874 " + "l1=0.827" + "l2=0.0476 f=-0.464 shape=(1, 9000, 1)
logits [[ 3.071666  -0.7661146  1.0329176 -5.1959968]]
Iteration 300 of 1000: loss=0.815 " + "l1=0.749" + "l2=0.0656 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.7200868  -0.69424546  0.94173604 -4.773055  ]]
Iteration 400 of 1000: loss=0.751 " + "l1=0.663" + "l2=0.0885 f=-0.437 shape=(1, 9000, 1)
logits [[ 2.323621  -0.5967658  0.8285665 -4.301997 ]]
Iteration 500 of 1000: loss=0.694 " + "l1=0.588" + "l2=0.106 f=-0.43 shape=(1, 9000, 1)
logits [[ 1.9788573  -0.54041654  0.7429912  -3.8998644 ]]
Iteration 600 of 1000: loss=0.65 " + "l1=0.53" + "l2=0.119 f=-0.424 shape=(1, 9000, 1)
logits [[ 1.7078124  -0.4939282   0.68795073 -3.5960054 ]]
Iteration 700 of 1000: loss=0.611 " + "l1=0.477" + "l2=0.135 f=-0.426 shape=(1, 9000, 1)
logits [[ 1.4392244  -0.44788554  0.6337819  -3.3278553 ]]
Iteration 800 of 1000: loss=0.58 " + "l1=0.431" + "l2=0.149 f=-0.433 shape=(1, 9000, 1)
logits [[ 1.2075208  -0.41728476  0.58259267 -3.1057444 ]]
Iteration 900 of 1000: loss=0.554 " + "l1=0.391" + "l2=0.164 f=-0.445 shape=(1, 9000, 1)
logits [[ 0.9880309  -0.38441762  0.5358904  -2.9181101 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.85 " + "l1=9.85" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.7784863 -1.0240159  1.2651795 -6.0694156]]
Iteration 100 of 1000: loss=4.12 " + "l1=2.18" + "l2=1.93 f=-0.425 shape=(1, 9000, 1)
logits [[ 0.1244633   0.10663984  0.12638815 -2.0576582 ]]
Iteration 200 of 1000: loss=2.46 " + "l1=0.54" + "l2=1.92 f=-0.291 shape=(1, 9000, 1)
logits [[-0.16253205 -0.15086614 -0.15996553 -0.69085747]]
Iteration 300 of 1000: loss=1.43 " + "l1=0" + "l2=1.43 f=-0.295 shape=(1, 9000, 1)
logits [[-0.32415214 -0.2932356  -0.28800526 -0.27498442]]
Iteration 400 of 1000: loss=1.07 " + "l1=0.00893" + "l2=1.06 f=-0.316 shape=(1, 9000, 1)
logits [[-0.30722103 -0.3314628  -0.31030992 -0.31615224]]
Iteration 500 of 1000: loss=0.885 " + "l1=0" + "l2=0.885 f=-0.33 shape=(1, 9000, 1)
logits [[-0.32673252 -0.3875267  -0.30443725 -0.3020607 ]]
Iteration 600 of 1000: loss=0.775 " + "l1=0" + "l2=0.775 f=-0.331 shape=(1, 9000, 1)
logits [[-0.31935146 -0.47054535 -0.28852773 -0.24589092]]
Iteration 700 of 1000: loss=0.678 " + "l1=0" + "l2=0.678 f=-0.33 shape=(1, 9000, 1)
logits [[-0.27709052 -0.5375666  -0.2597417  -0.24651495]]
Iteration 800 of 1000: loss=0.613 " + "l1=0" + "l2=0.613 f=-0.327 shape=(1, 9000, 1)
logits [[-0.25440082 -0.59919    -0.23923844 -0.21652722]]
Iteration 900 of 1000: loss=0.57 " + "l1=0" + "l2=0.57 f=-0.328 shape=(1, 9000, 1)
logits [[-0.27939674 -0.6253677  -0.2271189  -0.17835754]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.42 " + "l1=5.42" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.7784863 -1.0240159  1.2651795 -6.0694156]]
Iteration 100 of 1000: loss=3.13 " + "l1=2.08" + "l2=1.04 f=-0.502 shape=(1, 9000, 1)
logits [[ 0.5525483   0.11019491  0.55987793 -3.230105  ]]
Iteration 200 of 1000: loss=2.09 " + "l1=1.12" + "l2=0.965 f=-0.416 shape=(1, 9000, 1)
logits [[ 0.09741305  0.08739059  0.09516397 -1.9426805 ]]
Iteration 300 of 1000: loss=1.54 " + "l1=0.602" + "l2=0.935 f=-0.343 shape=(1, 9000, 1)
logits [[-0.06728916 -0.07793562 -0.06509949 -1.1602242 ]]
Iteration 400 of 1000: loss=0.961 " + "l1=0.00832" + "l2=0.952 f=-0.305 shape=(1, 9000, 1)
logits [[-0.29556325 -0.32320988 -0.29243922 -0.30755895]]
Iteration 500 of 1000: loss=0.715 " + "l1=0" + "l2=0.715 f=-0.324 shape=(1, 9000, 1)
logits [[-0.30954474 -0.3938552  -0.29946762 -0.29431123]]
Iteration 600 of 1000: loss=0.615 " + "l1=0.0109" + "l2=0.604 f=-0.323 shape=(1, 9000, 1)
logits [[-0.2571387  -0.49622792 -0.26043436 -0.2769568 ]]
Iteration 700 of 1000: loss=0.552 " + "l1=0.00889" + "l2=0.543 f=-0.323 shape=(1, 9000, 1)
logits [[-0.2348254  -0.5726172  -0.23322998 -0.24939945]]
Iteration 800 of 1000: loss=0.499 " + "l1=0.00286" + "l2=0.496 f=-0.322 shape=(1, 9000, 1)
logits [[-0.22163625 -0.6222065  -0.21935645 -0.22456038]]
Iteration 900 of 1000: loss=0.466 " + "l1=0" + "l2=0.466 f=-0.324 shape=(1, 9000, 1)
logits [[-0.2431699  -0.6514277  -0.21618997 -0.18353945]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.2 " + "l1=3.2" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.7784863 -1.0240159  1.2651795 -6.0694156]]
Iteration 100 of 1000: loss=2.35 " + "l1=1.9" + "l2=0.456 f=-0.439 shape=(1, 9000, 1)
logits [[ 1.6934369  -0.07091873  0.7688091  -4.146011  ]]
Iteration 200 of 1000: loss=1.77 " + "l1=1.18" + "l2=0.598 f=-0.487 shape=(1, 9000, 1)
logits [[ 0.56153613  0.00553061  0.5381363  -3.0547435 ]]
Iteration 300 of 1000: loss=1.42 " + "l1=0.883" + "l2=0.542 f=-0.456 shape=(1, 9000, 1)
logits [[ 0.29402733  0.01533772  0.29028362 -2.4217968 ]]
Iteration 400 of 1000: loss=1.18 " + "l1=0.648" + "l2=0.534 f=-0.42 shape=(1, 9000, 1)
logits [[ 0.0965979   0.02653422  0.09314635 -1.8981879 ]]
Iteration 500 of 1000: loss=0.954 " + "l1=0.385" + "l2=0.568 f=-0.369 shape=(1, 9000, 1)
logits [[-0.07512092 -0.07914017 -0.06792925 -1.2533901 ]]
Iteration 600 of 1000: loss=0.72 " + "l1=0.097" + "l2=0.623 f=-0.346 shape=(1, 9000, 1)
logits [[-0.28273493 -0.28885376 -0.25772706 -0.556289  ]]
Iteration 700 of 1000: loss=0.565 " + "l1=0.00133" + "l2=0.564 f=-0.337 shape=(1, 9000, 1)
logits [[-0.32102636 -0.4675225  -0.2773434  -0.28143772]]
Iteration 800 of 1000: loss=0.499 " + "l1=0.00209" + "l2=0.497 f=-0.336 shape=(1, 9000, 1)
logits [[-0.26232088 -0.5749698  -0.24947423 -0.2559194 ]]
Iteration 900 of 1000: loss=0.457 " + "l1=0.00522" + "l2=0.451 f=-0.342 shape=(1, 9000, 1)
logits [[-0.23069495 -0.65836287 -0.23243345 -0.24675047]]
--- 301.99663257598877 seconds ---
Adv result:3
Loading record A00137
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0439 " + "l1=0.0439" + "l2=0 f=-0.394 shape=(1, 9000, 1)
logits [[ 1.9934118 -2.3920853  1.2746047 -2.449987 ]]
Iteration 100 of 1000: loss=0.0433 " + "l1=0.043" + "l2=0.000349 f=-0.388 shape=(1, 9000, 1)
logits [[ 1.9474717 -2.3482625  1.245157  -2.3981636]]
Iteration 200 of 1000: loss=0.0431 " + "l1=0.0428" + "l2=0.000358 f=-0.387 shape=(1, 9000, 1)
logits [[ 1.9382052 -2.3383415  1.2389748 -2.388312 ]]
Iteration 300 of 1000: loss=0.043 " + "l1=0.0425" + "l2=0.000438 f=-0.386 shape=(1, 9000, 1)
logits [[ 1.9255252 -2.325851   1.2310497 -2.374881 ]]
Iteration 400 of 1000: loss=0.0428 " + "l1=0.0422" + "l2=0.000562 f=-0.385 shape=(1, 9000, 1)
logits [[ 1.911526  -2.3126729  1.2224631 -2.3595045]]
Iteration 500 of 1000: loss=0.0427 " + "l1=0.042" + "l2=0.000712 f=-0.383 shape=(1, 9000, 1)
logits [[ 1.8971529 -2.2985597  1.2138302 -2.3437948]]
Iteration 600 of 1000: loss=0.0425 " + "l1=0.0417" + "l2=0.00082 f=-0.381 shape=(1, 9000, 1)
logits [[ 1.8833125 -2.2854798  1.206056  -2.3292558]]
Iteration 700 of 1000: loss=0.0424 " + "l1=0.0414" + "l2=0.000977 f=-0.38 shape=(1, 9000, 1)
logits [[ 1.8699628 -2.2723672  1.1982216 -2.3152268]]
Iteration 800 of 1000: loss=0.0423 " + "l1=0.0412" + "l2=0.00114 f=-0.378 shape=(1, 9000, 1)
logits [[ 1.8569252 -2.2595162  1.1904724 -2.301599 ]]
Iteration 900 of 1000: loss=0.0422 " + "l1=0.0409" + "l2=0.00133 f=-0.377 shape=(1, 9000, 1)
logits [[ 1.8438325 -2.246005   1.1823986 -2.2875314]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.439 " + "l1=0.439" + "l2=0 f=-0.394 shape=(1, 9000, 1)
logits [[ 1.9934118 -2.3920853  1.2746047 -2.449987 ]]
Iteration 100 of 1000: loss=0.381 " + "l1=0.349" + "l2=0.0321 f=-0.346 shape=(1, 9000, 1)
logits [[ 1.5246118 -1.9680884  0.9641729 -1.9063989]]
Iteration 200 of 1000: loss=0.338 " + "l1=0.287" + "l2=0.0507 f=-0.325 shape=(1, 9000, 1)
logits [[ 1.2014043  -1.6708038   0.73623747 -1.5658656 ]]
Iteration 300 of 1000: loss=0.294 " + "l1=0.227" + "l2=0.067 f=-0.296 shape=(1, 9000, 1)
logits [[ 0.9058842 -1.3646097  0.4936952 -1.2204986]]
Iteration 400 of 1000: loss=0.26 " + "l1=0.181" + "l2=0.0788 f=-0.274 shape=(1, 9000, 1)
logits [[ 0.64368063 -1.1712418   0.3429465  -0.9100259 ]]
Iteration 500 of 1000: loss=0.223 " + "l1=0.127" + "l2=0.0965 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.29321063 -0.9752094   0.22143322 -0.46157426]]
Iteration 600 of 1000: loss=0.184 " + "l1=0.0684" + "l2=0.116 f=-0.203 shape=(1, 9000, 1)
logits [[-4.2228214e-04 -6.8420023e-01 -3.1126509e-03 -1.2348486e-01]]
Iteration 700 of 1000: loss=0.167 " + "l1=0.0513" + "l2=0.116 f=-0.206 shape=(1, 9000, 1)
logits [[-0.07374526 -0.58681774 -0.0758488  -0.08794533]]
Iteration 800 of 1000: loss=0.157 " + "l1=0.0454" + "l2=0.112 f=-0.207 shape=(1, 9000, 1)
logits [[-0.09475626 -0.5466465  -0.09389158 -0.09268492]]
Iteration 900 of 1000: loss=0.149 " + "l1=0.0426" + "l2=0.107 f=-0.203 shape=(1, 9000, 1)
logits [[-0.09171677 -0.51725477 -0.09623331 -0.10641491]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.39 " + "l1=4.39" + "l2=0 f=-0.394 shape=(1, 9000, 1)
logits [[ 1.9934118 -2.3920853  1.2746047 -2.449987 ]]
Iteration 100 of 1000: loss=0.688 " + "l1=0.00377" + "l2=0.684 f=-0.231 shape=(1, 9000, 1)
logits [[-0.24723694 -0.22575153 -0.22992305 -0.22197837]]
Iteration 200 of 1000: loss=0.487 " + "l1=0" + "l2=0.487 f=-0.24 shape=(1, 9000, 1)
logits [[-0.26207057 -0.21893407 -0.24636853 -0.23089674]]
Iteration 300 of 1000: loss=0.391 " + "l1=0" + "l2=0.391 f=-0.246 shape=(1, 9000, 1)
logits [[-0.257751   -0.22785151 -0.23730354 -0.26272735]]
Iteration 400 of 1000: loss=0.332 " + "l1=0" + "l2=0.332 f=-0.247 shape=(1, 9000, 1)
logits [[-0.2683357  -0.23213841 -0.25307196 -0.23437661]]
Iteration 500 of 1000: loss=0.291 " + "l1=0" + "l2=0.291 f=-0.25 shape=(1, 9000, 1)
logits [[-0.262819   -0.22889604 -0.24325804 -0.26443708]]
Iteration 600 of 1000: loss=0.256 " + "l1=0" + "l2=0.256 f=-0.252 shape=(1, 9000, 1)
logits [[-0.25772324 -0.23197806 -0.24319036 -0.27362147]]
Iteration 700 of 1000: loss=0.244 " + "l1=0" + "l2=0.244 f=-0.255 shape=(1, 9000, 1)
logits [[-0.28970283 -0.17513634 -0.26833573 -0.2858691 ]]
Iteration 800 of 1000: loss=0.219 " + "l1=0" + "l2=0.219 f=-0.255 shape=(1, 9000, 1)
logits [[-0.30269858 -0.19885628 -0.26794043 -0.2488392 ]]
Iteration 900 of 1000: loss=0.206 " + "l1=0.000647" + "l2=0.206 f=-0.254 shape=(1, 9000, 1)
logits [[-0.32666132 -0.20839103 -0.27398577 -0.20774397]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.41 " + "l1=2.41" + "l2=0 f=-0.394 shape=(1, 9000, 1)
logits [[ 1.9934118 -2.3920853  1.2746047 -2.449987 ]]
Iteration 100 of 1000: loss=0.678 " + "l1=0.0513" + "l2=0.626 f=-0.217 shape=(1, 9000, 1)
logits [[-0.17788161 -0.27115315 -0.19775312 -0.2200644 ]]
Iteration 200 of 1000: loss=0.404 " + "l1=0.00223" + "l2=0.402 f=-0.235 shape=(1, 9000, 1)
logits [[-0.26119217 -0.22460751 -0.2337422  -0.22056028]]
Iteration 300 of 1000: loss=0.316 " + "l1=0" + "l2=0.316 f=-0.239 shape=(1, 9000, 1)
logits [[-0.25777766 -0.20419976 -0.26075736 -0.23426628]]
Iteration 400 of 1000: loss=0.252 " + "l1=9.21e-05" + "l2=0.251 f=-0.242 shape=(1, 9000, 1)
logits [[-0.24946794 -0.2392558  -0.23908834 -0.2399491 ]]
Iteration 500 of 1000: loss=0.219 " + "l1=0.000639" + "l2=0.219 f=-0.249 shape=(1, 9000, 1)
logits [[-0.2596001  -0.23499411 -0.23383228 -0.2660715 ]]
Iteration 600 of 1000: loss=0.202 " + "l1=0" + "l2=0.202 f=-0.247 shape=(1, 9000, 1)
logits [[-0.24560578 -0.22415169 -0.25395027 -0.26598406]]
Iteration 700 of 1000: loss=0.195 " + "l1=0.00854" + "l2=0.187 f=-0.25 shape=(1, 9000, 1)
logits [[-0.2322282  -0.24776186 -0.24133159 -0.27716023]]
Iteration 800 of 1000: loss=0.183 " + "l1=0" + "l2=0.183 f=-0.247 shape=(1, 9000, 1)
logits [[-0.2571945  -0.22659528 -0.27266875 -0.23127773]]
Iteration 900 of 1000: loss=0.176 " + "l1=0.00319" + "l2=0.173 f=-0.253 shape=(1, 9000, 1)
logits [[-0.23512799 -0.24092714 -0.24587536 -0.28927836]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.43 " + "l1=1.43" + "l2=0 f=-0.394 shape=(1, 9000, 1)
logits [[ 1.9934118 -2.3920853  1.2746047 -2.449987 ]]
Iteration 100 of 1000: loss=0.691 " + "l1=0.307" + "l2=0.384 f=-0.232 shape=(1, 9000, 1)
logits [[ 0.09533945 -0.84994346  0.09075676 -0.2656361 ]]
Iteration 200 of 1000: loss=0.443 " + "l1=0.147" + "l2=0.297 f=-0.194 shape=(1, 9000, 1)
logits [[-0.08286439 -0.5302261  -0.07938918 -0.08508771]]
Iteration 300 of 1000: loss=0.292 " + "l1=0.00994" + "l2=0.282 f=-0.2 shape=(1, 9000, 1)
logits [[-0.19425686 -0.22218256 -0.19158803 -0.1921322 ]]
Iteration 400 of 1000: loss=0.202 " + "l1=0" + "l2=0.202 f=-0.223 shape=(1, 9000, 1)
logits [[-0.22763583 -0.21363749 -0.2204288  -0.22836694]]
Iteration 500 of 1000: loss=0.177 " + "l1=0" + "l2=0.177 f=-0.228 shape=(1, 9000, 1)
logits [[-0.23606476 -0.21832487 -0.22469057 -0.23195845]]
Iteration 600 of 1000: loss=0.165 " + "l1=0" + "l2=0.165 f=-0.231 shape=(1, 9000, 1)
logits [[-0.24104647 -0.21808611 -0.2254451  -0.24084553]]
Iteration 700 of 1000: loss=0.156 " + "l1=0.000906" + "l2=0.155 f=-0.233 shape=(1, 9000, 1)
logits [[-0.23540762 -0.22846209 -0.22567527 -0.24116611]]
Iteration 800 of 1000: loss=0.149 " + "l1=0" + "l2=0.149 f=-0.233 shape=(1, 9000, 1)
logits [[-0.22886077 -0.22663791 -0.22890918 -0.24800631]]
Iteration 900 of 1000: loss=0.145 " + "l1=0" + "l2=0.145 f=-0.233 shape=(1, 9000, 1)
logits [[-0.2382769  -0.2297891  -0.23224428 -0.23168215]]
--- 303.9683973789215 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00719 " + "l1=0.00719" + "l2=0 f=-0.394 shape=(1, 9000, 1)
logits [[ 1.9934118 -2.3920853  1.2746047 -2.449987 ]]
Iteration 100 of 1000: loss=0.00701 " + "l1=0.00684" + "l2=0.000167 f=-0.394 shape=(1, 9000, 1)
logits [[ 1.9642236 -2.4007916  1.2803282 -2.4215646]]
Iteration 200 of 1000: loss=0.00695 " + "l1=0.0068" + "l2=0.000143 f=-0.395 shape=(1, 9000, 1)
logits [[ 1.9614822 -2.4022727  1.281211  -2.4192107]]
Iteration 300 of 1000: loss=0.00691 " + "l1=0.00674" + "l2=0.00017 f=-0.395 shape=(1, 9000, 1)
logits [[ 1.9564018 -2.403837   1.282156  -2.4145777]]
Iteration 400 of 1000: loss=0.0069 " + "l1=0.00668" + "l2=0.000223 f=-0.395 shape=(1, 9000, 1)
logits [[ 1.9508301 -2.4052837  1.2830116 -2.4095957]]
Iteration 500 of 1000: loss=0.00687 " + "l1=0.00661" + "l2=0.000251 f=-0.396 shape=(1, 9000, 1)
logits [[ 1.9452271 -2.4065275  1.2838166 -2.4046347]]
Iteration 600 of 1000: loss=0.00693 " + "l1=0.00655" + "l2=0.000386 f=-0.396 shape=(1, 9000, 1)
logits [[ 1.9394426 -2.407654   1.2846541 -2.399569 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0719 " + "l1=0.0719" + "l2=0 f=-0.394 shape=(1, 9000, 1)
logits [[ 1.9934118 -2.3920853  1.2746047 -2.449987 ]]
Iteration 100 of 1000: loss=0.0519 " + "l1=0.039" + "l2=0.013 f=-0.401 shape=(1, 9000, 1)
logits [[ 1.730806  -2.474258   1.3411862 -2.2013237]]
Iteration 200 of 1000: loss=0.0411 " + "l1=0.0214" + "l2=0.0197 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.5927858 -2.5120373  1.3788167 -2.0670445]]
Iteration 300 of 1000: loss=0.031 " + "l1=0.00685" + "l2=0.0241 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.4769276 -2.5392237  1.4084668 -1.9561691]]
Iteration 400 of 1000: loss=0.0228 " + "l1=0.000174" + "l2=0.0226 f=-0.403 shape=(1, 9000, 1)
logits [[ 1.4276509 -2.5546172  1.4259127 -1.9112879]]
Iteration 500 of 1000: loss=0.0186 " + "l1=0" + "l2=0.0186 f=-0.403 shape=(1, 9000, 1)
logits [[ 1.426637  -2.5588014  1.4290864 -1.9090486]]
Iteration 600 of 1000: loss=0.016 " + "l1=0" + "l2=0.016 f=-0.401 shape=(1, 9000, 1)
logits [[ 1.4270338 -2.5558133  1.428961  -1.905779 ]]
Iteration 700 of 1000: loss=0.0139 " + "l1=0" + "l2=0.0139 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.4261838 -2.5526135  1.4287118 -1.9026899]]
Iteration 800 of 1000: loss=0.0129 " + "l1=0" + "l2=0.0129 f=-0.399 shape=(1, 9000, 1)
logits [[ 1.4216007 -2.5489213  1.4285262 -1.8961567]]
Iteration 900 of 1000: loss=0.0118 " + "l1=0" + "l2=0.0118 f=-0.397 shape=(1, 9000, 1)
logits [[ 1.4196888 -2.5447242  1.4275327 -1.8919551]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0395 " + "l1=0.0395" + "l2=0 f=-0.394 shape=(1, 9000, 1)
logits [[ 1.9934118 -2.3920853  1.2746047 -2.449987 ]]
Iteration 100 of 1000: loss=0.034 " + "l1=0.0306" + "l2=0.00337 f=-0.398 shape=(1, 9000, 1)
logits [[ 1.8620698 -2.4318993  1.3053528 -2.3258932]]
Iteration 200 of 1000: loss=0.0316 " + "l1=0.0271" + "l2=0.00453 f=-0.399 shape=(1, 9000, 1)
logits [[ 1.8069977 -2.4440465  1.314609  -2.2723253]]
Iteration 300 of 1000: loss=0.0292 " + "l1=0.0234" + "l2=0.00583 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.7497101 -2.4560854  1.3248231 -2.2168043]]
Iteration 400 of 1000: loss=0.0267 " + "l1=0.0195" + "l2=0.00722 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.6928964 -2.4726334  1.3389615 -2.1603014]]
Iteration 500 of 1000: loss=0.0242 " + "l1=0.0156" + "l2=0.00859 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.6392304 -2.488625   1.3549407 -2.1062725]]
Iteration 600 of 1000: loss=0.0219 " + "l1=0.0118" + "l2=0.0101 f=-0.401 shape=(1, 9000, 1)
logits [[ 1.5873462 -2.504458   1.3725214 -2.0584543]]
Iteration 700 of 1000: loss=0.0196 " + "l1=0.00833" + "l2=0.0113 f=-0.401 shape=(1, 9000, 1)
logits [[ 1.5396576 -2.5192602  1.3882812 -2.0145793]]
Iteration 800 of 1000: loss=0.0174 " + "l1=0.00486" + "l2=0.0125 f=-0.402 shape=(1, 9000, 1)
logits [[ 1.4968753 -2.536817   1.4085137 -1.9748602]]
Iteration 900 of 1000: loss=0.0152 " + "l1=0.00169" + "l2=0.0135 f=-0.401 shape=(1, 9000, 1)
logits [[ 1.4528015 -2.545751   1.4221649 -1.9323486]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0234 " + "l1=0.0234" + "l2=0 f=-0.394 shape=(1, 9000, 1)
logits [[ 1.9934118 -2.3920853  1.2746047 -2.449987 ]]
Iteration 100 of 1000: loss=0.0215 " + "l1=0.0203" + "l2=0.00116 f=-0.396 shape=(1, 9000, 1)
logits [[ 1.9174482 -2.4173245  1.2927121 -2.3770037]]
Iteration 200 of 1000: loss=0.0208 " + "l1=0.0194" + "l2=0.00143 f=-0.397 shape=(1, 9000, 1)
logits [[ 1.8935975 -2.422824   1.2971387 -2.3542428]]
Iteration 300 of 1000: loss=0.0201 " + "l1=0.0183" + "l2=0.00178 f=-0.398 shape=(1, 9000, 1)
logits [[ 1.8643767 -2.4275045  1.3003378 -2.3272316]]
Iteration 400 of 1000: loss=0.0194 " + "l1=0.0173" + "l2=0.00216 f=-0.398 shape=(1, 9000, 1)
logits [[ 1.8354098 -2.4330277  1.3037275 -2.300087 ]]
Iteration 500 of 1000: loss=0.0188 " + "l1=0.0162" + "l2=0.00256 f=-0.399 shape=(1, 9000, 1)
logits [[ 1.8079122 -2.4383523  1.3079413 -2.2736259]]
Iteration 600 of 1000: loss=0.0182 " + "l1=0.0152" + "l2=0.00298 f=-0.399 shape=(1, 9000, 1)
logits [[ 1.781404  -2.4427981  1.3133674 -2.2478821]]
Iteration 700 of 1000: loss=0.0176 " + "l1=0.0141" + "l2=0.00352 f=-0.399 shape=(1, 9000, 1)
logits [[ 1.7533295 -2.4496942  1.3204483 -2.2206435]]
Iteration 800 of 1000: loss=0.017 " + "l1=0.013" + "l2=0.00399 f=-0.399 shape=(1, 9000, 1)
logits [[ 1.7269393 -2.4552526  1.326985  -2.1947403]]
Iteration 900 of 1000: loss=0.0164 " + "l1=0.0121" + "l2=0.00436 f=-0.399 shape=(1, 9000, 1)
logits [[ 1.7038159 -2.4596827  1.3328986 -2.171559 ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0314 " + "l1=0.0314" + "l2=0 f=-0.394 shape=(1, 9000, 1)
logits [[ 1.9934118 -2.3920853  1.2746047 -2.449987 ]]
Iteration 100 of 1000: loss=0.028 " + "l1=0.0259" + "l2=0.00208 f=-0.397 shape=(1, 9000, 1)
logits [[ 1.8918446 -2.4249597  1.2994266 -2.3531752]]
Iteration 200 of 1000: loss=0.0266 " + "l1=0.0239" + "l2=0.00271 f=-0.398 shape=(1, 9000, 1)
logits [[ 1.8521907 -2.4331203  1.3054287 -2.315756 ]]
Iteration 300 of 1000: loss=0.0252 " + "l1=0.0218" + "l2=0.00343 f=-0.399 shape=(1, 9000, 1)
logits [[ 1.8094978 -2.4418225  1.3114592 -2.2749677]]
Iteration 400 of 1000: loss=0.0238 " + "l1=0.0197" + "l2=0.00412 f=-0.399 shape=(1, 9000, 1)
logits [[ 1.769169  -2.4492857  1.3187191 -2.235629 ]]
Iteration 500 of 1000: loss=0.0225 " + "l1=0.0176" + "l2=0.00491 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.7293997 -2.4603167  1.3280883 -2.1967819]]
Iteration 600 of 1000: loss=0.0211 " + "l1=0.0153" + "l2=0.00582 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.687639  -2.4711099  1.339034  -2.1540906]]
Iteration 700 of 1000: loss=0.0199 " + "l1=0.0131" + "l2=0.00673 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.6487502 -2.4806874  1.3486813 -2.115949 ]]
Iteration 800 of 1000: loss=0.0186 " + "l1=0.0112" + "l2=0.00744 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.6149682 -2.4900203  1.3593173 -2.0844083]]
Iteration 900 of 1000: loss=0.0174 " + "l1=0.00905" + "l2=0.00839 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.5793558 -2.5010686  1.3724365 -2.0510266]]
--- 282.64574360847473 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0444 " + "l1=0.0444" + "l2=0 f=-0.394 shape=(1, 9000, 1)
logits [[ 1.9934118 -2.3920853  1.2746047 -2.449987 ]]
Iteration 100 of 1000: loss=0.0434 " + "l1=0.0427" + "l2=0.000641 f=-0.389 shape=(1, 9000, 1)
logits [[ 1.9199164 -2.3709612  1.2482295 -2.353877 ]]
Iteration 200 of 1000: loss=0.043 " + "l1=0.0423" + "l2=0.00073 f=-0.389 shape=(1, 9000, 1)
logits [[ 1.8995376 -2.3660586  1.2401625 -2.3277278]]
Iteration 300 of 1000: loss=0.0426 " + "l1=0.0417" + "l2=0.000924 f=-0.388 shape=(1, 9000, 1)
logits [[ 1.8753643 -2.3596973  1.2304543 -2.2972069]]
Iteration 400 of 1000: loss=0.0423 " + "l1=0.0412" + "l2=0.00114 f=-0.387 shape=(1, 9000, 1)
logits [[ 1.8513781 -2.353505   1.2210423 -2.2673943]]
Iteration 500 of 1000: loss=0.042 " + "l1=0.0406" + "l2=0.00136 f=-0.386 shape=(1, 9000, 1)
logits [[ 1.8262393 -2.3466372  1.2111615 -2.2364497]]
Iteration 600 of 1000: loss=0.0417 " + "l1=0.0401" + "l2=0.00162 f=-0.386 shape=(1, 9000, 1)
logits [[ 1.8030229 -2.340577   1.2027506 -2.2079227]]
Iteration 700 of 1000: loss=0.0415 " + "l1=0.0396" + "l2=0.00186 f=-0.385 shape=(1, 9000, 1)
logits [[ 1.7807345 -2.334284   1.1948164 -2.1806023]]
Iteration 800 of 1000: loss=0.0413 " + "l1=0.0392" + "l2=0.00213 f=-0.384 shape=(1, 9000, 1)
logits [[ 1.7605717 -2.328095   1.1870285 -2.1563585]]
Iteration 900 of 1000: loss=0.0412 " + "l1=0.0387" + "l2=0.00246 f=-0.384 shape=(1, 9000, 1)
logits [[ 1.7408137 -2.3223658  1.1791406 -2.1322415]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.444 " + "l1=0.444" + "l2=0 f=-0.394 shape=(1, 9000, 1)
logits [[ 1.9934118 -2.3920853  1.2746047 -2.449987 ]]
Iteration 100 of 1000: loss=0.325 " + "l1=0.253" + "l2=0.0718 f=-0.357 shape=(1, 9000, 1)
logits [[ 1.1458904 -2.135615   0.9435249 -1.3835497]]
Iteration 200 of 1000: loss=0.252 " + "l1=0.144" + "l2=0.108 f=-0.334 shape=(1, 9000, 1)
logits [[ 0.6764698 -1.9327307  0.6779982 -0.7592838]]
Iteration 300 of 1000: loss=0.189 " + "l1=0.0697" + "l2=0.119 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.39409176 -1.7064439   0.39749187 -0.2994238 ]]
Iteration 400 of 1000: loss=0.131 " + "l1=0.0021" + "l2=0.129 f=-0.272 shape=(1, 9000, 1)
logits [[ 0.13775511 -1.5136551   0.15459694  0.13357812]]
Iteration 500 of 1000: loss=0.106 " + "l1=0" + "l2=0.106 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.13694717 -1.5134635   0.14713265  0.16033664]]
Iteration 600 of 1000: loss=0.0935 " + "l1=0" + "l2=0.0935 f=-0.264 shape=(1, 9000, 1)
logits [[ 0.12782523 -1.5093465   0.1606407   0.16295847]]
Iteration 700 of 1000: loss=0.0853 " + "l1=0.000271" + "l2=0.0851 f=-0.264 shape=(1, 9000, 1)
logits [[ 0.1216045  -1.5225768   0.17372914  0.17102063]]
Iteration 800 of 1000: loss=0.0801 " + "l1=0.00084" + "l2=0.0792 f=-0.264 shape=(1, 9000, 1)
logits [[ 0.11763068 -1.5369823   0.18609889  0.177703  ]]
Iteration 900 of 1000: loss=0.076 " + "l1=0" + "l2=0.076 f=-0.264 shape=(1, 9000, 1)
logits [[ 0.09953864 -1.5414528   0.18598838  0.20124948]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.244 " + "l1=0.244" + "l2=0 f=-0.394 shape=(1, 9000, 1)
logits [[ 1.9934118 -2.3920853  1.2746047 -2.449987 ]]
Iteration 100 of 1000: loss=0.212 " + "l1=0.193" + "l2=0.0188 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.5792472 -2.271814   1.1168653 -1.9252208]]
Iteration 200 of 1000: loss=0.193 " + "l1=0.165" + "l2=0.0277 f=-0.367 shape=(1, 9000, 1)
logits [[ 1.3551588 -2.1993902  1.02117   -1.6466194]]
Iteration 300 of 1000: loss=0.176 " + "l1=0.141" + "l2=0.0346 f=-0.36 shape=(1, 9000, 1)
logits [[ 1.1666098  -2.1315854   0.92961866 -1.4048645 ]]
Iteration 400 of 1000: loss=0.159 " + "l1=0.115" + "l2=0.0442 f=-0.351 shape=(1, 9000, 1)
logits [[ 0.95381236 -2.0406368   0.8149148  -1.1323063 ]]
Iteration 500 of 1000: loss=0.139 " + "l1=0.0843" + "l2=0.0542 f=-0.34 shape=(1, 9000, 1)
logits [[ 0.7118162  -1.9427153   0.6936677  -0.82169837]]
Iteration 600 of 1000: loss=0.12 " + "l1=0.0625" + "l2=0.0579 f=-0.321 shape=(1, 9000, 1)
logits [[ 0.5575723  -1.8182228   0.5564853  -0.57956606]]
Iteration 700 of 1000: loss=0.105 " + "l1=0.0419" + "l2=0.063 f=-0.298 shape=(1, 9000, 1)
logits [[ 0.4223083  -1.7066554   0.42786223 -0.3337404 ]]
Iteration 800 of 1000: loss=0.0938 " + "l1=0.0273" + "l2=0.0664 f=-0.289 shape=(1, 9000, 1)
logits [[ 0.31325713 -1.6633896   0.34651044 -0.15054846]]
Iteration 900 of 1000: loss=0.0857 " + "l1=0.0165" + "l2=0.0692 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.23106912 -1.6321048   0.28786662 -0.01155579]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.344 " + "l1=0.344" + "l2=0 f=-0.394 shape=(1, 9000, 1)
logits [[ 1.9934118 -2.3920853  1.2746047 -2.449987 ]]
Iteration 100 of 1000: loss=0.275 " + "l1=0.234" + "l2=0.0409 f=-0.365 shape=(1, 9000, 1)
logits [[ 1.3650285 -2.1990643  1.0280992 -1.6537504]]
Iteration 200 of 1000: loss=0.237 " + "l1=0.177" + "l2=0.0599 f=-0.357 shape=(1, 9000, 1)
logits [[ 1.032993   -2.0975301   0.88446206 -1.2470368 ]]
Iteration 300 of 1000: loss=0.194 " + "l1=0.115" + "l2=0.0797 f=-0.338 shape=(1, 9000, 1)
logits [[ 0.6893205  -1.9379822   0.68939453 -0.7908887 ]]
Iteration 400 of 1000: loss=0.157 " + "l1=0.0704" + "l2=0.0863 f=-0.314 shape=(1, 9000, 1)
logits [[ 0.4711763  -1.7661493   0.47337312 -0.43550098]]
Iteration 500 of 1000: loss=0.124 " + "l1=0.0309" + "l2=0.0927 f=-0.286 shape=(1, 9000, 1)
logits [[ 0.28314355 -1.5977521   0.28446442 -0.11456495]]
Iteration 600 of 1000: loss=0.101 " + "l1=0.00356" + "l2=0.097 f=-0.273 shape=(1, 9000, 1)
logits [[ 0.14157389 -1.5257957   0.16972417  0.12376789]]
Iteration 700 of 1000: loss=0.0891 " + "l1=0.000766" + "l2=0.0883 f=-0.27 shape=(1, 9000, 1)
logits [[ 0.11178383 -1.5160321   0.1680559   0.1581743 ]]
Iteration 800 of 1000: loss=0.0823 " + "l1=0.00114" + "l2=0.0811 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.10421748 -1.5203243   0.18366577  0.1688998 ]]
Iteration 900 of 1000: loss=0.076 " + "l1=9.73e-05" + "l2=0.0759 f=-0.264 shape=(1, 9000, 1)
logits [[ 0.10015425 -1.5308119   0.18856223  0.18730655]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.294 " + "l1=0.294" + "l2=0 f=-0.394 shape=(1, 9000, 1)
logits [[ 1.9934118 -2.3920853  1.2746047 -2.449987 ]]
Iteration 100 of 1000: loss=0.245 " + "l1=0.215" + "l2=0.0294 f=-0.371 shape=(1, 9000, 1)
logits [[ 1.4662497 -2.2343035  1.0697651 -1.7838722]]
Iteration 200 of 1000: loss=0.217 " + "l1=0.175" + "l2=0.042 f=-0.361 shape=(1, 9000, 1)
logits [[ 1.2008603  -2.151413    0.95487416 -1.4468032 ]]
Iteration 300 of 1000: loss=0.191 " + "l1=0.137" + "l2=0.0548 f=-0.352 shape=(1, 9000, 1)
logits [[ 0.9404116 -2.05109    0.8228797 -1.1211598]]
Iteration 400 of 1000: loss=0.161 " + "l1=0.0928" + "l2=0.0678 f=-0.336 shape=(1, 9000, 1)
logits [[ 0.6575692  -1.9135189   0.65645444 -0.74317414]]
Iteration 500 of 1000: loss=0.134 " + "l1=0.0609" + "l2=0.0729 f=-0.314 shape=(1, 9000, 1)
logits [[ 0.47398266 -1.7644945   0.4762281  -0.44269508]]
Iteration 600 of 1000: loss=0.11 " + "l1=0.0317" + "l2=0.0788 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.3144466  -1.6457349   0.32832912 -0.15022692]]
Iteration 700 of 1000: loss=0.0958 " + "l1=0.0134" + "l2=0.0824 f=-0.279 shape=(1, 9000, 1)
logits [[ 0.20272362 -1.5903673   0.23657615  0.03416603]]
Iteration 800 of 1000: loss=0.0842 " + "l1=0.000487" + "l2=0.0838 f=-0.27 shape=(1, 9000, 1)
logits [[ 0.10303415 -1.5526692   0.18881184  0.18145466]]
Iteration 900 of 1000: loss=0.0776 " + "l1=0.000162" + "l2=0.0774 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.09488125 -1.560384    0.19979852  0.19735825]]
--- 305.28808665275574 seconds ---
Adv result:3
Loading record A00208
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0735 " + "l1=0.0735" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.115478  -3.2332423  3.0302546 -5.7154226]]
Iteration 100 of 1000: loss=0.073 " + "l1=0.0725" + "l2=0.000417 f=-0.449 shape=(1, 9000, 1)
logits [[ 4.0702405 -3.1839762  2.9876842 -5.670016 ]]
Iteration 200 of 1000: loss=0.0728 " + "l1=0.0724" + "l2=0.000416 f=-0.449 shape=(1, 9000, 1)
logits [[ 4.0645003 -3.177271   2.981723  -5.664453 ]]
Iteration 300 of 1000: loss=0.0728 " + "l1=0.0723" + "l2=0.000493 f=-0.449 shape=(1, 9000, 1)
logits [[ 4.056572  -3.1694462  2.9751093 -5.656296 ]]
Iteration 400 of 1000: loss=0.0727 " + "l1=0.0721" + "l2=0.000551 f=-0.448 shape=(1, 9000, 1)
logits [[ 4.0483274 -3.1618469  2.9687648 -5.64752  ]]
Iteration 500 of 1000: loss=0.0726 " + "l1=0.0719" + "l2=0.000646 f=-0.448 shape=(1, 9000, 1)
logits [[ 4.040156  -3.1546009  2.9627163 -5.6386247]]
Iteration 600 of 1000: loss=0.0725 " + "l1=0.0718" + "l2=0.000743 f=-0.447 shape=(1, 9000, 1)
logits [[ 4.0321884 -3.1474457  2.9569793 -5.6299033]]
Iteration 700 of 1000: loss=0.0725 " + "l1=0.0717" + "l2=0.000877 f=-0.447 shape=(1, 9000, 1)
logits [[ 4.024556  -3.1406648  2.9517512 -5.621689 ]]
Iteration 800 of 1000: loss=0.0725 " + "l1=0.0715" + "l2=0.001 f=-0.446 shape=(1, 9000, 1)
logits [[ 4.0172205 -3.1343074  2.9468205 -5.613823 ]]
Iteration 900 of 1000: loss=0.0725 " + "l1=0.0714" + "l2=0.00111 f=-0.446 shape=(1, 9000, 1)
logits [[ 4.010086  -3.1283605  2.9422672 -5.606182 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.735 " + "l1=0.735" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.115478  -3.2332423  3.0302546 -5.7154226]]
Iteration 100 of 1000: loss=0.671 " + "l1=0.627" + "l2=0.044 f=-0.435 shape=(1, 9000, 1)
logits [[ 3.6653485 -2.601458   2.504908  -5.308037 ]]
Iteration 200 of 1000: loss=0.645 " + "l1=0.583" + "l2=0.0616 f=-0.427 shape=(1, 9000, 1)
logits [[ 3.4785538 -2.356149   2.308132  -5.139048 ]]
Iteration 300 of 1000: loss=0.621 " + "l1=0.549" + "l2=0.0723 f=-0.42 shape=(1, 9000, 1)
logits [[ 3.3170047 -2.1734593  2.1585557 -4.9820886]]
Iteration 400 of 1000: loss=0.592 " + "l1=0.513" + "l2=0.0798 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.1515353 -1.974125   1.9968746 -4.833044 ]]
Iteration 500 of 1000: loss=0.569 " + "l1=0.481" + "l2=0.0879 f=-0.413 shape=(1, 9000, 1)
logits [[ 2.993176  -1.817537   1.8733375 -4.6998363]]
Iteration 600 of 1000: loss=0.554 " + "l1=0.456" + "l2=0.0983 f=-0.413 shape=(1, 9000, 1)
logits [[ 2.8516352 -1.7071035  1.7865081 -4.5810556]]
Iteration 700 of 1000: loss=0.538 " + "l1=0.43" + "l2=0.108 f=-0.413 shape=(1, 9000, 1)
logits [[ 2.6948745 -1.6028781  1.7033644 -4.4487348]]
Iteration 800 of 1000: loss=0.517 " + "l1=0.392" + "l2=0.125 f=-0.419 shape=(1, 9000, 1)
logits [[ 2.4582696 -1.4630362  1.5914842 -4.263547 ]]
Iteration 900 of 1000: loss=0.494 " + "l1=0.353" + "l2=0.141 f=-0.425 shape=(1, 9000, 1)
logits [[ 2.2159317 -1.314379   1.4931581 -4.094577 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.35 " + "l1=7.35" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.115478  -3.2332423  3.0302546 -5.7154226]]
Iteration 100 of 1000: loss=2.05 " + "l1=0.122" + "l2=1.93 f=-0.432 shape=(1, 9000, 1)
logits [[ 0.4721606   0.3959902   0.51785606 -3.1135137 ]]
Iteration 200 of 1000: loss=1.47 " + "l1=0.0323" + "l2=1.44 f=-0.441 shape=(1, 9000, 1)
logits [[ 0.4605326   0.44346994  0.47573206 -3.1422994 ]]
Iteration 300 of 1000: loss=1.25 " + "l1=0.00882" + "l2=1.24 f=-0.441 shape=(1, 9000, 1)
logits [[ 0.40781495  0.4441409   0.4529618  -3.0708618 ]]
Iteration 400 of 1000: loss=1.12 " + "l1=0" + "l2=1.12 f=-0.429 shape=(1, 9000, 1)
logits [[ 0.4123598   0.4271499   0.42386085 -2.9799323 ]]
Iteration 500 of 1000: loss=1.05 " + "l1=0.00693" + "l2=1.04 f=-0.419 shape=(1, 9000, 1)
logits [[ 0.37946132  0.40839428  0.41532162 -2.8776007 ]]
Iteration 600 of 1000: loss=0.975 " + "l1=0" + "l2=0.975 f=-0.411 shape=(1, 9000, 1)
logits [[ 0.35306114  0.4000992   0.3960377  -2.793228  ]]
Iteration 700 of 1000: loss=0.887 " + "l1=0" + "l2=0.887 f=-0.402 shape=(1, 9000, 1)
logits [[ 0.36244377  0.3752132   0.37311867 -2.7206926 ]]
Iteration 800 of 1000: loss=0.826 " + "l1=0" + "l2=0.826 f=-0.4 shape=(1, 9000, 1)
logits [[ 0.32447568  0.36242408  0.35204577 -2.6383197 ]]
Iteration 900 of 1000: loss=0.778 " + "l1=0" + "l2=0.778 f=-0.394 shape=(1, 9000, 1)
logits [[ 0.29509565  0.35101575  0.33437708 -2.5553603 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.04 " + "l1=4.04" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.115478  -3.2332423  3.0302546 -5.7154226]]
Iteration 100 of 1000: loss=2.03 " + "l1=0.78" + "l2=1.25 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.098264   -0.31907517  0.93407506 -3.5933857 ]]
Iteration 200 of 1000: loss=1.4 " + "l1=0.228" + "l2=1.17 f=-0.453 shape=(1, 9000, 1)
logits [[ 0.6338959   0.23131983  0.64574593 -3.3228061 ]]
Iteration 300 of 1000: loss=1.13 " + "l1=0.0944" + "l2=1.04 f=-0.419 shape=(1, 9000, 1)
logits [[ 0.528002    0.36923113  0.54090095 -3.1136656 ]]
Iteration 400 of 1000: loss=0.952 " + "l1=0.0236" + "l2=0.929 f=-0.392 shape=(1, 9000, 1)
logits [[ 0.45781842  0.41492113  0.45480034 -2.893721  ]]
Iteration 500 of 1000: loss=0.865 " + "l1=0.00678" + "l2=0.858 f=-0.379 shape=(1, 9000, 1)
logits [[ 0.4215122   0.4095201   0.42185628 -2.770713  ]]
Iteration 600 of 1000: loss=0.809 " + "l1=0.0133" + "l2=0.795 f=-0.377 shape=(1, 9000, 1)
logits [[ 0.3802687   0.3894027   0.41367453 -2.6901977 ]]
Iteration 700 of 1000: loss=0.763 " + "l1=0.00605" + "l2=0.757 f=-0.375 shape=(1, 9000, 1)
logits [[ 0.36441427  0.36389205  0.37489873 -2.6035519 ]]
Iteration 800 of 1000: loss=0.724 " + "l1=0.00247" + "l2=0.721 f=-0.381 shape=(1, 9000, 1)
logits [[ 0.30885223  0.35174307  0.3562388  -2.542308  ]]
Iteration 900 of 1000: loss=0.692 " + "l1=0.00354" + "l2=0.688 f=-0.38 shape=(1, 9000, 1)
logits [[ 0.31891337  0.33964458  0.34607416 -2.5242186 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.39 " + "l1=2.39" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.115478  -3.2332423  3.0302546 -5.7154226]]
Iteration 100 of 1000: loss=1.67 " + "l1=1.21" + "l2=0.463 f=-0.43 shape=(1, 9000, 1)
logits [[ 2.4324384 -1.2806659  1.4707451 -4.3429728]]
Iteration 200 of 1000: loss=1.45 " + "l1=0.909" + "l2=0.543 f=-0.433 shape=(1, 9000, 1)
logits [[ 1.9096397  -0.88681734  1.2243665  -3.9802182 ]]
Iteration 300 of 1000: loss=1.16 " + "l1=0.419" + "l2=0.742 f=-0.446 shape=(1, 9000, 1)
logits [[ 0.9516037 -0.3384012  0.9445562 -3.3401573]]
Iteration 400 of 1000: loss=0.967 " + "l1=0.323" + "l2=0.644 f=-0.43 shape=(1, 9000, 1)
logits [[ 0.7971852  -0.18172567  0.81235    -3.1476007 ]]
Iteration 500 of 1000: loss=0.83 " + "l1=0.265" + "l2=0.565 f=-0.413 shape=(1, 9000, 1)
logits [[ 0.73215884 -0.08287473  0.7291434  -3.0322921 ]]
Iteration 600 of 1000: loss=0.737 " + "l1=0.211" + "l2=0.526 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.6558088   0.00947427  0.65888715 -2.936611  ]]
Iteration 700 of 1000: loss=0.69 " + "l1=0.174" + "l2=0.516 f=-0.395 shape=(1, 9000, 1)
logits [[ 0.59591156  0.06955922  0.6036632  -2.847648  ]]
Iteration 800 of 1000: loss=0.644 " + "l1=0.131" + "l2=0.513 f=-0.388 shape=(1, 9000, 1)
logits [[ 0.54194397  0.15002362  0.5517891  -2.7967255 ]]
Iteration 900 of 1000: loss=0.61 " + "l1=0.0951" + "l2=0.515 f=-0.387 shape=(1, 9000, 1)
logits [[ 0.47353518  0.21506585  0.50756687 -2.7460737 ]]
--- 307.4256908893585 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0109 " + "l1=0.0109" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.115478  -3.2332423  3.0302546 -5.7154226]]
Iteration 100 of 1000: loss=0.0106 " + "l1=0.0104" + "l2=0.000217 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.0903907 -3.2529285  3.0481365 -5.6907115]]
Iteration 200 of 1000: loss=0.0106 " + "l1=0.0104" + "l2=0.000188 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.0886855 -3.254295   3.0489259 -5.6892705]]
Iteration 300 of 1000: loss=0.0106 " + "l1=0.0103" + "l2=0.000232 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.0847144 -3.2562823  3.0505204 -5.6856995]]
Iteration 400 of 1000: loss=0.0105 " + "l1=0.0103" + "l2=0.000266 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.08039   -3.2583072  3.052231  -5.6818085]]
Iteration 500 of 1000: loss=0.0106 " + "l1=0.0102" + "l2=0.000335 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.0759506 -3.2601812  3.0539005 -5.677803 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.109 " + "l1=0.109" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.115478  -3.2332423  3.0302546 -5.7154226]]
Iteration 100 of 1000: loss=0.0892 " + "l1=0.0783" + "l2=0.011 f=-0.452 shape=(1, 9000, 1)
logits [[ 3.939001  -3.3722801  3.1564207 -5.5307126]]
Iteration 200 of 1000: loss=0.0835 " + "l1=0.0694" + "l2=0.0141 f=-0.451 shape=(1, 9000, 1)
logits [[ 3.8816426 -3.4021294  3.1872642 -5.4727716]]
Iteration 300 of 1000: loss=0.0786 " + "l1=0.0618" + "l2=0.0168 f=-0.451 shape=(1, 9000, 1)
logits [[ 3.8286421 -3.4220145  3.2103572 -5.4207215]]
Iteration 400 of 1000: loss=0.0736 " + "l1=0.0545" + "l2=0.0191 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.772826  -3.4314132  3.2275975 -5.3692846]]
Iteration 500 of 1000: loss=0.0688 " + "l1=0.048" + "l2=0.0209 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.720827  -3.436181   3.2411816 -5.321175 ]]
Iteration 600 of 1000: loss=0.0645 " + "l1=0.0418" + "l2=0.0228 f=-0.448 shape=(1, 9000, 1)
logits [[ 3.6704774 -3.4367437  3.2526042 -5.276465 ]]
Iteration 700 of 1000: loss=0.06 " + "l1=0.0351" + "l2=0.0249 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.6183074 -3.439813   3.26719   -5.232544 ]]
Iteration 800 of 1000: loss=0.0557 " + "l1=0.0292" + "l2=0.0266 f=-0.446 shape=(1, 9000, 1)
logits [[ 3.576654  -3.448176   3.2851524 -5.1989784]]
Iteration 900 of 1000: loss=0.0519 " + "l1=0.0237" + "l2=0.0283 f=-0.446 shape=(1, 9000, 1)
logits [[ 3.5335062 -3.4508505  3.2969952 -5.1631656]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.09 " + "l1=1.09" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.115478  -3.2332423  3.0302546 -5.7154226]]
Iteration 100 of 1000: loss=0.148 " + "l1=0" + "l2=0.148 f=-0.446 shape=(1, 9000, 1)
logits [[ 3.3837414 -3.582008   3.3856075 -4.971836 ]]
Iteration 200 of 1000: loss=0.111 " + "l1=0" + "l2=0.111 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.3784935 -3.5785542  3.3891084 -4.988161 ]]
Iteration 300 of 1000: loss=0.0863 " + "l1=0" + "l2=0.0863 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.3905737 -3.5690212  3.391204  -5.0145917]]
Iteration 400 of 1000: loss=0.0764 " + "l1=0" + "l2=0.0764 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.363125  -3.5556736  3.391415  -5.0002766]]
Iteration 500 of 1000: loss=0.0609 " + "l1=3.08e-05" + "l2=0.0608 f=-0.451 shape=(1, 9000, 1)
logits [[ 3.3699489 -3.5238924  3.369918  -5.01828  ]]
Iteration 600 of 1000: loss=0.0532 " + "l1=0" + "l2=0.0532 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.3561149 -3.502756   3.360263  -5.0127144]]
Iteration 700 of 1000: loss=0.0494 " + "l1=0" + "l2=0.0494 f=-0.448 shape=(1, 9000, 1)
logits [[ 3.3393922 -3.4847314  3.3548632 -5.0034275]]
Iteration 800 of 1000: loss=0.0444 " + "l1=0" + "l2=0.0444 f=-0.448 shape=(1, 9000, 1)
logits [[ 3.3376286 -3.4660354  3.3462906 -5.0094423]]
Iteration 900 of 1000: loss=0.0403 " + "l1=0" + "l2=0.0403 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.337327  -3.449415   3.3386006 -5.0149274]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.597 " + "l1=0.597" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.115478  -3.2332423  3.0302546 -5.7154226]]
Iteration 100 of 1000: loss=0.145 " + "l1=0.00174" + "l2=0.143 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.3844075 -3.5823884  3.381239  -4.971987 ]]
Iteration 200 of 1000: loss=0.104 " + "l1=0.00149" + "l2=0.102 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.382984  -3.5706904  3.3802822 -4.99348  ]]
Iteration 300 of 1000: loss=0.0811 " + "l1=0.00195" + "l2=0.0792 f=-0.451 shape=(1, 9000, 1)
logits [[ 3.3835    -3.5553186  3.37996   -5.0127034]]
Iteration 400 of 1000: loss=0.067 " + "l1=0" + "l2=0.067 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.3666284 -3.5353801  3.375619  -5.0065675]]
Iteration 500 of 1000: loss=0.0563 " + "l1=0" + "l2=0.0563 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.3553078 -3.5045652  3.3580382 -5.0043554]]
Iteration 600 of 1000: loss=0.0502 " + "l1=0" + "l2=0.0502 f=-0.448 shape=(1, 9000, 1)
logits [[ 3.3423555 -3.4849877  3.3508043 -4.998793 ]]
Iteration 700 of 1000: loss=0.0457 " + "l1=0" + "l2=0.0457 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.3361478 -3.4708173  3.3489923 -5.0030627]]
Iteration 800 of 1000: loss=0.042 " + "l1=0" + "l2=0.042 f=-0.446 shape=(1, 9000, 1)
logits [[ 3.3293173 -3.451694   3.3423035 -5.004782 ]]
Iteration 900 of 1000: loss=0.0383 " + "l1=0" + "l2=0.0383 f=-0.445 shape=(1, 9000, 1)
logits [[ 3.3291512 -3.4352698  3.3378565 -5.0101185]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.353 " + "l1=0.353" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.115478  -3.2332423  3.0302546 -5.7154226]]
Iteration 100 of 1000: loss=0.161 " + "l1=0.0478" + "l2=0.113 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.502773  -3.5640922  3.3555844 -5.083644 ]]
Iteration 200 of 1000: loss=0.106 " + "l1=0.00171" + "l2=0.104 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.380691 -3.566389  3.375427 -4.988343]]
Iteration 300 of 1000: loss=0.0804 " + "l1=0" + "l2=0.0804 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.3694944 -3.5485985  3.3770337 -4.997616 ]]
Iteration 400 of 1000: loss=0.0649 " + "l1=0" + "l2=0.0649 f=-0.448 shape=(1, 9000, 1)
logits [[ 3.359468  -3.5224705  3.368901  -4.9973717]]
Iteration 500 of 1000: loss=0.0541 " + "l1=0" + "l2=0.0541 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.3509145 -3.4927447  3.3531008 -4.9985614]]
Iteration 600 of 1000: loss=0.0469 " + "l1=0" + "l2=0.0469 f=-0.446 shape=(1, 9000, 1)
logits [[ 3.3454106 -3.4718428  3.3461368 -5.003595 ]]
Iteration 700 of 1000: loss=0.0421 " + "l1=0.000851" + "l2=0.0413 f=-0.444 shape=(1, 9000, 1)
logits [[ 3.3430865 -3.4511762  3.340467  -5.010334 ]]
Iteration 800 of 1000: loss=0.038 " + "l1=0" + "l2=0.038 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.3405044 -3.440205   3.3425467 -5.0159073]]
Iteration 900 of 1000: loss=0.0366 " + "l1=0" + "l2=0.0366 f=-0.442 shape=(1, 9000, 1)
logits [[ 3.3331733 -3.4328995  3.3483183 -5.015127 ]]
--- 278.2016441822052 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0983 " + "l1=0.0983" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.115478  -3.2332423  3.0302546 -5.7154226]]
Iteration 100 of 1000: loss=0.0974 " + "l1=0.0968" + "l2=0.000618 f=-0.448 shape=(1, 9000, 1)
logits [[ 4.0499988 -3.2173095  3.0067809 -5.630169 ]]
Iteration 200 of 1000: loss=0.0972 " + "l1=0.0965" + "l2=0.000646 f=-0.447 shape=(1, 9000, 1)
logits [[ 4.037805  -3.2148542  3.002943  -5.6151605]]
Iteration 300 of 1000: loss=0.097 " + "l1=0.0962" + "l2=0.000754 f=-0.447 shape=(1, 9000, 1)
logits [[ 4.023826  -3.2106187  2.9976907 -5.5974383]]
Iteration 400 of 1000: loss=0.0968 " + "l1=0.0959" + "l2=0.000879 f=-0.446 shape=(1, 9000, 1)
logits [[ 4.009947  -3.2062554  2.992452  -5.579578 ]]
Iteration 500 of 1000: loss=0.0966 " + "l1=0.0956" + "l2=0.00102 f=-0.445 shape=(1, 9000, 1)
logits [[ 3.9965153 -3.2019563  2.9874516 -5.562122 ]]
Iteration 600 of 1000: loss=0.0965 " + "l1=0.0953" + "l2=0.00122 f=-0.444 shape=(1, 9000, 1)
logits [[ 3.9837337 -3.1979678  2.9829214 -5.5455127]]
Iteration 700 of 1000: loss=0.0963 " + "l1=0.0951" + "l2=0.00127 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.973812  -3.194112   2.9789252 -5.532378 ]]
Iteration 800 of 1000: loss=0.0963 " + "l1=0.0948" + "l2=0.00144 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.9636254 -3.1903453  2.9749792 -5.519233 ]]
Iteration 900 of 1000: loss=0.0962 " + "l1=0.0946" + "l2=0.00162 f=-0.442 shape=(1, 9000, 1)
logits [[ 3.9534907 -3.1868353  2.9713051 -5.5061145]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.983 " + "l1=0.983" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.115478  -3.2332423  3.0302546 -5.7154226]]
Iteration 100 of 1000: loss=0.901 " + "l1=0.85" + "l2=0.0509 f=-0.418 shape=(1, 9000, 1)
logits [[ 3.53256   -3.0209146  2.7822452 -4.9642496]]
Iteration 200 of 1000: loss=0.866 " + "l1=0.793" + "l2=0.0726 f=-0.407 shape=(1, 9000, 1)
logits [[ 3.2745557 -2.9044178  2.6601615 -4.656701 ]]
Iteration 300 of 1000: loss=0.834 " + "l1=0.751" + "l2=0.0832 f=-0.394 shape=(1, 9000, 1)
logits [[ 3.0818622 -2.7997239  2.5670195 -4.427086 ]]
Iteration 400 of 1000: loss=0.803 " + "l1=0.707" + "l2=0.0956 f=-0.383 shape=(1, 9000, 1)
logits [[ 2.8810425 -2.6992352  2.4735332 -4.188618 ]]
Iteration 500 of 1000: loss=0.772 " + "l1=0.662" + "l2=0.11 f=-0.373 shape=(1, 9000, 1)
logits [[ 2.6790113 -2.6250303  2.392826  -3.9370363]]
Iteration 600 of 1000: loss=0.738 " + "l1=0.612" + "l2=0.126 f=-0.362 shape=(1, 9000, 1)
logits [[ 2.454644  -2.5427923  2.3061345 -3.6672392]]
Iteration 700 of 1000: loss=0.7 " + "l1=0.558" + "l2=0.142 f=-0.348 shape=(1, 9000, 1)
logits [[ 2.2063177 -2.430099   2.2030785 -3.3721852]]
Iteration 800 of 1000: loss=0.666 " + "l1=0.52" + "l2=0.146 f=-0.341 shape=(1, 9000, 1)
logits [[ 2.030136  -2.2571423  2.030552  -3.1689084]]
Iteration 900 of 1000: loss=0.634 " + "l1=0.482" + "l2=0.151 f=-0.338 shape=(1, 9000, 1)
logits [[ 1.8463961 -2.0708642  1.8479006 -2.9769237]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.83 " + "l1=9.83" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.115478  -3.2332423  3.0302546 -5.7154226]]
Iteration 100 of 1000: loss=4.32 " + "l1=1.88" + "l2=2.43 f=-0.209 shape=(1, 9000, 1)
logits [[ 0.57585347 -0.73744905  0.604109   -1.2794511 ]]
Iteration 200 of 1000: loss=2.77 " + "l1=0.00486" + "l2=2.77 f=-0.148 shape=(1, 9000, 1)
logits [[-0.20561859 -0.49655098  0.0582336   0.0533754 ]]
Iteration 300 of 1000: loss=2.08 " + "l1=0" + "l2=2.08 f=-0.143 shape=(1, 9000, 1)
logits [[-0.17062287 -0.57721275  0.08049472  0.09359124]]
Iteration 400 of 1000: loss=1.78 " + "l1=0.000217" + "l2=1.78 f=-0.136 shape=(1, 9000, 1)
logits [[-0.1231105  -0.65958923  0.11939684  0.11917978]]
Iteration 500 of 1000: loss=1.58 " + "l1=0.0321" + "l2=1.55 f=-0.149 shape=(1, 9000, 1)
logits [[-0.13238007 -0.68531096  0.1269898   0.09484237]]
Iteration 600 of 1000: loss=1.41 " + "l1=0" + "l2=1.41 f=-0.157 shape=(1, 9000, 1)
logits [[-0.15893342 -0.71828634  0.12276584  0.12737975]]
Iteration 700 of 1000: loss=1.32 " + "l1=0" + "l2=1.32 f=-0.155 shape=(1, 9000, 1)
logits [[-0.14294975 -0.74401075  0.13215981  0.13407627]]
Iteration 800 of 1000: loss=1.26 " + "l1=0.00565" + "l2=1.25 f=-0.156 shape=(1, 9000, 1)
logits [[-0.13769092 -0.7642819   0.14247422  0.13682207]]
Iteration 900 of 1000: loss=1.2 " + "l1=0" + "l2=1.2 f=-0.151 shape=(1, 9000, 1)
logits [[-0.14648947 -0.77390003  0.14033358  0.17618322]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.41 " + "l1=5.41" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.115478  -3.2332423  3.0302546 -5.7154226]]
Iteration 100 of 1000: loss=3.28 " + "l1=2.23" + "l2=1.06 f=-0.302 shape=(1, 9000, 1)
logits [[ 1.5143175 -1.7086064  1.517129  -2.5301278]]
Iteration 200 of 1000: loss=2.65 " + "l1=1.5" + "l2=1.15 f=-0.251 shape=(1, 9000, 1)
logits [[ 0.9513517 -1.1795931  0.9741326 -1.7512075]]
Iteration 300 of 1000: loss=2.05 " + "l1=0.818" + "l2=1.23 f=-0.17 shape=(1, 9000, 1)
logits [[ 0.5141761  -0.96521544  0.63029945 -0.8577177 ]]
Iteration 400 of 1000: loss=1.56 " + "l1=0.187" + "l2=1.38 f=-0.121 shape=(1, 9000, 1)
logits [[-0.08574294 -0.73430306  0.33757588 -0.0033103 ]]
Iteration 500 of 1000: loss=1.29 " + "l1=0" + "l2=1.29 f=-0.118 shape=(1, 9000, 1)
logits [[-0.24409032 -0.7472885   0.26020983  0.26044214]]
Iteration 600 of 1000: loss=1.13 " + "l1=0" + "l2=1.13 f=-0.118 shape=(1, 9000, 1)
logits [[-0.24908863 -0.7919562   0.28218853  0.28587753]]
Iteration 700 of 1000: loss=0.986 " + "l1=0.00524" + "l2=0.981 f=-0.131 shape=(1, 9000, 1)
logits [[-0.30686173 -0.71162486  0.25229263  0.24276486]]
Iteration 800 of 1000: loss=0.901 " + "l1=0.0145" + "l2=0.886 f=-0.132 shape=(1, 9000, 1)
logits [[-0.3026059  -0.72989273  0.26608145  0.2396628 ]]
Iteration 900 of 1000: loss=0.82 " + "l1=0.019" + "l2=0.801 f=-0.135 shape=(1, 9000, 1)
logits [[-0.28786737 -0.7421435   0.26241907  0.22784543]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.2 " + "l1=3.2" + "l2=0 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.115478  -3.2332423  3.0302546 -5.7154226]]
Iteration 100 of 1000: loss=2.33 " + "l1=1.85" + "l2=0.488 f=-0.353 shape=(1, 9000, 1)
logits [[ 2.2397778 -2.4181402  2.205371  -3.4397695]]
Iteration 200 of 1000: loss=2.04 " + "l1=1.52" + "l2=0.521 f=-0.316 shape=(1, 9000, 1)
logits [[ 1.8287839 -2.0742612  1.8268322 -2.84579  ]]
Iteration 300 of 1000: loss=1.77 " + "l1=1.18" + "l2=0.59 f=-0.271 shape=(1, 9000, 1)
logits [[ 1.3993671 -1.6674616  1.4148108 -2.2307365]]
Iteration 400 of 1000: loss=1.53 " + "l1=0.883" + "l2=0.651 f=-0.225 shape=(1, 9000, 1)
logits [[ 1.0444784 -1.3725488  1.072829  -1.6447512]]
Iteration 500 of 1000: loss=1.31 " + "l1=0.578" + "l2=0.729 f=-0.183 shape=(1, 9000, 1)
logits [[ 0.53454965 -0.9721308   0.74274725 -1.036828  ]]
Iteration 600 of 1000: loss=1.15 " + "l1=0.412" + "l2=0.743 f=-0.165 shape=(1, 9000, 1)
logits [[ 0.22481807 -0.8146175   0.5976162  -0.6688    ]]
Iteration 700 of 1000: loss=1.04 " + "l1=0.272" + "l2=0.764 f=-0.163 shape=(1, 9000, 1)
logits [[-0.06440797 -0.7089389   0.47786522 -0.35773656]]
Iteration 800 of 1000: loss=0.916 " + "l1=0.137" + "l2=0.779 f=-0.151 shape=(1, 9000, 1)
logits [[-0.31705    -0.6509205   0.39327335 -0.02936044]]
Iteration 900 of 1000: loss=0.808 " + "l1=0.00397" + "l2=0.804 f=-0.111 shape=(1, 9000, 1)
logits [[-0.42448643 -0.65448993  0.324172    0.31195626]]
--- 309.6607439517975 seconds ---
Adv result:3
Loading record A00216
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.1 " + "l1=0.1" + "l2=0 f=-0.644 shape=(1, 9000, 1)
logits [[ 5.676004 -4.36198   4.191791 -8.079908]]
Iteration 100 of 1000: loss=0.1 " + "l1=0.0996" + "l2=0.000315 f=-0.64 shape=(1, 9000, 1)
logits [[ 5.6405916 -4.324106   4.1619577 -8.036756 ]]
Iteration 200 of 1000: loss=0.0998 " + "l1=0.0995" + "l2=0.000308 f=-0.639 shape=(1, 9000, 1)
logits [[ 5.636408  -4.317261   4.1572857 -8.032775 ]]
Iteration 300 of 1000: loss=0.0997 " + "l1=0.0994" + "l2=0.000364 f=-0.638 shape=(1, 9000, 1)
logits [[ 5.6293116 -4.3081536  4.150682  -8.025681 ]]
Iteration 400 of 1000: loss=0.0996 " + "l1=0.0992" + "l2=0.000427 f=-0.638 shape=(1, 9000, 1)
logits [[ 5.621833 -4.299093  4.144279 -8.018377]]
Iteration 500 of 1000: loss=0.0996 " + "l1=0.0991" + "l2=0.000514 f=-0.637 shape=(1, 9000, 1)
logits [[ 5.61451  -4.29065   4.13851  -8.011365]]
Iteration 600 of 1000: loss=0.0996 " + "l1=0.0989" + "l2=0.000688 f=-0.637 shape=(1, 9000, 1)
logits [[ 5.6075125 -4.2829385  4.133562  -8.004807 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1 " + "l1=1" + "l2=0 f=-0.644 shape=(1, 9000, 1)
logits [[ 5.676004 -4.36198   4.191791 -8.079908]]
Iteration 100 of 1000: loss=0.964 " + "l1=0.942" + "l2=0.0221 f=-0.611 shape=(1, 9000, 1)
logits [[ 5.386283  -4.0335693  3.9460084 -7.7435637]]
Iteration 200 of 1000: loss=0.946 " + "l1=0.917" + "l2=0.0295 f=-0.601 shape=(1, 9000, 1)
logits [[ 5.270666  -3.8963594  3.839895  -7.6198964]]
Iteration 300 of 1000: loss=0.93 " + "l1=0.894" + "l2=0.0357 f=-0.594 shape=(1, 9000, 1)
logits [[ 5.1669216 -3.7758317  3.7482147 -7.513575 ]]
Iteration 400 of 1000: loss=0.915 " + "l1=0.873" + "l2=0.0415 f=-0.586 shape=(1, 9000, 1)
logits [[ 5.073099 -3.65849   3.659021 -7.419471]]
Iteration 500 of 1000: loss=0.901 " + "l1=0.851" + "l2=0.0493 f=-0.578 shape=(1, 9000, 1)
logits [[ 4.9814887 -3.5325506  3.5686016 -7.3291974]]
Iteration 600 of 1000: loss=0.889 " + "l1=0.833" + "l2=0.0555 f=-0.574 shape=(1, 9000, 1)
logits [[ 4.893196  -3.4410453  3.498664  -7.2451234]]
Iteration 700 of 1000: loss=0.878 " + "l1=0.819" + "l2=0.0595 f=-0.574 shape=(1, 9000, 1)
logits [[ 4.8061438 -3.3821924  3.4498198 -7.168019 ]]
Iteration 800 of 1000: loss=0.868 " + "l1=0.803" + "l2=0.0648 f=-0.576 shape=(1, 9000, 1)
logits [[ 4.714866  -3.3177128  3.396923  -7.0962863]]
Iteration 900 of 1000: loss=0.858 " + "l1=0.787" + "l2=0.0707 f=-0.577 shape=(1, 9000, 1)
logits [[ 4.618166  -3.2501104  3.3380814 -7.01318  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10 " + "l1=10" + "l2=0 f=-0.644 shape=(1, 9000, 1)
logits [[ 5.676004 -4.36198   4.191791 -8.079908]]
Iteration 100 of 1000: loss=6.95 " + "l1=5.54" + "l2=1.41 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.3249857 -2.2164679  2.4770818 -5.327798 ]]
Iteration 200 of 1000: loss=5.22 " + "l1=3.14" + "l2=2.09 f=-0.346 shape=(1, 9000, 1)
logits [[ 1.9685391 -1.1683196  1.5520108 -3.736808 ]]
Iteration 300 of 1000: loss=3.92 " + "l1=1.67" + "l2=2.25 f=-0.322 shape=(1, 9000, 1)
logits [[ 1.024905  -0.6442606  1.0137637 -2.6831748]]
Iteration 400 of 1000: loss=3.1 " + "l1=0.942" + "l2=2.16 f=-0.331 shape=(1, 9000, 1)
logits [[ 0.613416   -0.32876182  0.59630877 -2.206813  ]]
Iteration 500 of 1000: loss=2.59 " + "l1=0.482" + "l2=2.11 f=-0.327 shape=(1, 9000, 1)
logits [[ 0.37668437 -0.10579559  0.372978   -1.9515519 ]]
Iteration 600 of 1000: loss=2.23 " + "l1=0.162" + "l2=2.07 f=-0.302 shape=(1, 9000, 1)
logits [[ 0.22927494  0.07260185  0.23484    -1.7463322 ]]
Iteration 700 of 1000: loss=1.94 " + "l1=0.0313" + "l2=1.9 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.16848132  0.1371814   0.16488047 -1.6014737 ]]
Iteration 800 of 1000: loss=1.74 " + "l1=0.0109" + "l2=1.73 f=-0.274 shape=(1, 9000, 1)
logits [[ 0.14706099  0.1361201   0.14691512 -1.5260396 ]]
Iteration 900 of 1000: loss=1.59 " + "l1=0" + "l2=1.59 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.12730344  0.13410279  0.1281625  -1.4518355 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.52 " + "l1=5.52" + "l2=0 f=-0.644 shape=(1, 9000, 1)
logits [[ 5.676004 -4.36198   4.191791 -8.079908]]
Iteration 100 of 1000: loss=4.44 " + "l1=3.89" + "l2=0.543 f=-0.509 shape=(1, 9000, 1)
logits [[ 4.2304554 -2.847284   3.0111642 -6.4310975]]
Iteration 200 of 1000: loss=3.9 " + "l1=3.23" + "l2=0.666 f=-0.456 shape=(1, 9000, 1)
logits [[ 3.5556517 -2.3257298  2.6218686 -5.6761093]]
Iteration 300 of 1000: loss=3.4 " + "l1=2.59" + "l2=0.811 f=-0.405 shape=(1, 9000, 1)
logits [[ 2.9009383 -1.7994357  2.2152061 -4.936183 ]]
Iteration 400 of 1000: loss=2.81 " + "l1=1.81" + "l2=0.998 f=-0.351 shape=(1, 9000, 1)
logits [[ 2.0068557 -1.2868379  1.7346226 -3.8574226]]
Iteration 500 of 1000: loss=2.44 " + "l1=1.38" + "l2=1.06 f=-0.351 shape=(1, 9000, 1)
logits [[ 1.4598204 -1.0453393  1.380185  -3.2004495]]
Iteration 600 of 1000: loss=2.14 " + "l1=1.02" + "l2=1.11 f=-0.358 shape=(1, 9000, 1)
logits [[ 1.0485616  -0.80630744  1.049632   -2.7255747 ]]
Iteration 700 of 1000: loss=1.9 " + "l1=0.795" + "l2=1.11 f=-0.351 shape=(1, 9000, 1)
logits [[ 0.8211756 -0.6245847  0.8186581 -2.419515 ]]
Iteration 800 of 1000: loss=1.75 " + "l1=0.645" + "l2=1.1 f=-0.332 shape=(1, 9000, 1)
logits [[ 0.6672421  -0.50597405  0.66536516 -2.1527185 ]]
Iteration 900 of 1000: loss=1.62 " + "l1=0.554" + "l2=1.07 f=-0.321 shape=(1, 9000, 1)
logits [[ 0.5706621  -0.43691128  0.56940055 -1.9854088 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=7.78 " + "l1=7.78" + "l2=0 f=-0.644 shape=(1, 9000, 1)
logits [[ 5.676004 -4.36198   4.191791 -8.079908]]
Iteration 100 of 1000: loss=5.81 " + "l1=4.91" + "l2=0.896 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.7881262 -2.545883   2.7340248 -5.885021 ]]
Iteration 200 of 1000: loss=4.77 " + "l1=3.47" + "l2=1.29 f=-0.405 shape=(1, 9000, 1)
logits [[ 2.7427287 -1.7401354  2.0503125 -4.6729727]]
Iteration 300 of 1000: loss=3.72 " + "l1=2.12" + "l2=1.6 f=-0.337 shape=(1, 9000, 1)
logits [[ 1.6910515 -1.0503361  1.4356654 -3.4251273]]
Iteration 400 of 1000: loss=3.03 " + "l1=1.29" + "l2=1.74 f=-0.334 shape=(1, 9000, 1)
logits [[ 0.969124   -0.69591814  0.965041   -2.5757222 ]]
Iteration 500 of 1000: loss=2.47 " + "l1=0.795" + "l2=1.67 f=-0.35 shape=(1, 9000, 1)
logits [[ 0.614339  -0.4120275  0.6108098 -2.2139528]]
Iteration 600 of 1000: loss=2.15 " + "l1=0.547" + "l2=1.6 f=-0.331 shape=(1, 9000, 1)
logits [[ 0.44330138 -0.26278293  0.4339267  -1.9385751 ]]
Iteration 700 of 1000: loss=1.9 " + "l1=0.328" + "l2=1.57 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.29364237 -0.1297019   0.29033726 -1.7196661 ]]
Iteration 800 of 1000: loss=1.71 " + "l1=0.178" + "l2=1.53 f=-0.301 shape=(1, 9000, 1)
logits [[ 0.19681126 -0.03150899  0.19861612 -1.567634  ]]
Iteration 900 of 1000: loss=1.52 " + "l1=0.0761" + "l2=1.44 f=-0.279 shape=(1, 9000, 1)
logits [[ 0.12148109  0.02334819  0.11976654 -1.3793612 ]]
--- 285.0894274711609 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0148 " + "l1=0.0148" + "l2=0 f=-0.644 shape=(1, 9000, 1)
logits [[ 5.676004 -4.36198   4.191791 -8.079908]]
Iteration 100 of 1000: loss=0.0146 " + "l1=0.0144" + "l2=0.000209 f=-0.646 shape=(1, 9000, 1)
logits [[ 5.6499763 -4.3826756  4.208884  -8.058559 ]]
Iteration 200 of 1000: loss=0.0146 " + "l1=0.0144" + "l2=0.000188 f=-0.646 shape=(1, 9000, 1)
logits [[ 5.6487813 -4.384403   4.210833  -8.058809 ]]
Iteration 300 of 1000: loss=0.0145 " + "l1=0.0143" + "l2=0.00022 f=-0.646 shape=(1, 9000, 1)
logits [[ 5.645462  -4.387096   4.2137356 -8.057462 ]]
Iteration 400 of 1000: loss=0.0145 " + "l1=0.0143" + "l2=0.000271 f=-0.647 shape=(1, 9000, 1)
logits [[ 5.641914  -4.3897643  4.216732  -8.056348 ]]
Iteration 500 of 1000: loss=0.0145 " + "l1=0.0142" + "l2=0.000334 f=-0.647 shape=(1, 9000, 1)
logits [[ 5.6383386 -4.391746   4.2192326 -8.055451 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.148 " + "l1=0.148" + "l2=0 f=-0.644 shape=(1, 9000, 1)
logits [[ 5.676004 -4.36198   4.191791 -8.079908]]
Iteration 100 of 1000: loss=0.129 " + "l1=0.118" + "l2=0.0108 f=-0.659 shape=(1, 9000, 1)
logits [[ 5.4888725 -4.501812   4.3074956 -7.93057  ]]
Iteration 200 of 1000: loss=0.122 " + "l1=0.107" + "l2=0.0149 f=-0.665 shape=(1, 9000, 1)
logits [[ 5.4158034 -4.5451956  4.3485427 -7.8780236]]
Iteration 300 of 1000: loss=0.116 " + "l1=0.0972" + "l2=0.0183 f=-0.668 shape=(1, 9000, 1)
logits [[ 5.3499117 -4.570703   4.3777432 -7.8305907]]
Iteration 400 of 1000: loss=0.11 " + "l1=0.0881" + "l2=0.0218 f=-0.672 shape=(1, 9000, 1)
logits [[ 5.2885585 -4.594634   4.4076447 -7.7899523]]
Iteration 500 of 1000: loss=0.104 " + "l1=0.0795" + "l2=0.025 f=-0.675 shape=(1, 9000, 1)
logits [[ 5.2265673 -4.6104493  4.431984  -7.748498 ]]
Iteration 600 of 1000: loss=0.0995 " + "l1=0.0724" + "l2=0.0271 f=-0.678 shape=(1, 9000, 1)
logits [[ 5.172457  -4.620279   4.4482837 -7.7141166]]
Iteration 700 of 1000: loss=0.0948 " + "l1=0.0657" + "l2=0.0291 f=-0.681 shape=(1, 9000, 1)
logits [[ 5.117276  -4.6285915  4.460011  -7.6741047]]
Iteration 800 of 1000: loss=0.09 " + "l1=0.0596" + "l2=0.0304 f=-0.684 shape=(1, 9000, 1)
logits [[ 5.0623207 -4.6337533  4.466623  -7.6320863]]
Iteration 900 of 1000: loss=0.0851 " + "l1=0.0529" + "l2=0.0321 f=-0.689 shape=(1, 9000, 1)
logits [[ 4.998278  -4.637537   4.4687967 -7.5838585]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.48 " + "l1=1.48" + "l2=0 f=-0.644 shape=(1, 9000, 1)
logits [[ 5.676004 -4.36198   4.191791 -8.079908]]
Iteration 100 of 1000: loss=0.252 " + "l1=0" + "l2=0.252 f=-0.687 shape=(1, 9000, 1)
logits [[ 4.646398  -4.896629   4.6548343 -7.1524167]]
Iteration 200 of 1000: loss=0.177 " + "l1=0" + "l2=0.177 f=-0.693 shape=(1, 9000, 1)
logits [[ 4.613198  -4.865265   4.624174  -7.1450543]]
Iteration 300 of 1000: loss=0.143 " + "l1=0" + "l2=0.143 f=-0.699 shape=(1, 9000, 1)
logits [[ 4.5916166 -4.8378725  4.598014  -7.1483145]]
Iteration 400 of 1000: loss=0.121 " + "l1=0" + "l2=0.121 f=-0.702 shape=(1, 9000, 1)
logits [[ 4.572924  -4.8127923  4.5759296 -7.1433783]]
Iteration 500 of 1000: loss=0.106 " + "l1=0" + "l2=0.106 f=-0.707 shape=(1, 9000, 1)
logits [[ 4.5486655 -4.8016562  4.5603266 -7.136567 ]]
Iteration 600 of 1000: loss=0.0927 " + "l1=0" + "l2=0.0927 f=-0.713 shape=(1, 9000, 1)
logits [[ 4.526725  -4.7919555  4.5431013 -7.1308064]]
Iteration 700 of 1000: loss=0.0866 " + "l1=0" + "l2=0.0866 f=-0.722 shape=(1, 9000, 1)
logits [[ 4.482649 -4.795235  4.530451 -7.104369]]
Iteration 800 of 1000: loss=0.0714 " + "l1=0" + "l2=0.0714 f=-0.729 shape=(1, 9000, 1)
logits [[ 4.4846272 -4.7755513  4.502445  -7.125742 ]]
Iteration 900 of 1000: loss=0.0636 " + "l1=0" + "l2=0.0636 f=-0.732 shape=(1, 9000, 1)
logits [[ 4.4718447 -4.757543   4.48265   -7.126655 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.816 " + "l1=0.816" + "l2=0 f=-0.644 shape=(1, 9000, 1)
logits [[ 5.676004 -4.36198   4.191791 -8.079908]]
Iteration 100 of 1000: loss=0.26 " + "l1=0" + "l2=0.26 f=-0.684 shape=(1, 9000, 1)
logits [[ 4.668086  -4.9068203  4.6685157 -7.1662555]]
Iteration 200 of 1000: loss=0.166 " + "l1=0" + "l2=0.166 f=-0.693 shape=(1, 9000, 1)
logits [[ 4.6264315 -4.8662314  4.6309295 -7.1617575]]
Iteration 300 of 1000: loss=0.134 " + "l1=0.00188" + "l2=0.132 f=-0.696 shape=(1, 9000, 1)
logits [[ 4.602968  -4.831054   4.5995493 -7.1546936]]
Iteration 400 of 1000: loss=0.112 " + "l1=0" + "l2=0.112 f=-0.701 shape=(1, 9000, 1)
logits [[ 4.5796156 -4.8163276  4.5844755 -7.152175 ]]
Iteration 500 of 1000: loss=0.0953 " + "l1=0.00186" + "l2=0.0935 f=-0.707 shape=(1, 9000, 1)
logits [[ 4.5601287 -4.7908998  4.5567384 -7.1542506]]
Iteration 600 of 1000: loss=0.0818 " + "l1=0" + "l2=0.0818 f=-0.716 shape=(1, 9000, 1)
logits [[ 4.5285096 -4.7851405  4.535643  -7.141807 ]]
Iteration 700 of 1000: loss=0.0713 " + "l1=0" + "l2=0.0713 f=-0.725 shape=(1, 9000, 1)
logits [[ 4.498681  -4.7751255  4.51059   -7.1345406]]
Iteration 800 of 1000: loss=0.0631 " + "l1=0" + "l2=0.0631 f=-0.73 shape=(1, 9000, 1)
logits [[ 4.482246  -4.758778   4.489384  -7.1329346]]
Iteration 900 of 1000: loss=0.059 " + "l1=0.00222" + "l2=0.0568 f=-0.734 shape=(1, 9000, 1)
logits [[ 4.472856  -4.739321   4.4688196 -7.1369267]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.482 " + "l1=0.482" + "l2=0 f=-0.644 shape=(1, 9000, 1)
logits [[ 5.676004 -4.36198   4.191791 -8.079908]]
Iteration 100 of 1000: loss=0.277 " + "l1=0.166" + "l2=0.111 f=-0.672 shape=(1, 9000, 1)
logits [[ 5.0509    -4.7556186  4.5396132 -7.5230618]]
Iteration 200 of 1000: loss=0.192 " + "l1=0.0424" + "l2=0.15 f=-0.686 shape=(1, 9000, 1)
logits [[ 4.7511353 -4.8422637  4.6205573 -7.2716885]]
Iteration 300 of 1000: loss=0.14 " + "l1=0.00103" + "l2=0.139 f=-0.694 shape=(1, 9000, 1)
logits [[ 4.6188426 -4.84391    4.6156793 -7.1658635]]
Iteration 400 of 1000: loss=0.114 " + "l1=0.00185" + "l2=0.112 f=-0.699 shape=(1, 9000, 1)
logits [[ 4.594997  -4.8149295  4.5892963 -7.1655054]]
Iteration 500 of 1000: loss=0.0943 " + "l1=0" + "l2=0.0943 f=-0.708 shape=(1, 9000, 1)
logits [[ 4.5632973 -4.79995    4.5658336 -7.159885 ]]
Iteration 600 of 1000: loss=0.0797 " + "l1=0" + "l2=0.0797 f=-0.718 shape=(1, 9000, 1)
logits [[ 4.533969 -4.790653  4.539146 -7.153671]]
Iteration 700 of 1000: loss=0.0676 " + "l1=0.000468" + "l2=0.0672 f=-0.728 shape=(1, 9000, 1)
logits [[ 4.51051   -4.7775745  4.5090714 -7.1537437]]
Iteration 800 of 1000: loss=0.0614 " + "l1=0" + "l2=0.0614 f=-0.732 shape=(1, 9000, 1)
logits [[ 4.4857955 -4.7646813  4.4908648 -7.1407127]]
Iteration 900 of 1000: loss=0.0555 " + "l1=0" + "l2=0.0555 f=-0.736 shape=(1, 9000, 1)
logits [[ 4.4643736 -4.7430463  4.4660687 -7.1305814]]
--- 280.26842045783997 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.138 " + "l1=0.138" + "l2=0 f=-0.644 shape=(1, 9000, 1)
logits [[ 5.676004 -4.36198   4.191791 -8.079908]]
Iteration 100 of 1000: loss=0.137 " + "l1=0.136" + "l2=0.000581 f=-0.638 shape=(1, 9000, 1)
logits [[ 5.618688 -4.349053  4.171956 -7.993651]]
Iteration 200 of 1000: loss=0.137 " + "l1=0.136" + "l2=0.000618 f=-0.637 shape=(1, 9000, 1)
logits [[ 5.609349  -4.346213   4.168742  -7.9802203]]
Iteration 300 of 1000: loss=0.136 " + "l1=0.136" + "l2=0.000764 f=-0.636 shape=(1, 9000, 1)
logits [[ 5.5981364 -4.341564   4.1640735 -7.9637055]]
Iteration 400 of 1000: loss=0.136 " + "l1=0.135" + "l2=0.000891 f=-0.635 shape=(1, 9000, 1)
logits [[ 5.587676  -4.3364167  4.159368  -7.9488816]]
Iteration 500 of 1000: loss=0.136 " + "l1=0.135" + "l2=0.00102 f=-0.634 shape=(1, 9000, 1)
logits [[ 5.5781245 -4.3311825  4.1549964 -7.935968 ]]
Iteration 600 of 1000: loss=0.136 " + "l1=0.135" + "l2=0.00112 f=-0.632 shape=(1, 9000, 1)
logits [[ 5.569216  -4.3256903  4.1507215 -7.9239597]]
Iteration 700 of 1000: loss=0.136 " + "l1=0.135" + "l2=0.00127 f=-0.631 shape=(1, 9000, 1)
logits [[ 5.56105   -4.320109   4.1466255 -7.913176 ]]
Iteration 800 of 1000: loss=0.136 " + "l1=0.135" + "l2=0.00134 f=-0.63 shape=(1, 9000, 1)
logits [[ 5.5530334 -4.314924   4.1428556 -7.9029217]]
Iteration 900 of 1000: loss=0.136 " + "l1=0.134" + "l2=0.00154 f=-0.63 shape=(1, 9000, 1)
logits [[ 5.5454926 -4.310234   4.1395574 -7.893516 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.38 " + "l1=1.38" + "l2=0 f=-0.644 shape=(1, 9000, 1)
logits [[ 5.676004 -4.36198   4.191791 -8.079908]]
Iteration 100 of 1000: loss=1.3 " + "l1=1.25" + "l2=0.0453 f=-0.595 shape=(1, 9000, 1)
logits [[ 5.1759534 -4.244273   4.0244193 -7.3357663]]
Iteration 200 of 1000: loss=1.27 " + "l1=1.2" + "l2=0.0611 f=-0.583 shape=(1, 9000, 1)
logits [[ 4.9796505 -4.196836   3.9535136 -7.06639  ]]
Iteration 300 of 1000: loss=1.24 " + "l1=1.16" + "l2=0.0776 f=-0.571 shape=(1, 9000, 1)
logits [[ 4.803359  -4.1369586  3.874878  -6.8242416]]
Iteration 400 of 1000: loss=1.22 " + "l1=1.13" + "l2=0.0904 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.6469383 -4.0840173  3.7989726 -6.612084 ]]
Iteration 500 of 1000: loss=1.19 " + "l1=1.08" + "l2=0.105 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.467812  -4.0347514  3.72146   -6.3720098]]
Iteration 600 of 1000: loss=1.16 " + "l1=1.04" + "l2=0.116 f=-0.55 shape=(1, 9000, 1)
logits [[ 4.293175  -3.98694    3.6458867 -6.1505494]]
Iteration 700 of 1000: loss=1.13 " + "l1=1" + "l2=0.127 f=-0.552 shape=(1, 9000, 1)
logits [[ 4.105913  -3.9432225  3.564242  -5.935482 ]]
Iteration 800 of 1000: loss=1.1 " + "l1=0.96" + "l2=0.139 f=-0.556 shape=(1, 9000, 1)
logits [[ 3.900918  -3.901675   3.4756558 -5.69935  ]]
Iteration 900 of 1000: loss=1.07 " + "l1=0.918" + "l2=0.15 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.7032557 -3.887439   3.4142118 -5.47739  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=13.8 " + "l1=13.8" + "l2=0 f=-0.644 shape=(1, 9000, 1)
logits [[ 5.676004 -4.36198   4.191791 -8.079908]]
Iteration 100 of 1000: loss=8.06 " + "l1=5.89" + "l2=2.18 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.5637717 -3.1057441  2.5661414 -3.3214626]]
Iteration 200 of 1000: loss=6.18 " + "l1=3.63" + "l2=2.55 f=-0.271 shape=(1, 9000, 1)
logits [[ 1.600328  -2.380003   1.6603292 -1.9657799]]
Iteration 300 of 1000: loss=4.44 " + "l1=1.54" + "l2=2.89 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.6086787  -1.9169971   0.89547396 -0.6493496 ]]
Iteration 400 of 1000: loss=2.98 " + "l1=0.0129" + "l2=2.96 f=-0.269 shape=(1, 9000, 1)
logits [[-0.08919907 -1.6924349   0.35856467  0.34570715]]
Iteration 500 of 1000: loss=2.44 " + "l1=0.00727" + "l2=2.44 f=-0.278 shape=(1, 9000, 1)
logits [[-0.06160761 -1.748006    0.35250863  0.34523985]]
Iteration 600 of 1000: loss=2.16 " + "l1=0" + "l2=2.16 f=-0.276 shape=(1, 9000, 1)
logits [[-0.03654715 -1.7896659   0.35782006  0.3646711 ]]
Iteration 700 of 1000: loss=1.97 " + "l1=0.0178" + "l2=1.95 f=-0.271 shape=(1, 9000, 1)
logits [[ 0.00502539 -1.8298954   0.38005993  0.3623044 ]]
Iteration 800 of 1000: loss=1.83 " + "l1=0.0311" + "l2=1.8 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.02825617 -1.8673198   0.40323418  0.372088  ]]
Iteration 900 of 1000: loss=1.7 " + "l1=0" + "l2=1.7 f=-0.26 shape=(1, 9000, 1)
logits [[ 0.01872618 -1.8776678   0.39642146  0.42443115]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.57 " + "l1=7.57" + "l2=0 f=-0.644 shape=(1, 9000, 1)
logits [[ 5.676004 -4.36198   4.191791 -8.079908]]
Iteration 100 of 1000: loss=5.42 " + "l1=4.36" + "l2=1.06 f=-0.456 shape=(1, 9000, 1)
logits [[ 3.2846544 -3.7620468  3.2897656 -4.6345124]]
Iteration 200 of 1000: loss=4.53 " + "l1=3.34" + "l2=1.19 f=-0.35 shape=(1, 9000, 1)
logits [[ 2.6089928 -3.1561425  2.609969  -3.463451 ]]
Iteration 300 of 1000: loss=3.85 " + "l1=2.54" + "l2=1.31 f=-0.31 shape=(1, 9000, 1)
logits [[ 2.0128498 -2.6732738  2.0205107 -2.6012063]]
Iteration 400 of 1000: loss=3.26 " + "l1=1.82" + "l2=1.45 f=-0.309 shape=(1, 9000, 1)
logits [[ 1.4264411 -2.280759   1.4600211 -1.8411977]]
Iteration 500 of 1000: loss=2.65 " + "l1=1.1" + "l2=1.55 f=-0.315 shape=(1, 9000, 1)
logits [[ 0.7954997 -1.9992484  0.973638  -1.0312102]]
Iteration 600 of 1000: loss=2.19 " + "l1=0.582" + "l2=1.61 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.36424485 -1.8250406   0.6505125  -0.4079898 ]]
Iteration 700 of 1000: loss=1.84 " + "l1=0.201" + "l2=1.64 f=-0.28 shape=(1, 9000, 1)
logits [[ 0.08825526 -1.7277688   0.4433973   0.07750246]]
Iteration 800 of 1000: loss=1.49 " + "l1=0.0088" + "l2=1.48 f=-0.252 shape=(1, 9000, 1)
logits [[-0.02730077 -1.6600999   0.34800968  0.3320094 ]]
Iteration 900 of 1000: loss=1.29 " + "l1=0.00449" + "l2=1.29 f=-0.245 shape=(1, 9000, 1)
logits [[-0.01825028 -1.654966    0.35074654  0.34257445]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.47 " + "l1=4.47" + "l2=0 f=-0.644 shape=(1, 9000, 1)
logits [[ 5.676004 -4.36198   4.191791 -8.079908]]
Iteration 100 of 1000: loss=3.67 " + "l1=3.24" + "l2=0.424 f=-0.508 shape=(1, 9000, 1)
logits [[ 4.152479  -4.00864    3.6540585 -5.8306365]]
Iteration 200 of 1000: loss=3.27 " + "l1=2.69" + "l2=0.582 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.4120343 -3.7599466  3.304117  -4.863716 ]]
Iteration 300 of 1000: loss=2.93 " + "l1=2.28" + "l2=0.652 f=-0.432 shape=(1, 9000, 1)
logits [[ 2.912729  -3.4488616  2.913411  -4.1036983]]
Iteration 400 of 1000: loss=2.66 " + "l1=1.97" + "l2=0.697 f=-0.399 shape=(1, 9000, 1)
logits [[ 2.5206785 -3.1298923  2.5340972 -3.5213933]]
Iteration 500 of 1000: loss=2.42 " + "l1=1.68" + "l2=0.74 f=-0.376 shape=(1, 9000, 1)
logits [[ 2.159592  -2.8247633  2.1625483 -2.9995213]]
Iteration 600 of 1000: loss=2.19 " + "l1=1.43" + "l2=0.763 f=-0.366 shape=(1, 9000, 1)
logits [[ 1.8409138 -2.5980268  1.8482292 -2.5550508]]
Iteration 700 of 1000: loss=1.91 " + "l1=1.11" + "l2=0.8 f=-0.347 shape=(1, 9000, 1)
logits [[ 1.4697554 -2.3811114  1.4754512 -1.953233 ]]
Iteration 800 of 1000: loss=1.65 " + "l1=0.817" + "l2=0.832 f=-0.336 shape=(1, 9000, 1)
logits [[ 1.0862659 -2.2218769  1.1534568 -1.3606275]]
Iteration 900 of 1000: loss=1.47 " + "l1=0.64" + "l2=0.826 f=-0.321 shape=(1, 9000, 1)
logits [[ 0.8700179 -2.1142445  0.9643879 -1.0035368]]
--- 307.2114613056183 seconds ---
Adv result:3
Loading record A00225
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0756 " + "l1=0.0756" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.5291157 -3.0307646  2.8094857 -6.7252913]]
Iteration 100 of 1000: loss=0.0753 " + "l1=0.0751" + "l2=0.000238 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.4958134 -3.0148914  2.7997518 -6.686994 ]]
Iteration 200 of 1000: loss=0.0753 " + "l1=0.0751" + "l2=0.000217 f=-0.601 shape=(1, 9000, 1)
logits [[ 4.493283  -3.0134358  2.7991173 -6.683211 ]]
Iteration 300 of 1000: loss=0.0753 " + "l1=0.075" + "l2=0.000264 f=-0.6 shape=(1, 9000, 1)
logits [[ 4.4891715 -3.0109391  2.7979817 -6.6779823]]
Iteration 400 of 1000: loss=0.0752 " + "l1=0.0749" + "l2=0.000303 f=-0.6 shape=(1, 9000, 1)
logits [[ 4.4847426 -3.008224   2.7968068 -6.672448 ]]
Iteration 500 of 1000: loss=0.0752 " + "l1=0.0749" + "l2=0.000378 f=-0.599 shape=(1, 9000, 1)
logits [[ 4.480483  -3.0054922  2.7956474 -6.6672096]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.756 " + "l1=0.756" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.5291157 -3.0307646  2.8094857 -6.7252913]]
Iteration 100 of 1000: loss=0.733 " + "l1=0.718" + "l2=0.0146 f=-0.583 shape=(1, 9000, 1)
logits [[ 4.2728105 -2.909108   2.7382617 -6.433032 ]]
Iteration 200 of 1000: loss=0.725 " + "l1=0.706" + "l2=0.0191 f=-0.574 shape=(1, 9000, 1)
logits [[ 4.187188  -2.8684692  2.7156456 -6.3293567]]
Iteration 300 of 1000: loss=0.717 " + "l1=0.695" + "l2=0.0226 f=-0.564 shape=(1, 9000, 1)
logits [[ 4.1184964 -2.82874    2.6953382 -6.242864 ]]
Iteration 400 of 1000: loss=0.71 " + "l1=0.684" + "l2=0.0258 f=-0.556 shape=(1, 9000, 1)
logits [[ 4.054352  -2.7895803  2.67477   -6.1618004]]
Iteration 500 of 1000: loss=0.704 " + "l1=0.675" + "l2=0.0286 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.996499  -2.7543156  2.6556478 -6.0933394]]
Iteration 600 of 1000: loss=0.698 " + "l1=0.666" + "l2=0.0315 f=-0.543 shape=(1, 9000, 1)
logits [[ 3.9435744 -2.720567   2.6365917 -6.0331244]]
Iteration 700 of 1000: loss=0.692 " + "l1=0.657" + "l2=0.035 f=-0.539 shape=(1, 9000, 1)
logits [[ 3.8836172 -2.6848192  2.615849  -5.9724317]]
Iteration 800 of 1000: loss=0.686 " + "l1=0.648" + "l2=0.038 f=-0.536 shape=(1, 9000, 1)
logits [[ 3.8248806 -2.6510885  2.5972533 -5.916829 ]]
Iteration 900 of 1000: loss=0.68 " + "l1=0.64" + "l2=0.0405 f=-0.534 shape=(1, 9000, 1)
logits [[ 3.7723143 -2.627103   2.579251  -5.860668 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.56 " + "l1=7.56" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.5291157 -3.0307646  2.8094857 -6.7252913]]
Iteration 100 of 1000: loss=5.55 " + "l1=4.47" + "l2=1.08 f=-0.44 shape=(1, 9000, 1)
logits [[ 2.4695811 -2.003602   2.214326  -4.4402657]]
Iteration 200 of 1000: loss=4.76 " + "l1=3.42" + "l2=1.35 f=-0.378 shape=(1, 9000, 1)
logits [[ 1.888687  -1.5275607  1.8853136 -3.7565901]]
Iteration 300 of 1000: loss=4.33 " + "l1=2.92" + "l2=1.4 f=-0.359 shape=(1, 9000, 1)
logits [[ 1.6298448 -1.2946626  1.6269107 -3.3990088]]
Iteration 400 of 1000: loss=4.05 " + "l1=2.63" + "l2=1.42 f=-0.355 shape=(1, 9000, 1)
logits [[ 1.4704747 -1.1493255  1.4764661 -3.2159884]]
Iteration 500 of 1000: loss=3.8 " + "l1=2.33" + "l2=1.47 f=-0.349 shape=(1, 9000, 1)
logits [[ 1.3270901 -1.0067018  1.3202957 -3.0366023]]
Iteration 600 of 1000: loss=3.55 " + "l1=2.02" + "l2=1.53 f=-0.352 shape=(1, 9000, 1)
logits [[ 1.1457067 -0.8682304  1.1471736 -2.8335328]]
Iteration 700 of 1000: loss=3.34 " + "l1=1.83" + "l2=1.51 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.0307034  -0.78875405  1.0391631  -2.6828434 ]]
Iteration 800 of 1000: loss=3.16 " + "l1=1.64" + "l2=1.51 f=-0.338 shape=(1, 9000, 1)
logits [[ 0.9167277  -0.71655756  0.9253219  -2.4754934 ]]
Iteration 900 of 1000: loss=2.99 " + "l1=1.47" + "l2=1.52 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.81832606 -0.6559897   0.81567657 -2.2816906 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=75.6 " + "l1=75.6" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.5291157 -3.0307646  2.8094857 -6.7252913]]
Iteration 100 of 1000: loss=19.3 " + "l1=6.75" + "l2=12.5 f=-0.167 shape=(1, 9000, 1)
logits [[ 0.47397634 -0.16600884  0.50921714 -1.4864185 ]]
Iteration 200 of 1000: loss=8.95 " + "l1=0" + "l2=8.95 f=-0.189 shape=(1, 9000, 1)
logits [[ 0.11565465  0.17211516  0.16707373 -1.2105942 ]]
Iteration 300 of 1000: loss=7.43 " + "l1=0" + "l2=7.43 f=-0.235 shape=(1, 9000, 1)
logits [[ 0.11487719  0.16742484  0.15127432 -1.3731351 ]]
Iteration 400 of 1000: loss=6.84 " + "l1=0" + "l2=6.84 f=-0.25 shape=(1, 9000, 1)
logits [[ 0.02079086  0.17215718  0.13571651 -1.3296884 ]]
Iteration 500 of 1000: loss=6.33 " + "l1=0" + "l2=6.33 f=-0.259 shape=(1, 9000, 1)
logits [[ 0.09568915  0.13551489  0.12623237 -1.3954108 ]]
Iteration 600 of 1000: loss=6.1 " + "l1=0" + "l2=6.1 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.05186659  0.1360003   0.11532906 -1.3312097 ]]
Iteration 700 of 1000: loss=5.86 " + "l1=0" + "l2=5.86 f=-0.256 shape=(1, 9000, 1)
logits [[ 0.10043509  0.10859742  0.10623006 -1.3411163 ]]
Iteration 800 of 1000: loss=5.75 " + "l1=0.0336" + "l2=5.72 f=-0.254 shape=(1, 9000, 1)
logits [[ 0.02523917  0.12039492  0.1237513  -1.2864821 ]]
Iteration 900 of 1000: loss=5.57 " + "l1=0" + "l2=5.57 f=-0.258 shape=(1, 9000, 1)
logits [[ 0.09190147  0.10559056  0.10266751 -1.3313669 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=41.6 " + "l1=41.6" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.5291157 -3.0307646  2.8094857 -6.7252913]]
Iteration 100 of 1000: loss=15.7 " + "l1=8.5" + "l2=7.23 f=-0.224 shape=(1, 9000, 1)
logits [[ 0.98225474 -0.5582891   0.98687065 -2.3059483 ]]
Iteration 200 of 1000: loss=7.91 " + "l1=0.034" + "l2=7.88 f=-0.218 shape=(1, 9000, 1)
logits [[ 0.157344    0.18119341  0.1873771  -1.3971986 ]]
Iteration 300 of 1000: loss=6.54 " + "l1=0.0126" + "l2=6.52 f=-0.255 shape=(1, 9000, 1)
logits [[ 0.12818009  0.178055    0.18034777 -1.5056981 ]]
Iteration 400 of 1000: loss=6 " + "l1=0" + "l2=6 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.11046809  0.16074404  0.15712321 -1.4982711 ]]
Iteration 500 of 1000: loss=5.74 " + "l1=0" + "l2=5.74 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.07970467  0.15029642  0.13332543 -1.4262205 ]]
Iteration 600 of 1000: loss=5.49 " + "l1=0" + "l2=5.49 f=-0.262 shape=(1, 9000, 1)
logits [[ 0.0776343   0.14667347  0.1407379  -1.411364  ]]
Iteration 700 of 1000: loss=5.24 " + "l1=0" + "l2=5.24 f=-0.264 shape=(1, 9000, 1)
logits [[ 0.10660797  0.1288327   0.12394162 -1.4141538 ]]
Iteration 800 of 1000: loss=5.06 " + "l1=0.0734" + "l2=4.99 f=-0.262 shape=(1, 9000, 1)
logits [[ 0.08543514  0.11352777  0.12686476 -1.3724207 ]]
Iteration 900 of 1000: loss=4.84 " + "l1=0" + "l2=4.84 f=-0.262 shape=(1, 9000, 1)
logits [[ 0.10464399  0.10851097  0.10763897 -1.367008  ]]
--- 283.56339859962463 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0172 " + "l1=0.0172" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.5291157 -3.0307646  2.8094857 -6.7252913]]
Iteration 100 of 1000: loss=0.0171 " + "l1=0.017" + "l2=0.000143 f=-0.603 shape=(1, 9000, 1)
logits [[ 4.5056796 -3.0282073  2.8106406 -6.6994925]]
Iteration 200 of 1000: loss=0.0171 " + "l1=0.0169" + "l2=0.000114 f=-0.603 shape=(1, 9000, 1)
logits [[ 4.5054727 -3.0281417  2.8106987 -6.6991367]]
Iteration 300 of 1000: loss=0.0171 " + "l1=0.0169" + "l2=0.000144 f=-0.603 shape=(1, 9000, 1)
logits [[ 4.503235  -3.027908   2.8108997 -6.6966047]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.172 " + "l1=0.172" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.5291157 -3.0307646  2.8094857 -6.7252913]]
Iteration 100 of 1000: loss=0.161 " + "l1=0.154" + "l2=0.00723 f=-0.593 shape=(1, 9000, 1)
logits [[ 4.3597445 -3.0144339  2.8224025 -6.5393453]]
Iteration 200 of 1000: loss=0.157 " + "l1=0.148" + "l2=0.00938 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.3089023 -3.0113773  2.8277652 -6.4791694]]
Iteration 300 of 1000: loss=0.155 " + "l1=0.144" + "l2=0.0105 f=-0.585 shape=(1, 9000, 1)
logits [[ 4.2730823 -3.0077903  2.8313031 -6.4353814]]
Iteration 400 of 1000: loss=0.152 " + "l1=0.141" + "l2=0.0111 f=-0.582 shape=(1, 9000, 1)
logits [[ 4.2469606 -3.0052361  2.834481  -6.404604 ]]
Iteration 500 of 1000: loss=0.15 " + "l1=0.138" + "l2=0.0123 f=-0.579 shape=(1, 9000, 1)
logits [[ 4.218153  -3.0026364  2.838395  -6.3703427]]
Iteration 600 of 1000: loss=0.148 " + "l1=0.135" + "l2=0.0134 f=-0.576 shape=(1, 9000, 1)
logits [[ 4.189384  -2.9993844  2.8406124 -6.334593 ]]
Iteration 700 of 1000: loss=0.146 " + "l1=0.131" + "l2=0.0152 f=-0.571 shape=(1, 9000, 1)
logits [[ 4.1501303 -2.9926438  2.840911  -6.284142 ]]
Iteration 800 of 1000: loss=0.144 " + "l1=0.128" + "l2=0.016 f=-0.568 shape=(1, 9000, 1)
logits [[ 4.1218266 -2.9874282  2.8415804 -6.2493644]]
Iteration 900 of 1000: loss=0.142 " + "l1=0.125" + "l2=0.0173 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.0921307 -2.984518   2.8438725 -6.2135644]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.72 " + "l1=1.72" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.5291157 -3.0307646  2.8094857 -6.7252913]]
Iteration 100 of 1000: loss=0.731 " + "l1=0.225" + "l2=0.505 f=-0.518 shape=(1, 9000, 1)
logits [[ 3.2608826 -3.0270114  3.035652  -5.3426747]]
Iteration 200 of 1000: loss=0.486 " + "l1=0.00271" + "l2=0.483 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.0957282 -2.996027   3.093021  -5.16398  ]]
Iteration 300 of 1000: loss=0.379 " + "l1=0" + "l2=0.379 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.0977974 -3.02337    3.1058161 -5.1400094]]
Iteration 400 of 1000: loss=0.311 " + "l1=0" + "l2=0.311 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.0839996 -3.0179834  3.0904162 -5.1102543]]
Iteration 500 of 1000: loss=0.276 " + "l1=0" + "l2=0.276 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.0527773 -3.0037086  3.0637598 -5.0722156]]
Iteration 600 of 1000: loss=0.246 " + "l1=0.000357" + "l2=0.245 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.0371776 -2.9904273  3.036821  -5.0492706]]
Iteration 700 of 1000: loss=0.23 " + "l1=0.00893" + "l2=0.221 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.0251179 -2.981995   3.0161848 -5.0243945]]
Iteration 800 of 1000: loss=0.207 " + "l1=0" + "l2=0.207 f=-0.492 shape=(1, 9000, 1)
logits [[ 2.99337   -2.9753196  2.996976  -4.9817886]]
Iteration 900 of 1000: loss=0.193 " + "l1=0" + "l2=0.193 f=-0.49 shape=(1, 9000, 1)
logits [[ 2.9746058 -2.969155   2.9815793 -4.948243 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.946 " + "l1=0.946" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.5291157 -3.0307646  2.8094857 -6.7252913]]
Iteration 100 of 1000: loss=0.61 " + "l1=0.415" + "l2=0.195 f=-0.546 shape=(1, 9000, 1)
logits [[ 3.6788561 -2.9998493  2.9243891 -5.788732 ]]
Iteration 200 of 1000: loss=0.51 " + "l1=0.258" + "l2=0.252 f=-0.522 shape=(1, 9000, 1)
logits [[ 3.4261942 -2.9703333  2.9572184 -5.5028243]]
Iteration 300 of 1000: loss=0.419 " + "l1=0.154" + "l2=0.265 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.3316562 -3.0203495  3.0510497 -5.3653584]]
Iteration 400 of 1000: loss=0.338 " + "l1=0.0468" + "l2=0.291 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.1896129 -3.0408113  3.1045709 -5.217769 ]]
Iteration 500 of 1000: loss=0.278 " + "l1=0.00704" + "l2=0.271 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.100037  -3.0221336  3.0872304 -5.119548 ]]
Iteration 600 of 1000: loss=0.244 " + "l1=0.00788" + "l2=0.236 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.0685694 -3.0042083  3.054245  -5.0715265]]
Iteration 700 of 1000: loss=0.216 " + "l1=0" + "l2=0.216 f=-0.486 shape=(1, 9000, 1)
logits [[ 3.028129  -2.997358   3.0315607 -5.006561 ]]
Iteration 800 of 1000: loss=0.194 " + "l1=0.00133" + "l2=0.193 f=-0.486 shape=(1, 9000, 1)
logits [[ 3.0118952 -2.9865277  3.0094697 -4.976875 ]]
Iteration 900 of 1000: loss=0.176 " + "l1=0" + "l2=0.176 f=-0.487 shape=(1, 9000, 1)
logits [[ 2.9899106 -2.9846802  2.9941828 -4.94652  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.559 " + "l1=0.559" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.5291157 -3.0307646  2.8094857 -6.7252913]]
Iteration 100 of 1000: loss=0.441 " + "l1=0.366" + "l2=0.0755 f=-0.566 shape=(1, 9000, 1)
logits [[ 3.9952583 -2.9990628  2.8693526 -6.1302724]]
Iteration 200 of 1000: loss=0.401 " + "l1=0.296" + "l2=0.105 f=-0.548 shape=(1, 9000, 1)
logits [[ 3.8103898 -2.994165   2.8984444 -5.908214 ]]
Iteration 300 of 1000: loss=0.365 " + "l1=0.248" + "l2=0.117 f=-0.53 shape=(1, 9000, 1)
logits [[ 3.7136288 -3.0333169  2.9516733 -5.750072 ]]
Iteration 400 of 1000: loss=0.333 " + "l1=0.213" + "l2=0.12 f=-0.519 shape=(1, 9000, 1)
logits [[ 3.6361442 -3.033971   2.9797988 -5.65684  ]]
Iteration 500 of 1000: loss=0.308 " + "l1=0.183" + "l2=0.125 f=-0.508 shape=(1, 9000, 1)
logits [[ 3.556581  -3.016467   2.9939232 -5.5679264]]
Iteration 600 of 1000: loss=0.278 " + "l1=0.135" + "l2=0.143 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.4423418 -3.0297399  3.0284126 -5.444216 ]]
Iteration 700 of 1000: loss=0.255 " + "l1=0.105" + "l2=0.15 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.3604193 -3.0243518  3.037375  -5.3547497]]
Iteration 800 of 1000: loss=0.236 " + "l1=0.0845" + "l2=0.152 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.3033638 -3.0171669  3.043263  -5.2998724]]
Iteration 900 of 1000: loss=0.217 " + "l1=0.0582" + "l2=0.159 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.2225056 -3.0020308  3.043463  -5.220876 ]]
--- 271.48109674453735 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.113 " + "l1=0.113" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.5291157 -3.0307646  2.8094857 -6.7252913]]
Iteration 100 of 1000: loss=0.112 " + "l1=0.111" + "l2=0.000564 f=-0.599 shape=(1, 9000, 1)
logits [[ 4.4757895 -3.0201945  2.7967575 -6.6470327]]
Iteration 200 of 1000: loss=0.112 " + "l1=0.111" + "l2=0.000577 f=-0.598 shape=(1, 9000, 1)
logits [[ 4.468532  -3.0184643  2.794816  -6.6355925]]
Iteration 300 of 1000: loss=0.111 " + "l1=0.111" + "l2=0.000672 f=-0.596 shape=(1, 9000, 1)
logits [[ 4.4603767 -3.016468   2.792668  -6.6222463]]
Iteration 400 of 1000: loss=0.111 " + "l1=0.111" + "l2=0.000729 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.4520216 -3.0141797  2.7904332 -6.6084423]]
Iteration 500 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.000859 f=-0.594 shape=(1, 9000, 1)
logits [[ 4.444243  -3.0119243  2.7884374 -6.5952444]]
Iteration 600 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.00103 f=-0.592 shape=(1, 9000, 1)
logits [[ 4.436007  -3.0097992  2.7862213 -6.5814567]]
Iteration 700 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.00116 f=-0.591 shape=(1, 9000, 1)
logits [[ 4.427901  -3.007688   2.7841258 -6.5679827]]
Iteration 800 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.00135 f=-0.59 shape=(1, 9000, 1)
logits [[ 4.4202523 -3.005753   2.782143  -6.555081 ]]
Iteration 900 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.00142 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.4135547 -3.0040202  2.7801104 -6.543774 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.13 " + "l1=1.13" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.5291157 -3.0307646  2.8094857 -6.7252913]]
Iteration 100 of 1000: loss=1.06 " + "l1=1.02" + "l2=0.0411 f=-0.558 shape=(1, 9000, 1)
logits [[ 4.08162   -2.9428337  2.7083092 -6.07711  ]]
Iteration 200 of 1000: loss=1.03 " + "l1=0.978" + "l2=0.0542 f=-0.538 shape=(1, 9000, 1)
logits [[ 3.9323971 -2.9128377  2.6735168 -5.844809 ]]
Iteration 300 of 1000: loss=1.01 " + "l1=0.946" + "l2=0.0642 f=-0.52 shape=(1, 9000, 1)
logits [[ 3.8106544 -2.888174   2.6435285 -5.6444664]]
Iteration 400 of 1000: loss=0.989 " + "l1=0.918" + "l2=0.0714 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.7048872 -2.8633192  2.613544  -5.471784 ]]
Iteration 500 of 1000: loss=0.97 " + "l1=0.89" + "l2=0.0803 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.597334  -2.834475   2.5840335 -5.299541 ]]
Iteration 600 of 1000: loss=0.953 " + "l1=0.864" + "l2=0.0885 f=-0.474 shape=(1, 9000, 1)
logits [[ 3.5008962 -2.817595   2.5608332 -5.1393704]]
Iteration 700 of 1000: loss=0.936 " + "l1=0.84" + "l2=0.096 f=-0.461 shape=(1, 9000, 1)
logits [[ 3.4094305 -2.8013813  2.5408916 -4.9912634]]
Iteration 800 of 1000: loss=0.92 " + "l1=0.819" + "l2=0.1 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.3304205 -2.7822902  2.51784   -4.8635297]]
Iteration 900 of 1000: loss=0.901 " + "l1=0.796" + "l2=0.105 f=-0.441 shape=(1, 9000, 1)
logits [[ 3.2348747 -2.7609272  2.486226  -4.7249074]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.3 " + "l1=11.3" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.5291157 -3.0307646  2.8094857 -6.7252913]]
Iteration 100 of 1000: loss=6.69 " + "l1=4.6" + "l2=2.08 f=-0.258 shape=(1, 9000, 1)
logits [[ 1.9418969 -2.2758675  1.9530895 -2.6501977]]
Iteration 200 of 1000: loss=5.54 " + "l1=3.15" + "l2=2.39 f=-0.198 shape=(1, 9000, 1)
logits [[ 1.4526085 -2.0058572  1.4541168 -1.6935965]]
Iteration 300 of 1000: loss=4.75 " + "l1=2.14" + "l2=2.61 f=-0.114 shape=(1, 9000, 1)
logits [[ 1.1296685 -1.8185174  1.184427  -0.9527464]]
Iteration 400 of 1000: loss=3.9 " + "l1=1.1" + "l2=2.79 f=-0.0646 shape=(1, 9000, 1)
logits [[ 0.73518145 -1.6827348   0.8964278  -0.20730275]]
Iteration 500 of 1000: loss=3.17 " + "l1=0.109" + "l2=3.06 f=-0.028 shape=(1, 9000, 1)
logits [[ 0.3264611  -1.555399    0.61291534  0.5038799 ]]
Iteration 600 of 1000: loss=2.64 " + "l1=0.00727" + "l2=2.63 f=-0.0409 shape=(1, 9000, 1)
logits [[ 0.27027217 -1.5693989   0.5714035   0.56413186]]
Iteration 700 of 1000: loss=2.15 " + "l1=0" + "l2=2.15 f=-0.0417 shape=(1, 9000, 1)
logits [[ 0.30405295 -1.6019619   0.5648196   0.5661733 ]]
Iteration 800 of 1000: loss=1.8 " + "l1=0.0501" + "l2=1.75 f=-0.0534 shape=(1, 9000, 1)
logits [[ 0.36414883 -1.6007645   0.5366703   0.4865367 ]]
Iteration 900 of 1000: loss=1.56 " + "l1=0.0142" + "l2=1.55 f=-0.0635 shape=(1, 9000, 1)
logits [[ 0.35533863 -1.5332783   0.46918535  0.45494464]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.19 " + "l1=6.19" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.5291157 -3.0307646  2.8094857 -6.7252913]]
Iteration 100 of 1000: loss=4.51 " + "l1=3.63" + "l2=0.884 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.639603  -2.5792744  2.3498769 -3.9597857]]
Iteration 200 of 1000: loss=3.95 " + "l1=2.87" + "l2=1.08 f=-0.299 shape=(1, 9000, 1)
logits [[ 2.1302576 -2.3753593  2.1338372 -3.0831854]]
Iteration 300 of 1000: loss=3.54 " + "l1=2.44" + "l2=1.1 f=-0.252 shape=(1, 9000, 1)
logits [[ 1.8853027 -2.2420685  1.8915322 -2.5432446]]
Iteration 400 of 1000: loss=3.18 " + "l1=2.04" + "l2=1.14 f=-0.22 shape=(1, 9000, 1)
logits [[ 1.6563659 -2.1461549  1.6606388 -2.0495012]]
Iteration 500 of 1000: loss=2.89 " + "l1=1.74" + "l2=1.16 f=-0.191 shape=(1, 9000, 1)
logits [[ 1.5107462 -2.1375647  1.5104934 -1.6469878]]
Iteration 600 of 1000: loss=2.54 " + "l1=1.39" + "l2=1.16 f=-0.159 shape=(1, 9000, 1)
logits [[ 1.3414305 -2.159545   1.3516781 -1.1682566]]
Iteration 700 of 1000: loss=2.03 " + "l1=0.816" + "l2=1.21 f=-0.134 shape=(1, 9000, 1)
logits [[ 0.89617074 -2.0119913   1.0317702  -0.4512274 ]]
Iteration 800 of 1000: loss=1.61 " + "l1=0.46" + "l2=1.15 f=-0.117 shape=(1, 9000, 1)
logits [[ 0.59383655 -1.8840245   0.82845944 -0.00802185]]
Iteration 900 of 1000: loss=1.34 " + "l1=0.24" + "l2=1.1 f=-0.092 shape=(1, 9000, 1)
logits [[ 0.4307463  -1.7514796   0.6946917   0.25785485]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=8.72 " + "l1=8.72" + "l2=0 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.5291157 -3.0307646  2.8094857 -6.7252913]]
Iteration 100 of 1000: loss=5.7 " + "l1=4.16" + "l2=1.54 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.1915603 -2.40389    2.180203  -3.170943 ]]
Iteration 200 of 1000: loss=4.88 " + "l1=3.16" + "l2=1.72 f=-0.246 shape=(1, 9000, 1)
logits [[ 1.7500688 -2.179638   1.7614788 -2.3167586]]
Iteration 300 of 1000: loss=4.27 " + "l1=2.46" + "l2=1.81 f=-0.197 shape=(1, 9000, 1)
logits [[ 1.4576243 -2.0011253  1.465125  -1.71069  ]]
Iteration 400 of 1000: loss=3.72 " + "l1=1.88" + "l2=1.84 f=-0.161 shape=(1, 9000, 1)
logits [[ 1.1977557 -1.8975407  1.2382053 -1.1842823]]
Iteration 500 of 1000: loss=3.21 " + "l1=1.09" + "l2=2.12 f=-0.136 shape=(1, 9000, 1)
logits [[ 0.7107599  -1.7074184   0.9308952  -0.47671893]]
Iteration 600 of 1000: loss=2.72 " + "l1=0.574" + "l2=2.15 f=-0.116 shape=(1, 9000, 1)
logits [[ 0.41799    -1.6361489   0.7470073   0.00608519]]
Iteration 700 of 1000: loss=2.25 " + "l1=0.185" + "l2=2.07 f=-0.0949 shape=(1, 9000, 1)
logits [[ 0.20850739 -1.5033419   0.57717645  0.3381135 ]]
Iteration 800 of 1000: loss=1.93 " + "l1=0" + "l2=1.93 f=-0.0794 shape=(1, 9000, 1)
logits [[ 0.11692311 -1.3830944   0.47182912  0.47675893]]
Iteration 900 of 1000: loss=1.74 " + "l1=0.0176" + "l2=1.72 f=-0.0823 shape=(1, 9000, 1)
logits [[ 0.1218693 -1.3645107  0.4681255  0.4453947]]
--- 312.05424761772156 seconds ---
Adv result:3
Loading record A00231
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0725 " + "l1=0.0725" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.9545155 -2.2959113  2.8769765 -7.886645 ]]
Iteration 100 of 1000: loss=0.0721 " + "l1=0.0717" + "l2=0.000317 f=-0.586 shape=(1, 9000, 1)
logits [[ 4.9125032 -2.2609637  2.8494785 -7.845618 ]]
Iteration 200 of 1000: loss=0.0719 " + "l1=0.0716" + "l2=0.000314 f=-0.587 shape=(1, 9000, 1)
logits [[ 4.905567  -2.2557745  2.8447387 -7.8407264]]
Iteration 300 of 1000: loss=0.0719 " + "l1=0.0715" + "l2=0.000395 f=-0.587 shape=(1, 9000, 1)
logits [[ 4.8968697 -2.2489305  2.8387992 -7.833957 ]]
Iteration 400 of 1000: loss=0.0718 " + "l1=0.0713" + "l2=0.000467 f=-0.587 shape=(1, 9000, 1)
logits [[ 4.888416  -2.2420397  2.8329031 -7.827462 ]]
Iteration 500 of 1000: loss=0.0717 " + "l1=0.0712" + "l2=0.000569 f=-0.587 shape=(1, 9000, 1)
logits [[ 4.8805485 -2.2361593  2.8279877 -7.82162  ]]
Iteration 600 of 1000: loss=0.0717 " + "l1=0.071" + "l2=0.000681 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.873056  -2.2304652  2.823213  -7.8163223]]
Iteration 700 of 1000: loss=0.0717 " + "l1=0.0709" + "l2=0.000755 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.8657546 -2.224776   2.8184314 -7.8114285]]
Iteration 800 of 1000: loss=0.0716 " + "l1=0.0708" + "l2=0.000832 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.8588457 -2.2193692  2.8139436 -7.8069277]]
Iteration 900 of 1000: loss=0.0716 " + "l1=0.0707" + "l2=0.000915 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.8520694 -2.2142532  2.8096685 -7.8027296]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.725 " + "l1=0.725" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.9545155 -2.2959113  2.8769765 -7.886645 ]]
Iteration 100 of 1000: loss=0.685 " + "l1=0.663" + "l2=0.022 f=-0.584 shape=(1, 9000, 1)
logits [[ 4.6067295 -2.0235622  2.658273  -7.577517 ]]
Iteration 200 of 1000: loss=0.665 " + "l1=0.632" + "l2=0.0332 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.4234486 -1.8957038  2.5498989 -7.4340796]]
Iteration 300 of 1000: loss=0.647 " + "l1=0.606" + "l2=0.0414 f=-0.594 shape=(1, 9000, 1)
logits [[ 4.266514  -1.7907785  2.4606712 -7.3116508]]
Iteration 400 of 1000: loss=0.628 " + "l1=0.577" + "l2=0.0509 f=-0.601 shape=(1, 9000, 1)
logits [[ 4.0885115 -1.684901   2.3662965 -7.1720395]]
Iteration 500 of 1000: loss=0.607 " + "l1=0.547" + "l2=0.0601 f=-0.607 shape=(1, 9000, 1)
logits [[ 3.8941107 -1.5754634  2.2738798 -7.021856 ]]
Iteration 600 of 1000: loss=0.586 " + "l1=0.518" + "l2=0.0682 f=-0.614 shape=(1, 9000, 1)
logits [[ 3.7146769 -1.4630759  2.1865227 -6.8958344]]
Iteration 700 of 1000: loss=0.564 " + "l1=0.486" + "l2=0.0774 f=-0.624 shape=(1, 9000, 1)
logits [[ 3.5209258 -1.3432747  2.0922017 -6.7661033]]
Iteration 800 of 1000: loss=0.529 " + "l1=0.438" + "l2=0.0908 f=-0.646 shape=(1, 9000, 1)
logits [[ 3.238787  -1.1439384  1.9357654 -6.616077 ]]
Iteration 900 of 1000: loss=0.482 " + "l1=0.384" + "l2=0.0974 f=-0.672 shape=(1, 9000, 1)
logits [[ 2.9223995  -0.92187357  1.7835329  -6.4731545 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.25 " + "l1=7.25" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.9545155 -2.2959113  2.8769765 -7.886645 ]]
Iteration 100 of 1000: loss=2.89 " + "l1=0.774" + "l2=2.11 f=-0.678 shape=(1, 9000, 1)
logits [[ 1.0545156  0.2801244  1.042922  -5.0906134]]
Iteration 200 of 1000: loss=1.48 " + "l1=0.042" + "l2=1.44 f=-0.729 shape=(1, 9000, 1)
logits [[ 0.73335993  0.6913297   0.7261062  -5.066192  ]]
Iteration 300 of 1000: loss=1.14 " + "l1=0" + "l2=1.14 f=-0.754 shape=(1, 9000, 1)
logits [[ 0.66587853  0.70697564  0.6903082  -5.0794787 ]]
Iteration 400 of 1000: loss=0.997 " + "l1=0" + "l2=0.997 f=-0.751 shape=(1, 9000, 1)
logits [[ 0.6865566  0.6872073  0.6797719 -5.057096 ]]
Iteration 500 of 1000: loss=0.928 " + "l1=0" + "l2=0.928 f=-0.753 shape=(1, 9000, 1)
logits [[ 0.65025145  0.679593    0.67706543 -5.0199165 ]]
Iteration 600 of 1000: loss=0.851 " + "l1=0" + "l2=0.851 f=-0.753 shape=(1, 9000, 1)
logits [[ 0.6590823  0.668263   0.6642017 -5.0029063]]
Iteration 700 of 1000: loss=0.785 " + "l1=0" + "l2=0.785 f=-0.756 shape=(1, 9000, 1)
logits [[ 0.6428255   0.6678789   0.64676785 -4.979611  ]]
Iteration 800 of 1000: loss=0.729 " + "l1=0" + "l2=0.729 f=-0.763 shape=(1, 9000, 1)
logits [[ 0.5752135  0.6667152  0.644556  -4.9387865]]
Iteration 900 of 1000: loss=0.66 " + "l1=0.00623" + "l2=0.654 f=-0.759 shape=(1, 9000, 1)
logits [[ 0.63411057  0.6292384   0.63546675 -4.9366894 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.99 " + "l1=3.99" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.9545155 -2.2959113  2.8769765 -7.886645 ]]
Iteration 100 of 1000: loss=2.65 " + "l1=1.85" + "l2=0.797 f=-0.607 shape=(1, 9000, 1)
logits [[ 2.5813391 -0.7900296  1.7181001 -5.9391475]]
Iteration 200 of 1000: loss=1.57 " + "l1=0.449" + "l2=1.12 f=-0.695 shape=(1, 9000, 1)
logits [[ 1.1214912  0.306019   1.1119808 -5.320719 ]]
Iteration 300 of 1000: loss=0.917 " + "l1=0.0148" + "l2=0.902 f=-0.761 shape=(1, 9000, 1)
logits [[ 0.70328754  0.67635334  0.694628   -5.119064  ]]
Iteration 400 of 1000: loss=0.73 " + "l1=0.0026" + "l2=0.727 f=-0.77 shape=(1, 9000, 1)
logits [[ 0.65595627  0.67111236  0.67583674 -5.08316   ]]
Iteration 500 of 1000: loss=0.634 " + "l1=0" + "l2=0.634 f=-0.77 shape=(1, 9000, 1)
logits [[ 0.64903396  0.66421753  0.6533486  -5.046784  ]]
Iteration 600 of 1000: loss=0.58 " + "l1=0.00519" + "l2=0.575 f=-0.769 shape=(1, 9000, 1)
logits [[ 0.63822323  0.63985944  0.64928687 -5.003631  ]]
Iteration 700 of 1000: loss=0.542 " + "l1=0.00319" + "l2=0.539 f=-0.769 shape=(1, 9000, 1)
logits [[ 0.61238563  0.6288933   0.6346981  -4.951039  ]]
Iteration 800 of 1000: loss=0.512 " + "l1=0" + "l2=0.512 f=-0.768 shape=(1, 9000, 1)
logits [[ 0.59234154  0.6183726   0.61513567 -4.8969755 ]]
Iteration 900 of 1000: loss=0.493 " + "l1=0" + "l2=0.493 f=-0.768 shape=(1, 9000, 1)
logits [[ 0.57070255  0.6123989   0.6026867  -4.856211  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.36 " + "l1=2.36" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.9545155 -2.2959113  2.8769765 -7.886645 ]]
Iteration 100 of 1000: loss=1.91 " + "l1=1.65" + "l2=0.266 f=-0.585 shape=(1, 9000, 1)
logits [[ 3.6760123 -1.3930875  2.1536515 -6.7784586]]
Iteration 200 of 1000: loss=1.64 " + "l1=1.23" + "l2=0.413 f=-0.613 shape=(1, 9000, 1)
logits [[ 2.8413446 -0.9306005  1.7982645 -6.159117 ]]
Iteration 300 of 1000: loss=1.25 " + "l1=0.595" + "l2=0.66 f=-0.676 shape=(1, 9000, 1)
logits [[ 1.66119    -0.16938885  1.4176693  -5.6152806 ]]
Iteration 400 of 1000: loss=0.799 " + "l1=0.195" + "l2=0.604 f=-0.752 shape=(1, 9000, 1)
logits [[ 0.96330905  0.3631523   0.9513064  -5.284613  ]]
Iteration 500 of 1000: loss=0.633 " + "l1=0.0875" + "l2=0.545 f=-0.763 shape=(1, 9000, 1)
logits [[ 0.7743469  0.5053261  0.7746733 -5.1080065]]
Iteration 600 of 1000: loss=0.564 " + "l1=0.0513" + "l2=0.512 f=-0.763 shape=(1, 9000, 1)
logits [[ 0.70520526  0.5472906   0.69802564 -5.0037723 ]]
Iteration 700 of 1000: loss=0.523 " + "l1=0.0188" + "l2=0.504 f=-0.763 shape=(1, 9000, 1)
logits [[ 0.6290612   0.5760385   0.63397336 -4.8897166 ]]
Iteration 800 of 1000: loss=0.482 " + "l1=0.00234" + "l2=0.48 f=-0.761 shape=(1, 9000, 1)
logits [[ 0.5703447  0.5631392  0.5685641 -4.7449203]]
Iteration 900 of 1000: loss=0.451 " + "l1=0.00263" + "l2=0.448 f=-0.761 shape=(1, 9000, 1)
logits [[ 0.54515624  0.54238874  0.5504726  -4.6808715 ]]
--- 315.5957419872284 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0208 " + "l1=0.0208" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.9545155 -2.2959113  2.8769765 -7.886645 ]]
Iteration 100 of 1000: loss=0.0206 " + "l1=0.0204" + "l2=0.000208 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.928096  -2.306854   2.892504  -7.8685117]]
Iteration 200 of 1000: loss=0.0205 " + "l1=0.0203" + "l2=0.000171 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.9264917 -2.3070517  2.8929915 -7.8680887]]
Iteration 300 of 1000: loss=0.0205 " + "l1=0.0203" + "l2=0.000219 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.9230337 -2.3084075  2.894947  -7.866154 ]]
Iteration 400 of 1000: loss=0.0205 " + "l1=0.0202" + "l2=0.00026 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.919415  -2.3098536  2.8970487 -7.8639975]]
Iteration 500 of 1000: loss=0.0205 " + "l1=0.0202" + "l2=0.00031 f=-0.59 shape=(1, 9000, 1)
logits [[ 4.91585   -2.3112142  2.8990872 -7.861878 ]]
Iteration 600 of 1000: loss=0.0205 " + "l1=0.0201" + "l2=0.000423 f=-0.59 shape=(1, 9000, 1)
logits [[ 4.9124675 -2.3125196  2.9010353 -7.859878 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.208 " + "l1=0.208" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.9545155 -2.2959113  2.8769765 -7.886645 ]]
Iteration 100 of 1000: loss=0.188 " + "l1=0.176" + "l2=0.0118 f=-0.601 shape=(1, 9000, 1)
logits [[ 4.7515697 -2.3823833  2.9939995 -7.7665577]]
Iteration 200 of 1000: loss=0.179 " + "l1=0.162" + "l2=0.0172 f=-0.609 shape=(1, 9000, 1)
logits [[ 4.666798  -2.426655   3.0454257 -7.7233815]]
Iteration 300 of 1000: loss=0.172 " + "l1=0.151" + "l2=0.0207 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.589498  -2.4501812  3.0758107 -7.67199  ]]
Iteration 400 of 1000: loss=0.165 " + "l1=0.141" + "l2=0.0243 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.5123606 -2.4719453  3.1018364 -7.619066 ]]
Iteration 500 of 1000: loss=0.158 " + "l1=0.131" + "l2=0.0276 f=-0.625 shape=(1, 9000, 1)
logits [[ 4.4342484 -2.4941812  3.1259854 -7.5655537]]
Iteration 600 of 1000: loss=0.151 " + "l1=0.12" + "l2=0.0309 f=-0.631 shape=(1, 9000, 1)
logits [[ 4.343218  -2.5120127  3.1434083 -7.4983673]]
Iteration 700 of 1000: loss=0.143 " + "l1=0.109" + "l2=0.0337 f=-0.636 shape=(1, 9000, 1)
logits [[ 4.2584248 -2.532584   3.165442  -7.4352455]]
Iteration 800 of 1000: loss=0.135 " + "l1=0.0992" + "l2=0.0361 f=-0.639 shape=(1, 9000, 1)
logits [[ 4.1810875 -2.5532794  3.1889954 -7.3723917]]
Iteration 900 of 1000: loss=0.128 " + "l1=0.0895" + "l2=0.0384 f=-0.642 shape=(1, 9000, 1)
logits [[ 4.1104693 -2.5788019  3.2149866 -7.3154683]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.08 " + "l1=2.08" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.9545155 -2.2959113  2.8769765 -7.886645 ]]
Iteration 100 of 1000: loss=0.463 " + "l1=0" + "l2=0.463 f=-0.708 shape=(1, 9000, 1)
logits [[ 3.5030398 -2.8280458  3.5088737 -7.014824 ]]
Iteration 200 of 1000: loss=0.301 " + "l1=0" + "l2=0.301 f=-0.705 shape=(1, 9000, 1)
logits [[ 3.4427397 -2.7633488  3.4430008 -6.9406633]]
Iteration 300 of 1000: loss=0.236 " + "l1=0" + "l2=0.236 f=-0.703 shape=(1, 9000, 1)
logits [[ 3.3917174 -2.7287621  3.3956544 -6.870358 ]]
Iteration 400 of 1000: loss=0.202 " + "l1=0" + "l2=0.202 f=-0.697 shape=(1, 9000, 1)
logits [[ 3.3477054 -2.6988878  3.36374   -6.8024254]]
Iteration 500 of 1000: loss=0.179 " + "l1=0" + "l2=0.179 f=-0.691 shape=(1, 9000, 1)
logits [[ 3.3129156 -2.675697   3.3426306 -6.7454042]]
Iteration 600 of 1000: loss=0.16 " + "l1=0" + "l2=0.16 f=-0.688 shape=(1, 9000, 1)
logits [[ 3.3017933 -2.6664462  3.3298688 -6.7160463]]
Iteration 700 of 1000: loss=0.144 " + "l1=0" + "l2=0.144 f=-0.684 shape=(1, 9000, 1)
logits [[ 3.303873  -2.6654084  3.322954  -6.695606 ]]
Iteration 800 of 1000: loss=0.128 " + "l1=0" + "l2=0.128 f=-0.677 shape=(1, 9000, 1)
logits [[ 3.315041  -2.664669   3.3191354 -6.677438 ]]
Iteration 900 of 1000: loss=0.122 " + "l1=0.0055" + "l2=0.116 f=-0.673 shape=(1, 9000, 1)
logits [[ 3.323392  -2.663278   3.3178904 -6.6695023]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.14 " + "l1=1.14" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.9545155 -2.2959113  2.8769765 -7.886645 ]]
Iteration 100 of 1000: loss=0.492 " + "l1=0.127" + "l2=0.364 f=-0.697 shape=(1, 9000, 1)
logits [[ 3.6947105 -2.8067312  3.4630878 -7.1407385]]
Iteration 200 of 1000: loss=0.275 " + "l1=0.00613" + "l2=0.269 f=-0.702 shape=(1, 9000, 1)
logits [[ 3.4333763 -2.742957   3.4222295 -6.9215703]]
Iteration 300 of 1000: loss=0.208 " + "l1=0.00116" + "l2=0.207 f=-0.699 shape=(1, 9000, 1)
logits [[ 3.3677502 -2.7008245  3.3656476 -6.8305383]]
Iteration 400 of 1000: loss=0.177 " + "l1=0" + "l2=0.177 f=-0.696 shape=(1, 9000, 1)
logits [[ 3.3415015 -2.6919763  3.3498335 -6.7834044]]
Iteration 500 of 1000: loss=0.158 " + "l1=0" + "l2=0.158 f=-0.691 shape=(1, 9000, 1)
logits [[ 3.3328934 -2.6942499  3.346785  -6.751249 ]]
Iteration 600 of 1000: loss=0.141 " + "l1=0.00283" + "l2=0.138 f=-0.685 shape=(1, 9000, 1)
logits [[ 3.338691  -2.691447   3.3335423 -6.719842 ]]
Iteration 700 of 1000: loss=0.125 " + "l1=0.00122" + "l2=0.124 f=-0.678 shape=(1, 9000, 1)
logits [[ 3.3390374 -2.7017496  3.3368137 -6.684724 ]]
Iteration 800 of 1000: loss=0.113 " + "l1=0" + "l2=0.113 f=-0.675 shape=(1, 9000, 1)
logits [[ 3.3338952 -2.7154691  3.344857  -6.6651187]]
Iteration 900 of 1000: loss=0.102 " + "l1=0.000121" + "l2=0.101 f=-0.672 shape=(1, 9000, 1)
logits [[ 3.3392556 -2.7147107  3.3390353 -6.651876 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.675 " + "l1=0.675" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.9545155 -2.2959113  2.8769765 -7.886645 ]]
Iteration 100 of 1000: loss=0.444 " + "l1=0.307" + "l2=0.137 f=-0.658 shape=(1, 9000, 1)
logits [[ 4.2130957 -2.6369655  3.2681134 -7.4767785]]
Iteration 200 of 1000: loss=0.335 " + "l1=0.152" + "l2=0.183 f=-0.685 shape=(1, 9000, 1)
logits [[ 3.812123  -2.7156608  3.3445022 -7.180922 ]]
Iteration 300 of 1000: loss=0.23 " + "l1=0.00256" + "l2=0.228 f=-0.706 shape=(1, 9000, 1)
logits [[ 3.4017866 -2.7361286  3.3939018 -6.8854976]]
Iteration 400 of 1000: loss=0.176 " + "l1=0.000324" + "l2=0.175 f=-0.7 shape=(1, 9000, 1)
logits [[ 3.3540058 -2.7006326  3.3530102 -6.808314 ]]
Iteration 500 of 1000: loss=0.151 " + "l1=0" + "l2=0.151 f=-0.694 shape=(1, 9000, 1)
logits [[ 3.3479717 -2.7076886  3.3532813 -6.7712355]]
Iteration 600 of 1000: loss=0.13 " + "l1=0.000576" + "l2=0.129 f=-0.685 shape=(1, 9000, 1)
logits [[ 3.3547883 -2.7149377  3.3530169 -6.7347054]]
Iteration 700 of 1000: loss=0.112 " + "l1=0" + "l2=0.112 f=-0.677 shape=(1, 9000, 1)
logits [[ 3.35811   -2.731365   3.3626907 -6.696879 ]]
Iteration 800 of 1000: loss=0.098 " + "l1=0" + "l2=0.098 f=-0.67 shape=(1, 9000, 1)
logits [[ 3.3610268 -2.7451441  3.372006  -6.6659546]]
Iteration 900 of 1000: loss=0.087 " + "l1=0" + "l2=0.087 f=-0.664 shape=(1, 9000, 1)
logits [[ 3.3633087 -2.7488     3.380202  -6.6498785]]
--- 293.5156707763672 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.128 " + "l1=0.128" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.9545155 -2.2959113  2.8769765 -7.886645 ]]
Iteration 100 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.000535 f=-0.585 shape=(1, 9000, 1)
logits [[ 4.8963327 -2.2751784  2.8559747 -7.815736 ]]
Iteration 200 of 1000: loss=0.127 " + "l1=0.127" + "l2=0.000559 f=-0.585 shape=(1, 9000, 1)
logits [[ 4.88693   -2.2712579  2.8523245 -7.8065524]]
Iteration 300 of 1000: loss=0.127 " + "l1=0.127" + "l2=0.000658 f=-0.585 shape=(1, 9000, 1)
logits [[ 4.875243  -2.2666843  2.8479767 -7.794685 ]]
Iteration 400 of 1000: loss=0.127 " + "l1=0.126" + "l2=0.000793 f=-0.584 shape=(1, 9000, 1)
logits [[ 4.8639555 -2.2623098  2.8438816 -7.7833385]]
Iteration 500 of 1000: loss=0.127 " + "l1=0.126" + "l2=0.000924 f=-0.584 shape=(1, 9000, 1)
logits [[ 4.853526  -2.2582502  2.84018   -7.773044 ]]
Iteration 600 of 1000: loss=0.127 " + "l1=0.126" + "l2=0.00101 f=-0.584 shape=(1, 9000, 1)
logits [[ 4.843665  -2.2544158  2.8368263 -7.7636147]]
Iteration 700 of 1000: loss=0.127 " + "l1=0.126" + "l2=0.00113 f=-0.584 shape=(1, 9000, 1)
logits [[ 4.834297  -2.2507803  2.8336895 -7.75484  ]]
Iteration 800 of 1000: loss=0.127 " + "l1=0.126" + "l2=0.00128 f=-0.584 shape=(1, 9000, 1)
logits [[ 4.8252335 -2.247282   2.8307366 -7.7466207]]
Iteration 900 of 1000: loss=0.127 " + "l1=0.126" + "l2=0.00143 f=-0.585 shape=(1, 9000, 1)
logits [[ 4.8160663 -2.2439003  2.8277383 -7.738631 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.28 " + "l1=1.28" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.9545155 -2.2959113  2.8769765 -7.886645 ]]
Iteration 100 of 1000: loss=1.21 " + "l1=1.17" + "l2=0.0415 f=-0.569 shape=(1, 9000, 1)
logits [[ 4.4277945 -2.1193109  2.6952584 -7.2809467]]
Iteration 200 of 1000: loss=1.18 " + "l1=1.11" + "l2=0.0617 f=-0.57 shape=(1, 9000, 1)
logits [[ 4.148216  -2.0359526  2.6014812 -6.995315 ]]
Iteration 300 of 1000: loss=1.14 " + "l1=1.06" + "l2=0.0807 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.862765  -1.9625686  2.518903  -6.7207937]]
Iteration 400 of 1000: loss=1.11 " + "l1=1.01" + "l2=0.0987 f=-0.577 shape=(1, 9000, 1)
logits [[ 3.6161313 -1.890315   2.4503944 -6.4849725]]
Iteration 500 of 1000: loss=1.08 " + "l1=0.967" + "l2=0.114 f=-0.582 shape=(1, 9000, 1)
logits [[ 3.3872628 -1.8121585  2.3797724 -6.283232 ]]
Iteration 600 of 1000: loss=1.06 " + "l1=0.937" + "l2=0.123 f=-0.581 shape=(1, 9000, 1)
logits [[ 3.2324624 -1.749899   2.329427  -6.134795 ]]
Iteration 700 of 1000: loss=1.04 " + "l1=0.907" + "l2=0.131 f=-0.578 shape=(1, 9000, 1)
logits [[ 3.0870626 -1.7011425  2.287946  -5.98463  ]]
Iteration 800 of 1000: loss=1.02 " + "l1=0.88" + "l2=0.136 f=-0.573 shape=(1, 9000, 1)
logits [[ 2.9541035 -1.6631013  2.2600331 -5.8436375]]
Iteration 900 of 1000: loss=0.994 " + "l1=0.856" + "l2=0.138 f=-0.57 shape=(1, 9000, 1)
logits [[ 2.840873  -1.6243646  2.2267375 -5.723697 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.8 " + "l1=12.8" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.9545155 -2.2959113  2.8769765 -7.886645 ]]
Iteration 100 of 1000: loss=6.66 " + "l1=4.04" + "l2=2.62 f=-0.468 shape=(1, 9000, 1)
logits [[ 0.8958889 -0.5358638  0.9037699 -3.1358001]]
Iteration 200 of 1000: loss=4.86 " + "l1=1.89" + "l2=2.97 f=-0.424 shape=(1, 9000, 1)
logits [[ 0.00909852 -0.06000724  0.12150076 -1.7666544 ]]
Iteration 300 of 1000: loss=3.42 " + "l1=0.569" + "l2=2.85 f=-0.375 shape=(1, 9000, 1)
logits [[-0.41545886 -0.17144448 -0.17132956 -0.7401747 ]]
Iteration 400 of 1000: loss=2.48 " + "l1=0.0134" + "l2=2.46 f=-0.349 shape=(1, 9000, 1)
logits [[-0.5447012  -0.29894638 -0.269472   -0.28288865]]
Iteration 500 of 1000: loss=2.04 " + "l1=0.00719" + "l2=2.03 f=-0.366 shape=(1, 9000, 1)
logits [[-0.5668884  -0.32593644 -0.28177023 -0.28896332]]
Iteration 600 of 1000: loss=1.8 " + "l1=0" + "l2=1.8 f=-0.367 shape=(1, 9000, 1)
logits [[-0.5661455  -0.3743198  -0.26766127 -0.2600925 ]]
Iteration 700 of 1000: loss=1.63 " + "l1=0" + "l2=1.63 f=-0.366 shape=(1, 9000, 1)
logits [[-0.5673245  -0.40742356 -0.2461943  -0.24130577]]
Iteration 800 of 1000: loss=1.5 " + "l1=0" + "l2=1.5 f=-0.365 shape=(1, 9000, 1)
logits [[-0.5793168  -0.43397275 -0.2311439  -0.21431154]]
Iteration 900 of 1000: loss=1.39 " + "l1=0" + "l2=1.39 f=-0.361 shape=(1, 9000, 1)
logits [[-0.59393585 -0.4488143  -0.2266857  -0.17613846]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.06 " + "l1=7.06" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.9545155 -2.2959113  2.8769765 -7.886645 ]]
Iteration 100 of 1000: loss=4.7 " + "l1=3.31" + "l2=1.4 f=-0.552 shape=(1, 9000, 1)
logits [[ 1.649353  -1.1485898  1.6529567 -4.3608336]]
Iteration 200 of 1000: loss=3.81 " + "l1=2.41" + "l2=1.39 f=-0.487 shape=(1, 9000, 1)
logits [[ 1.0173616  -0.62114125  1.0190147  -3.3650134 ]]
Iteration 300 of 1000: loss=3.18 " + "l1=1.56" + "l2=1.63 f=-0.467 shape=(1, 9000, 1)
logits [[ 0.37955233 -0.25547993  0.4190273  -2.409173  ]]
Iteration 400 of 1000: loss=2.57 " + "l1=0.861" + "l2=1.71 f=-0.432 shape=(1, 9000, 1)
logits [[-0.06525168 -0.25201303  0.07703    -1.4893113 ]]
Iteration 500 of 1000: loss=2.1 " + "l1=0.342" + "l2=1.75 f=-0.392 shape=(1, 9000, 1)
logits [[-0.38278517 -0.2839231  -0.13996445 -0.7617593 ]]
Iteration 600 of 1000: loss=1.67 " + "l1=0.0116" + "l2=1.66 f=-0.363 shape=(1, 9000, 1)
logits [[-0.6078607  -0.28860375 -0.2668462  -0.28797436]]
Iteration 700 of 1000: loss=1.39 " + "l1=0.00359" + "l2=1.38 f=-0.353 shape=(1, 9000, 1)
logits [[-0.60136116 -0.38341677 -0.21008551 -0.21660572]]
Iteration 800 of 1000: loss=1.25 " + "l1=0.000411" + "l2=1.25 f=-0.346 shape=(1, 9000, 1)
logits [[-0.58090526 -0.40900567 -0.19662169 -0.19736883]]
Iteration 900 of 1000: loss=1.16 " + "l1=0.00433" + "l2=1.16 f=-0.343 shape=(1, 9000, 1)
logits [[-0.5714364  -0.4229222  -0.18409626 -0.1919766 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.17 " + "l1=4.17" + "l2=0 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.9545155 -2.2959113  2.8769765 -7.886645 ]]
Iteration 100 of 1000: loss=3.36 " + "l1=2.85" + "l2=0.51 f=-0.544 shape=(1, 9000, 1)
logits [[ 3.0305445 -1.6426136  2.1748548 -5.738546 ]]
Iteration 200 of 1000: loss=2.83 " + "l1=2.05" + "l2=0.783 f=-0.564 shape=(1, 9000, 1)
logits [[ 1.7494284 -1.1863724  1.7332574 -4.55284  ]]
Iteration 300 of 1000: loss=2.52 " + "l1=1.72" + "l2=0.8 f=-0.53 shape=(1, 9000, 1)
logits [[ 1.3536298  -0.88773704  1.3542007  -3.9397502 ]]
Iteration 400 of 1000: loss=2.26 " + "l1=1.43" + "l2=0.825 f=-0.521 shape=(1, 9000, 1)
logits [[ 0.9900626 -0.674691   1.0013692 -3.3997757]]
Iteration 500 of 1000: loss=1.99 " + "l1=1.11" + "l2=0.885 f=-0.487 shape=(1, 9000, 1)
logits [[ 0.6731099  -0.5752727   0.67881274 -2.725755  ]]
Iteration 600 of 1000: loss=1.68 " + "l1=0.799" + "l2=0.884 f=-0.459 shape=(1, 9000, 1)
logits [[ 0.34513772 -0.4396635   0.35703018 -2.1003392 ]]
Iteration 700 of 1000: loss=1.42 " + "l1=0.564" + "l2=0.86 f=-0.449 shape=(1, 9000, 1)
logits [[ 0.08444814 -0.38205487  0.11745556 -1.6167827 ]]
Iteration 800 of 1000: loss=1.24 " + "l1=0.411" + "l2=0.834 f=-0.433 shape=(1, 9000, 1)
logits [[-0.13922445 -0.31585    -0.00521425 -1.2706665 ]]
Iteration 900 of 1000: loss=1.11 " + "l1=0.268" + "l2=0.847 f=-0.42 shape=(1, 9000, 1)
logits [[-0.38098094 -0.26680258 -0.10392398 -0.9270178 ]]
--- 318.7844891548157 seconds ---
Adv result:3
Loading record A00253
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0715 " + "l1=0.0715" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 5.063864 -2.086223  2.830675 -8.216023]]
Iteration 100 of 1000: loss=0.071 " + "l1=0.0707" + "l2=0.000331 f=-0.603 shape=(1, 9000, 1)
logits [[ 5.0063334 -2.0608978  2.807409  -8.162981 ]]
Iteration 200 of 1000: loss=0.0708 " + "l1=0.0705" + "l2=0.000344 f=-0.603 shape=(1, 9000, 1)
logits [[ 4.992468 -2.057168  2.802865 -8.150322]]
Iteration 300 of 1000: loss=0.0707 " + "l1=0.0703" + "l2=0.000413 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.974924  -2.0522027  2.796959  -8.133959 ]]
Iteration 400 of 1000: loss=0.0705 " + "l1=0.07" + "l2=0.000492 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.956519  -2.0472028  2.791146  -8.116704 ]]
Iteration 500 of 1000: loss=0.0704 " + "l1=0.0698" + "l2=0.000565 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.938051  -2.0420768  2.7856731 -8.099584 ]]
Iteration 600 of 1000: loss=0.0703 " + "l1=0.0696" + "l2=0.000729 f=-0.605 shape=(1, 9000, 1)
logits [[ 4.9198637 -2.0369437  2.7805085 -8.082797 ]]
Iteration 700 of 1000: loss=0.0702 " + "l1=0.0693" + "l2=0.000826 f=-0.605 shape=(1, 9000, 1)
logits [[ 4.9021153 -2.0317125  2.7752967 -8.066349 ]]
Iteration 800 of 1000: loss=0.0701 " + "l1=0.0691" + "l2=0.00101 f=-0.605 shape=(1, 9000, 1)
logits [[ 4.8856244 -2.0264173  2.7702646 -8.050693 ]]
Iteration 900 of 1000: loss=0.07 " + "l1=0.0689" + "l2=0.00112 f=-0.605 shape=(1, 9000, 1)
logits [[ 4.869617  -2.0214736  2.7658386 -8.035462 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.715 " + "l1=0.715" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 5.063864 -2.086223  2.830675 -8.216023]]
Iteration 100 of 1000: loss=0.67 " + "l1=0.646" + "l2=0.0243 f=-0.606 shape=(1, 9000, 1)
logits [[ 4.5925703 -1.8638408  2.636261  -7.788235 ]]
Iteration 200 of 1000: loss=0.65 " + "l1=0.618" + "l2=0.0312 f=-0.607 shape=(1, 9000, 1)
logits [[ 4.385141  -1.7996186  2.5743852 -7.587975 ]]
Iteration 300 of 1000: loss=0.63 " + "l1=0.592" + "l2=0.0374 f=-0.605 shape=(1, 9000, 1)
logits [[ 4.1741037 -1.748667   2.5225174 -7.3687115]]
Iteration 400 of 1000: loss=0.61 " + "l1=0.566" + "l2=0.044 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.9569395 -1.7044262  2.4659984 -7.135222 ]]
Iteration 500 of 1000: loss=0.591 " + "l1=0.54" + "l2=0.0505 f=-0.601 shape=(1, 9000, 1)
logits [[ 3.744103  -1.658745   2.4034004 -6.891809 ]]
Iteration 600 of 1000: loss=0.571 " + "l1=0.514" + "l2=0.0566 f=-0.594 shape=(1, 9000, 1)
logits [[ 3.5297554 -1.6132978  2.346333  -6.640378 ]]
Iteration 700 of 1000: loss=0.549 " + "l1=0.485" + "l2=0.0639 f=-0.586 shape=(1, 9000, 1)
logits [[ 3.293912  -1.5548365  2.2725022 -6.3561263]]
Iteration 800 of 1000: loss=0.525 " + "l1=0.451" + "l2=0.0737 f=-0.586 shape=(1, 9000, 1)
logits [[ 3.020463  -1.4884973  2.1747506 -6.052609 ]]
Iteration 900 of 1000: loss=0.505 " + "l1=0.425" + "l2=0.0801 f=-0.586 shape=(1, 9000, 1)
logits [[ 2.8193004 -1.428614   2.0778017 -5.814354 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.15 " + "l1=7.15" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 5.063864 -2.086223  2.830675 -8.216023]]
Iteration 100 of 1000: loss=3.65 " + "l1=2.16" + "l2=1.49 f=-0.596 shape=(1, 9000, 1)
logits [[ 1.5156292  -0.64435166  1.5055528  -4.7626233 ]]
Iteration 200 of 1000: loss=2.71 " + "l1=1.37" + "l2=1.34 f=-0.548 shape=(1, 9000, 1)
logits [[ 1.0083879 -0.3273674  1.0448693 -3.916211 ]]
Iteration 300 of 1000: loss=2.17 " + "l1=0.983" + "l2=1.18 f=-0.522 shape=(1, 9000, 1)
logits [[ 0.7840363  -0.19575992  0.78734905 -3.4628646 ]]
Iteration 400 of 1000: loss=1.86 " + "l1=0.688" + "l2=1.17 f=-0.502 shape=(1, 9000, 1)
logits [[ 0.5795556  -0.09909113  0.589091   -3.0777283 ]]
Iteration 500 of 1000: loss=1.64 " + "l1=0.487" + "l2=1.15 f=-0.476 shape=(1, 9000, 1)
logits [[ 0.42769754 -0.0381541   0.4492195  -2.7425585 ]]
Iteration 600 of 1000: loss=1.49 " + "l1=0.356" + "l2=1.13 f=-0.449 shape=(1, 9000, 1)
logits [[ 0.32359216 -0.00289406  0.35262227 -2.4686131 ]]
Iteration 700 of 1000: loss=1.36 " + "l1=0.225" + "l2=1.14 f=-0.425 shape=(1, 9000, 1)
logits [[ 0.24925679  0.03023368  0.25515667 -2.2354786 ]]
Iteration 800 of 1000: loss=1.22 " + "l1=0.0481" + "l2=1.17 f=-0.412 shape=(1, 9000, 1)
logits [[ 0.12223171  0.09774992  0.14588134 -2.0152974 ]]
Iteration 900 of 1000: loss=1.08 " + "l1=0.00163" + "l2=1.08 f=-0.406 shape=(1, 9000, 1)
logits [[ 0.11337292  0.12084278  0.12247074 -1.9786961 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.93 " + "l1=3.93" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 5.063864 -2.086223  2.830675 -8.216023]]
Iteration 100 of 1000: loss=2.69 " + "l1=2.04" + "l2=0.646 f=-0.591 shape=(1, 9000, 1)
logits [[ 2.5942876 -1.1207511  1.9975466 -5.8353868]]
Iteration 200 of 1000: loss=2.03 " + "l1=1.32" + "l2=0.716 f=-0.561 shape=(1, 9000, 1)
logits [[ 1.6104136 -0.7818342  1.5853091 -4.6580276]]
Iteration 300 of 1000: loss=1.67 " + "l1=0.98" + "l2=0.691 f=-0.523 shape=(1, 9000, 1)
logits [[ 1.2102063 -0.5515166  1.230498  -3.9801245]]
Iteration 400 of 1000: loss=1.46 " + "l1=0.784" + "l2=0.672 f=-0.502 shape=(1, 9000, 1)
logits [[ 0.99772537 -0.4277692   0.9984048  -3.5783443 ]]
Iteration 500 of 1000: loss=1.33 " + "l1=0.675" + "l2=0.651 f=-0.495 shape=(1, 9000, 1)
logits [[ 0.85366154 -0.37166208  0.85470337 -3.3185601 ]]
Iteration 600 of 1000: loss=1.21 " + "l1=0.573" + "l2=0.64 f=-0.492 shape=(1, 9000, 1)
logits [[ 0.73357064 -0.30774426  0.7348416  -3.1286933 ]]
Iteration 700 of 1000: loss=1.13 " + "l1=0.497" + "l2=0.638 f=-0.484 shape=(1, 9000, 1)
logits [[ 0.6388817  -0.26521796  0.63626045 -2.947356  ]]
Iteration 800 of 1000: loss=1.07 " + "l1=0.426" + "l2=0.642 f=-0.471 shape=(1, 9000, 1)
logits [[ 0.5489725  -0.2258645   0.54711795 -2.7523656 ]]
Iteration 900 of 1000: loss=1.01 " + "l1=0.356" + "l2=0.649 f=-0.455 shape=(1, 9000, 1)
logits [[ 0.4491742  -0.18955639  0.45806786 -2.5366042 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.54 " + "l1=5.54" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 5.063864 -2.086223  2.830675 -8.216023]]
Iteration 100 of 1000: loss=3.22 " + "l1=2.04" + "l2=1.19 f=-0.592 shape=(1, 9000, 1)
logits [[ 1.768945   -0.85902107  1.7493023  -5.0268555 ]]
Iteration 200 of 1000: loss=2.41 " + "l1=1.32" + "l2=1.09 f=-0.562 shape=(1, 9000, 1)
logits [[ 1.201398   -0.48786128  1.2183764  -4.1788936 ]]
Iteration 300 of 1000: loss=1.94 " + "l1=0.951" + "l2=0.99 f=-0.534 shape=(1, 9000, 1)
logits [[ 0.92260075 -0.2968377   0.9296282  -3.6899102 ]]
Iteration 400 of 1000: loss=1.7 " + "l1=0.747" + "l2=0.948 f=-0.512 shape=(1, 9000, 1)
logits [[ 0.74691176 -0.20930624  0.7542789  -3.3392084 ]]
Iteration 500 of 1000: loss=1.52 " + "l1=0.589" + "l2=0.934 f=-0.497 shape=(1, 9000, 1)
logits [[ 0.5825106  -0.13793854  0.62253547 -3.0551615 ]]
Iteration 600 of 1000: loss=1.38 " + "l1=0.489" + "l2=0.893 f=-0.478 shape=(1, 9000, 1)
logits [[ 0.5131498  -0.1122238   0.51920944 -2.831934  ]]
Iteration 700 of 1000: loss=1.26 " + "l1=0.358" + "l2=0.898 f=-0.455 shape=(1, 9000, 1)
logits [[ 0.39126652 -0.05857715  0.40342227 -2.5546255 ]]
Iteration 800 of 1000: loss=1.17 " + "l1=0.244" + "l2=0.927 f=-0.44 shape=(1, 9000, 1)
logits [[ 0.3015572  -0.00750604  0.30691406 -2.361389  ]]
Iteration 900 of 1000: loss=1.11 " + "l1=0.155" + "l2=0.95 f=-0.43 shape=(1, 9000, 1)
logits [[ 0.21607424  0.03306447  0.23308836 -2.2019925 ]]
--- 315.4221773147583 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0223 " + "l1=0.0223" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 5.063864 -2.086223  2.830675 -8.216023]]
Iteration 100 of 1000: loss=0.0221 " + "l1=0.0219" + "l2=0.000181 f=-0.603 shape=(1, 9000, 1)
logits [[ 5.026479  -2.0859153  2.833526  -8.186956 ]]
Iteration 200 of 1000: loss=0.0221 " + "l1=0.0219" + "l2=0.000171 f=-0.603 shape=(1, 9000, 1)
logits [[ 5.0203776 -2.0850785  2.8324382 -8.181363 ]]
Iteration 300 of 1000: loss=0.022 " + "l1=0.0218" + "l2=0.000202 f=-0.604 shape=(1, 9000, 1)
logits [[ 5.0111833 -2.0841408  2.8315337 -8.1734295]]
Iteration 400 of 1000: loss=0.022 " + "l1=0.0217" + "l2=0.000245 f=-0.604 shape=(1, 9000, 1)
logits [[ 5.001358  -2.0830262  2.830434  -8.164995 ]]
Iteration 500 of 1000: loss=0.022 " + "l1=0.0216" + "l2=0.000336 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.9911094 -2.0816994  2.8290594 -8.156323 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.223 " + "l1=0.223" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 5.063864 -2.086223  2.830675 -8.216023]]
Iteration 100 of 1000: loss=0.203 " + "l1=0.193" + "l2=0.0104 f=-0.609 shape=(1, 9000, 1)
logits [[ 4.786169  -2.0788128  2.8574123 -8.002027 ]]
Iteration 200 of 1000: loss=0.195 " + "l1=0.18" + "l2=0.0144 f=-0.61 shape=(1, 9000, 1)
logits [[ 4.66752   -2.072273   2.8661778 -7.9002333]]
Iteration 300 of 1000: loss=0.185 " + "l1=0.166" + "l2=0.0196 f=-0.608 shape=(1, 9000, 1)
logits [[ 4.537532  -2.0722454  2.8784988 -7.7774606]]
Iteration 400 of 1000: loss=0.175 " + "l1=0.149" + "l2=0.026 f=-0.606 shape=(1, 9000, 1)
logits [[ 4.3889813 -2.0897613  2.901872  -7.626809 ]]
Iteration 500 of 1000: loss=0.166 " + "l1=0.136" + "l2=0.03 f=-0.607 shape=(1, 9000, 1)
logits [[ 4.257555  -2.0797153  2.8931813 -7.4998846]]
Iteration 600 of 1000: loss=0.159 " + "l1=0.125" + "l2=0.034 f=-0.608 shape=(1, 9000, 1)
logits [[ 4.1340537 -2.0731084  2.8877926 -7.379646 ]]
Iteration 700 of 1000: loss=0.152 " + "l1=0.114" + "l2=0.0378 f=-0.61 shape=(1, 9000, 1)
logits [[ 4.0099297 -2.0570552  2.8714252 -7.265771 ]]
Iteration 800 of 1000: loss=0.146 " + "l1=0.105" + "l2=0.0406 f=-0.613 shape=(1, 9000, 1)
logits [[ 3.906232  -2.0418918  2.8548691 -7.1717806]]
Iteration 900 of 1000: loss=0.141 " + "l1=0.0982" + "l2=0.0425 f=-0.616 shape=(1, 9000, 1)
logits [[ 3.818855 -2.027357  2.83661  -7.093617]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.23 " + "l1=2.23" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 5.063864 -2.086223  2.830675 -8.216023]]
Iteration 100 of 1000: loss=0.551 " + "l1=0.0104" + "l2=0.541 f=-0.643 shape=(1, 9000, 1)
logits [[ 3.1821141 -2.2360373  3.1717541 -6.6885586]]
Iteration 200 of 1000: loss=0.362 " + "l1=0" + "l2=0.362 f=-0.639 shape=(1, 9000, 1)
logits [[ 3.1036527 -2.1954439  3.10867   -6.5747695]]
Iteration 300 of 1000: loss=0.274 " + "l1=0.000293" + "l2=0.274 f=-0.636 shape=(1, 9000, 1)
logits [[ 3.0670192 -2.181142   3.0667267 -6.4952645]]
Iteration 400 of 1000: loss=0.238 " + "l1=0" + "l2=0.238 f=-0.637 shape=(1, 9000, 1)
logits [[ 3.011794  -2.1518252  3.025605  -6.4343343]]
Iteration 500 of 1000: loss=0.211 " + "l1=0.00795" + "l2=0.203 f=-0.636 shape=(1, 9000, 1)
logits [[ 3.008656  -2.1294658  3.0007024 -6.423088 ]]
Iteration 600 of 1000: loss=0.184 " + "l1=0" + "l2=0.184 f=-0.638 shape=(1, 9000, 1)
logits [[ 2.9800491 -2.1191552  2.9814167 -6.394161 ]]
Iteration 700 of 1000: loss=0.17 " + "l1=0" + "l2=0.17 f=-0.64 shape=(1, 9000, 1)
logits [[ 2.9411454 -2.10806    2.9567332 -6.3482904]]
Iteration 800 of 1000: loss=0.152 " + "l1=0.00142" + "l2=0.151 f=-0.64 shape=(1, 9000, 1)
logits [[ 2.9243538 -2.0925694  2.9229326 -6.3159833]]
Iteration 900 of 1000: loss=0.139 " + "l1=0" + "l2=0.139 f=-0.643 shape=(1, 9000, 1)
logits [[ 2.8746035 -2.0744917  2.8845518 -6.2550416]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.23 " + "l1=1.23" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 5.063864 -2.086223  2.830675 -8.216023]]
Iteration 100 of 1000: loss=0.581 " + "l1=0.223" + "l2=0.358 f=-0.623 shape=(1, 9000, 1)
logits [[ 3.5370998 -2.1973205  3.1307747 -6.9637194]]
Iteration 200 of 1000: loss=0.324 " + "l1=0.00112" + "l2=0.323 f=-0.636 shape=(1, 9000, 1)
logits [[ 3.0626574 -2.1656175  3.0606194 -6.502617 ]]
Iteration 300 of 1000: loss=0.24 " + "l1=0.00068" + "l2=0.239 f=-0.633 shape=(1, 9000, 1)
logits [[ 3.0012999 -2.1318176  3.000064  -6.403032 ]]
Iteration 400 of 1000: loss=0.197 " + "l1=0" + "l2=0.197 f=-0.636 shape=(1, 9000, 1)
logits [[ 2.9718502 -2.1143568  2.972844  -6.3729005]]
Iteration 500 of 1000: loss=0.173 " + "l1=0" + "l2=0.173 f=-0.638 shape=(1, 9000, 1)
logits [[ 2.925624  -2.0961168  2.9440188 -6.326829 ]]
Iteration 600 of 1000: loss=0.148 " + "l1=0.000367" + "l2=0.147 f=-0.641 shape=(1, 9000, 1)
logits [[ 2.9061658 -2.07931    2.905498  -6.2950287]]
Iteration 700 of 1000: loss=0.13 " + "l1=0" + "l2=0.13 f=-0.646 shape=(1, 9000, 1)
logits [[ 2.8540812 -2.0568233  2.8581936 -6.2377825]]
Iteration 800 of 1000: loss=0.118 " + "l1=0" + "l2=0.118 f=-0.647 shape=(1, 9000, 1)
logits [[ 2.807129 -2.040644  2.818319 -6.174134]]
Iteration 900 of 1000: loss=0.109 " + "l1=0.00568" + "l2=0.104 f=-0.646 shape=(1, 9000, 1)
logits [[ 2.7857814 -2.0248656  2.7754564 -6.1210833]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.726 " + "l1=0.726" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 5.063864 -2.086223  2.830675 -8.216023]]
Iteration 100 of 1000: loss=0.498 " + "l1=0.368" + "l2=0.13 f=-0.611 shape=(1, 9000, 1)
logits [[ 4.132237  -2.114408   2.9988983 -7.4624004]]
Iteration 200 of 1000: loss=0.365 " + "l1=0.191" + "l2=0.174 f=-0.616 shape=(1, 9000, 1)
logits [[ 3.636179  -2.1522036  3.0472043 -6.9949   ]]
Iteration 300 of 1000: loss=0.284 " + "l1=0.0841" + "l2=0.2 f=-0.627 shape=(1, 9000, 1)
logits [[ 3.261288  -2.116983   3.0024967 -6.6531353]]
Iteration 400 of 1000: loss=0.216 " + "l1=0.00808" + "l2=0.208 f=-0.634 shape=(1, 9000, 1)
logits [[ 2.9617913 -2.068237   2.936923  -6.3668175]]
Iteration 500 of 1000: loss=0.168 " + "l1=0.00037" + "l2=0.167 f=-0.636 shape=(1, 9000, 1)
logits [[ 2.9001381 -2.0458639  2.8990004 -6.295514 ]]
Iteration 600 of 1000: loss=0.14 " + "l1=0.00109" + "l2=0.139 f=-0.639 shape=(1, 9000, 1)
logits [[ 2.8466246 -2.0162778  2.8432612 -6.229962 ]]
Iteration 700 of 1000: loss=0.122 " + "l1=0" + "l2=0.122 f=-0.643 shape=(1, 9000, 1)
logits [[ 2.8027968 -2.0070078  2.8053262 -6.172231 ]]
Iteration 800 of 1000: loss=0.109 " + "l1=0.00305" + "l2=0.106 f=-0.644 shape=(1, 9000, 1)
logits [[ 2.7696202 -1.9938971  2.7602484 -6.1108994]]
Iteration 900 of 1000: loss=0.0976 " + "l1=0.00142" + "l2=0.0962 f=-0.645 shape=(1, 9000, 1)
logits [[ 2.726003  -1.9856337  2.7216365 -6.0401535]]
--- 289.31437277793884 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.133 " + "l1=0.133" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 5.063864 -2.086223  2.830675 -8.216023]]
Iteration 100 of 1000: loss=0.132 " + "l1=0.131" + "l2=0.0006 f=-0.601 shape=(1, 9000, 1)
logits [[ 4.9804077 -2.0657687  2.8034723 -8.123887 ]]
Iteration 200 of 1000: loss=0.131 " + "l1=0.131" + "l2=0.000682 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.954363 -2.060693  2.795909 -8.096402]]
Iteration 300 of 1000: loss=0.131 " + "l1=0.13" + "l2=0.000888 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.924429  -2.0548458  2.7874508 -8.064639 ]]
Iteration 400 of 1000: loss=0.13 " + "l1=0.129" + "l2=0.00103 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.8949957 -2.0486386  2.7792306 -8.033161 ]]
Iteration 500 of 1000: loss=0.13 " + "l1=0.129" + "l2=0.00125 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.868676  -2.042012   2.7710679 -8.004611 ]]
Iteration 600 of 1000: loss=0.13 " + "l1=0.128" + "l2=0.00144 f=-0.601 shape=(1, 9000, 1)
logits [[ 4.8430095 -2.0349743  2.7629063 -7.9769235]]
Iteration 700 of 1000: loss=0.129 " + "l1=0.128" + "l2=0.00164 f=-0.601 shape=(1, 9000, 1)
logits [[ 4.816682  -2.0278835  2.7544792 -7.949254 ]]
Iteration 800 of 1000: loss=0.129 " + "l1=0.127" + "l2=0.0019 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.790584  -2.0214388  2.7459862 -7.922532 ]]
Iteration 900 of 1000: loss=0.129 " + "l1=0.127" + "l2=0.00206 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.7648335 -2.0150628  2.7378201 -7.896124 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.33 " + "l1=1.33" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 5.063864 -2.086223  2.830675 -8.216023]]
Iteration 100 of 1000: loss=1.23 " + "l1=1.17" + "l2=0.0523 f=-0.593 shape=(1, 9000, 1)
logits [[ 4.3353343 -1.8916972  2.5931973 -7.4089904]]
Iteration 200 of 1000: loss=1.16 " + "l1=1.08" + "l2=0.0795 f=-0.581 shape=(1, 9000, 1)
logits [[ 3.892518  -1.8047049  2.478527  -6.8908906]]
Iteration 300 of 1000: loss=1.09 " + "l1=0.985" + "l2=0.103 f=-0.561 shape=(1, 9000, 1)
logits [[ 3.4845703 -1.7261993  2.36234   -6.36621  ]]
Iteration 400 of 1000: loss=1.01 " + "l1=0.887" + "l2=0.128 f=-0.55 shape=(1, 9000, 1)
logits [[ 3.0412266 -1.6426135  2.2256348 -5.8239827]]
Iteration 500 of 1000: loss=0.943 " + "l1=0.791" + "l2=0.151 f=-0.54 shape=(1, 9000, 1)
logits [[ 2.6181479 -1.5442804  2.0616474 -5.296789 ]]
Iteration 600 of 1000: loss=0.878 " + "l1=0.71" + "l2=0.168 f=-0.531 shape=(1, 9000, 1)
logits [[ 2.278045  -1.4723231  1.892325  -4.8223987]]
Iteration 700 of 1000: loss=0.81 " + "l1=0.626" + "l2=0.184 f=-0.513 shape=(1, 9000, 1)
logits [[ 1.9447184 -1.3993298  1.7141136 -4.3129287]]
Iteration 800 of 1000: loss=0.753 " + "l1=0.564" + "l2=0.189 f=-0.499 shape=(1, 9000, 1)
logits [[ 1.7093958 -1.3624432  1.5891184 -3.930401 ]]
Iteration 900 of 1000: loss=0.708 " + "l1=0.517" + "l2=0.191 f=-0.49 shape=(1, 9000, 1)
logits [[ 1.5296402 -1.349687   1.4983168 -3.637588 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=13.3 " + "l1=13.3" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 5.063864 -2.086223  2.830675 -8.216023]]
Iteration 100 of 1000: loss=5.82 " + "l1=2.9" + "l2=2.91 f=-0.272 shape=(1, 9000, 1)
logits [[ 0.6069415  -0.84416664  1.0260171  -1.8756907 ]]
Iteration 200 of 1000: loss=3.12 " + "l1=0.0359" + "l2=3.09 f=-0.181 shape=(1, 9000, 1)
logits [[-0.6311142  -0.3972225   0.17051867  0.13458142]]
Iteration 300 of 1000: loss=2.44 " + "l1=0.0302" + "l2=2.41 f=-0.179 shape=(1, 9000, 1)
logits [[-0.5890166  -0.3606997   0.13188618  0.10165767]]
Iteration 400 of 1000: loss=2.1 " + "l1=0.0138" + "l2=2.08 f=-0.183 shape=(1, 9000, 1)
logits [[-0.56363595 -0.37011093  0.10723996  0.09339304]]
Iteration 500 of 1000: loss=1.86 " + "l1=0" + "l2=1.86 f=-0.195 shape=(1, 9000, 1)
logits [[-0.5672468  -0.41742057  0.0947331   0.11175055]]
Iteration 600 of 1000: loss=1.69 " + "l1=0" + "l2=1.69 f=-0.203 shape=(1, 9000, 1)
logits [[-0.5548181  -0.464622    0.0943529   0.11311892]]
Iteration 700 of 1000: loss=1.56 " + "l1=0.0263" + "l2=1.54 f=-0.215 shape=(1, 9000, 1)
logits [[-0.5324175  -0.5085839   0.10343188  0.07714809]]
Iteration 800 of 1000: loss=1.45 " + "l1=0.0112" + "l2=1.44 f=-0.22 shape=(1, 9000, 1)
logits [[-0.5376394  -0.53668386  0.10329483  0.09210724]]
Iteration 900 of 1000: loss=1.36 " + "l1=0.00613" + "l2=1.36 f=-0.222 shape=(1, 9000, 1)
logits [[-0.5461107  -0.56861967  0.11652307  0.11038826]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.3 " + "l1=7.3" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 5.063864 -2.086223  2.830675 -8.216023]]
Iteration 100 of 1000: loss=4.36 " + "l1=3.06" + "l2=1.3 f=-0.448 shape=(1, 9000, 1)
logits [[ 1.6589154 -1.2080681  1.6636962 -3.906182 ]]
Iteration 200 of 1000: loss=3.09 " + "l1=1.56" + "l2=1.52 f=-0.325 shape=(1, 9000, 1)
logits [[ 0.5321969  -0.82422453  0.91551083 -1.9248109 ]]
Iteration 300 of 1000: loss=2.32 " + "l1=0.707" + "l2=1.61 f=-0.253 shape=(1, 9000, 1)
logits [[-0.07536178 -0.6580487   0.5035999  -0.78224105]]
Iteration 400 of 1000: loss=1.78 " + "l1=0.0764" + "l2=1.7 f=-0.211 shape=(1, 9000, 1)
logits [[-0.5384142  -0.5038688   0.16846736  0.02956088]]
Iteration 500 of 1000: loss=1.46 " + "l1=0.00797" + "l2=1.46 f=-0.226 shape=(1, 9000, 1)
logits [[-0.6206137  -0.510023    0.12008274  0.10558579]]
Iteration 600 of 1000: loss=1.23 " + "l1=0.0197" + "l2=1.21 f=-0.243 shape=(1, 9000, 1)
logits [[-0.6518342  -0.55963385  0.13721101  0.10141143]]
Iteration 700 of 1000: loss=1.04 " + "l1=0" + "l2=1.04 f=-0.259 shape=(1, 9000, 1)
logits [[-0.68401456 -0.61247855  0.11688887  0.14378205]]
Iteration 800 of 1000: loss=0.921 " + "l1=0.00143" + "l2=0.919 f=-0.275 shape=(1, 9000, 1)
logits [[-0.6634307  -0.6637697   0.11507477  0.11247546]]
Iteration 900 of 1000: loss=0.843 " + "l1=0.0107" + "l2=0.833 f=-0.286 shape=(1, 9000, 1)
logits [[-0.65057373 -0.6881388   0.10611188  0.08665108]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.32 " + "l1=4.32" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 5.063864 -2.086223  2.830675 -8.216023]]
Iteration 100 of 1000: loss=3.17 " + "l1=2.54" + "l2=0.629 f=-0.519 shape=(1, 9000, 1)
logits [[ 2.5688658 -1.4670941  2.063691  -5.240478 ]]
Iteration 200 of 1000: loss=2.45 " + "l1=1.75" + "l2=0.7 f=-0.462 shape=(1, 9000, 1)
logits [[ 1.5644943 -1.1701955  1.5676761 -3.8098967]]
Iteration 300 of 1000: loss=2.02 " + "l1=1.33" + "l2=0.688 f=-0.424 shape=(1, 9000, 1)
logits [[ 1.1263855 -1.0406138  1.1630324 -2.944552 ]]
Iteration 400 of 1000: loss=1.75 " + "l1=1.01" + "l2=0.736 f=-0.378 shape=(1, 9000, 1)
logits [[ 0.7347529  -0.99386185  0.9308179  -2.1847231 ]]
Iteration 500 of 1000: loss=1.53 " + "l1=0.776" + "l2=0.753 f=-0.337 shape=(1, 9000, 1)
logits [[ 0.45219785 -0.91658604  0.7520801  -1.635024  ]]
Iteration 600 of 1000: loss=1.32 " + "l1=0.554" + "l2=0.771 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.15836489 -0.8874319   0.609398   -1.0948546 ]]
Iteration 700 of 1000: loss=1.14 " + "l1=0.339" + "l2=0.799 f=-0.283 shape=(1, 9000, 1)
logits [[-0.14769518 -0.84931594  0.4529444  -0.5886785 ]]
Iteration 800 of 1000: loss=0.937 " + "l1=0.0634" + "l2=0.873 f=-0.26 shape=(1, 9000, 1)
logits [[-0.54561186 -0.70028186  0.20056783  0.00549834]]
Iteration 900 of 1000: loss=0.793 " + "l1=0.0194" + "l2=0.774 f=-0.272 shape=(1, 9000, 1)
logits [[-0.6356312  -0.6893388   0.14914455  0.08931518]]
--- 316.5456964969635 seconds ---
Adv result:3
Loading record A00267
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0772 " + "l1=0.0772" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 5.385506  -2.3391237  3.2932448 -8.3896   ]]
Iteration 100 of 1000: loss=0.0769 " + "l1=0.0766" + "l2=0.000274 f=-0.513 shape=(1, 9000, 1)
logits [[ 5.345538  -2.3132899  3.2733612 -8.356112 ]]
Iteration 200 of 1000: loss=0.0768 " + "l1=0.0765" + "l2=0.000271 f=-0.513 shape=(1, 9000, 1)
logits [[ 5.339723  -2.3084772  3.2695065 -8.351293 ]]
Iteration 300 of 1000: loss=0.0767 " + "l1=0.0763" + "l2=0.00033 f=-0.513 shape=(1, 9000, 1)
logits [[ 5.3320594 -2.302678   3.2647688 -8.345243 ]]
Iteration 400 of 1000: loss=0.0766 " + "l1=0.0762" + "l2=0.000411 f=-0.513 shape=(1, 9000, 1)
logits [[ 5.324601  -2.296944   3.2601137 -8.339649 ]]
Iteration 500 of 1000: loss=0.0766 " + "l1=0.0761" + "l2=0.000525 f=-0.513 shape=(1, 9000, 1)
logits [[ 5.3175325 -2.2912781  3.2555106 -8.334593 ]]
Iteration 600 of 1000: loss=0.0766 " + "l1=0.076" + "l2=0.000608 f=-0.513 shape=(1, 9000, 1)
logits [[ 5.310972  -2.2858734  3.2511437 -8.330025 ]]
Iteration 700 of 1000: loss=0.0765 " + "l1=0.0759" + "l2=0.00069 f=-0.514 shape=(1, 9000, 1)
logits [[ 5.304664  -2.2807345  3.247111  -8.3257065]]
Iteration 800 of 1000: loss=0.0766 " + "l1=0.0757" + "l2=0.000842 f=-0.514 shape=(1, 9000, 1)
logits [[ 5.2985377 -2.2760537  3.2434876 -8.321453 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.772 " + "l1=0.772" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 5.385506  -2.3391237  3.2932448 -8.3896   ]]
Iteration 100 of 1000: loss=0.737 " + "l1=0.716" + "l2=0.0206 f=-0.511 shape=(1, 9000, 1)
logits [[ 5.0534987 -2.1101332  3.108784  -8.097969 ]]
Iteration 200 of 1000: loss=0.72 " + "l1=0.691" + "l2=0.0297 f=-0.513 shape=(1, 9000, 1)
logits [[ 4.8999825 -2.0051398  3.0166578 -7.961817 ]]
Iteration 300 of 1000: loss=0.705 " + "l1=0.667" + "l2=0.0378 f=-0.514 shape=(1, 9000, 1)
logits [[ 4.7635183 -1.9075572  2.9333136 -7.8465996]]
Iteration 400 of 1000: loss=0.691 " + "l1=0.646" + "l2=0.0447 f=-0.514 shape=(1, 9000, 1)
logits [[ 4.6458297 -1.8143967  2.8553245 -7.7443404]]
Iteration 500 of 1000: loss=0.676 " + "l1=0.624" + "l2=0.0521 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.5284553 -1.7086189  2.767365  -7.635739 ]]
Iteration 600 of 1000: loss=0.658 " + "l1=0.596" + "l2=0.0615 f=-0.51 shape=(1, 9000, 1)
logits [[ 4.3942375 -1.5678909  2.652387  -7.516939 ]]
Iteration 700 of 1000: loss=0.636 " + "l1=0.567" + "l2=0.0691 f=-0.509 shape=(1, 9000, 1)
logits [[ 4.2419705 -1.4258735  2.5308056 -7.3828382]]
Iteration 800 of 1000: loss=0.614 " + "l1=0.539" + "l2=0.0747 f=-0.51 shape=(1, 9000, 1)
logits [[ 4.0842214 -1.3038259  2.4231853 -7.242362 ]]
Iteration 900 of 1000: loss=0.592 " + "l1=0.512" + "l2=0.0799 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.9250767 -1.1921408  2.3278003 -7.0867624]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.72 " + "l1=7.72" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 5.385506  -2.3391237  3.2932448 -8.3896   ]]
Iteration 100 of 1000: loss=4.16 " + "l1=2.14" + "l2=2.02 f=-0.553 shape=(1, 9000, 1)
logits [[ 1.6964535  -0.43307748  1.7105613  -5.1848598 ]]
Iteration 200 of 1000: loss=3.05 " + "l1=1.48" + "l2=1.57 f=-0.53 shape=(1, 9000, 1)
logits [[ 1.3828212  -0.08487539  1.3959725  -4.812619  ]]
Iteration 300 of 1000: loss=2.35 " + "l1=0.829" + "l2=1.52 f=-0.517 shape=(1, 9000, 1)
logits [[ 0.9659914   0.14487615  0.97399986 -4.153128  ]]
Iteration 400 of 1000: loss=1.92 " + "l1=0.475" + "l2=1.44 f=-0.493 shape=(1, 9000, 1)
logits [[ 0.7546653   0.28665054  0.7621113  -3.773731  ]]
Iteration 500 of 1000: loss=1.59 " + "l1=0.221" + "l2=1.37 f=-0.467 shape=(1, 9000, 1)
logits [[ 0.61179554  0.39924097  0.62072843 -3.5003734 ]]
Iteration 600 of 1000: loss=1.3 " + "l1=0.0409" + "l2=1.26 f=-0.439 shape=(1, 9000, 1)
logits [[ 0.5405293   0.50242233  0.5433718  -3.3429134 ]]
Iteration 700 of 1000: loss=1.11 " + "l1=0.00648" + "l2=1.11 f=-0.432 shape=(1, 9000, 1)
logits [[ 0.53252834  0.52716535  0.5336463  -3.322764  ]]
Iteration 800 of 1000: loss=0.949 " + "l1=0.0116" + "l2=0.937 f=-0.421 shape=(1, 9000, 1)
logits [[ 0.5390492  0.5366333  0.5482315 -3.3094661]]
Iteration 900 of 1000: loss=0.817 " + "l1=0.0053" + "l2=0.811 f=-0.42 shape=(1, 9000, 1)
logits [[ 0.53238547  0.55894136  0.56424254 -3.3373976 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.25 " + "l1=4.25" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 5.385506  -2.3391237  3.2932448 -8.3896   ]]
Iteration 100 of 1000: loss=3.12 " + "l1=2.41" + "l2=0.707 f=-0.523 shape=(1, 9000, 1)
logits [[ 3.2864609 -1.0941483  2.240628  -6.5249147]]
Iteration 200 of 1000: loss=2.43 " + "l1=1.51" + "l2=0.921 f=-0.53 shape=(1, 9000, 1)
logits [[ 2.1837742 -0.5645484  1.8508952 -5.5899353]]
Iteration 300 of 1000: loss=1.83 " + "l1=0.973" + "l2=0.86 f=-0.525 shape=(1, 9000, 1)
logits [[ 1.5128177 -0.2560621  1.510211  -4.867017 ]]
Iteration 400 of 1000: loss=1.48 " + "l1=0.718" + "l2=0.765 f=-0.524 shape=(1, 9000, 1)
logits [[ 1.1982079  -0.10560028  1.2007582  -4.3876762 ]]
Iteration 500 of 1000: loss=1.27 " + "l1=0.554" + "l2=0.716 f=-0.506 shape=(1, 9000, 1)
logits [[ 1.0144506   0.00941631  1.0161477  -4.0637503 ]]
Iteration 600 of 1000: loss=1.1 " + "l1=0.431" + "l2=0.668 f=-0.486 shape=(1, 9000, 1)
logits [[ 0.8913626   0.10703012  0.8905074  -3.8341682 ]]
Iteration 700 of 1000: loss=0.943 " + "l1=0.313" + "l2=0.63 f=-0.465 shape=(1, 9000, 1)
logits [[ 0.79176825  0.22536676  0.7942425  -3.673     ]]
Iteration 800 of 1000: loss=0.787 " + "l1=0.185" + "l2=0.603 f=-0.449 shape=(1, 9000, 1)
logits [[ 0.66533524  0.35383418  0.6894371  -3.5054235 ]]
Iteration 900 of 1000: loss=0.683 " + "l1=0.0986" + "l2=0.585 f=-0.433 shape=(1, 9000, 1)
logits [[ 0.6041054   0.43194515  0.61121064 -3.381162  ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.99 " + "l1=5.99" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 5.385506  -2.3391237  3.2932448 -8.3896   ]]
Iteration 100 of 1000: loss=3.79 " + "l1=2.5" + "l2=1.29 f=-0.541 shape=(1, 9000, 1)
logits [[ 2.4638898  -0.76192844  1.9482974  -5.8151517 ]]
Iteration 200 of 1000: loss=2.71 " + "l1=1.35" + "l2=1.37 f=-0.538 shape=(1, 9000, 1)
logits [[ 1.5047414  -0.21915872  1.5178506  -4.9546876 ]]
Iteration 300 of 1000: loss=2.19 " + "l1=0.94" + "l2=1.25 f=-0.524 shape=(1, 9000, 1)
logits [[ 1.1797663  -0.03043248  1.1820987  -4.4288187 ]]
Iteration 400 of 1000: loss=1.82 " + "l1=0.653" + "l2=1.17 f=-0.502 shape=(1, 9000, 1)
logits [[ 0.9363759   0.10827941  0.950471   -4.0033875 ]]
Iteration 500 of 1000: loss=1.52 " + "l1=0.443" + "l2=1.08 f=-0.479 shape=(1, 9000, 1)
logits [[ 0.78750783  0.23085155  0.80308867 -3.7371368 ]]
Iteration 600 of 1000: loss=1.31 " + "l1=0.266" + "l2=1.04 f=-0.452 shape=(1, 9000, 1)
logits [[ 0.6841683  0.3587656  0.701657  -3.551416 ]]
Iteration 700 of 1000: loss=1.13 " + "l1=0.122" + "l2=1.01 f=-0.424 shape=(1, 9000, 1)
logits [[ 0.6298546   0.47205445  0.62866133 -3.426812  ]]
Iteration 800 of 1000: loss=0.916 " + "l1=0.00415" + "l2=0.912 f=-0.415 shape=(1, 9000, 1)
logits [[ 0.56313384  0.5827393   0.58809507 -3.39209   ]]
Iteration 900 of 1000: loss=0.747 " + "l1=0.00428" + "l2=0.743 f=-0.418 shape=(1, 9000, 1)
logits [[ 0.60704577  0.6043071   0.6098289  -3.4937747 ]]
--- 307.07732009887695 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0209 " + "l1=0.0209" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 5.385506  -2.3391237  3.2932448 -8.3896   ]]
Iteration 100 of 1000: loss=0.0208 " + "l1=0.0206" + "l2=0.000167 f=-0.513 shape=(1, 9000, 1)
logits [[ 5.3585815 -2.3429697  3.2998862 -8.36757  ]]
Iteration 200 of 1000: loss=0.0207 " + "l1=0.0206" + "l2=0.000148 f=-0.513 shape=(1, 9000, 1)
logits [[ 5.3571796 -2.343255   3.300594  -8.36648  ]]
Iteration 300 of 1000: loss=0.0207 " + "l1=0.0205" + "l2=0.000178 f=-0.513 shape=(1, 9000, 1)
logits [[ 5.354192 -2.343962  3.301818 -8.364221]]
Iteration 400 of 1000: loss=0.0207 " + "l1=0.0205" + "l2=0.000214 f=-0.513 shape=(1, 9000, 1)
logits [[ 5.351069  -2.3445039  3.3030162 -8.362042 ]]
Iteration 500 of 1000: loss=0.0207 " + "l1=0.0204" + "l2=0.000266 f=-0.513 shape=(1, 9000, 1)
logits [[ 5.348213  -2.3449457  3.3041546 -8.360252 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.209 " + "l1=0.209" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 5.385506  -2.3391237  3.2932448 -8.3896   ]]
Iteration 100 of 1000: loss=0.194 " + "l1=0.185" + "l2=0.00872 f=-0.516 shape=(1, 9000, 1)
logits [[ 5.191618  -2.3712225  3.3398392 -8.224533 ]]
Iteration 200 of 1000: loss=0.189 " + "l1=0.176" + "l2=0.0123 f=-0.518 shape=(1, 9000, 1)
logits [[ 5.1241794 -2.3881495  3.3605273 -8.166876 ]]
Iteration 300 of 1000: loss=0.185 " + "l1=0.17" + "l2=0.0149 f=-0.52 shape=(1, 9000, 1)
logits [[ 5.0737476 -2.398118   3.374351  -8.128635 ]]
Iteration 400 of 1000: loss=0.181 " + "l1=0.165" + "l2=0.0169 f=-0.522 shape=(1, 9000, 1)
logits [[ 5.0315332 -2.4034288  3.3860385 -8.101887 ]]
Iteration 500 of 1000: loss=0.178 " + "l1=0.16" + "l2=0.0184 f=-0.524 shape=(1, 9000, 1)
logits [[ 4.997114  -2.406304   3.3978121 -8.084269 ]]
Iteration 600 of 1000: loss=0.175 " + "l1=0.155" + "l2=0.02 f=-0.526 shape=(1, 9000, 1)
logits [[ 4.959124  -2.4053109  3.4066281 -8.064685 ]]
Iteration 700 of 1000: loss=0.172 " + "l1=0.15" + "l2=0.0215 f=-0.527 shape=(1, 9000, 1)
logits [[ 4.9206324 -2.4017456  3.4157782 -8.043516 ]]
Iteration 800 of 1000: loss=0.169 " + "l1=0.146" + "l2=0.0225 f=-0.528 shape=(1, 9000, 1)
logits [[ 4.8865695 -2.3971953  3.4251006 -8.024714 ]]
Iteration 900 of 1000: loss=0.165 " + "l1=0.142" + "l2=0.0235 f=-0.528 shape=(1, 9000, 1)
logits [[ 4.8499475 -2.3897395  3.434161  -8.004855 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.09 " + "l1=2.09" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 5.385506  -2.3391237  3.2932448 -8.3896   ]]
Iteration 100 of 1000: loss=0.749 " + "l1=0.0263" + "l2=0.723 f=-0.541 shape=(1, 9000, 1)
logits [[ 3.5465045 -2.5164962  3.520224  -6.7130885]]
Iteration 200 of 1000: loss=0.468 " + "l1=0.0148" + "l2=0.453 f=-0.537 shape=(1, 9000, 1)
logits [[ 3.6003263 -2.4862473  3.5854974 -6.84879  ]]
Iteration 300 of 1000: loss=0.373 " + "l1=0" + "l2=0.373 f=-0.537 shape=(1, 9000, 1)
logits [[ 3.6056583 -2.49555    3.6122277 -6.8686457]]
Iteration 400 of 1000: loss=0.328 " + "l1=0" + "l2=0.328 f=-0.537 shape=(1, 9000, 1)
logits [[ 3.6106782 -2.5082986  3.6387305 -6.889427 ]]
Iteration 500 of 1000: loss=0.279 " + "l1=0" + "l2=0.279 f=-0.536 shape=(1, 9000, 1)
logits [[ 3.6507158 -2.5149467  3.6511002 -6.929028 ]]
Iteration 600 of 1000: loss=0.255 " + "l1=0" + "l2=0.255 f=-0.534 shape=(1, 9000, 1)
logits [[ 3.6526167 -2.5242176  3.670759  -6.935697 ]]
Iteration 700 of 1000: loss=0.232 " + "l1=0" + "l2=0.232 f=-0.533 shape=(1, 9000, 1)
logits [[ 3.656433  -2.5196998  3.6786761 -6.9469433]]
Iteration 800 of 1000: loss=0.208 " + "l1=0" + "l2=0.208 f=-0.531 shape=(1, 9000, 1)
logits [[ 3.6735356 -2.5111432  3.680779  -6.9679413]]
Iteration 900 of 1000: loss=0.193 " + "l1=0.006" + "l2=0.187 f=-0.529 shape=(1, 9000, 1)
logits [[ 3.6802647 -2.4972475  3.67426   -6.973484 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.15 " + "l1=1.15" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 5.385506  -2.3391237  3.2932448 -8.3896   ]]
Iteration 100 of 1000: loss=0.701 " + "l1=0.44" + "l2=0.26 f=-0.529 shape=(1, 9000, 1)
logits [[ 4.275595  -2.4970071  3.4749925 -7.3702974]]
Iteration 200 of 1000: loss=0.54 " + "l1=0.207" + "l2=0.333 f=-0.536 shape=(1, 9000, 1)
logits [[ 3.902104  -2.5183897  3.526499  -7.052761 ]]
Iteration 300 of 1000: loss=0.358 " + "l1=0.00371" + "l2=0.354 f=-0.537 shape=(1, 9000, 1)
logits [[ 3.6389914 -2.5137355  3.6322513 -6.9042997]]
Iteration 400 of 1000: loss=0.286 " + "l1=0" + "l2=0.286 f=-0.534 shape=(1, 9000, 1)
logits [[ 3.6545982 -2.5124526  3.655881  -6.932775 ]]
Iteration 500 of 1000: loss=0.244 " + "l1=0" + "l2=0.244 f=-0.53 shape=(1, 9000, 1)
logits [[ 3.6664128 -2.511602   3.6694646 -6.9448237]]
Iteration 600 of 1000: loss=0.213 " + "l1=0.000461" + "l2=0.212 f=-0.528 shape=(1, 9000, 1)
logits [[ 3.6816359 -2.5097237  3.6807973 -6.9645495]]
Iteration 700 of 1000: loss=0.19 " + "l1=0" + "l2=0.19 f=-0.524 shape=(1, 9000, 1)
logits [[ 3.6833441 -2.508082   3.6934001 -6.966592 ]]
Iteration 800 of 1000: loss=0.169 " + "l1=0.00164" + "l2=0.167 f=-0.521 shape=(1, 9000, 1)
logits [[ 3.6983156 -2.4995763  3.6953373 -6.977628 ]]
Iteration 900 of 1000: loss=0.154 " + "l1=0" + "l2=0.154 f=-0.519 shape=(1, 9000, 1)
logits [[ 3.6944184 -2.494668   3.6974237 -6.9739833]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.68 " + "l1=0.68" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 5.385506  -2.3391237  3.2932448 -8.3896   ]]
Iteration 100 of 1000: loss=0.521 " + "l1=0.428" + "l2=0.093 f=-0.524 shape=(1, 9000, 1)
logits [[ 4.7447553 -2.4448113  3.4278789 -7.82581  ]]
Iteration 200 of 1000: loss=0.463 " + "l1=0.331" + "l2=0.132 f=-0.527 shape=(1, 9000, 1)
logits [[ 4.487484  -2.483038   3.468038  -7.5820866]]
Iteration 300 of 1000: loss=0.415 " + "l1=0.266" + "l2=0.149 f=-0.527 shape=(1, 9000, 1)
logits [[ 4.3195796 -2.4810786  3.5011394 -7.448194 ]]
Iteration 400 of 1000: loss=0.362 " + "l1=0.197" + "l2=0.164 f=-0.525 shape=(1, 9000, 1)
logits [[ 4.1562138 -2.462653   3.5486698 -7.340351 ]]
Iteration 500 of 1000: loss=0.317 " + "l1=0.138" + "l2=0.179 f=-0.521 shape=(1, 9000, 1)
logits [[ 4.0184417 -2.4770296  3.5943623 -7.220912 ]]
Iteration 600 of 1000: loss=0.272 " + "l1=0.0747" + "l2=0.197 f=-0.518 shape=(1, 9000, 1)
logits [[ 3.863646  -2.4897485  3.6336477 -7.0775557]]
Iteration 700 of 1000: loss=0.223 " + "l1=0.00736" + "l2=0.215 f=-0.518 shape=(1, 9000, 1)
logits [[ 3.721278  -2.5165823  3.698627  -6.9771795]]
Iteration 800 of 1000: loss=0.188 " + "l1=0.000869" + "l2=0.187 f=-0.515 shape=(1, 9000, 1)
logits [[ 3.7213004 -2.5169332  3.7186253 -6.9847274]]
Iteration 900 of 1000: loss=0.166 " + "l1=0.00165" + "l2=0.164 f=-0.514 shape=(1, 9000, 1)
logits [[ 3.730857  -2.510187   3.7257712 -7.000677 ]]
--- 289.307989358902 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.138 " + "l1=0.138" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 5.385506  -2.3391237  3.2932448 -8.3896   ]]
Iteration 100 of 1000: loss=0.137 " + "l1=0.136" + "l2=0.000523 f=-0.511 shape=(1, 9000, 1)
logits [[ 5.327182  -2.3287642  3.2757478 -8.319187 ]]
Iteration 200 of 1000: loss=0.137 " + "l1=0.136" + "l2=0.000573 f=-0.511 shape=(1, 9000, 1)
logits [[ 5.3160424 -2.3259277  3.2718778 -8.306235 ]]
Iteration 300 of 1000: loss=0.137 " + "l1=0.136" + "l2=0.000697 f=-0.511 shape=(1, 9000, 1)
logits [[ 5.3039007 -2.3229742  3.2674477 -8.291558 ]]
Iteration 400 of 1000: loss=0.137 " + "l1=0.136" + "l2=0.000834 f=-0.511 shape=(1, 9000, 1)
logits [[ 5.2929664 -2.3200486  3.2630692 -8.278236 ]]
Iteration 500 of 1000: loss=0.136 " + "l1=0.136" + "l2=0.000948 f=-0.51 shape=(1, 9000, 1)
logits [[ 5.2839236 -2.3172097  3.2590866 -8.267267 ]]
Iteration 600 of 1000: loss=0.136 " + "l1=0.135" + "l2=0.00114 f=-0.51 shape=(1, 9000, 1)
logits [[ 5.2755527 -2.3143344  3.2552192 -8.257163 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.38 " + "l1=1.38" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 5.385506  -2.3391237  3.2932448 -8.3896   ]]
Iteration 100 of 1000: loss=1.3 " + "l1=1.26" + "l2=0.0448 f=-0.497 shape=(1, 9000, 1)
logits [[ 4.8528123 -2.2217524  3.1231368 -7.740547 ]]
Iteration 200 of 1000: loss=1.27 " + "l1=1.21" + "l2=0.0629 f=-0.49 shape=(1, 9000, 1)
logits [[ 4.6379557 -2.1568394  3.0396276 -7.482229 ]]
Iteration 300 of 1000: loss=1.25 " + "l1=1.17" + "l2=0.0777 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.4656134 -2.0844789  2.95575   -7.2664127]]
Iteration 400 of 1000: loss=1.23 " + "l1=1.13" + "l2=0.094 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.2916255 -2.0135915  2.8697417 -7.0387564]]
Iteration 500 of 1000: loss=1.2 " + "l1=1.1" + "l2=0.105 f=-0.462 shape=(1, 9000, 1)
logits [[ 4.12819   -1.9265895  2.7796183 -6.828883 ]]
Iteration 600 of 1000: loss=1.16 " + "l1=1.05" + "l2=0.119 f=-0.445 shape=(1, 9000, 1)
logits [[ 3.9074292 -1.8079048  2.6677647 -6.5492063]]
Iteration 700 of 1000: loss=1.12 " + "l1=0.989" + "l2=0.132 f=-0.427 shape=(1, 9000, 1)
logits [[ 3.652665  -1.6846993  2.5587163 -6.2326927]]
Iteration 800 of 1000: loss=1.08 " + "l1=0.939" + "l2=0.142 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.4158766 -1.5521032  2.44788   -5.9696712]]
Iteration 900 of 1000: loss=1.04 " + "l1=0.886" + "l2=0.154 f=-0.414 shape=(1, 9000, 1)
logits [[ 3.1564877 -1.4131842  2.303552  -5.700897 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=13.8 " + "l1=13.8" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 5.385506  -2.3391237  3.2932448 -8.3896   ]]
Iteration 100 of 1000: loss=7.39 " + "l1=4.57" + "l2=2.83 f=-0.307 shape=(1, 9000, 1)
logits [[ 1.4654369 -1.0848507  1.4796994 -3.0881817]]
Iteration 200 of 1000: loss=4.99 " + "l1=1.52" + "l2=3.47 f=-0.127 shape=(1, 9000, 1)
logits [[ 0.33161163 -0.6393182   0.6601735  -0.86126655]]
Iteration 300 of 1000: loss=3.52 " + "l1=0.378" + "l2=3.14 f=-0.0912 shape=(1, 9000, 1)
logits [[-0.09868436 -0.43385816  0.27281043 -0.10511842]]
Iteration 400 of 1000: loss=2.71 " + "l1=0.00182" + "l2=2.71 f=-0.0992 shape=(1, 9000, 1)
logits [[-0.24809384 -0.4242669   0.13873202  0.13691047]]
Iteration 500 of 1000: loss=2.26 " + "l1=0.00872" + "l2=2.25 f=-0.108 shape=(1, 9000, 1)
logits [[-0.2185229  -0.4558209   0.12480827  0.11608399]]
Iteration 600 of 1000: loss=1.99 " + "l1=0" + "l2=1.99 f=-0.102 shape=(1, 9000, 1)
logits [[-0.18506151 -0.48990482  0.12449761  0.14087355]]
Iteration 700 of 1000: loss=1.79 " + "l1=0.00239" + "l2=1.78 f=-0.0961 shape=(1, 9000, 1)
logits [[-0.14420798 -0.5394002   0.15076567  0.14837486]]
Iteration 800 of 1000: loss=1.62 " + "l1=0" + "l2=1.62 f=-0.0881 shape=(1, 9000, 1)
logits [[-0.11673356 -0.5598108   0.16149032  0.16251054]]
Iteration 900 of 1000: loss=1.48 " + "l1=0" + "l2=1.48 f=-0.0846 shape=(1, 9000, 1)
logits [[-0.10325079 -0.56666166  0.16268867  0.16865674]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.58 " + "l1=7.58" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 5.385506  -2.3391237  3.2932448 -8.3896   ]]
Iteration 100 of 1000: loss=5.28 " + "l1=3.8" + "l2=1.47 f=-0.428 shape=(1, 9000, 1)
logits [[ 2.2806368 -1.4771585  2.1176813 -4.6317105]]
Iteration 200 of 1000: loss=4.19 " + "l1=2.63" + "l2=1.57 f=-0.344 shape=(1, 9000, 1)
logits [[ 1.4563123 -0.9779064  1.4607112 -3.3158088]]
Iteration 300 of 1000: loss=3.43 " + "l1=1.76" + "l2=1.66 f=-0.277 shape=(1, 9000, 1)
logits [[ 0.8463055  -0.68528277  0.9676112  -2.2363875 ]]
Iteration 400 of 1000: loss=2.73 " + "l1=1" + "l2=1.72 f=-0.214 shape=(1, 9000, 1)
logits [[ 0.33741212 -0.5156332   0.5752869  -1.2517518 ]]
Iteration 500 of 1000: loss=2.26 " + "l1=0.562" + "l2=1.7 f=-0.16 shape=(1, 9000, 1)
logits [[ 0.09652444 -0.44958594  0.36821225 -0.65389836]]
Iteration 600 of 1000: loss=1.88 " + "l1=0.269" + "l2=1.61 f=-0.117 shape=(1, 9000, 1)
logits [[-0.03440572 -0.42317662  0.23908094 -0.24985057]]
Iteration 700 of 1000: loss=1.52 " + "l1=0.0127" + "l2=1.5 f=-0.0878 shape=(1, 9000, 1)
logits [[-0.19445035 -0.41514856  0.1407718   0.11769017]]
Iteration 800 of 1000: loss=1.29 " + "l1=0" + "l2=1.29 f=-0.0714 shape=(1, 9000, 1)
logits [[-0.14378418 -0.47856888  0.16515712  0.17147434]]
Iteration 900 of 1000: loss=1.12 " + "l1=0.00151" + "l2=1.11 f=-0.0608 shape=(1, 9000, 1)
logits [[-0.09591442 -0.540112    0.19783193  0.19508848]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.48 " + "l1=4.48" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 5.385506  -2.3391237  3.2932448 -8.3896   ]]
Iteration 100 of 1000: loss=3.67 " + "l1=3.16" + "l2=0.507 f=-0.462 shape=(1, 9000, 1)
logits [[ 3.5691721 -1.9159758  2.6503158 -6.1500416]]
Iteration 200 of 1000: loss=3.26 " + "l1=2.54" + "l2=0.715 f=-0.438 shape=(1, 9000, 1)
logits [[ 2.6939747 -1.5431876  2.2244055 -5.126662 ]]
Iteration 300 of 1000: loss=2.78 " + "l1=1.87" + "l2=0.9 f=-0.406 shape=(1, 9000, 1)
logits [[ 1.7226073 -1.0211859  1.7213997 -4.0459394]]
Iteration 400 of 1000: loss=2.39 " + "l1=1.52" + "l2=0.868 f=-0.389 shape=(1, 9000, 1)
logits [[ 1.2902476  -0.73975796  1.2897335  -3.3980448 ]]
Iteration 500 of 1000: loss=2.08 " + "l1=1.23" + "l2=0.845 f=-0.364 shape=(1, 9000, 1)
logits [[ 0.93416417 -0.6108714   1.0092108  -2.7878592 ]]
Iteration 600 of 1000: loss=1.84 " + "l1=1.04" + "l2=0.801 f=-0.334 shape=(1, 9000, 1)
logits [[ 0.68235385 -0.53598756  0.8649328  -2.3458874 ]]
Iteration 700 of 1000: loss=1.63 " + "l1=0.869" + "l2=0.763 f=-0.306 shape=(1, 9000, 1)
logits [[ 0.42993188 -0.45176646  0.73559695 -1.9382675 ]]
Iteration 800 of 1000: loss=1.43 " + "l1=0.697" + "l2=0.733 f=-0.274 shape=(1, 9000, 1)
logits [[ 0.205028  -0.3637984  0.6050237 -1.5404861]]
Iteration 900 of 1000: loss=1.24 " + "l1=0.484" + "l2=0.757 f=-0.242 shape=(1, 9000, 1)
logits [[-0.01972364 -0.28074083  0.41116092 -1.0784469 ]]
--- 295.7838113307953 seconds ---
Adv result:3
Loading record A00271
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0649 " + "l1=0.0649" + "l2=0 f=-0.797 shape=(1, 9000, 1)
logits [[ 5.6482253 -0.8396903  1.4742712 -9.472247 ]]
Iteration 100 of 1000: loss=0.0642 " + "l1=0.0638" + "l2=0.000427 f=-0.8 shape=(1, 9000, 1)
logits [[ 5.5850143  -0.79468477  1.4472042  -9.437396  ]]
Iteration 200 of 1000: loss=0.0641 " + "l1=0.0636" + "l2=0.00047 f=-0.8 shape=(1, 9000, 1)
logits [[ 5.5738444 -0.7863937  1.4416817 -9.429446 ]]
Iteration 300 of 1000: loss=0.064 " + "l1=0.0634" + "l2=0.000577 f=-0.8 shape=(1, 9000, 1)
logits [[ 5.5609517 -0.7771694  1.435896  -9.421339 ]]
Iteration 400 of 1000: loss=0.0639 " + "l1=0.0632" + "l2=0.000678 f=-0.801 shape=(1, 9000, 1)
logits [[ 5.548989  -0.768907   1.4308394 -9.414505 ]]
Iteration 500 of 1000: loss=0.0638 " + "l1=0.063" + "l2=0.000822 f=-0.801 shape=(1, 9000, 1)
logits [[ 5.5380206  -0.76152843  1.4265591  -9.409031  ]]
Iteration 600 of 1000: loss=0.0638 " + "l1=0.0628" + "l2=0.000968 f=-0.802 shape=(1, 9000, 1)
logits [[ 5.5276895 -0.7545886  1.4227893 -9.40458  ]]
Iteration 700 of 1000: loss=0.0638 " + "l1=0.0627" + "l2=0.0011 f=-0.803 shape=(1, 9000, 1)
logits [[ 5.51826    -0.74833983  1.4195849  -9.400943  ]]
Iteration 800 of 1000: loss=0.0637 " + "l1=0.0625" + "l2=0.00118 f=-0.804 shape=(1, 9000, 1)
logits [[ 5.5096173  -0.74263644  1.4168581  -9.397913  ]]
Iteration 900 of 1000: loss=0.0636 " + "l1=0.0624" + "l2=0.00126 f=-0.804 shape=(1, 9000, 1)
logits [[ 5.5015907  -0.73742765  1.4145273  -9.395295  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.649 " + "l1=0.649" + "l2=0 f=-0.797 shape=(1, 9000, 1)
logits [[ 5.6482253 -0.8396903  1.4742712 -9.472247 ]]
Iteration 100 of 1000: loss=0.586 " + "l1=0.547" + "l2=0.0394 f=-0.836 shape=(1, 9000, 1)
logits [[ 5.0359707 -0.4333617  1.233979  -9.180499 ]]
Iteration 200 of 1000: loss=0.558 " + "l1=0.499" + "l2=0.0588 f=-0.854 shape=(1, 9000, 1)
logits [[ 4.7355504  -0.25932944  1.1438441  -9.037715  ]]
Iteration 300 of 1000: loss=0.537 " + "l1=0.464" + "l2=0.0738 f=-0.865 shape=(1, 9000, 1)
logits [[ 4.502966   -0.13355003  1.0873855  -8.916571  ]]
Iteration 400 of 1000: loss=0.519 " + "l1=0.43" + "l2=0.0898 f=-0.877 shape=(1, 9000, 1)
logits [[ 4.290974e+00 -6.054228e-03  1.038415e+00 -8.831331e+00]]
Iteration 500 of 1000: loss=0.501 " + "l1=0.397" + "l2=0.104 f=-0.888 shape=(1, 9000, 1)
logits [[ 4.080081   0.1117586  1.0091872 -8.752409 ]]
Iteration 600 of 1000: loss=0.48 " + "l1=0.358" + "l2=0.121 f=-0.895 shape=(1, 9000, 1)
logits [[ 3.8330543   0.24991883  0.99716777 -8.661636  ]]
Iteration 700 of 1000: loss=0.452 " + "l1=0.312" + "l2=0.14 f=-0.902 shape=(1, 9000, 1)
logits [[ 3.535469    0.41175947  0.9957991  -8.550181  ]]
Iteration 800 of 1000: loss=0.427 " + "l1=0.274" + "l2=0.153 f=-0.904 shape=(1, 9000, 1)
logits [[ 3.279292   0.5384105  1.002448  -8.434663 ]]
Iteration 900 of 1000: loss=0.408 " + "l1=0.248" + "l2=0.161 f=-0.902 shape=(1, 9000, 1)
logits [[ 3.1042337   0.62569124  0.991083   -8.3282995 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.49 " + "l1=6.49" + "l2=0 f=-0.797 shape=(1, 9000, 1)
logits [[ 5.6482253 -0.8396903  1.4742712 -9.472247 ]]
Iteration 100 of 1000: loss=1.31 " + "l1=0" + "l2=1.31 f=-1.17 shape=(1, 9000, 1)
logits [[ 1.5556087   1.5848175   0.72833174 -8.563572  ]]
Iteration 200 of 1000: loss=1.01 " + "l1=0" + "l2=1.01 f=-1.15 shape=(1, 9000, 1)
logits [[ 1.4941882   1.5702794   0.72121626 -8.385626  ]]
Iteration 300 of 1000: loss=0.85 " + "l1=0" + "l2=0.85 f=-1.13 shape=(1, 9000, 1)
logits [[ 1.4864804  1.5306939  0.7175043 -8.249616 ]]
Iteration 400 of 1000: loss=0.768 " + "l1=0" + "l2=0.768 f=-1.12 shape=(1, 9000, 1)
logits [[ 1.4464458   1.5283017   0.71317077 -8.167237  ]]
Iteration 500 of 1000: loss=0.706 " + "l1=0" + "l2=0.706 f=-1.11 shape=(1, 9000, 1)
logits [[ 1.4362743  1.5236441  0.7091152 -8.114223 ]]
Iteration 600 of 1000: loss=0.657 " + "l1=0" + "l2=0.657 f=-1.1 shape=(1, 9000, 1)
logits [[ 1.4279308   1.5224938   0.70252955 -8.055934  ]]
Iteration 700 of 1000: loss=0.613 " + "l1=0" + "l2=0.613 f=-1.09 shape=(1, 9000, 1)
logits [[ 1.432713   1.5137378  0.6978649 -8.009222 ]]
Iteration 800 of 1000: loss=0.588 " + "l1=0" + "l2=0.588 f=-1.09 shape=(1, 9000, 1)
logits [[ 1.3852384  1.5361639  0.6899482 -7.9676886]]
Iteration 900 of 1000: loss=0.531 " + "l1=0" + "l2=0.531 f=-1.07 shape=(1, 9000, 1)
logits [[ 1.4670348  1.4953375  0.685589  -7.939181 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.57 " + "l1=3.57" + "l2=0 f=-0.797 shape=(1, 9000, 1)
logits [[ 5.6482253 -0.8396903  1.4742712 -9.472247 ]]
Iteration 100 of 1000: loss=1.2 " + "l1=0.0244" + "l2=1.18 f=-1.16 shape=(1, 9000, 1)
logits [[ 1.5886652  1.5443436  0.7257888 -8.517181 ]]
Iteration 200 of 1000: loss=0.859 " + "l1=0" + "l2=0.859 f=-1.13 shape=(1, 9000, 1)
logits [[ 1.5045365  1.5157948  0.7257651 -8.2845745]]
Iteration 300 of 1000: loss=0.732 " + "l1=0" + "l2=0.732 f=-1.12 shape=(1, 9000, 1)
logits [[ 1.4561787  1.5046576  0.7235531 -8.151135 ]]
Iteration 400 of 1000: loss=0.655 " + "l1=0.0191" + "l2=0.636 f=-1.1 shape=(1, 9000, 1)
logits [[ 1.5033637  1.4686866  0.7163687 -8.072638 ]]
Iteration 500 of 1000: loss=0.584 " + "l1=0.00319" + "l2=0.58 f=-1.09 shape=(1, 9000, 1)
logits [[ 1.4838495  1.478044   0.7002963 -8.017615 ]]
Iteration 600 of 1000: loss=0.535 " + "l1=0" + "l2=0.535 f=-1.08 shape=(1, 9000, 1)
logits [[ 1.480976    1.4825096   0.69165844 -7.9694347 ]]
Iteration 700 of 1000: loss=0.5 " + "l1=0" + "l2=0.5 f=-1.07 shape=(1, 9000, 1)
logits [[ 1.4667842  1.4975449  0.6868195 -7.9372444]]
Iteration 800 of 1000: loss=0.464 " + "l1=0" + "l2=0.464 f=-1.06 shape=(1, 9000, 1)
logits [[ 1.4804354  1.49417    0.6860273 -7.9149256]]
Iteration 900 of 1000: loss=0.436 " + "l1=0" + "l2=0.436 f=-1.06 shape=(1, 9000, 1)
logits [[ 1.475359   1.4962897  0.6879129 -7.8818545]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.11 " + "l1=2.11" + "l2=0 f=-0.797 shape=(1, 9000, 1)
logits [[ 5.6482253 -0.8396903  1.4742712 -9.472247 ]]
Iteration 100 of 1000: loss=1.28 " + "l1=0.648" + "l2=0.63 f=-1.03 shape=(1, 9000, 1)
logits [[ 2.8210475   0.82778144  0.8371879  -8.6117525 ]]
Iteration 200 of 1000: loss=0.802 " + "l1=0.00854" + "l2=0.793 f=-1.13 shape=(1, 9000, 1)
logits [[ 1.512487    1.4862075   0.72565186 -8.263519  ]]
Iteration 300 of 1000: loss=0.618 " + "l1=0.00335" + "l2=0.615 f=-1.11 shape=(1, 9000, 1)
logits [[ 1.4954942  1.4851735  0.7119662 -8.136575 ]]
Iteration 400 of 1000: loss=0.527 " + "l1=0.00892" + "l2=0.518 f=-1.09 shape=(1, 9000, 1)
logits [[ 1.52122    1.4937744  0.7132503 -8.0873   ]]
Iteration 500 of 1000: loss=0.464 " + "l1=0.00272" + "l2=0.461 f=-1.08 shape=(1, 9000, 1)
logits [[ 1.5166008  1.5082328  0.7238001 -8.054989 ]]
Iteration 600 of 1000: loss=0.428 " + "l1=0.00313" + "l2=0.425 f=-1.07 shape=(1, 9000, 1)
logits [[ 1.5151951  1.505566   0.7290004 -8.014002 ]]
Iteration 700 of 1000: loss=0.397 " + "l1=0.00322" + "l2=0.394 f=-1.06 shape=(1, 9000, 1)
logits [[ 1.5132388  1.5033445  0.7343788 -7.9711   ]]
Iteration 800 of 1000: loss=0.37 " + "l1=0" + "l2=0.37 f=-1.05 shape=(1, 9000, 1)
logits [[ 1.4850689  1.5019691  0.7344518 -7.9231663]]
Iteration 900 of 1000: loss=0.347 " + "l1=0" + "l2=0.347 f=-1.04 shape=(1, 9000, 1)
logits [[ 1.4784731  1.4857556  0.7347348 -7.8677444]]
--- 318.70879435539246 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0417 " + "l1=0.0417" + "l2=0 f=-0.797 shape=(1, 9000, 1)
logits [[ 5.6482253 -0.8396903  1.4742712 -9.472247 ]]
Iteration 100 of 1000: loss=0.0416 " + "l1=0.0414" + "l2=0.000157 f=-0.801 shape=(1, 9000, 1)
logits [[ 5.614024   -0.83256716  1.4716856  -9.456852  ]]
Iteration 200 of 1000: loss=0.0415 " + "l1=0.0414" + "l2=0.000142 f=-0.801 shape=(1, 9000, 1)
logits [[ 5.61208   -0.8320939  1.4713695 -9.4558115]]
Iteration 300 of 1000: loss=0.0415 " + "l1=0.0414" + "l2=0.000161 f=-0.802 shape=(1, 9000, 1)
logits [[ 5.607486  -0.8311545  1.471167  -9.454056 ]]
Iteration 400 of 1000: loss=0.0415 " + "l1=0.0413" + "l2=0.000188 f=-0.802 shape=(1, 9000, 1)
logits [[ 5.6026163  -0.83014554  1.4710962  -9.452552  ]]
Iteration 500 of 1000: loss=0.0415 " + "l1=0.0413" + "l2=0.000223 f=-0.803 shape=(1, 9000, 1)
logits [[ 5.5978665  -0.82912844  1.4711521  -9.451428  ]]
Iteration 600 of 1000: loss=0.0415 " + "l1=0.0412" + "l2=0.000292 f=-0.804 shape=(1, 9000, 1)
logits [[ 5.5933857 -0.8281866  1.471365  -9.450671 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.417 " + "l1=0.417" + "l2=0 f=-0.797 shape=(1, 9000, 1)
logits [[ 5.6482253 -0.8396903  1.4742712 -9.472247 ]]
Iteration 100 of 1000: loss=0.403 " + "l1=0.395" + "l2=0.00785 f=-0.824 shape=(1, 9000, 1)
logits [[ 5.4077034 -0.78622    1.4528103 -9.369773 ]]
Iteration 200 of 1000: loss=0.398 " + "l1=0.388" + "l2=0.0103 f=-0.83 shape=(1, 9000, 1)
logits [[ 5.3222666 -0.7647949  1.4456651 -9.323213 ]]
Iteration 300 of 1000: loss=0.393 " + "l1=0.379" + "l2=0.0133 f=-0.838 shape=(1, 9000, 1)
logits [[ 5.235805  -0.7493548  1.4419646 -9.28188  ]]
Iteration 400 of 1000: loss=0.388 " + "l1=0.371" + "l2=0.0161 f=-0.847 shape=(1, 9000, 1)
logits [[ 5.155535  -0.7363149  1.4410794 -9.246354 ]]
Iteration 500 of 1000: loss=0.382 " + "l1=0.363" + "l2=0.0191 f=-0.854 shape=(1, 9000, 1)
logits [[ 5.072959  -0.7209092  1.4421406 -9.211238 ]]
Iteration 600 of 1000: loss=0.376 " + "l1=0.352" + "l2=0.0233 f=-0.864 shape=(1, 9000, 1)
logits [[ 4.9709077 -0.7048911  1.4465864 -9.167064 ]]
Iteration 700 of 1000: loss=0.369 " + "l1=0.342" + "l2=0.0263 f=-0.873 shape=(1, 9000, 1)
logits [[ 4.886096   -0.70970607  1.4617234  -9.128896  ]]
Iteration 800 of 1000: loss=0.362 " + "l1=0.332" + "l2=0.0291 f=-0.881 shape=(1, 9000, 1)
logits [[ 4.8037963  -0.71979004  1.4795084  -9.08841   ]]
Iteration 900 of 1000: loss=0.354 " + "l1=0.322" + "l2=0.0323 f=-0.889 shape=(1, 9000, 1)
logits [[ 4.722021  -0.7299889  1.503199  -9.050474 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.17 " + "l1=4.17" + "l2=0 f=-0.797 shape=(1, 9000, 1)
logits [[ 5.6482253 -0.8396903  1.4742712 -9.472247 ]]
Iteration 100 of 1000: loss=1.47 " + "l1=0.0323" + "l2=1.44 f=-1.17 shape=(1, 9000, 1)
logits [[ 1.6315085  0.604912   1.5992258 -8.508253 ]]
Iteration 200 of 1000: loss=1 " + "l1=0" + "l2=1 f=-1.16 shape=(1, 9000, 1)
logits [[ 1.6013193  0.5021796  1.6073061 -8.358021 ]]
Iteration 300 of 1000: loss=0.824 " + "l1=0" + "l2=0.824 f=-1.15 shape=(1, 9000, 1)
logits [[ 1.6362014   0.38650578  1.6422929  -8.2715645 ]]
Iteration 400 of 1000: loss=0.726 " + "l1=0" + "l2=0.726 f=-1.14 shape=(1, 9000, 1)
logits [[ 1.6462606  0.3145993  1.671477  -8.1988125]]
Iteration 500 of 1000: loss=0.661 " + "l1=0" + "l2=0.661 f=-1.13 shape=(1, 9000, 1)
logits [[ 1.6545914   0.25595543  1.6879576  -8.125382  ]]
Iteration 600 of 1000: loss=0.601 " + "l1=0.000535" + "l2=0.6 f=-1.12 shape=(1, 9000, 1)
logits [[ 1.7022811   0.18730895  1.7017456  -8.05599   ]]
Iteration 700 of 1000: loss=0.565 " + "l1=0" + "l2=0.565 f=-1.11 shape=(1, 9000, 1)
logits [[ 1.7064297   0.13853128  1.7177334  -7.986148  ]]
Iteration 800 of 1000: loss=0.542 " + "l1=0" + "l2=0.542 f=-1.1 shape=(1, 9000, 1)
logits [[ 1.6886632  0.1087357  1.7357224 -7.924798 ]]
Iteration 900 of 1000: loss=0.501 " + "l1=0.000842" + "l2=0.5 f=-1.08 shape=(1, 9000, 1)
logits [[ 1.7464535  0.0436336  1.7456112 -7.864538 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.3 " + "l1=2.3" + "l2=0 f=-0.797 shape=(1, 9000, 1)
logits [[ 5.6482253 -0.8396903  1.4742712 -9.472247 ]]
Iteration 100 of 1000: loss=1.59 " + "l1=1.04" + "l2=0.548 f=-1.01 shape=(1, 9000, 1)
logits [[ 3.3340993  -0.05482502  1.4430158  -8.76      ]]
Iteration 200 of 1000: loss=0.901 " + "l1=0.0167" + "l2=0.884 f=-1.13 shape=(1, 9000, 1)
logits [[ 1.6593193  0.5106967  1.6289989 -8.331134 ]]
Iteration 300 of 1000: loss=0.656 " + "l1=0.00193" + "l2=0.654 f=-1.12 shape=(1, 9000, 1)
logits [[ 1.6673588  0.3969299  1.6638517 -8.2177105]]
Iteration 400 of 1000: loss=0.574 " + "l1=0.00752" + "l2=0.566 f=-1.11 shape=(1, 9000, 1)
logits [[ 1.7153579   0.28916258  1.701693   -8.163859  ]]
Iteration 500 of 1000: loss=0.521 " + "l1=0.00534" + "l2=0.515 f=-1.11 shape=(1, 9000, 1)
logits [[ 1.7269306   0.22243592  1.7172177  -8.092757  ]]
Iteration 600 of 1000: loss=0.476 " + "l1=0.000807" + "l2=0.475 f=-1.1 shape=(1, 9000, 1)
logits [[ 1.7333943   0.17164479  1.731927   -8.026676  ]]
Iteration 700 of 1000: loss=0.441 " + "l1=0.00214" + "l2=0.439 f=-1.09 shape=(1, 9000, 1)
logits [[ 1.7389197   0.13463752  1.7350272  -7.960075  ]]
Iteration 800 of 1000: loss=0.415 " + "l1=0" + "l2=0.415 f=-1.08 shape=(1, 9000, 1)
logits [[ 1.7193576   0.11073288  1.7360548  -7.8808875 ]]
Iteration 900 of 1000: loss=0.389 " + "l1=0" + "l2=0.389 f=-1.07 shape=(1, 9000, 1)
logits [[ 1.7343267   0.07570274  1.7401582  -7.8169117 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.36 " + "l1=1.36" + "l2=0 f=-0.797 shape=(1, 9000, 1)
logits [[ 5.6482253 -0.8396903  1.4742712 -9.472247 ]]
Iteration 100 of 1000: loss=1.18 " + "l1=1.06" + "l2=0.119 f=-0.899 shape=(1, 9000, 1)
logits [[ 4.6726832 -0.5850244  1.4069753 -9.088748 ]]
Iteration 200 of 1000: loss=1.03 " + "l1=0.805" + "l2=0.229 f=-0.952 shape=(1, 9000, 1)
logits [[ 3.903728   -0.32041752  1.4277754  -8.819099  ]]
Iteration 300 of 1000: loss=0.805 " + "l1=0.396" + "l2=0.409 f=-1.03 shape=(1, 9000, 1)
logits [[ 2.7647161   0.10207418  1.5450608  -8.52747   ]]
Iteration 400 of 1000: loss=0.613 " + "l1=0.11" + "l2=0.503 f=-1.09 shape=(1, 9000, 1)
logits [[ 1.9901166  0.3122514  1.6508931 -8.295953 ]]
Iteration 500 of 1000: loss=0.464 " + "l1=0.00282" + "l2=0.461 f=-1.09 shape=(1, 9000, 1)
logits [[ 1.7291485   0.35601634  1.720467   -8.154777  ]]
Iteration 600 of 1000: loss=0.399 " + "l1=0.00298" + "l2=0.396 f=-1.06 shape=(1, 9000, 1)
logits [[ 1.7522866  0.3010741  1.7431306 -8.043482 ]]
Iteration 700 of 1000: loss=0.357 " + "l1=0.00729" + "l2=0.35 f=-1.04 shape=(1, 9000, 1)
logits [[ 1.781164    0.25085193  1.7587407  -7.954512  ]]
Iteration 800 of 1000: loss=0.326 " + "l1=0.000638" + "l2=0.325 f=-1.03 shape=(1, 9000, 1)
logits [[ 1.7697101  0.2236134  1.7677484 -7.8659596]]
Iteration 900 of 1000: loss=0.305 " + "l1=0" + "l2=0.305 f=-1.01 shape=(1, 9000, 1)
logits [[ 1.7665136   0.19304381  1.7693676  -7.7782245 ]]
--- 298.0322480201721 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.151 " + "l1=0.151" + "l2=0 f=-0.797 shape=(1, 9000, 1)
logits [[ 5.6482253 -0.8396903  1.4742712 -9.472247 ]]
Iteration 100 of 1000: loss=0.15 " + "l1=0.15" + "l2=0.000459 f=-0.799 shape=(1, 9000, 1)
logits [[ 5.5824614  -0.80830616  1.4494576  -9.418178  ]]
Iteration 200 of 1000: loss=0.15 " + "l1=0.15" + "l2=0.000523 f=-0.799 shape=(1, 9000, 1)
logits [[ 5.569463  -0.8018847  1.4444772 -9.407091 ]]
Iteration 300 of 1000: loss=0.15 " + "l1=0.15" + "l2=0.000661 f=-0.799 shape=(1, 9000, 1)
logits [[ 5.5551734  -0.79480094  1.4389464  -9.395265  ]]
Iteration 400 of 1000: loss=0.15 " + "l1=0.149" + "l2=0.000833 f=-0.799 shape=(1, 9000, 1)
logits [[ 5.5422244 -0.7885332  1.4341207 -9.385154 ]]
Iteration 500 of 1000: loss=0.15 " + "l1=0.149" + "l2=0.000986 f=-0.8 shape=(1, 9000, 1)
logits [[ 5.5311728 -0.7830575  1.4301494 -9.37711  ]]
Iteration 600 of 1000: loss=0.15 " + "l1=0.149" + "l2=0.00111 f=-0.8 shape=(1, 9000, 1)
logits [[ 5.5214815 -0.7780506  1.4268504 -9.370567 ]]
Iteration 700 of 1000: loss=0.15 " + "l1=0.149" + "l2=0.0012 f=-0.801 shape=(1, 9000, 1)
logits [[ 5.5125446 -0.7736486  1.4240931 -9.365016 ]]
Iteration 800 of 1000: loss=0.15 " + "l1=0.149" + "l2=0.00144 f=-0.801 shape=(1, 9000, 1)
logits [[ 5.5053186  -0.76990646  1.4219395  -9.3605175 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.51 " + "l1=1.51" + "l2=0 f=-0.797 shape=(1, 9000, 1)
logits [[ 5.6482253 -0.8396903  1.4742712 -9.472247 ]]
Iteration 100 of 1000: loss=1.45 " + "l1=1.41" + "l2=0.0355 f=-0.813 shape=(1, 9000, 1)
logits [[ 5.0690475  -0.55665594  1.2644725  -9.028402  ]]
Iteration 200 of 1000: loss=1.41 " + "l1=1.36" + "l2=0.0568 f=-0.818 shape=(1, 9000, 1)
logits [[ 4.777014   -0.42024434  1.1707747  -8.800038  ]]
Iteration 300 of 1000: loss=1.39 " + "l1=1.32" + "l2=0.0756 f=-0.82 shape=(1, 9000, 1)
logits [[ 4.554132  -0.3216011  1.1100094 -8.624266 ]]
Iteration 400 of 1000: loss=1.38 " + "l1=1.29" + "l2=0.0901 f=-0.822 shape=(1, 9000, 1)
logits [[ 4.379029  -0.2542058  1.077161  -8.491222 ]]
Iteration 500 of 1000: loss=1.36 " + "l1=1.26" + "l2=0.105 f=-0.828 shape=(1, 9000, 1)
logits [[ 4.1903214  -0.18418284  1.0507442  -8.367925  ]]
Iteration 600 of 1000: loss=1.34 " + "l1=1.23" + "l2=0.116 f=-0.831 shape=(1, 9000, 1)
logits [[ 4.0171494  -0.12075578  1.0324552  -8.251405  ]]
Iteration 700 of 1000: loss=1.32 " + "l1=1.2" + "l2=0.128 f=-0.83 shape=(1, 9000, 1)
logits [[ 3.832531   -0.05387119  1.0181465  -8.118167  ]]
Iteration 800 of 1000: loss=1.3 " + "l1=1.16" + "l2=0.136 f=-0.825 shape=(1, 9000, 1)
logits [[ 3.6516039e+00  3.3670161e-03  1.0092359e+00 -7.9646063e+00]]
Iteration 900 of 1000: loss=1.27 " + "l1=1.13" + "l2=0.144 f=-0.818 shape=(1, 9000, 1)
logits [[ 3.4654834  0.0486198  1.0047019 -7.791807 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=15.1 " + "l1=15.1" + "l2=0 f=-0.797 shape=(1, 9000, 1)
logits [[ 5.6482253 -0.8396903  1.4742712 -9.472247 ]]
Iteration 100 of 1000: loss=9.59 " + "l1=7.51" + "l2=2.09 f=-0.934 shape=(1, 9000, 1)
logits [[ 1.0477723   1.0043002   0.66963214 -6.457455  ]]
Iteration 200 of 1000: loss=8.41 " + "l1=6.13" + "l2=2.28 f=-0.827 shape=(1, 9000, 1)
logits [[ 0.7305025   0.7406439   0.61356354 -5.3914313 ]]
Iteration 300 of 1000: loss=7.7 " + "l1=5.24" + "l2=2.46 f=-0.751 shape=(1, 9000, 1)
logits [[ 0.5706332   0.5438764   0.54713595 -4.665987  ]]
Iteration 400 of 1000: loss=7.14 " + "l1=4.56" + "l2=2.58 f=-0.687 shape=(1, 9000, 1)
logits [[ 0.47145635  0.4221195   0.449425   -4.0898156 ]]
Iteration 500 of 1000: loss=6.58 " + "l1=3.95" + "l2=2.64 f=-0.634 shape=(1, 9000, 1)
logits [[ 0.35484576  0.3509118   0.348851   -3.5908806 ]]
Iteration 600 of 1000: loss=5.88 " + "l1=3.04" + "l2=2.84 f=-0.565 shape=(1, 9000, 1)
logits [[ 0.18138586  0.19870551  0.20293605 -2.841102  ]]
Iteration 700 of 1000: loss=5.1 " + "l1=2.28" + "l2=2.81 f=-0.492 shape=(1, 9000, 1)
logits [[ 0.07946119  0.0798003   0.07588735 -2.2018504 ]]
Iteration 800 of 1000: loss=4.42 " + "l1=1.58" + "l2=2.84 f=-0.429 shape=(1, 9000, 1)
logits [[-0.05784033 -0.02384265 -0.03602981 -1.599102  ]]
Iteration 900 of 1000: loss=3.82 " + "l1=0.983" + "l2=2.83 f=-0.409 shape=(1, 9000, 1)
logits [[-0.17591435 -0.16196893 -0.15840447 -1.141635  ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=151 " + "l1=151" + "l2=0 f=-0.797 shape=(1, 9000, 1)
logits [[ 5.6482253 -0.8396903  1.4742712 -9.472247 ]]
Iteration 100 of 1000: loss=43.5 " + "l1=24.8" + "l2=18.7 f=-0.569 shape=(1, 9000, 1)
logits [[-0.05309673  0.07565087  0.09312677 -2.3913608 ]]
Iteration 200 of 1000: loss=19.1 " + "l1=0.0549" + "l2=19 f=-0.353 shape=(1, 9000, 1)
logits [[-0.39101505 -0.33902022 -0.338489   -0.3439799 ]]
Iteration 300 of 1000: loss=14.2 " + "l1=0.111" + "l2=14.1 f=-0.378 shape=(1, 9000, 1)
logits [[-0.4100102  -0.35597968 -0.3800883  -0.36711523]]
Iteration 400 of 1000: loss=11.9 " + "l1=0" + "l2=11.9 f=-0.379 shape=(1, 9000, 1)
logits [[-0.41436803 -0.36673573 -0.37302214 -0.3635769 ]]
Iteration 500 of 1000: loss=10.5 " + "l1=0.163" + "l2=10.4 f=-0.376 shape=(1, 9000, 1)
logits [[-0.4051603  -0.35989106 -0.36139357 -0.37616226]]
Iteration 600 of 1000: loss=9.53 " + "l1=0" + "l2=9.53 f=-0.37 shape=(1, 9000, 1)
logits [[-0.41170207 -0.36683115 -0.37435886 -0.32873142]]
Iteration 700 of 1000: loss=8.7 " + "l1=0" + "l2=8.7 f=-0.379 shape=(1, 9000, 1)
logits [[-0.4425855  -0.35374096 -0.3688906  -0.350792  ]]
Iteration 800 of 1000: loss=8.07 " + "l1=0" + "l2=8.07 f=-0.368 shape=(1, 9000, 1)
logits [[-0.369488   -0.38747025 -0.36924776 -0.34496284]]
Iteration 900 of 1000: loss=7.58 " + "l1=0" + "l2=7.58 f=-0.374 shape=(1, 9000, 1)
logits [[-0.415923   -0.35707736 -0.3760951  -0.34783673]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=83.2 " + "l1=83.2" + "l2=0 f=-0.797 shape=(1, 9000, 1)
logits [[ 5.6482253 -0.8396903  1.4742712 -9.472247 ]]
Iteration 100 of 1000: loss=32.1 " + "l1=21" + "l2=11 f=-0.659 shape=(1, 9000, 1)
logits [[ 0.30468342  0.27760205  0.29737628 -3.514776  ]]
Iteration 200 of 1000: loss=17 " + "l1=1.46" + "l2=15.5 f=-0.374 shape=(1, 9000, 1)
logits [[-0.3165212  -0.31829447 -0.29837877 -0.5634585 ]]
Iteration 300 of 1000: loss=11.3 " + "l1=0" + "l2=11.3 f=-0.353 shape=(1, 9000, 1)
logits [[-0.35724294 -0.35047394 -0.36211613 -0.342784  ]]
Iteration 400 of 1000: loss=9.76 " + "l1=0" + "l2=9.76 f=-0.364 shape=(1, 9000, 1)
logits [[-0.38524744 -0.36218306 -0.36760044 -0.3413782 ]]
Iteration 500 of 1000: loss=8.74 " + "l1=0" + "l2=8.74 f=-0.372 shape=(1, 9000, 1)
logits [[-0.38289872 -0.41638    -0.36960995 -0.3204205 ]]
Iteration 600 of 1000: loss=7.91 " + "l1=0.0332" + "l2=7.87 f=-0.387 shape=(1, 9000, 1)
logits [[-0.41399646 -0.36706287 -0.39359093 -0.37310687]]
Iteration 700 of 1000: loss=7.18 " + "l1=0" + "l2=7.18 f=-0.393 shape=(1, 9000, 1)
logits [[-0.42447832 -0.40264755 -0.3858928  -0.3591879 ]]
Iteration 800 of 1000: loss=6.8 " + "l1=0" + "l2=6.8 f=-0.393 shape=(1, 9000, 1)
logits [[-0.4298977  -0.41003734 -0.40202835 -0.33160344]]
Iteration 900 of 1000: loss=6.43 " + "l1=0" + "l2=6.43 f=-0.4 shape=(1, 9000, 1)
logits [[-0.45868474 -0.37591934 -0.42653525 -0.3400004 ]]
--- 309.1747508049011 seconds ---
Adv result:3
Loading record A00282
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.108 " + "l1=0.108" + "l2=0 f=-0.697 shape=(1, 9000, 1)
logits [[  7.0263352  -3.7948108   4.2088056 -10.228412 ]]
Iteration 100 of 1000: loss=0.108 " + "l1=0.107" + "l2=0.000399 f=-0.696 shape=(1, 9000, 1)
logits [[  6.9853363  -3.7406893   4.1707892 -10.198472 ]]
Iteration 200 of 1000: loss=0.108 " + "l1=0.107" + "l2=0.000403 f=-0.696 shape=(1, 9000, 1)
logits [[  6.979525  -3.732957   4.164936 -10.193682]]
Iteration 300 of 1000: loss=0.107 " + "l1=0.107" + "l2=0.000492 f=-0.695 shape=(1, 9000, 1)
logits [[  6.9721937  -3.7233207   4.1577783 -10.188099 ]]
Iteration 400 of 1000: loss=0.107 " + "l1=0.107" + "l2=0.000612 f=-0.695 shape=(1, 9000, 1)
logits [[  6.9651113  -3.7143395   4.151176  -10.182984 ]]
Iteration 500 of 1000: loss=0.107 " + "l1=0.107" + "l2=0.0007 f=-0.695 shape=(1, 9000, 1)
logits [[  6.958674   -3.7063956   4.145463  -10.1787   ]]
Iteration 600 of 1000: loss=0.107 " + "l1=0.107" + "l2=0.000844 f=-0.695 shape=(1, 9000, 1)
logits [[  6.952755   -3.6994243   4.140642  -10.175041 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.08 " + "l1=1.08" + "l2=0 f=-0.697 shape=(1, 9000, 1)
logits [[  7.0263352  -3.7948108   4.2088056 -10.228412 ]]
Iteration 100 of 1000: loss=1.03 " + "l1=0.994" + "l2=0.0344 f=-0.683 shape=(1, 9000, 1)
logits [[ 6.6419697 -3.3009956  3.8637116 -9.937001 ]]
Iteration 200 of 1000: loss=1 " + "l1=0.95" + "l2=0.0521 f=-0.681 shape=(1, 9000, 1)
logits [[ 6.4455576 -3.0546668  3.6991725 -9.815548 ]]
Iteration 300 of 1000: loss=0.983 " + "l1=0.916" + "l2=0.0673 f=-0.68 shape=(1, 9000, 1)
logits [[ 6.2903485 -2.8700843  3.566323  -9.705399 ]]
Iteration 400 of 1000: loss=0.971 " + "l1=0.893" + "l2=0.0781 f=-0.68 shape=(1, 9000, 1)
logits [[ 6.1759615 -2.7520914  3.475412  -9.618671 ]]
Iteration 500 of 1000: loss=0.962 " + "l1=0.876" + "l2=0.0852 f=-0.677 shape=(1, 9000, 1)
logits [[ 6.091754  -2.67228    3.4178905 -9.547007 ]]
Iteration 600 of 1000: loss=0.953 " + "l1=0.861" + "l2=0.0922 f=-0.673 shape=(1, 9000, 1)
logits [[ 6.010398  -2.6012814  3.3686235 -9.470437 ]]
Iteration 700 of 1000: loss=0.946 " + "l1=0.848" + "l2=0.0976 f=-0.668 shape=(1, 9000, 1)
logits [[ 5.937505  -2.54324    3.3349218 -9.402349 ]]
Iteration 800 of 1000: loss=0.938 " + "l1=0.835" + "l2=0.102 f=-0.663 shape=(1, 9000, 1)
logits [[ 5.8622394 -2.4923944  3.3097427 -9.3307085]]
Iteration 900 of 1000: loss=0.929 " + "l1=0.821" + "l2=0.108 f=-0.656 shape=(1, 9000, 1)
logits [[ 5.7725053 -2.4415216  3.2818258 -9.235354 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.8 " + "l1=10.8" + "l2=0 f=-0.697 shape=(1, 9000, 1)
logits [[  7.0263352  -3.7948108   4.2088056 -10.228412 ]]
Iteration 100 of 1000: loss=5.25 " + "l1=2.28" + "l2=2.98 f=-0.614 shape=(1, 9000, 1)
logits [[ 2.1258793  -0.15015317  1.4910973  -5.92325   ]]
Iteration 200 of 1000: loss=4.01 " + "l1=0.758" + "l2=3.26 f=-0.621 shape=(1, 9000, 1)
logits [[ 1.0876908   0.32970846  1.0869032  -4.9873657 ]]
Iteration 300 of 1000: loss=3.36 " + "l1=0.38" + "l2=2.98 f=-0.59 shape=(1, 9000, 1)
logits [[ 0.8939659  0.5144496  0.8793813 -4.6490283]]
Iteration 400 of 1000: loss=2.95 " + "l1=0.179" + "l2=2.77 f=-0.579 shape=(1, 9000, 1)
logits [[ 0.745419   0.5678721  0.7472891 -4.3778887]]
Iteration 500 of 1000: loss=2.71 " + "l1=0.0127" + "l2=2.69 f=-0.565 shape=(1, 9000, 1)
logits [[ 0.6300379   0.61863005  0.63131046 -4.1416063 ]]
Iteration 600 of 1000: loss=2.56 " + "l1=0.0159" + "l2=2.55 f=-0.557 shape=(1, 9000, 1)
logits [[ 0.5760812   0.5753      0.59119445 -3.9703243 ]]
Iteration 700 of 1000: loss=2.45 " + "l1=0.00408" + "l2=2.45 f=-0.544 shape=(1, 9000, 1)
logits [[ 0.5188838  0.547262   0.5513397 -3.7938442]]
Iteration 800 of 1000: loss=2.37 " + "l1=0.00788" + "l2=2.36 f=-0.532 shape=(1, 9000, 1)
logits [[ 0.4912348   0.5118474   0.51972324 -3.6515248 ]]
Iteration 900 of 1000: loss=2.23 " + "l1=0.000677" + "l2=2.23 f=-0.517 shape=(1, 9000, 1)
logits [[ 0.45975006  0.4739028   0.47457984 -3.4780223 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.95 " + "l1=5.95" + "l2=0 f=-0.697 shape=(1, 9000, 1)
logits [[  7.0263352  -3.7948108   4.2088056 -10.228412 ]]
Iteration 100 of 1000: loss=4.02 " + "l1=2.78" + "l2=1.24 f=-0.663 shape=(1, 9000, 1)
logits [[ 3.848226  -1.2107916  2.2533135 -7.5436015]]
Iteration 200 of 1000: loss=3.4 " + "l1=1.92" + "l2=1.48 f=-0.638 shape=(1, 9000, 1)
logits [[ 2.883929  -0.6082666  1.7731396 -6.601278 ]]
Iteration 300 of 1000: loss=3.09 " + "l1=1.52" + "l2=1.57 f=-0.614 shape=(1, 9000, 1)
logits [[ 2.3625488  -0.39271346  1.5336307  -5.957806  ]]
Iteration 400 of 1000: loss=2.78 " + "l1=1.11" + "l2=1.66 f=-0.597 shape=(1, 9000, 1)
logits [[ 1.7869385  -0.23429544  1.3338348  -5.275699  ]]
Iteration 500 of 1000: loss=2.4 " + "l1=0.664" + "l2=1.74 f=-0.574 shape=(1, 9000, 1)
logits [[ 1.1228216  -0.08402563  1.1008321  -4.4339714 ]]
Iteration 600 of 1000: loss=2.1 " + "l1=0.509" + "l2=1.59 f=-0.546 shape=(1, 9000, 1)
logits [[ 9.2428076e-01  3.4210552e-03  9.2955393e-01 -4.0413756e+00]]
Iteration 700 of 1000: loss=1.89 " + "l1=0.378" + "l2=1.51 f=-0.522 shape=(1, 9000, 1)
logits [[ 0.7839892   0.10324173  0.7901335  -3.7649887 ]]
Iteration 800 of 1000: loss=1.74 " + "l1=0.234" + "l2=1.5 f=-0.508 shape=(1, 9000, 1)
logits [[ 0.6015737  0.1847123  0.6105633 -3.4302971]]
Iteration 900 of 1000: loss=1.62 " + "l1=0.133" + "l2=1.48 f=-0.495 shape=(1, 9000, 1)
logits [[ 0.47924164  0.2407204   0.4825071  -3.182479  ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=8.39 " + "l1=8.39" + "l2=0 f=-0.697 shape=(1, 9000, 1)
logits [[  7.0263352  -3.7948108   4.2088056 -10.228412 ]]
Iteration 100 of 1000: loss=4.77 " + "l1=2.62" + "l2=2.15 f=-0.641 shape=(1, 9000, 1)
logits [[ 2.8152158 -0.5604049  1.7830215 -6.6035295]]
Iteration 200 of 1000: loss=3.88 " + "l1=1.53" + "l2=2.35 f=-0.619 shape=(1, 9000, 1)
logits [[ 1.9127156  -0.05671436  1.3322878  -5.6660666 ]]
Iteration 300 of 1000: loss=3.38 " + "l1=0.891" + "l2=2.49 f=-0.601 shape=(1, 9000, 1)
logits [[ 1.313091    0.16400512  1.104345   -4.9870424 ]]
Iteration 400 of 1000: loss=2.84 " + "l1=0.391" + "l2=2.45 f=-0.583 shape=(1, 9000, 1)
logits [[ 0.8512238   0.35789484  0.8622503  -4.402658  ]]
Iteration 500 of 1000: loss=2.6 " + "l1=0.321" + "l2=2.28 f=-0.57 shape=(1, 9000, 1)
logits [[ 0.7932667   0.37944266  0.793157   -4.2455025 ]]
Iteration 600 of 1000: loss=2.45 " + "l1=0.263" + "l2=2.18 f=-0.555 shape=(1, 9000, 1)
logits [[ 0.70769346  0.38318712  0.7231363  -4.03221   ]]
Iteration 700 of 1000: loss=2.27 " + "l1=0.19" + "l2=2.08 f=-0.528 shape=(1, 9000, 1)
logits [[ 0.61005586  0.37662095  0.6211994  -3.72119   ]]
Iteration 800 of 1000: loss=2.03 " + "l1=0.0902" + "l2=1.94 f=-0.504 shape=(1, 9000, 1)
logits [[ 0.5058608   0.38992572  0.506371   -3.4162498 ]]
Iteration 900 of 1000: loss=1.82 " + "l1=0" + "l2=1.82 f=-0.489 shape=(1, 9000, 1)
logits [[ 0.37861326  0.39460248  0.39318505 -3.1241255 ]]
--- 295.520085811615 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0282 " + "l1=0.0282" + "l2=0 f=-0.697 shape=(1, 9000, 1)
logits [[  7.0263352  -3.7948108   4.2088056 -10.228412 ]]
Iteration 100 of 1000: loss=0.028 " + "l1=0.0277" + "l2=0.000208 f=-0.7 shape=(1, 9000, 1)
logits [[  7.0051317  -3.813135    4.230837  -10.222194 ]]
Iteration 200 of 1000: loss=0.0279 " + "l1=0.0277" + "l2=0.00017 f=-0.7 shape=(1, 9000, 1)
logits [[  7.0040817  -3.8141408   4.2324195 -10.221993 ]]
Iteration 300 of 1000: loss=0.0279 " + "l1=0.0277" + "l2=0.000217 f=-0.7 shape=(1, 9000, 1)
logits [[  7.001204   -3.8168268   4.2360296 -10.2212305]]
Iteration 400 of 1000: loss=0.0278 " + "l1=0.0276" + "l2=0.000238 f=-0.701 shape=(1, 9000, 1)
logits [[  6.9978957  -3.8198137   4.240075  -10.220508 ]]
Iteration 500 of 1000: loss=0.0278 " + "l1=0.0275" + "l2=0.000311 f=-0.701 shape=(1, 9000, 1)
logits [[  6.9943247  -3.8225858   4.244027  -10.219768 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.282 " + "l1=0.282" + "l2=0 f=-0.697 shape=(1, 9000, 1)
logits [[  7.0263352  -3.7948108   4.2088056 -10.228412 ]]
Iteration 100 of 1000: loss=0.261 " + "l1=0.249" + "l2=0.0119 f=-0.716 shape=(1, 9000, 1)
logits [[  6.8649063  -3.9365728   4.3702445 -10.1635895]]
Iteration 200 of 1000: loss=0.253 " + "l1=0.236" + "l2=0.017 f=-0.724 shape=(1, 9000, 1)
logits [[  6.8012753  -3.99816     4.442388  -10.14187  ]]
Iteration 300 of 1000: loss=0.245 " + "l1=0.225" + "l2=0.0205 f=-0.73 shape=(1, 9000, 1)
logits [[  6.7446556  -4.043691    4.4969425 -10.11912  ]]
Iteration 400 of 1000: loss=0.238 " + "l1=0.214" + "l2=0.0238 f=-0.736 shape=(1, 9000, 1)
logits [[  6.6847386  -4.0817018   4.542748  -10.090009 ]]
Iteration 500 of 1000: loss=0.23 " + "l1=0.203" + "l2=0.0269 f=-0.741 shape=(1, 9000, 1)
logits [[  6.6235604  -4.116604    4.5887575 -10.058383 ]]
Iteration 600 of 1000: loss=0.223 " + "l1=0.193" + "l2=0.0297 f=-0.746 shape=(1, 9000, 1)
logits [[  6.5604153  -4.147426    4.6272125 -10.025488 ]]
Iteration 700 of 1000: loss=0.216 " + "l1=0.184" + "l2=0.0329 f=-0.751 shape=(1, 9000, 1)
logits [[ 6.4941516 -4.169945   4.6590776 -9.986711 ]]
Iteration 800 of 1000: loss=0.21 " + "l1=0.175" + "l2=0.0357 f=-0.755 shape=(1, 9000, 1)
logits [[ 6.4277177 -4.1846237  4.680335  -9.942334 ]]
Iteration 900 of 1000: loss=0.205 " + "l1=0.166" + "l2=0.0387 f=-0.758 shape=(1, 9000, 1)
logits [[ 6.365874 -4.201247  4.701061 -9.89964 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.82 " + "l1=2.82" + "l2=0 f=-0.697 shape=(1, 9000, 1)
logits [[  7.0263352  -3.7948108   4.2088056 -10.228412 ]]
Iteration 100 of 1000: loss=0.995 " + "l1=0.0877" + "l2=0.908 f=-0.812 shape=(1, 9000, 1)
logits [[ 5.0233707 -4.449992   4.935717  -8.758063 ]]
Iteration 200 of 1000: loss=0.634 " + "l1=0" + "l2=0.634 f=-0.814 shape=(1, 9000, 1)
logits [[ 4.9964247 -4.5385923  5.0074177 -8.721544 ]]
Iteration 300 of 1000: loss=0.478 " + "l1=0" + "l2=0.478 f=-0.799 shape=(1, 9000, 1)
logits [[ 5.0187945 -4.5568514  5.025424  -8.682901 ]]
Iteration 400 of 1000: loss=0.395 " + "l1=0.00505" + "l2=0.39 f=-0.783 shape=(1, 9000, 1)
logits [[ 5.0249114 -4.525031   5.019862  -8.652011 ]]
Iteration 500 of 1000: loss=0.335 " + "l1=0.00424" + "l2=0.331 f=-0.777 shape=(1, 9000, 1)
logits [[ 5.001261 -4.494211  4.997018 -8.610641]]
Iteration 600 of 1000: loss=0.291 " + "l1=0" + "l2=0.291 f=-0.77 shape=(1, 9000, 1)
logits [[ 4.96761   -4.4672856  4.9823008 -8.563011 ]]
Iteration 700 of 1000: loss=0.254 " + "l1=0" + "l2=0.254 f=-0.763 shape=(1, 9000, 1)
logits [[ 4.952863 -4.437401  4.959241 -8.527843]]
Iteration 800 of 1000: loss=0.229 " + "l1=0" + "l2=0.229 f=-0.759 shape=(1, 9000, 1)
logits [[ 4.9252157 -4.4073944  4.9342737 -8.488674 ]]
Iteration 900 of 1000: loss=0.21 " + "l1=0.00123" + "l2=0.209 f=-0.761 shape=(1, 9000, 1)
logits [[ 4.9140563 -4.3870163  4.912831  -8.483487 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.55 " + "l1=1.55" + "l2=0 f=-0.697 shape=(1, 9000, 1)
logits [[  7.0263352  -3.7948108   4.2088056 -10.228412 ]]
Iteration 100 of 1000: loss=0.921 " + "l1=0.572" + "l2=0.349 f=-0.793 shape=(1, 9000, 1)
logits [[ 5.862819  -4.3492937  4.8220377 -9.505672 ]]
Iteration 200 of 1000: loss=0.697 " + "l1=0.286" + "l2=0.411 f=-0.811 shape=(1, 9000, 1)
logits [[ 5.479255  -4.4625144  4.960128  -9.220756 ]]
Iteration 300 of 1000: loss=0.488 " + "l1=0.0341" + "l2=0.454 f=-0.801 shape=(1, 9000, 1)
logits [[ 5.106699  -4.537022   5.0446615 -8.819581 ]]
Iteration 400 of 1000: loss=0.335 " + "l1=0.00734" + "l2=0.328 f=-0.783 shape=(1, 9000, 1)
logits [[ 5.01801   -4.4877567  5.004662  -8.66703  ]]
Iteration 500 of 1000: loss=0.259 " + "l1=5.93e-05" + "l2=0.259 f=-0.775 shape=(1, 9000, 1)
logits [[ 4.968951  -4.4462423  4.9688435 -8.591492 ]]
Iteration 600 of 1000: loss=0.222 " + "l1=0.000407" + "l2=0.222 f=-0.769 shape=(1, 9000, 1)
logits [[ 4.932213  -4.4093156  4.9314723 -8.531801 ]]
Iteration 700 of 1000: loss=0.203 " + "l1=0" + "l2=0.203 f=-0.772 shape=(1, 9000, 1)
logits [[ 4.8946657 -4.385835   4.906166  -8.501119 ]]
Iteration 800 of 1000: loss=0.19 " + "l1=0" + "l2=0.19 f=-0.774 shape=(1, 9000, 1)
logits [[ 4.876791  -4.3685613  4.8859825 -8.49055  ]]
Iteration 900 of 1000: loss=0.179 " + "l1=0" + "l2=0.179 f=-0.776 shape=(1, 9000, 1)
logits [[ 4.868321  -4.3537636  4.87056   -8.490711 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.916 " + "l1=0.916" + "l2=0 f=-0.697 shape=(1, 9000, 1)
logits [[  7.0263352  -3.7948108   4.2088056 -10.228412 ]]
Iteration 100 of 1000: loss=0.685 " + "l1=0.551" + "l2=0.133 f=-0.757 shape=(1, 9000, 1)
logits [[ 6.3857927 -4.219605   4.6892843 -9.883997 ]]
Iteration 200 of 1000: loss=0.591 " + "l1=0.43" + "l2=0.161 f=-0.78 shape=(1, 9000, 1)
logits [[ 6.169755  -4.3634205  4.846753  -9.77458  ]]
Iteration 300 of 1000: loss=0.512 " + "l1=0.335" + "l2=0.177 f=-0.788 shape=(1, 9000, 1)
logits [[ 5.9725084 -4.446859   4.942373  -9.619591 ]]
Iteration 400 of 1000: loss=0.439 " + "l1=0.248" + "l2=0.191 f=-0.791 shape=(1, 9000, 1)
logits [[ 5.757646  -4.4840713  4.994595  -9.430948 ]]
Iteration 500 of 1000: loss=0.359 " + "l1=0.151" + "l2=0.208 f=-0.782 shape=(1, 9000, 1)
logits [[ 5.4933896 -4.50002    5.028698  -9.152017 ]]
Iteration 600 of 1000: loss=0.268 " + "l1=0.0348" + "l2=0.233 f=-0.774 shape=(1, 9000, 1)
logits [[ 5.1202483 -4.477156   5.013236  -8.753618 ]]
Iteration 700 of 1000: loss=0.201 " + "l1=0.000444" + "l2=0.2 f=-0.775 shape=(1, 9000, 1)
logits [[ 4.958073  -4.4303575  4.9567084 -8.584186 ]]
Iteration 800 of 1000: loss=0.179 " + "l1=0.00162" + "l2=0.177 f=-0.777 shape=(1, 9000, 1)
logits [[ 4.9217014 -4.3970113  4.916707  -8.5508795]]
Iteration 900 of 1000: loss=0.166 " + "l1=0" + "l2=0.166 f=-0.782 shape=(1, 9000, 1)
logits [[ 4.8909574 -4.38355    4.8920183 -8.527012 ]]
--- 291.25885796546936 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.173 " + "l1=0.173" + "l2=0 f=-0.697 shape=(1, 9000, 1)
logits [[  7.0263352  -3.7948108   4.2088056 -10.228412 ]]
Iteration 100 of 1000: loss=0.172 " + "l1=0.171" + "l2=0.000452 f=-0.693 shape=(1, 9000, 1)
logits [[  6.9799504  -3.7704003   4.185463  -10.168618 ]]
Iteration 200 of 1000: loss=0.172 " + "l1=0.171" + "l2=0.000475 f=-0.693 shape=(1, 9000, 1)
logits [[  6.972363   -3.7660208   4.1812315 -10.159771 ]]
Iteration 300 of 1000: loss=0.172 " + "l1=0.171" + "l2=0.000581 f=-0.693 shape=(1, 9000, 1)
logits [[  6.9636073  -3.7618003   4.1769533 -10.149027 ]]
Iteration 400 of 1000: loss=0.172 " + "l1=0.171" + "l2=0.000664 f=-0.692 shape=(1, 9000, 1)
logits [[  6.955277   -3.7581425   4.173263  -10.138956 ]]
Iteration 500 of 1000: loss=0.172 " + "l1=0.171" + "l2=0.000791 f=-0.692 shape=(1, 9000, 1)
logits [[  6.947427   -3.7550597   4.1702623 -10.129721 ]]
Iteration 600 of 1000: loss=0.172 " + "l1=0.171" + "l2=0.00091 f=-0.691 shape=(1, 9000, 1)
logits [[  6.9400873  -3.7525392   4.1678066 -10.121233 ]]
Iteration 700 of 1000: loss=0.171 " + "l1=0.17" + "l2=0.00101 f=-0.691 shape=(1, 9000, 1)
logits [[  6.9333296  -3.750734    4.1660447 -10.113686 ]]
Iteration 800 of 1000: loss=0.172 " + "l1=0.17" + "l2=0.00117 f=-0.691 shape=(1, 9000, 1)
logits [[  6.9270473  -3.7493463   4.1647677 -10.10667  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.73 " + "l1=1.73" + "l2=0 f=-0.697 shape=(1, 9000, 1)
logits [[  7.0263352  -3.7948108   4.2088056 -10.228412 ]]
Iteration 100 of 1000: loss=1.66 " + "l1=1.62" + "l2=0.0429 f=-0.666 shape=(1, 9000, 1)
logits [[ 6.5612698 -3.5866773  4.001898  -9.639761 ]]
Iteration 200 of 1000: loss=1.64 " + "l1=1.57" + "l2=0.0617 f=-0.657 shape=(1, 9000, 1)
logits [[ 6.3612304 -3.503526   3.9025452 -9.387913 ]]
Iteration 300 of 1000: loss=1.61 " + "l1=1.53" + "l2=0.0795 f=-0.644 shape=(1, 9000, 1)
logits [[ 6.1702757 -3.4063752  3.8082788 -9.146256 ]]
Iteration 400 of 1000: loss=1.59 " + "l1=1.49" + "l2=0.0952 f=-0.628 shape=(1, 9000, 1)
logits [[ 5.995649  -3.3183167  3.7283583 -8.918262 ]]
Iteration 500 of 1000: loss=1.56 " + "l1=1.45" + "l2=0.112 f=-0.614 shape=(1, 9000, 1)
logits [[ 5.822035  -3.2463398  3.6588905 -8.689609 ]]
Iteration 600 of 1000: loss=1.54 " + "l1=1.41" + "l2=0.129 f=-0.598 shape=(1, 9000, 1)
logits [[ 5.6347227 -3.176339   3.593247  -8.442215 ]]
Iteration 700 of 1000: loss=1.51 " + "l1=1.36" + "l2=0.148 f=-0.582 shape=(1, 9000, 1)
logits [[ 5.429523  -3.1090717  3.529202  -8.175775 ]]
Iteration 800 of 1000: loss=1.48 " + "l1=1.31" + "l2=0.167 f=-0.564 shape=(1, 9000, 1)
logits [[ 5.2168055 -3.0562594  3.475268  -7.8913445]]
Iteration 900 of 1000: loss=1.44 " + "l1=1.26" + "l2=0.187 f=-0.55 shape=(1, 9000, 1)
logits [[ 4.983007  -3.0107346  3.4160762 -7.5893354]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=17.3 " + "l1=17.3" + "l2=0 f=-0.697 shape=(1, 9000, 1)
logits [[  7.0263352  -3.7948108   4.2088056 -10.228412 ]]
Iteration 100 of 1000: loss=8.57 " + "l1=3.83" + "l2=4.74 f=-0.309 shape=(1, 9000, 1)
logits [[ 1.2980192 -1.2960403  1.2962362 -2.5324693]]
Iteration 200 of 1000: loss=6.11 " + "l1=0.713" + "l2=5.39 f=-0.207 shape=(1, 9000, 1)
logits [[ 0.08430912 -0.6695869   0.23491862 -0.4783753 ]]
Iteration 300 of 1000: loss=4.76 " + "l1=0.0455" + "l2=4.72 f=-0.204 shape=(1, 9000, 1)
logits [[-0.21181229 -0.6437729   0.04316585 -0.00235777]]
Iteration 400 of 1000: loss=4.13 " + "l1=0" + "l2=4.13 f=-0.227 shape=(1, 9000, 1)
logits [[-0.2748856  -0.73472667  0.04279293  0.05779161]]
Iteration 500 of 1000: loss=3.73 " + "l1=0.0174" + "l2=3.71 f=-0.236 shape=(1, 9000, 1)
logits [[-0.25310296 -0.7923864   0.05999256  0.04261093]]
Iteration 600 of 1000: loss=3.44 " + "l1=0.0508" + "l2=3.39 f=-0.238 shape=(1, 9000, 1)
logits [[-0.2451483  -0.8199145   0.08123592  0.03038941]]
Iteration 700 of 1000: loss=3.16 " + "l1=0.00997" + "l2=3.15 f=-0.248 shape=(1, 9000, 1)
logits [[-0.29133824 -0.8399016   0.07555628  0.06558327]]
Iteration 800 of 1000: loss=2.96 " + "l1=0" + "l2=2.96 f=-0.251 shape=(1, 9000, 1)
logits [[-0.32819903 -0.85239184  0.06912016  0.10885587]]
Iteration 900 of 1000: loss=2.74 " + "l1=0.002" + "l2=2.74 f=-0.252 shape=(1, 9000, 1)
logits [[-0.3049378  -0.86905545  0.08450088  0.08250046]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=9.49 " + "l1=9.49" + "l2=0 f=-0.697 shape=(1, 9000, 1)
logits [[  7.0263352  -3.7948108   4.2088056 -10.228412 ]]
Iteration 100 of 1000: loss=6.58 " + "l1=4.53" + "l2=2.06 f=-0.485 shape=(1, 9000, 1)
logits [[ 2.9679906 -2.033255   2.3867276 -5.261214 ]]
Iteration 200 of 1000: loss=5.39 " + "l1=2.83" + "l2=2.56 f=-0.393 shape=(1, 9000, 1)
logits [[ 1.7111725 -1.5409368  1.70252   -3.4431632]]
Iteration 300 of 1000: loss=4.33 " + "l1=1.73" + "l2=2.6 f=-0.332 shape=(1, 9000, 1)
logits [[ 0.9641799 -1.0835474  0.9664466 -2.1741107]]
Iteration 400 of 1000: loss=3.42 " + "l1=0.623" + "l2=2.8 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.14893255 -0.8414487   0.39925414 -0.7331436 ]]
Iteration 500 of 1000: loss=2.64 " + "l1=0.0109" + "l2=2.62 f=-0.225 shape=(1, 9000, 1)
logits [[-0.34184372 -0.77830094  0.11927153  0.09943651]]
Iteration 600 of 1000: loss=2.24 " + "l1=0.0152" + "l2=2.22 f=-0.233 shape=(1, 9000, 1)
logits [[-0.30069882 -0.89485896  0.14639772  0.11881489]]
Iteration 700 of 1000: loss=2.02 " + "l1=0" + "l2=2.02 f=-0.231 shape=(1, 9000, 1)
logits [[-0.27921394 -0.9625482   0.150456    0.16804361]]
Iteration 800 of 1000: loss=1.87 " + "l1=0" + "l2=1.87 f=-0.228 shape=(1, 9000, 1)
logits [[-0.2244927  -1.0355245   0.16842698  0.17867306]]
Iteration 900 of 1000: loss=1.76 " + "l1=0.0126" + "l2=1.75 f=-0.223 shape=(1, 9000, 1)
logits [[-0.15787396 -1.0736395   0.18192576  0.15896097]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.61 " + "l1=5.61" + "l2=0 f=-0.697 shape=(1, 9000, 1)
logits [[  7.0263352  -3.7948108   4.2088056 -10.228412 ]]
Iteration 100 of 1000: loss=4.63 " + "l1=3.79" + "l2=0.839 f=-0.574 shape=(1, 9000, 1)
logits [[ 4.482603  -2.6664927  3.0760574 -7.1876345]]
Iteration 200 of 1000: loss=4.13 " + "l1=3.06" + "l2=1.07 f=-0.513 shape=(1, 9000, 1)
logits [[ 3.530217  -2.2936075  2.594541  -5.8845162]]
Iteration 300 of 1000: loss=3.7 " + "l1=2.48" + "l2=1.22 f=-0.444 shape=(1, 9000, 1)
logits [[ 2.835266  -2.062641   2.2421741 -4.789115 ]]
Iteration 400 of 1000: loss=3.19 " + "l1=1.7" + "l2=1.49 f=-0.373 shape=(1, 9000, 1)
logits [[ 1.8269725 -1.7026337  1.7786138 -3.3964043]]
Iteration 500 of 1000: loss=2.68 " + "l1=1.15" + "l2=1.52 f=-0.32 shape=(1, 9000, 1)
logits [[ 1.2263538 -1.4214172  1.2300152 -2.3134418]]
Iteration 600 of 1000: loss=2.35 " + "l1=0.792" + "l2=1.55 f=-0.3 shape=(1, 9000, 1)
logits [[ 0.77689624 -1.2727782   0.86560667 -1.5705303 ]]
Iteration 700 of 1000: loss=2.06 " + "l1=0.368" + "l2=1.69 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.21443425 -1.0829301   0.46600866 -0.66537964]]
Iteration 800 of 1000: loss=1.83 " + "l1=0.0888" + "l2=1.74 f=-0.237 shape=(1, 9000, 1)
logits [[-0.1277146  -0.9190744   0.1853789  -0.08795374]]
Iteration 900 of 1000: loss=1.66 " + "l1=0" + "l2=1.66 f=-0.229 shape=(1, 9000, 1)
logits [[-0.21341921 -0.84788525  0.07144381  0.07479314]]
--- 306.4068410396576 seconds ---
Adv result:3
Loading record A00301
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.101 " + "l1=0.101" + "l2=0 f=-0.711 shape=(1, 9000, 1)
logits [[ 6.2569118 -3.8802881  3.8536198 -9.075314 ]]
Iteration 100 of 1000: loss=0.101 " + "l1=0.101" + "l2=0.000183 f=-0.711 shape=(1, 9000, 1)
logits [[ 6.230493  -3.87043    3.8435385 -9.047669 ]]
Iteration 200 of 1000: loss=0.101 " + "l1=0.101" + "l2=0.00015 f=-0.711 shape=(1, 9000, 1)
logits [[ 6.2292066 -3.8688936  3.8424213 -9.04574  ]]
Iteration 300 of 1000: loss=0.101 " + "l1=0.101" + "l2=0.000186 f=-0.71 shape=(1, 9000, 1)
logits [[ 6.2259145 -3.8665822  3.840644  -9.041887 ]]
Iteration 400 of 1000: loss=0.101 " + "l1=0.101" + "l2=0.000207 f=-0.71 shape=(1, 9000, 1)
logits [[ 6.2221913 -3.8639853  3.8387148 -9.037635 ]]
Iteration 500 of 1000: loss=0.101 " + "l1=0.101" + "l2=0.000286 f=-0.71 shape=(1, 9000, 1)
logits [[ 6.2184772 -3.8613865  3.8368554 -9.033414 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.01 " + "l1=1.01" + "l2=0 f=-0.711 shape=(1, 9000, 1)
logits [[ 6.2569118 -3.8802881  3.8536198 -9.075314 ]]
Iteration 100 of 1000: loss=0.996 " + "l1=0.984" + "l2=0.012 f=-0.708 shape=(1, 9000, 1)
logits [[ 6.0406218 -3.7943966  3.763914  -8.841934 ]]
Iteration 200 of 1000: loss=0.988 " + "l1=0.972" + "l2=0.0157 f=-0.704 shape=(1, 9000, 1)
logits [[ 5.9685044 -3.7499256  3.724168  -8.756965 ]]
Iteration 300 of 1000: loss=0.98 " + "l1=0.96" + "l2=0.0194 f=-0.697 shape=(1, 9000, 1)
logits [[ 5.9018226 -3.699858   3.683048  -8.673866 ]]
Iteration 400 of 1000: loss=0.972 " + "l1=0.949" + "l2=0.0237 f=-0.691 shape=(1, 9000, 1)
logits [[ 5.8358765 -3.6504     3.6400921 -8.588782 ]]
Iteration 500 of 1000: loss=0.965 " + "l1=0.937" + "l2=0.0284 f=-0.684 shape=(1, 9000, 1)
logits [[ 5.768446  -3.6009057  3.5968597 -8.501987 ]]
Iteration 600 of 1000: loss=0.958 " + "l1=0.925" + "l2=0.0333 f=-0.678 shape=(1, 9000, 1)
logits [[ 5.693414  -3.5537014  3.551342  -8.404309 ]]
Iteration 700 of 1000: loss=0.95 " + "l1=0.913" + "l2=0.0376 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.614842  -3.5140412  3.511213  -8.303339 ]]
Iteration 800 of 1000: loss=0.943 " + "l1=0.9" + "l2=0.0427 f=-0.666 shape=(1, 9000, 1)
logits [[ 5.533047  -3.4702613  3.470503  -8.197644 ]]
Iteration 900 of 1000: loss=0.934 " + "l1=0.885" + "l2=0.0487 f=-0.659 shape=(1, 9000, 1)
logits [[ 5.43701   -3.4167027  3.4195352 -8.074717 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.1 " + "l1=10.1" + "l2=0 f=-0.711 shape=(1, 9000, 1)
logits [[ 6.2569118 -3.8802881  3.8536198 -9.075314 ]]
Iteration 100 of 1000: loss=7.49 " + "l1=5.91" + "l2=1.58 f=-0.529 shape=(1, 9000, 1)
logits [[ 3.382238  -2.5239103  2.6825871 -5.6553144]]
Iteration 200 of 1000: loss=6.23 " + "l1=4.12" + "l2=2.11 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.2918248 -1.8321791  1.9780933 -4.3601346]]
Iteration 300 of 1000: loss=5.18 " + "l1=2.82" + "l2=2.36 f=-0.459 shape=(1, 9000, 1)
logits [[ 1.5023024 -1.314981   1.4677029 -3.4896781]]
Iteration 400 of 1000: loss=4.52 " + "l1=2.08" + "l2=2.44 f=-0.432 shape=(1, 9000, 1)
logits [[ 1.1087857 -0.9648373  1.1134578 -2.985891 ]]
Iteration 500 of 1000: loss=3.95 " + "l1=1.67" + "l2=2.28 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.89649534 -0.7597884   0.9065481  -2.67766   ]]
Iteration 600 of 1000: loss=3.45 " + "l1=1.32" + "l2=2.13 f=-0.373 shape=(1, 9000, 1)
logits [[ 0.69388807 -0.61953545  0.7032164  -2.271216  ]]
Iteration 700 of 1000: loss=3.05 " + "l1=1.08" + "l2=1.97 f=-0.37 shape=(1, 9000, 1)
logits [[ 0.5472115 -0.5315466  0.5514809 -2.0480247]]
Iteration 800 of 1000: loss=2.76 " + "l1=0.87" + "l2=1.89 f=-0.363 shape=(1, 9000, 1)
logits [[ 0.43870392 -0.4311558   0.43850037 -1.8975164 ]]
Iteration 900 of 1000: loss=2.56 " + "l1=0.699" + "l2=1.86 f=-0.362 shape=(1, 9000, 1)
logits [[ 0.3334686  -0.35314152  0.34560227 -1.7756379 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=101 " + "l1=101" + "l2=0 f=-0.711 shape=(1, 9000, 1)
logits [[ 6.2569118 -3.8802881  3.8536198 -9.075314 ]]
Iteration 100 of 1000: loss=24.9 " + "l1=9.41" + "l2=15.5 f=-0.315 shape=(1, 9000, 1)
logits [[ 0.5695267  -0.34601712  0.59495085 -2.0804434 ]]
Iteration 200 of 1000: loss=11.8 " + "l1=0.00403" + "l2=11.8 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.17806676  0.19477884  0.19518206 -1.9574815 ]]
Iteration 300 of 1000: loss=9.46 " + "l1=0.137" + "l2=9.33 f=-0.381 shape=(1, 9000, 1)
logits [[ 0.17437871  0.22542122  0.23915423 -2.1646898 ]]
Iteration 400 of 1000: loss=8.33 " + "l1=0" + "l2=8.33 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.12006652  0.24490814  0.24018538 -2.2154486 ]]
Iteration 500 of 1000: loss=7.8 " + "l1=0" + "l2=7.8 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.15806505  0.27294913  0.2333696  -2.2783456 ]]
Iteration 600 of 1000: loss=7.22 " + "l1=0" + "l2=7.22 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.16257975  0.25086966  0.2437673  -2.2708473 ]]
Iteration 700 of 1000: loss=6.82 " + "l1=0" + "l2=6.82 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.19648638  0.23350593  0.22950037 -2.2762034 ]]
Iteration 800 of 1000: loss=6.58 " + "l1=0" + "l2=6.58 f=-0.41 shape=(1, 9000, 1)
logits [[ 0.11283869  0.24221939  0.22180064 -2.2153997 ]]
Iteration 900 of 1000: loss=6.24 " + "l1=0" + "l2=6.24 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.12778407  0.23659524  0.22089285 -2.220759  ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=55.8 " + "l1=55.8" + "l2=0 f=-0.711 shape=(1, 9000, 1)
logits [[ 6.2569118 -3.8802881  3.8536198 -9.075314 ]]
Iteration 100 of 1000: loss=19.4 " + "l1=9.73" + "l2=9.67 f=-0.352 shape=(1, 9000, 1)
logits [[ 0.95659184 -0.79517305  0.9745649  -2.544595  ]]
Iteration 200 of 1000: loss=10.9 " + "l1=1.35" + "l2=9.52 f=-0.358 shape=(1, 9000, 1)
logits [[ 0.30003628  0.05869881  0.30466136 -2.0971105 ]]
Iteration 300 of 1000: loss=8.06 " + "l1=0.147" + "l2=7.92 f=-0.412 shape=(1, 9000, 1)
logits [[ 0.19219634  0.2306769   0.25743937 -2.3302162 ]]
Iteration 400 of 1000: loss=7.06 " + "l1=0" + "l2=7.06 f=-0.406 shape=(1, 9000, 1)
logits [[ 0.22595012  0.25614694  0.2485572  -2.3554626 ]]
Iteration 500 of 1000: loss=6.47 " + "l1=0.0153" + "l2=6.45 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.24422231  0.24270454  0.24549347 -2.3488815 ]]
Iteration 600 of 1000: loss=6.03 " + "l1=0" + "l2=6.03 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.1824374   0.250385    0.23320043 -2.2860303 ]]
Iteration 700 of 1000: loss=5.58 " + "l1=0" + "l2=5.58 f=-0.397 shape=(1, 9000, 1)
logits [[ 0.22601283  0.2322446   0.22725001 -2.2751286 ]]
Iteration 800 of 1000: loss=5.2 " + "l1=0" + "l2=5.2 f=-0.402 shape=(1, 9000, 1)
logits [[ 0.14235637  0.22654724  0.22314836 -2.2007747 ]]
Iteration 900 of 1000: loss=4.85 " + "l1=0.016" + "l2=4.83 f=-0.399 shape=(1, 9000, 1)
logits [[ 0.18331179  0.20954655  0.21244846 -2.1998863 ]]
--- 293.5032193660736 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.024 " + "l1=0.024" + "l2=0 f=-0.711 shape=(1, 9000, 1)
logits [[ 6.2569118 -3.8802881  3.8536198 -9.075314 ]]
Iteration 100 of 1000: loss=0.0239 " + "l1=0.0238" + "l2=0.000137 f=-0.713 shape=(1, 9000, 1)
logits [[ 6.236961  -3.8831348  3.856696  -9.061573 ]]
Iteration 200 of 1000: loss=0.0239 " + "l1=0.0238" + "l2=9.53e-05 f=-0.713 shape=(1, 9000, 1)
logits [[ 6.237386  -3.883429   3.8570426 -9.062276 ]]
Iteration 300 of 1000: loss=0.0239 " + "l1=0.0238" + "l2=0.000116 f=-0.713 shape=(1, 9000, 1)
logits [[ 6.2355146 -3.883739   3.8575792 -9.061154 ]]
Iteration 400 of 1000: loss=0.0239 " + "l1=0.0238" + "l2=0.000163 f=-0.713 shape=(1, 9000, 1)
logits [[ 6.233342  -3.88401    3.8581746 -9.059788 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.24 " + "l1=0.24" + "l2=0 f=-0.711 shape=(1, 9000, 1)
logits [[ 6.2569118 -3.8802881  3.8536198 -9.075314 ]]
Iteration 100 of 1000: loss=0.23 " + "l1=0.224" + "l2=0.00661 f=-0.724 shape=(1, 9000, 1)
logits [[ 6.1072006 -3.9032319  3.8711855 -8.971569 ]]
Iteration 200 of 1000: loss=0.227 " + "l1=0.218" + "l2=0.00889 f=-0.728 shape=(1, 9000, 1)
logits [[ 6.06289   -3.9162676  3.8853245 -8.942031 ]]
Iteration 300 of 1000: loss=0.223 " + "l1=0.213" + "l2=0.0107 f=-0.73 shape=(1, 9000, 1)
logits [[ 6.0226703 -3.9249449  3.8945456 -8.910456 ]]
Iteration 400 of 1000: loss=0.22 " + "l1=0.208" + "l2=0.0125 f=-0.731 shape=(1, 9000, 1)
logits [[ 5.9841323 -3.9341993  3.9038506 -8.878745 ]]
Iteration 500 of 1000: loss=0.217 " + "l1=0.203" + "l2=0.0141 f=-0.733 shape=(1, 9000, 1)
logits [[ 5.9455028 -3.9428787  3.9130197 -8.846371 ]]
Iteration 600 of 1000: loss=0.214 " + "l1=0.199" + "l2=0.0155 f=-0.734 shape=(1, 9000, 1)
logits [[ 5.9049416 -3.9491796  3.9194653 -8.811708 ]]
Iteration 700 of 1000: loss=0.211 " + "l1=0.194" + "l2=0.0172 f=-0.735 shape=(1, 9000, 1)
logits [[ 5.8620234 -3.9549618  3.9262142 -8.774693 ]]
Iteration 800 of 1000: loss=0.207 " + "l1=0.188" + "l2=0.0191 f=-0.736 shape=(1, 9000, 1)
logits [[ 5.8147388 -3.9622555  3.9336507 -8.729546 ]]
Iteration 900 of 1000: loss=0.204 " + "l1=0.182" + "l2=0.0213 f=-0.736 shape=(1, 9000, 1)
logits [[ 5.76354   -3.9716659  3.9402401 -8.6779585]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.4 " + "l1=2.4" + "l2=0 f=-0.711 shape=(1, 9000, 1)
logits [[ 6.2569118 -3.8802881  3.8536198 -9.075314 ]]
Iteration 100 of 1000: loss=0.861 " + "l1=0.0289" + "l2=0.832 f=-0.805 shape=(1, 9000, 1)
logits [[ 4.2451706 -4.366972   4.216299  -7.315762 ]]
Iteration 200 of 1000: loss=0.598 " + "l1=0.00701" + "l2=0.591 f=-0.786 shape=(1, 9000, 1)
logits [[ 4.201034 -4.349801  4.194022 -7.190094]]
Iteration 300 of 1000: loss=0.502 " + "l1=0.00663" + "l2=0.495 f=-0.775 shape=(1, 9000, 1)
logits [[ 4.1920357 -4.3391194  4.185401  -7.1378446]]
Iteration 400 of 1000: loss=0.431 " + "l1=0.0106" + "l2=0.42 f=-0.764 shape=(1, 9000, 1)
logits [[ 4.1862273 -4.3192606  4.175585  -7.0966444]]
Iteration 500 of 1000: loss=0.361 " + "l1=0" + "l2=0.361 f=-0.753 shape=(1, 9000, 1)
logits [[ 4.1726313 -4.3114734  4.1741614 -7.048779 ]]
Iteration 600 of 1000: loss=0.318 " + "l1=0.00599" + "l2=0.312 f=-0.746 shape=(1, 9000, 1)
logits [[ 4.1792107 -4.3084865  4.173218  -7.026718 ]]
Iteration 700 of 1000: loss=0.281 " + "l1=0" + "l2=0.281 f=-0.738 shape=(1, 9000, 1)
logits [[ 4.1641927 -4.302435   4.173964  -6.987446 ]]
Iteration 800 of 1000: loss=0.254 " + "l1=0.00182" + "l2=0.252 f=-0.73 shape=(1, 9000, 1)
logits [[ 4.161447  -4.2822704  4.1596255 -6.960119 ]]
Iteration 900 of 1000: loss=0.237 " + "l1=0" + "l2=0.237 f=-0.724 shape=(1, 9000, 1)
logits [[ 4.1339254 -4.272363   4.147853  -6.9064336]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.32 " + "l1=1.32" + "l2=0 f=-0.711 shape=(1, 9000, 1)
logits [[ 6.2569118 -3.8802881  3.8536198 -9.075314 ]]
Iteration 100 of 1000: loss=0.881 " + "l1=0.57" + "l2=0.311 f=-0.785 shape=(1, 9000, 1)
logits [[ 5.1012316 -4.17581    4.064389  -8.129437 ]]
Iteration 200 of 1000: loss=0.658 " + "l1=0.201" + "l2=0.457 f=-0.801 shape=(1, 9000, 1)
logits [[ 4.526945 -4.337842  4.162369 -7.55595 ]]
Iteration 300 of 1000: loss=0.497 " + "l1=0.0117" + "l2=0.485 f=-0.781 shape=(1, 9000, 1)
logits [[ 4.2181215 -4.3677664  4.196776  -7.171974 ]]
Iteration 400 of 1000: loss=0.389 " + "l1=0" + "l2=0.389 f=-0.762 shape=(1, 9000, 1)
logits [[ 4.1921015 -4.348002   4.196368  -7.0892043]]
Iteration 500 of 1000: loss=0.315 " + "l1=0.000988" + "l2=0.314 f=-0.747 shape=(1, 9000, 1)
logits [[ 4.1787434 -4.322275   4.1769476 -7.02253  ]]
Iteration 600 of 1000: loss=0.271 " + "l1=0.00179" + "l2=0.269 f=-0.736 shape=(1, 9000, 1)
logits [[ 4.1715107 -4.304272   4.1682544 -6.97893  ]]
Iteration 700 of 1000: loss=0.242 " + "l1=0" + "l2=0.242 f=-0.726 shape=(1, 9000, 1)
logits [[ 4.163029  -4.2917457  4.1670074 -6.9440045]]
Iteration 800 of 1000: loss=0.224 " + "l1=0" + "l2=0.224 f=-0.719 shape=(1, 9000, 1)
logits [[ 4.1463647 -4.278878   4.149211  -6.894052 ]]
Iteration 900 of 1000: loss=0.209 " + "l1=0.000129" + "l2=0.209 f=-0.715 shape=(1, 9000, 1)
logits [[ 4.1331253 -4.2699404  4.132891  -6.8545165]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.781 " + "l1=0.781" + "l2=0 f=-0.711 shape=(1, 9000, 1)
logits [[ 6.2569118 -3.8802881  3.8536198 -9.075314 ]]
Iteration 100 of 1000: loss=0.656 " + "l1=0.569" + "l2=0.0878 f=-0.755 shape=(1, 9000, 1)
logits [[ 5.6849866 -4.006512   3.9354665 -8.632317 ]]
Iteration 200 of 1000: loss=0.583 " + "l1=0.435" + "l2=0.148 f=-0.771 shape=(1, 9000, 1)
logits [[ 5.367027 -4.11708   4.027217 -8.360092]]
Iteration 300 of 1000: loss=0.521 " + "l1=0.345" + "l2=0.175 f=-0.778 shape=(1, 9000, 1)
logits [[ 5.133754  -4.1877155  4.0714383 -8.129028 ]]
Iteration 400 of 1000: loss=0.466 " + "l1=0.275" + "l2=0.19 f=-0.775 shape=(1, 9000, 1)
logits [[ 4.944582  -4.214146   4.0975533 -7.9260883]]
Iteration 500 of 1000: loss=0.408 " + "l1=0.199" + "l2=0.209 f=-0.767 shape=(1, 9000, 1)
logits [[ 4.723464  -4.2409863  4.1107607 -7.660951 ]]
Iteration 600 of 1000: loss=0.333 " + "l1=0.0793" + "l2=0.254 f=-0.757 shape=(1, 9000, 1)
logits [[ 4.4064054 -4.313784   4.162467  -7.2831807]]
Iteration 700 of 1000: loss=0.267 " + "l1=0.00461" + "l2=0.262 f=-0.741 shape=(1, 9000, 1)
logits [[ 4.221669  -4.338852   4.207482  -7.0538216]]
Iteration 800 of 1000: loss=0.235 " + "l1=0.00317" + "l2=0.232 f=-0.727 shape=(1, 9000, 1)
logits [[ 4.1902623 -4.308189   4.1804953 -6.9703307]]
Iteration 900 of 1000: loss=0.214 " + "l1=0.00119" + "l2=0.213 f=-0.719 shape=(1, 9000, 1)
logits [[ 4.1639714 -4.2918077  4.1603174 -6.910158 ]]
--- 286.2911536693573 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.153 " + "l1=0.153" + "l2=0 f=-0.711 shape=(1, 9000, 1)
logits [[ 6.2569118 -3.8802881  3.8536198 -9.075314 ]]
Iteration 100 of 1000: loss=0.153 " + "l1=0.152" + "l2=0.000461 f=-0.711 shape=(1, 9000, 1)
logits [[ 6.213029  -3.8757088  3.8380275 -9.017402 ]]
Iteration 200 of 1000: loss=0.153 " + "l1=0.152" + "l2=0.000459 f=-0.71 shape=(1, 9000, 1)
logits [[ 6.2078476 -3.874272   3.8359294 -9.011062 ]]
Iteration 300 of 1000: loss=0.153 " + "l1=0.152" + "l2=0.000524 f=-0.71 shape=(1, 9000, 1)
logits [[ 6.2012796 -3.8722353  3.8331215 -9.002321 ]]
Iteration 400 of 1000: loss=0.152 " + "l1=0.152" + "l2=0.000598 f=-0.71 shape=(1, 9000, 1)
logits [[ 6.195029  -3.8700478  3.8305027 -8.993939 ]]
Iteration 500 of 1000: loss=0.152 " + "l1=0.152" + "l2=0.000712 f=-0.709 shape=(1, 9000, 1)
logits [[ 6.188855  -3.8678946  3.827986  -8.985681 ]]
Iteration 600 of 1000: loss=0.152 " + "l1=0.152" + "l2=0.000818 f=-0.709 shape=(1, 9000, 1)
logits [[ 6.182812  -3.8657575  3.8256068 -8.977716 ]]
Iteration 700 of 1000: loss=0.152 " + "l1=0.151" + "l2=0.000898 f=-0.708 shape=(1, 9000, 1)
logits [[ 6.177029  -3.863628   3.8234534 -8.970108 ]]
Iteration 800 of 1000: loss=0.152 " + "l1=0.151" + "l2=0.00112 f=-0.708 shape=(1, 9000, 1)
logits [[ 6.171404  -3.8616693  3.8214629 -8.962792 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.53 " + "l1=1.53" + "l2=0 f=-0.711 shape=(1, 9000, 1)
logits [[ 6.2569118 -3.8802881  3.8536198 -9.075314 ]]
Iteration 100 of 1000: loss=1.47 " + "l1=1.43" + "l2=0.042 f=-0.704 shape=(1, 9000, 1)
logits [[ 5.824394  -3.8357868  3.692468  -8.497402 ]]
Iteration 200 of 1000: loss=1.45 " + "l1=1.39" + "l2=0.059 f=-0.698 shape=(1, 9000, 1)
logits [[ 5.642066 -3.808696  3.63131  -8.256387]]
Iteration 300 of 1000: loss=1.43 " + "l1=1.35" + "l2=0.074 f=-0.688 shape=(1, 9000, 1)
logits [[ 5.481269  -3.770655   3.5767694 -8.04034  ]]
Iteration 400 of 1000: loss=1.4 " + "l1=1.32" + "l2=0.0866 f=-0.679 shape=(1, 9000, 1)
logits [[ 5.328644  -3.7306244  3.527115  -7.840833 ]]
Iteration 500 of 1000: loss=1.38 " + "l1=1.27" + "l2=0.105 f=-0.661 shape=(1, 9000, 1)
logits [[ 5.138996  -3.6618726  3.4553044 -7.5784006]]
Iteration 600 of 1000: loss=1.35 " + "l1=1.23" + "l2=0.119 f=-0.647 shape=(1, 9000, 1)
logits [[ 4.965453  -3.6100614  3.3971457 -7.341892 ]]
Iteration 700 of 1000: loss=1.32 " + "l1=1.19" + "l2=0.13 f=-0.638 shape=(1, 9000, 1)
logits [[ 4.8113275 -3.5858676  3.3567939 -7.132681 ]]
Iteration 800 of 1000: loss=1.3 " + "l1=1.16" + "l2=0.14 f=-0.625 shape=(1, 9000, 1)
logits [[ 4.6613574 -3.560727   3.3180695 -6.9187803]]
Iteration 900 of 1000: loss=1.27 " + "l1=1.12" + "l2=0.15 f=-0.611 shape=(1, 9000, 1)
logits [[ 4.5050197 -3.5372064  3.278368  -6.6911035]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=15.3 " + "l1=15.3" + "l2=0 f=-0.711 shape=(1, 9000, 1)
logits [[ 6.2569118 -3.8802881  3.8536198 -9.075314 ]]
Iteration 100 of 1000: loss=8.56 " + "l1=5.55" + "l2=3.01 f=-0.367 shape=(1, 9000, 1)
logits [[ 2.3436348 -2.9561837  2.3464162 -3.201912 ]]
Iteration 200 of 1000: loss=6.81 " + "l1=3.35" + "l2=3.46 f=-0.28 shape=(1, 9000, 1)
logits [[ 1.5462662 -2.4818447  1.5797985 -1.7657242]]
Iteration 300 of 1000: loss=5.78 " + "l1=2.12" + "l2=3.66 f=-0.247 shape=(1, 9000, 1)
logits [[ 1.0603336 -2.2780101  1.1715984 -0.9438581]]
Iteration 400 of 1000: loss=4.7 " + "l1=1" + "l2=3.7 f=-0.246 shape=(1, 9000, 1)
logits [[ 0.5364119  -1.9987711   0.74041057 -0.26072964]]
Iteration 500 of 1000: loss=3.89 " + "l1=0.361" + "l2=3.53 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.25387612 -1.8541874   0.5084624   0.14759237]]
Iteration 600 of 1000: loss=3.3 " + "l1=0.0494" + "l2=3.25 f=-0.24 shape=(1, 9000, 1)
logits [[ 0.08520719 -1.787943    0.39517516  0.34574133]]
Iteration 700 of 1000: loss=2.85 " + "l1=0.0132" + "l2=2.83 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.0216489  -1.7922158   0.35990235  0.34668535]]
Iteration 800 of 1000: loss=2.44 " + "l1=0.0364" + "l2=2.4 f=-0.28 shape=(1, 9000, 1)
logits [[ 0.04381497 -1.8601037   0.36592153  0.3295663 ]]
Iteration 900 of 1000: loss=2.11 " + "l1=0.0173" + "l2=2.1 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.09652111 -1.9470538   0.37212253  0.354793  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=8.43 " + "l1=8.43" + "l2=0 f=-0.711 shape=(1, 9000, 1)
logits [[ 6.2569118 -3.8802881  3.8536198 -9.075314 ]]
Iteration 100 of 1000: loss=5.95 " + "l1=4.45" + "l2=1.51 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.2396798 -3.4114861  3.0005054 -4.844966 ]]
Iteration 200 of 1000: loss=5.12 " + "l1=3.38" + "l2=1.75 f=-0.421 shape=(1, 9000, 1)
logits [[ 2.5003502 -3.0663612  2.5098956 -3.6267078]]
Iteration 300 of 1000: loss=4.6 " + "l1=2.77" + "l2=1.83 f=-0.361 shape=(1, 9000, 1)
logits [[ 2.1212554 -2.782038   2.124422  -2.9078496]]
Iteration 400 of 1000: loss=4.06 " + "l1=2.17" + "l2=1.89 f=-0.333 shape=(1, 9000, 1)
logits [[ 1.7233496 -2.5643182  1.7275383 -2.2166712]]
Iteration 500 of 1000: loss=3.56 " + "l1=1.65" + "l2=1.91 f=-0.323 shape=(1, 9000, 1)
logits [[ 1.3185512 -2.30273    1.3457454 -1.6523023]]
Iteration 600 of 1000: loss=3.14 " + "l1=1.36" + "l2=1.78 f=-0.332 shape=(1, 9000, 1)
logits [[ 1.075746  -2.1596029  1.1178617 -1.3628193]]
Iteration 700 of 1000: loss=2.76 " + "l1=1.05" + "l2=1.71 f=-0.329 shape=(1, 9000, 1)
logits [[ 0.7784809 -2.0307488  0.9264514 -0.9904992]]
Iteration 800 of 1000: loss=2.47 " + "l1=0.757" + "l2=1.71 f=-0.346 shape=(1, 9000, 1)
logits [[ 0.48285088 -1.906354    0.70866376 -0.66836625]]
Iteration 900 of 1000: loss=2.22 " + "l1=0.489" + "l2=1.73 f=-0.346 shape=(1, 9000, 1)
logits [[ 0.23572788 -1.8609158   0.56466055 -0.32524046]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=11.9 " + "l1=11.9" + "l2=0 f=-0.711 shape=(1, 9000, 1)
logits [[ 6.2569118 -3.8802881  3.8536198 -9.075314 ]]
Iteration 100 of 1000: loss=7.37 " + "l1=5.05" + "l2=2.32 f=-0.424 shape=(1, 9000, 1)
logits [[ 2.6539679 -3.1590812  2.6631296 -3.8535457]]
Iteration 200 of 1000: loss=6.12 " + "l1=3.56" + "l2=2.56 f=-0.339 shape=(1, 9000, 1)
logits [[ 1.972441  -2.7025266  1.9839627 -2.6101294]]
Iteration 300 of 1000: loss=5.33 " + "l1=2.67" + "l2=2.65 f=-0.279 shape=(1, 9000, 1)
logits [[ 1.596387  -2.4704065  1.6043922 -1.8451478]]
Iteration 400 of 1000: loss=4.49 " + "l1=1.81" + "l2=2.67 f=-0.268 shape=(1, 9000, 1)
logits [[ 1.1272343 -2.2724671  1.2077415 -1.1328723]]
Iteration 500 of 1000: loss=3.83 " + "l1=1.23" + "l2=2.59 f=-0.265 shape=(1, 9000, 1)
logits [[ 0.7523372 -2.1059878  0.941578  -0.6487297]]
Iteration 600 of 1000: loss=3.32 " + "l1=0.751" + "l2=2.57 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.42754593 -1.9901022   0.7312453  -0.23797077]]
Iteration 700 of 1000: loss=2.88 " + "l1=0.313" + "l2=2.57 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.14668156 -1.8363292   0.5139177   0.1102101 ]]
Iteration 800 of 1000: loss=2.48 " + "l1=0.0126" + "l2=2.46 f=-0.272 shape=(1, 9000, 1)
logits [[-0.06378028 -1.7814194   0.38765016  0.37143728]]
Iteration 900 of 1000: loss=2.19 " + "l1=0.0176" + "l2=2.17 f=-0.281 shape=(1, 9000, 1)
logits [[-0.0976825  -1.8036814   0.4007964   0.37804186]]
--- 311.33916568756104 seconds ---
Adv result:3
Loading record A00375
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0635 " + "l1=0.0635" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.7701993 -1.5763631  1.8297622 -7.2769194]]
Iteration 100 of 1000: loss=0.0628 " + "l1=0.0623" + "l2=0.000439 f=-0.564 shape=(1, 9000, 1)
logits [[ 4.7004027 -1.5317837  1.8016753 -7.2261124]]
Iteration 200 of 1000: loss=0.0625 " + "l1=0.0621" + "l2=0.000498 f=-0.564 shape=(1, 9000, 1)
logits [[ 4.684581  -1.520627   1.7949815 -7.2161098]]
Iteration 300 of 1000: loss=0.0624 " + "l1=0.0618" + "l2=0.000628 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.6671185 -1.5094151  1.7883116 -7.204735 ]]
Iteration 400 of 1000: loss=0.0622 " + "l1=0.0615" + "l2=0.000738 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.650474  -1.4987386  1.7819966 -7.194089 ]]
Iteration 500 of 1000: loss=0.0621 " + "l1=0.0612" + "l2=0.000886 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.6349773 -1.48894    1.7762089 -7.184337 ]]
Iteration 600 of 1000: loss=0.062 " + "l1=0.061" + "l2=0.001 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.620334  -1.4802585  1.771069  -7.1750827]]
Iteration 700 of 1000: loss=0.062 " + "l1=0.0608" + "l2=0.0012 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.6065927 -1.472273   1.7663362 -7.1665354]]
Iteration 800 of 1000: loss=0.0619 " + "l1=0.0606" + "l2=0.0013 f=-0.567 shape=(1, 9000, 1)
logits [[ 4.5938115 -1.4646763  1.7619605 -7.1588745]]
Iteration 900 of 1000: loss=0.0619 " + "l1=0.0604" + "l2=0.00146 f=-0.567 shape=(1, 9000, 1)
logits [[ 4.5817432 -1.4577767  1.7579929 -7.151557 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.635 " + "l1=0.635" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.7701993 -1.5763631  1.8297622 -7.2769194]]
Iteration 100 of 1000: loss=0.566 " + "l1=0.528" + "l2=0.0378 f=-0.576 shape=(1, 9000, 1)
logits [[ 4.1221027 -1.1617913  1.5887537 -6.8520546]]
Iteration 200 of 1000: loss=0.537 " + "l1=0.487" + "l2=0.0503 f=-0.586 shape=(1, 9000, 1)
logits [[ 3.8460824 -1.0223626  1.5001566 -6.6667943]]
Iteration 300 of 1000: loss=0.511 " + "l1=0.449" + "l2=0.0624 f=-0.593 shape=(1, 9000, 1)
logits [[ 3.595535  -0.8936749  1.4288515 -6.5019903]]
Iteration 400 of 1000: loss=0.488 " + "l1=0.421" + "l2=0.067 f=-0.597 shape=(1, 9000, 1)
logits [[ 3.411105  -0.8014867  1.3669773 -6.3641305]]
Iteration 500 of 1000: loss=0.468 " + "l1=0.395" + "l2=0.0733 f=-0.601 shape=(1, 9000, 1)
logits [[ 3.2376823 -0.7090283  1.3055326 -6.2395935]]
Iteration 600 of 1000: loss=0.448 " + "l1=0.371" + "l2=0.0769 f=-0.603 shape=(1, 9000, 1)
logits [[ 3.085393   -0.62817657  1.2428725  -6.111608  ]]
Iteration 700 of 1000: loss=0.43 " + "l1=0.347" + "l2=0.0828 f=-0.61 shape=(1, 9000, 1)
logits [[ 2.9189982 -0.5479945  1.1742989 -5.986312 ]]
Iteration 800 of 1000: loss=0.411 " + "l1=0.321" + "l2=0.0898 f=-0.618 shape=(1, 9000, 1)
logits [[ 2.7439754  -0.46526536  1.1094935  -5.8602505 ]]
Iteration 900 of 1000: loss=0.394 " + "l1=0.299" + "l2=0.0944 f=-0.623 shape=(1, 9000, 1)
logits [[ 2.5980122 -0.3952392  1.0504956 -5.7446785]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.35 " + "l1=6.35" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.7701993 -1.5763631  1.8297622 -7.2769194]]
Iteration 100 of 1000: loss=1.91 " + "l1=0" + "l2=1.91 f=-0.711 shape=(1, 9000, 1)
logits [[ 0.5723673   0.583164    0.57614547 -4.5774636 ]]
Iteration 200 of 1000: loss=1.3 " + "l1=0" + "l2=1.3 f=-0.709 shape=(1, 9000, 1)
logits [[ 0.51366234  0.5520943   0.53610104 -4.437985  ]]
Iteration 300 of 1000: loss=1.06 " + "l1=0" + "l2=1.06 f=-0.708 shape=(1, 9000, 1)
logits [[ 0.522948    0.5234787   0.49785545 -4.3771477 ]]
Iteration 400 of 1000: loss=0.94 " + "l1=0.0163" + "l2=0.923 f=-0.707 shape=(1, 9000, 1)
logits [[ 0.52156496  0.50524837  0.46283624 -4.317366  ]]
Iteration 500 of 1000: loss=0.842 " + "l1=0" + "l2=0.842 f=-0.709 shape=(1, 9000, 1)
logits [[ 0.4992092   0.50283116  0.43842557 -4.275117  ]]
Iteration 600 of 1000: loss=0.768 " + "l1=0.00463" + "l2=0.763 f=-0.708 shape=(1, 9000, 1)
logits [[ 0.49709484  0.49246696  0.42594972 -4.247149  ]]
Iteration 700 of 1000: loss=0.699 " + "l1=0" + "l2=0.699 f=-0.708 shape=(1, 9000, 1)
logits [[ 0.48138157  0.4946266   0.40896907 -4.2184844 ]]
Iteration 800 of 1000: loss=0.634 " + "l1=0.00872" + "l2=0.625 f=-0.712 shape=(1, 9000, 1)
logits [[ 0.49378458  0.48506403  0.40435082 -4.2328067 ]]
Iteration 900 of 1000: loss=0.572 " + "l1=0" + "l2=0.572 f=-0.72 shape=(1, 9000, 1)
logits [[ 0.46760914  0.49563387  0.40117705 -4.2449484 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.49 " + "l1=3.49" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.7701993 -1.5763631  1.8297622 -7.2769194]]
Iteration 100 of 1000: loss=1.92 " + "l1=1.19" + "l2=0.726 f=-0.647 shape=(1, 9000, 1)
logits [[ 2.02429   -0.1478468  1.0207707 -5.4847093]]
Iteration 200 of 1000: loss=1.18 " + "l1=0.129" + "l2=1.05 f=-0.72 shape=(1, 9000, 1)
logits [[ 0.66584533  0.43143344  0.6040055  -4.579611  ]]
Iteration 300 of 1000: loss=0.805 " + "l1=0.0117" + "l2=0.793 f=-0.733 shape=(1, 9000, 1)
logits [[ 0.5016111   0.48034254  0.4876115  -4.4003053 ]]
Iteration 400 of 1000: loss=0.67 " + "l1=0" + "l2=0.67 f=-0.737 shape=(1, 9000, 1)
logits [[ 0.46099886  0.47867823  0.46024242 -4.349565  ]]
Iteration 500 of 1000: loss=0.588 " + "l1=0.00517" + "l2=0.583 f=-0.735 shape=(1, 9000, 1)
logits [[ 0.47671473  0.46732032  0.45658004 -4.341647  ]]
Iteration 600 of 1000: loss=0.525 " + "l1=0.00114" + "l2=0.524 f=-0.738 shape=(1, 9000, 1)
logits [[ 0.4676967   0.46562028  0.44833392 -4.3325057 ]]
Iteration 700 of 1000: loss=0.475 " + "l1=0" + "l2=0.475 f=-0.739 shape=(1, 9000, 1)
logits [[ 0.45161     0.47185427  0.44210142 -4.320371  ]]
Iteration 800 of 1000: loss=0.425 " + "l1=0" + "l2=0.425 f=-0.739 shape=(1, 9000, 1)
logits [[ 0.46591845  0.4716003   0.4376096  -4.3309083 ]]
Iteration 900 of 1000: loss=0.389 " + "l1=0" + "l2=0.389 f=-0.74 shape=(1, 9000, 1)
logits [[ 0.4535614   0.4784892   0.42275298 -4.3158584 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.06 " + "l1=2.06" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.7701993 -1.5763631  1.8297622 -7.2769194]]
Iteration 100 of 1000: loss=1.44 " + "l1=1.15" + "l2=0.284 f=-0.608 shape=(1, 9000, 1)
logits [[ 2.9558635  -0.59716177  1.2887906  -6.078994  ]]
Iteration 200 of 1000: loss=1.18 " + "l1=0.809" + "l2=0.37 f=-0.637 shape=(1, 9000, 1)
logits [[ 2.2307148  -0.25810355  1.0535178  -5.574905  ]]
Iteration 300 of 1000: loss=0.939 " + "l1=0.474" + "l2=0.465 f=-0.695 shape=(1, 9000, 1)
logits [[ 1.4921634   0.03255796  0.7568377  -5.0605865 ]]
Iteration 400 of 1000: loss=0.738 " + "l1=0.21" + "l2=0.529 f=-0.733 shape=(1, 9000, 1)
logits [[ 0.9094608  0.2643894  0.5414583 -4.645962 ]]
Iteration 500 of 1000: loss=0.592 " + "l1=0.0257" + "l2=0.566 f=-0.747 shape=(1, 9000, 1)
logits [[ 0.5044557   0.42550695  0.4412482  -4.3593717 ]]
Iteration 600 of 1000: loss=0.499 " + "l1=0" + "l2=0.499 f=-0.732 shape=(1, 9000, 1)
logits [[ 0.4383935   0.4521373   0.42917404 -4.249503  ]]
Iteration 700 of 1000: loss=0.417 " + "l1=0.00269" + "l2=0.414 f=-0.715 shape=(1, 9000, 1)
logits [[ 0.47221348  0.4639324   0.42120475 -4.2187376 ]]
Iteration 800 of 1000: loss=0.36 " + "l1=0.00516" + "l2=0.355 f=-0.697 shape=(1, 9000, 1)
logits [[ 0.49367616  0.47778928  0.41939378 -4.1793947 ]]
Iteration 900 of 1000: loss=0.324 " + "l1=0.00261" + "l2=0.321 f=-0.686 shape=(1, 9000, 1)
logits [[ 0.4940249  0.4860056  0.4272831 -4.1496773]]
--- 322.53302454948425 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0294 " + "l1=0.0294" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.7701993 -1.5763631  1.8297622 -7.2769194]]
Iteration 100 of 1000: loss=0.0292 " + "l1=0.029" + "l2=0.000194 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.7265835 -1.575323   1.8292258 -7.242471 ]]
Iteration 200 of 1000: loss=0.0291 " + "l1=0.0289" + "l2=0.000181 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.721575  -1.5755361  1.8291159 -7.238594 ]]
Iteration 300 of 1000: loss=0.0291 " + "l1=0.0288" + "l2=0.000219 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.713684  -1.57569    1.8290833 -7.23262  ]]
Iteration 400 of 1000: loss=0.0291 " + "l1=0.0288" + "l2=0.00029 f=-0.567 shape=(1, 9000, 1)
logits [[ 4.705427  -1.5758126  1.8290986 -7.2262864]]
Iteration 500 of 1000: loss=0.029 " + "l1=0.0287" + "l2=0.000347 f=-0.567 shape=(1, 9000, 1)
logits [[ 4.6970105 -1.5758697  1.8291925 -7.219832 ]]
Iteration 600 of 1000: loss=0.029 " + "l1=0.0286" + "l2=0.000459 f=-0.568 shape=(1, 9000, 1)
logits [[ 4.6871004 -1.5738932  1.8286177 -7.2137275]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.294 " + "l1=0.294" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.7701993 -1.5763631  1.8297622 -7.2769194]]
Iteration 100 of 1000: loss=0.272 " + "l1=0.261" + "l2=0.0114 f=-0.581 shape=(1, 9000, 1)
logits [[ 4.427187  -1.5530674  1.8190616 -7.017728 ]]
Iteration 200 of 1000: loss=0.263 " + "l1=0.248" + "l2=0.0158 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.2832065 -1.5318689  1.8070927 -6.9145694]]
Iteration 300 of 1000: loss=0.255 " + "l1=0.236" + "l2=0.0192 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.158412  -1.5139999  1.7968718 -6.8229537]]
Iteration 400 of 1000: loss=0.249 " + "l1=0.226" + "l2=0.0226 f=-0.601 shape=(1, 9000, 1)
logits [[ 4.049702  -1.5004239  1.7897451 -6.741316 ]]
Iteration 500 of 1000: loss=0.242 " + "l1=0.216" + "l2=0.0263 f=-0.606 shape=(1, 9000, 1)
logits [[ 3.94213   -1.4823596  1.7806972 -6.6641445]]
Iteration 600 of 1000: loss=0.237 " + "l1=0.209" + "l2=0.0282 f=-0.612 shape=(1, 9000, 1)
logits [[ 3.8688748 -1.4674977  1.7787786 -6.6290874]]
Iteration 700 of 1000: loss=0.232 " + "l1=0.199" + "l2=0.0329 f=-0.62 shape=(1, 9000, 1)
logits [[ 3.776172  -1.4579939  1.788086  -6.587813 ]]
Iteration 800 of 1000: loss=0.226 " + "l1=0.191" + "l2=0.0356 f=-0.626 shape=(1, 9000, 1)
logits [[ 3.6943657 -1.4432285  1.7887906 -6.545082 ]]
Iteration 900 of 1000: loss=0.221 " + "l1=0.181" + "l2=0.039 f=-0.633 shape=(1, 9000, 1)
logits [[ 3.608948  -1.4360662  1.7943262 -6.497921 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.94 " + "l1=2.94" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.7701993 -1.5763631  1.8297622 -7.2769194]]
Iteration 100 of 1000: loss=0.719 " + "l1=0" + "l2=0.719 f=-0.796 shape=(1, 9000, 1)
logits [[ 2.1331882 -1.64394    2.1352718 -5.8098555]]
Iteration 200 of 1000: loss=0.519 " + "l1=0.0027" + "l2=0.517 f=-0.8 shape=(1, 9000, 1)
logits [[ 2.1378825 -1.6434298  2.1351843 -5.8291306]]
Iteration 300 of 1000: loss=0.437 " + "l1=0" + "l2=0.437 f=-0.803 shape=(1, 9000, 1)
logits [[ 2.106976  -1.6286064  2.1275606 -5.8195395]]
Iteration 400 of 1000: loss=0.379 " + "l1=0.0106" + "l2=0.368 f=-0.8 shape=(1, 9000, 1)
logits [[ 2.1135652 -1.6096773  2.1029444 -5.8048496]]
Iteration 500 of 1000: loss=0.334 " + "l1=0" + "l2=0.334 f=-0.805 shape=(1, 9000, 1)
logits [[ 2.0648677 -1.6004101  2.0932882 -5.779595 ]]
Iteration 600 of 1000: loss=0.289 " + "l1=0.00392" + "l2=0.286 f=-0.805 shape=(1, 9000, 1)
logits [[ 2.0827062 -1.5851599  2.0787897 -5.7947164]]
Iteration 700 of 1000: loss=0.255 " + "l1=0" + "l2=0.255 f=-0.804 shape=(1, 9000, 1)
logits [[ 2.0755434 -1.5832363  2.0789847 -5.788441 ]]
Iteration 800 of 1000: loss=0.235 " + "l1=0" + "l2=0.235 f=-0.807 shape=(1, 9000, 1)
logits [[ 2.0545547 -1.5961761  2.0892196 -5.7769957]]
Iteration 900 of 1000: loss=0.203 " + "l1=0" + "l2=0.203 f=-0.804 shape=(1, 9000, 1)
logits [[ 2.0893357 -1.6045176  2.0914721 -5.792435 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.62 " + "l1=1.62" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.7701993 -1.5763631  1.8297622 -7.2769194]]
Iteration 100 of 1000: loss=0.807 " + "l1=0.31" + "l2=0.497 f=-0.752 shape=(1, 9000, 1)
logits [[ 2.5959427 -1.5136411  2.0329778 -6.1230493]]
Iteration 200 of 1000: loss=0.484 " + "l1=0.00154" + "l2=0.482 f=-0.817 shape=(1, 9000, 1)
logits [[ 2.1329896 -1.6212689  2.1301868 -5.908824 ]]
Iteration 300 of 1000: loss=0.387 " + "l1=0.00538" + "l2=0.381 f=-0.814 shape=(1, 9000, 1)
logits [[ 2.1149359 -1.6077489  2.1051602 -5.867713 ]]
Iteration 400 of 1000: loss=0.318 " + "l1=0.00155" + "l2=0.316 f=-0.816 shape=(1, 9000, 1)
logits [[ 2.0999    -1.6124759  2.0970905 -5.8466825]]
Iteration 500 of 1000: loss=0.27 " + "l1=0" + "l2=0.27 f=-0.818 shape=(1, 9000, 1)
logits [[ 2.0840042 -1.6277022  2.1026595 -5.8320513]]
Iteration 600 of 1000: loss=0.23 " + "l1=0.00558" + "l2=0.225 f=-0.816 shape=(1, 9000, 1)
logits [[ 2.1188378 -1.6473961  2.1086924 -5.8450403]]
Iteration 700 of 1000: loss=0.199 " + "l1=0" + "l2=0.199 f=-0.819 shape=(1, 9000, 1)
logits [[ 2.1185813 -1.6766821  2.1242473 -5.8429074]]
Iteration 800 of 1000: loss=0.181 " + "l1=0.00537" + "l2=0.176 f=-0.82 shape=(1, 9000, 1)
logits [[ 2.139752  -1.6944144  2.129997  -5.855575 ]]
Iteration 900 of 1000: loss=0.164 " + "l1=0" + "l2=0.164 f=-0.82 shape=(1, 9000, 1)
logits [[ 2.1267622 -1.7065103  2.134411  -5.8365717]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.956 " + "l1=0.956" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.7701993 -1.5763631  1.8297622 -7.2769194]]
Iteration 100 of 1000: loss=0.712 " + "l1=0.569" + "l2=0.143 f=-0.628 shape=(1, 9000, 1)
logits [[ 3.5964828 -1.4866735  1.8454216 -6.468363 ]]
Iteration 200 of 1000: loss=0.553 " + "l1=0.291" + "l2=0.262 f=-0.723 shape=(1, 9000, 1)
logits [[ 2.850384  -1.4769     1.9543271 -6.2216525]]
Iteration 300 of 1000: loss=0.425 " + "l1=0.0991" + "l2=0.326 f=-0.787 shape=(1, 9000, 1)
logits [[ 2.3711352 -1.6029518  2.0663476 -5.9842987]]
Iteration 400 of 1000: loss=0.312 " + "l1=0.00375" + "l2=0.308 f=-0.82 shape=(1, 9000, 1)
logits [[ 2.131188  -1.6690738  2.119652  -5.8604164]]
Iteration 500 of 1000: loss=0.239 " + "l1=0.00404" + "l2=0.234 f=-0.826 shape=(1, 9000, 1)
logits [[ 2.1538208 -1.728227   2.1413844 -5.8729086]]
Iteration 600 of 1000: loss=0.199 " + "l1=0.000585" + "l2=0.199 f=-0.832 shape=(1, 9000, 1)
logits [[ 2.1544485 -1.7712871  2.152649  -5.8623543]]
Iteration 700 of 1000: loss=0.177 " + "l1=0.000848" + "l2=0.176 f=-0.833 shape=(1, 9000, 1)
logits [[ 2.1608353 -1.790381   2.1582248 -5.8617125]]
Iteration 800 of 1000: loss=0.162 " + "l1=0.00272" + "l2=0.159 f=-0.831 shape=(1, 9000, 1)
logits [[ 2.1607554 -1.799921   2.1523888 -5.838518 ]]
Iteration 900 of 1000: loss=0.149 " + "l1=0" + "l2=0.149 f=-0.83 shape=(1, 9000, 1)
logits [[ 2.1348758 -1.8025675  2.1456397 -5.7967157]]
--- 299.9808759689331 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.12 " + "l1=0.12" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.7701993 -1.5763631  1.8297622 -7.2769194]]
Iteration 100 of 1000: loss=0.119 " + "l1=0.118" + "l2=0.00073 f=-0.562 shape=(1, 9000, 1)
logits [[ 4.677283  -1.5548922  1.8030057 -7.1717615]]
Iteration 200 of 1000: loss=0.119 " + "l1=0.118" + "l2=0.000846 f=-0.562 shape=(1, 9000, 1)
logits [[ 4.6543493 -1.5496268  1.7972018 -7.1485424]]
Iteration 300 of 1000: loss=0.119 " + "l1=0.118" + "l2=0.00106 f=-0.562 shape=(1, 9000, 1)
logits [[ 4.629407  -1.5445839  1.7909032 -7.1230526]]
Iteration 400 of 1000: loss=0.118 " + "l1=0.117" + "l2=0.00129 f=-0.562 shape=(1, 9000, 1)
logits [[ 4.6056066 -1.5394007  1.7846057 -7.0987725]]
Iteration 500 of 1000: loss=0.118 " + "l1=0.117" + "l2=0.00151 f=-0.562 shape=(1, 9000, 1)
logits [[ 4.583317  -1.5345407  1.778457  -7.075973 ]]
Iteration 600 of 1000: loss=0.118 " + "l1=0.116" + "l2=0.00169 f=-0.562 shape=(1, 9000, 1)
logits [[ 4.5627847 -1.5297297  1.7725753 -7.055582 ]]
Iteration 700 of 1000: loss=0.118 " + "l1=0.116" + "l2=0.00192 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.543415  -1.5255965  1.7672961 -7.0364027]]
Iteration 800 of 1000: loss=0.118 " + "l1=0.115" + "l2=0.00214 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.5245476 -1.5216781  1.762302  -7.0176754]]
Iteration 900 of 1000: loss=0.117 " + "l1=0.115" + "l2=0.00233 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.5065393 -1.517742   1.7575978 -7.000007 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.2 " + "l1=1.2" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.7701993 -1.5763631  1.8297622 -7.2769194]]
Iteration 100 of 1000: loss=1.09 " + "l1=1.03" + "l2=0.0581 f=-0.548 shape=(1, 9000, 1)
logits [[ 3.9380522 -1.3512422  1.5985616 -6.376201 ]]
Iteration 200 of 1000: loss=1.04 " + "l1=0.955" + "l2=0.0844 f=-0.543 shape=(1, 9000, 1)
logits [[ 3.5678172 -1.2277752  1.4703705 -5.982812 ]]
Iteration 300 of 1000: loss=0.999 " + "l1=0.897" + "l2=0.102 f=-0.541 shape=(1, 9000, 1)
logits [[ 3.2933419 -1.141293   1.361108  -5.67905  ]]
Iteration 400 of 1000: loss=0.963 " + "l1=0.844" + "l2=0.119 f=-0.544 shape=(1, 9000, 1)
logits [[ 3.0267344 -1.0281506  1.2402967 -5.4136624]]
Iteration 500 of 1000: loss=0.93 " + "l1=0.8" + "l2=0.131 f=-0.549 shape=(1, 9000, 1)
logits [[ 2.8018692  -0.93371767  1.1316291  -5.195207  ]]
Iteration 600 of 1000: loss=0.899 " + "l1=0.757" + "l2=0.141 f=-0.553 shape=(1, 9000, 1)
logits [[ 2.5865853  -0.84596056  1.034549   -4.9880505 ]]
Iteration 700 of 1000: loss=0.87 " + "l1=0.717" + "l2=0.153 f=-0.554 shape=(1, 9000, 1)
logits [[ 2.3830087 -0.7632214  0.9549539 -4.7906437]]
Iteration 800 of 1000: loss=0.845 " + "l1=0.687" + "l2=0.158 f=-0.551 shape=(1, 9000, 1)
logits [[ 2.2339613  -0.70063764  0.8994533  -4.6378794 ]]
Iteration 900 of 1000: loss=0.822 " + "l1=0.658" + "l2=0.164 f=-0.55 shape=(1, 9000, 1)
logits [[ 2.0882623  -0.6429056   0.84333646 -4.4873557 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12 " + "l1=12" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.7701993 -1.5763631  1.8297622 -7.2769194]]
Iteration 100 of 1000: loss=4.57 " + "l1=1.54" + "l2=3.03 f=-0.335 shape=(1, 9000, 1)
logits [[ 0.28398106 -0.68322647  0.2987868  -1.2387395 ]]
Iteration 200 of 1000: loss=2.58 " + "l1=0.000607" + "l2=2.58 f=-0.235 shape=(1, 9000, 1)
logits [[-0.04983358 -0.8101741  -0.04000837 -0.04061551]]
Iteration 300 of 1000: loss=2.03 " + "l1=0.0105" + "l2=2.02 f=-0.242 shape=(1, 9000, 1)
logits [[-0.01970437 -0.8992944  -0.02020865 -0.0302133 ]]
Iteration 400 of 1000: loss=1.81 " + "l1=0" + "l2=1.81 f=-0.243 shape=(1, 9000, 1)
logits [[-0.03344506 -0.908927   -0.02266005 -0.00551789]]
Iteration 500 of 1000: loss=1.68 " + "l1=0" + "l2=1.68 f=-0.25 shape=(1, 9000, 1)
logits [[-0.03967068 -0.9110427  -0.03332736 -0.01467445]]
Iteration 600 of 1000: loss=1.58 " + "l1=0" + "l2=1.58 f=-0.258 shape=(1, 9000, 1)
logits [[-0.06146751 -0.9048652  -0.0474172  -0.01950496]]
Iteration 700 of 1000: loss=1.5 " + "l1=0" + "l2=1.5 f=-0.268 shape=(1, 9000, 1)
logits [[-0.07794067 -0.8953368  -0.06346728 -0.03610791]]
Iteration 800 of 1000: loss=1.41 " + "l1=0" + "l2=1.41 f=-0.277 shape=(1, 9000, 1)
logits [[-0.09129241 -0.8833991  -0.07917552 -0.05528154]]
Iteration 900 of 1000: loss=1.33 " + "l1=0" + "l2=1.33 f=-0.289 shape=(1, 9000, 1)
logits [[-0.11027865 -0.86331403 -0.10067697 -0.08097605]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.63 " + "l1=6.63" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.7701993 -1.5763631  1.8297622 -7.2769194]]
Iteration 100 of 1000: loss=3.88 " + "l1=2.54" + "l2=1.34 f=-0.485 shape=(1, 9000, 1)
logits [[ 1.2999612  -0.7817059   0.85799015 -3.3147507 ]]
Iteration 200 of 1000: loss=2.63 " + "l1=0.908" + "l2=1.72 f=-0.35 shape=(1, 9000, 1)
logits [[ 0.3272464  -0.7535517   0.33913994 -1.3122753 ]]
Iteration 300 of 1000: loss=1.92 " + "l1=0.0812" + "l2=1.84 f=-0.239 shape=(1, 9000, 1)
logits [[-0.0059742  -0.8121483   0.00468533 -0.14286283]]
Iteration 400 of 1000: loss=1.52 " + "l1=0.0226" + "l2=1.5 f=-0.263 shape=(1, 9000, 1)
logits [[-0.04127015 -0.88639265 -0.04152039 -0.08244494]]
Iteration 500 of 1000: loss=1.35 " + "l1=0.00664" + "l2=1.34 f=-0.269 shape=(1, 9000, 1)
logits [[-0.06421419 -0.88082844 -0.0604132  -0.07248206]]
Iteration 600 of 1000: loss=1.23 " + "l1=0.0105" + "l2=1.22 f=-0.277 shape=(1, 9000, 1)
logits [[-0.0726459  -0.8843783  -0.06556925 -0.08473705]]
Iteration 700 of 1000: loss=1.13 " + "l1=0.00447" + "l2=1.12 f=-0.284 shape=(1, 9000, 1)
logits [[-0.08631262 -0.866018   -0.08940307 -0.09443133]]
Iteration 800 of 1000: loss=1.04 " + "l1=0" + "l2=1.04 f=-0.291 shape=(1, 9000, 1)
logits [[-0.10983831 -0.83678716 -0.11152723 -0.10736795]]
Iteration 900 of 1000: loss=0.963 " + "l1=0" + "l2=0.963 f=-0.297 shape=(1, 9000, 1)
logits [[-0.13663548 -0.7955702  -0.13288651 -0.12386813]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.92 " + "l1=3.92" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.7701993 -1.5763631  1.8297622 -7.2769194]]
Iteration 100 of 1000: loss=2.86 " + "l1=2.33" + "l2=0.53 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.4551039 -0.942653   1.1712328 -4.7189107]]
Iteration 200 of 1000: loss=2.39 " + "l1=1.63" + "l2=0.76 f=-0.49 shape=(1, 9000, 1)
logits [[ 1.493625  -0.7440108  0.803345  -3.5115829]]
Iteration 300 of 1000: loss=1.99 " + "l1=1.04" + "l2=0.942 f=-0.45 shape=(1, 9000, 1)
logits [[ 0.78151536 -0.71383476  0.5633493  -2.429591  ]]
Iteration 400 of 1000: loss=1.67 " + "l1=0.666" + "l2=1.01 f=-0.395 shape=(1, 9000, 1)
logits [[ 0.38091084 -0.6682953   0.37411556 -1.6681623 ]]
Iteration 500 of 1000: loss=1.45 " + "l1=0.449" + "l2=1 f=-0.361 shape=(1, 9000, 1)
logits [[ 0.18216404 -0.6162912   0.18649468 -1.1956693 ]]
Iteration 600 of 1000: loss=1.23 " + "l1=0.178" + "l2=1.05 f=-0.328 shape=(1, 9000, 1)
logits [[-0.03019857 -0.6698928  -0.03283476 -0.578065  ]]
Iteration 700 of 1000: loss=0.998 " + "l1=0.0102" + "l2=0.988 f=-0.306 shape=(1, 9000, 1)
logits [[-0.19004393 -0.6220618  -0.19027397 -0.22136152]]
Iteration 800 of 1000: loss=0.878 " + "l1=0.00677" + "l2=0.871 f=-0.312 shape=(1, 9000, 1)
logits [[-0.2205309  -0.5697524  -0.21820574 -0.23902407]]
Iteration 900 of 1000: loss=0.8 " + "l1=0" + "l2=0.8 f=-0.312 shape=(1, 9000, 1)
logits [[-0.2366802  -0.5461427  -0.23288605 -0.23265147]]
--- 322.5475506782532 seconds ---
Adv result:3
Loading record A00422
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0232 " + "l1=0.0232" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  3.941648    1.6177683   1.7136198 -10.396293 ]]
Iteration 100 of 1000: loss=0.0206 " + "l1=0.0191" + "l2=0.00149 f=-0.812 shape=(1, 9000, 1)
logits [[  3.705807    1.7915004   1.6856198 -10.430089 ]]
Iteration 200 of 1000: loss=0.0199 " + "l1=0.018" + "l2=0.00191 f=-0.82 shape=(1, 9000, 1)
logits [[  3.6422832   1.8418086   1.6753218 -10.437441 ]]
Iteration 300 of 1000: loss=0.0193 " + "l1=0.017" + "l2=0.00237 f=-0.827 shape=(1, 9000, 1)
logits [[  3.583143    1.8865801   1.6663489 -10.442813 ]]
Iteration 400 of 1000: loss=0.0189 " + "l1=0.016" + "l2=0.00285 f=-0.833 shape=(1, 9000, 1)
logits [[  3.5288818   1.9281979   1.6593733 -10.448384 ]]
Iteration 500 of 1000: loss=0.0185 " + "l1=0.0152" + "l2=0.00327 f=-0.838 shape=(1, 9000, 1)
logits [[  3.481662    1.9634389   1.6543388 -10.452162 ]]
Iteration 600 of 1000: loss=0.0181 " + "l1=0.0144" + "l2=0.00366 f=-0.843 shape=(1, 9000, 1)
logits [[  3.4376502   1.9955423   1.6505829 -10.455725 ]]
Iteration 700 of 1000: loss=0.0178 " + "l1=0.0138" + "l2=0.00401 f=-0.847 shape=(1, 9000, 1)
logits [[  3.3992643   2.022337    1.6472925 -10.456554 ]]
Iteration 800 of 1000: loss=0.0174 " + "l1=0.0133" + "l2=0.00416 f=-0.85 shape=(1, 9000, 1)
logits [[  3.3688993   2.0419085   1.6458588 -10.456654 ]]
Iteration 900 of 1000: loss=0.0172 " + "l1=0.0127" + "l2=0.00448 f=-0.854 shape=(1, 9000, 1)
logits [[  3.3352346   2.0637257   1.6446102 -10.458275 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.232 " + "l1=0.232" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  3.941648    1.6177683   1.7136198 -10.396293 ]]
Iteration 100 of 1000: loss=0.0425 " + "l1=0.00136" + "l2=0.0412 f=-0.971 shape=(1, 9000, 1)
logits [[  2.5810738   2.56748     1.6322281 -10.665762 ]]
Iteration 200 of 1000: loss=0.0328 " + "l1=0.00145" + "l2=0.0313 f=-0.964 shape=(1, 9000, 1)
logits [[  2.5851564   2.570704    1.6276376 -10.639407 ]]
Iteration 300 of 1000: loss=0.0277 " + "l1=0" + "l2=0.0277 f=-0.961 shape=(1, 9000, 1)
logits [[  2.565998    2.5785058   1.6238998 -10.610954 ]]
Iteration 400 of 1000: loss=0.0254 " + "l1=0" + "l2=0.0254 f=-0.957 shape=(1, 9000, 1)
logits [[  2.5530093   2.5800648   1.6230841 -10.585752 ]]
Iteration 500 of 1000: loss=0.0234 " + "l1=0" + "l2=0.0234 f=-0.953 shape=(1, 9000, 1)
logits [[  2.5468931   2.5765665   1.6244652 -10.560356 ]]
Iteration 600 of 1000: loss=0.0222 " + "l1=0" + "l2=0.0222 f=-0.951 shape=(1, 9000, 1)
logits [[  2.527978    2.5818589   1.6255944 -10.541167 ]]
Iteration 700 of 1000: loss=0.0196 " + "l1=0" + "l2=0.0196 f=-0.943 shape=(1, 9000, 1)
logits [[  2.556959    2.5573351   1.6260966 -10.512503 ]]
Iteration 800 of 1000: loss=0.0186 " + "l1=0" + "l2=0.0186 f=-0.941 shape=(1, 9000, 1)
logits [[  2.5485349   2.5540345   1.6276675 -10.49247  ]]
Iteration 900 of 1000: loss=0.018 " + "l1=0" + "l2=0.018 f=-0.94 shape=(1, 9000, 1)
logits [[  2.5277033   2.556815    1.6303477 -10.47513  ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.128 " + "l1=0.128" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  3.941648    1.6177683   1.7136198 -10.396293 ]]
Iteration 100 of 1000: loss=0.0453 " + "l1=0.000108" + "l2=0.0452 f=-0.973 shape=(1, 9000, 1)
logits [[  2.5741081   2.5721536   1.6267103 -10.663295 ]]
Iteration 200 of 1000: loss=0.0325 " + "l1=0.00108" + "l2=0.0314 f=-0.964 shape=(1, 9000, 1)
logits [[  2.5893574   2.5697548   1.625145  -10.641304 ]]
Iteration 300 of 1000: loss=0.0275 " + "l1=0" + "l2=0.0275 f=-0.961 shape=(1, 9000, 1)
logits [[  2.5715268   2.5769076   1.622621  -10.61476  ]]
Iteration 400 of 1000: loss=0.0247 " + "l1=0" + "l2=0.0247 f=-0.956 shape=(1, 9000, 1)
logits [[  2.5689485   2.5713851   1.6232406 -10.587724 ]]
Iteration 500 of 1000: loss=0.0228 " + "l1=0.000329" + "l2=0.0225 f=-0.951 shape=(1, 9000, 1)
logits [[  2.5694537   2.5634694   1.6246433 -10.560708 ]]
Iteration 600 of 1000: loss=0.021 " + "l1=0" + "l2=0.021 f=-0.948 shape=(1, 9000, 1)
logits [[  2.5577598   2.564201    1.6259867 -10.539679 ]]
Iteration 700 of 1000: loss=0.0198 " + "l1=0" + "l2=0.0198 f=-0.944 shape=(1, 9000, 1)
logits [[  2.5522935   2.560321    1.6279708 -10.517699 ]]
Iteration 800 of 1000: loss=0.019 " + "l1=0" + "l2=0.019 f=-0.943 shape=(1, 9000, 1)
logits [[  2.5329266   2.5630858   1.6302261 -10.498935 ]]
Iteration 900 of 1000: loss=0.0176 " + "l1=0" + "l2=0.0176 f=-0.939 shape=(1, 9000, 1)
logits [[  2.5366924   2.5504322   1.6315774 -10.474376 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0755 " + "l1=0.0755" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  3.941648    1.6177683   1.7136198 -10.396293 ]]
Iteration 100 of 1000: loss=0.0477 " + "l1=0.0321" + "l2=0.0156 f=-0.886 shape=(1, 9000, 1)
logits [[  3.1676576   2.181011    1.6357056 -10.5286045]]
Iteration 200 of 1000: loss=0.0369 " + "l1=0.0133" + "l2=0.0236 f=-0.932 shape=(1, 9000, 1)
logits [[  2.8268394   2.4178984   1.6225784 -10.595333 ]]
Iteration 300 of 1000: loss=0.0298 " + "l1=0.000624" + "l2=0.0291 f=-0.962 shape=(1, 9000, 1)
logits [[  2.5883336   2.5691462   1.6216747 -10.62676  ]]
Iteration 400 of 1000: loss=0.0259 " + "l1=0.000273" + "l2=0.0256 f=-0.958 shape=(1, 9000, 1)
logits [[  2.5776994   2.5693028   1.620916  -10.599984 ]]
Iteration 500 of 1000: loss=0.0234 " + "l1=0.000193" + "l2=0.0232 f=-0.954 shape=(1, 9000, 1)
logits [[  2.5710196   2.5650852   1.6227113 -10.573924 ]]
Iteration 600 of 1000: loss=0.0215 " + "l1=0.000112" + "l2=0.0213 f=-0.95 shape=(1, 9000, 1)
logits [[  2.5650434   2.5616112   1.62438   -10.550421 ]]
Iteration 700 of 1000: loss=0.0201 " + "l1=0.000257" + "l2=0.0198 f=-0.945 shape=(1, 9000, 1)
logits [[  2.5633254   2.5554073   1.6265827 -10.526892 ]]
Iteration 800 of 1000: loss=0.0192 " + "l1=0.00016" + "l2=0.019 f=-0.942 shape=(1, 9000, 1)
logits [[  2.5561657   2.551235    1.6287256 -10.505505 ]]
Iteration 900 of 1000: loss=0.0177 " + "l1=0.000323" + "l2=0.0174 f=-0.939 shape=(1, 9000, 1)
logits [[  2.5525134   2.5425863   1.6309427 -10.482104 ]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0494 " + "l1=0.0494" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  3.941648    1.6177683   1.7136198 -10.396293 ]]
Iteration 100 of 1000: loss=0.0377 " + "l1=0.0312" + "l2=0.00652 f=-0.846 shape=(1, 9000, 1)
logits [[  3.4492247   1.9814996   1.6559732 -10.472133 ]]
Iteration 200 of 1000: loss=0.0335 " + "l1=0.0239" + "l2=0.00958 f=-0.872 shape=(1, 9000, 1)
logits [[  3.2531426   2.1271837   1.6381328 -10.506349 ]]
Iteration 300 of 1000: loss=0.0305 " + "l1=0.0182" + "l2=0.0123 f=-0.891 shape=(1, 9000, 1)
logits [[  3.0957751   2.2390008   1.6285015 -10.528293 ]]
Iteration 400 of 1000: loss=0.0279 " + "l1=0.0135" + "l2=0.0144 f=-0.908 shape=(1, 9000, 1)
logits [[  2.9617476   2.3272471   1.6245182 -10.543799 ]]
Iteration 500 of 1000: loss=0.026 " + "l1=0.00975" + "l2=0.0162 f=-0.92 shape=(1, 9000, 1)
logits [[  2.8531837   2.3944101   1.6222256 -10.550901 ]]
Iteration 600 of 1000: loss=0.0242 " + "l1=0.00666" + "l2=0.0175 f=-0.929 shape=(1, 9000, 1)
logits [[  2.7618706   2.4486132   1.6212618 -10.549693 ]]
Iteration 700 of 1000: loss=0.0224 " + "l1=0.00399" + "l2=0.0184 f=-0.936 shape=(1, 9000, 1)
logits [[  2.681607    2.4938922   1.6230352 -10.542558 ]]
Iteration 800 of 1000: loss=0.0209 " + "l1=0.00142" + "l2=0.0195 f=-0.942 shape=(1, 9000, 1)
logits [[  2.6029167   2.53609     1.6258847 -10.532981 ]]
Iteration 900 of 1000: loss=0.0194 " + "l1=0.000368" + "l2=0.019 f=-0.942 shape=(1, 9000, 1)
logits [[  2.5671682   2.5498374   1.6268944 -10.510869 ]]
--- 325.2119119167328 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0223 " + "l1=0.0223" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  3.941648    1.6177683   1.7136198 -10.396293 ]]
Iteration 100 of 1000: loss=0.0214 " + "l1=0.0208" + "l2=0.000594 f=-0.8 shape=(1, 9000, 1)
logits [[  3.8012013   1.7003967   1.7206984 -10.422763 ]]
Iteration 200 of 1000: loss=0.0212 " + "l1=0.0206" + "l2=0.000657 f=-0.803 shape=(1, 9000, 1)
logits [[  3.7774541   1.7146314   1.7215767 -10.426634 ]]
Iteration 300 of 1000: loss=0.0211 " + "l1=0.0203" + "l2=0.000779 f=-0.806 shape=(1, 9000, 1)
logits [[  3.7513733   1.7303904   1.7222703 -10.429934 ]]
Iteration 400 of 1000: loss=0.021 " + "l1=0.02" + "l2=0.000929 f=-0.809 shape=(1, 9000, 1)
logits [[  3.7272131   1.7453582   1.7225214 -10.432364 ]]
Iteration 500 of 1000: loss=0.0209 " + "l1=0.0198" + "l2=0.00105 f=-0.812 shape=(1, 9000, 1)
logits [[  3.7046437   1.7594538   1.7225274 -10.43426  ]]
Iteration 600 of 1000: loss=0.0209 " + "l1=0.0196" + "l2=0.00123 f=-0.814 shape=(1, 9000, 1)
logits [[  3.684671    1.7715248   1.7227856 -10.435725 ]]
Iteration 700 of 1000: loss=0.0207 " + "l1=0.0194" + "l2=0.00131 f=-0.816 shape=(1, 9000, 1)
logits [[  3.6664593   1.7824082   1.7231146 -10.4368   ]]
Iteration 800 of 1000: loss=0.0208 " + "l1=0.0193" + "l2=0.0015 f=-0.818 shape=(1, 9000, 1)
logits [[  3.6489897   1.7926232   1.7236463 -10.437118 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.223 " + "l1=0.223" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  3.941648    1.6177683   1.7136198 -10.396293 ]]
Iteration 100 of 1000: loss=0.126 " + "l1=0.0694" + "l2=0.0567 f=-0.995 shape=(1, 9000, 1)
logits [[  2.487303    2.4527626   1.7929466 -10.713973 ]]
Iteration 200 of 1000: loss=0.105 " + "l1=0.0559" + "l2=0.0491 f=-1 shape=(1, 9000, 1)
logits [[  2.4262378   2.4070718   1.8674701 -10.703867 ]]
Iteration 300 of 1000: loss=0.0936 " + "l1=0.0453" + "l2=0.0483 f=-1 shape=(1, 9000, 1)
logits [[  2.373291    2.3622198   1.9203893 -10.662979 ]]
Iteration 400 of 1000: loss=0.0844 " + "l1=0.0342" + "l2=0.0502 f=-1 shape=(1, 9000, 1)
logits [[  2.3242218   2.3074043   1.9822392 -10.615298 ]]
Iteration 500 of 1000: loss=0.0753 " + "l1=0.0205" + "l2=0.0547 f=-1.01 shape=(1, 9000, 1)
logits [[  2.2365382   2.255935    2.0505023 -10.569739 ]]
Iteration 600 of 1000: loss=0.0657 " + "l1=0.00812" + "l2=0.0576 f=-1.01 shape=(1, 9000, 1)
logits [[  2.17457     2.1948545   2.1136806 -10.514865 ]]
Iteration 700 of 1000: loss=0.0554 " + "l1=8.08e-05" + "l2=0.0553 f=-1 shape=(1, 9000, 1)
logits [[  2.150089    2.1505299   2.1497223 -10.458696 ]]
Iteration 800 of 1000: loss=0.0499 " + "l1=0.000569" + "l2=0.0493 f=-0.994 shape=(1, 9000, 1)
logits [[  2.1432214   2.1500359   2.1443498 -10.41405  ]]
Iteration 900 of 1000: loss=0.0447 " + "l1=0.000198" + "l2=0.0445 f=-0.986 shape=(1, 9000, 1)
logits [[  2.1418      2.1449842   2.1430073 -10.374893 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.123 " + "l1=0.123" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  3.941648    1.6177683   1.7136198 -10.396293 ]]
Iteration 100 of 1000: loss=0.0961 " + "l1=0.0801" + "l2=0.016 f=-0.888 shape=(1, 9000, 1)
logits [[  3.2009892   2.0587633   1.7446332 -10.55817  ]]
Iteration 200 of 1000: loss=0.085 " + "l1=0.0598" + "l2=0.0253 f=-0.938 shape=(1, 9000, 1)
logits [[  2.841444    2.2757204   1.7548518 -10.625041 ]]
Iteration 300 of 1000: loss=0.0762 " + "l1=0.0445" + "l2=0.0318 f=-0.972 shape=(1, 9000, 1)
logits [[  2.5738704   2.425671    1.7655895 -10.654799 ]]
Iteration 400 of 1000: loss=0.0697 " + "l1=0.0374" + "l2=0.0323 f=-0.983 shape=(1, 9000, 1)
logits [[  2.465609    2.4601922   1.7857518 -10.644075 ]]
Iteration 500 of 1000: loss=0.0655 " + "l1=0.0351" + "l2=0.0303 f=-0.98 shape=(1, 9000, 1)
logits [[  2.4491506   2.429705    1.8104101 -10.610699 ]]
Iteration 600 of 1000: loss=0.0617 " + "l1=0.0324" + "l2=0.0293 f=-0.98 shape=(1, 9000, 1)
logits [[  2.4182546   2.4120476   1.8297356 -10.579804 ]]
Iteration 700 of 1000: loss=0.0581 " + "l1=0.0298" + "l2=0.0283 f=-0.979 shape=(1, 9000, 1)
logits [[  2.3889987   2.3913758   1.8501109 -10.54709  ]]
Iteration 800 of 1000: loss=0.0554 " + "l1=0.0287" + "l2=0.0267 f=-0.973 shape=(1, 9000, 1)
logits [[  2.393417    2.3494904   1.8711361 -10.505277 ]]
Iteration 900 of 1000: loss=0.0516 " + "l1=0.0248" + "l2=0.0267 f=-0.974 shape=(1, 9000, 1)
logits [[  2.3434377   2.3437948   1.8922161 -10.47709  ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.173 " + "l1=0.173" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  3.941648    1.6177683   1.7136198 -10.396293 ]]
Iteration 100 of 1000: loss=0.117 " + "l1=0.0813" + "l2=0.0354 f=-0.948 shape=(1, 9000, 1)
logits [[  2.8081412   2.2868426   1.7591761 -10.644712 ]]
Iteration 200 of 1000: loss=0.0949 " + "l1=0.0519" + "l2=0.043 f=-0.992 shape=(1, 9000, 1)
logits [[  2.4673448   2.4580202   1.7981437 -10.69258  ]]
Iteration 300 of 1000: loss=0.0856 " + "l1=0.0454" + "l2=0.0402 f=-0.994 shape=(1, 9000, 1)
logits [[  2.421657    2.427117    1.8410394 -10.6664095]]
Iteration 400 of 1000: loss=0.0792 " + "l1=0.041" + "l2=0.0382 f=-0.99 shape=(1, 9000, 1)
logits [[  2.4069645   2.378667    1.8774018 -10.624092 ]]
Iteration 500 of 1000: loss=0.0733 " + "l1=0.0352" + "l2=0.0381 f=-0.991 shape=(1, 9000, 1)
logits [[  2.3653467   2.3480425   1.9108791 -10.587217 ]]
Iteration 600 of 1000: loss=0.068 " + "l1=0.0301" + "l2=0.0378 f=-0.989 shape=(1, 9000, 1)
logits [[  2.3339534   2.3110857   1.9450125 -10.545187 ]]
Iteration 700 of 1000: loss=0.0623 " + "l1=0.0233" + "l2=0.0389 f=-0.992 shape=(1, 9000, 1)
logits [[  2.2837887   2.2714846   1.982507  -10.504019 ]]
Iteration 800 of 1000: loss=0.0561 " + "l1=0.0154" + "l2=0.0407 f=-0.993 shape=(1, 9000, 1)
logits [[  2.2255838   2.2298913   2.0314944 -10.460057 ]]
Iteration 900 of 1000: loss=0.051 " + "l1=0.00974" + "l2=0.0412 f=-0.992 shape=(1, 9000, 1)
logits [[  2.179786    2.1971421   2.0714688 -10.41763  ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.198 " + "l1=0.198" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  3.941648    1.6177683   1.7136198 -10.396293 ]]
Iteration 100 of 1000: loss=0.122 " + "l1=0.0744" + "l2=0.0478 f=-0.976 shape=(1, 9000, 1)
logits [[  2.614296    2.3925278   1.7754942 -10.687196 ]]
Iteration 200 of 1000: loss=0.1 " + "l1=0.0542" + "l2=0.0457 f=-0.997 shape=(1, 9000, 1)
logits [[  2.445348    2.4329045   1.8342836 -10.699862 ]]
Iteration 300 of 1000: loss=0.0898 " + "l1=0.0464" + "l2=0.0435 f=-0.996 shape=(1, 9000, 1)
logits [[  2.404612    2.3921235   1.882075  -10.664604 ]]
Iteration 400 of 1000: loss=0.0826 " + "l1=0.0395" + "l2=0.0431 f=-0.995 shape=(1, 9000, 1)
logits [[  2.3701105   2.34447     1.9253976 -10.621521 ]]
Iteration 500 of 1000: loss=0.0754 " + "l1=0.0311" + "l2=0.0443 f=-0.994 shape=(1, 9000, 1)
logits [[  2.322695    2.306612    1.9726413 -10.576782 ]]
Iteration 600 of 1000: loss=0.0679 " + "l1=0.0205" + "l2=0.0474 f=-0.996 shape=(1, 9000, 1)
logits [[  2.263808    2.2501163   2.0327144 -10.532239 ]]
Iteration 700 of 1000: loss=0.0599 " + "l1=0.0105" + "l2=0.0493 f=-0.999 shape=(1, 9000, 1)
logits [[  2.1993246   2.2036963   2.0849757 -10.482453 ]]
Iteration 800 of 1000: loss=0.0529 " + "l1=0.000808" + "l2=0.0521 f=-0.999 shape=(1, 9000, 1)
logits [[  2.1437495   2.1528594   2.1437595 -10.435799 ]]
Iteration 900 of 1000: loss=0.0469 " + "l1=0.00133" + "l2=0.0456 f=-0.986 shape=(1, 9000, 1)
logits [[  2.1561332   2.1389902   2.1411376 -10.379934 ]]
--- 315.8266968727112 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.143 " + "l1=0.143" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  3.941648    1.6177683   1.7136198 -10.396293 ]]
Iteration 100 of 1000: loss=0.142 " + "l1=0.142" + "l2=0.000561 f=-0.793 shape=(1, 9000, 1)
logits [[  3.8095362   1.6951861   1.6937398 -10.369083 ]]
Iteration 200 of 1000: loss=0.142 " + "l1=0.141" + "l2=0.00065 f=-0.794 shape=(1, 9000, 1)
logits [[  3.7825294   1.7109358   1.6863711 -10.3574095]]
Iteration 300 of 1000: loss=0.142 " + "l1=0.141" + "l2=0.000842 f=-0.796 shape=(1, 9000, 1)
logits [[  3.7525022   1.7271115   1.6796324 -10.344527 ]]
Iteration 400 of 1000: loss=0.142 " + "l1=0.141" + "l2=0.00105 f=-0.798 shape=(1, 9000, 1)
logits [[  3.7237666   1.7426509   1.6732467 -10.332139 ]]
Iteration 500 of 1000: loss=0.141 " + "l1=0.14" + "l2=0.00123 f=-0.8 shape=(1, 9000, 1)
logits [[  3.696854    1.7572057   1.6676202 -10.321098 ]]
Iteration 600 of 1000: loss=0.141 " + "l1=0.14" + "l2=0.00152 f=-0.802 shape=(1, 9000, 1)
logits [[  3.6698396   1.7720321   1.6623023 -10.310817 ]]
Iteration 700 of 1000: loss=0.141 " + "l1=0.139" + "l2=0.00161 f=-0.803 shape=(1, 9000, 1)
logits [[  3.6458995   1.7843317   1.6583034 -10.300415 ]]
Iteration 800 of 1000: loss=0.141 " + "l1=0.139" + "l2=0.00182 f=-0.804 shape=(1, 9000, 1)
logits [[  3.6235878   1.7957597   1.6547322 -10.290308 ]]
Iteration 900 of 1000: loss=0.141 " + "l1=0.139" + "l2=0.002 f=-0.805 shape=(1, 9000, 1)
logits [[  3.6023388   1.8061749   1.651778  -10.280001 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.43 " + "l1=1.43" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  3.941648    1.6177683   1.7136198 -10.396293 ]]
Iteration 100 of 1000: loss=1.34 " + "l1=1.29" + "l2=0.0505 f=-0.898 shape=(1, 9000, 1)
logits [[  2.6867948   2.329319    1.5636934 -10.173749 ]]
Iteration 200 of 1000: loss=1.29 " + "l1=1.23" + "l2=0.0579 f=-0.896 shape=(1, 9000, 1)
logits [[ 2.3917677  2.403501   1.526713  -9.90433  ]]
Iteration 300 of 1000: loss=1.25 " + "l1=1.19" + "l2=0.0631 f=-0.859 shape=(1, 9000, 1)
logits [[ 2.3282807  2.3062518  1.5062726 -9.577528 ]]
Iteration 400 of 1000: loss=1.22 " + "l1=1.15" + "l2=0.0731 f=-0.834 shape=(1, 9000, 1)
logits [[ 2.227184   2.2162697  1.4929088 -9.273127 ]]
Iteration 500 of 1000: loss=1.2 " + "l1=1.11" + "l2=0.0826 f=-0.807 shape=(1, 9000, 1)
logits [[ 2.1480284  2.1184123  1.4937634 -8.988114 ]]
Iteration 600 of 1000: loss=1.17 " + "l1=1.08" + "l2=0.0911 f=-0.787 shape=(1, 9000, 1)
logits [[ 2.0334866  2.0446725  1.5072609 -8.731915 ]]
Iteration 700 of 1000: loss=1.14 " + "l1=1.05" + "l2=0.0977 f=-0.77 shape=(1, 9000, 1)
logits [[ 1.9573605  1.9503405  1.5262033 -8.512007 ]]
Iteration 800 of 1000: loss=1.12 " + "l1=1.02" + "l2=0.104 f=-0.751 shape=(1, 9000, 1)
logits [[ 1.8806834  1.8685963  1.5454135 -8.299795 ]]
Iteration 900 of 1000: loss=1.1 " + "l1=0.989" + "l2=0.112 f=-0.734 shape=(1, 9000, 1)
logits [[ 1.7958843  1.7854936  1.5707748 -8.090021 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=14.3 " + "l1=14.3" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  3.941648    1.6177683   1.7136198 -10.396293 ]]
Iteration 100 of 1000: loss=10 " + "l1=8.9" + "l2=1.15 f=-0.678 shape=(1, 9000, 1)
logits [[ 1.5561361  1.536819   1.5379928 -7.344288 ]]
Iteration 200 of 1000: loss=8.04 " + "l1=6.32" + "l2=1.72 f=-0.574 shape=(1, 9000, 1)
logits [[ 0.9987724  1.0135098  0.9942061 -5.3029   ]]
Iteration 300 of 1000: loss=6.34 " + "l1=4.15" + "l2=2.19 f=-0.502 shape=(1, 9000, 1)
logits [[ 0.48496512  0.55064535  0.5530202  -3.5966709 ]]
Iteration 400 of 1000: loss=5.24 " + "l1=2.75" + "l2=2.48 f=-0.441 shape=(1, 9000, 1)
logits [[ 0.14528653  0.28040266  0.27891842 -2.4698858 ]]
Iteration 500 of 1000: loss=4.28 " + "l1=1.55" + "l2=2.72 f=-0.377 shape=(1, 9000, 1)
logits [[-0.15125091  0.06381785  0.06635566 -1.4868705 ]]
Iteration 600 of 1000: loss=3.38 " + "l1=0.458" + "l2=2.92 f=-0.319 shape=(1, 9000, 1)
logits [[-0.33892813 -0.16598058 -0.15742521 -0.61522466]]
Iteration 700 of 1000: loss=2.77 " + "l1=0.0154" + "l2=2.75 f=-0.274 shape=(1, 9000, 1)
logits [[-0.40929276 -0.22401738 -0.22509745 -0.23941863]]
Iteration 800 of 1000: loss=2.52 " + "l1=0.00745" + "l2=2.51 f=-0.262 shape=(1, 9000, 1)
logits [[-0.42004618 -0.20458499 -0.20945378 -0.21203399]]
Iteration 900 of 1000: loss=2.36 " + "l1=0.00132" + "l2=2.36 f=-0.252 shape=(1, 9000, 1)
logits [[-0.42300722 -0.2030898  -0.19108318 -0.19240367]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.89 " + "l1=7.89" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  3.941648    1.6177683   1.7136198 -10.396293 ]]
Iteration 100 of 1000: loss=6.19 " + "l1=5.67" + "l2=0.515 f=-0.768 shape=(1, 9000, 1)
logits [[ 1.8333697  1.8961335  1.6166904 -8.419914 ]]
Iteration 200 of 1000: loss=5.37 " + "l1=4.66" + "l2=0.704 f=-0.669 shape=(1, 9000, 1)
logits [[ 1.4258839  1.4571211  1.4574587 -7.0177903]]
Iteration 300 of 1000: loss=4.7 " + "l1=3.78" + "l2=0.915 f=-0.62 shape=(1, 9000, 1)
logits [[ 1.075395   1.1085733  1.1047765 -5.766895 ]]
Iteration 400 of 1000: loss=4.13 " + "l1=2.95" + "l2=1.17 f=-0.561 shape=(1, 9000, 1)
logits [[ 0.7663644   0.79252404  0.77605563 -4.5786467 ]]
Iteration 500 of 1000: loss=3.69 " + "l1=2.31" + "l2=1.38 f=-0.502 shape=(1, 9000, 1)
logits [[ 0.5314819   0.55347806  0.5550037  -3.649295  ]]
Iteration 600 of 1000: loss=3.34 " + "l1=1.85" + "l2=1.49 f=-0.48 shape=(1, 9000, 1)
logits [[ 0.28546193  0.3863085   0.38315403 -2.9730387 ]]
Iteration 700 of 1000: loss=3.06 " + "l1=1.52" + "l2=1.54 f=-0.456 shape=(1, 9000, 1)
logits [[ 0.0722022  0.2828519  0.2889267 -2.4662297]]
Iteration 800 of 1000: loss=2.81 " + "l1=1.2" + "l2=1.62 f=-0.437 shape=(1, 9000, 1)
logits [[-0.1354108   0.18727602  0.18838154 -1.987351  ]]
Iteration 900 of 1000: loss=2.55 " + "l1=0.842" + "l2=1.71 f=-0.402 shape=(1, 9000, 1)
logits [[-0.384655    0.09025493  0.10815406 -1.4223756 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=11.1 " + "l1=11.1" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  3.941648    1.6177683   1.7136198 -10.396293 ]]
Iteration 100 of 1000: loss=8.21 " + "l1=7.36" + "l2=0.853 f=-0.73 shape=(1, 9000, 1)
logits [[ 1.598413   1.664445   1.6527158 -7.8340516]]
Iteration 200 of 1000: loss=6.86 " + "l1=5.69" + "l2=1.17 f=-0.62 shape=(1, 9000, 1)
logits [[ 1.1902412  1.2290775  1.2107831 -6.109369 ]]
Iteration 300 of 1000: loss=5.7 " + "l1=4.15" + "l2=1.55 f=-0.558 shape=(1, 9000, 1)
logits [[ 0.75645417  0.7943556   0.7791778  -4.5629654 ]]
Iteration 400 of 1000: loss=4.86 " + "l1=3.08" + "l2=1.78 f=-0.49 shape=(1, 9000, 1)
logits [[ 0.46849284  0.50644684  0.5176406  -3.453203  ]]
Iteration 500 of 1000: loss=4.21 " + "l1=2.26" + "l2=1.95 f=-0.452 shape=(1, 9000, 1)
logits [[ 0.17671269  0.3087168   0.3116242  -2.6041303 ]]
Iteration 600 of 1000: loss=3.68 " + "l1=1.54" + "l2=2.13 f=-0.397 shape=(1, 9000, 1)
logits [[-0.07538743  0.15718536  0.16151136 -1.8316686 ]]
Iteration 700 of 1000: loss=3.06 " + "l1=0.806" + "l2=2.25 f=-0.355 shape=(1, 9000, 1)
logits [[-0.30366668 -0.02495709 -0.02800588 -1.0652343 ]]
Iteration 800 of 1000: loss=2.64 " + "l1=0.276" + "l2=2.37 f=-0.294 shape=(1, 9000, 1)
logits [[-0.39643717 -0.1407194  -0.1432636  -0.49635738]]
Iteration 900 of 1000: loss=2.38 " + "l1=0.00804" + "l2=2.38 f=-0.259 shape=(1, 9000, 1)
logits [[-0.44209474 -0.19006671 -0.20262401 -0.20043585]]
--- 328.14085030555725 seconds ---
Adv result:3
