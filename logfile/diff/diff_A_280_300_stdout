Updating 912353f..7b65ebe
Fast-forward
 EOT_tile-test.py | 7 +++++--
 EOT_tile_tf.py   | 4 ++--
 2 files changed, 7 insertions(+), 4 deletions(-)
Loading model
Loading ground truth file
Attack diff is running...
Loading record A05564
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0344 " + "l1=0.0344" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.113793   -0.32750082  1.7785382  -6.8188276 ]]
Iteration 100 of 1000: loss=0.0334 " + "l1=0.0328" + "l2=0.000586 f=-0.569 shape=(1, 9000, 1)
logits [[ 3.0213873  -0.26066193  1.7512913  -6.7865295 ]]
Iteration 200 of 1000: loss=0.0331 " + "l1=0.0324" + "l2=0.000677 f=-0.569 shape=(1, 9000, 1)
logits [[ 2.9999616  -0.24170665  1.7431492  -6.778197  ]]
Iteration 300 of 1000: loss=0.0328 " + "l1=0.032" + "l2=0.000845 f=-0.57 shape=(1, 9000, 1)
logits [[ 2.976628   -0.22171201  1.7350565  -6.769945  ]]
Iteration 400 of 1000: loss=0.0326 " + "l1=0.0316" + "l2=0.00102 f=-0.571 shape=(1, 9000, 1)
logits [[ 2.9540086  -0.20238706  1.7275125  -6.7623987 ]]
Iteration 500 of 1000: loss=0.0324 " + "l1=0.0312" + "l2=0.00118 f=-0.572 shape=(1, 9000, 1)
logits [[ 2.933587   -0.18482518  1.7209069  -6.75612   ]]
Iteration 600 of 1000: loss=0.0322 " + "l1=0.0308" + "l2=0.00138 f=-0.572 shape=(1, 9000, 1)
logits [[ 2.9145777  -0.16848134  1.7149972  -6.7503843 ]]
Iteration 700 of 1000: loss=0.032 " + "l1=0.0305" + "l2=0.00152 f=-0.573 shape=(1, 9000, 1)
logits [[ 2.8960447  -0.15229335  1.7093859  -6.7446637 ]]
Iteration 800 of 1000: loss=0.0318 " + "l1=0.0302" + "l2=0.00161 f=-0.573 shape=(1, 9000, 1)
logits [[ 2.8783257  -0.13670589  1.7042594  -6.7390895 ]]
Iteration 900 of 1000: loss=0.0316 " + "l1=0.0298" + "l2=0.00177 f=-0.574 shape=(1, 9000, 1)
logits [[ 2.8611724  -0.12136417  1.6993244  -6.7338815 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.344 " + "l1=0.344" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.113793   -0.32750082  1.7785382  -6.8188276 ]]
Iteration 100 of 1000: loss=0.249 " + "l1=0.199" + "l2=0.0501 f=-0.618 shape=(1, 9000, 1)
logits [[ 2.2719293   0.28629318  1.5268095  -6.55778   ]]
Iteration 200 of 1000: loss=0.193 " + "l1=0.117" + "l2=0.0758 f=-0.646 shape=(1, 9000, 1)
logits [[ 1.7817615  0.6139909  1.4044175 -6.384875 ]]
Iteration 300 of 1000: loss=0.143 " + "l1=0.0459" + "l2=0.0967 f=-0.678 shape=(1, 9000, 1)
logits [[ 1.3399693  0.8811218  1.3345613 -6.2689233]]
Iteration 400 of 1000: loss=0.115 " + "l1=0.0359" + "l2=0.0793 f=-0.673 shape=(1, 9000, 1)
logits [[ 1.3062435   0.94769526  1.2987622  -6.2457423 ]]
Iteration 500 of 1000: loss=0.0972 " + "l1=0.0269" + "l2=0.0704 f=-0.672 shape=(1, 9000, 1)
logits [[ 1.2703205  1.0043929  1.2730502 -6.2365274]]
Iteration 600 of 1000: loss=0.0848 " + "l1=0.0219" + "l2=0.0629 f=-0.672 shape=(1, 9000, 1)
logits [[ 1.2561175  1.0376437  1.2567507 -6.2371693]]
Iteration 700 of 1000: loss=0.0756 " + "l1=0.0174" + "l2=0.0581 f=-0.669 shape=(1, 9000, 1)
logits [[ 1.238021   1.0638695  1.2378598 -6.2177296]]
Iteration 800 of 1000: loss=0.0678 " + "l1=0.0135" + "l2=0.0543 f=-0.667 shape=(1, 9000, 1)
logits [[ 1.2180402  1.0861893  1.221113  -6.192075 ]]
Iteration 900 of 1000: loss=0.0617 " + "l1=0.0108" + "l2=0.0509 f=-0.663 shape=(1, 9000, 1)
logits [[ 1.206422   1.0986862  1.2071681 -6.1640353]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.44 " + "l1=3.44" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.113793   -0.32750082  1.7785382  -6.8188276 ]]
Iteration 100 of 1000: loss=0.325 " + "l1=0" + "l2=0.325 f=-0.696 shape=(1, 9000, 1)
logits [[ 1.1302445  1.1469319  1.137382  -6.200124 ]]
Iteration 200 of 1000: loss=0.222 " + "l1=0" + "l2=0.222 f=-0.686 shape=(1, 9000, 1)
logits [[ 1.1311493  1.1629736  1.1509095 -6.190516 ]]
Iteration 300 of 1000: loss=0.169 " + "l1=0" + "l2=0.169 f=-0.674 shape=(1, 9000, 1)
logits [[ 1.1506104  1.165789   1.156253  -6.1703415]]
Iteration 400 of 1000: loss=0.139 " + "l1=0" + "l2=0.139 f=-0.671 shape=(1, 9000, 1)
logits [[ 1.1350498  1.1751355  1.1614977 -6.1545086]]
Iteration 500 of 1000: loss=0.12 " + "l1=0" + "l2=0.12 f=-0.667 shape=(1, 9000, 1)
logits [[ 1.1350602  1.181042   1.1608993 -6.1447935]]
Iteration 600 of 1000: loss=0.106 " + "l1=0" + "l2=0.106 f=-0.669 shape=(1, 9000, 1)
logits [[ 1.1064197  1.1823584  1.1721442 -6.1375604]]
Iteration 700 of 1000: loss=0.098 " + "l1=0.00553" + "l2=0.0924 f=-0.665 shape=(1, 9000, 1)
logits [[ 1.1197859  1.1699921  1.1755176 -6.125731 ]]
Iteration 800 of 1000: loss=0.0952 " + "l1=0" + "l2=0.0952 f=-0.669 shape=(1, 9000, 1)
logits [[ 1.0464414  1.2110325  1.1560214 -6.0913916]]
Iteration 900 of 1000: loss=0.0778 " + "l1=0" + "l2=0.0778 f=-0.659 shape=(1, 9000, 1)
logits [[ 1.1337708  1.1730069  1.1571931 -6.099921 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.89 " + "l1=1.89" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.113793   -0.32750082  1.7785382  -6.8188276 ]]
Iteration 100 of 1000: loss=0.292 " + "l1=0.00356" + "l2=0.288 f=-0.692 shape=(1, 9000, 1)
logits [[ 1.1384242  1.143842   1.1503069 -6.2022743]]
Iteration 200 of 1000: loss=0.19 " + "l1=0" + "l2=0.19 f=-0.679 shape=(1, 9000, 1)
logits [[ 1.1493908  1.15555    1.1514875 -6.171595 ]]
Iteration 300 of 1000: loss=0.145 " + "l1=0" + "l2=0.145 f=-0.672 shape=(1, 9000, 1)
logits [[ 1.1552877  1.1643487  1.1561624 -6.162    ]]
Iteration 400 of 1000: loss=0.12 " + "l1=0" + "l2=0.12 f=-0.671 shape=(1, 9000, 1)
logits [[ 1.1417493  1.1686275  1.1616385 -6.156314 ]]
Iteration 500 of 1000: loss=0.103 " + "l1=0" + "l2=0.103 f=-0.668 shape=(1, 9000, 1)
logits [[ 1.1431477  1.1738845  1.1617599 -6.1519647]]
Iteration 600 of 1000: loss=0.0974 " + "l1=0.00949" + "l2=0.088 f=-0.662 shape=(1, 9000, 1)
logits [[ 1.1793183  1.1620696  1.1603947 -6.1516857]]
Iteration 700 of 1000: loss=0.0839 " + "l1=0" + "l2=0.0839 f=-0.668 shape=(1, 9000, 1)
logits [[ 1.119309   1.1816463  1.1568156 -6.128338 ]]
Iteration 800 of 1000: loss=0.0728 " + "l1=0" + "l2=0.0728 f=-0.666 shape=(1, 9000, 1)
logits [[ 1.1214397  1.1662706  1.165572  -6.117429 ]]
Iteration 900 of 1000: loss=0.0678 " + "l1=0" + "l2=0.0678 f=-0.661 shape=(1, 9000, 1)
logits [[ 1.1502587  1.1661675  1.147954  -6.106571 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.12 " + "l1=1.12" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.113793   -0.32750082  1.7785382  -6.8188276 ]]
Iteration 100 of 1000: loss=0.296 " + "l1=0.0355" + "l2=0.26 f=-0.691 shape=(1, 9000, 1)
logits [[ 1.1823676  1.0857478  1.1948463 -6.2269135]]
Iteration 200 of 1000: loss=0.174 " + "l1=0" + "l2=0.174 f=-0.68 shape=(1, 9000, 1)
logits [[ 1.1510273  1.1563673  1.1547089 -6.181649 ]]
Iteration 300 of 1000: loss=0.129 " + "l1=0" + "l2=0.129 f=-0.677 shape=(1, 9000, 1)
logits [[ 1.1529666  1.1604062  1.1601292 -6.179822 ]]
Iteration 400 of 1000: loss=0.107 " + "l1=0.000591" + "l2=0.106 f=-0.673 shape=(1, 9000, 1)
logits [[ 1.1626881  1.1608696  1.1604916 -6.177904 ]]
Iteration 500 of 1000: loss=0.0916 " + "l1=0" + "l2=0.0916 f=-0.673 shape=(1, 9000, 1)
logits [[ 1.1499028  1.1664755  1.1618743 -6.168796 ]]
Iteration 600 of 1000: loss=0.08 " + "l1=0" + "l2=0.08 f=-0.671 shape=(1, 9000, 1)
logits [[ 1.1517577  1.1645098  1.1634457 -6.1623025]]
Iteration 700 of 1000: loss=0.0722 " + "l1=0" + "l2=0.0722 f=-0.669 shape=(1, 9000, 1)
logits [[ 1.1436056  1.1666065  1.1626928 -6.1473055]]
Iteration 800 of 1000: loss=0.0652 " + "l1=9.75e-05" + "l2=0.0651 f=-0.666 shape=(1, 9000, 1)
logits [[ 1.1425879  1.1619415  1.1622415 -6.1291475]]
Iteration 900 of 1000: loss=0.0603 " + "l1=0" + "l2=0.0603 f=-0.664 shape=(1, 9000, 1)
logits [[ 1.1326443  1.1596283  1.1572851 -6.104798 ]]
--- 300.62950253486633 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0134 " + "l1=0.0134" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.113793   -0.32750082  1.7785382  -6.8188276 ]]
Iteration 100 of 1000: loss=0.013 " + "l1=0.0128" + "l2=0.000227 f=-0.568 shape=(1, 9000, 1)
logits [[ 3.058467   -0.31099367  1.7780147  -6.7994018 ]]
Iteration 200 of 1000: loss=0.0129 " + "l1=0.0127" + "l2=0.000211 f=-0.569 shape=(1, 9000, 1)
logits [[ 3.0502875 -0.3096016  1.7785053 -6.796247 ]]
Iteration 300 of 1000: loss=0.0129 " + "l1=0.0126" + "l2=0.000257 f=-0.57 shape=(1, 9000, 1)
logits [[ 3.0386903  -0.30742323  1.779215   -6.7920036 ]]
Iteration 400 of 1000: loss=0.0128 " + "l1=0.0125" + "l2=0.000319 f=-0.572 shape=(1, 9000, 1)
logits [[ 3.0266426  -0.30531824  1.7801266  -6.7878504 ]]
Iteration 500 of 1000: loss=0.0128 " + "l1=0.0123" + "l2=0.000447 f=-0.573 shape=(1, 9000, 1)
logits [[ 3.0148633  -0.30350822  1.7811956  -6.7840543 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.134 " + "l1=0.134" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.113793   -0.32750082  1.7785382  -6.8188276 ]]
Iteration 100 of 1000: loss=0.106 " + "l1=0.0924" + "l2=0.0135 f=-0.606 shape=(1, 9000, 1)
logits [[ 2.7006216  -0.20272936  1.7770147  -6.6995606 ]]
Iteration 200 of 1000: loss=0.0926 " + "l1=0.0729" + "l2=0.0197 f=-0.619 shape=(1, 9000, 1)
logits [[ 2.5064282  -0.15630098  1.7777243  -6.605056  ]]
Iteration 300 of 1000: loss=0.0812 " + "l1=0.056" + "l2=0.0252 f=-0.627 shape=(1, 9000, 1)
logits [[ 2.331509  -0.1112546  1.7713286 -6.499914 ]]
Iteration 400 of 1000: loss=0.0706 " + "l1=0.0395" + "l2=0.0311 f=-0.634 shape=(1, 9000, 1)
logits [[ 2.1597428  -0.06575135  1.7648469  -6.3948817 ]]
Iteration 500 of 1000: loss=0.0592 " + "l1=0.0229" + "l2=0.0363 f=-0.641 shape=(1, 9000, 1)
logits [[ 1.9865611  -0.01252127  1.7575966  -6.2961197 ]]
Iteration 600 of 1000: loss=0.0477 " + "l1=0.00659" + "l2=0.0411 f=-0.647 shape=(1, 9000, 1)
logits [[ 1.8116765   0.05333424  1.7457607  -6.200518  ]]
Iteration 700 of 1000: loss=0.0379 " + "l1=0.000302" + "l2=0.0376 f=-0.645 shape=(1, 9000, 1)
logits [[ 1.7482165  0.0756456  1.7451923 -6.1503654]]
Iteration 800 of 1000: loss=0.0321 " + "l1=0.000257" + "l2=0.0318 f=-0.64 shape=(1, 9000, 1)
logits [[ 1.7507522   0.07631257  1.7481844  -6.1358924 ]]
Iteration 900 of 1000: loss=0.028 " + "l1=0.000191" + "l2=0.0279 f=-0.637 shape=(1, 9000, 1)
logits [[ 1.7532796   0.07307874  1.7513739  -6.12417   ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0734 " + "l1=0.0734" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.113793   -0.32750082  1.7785382  -6.8188276 ]]
Iteration 100 of 1000: loss=0.065 " + "l1=0.0609" + "l2=0.00413 f=-0.587 shape=(1, 9000, 1)
logits [[ 2.8831272  -0.25521874  1.776443   -6.7506776 ]]
Iteration 200 of 1000: loss=0.0613 " + "l1=0.0555" + "l2=0.00577 f=-0.594 shape=(1, 9000, 1)
logits [[ 2.78907    -0.23353563  1.779447   -6.712693  ]]
Iteration 300 of 1000: loss=0.058 " + "l1=0.0505" + "l2=0.00744 f=-0.601 shape=(1, 9000, 1)
logits [[ 2.6993926  -0.21287669  1.7804246  -6.6692615 ]]
Iteration 400 of 1000: loss=0.0548 " + "l1=0.0459" + "l2=0.00894 f=-0.606 shape=(1, 9000, 1)
logits [[ 2.6169696  -0.19691683  1.7829603  -6.6260777 ]]
Iteration 500 of 1000: loss=0.0519 " + "l1=0.0417" + "l2=0.0102 f=-0.609 shape=(1, 9000, 1)
logits [[ 2.5427613  -0.18332088  1.7845997  -6.5817103 ]]
Iteration 600 of 1000: loss=0.0492 " + "l1=0.0381" + "l2=0.0111 f=-0.612 shape=(1, 9000, 1)
logits [[ 2.4781482  -0.17193012  1.7856891  -6.541623  ]]
Iteration 700 of 1000: loss=0.0465 " + "l1=0.0344" + "l2=0.0121 f=-0.616 shape=(1, 9000, 1)
logits [[ 2.4124186  -0.16056977  1.7872775  -6.502806  ]]
Iteration 800 of 1000: loss=0.0438 " + "l1=0.0306" + "l2=0.0132 f=-0.619 shape=(1, 9000, 1)
logits [[ 2.3440974 -0.145382   1.7879013 -6.4624715]]
Iteration 900 of 1000: loss=0.0408 " + "l1=0.0267" + "l2=0.0141 f=-0.622 shape=(1, 9000, 1)
logits [[ 2.2727277  -0.12816934  1.788158   -6.418766  ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.103 " + "l1=0.103" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.113793   -0.32750082  1.7785382  -6.8188276 ]]
Iteration 100 of 1000: loss=0.0869 " + "l1=0.0788" + "l2=0.00806 f=-0.596 shape=(1, 9000, 1)
logits [[ 2.7943566 -0.2291027  1.776941  -6.7267604]]
Iteration 200 of 1000: loss=0.0791 " + "l1=0.0672" + "l2=0.0119 f=-0.608 shape=(1, 9000, 1)
logits [[ 2.6477442  -0.19426247  1.7800939  -6.665023  ]]
Iteration 300 of 1000: loss=0.0721 " + "l1=0.0571" + "l2=0.015 f=-0.615 shape=(1, 9000, 1)
logits [[ 2.518279   -0.16814046  1.7809908  -6.5894704 ]]
Iteration 400 of 1000: loss=0.0662 " + "l1=0.0485" + "l2=0.0177 f=-0.62 shape=(1, 9000, 1)
logits [[ 2.404785   -0.14280038  1.7791944  -6.5208826 ]]
Iteration 500 of 1000: loss=0.0604 " + "l1=0.0399" + "l2=0.0205 f=-0.626 shape=(1, 9000, 1)
logits [[ 2.2911034  -0.11912998  1.7763977  -6.4507356 ]]
Iteration 600 of 1000: loss=0.0542 " + "l1=0.0313" + "l2=0.0229 f=-0.63 shape=(1, 9000, 1)
logits [[ 2.1766486  -0.08962175  1.7730211  -6.380571  ]]
Iteration 700 of 1000: loss=0.0481 " + "l1=0.0233" + "l2=0.0248 f=-0.633 shape=(1, 9000, 1)
logits [[ 2.0705807  -0.06129872  1.7699084  -6.3119326 ]]
Iteration 800 of 1000: loss=0.0419 " + "l1=0.0144" + "l2=0.0275 f=-0.637 shape=(1, 9000, 1)
logits [[ 1.953478   -0.02170666  1.7679492  -6.2464366 ]]
Iteration 900 of 1000: loss=0.0357 " + "l1=0.00601" + "l2=0.0297 f=-0.64 shape=(1, 9000, 1)
logits [[ 1.8377364   0.02685227  1.760223   -6.183373  ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0885 " + "l1=0.0885" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.113793   -0.32750082  1.7785382  -6.8188276 ]]
Iteration 100 of 1000: loss=0.0763 " + "l1=0.0705" + "l2=0.00587 f=-0.591 shape=(1, 9000, 1)
logits [[ 2.8406467 -0.2433606  1.7772481 -6.739285 ]]
Iteration 200 of 1000: loss=0.0708 " + "l1=0.0623" + "l2=0.00853 f=-0.601 shape=(1, 9000, 1)
logits [[ 2.7200303 -0.2140804  1.7797363 -6.689294 ]]
Iteration 300 of 1000: loss=0.0659 " + "l1=0.055" + "l2=0.0109 f=-0.608 shape=(1, 9000, 1)
logits [[ 2.6111226  -0.18997775  1.78087    -6.6334543 ]]
Iteration 400 of 1000: loss=0.0612 " + "l1=0.0484" + "l2=0.0128 f=-0.613 shape=(1, 9000, 1)
logits [[ 2.5121834  -0.17043287  1.7822672  -6.5746756 ]]
Iteration 500 of 1000: loss=0.0573 " + "l1=0.0427" + "l2=0.0146 f=-0.617 shape=(1, 9000, 1)
logits [[ 2.4269707  -0.15468945  1.7825347  -6.5223417 ]]
Iteration 600 of 1000: loss=0.0531 " + "l1=0.037" + "l2=0.0161 f=-0.621 shape=(1, 9000, 1)
logits [[ 2.3420966  -0.13944072  1.7834178  -6.4695706 ]]
Iteration 700 of 1000: loss=0.0488 " + "l1=0.031" + "l2=0.0178 f=-0.625 shape=(1, 9000, 1)
logits [[ 2.2485607  -0.11477243  1.781327   -6.413794  ]]
Iteration 800 of 1000: loss=0.0444 " + "l1=0.0253" + "l2=0.0191 f=-0.627 shape=(1, 9000, 1)
logits [[ 2.162408   -0.09400529  1.7803793  -6.357517  ]]
Iteration 900 of 1000: loss=0.0402 " + "l1=0.0198" + "l2=0.0204 f=-0.629 shape=(1, 9000, 1)
logits [[ 2.078336  -0.0685561  1.7793642 -6.3069034]]
--- 276.50013732910156 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0993 " + "l1=0.0993" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.113793   -0.32750082  1.7785382  -6.8188276 ]]
Iteration 100 of 1000: loss=0.0983 " + "l1=0.0977" + "l2=0.00057 f=-0.564 shape=(1, 9000, 1)
logits [[ 3.0258656  -0.29184857  1.7544992  -6.7449565 ]]
Iteration 200 of 1000: loss=0.098 " + "l1=0.0973" + "l2=0.000665 f=-0.564 shape=(1, 9000, 1)
logits [[ 3.0039115  -0.28333187  1.7491769  -6.7266645 ]]
Iteration 300 of 1000: loss=0.0977 " + "l1=0.0969" + "l2=0.000839 f=-0.564 shape=(1, 9000, 1)
logits [[ 2.980156  -0.2750991  1.7439291 -6.7062955]]
Iteration 400 of 1000: loss=0.0975 " + "l1=0.0964" + "l2=0.00103 f=-0.565 shape=(1, 9000, 1)
logits [[ 2.9577336  -0.26797557  1.7392263  -6.68705   ]]
Iteration 500 of 1000: loss=0.0973 " + "l1=0.0961" + "l2=0.00122 f=-0.565 shape=(1, 9000, 1)
logits [[ 2.9374533  -0.26221952  1.7353244  -6.669534  ]]
Iteration 600 of 1000: loss=0.0971 " + "l1=0.0957" + "l2=0.00138 f=-0.565 shape=(1, 9000, 1)
logits [[ 2.9185724  -0.25752616  1.7319756  -6.653474  ]]
Iteration 700 of 1000: loss=0.097 " + "l1=0.0954" + "l2=0.00157 f=-0.565 shape=(1, 9000, 1)
logits [[ 2.900289  -0.2525033  1.7285208 -6.6379743]]
Iteration 800 of 1000: loss=0.0968 " + "l1=0.0951" + "l2=0.00171 f=-0.566 shape=(1, 9000, 1)
logits [[ 2.882667   -0.24797134  1.7255142  -6.6231956 ]]
Iteration 900 of 1000: loss=0.0967 " + "l1=0.0947" + "l2=0.00194 f=-0.566 shape=(1, 9000, 1)
logits [[ 2.8652055  -0.24323343  1.7224597  -6.608715  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.993 " + "l1=0.993" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.113793   -0.32750082  1.7785382  -6.8188276 ]]
Iteration 100 of 1000: loss=0.897 " + "l1=0.849" + "l2=0.0482 f=-0.576 shape=(1, 9000, 1)
logits [[ 2.309798    0.00731582  1.5596815  -6.1797314 ]]
Iteration 200 of 1000: loss=0.838 " + "l1=0.76" + "l2=0.0776 f=-0.578 shape=(1, 9000, 1)
logits [[ 1.8174257   0.20118238  1.4494301  -5.7818766 ]]
Iteration 300 of 1000: loss=0.782 " + "l1=0.676" + "l2=0.106 f=-0.582 shape=(1, 9000, 1)
logits [[ 1.3575312   0.35845137  1.3549321  -5.398563  ]]
Iteration 400 of 1000: loss=0.746 " + "l1=0.647" + "l2=0.0989 f=-0.559 shape=(1, 9000, 1)
logits [[ 1.28778     0.36846408  1.2879225  -5.181991  ]]
Iteration 500 of 1000: loss=0.718 " + "l1=0.623" + "l2=0.0952 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.2220912  0.3757723  1.2275665 -5.001751 ]]
Iteration 600 of 1000: loss=0.696 " + "l1=0.604" + "l2=0.0917 f=-0.534 shape=(1, 9000, 1)
logits [[ 1.1653107   0.39082664  1.1735284  -4.866306  ]]
Iteration 700 of 1000: loss=0.674 " + "l1=0.584" + "l2=0.0904 f=-0.522 shape=(1, 9000, 1)
logits [[ 1.1104636   0.41645303  1.1106349  -4.7265177 ]]
Iteration 800 of 1000: loss=0.652 " + "l1=0.561" + "l2=0.0916 f=-0.51 shape=(1, 9000, 1)
logits [[ 1.0329324   0.45887718  1.0369906  -4.5699673 ]]
Iteration 900 of 1000: loss=0.63 " + "l1=0.537" + "l2=0.0927 f=-0.501 shape=(1, 9000, 1)
logits [[ 0.9480115   0.50666845  0.9564237  -4.4145007 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.93 " + "l1=9.93" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.113793   -0.32750082  1.7785382  -6.8188276 ]]
Iteration 100 of 1000: loss=4.93 " + "l1=3.37" + "l2=1.55 f=-0.386 shape=(1, 9000, 1)
logits [[ 0.22675832  0.519115    0.5416923  -2.833008  ]]
Iteration 200 of 1000: loss=3.77 " + "l1=1.84" + "l2=1.93 f=-0.332 shape=(1, 9000, 1)
logits [[-0.28694186  0.26009038  0.26920035 -1.5721823 ]]
Iteration 300 of 1000: loss=3.05 " + "l1=1.05" + "l2=2.01 f=-0.314 shape=(1, 9000, 1)
logits [[-0.5294227   0.10764021  0.10476396 -0.93916017]]
Iteration 400 of 1000: loss=2.43 " + "l1=0.265" + "l2=2.17 f=-0.307 shape=(1, 9000, 1)
logits [[-0.7555838  -0.06939939 -0.06867284 -0.33351618]]
Iteration 500 of 1000: loss=1.99 " + "l1=0.00333" + "l2=1.98 f=-0.336 shape=(1, 9000, 1)
logits [[-0.9348421  -0.13860412 -0.13444161 -0.137768  ]]
Iteration 600 of 1000: loss=1.72 " + "l1=0.000538" + "l2=1.72 f=-0.35 shape=(1, 9000, 1)
logits [[-0.9382523  -0.15839475 -0.15217212 -0.15271038]]
Iteration 700 of 1000: loss=1.52 " + "l1=0" + "l2=1.52 f=-0.355 shape=(1, 9000, 1)
logits [[-0.9720036  -0.14697705 -0.15346642 -0.14679697]]
Iteration 800 of 1000: loss=1.38 " + "l1=0.0117" + "l2=1.37 f=-0.348 shape=(1, 9000, 1)
logits [[-0.97005093 -0.1450092  -0.13207194 -0.14377418]]
Iteration 900 of 1000: loss=1.26 " + "l1=0.00407" + "l2=1.26 f=-0.342 shape=(1, 9000, 1)
logits [[-1.0107212  -0.11454352 -0.12439392 -0.11861808]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.46 " + "l1=5.46" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.113793   -0.32750082  1.7785382  -6.8188276 ]]
Iteration 100 of 1000: loss=3.35 " + "l1=2.64" + "l2=0.707 f=-0.455 shape=(1, 9000, 1)
logits [[ 0.762388   0.6033854  0.8064929 -3.9924266]]
Iteration 200 of 1000: loss=2.84 " + "l1=2" + "l2=0.838 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.31968156  0.5421092   0.5797013  -3.053598  ]]
Iteration 300 of 1000: loss=2.39 " + "l1=1.48" + "l2=0.916 f=-0.393 shape=(1, 9000, 1)
logits [[-0.07264631  0.39097288  0.39853135 -2.2882912 ]]
Iteration 400 of 1000: loss=2.06 " + "l1=1.15" + "l2=0.914 f=-0.376 shape=(1, 9000, 1)
logits [[-0.27605066  0.28618658  0.287433   -1.8017824 ]]
Iteration 500 of 1000: loss=1.82 " + "l1=0.947" + "l2=0.876 f=-0.366 shape=(1, 9000, 1)
logits [[-0.39944556  0.21664105  0.22045383 -1.5021114 ]]
Iteration 600 of 1000: loss=1.62 " + "l1=0.759" + "l2=0.864 f=-0.362 shape=(1, 9000, 1)
logits [[-0.5352741   0.15908983  0.14890793 -1.2204078 ]]
Iteration 700 of 1000: loss=1.43 " + "l1=0.57" + "l2=0.864 f=-0.359 shape=(1, 9000, 1)
logits [[-0.70138025  0.10041516  0.1001424  -0.9362183 ]]
Iteration 800 of 1000: loss=1.27 " + "l1=0.419" + "l2=0.847 f=-0.352 shape=(1, 9000, 1)
logits [[-0.81231904  0.05254775  0.05571055 -0.70578915]]
Iteration 900 of 1000: loss=1.1 " + "l1=0.225" + "l2=0.879 f=-0.337 shape=(1, 9000, 1)
logits [[-0.8817143  -0.02291942 -0.01660826 -0.42613125]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=7.7 " + "l1=7.7" + "l2=0 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.113793   -0.32750082  1.7785382  -6.8188276 ]]
Iteration 100 of 1000: loss=4.19 " + "l1=3.04" + "l2=1.16 f=-0.417 shape=(1, 9000, 1)
logits [[ 0.39561048  0.61304045  0.6195426  -3.2972596 ]]
Iteration 200 of 1000: loss=3.38 " + "l1=1.97" + "l2=1.41 f=-0.371 shape=(1, 9000, 1)
logits [[-0.0838199   0.37425017  0.38310507 -2.1567354 ]]
Iteration 300 of 1000: loss=2.82 " + "l1=1.33" + "l2=1.49 f=-0.342 shape=(1, 9000, 1)
logits [[-0.33147845  0.22576807  0.22962698 -1.4916856 ]]
Iteration 400 of 1000: loss=2.45 " + "l1=0.949" + "l2=1.5 f=-0.341 shape=(1, 9000, 1)
logits [[-0.5119927   0.12191103  0.12451299 -1.1003368 ]]
Iteration 500 of 1000: loss=2.07 " + "l1=0.576" + "l2=1.5 f=-0.33 shape=(1, 9000, 1)
logits [[-0.606506    0.01401235  0.00098194 -0.7290423 ]]
Iteration 600 of 1000: loss=1.71 " + "l1=0.18" + "l2=1.53 f=-0.341 shape=(1, 9000, 1)
logits [[-0.82631165 -0.10787832 -0.09801438 -0.3300501 ]]
Iteration 700 of 1000: loss=1.4 " + "l1=0.0217" + "l2=1.38 f=-0.352 shape=(1, 9000, 1)
logits [[-0.9835299  -0.13448294 -0.13008533 -0.15808132]]
Iteration 800 of 1000: loss=1.22 " + "l1=0.0115" + "l2=1.21 f=-0.347 shape=(1, 9000, 1)
logits [[-1.0231776  -0.11809351 -0.1159465  -0.13079005]]
Iteration 900 of 1000: loss=1.09 " + "l1=0.00206" + "l2=1.09 f=-0.344 shape=(1, 9000, 1)
logits [[-1.0620502  -0.10257665 -0.10420075 -0.10522928]]
--- 303.6901504993439 seconds ---
Adv result:3
Loading record A05572
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0858 " + "l1=0.0858" + "l2=0 f=-0.486 shape=(1, 9000, 1)
logits [[ 6.7241583 -1.8531998  2.774069  -9.590418 ]]
Iteration 100 of 1000: loss=0.0854 " + "l1=0.085" + "l2=0.000326 f=-0.485 shape=(1, 9000, 1)
logits [[ 6.6820292 -1.8218284  2.7520828 -9.550724 ]]
Iteration 200 of 1000: loss=0.0853 " + "l1=0.0849" + "l2=0.00032 f=-0.485 shape=(1, 9000, 1)
logits [[ 6.6765375 -1.8172134  2.748305  -9.545679 ]]
Iteration 300 of 1000: loss=0.0852 " + "l1=0.0848" + "l2=0.000391 f=-0.484 shape=(1, 9000, 1)
logits [[ 6.668688  -1.8114976  2.7437584 -9.538305 ]]
Iteration 400 of 1000: loss=0.0852 " + "l1=0.0847" + "l2=0.000495 f=-0.484 shape=(1, 9000, 1)
logits [[ 6.661113  -1.8061664  2.739619  -9.531199 ]]
Iteration 500 of 1000: loss=0.0852 " + "l1=0.0846" + "l2=0.000598 f=-0.484 shape=(1, 9000, 1)
logits [[ 6.6542935 -1.8015367  2.7361252 -9.524911 ]]
Iteration 600 of 1000: loss=0.0851 " + "l1=0.0845" + "l2=0.000671 f=-0.484 shape=(1, 9000, 1)
logits [[ 6.6482334 -1.7975204  2.7331705 -9.519486 ]]
Iteration 700 of 1000: loss=0.0851 " + "l1=0.0844" + "l2=0.000749 f=-0.484 shape=(1, 9000, 1)
logits [[ 6.642735  -1.7939626  2.7306278 -9.514678 ]]
Iteration 800 of 1000: loss=0.0852 " + "l1=0.0843" + "l2=0.0009 f=-0.484 shape=(1, 9000, 1)
logits [[ 6.637731  -1.7906951  2.7283795 -9.51043  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.858 " + "l1=0.858" + "l2=0 f=-0.486 shape=(1, 9000, 1)
logits [[ 6.7241583 -1.8531998  2.774069  -9.590418 ]]
Iteration 100 of 1000: loss=0.816 " + "l1=0.79" + "l2=0.0262 f=-0.473 shape=(1, 9000, 1)
logits [[ 6.3454576 -1.5519063  2.5752513 -9.258812 ]]
Iteration 200 of 1000: loss=0.798 " + "l1=0.759" + "l2=0.0394 f=-0.47 shape=(1, 9000, 1)
logits [[ 6.1647615 -1.4235002  2.4807026 -9.100256 ]]
Iteration 300 of 1000: loss=0.783 " + "l1=0.733" + "l2=0.0498 f=-0.466 shape=(1, 9000, 1)
logits [[ 6.00551   -1.3233112  2.4074762 -8.954565 ]]
Iteration 400 of 1000: loss=0.768 " + "l1=0.709" + "l2=0.059 f=-0.465 shape=(1, 9000, 1)
logits [[ 5.858475  -1.2332103  2.3411424 -8.828289 ]]
Iteration 500 of 1000: loss=0.75 " + "l1=0.678" + "l2=0.0715 f=-0.467 shape=(1, 9000, 1)
logits [[ 5.668994  -1.1129214  2.251058  -8.675284 ]]
Iteration 600 of 1000: loss=0.729 " + "l1=0.649" + "l2=0.0794 f=-0.47 shape=(1, 9000, 1)
logits [[ 5.483184  -1.0099779  2.174359  -8.52817  ]]
Iteration 700 of 1000: loss=0.702 " + "l1=0.612" + "l2=0.09 f=-0.481 shape=(1, 9000, 1)
logits [[ 5.24169    -0.88238245  2.0748608  -8.356676  ]]
Iteration 800 of 1000: loss=0.673 " + "l1=0.577" + "l2=0.0959 f=-0.488 shape=(1, 9000, 1)
logits [[ 5.0094223 -0.7642459  1.9931687 -8.189945 ]]
Iteration 900 of 1000: loss=0.641 " + "l1=0.536" + "l2=0.105 f=-0.493 shape=(1, 9000, 1)
logits [[ 4.730652   -0.62735534  1.9157256  -7.9917903 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.58 " + "l1=8.58" + "l2=0 f=-0.486 shape=(1, 9000, 1)
logits [[ 6.7241583 -1.8531998  2.774069  -9.590418 ]]
Iteration 100 of 1000: loss=3.48 " + "l1=0.668" + "l2=2.82 f=-0.688 shape=(1, 9000, 1)
logits [[ 1.511444   0.8430765  1.4694598 -6.5754347]]
Iteration 200 of 1000: loss=2.39 " + "l1=0.174" + "l2=2.22 f=-0.715 shape=(1, 9000, 1)
logits [[ 1.2269909  1.0675895  1.2412663 -6.396827 ]]
Iteration 300 of 1000: loss=1.89 " + "l1=0.0116" + "l2=1.88 f=-0.715 shape=(1, 9000, 1)
logits [[ 1.1143435  1.1136652  1.1252156 -6.212832 ]]
Iteration 400 of 1000: loss=1.6 " + "l1=0.000628" + "l2=1.59 f=-0.708 shape=(1, 9000, 1)
logits [[ 1.0879306  1.0998483  1.1004758 -6.1199603]]
Iteration 500 of 1000: loss=1.43 " + "l1=0.00447" + "l2=1.42 f=-0.704 shape=(1, 9000, 1)
logits [[ 1.0716766  1.078053   1.082525  -6.047559 ]]
Iteration 600 of 1000: loss=1.31 " + "l1=0.00433" + "l2=1.31 f=-0.699 shape=(1, 9000, 1)
logits [[ 1.0486454  1.0609622  1.0652913 -5.972476 ]]
Iteration 700 of 1000: loss=1.24 " + "l1=0" + "l2=1.24 f=-0.697 shape=(1, 9000, 1)
logits [[ 1.0260456  1.0503849  1.0405115 -5.9039154]]
Iteration 800 of 1000: loss=1.18 " + "l1=0.0159" + "l2=1.17 f=-0.691 shape=(1, 9000, 1)
logits [[ 1.0382141  1.0223587  1.0218052 -5.8482676]]
Iteration 900 of 1000: loss=1.12 " + "l1=0" + "l2=1.12 f=-0.692 shape=(1, 9000, 1)
logits [[ 0.99142957  1.0210925   1.0109051  -5.7900734 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.72 " + "l1=4.72" + "l2=0 f=-0.486 shape=(1, 9000, 1)
logits [[ 6.7241583 -1.8531998  2.774069  -9.590418 ]]
Iteration 100 of 1000: loss=3.2 " + "l1=2.27" + "l2=0.931 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.954605   -0.17640086  1.7688402  -7.5212364 ]]
Iteration 200 of 1000: loss=2.17 " + "l1=0.522" + "l2=1.64 f=-0.656 shape=(1, 9000, 1)
logits [[ 1.659501   0.7111174  1.4865575 -6.4818797]]
Iteration 300 of 1000: loss=1.49 " + "l1=0.207" + "l2=1.28 f=-0.673 shape=(1, 9000, 1)
logits [[ 1.3050476  0.9284371  1.2915207 -6.216549 ]]
Iteration 400 of 1000: loss=1.23 " + "l1=0.143" + "l2=1.09 f=-0.659 shape=(1, 9000, 1)
logits [[ 1.2288707  0.9681198  1.2237431 -6.056955 ]]
Iteration 500 of 1000: loss=1.06 " + "l1=0.0865" + "l2=0.97 f=-0.649 shape=(1, 9000, 1)
logits [[ 1.1337663  1.0053732  1.1625755 -5.8992834]]
Iteration 600 of 1000: loss=0.919 " + "l1=0.0481" + "l2=0.871 f=-0.637 shape=(1, 9000, 1)
logits [[ 1.0830513  1.0168519  1.1043673 -5.75103  ]]
Iteration 700 of 1000: loss=0.835 " + "l1=0.0286" + "l2=0.806 f=-0.621 shape=(1, 9000, 1)
logits [[ 1.0600663  1.011013   1.0630431 -5.618088 ]]
Iteration 800 of 1000: loss=0.764 " + "l1=0.00726" + "l2=0.757 f=-0.615 shape=(1, 9000, 1)
logits [[ 1.0182582  1.0113268  1.024521  -5.5145106]]
Iteration 900 of 1000: loss=0.71 " + "l1=0.0053" + "l2=0.705 f=-0.609 shape=(1, 9000, 1)
logits [[ 0.992267   0.9969521  1.0065855 -5.433276 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.79 " + "l1=2.79" + "l2=0 f=-0.486 shape=(1, 9000, 1)
logits [[ 6.7241583 -1.8531998  2.774069  -9.590418 ]]
Iteration 100 of 1000: loss=2.28 " + "l1=1.97" + "l2=0.311 f=-0.462 shape=(1, 9000, 1)
logits [[ 5.2370405  -0.81243664  2.103741   -8.374363  ]]
Iteration 200 of 1000: loss=2 " + "l1=1.49" + "l2=0.508 f=-0.477 shape=(1, 9000, 1)
logits [[ 4.2617874  -0.32092014  1.8199769  -7.6677694 ]]
Iteration 300 of 1000: loss=1.67 " + "l1=1.02" + "l2=0.645 f=-0.51 shape=(1, 9000, 1)
logits [[ 3.255714    0.11621862  1.5713694  -6.9830723 ]]
Iteration 400 of 1000: loss=1.26 " + "l1=0.412" + "l2=0.849 f=-0.585 shape=(1, 9000, 1)
logits [[ 1.8920766  0.6244351  1.4405912 -6.2967916]]
Iteration 500 of 1000: loss=0.953 " + "l1=0.198" + "l2=0.755 f=-0.602 shape=(1, 9000, 1)
logits [[ 1.403691   0.7940166  1.391752  -5.998292 ]]
Iteration 600 of 1000: loss=0.815 " + "l1=0.178" + "l2=0.637 f=-0.6 shape=(1, 9000, 1)
logits [[ 1.3398714  0.812893   1.3614093 -5.9142985]]
Iteration 700 of 1000: loss=0.718 " + "l1=0.164" + "l2=0.553 f=-0.592 shape=(1, 9000, 1)
logits [[ 1.3068329   0.80372274  1.3092363  -5.786119  ]]
Iteration 800 of 1000: loss=0.649 " + "l1=0.152" + "l2=0.497 f=-0.582 shape=(1, 9000, 1)
logits [[ 1.2579435  0.7910551  1.2508992 -5.628715 ]]
Iteration 900 of 1000: loss=0.601 " + "l1=0.14" + "l2=0.461 f=-0.575 shape=(1, 9000, 1)
logits [[ 1.1921595  0.7805634  1.2110106 -5.4847646]]
--- 297.2786748409271 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0395 " + "l1=0.0395" + "l2=0 f=-0.486 shape=(1, 9000, 1)
logits [[ 6.7241583 -1.8531998  2.774069  -9.590418 ]]
Iteration 100 of 1000: loss=0.0394 " + "l1=0.0392" + "l2=0.000158 f=-0.486 shape=(1, 9000, 1)
logits [[ 6.7022796 -1.8540113  2.7805045 -9.570827 ]]
Iteration 200 of 1000: loss=0.0393 " + "l1=0.0392" + "l2=0.000119 f=-0.486 shape=(1, 9000, 1)
logits [[ 6.7015567 -1.8535941  2.7799518 -9.570428 ]]
Iteration 300 of 1000: loss=0.0393 " + "l1=0.0392" + "l2=0.000149 f=-0.486 shape=(1, 9000, 1)
logits [[ 6.6987495 -1.8534878  2.780179  -9.568304 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.395 " + "l1=0.395" + "l2=0 f=-0.486 shape=(1, 9000, 1)
logits [[ 6.7241583 -1.8531998  2.774069  -9.590418 ]]
Iteration 100 of 1000: loss=0.382 " + "l1=0.374" + "l2=0.00774 f=-0.48 shape=(1, 9000, 1)
logits [[ 6.568676  -1.8568112  2.8247833 -9.454924 ]]
Iteration 200 of 1000: loss=0.378 " + "l1=0.367" + "l2=0.0104 f=-0.479 shape=(1, 9000, 1)
logits [[ 6.511711  -1.8607011  2.8387632 -9.40481  ]]
Iteration 300 of 1000: loss=0.374 " + "l1=0.362" + "l2=0.0122 f=-0.479 shape=(1, 9000, 1)
logits [[ 6.4660754 -1.8673913  2.8502512 -9.366108 ]]
Iteration 400 of 1000: loss=0.37 " + "l1=0.356" + "l2=0.014 f=-0.48 shape=(1, 9000, 1)
logits [[ 6.4225802 -1.8745857  2.8633525 -9.330434 ]]
Iteration 500 of 1000: loss=0.366 " + "l1=0.349" + "l2=0.0163 f=-0.48 shape=(1, 9000, 1)
logits [[ 6.372422  -1.8840775  2.8780828 -9.28792  ]]
Iteration 600 of 1000: loss=0.361 " + "l1=0.342" + "l2=0.0184 f=-0.482 shape=(1, 9000, 1)
logits [[ 6.318737  -1.8985914  2.8945947 -9.243577 ]]
Iteration 700 of 1000: loss=0.355 " + "l1=0.334" + "l2=0.0206 f=-0.485 shape=(1, 9000, 1)
logits [[ 6.255465  -1.9161309  2.9110622 -9.188471 ]]
Iteration 800 of 1000: loss=0.348 " + "l1=0.325" + "l2=0.0233 f=-0.488 shape=(1, 9000, 1)
logits [[ 6.181884  -1.9462451  2.9344606 -9.122902 ]]
Iteration 900 of 1000: loss=0.341 " + "l1=0.315" + "l2=0.0261 f=-0.492 shape=(1, 9000, 1)
logits [[ 6.096553  -1.9713792  2.950386  -9.045424 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.95 " + "l1=3.95" + "l2=0 f=-0.486 shape=(1, 9000, 1)
logits [[ 6.7241583 -1.8531998  2.774069  -9.590418 ]]
Iteration 100 of 1000: loss=2.11 " + "l1=0.842" + "l2=1.27 f=-0.483 shape=(1, 9000, 1)
logits [[ 4.271821  -2.0269017  3.4298885 -7.6057653]]
Iteration 200 of 1000: loss=1.17 " + "l1=0" + "l2=1.17 f=-0.515 shape=(1, 9000, 1)
logits [[ 3.3479803 -1.9728967  3.3652074 -6.800256 ]]
Iteration 300 of 1000: loss=0.81 " + "l1=0" + "l2=0.81 f=-0.535 shape=(1, 9000, 1)
logits [[ 3.224747  -1.9938227  3.2345605 -6.606459 ]]
Iteration 400 of 1000: loss=0.584 " + "l1=0.00694" + "l2=0.577 f=-0.556 shape=(1, 9000, 1)
logits [[ 3.224894  -2.0883725  3.217953  -6.5779834]]
Iteration 500 of 1000: loss=0.443 " + "l1=0" + "l2=0.443 f=-0.574 shape=(1, 9000, 1)
logits [[ 3.211914  -2.151324   3.2138395 -6.569324 ]]
Iteration 600 of 1000: loss=0.363 " + "l1=0" + "l2=0.363 f=-0.584 shape=(1, 9000, 1)
logits [[ 3.1691375 -2.1723256  3.190486  -6.5235953]]
Iteration 700 of 1000: loss=0.296 " + "l1=0" + "l2=0.296 f=-0.592 shape=(1, 9000, 1)
logits [[ 3.1605349 -2.1885982  3.1637435 -6.5023685]]
Iteration 800 of 1000: loss=0.251 " + "l1=0" + "l2=0.251 f=-0.597 shape=(1, 9000, 1)
logits [[ 3.1222723 -2.1810617  3.1283505 -6.457281 ]]
Iteration 900 of 1000: loss=0.22 " + "l1=0" + "l2=0.22 f=-0.599 shape=(1, 9000, 1)
logits [[ 3.0819275 -2.1647756  3.0932262 -6.4076667]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.17 " + "l1=2.17" + "l2=0 f=-0.486 shape=(1, 9000, 1)
logits [[ 6.7241583 -1.8531998  2.774069  -9.590418 ]]
Iteration 100 of 1000: loss=1.7 " + "l1=1.4" + "l2=0.305 f=-0.436 shape=(1, 9000, 1)
logits [[ 5.6934648 -1.9550003  3.156825  -8.637955 ]]
Iteration 200 of 1000: loss=1.38 " + "l1=0.871" + "l2=0.506 f=-0.454 shape=(1, 9000, 1)
logits [[ 4.835882  -2.0248783  3.2520013 -7.8773265]]
Iteration 300 of 1000: loss=0.954 " + "l1=0.251" + "l2=0.703 f=-0.497 shape=(1, 9000, 1)
logits [[ 3.8071089 -2.1493387  3.3511157 -6.9965987]]
Iteration 400 of 1000: loss=0.542 " + "l1=0.000896" + "l2=0.541 f=-0.555 shape=(1, 9000, 1)
logits [[ 3.2986135 -2.2360914  3.2969847 -6.578972 ]]
Iteration 500 of 1000: loss=0.401 " + "l1=0" + "l2=0.401 f=-0.58 shape=(1, 9000, 1)
logits [[ 3.266139  -2.2818475  3.278817  -6.582021 ]]
Iteration 600 of 1000: loss=0.324 " + "l1=0.00128" + "l2=0.323 f=-0.593 shape=(1, 9000, 1)
logits [[ 3.2409883 -2.2874362  3.2386603 -6.5624533]]
Iteration 700 of 1000: loss=0.274 " + "l1=0" + "l2=0.274 f=-0.598 shape=(1, 9000, 1)
logits [[ 3.189772  -2.2630432  3.190399  -6.5075088]]
Iteration 800 of 1000: loss=0.24 " + "l1=0.000792" + "l2=0.239 f=-0.599 shape=(1, 9000, 1)
logits [[ 3.1476445 -2.2372806  3.1462038 -6.4533825]]
Iteration 900 of 1000: loss=0.215 " + "l1=0" + "l2=0.215 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.0915906 -2.2101119  3.1014194 -6.3973274]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.28 " + "l1=1.28" + "l2=0 f=-0.486 shape=(1, 9000, 1)
logits [[ 6.7241583 -1.8531998  2.774069  -9.590418 ]]
Iteration 100 of 1000: loss=1.14 " + "l1=1.04" + "l2=0.0964 f=-0.456 shape=(1, 9000, 1)
logits [[ 6.1753316 -1.8865882  2.972037  -9.086341 ]]
Iteration 200 of 1000: loss=1.05 " + "l1=0.897" + "l2=0.156 f=-0.453 shape=(1, 9000, 1)
logits [[ 5.868906  -1.9834614  3.109484  -8.805041 ]]
Iteration 300 of 1000: loss=0.957 " + "l1=0.758" + "l2=0.199 f=-0.46 shape=(1, 9000, 1)
logits [[ 5.4881787 -2.0382972  3.1572747 -8.446633 ]]
Iteration 400 of 1000: loss=0.846 " + "l1=0.61" + "l2=0.236 f=-0.473 shape=(1, 9000, 1)
logits [[ 5.0776844 -2.1465292  3.2021878 -8.024    ]]
Iteration 500 of 1000: loss=0.698 " + "l1=0.407" + "l2=0.291 f=-0.506 shape=(1, 9000, 1)
logits [[ 4.496673  -2.2935934  3.2441826 -7.469551 ]]
Iteration 600 of 1000: loss=0.493 " + "l1=0.145" + "l2=0.348 f=-0.565 shape=(1, 9000, 1)
logits [[ 3.7492807 -2.445427   3.3024838 -6.8672843]]
Iteration 700 of 1000: loss=0.336 " + "l1=0" + "l2=0.336 f=-0.592 shape=(1, 9000, 1)
logits [[ 3.2847784 -2.440057   3.285425  -6.4982533]]
Iteration 800 of 1000: loss=0.271 " + "l1=0.00511" + "l2=0.266 f=-0.599 shape=(1, 9000, 1)
logits [[ 3.2399826 -2.4239593  3.2242725 -6.4363046]]
Iteration 900 of 1000: loss=0.227 " + "l1=0" + "l2=0.227 f=-0.601 shape=(1, 9000, 1)
logits [[ 3.1686647 -2.3965385  3.1714382 -6.346427 ]]
--- 260.1053171157837 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.163 " + "l1=0.163" + "l2=0 f=-0.486 shape=(1, 9000, 1)
logits [[ 6.7241583 -1.8531998  2.774069  -9.590418 ]]
Iteration 100 of 1000: loss=0.162 " + "l1=0.162" + "l2=0.000507 f=-0.483 shape=(1, 9000, 1)
logits [[ 6.66758   -1.8323367  2.7524095 -9.519352 ]]
Iteration 200 of 1000: loss=0.162 " + "l1=0.162" + "l2=0.000535 f=-0.483 shape=(1, 9000, 1)
logits [[ 6.657597 -1.828284  2.747899 -9.507773]]
Iteration 300 of 1000: loss=0.162 " + "l1=0.161" + "l2=0.000655 f=-0.482 shape=(1, 9000, 1)
logits [[ 6.6452885 -1.8238547  2.742491  -9.49323  ]]
Iteration 400 of 1000: loss=0.162 " + "l1=0.161" + "l2=0.00079 f=-0.482 shape=(1, 9000, 1)
logits [[ 6.633644  -1.8201567  2.737581  -9.479384 ]]
Iteration 500 of 1000: loss=0.162 " + "l1=0.161" + "l2=0.000919 f=-0.482 shape=(1, 9000, 1)
logits [[ 6.6231556 -1.8173801  2.7333615 -9.46675  ]]
Iteration 600 of 1000: loss=0.162 " + "l1=0.161" + "l2=0.00107 f=-0.482 shape=(1, 9000, 1)
logits [[ 6.613563  -1.8153524  2.7297344 -9.455077 ]]
Iteration 700 of 1000: loss=0.162 " + "l1=0.16" + "l2=0.0012 f=-0.482 shape=(1, 9000, 1)
logits [[ 6.6049724 -1.8139218  2.7266476 -9.444562 ]]
Iteration 800 of 1000: loss=0.162 " + "l1=0.16" + "l2=0.00134 f=-0.482 shape=(1, 9000, 1)
logits [[ 6.5970616 -1.812764   2.723898  -9.434855 ]]
Iteration 900 of 1000: loss=0.162 " + "l1=0.16" + "l2=0.0015 f=-0.482 shape=(1, 9000, 1)
logits [[ 6.5894504 -1.8118027  2.7213345 -9.425626 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.63 " + "l1=1.63" + "l2=0 f=-0.486 shape=(1, 9000, 1)
logits [[ 6.7241583 -1.8531998  2.774069  -9.590418 ]]
Iteration 100 of 1000: loss=1.56 " + "l1=1.52" + "l2=0.0418 f=-0.457 shape=(1, 9000, 1)
logits [[ 6.2010636 -1.6546228  2.5813718 -8.957507 ]]
Iteration 200 of 1000: loss=1.52 " + "l1=1.46" + "l2=0.0634 f=-0.448 shape=(1, 9000, 1)
logits [[ 5.9480743 -1.5720567  2.4859986 -8.655969 ]]
Iteration 300 of 1000: loss=1.49 " + "l1=1.4" + "l2=0.0876 f=-0.442 shape=(1, 9000, 1)
logits [[ 5.687167  -1.4951358  2.3959415 -8.354316 ]]
Iteration 400 of 1000: loss=1.46 " + "l1=1.35" + "l2=0.11 f=-0.438 shape=(1, 9000, 1)
logits [[ 5.427208  -1.429103   2.3069844 -8.058931 ]]
Iteration 500 of 1000: loss=1.42 " + "l1=1.28" + "l2=0.135 f=-0.437 shape=(1, 9000, 1)
logits [[ 5.1163416 -1.3665949  2.2171898 -7.7139897]]
Iteration 600 of 1000: loss=1.37 " + "l1=1.21" + "l2=0.16 f=-0.442 shape=(1, 9000, 1)
logits [[ 4.756759  -1.3025224  2.0985854 -7.321582 ]]
Iteration 700 of 1000: loss=1.31 " + "l1=1.13" + "l2=0.182 f=-0.45 shape=(1, 9000, 1)
logits [[ 4.3815575 -1.2726059  1.9902178 -6.8975806]]
Iteration 800 of 1000: loss=1.26 " + "l1=1.06" + "l2=0.198 f=-0.448 shape=(1, 9000, 1)
logits [[ 4.081825  -1.2433693  1.9057652 -6.5365925]]
Iteration 900 of 1000: loss=1.21 " + "l1=0.999" + "l2=0.208 f=-0.455 shape=(1, 9000, 1)
logits [[ 3.7897503 -1.2149779  1.8100855 -6.2040906]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=16.3 " + "l1=16.3" + "l2=0 f=-0.486 shape=(1, 9000, 1)
logits [[ 6.7241583 -1.8531998  2.774069  -9.590418 ]]
Iteration 100 of 1000: loss=8.68 " + "l1=4.97" + "l2=3.71 f=-0.405 shape=(1, 9000, 1)
logits [[ 1.1919019  -0.20934545  1.1733911  -3.7763505 ]]
Iteration 200 of 1000: loss=6.29 " + "l1=2.55" + "l2=3.74 f=-0.322 shape=(1, 9000, 1)
logits [[ 0.54782516 -0.3867539   0.54941    -1.9968393 ]]
Iteration 300 of 1000: loss=4.53 " + "l1=0.722" + "l2=3.81 f=-0.258 shape=(1, 9000, 1)
logits [[-0.09495752 -0.45554608  0.12056933 -0.6010984 ]]
Iteration 400 of 1000: loss=3.39 " + "l1=0" + "l2=3.39 f=-0.27 shape=(1, 9000, 1)
logits [[-0.5092949  -0.48762393 -0.05058963 -0.03367594]]
Iteration 500 of 1000: loss=2.83 " + "l1=0.014" + "l2=2.81 f=-0.278 shape=(1, 9000, 1)
logits [[-0.4987433  -0.5145911  -0.04207015 -0.05605275]]
Iteration 600 of 1000: loss=2.46 " + "l1=0.00658" + "l2=2.45 f=-0.283 shape=(1, 9000, 1)
logits [[-0.52890444 -0.53762996 -0.0304374  -0.03702228]]
Iteration 700 of 1000: loss=2.2 " + "l1=0" + "l2=2.2 f=-0.287 shape=(1, 9000, 1)
logits [[-0.55514306 -0.5675624  -0.01345052 -0.01087902]]
Iteration 800 of 1000: loss=2 " + "l1=0.00717" + "l2=1.99 f=-0.284 shape=(1, 9000, 1)
logits [[-0.5275857  -0.6220352   0.01018517  0.00301105]]
Iteration 900 of 1000: loss=1.86 " + "l1=0" + "l2=1.86 f=-0.282 shape=(1, 9000, 1)
logits [[-0.5297977  -0.64793664  0.02050664  0.03095693]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=8.97 " + "l1=8.97" + "l2=0 f=-0.486 shape=(1, 9000, 1)
logits [[ 6.7241583 -1.8531998  2.774069  -9.590418 ]]
Iteration 100 of 1000: loss=6.42 " + "l1=4.95" + "l2=1.47 f=-0.411 shape=(1, 9000, 1)
logits [[ 3.2114859 -0.7579929  1.6954441 -5.7938285]]
Iteration 200 of 1000: loss=4.77 " + "l1=2.66" + "l2=2.11 f=-0.422 shape=(1, 9000, 1)
logits [[ 1.1772224  -0.37351272  1.1737343  -3.6657636 ]]
Iteration 300 of 1000: loss=3.73 " + "l1=1.8" + "l2=1.93 f=-0.377 shape=(1, 9000, 1)
logits [[ 0.7337833  -0.46258917  0.74695635 -2.525757  ]]
Iteration 400 of 1000: loss=3.13 " + "l1=1.34" + "l2=1.79 f=-0.353 shape=(1, 9000, 1)
logits [[ 0.50075215 -0.52563375  0.5203509  -1.9088154 ]]
Iteration 500 of 1000: loss=2.66 " + "l1=0.919" + "l2=1.74 f=-0.335 shape=(1, 9000, 1)
logits [[ 0.244679   -0.51191294  0.2995556  -1.3715746 ]]
Iteration 600 of 1000: loss=2.14 " + "l1=0.269" + "l2=1.87 f=-0.299 shape=(1, 9000, 1)
logits [[-0.29061228 -0.53227675  0.05843951 -0.43086052]]
Iteration 700 of 1000: loss=1.78 " + "l1=0.00495" + "l2=1.77 f=-0.314 shape=(1, 9000, 1)
logits [[-0.60715365 -0.56140417 -0.03923225 -0.04822319]]
Iteration 800 of 1000: loss=1.54 " + "l1=0.0104" + "l2=1.53 f=-0.34 shape=(1, 9000, 1)
logits [[-0.6775892  -0.63152784 -0.01537387 -0.03427109]]
Iteration 900 of 1000: loss=1.35 " + "l1=0.00498" + "l2=1.35 f=-0.359 shape=(1, 9000, 1)
logits [[-0.71656334 -0.6923287  -0.0083881  -0.01744027]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.3 " + "l1=5.3" + "l2=0 f=-0.486 shape=(1, 9000, 1)
logits [[ 6.7241583 -1.8531998  2.774069  -9.590418 ]]
Iteration 100 of 1000: loss=4.39 " + "l1=3.84" + "l2=0.548 f=-0.412 shape=(1, 9000, 1)
logits [[ 4.627465  -1.1346713  2.0505502 -7.1901875]]
Iteration 200 of 1000: loss=3.81 " + "l1=2.96" + "l2=0.854 f=-0.414 shape=(1, 9000, 1)
logits [[ 3.31387   -0.8826243  1.6957903 -5.7817626]]
Iteration 300 of 1000: loss=3.19 " + "l1=2" + "l2=1.19 f=-0.434 shape=(1, 9000, 1)
logits [[ 1.8983555  -0.70622003  1.3341371  -4.261946  ]]
Iteration 400 of 1000: loss=2.62 " + "l1=1.35" + "l2=1.26 f=-0.427 shape=(1, 9000, 1)
logits [[ 1.0105577  -0.59157926  1.0157095  -3.1431816 ]]
Iteration 500 of 1000: loss=2.26 " + "l1=1.12" + "l2=1.14 f=-0.394 shape=(1, 9000, 1)
logits [[ 0.83940935 -0.6541739   0.8384045  -2.5979705 ]]
Iteration 600 of 1000: loss=1.98 " + "l1=0.917" + "l2=1.07 f=-0.358 shape=(1, 9000, 1)
logits [[ 0.6994419  -0.7346749   0.71142215 -2.1091425 ]]
Iteration 700 of 1000: loss=1.79 " + "l1=0.772" + "l2=1.01 f=-0.355 shape=(1, 9000, 1)
logits [[ 0.56934303 -0.8116813   0.59769475 -1.7767055 ]]
Iteration 800 of 1000: loss=1.58 " + "l1=0.585" + "l2=0.991 f=-0.373 shape=(1, 9000, 1)
logits [[ 0.28481698 -0.82750285  0.4260193  -1.3751582 ]]
Iteration 900 of 1000: loss=1.41 " + "l1=0.42" + "l2=0.99 f=-0.368 shape=(1, 9000, 1)
logits [[-0.02539384 -0.8382486   0.34181502 -0.9504479 ]]
--- 298.9210567474365 seconds ---
Adv result:3
Loading record A05587
(1, 16928)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.077 " + "l1=0.077" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.041178  -3.6606178  3.3013635 -5.353897 ]]
Iteration 100 of 1000: loss=0.0764 " + "l1=0.076" + "l2=0.000356 f=-0.412 shape=(1, 9000, 1)
logits [[ 3.9897609 -3.6133792  3.2658656 -5.292081 ]]
Iteration 200 of 1000: loss=0.0762 " + "l1=0.0758" + "l2=0.000394 f=-0.411 shape=(1, 9000, 1)
logits [[ 3.9778733 -3.6030376  3.259163  -5.2775407]]
Iteration 300 of 1000: loss=0.0761 " + "l1=0.0756" + "l2=0.000503 f=-0.409 shape=(1, 9000, 1)
logits [[ 3.9641685 -3.5913663  3.251779  -5.2612314]]
Iteration 400 of 1000: loss=0.0759 " + "l1=0.0753" + "l2=0.0006 f=-0.407 shape=(1, 9000, 1)
logits [[ 3.9505723 -3.5798178  3.244759  -5.245349 ]]
Iteration 500 of 1000: loss=0.0758 " + "l1=0.0751" + "l2=0.000711 f=-0.406 shape=(1, 9000, 1)
logits [[ 3.9369612 -3.5680437  3.237632  -5.229538 ]]
Iteration 600 of 1000: loss=0.0757 " + "l1=0.0748" + "l2=0.000851 f=-0.404 shape=(1, 9000, 1)
logits [[ 3.923879  -3.5566359  3.230893  -5.2145705]]
Iteration 700 of 1000: loss=0.0756 " + "l1=0.0746" + "l2=0.000977 f=-0.403 shape=(1, 9000, 1)
logits [[ 3.9121046 -3.5461452  3.2248638 -5.2013283]]
Iteration 800 of 1000: loss=0.0754 " + "l1=0.0744" + "l2=0.00106 f=-0.401 shape=(1, 9000, 1)
logits [[ 3.9002972 -3.5355031  3.2188356 -5.188485 ]]
Iteration 900 of 1000: loss=0.0753 " + "l1=0.0741" + "l2=0.0012 f=-0.4 shape=(1, 9000, 1)
logits [[ 3.888523  -3.5248585  3.212943  -5.176208 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.77 " + "l1=0.77" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.041178  -3.6606178  3.3013635 -5.353897 ]]
Iteration 100 of 1000: loss=0.712 " + "l1=0.681" + "l2=0.0305 f=-0.369 shape=(1, 9000, 1)
logits [[ 3.5671606 -3.2434046  2.9707017 -4.7712173]]
Iteration 200 of 1000: loss=0.686 " + "l1=0.645" + "l2=0.0412 f=-0.346 shape=(1, 9000, 1)
logits [[ 3.3714118 -3.0737388  2.8498597 -4.5316296]]
Iteration 300 of 1000: loss=0.664 " + "l1=0.615" + "l2=0.0495 f=-0.324 shape=(1, 9000, 1)
logits [[ 3.2158108 -2.930942   2.75215   -4.333547 ]]
Iteration 400 of 1000: loss=0.644 " + "l1=0.583" + "l2=0.0612 f=-0.303 shape=(1, 9000, 1)
logits [[ 3.0493624 -2.7820263  2.6381567 -4.117603 ]]
Iteration 500 of 1000: loss=0.626 " + "l1=0.557" + "l2=0.0685 f=-0.286 shape=(1, 9000, 1)
logits [[ 2.9078467 -2.6648543  2.5588322 -3.9465046]]
Iteration 600 of 1000: loss=0.61 " + "l1=0.537" + "l2=0.073 f=-0.274 shape=(1, 9000, 1)
logits [[ 2.79753   -2.5737216  2.498698  -3.8199198]]
Iteration 700 of 1000: loss=0.595 " + "l1=0.518" + "l2=0.077 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.6946223 -2.4885476  2.437249  -3.7002802]]
Iteration 800 of 1000: loss=0.58 " + "l1=0.5" + "l2=0.0807 f=-0.253 shape=(1, 9000, 1)
logits [[ 2.6044557 -2.3923278  2.3627067 -3.5870926]]
Iteration 900 of 1000: loss=0.566 " + "l1=0.483" + "l2=0.0834 f=-0.243 shape=(1, 9000, 1)
logits [[ 2.5228472 -2.3066223  2.2957847 -3.4827423]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.7 " + "l1=7.7" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.041178  -3.6606178  3.3013635 -5.353897 ]]
Iteration 100 of 1000: loss=4.11 " + "l1=2.85" + "l2=1.27 f=-0.14 shape=(1, 9000, 1)
logits [[ 1.434125  -1.411178   1.4335996 -2.017849 ]]
Iteration 200 of 1000: loss=3.06 " + "l1=1.69" + "l2=1.37 f=-0.0868 shape=(1, 9000, 1)
logits [[ 0.8877583  -0.79716444  0.8956383  -1.3333212 ]]
Iteration 300 of 1000: loss=2.32 " + "l1=0.775" + "l2=1.55 f=-0.0875 shape=(1, 9000, 1)
logits [[ 0.40914977 -0.3577588   0.4175171  -0.8190183 ]]
Iteration 400 of 1000: loss=1.96 " + "l1=0.383" + "l2=1.57 f=-0.0721 shape=(1, 9000, 1)
logits [[ 0.20565307 -0.15870382  0.22403939 -0.55956787]]
Iteration 500 of 1000: loss=1.66 " + "l1=0.12" + "l2=1.54 f=-0.05 shape=(1, 9000, 1)
logits [[ 0.10110325 -0.01848457  0.0998358  -0.3823893 ]]
Iteration 600 of 1000: loss=1.41 " + "l1=0.0236" + "l2=1.39 f=-0.049 shape=(1, 9000, 1)
logits [[ 0.0126985   0.03099859  0.05455232 -0.29415637]]
Iteration 700 of 1000: loss=1.24 " + "l1=0" + "l2=1.24 f=-0.0551 shape=(1, 9000, 1)
logits [[-0.00912948  0.02933151  0.02533399 -0.26592338]]
Iteration 800 of 1000: loss=1.12 " + "l1=0" + "l2=1.12 f=-0.057 shape=(1, 9000, 1)
logits [[ 0.01251829  0.01574651  0.01249762 -0.26885605]]
Iteration 900 of 1000: loss=1.05 " + "l1=0" + "l2=1.05 f=-0.0551 shape=(1, 9000, 1)
logits [[ 0.00066594  0.00756217  0.0013086  -0.2300896 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.24 " + "l1=4.24" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.041178  -3.6606178  3.3013635 -5.353897 ]]
Iteration 100 of 1000: loss=2.8 " + "l1=2.17" + "l2=0.638 f=-0.213 shape=(1, 9000, 1)
logits [[ 1.9237332 -2.0133681  1.9237875 -2.6852534]]
Iteration 200 of 1000: loss=2.3 " + "l1=1.6" + "l2=0.703 f=-0.128 shape=(1, 9000, 1)
logits [[ 1.498449  -1.4122442  1.4991361 -2.0955331]]
Iteration 300 of 1000: loss=2.01 " + "l1=1.29" + "l2=0.719 f=-0.0984 shape=(1, 9000, 1)
logits [[ 1.2084198 -1.1269454  1.214904  -1.6898302]]
Iteration 400 of 1000: loss=1.76 " + "l1=0.967" + "l2=0.792 f=-0.084 shape=(1, 9000, 1)
logits [[ 0.9097697 -0.8484688  0.9103754 -1.3077241]]
Iteration 500 of 1000: loss=1.6 " + "l1=0.769" + "l2=0.828 f=-0.0719 shape=(1, 9000, 1)
logits [[ 0.7075735  -0.68111587  0.7175408  -1.0316422 ]]
Iteration 600 of 1000: loss=1.46 " + "l1=0.653" + "l2=0.809 f=-0.0605 shape=(1, 9000, 1)
logits [[ 0.59203225 -0.5859604   0.60057205 -0.8486975 ]]
Iteration 700 of 1000: loss=1.29 " + "l1=0.483" + "l2=0.805 f=-0.0431 shape=(1, 9000, 1)
logits [[ 0.44545585 -0.42727005  0.4510912  -0.64155185]]
Iteration 800 of 1000: loss=1.16 " + "l1=0.365" + "l2=0.796 f=-0.0394 shape=(1, 9000, 1)
logits [[ 0.33018997 -0.32833812  0.33620235 -0.49555755]]
Iteration 900 of 1000: loss=1.05 " + "l1=0.252" + "l2=0.793 f=-0.0358 shape=(1, 9000, 1)
logits [[ 0.22908482 -0.22985788  0.22530656 -0.3678773 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.97 " + "l1=5.97" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.041178  -3.6606178  3.3013635 -5.353897 ]]
Iteration 100 of 1000: loss=3.5 " + "l1=2.53" + "l2=0.969 f=-0.166 shape=(1, 9000, 1)
logits [[ 1.6169586 -1.6426135  1.6187332 -2.2574053]]
Iteration 200 of 1000: loss=2.76 " + "l1=1.73" + "l2=1.03 f=-0.0998 shape=(1, 9000, 1)
logits [[ 1.1588691 -1.0756451  1.1536728 -1.636131 ]]
Iteration 300 of 1000: loss=2.26 " + "l1=1.1" + "l2=1.17 f=-0.0859 shape=(1, 9000, 1)
logits [[ 0.7365067  -0.6746076   0.73848355 -1.1441826 ]]
Iteration 400 of 1000: loss=1.94 " + "l1=0.713" + "l2=1.23 f=-0.0778 shape=(1, 9000, 1)
logits [[ 0.4713201  -0.4443332   0.47546893 -0.81383365]]
Iteration 500 of 1000: loss=1.69 " + "l1=0.49" + "l2=1.2 f=-0.0708 shape=(1, 9000, 1)
logits [[ 0.331917   -0.29694253  0.33501717 -0.65319693]]
Iteration 600 of 1000: loss=1.48 " + "l1=0.326" + "l2=1.16 f=-0.0507 shape=(1, 9000, 1)
logits [[ 0.23180065 -0.18832646  0.22912121 -0.47557545]]
Iteration 700 of 1000: loss=1.26 " + "l1=0.121" + "l2=1.14 f=-0.036 shape=(1, 9000, 1)
logits [[ 0.09596051 -0.05279095  0.10353406 -0.29087242]]
Iteration 800 of 1000: loss=1.1 " + "l1=0.0133" + "l2=1.09 f=-0.0425 shape=(1, 9000, 1)
logits [[-0.00049791 -0.0022416   0.01492415 -0.18211433]]
Iteration 900 of 1000: loss=1 " + "l1=0" + "l2=1 f=-0.0389 shape=(1, 9000, 1)
logits [[-0.01993472 -0.01129183 -0.01353725 -0.11066359]]
--- 306.1042990684509 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0074 " + "l1=0.0074" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.041178  -3.6606178  3.3013635 -5.353897 ]]
Iteration 100 of 1000: loss=0.00714 " + "l1=0.00692" + "l2=0.000222 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.0101695 -3.6735     3.3179865 -5.3262506]]
Iteration 200 of 1000: loss=0.00709 " + "l1=0.00688" + "l2=0.000207 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.006506  -3.673569   3.3184507 -5.3228674]]
Iteration 300 of 1000: loss=0.00707 " + "l1=0.00682" + "l2=0.000245 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.001256  -3.6737056  3.3191102 -5.3179426]]
Iteration 400 of 1000: loss=0.00707 " + "l1=0.00676" + "l2=0.000309 f=-0.418 shape=(1, 9000, 1)
logits [[ 3.9958372 -3.6734881  3.319436  -5.312864 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.074 " + "l1=0.074" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.041178  -3.6606178  3.3013635 -5.353897 ]]
Iteration 100 of 1000: loss=0.0528 " + "l1=0.0411" + "l2=0.0117 f=-0.418 shape=(1, 9000, 1)
logits [[ 3.82425   -3.7466216  3.4131234 -5.162138 ]]
Iteration 200 of 1000: loss=0.046 " + "l1=0.0296" + "l2=0.0164 f=-0.417 shape=(1, 9000, 1)
logits [[ 3.7318125 -3.7622595  3.4361339 -5.073889 ]]
Iteration 300 of 1000: loss=0.04 " + "l1=0.0193" + "l2=0.0206 f=-0.417 shape=(1, 9000, 1)
logits [[ 3.643498  -3.7707007  3.4500017 -4.990804 ]]
Iteration 400 of 1000: loss=0.0343 " + "l1=0.0102" + "l2=0.0241 f=-0.417 shape=(1, 9000, 1)
logits [[ 3.563933  -3.7776423  3.4619777 -4.9181314]]
Iteration 500 of 1000: loss=0.0284 " + "l1=0.00157" + "l2=0.0268 f=-0.419 shape=(1, 9000, 1)
logits [[ 3.487332  -3.7856228  3.471614  -4.84935  ]]
Iteration 600 of 1000: loss=0.0239 " + "l1=0" + "l2=0.0239 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.4607244 -3.7794845  3.4630651 -4.832954 ]]
Iteration 700 of 1000: loss=0.021 " + "l1=0.000313" + "l2=0.0207 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.4537814 -3.773063   3.450649  -4.8345385]]
Iteration 800 of 1000: loss=0.0189 " + "l1=9.51e-05" + "l2=0.0188 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.4448583 -3.7701283  3.4439073 -4.8352585]]
Iteration 900 of 1000: loss=0.0172 " + "l1=0.000165" + "l2=0.017 f=-0.432 shape=(1, 9000, 1)
logits [[ 3.4379213 -3.7660463  3.4362712 -4.83535  ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0407 " + "l1=0.0407" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.041178  -3.6606178  3.3013635 -5.353897 ]]
Iteration 100 of 1000: loss=0.034 " + "l1=0.0304" + "l2=0.00364 f=-0.418 shape=(1, 9000, 1)
logits [[ 3.9212646 -3.7132611  3.3687747 -5.248946 ]]
Iteration 200 of 1000: loss=0.0322 " + "l1=0.0272" + "l2=0.00495 f=-0.418 shape=(1, 9000, 1)
logits [[ 3.8762887 -3.7216039  3.3815873 -5.2071586]]
Iteration 300 of 1000: loss=0.0307 " + "l1=0.0247" + "l2=0.00596 f=-0.417 shape=(1, 9000, 1)
logits [[ 3.835602  -3.722969   3.386419  -5.1681113]]
Iteration 400 of 1000: loss=0.0294 " + "l1=0.0225" + "l2=0.00681 f=-0.417 shape=(1, 9000, 1)
logits [[ 3.7987792 -3.7226388  3.3888326 -5.133769 ]]
Iteration 500 of 1000: loss=0.0281 " + "l1=0.0205" + "l2=0.00765 f=-0.418 shape=(1, 9000, 1)
logits [[ 3.7637923 -3.723414   3.391183  -5.102987 ]]
Iteration 600 of 1000: loss=0.0269 " + "l1=0.0185" + "l2=0.00841 f=-0.419 shape=(1, 9000, 1)
logits [[ 3.730106 -3.724035  3.394348 -5.075591]]
Iteration 700 of 1000: loss=0.0256 " + "l1=0.0164" + "l2=0.00918 f=-0.42 shape=(1, 9000, 1)
logits [[ 3.6961339 -3.725845   3.3976557 -5.0493193]]
Iteration 800 of 1000: loss=0.0241 " + "l1=0.0143" + "l2=0.00984 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.6621904 -3.7278798  3.4024339 -5.0237885]]
Iteration 900 of 1000: loss=0.0225 " + "l1=0.012" + "l2=0.0105 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.6227531 -3.7282815  3.4043672 -4.992627 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0573 " + "l1=0.0573" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.041178  -3.6606178  3.3013635 -5.353897 ]]
Iteration 100 of 1000: loss=0.0445 " + "l1=0.0374" + "l2=0.00705 f=-0.418 shape=(1, 9000, 1)
logits [[ 3.873157  -3.7297776  3.390569  -5.2058907]]
Iteration 200 of 1000: loss=0.0405 " + "l1=0.0307" + "l2=0.00982 f=-0.417 shape=(1, 9000, 1)
logits [[ 3.8057022 -3.742486   3.4096124 -5.1426387]]
Iteration 300 of 1000: loss=0.0374 " + "l1=0.0254" + "l2=0.012 f=-0.417 shape=(1, 9000, 1)
logits [[ 3.74549   -3.7459135  3.4171925 -5.084715 ]]
Iteration 400 of 1000: loss=0.0344 " + "l1=0.0204" + "l2=0.014 f=-0.417 shape=(1, 9000, 1)
logits [[ 3.6855948 -3.7474427  3.4229274 -5.0302997]]
Iteration 500 of 1000: loss=0.0313 " + "l1=0.0155" + "l2=0.0157 f=-0.419 shape=(1, 9000, 1)
logits [[ 3.6295135 -3.7510667  3.4289646 -4.982284 ]]
Iteration 600 of 1000: loss=0.028 " + "l1=0.0107" + "l2=0.0173 f=-0.421 shape=(1, 9000, 1)
logits [[ 3.575487  -3.7569032  3.4377258 -4.9386244]]
Iteration 700 of 1000: loss=0.0246 " + "l1=0.00597" + "l2=0.0186 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.517818  -3.7601833  3.440833  -4.891057 ]]
Iteration 800 of 1000: loss=0.0215 " + "l1=0.00238" + "l2=0.0192 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.4746127 -3.7654755  3.4439013 -4.8572927]]
Iteration 900 of 1000: loss=0.0189 " + "l1=0.000296" + "l2=0.0186 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.4469376 -3.7682128  3.4431188 -4.8382583]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.049 " + "l1=0.049" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.041178  -3.6606178  3.3013635 -5.353897 ]]
Iteration 100 of 1000: loss=0.0395 " + "l1=0.0343" + "l2=0.00524 f=-0.418 shape=(1, 9000, 1)
logits [[ 3.8977256 -3.7224994  3.3805432 -5.2284737]]
Iteration 200 of 1000: loss=0.0367 " + "l1=0.0296" + "l2=0.00714 f=-0.418 shape=(1, 9000, 1)
logits [[ 3.842107  -3.7323072  3.3956954 -5.1761613]]
Iteration 300 of 1000: loss=0.0345 " + "l1=0.0258" + "l2=0.00876 f=-0.417 shape=(1, 9000, 1)
logits [[ 3.7921479 -3.7360113  3.4033735 -5.12896  ]]
Iteration 400 of 1000: loss=0.0325 " + "l1=0.0225" + "l2=0.01 f=-0.418 shape=(1, 9000, 1)
logits [[ 3.7462626 -3.737581   3.407285  -5.087199 ]]
Iteration 500 of 1000: loss=0.0305 " + "l1=0.0191" + "l2=0.0114 f=-0.419 shape=(1, 9000, 1)
logits [[ 3.7008414 -3.7393463  3.4126778 -5.048321 ]]
Iteration 600 of 1000: loss=0.0284 " + "l1=0.0159" + "l2=0.0125 f=-0.42 shape=(1, 9000, 1)
logits [[ 3.655629  -3.7402244  3.4161713 -5.011313 ]]
Iteration 700 of 1000: loss=0.0259 " + "l1=0.0124" + "l2=0.0135 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.6086996 -3.743699   3.421948  -4.9737844]]
Iteration 800 of 1000: loss=0.0234 " + "l1=0.00914" + "l2=0.0143 f=-0.424 shape=(1, 9000, 1)
logits [[ 3.5622332 -3.7461212  3.4242017 -4.936911 ]]
Iteration 900 of 1000: loss=0.0212 " + "l1=0.00625" + "l2=0.0149 f=-0.427 shape=(1, 9000, 1)
logits [[ 3.5225213 -3.7501187  3.428117  -4.907629 ]]
--- 271.0486764907837 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.094 " + "l1=0.094" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.041178  -3.6606178  3.3013635 -5.353897 ]]
Iteration 100 of 1000: loss=0.0928 " + "l1=0.0921" + "l2=0.000677 f=-0.411 shape=(1, 9000, 1)
logits [[ 3.963171  -3.6309168  3.2712224 -5.2469482]]
Iteration 200 of 1000: loss=0.0924 " + "l1=0.0916" + "l2=0.000789 f=-0.409 shape=(1, 9000, 1)
logits [[ 3.94281   -3.6212163  3.2633338 -5.2199883]]
Iteration 300 of 1000: loss=0.0921 " + "l1=0.0911" + "l2=0.000978 f=-0.407 shape=(1, 9000, 1)
logits [[ 3.9210267 -3.611103   3.2552402 -5.1913567]]
Iteration 400 of 1000: loss=0.0918 " + "l1=0.0906" + "l2=0.00119 f=-0.404 shape=(1, 9000, 1)
logits [[ 3.9000223 -3.600493   3.2468266 -5.163863 ]]
Iteration 500 of 1000: loss=0.0916 " + "l1=0.0902" + "l2=0.00141 f=-0.402 shape=(1, 9000, 1)
logits [[ 3.8810863 -3.590435   3.2390807 -5.139508 ]]
Iteration 600 of 1000: loss=0.0914 " + "l1=0.0898" + "l2=0.00159 f=-0.401 shape=(1, 9000, 1)
logits [[ 3.8633707 -3.5810604  3.2319398 -5.1169553]]
Iteration 700 of 1000: loss=0.0912 " + "l1=0.0894" + "l2=0.0018 f=-0.399 shape=(1, 9000, 1)
logits [[ 3.8464415 -3.5719697  3.2251325 -5.095786 ]]
Iteration 800 of 1000: loss=0.091 " + "l1=0.0891" + "l2=0.00196 f=-0.398 shape=(1, 9000, 1)
logits [[ 3.8307393 -3.5636168  3.2189608 -5.0764856]]
Iteration 900 of 1000: loss=0.0909 " + "l1=0.0887" + "l2=0.00213 f=-0.396 shape=(1, 9000, 1)
logits [[ 3.8156152 -3.5552905  3.213264  -5.058285 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.94 " + "l1=0.94" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.041178  -3.6606178  3.3013635 -5.353897 ]]
Iteration 100 of 1000: loss=0.823 " + "l1=0.755" + "l2=0.0681 f=-0.357 shape=(1, 9000, 1)
logits [[ 3.258121  -3.3662465  2.9679399 -4.289059 ]]
Iteration 200 of 1000: loss=0.769 " + "l1=0.672" + "l2=0.0971 f=-0.328 shape=(1, 9000, 1)
logits [[ 2.921299  -3.252263   2.8153844 -3.798361 ]]
Iteration 300 of 1000: loss=0.724 " + "l1=0.605" + "l2=0.12 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.6522367 -3.1266322  2.6515162 -3.3939   ]]
Iteration 400 of 1000: loss=0.69 " + "l1=0.556" + "l2=0.134 f=-0.282 shape=(1, 9000, 1)
logits [[ 2.4697123 -2.9762976  2.4691923 -3.0914395]]
Iteration 500 of 1000: loss=0.662 " + "l1=0.519" + "l2=0.143 f=-0.262 shape=(1, 9000, 1)
logits [[ 2.3328564 -2.8485165  2.3309593 -2.8620093]]
Iteration 600 of 1000: loss=0.636 " + "l1=0.484" + "l2=0.152 f=-0.239 shape=(1, 9000, 1)
logits [[ 2.2040474 -2.725692   2.202806  -2.63838  ]]
Iteration 700 of 1000: loss=0.612 " + "l1=0.452" + "l2=0.16 f=-0.213 shape=(1, 9000, 1)
logits [[ 2.0937982 -2.6139085  2.0959501 -2.4271073]]
Iteration 800 of 1000: loss=0.588 " + "l1=0.428" + "l2=0.16 f=-0.189 shape=(1, 9000, 1)
logits [[ 2.014906  -2.5236359  2.0140822 -2.2616491]]
Iteration 900 of 1000: loss=0.562 " + "l1=0.399" + "l2=0.163 f=-0.172 shape=(1, 9000, 1)
logits [[ 1.9179147 -2.4471796  1.9170703 -2.0746834]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.4 " + "l1=9.4" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.041178  -3.6606178  3.3013635 -5.353897 ]]
Iteration 100 of 1000: loss=3.07 " + "l1=0.803" + "l2=2.27 f=-0.0449 shape=(1, 9000, 1)
logits [[ 0.60536456 -2.0355177   1.026752    0.22363946]]
Iteration 200 of 1000: loss=1.78 " + "l1=0" + "l2=1.78 f=-0.0329 shape=(1, 9000, 1)
logits [[ 0.23953378 -1.8895665   0.7469931   0.7712536 ]]
Iteration 300 of 1000: loss=1.39 " + "l1=0" + "l2=1.39 f=-0.0312 shape=(1, 9000, 1)
logits [[ 0.26119998 -1.8779011   0.7451987   0.7467048 ]]
Iteration 400 of 1000: loss=1.21 " + "l1=0" + "l2=1.21 f=-0.0243 shape=(1, 9000, 1)
logits [[ 0.27945027 -1.8758229   0.74593246  0.75309587]]
Iteration 500 of 1000: loss=1.11 " + "l1=0" + "l2=1.11 f=-0.0221 shape=(1, 9000, 1)
logits [[ 0.2788598  -1.8483044   0.72818714  0.7527099 ]]
Iteration 600 of 1000: loss=1.01 " + "l1=0" + "l2=1.01 f=-0.0267 shape=(1, 9000, 1)
logits [[ 0.27393866 -1.8355302   0.72641796  0.7283665 ]]
Iteration 700 of 1000: loss=0.944 " + "l1=0" + "l2=0.944 f=-0.0323 shape=(1, 9000, 1)
logits [[ 0.24963245 -1.8248957   0.71087885  0.7349965 ]]
Iteration 800 of 1000: loss=0.877 " + "l1=0" + "l2=0.877 f=-0.0334 shape=(1, 9000, 1)
logits [[ 0.2490581  -1.8042129   0.69959825  0.7218692 ]]
Iteration 900 of 1000: loss=0.824 " + "l1=0" + "l2=0.824 f=-0.0375 shape=(1, 9000, 1)
logits [[ 0.22658679 -1.7657304   0.66989785  0.7190931 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.17 " + "l1=5.17" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.041178  -3.6606178  3.3013635 -5.353897 ]]
Iteration 100 of 1000: loss=2.6 " + "l1=1.57" + "l2=1.03 f=-0.128 shape=(1, 9000, 1)
logits [[ 1.4475555 -2.392454   1.6464533 -1.2153099]]
Iteration 200 of 1000: loss=1.8 " + "l1=0.602" + "l2=1.2 f=-0.0305 shape=(1, 9000, 1)
logits [[ 0.701474   -1.9490832   1.110313    0.01510597]]
Iteration 300 of 1000: loss=1.24 " + "l1=0.0175" + "l2=1.23 f=0.00703 shape=(1, 9000, 1)
logits [[ 0.35054263 -1.7692289   0.73929507  0.70753044]]
Iteration 400 of 1000: loss=0.991 " + "l1=0.000656" + "l2=0.99 f=-0.0057 shape=(1, 9000, 1)
logits [[ 0.31541693 -1.7292044   0.6960837   0.69489145]]
Iteration 500 of 1000: loss=0.863 " + "l1=0" + "l2=0.863 f=-0.0222 shape=(1, 9000, 1)
logits [[ 0.2871495  -1.702635    0.6587873   0.66772574]]
Iteration 600 of 1000: loss=0.775 " + "l1=0" + "l2=0.775 f=-0.0277 shape=(1, 9000, 1)
logits [[ 0.2851491  -1.6795236   0.6336457   0.64999396]]
Iteration 700 of 1000: loss=0.706 " + "l1=0" + "l2=0.706 f=-0.0339 shape=(1, 9000, 1)
logits [[ 0.27032033 -1.6305504   0.6098608   0.6148991 ]]
Iteration 800 of 1000: loss=0.663 " + "l1=0.0101" + "l2=0.653 f=-0.031 shape=(1, 9000, 1)
logits [[ 0.27105328 -1.5907308   0.60694885  0.5885612 ]]
Iteration 900 of 1000: loss=0.635 " + "l1=0" + "l2=0.635 f=-0.0268 shape=(1, 9000, 1)
logits [[ 0.23780301 -1.5779432   0.58591986  0.6470162 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.05 " + "l1=3.05" + "l2=0 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.041178  -3.6606178  3.3013635 -5.353897 ]]
Iteration 100 of 1000: loss=1.96 " + "l1=1.46" + "l2=0.495 f=-0.234 shape=(1, 9000, 1)
logits [[ 2.0989866 -2.7507143  2.1040046 -2.3902364]]
Iteration 200 of 1000: loss=1.62 " + "l1=1.05" + "l2=0.566 f=-0.135 shape=(1, 9000, 1)
logits [[ 1.6039449 -2.3828595  1.734922  -1.4964164]]
Iteration 300 of 1000: loss=1.31 " + "l1=0.687" + "l2=0.626 f=-0.0748 shape=(1, 9000, 1)
logits [[ 1.1303097 -2.1314094  1.4081903 -0.7063831]]
Iteration 400 of 1000: loss=1.07 " + "l1=0.367" + "l2=0.7 f=-0.0168 shape=(1, 9000, 1)
logits [[ 0.77863914 -1.8767639   1.0803343  -0.04922426]]
Iteration 500 of 1000: loss=0.841 " + "l1=0.0819" + "l2=0.759 f=0.00565 shape=(1, 9000, 1)
logits [[ 0.47790837 -1.6806853   0.7386677   0.48671812]]
Iteration 600 of 1000: loss=0.671 " + "l1=0" + "l2=0.671 f=-0.016 shape=(1, 9000, 1)
logits [[ 0.34610724 -1.649393    0.6196652   0.619777  ]]
Iteration 700 of 1000: loss=0.578 " + "l1=0.00364" + "l2=0.574 f=-0.0305 shape=(1, 9000, 1)
logits [[ 0.32389298 -1.6442758   0.6047016   0.5934967 ]]
Iteration 800 of 1000: loss=0.523 " + "l1=0" + "l2=0.523 f=-0.0354 shape=(1, 9000, 1)
logits [[ 0.29684755 -1.6499915   0.60544395  0.6061649 ]]
Iteration 900 of 1000: loss=0.486 " + "l1=0" + "l2=0.486 f=-0.0421 shape=(1, 9000, 1)
logits [[ 0.27129692 -1.6575398   0.6084311   0.60949284]]
--- 308.1819632053375 seconds ---
Adv result:3
Loading record A05591
(1, 10334)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0773 " + "l1=0.0773" + "l2=0 f=-0.652 shape=(1, 9000, 1)
logits [[ 5.214896  -2.5130637  2.3854878 -7.69689  ]]
Iteration 100 of 1000: loss=0.0768 " + "l1=0.0764" + "l2=0.000379 f=-0.65 shape=(1, 9000, 1)
logits [[ 5.171656  -2.4707654  2.3534567 -7.6531277]]
Iteration 200 of 1000: loss=0.0767 " + "l1=0.0763" + "l2=0.000386 f=-0.649 shape=(1, 9000, 1)
logits [[ 5.1656775 -2.4627147  2.3474379 -7.6477475]]
Iteration 300 of 1000: loss=0.0766 " + "l1=0.0761" + "l2=0.000472 f=-0.649 shape=(1, 9000, 1)
logits [[ 5.158183  -2.453329   2.3404295 -7.6408067]]
Iteration 400 of 1000: loss=0.0765 " + "l1=0.076" + "l2=0.000553 f=-0.648 shape=(1, 9000, 1)
logits [[ 5.150936  -2.4443262  2.333721  -7.634109 ]]
Iteration 500 of 1000: loss=0.0765 " + "l1=0.0758" + "l2=0.000662 f=-0.648 shape=(1, 9000, 1)
logits [[ 5.1442466 -2.435751   2.327407  -7.6281667]]
Iteration 600 of 1000: loss=0.0764 " + "l1=0.0757" + "l2=0.000743 f=-0.648 shape=(1, 9000, 1)
logits [[ 5.1378794 -2.4274986  2.3214655 -7.622609 ]]
Iteration 700 of 1000: loss=0.0764 " + "l1=0.0755" + "l2=0.000901 f=-0.647 shape=(1, 9000, 1)
logits [[ 5.132287  -2.4201522  2.3162477 -7.617768 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.773 " + "l1=0.773" + "l2=0 f=-0.652 shape=(1, 9000, 1)
logits [[ 5.214896  -2.5130637  2.3854878 -7.69689  ]]
Iteration 100 of 1000: loss=0.727 " + "l1=0.698" + "l2=0.0288 f=-0.625 shape=(1, 9000, 1)
logits [[ 4.849037  -2.1335244  2.1141818 -7.331644 ]]
Iteration 200 of 1000: loss=0.71 " + "l1=0.67" + "l2=0.04 f=-0.611 shape=(1, 9000, 1)
logits [[ 4.733692  -1.9706155  2.0040224 -7.2108526]]
Iteration 300 of 1000: loss=0.697 " + "l1=0.651" + "l2=0.0468 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.6428695 -1.8639995  1.9360394 -7.1222925]]
Iteration 400 of 1000: loss=0.686 " + "l1=0.633" + "l2=0.053 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.553786  -1.77149    1.8765892 -7.040522 ]]
Iteration 500 of 1000: loss=0.671 " + "l1=0.613" + "l2=0.0582 f=-0.59 shape=(1, 9000, 1)
logits [[ 4.453125  -1.6771141  1.8219061 -6.9585977]]
Iteration 600 of 1000: loss=0.653 " + "l1=0.591" + "l2=0.0617 f=-0.584 shape=(1, 9000, 1)
logits [[ 4.3338394 -1.5758605  1.7756191 -6.869687 ]]
Iteration 700 of 1000: loss=0.635 " + "l1=0.568" + "l2=0.0669 f=-0.577 shape=(1, 9000, 1)
logits [[ 4.2028008 -1.4811836  1.7396666 -6.7679505]]
Iteration 800 of 1000: loss=0.624 " + "l1=0.556" + "l2=0.0687 f=-0.572 shape=(1, 9000, 1)
logits [[ 4.120632  -1.434553   1.71614   -6.6911507]]
Iteration 900 of 1000: loss=0.617 " + "l1=0.545" + "l2=0.0718 f=-0.568 shape=(1, 9000, 1)
logits [[ 4.0528755 -1.3976302  1.6961064 -6.6231146]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.73 " + "l1=7.73" + "l2=0 f=-0.652 shape=(1, 9000, 1)
logits [[ 5.214896  -2.5130637  2.3854878 -7.69689  ]]
Iteration 100 of 1000: loss=3.41 " + "l1=0.672" + "l2=2.74 f=-0.521 shape=(1, 9000, 1)
logits [[ 0.9852264   0.31328887  0.5295966  -3.9101744 ]]
Iteration 200 of 1000: loss=2.23 " + "l1=0" + "l2=2.23 f=-0.556 shape=(1, 9000, 1)
logits [[ 0.6031083  0.6119585  0.4146159 -3.8540392]]
Iteration 300 of 1000: loss=1.94 " + "l1=0" + "l2=1.94 f=-0.552 shape=(1, 9000, 1)
logits [[ 0.6056515   0.6150313   0.40923825 -3.8383973 ]]
Iteration 400 of 1000: loss=1.75 " + "l1=0.00736" + "l2=1.74 f=-0.551 shape=(1, 9000, 1)
logits [[ 0.61167794  0.6043177   0.3949548  -3.816057  ]]
Iteration 500 of 1000: loss=1.58 " + "l1=0.00586" + "l2=1.57 f=-0.544 shape=(1, 9000, 1)
logits [[ 0.6233201   0.6174619   0.36367974 -3.7810512 ]]
Iteration 600 of 1000: loss=1.49 " + "l1=0.0293" + "l2=1.46 f=-0.543 shape=(1, 9000, 1)
logits [[ 0.62460554  0.59530383  0.3514341  -3.7434263 ]]
Iteration 700 of 1000: loss=1.4 " + "l1=0" + "l2=1.4 f=-0.546 shape=(1, 9000, 1)
logits [[ 0.57679474  0.60149115  0.34100378 -3.7031975 ]]
Iteration 800 of 1000: loss=1.34 " + "l1=0.0275" + "l2=1.31 f=-0.541 shape=(1, 9000, 1)
logits [[ 0.612895   0.5853671  0.340366  -3.7040462]]
Iteration 900 of 1000: loss=1.27 " + "l1=0" + "l2=1.27 f=-0.539 shape=(1, 9000, 1)
logits [[ 0.56470317  0.5941265   0.3331146  -3.6469016 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.25 " + "l1=4.25" + "l2=0 f=-0.652 shape=(1, 9000, 1)
logits [[ 5.214896  -2.5130637  2.3854878 -7.69689  ]]
Iteration 100 of 1000: loss=2.91 " + "l1=2.12" + "l2=0.789 f=-0.529 shape=(1, 9000, 1)
logits [[ 3.1334302  -0.72787124  1.1164038  -5.63642   ]]
Iteration 200 of 1000: loss=2.25 " + "l1=0.962" + "l2=1.29 f=-0.491 shape=(1, 9000, 1)
logits [[ 1.7891357   0.03966407  0.66750693 -4.458396  ]]
Iteration 300 of 1000: loss=1.8 " + "l1=0.297" + "l2=1.51 f=-0.516 shape=(1, 9000, 1)
logits [[ 0.94966084  0.410429    0.47263062 -3.898572  ]]
Iteration 400 of 1000: loss=1.47 " + "l1=0.0191" + "l2=1.45 f=-0.518 shape=(1, 9000, 1)
logits [[ 0.6315422   0.5967362   0.37079102 -3.6702216 ]]
Iteration 500 of 1000: loss=1.32 " + "l1=0" + "l2=1.32 f=-0.517 shape=(1, 9000, 1)
logits [[ 0.5936113   0.6033192   0.35917225 -3.6227288 ]]
Iteration 600 of 1000: loss=1.24 " + "l1=0.0104" + "l2=1.23 f=-0.511 shape=(1, 9000, 1)
logits [[ 0.5943407   0.57535934  0.3546322  -3.567531  ]]
Iteration 700 of 1000: loss=1.19 " + "l1=0.0199" + "l2=1.17 f=-0.503 shape=(1, 9000, 1)
logits [[ 0.6023427   0.5661548   0.34346697 -3.5252736 ]]
Iteration 800 of 1000: loss=1.13 " + "l1=0" + "l2=1.13 f=-0.503 shape=(1, 9000, 1)
logits [[ 0.54736125  0.5568822   0.3345555  -3.451563  ]]
Iteration 900 of 1000: loss=1.08 " + "l1=0.0169" + "l2=1.07 f=-0.506 shape=(1, 9000, 1)
logits [[ 0.5342742   0.5036269   0.34956983 -3.4100316 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.51 " + "l1=2.51" + "l2=0 f=-0.652 shape=(1, 9000, 1)
logits [[ 5.214896  -2.5130637  2.3854878 -7.69689  ]]
Iteration 100 of 1000: loss=2.02 " + "l1=1.72" + "l2=0.296 f=-0.55 shape=(1, 9000, 1)
logits [[ 4.014553  -1.2828897  1.5191994 -6.45083  ]]
Iteration 200 of 1000: loss=1.81 " + "l1=1.4" + "l2=0.411 f=-0.521 shape=(1, 9000, 1)
logits [[ 3.4735801  -0.84050316  1.2205594  -5.936552  ]]
Iteration 300 of 1000: loss=1.63 " + "l1=1.11" + "l2=0.521 f=-0.511 shape=(1, 9000, 1)
logits [[ 2.8906136  -0.53531766  1.0111817  -5.408684  ]]
Iteration 400 of 1000: loss=1.49 " + "l1=0.932" + "l2=0.56 f=-0.49 shape=(1, 9000, 1)
logits [[ 2.52514    -0.34147573  0.87348443 -5.0151677 ]]
Iteration 500 of 1000: loss=1.38 " + "l1=0.767" + "l2=0.615 f=-0.476 shape=(1, 9000, 1)
logits [[ 2.1819825  -0.17850493  0.7467882  -4.654575  ]]
Iteration 600 of 1000: loss=1.28 " + "l1=0.592" + "l2=0.691 f=-0.467 shape=(1, 9000, 1)
logits [[ 1.7867793  -0.03482805  0.6677424  -4.288969  ]]
Iteration 700 of 1000: loss=1.21 " + "l1=0.495" + "l2=0.713 f=-0.457 shape=(1, 9000, 1)
logits [[ 1.5788172   0.05519626  0.6190579  -4.0817065 ]]
Iteration 800 of 1000: loss=1.15 " + "l1=0.411" + "l2=0.734 f=-0.446 shape=(1, 9000, 1)
logits [[ 1.3938296   0.12894899  0.56328976 -3.8683896 ]]
Iteration 900 of 1000: loss=1.09 " + "l1=0.35" + "l2=0.744 f=-0.438 shape=(1, 9000, 1)
logits [[ 1.2609786   0.1844799   0.52900594 -3.725572  ]]
--- 290.28804087638855 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0283 " + "l1=0.0283" + "l2=0 f=-0.652 shape=(1, 9000, 1)
logits [[ 5.214896  -2.5130637  2.3854878 -7.69689  ]]
Iteration 100 of 1000: loss=0.0282 " + "l1=0.028" + "l2=0.000169 f=-0.654 shape=(1, 9000, 1)
logits [[ 5.1937466 -2.5233     2.3952758 -7.680302 ]]
Iteration 200 of 1000: loss=0.0281 " + "l1=0.028" + "l2=0.000143 f=-0.654 shape=(1, 9000, 1)
logits [[ 5.193179  -2.523274   2.3955352 -7.6805267]]
Iteration 300 of 1000: loss=0.0281 " + "l1=0.0279" + "l2=0.000159 f=-0.654 shape=(1, 9000, 1)
logits [[ 5.1913285 -2.5245082  2.3968246 -7.6797404]]
Iteration 400 of 1000: loss=0.0281 " + "l1=0.0279" + "l2=0.000202 f=-0.654 shape=(1, 9000, 1)
logits [[ 5.1892185 -2.52601    2.398311  -7.678841 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.283 " + "l1=0.283" + "l2=0 f=-0.652 shape=(1, 9000, 1)
logits [[ 5.214896  -2.5130637  2.3854878 -7.69689  ]]
Iteration 100 of 1000: loss=0.27 " + "l1=0.261" + "l2=0.00834 f=-0.66 shape=(1, 9000, 1)
logits [[ 5.0633836 -2.580697   2.4513595 -7.5745873]]
Iteration 200 of 1000: loss=0.266 " + "l1=0.255" + "l2=0.0105 f=-0.661 shape=(1, 9000, 1)
logits [[ 5.0290756 -2.6072814  2.477538  -7.5452304]]
Iteration 300 of 1000: loss=0.262 " + "l1=0.25" + "l2=0.0121 f=-0.663 shape=(1, 9000, 1)
logits [[ 5.001768  -2.6315022  2.5008206 -7.524409 ]]
Iteration 400 of 1000: loss=0.259 " + "l1=0.245" + "l2=0.0139 f=-0.665 shape=(1, 9000, 1)
logits [[ 4.9730067 -2.6531928  2.5234    -7.503236 ]]
Iteration 500 of 1000: loss=0.255 " + "l1=0.24" + "l2=0.0152 f=-0.666 shape=(1, 9000, 1)
logits [[ 4.9493103 -2.678005   2.5506527 -7.4856853]]
Iteration 600 of 1000: loss=0.251 " + "l1=0.235" + "l2=0.0162 f=-0.668 shape=(1, 9000, 1)
logits [[ 4.927009  -2.708144   2.5799296 -7.4695506]]
Iteration 700 of 1000: loss=0.245 " + "l1=0.227" + "l2=0.0179 f=-0.669 shape=(1, 9000, 1)
logits [[ 4.9021544 -2.7559664  2.6283298 -7.449438 ]]
Iteration 800 of 1000: loss=0.239 " + "l1=0.22" + "l2=0.0192 f=-0.673 shape=(1, 9000, 1)
logits [[ 4.864077  -2.8000543  2.6636176 -7.4191957]]
Iteration 900 of 1000: loss=0.233 " + "l1=0.211" + "l2=0.0213 f=-0.679 shape=(1, 9000, 1)
logits [[ 4.810084  -2.8512018  2.6982965 -7.374685 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.83 " + "l1=2.83" + "l2=0 f=-0.652 shape=(1, 9000, 1)
logits [[ 5.214896  -2.5130637  2.3854878 -7.69689  ]]
Iteration 100 of 1000: loss=1.46 " + "l1=0.678" + "l2=0.784 f=-0.676 shape=(1, 9000, 1)
logits [[ 3.6994824 -3.1534216  3.0213094 -6.2705445]]
Iteration 200 of 1000: loss=0.985 " + "l1=0.0244" + "l2=0.96 f=-0.684 shape=(1, 9000, 1)
logits [[ 3.2114894 -3.3434565  3.1870606 -5.7930245]]
Iteration 300 of 1000: loss=0.718 " + "l1=0" + "l2=0.718 f=-0.689 shape=(1, 9000, 1)
logits [[ 3.2098644 -3.3914342  3.2236142 -5.7975855]]
Iteration 400 of 1000: loss=0.538 " + "l1=0.000979" + "l2=0.537 f=-0.695 shape=(1, 9000, 1)
logits [[ 3.2065191 -3.3911812  3.20554   -5.800503 ]]
Iteration 500 of 1000: loss=0.424 " + "l1=0" + "l2=0.424 f=-0.693 shape=(1, 9000, 1)
logits [[ 3.188885  -3.3943772  3.2052844 -5.773547 ]]
Iteration 600 of 1000: loss=0.344 " + "l1=0" + "l2=0.344 f=-0.692 shape=(1, 9000, 1)
logits [[ 3.1981487 -3.3967898  3.206017  -5.77464  ]]
Iteration 700 of 1000: loss=0.296 " + "l1=0" + "l2=0.296 f=-0.686 shape=(1, 9000, 1)
logits [[ 3.1888475 -3.3861039  3.1989527 -5.7450814]]
Iteration 800 of 1000: loss=0.259 " + "l1=0" + "l2=0.259 f=-0.679 shape=(1, 9000, 1)
logits [[ 3.1743355 -3.3697915  3.1805677 -5.6999946]]
Iteration 900 of 1000: loss=0.232 " + "l1=0" + "l2=0.232 f=-0.673 shape=(1, 9000, 1)
logits [[ 3.1606693 -3.3638072  3.165356  -5.6545434]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.56 " + "l1=1.56" + "l2=0 f=-0.652 shape=(1, 9000, 1)
logits [[ 5.214896  -2.5130637  2.3854878 -7.69689  ]]
Iteration 100 of 1000: loss=1.15 " + "l1=0.886" + "l2=0.261 f=-0.673 shape=(1, 9000, 1)
logits [[ 4.3974447 -2.9109085  2.786339  -6.964643 ]]
Iteration 200 of 1000: loss=0.929 " + "l1=0.561" + "l2=0.369 f=-0.676 shape=(1, 9000, 1)
logits [[ 3.9915566 -3.113059   2.9724023 -6.5567217]]
Iteration 300 of 1000: loss=0.774 " + "l1=0.387" + "l2=0.387 f=-0.685 shape=(1, 9000, 1)
logits [[ 3.7868338 -3.2480345  3.0826828 -6.3625956]]
Iteration 400 of 1000: loss=0.585 " + "l1=0.195" + "l2=0.389 f=-0.691 shape=(1, 9000, 1)
logits [[ 3.5019994 -3.3536756  3.146906  -6.0600705]]
Iteration 500 of 1000: loss=0.431 " + "l1=0.0316" + "l2=0.4 f=-0.69 shape=(1, 9000, 1)
logits [[ 3.2906184 -3.4349072  3.2331057 -5.8494396]]
Iteration 600 of 1000: loss=0.351 " + "l1=0.009" + "l2=0.342 f=-0.688 shape=(1, 9000, 1)
logits [[ 3.262701  -3.449744   3.246332  -5.8113394]]
Iteration 700 of 1000: loss=0.308 " + "l1=0.00305" + "l2=0.305 f=-0.684 shape=(1, 9000, 1)
logits [[ 3.2366567 -3.4380345  3.2311099 -5.766342 ]]
Iteration 800 of 1000: loss=0.278 " + "l1=0.00179" + "l2=0.276 f=-0.679 shape=(1, 9000, 1)
logits [[ 3.203137  -3.417326   3.1998777 -5.701692 ]]
Iteration 900 of 1000: loss=0.253 " + "l1=0" + "l2=0.253 f=-0.672 shape=(1, 9000, 1)
logits [[ 3.1740513 -3.3980162  3.1751053 -5.637592 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.92 " + "l1=0.92" + "l2=0 f=-0.652 shape=(1, 9000, 1)
logits [[ 5.214896  -2.5130637  2.3854878 -7.69689  ]]
Iteration 100 of 1000: loss=0.783 " + "l1=0.697" + "l2=0.0857 f=-0.666 shape=(1, 9000, 1)
logits [[ 4.732204  -2.7142694  2.587434  -7.270087 ]]
Iteration 200 of 1000: loss=0.72 " + "l1=0.597" + "l2=0.123 f=-0.668 shape=(1, 9000, 1)
logits [[ 4.5810227 -2.8741305  2.7440407 -7.1232677]]
Iteration 300 of 1000: loss=0.659 " + "l1=0.504" + "l2=0.155 f=-0.672 shape=(1, 9000, 1)
logits [[ 4.4042625 -2.9888978  2.8526895 -6.9566226]]
Iteration 400 of 1000: loss=0.568 " + "l1=0.387" + "l2=0.181 f=-0.678 shape=(1, 9000, 1)
logits [[ 4.133113  -3.1094227  2.9411747 -6.6770387]]
Iteration 500 of 1000: loss=0.486 " + "l1=0.299" + "l2=0.187 f=-0.692 shape=(1, 9000, 1)
logits [[ 3.9181988 -3.2218294  2.9989035 -6.4647856]]
Iteration 600 of 1000: loss=0.428 " + "l1=0.236" + "l2=0.191 f=-0.698 shape=(1, 9000, 1)
logits [[ 3.7737222 -3.2748024  3.04695   -6.3379617]]
Iteration 700 of 1000: loss=0.377 " + "l1=0.178" + "l2=0.2 f=-0.696 shape=(1, 9000, 1)
logits [[ 3.6477602 -3.3049586  3.1012826 -6.2287626]]
Iteration 800 of 1000: loss=0.339 " + "l1=0.134" + "l2=0.205 f=-0.692 shape=(1, 9000, 1)
logits [[ 3.543044  -3.315748   3.1310928 -6.124835 ]]
Iteration 900 of 1000: loss=0.31 " + "l1=0.0998" + "l2=0.21 f=-0.686 shape=(1, 9000, 1)
logits [[ 3.4566414 -3.3291128  3.1495743 -6.0207934]]
--- 273.4050769805908 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.129 " + "l1=0.129" + "l2=0 f=-0.652 shape=(1, 9000, 1)
logits [[ 5.214896  -2.5130637  2.3854878 -7.69689  ]]
Iteration 100 of 1000: loss=0.128 " + "l1=0.128" + "l2=0.000571 f=-0.649 shape=(1, 9000, 1)
logits [[ 5.1562023 -2.4890122  2.3584828 -7.623074 ]]
Iteration 200 of 1000: loss=0.128 " + "l1=0.128" + "l2=0.000611 f=-0.649 shape=(1, 9000, 1)
logits [[ 5.147463  -2.4846432  2.3541584 -7.612945 ]]
Iteration 300 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.000697 f=-0.648 shape=(1, 9000, 1)
logits [[ 5.138145  -2.4791636  2.3489485 -7.601347 ]]
Iteration 400 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.000805 f=-0.648 shape=(1, 9000, 1)
logits [[ 5.1298685 -2.4737654  2.3439438 -7.590797 ]]
Iteration 500 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.000957 f=-0.647 shape=(1, 9000, 1)
logits [[ 5.1225004 -2.468253   2.339153  -7.581356 ]]
Iteration 600 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.00105 f=-0.646 shape=(1, 9000, 1)
logits [[ 5.115794  -2.4632034  2.3348963 -7.573032 ]]
Iteration 700 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.00124 f=-0.646 shape=(1, 9000, 1)
logits [[ 5.1096373 -2.4586167  2.3310792 -7.565468 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.29 " + "l1=1.29" + "l2=0 f=-0.652 shape=(1, 9000, 1)
logits [[ 5.214896  -2.5130637  2.3854878 -7.69689  ]]
Iteration 100 of 1000: loss=1.22 " + "l1=1.18" + "l2=0.0464 f=-0.623 shape=(1, 9000, 1)
logits [[ 4.7034264 -2.2909083  2.1468785 -7.05069  ]]
Iteration 200 of 1000: loss=1.2 " + "l1=1.14" + "l2=0.0611 f=-0.609 shape=(1, 9000, 1)
logits [[ 4.5427427 -2.2204392  2.0745456 -6.8327856]]
Iteration 300 of 1000: loss=1.18 " + "l1=1.11" + "l2=0.0745 f=-0.597 shape=(1, 9000, 1)
logits [[ 4.40882   -2.1544943  2.0120301 -6.655961 ]]
Iteration 400 of 1000: loss=1.17 " + "l1=1.08" + "l2=0.0853 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.295737  -2.1085584  1.9657155 -6.5066257]]
Iteration 500 of 1000: loss=1.15 " + "l1=1.05" + "l2=0.0954 f=-0.579 shape=(1, 9000, 1)
logits [[ 4.184566  -2.057275   1.9218845 -6.3648663]]
Iteration 600 of 1000: loss=1.13 " + "l1=1.03" + "l2=0.103 f=-0.568 shape=(1, 9000, 1)
logits [[ 4.0681195 -1.9852555  1.8768842 -6.2324567]]
Iteration 700 of 1000: loss=1.11 " + "l1=0.996" + "l2=0.115 f=-0.555 shape=(1, 9000, 1)
logits [[ 3.89872   -1.8768113  1.82151   -6.062313 ]]
Iteration 800 of 1000: loss=1.09 " + "l1=0.961" + "l2=0.128 f=-0.545 shape=(1, 9000, 1)
logits [[ 3.7192636 -1.7892306  1.7854815 -5.893778 ]]
Iteration 900 of 1000: loss=1.07 " + "l1=0.927" + "l2=0.14 f=-0.536 shape=(1, 9000, 1)
logits [[ 3.5432975 -1.7318286  1.7649541 -5.7221274]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.9 " + "l1=12.9" + "l2=0 f=-0.652 shape=(1, 9000, 1)
logits [[ 5.214896  -2.5130637  2.3854878 -7.69689  ]]
Iteration 100 of 1000: loss=5.48 " + "l1=1.37" + "l2=4.12 f=-0.247 shape=(1, 9000, 1)
logits [[ 0.2942235  -0.51726264  0.30052388 -1.0660079 ]]
Iteration 200 of 1000: loss=3.7 " + "l1=0.0294" + "l2=3.67 f=-0.238 shape=(1, 9000, 1)
logits [[-0.2233396  -0.2749185  -0.21229689 -0.24173313]]
Iteration 300 of 1000: loss=3.09 " + "l1=0" + "l2=3.09 f=-0.244 shape=(1, 9000, 1)
logits [[-0.21430036 -0.33780047 -0.21695776 -0.2084108 ]]
Iteration 400 of 1000: loss=2.75 " + "l1=0.0102" + "l2=2.74 f=-0.247 shape=(1, 9000, 1)
logits [[-0.18176892 -0.4111592  -0.20174079 -0.19196332]]
Iteration 500 of 1000: loss=2.53 " + "l1=0.054" + "l2=2.48 f=-0.255 shape=(1, 9000, 1)
logits [[-0.16878572 -0.47383907 -0.16123946 -0.21526375]]
Iteration 600 of 1000: loss=2.34 " + "l1=0.0229" + "l2=2.32 f=-0.258 shape=(1, 9000, 1)
logits [[-0.16109018 -0.5279294  -0.16066352 -0.18359521]]
Iteration 700 of 1000: loss=2.21 " + "l1=0" + "l2=2.21 f=-0.262 shape=(1, 9000, 1)
logits [[-0.16172628 -0.5761799  -0.15939648 -0.151494  ]]
Iteration 800 of 1000: loss=2.1 " + "l1=0" + "l2=2.1 f=-0.259 shape=(1, 9000, 1)
logits [[-0.13862774 -0.62460726 -0.14822946 -0.12453604]]
Iteration 900 of 1000: loss=1.98 " + "l1=0.00274" + "l2=1.98 f=-0.255 shape=(1, 9000, 1)
logits [[-0.1184863  -0.65583074 -0.12563379 -0.12123118]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.1 " + "l1=7.1" + "l2=0 f=-0.652 shape=(1, 9000, 1)
logits [[ 5.214896  -2.5130637  2.3854878 -7.69689  ]]
Iteration 100 of 1000: loss=4.58 " + "l1=2.74" + "l2=1.84 f=-0.395 shape=(1, 9000, 1)
logits [[ 1.7780596 -1.1562507  0.9995298 -3.1993484]]
Iteration 200 of 1000: loss=3.54 " + "l1=1.25" + "l2=2.29 f=-0.301 shape=(1, 9000, 1)
logits [[ 0.635707   -0.75564563  0.54320586 -1.6290379 ]]
Iteration 300 of 1000: loss=2.76 " + "l1=0.478" + "l2=2.28 f=-0.25 shape=(1, 9000, 1)
logits [[ 0.099223   -0.4385183   0.10532208 -0.76440066]]
Iteration 400 of 1000: loss=2.16 " + "l1=0.0287" + "l2=2.13 f=-0.233 shape=(1, 9000, 1)
logits [[-0.13886443 -0.46031624 -0.14318681 -0.19106701]]
Iteration 500 of 1000: loss=1.84 " + "l1=0.0453" + "l2=1.79 f=-0.22 shape=(1, 9000, 1)
logits [[-0.07340769 -0.5757408  -0.07547829 -0.15568435]]
Iteration 600 of 1000: loss=1.64 " + "l1=0" + "l2=1.64 f=-0.204 shape=(1, 9000, 1)
logits [[-0.05765919 -0.6771084  -0.04873936 -0.03064861]]
Iteration 700 of 1000: loss=1.48 " + "l1=0" + "l2=1.48 f=-0.192 shape=(1, 9000, 1)
logits [[-6.8524163e-03 -7.6785231e-01 -4.5001367e-04  6.6654719e-03]]
Iteration 800 of 1000: loss=1.39 " + "l1=0.00634" + "l2=1.38 f=-0.184 shape=(1, 9000, 1)
logits [[ 0.03067573 -0.82536733  0.03583319  0.02431008]]
Iteration 900 of 1000: loss=1.31 " + "l1=0" + "l2=1.31 f=-0.169 shape=(1, 9000, 1)
logits [[ 0.05357133 -0.8630281   0.0538554   0.07947499]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.2 " + "l1=4.2" + "l2=0 f=-0.652 shape=(1, 9000, 1)
logits [[ 5.214896  -2.5130637  2.3854878 -7.69689  ]]
Iteration 100 of 1000: loss=3.4 " + "l1=2.83" + "l2=0.566 f=-0.54 shape=(1, 9000, 1)
logits [[ 3.3748171 -1.7615963  1.5579481 -5.329948 ]]
Iteration 200 of 1000: loss=2.96 " + "l1=2" + "l2=0.965 f=-0.44 shape=(1, 9000, 1)
logits [[ 2.2611105 -1.3046175  1.1686066 -3.8868656]]
Iteration 300 of 1000: loss=2.55 " + "l1=1.47" + "l2=1.08 f=-0.387 shape=(1, 9000, 1)
logits [[ 1.554536  -1.0841031  0.9382438 -2.9576433]]
Iteration 400 of 1000: loss=2.19 " + "l1=1.08" + "l2=1.11 f=-0.341 shape=(1, 9000, 1)
logits [[ 1.096245   -1.1104952   0.88232344 -2.2317066 ]]
Iteration 500 of 1000: loss=1.82 " + "l1=0.734" + "l2=1.09 f=-0.286 shape=(1, 9000, 1)
logits [[ 0.71367365 -1.0233817   0.7131107  -1.545805  ]]
Iteration 600 of 1000: loss=1.61 " + "l1=0.556" + "l2=1.06 f=-0.254 shape=(1, 9000, 1)
logits [[ 0.55923134 -0.9804426   0.55831015 -1.1511316 ]]
Iteration 700 of 1000: loss=1.48 " + "l1=0.393" + "l2=1.09 f=-0.222 shape=(1, 9000, 1)
logits [[ 0.42070785 -0.9444044   0.4223584  -0.7870453 ]]
Iteration 800 of 1000: loss=1.36 " + "l1=0.244" + "l2=1.12 f=-0.189 shape=(1, 9000, 1)
logits [[ 0.2923392  -0.88726056  0.29421666 -0.45576596]]
Iteration 900 of 1000: loss=1.25 " + "l1=0.11" + "l2=1.14 f=-0.165 shape=(1, 9000, 1)
logits [[ 0.1787825  -0.85441667  0.17752767 -0.16030851]]
--- 294.15617179870605 seconds ---
Adv result:3
Loading record A05616
(1, 12068)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0873 " + "l1=0.0873" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.7401896 -1.9890689  2.7936292 -9.815694 ]]
Iteration 100 of 1000: loss=0.0868 " + "l1=0.0864" + "l2=0.000348 f=-0.565 shape=(1, 9000, 1)
logits [[ 6.6961184 -1.9471102  2.7667975 -9.776034 ]]
Iteration 200 of 1000: loss=0.0866 " + "l1=0.0863" + "l2=0.000366 f=-0.564 shape=(1, 9000, 1)
logits [[ 6.689674  -1.9385055  2.7607558 -9.769777 ]]
Iteration 300 of 1000: loss=0.0866 " + "l1=0.0861" + "l2=0.000458 f=-0.564 shape=(1, 9000, 1)
logits [[ 6.681777  -1.9293181  2.7543218 -9.762263 ]]
Iteration 400 of 1000: loss=0.0865 " + "l1=0.086" + "l2=0.000544 f=-0.563 shape=(1, 9000, 1)
logits [[ 6.674509  -1.921234   2.7487967 -9.755458 ]]
Iteration 500 of 1000: loss=0.0865 " + "l1=0.0858" + "l2=0.000662 f=-0.563 shape=(1, 9000, 1)
logits [[ 6.6683016 -1.9142654  2.7441254 -9.749868 ]]
Iteration 600 of 1000: loss=0.0865 " + "l1=0.0857" + "l2=0.000733 f=-0.563 shape=(1, 9000, 1)
logits [[ 6.6630774 -1.9089929  2.740543  -9.745492 ]]
Iteration 700 of 1000: loss=0.0865 " + "l1=0.0856" + "l2=0.000868 f=-0.563 shape=(1, 9000, 1)
logits [[ 6.6586485 -1.9040025  2.7372534 -9.741902 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.873 " + "l1=0.873" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.7401896 -1.9890689  2.7936292 -9.815694 ]]
Iteration 100 of 1000: loss=0.828 " + "l1=0.804" + "l2=0.0247 f=-0.546 shape=(1, 9000, 1)
logits [[ 6.378692  -1.6571274  2.5858555 -9.491298 ]]
Iteration 200 of 1000: loss=0.81 " + "l1=0.775" + "l2=0.0355 f=-0.538 shape=(1, 9000, 1)
logits [[ 6.2182484 -1.529477   2.5075371 -9.348621 ]]
Iteration 300 of 1000: loss=0.796 " + "l1=0.75" + "l2=0.0465 f=-0.534 shape=(1, 9000, 1)
logits [[ 6.0687733 -1.4305145  2.4521916 -9.227539 ]]
Iteration 400 of 1000: loss=0.783 " + "l1=0.727" + "l2=0.0563 f=-0.532 shape=(1, 9000, 1)
logits [[ 5.923878  -1.3463826  2.408932  -9.114167 ]]
Iteration 500 of 1000: loss=0.766 " + "l1=0.696" + "l2=0.0695 f=-0.539 shape=(1, 9000, 1)
logits [[ 5.7122335 -1.2511232  2.3650339 -8.980276 ]]
Iteration 600 of 1000: loss=0.75 " + "l1=0.674" + "l2=0.076 f=-0.541 shape=(1, 9000, 1)
logits [[ 5.560696  -1.1811231  2.3319693 -8.8754225]]
Iteration 700 of 1000: loss=0.74 " + "l1=0.658" + "l2=0.0821 f=-0.539 shape=(1, 9000, 1)
logits [[ 5.4501715 -1.1251718  2.3108675 -8.792213 ]]
Iteration 800 of 1000: loss=0.731 " + "l1=0.645" + "l2=0.0867 f=-0.538 shape=(1, 9000, 1)
logits [[ 5.363591  -1.0817152  2.2960007 -8.7296295]]
Iteration 900 of 1000: loss=0.725 " + "l1=0.636" + "l2=0.0889 f=-0.536 shape=(1, 9000, 1)
logits [[ 5.3065367 -1.0537151  2.285841  -8.683822 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.73 " + "l1=8.73" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.7401896 -1.9890689  2.7936292 -9.815694 ]]
Iteration 100 of 1000: loss=4.69 " + "l1=2.33" + "l2=2.36 f=-0.536 shape=(1, 9000, 1)
logits [[ 2.4154625  0.0880465  1.8272531 -6.476725 ]]
Iteration 200 of 1000: loss=3.09 " + "l1=0.827" + "l2=2.27 f=-0.539 shape=(1, 9000, 1)
logits [[ 1.494058   0.6831847  1.5099602 -5.8439226]]
Iteration 300 of 1000: loss=2.28 " + "l1=0.309" + "l2=1.97 f=-0.527 shape=(1, 9000, 1)
logits [[ 1.2624437  0.9632268  1.2718991 -5.604753 ]]
Iteration 400 of 1000: loss=1.87 " + "l1=0.0427" + "l2=1.82 f=-0.527 shape=(1, 9000, 1)
logits [[ 1.0948474  1.0896298  1.1323168 -5.426532 ]]
Iteration 500 of 1000: loss=1.59 " + "l1=0.0093" + "l2=1.58 f=-0.512 shape=(1, 9000, 1)
logits [[ 1.0584401  1.0755975  1.0849022 -5.267435 ]]
Iteration 600 of 1000: loss=1.4 " + "l1=0.0102" + "l2=1.39 f=-0.506 shape=(1, 9000, 1)
logits [[ 1.0585885  1.0555397  1.0657641 -5.2028656]]
Iteration 700 of 1000: loss=1.26 " + "l1=0.026" + "l2=1.24 f=-0.499 shape=(1, 9000, 1)
logits [[ 1.0536115  1.02766    1.0475776 -5.123648 ]]
Iteration 800 of 1000: loss=1.13 " + "l1=0" + "l2=1.13 f=-0.492 shape=(1, 9000, 1)
logits [[ 1.003243   1.0142972  1.0106496 -4.99529  ]]
Iteration 900 of 1000: loss=1.03 " + "l1=0" + "l2=1.03 f=-0.474 shape=(1, 9000, 1)
logits [[ 0.97196245  1.0084667   0.9946481  -4.871417  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.8 " + "l1=4.8" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.7401896 -1.9890689  2.7936292 -9.815694 ]]
Iteration 100 of 1000: loss=3.44 " + "l1=2.69" + "l2=0.745 f=-0.533 shape=(1, 9000, 1)
logits [[ 4.2930403 -0.6041107  2.1100798 -7.9302435]]
Iteration 200 of 1000: loss=2.83 " + "l1=1.8" + "l2=1.03 f=-0.52 shape=(1, 9000, 1)
logits [[ 3.1350439  -0.13568158  1.8973354  -6.9776893 ]]
Iteration 300 of 1000: loss=2.18 " + "l1=0.779" + "l2=1.4 f=-0.54 shape=(1, 9000, 1)
logits [[ 1.799516    0.38390094  1.791241   -6.1351724 ]]
Iteration 400 of 1000: loss=1.74 " + "l1=0.536" + "l2=1.2 f=-0.526 shape=(1, 9000, 1)
logits [[ 1.5884081  0.6184241  1.5935199 -5.903973 ]]
Iteration 500 of 1000: loss=1.51 " + "l1=0.425" + "l2=1.08 f=-0.501 shape=(1, 9000, 1)
logits [[ 1.4735963  0.7013411  1.4635309 -5.6438227]]
Iteration 600 of 1000: loss=1.36 " + "l1=0.315" + "l2=1.05 f=-0.489 shape=(1, 9000, 1)
logits [[ 1.3382534  0.7777634  1.3512673 -5.4217515]]
Iteration 700 of 1000: loss=1.24 " + "l1=0.232" + "l2=1.01 f=-0.48 shape=(1, 9000, 1)
logits [[ 1.2339123  0.8457294  1.2677292 -5.269101 ]]
Iteration 800 of 1000: loss=1.14 " + "l1=0.166" + "l2=0.972 f=-0.47 shape=(1, 9000, 1)
logits [[ 1.1373119  0.8866655  1.1893885 -5.094149 ]]
Iteration 900 of 1000: loss=1.04 " + "l1=0.142" + "l2=0.898 f=-0.46 shape=(1, 9000, 1)
logits [[ 1.1504446  0.8918134  1.1472441 -5.0306406]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=6.77 " + "l1=6.77" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.7401896 -1.9890689  2.7936292 -9.815694 ]]
Iteration 100 of 1000: loss=4.24 " + "l1=2.81" + "l2=1.43 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.377104   -0.24949996  1.9465493  -7.1818495 ]]
Iteration 200 of 1000: loss=2.9 " + "l1=1" + "l2=1.89 f=-0.551 shape=(1, 9000, 1)
logits [[ 1.7177783   0.42699668  1.7160919  -6.064376  ]]
Iteration 300 of 1000: loss=2.25 " + "l1=0.572" + "l2=1.68 f=-0.539 shape=(1, 9000, 1)
logits [[ 1.4465629  0.7325622  1.4700276 -5.8044376]]
Iteration 400 of 1000: loss=1.85 " + "l1=0.35" + "l2=1.5 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.298836   0.8768326  1.3281009 -5.574443 ]]
Iteration 500 of 1000: loss=1.6 " + "l1=0.231" + "l2=1.37 f=-0.507 shape=(1, 9000, 1)
logits [[ 1.2155924   0.91974705  1.2177695  -5.382604  ]]
Iteration 600 of 1000: loss=1.39 " + "l1=0.0332" + "l2=1.35 f=-0.498 shape=(1, 9000, 1)
logits [[ 1.0354677  1.0000123  1.0428137 -5.0696735]]
Iteration 700 of 1000: loss=1.25 " + "l1=0.00319" + "l2=1.25 f=-0.486 shape=(1, 9000, 1)
logits [[ 0.9838058  0.9928887  0.9970016 -4.9194818]]
Iteration 800 of 1000: loss=1.11 " + "l1=0.00202" + "l2=1.11 f=-0.481 shape=(1, 9000, 1)
logits [[ 0.965338    0.96273685  0.96517414 -4.818767  ]]
Iteration 900 of 1000: loss=0.982 " + "l1=0" + "l2=0.982 f=-0.46 shape=(1, 9000, 1)
logits [[ 0.9217966  0.95298    0.9508663 -4.667462 ]]
--- 292.4874014854431 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0395 " + "l1=0.0395" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.7401896 -1.9890689  2.7936292 -9.815694 ]]
Iteration 100 of 1000: loss=0.0393 " + "l1=0.0391" + "l2=0.000165 f=-0.567 shape=(1, 9000, 1)
logits [[ 6.7185073 -1.9935695  2.8044226 -9.798306 ]]
Iteration 200 of 1000: loss=0.0393 " + "l1=0.0391" + "l2=0.000136 f=-0.567 shape=(1, 9000, 1)
logits [[ 6.7182317 -1.9939936  2.8052053 -9.798113 ]]
Iteration 300 of 1000: loss=0.0393 " + "l1=0.0391" + "l2=0.000171 f=-0.567 shape=(1, 9000, 1)
logits [[ 6.716246  -1.9947847  2.8068252 -9.796489 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.395 " + "l1=0.395" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.7401896 -1.9890689  2.7936292 -9.815694 ]]
Iteration 100 of 1000: loss=0.38 " + "l1=0.373" + "l2=0.00758 f=-0.565 shape=(1, 9000, 1)
logits [[ 6.5947957 -2.0219908  2.8694234 -9.703555 ]]
Iteration 200 of 1000: loss=0.374 " + "l1=0.361" + "l2=0.0124 f=-0.563 shape=(1, 9000, 1)
logits [[ 6.530159  -2.0444195  2.9155557 -9.654066 ]]
Iteration 300 of 1000: loss=0.369 " + "l1=0.352" + "l2=0.0168 f=-0.562 shape=(1, 9000, 1)
logits [[ 6.4726415 -2.0626652  2.9512806 -9.608697 ]]
Iteration 400 of 1000: loss=0.365 " + "l1=0.344" + "l2=0.0211 f=-0.561 shape=(1, 9000, 1)
logits [[ 6.4184303 -2.0774872  2.9823377 -9.567658 ]]
Iteration 500 of 1000: loss=0.36 " + "l1=0.335" + "l2=0.0255 f=-0.561 shape=(1, 9000, 1)
logits [[ 6.358755  -2.090138   3.0105898 -9.522157 ]]
Iteration 600 of 1000: loss=0.355 " + "l1=0.325" + "l2=0.03 f=-0.562 shape=(1, 9000, 1)
logits [[ 6.283097  -2.0965729  3.0319295 -9.467339 ]]
Iteration 700 of 1000: loss=0.35 " + "l1=0.318" + "l2=0.0326 f=-0.563 shape=(1, 9000, 1)
logits [[ 6.225786  -2.102196   3.0499222 -9.424732 ]]
Iteration 800 of 1000: loss=0.346 " + "l1=0.312" + "l2=0.034 f=-0.563 shape=(1, 9000, 1)
logits [[ 6.1861043 -2.1093223  3.0647666 -9.391597 ]]
Iteration 900 of 1000: loss=0.342 " + "l1=0.307" + "l2=0.0355 f=-0.562 shape=(1, 9000, 1)
logits [[ 6.147807  -2.1159859  3.0785453 -9.358667 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.95 " + "l1=3.95" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.7401896 -1.9890689  2.7936292 -9.815694 ]]
Iteration 100 of 1000: loss=1.89 " + "l1=0.668" + "l2=1.22 f=-0.551 shape=(1, 9000, 1)
logits [[ 4.156888  -1.96801    3.4891434 -7.8805165]]
Iteration 200 of 1000: loss=1.09 " + "l1=0.0319" + "l2=1.06 f=-0.571 shape=(1, 9000, 1)
logits [[ 3.6312723 -1.8266737  3.5993497 -7.6879735]]
Iteration 300 of 1000: loss=0.88 " + "l1=0" + "l2=0.88 f=-0.582 shape=(1, 9000, 1)
logits [[ 3.595931  -1.8071796  3.6014729 -7.7175717]]
Iteration 400 of 1000: loss=0.765 " + "l1=0" + "l2=0.765 f=-0.587 shape=(1, 9000, 1)
logits [[ 3.5860016 -1.8112181  3.5982296 -7.7218633]]
Iteration 500 of 1000: loss=0.68 " + "l1=0.00608" + "l2=0.674 f=-0.585 shape=(1, 9000, 1)
logits [[ 3.5881367 -1.8242358  3.582053  -7.6876526]]
Iteration 600 of 1000: loss=0.609 " + "l1=0" + "l2=0.609 f=-0.584 shape=(1, 9000, 1)
logits [[ 3.5711741 -1.859743   3.5746155 -7.623695 ]]
Iteration 700 of 1000: loss=0.553 " + "l1=0" + "l2=0.553 f=-0.582 shape=(1, 9000, 1)
logits [[ 3.5477645 -1.8852272  3.5589643 -7.550205 ]]
Iteration 800 of 1000: loss=0.499 " + "l1=0" + "l2=0.499 f=-0.579 shape=(1, 9000, 1)
logits [[ 3.5265656 -1.8960065  3.5320642 -7.477391 ]]
Iteration 900 of 1000: loss=0.465 " + "l1=0" + "l2=0.465 f=-0.572 shape=(1, 9000, 1)
logits [[ 3.4822443 -1.8926016  3.5136592 -7.3916316]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.17 " + "l1=2.17" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.7401896 -1.9890689  2.7936292 -9.815694 ]]
Iteration 100 of 1000: loss=1.59 " + "l1=1.25" + "l2=0.341 f=-0.563 shape=(1, 9000, 1)
logits [[ 5.5237575 -2.1229894  3.259273  -8.911377 ]]
Iteration 200 of 1000: loss=1.24 " + "l1=0.644" + "l2=0.594 f=-0.548 shape=(1, 9000, 1)
logits [[ 4.6019773 -1.992778   3.4319532 -8.232403 ]]
Iteration 300 of 1000: loss=1.01 " + "l1=0.283" + "l2=0.727 f=-0.56 shape=(1, 9000, 1)
logits [[ 4.0200224 -1.9184378  3.5061853 -7.846493 ]]
Iteration 400 of 1000: loss=0.769 " + "l1=0.0093" + "l2=0.76 f=-0.576 shape=(1, 9000, 1)
logits [[ 3.5704484 -1.7910244  3.553532  -7.637136 ]]
Iteration 500 of 1000: loss=0.64 " + "l1=0" + "l2=0.64 f=-0.58 shape=(1, 9000, 1)
logits [[ 3.5032735 -1.7490816  3.5071037 -7.581328 ]]
Iteration 600 of 1000: loss=0.551 " + "l1=0.00096" + "l2=0.55 f=-0.571 shape=(1, 9000, 1)
logits [[ 3.4964142 -1.7561531  3.4946692 -7.5172687]]
Iteration 700 of 1000: loss=0.487 " + "l1=0" + "l2=0.487 f=-0.553 shape=(1, 9000, 1)
logits [[ 3.485124  -1.7842183  3.5007596 -7.4142942]]
Iteration 800 of 1000: loss=0.432 " + "l1=0" + "l2=0.432 f=-0.534 shape=(1, 9000, 1)
logits [[ 3.472703  -1.8110604  3.4847844 -7.2843432]]
Iteration 900 of 1000: loss=0.395 " + "l1=0" + "l2=0.395 f=-0.517 shape=(1, 9000, 1)
logits [[ 3.4416704 -1.8208654  3.4602547 -7.147731 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.28 " + "l1=1.28" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.7401896 -1.9890689  2.7936292 -9.815694 ]]
Iteration 100 of 1000: loss=1.09 " + "l1=0.976" + "l2=0.116 f=-0.572 shape=(1, 9000, 1)
logits [[ 6.0750985 -2.1028538  3.072457  -9.334249 ]]
Iteration 200 of 1000: loss=0.981 " + "l1=0.798" + "l2=0.183 f=-0.559 shape=(1, 9000, 1)
logits [[ 5.722223  -2.1746337  3.2665572 -9.050874 ]]
Iteration 300 of 1000: loss=0.909 " + "l1=0.684" + "l2=0.226 f=-0.552 shape=(1, 9000, 1)
logits [[ 5.46509   -2.1967638  3.361062  -8.838808 ]]
Iteration 400 of 1000: loss=0.86 " + "l1=0.593" + "l2=0.267 f=-0.54 shape=(1, 9000, 1)
logits [[ 5.26211   -2.1939232  3.4371707 -8.663931 ]]
Iteration 500 of 1000: loss=0.811 " + "l1=0.513" + "l2=0.299 f=-0.529 shape=(1, 9000, 1)
logits [[ 5.0641365 -2.1790795  3.4870644 -8.488042 ]]
Iteration 600 of 1000: loss=0.763 " + "l1=0.439" + "l2=0.324 f=-0.527 shape=(1, 9000, 1)
logits [[ 4.8798375 -2.1743708  3.5284004 -8.340194 ]]
Iteration 700 of 1000: loss=0.692 " + "l1=0.347" + "l2=0.346 f=-0.518 shape=(1, 9000, 1)
logits [[ 4.6305623 -2.1319656  3.564299  -8.133389 ]]
Iteration 800 of 1000: loss=0.597 " + "l1=0.246" + "l2=0.351 f=-0.506 shape=(1, 9000, 1)
logits [[ 4.3449273 -2.0739849  3.5885615 -7.8836155]]
Iteration 900 of 1000: loss=0.43 " + "l1=0.0448" + "l2=0.385 f=-0.486 shape=(1, 9000, 1)
logits [[ 3.7353623 -1.9662966  3.59759   -7.308806 ]]
--- 270.261257648468 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.166 " + "l1=0.166" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.7401896 -1.9890689  2.7936292 -9.815694 ]]
Iteration 100 of 1000: loss=0.165 " + "l1=0.164" + "l2=0.00045 f=-0.564 shape=(1, 9000, 1)
logits [[ 6.686037  -1.9620408  2.7712533 -9.751987 ]]
Iteration 200 of 1000: loss=0.165 " + "l1=0.164" + "l2=0.000492 f=-0.563 shape=(1, 9000, 1)
logits [[ 6.6767383 -1.9565934  2.766583  -9.740717 ]]
Iteration 300 of 1000: loss=0.165 " + "l1=0.164" + "l2=0.000624 f=-0.563 shape=(1, 9000, 1)
logits [[ 6.6661687 -1.950775   2.7614634 -9.727551 ]]
Iteration 400 of 1000: loss=0.165 " + "l1=0.164" + "l2=0.000785 f=-0.562 shape=(1, 9000, 1)
logits [[ 6.6564136 -1.9453518  2.7568412 -9.715209 ]]
Iteration 500 of 1000: loss=0.164 " + "l1=0.164" + "l2=0.000917 f=-0.561 shape=(1, 9000, 1)
logits [[ 6.6479483 -1.9407942  2.7528675 -9.704329 ]]
Iteration 600 of 1000: loss=0.164 " + "l1=0.163" + "l2=0.00104 f=-0.56 shape=(1, 9000, 1)
logits [[ 6.6407514 -1.9370859  2.7494783 -9.694941 ]]
Iteration 700 of 1000: loss=0.164 " + "l1=0.163" + "l2=0.0012 f=-0.56 shape=(1, 9000, 1)
logits [[ 6.6345415 -1.9340059  2.746519  -9.686586 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.66 " + "l1=1.66" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.7401896 -1.9890689  2.7936292 -9.815694 ]]
Iteration 100 of 1000: loss=1.59 " + "l1=1.55" + "l2=0.0382 f=-0.539 shape=(1, 9000, 1)
logits [[ 6.250951  -1.7574433  2.603626  -9.252627 ]]
Iteration 200 of 1000: loss=1.56 " + "l1=1.5" + "l2=0.0606 f=-0.527 shape=(1, 9000, 1)
logits [[ 5.9916    -1.6596323  2.5276098 -8.966115 ]]
Iteration 300 of 1000: loss=1.53 " + "l1=1.45" + "l2=0.0801 f=-0.518 shape=(1, 9000, 1)
logits [[ 5.7822466 -1.5904783  2.4728262 -8.738424 ]]
Iteration 400 of 1000: loss=1.51 " + "l1=1.41" + "l2=0.097 f=-0.51 shape=(1, 9000, 1)
logits [[ 5.6018476 -1.5356044  2.4291632 -8.536392 ]]
Iteration 500 of 1000: loss=1.49 " + "l1=1.38" + "l2=0.112 f=-0.504 shape=(1, 9000, 1)
logits [[ 5.4380116 -1.4784732  2.3778007 -8.352996 ]]
Iteration 600 of 1000: loss=1.47 " + "l1=1.34" + "l2=0.129 f=-0.504 shape=(1, 9000, 1)
logits [[ 5.2140718 -1.3798804  2.2978292 -8.149844 ]]
Iteration 700 of 1000: loss=1.44 " + "l1=1.3" + "l2=0.139 f=-0.499 shape=(1, 9000, 1)
logits [[ 5.0601892 -1.3353187  2.253267  -7.975258 ]]
Iteration 800 of 1000: loss=1.42 " + "l1=1.28" + "l2=0.147 f=-0.49 shape=(1, 9000, 1)
logits [[ 4.9461603 -1.304069   2.2181184 -7.81884  ]]
Iteration 900 of 1000: loss=1.4 " + "l1=1.25" + "l2=0.155 f=-0.479 shape=(1, 9000, 1)
logits [[ 4.824428  -1.2644998  2.1768146 -7.6511497]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=16.6 " + "l1=16.6" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.7401896 -1.9890689  2.7936292 -9.815694 ]]
Iteration 100 of 1000: loss=9.54 " + "l1=6.12" + "l2=3.42 f=-0.347 shape=(1, 9000, 1)
logits [[ 1.5935708  -0.09797414  1.6198083  -4.504813  ]]
Iteration 200 of 1000: loss=7.41 " + "l1=3.9" + "l2=3.52 f=-0.216 shape=(1, 9000, 1)
logits [[ 0.88893664  0.07924546  1.0319175  -2.863223  ]]
Iteration 300 of 1000: loss=6.04 " + "l1=2.33" + "l2=3.71 f=-0.137 shape=(1, 9000, 1)
logits [[ 0.40270132 -0.04658349  0.71312845 -1.6181031 ]]
Iteration 400 of 1000: loss=5.05 " + "l1=1.29" + "l2=3.75 f=-0.117 shape=(1, 9000, 1)
logits [[ 0.00453218 -0.13437374  0.47862864 -0.8159222 ]]
Iteration 500 of 1000: loss=3.97 " + "l1=0.332" + "l2=3.64 f=-0.131 shape=(1, 9000, 1)
logits [[-0.49211314 -0.1869981   0.24372306 -0.0880607 ]]
Iteration 600 of 1000: loss=3.12 " + "l1=0.0189" + "l2=3.11 f=-0.123 shape=(1, 9000, 1)
logits [[-0.577302   -0.25121984  0.17823751  0.15930825]]
Iteration 700 of 1000: loss=2.65 " + "l1=0" + "l2=2.65 f=-0.115 shape=(1, 9000, 1)
logits [[-0.50648034 -0.32825184  0.18590042  0.18726283]]
Iteration 800 of 1000: loss=2.3 " + "l1=0" + "l2=2.3 f=-0.118 shape=(1, 9000, 1)
logits [[-0.47966042 -0.3518676   0.17650512  0.18237504]]
Iteration 900 of 1000: loss=2.01 " + "l1=0" + "l2=2.01 f=-0.125 shape=(1, 9000, 1)
logits [[-0.4408934  -0.38560677  0.1599383   0.16492066]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=9.11 " + "l1=9.11" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.7401896 -1.9890689  2.7936292 -9.815694 ]]
Iteration 100 of 1000: loss=6.76 " + "l1=5.31" + "l2=1.45 f=-0.434 shape=(1, 9000, 1)
logits [[ 3.3228145  -0.69806087  1.9726717  -6.3333406 ]]
Iteration 200 of 1000: loss=5.51 " + "l1=3.48" + "l2=2.03 f=-0.367 shape=(1, 9000, 1)
logits [[ 1.6767263  -0.17487659  1.6837088  -4.652267  ]]
Iteration 300 of 1000: loss=4.86 " + "l1=2.86" + "l2=2 f=-0.303 shape=(1, 9000, 1)
logits [[ 1.3502837  -0.05355351  1.3487684  -3.8583813 ]]
Iteration 400 of 1000: loss=4.29 " + "l1=2.26" + "l2=2.03 f=-0.236 shape=(1, 9000, 1)
logits [[ 1.0921811  -0.12287482  1.1011678  -3.0130677 ]]
Iteration 500 of 1000: loss=3.8 " + "l1=1.81" + "l2=1.99 f=-0.204 shape=(1, 9000, 1)
logits [[ 0.90494704 -0.2693141   0.92459553 -2.3743331 ]]
Iteration 600 of 1000: loss=3.33 " + "l1=1.37" + "l2=1.96 f=-0.172 shape=(1, 9000, 1)
logits [[ 0.5893159  -0.28411287  0.74585134 -1.7407122 ]]
Iteration 700 of 1000: loss=2.83 " + "l1=0.821" + "l2=2.01 f=-0.158 shape=(1, 9000, 1)
logits [[ 0.06268204 -0.28959906  0.54379433 -0.9496459 ]]
Iteration 800 of 1000: loss=2.22 " + "l1=0.357" + "l2=1.86 f=-0.156 shape=(1, 9000, 1)
logits [[-0.3612082  -0.3089336   0.3480983  -0.30061215]]
Iteration 900 of 1000: loss=1.81 " + "l1=0.108" + "l2=1.7 f=-0.155 shape=(1, 9000, 1)
logits [[-0.5867912  -0.3447301   0.25347832  0.05753719]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.38 " + "l1=5.38" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.7401896 -1.9890689  2.7936292 -9.815694 ]]
Iteration 100 of 1000: loss=4.56 " + "l1=4.06" + "l2=0.495 f=-0.497 shape=(1, 9000, 1)
logits [[ 4.7473845 -1.1740988  2.1966558 -7.757125 ]]
Iteration 200 of 1000: loss=4.13 " + "l1=3.38" + "l2=0.757 f=-0.444 shape=(1, 9000, 1)
logits [[ 3.7186434 -0.8211316  1.9981169 -6.6704373]]
Iteration 300 of 1000: loss=3.81 " + "l1=2.82" + "l2=0.993 f=-0.407 shape=(1, 9000, 1)
logits [[ 2.8627834 -0.5240082  1.8349551 -5.8027253]]
Iteration 400 of 1000: loss=3.5 " + "l1=2.31" + "l2=1.18 f=-0.382 shape=(1, 9000, 1)
logits [[ 2.0610857  -0.26135162  1.7308646  -5.0588107 ]]
Iteration 500 of 1000: loss=3.16 " + "l1=2" + "l2=1.16 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.6504829  -0.20561956  1.6459597  -4.5029697 ]]
Iteration 600 of 1000: loss=2.88 " + "l1=1.85" + "l2=1.03 f=-0.327 shape=(1, 9000, 1)
logits [[ 1.5660715  -0.30448633  1.5670462  -4.135861  ]]
Iteration 700 of 1000: loss=2.61 " + "l1=1.69" + "l2=0.927 f=-0.309 shape=(1, 9000, 1)
logits [[ 1.4158906 -0.316336   1.4294822 -3.7633395]]
Iteration 800 of 1000: loss=2.35 " + "l1=1.51" + "l2=0.842 f=-0.283 shape=(1, 9000, 1)
logits [[ 1.273892   -0.33904672  1.2867978  -3.3555057 ]]
Iteration 900 of 1000: loss=2 " + "l1=1.17" + "l2=0.832 f=-0.25 shape=(1, 9000, 1)
logits [[ 0.8868916  -0.27521664  0.99888486 -2.609238  ]]
--- 296.04819536209106 seconds ---
Adv result:3
Loading record A05663
(1, 10636)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0979 " + "l1=0.0979" + "l2=0 f=-0.453 shape=(1, 9000, 1)
logits [[ 5.9486694 -3.8383086  4.1343884 -8.055068 ]]
Iteration 100 of 1000: loss=0.0969 " + "l1=0.0964" + "l2=0.000469 f=-0.45 shape=(1, 9000, 1)
logits [[ 5.8711915 -3.7696066  4.069821  -7.9723315]]
Iteration 200 of 1000: loss=0.0965 " + "l1=0.096" + "l2=0.000549 f=-0.449 shape=(1, 9000, 1)
logits [[ 5.8480635 -3.7495303  4.0501113 -7.944625 ]]
Iteration 300 of 1000: loss=0.0962 " + "l1=0.0955" + "l2=0.00071 f=-0.448 shape=(1, 9000, 1)
logits [[ 5.822378  -3.7267647  4.0287094 -7.914349 ]]
Iteration 400 of 1000: loss=0.0959 " + "l1=0.095" + "l2=0.000881 f=-0.446 shape=(1, 9000, 1)
logits [[ 5.7970715 -3.7044563  4.0081086 -7.8844023]]
Iteration 500 of 1000: loss=0.0956 " + "l1=0.0945" + "l2=0.00108 f=-0.444 shape=(1, 9000, 1)
logits [[ 5.7722735 -3.682293   3.98837   -7.8545127]]
Iteration 600 of 1000: loss=0.0954 " + "l1=0.0941" + "l2=0.00131 f=-0.442 shape=(1, 9000, 1)
logits [[ 5.747123  -3.660117   3.9688742 -7.8239045]]
Iteration 700 of 1000: loss=0.0951 " + "l1=0.0936" + "l2=0.00151 f=-0.44 shape=(1, 9000, 1)
logits [[ 5.722252  -3.6379266  3.9495952 -7.793565 ]]
Iteration 800 of 1000: loss=0.0949 " + "l1=0.0932" + "l2=0.00172 f=-0.438 shape=(1, 9000, 1)
logits [[ 5.699039  -3.617382   3.9319696 -7.7652273]]
Iteration 900 of 1000: loss=0.0946 " + "l1=0.0927" + "l2=0.0019 f=-0.436 shape=(1, 9000, 1)
logits [[ 5.67605   -3.5971706  3.914734  -7.7372527]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.979 " + "l1=0.979" + "l2=0 f=-0.453 shape=(1, 9000, 1)
logits [[ 5.9486694 -3.8383086  4.1343884 -8.055068 ]]
Iteration 100 of 1000: loss=0.867 " + "l1=0.81" + "l2=0.0572 f=-0.417 shape=(1, 9000, 1)
logits [[ 5.1125503 -2.984581   3.3428023 -7.137458 ]]
Iteration 200 of 1000: loss=0.812 " + "l1=0.736" + "l2=0.0758 f=-0.404 shape=(1, 9000, 1)
logits [[ 4.6775966 -2.6828668  3.0475416 -6.656945 ]]
Iteration 300 of 1000: loss=0.767 " + "l1=0.676" + "l2=0.0914 f=-0.396 shape=(1, 9000, 1)
logits [[ 4.304922  -2.451413   2.8107939 -6.2488475]]
Iteration 400 of 1000: loss=0.729 " + "l1=0.622" + "l2=0.107 f=-0.39 shape=(1, 9000, 1)
logits [[ 3.9595256 -2.2584863  2.5991907 -5.8603387]]
Iteration 500 of 1000: loss=0.692 " + "l1=0.57" + "l2=0.122 f=-0.38 shape=(1, 9000, 1)
logits [[ 3.64574   -2.0562894  2.3893206 -5.4992547]]
Iteration 600 of 1000: loss=0.642 " + "l1=0.498" + "l2=0.144 f=-0.359 shape=(1, 9000, 1)
logits [[ 3.2348933 -1.7445351  2.107116  -5.0316744]]
Iteration 700 of 1000: loss=0.589 " + "l1=0.434" + "l2=0.155 f=-0.338 shape=(1, 9000, 1)
logits [[ 2.856783  -1.4847735  1.8913653 -4.616716 ]]
Iteration 800 of 1000: loss=0.555 " + "l1=0.396" + "l2=0.16 f=-0.346 shape=(1, 9000, 1)
logits [[ 2.5576956 -1.3988535  1.8094691 -4.3506427]]
Iteration 900 of 1000: loss=0.53 " + "l1=0.366" + "l2=0.165 f=-0.343 shape=(1, 9000, 1)
logits [[ 2.3242087 -1.3331612  1.7416493 -4.103319 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.79 " + "l1=9.79" + "l2=0 f=-0.453 shape=(1, 9000, 1)
logits [[ 5.9486694 -3.8383086  4.1343884 -8.055068 ]]
Iteration 100 of 1000: loss=2.84 " + "l1=0.836" + "l2=2.01 f=-0.436 shape=(1, 9000, 1)
logits [[ 0.84155107  0.02078019  0.85664433 -3.4611008 ]]
Iteration 200 of 1000: loss=1.82 " + "l1=0.0599" + "l2=1.76 f=-0.432 shape=(1, 9000, 1)
logits [[ 0.40655005  0.3834342   0.4433265  -2.9605584 ]]
Iteration 300 of 1000: loss=1.47 " + "l1=0.000785" + "l2=1.46 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.3577574   0.3604612   0.36124608 -2.7012649 ]]
Iteration 400 of 1000: loss=1.3 " + "l1=0.0118" + "l2=1.29 f=-0.398 shape=(1, 9000, 1)
logits [[ 0.31379637  0.32133728  0.3331215  -2.5582888 ]]
Iteration 500 of 1000: loss=1.19 " + "l1=0.0028" + "l2=1.19 f=-0.4 shape=(1, 9000, 1)
logits [[ 0.27673772  0.2995586   0.3023621  -2.4777153 ]]
Iteration 600 of 1000: loss=1.13 " + "l1=0.0288" + "l2=1.1 f=-0.407 shape=(1, 9000, 1)
logits [[ 0.23438722  0.2597848   0.28854537 -2.4095721 ]]
Iteration 700 of 1000: loss=1.05 " + "l1=0.00636" + "l2=1.04 f=-0.401 shape=(1, 9000, 1)
logits [[ 0.23450926  0.25154912  0.25791007 -2.3495245 ]]
Iteration 800 of 1000: loss=0.995 " + "l1=0" + "l2=0.995 f=-0.402 shape=(1, 9000, 1)
logits [[ 0.18802927  0.23826422  0.23077056 -2.2667446 ]]
Iteration 900 of 1000: loss=0.927 " + "l1=0.0035" + "l2=0.923 f=-0.395 shape=(1, 9000, 1)
logits [[ 0.19735084  0.2081582   0.21165827 -2.1991503 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.38 " + "l1=5.38" + "l2=0 f=-0.453 shape=(1, 9000, 1)
logits [[ 5.9486694 -3.8383086  4.1343884 -8.055068 ]]
Iteration 100 of 1000: loss=2.57 " + "l1=1.38" + "l2=1.19 f=-0.391 shape=(1, 9000, 1)
logits [[ 1.7966864 -0.7065465  1.3800608 -4.0335827]]
Iteration 200 of 1000: loss=1.62 " + "l1=0.474" + "l2=1.15 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.7841186  -0.06233413  0.79896694 -3.1407561 ]]
Iteration 300 of 1000: loss=1.29 " + "l1=0.226" + "l2=1.06 f=-0.388 shape=(1, 9000, 1)
logits [[ 0.5070559   0.11340066  0.52495295 -2.6972768 ]]
Iteration 400 of 1000: loss=1.11 " + "l1=0.107" + "l2=1 f=-0.389 shape=(1, 9000, 1)
logits [[ 0.3496536   0.16923194  0.36338082 -2.439145  ]]
Iteration 500 of 1000: loss=1.01 " + "l1=0.075" + "l2=0.933 f=-0.395 shape=(1, 9000, 1)
logits [[ 0.3055031   0.17368884  0.31005573 -2.3688145 ]]
Iteration 600 of 1000: loss=0.934 " + "l1=0.0571" + "l2=0.877 f=-0.396 shape=(1, 9000, 1)
logits [[ 0.2680317   0.17136417  0.27520368 -2.2976222 ]]
Iteration 700 of 1000: loss=0.858 " + "l1=0.0122" + "l2=0.845 f=-0.393 shape=(1, 9000, 1)
logits [[ 0.19289425  0.19031434  0.2125348  -2.1688359 ]]
Iteration 800 of 1000: loss=0.786 " + "l1=0.00251" + "l2=0.784 f=-0.39 shape=(1, 9000, 1)
logits [[ 0.16807103  0.17156135  0.17612232 -2.0774403 ]]
Iteration 900 of 1000: loss=0.742 " + "l1=0.009" + "l2=0.733 f=-0.386 shape=(1, 9000, 1)
logits [[ 0.15550359  0.14956506  0.16592763 -2.0145526 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.18 " + "l1=3.18" + "l2=0 f=-0.453 shape=(1, 9000, 1)
logits [[ 5.9486694 -3.8383086  4.1343884 -8.055068 ]]
Iteration 100 of 1000: loss=2.09 " + "l1=1.56" + "l2=0.531 f=-0.36 shape=(1, 9000, 1)
logits [[ 3.226082  -1.5739611  2.0654266 -5.159066 ]]
Iteration 200 of 1000: loss=1.54 " + "l1=0.797" + "l2=0.739 f=-0.37 shape=(1, 9000, 1)
logits [[ 1.726204  -0.7250595  1.3546679 -3.8364244]]
Iteration 300 of 1000: loss=1.17 " + "l1=0.429" + "l2=0.737 f=-0.388 shape=(1, 9000, 1)
logits [[ 0.9864874  -0.33495516  0.9849813  -3.1868963 ]]
Iteration 400 of 1000: loss=1 " + "l1=0.342" + "l2=0.662 f=-0.393 shape=(1, 9000, 1)
logits [[ 0.83504725 -0.21870326  0.8283404  -3.0172446 ]]
Iteration 500 of 1000: loss=0.91 " + "l1=0.274" + "l2=0.636 f=-0.393 shape=(1, 9000, 1)
logits [[ 0.6917037 -0.1520664  0.6918362 -2.80318  ]]
Iteration 600 of 1000: loss=0.844 " + "l1=0.23" + "l2=0.614 f=-0.389 shape=(1, 9000, 1)
logits [[ 0.57679594 -0.11753469  0.58893263 -2.6023426 ]]
Iteration 700 of 1000: loss=0.792 " + "l1=0.212" + "l2=0.58 f=-0.38 shape=(1, 9000, 1)
logits [[ 0.5315558  -0.11657988  0.53697765 -2.470355  ]]
Iteration 800 of 1000: loss=0.751 " + "l1=0.198" + "l2=0.553 f=-0.373 shape=(1, 9000, 1)
logits [[ 0.4903923  -0.11117445  0.4986945  -2.3687851 ]]
Iteration 900 of 1000: loss=0.72 " + "l1=0.175" + "l2=0.545 f=-0.371 shape=(1, 9000, 1)
logits [[ 0.4334506  -0.08990176  0.44895402 -2.2782364 ]]
--- 314.42372703552246 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0181 " + "l1=0.0181" + "l2=0 f=-0.453 shape=(1, 9000, 1)
logits [[ 5.9486694 -3.8383086  4.1343884 -8.055068 ]]
Iteration 100 of 1000: loss=0.0178 " + "l1=0.0175" + "l2=0.000308 f=-0.456 shape=(1, 9000, 1)
logits [[ 5.905651  -3.8661277  4.1592064 -8.023942 ]]
Iteration 200 of 1000: loss=0.0177 " + "l1=0.0174" + "l2=0.000282 f=-0.457 shape=(1, 9000, 1)
logits [[ 5.9004173 -3.868083   4.1613183 -8.02024  ]]
Iteration 300 of 1000: loss=0.0176 " + "l1=0.0173" + "l2=0.000344 f=-0.457 shape=(1, 9000, 1)
logits [[ 5.892955  -3.8718653  4.1651115 -8.014692 ]]
Iteration 400 of 1000: loss=0.0176 " + "l1=0.0172" + "l2=0.000399 f=-0.457 shape=(1, 9000, 1)
logits [[ 5.886503  -3.8757849  4.1690764 -8.009775 ]]
Iteration 500 of 1000: loss=0.0175 " + "l1=0.0171" + "l2=0.000451 f=-0.458 shape=(1, 9000, 1)
logits [[ 5.879523  -3.8795362  4.1730494 -8.004409 ]]
Iteration 600 of 1000: loss=0.0175 " + "l1=0.017" + "l2=0.000566 f=-0.458 shape=(1, 9000, 1)
logits [[ 5.872408  -3.8830602  4.176869  -7.998832 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.181 " + "l1=0.181" + "l2=0 f=-0.453 shape=(1, 9000, 1)
logits [[ 5.9486694 -3.8383086  4.1343884 -8.055068 ]]
Iteration 100 of 1000: loss=0.148 " + "l1=0.131" + "l2=0.0169 f=-0.472 shape=(1, 9000, 1)
logits [[ 5.614074  -3.9989872  4.303393  -7.8071294]]
Iteration 200 of 1000: loss=0.135 " + "l1=0.112" + "l2=0.0234 f=-0.475 shape=(1, 9000, 1)
logits [[ 5.4419646 -4.0189466  4.3230834 -7.6463857]]
Iteration 300 of 1000: loss=0.124 " + "l1=0.096" + "l2=0.0285 f=-0.475 shape=(1, 9000, 1)
logits [[ 5.3029017 -4.037059   4.342803  -7.5082374]]
Iteration 400 of 1000: loss=0.115 " + "l1=0.0834" + "l2=0.0318 f=-0.474 shape=(1, 9000, 1)
logits [[ 5.2030506 -4.0603037  4.3689113 -7.4078474]]
Iteration 500 of 1000: loss=0.107 " + "l1=0.0709" + "l2=0.0357 f=-0.473 shape=(1, 9000, 1)
logits [[ 5.099754  -4.0780034  4.3905287 -7.304677 ]]
Iteration 600 of 1000: loss=0.0981 " + "l1=0.0581" + "l2=0.0401 f=-0.471 shape=(1, 9000, 1)
logits [[ 4.983164  -4.089843   4.4023633 -7.1779137]]
Iteration 700 of 1000: loss=0.09 " + "l1=0.0469" + "l2=0.0431 f=-0.469 shape=(1, 9000, 1)
logits [[ 4.876727  -4.100811   4.4077644 -7.060561 ]]
Iteration 800 of 1000: loss=0.0824 " + "l1=0.0375" + "l2=0.045 f=-0.468 shape=(1, 9000, 1)
logits [[ 4.7851377 -4.107806   4.4102173 -6.95967  ]]
Iteration 900 of 1000: loss=0.0753 " + "l1=0.0281" + "l2=0.0472 f=-0.468 shape=(1, 9000, 1)
logits [[ 4.68418   -4.1065354  4.403094  -6.851531 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.81 " + "l1=1.81" + "l2=0 f=-0.453 shape=(1, 9000, 1)
logits [[ 5.9486694 -3.8383086  4.1343884 -8.055068 ]]
Iteration 100 of 1000: loss=0.223 " + "l1=0.0023" + "l2=0.221 f=-0.489 shape=(1, 9000, 1)
logits [[ 4.461631  -4.1950936  4.4593296 -6.679983 ]]
Iteration 200 of 1000: loss=0.165 " + "l1=0" + "l2=0.165 f=-0.479 shape=(1, 9000, 1)
logits [[ 4.43238   -4.167803   4.4406004 -6.6230955]]
Iteration 300 of 1000: loss=0.136 " + "l1=0" + "l2=0.136 f=-0.475 shape=(1, 9000, 1)
logits [[ 4.4249716 -4.1605897  4.437247  -6.602072 ]]
Iteration 400 of 1000: loss=0.119 " + "l1=0" + "l2=0.119 f=-0.47 shape=(1, 9000, 1)
logits [[ 4.41142   -4.1540627  4.4351573 -6.572242 ]]
Iteration 500 of 1000: loss=0.105 " + "l1=0" + "l2=0.105 f=-0.468 shape=(1, 9000, 1)
logits [[ 4.3883324 -4.1371136  4.4173613 -6.539107 ]]
Iteration 600 of 1000: loss=0.0906 " + "l1=0" + "l2=0.0906 f=-0.465 shape=(1, 9000, 1)
logits [[ 4.3897505 -4.1187935  4.39748   -6.526901 ]]
Iteration 700 of 1000: loss=0.0833 " + "l1=0" + "l2=0.0833 f=-0.462 shape=(1, 9000, 1)
logits [[ 4.3800983 -4.1116223  4.3882523 -6.5048656]]
Iteration 800 of 1000: loss=0.0804 " + "l1=0.00487" + "l2=0.0756 f=-0.461 shape=(1, 9000, 1)
logits [[ 4.382638  -4.1068144  4.377765  -6.4995522]]
Iteration 900 of 1000: loss=0.0733 " + "l1=0" + "l2=0.0733 f=-0.463 shape=(1, 9000, 1)
logits [[ 4.361185 -4.112039  4.376576 -6.476537]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.998 " + "l1=0.998" + "l2=0 f=-0.453 shape=(1, 9000, 1)
logits [[ 5.9486694 -3.8383086  4.1343884 -8.055068 ]]
Iteration 100 of 1000: loss=0.216 " + "l1=0.000389" + "l2=0.216 f=-0.488 shape=(1, 9000, 1)
logits [[ 4.4662366 -4.1875706  4.465529  -6.696241 ]]
Iteration 200 of 1000: loss=0.154 " + "l1=5.43e-05" + "l2=0.154 f=-0.48 shape=(1, 9000, 1)
logits [[ 4.4366465 -4.1567     4.4365478 -6.637503 ]]
Iteration 300 of 1000: loss=0.128 " + "l1=0" + "l2=0.128 f=-0.476 shape=(1, 9000, 1)
logits [[ 4.414331  -4.1563582  4.4350696 -6.5970097]]
Iteration 400 of 1000: loss=0.108 " + "l1=0.00572" + "l2=0.102 f=-0.471 shape=(1, 9000, 1)
logits [[ 4.428946  -4.1429963  4.418543  -6.589807 ]]
Iteration 500 of 1000: loss=0.0936 " + "l1=0" + "l2=0.0936 f=-0.47 shape=(1, 9000, 1)
logits [[ 4.3809614 -4.1270127  4.398441  -6.530588 ]]
Iteration 600 of 1000: loss=0.0826 " + "l1=0.00138" + "l2=0.0812 f=-0.468 shape=(1, 9000, 1)
logits [[ 4.3844075 -4.1155167  4.3819036 -6.5219855]]
Iteration 700 of 1000: loss=0.0775 " + "l1=0" + "l2=0.0775 f=-0.469 shape=(1, 9000, 1)
logits [[ 4.359485  -4.124296   4.3823676 -6.491763 ]]
Iteration 800 of 1000: loss=0.0689 " + "l1=0" + "l2=0.0689 f=-0.467 shape=(1, 9000, 1)
logits [[ 4.3741665 -4.125387   4.383537  -6.500579 ]]
Iteration 900 of 1000: loss=0.0625 " + "l1=0" + "l2=0.0625 f=-0.466 shape=(1, 9000, 1)
logits [[ 4.371638  -4.1228848  4.381965  -6.494121 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.59 " + "l1=0.59" + "l2=0 f=-0.453 shape=(1, 9000, 1)
logits [[ 5.9486694 -3.8383086  4.1343884 -8.055068 ]]
Iteration 100 of 1000: loss=0.253 " + "l1=0.0865" + "l2=0.166 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.7240453 -4.1532736  4.457818  -6.965192 ]]
Iteration 200 of 1000: loss=0.156 " + "l1=0" + "l2=0.156 f=-0.475 shape=(1, 9000, 1)
logits [[ 4.4412804 -4.152287   4.4438496 -6.634581 ]]
Iteration 300 of 1000: loss=0.121 " + "l1=0.00272" + "l2=0.119 f=-0.471 shape=(1, 9000, 1)
logits [[ 4.4454885 -4.150791   4.4371185 -6.615445 ]]
Iteration 400 of 1000: loss=0.1 " + "l1=0.000869" + "l2=0.0995 f=-0.467 shape=(1, 9000, 1)
logits [[ 4.4200234 -4.1370687  4.417351  -6.570032 ]]
Iteration 500 of 1000: loss=0.088 " + "l1=0" + "l2=0.088 f=-0.468 shape=(1, 9000, 1)
logits [[ 4.3855805 -4.123131   4.3958406 -6.528779 ]]
Iteration 600 of 1000: loss=0.0786 " + "l1=0" + "l2=0.0786 f=-0.467 shape=(1, 9000, 1)
logits [[ 4.377059  -4.123212   4.3895383 -6.5127735]]
Iteration 700 of 1000: loss=0.0693 " + "l1=0" + "l2=0.0693 f=-0.468 shape=(1, 9000, 1)
logits [[ 4.379577  -4.127828   4.3906045 -6.512381 ]]
Iteration 800 of 1000: loss=0.0615 " + "l1=0" + "l2=0.0615 f=-0.467 shape=(1, 9000, 1)
logits [[ 4.3727145 -4.1205854  4.3823347 -6.5008936]]
Iteration 900 of 1000: loss=0.0549 " + "l1=0.000834" + "l2=0.0541 f=-0.466 shape=(1, 9000, 1)
logits [[ 4.367893 -4.105721  4.365327 -6.493341]]
--- 291.9546959400177 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.14 " + "l1=0.14" + "l2=0 f=-0.453 shape=(1, 9000, 1)
logits [[ 5.9486694 -3.8383086  4.1343884 -8.055068 ]]
Iteration 100 of 1000: loss=0.138 " + "l1=0.138" + "l2=0.000784 f=-0.449 shape=(1, 9000, 1)
logits [[ 5.837244  -3.7989812  4.0823045 -7.9155555]]
Iteration 200 of 1000: loss=0.138 " + "l1=0.137" + "l2=0.000999 f=-0.447 shape=(1, 9000, 1)
logits [[ 5.798882  -3.7801452  4.0613985 -7.8682966]]
Iteration 300 of 1000: loss=0.137 " + "l1=0.136" + "l2=0.0013 f=-0.445 shape=(1, 9000, 1)
logits [[ 5.758197  -3.7595756  4.038535  -7.817037 ]]
Iteration 400 of 1000: loss=0.136 " + "l1=0.135" + "l2=0.00162 f=-0.443 shape=(1, 9000, 1)
logits [[ 5.7188463 -3.7390883  4.016591  -7.7669587]]
Iteration 500 of 1000: loss=0.136 " + "l1=0.134" + "l2=0.00196 f=-0.44 shape=(1, 9000, 1)
logits [[ 5.679892  -3.7186499  3.9955056 -7.7173076]]
Iteration 600 of 1000: loss=0.135 " + "l1=0.133" + "l2=0.00235 f=-0.437 shape=(1, 9000, 1)
logits [[ 5.641898  -3.6979835  3.974356  -7.6681137]]
Iteration 700 of 1000: loss=0.135 " + "l1=0.132" + "l2=0.00277 f=-0.435 shape=(1, 9000, 1)
logits [[ 5.603112  -3.6769092  3.9533637 -7.618273 ]]
Iteration 800 of 1000: loss=0.134 " + "l1=0.131" + "l2=0.00311 f=-0.432 shape=(1, 9000, 1)
logits [[ 5.5627666 -3.6570685  3.9337623 -7.5675707]]
Iteration 900 of 1000: loss=0.134 " + "l1=0.13" + "l2=0.00359 f=-0.43 shape=(1, 9000, 1)
logits [[ 5.523511  -3.6369908  3.9138513 -7.5184355]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.4 " + "l1=1.4" + "l2=0 f=-0.453 shape=(1, 9000, 1)
logits [[ 5.9486694 -3.8383086  4.1343884 -8.055068 ]]
Iteration 100 of 1000: loss=1.2 " + "l1=1.1" + "l2=0.0991 f=-0.416 shape=(1, 9000, 1)
logits [[ 4.5999384 -3.3778977  3.5467079 -6.433842 ]]
Iteration 200 of 1000: loss=1.09 " + "l1=0.94" + "l2=0.153 f=-0.393 shape=(1, 9000, 1)
logits [[ 3.8779216 -3.1558497  3.2258723 -5.5185375]]
Iteration 300 of 1000: loss=1 " + "l1=0.805" + "l2=0.196 f=-0.371 shape=(1, 9000, 1)
logits [[ 3.2999296 -2.9359202  2.9023347 -4.7516737]]
Iteration 400 of 1000: loss=0.91 " + "l1=0.681" + "l2=0.229 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.7421064 -2.717528   2.5877068 -4.0650163]]
Iteration 500 of 1000: loss=0.812 " + "l1=0.567" + "l2=0.245 f=-0.347 shape=(1, 9000, 1)
logits [[ 2.2273414 -2.399328   2.2275562 -3.4437044]]
Iteration 600 of 1000: loss=0.747 " + "l1=0.524" + "l2=0.223 f=-0.331 shape=(1, 9000, 1)
logits [[ 2.0431578 -2.2198627  2.0446954 -3.1928113]]
Iteration 700 of 1000: loss=0.704 " + "l1=0.486" + "l2=0.218 f=-0.321 shape=(1, 9000, 1)
logits [[ 1.8963337 -2.110096   1.8941765 -2.9628215]]
Iteration 800 of 1000: loss=0.674 " + "l1=0.458" + "l2=0.216 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.785319  -2.0335305  1.7909876 -2.7891068]]
Iteration 900 of 1000: loss=0.647 " + "l1=0.425" + "l2=0.222 f=-0.303 shape=(1, 9000, 1)
logits [[ 1.6420738 -1.9293675  1.6612765 -2.5865216]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=14 " + "l1=14" + "l2=0 f=-0.453 shape=(1, 9000, 1)
logits [[ 5.9486694 -3.8383086  4.1343884 -8.055068 ]]
Iteration 100 of 1000: loss=3.31 " + "l1=0.047" + "l2=3.27 f=-0.0675 shape=(1, 9000, 1)
logits [[ 0.02205782 -1.3422467   0.54864436  0.50161654]]
Iteration 200 of 1000: loss=2.01 " + "l1=0" + "l2=2.01 f=-0.0991 shape=(1, 9000, 1)
logits [[-0.04251935 -1.1116878   0.37488645  0.3830612 ]]
Iteration 300 of 1000: loss=1.69 " + "l1=0.0108" + "l2=1.68 f=-0.124 shape=(1, 9000, 1)
logits [[-0.06538921 -1.0165915   0.29783997  0.28702345]]
Iteration 400 of 1000: loss=1.51 " + "l1=0" + "l2=1.51 f=-0.137 shape=(1, 9000, 1)
logits [[-0.10855921 -0.9184134   0.23124269  0.24821624]]
Iteration 500 of 1000: loss=1.38 " + "l1=0.00898" + "l2=1.37 f=-0.15 shape=(1, 9000, 1)
logits [[-0.13472071 -0.8743069   0.20801176  0.19903094]]
Iteration 600 of 1000: loss=1.27 " + "l1=0" + "l2=1.27 f=-0.162 shape=(1, 9000, 1)
logits [[-0.16975325 -0.85667616  0.18414643  0.19512746]]
Iteration 700 of 1000: loss=1.19 " + "l1=0" + "l2=1.19 f=-0.164 shape=(1, 9000, 1)
logits [[-0.18330249 -0.8756022   0.19345859  0.2111308 ]]
Iteration 800 of 1000: loss=1.12 " + "l1=0.014" + "l2=1.11 f=-0.168 shape=(1, 9000, 1)
logits [[-0.18472621 -0.8855858   0.20626873  0.19229236]]
Iteration 900 of 1000: loss=1.05 " + "l1=0" + "l2=1.05 f=-0.166 shape=(1, 9000, 1)
logits [[-0.21225944 -0.89380753  0.20608403  0.2379326 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.7 " + "l1=7.7" + "l2=0 f=-0.453 shape=(1, 9000, 1)
logits [[ 5.9486694 -3.8383086  4.1343884 -8.055068 ]]
Iteration 100 of 1000: loss=3.38 " + "l1=1.94" + "l2=1.43 f=-0.165 shape=(1, 9000, 1)
logits [[ 1.5702043 -1.9102172  1.6073676 -1.928444 ]]
Iteration 200 of 1000: loss=1.82 " + "l1=0.0124" + "l2=1.81 f=-0.0877 shape=(1, 9000, 1)
logits [[-0.02296113 -1.0284474   0.36162916  0.33912852]]
Iteration 300 of 1000: loss=1.45 " + "l1=0" + "l2=1.45 f=-0.111 shape=(1, 9000, 1)
logits [[-0.06907013 -0.90385455  0.25104457  0.27672115]]
Iteration 400 of 1000: loss=1.27 " + "l1=0.00767" + "l2=1.26 f=-0.132 shape=(1, 9000, 1)
logits [[-0.08791845 -0.90618867  0.23910807  0.22517025]]
Iteration 500 of 1000: loss=1.14 " + "l1=0.00901" + "l2=1.13 f=-0.144 shape=(1, 9000, 1)
logits [[-0.11398836 -0.9289918   0.24109317  0.22470576]]
Iteration 600 of 1000: loss=1.04 " + "l1=0" + "l2=1.04 f=-0.151 shape=(1, 9000, 1)
logits [[-0.13888055 -0.94167215  0.23721658  0.24056742]]
Iteration 700 of 1000: loss=0.967 " + "l1=0.00146" + "l2=0.965 f=-0.157 shape=(1, 9000, 1)
logits [[-0.15752701 -0.944058    0.23772378  0.23506689]]
Iteration 800 of 1000: loss=0.901 " + "l1=0.00161" + "l2=0.899 f=-0.161 shape=(1, 9000, 1)
logits [[-0.18670923 -0.94837326  0.2469955   0.2440733 ]]
Iteration 900 of 1000: loss=0.848 " + "l1=0.011" + "l2=0.837 f=-0.163 shape=(1, 9000, 1)
logits [[-0.20391655 -0.9552953   0.26435465  0.24437565]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.55 " + "l1=4.55" + "l2=0 f=-0.453 shape=(1, 9000, 1)
logits [[ 5.9486694 -3.8383086  4.1343884 -8.055068 ]]
Iteration 100 of 1000: loss=2.62 " + "l1=1.83" + "l2=0.79 f=-0.284 shape=(1, 9000, 1)
logits [[ 2.3378582 -2.4954877  2.3310826 -3.3082356]]
Iteration 200 of 1000: loss=1.98 " + "l1=1.08" + "l2=0.892 f=-0.222 shape=(1, 9000, 1)
logits [[ 1.3535558 -1.8848839  1.489375  -1.847594 ]]
Iteration 300 of 1000: loss=1.43 " + "l1=0.304" + "l2=1.12 f=-0.13 shape=(1, 9000, 1)
logits [[ 0.302267   -1.0765545   0.5941747  -0.34025684]]
Iteration 400 of 1000: loss=1.12 " + "l1=0.0088" + "l2=1.11 f=-0.135 shape=(1, 9000, 1)
logits [[-0.13218047 -0.8688675   0.24392292  0.2168364 ]]
Iteration 500 of 1000: loss=0.987 " + "l1=0.0147" + "l2=0.972 f=-0.154 shape=(1, 9000, 1)
logits [[-0.1581941  -0.9054796   0.24610512  0.20084739]]
Iteration 600 of 1000: loss=0.894 " + "l1=0.00237" + "l2=0.892 f=-0.162 shape=(1, 9000, 1)
logits [[-0.21054167 -0.90999985  0.23932458  0.23202676]]
Iteration 700 of 1000: loss=0.82 " + "l1=0.00126" + "l2=0.819 f=-0.165 shape=(1, 9000, 1)
logits [[-0.24720293 -0.9147737   0.25253716  0.24865517]]
Iteration 800 of 1000: loss=0.75 " + "l1=0" + "l2=0.75 f=-0.167 shape=(1, 9000, 1)
logits [[-0.2953552  -0.8805633   0.25465354  0.25506425]]
Iteration 900 of 1000: loss=0.705 " + "l1=0" + "l2=0.705 f=-0.166 shape=(1, 9000, 1)
logits [[-0.34444404 -0.87791705  0.26281717  0.29733998]]
--- 317.94107389450073 seconds ---
Adv result:3
Loading record A05670
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.102 " + "l1=0.102" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  7.3981137  -2.8029723   3.0884364 -10.809018 ]]
Iteration 100 of 1000: loss=0.102 " + "l1=0.101" + "l2=0.000341 f=-0.779 shape=(1, 9000, 1)
logits [[  7.356952   -2.762085    3.0649486 -10.776495 ]]
Iteration 200 of 1000: loss=0.101 " + "l1=0.101" + "l2=0.000337 f=-0.778 shape=(1, 9000, 1)
logits [[  7.351691   -2.75441     3.0602071 -10.771292 ]]
Iteration 300 of 1000: loss=0.101 " + "l1=0.101" + "l2=0.000413 f=-0.778 shape=(1, 9000, 1)
logits [[  7.343696   -2.7445805   3.0542526 -10.763891 ]]
Iteration 400 of 1000: loss=0.101 " + "l1=0.101" + "l2=0.000527 f=-0.777 shape=(1, 9000, 1)
logits [[  7.3357286  -2.734789    3.0482323 -10.756607 ]]
Iteration 500 of 1000: loss=0.101 " + "l1=0.101" + "l2=0.000647 f=-0.776 shape=(1, 9000, 1)
logits [[  7.3286147  -2.7259662   3.0429192 -10.750405 ]]
Iteration 600 of 1000: loss=0.101 " + "l1=0.1" + "l2=0.00074 f=-0.776 shape=(1, 9000, 1)
logits [[  7.322083   -2.7182505   3.0383863 -10.745157 ]]
Iteration 700 of 1000: loss=0.101 " + "l1=0.1" + "l2=0.000814 f=-0.775 shape=(1, 9000, 1)
logits [[  7.316186   -2.7115645   3.0345097 -10.740639 ]]
Iteration 800 of 1000: loss=0.101 " + "l1=0.1" + "l2=0.001 f=-0.775 shape=(1, 9000, 1)
logits [[  7.31053    -2.7056167   3.0311327 -10.736585 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.02 " + "l1=1.02" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  7.3981137  -2.8029723   3.0884364 -10.809018 ]]
Iteration 100 of 1000: loss=0.975 " + "l1=0.95" + "l2=0.0247 f=-0.755 shape=(1, 9000, 1)
logits [[  7.051032   -2.4526489   2.8959613 -10.512868 ]]
Iteration 200 of 1000: loss=0.955 " + "l1=0.918" + "l2=0.0373 f=-0.735 shape=(1, 9000, 1)
logits [[  6.896492   -2.2796788   2.8068697 -10.364348 ]]
Iteration 300 of 1000: loss=0.937 " + "l1=0.887" + "l2=0.0496 f=-0.722 shape=(1, 9000, 1)
logits [[  6.754149   -2.117868    2.7261646 -10.250473 ]]
Iteration 400 of 1000: loss=0.923 " + "l1=0.865" + "l2=0.0579 f=-0.716 shape=(1, 9000, 1)
logits [[  6.6377974  -2.0150535   2.6779697 -10.163452 ]]
Iteration 500 of 1000: loss=0.912 " + "l1=0.846" + "l2=0.066 f=-0.713 shape=(1, 9000, 1)
logits [[  6.526116   -1.931745    2.6393878 -10.086965 ]]
Iteration 600 of 1000: loss=0.899 " + "l1=0.827" + "l2=0.0727 f=-0.711 shape=(1, 9000, 1)
logits [[  6.414466   -1.8528391   2.603375  -10.010198 ]]
Iteration 700 of 1000: loss=0.886 " + "l1=0.808" + "l2=0.0778 f=-0.707 shape=(1, 9000, 1)
logits [[ 6.299309  -1.7810537  2.5646238 -9.909604 ]]
Iteration 800 of 1000: loss=0.871 " + "l1=0.787" + "l2=0.0837 f=-0.697 shape=(1, 9000, 1)
logits [[ 6.1719694 -1.6986506  2.524052  -9.786293 ]]
Iteration 900 of 1000: loss=0.854 " + "l1=0.765" + "l2=0.0888 f=-0.683 shape=(1, 9000, 1)
logits [[ 6.0377903 -1.6128576  2.481536  -9.640252 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.2 " + "l1=10.2" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  7.3981137  -2.8029723   3.0884364 -10.809018 ]]
Iteration 100 of 1000: loss=5.01 " + "l1=2.11" + "l2=2.89 f=-0.649 shape=(1, 9000, 1)
logits [[ 2.049414  -0.0618519  1.6271963 -6.2111697]]
Iteration 200 of 1000: loss=3.58 " + "l1=0.847" + "l2=2.74 f=-0.635 shape=(1, 9000, 1)
logits [[ 1.2528534  0.4056723  1.2451018 -5.444272 ]]
Iteration 300 of 1000: loss=3.05 " + "l1=0.405" + "l2=2.64 f=-0.62 shape=(1, 9000, 1)
logits [[ 1.0339391  0.6463502  1.0512241 -5.211897 ]]
Iteration 400 of 1000: loss=2.79 " + "l1=0.219" + "l2=2.57 f=-0.603 shape=(1, 9000, 1)
logits [[ 0.9411217  0.7225016  0.9395143 -5.013934 ]]
Iteration 500 of 1000: loss=2.59 " + "l1=0.0858" + "l2=2.5 f=-0.594 shape=(1, 9000, 1)
logits [[ 0.8648915   0.77906567  0.86361355 -4.885181  ]]
Iteration 600 of 1000: loss=2.45 " + "l1=0.0561" + "l2=2.39 f=-0.584 shape=(1, 9000, 1)
logits [[ 0.83954453  0.78339714  0.8238787  -4.7839036 ]]
Iteration 700 of 1000: loss=2.29 " + "l1=0.0118" + "l2=2.28 f=-0.58 shape=(1, 9000, 1)
logits [[ 0.80648386  0.80513006  0.8168857  -4.750078  ]]
Iteration 800 of 1000: loss=2.17 " + "l1=0.00127" + "l2=2.17 f=-0.572 shape=(1, 9000, 1)
logits [[ 0.80969214  0.81077695  0.8120465  -4.721278  ]]
Iteration 900 of 1000: loss=2.08 " + "l1=0.0296" + "l2=2.05 f=-0.564 shape=(1, 9000, 1)
logits [[ 0.820115    0.79052895  0.8139723  -4.680733  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.61 " + "l1=5.61" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  7.3981137  -2.8029723   3.0884364 -10.809018 ]]
Iteration 100 of 1000: loss=3.91 " + "l1=2.81" + "l2=1.1 f=-0.654 shape=(1, 9000, 1)
logits [[ 4.3459687  -0.76384336  2.033135   -8.232019  ]]
Iteration 200 of 1000: loss=3.21 " + "l1=1.77" + "l2=1.45 f=-0.644 shape=(1, 9000, 1)
logits [[ 2.856798  -0.3557599  1.71417   -6.7906337]]
Iteration 300 of 1000: loss=2.77 " + "l1=1.01" + "l2=1.77 f=-0.645 shape=(1, 9000, 1)
logits [[ 1.79816    -0.03132892  1.4495498  -5.795257  ]]
Iteration 400 of 1000: loss=2.41 " + "l1=0.565" + "l2=1.84 f=-0.634 shape=(1, 9000, 1)
logits [[ 1.274852   0.2480032  1.2536374 -5.31342  ]]
Iteration 500 of 1000: loss=2.16 " + "l1=0.439" + "l2=1.72 f=-0.614 shape=(1, 9000, 1)
logits [[ 1.1758347   0.37700194  1.1565107  -5.16543   ]]
Iteration 600 of 1000: loss=1.97 " + "l1=0.305" + "l2=1.67 f=-0.59 shape=(1, 9000, 1)
logits [[ 1.0615695  0.5069187  1.056405  -4.985439 ]]
Iteration 700 of 1000: loss=1.83 " + "l1=0.192" + "l2=1.64 f=-0.564 shape=(1, 9000, 1)
logits [[ 0.94113284  0.60579664  0.9550826  -4.7597685 ]]
Iteration 800 of 1000: loss=1.72 " + "l1=0.145" + "l2=1.58 f=-0.547 shape=(1, 9000, 1)
logits [[ 0.91328365  0.6498129   0.89546984 -4.6480794 ]]
Iteration 900 of 1000: loss=1.65 " + "l1=0.0909" + "l2=1.56 f=-0.539 shape=(1, 9000, 1)
logits [[ 0.8420073   0.6872958   0.85250634 -4.5367208 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=7.91 " + "l1=7.91" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  7.3981137  -2.8029723   3.0884364 -10.809018 ]]
Iteration 100 of 1000: loss=4.63 " + "l1=2.66" + "l2=1.97 f=-0.646 shape=(1, 9000, 1)
logits [[ 3.0556662  -0.37923032  1.8038203  -7.0637546 ]]
Iteration 200 of 1000: loss=3.37 " + "l1=0.941" + "l2=2.43 f=-0.657 shape=(1, 9000, 1)
logits [[ 1.3741131   0.16159199  1.3764203  -5.5382676 ]]
Iteration 300 of 1000: loss=2.9 " + "l1=0.583" + "l2=2.31 f=-0.64 shape=(1, 9000, 1)
logits [[ 1.1767321  0.4255548  1.1774924 -5.3381424]]
Iteration 400 of 1000: loss=2.67 " + "l1=0.415" + "l2=2.25 f=-0.615 shape=(1, 9000, 1)
logits [[ 1.0677046  0.5329019  1.0680475 -5.128634 ]]
Iteration 500 of 1000: loss=2.48 " + "l1=0.284" + "l2=2.19 f=-0.598 shape=(1, 9000, 1)
logits [[ 0.9794689  0.6174772  0.9839412 -4.972733 ]]
Iteration 600 of 1000: loss=2.31 " + "l1=0.173" + "l2=2.14 f=-0.582 shape=(1, 9000, 1)
logits [[ 0.90860665  0.6956503   0.919415   -4.850066  ]]
Iteration 700 of 1000: loss=2.16 " + "l1=0.0728" + "l2=2.09 f=-0.573 shape=(1, 9000, 1)
logits [[ 0.8432407   0.77068394  0.86458284 -4.771531  ]]
Iteration 800 of 1000: loss=2.04 " + "l1=0.0111" + "l2=2.03 f=-0.561 shape=(1, 9000, 1)
logits [[ 0.8191226   0.8073886   0.82165575 -4.691142  ]]
Iteration 900 of 1000: loss=1.97 " + "l1=0.0284" + "l2=1.94 f=-0.551 shape=(1, 9000, 1)
logits [[ 0.8292734   0.79261434  0.81523424 -4.642281  ]]
--- 304.90021800994873 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0431 " + "l1=0.0431" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  7.3981137  -2.8029723   3.0884364 -10.809018 ]]
Iteration 100 of 1000: loss=0.0429 " + "l1=0.0427" + "l2=0.000197 f=-0.783 shape=(1, 9000, 1)
logits [[  7.3696423  -2.8122482   3.0967636 -10.787258 ]]
Iteration 200 of 1000: loss=0.0429 " + "l1=0.0427" + "l2=0.000152 f=-0.783 shape=(1, 9000, 1)
logits [[  7.368863   -2.8132403   3.097045  -10.786307 ]]
Iteration 300 of 1000: loss=0.0429 " + "l1=0.0427" + "l2=0.000188 f=-0.784 shape=(1, 9000, 1)
logits [[  7.365577   -2.8148715   3.0981872 -10.783593 ]]
Iteration 400 of 1000: loss=0.0429 " + "l1=0.0426" + "l2=0.000232 f=-0.784 shape=(1, 9000, 1)
logits [[  7.362136   -2.8164754   3.099521  -10.780988 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.431 " + "l1=0.431" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  7.3981137  -2.8029723   3.0884364 -10.809018 ]]
Iteration 100 of 1000: loss=0.414 " + "l1=0.404" + "l2=0.00996 f=-0.794 shape=(1, 9000, 1)
logits [[  7.186285   -2.8655057   3.1420987 -10.639527 ]]
Iteration 200 of 1000: loss=0.409 " + "l1=0.395" + "l2=0.0134 f=-0.799 shape=(1, 9000, 1)
logits [[  7.111138   -2.888977    3.1591744 -10.575414 ]]
Iteration 300 of 1000: loss=0.404 " + "l1=0.387" + "l2=0.0169 f=-0.801 shape=(1, 9000, 1)
logits [[  7.0448213  -2.9092824   3.176437  -10.516153 ]]
Iteration 400 of 1000: loss=0.4 " + "l1=0.38" + "l2=0.0199 f=-0.803 shape=(1, 9000, 1)
logits [[  6.990933   -2.9256864   3.1918702 -10.4710865]]
Iteration 500 of 1000: loss=0.397 " + "l1=0.373" + "l2=0.0233 f=-0.805 shape=(1, 9000, 1)
logits [[  6.939973   -2.9404523   3.2069254 -10.427891 ]]
Iteration 600 of 1000: loss=0.394 " + "l1=0.368" + "l2=0.0257 f=-0.806 shape=(1, 9000, 1)
logits [[  6.89926    -2.9498148   3.2192395 -10.394488 ]]
Iteration 700 of 1000: loss=0.391 " + "l1=0.364" + "l2=0.0274 f=-0.806 shape=(1, 9000, 1)
logits [[  6.8662343  -2.9549735   3.22921   -10.364911 ]]
Iteration 800 of 1000: loss=0.389 " + "l1=0.36" + "l2=0.0293 f=-0.805 shape=(1, 9000, 1)
logits [[  6.832535   -2.9566643   3.236955  -10.33409  ]]
Iteration 900 of 1000: loss=0.387 " + "l1=0.355" + "l2=0.0315 f=-0.804 shape=(1, 9000, 1)
logits [[  6.7944374  -2.959276    3.2432115 -10.296214 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.31 " + "l1=4.31" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  7.3981137  -2.8029723   3.0884364 -10.809018 ]]
Iteration 100 of 1000: loss=2.23 " + "l1=0.899" + "l2=1.33 f=-0.851 shape=(1, 9000, 1)
logits [[ 4.241837  -3.1682966  3.3431644 -7.8217287]]
Iteration 200 of 1000: loss=1.44 " + "l1=0.0211" + "l2=1.42 f=-0.84 shape=(1, 9000, 1)
logits [[ 3.3299186 -3.1613321  3.3088367 -6.835499 ]]
Iteration 300 of 1000: loss=1.19 " + "l1=0.00956" + "l2=1.18 f=-0.816 shape=(1, 9000, 1)
logits [[ 3.2922666 -3.147632   3.2827048 -6.690943 ]]
Iteration 400 of 1000: loss=1.06 " + "l1=0.00946" + "l2=1.05 f=-0.797 shape=(1, 9000, 1)
logits [[ 3.292595  -3.1263862  3.2831368 -6.63768  ]]
Iteration 500 of 1000: loss=0.95 " + "l1=0.00227" + "l2=0.948 f=-0.787 shape=(1, 9000, 1)
logits [[ 3.2828922 -3.1229806  3.280623  -6.5905046]]
Iteration 600 of 1000: loss=0.869 " + "l1=0.0168" + "l2=0.852 f=-0.783 shape=(1, 9000, 1)
logits [[ 3.302516  -3.135291   3.285764  -6.5838265]]
Iteration 700 of 1000: loss=0.764 " + "l1=0" + "l2=0.764 f=-0.784 shape=(1, 9000, 1)
logits [[ 3.2979655 -3.1820397  3.298206  -6.548657 ]]
Iteration 800 of 1000: loss=0.702 " + "l1=0" + "l2=0.702 f=-0.78 shape=(1, 9000, 1)
logits [[ 3.302715  -3.2022092  3.3124013 -6.532799 ]]
Iteration 900 of 1000: loss=0.659 " + "l1=0" + "l2=0.659 f=-0.772 shape=(1, 9000, 1)
logits [[ 3.292271  -3.2064278  3.311787  -6.486099 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.37 " + "l1=2.37" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  7.3981137  -2.8029723   3.0884364 -10.809018 ]]
Iteration 100 of 1000: loss=1.75 " + "l1=1.33" + "l2=0.413 f=-0.841 shape=(1, 9000, 1)
logits [[ 5.7907085 -3.196803   3.3647206 -9.323052 ]]
Iteration 200 of 1000: loss=1.51 " + "l1=0.96" + "l2=0.553 f=-0.844 shape=(1, 9000, 1)
logits [[ 5.1251864 -3.2155144  3.3801224 -8.664636 ]]
Iteration 300 of 1000: loss=1.29 " + "l1=0.597" + "l2=0.694 f=-0.831 shape=(1, 9000, 1)
logits [[ 4.402588  -3.1438792  3.3166597 -7.900362 ]]
Iteration 400 of 1000: loss=1.13 " + "l1=0.368" + "l2=0.758 f=-0.816 shape=(1, 9000, 1)
logits [[ 3.9739327 -3.1352625  3.3039951 -7.405785 ]]
Iteration 500 of 1000: loss=1.01 " + "l1=0.229" + "l2=0.78 f=-0.794 shape=(1, 9000, 1)
logits [[ 3.6998506 -3.1297677  3.2833304 -7.0275517]]
Iteration 600 of 1000: loss=0.916 " + "l1=0.144" + "l2=0.772 f=-0.767 shape=(1, 9000, 1)
logits [[ 3.557468  -3.1497316  3.2957816 -6.772295 ]]
Iteration 700 of 1000: loss=0.817 " + "l1=0.0325" + "l2=0.784 f=-0.74 shape=(1, 9000, 1)
logits [[ 3.3362932 -3.124123   3.2771974 -6.4491744]]
Iteration 800 of 1000: loss=0.678 " + "l1=0.00131" + "l2=0.676 f=-0.743 shape=(1, 9000, 1)
logits [[ 3.283193  -3.2066216  3.2808125 -6.3274713]]
Iteration 900 of 1000: loss=0.612 " + "l1=0" + "l2=0.612 f=-0.747 shape=(1, 9000, 1)
logits [[ 3.27002   -3.2534006  3.2777128 -6.282419 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.4 " + "l1=1.4" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  7.3981137  -2.8029723   3.0884364 -10.809018 ]]
Iteration 100 of 1000: loss=1.19 " + "l1=1.05" + "l2=0.146 f=-0.822 shape=(1, 9000, 1)
logits [[ 6.489022  -3.0479805  3.2638876 -9.994168 ]]
Iteration 200 of 1000: loss=1.11 " + "l1=0.919" + "l2=0.186 f=-0.828 shape=(1, 9000, 1)
logits [[ 6.147253  -3.1202369  3.318922  -9.657259 ]]
Iteration 300 of 1000: loss=1.04 " + "l1=0.814" + "l2=0.23 f=-0.83 shape=(1, 9000, 1)
logits [[ 5.8504524 -3.1654906  3.3459666 -9.352356 ]]
Iteration 400 of 1000: loss=0.992 " + "l1=0.727" + "l2=0.265 f=-0.829 shape=(1, 9000, 1)
logits [[ 5.5840535 -3.174172   3.348111  -9.075751 ]]
Iteration 500 of 1000: loss=0.957 " + "l1=0.676" + "l2=0.281 f=-0.823 shape=(1, 9000, 1)
logits [[ 5.42179   -3.1622212  3.3419242 -8.893027 ]]
Iteration 600 of 1000: loss=0.918 " + "l1=0.615" + "l2=0.304 f=-0.813 shape=(1, 9000, 1)
logits [[ 5.227366 -3.149385  3.336303 -8.664669]]
Iteration 700 of 1000: loss=0.866 " + "l1=0.52" + "l2=0.346 f=-0.803 shape=(1, 9000, 1)
logits [[ 4.891022  -3.1056929  3.291516  -8.28932  ]]
Iteration 800 of 1000: loss=0.808 " + "l1=0.421" + "l2=0.387 f=-0.797 shape=(1, 9000, 1)
logits [[ 4.531933  -3.0593786  3.2364504 -7.8976035]]
Iteration 900 of 1000: loss=0.769 " + "l1=0.358" + "l2=0.411 f=-0.782 shape=(1, 9000, 1)
logits [[ 4.319076  -3.0291674  3.2165954 -7.6348834]]
--- 280.2023754119873 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.182 " + "l1=0.182" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  7.3981137  -2.8029723   3.0884364 -10.809018 ]]
Iteration 100 of 1000: loss=0.181 " + "l1=0.181" + "l2=0.000515 f=-0.779 shape=(1, 9000, 1)
logits [[  7.340968   -2.7894468   3.071836  -10.738296 ]]
Iteration 200 of 1000: loss=0.181 " + "l1=0.181" + "l2=0.000556 f=-0.778 shape=(1, 9000, 1)
logits [[  7.330182   -2.7864163   3.0683262 -10.725803 ]]
Iteration 300 of 1000: loss=0.181 " + "l1=0.18" + "l2=0.000709 f=-0.778 shape=(1, 9000, 1)
logits [[  7.317495   -2.7828615   3.0640132 -10.71049  ]]
Iteration 400 of 1000: loss=0.181 " + "l1=0.18" + "l2=0.000877 f=-0.778 shape=(1, 9000, 1)
logits [[  7.3058696  -2.77935     3.0599647 -10.696577 ]]
Iteration 500 of 1000: loss=0.181 " + "l1=0.18" + "l2=0.00102 f=-0.777 shape=(1, 9000, 1)
logits [[  7.2956996  -2.7759702   3.0562317 -10.684623 ]]
Iteration 600 of 1000: loss=0.181 " + "l1=0.18" + "l2=0.00118 f=-0.777 shape=(1, 9000, 1)
logits [[  7.286818   -2.7727737   3.0530334 -10.67438  ]]
Iteration 700 of 1000: loss=0.181 " + "l1=0.179" + "l2=0.00131 f=-0.776 shape=(1, 9000, 1)
logits [[  7.2793036  -2.769602    3.0501168 -10.665811 ]]
Iteration 800 of 1000: loss=0.181 " + "l1=0.179" + "l2=0.0014 f=-0.776 shape=(1, 9000, 1)
logits [[  7.2725716  -2.7667756   3.0475836 -10.658225 ]]
Iteration 900 of 1000: loss=0.181 " + "l1=0.179" + "l2=0.00159 f=-0.776 shape=(1, 9000, 1)
logits [[  7.266511   -2.7640154   3.0453389 -10.651425 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.82 " + "l1=1.82" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  7.3981137  -2.8029723   3.0884364 -10.809018 ]]
Iteration 100 of 1000: loss=1.74 " + "l1=1.69" + "l2=0.0525 f=-0.762 shape=(1, 9000, 1)
logits [[  6.797386   -2.7018979   2.9389846 -10.081163 ]]
Iteration 200 of 1000: loss=1.7 " + "l1=1.61" + "l2=0.0861 f=-0.747 shape=(1, 9000, 1)
logits [[ 6.4678845 -2.6647277  2.866267  -9.659347 ]]
Iteration 300 of 1000: loss=1.66 " + "l1=1.55" + "l2=0.113 f=-0.734 shape=(1, 9000, 1)
logits [[ 6.2033496 -2.6220107  2.799704  -9.315189 ]]
Iteration 400 of 1000: loss=1.64 " + "l1=1.5" + "l2=0.136 f=-0.723 shape=(1, 9000, 1)
logits [[ 5.9836993 -2.581263   2.7435827 -9.036465 ]]
Iteration 500 of 1000: loss=1.61 " + "l1=1.46" + "l2=0.157 f=-0.711 shape=(1, 9000, 1)
logits [[ 5.7829638 -2.5391169  2.6930919 -8.779654 ]]
Iteration 600 of 1000: loss=1.58 " + "l1=1.41" + "l2=0.175 f=-0.697 shape=(1, 9000, 1)
logits [[ 5.5718637 -2.495333   2.644534  -8.511047 ]]
Iteration 700 of 1000: loss=1.55 " + "l1=1.35" + "l2=0.197 f=-0.675 shape=(1, 9000, 1)
logits [[ 5.324614  -2.4299936  2.5875995 -8.181026 ]]
Iteration 800 of 1000: loss=1.51 " + "l1=1.28" + "l2=0.224 f=-0.642 shape=(1, 9000, 1)
logits [[ 5.048366  -2.3349543  2.5157251 -7.7989235]]
Iteration 900 of 1000: loss=1.48 " + "l1=1.23" + "l2=0.246 f=-0.623 shape=(1, 9000, 1)
logits [[ 4.8294077 -2.2815883  2.4541965 -7.493551 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=18.2 " + "l1=18.2" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  7.3981137  -2.8029723   3.0884364 -10.809018 ]]
Iteration 100 of 1000: loss=8.31 " + "l1=4.07" + "l2=4.24 f=-0.408 shape=(1, 9000, 1)
logits [[ 1.2053282 -1.2213739  1.2275398 -2.8424013]]
Iteration 200 of 1000: loss=5.87 " + "l1=1.43" + "l2=4.43 f=-0.261 shape=(1, 9000, 1)
logits [[ 0.34176704 -0.9072177   0.47755596 -0.9551446 ]]
Iteration 300 of 1000: loss=4.9 " + "l1=0.448" + "l2=4.45 f=-0.216 shape=(1, 9000, 1)
logits [[ 0.00233099 -0.81139034  0.19559254 -0.25228482]]
Iteration 400 of 1000: loss=4.29 " + "l1=0.02" + "l2=4.27 f=-0.193 shape=(1, 9000, 1)
logits [[-0.09964109 -0.764571    0.05519289  0.03523909]]
Iteration 500 of 1000: loss=3.79 " + "l1=0.0276" + "l2=3.76 f=-0.191 shape=(1, 9000, 1)
logits [[-0.02231132 -0.8022571   0.04328007  0.01568589]]
Iteration 600 of 1000: loss=3.47 " + "l1=0" + "l2=3.47 f=-0.18 shape=(1, 9000, 1)
logits [[ 0.0294337  -0.87511265  0.06239654  0.06292325]]
Iteration 700 of 1000: loss=3.19 " + "l1=0" + "l2=3.19 f=-0.185 shape=(1, 9000, 1)
logits [[ 0.03566092 -0.94159764  0.07396138  0.09155469]]
Iteration 800 of 1000: loss=2.96 " + "l1=0.0295" + "l2=2.93 f=-0.186 shape=(1, 9000, 1)
logits [[ 0.06822676 -0.9947575   0.10627617  0.0768193 ]]
Iteration 900 of 1000: loss=2.77 " + "l1=0.0153" + "l2=2.75 f=-0.191 shape=(1, 9000, 1)
logits [[ 0.04304879 -1.0234464   0.1158261   0.10054764]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=10 " + "l1=10" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  7.3981137  -2.8029723   3.0884364 -10.809018 ]]
Iteration 100 of 1000: loss=6.53 " + "l1=4.29" + "l2=2.24 f=-0.568 shape=(1, 9000, 1)
logits [[ 2.6991396 -1.7258335  1.8583262 -5.1029873]]
Iteration 200 of 1000: loss=4.94 " + "l1=2.29" + "l2=2.65 f=-0.428 shape=(1, 9000, 1)
logits [[ 1.2869444 -1.3995895  1.2857654 -2.8835335]]
Iteration 300 of 1000: loss=4.35 " + "l1=1.75" + "l2=2.59 f=-0.376 shape=(1, 9000, 1)
logits [[ 0.99277353 -1.2982023   0.99374723 -2.1906328 ]]
Iteration 400 of 1000: loss=4.02 " + "l1=1.37" + "l2=2.64 f=-0.34 shape=(1, 9000, 1)
logits [[ 0.7484659 -1.1203797  0.7550402 -1.7418582]]
Iteration 500 of 1000: loss=3.67 " + "l1=1.01" + "l2=2.66 f=-0.292 shape=(1, 9000, 1)
logits [[ 0.53008187 -0.94896394  0.5471159  -1.2958466 ]]
Iteration 600 of 1000: loss=3.33 " + "l1=0.562" + "l2=2.77 f=-0.245 shape=(1, 9000, 1)
logits [[ 0.18485713 -0.81112045  0.33314693 -0.68844634]]
Iteration 700 of 1000: loss=3.01 " + "l1=0.295" + "l2=2.72 f=-0.225 shape=(1, 9000, 1)
logits [[ 0.0241703  -0.79087317  0.20251293 -0.33462062]]
Iteration 800 of 1000: loss=2.68 " + "l1=0.081" + "l2=2.6 f=-0.218 shape=(1, 9000, 1)
logits [[-0.10796488 -0.8469243   0.11513297 -0.03214012]]
Iteration 900 of 1000: loss=2.35 " + "l1=0" + "l2=2.35 f=-0.214 shape=(1, 9000, 1)
logits [[-0.10131589 -0.9593598   0.09909087  0.10439877]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.92 " + "l1=5.92" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[  7.3981137  -2.8029723   3.0884364 -10.809018 ]]
Iteration 100 of 1000: loss=4.75 " + "l1=3.9" + "l2=0.845 f=-0.679 shape=(1, 9000, 1)
logits [[ 4.6011853 -2.3255484  2.4205086 -7.4129963]]
Iteration 200 of 1000: loss=4.09 " + "l1=2.83" + "l2=1.26 f=-0.582 shape=(1, 9000, 1)
logits [[ 3.1223822 -1.8261694  1.9472264 -5.5711784]]
Iteration 300 of 1000: loss=3.57 " + "l1=2.01" + "l2=1.55 f=-0.497 shape=(1, 9000, 1)
logits [[ 2.0824673 -1.5844474  1.6303799 -4.115887 ]]
Iteration 400 of 1000: loss=3.26 " + "l1=1.55" + "l2=1.71 f=-0.436 shape=(1, 9000, 1)
logits [[ 1.5552962 -1.5241257  1.434481  -3.2109127]]
Iteration 500 of 1000: loss=3.02 " + "l1=1.25" + "l2=1.77 f=-0.388 shape=(1, 9000, 1)
logits [[ 1.2444911 -1.4436167  1.2460704 -2.598756 ]]
Iteration 600 of 1000: loss=2.83 " + "l1=1.08" + "l2=1.75 f=-0.352 shape=(1, 9000, 1)
logits [[ 1.1131355 -1.4254433  1.1088645 -2.20534  ]]
Iteration 700 of 1000: loss=2.65 " + "l1=0.899" + "l2=1.75 f=-0.315 shape=(1, 9000, 1)
logits [[ 0.9398321  -1.3241785   0.94449705 -1.8217275 ]]
Iteration 800 of 1000: loss=2.49 " + "l1=0.758" + "l2=1.73 f=-0.285 shape=(1, 9000, 1)
logits [[ 0.7976063  -1.208043    0.80271876 -1.5304698 ]]
Iteration 900 of 1000: loss=2.34 " + "l1=0.638" + "l2=1.7 f=-0.27 shape=(1, 9000, 1)
logits [[ 0.66576904 -1.1184533   0.6670043  -1.2953218 ]]
--- 313.53390169143677 seconds ---
Adv result:3
Loading record A05703
(1, 17588)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0332 " + "l1=0.0332" + "l2=0 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.4581348 -1.8592368  1.3991925 -2.309329 ]]
Iteration 100 of 1000: loss=0.0328 " + "l1=0.0325" + "l2=0.00031 f=-0.322 shape=(1, 9000, 1)
logits [[ 1.4208728 -1.8242574  1.3754828 -2.2612584]]
Iteration 200 of 1000: loss=0.0326 " + "l1=0.0323" + "l2=0.000319 f=-0.321 shape=(1, 9000, 1)
logits [[ 1.4144735 -1.8184868  1.3702611 -2.250446 ]]
Iteration 300 of 1000: loss=0.0326 " + "l1=0.0322" + "l2=0.000399 f=-0.32 shape=(1, 9000, 1)
logits [[ 1.407261  -1.812357   1.3646047 -2.2386024]]
Iteration 400 of 1000: loss=0.0325 " + "l1=0.0321" + "l2=0.000451 f=-0.319 shape=(1, 9000, 1)
logits [[ 1.4002327 -1.8063029  1.3588959 -2.2268922]]
Iteration 500 of 1000: loss=0.0325 " + "l1=0.0319" + "l2=0.000569 f=-0.317 shape=(1, 9000, 1)
logits [[ 1.3933364 -1.8002675  1.3532356 -2.2156327]]
Iteration 600 of 1000: loss=0.0325 " + "l1=0.0318" + "l2=0.000646 f=-0.316 shape=(1, 9000, 1)
logits [[ 1.386872  -1.7944719  1.3477627 -2.2049513]]
Iteration 700 of 1000: loss=0.0325 " + "l1=0.0317" + "l2=0.000791 f=-0.315 shape=(1, 9000, 1)
logits [[ 1.3804027 -1.7884113  1.3421178 -2.1940732]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.332 " + "l1=0.332" + "l2=0 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.4581348 -1.8592368  1.3991925 -2.309329 ]]
Iteration 100 of 1000: loss=0.294 " + "l1=0.273" + "l2=0.0206 f=-0.278 shape=(1, 9000, 1)
logits [[ 1.1819396 -1.5475638  1.1812755 -1.9290646]]
Iteration 200 of 1000: loss=0.275 " + "l1=0.245" + "l2=0.0302 f=-0.259 shape=(1, 9000, 1)
logits [[ 1.0657603 -1.3823223  1.0668259 -1.7859532]]
Iteration 300 of 1000: loss=0.266 " + "l1=0.232" + "l2=0.0337 f=-0.25 shape=(1, 9000, 1)
logits [[ 1.008325  -1.3099693  1.0084536 -1.7084984]]
Iteration 400 of 1000: loss=0.259 " + "l1=0.222" + "l2=0.0367 f=-0.242 shape=(1, 9000, 1)
logits [[ 0.96293366 -1.2590618   0.96374124 -1.6365951 ]]
Iteration 500 of 1000: loss=0.253 " + "l1=0.213" + "l2=0.0402 f=-0.235 shape=(1, 9000, 1)
logits [[ 0.91864157 -1.2084217   0.92329407 -1.5737394 ]]
Iteration 600 of 1000: loss=0.248 " + "l1=0.207" + "l2=0.0416 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.8897728 -1.1740426  0.8918511 -1.5264537]]
Iteration 700 of 1000: loss=0.243 " + "l1=0.199" + "l2=0.0435 f=-0.223 shape=(1, 9000, 1)
logits [[ 0.84645015 -1.1351597   0.8596159  -1.4637914 ]]
Iteration 800 of 1000: loss=0.238 " + "l1=0.193" + "l2=0.0449 f=-0.217 shape=(1, 9000, 1)
logits [[ 0.80237025 -1.1014557   0.83070123 -1.399907  ]]
Iteration 900 of 1000: loss=0.233 " + "l1=0.187" + "l2=0.0462 f=-0.21 shape=(1, 9000, 1)
logits [[ 0.7582665 -1.0688791  0.8019302 -1.3329669]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.32 " + "l1=3.32" + "l2=0 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.4581348 -1.8592368  1.3991925 -2.309329 ]]
Iteration 100 of 1000: loss=1.32 " + "l1=0.625" + "l2=0.691 f=-0.171 shape=(1, 9000, 1)
logits [[-0.00308846 -0.36631867  0.25867915 -0.5735891 ]]
Iteration 200 of 1000: loss=0.7 " + "l1=0.0154" + "l2=0.685 f=-0.185 shape=(1, 9000, 1)
logits [[-0.52154535 -0.06411285 -0.04869827 -0.10753403]]
Iteration 300 of 1000: loss=0.542 " + "l1=0" + "l2=0.542 f=-0.188 shape=(1, 9000, 1)
logits [[-0.5519943  -0.06226873 -0.06820454 -0.06776166]]
Iteration 400 of 1000: loss=0.483 " + "l1=0.00646" + "l2=0.477 f=-0.192 shape=(1, 9000, 1)
logits [[-0.5290585  -0.04989558 -0.0434313  -0.14475968]]
Iteration 500 of 1000: loss=0.445 " + "l1=0.0066" + "l2=0.439 f=-0.192 shape=(1, 9000, 1)
logits [[-0.5314673  -0.04841232 -0.04181233 -0.14581451]]
Iteration 600 of 1000: loss=0.409 " + "l1=1.86e-05" + "l2=0.409 f=-0.186 shape=(1, 9000, 1)
logits [[-0.55077744 -0.05604649 -0.05602786 -0.08087264]]
Iteration 700 of 1000: loss=0.402 " + "l1=0.0145" + "l2=0.388 f=-0.191 shape=(1, 9000, 1)
logits [[-0.530324   -0.05556824 -0.04108486 -0.13661063]]
Iteration 800 of 1000: loss=0.374 " + "l1=0" + "l2=0.374 f=-0.189 shape=(1, 9000, 1)
logits [[-0.5436505  -0.04602674 -0.04633111 -0.11820378]]
Iteration 900 of 1000: loss=0.36 " + "l1=0" + "l2=0.36 f=-0.186 shape=(1, 9000, 1)
logits [[-0.54721427 -0.04073524 -0.04882216 -0.10662648]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.82 " + "l1=1.82" + "l2=0 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.4581348 -1.8592368  1.3991925 -2.309329 ]]
Iteration 100 of 1000: loss=1.05 " + "l1=0.756" + "l2=0.29 f=-0.195 shape=(1, 9000, 1)
logits [[ 0.5336263 -0.746347   0.6284824 -1.1960238]]
Iteration 200 of 1000: loss=0.764 " + "l1=0.41" + "l2=0.353 f=-0.176 shape=(1, 9000, 1)
logits [[ 0.06276579 -0.44291925  0.30274314 -0.62562275]]
Iteration 300 of 1000: loss=0.577 " + "l1=0.152" + "l2=0.424 f=-0.154 shape=(1, 9000, 1)
logits [[-0.3455092  -0.24131571  0.0359301  -0.06344002]]
Iteration 400 of 1000: loss=0.486 " + "l1=0.0642" + "l2=0.422 f=-0.173 shape=(1, 9000, 1)
logits [[-0.44481954 -0.1361347  -0.01935268 -0.09043342]]
Iteration 500 of 1000: loss=0.435 " + "l1=0.021" + "l2=0.414 f=-0.183 shape=(1, 9000, 1)
logits [[-0.4806635  -0.09055635 -0.05240703 -0.10819387]]
Iteration 600 of 1000: loss=0.399 " + "l1=0.00858" + "l2=0.39 f=-0.187 shape=(1, 9000, 1)
logits [[-0.5015049  -0.07473247 -0.05913231 -0.11078434]]
Iteration 700 of 1000: loss=0.369 " + "l1=0.00254" + "l2=0.367 f=-0.185 shape=(1, 9000, 1)
logits [[-0.5213831  -0.07243904 -0.06782645 -0.0802476 ]]
Iteration 800 of 1000: loss=0.352 " + "l1=0.00213" + "l2=0.35 f=-0.186 shape=(1, 9000, 1)
logits [[-0.5211981  -0.07060508 -0.06673644 -0.08373345]]
Iteration 900 of 1000: loss=0.34 " + "l1=0.0109" + "l2=0.329 f=-0.182 shape=(1, 9000, 1)
logits [[-0.52346075 -0.07060968 -0.05074574 -0.08148099]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.08 " + "l1=1.08" + "l2=0 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.4581348 -1.8592368  1.3991925 -2.309329 ]]
Iteration 100 of 1000: loss=0.743 " + "l1=0.612" + "l2=0.132 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.8326646 -1.0450709  0.8369571 -1.5054729]]
Iteration 200 of 1000: loss=0.632 " + "l1=0.462" + "l2=0.17 f=-0.195 shape=(1, 9000, 1)
logits [[ 0.5469221  -0.77922726  0.64190924 -1.1898698 ]]
Iteration 300 of 1000: loss=0.559 " + "l1=0.359" + "l2=0.199 f=-0.178 shape=(1, 9000, 1)
logits [[ 0.3124102  -0.62548465  0.4806582  -0.8793014 ]]
Iteration 400 of 1000: loss=0.496 " + "l1=0.272" + "l2=0.224 f=-0.17 shape=(1, 9000, 1)
logits [[ 0.09808737 -0.5167639   0.32148    -0.5812354 ]]
Iteration 500 of 1000: loss=0.447 " + "l1=0.215" + "l2=0.232 f=-0.163 shape=(1, 9000, 1)
logits [[-0.06271654 -0.43730018  0.22415544 -0.3778689 ]]
Iteration 600 of 1000: loss=0.408 " + "l1=0.156" + "l2=0.252 f=-0.153 shape=(1, 9000, 1)
logits [[-0.22008559 -0.3627868   0.1174702  -0.14726439]]
Iteration 700 of 1000: loss=0.372 " + "l1=0.117" + "l2=0.255 f=-0.145 shape=(1, 9000, 1)
logits [[-0.328963   -0.3128516   0.04756012  0.01446462]]
Iteration 800 of 1000: loss=0.352 " + "l1=0.114" + "l2=0.238 f=-0.156 shape=(1, 9000, 1)
logits [[-0.321401   -0.29401305  0.05781886 -0.06501275]]
Iteration 900 of 1000: loss=0.331 " + "l1=0.0995" + "l2=0.232 f=-0.158 shape=(1, 9000, 1)
logits [[-0.36108539 -0.28018603  0.02596393 -0.01566674]]
--- 301.02790093421936 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.000589 " + "l1=0.000589" + "l2=0 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.4581348 -1.8592368  1.3991925 -2.309329 ]]
Iteration 100 of 1000: loss=0.000501 " + "l1=0.000412" + "l2=8.89e-05 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.4431293 -1.859901   1.4019288 -2.2971141]]
Iteration 200 of 1000: loss=0.000476 " + "l1=0.000396" + "l2=7.94e-05 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.4420731 -1.8604898  1.4024538 -2.2970657]]
Iteration 300 of 1000: loss=0.000476 " + "l1=0.000371" + "l2=0.000106 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.4402221 -1.8610451  1.4031392 -2.2962105]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.000295 " + "l1=0.000295" + "l2=0 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.4581348 -1.8592368  1.3991925 -2.309329 ]]
Iteration 100 of 1000: loss=0.000281 " + "l1=0.000234" + "l2=4.67e-05 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.4480519 -1.8598229  1.4012468 -2.3012612]]
Iteration 200 of 1000: loss=0.000271 " + "l1=0.000237" + "l2=3.4e-05 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.4486334 -1.8601608  1.401216  -2.302073 ]]
Iteration 300 of 1000: loss=0.000273 " + "l1=0.000233" + "l2=3.99e-05 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.448034  -1.8603421  1.401379  -2.3017786]]
const [0.0025]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.000147 " + "l1=0.000147" + "l2=0 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.4581348 -1.8592368  1.3991925 -2.309329 ]]
Iteration 100 of 1000: loss=0.000155 " + "l1=0.000125" + "l2=3.07e-05 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.4506713 -1.859667   1.4007686 -2.3034048]]
const [0.00125]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.37e-05 " + "l1=7.37e-05" + "l2=0 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.4581348 -1.8592368  1.3991925 -2.309329 ]]
Iteration 100 of 1000: loss=8.82e-05 " + "l1=6.46e-05" + "l2=2.36e-05 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.4520925 -1.8596431  1.4004508 -2.3044453]]
const [0.000625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.68e-05 " + "l1=3.68e-05" + "l2=0 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.4581348 -1.8592368  1.3991925 -2.309329 ]]
Iteration 100 of 1000: loss=5.14e-05 " + "l1=3.31e-05" + "l2=1.83e-05 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.453238  -1.8597759  1.4003135 -2.3054602]]
--- 70.03731513023376 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0377 " + "l1=0.0377" + "l2=0 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.4581348 -1.8592368  1.3991925 -2.309329 ]]
Iteration 100 of 1000: loss=0.0367 " + "l1=0.0361" + "l2=0.000573 f=-0.317 shape=(1, 9000, 1)
logits [[ 1.4047366 -1.8340709  1.3686378 -2.2056665]]
Iteration 200 of 1000: loss=0.0363 " + "l1=0.0357" + "l2=0.000676 f=-0.313 shape=(1, 9000, 1)
logits [[ 1.3911417 -1.8259822  1.3580354 -2.17475  ]]
Iteration 300 of 1000: loss=0.036 " + "l1=0.0352" + "l2=0.000875 f=-0.309 shape=(1, 9000, 1)
logits [[ 1.3761781 -1.8174896  1.3460506 -2.1401284]]
Iteration 400 of 1000: loss=0.0358 " + "l1=0.0347" + "l2=0.00108 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.3620355 -1.8099651  1.334853  -2.1076698]]
Iteration 500 of 1000: loss=0.0356 " + "l1=0.0343" + "l2=0.00129 f=-0.302 shape=(1, 9000, 1)
logits [[ 1.3485129 -1.8034004  1.3247151 -2.077774 ]]
Iteration 600 of 1000: loss=0.0354 " + "l1=0.0339" + "l2=0.00149 f=-0.299 shape=(1, 9000, 1)
logits [[ 1.3363733 -1.798131   1.3159772 -2.051597 ]]
Iteration 700 of 1000: loss=0.0352 " + "l1=0.0335" + "l2=0.0017 f=-0.297 shape=(1, 9000, 1)
logits [[ 1.3244193 -1.7935148  1.3077033 -2.0262458]]
Iteration 800 of 1000: loss=0.035 " + "l1=0.0332" + "l2=0.00187 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.3131763 -1.7891772  1.300132  -2.0034554]]
Iteration 900 of 1000: loss=0.035 " + "l1=0.0329" + "l2=0.00214 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.302303  -1.785416   1.2933216 -1.9830747]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.377 " + "l1=0.377" + "l2=0 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.4581348 -1.8592368  1.3991925 -2.309329 ]]
Iteration 100 of 1000: loss=0.294 " + "l1=0.258" + "l2=0.0362 f=-0.236 shape=(1, 9000, 1)
logits [[ 1.0612905 -1.63502    1.1063843 -1.4762547]]
Iteration 200 of 1000: loss=0.261 " + "l1=0.208" + "l2=0.0523 f=-0.198 shape=(1, 9000, 1)
logits [[ 0.88598377 -1.5431281   0.97299236 -1.1096815 ]]
Iteration 300 of 1000: loss=0.231 " + "l1=0.161" + "l2=0.0703 f=-0.17 shape=(1, 9000, 1)
logits [[ 0.7021819  -1.4665763   0.8444948  -0.76175386]]
Iteration 400 of 1000: loss=0.206 " + "l1=0.126" + "l2=0.0807 f=-0.156 shape=(1, 9000, 1)
logits [[ 0.5596479  -1.4264895   0.74978644 -0.5054323 ]]
Iteration 500 of 1000: loss=0.182 " + "l1=0.0871" + "l2=0.0954 f=-0.137 shape=(1, 9000, 1)
logits [[ 0.41340628 -1.3916      0.6495732  -0.22119403]]
Iteration 600 of 1000: loss=0.16 " + "l1=0.0551" + "l2=0.105 f=-0.123 shape=(1, 9000, 1)
logits [[ 0.29799578 -1.3678709   0.56544024  0.01422514]]
Iteration 700 of 1000: loss=0.14 " + "l1=0.0264" + "l2=0.113 f=-0.112 shape=(1, 9000, 1)
logits [[ 0.19770926 -1.3547746   0.48728555  0.2235921 ]]
Iteration 800 of 1000: loss=0.12 " + "l1=0.00354" + "l2=0.117 f=-0.103 shape=(1, 9000, 1)
logits [[ 0.11136664 -1.3328606   0.42253754  0.38712505]]
Iteration 900 of 1000: loss=0.104 " + "l1=0.00154" + "l2=0.102 f=-0.106 shape=(1, 9000, 1)
logits [[ 0.09781641 -1.3501242   0.4227586   0.4073475 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.207 " + "l1=0.207" + "l2=0 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.4581348 -1.8592368  1.3991925 -2.309329 ]]
Iteration 100 of 1000: loss=0.18 " + "l1=0.169" + "l2=0.0115 f=-0.274 shape=(1, 9000, 1)
logits [[ 1.2334145 -1.7307563  1.2347795 -1.8315802]]
Iteration 200 of 1000: loss=0.169 " + "l1=0.153" + "l2=0.0164 f=-0.251 shape=(1, 9000, 1)
logits [[ 1.1396732 -1.6772505  1.1524491 -1.6208715]]
Iteration 300 of 1000: loss=0.161 " + "l1=0.14" + "l2=0.0203 f=-0.238 shape=(1, 9000, 1)
logits [[ 1.0627666 -1.6452395  1.091888  -1.4607824]]
Iteration 400 of 1000: loss=0.154 " + "l1=0.13" + "l2=0.0239 f=-0.227 shape=(1, 9000, 1)
logits [[ 0.992784  -1.6216809  1.04306   -1.3222724]]
Iteration 500 of 1000: loss=0.148 " + "l1=0.12" + "l2=0.0277 f=-0.217 shape=(1, 9000, 1)
logits [[ 0.92328715 -1.5972006   0.9936569  -1.187155  ]]
Iteration 600 of 1000: loss=0.142 " + "l1=0.111" + "l2=0.0308 f=-0.209 shape=(1, 9000, 1)
logits [[ 0.86352706 -1.5779028   0.9490151  -1.0726229 ]]
Iteration 700 of 1000: loss=0.137 " + "l1=0.104" + "l2=0.0331 f=-0.204 shape=(1, 9000, 1)
logits [[ 0.80759513 -1.5611283   0.9105382  -0.97237813]]
Iteration 800 of 1000: loss=0.132 " + "l1=0.0961" + "l2=0.0356 f=-0.198 shape=(1, 9000, 1)
logits [[ 0.75260544 -1.5448201   0.87310165 -0.87398124]]
Iteration 900 of 1000: loss=0.127 " + "l1=0.0895" + "l2=0.0374 f=-0.193 shape=(1, 9000, 1)
logits [[ 0.7035812  -1.5273117   0.8401966  -0.78756565]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.292 " + "l1=0.292" + "l2=0 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.4581348 -1.8592368  1.3991925 -2.309329 ]]
Iteration 100 of 1000: loss=0.24 " + "l1=0.218" + "l2=0.0225 f=-0.254 shape=(1, 9000, 1)
logits [[ 1.145673  -1.6818146  1.1665648 -1.6447223]]
Iteration 200 of 1000: loss=0.22 " + "l1=0.189" + "l2=0.0309 f=-0.227 shape=(1, 9000, 1)
logits [[ 1.0190462 -1.6194555  1.0676626 -1.3739587]]
Iteration 300 of 1000: loss=0.203 " + "l1=0.163" + "l2=0.0401 f=-0.205 shape=(1, 9000, 1)
logits [[ 0.89897126 -1.5694036   0.97907895 -1.1293528 ]]
Iteration 400 of 1000: loss=0.189 " + "l1=0.142" + "l2=0.0475 f=-0.191 shape=(1, 9000, 1)
logits [[ 0.78720045 -1.5310487   0.9046617  -0.92519027]]
Iteration 500 of 1000: loss=0.176 " + "l1=0.119" + "l2=0.0565 f=-0.177 shape=(1, 9000, 1)
logits [[ 0.673192  -1.4869305  0.8223761 -0.7154383]]
Iteration 600 of 1000: loss=0.164 " + "l1=0.103" + "l2=0.0618 f=-0.168 shape=(1, 9000, 1)
logits [[ 0.5861297  -1.4591203   0.7626854  -0.56067026]]
Iteration 700 of 1000: loss=0.153 " + "l1=0.0856" + "l2=0.067 f=-0.156 shape=(1, 9000, 1)
logits [[ 0.4974843  -1.4356922   0.70914996 -0.39511386]]
Iteration 800 of 1000: loss=0.14 " + "l1=0.0693" + "l2=0.0712 f=-0.144 shape=(1, 9000, 1)
logits [[ 0.41907534 -1.4148117   0.65750617 -0.23624226]]
Iteration 900 of 1000: loss=0.128 " + "l1=0.0523" + "l2=0.0759 f=-0.133 shape=(1, 9000, 1)
logits [[ 0.34023723 -1.4058285   0.6044266  -0.0701988 ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.334 " + "l1=0.334" + "l2=0 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.4581348 -1.8592368  1.3991925 -2.309329 ]]
Iteration 100 of 1000: loss=0.268 " + "l1=0.24" + "l2=0.0285 f=-0.246 shape=(1, 9000, 1)
logits [[ 1.1047826 -1.6614146  1.1380408 -1.5634856]]
Iteration 200 of 1000: loss=0.242 " + "l1=0.202" + "l2=0.0402 f=-0.213 shape=(1, 9000, 1)
logits [[ 0.95800215 -1.5864192   1.0245162  -1.2496804 ]]
Iteration 300 of 1000: loss=0.22 " + "l1=0.167" + "l2=0.0526 f=-0.19 shape=(1, 9000, 1)
logits [[ 0.80932575 -1.523721    0.91927737 -0.9643016 ]]
Iteration 400 of 1000: loss=0.2 " + "l1=0.136" + "l2=0.0639 f=-0.172 shape=(1, 9000, 1)
logits [[ 0.67061895 -1.4745122   0.8226225  -0.70742935]]
Iteration 500 of 1000: loss=0.182 " + "l1=0.11" + "l2=0.0725 f=-0.16 shape=(1, 9000, 1)
logits [[ 0.5523349  -1.4389836   0.74331325 -0.4955551 ]]
Iteration 600 of 1000: loss=0.166 " + "l1=0.0833" + "l2=0.0822 f=-0.144 shape=(1, 9000, 1)
logits [[ 0.43731144 -1.4104947   0.6676147  -0.27129447]]
Iteration 700 of 1000: loss=0.149 " + "l1=0.0595" + "l2=0.0891 f=-0.13 shape=(1, 9000, 1)
logits [[ 0.34077194 -1.3874582   0.5992424  -0.07111344]]
Iteration 800 of 1000: loss=0.133 " + "l1=0.0391" + "l2=0.0936 f=-0.122 shape=(1, 9000, 1)
logits [[ 0.25734243 -1.3853642   0.540933    0.10015589]]
Iteration 900 of 1000: loss=0.117 " + "l1=0.0184" + "l2=0.0983 f=-0.113 shape=(1, 9000, 1)
logits [[ 0.1688886  -1.3643259   0.47596875  0.2691128 ]]
--- 319.0718643665314 seconds ---
Adv result:3
Loading record A05768
(1, 11056)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.082 " + "l1=0.082" + "l2=0 f=-0.446 shape=(1, 9000, 1)
logits [[ 6.180269  -2.0157893  3.505504  -9.454836 ]]
Iteration 100 of 1000: loss=0.0813 " + "l1=0.0809" + "l2=0.000433 f=-0.446 shape=(1, 9000, 1)
logits [[ 6.1256003 -1.9636068  3.4686155 -9.412852 ]]
Iteration 200 of 1000: loss=0.0811 " + "l1=0.0807" + "l2=0.000454 f=-0.446 shape=(1, 9000, 1)
logits [[ 6.11494   -1.9528188  3.459095  -9.403989 ]]
Iteration 300 of 1000: loss=0.081 " + "l1=0.0804" + "l2=0.000584 f=-0.446 shape=(1, 9000, 1)
logits [[ 6.102052  -1.9396443  3.4486778 -9.394163 ]]
Iteration 400 of 1000: loss=0.0808 " + "l1=0.0802" + "l2=0.000659 f=-0.446 shape=(1, 9000, 1)
logits [[ 6.0894303 -1.9265223  3.4386032 -9.384954 ]]
Iteration 500 of 1000: loss=0.0807 " + "l1=0.0799" + "l2=0.000783 f=-0.446 shape=(1, 9000, 1)
logits [[ 6.0775785 -1.913899   3.4293911 -9.376736 ]]
Iteration 600 of 1000: loss=0.0806 " + "l1=0.0797" + "l2=0.000951 f=-0.446 shape=(1, 9000, 1)
logits [[ 6.0663314 -1.902035   3.421067  -9.369498 ]]
Iteration 700 of 1000: loss=0.0806 " + "l1=0.0795" + "l2=0.00111 f=-0.446 shape=(1, 9000, 1)
logits [[ 6.055671  -1.8908958  3.4136567 -9.363448 ]]
Iteration 800 of 1000: loss=0.0805 " + "l1=0.0793" + "l2=0.00129 f=-0.447 shape=(1, 9000, 1)
logits [[ 6.0452156 -1.8804256  3.40688   -9.357672 ]]
Iteration 900 of 1000: loss=0.0804 " + "l1=0.079" + "l2=0.00137 f=-0.447 shape=(1, 9000, 1)
logits [[ 6.0347333 -1.8701476  3.4002612 -9.352142 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.82 " + "l1=0.82" + "l2=0 f=-0.446 shape=(1, 9000, 1)
logits [[ 6.180269  -2.0157893  3.505504  -9.454836 ]]
Iteration 100 of 1000: loss=0.753 " + "l1=0.712" + "l2=0.0413 f=-0.454 shape=(1, 9000, 1)
logits [[ 5.6178236 -1.4994639  3.1404722 -9.073768 ]]
Iteration 200 of 1000: loss=0.723 " + "l1=0.666" + "l2=0.0566 f=-0.454 shape=(1, 9000, 1)
logits [[ 5.374765  -1.287964   2.9888575 -8.893115 ]]
Iteration 300 of 1000: loss=0.695 " + "l1=0.626" + "l2=0.069 f=-0.453 shape=(1, 9000, 1)
logits [[ 5.147622  -1.1149874  2.8657532 -8.709419 ]]
Iteration 400 of 1000: loss=0.672 " + "l1=0.591" + "l2=0.0808 f=-0.454 shape=(1, 9000, 1)
logits [[ 4.937518   -0.97153735  2.7666276  -8.547873  ]]
Iteration 500 of 1000: loss=0.641 " + "l1=0.534" + "l2=0.106 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.5675926 -0.7755221  2.6560767 -8.33486  ]]
Iteration 600 of 1000: loss=0.609 " + "l1=0.49" + "l2=0.119 f=-0.481 shape=(1, 9000, 1)
logits [[ 4.269493  -0.6263138  2.5835671 -8.150866 ]]
Iteration 700 of 1000: loss=0.586 " + "l1=0.457" + "l2=0.129 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.0536523 -0.5172221  2.5229988 -7.9961734]]
Iteration 800 of 1000: loss=0.566 " + "l1=0.429" + "l2=0.137 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.8634777 -0.4262716  2.464886  -7.852382 ]]
Iteration 900 of 1000: loss=0.547 " + "l1=0.4" + "l2=0.147 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.6565876 -0.3409149  2.4097    -7.7063117]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.2 " + "l1=8.2" + "l2=0 f=-0.446 shape=(1, 9000, 1)
logits [[ 6.180269  -2.0157893  3.505504  -9.454836 ]]
Iteration 100 of 1000: loss=2.5 " + "l1=0.72" + "l2=1.78 f=-0.545 shape=(1, 9000, 1)
logits [[ 1.700582   1.023929   1.7435889 -6.6468606]]
Iteration 200 of 1000: loss=1.54 " + "l1=0.0519" + "l2=1.49 f=-0.538 shape=(1, 9000, 1)
logits [[ 1.4383926  1.3975126  1.4493849 -6.4379964]]
Iteration 300 of 1000: loss=1.28 " + "l1=0.0031" + "l2=1.28 f=-0.542 shape=(1, 9000, 1)
logits [[ 1.3977947  1.4178051  1.4209062 -6.4051356]]
Iteration 400 of 1000: loss=1.16 " + "l1=0.000165" + "l2=1.16 f=-0.541 shape=(1, 9000, 1)
logits [[ 1.391012   1.4145812  1.4147459 -6.383907 ]]
Iteration 500 of 1000: loss=1.08 " + "l1=0.00361" + "l2=1.07 f=-0.543 shape=(1, 9000, 1)
logits [[ 1.3836985  1.4061468  1.4097588 -6.371528 ]]
Iteration 600 of 1000: loss=1.02 " + "l1=0" + "l2=1.02 f=-0.546 shape=(1, 9000, 1)
logits [[ 1.3582256  1.4160107  1.4042633 -6.3624115]]
Iteration 700 of 1000: loss=0.972 " + "l1=0.0149" + "l2=0.957 f=-0.541 shape=(1, 9000, 1)
logits [[ 1.3830509  1.3958741  1.4107261 -6.354603 ]]
Iteration 800 of 1000: loss=0.924 " + "l1=0.00405" + "l2=0.92 f=-0.535 shape=(1, 9000, 1)
logits [[ 1.3954841  1.3914305  1.3920753 -6.3190427]]
Iteration 900 of 1000: loss=0.891 " + "l1=0" + "l2=0.891 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.3786845  1.38875    1.3796666 -6.270192 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.51 " + "l1=4.51" + "l2=0 f=-0.446 shape=(1, 9000, 1)
logits [[ 6.180269  -2.0157893  3.505504  -9.454836 ]]
Iteration 100 of 1000: loss=2.05 " + "l1=0.809" + "l2=1.24 f=-0.559 shape=(1, 9000, 1)
logits [[ 2.0822227   0.61129725  2.0480037  -6.978907  ]]
Iteration 200 of 1000: loss=1.48 " + "l1=0.403" + "l2=1.08 f=-0.525 shape=(1, 9000, 1)
logits [[ 1.7481112  1.0282745  1.7601407 -6.6382995]]
Iteration 300 of 1000: loss=1.24 " + "l1=0.2" + "l2=1.04 f=-0.529 shape=(1, 9000, 1)
logits [[ 1.5822158  1.2190496  1.572395  -6.490276 ]]
Iteration 400 of 1000: loss=1.09 " + "l1=0.0799" + "l2=1.01 f=-0.527 shape=(1, 9000, 1)
logits [[ 1.4628645  1.3260633  1.4713807 -6.36817  ]]
Iteration 500 of 1000: loss=0.992 " + "l1=0.0135" + "l2=0.979 f=-0.532 shape=(1, 9000, 1)
logits [[ 1.3873284  1.3862736  1.4107965 -6.3129497]]
Iteration 600 of 1000: loss=0.926 " + "l1=0" + "l2=0.926 f=-0.529 shape=(1, 9000, 1)
logits [[ 1.3713051  1.3887199  1.384208  -6.25975  ]]
Iteration 700 of 1000: loss=0.886 " + "l1=0" + "l2=0.886 f=-0.529 shape=(1, 9000, 1)
logits [[ 1.3428653  1.3770267  1.3675505 -6.204443 ]]
Iteration 800 of 1000: loss=0.853 " + "l1=0.0038" + "l2=0.849 f=-0.524 shape=(1, 9000, 1)
logits [[ 1.3250618  1.3536844  1.3606011 -6.136853 ]]
Iteration 900 of 1000: loss=0.828 " + "l1=0.00418" + "l2=0.824 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.3198556  1.3403538  1.3479568 -6.079681 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.66 " + "l1=2.66" + "l2=0 f=-0.446 shape=(1, 9000, 1)
logits [[ 6.180269  -2.0157893  3.505504  -9.454836 ]]
Iteration 100 of 1000: loss=1.77 " + "l1=1.15" + "l2=0.619 f=-0.521 shape=(1, 9000, 1)
logits [[ 3.4168708  -0.12325377  2.3350637  -7.7122736 ]]
Iteration 200 of 1000: loss=1.33 " + "l1=0.514" + "l2=0.818 f=-0.55 shape=(1, 9000, 1)
logits [[ 2.1257691   0.54367715  2.093707   -6.9628053 ]]
Iteration 300 of 1000: loss=1.11 " + "l1=0.413" + "l2=0.698 f=-0.54 shape=(1, 9000, 1)
logits [[ 1.9584961   0.70398706  1.9754312  -6.7992945 ]]
Iteration 400 of 1000: loss=0.971 " + "l1=0.319" + "l2=0.653 f=-0.53 shape=(1, 9000, 1)
logits [[ 1.827633   0.8498112  1.8308525 -6.626473 ]]
Iteration 500 of 1000: loss=0.881 " + "l1=0.256" + "l2=0.625 f=-0.53 shape=(1, 9000, 1)
logits [[ 1.7208819  0.9338941  1.713953  -6.489223 ]]
Iteration 600 of 1000: loss=0.813 " + "l1=0.216" + "l2=0.596 f=-0.532 shape=(1, 9000, 1)
logits [[ 1.6343777  0.9690847  1.6328108 -6.3659573]]
Iteration 700 of 1000: loss=0.764 " + "l1=0.195" + "l2=0.569 f=-0.524 shape=(1, 9000, 1)
logits [[ 1.582544   0.9920077  1.5914402 -6.2627606]]
Iteration 800 of 1000: loss=0.732 " + "l1=0.179" + "l2=0.553 f=-0.516 shape=(1, 9000, 1)
logits [[ 1.5154774  1.0061969  1.5577499 -6.1441364]]
Iteration 900 of 1000: loss=0.699 " + "l1=0.163" + "l2=0.536 f=-0.504 shape=(1, 9000, 1)
logits [[ 1.4927335  1.014356   1.5155027 -6.0400987]]
--- 318.8924469947815 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0267 " + "l1=0.0267" + "l2=0 f=-0.446 shape=(1, 9000, 1)
logits [[ 6.180269  -2.0157893  3.505504  -9.454836 ]]
Iteration 100 of 1000: loss=0.0266 " + "l1=0.0264" + "l2=0.000183 f=-0.447 shape=(1, 9000, 1)
logits [[ 6.1564565 -2.0196939  3.5175743 -9.441306 ]]
Iteration 200 of 1000: loss=0.0265 " + "l1=0.0264" + "l2=0.000149 f=-0.447 shape=(1, 9000, 1)
logits [[ 6.1564555 -2.0212183  3.5202148 -9.441777 ]]
Iteration 300 of 1000: loss=0.0265 " + "l1=0.0263" + "l2=0.000176 f=-0.446 shape=(1, 9000, 1)
logits [[ 6.154003  -2.023038   3.5240312 -9.440882 ]]
Iteration 400 of 1000: loss=0.0265 " + "l1=0.0262" + "l2=0.000228 f=-0.446 shape=(1, 9000, 1)
logits [[ 6.1510477 -2.0246594  3.5280669 -9.439914 ]]
Iteration 500 of 1000: loss=0.0264 " + "l1=0.0262" + "l2=0.00027 f=-0.446 shape=(1, 9000, 1)
logits [[ 6.1478357 -2.0259998  3.5320187 -9.438833 ]]
Iteration 600 of 1000: loss=0.0265 " + "l1=0.0261" + "l2=0.000379 f=-0.446 shape=(1, 9000, 1)
logits [[ 6.1445575 -2.0271666  3.5358546 -9.437806 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.267 " + "l1=0.267" + "l2=0 f=-0.446 shape=(1, 9000, 1)
logits [[ 6.180269  -2.0157893  3.505504  -9.454836 ]]
Iteration 100 of 1000: loss=0.25 " + "l1=0.24" + "l2=0.00963 f=-0.45 shape=(1, 9000, 1)
logits [[ 6.0073643 -2.0546908  3.6038055 -9.356874 ]]
Iteration 200 of 1000: loss=0.242 " + "l1=0.229" + "l2=0.0132 f=-0.45 shape=(1, 9000, 1)
logits [[ 5.950015  -2.0833137  3.66036   -9.327967 ]]
Iteration 300 of 1000: loss=0.235 " + "l1=0.218" + "l2=0.0165 f=-0.449 shape=(1, 9000, 1)
logits [[ 5.892774  -2.1087482  3.7092438 -9.290464 ]]
Iteration 400 of 1000: loss=0.228 " + "l1=0.208" + "l2=0.0196 f=-0.448 shape=(1, 9000, 1)
logits [[ 5.8326797 -2.1290705  3.7493043 -9.245447 ]]
Iteration 500 of 1000: loss=0.222 " + "l1=0.199" + "l2=0.0224 f=-0.448 shape=(1, 9000, 1)
logits [[ 5.7676706 -2.1423502  3.7756233 -9.191911 ]]
Iteration 600 of 1000: loss=0.216 " + "l1=0.191" + "l2=0.0252 f=-0.448 shape=(1, 9000, 1)
logits [[ 5.7046843 -2.1542983  3.7993877 -9.141811 ]]
Iteration 700 of 1000: loss=0.21 " + "l1=0.182" + "l2=0.028 f=-0.449 shape=(1, 9000, 1)
logits [[ 5.641586  -2.161654   3.8181968 -9.094045 ]]
Iteration 800 of 1000: loss=0.205 " + "l1=0.175" + "l2=0.0303 f=-0.45 shape=(1, 9000, 1)
logits [[ 5.58018   -2.1647012  3.8315039 -9.048514 ]]
Iteration 900 of 1000: loss=0.2 " + "l1=0.169" + "l2=0.032 f=-0.451 shape=(1, 9000, 1)
logits [[ 5.5225077 -2.1624055  3.8373206 -9.002864 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.67 " + "l1=2.67" + "l2=0 f=-0.446 shape=(1, 9000, 1)
logits [[ 6.180269  -2.0157893  3.505504  -9.454836 ]]
Iteration 100 of 1000: loss=0.702 " + "l1=0" + "l2=0.702 f=-0.524 shape=(1, 9000, 1)
logits [[ 4.0591083 -2.346053   4.0688577 -7.8762083]]
Iteration 200 of 1000: loss=0.5 " + "l1=0.0102" + "l2=0.49 f=-0.519 shape=(1, 9000, 1)
logits [[ 4.0785303 -2.367977   4.0683756 -7.8564672]]
Iteration 300 of 1000: loss=0.409 " + "l1=0" + "l2=0.409 f=-0.52 shape=(1, 9000, 1)
logits [[ 4.051338  -2.3698263  4.0584674 -7.8181095]]
Iteration 400 of 1000: loss=0.356 " + "l1=0.00292" + "l2=0.353 f=-0.52 shape=(1, 9000, 1)
logits [[ 4.05358  -2.366461  4.05066  -7.819507]]
Iteration 500 of 1000: loss=0.319 " + "l1=0" + "l2=0.319 f=-0.521 shape=(1, 9000, 1)
logits [[ 4.0427837 -2.3573925  4.0472903 -7.8184733]]
Iteration 600 of 1000: loss=0.29 " + "l1=0" + "l2=0.29 f=-0.524 shape=(1, 9000, 1)
logits [[ 4.030915 -2.343115  4.036098 -7.818645]]
Iteration 700 of 1000: loss=0.271 " + "l1=0" + "l2=0.271 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.9971256 -2.3169417  4.022288  -7.803726 ]]
Iteration 800 of 1000: loss=0.25 " + "l1=0" + "l2=0.25 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.954867  -2.2764978  3.9919806 -7.7768793]]
Iteration 900 of 1000: loss=0.221 " + "l1=0" + "l2=0.221 f=-0.528 shape=(1, 9000, 1)
logits [[ 3.9235387 -2.210234   3.93909   -7.7626095]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.47 " + "l1=1.47" + "l2=0 f=-0.446 shape=(1, 9000, 1)
logits [[ 6.180269  -2.0157893  3.505504  -9.454836 ]]
Iteration 100 of 1000: loss=0.822 " + "l1=0.394" + "l2=0.428 f=-0.495 shape=(1, 9000, 1)
logits [[ 4.581797  -2.1244178  3.8653932 -8.304367 ]]
Iteration 200 of 1000: loss=0.458 " + "l1=0.00379" + "l2=0.454 f=-0.528 shape=(1, 9000, 1)
logits [[ 3.997468  -2.1901152  3.990572  -7.9085546]]
Iteration 300 of 1000: loss=0.36 " + "l1=0" + "l2=0.36 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.9824934 -2.2102008  3.99705   -7.8762813]]
Iteration 400 of 1000: loss=0.307 " + "l1=0" + "l2=0.307 f=-0.524 shape=(1, 9000, 1)
logits [[ 3.990746  -2.2169862  3.9955513 -7.8641095]]
Iteration 500 of 1000: loss=0.271 " + "l1=0.000522" + "l2=0.27 f=-0.521 shape=(1, 9000, 1)
logits [[ 3.995007  -2.2085345  3.994058  -7.864484 ]]
Iteration 600 of 1000: loss=0.25 " + "l1=0" + "l2=0.25 f=-0.519 shape=(1, 9000, 1)
logits [[ 3.9684308 -2.18654    3.991861  -7.849877 ]]
Iteration 700 of 1000: loss=0.224 " + "l1=0.00482" + "l2=0.219 f=-0.515 shape=(1, 9000, 1)
logits [[ 3.969969  -2.1454556  3.9612005 -7.846633 ]]
Iteration 800 of 1000: loss=0.201 " + "l1=0.00048" + "l2=0.201 f=-0.516 shape=(1, 9000, 1)
logits [[ 3.940425  -2.1148756  3.9395525 -7.827944 ]]
Iteration 900 of 1000: loss=0.185 " + "l1=0" + "l2=0.185 f=-0.516 shape=(1, 9000, 1)
logits [[ 3.9081202 -2.089429   3.9176183 -7.8021083]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.869 " + "l1=0.869" + "l2=0 f=-0.446 shape=(1, 9000, 1)
logits [[ 6.180269  -2.0157893  3.505504  -9.454836 ]]
Iteration 100 of 1000: loss=0.665 " + "l1=0.541" + "l2=0.123 f=-0.464 shape=(1, 9000, 1)
logits [[ 5.462571  -2.159377   3.7973971 -8.957803 ]]
Iteration 200 of 1000: loss=0.566 " + "l1=0.393" + "l2=0.173 f=-0.472 shape=(1, 9000, 1)
logits [[ 5.06338   -2.1725297  3.8538923 -8.632654 ]]
Iteration 300 of 1000: loss=0.454 " + "l1=0.196" + "l2=0.258 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.511121  -2.1600091  3.9091554 -8.194523 ]]
Iteration 400 of 1000: loss=0.328 " + "l1=0.0108" + "l2=0.317 f=-0.499 shape=(1, 9000, 1)
logits [[ 4.0212755 -2.2066364  3.9881296 -7.7972407]]
Iteration 500 of 1000: loss=0.261 " + "l1=0" + "l2=0.261 f=-0.496 shape=(1, 9000, 1)
logits [[ 4.0155945 -2.2322996  4.021691  -7.7909617]]
Iteration 600 of 1000: loss=0.225 " + "l1=0.00677" + "l2=0.219 f=-0.493 shape=(1, 9000, 1)
logits [[ 4.051694  -2.240961   4.0308723 -7.813741 ]]
Iteration 700 of 1000: loss=0.197 " + "l1=0" + "l2=0.197 f=-0.497 shape=(1, 9000, 1)
logits [[ 4.0261965 -2.2421227  4.030058  -7.8018394]]
Iteration 800 of 1000: loss=0.174 " + "l1=0.00229" + "l2=0.172 f=-0.501 shape=(1, 9000, 1)
logits [[ 4.022094  -2.230413   4.0150323 -7.808951 ]]
Iteration 900 of 1000: loss=0.155 " + "l1=0" + "l2=0.155 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.9891787 -2.2182229  4.0063653 -7.807    ]]
--- 295.8264412879944 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.156 " + "l1=0.156" + "l2=0 f=-0.446 shape=(1, 9000, 1)
logits [[ 6.180269  -2.0157893  3.505504  -9.454836 ]]
Iteration 100 of 1000: loss=0.155 " + "l1=0.155" + "l2=0.000561 f=-0.444 shape=(1, 9000, 1)
logits [[ 6.114774  -1.9873234  3.4710758 -9.375303 ]]
Iteration 200 of 1000: loss=0.155 " + "l1=0.155" + "l2=0.000621 f=-0.444 shape=(1, 9000, 1)
logits [[ 6.1009817 -1.9808158  3.461496  -9.358283 ]]
Iteration 300 of 1000: loss=0.155 " + "l1=0.154" + "l2=0.00077 f=-0.444 shape=(1, 9000, 1)
logits [[ 6.085146  -1.9732367  3.4511383 -9.338929 ]]
Iteration 400 of 1000: loss=0.155 " + "l1=0.154" + "l2=0.000923 f=-0.444 shape=(1, 9000, 1)
logits [[ 6.0702643 -1.9660915  3.4417133 -9.320687 ]]
Iteration 500 of 1000: loss=0.155 " + "l1=0.154" + "l2=0.00113 f=-0.443 shape=(1, 9000, 1)
logits [[ 6.0563264 -1.959392   3.4332874 -9.304212 ]]
Iteration 600 of 1000: loss=0.155 " + "l1=0.153" + "l2=0.00139 f=-0.443 shape=(1, 9000, 1)
logits [[ 6.043737  -1.9534338  3.4259386 -9.28963  ]]
Iteration 700 of 1000: loss=0.155 " + "l1=0.153" + "l2=0.00151 f=-0.443 shape=(1, 9000, 1)
logits [[ 6.0320177 -1.9482965  3.41959   -9.276235 ]]
Iteration 800 of 1000: loss=0.155 " + "l1=0.153" + "l2=0.00173 f=-0.443 shape=(1, 9000, 1)
logits [[ 6.021144  -1.9434992  3.4138184 -9.263989 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.56 " + "l1=1.56" + "l2=0 f=-0.446 shape=(1, 9000, 1)
logits [[ 6.180269  -2.0157893  3.505504  -9.454836 ]]
Iteration 100 of 1000: loss=1.47 " + "l1=1.42" + "l2=0.0542 f=-0.44 shape=(1, 9000, 1)
logits [[ 5.509442  -1.7480029  3.1692123 -8.689583 ]]
Iteration 200 of 1000: loss=1.43 " + "l1=1.34" + "l2=0.0882 f=-0.442 shape=(1, 9000, 1)
logits [[ 5.108898  -1.5871276  2.9787738 -8.270438 ]]
Iteration 300 of 1000: loss=1.38 " + "l1=1.24" + "l2=0.133 f=-0.454 shape=(1, 9000, 1)
logits [[ 4.6314974 -1.4190588  2.7841287 -7.811011 ]]
Iteration 400 of 1000: loss=1.33 " + "l1=1.15" + "l2=0.177 f=-0.461 shape=(1, 9000, 1)
logits [[ 4.1457777 -1.2408068  2.599653  -7.348811 ]]
Iteration 500 of 1000: loss=1.28 " + "l1=1.07" + "l2=0.21 f=-0.459 shape=(1, 9000, 1)
logits [[ 3.7282684 -1.0996345  2.4749029 -6.9407625]]
Iteration 600 of 1000: loss=1.23 " + "l1=1" + "l2=0.228 f=-0.457 shape=(1, 9000, 1)
logits [[ 3.3989751 -1.0000384  2.392624  -6.621393 ]]
Iteration 700 of 1000: loss=1.18 " + "l1=0.957" + "l2=0.228 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.1853182 -0.9298774  2.3288243 -6.380995 ]]
Iteration 800 of 1000: loss=1.13 " + "l1=0.895" + "l2=0.238 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.900761 -0.877383  2.238072 -6.051743]]
Iteration 900 of 1000: loss=1.09 " + "l1=0.847" + "l2=0.24 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.6768804  -0.83120996  2.1510584  -5.7894816 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=15.6 " + "l1=15.6" + "l2=0 f=-0.446 shape=(1, 9000, 1)
logits [[ 6.180269  -2.0157893  3.505504  -9.454836 ]]
Iteration 100 of 1000: loss=7.02 " + "l1=3.64" + "l2=3.38 f=-0.275 shape=(1, 9000, 1)
logits [[ 0.8282069  -0.09429052  0.90125436 -2.7352808 ]]
Iteration 200 of 1000: loss=4.63 " + "l1=0.634" + "l2=3.99 f=-0.182 shape=(1, 9000, 1)
logits [[-0.43430498  0.10304059  0.11868782 -0.51528215]]
Iteration 300 of 1000: loss=3.66 " + "l1=0" + "l2=3.66 f=-0.142 shape=(1, 9000, 1)
logits [[-0.72583246  0.04784919  0.05110702  0.0589279 ]]
Iteration 400 of 1000: loss=3.23 " + "l1=0" + "l2=3.23 f=-0.125 shape=(1, 9000, 1)
logits [[-0.70516783  0.06019863  0.06873912  0.07585239]]
Iteration 500 of 1000: loss=2.94 " + "l1=0" + "l2=2.94 f=-0.119 shape=(1, 9000, 1)
logits [[-0.68333095  0.05727442  0.0697591   0.08151202]]
Iteration 600 of 1000: loss=2.73 " + "l1=0" + "l2=2.73 f=-0.107 shape=(1, 9000, 1)
logits [[-0.64979404  0.05683491  0.07242407  0.09354128]]
Iteration 700 of 1000: loss=2.55 " + "l1=0" + "l2=2.55 f=-0.0973 shape=(1, 9000, 1)
logits [[-0.5838488   0.04965386  0.07071732  0.07433091]]
Iteration 800 of 1000: loss=2.41 " + "l1=0" + "l2=2.41 f=-0.089 shape=(1, 9000, 1)
logits [[-0.53750145  0.05844381  0.0574725   0.06575624]]
Iteration 900 of 1000: loss=2.28 " + "l1=0.00296" + "l2=2.28 f=-0.0776 shape=(1, 9000, 1)
logits [[-0.4453021   0.01059786  0.06371579  0.06075142]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=8.6 " + "l1=8.6" + "l2=0 f=-0.446 shape=(1, 9000, 1)
logits [[ 6.180269  -2.0157893  3.505504  -9.454836 ]]
Iteration 100 of 1000: loss=5.22 " + "l1=3.54" + "l2=1.67 f=-0.439 shape=(1, 9000, 1)
logits [[ 1.7096136  -0.42945012  1.699016   -4.7339206 ]]
Iteration 200 of 1000: loss=4.18 " + "l1=2.37" + "l2=1.81 f=-0.321 shape=(1, 9000, 1)
logits [[ 1.0835593  -0.23300536  1.0891268  -3.2229156 ]]
Iteration 300 of 1000: loss=3.47 " + "l1=1.47" + "l2=1.99 f=-0.243 shape=(1, 9000, 1)
logits [[ 0.5179758  -0.03411758  0.61205727 -2.0663686 ]]
Iteration 400 of 1000: loss=3.06 " + "l1=0.893" + "l2=2.17 f=-0.193 shape=(1, 9000, 1)
logits [[ 0.05740993  0.05039523  0.37142453 -1.2520146 ]]
Iteration 500 of 1000: loss=2.73 " + "l1=0.446" + "l2=2.29 f=-0.15 shape=(1, 9000, 1)
logits [[-0.27962717  0.10930464  0.18979639 -0.6214317 ]]
Iteration 600 of 1000: loss=2.37 " + "l1=0.149" + "l2=2.22 f=-0.1 shape=(1, 9000, 1)
logits [[-0.3936574   0.08771742  0.08752584 -0.1831719 ]]
Iteration 700 of 1000: loss=2.05 " + "l1=0.0188" + "l2=2.03 f=-0.065 shape=(1, 9000, 1)
logits [[-0.31202647  0.00642041  0.03989096  0.00578821]]
Iteration 800 of 1000: loss=1.82 " + "l1=0.0278" + "l2=1.79 f=-0.0645 shape=(1, 9000, 1)
logits [[-0.25171378 -0.0344409   0.03938781 -0.01109952]]
Iteration 900 of 1000: loss=1.61 " + "l1=0.00467" + "l2=1.61 f=-0.0661 shape=(1, 9000, 1)
logits [[-0.21753475 -0.09233244  0.02701636  0.01852964]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.08 " + "l1=5.08" + "l2=0 f=-0.446 shape=(1, 9000, 1)
logits [[ 6.180269  -2.0157893  3.505504  -9.454836 ]]
Iteration 100 of 1000: loss=3.77 " + "l1=2.92" + "l2=0.844 f=-0.469 shape=(1, 9000, 1)
logits [[ 2.8682237  -0.83598226  2.2154489  -6.1255903 ]]
Iteration 200 of 1000: loss=3.18 " + "l1=2.19" + "l2=0.996 f=-0.457 shape=(1, 9000, 1)
logits [[ 1.7742138  -0.42099872  1.7677654  -4.9495387 ]]
Iteration 300 of 1000: loss=2.9 " + "l1=1.91" + "l2=0.989 f=-0.406 shape=(1, 9000, 1)
logits [[ 1.5246087  -0.33963025  1.5288503  -4.3371043 ]]
Iteration 400 of 1000: loss=2.65 " + "l1=1.6" + "l2=1.06 f=-0.343 shape=(1, 9000, 1)
logits [[ 1.2494689  -0.21866624  1.2526491  -3.6567047 ]]
Iteration 500 of 1000: loss=2.49 " + "l1=1.4" + "l2=1.09 f=-0.301 shape=(1, 9000, 1)
logits [[ 1.0823728  -0.16958962  1.0895376  -3.2059214 ]]
Iteration 600 of 1000: loss=2.34 " + "l1=1.21" + "l2=1.13 f=-0.253 shape=(1, 9000, 1)
logits [[ 0.9634764  -0.17717128  0.9639335  -2.7632446 ]]
Iteration 700 of 1000: loss=2.18 " + "l1=1.04" + "l2=1.15 f=-0.215 shape=(1, 9000, 1)
logits [[ 0.81381893 -0.16304241  0.8381904  -2.347716  ]]
Iteration 800 of 1000: loss=1.97 " + "l1=0.8" + "l2=1.17 f=-0.189 shape=(1, 9000, 1)
logits [[ 0.5338784  -0.14588122  0.65899944 -1.8028939 ]]
Iteration 900 of 1000: loss=1.72 " + "l1=0.493" + "l2=1.23 f=-0.169 shape=(1, 9000, 1)
logits [[ 0.11921838 -0.16661574  0.444189   -1.0721127 ]]
--- 304.425413608551 seconds ---
Adv result:3
Loading record A05775
(1, 11520)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0737 " + "l1=0.0737" + "l2=0 f=-0.757 shape=(1, 9000, 1)
logits [[ 5.175059  -2.1911705  3.6063752 -9.619057 ]]
Iteration 100 of 1000: loss=0.073 " + "l1=0.0725" + "l2=0.000452 f=-0.757 shape=(1, 9000, 1)
logits [[ 5.1145606 -2.136881   3.576468  -9.582633 ]]
Iteration 200 of 1000: loss=0.0727 " + "l1=0.0723" + "l2=0.000478 f=-0.756 shape=(1, 9000, 1)
logits [[ 5.100177  -2.125746   3.5690625 -9.569111 ]]
Iteration 300 of 1000: loss=0.0725 " + "l1=0.0719" + "l2=0.000582 f=-0.756 shape=(1, 9000, 1)
logits [[ 5.081701  -2.1132622  3.560885  -9.553519 ]]
Iteration 400 of 1000: loss=0.0723 " + "l1=0.0716" + "l2=0.000714 f=-0.756 shape=(1, 9000, 1)
logits [[ 5.061877  -2.1008     3.5528238 -9.537105 ]]
Iteration 500 of 1000: loss=0.0721 " + "l1=0.0713" + "l2=0.000841 f=-0.756 shape=(1, 9000, 1)
logits [[ 5.0416884 -2.0878797  3.54447   -9.520402 ]]
Iteration 600 of 1000: loss=0.072 " + "l1=0.071" + "l2=0.00106 f=-0.755 shape=(1, 9000, 1)
logits [[ 5.021442  -2.0743759  3.5357525 -9.503615 ]]
Iteration 700 of 1000: loss=0.0718 " + "l1=0.0706" + "l2=0.00118 f=-0.755 shape=(1, 9000, 1)
logits [[ 5.0017996 -2.0623097  3.527932  -9.487477 ]]
Iteration 800 of 1000: loss=0.0717 " + "l1=0.0703" + "l2=0.00134 f=-0.755 shape=(1, 9000, 1)
logits [[ 4.982935  -2.0505505  3.5204961 -9.472078 ]]
Iteration 900 of 1000: loss=0.0715 " + "l1=0.07" + "l2=0.00146 f=-0.755 shape=(1, 9000, 1)
logits [[ 4.964756  -2.0397477  3.5136032 -9.457134 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.737 " + "l1=0.737" + "l2=0 f=-0.757 shape=(1, 9000, 1)
logits [[ 5.175059  -2.1911705  3.6063752 -9.619057 ]]
Iteration 100 of 1000: loss=0.664 " + "l1=0.622" + "l2=0.0416 f=-0.743 shape=(1, 9000, 1)
logits [[ 4.6287746 -1.5948737  3.2797117 -9.286857 ]]
Iteration 200 of 1000: loss=0.629 " + "l1=0.568" + "l2=0.0602 f=-0.743 shape=(1, 9000, 1)
logits [[ 4.321701  -1.3617172  3.136481  -9.069175 ]]
Iteration 300 of 1000: loss=0.601 " + "l1=0.527" + "l2=0.0746 f=-0.739 shape=(1, 9000, 1)
logits [[ 4.062604  -1.2043173  3.0274513 -8.840838 ]]
Iteration 400 of 1000: loss=0.578 " + "l1=0.496" + "l2=0.0824 f=-0.741 shape=(1, 9000, 1)
logits [[ 3.8418224 -1.1164929  2.961457  -8.652589 ]]
Iteration 500 of 1000: loss=0.552 " + "l1=0.461" + "l2=0.0904 f=-0.749 shape=(1, 9000, 1)
logits [[ 3.5943387 -1.0172393  2.880394  -8.452519 ]]
Iteration 600 of 1000: loss=0.518 " + "l1=0.418" + "l2=0.101 f=-0.762 shape=(1, 9000, 1)
logits [[ 3.2840335 -0.8935225  2.7788923 -8.217921 ]]
Iteration 700 of 1000: loss=0.481 " + "l1=0.371" + "l2=0.11 f=-0.777 shape=(1, 9000, 1)
logits [[ 2.9422832 -0.7689824  2.6666245 -7.949304 ]]
Iteration 800 of 1000: loss=0.441 " + "l1=0.318" + "l2=0.123 f=-0.791 shape=(1, 9000, 1)
logits [[ 2.567963  -0.614466   2.5408401 -7.6599655]]
Iteration 900 of 1000: loss=0.411 " + "l1=0.296" + "l2=0.115 f=-0.785 shape=(1, 9000, 1)
logits [[ 2.4233336 -0.5310648  2.426939  -7.458051 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.37 " + "l1=7.37" + "l2=0 f=-0.757 shape=(1, 9000, 1)
logits [[ 5.175059  -2.1911705  3.6063752 -9.619057 ]]
Iteration 100 of 1000: loss=2.53 " + "l1=1.31" + "l2=1.21 f=-0.725 shape=(1, 9000, 1)
logits [[ 1.9845996   0.72397673  2.0385432  -7.6466823 ]]
Iteration 200 of 1000: loss=1.6 " + "l1=0.172" + "l2=1.43 f=-0.755 shape=(1, 9000, 1)
logits [[ 0.7782636  1.4769039  1.6493293 -6.9250793]]
Iteration 300 of 1000: loss=1.23 " + "l1=0" + "l2=1.23 f=-0.769 shape=(1, 9000, 1)
logits [[ 0.4923325  1.535215   1.5306326 -6.6354384]]
Iteration 400 of 1000: loss=1.09 " + "l1=0.0116" + "l2=1.08 f=-0.781 shape=(1, 9000, 1)
logits [[ 0.42971554  1.4841751   1.4957942  -6.531804  ]]
Iteration 500 of 1000: loss=1.02 " + "l1=0.00658" + "l2=1.02 f=-0.783 shape=(1, 9000, 1)
logits [[ 0.36528862  1.4563758   1.4629517  -6.4171095 ]]
Iteration 600 of 1000: loss=0.982 " + "l1=0" + "l2=0.982 f=-0.785 shape=(1, 9000, 1)
logits [[ 0.28105643  1.4367828   1.4286253  -6.2860265 ]]
Iteration 700 of 1000: loss=0.932 " + "l1=0" + "l2=0.932 f=-0.782 shape=(1, 9000, 1)
logits [[ 0.24126485  1.3936429   1.3930786  -6.155933  ]]
Iteration 800 of 1000: loss=0.892 " + "l1=0" + "l2=0.892 f=-0.774 shape=(1, 9000, 1)
logits [[ 0.22901756  1.3556626   1.3544434  -6.0363636 ]]
Iteration 900 of 1000: loss=0.862 " + "l1=0" + "l2=0.862 f=-0.769 shape=(1, 9000, 1)
logits [[ 0.1933939  1.3266658  1.3164037 -5.913    ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.05 " + "l1=4.05" + "l2=0 f=-0.757 shape=(1, 9000, 1)
logits [[ 5.175059  -2.1911705  3.6063752 -9.619057 ]]
Iteration 100 of 1000: loss=1.94 " + "l1=1.2" + "l2=0.737 f=-0.757 shape=(1, 9000, 1)
logits [[ 2.3973794   0.21819718  2.392083   -8.035336  ]]
Iteration 200 of 1000: loss=1.48 " + "l1=0.788" + "l2=0.697 f=-0.705 shape=(1, 9000, 1)
logits [[ 1.9944229  0.6338756  2.066533  -7.5158343]]
Iteration 300 of 1000: loss=1.23 " + "l1=0.539" + "l2=0.69 f=-0.705 shape=(1, 9000, 1)
logits [[ 1.6410792   0.85958767  1.8399023  -7.161758  ]]
Iteration 400 of 1000: loss=1.09 " + "l1=0.405" + "l2=0.685 f=-0.732 shape=(1, 9000, 1)
logits [[ 1.2975483   0.98555887  1.722215   -6.931874  ]]
Iteration 500 of 1000: loss=1.02 " + "l1=0.345" + "l2=0.678 f=-0.745 shape=(1, 9000, 1)
logits [[ 1.1208556  1.0325983  1.6607051 -6.793249 ]]
Iteration 600 of 1000: loss=0.976 " + "l1=0.302" + "l2=0.674 f=-0.754 shape=(1, 9000, 1)
logits [[ 0.9838842  1.0603127  1.60943   -6.668392 ]]
Iteration 700 of 1000: loss=0.931 " + "l1=0.239" + "l2=0.692 f=-0.765 shape=(1, 9000, 1)
logits [[ 0.76198226  1.1215663   1.5563688  -6.5010424 ]]
Iteration 800 of 1000: loss=0.894 " + "l1=0.186" + "l2=0.709 f=-0.768 shape=(1, 9000, 1)
logits [[ 0.56022346  1.1673465   1.505206   -6.304063  ]]
Iteration 900 of 1000: loss=0.856 " + "l1=0.141" + "l2=0.716 f=-0.763 shape=(1, 9000, 1)
logits [[ 0.43384907  1.1846871   1.4402728  -6.1126075 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.71 " + "l1=5.71" + "l2=0 f=-0.757 shape=(1, 9000, 1)
logits [[ 5.175059  -2.1911705  3.6063752 -9.619057 ]]
Iteration 100 of 1000: loss=2.27 " + "l1=1.31" + "l2=0.962 f=-0.74 shape=(1, 9000, 1)
logits [[ 2.16248     0.50096625  2.1930864  -7.8178782 ]]
Iteration 200 of 1000: loss=1.6 " + "l1=0.596" + "l2=1.01 f=-0.713 shape=(1, 9000, 1)
logits [[ 1.4845229  1.0473505  1.8160323 -7.1986866]]
Iteration 300 of 1000: loss=1.27 " + "l1=0.217" + "l2=1.05 f=-0.751 shape=(1, 9000, 1)
logits [[ 0.8466555  1.3375496  1.6169903 -6.8044004]]
Iteration 400 of 1000: loss=1.1 " + "l1=0.0263" + "l2=1.07 f=-0.776 shape=(1, 9000, 1)
logits [[ 0.45215854  1.474379    1.5082837  -6.537835  ]]
Iteration 500 of 1000: loss=1.02 " + "l1=0.00618" + "l2=1.01 f=-0.78 shape=(1, 9000, 1)
logits [[ 0.35816434  1.456047    1.4640187  -6.4000363 ]]
Iteration 600 of 1000: loss=0.965 " + "l1=0.00366" + "l2=0.962 f=-0.782 shape=(1, 9000, 1)
logits [[ 0.28252634  1.4243295   1.4290541  -6.262569  ]]
Iteration 700 of 1000: loss=0.921 " + "l1=0.00752" + "l2=0.914 f=-0.779 shape=(1, 9000, 1)
logits [[ 0.24872437  1.3826569   1.3923575  -6.140766  ]]
Iteration 800 of 1000: loss=0.879 " + "l1=0" + "l2=0.879 f=-0.774 shape=(1, 9000, 1)
logits [[ 0.22344781  1.3559833   1.3539457  -6.0299253 ]]
Iteration 900 of 1000: loss=0.826 " + "l1=0.00421" + "l2=0.822 f=-0.763 shape=(1, 9000, 1)
logits [[ 0.17009367  1.2860519   1.2914854  -5.801607  ]]
--- 320.08512330055237 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0157 " + "l1=0.0157" + "l2=0 f=-0.757 shape=(1, 9000, 1)
logits [[ 5.175059  -2.1911705  3.6063752 -9.619057 ]]
Iteration 100 of 1000: loss=0.0155 " + "l1=0.0153" + "l2=0.000211 f=-0.76 shape=(1, 9000, 1)
logits [[ 5.1383476 -2.1917942  3.6130238 -9.601117 ]]
Iteration 200 of 1000: loss=0.0154 " + "l1=0.0152" + "l2=0.000174 f=-0.76 shape=(1, 9000, 1)
logits [[ 5.134407  -2.1899967  3.6117704 -9.597075 ]]
Iteration 300 of 1000: loss=0.0154 " + "l1=0.0152" + "l2=0.000197 f=-0.761 shape=(1, 9000, 1)
logits [[ 5.1268497 -2.1883001  3.6112223 -9.5918   ]]
Iteration 400 of 1000: loss=0.0153 " + "l1=0.0151" + "l2=0.000264 f=-0.761 shape=(1, 9000, 1)
logits [[ 5.11844   -2.1866026  3.6107683 -9.586184 ]]
Iteration 500 of 1000: loss=0.0153 " + "l1=0.015" + "l2=0.000309 f=-0.761 shape=(1, 9000, 1)
logits [[ 5.1096067 -2.18473    3.6101778 -9.580341 ]]
Iteration 600 of 1000: loss=0.0153 " + "l1=0.0149" + "l2=0.000384 f=-0.762 shape=(1, 9000, 1)
logits [[ 5.1006384 -2.1827211  3.6094503 -9.574422 ]]
Iteration 700 of 1000: loss=0.0153 " + "l1=0.0148" + "l2=0.000419 f=-0.762 shape=(1, 9000, 1)
logits [[ 5.091816  -2.1808493  3.608728  -9.568673 ]]
Iteration 800 of 1000: loss=0.0153 " + "l1=0.0147" + "l2=0.00053 f=-0.763 shape=(1, 9000, 1)
logits [[ 5.082861  -2.1789246  3.6079237 -9.562726 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.157 " + "l1=0.157" + "l2=0 f=-0.757 shape=(1, 9000, 1)
logits [[ 5.175059  -2.1911705  3.6063752 -9.619057 ]]
Iteration 100 of 1000: loss=0.137 " + "l1=0.127" + "l2=0.0101 f=-0.777 shape=(1, 9000, 1)
logits [[ 4.9194584 -2.1863165  3.651471  -9.493876 ]]
Iteration 200 of 1000: loss=0.129 " + "l1=0.115" + "l2=0.0135 f=-0.781 shape=(1, 9000, 1)
logits [[ 4.801593  -2.1648936  3.6510088 -9.411569 ]]
Iteration 300 of 1000: loss=0.12 " + "l1=0.102" + "l2=0.0178 f=-0.786 shape=(1, 9000, 1)
logits [[ 4.6595945 -2.130338   3.641137  -9.314452 ]]
Iteration 400 of 1000: loss=0.11 " + "l1=0.0883" + "l2=0.0221 f=-0.792 shape=(1, 9000, 1)
logits [[ 4.5121946 -2.1011596  3.6293375 -9.207338 ]]
Iteration 500 of 1000: loss=0.101 " + "l1=0.074" + "l2=0.0265 f=-0.798 shape=(1, 9000, 1)
logits [[ 4.343875 -2.065376  3.603465 -9.073635]]
Iteration 600 of 1000: loss=0.0912 " + "l1=0.0617" + "l2=0.0295 f=-0.805 shape=(1, 9000, 1)
logits [[ 4.1962914 -2.0354457  3.5789807 -8.961069 ]]
Iteration 700 of 1000: loss=0.0837 " + "l1=0.0516" + "l2=0.032 f=-0.812 shape=(1, 9000, 1)
logits [[ 4.069575  -2.0117455  3.5534601 -8.859163 ]]
Iteration 800 of 1000: loss=0.0767 " + "l1=0.042" + "l2=0.0347 f=-0.819 shape=(1, 9000, 1)
logits [[ 3.945458  -1.9848099  3.525953  -8.763627 ]]
Iteration 900 of 1000: loss=0.07 " + "l1=0.0331" + "l2=0.0369 f=-0.827 shape=(1, 9000, 1)
logits [[ 3.8313854 -1.9582878  3.5008132 -8.679977 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.57 " + "l1=1.57" + "l2=0 f=-0.757 shape=(1, 9000, 1)
logits [[ 5.175059  -2.1911705  3.6063752 -9.619057 ]]
Iteration 100 of 1000: loss=0.24 " + "l1=0.00807" + "l2=0.232 f=-0.861 shape=(1, 9000, 1)
logits [[ 3.7561977 -2.1037116  3.74813   -8.84494  ]]
Iteration 200 of 1000: loss=0.163 " + "l1=0" + "l2=0.163 f=-0.853 shape=(1, 9000, 1)
logits [[ 3.6758885 -2.0460968  3.6893215 -8.7313385]]
Iteration 300 of 1000: loss=0.126 " + "l1=0.00727" + "l2=0.119 f=-0.848 shape=(1, 9000, 1)
logits [[ 3.6341994 -1.9992901  3.6269255 -8.655365 ]]
Iteration 400 of 1000: loss=0.0989 " + "l1=0.00201" + "l2=0.0969 f=-0.85 shape=(1, 9000, 1)
logits [[ 3.591599  -1.9747195  3.5895889 -8.60779  ]]
Iteration 500 of 1000: loss=0.0841 " + "l1=0" + "l2=0.0841 f=-0.854 shape=(1, 9000, 1)
logits [[ 3.5477753 -1.9597702  3.5592322 -8.563598 ]]
Iteration 600 of 1000: loss=0.0734 " + "l1=0" + "l2=0.0734 f=-0.857 shape=(1, 9000, 1)
logits [[ 3.517806  -1.9518124  3.533311  -8.528791 ]]
Iteration 700 of 1000: loss=0.0679 " + "l1=0.00528" + "l2=0.0626 f=-0.858 shape=(1, 9000, 1)
logits [[ 3.5074363 -1.9473075  3.5021589 -8.492633 ]]
Iteration 800 of 1000: loss=0.0584 " + "l1=0" + "l2=0.0584 f=-0.861 shape=(1, 9000, 1)
logits [[ 3.4642296 -1.9440144  3.4799533 -8.442381 ]]
Iteration 900 of 1000: loss=0.0526 " + "l1=0" + "l2=0.0526 f=-0.861 shape=(1, 9000, 1)
logits [[ 3.434097  -1.9437377  3.4573617 -8.392995 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.863 " + "l1=0.863" + "l2=0 f=-0.757 shape=(1, 9000, 1)
logits [[ 5.175059  -2.1911705  3.6063752 -9.619057 ]]
Iteration 100 of 1000: loss=0.239 " + "l1=0.00572" + "l2=0.233 f=-0.861 shape=(1, 9000, 1)
logits [[ 3.7602894 -2.1006     3.749897  -8.85399  ]]
Iteration 200 of 1000: loss=0.152 " + "l1=0" + "l2=0.152 f=-0.849 shape=(1, 9000, 1)
logits [[ 3.6706686 -2.029133   3.6756008 -8.714653 ]]
Iteration 300 of 1000: loss=0.114 " + "l1=0" + "l2=0.114 f=-0.849 shape=(1, 9000, 1)
logits [[ 3.6040852 -1.9796011  3.6147022 -8.633613 ]]
Iteration 400 of 1000: loss=0.0913 " + "l1=0" + "l2=0.0913 f=-0.851 shape=(1, 9000, 1)
logits [[ 3.5712457 -1.9609537  3.5754464 -8.590612 ]]
Iteration 500 of 1000: loss=0.0769 " + "l1=0" + "l2=0.0769 f=-0.854 shape=(1, 9000, 1)
logits [[ 3.5419858 -1.949505   3.5427017 -8.552588 ]]
Iteration 600 of 1000: loss=0.0671 " + "l1=0" + "l2=0.0671 f=-0.858 shape=(1, 9000, 1)
logits [[ 3.509707  -1.9464935  3.514728  -8.509062 ]]
Iteration 700 of 1000: loss=0.0598 " + "l1=0" + "l2=0.0598 f=-0.86 shape=(1, 9000, 1)
logits [[ 3.4769661 -1.946025   3.4903917 -8.462207 ]]
Iteration 800 of 1000: loss=0.0526 " + "l1=0" + "l2=0.0526 f=-0.86 shape=(1, 9000, 1)
logits [[ 3.4539711 -1.9478561  3.465255  -8.412596 ]]
Iteration 900 of 1000: loss=0.0474 " + "l1=0" + "l2=0.0474 f=-0.861 shape=(1, 9000, 1)
logits [[ 3.4344614 -1.9516178  3.4465973 -8.373008 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.51 " + "l1=0.51" + "l2=0 f=-0.757 shape=(1, 9000, 1)
logits [[ 5.175059  -2.1911705  3.6063752 -9.619057 ]]
Iteration 100 of 1000: loss=0.279 " + "l1=0.148" + "l2=0.131 f=-0.834 shape=(1, 9000, 1)
logits [[ 4.1689534 -2.1394308  3.7139978 -9.081402 ]]
Iteration 200 of 1000: loss=0.163 " + "l1=0.0013" + "l2=0.162 f=-0.851 shape=(1, 9000, 1)
logits [[ 3.6870754 -2.038894   3.6830773 -8.7353525]]
Iteration 300 of 1000: loss=0.114 " + "l1=0.00397" + "l2=0.111 f=-0.846 shape=(1, 9000, 1)
logits [[ 3.6224573 -1.9844009  3.6102505 -8.632338 ]]
Iteration 400 of 1000: loss=0.0901 " + "l1=0.00202" + "l2=0.0881 f=-0.851 shape=(1, 9000, 1)
logits [[ 3.5756211 -1.9655027  3.5694098 -8.583912 ]]
Iteration 500 of 1000: loss=0.0753 " + "l1=0" + "l2=0.0753 f=-0.856 shape=(1, 9000, 1)
logits [[ 3.5350902 -1.9578143  3.5417407 -8.542325 ]]
Iteration 600 of 1000: loss=0.0646 " + "l1=0" + "l2=0.0646 f=-0.859 shape=(1, 9000, 1)
logits [[ 3.5063078 -1.9549102  3.5107775 -8.496345 ]]
Iteration 700 of 1000: loss=0.0567 " + "l1=0" + "l2=0.0567 f=-0.86 shape=(1, 9000, 1)
logits [[ 3.473003  -1.9560802  3.483445  -8.441599 ]]
Iteration 800 of 1000: loss=0.0507 " + "l1=0" + "l2=0.0507 f=-0.862 shape=(1, 9000, 1)
logits [[ 3.4459014 -1.9547874  3.4571183 -8.394658 ]]
Iteration 900 of 1000: loss=0.045 " + "l1=0" + "l2=0.045 f=-0.861 shape=(1, 9000, 1)
logits [[ 3.430993  -1.9571533  3.4383957 -8.35783  ]]
--- 305.9033908843994 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.148 " + "l1=0.148" + "l2=0 f=-0.757 shape=(1, 9000, 1)
logits [[ 5.175059  -2.1911705  3.6063752 -9.619057 ]]
Iteration 100 of 1000: loss=0.147 " + "l1=0.146" + "l2=0.000486 f=-0.755 shape=(1, 9000, 1)
logits [[ 5.1044617 -2.164755   3.580888  -9.5404625]]
Iteration 200 of 1000: loss=0.147 " + "l1=0.146" + "l2=0.000549 f=-0.754 shape=(1, 9000, 1)
logits [[ 5.0836935 -2.155572   3.5731096 -9.5164175]]
Iteration 300 of 1000: loss=0.146 " + "l1=0.145" + "l2=0.000725 f=-0.753 shape=(1, 9000, 1)
logits [[ 5.057478  -2.1453276  3.5638807 -9.486287 ]]
Iteration 400 of 1000: loss=0.146 " + "l1=0.145" + "l2=0.000924 f=-0.751 shape=(1, 9000, 1)
logits [[ 5.030464  -2.1343403  3.5537264 -9.455027 ]]
Iteration 500 of 1000: loss=0.145 " + "l1=0.144" + "l2=0.00113 f=-0.75 shape=(1, 9000, 1)
logits [[ 5.004538  -2.1244555  3.5439804 -9.424963 ]]
Iteration 600 of 1000: loss=0.145 " + "l1=0.144" + "l2=0.00133 f=-0.749 shape=(1, 9000, 1)
logits [[ 4.9786053 -2.114748   3.5343492 -9.394782 ]]
Iteration 700 of 1000: loss=0.145 " + "l1=0.143" + "l2=0.00158 f=-0.748 shape=(1, 9000, 1)
logits [[ 4.9520116 -2.1051657  3.5247068 -9.363847 ]]
Iteration 800 of 1000: loss=0.144 " + "l1=0.143" + "l2=0.00186 f=-0.747 shape=(1, 9000, 1)
logits [[ 4.926539  -2.0952847  3.5148094 -9.334025 ]]
Iteration 900 of 1000: loss=0.144 " + "l1=0.142" + "l2=0.00204 f=-0.746 shape=(1, 9000, 1)
logits [[ 4.9018984 -2.086586   3.5052364 -9.305195 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.48 " + "l1=1.48" + "l2=0 f=-0.757 shape=(1, 9000, 1)
logits [[ 5.175059  -2.1911705  3.6063752 -9.619057 ]]
Iteration 100 of 1000: loss=1.38 " + "l1=1.34" + "l2=0.0399 f=-0.732 shape=(1, 9000, 1)
logits [[ 4.5207067 -1.9160748  3.3558161 -8.890445 ]]
Iteration 200 of 1000: loss=1.31 " + "l1=1.23" + "l2=0.072 f=-0.714 shape=(1, 9000, 1)
logits [[ 4.028194  -1.7334033  3.151294  -8.3026085]]
Iteration 300 of 1000: loss=1.24 " + "l1=1.13" + "l2=0.104 f=-0.706 shape=(1, 9000, 1)
logits [[ 3.5640538 -1.5955534  2.961073  -7.7518754]]
Iteration 400 of 1000: loss=1.17 " + "l1=1.03" + "l2=0.134 f=-0.695 shape=(1, 9000, 1)
logits [[ 3.1126263 -1.4894818  2.7948968 -7.1986914]]
Iteration 500 of 1000: loss=1.09 " + "l1=0.918" + "l2=0.167 f=-0.681 shape=(1, 9000, 1)
logits [[ 2.608157  -1.368885   2.6083958 -6.5734434]]
Iteration 600 of 1000: loss=1.01 " + "l1=0.852" + "l2=0.162 f=-0.656 shape=(1, 9000, 1)
logits [[ 2.390792  -1.2770629  2.3922997 -6.130584 ]]
Iteration 700 of 1000: loss=0.949 " + "l1=0.785" + "l2=0.164 f=-0.628 shape=(1, 9000, 1)
logits [[ 2.1785638 -1.2149458  2.1855571 -5.662259 ]]
Iteration 800 of 1000: loss=0.887 " + "l1=0.717" + "l2=0.17 f=-0.606 shape=(1, 9000, 1)
logits [[ 1.8899624 -1.1587423  2.0071347 -5.1627045]]
Iteration 900 of 1000: loss=0.84 " + "l1=0.662" + "l2=0.178 f=-0.594 shape=(1, 9000, 1)
logits [[ 1.6444448 -1.1228421  1.861679  -4.7585635]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=14.8 " + "l1=14.8" + "l2=0 f=-0.757 shape=(1, 9000, 1)
logits [[ 5.175059  -2.1911705  3.6063752 -9.619057 ]]
Iteration 100 of 1000: loss=6.9 " + "l1=4.24" + "l2=2.67 f=-0.31 shape=(1, 9000, 1)
logits [[ 0.953583  -0.7598557  1.4018596 -2.8336103]]
Iteration 200 of 1000: loss=3.08 " + "l1=0" + "l2=3.08 f=-0.176 shape=(1, 9000, 1)
logits [[-0.9276248  -0.7292738   0.46764386  0.4845013 ]]
Iteration 300 of 1000: loss=2.39 " + "l1=0" + "l2=2.39 f=-0.216 shape=(1, 9000, 1)
logits [[-0.9977735  -0.7648825   0.4369111   0.46062362]]
Iteration 400 of 1000: loss=2.09 " + "l1=0.0235" + "l2=2.07 f=-0.24 shape=(1, 9000, 1)
logits [[-1.0216918  -0.8082451   0.44723338  0.4237594 ]]
Iteration 500 of 1000: loss=1.87 " + "l1=0.0186" + "l2=1.85 f=-0.253 shape=(1, 9000, 1)
logits [[-1.0498819  -0.83996654  0.44743317  0.4287985 ]]
Iteration 600 of 1000: loss=1.68 " + "l1=0.00583" + "l2=1.67 f=-0.262 shape=(1, 9000, 1)
logits [[-1.0804389  -0.8422422   0.44044164  0.4346127 ]]
Iteration 700 of 1000: loss=1.55 " + "l1=0" + "l2=1.55 f=-0.258 shape=(1, 9000, 1)
logits [[-1.0977236  -0.84191865  0.42616925  0.48278564]]
Iteration 800 of 1000: loss=1.4 " + "l1=0.00497" + "l2=1.4 f=-0.257 shape=(1, 9000, 1)
logits [[-1.0535693  -0.828925    0.4290202   0.42404556]]
Iteration 900 of 1000: loss=1.3 " + "l1=0.00586" + "l2=1.3 f=-0.259 shape=(1, 9000, 1)
logits [[-1.0455217  -0.81771004  0.41583708  0.4099781 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=8.14 " + "l1=8.14" + "l2=0 f=-0.757 shape=(1, 9000, 1)
logits [[ 5.175059  -2.1911705  3.6063752 -9.619057 ]]
Iteration 100 of 1000: loss=5.08 " + "l1=3.95" + "l2=1.13 f=-0.523 shape=(1, 9000, 1)
logits [[ 2.030888  -1.0253239  2.0430415 -5.141243 ]]
Iteration 200 of 1000: loss=3.43 " + "l1=1.59" + "l2=1.84 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.29226592 -0.8386442   1.1102498  -1.7783217 ]]
Iteration 300 of 1000: loss=2.27 " + "l1=0.258" + "l2=2.02 f=-0.251 shape=(1, 9000, 1)
logits [[-0.75648326 -0.80269384  0.5120248   0.04346653]]
Iteration 400 of 1000: loss=1.77 " + "l1=0" + "l2=1.77 f=-0.245 shape=(1, 9000, 1)
logits [[-0.9669664  -0.8517946   0.4160316   0.42350963]]
Iteration 500 of 1000: loss=1.49 " + "l1=0" + "l2=1.49 f=-0.253 shape=(1, 9000, 1)
logits [[-0.9942865  -0.8295156   0.40400195  0.40907568]]
Iteration 600 of 1000: loss=1.3 " + "l1=0" + "l2=1.3 f=-0.252 shape=(1, 9000, 1)
logits [[-0.9978367  -0.8176423   0.40348464  0.40511712]]
Iteration 700 of 1000: loss=1.16 " + "l1=0.00274" + "l2=1.16 f=-0.257 shape=(1, 9000, 1)
logits [[-1.0183008  -0.81625444  0.40512666  0.40014467]]
Iteration 800 of 1000: loss=1.06 " + "l1=0.00273" + "l2=1.05 f=-0.265 shape=(1, 9000, 1)
logits [[-1.046864   -0.81931055  0.40605396  0.40108788]]
Iteration 900 of 1000: loss=0.978 " + "l1=0" + "l2=0.978 f=-0.267 shape=(1, 9000, 1)
logits [[-1.0658425  -0.8096861   0.39956468  0.40624553]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.81 " + "l1=4.81" + "l2=0 f=-0.757 shape=(1, 9000, 1)
logits [[ 5.175059  -2.1911705  3.6063752 -9.619057 ]]
Iteration 100 of 1000: loss=3.59 " + "l1=3.02" + "l2=0.571 f=-0.694 shape=(1, 9000, 1)
logits [[ 2.5951622 -1.319086   2.6130052 -6.665479 ]]
Iteration 200 of 1000: loss=2.96 " + "l1=2.27" + "l2=0.686 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.9630148 -1.1203032  2.0111682 -4.977597 ]]
Iteration 300 of 1000: loss=2.37 " + "l1=1.44" + "l2=0.926 f=-0.43 shape=(1, 9000, 1)
logits [[ 0.8094528 -0.9716353  1.4400393 -2.9969733]]
Iteration 400 of 1000: loss=1.91 " + "l1=0.897" + "l2=1.02 f=-0.387 shape=(1, 9000, 1)
logits [[ 0.08441604 -0.88827705  1.0072675  -1.7516103 ]]
Iteration 500 of 1000: loss=1.61 " + "l1=0.599" + "l2=1.02 f=-0.366 shape=(1, 9000, 1)
logits [[-0.36788857 -0.8753515   0.8108644  -1.0319633 ]]
Iteration 600 of 1000: loss=1.39 " + "l1=0.345" + "l2=1.05 f=-0.323 shape=(1, 9000, 1)
logits [[-0.68847656 -0.83119303  0.6450808  -0.41619754]]
Iteration 700 of 1000: loss=1.19 " + "l1=0.147" + "l2=1.04 f=-0.285 shape=(1, 9000, 1)
logits [[-0.9073188  -0.8211237   0.51958406  0.06740891]]
Iteration 800 of 1000: loss=1.06 " + "l1=0.0688" + "l2=0.989 f=-0.266 shape=(1, 9000, 1)
logits [[-0.9642701  -0.8260506   0.46901143  0.25741377]]
Iteration 900 of 1000: loss=0.927 " + "l1=0.00624" + "l2=0.921 f=-0.25 shape=(1, 9000, 1)
logits [[-1.0038106  -0.8266535   0.42440277  0.4051907 ]]
--- 319.61024022102356 seconds ---
Adv result:3
Loading model
Loading ground truth file
Attack diff is running...
Loading record A05789
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0802 " + "l1=0.0802" + "l2=0 f=-0.814 shape=(1, 9000, 1)
logits [[ 5.640998  -2.3788645  2.8050003 -9.321323 ]]
Iteration 100 of 1000: loss=0.0798 " + "l1=0.0796" + "l2=0.00028 f=-0.813 shape=(1, 9000, 1)
logits [[ 5.6064286 -2.350347   2.7875683 -9.296002 ]]
Iteration 200 of 1000: loss=0.0798 " + "l1=0.0795" + "l2=0.00027 f=-0.813 shape=(1, 9000, 1)
logits [[ 5.603618  -2.3457828  2.7843847 -9.292784 ]]
Iteration 300 of 1000: loss=0.0797 " + "l1=0.0794" + "l2=0.000322 f=-0.812 shape=(1, 9000, 1)
logits [[ 5.5981183 -2.3396046  2.7803571 -9.28814  ]]
Iteration 400 of 1000: loss=0.0797 " + "l1=0.0793" + "l2=0.00044 f=-0.812 shape=(1, 9000, 1)
logits [[ 5.5925612 -2.333843   2.7766716 -9.283752 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.802 " + "l1=0.802" + "l2=0 f=-0.814 shape=(1, 9000, 1)
logits [[ 5.640998  -2.3788645  2.8050003 -9.321323 ]]
Iteration 100 of 1000: loss=0.766 " + "l1=0.745" + "l2=0.0219 f=-0.808 shape=(1, 9000, 1)
logits [[ 5.329196  -2.1170244  2.6502268 -9.094342 ]]
Iteration 200 of 1000: loss=0.753 " + "l1=0.723" + "l2=0.0297 f=-0.806 shape=(1, 9000, 1)
logits [[ 5.2117157 -2.0169947  2.5846632 -9.003964 ]]
Iteration 300 of 1000: loss=0.741 " + "l1=0.704" + "l2=0.0369 f=-0.804 shape=(1, 9000, 1)
logits [[ 5.109746  -1.9352392  2.52819   -8.918738 ]]
Iteration 400 of 1000: loss=0.732 " + "l1=0.686" + "l2=0.0453 f=-0.8 shape=(1, 9000, 1)
logits [[ 5.0167227 -1.8474458  2.4716382 -8.842734 ]]
Iteration 500 of 1000: loss=0.722 " + "l1=0.67" + "l2=0.0523 f=-0.797 shape=(1, 9000, 1)
logits [[ 4.9270062 -1.7719157  2.4248738 -8.767706 ]]
Iteration 600 of 1000: loss=0.712 " + "l1=0.652" + "l2=0.0598 f=-0.794 shape=(1, 9000, 1)
logits [[ 4.8277597 -1.6940196  2.3765268 -8.688203 ]]
Iteration 700 of 1000: loss=0.7 " + "l1=0.636" + "l2=0.0643 f=-0.793 shape=(1, 9000, 1)
logits [[ 4.730479  -1.630033   2.3362052 -8.607781 ]]
Iteration 800 of 1000: loss=0.687 " + "l1=0.616" + "l2=0.0709 f=-0.792 shape=(1, 9000, 1)
logits [[ 4.6077204 -1.5551012  2.2892022 -8.50986  ]]
Iteration 900 of 1000: loss=0.672 " + "l1=0.596" + "l2=0.0764 f=-0.791 shape=(1, 9000, 1)
logits [[ 4.4817915 -1.4775513  2.2388744 -8.405181 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.02 " + "l1=8.02" + "l2=0 f=-0.814 shape=(1, 9000, 1)
logits [[ 5.640998  -2.3788645  2.8050003 -9.321323 ]]
Iteration 100 of 1000: loss=3 " + "l1=0.746" + "l2=2.25 f=-0.863 shape=(1, 9000, 1)
logits [[ 1.3407841   0.59781164  1.3441592  -6.73286   ]]
Iteration 200 of 1000: loss=2 " + "l1=0.00536" + "l2=1.99 f=-0.802 shape=(1, 9000, 1)
logits [[ 0.9589572   0.97442454  0.97978866 -6.119876  ]]
Iteration 300 of 1000: loss=1.72 " + "l1=0" + "l2=1.72 f=-0.794 shape=(1, 9000, 1)
logits [[ 0.95340806  0.9684736   0.96715415 -6.0637016 ]]
Iteration 400 of 1000: loss=1.6 " + "l1=0" + "l2=1.6 f=-0.797 shape=(1, 9000, 1)
logits [[ 0.9469581  0.9638653  0.9627375 -6.0613475]]
Iteration 500 of 1000: loss=1.53 " + "l1=0.00332" + "l2=1.52 f=-0.797 shape=(1, 9000, 1)
logits [[ 0.9542975  0.9651736  0.9684906 -6.0761704]]
Iteration 600 of 1000: loss=1.47 " + "l1=0.00586" + "l2=1.46 f=-0.796 shape=(1, 9000, 1)
logits [[ 0.9596649   0.9668907   0.97275484 -6.085122  ]]
Iteration 700 of 1000: loss=1.44 " + "l1=0.0401" + "l2=1.4 f=-0.794 shape=(1, 9000, 1)
logits [[ 0.989887   0.949769   0.9770668 -6.091004 ]]
Iteration 800 of 1000: loss=1.36 " + "l1=0.0127" + "l2=1.35 f=-0.791 shape=(1, 9000, 1)
logits [[ 0.9550031   0.9624809   0.97516143 -6.0571585 ]]
Iteration 900 of 1000: loss=1.3 " + "l1=0" + "l2=1.3 f=-0.785 shape=(1, 9000, 1)
logits [[ 0.9619169  0.9619541  0.9600186 -6.0235314]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.41 " + "l1=4.41" + "l2=0 f=-0.814 shape=(1, 9000, 1)
logits [[ 5.640998  -2.3788645  2.8050003 -9.321323 ]]
Iteration 100 of 1000: loss=2.76 " + "l1=1.54" + "l2=1.23 f=-0.871 shape=(1, 9000, 1)
logits [[ 2.5853202  -0.21110825  1.7792226  -7.6363726 ]]
Iteration 200 of 1000: loss=1.95 " + "l1=0.588" + "l2=1.36 f=-0.912 shape=(1, 9000, 1)
logits [[ 1.4532329   0.39766604  1.466891   -6.9639454 ]]
Iteration 300 of 1000: loss=1.69 " + "l1=0.412" + "l2=1.28 f=-0.881 shape=(1, 9000, 1)
logits [[ 1.3010812  0.5523323  1.2934021 -6.670163 ]]
Iteration 400 of 1000: loss=1.56 " + "l1=0.301" + "l2=1.25 f=-0.85 shape=(1, 9000, 1)
logits [[ 1.1948618  0.6587768  1.2063051 -6.461435 ]]
Iteration 500 of 1000: loss=1.4 " + "l1=0.177" + "l2=1.22 f=-0.812 shape=(1, 9000, 1)
logits [[ 1.1035627  0.7821813  1.1004745 -6.2330403]]
Iteration 600 of 1000: loss=1.23 " + "l1=0.053" + "l2=1.18 f=-0.747 shape=(1, 9000, 1)
logits [[ 1.0077606  0.9189421  1.0152242 -5.9313645]]
Iteration 700 of 1000: loss=1.09 " + "l1=0.00683" + "l2=1.08 f=-0.724 shape=(1, 9000, 1)
logits [[ 0.97658926  0.96623164  0.97865283 -5.8168235 ]]
Iteration 800 of 1000: loss=0.993 " + "l1=0.0125" + "l2=0.981 f=-0.706 shape=(1, 9000, 1)
logits [[ 0.96609545  0.9580837   0.98089105 -5.729111  ]]
Iteration 900 of 1000: loss=0.898 " + "l1=0.00296" + "l2=0.895 f=-0.685 shape=(1, 9000, 1)
logits [[ 0.9446285   0.93924195  0.9393305  -5.561668  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.61 " + "l1=2.61" + "l2=0 f=-0.814 shape=(1, 9000, 1)
logits [[ 5.640998  -2.3788645  2.8050003 -9.321323 ]]
Iteration 100 of 1000: loss=2.14 " + "l1=1.79" + "l2=0.35 f=-0.798 shape=(1, 9000, 1)
logits [[ 4.265159  -1.2484679  2.1950395 -8.402787 ]]
Iteration 200 of 1000: loss=1.84 " + "l1=1.22" + "l2=0.62 f=-0.847 shape=(1, 9000, 1)
logits [[ 3.1871629 -0.5778069  1.8403163 -7.8394933]]
Iteration 300 of 1000: loss=1.58 " + "l1=0.805" + "l2=0.778 f=-0.884 shape=(1, 9000, 1)
logits [[ 2.357795   -0.11936335  1.6299559  -7.404574  ]]
Iteration 400 of 1000: loss=1.4 " + "l1=0.499" + "l2=0.903 f=-0.894 shape=(1, 9000, 1)
logits [[ 1.7315164   0.19739841  1.5077497  -7.0134206 ]]
Iteration 500 of 1000: loss=1.23 " + "l1=0.355" + "l2=0.873 f=-0.887 shape=(1, 9000, 1)
logits [[ 1.4325336  0.3393991  1.4249971 -6.7453465]]
Iteration 600 of 1000: loss=1.09 " + "l1=0.297" + "l2=0.792 f=-0.85 shape=(1, 9000, 1)
logits [[ 1.3403319   0.42593125  1.333358   -6.5007734 ]]
Iteration 700 of 1000: loss=0.98 " + "l1=0.231" + "l2=0.749 f=-0.807 shape=(1, 9000, 1)
logits [[ 1.2278141  0.5257346  1.2379866 -6.2190843]]
Iteration 800 of 1000: loss=0.855 " + "l1=0.14" + "l2=0.716 f=-0.747 shape=(1, 9000, 1)
logits [[ 1.0727781  0.6554963  1.0851215 -5.803358 ]]
Iteration 900 of 1000: loss=0.743 " + "l1=0.0922" + "l2=0.65 f=-0.702 shape=(1, 9000, 1)
logits [[ 0.9821739   0.71013784  0.9937839  -5.4921126 ]]
--- 268.704389333725 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0284 " + "l1=0.0284" + "l2=0 f=-0.814 shape=(1, 9000, 1)
logits [[ 5.640998  -2.3788645  2.8050003 -9.321323 ]]
Iteration 100 of 1000: loss=0.0282 " + "l1=0.028" + "l2=0.000178 f=-0.816 shape=(1, 9000, 1)
logits [[ 5.615539 -2.384937  2.813943 -9.310423]]
Iteration 200 of 1000: loss=0.0281 " + "l1=0.028" + "l2=0.000139 f=-0.817 shape=(1, 9000, 1)
logits [[ 5.61569   -2.3865013  2.8149087 -9.310759 ]]
Iteration 300 of 1000: loss=0.0281 " + "l1=0.028" + "l2=0.000181 f=-0.817 shape=(1, 9000, 1)
logits [[ 5.6129384 -2.3883522  2.816662  -9.30979  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.284 " + "l1=0.284" + "l2=0 f=-0.814 shape=(1, 9000, 1)
logits [[ 5.640998  -2.3788645  2.8050003 -9.321323 ]]
Iteration 100 of 1000: loss=0.269 " + "l1=0.26" + "l2=0.00818 f=-0.834 shape=(1, 9000, 1)
logits [[ 5.4632535 -2.4174576  2.8587174 -9.240252 ]]
Iteration 200 of 1000: loss=0.263 " + "l1=0.251" + "l2=0.0119 f=-0.843 shape=(1, 9000, 1)
logits [[ 5.3969254 -2.4463215  2.8897123 -9.212702 ]]
Iteration 300 of 1000: loss=0.257 " + "l1=0.242" + "l2=0.0151 f=-0.852 shape=(1, 9000, 1)
logits [[ 5.3333383 -2.468458   2.9139218 -9.186164 ]]
Iteration 400 of 1000: loss=0.252 " + "l1=0.234" + "l2=0.0182 f=-0.859 shape=(1, 9000, 1)
logits [[ 5.2771773 -2.4884477  2.9358618 -9.158616 ]]
Iteration 500 of 1000: loss=0.248 " + "l1=0.227" + "l2=0.0207 f=-0.864 shape=(1, 9000, 1)
logits [[ 5.2277575 -2.5045815  2.9541461 -9.132304 ]]
Iteration 600 of 1000: loss=0.244 " + "l1=0.222" + "l2=0.0224 f=-0.868 shape=(1, 9000, 1)
logits [[ 5.1847987 -2.5164995  2.9647708 -9.1053915]]
Iteration 700 of 1000: loss=0.241 " + "l1=0.217" + "l2=0.0241 f=-0.873 shape=(1, 9000, 1)
logits [[ 5.1385856 -2.5238354  2.9699862 -9.075172 ]]
Iteration 800 of 1000: loss=0.237 " + "l1=0.212" + "l2=0.0255 f=-0.877 shape=(1, 9000, 1)
logits [[ 5.091232  -2.5307503  2.9727907 -9.041535 ]]
Iteration 900 of 1000: loss=0.234 " + "l1=0.207" + "l2=0.0269 f=-0.882 shape=(1, 9000, 1)
logits [[ 5.042462  -2.537917   2.9758785 -9.007272 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.84 " + "l1=2.84" + "l2=0 f=-0.814 shape=(1, 9000, 1)
logits [[ 5.640998  -2.3788645  2.8050003 -9.321323 ]]
Iteration 100 of 1000: loss=1 " + "l1=0.0373" + "l2=0.964 f=-0.987 shape=(1, 9000, 1)
logits [[ 3.3289022 -2.6321886  3.291595  -7.9369345]]
Iteration 200 of 1000: loss=0.71 " + "l1=0" + "l2=0.71 f=-0.98 shape=(1, 9000, 1)
logits [[ 3.2292783 -2.620335   3.259508  -7.788846 ]]
Iteration 300 of 1000: loss=0.593 " + "l1=0" + "l2=0.593 f=-0.977 shape=(1, 9000, 1)
logits [[ 3.2352047 -2.632058   3.2557013 -7.7649484]]
Iteration 400 of 1000: loss=0.506 " + "l1=0.00846" + "l2=0.498 f=-0.969 shape=(1, 9000, 1)
logits [[ 3.2715287 -2.6482246  3.263064  -7.761875 ]]
Iteration 500 of 1000: loss=0.44 " + "l1=0.00393" + "l2=0.436 f=-0.963 shape=(1, 9000, 1)
logits [[ 3.2665446 -2.6557443  3.2626145 -7.725925 ]]
Iteration 600 of 1000: loss=0.388 " + "l1=0.00343" + "l2=0.385 f=-0.96 shape=(1, 9000, 1)
logits [[ 3.2599247 -2.6729562  3.2564902 -7.6822066]]
Iteration 700 of 1000: loss=0.351 " + "l1=0" + "l2=0.351 f=-0.958 shape=(1, 9000, 1)
logits [[ 3.228232  -2.671836   3.2352297 -7.6218867]]
Iteration 800 of 1000: loss=0.33 " + "l1=0" + "l2=0.33 f=-0.956 shape=(1, 9000, 1)
logits [[ 3.1862867 -2.6684275  3.2183259 -7.5614057]]
Iteration 900 of 1000: loss=0.299 " + "l1=0" + "l2=0.299 f=-0.951 shape=(1, 9000, 1)
logits [[ 3.1777544 -2.6535647  3.1889994 -7.515809 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.56 " + "l1=1.56" + "l2=0 f=-0.814 shape=(1, 9000, 1)
logits [[ 5.640998  -2.3788645  2.8050003 -9.321323 ]]
Iteration 100 of 1000: loss=1.04 " + "l1=0.717" + "l2=0.319 f=-0.937 shape=(1, 9000, 1)
logits [[ 4.404458  -2.572864   3.1011646 -8.680755 ]]
Iteration 200 of 1000: loss=0.783 " + "l1=0.268" + "l2=0.516 f=-0.983 shape=(1, 9000, 1)
logits [[ 3.7246966 -2.6749923  3.2382817 -8.218613 ]]
Iteration 300 of 1000: loss=0.571 " + "l1=0.0111" + "l2=0.56 f=-0.985 shape=(1, 9000, 1)
logits [[ 3.311647  -2.6783912  3.291503  -7.863502 ]]
Iteration 400 of 1000: loss=0.451 " + "l1=0.0118" + "l2=0.44 f=-0.969 shape=(1, 9000, 1)
logits [[ 3.2771592 -2.641343   3.2557607 -7.7688804]]
Iteration 500 of 1000: loss=0.381 " + "l1=0" + "l2=0.381 f=-0.962 shape=(1, 9000, 1)
logits [[ 3.2320945 -2.624126   3.2322152 -7.6892014]]
Iteration 600 of 1000: loss=0.338 " + "l1=0" + "l2=0.338 f=-0.959 shape=(1, 9000, 1)
logits [[ 3.1913743 -2.628876   3.2045147 -7.6020913]]
Iteration 700 of 1000: loss=0.303 " + "l1=0" + "l2=0.303 f=-0.956 shape=(1, 9000, 1)
logits [[ 3.1695414 -2.629256   3.1745276 -7.540724 ]]
Iteration 800 of 1000: loss=0.277 " + "l1=0" + "l2=0.277 f=-0.952 shape=(1, 9000, 1)
logits [[ 3.1298046 -2.616384   3.1381955 -7.4609685]]
Iteration 900 of 1000: loss=0.252 " + "l1=0.000755" + "l2=0.251 f=-0.947 shape=(1, 9000, 1)
logits [[ 3.098082  -2.5990553  3.0967102 -7.383451 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.922 " + "l1=0.922" + "l2=0 f=-0.814 shape=(1, 9000, 1)
logits [[ 5.640998  -2.3788645  2.8050003 -9.321323 ]]
Iteration 100 of 1000: loss=0.748 " + "l1=0.647" + "l2=0.101 f=-0.883 shape=(1, 9000, 1)
logits [[ 4.970164  -2.4875433  2.9797273 -8.993892 ]]
Iteration 200 of 1000: loss=0.672 " + "l1=0.523" + "l2=0.149 f=-0.916 shape=(1, 9000, 1)
logits [[ 4.6811576 -2.5691454  3.0706089 -8.8454075]]
Iteration 300 of 1000: loss=0.615 " + "l1=0.433" + "l2=0.182 f=-0.937 shape=(1, 9000, 1)
logits [[ 4.4556746 -2.621349   3.1242406 -8.704641 ]]
Iteration 400 of 1000: loss=0.561 " + "l1=0.348" + "l2=0.213 f=-0.95 shape=(1, 9000, 1)
logits [[ 4.2415643 -2.657913   3.1693537 -8.554841 ]]
Iteration 500 of 1000: loss=0.502 " + "l1=0.253" + "l2=0.249 f=-0.954 shape=(1, 9000, 1)
logits [[ 3.9431179 -2.6344166  3.1639028 -8.288814 ]]
Iteration 600 of 1000: loss=0.437 " + "l1=0.156" + "l2=0.281 f=-0.953 shape=(1, 9000, 1)
logits [[ 3.6223183 -2.5875046  3.143775  -7.9923415]]
Iteration 700 of 1000: loss=0.382 " + "l1=0.0829" + "l2=0.3 f=-0.958 shape=(1, 9000, 1)
logits [[ 3.3783817 -2.5609884  3.123441  -7.7738338]]
Iteration 800 of 1000: loss=0.337 " + "l1=0.0291" + "l2=0.308 f=-0.955 shape=(1, 9000, 1)
logits [[ 3.2004402 -2.5298853  3.1108713 -7.6006083]]
Iteration 900 of 1000: loss=0.291 " + "l1=0.00377" + "l2=0.288 f=-0.952 shape=(1, 9000, 1)
logits [[ 3.0732696 -2.5053735  3.0616703 -7.43813  ]]
--- 266.3880832195282 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.15 " + "l1=0.15" + "l2=0 f=-0.814 shape=(1, 9000, 1)
logits [[ 5.640998  -2.3788645  2.8050003 -9.321323 ]]
Iteration 100 of 1000: loss=0.149 " + "l1=0.149" + "l2=0.000367 f=-0.814 shape=(1, 9000, 1)
logits [[ 5.5967135 -2.3661625  2.7913492 -9.2763605]]
Iteration 200 of 1000: loss=0.149 " + "l1=0.149" + "l2=0.000378 f=-0.814 shape=(1, 9000, 1)
logits [[ 5.590592  -2.3645515  2.7886121 -9.268863 ]]
Iteration 300 of 1000: loss=0.149 " + "l1=0.148" + "l2=0.000484 f=-0.814 shape=(1, 9000, 1)
logits [[ 5.5821934 -2.3622317  2.7854757 -9.25966  ]]
Iteration 400 of 1000: loss=0.149 " + "l1=0.148" + "l2=0.000563 f=-0.814 shape=(1, 9000, 1)
logits [[ 5.574199  -2.3600142  2.7826812 -9.2513895]]
Iteration 500 of 1000: loss=0.149 " + "l1=0.148" + "l2=0.000667 f=-0.814 shape=(1, 9000, 1)
logits [[ 5.5669417 -2.358032   2.780348  -9.244281 ]]
Iteration 600 of 1000: loss=0.149 " + "l1=0.148" + "l2=0.000759 f=-0.814 shape=(1, 9000, 1)
logits [[ 5.560082  -2.3562195  2.7782934 -9.237857 ]]
Iteration 700 of 1000: loss=0.149 " + "l1=0.148" + "l2=0.00087 f=-0.814 shape=(1, 9000, 1)
logits [[ 5.5536118 -2.3547347  2.77654   -9.232078 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.5 " + "l1=1.5" + "l2=0 f=-0.814 shape=(1, 9000, 1)
logits [[ 5.640998  -2.3788645  2.8050003 -9.321323 ]]
Iteration 100 of 1000: loss=1.44 " + "l1=1.41" + "l2=0.0316 f=-0.816 shape=(1, 9000, 1)
logits [[ 5.219923  -2.2402534  2.6692183 -8.912884 ]]
Iteration 200 of 1000: loss=1.42 " + "l1=1.38" + "l2=0.0466 f=-0.819 shape=(1, 9000, 1)
logits [[ 5.0349407 -2.1958082  2.6089106 -8.72453  ]]
Iteration 300 of 1000: loss=1.4 " + "l1=1.34" + "l2=0.0616 f=-0.818 shape=(1, 9000, 1)
logits [[ 4.8751445 -2.1568534  2.557471  -8.546108 ]]
Iteration 400 of 1000: loss=1.39 " + "l1=1.31" + "l2=0.0768 f=-0.815 shape=(1, 9000, 1)
logits [[ 4.718518  -2.1151392  2.5069647 -8.371228 ]]
Iteration 500 of 1000: loss=1.37 " + "l1=1.28" + "l2=0.0884 f=-0.816 shape=(1, 9000, 1)
logits [[ 4.5637546 -2.079652   2.460309  -8.209152 ]]
Iteration 600 of 1000: loss=1.34 " + "l1=1.24" + "l2=0.0993 f=-0.819 shape=(1, 9000, 1)
logits [[ 4.3875237 -2.0482726  2.413915  -8.029718 ]]
Iteration 700 of 1000: loss=1.31 " + "l1=1.2" + "l2=0.112 f=-0.824 shape=(1, 9000, 1)
logits [[ 4.170923  -2.0360036  2.3786397 -7.807914 ]]
Iteration 800 of 1000: loss=1.28 " + "l1=1.16" + "l2=0.119 f=-0.828 shape=(1, 9000, 1)
logits [[ 3.97906   -2.0264637  2.3527553 -7.6174135]]
Iteration 900 of 1000: loss=1.24 " + "l1=1.11" + "l2=0.13 f=-0.834 shape=(1, 9000, 1)
logits [[ 3.7395024 -2.0026734  2.3061419 -7.378319 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=15 " + "l1=15" + "l2=0 f=-0.814 shape=(1, 9000, 1)
logits [[ 5.640998  -2.3788645  2.8050003 -9.321323 ]]
Iteration 100 of 1000: loss=7.91 " + "l1=4.63" + "l2=3.29 f=-0.626 shape=(1, 9000, 1)
logits [[ 0.93877757 -0.7266503   0.9567503  -3.671377  ]]
Iteration 200 of 1000: loss=5.04 " + "l1=0.622" + "l2=4.42 f=-0.325 shape=(1, 9000, 1)
logits [[-0.3832853  -0.12868686 -0.0835152  -0.70540625]]
Iteration 300 of 1000: loss=4.13 " + "l1=0.0505" + "l2=4.08 f=-0.239 shape=(1, 9000, 1)
logits [[-0.36619416 -0.20952065 -0.16498558 -0.21552601]]
Iteration 400 of 1000: loss=3.88 " + "l1=0.0128" + "l2=3.87 f=-0.235 shape=(1, 9000, 1)
logits [[-0.39624503 -0.17691028 -0.1763315  -0.18911767]]
Iteration 500 of 1000: loss=3.7 " + "l1=0.00734" + "l2=3.69 f=-0.233 shape=(1, 9000, 1)
logits [[-0.40474755 -0.17916478 -0.16985562 -0.17719096]]
Iteration 600 of 1000: loss=3.52 " + "l1=0.00462" + "l2=3.51 f=-0.228 shape=(1, 9000, 1)
logits [[-0.41922298 -0.18563688 -0.151708   -0.15633038]]
Iteration 700 of 1000: loss=3.33 " + "l1=0.0283" + "l2=3.3 f=-0.226 shape=(1, 9000, 1)
logits [[-0.43191054 -0.18937047 -0.12782109 -0.1561512 ]]
Iteration 800 of 1000: loss=3.11 " + "l1=0.00271" + "l2=3.11 f=-0.21 shape=(1, 9000, 1)
logits [[-0.37186313 -0.21745446 -0.12479489 -0.12750351]]
Iteration 900 of 1000: loss=2.92 " + "l1=0.0112" + "l2=2.91 f=-0.196 shape=(1, 9000, 1)
logits [[-0.34269387 -0.22884841 -0.10087138 -0.11211952]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=8.23 " + "l1=8.23" + "l2=0 f=-0.814 shape=(1, 9000, 1)
logits [[ 5.640998  -2.3788645  2.8050003 -9.321323 ]]
Iteration 100 of 1000: loss=5.92 " + "l1=4.44" + "l2=1.48 f=-0.793 shape=(1, 9000, 1)
logits [[ 2.2297049 -1.4897805  1.9352752 -5.8462734]]
Iteration 200 of 1000: loss=4.67 " + "l1=2.74" + "l2=1.93 f=-0.674 shape=(1, 9000, 1)
logits [[ 1.0489422  -0.87628055  1.0534359  -3.9235895 ]]
Iteration 300 of 1000: loss=4.1 " + "l1=1.99" + "l2=2.11 f=-0.553 shape=(1, 9000, 1)
logits [[ 0.65851015 -0.5824994   0.66782165 -2.9544837 ]]
Iteration 400 of 1000: loss=3.78 " + "l1=1.55" + "l2=2.23 f=-0.464 shape=(1, 9000, 1)
logits [[ 0.46711555 -0.4364307   0.46474296 -2.3519776 ]]
Iteration 500 of 1000: loss=3.42 " + "l1=1.08" + "l2=2.34 f=-0.366 shape=(1, 9000, 1)
logits [[ 0.222024   -0.30071667  0.290402   -1.6763496 ]]
Iteration 600 of 1000: loss=3.05 " + "l1=0.742" + "l2=2.31 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.13041557 -0.25353253  0.1741691  -1.1741374 ]]
Iteration 700 of 1000: loss=2.58 " + "l1=0.287" + "l2=2.29 f=-0.189 shape=(1, 9000, 1)
logits [[-0.06431159 -0.21161434  0.02082253 -0.50167763]]
Iteration 800 of 1000: loss=2.16 " + "l1=0.0186" + "l2=2.14 f=-0.155 shape=(1, 9000, 1)
logits [[-0.20497006 -0.21288088 -0.08511654 -0.11887304]]
Iteration 900 of 1000: loss=1.89 " + "l1=0.0122" + "l2=1.88 f=-0.146 shape=(1, 9000, 1)
logits [[-0.14777069 -0.26199973 -0.07670896 -0.09883703]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.86 " + "l1=4.86" + "l2=0 f=-0.814 shape=(1, 9000, 1)
logits [[ 5.640998  -2.3788645  2.8050003 -9.321323 ]]
Iteration 100 of 1000: loss=4.16 " + "l1=3.67" + "l2=0.487 f=-0.818 shape=(1, 9000, 1)
logits [[ 3.8141704 -1.9046578  2.3121321 -7.492079 ]]
Iteration 200 of 1000: loss=3.71 " + "l1=2.85" + "l2=0.857 f=-0.789 shape=(1, 9000, 1)
logits [[ 2.6300614 -1.5916196  1.9606532 -6.153282 ]]
Iteration 300 of 1000: loss=3.37 " + "l1=2.27" + "l2=1.1 f=-0.769 shape=(1, 9000, 1)
logits [[ 1.8231736 -1.3915734  1.6597499 -5.1663613]]
Iteration 400 of 1000: loss=2.98 " + "l1=1.83" + "l2=1.15 f=-0.708 shape=(1, 9000, 1)
logits [[ 1.3115708 -1.1577697  1.3173761 -4.3031125]]
Iteration 500 of 1000: loss=2.74 " + "l1=1.58" + "l2=1.15 f=-0.652 shape=(1, 9000, 1)
logits [[ 1.1170963 -1.1049358  1.1251484 -3.7464106]]
Iteration 600 of 1000: loss=2.55 " + "l1=1.42" + "l2=1.13 f=-0.607 shape=(1, 9000, 1)
logits [[ 0.99637127 -1.0619323   1.0049223  -3.3660352 ]]
Iteration 700 of 1000: loss=2.34 " + "l1=1.23" + "l2=1.11 f=-0.555 shape=(1, 9000, 1)
logits [[ 0.82608163 -0.9517807   0.8493382  -2.94208   ]]
Iteration 800 of 1000: loss=2.13 " + "l1=1.03" + "l2=1.1 f=-0.519 shape=(1, 9000, 1)
logits [[ 0.5935773 -0.9043352  0.7046412 -2.468509 ]]
Iteration 900 of 1000: loss=1.91 " + "l1=0.8" + "l2=1.11 f=-0.482 shape=(1, 9000, 1)
logits [[ 0.33006588 -0.87928116  0.5421451  -1.9206887 ]]
--- 290.523512840271 seconds ---
Adv result:3
Loading record A05817
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0773 " + "l1=0.0773" + "l2=0 f=-0.662 shape=(1, 9000, 1)
logits [[ 5.246396  -2.4794884  3.564002  -8.980241 ]]
Iteration 100 of 1000: loss=0.0769 " + "l1=0.0767" + "l2=0.00025 f=-0.662 shape=(1, 9000, 1)
logits [[ 5.2139783 -2.4555054  3.5495296 -8.955462 ]]
Iteration 200 of 1000: loss=0.0769 " + "l1=0.0766" + "l2=0.000235 f=-0.662 shape=(1, 9000, 1)
logits [[ 5.2100444 -2.45212    3.5468206 -8.9515705]]
Iteration 300 of 1000: loss=0.0768 " + "l1=0.0765" + "l2=0.000286 f=-0.662 shape=(1, 9000, 1)
logits [[ 5.2044506 -2.4475749  3.5435908 -8.946901 ]]
Iteration 400 of 1000: loss=0.0768 " + "l1=0.0764" + "l2=0.000362 f=-0.662 shape=(1, 9000, 1)
logits [[ 5.19897   -2.44309    3.5404024 -8.942503 ]]
Iteration 500 of 1000: loss=0.0767 " + "l1=0.0763" + "l2=0.00042 f=-0.661 shape=(1, 9000, 1)
logits [[ 5.193927  -2.4387732  3.5374098 -8.938555 ]]
Iteration 600 of 1000: loss=0.0768 " + "l1=0.0762" + "l2=0.000539 f=-0.661 shape=(1, 9000, 1)
logits [[ 5.1891475 -2.4348025  3.5346372 -8.934917 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.773 " + "l1=0.773" + "l2=0 f=-0.662 shape=(1, 9000, 1)
logits [[ 5.246396  -2.4794884  3.564002  -8.980241 ]]
Iteration 100 of 1000: loss=0.742 " + "l1=0.724" + "l2=0.0183 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.9587283 -2.2800255  3.4462552 -8.74639  ]]
Iteration 200 of 1000: loss=0.727 " + "l1=0.7" + "l2=0.0273 f=-0.652 shape=(1, 9000, 1)
logits [[ 4.816323 -2.182901  3.385602 -8.628959]]
Iteration 300 of 1000: loss=0.716 " + "l1=0.68" + "l2=0.0359 f=-0.653 shape=(1, 9000, 1)
logits [[ 4.6952233 -2.104563   3.3275604 -8.529423 ]]
Iteration 400 of 1000: loss=0.707 " + "l1=0.664" + "l2=0.0427 f=-0.652 shape=(1, 9000, 1)
logits [[ 4.592878  -2.044863   3.2823503 -8.439662 ]]
Iteration 500 of 1000: loss=0.698 " + "l1=0.649" + "l2=0.0495 f=-0.651 shape=(1, 9000, 1)
logits [[ 4.4926414 -1.9940597  3.242355  -8.343503 ]]
Iteration 600 of 1000: loss=0.69 " + "l1=0.633" + "l2=0.0572 f=-0.649 shape=(1, 9000, 1)
logits [[ 4.391512  -1.9371562  3.1976101 -8.246472 ]]
Iteration 700 of 1000: loss=0.683 " + "l1=0.62" + "l2=0.0632 f=-0.647 shape=(1, 9000, 1)
logits [[ 4.307473  -1.889565   3.1567447 -8.161442 ]]
Iteration 800 of 1000: loss=0.676 " + "l1=0.608" + "l2=0.0673 f=-0.643 shape=(1, 9000, 1)
logits [[ 4.2392645 -1.8452796  3.1196656 -8.086958 ]]
Iteration 900 of 1000: loss=0.668 " + "l1=0.597" + "l2=0.0707 f=-0.637 shape=(1, 9000, 1)
logits [[ 4.1776557 -1.7940687  3.0792465 -8.010507 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.73 " + "l1=7.73" + "l2=0 f=-0.662 shape=(1, 9000, 1)
logits [[ 5.246396  -2.4794884  3.564002  -8.980241 ]]
Iteration 100 of 1000: loss=4.67 " + "l1=3.22" + "l2=1.45 f=-0.619 shape=(1, 9000, 1)
logits [[ 2.320932  -0.888875   2.3261325 -6.232858 ]]
Iteration 200 of 1000: loss=3.85 " + "l1=2.13" + "l2=1.72 f=-0.607 shape=(1, 9000, 1)
logits [[ 1.8016652 -0.2999386  1.8289683 -5.757716 ]]
Iteration 300 of 1000: loss=3.39 " + "l1=1.56" + "l2=1.83 f=-0.623 shape=(1, 9000, 1)
logits [[ 1.5612071e+00  2.4870057e-03  1.5617672e+00 -5.6191311e+00]]
Iteration 400 of 1000: loss=3.08 " + "l1=1.21" + "l2=1.87 f=-0.643 shape=(1, 9000, 1)
logits [[ 1.4040338   0.21303645  1.4256734  -5.6130276 ]]
Iteration 500 of 1000: loss=2.85 " + "l1=1" + "l2=1.85 f=-0.639 shape=(1, 9000, 1)
logits [[ 1.32215     0.32189906  1.325822   -5.524732  ]]
Iteration 600 of 1000: loss=2.65 " + "l1=0.869" + "l2=1.78 f=-0.625 shape=(1, 9000, 1)
logits [[ 1.2347933   0.40002725  1.268572   -5.4045486 ]]
Iteration 700 of 1000: loss=2.49 " + "l1=0.742" + "l2=1.74 f=-0.612 shape=(1, 9000, 1)
logits [[ 1.096692    0.47487488  1.2164406  -5.2359295 ]]
Iteration 800 of 1000: loss=2.37 " + "l1=0.645" + "l2=1.72 f=-0.593 shape=(1, 9000, 1)
logits [[ 0.9799411   0.52779526  1.1728426  -5.051735  ]]
Iteration 900 of 1000: loss=2.26 " + "l1=0.515" + "l2=1.75 f=-0.586 shape=(1, 9000, 1)
logits [[ 0.7867574   0.60098994  1.115669   -4.8475585 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=77.3 " + "l1=77.3" + "l2=0 f=-0.662 shape=(1, 9000, 1)
logits [[ 5.246396  -2.4794884  3.564002  -8.980241 ]]
Iteration 100 of 1000: loss=9.08 " + "l1=0" + "l2=9.08 f=-0.622 shape=(1, 9000, 1)
logits [[ 0.05397144  0.9755456   0.9448292  -4.4612713 ]]
Iteration 200 of 1000: loss=6.18 " + "l1=0" + "l2=6.18 f=-0.645 shape=(1, 9000, 1)
logits [[ 0.4249259  1.0197768  0.9658436 -4.988977 ]]
Iteration 300 of 1000: loss=5.36 " + "l1=0" + "l2=5.36 f=-0.638 shape=(1, 9000, 1)
logits [[ 0.55992436  0.9994041   0.9737571  -5.085043  ]]
Iteration 400 of 1000: loss=4.96 " + "l1=0" + "l2=4.96 f=-0.63 shape=(1, 9000, 1)
logits [[ 0.6126876  0.9926267  0.9720797 -5.097615 ]]
Iteration 500 of 1000: loss=4.64 " + "l1=0" + "l2=4.64 f=-0.63 shape=(1, 9000, 1)
logits [[ 0.6682267   0.9788906   0.97832566 -5.1454873 ]]
Iteration 600 of 1000: loss=4.55 " + "l1=0" + "l2=4.55 f=-0.634 shape=(1, 9000, 1)
logits [[ 0.6341035   1.0068053   0.96499145 -5.1417303 ]]
Iteration 700 of 1000: loss=4.35 " + "l1=0" + "l2=4.35 f=-0.632 shape=(1, 9000, 1)
logits [[ 0.674564    0.98912567  0.9688672  -5.159594  ]]
Iteration 800 of 1000: loss=4.21 " + "l1=0" + "l2=4.21 f=-0.633 shape=(1, 9000, 1)
logits [[ 0.6937742   0.9755572   0.96368605 -5.1648455 ]]
Iteration 900 of 1000: loss=4.13 " + "l1=0.0561" + "l2=4.07 f=-0.633 shape=(1, 9000, 1)
logits [[ 0.7134906   0.9567615   0.96237123 -5.165407  ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=42.5 " + "l1=42.5" + "l2=0 f=-0.662 shape=(1, 9000, 1)
logits [[ 5.246396  -2.4794884  3.564002  -8.980241 ]]
Iteration 100 of 1000: loss=7.53 " + "l1=0.296" + "l2=7.24 f=-0.63 shape=(1, 9000, 1)
logits [[ 0.31936583  0.94904655  1.0027757  -4.792932  ]]
Iteration 200 of 1000: loss=5.08 " + "l1=0.0222" + "l2=5.06 f=-0.649 shape=(1, 9000, 1)
logits [[ 0.6180451  0.99605    1.0000851 -5.2117085]]
Iteration 300 of 1000: loss=4.55 " + "l1=0" + "l2=4.55 f=-0.643 shape=(1, 9000, 1)
logits [[ 0.6542988  1.002584   0.9910393 -5.219836 ]]
Iteration 400 of 1000: loss=4.29 " + "l1=0" + "l2=4.29 f=-0.641 shape=(1, 9000, 1)
logits [[ 0.66735196  0.99266356  0.97679335 -5.200907  ]]
Iteration 500 of 1000: loss=4.06 " + "l1=0" + "l2=4.06 f=-0.641 shape=(1, 9000, 1)
logits [[ 0.69085205  0.9732805   0.9727036  -5.2002163 ]]
Iteration 600 of 1000: loss=3.89 " + "l1=0" + "l2=3.89 f=-0.642 shape=(1, 9000, 1)
logits [[ 0.685271    0.96752614  0.9609722  -5.180529  ]]
Iteration 700 of 1000: loss=3.75 " + "l1=0.0259" + "l2=3.72 f=-0.647 shape=(1, 9000, 1)
logits [[ 0.6864817   0.95268023  0.9573821  -5.185375  ]]
Iteration 800 of 1000: loss=3.6 " + "l1=0.0315" + "l2=3.57 f=-0.65 shape=(1, 9000, 1)
logits [[ 0.66858923  0.9465871   0.95231247 -5.168605  ]]
Iteration 900 of 1000: loss=3.5 " + "l1=0" + "l2=3.5 f=-0.654 shape=(1, 9000, 1)
logits [[ 0.5952896   0.96518785  0.9357838  -5.113171  ]]
--- 281.3682312965393 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0168 " + "l1=0.0168" + "l2=0 f=-0.662 shape=(1, 9000, 1)
logits [[ 5.246396  -2.4794884  3.564002  -8.980241 ]]
Iteration 100 of 1000: loss=0.0167 " + "l1=0.0165" + "l2=0.000199 f=-0.663 shape=(1, 9000, 1)
logits [[ 5.2207003 -2.4859688  3.5732424 -8.961442 ]]
Iteration 200 of 1000: loss=0.0166 " + "l1=0.0165" + "l2=0.000153 f=-0.663 shape=(1, 9000, 1)
logits [[ 5.2208476 -2.4856982  3.5724273 -8.961127 ]]
Iteration 300 of 1000: loss=0.0166 " + "l1=0.0165" + "l2=0.000169 f=-0.664 shape=(1, 9000, 1)
logits [[ 5.2187624 -2.485923   3.5726557 -8.95953  ]]
Iteration 400 of 1000: loss=0.0166 " + "l1=0.0164" + "l2=0.000216 f=-0.664 shape=(1, 9000, 1)
logits [[ 5.2163153 -2.4862576  3.5730753 -8.9577265]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.168 " + "l1=0.168" + "l2=0 f=-0.662 shape=(1, 9000, 1)
logits [[ 5.246396  -2.4794884  3.564002  -8.980241 ]]
Iteration 100 of 1000: loss=0.153 " + "l1=0.143" + "l2=0.00946 f=-0.67 shape=(1, 9000, 1)
logits [[ 5.0483437 -2.5147715  3.6147847 -8.827953 ]]
Iteration 200 of 1000: loss=0.149 " + "l1=0.136" + "l2=0.0132 f=-0.672 shape=(1, 9000, 1)
logits [[ 4.9797435 -2.5238733  3.6246145 -8.769418 ]]
Iteration 300 of 1000: loss=0.145 " + "l1=0.129" + "l2=0.0162 f=-0.672 shape=(1, 9000, 1)
logits [[ 4.9215803 -2.5226843  3.629253  -8.716492 ]]
Iteration 400 of 1000: loss=0.143 " + "l1=0.124" + "l2=0.0184 f=-0.673 shape=(1, 9000, 1)
logits [[ 4.873678  -2.5225363  3.6320372 -8.673304 ]]
Iteration 500 of 1000: loss=0.14 " + "l1=0.12" + "l2=0.0203 f=-0.673 shape=(1, 9000, 1)
logits [[ 4.8284006 -2.5180547  3.6305652 -8.632685 ]]
Iteration 600 of 1000: loss=0.138 " + "l1=0.116" + "l2=0.0218 f=-0.673 shape=(1, 9000, 1)
logits [[ 4.7896314 -2.5121078  3.629877  -8.598142 ]]
Iteration 700 of 1000: loss=0.136 " + "l1=0.113" + "l2=0.023 f=-0.673 shape=(1, 9000, 1)
logits [[ 4.754319  -2.5060816  3.6287396 -8.567536 ]]
Iteration 800 of 1000: loss=0.134 " + "l1=0.11" + "l2=0.0239 f=-0.672 shape=(1, 9000, 1)
logits [[ 4.725934  -2.4998813  3.6271126 -8.543131 ]]
Iteration 900 of 1000: loss=0.132 " + "l1=0.107" + "l2=0.0246 f=-0.672 shape=(1, 9000, 1)
logits [[ 4.698825  -2.492412   3.6251245 -8.51904  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.68 " + "l1=1.68" + "l2=0 f=-0.662 shape=(1, 9000, 1)
logits [[ 5.246396  -2.4794884  3.564002  -8.980241 ]]
Iteration 100 of 1000: loss=0.394 " + "l1=0" + "l2=0.394 f=-0.703 shape=(1, 9000, 1)
logits [[ 3.699981  -2.5991056  3.703465  -7.6147933]]
Iteration 200 of 1000: loss=0.318 " + "l1=0.0045" + "l2=0.314 f=-0.705 shape=(1, 9000, 1)
logits [[ 3.7123935 -2.6269388  3.7078912 -7.6149116]]
Iteration 300 of 1000: loss=0.281 " + "l1=0" + "l2=0.281 f=-0.707 shape=(1, 9000, 1)
logits [[ 3.6924288 -2.618822   3.693217  -7.596531 ]]
Iteration 400 of 1000: loss=0.258 " + "l1=0.00308" + "l2=0.255 f=-0.708 shape=(1, 9000, 1)
logits [[ 3.6780236 -2.6004372  3.6749463 -7.5842147]]
Iteration 500 of 1000: loss=0.241 " + "l1=0.00182" + "l2=0.24 f=-0.709 shape=(1, 9000, 1)
logits [[ 3.660895  -2.5823407  3.6590703 -7.574228 ]]
Iteration 600 of 1000: loss=0.232 " + "l1=0" + "l2=0.232 f=-0.711 shape=(1, 9000, 1)
logits [[ 3.6313288 -2.5662985  3.6479757 -7.555104 ]]
Iteration 700 of 1000: loss=0.215 " + "l1=0" + "l2=0.215 f=-0.708 shape=(1, 9000, 1)
logits [[ 3.631049  -2.5498378  3.6373794 -7.552029 ]]
Iteration 800 of 1000: loss=0.203 " + "l1=0" + "l2=0.203 f=-0.706 shape=(1, 9000, 1)
logits [[ 3.61603   -2.5295973  3.624802  -7.5333753]]
Iteration 900 of 1000: loss=0.194 " + "l1=0" + "l2=0.194 f=-0.703 shape=(1, 9000, 1)
logits [[ 3.6024783 -2.5119908  3.616526  -7.518258 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.925 " + "l1=0.925" + "l2=0 f=-0.662 shape=(1, 9000, 1)
logits [[ 5.246396  -2.4794884  3.564002  -8.980241 ]]
Iteration 100 of 1000: loss=0.436 " + "l1=0.158" + "l2=0.278 f=-0.687 shape=(1, 9000, 1)
logits [[ 3.9779568 -2.5498362  3.690848  -7.867696 ]]
Iteration 200 of 1000: loss=0.306 " + "l1=0.00275" + "l2=0.303 f=-0.701 shape=(1, 9000, 1)
logits [[ 3.6879437 -2.5640056  3.6829374 -7.60955  ]]
Iteration 300 of 1000: loss=0.263 " + "l1=0" + "l2=0.263 f=-0.702 shape=(1, 9000, 1)
logits [[ 3.6568334 -2.5434697  3.6595514 -7.580815 ]]
Iteration 400 of 1000: loss=0.238 " + "l1=0.000967" + "l2=0.237 f=-0.7 shape=(1, 9000, 1)
logits [[ 3.6388664 -2.5145388  3.6371074 -7.562586 ]]
Iteration 500 of 1000: loss=0.221 " + "l1=0.00316" + "l2=0.218 f=-0.697 shape=(1, 9000, 1)
logits [[ 3.6216145 -2.485515   3.6158762 -7.539065 ]]
Iteration 600 of 1000: loss=0.206 " + "l1=0.00285" + "l2=0.203 f=-0.692 shape=(1, 9000, 1)
logits [[ 3.6080656 -2.4634821  3.6028814 -7.515224 ]]
Iteration 700 of 1000: loss=0.191 " + "l1=0.00167" + "l2=0.19 f=-0.688 shape=(1, 9000, 1)
logits [[ 3.58853   -2.4296508  3.5854924 -7.4980774]]
Iteration 800 of 1000: loss=0.18 " + "l1=0" + "l2=0.18 f=-0.687 shape=(1, 9000, 1)
logits [[ 3.5641065 -2.4069862  3.5681338 -7.474078 ]]
Iteration 900 of 1000: loss=0.17 " + "l1=0.00232" + "l2=0.168 f=-0.685 shape=(1, 9000, 1)
logits [[ 3.5564466 -2.392758   3.5522366 -7.4577937]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.547 " + "l1=0.547" + "l2=0 f=-0.662 shape=(1, 9000, 1)
logits [[ 5.246396  -2.4794884  3.564002  -8.980241 ]]
Iteration 100 of 1000: loss=0.373 " + "l1=0.267" + "l2=0.106 f=-0.676 shape=(1, 9000, 1)
logits [[ 4.495069  -2.5291848  3.6734354 -8.342142 ]]
Iteration 200 of 1000: loss=0.322 " + "l1=0.174" + "l2=0.148 f=-0.684 shape=(1, 9000, 1)
logits [[ 4.2169375 -2.5449092  3.6811364 -8.090064 ]]
Iteration 300 of 1000: loss=0.285 " + "l1=0.108" + "l2=0.177 f=-0.69 shape=(1, 9000, 1)
logits [[ 3.9967437 -2.531144   3.664713  -7.889343 ]]
Iteration 400 of 1000: loss=0.253 " + "l1=0.0525" + "l2=0.201 f=-0.694 shape=(1, 9000, 1)
logits [[ 3.7998655 -2.5016515  3.638464  -7.7124524]]
Iteration 500 of 1000: loss=0.225 " + "l1=0.00475" + "l2=0.22 f=-0.692 shape=(1, 9000, 1)
logits [[ 3.61971   -2.4526863  3.6050878 -7.5385027]]
Iteration 600 of 1000: loss=0.206 " + "l1=0.00117" + "l2=0.204 f=-0.684 shape=(1, 9000, 1)
logits [[ 3.5855885 -2.413312   3.5819938 -7.49061  ]]
Iteration 700 of 1000: loss=0.191 " + "l1=0.00675" + "l2=0.185 f=-0.681 shape=(1, 9000, 1)
logits [[ 3.5829957 -2.3848886  3.5622334 -7.485427 ]]
Iteration 800 of 1000: loss=0.176 " + "l1=0.00038" + "l2=0.176 f=-0.68 shape=(1, 9000, 1)
logits [[ 3.5446017 -2.3563051  3.5434337 -7.4510818]]
Iteration 900 of 1000: loss=0.165 " + "l1=0.000328" + "l2=0.165 f=-0.679 shape=(1, 9000, 1)
logits [[ 3.5284462 -2.3427508  3.5274363 -7.4309907]]
--- 266.92182302474976 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.142 " + "l1=0.142" + "l2=0 f=-0.662 shape=(1, 9000, 1)
logits [[ 5.246396  -2.4794884  3.564002  -8.980241 ]]
Iteration 100 of 1000: loss=0.142 " + "l1=0.141" + "l2=0.000458 f=-0.66 shape=(1, 9000, 1)
logits [[ 5.1996346 -2.4730859  3.5545206 -8.921701 ]]
Iteration 200 of 1000: loss=0.142 " + "l1=0.141" + "l2=0.000484 f=-0.66 shape=(1, 9000, 1)
logits [[ 5.1919737 -2.4706998  3.5519166 -8.9134865]]
Iteration 300 of 1000: loss=0.141 " + "l1=0.141" + "l2=0.000574 f=-0.66 shape=(1, 9000, 1)
logits [[ 5.1830277 -2.4680798  3.5489721 -8.903204 ]]
Iteration 400 of 1000: loss=0.141 " + "l1=0.141" + "l2=0.000654 f=-0.66 shape=(1, 9000, 1)
logits [[ 5.1744523 -2.46558    3.5460832 -8.89338  ]]
Iteration 500 of 1000: loss=0.141 " + "l1=0.141" + "l2=0.000833 f=-0.659 shape=(1, 9000, 1)
logits [[ 5.166557  -2.4631908  3.5433578 -8.884382 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.42 " + "l1=1.42" + "l2=0 f=-0.662 shape=(1, 9000, 1)
logits [[ 5.246396  -2.4794884  3.564002  -8.980241 ]]
Iteration 100 of 1000: loss=1.36 " + "l1=1.31" + "l2=0.0459 f=-0.639 shape=(1, 9000, 1)
logits [[ 4.736222  -2.398207   3.4639077 -8.359102 ]]
Iteration 200 of 1000: loss=1.33 " + "l1=1.26" + "l2=0.0675 f=-0.635 shape=(1, 9000, 1)
logits [[ 4.49709   -2.3498838  3.4014049 -8.08728  ]]
Iteration 300 of 1000: loss=1.3 " + "l1=1.21" + "l2=0.0879 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.2953305 -2.2989857  3.3364675 -7.845782 ]]
Iteration 400 of 1000: loss=1.28 " + "l1=1.17" + "l2=0.105 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.11809   -2.2517574  3.2745898 -7.623792 ]]
Iteration 500 of 1000: loss=1.25 " + "l1=1.13" + "l2=0.126 f=-0.609 shape=(1, 9000, 1)
logits [[ 3.9145641 -2.1873732  3.190487  -7.354877 ]]
Iteration 600 of 1000: loss=1.23 " + "l1=1.09" + "l2=0.141 f=-0.592 shape=(1, 9000, 1)
logits [[ 3.751289  -2.1101253  3.1159847 -7.124273 ]]
Iteration 700 of 1000: loss=1.21 " + "l1=1.05" + "l2=0.155 f=-0.574 shape=(1, 9000, 1)
logits [[ 3.6034982 -2.029726   3.0331523 -6.9027905]]
Iteration 800 of 1000: loss=1.18 " + "l1=1.02" + "l2=0.164 f=-0.557 shape=(1, 9000, 1)
logits [[ 3.487238  -1.9721667  2.9582622 -6.7014923]]
Iteration 900 of 1000: loss=1.16 " + "l1=0.978" + "l2=0.179 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.3261323 -1.9450163  2.879853  -6.457152 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=14.2 " + "l1=14.2" + "l2=0 f=-0.662 shape=(1, 9000, 1)
logits [[ 5.246396  -2.4794884  3.564002  -8.980241 ]]
Iteration 100 of 1000: loss=8.25 " + "l1=5.61" + "l2=2.64 f=-0.349 shape=(1, 9000, 1)
logits [[ 1.6310937 -1.5641198  2.0732358 -3.536467 ]]
Iteration 200 of 1000: loss=6.59 " + "l1=3.22" + "l2=3.37 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.47288284 -1.3627607   1.5393338  -1.6768571 ]]
Iteration 300 of 1000: loss=5.75 " + "l1=2.24" + "l2=3.51 f=-0.218 shape=(1, 9000, 1)
logits [[-0.01571467 -1.2801085   1.3339394  -0.909718  ]]
Iteration 400 of 1000: loss=5.06 " + "l1=1.63" + "l2=3.43 f=-0.207 shape=(1, 9000, 1)
logits [[-0.29121003 -1.2231668   1.156878   -0.47157967]]
Iteration 500 of 1000: loss=4.27 " + "l1=0.895" + "l2=3.37 f=-0.218 shape=(1, 9000, 1)
logits [[-0.6429388  -1.0633404   0.86509866 -0.02988194]]
Iteration 600 of 1000: loss=3.29 " + "l1=0.237" + "l2=3.05 f=-0.223 shape=(1, 9000, 1)
logits [[-0.9295916  -0.98097646  0.62760967  0.3909664 ]]
Iteration 700 of 1000: loss=2.6 " + "l1=0" + "l2=2.6 f=-0.234 shape=(1, 9000, 1)
logits [[-1.0646057  -1.0226184   0.5743969   0.57876563]]
Iteration 800 of 1000: loss=2.23 " + "l1=0" + "l2=2.23 f=-0.244 shape=(1, 9000, 1)
logits [[-1.0924338  -1.102578    0.60453045  0.6157586 ]]
Iteration 900 of 1000: loss=2 " + "l1=0.0167" + "l2=1.98 f=-0.25 shape=(1, 9000, 1)
logits [[-1.1078446  -1.1435624   0.6337361   0.61701787]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.82 " + "l1=7.82" + "l2=0 f=-0.662 shape=(1, 9000, 1)
logits [[ 5.246396  -2.4794884  3.564002  -8.980241 ]]
Iteration 100 of 1000: loss=5.47 " + "l1=4.4" + "l2=1.07 f=-0.496 shape=(1, 9000, 1)
logits [[ 2.6250992 -1.860753   2.6273887 -5.3774867]]
Iteration 200 of 1000: loss=4.85 " + "l1=3.53" + "l2=1.33 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.0249248 -1.6859884  2.2320073 -4.179658 ]]
Iteration 300 of 1000: loss=4.35 " + "l1=2.88" + "l2=1.48 f=-0.329 shape=(1, 9000, 1)
logits [[ 1.5459778 -1.6035596  1.9869015 -3.246445 ]]
Iteration 400 of 1000: loss=3.94 " + "l1=2.38" + "l2=1.56 f=-0.31 shape=(1, 9000, 1)
logits [[ 1.0477737 -1.6223373  1.8337561 -2.4979322]]
Iteration 500 of 1000: loss=3.55 " + "l1=1.92" + "l2=1.63 f=-0.272 shape=(1, 9000, 1)
logits [[ 0.6640004 -1.5919726  1.6642486 -1.8259768]]
Iteration 600 of 1000: loss=3.24 " + "l1=1.55" + "l2=1.69 f=-0.245 shape=(1, 9000, 1)
logits [[ 0.4029419 -1.5742921  1.5036519 -1.3137795]]
Iteration 700 of 1000: loss=2.98 " + "l1=1.28" + "l2=1.7 f=-0.245 shape=(1, 9000, 1)
logits [[ 0.17527619 -1.5277524   1.3491471  -0.9747862 ]]
Iteration 800 of 1000: loss=2.53 " + "l1=0.765" + "l2=1.76 f=-0.248 shape=(1, 9000, 1)
logits [[-0.34210068 -1.4528418   1.0956436  -0.29437616]]
Iteration 900 of 1000: loss=1.98 " + "l1=0.309" + "l2=1.67 f=-0.253 shape=(1, 9000, 1)
logits [[-0.7875834  -1.3185012   0.82816905  0.26698223]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=11 " + "l1=11" + "l2=0 f=-0.662 shape=(1, 9000, 1)
logits [[ 5.246396  -2.4794884  3.564002  -8.980241 ]]
Iteration 100 of 1000: loss=7.03 " + "l1=5.27" + "l2=1.76 f=-0.415 shape=(1, 9000, 1)
logits [[ 2.1606324 -1.7098432  2.3435984 -4.456368 ]]
Iteration 200 of 1000: loss=5.83 " + "l1=3.61" + "l2=2.21 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.1924406 -1.6023705  1.9119805 -2.75021  ]]
Iteration 300 of 1000: loss=5.14 " + "l1=2.72" + "l2=2.42 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.6151489 -1.523312   1.6448549 -1.8594972]]
Iteration 400 of 1000: loss=4.6 " + "l1=2.15" + "l2=2.45 f=-0.233 shape=(1, 9000, 1)
logits [[ 0.29171857 -1.4844846   1.5195318  -1.2578338 ]]
Iteration 500 of 1000: loss=4.11 " + "l1=1.67" + "l2=2.45 f=-0.202 shape=(1, 9000, 1)
logits [[ 0.02883817 -1.4684559   1.3909285  -0.75819653]]
Iteration 600 of 1000: loss=3.58 " + "l1=1.13" + "l2=2.45 f=-0.183 shape=(1, 9000, 1)
logits [[-0.23551436 -1.4249351   1.1947986  -0.26797795]]
Iteration 700 of 1000: loss=2.62 " + "l1=0.209" + "l2=2.41 f=-0.202 shape=(1, 9000, 1)
logits [[-0.80560184 -1.2204866   0.7433199   0.47385734]]
Iteration 800 of 1000: loss=2.13 " + "l1=0.0247" + "l2=2.11 f=-0.211 shape=(1, 9000, 1)
logits [[-0.9835235  -1.2352047   0.7040309   0.67219836]]
Iteration 900 of 1000: loss=1.82 " + "l1=0.0178" + "l2=1.8 f=-0.221 shape=(1, 9000, 1)
logits [[-1.0287794  -1.2028084   0.68431926  0.6613248 ]]
--- 273.5203597545624 seconds ---
Adv result:3
Loading record A05874
(1, 12606)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0101 " + "l1=0.0101" + "l2=0 f=-0.776 shape=(1, 9000, 1)
logits [[ 1.531814   0.5193898  1.317747  -6.4720554]]
Iteration 100 of 1000: loss=0.00899 " + "l1=0.00842" + "l2=0.000569 f=-0.783 shape=(1, 9000, 1)
logits [[ 1.4291067  0.5871507  1.3021834 -6.45182  ]]
Iteration 200 of 1000: loss=0.00864 " + "l1=0.00795" + "l2=0.000687 f=-0.784 shape=(1, 9000, 1)
logits [[ 1.4026694  0.6074559  1.2968265 -6.4445972]]
Iteration 300 of 1000: loss=0.00834 " + "l1=0.00745" + "l2=0.0009 f=-0.786 shape=(1, 9000, 1)
logits [[ 1.3733149  0.6287983  1.2912846 -6.436656 ]]
Iteration 400 of 1000: loss=0.0081 " + "l1=0.00695" + "l2=0.00115 f=-0.787 shape=(1, 9000, 1)
logits [[ 1.3446374   0.64962846  1.2859367  -6.429732  ]]
Iteration 500 of 1000: loss=0.0079 " + "l1=0.00652" + "l2=0.00139 f=-0.789 shape=(1, 9000, 1)
logits [[ 1.3194311   0.66779053  1.281538   -6.4239607 ]]
Iteration 600 of 1000: loss=0.0078 " + "l1=0.00609" + "l2=0.00172 f=-0.791 shape=(1, 9000, 1)
logits [[ 1.2951607  0.6865941  1.27662   -6.420899 ]]
Iteration 700 of 1000: loss=0.00759 " + "l1=0.0057" + "l2=0.00189 f=-0.792 shape=(1, 9000, 1)
logits [[ 1.2735585  0.7033951  1.2724766 -6.4189963]]
Iteration 800 of 1000: loss=0.00753 " + "l1=0.00558" + "l2=0.00194 f=-0.793 shape=(1, 9000, 1)
logits [[ 1.2693566   0.71086067  1.269164   -6.420587  ]]
Iteration 900 of 1000: loss=0.0076 " + "l1=0.0055" + "l2=0.00209 f=-0.793 shape=(1, 9000, 1)
logits [[ 1.2665946  0.7166379  1.2668818 -6.4226623]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.101 " + "l1=0.101" + "l2=0 f=-0.776 shape=(1, 9000, 1)
logits [[ 1.531814   0.5193898  1.317747  -6.4720554]]
Iteration 100 of 1000: loss=0.0436 " + "l1=0.0292" + "l2=0.0144 f=-0.809 shape=(1, 9000, 1)
logits [[ 1.1076517   0.89151776  1.1834584  -6.41748   ]]
Iteration 200 of 1000: loss=0.0295 " + "l1=0.00832" + "l2=0.0212 f=-0.822 shape=(1, 9000, 1)
logits [[ 0.93044555  1.0366435   1.1198841  -6.3732905 ]]
Iteration 300 of 1000: loss=0.0222 " + "l1=0.00014" + "l2=0.0221 f=-0.825 shape=(1, 9000, 1)
logits [[ 0.85436535  1.0903013   1.0917041  -6.3379183 ]]
Iteration 400 of 1000: loss=0.02 " + "l1=0.000134" + "l2=0.0199 f=-0.823 shape=(1, 9000, 1)
logits [[ 0.85376525  1.0880853   1.0894244  -6.32236   ]]
Iteration 500 of 1000: loss=0.0187 " + "l1=7.98e-05" + "l2=0.0186 f=-0.822 shape=(1, 9000, 1)
logits [[ 0.8506776  1.0891463  1.0899442 -6.31663  ]]
Iteration 600 of 1000: loss=0.0178 " + "l1=1.73e-05" + "l2=0.0178 f=-0.822 shape=(1, 9000, 1)
logits [[ 0.8458659  1.0913566  1.0915301 -6.3157473]]
Iteration 700 of 1000: loss=0.0171 " + "l1=7.34e-05" + "l2=0.017 f=-0.822 shape=(1, 9000, 1)
logits [[ 0.8428984  1.0928355  1.0935696 -6.3172426]]
Iteration 800 of 1000: loss=0.0163 " + "l1=0" + "l2=0.0163 f=-0.823 shape=(1, 9000, 1)
logits [[ 0.83939177  1.0944394   1.0943071  -6.319822  ]]
Iteration 900 of 1000: loss=0.0158 " + "l1=0" + "l2=0.0158 f=-0.824 shape=(1, 9000, 1)
logits [[ 0.83490527  1.0977706   1.094986   -6.3224363 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0557 " + "l1=0.0557" + "l2=0 f=-0.776 shape=(1, 9000, 1)
logits [[ 1.531814   0.5193898  1.317747  -6.4720554]]
Iteration 100 of 1000: loss=0.0325 " + "l1=0.0269" + "l2=0.00553 f=-0.798 shape=(1, 9000, 1)
logits [[ 1.2410935  0.753236   1.2431085 -6.4282913]]
Iteration 200 of 1000: loss=0.027 " + "l1=0.0197" + "l2=0.00732 f=-0.802 shape=(1, 9000, 1)
logits [[ 1.1688148   0.83986485  1.1971377  -6.4140296 ]]
Iteration 300 of 1000: loss=0.0239 " + "l1=0.0146" + "l2=0.00922 f=-0.806 shape=(1, 9000, 1)
logits [[ 1.0983887   0.90225303  1.1684874  -6.3936825 ]]
Iteration 400 of 1000: loss=0.0218 " + "l1=0.0107" + "l2=0.0111 f=-0.809 shape=(1, 9000, 1)
logits [[ 1.0398669  0.951831   1.146512  -6.376087 ]]
Iteration 500 of 1000: loss=0.0203 " + "l1=0.00784" + "l2=0.0125 f=-0.812 shape=(1, 9000, 1)
logits [[ 0.9930332  0.9875709  1.1301455 -6.3598857]]
Iteration 600 of 1000: loss=0.0193 " + "l1=0.0057" + "l2=0.0136 f=-0.815 shape=(1, 9000, 1)
logits [[ 0.9565599  1.0146881  1.1183419 -6.3483706]]
Iteration 700 of 1000: loss=0.0185 " + "l1=0.00415" + "l2=0.0144 f=-0.816 shape=(1, 9000, 1)
logits [[ 0.9293685  1.0352453  1.1106495 -6.3410363]]
Iteration 800 of 1000: loss=0.0177 " + "l1=0.00279" + "l2=0.0149 f=-0.818 shape=(1, 9000, 1)
logits [[ 0.90179384  1.054509    1.105303   -6.3355985 ]]
Iteration 900 of 1000: loss=0.0169 " + "l1=0.00147" + "l2=0.0155 f=-0.821 shape=(1, 9000, 1)
logits [[ 0.8739888  1.0733168  1.1000075 -6.33139  ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0785 " + "l1=0.0785" + "l2=0 f=-0.776 shape=(1, 9000, 1)
logits [[ 1.531814   0.5193898  1.317747  -6.4720554]]
Iteration 100 of 1000: loss=0.0395 " + "l1=0.0302" + "l2=0.00931 f=-0.802 shape=(1, 9000, 1)
logits [[ 1.1879915  0.8199212  1.2092357 -6.426402 ]]
Iteration 200 of 1000: loss=0.0305 " + "l1=0.0175" + "l2=0.013 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.0609262  0.9341485  1.15942   -6.397849 ]]
Iteration 300 of 1000: loss=0.0246 " + "l1=0.00775" + "l2=0.0169 f=-0.818 shape=(1, 9000, 1)
logits [[ 0.95088655  1.0202222   1.1201805  -6.3622932 ]]
Iteration 400 of 1000: loss=0.0211 " + "l1=0.00166" + "l2=0.0195 f=-0.823 shape=(1, 9000, 1)
logits [[ 0.87567675  1.0736364   1.0950981  -6.336159  ]]
Iteration 500 of 1000: loss=0.0192 " + "l1=0.000123" + "l2=0.0191 f=-0.822 shape=(1, 9000, 1)
logits [[ 0.85350823  1.0879226   1.089515   -6.320838  ]]
Iteration 600 of 1000: loss=0.018 " + "l1=0" + "l2=0.018 f=-0.822 shape=(1, 9000, 1)
logits [[ 0.8471155  1.0909252  1.0902737 -6.316556 ]]
Iteration 700 of 1000: loss=0.0172 " + "l1=9.95e-05" + "l2=0.0171 f=-0.822 shape=(1, 9000, 1)
logits [[ 0.8454108  1.0915351  1.0928196 -6.3175745]]
Iteration 800 of 1000: loss=0.0166 " + "l1=0.000207" + "l2=0.0164 f=-0.822 shape=(1, 9000, 1)
logits [[ 0.8436312  1.0915335  1.0942037 -6.3192024]]
Iteration 900 of 1000: loss=0.016 " + "l1=3.43e-05" + "l2=0.0159 f=-0.823 shape=(1, 9000, 1)
logits [[ 0.8402445  1.0942836  1.0947261 -6.3226013]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0671 " + "l1=0.0671" + "l2=0 f=-0.776 shape=(1, 9000, 1)
logits [[ 1.531814   0.5193898  1.317747  -6.4720554]]
Iteration 100 of 1000: loss=0.0365 " + "l1=0.0296" + "l2=0.00698 f=-0.799 shape=(1, 9000, 1)
logits [[ 1.2234019   0.78071886  1.226843   -6.4280562 ]]
Iteration 200 of 1000: loss=0.0293 " + "l1=0.0193" + "l2=0.00996 f=-0.806 shape=(1, 9000, 1)
logits [[ 1.1165968   0.88655955  1.1779654  -6.4064364 ]]
Iteration 300 of 1000: loss=0.0248 " + "l1=0.0121" + "l2=0.0128 f=-0.812 shape=(1, 9000, 1)
logits [[ 1.0274698  0.9622187  1.1444348 -6.3804455]]
Iteration 400 of 1000: loss=0.0219 " + "l1=0.00684" + "l2=0.0151 f=-0.816 shape=(1, 9000, 1)
logits [[ 0.9567591  1.0158459  1.1190282 -6.355231 ]]
Iteration 500 of 1000: loss=0.0201 " + "l1=0.00329" + "l2=0.0168 f=-0.819 shape=(1, 9000, 1)
logits [[ 0.90573275  1.0531973   1.1028728  -6.33882   ]]
Iteration 600 of 1000: loss=0.0187 " + "l1=0.000603" + "l2=0.0181 f=-0.822 shape=(1, 9000, 1)
logits [[ 0.8622514  1.083624   1.0927281 -6.3256984]]
Iteration 700 of 1000: loss=0.0176 " + "l1=0.000125" + "l2=0.0175 f=-0.822 shape=(1, 9000, 1)
logits [[ 0.85094965  1.0903848   1.092267   -6.3207874 ]]
Iteration 800 of 1000: loss=0.017 " + "l1=8.58e-05" + "l2=0.0169 f=-0.822 shape=(1, 9000, 1)
logits [[ 0.8467601  1.0925527  1.0938482 -6.3213954]]
Iteration 900 of 1000: loss=0.0162 " + "l1=1.37e-05" + "l2=0.0162 f=-0.823 shape=(1, 9000, 1)
logits [[ 0.84345573  1.0941155   1.0943228  -6.323744  ]]
--- 298.1440029144287 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00214 " + "l1=0.00214" + "l2=0 f=-0.776 shape=(1, 9000, 1)
logits [[ 1.531814   0.5193898  1.317747  -6.4720554]]
Iteration 100 of 1000: loss=0.00172 " + "l1=0.00144" + "l2=0.000283 f=-0.781 shape=(1, 9000, 1)
logits [[ 1.4624729  0.5518526  1.3187165 -6.4560304]]
Iteration 200 of 1000: loss=0.00161 " + "l1=0.00134" + "l2=0.000276 f=-0.781 shape=(1, 9000, 1)
logits [[ 1.4522169  0.5575864  1.31858   -6.452989 ]]
Iteration 300 of 1000: loss=0.00155 " + "l1=0.0012" + "l2=0.000347 f=-0.782 shape=(1, 9000, 1)
logits [[ 1.4386535   0.56429845  1.3186738  -6.449256  ]]
Iteration 400 of 1000: loss=0.00149 " + "l1=0.00106" + "l2=0.000422 f=-0.783 shape=(1, 9000, 1)
logits [[ 1.4251993   0.57080305  1.3188437  -6.445738  ]]
Iteration 500 of 1000: loss=0.00147 " + "l1=0.000936" + "l2=0.000539 f=-0.784 shape=(1, 9000, 1)
logits [[ 1.4127102  0.5768898  1.3190993 -6.442735 ]]
Iteration 600 of 1000: loss=0.0014 " + "l1=0.000819" + "l2=0.000584 f=-0.784 shape=(1, 9000, 1)
logits [[ 1.401343    0.58240587  1.3194671  -6.440362  ]]
Iteration 700 of 1000: loss=0.0014 " + "l1=0.000712" + "l2=0.00069 f=-0.785 shape=(1, 9000, 1)
logits [[ 1.391116   0.5873649  1.319934  -6.4386506]]
Iteration 800 of 1000: loss=0.00148 " + "l1=0.000615" + "l2=0.000867 f=-0.786 shape=(1, 9000, 1)
logits [[ 1.3820082   0.59185386  1.320485   -6.43755   ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0214 " + "l1=0.0214" + "l2=0 f=-0.776 shape=(1, 9000, 1)
logits [[ 1.531814   0.5193898  1.317747  -6.4720554]]
Iteration 100 of 1000: loss=0.00261 " + "l1=6.11e-05" + "l2=0.00255 f=-0.79 shape=(1, 9000, 1)
logits [[ 1.3228397   0.61805755  1.3222284  -6.424881  ]]
Iteration 200 of 1000: loss=0.00181 " + "l1=1.91e-05" + "l2=0.00179 f=-0.79 shape=(1, 9000, 1)
logits [[ 1.3213075   0.62138754  1.3211169  -6.422866  ]]
Iteration 300 of 1000: loss=0.00157 " + "l1=0" + "l2=0.00157 f=-0.789 shape=(1, 9000, 1)
logits [[ 1.3187252   0.62323767  1.3205326  -6.4202213 ]]
Iteration 400 of 1000: loss=0.0014 " + "l1=0" + "l2=0.0014 f=-0.789 shape=(1, 9000, 1)
logits [[ 1.3197726   0.62321126  1.3204101  -6.4203506 ]]
Iteration 500 of 1000: loss=0.00136 " + "l1=0" + "l2=0.00136 f=-0.789 shape=(1, 9000, 1)
logits [[ 1.3197948   0.62357014  1.3208185  -6.4216285 ]]
Iteration 600 of 1000: loss=0.00143 " + "l1=0" + "l2=0.00143 f=-0.79 shape=(1, 9000, 1)
logits [[ 1.3174707  0.624836   1.3217045 -6.422839 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0118 " + "l1=0.0118" + "l2=0 f=-0.776 shape=(1, 9000, 1)
logits [[ 1.531814   0.5193898  1.317747  -6.4720554]]
Iteration 100 of 1000: loss=0.00266 " + "l1=0" + "l2=0.00266 f=-0.79 shape=(1, 9000, 1)
logits [[ 1.3226621   0.61774045  1.3226762  -6.423755  ]]
Iteration 200 of 1000: loss=0.00184 " + "l1=0" + "l2=0.00184 f=-0.79 shape=(1, 9000, 1)
logits [[ 1.3213493  0.6210801  1.321431  -6.422626 ]]
Iteration 300 of 1000: loss=0.00157 " + "l1=4.56e-05" + "l2=0.00152 f=-0.789 shape=(1, 9000, 1)
logits [[ 1.3214111  0.6216636  1.3205819 -6.4207077]]
Iteration 400 of 1000: loss=0.00145 " + "l1=0" + "l2=0.00145 f=-0.789 shape=(1, 9000, 1)
logits [[ 1.3178992  0.6235415  1.3204752 -6.4194717]]
Iteration 500 of 1000: loss=0.0013 " + "l1=0" + "l2=0.0013 f=-0.789 shape=(1, 9000, 1)
logits [[ 1.319439   0.6232355  1.3207499 -6.420932 ]]
Iteration 600 of 1000: loss=0.00132 " + "l1=0" + "l2=0.00132 f=-0.79 shape=(1, 9000, 1)
logits [[ 1.3204324  0.6229935  1.32148   -6.4230123]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00696 " + "l1=0.00696" + "l2=0 f=-0.776 shape=(1, 9000, 1)
logits [[ 1.531814   0.5193898  1.317747  -6.4720554]]
Iteration 100 of 1000: loss=0.00322 " + "l1=0.00152" + "l2=0.0017 f=-0.787 shape=(1, 9000, 1)
logits [[ 1.3682213   0.59541625  1.3214208  -6.4331408 ]]
Iteration 200 of 1000: loss=0.00198 " + "l1=0" + "l2=0.00198 f=-0.79 shape=(1, 9000, 1)
logits [[ 1.3218383   0.62015134  1.3220161  -6.4222817 ]]
Iteration 300 of 1000: loss=0.00159 " + "l1=0" + "l2=0.00159 f=-0.789 shape=(1, 9000, 1)
logits [[ 1.3208499  0.6218205  1.3209081 -6.4203725]]
Iteration 400 of 1000: loss=0.00146 " + "l1=0" + "l2=0.00146 f=-0.789 shape=(1, 9000, 1)
logits [[ 1.3198614  0.6226502  1.3205044 -6.419532 ]]
Iteration 500 of 1000: loss=0.00132 " + "l1=1.17e-05" + "l2=0.00131 f=-0.789 shape=(1, 9000, 1)
logits [[ 1.3209974   0.62245005  1.320636   -6.420542  ]]
Iteration 600 of 1000: loss=0.0013 " + "l1=0" + "l2=0.0013 f=-0.789 shape=(1, 9000, 1)
logits [[ 1.3211195  0.6226089  1.3212386 -6.4222126]]
Iteration 700 of 1000: loss=0.00134 " + "l1=0" + "l2=0.00134 f=-0.79 shape=(1, 9000, 1)
logits [[ 1.3218265   0.62239516  1.3221326  -6.4243765 ]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00455 " + "l1=0.00455" + "l2=0 f=-0.776 shape=(1, 9000, 1)
logits [[ 1.531814   0.5193898  1.317747  -6.4720554]]
Iteration 100 of 1000: loss=0.00282 " + "l1=0.00195" + "l2=0.000873 f=-0.784 shape=(1, 9000, 1)
logits [[ 1.4120725   0.57501006  1.3203408  -6.4441795 ]]
Iteration 200 of 1000: loss=0.0023 " + "l1=0.00121" + "l2=0.00109 f=-0.786 shape=(1, 9000, 1)
logits [[ 1.3775709   0.59272027  1.3205813  -6.4353952 ]]
Iteration 300 of 1000: loss=0.00185 " + "l1=0.000439" + "l2=0.00141 f=-0.788 shape=(1, 9000, 1)
logits [[ 1.3416662  0.6104856  1.3210242 -6.425577 ]]
Iteration 400 of 1000: loss=0.00148 " + "l1=9.67e-06" + "l2=0.00147 f=-0.789 shape=(1, 9000, 1)
logits [[ 1.321475   0.6210624  1.3210199 -6.420509 ]]
Iteration 500 of 1000: loss=0.00135 " + "l1=1.86e-05" + "l2=0.00133 f=-0.789 shape=(1, 9000, 1)
logits [[ 1.3215618   0.62146276  1.320687   -6.4205594 ]]
Iteration 600 of 1000: loss=0.00127 " + "l1=4.18e-06" + "l2=0.00126 f=-0.789 shape=(1, 9000, 1)
logits [[ 1.3212023  0.6219711  1.3210056 -6.4217606]]
Iteration 700 of 1000: loss=0.00139 " + "l1=0" + "l2=0.00139 f=-0.79 shape=(1, 9000, 1)
logits [[ 1.3213308   0.62210375  1.3217268  -6.423668  ]]
--- 209.152667760849 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.08 " + "l1=0.08" + "l2=0 f=-0.776 shape=(1, 9000, 1)
logits [[ 1.531814   0.5193898  1.317747  -6.4720554]]
Iteration 100 of 1000: loss=0.079 " + "l1=0.0785" + "l2=0.000517 f=-0.776 shape=(1, 9000, 1)
logits [[ 1.4440622  0.5557614  1.3034815 -6.408128 ]]
Iteration 200 of 1000: loss=0.0787 " + "l1=0.0782" + "l2=0.000592 f=-0.776 shape=(1, 9000, 1)
logits [[ 1.4216263  0.5678912  1.2991363 -6.3940215]]
Iteration 300 of 1000: loss=0.0785 " + "l1=0.0777" + "l2=0.000773 f=-0.777 shape=(1, 9000, 1)
logits [[ 1.3970302  0.5797951  1.2941383 -6.37734  ]]
Iteration 400 of 1000: loss=0.0783 " + "l1=0.0773" + "l2=0.000978 f=-0.777 shape=(1, 9000, 1)
logits [[ 1.3737376   0.59040815  1.2894728  -6.3609624 ]]
Iteration 500 of 1000: loss=0.0782 " + "l1=0.077" + "l2=0.00121 f=-0.777 shape=(1, 9000, 1)
logits [[ 1.3529925  0.5994094  1.2853842 -6.3461657]]
Iteration 600 of 1000: loss=0.0781 " + "l1=0.0767" + "l2=0.00148 f=-0.777 shape=(1, 9000, 1)
logits [[ 1.3341527   0.60683376  1.2815566  -6.3323674 ]]
Iteration 700 of 1000: loss=0.078 " + "l1=0.0764" + "l2=0.00163 f=-0.778 shape=(1, 9000, 1)
logits [[ 1.3182689   0.61261153  1.2782575  -6.320393  ]]
Iteration 800 of 1000: loss=0.078 " + "l1=0.0761" + "l2=0.0019 f=-0.778 shape=(1, 9000, 1)
logits [[ 1.3046974   0.61741155  1.2753036  -6.310037  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.8 " + "l1=0.8" + "l2=0 f=-0.776 shape=(1, 9000, 1)
logits [[ 1.531814   0.5193898  1.317747  -6.4720554]]
Iteration 100 of 1000: loss=0.744 " + "l1=0.729" + "l2=0.015 f=-0.76 shape=(1, 9000, 1)
logits [[ 1.2046382  0.6281462  1.2100322 -6.0830183]]
Iteration 200 of 1000: loss=0.725 " + "l1=0.703" + "l2=0.023 f=-0.749 shape=(1, 9000, 1)
logits [[ 1.0982393  0.6562543  1.13693   -5.888208 ]]
Iteration 300 of 1000: loss=0.71 " + "l1=0.678" + "l2=0.0321 f=-0.741 shape=(1, 9000, 1)
logits [[ 0.98736143  0.6843986   1.070565   -5.706887  ]]
Iteration 400 of 1000: loss=0.695 " + "l1=0.653" + "l2=0.0421 f=-0.737 shape=(1, 9000, 1)
logits [[ 0.87834257  0.69957733  1.0015148  -5.526902  ]]
Iteration 500 of 1000: loss=0.68 " + "l1=0.628" + "l2=0.0518 f=-0.735 shape=(1, 9000, 1)
logits [[ 0.7676241   0.70811504  0.93244183 -5.3493533 ]]
Iteration 600 of 1000: loss=0.663 " + "l1=0.602" + "l2=0.0612 f=-0.731 shape=(1, 9000, 1)
logits [[ 0.6608075   0.70572525  0.8645245  -5.154039  ]]
Iteration 700 of 1000: loss=0.645 " + "l1=0.575" + "l2=0.0694 f=-0.727 shape=(1, 9000, 1)
logits [[ 0.5494535   0.68433875  0.8058451  -4.946118  ]]
Iteration 800 of 1000: loss=0.621 " + "l1=0.541" + "l2=0.0801 f=-0.725 shape=(1, 9000, 1)
logits [[ 0.4172934  0.6321972  0.7288011 -4.6786513]]
Iteration 900 of 1000: loss=0.593 " + "l1=0.501" + "l2=0.0925 f=-0.716 shape=(1, 9000, 1)
logits [[ 0.2726616   0.5772549   0.64708036 -4.3605003 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8 " + "l1=8" + "l2=0 f=-0.776 shape=(1, 9000, 1)
logits [[ 1.531814   0.5193898  1.317747  -6.4720554]]
Iteration 100 of 1000: loss=5.03 " + "l1=3.98" + "l2=1.04 f=-0.6 shape=(1, 9000, 1)
logits [[-0.27708957  0.622959    0.61597604 -3.3612025 ]]
Iteration 200 of 1000: loss=3.38 " + "l1=1.85" + "l2=1.53 f=-0.474 shape=(1, 9000, 1)
logits [[-0.67852163  0.21012409  0.21332872 -1.6405971 ]]
Iteration 300 of 1000: loss=2.03 " + "l1=0.335" + "l2=1.69 f=-0.412 shape=(1, 9000, 1)
logits [[-0.97039866 -0.11244338 -0.11651196 -0.44739002]]
Iteration 400 of 1000: loss=1.42 " + "l1=0.00171" + "l2=1.42 f=-0.405 shape=(1, 9000, 1)
logits [[-1.0608286  -0.183621   -0.18982293 -0.18533316]]
Iteration 500 of 1000: loss=1.17 " + "l1=0" + "l2=1.17 f=-0.414 shape=(1, 9000, 1)
logits [[-1.0626569  -0.19589491 -0.20175947 -0.19370645]]
Iteration 600 of 1000: loss=1.03 " + "l1=0.00211" + "l2=1.02 f=-0.419 shape=(1, 9000, 1)
logits [[-1.0488352  -0.20867871 -0.20848563 -0.2105914 ]]
Iteration 700 of 1000: loss=0.93 " + "l1=0.00594" + "l2=0.924 f=-0.426 shape=(1, 9000, 1)
logits [[-1.0197592  -0.22680785 -0.22529142 -0.23123321]]
Iteration 800 of 1000: loss=0.851 " + "l1=0.000339" + "l2=0.851 f=-0.429 shape=(1, 9000, 1)
logits [[-0.99500084 -0.24129657 -0.24034217 -0.24068141]]
Iteration 900 of 1000: loss=0.796 " + "l1=0.00551" + "l2=0.791 f=-0.431 shape=(1, 9000, 1)
logits [[-0.97746485 -0.24400567 -0.25405836 -0.24951926]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.4 " + "l1=4.4" + "l2=0 f=-0.776 shape=(1, 9000, 1)
logits [[ 1.531814   0.5193898  1.317747  -6.4720554]]
Iteration 100 of 1000: loss=3.29 " + "l1=2.89" + "l2=0.399 f=-0.678 shape=(1, 9000, 1)
logits [[ 0.20955174  0.7707101   0.77907795 -4.4698896 ]]
Iteration 200 of 1000: loss=2.65 " + "l1=2.07" + "l2=0.583 f=-0.601 shape=(1, 9000, 1)
logits [[-0.28281608  0.54264975  0.5484883  -3.2110884 ]]
Iteration 300 of 1000: loss=1.96 " + "l1=1.21" + "l2=0.745 f=-0.522 shape=(1, 9000, 1)
logits [[-0.5635806   0.22760034  0.22695577 -1.9779102 ]]
Iteration 400 of 1000: loss=1.48 " + "l1=0.661" + "l2=0.815 f=-0.463 shape=(1, 9000, 1)
logits [[-6.6681933e-01  8.2959253e-03 -2.6704883e-04 -1.1934561e+00]]
Iteration 500 of 1000: loss=1.19 " + "l1=0.333" + "l2=0.857 f=-0.439 shape=(1, 9000, 1)
logits [[-0.7991768  -0.11647556 -0.11820512 -0.7223813 ]]
Iteration 600 of 1000: loss=1.01 " + "l1=0.148" + "l2=0.864 f=-0.43 shape=(1, 9000, 1)
logits [[-0.9126749  -0.17770144 -0.18038957 -0.44765487]]
Iteration 700 of 1000: loss=0.881 " + "l1=0.0026" + "l2=0.878 f=-0.43 shape=(1, 9000, 1)
logits [[-1.0082973  -0.23506589 -0.23799321 -0.23979339]]
Iteration 800 of 1000: loss=0.789 " + "l1=0.000782" + "l2=0.789 f=-0.43 shape=(1, 9000, 1)
logits [[-0.9809878  -0.24774377 -0.2446011  -0.24602264]]
Iteration 900 of 1000: loss=0.728 " + "l1=0" + "l2=0.728 f=-0.427 shape=(1, 9000, 1)
logits [[-0.91819614 -0.26150054 -0.26958814 -0.25831822]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.6 " + "l1=2.6" + "l2=0 f=-0.776 shape=(1, 9000, 1)
logits [[ 1.531814   0.5193898  1.317747  -6.4720554]]
Iteration 100 of 1000: loss=2.17 " + "l1=2.02" + "l2=0.149 f=-0.72 shape=(1, 9000, 1)
logits [[ 0.6561888  0.7328543  0.9729645 -5.2413354]]
Iteration 200 of 1000: loss=1.92 " + "l1=1.69" + "l2=0.239 f=-0.685 shape=(1, 9000, 1)
logits [[ 0.2531266  0.7248985  0.7340848 -4.450887 ]]
Iteration 300 of 1000: loss=1.68 " + "l1=1.36" + "l2=0.327 f=-0.64 shape=(1, 9000, 1)
logits [[-0.09908076  0.5691735   0.5694669  -3.600932  ]]
Iteration 400 of 1000: loss=1.4 " + "l1=1.01" + "l2=0.388 f=-0.583 shape=(1, 9000, 1)
logits [[-0.40247858  0.38790792  0.39226294 -2.7089012 ]]
Iteration 500 of 1000: loss=1.2 " + "l1=0.787" + "l2=0.416 f=-0.547 shape=(1, 9000, 1)
logits [[-0.57829714  0.26870367  0.27049053 -2.150007  ]]
Iteration 600 of 1000: loss=1.07 " + "l1=0.636" + "l2=0.433 f=-0.514 shape=(1, 9000, 1)
logits [[-0.5341799   0.14165395  0.14613046 -1.809519  ]]
Iteration 700 of 1000: loss=0.956 " + "l1=0.486" + "l2=0.47 f=-0.486 shape=(1, 9000, 1)
logits [[-0.5501188   0.03169212  0.03543244 -1.460925  ]]
Iteration 800 of 1000: loss=0.861 " + "l1=0.368" + "l2=0.494 f=-0.469 shape=(1, 9000, 1)
logits [[-0.62783223 -0.04437914 -0.03595428 -1.1669331 ]]
Iteration 900 of 1000: loss=0.781 " + "l1=0.275" + "l2=0.506 f=-0.453 shape=(1, 9000, 1)
logits [[-0.69221205 -0.0971045  -0.08782349 -0.9347651 ]]
--- 292.6632192134857 seconds ---
Adv result:3
Loading record A05909
(1, 14052)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.052 " + "l1=0.052" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.6271222 -2.5703812  2.6258743 -5.8055887]]
Iteration 100 of 1000: loss=0.0518 " + "l1=0.0516" + "l2=0.00019 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.6021986 -2.5465064  2.6127553 -5.794049 ]]
Iteration 200 of 1000: loss=0.0517 " + "l1=0.0515" + "l2=0.000157 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.605543  -2.544859   2.610063  -5.7959766]]
Iteration 300 of 1000: loss=0.0517 " + "l1=0.0515" + "l2=0.000187 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.605152  -2.5413585  2.6071148 -5.796295 ]]
Iteration 400 of 1000: loss=0.0516 " + "l1=0.0514" + "l2=0.000222 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.603545  -2.5374575  2.604059  -5.795822 ]]
Iteration 500 of 1000: loss=0.0516 " + "l1=0.0513" + "l2=0.000268 f=-0.782 shape=(1, 9000, 1)
logits [[ 2.6006603 -2.5332942  2.6011193 -5.794521 ]]
Iteration 600 of 1000: loss=0.0516 " + "l1=0.0513" + "l2=0.000333 f=-0.782 shape=(1, 9000, 1)
logits [[ 2.5977502 -2.529131   2.5980365 -5.79283  ]]
Iteration 700 of 1000: loss=0.0516 " + "l1=0.0512" + "l2=0.00041 f=-0.782 shape=(1, 9000, 1)
logits [[ 2.594766  -2.5249822  2.5948544 -5.7909627]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.52 " + "l1=0.52" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.6271222 -2.5703812  2.6258743 -5.8055887]]
Iteration 100 of 1000: loss=0.495 " + "l1=0.477" + "l2=0.0182 f=-0.782 shape=(1, 9000, 1)
logits [[ 2.4671059 -2.2992468  2.4681456 -5.764426 ]]
Iteration 200 of 1000: loss=0.486 " + "l1=0.464" + "l2=0.0215 f=-0.78 shape=(1, 9000, 1)
logits [[ 2.4201722 -2.2207618  2.4198248 -5.73884  ]]
Iteration 300 of 1000: loss=0.48 " + "l1=0.457" + "l2=0.023 f=-0.777 shape=(1, 9000, 1)
logits [[ 2.389405 -2.177983  2.3921   -5.711675]]
Iteration 400 of 1000: loss=0.475 " + "l1=0.451" + "l2=0.0239 f=-0.774 shape=(1, 9000, 1)
logits [[ 2.3647184 -2.1440089  2.3692136 -5.686868 ]]
Iteration 500 of 1000: loss=0.47 " + "l1=0.444" + "l2=0.0261 f=-0.769 shape=(1, 9000, 1)
logits [[ 2.339083  -2.0989559  2.3417535 -5.658812 ]]
Iteration 600 of 1000: loss=0.464 " + "l1=0.434" + "l2=0.0301 f=-0.761 shape=(1, 9000, 1)
logits [[ 2.3013525 -2.0380657  2.3031995 -5.612391 ]]
Iteration 700 of 1000: loss=0.458 " + "l1=0.426" + "l2=0.0328 f=-0.757 shape=(1, 9000, 1)
logits [[ 2.2608793 -1.9871479  2.2692668 -5.5723248]]
Iteration 800 of 1000: loss=0.453 " + "l1=0.418" + "l2=0.0343 f=-0.754 shape=(1, 9000, 1)
logits [[ 2.2285058 -1.9439712  2.2384498 -5.539391 ]]
Iteration 900 of 1000: loss=0.447 " + "l1=0.411" + "l2=0.0355 f=-0.751 shape=(1, 9000, 1)
logits [[ 2.2027576 -1.906909   2.2048016 -5.5050855]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.2 " + "l1=5.2" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.6271222 -2.5703812  2.6258743 -5.8055887]]
Iteration 100 of 1000: loss=3.43 " + "l1=2.67" + "l2=0.763 f=-0.768 shape=(1, 9000, 1)
logits [[ 1.4006861  -0.91740507  1.7483065  -5.3046994 ]]
Iteration 200 of 1000: loss=2.91 " + "l1=1.89" + "l2=1.01 f=-0.778 shape=(1, 9000, 1)
logits [[ 0.91664356 -0.34093046  1.5507182  -5.236785  ]]
Iteration 300 of 1000: loss=2.56 " + "l1=1.35" + "l2=1.21 f=-0.795 shape=(1, 9000, 1)
logits [[ 0.5381233   0.05663779  1.4072335  -5.1808314 ]]
Iteration 400 of 1000: loss=2.33 " + "l1=1.06" + "l2=1.26 f=-0.795 shape=(1, 9000, 1)
logits [[ 0.36900595  0.2731921   1.3381591  -5.160468  ]]
Iteration 500 of 1000: loss=2.08 " + "l1=0.744" + "l2=1.33 f=-0.768 shape=(1, 9000, 1)
logits [[ 0.22232017  0.47156793  1.21569    -4.9835286 ]]
Iteration 600 of 1000: loss=1.81 " + "l1=0.465" + "l2=1.35 f=-0.754 shape=(1, 9000, 1)
logits [[ 0.09236729  0.6238624   1.0886741  -4.820187  ]]
Iteration 700 of 1000: loss=1.59 " + "l1=0.25" + "l2=1.34 f=-0.742 shape=(1, 9000, 1)
logits [[-0.11482994  0.7687033   1.0185385  -4.640421  ]]
Iteration 800 of 1000: loss=1.38 " + "l1=0.0352" + "l2=1.35 f=-0.731 shape=(1, 9000, 1)
logits [[-0.31575587  0.89172494  0.92688555 -4.425625  ]]
Iteration 900 of 1000: loss=1.21 " + "l1=0.00742" + "l2=1.2 f=-0.711 shape=(1, 9000, 1)
logits [[-0.38766715  0.83596015  0.8433816  -4.136197  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.86 " + "l1=2.86" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.6271222 -2.5703812  2.6258743 -5.8055887]]
Iteration 100 of 1000: loss=2.24 " + "l1=1.96" + "l2=0.281 f=-0.763 shape=(1, 9000, 1)
logits [[ 1.9722799 -1.549631   2.0068195 -5.4825115]]
Iteration 200 of 1000: loss=2.02 " + "l1=1.64" + "l2=0.387 f=-0.758 shape=(1, 9000, 1)
logits [[ 1.6370306 -1.1446338  1.8299317 -5.3547773]]
Iteration 300 of 1000: loss=1.9 " + "l1=1.47" + "l2=0.432 f=-0.753 shape=(1, 9000, 1)
logits [[ 1.4939917 -0.9414974  1.7290958 -5.294059 ]]
Iteration 400 of 1000: loss=1.79 " + "l1=1.32" + "l2=0.471 f=-0.753 shape=(1, 9000, 1)
logits [[ 1.3126713  -0.75051993  1.6410209  -5.215758  ]]
Iteration 500 of 1000: loss=1.7 " + "l1=1.2" + "l2=0.492 f=-0.747 shape=(1, 9000, 1)
logits [[ 1.1889187 -0.6158878  1.5729389 -5.1328645]]
Iteration 600 of 1000: loss=1.6 " + "l1=1.07" + "l2=0.532 f=-0.746 shape=(1, 9000, 1)
logits [[ 1.0043623 -0.4541029  1.4950184 -5.0312414]]
Iteration 700 of 1000: loss=1.47 " + "l1=0.929" + "l2=0.539 f=-0.738 shape=(1, 9000, 1)
logits [[ 0.83656204 -0.2937026   1.395853   -4.8907757 ]]
Iteration 800 of 1000: loss=1.37 " + "l1=0.816" + "l2=0.554 f=-0.725 shape=(1, 9000, 1)
logits [[ 0.6938425 -0.1964742  1.2879562 -4.6865926]]
Iteration 900 of 1000: loss=1.24 " + "l1=0.699" + "l2=0.545 f=-0.709 shape=(1, 9000, 1)
logits [[ 0.5613875  -0.10628686  1.1642959  -4.4544916 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.03 " + "l1=4.03" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.6271222 -2.5703812  2.6258743 -5.8055887]]
Iteration 100 of 1000: loss=2.87 " + "l1=2.34" + "l2=0.534 f=-0.764 shape=(1, 9000, 1)
logits [[ 1.6747065 -1.1696279  1.8497157 -5.41118  ]]
Iteration 200 of 1000: loss=2.55 " + "l1=1.93" + "l2=0.618 f=-0.763 shape=(1, 9000, 1)
logits [[ 1.349002   -0.80192876  1.6923072  -5.290512  ]]
Iteration 300 of 1000: loss=2.28 " + "l1=1.53" + "l2=0.758 f=-0.773 shape=(1, 9000, 1)
logits [[ 1.0270686  -0.41180182  1.5582672  -5.2657533 ]]
Iteration 400 of 1000: loss=2.09 " + "l1=1.26" + "l2=0.829 f=-0.783 shape=(1, 9000, 1)
logits [[ 0.77807915 -0.1655316   1.4636327  -5.207848  ]]
Iteration 500 of 1000: loss=1.9 " + "l1=1.06" + "l2=0.84 f=-0.771 shape=(1, 9000, 1)
logits [[ 0.63669515  0.00690194  1.3707914  -5.097766  ]]
Iteration 600 of 1000: loss=1.7 " + "l1=0.825" + "l2=0.879 f=-0.764 shape=(1, 9000, 1)
logits [[ 0.47378984  0.16365369  1.2278655  -4.9223056 ]]
Iteration 700 of 1000: loss=1.51 " + "l1=0.576" + "l2=0.932 f=-0.746 shape=(1, 9000, 1)
logits [[ 0.27582943  0.2915128   1.0344486  -4.5877094 ]]
Iteration 800 of 1000: loss=1.25 " + "l1=0.312" + "l2=0.937 f=-0.707 shape=(1, 9000, 1)
logits [[ 0.08070736  0.4596963   0.8622508  -4.229192  ]]
Iteration 900 of 1000: loss=1.01 " + "l1=0.0777" + "l2=0.935 f=-0.679 shape=(1, 9000, 1)
logits [[-0.20070328  0.6202026   0.72047913 -3.8568325 ]]
--- 288.13253235816956 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=1.25e-05 " + "l1=1.25e-05" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.6271222 -2.5703812  2.6258743 -5.8055887]]
Iteration 100 of 1000: loss=5.85e-05 " + "l1=0" + "l2=5.85e-05 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.6115098 -2.5675952  2.6273677 -5.797228 ]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=6.24e-06 " + "l1=6.24e-06" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.6271222 -2.5703812  2.6258743 -5.8055887]]
Iteration 100 of 1000: loss=5.08e-05 " + "l1=0" + "l2=5.08e-05 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.612653  -2.5677443  2.6271038 -5.7978635]]
const [0.0025]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.12e-06 " + "l1=3.12e-06" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.6271222 -2.5703812  2.6258743 -5.8055887]]
Iteration 100 of 1000: loss=4.36e-05 " + "l1=0" + "l2=4.36e-05 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.613713  -2.5679922  2.6270883 -5.7984257]]
const [0.00125]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.56e-06 " + "l1=1.56e-06" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.6271222 -2.5703812  2.6258743 -5.8055887]]
Iteration 100 of 1000: loss=3.7e-05 " + "l1=0" + "l2=3.7e-05 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.615069  -2.568297   2.6270196 -5.7991548]]
const [0.000625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=7.8e-07 " + "l1=7.8e-07" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.6271222 -2.5703812  2.6258743 -5.8055887]]
Iteration 100 of 1000: loss=2.79e-05 " + "l1=0" + "l2=2.79e-05 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.616386  -2.5685928  2.62693   -5.799798 ]]
--- 38.395831823349 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0843 " + "l1=0.0843" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.6271222 -2.5703812  2.6258743 -5.8055887]]
Iteration 100 of 1000: loss=0.084 " + "l1=0.0838" + "l2=0.000205 f=-0.779 shape=(1, 9000, 1)
logits [[ 2.596396  -2.5611506  2.6154575 -5.767048 ]]
Iteration 200 of 1000: loss=0.0839 " + "l1=0.0837" + "l2=0.000178 f=-0.778 shape=(1, 9000, 1)
logits [[ 2.596466  -2.561618   2.6128247 -5.7609773]]
Iteration 300 of 1000: loss=0.0838 " + "l1=0.0836" + "l2=0.000218 f=-0.778 shape=(1, 9000, 1)
logits [[ 2.5921297 -2.5612395  2.6101918 -5.7511983]]
Iteration 400 of 1000: loss=0.0838 " + "l1=0.0835" + "l2=0.000285 f=-0.777 shape=(1, 9000, 1)
logits [[ 2.5863278 -2.5602047  2.607363  -5.7405815]]
Iteration 500 of 1000: loss=0.0837 " + "l1=0.0833" + "l2=0.000361 f=-0.776 shape=(1, 9000, 1)
logits [[ 2.579922  -2.5589457  2.6045067 -5.7298903]]
Iteration 600 of 1000: loss=0.0837 " + "l1=0.0832" + "l2=0.000477 f=-0.775 shape=(1, 9000, 1)
logits [[ 2.5733504 -2.5574532  2.6016204 -5.719455 ]]
Iteration 700 of 1000: loss=0.0836 " + "l1=0.0831" + "l2=0.000543 f=-0.775 shape=(1, 9000, 1)
logits [[ 2.5666265 -2.5557678  2.5986826 -5.709424 ]]
Iteration 800 of 1000: loss=0.0836 " + "l1=0.083" + "l2=0.000644 f=-0.774 shape=(1, 9000, 1)
logits [[ 2.5598466 -2.5540555  2.5956783 -5.6994686]]
Iteration 900 of 1000: loss=0.0836 " + "l1=0.0828" + "l2=0.00076 f=-0.774 shape=(1, 9000, 1)
logits [[ 2.5532825 -2.5520706  2.5926175 -5.6901207]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.843 " + "l1=0.843" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.6271222 -2.5703812  2.6258743 -5.8055887]]
Iteration 100 of 1000: loss=0.819 " + "l1=0.809" + "l2=0.0103 f=-0.767 shape=(1, 9000, 1)
logits [[ 2.4524531 -2.5137267  2.5398388 -5.547928 ]]
Iteration 200 of 1000: loss=0.803 " + "l1=0.786" + "l2=0.0171 f=-0.756 shape=(1, 9000, 1)
logits [[ 2.3516605 -2.4929645  2.4895399 -5.3722305]]
Iteration 300 of 1000: loss=0.787 " + "l1=0.763" + "l2=0.0247 f=-0.741 shape=(1, 9000, 1)
logits [[ 2.2472842 -2.47276    2.4437854 -5.183979 ]]
Iteration 400 of 1000: loss=0.771 " + "l1=0.737" + "l2=0.0336 f=-0.724 shape=(1, 9000, 1)
logits [[ 2.126206  -2.4373167  2.3922293 -4.9784794]]
Iteration 500 of 1000: loss=0.754 " + "l1=0.714" + "l2=0.0393 f=-0.708 shape=(1, 9000, 1)
logits [[ 2.0187945 -2.4090292  2.351223  -4.7912006]]
Iteration 600 of 1000: loss=0.736 " + "l1=0.69" + "l2=0.0453 f=-0.689 shape=(1, 9000, 1)
logits [[ 1.9122804 -2.3737433  2.3059127 -4.5990853]]
Iteration 700 of 1000: loss=0.718 " + "l1=0.668" + "l2=0.0499 f=-0.671 shape=(1, 9000, 1)
logits [[ 1.809535  -2.3409364  2.2627592 -4.4172535]]
Iteration 800 of 1000: loss=0.702 " + "l1=0.647" + "l2=0.0546 f=-0.659 shape=(1, 9000, 1)
logits [[ 1.7119156 -2.3116784  2.2191236 -4.2547145]]
Iteration 900 of 1000: loss=0.686 " + "l1=0.626" + "l2=0.0597 f=-0.645 shape=(1, 9000, 1)
logits [[ 1.6123555 -2.2922382  2.1820636 -4.080827 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.43 " + "l1=8.43" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.6271222 -2.5703812  2.6258743 -5.8055887]]
Iteration 100 of 1000: loss=5.92 " + "l1=4.85" + "l2=1.07 f=-0.59 shape=(1, 9000, 1)
logits [[ 0.8616762 -1.9645287  1.79762   -3.055486 ]]
Iteration 200 of 1000: loss=3.61 " + "l1=1.58" + "l2=2.03 f=-0.336 shape=(1, 9000, 1)
logits [[-0.44498786 -1.5646061   1.1218842  -0.4546223 ]]
Iteration 300 of 1000: loss=1.79 " + "l1=0" + "l2=1.79 f=-0.356 shape=(1, 9000, 1)
logits [[-0.89617926 -1.7806647   0.61229897  0.64086115]]
Iteration 400 of 1000: loss=1.42 " + "l1=0" + "l2=1.42 f=-0.387 shape=(1, 9000, 1)
logits [[-0.7918024  -1.9086865   0.56905735  0.58399457]]
Iteration 500 of 1000: loss=1.22 " + "l1=0" + "l2=1.22 f=-0.384 shape=(1, 9000, 1)
logits [[-0.8315168  -1.9118224   0.59918046  0.6097245 ]]
Iteration 600 of 1000: loss=1.07 " + "l1=0.00387" + "l2=1.07 f=-0.373 shape=(1, 9000, 1)
logits [[-0.8741937  -1.9259589   0.656121    0.65225375]]
Iteration 700 of 1000: loss=0.951 " + "l1=0" + "l2=0.951 f=-0.362 shape=(1, 9000, 1)
logits [[-0.92319155 -1.9284632   0.6838836   0.720864  ]]
Iteration 800 of 1000: loss=0.846 " + "l1=0" + "l2=0.846 f=-0.358 shape=(1, 9000, 1)
logits [[-0.97484934 -1.9178702   0.7115517   0.7508705 ]]
Iteration 900 of 1000: loss=0.767 " + "l1=0" + "l2=0.767 f=-0.355 shape=(1, 9000, 1)
logits [[-1.0226494 -1.9071724  0.7338761  0.7754563]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.64 " + "l1=4.64" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.6271222 -2.5703812  2.6258743 -5.8055887]]
Iteration 100 of 1000: loss=3.8 " + "l1=3.45" + "l2=0.351 f=-0.669 shape=(1, 9000, 1)
logits [[ 1.5935841 -2.1915002  2.0942142 -4.1709204]]
Iteration 200 of 1000: loss=3.19 " + "l1=2.64" + "l2=0.547 f=-0.559 shape=(1, 9000, 1)
logits [[ 0.9288899 -2.088266   1.8607259 -2.9357152]]
Iteration 300 of 1000: loss=2.53 " + "l1=1.69" + "l2=0.842 f=-0.408 shape=(1, 9000, 1)
logits [[ 0.2142283 -1.830939   1.5259475 -1.5396025]]
Iteration 400 of 1000: loss=1.73 " + "l1=0.566" + "l2=1.17 f=-0.312 shape=(1, 9000, 1)
logits [[-0.5381313  -1.719757    1.0185413  -0.01003289]]
Iteration 500 of 1000: loss=1.02 " + "l1=0.00566" + "l2=1.01 f=-0.34 shape=(1, 9000, 1)
logits [[-0.9965565 -1.8432201  0.7452594  0.7349597]]
Iteration 600 of 1000: loss=0.814 " + "l1=0" + "l2=0.814 f=-0.363 shape=(1, 9000, 1)
logits [[-1.0971922 -1.9013335  0.7628133  0.7833885]]
Iteration 700 of 1000: loss=0.686 " + "l1=0" + "l2=0.686 f=-0.375 shape=(1, 9000, 1)
logits [[-1.1396966 -1.9234046  0.778301   0.7829622]]
Iteration 800 of 1000: loss=0.6 " + "l1=0" + "l2=0.6 f=-0.384 shape=(1, 9000, 1)
logits [[-1.1571004 -1.9383303  0.7779049  0.7796903]]
Iteration 900 of 1000: loss=0.535 " + "l1=0.000661" + "l2=0.534 f=-0.39 shape=(1, 9000, 1)
logits [[-1.1734952  -1.9411469   0.77721953  0.7760175 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.74 " + "l1=2.74" + "l2=0 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.6271222 -2.5703812  2.6258743 -5.8055887]]
Iteration 100 of 1000: loss=2.44 " + "l1=2.31" + "l2=0.132 f=-0.711 shape=(1, 9000, 1)
logits [[ 2.009721  -2.3231244  2.287796  -4.819989 ]]
Iteration 200 of 1000: loss=2.24 " + "l1=2.05" + "l2=0.188 f=-0.656 shape=(1, 9000, 1)
logits [[ 1.6566588 -2.251637   2.1442263 -4.1744194]]
Iteration 300 of 1000: loss=2.03 " + "l1=1.76" + "l2=0.269 f=-0.592 shape=(1, 9000, 1)
logits [[ 1.2350886 -2.189565   2.0055013 -3.418949 ]]
Iteration 400 of 1000: loss=1.84 " + "l1=1.49" + "l2=0.348 f=-0.518 shape=(1, 9000, 1)
logits [[ 0.84702694 -2.0791087   1.8706841  -2.7092247 ]]
Iteration 500 of 1000: loss=1.62 " + "l1=1.18" + "l2=0.448 f=-0.436 shape=(1, 9000, 1)
logits [[ 0.44748038 -1.9490732   1.6883926  -1.9309185 ]]
Iteration 600 of 1000: loss=1.3 " + "l1=0.693" + "l2=0.61 f=-0.354 shape=(1, 9000, 1)
logits [[-0.09446378 -1.8740246   1.3418254  -0.7904246 ]]
Iteration 700 of 1000: loss=0.864 " + "l1=0.145" + "l2=0.719 f=-0.356 shape=(1, 9000, 1)
logits [[-0.8773658  -1.8255436   0.86212504  0.41662002]]
Iteration 800 of 1000: loss=0.637 " + "l1=0.00266" + "l2=0.635 f=-0.372 shape=(1, 9000, 1)
logits [[-1.1110035 -1.8865258  0.7594325  0.7512518]]
Iteration 900 of 1000: loss=0.532 " + "l1=0" + "l2=0.532 f=-0.377 shape=(1, 9000, 1)
logits [[-1.1333294 -1.8923602  0.7530334  0.763683 ]]
--- 299.5641450881958 seconds ---
Adv result:3
Loading record A05931
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00882 " + "l1=0.00882" + "l2=0 f=-0.966 shape=(1, 9000, 1)
logits [[ 1.2704077  0.3889034  1.1583049 -6.679716 ]]
Iteration 100 of 1000: loss=0.00742 " + "l1=0.00667" + "l2=0.00075 f=-0.975 shape=(1, 9000, 1)
logits [[ 1.1466095   0.47947377  1.1465749  -6.67243   ]]
Iteration 200 of 1000: loss=0.00718 " + "l1=0.00652" + "l2=0.000658 f=-0.975 shape=(1, 9000, 1)
logits [[ 1.1412877   0.48959535  1.1415218  -6.6707587 ]]
Iteration 300 of 1000: loss=0.00702 " + "l1=0.00636" + "l2=0.000659 f=-0.975 shape=(1, 9000, 1)
logits [[ 1.1359682  0.5004887  1.1361929 -6.6710286]]
Iteration 400 of 1000: loss=0.0069 " + "l1=0.0062" + "l2=0.000695 f=-0.975 shape=(1, 9000, 1)
logits [[ 1.1306325  0.5111245  1.1312177 -6.67254  ]]
Iteration 500 of 1000: loss=0.00683 " + "l1=0.00604" + "l2=0.000787 f=-0.976 shape=(1, 9000, 1)
logits [[ 1.1239374  0.5220653  1.126405  -6.674713 ]]
Iteration 600 of 1000: loss=0.0067 " + "l1=0.0059" + "l2=0.000804 f=-0.976 shape=(1, 9000, 1)
logits [[ 1.1196383  0.5317482  1.121519  -6.67716  ]]
Iteration 700 of 1000: loss=0.00668 " + "l1=0.00576" + "l2=0.000917 f=-0.977 shape=(1, 9000, 1)
logits [[ 1.1160285  0.5409081  1.1169641 -6.6803827]]
Iteration 800 of 1000: loss=0.00671 " + "l1=0.00562" + "l2=0.00108 f=-0.977 shape=(1, 9000, 1)
logits [[ 1.1105161  0.5503834  1.1128559 -6.6832385]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0882 " + "l1=0.0882" + "l2=0 f=-0.966 shape=(1, 9000, 1)
logits [[ 1.2704077  0.3889034  1.1583049 -6.679716 ]]
Iteration 100 of 1000: loss=0.0331 " + "l1=0.00881" + "l2=0.0243 f=-0.989 shape=(1, 9000, 1)
logits [[ 0.7478057  0.9204213  1.0085608 -6.631244 ]]
Iteration 200 of 1000: loss=0.0197 " + "l1=0.000522" + "l2=0.0192 f=-0.99 shape=(1, 9000, 1)
logits [[ 0.7000308   0.978863    0.98408735 -6.623423  ]]
Iteration 300 of 1000: loss=0.0144 " + "l1=0" + "l2=0.0144 f=-0.992 shape=(1, 9000, 1)
logits [[ 0.70517    0.9820328  0.9801884 -6.6363597]]
Iteration 400 of 1000: loss=0.0121 " + "l1=0.000379" + "l2=0.0117 f=-0.996 shape=(1, 9000, 1)
logits [[ 0.71111065  0.97750956  0.98129576 -6.6539016 ]]
Iteration 500 of 1000: loss=0.0111 " + "l1=0" + "l2=0.0111 f=-1 shape=(1, 9000, 1)
logits [[ 0.6928302  0.9929213  0.9804532 -6.667273 ]]
Iteration 600 of 1000: loss=0.00981 " + "l1=0" + "l2=0.00981 f=-1 shape=(1, 9000, 1)
logits [[ 0.69957757  0.98652166  0.9841437  -6.6814585 ]]
Iteration 700 of 1000: loss=0.00937 " + "l1=0" + "l2=0.00937 f=-1.01 shape=(1, 9000, 1)
logits [[ 0.6963467   0.9896618   0.98471165 -6.691625  ]]
Iteration 800 of 1000: loss=0.00876 " + "l1=0" + "l2=0.00876 f=-1.01 shape=(1, 9000, 1)
logits [[ 0.69490725  0.9902408   0.9852705  -6.6991086 ]]
Iteration 900 of 1000: loss=0.00833 " + "l1=0" + "l2=0.00833 f=-1.01 shape=(1, 9000, 1)
logits [[ 0.697109   0.9882107  0.9861729 -6.706559 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0485 " + "l1=0.0485" + "l2=0 f=-0.966 shape=(1, 9000, 1)
logits [[ 1.2704077  0.3889034  1.1583049 -6.679716 ]]
Iteration 100 of 1000: loss=0.0287 " + "l1=0.0202" + "l2=0.00847 f=-0.981 shape=(1, 9000, 1)
logits [[ 0.96428096  0.7003916   1.0682852  -6.6549964 ]]
Iteration 200 of 1000: loss=0.0233 " + "l1=0.0131" + "l2=0.0101 f=-0.982 shape=(1, 9000, 1)
logits [[ 0.88338494  0.79650927  1.0352937  -6.6442275 ]]
Iteration 300 of 1000: loss=0.0184 " + "l1=0.00688" + "l2=0.0115 f=-0.986 shape=(1, 9000, 1)
logits [[ 0.80152833  0.883696    1.008875   -6.638456  ]]
Iteration 400 of 1000: loss=0.0143 " + "l1=0.00136" + "l2=0.013 f=-0.992 shape=(1, 9000, 1)
logits [[ 0.7242282  0.9623428  0.9870703 -6.641649 ]]
Iteration 500 of 1000: loss=0.0117 " + "l1=0" + "l2=0.0117 f=-0.996 shape=(1, 9000, 1)
logits [[ 0.70769405  0.98169696  0.9810807  -6.6557913 ]]
Iteration 600 of 1000: loss=0.0104 " + "l1=0.000168" + "l2=0.0102 f=-1 shape=(1, 9000, 1)
logits [[ 0.70713913  0.9809768   0.9840249  -6.671519  ]]
Iteration 700 of 1000: loss=0.00968 " + "l1=0.000227" + "l2=0.00945 f=-1 shape=(1, 9000, 1)
logits [[ 0.70634997  0.9819679   0.98608756 -6.6852045 ]]
Iteration 800 of 1000: loss=0.00909 " + "l1=0" + "l2=0.00909 f=-1.01 shape=(1, 9000, 1)
logits [[ 0.6957367  0.9916287  0.9850807 -6.6939325]]
Iteration 900 of 1000: loss=0.00835 " + "l1=0" + "l2=0.00835 f=-1.01 shape=(1, 9000, 1)
logits [[ 0.6999525   0.9869586   0.98659307 -6.702219  ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0286 " + "l1=0.0286" + "l2=0 f=-0.966 shape=(1, 9000, 1)
logits [[ 1.2704077  0.3889034  1.1583049 -6.679716 ]]
Iteration 100 of 1000: loss=0.0203 " + "l1=0.0173" + "l2=0.00297 f=-0.975 shape=(1, 9000, 1)
logits [[ 1.0880679  0.5726231  1.1056117 -6.6666646]]
Iteration 200 of 1000: loss=0.0186 " + "l1=0.0149" + "l2=0.00371 f=-0.977 shape=(1, 9000, 1)
logits [[ 1.0417892  0.6272113  1.0854532 -6.662186 ]]
Iteration 300 of 1000: loss=0.0168 " + "l1=0.0124" + "l2=0.0044 f=-0.979 shape=(1, 9000, 1)
logits [[ 0.993227    0.68425083  1.0656217  -6.6602516 ]]
Iteration 400 of 1000: loss=0.0151 " + "l1=0.0101" + "l2=0.00503 f=-0.982 shape=(1, 9000, 1)
logits [[ 0.94758266  0.7385276   1.0482843  -6.6625667 ]]
Iteration 500 of 1000: loss=0.0138 " + "l1=0.00805" + "l2=0.00572 f=-0.985 shape=(1, 9000, 1)
logits [[ 0.90544534  0.78587323  1.0337155  -6.6647024 ]]
Iteration 600 of 1000: loss=0.0127 " + "l1=0.00621" + "l2=0.00644 f=-0.988 shape=(1, 9000, 1)
logits [[ 0.8627116  0.8304199  1.0214888 -6.6673284]]
Iteration 700 of 1000: loss=0.0116 " + "l1=0.00455" + "l2=0.00708 f=-0.991 shape=(1, 9000, 1)
logits [[ 0.82634705  0.87033004  1.0102662  -6.67163   ]]
Iteration 800 of 1000: loss=0.0108 " + "l1=0.0033" + "l2=0.0075 f=-0.994 shape=(1, 9000, 1)
logits [[ 0.79647505  0.9009419   1.0025359  -6.677525  ]]
Iteration 900 of 1000: loss=0.0101 " + "l1=0.00202" + "l2=0.00807 f=-0.998 shape=(1, 9000, 1)
logits [[ 0.76388097  0.9328064   0.99499005 -6.6830635 ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0386 " + "l1=0.0386" + "l2=0 f=-0.966 shape=(1, 9000, 1)
logits [[ 1.2704077  0.3889034  1.1583049 -6.679716 ]]
Iteration 100 of 1000: loss=0.0251 " + "l1=0.0197" + "l2=0.00543 f=-0.978 shape=(1, 9000, 1)
logits [[ 1.0253232  0.6371013  1.0867069 -6.661318 ]]
Iteration 200 of 1000: loss=0.0216 " + "l1=0.015" + "l2=0.00667 f=-0.98 shape=(1, 9000, 1)
logits [[ 0.95883477  0.7167335   1.0584882  -6.6549115 ]]
Iteration 300 of 1000: loss=0.0184 " + "l1=0.0108" + "l2=0.00763 f=-0.983 shape=(1, 9000, 1)
logits [[ 0.89723015  0.7882595   1.0348942  -6.6529293 ]]
Iteration 400 of 1000: loss=0.0157 " + "l1=0.00702" + "l2=0.00866 f=-0.987 shape=(1, 9000, 1)
logits [[ 0.8330766  0.8550881  1.0155677 -6.6528997]]
Iteration 500 of 1000: loss=0.0134 " + "l1=0.00365" + "l2=0.00971 f=-0.992 shape=(1, 9000, 1)
logits [[ 0.7755111   0.91507494  0.9984322  -6.656464  ]]
Iteration 600 of 1000: loss=0.0116 " + "l1=0.000715" + "l2=0.0109 f=-0.997 shape=(1, 9000, 1)
logits [[ 0.72171944  0.9687551   0.9850896  -6.6621423 ]]
Iteration 700 of 1000: loss=0.0102 " + "l1=0" + "l2=0.0102 f=-1 shape=(1, 9000, 1)
logits [[ 0.70499223  0.98444635  0.983809   -6.6746125 ]]
Iteration 800 of 1000: loss=0.00938 " + "l1=3.44e-05" + "l2=0.00934 f=-1 shape=(1, 9000, 1)
logits [[ 0.705035   0.9846341  0.9854196 -6.6873083]]
Iteration 900 of 1000: loss=0.00869 " + "l1=0.000134" + "l2=0.00856 f=-1.01 shape=(1, 9000, 1)
logits [[ 0.7056406   0.9835135   0.98658496 -6.6972513 ]]
--- 296.0265734195709 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00112 " + "l1=0.00112" + "l2=0 f=-0.966 shape=(1, 9000, 1)
logits [[ 1.2704077  0.3889034  1.1583049 -6.679716 ]]
Iteration 100 of 1000: loss=0.000525 " + "l1=9.75e-05" + "l2=0.000427 f=-0.975 shape=(1, 9000, 1)
logits [[ 1.1768144   0.43309364  1.167068   -6.6761594 ]]
Iteration 200 of 1000: loss=0.000386 " + "l1=2.45e-06" + "l2=0.000384 f=-0.975 shape=(1, 9000, 1)
logits [[ 1.1683234  0.4365514  1.1680781 -6.6737857]]
Iteration 300 of 1000: loss=0.000342 " + "l1=3.69e-06" + "l2=0.000338 f=-0.975 shape=(1, 9000, 1)
logits [[ 1.1686648   0.43657288  1.1682957  -6.6735115 ]]
Iteration 400 of 1000: loss=0.000316 " + "l1=0" + "l2=0.000316 f=-0.975 shape=(1, 9000, 1)
logits [[ 1.1674844  0.4373386  1.1688005 -6.673799 ]]
Iteration 500 of 1000: loss=0.000324 " + "l1=0" + "l2=0.000324 f=-0.975 shape=(1, 9000, 1)
logits [[ 1.1687112   0.43689907  1.1692     -6.674712  ]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.000561 " + "l1=0.000561" + "l2=0 f=-0.966 shape=(1, 9000, 1)
logits [[ 1.2704077  0.3889034  1.1583049 -6.679716 ]]
Iteration 100 of 1000: loss=0.000411 " + "l1=0.000254" + "l2=0.000156 f=-0.971 shape=(1, 9000, 1)
logits [[ 1.2145649  0.4153619  1.1637021 -6.6787767]]
Iteration 200 of 1000: loss=0.000367 " + "l1=0.00023" + "l2=0.000137 f=-0.971 shape=(1, 9000, 1)
logits [[ 1.2100117   0.41754878  1.1640195  -6.6773643 ]]
Iteration 300 of 1000: loss=0.000367 " + "l1=0.000192" + "l2=0.000175 f=-0.972 shape=(1, 9000, 1)
logits [[ 1.2031409   0.42081466  1.1648084  -6.6765428 ]]
const [0.0025]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.00028 " + "l1=0.00028" + "l2=0 f=-0.966 shape=(1, 9000, 1)
logits [[ 1.2704077  0.3889034  1.1583049 -6.679716 ]]
Iteration 100 of 1000: loss=0.000255 " + "l1=0.00018" + "l2=7.52e-05 f=-0.969 shape=(1, 9000, 1)
logits [[ 1.2337637   0.40639985  1.1619278  -6.6799483 ]]
Iteration 200 of 1000: loss=0.000228 " + "l1=0.000185" + "l2=4.29e-05 f=-0.969 shape=(1, 9000, 1)
logits [[ 1.2357087  0.4056752  1.1616338 -6.6792874]]
Iteration 300 of 1000: loss=0.000242 " + "l1=0.000179" + "l2=6.31e-05 f=-0.969 shape=(1, 9000, 1)
logits [[ 1.2333966  0.4068251  1.1619167 -6.6789627]]
const [0.00125]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00014 " + "l1=0.00014" + "l2=0 f=-0.966 shape=(1, 9000, 1)
logits [[ 1.2704077  0.3889034  1.1583049 -6.679716 ]]
Iteration 100 of 1000: loss=0.00015 " + "l1=0.000104" + "l2=4.67e-05 f=-0.968 shape=(1, 9000, 1)
logits [[ 1.243895    0.40161932  1.1609831  -6.6804433 ]]
const [0.000625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=7.01e-05 " + "l1=7.01e-05" + "l2=0 f=-0.966 shape=(1, 9000, 1)
logits [[ 1.2704077  0.3889034  1.1583049 -6.679716 ]]
Iteration 100 of 1000: loss=8.91e-05 " + "l1=5.57e-05" + "l2=3.34e-05 f=-0.968 shape=(1, 9000, 1)
logits [[ 1.2494942   0.39890456  1.160395   -6.680497  ]]
--- 87.18194532394409 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0795 " + "l1=0.0795" + "l2=0 f=-0.966 shape=(1, 9000, 1)
logits [[ 1.2704077  0.3889034  1.1583049 -6.679716 ]]
Iteration 100 of 1000: loss=0.0784 " + "l1=0.0777" + "l2=0.000692 f=-0.968 shape=(1, 9000, 1)
logits [[ 1.159296    0.43788755  1.146159   -6.614174  ]]
Iteration 200 of 1000: loss=0.0782 " + "l1=0.0774" + "l2=0.000727 f=-0.967 shape=(1, 9000, 1)
logits [[ 1.1440035   0.44366956  1.1436641  -6.5999513 ]]
Iteration 300 of 1000: loss=0.078 " + "l1=0.0773" + "l2=0.00075 f=-0.965 shape=(1, 9000, 1)
logits [[ 1.1401447   0.44414112  1.1396446  -6.585482  ]]
Iteration 400 of 1000: loss=0.0779 " + "l1=0.0771" + "l2=0.000822 f=-0.964 shape=(1, 9000, 1)
logits [[ 1.1364071   0.44451746  1.1360432  -6.5715604 ]]
Iteration 500 of 1000: loss=0.0778 " + "l1=0.0769" + "l2=0.000911 f=-0.962 shape=(1, 9000, 1)
logits [[ 1.1331737  0.4443596  1.1329503 -6.558698 ]]
Iteration 600 of 1000: loss=0.0778 " + "l1=0.0768" + "l2=0.00105 f=-0.961 shape=(1, 9000, 1)
logits [[ 1.1302799   0.44385442  1.1301988  -6.5465527 ]]
Iteration 700 of 1000: loss=0.0778 " + "l1=0.0766" + "l2=0.00118 f=-0.959 shape=(1, 9000, 1)
logits [[ 1.1259547   0.44439107  1.1277415  -6.5352216 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.795 " + "l1=0.795" + "l2=0 f=-0.966 shape=(1, 9000, 1)
logits [[ 1.2704077  0.3889034  1.1583049 -6.679716 ]]
Iteration 100 of 1000: loss=0.74 " + "l1=0.713" + "l2=0.0262 f=-0.916 shape=(1, 9000, 1)
logits [[ 0.987834    0.4969265   0.99276805 -6.1409316 ]]
Iteration 200 of 1000: loss=0.717 " + "l1=0.679" + "l2=0.0379 f=-0.885 shape=(1, 9000, 1)
logits [[ 0.89668155  0.522805    0.9172943  -5.8754506 ]]
Iteration 300 of 1000: loss=0.695 " + "l1=0.646" + "l2=0.0489 f=-0.848 shape=(1, 9000, 1)
logits [[ 0.83533895  0.5371802   0.8466135  -5.61187   ]]
Iteration 400 of 1000: loss=0.674 " + "l1=0.616" + "l2=0.0585 f=-0.82 shape=(1, 9000, 1)
logits [[ 0.77339906  0.54232126  0.78105575 -5.376168  ]]
Iteration 500 of 1000: loss=0.656 " + "l1=0.59" + "l2=0.0667 f=-0.798 shape=(1, 9000, 1)
logits [[ 0.71076167  0.5517363   0.719786   -5.175701  ]]
Iteration 600 of 1000: loss=0.638 " + "l1=0.564" + "l2=0.0749 f=-0.776 shape=(1, 9000, 1)
logits [[ 0.6624891   0.54039013  0.6640942  -4.9714065 ]]
Iteration 700 of 1000: loss=0.62 " + "l1=0.533" + "l2=0.0866 f=-0.746 shape=(1, 9000, 1)
logits [[ 0.59551287  0.5190506   0.61702615 -4.71644   ]]
Iteration 800 of 1000: loss=0.598 " + "l1=0.501" + "l2=0.0969 f=-0.709 shape=(1, 9000, 1)
logits [[ 0.5538816   0.46151754  0.5796841  -4.4325485 ]]
Iteration 900 of 1000: loss=0.574 " + "l1=0.467" + "l2=0.108 f=-0.664 shape=(1, 9000, 1)
logits [[ 0.52484787  0.37112114  0.5565934  -4.109206  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.95 " + "l1=7.95" + "l2=0 f=-0.966 shape=(1, 9000, 1)
logits [[ 1.2704077  0.3889034  1.1583049 -6.679716 ]]
Iteration 100 of 1000: loss=3.72 " + "l1=1.86" + "l2=1.86 f=-0.545 shape=(1, 9000, 1)
logits [[-0.514652    0.04955859  0.07057855 -1.7864343 ]]
Iteration 200 of 1000: loss=2.23 " + "l1=0.0342" + "l2=2.19 f=-0.461 shape=(1, 9000, 1)
logits [[-1.1135819  -0.23736294 -0.22892077 -0.26314598]]
Iteration 300 of 1000: loss=1.5 " + "l1=0.0219" + "l2=1.47 f=-0.401 shape=(1, 9000, 1)
logits [[-0.9593225  -0.22682208 -0.19772081 -0.21965718]]
Iteration 400 of 1000: loss=1.17 " + "l1=0" + "l2=1.17 f=-0.359 shape=(1, 9000, 1)
logits [[-0.8707473  -0.20934837 -0.18428613 -0.16992128]]
Iteration 500 of 1000: loss=0.985 " + "l1=0.00752" + "l2=0.978 f=-0.332 shape=(1, 9000, 1)
logits [[-0.81961566 -0.18710954 -0.15754442 -0.16506615]]
Iteration 600 of 1000: loss=0.874 " + "l1=0" + "l2=0.874 f=-0.32 shape=(1, 9000, 1)
logits [[-0.8529289  -0.15606177 -0.15062281 -0.12162363]]
Iteration 700 of 1000: loss=0.79 " + "l1=0" + "l2=0.79 f=-0.314 shape=(1, 9000, 1)
logits [[-0.84552914 -0.16049904 -0.13210522 -0.11631093]]
Iteration 800 of 1000: loss=0.747 " + "l1=0" + "l2=0.747 f=-0.304 shape=(1, 9000, 1)
logits [[-0.8418603  -0.19705844 -0.11958224 -0.05774514]]
Iteration 900 of 1000: loss=0.692 " + "l1=0" + "l2=0.692 f=-0.294 shape=(1, 9000, 1)
logits [[-0.79015934 -0.22585776 -0.09100443 -0.06933295]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.37 " + "l1=4.37" + "l2=0 f=-0.966 shape=(1, 9000, 1)
logits [[ 1.2704077  0.3889034  1.1583049 -6.679716 ]]
Iteration 100 of 1000: loss=2.84 " + "l1=2.15" + "l2=0.69 f=-0.652 shape=(1, 9000, 1)
logits [[ 0.25835675  0.3384773   0.35454133 -3.5603514 ]]
Iteration 200 of 1000: loss=2.19 " + "l1=1.29" + "l2=0.901 f=-0.557 shape=(1, 9000, 1)
logits [[-0.28678733  0.1274842   0.14082447 -2.2085707 ]]
Iteration 300 of 1000: loss=1.55 " + "l1=0.453" + "l2=1.1 f=-0.447 shape=(1, 9000, 1)
logits [[-0.69956386 -0.08828703 -0.0883456  -0.9125106 ]]
Iteration 400 of 1000: loss=1.01 " + "l1=0.00715" + "l2=0.999 f=-0.355 shape=(1, 9000, 1)
logits [[-0.8614396  -0.19425523 -0.17570695 -0.18870941]]
Iteration 500 of 1000: loss=0.824 " + "l1=0.0215" + "l2=0.803 f=-0.337 shape=(1, 9000, 1)
logits [[-0.809608   -0.17458501 -0.16257076 -0.20162168]]
Iteration 600 of 1000: loss=0.728 " + "l1=0" + "l2=0.728 f=-0.325 shape=(1, 9000, 1)
logits [[-0.80327725 -0.18872301 -0.16183807 -0.14514542]]
Iteration 700 of 1000: loss=0.663 " + "l1=0.00518" + "l2=0.658 f=-0.317 shape=(1, 9000, 1)
logits [[-0.76827097 -0.21882309 -0.13657108 -0.1459882 ]]
Iteration 800 of 1000: loss=0.613 " + "l1=0" + "l2=0.613 f=-0.312 shape=(1, 9000, 1)
logits [[-0.74108064 -0.26577613 -0.1254382  -0.11392641]]
Iteration 900 of 1000: loss=0.57 " + "l1=0.0014" + "l2=0.569 f=-0.312 shape=(1, 9000, 1)
logits [[-0.7267889  -0.29567602 -0.11139783 -0.11394758]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.58 " + "l1=2.58" + "l2=0 f=-0.966 shape=(1, 9000, 1)
logits [[ 1.2704077  0.3889034  1.1583049 -6.679716 ]]
Iteration 100 of 1000: loss=2.01 " + "l1=1.7" + "l2=0.305 f=-0.77 shape=(1, 9000, 1)
logits [[ 0.488672    0.55746335  0.55785793 -4.6822276 ]]
Iteration 200 of 1000: loss=1.72 " + "l1=1.33" + "l2=0.392 f=-0.665 shape=(1, 9000, 1)
logits [[ 0.2853647   0.3834309   0.38494834 -3.7122898 ]]
Iteration 300 of 1000: loss=1.5 " + "l1=1.01" + "l2=0.488 f=-0.585 shape=(1, 9000, 1)
logits [[ 0.03937193  0.22466181  0.2547835  -2.8606079 ]]
Iteration 400 of 1000: loss=1.21 " + "l1=0.643" + "l2=0.57 f=-0.495 shape=(1, 9000, 1)
logits [[-0.27821687  0.08337433  0.09782563 -1.881787  ]]
Iteration 500 of 1000: loss=0.93 " + "l1=0.288" + "l2=0.642 f=-0.376 shape=(1, 9000, 1)
logits [[-0.5209166  -0.05485874 -0.02072731 -0.9081554 ]]
Iteration 600 of 1000: loss=0.762 " + "l1=0.105" + "l2=0.657 f=-0.336 shape=(1, 9000, 1)
logits [[-0.72917676 -0.1374026  -0.07825603 -0.40097442]]
Iteration 700 of 1000: loss=0.649 " + "l1=0.00738" + "l2=0.642 f=-0.323 shape=(1, 9000, 1)
logits [[-0.8181648  -0.23825334 -0.10642862 -0.12915039]]
Iteration 800 of 1000: loss=0.585 " + "l1=0.0075" + "l2=0.577 f=-0.322 shape=(1, 9000, 1)
logits [[-0.7824077  -0.3062918  -0.08851874 -0.11158042]]
Iteration 900 of 1000: loss=0.53 " + "l1=0.00657" + "l2=0.523 f=-0.322 shape=(1, 9000, 1)
logits [[-0.7778515  -0.33974618 -0.07438646 -0.09461451]]
--- 287.1242616176605 seconds ---
Adv result:3
Loading record A05935
(1, 16488)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0842 " + "l1=0.0842" + "l2=0 f=-0.626 shape=(1, 9000, 1)
logits [[ 6.274006  -2.1500363  2.7297518 -9.358552 ]]
Iteration 100 of 1000: loss=0.084 " + "l1=0.0837" + "l2=0.000259 f=-0.625 shape=(1, 9000, 1)
logits [[ 6.238597  -2.1330955  2.7206886 -9.328063 ]]
Iteration 200 of 1000: loss=0.0839 " + "l1=0.0837" + "l2=0.00024 f=-0.625 shape=(1, 9000, 1)
logits [[ 6.236463  -2.132121   2.7199004 -9.325643 ]]
Iteration 300 of 1000: loss=0.0839 " + "l1=0.0836" + "l2=0.000282 f=-0.625 shape=(1, 9000, 1)
logits [[ 6.2332206 -2.1302192  2.7187223 -9.322558 ]]
Iteration 400 of 1000: loss=0.0839 " + "l1=0.0836" + "l2=0.000322 f=-0.625 shape=(1, 9000, 1)
logits [[ 6.2301197 -2.1284213  2.7176938 -9.319817 ]]
Iteration 500 of 1000: loss=0.0839 " + "l1=0.0835" + "l2=0.000396 f=-0.625 shape=(1, 9000, 1)
logits [[ 6.22732   -2.1268227  2.7167923 -9.317409 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.842 " + "l1=0.842" + "l2=0 f=-0.626 shape=(1, 9000, 1)
logits [[ 6.274006  -2.1500363  2.7297518 -9.358552 ]]
Iteration 100 of 1000: loss=0.816 " + "l1=0.797" + "l2=0.0191 f=-0.622 shape=(1, 9000, 1)
logits [[ 5.956271  -2.013963   2.6486297 -9.080309 ]]
Iteration 200 of 1000: loss=0.809 " + "l1=0.784" + "l2=0.0251 f=-0.62 shape=(1, 9000, 1)
logits [[ 5.8649206 -1.9739684  2.6237102 -8.995585 ]]
Iteration 300 of 1000: loss=0.804 " + "l1=0.774" + "l2=0.0305 f=-0.618 shape=(1, 9000, 1)
logits [[ 5.794399  -1.9409096  2.6020958 -8.926854 ]]
Iteration 400 of 1000: loss=0.8 " + "l1=0.765" + "l2=0.0348 f=-0.615 shape=(1, 9000, 1)
logits [[ 5.7373776 -1.9140378  2.5857592 -8.86964  ]]
Iteration 500 of 1000: loss=0.796 " + "l1=0.758" + "l2=0.038 f=-0.613 shape=(1, 9000, 1)
logits [[ 5.6890726 -1.8877766  2.5714142 -8.823268 ]]
Iteration 600 of 1000: loss=0.791 " + "l1=0.749" + "l2=0.0416 f=-0.61 shape=(1, 9000, 1)
logits [[ 5.633794  -1.8596733  2.5539486 -8.768706 ]]
Iteration 700 of 1000: loss=0.786 " + "l1=0.74" + "l2=0.0455 f=-0.607 shape=(1, 9000, 1)
logits [[ 5.5741673 -1.8288016  2.5331848 -8.707595 ]]
Iteration 800 of 1000: loss=0.779 " + "l1=0.729" + "l2=0.0501 f=-0.605 shape=(1, 9000, 1)
logits [[ 5.4984713 -1.791355   2.5031946 -8.62943  ]]
Iteration 900 of 1000: loss=0.77 " + "l1=0.715" + "l2=0.0554 f=-0.601 shape=(1, 9000, 1)
logits [[ 5.4049053 -1.7435817  2.4635866 -8.528309 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.42 " + "l1=8.42" + "l2=0 f=-0.626 shape=(1, 9000, 1)
logits [[ 6.274006  -2.1500363  2.7297518 -9.358552 ]]
Iteration 100 of 1000: loss=5.51 " + "l1=3.91" + "l2=1.6 f=-0.52 shape=(1, 9000, 1)
logits [[ 2.9386587 -0.9730058  1.9054397 -5.9515142]]
Iteration 200 of 1000: loss=4.49 " + "l1=2.33" + "l2=2.15 f=-0.504 shape=(1, 9000, 1)
logits [[ 1.6530143 -0.6802998  1.6253729 -4.6145144]]
Iteration 300 of 1000: loss=4.07 " + "l1=2.05" + "l2=2.02 f=-0.5 shape=(1, 9000, 1)
logits [[ 1.4955852 -0.55653    1.4723092 -4.410297 ]]
Iteration 400 of 1000: loss=3.82 " + "l1=1.83" + "l2=1.99 f=-0.504 shape=(1, 9000, 1)
logits [[ 1.3675537  -0.45891523  1.3644936  -4.2877703 ]]
Iteration 500 of 1000: loss=3.67 " + "l1=1.68" + "l2=1.99 f=-0.509 shape=(1, 9000, 1)
logits [[ 1.2771637  -0.39875358  1.2803468  -4.1967397 ]]
Iteration 600 of 1000: loss=3.55 " + "l1=1.57" + "l2=1.98 f=-0.506 shape=(1, 9000, 1)
logits [[ 1.2003684  -0.35300738  1.2197047  -4.090819  ]]
Iteration 700 of 1000: loss=3.44 " + "l1=1.5" + "l2=1.94 f=-0.505 shape=(1, 9000, 1)
logits [[ 1.1730634  -0.32375658  1.1735367  -4.04338   ]]
Iteration 800 of 1000: loss=3.36 " + "l1=1.46" + "l2=1.91 f=-0.495 shape=(1, 9000, 1)
logits [[ 1.1444691 -0.3083941  1.1483191 -3.9657633]]
Iteration 900 of 1000: loss=3.3 " + "l1=1.42" + "l2=1.88 f=-0.489 shape=(1, 9000, 1)
logits [[ 1.1176214 -0.2943214  1.1220384 -3.8998044]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=84.2 " + "l1=84.2" + "l2=0 f=-0.626 shape=(1, 9000, 1)
logits [[ 6.274006  -2.1500363  2.7297518 -9.358552 ]]
Iteration 100 of 1000: loss=13 " + "l1=1.61" + "l2=11.3 f=-0.44 shape=(1, 9000, 1)
logits [[ 0.35337862  0.37737623  0.53814685 -3.0301988 ]]
Iteration 200 of 1000: loss=7.82 " + "l1=0.00596" + "l2=7.82 f=-0.422 shape=(1, 9000, 1)
logits [[ 0.5352108  0.544452   0.5450484 -3.3132222]]
Iteration 300 of 1000: loss=6.9 " + "l1=0" + "l2=6.9 f=-0.43 shape=(1, 9000, 1)
logits [[ 0.50865054  0.5936308   0.58523226 -3.4082458 ]]
Iteration 400 of 1000: loss=6.47 " + "l1=0" + "l2=6.47 f=-0.436 shape=(1, 9000, 1)
logits [[ 0.49896726  0.61368674  0.5917912  -3.447108  ]]
Iteration 500 of 1000: loss=6.13 " + "l1=0" + "l2=6.13 f=-0.435 shape=(1, 9000, 1)
logits [[ 0.5217263   0.6180867   0.59863883 -3.4792624 ]]
Iteration 600 of 1000: loss=5.87 " + "l1=0" + "l2=5.87 f=-0.44 shape=(1, 9000, 1)
logits [[ 0.5579703  0.6184655  0.5976368 -3.53494  ]]
Iteration 700 of 1000: loss=5.63 " + "l1=0.0207" + "l2=5.61 f=-0.451 shape=(1, 9000, 1)
logits [[ 0.5684185  0.6081975  0.6102675 -3.5911617]]
Iteration 800 of 1000: loss=5.56 " + "l1=0" + "l2=5.56 f=-0.459 shape=(1, 9000, 1)
logits [[ 0.5327579   0.637672    0.60292107 -3.6088102 ]]
Iteration 900 of 1000: loss=5.36 " + "l1=0.0187" + "l2=5.34 f=-0.466 shape=(1, 9000, 1)
logits [[ 0.50743544  0.62771726  0.62958515 -3.6293817 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=46.3 " + "l1=46.3" + "l2=0 f=-0.626 shape=(1, 9000, 1)
logits [[ 6.274006  -2.1500363  2.7297518 -9.358552 ]]
Iteration 100 of 1000: loss=11.1 " + "l1=3.65" + "l2=7.48 f=-0.469 shape=(1, 9000, 1)
logits [[ 0.7659377   0.11618333  0.77903324 -3.5354044 ]]
Iteration 200 of 1000: loss=7.06 " + "l1=0.0139" + "l2=7.05 f=-0.444 shape=(1, 9000, 1)
logits [[ 0.543218    0.57824975  0.58077747 -3.4780002 ]]
Iteration 300 of 1000: loss=6.22 " + "l1=0" + "l2=6.22 f=-0.444 shape=(1, 9000, 1)
logits [[ 0.58553433  0.60344625  0.59156615 -3.5570812 ]]
Iteration 400 of 1000: loss=5.8 " + "l1=0.0944" + "l2=5.71 f=-0.456 shape=(1, 9000, 1)
logits [[ 0.54725826  0.6045209   0.62169254 -3.5962276 ]]
Iteration 500 of 1000: loss=5.43 " + "l1=0.0584" + "l2=5.37 f=-0.457 shape=(1, 9000, 1)
logits [[ 0.6229659  0.6123429  0.6188572 -3.681212 ]]
Iteration 600 of 1000: loss=5.13 " + "l1=0" + "l2=5.13 f=-0.461 shape=(1, 9000, 1)
logits [[ 0.6093726  0.6258055  0.625582  -3.7028153]]
Iteration 700 of 1000: loss=4.95 " + "l1=0.00352" + "l2=4.95 f=-0.462 shape=(1, 9000, 1)
logits [[ 0.5639291   0.6212348   0.62187445 -3.6550207 ]]
Iteration 800 of 1000: loss=4.95 " + "l1=0.135" + "l2=4.81 f=-0.467 shape=(1, 9000, 1)
logits [[ 0.479668    0.61472344  0.6393158  -3.6024568 ]]
Iteration 900 of 1000: loss=4.72 " + "l1=0" + "l2=4.72 f=-0.461 shape=(1, 9000, 1)
logits [[ 0.5706562   0.62642556  0.6059883  -3.646639  ]]
--- 281.02003383636475 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0354 " + "l1=0.0354" + "l2=0 f=-0.626 shape=(1, 9000, 1)
logits [[ 6.274006  -2.1500363  2.7297518 -9.358552 ]]
Iteration 100 of 1000: loss=0.0353 " + "l1=0.0351" + "l2=0.000167 f=-0.626 shape=(1, 9000, 1)
logits [[ 6.2470756 -2.148608   2.7332988 -9.335851 ]]
Iteration 200 of 1000: loss=0.0353 " + "l1=0.0351" + "l2=0.000132 f=-0.626 shape=(1, 9000, 1)
logits [[ 6.2474723 -2.1487     2.733504  -9.3360815]]
Iteration 300 of 1000: loss=0.0353 " + "l1=0.0351" + "l2=0.000161 f=-0.626 shape=(1, 9000, 1)
logits [[ 6.2456784 -2.1486623  2.7339501 -9.334557 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.354 " + "l1=0.354" + "l2=0 f=-0.626 shape=(1, 9000, 1)
logits [[ 6.274006  -2.1500363  2.7297518 -9.358552 ]]
Iteration 100 of 1000: loss=0.341 " + "l1=0.331" + "l2=0.00936 f=-0.625 shape=(1, 9000, 1)
logits [[ 6.0629525 -2.1344466  2.7497675 -9.177683 ]]
Iteration 200 of 1000: loss=0.337 " + "l1=0.325" + "l2=0.0123 f=-0.623 shape=(1, 9000, 1)
logits [[ 6.007054  -2.1315825  2.7581441 -9.127371 ]]
Iteration 300 of 1000: loss=0.335 " + "l1=0.321" + "l2=0.0142 f=-0.622 shape=(1, 9000, 1)
logits [[ 5.972303  -2.1295226  2.7657871 -9.095499 ]]
Iteration 400 of 1000: loss=0.333 " + "l1=0.317" + "l2=0.016 f=-0.621 shape=(1, 9000, 1)
logits [[ 5.940257  -2.1280684  2.7712655 -9.066977 ]]
Iteration 500 of 1000: loss=0.331 " + "l1=0.314" + "l2=0.0174 f=-0.62 shape=(1, 9000, 1)
logits [[ 5.913583  -2.1263444  2.7770166 -9.043811 ]]
Iteration 600 of 1000: loss=0.329 " + "l1=0.31" + "l2=0.0189 f=-0.619 shape=(1, 9000, 1)
logits [[ 5.8871503 -2.1253064  2.7825358 -9.021474 ]]
Iteration 700 of 1000: loss=0.328 " + "l1=0.307" + "l2=0.0204 f=-0.618 shape=(1, 9000, 1)
logits [[ 5.8600984 -2.123311   2.788305  -8.996787 ]]
Iteration 800 of 1000: loss=0.326 " + "l1=0.304" + "l2=0.0217 f=-0.616 shape=(1, 9000, 1)
logits [[ 5.8348727 -2.1208222  2.7928026 -8.971748 ]]
Iteration 900 of 1000: loss=0.324 " + "l1=0.301" + "l2=0.0228 f=-0.615 shape=(1, 9000, 1)
logits [[ 5.810782  -2.1187696  2.7966647 -8.948237 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.54 " + "l1=3.54" + "l2=0 f=-0.626 shape=(1, 9000, 1)
logits [[ 6.274006  -2.1500363  2.7297518 -9.358552 ]]
Iteration 100 of 1000: loss=2.01 " + "l1=1.24" + "l2=0.769 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.072869  -2.0817814  2.8306665 -7.083648 ]]
Iteration 200 of 1000: loss=1.51 " + "l1=0.421" + "l2=1.09 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.2773292 -2.0421607  2.856511  -6.192538 ]]
Iteration 300 of 1000: loss=1.14 " + "l1=0" + "l2=1.14 f=-0.508 shape=(1, 9000, 1)
logits [[ 2.8618526 -2.0594807  2.8728082 -5.7073965]]
Iteration 400 of 1000: loss=0.976 " + "l1=0" + "l2=0.976 f=-0.504 shape=(1, 9000, 1)
logits [[ 2.8430054 -2.028553   2.846266  -5.677594 ]]
Iteration 500 of 1000: loss=0.871 " + "l1=0" + "l2=0.871 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.8074691 -1.9911879  2.809629  -5.619024 ]]
Iteration 600 of 1000: loss=0.782 " + "l1=0.0133" + "l2=0.769 f=-0.49 shape=(1, 9000, 1)
logits [[ 2.7962458 -1.9633373  2.782939  -5.5746045]]
Iteration 700 of 1000: loss=0.701 " + "l1=0" + "l2=0.701 f=-0.484 shape=(1, 9000, 1)
logits [[ 2.7706513 -1.9755574  2.7792463 -5.5122995]]
Iteration 800 of 1000: loss=0.631 " + "l1=0.0113" + "l2=0.62 f=-0.488 shape=(1, 9000, 1)
logits [[ 2.755703  -1.984845   2.7444038 -5.4668155]]
Iteration 900 of 1000: loss=0.556 " + "l1=0.00188" + "l2=0.554 f=-0.494 shape=(1, 9000, 1)
logits [[ 2.7202666 -2.0166547  2.7183914 -5.396467 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.95 " + "l1=1.95" + "l2=0 f=-0.626 shape=(1, 9000, 1)
logits [[ 6.274006  -2.1500363  2.7297518 -9.358552 ]]
Iteration 100 of 1000: loss=1.42 " + "l1=1.08" + "l2=0.336 f=-0.594 shape=(1, 9000, 1)
logits [[ 4.75435   -2.0552342  2.7923272 -7.865899 ]]
Iteration 200 of 1000: loss=1.27 " + "l1=0.863" + "l2=0.408 f=-0.567 shape=(1, 9000, 1)
logits [[ 4.3950167 -2.045999   2.8264728 -7.4419475]]
Iteration 300 of 1000: loss=1.17 " + "l1=0.739" + "l2=0.433 f=-0.552 shape=(1, 9000, 1)
logits [[ 4.174091  -2.0244675  2.8297083 -7.1892014]]
Iteration 400 of 1000: loss=1.08 " + "l1=0.624" + "l2=0.454 f=-0.546 shape=(1, 9000, 1)
logits [[ 3.97386   -2.036293   2.8391778 -6.9617667]]
Iteration 500 of 1000: loss=0.971 " + "l1=0.47" + "l2=0.501 f=-0.538 shape=(1, 9000, 1)
logits [[ 3.7028918 -2.0474064  2.8481882 -6.6560574]]
Iteration 600 of 1000: loss=0.817 " + "l1=0.279" + "l2=0.538 f=-0.524 shape=(1, 9000, 1)
logits [[ 3.3667402 -2.0902503  2.8593974 -6.2307844]]
Iteration 700 of 1000: loss=0.658 " + "l1=0.115" + "l2=0.543 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.0091066 -2.088839   2.8008215 -5.7661033]]
Iteration 800 of 1000: loss=0.471 " + "l1=0.0029" + "l2=0.468 f=-0.51 shape=(1, 9000, 1)
logits [[ 2.7083325 -2.0925453  2.7030687 -5.359577 ]]
Iteration 900 of 1000: loss=0.363 " + "l1=0.000273" + "l2=0.362 f=-0.528 shape=(1, 9000, 1)
logits [[ 2.6406612 -2.153959   2.6401653 -5.239296 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.15 " + "l1=1.15" + "l2=0 f=-0.626 shape=(1, 9000, 1)
logits [[ 6.274006  -2.1500363  2.7297518 -9.358552 ]]
Iteration 100 of 1000: loss=0.977 " + "l1=0.846" + "l2=0.131 f=-0.609 shape=(1, 9000, 1)
logits [[ 5.387198  -2.0627675  2.784457  -8.544668 ]]
Iteration 200 of 1000: loss=0.917 " + "l1=0.728" + "l2=0.188 f=-0.593 shape=(1, 9000, 1)
logits [[ 5.0331287 -2.0332355  2.791758  -8.162642 ]]
Iteration 300 of 1000: loss=0.875 " + "l1=0.66" + "l2=0.215 f=-0.586 shape=(1, 9000, 1)
logits [[ 4.819308  -2.0194626  2.7900517 -7.9355717]]
Iteration 400 of 1000: loss=0.842 " + "l1=0.61" + "l2=0.231 f=-0.578 shape=(1, 9000, 1)
logits [[ 4.6690526 -2.0115983  2.7909522 -7.761484 ]]
Iteration 500 of 1000: loss=0.805 " + "l1=0.572" + "l2=0.233 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.562248  -2.0142498  2.8013632 -7.6105003]]
Iteration 600 of 1000: loss=0.767 " + "l1=0.526" + "l2=0.241 f=-0.557 shape=(1, 9000, 1)
logits [[ 4.422507  -2.0209801  2.8034258 -7.4312816]]
Iteration 700 of 1000: loss=0.73 " + "l1=0.476" + "l2=0.254 f=-0.551 shape=(1, 9000, 1)
logits [[ 4.2699337 -2.030211   2.804215  -7.249663 ]]
Iteration 800 of 1000: loss=0.687 " + "l1=0.433" + "l2=0.255 f=-0.547 shape=(1, 9000, 1)
logits [[ 4.1591516 -2.0560026  2.827829  -7.1170936]]
Iteration 900 of 1000: loss=0.623 " + "l1=0.35" + "l2=0.273 f=-0.542 shape=(1, 9000, 1)
logits [[ 3.912207  -2.103409   2.8351378 -6.81046  ]]
--- 270.81859970092773 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.156 " + "l1=0.156" + "l2=0 f=-0.626 shape=(1, 9000, 1)
logits [[ 6.274006  -2.1500363  2.7297518 -9.358552 ]]
Iteration 100 of 1000: loss=0.156 " + "l1=0.155" + "l2=0.000496 f=-0.624 shape=(1, 9000, 1)
logits [[ 6.2220807 -2.140343   2.7200258 -9.298774 ]]
Iteration 200 of 1000: loss=0.156 " + "l1=0.155" + "l2=0.000524 f=-0.624 shape=(1, 9000, 1)
logits [[ 6.2164135 -2.1391704  2.7188709 -9.292129 ]]
Iteration 300 of 1000: loss=0.156 " + "l1=0.155" + "l2=0.000615 f=-0.624 shape=(1, 9000, 1)
logits [[ 6.210231  -2.1377203  2.717574  -9.284582 ]]
Iteration 400 of 1000: loss=0.156 " + "l1=0.155" + "l2=0.000706 f=-0.623 shape=(1, 9000, 1)
logits [[ 6.204992  -2.1365566  2.7165267 -9.278044 ]]
Iteration 500 of 1000: loss=0.156 " + "l1=0.155" + "l2=0.000804 f=-0.623 shape=(1, 9000, 1)
logits [[ 6.200446  -2.1355336  2.7156613 -9.272417 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.56 " + "l1=1.56" + "l2=0 f=-0.626 shape=(1, 9000, 1)
logits [[ 6.274006  -2.1500363  2.7297518 -9.358552 ]]
Iteration 100 of 1000: loss=1.5 " + "l1=1.45" + "l2=0.0491 f=-0.611 shape=(1, 9000, 1)
logits [[ 5.735029 -2.047792  2.623463 -8.75353 ]]
Iteration 200 of 1000: loss=1.47 " + "l1=1.39" + "l2=0.0816 f=-0.596 shape=(1, 9000, 1)
logits [[ 5.4721403 -1.9907233  2.5874329 -8.451386 ]]
Iteration 300 of 1000: loss=1.45 " + "l1=1.35" + "l2=0.105 f=-0.584 shape=(1, 9000, 1)
logits [[ 5.2779555 -1.9522048  2.549202  -8.210486 ]]
Iteration 400 of 1000: loss=1.43 " + "l1=1.3" + "l2=0.13 f=-0.569 shape=(1, 9000, 1)
logits [[ 5.0660944 -1.9197633  2.5182714 -7.9415674]]
Iteration 500 of 1000: loss=1.41 " + "l1=1.26" + "l2=0.145 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.8980894 -1.8974593  2.4994886 -7.716381 ]]
Iteration 600 of 1000: loss=1.39 " + "l1=1.23" + "l2=0.152 f=-0.543 shape=(1, 9000, 1)
logits [[ 4.781301  -1.8773383  2.480406  -7.5567293]]
Iteration 700 of 1000: loss=1.36 " + "l1=1.21" + "l2=0.156 f=-0.534 shape=(1, 9000, 1)
logits [[ 4.6731563 -1.8519703  2.4564173 -7.4126153]]
Iteration 800 of 1000: loss=1.34 " + "l1=1.17" + "l2=0.166 f=-0.525 shape=(1, 9000, 1)
logits [[ 4.510112  -1.8044118  2.4027212 -7.209646 ]]
Iteration 900 of 1000: loss=1.31 " + "l1=1.13" + "l2=0.177 f=-0.517 shape=(1, 9000, 1)
logits [[ 4.330642  -1.7562826  2.338018  -6.979497 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=15.6 " + "l1=15.6" + "l2=0 f=-0.626 shape=(1, 9000, 1)
logits [[ 6.274006  -2.1500363  2.7297518 -9.358552 ]]
Iteration 100 of 1000: loss=7.6 " + "l1=3.75" + "l2=3.85 f=-0.395 shape=(1, 9000, 1)
logits [[ 1.2179785 -1.4971747  1.2246271 -2.5265224]]
Iteration 200 of 1000: loss=6.05 " + "l1=1.95" + "l2=4.1 f=-0.277 shape=(1, 9000, 1)
logits [[ 0.71321124 -1.3380443   0.73395324 -1.2171009 ]]
Iteration 300 of 1000: loss=5.33 " + "l1=1.16" + "l2=4.17 f=-0.217 shape=(1, 9000, 1)
logits [[ 0.5004896  -1.2117584   0.50182986 -0.6584838 ]]
Iteration 400 of 1000: loss=4.97 " + "l1=0.91" + "l2=4.06 f=-0.195 shape=(1, 9000, 1)
logits [[ 0.43371943 -1.191782    0.44345838 -0.466117  ]]
Iteration 500 of 1000: loss=4.5 " + "l1=0.582" + "l2=3.92 f=-0.178 shape=(1, 9000, 1)
logits [[ 0.29573077 -1.1511178   0.3618653  -0.22001544]]
Iteration 600 of 1000: loss=3.81 " + "l1=0.0753" + "l2=3.74 f=-0.171 shape=(1, 9000, 1)
logits [[ 0.00339747 -1.0575765   0.22178768  0.1464616 ]]
Iteration 700 of 1000: loss=3.28 " + "l1=0.00849" + "l2=3.27 f=-0.178 shape=(1, 9000, 1)
logits [[-0.09389064 -1.0587211   0.22502351  0.21653   ]]
Iteration 800 of 1000: loss=2.88 " + "l1=0" + "l2=2.88 f=-0.18 shape=(1, 9000, 1)
logits [[-0.1629375  -1.0758013   0.25386074  0.26349625]]
Iteration 900 of 1000: loss=2.59 " + "l1=0.0318" + "l2=2.56 f=-0.179 shape=(1, 9000, 1)
logits [[-0.16864079 -1.1099485   0.2964158   0.2645759 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=8.6 " + "l1=8.6" + "l2=0 f=-0.626 shape=(1, 9000, 1)
logits [[ 6.274006  -2.1500363  2.7297518 -9.358552 ]]
Iteration 100 of 1000: loss=5.95 " + "l1=4.25" + "l2=1.7 f=-0.49 shape=(1, 9000, 1)
logits [[ 2.7476022 -1.6253016  1.8960066 -4.980282 ]]
Iteration 200 of 1000: loss=4.86 " + "l1=2.6" + "l2=2.26 f=-0.425 shape=(1, 9000, 1)
logits [[ 1.5109197 -1.5085251  1.5105351 -3.2111385]]
Iteration 300 of 1000: loss=4.41 " + "l1=2.21" + "l2=2.19 f=-0.396 shape=(1, 9000, 1)
logits [[ 1.3287728 -1.5457224  1.3277166 -2.6951778]]
Iteration 400 of 1000: loss=4.12 " + "l1=1.95" + "l2=2.17 f=-0.369 shape=(1, 9000, 1)
logits [[ 1.2089491 -1.5620021  1.2158717 -2.3369038]]
Iteration 500 of 1000: loss=3.88 " + "l1=1.77" + "l2=2.11 f=-0.34 shape=(1, 9000, 1)
logits [[ 1.1255643 -1.5432812  1.1390313 -2.0803754]]
Iteration 600 of 1000: loss=3.51 " + "l1=1.51" + "l2=2 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.9661827 -1.4686861  1.0140266 -1.7315793]]
Iteration 700 of 1000: loss=3.02 " + "l1=1.16" + "l2=1.86 f=-0.259 shape=(1, 9000, 1)
logits [[ 0.6891806 -1.3801178  0.883099  -1.2300099]]
Iteration 800 of 1000: loss=2.53 " + "l1=0.794" + "l2=1.74 f=-0.222 shape=(1, 9000, 1)
logits [[ 0.42875668 -1.3604506   0.74395543 -0.70044255]]
Iteration 900 of 1000: loss=2 " + "l1=0.408" + "l2=1.59 f=-0.196 shape=(1, 9000, 1)
logits [[ 0.16495952 -1.3670247   0.57884866 -0.16234574]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=12.1 " + "l1=12.1" + "l2=0 f=-0.626 shape=(1, 9000, 1)
logits [[ 6.274006  -2.1500363  2.7297518 -9.358552 ]]
Iteration 100 of 1000: loss=6.9 " + "l1=3.66" + "l2=3.23 f=-0.44 shape=(1, 9000, 1)
logits [[ 1.4744858 -1.5187985  1.5051122 -3.2219498]]
Iteration 200 of 1000: loss=5.65 " + "l1=2.5" + "l2=3.15 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.0920419 -1.4814674  1.100873  -2.1250305]]
Iteration 300 of 1000: loss=5.14 " + "l1=1.83" + "l2=3.31 f=-0.292 shape=(1, 9000, 1)
logits [[ 0.85954344 -1.4115231   0.8737866  -1.4909432 ]]
Iteration 400 of 1000: loss=4.77 " + "l1=1.47" + "l2=3.3 f=-0.259 shape=(1, 9000, 1)
logits [[ 0.7335057 -1.3557338  0.7395809 -1.153344 ]]
Iteration 500 of 1000: loss=4.36 " + "l1=1.23" + "l2=3.12 f=-0.215 shape=(1, 9000, 1)
logits [[ 0.6510438 -1.3117129  0.6970643 -0.8952157]]
Iteration 600 of 1000: loss=3.79 " + "l1=0.778" + "l2=3.01 f=-0.175 shape=(1, 9000, 1)
logits [[ 0.37082806 -1.2310517   0.5812083  -0.42258987]]
Iteration 700 of 1000: loss=3.21 " + "l1=0.333" + "l2=2.87 f=-0.157 shape=(1, 9000, 1)
logits [[ 0.11219415 -1.1389903   0.4154191  -0.01475154]]
Iteration 800 of 1000: loss=2.77 " + "l1=0.114" + "l2=2.66 f=-0.165 shape=(1, 9000, 1)
logits [[-0.09064212 -1.1122402   0.34601012  0.19831783]]
Iteration 900 of 1000: loss=2.46 " + "l1=0.038" + "l2=2.42 f=-0.169 shape=(1, 9000, 1)
logits [[-0.17131631 -1.1202105   0.33195618  0.2829797 ]]
--- 283.7355306148529 seconds ---
Adv result:3
Loading record A05955
(1, 10498)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0594 " + "l1=0.0594" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 3.5343058 -2.4029067  2.1119187 -6.1895247]]
Iteration 100 of 1000: loss=0.0588 " + "l1=0.0585" + "l2=0.000318 f=-0.731 shape=(1, 9000, 1)
logits [[ 3.487869  -2.361806   2.090337  -6.1416707]]
Iteration 200 of 1000: loss=0.0586 " + "l1=0.0583" + "l2=0.000331 f=-0.73 shape=(1, 9000, 1)
logits [[ 3.4778047 -2.350405   2.0847943 -6.133153 ]]
Iteration 300 of 1000: loss=0.0584 " + "l1=0.058" + "l2=0.000412 f=-0.729 shape=(1, 9000, 1)
logits [[ 3.4652197 -2.3371012  2.078249  -6.1222086]]
Iteration 400 of 1000: loss=0.0583 " + "l1=0.0578" + "l2=0.000538 f=-0.728 shape=(1, 9000, 1)
logits [[ 3.4520316 -2.3232322  2.0714128 -6.110809 ]]
Iteration 500 of 1000: loss=0.0581 " + "l1=0.0575" + "l2=0.000638 f=-0.726 shape=(1, 9000, 1)
logits [[ 3.4374979 -2.3077254  2.063911  -6.0982466]]
Iteration 600 of 1000: loss=0.0579 " + "l1=0.0571" + "l2=0.000803 f=-0.725 shape=(1, 9000, 1)
logits [[ 3.4220612 -2.2915275  2.0561304 -6.085358 ]]
Iteration 700 of 1000: loss=0.0578 " + "l1=0.0568" + "l2=0.000981 f=-0.723 shape=(1, 9000, 1)
logits [[ 3.404409  -2.2729     2.0472121 -6.071494 ]]
Iteration 800 of 1000: loss=0.0576 " + "l1=0.0564" + "l2=0.00119 f=-0.722 shape=(1, 9000, 1)
logits [[ 3.3860183 -2.2535284  2.038122  -6.0577083]]
Iteration 900 of 1000: loss=0.0574 " + "l1=0.056" + "l2=0.00139 f=-0.72 shape=(1, 9000, 1)
logits [[ 3.3676405 -2.2348616  2.0291812 -6.043522 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.594 " + "l1=0.594" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 3.5343058 -2.4029067  2.1119187 -6.1895247]]
Iteration 100 of 1000: loss=0.537 " + "l1=0.512" + "l2=0.0253 f=-0.692 shape=(1, 9000, 1)
logits [[ 3.1117594 -2.0082965  1.909932  -5.7814717]]
Iteration 200 of 1000: loss=0.459 " + "l1=0.404" + "l2=0.055 f=-0.688 shape=(1, 9000, 1)
logits [[ 2.5888243 -1.4498004  1.6914601 -5.5818515]]
Iteration 300 of 1000: loss=0.395 " + "l1=0.325" + "l2=0.0707 f=-0.681 shape=(1, 9000, 1)
logits [[ 2.2108345 -1.0360163  1.5829898 -5.480952 ]]
Iteration 400 of 1000: loss=0.35 " + "l1=0.278" + "l2=0.0726 f=-0.686 shape=(1, 9000, 1)
logits [[ 1.9793476 -0.7990755  1.5189483 -5.4442396]]
Iteration 500 of 1000: loss=0.322 " + "l1=0.243" + "l2=0.0785 f=-0.689 shape=(1, 9000, 1)
logits [[ 1.7982773  -0.63603723  1.4679931  -5.38462   ]]
Iteration 600 of 1000: loss=0.304 " + "l1=0.222" + "l2=0.0822 f=-0.688 shape=(1, 9000, 1)
logits [[ 1.6753058 -0.5445667  1.4329154 -5.3139358]]
Iteration 700 of 1000: loss=0.292 " + "l1=0.206" + "l2=0.0857 f=-0.685 shape=(1, 9000, 1)
logits [[ 1.576608  -0.4837854  1.414919  -5.2478127]]
Iteration 800 of 1000: loss=0.281 " + "l1=0.192" + "l2=0.089 f=-0.685 shape=(1, 9000, 1)
logits [[ 1.4895328  -0.43470445  1.4027944  -5.1957126 ]]
Iteration 900 of 1000: loss=0.272 " + "l1=0.179" + "l2=0.0921 f=-0.682 shape=(1, 9000, 1)
logits [[ 1.4081146  -0.38600782  1.3859333  -5.136185  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.94 " + "l1=5.94" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 3.5343058 -2.4029067  2.1119187 -6.1895247]]
Iteration 100 of 1000: loss=1.57 " + "l1=0.536" + "l2=1.03 f=-0.6 shape=(1, 9000, 1)
logits [[ 0.84757304  0.32212728  0.8581707  -4.4268775 ]]
Iteration 200 of 1000: loss=0.919 " + "l1=0.0312" + "l2=0.888 f=-0.628 shape=(1, 9000, 1)
logits [[ 0.6765234  0.6638363  0.6950692 -4.5468736]]
Iteration 300 of 1000: loss=0.719 " + "l1=0.00141" + "l2=0.717 f=-0.655 shape=(1, 9000, 1)
logits [[ 0.68672866  0.6935689   0.6949819  -4.695324  ]]
Iteration 400 of 1000: loss=0.644 " + "l1=0.00143" + "l2=0.643 f=-0.67 shape=(1, 9000, 1)
logits [[ 0.6875403   0.7008358   0.70226645 -4.772566  ]]
Iteration 500 of 1000: loss=0.597 " + "l1=0" + "l2=0.597 f=-0.684 shape=(1, 9000, 1)
logits [[ 0.69100654  0.70600367  0.7035928  -4.8350477 ]]
Iteration 600 of 1000: loss=0.574 " + "l1=0.00849" + "l2=0.566 f=-0.689 shape=(1, 9000, 1)
logits [[ 0.68542176  0.6972701   0.705757   -4.8440833 ]]
Iteration 700 of 1000: loss=0.555 " + "l1=0" + "l2=0.555 f=-0.688 shape=(1, 9000, 1)
logits [[ 0.6850433  0.6997547  0.6991114 -4.8358264]]
Iteration 800 of 1000: loss=0.542 " + "l1=0.000644" + "l2=0.542 f=-0.689 shape=(1, 9000, 1)
logits [[ 0.67925364  0.6958149   0.69645935 -4.828156  ]]
Iteration 900 of 1000: loss=0.534 " + "l1=0" + "l2=0.534 f=-0.69 shape=(1, 9000, 1)
logits [[ 0.6740699  0.6951111  0.6906341 -4.819952 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.27 " + "l1=3.27" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 3.5343058 -2.4029067  2.1119187 -6.1895247]]
Iteration 100 of 1000: loss=1.31 " + "l1=0.653" + "l2=0.662 f=-0.614 shape=(1, 9000, 1)
logits [[ 1.1031088  -0.07398172  1.1127481  -4.5984216 ]]
Iteration 200 of 1000: loss=0.902 " + "l1=0.355" + "l2=0.546 f=-0.636 shape=(1, 9000, 1)
logits [[ 0.9033706   0.27084255  0.9168853  -4.636212  ]]
Iteration 300 of 1000: loss=0.749 " + "l1=0.225" + "l2=0.524 f=-0.651 shape=(1, 9000, 1)
logits [[ 0.8269745   0.43484983  0.8436482  -4.7079225 ]]
Iteration 400 of 1000: loss=0.624 " + "l1=0.122" + "l2=0.502 f=-0.675 shape=(1, 9000, 1)
logits [[ 0.74926746  0.56744707  0.7885106  -4.8035946 ]]
Iteration 500 of 1000: loss=0.56 " + "l1=0.0434" + "l2=0.516 f=-0.69 shape=(1, 9000, 1)
logits [[ 0.65459144  0.6655004   0.74436355 -4.8241625 ]]
Iteration 600 of 1000: loss=0.514 " + "l1=0.00429" + "l2=0.509 f=-0.696 shape=(1, 9000, 1)
logits [[ 0.60343844  0.7057225   0.7135171  -4.805199  ]]
Iteration 700 of 1000: loss=0.484 " + "l1=0.00423" + "l2=0.48 f=-0.694 shape=(1, 9000, 1)
logits [[ 0.61061275  0.7034532   0.71114254 -4.8019834 ]]
Iteration 800 of 1000: loss=0.466 " + "l1=0.00224" + "l2=0.464 f=-0.693 shape=(1, 9000, 1)
logits [[ 0.6099086   0.70202196  0.7060875  -4.789205  ]]
Iteration 900 of 1000: loss=0.453 " + "l1=0.00299" + "l2=0.45 f=-0.695 shape=(1, 9000, 1)
logits [[ 0.5929028   0.7010622   0.70650196 -4.779714  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.93 " + "l1=1.93" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 3.5343058 -2.4029067  2.1119187 -6.1895247]]
Iteration 100 of 1000: loss=1.13 " + "l1=0.785" + "l2=0.35 f=-0.633 shape=(1, 9000, 1)
logits [[ 1.7499442  -0.66483104  1.3797585  -4.9970307 ]]
Iteration 200 of 1000: loss=0.759 " + "l1=0.424" + "l2=0.335 f=-0.654 shape=(1, 9000, 1)
logits [[ 1.1798173  -0.11904474  1.1868385  -4.8636785 ]]
Iteration 300 of 1000: loss=0.629 " + "l1=0.341" + "l2=0.288 f=-0.668 shape=(1, 9000, 1)
logits [[ 1.0930939   0.04290221  1.0927185  -4.9017663 ]]
Iteration 400 of 1000: loss=0.572 " + "l1=0.293" + "l2=0.279 f=-0.674 shape=(1, 9000, 1)
logits [[ 1.0373632   0.14054507  1.0409802  -4.9153256 ]]
Iteration 500 of 1000: loss=0.523 " + "l1=0.251" + "l2=0.272 f=-0.676 shape=(1, 9000, 1)
logits [[ 0.99752164  0.2261046   0.99842197 -4.9249997 ]]
Iteration 600 of 1000: loss=0.494 " + "l1=0.223" + "l2=0.271 f=-0.674 shape=(1, 9000, 1)
logits [[ 0.9550672   0.28164864  0.96755606 -4.9003644 ]]
Iteration 700 of 1000: loss=0.474 " + "l1=0.204" + "l2=0.27 f=-0.672 shape=(1, 9000, 1)
logits [[ 0.9281301   0.31563425  0.94327664 -4.8760476 ]]
Iteration 800 of 1000: loss=0.455 " + "l1=0.184" + "l2=0.271 f=-0.67 shape=(1, 9000, 1)
logits [[ 0.9040036   0.35463482  0.9216131  -4.8611026 ]]
Iteration 900 of 1000: loss=0.439 " + "l1=0.168" + "l2=0.271 f=-0.665 shape=(1, 9000, 1)
logits [[ 0.89557207  0.38285664  0.898488   -4.8360085 ]]
--- 310.15993428230286 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0142 " + "l1=0.0142" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 3.5343058 -2.4029067  2.1119187 -6.1895247]]
Iteration 100 of 1000: loss=0.014 " + "l1=0.0139" + "l2=0.000143 f=-0.737 shape=(1, 9000, 1)
logits [[ 3.5064301 -2.404268   2.1168902 -6.1655946]]
Iteration 200 of 1000: loss=0.014 " + "l1=0.0138" + "l2=0.000123 f=-0.737 shape=(1, 9000, 1)
logits [[ 3.5023658 -2.4044902  2.1176703 -6.162107 ]]
Iteration 300 of 1000: loss=0.0139 " + "l1=0.0138" + "l2=0.000173 f=-0.737 shape=(1, 9000, 1)
logits [[ 3.4960823 -2.4054332  2.1192012 -6.156929 ]]
Iteration 400 of 1000: loss=0.0139 " + "l1=0.0137" + "l2=0.000211 f=-0.737 shape=(1, 9000, 1)
logits [[ 3.489375  -2.4064877  2.120836  -6.1514573]]
Iteration 500 of 1000: loss=0.0139 " + "l1=0.0136" + "l2=0.000267 f=-0.737 shape=(1, 9000, 1)
logits [[ 3.4823234 -2.4075108  2.1225326 -6.145666 ]]
Iteration 600 of 1000: loss=0.0138 " + "l1=0.0135" + "l2=0.000325 f=-0.737 shape=(1, 9000, 1)
logits [[ 3.4751198 -2.4082723  2.1242082 -6.139841 ]]
Iteration 700 of 1000: loss=0.0139 " + "l1=0.0134" + "l2=0.00044 f=-0.737 shape=(1, 9000, 1)
logits [[ 3.4680018 -2.4088323  2.1257324 -6.1341   ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.142 " + "l1=0.142" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 3.5343058 -2.4029067  2.1119187 -6.1895247]]
Iteration 100 of 1000: loss=0.126 " + "l1=0.119" + "l2=0.00746 f=-0.736 shape=(1, 9000, 1)
logits [[ 3.3328137 -2.409685   2.146448  -6.012061 ]]
Iteration 200 of 1000: loss=0.117 " + "l1=0.106" + "l2=0.011 f=-0.734 shape=(1, 9000, 1)
logits [[ 3.2260425 -2.4145482  2.1674662 -5.9165764]]
Iteration 300 of 1000: loss=0.108 " + "l1=0.0931" + "l2=0.0145 f=-0.732 shape=(1, 9000, 1)
logits [[ 3.1156168 -2.411639   2.1847265 -5.8171597]]
Iteration 400 of 1000: loss=0.0979 " + "l1=0.0801" + "l2=0.0178 f=-0.73 shape=(1, 9000, 1)
logits [[ 2.995906  -2.393361   2.1953573 -5.7188354]]
Iteration 500 of 1000: loss=0.0861 " + "l1=0.065" + "l2=0.0211 f=-0.731 shape=(1, 9000, 1)
logits [[ 2.842958  -2.3373547  2.1929736 -5.6236887]]
Iteration 600 of 1000: loss=0.0733 " + "l1=0.0487" + "l2=0.0246 f=-0.733 shape=(1, 9000, 1)
logits [[ 2.677945  -2.2830017  2.190598  -5.518461 ]]
Iteration 700 of 1000: loss=0.0612 " + "l1=0.0346" + "l2=0.0266 f=-0.734 shape=(1, 9000, 1)
logits [[ 2.535075  -2.2480905  2.1893246 -5.4142637]]
Iteration 800 of 1000: loss=0.0515 " + "l1=0.0232" + "l2=0.0282 f=-0.733 shape=(1, 9000, 1)
logits [[ 2.41945   -2.2094755  2.1870067 -5.3301525]]
Iteration 900 of 1000: loss=0.0435 " + "l1=0.0132" + "l2=0.0303 f=-0.734 shape=(1, 9000, 1)
logits [[ 2.3152044 -2.1704807  2.182957  -5.2644787]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.42 " + "l1=1.42" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 3.5343058 -2.4029067  2.1119187 -6.1895247]]
Iteration 100 of 1000: loss=0.248 " + "l1=0" + "l2=0.248 f=-0.732 shape=(1, 9000, 1)
logits [[ 2.2331102 -2.2722971  2.2388096 -5.127393 ]]
Iteration 200 of 1000: loss=0.138 " + "l1=0.0132" + "l2=0.125 f=-0.732 shape=(1, 9000, 1)
logits [[ 2.2242448 -2.2326958  2.2109969 -5.129522 ]]
Iteration 300 of 1000: loss=0.0867 " + "l1=0.00402" + "l2=0.0827 f=-0.731 shape=(1, 9000, 1)
logits [[ 2.2069302 -2.191959   2.2029114 -5.14189  ]]
Iteration 400 of 1000: loss=0.0643 " + "l1=0" + "l2=0.0643 f=-0.732 shape=(1, 9000, 1)
logits [[ 2.192146  -2.1647325  2.1957107 -5.149958 ]]
Iteration 500 of 1000: loss=0.0531 " + "l1=0" + "l2=0.0531 f=-0.732 shape=(1, 9000, 1)
logits [[ 2.1869433 -2.149853   2.191386  -5.157656 ]]
Iteration 600 of 1000: loss=0.0466 " + "l1=0" + "l2=0.0466 f=-0.731 shape=(1, 9000, 1)
logits [[ 2.1821077 -2.1390207  2.191245  -5.1576376]]
Iteration 700 of 1000: loss=0.0418 " + "l1=0.0013" + "l2=0.0405 f=-0.73 shape=(1, 9000, 1)
logits [[ 2.1911323 -2.1359158  2.1898296 -5.165202 ]]
Iteration 800 of 1000: loss=0.039 " + "l1=0" + "l2=0.039 f=-0.729 shape=(1, 9000, 1)
logits [[ 2.1760309 -2.134168   2.1919723 -5.1502566]]
Iteration 900 of 1000: loss=0.0343 " + "l1=0" + "l2=0.0343 f=-0.728 shape=(1, 9000, 1)
logits [[ 2.184463  -2.1294146  2.1865768 -5.1549335]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.782 " + "l1=0.782" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 3.5343058 -2.4029067  2.1119187 -6.1895247]]
Iteration 100 of 1000: loss=0.292 " + "l1=0.0799" + "l2=0.212 f=-0.732 shape=(1, 9000, 1)
logits [[ 2.3949609 -2.3331144  2.2496917 -5.2400117]]
Iteration 200 of 1000: loss=0.12 " + "l1=0" + "l2=0.12 f=-0.734 shape=(1, 9000, 1)
logits [[ 2.212416  -2.2368631  2.2137072 -5.1252446]]
Iteration 300 of 1000: loss=0.0754 " + "l1=0" + "l2=0.0754 f=-0.732 shape=(1, 9000, 1)
logits [[ 2.1897268 -2.1772552  2.1939495 -5.1363297]]
Iteration 400 of 1000: loss=0.0576 " + "l1=0" + "l2=0.0576 f=-0.732 shape=(1, 9000, 1)
logits [[ 2.1796544 -2.1526062  2.18604   -5.1429334]]
Iteration 500 of 1000: loss=0.0472 " + "l1=0" + "l2=0.0472 f=-0.732 shape=(1, 9000, 1)
logits [[ 2.1838658 -2.144028   2.1843462 -5.1533294]]
Iteration 600 of 1000: loss=0.041 " + "l1=0" + "l2=0.041 f=-0.731 shape=(1, 9000, 1)
logits [[ 2.1825097 -2.1355414  2.182812  -5.1540484]]
Iteration 700 of 1000: loss=0.0372 " + "l1=0" + "l2=0.0372 f=-0.729 shape=(1, 9000, 1)
logits [[ 2.1695466 -2.1168044  2.1760192 -5.146739 ]]
Iteration 800 of 1000: loss=0.0338 " + "l1=0" + "l2=0.0338 f=-0.728 shape=(1, 9000, 1)
logits [[ 2.155877  -2.089343   2.1646612 -5.1431146]]
Iteration 900 of 1000: loss=0.0309 " + "l1=0" + "l2=0.0309 f=-0.727 shape=(1, 9000, 1)
logits [[ 2.1532454 -2.0777276  2.1572764 -5.1402454]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.462 " + "l1=0.462" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 3.5343058 -2.4029067  2.1119187 -6.1895247]]
Iteration 100 of 1000: loss=0.283 " + "l1=0.196" + "l2=0.0868 f=-0.735 shape=(1, 9000, 1)
logits [[ 2.8167822 -2.386583   2.2138183 -5.58308  ]]
Iteration 200 of 1000: loss=0.169 " + "l1=0.0567" + "l2=0.112 f=-0.735 shape=(1, 9000, 1)
logits [[ 2.3970115 -2.2967708  2.2224796 -5.264464 ]]
Iteration 300 of 1000: loss=0.0837 " + "l1=0.000693" + "l2=0.083 f=-0.733 shape=(1, 9000, 1)
logits [[ 2.201536  -2.1973016  2.199403  -5.1347065]]
Iteration 400 of 1000: loss=0.0591 " + "l1=0" + "l2=0.0591 f=-0.733 shape=(1, 9000, 1)
logits [[ 2.1809013 -2.1556773  2.1854162 -5.1410985]]
Iteration 500 of 1000: loss=0.0469 " + "l1=6.45e-05" + "l2=0.0468 f=-0.732 shape=(1, 9000, 1)
logits [[ 2.1849651 -2.1474373  2.1847668 -5.151136 ]]
Iteration 600 of 1000: loss=0.0405 " + "l1=0" + "l2=0.0405 f=-0.73 shape=(1, 9000, 1)
logits [[ 2.1765916 -2.1284428  2.177907  -5.147806 ]]
Iteration 700 of 1000: loss=0.036 " + "l1=0" + "l2=0.036 f=-0.729 shape=(1, 9000, 1)
logits [[ 2.161412  -2.0925026  2.1634707 -5.146407 ]]
Iteration 800 of 1000: loss=0.0322 " + "l1=8.07e-05" + "l2=0.0322 f=-0.728 shape=(1, 9000, 1)
logits [[ 2.1554596 -2.0767448  2.1552112 -5.144195 ]]
Iteration 900 of 1000: loss=0.0299 " + "l1=0.00101" + "l2=0.0289 f=-0.727 shape=(1, 9000, 1)
logits [[ 2.150107  -2.0576913  2.1470058 -5.1467957]]
--- 292.5686469078064 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0972 " + "l1=0.0972" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 3.5343058 -2.4029067  2.1119187 -6.1895247]]
Iteration 100 of 1000: loss=0.0963 " + "l1=0.0957" + "l2=0.000536 f=-0.73 shape=(1, 9000, 1)
logits [[ 3.4714317 -2.3810132  2.0920126 -6.1010838]]
Iteration 200 of 1000: loss=0.0959 " + "l1=0.0953" + "l2=0.000597 f=-0.728 shape=(1, 9000, 1)
logits [[ 3.4550679 -2.374656   2.0872357 -6.079763 ]]
Iteration 300 of 1000: loss=0.0957 " + "l1=0.0949" + "l2=0.000747 f=-0.726 shape=(1, 9000, 1)
logits [[ 3.4359963 -2.3678987  2.0820224 -6.0551114]]
Iteration 400 of 1000: loss=0.0954 " + "l1=0.0945" + "l2=0.000931 f=-0.724 shape=(1, 9000, 1)
logits [[ 3.4163556 -2.3611352  2.0769255 -6.0295362]]
Iteration 500 of 1000: loss=0.0951 " + "l1=0.094" + "l2=0.00111 f=-0.722 shape=(1, 9000, 1)
logits [[ 3.3970642 -2.3543048  2.0718517 -6.0044165]]
Iteration 600 of 1000: loss=0.0949 " + "l1=0.0936" + "l2=0.00132 f=-0.721 shape=(1, 9000, 1)
logits [[ 3.3774688 -2.3471637  2.0664065 -5.979356 ]]
Iteration 700 of 1000: loss=0.0947 " + "l1=0.0931" + "l2=0.00155 f=-0.719 shape=(1, 9000, 1)
logits [[ 3.3580885 -2.3392584  2.0608299 -5.9550643]]
Iteration 800 of 1000: loss=0.0944 " + "l1=0.0927" + "l2=0.00173 f=-0.717 shape=(1, 9000, 1)
logits [[ 3.337114  -2.3305397  2.0549676 -5.929274 ]]
Iteration 900 of 1000: loss=0.0941 " + "l1=0.0922" + "l2=0.00191 f=-0.715 shape=(1, 9000, 1)
logits [[ 3.3153348 -2.3214233  2.0493028 -5.9038105]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.972 " + "l1=0.972" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 3.5343058 -2.4029067  2.1119187 -6.1895247]]
Iteration 100 of 1000: loss=0.879 " + "l1=0.834" + "l2=0.0448 f=-0.671 shape=(1, 9000, 1)
logits [[ 2.9563355 -2.1860082  1.9337044 -5.3873353]]
Iteration 200 of 1000: loss=0.819 " + "l1=0.751" + "l2=0.0684 f=-0.634 shape=(1, 9000, 1)
logits [[ 2.5853312 -2.0138326  1.8131126 -4.9209085]]
Iteration 300 of 1000: loss=0.757 " + "l1=0.671" + "l2=0.0858 f=-0.607 shape=(1, 9000, 1)
logits [[ 2.2038376 -1.828884   1.7037786 -4.508591 ]]
Iteration 400 of 1000: loss=0.711 " + "l1=0.61" + "l2=0.101 f=-0.583 shape=(1, 9000, 1)
logits [[ 1.9002988 -1.6564332  1.6214911 -4.1987658]]
Iteration 500 of 1000: loss=0.675 " + "l1=0.557" + "l2=0.117 f=-0.56 shape=(1, 9000, 1)
logits [[ 1.6665814 -1.563358   1.5627105 -3.906602 ]]
Iteration 600 of 1000: loss=0.644 " + "l1=0.519" + "l2=0.125 f=-0.535 shape=(1, 9000, 1)
logits [[ 1.5198399 -1.5104222  1.5186138 -3.6678455]]
Iteration 700 of 1000: loss=0.621 " + "l1=0.496" + "l2=0.125 f=-0.508 shape=(1, 9000, 1)
logits [[ 1.469421  -1.4814373  1.4679354 -3.4874299]]
Iteration 800 of 1000: loss=0.598 " + "l1=0.466" + "l2=0.132 f=-0.478 shape=(1, 9000, 1)
logits [[ 1.3936603 -1.4409567  1.3970301 -3.2629466]]
Iteration 900 of 1000: loss=0.576 " + "l1=0.439" + "l2=0.137 f=-0.451 shape=(1, 9000, 1)
logits [[ 1.3257092 -1.396872   1.3268118 -3.061292 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.72 " + "l1=9.72" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 3.5343058 -2.4029067  2.1119187 -6.1895247]]
Iteration 100 of 1000: loss=3.82 " + "l1=1.76" + "l2=2.06 f=-0.296 shape=(1, 9000, 1)
logits [[ 0.37549856 -0.77670896  0.49084613 -1.272759  ]]
Iteration 200 of 1000: loss=1.89 " + "l1=0.00513" + "l2=1.88 f=-0.216 shape=(1, 9000, 1)
logits [[-0.3032785  -0.6856604   0.06564147  0.06051474]]
Iteration 300 of 1000: loss=1.41 " + "l1=0" + "l2=1.41 f=-0.206 shape=(1, 9000, 1)
logits [[-0.24785376 -0.76691175  0.08737019  0.10203827]]
Iteration 400 of 1000: loss=1.18 " + "l1=0" + "l2=1.18 f=-0.198 shape=(1, 9000, 1)
logits [[-0.23117289 -0.7904124   0.09471492  0.13347238]]
Iteration 500 of 1000: loss=1.04 " + "l1=0.000685" + "l2=1.04 f=-0.2 shape=(1, 9000, 1)
logits [[-0.20917657 -0.8223437   0.11627954  0.11559469]]
Iteration 600 of 1000: loss=0.952 " + "l1=0" + "l2=0.952 f=-0.194 shape=(1, 9000, 1)
logits [[-0.21998444 -0.83997554  0.13549656  0.14999986]]
Iteration 700 of 1000: loss=0.883 " + "l1=0" + "l2=0.883 f=-0.194 shape=(1, 9000, 1)
logits [[-0.21722946 -0.8764014   0.15875942  0.15971926]]
Iteration 800 of 1000: loss=0.835 " + "l1=0" + "l2=0.835 f=-0.196 shape=(1, 9000, 1)
logits [[-0.21796359 -0.91995114  0.17669043  0.17774287]]
Iteration 900 of 1000: loss=0.797 " + "l1=0" + "l2=0.797 f=-0.2 shape=(1, 9000, 1)
logits [[-0.22873992 -0.9499075   0.18976533  0.19032928]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.35 " + "l1=5.35" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 3.5343058 -2.4029067  2.1119187 -6.1895247]]
Iteration 100 of 1000: loss=3.02 " + "l1=2.17" + "l2=0.845 f=-0.443 shape=(1, 9000, 1)
logits [[ 1.1695137 -1.3368903  1.1714343 -2.7774036]]
Iteration 200 of 1000: loss=1.96 " + "l1=0.783" + "l2=1.18 f=-0.268 shape=(1, 9000, 1)
logits [[ 0.33795893 -0.8579333   0.4351213  -0.98906255]]
Iteration 300 of 1000: loss=1.25 " + "l1=0.00944" + "l2=1.24 f=-0.18 shape=(1, 9000, 1)
logits [[-0.1995658  -0.79009646  0.14268784  0.12552369]]
Iteration 400 of 1000: loss=0.98 " + "l1=0.00389" + "l2=0.976 f=-0.187 shape=(1, 9000, 1)
logits [[-0.20318075 -0.84605044  0.15364161  0.14657426]]
Iteration 500 of 1000: loss=0.862 " + "l1=0" + "l2=0.862 f=-0.195 shape=(1, 9000, 1)
logits [[-0.24404958 -0.8738902   0.1680484   0.1715973 ]]
Iteration 600 of 1000: loss=0.795 " + "l1=0.00188" + "l2=0.793 f=-0.2 shape=(1, 9000, 1)
logits [[-0.26214656 -0.9126402   0.18994969  0.18652877]]
Iteration 700 of 1000: loss=0.752 " + "l1=0" + "l2=0.752 f=-0.202 shape=(1, 9000, 1)
logits [[-0.27274522 -0.952758    0.20626555  0.21105623]]
Iteration 800 of 1000: loss=0.723 " + "l1=0.00938" + "l2=0.713 f=-0.207 shape=(1, 9000, 1)
logits [[-0.2635388  -0.9980516   0.22569013  0.20863679]]
Iteration 900 of 1000: loss=0.69 " + "l1=0.000342" + "l2=0.689 f=-0.209 shape=(1, 9000, 1)
logits [[-0.28072658 -1.0278771   0.23709443  0.23647329]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.16 " + "l1=3.16" + "l2=0 f=-0.737 shape=(1, 9000, 1)
logits [[ 3.5343058 -2.4029067  2.1119187 -6.1895247]]
Iteration 100 of 1000: loss=2.19 " + "l1=1.75" + "l2=0.44 f=-0.538 shape=(1, 9000, 1)
logits [[ 1.6829538 -1.6849962  1.5437958 -3.6932254]]
Iteration 200 of 1000: loss=1.76 " + "l1=1.3" + "l2=0.457 f=-0.435 shape=(1, 9000, 1)
logits [[ 1.2124761 -1.3751329  1.2164116 -2.7926009]]
Iteration 300 of 1000: loss=1.42 " + "l1=0.854" + "l2=0.566 f=-0.311 shape=(1, 9000, 1)
logits [[ 0.8542755  -1.1841211   0.85671586 -1.7711643 ]]
Iteration 400 of 1000: loss=1.16 " + "l1=0.454" + "l2=0.704 f=-0.234 shape=(1, 9000, 1)
logits [[ 0.3898229  -1.0153575   0.542612   -0.85310054]]
Iteration 500 of 1000: loss=0.965 " + "l1=0.193" + "l2=0.772 f=-0.196 shape=(1, 9000, 1)
logits [[ 0.04457295 -0.9792552   0.37306213 -0.2222088 ]]
Iteration 600 of 1000: loss=0.821 " + "l1=0.00712" + "l2=0.814 f=-0.176 shape=(1, 9000, 1)
logits [[-0.24498731 -0.94279814  0.25192153  0.23000407]]
Iteration 700 of 1000: loss=0.743 " + "l1=0" + "l2=0.743 f=-0.18 shape=(1, 9000, 1)
logits [[-0.28305772 -0.9900703   0.27540943  0.27758914]]
Iteration 800 of 1000: loss=0.689 " + "l1=0" + "l2=0.689 f=-0.183 shape=(1, 9000, 1)
logits [[-0.3123638  -1.0189198   0.29843625  0.29972515]]
Iteration 900 of 1000: loss=0.649 " + "l1=8.23e-05" + "l2=0.649 f=-0.184 shape=(1, 9000, 1)
logits [[-0.32411125 -1.0394105   0.3129067   0.31265336]]
--- 313.239718914032 seconds ---
Adv result:3
Loading record A05987
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.088 " + "l1=0.088" + "l2=0 f=-0.81 shape=(1, 9000, 1)
logits [[  6.764578   -2.0304263   2.8937912 -10.866965 ]]
Iteration 100 of 1000: loss=0.0876 " + "l1=0.0873" + "l2=0.00025 f=-0.809 shape=(1, 9000, 1)
logits [[  6.73224    -2.0023942   2.8817735 -10.846211 ]]
Iteration 200 of 1000: loss=0.0875 " + "l1=0.0872" + "l2=0.00024 f=-0.808 shape=(1, 9000, 1)
logits [[  6.726734   -1.9974881   2.8790839 -10.841922 ]]
Iteration 300 of 1000: loss=0.0874 " + "l1=0.0871" + "l2=0.000313 f=-0.808 shape=(1, 9000, 1)
logits [[  6.719003   -1.9903513   2.875315  -10.836509 ]]
Iteration 400 of 1000: loss=0.0873 " + "l1=0.0869" + "l2=0.00037 f=-0.808 shape=(1, 9000, 1)
logits [[  6.711184   -1.9831843   2.871388  -10.830964 ]]
Iteration 500 of 1000: loss=0.0873 " + "l1=0.0868" + "l2=0.000455 f=-0.808 shape=(1, 9000, 1)
logits [[  6.7035255  -1.9764351   2.8675563 -10.825442 ]]
Iteration 600 of 1000: loss=0.0873 " + "l1=0.0867" + "l2=0.00059 f=-0.807 shape=(1, 9000, 1)
logits [[  6.6962667  -1.9700189   2.8638804 -10.820097 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.88 " + "l1=0.88" + "l2=0 f=-0.81 shape=(1, 9000, 1)
logits [[  6.764578   -2.0304263   2.8937912 -10.866965 ]]
Iteration 100 of 1000: loss=0.845 " + "l1=0.825" + "l2=0.0198 f=-0.797 shape=(1, 9000, 1)
logits [[  6.477884   -1.77566     2.7853992 -10.676958 ]]
Iteration 200 of 1000: loss=0.824 " + "l1=0.791" + "l2=0.0337 f=-0.788 shape=(1, 9000, 1)
logits [[  6.29835    -1.6070312   2.7102387 -10.551753 ]]
Iteration 300 of 1000: loss=0.807 " + "l1=0.765" + "l2=0.042 f=-0.783 shape=(1, 9000, 1)
logits [[  6.1589203  -1.4906569   2.651954  -10.453586 ]]
Iteration 400 of 1000: loss=0.791 " + "l1=0.741" + "l2=0.0496 f=-0.783 shape=(1, 9000, 1)
logits [[  6.0205584  -1.3922627   2.5934072 -10.35268  ]]
Iteration 500 of 1000: loss=0.775 " + "l1=0.717" + "l2=0.0582 f=-0.783 shape=(1, 9000, 1)
logits [[  5.8737507  -1.2970611   2.528788  -10.235549 ]]
Iteration 600 of 1000: loss=0.759 " + "l1=0.69" + "l2=0.0689 f=-0.785 shape=(1, 9000, 1)
logits [[  5.7003155  -1.1973599   2.460238  -10.101416 ]]
Iteration 700 of 1000: loss=0.743 " + "l1=0.665" + "l2=0.0781 f=-0.786 shape=(1, 9000, 1)
logits [[ 5.5323997 -1.1146718  2.400824  -9.9613495]]
Iteration 800 of 1000: loss=0.723 " + "l1=0.637" + "l2=0.086 f=-0.787 shape=(1, 9000, 1)
logits [[ 5.345718 -1.020662  2.331479 -9.80587 ]]
Iteration 900 of 1000: loss=0.696 " + "l1=0.604" + "l2=0.0922 f=-0.79 shape=(1, 9000, 1)
logits [[ 5.1279306 -0.9095005  2.2443724 -9.621572 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.8 " + "l1=8.8" + "l2=0 f=-0.81 shape=(1, 9000, 1)
logits [[  6.764578   -2.0304263   2.8937912 -10.866965 ]]
Iteration 100 of 1000: loss=3.42 " + "l1=0.632" + "l2=2.79 f=-0.953 shape=(1, 9000, 1)
logits [[ 1.775997  1.147259  1.77952  -8.514343]]
Iteration 200 of 1000: loss=2.16 " + "l1=0.0336" + "l2=2.13 f=-1.01 shape=(1, 9000, 1)
logits [[ 1.5168552  1.4832367  1.4978541 -8.521136 ]]
Iteration 300 of 1000: loss=1.84 " + "l1=0" + "l2=1.84 f=-0.995 shape=(1, 9000, 1)
logits [[ 1.4614371  1.4780192  1.4724381 -8.392821 ]]
Iteration 400 of 1000: loss=1.65 " + "l1=0.00589" + "l2=1.65 f=-0.984 shape=(1, 9000, 1)
logits [[ 1.4566066  1.4514596  1.4573518 -8.302821 ]]
Iteration 500 of 1000: loss=1.56 " + "l1=0" + "l2=1.56 f=-0.981 shape=(1, 9000, 1)
logits [[ 1.4054623  1.4503316  1.4384395 -8.2193165]]
Iteration 600 of 1000: loss=1.49 " + "l1=0" + "l2=1.49 f=-0.975 shape=(1, 9000, 1)
logits [[ 1.3861474  1.4326943  1.4085397 -8.126604 ]]
Iteration 700 of 1000: loss=1.45 " + "l1=0" + "l2=1.45 f=-0.972 shape=(1, 9000, 1)
logits [[ 1.308944   1.4353622  1.3979479 -8.03173  ]]
Iteration 800 of 1000: loss=1.39 " + "l1=0" + "l2=1.39 f=-0.962 shape=(1, 9000, 1)
logits [[ 1.3623638  1.3898011  1.3666893 -7.9681835]]
Iteration 900 of 1000: loss=1.35 " + "l1=0" + "l2=1.35 f=-0.956 shape=(1, 9000, 1)
logits [[ 1.3480258  1.3577999  1.3529334 -7.883207 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.84 " + "l1=4.84" + "l2=0 f=-0.81 shape=(1, 9000, 1)
logits [[  6.764578   -2.0304263   2.8937912 -10.866965 ]]
Iteration 100 of 1000: loss=3.43 " + "l1=2.59" + "l2=0.839 f=-0.79 shape=(1, 9000, 1)
logits [[ 4.384921   -0.31725016  2.1637495  -9.391335  ]]
Iteration 200 of 1000: loss=2.42 " + "l1=0.488" + "l2=1.93 f=-0.961 shape=(1, 9000, 1)
logits [[ 1.8293953  0.9561215  1.8441868 -8.473962 ]]
Iteration 300 of 1000: loss=1.75 " + "l1=0.0681" + "l2=1.68 f=-0.994 shape=(1, 9000, 1)
logits [[ 1.4805243  1.3579624  1.4817393 -8.294967 ]]
Iteration 400 of 1000: loss=1.51 " + "l1=0" + "l2=1.51 f=-0.983 shape=(1, 9000, 1)
logits [[ 1.36631    1.41065    1.3940729 -8.104738 ]]
Iteration 500 of 1000: loss=1.4 " + "l1=0.00284" + "l2=1.39 f=-0.981 shape=(1, 9000, 1)
logits [[ 1.3453525  1.3534743  1.3586437 -7.982694 ]]
Iteration 600 of 1000: loss=1.34 " + "l1=0.0106" + "l2=1.33 f=-0.976 shape=(1, 9000, 1)
logits [[ 1.3294519  1.3101825  1.3202224 -7.8657327]]
Iteration 700 of 1000: loss=1.29 " + "l1=0.00426" + "l2=1.29 f=-0.967 shape=(1, 9000, 1)
logits [[ 1.2706552  1.2820029  1.2897512 -7.7086496]]
Iteration 800 of 1000: loss=1.24 " + "l1=0.00239" + "l2=1.24 f=-0.954 shape=(1, 9000, 1)
logits [[ 1.2366078  1.2478039  1.2521505 -7.5527496]]
Iteration 900 of 1000: loss=1.21 " + "l1=0" + "l2=1.21 f=-0.943 shape=(1, 9000, 1)
logits [[ 1.1556513  1.2298456  1.2293333 -7.38828  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.86 " + "l1=2.86" + "l2=0 f=-0.81 shape=(1, 9000, 1)
logits [[  6.764578   -2.0304263   2.8937912 -10.866965 ]]
Iteration 100 of 1000: loss=2.37 " + "l1=2.07" + "l2=0.307 f=-0.773 shape=(1, 9000, 1)
logits [[  5.4166346  -0.9429222   2.4405267 -10.005223 ]]
Iteration 200 of 1000: loss=2.12 " + "l1=1.69" + "l2=0.428 f=-0.787 shape=(1, 9000, 1)
logits [[ 4.6875067 -0.5190832  2.2112134 -9.526187 ]]
Iteration 300 of 1000: loss=1.93 " + "l1=1.42" + "l2=0.51 f=-0.798 shape=(1, 9000, 1)
logits [[ 4.080716   -0.27484542  2.0381265  -9.036565  ]]
Iteration 400 of 1000: loss=1.71 " + "l1=1.04" + "l2=0.667 f=-0.839 shape=(1, 9000, 1)
logits [[ 3.2576478   0.05961169  1.9117858  -8.586927  ]]
Iteration 500 of 1000: loss=1.4 " + "l1=0.602" + "l2=0.794 f=-0.885 shape=(1, 9000, 1)
logits [[ 2.2339613  0.3831896  1.8222393 -7.97927  ]]
Iteration 600 of 1000: loss=1.18 " + "l1=0.377" + "l2=0.799 f=-0.898 shape=(1, 9000, 1)
logits [[ 1.6887426  0.5278303  1.6853435 -7.4945836]]
Iteration 700 of 1000: loss=1.05 " + "l1=0.334" + "l2=0.712 f=-0.882 shape=(1, 9000, 1)
logits [[ 1.5605654   0.53256875  1.5529828  -7.17495   ]]
Iteration 800 of 1000: loss=0.948 " + "l1=0.299" + "l2=0.649 f=-0.845 shape=(1, 9000, 1)
logits [[ 1.4609321  0.5398801  1.4546272 -6.83697  ]]
Iteration 900 of 1000: loss=0.876 " + "l1=0.27" + "l2=0.606 f=-0.811 shape=(1, 9000, 1)
logits [[ 1.3675566  0.5441602  1.3750058 -6.5293765]]
--- 289.88952255249023 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0387 " + "l1=0.0387" + "l2=0 f=-0.81 shape=(1, 9000, 1)
logits [[  6.764578   -2.0304263   2.8937912 -10.866965 ]]
Iteration 100 of 1000: loss=0.0386 " + "l1=0.0385" + "l2=0.000135 f=-0.81 shape=(1, 9000, 1)
logits [[  6.7427773  -2.028599    2.8964152 -10.852081 ]]
Iteration 200 of 1000: loss=0.0386 " + "l1=0.0385" + "l2=9.86e-05 f=-0.81 shape=(1, 9000, 1)
logits [[  6.7416825  -2.0282047   2.8961082 -10.850759 ]]
Iteration 300 of 1000: loss=0.0385 " + "l1=0.0384" + "l2=0.000122 f=-0.81 shape=(1, 9000, 1)
logits [[  6.7386837  -2.0278769   2.8961873 -10.848461 ]]
Iteration 400 of 1000: loss=0.0386 " + "l1=0.0384" + "l2=0.000195 f=-0.81 shape=(1, 9000, 1)
logits [[  6.7354236  -2.0276241   2.8963594 -10.846015 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.387 " + "l1=0.387" + "l2=0 f=-0.81 shape=(1, 9000, 1)
logits [[  6.764578   -2.0304263   2.8937912 -10.866965 ]]
Iteration 100 of 1000: loss=0.376 " + "l1=0.369" + "l2=0.00653 f=-0.815 shape=(1, 9000, 1)
logits [[  6.6051893  -2.0197456   2.9106696 -10.754585 ]]
Iteration 200 of 1000: loss=0.372 " + "l1=0.363" + "l2=0.00888 f=-0.816 shape=(1, 9000, 1)
logits [[  6.544313   -2.0166728   2.9149196 -10.707228 ]]
Iteration 300 of 1000: loss=0.368 " + "l1=0.357" + "l2=0.0109 f=-0.818 shape=(1, 9000, 1)
logits [[  6.4890018  -2.012174    2.916986  -10.665121 ]]
Iteration 400 of 1000: loss=0.365 " + "l1=0.352" + "l2=0.0127 f=-0.82 shape=(1, 9000, 1)
logits [[  6.4359593  -2.0092907   2.9172137 -10.623818 ]]
Iteration 500 of 1000: loss=0.361 " + "l1=0.346" + "l2=0.0147 f=-0.823 shape=(1, 9000, 1)
logits [[  6.381804   -2.0104988   2.917428  -10.580205 ]]
Iteration 600 of 1000: loss=0.358 " + "l1=0.341" + "l2=0.0163 f=-0.826 shape=(1, 9000, 1)
logits [[  6.3314476  -2.0135794   2.917229  -10.537596 ]]
Iteration 700 of 1000: loss=0.354 " + "l1=0.336" + "l2=0.0178 f=-0.828 shape=(1, 9000, 1)
logits [[  6.281465   -2.0152009   2.917155  -10.495079 ]]
Iteration 800 of 1000: loss=0.351 " + "l1=0.332" + "l2=0.019 f=-0.829 shape=(1, 9000, 1)
logits [[  6.231957   -2.01221     2.9150605 -10.451801 ]]
Iteration 900 of 1000: loss=0.347 " + "l1=0.327" + "l2=0.0205 f=-0.831 shape=(1, 9000, 1)
logits [[  6.181648   -2.013916    2.9155188 -10.405308 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.87 " + "l1=3.87" + "l2=0 f=-0.81 shape=(1, 9000, 1)
logits [[  6.764578   -2.0304263   2.8937912 -10.866965 ]]
Iteration 100 of 1000: loss=2.47 " + "l1=1.61" + "l2=0.859 f=-0.839 shape=(1, 9000, 1)
logits [[ 4.637743  -1.7613257  3.0299375 -9.26092  ]]
Iteration 200 of 1000: loss=1.2 " + "l1=0.0105" + "l2=1.19 f=-0.861 shape=(1, 9000, 1)
logits [[ 3.3793833 -1.6110737  3.3688796 -8.579242 ]]
Iteration 300 of 1000: loss=0.966 " + "l1=0" + "l2=0.966 f=-0.849 shape=(1, 9000, 1)
logits [[ 3.3270357 -1.6322427  3.329674  -8.420028 ]]
Iteration 400 of 1000: loss=0.821 " + "l1=0" + "l2=0.821 f=-0.852 shape=(1, 9000, 1)
logits [[ 3.275476  -1.6689951  3.2892518 -8.305469 ]]
Iteration 500 of 1000: loss=0.703 " + "l1=0.00276" + "l2=0.701 f=-0.859 shape=(1, 9000, 1)
logits [[ 3.246259  -1.7184333  3.2435007 -8.207922 ]]
Iteration 600 of 1000: loss=0.622 " + "l1=0" + "l2=0.622 f=-0.863 shape=(1, 9000, 1)
logits [[ 3.164394  -1.7172406  3.1704032 -8.069246 ]]
Iteration 700 of 1000: loss=0.565 " + "l1=0.0164" + "l2=0.549 f=-0.855 shape=(1, 9000, 1)
logits [[ 3.0950027 -1.6815808  3.078588  -7.9112897]]
Iteration 800 of 1000: loss=0.496 " + "l1=0" + "l2=0.496 f=-0.84 shape=(1, 9000, 1)
logits [[ 2.9683344 -1.6297587  2.989509  -7.688106 ]]
Iteration 900 of 1000: loss=0.442 " + "l1=0" + "l2=0.442 f=-0.828 shape=(1, 9000, 1)
logits [[ 2.8604302 -1.5689623  2.891606  -7.4933734]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.13 " + "l1=2.13" + "l2=0 f=-0.81 shape=(1, 9000, 1)
logits [[  6.764578   -2.0304263   2.8937912 -10.866965 ]]
Iteration 100 of 1000: loss=1.74 " + "l1=1.49" + "l2=0.249 f=-0.82 shape=(1, 9000, 1)
logits [[  5.714379   -1.9409864   2.9979584 -10.051434 ]]
Iteration 200 of 1000: loss=1.55 " + "l1=1.18" + "l2=0.371 f=-0.83 shape=(1, 9000, 1)
logits [[ 5.149496  -1.8971099  3.0049632 -9.578884 ]]
Iteration 300 of 1000: loss=1.36 " + "l1=0.912" + "l2=0.453 f=-0.839 shape=(1, 9000, 1)
logits [[ 4.65916   -1.865437   3.0017502 -9.151478 ]]
Iteration 400 of 1000: loss=0.944 " + "l1=0.125" + "l2=0.819 f=-0.854 shape=(1, 9000, 1)
logits [[ 3.4305801 -1.6257747  3.2039323 -8.424112 ]]
Iteration 500 of 1000: loss=0.677 " + "l1=0.0053" + "l2=0.671 f=-0.849 shape=(1, 9000, 1)
logits [[ 3.120703  -1.5865752  3.1110716 -8.040033 ]]
Iteration 600 of 1000: loss=0.549 " + "l1=0" + "l2=0.549 f=-0.841 shape=(1, 9000, 1)
logits [[ 2.9899495 -1.532695   3.0041184 -7.8248487]]
Iteration 700 of 1000: loss=0.461 " + "l1=0.00213" + "l2=0.458 f=-0.832 shape=(1, 9000, 1)
logits [[ 2.899033  -1.4893204  2.8951545 -7.6348586]]
Iteration 800 of 1000: loss=0.391 " + "l1=0.00145" + "l2=0.389 f=-0.825 shape=(1, 9000, 1)
logits [[ 2.776212  -1.4321315  2.7735808 -7.415985 ]]
Iteration 900 of 1000: loss=0.333 " + "l1=0" + "l2=0.333 f=-0.821 shape=(1, 9000, 1)
logits [[ 2.6553824 -1.3769255  2.6585696 -7.2210593]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.26 " + "l1=1.26" + "l2=0 f=-0.81 shape=(1, 9000, 1)
logits [[  6.764578   -2.0304263   2.8937912 -10.866965 ]]
Iteration 100 of 1000: loss=1.13 " + "l1=1.05" + "l2=0.0794 f=-0.823 shape=(1, 9000, 1)
logits [[  6.1877513  -1.9907845   2.9525757 -10.443506 ]]
Iteration 200 of 1000: loss=1.08 " + "l1=0.963" + "l2=0.113 f=-0.825 shape=(1, 9000, 1)
logits [[  5.9254274  -1.974645    2.961794  -10.211015 ]]
Iteration 300 of 1000: loss=1.02 " + "l1=0.873" + "l2=0.148 f=-0.828 shape=(1, 9000, 1)
logits [[ 5.6421857 -1.932448   2.9568558 -9.980508 ]]
Iteration 400 of 1000: loss=0.963 " + "l1=0.798" + "l2=0.165 f=-0.837 shape=(1, 9000, 1)
logits [[ 5.413361  -1.9466422  2.958153  -9.773247 ]]
Iteration 500 of 1000: loss=0.893 " + "l1=0.707" + "l2=0.186 f=-0.834 shape=(1, 9000, 1)
logits [[ 5.1150413 -1.9248384  2.9398081 -9.466359 ]]
Iteration 600 of 1000: loss=0.819 " + "l1=0.615" + "l2=0.203 f=-0.824 shape=(1, 9000, 1)
logits [[ 4.7868285 -1.8459507  2.8933325 -9.128545 ]]
Iteration 700 of 1000: loss=0.736 " + "l1=0.506" + "l2=0.229 f=-0.802 shape=(1, 9000, 1)
logits [[ 4.4035144 -1.735531   2.8452034 -8.7209425]]
Iteration 800 of 1000: loss=0.627 " + "l1=0.356" + "l2=0.271 f=-0.796 shape=(1, 9000, 1)
logits [[ 3.8978221 -1.633747   2.8028786 -8.251701 ]]
Iteration 900 of 1000: loss=0.475 " + "l1=0.138" + "l2=0.337 f=-0.818 shape=(1, 9000, 1)
logits [[ 3.2149305 -1.5214901  2.7893243 -7.752811 ]]
--- 279.7932679653168 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.176 " + "l1=0.176" + "l2=0 f=-0.81 shape=(1, 9000, 1)
logits [[  6.764578   -2.0304263   2.8937912 -10.866965 ]]
Iteration 100 of 1000: loss=0.176 " + "l1=0.175" + "l2=0.000321 f=-0.809 shape=(1, 9000, 1)
logits [[  6.724582   -2.01892     2.8838615 -10.824934 ]]
Iteration 200 of 1000: loss=0.176 " + "l1=0.175" + "l2=0.000337 f=-0.809 shape=(1, 9000, 1)
logits [[  6.7163644  -2.0163627   2.8815017 -10.816615 ]]
Iteration 300 of 1000: loss=0.176 " + "l1=0.175" + "l2=0.000434 f=-0.809 shape=(1, 9000, 1)
logits [[  6.7066503  -2.0132568   2.8784497 -10.806564 ]]
Iteration 400 of 1000: loss=0.175 " + "l1=0.175" + "l2=0.000518 f=-0.809 shape=(1, 9000, 1)
logits [[  6.6970134  -2.010016    2.8752563 -10.79654  ]]
Iteration 500 of 1000: loss=0.175 " + "l1=0.175" + "l2=0.000603 f=-0.808 shape=(1, 9000, 1)
logits [[  6.687566   -2.006599    2.8719437 -10.786604 ]]
Iteration 600 of 1000: loss=0.175 " + "l1=0.175" + "l2=0.000687 f=-0.808 shape=(1, 9000, 1)
logits [[  6.6782103  -2.003014    2.8684309 -10.776659 ]]
Iteration 700 of 1000: loss=0.175 " + "l1=0.174" + "l2=0.000803 f=-0.808 shape=(1, 9000, 1)
logits [[  6.669196   -1.9994937   2.8649166 -10.766915 ]]
Iteration 800 of 1000: loss=0.175 " + "l1=0.174" + "l2=0.000994 f=-0.808 shape=(1, 9000, 1)
logits [[  6.6600246  -1.9959141   2.861314  -10.756856 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.76 " + "l1=1.76" + "l2=0 f=-0.81 shape=(1, 9000, 1)
logits [[  6.764578   -2.0304263   2.8937912 -10.866965 ]]
Iteration 100 of 1000: loss=1.72 " + "l1=1.69" + "l2=0.0259 f=-0.803 shape=(1, 9000, 1)
logits [[  6.4035316  -1.930411    2.8127887 -10.498746 ]]
Iteration 200 of 1000: loss=1.69 " + "l1=1.65" + "l2=0.0414 f=-0.801 shape=(1, 9000, 1)
logits [[  6.2000175  -1.8748273   2.7588232 -10.28759  ]]
Iteration 300 of 1000: loss=1.66 " + "l1=1.61" + "l2=0.0556 f=-0.797 shape=(1, 9000, 1)
logits [[  6.0062137  -1.8117117   2.6900702 -10.073445 ]]
Iteration 400 of 1000: loss=1.63 " + "l1=1.56" + "l2=0.0713 f=-0.79 shape=(1, 9000, 1)
logits [[ 5.7868977 -1.735134   2.6143205 -9.828072 ]]
Iteration 500 of 1000: loss=1.59 " + "l1=1.51" + "l2=0.0865 f=-0.786 shape=(1, 9000, 1)
logits [[ 5.5204844 -1.6451535  2.5190792 -9.5394535]]
Iteration 600 of 1000: loss=1.55 " + "l1=1.45" + "l2=0.1 f=-0.78 shape=(1, 9000, 1)
logits [[ 5.2380805 -1.54627    2.4141023 -9.226308 ]]
Iteration 700 of 1000: loss=1.5 " + "l1=1.38" + "l2=0.113 f=-0.775 shape=(1, 9000, 1)
logits [[ 4.9410057 -1.4649788  2.3169527 -8.893042 ]]
Iteration 800 of 1000: loss=1.44 " + "l1=1.32" + "l2=0.125 f=-0.768 shape=(1, 9000, 1)
logits [[ 4.6217833 -1.3741599  2.213935  -8.532783 ]]
Iteration 900 of 1000: loss=1.37 " + "l1=1.23" + "l2=0.136 f=-0.755 shape=(1, 9000, 1)
logits [[ 4.239457  -1.2472014  2.0843983 -8.095823 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=17.6 " + "l1=17.6" + "l2=0 f=-0.81 shape=(1, 9000, 1)
logits [[  6.764578   -2.0304263   2.8937912 -10.866965 ]]
Iteration 100 of 1000: loss=11.2 " + "l1=7.57" + "l2=3.65 f=-0.699 shape=(1, 9000, 1)
logits [[ 1.7570175  -0.48621222  1.7483296  -5.8133006 ]]
Iteration 200 of 1000: loss=8.32 " + "l1=4.36" + "l2=3.96 f=-0.481 shape=(1, 9000, 1)
logits [[ 0.98992646 -0.5628804   1.0042875  -3.3549702 ]]
Iteration 300 of 1000: loss=6.32 " + "l1=2.19" + "l2=4.13 f=-0.353 shape=(1, 9000, 1)
logits [[ 0.3758349  -0.5456462   0.47400498 -1.7142464 ]]
Iteration 400 of 1000: loss=4.61 " + "l1=0.486" + "l2=4.12 f=-0.164 shape=(1, 9000, 1)
logits [[ 0.00373861 -0.59219664  0.20948234 -0.27695826]]
Iteration 500 of 1000: loss=3.28 " + "l1=0" + "l2=3.28 f=-0.0979 shape=(1, 9000, 1)
logits [[ 0.0303673  -0.61207414  0.09283386  0.09737813]]
Iteration 600 of 1000: loss=2.76 " + "l1=0" + "l2=2.76 f=-0.1 shape=(1, 9000, 1)
logits [[ 0.023703   -0.58352584  0.07541356  0.08383457]]
Iteration 700 of 1000: loss=2.43 " + "l1=0.0159" + "l2=2.41 f=-0.109 shape=(1, 9000, 1)
logits [[ 0.04297383 -0.57729805  0.05753049  0.04161203]]
Iteration 800 of 1000: loss=2.18 " + "l1=0" + "l2=2.18 f=-0.114 shape=(1, 9000, 1)
logits [[ 0.01609002 -0.57145715  0.0383582   0.05998087]]
Iteration 900 of 1000: loss=1.99 " + "l1=0.0157" + "l2=1.98 f=-0.121 shape=(1, 9000, 1)
logits [[ 0.02541583 -0.5832766   0.04400815  0.02826305]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=9.7 " + "l1=9.7" + "l2=0 f=-0.81 shape=(1, 9000, 1)
logits [[  6.764578   -2.0304263   2.8937912 -10.866965 ]]
Iteration 100 of 1000: loss=7.69 " + "l1=6.51" + "l2=1.18 f=-0.758 shape=(1, 9000, 1)
logits [[ 3.8534343 -1.1657614  2.2693174 -7.987753 ]]
Iteration 200 of 1000: loss=6.2 " + "l1=4.33" + "l2=1.88 f=-0.68 shape=(1, 9000, 1)
logits [[ 1.956159  -0.7095327  1.9478514 -5.914706 ]]
Iteration 300 of 1000: loss=4.88 " + "l1=2.81" + "l2=2.07 f=-0.508 shape=(1, 9000, 1)
logits [[ 1.2667587  -0.71697307  1.2591479  -3.84245   ]]
Iteration 400 of 1000: loss=4.03 " + "l1=1.92" + "l2=2.11 f=-0.4 shape=(1, 9000, 1)
logits [[ 0.84334767 -0.6713891   0.8626699  -2.6341372 ]]
Iteration 500 of 1000: loss=3.09 " + "l1=0.883" + "l2=2.21 f=-0.227 shape=(1, 9000, 1)
logits [[ 0.314058   -0.55090106  0.4681132  -1.1378858 ]]
Iteration 600 of 1000: loss=2.05 " + "l1=0.00087" + "l2=2.05 f=-0.122 shape=(1, 9000, 1)
logits [[-0.06274114 -0.46835703  0.02310762  0.02152654]]
Iteration 700 of 1000: loss=1.6 " + "l1=0.00587" + "l2=1.6 f=-0.133 shape=(1, 9000, 1)
logits [[-0.00731738 -0.5223373   0.00330937 -0.00735772]]
Iteration 800 of 1000: loss=1.38 " + "l1=0" + "l2=1.38 f=-0.145 shape=(1, 9000, 1)
logits [[-0.0293477  -0.5080368  -0.02854786 -0.01236618]]
Iteration 900 of 1000: loss=1.25 " + "l1=0.018" + "l2=1.23 f=-0.157 shape=(1, 9000, 1)
logits [[-0.03153348 -0.5052127  -0.0293709  -0.06203328]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.73 " + "l1=5.73" + "l2=0 f=-0.81 shape=(1, 9000, 1)
logits [[  6.764578   -2.0304263   2.8937912 -10.866965 ]]
Iteration 100 of 1000: loss=5.08 " + "l1=4.68" + "l2=0.407 f=-0.767 shape=(1, 9000, 1)
logits [[ 5.1592927 -1.5049117  2.507636  -9.230124 ]]
Iteration 200 of 1000: loss=4.6 " + "l1=3.94" + "l2=0.655 f=-0.755 shape=(1, 9000, 1)
logits [[ 4.0570335 -1.2607082  2.2636583 -8.078296 ]]
Iteration 300 of 1000: loss=4.06 " + "l1=3.18" + "l2=0.889 f=-0.696 shape=(1, 9000, 1)
logits [[ 2.988701  -1.0567907  2.0684533 -6.784022 ]]
Iteration 400 of 1000: loss=3.49 " + "l1=2.34" + "l2=1.16 f=-0.625 shape=(1, 9000, 1)
logits [[ 1.8740622 -0.8675274  1.8044057 -5.310945 ]]
Iteration 500 of 1000: loss=2.95 " + "l1=1.85" + "l2=1.1 f=-0.551 shape=(1, 9000, 1)
logits [[ 1.3789893 -0.6801881  1.3955055 -4.3002853]]
Iteration 600 of 1000: loss=2.46 " + "l1=1.37" + "l2=1.09 f=-0.449 shape=(1, 9000, 1)
logits [[ 0.96430916 -0.4958415   0.9758575  -3.2413628 ]]
Iteration 700 of 1000: loss=1.95 " + "l1=0.831" + "l2=1.12 f=-0.306 shape=(1, 9000, 1)
logits [[ 0.56350917 -0.38538438  0.57688177 -1.9804779 ]]
Iteration 800 of 1000: loss=1.57 " + "l1=0.445" + "l2=1.13 f=-0.211 shape=(1, 9000, 1)
logits [[ 0.29943636 -0.38986304  0.3087025  -1.0607805 ]]
Iteration 900 of 1000: loss=1.27 " + "l1=0.12" + "l2=1.15 f=-0.164 shape=(1, 9000, 1)
logits [[ 0.04552295 -0.42437285  0.04670358 -0.32341495]]
--- 302.4602699279785 seconds ---
Adv result:3
Loading record A06057
(1, 18062)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.107 " + "l1=0.107" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.6675777 -5.03626    4.842768  -8.164701 ]]
Iteration 100 of 1000: loss=0.106 " + "l1=0.106" + "l2=0.000463 f=-0.666 shape=(1, 9000, 1)
logits [[ 5.607232  -4.9714403  4.7949724 -8.092885 ]]
Iteration 200 of 1000: loss=0.106 " + "l1=0.105" + "l2=0.000551 f=-0.664 shape=(1, 9000, 1)
logits [[ 5.5912538 -4.957916   4.785479  -8.0739975]]
Iteration 300 of 1000: loss=0.106 " + "l1=0.105" + "l2=0.000671 f=-0.662 shape=(1, 9000, 1)
logits [[ 5.5756044 -4.94425    4.775669  -8.055108 ]]
Iteration 400 of 1000: loss=0.106 " + "l1=0.105" + "l2=0.000826 f=-0.66 shape=(1, 9000, 1)
logits [[ 5.5610623 -4.9315777  4.7669153 -8.0375   ]]
Iteration 500 of 1000: loss=0.106 " + "l1=0.105" + "l2=0.000982 f=-0.659 shape=(1, 9000, 1)
logits [[ 5.5477276 -4.9195356  4.75878   -8.021653 ]]
Iteration 600 of 1000: loss=0.106 " + "l1=0.104" + "l2=0.00113 f=-0.657 shape=(1, 9000, 1)
logits [[ 5.5353494 -4.908964   4.7517285 -8.00724  ]]
Iteration 700 of 1000: loss=0.106 " + "l1=0.104" + "l2=0.00128 f=-0.656 shape=(1, 9000, 1)
logits [[ 5.5240726 -4.8997407  4.7456484 -7.9943175]]
Iteration 800 of 1000: loss=0.105 " + "l1=0.104" + "l2=0.00144 f=-0.655 shape=(1, 9000, 1)
logits [[ 5.5132546 -4.8909     4.7399907 -7.9821763]]
Iteration 900 of 1000: loss=0.105 " + "l1=0.104" + "l2=0.00164 f=-0.654 shape=(1, 9000, 1)
logits [[ 5.503094  -4.882544   4.7345443 -7.971237 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.07 " + "l1=1.07" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.6675777 -5.03626    4.842768  -8.164701 ]]
Iteration 100 of 1000: loss=0.996 " + "l1=0.954" + "l2=0.0419 f=-0.616 shape=(1, 9000, 1)
logits [[ 5.0796766 -4.460618   4.3996043 -7.483441 ]]
Iteration 200 of 1000: loss=0.962 " + "l1=0.9" + "l2=0.0617 f=-0.587 shape=(1, 9000, 1)
logits [[ 4.77589   -4.2241635  4.21401   -7.1127315]]
Iteration 300 of 1000: loss=0.931 " + "l1=0.855" + "l2=0.076 f=-0.56 shape=(1, 9000, 1)
logits [[ 4.524863 -4.023532  4.058322 -6.800841]]
Iteration 400 of 1000: loss=0.897 " + "l1=0.805" + "l2=0.0917 f=-0.533 shape=(1, 9000, 1)
logits [[ 4.254044  -3.7983346  3.8926134 -6.47955  ]]
Iteration 500 of 1000: loss=0.865 " + "l1=0.758" + "l2=0.107 f=-0.51 shape=(1, 9000, 1)
logits [[ 3.9947252 -3.584043   3.7265182 -6.1781883]]
Iteration 600 of 1000: loss=0.835 " + "l1=0.714" + "l2=0.121 f=-0.484 shape=(1, 9000, 1)
logits [[ 3.743756  -3.3939009  3.5868356 -5.870752 ]]
Iteration 700 of 1000: loss=0.808 " + "l1=0.676" + "l2=0.132 f=-0.466 shape=(1, 9000, 1)
logits [[ 3.537162  -3.2263515  3.4483511 -5.623041 ]]
Iteration 800 of 1000: loss=0.788 " + "l1=0.649" + "l2=0.139 f=-0.452 shape=(1, 9000, 1)
logits [[ 3.3955994 -3.0947123  3.3449552 -5.4553857]]
Iteration 900 of 1000: loss=0.772 " + "l1=0.627" + "l2=0.145 f=-0.445 shape=(1, 9000, 1)
logits [[ 3.271837  -2.9965262  3.2612135 -5.315429 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.7 " + "l1=10.7" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.6675777 -5.03626    4.842768  -8.164701 ]]
Iteration 100 of 1000: loss=5.16 " + "l1=3.02" + "l2=2.13 f=-0.34 shape=(1, 9000, 1)
logits [[ 1.8427434 -1.1809123  1.8403372 -3.8622308]]
Iteration 200 of 1000: loss=3.66 " + "l1=1.27" + "l2=2.39 f=-0.253 shape=(1, 9000, 1)
logits [[ 1.0655173  -0.20560546  1.0683619  -2.9416814 ]]
Iteration 300 of 1000: loss=3 " + "l1=0.643" + "l2=2.36 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.66478544  0.04491702  0.68787956 -2.5436437 ]]
Iteration 400 of 1000: loss=2.54 " + "l1=0.332" + "l2=2.21 f=-0.29 shape=(1, 9000, 1)
logits [[ 0.4784813   0.17043045  0.5022715  -2.311217  ]]
Iteration 500 of 1000: loss=2.22 " + "l1=0.141" + "l2=2.08 f=-0.289 shape=(1, 9000, 1)
logits [[ 0.34325835  0.24351683  0.38402975 -2.1269479 ]]
Iteration 600 of 1000: loss=1.95 " + "l1=0.00608" + "l2=1.95 f=-0.279 shape=(1, 9000, 1)
logits [[ 0.22640043  0.2872075   0.29328468 -1.9223368 ]]
Iteration 700 of 1000: loss=1.78 " + "l1=0.00535" + "l2=1.77 f=-0.265 shape=(1, 9000, 1)
logits [[ 0.22666708  0.25604793  0.26139984 -1.8028893 ]]
Iteration 800 of 1000: loss=1.62 " + "l1=0.00549" + "l2=1.62 f=-0.252 shape=(1, 9000, 1)
logits [[ 0.205968    0.22767495  0.23316705 -1.6753358 ]]
Iteration 900 of 1000: loss=1.51 " + "l1=0.00541" + "l2=1.5 f=-0.245 shape=(1, 9000, 1)
logits [[ 0.16264483  0.2162913   0.22170317 -1.5821702 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.89 " + "l1=5.89" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.6675777 -5.03626    4.842768  -8.164701 ]]
Iteration 100 of 1000: loss=3.78 " + "l1=2.73" + "l2=1.05 f=-0.419 shape=(1, 9000, 1)
logits [[ 2.757167  -2.207022   2.63016   -4.8566337]]
Iteration 200 of 1000: loss=3.02 " + "l1=1.82" + "l2=1.2 f=-0.329 shape=(1, 9000, 1)
logits [[ 1.9556632 -1.349856   1.9367408 -3.8604426]]
Iteration 300 of 1000: loss=2.58 " + "l1=1.37" + "l2=1.21 f=-0.284 shape=(1, 9000, 1)
logits [[ 1.5939486 -0.8900118  1.5955435 -3.4369783]]
Iteration 400 of 1000: loss=2.28 " + "l1=1.01" + "l2=1.26 f=-0.259 shape=(1, 9000, 1)
logits [[ 1.2760794 -0.5550076  1.2863716 -3.0443623]]
Iteration 500 of 1000: loss=2.04 " + "l1=0.706" + "l2=1.33 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.9404438  -0.33493572  0.9480155  -2.684341  ]]
Iteration 600 of 1000: loss=1.8 " + "l1=0.5" + "l2=1.3 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.7095251  -0.19486745  0.71502197 -2.378569  ]]
Iteration 700 of 1000: loss=1.6 " + "l1=0.409" + "l2=1.19 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.5829925  -0.15585361  0.5877663  -2.1676345 ]]
Iteration 800 of 1000: loss=1.45 " + "l1=0.282" + "l2=1.17 f=-0.278 shape=(1, 9000, 1)
logits [[ 0.4353086  -0.0727093   0.43968245 -1.9161394 ]]
Iteration 900 of 1000: loss=1.36 " + "l1=0.223" + "l2=1.14 f=-0.269 shape=(1, 9000, 1)
logits [[ 0.3740486  -0.01434281  0.39109102 -1.8256136 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=8.3 " + "l1=8.3" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.6675777 -5.03626    4.842768  -8.164701 ]]
Iteration 100 of 1000: loss=4.56 " + "l1=2.98" + "l2=1.58 f=-0.376 shape=(1, 9000, 1)
logits [[ 2.2094734 -1.6388849  2.212135  -4.2874684]]
Iteration 200 of 1000: loss=3.43 " + "l1=1.63" + "l2=1.8 f=-0.272 shape=(1, 9000, 1)
logits [[ 1.4576856  -0.64240015  1.4490104  -3.3524063 ]]
Iteration 300 of 1000: loss=2.8 " + "l1=0.96" + "l2=1.84 f=-0.271 shape=(1, 9000, 1)
logits [[ 0.993302   -0.23865412  1.0004534  -2.840546  ]]
Iteration 400 of 1000: loss=2.37 " + "l1=0.555" + "l2=1.82 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.6747934  -0.04103515  0.67224604 -2.4535878 ]]
Iteration 500 of 1000: loss=2.06 " + "l1=0.385" + "l2=1.67 f=-0.272 shape=(1, 9000, 1)
logits [[ 0.5486991   0.05885068  0.5551328  -2.2492406 ]]
Iteration 600 of 1000: loss=1.8 " + "l1=0.261" + "l2=1.54 f=-0.256 shape=(1, 9000, 1)
logits [[ 0.4501982   0.11486781  0.45160827 -2.042503  ]]
Iteration 700 of 1000: loss=1.57 " + "l1=0.0734" + "l2=1.5 f=-0.249 shape=(1, 9000, 1)
logits [[ 0.27422285  0.21002664  0.30476192 -1.785075  ]]
Iteration 800 of 1000: loss=1.42 " + "l1=0.0125" + "l2=1.41 f=-0.243 shape=(1, 9000, 1)
logits [[ 0.21699972  0.23115072  0.24731298 -1.6678779 ]]
Iteration 900 of 1000: loss=1.32 " + "l1=0" + "l2=1.32 f=-0.24 shape=(1, 9000, 1)
logits [[ 0.19328782  0.23095383  0.22578198 -1.6114143 ]]
--- 308.3574728965759 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00825 " + "l1=0.00825" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.6675777 -5.03626    4.842768  -8.164701 ]]
Iteration 100 of 1000: loss=0.00789 " + "l1=0.00759" + "l2=0.000299 f=-0.674 shape=(1, 9000, 1)
logits [[ 5.625056 -5.061078  4.866346 -8.126206]]
Iteration 200 of 1000: loss=0.0078 " + "l1=0.00752" + "l2=0.000277 f=-0.674 shape=(1, 9000, 1)
logits [[ 5.619671  -5.062278   4.8676763 -8.1205635]]
Iteration 300 of 1000: loss=0.00776 " + "l1=0.00742" + "l2=0.000349 f=-0.674 shape=(1, 9000, 1)
logits [[ 5.611864 -5.064408  4.870332 -8.112569]]
Iteration 400 of 1000: loss=0.0077 " + "l1=0.00731" + "l2=0.000384 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.604188  -5.0663667  4.8730187 -8.104621 ]]
Iteration 500 of 1000: loss=0.00771 " + "l1=0.00722" + "l2=0.000495 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.5973125 -5.067984   4.8754435 -8.097607 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0825 " + "l1=0.0825" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.6675777 -5.03626    4.842768  -8.164701 ]]
Iteration 100 of 1000: loss=0.0508 " + "l1=0.0321" + "l2=0.0188 f=-0.683 shape=(1, 9000, 1)
logits [[ 5.3441105 -5.228302   5.023147  -7.872864 ]]
Iteration 200 of 1000: loss=0.0397 " + "l1=0.0149" + "l2=0.0248 f=-0.68 shape=(1, 9000, 1)
logits [[ 5.2143326 -5.2712836  5.065258  -7.727074 ]]
Iteration 300 of 1000: loss=0.0296 " + "l1=0.000502" + "l2=0.0291 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.09792   -5.2999787  5.0929046 -7.5811205]]
Iteration 400 of 1000: loss=0.0239 " + "l1=7.71e-05" + "l2=0.0238 f=-0.667 shape=(1, 9000, 1)
logits [[ 5.082902  -5.2838     5.0821314 -7.5491962]]
Iteration 500 of 1000: loss=0.0208 " + "l1=0" + "l2=0.0208 f=-0.663 shape=(1, 9000, 1)
logits [[ 5.0704927 -5.270972   5.0749135 -7.5276837]]
Iteration 600 of 1000: loss=0.0184 " + "l1=0" + "l2=0.0184 f=-0.661 shape=(1, 9000, 1)
logits [[ 5.0666265 -5.26022    5.0695    -7.5215516]]
Iteration 700 of 1000: loss=0.0167 " + "l1=0" + "l2=0.0167 f=-0.66 shape=(1, 9000, 1)
logits [[ 5.06347   -5.258003   5.0711484 -7.518008 ]]
Iteration 800 of 1000: loss=0.0149 " + "l1=0.000137" + "l2=0.0148 f=-0.659 shape=(1, 9000, 1)
logits [[ 5.07062  -5.252533  5.069251 -7.524895]]
Iteration 900 of 1000: loss=0.0136 " + "l1=0" + "l2=0.0136 f=-0.659 shape=(1, 9000, 1)
logits [[ 5.0663714 -5.255135   5.0732374 -7.5208783]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0454 " + "l1=0.0454" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.6675777 -5.03626    4.842768  -8.164701 ]]
Iteration 100 of 1000: loss=0.0357 " + "l1=0.0299" + "l2=0.00578 f=-0.68 shape=(1, 9000, 1)
logits [[ 5.4918556 -5.1500807  4.948591  -8.0090275]]
Iteration 200 of 1000: loss=0.0326 " + "l1=0.025" + "l2=0.00759 f=-0.68 shape=(1, 9000, 1)
logits [[ 5.427516  -5.17446    4.9722276 -7.9441924]]
Iteration 300 of 1000: loss=0.03 " + "l1=0.0209" + "l2=0.00907 f=-0.678 shape=(1, 9000, 1)
logits [[ 5.3704867 -5.1902     4.9897423 -7.880751 ]]
Iteration 400 of 1000: loss=0.0278 " + "l1=0.0174" + "l2=0.0104 f=-0.675 shape=(1, 9000, 1)
logits [[ 5.320628 -5.201328  5.004716 -7.824729]]
Iteration 500 of 1000: loss=0.0257 " + "l1=0.0137" + "l2=0.012 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.269514  -5.213387   5.0196075 -7.766734 ]]
Iteration 600 of 1000: loss=0.0236 " + "l1=0.00997" + "l2=0.0136 f=-0.67 shape=(1, 9000, 1)
logits [[ 5.2162757 -5.225061   5.0349526 -7.705517 ]]
Iteration 700 of 1000: loss=0.0213 " + "l1=0.00608" + "l2=0.0152 f=-0.668 shape=(1, 9000, 1)
logits [[ 5.159847  -5.238613   5.0492105 -7.640878 ]]
Iteration 800 of 1000: loss=0.0188 " + "l1=0.00228" + "l2=0.0165 f=-0.665 shape=(1, 9000, 1)
logits [[ 5.1053486 -5.2506466  5.0638323 -7.5781264]]
Iteration 900 of 1000: loss=0.0163 " + "l1=0.000132" + "l2=0.0162 f=-0.663 shape=(1, 9000, 1)
logits [[ 5.07394  -5.253593  5.071532 -7.542384]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0268 " + "l1=0.0268" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.6675777 -5.03626    4.842768  -8.164701 ]]
Iteration 100 of 1000: loss=0.0233 " + "l1=0.0211" + "l2=0.00214 f=-0.677 shape=(1, 9000, 1)
logits [[ 5.557589  -5.1045656  4.907725  -8.068447 ]]
Iteration 200 of 1000: loss=0.0223 " + "l1=0.0198" + "l2=0.00255 f=-0.677 shape=(1, 9000, 1)
logits [[ 5.527562  -5.1167035  4.9193993 -8.037889 ]]
Iteration 300 of 1000: loss=0.0215 " + "l1=0.0185" + "l2=0.00308 f=-0.676 shape=(1, 9000, 1)
logits [[ 5.497137  -5.1263123  4.929106  -8.005766 ]]
Iteration 400 of 1000: loss=0.0209 " + "l1=0.0172" + "l2=0.00365 f=-0.676 shape=(1, 9000, 1)
logits [[ 5.4681144 -5.1349897  4.938587  -7.9753838]]
Iteration 500 of 1000: loss=0.0203 " + "l1=0.0161" + "l2=0.00411 f=-0.675 shape=(1, 9000, 1)
logits [[ 5.4421873 -5.1403036  4.945426  -7.9477644]]
Iteration 600 of 1000: loss=0.0197 " + "l1=0.0152" + "l2=0.00454 f=-0.675 shape=(1, 9000, 1)
logits [[ 5.418043  -5.1456723  4.951785  -7.9223948]]
Iteration 700 of 1000: loss=0.0192 " + "l1=0.0142" + "l2=0.005 f=-0.674 shape=(1, 9000, 1)
logits [[ 5.3962603 -5.151574   4.9594893 -7.8996735]]
Iteration 800 of 1000: loss=0.0186 " + "l1=0.0133" + "l2=0.00533 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.3740654 -5.155498   4.965487  -7.877489 ]]
Iteration 900 of 1000: loss=0.0181 " + "l1=0.0124" + "l2=0.00571 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.352149  -5.159198   4.9717636 -7.8550153]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0361 " + "l1=0.0361" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.6675777 -5.03626    4.842768  -8.164701 ]]
Iteration 100 of 1000: loss=0.0298 " + "l1=0.0262" + "l2=0.00369 f=-0.678 shape=(1, 9000, 1)
logits [[ 5.525759  -5.1268935  4.9279227 -8.03943  ]]
Iteration 200 of 1000: loss=0.028 " + "l1=0.0233" + "l2=0.00471 f=-0.678 shape=(1, 9000, 1)
logits [[ 5.4789486 -5.145505   4.94544   -7.992557 ]]
Iteration 300 of 1000: loss=0.0266 " + "l1=0.0209" + "l2=0.00569 f=-0.678 shape=(1, 9000, 1)
logits [[ 5.4355493 -5.157637   4.958757  -7.9468765]]
Iteration 400 of 1000: loss=0.0252 " + "l1=0.0185" + "l2=0.00669 f=-0.676 shape=(1, 9000, 1)
logits [[ 5.394277  -5.16915    4.9714384 -7.901059 ]]
Iteration 500 of 1000: loss=0.024 " + "l1=0.0163" + "l2=0.00769 f=-0.674 shape=(1, 9000, 1)
logits [[ 5.3559723 -5.179046   4.9835224 -7.858023 ]]
Iteration 600 of 1000: loss=0.0228 " + "l1=0.0144" + "l2=0.00839 f=-0.672 shape=(1, 9000, 1)
logits [[ 5.3245993 -5.185786   4.994872  -7.8228307]]
Iteration 700 of 1000: loss=0.0217 " + "l1=0.0126" + "l2=0.00906 f=-0.671 shape=(1, 9000, 1)
logits [[ 5.2931113 -5.19236    5.0048504 -7.788196 ]]
Iteration 800 of 1000: loss=0.0204 " + "l1=0.0106" + "l2=0.00984 f=-0.669 shape=(1, 9000, 1)
logits [[ 5.2568116 -5.200396   5.0156255 -7.7482314]]
Iteration 900 of 1000: loss=0.0192 " + "l1=0.00833" + "l2=0.0109 f=-0.668 shape=(1, 9000, 1)
logits [[ 5.2161736 -5.2081175  5.025883  -7.70529  ]]
--- 284.87292098999023 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.138 " + "l1=0.138" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.6675777 -5.03626    4.842768  -8.164701 ]]
Iteration 100 of 1000: loss=0.137 " + "l1=0.136" + "l2=0.000791 f=-0.664 shape=(1, 9000, 1)
logits [[ 5.572396 -5.00902   4.812619 -8.033489]]
Iteration 200 of 1000: loss=0.136 " + "l1=0.135" + "l2=0.000996 f=-0.662 shape=(1, 9000, 1)
logits [[ 5.5436463 -4.999158   4.802581  -7.9935575]]
Iteration 300 of 1000: loss=0.136 " + "l1=0.135" + "l2=0.00127 f=-0.658 shape=(1, 9000, 1)
logits [[ 5.514953  -4.989703   4.7931366 -7.9521   ]]
Iteration 400 of 1000: loss=0.136 " + "l1=0.134" + "l2=0.00156 f=-0.655 shape=(1, 9000, 1)
logits [[ 5.4886575 -4.9812145  4.784924  -7.913283 ]]
Iteration 500 of 1000: loss=0.135 " + "l1=0.133" + "l2=0.00193 f=-0.652 shape=(1, 9000, 1)
logits [[ 5.465001  -4.9731507  4.7774596 -7.877804 ]]
Iteration 600 of 1000: loss=0.135 " + "l1=0.133" + "l2=0.00221 f=-0.649 shape=(1, 9000, 1)
logits [[ 5.4434996 -4.965217   4.7703958 -7.845112 ]]
Iteration 700 of 1000: loss=0.135 " + "l1=0.132" + "l2=0.00253 f=-0.646 shape=(1, 9000, 1)
logits [[ 5.4224095 -4.9577456  4.7637267 -7.8132577]]
Iteration 800 of 1000: loss=0.135 " + "l1=0.132" + "l2=0.00274 f=-0.644 shape=(1, 9000, 1)
logits [[ 5.403021  -4.951364   4.758033  -7.7840705]]
Iteration 900 of 1000: loss=0.134 " + "l1=0.131" + "l2=0.00299 f=-0.641 shape=(1, 9000, 1)
logits [[ 5.3847895 -4.9453464  4.7525024 -7.756527 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.38 " + "l1=1.38" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.6675777 -5.03626    4.842768  -8.164701 ]]
Iteration 100 of 1000: loss=1.23 " + "l1=1.14" + "l2=0.0827 f=-0.59 shape=(1, 9000, 1)
logits [[ 4.659738 -4.762585  4.528533 -6.786443]]
Iteration 200 of 1000: loss=1.15 " + "l1=1.04" + "l2=0.109 f=-0.518 shape=(1, 9000, 1)
logits [[ 4.2570996 -4.4877534  4.258542  -6.100183 ]]
Iteration 300 of 1000: loss=1.09 " + "l1=0.97" + "l2=0.124 f=-0.466 shape=(1, 9000, 1)
logits [[ 4.032853  -4.2625527  4.035237  -5.669503 ]]
Iteration 400 of 1000: loss=1.05 " + "l1=0.911" + "l2=0.143 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.7938604 -4.0640216  3.8338623 -5.2796054]]
Iteration 500 of 1000: loss=1.01 " + "l1=0.846" + "l2=0.166 f=-0.399 shape=(1, 9000, 1)
logits [[ 3.5021923 -3.8674989  3.6116934 -4.8439794]]
Iteration 600 of 1000: loss=0.971 " + "l1=0.785" + "l2=0.186 f=-0.376 shape=(1, 9000, 1)
logits [[ 3.223545  -3.7015827  3.4130673 -4.437802 ]]
Iteration 700 of 1000: loss=0.936 " + "l1=0.734" + "l2=0.201 f=-0.358 shape=(1, 9000, 1)
logits [[ 3.004384  -3.5628092  3.234671  -4.1067142]]
Iteration 800 of 1000: loss=0.904 " + "l1=0.69" + "l2=0.214 f=-0.342 shape=(1, 9000, 1)
logits [[ 2.829058  -3.4382699  3.0730839 -3.8315918]]
Iteration 900 of 1000: loss=0.875 " + "l1=0.651" + "l2=0.224 f=-0.327 shape=(1, 9000, 1)
logits [[ 2.675111  -3.3375447  2.9339204 -3.5783396]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=13.8 " + "l1=13.8" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.6675777 -5.03626    4.842768  -8.164701 ]]
Iteration 100 of 1000: loss=5.56 " + "l1=2.2" + "l2=3.36 f=-0.0904 shape=(1, 9000, 1)
logits [[ 0.90978277 -2.260005    1.5928932  -0.6042937 ]]
Iteration 200 of 1000: loss=3.12 " + "l1=0.0256" + "l2=3.1 f=0.012 shape=(1, 9000, 1)
logits [[ 0.19023877 -1.6753894   0.7792935   0.7536591 ]]
Iteration 300 of 1000: loss=2.62 " + "l1=0" + "l2=2.62 f=0.0236 shape=(1, 9000, 1)
logits [[ 0.18105944 -1.6796136   0.7852686   0.8078248 ]]
Iteration 400 of 1000: loss=2.37 " + "l1=0.0177" + "l2=2.35 f=0.0253 shape=(1, 9000, 1)
logits [[ 0.19322804 -1.7355345   0.8306595   0.8129103 ]]
Iteration 500 of 1000: loss=2.21 " + "l1=0" + "l2=2.21 f=0.0214 shape=(1, 9000, 1)
logits [[ 0.19064648 -1.7610294   0.8207214   0.8351606 ]]
Iteration 600 of 1000: loss=2.07 " + "l1=0" + "l2=2.07 f=0.0233 shape=(1, 9000, 1)
logits [[ 0.1958395 -1.7601088  0.8251213  0.8321854]]
Iteration 700 of 1000: loss=1.96 " + "l1=0.0212" + "l2=1.94 f=0.0222 shape=(1, 9000, 1)
logits [[ 0.21258539 -1.7651925   0.83138555  0.8101767 ]]
Iteration 800 of 1000: loss=1.84 " + "l1=0.0169" + "l2=1.83 f=0.0203 shape=(1, 9000, 1)
logits [[ 0.21421966 -1.75792     0.8208598   0.8039471 ]]
Iteration 900 of 1000: loss=1.74 " + "l1=0" + "l2=1.74 f=0.0172 shape=(1, 9000, 1)
logits [[ 0.19364159 -1.7474922   0.7977123   0.8248693 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.61 " + "l1=7.61" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.6675777 -5.03626    4.842768  -8.164701 ]]
Iteration 100 of 1000: loss=4.45 " + "l1=3.2" + "l2=1.25 f=-0.272 shape=(1, 9000, 1)
logits [[ 2.3485157 -3.2387705  2.8053474 -3.0039601]]
Iteration 200 of 1000: loss=3.01 " + "l1=1.21" + "l2=1.8 f=-0.0709 shape=(1, 9000, 1)
logits [[ 0.9357407  -2.219016    1.5990711  -0.59940165]]
Iteration 300 of 1000: loss=2.2 " + "l1=0.292" + "l2=1.9 f=-0.00444 shape=(1, 9000, 1)
logits [[ 0.34812155 -1.8737414   1.0191271   0.48873526]]
Iteration 400 of 1000: loss=1.77 " + "l1=0.0125" + "l2=1.75 f=-0.0104 shape=(1, 9000, 1)
logits [[ 0.14804336 -1.7851435   0.8090826   0.78643525]]
Iteration 500 of 1000: loss=1.51 " + "l1=0.0204" + "l2=1.49 f=-0.0348 shape=(1, 9000, 1)
logits [[ 0.14426231 -1.7567364   0.755189    0.71805096]]
Iteration 600 of 1000: loss=1.35 " + "l1=0.0275" + "l2=1.32 f=-0.0543 shape=(1, 9000, 1)
logits [[ 0.13284117 -1.8064902   0.75315356  0.7031451 ]]
Iteration 700 of 1000: loss=1.23 " + "l1=0" + "l2=1.23 f=-0.0596 shape=(1, 9000, 1)
logits [[ 0.10295638 -1.8047231   0.72692156  0.73629624]]
Iteration 800 of 1000: loss=1.16 " + "l1=0" + "l2=1.16 f=-0.0612 shape=(1, 9000, 1)
logits [[ 0.0887395 -1.8047279  0.7222421  0.7489035]]
Iteration 900 of 1000: loss=1.1 " + "l1=0.0174" + "l2=1.08 f=-0.0695 shape=(1, 9000, 1)
logits [[ 0.10518757 -1.8370025   0.74268776  0.7110346 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.5 " + "l1=4.5" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.6675777 -5.03626    4.842768  -8.164701 ]]
Iteration 100 of 1000: loss=3.17 " + "l1=2.64" + "l2=0.531 f=-0.39 shape=(1, 9000, 1)
logits [[ 3.3559856 -3.7886832  3.4893816 -4.618364 ]]
Iteration 200 of 1000: loss=2.56 " + "l1=1.77" + "l2=0.786 f=-0.269 shape=(1, 9000, 1)
logits [[ 2.2316992 -3.18584    2.665462  -2.7875547]]
Iteration 300 of 1000: loss=2.12 " + "l1=1.16" + "l2=0.959 f=-0.164 shape=(1, 9000, 1)
logits [[ 1.4730729 -2.692304   2.0733004 -1.5099775]]
Iteration 400 of 1000: loss=1.81 " + "l1=0.734" + "l2=1.08 f=-0.0726 shape=(1, 9000, 1)
logits [[ 0.9910331 -2.347636   1.6620573 -0.5957646]]
Iteration 500 of 1000: loss=1.56 " + "l1=0.417" + "l2=1.14 f=-0.0552 shape=(1, 9000, 1)
logits [[ 0.59522796 -2.145234    1.3063596   0.0227439 ]]
Iteration 600 of 1000: loss=1.31 " + "l1=0.0887" + "l2=1.22 f=-0.0711 shape=(1, 9000, 1)
logits [[ 0.18016726 -1.8998003   0.85404223  0.58119446]]
Iteration 700 of 1000: loss=1.14 " + "l1=0.0078" + "l2=1.13 f=-0.0901 shape=(1, 9000, 1)
logits [[ 0.0399172 -1.8458227  0.7348403  0.7108549]]
Iteration 800 of 1000: loss=1.05 " + "l1=0.00406" + "l2=1.04 f=-0.0978 shape=(1, 9000, 1)
logits [[ 0.01622063 -1.8506202   0.72777176  0.7152853 ]]
Iteration 900 of 1000: loss=0.981 " + "l1=0.00641" + "l2=0.974 f=-0.101 shape=(1, 9000, 1)
logits [[ 0.02501623 -1.8738852   0.7313114   0.7115771 ]]
--- 313.64827704429626 seconds ---
Adv result:3
Loading record A06100
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0502 " + "l1=0.0502" + "l2=0 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.637429  -2.3802607  2.1606505 -3.8493795]]
Iteration 100 of 1000: loss=0.0499 " + "l1=0.0496" + "l2=0.000274 f=-0.356 shape=(1, 9000, 1)
logits [[ 2.5993288 -2.3622217  2.1474082 -3.8065722]]
Iteration 200 of 1000: loss=0.0498 " + "l1=0.0496" + "l2=0.000255 f=-0.355 shape=(1, 9000, 1)
logits [[ 2.5976136 -2.3600335  2.1462152 -3.8038142]]
Iteration 300 of 1000: loss=0.0498 " + "l1=0.0495" + "l2=0.00032 f=-0.355 shape=(1, 9000, 1)
logits [[ 2.5940917 -2.3578982  2.1447737 -3.7990077]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.502 " + "l1=0.502" + "l2=0 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.637429  -2.3802607  2.1606505 -3.8493795]]
Iteration 100 of 1000: loss=0.474 " + "l1=0.454" + "l2=0.0201 f=-0.34 shape=(1, 9000, 1)
logits [[ 2.3154542 -2.2199647  2.0527656 -3.508839 ]]
Iteration 200 of 1000: loss=0.466 " + "l1=0.44" + "l2=0.0257 f=-0.334 shape=(1, 9000, 1)
logits [[ 2.2305489 -2.1695068  2.023236  -3.4220648]]
Iteration 300 of 1000: loss=0.46 " + "l1=0.431" + "l2=0.0285 f=-0.33 shape=(1, 9000, 1)
logits [[ 2.1776476 -2.135009   2.0015132 -3.3632479]]
Iteration 400 of 1000: loss=0.454 " + "l1=0.423" + "l2=0.0315 f=-0.325 shape=(1, 9000, 1)
logits [[ 2.1287203 -2.0981672  1.9778625 -3.3085032]]
Iteration 500 of 1000: loss=0.449 " + "l1=0.414" + "l2=0.0351 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.0749335 -2.0619159  1.9546223 -3.2537913]]
Iteration 600 of 1000: loss=0.444 " + "l1=0.407" + "l2=0.0372 f=-0.317 shape=(1, 9000, 1)
logits [[ 2.0337942 -2.0319538  1.9343066 -3.2052603]]
Iteration 700 of 1000: loss=0.439 " + "l1=0.399" + "l2=0.0396 f=-0.314 shape=(1, 9000, 1)
logits [[ 1.9902503 -2.0026467  1.9112489 -3.1529062]]
Iteration 800 of 1000: loss=0.434 " + "l1=0.395" + "l2=0.0398 f=-0.31 shape=(1, 9000, 1)
logits [[ 1.9633287 -1.982607   1.8952991 -3.1163452]]
Iteration 900 of 1000: loss=0.431 " + "l1=0.391" + "l2=0.0392 f=-0.307 shape=(1, 9000, 1)
logits [[ 1.9460013 -1.9681973  1.8858279 -3.0919302]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.02 " + "l1=5.02" + "l2=0 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.637429  -2.3802607  2.1606505 -3.8493795]]
Iteration 100 of 1000: loss=3.51 " + "l1=2.9" + "l2=0.615 f=-0.315 shape=(1, 9000, 1)
logits [[ 1.4178817 -1.4793794  1.419015  -2.6170738]]
Iteration 200 of 1000: loss=3.18 " + "l1=2.38" + "l2=0.798 f=-0.33 shape=(1, 9000, 1)
logits [[ 1.1545964 -1.2260106  1.1571956 -2.4056249]]
Iteration 300 of 1000: loss=3.01 " + "l1=2.2" + "l2=0.812 f=-0.337 shape=(1, 9000, 1)
logits [[ 1.0695004 -1.1227293  1.0723288 -2.3685415]]
Iteration 400 of 1000: loss=2.92 " + "l1=2.11" + "l2=0.809 f=-0.333 shape=(1, 9000, 1)
logits [[ 1.0243505 -1.0716934  1.0388254 -2.3239765]]
Iteration 500 of 1000: loss=2.84 " + "l1=2.05" + "l2=0.79 f=-0.329 shape=(1, 9000, 1)
logits [[ 1.0131681 -1.0328506  1.0142175 -2.3109133]]
Iteration 600 of 1000: loss=2.77 " + "l1=1.97" + "l2=0.801 f=-0.327 shape=(1, 9000, 1)
logits [[ 0.94387174 -0.9848875   0.9833251  -2.2502933 ]]
Iteration 700 of 1000: loss=2.72 " + "l1=1.91" + "l2=0.816 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.8978318 -0.9510336  0.9543533 -2.1970599]]
Iteration 800 of 1000: loss=2.68 " + "l1=1.86" + "l2=0.812 f=-0.317 shape=(1, 9000, 1)
logits [[ 0.92060536 -0.93410057  0.9305818  -2.183154  ]]
Iteration 900 of 1000: loss=2.64 " + "l1=1.81" + "l2=0.83 f=-0.312 shape=(1, 9000, 1)
logits [[ 0.87577975 -0.9070185   0.9028918  -2.1209548 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=50.2 " + "l1=50.2" + "l2=0 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.637429  -2.3802607  2.1606505 -3.8493795]]
Iteration 100 of 1000: loss=10.8 " + "l1=0.156" + "l2=10.6 f=-0.366 shape=(1, 9000, 1)
logits [[-0.8644282   0.24987786  0.26545897 -1.114991  ]]
Iteration 200 of 1000: loss=7.83 " + "l1=0" + "l2=7.83 f=-0.372 shape=(1, 9000, 1)
logits [[-0.8383758   0.23353872  0.22630423 -1.1093771 ]]
Iteration 300 of 1000: loss=6.97 " + "l1=0" + "l2=6.97 f=-0.387 shape=(1, 9000, 1)
logits [[-0.88649356  0.2168714   0.20628442 -1.0837214 ]]
Iteration 400 of 1000: loss=6.37 " + "l1=0" + "l2=6.37 f=-0.406 shape=(1, 9000, 1)
logits [[-0.9574624  0.2092177  0.1957347 -1.0702145]]
Iteration 500 of 1000: loss=5.89 " + "l1=0" + "l2=5.89 f=-0.417 shape=(1, 9000, 1)
logits [[-0.9841298   0.20328711  0.19646631 -1.0817901 ]]
Iteration 600 of 1000: loss=5.64 " + "l1=0.121" + "l2=5.52 f=-0.419 shape=(1, 9000, 1)
logits [[-0.9942153   0.19932194  0.21143185 -1.0906075 ]]
Iteration 700 of 1000: loss=5.33 " + "l1=0" + "l2=5.33 f=-0.43 shape=(1, 9000, 1)
logits [[-1.0603467   0.20903973  0.19761513 -1.065451  ]]
Iteration 800 of 1000: loss=5.13 " + "l1=0" + "l2=5.13 f=-0.431 shape=(1, 9000, 1)
logits [[-1.0711585   0.20604093  0.20247968 -1.0624251 ]]
Iteration 900 of 1000: loss=5.08 " + "l1=0" + "l2=5.08 f=-0.434 shape=(1, 9000, 1)
logits [[-1.1150198   0.22411035  0.19301982 -1.0401012 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=27.6 " + "l1=27.6" + "l2=0 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.637429  -2.3802607  2.1606505 -3.8493795]]
Iteration 100 of 1000: loss=9.93 " + "l1=4.65" + "l2=5.28 f=-0.339 shape=(1, 9000, 1)
logits [[-0.01884951 -0.27867842  0.56589913 -1.6254431 ]]
Iteration 200 of 1000: loss=7.08 " + "l1=0.41" + "l2=6.67 f=-0.377 shape=(1, 9000, 1)
logits [[-0.7576461   0.17882785  0.25334638 -1.1824522 ]]
Iteration 300 of 1000: loss=5.88 " + "l1=0" + "l2=5.88 f=-0.407 shape=(1, 9000, 1)
logits [[-0.93180007  0.23157552  0.2225938  -1.1513606 ]]
Iteration 400 of 1000: loss=5.34 " + "l1=0.0413" + "l2=5.3 f=-0.417 shape=(1, 9000, 1)
logits [[-0.97464275  0.22702874  0.23453029 -1.1537422 ]]
Iteration 500 of 1000: loss=5.01 " + "l1=0.0822" + "l2=4.93 f=-0.422 shape=(1, 9000, 1)
logits [[-1.0212063   0.22972296  0.2446708  -1.1393397 ]]
Iteration 600 of 1000: loss=4.79 " + "l1=0" + "l2=4.79 f=-0.425 shape=(1, 9000, 1)
logits [[-1.0581595   0.24716498  0.24052016 -1.1296573 ]]
Iteration 700 of 1000: loss=4.67 " + "l1=0" + "l2=4.67 f=-0.428 shape=(1, 9000, 1)
logits [[-1.0919538   0.23948641  0.2339388  -1.0922532 ]]
Iteration 800 of 1000: loss=4.57 " + "l1=0" + "l2=4.57 f=-0.427 shape=(1, 9000, 1)
logits [[-1.0942172   0.23744477  0.23029393 -1.0814859 ]]
Iteration 900 of 1000: loss=4.46 " + "l1=0" + "l2=4.46 f=-0.423 shape=(1, 9000, 1)
logits [[-1.097106    0.23342915  0.23252444 -1.0612957 ]]
--- 272.2803518772125 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00477 " + "l1=0.00477" + "l2=0 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.637429  -2.3802607  2.1606505 -3.8493795]]
Iteration 100 of 1000: loss=0.00466 " + "l1=0.00451" + "l2=0.000155 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.6109204 -2.3794065  2.1602654 -3.817957 ]]
Iteration 200 of 1000: loss=0.00463 " + "l1=0.00451" + "l2=0.00012 f=-0.356 shape=(1, 9000, 1)
logits [[ 2.6119902 -2.3795736  2.160633  -3.818567 ]]
Iteration 300 of 1000: loss=0.00463 " + "l1=0.0045" + "l2=0.000133 f=-0.356 shape=(1, 9000, 1)
logits [[ 2.6103842 -2.3795109  2.160722  -3.8163536]]
Iteration 400 of 1000: loss=0.00466 " + "l1=0.00448" + "l2=0.000185 f=-0.356 shape=(1, 9000, 1)
logits [[ 2.608392  -2.3794785  2.1608021 -3.8137538]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0477 " + "l1=0.0477" + "l2=0 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.637429  -2.3802607  2.1606505 -3.8493795]]
Iteration 100 of 1000: loss=0.0363 " + "l1=0.0283" + "l2=0.008 f=-0.349 shape=(1, 9000, 1)
logits [[ 2.440982  -2.3758965  2.1580617 -3.6180456]]
Iteration 200 of 1000: loss=0.0338 " + "l1=0.0242" + "l2=0.00955 f=-0.346 shape=(1, 9000, 1)
logits [[ 2.3995988 -2.372693   2.157243  -3.5698097]]
Iteration 300 of 1000: loss=0.0317 " + "l1=0.0207" + "l2=0.011 f=-0.344 shape=(1, 9000, 1)
logits [[ 2.367486  -2.3719633  2.1605961 -3.5315728]]
Iteration 400 of 1000: loss=0.0301 " + "l1=0.0181" + "l2=0.012 f=-0.342 shape=(1, 9000, 1)
logits [[ 2.3447778 -2.3735518  2.1641836 -3.5045483]]
Iteration 500 of 1000: loss=0.0287 " + "l1=0.0159" + "l2=0.0128 f=-0.341 shape=(1, 9000, 1)
logits [[ 2.326651  -2.3743181  2.1677706 -3.4836216]]
Iteration 600 of 1000: loss=0.0274 " + "l1=0.014" + "l2=0.0135 f=-0.34 shape=(1, 9000, 1)
logits [[ 2.3094244 -2.3745396  2.1699126 -3.4629593]]
Iteration 700 of 1000: loss=0.0263 " + "l1=0.012" + "l2=0.0143 f=-0.338 shape=(1, 9000, 1)
logits [[ 2.2926235 -2.3737624  2.1728032 -3.4433575]]
Iteration 800 of 1000: loss=0.0251 " + "l1=0.00995" + "l2=0.0152 f=-0.336 shape=(1, 9000, 1)
logits [[ 2.2759995 -2.3733206  2.1765466 -3.4232984]]
Iteration 900 of 1000: loss=0.024 " + "l1=0.00782" + "l2=0.0162 f=-0.334 shape=(1, 9000, 1)
logits [[ 2.2566073 -2.3714745  2.1783614 -3.3990033]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.477 " + "l1=0.477" + "l2=0 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.637429  -2.3802607  2.1606505 -3.8493795]]
Iteration 100 of 1000: loss=0.0499 " + "l1=0" + "l2=0.0499 f=-0.337 shape=(1, 9000, 1)
logits [[ 2.1489768 -2.3670125  2.1590672 -3.2870662]]
Iteration 200 of 1000: loss=0.0395 " + "l1=0" + "l2=0.0395 f=-0.336 shape=(1, 9000, 1)
logits [[ 2.1592705 -2.3735611  2.1671472 -3.2962818]]
Iteration 300 of 1000: loss=0.0397 " + "l1=0" + "l2=0.0397 f=-0.334 shape=(1, 9000, 1)
logits [[ 2.1410415 -2.3751752  2.1729333 -3.274123 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.262 " + "l1=0.262" + "l2=0 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.637429  -2.3802607  2.1606505 -3.8493795]]
Iteration 100 of 1000: loss=0.0473 " + "l1=0" + "l2=0.0473 f=-0.337 shape=(1, 9000, 1)
logits [[ 2.1541083 -2.3690403  2.1587534 -3.2913322]]
Iteration 200 of 1000: loss=0.0378 " + "l1=0.000299" + "l2=0.0375 f=-0.336 shape=(1, 9000, 1)
logits [[ 2.1695752 -2.3761952  2.169032  -3.3059194]]
Iteration 300 of 1000: loss=0.0334 " + "l1=0" + "l2=0.0334 f=-0.334 shape=(1, 9000, 1)
logits [[ 2.1705945 -2.3775089  2.1745381 -3.3053153]]
Iteration 400 of 1000: loss=0.03 " + "l1=0" + "l2=0.03 f=-0.334 shape=(1, 9000, 1)
logits [[ 2.174355  -2.377268   2.1769805 -3.3088229]]
Iteration 500 of 1000: loss=0.0271 " + "l1=0" + "l2=0.0271 f=-0.333 shape=(1, 9000, 1)
logits [[ 2.179257  -2.3755162  2.1795647 -3.3144314]]
Iteration 600 of 1000: loss=0.027 " + "l1=0" + "l2=0.027 f=-0.331 shape=(1, 9000, 1)
logits [[ 2.1675923 -2.3723755  2.1808763 -3.3006787]]
Iteration 700 of 1000: loss=0.0254 " + "l1=0" + "l2=0.0254 f=-0.33 shape=(1, 9000, 1)
logits [[ 2.1680274 -2.3694797  2.1815195 -3.300745 ]]
Iteration 800 of 1000: loss=0.0249 " + "l1=0" + "l2=0.0249 f=-0.329 shape=(1, 9000, 1)
logits [[ 2.1616108 -2.366197   2.182576  -3.2936363]]
Iteration 900 of 1000: loss=0.0235 " + "l1=0.00241" + "l2=0.0211 f=-0.329 shape=(1, 9000, 1)
logits [[ 2.1884413 -2.3652103  2.1840632 -3.3221579]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.155 " + "l1=0.155" + "l2=0 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.637429  -2.3802607  2.1606505 -3.8493795]]
Iteration 100 of 1000: loss=0.0466 " + "l1=0.000399" + "l2=0.0462 f=-0.337 shape=(1, 9000, 1)
logits [[ 2.1597474 -2.3685699  2.1585205 -3.2968953]]
Iteration 200 of 1000: loss=0.0374 " + "l1=0.000874" + "l2=0.0365 f=-0.335 shape=(1, 9000, 1)
logits [[ 2.1719239 -2.3761113  2.1692357 -3.306345 ]]
Iteration 300 of 1000: loss=0.0323 " + "l1=0.00043" + "l2=0.0319 f=-0.334 shape=(1, 9000, 1)
logits [[ 2.176642  -2.3770678  2.1753175 -3.3112667]]
Iteration 400 of 1000: loss=0.029 " + "l1=0.000516" + "l2=0.0285 f=-0.333 shape=(1, 9000, 1)
logits [[ 2.1793215 -2.3760092  2.1777332 -3.3142254]]
Iteration 500 of 1000: loss=0.0266 " + "l1=0" + "l2=0.0266 f=-0.332 shape=(1, 9000, 1)
logits [[ 2.1769311 -2.3730469  2.180074  -3.3109267]]
Iteration 600 of 1000: loss=0.0255 " + "l1=0.00158" + "l2=0.0239 f=-0.331 shape=(1, 9000, 1)
logits [[ 2.186161  -2.3709385  2.1812856 -3.3198776]]
Iteration 700 of 1000: loss=0.0242 " + "l1=0.00196" + "l2=0.0223 f=-0.33 shape=(1, 9000, 1)
logits [[ 2.1885114 -2.3675249  2.1824903 -3.3224928]]
Iteration 800 of 1000: loss=0.0229 " + "l1=0" + "l2=0.0229 f=-0.328 shape=(1, 9000, 1)
logits [[ 2.1764498 -2.3647063  2.1839933 -3.3091638]]
Iteration 900 of 1000: loss=0.0212 " + "l1=0" + "l2=0.0212 f=-0.328 shape=(1, 9000, 1)
logits [[ 2.1805985 -2.3627481  2.185179  -3.3135498]]
--- 238.4300262928009 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0649 " + "l1=0.0649" + "l2=0 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.637429  -2.3802607  2.1606505 -3.8493795]]
Iteration 100 of 1000: loss=0.0641 " + "l1=0.0634" + "l2=0.000663 f=-0.354 shape=(1, 9000, 1)
logits [[ 2.5739164 -2.3698158  2.1445415 -3.7655263]]
Iteration 200 of 1000: loss=0.0639 " + "l1=0.0632" + "l2=0.000692 f=-0.353 shape=(1, 9000, 1)
logits [[ 2.5658903 -2.3677447  2.142133  -3.7540586]]
Iteration 300 of 1000: loss=0.0638 " + "l1=0.063" + "l2=0.000772 f=-0.353 shape=(1, 9000, 1)
logits [[ 2.557843  -2.3657925  2.1396937 -3.7425077]]
Iteration 400 of 1000: loss=0.0637 " + "l1=0.0628" + "l2=0.000874 f=-0.352 shape=(1, 9000, 1)
logits [[ 2.5504904 -2.364117   2.137663  -3.7320826]]
Iteration 500 of 1000: loss=0.0637 " + "l1=0.0627" + "l2=0.00101 f=-0.351 shape=(1, 9000, 1)
logits [[ 2.544049  -2.3623567  2.135782  -3.7231169]]
Iteration 600 of 1000: loss=0.0636 " + "l1=0.0625" + "l2=0.00105 f=-0.351 shape=(1, 9000, 1)
logits [[ 2.5379395 -2.3606112  2.1339748 -3.7146592]]
Iteration 700 of 1000: loss=0.0636 " + "l1=0.0624" + "l2=0.00123 f=-0.35 shape=(1, 9000, 1)
logits [[ 2.5319762 -2.3587496  2.1320703 -3.70649  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.649 " + "l1=0.649" + "l2=0 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.637429  -2.3802607  2.1606505 -3.8493795]]
Iteration 100 of 1000: loss=0.574 " + "l1=0.523" + "l2=0.0508 f=-0.326 shape=(1, 9000, 1)
logits [[ 2.0899026 -2.2793834  2.0287352 -3.1448624]]
Iteration 200 of 1000: loss=0.557 " + "l1=0.503" + "l2=0.054 f=-0.319 shape=(1, 9000, 1)
logits [[ 2.0057864 -2.2588818  2.0026946 -3.0262575]]
Iteration 300 of 1000: loss=0.547 " + "l1=0.494" + "l2=0.0532 f=-0.314 shape=(1, 9000, 1)
logits [[ 1.9703817 -2.2359488  1.9723196 -2.963491 ]]
Iteration 400 of 1000: loss=0.538 " + "l1=0.486" + "l2=0.0521 f=-0.31 shape=(1, 9000, 1)
logits [[ 1.9447906 -2.213816   1.9434125 -2.9137135]]
Iteration 500 of 1000: loss=0.53 " + "l1=0.477" + "l2=0.0531 f=-0.306 shape=(1, 9000, 1)
logits [[ 1.9107493 -2.183289   1.9106494 -2.8607924]]
Iteration 600 of 1000: loss=0.524 " + "l1=0.47" + "l2=0.0539 f=-0.301 shape=(1, 9000, 1)
logits [[ 1.8838843 -2.1568298  1.8840704 -2.8143651]]
Iteration 700 of 1000: loss=0.518 " + "l1=0.464" + "l2=0.054 f=-0.296 shape=(1, 9000, 1)
logits [[ 1.8655854 -2.1374207  1.8655292 -2.776842 ]]
Iteration 800 of 1000: loss=0.513 " + "l1=0.459" + "l2=0.0538 f=-0.292 shape=(1, 9000, 1)
logits [[ 1.8495847 -2.1232896  1.8483225 -2.7414951]]
Iteration 900 of 1000: loss=0.508 " + "l1=0.454" + "l2=0.0538 f=-0.288 shape=(1, 9000, 1)
logits [[ 1.8294618 -2.1087952  1.8340324 -2.7081964]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.49 " + "l1=6.49" + "l2=0 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.637429  -2.3802607  2.1606505 -3.8493795]]
Iteration 100 of 1000: loss=3.55 " + "l1=2.18" + "l2=1.38 f=-0.234 shape=(1, 9000, 1)
logits [[ 0.6128373  -1.8852552   1.2559233  -0.91986686]]
Iteration 200 of 1000: loss=3 " + "l1=1.41" + "l2=1.6 f=-0.185 shape=(1, 9000, 1)
logits [[ 0.3865281  -1.7896186   1.0334561  -0.37209222]]
Iteration 300 of 1000: loss=2.57 " + "l1=0.89" + "l2=1.68 f=-0.167 shape=(1, 9000, 1)
logits [[ 0.22641426 -1.7154623   0.85519856 -0.03499813]]
Iteration 400 of 1000: loss=2.09 " + "l1=0.401" + "l2=1.69 f=-0.15 shape=(1, 9000, 1)
logits [[ 0.04148088 -1.6059883   0.6834457   0.28254515]]
Iteration 500 of 1000: loss=1.55 " + "l1=0.0031" + "l2=1.55 f=-0.139 shape=(1, 9000, 1)
logits [[-0.16249293 -1.5273601   0.5688461   0.565749  ]]
Iteration 600 of 1000: loss=1.14 " + "l1=0" + "l2=1.14 f=-0.148 shape=(1, 9000, 1)
logits [[-0.23548083 -1.5282947   0.5774011   0.5945137 ]]
Iteration 700 of 1000: loss=0.854 " + "l1=0" + "l2=0.854 f=-0.153 shape=(1, 9000, 1)
logits [[-0.28106776 -1.5739706   0.6154905   0.6258314 ]]
Iteration 800 of 1000: loss=0.685 " + "l1=0.0213" + "l2=0.664 f=-0.156 shape=(1, 9000, 1)
logits [[-0.29900542 -1.629616    0.6629514   0.64169765]]
Iteration 900 of 1000: loss=0.567 " + "l1=0" + "l2=0.567 f=-0.16 shape=(1, 9000, 1)
logits [[-0.35960296 -1.6618762   0.6783457   0.7031281 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.57 " + "l1=3.57" + "l2=0 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.637429  -2.3802607  2.1606505 -3.8493795]]
Iteration 100 of 1000: loss=2.43 " + "l1=1.9" + "l2=0.532 f=-0.268 shape=(1, 9000, 1)
logits [[ 1.1883383 -2.0006716  1.5921887 -1.8538303]]
Iteration 200 of 1000: loss=2.22 " + "l1=1.62" + "l2=0.595 f=-0.251 shape=(1, 9000, 1)
logits [[ 1.0109372 -1.9667486  1.4527423 -1.4991007]]
Iteration 300 of 1000: loss=2 " + "l1=1.31" + "l2=0.685 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.82683   -1.8802693  1.2812463 -1.1093596]]
Iteration 400 of 1000: loss=1.75 " + "l1=1.04" + "l2=0.712 f=-0.199 shape=(1, 9000, 1)
logits [[ 0.6382439 -1.7921027  1.1244642 -0.7658476]]
Iteration 500 of 1000: loss=1.35 " + "l1=0.481" + "l2=0.874 f=-0.19 shape=(1, 9000, 1)
logits [[ 0.12935649 -1.6602781   0.8220357  -0.05200984]]
Iteration 600 of 1000: loss=0.965 " + "l1=0.0966" + "l2=0.869 f=-0.171 shape=(1, 9000, 1)
logits [[-0.2131872  -1.5432873   0.6245254   0.44886786]]
Iteration 700 of 1000: loss=0.727 " + "l1=0.00334" + "l2=0.723 f=-0.171 shape=(1, 9000, 1)
logits [[-0.33548084 -1.5570326   0.6069378   0.600866  ]]
Iteration 800 of 1000: loss=0.586 " + "l1=0.00978" + "l2=0.576 f=-0.176 shape=(1, 9000, 1)
logits [[-0.35620502 -1.5921699   0.63151836  0.6137444 ]]
Iteration 900 of 1000: loss=0.485 " + "l1=0.00172" + "l2=0.483 f=-0.183 shape=(1, 9000, 1)
logits [[-0.40088293 -1.6204963   0.6464336   0.64330524]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.11 " + "l1=2.11" + "l2=0 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.637429  -2.3802607  2.1606505 -3.8493795]]
Iteration 100 of 1000: loss=1.61 " + "l1=1.41" + "l2=0.203 f=-0.291 shape=(1, 9000, 1)
logits [[ 1.6712859 -2.1408477  1.8141804 -2.5090292]]
Iteration 200 of 1000: loss=1.51 " + "l1=1.27" + "l2=0.242 f=-0.277 shape=(1, 9000, 1)
logits [[ 1.4740874 -2.0640576  1.6995636 -2.2156448]]
Iteration 300 of 1000: loss=1.44 " + "l1=1.17" + "l2=0.27 f=-0.264 shape=(1, 9000, 1)
logits [[ 1.3383766 -2.0230317  1.614295  -1.987463 ]]
Iteration 400 of 1000: loss=1.37 " + "l1=1.07" + "l2=0.301 f=-0.246 shape=(1, 9000, 1)
logits [[ 1.2100736 -1.9869951  1.5422603 -1.7513239]]
Iteration 500 of 1000: loss=1.29 " + "l1=0.956" + "l2=0.333 f=-0.231 shape=(1, 9000, 1)
logits [[ 1.0643609 -1.9463338  1.4494766 -1.4932429]]
Iteration 600 of 1000: loss=1.2 " + "l1=0.846" + "l2=0.356 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.91425073 -1.9072032   1.3571163  -1.2449077 ]]
Iteration 700 of 1000: loss=1.08 " + "l1=0.666" + "l2=0.414 f=-0.223 shape=(1, 9000, 1)
logits [[ 0.6141648  -1.8713164   1.207073   -0.84214634]]
Iteration 800 of 1000: loss=0.893 " + "l1=0.453" + "l2=0.44 f=-0.208 shape=(1, 9000, 1)
logits [[ 0.2893079  -1.7782857   1.0258024  -0.36776373]]
Iteration 900 of 1000: loss=0.703 " + "l1=0.244" + "l2=0.459 f=-0.188 shape=(1, 9000, 1)
logits [[-0.01507985 -1.7052896   0.8595616   0.10856824]]
--- 299.0842065811157 seconds ---
Adv result:3
