Updating 7b65ebe..8764e12
Fast-forward
 EOT_adv/EOTtile_eval.py | 16 +++++++---------
 EOT_tile-test.py        | 20 ++++++++++----------
 EOT_tile.py             |  7 ++++---
 EOT_tile_tf.py          |  7 ++++---
 4 files changed, 25 insertions(+), 25 deletions(-)
Loading model
Loading ground truth file
Attack diff is running...
Loading record A06911
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0155 " + "l1=0.0155" + "l2=0 f=-0.914 shape=(1, 9000, 1)
logits [[ 2.0589097   0.50614035  1.958642   -8.180278  ]]
Iteration 100 of 1000: loss=0.0146 " + "l1=0.0141" + "l2=0.000533 f=-0.924 shape=(1, 9000, 1)
logits [[ 1.971168   0.5660241  1.9392428 -8.173006 ]]
Iteration 200 of 1000: loss=0.0142 " + "l1=0.0136" + "l2=0.00062 f=-0.927 shape=(1, 9000, 1)
logits [[ 1.9439393  0.5816462  1.932395  -8.166119 ]]
Iteration 300 of 1000: loss=0.014 " + "l1=0.0133" + "l2=0.000692 f=-0.929 shape=(1, 9000, 1)
logits [[ 1.9246236  0.5949146  1.924626  -8.158474 ]]
Iteration 400 of 1000: loss=0.0138 " + "l1=0.0131" + "l2=0.000672 f=-0.928 shape=(1, 9000, 1)
logits [[ 1.9174318   0.60274637  1.9175451  -8.151091  ]]
Iteration 500 of 1000: loss=0.0137 " + "l1=0.013" + "l2=0.000725 f=-0.928 shape=(1, 9000, 1)
logits [[ 1.9109712  0.610285   1.9108336 -8.144175 ]]
Iteration 600 of 1000: loss=0.0137 " + "l1=0.0129" + "l2=0.000812 f=-0.928 shape=(1, 9000, 1)
logits [[ 1.9045211   0.61716807  1.9047914  -8.1379595 ]]
Iteration 700 of 1000: loss=0.0137 " + "l1=0.0128" + "l2=0.000929 f=-0.928 shape=(1, 9000, 1)
logits [[ 1.8988271  0.6233875  1.8992488 -8.132233 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.155 " + "l1=0.155" + "l2=0 f=-0.914 shape=(1, 9000, 1)
logits [[ 2.0589097   0.50614035  1.958642   -8.180278  ]]
Iteration 100 of 1000: loss=0.112 " + "l1=0.0956" + "l2=0.0162 f=-0.949 shape=(1, 9000, 1)
logits [[ 1.6627322  0.8512911  1.8072845 -8.117194 ]]
Iteration 200 of 1000: loss=0.0952 " + "l1=0.0714" + "l2=0.0237 f=-0.958 shape=(1, 9000, 1)
logits [[ 1.4662265  1.0122787  1.7267652 -8.0365305]]
Iteration 300 of 1000: loss=0.0819 " + "l1=0.0532" + "l2=0.0287 f=-0.965 shape=(1, 9000, 1)
logits [[ 1.3015491  1.1337503  1.6661954 -7.9631386]]
Iteration 400 of 1000: loss=0.0718 " + "l1=0.0401" + "l2=0.0317 f=-0.969 shape=(1, 9000, 1)
logits [[ 1.1864363  1.2179829  1.6190313 -7.8996577]]
Iteration 500 of 1000: loss=0.0643 " + "l1=0.0299" + "l2=0.0344 f=-0.969 shape=(1, 9000, 1)
logits [[ 1.1001277  1.2797136  1.578366  -7.8330336]]
Iteration 600 of 1000: loss=0.058 " + "l1=0.0207" + "l2=0.0372 f=-0.968 shape=(1, 9000, 1)
logits [[ 1.0178277  1.3345449  1.5419582 -7.7644186]]
Iteration 700 of 1000: loss=0.0521 " + "l1=0.0123" + "l2=0.0398 f=-0.967 shape=(1, 9000, 1)
logits [[ 0.93973047  1.3847657   1.5074823  -7.6997147 ]]
Iteration 800 of 1000: loss=0.0468 " + "l1=0.0055" + "l2=0.0413 f=-0.962 shape=(1, 9000, 1)
logits [[ 0.8973468  1.4173247  1.4722804 -7.6355596]]
Iteration 900 of 1000: loss=0.0419 " + "l1=0.000311" + "l2=0.0416 f=-0.959 shape=(1, 9000, 1)
logits [[ 0.8642968  1.4407307  1.4438412 -7.5839534]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0854 " + "l1=0.0854" + "l2=0 f=-0.914 shape=(1, 9000, 1)
logits [[ 2.0589097   0.50614035  1.958642   -8.180278  ]]
Iteration 100 of 1000: loss=0.07 " + "l1=0.0653" + "l2=0.00463 f=-0.933 shape=(1, 9000, 1)
logits [[ 1.8508567  0.6901657  1.8778301 -8.152141 ]]
Iteration 200 of 1000: loss=0.0651 " + "l1=0.0582" + "l2=0.00691 f=-0.94 shape=(1, 9000, 1)
logits [[ 1.7488947   0.77390265  1.8317584  -8.115795  ]]
Iteration 300 of 1000: loss=0.0608 " + "l1=0.0516" + "l2=0.00921 f=-0.945 shape=(1, 9000, 1)
logits [[ 1.6538014  0.8517136  1.7894744 -8.074394 ]]
Iteration 400 of 1000: loss=0.0571 " + "l1=0.0459" + "l2=0.0112 f=-0.949 shape=(1, 9000, 1)
logits [[ 1.5660331  0.9171704  1.7508506 -8.03095  ]]
Iteration 500 of 1000: loss=0.0538 " + "l1=0.0406" + "l2=0.0132 f=-0.951 shape=(1, 9000, 1)
logits [[ 1.4858167  0.9770135  1.7147709 -7.979999 ]]
Iteration 600 of 1000: loss=0.0508 " + "l1=0.0359" + "l2=0.0149 f=-0.954 shape=(1, 9000, 1)
logits [[ 1.4140135  1.0299593  1.6822337 -7.94026  ]]
Iteration 700 of 1000: loss=0.0482 " + "l1=0.032" + "l2=0.0162 f=-0.954 shape=(1, 9000, 1)
logits [[ 1.3620901  1.0716573  1.653655  -7.9022107]]
Iteration 800 of 1000: loss=0.0461 " + "l1=0.0293" + "l2=0.0167 f=-0.953 shape=(1, 9000, 1)
logits [[ 1.3264719  1.0991342  1.6322834 -7.870432 ]]
Iteration 900 of 1000: loss=0.0442 " + "l1=0.0271" + "l2=0.017 f=-0.952 shape=(1, 9000, 1)
logits [[ 1.2988924  1.1201963  1.6129651 -7.841155 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.12 " + "l1=0.12" + "l2=0 f=-0.914 shape=(1, 9000, 1)
logits [[ 2.0589097   0.50614035  1.958642   -8.180278  ]]
Iteration 100 of 1000: loss=0.0927 " + "l1=0.0832" + "l2=0.0095 f=-0.941 shape=(1, 9000, 1)
logits [[ 1.7606413   0.76844627  1.8425195  -8.135757  ]]
Iteration 200 of 1000: loss=0.0825 " + "l1=0.0681" + "l2=0.0144 f=-0.95 shape=(1, 9000, 1)
logits [[ 1.6065775  0.897402   1.7764149 -8.078466 ]]
Iteration 300 of 1000: loss=0.0742 " + "l1=0.0561" + "l2=0.0181 f=-0.955 shape=(1, 9000, 1)
logits [[ 1.4751587   0.99833137  1.722456   -8.015101  ]]
Iteration 400 of 1000: loss=0.0669 " + "l1=0.0454" + "l2=0.0214 f=-0.96 shape=(1, 9000, 1)
logits [[ 1.3502284  1.0868326  1.673261  -7.9522386]]
Iteration 500 of 1000: loss=0.0613 " + "l1=0.038" + "l2=0.0233 f=-0.963 shape=(1, 9000, 1)
logits [[ 1.268871   1.1466895  1.6366371 -7.9037843]]
Iteration 600 of 1000: loss=0.0569 " + "l1=0.032" + "l2=0.0249 f=-0.961 shape=(1, 9000, 1)
logits [[ 1.2082388  1.1917874  1.604646  -7.8500404]]
Iteration 700 of 1000: loss=0.0531 " + "l1=0.0268" + "l2=0.0263 f=-0.959 shape=(1, 9000, 1)
logits [[ 1.1592853  1.2298733  1.5754547 -7.8022227]]
Iteration 800 of 1000: loss=0.0499 " + "l1=0.0225" + "l2=0.0274 f=-0.958 shape=(1, 9000, 1)
logits [[ 1.1177996  1.2588665  1.5493108 -7.7578516]]
Iteration 900 of 1000: loss=0.0469 " + "l1=0.0187" + "l2=0.0282 f=-0.957 shape=(1, 9000, 1)
logits [[ 1.0826522  1.2832817  1.5246751 -7.717862 ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.138 " + "l1=0.138" + "l2=0 f=-0.914 shape=(1, 9000, 1)
logits [[ 2.0589097   0.50614035  1.958642   -8.180278  ]]
Iteration 100 of 1000: loss=0.103 " + "l1=0.0902" + "l2=0.0126 f=-0.945 shape=(1, 9000, 1)
logits [[ 1.7121677   0.80910915  1.8249059  -8.125322  ]]
Iteration 200 of 1000: loss=0.0892 " + "l1=0.0702" + "l2=0.0191 f=-0.954 shape=(1, 9000, 1)
logits [[ 1.5335333  0.9588348  1.7493222 -8.057316 ]]
Iteration 300 of 1000: loss=0.0785 " + "l1=0.0551" + "l2=0.0234 f=-0.96 shape=(1, 9000, 1)
logits [[ 1.3825198  1.0705774  1.6913631 -7.983612 ]]
Iteration 400 of 1000: loss=0.0697 " + "l1=0.0436" + "l2=0.0261 f=-0.966 shape=(1, 9000, 1)
logits [[ 1.2666696  1.1528579  1.6441913 -7.9267726]]
Iteration 500 of 1000: loss=0.0632 " + "l1=0.0345" + "l2=0.0287 f=-0.965 shape=(1, 9000, 1)
logits [[ 1.1824436  1.2172382  1.6056045 -7.866786 ]]
Iteration 600 of 1000: loss=0.058 " + "l1=0.0277" + "l2=0.0303 f=-0.963 shape=(1, 9000, 1)
logits [[ 1.1205841  1.2603645  1.5723208 -7.8069963]]
Iteration 700 of 1000: loss=0.0535 " + "l1=0.0214" + "l2=0.0321 f=-0.963 shape=(1, 9000, 1)
logits [[ 1.0620315  1.299842   1.5408885 -7.753361 ]]
Iteration 800 of 1000: loss=0.0493 " + "l1=0.0147" + "l2=0.0345 f=-0.962 shape=(1, 9000, 1)
logits [[ 0.9966327  1.3440706  1.5100042 -7.696755 ]]
Iteration 900 of 1000: loss=0.045 " + "l1=0.00926" + "l2=0.0358 f=-0.958 shape=(1, 9000, 1)
logits [[ 0.9529876  1.3758748  1.4802415 -7.6425114]]
--- 285.6498119831085 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.001 " + "l1=0.001" + "l2=0 f=-0.914 shape=(1, 9000, 1)
logits [[ 2.0589097   0.50614035  1.958642   -8.180278  ]]
Iteration 100 of 1000: loss=0.000704 " + "l1=0.000482" + "l2=0.000223 f=-0.922 shape=(1, 9000, 1)
logits [[ 2.005839    0.52767956  1.9576783  -8.178178  ]]
Iteration 200 of 1000: loss=0.000612 " + "l1=0.000382" + "l2=0.000231 f=-0.923 shape=(1, 9000, 1)
logits [[ 1.9944837  0.5322978  1.9563    -8.175878 ]]
Iteration 300 of 1000: loss=0.00054 " + "l1=0.00026" + "l2=0.000279 f=-0.925 shape=(1, 9000, 1)
logits [[ 1.9810274   0.53754425  1.954988   -8.173138  ]]
Iteration 400 of 1000: loss=0.00051 " + "l1=0.000146" + "l2=0.000364 f=-0.926 shape=(1, 9000, 1)
logits [[ 1.9681077   0.54242134  1.9535295  -8.169978  ]]
Iteration 500 of 1000: loss=0.000488 " + "l1=3.73e-05" + "l2=0.000451 f=-0.928 shape=(1, 9000, 1)
logits [[ 1.9557254  0.5470118  1.9519917 -8.166547 ]]
Iteration 600 of 1000: loss=0.000461 " + "l1=3.46e-06" + "l2=0.000458 f=-0.928 shape=(1, 9000, 1)
logits [[ 1.9513364   0.54801124  1.9509901  -8.163426  ]]
Iteration 700 of 1000: loss=0.000468 " + "l1=2.39e-06" + "l2=0.000466 f=-0.928 shape=(1, 9000, 1)
logits [[ 1.9508121   0.54736584  1.9505728  -8.161489  ]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.000501 " + "l1=0.000501" + "l2=0 f=-0.914 shape=(1, 9000, 1)
logits [[ 2.0589097   0.50614035  1.958642   -8.180278  ]]
Iteration 100 of 1000: loss=0.000434 " + "l1=0.000328" + "l2=0.000106 f=-0.919 shape=(1, 9000, 1)
logits [[ 2.0238152  0.5202681  1.9582318 -8.178882 ]]
Iteration 200 of 1000: loss=0.000404 " + "l1=0.000326" + "l2=7.84e-05 f=-0.919 shape=(1, 9000, 1)
logits [[ 2.0225472  0.5207417  1.9573915 -8.177581 ]]
Iteration 300 of 1000: loss=0.000391 " + "l1=0.000304" + "l2=8.7e-05 f=-0.92 shape=(1, 9000, 1)
logits [[ 2.0173876   0.52275884  1.9566102  -8.176237  ]]
Iteration 400 of 1000: loss=0.000422 " + "l1=0.000278" + "l2=0.000144 f=-0.921 shape=(1, 9000, 1)
logits [[ 2.0115697  0.5249385  1.9558856 -8.174716 ]]
const [0.0025]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.000251 " + "l1=0.000251" + "l2=0 f=-0.914 shape=(1, 9000, 1)
logits [[ 2.0589097   0.50614035  1.958642   -8.180278  ]]
Iteration 100 of 1000: loss=0.00025 " + "l1=0.000187" + "l2=6.3e-05 f=-0.918 shape=(1, 9000, 1)
logits [[ 2.033518   0.5162689  1.9587011 -8.179371 ]]
Iteration 200 of 1000: loss=0.000228 " + "l1=0.000197" + "l2=3.14e-05 f=-0.917 shape=(1, 9000, 1)
logits [[ 2.036759   0.5148585  1.9581394 -8.178598 ]]
Iteration 300 of 1000: loss=0.000222 " + "l1=0.000195" + "l2=2.68e-05 f=-0.917 shape=(1, 9000, 1)
logits [[ 2.0356712   0.51521915  1.9577131  -8.177921  ]]
Iteration 400 of 1000: loss=0.000257 " + "l1=0.00019" + "l2=6.66e-05 f=-0.918 shape=(1, 9000, 1)
logits [[ 2.0335789  0.5159404  1.9573823 -8.177186 ]]
const [0.00125]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.000125 " + "l1=0.000125" + "l2=0 f=-0.914 shape=(1, 9000, 1)
logits [[ 2.0589097   0.50614035  1.958642   -8.180278  ]]
Iteration 100 of 1000: loss=0.000145 " + "l1=9.97e-05" + "l2=4.49e-05 f=-0.917 shape=(1, 9000, 1)
logits [[ 2.038547   0.5141508  1.9587501 -8.179523 ]]
const [0.000625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=6.27e-05 " + "l1=6.27e-05" + "l2=0 f=-0.914 shape=(1, 9000, 1)
logits [[ 2.0589097   0.50614035  1.958642   -8.180278  ]]
Iteration 100 of 1000: loss=8.55e-05 " + "l1=5.21e-05" + "l2=3.35e-05 f=-0.917 shape=(1, 9000, 1)
logits [[ 2.042146   0.5126454  1.95882   -8.1796465]]
--- 108.3005211353302 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.102 " + "l1=0.102" + "l2=0 f=-0.914 shape=(1, 9000, 1)
logits [[ 2.0589097   0.50614035  1.958642   -8.180278  ]]
Iteration 100 of 1000: loss=0.102 " + "l1=0.101" + "l2=0.000418 f=-0.918 shape=(1, 9000, 1)
logits [[ 1.9839094   0.53388214  1.9379072  -8.126932  ]]
Iteration 200 of 1000: loss=0.101 " + "l1=0.101" + "l2=0.000481 f=-0.919 shape=(1, 9000, 1)
logits [[ 1.9609084  0.5435447  1.9308441 -8.111696 ]]
Iteration 300 of 1000: loss=0.101 " + "l1=0.1" + "l2=0.000634 f=-0.92 shape=(1, 9000, 1)
logits [[ 1.9341995  0.5543329  1.922302  -8.09267  ]]
Iteration 400 of 1000: loss=0.101 " + "l1=0.0999" + "l2=0.000737 f=-0.921 shape=(1, 9000, 1)
logits [[ 1.9141504  0.5617449  1.9137591 -8.072965 ]]
Iteration 500 of 1000: loss=0.1 " + "l1=0.0996" + "l2=0.000833 f=-0.92 shape=(1, 9000, 1)
logits [[ 1.9059707  0.5644756  1.9058093 -8.054551 ]]
Iteration 600 of 1000: loss=0.1 " + "l1=0.0994" + "l2=0.00096 f=-0.918 shape=(1, 9000, 1)
logits [[ 1.8983485  0.5671627  1.8982451 -8.037278 ]]
Iteration 700 of 1000: loss=0.1 " + "l1=0.0991" + "l2=0.00108 f=-0.917 shape=(1, 9000, 1)
logits [[ 1.8911357  0.569571   1.8911598 -8.021271 ]]
Iteration 800 of 1000: loss=0.1 " + "l1=0.0989" + "l2=0.00128 f=-0.916 shape=(1, 9000, 1)
logits [[ 1.8847369  0.5717656  1.8844357 -8.006376 ]]
Iteration 900 of 1000: loss=0.1 " + "l1=0.0987" + "l2=0.00127 f=-0.916 shape=(1, 9000, 1)
logits [[ 1.877197   0.5744727  1.8777817 -7.9924054]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.02 " + "l1=1.02" + "l2=0 f=-0.914 shape=(1, 9000, 1)
logits [[ 2.0589097   0.50614035  1.958642   -8.180278  ]]
Iteration 100 of 1000: loss=0.976 " + "l1=0.961" + "l2=0.0148 f=-0.897 shape=(1, 9000, 1)
logits [[ 1.8108504  0.586029   1.8124326 -7.7955766]]
Iteration 200 of 1000: loss=0.948 " + "l1=0.922" + "l2=0.0255 f=-0.881 shape=(1, 9000, 1)
logits [[ 1.6510278  0.6418653  1.7030209 -7.519258 ]]
Iteration 300 of 1000: loss=0.921 " + "l1=0.885" + "l2=0.0361 f=-0.864 shape=(1, 9000, 1)
logits [[ 1.4866602  0.7084628  1.5975012 -7.2497396]]
Iteration 400 of 1000: loss=0.896 " + "l1=0.851" + "l2=0.0453 f=-0.847 shape=(1, 9000, 1)
logits [[ 1.3461983  0.7613353  1.5069311 -7.0009866]]
Iteration 500 of 1000: loss=0.871 " + "l1=0.816" + "l2=0.0554 f=-0.824 shape=(1, 9000, 1)
logits [[ 1.2416295   0.78315884  1.4196512  -6.740809  ]]
Iteration 600 of 1000: loss=0.844 " + "l1=0.778" + "l2=0.0659 f=-0.796 shape=(1, 9000, 1)
logits [[ 1.1444365  0.7938711  1.3298293 -6.4519925]]
Iteration 700 of 1000: loss=0.809 " + "l1=0.733" + "l2=0.0767 f=-0.754 shape=(1, 9000, 1)
logits [[ 1.0562955   0.79529077  1.2295778  -6.0973597 ]]
Iteration 800 of 1000: loss=0.77 " + "l1=0.683" + "l2=0.087 f=-0.704 shape=(1, 9000, 1)
logits [[ 0.9711661   0.77064276  1.1337888  -5.692064  ]]
Iteration 900 of 1000: loss=0.724 " + "l1=0.621" + "l2=0.103 f=-0.636 shape=(1, 9000, 1)
logits [[ 0.91069114  0.69650954  1.0303451  -5.179717  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.2 " + "l1=10.2" + "l2=0 f=-0.914 shape=(1, 9000, 1)
logits [[ 2.0589097   0.50614035  1.958642   -8.180278  ]]
Iteration 100 of 1000: loss=6.37 " + "l1=4.73" + "l2=1.64 f=-0.565 shape=(1, 9000, 1)
logits [[ 0.25447077  0.6551987   0.77800137 -3.947264  ]]
Iteration 200 of 1000: loss=3.66 " + "l1=1.3" + "l2=2.36 f=-0.298 shape=(1, 9000, 1)
logits [[-0.48759076  0.19147459  0.2024764  -1.1001545 ]]
Iteration 300 of 1000: loss=1.89 " + "l1=0" + "l2=1.89 f=-0.209 shape=(1, 9000, 1)
logits [[-0.68515664 -0.07451367 -0.04511821 -0.03159028]]
Iteration 400 of 1000: loss=1.37 " + "l1=0" + "l2=1.37 f=-0.219 shape=(1, 9000, 1)
logits [[-0.73103964 -0.08072488 -0.0546493  -0.00965879]]
Iteration 500 of 1000: loss=1.15 " + "l1=0.00929" + "l2=1.14 f=-0.231 shape=(1, 9000, 1)
logits [[-0.7525413  -0.07222319 -0.0454455  -0.05473351]]
Iteration 600 of 1000: loss=1.02 " + "l1=0.00183" + "l2=1.02 f=-0.235 shape=(1, 9000, 1)
logits [[-0.7838722  -0.07481397 -0.03980657 -0.04163466]]
Iteration 700 of 1000: loss=0.955 " + "l1=0.0197" + "l2=0.936 f=-0.237 shape=(1, 9000, 1)
logits [[-0.8071697  -0.06755052 -0.02675882 -0.04642019]]
Iteration 800 of 1000: loss=0.88 " + "l1=0.0111" + "l2=0.868 f=-0.24 shape=(1, 9000, 1)
logits [[-0.85178196 -0.03390038 -0.03256191 -0.0437108 ]]
Iteration 900 of 1000: loss=0.829 " + "l1=0" + "l2=0.829 f=-0.241 shape=(1, 9000, 1)
logits [[-0.90858847 -0.05417868 -0.01554923  0.0128837 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.63 " + "l1=5.63" + "l2=0 f=-0.914 shape=(1, 9000, 1)
logits [[ 2.0589097   0.50614035  1.958642   -8.180278  ]]
Iteration 100 of 1000: loss=4.33 " + "l1=3.8" + "l2=0.53 f=-0.729 shape=(1, 9000, 1)
logits [[ 0.9281     0.7165582  1.1753193 -5.73471  ]]
Iteration 200 of 1000: loss=3.35 " + "l1=2.45" + "l2=0.898 f=-0.529 shape=(1, 9000, 1)
logits [[ 0.28400484  0.61679715  0.71886164 -3.7337768 ]]
Iteration 300 of 1000: loss=2.14 " + "l1=0.99" + "l2=1.15 f=-0.295 shape=(1, 9000, 1)
logits [[-0.23299491  0.28316808  0.28397056 -1.5159287 ]]
Iteration 400 of 1000: loss=1.28 " + "l1=0" + "l2=1.28 f=-0.202 shape=(1, 9000, 1)
logits [[-0.6669795  -0.04815352 -0.04973686 -0.04178256]]
Iteration 500 of 1000: loss=1.02 " + "l1=0.00892" + "l2=1.01 f=-0.226 shape=(1, 9000, 1)
logits [[-0.7507277  -0.05141082 -0.04330606 -0.05953131]]
Iteration 600 of 1000: loss=0.898 " + "l1=0.0012" + "l2=0.897 f=-0.235 shape=(1, 9000, 1)
logits [[-0.8221268  -0.0372273  -0.04153838 -0.03941806]]
Iteration 700 of 1000: loss=0.809 " + "l1=0" + "l2=0.809 f=-0.244 shape=(1, 9000, 1)
logits [[-0.91756713 -0.02246371 -0.02332095 -0.01263256]]
Iteration 800 of 1000: loss=0.743 " + "l1=0" + "l2=0.743 f=-0.249 shape=(1, 9000, 1)
logits [[-0.99702007 -0.01248099 -0.00491605  0.01906412]]
Iteration 900 of 1000: loss=0.684 " + "l1=0.00145" + "l2=0.682 f=-0.253 shape=(1, 9000, 1)
logits [[-1.03607    -0.00390566  0.01465902  0.01202726]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.33 " + "l1=3.33" + "l2=0 f=-0.914 shape=(1, 9000, 1)
logits [[ 2.0589097   0.50614035  1.958642   -8.180278  ]]
Iteration 100 of 1000: loss=2.86 " + "l1=2.67" + "l2=0.188 f=-0.815 shape=(1, 9000, 1)
logits [[ 1.2879415  0.7236899  1.4718063 -6.74394  ]]
Iteration 200 of 1000: loss=2.52 " + "l1=2.22" + "l2=0.294 f=-0.722 shape=(1, 9000, 1)
logits [[ 0.9055989   0.71841896  1.1668363  -5.6774597 ]]
Iteration 300 of 1000: loss=2.12 " + "l1=1.69" + "l2=0.437 f=-0.585 shape=(1, 9000, 1)
logits [[ 0.52857316  0.64403725  0.837226   -4.3493013 ]]
Iteration 400 of 1000: loss=1.59 " + "l1=0.976" + "l2=0.618 f=-0.368 shape=(1, 9000, 1)
logits [[ 0.15283833  0.44710693  0.46451142 -2.537766  ]]
Iteration 500 of 1000: loss=1.24 " + "l1=0.547" + "l2=0.694 f=-0.272 shape=(1, 9000, 1)
logits [[-0.17050123  0.25321892  0.25445876 -1.4270968 ]]
Iteration 600 of 1000: loss=1.07 " + "l1=0.313" + "l2=0.762 f=-0.24 shape=(1, 9000, 1)
logits [[-0.4220864   0.13644771  0.14306848 -0.8189418 ]]
Iteration 700 of 1000: loss=0.923 " + "l1=0.0973" + "l2=0.825 f=-0.21 shape=(1, 9000, 1)
logits [[-0.63638496  0.0284737   0.03419088 -0.26517937]]
Iteration 800 of 1000: loss=0.771 " + "l1=0" + "l2=0.771 f=-0.209 shape=(1, 9000, 1)
logits [[-0.8119931  -0.01114341 -0.00612391 -0.0054526 ]]
Iteration 900 of 1000: loss=0.685 " + "l1=0.000547" + "l2=0.684 f=-0.223 shape=(1, 9000, 1)
logits [[-0.9172252  -0.00108856  0.01417951  0.01249627]]
--- 305.7883687019348 seconds ---
Adv result:3
Loading record A06932
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0162 " + "l1=0.0162" + "l2=0 f=-0.0745 shape=(1, 9000, 1)
logits [[ 0.70780075 -0.9162484   0.42698258 -0.5164477 ]]
Iteration 100 of 1000: loss=0.015 " + "l1=0.0143" + "l2=0.000773 f=-0.0762 shape=(1, 9000, 1)
logits [[ 0.6030707  -0.822275    0.34812903 -0.43359518]]
Iteration 200 of 1000: loss=0.0147 " + "l1=0.0137" + "l2=0.000987 f=-0.0763 shape=(1, 9000, 1)
logits [[ 0.5717572  -0.7976586   0.32977775 -0.40913612]]
Iteration 300 of 1000: loss=0.0144 " + "l1=0.0132" + "l2=0.0012 f=-0.0763 shape=(1, 9000, 1)
logits [[ 0.5436234  -0.77611715  0.31399292 -0.38659692]]
Iteration 400 of 1000: loss=0.0142 " + "l1=0.0128" + "l2=0.00144 f=-0.0762 shape=(1, 9000, 1)
logits [[ 0.5194394  -0.75848866  0.30161807 -0.36734787]]
Iteration 500 of 1000: loss=0.014 " + "l1=0.0124" + "l2=0.00161 f=-0.0759 shape=(1, 9000, 1)
logits [[ 0.49690595 -0.7419489   0.2903539  -0.3488637 ]]
Iteration 600 of 1000: loss=0.0138 " + "l1=0.012" + "l2=0.00177 f=-0.0756 shape=(1, 9000, 1)
logits [[ 0.47660914 -0.7279708   0.28079367 -0.33180082]]
Iteration 700 of 1000: loss=0.0138 " + "l1=0.0117" + "l2=0.00208 f=-0.0754 shape=(1, 9000, 1)
logits [[ 0.4559105  -0.7136912   0.27172136 -0.3155827 ]]
Iteration 800 of 1000: loss=0.0135 " + "l1=0.0114" + "l2=0.00211 f=-0.0752 shape=(1, 9000, 1)
logits [[ 0.43733078 -0.7016967   0.2642913  -0.3008925 ]]
Iteration 900 of 1000: loss=0.0134 " + "l1=0.0111" + "l2=0.00228 f=-0.075 shape=(1, 9000, 1)
logits [[ 0.4214649  -0.6887649   0.25604686 -0.28879118]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.162 " + "l1=0.162" + "l2=0 f=-0.0745 shape=(1, 9000, 1)
logits [[ 0.70780075 -0.9162484   0.42698258 -0.5164477 ]]
Iteration 100 of 1000: loss=0.0584 " + "l1=0.0239" + "l2=0.0345 f=-0.0848 shape=(1, 9000, 1)
logits [[-0.02296311 -0.26209664 -0.02471769 -0.02947978]]
Iteration 200 of 1000: loss=0.0455 " + "l1=0.0108" + "l2=0.0347 f=-0.084 shape=(1, 9000, 1)
logits [[-0.05176648 -0.15969305 -0.05810693 -0.06639853]]
Iteration 300 of 1000: loss=0.0381 " + "l1=0.00195" + "l2=0.0362 f=-0.084 shape=(1, 9000, 1)
logits [[-0.07618728 -0.0956389  -0.08425444 -0.0798139 ]]
Iteration 400 of 1000: loss=0.0352 " + "l1=0.000993" + "l2=0.0342 f=-0.0832 shape=(1, 9000, 1)
logits [[-0.07749208 -0.0844109  -0.0744856  -0.09633678]]
Iteration 500 of 1000: loss=0.0313 " + "l1=0" + "l2=0.0313 f=-0.0812 shape=(1, 9000, 1)
logits [[-0.08734673 -0.07691163 -0.08125462 -0.07933751]]
Iteration 600 of 1000: loss=0.0298 " + "l1=0.000634" + "l2=0.0291 f=-0.0811 shape=(1, 9000, 1)
logits [[-0.10042711 -0.07260426 -0.08512892 -0.06626071]]
Iteration 700 of 1000: loss=0.0274 " + "l1=0.0008" + "l2=0.0266 f=-0.0772 shape=(1, 9000, 1)
logits [[-0.07460696 -0.07890644 -0.0709048  -0.08454695]]
Iteration 800 of 1000: loss=0.0261 " + "l1=0" + "l2=0.0261 f=-0.0754 shape=(1, 9000, 1)
logits [[-0.0890603  -0.06412717 -0.08405893 -0.06428147]]
Iteration 900 of 1000: loss=0.0251 " + "l1=6e-05" + "l2=0.025 f=-0.075 shape=(1, 9000, 1)
logits [[-0.09288321 -0.06403759 -0.07959952 -0.06343801]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0893 " + "l1=0.0893" + "l2=0 f=-0.0745 shape=(1, 9000, 1)
logits [[ 0.70780075 -0.9162484   0.42698258 -0.5164477 ]]
Iteration 100 of 1000: loss=0.0493 " + "l1=0.0255" + "l2=0.0238 f=-0.0913 shape=(1, 9000, 1)
logits [[ 0.03937699 -0.4251504   0.03779771 -0.01735678]]
Iteration 200 of 1000: loss=0.0396 " + "l1=0.0179" + "l2=0.0217 f=-0.0823 shape=(1, 9000, 1)
logits [[ 0.00362901 -0.32256365 -0.00918719 -0.0011602 ]]
Iteration 300 of 1000: loss=0.0348 " + "l1=0.0152" + "l2=0.0196 f=-0.0805 shape=(1, 9000, 1)
logits [[-0.00970584 -0.28611845 -0.0123227  -0.01379342]]
Iteration 400 of 1000: loss=0.0322 " + "l1=0.0137" + "l2=0.0185 f=-0.079 shape=(1, 9000, 1)
logits [[-0.01203987 -0.26078337 -0.01361136 -0.0294683 ]]
Iteration 500 of 1000: loss=0.0302 " + "l1=0.0115" + "l2=0.0188 f=-0.0783 shape=(1, 9000, 1)
logits [[-0.03244074 -0.2300241  -0.02896531 -0.02175374]]
Iteration 600 of 1000: loss=0.0289 " + "l1=0.0107" + "l2=0.0182 f=-0.0777 shape=(1, 9000, 1)
logits [[-0.02823888 -0.22006224 -0.02485134 -0.03771102]]
Iteration 700 of 1000: loss=0.0276 " + "l1=0.00921" + "l2=0.0184 f=-0.0767 shape=(1, 9000, 1)
logits [[-0.04437607 -0.19484337 -0.04032382 -0.0274266 ]]
Iteration 800 of 1000: loss=0.0271 " + "l1=0.00772" + "l2=0.0193 f=-0.0794 shape=(1, 9000, 1)
logits [[-0.06354506 -0.1720567  -0.05039896 -0.03177895]]
Iteration 900 of 1000: loss=0.0251 " + "l1=0.00591" + "l2=0.0191 f=-0.077 shape=(1, 9000, 1)
logits [[-0.05012406 -0.15636174 -0.04891943 -0.05252477]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.126 " + "l1=0.126" + "l2=0 f=-0.0745 shape=(1, 9000, 1)
logits [[ 0.70780075 -0.9162484   0.42698258 -0.5164477 ]]
Iteration 100 of 1000: loss=0.0539 " + "l1=0.0247" + "l2=0.0292 f=-0.0874 shape=(1, 9000, 1)
logits [[-0.00776353 -0.32501203 -0.00652825 -0.01049463]]
Iteration 200 of 1000: loss=0.0442 " + "l1=0.0179" + "l2=0.0263 f=-0.0817 shape=(1, 9000, 1)
logits [[-0.01827863 -0.24860822 -0.02139184 -0.03846714]]
Iteration 300 of 1000: loss=0.0385 " + "l1=0.0117" + "l2=0.0268 f=-0.0818 shape=(1, 9000, 1)
logits [[-0.03728298 -0.18777044 -0.04720098 -0.05490301]]
Iteration 400 of 1000: loss=0.034 " + "l1=0.007" + "l2=0.027 f=-0.0829 shape=(1, 9000, 1)
logits [[-0.05433083 -0.14464734 -0.06310023 -0.06968217]]
Iteration 500 of 1000: loss=0.0318 " + "l1=0.0045" + "l2=0.0273 f=-0.0813 shape=(1, 9000, 1)
logits [[-0.05716282 -0.11524246 -0.07171607 -0.08123929]]
Iteration 600 of 1000: loss=0.0291 " + "l1=0.00106" + "l2=0.028 f=-0.0823 shape=(1, 9000, 1)
logits [[-0.08648044 -0.08554081 -0.08513248 -0.07189868]]
Iteration 700 of 1000: loss=0.0272 " + "l1=0.000572" + "l2=0.0266 f=-0.0797 shape=(1, 9000, 1)
logits [[-0.07454494 -0.08186362 -0.07448076 -0.08774257]]
Iteration 800 of 1000: loss=0.0264 " + "l1=0.00122" + "l2=0.0252 f=-0.0777 shape=(1, 9000, 1)
logits [[-0.09201334 -0.07530645 -0.08373876 -0.05960459]]
Iteration 900 of 1000: loss=0.0245 " + "l1=0.00091" + "l2=0.0236 f=-0.0765 shape=(1, 9000, 1)
logits [[-0.07687134 -0.0811042  -0.06936047 -0.0784974 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.108 " + "l1=0.108" + "l2=0 f=-0.0745 shape=(1, 9000, 1)
logits [[ 0.70780075 -0.9162484   0.42698258 -0.5164477 ]]
Iteration 100 of 1000: loss=0.0517 " + "l1=0.0249" + "l2=0.0269 f=-0.0891 shape=(1, 9000, 1)
logits [[ 0.00879476 -0.36548972  0.00962997 -0.00919001]]
Iteration 200 of 1000: loss=0.0421 " + "l1=0.0186" + "l2=0.0235 f=-0.0829 shape=(1, 9000, 1)
logits [[-0.01092841 -0.28948224 -0.00911028 -0.02200609]]
Iteration 300 of 1000: loss=0.0368 " + "l1=0.0141" + "l2=0.0227 f=-0.08 shape=(1, 9000, 1)
logits [[-0.02632017 -0.23908083 -0.02918034 -0.02552705]]
Iteration 400 of 1000: loss=0.0337 " + "l1=0.0111" + "l2=0.0226 f=-0.0808 shape=(1, 9000, 1)
logits [[-0.04728568 -0.2007498  -0.04177347 -0.03330671]]
Iteration 500 of 1000: loss=0.0311 " + "l1=0.00826" + "l2=0.0228 f=-0.0817 shape=(1, 9000, 1)
logits [[-0.04774802 -0.17245875 -0.04969023 -0.05703932]]
Iteration 600 of 1000: loss=0.0294 " + "l1=0.00639" + "l2=0.023 f=-0.0807 shape=(1, 9000, 1)
logits [[-0.05131073 -0.14775273 -0.05884125 -0.06499713]]
Iteration 700 of 1000: loss=0.0282 " + "l1=0.00451" + "l2=0.0237 f=-0.0818 shape=(1, 9000, 1)
logits [[-0.08205899 -0.12204451 -0.06906031 -0.053927  ]]
Iteration 800 of 1000: loss=0.0262 " + "l1=0.00276" + "l2=0.0235 f=-0.0775 shape=(1, 9000, 1)
logits [[-0.06291508 -0.10456508 -0.06612416 -0.07633089]]
Iteration 900 of 1000: loss=0.025 " + "l1=0.00144" + "l2=0.0236 f=-0.076 shape=(1, 9000, 1)
logits [[-0.06497169 -0.08668845 -0.06946978 -0.08277516]]
--- 305.6406126022339 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00281 " + "l1=0.00281" + "l2=0 f=-0.0745 shape=(1, 9000, 1)
logits [[ 0.70780075 -0.9162484   0.42698258 -0.5164477 ]]
Iteration 100 of 1000: loss=0.00246 " + "l1=0.00219" + "l2=0.000266 f=-0.0789 shape=(1, 9000, 1)
logits [[ 0.6607765  -0.933112    0.4414164  -0.48482943]]
Iteration 200 of 1000: loss=0.00233 " + "l1=0.00207" + "l2=0.000265 f=-0.0792 shape=(1, 9000, 1)
logits [[ 0.653584   -0.9353469   0.44667467 -0.48155862]]
Iteration 300 of 1000: loss=0.00226 " + "l1=0.00191" + "l2=0.00035 f=-0.0798 shape=(1, 9000, 1)
logits [[ 0.64293027 -0.9378635   0.45199358 -0.47628105]]
Iteration 400 of 1000: loss=0.00218 " + "l1=0.00174" + "l2=0.000441 f=-0.0805 shape=(1, 9000, 1)
logits [[ 0.631649  -0.9404551  0.4573623 -0.4705707]]
Iteration 500 of 1000: loss=0.00212 " + "l1=0.00158" + "l2=0.000541 f=-0.0813 shape=(1, 9000, 1)
logits [[ 0.62047875 -0.94285506  0.4627363  -0.4655785 ]]
Iteration 600 of 1000: loss=0.00211 " + "l1=0.0014" + "l2=0.000707 f=-0.0821 shape=(1, 9000, 1)
logits [[ 0.6086448  -0.9454271   0.46880692 -0.46046937]]
Iteration 700 of 1000: loss=0.00196 " + "l1=0.00122" + "l2=0.000742 f=-0.0829 shape=(1, 9000, 1)
logits [[ 0.59683394 -0.9474907   0.4748561  -0.4556203 ]]
Iteration 800 of 1000: loss=0.00195 " + "l1=0.00107" + "l2=0.000882 f=-0.0833 shape=(1, 9000, 1)
logits [[ 0.58680904 -0.94814575  0.4795343  -0.45135576]]
Iteration 900 of 1000: loss=0.00186 " + "l1=0.000899" + "l2=0.000957 f=-0.0838 shape=(1, 9000, 1)
logits [[ 0.5753782  -0.94946927  0.48549807 -0.44653848]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0281 " + "l1=0.0281" + "l2=0 f=-0.0745 shape=(1, 9000, 1)
logits [[ 0.70780075 -0.9162484   0.42698258 -0.5164477 ]]
Iteration 100 of 1000: loss=0.00483 " + "l1=0" + "l2=0.00483 f=-0.0972 shape=(1, 9000, 1)
logits [[ 0.49151787 -0.98553556  0.49599487 -0.39089438]]
Iteration 200 of 1000: loss=0.00324 " + "l1=0.00036" + "l2=0.00288 f=-0.094 shape=(1, 9000, 1)
logits [[ 0.50108147 -0.9729906   0.49748448 -0.4013787 ]]
Iteration 300 of 1000: loss=0.0024 " + "l1=0" + "l2=0.0024 f=-0.0917 shape=(1, 9000, 1)
logits [[ 0.49921587 -0.96813893  0.5035831  -0.4015472 ]]
Iteration 400 of 1000: loss=0.00207 " + "l1=0" + "l2=0.00207 f=-0.0901 shape=(1, 9000, 1)
logits [[ 0.49976638 -0.964385    0.5092829  -0.40499625]]
Iteration 500 of 1000: loss=0.00169 " + "l1=0.000136" + "l2=0.00156 f=-0.0884 shape=(1, 9000, 1)
logits [[ 0.5098131  -0.95843655  0.508453   -0.41362888]]
Iteration 600 of 1000: loss=0.00153 " + "l1=0" + "l2=0.00153 f=-0.0881 shape=(1, 9000, 1)
logits [[ 0.50757456 -0.95728487  0.5114659  -0.41423672]]
Iteration 700 of 1000: loss=0.00145 " + "l1=0" + "l2=0.00145 f=-0.088 shape=(1, 9000, 1)
logits [[ 0.50393414 -0.9566559   0.51401466 -0.41331863]]
Iteration 800 of 1000: loss=0.00144 " + "l1=0" + "l2=0.00144 f=-0.087 shape=(1, 9000, 1)
logits [[ 0.5102416  -0.95242864  0.5126947  -0.41840696]]
Iteration 900 of 1000: loss=0.00158 " + "l1=0" + "l2=0.00158 f=-0.0874 shape=(1, 9000, 1)
logits [[ 0.5019183 -0.9550597  0.5170285 -0.4136542]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0154 " + "l1=0.0154" + "l2=0 f=-0.0745 shape=(1, 9000, 1)
logits [[ 0.70780075 -0.9162484   0.42698258 -0.5164477 ]]
Iteration 100 of 1000: loss=0.00498 " + "l1=0.000185" + "l2=0.00479 f=-0.0947 shape=(1, 9000, 1)
logits [[ 0.5042423  -0.98692983  0.50088185 -0.39701298]]
Iteration 200 of 1000: loss=0.00302 " + "l1=1.02e-05" + "l2=0.00301 f=-0.0924 shape=(1, 9000, 1)
logits [[ 0.5006564  -0.97106     0.50047153 -0.3994955 ]]
Iteration 300 of 1000: loss=0.00235 " + "l1=0" + "l2=0.00235 f=-0.091 shape=(1, 9000, 1)
logits [[ 0.50002056 -0.96545976  0.503549   -0.40201476]]
Iteration 400 of 1000: loss=0.00185 " + "l1=0" + "l2=0.00185 f=-0.0892 shape=(1, 9000, 1)
logits [[ 0.5054449  -0.96035826  0.50725186 -0.4090116 ]]
Iteration 500 of 1000: loss=0.00153 " + "l1=0" + "l2=0.00153 f=-0.0881 shape=(1, 9000, 1)
logits [[ 0.5089925  -0.95771325  0.5100195  -0.4136399 ]]
Iteration 600 of 1000: loss=0.00149 " + "l1=0" + "l2=0.00149 f=-0.0875 shape=(1, 9000, 1)
logits [[ 0.50869477 -0.95534754  0.5117951  -0.41510624]]
Iteration 700 of 1000: loss=0.00137 " + "l1=0" + "l2=0.00137 f=-0.087 shape=(1, 9000, 1)
logits [[ 0.5104809  -0.9522748   0.5113387  -0.41759416]]
Iteration 800 of 1000: loss=0.00128 " + "l1=0" + "l2=0.00128 f=-0.0868 shape=(1, 9000, 1)
logits [[ 0.50929767 -0.9515216   0.51250833 -0.4174378 ]]
Iteration 900 of 1000: loss=0.00129 " + "l1=0" + "l2=0.00129 f=-0.0863 shape=(1, 9000, 1)
logits [[ 0.51115155 -0.94982684  0.51296663 -0.4194625 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00913 " + "l1=0.00913" + "l2=0 f=-0.0745 shape=(1, 9000, 1)
logits [[ 0.70780075 -0.9162484   0.42698258 -0.5164477 ]]
Iteration 100 of 1000: loss=0.00547 " + "l1=0.00331" + "l2=0.00216 f=-0.0871 shape=(1, 9000, 1)
logits [[ 0.5768689  -0.965387    0.47514573 -0.43512654]]
Iteration 200 of 1000: loss=0.00364 " + "l1=0.000738" + "l2=0.00291 f=-0.091 shape=(1, 9000, 1)
logits [[ 0.52206206 -0.97469646  0.4993513  -0.4105331 ]]
Iteration 300 of 1000: loss=0.00249 " + "l1=5.41e-05" + "l2=0.00244 f=-0.091 shape=(1, 9000, 1)
logits [[ 0.5040059  -0.9662283   0.5023409  -0.40416974]]
Iteration 400 of 1000: loss=0.00195 " + "l1=1.29e-05" + "l2=0.00194 f=-0.0892 shape=(1, 9000, 1)
logits [[ 0.50673556 -0.96033597  0.5063389  -0.40962344]]
Iteration 500 of 1000: loss=0.00164 " + "l1=8.12e-06" + "l2=0.00163 f=-0.0881 shape=(1, 9000, 1)
logits [[ 0.5097689  -0.9574768   0.50951916 -0.41413483]]
Iteration 600 of 1000: loss=0.00144 " + "l1=0" + "l2=0.00144 f=-0.0875 shape=(1, 9000, 1)
logits [[ 0.5096674  -0.95537674  0.51155    -0.415774  ]]
Iteration 700 of 1000: loss=0.00139 " + "l1=0" + "l2=0.00139 f=-0.087 shape=(1, 9000, 1)
logits [[ 0.5104392  -0.95314234  0.5125321  -0.41765803]]
Iteration 800 of 1000: loss=0.00131 " + "l1=1.8e-05" + "l2=0.0013 f=-0.0864 shape=(1, 9000, 1)
logits [[ 0.51268107 -0.9504031   0.5121271  -0.4200017 ]]
Iteration 900 of 1000: loss=0.00129 " + "l1=6.63e-05" + "l2=0.00122 f=-0.086 shape=(1, 9000, 1)
logits [[ 0.51408637 -0.94829684  0.5120471  -0.42165977]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00597 " + "l1=0.00597" + "l2=0 f=-0.0745 shape=(1, 9000, 1)
logits [[ 0.70780075 -0.9162484   0.42698258 -0.5164477 ]]
Iteration 100 of 1000: loss=0.00442 " + "l1=0.00345" + "l2=0.000967 f=-0.0828 shape=(1, 9000, 1)
logits [[ 0.620329   -0.9507403   0.45801628 -0.45887417]]
Iteration 200 of 1000: loss=0.00375 " + "l1=0.00255" + "l2=0.0012 f=-0.0848 shape=(1, 9000, 1)
logits [[ 0.5915564  -0.95627284  0.47160944 -0.4459111 ]]
Iteration 300 of 1000: loss=0.00313 " + "l1=0.00157" + "l2=0.00156 f=-0.087 shape=(1, 9000, 1)
logits [[ 0.55938685 -0.9605413   0.48551518 -0.4321922 ]]
Iteration 400 of 1000: loss=0.00252 " + "l1=0.000732" + "l2=0.00179 f=-0.0884 shape=(1, 9000, 1)
logits [[ 0.53286463 -0.96382827  0.49839702 -0.42119157]]
Iteration 500 of 1000: loss=0.002 " + "l1=3.31e-05" + "l2=0.00197 f=-0.089 shape=(1, 9000, 1)
logits [[ 0.5103061  -0.96337396  0.5087498  -0.4115848 ]]
Iteration 600 of 1000: loss=0.00158 " + "l1=1.98e-05" + "l2=0.00156 f=-0.0878 shape=(1, 9000, 1)
logits [[ 0.51187855 -0.9585186   0.51094663 -0.41565448]]
Iteration 700 of 1000: loss=0.00151 " + "l1=0" + "l2=0.00151 f=-0.0872 shape=(1, 9000, 1)
logits [[ 0.5118254  -0.95569295  0.5124768  -0.41745508]]
Iteration 800 of 1000: loss=0.00138 " + "l1=1.35e-05" + "l2=0.00137 f=-0.0866 shape=(1, 9000, 1)
logits [[ 0.51364404 -0.9529175   0.51300687 -0.42005926]]
Iteration 900 of 1000: loss=0.00137 " + "l1=0" + "l2=0.00137 f=-0.0862 shape=(1, 9000, 1)
logits [[ 0.51399195 -0.9517539   0.5142668  -0.42118385]]
--- 294.81531286239624 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0122 " + "l1=0.0122" + "l2=0 f=-0.0745 shape=(1, 9000, 1)
logits [[ 0.70780075 -0.9162484   0.42698258 -0.5164477 ]]
Iteration 100 of 1000: loss=0.0106 " + "l1=0.00952" + "l2=0.0011 f=-0.0799 shape=(1, 9000, 1)
logits [[ 0.56908065 -0.8625043   0.3567319  -0.38273197]]
Iteration 200 of 1000: loss=0.0101 " + "l1=0.0087" + "l2=0.00142 f=-0.0806 shape=(1, 9000, 1)
logits [[ 0.5267337  -0.8428804   0.3371844  -0.34346914]]
Iteration 300 of 1000: loss=0.00974 " + "l1=0.00802" + "l2=0.00173 f=-0.0814 shape=(1, 9000, 1)
logits [[ 0.49120787 -0.8282144   0.3220668  -0.31065232]]
Iteration 400 of 1000: loss=0.00945 " + "l1=0.00744" + "l2=0.00201 f=-0.0816 shape=(1, 9000, 1)
logits [[ 0.46129656 -0.8144008   0.30959693 -0.2829553 ]]
Iteration 500 of 1000: loss=0.00914 " + "l1=0.00697" + "l2=0.00217 f=-0.0818 shape=(1, 9000, 1)
logits [[ 0.43665004 -0.80373025  0.30060473 -0.26071763]]
Iteration 600 of 1000: loss=0.00893 " + "l1=0.00651" + "l2=0.00242 f=-0.0821 shape=(1, 9000, 1)
logits [[ 0.41150215 -0.79353917  0.2933084  -0.23984692]]
Iteration 700 of 1000: loss=0.00866 " + "l1=0.00607" + "l2=0.00259 f=-0.0825 shape=(1, 9000, 1)
logits [[ 0.3873435  -0.7838861   0.2860495  -0.21939218]]
Iteration 800 of 1000: loss=0.00841 " + "l1=0.00562" + "l2=0.00278 f=-0.0826 shape=(1, 9000, 1)
logits [[ 0.3639738  -0.77412397  0.27828994 -0.1984123 ]]
Iteration 900 of 1000: loss=0.00816 " + "l1=0.0052" + "l2=0.00297 f=-0.0828 shape=(1, 9000, 1)
logits [[ 0.3410932 -0.765194   0.2713828 -0.1785531]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.122 " + "l1=0.122" + "l2=0 f=-0.0745 shape=(1, 9000, 1)
logits [[ 0.70780075 -0.9162484   0.42698258 -0.5164477 ]]
Iteration 100 of 1000: loss=0.0197 " + "l1=0.000615" + "l2=0.0191 f=-0.0964 shape=(1, 9000, 1)
logits [[ 0.07426731 -0.62844014  0.08730258  0.08114774]]
Iteration 200 of 1000: loss=0.0144 " + "l1=0" + "l2=0.0144 f=-0.0935 shape=(1, 9000, 1)
logits [[ 0.07635539 -0.6167913   0.08238085  0.08419849]]
Iteration 300 of 1000: loss=0.012 " + "l1=0" + "l2=0.012 f=-0.0907 shape=(1, 9000, 1)
logits [[ 0.07842173 -0.60808814  0.07740864  0.08958989]]
Iteration 400 of 1000: loss=0.0104 " + "l1=0" + "l2=0.0104 f=-0.0904 shape=(1, 9000, 1)
logits [[ 0.07495137 -0.6120664   0.08352891  0.09187752]]
Iteration 500 of 1000: loss=0.00963 " + "l1=0" + "l2=0.00963 f=-0.0888 shape=(1, 9000, 1)
logits [[ 0.06976849 -0.60821325  0.07874548  0.10437781]]
Iteration 600 of 1000: loss=0.00941 " + "l1=0.00144" + "l2=0.00797 f=-0.0866 shape=(1, 9000, 1)
logits [[ 0.09692707 -0.6190919   0.09323339  0.08253142]]
Iteration 700 of 1000: loss=0.00769 " + "l1=0" + "l2=0.00769 f=-0.0868 shape=(1, 9000, 1)
logits [[ 0.07776206 -0.61516434  0.08612938  0.10424126]]
Iteration 800 of 1000: loss=0.00761 " + "l1=0" + "l2=0.00761 f=-0.0862 shape=(1, 9000, 1)
logits [[ 0.06558721 -0.61010516  0.0786109   0.12108073]]
Iteration 900 of 1000: loss=0.00663 " + "l1=0" + "l2=0.00663 f=-0.0849 shape=(1, 9000, 1)
logits [[ 0.08088665 -0.6195178   0.0908671   0.10834845]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0673 " + "l1=0.0673" + "l2=0 f=-0.0745 shape=(1, 9000, 1)
logits [[ 0.70780075 -0.9162484   0.42698258 -0.5164477 ]]
Iteration 100 of 1000: loss=0.0197 " + "l1=0.000385" + "l2=0.0193 f=-0.096 shape=(1, 9000, 1)
logits [[ 0.08251782 -0.62447107  0.08247209  0.07552687]]
Iteration 200 of 1000: loss=0.0145 " + "l1=0" + "l2=0.0145 f=-0.0932 shape=(1, 9000, 1)
logits [[ 0.07854905 -0.61478776  0.07868452  0.08478527]]
Iteration 300 of 1000: loss=0.012 " + "l1=0" + "l2=0.012 f=-0.0918 shape=(1, 9000, 1)
logits [[ 0.07434355 -0.61154276  0.07943751  0.09045812]]
Iteration 400 of 1000: loss=0.0103 " + "l1=0" + "l2=0.0103 f=-0.089 shape=(1, 9000, 1)
logits [[ 0.08235155 -0.6103262   0.07943911  0.09237193]]
Iteration 500 of 1000: loss=0.00928 " + "l1=0.000575" + "l2=0.00871 f=-0.088 shape=(1, 9000, 1)
logits [[ 0.09332504 -0.62021875  0.0920151   0.08287407]]
Iteration 600 of 1000: loss=0.00822 " + "l1=0" + "l2=0.00822 f=-0.0866 shape=(1, 9000, 1)
logits [[ 0.08908302 -0.6165057   0.08673323  0.09432602]]
Iteration 700 of 1000: loss=0.00761 " + "l1=0" + "l2=0.00761 f=-0.0861 shape=(1, 9000, 1)
logits [[ 0.09025726 -0.62185323  0.09168479  0.09561142]]
Iteration 800 of 1000: loss=0.00693 " + "l1=0.000136" + "l2=0.00679 f=-0.0848 shape=(1, 9000, 1)
logits [[ 0.09699852 -0.62442625  0.09377736  0.09451815]]
Iteration 900 of 1000: loss=0.00669 " + "l1=0.00015" + "l2=0.00654 f=-0.084 shape=(1, 9000, 1)
logits [[ 0.09854683 -0.6268921   0.09658779  0.09582324]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0398 " + "l1=0.0398" + "l2=0 f=-0.0745 shape=(1, 9000, 1)
logits [[ 0.70780075 -0.9162484   0.42698258 -0.5164477 ]]
Iteration 100 of 1000: loss=0.0212 " + "l1=0.00949" + "l2=0.0117 f=-0.0962 shape=(1, 9000, 1)
logits [[ 0.21909845 -0.72727776  0.19624373 -0.07296505]]
Iteration 200 of 1000: loss=0.016 " + "l1=0.0034" + "l2=0.0126 f=-0.0943 shape=(1, 9000, 1)
logits [[ 0.12766781 -0.6533642   0.12543821  0.02317905]]
Iteration 300 of 1000: loss=0.0126 " + "l1=0.000233" + "l2=0.0124 f=-0.0912 shape=(1, 9000, 1)
logits [[ 0.08567461 -0.612868    0.08407454  0.07849125]]
Iteration 400 of 1000: loss=0.0106 " + "l1=1.01e-05" + "l2=0.0106 f=-0.0901 shape=(1, 9000, 1)
logits [[ 0.08147442 -0.6145914   0.08643609  0.08612601]]
Iteration 500 of 1000: loss=0.00944 " + "l1=0" + "l2=0.00944 f=-0.088 shape=(1, 9000, 1)
logits [[ 0.08489293 -0.6124671   0.08362383  0.09213913]]
Iteration 600 of 1000: loss=0.0084 " + "l1=0" + "l2=0.0084 f=-0.0875 shape=(1, 9000, 1)
logits [[ 0.08412955 -0.6182635   0.08788174  0.09615283]]
Iteration 700 of 1000: loss=0.00758 " + "l1=0" + "l2=0.00758 f=-0.0864 shape=(1, 9000, 1)
logits [[ 0.09088966 -0.6229946   0.09281398  0.09381174]]
Iteration 800 of 1000: loss=0.00704 " + "l1=0" + "l2=0.00704 f=-0.0855 shape=(1, 9000, 1)
logits [[ 0.09224277 -0.62466365  0.09423161  0.09607302]]
Iteration 900 of 1000: loss=0.0065 " + "l1=0" + "l2=0.0065 f=-0.0847 shape=(1, 9000, 1)
logits [[ 0.09325589 -0.62604755  0.09426434  0.09979064]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.026 " + "l1=0.026" + "l2=0 f=-0.0745 shape=(1, 9000, 1)
logits [[ 0.70780075 -0.9162484   0.42698258 -0.5164477 ]]
Iteration 100 of 1000: loss=0.0183 " + "l1=0.0134" + "l2=0.00491 f=-0.0858 shape=(1, 9000, 1)
logits [[ 0.40218768 -0.79464036  0.27629036 -0.22722822]]
Iteration 200 of 1000: loss=0.0157 " + "l1=0.00884" + "l2=0.00688 f=-0.0916 shape=(1, 9000, 1)
logits [[ 0.28326115 -0.742914    0.22586142 -0.13278049]]
Iteration 300 of 1000: loss=0.0137 " + "l1=0.00555" + "l2=0.00813 f=-0.0938 shape=(1, 9000, 1)
logits [[ 0.1988542  -0.70740074  0.19549185 -0.06228667]]
Iteration 400 of 1000: loss=0.0121 " + "l1=0.0038" + "l2=0.00827 f=-0.0921 shape=(1, 9000, 1)
logits [[ 0.16108418 -0.67411524  0.16166456 -0.01701723]]
Iteration 500 of 1000: loss=0.0107 " + "l1=0.00225" + "l2=0.00849 f=-0.0897 shape=(1, 9000, 1)
logits [[ 0.13108782 -0.64474255  0.12965116  0.02522687]]
Iteration 600 of 1000: loss=0.00942 " + "l1=0.000552" + "l2=0.00887 f=-0.0878 shape=(1, 9000, 1)
logits [[ 0.0970578  -0.6186848   0.09812837  0.07214017]]
Iteration 700 of 1000: loss=0.00839 " + "l1=0.00014" + "l2=0.00825 f=-0.0862 shape=(1, 9000, 1)
logits [[ 0.09285817 -0.61694133  0.09289768  0.08632621]]
Iteration 800 of 1000: loss=0.00759 " + "l1=6.86e-05" + "l2=0.00752 f=-0.0854 shape=(1, 9000, 1)
logits [[ 0.0919401  -0.6181539   0.09395582  0.09072626]]
Iteration 900 of 1000: loss=0.00696 " + "l1=8.5e-05" + "l2=0.00688 f=-0.0841 shape=(1, 9000, 1)
logits [[ 0.09639417 -0.6193308   0.09415535  0.09239467]]
--- 303.7305235862732 seconds ---
Adv result:3
Loading record A06938
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0333 " + "l1=0.0333" + "l2=0 f=-0.653 shape=(1, 9000, 1)
logits [[ 2.424268  -0.9011747  2.0092995 -6.1457696]]
Iteration 100 of 1000: loss=0.0326 " + "l1=0.0322" + "l2=0.000376 f=-0.659 shape=(1, 9000, 1)
logits [[ 2.363015   -0.86035013  1.9890956  -6.12691   ]]
Iteration 200 of 1000: loss=0.0324 " + "l1=0.032" + "l2=0.000421 f=-0.66 shape=(1, 9000, 1)
logits [[ 2.3495493  -0.85121936  1.9840658  -6.1238146 ]]
Iteration 300 of 1000: loss=0.0322 " + "l1=0.0317" + "l2=0.000534 f=-0.662 shape=(1, 9000, 1)
logits [[ 2.331536  -0.8391966  1.9784195 -6.1202984]]
Iteration 400 of 1000: loss=0.0321 " + "l1=0.0314" + "l2=0.000702 f=-0.664 shape=(1, 9000, 1)
logits [[ 2.312493  -0.8263726  1.9728808 -6.1169114]]
Iteration 500 of 1000: loss=0.0319 " + "l1=0.0311" + "l2=0.000835 f=-0.666 shape=(1, 9000, 1)
logits [[ 2.2948847 -0.8145804  1.9678043 -6.113435 ]]
Iteration 600 of 1000: loss=0.0318 " + "l1=0.0308" + "l2=0.00104 f=-0.668 shape=(1, 9000, 1)
logits [[ 2.2776778 -0.8033098  1.9629933 -6.1108956]]
Iteration 700 of 1000: loss=0.0318 " + "l1=0.0306" + "l2=0.00121 f=-0.67 shape=(1, 9000, 1)
logits [[ 2.2622144 -0.7929972  1.9586005 -6.108526 ]]
Iteration 800 of 1000: loss=0.0317 " + "l1=0.0303" + "l2=0.00142 f=-0.672 shape=(1, 9000, 1)
logits [[ 2.2477198 -0.7833568  1.9546574 -6.1065955]]
Iteration 900 of 1000: loss=0.0317 " + "l1=0.0301" + "l2=0.00163 f=-0.674 shape=(1, 9000, 1)
logits [[ 2.2333384 -0.7735967  1.9508624 -6.1047482]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.333 " + "l1=0.333" + "l2=0 f=-0.653 shape=(1, 9000, 1)
logits [[ 2.424268  -0.9011747  2.0092995 -6.1457696]]
Iteration 100 of 1000: loss=0.257 " + "l1=0.227" + "l2=0.0304 f=-0.725 shape=(1, 9000, 1)
logits [[ 1.8044311  -0.46106344  1.8045962  -6.0464244 ]]
Iteration 200 of 1000: loss=0.236 " + "l1=0.205" + "l2=0.0315 f=-0.741 shape=(1, 9000, 1)
logits [[ 1.7111473  -0.33456355  1.7138284  -6.0540857 ]]
Iteration 300 of 1000: loss=0.223 " + "l1=0.188" + "l2=0.0351 f=-0.754 shape=(1, 9000, 1)
logits [[ 1.6321332  -0.23954974  1.6432583  -6.05295   ]]
Iteration 400 of 1000: loss=0.213 " + "l1=0.173" + "l2=0.0397 f=-0.765 shape=(1, 9000, 1)
logits [[ 1.5372312  -0.14715156  1.5861529  -6.034869  ]]
Iteration 500 of 1000: loss=0.204 " + "l1=0.159" + "l2=0.045 f=-0.774 shape=(1, 9000, 1)
logits [[ 1.4390045  -0.05698621  1.5349134  -6.013771  ]]
Iteration 600 of 1000: loss=0.197 " + "l1=0.147" + "l2=0.0494 f=-0.783 shape=(1, 9000, 1)
logits [[ 1.3441849   0.01952586  1.4942935  -5.9884787 ]]
Iteration 700 of 1000: loss=0.191 " + "l1=0.139" + "l2=0.0518 f=-0.786 shape=(1, 9000, 1)
logits [[ 1.2853497   0.07270869  1.4616084  -5.964483  ]]
Iteration 800 of 1000: loss=0.186 " + "l1=0.131" + "l2=0.0546 f=-0.79 shape=(1, 9000, 1)
logits [[ 1.2213489   0.12280584  1.4328066  -5.9377584 ]]
Iteration 900 of 1000: loss=0.181 " + "l1=0.123" + "l2=0.0573 f=-0.794 shape=(1, 9000, 1)
logits [[ 1.154418    0.17170788  1.4045988  -5.907822  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.33 " + "l1=3.33" + "l2=0 f=-0.653 shape=(1, 9000, 1)
logits [[ 2.424268  -0.9011747  2.0092995 -6.1457696]]
Iteration 100 of 1000: loss=0.583 " + "l1=0" + "l2=0.583 f=-0.975 shape=(1, 9000, 1)
logits [[-0.18025362  1.2112463   1.2029134  -6.1345296 ]]
Iteration 200 of 1000: loss=0.369 " + "l1=0" + "l2=0.369 f=-0.961 shape=(1, 9000, 1)
logits [[-0.217944   1.2165259  1.2096876 -6.0528965]]
Iteration 300 of 1000: loss=0.313 " + "l1=0.0103" + "l2=0.303 f=-0.952 shape=(1, 9000, 1)
logits [[-0.19887567  1.1972474   1.2074976  -6.013001  ]]
Iteration 400 of 1000: loss=0.276 " + "l1=0" + "l2=0.276 f=-0.953 shape=(1, 9000, 1)
logits [[-0.20458299  1.1998801   1.1958318  -6.004758  ]]
Iteration 500 of 1000: loss=0.264 " + "l1=0" + "l2=0.264 f=-0.956 shape=(1, 9000, 1)
logits [[-0.22447239  1.2123842   1.1837454  -5.995652  ]]
Iteration 600 of 1000: loss=0.246 " + "l1=0" + "l2=0.246 f=-0.952 shape=(1, 9000, 1)
logits [[-0.19573855  1.1859059   1.17964    -5.97807   ]]
Iteration 700 of 1000: loss=0.238 " + "l1=0" + "l2=0.238 f=-0.953 shape=(1, 9000, 1)
logits [[-0.21346778  1.1868064   1.1694891  -5.9539075 ]]
Iteration 800 of 1000: loss=0.229 " + "l1=0" + "l2=0.229 f=-0.952 shape=(1, 9000, 1)
logits [[-0.22324648  1.1810327   1.1604668  -5.925775  ]]
Iteration 900 of 1000: loss=0.22 " + "l1=0" + "l2=0.22 f=-0.947 shape=(1, 9000, 1)
logits [[-0.21602833  1.167703    1.153092   -5.8947215 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.83 " + "l1=1.83" + "l2=0 f=-0.653 shape=(1, 9000, 1)
logits [[ 2.424268  -0.9011747  2.0092995 -6.1457696]]
Iteration 100 of 1000: loss=0.622 " + "l1=0.208" + "l2=0.414 f=-0.934 shape=(1, 9000, 1)
logits [[ 0.21414274  0.90824986  1.2859883  -6.1425877 ]]
Iteration 200 of 1000: loss=0.34 " + "l1=0" + "l2=0.34 f=-0.957 shape=(1, 9000, 1)
logits [[-0.18808511  1.2110193   1.2054541  -6.0547004 ]]
Iteration 300 of 1000: loss=0.286 " + "l1=0.00199" + "l2=0.284 f=-0.952 shape=(1, 9000, 1)
logits [[-0.1807329  1.1960646  1.1996831 -6.021559 ]]
Iteration 400 of 1000: loss=0.263 " + "l1=0.00403" + "l2=0.259 f=-0.951 shape=(1, 9000, 1)
logits [[-0.18226409  1.1882055   1.1955371  -6.006724  ]]
Iteration 500 of 1000: loss=0.246 " + "l1=0.000316" + "l2=0.245 f=-0.953 shape=(1, 9000, 1)
logits [[-0.19101276  1.1860255   1.1866004  -5.992641  ]]
Iteration 600 of 1000: loss=0.235 " + "l1=0" + "l2=0.235 f=-0.951 shape=(1, 9000, 1)
logits [[-0.20062378  1.1811919   1.1766781  -5.962329  ]]
Iteration 700 of 1000: loss=0.226 " + "l1=0" + "l2=0.226 f=-0.949 shape=(1, 9000, 1)
logits [[-0.21538258  1.1771331   1.1676785  -5.9236097 ]]
Iteration 800 of 1000: loss=0.22 " + "l1=0" + "l2=0.22 f=-0.947 shape=(1, 9000, 1)
logits [[-0.23138396  1.1770262   1.1560711  -5.8913674 ]]
Iteration 900 of 1000: loss=0.21 " + "l1=0" + "l2=0.21 f=-0.943 shape=(1, 9000, 1)
logits [[-0.22266611  1.1592509   1.1480412  -5.8582873 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.08 " + "l1=1.08" + "l2=0 f=-0.653 shape=(1, 9000, 1)
logits [[ 2.424268  -0.9011747  2.0092995 -6.1457696]]
Iteration 100 of 1000: loss=0.573 " + "l1=0.406" + "l2=0.167 f=-0.837 shape=(1, 9000, 1)
logits [[ 1.0418957   0.22023664  1.469955   -6.080188  ]]
Iteration 200 of 1000: loss=0.4 " + "l1=0.15" + "l2=0.251 f=-0.912 shape=(1, 9000, 1)
logits [[ 0.3502359   0.82018393  1.2806144  -6.0977054 ]]
Iteration 300 of 1000: loss=0.295 " + "l1=0" + "l2=0.295 f=-0.956 shape=(1, 9000, 1)
logits [[-0.17523697  1.1944578   1.1896266  -6.031043  ]]
Iteration 400 of 1000: loss=0.253 " + "l1=0.0029" + "l2=0.25 f=-0.948 shape=(1, 9000, 1)
logits [[-0.1675234  1.1772844  1.1862059 -5.989921 ]]
Iteration 500 of 1000: loss=0.234 " + "l1=0" + "l2=0.234 f=-0.949 shape=(1, 9000, 1)
logits [[-0.18828842  1.1825352   1.1727768  -5.962546  ]]
Iteration 600 of 1000: loss=0.218 " + "l1=0.00172" + "l2=0.216 f=-0.942 shape=(1, 9000, 1)
logits [[-0.17424262  1.1578734   1.1631724  -5.914083  ]]
Iteration 700 of 1000: loss=0.205 " + "l1=0.00454" + "l2=0.2 f=-0.94 shape=(1, 9000, 1)
logits [[-0.17230815  1.1384141   1.1523873  -5.8776546 ]]
Iteration 800 of 1000: loss=0.192 " + "l1=0.00268" + "l2=0.19 f=-0.934 shape=(1, 9000, 1)
logits [[-0.16379769  1.1217179   1.1299785  -5.8245964 ]]
Iteration 900 of 1000: loss=0.181 " + "l1=0.000892" + "l2=0.181 f=-0.929 shape=(1, 9000, 1)
logits [[-0.15365985  1.1024832   1.1052275  -5.770237  ]]
--- 304.9694218635559 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00415 " + "l1=0.00415" + "l2=0 f=-0.653 shape=(1, 9000, 1)
logits [[ 2.424268  -0.9011747  2.0092995 -6.1457696]]
Iteration 100 of 1000: loss=0.00392 " + "l1=0.00375" + "l2=0.000178 f=-0.655 shape=(1, 9000, 1)
logits [[ 2.3874881  -0.89169174  2.0129116  -6.130312  ]]
Iteration 200 of 1000: loss=0.00386 " + "l1=0.00371" + "l2=0.000157 f=-0.656 shape=(1, 9000, 1)
logits [[ 2.38309    -0.88985544  2.0125432  -6.1286716 ]]
Iteration 300 of 1000: loss=0.00383 " + "l1=0.00363" + "l2=0.000201 f=-0.656 shape=(1, 9000, 1)
logits [[ 2.375871   -0.88759077  2.0128214  -6.1260915 ]]
Iteration 400 of 1000: loss=0.00381 " + "l1=0.00355" + "l2=0.000258 f=-0.657 shape=(1, 9000, 1)
logits [[ 2.3684225  -0.88533294  2.0132365  -6.1234927 ]]
Iteration 500 of 1000: loss=0.00378 " + "l1=0.00348" + "l2=0.000307 f=-0.657 shape=(1, 9000, 1)
logits [[ 2.3612592  -0.88322073  2.013684   -6.121074  ]]
Iteration 600 of 1000: loss=0.00379 " + "l1=0.0034" + "l2=0.000386 f=-0.658 shape=(1, 9000, 1)
logits [[ 2.3545458 -0.8811441  2.0140715 -6.1189017]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0415 " + "l1=0.0415" + "l2=0 f=-0.653 shape=(1, 9000, 1)
logits [[ 2.424268  -0.9011747  2.0092995 -6.1457696]]
Iteration 100 of 1000: loss=0.0203 " + "l1=0.0101" + "l2=0.0102 f=-0.671 shape=(1, 9000, 1)
logits [[ 2.127436  -0.8023501  2.0265257 -6.036343 ]]
Iteration 200 of 1000: loss=0.0111 " + "l1=0.000216" + "l2=0.0109 f=-0.679 shape=(1, 9000, 1)
logits [[ 2.027941  -0.7642204  2.025786  -6.005888 ]]
Iteration 300 of 1000: loss=0.00864 " + "l1=9.38e-05" + "l2=0.00855 f=-0.68 shape=(1, 9000, 1)
logits [[ 2.0247314  -0.76480776  2.0237932  -6.0047135 ]]
Iteration 400 of 1000: loss=0.0077 " + "l1=0" + "l2=0.0077 f=-0.682 shape=(1, 9000, 1)
logits [[ 2.0186005  -0.76467365  2.0228214  -6.004042  ]]
Iteration 500 of 1000: loss=0.00701 " + "l1=0" + "l2=0.00701 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.0172322 -0.7649706  2.0216343 -6.006845 ]]
Iteration 600 of 1000: loss=0.00644 " + "l1=6.59e-05" + "l2=0.00637 f=-0.684 shape=(1, 9000, 1)
logits [[ 2.0221825 -0.768158   2.021524  -6.0119286]]
Iteration 700 of 1000: loss=0.00598 " + "l1=0" + "l2=0.00598 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.0175922 -0.7672881  2.02158   -6.0135098]]
Iteration 800 of 1000: loss=0.00567 " + "l1=1.41e-05" + "l2=0.00565 f=-0.686 shape=(1, 9000, 1)
logits [[ 2.0215838 -0.7695367  2.0214431 -6.017482 ]]
Iteration 900 of 1000: loss=0.00542 " + "l1=2.9e-05" + "l2=0.0054 f=-0.687 shape=(1, 9000, 1)
logits [[ 2.0218217 -0.7702559  2.021532  -6.0198045]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0228 " + "l1=0.0228" + "l2=0 f=-0.653 shape=(1, 9000, 1)
logits [[ 2.424268  -0.9011747  2.0092995 -6.1457696]]
Iteration 100 of 1000: loss=0.0165 " + "l1=0.0133" + "l2=0.00321 f=-0.663 shape=(1, 9000, 1)
logits [[ 2.2612453 -0.8496383  2.0198748 -6.084119 ]]
Iteration 200 of 1000: loss=0.0137 " + "l1=0.00927" + "l2=0.00445 f=-0.667 shape=(1, 9000, 1)
logits [[ 2.1910443  -0.82350945  2.022494   -6.0592194 ]]
Iteration 300 of 1000: loss=0.0113 " + "l1=0.00531" + "l2=0.00595 f=-0.672 shape=(1, 9000, 1)
logits [[ 2.121206   -0.79783976  2.024633   -6.035681  ]]
Iteration 400 of 1000: loss=0.00899 " + "l1=0.00127" + "l2=0.00772 f=-0.678 shape=(1, 9000, 1)
logits [[ 2.0477316 -0.7727374  2.0247025 -6.013251 ]]
Iteration 500 of 1000: loss=0.0074 " + "l1=1.89e-05" + "l2=0.00739 f=-0.681 shape=(1, 9000, 1)
logits [[ 2.0244343 -0.7673778  2.0240903 -6.0055785]]
Iteration 600 of 1000: loss=0.00685 " + "l1=0" + "l2=0.00685 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.0220764 -0.7673526  2.0229428 -6.0087805]]
Iteration 700 of 1000: loss=0.00623 " + "l1=1.31e-06" + "l2=0.00623 f=-0.684 shape=(1, 9000, 1)
logits [[ 2.0230522  -0.76959157  2.0230284  -6.011924  ]]
Iteration 800 of 1000: loss=0.0059 " + "l1=0" + "l2=0.0059 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.021686  -0.7696585  2.0228302 -6.014487 ]]
Iteration 900 of 1000: loss=0.00581 " + "l1=0" + "l2=0.00581 f=-0.686 shape=(1, 9000, 1)
logits [[ 2.022492  -0.7707238  2.02272   -6.017035 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0135 " + "l1=0.0135" + "l2=0 f=-0.653 shape=(1, 9000, 1)
logits [[ 2.424268  -0.9011747  2.0092995 -6.1457696]]
Iteration 100 of 1000: loss=0.0113 " + "l1=0.0102" + "l2=0.00113 f=-0.659 shape=(1, 9000, 1)
logits [[ 2.3301969  -0.87454456  2.016513   -6.1080265 ]]
Iteration 200 of 1000: loss=0.0105 " + "l1=0.00895" + "l2=0.00152 f=-0.661 shape=(1, 9000, 1)
logits [[ 2.2926235 -0.859919   2.0173059 -6.0954657]]
Iteration 300 of 1000: loss=0.00968 " + "l1=0.00768" + "l2=0.00201 f=-0.664 shape=(1, 9000, 1)
logits [[ 2.2549086 -0.846054   2.0186846 -6.0824714]]
Iteration 400 of 1000: loss=0.00899 " + "l1=0.00648" + "l2=0.00251 f=-0.666 shape=(1, 9000, 1)
logits [[ 2.2192316 -0.8328158  2.0199785 -6.0706882]]
Iteration 500 of 1000: loss=0.00841 " + "l1=0.00546" + "l2=0.00296 f=-0.668 shape=(1, 9000, 1)
logits [[ 2.1892595  -0.82267547  2.0213137  -6.0602374 ]]
Iteration 600 of 1000: loss=0.00791 " + "l1=0.00454" + "l2=0.00337 f=-0.67 shape=(1, 9000, 1)
logits [[ 2.1624744  -0.81422585  2.0227475  -6.0511184 ]]
Iteration 700 of 1000: loss=0.00751 " + "l1=0.00368" + "l2=0.00383 f=-0.672 shape=(1, 9000, 1)
logits [[ 2.1364582 -0.8061682  2.0233526 -6.0430336]]
Iteration 800 of 1000: loss=0.00708 " + "l1=0.00276" + "l2=0.00432 f=-0.675 shape=(1, 9000, 1)
logits [[ 2.1086457  -0.79650885  2.023728   -6.037715  ]]
Iteration 900 of 1000: loss=0.00673 " + "l1=0.00191" + "l2=0.00482 f=-0.678 shape=(1, 9000, 1)
logits [[ 2.083625   -0.78852284  2.0247693  -6.032241  ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0182 " + "l1=0.0182" + "l2=0 f=-0.653 shape=(1, 9000, 1)
logits [[ 2.424268  -0.9011747  2.0092995 -6.1457696]]
Iteration 100 of 1000: loss=0.0141 " + "l1=0.0121" + "l2=0.0021 f=-0.661 shape=(1, 9000, 1)
logits [[ 2.2931323 -0.8603799  2.017683  -6.0959826]]
Iteration 200 of 1000: loss=0.0125 " + "l1=0.00968" + "l2=0.00282 f=-0.664 shape=(1, 9000, 1)
logits [[ 2.240703   -0.84104466  2.0195286  -6.077041  ]]
Iteration 300 of 1000: loss=0.011 " + "l1=0.0073" + "l2=0.0037 f=-0.668 shape=(1, 9000, 1)
logits [[ 2.1884465 -0.8218801  2.0215383 -6.0585265]]
Iteration 400 of 1000: loss=0.00976 " + "l1=0.0052" + "l2=0.00456 f=-0.671 shape=(1, 9000, 1)
logits [[ 2.1420524  -0.80546486  2.0231783  -6.041968  ]]
Iteration 500 of 1000: loss=0.00854 " + "l1=0.00295" + "l2=0.00559 f=-0.675 shape=(1, 9000, 1)
logits [[ 2.0907252 -0.7878006  2.0232632 -6.0270905]]
Iteration 600 of 1000: loss=0.00754 " + "l1=0.000908" + "l2=0.00663 f=-0.68 shape=(1, 9000, 1)
logits [[ 2.0444248  -0.77290714  2.0236616  -6.014099  ]]
Iteration 700 of 1000: loss=0.00666 " + "l1=2.4e-05" + "l2=0.00663 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.0237215 -0.7672539  2.0231733 -6.0108747]]
Iteration 800 of 1000: loss=0.00617 " + "l1=1.44e-05" + "l2=0.00616 f=-0.684 shape=(1, 9000, 1)
logits [[ 2.0231981 -0.7683999  2.0228696 -6.013424 ]]
Iteration 900 of 1000: loss=0.0057 " + "l1=4.17e-05" + "l2=0.00566 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.0234406 -0.7689943  2.0224884 -6.016531 ]]
--- 282.5996124744415 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0857 " + "l1=0.0857" + "l2=0 f=-0.653 shape=(1, 9000, 1)
logits [[ 2.424268  -0.9011747  2.0092995 -6.1457696]]
Iteration 100 of 1000: loss=0.085 " + "l1=0.0846" + "l2=0.000381 f=-0.652 shape=(1, 9000, 1)
logits [[ 2.3678045 -0.8797804  1.9980265 -6.0952206]]
Iteration 200 of 1000: loss=0.0848 " + "l1=0.0844" + "l2=0.000404 f=-0.652 shape=(1, 9000, 1)
logits [[ 2.3560953  -0.87471044  1.9951559  -6.0841165 ]]
Iteration 300 of 1000: loss=0.0846 " + "l1=0.0841" + "l2=0.000512 f=-0.651 shape=(1, 9000, 1)
logits [[ 2.3412185  -0.86889184  1.9919779  -6.070007  ]]
Iteration 400 of 1000: loss=0.0845 " + "l1=0.0838" + "l2=0.000658 f=-0.651 shape=(1, 9000, 1)
logits [[ 2.3267415  -0.86349106  1.9889663  -6.0557737 ]]
Iteration 500 of 1000: loss=0.0844 " + "l1=0.0836" + "l2=0.000802 f=-0.65 shape=(1, 9000, 1)
logits [[ 2.3131652 -0.8585909  1.9861447 -6.0420246]]
Iteration 600 of 1000: loss=0.0843 " + "l1=0.0833" + "l2=0.000978 f=-0.65 shape=(1, 9000, 1)
logits [[ 2.3011985  -0.85418963  1.9834187  -6.0290055 ]]
Iteration 700 of 1000: loss=0.0842 " + "l1=0.0831" + "l2=0.00111 f=-0.649 shape=(1, 9000, 1)
logits [[ 2.2897396 -0.8500175  1.9809004 -6.016368 ]]
Iteration 800 of 1000: loss=0.0841 " + "l1=0.0828" + "l2=0.00128 f=-0.648 shape=(1, 9000, 1)
logits [[ 2.2787087 -0.8459397  1.9783611 -6.0040455]]
Iteration 900 of 1000: loss=0.084 " + "l1=0.0826" + "l2=0.00134 f=-0.647 shape=(1, 9000, 1)
logits [[ 2.2685058 -0.8420965  1.9761363 -5.9922805]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.857 " + "l1=0.857" + "l2=0 f=-0.653 shape=(1, 9000, 1)
logits [[ 2.424268  -0.9011747  2.0092995 -6.1457696]]
Iteration 100 of 1000: loss=0.794 " + "l1=0.765" + "l2=0.0295 f=-0.654 shape=(1, 9000, 1)
logits [[ 1.905341  -0.6846517  1.9059037 -5.741483 ]]
Iteration 200 of 1000: loss=0.771 " + "l1=0.743" + "l2=0.0288 f=-0.635 shape=(1, 9000, 1)
logits [[ 1.8431765  -0.64532554  1.8444779  -5.5814996 ]]
Iteration 300 of 1000: loss=0.756 " + "l1=0.724" + "l2=0.0325 f=-0.62 shape=(1, 9000, 1)
logits [[ 1.7906189 -0.6177557  1.7925276 -5.4441752]]
Iteration 400 of 1000: loss=0.742 " + "l1=0.706" + "l2=0.036 f=-0.602 shape=(1, 9000, 1)
logits [[ 1.7489017 -0.5940464  1.7502995 -5.3127623]]
Iteration 500 of 1000: loss=0.729 " + "l1=0.689" + "l2=0.0398 f=-0.582 shape=(1, 9000, 1)
logits [[ 1.7070258 -0.5676497  1.7110575 -5.1771016]]
Iteration 600 of 1000: loss=0.714 " + "l1=0.671" + "l2=0.0431 f=-0.56 shape=(1, 9000, 1)
logits [[ 1.6705629  -0.54548925  1.6727409  -5.0386467 ]]
Iteration 700 of 1000: loss=0.699 " + "l1=0.652" + "l2=0.0472 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.6339601 -0.5264772  1.6345516 -4.8846703]]
Iteration 800 of 1000: loss=0.683 " + "l1=0.631" + "l2=0.052 f=-0.509 shape=(1, 9000, 1)
logits [[ 1.5949646  -0.51154935  1.5947595  -4.7142825 ]]
Iteration 900 of 1000: loss=0.667 " + "l1=0.609" + "l2=0.0581 f=-0.483 shape=(1, 9000, 1)
logits [[ 1.5429568 -0.4940859  1.5519128 -4.5334005]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.57 " + "l1=8.57" + "l2=0 f=-0.653 shape=(1, 9000, 1)
logits [[ 2.424268  -0.9011747  2.0092995 -6.1457696]]
Iteration 100 of 1000: loss=5.96 " + "l1=5.02" + "l2=0.935 f=-0.483 shape=(1, 9000, 1)
logits [[ 0.76310945 -0.22985896  1.2786456  -3.743374  ]]
Iteration 200 of 1000: loss=4.81 " + "l1=3.52" + "l2=1.29 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.22213751  0.08319984  0.8754962  -2.6426532 ]]
Iteration 300 of 1000: loss=3.54 " + "l1=2" + "l2=1.55 f=-0.239 shape=(1, 9000, 1)
logits [[-0.15396622  0.10225703  0.5476994  -1.4509448 ]]
Iteration 400 of 1000: loss=1.84 " + "l1=0.00778" + "l2=1.83 f=-0.0389 shape=(1, 9000, 1)
logits [[-0.2614813  -0.14918151  0.1313383   0.12356143]]
Iteration 500 of 1000: loss=1.33 " + "l1=0.00841" + "l2=1.32 f=-0.0165 shape=(1, 9000, 1)
logits [[-0.15421993 -0.24049045  0.1686413   0.16022825]]
Iteration 600 of 1000: loss=1.13 " + "l1=0" + "l2=1.13 f=-0.0165 shape=(1, 9000, 1)
logits [[-0.1336603  -0.27577597  0.16703866  0.17628315]]
Iteration 700 of 1000: loss=0.993 " + "l1=0.00191" + "l2=0.991 f=-0.0176 shape=(1, 9000, 1)
logits [[-0.10639535 -0.29979104  0.16877005  0.16685835]]
Iteration 800 of 1000: loss=0.891 " + "l1=0.00637" + "l2=0.884 f=-0.0157 shape=(1, 9000, 1)
logits [[-0.08764948 -0.32944256  0.18041131  0.17404258]]
Iteration 900 of 1000: loss=0.805 " + "l1=0" + "l2=0.805 f=-0.015 shape=(1, 9000, 1)
logits [[-0.09173352 -0.3492787   0.18285204  0.19796914]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.71 " + "l1=4.71" + "l2=0 f=-0.653 shape=(1, 9000, 1)
logits [[ 2.424268  -0.9011747  2.0092995 -6.1457696]]
Iteration 100 of 1000: loss=3.7 " + "l1=3.37" + "l2=0.328 f=-0.538 shape=(1, 9000, 1)
logits [[ 1.3329086 -0.4387704  1.5382255 -4.5840573]]
Iteration 200 of 1000: loss=3.25 " + "l1=2.8" + "l2=0.453 f=-0.47 shape=(1, 9000, 1)
logits [[ 0.8656364  -0.17871006  1.2617728  -3.830232  ]]
Iteration 300 of 1000: loss=2.79 " + "l1=2.2" + "l2=0.591 f=-0.384 shape=(1, 9000, 1)
logits [[ 0.45918727  0.02106201  0.99446046 -3.0101602 ]]
Iteration 400 of 1000: loss=2.19 " + "l1=1.48" + "l2=0.705 f=-0.243 shape=(1, 9000, 1)
logits [[ 0.2006001   0.03496233  0.7428474  -1.9486732 ]]
Iteration 500 of 1000: loss=1.54 " + "l1=0.74" + "l2=0.803 f=-0.141 shape=(1, 9000, 1)
logits [[-0.03334239  0.0020853   0.40606034 -0.9391261 ]]
Iteration 600 of 1000: loss=1.15 " + "l1=0.284" + "l2=0.862 f=-0.0662 shape=(1, 9000, 1)
logits [[-0.04247376 -0.15317868  0.22361845 -0.29273343]]
Iteration 700 of 1000: loss=0.881 " + "l1=0.0107" + "l2=0.87 f=-0.0195 shape=(1, 9000, 1)
logits [[-0.05738844 -0.25978747  0.12927635  0.10975841]]
Iteration 800 of 1000: loss=0.745 " + "l1=0.00125" + "l2=0.743 f=-0.00815 shape=(1, 9000, 1)
logits [[ 0.0129016  -0.34570113  0.15123312  0.14895171]]
Iteration 900 of 1000: loss=0.669 " + "l1=0" + "l2=0.669 f=-0.00884 shape=(1, 9000, 1)
logits [[ 0.02359844 -0.38480368  0.1604066   0.16542521]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.79 " + "l1=2.79" + "l2=0 f=-0.653 shape=(1, 9000, 1)
logits [[ 2.424268  -0.9011747  2.0092995 -6.1457696]]
Iteration 100 of 1000: loss=2.35 " + "l1=2.21" + "l2=0.133 f=-0.589 shape=(1, 9000, 1)
logits [[ 1.6454875  -0.55252767  1.6802486  -5.1297574 ]]
Iteration 200 of 1000: loss=2.18 " + "l1=2" + "l2=0.18 f=-0.528 shape=(1, 9000, 1)
logits [[ 1.4313536 -0.4264702  1.5243735 -4.6415033]]
Iteration 300 of 1000: loss=2.02 " + "l1=1.79" + "l2=0.227 f=-0.477 shape=(1, 9000, 1)
logits [[ 1.172672   -0.27572724  1.3516626  -4.1584415 ]]
Iteration 400 of 1000: loss=1.84 " + "l1=1.57" + "l2=0.274 f=-0.42 shape=(1, 9000, 1)
logits [[ 0.9409977  -0.16627999  1.1845667  -3.6403735 ]]
Iteration 500 of 1000: loss=1.62 " + "l1=1.29" + "l2=0.325 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.72579455 -0.11751897  1.0357349  -2.9410992 ]]
Iteration 600 of 1000: loss=1.36 " + "l1=0.976" + "l2=0.387 f=-0.222 shape=(1, 9000, 1)
logits [[ 0.53779805 -0.11097407  0.8440753  -2.1580622 ]]
Iteration 700 of 1000: loss=1.17 " + "l1=0.729" + "l2=0.441 f=-0.151 shape=(1, 9000, 1)
logits [[ 0.36290854 -0.06067175  0.66868484 -1.5758196 ]]
Iteration 800 of 1000: loss=1.02 " + "l1=0.547" + "l2=0.47 f=-0.109 shape=(1, 9000, 1)
logits [[ 0.27778718 -0.09943762  0.534722   -1.148244  ]]
Iteration 900 of 1000: loss=0.901 " + "l1=0.414" + "l2=0.487 f=-0.0892 shape=(1, 9000, 1)
logits [[ 0.19132169 -0.12465139  0.42492428 -0.84830505]]
--- 303.55148553848267 seconds ---
Adv result:3
Loading record A06955
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0787 " + "l1=0.0787" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.24162   -2.6281762  2.720788  -7.9387727]]
Iteration 100 of 1000: loss=0.0784 " + "l1=0.0781" + "l2=0.000274 f=-0.649 shape=(1, 9000, 1)
logits [[ 5.209433  -2.600265   2.7009048 -7.9060235]]
Iteration 200 of 1000: loss=0.0783 " + "l1=0.078" + "l2=0.000253 f=-0.649 shape=(1, 9000, 1)
logits [[ 5.2066507 -2.5970547  2.698519  -7.9037933]]
Iteration 300 of 1000: loss=0.0782 " + "l1=0.0779" + "l2=0.000298 f=-0.649 shape=(1, 9000, 1)
logits [[ 5.201344  -2.592189   2.69502   -7.8988366]]
Iteration 400 of 1000: loss=0.0782 " + "l1=0.0778" + "l2=0.000337 f=-0.648 shape=(1, 9000, 1)
logits [[ 5.1956224 -2.5872545  2.6914804 -7.8934517]]
Iteration 500 of 1000: loss=0.0782 " + "l1=0.0777" + "l2=0.000423 f=-0.648 shape=(1, 9000, 1)
logits [[ 5.190126  -2.5828514  2.6882997 -7.8882227]]
Iteration 600 of 1000: loss=0.0782 " + "l1=0.0776" + "l2=0.000519 f=-0.648 shape=(1, 9000, 1)
logits [[ 5.184784  -2.5785587  2.685244  -7.883317 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.787 " + "l1=0.787" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.24162   -2.6281762  2.720788  -7.9387727]]
Iteration 100 of 1000: loss=0.753 " + "l1=0.73" + "l2=0.023 f=-0.627 shape=(1, 9000, 1)
logits [[ 4.961047  -2.335264   2.5315542 -7.6652026]]
Iteration 200 of 1000: loss=0.733 " + "l1=0.701" + "l2=0.0322 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.822806  -2.1862087  2.449612  -7.5417695]]
Iteration 300 of 1000: loss=0.711 " + "l1=0.664" + "l2=0.0467 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.6372604 -2.0029109  2.372846  -7.421974 ]]
Iteration 400 of 1000: loss=0.698 " + "l1=0.644" + "l2=0.054 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.510964  -1.9277412  2.3297482 -7.3202987]]
Iteration 500 of 1000: loss=0.685 " + "l1=0.622" + "l2=0.0624 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.375604  -1.8487775  2.2870576 -7.1957035]]
Iteration 600 of 1000: loss=0.673 " + "l1=0.603" + "l2=0.0695 f=-0.592 shape=(1, 9000, 1)
logits [[ 4.243816  -1.7871753  2.2481434 -7.0722647]]
Iteration 700 of 1000: loss=0.662 " + "l1=0.586" + "l2=0.0754 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.129029  -1.7346514  2.217548  -6.9623494]]
Iteration 800 of 1000: loss=0.652 " + "l1=0.572" + "l2=0.0806 f=-0.584 shape=(1, 9000, 1)
logits [[ 4.0246415 -1.6928967  2.1932836 -6.8609967]]
Iteration 900 of 1000: loss=0.644 " + "l1=0.559" + "l2=0.0848 f=-0.581 shape=(1, 9000, 1)
logits [[ 3.9295843 -1.6602402  2.1743288 -6.767946 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.87 " + "l1=7.87" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.24162   -2.6281762  2.720788  -7.9387727]]
Iteration 100 of 1000: loss=3.63 " + "l1=1.72" + "l2=1.91 f=-0.602 shape=(1, 9000, 1)
logits [[ 1.6110417  -0.10996051  1.6043544  -5.5130067 ]]
Iteration 200 of 1000: loss=2.68 " + "l1=1.16" + "l2=1.53 f=-0.609 shape=(1, 9000, 1)
logits [[ 1.315961    0.15978922  1.3022732  -5.2141166 ]]
Iteration 300 of 1000: loss=2.13 " + "l1=0.59" + "l2=1.54 f=-0.597 shape=(1, 9000, 1)
logits [[ 0.98825705  0.42114243  1.0106945  -4.8066216 ]]
Iteration 400 of 1000: loss=1.81 " + "l1=0.309" + "l2=1.5 f=-0.602 shape=(1, 9000, 1)
logits [[ 0.7721778  0.5287864  0.8373642 -4.5474844]]
Iteration 500 of 1000: loss=1.58 " + "l1=0.0428" + "l2=1.54 f=-0.601 shape=(1, 9000, 1)
logits [[ 0.49315056  0.6121966   0.65499806 -4.1633263 ]]
Iteration 600 of 1000: loss=1.44 " + "l1=0.00442" + "l2=1.44 f=-0.606 shape=(1, 9000, 1)
logits [[ 0.32432303  0.56015724  0.5645798  -3.874524  ]]
Iteration 700 of 1000: loss=1.35 " + "l1=0" + "l2=1.35 f=-0.601 shape=(1, 9000, 1)
logits [[ 0.2503272   0.50345016  0.50101197 -3.6602497 ]]
Iteration 800 of 1000: loss=1.29 " + "l1=0.000602" + "l2=1.29 f=-0.597 shape=(1, 9000, 1)
logits [[ 0.20707405  0.47289735  0.47349897 -3.5434124 ]]
Iteration 900 of 1000: loss=1.25 " + "l1=0.0205" + "l2=1.23 f=-0.593 shape=(1, 9000, 1)
logits [[ 0.19025451  0.4446869   0.46523413 -3.4711332 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.33 " + "l1=4.33" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.24162   -2.6281762  2.720788  -7.9387727]]
Iteration 100 of 1000: loss=2.84 " + "l1=2.01" + "l2=0.83 f=-0.554 shape=(1, 9000, 1)
logits [[ 2.8746438 -0.7827341  1.8306018 -6.1382732]]
Iteration 200 of 1000: loss=2.16 " + "l1=1.15" + "l2=1.02 f=-0.617 shape=(1, 9000, 1)
logits [[ 1.7541169 -0.3289769  1.5801921 -5.4749966]]
Iteration 300 of 1000: loss=1.77 " + "l1=0.833" + "l2=0.937 f=-0.624 shape=(1, 9000, 1)
logits [[ 1.3841468 -0.1306765  1.381123  -5.1286397]]
Iteration 400 of 1000: loss=1.56 " + "l1=0.689" + "l2=0.867 f=-0.616 shape=(1, 9000, 1)
logits [[ 1.2429482  -0.01029325  1.2433162  -4.940733  ]]
Iteration 500 of 1000: loss=1.42 " + "l1=0.589" + "l2=0.83 f=-0.612 shape=(1, 9000, 1)
logits [[ 1.1270062   0.06399403  1.1352383  -4.775551  ]]
Iteration 600 of 1000: loss=1.33 " + "l1=0.518" + "l2=0.815 f=-0.613 shape=(1, 9000, 1)
logits [[ 1.0396135   0.10191084  1.0445477  -4.6398225 ]]
Iteration 700 of 1000: loss=1.27 " + "l1=0.457" + "l2=0.81 f=-0.61 shape=(1, 9000, 1)
logits [[ 0.93661976  0.12226754  0.9536364  -4.4529114 ]]
Iteration 800 of 1000: loss=1.2 " + "l1=0.378" + "l2=0.817 f=-0.601 shape=(1, 9000, 1)
logits [[ 0.81337523  0.15991682  0.8476022  -4.2241974 ]]
Iteration 900 of 1000: loss=1.11 " + "l1=0.305" + "l2=0.809 f=-0.586 shape=(1, 9000, 1)
logits [[ 0.65530765  0.17693089  0.73218995 -3.9071457 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=6.1 " + "l1=6.1" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.24162   -2.6281762  2.720788  -7.9387727]]
Iteration 100 of 1000: loss=3.35 " + "l1=1.94" + "l2=1.4 f=-0.577 shape=(1, 9000, 1)
logits [[ 2.1128993 -0.3957355  1.6951329 -5.7201962]]
Iteration 200 of 1000: loss=2.39 " + "l1=1.12" + "l2=1.27 f=-0.624 shape=(1, 9000, 1)
logits [[ 1.4132389  -0.03262673  1.4090197  -5.284313  ]]
Iteration 300 of 1000: loss=1.97 " + "l1=0.761" + "l2=1.21 f=-0.615 shape=(1, 9000, 1)
logits [[ 1.1629194   0.19360967  1.175673   -4.9918895 ]]
Iteration 400 of 1000: loss=1.69 " + "l1=0.547" + "l2=1.15 f=-0.602 shape=(1, 9000, 1)
logits [[ 1.0104622  0.3157174  1.0221182 -4.756303 ]]
Iteration 500 of 1000: loss=1.54 " + "l1=0.377" + "l2=1.17 f=-0.602 shape=(1, 9000, 1)
logits [[ 0.8404886  0.3990127  0.8853785 -4.5342665]]
Iteration 600 of 1000: loss=1.42 " + "l1=0.229" + "l2=1.19 f=-0.598 shape=(1, 9000, 1)
logits [[ 0.63296103  0.45110884  0.74602866 -4.2210383 ]]
Iteration 700 of 1000: loss=1.32 " + "l1=0.0942" + "l2=1.23 f=-0.604 shape=(1, 9000, 1)
logits [[ 0.3377612   0.48231506  0.6038328  -3.8384476 ]]
Iteration 800 of 1000: loss=1.24 " + "l1=0.0131" + "l2=1.23 f=-0.598 shape=(1, 9000, 1)
logits [[ 0.15931644  0.5045185   0.5214191  -3.5776844 ]]
Iteration 900 of 1000: loss=1.17 " + "l1=0" + "l2=1.17 f=-0.589 shape=(1, 9000, 1)
logits [[ 0.09468665  0.48416188  0.4813355  -3.4153748 ]]
--- 281.6640989780426 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0252 " + "l1=0.0252" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.24162   -2.6281762  2.720788  -7.9387727]]
Iteration 100 of 1000: loss=0.0251 " + "l1=0.0249" + "l2=0.000163 f=-0.653 shape=(1, 9000, 1)
logits [[ 5.2180753 -2.6360307  2.7272043 -7.920379 ]]
Iteration 200 of 1000: loss=0.025 " + "l1=0.0249" + "l2=0.000113 f=-0.653 shape=(1, 9000, 1)
logits [[ 5.2175827 -2.6367555  2.7271206 -7.920462 ]]
Iteration 300 of 1000: loss=0.025 " + "l1=0.0249" + "l2=0.000141 f=-0.654 shape=(1, 9000, 1)
logits [[ 5.214391  -2.638509   2.7280395 -7.9183364]]
Iteration 400 of 1000: loss=0.025 " + "l1=0.0248" + "l2=0.000167 f=-0.654 shape=(1, 9000, 1)
logits [[ 5.2105203 -2.6403883  2.7290113 -7.915639 ]]
Iteration 500 of 1000: loss=0.025 " + "l1=0.0248" + "l2=0.00021 f=-0.655 shape=(1, 9000, 1)
logits [[ 5.206332  -2.6423283  2.7300045 -7.9126773]]
Iteration 600 of 1000: loss=0.025 " + "l1=0.0247" + "l2=0.000302 f=-0.655 shape=(1, 9000, 1)
logits [[ 5.2019787 -2.6442988  2.7309701 -7.9096217]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.252 " + "l1=0.252" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.24162   -2.6281762  2.720788  -7.9387727]]
Iteration 100 of 1000: loss=0.24 " + "l1=0.234" + "l2=0.00611 f=-0.663 shape=(1, 9000, 1)
logits [[ 5.102466  -2.6854982  2.7657056 -7.834207 ]]
Iteration 200 of 1000: loss=0.234 " + "l1=0.226" + "l2=0.00844 f=-0.668 shape=(1, 9000, 1)
logits [[ 5.031831  -2.7039862  2.7766714 -7.774625 ]]
Iteration 300 of 1000: loss=0.228 " + "l1=0.217" + "l2=0.0106 f=-0.674 shape=(1, 9000, 1)
logits [[ 4.9590364 -2.724091   2.7856052 -7.715459 ]]
Iteration 400 of 1000: loss=0.222 " + "l1=0.21" + "l2=0.0125 f=-0.679 shape=(1, 9000, 1)
logits [[ 4.88881   -2.7399948  2.7915819 -7.656002 ]]
Iteration 500 of 1000: loss=0.216 " + "l1=0.201" + "l2=0.0149 f=-0.684 shape=(1, 9000, 1)
logits [[ 4.8092365 -2.7514763  2.7948673 -7.587868 ]]
Iteration 600 of 1000: loss=0.211 " + "l1=0.194" + "l2=0.0171 f=-0.687 shape=(1, 9000, 1)
logits [[ 4.7339277 -2.757645   2.7959461 -7.5201077]]
Iteration 700 of 1000: loss=0.205 " + "l1=0.186" + "l2=0.0196 f=-0.69 shape=(1, 9000, 1)
logits [[ 4.6547084 -2.7609208  2.7969182 -7.4490128]]
Iteration 800 of 1000: loss=0.2 " + "l1=0.178" + "l2=0.022 f=-0.69 shape=(1, 9000, 1)
logits [[ 4.5715947 -2.7598672  2.794207  -7.3672404]]
Iteration 900 of 1000: loss=0.195 " + "l1=0.171" + "l2=0.0237 f=-0.687 shape=(1, 9000, 1)
logits [[ 4.4961557 -2.7451742  2.787423  -7.2878323]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.52 " + "l1=2.52" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.24162   -2.6281762  2.720788  -7.9387727]]
Iteration 100 of 1000: loss=1.4 " + "l1=0.906" + "l2=0.495 f=-0.68 shape=(1, 9000, 1)
logits [[ 3.9231765 -2.846781   3.0170517 -6.8119473]]
Iteration 200 of 1000: loss=0.777 " + "l1=0.0212" + "l2=0.756 f=-0.674 shape=(1, 9000, 1)
logits [[ 3.0254328 -2.8296833  3.00423   -5.89528  ]]
Iteration 300 of 1000: loss=0.477 " + "l1=0" + "l2=0.477 f=-0.666 shape=(1, 9000, 1)
logits [[ 2.8619056 -2.7860427  2.8711975 -5.6110077]]
Iteration 400 of 1000: loss=0.34 " + "l1=0.00228" + "l2=0.338 f=-0.657 shape=(1, 9000, 1)
logits [[ 2.7910855 -2.7504497  2.788803  -5.4569354]]
Iteration 500 of 1000: loss=0.271 " + "l1=0" + "l2=0.271 f=-0.655 shape=(1, 9000, 1)
logits [[ 2.711669  -2.738265   2.721374  -5.3158326]]
Iteration 600 of 1000: loss=0.227 " + "l1=0" + "l2=0.227 f=-0.655 shape=(1, 9000, 1)
logits [[ 2.6704087 -2.7379942  2.6721473 -5.2233634]]
Iteration 700 of 1000: loss=0.203 " + "l1=0" + "l2=0.203 f=-0.653 shape=(1, 9000, 1)
logits [[ 2.626689  -2.7397332  2.6421132 -5.141959 ]]
Iteration 800 of 1000: loss=0.184 " + "l1=0" + "l2=0.184 f=-0.654 shape=(1, 9000, 1)
logits [[ 2.5991614 -2.746682   2.6179445 -5.08516  ]]
Iteration 900 of 1000: loss=0.165 " + "l1=0" + "l2=0.165 f=-0.653 shape=(1, 9000, 1)
logits [[ 2.5942373 -2.7493227  2.595196  -5.053581 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.39 " + "l1=1.39" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.24162   -2.6281762  2.720788  -7.9387727]]
Iteration 100 of 1000: loss=1.01 " + "l1=0.849" + "l2=0.163 f=-0.68 shape=(1, 9000, 1)
logits [[ 4.4408035 -2.7945044  2.8976347 -7.2636156]]
Iteration 200 of 1000: loss=0.827 " + "l1=0.595" + "l2=0.232 f=-0.687 shape=(1, 9000, 1)
logits [[ 4.021564  -2.837938   2.939208  -6.8703604]]
Iteration 300 of 1000: loss=0.639 " + "l1=0.339" + "l2=0.3 f=-0.664 shape=(1, 9000, 1)
logits [[ 3.5595818 -2.8105764  2.9433932 -6.3495517]]
Iteration 400 of 1000: loss=0.43 " + "l1=0.0932" + "l2=0.336 f=-0.635 shape=(1, 9000, 1)
logits [[ 3.0422008 -2.7396185  2.8727114 -5.713596 ]]
Iteration 500 of 1000: loss=0.275 " + "l1=0.00211" + "l2=0.273 f=-0.64 shape=(1, 9000, 1)
logits [[ 2.7604926 -2.7127562  2.7566512 -5.3660707]]
Iteration 600 of 1000: loss=0.218 " + "l1=0" + "l2=0.218 f=-0.64 shape=(1, 9000, 1)
logits [[ 2.6815317 -2.692101   2.6869164 -5.2359023]]
Iteration 700 of 1000: loss=0.188 " + "l1=0.00308" + "l2=0.185 f=-0.638 shape=(1, 9000, 1)
logits [[ 2.6598866 -2.6933677  2.6542814 -5.1726904]]
Iteration 800 of 1000: loss=0.165 " + "l1=0.00163" + "l2=0.163 f=-0.635 shape=(1, 9000, 1)
logits [[ 2.6405246 -2.6904564  2.6375625 -5.1260033]]
Iteration 900 of 1000: loss=0.151 " + "l1=0" + "l2=0.151 f=-0.634 shape=(1, 9000, 1)
logits [[ 2.6353629 -2.6843512  2.6377554 -5.123326 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.819 " + "l1=0.819" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.24162   -2.6281762  2.720788  -7.9387727]]
Iteration 100 of 1000: loss=0.688 " + "l1=0.626" + "l2=0.0617 f=-0.677 shape=(1, 9000, 1)
logits [[ 4.7606297 -2.750116   2.83322   -7.5511885]]
Iteration 200 of 1000: loss=0.611 " + "l1=0.523" + "l2=0.0888 f=-0.69 shape=(1, 9000, 1)
logits [[ 4.4678984 -2.8021812  2.859859  -7.2850375]]
Iteration 300 of 1000: loss=0.552 " + "l1=0.449" + "l2=0.103 f=-0.692 shape=(1, 9000, 1)
logits [[ 4.263872  -2.8217447  2.881847  -7.092438 ]]
Iteration 400 of 1000: loss=0.49 " + "l1=0.373" + "l2=0.117 f=-0.678 shape=(1, 9000, 1)
logits [[ 4.0222955 -2.8011873  2.875091  -6.8090835]]
Iteration 500 of 1000: loss=0.415 " + "l1=0.278" + "l2=0.137 f=-0.655 shape=(1, 9000, 1)
logits [[ 3.7131054 -2.7632878  2.858535  -6.429791 ]]
Iteration 600 of 1000: loss=0.34 " + "l1=0.187" + "l2=0.153 f=-0.626 shape=(1, 9000, 1)
logits [[ 3.3995123 -2.7003233  2.8250382 -6.0278773]]
Iteration 700 of 1000: loss=0.283 " + "l1=0.117" + "l2=0.166 f=-0.619 shape=(1, 9000, 1)
logits [[ 3.124302  -2.6674979  2.7646503 -5.6965227]]
Iteration 800 of 1000: loss=0.218 " + "l1=0.0291" + "l2=0.189 f=-0.619 shape=(1, 9000, 1)
logits [[ 2.8073764 -2.6627076  2.717866  -5.338465 ]]
Iteration 900 of 1000: loss=0.172 " + "l1=0.000518" + "l2=0.172 f=-0.619 shape=(1, 9000, 1)
logits [[ 2.6683183 -2.6526613  2.6667242 -5.157272 ]]
--- 282.08441042900085 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.132 " + "l1=0.132" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.24162   -2.6281762  2.720788  -7.9387727]]
Iteration 100 of 1000: loss=0.131 " + "l1=0.131" + "l2=0.00044 f=-0.649 shape=(1, 9000, 1)
logits [[ 5.193683  -2.6176426  2.7031016 -7.8743644]]
Iteration 200 of 1000: loss=0.131 " + "l1=0.13" + "l2=0.000465 f=-0.649 shape=(1, 9000, 1)
logits [[ 5.1841807 -2.6177192  2.700195  -7.862396 ]]
Iteration 300 of 1000: loss=0.131 " + "l1=0.13" + "l2=0.000561 f=-0.649 shape=(1, 9000, 1)
logits [[ 5.172187  -2.6175487  2.6965811 -7.8473177]]
Iteration 400 of 1000: loss=0.131 " + "l1=0.13" + "l2=0.000677 f=-0.649 shape=(1, 9000, 1)
logits [[ 5.160305  -2.6173553  2.69301   -7.8323164]]
Iteration 500 of 1000: loss=0.13 " + "l1=0.13" + "l2=0.000786 f=-0.649 shape=(1, 9000, 1)
logits [[ 5.148667  -2.6174972  2.689812  -7.817781 ]]
Iteration 600 of 1000: loss=0.13 " + "l1=0.129" + "l2=0.000956 f=-0.649 shape=(1, 9000, 1)
logits [[ 5.1369977 -2.6180491  2.686836  -7.8034015]]
Iteration 700 of 1000: loss=0.13 " + "l1=0.129" + "l2=0.00113 f=-0.65 shape=(1, 9000, 1)
logits [[ 5.1255193 -2.6188622  2.6841161 -7.789404 ]]
Iteration 800 of 1000: loss=0.13 " + "l1=0.129" + "l2=0.00132 f=-0.65 shape=(1, 9000, 1)
logits [[ 5.1147203 -2.6196663  2.6817408 -7.7761807]]
Iteration 900 of 1000: loss=0.13 " + "l1=0.129" + "l2=0.00143 f=-0.65 shape=(1, 9000, 1)
logits [[ 5.10404   -2.6205769  2.6794074 -7.7633586]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.32 " + "l1=1.32" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.24162   -2.6281762  2.720788  -7.9387727]]
Iteration 100 of 1000: loss=1.25 " + "l1=1.21" + "l2=0.0361 f=-0.631 shape=(1, 9000, 1)
logits [[ 4.798946  -2.5284154  2.5577312 -7.351031 ]]
Iteration 200 of 1000: loss=1.21 " + "l1=1.16" + "l2=0.051 f=-0.625 shape=(1, 9000, 1)
logits [[ 4.5727024 -2.4949589  2.4874263 -7.0654564]]
Iteration 300 of 1000: loss=1.18 " + "l1=1.11" + "l2=0.066 f=-0.623 shape=(1, 9000, 1)
logits [[ 4.347055  -2.4598768  2.4071758 -6.785067 ]]
Iteration 400 of 1000: loss=1.15 " + "l1=1.07" + "l2=0.0797 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.134743  -2.3777165  2.3149602 -6.529944 ]]
Iteration 500 of 1000: loss=1.12 " + "l1=1.02" + "l2=0.0923 f=-0.608 shape=(1, 9000, 1)
logits [[ 3.9449165 -2.3428326  2.2512527 -6.2836537]]
Iteration 600 of 1000: loss=1.08 " + "l1=0.973" + "l2=0.109 f=-0.598 shape=(1, 9000, 1)
logits [[ 3.733772  -2.3196602  2.18949   -5.996885 ]]
Iteration 700 of 1000: loss=1.04 " + "l1=0.912" + "l2=0.125 f=-0.588 shape=(1, 9000, 1)
logits [[ 3.4739192 -2.3304386  2.1506424 -5.6458383]]
Iteration 800 of 1000: loss=0.991 " + "l1=0.851" + "l2=0.14 f=-0.578 shape=(1, 9000, 1)
logits [[ 3.2094083 -2.3416595  2.1186757 -5.2970634]]
Iteration 900 of 1000: loss=0.944 " + "l1=0.791" + "l2=0.152 f=-0.568 shape=(1, 9000, 1)
logits [[ 2.9570003 -2.3576207  2.0855694 -4.956722 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=13.2 " + "l1=13.2" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.24162   -2.6281762  2.720788  -7.9387727]]
Iteration 100 of 1000: loss=7.49 " + "l1=4.94" + "l2=2.55 f=-0.411 shape=(1, 9000, 1)
logits [[ 1.5183657 -1.2276068  1.4880698 -3.4237173]]
Iteration 200 of 1000: loss=4.48 " + "l1=1.74" + "l2=2.74 f=-0.308 shape=(1, 9000, 1)
logits [[ 0.60353917 -1.3345747   0.61999637 -1.1203196 ]]
Iteration 300 of 1000: loss=2.4 " + "l1=0.0172" + "l2=2.38 f=-0.255 shape=(1, 9000, 1)
logits [[ 0.1058204  -1.3619299   0.12721492  0.11004199]]
Iteration 400 of 1000: loss=1.76 " + "l1=0" + "l2=1.76 f=-0.269 shape=(1, 9000, 1)
logits [[ 0.09020549 -1.4069971   0.11649498  0.12296783]]
Iteration 500 of 1000: loss=1.46 " + "l1=0" + "l2=1.46 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.09210312 -1.4598305   0.10743272  0.10960693]]
Iteration 600 of 1000: loss=1.26 " + "l1=0" + "l2=1.26 f=-0.299 shape=(1, 9000, 1)
logits [[ 0.07767419 -1.4701226   0.08669145  0.10910499]]
Iteration 700 of 1000: loss=1.09 " + "l1=0" + "l2=1.09 f=-0.314 shape=(1, 9000, 1)
logits [[ 0.05785074 -1.4655908   0.06794296  0.08477335]]
Iteration 800 of 1000: loss=0.99 " + "l1=0" + "l2=0.99 f=-0.322 shape=(1, 9000, 1)
logits [[ 0.01355842 -1.4524201   0.05569378  0.09663086]]
Iteration 900 of 1000: loss=0.9 " + "l1=0" + "l2=0.9 f=-0.334 shape=(1, 9000, 1)
logits [[-0.02342934 -1.4612117   0.07023877  0.07892304]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.25 " + "l1=7.25" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.24162   -2.6281762  2.720788  -7.9387727]]
Iteration 100 of 1000: loss=5.33 " + "l1=4.42" + "l2=0.91 f=-0.484 shape=(1, 9000, 1)
logits [[ 2.974727  -1.7219467  1.8777136 -5.065836 ]]
Iteration 200 of 1000: loss=3.88 " + "l1=2.53" + "l2=1.35 f=-0.433 shape=(1, 9000, 1)
logits [[ 1.4328948 -1.4265424  1.4278834 -3.1655793]]
Iteration 300 of 1000: loss=2.83 " + "l1=1.45" + "l2=1.39 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.88568497 -1.5020988   0.89286274 -1.7379417 ]]
Iteration 400 of 1000: loss=1.91 " + "l1=0.318" + "l2=1.59 f=-0.302 shape=(1, 9000, 1)
logits [[ 0.231078   -1.3515675   0.24444471 -0.33296806]]
Iteration 500 of 1000: loss=1.29 " + "l1=0.00967" + "l2=1.28 f=-0.322 shape=(1, 9000, 1)
logits [[-0.01276923 -1.3719661   0.05676815  0.03918082]]
Iteration 600 of 1000: loss=1.04 " + "l1=0.00431" + "l2=1.04 f=-0.34 shape=(1, 9000, 1)
logits [[-0.05535559 -1.3868884   0.04512831  0.0372906 ]]
Iteration 700 of 1000: loss=0.921 " + "l1=0" + "l2=0.921 f=-0.351 shape=(1, 9000, 1)
logits [[-0.10991411 -1.4071509   0.04501916  0.06934555]]
Iteration 800 of 1000: loss=0.827 " + "l1=0" + "l2=0.827 f=-0.361 shape=(1, 9000, 1)
logits [[-0.1451028  -1.3941735   0.04703854  0.04944993]]
Iteration 900 of 1000: loss=0.765 " + "l1=0" + "l2=0.765 f=-0.368 shape=(1, 9000, 1)
logits [[-0.19838065 -1.3838197   0.04012403  0.06920359]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.28 " + "l1=4.28" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.24162   -2.6281762  2.720788  -7.9387727]]
Iteration 100 of 1000: loss=3.57 " + "l1=3.26" + "l2=0.316 f=-0.567 shape=(1, 9000, 1)
logits [[ 3.872437  -2.1868136  2.19281   -6.1464624]]
Iteration 200 of 1000: loss=3.14 " + "l1=2.63" + "l2=0.509 f=-0.529 shape=(1, 9000, 1)
logits [[ 2.9927325 -1.9293146  1.9155169 -5.0956783]]
Iteration 300 of 1000: loss=2.65 " + "l1=1.96" + "l2=0.691 f=-0.495 shape=(1, 9000, 1)
logits [[ 2.1038551 -1.8185468  1.6675876 -3.9319253]]
Iteration 400 of 1000: loss=2.09 " + "l1=1.27" + "l2=0.817 f=-0.476 shape=(1, 9000, 1)
logits [[ 1.2741013 -1.8214337  1.2736615 -2.6300592]]
Iteration 500 of 1000: loss=1.72 " + "l1=0.923" + "l2=0.802 f=-0.439 shape=(1, 9000, 1)
logits [[ 0.936175   -1.732394    0.93918204 -1.8998132 ]]
Iteration 600 of 1000: loss=1.36 " + "l1=0.522" + "l2=0.835 f=-0.426 shape=(1, 9000, 1)
logits [[ 0.44363478 -1.5160503   0.48794973 -1.1180634 ]]
Iteration 700 of 1000: loss=1.02 " + "l1=0.13" + "l2=0.889 f=-0.403 shape=(1, 9000, 1)
logits [[-0.03753433 -1.4221797   0.12398365 -0.27564627]]
Iteration 800 of 1000: loss=0.819 " + "l1=0" + "l2=0.819 f=-0.385 shape=(1, 9000, 1)
logits [[-0.17881563 -1.4443635   0.03612591  0.04783876]]
Iteration 900 of 1000: loss=0.732 " + "l1=0" + "l2=0.732 f=-0.381 shape=(1, 9000, 1)
logits [[-0.16860145 -1.488286    0.06499941  0.06771608]]
--- 302.3897681236267 seconds ---
Adv result:3
Loading record A06970
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0414 " + "l1=0.0414" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.2209892 -0.9175881  1.4398009 -5.724486 ]]
Iteration 100 of 1000: loss=0.0407 " + "l1=0.0404" + "l2=0.000329 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.1647506  -0.87231946  1.420406   -5.682939  ]]
Iteration 200 of 1000: loss=0.0404 " + "l1=0.04" + "l2=0.000385 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.1463358  -0.85346264  1.4139547  -5.670192  ]]
Iteration 300 of 1000: loss=0.0401 " + "l1=0.0396" + "l2=0.00048 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.126302   -0.83420366  1.407604   -5.655845  ]]
Iteration 400 of 1000: loss=0.0398 " + "l1=0.0392" + "l2=0.000611 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.10586   -0.8143883  1.40221   -5.6420627]]
Iteration 500 of 1000: loss=0.0396 " + "l1=0.0389" + "l2=0.000729 f=-0.486 shape=(1, 9000, 1)
logits [[ 3.0879576  -0.79861903  1.3977399  -5.629212  ]]
Iteration 600 of 1000: loss=0.0394 " + "l1=0.0385" + "l2=0.000856 f=-0.484 shape=(1, 9000, 1)
logits [[ 3.070046  -0.7836909  1.3938041 -5.6169987]]
Iteration 700 of 1000: loss=0.0392 " + "l1=0.0383" + "l2=0.00099 f=-0.483 shape=(1, 9000, 1)
logits [[ 3.0543098  -0.77125144  1.3904574  -5.6057014 ]]
Iteration 800 of 1000: loss=0.0392 " + "l1=0.038" + "l2=0.00118 f=-0.482 shape=(1, 9000, 1)
logits [[ 3.04144    -0.76277405  1.3878719  -5.5949697 ]]
Iteration 900 of 1000: loss=0.0391 " + "l1=0.0379" + "l2=0.00123 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.0301418 -0.7563055  1.3853899 -5.5850215]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.414 " + "l1=0.414" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.2209892 -0.9175881  1.4398009 -5.724486 ]]
Iteration 100 of 1000: loss=0.36 " + "l1=0.336" + "l2=0.024 f=-0.482 shape=(1, 9000, 1)
logits [[ 2.7579958  -0.59857833  1.3080642  -5.3964357 ]]
Iteration 200 of 1000: loss=0.336 " + "l1=0.302" + "l2=0.0337 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.5523345  -0.47056663  1.2763788  -5.283204  ]]
Iteration 300 of 1000: loss=0.318 " + "l1=0.278" + "l2=0.0398 f=-0.482 shape=(1, 9000, 1)
logits [[ 2.3865807  -0.39355195  1.2480323  -5.167665  ]]
Iteration 400 of 1000: loss=0.303 " + "l1=0.259" + "l2=0.0445 f=-0.482 shape=(1, 9000, 1)
logits [[ 2.2453294  -0.34129298  1.2113937  -5.041733  ]]
Iteration 500 of 1000: loss=0.288 " + "l1=0.238" + "l2=0.0502 f=-0.482 shape=(1, 9000, 1)
logits [[ 2.0975964 -0.2834435  1.1582817 -4.9015555]]
Iteration 600 of 1000: loss=0.272 " + "l1=0.216" + "l2=0.0562 f=-0.485 shape=(1, 9000, 1)
logits [[ 1.9373115  -0.22504197  1.0985327  -4.7504673 ]]
Iteration 700 of 1000: loss=0.257 " + "l1=0.193" + "l2=0.0635 f=-0.484 shape=(1, 9000, 1)
logits [[ 1.7673304 -0.1647352  1.0455947 -4.58616  ]]
Iteration 800 of 1000: loss=0.243 " + "l1=0.175" + "l2=0.0674 f=-0.485 shape=(1, 9000, 1)
logits [[ 1.6270044  -0.12375327  1.0108885  -4.4557467 ]]
Iteration 900 of 1000: loss=0.23 " + "l1=0.159" + "l2=0.0703 f=-0.487 shape=(1, 9000, 1)
logits [[ 1.5031028  -0.08971386  0.9755917  -4.338082  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.14 " + "l1=4.14" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.2209892 -0.9175881  1.4398009 -5.724486 ]]
Iteration 100 of 1000: loss=0.907 " + "l1=0.00547" + "l2=0.901 f=-0.476 shape=(1, 9000, 1)
logits [[ 0.56644255  0.576361    0.58183384 -3.6277227 ]]
Iteration 200 of 1000: loss=0.661 " + "l1=0.0169" + "l2=0.644 f=-0.477 shape=(1, 9000, 1)
logits [[ 0.57163966  0.55476665  0.55554676 -3.5897596 ]]
Iteration 300 of 1000: loss=0.525 " + "l1=0.00727" + "l2=0.518 f=-0.468 shape=(1, 9000, 1)
logits [[ 0.5238698   0.54318154  0.5504564  -3.4900799 ]]
Iteration 400 of 1000: loss=0.431 " + "l1=0.000357" + "l2=0.431 f=-0.465 shape=(1, 9000, 1)
logits [[ 0.50879204  0.5320284   0.5323853  -3.4341285 ]]
Iteration 500 of 1000: loss=0.381 " + "l1=0" + "l2=0.381 f=-0.461 shape=(1, 9000, 1)
logits [[ 0.49428412  0.5294369   0.50770116 -3.3765843 ]]
Iteration 600 of 1000: loss=0.332 " + "l1=0" + "l2=0.332 f=-0.459 shape=(1, 9000, 1)
logits [[ 0.49301544  0.5079584   0.5011346  -3.3388865 ]]
Iteration 700 of 1000: loss=0.296 " + "l1=0" + "l2=0.296 f=-0.458 shape=(1, 9000, 1)
logits [[ 0.46958992  0.49093068  0.48814094 -3.2823339 ]]
Iteration 800 of 1000: loss=0.271 " + "l1=0" + "l2=0.271 f=-0.454 shape=(1, 9000, 1)
logits [[ 0.45546854  0.48267326  0.4724502  -3.2279685 ]]
Iteration 900 of 1000: loss=0.248 " + "l1=0.00625" + "l2=0.242 f=-0.452 shape=(1, 9000, 1)
logits [[ 0.4672504   0.46099818  0.46673563 -3.2022672 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.28 " + "l1=2.28" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.2209892 -0.9175881  1.4398009 -5.724486 ]]
Iteration 100 of 1000: loss=0.895 " + "l1=0.209" + "l2=0.687 f=-0.476 shape=(1, 9000, 1)
logits [[ 0.7649152  0.4095571  0.7887954 -3.8661664]]
Iteration 200 of 1000: loss=0.601 " + "l1=0.0525" + "l2=0.549 f=-0.471 shape=(1, 9000, 1)
logits [[ 0.6134158  0.5180443  0.6079102 -3.621833 ]]
Iteration 300 of 1000: loss=0.441 " + "l1=0.00177" + "l2=0.44 f=-0.468 shape=(1, 9000, 1)
logits [[ 0.51908755  0.534359    0.537575   -3.4634218 ]]
Iteration 400 of 1000: loss=0.352 " + "l1=0" + "l2=0.352 f=-0.467 shape=(1, 9000, 1)
logits [[ 0.5148905   0.51552385  0.51213074 -3.4102125 ]]
Iteration 500 of 1000: loss=0.302 " + "l1=0.00329" + "l2=0.298 f=-0.463 shape=(1, 9000, 1)
logits [[ 0.5007888   0.4948001   0.49967113 -3.3480313 ]]
Iteration 600 of 1000: loss=0.265 " + "l1=0" + "l2=0.265 f=-0.46 shape=(1, 9000, 1)
logits [[ 0.47829512  0.4837579   0.47980312 -3.2812443 ]]
Iteration 700 of 1000: loss=0.241 " + "l1=0.00303" + "l2=0.238 f=-0.459 shape=(1, 9000, 1)
logits [[ 0.45863944  0.4640571   0.4695732  -3.2300055 ]]
Iteration 800 of 1000: loss=0.22 " + "l1=0" + "l2=0.22 f=-0.459 shape=(1, 9000, 1)
logits [[ 0.44730073  0.4534639   0.4522183  -3.1882896 ]]
Iteration 900 of 1000: loss=0.208 " + "l1=0.00283" + "l2=0.205 f=-0.457 shape=(1, 9000, 1)
logits [[ 0.4401891   0.43833542  0.44347665 -3.1502836 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.35 " + "l1=1.35" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.2209892 -0.9175881  1.4398009 -5.724486 ]]
Iteration 100 of 1000: loss=0.83 " + "l1=0.54" + "l2=0.29 f=-0.493 shape=(1, 9000, 1)
logits [[ 1.6428221  -0.01974629  1.019954   -4.615802  ]]
Iteration 200 of 1000: loss=0.597 " + "l1=0.208" + "l2=0.389 f=-0.485 shape=(1, 9000, 1)
logits [[ 0.9088118   0.2683395   0.88787645 -4.006682  ]]
Iteration 300 of 1000: loss=0.461 " + "l1=0.136" + "l2=0.325 f=-0.486 shape=(1, 9000, 1)
logits [[ 0.76141137  0.34387308  0.75172687 -3.8001442 ]]
Iteration 400 of 1000: loss=0.372 " + "l1=0.0841" + "l2=0.288 f=-0.481 shape=(1, 9000, 1)
logits [[ 0.6540612   0.39537024  0.6441518  -3.6186514 ]]
Iteration 500 of 1000: loss=0.311 " + "l1=0.0445" + "l2=0.267 f=-0.474 shape=(1, 9000, 1)
logits [[ 0.5630637   0.43018395  0.5671784  -3.458413  ]]
Iteration 600 of 1000: loss=0.27 " + "l1=0.0186" + "l2=0.252 f=-0.467 shape=(1, 9000, 1)
logits [[ 0.50563097  0.45179364  0.5088865  -3.334909  ]]
Iteration 700 of 1000: loss=0.237 " + "l1=0" + "l2=0.237 f=-0.463 shape=(1, 9000, 1)
logits [[ 0.45766822  0.46521497  0.46471813 -3.2394803 ]]
Iteration 800 of 1000: loss=0.216 " + "l1=0.00712" + "l2=0.208 f=-0.461 shape=(1, 9000, 1)
logits [[ 0.4627486   0.4408517   0.45799777 -3.2054064 ]]
Iteration 900 of 1000: loss=0.195 " + "l1=0.000498" + "l2=0.195 f=-0.457 shape=(1, 9000, 1)
logits [[ 0.44185877  0.44032556  0.44155523 -3.1512175 ]]
--- 303.811913728714 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0178 " + "l1=0.0178" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.2209892 -0.9175881  1.4398009 -5.724486 ]]
Iteration 100 of 1000: loss=0.0176 " + "l1=0.0175" + "l2=0.000136 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.1864915 -0.9074152  1.438821  -5.6996818]]
Iteration 200 of 1000: loss=0.0175 " + "l1=0.0174" + "l2=0.000123 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.1809402 -0.9049986  1.4385847 -5.6957145]]
Iteration 300 of 1000: loss=0.0175 " + "l1=0.0173" + "l2=0.000151 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.1721456  -0.90144557  1.4385238  -5.689694  ]]
Iteration 400 of 1000: loss=0.0175 " + "l1=0.0172" + "l2=0.000214 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.162683   -0.89759654  1.4384959  -5.6832895 ]]
Iteration 500 of 1000: loss=0.0174 " + "l1=0.0171" + "l2=0.000297 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.1526406  -0.89381236  1.4388043  -5.6768675 ]]
Iteration 600 of 1000: loss=0.0174 " + "l1=0.017" + "l2=0.000373 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.142431   -0.89002025  1.439042   -5.6702223 ]]
Iteration 700 of 1000: loss=0.0173 " + "l1=0.0169" + "l2=0.000415 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.1322563  -0.88632154  1.4391774  -5.6632543 ]]
Iteration 800 of 1000: loss=0.0174 " + "l1=0.0168" + "l2=0.000528 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.122116  -0.8826117  1.4391971 -5.656104 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.178 " + "l1=0.178" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.2209892 -0.9175881  1.4398009 -5.724486 ]]
Iteration 100 of 1000: loss=0.16 " + "l1=0.151" + "l2=0.00877 f=-0.496 shape=(1, 9000, 1)
logits [[ 2.9564862  -0.84591264  1.4420607  -5.538023  ]]
Iteration 200 of 1000: loss=0.15 " + "l1=0.137" + "l2=0.0125 f=-0.495 shape=(1, 9000, 1)
logits [[ 2.8208342 -0.7977936  1.4491345 -5.453218 ]]
Iteration 300 of 1000: loss=0.14 " + "l1=0.123" + "l2=0.0165 f=-0.496 shape=(1, 9000, 1)
logits [[ 2.7028656 -0.7653687  1.4717566 -5.394828 ]]
Iteration 400 of 1000: loss=0.13 " + "l1=0.109" + "l2=0.0205 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.5850806 -0.7375961  1.4909065 -5.332031 ]]
Iteration 500 of 1000: loss=0.121 " + "l1=0.0958" + "l2=0.025 f=-0.502 shape=(1, 9000, 1)
logits [[ 2.464681   -0.71708953  1.5070935  -5.2608685 ]]
Iteration 600 of 1000: loss=0.113 " + "l1=0.0849" + "l2=0.0277 f=-0.505 shape=(1, 9000, 1)
logits [[ 2.3680458 -0.7088946  1.5186257 -5.1972933]]
Iteration 700 of 1000: loss=0.105 " + "l1=0.074" + "l2=0.0307 f=-0.51 shape=(1, 9000, 1)
logits [[ 2.2694373 -0.7077531  1.5296378 -5.1301527]]
Iteration 800 of 1000: loss=0.0975 " + "l1=0.0646" + "l2=0.0329 f=-0.515 shape=(1, 9000, 1)
logits [[ 2.1770692 -0.7051547  1.5305941 -5.0616994]]
Iteration 900 of 1000: loss=0.0897 " + "l1=0.0539" + "l2=0.0359 f=-0.52 shape=(1, 9000, 1)
logits [[ 2.0720055 -0.7055232  1.5332217 -4.978543 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.78 " + "l1=1.78" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.2209892 -0.9175881  1.4398009 -5.724486 ]]
Iteration 100 of 1000: loss=0.331 " + "l1=0.00215" + "l2=0.329 f=-0.517 shape=(1, 9000, 1)
logits [[ 1.696869   -0.66371834  1.69472    -4.7953    ]]
Iteration 200 of 1000: loss=0.223 " + "l1=0" + "l2=0.223 f=-0.524 shape=(1, 9000, 1)
logits [[ 1.6397955  -0.64617306  1.6814663  -4.769868  ]]
Iteration 300 of 1000: loss=0.166 " + "l1=0" + "l2=0.166 f=-0.525 shape=(1, 9000, 1)
logits [[ 1.6265451 -0.6367156  1.6477761 -4.737139 ]]
Iteration 400 of 1000: loss=0.14 " + "l1=0.00898" + "l2=0.131 f=-0.523 shape=(1, 9000, 1)
logits [[ 1.6202589 -0.6268364  1.6112772 -4.6953444]]
Iteration 500 of 1000: loss=0.119 " + "l1=0" + "l2=0.119 f=-0.52 shape=(1, 9000, 1)
logits [[ 1.5709436  -0.62020177  1.5879178  -4.6204753 ]]
Iteration 600 of 1000: loss=0.104 " + "l1=0" + "l2=0.104 f=-0.519 shape=(1, 9000, 1)
logits [[ 1.5518517  -0.61992574  1.5695038  -4.5779567 ]]
Iteration 700 of 1000: loss=0.0931 " + "l1=0" + "l2=0.0931 f=-0.519 shape=(1, 9000, 1)
logits [[ 1.5430437  -0.62442636  1.5542371  -4.548857  ]]
Iteration 800 of 1000: loss=0.087 " + "l1=0" + "l2=0.087 f=-0.519 shape=(1, 9000, 1)
logits [[ 1.5264868 -0.6333006  1.5478096 -4.518794 ]]
Iteration 900 of 1000: loss=0.0809 " + "l1=0.00382" + "l2=0.077 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.535473  -0.63905    1.5316523 -4.5019503]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.98 " + "l1=0.98" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.2209892 -0.9175881  1.4398009 -5.724486 ]]
Iteration 100 of 1000: loss=0.375 " + "l1=0.0664" + "l2=0.309 f=-0.524 shape=(1, 9000, 1)
logits [[ 1.7847204  -0.66651744  1.6639472  -4.8789334 ]]
Iteration 200 of 1000: loss=0.198 " + "l1=0.00412" + "l2=0.194 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.6715825 -0.6476923  1.6640861 -4.863154 ]]
Iteration 300 of 1000: loss=0.145 " + "l1=0" + "l2=0.145 f=-0.543 shape=(1, 9000, 1)
logits [[ 1.6293224  -0.65654147  1.6343181  -4.7803264 ]]
Iteration 400 of 1000: loss=0.118 " + "l1=0" + "l2=0.118 f=-0.539 shape=(1, 9000, 1)
logits [[ 1.6033562 -0.6593136  1.6071252 -4.707699 ]]
Iteration 500 of 1000: loss=0.102 " + "l1=0.00182" + "l2=0.1 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.5830001 -0.6586018  1.579688  -4.6486382]]
Iteration 600 of 1000: loss=0.0916 " + "l1=0" + "l2=0.0916 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.5440625  -0.66094106  1.5640812  -4.5895705 ]]
Iteration 700 of 1000: loss=0.0814 " + "l1=0" + "l2=0.0814 f=-0.534 shape=(1, 9000, 1)
logits [[ 1.5323567 -0.6660327  1.5505801 -4.55315  ]]
Iteration 800 of 1000: loss=0.073 " + "l1=0.00201" + "l2=0.071 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.536942   -0.67013854  1.5332804  -4.5259013 ]]
Iteration 900 of 1000: loss=0.0681 " + "l1=0" + "l2=0.0681 f=-0.532 shape=(1, 9000, 1)
logits [[ 1.497188  -0.6693613  1.5231215 -4.477146 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.579 " + "l1=0.579" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.2209892 -0.9175881  1.4398009 -5.724486 ]]
Iteration 100 of 1000: loss=0.371 " + "l1=0.268" + "l2=0.102 f=-0.507 shape=(1, 9000, 1)
logits [[ 2.366473  -0.7080811  1.5415285 -5.2265253]]
Iteration 200 of 1000: loss=0.245 " + "l1=0.0909" + "l2=0.154 f=-0.528 shape=(1, 9000, 1)
logits [[ 1.9093688  -0.66546494  1.6297587  -4.9876237 ]]
Iteration 300 of 1000: loss=0.151 " + "l1=0.00118" + "l2=0.15 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.6462487 -0.6675031  1.6426226 -4.796818 ]]
Iteration 400 of 1000: loss=0.117 " + "l1=0.00123" + "l2=0.116 f=-0.539 shape=(1, 9000, 1)
logits [[ 1.6172935  -0.67184037  1.6135025  -4.7147956 ]]
Iteration 500 of 1000: loss=0.0986 " + "l1=0.00165" + "l2=0.0969 f=-0.537 shape=(1, 9000, 1)
logits [[ 1.5901495 -0.6726524  1.5850817 -4.6506844]]
Iteration 600 of 1000: loss=0.0856 " + "l1=0" + "l2=0.0856 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.5604463  -0.67597723  1.5656286  -4.595348  ]]
Iteration 700 of 1000: loss=0.0764 " + "l1=0" + "l2=0.0764 f=-0.535 shape=(1, 9000, 1)
logits [[ 1.5401133 -0.6809669  1.5490445 -4.547744 ]]
Iteration 800 of 1000: loss=0.0679 " + "l1=0" + "l2=0.0679 f=-0.534 shape=(1, 9000, 1)
logits [[ 1.5235472 -0.6801124  1.5292293 -4.5081277]]
Iteration 900 of 1000: loss=0.061 " + "l1=0" + "l2=0.061 f=-0.532 shape=(1, 9000, 1)
logits [[ 1.5044975 -0.6800152  1.515304  -4.469611 ]]
--- 293.6195914745331 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0895 " + "l1=0.0895" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.2209892 -0.9175881  1.4398009 -5.724486 ]]
Iteration 100 of 1000: loss=0.0886 " + "l1=0.0881" + "l2=0.000476 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.1551337 -0.8897507  1.4210414 -5.6528587]]
Iteration 200 of 1000: loss=0.0882 " + "l1=0.0877" + "l2=0.000562 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.1343641 -0.8783089  1.4154004 -5.6309924]]
Iteration 300 of 1000: loss=0.0878 " + "l1=0.0871" + "l2=0.000711 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.1089175  -0.86403114  1.4085255  -5.604676  ]]
Iteration 400 of 1000: loss=0.0875 " + "l1=0.0866" + "l2=0.00086 f=-0.486 shape=(1, 9000, 1)
logits [[ 3.084175   -0.85061127  1.4022968  -5.5788746 ]]
Iteration 500 of 1000: loss=0.0872 " + "l1=0.0862" + "l2=0.00103 f=-0.484 shape=(1, 9000, 1)
logits [[ 3.0607283 -0.8385019  1.3967469 -5.5543056]]
Iteration 600 of 1000: loss=0.0869 " + "l1=0.0857" + "l2=0.00123 f=-0.482 shape=(1, 9000, 1)
logits [[ 3.0387     -0.82759345  1.3919605  -5.531141  ]]
Iteration 700 of 1000: loss=0.0867 " + "l1=0.0853" + "l2=0.0014 f=-0.48 shape=(1, 9000, 1)
logits [[ 3.0174656  -0.81747043  1.3872675  -5.5087366 ]]
Iteration 800 of 1000: loss=0.0864 " + "l1=0.0848" + "l2=0.00155 f=-0.479 shape=(1, 9000, 1)
logits [[ 2.9955947  -0.80811745  1.3827072  -5.484788  ]]
Iteration 900 of 1000: loss=0.0861 " + "l1=0.0843" + "l2=0.00172 f=-0.477 shape=(1, 9000, 1)
logits [[ 2.973731   -0.79847175  1.3779789  -5.4608526 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.895 " + "l1=0.895" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.2209892 -0.9175881  1.4398009 -5.724486 ]]
Iteration 100 of 1000: loss=0.813 " + "l1=0.773" + "l2=0.0399 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.6440792  -0.68447614  1.2772732  -5.0861793 ]]
Iteration 200 of 1000: loss=0.771 " + "l1=0.716" + "l2=0.0547 f=-0.446 shape=(1, 9000, 1)
logits [[ 2.3872428 -0.6145096  1.2149254 -4.7724137]]
Iteration 300 of 1000: loss=0.727 " + "l1=0.655" + "l2=0.0718 f=-0.426 shape=(1, 9000, 1)
logits [[ 2.114611   -0.55178624  1.1673852  -4.4337606 ]]
Iteration 400 of 1000: loss=0.678 " + "l1=0.586" + "l2=0.0915 f=-0.407 shape=(1, 9000, 1)
logits [[ 1.803707   -0.49500948  1.118561   -4.056407  ]]
Iteration 500 of 1000: loss=0.629 " + "l1=0.519" + "l2=0.11 f=-0.397 shape=(1, 9000, 1)
logits [[ 1.4937963  -0.44636202  1.0648419  -3.6991389 ]]
Iteration 600 of 1000: loss=0.585 " + "l1=0.46" + "l2=0.125 f=-0.393 shape=(1, 9000, 1)
logits [[ 1.2223032 -0.4252939  1.0086368 -3.3796082]]
Iteration 700 of 1000: loss=0.545 " + "l1=0.41" + "l2=0.135 f=-0.39 shape=(1, 9000, 1)
logits [[ 0.99076617 -0.39887315  0.95687014 -3.1076314 ]]
Iteration 800 of 1000: loss=0.513 " + "l1=0.381" + "l2=0.132 f=-0.375 shape=(1, 9000, 1)
logits [[ 0.89229214 -0.37275943  0.89373595 -2.9150867 ]]
Iteration 900 of 1000: loss=0.488 " + "l1=0.358" + "l2=0.13 f=-0.361 shape=(1, 9000, 1)
logits [[ 0.8270794  -0.3438052   0.82595843 -2.7522836 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.95 " + "l1=8.95" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.2209892 -0.9175881  1.4398009 -5.724486 ]]
Iteration 100 of 1000: loss=3.22 " + "l1=1.18" + "l2=2.04 f=-0.241 shape=(1, 9000, 1)
logits [[ 0.02395348 -0.10781612  0.15286492 -1.0320764 ]]
Iteration 200 of 1000: loss=1.83 " + "l1=0.0179" + "l2=1.82 f=-0.176 shape=(1, 9000, 1)
logits [[-0.2038499  -0.25116912 -0.11479076 -0.132723  ]]
Iteration 300 of 1000: loss=1.43 " + "l1=0.0085" + "l2=1.42 f=-0.183 shape=(1, 9000, 1)
logits [[-0.20309892 -0.22895175 -0.14518209 -0.15368477]]
Iteration 400 of 1000: loss=1.21 " + "l1=0.0145" + "l2=1.2 f=-0.19 shape=(1, 9000, 1)
logits [[-0.20984781 -0.20773305 -0.16418691 -0.17870396]]
Iteration 500 of 1000: loss=1.06 " + "l1=0" + "l2=1.06 f=-0.187 shape=(1, 9000, 1)
logits [[-0.19543992 -0.20927688 -0.17495732 -0.1672259 ]]
Iteration 600 of 1000: loss=0.945 " + "l1=0.0133" + "l2=0.932 f=-0.187 shape=(1, 9000, 1)
logits [[-0.20221132 -0.18703468 -0.1719078  -0.18517789]]
Iteration 700 of 1000: loss=0.833 " + "l1=0" + "l2=0.833 f=-0.185 shape=(1, 9000, 1)
logits [[-0.20146294 -0.19565883 -0.17394237 -0.17046416]]
Iteration 800 of 1000: loss=0.746 " + "l1=0.000921" + "l2=0.745 f=-0.179 shape=(1, 9000, 1)
logits [[-0.19671337 -0.1857708  -0.16568829 -0.16660884]]
Iteration 900 of 1000: loss=0.666 " + "l1=0.00163" + "l2=0.665 f=-0.169 shape=(1, 9000, 1)
logits [[-0.1616332  -0.19332807 -0.16062574 -0.16225311]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.92 " + "l1=4.92" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.2209892 -0.9175881  1.4398009 -5.724486 ]]
Iteration 100 of 1000: loss=2.53 " + "l1=1.47" + "l2=1.07 f=-0.308 shape=(1, 9000, 1)
logits [[ 0.48861232 -0.03448309  0.49158192 -2.1768951 ]]
Iteration 200 of 1000: loss=1.93 " + "l1=0.99" + "l2=0.944 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.254383   -0.09936616  0.2875383  -1.5123942 ]]
Iteration 300 of 1000: loss=1.35 " + "l1=0.242" + "l2=1.11 f=-0.224 shape=(1, 9000, 1)
logits [[-0.25648534 -0.07982992 -0.05886378 -0.4994207 ]]
Iteration 400 of 1000: loss=0.934 " + "l1=0.00904" + "l2=0.925 f=-0.201 shape=(1, 9000, 1)
logits [[-0.26310393 -0.20378348 -0.15949695 -0.17593217]]
Iteration 500 of 1000: loss=0.748 " + "l1=0.00157" + "l2=0.746 f=-0.191 shape=(1, 9000, 1)
logits [[-0.21389738 -0.21589871 -0.16579264 -0.16864228]]
Iteration 600 of 1000: loss=0.629 " + "l1=0.00418" + "l2=0.625 f=-0.19 shape=(1, 9000, 1)
logits [[-0.17982629 -0.21972024 -0.17715599 -0.18475595]]
Iteration 700 of 1000: loss=0.549 " + "l1=0" + "l2=0.549 f=-0.196 shape=(1, 9000, 1)
logits [[-0.22800404 -0.1929285  -0.1932086  -0.16821927]]
Iteration 800 of 1000: loss=0.482 " + "l1=0" + "l2=0.482 f=-0.194 shape=(1, 9000, 1)
logits [[-0.20734233 -0.19145545 -0.19571047 -0.18005449]]
Iteration 900 of 1000: loss=0.431 " + "l1=0" + "l2=0.431 f=-0.19 shape=(1, 9000, 1)
logits [[-0.19369812 -0.19950248 -0.18498963 -0.18193802]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.91 " + "l1=2.91" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.2209892 -0.9175881  1.4398009 -5.724486 ]]
Iteration 100 of 1000: loss=1.97 " + "l1=1.38" + "l2=0.591 f=-0.36 shape=(1, 9000, 1)
logits [[ 1.0648245 -0.1917214  0.8667915 -3.1782646]]
Iteration 200 of 1000: loss=1.53 " + "l1=0.994" + "l2=0.539 f=-0.329 shape=(1, 9000, 1)
logits [[ 0.6203425  -0.12725286  0.62411314 -2.4344425 ]]
Iteration 300 of 1000: loss=1.28 " + "l1=0.798" + "l2=0.479 f=-0.295 shape=(1, 9000, 1)
logits [[ 0.46214142 -0.12875734  0.4697754  -1.9848402 ]]
Iteration 400 of 1000: loss=1.07 " + "l1=0.577" + "l2=0.492 f=-0.273 shape=(1, 9000, 1)
logits [[ 0.1916752  -0.09028873  0.29082885 -1.4839741 ]]
Iteration 500 of 1000: loss=0.864 " + "l1=0.344" + "l2=0.52 f=-0.278 shape=(1, 9000, 1)
logits [[-0.15462819 -0.07506362  0.08779933 -0.97062   ]]
Iteration 600 of 1000: loss=0.687 " + "l1=0.166" + "l2=0.52 f=-0.274 shape=(1, 9000, 1)
logits [[-0.34999225 -0.0793565  -0.078219   -0.5902668 ]]
Iteration 700 of 1000: loss=0.55 " + "l1=0.0352" + "l2=0.515 f=-0.251 shape=(1, 9000, 1)
logits [[-0.43730852 -0.15613371 -0.15189193 -0.26032165]]
Iteration 800 of 1000: loss=0.455 " + "l1=0" + "l2=0.455 f=-0.242 shape=(1, 9000, 1)
logits [[-0.45477423 -0.17648552 -0.1747242  -0.16031817]]
Iteration 900 of 1000: loss=0.401 " + "l1=0.00179" + "l2=0.399 f=-0.239 shape=(1, 9000, 1)
logits [[-0.44761267 -0.17617889 -0.16238941 -0.16790697]]
--- 304.8402235507965 seconds ---
Adv result:3
Loading record A06981
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0751 " + "l1=0.0751" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.7589545 -2.7502308  2.5348613 -6.950413 ]]
Iteration 100 of 1000: loss=0.0747 " + "l1=0.0744" + "l2=0.00028 f=-0.6 shape=(1, 9000, 1)
logits [[ 4.7128606 -2.7317185  2.5201862 -6.9013505]]
Iteration 200 of 1000: loss=0.0746 " + "l1=0.0744" + "l2=0.000288 f=-0.6 shape=(1, 9000, 1)
logits [[ 4.7071514 -2.728609   2.5173829 -6.8946695]]
Iteration 300 of 1000: loss=0.0746 " + "l1=0.0742" + "l2=0.000335 f=-0.599 shape=(1, 9000, 1)
logits [[ 4.699626  -2.7252643  2.5143163 -6.886104 ]]
Iteration 400 of 1000: loss=0.0745 " + "l1=0.0741" + "l2=0.000382 f=-0.599 shape=(1, 9000, 1)
logits [[ 4.691928  -2.7221332  2.5113664 -6.8774405]]
Iteration 500 of 1000: loss=0.0745 " + "l1=0.074" + "l2=0.000464 f=-0.599 shape=(1, 9000, 1)
logits [[ 4.6843576 -2.7193835  2.5087109 -6.869005 ]]
Iteration 600 of 1000: loss=0.0745 " + "l1=0.0739" + "l2=0.000583 f=-0.599 shape=(1, 9000, 1)
logits [[ 4.6772532 -2.7167788  2.506233  -6.8610687]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.751 " + "l1=0.751" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.7589545 -2.7502308  2.5348613 -6.950413 ]]
Iteration 100 of 1000: loss=0.717 " + "l1=0.694" + "l2=0.0223 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.3513103 -2.5925043  2.4136608 -6.523446 ]]
Iteration 200 of 1000: loss=0.704 " + "l1=0.673" + "l2=0.0307 f=-0.577 shape=(1, 9000, 1)
logits [[ 4.195541  -2.53575    2.3721135 -6.341163 ]]
Iteration 300 of 1000: loss=0.693 " + "l1=0.657" + "l2=0.0362 f=-0.568 shape=(1, 9000, 1)
logits [[ 4.071988  -2.5003233  2.343573  -6.186756 ]]
Iteration 400 of 1000: loss=0.684 " + "l1=0.641" + "l2=0.0423 f=-0.555 shape=(1, 9000, 1)
logits [[ 3.9495213 -2.462899   2.317308  -6.0256004]]
Iteration 500 of 1000: loss=0.675 " + "l1=0.63" + "l2=0.0447 f=-0.548 shape=(1, 9000, 1)
logits [[ 3.8626494 -2.4369745  2.2933216 -5.909845 ]]
Iteration 600 of 1000: loss=0.666 " + "l1=0.617" + "l2=0.0485 f=-0.538 shape=(1, 9000, 1)
logits [[ 3.7625515 -2.4102085  2.2710748 -5.776548 ]]
Iteration 700 of 1000: loss=0.658 " + "l1=0.608" + "l2=0.0503 f=-0.529 shape=(1, 9000, 1)
logits [[ 3.6886559 -2.39049    2.2560518 -5.671176 ]]
Iteration 800 of 1000: loss=0.651 " + "l1=0.599" + "l2=0.0524 f=-0.521 shape=(1, 9000, 1)
logits [[ 3.6180859 -2.3718882  2.2378461 -5.5684614]]
Iteration 900 of 1000: loss=0.645 " + "l1=0.592" + "l2=0.0535 f=-0.515 shape=(1, 9000, 1)
logits [[ 3.5603647 -2.358312   2.2231367 -5.483287 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.51 " + "l1=7.51" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.7589545 -2.7502308  2.5348613 -6.950413 ]]
Iteration 100 of 1000: loss=4.92 " + "l1=3.72" + "l2=1.2 f=-0.424 shape=(1, 9000, 1)
logits [[ 2.0072732 -1.7116098  1.7567583 -3.7483175]]
Iteration 200 of 1000: loss=4.03 " + "l1=2.63" + "l2=1.4 f=-0.366 shape=(1, 9000, 1)
logits [[ 1.3779706 -1.2483703  1.3696296 -2.9625185]]
Iteration 300 of 1000: loss=3.47 " + "l1=2.15" + "l2=1.33 f=-0.355 shape=(1, 9000, 1)
logits [[ 1.1400168 -0.9874671  1.1582857 -2.7309687]]
Iteration 400 of 1000: loss=3.19 " + "l1=1.89" + "l2=1.3 f=-0.326 shape=(1, 9000, 1)
logits [[ 1.016841  -0.871501   1.0163425 -2.4640384]]
Iteration 500 of 1000: loss=2.94 " + "l1=1.66" + "l2=1.27 f=-0.299 shape=(1, 9000, 1)
logits [[ 0.8687641 -0.7812832  0.8797819 -2.163482 ]]
Iteration 600 of 1000: loss=2.76 " + "l1=1.51" + "l2=1.25 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.79563224 -0.70896953  0.8048158  -2.0405262 ]]
Iteration 700 of 1000: loss=2.63 " + "l1=1.38" + "l2=1.25 f=-0.271 shape=(1, 9000, 1)
logits [[ 0.743653   -0.63696533  0.7414146  -1.9318025 ]]
Iteration 800 of 1000: loss=2.53 " + "l1=1.3" + "l2=1.24 f=-0.26 shape=(1, 9000, 1)
logits [[ 0.69751686 -0.59625214  0.7001707  -1.842374  ]]
Iteration 900 of 1000: loss=2.47 " + "l1=1.24" + "l2=1.22 f=-0.251 shape=(1, 9000, 1)
logits [[ 0.66481197 -0.5799157   0.6603955  -1.7510039 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=75.1 " + "l1=75.1" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.7589545 -2.7502308  2.5348613 -6.950413 ]]
Iteration 100 of 1000: loss=14.4 " + "l1=1.81" + "l2=12.6 f=-0.221 shape=(1, 9000, 1)
logits [[ 0.0389742   0.03019522  0.21135488 -1.1660283 ]]
Iteration 200 of 1000: loss=8.92 " + "l1=0" + "l2=8.92 f=-0.241 shape=(1, 9000, 1)
logits [[ 0.007972    0.11379738  0.09807964 -1.1844298 ]]
Iteration 300 of 1000: loss=7.64 " + "l1=0.0474" + "l2=7.59 f=-0.253 shape=(1, 9000, 1)
logits [[ 0.04477416  0.09483356  0.09956933 -1.2502108 ]]
Iteration 400 of 1000: loss=6.92 " + "l1=0" + "l2=6.92 f=-0.252 shape=(1, 9000, 1)
logits [[ 0.03205646  0.10198031  0.09589539 -1.2386798 ]]
Iteration 500 of 1000: loss=6.44 " + "l1=0" + "l2=6.44 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.01296281  0.10350917  0.09852888 -1.2419941 ]]
Iteration 600 of 1000: loss=6.04 " + "l1=0" + "l2=6.04 f=-0.258 shape=(1, 9000, 1)
logits [[ 0.02906743  0.09790876  0.09586931 -1.2538348 ]]
Iteration 700 of 1000: loss=5.8 " + "l1=0" + "l2=5.8 f=-0.261 shape=(1, 9000, 1)
logits [[-0.00764473  0.09956028  0.0960329  -1.2316892 ]]
Iteration 800 of 1000: loss=5.59 " + "l1=0" + "l2=5.59 f=-0.262 shape=(1, 9000, 1)
logits [[-0.04208472  0.10553934  0.10334605 -1.2150187 ]]
Iteration 900 of 1000: loss=5.48 " + "l1=0" + "l2=5.48 f=-0.259 shape=(1, 9000, 1)
logits [[ 0.05583709  0.1110674   0.07773152 -1.2810342 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=41.3 " + "l1=41.3" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.7589545 -2.7502308  2.5348613 -6.950413 ]]
Iteration 100 of 1000: loss=13.4 " + "l1=6.44" + "l2=6.97 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.74246365 -0.4268438   0.74418455 -2.0858567 ]]
Iteration 200 of 1000: loss=7.69 " + "l1=0" + "l2=7.69 f=-0.239 shape=(1, 9000, 1)
logits [[ 0.08980321  0.12590832  0.12437584 -1.2974596 ]]
Iteration 300 of 1000: loss=6.57 " + "l1=0.0872" + "l2=6.48 f=-0.244 shape=(1, 9000, 1)
logits [[ 0.09024263  0.0930116   0.10885896 -1.2680577 ]]
Iteration 400 of 1000: loss=6.07 " + "l1=0.1" + "l2=5.97 f=-0.238 shape=(1, 9000, 1)
logits [[ 0.0458292   0.08152718  0.09978982 -1.1785316 ]]
Iteration 500 of 1000: loss=5.66 " + "l1=0" + "l2=5.66 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.02329936  0.09427858  0.08795036 -1.1309291 ]]
Iteration 600 of 1000: loss=5.32 " + "l1=0.0114" + "l2=5.31 f=-0.235 shape=(1, 9000, 1)
logits [[ 0.06320338  0.08835882  0.09042794 -1.1834592 ]]
Iteration 700 of 1000: loss=5.06 " + "l1=0" + "l2=5.06 f=-0.233 shape=(1, 9000, 1)
logits [[ 0.06744771  0.09033921  0.08310847 -1.1716598 ]]
Iteration 800 of 1000: loss=4.84 " + "l1=0" + "l2=4.84 f=-0.234 shape=(1, 9000, 1)
logits [[ 0.06778869  0.08477704  0.07665396 -1.1637801 ]]
Iteration 900 of 1000: loss=4.71 " + "l1=0" + "l2=4.71 f=-0.234 shape=(1, 9000, 1)
logits [[ 0.03833749  0.08430015  0.07098839 -1.128392  ]]
--- 283.194331407547 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0222 " + "l1=0.0222" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.7589545 -2.7502308  2.5348613 -6.950413 ]]
Iteration 100 of 1000: loss=0.0221 " + "l1=0.0219" + "l2=0.000163 f=-0.601 shape=(1, 9000, 1)
logits [[ 4.727135  -2.7483752  2.5343847 -6.9188538]]
Iteration 200 of 1000: loss=0.0221 " + "l1=0.0219" + "l2=0.000136 f=-0.601 shape=(1, 9000, 1)
logits [[ 4.726152  -2.7483804  2.5341291 -6.917688 ]]
Iteration 300 of 1000: loss=0.022 " + "l1=0.0219" + "l2=0.000142 f=-0.601 shape=(1, 9000, 1)
logits [[ 4.722353  -2.748438   2.5339513 -6.913833 ]]
Iteration 400 of 1000: loss=0.022 " + "l1=0.0218" + "l2=0.000173 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.717984  -2.7485275  2.533835  -6.909465 ]]
Iteration 500 of 1000: loss=0.022 " + "l1=0.0218" + "l2=0.000246 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.713492  -2.7486649  2.5337956 -6.90494  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.222 " + "l1=0.222" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.7589545 -2.7502308  2.5348613 -6.950413 ]]
Iteration 100 of 1000: loss=0.208 " + "l1=0.198" + "l2=0.00949 f=-0.6 shape=(1, 9000, 1)
logits [[ 4.509072  -2.7333632  2.5273442 -6.7047396]]
Iteration 200 of 1000: loss=0.203 " + "l1=0.19" + "l2=0.0129 f=-0.599 shape=(1, 9000, 1)
logits [[ 4.4214053 -2.7256706  2.520702  -6.612551 ]]
Iteration 300 of 1000: loss=0.198 " + "l1=0.183" + "l2=0.0152 f=-0.596 shape=(1, 9000, 1)
logits [[ 4.348062  -2.7187333  2.517371  -6.529553 ]]
Iteration 400 of 1000: loss=0.193 " + "l1=0.176" + "l2=0.0169 f=-0.594 shape=(1, 9000, 1)
logits [[ 4.2775655 -2.7144547  2.512763  -6.4524865]]
Iteration 500 of 1000: loss=0.189 " + "l1=0.17" + "l2=0.0189 f=-0.591 shape=(1, 9000, 1)
logits [[ 4.2064934 -2.7099805  2.5101776 -6.372526 ]]
Iteration 600 of 1000: loss=0.183 " + "l1=0.162" + "l2=0.0212 f=-0.588 shape=(1, 9000, 1)
logits [[ 4.1285777 -2.7042272  2.5080326 -6.284409 ]]
Iteration 700 of 1000: loss=0.179 " + "l1=0.155" + "l2=0.0234 f=-0.583 shape=(1, 9000, 1)
logits [[ 4.0607057 -2.6979074  2.5088596 -6.202252 ]]
Iteration 800 of 1000: loss=0.174 " + "l1=0.149" + "l2=0.0251 f=-0.578 shape=(1, 9000, 1)
logits [[ 4.002916  -2.69026    2.5100029 -6.1329145]]
Iteration 900 of 1000: loss=0.171 " + "l1=0.144" + "l2=0.0265 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.9482672 -2.6867473  2.5074024 -6.0708795]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.22 " + "l1=2.22" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.7589545 -2.7502308  2.5348613 -6.950413 ]]
Iteration 100 of 1000: loss=0.895 " + "l1=0.216" + "l2=0.679 f=-0.503 shape=(1, 9000, 1)
logits [[ 2.7252135 -2.621821   2.5090969 -4.623291 ]]
Iteration 200 of 1000: loss=0.591 " + "l1=0.0125" + "l2=0.578 f=-0.477 shape=(1, 9000, 1)
logits [[ 2.5160732 -2.6341624  2.5035424 -4.2940207]]
Iteration 300 of 1000: loss=0.478 " + "l1=0.000164" + "l2=0.478 f=-0.468 shape=(1, 9000, 1)
logits [[ 2.4728153 -2.6103423  2.4726512 -4.2078276]]
Iteration 400 of 1000: loss=0.424 " + "l1=0.0093" + "l2=0.414 f=-0.464 shape=(1, 9000, 1)
logits [[ 2.4752314 -2.5997925  2.465929  -4.1983304]]
Iteration 500 of 1000: loss=0.382 " + "l1=0" + "l2=0.382 f=-0.464 shape=(1, 9000, 1)
logits [[ 2.4608119 -2.6070254  2.4677074 -4.1777925]]
Iteration 600 of 1000: loss=0.352 " + "l1=0" + "l2=0.352 f=-0.465 shape=(1, 9000, 1)
logits [[ 2.4537604 -2.6049545  2.4613738 -4.170135 ]]
Iteration 700 of 1000: loss=0.326 " + "l1=0.00447" + "l2=0.321 f=-0.469 shape=(1, 9000, 1)
logits [[ 2.461188  -2.6061335  2.4567144 -4.1869206]]
Iteration 800 of 1000: loss=0.297 " + "l1=0.00513" + "l2=0.292 f=-0.473 shape=(1, 9000, 1)
logits [[ 2.455494  -2.5961053  2.450364  -4.2021384]]
Iteration 900 of 1000: loss=0.279 " + "l1=0" + "l2=0.279 f=-0.475 shape=(1, 9000, 1)
logits [[ 2.4273646 -2.5897493  2.439897  -4.178912 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.22 " + "l1=1.22" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.7589545 -2.7502308  2.5348613 -6.950413 ]]
Iteration 100 of 1000: loss=0.767 " + "l1=0.517" + "l2=0.25 f=-0.543 shape=(1, 9000, 1)
logits [[ 3.4313061 -2.6068535  2.4916193 -5.488799 ]]
Iteration 200 of 1000: loss=0.624 " + "l1=0.303" + "l2=0.321 f=-0.519 shape=(1, 9000, 1)
logits [[ 3.0356023 -2.6052403  2.48432   -4.992057 ]]
Iteration 300 of 1000: loss=0.533 " + "l1=0.185" + "l2=0.347 f=-0.499 shape=(1, 9000, 1)
logits [[ 2.7922666 -2.564743   2.4552162 -4.678818 ]]
Iteration 400 of 1000: loss=0.458 " + "l1=0.0868" + "l2=0.371 f=-0.482 shape=(1, 9000, 1)
logits [[ 2.6047552 -2.5511773  2.4469998 -4.426905 ]]
Iteration 500 of 1000: loss=0.389 " + "l1=0.0157" + "l2=0.373 f=-0.47 shape=(1, 9000, 1)
logits [[ 2.4692447 -2.545382   2.4407244 -4.244826 ]]
Iteration 600 of 1000: loss=0.336 " + "l1=0" + "l2=0.336 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.4261703 -2.5503507  2.4274974 -4.157278 ]]
Iteration 700 of 1000: loss=0.302 " + "l1=0" + "l2=0.302 f=-0.464 shape=(1, 9000, 1)
logits [[ 2.4148402 -2.5425048  2.4182858 -4.1446214]]
Iteration 800 of 1000: loss=0.27 " + "l1=0.00939" + "l2=0.261 f=-0.474 shape=(1, 9000, 1)
logits [[ 2.44235   -2.555566   2.4252794 -4.2071967]]
Iteration 900 of 1000: loss=0.242 " + "l1=0.00438" + "l2=0.238 f=-0.475 shape=(1, 9000, 1)
logits [[ 2.438969  -2.5773077  2.431007  -4.1927967]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.723 " + "l1=0.723" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.7589545 -2.7502308  2.5348613 -6.950413 ]]
Iteration 100 of 1000: loss=0.555 " + "l1=0.45" + "l2=0.105 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.8783731 -2.6432247  2.4929562 -6.0274153]]
Iteration 200 of 1000: loss=0.499 " + "l1=0.37" + "l2=0.129 f=-0.551 shape=(1, 9000, 1)
logits [[ 3.6243641 -2.6150658  2.4862902 -5.700127 ]]
Iteration 300 of 1000: loss=0.456 " + "l1=0.315" + "l2=0.142 f=-0.543 shape=(1, 9000, 1)
logits [[ 3.427762  -2.5985878  2.4600124 -5.4628015]]
Iteration 400 of 1000: loss=0.418 " + "l1=0.265" + "l2=0.152 f=-0.544 shape=(1, 9000, 1)
logits [[ 3.242476  -2.5822787  2.42568   -5.2602553]]
Iteration 500 of 1000: loss=0.368 " + "l1=0.198" + "l2=0.17 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.0253487 -2.593089   2.41568   -5.045581 ]]
Iteration 600 of 1000: loss=0.324 " + "l1=0.145" + "l2=0.179 f=-0.55 shape=(1, 9000, 1)
logits [[ 2.8782663 -2.6271596  2.4314268 -4.8807755]]
Iteration 700 of 1000: loss=0.294 " + "l1=0.098" + "l2=0.196 f=-0.544 shape=(1, 9000, 1)
logits [[ 2.7372215 -2.649119   2.4357593 -4.7005825]]
Iteration 800 of 1000: loss=0.268 " + "l1=0.0668" + "l2=0.201 f=-0.532 shape=(1, 9000, 1)
logits [[ 2.6440864 -2.6572664  2.4386764 -4.555377 ]]
Iteration 900 of 1000: loss=0.242 " + "l1=0.0409" + "l2=0.201 f=-0.525 shape=(1, 9000, 1)
logits [[ 2.5653014 -2.669149   2.4394095 -4.4352837]]
--- 276.9479730129242 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.117 " + "l1=0.117" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.7589545 -2.7502308  2.5348613 -6.950413 ]]
Iteration 100 of 1000: loss=0.116 " + "l1=0.115" + "l2=0.000627 f=-0.598 shape=(1, 9000, 1)
logits [[ 4.6878495 -2.7359052  2.516149  -6.8598638]]
Iteration 200 of 1000: loss=0.116 " + "l1=0.115" + "l2=0.000695 f=-0.597 shape=(1, 9000, 1)
logits [[ 4.6736803 -2.7328956  2.5116043 -6.841071 ]]
Iteration 300 of 1000: loss=0.116 " + "l1=0.115" + "l2=0.000807 f=-0.596 shape=(1, 9000, 1)
logits [[ 4.6582074 -2.7300115  2.5066934 -6.819758 ]]
Iteration 400 of 1000: loss=0.115 " + "l1=0.114" + "l2=0.000947 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.642931  -2.727678   2.5020552 -6.7984147]]
Iteration 500 of 1000: loss=0.115 " + "l1=0.114" + "l2=0.00112 f=-0.594 shape=(1, 9000, 1)
logits [[ 4.6282873 -2.7256372  2.4977155 -6.777519 ]]
Iteration 600 of 1000: loss=0.115 " + "l1=0.114" + "l2=0.00133 f=-0.593 shape=(1, 9000, 1)
logits [[ 4.613426  -2.7235284  2.4935443 -6.756392 ]]
Iteration 700 of 1000: loss=0.115 " + "l1=0.113" + "l2=0.0015 f=-0.592 shape=(1, 9000, 1)
logits [[ 4.5989947 -2.7213514  2.4895177 -6.7356887]]
Iteration 800 of 1000: loss=0.115 " + "l1=0.113" + "l2=0.00171 f=-0.591 shape=(1, 9000, 1)
logits [[ 4.584534  -2.7191846  2.4856    -6.715181 ]]
Iteration 900 of 1000: loss=0.115 " + "l1=0.113" + "l2=0.00204 f=-0.59 shape=(1, 9000, 1)
logits [[ 4.570287  -2.7174146  2.4821365 -6.695251 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.17 " + "l1=1.17" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.7589545 -2.7502308  2.5348613 -6.950413 ]]
Iteration 100 of 1000: loss=1.07 " + "l1=1" + "l2=0.0645 f=-0.564 shape=(1, 9000, 1)
logits [[ 4.0046015 -2.604561   2.3608704 -6.0164356]]
Iteration 200 of 1000: loss=1.02 " + "l1=0.93" + "l2=0.0886 f=-0.531 shape=(1, 9000, 1)
logits [[ 3.7109656 -2.5373366  2.2888362 -5.5857134]]
Iteration 300 of 1000: loss=0.975 " + "l1=0.869" + "l2=0.105 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.47124   -2.4960222  2.2297862 -5.223527 ]]
Iteration 400 of 1000: loss=0.936 " + "l1=0.818" + "l2=0.118 f=-0.485 shape=(1, 9000, 1)
logits [[ 3.2658834 -2.4709806  2.1757627 -4.91064  ]]
Iteration 500 of 1000: loss=0.898 " + "l1=0.766" + "l2=0.131 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.0670545 -2.4467533  2.1271226 -4.5976486]]
Iteration 600 of 1000: loss=0.859 " + "l1=0.71" + "l2=0.148 f=-0.44 shape=(1, 9000, 1)
logits [[ 2.8458598 -2.4230442  2.0761788 -4.2587724]]
Iteration 700 of 1000: loss=0.82 " + "l1=0.655" + "l2=0.165 f=-0.416 shape=(1, 9000, 1)
logits [[ 2.6360514 -2.3973022  2.0163152 -3.9182768]]
Iteration 800 of 1000: loss=0.786 " + "l1=0.603" + "l2=0.182 f=-0.391 shape=(1, 9000, 1)
logits [[ 2.4403977 -2.3597806  1.9498986 -3.5938058]]
Iteration 900 of 1000: loss=0.755 " + "l1=0.554" + "l2=0.201 f=-0.365 shape=(1, 9000, 1)
logits [[ 2.2591648 -2.3163917  1.8842872 -3.2850978]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.7 " + "l1=11.7" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.7589545 -2.7502308  2.5348613 -6.950413 ]]
Iteration 100 of 1000: loss=5.2 " + "l1=3.04" + "l2=2.16 f=-0.283 shape=(1, 9000, 1)
logits [[ 1.2176156 -2.1913564  1.4385613 -1.59802  ]]
Iteration 200 of 1000: loss=3.34 " + "l1=0.779" + "l2=2.56 f=-0.143 shape=(1, 9000, 1)
logits [[ 0.28502637 -1.7402376   0.8308813   0.05205496]]
Iteration 300 of 1000: loss=2.27 " + "l1=0.0351" + "l2=2.23 f=-0.103 shape=(1, 9000, 1)
logits [[ 0.01703324 -1.5918692   0.59956396  0.5644646 ]]
Iteration 400 of 1000: loss=1.93 " + "l1=0.00103" + "l2=1.93 f=-0.0935 shape=(1, 9000, 1)
logits [[ 0.04918943 -1.612901    0.59541243  0.59438115]]
Iteration 500 of 1000: loss=1.77 " + "l1=0.0172" + "l2=1.75 f=-0.0854 shape=(1, 9000, 1)
logits [[ 0.08824294 -1.6561877   0.6218867   0.6046444 ]]
Iteration 600 of 1000: loss=1.64 " + "l1=0.00719" + "l2=1.63 f=-0.0741 shape=(1, 9000, 1)
logits [[ 0.10130799 -1.6806443   0.64504147  0.6378473 ]]
Iteration 700 of 1000: loss=1.55 " + "l1=0" + "l2=1.55 f=-0.067 shape=(1, 9000, 1)
logits [[ 0.09395675 -1.6990799   0.6634456   0.67384565]]
Iteration 800 of 1000: loss=1.47 " + "l1=0" + "l2=1.47 f=-0.0619 shape=(1, 9000, 1)
logits [[ 0.10328961 -1.7090842   0.6747008   0.68331826]]
Iteration 900 of 1000: loss=1.4 " + "l1=0" + "l2=1.4 f=-0.0578 shape=(1, 9000, 1)
logits [[ 0.10911691 -1.7113887   0.68302333  0.6878984 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.44 " + "l1=6.44" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.7589545 -2.7502308  2.5348613 -6.950413 ]]
Iteration 100 of 1000: loss=3.72 " + "l1=2.51" + "l2=1.21 f=-0.377 shape=(1, 9000, 1)
logits [[ 1.7904102 -2.3153214  1.7911428 -2.7753508]]
Iteration 200 of 1000: loss=2.98 " + "l1=1.81" + "l2=1.17 f=-0.279 shape=(1, 9000, 1)
logits [[ 1.41624   -2.2080054  1.4851482 -1.8107513]]
Iteration 300 of 1000: loss=2.33 " + "l1=1" + "l2=1.33 f=-0.174 shape=(1, 9000, 1)
logits [[ 0.84805846 -1.9684907   1.1227747  -0.70020455]]
Iteration 400 of 1000: loss=1.87 " + "l1=0.467" + "l2=1.4 f=-0.104 shape=(1, 9000, 1)
logits [[ 0.48181644 -1.7567686   0.8546814   0.00541069]]
Iteration 500 of 1000: loss=1.62 " + "l1=0.176" + "l2=1.44 f=-0.0627 shape=(1, 9000, 1)
logits [[ 0.30409905 -1.7029806   0.7341946   0.41402262]]
Iteration 600 of 1000: loss=1.44 " + "l1=0.0183" + "l2=1.43 f=-0.0395 shape=(1, 9000, 1)
logits [[ 0.210632  -1.6904299  0.6775051  0.6442247]]
Iteration 700 of 1000: loss=1.3 " + "l1=0.0108" + "l2=1.29 f=-0.0308 shape=(1, 9000, 1)
logits [[ 0.23037103 -1.7087687   0.6873957   0.66768676]]
Iteration 800 of 1000: loss=1.19 " + "l1=0" + "l2=1.19 f=-0.026 shape=(1, 9000, 1)
logits [[ 0.23031706 -1.712363    0.68586594  0.6919997 ]]
Iteration 900 of 1000: loss=1.09 " + "l1=0.015" + "l2=1.08 f=-0.0272 shape=(1, 9000, 1)
logits [[ 0.2468991  -1.7089463   0.69020075  0.66298133]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.81 " + "l1=3.81" + "l2=0 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.7589545 -2.7502308  2.5348613 -6.950413 ]]
Iteration 100 of 1000: loss=2.75 " + "l1=2.19" + "l2=0.553 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.6438122 -2.3668938  2.0369134 -4.1059155]]
Iteration 200 of 1000: loss=2.27 " + "l1=1.51" + "l2=0.761 f=-0.369 shape=(1, 9000, 1)
logits [[ 1.83391   -2.321238   1.8344327 -2.822246 ]]
Iteration 300 of 1000: loss=1.97 " + "l1=1.28" + "l2=0.683 f=-0.307 shape=(1, 9000, 1)
logits [[ 1.6441507 -2.2199235  1.6460783 -2.2994506]]
Iteration 400 of 1000: loss=1.73 " + "l1=1.04" + "l2=0.689 f=-0.239 shape=(1, 9000, 1)
logits [[ 1.4355552 -2.0825882  1.4413553 -1.7523187]]
Iteration 500 of 1000: loss=1.52 " + "l1=0.772" + "l2=0.751 f=-0.176 shape=(1, 9000, 1)
logits [[ 1.1374316 -1.951929   1.2430061 -1.1332223]]
Iteration 600 of 1000: loss=1.35 " + "l1=0.552" + "l2=0.794 f=-0.126 shape=(1, 9000, 1)
logits [[ 0.89123136 -1.8591982   1.0822797  -0.6174624 ]]
Iteration 700 of 1000: loss=1.23 " + "l1=0.429" + "l2=0.804 f=-0.0948 shape=(1, 9000, 1)
logits [[ 0.76549184 -1.823762    0.99954385 -0.3202896 ]]
Iteration 800 of 1000: loss=1.13 " + "l1=0.347" + "l2=0.78 f=-0.0757 shape=(1, 9000, 1)
logits [[ 0.69345134 -1.8179471   0.9455451  -0.12365026]]
Iteration 900 of 1000: loss=1.05 " + "l1=0.287" + "l2=0.76 f=-0.0632 shape=(1, 9000, 1)
logits [[ 0.6412657  -1.8008283   0.894589    0.01218752]]
--- 299.6123032569885 seconds ---
Adv result:3
Loading record A06984
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.061 " + "l1=0.061" + "l2=0 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.253377  -2.8445592  2.7489429 -5.2673883]]
Iteration 100 of 1000: loss=0.0602 " + "l1=0.0597" + "l2=0.000495 f=-0.529 shape=(1, 9000, 1)
logits [[ 3.1988122 -2.7755575  2.6879635 -5.2280955]]
Iteration 200 of 1000: loss=0.06 " + "l1=0.0595" + "l2=0.000548 f=-0.53 shape=(1, 9000, 1)
logits [[ 3.1867828 -2.7595658  2.6732857 -5.220781 ]]
Iteration 300 of 1000: loss=0.0599 " + "l1=0.0592" + "l2=0.000637 f=-0.531 shape=(1, 9000, 1)
logits [[ 3.1753569 -2.7468832  2.661376  -5.2131286]]
Iteration 400 of 1000: loss=0.0598 " + "l1=0.059" + "l2=0.000735 f=-0.531 shape=(1, 9000, 1)
logits [[ 3.1662953 -2.7378032  2.652523  -5.205845 ]]
Iteration 500 of 1000: loss=0.0597 " + "l1=0.0589" + "l2=0.000821 f=-0.532 shape=(1, 9000, 1)
logits [[ 3.1576939 -2.7299664  2.6448207 -5.198973 ]]
Iteration 600 of 1000: loss=0.0597 " + "l1=0.0587" + "l2=0.000941 f=-0.532 shape=(1, 9000, 1)
logits [[ 3.1489012 -2.7222342  2.6373339 -5.1923995]]
Iteration 700 of 1000: loss=0.0596 " + "l1=0.0586" + "l2=0.00108 f=-0.532 shape=(1, 9000, 1)
logits [[ 3.140829  -2.715675   2.6309996 -5.186097 ]]
Iteration 800 of 1000: loss=0.0596 " + "l1=0.0584" + "l2=0.0012 f=-0.533 shape=(1, 9000, 1)
logits [[ 3.1340728 -2.7101932  2.6257389 -5.180701 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.61 " + "l1=0.61" + "l2=0 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.253377  -2.8445592  2.7489429 -5.2673883]]
Iteration 100 of 1000: loss=0.561 " + "l1=0.538" + "l2=0.0227 f=-0.537 shape=(1, 9000, 1)
logits [[ 2.9175787 -2.4635506  2.3850446 -4.988937 ]]
Iteration 200 of 1000: loss=0.543 " + "l1=0.513" + "l2=0.0304 f=-0.54 shape=(1, 9000, 1)
logits [[ 2.801653  -2.325059   2.244828  -4.8803396]]
Iteration 300 of 1000: loss=0.53 " + "l1=0.494" + "l2=0.036 f=-0.544 shape=(1, 9000, 1)
logits [[ 2.6920402 -2.252629   2.1635895 -4.780127 ]]
Iteration 400 of 1000: loss=0.519 " + "l1=0.475" + "l2=0.0442 f=-0.548 shape=(1, 9000, 1)
logits [[ 2.5690107 -2.1780128  2.0862641 -4.667648 ]]
Iteration 500 of 1000: loss=0.506 " + "l1=0.454" + "l2=0.0517 f=-0.552 shape=(1, 9000, 1)
logits [[ 2.4334283 -2.105433   2.0099912 -4.5470185]]
Iteration 600 of 1000: loss=0.493 " + "l1=0.435" + "l2=0.0577 f=-0.555 shape=(1, 9000, 1)
logits [[ 2.3088393 -2.043989   1.9449929 -4.429744 ]]
Iteration 700 of 1000: loss=0.481 " + "l1=0.418" + "l2=0.0624 f=-0.553 shape=(1, 9000, 1)
logits [[ 2.1858494 -1.9955484  1.8956777 -4.2988777]]
Iteration 800 of 1000: loss=0.469 " + "l1=0.402" + "l2=0.0678 f=-0.549 shape=(1, 9000, 1)
logits [[ 2.073292  -1.9418207  1.8436192 -4.1691217]]
Iteration 900 of 1000: loss=0.459 " + "l1=0.387" + "l2=0.0722 f=-0.542 shape=(1, 9000, 1)
logits [[ 1.9825532 -1.8870492  1.7978944 -4.0617833]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.1 " + "l1=6.1" + "l2=0 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.253377  -2.8445592  2.7489429 -5.2673883]]
Iteration 100 of 1000: loss=2.83 " + "l1=1.6" + "l2=1.22 f=-0.518 shape=(1, 9000, 1)
logits [[ 0.8486218  -0.73822916  0.8639698  -3.0465875 ]]
Iteration 200 of 1000: loss=2.16 " + "l1=0.918" + "l2=1.24 f=-0.486 shape=(1, 9000, 1)
logits [[ 0.5860397  -0.33197466  0.584723   -2.7827873 ]]
Iteration 300 of 1000: loss=1.75 " + "l1=0.381" + "l2=1.37 f=-0.443 shape=(1, 9000, 1)
logits [[ 0.34738398 -0.03015268  0.35128897 -2.4394755 ]]
Iteration 400 of 1000: loss=1.4 " + "l1=0.00822" + "l2=1.4 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.1836617   0.22156289  0.22978096 -2.25217   ]]
Iteration 500 of 1000: loss=1.15 " + "l1=0" + "l2=1.15 f=-0.394 shape=(1, 9000, 1)
logits [[ 0.20908415  0.26114205  0.24732254 -2.2955053 ]]
Iteration 600 of 1000: loss=1.03 " + "l1=0.0118" + "l2=1.02 f=-0.38 shape=(1, 9000, 1)
logits [[ 0.22136718  0.23593771  0.2477733  -2.226764  ]]
Iteration 700 of 1000: loss=0.953 " + "l1=0.00507" + "l2=0.948 f=-0.373 shape=(1, 9000, 1)
logits [[ 0.18473783  0.23169532  0.23676153 -2.144123  ]]
Iteration 800 of 1000: loss=0.894 " + "l1=0" + "l2=0.894 f=-0.357 shape=(1, 9000, 1)
logits [[ 0.21972075  0.23150373  0.22292997 -2.103997  ]]
Iteration 900 of 1000: loss=0.857 " + "l1=0.0195" + "l2=0.838 f=-0.356 shape=(1, 9000, 1)
logits [[ 0.20083517  0.20805557  0.22755392 -2.060888  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.35 " + "l1=3.35" + "l2=0 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.253377  -2.8445592  2.7489429 -5.2673883]]
Iteration 100 of 1000: loss=2.1 " + "l1=1.5" + "l2=0.606 f=-0.555 shape=(1, 9000, 1)
logits [[ 1.3580685 -1.3615894  1.3512689 -3.5689642]]
Iteration 200 of 1000: loss=1.71 " + "l1=1.05" + "l2=0.663 f=-0.527 shape=(1, 9000, 1)
logits [[ 0.98596084 -0.9158926   0.9936921  -3.1710913 ]]
Iteration 300 of 1000: loss=1.48 " + "l1=0.809" + "l2=0.675 f=-0.498 shape=(1, 9000, 1)
logits [[ 0.7931023  -0.6780945   0.79023343 -2.895328  ]]
Iteration 400 of 1000: loss=1.33 " + "l1=0.666" + "l2=0.659 f=-0.47 shape=(1, 9000, 1)
logits [[ 0.67846304 -0.52960604  0.6819528  -2.7107763 ]]
Iteration 500 of 1000: loss=1.2 " + "l1=0.546" + "l2=0.656 f=-0.444 shape=(1, 9000, 1)
logits [[ 0.57641447 -0.40166083  0.5903979  -2.5416005 ]]
Iteration 600 of 1000: loss=1.07 " + "l1=0.412" + "l2=0.662 f=-0.421 shape=(1, 9000, 1)
logits [[ 0.47725463 -0.26705512  0.48230448 -2.3763368 ]]
Iteration 700 of 1000: loss=0.972 " + "l1=0.314" + "l2=0.658 f=-0.396 shape=(1, 9000, 1)
logits [[ 0.41267222 -0.15867268  0.40923303 -2.246947  ]]
Iteration 800 of 1000: loss=0.871 " + "l1=0.176" + "l2=0.695 f=-0.374 shape=(1, 9000, 1)
logits [[ 0.3012522   0.00597415  0.3266497  -2.1280365 ]]
Iteration 900 of 1000: loss=0.796 " + "l1=0.0976" + "l2=0.699 f=-0.35 shape=(1, 9000, 1)
logits [[ 0.23988813  0.08915544  0.26658493 -1.9964836 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.98 " + "l1=1.98" + "l2=0 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.253377  -2.8445592  2.7489429 -5.2673883]]
Iteration 100 of 1000: loss=1.51 " + "l1=1.24" + "l2=0.271 f=-0.565 shape=(1, 9000, 1)
logits [[ 2.0081692 -1.7990037  1.7193165 -4.187898 ]]
Iteration 200 of 1000: loss=1.32 " + "l1=0.968" + "l2=0.351 f=-0.56 shape=(1, 9000, 1)
logits [[ 1.4683946 -1.5096382  1.4646993 -3.663649 ]]
Iteration 300 of 1000: loss=1.18 " + "l1=0.803" + "l2=0.378 f=-0.548 shape=(1, 9000, 1)
logits [[ 1.2309947 -1.2395647  1.2316538 -3.4160373]]
Iteration 400 of 1000: loss=1.08 " + "l1=0.697" + "l2=0.382 f=-0.525 shape=(1, 9000, 1)
logits [[ 1.0901906 -1.0549101  1.0852587 -3.2198532]]
Iteration 500 of 1000: loss=1 " + "l1=0.614" + "l2=0.388 f=-0.5 shape=(1, 9000, 1)
logits [[ 0.98016393 -0.90773505  0.97622734 -3.0498502 ]]
Iteration 600 of 1000: loss=0.924 " + "l1=0.532" + "l2=0.391 f=-0.473 shape=(1, 9000, 1)
logits [[ 0.8650236 -0.7732588  0.8645492 -2.8482006]]
Iteration 700 of 1000: loss=0.859 " + "l1=0.477" + "l2=0.383 f=-0.446 shape=(1, 9000, 1)
logits [[ 0.7865011 -0.6777764  0.7890088 -2.6797519]]
Iteration 800 of 1000: loss=0.805 " + "l1=0.42" + "l2=0.385 f=-0.423 shape=(1, 9000, 1)
logits [[ 0.7030163 -0.5797915  0.7120452 -2.5264726]]
Iteration 900 of 1000: loss=0.759 " + "l1=0.371" + "l2=0.388 f=-0.402 shape=(1, 9000, 1)
logits [[ 0.63258773 -0.50612074  0.63589364 -2.3703277 ]]
--- 293.66708755493164 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00504 " + "l1=0.00504" + "l2=0 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.253377  -2.8445592  2.7489429 -5.2673883]]
Iteration 100 of 1000: loss=0.00482 " + "l1=0.00462" + "l2=0.000204 f=-0.529 shape=(1, 9000, 1)
logits [[ 3.2352607 -2.871928   2.773645  -5.2531047]]
Iteration 200 of 1000: loss=0.00475 " + "l1=0.00457" + "l2=0.00018 f=-0.529 shape=(1, 9000, 1)
logits [[ 3.2346177 -2.8758373  2.7779653 -5.2532916]]
Iteration 300 of 1000: loss=0.00469 " + "l1=0.00449" + "l2=0.000205 f=-0.529 shape=(1, 9000, 1)
logits [[ 3.2315166 -2.8803618  2.7825537 -5.2513814]]
Iteration 400 of 1000: loss=0.00467 " + "l1=0.00441" + "l2=0.000261 f=-0.53 shape=(1, 9000, 1)
logits [[ 3.227775  -2.8845966  2.7867544 -5.248818 ]]
Iteration 500 of 1000: loss=0.0047 " + "l1=0.00433" + "l2=0.000362 f=-0.53 shape=(1, 9000, 1)
logits [[ 3.2236161 -2.8881998  2.790186  -5.245857 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0504 " + "l1=0.0504" + "l2=0 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.253377  -2.8445592  2.7489429 -5.2673883]]
Iteration 100 of 1000: loss=0.0315 " + "l1=0.0215" + "l2=0.0101 f=-0.546 shape=(1, 9000, 1)
logits [[ 3.125533  -3.0285401  2.9109094 -5.1901345]]
Iteration 200 of 1000: loss=0.0246 " + "l1=0.0118" + "l2=0.0128 f=-0.551 shape=(1, 9000, 1)
logits [[ 3.0738363 -3.0809433  2.955385  -5.1531157]]
Iteration 300 of 1000: loss=0.0185 " + "l1=0.00288" + "l2=0.0156 f=-0.557 shape=(1, 9000, 1)
logits [[ 3.0168204 -3.1223576  2.9880104 -5.110445 ]]
Iteration 400 of 1000: loss=0.0143 " + "l1=0" + "l2=0.0143 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.9839518 -3.1227212  2.9847841 -5.0777974]]
Iteration 500 of 1000: loss=0.0125 " + "l1=0" + "l2=0.0125 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.9693935 -3.1100135  2.9710696 -5.0608926]]
Iteration 600 of 1000: loss=0.0112 " + "l1=6.57e-05" + "l2=0.0111 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.958667  -3.0987654  2.9580097 -5.0493793]]
Iteration 700 of 1000: loss=0.0104 " + "l1=6.88e-05" + "l2=0.0104 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.9491763 -3.0912004  2.9484887 -5.0400033]]
Iteration 800 of 1000: loss=0.00981 " + "l1=0.000119" + "l2=0.0097 f=-0.559 shape=(1, 9000, 1)
logits [[ 2.9399273 -3.083187   2.938734  -5.0312166]]
Iteration 900 of 1000: loss=0.00941 " + "l1=0" + "l2=0.00941 f=-0.56 shape=(1, 9000, 1)
logits [[ 2.9300642 -3.08046    2.9343686 -5.023431 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0277 " + "l1=0.0277" + "l2=0 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.253377  -2.8445592  2.7489429 -5.2673883]]
Iteration 100 of 1000: loss=0.0216 " + "l1=0.0184" + "l2=0.00327 f=-0.535 shape=(1, 9000, 1)
logits [[ 3.1815014 -2.9547148  2.8478043 -5.216214 ]]
Iteration 200 of 1000: loss=0.0196 " + "l1=0.0156" + "l2=0.00405 f=-0.538 shape=(1, 9000, 1)
logits [[ 3.1536505 -2.9790719  2.8704777 -5.1981792]]
Iteration 300 of 1000: loss=0.0178 " + "l1=0.013" + "l2=0.00482 f=-0.541 shape=(1, 9000, 1)
logits [[ 3.1267877 -3.0015786  2.890239  -5.179588 ]]
Iteration 400 of 1000: loss=0.0162 " + "l1=0.0105" + "l2=0.00568 f=-0.544 shape=(1, 9000, 1)
logits [[ 3.1000457 -3.0233557  2.9082565 -5.1611423]]
Iteration 500 of 1000: loss=0.0148 " + "l1=0.00833" + "l2=0.0065 f=-0.547 shape=(1, 9000, 1)
logits [[ 3.0728006 -3.0408201  2.921435  -5.141237 ]]
Iteration 600 of 1000: loss=0.0136 " + "l1=0.0064" + "l2=0.0072 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.0451205 -3.0518887  2.928685  -5.1196837]]
Iteration 700 of 1000: loss=0.0125 " + "l1=0.0046" + "l2=0.00793 f=-0.552 shape=(1, 9000, 1)
logits [[ 3.0166287 -3.061355   2.9329095 -5.0969872]]
Iteration 800 of 1000: loss=0.0117 " + "l1=0.00305" + "l2=0.00862 f=-0.555 shape=(1, 9000, 1)
logits [[ 2.990593  -3.069002   2.9352136 -5.075398 ]]
Iteration 900 of 1000: loss=0.0108 " + "l1=0.00153" + "l2=0.00924 f=-0.557 shape=(1, 9000, 1)
logits [[ 2.9678316 -3.078955   2.940025  -5.0561123]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0391 " + "l1=0.0391" + "l2=0 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.253377  -2.8445592  2.7489429 -5.2673883]]
Iteration 100 of 1000: loss=0.0273 " + "l1=0.021" + "l2=0.0063 f=-0.541 shape=(1, 9000, 1)
logits [[ 3.150631  -2.9909453  2.8791573 -5.2018695]]
Iteration 200 of 1000: loss=0.0234 " + "l1=0.0155" + "l2=0.00783 f=-0.545 shape=(1, 9000, 1)
logits [[ 3.112418  -3.0277634  2.9120731 -5.1756144]]
Iteration 300 of 1000: loss=0.0198 " + "l1=0.0104" + "l2=0.00933 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.0727324 -3.05921    2.9381855 -5.147078 ]]
Iteration 400 of 1000: loss=0.0166 " + "l1=0.00557" + "l2=0.011 f=-0.553 shape=(1, 9000, 1)
logits [[ 3.031512  -3.0875216  2.9595973 -5.116911 ]]
Iteration 500 of 1000: loss=0.0139 " + "l1=0.00115" + "l2=0.0127 f=-0.557 shape=(1, 9000, 1)
logits [[ 2.986625  -3.1079276  2.9717646 -5.0795517]]
Iteration 600 of 1000: loss=0.012 " + "l1=0.000115" + "l2=0.0119 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.96601   -3.1036901  2.9645267 -5.0584683]]
Iteration 700 of 1000: loss=0.0111 " + "l1=0.000218" + "l2=0.0109 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.9550335 -3.0932302  2.9522233 -5.0469465]]
Iteration 800 of 1000: loss=0.0102 " + "l1=0.000203" + "l2=0.01 f=-0.559 shape=(1, 9000, 1)
logits [[ 2.945554  -3.0858655  2.9429371 -5.037355 ]]
Iteration 900 of 1000: loss=0.00985 " + "l1=0" + "l2=0.00985 f=-0.56 shape=(1, 9000, 1)
logits [[ 2.9345844 -3.0823061  2.9374297 -5.0280743]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0334 " + "l1=0.0334" + "l2=0 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.253377  -2.8445592  2.7489429 -5.2673883]]
Iteration 100 of 1000: loss=0.0247 " + "l1=0.02" + "l2=0.00468 f=-0.538 shape=(1, 9000, 1)
logits [[ 3.1658459 -2.9731512  2.8634787 -5.208705 ]]
Iteration 200 of 1000: loss=0.0218 " + "l1=0.0161" + "l2=0.00573 f=-0.541 shape=(1, 9000, 1)
logits [[ 3.1328597 -3.0021849  2.8901412 -5.1856933]]
Iteration 300 of 1000: loss=0.0191 " + "l1=0.0122" + "l2=0.00693 f=-0.545 shape=(1, 9000, 1)
logits [[ 3.1003466 -3.032408   2.915916  -5.1634603]]
Iteration 400 of 1000: loss=0.0168 " + "l1=0.00872" + "l2=0.00811 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.0675614 -3.0572076  2.9359014 -5.1402617]]
Iteration 500 of 1000: loss=0.0149 " + "l1=0.00552" + "l2=0.00937 f=-0.552 shape=(1, 9000, 1)
logits [[ 3.0321763 -3.076225   2.9488444 -5.1145506]]
Iteration 600 of 1000: loss=0.0131 " + "l1=0.00268" + "l2=0.0105 f=-0.555 shape=(1, 9000, 1)
logits [[ 2.9957173 -3.0892608  2.9552186 -5.0831966]]
Iteration 700 of 1000: loss=0.0116 " + "l1=0.000327" + "l2=0.0113 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.9636385 -3.0985634  2.9587076 -5.0565605]]
Iteration 800 of 1000: loss=0.0107 " + "l1=0.000193" + "l2=0.0105 f=-0.559 shape=(1, 9000, 1)
logits [[ 2.9511707 -3.0900903  2.9482594 -5.043392 ]]
Iteration 900 of 1000: loss=0.00983 " + "l1=1.87e-05" + "l2=0.00981 f=-0.559 shape=(1, 9000, 1)
logits [[ 2.941903  -3.0856156  2.9416203 -5.034604 ]]
--- 278.6925709247589 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0852 " + "l1=0.0852" + "l2=0 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.253377  -2.8445592  2.7489429 -5.2673883]]
Iteration 100 of 1000: loss=0.0843 " + "l1=0.0838" + "l2=0.000538 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.1894054 -2.8164742  2.7120857 -5.1914597]]
Iteration 200 of 1000: loss=0.0841 " + "l1=0.0835" + "l2=0.000592 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.1747284 -2.8085055  2.7022471 -5.175908 ]]
Iteration 300 of 1000: loss=0.0839 " + "l1=0.0832" + "l2=0.000742 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.1577315 -2.801332   2.6921735 -5.1582003]]
Iteration 400 of 1000: loss=0.0837 " + "l1=0.0828" + "l2=0.000884 f=-0.528 shape=(1, 9000, 1)
logits [[ 3.1407228 -2.7957108  2.6830719 -5.139955 ]]
Iteration 500 of 1000: loss=0.0835 " + "l1=0.0825" + "l2=0.001 f=-0.528 shape=(1, 9000, 1)
logits [[ 3.12544   -2.7911086  2.675299  -5.1223617]]
Iteration 600 of 1000: loss=0.0834 " + "l1=0.0822" + "l2=0.00123 f=-0.528 shape=(1, 9000, 1)
logits [[ 3.1129878 -2.7890005  2.669901  -5.1054964]]
Iteration 700 of 1000: loss=0.0833 " + "l1=0.0819" + "l2=0.00137 f=-0.528 shape=(1, 9000, 1)
logits [[ 3.100469  -2.7877107  2.665132  -5.0890164]]
Iteration 800 of 1000: loss=0.0832 " + "l1=0.0816" + "l2=0.00152 f=-0.528 shape=(1, 9000, 1)
logits [[ 3.0896227 -2.7869658  2.6611817 -5.074226 ]]
Iteration 900 of 1000: loss=0.083 " + "l1=0.0814" + "l2=0.00163 f=-0.528 shape=(1, 9000, 1)
logits [[ 3.0787082 -2.7849967  2.6564314 -5.0603714]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.852 " + "l1=0.852" + "l2=0 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.253377  -2.8445592  2.7489429 -5.2673883]]
Iteration 100 of 1000: loss=0.777 " + "l1=0.737" + "l2=0.04 f=-0.523 shape=(1, 9000, 1)
logits [[ 2.7388716 -2.6628275  2.4610386 -4.62918  ]]
Iteration 200 of 1000: loss=0.738 " + "l1=0.681" + "l2=0.0568 f=-0.521 shape=(1, 9000, 1)
logits [[ 2.5007083 -2.6129358  2.338377  -4.311834 ]]
Iteration 300 of 1000: loss=0.699 " + "l1=0.622" + "l2=0.0775 f=-0.522 shape=(1, 9000, 1)
logits [[ 2.2400856 -2.5453186  2.1946924 -3.97895  ]]
Iteration 400 of 1000: loss=0.662 " + "l1=0.571" + "l2=0.0904 f=-0.522 shape=(1, 9000, 1)
logits [[ 2.028289  -2.462855   2.0290062 -3.6824212]]
Iteration 500 of 1000: loss=0.632 " + "l1=0.537" + "l2=0.0956 f=-0.514 shape=(1, 9000, 1)
logits [[ 1.9000404 -2.388505   1.8989117 -3.4661553]]
Iteration 600 of 1000: loss=0.606 " + "l1=0.504" + "l2=0.101 f=-0.507 shape=(1, 9000, 1)
logits [[ 1.7824483 -2.3360932  1.7846131 -3.257853 ]]
Iteration 700 of 1000: loss=0.578 " + "l1=0.469" + "l2=0.11 f=-0.5 shape=(1, 9000, 1)
logits [[ 1.6567423 -2.2965024  1.6629492 -3.023279 ]]
Iteration 800 of 1000: loss=0.555 " + "l1=0.444" + "l2=0.111 f=-0.49 shape=(1, 9000, 1)
logits [[ 1.5846996 -2.2790387  1.5877765 -2.8539517]]
Iteration 900 of 1000: loss=0.535 " + "l1=0.418" + "l2=0.116 f=-0.481 shape=(1, 9000, 1)
logits [[ 1.4982516 -2.24996    1.5039986 -2.6782346]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.52 " + "l1=8.52" + "l2=0 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.253377  -2.8445592  2.7489429 -5.2673883]]
Iteration 100 of 1000: loss=3.56 " + "l1=1.55" + "l2=2.01 f=-0.375 shape=(1, 9000, 1)
logits [[ 0.36834273 -1.403178    0.543253   -1.010218  ]]
Iteration 200 of 1000: loss=2.14 " + "l1=0.0173" + "l2=2.12 f=-0.308 shape=(1, 9000, 1)
logits [[-0.3156812  -1.1386726   0.12073036  0.10344505]]
Iteration 300 of 1000: loss=1.59 " + "l1=0" + "l2=1.59 f=-0.283 shape=(1, 9000, 1)
logits [[-0.3099433  -1.0909644   0.12311554  0.14577919]]
Iteration 400 of 1000: loss=1.32 " + "l1=0" + "l2=1.32 f=-0.279 shape=(1, 9000, 1)
logits [[-0.3557447  -1.1034104   0.16753389  0.17657942]]
Iteration 500 of 1000: loss=1.12 " + "l1=0" + "l2=1.12 f=-0.281 shape=(1, 9000, 1)
logits [[-0.39108267 -1.1441892   0.20338276  0.20896032]]
Iteration 600 of 1000: loss=0.979 " + "l1=0.0172" + "l2=0.962 f=-0.284 shape=(1, 9000, 1)
logits [[-0.41169214 -1.2170987   0.25597906  0.23878255]]
Iteration 700 of 1000: loss=0.879 " + "l1=0" + "l2=0.879 f=-0.282 shape=(1, 9000, 1)
logits [[-0.43253097 -1.2384032   0.2588396   0.28533137]]
Iteration 800 of 1000: loss=0.812 " + "l1=0" + "l2=0.812 f=-0.279 shape=(1, 9000, 1)
logits [[-0.43970242 -1.2455109   0.26576456  0.30355048]]
Iteration 900 of 1000: loss=0.749 " + "l1=0" + "l2=0.749 f=-0.283 shape=(1, 9000, 1)
logits [[-0.4359447 -1.267489   0.2830227  0.2864252]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.69 " + "l1=4.69" + "l2=0 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.253377  -2.8445592  2.7489429 -5.2673883]]
Iteration 100 of 1000: loss=2.74 " + "l1=1.82" + "l2=0.927 f=-0.468 shape=(1, 9000, 1)
logits [[ 1.0577064 -1.7595869  1.0674001 -2.2358212]]
Iteration 200 of 1000: loss=2.09 " + "l1=1.1" + "l2=0.995 f=-0.394 shape=(1, 9000, 1)
logits [[ 0.58619434 -1.4906391   0.66263044 -1.3325881 ]]
Iteration 300 of 1000: loss=1.61 " + "l1=0.482" + "l2=1.13 f=-0.334 shape=(1, 9000, 1)
logits [[ 0.05857538 -1.3150342   0.3978339  -0.47827786]]
Iteration 400 of 1000: loss=1.15 " + "l1=0.00292" + "l2=1.15 f=-0.302 shape=(1, 9000, 1)
logits [[-0.37982973 -1.2540224   0.21615158  0.21083975]]
Iteration 500 of 1000: loss=0.894 " + "l1=0" + "l2=0.894 f=-0.31 shape=(1, 9000, 1)
logits [[-0.4452926  -1.3360181   0.2575005   0.28222317]]
Iteration 600 of 1000: loss=0.754 " + "l1=0.00916" + "l2=0.745 f=-0.312 shape=(1, 9000, 1)
logits [[-0.4258916  -1.4080343   0.30137154  0.28471875]]
Iteration 700 of 1000: loss=0.67 " + "l1=0.000108" + "l2=0.67 f=-0.313 shape=(1, 9000, 1)
logits [[-0.42596754 -1.4635266   0.31804574  0.31785005]]
Iteration 800 of 1000: loss=0.618 " + "l1=0.000356" + "l2=0.618 f=-0.315 shape=(1, 9000, 1)
logits [[-0.42678615 -1.4974211   0.3323262   0.33167925]]
Iteration 900 of 1000: loss=0.581 " + "l1=0" + "l2=0.581 f=-0.314 shape=(1, 9000, 1)
logits [[-0.42409292 -1.5239637   0.3437721   0.34849197]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.77 " + "l1=2.77" + "l2=0 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.253377  -2.8445592  2.7489429 -5.2673883]]
Iteration 100 of 1000: loss=1.99 " + "l1=1.6" + "l2=0.39 f=-0.507 shape=(1, 9000, 1)
logits [[ 1.6771458 -2.1511242  1.677572  -3.2323267]]
Iteration 200 of 1000: loss=1.66 " + "l1=1.17" + "l2=0.486 f=-0.475 shape=(1, 9000, 1)
logits [[ 1.2002907 -1.8980607  1.2027988 -2.4031692]]
Iteration 300 of 1000: loss=1.43 " + "l1=0.937" + "l2=0.493 f=-0.436 shape=(1, 9000, 1)
logits [[ 0.97805756 -1.7962402   0.9780288  -1.9047475 ]]
Iteration 400 of 1000: loss=1.24 " + "l1=0.724" + "l2=0.521 f=-0.406 shape=(1, 9000, 1)
logits [[ 0.71214765 -1.7024472   0.79603785 -1.4312549 ]]
Iteration 500 of 1000: loss=1.06 " + "l1=0.509" + "l2=0.547 f=-0.375 shape=(1, 9000, 1)
logits [[ 0.4147319 -1.6428356  0.6465826 -0.9202783]]
Iteration 600 of 1000: loss=0.867 " + "l1=0.264" + "l2=0.603 f=-0.345 shape=(1, 9000, 1)
logits [[ 0.04714443 -1.5742973   0.47998714 -0.3311389 ]]
Iteration 700 of 1000: loss=0.69 " + "l1=0.037" + "l2=0.653 f=-0.315 shape=(1, 9000, 1)
logits [[-0.29856756 -1.53248     0.34316397  0.22943133]]
Iteration 800 of 1000: loss=0.596 " + "l1=0.0062" + "l2=0.59 f=-0.316 shape=(1, 9000, 1)
logits [[-0.34955922 -1.5585338   0.33063164  0.31155455]]
Iteration 900 of 1000: loss=0.549 " + "l1=0.00864" + "l2=0.54 f=-0.319 shape=(1, 9000, 1)
logits [[-0.33535993 -1.5974281   0.3419951   0.31539986]]
--- 309.4801502227783 seconds ---
Adv result:3
Loading record A06991
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0512 " + "l1=0.0512" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.7638817 -1.360151   2.629989  -6.6929603]]
Iteration 100 of 1000: loss=0.0508 " + "l1=0.0505" + "l2=0.000267 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.7132063 -1.3411872  2.614877  -6.6483474]]
Iteration 200 of 1000: loss=0.0507 " + "l1=0.0504" + "l2=0.00027 f=-0.416 shape=(1, 9000, 1)
logits [[ 3.702938  -1.3378206  2.6106386 -6.6384587]]
Iteration 300 of 1000: loss=0.0506 " + "l1=0.0502" + "l2=0.000338 f=-0.416 shape=(1, 9000, 1)
logits [[ 3.6891212 -1.3336091  2.605594  -6.6255136]]
Iteration 400 of 1000: loss=0.0505 " + "l1=0.05" + "l2=0.000413 f=-0.417 shape=(1, 9000, 1)
logits [[ 3.6743538 -1.3295285  2.600357  -6.61166  ]]
Iteration 500 of 1000: loss=0.0503 " + "l1=0.0498" + "l2=0.000495 f=-0.417 shape=(1, 9000, 1)
logits [[ 3.659223  -1.3256394  2.595174  -6.5976925]]
Iteration 600 of 1000: loss=0.0503 " + "l1=0.0497" + "l2=0.000602 f=-0.418 shape=(1, 9000, 1)
logits [[ 3.643521  -1.3218505  2.5899549 -6.583531 ]]
Iteration 700 of 1000: loss=0.0502 " + "l1=0.0495" + "l2=0.000765 f=-0.419 shape=(1, 9000, 1)
logits [[ 3.6275249 -1.3180386  2.584769  -6.569555 ]]
Iteration 800 of 1000: loss=0.0502 " + "l1=0.0493" + "l2=0.000907 f=-0.42 shape=(1, 9000, 1)
logits [[ 3.6122177 -1.3147229  2.5798252 -6.5564   ]]
Iteration 900 of 1000: loss=0.0501 " + "l1=0.0491" + "l2=0.00102 f=-0.421 shape=(1, 9000, 1)
logits [[ 3.5971746 -1.3116001  2.5752597 -6.543736 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.512 " + "l1=0.512" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.7638817 -1.360151   2.629989  -6.6929603]]
Iteration 100 of 1000: loss=0.468 " + "l1=0.441" + "l2=0.0273 f=-0.428 shape=(1, 9000, 1)
logits [[ 3.283793  -1.1233633  2.4292502 -6.3030314]]
Iteration 200 of 1000: loss=0.447 " + "l1=0.408" + "l2=0.039 f=-0.437 shape=(1, 9000, 1)
logits [[ 3.0405562 -1.0436717  2.3421688 -6.086768 ]]
Iteration 300 of 1000: loss=0.429 " + "l1=0.379" + "l2=0.0493 f=-0.442 shape=(1, 9000, 1)
logits [[ 2.8190236 -0.9749489  2.260039  -5.871323 ]]
Iteration 400 of 1000: loss=0.412 " + "l1=0.353" + "l2=0.0591 f=-0.445 shape=(1, 9000, 1)
logits [[ 2.607797  -0.9229272  2.195768  -5.662094 ]]
Iteration 500 of 1000: loss=0.397 " + "l1=0.33" + "l2=0.0667 f=-0.45 shape=(1, 9000, 1)
logits [[ 2.4059925  -0.89509505  2.1393118  -5.452186  ]]
Iteration 600 of 1000: loss=0.382 " + "l1=0.307" + "l2=0.0747 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.1951318 -0.8766027  2.0886583 -5.2352896]]
Iteration 700 of 1000: loss=0.367 " + "l1=0.288" + "l2=0.0791 f=-0.465 shape=(1, 9000, 1)
logits [[ 2.022272  -0.8570862  2.0217817 -5.045031 ]]
Iteration 800 of 1000: loss=0.357 " + "l1=0.284" + "l2=0.0735 f=-0.468 shape=(1, 9000, 1)
logits [[ 1.9822931 -0.8549259  1.9788338 -4.980046 ]]
Iteration 900 of 1000: loss=0.347 " + "l1=0.276" + "l2=0.071 f=-0.472 shape=(1, 9000, 1)
logits [[ 1.9300015 -0.8331991  1.9285862 -4.91493  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.12 " + "l1=5.12" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.7638817 -1.360151   2.629989  -6.6929603]]
Iteration 100 of 1000: loss=1.99 " + "l1=0.964" + "l2=1.03 f=-0.521 shape=(1, 9000, 1)
logits [[ 1.1988453   0.23968597  1.2036583  -4.72462   ]]
Iteration 200 of 1000: loss=1.5 " + "l1=0.503" + "l2=1 f=-0.52 shape=(1, 9000, 1)
logits [[ 0.95687413  0.48398492  0.98667055 -4.506261  ]]
Iteration 300 of 1000: loss=1.29 " + "l1=0.341" + "l2=0.949 f=-0.502 shape=(1, 9000, 1)
logits [[ 0.8789312   0.55648154  0.8972544  -4.34246   ]]
Iteration 400 of 1000: loss=1.13 " + "l1=0.15" + "l2=0.98 f=-0.504 shape=(1, 9000, 1)
logits [[ 0.6727325   0.6397357   0.78928274 -4.1175365 ]]
Iteration 500 of 1000: loss=1.03 " + "l1=0.0377" + "l2=0.988 f=-0.495 shape=(1, 9000, 1)
logits [[ 0.58256954  0.6879354   0.72561234 -3.9772072 ]]
Iteration 600 of 1000: loss=0.968 " + "l1=0.00359" + "l2=0.964 f=-0.485 shape=(1, 9000, 1)
logits [[ 0.5436226  0.6798566  0.6834448 -3.8460913]]
Iteration 700 of 1000: loss=0.92 " + "l1=0.000476" + "l2=0.919 f=-0.471 shape=(1, 9000, 1)
logits [[ 0.50387883  0.64692825  0.64740473 -3.6805854 ]]
Iteration 800 of 1000: loss=0.857 " + "l1=0.00633" + "l2=0.85 f=-0.442 shape=(1, 9000, 1)
logits [[ 0.51865023  0.6015671   0.6078978  -3.4948218 ]]
Iteration 900 of 1000: loss=0.825 " + "l1=0.0176" + "l2=0.807 f=-0.424 shape=(1, 9000, 1)
logits [[ 0.5169226   0.56834894  0.5859006  -3.3658493 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.82 " + "l1=2.82" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.7638817 -1.360151   2.629989  -6.6929603]]
Iteration 100 of 1000: loss=1.51 " + "l1=0.987" + "l2=0.521 f=-0.483 shape=(1, 9000, 1)
logits [[ 1.6172966  -0.17496887  1.6190468  -4.991428  ]]
Iteration 200 of 1000: loss=1.21 " + "l1=0.66" + "l2=0.553 f=-0.495 shape=(1, 9000, 1)
logits [[ 1.2900462   0.09548079  1.2951077  -4.6606984 ]]
Iteration 300 of 1000: loss=1.08 " + "l1=0.507" + "l2=0.574 f=-0.485 shape=(1, 9000, 1)
logits [[ 1.1429211  0.2205409  1.1413656 -4.4468126]]
Iteration 400 of 1000: loss=1 " + "l1=0.425" + "l2=0.577 f=-0.475 shape=(1, 9000, 1)
logits [[ 1.0347328   0.27879623  1.0510191  -4.2639074 ]]
Iteration 500 of 1000: loss=0.946 " + "l1=0.386" + "l2=0.56 f=-0.468 shape=(1, 9000, 1)
logits [[ 0.9874921   0.30527085  1.0069515  -4.17081   ]]
Iteration 600 of 1000: loss=0.9 " + "l1=0.349" + "l2=0.551 f=-0.46 shape=(1, 9000, 1)
logits [[ 0.92969495  0.33158168  0.9660151  -4.0688834 ]]
Iteration 700 of 1000: loss=0.865 " + "l1=0.324" + "l2=0.541 f=-0.45 shape=(1, 9000, 1)
logits [[ 0.9079798   0.33773056  0.92632324 -3.973915  ]]
Iteration 800 of 1000: loss=0.837 " + "l1=0.292" + "l2=0.545 f=-0.439 shape=(1, 9000, 1)
logits [[ 0.8307106  0.3601514  0.8916978 -3.8385437]]
Iteration 900 of 1000: loss=0.801 " + "l1=0.266" + "l2=0.535 f=-0.427 shape=(1, 9000, 1)
logits [[ 0.832693    0.36832458  0.8517451  -3.7597034 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.97 " + "l1=3.97" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.7638817 -1.360151   2.629989  -6.6929603]]
Iteration 100 of 1000: loss=1.79 " + "l1=0.988" + "l2=0.804 f=-0.509 shape=(1, 9000, 1)
logits [[ 1.3455794   0.08034131  1.35494    -4.8184195 ]]
Iteration 200 of 1000: loss=1.4 " + "l1=0.597" + "l2=0.8 f=-0.511 shape=(1, 9000, 1)
logits [[ 1.0833246   0.32903957  1.099184   -4.556555  ]]
Iteration 300 of 1000: loss=1.21 " + "l1=0.433" + "l2=0.776 f=-0.492 shape=(1, 9000, 1)
logits [[ 0.93367624  0.42028224  0.97838366 -4.3023076 ]]
Iteration 400 of 1000: loss=1.1 " + "l1=0.342" + "l2=0.756 f=-0.479 shape=(1, 9000, 1)
logits [[ 0.8108554  0.4624901  0.9043947 -4.0953455]]
Iteration 500 of 1000: loss=1.02 " + "l1=0.286" + "l2=0.734 f=-0.462 shape=(1, 9000, 1)
logits [[ 0.80728936  0.47858557  0.8475359  -3.9794805 ]]
Iteration 600 of 1000: loss=0.959 " + "l1=0.199" + "l2=0.761 f=-0.45 shape=(1, 9000, 1)
logits [[ 0.65930575  0.52268404  0.7793746  -3.763262  ]]
Iteration 700 of 1000: loss=0.902 " + "l1=0.123" + "l2=0.779 f=-0.437 shape=(1, 9000, 1)
logits [[ 0.5306692   0.55857825  0.7173597  -3.5535765 ]]
Iteration 800 of 1000: loss=0.837 " + "l1=0.0796" + "l2=0.757 f=-0.418 shape=(1, 9000, 1)
logits [[ 0.5086954  0.5605476  0.663297  -3.40429  ]]
Iteration 900 of 1000: loss=0.791 " + "l1=0.0308" + "l2=0.76 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.45887735  0.56102633  0.60077035 -3.2394686 ]]
--- 310.00206303596497 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0113 " + "l1=0.0113" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.7638817 -1.360151   2.629989  -6.6929603]]
Iteration 100 of 1000: loss=0.011 " + "l1=0.0108" + "l2=0.000261 f=-0.416 shape=(1, 9000, 1)
logits [[ 3.7177808 -1.3680978  2.6421633 -6.65671  ]]
Iteration 200 of 1000: loss=0.0109 " + "l1=0.0107" + "l2=0.000227 f=-0.416 shape=(1, 9000, 1)
logits [[ 3.7124422 -1.368641   2.6429906 -6.6526294]]
Iteration 300 of 1000: loss=0.0109 " + "l1=0.0106" + "l2=0.00028 f=-0.417 shape=(1, 9000, 1)
logits [[ 3.7029693 -1.3698553  2.6442637 -6.6449385]]
Iteration 400 of 1000: loss=0.0108 " + "l1=0.0105" + "l2=0.000313 f=-0.417 shape=(1, 9000, 1)
logits [[ 3.6925871 -1.371185   2.6453302 -6.636262 ]]
Iteration 500 of 1000: loss=0.0108 " + "l1=0.0104" + "l2=0.000402 f=-0.418 shape=(1, 9000, 1)
logits [[ 3.6817696 -1.3725215  2.6462312 -6.6272445]]
Iteration 600 of 1000: loss=0.0107 " + "l1=0.0102" + "l2=0.000464 f=-0.419 shape=(1, 9000, 1)
logits [[ 3.670669  -1.3739927  2.6471417 -6.6181993]]
Iteration 700 of 1000: loss=0.0107 " + "l1=0.0101" + "l2=0.000592 f=-0.419 shape=(1, 9000, 1)
logits [[ 3.6589205 -1.3753508  2.6478045 -6.6085033]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.113 " + "l1=0.113" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.7638817 -1.360151   2.629989  -6.6929603]]
Iteration 100 of 1000: loss=0.0819 " + "l1=0.0636" + "l2=0.0182 f=-0.428 shape=(1, 9000, 1)
logits [[ 3.393237  -1.4315867  2.7567647 -6.4286785]]
Iteration 200 of 1000: loss=0.0661 " + "l1=0.0394" + "l2=0.0267 f=-0.435 shape=(1, 9000, 1)
logits [[ 3.1994336 -1.4540929  2.80574   -6.289986 ]]
Iteration 300 of 1000: loss=0.0526 " + "l1=0.0208" + "l2=0.0319 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.0463104 -1.4743624  2.8386555 -6.1712775]]
Iteration 400 of 1000: loss=0.0398 " + "l1=0.00204" + "l2=0.0378 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.8928292 -1.5062653  2.8724544 -6.049855 ]]
Iteration 500 of 1000: loss=0.0314 " + "l1=0.000904" + "l2=0.0305 f=-0.452 shape=(1, 9000, 1)
logits [[ 2.867551  -1.5171525  2.8585105 -6.01735  ]]
Iteration 600 of 1000: loss=0.0269 " + "l1=0" + "l2=0.0269 f=-0.456 shape=(1, 9000, 1)
logits [[ 2.8423963 -1.5235316  2.8474162 -5.991282 ]]
Iteration 700 of 1000: loss=0.0237 " + "l1=0.000175" + "l2=0.0235 f=-0.46 shape=(1, 9000, 1)
logits [[ 2.8311121 -1.5254142  2.829366  -5.975076 ]]
Iteration 800 of 1000: loss=0.0211 " + "l1=0.000364" + "l2=0.0207 f=-0.464 shape=(1, 9000, 1)
logits [[ 2.818564  -1.5267981  2.8149266 -5.9624057]]
Iteration 900 of 1000: loss=0.0194 " + "l1=0" + "l2=0.0194 f=-0.468 shape=(1, 9000, 1)
logits [[ 2.8058524 -1.5300161  2.8071983 -5.954767 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0624 " + "l1=0.0624" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.7638817 -1.360151   2.629989  -6.6929603]]
Iteration 100 of 1000: loss=0.0531 " + "l1=0.0479" + "l2=0.00521 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.5644007 -1.3989747  2.693225  -6.5481877]]
Iteration 200 of 1000: loss=0.0492 " + "l1=0.0423" + "l2=0.00697 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.4834957 -1.4125993  2.7151992 -6.490044 ]]
Iteration 300 of 1000: loss=0.0453 " + "l1=0.0366" + "l2=0.00873 f=-0.43 shape=(1, 9000, 1)
logits [[ 3.398498  -1.4258925  2.7328618 -6.425825 ]]
Iteration 400 of 1000: loss=0.0417 " + "l1=0.0314" + "l2=0.0102 f=-0.434 shape=(1, 9000, 1)
logits [[ 3.3175652 -1.436784   2.745812  -6.3617673]]
Iteration 500 of 1000: loss=0.0383 " + "l1=0.0266" + "l2=0.0117 f=-0.438 shape=(1, 9000, 1)
logits [[ 3.2389908 -1.4475118  2.7558365 -6.2981195]]
Iteration 600 of 1000: loss=0.035 " + "l1=0.0212" + "l2=0.0138 f=-0.441 shape=(1, 9000, 1)
logits [[ 3.1552517 -1.4568864  2.7702312 -6.232222 ]]
Iteration 700 of 1000: loss=0.0318 " + "l1=0.0166" + "l2=0.0152 f=-0.445 shape=(1, 9000, 1)
logits [[ 3.080679  -1.4673917  2.7782478 -6.1704564]]
Iteration 800 of 1000: loss=0.0288 " + "l1=0.0123" + "l2=0.0165 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.0068378 -1.4787929  2.7832875 -6.1088495]]
Iteration 900 of 1000: loss=0.0259 " + "l1=0.00814" + "l2=0.0178 f=-0.454 shape=(1, 9000, 1)
logits [[ 2.9372427 -1.4919062  2.7892566 -6.0519204]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0879 " + "l1=0.0879" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.7638817 -1.360151   2.629989  -6.6929603]]
Iteration 100 of 1000: loss=0.0691 " + "l1=0.0583" + "l2=0.0108 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.479177  -1.4177657  2.7267325 -6.4882007]]
Iteration 200 of 1000: loss=0.0607 " + "l1=0.0458" + "l2=0.0149 f=-0.43 shape=(1, 9000, 1)
logits [[ 3.3506129 -1.4352036  2.7596147 -6.3962607]]
Iteration 300 of 1000: loss=0.0523 " + "l1=0.0334" + "l2=0.0189 f=-0.435 shape=(1, 9000, 1)
logits [[ 3.2183707 -1.4510276  2.7874806 -6.29583  ]]
Iteration 400 of 1000: loss=0.0449 " + "l1=0.0227" + "l2=0.0222 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.1000473 -1.4662894  2.8075395 -6.2006874]]
Iteration 500 of 1000: loss=0.0379 " + "l1=0.0123" + "l2=0.0256 f=-0.444 shape=(1, 9000, 1)
logits [[ 2.9830422 -1.4833137  2.8243299 -6.101364 ]]
Iteration 600 of 1000: loss=0.0309 " + "l1=0.00146" + "l2=0.0294 f=-0.452 shape=(1, 9000, 1)
logits [[ 2.864811  -1.5100256  2.8460255 -6.0072856]]
Iteration 700 of 1000: loss=0.0259 " + "l1=0.000154" + "l2=0.0257 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.8371017 -1.5181149  2.8351102 -5.981456 ]]
Iteration 800 of 1000: loss=0.0227 " + "l1=3.72e-05" + "l2=0.0226 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.8201137 -1.5219706  2.819634  -5.962028 ]]
Iteration 900 of 1000: loss=0.0203 " + "l1=0" + "l2=0.0203 f=-0.465 shape=(1, 9000, 1)
logits [[ 2.8062956 -1.523908   2.8066864 -5.9494414]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0751 " + "l1=0.0751" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.7638817 -1.360151   2.629989  -6.6929603]]
Iteration 100 of 1000: loss=0.0616 " + "l1=0.0537" + "l2=0.00784 f=-0.424 shape=(1, 9000, 1)
logits [[ 3.5213196 -1.4089004  2.7103062 -6.5178237]]
Iteration 200 of 1000: loss=0.0558 " + "l1=0.0454" + "l2=0.0104 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.4205165 -1.4248751  2.7359376 -6.4470186]]
Iteration 300 of 1000: loss=0.05 " + "l1=0.0368" + "l2=0.0132 f=-0.433 shape=(1, 9000, 1)
logits [[ 3.3128908 -1.4385711  2.757724  -6.3641605]]
Iteration 400 of 1000: loss=0.0443 " + "l1=0.0284" + "l2=0.0159 f=-0.437 shape=(1, 9000, 1)
logits [[ 3.2056456 -1.4510953  2.7767937 -6.2811637]]
Iteration 500 of 1000: loss=0.0393 " + "l1=0.021" + "l2=0.0183 f=-0.441 shape=(1, 9000, 1)
logits [[ 3.1078722 -1.4647434  2.7914848 -6.2004366]]
Iteration 600 of 1000: loss=0.0345 " + "l1=0.0141" + "l2=0.0204 f=-0.446 shape=(1, 9000, 1)
logits [[ 3.0149868 -1.478295   2.8022478 -6.1228056]]
Iteration 700 of 1000: loss=0.0298 " + "l1=0.00729" + "l2=0.0226 f=-0.452 shape=(1, 9000, 1)
logits [[ 2.920184  -1.4954542  2.810116  -6.0412545]]
Iteration 800 of 1000: loss=0.0252 " + "l1=0.000275" + "l2=0.0249 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.826217  -1.5131624  2.8220656 -5.9650917]]
Iteration 900 of 1000: loss=0.0219 " + "l1=0" + "l2=0.0219 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.809075  -1.5188392  2.8093457 -5.9502177]]
--- 292.190664768219 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.105 " + "l1=0.105" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.7638817 -1.360151   2.629989  -6.6929603]]
Iteration 100 of 1000: loss=0.103 " + "l1=0.103" + "l2=0.000595 f=-0.413 shape=(1, 9000, 1)
logits [[ 3.6825678 -1.3572755  2.6167543 -6.594547 ]]
Iteration 200 of 1000: loss=0.103 " + "l1=0.102" + "l2=0.000667 f=-0.413 shape=(1, 9000, 1)
logits [[ 3.6591322 -1.354689   2.6102002 -6.5671377]]
Iteration 300 of 1000: loss=0.102 " + "l1=0.102" + "l2=0.00084 f=-0.413 shape=(1, 9000, 1)
logits [[ 3.6310687 -1.3526646  2.6028602 -6.5343194]]
Iteration 400 of 1000: loss=0.102 " + "l1=0.101" + "l2=0.00104 f=-0.414 shape=(1, 9000, 1)
logits [[ 3.6012347 -1.3509654  2.595033  -6.4998055]]
Iteration 500 of 1000: loss=0.102 " + "l1=0.1" + "l2=0.00128 f=-0.414 shape=(1, 9000, 1)
logits [[ 3.5697727 -1.3499467  2.586868  -6.4641085]]
Iteration 600 of 1000: loss=0.101 " + "l1=0.0997" + "l2=0.00154 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.5383015 -1.3497882  2.5788238 -6.428947 ]]
Iteration 700 of 1000: loss=0.101 " + "l1=0.099" + "l2=0.00182 f=-0.417 shape=(1, 9000, 1)
logits [[ 3.5062509 -1.3501663  2.570686  -6.3934064]]
Iteration 800 of 1000: loss=0.1 " + "l1=0.0983" + "l2=0.00209 f=-0.418 shape=(1, 9000, 1)
logits [[ 3.4743674 -1.3508772  2.5624497 -6.358928 ]]
Iteration 900 of 1000: loss=0.1 " + "l1=0.0977" + "l2=0.00242 f=-0.42 shape=(1, 9000, 1)
logits [[ 3.4452612 -1.3521131  2.5554361 -6.3274937]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.05 " + "l1=1.05" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.7638817 -1.360151   2.629989  -6.6929603]]
Iteration 100 of 1000: loss=0.93 " + "l1=0.872" + "l2=0.0582 f=-0.403 shape=(1, 9000, 1)
logits [[ 2.954412  -1.2922755  2.4900534 -5.7649765]]
Iteration 200 of 1000: loss=0.853 " + "l1=0.764" + "l2=0.0896 f=-0.404 shape=(1, 9000, 1)
logits [[ 2.446653  -1.2155509  2.3407001 -5.1895323]]
Iteration 300 of 1000: loss=0.783 " + "l1=0.69" + "l2=0.093 f=-0.407 shape=(1, 9000, 1)
logits [[ 2.1430457 -1.1570078  2.1440744 -4.7592034]]
Iteration 400 of 1000: loss=0.731 " + "l1=0.636" + "l2=0.0948 f=-0.408 shape=(1, 9000, 1)
logits [[ 1.9486972 -1.1295936  1.9536833 -4.404746 ]]
Iteration 500 of 1000: loss=0.684 " + "l1=0.576" + "l2=0.108 f=-0.407 shape=(1, 9000, 1)
logits [[ 1.6926861 -1.0905237  1.7659266 -3.9946406]]
Iteration 600 of 1000: loss=0.644 " + "l1=0.519" + "l2=0.125 f=-0.391 shape=(1, 9000, 1)
logits [[ 1.402596  -1.0300703  1.6264799 -3.5635173]]
Iteration 700 of 1000: loss=0.616 " + "l1=0.481" + "l2=0.134 f=-0.377 shape=(1, 9000, 1)
logits [[ 1.2176452 -1.0183347  1.5539373 -3.2604825]]
Iteration 800 of 1000: loss=0.594 " + "l1=0.451" + "l2=0.143 f=-0.364 shape=(1, 9000, 1)
logits [[ 1.0691217 -1.0191661  1.500974  -3.007756 ]]
Iteration 900 of 1000: loss=0.576 " + "l1=0.426" + "l2=0.151 f=-0.353 shape=(1, 9000, 1)
logits [[ 0.95123965 -1.0252984   1.4600989  -2.7969825 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.5 " + "l1=10.5" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.7638817 -1.360151   2.629989  -6.6929603]]
Iteration 100 of 1000: loss=3.95 " + "l1=1.4" + "l2=2.55 f=-0.29 shape=(1, 9000, 1)
logits [[-0.49127468 -0.5658228   0.6480307  -0.75062853]]
Iteration 200 of 1000: loss=2.19 " + "l1=0.01" + "l2=2.18 f=-0.231 shape=(1, 9000, 1)
logits [[-0.76170784 -0.62750775  0.23805915  0.22802258]]
Iteration 300 of 1000: loss=1.62 " + "l1=0.0228" + "l2=1.6 f=-0.231 shape=(1, 9000, 1)
logits [[-0.764189   -0.6643278   0.26387444  0.24106854]]
Iteration 400 of 1000: loss=1.34 " + "l1=0" + "l2=1.34 f=-0.239 shape=(1, 9000, 1)
logits [[-0.81187105 -0.6512738   0.24466808  0.26424357]]
Iteration 500 of 1000: loss=1.16 " + "l1=0.00299" + "l2=1.16 f=-0.238 shape=(1, 9000, 1)
logits [[-0.81155413 -0.64825004  0.25479966  0.25180477]]
Iteration 600 of 1000: loss=1.06 " + "l1=0.0216" + "l2=1.04 f=-0.24 shape=(1, 9000, 1)
logits [[-0.81503147 -0.6353399   0.2562353   0.23460796]]
Iteration 700 of 1000: loss=0.972 " + "l1=0.0101" + "l2=0.962 f=-0.239 shape=(1, 9000, 1)
logits [[-0.82373405 -0.6346812   0.25570774  0.2456041 ]]
Iteration 800 of 1000: loss=0.909 " + "l1=0.0104" + "l2=0.898 f=-0.238 shape=(1, 9000, 1)
logits [[-0.81783706 -0.64639586  0.2612808   0.2508437 ]]
Iteration 900 of 1000: loss=0.852 " + "l1=0" + "l2=0.852 f=-0.235 shape=(1, 9000, 1)
logits [[-0.82116055 -0.63701254  0.25430784  0.26382518]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.75 " + "l1=5.75" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.7638817 -1.360151   2.629989  -6.6929603]]
Iteration 100 of 1000: loss=3.15 " + "l1=2.11" + "l2=1.04 f=-0.319 shape=(1, 9000, 1)
logits [[ 0.66258633 -0.6525584   1.2753212  -2.5603015 ]]
Iteration 200 of 1000: loss=2.11 " + "l1=0.898" + "l2=1.21 f=-0.269 shape=(1, 9000, 1)
logits [[-0.233215  -0.6170793  0.7030113 -0.9292433]]
Iteration 300 of 1000: loss=1.49 " + "l1=0.327" + "l2=1.17 f=-0.229 shape=(1, 9000, 1)
logits [[-0.55485284 -0.7213281   0.47658205 -0.1171791 ]]
Iteration 400 of 1000: loss=1.16 " + "l1=0.0237" + "l2=1.13 f=-0.223 shape=(1, 9000, 1)
logits [[-0.77367216 -0.7478082   0.33661878  0.29353356]]
Iteration 500 of 1000: loss=0.974 " + "l1=0.00723" + "l2=0.967 f=-0.23 shape=(1, 9000, 1)
logits [[-0.82223415 -0.75108165  0.33340716  0.32026002]]
Iteration 600 of 1000: loss=0.864 " + "l1=0.000737" + "l2=0.863 f=-0.232 shape=(1, 9000, 1)
logits [[-0.8307027  -0.7413724   0.32309422  0.32175472]]
Iteration 700 of 1000: loss=0.787 " + "l1=0" + "l2=0.787 f=-0.228 shape=(1, 9000, 1)
logits [[-0.8285412  -0.7171882   0.31676954  0.3167932 ]]
Iteration 800 of 1000: loss=0.73 " + "l1=0.00763" + "l2=0.722 f=-0.222 shape=(1, 9000, 1)
logits [[-0.8020875  -0.7266402   0.32678208  0.3129154 ]]
Iteration 900 of 1000: loss=0.673 " + "l1=0.00191" + "l2=0.671 f=-0.221 shape=(1, 9000, 1)
logits [[-0.8049957  -0.7198898   0.32238102  0.31891438]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.4 " + "l1=3.4" + "l2=0 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.7638817 -1.360151   2.629989  -6.6929603]]
Iteration 100 of 1000: loss=2.32 " + "l1=1.9" + "l2=0.421 f=-0.367 shape=(1, 9000, 1)
logits [[ 1.725306   -0.90778226  1.775034   -4.0605497 ]]
Iteration 200 of 1000: loss=1.8 " + "l1=1.21" + "l2=0.584 f=-0.323 shape=(1, 9000, 1)
logits [[ 0.64051014 -0.7016767   1.2491146  -2.4788895 ]]
Iteration 300 of 1000: loss=1.41 " + "l1=0.77" + "l2=0.636 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.04497349 -0.7151051   0.9575279  -1.4112161 ]]
Iteration 400 of 1000: loss=1.14 " + "l1=0.47" + "l2=0.673 f=-0.254 shape=(1, 9000, 1)
logits [[-0.28999293 -0.7705131   0.74657553 -0.70109665]]
Iteration 500 of 1000: loss=1.01 " + "l1=0.34" + "l2=0.666 f=-0.241 shape=(1, 9000, 1)
logits [[-0.42273822 -0.8308308   0.6672961  -0.37965336]]
Iteration 600 of 1000: loss=0.901 " + "l1=0.25" + "l2=0.651 f=-0.235 shape=(1, 9000, 1)
logits [[-0.52180034 -0.8600004   0.6059678  -0.1628578 ]]
Iteration 700 of 1000: loss=0.811 " + "l1=0.145" + "l2=0.666 f=-0.233 shape=(1, 9000, 1)
logits [[-0.6628401  -0.8592941   0.51794714  0.07286387]]
Iteration 800 of 1000: loss=0.729 " + "l1=0.0648" + "l2=0.664 f=-0.226 shape=(1, 9000, 1)
logits [[-0.7409838  -0.87479913  0.45471978  0.25541845]]
Iteration 900 of 1000: loss=0.652 " + "l1=0" + "l2=0.652 f=-0.219 shape=(1, 9000, 1)
logits [[-0.79835105 -0.88359404  0.40278676  0.40339002]]
--- 311.33176612854004 seconds ---
Adv result:3
Loading record A07004
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0538 " + "l1=0.0538" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.219314  -2.1602714  2.5518    -5.5921803]]
Iteration 100 of 1000: loss=0.0531 " + "l1=0.0527" + "l2=0.000434 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.1538844 -2.111604   2.5135918 -5.5248327]]
Iteration 200 of 1000: loss=0.0529 " + "l1=0.0524" + "l2=0.000449 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.1370442 -2.1036344  2.5061486 -5.5060296]]
Iteration 300 of 1000: loss=0.0527 " + "l1=0.0521" + "l2=0.00057 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.1161509 -2.0920095  2.4957728 -5.483149 ]]
Iteration 400 of 1000: loss=0.0525 " + "l1=0.0518" + "l2=0.000709 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.095868  -2.080438   2.4857984 -5.461229 ]]
Iteration 500 of 1000: loss=0.0523 " + "l1=0.0515" + "l2=0.000844 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.0773046 -2.069585   2.4766386 -5.4414296]]
Iteration 600 of 1000: loss=0.0522 " + "l1=0.0512" + "l2=0.000969 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.059926  -2.058595   2.4676392 -5.423488 ]]
Iteration 700 of 1000: loss=0.0521 " + "l1=0.0509" + "l2=0.00115 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.043653  -2.0476327  2.458873  -5.4070187]]
Iteration 800 of 1000: loss=0.0519 " + "l1=0.0506" + "l2=0.00127 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.0279527 -2.0365264  2.4502344 -5.3912616]]
Iteration 900 of 1000: loss=0.0518 " + "l1=0.0504" + "l2=0.00143 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.0120323 -2.0251904  2.4414961 -5.3757544]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.538 " + "l1=0.538" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.219314  -2.1602714  2.5518    -5.5921803]]
Iteration 100 of 1000: loss=0.475 " + "l1=0.445" + "l2=0.0297 f=-0.468 shape=(1, 9000, 1)
logits [[ 2.683159  -1.7715124  2.234035  -5.017149 ]]
Iteration 200 of 1000: loss=0.443 " + "l1=0.396" + "l2=0.0466 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.3913443 -1.5708389  2.0676692 -4.6791496]]
Iteration 300 of 1000: loss=0.408 " + "l1=0.349" + "l2=0.0591 f=-0.429 shape=(1, 9000, 1)
logits [[ 2.0970693 -1.390004   1.8968109 -4.3211465]]
Iteration 400 of 1000: loss=0.38 " + "l1=0.31" + "l2=0.07 f=-0.41 shape=(1, 9000, 1)
logits [[ 1.8565218 -1.247585   1.7551075 -4.0034122]]
Iteration 500 of 1000: loss=0.356 " + "l1=0.277" + "l2=0.0788 f=-0.394 shape=(1, 9000, 1)
logits [[ 1.6332611 -1.1407052  1.63189   -3.700672 ]]
Iteration 600 of 1000: loss=0.337 " + "l1=0.261" + "l2=0.0766 f=-0.371 shape=(1, 9000, 1)
logits [[ 1.5598413 -1.0475698  1.5580016 -3.5537891]]
Iteration 700 of 1000: loss=0.325 " + "l1=0.25" + "l2=0.0746 f=-0.358 shape=(1, 9000, 1)
logits [[ 1.5075197  -0.99279505  1.5072424  -3.4542603 ]]
Iteration 800 of 1000: loss=0.313 " + "l1=0.24" + "l2=0.0734 f=-0.346 shape=(1, 9000, 1)
logits [[ 1.4528781 -0.9445734  1.4526517 -3.3458033]]
Iteration 900 of 1000: loss=0.3 " + "l1=0.225" + "l2=0.0753 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.371325   -0.87680274  1.3745258  -3.1809494 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.38 " + "l1=5.38" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.219314  -2.1602714  2.5518    -5.5921803]]
Iteration 100 of 1000: loss=2.12 " + "l1=1.32" + "l2=0.795 f=-0.286 shape=(1, 9000, 1)
logits [[ 0.96811384 -0.2870375   1.0327162  -2.8576708 ]]
Iteration 200 of 1000: loss=1.27 " + "l1=0.124" + "l2=1.14 f=-0.195 shape=(1, 9000, 1)
logits [[-0.21075574  0.15674591  0.28120086 -1.0079573 ]]
Iteration 300 of 1000: loss=0.847 " + "l1=0.00498" + "l2=0.842 f=-0.183 shape=(1, 9000, 1)
logits [[-0.3630019   0.07430118  0.07927982 -0.5229212 ]]
Iteration 400 of 1000: loss=0.725 " + "l1=0" + "l2=0.725 f=-0.186 shape=(1, 9000, 1)
logits [[-0.38504225  0.04524487  0.03679479 -0.44002116]]
Iteration 500 of 1000: loss=0.63 " + "l1=0.00886" + "l2=0.621 f=-0.187 shape=(1, 9000, 1)
logits [[-0.37319216  0.01496481  0.02382016 -0.41469115]]
Iteration 600 of 1000: loss=0.544 " + "l1=0" + "l2=0.544 f=-0.19 shape=(1, 9000, 1)
logits [[-0.37802336  0.00195713  0.00171996 -0.38396809]]
Iteration 700 of 1000: loss=0.487 " + "l1=0.00128" + "l2=0.485 f=-0.189 shape=(1, 9000, 1)
logits [[-0.3575827  -0.01603715 -0.01475744 -0.36792785]]
Iteration 800 of 1000: loss=0.446 " + "l1=0" + "l2=0.446 f=-0.187 shape=(1, 9000, 1)
logits [[-0.33897284 -0.02642021 -0.02783522 -0.35436055]]
Iteration 900 of 1000: loss=0.419 " + "l1=0" + "l2=0.419 f=-0.184 shape=(1, 9000, 1)
logits [[-0.33550632 -0.03198205 -0.03873636 -0.32999408]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.96 " + "l1=2.96" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.219314  -2.1602714  2.5518    -5.5921803]]
Iteration 100 of 1000: loss=1.51 " + "l1=1.1" + "l2=0.415 f=-0.336 shape=(1, 9000, 1)
logits [[ 1.3479294 -0.6440616  1.3533967 -3.4001784]]
Iteration 200 of 1000: loss=1.21 " + "l1=0.753" + "l2=0.459 f=-0.27 shape=(1, 9000, 1)
logits [[ 0.8889225  -0.35808468  1.0106438  -2.6223657 ]]
Iteration 300 of 1000: loss=0.996 " + "l1=0.494" + "l2=0.503 f=-0.211 shape=(1, 9000, 1)
logits [[ 0.36098322 -0.19338031  0.70451176 -1.7172768 ]]
Iteration 400 of 1000: loss=0.729 " + "l1=0.123" + "l2=0.605 f=-0.188 shape=(1, 9000, 1)
logits [[-0.24219692 -0.04075246  0.18351598 -0.6533616 ]]
Iteration 500 of 1000: loss=0.585 " + "l1=0.0106" + "l2=0.575 f=-0.184 shape=(1, 9000, 1)
logits [[-0.37917522 -0.00482386  0.01451202 -0.3674323 ]]
Iteration 600 of 1000: loss=0.495 " + "l1=0.00126" + "l2=0.494 f=-0.187 shape=(1, 9000, 1)
logits [[-0.37460414 -0.01589307 -0.01359776 -0.34371707]]
Iteration 700 of 1000: loss=0.44 " + "l1=0.00755" + "l2=0.433 f=-0.186 shape=(1, 9000, 1)
logits [[-0.35170224 -0.03348998 -0.01976288 -0.33872676]]
Iteration 800 of 1000: loss=0.408 " + "l1=0" + "l2=0.408 f=-0.185 shape=(1, 9000, 1)
logits [[-0.35558346 -0.03871386 -0.04128273 -0.30288607]]
Iteration 900 of 1000: loss=0.387 " + "l1=0.000102" + "l2=0.386 f=-0.184 shape=(1, 9000, 1)
logits [[-0.34934792 -0.05065572 -0.05047092 -0.284239  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.75 " + "l1=1.75" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.219314  -2.1602714  2.5518    -5.5921803]]
Iteration 100 of 1000: loss=1.1 " + "l1=0.843" + "l2=0.256 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.6097089 -0.9744023  1.6180581 -3.7535248]]
Iteration 200 of 1000: loss=0.913 " + "l1=0.671" + "l2=0.242 f=-0.334 shape=(1, 9000, 1)
logits [[ 1.3427374 -0.7131762  1.3509642 -3.3146925]]
Iteration 300 of 1000: loss=0.808 " + "l1=0.566" + "l2=0.243 f=-0.29 shape=(1, 9000, 1)
logits [[ 1.1615747 -0.5603739  1.1807078 -2.943749 ]]
Iteration 400 of 1000: loss=0.746 " + "l1=0.503" + "l2=0.243 f=-0.265 shape=(1, 9000, 1)
logits [[ 0.9964467 -0.4972071  1.0510672 -2.6119597]]
Iteration 500 of 1000: loss=0.69 " + "l1=0.435" + "l2=0.255 f=-0.247 shape=(1, 9000, 1)
logits [[ 0.74549425 -0.42519245  0.91366136 -2.221434  ]]
Iteration 600 of 1000: loss=0.622 " + "l1=0.346" + "l2=0.277 f=-0.216 shape=(1, 9000, 1)
logits [[ 0.40523726 -0.3444637   0.7187082  -1.6417277 ]]
Iteration 700 of 1000: loss=0.526 " + "l1=0.203" + "l2=0.323 f=-0.201 shape=(1, 9000, 1)
logits [[ 0.03500504 -0.22912     0.39486328 -1.004801  ]]
Iteration 800 of 1000: loss=0.459 " + "l1=0.135" + "l2=0.324 f=-0.195 shape=(1, 9000, 1)
logits [[-0.10549633 -0.18235128  0.231539   -0.72232765]]
Iteration 900 of 1000: loss=0.415 " + "l1=0.0936" + "l2=0.321 f=-0.192 shape=(1, 9000, 1)
logits [[-0.1868649  -0.1440433   0.14403397 -0.58226407]]
--- 310.1062500476837 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00668 " + "l1=0.00668" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.219314  -2.1602714  2.5518    -5.5921803]]
Iteration 100 of 1000: loss=0.00646 " + "l1=0.0063" + "l2=0.000162 f=-0.496 shape=(1, 9000, 1)
logits [[ 3.1829715 -2.162377   2.5530975 -5.5593476]]
Iteration 200 of 1000: loss=0.00639 " + "l1=0.00626" + "l2=0.000136 f=-0.497 shape=(1, 9000, 1)
logits [[ 3.1772656 -2.1611743  2.5516677 -5.553871 ]]
Iteration 300 of 1000: loss=0.00638 " + "l1=0.00619" + "l2=0.000192 f=-0.497 shape=(1, 9000, 1)
logits [[ 3.1690254 -2.1603105  2.5505126 -5.546166 ]]
Iteration 400 of 1000: loss=0.00636 " + "l1=0.00611" + "l2=0.000248 f=-0.497 shape=(1, 9000, 1)
logits [[ 3.160754  -2.1595323  2.5495424 -5.538375 ]]
Iteration 500 of 1000: loss=0.00633 " + "l1=0.00604" + "l2=0.000291 f=-0.497 shape=(1, 9000, 1)
logits [[ 3.1527338 -2.158794   2.5487099 -5.530869 ]]
Iteration 600 of 1000: loss=0.00633 " + "l1=0.00597" + "l2=0.000368 f=-0.497 shape=(1, 9000, 1)
logits [[ 3.1445727 -2.1579938  2.5478878 -5.5232863]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0668 " + "l1=0.0668" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.219314  -2.1602714  2.5518    -5.5921803]]
Iteration 100 of 1000: loss=0.0494 " + "l1=0.0417" + "l2=0.00773 f=-0.501 shape=(1, 9000, 1)
logits [[ 2.9715865 -2.1715646  2.5545888 -5.3581944]]
Iteration 200 of 1000: loss=0.0422 " + "l1=0.0313" + "l2=0.0109 f=-0.503 shape=(1, 9000, 1)
logits [[ 2.8586311 -2.1671371  2.5455215 -5.249481 ]]
Iteration 300 of 1000: loss=0.0365 " + "l1=0.0226" + "l2=0.0138 f=-0.505 shape=(1, 9000, 1)
logits [[ 2.7525976 -2.153581   2.5265245 -5.144735 ]]
Iteration 400 of 1000: loss=0.0311 " + "l1=0.0143" + "l2=0.0168 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.6482472 -2.1390603  2.5055907 -5.039065 ]]
Iteration 500 of 1000: loss=0.0257 " + "l1=0.00589" + "l2=0.0198 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.5404088 -2.1221786  2.4815533 -4.92491  ]]
Iteration 600 of 1000: loss=0.0206 " + "l1=3.91e-05" + "l2=0.0205 f=-0.504 shape=(1, 9000, 1)
logits [[ 2.4585834 -2.101921   2.4581928 -4.8325696]]
Iteration 700 of 1000: loss=0.0176 " + "l1=8.33e-05" + "l2=0.0176 f=-0.503 shape=(1, 9000, 1)
logits [[ 2.4519923 -2.092201   2.4511597 -4.824837 ]]
Iteration 800 of 1000: loss=0.0157 " + "l1=0.000234" + "l2=0.0154 f=-0.502 shape=(1, 9000, 1)
logits [[ 2.4500582 -2.0835955  2.4477143 -4.824077 ]]
Iteration 900 of 1000: loss=0.0136 " + "l1=9.73e-05" + "l2=0.0135 f=-0.502 shape=(1, 9000, 1)
logits [[ 2.4473908 -2.0776532  2.4464178 -4.8233542]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0367 " + "l1=0.0367" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.219314  -2.1602714  2.5518    -5.5921803]]
Iteration 100 of 1000: loss=0.0312 " + "l1=0.0286" + "l2=0.00259 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.0760002 -2.169001   2.556412  -5.459495 ]]
Iteration 200 of 1000: loss=0.029 " + "l1=0.0255" + "l2=0.00346 f=-0.5 shape=(1, 9000, 1)
logits [[ 3.0123885 -2.1626668  2.5482562 -5.397492 ]]
Iteration 300 of 1000: loss=0.0272 " + "l1=0.0228" + "l2=0.00442 f=-0.501 shape=(1, 9000, 1)
logits [[ 2.9553094 -2.1582701  2.5415993 -5.341968 ]]
Iteration 400 of 1000: loss=0.0256 " + "l1=0.0203" + "l2=0.00533 f=-0.502 shape=(1, 9000, 1)
logits [[ 2.9049225 -2.1533244  2.535728  -5.294197 ]]
Iteration 500 of 1000: loss=0.0242 " + "l1=0.0182" + "l2=0.00606 f=-0.502 shape=(1, 9000, 1)
logits [[ 2.8607943 -2.1487432  2.5304594 -5.2524524]]
Iteration 600 of 1000: loss=0.023 " + "l1=0.0164" + "l2=0.00663 f=-0.503 shape=(1, 9000, 1)
logits [[ 2.8215718 -2.143574   2.5238419 -5.215405 ]]
Iteration 700 of 1000: loss=0.0219 " + "l1=0.0145" + "l2=0.0074 f=-0.504 shape=(1, 9000, 1)
logits [[ 2.781205  -2.1379864  2.5167902 -5.177333 ]]
Iteration 800 of 1000: loss=0.0207 " + "l1=0.0126" + "l2=0.00804 f=-0.505 shape=(1, 9000, 1)
logits [[ 2.7383022 -2.131491   2.5087426 -5.1366115]]
Iteration 900 of 1000: loss=0.0192 " + "l1=0.0106" + "l2=0.00857 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.693324  -2.1242557  2.4998615 -5.0920725]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0517 " + "l1=0.0517" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.219314  -2.1602714  2.5518    -5.5921803]]
Iteration 100 of 1000: loss=0.0411 " + "l1=0.0363" + "l2=0.00479 f=-0.5 shape=(1, 9000, 1)
logits [[ 3.023909  -2.1705203  2.5559442 -5.409161 ]]
Iteration 200 of 1000: loss=0.0367 " + "l1=0.03" + "l2=0.00665 f=-0.502 shape=(1, 9000, 1)
logits [[ 2.935498  -2.165969   2.547855  -5.3235326]]
Iteration 300 of 1000: loss=0.0331 " + "l1=0.0246" + "l2=0.00854 f=-0.503 shape=(1, 9000, 1)
logits [[ 2.8545043 -2.157696   2.5374289 -5.2454524]]
Iteration 400 of 1000: loss=0.0302 " + "l1=0.0201" + "l2=0.0101 f=-0.504 shape=(1, 9000, 1)
logits [[ 2.7845383 -2.1493242  2.5258212 -5.177191 ]]
Iteration 500 of 1000: loss=0.0274 " + "l1=0.0156" + "l2=0.0117 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.713518  -2.1410844  2.5120277 -5.106876 ]]
Iteration 600 of 1000: loss=0.0245 " + "l1=0.0111" + "l2=0.0134 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.641114  -2.1305668  2.4980936 -5.0338006]]
Iteration 700 of 1000: loss=0.0216 " + "l1=0.00684" + "l2=0.0148 f=-0.507 shape=(1, 9000, 1)
logits [[ 2.5702872 -2.1178432  2.4820921 -4.9607744]]
Iteration 800 of 1000: loss=0.0187 " + "l1=0.00236" + "l2=0.0163 f=-0.505 shape=(1, 9000, 1)
logits [[ 2.4971242 -2.1035953  2.466723  -4.8815484]]
Iteration 900 of 1000: loss=0.0155 " + "l1=0" + "l2=0.0155 f=-0.504 shape=(1, 9000, 1)
logits [[ 2.453923  -2.089123   2.4540784 -4.83456  ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0442 " + "l1=0.0442" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.219314  -2.1602714  2.5518    -5.5921803]]
Iteration 100 of 1000: loss=0.0363 " + "l1=0.0326" + "l2=0.00365 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.0489373 -2.1695971  2.5561671 -5.4332266]]
Iteration 200 of 1000: loss=0.0331 " + "l1=0.0282" + "l2=0.00497 f=-0.501 shape=(1, 9000, 1)
logits [[ 2.9718168 -2.1630974  2.546743  -5.3577633]]
Iteration 300 of 1000: loss=0.0305 " + "l1=0.0242" + "l2=0.00633 f=-0.502 shape=(1, 9000, 1)
logits [[ 2.9055085 -2.158832   2.5403426 -5.2937994]]
Iteration 400 of 1000: loss=0.0283 " + "l1=0.0208" + "l2=0.0075 f=-0.503 shape=(1, 9000, 1)
logits [[ 2.8465018 -2.1521766  2.5324674 -5.237724 ]]
Iteration 500 of 1000: loss=0.0264 " + "l1=0.0178" + "l2=0.0086 f=-0.504 shape=(1, 9000, 1)
logits [[ 2.7917101 -2.1463544  2.523664  -5.18467  ]]
Iteration 600 of 1000: loss=0.0246 " + "l1=0.0149" + "l2=0.00963 f=-0.505 shape=(1, 9000, 1)
logits [[ 2.73856   -2.1395547  2.5133166 -5.1333504]]
Iteration 700 of 1000: loss=0.0226 " + "l1=0.0118" + "l2=0.0107 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.6806514 -2.1302254  2.5018399 -5.0767126]]
Iteration 800 of 1000: loss=0.0205 " + "l1=0.00888" + "l2=0.0116 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.6246214 -2.1212306  2.4906423 -5.0197363]]
Iteration 900 of 1000: loss=0.0185 " + "l1=0.00581" + "l2=0.0127 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.5654972 -2.1089916  2.4778538 -4.957899 ]]
--- 284.28209710121155 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0881 " + "l1=0.0881" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.219314  -2.1602714  2.5518    -5.5921803]]
Iteration 100 of 1000: loss=0.0866 " + "l1=0.086" + "l2=0.000677 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.1249118 -2.1291273  2.5115945 -5.4710426]]
Iteration 200 of 1000: loss=0.086 " + "l1=0.0852" + "l2=0.000838 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.09191   -2.119384   2.4980016 -5.4280424]]
Iteration 300 of 1000: loss=0.0855 " + "l1=0.0844" + "l2=0.00115 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.0560424 -2.1092956  2.4831386 -5.380184 ]]
Iteration 400 of 1000: loss=0.0851 " + "l1=0.0836" + "l2=0.00144 f=-0.486 shape=(1, 9000, 1)
logits [[ 3.0249636 -2.1007533  2.4692583 -5.3372498]]
Iteration 500 of 1000: loss=0.0847 " + "l1=0.0829" + "l2=0.00181 f=-0.484 shape=(1, 9000, 1)
logits [[ 2.9956374 -2.0926158  2.4555435 -5.2961993]]
Iteration 600 of 1000: loss=0.0844 " + "l1=0.0823" + "l2=0.00209 f=-0.483 shape=(1, 9000, 1)
logits [[ 2.968684  -2.084728   2.443084  -5.2589116]]
Iteration 700 of 1000: loss=0.0841 " + "l1=0.0817" + "l2=0.00243 f=-0.482 shape=(1, 9000, 1)
logits [[ 2.942872  -2.077227   2.4315133 -5.223509 ]]
Iteration 800 of 1000: loss=0.0838 " + "l1=0.081" + "l2=0.00274 f=-0.48 shape=(1, 9000, 1)
logits [[ 2.9159424 -2.0694537  2.4191475 -5.187254 ]]
Iteration 900 of 1000: loss=0.0835 " + "l1=0.0805" + "l2=0.00306 f=-0.479 shape=(1, 9000, 1)
logits [[ 2.892297  -2.062587   2.4081945 -5.1545544]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.881 " + "l1=0.881" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.219314  -2.1602714  2.5518    -5.5921803]]
Iteration 100 of 1000: loss=0.744 " + "l1=0.685" + "l2=0.0592 f=-0.467 shape=(1, 9000, 1)
logits [[ 2.3520544 -1.9091343  2.184897  -4.4943104]]
Iteration 200 of 1000: loss=0.664 " + "l1=0.591" + "l2=0.0738 f=-0.432 shape=(1, 9000, 1)
logits [[ 1.9737295 -1.7489054  1.9756459 -3.9301655]]
Iteration 300 of 1000: loss=0.612 " + "l1=0.515" + "l2=0.0968 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.6555887 -1.5967582  1.7458073 -3.404332 ]]
Iteration 400 of 1000: loss=0.557 " + "l1=0.439" + "l2=0.118 f=-0.367 shape=(1, 9000, 1)
logits [[ 1.3247933 -1.4725482  1.5367795 -2.8567908]]
Iteration 500 of 1000: loss=0.505 " + "l1=0.363" + "l2=0.142 f=-0.328 shape=(1, 9000, 1)
logits [[ 0.9937229 -1.3358097  1.3285093 -2.2965453]]
Iteration 600 of 1000: loss=0.453 " + "l1=0.278" + "l2=0.174 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.66162324 -1.1860875   1.0803348  -1.7042594 ]]
Iteration 700 of 1000: loss=0.407 " + "l1=0.219" + "l2=0.188 f=-0.259 shape=(1, 9000, 1)
logits [[ 0.49116692 -1.0852494   0.87521386 -1.3156832 ]]
Iteration 800 of 1000: loss=0.362 " + "l1=0.158" + "l2=0.204 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.33072582 -1.0022603   0.66085106 -0.91529685]]
Iteration 900 of 1000: loss=0.331 " + "l1=0.115" + "l2=0.216 f=-0.223 shape=(1, 9000, 1)
logits [[ 0.19603121 -0.98855275  0.5225881  -0.6237472 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.81 " + "l1=8.81" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.219314  -2.1602714  2.5518    -5.5921803]]
Iteration 100 of 1000: loss=1.64 " + "l1=0.0224" + "l2=1.62 f=-0.241 shape=(1, 9000, 1)
logits [[-0.7021878  -0.80112714  0.2814014   0.25904047]]
Iteration 200 of 1000: loss=0.927 " + "l1=0.0258" + "l2=0.901 f=-0.24 shape=(1, 9000, 1)
logits [[-0.61035436 -0.8659571   0.27123377  0.24547729]]
Iteration 300 of 1000: loss=0.729 " + "l1=0" + "l2=0.729 f=-0.246 shape=(1, 9000, 1)
logits [[-0.5860887  -0.97747684  0.28783956  0.29212585]]
Iteration 400 of 1000: loss=0.647 " + "l1=0" + "l2=0.647 f=-0.244 shape=(1, 9000, 1)
logits [[-0.5590951 -1.0230446  0.3007825  0.3063558]]
Iteration 500 of 1000: loss=0.607 " + "l1=0" + "l2=0.607 f=-0.239 shape=(1, 9000, 1)
logits [[-0.5634437  -1.0262226   0.28110087  0.35366485]]
Iteration 600 of 1000: loss=0.555 " + "l1=0" + "l2=0.555 f=-0.235 shape=(1, 9000, 1)
logits [[-0.5160348  -1.0365397   0.29533044  0.31725383]]
Iteration 700 of 1000: loss=0.517 " + "l1=0" + "l2=0.517 f=-0.228 shape=(1, 9000, 1)
logits [[-0.4788256  -1.0313815   0.29003522  0.30928147]]
Iteration 800 of 1000: loss=0.482 " + "l1=0" + "l2=0.482 f=-0.215 shape=(1, 9000, 1)
logits [[-0.42646527 -1.0219567   0.28524712  0.30152732]]
Iteration 900 of 1000: loss=0.448 " + "l1=0.00304" + "l2=0.445 f=-0.204 shape=(1, 9000, 1)
logits [[-0.36458644 -1.0174495   0.28508505  0.2820416 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.85 " + "l1=4.85" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.219314  -2.1602714  2.5518    -5.5921803]]
Iteration 100 of 1000: loss=1.87 " + "l1=0.789" + "l2=1.09 f=-0.292 shape=(1, 9000, 1)
logits [[-0.20763126 -1.0343692   0.7541847  -0.6796985 ]]
Iteration 200 of 1000: loss=0.773 " + "l1=0.0161" + "l2=0.757 f=-0.258 shape=(1, 9000, 1)
logits [[-0.61802167 -0.90708715  0.26105905  0.23171145]]
Iteration 300 of 1000: loss=0.624 " + "l1=0" + "l2=0.624 f=-0.257 shape=(1, 9000, 1)
logits [[-0.5968724  -0.99070305  0.25769415  0.30372697]]
Iteration 400 of 1000: loss=0.538 " + "l1=0.00229" + "l2=0.536 f=-0.25 shape=(1, 9000, 1)
logits [[-0.5273538  -1.027008    0.27872974  0.27456418]]
Iteration 500 of 1000: loss=0.487 " + "l1=0" + "l2=0.487 f=-0.239 shape=(1, 9000, 1)
logits [[-0.50014687 -1.0176178   0.26018432  0.30214983]]
Iteration 600 of 1000: loss=0.434 " + "l1=0" + "l2=0.434 f=-0.222 shape=(1, 9000, 1)
logits [[-0.42840877 -0.9984483   0.2553756   0.28509313]]
Iteration 700 of 1000: loss=0.394 " + "l1=0" + "l2=0.394 f=-0.213 shape=(1, 9000, 1)
logits [[-0.36740974 -1.0108168   0.25585306  0.2701956 ]]
Iteration 800 of 1000: loss=0.371 " + "l1=0.00448" + "l2=0.366 f=-0.211 shape=(1, 9000, 1)
logits [[-0.33102754 -1.0206391   0.2587396   0.2505962 ]]
Iteration 900 of 1000: loss=0.353 " + "l1=0" + "l2=0.353 f=-0.209 shape=(1, 9000, 1)
logits [[-0.33309534 -1.020741    0.2426655   0.27567816]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.86 " + "l1=2.86" + "l2=0 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.219314  -2.1602714  2.5518    -5.5921803]]
Iteration 100 of 1000: loss=1.69 " + "l1=1.28" + "l2=0.405 f=-0.338 shape=(1, 9000, 1)
logits [[ 1.0499612 -1.2803079  1.41584   -2.5362823]]
Iteration 200 of 1000: loss=0.885 " + "l1=0.212" + "l2=0.673 f=-0.279 shape=(1, 9000, 1)
logits [[-0.4421617  -0.93245     0.45457762 -0.19734398]]
Iteration 300 of 1000: loss=0.571 " + "l1=0.00309" + "l2=0.568 f=-0.256 shape=(1, 9000, 1)
logits [[-0.5647869  -0.95724136  0.25317842  0.24365911]]
Iteration 400 of 1000: loss=0.466 " + "l1=0.00134" + "l2=0.465 f=-0.234 shape=(1, 9000, 1)
logits [[-0.4498882  -0.9752244   0.24710266  0.24296927]]
Iteration 500 of 1000: loss=0.401 " + "l1=0" + "l2=0.401 f=-0.222 shape=(1, 9000, 1)
logits [[-0.3675001  -1.0050194   0.23807879  0.24643216]]
Iteration 600 of 1000: loss=0.368 " + "l1=0" + "l2=0.368 f=-0.221 shape=(1, 9000, 1)
logits [[-0.34125975 -1.0208377   0.23147649  0.24795565]]
Iteration 700 of 1000: loss=0.345 " + "l1=0" + "l2=0.345 f=-0.219 shape=(1, 9000, 1)
logits [[-0.31242543 -1.0258446   0.2302251   0.23380744]]
Iteration 800 of 1000: loss=0.326 " + "l1=0.000126" + "l2=0.326 f=-0.216 shape=(1, 9000, 1)
logits [[-0.29010978 -1.0249418   0.22555356  0.22516677]]
Iteration 900 of 1000: loss=0.308 " + "l1=0" + "l2=0.308 f=-0.212 shape=(1, 9000, 1)
logits [[-0.26617363 -1.0229317   0.21720578  0.22221488]]
--- 308.68878722190857 seconds ---
Adv result:3
Loading record A07028
(1, 4938)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0558 " + "l1=0.0558" + "l2=0 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.7184172 -2.8604128  1.4581914 -2.5209432]]
Iteration 100 of 1000: loss=0.0553 " + "l1=0.0551" + "l2=0.000289 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.6725738 -2.832672   1.438157  -2.4811516]]
Iteration 200 of 1000: loss=0.0552 " + "l1=0.0549" + "l2=0.000287 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.663069  -2.8265314  1.4332424 -2.4739807]]
Iteration 300 of 1000: loss=0.0551 " + "l1=0.0547" + "l2=0.000359 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.6508155 -2.8190126  1.4273956 -2.4642415]]
Iteration 400 of 1000: loss=0.055 " + "l1=0.0545" + "l2=0.000453 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.6393247 -2.8123538  1.4224212 -2.4549727]]
Iteration 500 of 1000: loss=0.0549 " + "l1=0.0543" + "l2=0.000544 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.6274483 -2.8064697  1.4181602 -2.4447846]]
Iteration 600 of 1000: loss=0.0548 " + "l1=0.0542" + "l2=0.000653 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.615783  -2.8015988  1.4145885 -2.4342756]]
Iteration 700 of 1000: loss=0.0548 " + "l1=0.054" + "l2=0.000755 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.604554  -2.7976718  1.4117445 -2.423656 ]]
Iteration 800 of 1000: loss=0.0548 " + "l1=0.0539" + "l2=0.000913 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.593068  -2.7941637  1.4091796 -2.412591 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.558 " + "l1=0.558" + "l2=0 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.7184172 -2.8604128  1.4581914 -2.5209432]]
Iteration 100 of 1000: loss=0.518 " + "l1=0.495" + "l2=0.0229 f=-0.291 shape=(1, 9000, 1)
logits [[ 2.329452  -2.6215599  1.3032888 -2.1740885]]
Iteration 200 of 1000: loss=0.499 " + "l1=0.469" + "l2=0.0302 f=-0.288 shape=(1, 9000, 1)
logits [[ 2.1654263 -2.526636   1.2392696 -2.0298676]]
Iteration 300 of 1000: loss=0.483 " + "l1=0.445" + "l2=0.0381 f=-0.286 shape=(1, 9000, 1)
logits [[ 2.0052419 -2.4413207  1.1781011 -1.8872637]]
Iteration 400 of 1000: loss=0.468 " + "l1=0.423" + "l2=0.0449 f=-0.287 shape=(1, 9000, 1)
logits [[ 1.8606257 -2.3688705  1.1150682 -1.7547678]]
Iteration 500 of 1000: loss=0.456 " + "l1=0.405" + "l2=0.0503 f=-0.287 shape=(1, 9000, 1)
logits [[ 1.7337148 -2.31943    1.0662478 -1.630415 ]]
Iteration 600 of 1000: loss=0.444 " + "l1=0.389" + "l2=0.0555 f=-0.285 shape=(1, 9000, 1)
logits [[ 1.611125  -2.2768488  1.031055  -1.5050672]]
Iteration 700 of 1000: loss=0.43 " + "l1=0.368" + "l2=0.0618 f=-0.283 shape=(1, 9000, 1)
logits [[ 1.4618412 -2.2157702  0.9924987 -1.3694575]]
Iteration 800 of 1000: loss=0.414 " + "l1=0.345" + "l2=0.0686 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.3079985  -2.1444416   0.95315033 -1.2413145 ]]
Iteration 900 of 1000: loss=0.401 " + "l1=0.329" + "l2=0.0717 f=-0.28 shape=(1, 9000, 1)
logits [[ 1.184185  -2.1089804  0.941632  -1.1354914]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.58 " + "l1=5.58" + "l2=0 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.7184172 -2.8604128  1.4581914 -2.5209432]]
Iteration 100 of 1000: loss=1.98 " + "l1=0.521" + "l2=1.46 f=-0.348 shape=(1, 9000, 1)
logits [[-0.14634421 -0.646189   -0.12497193 -0.4742735 ]]
Iteration 200 of 1000: loss=1.26 " + "l1=0.00915" + "l2=1.25 f=-0.38 shape=(1, 9000, 1)
logits [[-0.37192073 -0.3810688  -0.37191677 -0.3942085 ]]
Iteration 300 of 1000: loss=1.08 " + "l1=0.0053" + "l2=1.07 f=-0.388 shape=(1, 9000, 1)
logits [[-0.38509792 -0.38963473 -0.38433695 -0.3939427 ]]
Iteration 400 of 1000: loss=0.972 " + "l1=0" + "l2=0.972 f=-0.407 shape=(1, 9000, 1)
logits [[-0.42348477 -0.38893154 -0.39244723 -0.42267373]]
Iteration 500 of 1000: loss=0.875 " + "l1=0.00308" + "l2=0.872 f=-0.415 shape=(1, 9000, 1)
logits [[-0.41255715 -0.41011894 -0.43141934 -0.40703773]]
Iteration 600 of 1000: loss=0.806 " + "l1=0" + "l2=0.806 f=-0.423 shape=(1, 9000, 1)
logits [[-0.4442754  -0.40269876 -0.42949226 -0.41442862]]
Iteration 700 of 1000: loss=0.731 " + "l1=0" + "l2=0.731 f=-0.425 shape=(1, 9000, 1)
logits [[-0.43268803 -0.41146234 -0.42304984 -0.4320468 ]]
Iteration 800 of 1000: loss=0.677 " + "l1=0" + "l2=0.677 f=-0.428 shape=(1, 9000, 1)
logits [[-0.45814857 -0.4010858  -0.43815753 -0.41293257]]
Iteration 900 of 1000: loss=0.625 " + "l1=0" + "l2=0.625 f=-0.431 shape=(1, 9000, 1)
logits [[-0.46956745 -0.391338   -0.44882098 -0.4157827 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.07 " + "l1=3.07" + "l2=0 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.7184172 -2.8604128  1.4581914 -2.5209432]]
Iteration 100 of 1000: loss=1.74 " + "l1=0.985" + "l2=0.753 f=-0.31 shape=(1, 9000, 1)
logits [[ 0.42840192 -1.3578123   0.43242776 -0.74201053]]
Iteration 200 of 1000: loss=1.29 " + "l1=0.454" + "l2=0.837 f=-0.337 shape=(1, 9000, 1)
logits [[-0.01043937 -0.8308818  -0.00498793 -0.5012949 ]]
Iteration 300 of 1000: loss=1.07 " + "l1=0.21" + "l2=0.859 f=-0.36 shape=(1, 9000, 1)
logits [[-0.24805924 -0.62295645 -0.24178861 -0.32710347]]
Iteration 400 of 1000: loss=0.949 " + "l1=0.13" + "l2=0.819 f=-0.384 shape=(1, 9000, 1)
logits [[-0.32077035 -0.5535385  -0.31777614 -0.34303886]]
Iteration 500 of 1000: loss=0.867 " + "l1=0.0831" + "l2=0.784 f=-0.395 shape=(1, 9000, 1)
logits [[-0.34806702 -0.49923718 -0.35586888 -0.37611014]]
Iteration 600 of 1000: loss=0.771 " + "l1=0.00719" + "l2=0.764 f=-0.402 shape=(1, 9000, 1)
logits [[-0.40522802 -0.40845194 -0.3953808  -0.3993763 ]]
Iteration 700 of 1000: loss=0.698 " + "l1=0.00609" + "l2=0.692 f=-0.407 shape=(1, 9000, 1)
logits [[-0.40707162 -0.41424295 -0.40317762 -0.40444994]]
Iteration 800 of 1000: loss=0.635 " + "l1=0.00807" + "l2=0.627 f=-0.41 shape=(1, 9000, 1)
logits [[-0.42993158 -0.4105157  -0.40566877 -0.39584088]]
Iteration 900 of 1000: loss=0.567 " + "l1=0.00974" + "l2=0.557 f=-0.406 shape=(1, 9000, 1)
logits [[-0.40114096 -0.40444043 -0.38673866 -0.43285406]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.81 " + "l1=1.81" + "l2=0 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.7184172 -2.8604128  1.4581914 -2.5209432]]
Iteration 100 of 1000: loss=1.36 " + "l1=1.09" + "l2=0.263 f=-0.263 shape=(1, 9000, 1)
logits [[ 1.359355   -2.0051322   0.88245463 -1.2897465 ]]
Iteration 200 of 1000: loss=1.15 " + "l1=0.795" + "l2=0.357 f=-0.295 shape=(1, 9000, 1)
logits [[ 0.7986239  -1.6487797   0.60617346 -0.93585265]]
Iteration 300 of 1000: loss=0.987 " + "l1=0.545" + "l2=0.442 f=-0.32 shape=(1, 9000, 1)
logits [[ 0.3852458  -1.292241    0.38338566 -0.7545916 ]]
Iteration 400 of 1000: loss=0.893 " + "l1=0.451" + "l2=0.442 f=-0.329 shape=(1, 9000, 1)
logits [[ 0.2195193  -1.1643698   0.22293907 -0.59269994]]
Iteration 500 of 1000: loss=0.826 " + "l1=0.374" + "l2=0.452 f=-0.342 shape=(1, 9000, 1)
logits [[ 0.07790811 -1.0664697   0.0829446  -0.46262395]]
Iteration 600 of 1000: loss=0.763 " + "l1=0.295" + "l2=0.468 f=-0.353 shape=(1, 9000, 1)
logits [[-0.06966615 -0.9762239  -0.07121908 -0.29450366]]
Iteration 700 of 1000: loss=0.698 " + "l1=0.24" + "l2=0.458 f=-0.36 shape=(1, 9000, 1)
logits [[-0.17907116 -0.90999115 -0.17811902 -0.17261353]]
Iteration 800 of 1000: loss=0.643 " + "l1=0.204" + "l2=0.438 f=-0.367 shape=(1, 9000, 1)
logits [[-0.21862194 -0.8330798  -0.20455343 -0.21043989]]
Iteration 900 of 1000: loss=0.603 " + "l1=0.18" + "l2=0.423 f=-0.383 shape=(1, 9000, 1)
logits [[-0.23782495 -0.7795985  -0.22700106 -0.28573972]]
--- 296.56985330581665 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0126 " + "l1=0.0126" + "l2=0 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.7184172 -2.8604128  1.4581914 -2.5209432]]
Iteration 100 of 1000: loss=0.0124 " + "l1=0.0122" + "l2=0.00016 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.689203  -2.8621955  1.4661112 -2.496331 ]]
Iteration 200 of 1000: loss=0.0123 " + "l1=0.0122" + "l2=0.000129 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.6857438 -2.862656   1.4673597 -2.4941542]]
Iteration 300 of 1000: loss=0.0122 " + "l1=0.0121" + "l2=0.000142 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.6789646 -2.8630826  1.4691336 -2.4890072]]
Iteration 400 of 1000: loss=0.0122 " + "l1=0.012" + "l2=0.000189 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.6713927 -2.8636432  1.4710778 -2.4831624]]
Iteration 500 of 1000: loss=0.0121 " + "l1=0.0119" + "l2=0.00022 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.6638367 -2.8641768  1.4731045 -2.4772317]]
Iteration 600 of 1000: loss=0.0121 " + "l1=0.0118" + "l2=0.000342 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.655647  -2.8644006  1.4750419 -2.4705637]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.126 " + "l1=0.126" + "l2=0 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.7184172 -2.8604128  1.4581914 -2.5209432]]
Iteration 100 of 1000: loss=0.108 " + "l1=0.0994" + "l2=0.00899 f=-0.296 shape=(1, 9000, 1)
logits [[ 2.4999516 -2.8553655  1.5062314 -2.3341336]]
Iteration 200 of 1000: loss=0.1 " + "l1=0.0886" + "l2=0.0117 f=-0.293 shape=(1, 9000, 1)
logits [[ 2.409817  -2.8584845  1.5242053 -2.2483497]]
Iteration 300 of 1000: loss=0.0917 " + "l1=0.0776" + "l2=0.0141 f=-0.291 shape=(1, 9000, 1)
logits [[ 2.3159707 -2.8574204  1.5401824 -2.1633465]]
Iteration 400 of 1000: loss=0.083 " + "l1=0.0666" + "l2=0.0164 f=-0.289 shape=(1, 9000, 1)
logits [[ 2.2179441 -2.8531103  1.5520761 -2.072784 ]]
Iteration 500 of 1000: loss=0.0728 " + "l1=0.0537" + "l2=0.0191 f=-0.29 shape=(1, 9000, 1)
logits [[ 2.1053872 -2.8527195  1.5681897 -1.9812031]]
Iteration 600 of 1000: loss=0.0592 " + "l1=0.0352" + "l2=0.024 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.9605592 -2.863149   1.60862   -1.8797953]]
Iteration 700 of 1000: loss=0.0444 " + "l1=0.0172" + "l2=0.0272 f=-0.292 shape=(1, 9000, 1)
logits [[ 1.8259196 -2.8619406  1.6536664 -1.7875104]]
Iteration 800 of 1000: loss=0.0305 " + "l1=0.000662" + "l2=0.0299 f=-0.291 shape=(1, 9000, 1)
logits [[ 1.7022848 -2.8601592  1.6956651 -1.7005332]]
Iteration 900 of 1000: loss=0.0229 " + "l1=0" + "l2=0.0229 f=-0.292 shape=(1, 9000, 1)
logits [[ 1.6955912 -2.8641968  1.6974788 -1.69704  ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0693 " + "l1=0.0693" + "l2=0 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.7184172 -2.8604128  1.4581914 -2.5209432]]
Iteration 100 of 1000: loss=0.0639 " + "l1=0.0613" + "l2=0.00261 f=-0.299 shape=(1, 9000, 1)
logits [[ 2.6009457 -2.8611522  1.4865924 -2.4234698]]
Iteration 200 of 1000: loss=0.0615 " + "l1=0.0581" + "l2=0.00342 f=-0.298 shape=(1, 9000, 1)
logits [[ 2.5549045 -2.8646262  1.4990389 -2.3825574]]
Iteration 300 of 1000: loss=0.059 " + "l1=0.0549" + "l2=0.0041 f=-0.298 shape=(1, 9000, 1)
logits [[ 2.5060904 -2.8656754  1.5078268 -2.339237 ]]
Iteration 400 of 1000: loss=0.0564 " + "l1=0.0519" + "l2=0.00456 f=-0.297 shape=(1, 9000, 1)
logits [[ 2.4581177 -2.8656702  1.5152211 -2.296174 ]]
Iteration 500 of 1000: loss=0.0538 " + "l1=0.0485" + "l2=0.00522 f=-0.297 shape=(1, 9000, 1)
logits [[ 2.403948  -2.863215   1.521282  -2.2487552]]
Iteration 600 of 1000: loss=0.0509 " + "l1=0.0451" + "l2=0.00571 f=-0.296 shape=(1, 9000, 1)
logits [[ 2.347176  -2.8586068  1.5263373 -2.199482 ]]
Iteration 700 of 1000: loss=0.048 " + "l1=0.0416" + "l2=0.00638 f=-0.295 shape=(1, 9000, 1)
logits [[ 2.2886684 -2.8552835  1.5319984 -2.1470609]]
Iteration 800 of 1000: loss=0.045 " + "l1=0.038" + "l2=0.00696 f=-0.295 shape=(1, 9000, 1)
logits [[ 2.2283356 -2.850146   1.5365672 -2.092984 ]]
Iteration 900 of 1000: loss=0.0419 " + "l1=0.0342" + "l2=0.0077 f=-0.295 shape=(1, 9000, 1)
logits [[ 2.1641362 -2.8467102  1.5425147 -2.0391057]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0977 " + "l1=0.0977" + "l2=0 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.7184172 -2.8604128  1.4581914 -2.5209432]]
Iteration 100 of 1000: loss=0.087 " + "l1=0.0817" + "l2=0.00534 f=-0.297 shape=(1, 9000, 1)
logits [[ 2.5512118 -2.8586094  1.4970063 -2.3795397]]
Iteration 200 of 1000: loss=0.0822 " + "l1=0.0752" + "l2=0.00694 f=-0.296 shape=(1, 9000, 1)
logits [[ 2.4832964 -2.8624957  1.512529  -2.3172607]]
Iteration 300 of 1000: loss=0.0772 " + "l1=0.0692" + "l2=0.00804 f=-0.295 shape=(1, 9000, 1)
logits [[ 2.415624  -2.8631039  1.5232291 -2.255896 ]]
Iteration 400 of 1000: loss=0.0719 " + "l1=0.0625" + "l2=0.00941 f=-0.294 shape=(1, 9000, 1)
logits [[ 2.3410149 -2.8618953  1.5349034 -2.1881843]]
Iteration 500 of 1000: loss=0.0663 " + "l1=0.056" + "l2=0.0103 f=-0.293 shape=(1, 9000, 1)
logits [[ 2.2647536 -2.8580189  1.5420642 -2.1201198]]
Iteration 600 of 1000: loss=0.0606 " + "l1=0.0489" + "l2=0.0117 f=-0.292 shape=(1, 9000, 1)
logits [[ 2.17999   -2.8510764  1.5495207 -2.0474756]]
Iteration 700 of 1000: loss=0.0533 " + "l1=0.0397" + "l2=0.0136 f=-0.295 shape=(1, 9000, 1)
logits [[ 2.0804472 -2.8539922  1.5687461 -1.975556 ]]
Iteration 800 of 1000: loss=0.0454 " + "l1=0.029" + "l2=0.0164 f=-0.296 shape=(1, 9000, 1)
logits [[ 1.9729407 -2.8606668  1.59823   -1.8960373]]
Iteration 900 of 1000: loss=0.0364 " + "l1=0.0168" + "l2=0.0196 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.8531015 -2.8610594  1.6366848 -1.8079118]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.112 " + "l1=0.112" + "l2=0 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.7184172 -2.8604128  1.4581914 -2.5209432]]
Iteration 100 of 1000: loss=0.0979 " + "l1=0.0908" + "l2=0.00711 f=-0.297 shape=(1, 9000, 1)
logits [[ 2.5247796 -2.8571858  1.5019679 -2.3562918]]
Iteration 200 of 1000: loss=0.0916 " + "l1=0.0825" + "l2=0.00905 f=-0.295 shape=(1, 9000, 1)
logits [[ 2.4479845 -2.8610656  1.5182484 -2.284056 ]]
Iteration 300 of 1000: loss=0.0849 " + "l1=0.074" + "l2=0.0108 f=-0.293 shape=(1, 9000, 1)
logits [[ 2.3675094 -2.8619356  1.5332626 -2.211049 ]]
Iteration 400 of 1000: loss=0.0779 " + "l1=0.0654" + "l2=0.0125 f=-0.291 shape=(1, 9000, 1)
logits [[ 2.2809384 -2.8584404  1.5441166 -2.1319408]]
Iteration 500 of 1000: loss=0.0705 " + "l1=0.0564" + "l2=0.0141 f=-0.291 shape=(1, 9000, 1)
logits [[ 2.1872525 -2.8525088  1.5521344 -2.0502055]]
Iteration 600 of 1000: loss=0.0614 " + "l1=0.0447" + "l2=0.0167 f=-0.294 shape=(1, 9000, 1)
logits [[ 2.0779636 -2.8562984  1.57418   -1.9703405]]
Iteration 700 of 1000: loss=0.05 " + "l1=0.0291" + "l2=0.021 f=-0.294 shape=(1, 9000, 1)
logits [[ 1.9405879 -2.862901   1.6129107 -1.8684851]]
Iteration 800 of 1000: loss=0.0384 " + "l1=0.0147" + "l2=0.0237 f=-0.292 shape=(1, 9000, 1)
logits [[ 1.8210149 -2.860515   1.6555284 -1.7837231]]
Iteration 900 of 1000: loss=0.0279 " + "l1=0.00199" + "l2=0.0259 f=-0.29 shape=(1, 9000, 1)
logits [[ 1.7141705 -2.859031   1.6917639 -1.7064962]]
--- 286.3671123981476 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0524 " + "l1=0.0524" + "l2=0 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.7184172 -2.8604128  1.4581914 -2.5209432]]
Iteration 100 of 1000: loss=0.0515 " + "l1=0.051" + "l2=0.000446 f=-0.297 shape=(1, 9000, 1)
logits [[ 2.6584241 -2.8414812  1.4419733 -2.4458964]]
Iteration 200 of 1000: loss=0.0512 " + "l1=0.0507" + "l2=0.000488 f=-0.296 shape=(1, 9000, 1)
logits [[ 2.6435583 -2.8379424  1.4377677 -2.4262764]]
Iteration 300 of 1000: loss=0.0509 " + "l1=0.0503" + "l2=0.000592 f=-0.295 shape=(1, 9000, 1)
logits [[ 2.6252208 -2.8338597  1.4328805 -2.4022977]]
Iteration 400 of 1000: loss=0.0505 " + "l1=0.0498" + "l2=0.000712 f=-0.293 shape=(1, 9000, 1)
logits [[ 2.6048644 -2.8298886  1.4281449 -2.3761537]]
Iteration 500 of 1000: loss=0.0502 " + "l1=0.0493" + "l2=0.000853 f=-0.292 shape=(1, 9000, 1)
logits [[ 2.5838513 -2.8265202  1.4237587 -2.3493338]]
Iteration 600 of 1000: loss=0.0499 " + "l1=0.0488" + "l2=0.00107 f=-0.291 shape=(1, 9000, 1)
logits [[ 2.5615637 -2.8234105  1.4195361 -2.3211908]]
Iteration 700 of 1000: loss=0.0496 " + "l1=0.0483" + "l2=0.00128 f=-0.29 shape=(1, 9000, 1)
logits [[ 2.5392032 -2.8199406  1.415139  -2.2929895]]
Iteration 800 of 1000: loss=0.0493 " + "l1=0.0478" + "l2=0.00145 f=-0.288 shape=(1, 9000, 1)
logits [[ 2.5171826 -2.8165765  1.4109677 -2.2653136]]
Iteration 900 of 1000: loss=0.049 " + "l1=0.0473" + "l2=0.00165 f=-0.287 shape=(1, 9000, 1)
logits [[ 2.4952447 -2.8132577  1.4070216 -2.238075 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.524 " + "l1=0.524" + "l2=0 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.7184172 -2.8604128  1.4581914 -2.5209432]]
Iteration 100 of 1000: loss=0.438 " + "l1=0.389" + "l2=0.0489 f=-0.247 shape=(1, 9000, 1)
logits [[ 2.1176105 -2.6445003  1.3081913 -1.7703303]]
Iteration 200 of 1000: loss=0.389 " + "l1=0.322" + "l2=0.067 f=-0.227 shape=(1, 9000, 1)
logits [[ 1.8306255 -2.5679266  1.2130136 -1.385094 ]]
Iteration 300 of 1000: loss=0.339 " + "l1=0.256" + "l2=0.0826 f=-0.218 shape=(1, 9000, 1)
logits [[ 1.5532568 -2.5267503  1.1138124 -1.0108825]]
Iteration 400 of 1000: loss=0.298 " + "l1=0.212" + "l2=0.0856 f=-0.215 shape=(1, 9000, 1)
logits [[ 1.3604186 -2.4989004  1.0433621 -0.7642414]]
Iteration 500 of 1000: loss=0.261 " + "l1=0.166" + "l2=0.0943 f=-0.213 shape=(1, 9000, 1)
logits [[ 1.1564642 -2.4728081  0.9691858 -0.5062056]]
Iteration 600 of 1000: loss=0.22 " + "l1=0.115" + "l2=0.105 f=-0.216 shape=(1, 9000, 1)
logits [[ 0.91813797 -2.4610455   0.9053259  -0.22709087]]
Iteration 700 of 1000: loss=0.18 " + "l1=0.084" + "l2=0.0957 f=-0.221 shape=(1, 9000, 1)
logits [[ 0.80130404 -2.4466794   0.7986668  -0.03851796]]
Iteration 800 of 1000: loss=0.138 " + "l1=0.0448" + "l2=0.0931 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.66224253 -2.4276385   0.6667286   0.21865773]]
Iteration 900 of 1000: loss=0.0878 " + "l1=0" + "l2=0.0878 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.5064817 -2.4116297  0.5096042  0.5145335]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.288 " + "l1=0.288" + "l2=0 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.7184172 -2.8604128  1.4581914 -2.5209432]]
Iteration 100 of 1000: loss=0.263 " + "l1=0.251" + "l2=0.0126 f=-0.277 shape=(1, 9000, 1)
logits [[ 2.4147909 -2.7565067  1.3811322 -2.1473248]]
Iteration 200 of 1000: loss=0.25 " + "l1=0.233" + "l2=0.0172 f=-0.266 shape=(1, 9000, 1)
logits [[ 2.2741802 -2.7167525  1.3451581 -1.9664221]]
Iteration 300 of 1000: loss=0.236 " + "l1=0.215" + "l2=0.0216 f=-0.257 shape=(1, 9000, 1)
logits [[ 2.1285803 -2.6789622  1.2996739 -1.7773458]]
Iteration 400 of 1000: loss=0.223 " + "l1=0.197" + "l2=0.0259 f=-0.25 shape=(1, 9000, 1)
logits [[ 1.9877465 -2.6469479  1.2491156 -1.5917807]]
Iteration 500 of 1000: loss=0.209 " + "l1=0.179" + "l2=0.03 f=-0.246 shape=(1, 9000, 1)
logits [[ 1.8500606 -2.6278138  1.2031478 -1.4112748]]
Iteration 600 of 1000: loss=0.194 " + "l1=0.16" + "l2=0.0341 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.6981562 -2.6171148  1.1615283 -1.2123485]]
Iteration 700 of 1000: loss=0.178 " + "l1=0.142" + "l2=0.0367 f=-0.241 shape=(1, 9000, 1)
logits [[ 1.5493884 -2.6079926  1.1207182 -1.0272133]]
Iteration 800 of 1000: loss=0.165 " + "l1=0.126" + "l2=0.0391 f=-0.239 shape=(1, 9000, 1)
logits [[ 1.4267125  -2.595881    1.0831438  -0.86931485]]
Iteration 900 of 1000: loss=0.152 " + "l1=0.11" + "l2=0.0422 f=-0.239 shape=(1, 9000, 1)
logits [[ 1.2947513 -2.590559   1.0433275 -0.704714 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.406 " + "l1=0.406" + "l2=0 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.7184172 -2.8604128  1.4581914 -2.5209432]]
Iteration 100 of 1000: loss=0.356 " + "l1=0.329" + "l2=0.0273 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.2704992 -2.7020621  1.3475175 -1.9715931]]
Iteration 200 of 1000: loss=0.328 " + "l1=0.291" + "l2=0.0373 f=-0.25 shape=(1, 9000, 1)
logits [[ 2.059558  -2.646714   1.2838438 -1.6954826]]
Iteration 300 of 1000: loss=0.3 " + "l1=0.256" + "l2=0.0441 f=-0.24 shape=(1, 9000, 1)
logits [[ 1.8689156 -2.6035004  1.2157719 -1.4392798]]
Iteration 400 of 1000: loss=0.272 " + "l1=0.219" + "l2=0.0535 f=-0.233 shape=(1, 9000, 1)
logits [[ 1.6598499 -2.5727975  1.1424353 -1.1624013]]
Iteration 500 of 1000: loss=0.245 " + "l1=0.187" + "l2=0.0576 f=-0.231 shape=(1, 9000, 1)
logits [[ 1.4813948  -2.5618305   1.0907066  -0.93240553]]
Iteration 600 of 1000: loss=0.22 " + "l1=0.159" + "l2=0.0617 f=-0.229 shape=(1, 9000, 1)
logits [[ 1.323974   -2.5502703   1.0357255  -0.72420424]]
Iteration 700 of 1000: loss=0.195 " + "l1=0.13" + "l2=0.0655 f=-0.232 shape=(1, 9000, 1)
logits [[ 1.1575701 -2.549419   0.9804315 -0.5174215]]
Iteration 800 of 1000: loss=0.163 " + "l1=0.0915" + "l2=0.0717 f=-0.237 shape=(1, 9000, 1)
logits [[ 0.9237764  -2.5396676   0.92409956 -0.25641042]]
Iteration 900 of 1000: loss=0.132 " + "l1=0.0652" + "l2=0.0668 f=-0.233 shape=(1, 9000, 1)
logits [[ 0.8081178  -2.517258    0.8086379  -0.03324807]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.465 " + "l1=0.465" + "l2=0 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.7184172 -2.8604128  1.4581914 -2.5209432]]
Iteration 100 of 1000: loss=0.398 " + "l1=0.361" + "l2=0.0372 f=-0.256 shape=(1, 9000, 1)
logits [[ 2.193533  -2.6741195  1.3293608 -1.8742837]]
Iteration 200 of 1000: loss=0.361 " + "l1=0.31" + "l2=0.0513 f=-0.239 shape=(1, 9000, 1)
logits [[ 1.9454513 -2.6079082  1.2507848 -1.5434921]]
Iteration 300 of 1000: loss=0.324 " + "l1=0.26" + "l2=0.0638 f=-0.226 shape=(1, 9000, 1)
logits [[ 1.7075659 -2.5587244  1.1675645 -1.2190118]]
Iteration 400 of 1000: loss=0.286 " + "l1=0.212" + "l2=0.0741 f=-0.218 shape=(1, 9000, 1)
logits [[ 1.4754611 -2.5283031  1.0910399 -0.9091564]]
Iteration 500 of 1000: loss=0.255 " + "l1=0.177" + "l2=0.0778 f=-0.216 shape=(1, 9000, 1)
logits [[ 1.305296  -2.5079217  1.0298785 -0.6910128]]
Iteration 600 of 1000: loss=0.225 " + "l1=0.14" + "l2=0.0845 f=-0.217 shape=(1, 9000, 1)
logits [[ 1.1201038  -2.4935057   0.96445495 -0.45735806]]
Iteration 700 of 1000: loss=0.189 " + "l1=0.0982" + "l2=0.0904 f=-0.224 shape=(1, 9000, 1)
logits [[ 0.89825255 -2.4843724   0.89876175 -0.20716739]]
Iteration 800 of 1000: loss=0.153 " + "l1=0.0693" + "l2=0.0834 f=-0.224 shape=(1, 9000, 1)
logits [[ 0.78521794 -2.4689493   0.7843502   0.00387371]]
Iteration 900 of 1000: loss=0.116 " + "l1=0.0337" + "l2=0.0821 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.65163755 -2.4534461   0.65079087  0.27244115]]
--- 308.01301670074463 seconds ---
Adv result:3
Loading model
Loading ground truth file
Attack diff is running...
Loading record A07042
(1, 5260)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0689 " + "l1=0.0689" + "l2=0 f=-0.46 shape=(1, 9000, 1)
logits [[ 4.601957  -2.2833881  1.6931438 -5.852087 ]]
Iteration 100 of 1000: loss=0.0682 " + "l1=0.0678" + "l2=0.000388 f=-0.46 shape=(1, 9000, 1)
logits [[ 4.5405827 -2.2364347  1.6661357 -5.8105946]]
Iteration 200 of 1000: loss=0.0679 " + "l1=0.0675" + "l2=0.00044 f=-0.46 shape=(1, 9000, 1)
logits [[ 4.5248585 -2.2240305  1.6592332 -5.8011465]]
Iteration 300 of 1000: loss=0.0677 " + "l1=0.0672" + "l2=0.000543 f=-0.461 shape=(1, 9000, 1)
logits [[ 4.5065565 -2.2109675  1.6519146 -5.78959  ]]
Iteration 400 of 1000: loss=0.0675 " + "l1=0.0669" + "l2=0.000671 f=-0.461 shape=(1, 9000, 1)
logits [[ 4.4885397 -2.1985426  1.6453401 -5.7774854]]
Iteration 500 of 1000: loss=0.0674 " + "l1=0.0666" + "l2=0.000795 f=-0.461 shape=(1, 9000, 1)
logits [[ 4.470385  -2.1868913  1.6395998 -5.7657676]]
Iteration 600 of 1000: loss=0.0673 " + "l1=0.0663" + "l2=0.000966 f=-0.461 shape=(1, 9000, 1)
logits [[ 4.4525323 -2.176717   1.6346873 -5.754365 ]]
Iteration 700 of 1000: loss=0.0671 " + "l1=0.066" + "l2=0.00106 f=-0.461 shape=(1, 9000, 1)
logits [[ 4.434757  -2.166712   1.6303858 -5.742761 ]]
Iteration 800 of 1000: loss=0.067 " + "l1=0.0657" + "l2=0.00122 f=-0.461 shape=(1, 9000, 1)
logits [[ 4.417411  -2.1570382  1.6262594 -5.7311845]]
Iteration 900 of 1000: loss=0.0668 " + "l1=0.0655" + "l2=0.00132 f=-0.461 shape=(1, 9000, 1)
logits [[ 4.400099  -2.1478863  1.622275  -5.719028 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.689 " + "l1=0.689" + "l2=0 f=-0.46 shape=(1, 9000, 1)
logits [[ 4.601957  -2.2833881  1.6931438 -5.852087 ]]
Iteration 100 of 1000: loss=0.622 " + "l1=0.589" + "l2=0.0336 f=-0.467 shape=(1, 9000, 1)
logits [[ 4.0249877 -1.8615521  1.4467479 -5.476302 ]]
Iteration 200 of 1000: loss=0.584 " + "l1=0.527" + "l2=0.0561 f=-0.468 shape=(1, 9000, 1)
logits [[ 3.6572742 -1.6176376  1.290843  -5.204357 ]]
Iteration 300 of 1000: loss=0.545 " + "l1=0.47" + "l2=0.0756 f=-0.459 shape=(1, 9000, 1)
logits [[ 3.3167164 -1.3786087  1.153558  -4.9267774]]
Iteration 400 of 1000: loss=0.495 " + "l1=0.401" + "l2=0.0941 f=-0.446 shape=(1, 9000, 1)
logits [[ 2.9058566 -1.1039369  1.0056477 -4.589719 ]]
Iteration 500 of 1000: loss=0.457 " + "l1=0.347" + "l2=0.11 f=-0.429 shape=(1, 9000, 1)
logits [[ 2.5892153  -0.88528246  0.88849103 -4.307899  ]]
Iteration 600 of 1000: loss=0.42 " + "l1=0.296" + "l2=0.124 f=-0.417 shape=(1, 9000, 1)
logits [[ 2.2763739  -0.68282825  0.7838985  -4.0446024 ]]
Iteration 700 of 1000: loss=0.379 " + "l1=0.25" + "l2=0.129 f=-0.422 shape=(1, 9000, 1)
logits [[ 1.9732751  -0.53133357  0.76415527 -3.8953948 ]]
Iteration 800 of 1000: loss=0.341 " + "l1=0.211" + "l2=0.131 f=-0.427 shape=(1, 9000, 1)
logits [[ 1.688518   -0.41661018  0.7359126  -3.7141328 ]]
Iteration 900 of 1000: loss=0.304 " + "l1=0.167" + "l2=0.137 f=-0.429 shape=(1, 9000, 1)
logits [[ 1.3624012  -0.30395377  0.71805507 -3.4940894 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.89 " + "l1=6.89" + "l2=0 f=-0.46 shape=(1, 9000, 1)
logits [[ 4.601957  -2.2833881  1.6931438 -5.852087 ]]
Iteration 100 of 1000: loss=1.54 " + "l1=0" + "l2=1.54 f=-0.595 shape=(1, 9000, 1)
logits [[ 0.49672642  0.53521454  0.2756874  -3.6860528 ]]
Iteration 200 of 1000: loss=0.998 " + "l1=0.0123" + "l2=0.986 f=-0.571 shape=(1, 9000, 1)
logits [[ 0.51435834  0.5020974   0.25171125 -3.5510886 ]]
Iteration 300 of 1000: loss=0.759 " + "l1=0.00205" + "l2=0.757 f=-0.556 shape=(1, 9000, 1)
logits [[ 0.45697308  0.45492646  0.28644505 -3.4238052 ]]
Iteration 400 of 1000: loss=0.615 " + "l1=0" + "l2=0.615 f=-0.544 shape=(1, 9000, 1)
logits [[ 0.423691    0.4336778   0.32419515 -3.3565345 ]]
Iteration 500 of 1000: loss=0.53 " + "l1=0" + "l2=0.53 f=-0.519 shape=(1, 9000, 1)
logits [[ 0.40875885  0.48299548  0.41627082 -3.3854785 ]]
Iteration 600 of 1000: loss=0.46 " + "l1=0" + "l2=0.46 f=-0.499 shape=(1, 9000, 1)
logits [[ 0.42958584  0.4568485   0.43126413 -3.312252  ]]
Iteration 700 of 1000: loss=0.411 " + "l1=0" + "l2=0.411 f=-0.477 shape=(1, 9000, 1)
logits [[ 0.43815243  0.45982644  0.440354   -3.2468638 ]]
Iteration 800 of 1000: loss=0.371 " + "l1=0" + "l2=0.371 f=-0.461 shape=(1, 9000, 1)
logits [[ 0.4266202   0.44791657  0.44002822 -3.1580045 ]]
Iteration 900 of 1000: loss=0.335 " + "l1=0" + "l2=0.335 f=-0.442 shape=(1, 9000, 1)
logits [[ 0.41301093  0.42600805  0.41661212 -3.0222218 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.79 " + "l1=3.79" + "l2=0 f=-0.46 shape=(1, 9000, 1)
logits [[ 4.601957  -2.2833881  1.6931438 -5.852087 ]]
Iteration 100 of 1000: loss=1.53 " + "l1=0.343" + "l2=1.18 f=-0.567 shape=(1, 9000, 1)
logits [[ 0.87965417  0.25615135  0.36405239 -3.7698488 ]]
Iteration 200 of 1000: loss=0.768 " + "l1=0.00576" + "l2=0.762 f=-0.556 shape=(1, 9000, 1)
logits [[ 0.5168696   0.5063981   0.24910496 -3.4950445 ]]
Iteration 300 of 1000: loss=0.579 " + "l1=0" + "l2=0.579 f=-0.541 shape=(1, 9000, 1)
logits [[ 0.48191854  0.48894998  0.27942055 -3.4144144 ]]
Iteration 400 of 1000: loss=0.494 " + "l1=0" + "l2=0.494 f=-0.535 shape=(1, 9000, 1)
logits [[ 0.43721104  0.4680262   0.28460047 -3.3279822 ]]
Iteration 500 of 1000: loss=0.435 " + "l1=0.00521" + "l2=0.43 f=-0.518 shape=(1, 9000, 1)
logits [[ 0.44020808  0.4307355   0.29917762 -3.2441187 ]]
Iteration 600 of 1000: loss=0.385 " + "l1=0" + "l2=0.385 f=-0.495 shape=(1, 9000, 1)
logits [[ 0.42376664  0.4239489   0.36049163 -3.1899805 ]]
Iteration 700 of 1000: loss=0.342 " + "l1=0" + "l2=0.342 f=-0.466 shape=(1, 9000, 1)
logits [[ 0.42178807  0.43465924  0.42035913 -3.139862  ]]
Iteration 800 of 1000: loss=0.308 " + "l1=0" + "l2=0.308 f=-0.454 shape=(1, 9000, 1)
logits [[ 0.37843883  0.4042929   0.3857958  -2.9861944 ]]
Iteration 900 of 1000: loss=0.282 " + "l1=0" + "l2=0.282 f=-0.439 shape=(1, 9000, 1)
logits [[ 0.33470345  0.38750917  0.35991254 -2.836322  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.24 " + "l1=2.24" + "l2=0 f=-0.46 shape=(1, 9000, 1)
logits [[ 4.601957  -2.2833881  1.6931438 -5.852087 ]]
Iteration 100 of 1000: loss=1.45 " + "l1=1.01" + "l2=0.431 f=-0.491 shape=(1, 9000, 1)
logits [[ 2.3912048  -0.7312026   0.76532286 -4.3892164 ]]
Iteration 200 of 1000: loss=0.83 " + "l1=0.103" + "l2=0.727 f=-0.547 shape=(1, 9000, 1)
logits [[ 0.7123276   0.39437985  0.2971008  -3.592353  ]]
Iteration 300 of 1000: loss=0.543 " + "l1=0" + "l2=0.543 f=-0.532 shape=(1, 9000, 1)
logits [[ 0.50187397  0.51517564  0.25673422 -3.401456  ]]
Iteration 400 of 1000: loss=0.443 " + "l1=0" + "l2=0.443 f=-0.527 shape=(1, 9000, 1)
logits [[ 0.4522986   0.48523098  0.29686084 -3.3404489 ]]
Iteration 500 of 1000: loss=0.375 " + "l1=0.00408" + "l2=0.371 f=-0.512 shape=(1, 9000, 1)
logits [[ 0.44489136  0.43234012  0.34697062 -3.2706444 ]]
Iteration 600 of 1000: loss=0.327 " + "l1=0" + "l2=0.327 f=-0.491 shape=(1, 9000, 1)
logits [[ 0.40173998  0.411859    0.40252733 -3.1816866 ]]
Iteration 700 of 1000: loss=0.293 " + "l1=0" + "l2=0.293 f=-0.474 shape=(1, 9000, 1)
logits [[ 0.36313242  0.40159664  0.37892005 -3.0396247 ]]
Iteration 800 of 1000: loss=0.261 " + "l1=0.000779" + "l2=0.26 f=-0.462 shape=(1, 9000, 1)
logits [[ 0.3641749   0.36177745  0.34222052 -2.9178221 ]]
Iteration 900 of 1000: loss=0.236 " + "l1=0" + "l2=0.236 f=-0.448 shape=(1, 9000, 1)
logits [[ 0.32840002  0.33963656  0.3178614  -2.7764006 ]]
--- 298.87478256225586 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0291 " + "l1=0.0291" + "l2=0 f=-0.46 shape=(1, 9000, 1)
logits [[ 4.601957  -2.2833881  1.6931438 -5.852087 ]]
Iteration 100 of 1000: loss=0.0288 " + "l1=0.0287" + "l2=0.000154 f=-0.463 shape=(1, 9000, 1)
logits [[ 4.568743  -2.2803833  1.7002627 -5.839469 ]]
Iteration 200 of 1000: loss=0.0288 " + "l1=0.0286" + "l2=0.000147 f=-0.463 shape=(1, 9000, 1)
logits [[ 4.562808  -2.2794735  1.701595  -5.8380523]]
Iteration 300 of 1000: loss=0.0287 " + "l1=0.0285" + "l2=0.000172 f=-0.464 shape=(1, 9000, 1)
logits [[ 4.5542583 -2.278631   1.7036694 -5.835715 ]]
Iteration 400 of 1000: loss=0.0286 " + "l1=0.0284" + "l2=0.000218 f=-0.465 shape=(1, 9000, 1)
logits [[ 4.5451374 -2.2778888  1.7060835 -5.8328686]]
Iteration 500 of 1000: loss=0.0285 " + "l1=0.0283" + "l2=0.000261 f=-0.466 shape=(1, 9000, 1)
logits [[ 4.5353994 -2.2770123  1.7085834 -5.8295426]]
Iteration 600 of 1000: loss=0.0285 " + "l1=0.0281" + "l2=0.00034 f=-0.466 shape=(1, 9000, 1)
logits [[ 4.5251923 -2.2759256  1.7111263 -5.825929 ]]
Iteration 700 of 1000: loss=0.0284 " + "l1=0.028" + "l2=0.000373 f=-0.467 shape=(1, 9000, 1)
logits [[ 4.5140843 -2.2747083  1.7138281 -5.8214927]]
Iteration 800 of 1000: loss=0.0284 " + "l1=0.0279" + "l2=0.000499 f=-0.468 shape=(1, 9000, 1)
logits [[ 4.502349  -2.2733238  1.7165177 -5.8165045]]
Iteration 900 of 1000: loss=0.0284 " + "l1=0.0277" + "l2=0.000645 f=-0.468 shape=(1, 9000, 1)
logits [[ 4.490263  -2.2716827  1.7191365 -5.8109546]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.291 " + "l1=0.291" + "l2=0 f=-0.46 shape=(1, 9000, 1)
logits [[ 4.601957  -2.2833881  1.6931438 -5.852087 ]]
Iteration 100 of 1000: loss=0.27 " + "l1=0.26" + "l2=0.00936 f=-0.485 shape=(1, 9000, 1)
logits [[ 4.336537  -2.244281   1.7344822 -5.7668557]]
Iteration 200 of 1000: loss=0.258 " + "l1=0.246" + "l2=0.0125 f=-0.492 shape=(1, 9000, 1)
logits [[ 4.2102575 -2.2291384  1.7529855 -5.702901 ]]
Iteration 300 of 1000: loss=0.247 " + "l1=0.231" + "l2=0.0156 f=-0.498 shape=(1, 9000, 1)
logits [[ 4.0809045 -2.2174084  1.7692837 -5.6228013]]
Iteration 400 of 1000: loss=0.234 " + "l1=0.216" + "l2=0.0185 f=-0.497 shape=(1, 9000, 1)
logits [[ 3.942493  -2.2020035  1.7830592 -5.5124526]]
Iteration 500 of 1000: loss=0.221 " + "l1=0.199" + "l2=0.0222 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.7781596 -2.1830175  1.7923087 -5.363513 ]]
Iteration 600 of 1000: loss=0.204 " + "l1=0.178" + "l2=0.0265 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.5754488 -2.158931   1.7975378 -5.1876755]]
Iteration 700 of 1000: loss=0.183 " + "l1=0.152" + "l2=0.0312 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.3532329 -2.174571   1.8343469 -5.015117 ]]
Iteration 800 of 1000: loss=0.158 " + "l1=0.123" + "l2=0.0352 f=-0.503 shape=(1, 9000, 1)
logits [[ 3.1196156 -2.1882749  1.8893691 -4.831477 ]]
Iteration 900 of 1000: loss=0.13 " + "l1=0.0886" + "l2=0.0414 f=-0.492 shape=(1, 9000, 1)
logits [[ 2.8279402 -2.1625912  1.9418068 -4.5751247]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.91 " + "l1=2.91" + "l2=0 f=-0.46 shape=(1, 9000, 1)
logits [[ 4.601957  -2.2833881  1.6931438 -5.852087 ]]
Iteration 100 of 1000: loss=0.937 " + "l1=0" + "l2=0.937 f=-0.563 shape=(1, 9000, 1)
logits [[ 1.939493  -1.7911088  1.9561408 -4.354733 ]]
Iteration 200 of 1000: loss=0.376 " + "l1=0" + "l2=0.376 f=-0.528 shape=(1, 9000, 1)
logits [[ 2.0967803 -1.8759452  2.1125512 -4.444867 ]]
Iteration 300 of 1000: loss=0.222 " + "l1=0" + "l2=0.222 f=-0.502 shape=(1, 9000, 1)
logits [[ 2.1454704 -1.9156783  2.145818  -4.3847423]]
Iteration 400 of 1000: loss=0.159 " + "l1=0" + "l2=0.159 f=-0.475 shape=(1, 9000, 1)
logits [[ 2.164001  -1.9482304  2.1667058 -4.2835073]]
Iteration 500 of 1000: loss=0.123 " + "l1=0.00234" + "l2=0.121 f=-0.453 shape=(1, 9000, 1)
logits [[ 2.182628  -1.9669436  2.1802845 -4.2084494]]
Iteration 600 of 1000: loss=0.0943 " + "l1=0" + "l2=0.0943 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.1906257 -1.9857242  2.2026005 -4.1387305]]
Iteration 700 of 1000: loss=0.0755 " + "l1=0" + "l2=0.0755 f=-0.413 shape=(1, 9000, 1)
logits [[ 2.1942086 -2.0076404  2.2227805 -4.0623837]]
Iteration 800 of 1000: loss=0.0617 " + "l1=0" + "l2=0.0617 f=-0.397 shape=(1, 9000, 1)
logits [[ 2.2011476 -2.0319102  2.2312613 -3.9878843]]
Iteration 900 of 1000: loss=0.0505 " + "l1=0" + "l2=0.0505 f=-0.385 shape=(1, 9000, 1)
logits [[ 2.2224066 -2.0554616  2.2307818 -3.936773 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.6 " + "l1=1.6" + "l2=0 f=-0.46 shape=(1, 9000, 1)
logits [[ 4.601957  -2.2833881  1.6931438 -5.852087 ]]
Iteration 100 of 1000: loss=1.02 " + "l1=0.776" + "l2=0.247 f=-0.532 shape=(1, 9000, 1)
logits [[ 3.2082648 -2.0592275  1.7965786 -5.0752573]]
Iteration 200 of 1000: loss=0.436 " + "l1=0.00135" + "l2=0.435 f=-0.582 shape=(1, 9000, 1)
logits [[ 1.8514428 -1.8608857  1.8489912 -4.1680827]]
Iteration 300 of 1000: loss=0.187 " + "l1=0" + "l2=0.187 f=-0.525 shape=(1, 9000, 1)
logits [[ 2.1703846 -2.2226827  2.174332  -4.2204876]]
Iteration 400 of 1000: loss=0.133 " + "l1=0" + "l2=0.133 f=-0.502 shape=(1, 9000, 1)
logits [[ 2.1698377 -2.2553067  2.1937923 -4.11784  ]]
Iteration 500 of 1000: loss=0.0963 " + "l1=0" + "l2=0.0963 f=-0.483 shape=(1, 9000, 1)
logits [[ 2.196668  -2.28388    2.2013648 -4.044551 ]]
Iteration 600 of 1000: loss=0.0738 " + "l1=0" + "l2=0.0738 f=-0.465 shape=(1, 9000, 1)
logits [[ 2.2002938 -2.3108807  2.2015042 -3.9527905]]
Iteration 700 of 1000: loss=0.0598 " + "l1=0" + "l2=0.0598 f=-0.452 shape=(1, 9000, 1)
logits [[ 2.2000191 -2.3391483  2.2039778 -3.8720317]]
Iteration 800 of 1000: loss=0.0512 " + "l1=0" + "l2=0.0512 f=-0.44 shape=(1, 9000, 1)
logits [[ 2.1830502 -2.3511624  2.2016752 -3.7919946]]
Iteration 900 of 1000: loss=0.0445 " + "l1=0" + "l2=0.0445 f=-0.428 shape=(1, 9000, 1)
logits [[ 2.1774025 -2.35751    2.198318  -3.732095 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.945 " + "l1=0.945" + "l2=0 f=-0.46 shape=(1, 9000, 1)
logits [[ 4.601957  -2.2833881  1.6931438 -5.852087 ]]
Iteration 100 of 1000: loss=0.732 " + "l1=0.638" + "l2=0.0939 f=-0.519 shape=(1, 9000, 1)
logits [[ 3.7455893 -2.1564524  1.7823241 -5.446586 ]]
Iteration 200 of 1000: loss=0.581 " + "l1=0.448" + "l2=0.133 f=-0.523 shape=(1, 9000, 1)
logits [[ 3.1466417 -2.0459836  1.7676909 -4.960009 ]]
Iteration 300 of 1000: loss=0.351 " + "l1=0.162" + "l2=0.189 f=-0.559 shape=(1, 9000, 1)
logits [[ 2.3685696 -2.030078   1.870707  -4.446146 ]]
Iteration 400 of 1000: loss=0.145 " + "l1=0" + "l2=0.145 f=-0.518 shape=(1, 9000, 1)
logits [[ 2.1893978 -2.3187788  2.1924052 -4.136076 ]]
Iteration 500 of 1000: loss=0.0956 " + "l1=0" + "l2=0.0956 f=-0.491 shape=(1, 9000, 1)
logits [[ 2.2579987 -2.4089065  2.2600195 -4.0739965]]
Iteration 600 of 1000: loss=0.0702 " + "l1=0" + "l2=0.0702 f=-0.467 shape=(1, 9000, 1)
logits [[ 2.2709785 -2.452674   2.287213  -3.9744902]]
Iteration 700 of 1000: loss=0.0555 " + "l1=0.00101" + "l2=0.0545 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.2842755 -2.467313   2.281167  -3.9035568]]
Iteration 800 of 1000: loss=0.0463 " + "l1=0.000906" + "l2=0.0454 f=-0.44 shape=(1, 9000, 1)
logits [[ 2.2773018 -2.479575   2.2745137 -3.8329813]]
Iteration 900 of 1000: loss=0.04 " + "l1=0" + "l2=0.04 f=-0.429 shape=(1, 9000, 1)
logits [[ 2.2601578 -2.486365   2.2725194 -3.7625513]]
--- 293.00777864456177 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.105 " + "l1=0.105" + "l2=0 f=-0.46 shape=(1, 9000, 1)
logits [[ 4.601957  -2.2833881  1.6931438 -5.852087 ]]
Iteration 100 of 1000: loss=0.104 " + "l1=0.103" + "l2=0.000428 f=-0.457 shape=(1, 9000, 1)
logits [[ 4.5371785 -2.2519789  1.6660992 -5.7777724]]
Iteration 200 of 1000: loss=0.103 " + "l1=0.103" + "l2=0.0005 f=-0.456 shape=(1, 9000, 1)
logits [[ 4.5183496 -2.24427    1.6581376 -5.7562695]]
Iteration 300 of 1000: loss=0.103 " + "l1=0.102" + "l2=0.000674 f=-0.455 shape=(1, 9000, 1)
logits [[ 4.4954457 -2.234896   1.6491343 -5.7308936]]
Iteration 400 of 1000: loss=0.103 " + "l1=0.102" + "l2=0.000829 f=-0.455 shape=(1, 9000, 1)
logits [[ 4.4717994 -2.225769   1.6407361 -5.7052045]]
Iteration 500 of 1000: loss=0.102 " + "l1=0.101" + "l2=0.00101 f=-0.454 shape=(1, 9000, 1)
logits [[ 4.4484468 -2.2173824  1.6332103 -5.6797767]]
Iteration 600 of 1000: loss=0.102 " + "l1=0.101" + "l2=0.00117 f=-0.453 shape=(1, 9000, 1)
logits [[ 4.4258237 -2.2098663  1.6267035 -5.654876 ]]
Iteration 700 of 1000: loss=0.102 " + "l1=0.1" + "l2=0.00133 f=-0.452 shape=(1, 9000, 1)
logits [[ 4.40236   -2.2024212  1.6203307 -5.6288986]]
Iteration 800 of 1000: loss=0.101 " + "l1=0.0998" + "l2=0.00149 f=-0.451 shape=(1, 9000, 1)
logits [[ 4.377336  -2.1941197  1.6132468 -5.600772 ]]
Iteration 900 of 1000: loss=0.101 " + "l1=0.0992" + "l2=0.00177 f=-0.45 shape=(1, 9000, 1)
logits [[ 4.352142  -2.185694   1.6061549 -5.571975 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.05 " + "l1=1.05" + "l2=0 f=-0.46 shape=(1, 9000, 1)
logits [[ 4.601957  -2.2833881  1.6931438 -5.852087 ]]
Iteration 100 of 1000: loss=0.947 " + "l1=0.903" + "l2=0.0448 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.8979607 -1.959143   1.4032365 -5.128298 ]]
Iteration 200 of 1000: loss=0.876 " + "l1=0.799" + "l2=0.0775 f=-0.433 shape=(1, 9000, 1)
logits [[ 3.4082377 -1.757576   1.195816  -4.5769887]]
Iteration 300 of 1000: loss=0.802 " + "l1=0.691" + "l2=0.111 f=-0.423 shape=(1, 9000, 1)
logits [[ 2.9067492 -1.5722865  0.9778283 -4.0042973]]
Iteration 400 of 1000: loss=0.72 " + "l1=0.59" + "l2=0.13 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.4523625  -1.425357    0.80998427 -3.4458754 ]]
Iteration 500 of 1000: loss=0.634 " + "l1=0.484" + "l2=0.15 f=-0.389 shape=(1, 9000, 1)
logits [[ 1.9582031  -1.3362796   0.70748913 -2.8847373 ]]
Iteration 600 of 1000: loss=0.516 " + "l1=0.341" + "l2=0.175 f=-0.367 shape=(1, 9000, 1)
logits [[ 1.3115512 -1.2396035  0.5593506 -2.1003504]]
Iteration 700 of 1000: loss=0.401 " + "l1=0.215" + "l2=0.186 f=-0.342 shape=(1, 9000, 1)
logits [[ 0.7668849  -1.1931453   0.44158107 -1.3852144 ]]
Iteration 800 of 1000: loss=0.29 " + "l1=0.104" + "l2=0.185 f=-0.322 shape=(1, 9000, 1)
logits [[ 0.29249892 -1.1194354   0.2903491  -0.75052524]]
Iteration 900 of 1000: loss=0.201 " + "l1=0.0318" + "l2=0.169 f=-0.294 shape=(1, 9000, 1)
logits [[ 0.08303431 -1.1121725   0.0847386  -0.2332601 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.575 " + "l1=0.575" + "l2=0 f=-0.46 shape=(1, 9000, 1)
logits [[ 4.601957  -2.2833881  1.6931438 -5.852087 ]]
Iteration 100 of 1000: loss=0.548 " + "l1=0.536" + "l2=0.0112 f=-0.45 shape=(1, 9000, 1)
logits [[ 4.2593746 -2.12231    1.5562075 -5.493088 ]]
Iteration 200 of 1000: loss=0.531 " + "l1=0.512" + "l2=0.0186 f=-0.446 shape=(1, 9000, 1)
logits [[ 4.051879  -2.03987    1.4705641 -5.2656646]]
Iteration 300 of 1000: loss=0.513 " + "l1=0.485" + "l2=0.0274 f=-0.438 shape=(1, 9000, 1)
logits [[ 3.8198054 -1.9559157  1.3837894 -4.999853 ]]
Iteration 400 of 1000: loss=0.492 " + "l1=0.457" + "l2=0.0348 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.5894475 -1.8712074  1.3011187 -4.723751 ]]
Iteration 500 of 1000: loss=0.47 " + "l1=0.431" + "l2=0.0397 f=-0.412 shape=(1, 9000, 1)
logits [[ 3.3843477 -1.7977035  1.2115666 -4.4457355]]
Iteration 600 of 1000: loss=0.443 " + "l1=0.397" + "l2=0.0457 f=-0.392 shape=(1, 9000, 1)
logits [[ 3.1311195 -1.6994973  1.0930634 -4.09188  ]]
Iteration 700 of 1000: loss=0.41 " + "l1=0.36" + "l2=0.0503 f=-0.379 shape=(1, 9000, 1)
logits [[ 2.82216   -1.6279889  1.012373  -3.7239182]]
Iteration 800 of 1000: loss=0.381 " + "l1=0.326" + "l2=0.0548 f=-0.373 shape=(1, 9000, 1)
logits [[ 2.5286539  -1.5988902   0.97573954 -3.3975987 ]]
Iteration 900 of 1000: loss=0.347 " + "l1=0.289" + "l2=0.0583 f=-0.368 shape=(1, 9000, 1)
logits [[ 2.2088804 -1.5703491  0.9316376 -3.0437543]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.81 " + "l1=0.81" + "l2=0 f=-0.46 shape=(1, 9000, 1)
logits [[ 4.601957  -2.2833881  1.6931438 -5.852087 ]]
Iteration 100 of 1000: loss=0.754 " + "l1=0.729" + "l2=0.0244 f=-0.448 shape=(1, 9000, 1)
logits [[ 4.0889587 -2.045263   1.4836607 -5.319747 ]]
Iteration 200 of 1000: loss=0.714 " + "l1=0.669" + "l2=0.0442 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.7216585 -1.9024518  1.3378683 -4.9157863]]
Iteration 300 of 1000: loss=0.673 " + "l1=0.613" + "l2=0.0602 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.390633  -1.7776692  1.2045056 -4.5200987]]
Iteration 400 of 1000: loss=0.628 " + "l1=0.553" + "l2=0.0752 f=-0.41 shape=(1, 9000, 1)
logits [[ 3.0417943 -1.6405357  1.0516031 -4.0915914]]
Iteration 500 of 1000: loss=0.573 " + "l1=0.487" + "l2=0.0857 f=-0.389 shape=(1, 9000, 1)
logits [[ 2.670482  -1.5240996  0.9122403 -3.614297 ]]
Iteration 600 of 1000: loss=0.518 " + "l1=0.422" + "l2=0.0964 f=-0.379 shape=(1, 9000, 1)
logits [[ 2.2811105  -1.481137    0.84797543 -3.165279  ]]
Iteration 700 of 1000: loss=0.455 " + "l1=0.35" + "l2=0.105 f=-0.368 shape=(1, 9000, 1)
logits [[ 1.8486795  -1.4361595   0.78293127 -2.6681561 ]]
Iteration 800 of 1000: loss=0.373 " + "l1=0.252" + "l2=0.121 f=-0.339 shape=(1, 9000, 1)
logits [[ 1.2801481  -1.3401275   0.66972345 -1.9668612 ]]
Iteration 900 of 1000: loss=0.296 " + "l1=0.166" + "l2=0.131 f=-0.318 shape=(1, 9000, 1)
logits [[ 0.7740996 -1.230239   0.5488842 -1.3627635]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.928 " + "l1=0.928" + "l2=0 f=-0.46 shape=(1, 9000, 1)
logits [[ 4.601957  -2.2833881  1.6931438 -5.852087 ]]
Iteration 100 of 1000: loss=0.852 " + "l1=0.818" + "l2=0.0337 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.9967313 -2.0047908  1.4447087 -5.2248898]]
Iteration 200 of 1000: loss=0.797 " + "l1=0.737" + "l2=0.0599 f=-0.437 shape=(1, 9000, 1)
logits [[ 3.5591576 -1.8282048  1.2684524 -4.7454057]]
Iteration 300 of 1000: loss=0.741 " + "l1=0.655" + "l2=0.0858 f=-0.424 shape=(1, 9000, 1)
logits [[ 3.1370683 -1.6651994  1.080163  -4.248349 ]]
Iteration 400 of 1000: loss=0.679 " + "l1=0.578" + "l2=0.101 f=-0.406 shape=(1, 9000, 1)
logits [[ 2.7513623  -1.5372561   0.92324764 -3.7615545 ]]
Iteration 500 of 1000: loss=0.61 " + "l1=0.493" + "l2=0.117 f=-0.389 shape=(1, 9000, 1)
logits [[ 2.3104405 -1.431989   0.8098826 -3.2445111]]
Iteration 600 of 1000: loss=0.536 " + "l1=0.407" + "l2=0.129 f=-0.377 shape=(1, 9000, 1)
logits [[ 1.8614455  -1.3740023   0.72733164 -2.7225573 ]]
Iteration 700 of 1000: loss=0.434 " + "l1=0.287" + "l2=0.147 f=-0.348 shape=(1, 9000, 1)
logits [[ 1.2567731 -1.2901816  0.6121417 -1.9723849]]
Iteration 800 of 1000: loss=0.337 " + "l1=0.177" + "l2=0.159 f=-0.325 shape=(1, 9000, 1)
logits [[ 0.70180625 -1.1894813   0.48503944 -1.2958524 ]]
Iteration 900 of 1000: loss=0.25 " + "l1=0.0969" + "l2=0.153 f=-0.311 shape=(1, 9000, 1)
logits [[ 0.33126074 -1.1433259   0.32896796 -0.76014805]]
--- 299.8930733203888 seconds ---
Adv result:3
Loading record A07063
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.109 " + "l1=0.109" + "l2=0 f=-0.738 shape=(1, 9000, 1)
logits [[ 6.925108  -3.9448016  4.0530434 -9.984224 ]]
Iteration 100 of 1000: loss=0.108 " + "l1=0.108" + "l2=0.000288 f=-0.738 shape=(1, 9000, 1)
logits [[ 6.885682  -3.9109855  4.020391  -9.947038 ]]
Iteration 200 of 1000: loss=0.108 " + "l1=0.108" + "l2=0.000312 f=-0.738 shape=(1, 9000, 1)
logits [[ 6.8785586 -3.903016   4.011745  -9.939808 ]]
Iteration 300 of 1000: loss=0.108 " + "l1=0.108" + "l2=0.00039 f=-0.738 shape=(1, 9000, 1)
logits [[ 6.869525  -3.8946035  4.002987  -9.930669 ]]
Iteration 400 of 1000: loss=0.108 " + "l1=0.107" + "l2=0.000473 f=-0.738 shape=(1, 9000, 1)
logits [[ 6.860424  -3.8868773  3.99507   -9.921451 ]]
Iteration 500 of 1000: loss=0.108 " + "l1=0.107" + "l2=0.000599 f=-0.738 shape=(1, 9000, 1)
logits [[ 6.851418  -3.8792667  3.987628  -9.912299 ]]
Iteration 600 of 1000: loss=0.108 " + "l1=0.107" + "l2=0.000695 f=-0.738 shape=(1, 9000, 1)
logits [[ 6.84328   -3.872822   3.9816616 -9.903901 ]]
Iteration 700 of 1000: loss=0.108 " + "l1=0.107" + "l2=0.000752 f=-0.738 shape=(1, 9000, 1)
logits [[ 6.83572   -3.8671248  3.9766805 -9.895881 ]]
Iteration 800 of 1000: loss=0.108 " + "l1=0.107" + "l2=0.000879 f=-0.737 shape=(1, 9000, 1)
logits [[ 6.8284035 -3.8614678  3.9720514 -9.887989 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.09 " + "l1=1.09" + "l2=0 f=-0.738 shape=(1, 9000, 1)
logits [[ 6.925108  -3.9448016  4.0530434 -9.984224 ]]
Iteration 100 of 1000: loss=1.04 " + "l1=1.02" + "l2=0.026 f=-0.737 shape=(1, 9000, 1)
logits [[ 6.5680723 -3.5960639  3.7225301 -9.643107 ]]
Iteration 200 of 1000: loss=1.02 " + "l1=0.978" + "l2=0.0411 f=-0.731 shape=(1, 9000, 1)
logits [[ 6.3808117 -3.403      3.5406048 -9.443798 ]]
Iteration 300 of 1000: loss=1 " + "l1=0.953" + "l2=0.0503 f=-0.723 shape=(1, 9000, 1)
logits [[ 6.2387056 -3.2908175  3.4334905 -9.274938 ]]
Iteration 400 of 1000: loss=0.989 " + "l1=0.931" + "l2=0.0578 f=-0.717 shape=(1, 9000, 1)
logits [[ 6.103837  -3.2068071  3.347466  -9.112031 ]]
Iteration 500 of 1000: loss=0.975 " + "l1=0.91" + "l2=0.065 f=-0.708 shape=(1, 9000, 1)
logits [[ 5.9797916 -3.1220946  3.2654917 -8.955497 ]]
Iteration 600 of 1000: loss=0.961 " + "l1=0.887" + "l2=0.0732 f=-0.696 shape=(1, 9000, 1)
logits [[ 5.851317  -3.0225813  3.1772125 -8.788126 ]]
Iteration 700 of 1000: loss=0.946 " + "l1=0.866" + "l2=0.0799 f=-0.684 shape=(1, 9000, 1)
logits [[ 5.726078  -2.9329603  3.1016142 -8.631219 ]]
Iteration 800 of 1000: loss=0.931 " + "l1=0.849" + "l2=0.0819 f=-0.677 shape=(1, 9000, 1)
logits [[ 5.6188564 -2.8748498  3.0489755 -8.49904  ]]
Iteration 900 of 1000: loss=0.916 " + "l1=0.833" + "l2=0.0829 f=-0.668 shape=(1, 9000, 1)
logits [[ 5.5170846 -2.8172286  2.995983  -8.367779 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.9 " + "l1=10.9" + "l2=0 f=-0.738 shape=(1, 9000, 1)
logits [[ 6.925108  -3.9448016  4.0530434 -9.984224 ]]
Iteration 100 of 1000: loss=6.99 " + "l1=5.08" + "l2=1.91 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.4909186 -1.5898885  1.9884913 -6.307221 ]]
Iteration 200 of 1000: loss=5.48 " + "l1=3.02" + "l2=2.46 f=-0.55 shape=(1, 9000, 1)
logits [[ 2.2037647  -0.81367266  1.3266305  -4.9150677 ]]
Iteration 300 of 1000: loss=4.3 " + "l1=1.48" + "l2=2.82 f=-0.537 shape=(1, 9000, 1)
logits [[ 1.2376548  -0.23758833  0.9276311  -4.077285  ]]
Iteration 400 of 1000: loss=3.52 " + "l1=0.579" + "l2=2.95 f=-0.489 shape=(1, 9000, 1)
logits [[ 0.69224155  0.11371816  0.6765586  -3.438264  ]]
Iteration 500 of 1000: loss=3.05 " + "l1=0.235" + "l2=2.81 f=-0.454 shape=(1, 9000, 1)
logits [[ 0.5087544  0.2740229  0.5020097 -3.101626 ]]
Iteration 600 of 1000: loss=2.76 " + "l1=0.0333" + "l2=2.73 f=-0.427 shape=(1, 9000, 1)
logits [[ 0.38270625  0.3543715   0.38768715 -2.8324528 ]]
Iteration 700 of 1000: loss=2.53 " + "l1=0.0223" + "l2=2.5 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.3524288   0.33012402  0.34338057 -2.6444054 ]]
Iteration 800 of 1000: loss=2.34 " + "l1=0.017" + "l2=2.32 f=-0.387 shape=(1, 9000, 1)
logits [[ 0.32203776  0.3050778   0.31279376 -2.485926  ]]
Iteration 900 of 1000: loss=2.18 " + "l1=0.0107" + "l2=2.17 f=-0.373 shape=(1, 9000, 1)
logits [[ 0.30749863  0.29682726  0.29576218 -2.390315  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.98 " + "l1=5.98" + "l2=0 f=-0.738 shape=(1, 9000, 1)
logits [[ 6.925108  -3.9448016  4.0530434 -9.984224 ]]
Iteration 100 of 1000: loss=4.63 " + "l1=3.92" + "l2=0.707 f=-0.679 shape=(1, 9000, 1)
logits [[ 4.7642736 -2.362636   2.6157029 -7.7339797]]
Iteration 200 of 1000: loss=4.05 " + "l1=3.04" + "l2=1.01 f=-0.617 shape=(1, 9000, 1)
logits [[ 3.8761404 -1.6589903  2.0323498 -6.7187996]]
Iteration 300 of 1000: loss=3.62 " + "l1=2.44" + "l2=1.18 f=-0.571 shape=(1, 9000, 1)
logits [[ 3.1779082 -1.2585407  1.7072551 -5.9104357]]
Iteration 400 of 1000: loss=3.19 " + "l1=1.85" + "l2=1.34 f=-0.535 shape=(1, 9000, 1)
logits [[ 2.4873953  -0.87495196  1.3657795  -5.119078  ]]
Iteration 500 of 1000: loss=2.85 " + "l1=1.46" + "l2=1.39 f=-0.508 shape=(1, 9000, 1)
logits [[ 2.0140066 -0.6411247  1.1621699 -4.568848 ]]
Iteration 600 of 1000: loss=2.57 " + "l1=1.12" + "l2=1.45 f=-0.46 shape=(1, 9000, 1)
logits [[ 1.5752938 -0.4596926  0.9956945 -3.9496837]]
Iteration 700 of 1000: loss=2.33 " + "l1=0.785" + "l2=1.55 f=-0.41 shape=(1, 9000, 1)
logits [[ 1.1537371  -0.27391484  0.83146316 -3.3517737 ]]
Iteration 800 of 1000: loss=2.15 " + "l1=0.515" + "l2=1.63 f=-0.361 shape=(1, 9000, 1)
logits [[ 0.820125   -0.11565112  0.6795949  -2.8276727 ]]
Iteration 900 of 1000: loss=2.01 " + "l1=0.341" + "l2=1.66 f=-0.327 shape=(1, 9000, 1)
logits [[ 0.5917857  -0.02775975  0.58809334 -2.4610658 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=8.42 " + "l1=8.42" + "l2=0 f=-0.738 shape=(1, 9000, 1)
logits [[ 6.925108  -3.9448016  4.0530434 -9.984224 ]]
Iteration 100 of 1000: loss=5.9 " + "l1=4.6" + "l2=1.3 f=-0.639 shape=(1, 9000, 1)
logits [[ 4.055904  -1.8803747  2.2240803 -6.9562044]]
Iteration 200 of 1000: loss=4.88 " + "l1=3.22" + "l2=1.65 f=-0.576 shape=(1, 9000, 1)
logits [[ 2.974885  -1.1854458  1.6577997 -5.7511334]]
Iteration 300 of 1000: loss=4.1 " + "l1=2.2" + "l2=1.9 f=-0.543 shape=(1, 9000, 1)
logits [[ 2.1301506 -0.7138113  1.244438  -4.832292 ]]
Iteration 400 of 1000: loss=3.42 " + "l1=1.35" + "l2=2.07 f=-0.514 shape=(1, 9000, 1)
logits [[ 1.4219877  -0.32188705  0.9496992  -4.10648   ]]
Iteration 500 of 1000: loss=2.9 " + "l1=0.695" + "l2=2.2 f=-0.438 shape=(1, 9000, 1)
logits [[ 0.8701395 -0.0272458  0.7282455 -3.3221066]]
Iteration 600 of 1000: loss=2.51 " + "l1=0.295" + "l2=2.21 f=-0.372 shape=(1, 9000, 1)
logits [[ 0.51342213  0.14354104  0.524396   -2.671078  ]]
Iteration 700 of 1000: loss=2.28 " + "l1=0.165" + "l2=2.11 f=-0.346 shape=(1, 9000, 1)
logits [[ 0.4063369   0.20086862  0.41399392 -2.4063725 ]]
Iteration 800 of 1000: loss=2.13 " + "l1=0.0814" + "l2=2.05 f=-0.331 shape=(1, 9000, 1)
logits [[ 0.34318957  0.23814563  0.32938233 -2.2339027 ]]
Iteration 900 of 1000: loss=2.03 " + "l1=0.0115" + "l2=2.02 f=-0.317 shape=(1, 9000, 1)
logits [[ 0.29078242  0.2759847   0.28889936 -2.1223447 ]]
--- 289.47142124176025 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0287 " + "l1=0.0287" + "l2=0 f=-0.738 shape=(1, 9000, 1)
logits [[ 6.925108  -3.9448016  4.0530434 -9.984224 ]]
Iteration 100 of 1000: loss=0.0286 " + "l1=0.0284" + "l2=0.000145 f=-0.737 shape=(1, 9000, 1)
logits [[ 6.9095335 -3.9534316  4.067367  -9.969999 ]]
Iteration 200 of 1000: loss=0.0285 " + "l1=0.0284" + "l2=0.000114 f=-0.736 shape=(1, 9000, 1)
logits [[ 6.909069  -3.9547868  4.0693808 -9.968323 ]]
Iteration 300 of 1000: loss=0.0285 " + "l1=0.0283" + "l2=0.000137 f=-0.736 shape=(1, 9000, 1)
logits [[ 6.906714  -3.9562855  4.0722194 -9.964896 ]]
Iteration 400 of 1000: loss=0.0285 " + "l1=0.0283" + "l2=0.000196 f=-0.735 shape=(1, 9000, 1)
logits [[ 6.903786  -3.9574857  4.074792  -9.961217 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.287 " + "l1=0.287" + "l2=0 f=-0.738 shape=(1, 9000, 1)
logits [[ 6.925108  -3.9448016  4.0530434 -9.984224 ]]
Iteration 100 of 1000: loss=0.273 " + "l1=0.266" + "l2=0.00714 f=-0.73 shape=(1, 9000, 1)
logits [[ 6.813858  -4.006997   4.1510644 -9.876083 ]]
Iteration 200 of 1000: loss=0.267 " + "l1=0.258" + "l2=0.00989 f=-0.726 shape=(1, 9000, 1)
logits [[ 6.759734  -4.024739   4.1845484 -9.821575 ]]
Iteration 300 of 1000: loss=0.262 " + "l1=0.25" + "l2=0.0124 f=-0.722 shape=(1, 9000, 1)
logits [[ 6.7092104 -4.0371923  4.2093863 -9.767958 ]]
Iteration 400 of 1000: loss=0.257 " + "l1=0.242" + "l2=0.0151 f=-0.717 shape=(1, 9000, 1)
logits [[ 6.652186 -4.046976  4.231319 -9.706109]]
Iteration 500 of 1000: loss=0.252 " + "l1=0.235" + "l2=0.0175 f=-0.715 shape=(1, 9000, 1)
logits [[ 6.5908017 -4.048222   4.2419496 -9.646076 ]]
Iteration 600 of 1000: loss=0.248 " + "l1=0.228" + "l2=0.0201 f=-0.713 shape=(1, 9000, 1)
logits [[ 6.527959  -4.0496683  4.2519464 -9.583065 ]]
Iteration 700 of 1000: loss=0.243 " + "l1=0.221" + "l2=0.022 f=-0.712 shape=(1, 9000, 1)
logits [[ 6.467141  -4.046674   4.2549176 -9.525022 ]]
Iteration 800 of 1000: loss=0.239 " + "l1=0.215" + "l2=0.0239 f=-0.711 shape=(1, 9000, 1)
logits [[ 6.4103    -4.0443277  4.2581515 -9.469834 ]]
Iteration 900 of 1000: loss=0.235 " + "l1=0.21" + "l2=0.0254 f=-0.711 shape=(1, 9000, 1)
logits [[ 6.354237  -4.0395956  4.2574425 -9.416972 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.87 " + "l1=2.87" + "l2=0 f=-0.738 shape=(1, 9000, 1)
logits [[ 6.925108  -3.9448016  4.0530434 -9.984224 ]]
Iteration 100 of 1000: loss=1.51 " + "l1=0.849" + "l2=0.659 f=-0.723 shape=(1, 9000, 1)
logits [[ 5.2945366 -4.1313353  4.4459615 -8.500304 ]]
Iteration 200 of 1000: loss=1.02 " + "l1=0.213" + "l2=0.804 f=-0.723 shape=(1, 9000, 1)
logits [[ 4.749855  -4.195541   4.5372043 -7.984227 ]]
Iteration 300 of 1000: loss=0.684 " + "l1=0" + "l2=0.684 f=-0.72 shape=(1, 9000, 1)
logits [[ 4.6133666 -4.2633114  4.614969  -7.8431206]]
Iteration 400 of 1000: loss=0.541 " + "l1=0.00143" + "l2=0.539 f=-0.721 shape=(1, 9000, 1)
logits [[ 4.595847  -4.2854643  4.5944133 -7.7903066]]
Iteration 500 of 1000: loss=0.459 " + "l1=0.00513" + "l2=0.454 f=-0.721 shape=(1, 9000, 1)
logits [[ 4.579718  -4.2906876  4.574591  -7.7488623]]
Iteration 600 of 1000: loss=0.397 " + "l1=0" + "l2=0.397 f=-0.722 shape=(1, 9000, 1)
logits [[ 4.5438747 -4.2912216  4.5517807 -7.6934886]]
Iteration 700 of 1000: loss=0.349 " + "l1=0.00659" + "l2=0.342 f=-0.721 shape=(1, 9000, 1)
logits [[ 4.5248485 -4.2826285  4.5182614 -7.645393 ]]
Iteration 800 of 1000: loss=0.311 " + "l1=0.00406" + "l2=0.307 f=-0.718 shape=(1, 9000, 1)
logits [[ 4.48362   -4.266856   4.4795613 -7.5701566]]
Iteration 900 of 1000: loss=0.28 " + "l1=0.00219" + "l2=0.278 f=-0.716 shape=(1, 9000, 1)
logits [[ 4.4495997 -4.25825    4.4474053 -7.50386  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.58 " + "l1=1.58" + "l2=0 f=-0.738 shape=(1, 9000, 1)
logits [[ 6.925108  -3.9448016  4.0530434 -9.984224 ]]
Iteration 100 of 1000: loss=1.13 " + "l1=0.878" + "l2=0.256 f=-0.728 shape=(1, 9000, 1)
logits [[ 5.9406843 -4.1270323  4.3435607 -9.067365 ]]
Iteration 200 of 1000: loss=0.911 " + "l1=0.589" + "l2=0.322 f=-0.724 shape=(1, 9000, 1)
logits [[ 5.493812  -4.1597905  4.4221444 -8.652036 ]]
Iteration 300 of 1000: loss=0.767 " + "l1=0.427" + "l2=0.34 f=-0.713 shape=(1, 9000, 1)
logits [[ 5.24596  -4.178017  4.469133 -8.390099]]
Iteration 400 of 1000: loss=0.625 " + "l1=0.274" + "l2=0.352 f=-0.709 shape=(1, 9000, 1)
logits [[ 5.037076  -4.211021   4.5397525 -8.20105  ]]
Iteration 500 of 1000: loss=0.511 " + "l1=0.142" + "l2=0.37 f=-0.706 shape=(1, 9000, 1)
logits [[ 4.8415465 -4.2394977  4.583915  -8.0098295]]
Iteration 600 of 1000: loss=0.381 " + "l1=0.00342" + "l2=0.377 f=-0.703 shape=(1, 9000, 1)
logits [[ 4.608101 -4.258491  4.60188  -7.764535]]
Iteration 700 of 1000: loss=0.299 " + "l1=0" + "l2=0.299 f=-0.701 shape=(1, 9000, 1)
logits [[ 4.5410285 -4.228142   4.5456557 -7.663033 ]]
Iteration 800 of 1000: loss=0.247 " + "l1=0" + "l2=0.247 f=-0.701 shape=(1, 9000, 1)
logits [[ 4.5318713 -4.2306337  4.5331497 -7.638883 ]]
Iteration 900 of 1000: loss=0.221 " + "l1=0" + "l2=0.221 f=-0.704 shape=(1, 9000, 1)
logits [[ 4.5074463 -4.235197   4.515935  -7.6054263]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.933 " + "l1=0.933" + "l2=0 f=-0.738 shape=(1, 9000, 1)
logits [[ 6.925108  -3.9448016  4.0530434 -9.984224 ]]
Iteration 100 of 1000: loss=0.781 " + "l1=0.695" + "l2=0.0862 f=-0.721 shape=(1, 9000, 1)
logits [[ 6.4210615 -4.0857525  4.2820277 -9.500067 ]]
Iteration 200 of 1000: loss=0.704 " + "l1=0.583" + "l2=0.121 f=-0.72 shape=(1, 9000, 1)
logits [[ 6.129009  -4.1243076  4.3352365 -9.221639 ]]
Iteration 300 of 1000: loss=0.628 " + "l1=0.467" + "l2=0.161 f=-0.722 shape=(1, 9000, 1)
logits [[ 5.8231673 -4.1649494  4.3877144 -8.932826 ]]
Iteration 400 of 1000: loss=0.569 " + "l1=0.401" + "l2=0.168 f=-0.718 shape=(1, 9000, 1)
logits [[ 5.6505156 -4.1766686  4.4172735 -8.763415 ]]
Iteration 500 of 1000: loss=0.518 " + "l1=0.342" + "l2=0.176 f=-0.713 shape=(1, 9000, 1)
logits [[ 5.4873037 -4.1827664  4.4357996 -8.593129 ]]
Iteration 600 of 1000: loss=0.459 " + "l1=0.274" + "l2=0.184 f=-0.71 shape=(1, 9000, 1)
logits [[ 5.331524 -4.20746   4.487913 -8.451063]]
Iteration 700 of 1000: loss=0.408 " + "l1=0.224" + "l2=0.184 f=-0.708 shape=(1, 9000, 1)
logits [[ 5.1923103 -4.2091107  4.5029373 -8.316723 ]]
Iteration 800 of 1000: loss=0.361 " + "l1=0.176" + "l2=0.184 f=-0.709 shape=(1, 9000, 1)
logits [[ 5.062389  -4.2191687  4.520653  -8.20065  ]]
Iteration 900 of 1000: loss=0.321 " + "l1=0.132" + "l2=0.19 f=-0.707 shape=(1, 9000, 1)
logits [[ 4.9137754 -4.2023573  4.509022  -8.049427 ]]
--- 264.75891494750977 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.169 " + "l1=0.169" + "l2=0 f=-0.738 shape=(1, 9000, 1)
logits [[ 6.925108  -3.9448016  4.0530434 -9.984224 ]]
Iteration 100 of 1000: loss=0.168 " + "l1=0.168" + "l2=0.000404 f=-0.736 shape=(1, 9000, 1)
logits [[ 6.87615   -3.9239233  4.027208  -9.924321 ]]
Iteration 200 of 1000: loss=0.168 " + "l1=0.168" + "l2=0.000442 f=-0.736 shape=(1, 9000, 1)
logits [[ 6.865506  -3.9186509  4.021462  -9.911585 ]]
Iteration 300 of 1000: loss=0.168 " + "l1=0.167" + "l2=0.000527 f=-0.735 shape=(1, 9000, 1)
logits [[ 6.8525963 -3.9127135  4.015193  -9.895818 ]]
Iteration 400 of 1000: loss=0.168 " + "l1=0.167" + "l2=0.000657 f=-0.734 shape=(1, 9000, 1)
logits [[ 6.8395715 -3.9069328  4.009286  -9.879656 ]]
Iteration 500 of 1000: loss=0.168 " + "l1=0.167" + "l2=0.000787 f=-0.734 shape=(1, 9000, 1)
logits [[ 6.8267555 -3.9018366  4.004042  -9.863482 ]]
Iteration 600 of 1000: loss=0.168 " + "l1=0.167" + "l2=0.000941 f=-0.733 shape=(1, 9000, 1)
logits [[ 6.8142943 -3.89709    3.9992511 -9.847648 ]]
Iteration 700 of 1000: loss=0.167 " + "l1=0.166" + "l2=0.00111 f=-0.732 shape=(1, 9000, 1)
logits [[ 6.802217  -3.8927135  3.9950194 -9.832184 ]]
Iteration 800 of 1000: loss=0.167 " + "l1=0.166" + "l2=0.00126 f=-0.731 shape=(1, 9000, 1)
logits [[ 6.790816  -3.888697   3.9912016 -9.81735  ]]
Iteration 900 of 1000: loss=0.167 " + "l1=0.166" + "l2=0.0014 f=-0.73 shape=(1, 9000, 1)
logits [[ 6.780102  -3.884879   3.9875338 -9.803014 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.69 " + "l1=1.69" + "l2=0 f=-0.738 shape=(1, 9000, 1)
logits [[ 6.925108  -3.9448016  4.0530434 -9.984224 ]]
Iteration 100 of 1000: loss=1.62 " + "l1=1.58" + "l2=0.0419 f=-0.727 shape=(1, 9000, 1)
logits [[ 6.4042864 -3.7241998  3.7838402 -9.370117 ]]
Iteration 200 of 1000: loss=1.58 " + "l1=1.51" + "l2=0.0632 f=-0.714 shape=(1, 9000, 1)
logits [[ 6.119148  -3.5841243  3.6339583 -9.025593 ]]
Iteration 300 of 1000: loss=1.54 " + "l1=1.45" + "l2=0.0833 f=-0.698 shape=(1, 9000, 1)
logits [[ 5.8492002 -3.4487457  3.4970787 -8.691442 ]]
Iteration 400 of 1000: loss=1.5 " + "l1=1.4" + "l2=0.102 f=-0.681 shape=(1, 9000, 1)
logits [[ 5.6124783 -3.356075   3.3939824 -8.375408 ]]
Iteration 500 of 1000: loss=1.47 " + "l1=1.34" + "l2=0.123 f=-0.665 shape=(1, 9000, 1)
logits [[ 5.378536  -3.2663677  3.2866096 -8.057023 ]]
Iteration 600 of 1000: loss=1.43 " + "l1=1.29" + "l2=0.138 f=-0.653 shape=(1, 9000, 1)
logits [[ 5.1623654 -3.1806169  3.1698575 -7.7637687]]
Iteration 700 of 1000: loss=1.39 " + "l1=1.24" + "l2=0.152 f=-0.653 shape=(1, 9000, 1)
logits [[ 4.921889  -3.1266892  3.0540755 -7.4592953]]
Iteration 800 of 1000: loss=1.36 " + "l1=1.19" + "l2=0.164 f=-0.646 shape=(1, 9000, 1)
logits [[ 4.7206426 -3.0604212  2.9488294 -7.191086 ]]
Iteration 900 of 1000: loss=1.32 " + "l1=1.15" + "l2=0.175 f=-0.63 shape=(1, 9000, 1)
logits [[ 4.5350275 -2.9879053  2.8662975 -6.932425 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=16.9 " + "l1=16.9" + "l2=0 f=-0.738 shape=(1, 9000, 1)
logits [[ 6.925108  -3.9448016  4.0530434 -9.984224 ]]
Iteration 100 of 1000: loss=9.53 " + "l1=5.33" + "l2=4.2 f=-0.5 shape=(1, 9000, 1)
logits [[ 1.889658  -2.188374   1.7367225 -3.4360123]]
Iteration 200 of 1000: loss=6.59 " + "l1=2.06" + "l2=4.54 f=-0.329 shape=(1, 9000, 1)
logits [[ 0.72350216 -1.4267128   0.71858484 -1.3318014 ]]
Iteration 300 of 1000: loss=4.83 " + "l1=0.395" + "l2=4.44 f=-0.223 shape=(1, 9000, 1)
logits [[ 0.20105138 -1.0998508   0.20008312 -0.19397977]]
Iteration 400 of 1000: loss=3.81 " + "l1=0" + "l2=3.81 f=-0.201 shape=(1, 9000, 1)
logits [[ 0.07120634 -1.0431454   0.08044815  0.08878357]]
Iteration 500 of 1000: loss=3.28 " + "l1=0" + "l2=3.28 f=-0.206 shape=(1, 9000, 1)
logits [[ 0.05377139 -1.0362904   0.07229052  0.08797558]]
Iteration 600 of 1000: loss=2.99 " + "l1=0.0235" + "l2=2.97 f=-0.199 shape=(1, 9000, 1)
logits [[ 0.09084132 -1.034121    0.08098611  0.06734269]]
Iteration 700 of 1000: loss=2.79 " + "l1=0.00943" + "l2=2.78 f=-0.194 shape=(1, 9000, 1)
logits [[ 0.07896028 -1.0275543   0.09172867  0.08229484]]
Iteration 800 of 1000: loss=2.67 " + "l1=0.0272" + "l2=2.64 f=-0.191 shape=(1, 9000, 1)
logits [[ 0.09950221 -1.0194848   0.08341101  0.07226945]]
Iteration 900 of 1000: loss=2.56 " + "l1=0" + "l2=2.56 f=-0.191 shape=(1, 9000, 1)
logits [[ 0.08175581 -1.0199013   0.08188013  0.09236545]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=9.3 " + "l1=9.3" + "l2=0 f=-0.738 shape=(1, 9000, 1)
logits [[ 6.925108  -3.9448016  4.0530434 -9.984224 ]]
Iteration 100 of 1000: loss=6.82 " + "l1=5.41" + "l2=1.4 f=-0.615 shape=(1, 9000, 1)
logits [[ 3.7591872 -2.7011232  2.5673811 -6.0840178]]
Iteration 200 of 1000: loss=5.65 " + "l1=3.74" + "l2=1.91 f=-0.524 shape=(1, 9000, 1)
logits [[ 2.51546   -2.3326206  2.000268  -4.2777743]]
Iteration 300 of 1000: loss=4.72 " + "l1=2.29" + "l2=2.43 f=-0.421 shape=(1, 9000, 1)
logits [[ 1.5332102 -2.0410888  1.4561304 -2.6331992]]
Iteration 400 of 1000: loss=3.78 " + "l1=1.36" + "l2=2.42 f=-0.309 shape=(1, 9000, 1)
logits [[ 0.98675835 -1.7459801   0.997436   -1.4722263 ]]
Iteration 500 of 1000: loss=3.22 " + "l1=0.686" + "l2=2.53 f=-0.245 shape=(1, 9000, 1)
logits [[ 0.58536065 -1.4918276   0.58657    -0.6607215 ]]
Iteration 600 of 1000: loss=2.8 " + "l1=0.2" + "l2=2.61 f=-0.212 shape=(1, 9000, 1)
logits [[ 0.2789033  -1.3254377   0.28187647 -0.08149178]]
Iteration 700 of 1000: loss=2.53 " + "l1=0.0262" + "l2=2.5 f=-0.202 shape=(1, 9000, 1)
logits [[ 0.167826   -1.2656478   0.16886765  0.12120011]]
Iteration 800 of 1000: loss=2.36 " + "l1=0.0188" + "l2=2.34 f=-0.196 shape=(1, 9000, 1)
logits [[ 0.17750943 -1.2823124   0.17668651  0.14325243]]
Iteration 900 of 1000: loss=2.26 " + "l1=0" + "l2=2.26 f=-0.193 shape=(1, 9000, 1)
logits [[ 0.1644896  -1.2859398   0.17055953  0.18082687]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.5 " + "l1=5.5" + "l2=0 f=-0.738 shape=(1, 9000, 1)
logits [[ 6.925108  -3.9448016  4.0530434 -9.984224 ]]
Iteration 100 of 1000: loss=4.56 " + "l1=4" + "l2=0.559 f=-0.684 shape=(1, 9000, 1)
logits [[ 4.828682  -3.0806193  2.9984493 -7.48353  ]]
Iteration 200 of 1000: loss=4.09 " + "l1=3.33" + "l2=0.761 f=-0.618 shape=(1, 9000, 1)
logits [[ 3.9539995 -2.7944384  2.6545255 -6.286148 ]]
Iteration 300 of 1000: loss=3.73 " + "l1=2.86" + "l2=0.869 f=-0.556 shape=(1, 9000, 1)
logits [[ 3.3778033 -2.5495493  2.3802276 -5.432173 ]]
Iteration 400 of 1000: loss=3.39 " + "l1=2.46" + "l2=0.932 f=-0.503 shape=(1, 9000, 1)
logits [[ 2.9012623 -2.364065   2.1120546 -4.6631007]]
Iteration 500 of 1000: loss=3.04 " + "l1=1.99" + "l2=1.04 f=-0.433 shape=(1, 9000, 1)
logits [[ 2.3692176 -2.1914697  1.8486814 -3.7586856]]
Iteration 600 of 1000: loss=2.63 " + "l1=1.4" + "l2=1.22 f=-0.332 shape=(1, 9000, 1)
logits [[ 1.7280504 -1.9974374  1.5280077 -2.5861454]]
Iteration 700 of 1000: loss=2.29 " + "l1=0.981" + "l2=1.31 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.286657  -1.8816488  1.2862959 -1.7328831]]
Iteration 800 of 1000: loss=2.07 " + "l1=0.753" + "l2=1.32 f=-0.222 shape=(1, 9000, 1)
logits [[ 1.0683289 -1.7823943  1.0714222 -1.2462894]]
Iteration 900 of 1000: loss=1.93 " + "l1=0.625" + "l2=1.31 f=-0.203 shape=(1, 9000, 1)
logits [[ 0.95276976 -1.7465961   0.95379823 -0.9704314 ]]
--- 298.7017047405243 seconds ---
Adv result:3
Loading record A07092
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.075 " + "l1=0.075" + "l2=0 f=-0.503 shape=(1, 9000, 1)
logits [[ 4.5789285 -2.9210186  2.9221432 -6.5905385]]
Iteration 100 of 1000: loss=0.0746 " + "l1=0.0744" + "l2=0.000254 f=-0.499 shape=(1, 9000, 1)
logits [[ 4.537591  -2.8979766  2.9003758 -6.5378304]]
Iteration 200 of 1000: loss=0.0745 " + "l1=0.0742" + "l2=0.000248 f=-0.499 shape=(1, 9000, 1)
logits [[ 4.5309014 -2.8933418  2.8953226 -6.528334 ]]
Iteration 300 of 1000: loss=0.0744 " + "l1=0.0741" + "l2=0.000303 f=-0.498 shape=(1, 9000, 1)
logits [[ 4.5215573 -2.8877537  2.889353  -6.5155993]]
Iteration 400 of 1000: loss=0.0743 " + "l1=0.0739" + "l2=0.000371 f=-0.497 shape=(1, 9000, 1)
logits [[ 4.511775  -2.88209    2.883431  -6.5022707]]
Iteration 500 of 1000: loss=0.0743 " + "l1=0.0738" + "l2=0.000485 f=-0.497 shape=(1, 9000, 1)
logits [[ 4.502022  -2.8765485  2.8775127 -6.4891057]]
Iteration 600 of 1000: loss=0.0743 " + "l1=0.0736" + "l2=0.000632 f=-0.496 shape=(1, 9000, 1)
logits [[ 4.4927673 -2.8713543  2.8721654 -6.4765687]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.75 " + "l1=0.75" + "l2=0 f=-0.503 shape=(1, 9000, 1)
logits [[ 4.5789285 -2.9210186  2.9221432 -6.5905385]]
Iteration 100 of 1000: loss=0.716 " + "l1=0.7" + "l2=0.0169 f=-0.485 shape=(1, 9000, 1)
logits [[ 4.2492785 -2.7459996  2.7466848 -6.1884227]]
Iteration 200 of 1000: loss=0.7 " + "l1=0.678" + "l2=0.0223 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.106517  -2.6741214  2.6720057 -5.994105 ]]
Iteration 300 of 1000: loss=0.685 " + "l1=0.656" + "l2=0.029 f=-0.462 shape=(1, 9000, 1)
logits [[ 3.9586115 -2.6055088  2.5987499 -5.7995934]]
Iteration 400 of 1000: loss=0.671 " + "l1=0.634" + "l2=0.0369 f=-0.452 shape=(1, 9000, 1)
logits [[ 3.799085  -2.5422213  2.5331745 -5.599696 ]]
Iteration 500 of 1000: loss=0.66 " + "l1=0.616" + "l2=0.0434 f=-0.446 shape=(1, 9000, 1)
logits [[ 3.6719053 -2.4924052  2.483107  -5.4456644]]
Iteration 600 of 1000: loss=0.65 " + "l1=0.6" + "l2=0.0496 f=-0.438 shape=(1, 9000, 1)
logits [[ 3.5512817 -2.452329   2.4507027 -5.302469 ]]
Iteration 700 of 1000: loss=0.641 " + "l1=0.585" + "l2=0.0559 f=-0.429 shape=(1, 9000, 1)
logits [[ 3.434278  -2.4139202  2.4231443 -5.1606236]]
Iteration 800 of 1000: loss=0.633 " + "l1=0.571" + "l2=0.0622 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.3258073 -2.3806326  2.399092  -5.0319033]]
Iteration 900 of 1000: loss=0.625 " + "l1=0.558" + "l2=0.0675 f=-0.416 shape=(1, 9000, 1)
logits [[ 3.2208507 -2.3549747  2.3800323 -4.910002 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.5 " + "l1=7.5" + "l2=0 f=-0.503 shape=(1, 9000, 1)
logits [[ 4.5789285 -2.9210186  2.9221432 -6.5905385]]
Iteration 100 of 1000: loss=4.63 " + "l1=3.41" + "l2=1.21 f=-0.369 shape=(1, 9000, 1)
logits [[ 1.7052794 -1.6991675  1.7141619 -3.1974986]]
Iteration 200 of 1000: loss=3.66 " + "l1=2.34" + "l2=1.32 f=-0.251 shape=(1, 9000, 1)
logits [[ 1.2564865 -1.085961   1.2570931 -2.42965  ]]
Iteration 300 of 1000: loss=3.24 " + "l1=1.91" + "l2=1.32 f=-0.224 shape=(1, 9000, 1)
logits [[ 1.0586612  -0.85427964  1.0594501  -2.161542  ]]
Iteration 400 of 1000: loss=2.96 " + "l1=1.56" + "l2=1.4 f=-0.206 shape=(1, 9000, 1)
logits [[ 0.8950344  -0.66104114  0.89696646 -1.9549875 ]]
Iteration 500 of 1000: loss=2.79 " + "l1=1.36" + "l2=1.43 f=-0.197 shape=(1, 9000, 1)
logits [[ 0.77754104 -0.57246155  0.7884847  -1.7809483 ]]
Iteration 600 of 1000: loss=2.65 " + "l1=1.19" + "l2=1.46 f=-0.195 shape=(1, 9000, 1)
logits [[ 0.6937359  -0.49399823  0.69912696 -1.6779337 ]]
Iteration 700 of 1000: loss=2.55 " + "l1=1.06" + "l2=1.49 f=-0.192 shape=(1, 9000, 1)
logits [[ 0.6218323  -0.43335143  0.62935734 -1.5873678 ]]
Iteration 800 of 1000: loss=2.47 " + "l1=0.953" + "l2=1.51 f=-0.186 shape=(1, 9000, 1)
logits [[ 0.56150144 -0.3847046   0.568588   -1.4886954 ]]
Iteration 900 of 1000: loss=2.39 " + "l1=0.87" + "l2=1.52 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.52244294 -0.34424517  0.5261164  -1.4317626 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=75 " + "l1=75" + "l2=0 f=-0.503 shape=(1, 9000, 1)
logits [[ 4.5789285 -2.9210186  2.9221432 -6.5905385]]
Iteration 100 of 1000: loss=11.9 " + "l1=0.104" + "l2=11.8 f=-0.246 shape=(1, 9000, 1)
logits [[-0.44881     0.01584663  0.02622663 -0.5787657 ]]
Iteration 200 of 1000: loss=7.42 " + "l1=0.0599" + "l2=7.36 f=-0.23 shape=(1, 9000, 1)
logits [[-0.07538518  0.14202061  0.14800917 -1.1355734 ]]
Iteration 300 of 1000: loss=6.15 " + "l1=0" + "l2=6.15 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.0681895   0.19416235  0.19154982 -1.3341453 ]]
Iteration 400 of 1000: loss=5.64 " + "l1=0.167" + "l2=5.48 f=-0.212 shape=(1, 9000, 1)
logits [[ 0.13198525  0.1974136   0.21412273 -1.3906084 ]]
Iteration 500 of 1000: loss=5.13 " + "l1=0" + "l2=5.13 f=-0.206 shape=(1, 9000, 1)
logits [[ 0.14720826  0.21972305  0.2050408  -1.3965181 ]]
Iteration 600 of 1000: loss=4.85 " + "l1=0.122" + "l2=4.73 f=-0.204 shape=(1, 9000, 1)
logits [[ 0.17880067  0.20492092  0.21709083 -1.4152099 ]]
Iteration 700 of 1000: loss=4.5 " + "l1=0" + "l2=4.5 f=-0.202 shape=(1, 9000, 1)
logits [[ 0.1681793   0.22396302  0.21390316 -1.4135166 ]]
Iteration 800 of 1000: loss=4.3 " + "l1=0.0635" + "l2=4.24 f=-0.201 shape=(1, 9000, 1)
logits [[ 0.17331831  0.21562435  0.22197072 -1.4140015 ]]
Iteration 900 of 1000: loss=4.08 " + "l1=0" + "l2=4.08 f=-0.2 shape=(1, 9000, 1)
logits [[ 0.14163649  0.22231366  0.2118898  -1.3771658 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=41.2 " + "l1=41.2" + "l2=0 f=-0.503 shape=(1, 9000, 1)
logits [[ 4.5789285 -2.9210186  2.9221432 -6.5905385]]
Iteration 100 of 1000: loss=11 " + "l1=3.52" + "l2=7.52 f=-0.193 shape=(1, 9000, 1)
logits [[ 0.32772756 -0.22672707  0.41320848 -1.2853127 ]]
Iteration 200 of 1000: loss=6.33 " + "l1=0.0194" + "l2=6.31 f=-0.201 shape=(1, 9000, 1)
logits [[ 0.14771338  0.2022193   0.20575102 -1.3580337 ]]
Iteration 300 of 1000: loss=5.32 " + "l1=0" + "l2=5.32 f=-0.2 shape=(1, 9000, 1)
logits [[ 0.18714222  0.2374264   0.23156603 -1.4575126 ]]
Iteration 400 of 1000: loss=4.77 " + "l1=0.0956" + "l2=4.67 f=-0.193 shape=(1, 9000, 1)
logits [[ 0.19926736  0.22302307  0.24040811 -1.4327675 ]]
Iteration 500 of 1000: loss=4.27 " + "l1=0.0299" + "l2=4.24 f=-0.186 shape=(1, 9000, 1)
logits [[ 0.20867455  0.23285861  0.23829211 -1.4221938 ]]
Iteration 600 of 1000: loss=3.94 " + "l1=0" + "l2=3.94 f=-0.185 shape=(1, 9000, 1)
logits [[ 0.18485771  0.23759516  0.23595051 -1.3997568 ]]
Iteration 700 of 1000: loss=3.7 " + "l1=0" + "l2=3.7 f=-0.186 shape=(1, 9000, 1)
logits [[ 0.15471038  0.24305606  0.22879334 -1.3723427 ]]
Iteration 800 of 1000: loss=3.43 " + "l1=0" + "l2=3.43 f=-0.187 shape=(1, 9000, 1)
logits [[ 0.12651683  0.23145987  0.21963724 -1.3247948 ]]
Iteration 900 of 1000: loss=3.18 " + "l1=0" + "l2=3.18 f=-0.189 shape=(1, 9000, 1)
logits [[ 0.1043037   0.22124411  0.21002486 -1.2909155 ]]
--- 276.1439051628113 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0166 " + "l1=0.0166" + "l2=0 f=-0.503 shape=(1, 9000, 1)
logits [[ 4.5789285 -2.9210186  2.9221432 -6.5905385]]
Iteration 100 of 1000: loss=0.0164 " + "l1=0.0162" + "l2=0.000164 f=-0.503 shape=(1, 9000, 1)
logits [[ 4.5496545 -2.9283457  2.9267442 -6.560771 ]]
Iteration 200 of 1000: loss=0.0163 " + "l1=0.0162" + "l2=0.000137 f=-0.503 shape=(1, 9000, 1)
logits [[ 4.5484757 -2.9294267  2.9276388 -6.559373 ]]
Iteration 300 of 1000: loss=0.0163 " + "l1=0.0162" + "l2=0.000174 f=-0.503 shape=(1, 9000, 1)
logits [[ 4.544496  -2.9309106  2.9287107 -6.5552053]]
Iteration 400 of 1000: loss=0.0163 " + "l1=0.0161" + "l2=0.000237 f=-0.503 shape=(1, 9000, 1)
logits [[ 4.5401716 -2.9322965  2.9297454 -6.5506105]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.166 " + "l1=0.166" + "l2=0 f=-0.503 shape=(1, 9000, 1)
logits [[ 4.5789285 -2.9210186  2.9221432 -6.5905385]]
Iteration 100 of 1000: loss=0.15 " + "l1=0.141" + "l2=0.00888 f=-0.51 shape=(1, 9000, 1)
logits [[ 4.3697577 -2.9844034  2.960989  -6.3847437]]
Iteration 200 of 1000: loss=0.143 " + "l1=0.131" + "l2=0.0125 f=-0.511 shape=(1, 9000, 1)
logits [[ 4.2894797 -3.0178328  2.984435  -6.3013897]]
Iteration 300 of 1000: loss=0.137 " + "l1=0.122" + "l2=0.0157 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.2103353 -3.0377696  2.9948885 -6.2143164]]
Iteration 400 of 1000: loss=0.132 " + "l1=0.114" + "l2=0.0181 f=-0.511 shape=(1, 9000, 1)
logits [[ 4.1389594 -3.04878    2.999917  -6.1336794]]
Iteration 500 of 1000: loss=0.127 " + "l1=0.106" + "l2=0.0208 f=-0.51 shape=(1, 9000, 1)
logits [[ 4.061816  -3.0547678  3.000557  -6.045696 ]]
Iteration 600 of 1000: loss=0.122 " + "l1=0.0987" + "l2=0.0229 f=-0.508 shape=(1, 9000, 1)
logits [[ 3.984889  -3.0597162  2.9983547 -5.9559407]]
Iteration 700 of 1000: loss=0.116 " + "l1=0.0907" + "l2=0.0252 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.9057605 -3.067186   2.9985464 -5.8639307]]
Iteration 800 of 1000: loss=0.109 " + "l1=0.0814" + "l2=0.0279 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.8150153 -3.0757174  3.0009208 -5.7576547]]
Iteration 900 of 1000: loss=0.102 " + "l1=0.071" + "l2=0.0307 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.7165859 -3.08931    3.0065231 -5.642415 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.66 " + "l1=1.66" + "l2=0 f=-0.503 shape=(1, 9000, 1)
logits [[ 4.5789285 -2.9210186  2.9221432 -6.5905385]]
Iteration 100 of 1000: loss=0.342 " + "l1=0" + "l2=0.342 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.0042696 -3.183964   3.0088565 -4.9375787]]
Iteration 200 of 1000: loss=0.229 " + "l1=0" + "l2=0.229 f=-0.516 shape=(1, 9000, 1)
logits [[ 2.9921148 -3.1501896  3.00198   -4.9072547]]
Iteration 300 of 1000: loss=0.184 " + "l1=0" + "l2=0.184 f=-0.511 shape=(1, 9000, 1)
logits [[ 2.9673684 -3.136065   3.0021331 -4.8786216]]
Iteration 400 of 1000: loss=0.139 " + "l1=0" + "l2=0.139 f=-0.505 shape=(1, 9000, 1)
logits [[ 2.9999344 -3.1193285  3.0065846 -4.907851 ]]
Iteration 500 of 1000: loss=0.117 " + "l1=0.00734" + "l2=0.11 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.0242734 -3.110198   3.016935  -4.934686 ]]
Iteration 600 of 1000: loss=0.0963 " + "l1=0.00373" + "l2=0.0925 f=-0.498 shape=(1, 9000, 1)
logits [[ 3.0315819 -3.1092906  3.0278478 -4.941861 ]]
Iteration 700 of 1000: loss=0.0815 " + "l1=0" + "l2=0.0815 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.0344205 -3.1197312  3.048687  -4.9430995]]
Iteration 800 of 1000: loss=0.0723 " + "l1=0" + "l2=0.0723 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.050944  -3.1280394  3.069787  -4.9565177]]
Iteration 900 of 1000: loss=0.0647 " + "l1=0" + "l2=0.0647 f=-0.486 shape=(1, 9000, 1)
logits [[ 3.0807872 -3.133197   3.0896387 -4.9797406]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.911 " + "l1=0.911" + "l2=0 f=-0.503 shape=(1, 9000, 1)
logits [[ 4.5789285 -2.9210186  2.9221432 -6.5905385]]
Iteration 100 of 1000: loss=0.375 " + "l1=0.0677" + "l2=0.308 f=-0.533 shape=(1, 9000, 1)
logits [[ 3.1384232 -3.1942365  3.0152726 -5.0915504]]
Iteration 200 of 1000: loss=0.211 " + "l1=0.00262" + "l2=0.208 f=-0.517 shape=(1, 9000, 1)
logits [[ 3.0215573 -3.163457   3.0167854 -4.9438415]]
Iteration 300 of 1000: loss=0.153 " + "l1=0" + "l2=0.153 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.004306  -3.1399188  3.0117817 -4.92193  ]]
Iteration 400 of 1000: loss=0.115 " + "l1=0" + "l2=0.115 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.0190535 -3.1301653  3.0216386 -4.935571 ]]
Iteration 500 of 1000: loss=0.0919 " + "l1=0" + "l2=0.0919 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.0296366 -3.1257527  3.0323849 -4.9431148]]
Iteration 600 of 1000: loss=0.0803 " + "l1=0.00498" + "l2=0.0753 f=-0.497 shape=(1, 9000, 1)
logits [[ 3.059289  -3.1309595  3.0502367 -4.965029 ]]
Iteration 700 of 1000: loss=0.0682 " + "l1=0.00204" + "l2=0.0662 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.0752587 -3.1384897  3.071555  -4.973622 ]]
Iteration 800 of 1000: loss=0.0596 " + "l1=0" + "l2=0.0596 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.0898843 -3.147811   3.094259  -4.9825363]]
Iteration 900 of 1000: loss=0.0557 " + "l1=0" + "l2=0.0557 f=-0.483 shape=(1, 9000, 1)
logits [[ 3.1022797 -3.1564562  3.1119604 -4.9901824]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.538 " + "l1=0.538" + "l2=0 f=-0.503 shape=(1, 9000, 1)
logits [[ 4.5789285 -2.9210186  2.9221432 -6.5905385]]
Iteration 100 of 1000: loss=0.356 " + "l1=0.248" + "l2=0.108 f=-0.523 shape=(1, 9000, 1)
logits [[ 3.7751286 -3.11508    3.0125253 -5.7656775]]
Iteration 200 of 1000: loss=0.266 " + "l1=0.114" + "l2=0.152 f=-0.526 shape=(1, 9000, 1)
logits [[ 3.379675  -3.1639538  3.0283163 -5.349179 ]]
Iteration 300 of 1000: loss=0.171 " + "l1=0.00183" + "l2=0.169 f=-0.518 shape=(1, 9000, 1)
logits [[ 3.0327692 -3.1632388  3.0271485 -4.969417 ]]
Iteration 400 of 1000: loss=0.117 " + "l1=0" + "l2=0.117 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.0188234 -3.143624   3.0223968 -4.9398837]]
Iteration 500 of 1000: loss=0.0887 " + "l1=0.00109" + "l2=0.0877 f=-0.503 shape=(1, 9000, 1)
logits [[ 3.0348177 -3.132473   3.0314627 -4.9442105]]
Iteration 600 of 1000: loss=0.0723 " + "l1=0" + "l2=0.0723 f=-0.496 shape=(1, 9000, 1)
logits [[ 3.0498145 -3.1397033  3.0555394 -4.9507914]]
Iteration 700 of 1000: loss=0.0621 " + "l1=0.000246" + "l2=0.0619 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.082055  -3.1457193  3.0812993 -4.971676 ]]
Iteration 800 of 1000: loss=0.0566 " + "l1=0" + "l2=0.0566 f=-0.483 shape=(1, 9000, 1)
logits [[ 3.0944216 -3.1562445  3.1030948 -4.975226 ]]
Iteration 900 of 1000: loss=0.0517 " + "l1=0.000109" + "l2=0.0516 f=-0.479 shape=(1, 9000, 1)
logits [[ 3.1206822 -3.1625097  3.1203458 -4.99558  ]]
--- 264.9007785320282 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.112 " + "l1=0.112" + "l2=0 f=-0.503 shape=(1, 9000, 1)
logits [[ 4.5789285 -2.9210186  2.9221432 -6.5905385]]
Iteration 100 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.000604 f=-0.499 shape=(1, 9000, 1)
logits [[ 4.50808   -2.9071689  2.8986866 -6.493844 ]]
Iteration 200 of 1000: loss=0.11 " + "l1=0.11" + "l2=0.00067 f=-0.498 shape=(1, 9000, 1)
logits [[ 4.4912286 -2.902916   2.8913548 -6.470377 ]]
Iteration 300 of 1000: loss=0.11 " + "l1=0.109" + "l2=0.000832 f=-0.496 shape=(1, 9000, 1)
logits [[ 4.4716687 -2.8976908  2.8829477 -6.4426026]]
Iteration 400 of 1000: loss=0.11 " + "l1=0.109" + "l2=0.00104 f=-0.495 shape=(1, 9000, 1)
logits [[ 4.451463  -2.8920789  2.8743372 -6.413891 ]]
Iteration 500 of 1000: loss=0.109 " + "l1=0.108" + "l2=0.00128 f=-0.494 shape=(1, 9000, 1)
logits [[ 4.432207  -2.8866212  2.866267  -6.3862576]]
Iteration 600 of 1000: loss=0.109 " + "l1=0.108" + "l2=0.00147 f=-0.492 shape=(1, 9000, 1)
logits [[ 4.4137087 -2.8813863  2.858929  -6.3597054]]
Iteration 700 of 1000: loss=0.109 " + "l1=0.107" + "l2=0.00172 f=-0.491 shape=(1, 9000, 1)
logits [[ 4.3966923 -2.8766284  2.852362  -6.3350224]]
Iteration 800 of 1000: loss=0.109 " + "l1=0.107" + "l2=0.002 f=-0.489 shape=(1, 9000, 1)
logits [[ 4.3808136 -2.872243   2.846562  -6.311945 ]]
Iteration 900 of 1000: loss=0.109 " + "l1=0.107" + "l2=0.00216 f=-0.488 shape=(1, 9000, 1)
logits [[ 4.3655953 -2.8680956  2.8412476 -6.2899876]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.12 " + "l1=1.12" + "l2=0 f=-0.503 shape=(1, 9000, 1)
logits [[ 4.5789285 -2.9210186  2.9221432 -6.5905385]]
Iteration 100 of 1000: loss=1.01 " + "l1=0.954" + "l2=0.059 f=-0.475 shape=(1, 9000, 1)
logits [[ 3.876095  -2.8134136  2.7019687 -5.664836 ]]
Iteration 200 of 1000: loss=0.953 " + "l1=0.867" + "l2=0.0857 f=-0.46 shape=(1, 9000, 1)
logits [[ 3.5002651 -2.7569532  2.584569  -5.1687984]]
Iteration 300 of 1000: loss=0.902 " + "l1=0.799" + "l2=0.103 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.200759  -2.7122188  2.5081618 -4.7850204]]
Iteration 400 of 1000: loss=0.851 " + "l1=0.72" + "l2=0.131 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.8529668 -2.6739163  2.4281626 -4.350592 ]]
Iteration 500 of 1000: loss=0.805 " + "l1=0.648" + "l2=0.158 f=-0.426 shape=(1, 9000, 1)
logits [[ 2.5327709 -2.6501458  2.3585286 -3.9446175]]
Iteration 600 of 1000: loss=0.766 " + "l1=0.596" + "l2=0.17 f=-0.412 shape=(1, 9000, 1)
logits [[ 2.3097653 -2.6167784  2.303704  -3.6460667]]
Iteration 700 of 1000: loss=0.743 " + "l1=0.578" + "l2=0.165 f=-0.4 shape=(1, 9000, 1)
logits [[ 2.247815  -2.5654426  2.2473493 -3.531535 ]]
Iteration 800 of 1000: loss=0.726 " + "l1=0.561" + "l2=0.165 f=-0.393 shape=(1, 9000, 1)
logits [[ 2.1845527 -2.5171735  2.185014  -3.4231539]]
Iteration 900 of 1000: loss=0.713 " + "l1=0.546" + "l2=0.167 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.1298654 -2.4818413  2.1330757 -3.331447 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.2 " + "l1=11.2" + "l2=0 f=-0.503 shape=(1, 9000, 1)
logits [[ 4.5789285 -2.9210186  2.9221432 -6.5905385]]
Iteration 100 of 1000: loss=4.89 " + "l1=2.37" + "l2=2.52 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.6793782 -2.0908456  1.3161311 -1.0578452]]
Iteration 200 of 1000: loss=3.19 " + "l1=0.394" + "l2=2.79 f=-0.154 shape=(1, 9000, 1)
logits [[-0.00435962 -1.6008508   0.6912737   0.29719108]]
Iteration 300 of 1000: loss=2.33 " + "l1=0.0352" + "l2=2.29 f=-0.153 shape=(1, 9000, 1)
logits [[-0.16395801 -1.5015513   0.5440342   0.50883985]]
Iteration 400 of 1000: loss=1.92 " + "l1=0.0034" + "l2=1.91 f=-0.154 shape=(1, 9000, 1)
logits [[-0.16590649 -1.5355339   0.54456335  0.54116386]]
Iteration 500 of 1000: loss=1.7 " + "l1=0.0235" + "l2=1.68 f=-0.154 shape=(1, 9000, 1)
logits [[-0.15521942 -1.5576501   0.5607459   0.5372311 ]]
Iteration 600 of 1000: loss=1.54 " + "l1=0.00634" + "l2=1.54 f=-0.152 shape=(1, 9000, 1)
logits [[-0.16437662 -1.5734142   0.56883395  0.562493  ]]
Iteration 700 of 1000: loss=1.44 " + "l1=0.00366" + "l2=1.43 f=-0.151 shape=(1, 9000, 1)
logits [[-0.17786816 -1.5922701   0.5839519   0.5802909 ]]
Iteration 800 of 1000: loss=1.36 " + "l1=0.0149" + "l2=1.35 f=-0.15 shape=(1, 9000, 1)
logits [[-0.18318348 -1.6102798   0.6034487   0.5885879 ]]
Iteration 900 of 1000: loss=1.31 " + "l1=0" + "l2=1.31 f=-0.149 shape=(1, 9000, 1)
logits [[-0.20501076 -1.6135987   0.6001483   0.6216051 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.14 " + "l1=6.14" + "l2=0 f=-0.503 shape=(1, 9000, 1)
logits [[ 4.5789285 -2.9210186  2.9221432 -6.5905385]]
Iteration 100 of 1000: loss=3.56 " + "l1=2.61" + "l2=0.95 f=-0.397 shape=(1, 9000, 1)
logits [[ 1.8113719 -2.4814587  1.9104131 -2.8264341]]
Iteration 200 of 1000: loss=2.79 " + "l1=1.63" + "l2=1.16 f=-0.283 shape=(1, 9000, 1)
logits [[ 1.051996  -2.0360305  1.4091154 -1.5566794]]
Iteration 300 of 1000: loss=2.22 " + "l1=0.886" + "l2=1.33 f=-0.202 shape=(1, 9000, 1)
logits [[ 0.5473559 -1.8027974  1.0288678 -0.5818202]]
Iteration 400 of 1000: loss=1.81 " + "l1=0.43" + "l2=1.38 f=-0.162 shape=(1, 9000, 1)
logits [[ 0.24422821 -1.7107067   0.8002692   0.01868848]]
Iteration 500 of 1000: loss=1.58 " + "l1=0.222" + "l2=1.36 f=-0.142 shape=(1, 9000, 1)
logits [[ 0.11914667 -1.6772054   0.6971679   0.29327875]]
Iteration 600 of 1000: loss=1.45 " + "l1=0.109" + "l2=1.34 f=-0.128 shape=(1, 9000, 1)
logits [[ 0.04009453 -1.6707482   0.6585667   0.46039382]]
Iteration 700 of 1000: loss=1.34 " + "l1=0.000857" + "l2=1.34 f=-0.122 shape=(1, 9000, 1)
logits [[-0.06766289 -1.6485195   0.61499864  0.6134409 ]]
Iteration 800 of 1000: loss=1.26 " + "l1=0.00819" + "l2=1.25 f=-0.122 shape=(1, 9000, 1)
logits [[-0.09667106 -1.6595149   0.6414651   0.6265668 ]]
Iteration 900 of 1000: loss=1.19 " + "l1=0.00763" + "l2=1.19 f=-0.125 shape=(1, 9000, 1)
logits [[-0.12263319 -1.6760005   0.6569871   0.6431053 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.63 " + "l1=3.63" + "l2=0 f=-0.503 shape=(1, 9000, 1)
logits [[ 4.5789285 -2.9210186  2.9221432 -6.5905385]]
Iteration 100 of 1000: loss=2.48 " + "l1=1.9" + "l2=0.576 f=-0.426 shape=(1, 9000, 1)
logits [[ 2.2696166 -2.6675525  2.2739003 -3.5815456]]
Iteration 200 of 1000: loss=2.11 " + "l1=1.6" + "l2=0.514 f=-0.387 shape=(1, 9000, 1)
logits [[ 1.9227437 -2.429439   1.934818  -2.9743013]]
Iteration 300 of 1000: loss=1.85 " + "l1=1.27" + "l2=0.582 f=-0.33 shape=(1, 9000, 1)
logits [[ 1.4946066 -2.2012537  1.6506649 -2.2634323]]
Iteration 400 of 1000: loss=1.64 " + "l1=0.957" + "l2=0.682 f=-0.269 shape=(1, 9000, 1)
logits [[ 1.1041795 -2.010423   1.3875204 -1.5558954]]
Iteration 500 of 1000: loss=1.49 " + "l1=0.744" + "l2=0.744 f=-0.224 shape=(1, 9000, 1)
logits [[ 0.83468044 -1.9193166   1.2374396  -1.0504816 ]]
Iteration 600 of 1000: loss=1.38 " + "l1=0.601" + "l2=0.783 f=-0.196 shape=(1, 9000, 1)
logits [[ 0.649439  -1.866118   1.1414591 -0.70783  ]]
Iteration 700 of 1000: loss=1.3 " + "l1=0.49" + "l2=0.809 f=-0.172 shape=(1, 9000, 1)
logits [[ 0.526967  -1.8292531  1.0606815 -0.4461527]]
Iteration 800 of 1000: loss=1.22 " + "l1=0.416" + "l2=0.804 f=-0.157 shape=(1, 9000, 1)
logits [[ 0.45011228 -1.8237476   1.0127908  -0.26795763]]
Iteration 900 of 1000: loss=1.16 " + "l1=0.369" + "l2=0.791 f=-0.148 shape=(1, 9000, 1)
logits [[ 0.3983631 -1.8208793  0.9841679 -0.1526671]]
--- 299.8909912109375 seconds ---
Adv result:3
Loading record A07093
(1, 10044)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0508 " + "l1=0.0508" + "l2=0 f=-0.821 shape=(1, 9000, 1)
logits [[ 3.5780373 -1.5028282  2.26519   -7.623526 ]]
Iteration 100 of 1000: loss=0.0502 " + "l1=0.0497" + "l2=0.000422 f=-0.819 shape=(1, 9000, 1)
logits [[ 3.5224738 -1.4510474  2.2419183 -7.589807 ]]
Iteration 200 of 1000: loss=0.05 " + "l1=0.0495" + "l2=0.000463 f=-0.819 shape=(1, 9000, 1)
logits [[ 3.5111284 -1.4412897  2.237872  -7.5825534]]
Iteration 300 of 1000: loss=0.0499 " + "l1=0.0493" + "l2=0.000608 f=-0.818 shape=(1, 9000, 1)
logits [[ 3.4980323 -1.4318657  2.23391   -7.573976 ]]
Iteration 400 of 1000: loss=0.0498 " + "l1=0.0491" + "l2=0.000713 f=-0.818 shape=(1, 9000, 1)
logits [[ 3.4857612 -1.4233985  2.230317  -7.565449 ]]
Iteration 500 of 1000: loss=0.0498 " + "l1=0.0489" + "l2=0.000855 f=-0.818 shape=(1, 9000, 1)
logits [[ 3.474692  -1.4161487  2.2271833 -7.5574775]]
Iteration 600 of 1000: loss=0.0497 " + "l1=0.0488" + "l2=0.000969 f=-0.818 shape=(1, 9000, 1)
logits [[ 3.465479  -1.410204   2.2244287 -7.5503573]]
Iteration 700 of 1000: loss=0.0497 " + "l1=0.0486" + "l2=0.00109 f=-0.817 shape=(1, 9000, 1)
logits [[ 3.4574015 -1.4055305  2.2222838 -7.5440817]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.508 " + "l1=0.508" + "l2=0 f=-0.821 shape=(1, 9000, 1)
logits [[ 3.5780373 -1.5028282  2.26519   -7.623526 ]]
Iteration 100 of 1000: loss=0.449 " + "l1=0.418" + "l2=0.0308 f=-0.811 shape=(1, 9000, 1)
logits [[ 3.1108868 -1.0678167  2.0691385 -7.3552127]]
Iteration 200 of 1000: loss=0.422 " + "l1=0.373" + "l2=0.0495 f=-0.814 shape=(1, 9000, 1)
logits [[ 2.852321   -0.87662584  1.9973506  -7.227771  ]]
Iteration 300 of 1000: loss=0.403 " + "l1=0.339" + "l2=0.0642 f=-0.81 shape=(1, 9000, 1)
logits [[ 2.6509497 -0.7360659  1.9540168 -7.109992 ]]
Iteration 400 of 1000: loss=0.384 " + "l1=0.304" + "l2=0.0807 f=-0.801 shape=(1, 9000, 1)
logits [[ 2.4502153 -0.5864491  1.9101912 -6.9789267]]
Iteration 500 of 1000: loss=0.369 " + "l1=0.276" + "l2=0.0929 f=-0.796 shape=(1, 9000, 1)
logits [[ 2.2874558 -0.4716768  1.8773053 -6.8782954]]
Iteration 600 of 1000: loss=0.357 " + "l1=0.254" + "l2=0.103 f=-0.794 shape=(1, 9000, 1)
logits [[ 2.1505294  -0.39094102  1.8565861  -6.791266  ]]
Iteration 700 of 1000: loss=0.349 " + "l1=0.238" + "l2=0.11 f=-0.792 shape=(1, 9000, 1)
logits [[ 2.0479777  -0.33587182  1.8419662  -6.7230377 ]]
Iteration 800 of 1000: loss=0.341 " + "l1=0.227" + "l2=0.114 f=-0.79 shape=(1, 9000, 1)
logits [[ 1.9731854  -0.29900756  1.8337648  -6.6699133 ]]
Iteration 900 of 1000: loss=0.334 " + "l1=0.217" + "l2=0.117 f=-0.79 shape=(1, 9000, 1)
logits [[ 1.9078834  -0.26408964  1.8251234  -6.628694  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.08 " + "l1=5.08" + "l2=0 f=-0.821 shape=(1, 9000, 1)
logits [[ 3.5780373 -1.5028282  2.26519   -7.623526 ]]
Iteration 100 of 1000: loss=1.45 " + "l1=0.368" + "l2=1.08 f=-0.853 shape=(1, 9000, 1)
logits [[ 1.1303078   0.83649373  1.2040895  -6.5843515 ]]
Iteration 200 of 1000: loss=0.931 " + "l1=0.00862" + "l2=0.923 f=-0.862 shape=(1, 9000, 1)
logits [[ 0.89336276  1.0429308   1.0515512  -6.434408  ]]
Iteration 300 of 1000: loss=0.781 " + "l1=0.00839" + "l2=0.773 f=-0.845 shape=(1, 9000, 1)
logits [[ 0.91421294  1.007891    1.016277   -6.3168087 ]]
Iteration 400 of 1000: loss=0.691 " + "l1=0" + "l2=0.691 f=-0.833 shape=(1, 9000, 1)
logits [[ 0.9150479  0.9962015  0.9933112 -6.237455 ]]
Iteration 500 of 1000: loss=0.641 " + "l1=0" + "l2=0.641 f=-0.824 shape=(1, 9000, 1)
logits [[ 0.9319882   0.97870857  0.9760621  -6.1815658 ]]
Iteration 600 of 1000: loss=0.614 " + "l1=0" + "l2=0.614 f=-0.82 shape=(1, 9000, 1)
logits [[ 0.90372586  0.97194946  0.96481264 -6.1198344 ]]
Iteration 700 of 1000: loss=0.583 " + "l1=0.000416" + "l2=0.583 f=-0.809 shape=(1, 9000, 1)
logits [[ 0.9390194  0.9484486  0.9488644 -6.0731177]]
Iteration 800 of 1000: loss=0.563 " + "l1=0" + "l2=0.563 f=-0.807 shape=(1, 9000, 1)
logits [[ 0.8914827  0.9466799  0.9430658 -6.007239 ]]
Iteration 900 of 1000: loss=0.545 " + "l1=0" + "l2=0.545 f=-0.797 shape=(1, 9000, 1)
logits [[ 0.89668554  0.93762857  0.92467827 -5.946236  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.79 " + "l1=2.79" + "l2=0 f=-0.821 shape=(1, 9000, 1)
logits [[ 3.5780373 -1.5028282  2.26519   -7.623526 ]]
Iteration 100 of 1000: loss=1.24 " + "l1=0.649" + "l2=0.594 f=-0.835 shape=(1, 9000, 1)
logits [[ 1.5136023   0.33334464  1.508257   -6.693733  ]]
Iteration 200 of 1000: loss=0.939 " + "l1=0.344" + "l2=0.595 f=-0.841 shape=(1, 9000, 1)
logits [[ 1.250929    0.66304505  1.2885939  -6.56691   ]]
Iteration 300 of 1000: loss=0.774 " + "l1=0.158" + "l2=0.616 f=-0.843 shape=(1, 9000, 1)
logits [[ 1.0532688   0.85252357  1.1393164  -6.4177    ]]
Iteration 400 of 1000: loss=0.685 " + "l1=0.0637" + "l2=0.621 f=-0.842 shape=(1, 9000, 1)
logits [[ 0.9038646  0.9383948  1.0542831 -6.2636604]]
Iteration 500 of 1000: loss=0.619 " + "l1=0.00161" + "l2=0.617 f=-0.838 shape=(1, 9000, 1)
logits [[ 0.8042038  0.9870388  0.9899685 -6.13208  ]]
Iteration 600 of 1000: loss=0.569 " + "l1=0.00531" + "l2=0.563 f=-0.821 shape=(1, 9000, 1)
logits [[ 0.82799506  0.95452625  0.96417814 -6.0318594 ]]
Iteration 700 of 1000: loss=0.524 " + "l1=0.000958" + "l2=0.523 f=-0.808 shape=(1, 9000, 1)
logits [[ 0.8217257   0.93828815  0.9400305  -5.9319816 ]]
Iteration 800 of 1000: loss=0.486 " + "l1=0" + "l2=0.486 f=-0.794 shape=(1, 9000, 1)
logits [[ 0.82724124  0.91557175  0.9143141  -5.8346634 ]]
Iteration 900 of 1000: loss=0.451 " + "l1=0.0101" + "l2=0.441 f=-0.775 shape=(1, 9000, 1)
logits [[ 0.8713554  0.872735   0.8911254 -5.7360816]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.65 " + "l1=1.65" + "l2=0 f=-0.821 shape=(1, 9000, 1)
logits [[ 3.5780373 -1.5028282  2.26519   -7.623526 ]]
Iteration 100 of 1000: loss=1 " + "l1=0.625" + "l2=0.377 f=-0.828 shape=(1, 9000, 1)
logits [[ 1.8537971  -0.07009292  1.7101686  -6.8077755 ]]
Iteration 200 of 1000: loss=0.779 " + "l1=0.421" + "l2=0.358 f=-0.821 shape=(1, 9000, 1)
logits [[ 1.5554302   0.26893348  1.5645301  -6.6711416 ]]
Iteration 300 of 1000: loss=0.705 " + "l1=0.359" + "l2=0.346 f=-0.818 shape=(1, 9000, 1)
logits [[ 1.475856   0.3740652  1.4793626 -6.599709 ]]
Iteration 400 of 1000: loss=0.654 " + "l1=0.307" + "l2=0.348 f=-0.814 shape=(1, 9000, 1)
logits [[ 1.40453    0.4645583  1.407848  -6.5341024]]
Iteration 500 of 1000: loss=0.61 " + "l1=0.254" + "l2=0.356 f=-0.81 shape=(1, 9000, 1)
logits [[ 1.318906   0.5533083  1.335211  -6.44623  ]]
Iteration 600 of 1000: loss=0.579 " + "l1=0.235" + "l2=0.344 f=-0.805 shape=(1, 9000, 1)
logits [[ 1.2867717  0.5695167  1.2919234 -6.3681464]]
Iteration 700 of 1000: loss=0.555 " + "l1=0.21" + "l2=0.345 f=-0.804 shape=(1, 9000, 1)
logits [[ 1.2308047   0.59859425  1.2458576  -6.2920256 ]]
Iteration 800 of 1000: loss=0.538 " + "l1=0.196" + "l2=0.342 f=-0.797 shape=(1, 9000, 1)
logits [[ 1.2131468  0.6088998  1.2087501 -6.2178345]]
Iteration 900 of 1000: loss=0.517 " + "l1=0.17" + "l2=0.347 f=-0.793 shape=(1, 9000, 1)
logits [[ 1.1455382  0.6439481  1.1670482 -6.127108 ]]
--- 282.8543539047241 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0131 " + "l1=0.0131" + "l2=0 f=-0.821 shape=(1, 9000, 1)
logits [[ 3.5780373 -1.5028282  2.26519   -7.623526 ]]
Iteration 100 of 1000: loss=0.0128 " + "l1=0.0125" + "l2=0.000262 f=-0.827 shape=(1, 9000, 1)
logits [[ 3.5366879 -1.5129141  2.2852323 -7.61832  ]]
Iteration 200 of 1000: loss=0.0127 " + "l1=0.0124" + "l2=0.000261 f=-0.828 shape=(1, 9000, 1)
logits [[ 3.5297022 -1.5122654  2.2867606 -7.6175714]]
Iteration 300 of 1000: loss=0.0126 " + "l1=0.0123" + "l2=0.000326 f=-0.83 shape=(1, 9000, 1)
logits [[ 3.5210192 -1.5123992  2.2894676 -7.6160975]]
Iteration 400 of 1000: loss=0.0126 " + "l1=0.0122" + "l2=0.000427 f=-0.831 shape=(1, 9000, 1)
logits [[ 3.5128798 -1.512732   2.292074  -7.614366 ]]
Iteration 500 of 1000: loss=0.0126 " + "l1=0.0121" + "l2=0.000481 f=-0.831 shape=(1, 9000, 1)
logits [[ 3.5053625 -1.5131516  2.2944548 -7.612507 ]]
Iteration 600 of 1000: loss=0.0126 " + "l1=0.012" + "l2=0.000578 f=-0.832 shape=(1, 9000, 1)
logits [[ 3.4990664 -1.513716   2.2965982 -7.6108775]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.131 " + "l1=0.131" + "l2=0 f=-0.821 shape=(1, 9000, 1)
logits [[ 3.5780373 -1.5028282  2.26519   -7.623526 ]]
Iteration 100 of 1000: loss=0.101 " + "l1=0.0863" + "l2=0.0142 f=-0.868 shape=(1, 9000, 1)
logits [[ 3.2604165 -1.5601826  2.3969817 -7.568949 ]]
Iteration 200 of 1000: loss=0.0881 " + "l1=0.066" + "l2=0.0221 f=-0.886 shape=(1, 9000, 1)
logits [[ 3.1025503 -1.555812   2.4427085 -7.534844 ]]
Iteration 300 of 1000: loss=0.0793 " + "l1=0.051" + "l2=0.0283 f=-0.898 shape=(1, 9000, 1)
logits [[ 2.9873335 -1.550554   2.4768412 -7.5063996]]
Iteration 400 of 1000: loss=0.0724 " + "l1=0.0388" + "l2=0.0336 f=-0.908 shape=(1, 9000, 1)
logits [[ 2.8968725 -1.5529262  2.5089946 -7.484835 ]]
Iteration 500 of 1000: loss=0.0669 " + "l1=0.0288" + "l2=0.0381 f=-0.915 shape=(1, 9000, 1)
logits [[ 2.8249466 -1.559075   2.5366123 -7.4629817]]
Iteration 600 of 1000: loss=0.0621 " + "l1=0.0203" + "l2=0.0418 f=-0.92 shape=(1, 9000, 1)
logits [[ 2.762802  -1.5630293  2.5595255 -7.440635 ]]
Iteration 700 of 1000: loss=0.0575 " + "l1=0.0125" + "l2=0.0449 f=-0.924 shape=(1, 9000, 1)
logits [[ 2.7079568 -1.5665166  2.5828128 -7.4192204]]
Iteration 800 of 1000: loss=0.0527 " + "l1=0.00505" + "l2=0.0477 f=-0.926 shape=(1, 9000, 1)
logits [[ 2.6498652 -1.5652243  2.5993247 -7.38939  ]]
Iteration 900 of 1000: loss=0.0482 " + "l1=0.00056" + "l2=0.0476 f=-0.928 shape=(1, 9000, 1)
logits [[ 2.6137779 -1.5665133  2.608173  -7.365458 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0722 " + "l1=0.0722" + "l2=0 f=-0.821 shape=(1, 9000, 1)
logits [[ 3.5780373 -1.5028282  2.26519   -7.623526 ]]
Iteration 100 of 1000: loss=0.0626 " + "l1=0.0579" + "l2=0.00474 f=-0.849 shape=(1, 9000, 1)
logits [[ 3.395997  -1.5404794  2.3435283 -7.5944676]]
Iteration 200 of 1000: loss=0.0589 " + "l1=0.052" + "l2=0.0069 f=-0.86 shape=(1, 9000, 1)
logits [[ 3.314606 -1.54268   2.36887  -7.58125 ]]
Iteration 300 of 1000: loss=0.0563 " + "l1=0.0475" + "l2=0.00885 f=-0.868 shape=(1, 9000, 1)
logits [[ 3.2527318 -1.5440964  2.389959  -7.5701227]]
Iteration 400 of 1000: loss=0.0545 " + "l1=0.0438" + "l2=0.0107 f=-0.873 shape=(1, 9000, 1)
logits [[ 3.2039986 -1.5477964  2.4076445 -7.5576687]]
Iteration 500 of 1000: loss=0.0529 " + "l1=0.0407" + "l2=0.0122 f=-0.878 shape=(1, 9000, 1)
logits [[ 3.1622334 -1.5501281  2.4218812 -7.5457535]]
Iteration 600 of 1000: loss=0.0516 " + "l1=0.0379" + "l2=0.0137 f=-0.882 shape=(1, 9000, 1)
logits [[ 3.1222742 -1.5507649  2.4338863 -7.5321865]]
Iteration 700 of 1000: loss=0.0504 " + "l1=0.0355" + "l2=0.0149 f=-0.885 shape=(1, 9000, 1)
logits [[ 3.0895846 -1.5527787  2.44422   -7.519076 ]]
Iteration 800 of 1000: loss=0.0492 " + "l1=0.0335" + "l2=0.0157 f=-0.887 shape=(1, 9000, 1)
logits [[ 3.0627866 -1.5571312  2.4536407 -7.5077457]]
Iteration 900 of 1000: loss=0.0482 " + "l1=0.0318" + "l2=0.0164 f=-0.89 shape=(1, 9000, 1)
logits [[ 3.0413861 -1.5634354  2.463733  -7.500136 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.102 " + "l1=0.102" + "l2=0 f=-0.821 shape=(1, 9000, 1)
logits [[ 3.5780373 -1.5028282  2.26519   -7.623526 ]]
Iteration 100 of 1000: loss=0.0829 " + "l1=0.0737" + "l2=0.00914 f=-0.859 shape=(1, 9000, 1)
logits [[ 3.323261  -1.5516685  2.3718085 -7.5808253]]
Iteration 200 of 1000: loss=0.0756 " + "l1=0.0624" + "l2=0.0132 f=-0.874 shape=(1, 9000, 1)
logits [[ 3.2123876 -1.5533166  2.4078324 -7.562662 ]]
Iteration 300 of 1000: loss=0.0704 " + "l1=0.053" + "l2=0.0174 f=-0.884 shape=(1, 9000, 1)
logits [[ 3.1194005 -1.5513304  2.4359195 -7.540298 ]]
Iteration 400 of 1000: loss=0.0664 " + "l1=0.0456" + "l2=0.0208 f=-0.892 shape=(1, 9000, 1)
logits [[ 3.0453525 -1.549755   2.457525  -7.51924  ]]
Iteration 500 of 1000: loss=0.0631 " + "l1=0.0396" + "l2=0.0235 f=-0.897 shape=(1, 9000, 1)
logits [[ 2.9858027 -1.5500543  2.474791  -7.4990892]]
Iteration 600 of 1000: loss=0.0603 " + "l1=0.0343" + "l2=0.026 f=-0.903 shape=(1, 9000, 1)
logits [[ 2.9373171 -1.5573087  2.494246  -7.4853616]]
Iteration 700 of 1000: loss=0.0578 " + "l1=0.0298" + "l2=0.028 f=-0.906 shape=(1, 9000, 1)
logits [[ 2.8953254 -1.5613234  2.510832  -7.4703507]]
Iteration 800 of 1000: loss=0.0553 " + "l1=0.0255" + "l2=0.0298 f=-0.909 shape=(1, 9000, 1)
logits [[ 2.854526  -1.5630054  2.5258126 -7.455002 ]]
Iteration 900 of 1000: loss=0.0528 " + "l1=0.0214" + "l2=0.0314 f=-0.912 shape=(1, 9000, 1)
logits [[ 2.818269  -1.5671618  2.5423307 -7.4405727]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.117 " + "l1=0.117" + "l2=0 f=-0.821 shape=(1, 9000, 1)
logits [[ 3.5780373 -1.5028282  2.26519   -7.623526 ]]
Iteration 100 of 1000: loss=0.0921 " + "l1=0.0807" + "l2=0.0114 f=-0.863 shape=(1, 9000, 1)
logits [[ 3.293363  -1.556295   2.3842556 -7.575317 ]]
Iteration 200 of 1000: loss=0.0824 " + "l1=0.0651" + "l2=0.0173 f=-0.88 shape=(1, 9000, 1)
logits [[ 3.1586952 -1.5550529  2.425428  -7.5500445]]
Iteration 300 of 1000: loss=0.0755 " + "l1=0.0531" + "l2=0.0225 f=-0.892 shape=(1, 9000, 1)
logits [[ 3.0544944 -1.5517128  2.456509  -7.5256166]]
Iteration 400 of 1000: loss=0.0702 " + "l1=0.0435" + "l2=0.0267 f=-0.9 shape=(1, 9000, 1)
logits [[ 2.9710405 -1.5492611  2.4807706 -7.501055 ]]
Iteration 500 of 1000: loss=0.0657 " + "l1=0.0351" + "l2=0.0306 f=-0.907 shape=(1, 9000, 1)
logits [[ 2.9032207 -1.555261   2.5071704 -7.483647 ]]
Iteration 600 of 1000: loss=0.0621 " + "l1=0.0283" + "l2=0.0338 f=-0.912 shape=(1, 9000, 1)
logits [[ 2.847408  -1.5613743  2.5287929 -7.4633765]]
Iteration 700 of 1000: loss=0.0585 " + "l1=0.022" + "l2=0.0365 f=-0.916 shape=(1, 9000, 1)
logits [[ 2.7961245 -1.5626944  2.547867  -7.445334 ]]
Iteration 800 of 1000: loss=0.055 " + "l1=0.0162" + "l2=0.0388 f=-0.919 shape=(1, 9000, 1)
logits [[ 2.7507815 -1.5686508  2.5685637 -7.4271507]]
Iteration 900 of 1000: loss=0.0516 " + "l1=0.0109" + "l2=0.0407 f=-0.921 shape=(1, 9000, 1)
logits [[ 2.7034702 -1.56733    2.5808392 -7.4008737]]
--- 277.02716755867004 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.112 " + "l1=0.112" + "l2=0 f=-0.821 shape=(1, 9000, 1)
logits [[ 3.5780373 -1.5028282  2.26519   -7.623526 ]]
Iteration 100 of 1000: loss=0.111 " + "l1=0.111" + "l2=0.000392 f=-0.819 shape=(1, 9000, 1)
logits [[ 3.5191143 -1.4741684  2.2494576 -7.5717688]]
Iteration 200 of 1000: loss=0.111 " + "l1=0.111" + "l2=0.000438 f=-0.819 shape=(1, 9000, 1)
logits [[ 3.505239  -1.4668275  2.2457979 -7.5599236]]
Iteration 300 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.000556 f=-0.818 shape=(1, 9000, 1)
logits [[ 3.489678  -1.4593395  2.2414896 -7.54551  ]]
Iteration 400 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.000716 f=-0.818 shape=(1, 9000, 1)
logits [[ 3.4748497 -1.4525777  2.2372508 -7.531126 ]]
Iteration 500 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.000916 f=-0.817 shape=(1, 9000, 1)
logits [[ 3.4613152 -1.4469911  2.23325   -7.5171323]]
Iteration 600 of 1000: loss=0.111 " + "l1=0.11" + "l2=0.00104 f=-0.817 shape=(1, 9000, 1)
logits [[ 3.4490807 -1.4426615  2.2297206 -7.5040984]]
Iteration 700 of 1000: loss=0.111 " + "l1=0.109" + "l2=0.00122 f=-0.817 shape=(1, 9000, 1)
logits [[ 3.4378285 -1.4391915  2.2265368 -7.49206  ]]
Iteration 800 of 1000: loss=0.11 " + "l1=0.109" + "l2=0.00137 f=-0.816 shape=(1, 9000, 1)
logits [[ 3.4275477 -1.4362049  2.223478  -7.4807906]]
Iteration 900 of 1000: loss=0.11 " + "l1=0.109" + "l2=0.00146 f=-0.816 shape=(1, 9000, 1)
logits [[ 3.419066  -1.4334047  2.2203188 -7.470219 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.12 " + "l1=1.12" + "l2=0 f=-0.821 shape=(1, 9000, 1)
logits [[ 3.5780373 -1.5028282  2.26519   -7.623526 ]]
Iteration 100 of 1000: loss=1.06 " + "l1=1.02" + "l2=0.0321 f=-0.811 shape=(1, 9000, 1)
logits [[ 3.0640514 -1.2706723  2.1369913 -7.1738095]]
Iteration 200 of 1000: loss=1.03 " + "l1=0.979" + "l2=0.0468 f=-0.808 shape=(1, 9000, 1)
logits [[ 2.8192027 -1.1580175  2.0789597 -6.9726553]]
Iteration 300 of 1000: loss=1 " + "l1=0.943" + "l2=0.0588 f=-0.801 shape=(1, 9000, 1)
logits [[ 2.6344118 -1.0704743  2.0238533 -6.791582 ]]
Iteration 400 of 1000: loss=0.98 " + "l1=0.907" + "l2=0.0723 f=-0.795 shape=(1, 9000, 1)
logits [[ 2.4572952 -0.9821786  1.9619871 -6.616945 ]]
Iteration 500 of 1000: loss=0.962 " + "l1=0.879" + "l2=0.0835 f=-0.793 shape=(1, 9000, 1)
logits [[ 2.308456  -0.9238135  1.9218813 -6.4767227]]
Iteration 600 of 1000: loss=0.947 " + "l1=0.855" + "l2=0.0924 f=-0.786 shape=(1, 9000, 1)
logits [[ 2.192555  -0.8569136  1.8738383 -6.353765 ]]
Iteration 700 of 1000: loss=0.934 " + "l1=0.834" + "l2=0.0998 f=-0.781 shape=(1, 9000, 1)
logits [[ 2.0964115  -0.80694777  1.8319464  -6.244633  ]]
Iteration 800 of 1000: loss=0.922 " + "l1=0.816" + "l2=0.106 f=-0.777 shape=(1, 9000, 1)
logits [[ 2.014495  -0.7632826  1.7901347 -6.147385 ]]
Iteration 900 of 1000: loss=0.911 " + "l1=0.801" + "l2=0.11 f=-0.771 shape=(1, 9000, 1)
logits [[ 1.9482757 -0.7211036  1.7476664 -6.060525 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.2 " + "l1=11.2" + "l2=0 f=-0.821 shape=(1, 9000, 1)
logits [[ 3.5780373 -1.5028282  2.26519   -7.623526 ]]
Iteration 100 of 1000: loss=7.41 " + "l1=5.9" + "l2=1.5 f=-0.681 shape=(1, 9000, 1)
logits [[ 1.098237   -0.12803808  1.1033874  -4.7989173 ]]
Iteration 200 of 1000: loss=6.27 " + "l1=4.53" + "l2=1.74 f=-0.625 shape=(1, 9000, 1)
logits [[ 0.6617337   0.05260233  0.65902734 -3.8715012 ]]
Iteration 300 of 1000: loss=5.09 " + "l1=3.21" + "l2=1.88 f=-0.534 shape=(1, 9000, 1)
logits [[ 0.2855435   0.04566687  0.3697865  -2.8363128 ]]
Iteration 400 of 1000: loss=3.57 " + "l1=1.36" + "l2=2.21 f=-0.404 shape=(1, 9000, 1)
logits [[-0.26130888 -0.1019121   0.05393071 -1.3056266 ]]
Iteration 500 of 1000: loss=2.18 " + "l1=0" + "l2=2.18 f=-0.259 shape=(1, 9000, 1)
logits [[-0.4175507  -0.31398195 -0.15414493 -0.14933118]]
Iteration 600 of 1000: loss=1.64 " + "l1=0.00668" + "l2=1.64 f=-0.231 shape=(1, 9000, 1)
logits [[-0.33423275 -0.39705488 -0.09326521 -0.09994616]]
Iteration 700 of 1000: loss=1.39 " + "l1=0.0028" + "l2=1.39 f=-0.218 shape=(1, 9000, 1)
logits [[-0.28108147 -0.46782228 -0.06028865 -0.06308689]]
Iteration 800 of 1000: loss=1.24 " + "l1=0" + "l2=1.24 f=-0.21 shape=(1, 9000, 1)
logits [[-0.23925331 -0.547645   -0.03031112 -0.02456211]]
Iteration 900 of 1000: loss=1.16 " + "l1=0.0176" + "l2=1.14 f=-0.207 shape=(1, 9000, 1)
logits [[-0.20791698 -0.59479034 -0.00363036 -0.02126888]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.16 " + "l1=6.16" + "l2=0 f=-0.821 shape=(1, 9000, 1)
logits [[ 3.5780373 -1.5028282  2.26519   -7.623526 ]]
Iteration 100 of 1000: loss=4.64 " + "l1=4.01" + "l2=0.627 f=-0.75 shape=(1, 9000, 1)
logits [[ 1.5881823  -0.47467265  1.5874165  -5.7019076 ]]
Iteration 200 of 1000: loss=4.16 " + "l1=3.47" + "l2=0.691 f=-0.699 shape=(1, 9000, 1)
logits [[ 1.241913  -0.2116036  1.241861  -5.067443 ]]
Iteration 300 of 1000: loss=3.78 " + "l1=2.96" + "l2=0.824 f=-0.656 shape=(1, 9000, 1)
logits [[ 0.95729995 -0.15795814  0.97777677 -4.4022517 ]]
Iteration 400 of 1000: loss=3.33 " + "l1=2.39" + "l2=0.946 f=-0.592 shape=(1, 9000, 1)
logits [[ 0.7113169  -0.17177065  0.7163949  -3.6243148 ]]
Iteration 500 of 1000: loss=2.62 " + "l1=1.44" + "l2=1.18 f=-0.462 shape=(1, 9000, 1)
logits [[ 0.31535932 -0.2649423   0.3568682  -2.2538204 ]]
Iteration 600 of 1000: loss=2.06 " + "l1=0.761" + "l2=1.3 f=-0.381 shape=(1, 9000, 1)
logits [[-0.12758131 -0.34776217  0.16862255 -1.2155602 ]]
Iteration 700 of 1000: loss=1.61 " + "l1=0.277" + "l2=1.33 f=-0.321 shape=(1, 9000, 1)
logits [[-0.48840836 -0.33968905  0.02335399 -0.4806029 ]]
Iteration 800 of 1000: loss=1.31 " + "l1=0.0107" + "l2=1.3 f=-0.288 shape=(1, 9000, 1)
logits [[-0.6506971  -0.34259504 -0.0704122  -0.08993711]]
Iteration 900 of 1000: loss=1.13 " + "l1=0" + "l2=1.13 f=-0.289 shape=(1, 9000, 1)
logits [[-0.6300518  -0.4005495  -0.06889715 -0.05743141]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.64 " + "l1=3.64" + "l2=0 f=-0.821 shape=(1, 9000, 1)
logits [[ 3.5780373 -1.5028282  2.26519   -7.623526 ]]
Iteration 100 of 1000: loss=3.01 " + "l1=2.7" + "l2=0.313 f=-0.79 shape=(1, 9000, 1)
logits [[ 2.0204449 -0.773565   1.8845017 -6.291933 ]]
Iteration 200 of 1000: loss=2.76 " + "l1=2.44" + "l2=0.326 f=-0.766 shape=(1, 9000, 1)
logits [[ 1.6354773  -0.48177657  1.640732   -5.8593984 ]]
Iteration 300 of 1000: loss=2.61 " + "l1=2.25" + "l2=0.361 f=-0.73 shape=(1, 9000, 1)
logits [[ 1.4431542  -0.33513874  1.448453   -5.475435  ]]
Iteration 400 of 1000: loss=2.49 " + "l1=2.1" + "l2=0.395 f=-0.708 shape=(1, 9000, 1)
logits [[ 1.3136905  -0.31584665  1.3142854  -5.145027  ]]
Iteration 500 of 1000: loss=2.36 " + "l1=1.92" + "l2=0.439 f=-0.682 shape=(1, 9000, 1)
logits [[ 1.1624717 -0.3089488  1.1643105 -4.7467685]]
Iteration 600 of 1000: loss=2.18 " + "l1=1.7" + "l2=0.485 f=-0.647 shape=(1, 9000, 1)
logits [[ 0.96763945 -0.28267583  0.97536486 -4.247562  ]]
Iteration 700 of 1000: loss=1.98 " + "l1=1.44" + "l2=0.541 f=-0.603 shape=(1, 9000, 1)
logits [[ 0.7366445  -0.35274825  0.82252616 -3.6179926 ]]
Iteration 800 of 1000: loss=1.73 " + "l1=1.13" + "l2=0.601 f=-0.541 shape=(1, 9000, 1)
logits [[ 0.3238826 -0.3712033  0.6786796 -2.7956495]]
Iteration 900 of 1000: loss=1.51 " + "l1=0.879" + "l2=0.626 f=-0.498 shape=(1, 9000, 1)
logits [[ 0.00969736 -0.43014124  0.56641984 -2.1385405 ]]
--- 301.88650250434875 seconds ---
Adv result:3
Loading record A07096
(1, 3178)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0508 " + "l1=0.0508" + "l2=0 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.8389106 -3.2432952 -1.7097783  1.0430902]]
Iteration 100 of 1000: loss=0.0496 " + "l1=0.0489" + "l2=0.000751 f=-0.517 shape=(1, 9000, 1)
logits [[ 1.704994  -3.1829093 -1.7506926  1.1620868]]
Iteration 200 of 1000: loss=0.0493 " + "l1=0.0484" + "l2=0.000914 f=-0.516 shape=(1, 9000, 1)
logits [[ 1.669103  -3.168981  -1.7611998  1.1969575]]
Iteration 300 of 1000: loss=0.049 " + "l1=0.0479" + "l2=0.00112 f=-0.515 shape=(1, 9000, 1)
logits [[ 1.634704  -3.1549604 -1.770279   1.2305294]]
Iteration 400 of 1000: loss=0.0488 " + "l1=0.0475" + "l2=0.00128 f=-0.514 shape=(1, 9000, 1)
logits [[ 1.6052071 -3.1425464 -1.7776983  1.2594845]]
Iteration 500 of 1000: loss=0.0486 " + "l1=0.0471" + "l2=0.00147 f=-0.513 shape=(1, 9000, 1)
logits [[ 1.5772654 -3.1309059 -1.7845565  1.2872167]]
Iteration 600 of 1000: loss=0.0483 " + "l1=0.0467" + "l2=0.00165 f=-0.511 shape=(1, 9000, 1)
logits [[ 1.5488043 -3.118344  -1.7914981  1.315057 ]]
Iteration 700 of 1000: loss=0.0481 " + "l1=0.0463" + "l2=0.00187 f=-0.51 shape=(1, 9000, 1)
logits [[ 1.5200434 -3.1050425 -1.7983308  1.342648 ]]
Iteration 800 of 1000: loss=0.0479 " + "l1=0.0459" + "l2=0.00206 f=-0.509 shape=(1, 9000, 1)
logits [[ 1.4931631 -3.0934238 -1.8044896  1.3693204]]
Iteration 900 of 1000: loss=0.0477 " + "l1=0.0455" + "l2=0.00226 f=-0.507 shape=(1, 9000, 1)
logits [[ 1.4663324 -3.081436  -1.8098494  1.3956914]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.508 " + "l1=0.508" + "l2=0 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.8389106 -3.2432952 -1.7097783  1.0430902]]
Iteration 100 of 1000: loss=0.448 " + "l1=0.433" + "l2=0.015 f=-0.511 shape=(1, 9000, 1)
logits [[ 1.3669566 -2.9586902 -1.8206674  1.3687861]]
Iteration 200 of 1000: loss=0.419 " + "l1=0.389" + "l2=0.0305 f=-0.436 shape=(1, 9000, 1)
logits [[ 1.1344597 -2.7513206 -1.2576126  1.130575 ]]
Iteration 300 of 1000: loss=0.399 " + "l1=0.358" + "l2=0.0414 f=-0.384 shape=(1, 9000, 1)
logits [[ 0.9864044  -2.5920668  -0.90762365  0.97832185]]
Iteration 400 of 1000: loss=0.392 " + "l1=0.348" + "l2=0.0439 f=-0.372 shape=(1, 9000, 1)
logits [[ 0.9598453 -2.5196395 -0.8777434  0.9481928]]
Iteration 500 of 1000: loss=0.386 " + "l1=0.339" + "l2=0.0463 f=-0.362 shape=(1, 9000, 1)
logits [[ 0.89938074 -2.4584134  -0.8237707   0.93535376]]
Iteration 600 of 1000: loss=0.377 " + "l1=0.326" + "l2=0.0502 f=-0.354 shape=(1, 9000, 1)
logits [[ 0.8651059  -2.398802   -0.7445289   0.86366564]]
Iteration 700 of 1000: loss=0.369 " + "l1=0.314" + "l2=0.0553 f=-0.33 shape=(1, 9000, 1)
logits [[ 0.81214166 -2.3297315  -0.60579336  0.8045308 ]]
Iteration 800 of 1000: loss=0.365 " + "l1=0.308" + "l2=0.0574 f=-0.319 shape=(1, 9000, 1)
logits [[ 0.77985835 -2.2928936  -0.54568136  0.78260016]]
Iteration 900 of 1000: loss=0.338 " + "l1=0.257" + "l2=0.0805 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.50624967 -2.0392046  -0.26182365  0.5312109 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.08 " + "l1=5.08" + "l2=0 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.8389106 -3.2432952 -1.7097783  1.0430902]]
Iteration 100 of 1000: loss=0.777 " + "l1=0" + "l2=0.777 f=-0.483 shape=(1, 9000, 1)
logits [[-0.7019047  -0.36857626 -0.40618786 -0.45640597]]
Iteration 200 of 1000: loss=0.496 " + "l1=0" + "l2=0.496 f=-0.526 shape=(1, 9000, 1)
logits [[-0.54556865 -0.48839563 -0.53917813 -0.532046  ]]
Iteration 300 of 1000: loss=0.396 " + "l1=0" + "l2=0.396 f=-0.525 shape=(1, 9000, 1)
logits [[-0.5848187  -0.4520737  -0.4926996  -0.57109857]]
Iteration 400 of 1000: loss=0.318 " + "l1=0" + "l2=0.318 f=-0.529 shape=(1, 9000, 1)
logits [[-0.56740534 -0.46242163 -0.5125026  -0.57272047]]
Iteration 500 of 1000: loss=0.271 " + "l1=0" + "l2=0.271 f=-0.555 shape=(1, 9000, 1)
logits [[-0.5616319  -0.5071209  -0.5630796  -0.58844644]]
Iteration 600 of 1000: loss=0.262 " + "l1=0" + "l2=0.262 f=-0.585 shape=(1, 9000, 1)
logits [[-0.70661676 -0.46103323 -0.4766977  -0.6949892 ]]
Iteration 700 of 1000: loss=0.243 " + "l1=0" + "l2=0.243 f=-0.59 shape=(1, 9000, 1)
logits [[-0.64241517 -0.52708083 -0.6097776  -0.58196545]]
Iteration 800 of 1000: loss=0.226 " + "l1=0" + "l2=0.226 f=-0.609 shape=(1, 9000, 1)
logits [[-0.6758394  -0.5519437  -0.58129364 -0.6270264 ]]
Iteration 900 of 1000: loss=0.22 " + "l1=0" + "l2=0.22 f=-0.615 shape=(1, 9000, 1)
logits [[-0.7142934  -0.5350917  -0.55129576 -0.66092837]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.8 " + "l1=2.8" + "l2=0 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.8389106 -3.2432952 -1.7097783  1.0430902]]
Iteration 100 of 1000: loss=0.845 " + "l1=0.273" + "l2=0.572 f=-0.421 shape=(1, 9000, 1)
logits [[-0.3184773  -0.7688868  -0.27199677 -0.32584652]]
Iteration 200 of 1000: loss=0.467 " + "l1=0" + "l2=0.467 f=-0.497 shape=(1, 9000, 1)
logits [[-0.5724892  -0.43748966 -0.47793537 -0.5019151 ]]
Iteration 300 of 1000: loss=0.349 " + "l1=0" + "l2=0.349 f=-0.509 shape=(1, 9000, 1)
logits [[-0.518462  -0.4845709 -0.5030617 -0.5307383]]
Iteration 400 of 1000: loss=0.285 " + "l1=0" + "l2=0.285 f=-0.523 shape=(1, 9000, 1)
logits [[-0.5452592  -0.488347   -0.49255815 -0.56761724]]
Iteration 500 of 1000: loss=0.233 " + "l1=0" + "l2=0.233 f=-0.525 shape=(1, 9000, 1)
logits [[-0.55202025 -0.4883992  -0.4908647  -0.5673471 ]]
Iteration 600 of 1000: loss=0.214 " + "l1=0" + "l2=0.214 f=-0.544 shape=(1, 9000, 1)
logits [[-0.5752536  -0.51499474 -0.5612162  -0.5247915 ]]
Iteration 700 of 1000: loss=0.203 " + "l1=0.00377" + "l2=0.199 f=-0.55 shape=(1, 9000, 1)
logits [[-0.6131383  -0.52681464 -0.54102165 -0.5199646 ]]
Iteration 800 of 1000: loss=0.203 " + "l1=0.00647" + "l2=0.196 f=-0.558 shape=(1, 9000, 1)
logits [[-0.62140936 -0.5088126  -0.49704343 -0.6053369 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.65 " + "l1=1.65" + "l2=0 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.8389106 -3.2432952 -1.7097783  1.0430902]]
Iteration 100 of 1000: loss=0.976 " + "l1=0.718" + "l2=0.257 f=-0.356 shape=(1, 9000, 1)
logits [[ 0.45131657 -1.7479773  -0.5916424   0.46267065]]
Iteration 200 of 1000: loss=0.565 " + "l1=0.254" + "l2=0.31 f=-0.368 shape=(1, 9000, 1)
logits [[-0.2010735  -0.93601495 -0.18314256 -0.1530424 ]]
Iteration 300 of 1000: loss=0.392 " + "l1=0.0297" + "l2=0.362 f=-0.485 shape=(1, 9000, 1)
logits [[-0.4593195  -0.5362062  -0.44486615 -0.49997485]]
Iteration 400 of 1000: loss=0.298 " + "l1=0.00427" + "l2=0.294 f=-0.501 shape=(1, 9000, 1)
logits [[-0.5579138  -0.4697261  -0.45659336 -0.5198965 ]]
Iteration 500 of 1000: loss=0.238 " + "l1=0" + "l2=0.238 f=-0.504 shape=(1, 9000, 1)
logits [[-0.5059976  -0.49425453 -0.5063233  -0.51057076]]
Iteration 600 of 1000: loss=0.222 " + "l1=0" + "l2=0.222 f=-0.523 shape=(1, 9000, 1)
logits [[-0.5777087  -0.48018083 -0.53862566 -0.4958532 ]]
Iteration 700 of 1000: loss=0.202 " + "l1=0.000702" + "l2=0.202 f=-0.534 shape=(1, 9000, 1)
logits [[-0.55338204 -0.51451224 -0.51235324 -0.55719423]]
Iteration 800 of 1000: loss=0.2 " + "l1=0" + "l2=0.2 f=-0.548 shape=(1, 9000, 1)
logits [[-0.5574541  -0.49953896 -0.50655043 -0.6283637 ]]
Iteration 900 of 1000: loss=0.194 " + "l1=0.00611" + "l2=0.187 f=-0.542 shape=(1, 9000, 1)
logits [[-0.55343425 -0.5369972  -0.5597031  -0.5181821 ]]
--- 291.23290944099426 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0355 " + "l1=0.0355" + "l2=0 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.8389106 -3.2432952 -1.7097783  1.0430902]]
Iteration 100 of 1000: loss=0.035 " + "l1=0.0347" + "l2=0.00029 f=-0.516 shape=(1, 9000, 1)
logits [[ 1.7637113 -3.2228153 -1.7063129  1.1014977]]
Iteration 200 of 1000: loss=0.0348 " + "l1=0.0345" + "l2=0.000339 f=-0.515 shape=(1, 9000, 1)
logits [[ 1.7465807 -3.2191176 -1.7039311  1.1156116]]
Iteration 300 of 1000: loss=0.0347 " + "l1=0.0343" + "l2=0.000435 f=-0.514 shape=(1, 9000, 1)
logits [[ 1.7283583 -3.2150147 -1.7019258  1.1306971]]
Iteration 400 of 1000: loss=0.0346 " + "l1=0.0341" + "l2=0.000515 f=-0.514 shape=(1, 9000, 1)
logits [[ 1.711755  -3.211258  -1.7001097  1.144356 ]]
Iteration 500 of 1000: loss=0.0346 " + "l1=0.034" + "l2=0.000613 f=-0.513 shape=(1, 9000, 1)
logits [[ 1.6972551 -3.2080283 -1.6981565  1.1561611]]
Iteration 600 of 1000: loss=0.0345 " + "l1=0.0338" + "l2=0.000726 f=-0.512 shape=(1, 9000, 1)
logits [[ 1.6828624 -3.204941  -1.6949518  1.167693 ]]
Iteration 700 of 1000: loss=0.0345 " + "l1=0.0336" + "l2=0.000837 f=-0.512 shape=(1, 9000, 1)
logits [[ 1.6691102 -3.201648  -1.6929054  1.1791842]]
Iteration 800 of 1000: loss=0.0345 " + "l1=0.0335" + "l2=0.00103 f=-0.511 shape=(1, 9000, 1)
logits [[ 1.654857  -3.198024  -1.6910064  1.1911248]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.355 " + "l1=0.355" + "l2=0 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.8389106 -3.2432952 -1.7097783  1.0430902]]
Iteration 100 of 1000: loss=0.21 " + "l1=0.141" + "l2=0.0691 f=-0.352 shape=(1, 9000, 1)
logits [[ 1.0006853 -2.9821615 -0.405157   0.9783622]]
Iteration 200 of 1000: loss=0.173 " + "l1=0.11" + "l2=0.0631 f=-0.322 shape=(1, 9000, 1)
logits [[ 0.9243984 -2.9769166 -0.1677931  0.9307838]]
Iteration 300 of 1000: loss=0.149 " + "l1=0.068" + "l2=0.0808 f=-0.302 shape=(1, 9000, 1)
logits [[ 0.81800973 -2.9604752   0.13798879  0.7965141 ]]
Iteration 400 of 1000: loss=0.128 " + "l1=0.031" + "l2=0.0966 f=-0.292 shape=(1, 9000, 1)
logits [[ 0.70046276 -2.9738083   0.39704692  0.70725477]]
Iteration 500 of 1000: loss=0.118 " + "l1=0.0194" + "l2=0.0985 f=-0.286 shape=(1, 9000, 1)
logits [[ 0.6744129  -2.975348    0.4818746   0.67620707]]
Iteration 600 of 1000: loss=0.108 " + "l1=0.00395" + "l2=0.104 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.6338128  -2.9362502   0.59672767  0.63622236]]
Iteration 700 of 1000: loss=0.0948 " + "l1=0" + "l2=0.0948 f=-0.269 shape=(1, 9000, 1)
logits [[ 0.6413401  -2.992602    0.64240026  0.63328975]]
Iteration 800 of 1000: loss=0.0871 " + "l1=0.00133" + "l2=0.0857 f=-0.277 shape=(1, 9000, 1)
logits [[ 0.6390079  -3.00552     0.62568855  0.63141054]]
Iteration 900 of 1000: loss=0.08 " + "l1=0.000493" + "l2=0.0795 f=-0.286 shape=(1, 9000, 1)
logits [[ 0.6216277 -2.9812813  0.6167013  0.5971825]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.195 " + "l1=0.195" + "l2=0 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.8389106 -3.2432952 -1.7097783  1.0430902]]
Iteration 100 of 1000: loss=0.169 " + "l1=0.148" + "l2=0.0215 f=-0.464 shape=(1, 9000, 1)
logits [[ 1.3132354 -3.1232483 -1.3639743  1.3196669]]
Iteration 200 of 1000: loss=0.143 " + "l1=0.114" + "l2=0.0287 f=-0.409 shape=(1, 9000, 1)
logits [[ 1.1398315 -2.9848104 -0.9345477  1.1423495]]
Iteration 300 of 1000: loss=0.138 " + "l1=0.108" + "l2=0.0299 f=-0.395 shape=(1, 9000, 1)
logits [[ 1.1244664  -2.9792402  -0.84100676  1.1166991 ]]
Iteration 400 of 1000: loss=0.136 " + "l1=0.104" + "l2=0.0319 f=-0.386 shape=(1, 9000, 1)
logits [[ 1.1074052  -2.9695413  -0.78123957  1.0997158 ]]
Iteration 500 of 1000: loss=0.122 " + "l1=0.0792" + "l2=0.0426 f=-0.344 shape=(1, 9000, 1)
logits [[ 0.9743353  -2.8494806  -0.46575823  0.96681565]]
Iteration 600 of 1000: loss=0.116 " + "l1=0.0758" + "l2=0.0402 f=-0.33 shape=(1, 9000, 1)
logits [[ 0.97068965 -2.8439083  -0.40717867  0.9601436 ]]
Iteration 700 of 1000: loss=0.111 " + "l1=0.0693" + "l2=0.0415 f=-0.323 shape=(1, 9000, 1)
logits [[ 0.93822837 -2.8357325  -0.3218461   0.9270442 ]]
Iteration 800 of 1000: loss=0.105 " + "l1=0.0606" + "l2=0.0441 f=-0.314 shape=(1, 9000, 1)
logits [[ 0.8920427  -2.8208761  -0.21003757  0.881009  ]]
Iteration 900 of 1000: loss=0.0995 " + "l1=0.0562" + "l2=0.0433 f=-0.314 shape=(1, 9000, 1)
logits [[ 0.8579954  -2.8405766  -0.14817162  0.8735851 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.275 " + "l1=0.275" + "l2=0 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.8389106 -3.2432952 -1.7097783  1.0430902]]
Iteration 100 of 1000: loss=0.184 " + "l1=0.122" + "l2=0.061 f=-0.363 shape=(1, 9000, 1)
logits [[ 1.0351456 -2.9890773 -0.5400373  1.0401499]]
Iteration 200 of 1000: loss=0.151 " + "l1=0.101" + "l2=0.0499 f=-0.338 shape=(1, 9000, 1)
logits [[ 0.9774613  -2.9886572  -0.31973112  0.97951627]]
Iteration 300 of 1000: loss=0.143 " + "l1=0.09" + "l2=0.0531 f=-0.33 shape=(1, 9000, 1)
logits [[ 0.93959975 -2.9856331  -0.2181676   0.94278336]]
Iteration 400 of 1000: loss=0.135 " + "l1=0.0761" + "l2=0.0591 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.88918096 -2.9750764  -0.09320552  0.881295  ]]
Iteration 500 of 1000: loss=0.123 " + "l1=0.0502" + "l2=0.0729 f=-0.32 shape=(1, 9000, 1)
logits [[ 0.7974325  -2.9858887   0.15018088  0.7599984 ]]
Iteration 600 of 1000: loss=0.116 " + "l1=0.0382" + "l2=0.0774 f=-0.318 shape=(1, 9000, 1)
logits [[ 0.7467044  -2.991978    0.253558    0.71871847]]
Iteration 700 of 1000: loss=0.104 " + "l1=0.0258" + "l2=0.0782 f=-0.309 shape=(1, 9000, 1)
logits [[ 0.6964617  -2.9849164   0.36324465  0.6891281 ]]
Iteration 800 of 1000: loss=0.0913 " + "l1=0.0122" + "l2=0.0791 f=-0.299 shape=(1, 9000, 1)
logits [[ 0.6681758 -2.9872036  0.5106573  0.6126413]]
Iteration 900 of 1000: loss=0.0816 " + "l1=0.000336" + "l2=0.0813 f=-0.286 shape=(1, 9000, 1)
logits [[ 0.61252266 -2.9930317   0.6164604   0.62079006]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.235 " + "l1=0.235" + "l2=0 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.8389106 -3.2432952 -1.7097783  1.0430902]]
Iteration 100 of 1000: loss=0.183 " + "l1=0.142" + "l2=0.0412 f=-0.418 shape=(1, 9000, 1)
logits [[ 1.1527804 -2.995132  -0.9858893  1.1544982]]
Iteration 200 of 1000: loss=0.163 " + "l1=0.127" + "l2=0.0362 f=-0.391 shape=(1, 9000, 1)
logits [[ 1.1016104  -2.9638808  -0.81044376  1.1093922 ]]
Iteration 300 of 1000: loss=0.158 " + "l1=0.12" + "l2=0.0378 f=-0.379 shape=(1, 9000, 1)
logits [[ 1.0949528 -2.9636936 -0.7215628  1.0736594]]
Iteration 400 of 1000: loss=0.138 " + "l1=0.0875" + "l2=0.0508 f=-0.332 shape=(1, 9000, 1)
logits [[ 0.9405667  -2.830597   -0.37936926  0.9420574 ]]
Iteration 500 of 1000: loss=0.13 " + "l1=0.0786" + "l2=0.0517 f=-0.317 shape=(1, 9000, 1)
logits [[ 0.9140466  -2.8138845  -0.27202192  0.9023899 ]]
Iteration 600 of 1000: loss=0.123 " + "l1=0.0714" + "l2=0.0515 f=-0.309 shape=(1, 9000, 1)
logits [[ 0.8704994  -2.809693   -0.18765105  0.8895671 ]]
Iteration 700 of 1000: loss=0.113 " + "l1=0.061" + "l2=0.0524 f=-0.3 shape=(1, 9000, 1)
logits [[ 0.83826727 -2.793628   -0.08274522  0.8370432 ]]
Iteration 800 of 1000: loss=0.108 " + "l1=0.0542" + "l2=0.054 f=-0.298 shape=(1, 9000, 1)
logits [[ 0.812559   -2.7970965  -0.00588273  0.7993684 ]]
Iteration 900 of 1000: loss=0.099 " + "l1=0.0424" + "l2=0.0565 f=-0.28 shape=(1, 9000, 1)
logits [[ 0.7713238 -2.7922225  0.1307633  0.7701549]]
--- 293.0742197036743 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00796 " + "l1=0.00796" + "l2=0 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.8389106 -3.2432952 -1.7097783  1.0430902]]
Iteration 100 of 1000: loss=0.0056 " + "l1=0.00429" + "l2=0.00131 f=-0.515 shape=(1, 9000, 1)
logits [[ 1.6575837 -3.178856  -1.7679926  1.228695 ]]
Iteration 200 of 1000: loss=0.00481 " + "l1=0.00309" + "l2=0.00173 f=-0.514 shape=(1, 9000, 1)
logits [[ 1.599955  -3.1600838 -1.7849092  1.2909985]]
Iteration 300 of 1000: loss=0.00414 " + "l1=0.00199" + "l2=0.00215 f=-0.512 shape=(1, 9000, 1)
logits [[ 1.5469095 -3.1421232 -1.8003373  1.3480821]]
Iteration 400 of 1000: loss=0.00352 " + "l1=0.00102" + "l2=0.0025 f=-0.51 shape=(1, 9000, 1)
logits [[ 1.5008491 -3.1263573 -1.8140405  1.3987375]]
Iteration 500 of 1000: loss=0.00291 " + "l1=5.28e-05" + "l2=0.00286 f=-0.508 shape=(1, 9000, 1)
logits [[ 1.4543015 -3.1105137 -1.8265918  1.4490248]]
Iteration 600 of 1000: loss=0.00253 " + "l1=2.29e-05" + "l2=0.0025 f=-0.508 shape=(1, 9000, 1)
logits [[ 1.4540583 -3.1129363 -1.8243747  1.4517686]]
Iteration 700 of 1000: loss=0.00225 " + "l1=1.47e-05" + "l2=0.00224 f=-0.507 shape=(1, 9000, 1)
logits [[ 1.4553814 -3.11575   -1.822959   1.4539155]]
Iteration 800 of 1000: loss=0.00212 " + "l1=0" + "l2=0.00212 f=-0.507 shape=(1, 9000, 1)
logits [[ 1.4557966 -3.1171005 -1.8227313  1.4561294]]
Iteration 900 of 1000: loss=0.00198 " + "l1=0" + "l2=0.00198 f=-0.507 shape=(1, 9000, 1)
logits [[ 1.4550923 -3.1176722 -1.8232665  1.458761 ]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.00398 " + "l1=0.00398" + "l2=0 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.8389106 -3.2432952 -1.7097783  1.0430902]]
Iteration 100 of 1000: loss=0.00336 " + "l1=0.00297" + "l2=0.000383 f=-0.516 shape=(1, 9000, 1)
logits [[ 1.7392223 -3.208671  -1.7398694  1.1446856]]
Iteration 200 of 1000: loss=0.00318 " + "l1=0.00273" + "l2=0.00045 f=-0.516 shape=(1, 9000, 1)
logits [[ 1.7154657 -3.2018673 -1.7469016  1.1699867]]
Iteration 300 of 1000: loss=0.00303 " + "l1=0.00249" + "l2=0.000544 f=-0.515 shape=(1, 9000, 1)
logits [[ 1.6924995 -3.195506  -1.7533517  1.1947432]]
Iteration 400 of 1000: loss=0.0029 " + "l1=0.00227" + "l2=0.000635 f=-0.515 shape=(1, 9000, 1)
logits [[ 1.6714246 -3.1891832 -1.7592331  1.2178053]]
Iteration 500 of 1000: loss=0.00282 " + "l1=0.00206" + "l2=0.000758 f=-0.514 shape=(1, 9000, 1)
logits [[ 1.6515089 -3.1827466 -1.7649674  1.2396789]]
Iteration 600 of 1000: loss=0.00272 " + "l1=0.00186" + "l2=0.000865 f=-0.513 shape=(1, 9000, 1)
logits [[ 1.6323718 -3.1763759 -1.7708338  1.2611141]]
Iteration 700 of 1000: loss=0.00267 " + "l1=0.00166" + "l2=0.00101 f=-0.513 shape=(1, 9000, 1)
logits [[ 1.613547  -3.170001  -1.7767435  1.2821505]]
Iteration 800 of 1000: loss=0.00259 " + "l1=0.00148" + "l2=0.00112 f=-0.512 shape=(1, 9000, 1)
logits [[ 1.5965458 -3.1645293 -1.7818015  1.3014818]]
Iteration 900 of 1000: loss=0.00252 " + "l1=0.00129" + "l2=0.00123 f=-0.511 shape=(1, 9000, 1)
logits [[ 1.5796441 -3.158811  -1.7872583  1.3207258]]
const [0.0075]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.00597 " + "l1=0.00597" + "l2=0 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.8389106 -3.2432952 -1.7097783  1.0430902]]
Iteration 100 of 1000: loss=0.00462 " + "l1=0.00384" + "l2=0.000779 f=-0.516 shape=(1, 9000, 1)
logits [[ 1.698511  -3.194082  -1.7538552  1.1866248]]
Iteration 200 of 1000: loss=0.00419 " + "l1=0.00321" + "l2=0.000983 f=-0.515 shape=(1, 9000, 1)
logits [[ 1.6577668 -3.181773  -1.765906   1.2304258]]
Iteration 300 of 1000: loss=0.00385 " + "l1=0.00263" + "l2=0.00122 f=-0.514 shape=(1, 9000, 1)
logits [[ 1.6211783 -3.170055  -1.7761925  1.2700491]]
Iteration 400 of 1000: loss=0.00351 " + "l1=0.00211" + "l2=0.0014 f=-0.513 shape=(1, 9000, 1)
logits [[ 1.5876368 -3.1587946 -1.7859634  1.3065636]]
Iteration 500 of 1000: loss=0.00322 " + "l1=0.0016" + "l2=0.00162 f=-0.511 shape=(1, 9000, 1)
logits [[ 1.5551082 -3.147407  -1.7957356  1.3420426]]
Iteration 600 of 1000: loss=0.00296 " + "l1=0.00112" + "l2=0.00184 f=-0.51 shape=(1, 9000, 1)
logits [[ 1.5245314 -3.1367218 -1.8052367  1.3758458]]
Iteration 700 of 1000: loss=0.00268 " + "l1=0.000641" + "l2=0.00204 f=-0.509 shape=(1, 9000, 1)
logits [[ 1.4947491 -3.1268885 -1.8134893  1.4093231]]
Iteration 800 of 1000: loss=0.00243 " + "l1=0.000181" + "l2=0.00225 f=-0.508 shape=(1, 9000, 1)
logits [[ 1.4661142 -3.1182098 -1.8210348  1.4419953]]
Iteration 900 of 1000: loss=0.00223 " + "l1=1.65e-05" + "l2=0.00221 f=-0.507 shape=(1, 9000, 1)
logits [[ 1.4567615 -3.11717   -1.8224527  1.4545586]]
const [0.00625]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00497 " + "l1=0.00497" + "l2=0 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.8389106 -3.2432952 -1.7097783  1.0430902]]
Iteration 100 of 1000: loss=0.00402 " + "l1=0.00346" + "l2=0.000566 f=-0.516 shape=(1, 9000, 1)
logits [[ 1.7188215 -3.2013323 -1.7470344  1.1657705]]
Iteration 200 of 1000: loss=0.00374 " + "l1=0.00304" + "l2=0.000694 f=-0.515 shape=(1, 9000, 1)
logits [[ 1.6867458 -3.192167  -1.7563751  1.1998798]]
Iteration 300 of 1000: loss=0.0035 " + "l1=0.00265" + "l2=0.000849 f=-0.515 shape=(1, 9000, 1)
logits [[ 1.6562121 -3.1828022 -1.7648538  1.2327808]]
Iteration 400 of 1000: loss=0.0033 " + "l1=0.0023" + "l2=0.001 f=-0.514 shape=(1, 9000, 1)
logits [[ 1.6298101 -3.1742074 -1.7722983  1.2615004]]
Iteration 500 of 1000: loss=0.00313 " + "l1=0.00196" + "l2=0.00117 f=-0.513 shape=(1, 9000, 1)
logits [[ 1.6037891 -3.1653426 -1.7801881  1.2900258]]
Iteration 600 of 1000: loss=0.00291 " + "l1=0.00163" + "l2=0.00128 f=-0.512 shape=(1, 9000, 1)
logits [[ 1.5787648 -3.1570032 -1.7875729  1.3176832]]
Iteration 700 of 1000: loss=0.00279 " + "l1=0.00133" + "l2=0.00146 f=-0.511 shape=(1, 9000, 1)
logits [[ 1.5558236 -3.1490088 -1.7948647  1.3435062]]
Iteration 800 of 1000: loss=0.00263 " + "l1=0.00101" + "l2=0.00162 f=-0.51 shape=(1, 9000, 1)
logits [[ 1.5320675 -3.141127  -1.8020778  1.3705549]]
Iteration 900 of 1000: loss=0.00257 " + "l1=0.000697" + "l2=0.00187 f=-0.509 shape=(1, 9000, 1)
logits [[ 1.5085506 -3.1336849 -1.808355   1.3970368]]
const [0.006875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00547 " + "l1=0.00547" + "l2=0 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.8389106 -3.2432952 -1.7097783  1.0430902]]
Iteration 100 of 1000: loss=0.00433 " + "l1=0.00366" + "l2=0.000667 f=-0.516 shape=(1, 9000, 1)
logits [[ 1.708795  -3.1977956 -1.7503772  1.1760367]]
Iteration 200 of 1000: loss=0.00398 " + "l1=0.00315" + "l2=0.000834 f=-0.515 shape=(1, 9000, 1)
logits [[ 1.6724491 -3.187197  -1.7610847  1.2149194]]
Iteration 300 of 1000: loss=0.00368 " + "l1=0.00267" + "l2=0.00101 f=-0.514 shape=(1, 9000, 1)
logits [[ 1.6394795 -3.1767225 -1.7702669  1.2506076]]
Iteration 400 of 1000: loss=0.00343 " + "l1=0.00224" + "l2=0.00119 f=-0.513 shape=(1, 9000, 1)
logits [[ 1.609293  -3.1668053 -1.7788875  1.2834151]]
Iteration 500 of 1000: loss=0.00316 " + "l1=0.00182" + "l2=0.00134 f=-0.512 shape=(1, 9000, 1)
logits [[ 1.5798631 -3.1566927 -1.7877779  1.3155792]]
Iteration 600 of 1000: loss=0.00294 " + "l1=0.00142" + "l2=0.00152 f=-0.511 shape=(1, 9000, 1)
logits [[ 1.5526859 -3.1471875 -1.7961056  1.345628 ]]
Iteration 700 of 1000: loss=0.00277 " + "l1=0.00104" + "l2=0.00173 f=-0.51 shape=(1, 9000, 1)
logits [[ 1.5261343 -3.1382308 -1.8041742  1.3755533]]
Iteration 800 of 1000: loss=0.00258 " + "l1=0.000651" + "l2=0.00193 f=-0.509 shape=(1, 9000, 1)
logits [[ 1.4999241 -3.1300395 -1.8110985  1.4052259]]
Iteration 900 of 1000: loss=0.00233 " + "l1=0.000254" + "l2=0.00208 f=-0.508 shape=(1, 9000, 1)
logits [[ 1.4729856 -3.1216614 -1.8185642  1.4360054]]
--- 302.6004304885864 seconds ---
Adv result:3
Loading record A07100
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0823 " + "l1=0.0823" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 5.133332  -3.092966   2.9505455 -7.4728985]]
Iteration 100 of 1000: loss=0.082 " + "l1=0.0818" + "l2=0.000205 f=-0.618 shape=(1, 9000, 1)
logits [[ 5.107226  -3.077185   2.9399104 -7.441954 ]]
Iteration 200 of 1000: loss=0.082 " + "l1=0.0818" + "l2=0.000197 f=-0.617 shape=(1, 9000, 1)
logits [[ 5.105553  -3.075043   2.9385993 -7.438745 ]]
Iteration 300 of 1000: loss=0.082 " + "l1=0.0817" + "l2=0.000228 f=-0.617 shape=(1, 9000, 1)
logits [[ 5.101917  -3.072837   2.9371347 -7.434037 ]]
Iteration 400 of 1000: loss=0.082 " + "l1=0.0817" + "l2=0.000267 f=-0.617 shape=(1, 9000, 1)
logits [[ 5.098092  -3.0708292  2.9358165 -7.429429 ]]
Iteration 500 of 1000: loss=0.082 " + "l1=0.0816" + "l2=0.000359 f=-0.616 shape=(1, 9000, 1)
logits [[ 5.094006  -3.0687544  2.9344323 -7.4246497]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.823 " + "l1=0.823" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 5.133332  -3.092966   2.9505455 -7.4728985]]
Iteration 100 of 1000: loss=0.8 " + "l1=0.786" + "l2=0.0142 f=-0.593 shape=(1, 9000, 1)
logits [[ 4.915236  -2.9413748  2.8509877 -7.195516 ]]
Iteration 200 of 1000: loss=0.79 " + "l1=0.769" + "l2=0.0207 f=-0.577 shape=(1, 9000, 1)
logits [[ 4.820399  -2.8721616  2.8116324 -7.0684495]]
Iteration 300 of 1000: loss=0.781 " + "l1=0.756" + "l2=0.0249 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.7333703 -2.8269782  2.7915885 -6.958837 ]]
Iteration 400 of 1000: loss=0.772 " + "l1=0.743" + "l2=0.0289 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.6429176 -2.784991   2.7697718 -6.8444905]]
Iteration 500 of 1000: loss=0.763 " + "l1=0.732" + "l2=0.0311 f=-0.545 shape=(1, 9000, 1)
logits [[ 4.570678  -2.7515552  2.751206  -6.7490263]]
Iteration 600 of 1000: loss=0.756 " + "l1=0.723" + "l2=0.0329 f=-0.539 shape=(1, 9000, 1)
logits [[ 4.5073867 -2.7226787  2.7279155 -6.6672187]]
Iteration 700 of 1000: loss=0.748 " + "l1=0.714" + "l2=0.034 f=-0.532 shape=(1, 9000, 1)
logits [[ 4.4491396 -2.694171   2.7086682 -6.590463 ]]
Iteration 800 of 1000: loss=0.74 " + "l1=0.704" + "l2=0.036 f=-0.523 shape=(1, 9000, 1)
logits [[ 4.3782544 -2.6603982  2.6871574 -6.4967194]]
Iteration 900 of 1000: loss=0.732 " + "l1=0.695" + "l2=0.0372 f=-0.515 shape=(1, 9000, 1)
logits [[ 4.317033  -2.629141   2.6661966 -6.416064 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.23 " + "l1=8.23" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 5.133332  -3.092966   2.9505455 -7.4728985]]
Iteration 100 of 1000: loss=6.5 " + "l1=5.6" + "l2=0.9 f=-0.434 shape=(1, 9000, 1)
logits [[ 3.4260635 -2.1749732  2.4312906 -5.4194536]]
Iteration 200 of 1000: loss=5.87 " + "l1=4.55" + "l2=1.32 f=-0.376 shape=(1, 9000, 1)
logits [[ 2.693133  -1.8596896  2.1855729 -4.523067 ]]
Iteration 300 of 1000: loss=5.26 " + "l1=3.62" + "l2=1.65 f=-0.327 shape=(1, 9000, 1)
logits [[ 2.0123332 -1.6049592  1.8980905 -3.6132932]]
Iteration 400 of 1000: loss=4.81 " + "l1=3.07" + "l2=1.74 f=-0.317 shape=(1, 9000, 1)
logits [[ 1.6338286 -1.4357611  1.6257851 -3.0925398]]
Iteration 500 of 1000: loss=4.55 " + "l1=2.83" + "l2=1.72 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.4508164 -1.368005   1.457003  -2.7886176]]
Iteration 600 of 1000: loss=4.27 " + "l1=2.62" + "l2=1.64 f=-0.317 shape=(1, 9000, 1)
logits [[ 1.2908973 -1.3303508  1.2860497 -2.5135453]]
Iteration 700 of 1000: loss=3.97 " + "l1=2.4" + "l2=1.57 f=-0.316 shape=(1, 9000, 1)
logits [[ 1.1119072 -1.2845129  1.1204515 -2.2110145]]
Iteration 800 of 1000: loss=3.62 " + "l1=2.17" + "l2=1.45 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.9178266 -1.2546662  0.9169498 -1.8834405]]
Iteration 900 of 1000: loss=3.29 " + "l1=1.86" + "l2=1.43 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.70735234 -1.1504087   0.71111935 -1.5715656 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=82.3 " + "l1=82.3" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 5.133332  -3.092966   2.9505455 -7.4728985]]
Iteration 100 of 1000: loss=19.7 " + "l1=3.77" + "l2=16 f=-0.397 shape=(1, 9000, 1)
logits [[-0.02861716  0.00269452  0.37942582 -1.9397258 ]]
Iteration 200 of 1000: loss=11.7 " + "l1=0.239" + "l2=11.4 f=-0.45 shape=(1, 9000, 1)
logits [[-0.32817802  0.24195491  0.2658822  -1.9783295 ]]
Iteration 300 of 1000: loss=10.1 " + "l1=0" + "l2=10.1 f=-0.447 shape=(1, 9000, 1)
logits [[-0.3502052   0.26822966  0.25345832 -1.9577276 ]]
Iteration 400 of 1000: loss=9.31 " + "l1=0.132" + "l2=9.17 f=-0.441 shape=(1, 9000, 1)
logits [[-0.3171237   0.24601789  0.2591986  -1.9515644 ]]
Iteration 500 of 1000: loss=8.82 " + "l1=0" + "l2=8.82 f=-0.442 shape=(1, 9000, 1)
logits [[-0.36486468  0.26198816  0.23758534 -1.9037782 ]]
Iteration 600 of 1000: loss=8.49 " + "l1=0.18" + "l2=8.31 f=-0.436 shape=(1, 9000, 1)
logits [[-0.3199478   0.2291917   0.24720876 -1.9022596 ]]
Iteration 700 of 1000: loss=8.16 " + "l1=0" + "l2=8.16 f=-0.442 shape=(1, 9000, 1)
logits [[-0.3884758   0.25156727  0.22378337 -1.8553543 ]]
Iteration 800 of 1000: loss=7.81 " + "l1=0" + "l2=7.81 f=-0.439 shape=(1, 9000, 1)
logits [[-0.37056383  0.22821377  0.22362141 -1.8372369 ]]
Iteration 900 of 1000: loss=7.53 " + "l1=0" + "l2=7.53 f=-0.438 shape=(1, 9000, 1)
logits [[-0.3825154  0.2207781  0.218733  -1.808579 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=45.2 " + "l1=45.2" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 5.133332  -3.092966   2.9505455 -7.4728985]]
Iteration 100 of 1000: loss=17.5 " + "l1=8.03" + "l2=9.47 f=-0.351 shape=(1, 9000, 1)
logits [[ 0.8780053  -0.56494933  0.8957355  -2.6138842 ]]
Iteration 200 of 1000: loss=10.7 " + "l1=0.00118" + "l2=10.7 f=-0.434 shape=(1, 9000, 1)
logits [[-0.16364679  0.2265656   0.2267797  -2.027512  ]]
Iteration 300 of 1000: loss=9.15 " + "l1=0.163" + "l2=8.98 f=-0.429 shape=(1, 9000, 1)
logits [[-0.15370798  0.20060182  0.23029643 -1.99417   ]]
Iteration 400 of 1000: loss=8.36 " + "l1=0" + "l2=8.36 f=-0.435 shape=(1, 9000, 1)
logits [[-0.23489365  0.21070772  0.2069173  -1.9246504 ]]
Iteration 500 of 1000: loss=7.91 " + "l1=0" + "l2=7.91 f=-0.436 shape=(1, 9000, 1)
logits [[-0.25526425  0.20480798  0.1978824  -1.8922555 ]]
Iteration 600 of 1000: loss=7.49 " + "l1=0" + "l2=7.49 f=-0.436 shape=(1, 9000, 1)
logits [[-0.2832373   0.19489332  0.18877722 -1.8440607 ]]
Iteration 700 of 1000: loss=7.07 " + "l1=0" + "l2=7.07 f=-0.44 shape=(1, 9000, 1)
logits [[-0.3526929   0.19462183  0.19155638 -1.7930356 ]]
Iteration 800 of 1000: loss=6.83 " + "l1=0.127" + "l2=6.7 f=-0.436 shape=(1, 9000, 1)
logits [[-0.33506984  0.17233893  0.19535685 -1.7748419 ]]
Iteration 900 of 1000: loss=6.58 " + "l1=0.0448" + "l2=6.54 f=-0.436 shape=(1, 9000, 1)
logits [[-0.35473529  0.17447792  0.1826183  -1.7469224 ]]
--- 273.88874673843384 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0218 " + "l1=0.0218" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 5.133332  -3.092966   2.9505455 -7.4728985]]
Iteration 100 of 1000: loss=0.0218 " + "l1=0.0216" + "l2=0.000111 f=-0.621 shape=(1, 9000, 1)
logits [[ 5.1170626 -3.0923917  2.9527962 -7.459683 ]]
Iteration 200 of 1000: loss=0.0217 " + "l1=0.0216" + "l2=7.43e-05 f=-0.62 shape=(1, 9000, 1)
logits [[ 5.117426  -3.0921803  2.9526248 -7.4596057]]
Iteration 300 of 1000: loss=0.0217 " + "l1=0.0216" + "l2=0.000101 f=-0.62 shape=(1, 9000, 1)
logits [[ 5.1156464 -3.0919507  2.9526002 -7.4579687]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.218 " + "l1=0.218" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 5.133332  -3.092966   2.9505455 -7.4728985]]
Iteration 100 of 1000: loss=0.211 " + "l1=0.206" + "l2=0.00455 f=-0.619 shape=(1, 9000, 1)
logits [[ 5.0293508 -3.0884013  2.9661934 -7.38364  ]]
Iteration 200 of 1000: loss=0.208 " + "l1=0.202" + "l2=0.0059 f=-0.618 shape=(1, 9000, 1)
logits [[ 4.9923887 -3.082376   2.9695888 -7.350118 ]]
Iteration 300 of 1000: loss=0.206 " + "l1=0.198" + "l2=0.00725 f=-0.616 shape=(1, 9000, 1)
logits [[ 4.955059  -3.0761793  2.97188   -7.3146386]]
Iteration 400 of 1000: loss=0.203 " + "l1=0.194" + "l2=0.00862 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.916416  -3.0691185  2.97355   -7.27729  ]]
Iteration 500 of 1000: loss=0.2 " + "l1=0.19" + "l2=0.0105 f=-0.611 shape=(1, 9000, 1)
logits [[ 4.8715577 -3.0578077  2.9755836 -7.232254 ]]
Iteration 600 of 1000: loss=0.196 " + "l1=0.184" + "l2=0.0128 f=-0.605 shape=(1, 9000, 1)
logits [[ 4.815659  -3.042995   2.9789023 -7.1708684]]
Iteration 700 of 1000: loss=0.193 " + "l1=0.179" + "l2=0.0143 f=-0.6 shape=(1, 9000, 1)
logits [[ 4.7668114 -3.0278215  2.980321  -7.1209145]]
Iteration 800 of 1000: loss=0.19 " + "l1=0.175" + "l2=0.0152 f=-0.597 shape=(1, 9000, 1)
logits [[ 4.7278285 -3.016099   2.9827101 -7.0811877]]
Iteration 900 of 1000: loss=0.187 " + "l1=0.171" + "l2=0.0162 f=-0.593 shape=(1, 9000, 1)
logits [[ 4.69402   -3.008325   2.9844794 -7.042358 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.18 " + "l1=2.18" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 5.133332  -3.092966   2.9505455 -7.4728985]]
Iteration 100 of 1000: loss=1.3 " + "l1=0.829" + "l2=0.472 f=-0.558 shape=(1, 9000, 1)
logits [[ 3.8923056 -3.0344846  3.0636423 -6.1544876]]
Iteration 200 of 1000: loss=0.941 " + "l1=0.284" + "l2=0.657 f=-0.51 shape=(1, 9000, 1)
logits [[ 3.3439882 -2.982563   3.0599418 -5.4614577]]
Iteration 300 of 1000: loss=0.66 " + "l1=0.0113" + "l2=0.649 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.122767  -3.0053592  3.1115057 -5.1963496]]
Iteration 400 of 1000: loss=0.557 " + "l1=0.00901" + "l2=0.548 f=-0.484 shape=(1, 9000, 1)
logits [[ 3.0718064 -2.9464133  3.062793  -5.1227365]]
Iteration 500 of 1000: loss=0.503 " + "l1=0" + "l2=0.503 f=-0.484 shape=(1, 9000, 1)
logits [[ 3.0326388 -2.937033   3.0400956 -5.0700464]]
Iteration 600 of 1000: loss=0.456 " + "l1=0.0058" + "l2=0.451 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.0230358 -2.931211   3.0172372 -5.0604825]]
Iteration 700 of 1000: loss=0.414 " + "l1=0" + "l2=0.414 f=-0.493 shape=(1, 9000, 1)
logits [[ 2.995837  -2.9328928  3.0008228 -5.0342207]]
Iteration 800 of 1000: loss=0.375 " + "l1=0" + "l2=0.375 f=-0.5 shape=(1, 9000, 1)
logits [[ 2.985643  -2.9483182  2.9873977 -5.024478 ]]
Iteration 900 of 1000: loss=0.342 " + "l1=0.00702" + "l2=0.335 f=-0.508 shape=(1, 9000, 1)
logits [[ 2.97505   -2.9693627  2.9680324 -5.004603 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.2 " + "l1=1.2" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 5.133332  -3.092966   2.9505455 -7.4728985]]
Iteration 100 of 1000: loss=0.93 " + "l1=0.764" + "l2=0.165 f=-0.581 shape=(1, 9000, 1)
logits [[ 4.435716  -3.0460665  3.0457501 -6.7582793]]
Iteration 200 of 1000: loss=0.801 " + "l1=0.586" + "l2=0.215 f=-0.559 shape=(1, 9000, 1)
logits [[ 4.123566 -3.028573  3.057945 -6.390637]]
Iteration 300 of 1000: loss=0.728 " + "l1=0.497" + "l2=0.231 f=-0.559 shape=(1, 9000, 1)
logits [[ 3.952328  -3.0303173  3.04874   -6.2075186]]
Iteration 400 of 1000: loss=0.66 " + "l1=0.401" + "l2=0.258 f=-0.55 shape=(1, 9000, 1)
logits [[ 3.7490966 -2.9952877  3.0192902 -5.973    ]]
Iteration 500 of 1000: loss=0.608 " + "l1=0.337" + "l2=0.27 f=-0.542 shape=(1, 9000, 1)
logits [[ 3.6142108 -2.9838428  3.0006359 -5.7989917]]
Iteration 600 of 1000: loss=0.55 " + "l1=0.242" + "l2=0.308 f=-0.523 shape=(1, 9000, 1)
logits [[ 3.434189  -2.9702094  2.9949646 -5.5528026]]
Iteration 700 of 1000: loss=0.459 " + "l1=0.0725" + "l2=0.386 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.165217  -2.9900308  3.0334208 -5.2063823]]
Iteration 800 of 1000: loss=0.363 " + "l1=0.000694" + "l2=0.362 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.038913  -3.0057137  3.0376503 -5.0237975]]
Iteration 900 of 1000: loss=0.311 " + "l1=0.00224" + "l2=0.309 f=-0.483 shape=(1, 9000, 1)
logits [[ 3.0416093 -3.0250924  3.0375416 -4.9854326]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.709 " + "l1=0.709" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 5.133332  -3.092966   2.9505455 -7.4728985]]
Iteration 100 of 1000: loss=0.62 " + "l1=0.564" + "l2=0.0566 f=-0.602 shape=(1, 9000, 1)
logits [[ 4.743599  -3.0633397  3.0084374 -7.0980105]]
Iteration 200 of 1000: loss=0.572 " + "l1=0.493" + "l2=0.0791 f=-0.582 shape=(1, 9000, 1)
logits [[ 4.549345  -3.0313978  3.031852  -6.8788924]]
Iteration 300 of 1000: loss=0.536 " + "l1=0.439" + "l2=0.0967 f=-0.569 shape=(1, 9000, 1)
logits [[ 4.386689  -3.0161657  3.035938  -6.6813827]]
Iteration 400 of 1000: loss=0.508 " + "l1=0.406" + "l2=0.103 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.2665715 -3.0036442  3.0181758 -6.545606 ]]
Iteration 500 of 1000: loss=0.482 " + "l1=0.375" + "l2=0.107 f=-0.561 shape=(1, 9000, 1)
logits [[ 4.155204  -2.9712796  3.0008805 -6.430648 ]]
Iteration 600 of 1000: loss=0.457 " + "l1=0.34" + "l2=0.117 f=-0.558 shape=(1, 9000, 1)
logits [[ 4.0314116 -2.9558494  2.9840174 -6.2895875]]
Iteration 700 of 1000: loss=0.436 " + "l1=0.32" + "l2=0.117 f=-0.558 shape=(1, 9000, 1)
logits [[ 3.9572303 -2.9550385  2.974136  -6.207935 ]]
Iteration 800 of 1000: loss=0.417 " + "l1=0.298" + "l2=0.119 f=-0.553 shape=(1, 9000, 1)
logits [[ 3.8821883 -2.9464738  2.965939  -6.113703 ]]
Iteration 900 of 1000: loss=0.397 " + "l1=0.276" + "l2=0.121 f=-0.546 shape=(1, 9000, 1)
logits [[ 3.8072307 -2.9387636  2.9581122 -6.010118 ]]
--- 264.6564562320709 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.126 " + "l1=0.126" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 5.133332  -3.092966   2.9505455 -7.4728985]]
Iteration 100 of 1000: loss=0.126 " + "l1=0.125" + "l2=0.000407 f=-0.616 shape=(1, 9000, 1)
logits [[ 5.0955667 -3.07971    2.9353127 -7.4150944]]
Iteration 200 of 1000: loss=0.125 " + "l1=0.125" + "l2=0.000417 f=-0.615 shape=(1, 9000, 1)
logits [[ 5.090036  -3.0768178  2.9328797 -7.4067063]]
Iteration 300 of 1000: loss=0.125 " + "l1=0.125" + "l2=0.000493 f=-0.614 shape=(1, 9000, 1)
logits [[ 5.0829396 -3.074257   2.9301176 -7.3962646]]
Iteration 400 of 1000: loss=0.125 " + "l1=0.125" + "l2=0.000579 f=-0.614 shape=(1, 9000, 1)
logits [[ 5.0758595 -3.0719762  2.9273794 -7.3859835]]
Iteration 500 of 1000: loss=0.125 " + "l1=0.124" + "l2=0.000653 f=-0.613 shape=(1, 9000, 1)
logits [[ 5.0686946 -3.069708   2.924744  -7.3757205]]
Iteration 600 of 1000: loss=0.125 " + "l1=0.124" + "l2=0.000791 f=-0.612 shape=(1, 9000, 1)
logits [[ 5.0614333 -3.0674236  2.9221406 -7.365455 ]]
Iteration 700 of 1000: loss=0.125 " + "l1=0.124" + "l2=0.00092 f=-0.612 shape=(1, 9000, 1)
logits [[ 5.054019  -3.0652344  2.919558  -7.3551598]]
Iteration 800 of 1000: loss=0.125 " + "l1=0.124" + "l2=0.00101 f=-0.611 shape=(1, 9000, 1)
logits [[ 5.0467234 -3.0631375  2.9170175 -7.3449926]]
Iteration 900 of 1000: loss=0.125 " + "l1=0.124" + "l2=0.00115 f=-0.611 shape=(1, 9000, 1)
logits [[ 5.0395703 -3.0610824  2.9145033 -7.3350964]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.26 " + "l1=1.26" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 5.133332  -3.092966   2.9505455 -7.4728985]]
Iteration 100 of 1000: loss=1.2 " + "l1=1.17" + "l2=0.0355 f=-0.57 shape=(1, 9000, 1)
logits [[ 4.7665544 -2.946126   2.804819  -6.904247 ]]
Iteration 200 of 1000: loss=1.17 " + "l1=1.12" + "l2=0.0549 f=-0.535 shape=(1, 9000, 1)
logits [[ 4.5654936 -2.863392   2.743977  -6.586783 ]]
Iteration 300 of 1000: loss=1.14 " + "l1=1.08" + "l2=0.0662 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.415132  -2.8129497  2.7007475 -6.3525314]]
Iteration 400 of 1000: loss=1.12 " + "l1=1.05" + "l2=0.074 f=-0.5 shape=(1, 9000, 1)
logits [[ 4.2952914 -2.784463   2.6589346 -6.170745 ]]
Iteration 500 of 1000: loss=1.1 " + "l1=1.02" + "l2=0.0808 f=-0.488 shape=(1, 9000, 1)
logits [[ 4.1913414 -2.7637773  2.6233485 -6.004564 ]]
Iteration 600 of 1000: loss=1.08 " + "l1=0.992" + "l2=0.0866 f=-0.482 shape=(1, 9000, 1)
logits [[ 4.0826    -2.7553513  2.5852745 -5.8408585]]
Iteration 700 of 1000: loss=1.06 " + "l1=0.966" + "l2=0.0905 f=-0.475 shape=(1, 9000, 1)
logits [[ 3.9795728 -2.7444422  2.549972  -5.684943 ]]
Iteration 800 of 1000: loss=1.04 " + "l1=0.943" + "l2=0.0923 f=-0.47 shape=(1, 9000, 1)
logits [[ 3.8867142 -2.7314065  2.5119934 -5.5473604]]
Iteration 900 of 1000: loss=1.02 " + "l1=0.92" + "l2=0.0957 f=-0.464 shape=(1, 9000, 1)
logits [[ 3.7937331 -2.7179077  2.4752047 -5.407102 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.6 " + "l1=12.6" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 5.133332  -3.092966   2.9505455 -7.4728985]]
Iteration 100 of 1000: loss=7.84 " + "l1=5.33" + "l2=2.5 f=-0.275 shape=(1, 9000, 1)
logits [[ 2.2215724 -2.4356549  2.223159  -3.1098514]]
Iteration 200 of 1000: loss=6.62 " + "l1=4.24" + "l2=2.38 f=-0.21 shape=(1, 9000, 1)
logits [[ 1.8744454 -2.2182968  1.8719416 -2.3699203]]
Iteration 300 of 1000: loss=5.82 " + "l1=3.26" + "l2=2.56 f=-0.179 shape=(1, 9000, 1)
logits [[ 1.5217279 -2.0197268  1.5233455 -1.7408623]]
Iteration 400 of 1000: loss=5.08 " + "l1=2.58" + "l2=2.5 f=-0.173 shape=(1, 9000, 1)
logits [[ 1.2441485 -1.877666   1.2589855 -1.3166013]]
Iteration 500 of 1000: loss=4.13 " + "l1=1.61" + "l2=2.52 f=-0.157 shape=(1, 9000, 1)
logits [[ 0.76848954 -1.8059762   1.0113391  -0.6019277 ]]
Iteration 600 of 1000: loss=2.6 " + "l1=0.00486" + "l2=2.59 f=-0.1 shape=(1, 9000, 1)
logits [[ 0.16283171 -1.6037271   0.5219385   0.51707417]]
Iteration 700 of 1000: loss=1.72 " + "l1=0" + "l2=1.72 f=-0.122 shape=(1, 9000, 1)
logits [[ 0.1802044  -1.6816217   0.5032932   0.51013255]]
Iteration 800 of 1000: loss=1.33 " + "l1=0" + "l2=1.33 f=-0.13 shape=(1, 9000, 1)
logits [[ 0.1851177  -1.7271844   0.50570345  0.51813525]]
Iteration 900 of 1000: loss=1.13 " + "l1=0" + "l2=1.13 f=-0.13 shape=(1, 9000, 1)
logits [[ 0.18352073 -1.7539765   0.51246464  0.53960264]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.93 " + "l1=6.93" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 5.133332  -3.092966   2.9505455 -7.4728985]]
Iteration 100 of 1000: loss=5.27 " + "l1=4.33" + "l2=0.94 f=-0.382 shape=(1, 9000, 1)
logits [[ 3.2841363 -2.6960132  2.4669876 -4.582006 ]]
Iteration 200 of 1000: loss=4.52 " + "l1=3.31" + "l2=1.21 f=-0.294 shape=(1, 9000, 1)
logits [[ 2.5427794 -2.542958   2.30685   -3.4830246]]
Iteration 300 of 1000: loss=3.98 " + "l1=2.75" + "l2=1.24 f=-0.272 shape=(1, 9000, 1)
logits [[ 2.113022  -2.430712   2.1142776 -2.8829317]]
Iteration 400 of 1000: loss=3.5 " + "l1=2.32" + "l2=1.18 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.8255262 -2.2949896  1.8198025 -2.3920133]]
Iteration 500 of 1000: loss=3.01 " + "l1=1.91" + "l2=1.1 f=-0.262 shape=(1, 9000, 1)
logits [[ 1.5535599 -2.2409933  1.5558524 -1.9175678]]
Iteration 600 of 1000: loss=2.35 " + "l1=1.15" + "l2=1.2 f=-0.228 shape=(1, 9000, 1)
logits [[ 0.9323349 -2.1195183  1.1831698 -0.9090209]]
Iteration 700 of 1000: loss=1.32 " + "l1=0.047" + "l2=1.27 f=-0.112 shape=(1, 9000, 1)
logits [[ 0.353142   -1.8810837   0.58234984  0.49689877]]
Iteration 800 of 1000: loss=0.995 " + "l1=0.00976" + "l2=0.985 f=-0.107 shape=(1, 9000, 1)
logits [[ 0.3637966  -1.9364418   0.58080906  0.56305563]]
Iteration 900 of 1000: loss=0.857 " + "l1=0.00909" + "l2=0.847 f=-0.104 shape=(1, 9000, 1)
logits [[ 0.3880511  -1.9833022   0.5971162   0.58058804]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.1 " + "l1=4.1" + "l2=0 f=-0.62 shape=(1, 9000, 1)
logits [[ 5.133332  -3.092966   2.9505455 -7.4728985]]
Iteration 100 of 1000: loss=3.46 " + "l1=3.11" + "l2=0.343 f=-0.46 shape=(1, 9000, 1)
logits [[ 3.9551697 -2.796929   2.6296241 -5.6287026]]
Iteration 200 of 1000: loss=3.17 " + "l1=2.7" + "l2=0.474 f=-0.411 shape=(1, 9000, 1)
logits [[ 3.4550898 -2.7464383  2.500577  -4.8532586]]
Iteration 300 of 1000: loss=2.95 " + "l1=2.39" + "l2=0.561 f=-0.381 shape=(1, 9000, 1)
logits [[ 3.070534  -2.6821318  2.367891  -4.279508 ]]
Iteration 400 of 1000: loss=2.71 " + "l1=2.08" + "l2=0.632 f=-0.348 shape=(1, 9000, 1)
logits [[ 2.663972  -2.5513008  2.224994  -3.729814 ]]
Iteration 500 of 1000: loss=2.43 " + "l1=1.73" + "l2=0.694 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.2226593 -2.4186985  2.0025811 -3.1042697]]
Iteration 600 of 1000: loss=2.08 " + "l1=1.35" + "l2=0.733 f=-0.306 shape=(1, 9000, 1)
logits [[ 1.745844  -2.310206   1.7437632 -2.4048407]]
Iteration 700 of 1000: loss=1.76 " + "l1=1.08" + "l2=0.68 f=-0.292 shape=(1, 9000, 1)
logits [[ 1.4452655 -2.2090144  1.4652989 -1.8686714]]
Iteration 800 of 1000: loss=1.47 " + "l1=0.727" + "l2=0.741 f=-0.251 shape=(1, 9000, 1)
logits [[ 0.9095674 -2.0970397  1.2097483 -1.0261524]]
Iteration 900 of 1000: loss=1.13 " + "l1=0.284" + "l2=0.848 f=-0.147 shape=(1, 9000, 1)
logits [[ 0.45691493 -1.8720781   0.8507184  -0.02448966]]
--- 305.5928270816803 seconds ---
Adv result:3
Loading record A07101
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.07 " + "l1=0.07" + "l2=0 f=-0.659 shape=(1, 9000, 1)
logits [[ 4.361419  -2.6348755  2.90449   -7.2667084]]
Iteration 100 of 1000: loss=0.0694 " + "l1=0.069" + "l2=0.000384 f=-0.656 shape=(1, 9000, 1)
logits [[ 4.304532  -2.5978563  2.8825655 -7.2140584]]
Iteration 200 of 1000: loss=0.0692 " + "l1=0.0689" + "l2=0.000381 f=-0.656 shape=(1, 9000, 1)
logits [[ 4.2942157 -2.5920055  2.8783247 -7.2038646]]
Iteration 300 of 1000: loss=0.0691 " + "l1=0.0687" + "l2=0.000462 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.281298  -2.584286   2.8726487 -7.1908436]]
Iteration 400 of 1000: loss=0.069 " + "l1=0.0685" + "l2=0.000543 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.2687488 -2.5765114  2.8669553 -7.1780443]]
Iteration 500 of 1000: loss=0.0689 " + "l1=0.0683" + "l2=0.000656 f=-0.654 shape=(1, 9000, 1)
logits [[ 4.257571  -2.569069   2.8615077 -7.1669064]]
Iteration 600 of 1000: loss=0.0688 " + "l1=0.0681" + "l2=0.000762 f=-0.654 shape=(1, 9000, 1)
logits [[ 4.2461743 -2.5618296  2.8562028 -7.155256 ]]
Iteration 700 of 1000: loss=0.0687 " + "l1=0.0679" + "l2=0.000841 f=-0.653 shape=(1, 9000, 1)
logits [[ 4.234585  -2.5544748  2.8507242 -7.143332 ]]
Iteration 800 of 1000: loss=0.0688 " + "l1=0.0677" + "l2=0.00108 f=-0.653 shape=(1, 9000, 1)
logits [[ 4.2227626 -2.547307   2.8454723 -7.13104  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.7 " + "l1=0.7" + "l2=0 f=-0.659 shape=(1, 9000, 1)
logits [[ 4.361419  -2.6348755  2.90449   -7.2667084]]
Iteration 100 of 1000: loss=0.652 " + "l1=0.627" + "l2=0.0247 f=-0.641 shape=(1, 9000, 1)
logits [[ 3.9217734 -2.3507988  2.7358441 -6.870944 ]]
Iteration 200 of 1000: loss=0.63 " + "l1=0.596" + "l2=0.0343 f=-0.632 shape=(1, 9000, 1)
logits [[ 3.7235858 -2.2354426  2.6570997 -6.673659 ]]
Iteration 300 of 1000: loss=0.609 " + "l1=0.563" + "l2=0.0453 f=-0.624 shape=(1, 9000, 1)
logits [[ 3.5327988 -2.1010072  2.5744264 -6.5008807]]
Iteration 400 of 1000: loss=0.594 " + "l1=0.543" + "l2=0.05 f=-0.619 shape=(1, 9000, 1)
logits [[ 3.4113095 -2.0236685  2.5169666 -6.3804727]]
Iteration 500 of 1000: loss=0.582 " + "l1=0.528" + "l2=0.0541 f=-0.619 shape=(1, 9000, 1)
logits [[ 3.3135033 -1.9675008  2.469105  -6.289334 ]]
Iteration 600 of 1000: loss=0.571 " + "l1=0.511" + "l2=0.0593 f=-0.625 shape=(1, 9000, 1)
logits [[ 3.2046015 -1.9078325  2.404643  -6.201901 ]]
Iteration 700 of 1000: loss=0.557 " + "l1=0.494" + "l2=0.0628 f=-0.633 shape=(1, 9000, 1)
logits [[ 3.098352  -1.8435004  2.3299928 -6.115461 ]]
Iteration 800 of 1000: loss=0.545 " + "l1=0.479" + "l2=0.0658 f=-0.637 shape=(1, 9000, 1)
logits [[ 3.0063033 -1.7840123  2.2654123 -6.0364223]]
Iteration 900 of 1000: loss=0.534 " + "l1=0.465" + "l2=0.0692 f=-0.641 shape=(1, 9000, 1)
logits [[ 2.9194646 -1.7296451  2.2090585 -5.9631906]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7 " + "l1=7" + "l2=0 f=-0.659 shape=(1, 9000, 1)
logits [[ 4.361419  -2.6348755  2.90449   -7.2667084]]
Iteration 100 of 1000: loss=3.25 " + "l1=1.9" + "l2=1.35 f=-0.615 shape=(1, 9000, 1)
logits [[ 1.3485276 -0.5541162  1.3448138 -4.598178 ]]
Iteration 200 of 1000: loss=2.27 " + "l1=0.888" + "l2=1.38 f=-0.665 shape=(1, 9000, 1)
logits [[ 0.81198525 -0.06616404  0.8222822  -4.226682  ]]
Iteration 300 of 1000: loss=1.99 " + "l1=0.623" + "l2=1.36 f=-0.651 shape=(1, 9000, 1)
logits [[ 0.6463485   0.06568796  0.68849677 -4.002847  ]]
Iteration 400 of 1000: loss=1.8 " + "l1=0.467" + "l2=1.33 f=-0.634 shape=(1, 9000, 1)
logits [[ 0.55315924  0.1523054   0.6188719  -3.859842  ]]
Iteration 500 of 1000: loss=1.62 " + "l1=0.283" + "l2=1.34 f=-0.626 shape=(1, 9000, 1)
logits [[ 0.34689578  0.24593283  0.5289212  -3.6252298 ]]
Iteration 600 of 1000: loss=1.49 " + "l1=0.0866" + "l2=1.4 f=-0.62 shape=(1, 9000, 1)
logits [[ 0.1005351   0.33333126  0.41988716 -3.3319662 ]]
Iteration 700 of 1000: loss=1.39 " + "l1=0.00951" + "l2=1.38 f=-0.612 shape=(1, 9000, 1)
logits [[ 0.01013617  0.35064074  0.36015287 -3.1682916 ]]
Iteration 800 of 1000: loss=1.32 " + "l1=0.0108" + "l2=1.31 f=-0.608 shape=(1, 9000, 1)
logits [[ 0.03566092  0.32537782  0.33621046 -3.1310825 ]]
Iteration 900 of 1000: loss=1.25 " + "l1=0" + "l2=1.25 f=-0.605 shape=(1, 9000, 1)
logits [[ 0.0623707   0.31085718  0.3051477  -3.0995266 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.85 " + "l1=3.85" + "l2=0 f=-0.659 shape=(1, 9000, 1)
logits [[ 4.361419  -2.6348755  2.90449   -7.2667084]]
Iteration 100 of 1000: loss=2.49 " + "l1=1.83" + "l2=0.667 f=-0.58 shape=(1, 9000, 1)
logits [[ 2.1288788 -1.192288   1.9286395 -5.185003 ]]
Iteration 200 of 1000: loss=1.94 " + "l1=1.17" + "l2=0.767 f=-0.625 shape=(1, 9000, 1)
logits [[ 1.4382825 -0.6924738  1.4349009 -4.6824   ]]
Iteration 300 of 1000: loss=1.68 " + "l1=0.862" + "l2=0.816 f=-0.647 shape=(1, 9000, 1)
logits [[ 1.1318347  -0.42769736  1.1396673  -4.43186   ]]
Iteration 400 of 1000: loss=1.55 " + "l1=0.73" + "l2=0.817 f=-0.645 shape=(1, 9000, 1)
logits [[ 1.0175178  -0.31012103  1.0151294  -4.3013163 ]]
Iteration 500 of 1000: loss=1.45 " + "l1=0.627" + "l2=0.82 f=-0.643 shape=(1, 9000, 1)
logits [[ 0.91671777 -0.2199319   0.9206904  -4.1889434 ]]
Iteration 600 of 1000: loss=1.39 " + "l1=0.563" + "l2=0.822 f=-0.639 shape=(1, 9000, 1)
logits [[ 0.85127896 -0.16372229  0.8601455  -4.1042233 ]]
Iteration 700 of 1000: loss=1.35 " + "l1=0.533" + "l2=0.813 f=-0.631 shape=(1, 9000, 1)
logits [[ 0.8156893  -0.13895772  0.8308298  -4.0299673 ]]
Iteration 800 of 1000: loss=1.32 " + "l1=0.518" + "l2=0.801 f=-0.62 shape=(1, 9000, 1)
logits [[ 0.8202775  -0.12096146  0.8153975  -3.9948351 ]]
Iteration 900 of 1000: loss=1.29 " + "l1=0.477" + "l2=0.81 f=-0.61 shape=(1, 9000, 1)
logits [[ 0.76167786 -0.0901445   0.7774     -3.8873544 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.42 " + "l1=5.42" + "l2=0 f=-0.659 shape=(1, 9000, 1)
logits [[ 4.361419  -2.6348755  2.90449   -7.2667084]]
Iteration 100 of 1000: loss=2.92 " + "l1=1.88" + "l2=1.04 f=-0.597 shape=(1, 9000, 1)
logits [[ 1.6066632 -0.8175555  1.603772  -4.782515 ]]
Iteration 200 of 1000: loss=2.12 " + "l1=0.987" + "l2=1.13 f=-0.654 shape=(1, 9000, 1)
logits [[ 0.9803132 -0.2667689  1.0071509 -4.3349266]]
Iteration 300 of 1000: loss=1.86 " + "l1=0.742" + "l2=1.12 f=-0.657 shape=(1, 9000, 1)
logits [[ 0.83459336 -0.12239634  0.8352377  -4.175747  ]]
Iteration 400 of 1000: loss=1.7 " + "l1=0.626" + "l2=1.07 f=-0.642 shape=(1, 9000, 1)
logits [[ 0.7576813  -0.04728425  0.760355   -4.0378485 ]]
Iteration 500 of 1000: loss=1.58 " + "l1=0.515" + "l2=1.07 f=-0.632 shape=(1, 9000, 1)
logits [[ 0.63529795  0.03528751  0.6999504  -3.8972538 ]]
Iteration 600 of 1000: loss=1.51 " + "l1=0.432" + "l2=1.08 f=-0.624 shape=(1, 9000, 1)
logits [[ 0.59709597  0.09157938  0.649357   -3.8341138 ]]
Iteration 700 of 1000: loss=1.45 " + "l1=0.371" + "l2=1.08 f=-0.618 shape=(1, 9000, 1)
logits [[ 0.5572      0.13096668  0.6099238  -3.7684305 ]]
Iteration 800 of 1000: loss=1.39 " + "l1=0.308" + "l2=1.09 f=-0.602 shape=(1, 9000, 1)
logits [[ 0.47711307  0.160964    0.5579958  -3.6025417 ]]
Iteration 900 of 1000: loss=1.34 " + "l1=0.211" + "l2=1.13 f=-0.593 shape=(1, 9000, 1)
logits [[ 0.3204783   0.20306727  0.4749913  -3.3715968 ]]
--- 297.3130431175232 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0146 " + "l1=0.0146" + "l2=0 f=-0.659 shape=(1, 9000, 1)
logits [[ 4.361419  -2.6348755  2.90449   -7.2667084]]
Iteration 100 of 1000: loss=0.0143 " + "l1=0.0141" + "l2=0.000199 f=-0.658 shape=(1, 9000, 1)
logits [[ 4.3240976 -2.6326983  2.9099483 -7.2331367]]
Iteration 200 of 1000: loss=0.0143 " + "l1=0.0141" + "l2=0.000177 f=-0.658 shape=(1, 9000, 1)
logits [[ 4.320786  -2.6329017  2.9104223 -7.2298427]]
Iteration 300 of 1000: loss=0.0142 " + "l1=0.014" + "l2=0.000203 f=-0.658 shape=(1, 9000, 1)
logits [[ 4.314734  -2.6325412  2.910978  -7.2240834]]
Iteration 400 of 1000: loss=0.0142 " + "l1=0.014" + "l2=0.000272 f=-0.658 shape=(1, 9000, 1)
logits [[ 4.308371  -2.6321733  2.9116313 -7.218007 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.146 " + "l1=0.146" + "l2=0 f=-0.659 shape=(1, 9000, 1)
logits [[ 4.361419  -2.6348755  2.90449   -7.2667084]]
Iteration 100 of 1000: loss=0.127 " + "l1=0.118" + "l2=0.00923 f=-0.653 shape=(1, 9000, 1)
logits [[ 4.115867  -2.6255157  2.9371514 -7.0410657]]
Iteration 200 of 1000: loss=0.12 " + "l1=0.106" + "l2=0.0133 f=-0.651 shape=(1, 9000, 1)
logits [[ 4.0098476 -2.6144884  2.9449546 -6.9455724]]
Iteration 300 of 1000: loss=0.114 " + "l1=0.0975" + "l2=0.0163 f=-0.65 shape=(1, 9000, 1)
logits [[ 3.9227564 -2.5978715  2.9478157 -6.8710117]]
Iteration 400 of 1000: loss=0.108 " + "l1=0.0891" + "l2=0.0192 f=-0.648 shape=(1, 9000, 1)
logits [[ 3.8443947 -2.5878272  2.9537885 -6.801472 ]]
Iteration 500 of 1000: loss=0.103 " + "l1=0.0815" + "l2=0.0215 f=-0.647 shape=(1, 9000, 1)
logits [[ 3.7773325 -2.587718   2.9619153 -6.74093  ]]
Iteration 600 of 1000: loss=0.0977 " + "l1=0.0729" + "l2=0.0248 f=-0.648 shape=(1, 9000, 1)
logits [[ 3.7072198 -2.6034527  2.9786246 -6.673638 ]]
Iteration 700 of 1000: loss=0.093 " + "l1=0.0664" + "l2=0.0266 f=-0.647 shape=(1, 9000, 1)
logits [[ 3.6521373 -2.611311   2.9881551 -6.618512 ]]
Iteration 800 of 1000: loss=0.0883 " + "l1=0.0596" + "l2=0.0286 f=-0.647 shape=(1, 9000, 1)
logits [[ 3.5981798 -2.6261597  3.001825  -6.561506 ]]
Iteration 900 of 1000: loss=0.0836 " + "l1=0.0535" + "l2=0.0302 f=-0.647 shape=(1, 9000, 1)
logits [[ 3.547428  -2.6385412  3.012904  -6.510293 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.46 " + "l1=1.46" + "l2=0 f=-0.659 shape=(1, 9000, 1)
logits [[ 4.361419  -2.6348755  2.90449   -7.2667084]]
Iteration 100 of 1000: loss=0.256 " + "l1=0.00263" + "l2=0.254 f=-0.634 shape=(1, 9000, 1)
logits [[ 3.0936773 -2.6401684  3.0910497 -6.0822635]]
Iteration 200 of 1000: loss=0.174 " + "l1=0" + "l2=0.174 f=-0.637 shape=(1, 9000, 1)
logits [[ 3.0864797 -2.6512892  3.08739   -6.069849 ]]
Iteration 300 of 1000: loss=0.137 " + "l1=0.00121" + "l2=0.136 f=-0.641 shape=(1, 9000, 1)
logits [[ 3.0834622 -2.6546147  3.0822484 -6.0732975]]
Iteration 400 of 1000: loss=0.114 " + "l1=0" + "l2=0.114 f=-0.643 shape=(1, 9000, 1)
logits [[ 3.0837884 -2.6794763  3.0969617 -6.074764 ]]
Iteration 500 of 1000: loss=0.0996 " + "l1=0" + "l2=0.0996 f=-0.645 shape=(1, 9000, 1)
logits [[ 3.0847716 -2.707474   3.1207492 -6.0770864]]
Iteration 600 of 1000: loss=0.0828 " + "l1=0" + "l2=0.0828 f=-0.645 shape=(1, 9000, 1)
logits [[ 3.1112823 -2.7262914  3.1292114 -6.0959806]]
Iteration 700 of 1000: loss=0.073 " + "l1=0" + "l2=0.073 f=-0.649 shape=(1, 9000, 1)
logits [[ 3.129235  -2.753826   3.14707   -6.1180086]]
Iteration 800 of 1000: loss=0.0643 " + "l1=0" + "l2=0.0643 f=-0.651 shape=(1, 9000, 1)
logits [[ 3.1534002 -2.7767622  3.1621408 -6.142382 ]]
Iteration 900 of 1000: loss=0.0599 " + "l1=0.00199" + "l2=0.0579 f=-0.652 shape=(1, 9000, 1)
logits [[ 3.1740904 -2.7944736  3.1720972 -6.160081 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.801 " + "l1=0.801" + "l2=0 f=-0.659 shape=(1, 9000, 1)
logits [[ 4.361419  -2.6348755  2.90449   -7.2667084]]
Iteration 100 of 1000: loss=0.268 " + "l1=0.0048" + "l2=0.263 f=-0.631 shape=(1, 9000, 1)
logits [[ 3.09698   -2.6314363  3.08826   -6.076292 ]]
Iteration 200 of 1000: loss=0.171 " + "l1=0" + "l2=0.171 f=-0.633 shape=(1, 9000, 1)
logits [[ 3.065434  -2.6403763  3.0741909 -6.0331683]]
Iteration 300 of 1000: loss=0.129 " + "l1=0" + "l2=0.129 f=-0.639 shape=(1, 9000, 1)
logits [[ 3.074034  -2.658547   3.0831876 -6.0526795]]
Iteration 400 of 1000: loss=0.102 " + "l1=0.000113" + "l2=0.102 f=-0.642 shape=(1, 9000, 1)
logits [[ 3.098527  -2.6875327  3.0983212 -6.077648 ]]
Iteration 500 of 1000: loss=0.0865 " + "l1=0.00237" + "l2=0.0842 f=-0.648 shape=(1, 9000, 1)
logits [[ 3.1349154 -2.7338417  3.1306033 -6.123759 ]]
Iteration 600 of 1000: loss=0.0772 " + "l1=0" + "l2=0.0772 f=-0.65 shape=(1, 9000, 1)
logits [[ 3.1324213 -2.7570817  3.1538248 -6.1292815]]
Iteration 700 of 1000: loss=0.0703 " + "l1=0" + "l2=0.0703 f=-0.649 shape=(1, 9000, 1)
logits [[ 3.1370623 -2.775764   3.1696775 -6.128948 ]]
Iteration 800 of 1000: loss=0.0611 " + "l1=0" + "l2=0.0611 f=-0.649 shape=(1, 9000, 1)
logits [[ 3.168631  -2.7923667  3.174925  -6.1470575]]
Iteration 900 of 1000: loss=0.0557 " + "l1=0.000449" + "l2=0.0552 f=-0.648 shape=(1, 9000, 1)
logits [[ 3.1806169 -2.8056982  3.1798003 -6.1472797]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.474 " + "l1=0.474" + "l2=0 f=-0.659 shape=(1, 9000, 1)
logits [[ 4.361419  -2.6348755  2.90449   -7.2667084]]
Iteration 100 of 1000: loss=0.28 " + "l1=0.182" + "l2=0.0986 f=-0.644 shape=(1, 9000, 1)
logits [[ 3.5774944 -2.6214774  3.018628  -6.549516 ]]
Iteration 200 of 1000: loss=0.198 " + "l1=0.0644" + "l2=0.133 f=-0.637 shape=(1, 9000, 1)
logits [[ 3.25646   -2.6451776  3.0581937 -6.2178726]]
Iteration 300 of 1000: loss=0.139 " + "l1=0.00124" + "l2=0.137 f=-0.638 shape=(1, 9000, 1)
logits [[ 3.075075  -2.6512256  3.071254  -6.0454316]]
Iteration 400 of 1000: loss=0.106 " + "l1=0.000459" + "l2=0.106 f=-0.64 shape=(1, 9000, 1)
logits [[ 3.0865352 -2.6743321  3.0851243 -6.059218 ]]
Iteration 500 of 1000: loss=0.0871 " + "l1=0" + "l2=0.0871 f=-0.641 shape=(1, 9000, 1)
logits [[ 3.109653  -2.7069118  3.110031  -6.075236 ]]
Iteration 600 of 1000: loss=0.0754 " + "l1=0.000975" + "l2=0.0745 f=-0.645 shape=(1, 9000, 1)
logits [[ 3.138254  -2.741832   3.1352541 -6.109845 ]]
Iteration 700 of 1000: loss=0.067 " + "l1=0" + "l2=0.067 f=-0.646 shape=(1, 9000, 1)
logits [[ 3.1464207 -2.764203   3.1539242 -6.1185837]]
Iteration 800 of 1000: loss=0.0608 " + "l1=0.00122" + "l2=0.0595 f=-0.644 shape=(1, 9000, 1)
logits [[ 3.168445  -2.7811027  3.1646836 -6.1299105]]
Iteration 900 of 1000: loss=0.056 " + "l1=0" + "l2=0.056 f=-0.643 shape=(1, 9000, 1)
logits [[ 3.1643517 -2.795109   3.17503   -6.1169677]]
--- 271.4723427295685 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.116 " + "l1=0.116" + "l2=0 f=-0.659 shape=(1, 9000, 1)
logits [[ 4.361419  -2.6348755  2.90449   -7.2667084]]
Iteration 100 of 1000: loss=0.115 " + "l1=0.115" + "l2=0.000634 f=-0.654 shape=(1, 9000, 1)
logits [[ 4.282108  -2.6115844  2.8837605 -7.1685734]]
Iteration 200 of 1000: loss=0.115 " + "l1=0.114" + "l2=0.000735 f=-0.652 shape=(1, 9000, 1)
logits [[ 4.263055  -2.606869   2.8787076 -7.1442776]]
Iteration 300 of 1000: loss=0.114 " + "l1=0.114" + "l2=0.000903 f=-0.651 shape=(1, 9000, 1)
logits [[ 4.242056 -2.600566  2.872471 -7.117273]]
Iteration 400 of 1000: loss=0.114 " + "l1=0.113" + "l2=0.00109 f=-0.649 shape=(1, 9000, 1)
logits [[ 4.2219896 -2.594107   2.8661067 -7.090887 ]]
Iteration 500 of 1000: loss=0.114 " + "l1=0.113" + "l2=0.0013 f=-0.648 shape=(1, 9000, 1)
logits [[ 4.2028327 -2.587362   2.8593469 -7.0656652]]
Iteration 600 of 1000: loss=0.114 " + "l1=0.112" + "l2=0.00146 f=-0.646 shape=(1, 9000, 1)
logits [[ 4.18487   -2.5801024  2.8524942 -7.042204 ]]
Iteration 700 of 1000: loss=0.114 " + "l1=0.112" + "l2=0.00164 f=-0.645 shape=(1, 9000, 1)
logits [[ 4.167505  -2.5730555  2.8460226 -7.019841 ]]
Iteration 800 of 1000: loss=0.113 " + "l1=0.112" + "l2=0.00188 f=-0.644 shape=(1, 9000, 1)
logits [[ 4.1518884 -2.566327   2.8396015 -6.999608 ]]
Iteration 900 of 1000: loss=0.113 " + "l1=0.111" + "l2=0.00203 f=-0.642 shape=(1, 9000, 1)
logits [[ 4.1367545 -2.55985    2.8333597 -6.979967 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.16 " + "l1=1.16" + "l2=0 f=-0.659 shape=(1, 9000, 1)
logits [[ 4.361419  -2.6348755  2.90449   -7.2667084]]
Iteration 100 of 1000: loss=1.07 " + "l1=1.02" + "l2=0.0465 f=-0.617 shape=(1, 9000, 1)
logits [[ 3.7316325 -2.4496806  2.7297509 -6.478309 ]]
Iteration 200 of 1000: loss=1.02 " + "l1=0.948" + "l2=0.0726 f=-0.593 shape=(1, 9000, 1)
logits [[ 3.4200602 -2.3737361  2.6395226 -6.0559115]]
Iteration 300 of 1000: loss=0.982 " + "l1=0.888" + "l2=0.0944 f=-0.574 shape=(1, 9000, 1)
logits [[ 3.1720734 -2.3325405  2.573446  -5.708072 ]]
Iteration 400 of 1000: loss=0.951 " + "l1=0.842" + "l2=0.108 f=-0.557 shape=(1, 9000, 1)
logits [[ 2.9828315 -2.282871   2.5132394 -5.4416375]]
Iteration 500 of 1000: loss=0.922 " + "l1=0.8" + "l2=0.122 f=-0.539 shape=(1, 9000, 1)
logits [[ 2.807653  -2.2199886  2.445702  -5.189745 ]]
Iteration 600 of 1000: loss=0.888 " + "l1=0.746" + "l2=0.142 f=-0.52 shape=(1, 9000, 1)
logits [[ 2.591982  -2.1694655  2.3674896 -4.869115 ]]
Iteration 700 of 1000: loss=0.848 " + "l1=0.692" + "l2=0.156 f=-0.5 shape=(1, 9000, 1)
logits [[ 2.3845174 -2.1409783  2.2903852 -4.5332303]]
Iteration 800 of 1000: loss=0.809 " + "l1=0.641" + "l2=0.168 f=-0.48 shape=(1, 9000, 1)
logits [[ 2.1886778 -2.0754373  2.1860445 -4.220384 ]]
Iteration 900 of 1000: loss=0.779 " + "l1=0.611" + "l2=0.168 f=-0.465 shape=(1, 9000, 1)
logits [[ 2.0876303 -2.0147104  2.0877855 -4.020172 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.6 " + "l1=11.6" + "l2=0 f=-0.659 shape=(1, 9000, 1)
logits [[ 4.361419  -2.6348755  2.90449   -7.2667084]]
Iteration 100 of 1000: loss=5.72 " + "l1=3.44" + "l2=2.28 f=-0.4 shape=(1, 9000, 1)
logits [[ 0.9404352 -1.4024289  1.149423  -2.287141 ]]
Iteration 200 of 1000: loss=3.27 " + "l1=0.119" + "l2=3.15 f=-0.295 shape=(1, 9000, 1)
logits [[-0.57359964 -0.73642075  0.12496285  0.00563014]]
Iteration 300 of 1000: loss=2.54 " + "l1=0.0149" + "l2=2.52 f=-0.267 shape=(1, 9000, 1)
logits [[-0.51332617 -0.7482993   0.10486917  0.08995075]]
Iteration 400 of 1000: loss=2.19 " + "l1=0.00399" + "l2=2.18 f=-0.242 shape=(1, 9000, 1)
logits [[-0.45524058 -0.7879811   0.1392249   0.13523278]]
Iteration 500 of 1000: loss=1.96 " + "l1=0.0317" + "l2=1.93 f=-0.227 shape=(1, 9000, 1)
logits [[-0.40392786 -0.8297961   0.17823634  0.14648801]]
Iteration 600 of 1000: loss=1.78 " + "l1=0" + "l2=1.78 f=-0.215 shape=(1, 9000, 1)
logits [[-0.4131237  -0.85020006  0.19020526  0.21405646]]
Iteration 700 of 1000: loss=1.63 " + "l1=0.00707" + "l2=1.62 f=-0.207 shape=(1, 9000, 1)
logits [[-0.38906106 -0.88173807  0.22458793  0.21751839]]
Iteration 800 of 1000: loss=1.52 " + "l1=0" + "l2=1.52 f=-0.198 shape=(1, 9000, 1)
logits [[-0.3937877  -0.89705324  0.23341289  0.26365384]]
Iteration 900 of 1000: loss=1.42 " + "l1=0" + "l2=1.42 f=-0.19 shape=(1, 9000, 1)
logits [[-0.38610628 -0.91541106  0.2504297   0.29067022]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.4 " + "l1=6.4" + "l2=0 f=-0.659 shape=(1, 9000, 1)
logits [[ 4.361419  -2.6348755  2.90449   -7.2667084]]
Iteration 100 of 1000: loss=4.04 " + "l1=3.15" + "l2=0.891 f=-0.473 shape=(1, 9000, 1)
logits [[ 1.880014  -1.8320615  1.8898145 -3.8306453]]
Iteration 200 of 1000: loss=3.21 " + "l1=1.99" + "l2=1.21 f=-0.426 shape=(1, 9000, 1)
logits [[ 1.015212  -1.4117562  1.1583202 -2.465696 ]]
Iteration 300 of 1000: loss=2.51 " + "l1=0.996" + "l2=1.52 f=-0.37 shape=(1, 9000, 1)
logits [[ 0.16889831 -1.0226957   0.5921897  -1.2182455 ]]
Iteration 400 of 1000: loss=1.99 " + "l1=0.388" + "l2=1.6 f=-0.294 shape=(1, 9000, 1)
logits [[-0.29439196 -0.880873    0.35200834 -0.35299188]]
Iteration 500 of 1000: loss=1.56 " + "l1=0.0117" + "l2=1.55 f=-0.232 shape=(1, 9000, 1)
logits [[-0.4670242  -0.90077716  0.23095463  0.20973784]]
Iteration 600 of 1000: loss=1.36 " + "l1=8.59e-06" + "l2=1.36 f=-0.212 shape=(1, 9000, 1)
logits [[-0.41078013 -0.950035    0.25584033  0.2558247 ]]
Iteration 700 of 1000: loss=1.25 " + "l1=0.0138" + "l2=1.23 f=-0.205 shape=(1, 9000, 1)
logits [[-0.36810777 -0.9983936   0.28595573  0.26093554]]
Iteration 800 of 1000: loss=1.16 " + "l1=0.000261" + "l2=1.16 f=-0.197 shape=(1, 9000, 1)
logits [[-0.359526   -1.0345938   0.30265167  0.30217725]]
Iteration 900 of 1000: loss=1.09 " + "l1=0" + "l2=1.09 f=-0.196 shape=(1, 9000, 1)
logits [[-0.34273538 -1.0787225   0.3182384   0.32068253]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.78 " + "l1=3.78" + "l2=0 f=-0.659 shape=(1, 9000, 1)
logits [[ 4.361419  -2.6348755  2.90449   -7.2667084]]
Iteration 100 of 1000: loss=2.77 " + "l1=2.27" + "l2=0.505 f=-0.519 shape=(1, 9000, 1)
logits [[ 2.3426778 -2.1163557  2.333256  -4.6364307]]
Iteration 200 of 1000: loss=2.43 " + "l1=1.9" + "l2=0.527 f=-0.468 shape=(1, 9000, 1)
logits [[ 1.9521554 -1.8831779  1.9570135 -3.8983483]]
Iteration 300 of 1000: loss=2.16 " + "l1=1.59" + "l2=0.565 f=-0.428 shape=(1, 9000, 1)
logits [[ 1.6174986 -1.6778588  1.6240649 -3.2750301]]
Iteration 400 of 1000: loss=1.85 " + "l1=1.19" + "l2=0.665 f=-0.392 shape=(1, 9000, 1)
logits [[ 1.0977093 -1.4728721  1.2298194 -2.4237704]]
Iteration 500 of 1000: loss=1.65 " + "l1=0.934" + "l2=0.713 f=-0.361 shape=(1, 9000, 1)
logits [[ 0.7906131 -1.3753321  1.0072546 -1.8677531]]
Iteration 600 of 1000: loss=1.46 " + "l1=0.651" + "l2=0.813 f=-0.308 shape=(1, 9000, 1)
logits [[ 0.46909568 -1.2556485   0.7785323  -1.2258217 ]]
Iteration 700 of 1000: loss=1.29 " + "l1=0.427" + "l2=0.867 f=-0.264 shape=(1, 9000, 1)
logits [[ 0.2526024  -1.2384919   0.62155384 -0.6927077 ]]
Iteration 800 of 1000: loss=1.17 " + "l1=0.289" + "l2=0.885 f=-0.234 shape=(1, 9000, 1)
logits [[ 0.10511916 -1.2216802   0.53506684 -0.354129  ]]
Iteration 900 of 1000: loss=1.07 " + "l1=0.152" + "l2=0.92 f=-0.202 shape=(1, 9000, 1)
logits [[-0.05879475 -1.2050195   0.46033624 -0.00591904]]
--- 309.9780502319336 seconds ---
Adv result:3
Loading record A07118
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0801 " + "l1=0.0801" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.8047833 -3.2022424  3.5914009 -7.5743847]]
Iteration 100 of 1000: loss=0.0793 " + "l1=0.0788" + "l2=0.000466 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.739775  -3.1426275  3.5459294 -7.4971676]]
Iteration 200 of 1000: loss=0.079 " + "l1=0.0785" + "l2=0.000511 f=-0.587 shape=(1, 9000, 1)
logits [[ 4.7223425 -3.128234   3.5347273 -7.4752526]]
Iteration 300 of 1000: loss=0.0788 " + "l1=0.0781" + "l2=0.000648 f=-0.584 shape=(1, 9000, 1)
logits [[ 4.701511  -3.111326   3.5217128 -7.448965 ]]
Iteration 400 of 1000: loss=0.0786 " + "l1=0.0778" + "l2=0.000812 f=-0.582 shape=(1, 9000, 1)
logits [[ 4.681002  -3.0946848  3.508421  -7.4229465]]
Iteration 500 of 1000: loss=0.0784 " + "l1=0.0774" + "l2=0.00102 f=-0.58 shape=(1, 9000, 1)
logits [[ 4.6599903 -3.0750685  3.493119  -7.3968906]]
Iteration 600 of 1000: loss=0.0782 " + "l1=0.077" + "l2=0.00122 f=-0.577 shape=(1, 9000, 1)
logits [[ 4.639716  -3.0566375  3.4790463 -7.371665 ]]
Iteration 700 of 1000: loss=0.078 " + "l1=0.0766" + "l2=0.00141 f=-0.575 shape=(1, 9000, 1)
logits [[ 4.6218953 -3.040759   3.4669752 -7.3496428]]
Iteration 800 of 1000: loss=0.078 " + "l1=0.0763" + "l2=0.00169 f=-0.574 shape=(1, 9000, 1)
logits [[ 4.605385  -3.0259387  3.4559298 -7.3293853]]
Iteration 900 of 1000: loss=0.0778 " + "l1=0.076" + "l2=0.0018 f=-0.572 shape=(1, 9000, 1)
logits [[ 4.590827  -3.0126617  3.4463964 -7.3117685]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.801 " + "l1=0.801" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.8047833 -3.2022424  3.5914009 -7.5743847]]
Iteration 100 of 1000: loss=0.728 " + "l1=0.695" + "l2=0.0336 f=-0.547 shape=(1, 9000, 1)
logits [[ 4.2473574 -2.69927    3.2158098 -6.950688 ]]
Iteration 200 of 1000: loss=0.684 " + "l1=0.634" + "l2=0.0492 f=-0.521 shape=(1, 9000, 1)
logits [[ 3.9137087 -2.430141   3.0125642 -6.5814962]]
Iteration 300 of 1000: loss=0.649 " + "l1=0.586" + "l2=0.063 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.634141  -2.2303245  2.8580158 -6.269472 ]]
Iteration 400 of 1000: loss=0.622 " + "l1=0.545" + "l2=0.0765 f=-0.484 shape=(1, 9000, 1)
logits [[ 3.3848171 -2.0676966  2.7372108 -5.9922423]]
Iteration 500 of 1000: loss=0.596 " + "l1=0.508" + "l2=0.0887 f=-0.467 shape=(1, 9000, 1)
logits [[ 3.1447058 -1.9317816  2.635567  -5.714648 ]]
Iteration 600 of 1000: loss=0.575 " + "l1=0.477" + "l2=0.0975 f=-0.456 shape=(1, 9000, 1)
logits [[ 2.939643  -1.8314207  2.5624914 -5.4953766]]
Iteration 700 of 1000: loss=0.557 " + "l1=0.454" + "l2=0.104 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.7753391 -1.7601249  2.5066626 -5.31502  ]]
Iteration 800 of 1000: loss=0.544 " + "l1=0.437" + "l2=0.107 f=-0.444 shape=(1, 9000, 1)
logits [[ 2.6519527 -1.7197446  2.4701579 -5.1802473]]
Iteration 900 of 1000: loss=0.532 " + "l1=0.422" + "l2=0.111 f=-0.44 shape=(1, 9000, 1)
logits [[ 2.5383804 -1.6796987  2.4348483 -5.055336 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.01 " + "l1=8.01" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.8047833 -3.2022424  3.5914009 -7.5743847]]
Iteration 100 of 1000: loss=3.85 " + "l1=2.62" + "l2=1.22 f=-0.372 shape=(1, 9000, 1)
logits [[ 1.8022743 -0.8206207  1.8040756 -4.2726207]]
Iteration 200 of 1000: loss=3.06 " + "l1=1.92" + "l2=1.15 f=-0.316 shape=(1, 9000, 1)
logits [[ 1.4618225  -0.45587438  1.4579679  -3.729274  ]]
Iteration 300 of 1000: loss=2.51 " + "l1=1.26" + "l2=1.25 f=-0.246 shape=(1, 9000, 1)
logits [[ 1.0826286  -0.11896541  1.1392654  -3.0866098 ]]
Iteration 400 of 1000: loss=2.16 " + "l1=0.98" + "l2=1.17 f=-0.213 shape=(1, 9000, 1)
logits [[ 9.4105828e-01  1.2773704e-03  9.8148274e-01 -2.7763546e+00]]
Iteration 500 of 1000: loss=1.95 " + "l1=0.829" + "l2=1.12 f=-0.187 shape=(1, 9000, 1)
logits [[ 0.81555915  0.06069332  0.88988125 -2.5154276 ]]
Iteration 600 of 1000: loss=1.78 " + "l1=0.672" + "l2=1.11 f=-0.164 shape=(1, 9000, 1)
logits [[ 0.6272292   0.12381447  0.79589653 -2.2030928 ]]
Iteration 700 of 1000: loss=1.61 " + "l1=0.504" + "l2=1.1 f=-0.161 shape=(1, 9000, 1)
logits [[ 0.2900373   0.20177777  0.70545554 -1.8421175 ]]
Iteration 800 of 1000: loss=1.48 " + "l1=0.405" + "l2=1.08 f=-0.151 shape=(1, 9000, 1)
logits [[ 0.1007294   0.21786804  0.6232951  -1.5476329 ]]
Iteration 900 of 1000: loss=1.39 " + "l1=0.353" + "l2=1.04 f=-0.136 shape=(1, 9000, 1)
logits [[ 0.04481096  0.21753547  0.5707382  -1.3770661 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=80.1 " + "l1=80.1" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.8047833 -3.2022424  3.5914009 -7.5743847]]
Iteration 100 of 1000: loss=8.97 " + "l1=0" + "l2=8.97 f=-0.196 shape=(1, 9000, 1)
logits [[-0.02012179  0.61428726  0.6084908  -1.9848626 ]]
Iteration 200 of 1000: loss=5.87 " + "l1=0.0705" + "l2=5.8 f=-0.194 shape=(1, 9000, 1)
logits [[-0.06148831  0.6191631   0.62621605 -1.9610368 ]]
Iteration 300 of 1000: loss=4.81 " + "l1=0" + "l2=4.81 f=-0.175 shape=(1, 9000, 1)
logits [[-0.04455882  0.6293373   0.61744595 -1.9002551 ]]
Iteration 400 of 1000: loss=4.09 " + "l1=0" + "l2=4.09 f=-0.165 shape=(1, 9000, 1)
logits [[-0.06173097  0.6174286   0.6172994  -1.8325965 ]]
Iteration 500 of 1000: loss=3.64 " + "l1=0" + "l2=3.64 f=-0.158 shape=(1, 9000, 1)
logits [[-0.07052611  0.6140941   0.6114378  -1.7863592 ]]
Iteration 600 of 1000: loss=3.34 " + "l1=0" + "l2=3.34 f=-0.153 shape=(1, 9000, 1)
logits [[-0.06938379  0.6059352   0.60462296 -1.7532126 ]]
Iteration 700 of 1000: loss=3.12 " + "l1=0" + "l2=3.12 f=-0.152 shape=(1, 9000, 1)
logits [[-0.08403712  0.60304534  0.59400713 -1.721467  ]]
Iteration 800 of 1000: loss=2.92 " + "l1=0" + "l2=2.92 f=-0.149 shape=(1, 9000, 1)
logits [[-0.06171171  0.5890364   0.5841436  -1.7084059 ]]
Iteration 900 of 1000: loss=2.85 " + "l1=0" + "l2=2.85 f=-0.146 shape=(1, 9000, 1)
logits [[-0.09752561  0.5907072   0.56111944 -1.6374623 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=44 " + "l1=44" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.8047833 -3.2022424  3.5914009 -7.5743847]]
Iteration 100 of 1000: loss=7.99 " + "l1=1.24" + "l2=6.75 f=-0.178 shape=(1, 9000, 1)
logits [[ 0.3560332   0.52482116  0.7506307  -2.3425827 ]]
Iteration 200 of 1000: loss=4.72 " + "l1=0.0624" + "l2=4.66 f=-0.18 shape=(1, 9000, 1)
logits [[ 0.08003069  0.65030277  0.66165155 -2.1119864 ]]
Iteration 300 of 1000: loss=3.81 " + "l1=0.0698" + "l2=3.74 f=-0.156 shape=(1, 9000, 1)
logits [[ 0.04120275  0.6468185   0.65950674 -1.9698037 ]]
Iteration 400 of 1000: loss=3.33 " + "l1=0.0379" + "l2=3.3 f=-0.142 shape=(1, 9000, 1)
logits [[ 0.08337121  0.6362033   0.6431003  -1.931203  ]]
Iteration 500 of 1000: loss=3.03 " + "l1=0.0406" + "l2=2.99 f=-0.145 shape=(1, 9000, 1)
logits [[ 0.05898955  0.6227835   0.6301727  -1.8909599 ]]
Iteration 600 of 1000: loss=2.79 " + "l1=0.00578" + "l2=2.78 f=-0.145 shape=(1, 9000, 1)
logits [[ 0.029325    0.6161174   0.61716866 -1.843289  ]]
Iteration 700 of 1000: loss=2.65 " + "l1=0" + "l2=2.65 f=-0.143 shape=(1, 9000, 1)
logits [[ 0.01185481  0.6080184   0.59575695 -1.7873505 ]]
Iteration 800 of 1000: loss=2.51 " + "l1=0" + "l2=2.51 f=-0.141 shape=(1, 9000, 1)
logits [[ 0.00351747  0.58989835  0.58034444 -1.7378815 ]]
Iteration 900 of 1000: loss=2.37 " + "l1=0" + "l2=2.37 f=-0.136 shape=(1, 9000, 1)
logits [[ 0.00574215  0.5670183   0.5581236  -1.6759384 ]]
--- 307.9245300292969 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0121 " + "l1=0.0121" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.8047833 -3.2022424  3.5914009 -7.5743847]]
Iteration 100 of 1000: loss=0.0118 " + "l1=0.0115" + "l2=0.000263 f=-0.598 shape=(1, 9000, 1)
logits [[ 4.760934  -3.2217915  3.60822   -7.5373635]]
Iteration 200 of 1000: loss=0.0117 " + "l1=0.0115" + "l2=0.000244 f=-0.598 shape=(1, 9000, 1)
logits [[ 4.753986  -3.223107   3.6083498 -7.529609 ]]
Iteration 300 of 1000: loss=0.0116 " + "l1=0.0113" + "l2=0.000291 f=-0.598 shape=(1, 9000, 1)
logits [[ 4.74478   -3.2258687  3.609802  -7.5200596]]
Iteration 400 of 1000: loss=0.0116 " + "l1=0.0112" + "l2=0.000354 f=-0.598 shape=(1, 9000, 1)
logits [[ 4.7354    -3.2286434  3.6113927 -7.510254 ]]
Iteration 500 of 1000: loss=0.0116 " + "l1=0.0111" + "l2=0.000459 f=-0.598 shape=(1, 9000, 1)
logits [[ 4.7265525 -3.230726   3.6126883 -7.5009766]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.121 " + "l1=0.121" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.8047833 -3.2022424  3.5914009 -7.5743847]]
Iteration 100 of 1000: loss=0.0917 " + "l1=0.0771" + "l2=0.0146 f=-0.615 shape=(1, 9000, 1)
logits [[ 4.4961805 -3.3502998  3.7248292 -7.329735 ]]
Iteration 200 of 1000: loss=0.0795 " + "l1=0.0574" + "l2=0.0221 f=-0.618 shape=(1, 9000, 1)
logits [[ 4.335345  -3.3913054  3.7615387 -7.1790247]]
Iteration 300 of 1000: loss=0.0703 " + "l1=0.0429" + "l2=0.0275 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.21273   -3.4198384  3.783868  -7.0574865]]
Iteration 400 of 1000: loss=0.0624 " + "l1=0.0289" + "l2=0.0335 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.0951695 -3.4446359  3.806383  -6.941581 ]]
Iteration 500 of 1000: loss=0.0556 " + "l1=0.0175" + "l2=0.0381 f=-0.621 shape=(1, 9000, 1)
logits [[ 3.9894028 -3.4555082  3.8145635 -6.8338494]]
Iteration 600 of 1000: loss=0.0495 " + "l1=0.00766" + "l2=0.0418 f=-0.622 shape=(1, 9000, 1)
logits [[ 3.9024067 -3.4676347  3.8258352 -6.7474046]]
Iteration 700 of 1000: loss=0.0438 " + "l1=0.00108" + "l2=0.0427 f=-0.619 shape=(1, 9000, 1)
logits [[ 3.83414   -3.462155   3.8233879 -6.672718 ]]
Iteration 800 of 1000: loss=0.0392 " + "l1=0.000265" + "l2=0.0389 f=-0.614 shape=(1, 9000, 1)
logits [[ 3.8105454 -3.4395337  3.807891  -6.6367474]]
Iteration 900 of 1000: loss=0.035 " + "l1=0.000907" + "l2=0.0341 f=-0.606 shape=(1, 9000, 1)
logits [[ 3.81111   -3.4098263  3.8020356 -6.628387 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0667 " + "l1=0.0667" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.8047833 -3.2022424  3.5914009 -7.5743847]]
Iteration 100 of 1000: loss=0.0576 " + "l1=0.0528" + "l2=0.00475 f=-0.607 shape=(1, 9000, 1)
logits [[ 4.6312466 -3.2927706  3.6705859 -7.437244 ]]
Iteration 200 of 1000: loss=0.0542 " + "l1=0.0475" + "l2=0.00662 f=-0.609 shape=(1, 9000, 1)
logits [[ 4.553138  -3.3152804  3.6888704 -7.363687 ]]
Iteration 300 of 1000: loss=0.0514 " + "l1=0.0431" + "l2=0.00826 f=-0.61 shape=(1, 9000, 1)
logits [[ 4.4817243 -3.3267047  3.698233  -7.2916045]]
Iteration 400 of 1000: loss=0.049 " + "l1=0.0393" + "l2=0.00975 f=-0.61 shape=(1, 9000, 1)
logits [[ 4.4202375 -3.335796   3.7063613 -7.229151 ]]
Iteration 500 of 1000: loss=0.0471 " + "l1=0.036" + "l2=0.0111 f=-0.609 shape=(1, 9000, 1)
logits [[ 4.3687463 -3.3424575  3.7134101 -7.176547 ]]
Iteration 600 of 1000: loss=0.0455 " + "l1=0.033" + "l2=0.0125 f=-0.609 shape=(1, 9000, 1)
logits [[ 4.3205395 -3.3494735  3.72049   -7.1274233]]
Iteration 700 of 1000: loss=0.0441 " + "l1=0.0307" + "l2=0.0134 f=-0.608 shape=(1, 9000, 1)
logits [[ 4.2823744 -3.351622   3.7249131 -7.08777  ]]
Iteration 800 of 1000: loss=0.0428 " + "l1=0.0284" + "l2=0.0144 f=-0.608 shape=(1, 9000, 1)
logits [[ 4.2450075 -3.3538067  3.7283964 -7.050025 ]]
Iteration 900 of 1000: loss=0.0416 " + "l1=0.0263" + "l2=0.0153 f=-0.607 shape=(1, 9000, 1)
logits [[ 4.210551  -3.3551636  3.7325633 -7.016422 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.094 " + "l1=0.094" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.8047833 -3.2022424  3.5914009 -7.5743847]]
Iteration 100 of 1000: loss=0.076 " + "l1=0.0668" + "l2=0.00922 f=-0.611 shape=(1, 9000, 1)
logits [[ 4.563404  -3.3261077  3.7015085 -7.383376 ]]
Iteration 200 of 1000: loss=0.069 " + "l1=0.0562" + "l2=0.0129 f=-0.613 shape=(1, 9000, 1)
logits [[ 4.4450765 -3.347867   3.720467  -7.270517 ]]
Iteration 300 of 1000: loss=0.0634 " + "l1=0.0469" + "l2=0.0165 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.3458986 -3.3708997  3.7405581 -7.1731133]]
Iteration 400 of 1000: loss=0.0588 " + "l1=0.0396" + "l2=0.0192 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.264938  -3.385791   3.7539089 -7.0908446]]
Iteration 500 of 1000: loss=0.0552 " + "l1=0.0331" + "l2=0.0221 f=-0.615 shape=(1, 9000, 1)
logits [[ 4.1914635 -3.3990576  3.7645535 -7.015446 ]]
Iteration 600 of 1000: loss=0.0516 " + "l1=0.0266" + "l2=0.025 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.1175656 -3.4085553  3.7740712 -6.94016  ]]
Iteration 700 of 1000: loss=0.0484 " + "l1=0.021" + "l2=0.0274 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.0510063 -3.4133751  3.7799168 -6.8736157]]
Iteration 800 of 1000: loss=0.0454 " + "l1=0.0159" + "l2=0.0295 f=-0.613 shape=(1, 9000, 1)
logits [[ 3.986825  -3.4135897  3.781179  -6.8057942]]
Iteration 900 of 1000: loss=0.0421 " + "l1=0.0101" + "l2=0.032 f=-0.613 shape=(1, 9000, 1)
logits [[ 3.923107  -3.422421   3.7921526 -6.745862 ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.108 " + "l1=0.108" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.8047833 -3.2022424  3.5914009 -7.5743847]]
Iteration 100 of 1000: loss=0.0842 " + "l1=0.0725" + "l2=0.0117 f=-0.613 shape=(1, 9000, 1)
logits [[ 4.5294604 -3.3371637  3.7124934 -7.356092 ]]
Iteration 200 of 1000: loss=0.0748 " + "l1=0.0576" + "l2=0.0171 f=-0.616 shape=(1, 9000, 1)
logits [[ 4.388336  -3.3683069  3.7390547 -7.2222037]]
Iteration 300 of 1000: loss=0.0673 " + "l1=0.0455" + "l2=0.0219 f=-0.618 shape=(1, 9000, 1)
logits [[ 4.276531  -3.3978817  3.763934  -7.1136365]]
Iteration 400 of 1000: loss=0.0615 " + "l1=0.0357" + "l2=0.0258 f=-0.618 shape=(1, 9000, 1)
logits [[ 4.1808243 -3.414832   3.7783372 -7.015762 ]]
Iteration 500 of 1000: loss=0.0561 " + "l1=0.0261" + "l2=0.03 f=-0.618 shape=(1, 9000, 1)
logits [[ 4.086797  -3.4316766  3.7932744 -6.9211965]]
Iteration 600 of 1000: loss=0.0514 " + "l1=0.0183" + "l2=0.0331 f=-0.618 shape=(1, 9000, 1)
logits [[ 4.0037613 -3.436675   3.7976117 -6.8357377]]
Iteration 700 of 1000: loss=0.0469 " + "l1=0.0107" + "l2=0.0362 f=-0.618 shape=(1, 9000, 1)
logits [[ 3.9274971 -3.4454327  3.806935  -6.7606564]]
Iteration 800 of 1000: loss=0.0422 " + "l1=0.00354" + "l2=0.0387 f=-0.617 shape=(1, 9000, 1)
logits [[ 3.854913  -3.4501426  3.8150787 -6.6891537]]
Iteration 900 of 1000: loss=0.0373 " + "l1=0.000278" + "l2=0.0371 f=-0.611 shape=(1, 9000, 1)
logits [[ 3.813512  -3.4317026  3.8103843 -6.6376615]]
--- 280.3486223220825 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.124 " + "l1=0.124" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.8047833 -3.2022424  3.5914009 -7.5743847]]
Iteration 100 of 1000: loss=0.122 " + "l1=0.121" + "l2=0.000715 f=-0.589 shape=(1, 9000, 1)
logits [[ 4.7034445 -3.1731386  3.556718  -7.4440923]]
Iteration 200 of 1000: loss=0.122 " + "l1=0.121" + "l2=0.000906 f=-0.587 shape=(1, 9000, 1)
logits [[ 4.668458  -3.1610157  3.542723  -7.3981605]]
Iteration 300 of 1000: loss=0.121 " + "l1=0.12" + "l2=0.0012 f=-0.584 shape=(1, 9000, 1)
logits [[ 4.6306825 -3.1485732  3.527608  -7.3473425]]
Iteration 400 of 1000: loss=0.12 " + "l1=0.119" + "l2=0.00156 f=-0.582 shape=(1, 9000, 1)
logits [[ 4.593446  -3.1365464  3.512351  -7.2962346]]
Iteration 500 of 1000: loss=0.12 " + "l1=0.118" + "l2=0.00191 f=-0.579 shape=(1, 9000, 1)
logits [[ 4.559019  -3.124819   3.4972057 -7.247737 ]]
Iteration 600 of 1000: loss=0.12 " + "l1=0.117" + "l2=0.00238 f=-0.576 shape=(1, 9000, 1)
logits [[ 4.526767  -3.112683   3.4819725 -7.2011185]]
Iteration 700 of 1000: loss=0.119 " + "l1=0.117" + "l2=0.00275 f=-0.573 shape=(1, 9000, 1)
logits [[ 4.4976892 -3.1004698  3.4675329 -7.158564 ]]
Iteration 800 of 1000: loss=0.119 " + "l1=0.116" + "l2=0.0031 f=-0.571 shape=(1, 9000, 1)
logits [[ 4.4727864 -3.089299   3.4541585 -7.121702 ]]
Iteration 900 of 1000: loss=0.119 " + "l1=0.115" + "l2=0.0035 f=-0.569 shape=(1, 9000, 1)
logits [[ 4.450183  -3.080301   3.4428759 -7.087885 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.24 " + "l1=1.24" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.8047833 -3.2022424  3.5914009 -7.5743847]]
Iteration 100 of 1000: loss=1.09 " + "l1=1.03" + "l2=0.0596 f=-0.544 shape=(1, 9000, 1)
logits [[ 3.9116879 -2.8870208  3.2368252 -6.43796  ]]
Iteration 200 of 1000: loss=1.01 " + "l1=0.911" + "l2=0.0964 f=-0.515 shape=(1, 9000, 1)
logits [[ 3.377311  -2.7018335  2.997238  -5.7323875]]
Iteration 300 of 1000: loss=0.93 " + "l1=0.8" + "l2=0.129 f=-0.495 shape=(1, 9000, 1)
logits [[ 2.8891094 -2.555332   2.7997854 -5.1140456]]
Iteration 400 of 1000: loss=0.872 " + "l1=0.729" + "l2=0.143 f=-0.468 shape=(1, 9000, 1)
logits [[ 2.5975952 -2.3755558  2.5970242 -4.6926627]]
Iteration 500 of 1000: loss=0.836 " + "l1=0.686" + "l2=0.15 f=-0.444 shape=(1, 9000, 1)
logits [[ 2.4433982 -2.2515576  2.4437933 -4.4127183]]
Iteration 600 of 1000: loss=0.807 " + "l1=0.647" + "l2=0.16 f=-0.428 shape=(1, 9000, 1)
logits [[ 2.3147373 -2.185278   2.3138182 -4.1563334]]
Iteration 700 of 1000: loss=0.784 " + "l1=0.615" + "l2=0.169 f=-0.417 shape=(1, 9000, 1)
logits [[ 2.199236  -2.1263926  2.20572   -3.9447577]]
Iteration 800 of 1000: loss=0.765 " + "l1=0.588" + "l2=0.177 f=-0.408 shape=(1, 9000, 1)
logits [[ 2.0858939 -2.0827384  2.1211908 -3.7551708]]
Iteration 900 of 1000: loss=0.748 " + "l1=0.564" + "l2=0.184 f=-0.401 shape=(1, 9000, 1)
logits [[ 1.9857891 -2.0421042  2.0473297 -3.5961547]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.4 " + "l1=12.4" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.8047833 -3.2022424  3.5914009 -7.5743847]]
Iteration 100 of 1000: loss=5.14 " + "l1=2.67" + "l2=2.47 f=-0.242 shape=(1, 9000, 1)
logits [[ 0.65119576 -1.493493    1.274513   -1.399826  ]]
Iteration 200 of 1000: loss=2.79 " + "l1=0.113" + "l2=2.67 f=-0.136 shape=(1, 9000, 1)
logits [[-0.32602808 -1.2690773   0.582366    0.46901706]]
Iteration 300 of 1000: loss=1.91 " + "l1=0" + "l2=1.91 f=-0.0811 shape=(1, 9000, 1)
logits [[-0.20112889 -1.2542318   0.56268245  0.5681545 ]]
Iteration 400 of 1000: loss=1.58 " + "l1=0.00132" + "l2=1.58 f=-0.0621 shape=(1, 9000, 1)
logits [[-0.14573288 -1.2249802   0.5617321   0.5604097 ]]
Iteration 500 of 1000: loss=1.39 " + "l1=0.0137" + "l2=1.38 f=-0.0535 shape=(1, 9000, 1)
logits [[-0.10006233 -1.2192593   0.5594894   0.5458289 ]]
Iteration 600 of 1000: loss=1.23 " + "l1=0.0026" + "l2=1.23 f=-0.0486 shape=(1, 9000, 1)
logits [[-0.09289042 -1.206832    0.553986    0.55138296]]
Iteration 700 of 1000: loss=1.12 " + "l1=0" + "l2=1.12 f=-0.0463 shape=(1, 9000, 1)
logits [[-0.0664826 -1.2143953  0.5418471  0.5537584]]
Iteration 800 of 1000: loss=1.03 " + "l1=0.00502" + "l2=1.02 f=-0.0451 shape=(1, 9000, 1)
logits [[-0.03213138 -1.2291677   0.54299116  0.5379714 ]]
Iteration 900 of 1000: loss=0.949 " + "l1=0.00284" + "l2=0.946 f=-0.0523 shape=(1, 9000, 1)
logits [[-0.03901756 -1.2508602   0.54173356  0.53889585]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.81 " + "l1=6.81" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.8047833 -3.2022424  3.5914009 -7.5743847]]
Iteration 100 of 1000: loss=3.81 " + "l1=2.83" + "l2=0.982 f=-0.344 shape=(1, 9000, 1)
logits [[ 1.8084869 -1.8245635  1.8882345 -3.2482414]]
Iteration 200 of 1000: loss=2.59 " + "l1=1.29" + "l2=1.3 f=-0.244 shape=(1, 9000, 1)
logits [[ 0.5130075 -1.5117781  1.1859739 -1.1642799]]
Iteration 300 of 1000: loss=1.9 " + "l1=0.526" + "l2=1.38 f=-0.181 shape=(1, 9000, 1)
logits [[-0.03361116 -1.3780951   0.822543   -0.13434479]]
Iteration 400 of 1000: loss=1.45 " + "l1=0.0504" + "l2=1.4 f=-0.129 shape=(1, 9000, 1)
logits [[-0.2104225  -1.3289002   0.5583454   0.46673936]]
Iteration 500 of 1000: loss=1.13 " + "l1=0" + "l2=1.13 f=-0.11 shape=(1, 9000, 1)
logits [[-0.09827715 -1.3928025   0.52418983  0.52665   ]]
Iteration 600 of 1000: loss=0.959 " + "l1=0" + "l2=0.959 f=-0.0957 shape=(1, 9000, 1)
logits [[-0.01431046 -1.4349934   0.5312911   0.5351727 ]]
Iteration 700 of 1000: loss=0.861 " + "l1=0.00417" + "l2=0.857 f=-0.0889 shape=(1, 9000, 1)
logits [[ 0.02406103 -1.4644208   0.5461194   0.5385291 ]]
Iteration 800 of 1000: loss=0.798 " + "l1=0" + "l2=0.798 f=-0.0861 shape=(1, 9000, 1)
logits [[ 0.02502915 -1.4803619   0.54936767  0.561419  ]]
Iteration 900 of 1000: loss=0.748 " + "l1=0.00444" + "l2=0.744 f=-0.0864 shape=(1, 9000, 1)
logits [[ 0.03475558 -1.501114    0.56446373  0.55638236]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.02 " + "l1=4.02" + "l2=0 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.8047833 -3.2022424  3.5914009 -7.5743847]]
Iteration 100 of 1000: loss=2.68 " + "l1=2.2" + "l2=0.482 f=-0.419 shape=(1, 9000, 1)
logits [[ 2.4161246 -2.1563988  2.4125924 -4.3463907]]
Iteration 200 of 1000: loss=2.15 " + "l1=1.53" + "l2=0.617 f=-0.332 shape=(1, 9000, 1)
logits [[ 1.6199373 -1.8104395  1.7918196 -2.9299638]]
Iteration 300 of 1000: loss=1.77 " + "l1=1.01" + "l2=0.767 f=-0.282 shape=(1, 9000, 1)
logits [[ 0.8160021 -1.6259536  1.3923497 -1.7105358]]
Iteration 400 of 1000: loss=1.49 " + "l1=0.651" + "l2=0.837 f=-0.243 shape=(1, 9000, 1)
logits [[ 0.30227998 -1.4879124   1.1089855  -0.89420784]]
Iteration 500 of 1000: loss=1.29 " + "l1=0.463" + "l2=0.829 f=-0.216 shape=(1, 9000, 1)
logits [[ 0.10410222 -1.4364387   0.9454699  -0.47780007]]
Iteration 600 of 1000: loss=1.08 " + "l1=0.243" + "l2=0.839 f=-0.189 shape=(1, 9000, 1)
logits [[-0.07019817 -1.4325595   0.74650466 -0.00146475]]
Iteration 700 of 1000: loss=0.863 " + "l1=0.0041" + "l2=0.859 f=-0.153 shape=(1, 9000, 1)
logits [[-0.2564243  -1.3882111   0.5219965   0.50937486]]
Iteration 800 of 1000: loss=0.747 " + "l1=0" + "l2=0.747 f=-0.143 shape=(1, 9000, 1)
logits [[-0.20911263 -1.4378077   0.53531414  0.5398054 ]]
Iteration 900 of 1000: loss=0.686 " + "l1=0.00208" + "l2=0.684 f=-0.135 shape=(1, 9000, 1)
logits [[-0.17297181 -1.4656914   0.5519937   0.54560053]]
--- 307.9636754989624 seconds ---
Adv result:3
Loading record A07122
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.039 " + "l1=0.039" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.9735258 -0.9247484  1.7024258 -5.524555 ]]
Iteration 100 of 1000: loss=0.0376 " + "l1=0.0369" + "l2=0.000771 f=-0.45 shape=(1, 9000, 1)
logits [[ 2.8549962 -0.8315747  1.6654263 -5.48699  ]]
Iteration 200 of 1000: loss=0.0372 " + "l1=0.0362" + "l2=0.00102 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.8170705  -0.80153424  1.6533722  -5.4739685 ]]
Iteration 300 of 1000: loss=0.0369 " + "l1=0.0355" + "l2=0.00136 f=-0.453 shape=(1, 9000, 1)
logits [[ 2.778739  -0.7724245  1.6426171 -5.4615297]]
Iteration 400 of 1000: loss=0.0366 " + "l1=0.0349" + "l2=0.00167 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.7444499 -0.7480916  1.6346253 -5.4502077]]
Iteration 500 of 1000: loss=0.0364 " + "l1=0.0345" + "l2=0.00197 f=-0.456 shape=(1, 9000, 1)
logits [[ 2.71838    -0.72969407  1.6281625  -5.440978  ]]
Iteration 600 of 1000: loss=0.0363 " + "l1=0.0341" + "l2=0.00217 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.6958683  -0.71408236  1.6227672  -5.4328055 ]]
Iteration 700 of 1000: loss=0.0362 " + "l1=0.0338" + "l2=0.00243 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.6760788  -0.69892526  1.6168342  -5.426801  ]]
Iteration 800 of 1000: loss=0.0361 " + "l1=0.0334" + "l2=0.00265 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.6568708 -0.6852209  1.6120536 -5.420935 ]]
Iteration 900 of 1000: loss=0.0361 " + "l1=0.0331" + "l2=0.00294 f=-0.46 shape=(1, 9000, 1)
logits [[ 2.6410804 -0.673299   1.6077713 -5.416151 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.39 " + "l1=0.39" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.9735258 -0.9247484  1.7024258 -5.524555 ]]
Iteration 100 of 1000: loss=0.21 " + "l1=0.115" + "l2=0.0944 f=-0.576 shape=(1, 9000, 1)
logits [[ 1.3603045   0.20788409  1.3587109  -5.2290587 ]]
Iteration 200 of 1000: loss=0.162 " + "l1=0.0832" + "l2=0.0792 f=-0.588 shape=(1, 9000, 1)
logits [[ 1.230176    0.40244913  1.2340232  -5.218657  ]]
Iteration 300 of 1000: loss=0.134 " + "l1=0.055" + "l2=0.0787 f=-0.598 shape=(1, 9000, 1)
logits [[ 1.0855017  0.5615922  1.1111197 -5.150486 ]]
Iteration 400 of 1000: loss=0.121 " + "l1=0.0376" + "l2=0.0836 f=-0.61 shape=(1, 9000, 1)
logits [[ 0.93162763  0.67316467  1.0487928  -5.0918903 ]]
Iteration 500 of 1000: loss=0.112 " + "l1=0.0231" + "l2=0.0894 f=-0.622 shape=(1, 9000, 1)
logits [[ 0.7846872  0.7736328  1.0047934 -5.052925 ]]
Iteration 600 of 1000: loss=0.105 " + "l1=0.0112" + "l2=0.0936 f=-0.637 shape=(1, 9000, 1)
logits [[ 0.63695973  0.859592    0.9715825  -5.0161757 ]]
Iteration 700 of 1000: loss=0.099 " + "l1=0.000788" + "l2=0.0982 f=-0.65 shape=(1, 9000, 1)
logits [[ 0.4944894  0.9374539  0.9453344 -4.979126 ]]
Iteration 800 of 1000: loss=0.0945 " + "l1=0.000905" + "l2=0.0936 f=-0.649 shape=(1, 9000, 1)
logits [[ 0.47531864  0.93336093  0.9424122  -4.946303  ]]
Iteration 900 of 1000: loss=0.091 " + "l1=0.000417" + "l2=0.0906 f=-0.649 shape=(1, 9000, 1)
logits [[ 0.4484998   0.93580604  0.93997645 -4.922175  ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.214 " + "l1=0.214" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.9735258 -0.9247484  1.7024258 -5.524555 ]]
Iteration 100 of 1000: loss=0.168 " + "l1=0.142" + "l2=0.0264 f=-0.496 shape=(1, 9000, 1)
logits [[ 2.2086856  -0.37192205  1.5207429  -5.341669  ]]
Iteration 200 of 1000: loss=0.138 " + "l1=0.0894" + "l2=0.0485 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.6351106   0.00992059  1.4185033  -5.2412343 ]]
Iteration 300 of 1000: loss=0.118 " + "l1=0.0617" + "l2=0.0559 f=-0.571 shape=(1, 9000, 1)
logits [[ 1.3440769   0.22174537  1.3433477  -5.193402  ]]
Iteration 400 of 1000: loss=0.107 " + "l1=0.0543" + "l2=0.0526 f=-0.573 shape=(1, 9000, 1)
logits [[ 1.2854161   0.29812685  1.284094   -5.158469  ]]
Iteration 500 of 1000: loss=0.0994 " + "l1=0.0467" + "l2=0.0526 f=-0.575 shape=(1, 9000, 1)
logits [[ 1.221992   0.3747809  1.2243699 -5.1228504]]
Iteration 600 of 1000: loss=0.0954 " + "l1=0.0426" + "l2=0.0527 f=-0.577 shape=(1, 9000, 1)
logits [[ 1.1890495   0.41662338  1.1913784  -5.1054153 ]]
Iteration 700 of 1000: loss=0.0929 " + "l1=0.0397" + "l2=0.0531 f=-0.579 shape=(1, 9000, 1)
logits [[ 1.1554052   0.44972974  1.1724167  -5.093342  ]]
Iteration 800 of 1000: loss=0.09 " + "l1=0.0378" + "l2=0.0522 f=-0.577 shape=(1, 9000, 1)
logits [[ 1.1545656   0.46736324  1.154864   -5.0865865 ]]
Iteration 900 of 1000: loss=0.0874 " + "l1=0.0357" + "l2=0.0517 f=-0.577 shape=(1, 9000, 1)
logits [[ 1.1341856   0.49172872  1.1406063  -5.0734463 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.302 " + "l1=0.302" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.9735258 -0.9247484  1.7024258 -5.524555 ]]
Iteration 100 of 1000: loss=0.2 " + "l1=0.139" + "l2=0.0607 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.7311628  -0.06038647  1.4383612  -5.2538605 ]]
Iteration 200 of 1000: loss=0.149 " + "l1=0.0808" + "l2=0.0687 f=-0.577 shape=(1, 9000, 1)
logits [[ 1.321785   0.2793032  1.3134799 -5.222809 ]]
Iteration 300 of 1000: loss=0.128 " + "l1=0.0619" + "l2=0.0656 f=-0.585 shape=(1, 9000, 1)
logits [[ 1.2097924   0.41307777  1.2120907  -5.1731954 ]]
Iteration 400 of 1000: loss=0.115 " + "l1=0.0496" + "l2=0.0657 f=-0.589 shape=(1, 9000, 1)
logits [[ 1.1279869  0.5012886  1.1416767 -5.127367 ]]
Iteration 500 of 1000: loss=0.109 " + "l1=0.0433" + "l2=0.0658 f=-0.588 shape=(1, 9000, 1)
logits [[ 1.1028198  0.5455296  1.1037471 -5.1042914]]
Iteration 600 of 1000: loss=0.105 " + "l1=0.0391" + "l2=0.0657 f=-0.588 shape=(1, 9000, 1)
logits [[ 1.070155    0.57678133  1.081408   -5.080971  ]]
Iteration 700 of 1000: loss=0.1 " + "l1=0.0329" + "l2=0.0675 f=-0.593 shape=(1, 9000, 1)
logits [[ 0.9957962  0.6299909  1.0539229 -5.053531 ]]
Iteration 800 of 1000: loss=0.0965 " + "l1=0.0278" + "l2=0.0687 f=-0.599 shape=(1, 9000, 1)
logits [[ 0.9204176  0.6756025  1.0346875 -5.025601 ]]
Iteration 900 of 1000: loss=0.0939 " + "l1=0.0254" + "l2=0.0685 f=-0.6 shape=(1, 9000, 1)
logits [[ 0.88400024  0.6985801   1.025998   -5.0091906 ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.346 " + "l1=0.346" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.9735258 -0.9247484  1.7024258 -5.524555 ]]
Iteration 100 of 1000: loss=0.206 " + "l1=0.124" + "l2=0.0821 f=-0.56 shape=(1, 9000, 1)
logits [[ 1.497947    0.09808522  1.3951303  -5.23097   ]]
Iteration 200 of 1000: loss=0.156 " + "l1=0.0824" + "l2=0.0737 f=-0.583 shape=(1, 9000, 1)
logits [[ 1.2690487  0.3448273  1.273481  -5.219514 ]]
Iteration 300 of 1000: loss=0.131 " + "l1=0.0599" + "l2=0.0711 f=-0.591 shape=(1, 9000, 1)
logits [[ 1.1507616  0.4874193  1.1626453 -5.163721 ]]
Iteration 400 of 1000: loss=0.119 " + "l1=0.0479" + "l2=0.071 f=-0.593 shape=(1, 9000, 1)
logits [[ 1.0911243  0.5582987  1.0982336 -5.1181645]]
Iteration 500 of 1000: loss=0.113 " + "l1=0.039" + "l2=0.0737 f=-0.598 shape=(1, 9000, 1)
logits [[ 1.0054199   0.62302256  1.0623002  -5.0825324 ]]
Iteration 600 of 1000: loss=0.106 " + "l1=0.0277" + "l2=0.0785 f=-0.609 shape=(1, 9000, 1)
logits [[ 0.87803483  0.7112591   1.0235364  -5.0483475 ]]
Iteration 700 of 1000: loss=0.101 " + "l1=0.0203" + "l2=0.0809 f=-0.616 shape=(1, 9000, 1)
logits [[ 0.78268725  0.77136785  0.9995466  -5.0182724 ]]
Iteration 800 of 1000: loss=0.0974 " + "l1=0.0149" + "l2=0.0826 f=-0.623 shape=(1, 9000, 1)
logits [[ 0.7011168   0.81697184  0.9843555  -4.995153  ]]
Iteration 900 of 1000: loss=0.0939 " + "l1=0.0104" + "l2=0.0835 f=-0.629 shape=(1, 9000, 1)
logits [[ 0.63435316  0.8526919   0.97006327 -4.9729204 ]]
--- 302.8609480857849 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0127 " + "l1=0.0127" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.9735258 -0.9247484  1.7024258 -5.524555 ]]
Iteration 100 of 1000: loss=0.0123 " + "l1=0.012" + "l2=0.000283 f=-0.445 shape=(1, 9000, 1)
logits [[ 2.9102724 -0.9035437  1.706962  -5.4932647]]
Iteration 200 of 1000: loss=0.0122 " + "l1=0.0119" + "l2=0.000314 f=-0.445 shape=(1, 9000, 1)
logits [[ 2.8961954 -0.8976142  1.7077979 -5.487501 ]]
Iteration 300 of 1000: loss=0.0121 " + "l1=0.0117" + "l2=0.000374 f=-0.446 shape=(1, 9000, 1)
logits [[ 2.8814304 -0.8919992  1.7084881 -5.480863 ]]
Iteration 400 of 1000: loss=0.0121 " + "l1=0.0116" + "l2=0.000468 f=-0.446 shape=(1, 9000, 1)
logits [[ 2.86805   -0.8873714  1.7092521 -5.474506 ]]
Iteration 500 of 1000: loss=0.012 " + "l1=0.0115" + "l2=0.000578 f=-0.447 shape=(1, 9000, 1)
logits [[ 2.855452  -0.8830344  1.710052  -5.468537 ]]
Iteration 600 of 1000: loss=0.012 " + "l1=0.0113" + "l2=0.000706 f=-0.447 shape=(1, 9000, 1)
logits [[ 2.8427637 -0.8780105  1.7106775 -5.4631977]]
Iteration 700 of 1000: loss=0.0121 " + "l1=0.0112" + "l2=0.000876 f=-0.447 shape=(1, 9000, 1)
logits [[ 2.832503  -0.8744388  1.7114371 -5.4587407]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.127 " + "l1=0.127" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.9735258 -0.9247484  1.7024258 -5.524555 ]]
Iteration 100 of 1000: loss=0.0808 " + "l1=0.0527" + "l2=0.0281 f=-0.486 shape=(1, 9000, 1)
logits [[ 2.2778609  -0.67509174  1.7509044  -5.2965775 ]]
Iteration 200 of 1000: loss=0.045 " + "l1=0" + "l2=0.045 f=-0.528 shape=(1, 9000, 1)
logits [[ 1.8095529 -0.5258326  1.8147222 -5.211554 ]]
Iteration 300 of 1000: loss=0.035 " + "l1=0.000909" + "l2=0.0341 f=-0.525 shape=(1, 9000, 1)
logits [[ 1.8232788 -0.53547    1.8141891 -5.2032375]]
Iteration 400 of 1000: loss=0.0308 " + "l1=0" + "l2=0.0308 f=-0.526 shape=(1, 9000, 1)
logits [[ 1.8129817 -0.5396322  1.8162693 -5.1934934]]
Iteration 500 of 1000: loss=0.0286 " + "l1=0.000288" + "l2=0.0283 f=-0.526 shape=(1, 9000, 1)
logits [[ 1.8239546 -0.5548611  1.8210738 -5.192327 ]]
Iteration 600 of 1000: loss=0.0272 " + "l1=0" + "l2=0.0272 f=-0.527 shape=(1, 9000, 1)
logits [[ 1.8194205  -0.56089157  1.8243413  -5.18905   ]]
Iteration 700 of 1000: loss=0.0261 " + "l1=0" + "l2=0.0261 f=-0.527 shape=(1, 9000, 1)
logits [[ 1.8202072  -0.56578165  1.8261163  -5.1877565 ]]
Iteration 800 of 1000: loss=0.0252 " + "l1=0" + "l2=0.0252 f=-0.526 shape=(1, 9000, 1)
logits [[ 1.8250283 -0.5701188  1.8279611 -5.1874433]]
Iteration 900 of 1000: loss=0.0253 " + "l1=0.00123" + "l2=0.0241 f=-0.525 shape=(1, 9000, 1)
logits [[ 1.8412563 -0.5781353  1.8289416 -5.190816 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0699 " + "l1=0.0699" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.9735258 -0.9247484  1.7024258 -5.524555 ]]
Iteration 100 of 1000: loss=0.0582 " + "l1=0.0518" + "l2=0.00638 f=-0.454 shape=(1, 9000, 1)
logits [[ 2.661739   -0.80969113  1.7194154  -5.388038  ]]
Iteration 200 of 1000: loss=0.0517 " + "l1=0.0412" + "l2=0.0105 f=-0.471 shape=(1, 9000, 1)
logits [[ 2.473428   -0.73901534  1.7245162  -5.3415318 ]]
Iteration 300 of 1000: loss=0.0434 " + "l1=0.0258" + "l2=0.0176 f=-0.492 shape=(1, 9000, 1)
logits [[ 2.231726   -0.65194064  1.763281   -5.309198  ]]
Iteration 400 of 1000: loss=0.0365 " + "l1=0.0129" + "l2=0.0236 f=-0.508 shape=(1, 9000, 1)
logits [[ 2.036277   -0.60426754  1.8022575  -5.2666187 ]]
Iteration 500 of 1000: loss=0.0322 " + "l1=0.00504" + "l2=0.0272 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.9102104  -0.57727224  1.8186032  -5.2253604 ]]
Iteration 600 of 1000: loss=0.0289 " + "l1=9.78e-05" + "l2=0.0288 f=-0.525 shape=(1, 9000, 1)
logits [[ 1.8275281  -0.56049716  1.8257507  -5.1938806 ]]
Iteration 700 of 1000: loss=0.0271 " + "l1=0.000244" + "l2=0.0269 f=-0.525 shape=(1, 9000, 1)
logits [[ 1.8299067  -0.56858176  1.82547    -5.1876297 ]]
Iteration 800 of 1000: loss=0.0262 " + "l1=0.000482" + "l2=0.0258 f=-0.525 shape=(1, 9000, 1)
logits [[ 1.8343132  -0.57209164  1.8255416  -5.1888146 ]]
Iteration 900 of 1000: loss=0.0255 " + "l1=0" + "l2=0.0255 f=-0.526 shape=(1, 9000, 1)
logits [[ 1.8234354 -0.5721806  1.8281435 -5.1842446]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0413 " + "l1=0.0413" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.9735258 -0.9247484  1.7024258 -5.524555 ]]
Iteration 100 of 1000: loss=0.0373 " + "l1=0.0351" + "l2=0.00222 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.7928226  -0.86072415  1.7136858  -5.4385996 ]]
Iteration 200 of 1000: loss=0.0356 " + "l1=0.0325" + "l2=0.00309 f=-0.452 shape=(1, 9000, 1)
logits [[ 2.714695  -0.8267175  1.7151877 -5.411767 ]]
Iteration 300 of 1000: loss=0.0341 " + "l1=0.0299" + "l2=0.00424 f=-0.457 shape=(1, 9000, 1)
logits [[ 2.6378968 -0.797236   1.718554  -5.3865523]]
Iteration 400 of 1000: loss=0.0328 " + "l1=0.0274" + "l2=0.00542 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.564119   -0.77213675  1.7207435  -5.3653793 ]]
Iteration 500 of 1000: loss=0.0317 " + "l1=0.0249" + "l2=0.00687 f=-0.471 shape=(1, 9000, 1)
logits [[ 2.4866903 -0.7428197  1.7218432 -5.3489895]]
Iteration 600 of 1000: loss=0.0303 " + "l1=0.0213" + "l2=0.00906 f=-0.479 shape=(1, 9000, 1)
logits [[ 2.3936005 -0.7099663  1.7394453 -5.3387084]]
Iteration 700 of 1000: loss=0.0292 " + "l1=0.0185" + "l2=0.0106 f=-0.485 shape=(1, 9000, 1)
logits [[ 2.3220823 -0.687197   1.7521749 -5.326087 ]]
Iteration 800 of 1000: loss=0.0283 " + "l1=0.0164" + "l2=0.0119 f=-0.49 shape=(1, 9000, 1)
logits [[ 2.2664301 -0.6724569  1.7612674 -5.3147492]]
Iteration 900 of 1000: loss=0.0275 " + "l1=0.0142" + "l2=0.0133 f=-0.495 shape=(1, 9000, 1)
logits [[ 2.2117805 -0.6620035  1.774824  -5.3030057]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0556 " + "l1=0.0556" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.9735258 -0.9247484  1.7024258 -5.524555 ]]
Iteration 100 of 1000: loss=0.0483 " + "l1=0.0443" + "l2=0.00399 f=-0.451 shape=(1, 9000, 1)
logits [[ 2.7279482  -0.83478683  1.7161281  -5.4133015 ]]
Iteration 200 of 1000: loss=0.0448 " + "l1=0.0388" + "l2=0.00594 f=-0.459 shape=(1, 9000, 1)
logits [[ 2.608162  -0.7886267  1.7203101 -5.37449  ]]
Iteration 300 of 1000: loss=0.0412 " + "l1=0.0323" + "l2=0.00894 f=-0.472 shape=(1, 9000, 1)
logits [[ 2.464609   -0.73404896  1.7261165  -5.3434405 ]]
Iteration 400 of 1000: loss=0.0372 " + "l1=0.024" + "l2=0.0132 f=-0.486 shape=(1, 9000, 1)
logits [[ 2.3013105  -0.67684513  1.7530879  -5.3203163 ]]
Iteration 500 of 1000: loss=0.0338 " + "l1=0.0167" + "l2=0.0171 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.163584   -0.63917226  1.7818232  -5.296418  ]]
Iteration 600 of 1000: loss=0.0313 " + "l1=0.0116" + "l2=0.0197 f=-0.505 shape=(1, 9000, 1)
logits [[ 2.0671048 -0.6182546  1.8020879 -5.272504 ]]
Iteration 700 of 1000: loss=0.0294 " + "l1=0.00789" + "l2=0.0215 f=-0.512 shape=(1, 9000, 1)
logits [[ 1.9941294 -0.6045026  1.8136865 -5.251388 ]]
Iteration 800 of 1000: loss=0.0279 " + "l1=0.0048" + "l2=0.023 f=-0.517 shape=(1, 9000, 1)
logits [[ 1.9315959 -0.5933203  1.8217738 -5.2282457]]
Iteration 900 of 1000: loss=0.0266 " + "l1=0.0019" + "l2=0.0247 f=-0.522 shape=(1, 9000, 1)
logits [[ 1.8698356  -0.57944036  1.8263973  -5.2045918 ]]
--- 284.20797514915466 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.085 " + "l1=0.085" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.9735258 -0.9247484  1.7024258 -5.524555 ]]
Iteration 100 of 1000: loss=0.0838 " + "l1=0.0831" + "l2=0.000659 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.867446   -0.87858486  1.6829908  -5.445538  ]]
Iteration 200 of 1000: loss=0.0834 " + "l1=0.0826" + "l2=0.000823 f=-0.444 shape=(1, 9000, 1)
logits [[ 2.8344004 -0.8623529  1.6753029 -5.4213877]]
Iteration 300 of 1000: loss=0.083 " + "l1=0.082" + "l2=0.00106 f=-0.444 shape=(1, 9000, 1)
logits [[ 2.8006492 -0.8467095  1.6672835 -5.3966465]]
Iteration 400 of 1000: loss=0.0828 " + "l1=0.0814" + "l2=0.00139 f=-0.444 shape=(1, 9000, 1)
logits [[ 2.7703145 -0.8336347  1.6605229 -5.373041 ]]
Iteration 500 of 1000: loss=0.0826 " + "l1=0.081" + "l2=0.00161 f=-0.444 shape=(1, 9000, 1)
logits [[ 2.7447195 -0.8232801  1.6547644 -5.3524384]]
Iteration 600 of 1000: loss=0.0825 " + "l1=0.0806" + "l2=0.00187 f=-0.444 shape=(1, 9000, 1)
logits [[ 2.7247562  -0.81628424  1.6504388  -5.3349066 ]]
Iteration 700 of 1000: loss=0.0824 " + "l1=0.0803" + "l2=0.00211 f=-0.444 shape=(1, 9000, 1)
logits [[ 2.7065256 -0.8097818  1.6465968 -5.31885  ]]
Iteration 800 of 1000: loss=0.0823 " + "l1=0.0799" + "l2=0.0024 f=-0.444 shape=(1, 9000, 1)
logits [[ 2.6895206 -0.8027252  1.6428277 -5.3051558]]
Iteration 900 of 1000: loss=0.0822 " + "l1=0.0797" + "l2=0.00249 f=-0.444 shape=(1, 9000, 1)
logits [[ 2.6749482 -0.7971943  1.6398243 -5.2928667]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.85 " + "l1=0.85" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.9735258 -0.9247484  1.7024258 -5.524555 ]]
Iteration 100 of 1000: loss=0.722 " + "l1=0.654" + "l2=0.0684 f=-0.486 shape=(1, 9000, 1)
logits [[ 1.7538108  -0.38380444  1.4679519  -4.7818046 ]]
Iteration 200 of 1000: loss=0.653 " + "l1=0.574" + "l2=0.0791 f=-0.494 shape=(1, 9000, 1)
logits [[ 1.3235251  -0.21492024  1.325346   -4.409929  ]]
Iteration 300 of 1000: loss=0.618 " + "l1=0.533" + "l2=0.0842 f=-0.479 shape=(1, 9000, 1)
logits [[ 1.218497   -0.24133395  1.2199659  -4.1133842 ]]
Iteration 400 of 1000: loss=0.596 " + "l1=0.502" + "l2=0.0935 f=-0.462 shape=(1, 9000, 1)
logits [[ 1.1380687 -0.2395974  1.1364433 -3.882999 ]]
Iteration 500 of 1000: loss=0.578 " + "l1=0.473" + "l2=0.104 f=-0.446 shape=(1, 9000, 1)
logits [[ 1.0574553  -0.24077009  1.0675561  -3.666439  ]]
Iteration 600 of 1000: loss=0.56 " + "l1=0.445" + "l2=0.115 f=-0.43 shape=(1, 9000, 1)
logits [[ 0.9825915  -0.23797046  0.9896429  -3.455771  ]]
Iteration 700 of 1000: loss=0.544 " + "l1=0.423" + "l2=0.121 f=-0.416 shape=(1, 9000, 1)
logits [[ 0.9378861  -0.24946313  0.9395484  -3.2930305 ]]
Iteration 800 of 1000: loss=0.53 " + "l1=0.404" + "l2=0.126 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.89216566 -0.26116455  0.90017503 -3.1417336 ]]
Iteration 900 of 1000: loss=0.515 " + "l1=0.388" + "l2=0.128 f=-0.39 shape=(1, 9000, 1)
logits [[ 0.85440904 -0.28544313  0.87482405 -3.003796  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.5 " + "l1=8.5" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.9735258 -0.9247484  1.7024258 -5.524555 ]]
Iteration 100 of 1000: loss=2.88 " + "l1=0.638" + "l2=2.24 f=-0.341 shape=(1, 9000, 1)
logits [[-0.65598637 -0.01807376 -0.03284949 -0.65604067]]
Iteration 200 of 1000: loss=1.77 " + "l1=0" + "l2=1.77 f=-0.304 shape=(1, 9000, 1)
logits [[-0.8437691  -0.14315237 -0.12317923 -0.10523491]]
Iteration 300 of 1000: loss=1.4 " + "l1=0.0186" + "l2=1.38 f=-0.316 shape=(1, 9000, 1)
logits [[-0.8995145  -0.11922195 -0.11255236 -0.13119   ]]
Iteration 400 of 1000: loss=1.2 " + "l1=0" + "l2=1.2 f=-0.313 shape=(1, 9000, 1)
logits [[-0.88806367 -0.15060563 -0.11312806 -0.09912297]]
Iteration 500 of 1000: loss=1.04 " + "l1=0" + "l2=1.04 f=-0.317 shape=(1, 9000, 1)
logits [[-0.91315544 -0.14367579 -0.11538859 -0.09734123]]
Iteration 600 of 1000: loss=0.917 " + "l1=0.0158" + "l2=0.901 f=-0.324 shape=(1, 9000, 1)
logits [[-0.9297516  -0.11411188 -0.12255578 -0.12992075]]
Iteration 700 of 1000: loss=0.826 " + "l1=0" + "l2=0.826 f=-0.318 shape=(1, 9000, 1)
logits [[-0.8949237  -0.18933737 -0.09973434 -0.08980817]]
Iteration 800 of 1000: loss=0.761 " + "l1=0" + "l2=0.761 f=-0.331 shape=(1, 9000, 1)
logits [[-0.9568134  -0.12723674 -0.12257933 -0.11556603]]
Iteration 900 of 1000: loss=0.712 " + "l1=0" + "l2=0.712 f=-0.331 shape=(1, 9000, 1)
logits [[-0.9610913  -0.13796799 -0.11533444 -0.11042737]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.67 " + "l1=4.67" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.9735258 -0.9247484  1.7024258 -5.524555 ]]
Iteration 100 of 1000: loss=2.46 " + "l1=1.7" + "l2=0.761 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.40353617 -0.07887065  0.57539815 -2.5199878 ]]
Iteration 200 of 1000: loss=1.7 " + "l1=0.729" + "l2=0.97 f=-0.351 shape=(1, 9000, 1)
logits [[-0.37964746  0.047571    0.12638947 -1.1997914 ]]
Iteration 300 of 1000: loss=1.22 " + "l1=0.154" + "l2=1.07 f=-0.321 shape=(1, 9000, 1)
logits [[-0.7974706  -0.07559604 -0.06495197 -0.3450727 ]]
Iteration 400 of 1000: loss=0.923 " + "l1=0.00479" + "l2=0.919 f=-0.305 shape=(1, 9000, 1)
logits [[-0.86994356 -0.11962277 -0.11168329 -0.12040137]]
Iteration 500 of 1000: loss=0.812 " + "l1=0.00303" + "l2=0.808 f=-0.302 shape=(1, 9000, 1)
logits [[-0.84459317 -0.12680362 -0.11506345 -0.12057029]]
Iteration 600 of 1000: loss=0.743 " + "l1=0.00647" + "l2=0.737 f=-0.304 shape=(1, 9000, 1)
logits [[-0.8507049  -0.14050841 -0.10604282 -0.11781321]]
Iteration 700 of 1000: loss=0.681 " + "l1=0.00195" + "l2=0.679 f=-0.306 shape=(1, 9000, 1)
logits [[-0.8782302  -0.11386123 -0.11508577 -0.11740478]]
Iteration 800 of 1000: loss=0.625 " + "l1=0" + "l2=0.625 f=-0.309 shape=(1, 9000, 1)
logits [[-0.9012035  -0.11476409 -0.11731163 -0.10378025]]
Iteration 900 of 1000: loss=0.582 " + "l1=0" + "l2=0.582 f=-0.311 shape=(1, 9000, 1)
logits [[-0.92861557 -0.11034238 -0.1156318  -0.08867988]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.76 " + "l1=2.76" + "l2=0 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.9735258 -0.9247484  1.7024258 -5.524555 ]]
Iteration 100 of 1000: loss=1.79 " + "l1=1.47" + "l2=0.318 f=-0.447 shape=(1, 9000, 1)
logits [[ 0.95247287 -0.19378002  0.99556696 -3.5405753 ]]
Iteration 200 of 1000: loss=1.44 " + "l1=1.02" + "l2=0.417 f=-0.399 shape=(1, 9000, 1)
logits [[ 0.44745442 -0.08443724  0.595756   -2.5559266 ]]
Iteration 300 of 1000: loss=1.2 " + "l1=0.706" + "l2=0.497 f=-0.352 shape=(1, 9000, 1)
logits [[ 0.04559538  0.00374909  0.35763428 -1.8132015 ]]
Iteration 400 of 1000: loss=1.02 " + "l1=0.454" + "l2=0.571 f=-0.336 shape=(1, 9000, 1)
logits [[-0.37292844  0.03074634  0.19596553 -1.1997198 ]]
Iteration 500 of 1000: loss=0.869 " + "l1=0.231" + "l2=0.638 f=-0.352 shape=(1, 9000, 1)
logits [[-0.7782447   0.00255665  0.03929636 -0.6699521 ]]
Iteration 600 of 1000: loss=0.728 " + "l1=0.0761" + "l2=0.652 f=-0.32 shape=(1, 9000, 1)
logits [[-0.8659636  -0.08229243 -0.04925615 -0.28356037]]
Iteration 700 of 1000: loss=0.599 " + "l1=0" + "l2=0.599 f=-0.308 shape=(1, 9000, 1)
logits [[-0.89265555 -0.12151932 -0.10877236 -0.10858544]]
Iteration 800 of 1000: loss=0.521 " + "l1=0.00215" + "l2=0.519 f=-0.311 shape=(1, 9000, 1)
logits [[-0.8993696  -0.12997653 -0.10320583 -0.10983226]]
Iteration 900 of 1000: loss=0.475 " + "l1=0.000915" + "l2=0.474 f=-0.314 shape=(1, 9000, 1)
logits [[-0.91441226 -0.1270514  -0.10597889 -0.10879306]]
--- 311.4774866104126 seconds ---
Adv result:3
Loading record A07143
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0547 " + "l1=0.0547" + "l2=0 f=-0.622 shape=(1, 9000, 1)
logits [[ 3.153699  -2.314292   2.4189763 -5.74617  ]]
Iteration 100 of 1000: loss=0.0542 " + "l1=0.0538" + "l2=0.000403 f=-0.619 shape=(1, 9000, 1)
logits [[ 3.1098025 -2.2672765  2.3840065 -5.7017674]]
Iteration 200 of 1000: loss=0.0541 " + "l1=0.0537" + "l2=0.000419 f=-0.618 shape=(1, 9000, 1)
logits [[ 3.1051898 -2.2599537  2.3783357 -5.6959043]]
Iteration 300 of 1000: loss=0.054 " + "l1=0.0535" + "l2=0.000488 f=-0.617 shape=(1, 9000, 1)
logits [[ 3.099885  -2.2519956  2.3724482 -5.689305 ]]
Iteration 400 of 1000: loss=0.054 " + "l1=0.0534" + "l2=0.000563 f=-0.616 shape=(1, 9000, 1)
logits [[ 3.0951235 -2.244809   2.3671918 -5.6833353]]
Iteration 500 of 1000: loss=0.054 " + "l1=0.0533" + "l2=0.000652 f=-0.616 shape=(1, 9000, 1)
logits [[ 3.0912297 -2.238849   2.3629272 -5.67845  ]]
Iteration 600 of 1000: loss=0.054 " + "l1=0.0532" + "l2=0.000777 f=-0.615 shape=(1, 9000, 1)
logits [[ 3.0878847 -2.2334607  2.3590622 -5.674239 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.547 " + "l1=0.547" + "l2=0 f=-0.622 shape=(1, 9000, 1)
logits [[ 3.153699  -2.314292   2.4189763 -5.74617  ]]
Iteration 100 of 1000: loss=0.497 " + "l1=0.46" + "l2=0.0372 f=-0.595 shape=(1, 9000, 1)
logits [[ 2.7411292 -1.8580859  2.0715282 -5.3341527]]
Iteration 200 of 1000: loss=0.48 " + "l1=0.428" + "l2=0.0516 f=-0.584 shape=(1, 9000, 1)
logits [[ 2.589348  -1.6949997  1.9495928 -5.17943  ]]
Iteration 300 of 1000: loss=0.469 " + "l1=0.411" + "l2=0.0581 f=-0.576 shape=(1, 9000, 1)
logits [[ 2.4996138 -1.6109282  1.8824219 -5.074476 ]]
Iteration 400 of 1000: loss=0.462 " + "l1=0.397" + "l2=0.0644 f=-0.57 shape=(1, 9000, 1)
logits [[ 2.4224632 -1.5491269  1.8338126 -4.9878154]]
Iteration 500 of 1000: loss=0.455 " + "l1=0.385" + "l2=0.0702 f=-0.564 shape=(1, 9000, 1)
logits [[ 2.354155  -1.4924217  1.7922034 -4.910948 ]]
Iteration 600 of 1000: loss=0.449 " + "l1=0.374" + "l2=0.0748 f=-0.559 shape=(1, 9000, 1)
logits [[ 2.2936025 -1.4447578  1.7571192 -4.841101 ]]
Iteration 700 of 1000: loss=0.442 " + "l1=0.364" + "l2=0.0783 f=-0.553 shape=(1, 9000, 1)
logits [[ 2.2405758 -1.399401   1.7253458 -4.7773952]]
Iteration 800 of 1000: loss=0.433 " + "l1=0.348" + "l2=0.0854 f=-0.54 shape=(1, 9000, 1)
logits [[ 2.1658592 -1.3142027  1.665413  -4.678103 ]]
Iteration 900 of 1000: loss=0.42 " + "l1=0.327" + "l2=0.0931 f=-0.524 shape=(1, 9000, 1)
logits [[ 2.0683258 -1.2054284  1.5859982 -4.5438404]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.47 " + "l1=5.47" + "l2=0 f=-0.622 shape=(1, 9000, 1)
logits [[ 3.153699  -2.314292   2.4189763 -5.74617  ]]
Iteration 100 of 1000: loss=1.44 " + "l1=0.0168" + "l2=1.43 f=-0.546 shape=(1, 9000, 1)
logits [[-0.12075843  0.41101146  0.42780402 -2.9027104 ]]
Iteration 200 of 1000: loss=1.03 " + "l1=0.00827" + "l2=1.02 f=-0.549 shape=(1, 9000, 1)
logits [[-0.09556526  0.4201324   0.4284064  -2.947103  ]]
Iteration 300 of 1000: loss=0.883 " + "l1=0" + "l2=0.883 f=-0.555 shape=(1, 9000, 1)
logits [[-0.10582593  0.4198262   0.41944405 -2.952612  ]]
Iteration 400 of 1000: loss=0.804 " + "l1=0" + "l2=0.804 f=-0.555 shape=(1, 9000, 1)
logits [[-0.10473733  0.43398026  0.41532245 -2.9635372 ]]
Iteration 500 of 1000: loss=0.721 " + "l1=0.0025" + "l2=0.719 f=-0.561 shape=(1, 9000, 1)
logits [[-0.11529337  0.4246282   0.42712513 -2.9784667 ]]
Iteration 600 of 1000: loss=0.686 " + "l1=0.0299" + "l2=0.656 f=-0.562 shape=(1, 9000, 1)
logits [[-0.11532196  0.40168577  0.43159214 -2.9659607 ]]
Iteration 700 of 1000: loss=0.625 " + "l1=0" + "l2=0.625 f=-0.565 shape=(1, 9000, 1)
logits [[-0.19012845  0.42431945  0.40982455 -2.9042366 ]]
Iteration 800 of 1000: loss=0.594 " + "l1=0" + "l2=0.594 f=-0.564 shape=(1, 9000, 1)
logits [[-0.20941699  0.41430855  0.40203395 -2.8624384 ]]
Iteration 900 of 1000: loss=0.571 " + "l1=0" + "l2=0.571 f=-0.562 shape=(1, 9000, 1)
logits [[-0.23622178  0.405693    0.39029035 -2.8080611 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.01 " + "l1=3.01" + "l2=0 f=-0.622 shape=(1, 9000, 1)
logits [[ 3.153699  -2.314292   2.4189763 -5.74617  ]]
Iteration 100 of 1000: loss=1.31 " + "l1=0.582" + "l2=0.728 f=-0.532 shape=(1, 9000, 1)
logits [[ 0.87584084 -0.17465092  0.88328993 -3.7141316 ]]
Iteration 200 of 1000: loss=1.01 " + "l1=0.297" + "l2=0.712 f=-0.536 shape=(1, 9000, 1)
logits [[ 0.5410606   0.10268948  0.6418546  -3.4299476 ]]
Iteration 300 of 1000: loss=0.851 " + "l1=0.0847" + "l2=0.766 f=-0.543 shape=(1, 9000, 1)
logits [[ 0.13656768  0.336361    0.49039093 -3.136182  ]]
Iteration 400 of 1000: loss=0.714 " + "l1=0.00613" + "l2=0.707 f=-0.553 shape=(1, 9000, 1)
logits [[-0.07079341  0.42169607  0.43284962 -2.9952235 ]]
Iteration 500 of 1000: loss=0.633 " + "l1=0.0191" + "l2=0.614 f=-0.556 shape=(1, 9000, 1)
logits [[-0.09768139  0.38990942  0.42460185 -2.9420493 ]]
Iteration 600 of 1000: loss=0.577 " + "l1=0.00558" + "l2=0.571 f=-0.557 shape=(1, 9000, 1)
logits [[-0.15997273  0.3914627   0.40161476 -2.861998  ]]
Iteration 700 of 1000: loss=0.541 " + "l1=0.00501" + "l2=0.536 f=-0.556 shape=(1, 9000, 1)
logits [[-0.21632504  0.3871978   0.39630893 -2.7930386 ]]
Iteration 800 of 1000: loss=0.514 " + "l1=0" + "l2=0.514 f=-0.559 shape=(1, 9000, 1)
logits [[-0.2723513   0.39185154  0.38623723 -2.7403302 ]]
Iteration 900 of 1000: loss=0.489 " + "l1=0" + "l2=0.489 f=-0.558 shape=(1, 9000, 1)
logits [[-0.340038    0.3884261   0.37773454 -2.6571422 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.78 " + "l1=1.78" + "l2=0 f=-0.622 shape=(1, 9000, 1)
logits [[ 3.153699  -2.314292   2.4189763 -5.74617  ]]
Iteration 100 of 1000: loss=1.08 " + "l1=0.582" + "l2=0.502 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.2145319 -0.5767816  1.2108043 -4.0348787]]
Iteration 200 of 1000: loss=0.877 " + "l1=0.406" + "l2=0.471 f=-0.54 shape=(1, 9000, 1)
logits [[ 0.97428244 -0.2732661   0.9757167  -3.8370767 ]]
Iteration 300 of 1000: loss=0.785 " + "l1=0.336" + "l2=0.449 f=-0.544 shape=(1, 9000, 1)
logits [[ 0.8692991  -0.1613881   0.87150806 -3.7556758 ]]
Iteration 400 of 1000: loss=0.731 " + "l1=0.295" + "l2=0.436 f=-0.537 shape=(1, 9000, 1)
logits [[ 0.79594755 -0.0933746   0.81419516 -3.6659298 ]]
Iteration 500 of 1000: loss=0.679 " + "l1=0.267" + "l2=0.412 f=-0.528 shape=(1, 9000, 1)
logits [[ 0.7391998  -0.06295396  0.757847   -3.5474617 ]]
Iteration 600 of 1000: loss=0.613 " + "l1=0.199" + "l2=0.414 f=-0.523 shape=(1, 9000, 1)
logits [[ 0.54055905  0.03171434  0.64422095 -3.3072786 ]]
Iteration 700 of 1000: loss=0.555 " + "l1=0.138" + "l2=0.416 f=-0.521 shape=(1, 9000, 1)
logits [[ 0.31883636  0.14130041  0.5670553  -3.1105747 ]]
Iteration 800 of 1000: loss=0.506 " + "l1=0.092" + "l2=0.414 f=-0.52 shape=(1, 9000, 1)
logits [[ 0.12186375  0.21769778  0.5007075  -2.9207582 ]]
Iteration 900 of 1000: loss=0.453 " + "l1=0.0229" + "l2=0.43 f=-0.53 shape=(1, 9000, 1)
logits [[-0.19205716  0.3263793   0.3968138  -2.6494577 ]]
--- 288.82127714157104 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00735 " + "l1=0.00735" + "l2=0 f=-0.622 shape=(1, 9000, 1)
logits [[ 3.153699  -2.314292   2.4189763 -5.74617  ]]
Iteration 100 of 1000: loss=0.00723 " + "l1=0.00709" + "l2=0.000146 f=-0.624 shape=(1, 9000, 1)
logits [[ 3.1343775 -2.3217175  2.4258742 -5.734802 ]]
Iteration 200 of 1000: loss=0.00719 " + "l1=0.00708" + "l2=0.000109 f=-0.624 shape=(1, 9000, 1)
logits [[ 3.135065  -2.3228915  2.4269066 -5.7366605]]
Iteration 300 of 1000: loss=0.00718 " + "l1=0.00705" + "l2=0.000127 f=-0.625 shape=(1, 9000, 1)
logits [[ 3.1339455 -2.3247018  2.4285526 -5.737287 ]]
Iteration 400 of 1000: loss=0.00718 " + "l1=0.00702" + "l2=0.000155 f=-0.625 shape=(1, 9000, 1)
logits [[ 3.1323104 -2.32662    2.430299  -5.737551 ]]
Iteration 500 of 1000: loss=0.00721 " + "l1=0.00699" + "l2=0.000229 f=-0.626 shape=(1, 9000, 1)
logits [[ 3.130631  -2.328634   2.4321022 -5.737807 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0735 " + "l1=0.0735" + "l2=0 f=-0.622 shape=(1, 9000, 1)
logits [[ 3.153699  -2.314292   2.4189763 -5.74617  ]]
Iteration 100 of 1000: loss=0.0622 " + "l1=0.0556" + "l2=0.00662 f=-0.636 shape=(1, 9000, 1)
logits [[ 3.0220282 -2.3701403  2.466414  -5.6626205]]
Iteration 200 of 1000: loss=0.058 " + "l1=0.0492" + "l2=0.00881 f=-0.643 shape=(1, 9000, 1)
logits [[ 2.9863558 -2.4013095  2.4946916 -5.652586 ]]
Iteration 300 of 1000: loss=0.0538 " + "l1=0.0432" + "l2=0.0106 f=-0.651 shape=(1, 9000, 1)
logits [[ 2.958335  -2.4366696  2.5263765 -5.6510677]]
Iteration 400 of 1000: loss=0.0497 " + "l1=0.0372" + "l2=0.0126 f=-0.658 shape=(1, 9000, 1)
logits [[ 2.9323587 -2.4776947  2.5607736 -5.647566 ]]
Iteration 500 of 1000: loss=0.0458 " + "l1=0.0315" + "l2=0.0143 f=-0.665 shape=(1, 9000, 1)
logits [[ 2.908624  -2.5182917  2.593422  -5.642086 ]]
Iteration 600 of 1000: loss=0.042 " + "l1=0.0255" + "l2=0.0165 f=-0.671 shape=(1, 9000, 1)
logits [[ 2.8837028 -2.5617015  2.6288812 -5.634048 ]]
Iteration 700 of 1000: loss=0.0381 " + "l1=0.0197" + "l2=0.0184 f=-0.676 shape=(1, 9000, 1)
logits [[ 2.860881  -2.603926   2.663597  -5.6251717]]
Iteration 800 of 1000: loss=0.0343 " + "l1=0.0142" + "l2=0.0201 f=-0.68 shape=(1, 9000, 1)
logits [[ 2.8370106 -2.6429656  2.6947746 -5.6096435]]
Iteration 900 of 1000: loss=0.0306 " + "l1=0.0086" + "l2=0.022 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.806768  -2.6753402  2.7207592 -5.5855236]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.735 " + "l1=0.735" + "l2=0 f=-0.622 shape=(1, 9000, 1)
logits [[ 3.153699  -2.314292   2.4189763 -5.74617  ]]
Iteration 100 of 1000: loss=0.102 " + "l1=0" + "l2=0.102 f=-0.676 shape=(1, 9000, 1)
logits [[ 2.6019497 -2.5652087  2.60976   -5.3500056]]
Iteration 200 of 1000: loss=0.0729 " + "l1=0.00546" + "l2=0.0675 f=-0.678 shape=(1, 9000, 1)
logits [[ 2.649423  -2.5949242  2.643961  -5.410577 ]]
Iteration 300 of 1000: loss=0.0583 " + "l1=0" + "l2=0.0583 f=-0.683 shape=(1, 9000, 1)
logits [[ 2.6527226 -2.6369672  2.6780162 -5.4273148]]
Iteration 400 of 1000: loss=0.0451 " + "l1=0" + "l2=0.0451 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.6846135 -2.657955   2.6965647 -5.4622183]]
Iteration 500 of 1000: loss=0.0378 " + "l1=0" + "l2=0.0378 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.7017577 -2.6729455  2.71166   -5.4789286]]
Iteration 600 of 1000: loss=0.0336 " + "l1=0.00226" + "l2=0.0314 f=-0.684 shape=(1, 9000, 1)
logits [[ 2.724628  -2.6822422  2.722368  -5.5006104]]
Iteration 700 of 1000: loss=0.0292 " + "l1=0" + "l2=0.0292 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.7276185 -2.6987724  2.7373068 -5.504225 ]]
Iteration 800 of 1000: loss=0.0276 " + "l1=0" + "l2=0.0276 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.7303333 -2.7110648  2.748312  -5.5075836]]
Iteration 900 of 1000: loss=0.0269 " + "l1=0.0036" + "l2=0.0233 f=-0.684 shape=(1, 9000, 1)
logits [[ 2.7534218 -2.7109385  2.7498245 -5.5285096]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.404 " + "l1=0.404" + "l2=0 f=-0.622 shape=(1, 9000, 1)
logits [[ 3.153699  -2.314292   2.4189763 -5.74617  ]]
Iteration 100 of 1000: loss=0.0972 " + "l1=0.00124" + "l2=0.096 f=-0.676 shape=(1, 9000, 1)
logits [[ 2.6157532 -2.567998   2.6135044 -5.364305 ]]
Iteration 200 of 1000: loss=0.0666 " + "l1=0" + "l2=0.0666 f=-0.681 shape=(1, 9000, 1)
logits [[ 2.6514914 -2.6099186  2.6561508 -5.4228315]]
Iteration 300 of 1000: loss=0.0516 " + "l1=0" + "l2=0.0516 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.6774077 -2.6514091  2.690622  -5.4575267]]
Iteration 400 of 1000: loss=0.0402 " + "l1=0" + "l2=0.0402 f=-0.686 shape=(1, 9000, 1)
logits [[ 2.7052202 -2.6707764  2.7077246 -5.4842753]]
Iteration 500 of 1000: loss=0.036 " + "l1=0" + "l2=0.036 f=-0.686 shape=(1, 9000, 1)
logits [[ 2.7071662 -2.6911445  2.7266734 -5.487715 ]]
Iteration 600 of 1000: loss=0.0299 " + "l1=0" + "l2=0.0299 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.732986  -2.7025776  2.7388165 -5.5108953]]
Iteration 700 of 1000: loss=0.0267 " + "l1=0.00101" + "l2=0.0257 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.7480788 -2.7103457  2.7462475 -5.52543  ]]
Iteration 800 of 1000: loss=0.024 " + "l1=0" + "l2=0.024 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.7487054 -2.7172673  2.7535634 -5.52642  ]]
Iteration 900 of 1000: loss=0.0222 " + "l1=0" + "l2=0.0222 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.7487063 -2.720562   2.7568119 -5.5247107]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.239 " + "l1=0.239" + "l2=0 f=-0.622 shape=(1, 9000, 1)
logits [[ 3.153699  -2.314292   2.4189763 -5.74617  ]]
Iteration 100 of 1000: loss=0.112 " + "l1=0.0375" + "l2=0.0749 f=-0.671 shape=(1, 9000, 1)
logits [[ 2.702162  -2.5294375  2.5867946 -5.4425817]]
Iteration 200 of 1000: loss=0.0675 " + "l1=0.00221" + "l2=0.0653 f=-0.682 shape=(1, 9000, 1)
logits [[ 2.6694098 -2.6114962  2.6626248 -5.4495883]]
Iteration 300 of 1000: loss=0.0492 " + "l1=0.00115" + "l2=0.048 f=-0.686 shape=(1, 9000, 1)
logits [[ 2.6977568 -2.6506102  2.6942163 -5.4848337]]
Iteration 400 of 1000: loss=0.0398 " + "l1=0" + "l2=0.0398 f=-0.687 shape=(1, 9000, 1)
logits [[ 2.7068355 -2.6785166  2.7164478 -5.4935384]]
Iteration 500 of 1000: loss=0.0321 " + "l1=0.000233" + "l2=0.0319 f=-0.686 shape=(1, 9000, 1)
logits [[ 2.7322693 -2.693435   2.7315512 -5.515599 ]]
Iteration 600 of 1000: loss=0.0281 " + "l1=0" + "l2=0.0281 f=-0.687 shape=(1, 9000, 1)
logits [[ 2.7413702 -2.7103329  2.7461014 -5.524324 ]]
Iteration 700 of 1000: loss=0.0247 " + "l1=0" + "l2=0.0247 f=-0.686 shape=(1, 9000, 1)
logits [[ 2.7533338 -2.7172358  2.7534037 -5.534117 ]]
Iteration 800 of 1000: loss=0.0222 " + "l1=0" + "l2=0.0222 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.756868  -2.7197673  2.7571347 -5.5352664]]
Iteration 900 of 1000: loss=0.0214 " + "l1=0" + "l2=0.0214 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.7473814 -2.7240572  2.760574  -5.523992 ]]
--- 281.8707010746002 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.089 " + "l1=0.089" + "l2=0 f=-0.622 shape=(1, 9000, 1)
logits [[ 3.153699  -2.314292   2.4189763 -5.74617  ]]
Iteration 100 of 1000: loss=0.0883 " + "l1=0.0877" + "l2=0.000543 f=-0.618 shape=(1, 9000, 1)
logits [[ 3.099108  -2.284707   2.386798  -5.6751924]]
Iteration 200 of 1000: loss=0.0881 " + "l1=0.0876" + "l2=0.000577 f=-0.618 shape=(1, 9000, 1)
logits [[ 3.09149   -2.2795074  2.3815396 -5.6649213]]
Iteration 300 of 1000: loss=0.0881 " + "l1=0.0874" + "l2=0.000686 f=-0.617 shape=(1, 9000, 1)
logits [[ 3.083314  -2.274065   2.3758366 -5.653604 ]]
Iteration 400 of 1000: loss=0.088 " + "l1=0.0872" + "l2=0.00084 f=-0.617 shape=(1, 9000, 1)
logits [[ 3.0760884 -2.2694855  2.3708289 -5.6434875]]
Iteration 500 of 1000: loss=0.088 " + "l1=0.087" + "l2=0.000923 f=-0.616 shape=(1, 9000, 1)
logits [[ 3.0698655 -2.2656527  2.3665252 -5.634866 ]]
Iteration 600 of 1000: loss=0.0879 " + "l1=0.0869" + "l2=0.00103 f=-0.616 shape=(1, 9000, 1)
logits [[ 3.064455  -2.262691   2.3629594 -5.627526 ]]
Iteration 700 of 1000: loss=0.0879 " + "l1=0.0868" + "l2=0.00111 f=-0.615 shape=(1, 9000, 1)
logits [[ 3.0595622 -2.2602808  2.3598092 -5.6209416]]
Iteration 800 of 1000: loss=0.088 " + "l1=0.0867" + "l2=0.00131 f=-0.615 shape=(1, 9000, 1)
logits [[ 3.0553722 -2.258371   2.3572133 -5.615483 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.89 " + "l1=0.89" + "l2=0 f=-0.622 shape=(1, 9000, 1)
logits [[ 3.153699  -2.314292   2.4189763 -5.74617  ]]
Iteration 100 of 1000: loss=0.82 " + "l1=0.771" + "l2=0.0491 f=-0.592 shape=(1, 9000, 1)
logits [[ 2.6328595 -2.0473611  2.120516  -5.0723867]]
Iteration 200 of 1000: loss=0.795 " + "l1=0.727" + "l2=0.0676 f=-0.579 shape=(1, 9000, 1)
logits [[ 2.4447541 -1.9423465  2.0076435 -4.826593 ]]
Iteration 300 of 1000: loss=0.774 " + "l1=0.689" + "l2=0.0852 f=-0.568 shape=(1, 9000, 1)
logits [[ 2.2770467 -1.8518811  1.9120426 -4.609105 ]]
Iteration 400 of 1000: loss=0.754 " + "l1=0.65" + "l2=0.103 f=-0.555 shape=(1, 9000, 1)
logits [[ 2.1143847 -1.7711545  1.826028  -4.3879933]]
Iteration 500 of 1000: loss=0.734 " + "l1=0.614" + "l2=0.12 f=-0.54 shape=(1, 9000, 1)
logits [[ 1.9617425 -1.6912408  1.7487674 -4.179084 ]]
Iteration 600 of 1000: loss=0.715 " + "l1=0.581" + "l2=0.134 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.8205622 -1.6385078  1.6866575 -3.9926875]]
Iteration 700 of 1000: loss=0.692 " + "l1=0.543" + "l2=0.149 f=-0.522 shape=(1, 9000, 1)
logits [[ 1.6523515 -1.5962704  1.6314068 -3.7736719]]
Iteration 800 of 1000: loss=0.671 " + "l1=0.526" + "l2=0.145 f=-0.512 shape=(1, 9000, 1)
logits [[ 1.5913332 -1.5650308  1.5910357 -3.665893 ]]
Iteration 900 of 1000: loss=0.655 " + "l1=0.515" + "l2=0.139 f=-0.506 shape=(1, 9000, 1)
logits [[ 1.5577428 -1.5425286  1.5587087 -3.5962718]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.9 " + "l1=8.9" + "l2=0 f=-0.622 shape=(1, 9000, 1)
logits [[ 3.153699  -2.314292   2.4189763 -5.74617  ]]
Iteration 100 of 1000: loss=2.71 " + "l1=0.0373" + "l2=2.67 f=-0.288 shape=(1, 9000, 1)
logits [[-0.9214462  -0.11274692 -0.04003286 -0.07737965]]
Iteration 200 of 1000: loss=1.99 " + "l1=0" + "l2=1.99 f=-0.302 shape=(1, 9000, 1)
logits [[-0.9264946  -0.13242555 -0.08069044 -0.06703899]]
Iteration 300 of 1000: loss=1.71 " + "l1=0" + "l2=1.71 f=-0.307 shape=(1, 9000, 1)
logits [[-0.8962911  -0.15382807 -0.10007913 -0.07645972]]
Iteration 400 of 1000: loss=1.52 " + "l1=0" + "l2=1.52 f=-0.308 shape=(1, 9000, 1)
logits [[-0.86288613 -0.15996201 -0.1099083  -0.09966993]]
Iteration 500 of 1000: loss=1.37 " + "l1=0" + "l2=1.37 f=-0.303 shape=(1, 9000, 1)
logits [[-0.82601607 -0.15960436 -0.1165375  -0.11137777]]
Iteration 600 of 1000: loss=1.27 " + "l1=0" + "l2=1.27 f=-0.291 shape=(1, 9000, 1)
logits [[-0.7596967  -0.21008225 -0.10210203 -0.09187873]]
Iteration 700 of 1000: loss=1.19 " + "l1=0.0131" + "l2=1.17 f=-0.289 shape=(1, 9000, 1)
logits [[-0.74516845 -0.242671   -0.0775205  -0.09060175]]
Iteration 800 of 1000: loss=1.11 " + "l1=0" + "l2=1.11 f=-0.284 shape=(1, 9000, 1)
logits [[-0.75888073 -0.27286866 -0.07147151 -0.0325615 ]]
Iteration 900 of 1000: loss=1.04 " + "l1=0" + "l2=1.04 f=-0.281 shape=(1, 9000, 1)
logits [[-0.73909354 -0.31311452 -0.03728531 -0.03645349]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.89 " + "l1=4.89" + "l2=0 f=-0.622 shape=(1, 9000, 1)
logits [[ 3.153699  -2.314292   2.4189763 -5.74617  ]]
Iteration 100 of 1000: loss=2.58 " + "l1=1.35" + "l2=1.23 f=-0.374 shape=(1, 9000, 1)
logits [[ 0.32890102 -0.5532041   0.5873353  -1.8585365 ]]
Iteration 200 of 1000: loss=1.92 " + "l1=0.417" + "l2=1.5 f=-0.334 shape=(1, 9000, 1)
logits [[-0.6075216  -0.16324885  0.09619397 -0.6623786 ]]
Iteration 300 of 1000: loss=1.46 " + "l1=0" + "l2=1.46 f=-0.317 shape=(1, 9000, 1)
logits [[-0.8966777  -0.13077974 -0.12953568 -0.11105911]]
Iteration 400 of 1000: loss=1.23 " + "l1=0.0285" + "l2=1.2 f=-0.3 shape=(1, 9000, 1)
logits [[-0.7695114  -0.22710279 -0.07675271 -0.1285569 ]]
Iteration 500 of 1000: loss=1.08 " + "l1=0.0166" + "l2=1.07 f=-0.285 shape=(1, 9000, 1)
logits [[-0.73526305 -0.3207566  -0.0267869  -0.05705552]]
Iteration 600 of 1000: loss=0.981 " + "l1=0.0213" + "l2=0.959 f=-0.276 shape=(1, 9000, 1)
logits [[-0.72601885 -0.3718699   0.01596379 -0.02280095]]
Iteration 700 of 1000: loss=0.885 " + "l1=0" + "l2=0.885 f=-0.274 shape=(1, 9000, 1)
logits [[-0.7710153  -0.40219164  0.02937187  0.049498  ]]
Iteration 800 of 1000: loss=0.812 " + "l1=0.0123" + "l2=0.799 f=-0.269 shape=(1, 9000, 1)
logits [[-0.73407346 -0.4736429   0.07777697  0.05535401]]
Iteration 900 of 1000: loss=0.747 " + "l1=0" + "l2=0.747 f=-0.26 shape=(1, 9000, 1)
logits [[-0.735043   -0.4966309   0.08006337  0.11356768]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.89 " + "l1=2.89" + "l2=0 f=-0.622 shape=(1, 9000, 1)
logits [[ 3.153699  -2.314292   2.4189763 -5.74617  ]]
Iteration 100 of 1000: loss=1.96 " + "l1=1.4" + "l2=0.561 f=-0.45 shape=(1, 9000, 1)
logits [[ 1.1869922 -1.0577694  1.1932445 -3.1233222]]
Iteration 200 of 1000: loss=1.73 " + "l1=1.13" + "l2=0.603 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.8858041 -0.880203   0.9184829 -2.5451775]]
Iteration 300 of 1000: loss=1.56 " + "l1=0.89" + "l2=0.67 f=-0.39 shape=(1, 9000, 1)
logits [[ 0.51793104 -0.73491305  0.6982804  -2.0409951 ]]
Iteration 400 of 1000: loss=1.42 " + "l1=0.689" + "l2=0.735 f=-0.371 shape=(1, 9000, 1)
logits [[ 0.20721056 -0.64447075  0.5367026  -1.5820038 ]]
Iteration 500 of 1000: loss=1.25 " + "l1=0.428" + "l2=0.824 f=-0.354 shape=(1, 9000, 1)
logits [[-0.28005427 -0.53413606  0.35722882 -0.95969874]]
Iteration 600 of 1000: loss=1.02 " + "l1=0.15" + "l2=0.871 f=-0.312 shape=(1, 9000, 1)
logits [[-0.71593606 -0.46807864  0.19799961 -0.26221865]]
Iteration 700 of 1000: loss=0.848 " + "l1=0.0165" + "l2=0.831 f=-0.281 shape=(1, 9000, 1)
logits [[-0.89079005 -0.44491667  0.1317442   0.08097658]]
Iteration 800 of 1000: loss=0.728 " + "l1=0" + "l2=0.728 f=-0.269 shape=(1, 9000, 1)
logits [[-0.87813234 -0.49799037  0.14670189  0.15261194]]
Iteration 900 of 1000: loss=0.639 " + "l1=0" + "l2=0.639 f=-0.263 shape=(1, 9000, 1)
logits [[-0.8297484  -0.5623037   0.16578376  0.17383051]]
--- 299.19836044311523 seconds ---
Adv result:3
