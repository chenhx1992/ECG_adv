Already up-to-date.
Loading model
Loading ground truth file
Attack diff is running...
Loading record A04019
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0907 " + "l1=0.0907" + "l2=0 f=-0.598 shape=(1, 9000, 1)
logits [[ 6.281379  -2.7918756  3.4146054 -9.29433  ]]
Iteration 100 of 1000: loss=0.0903 " + "l1=0.09" + "l2=0.000282 f=-0.596 shape=(1, 9000, 1)
logits [[ 6.2429414 -2.7588706  3.3921785 -9.260213 ]]
Iteration 200 of 1000: loss=0.0902 " + "l1=0.0899" + "l2=0.000293 f=-0.595 shape=(1, 9000, 1)
logits [[ 6.2369595 -2.7523575  3.387433  -9.253298 ]]
Iteration 300 of 1000: loss=0.0901 " + "l1=0.0897" + "l2=0.000365 f=-0.595 shape=(1, 9000, 1)
logits [[ 6.2292495 -2.7445698  3.3819275 -9.245137 ]]
Iteration 400 of 1000: loss=0.09 " + "l1=0.0896" + "l2=0.000438 f=-0.594 shape=(1, 9000, 1)
logits [[ 6.2212534 -2.7368765  3.3764613 -9.236747 ]]
Iteration 500 of 1000: loss=0.09 " + "l1=0.0894" + "l2=0.00052 f=-0.593 shape=(1, 9000, 1)
logits [[ 6.213439  -2.7296681  3.3713207 -9.228538 ]]
Iteration 600 of 1000: loss=0.0899 " + "l1=0.0893" + "l2=0.000654 f=-0.593 shape=(1, 9000, 1)
logits [[ 6.205844  -2.72273    3.3664203 -9.220427 ]]
Iteration 700 of 1000: loss=0.0899 " + "l1=0.0891" + "l2=0.000735 f=-0.592 shape=(1, 9000, 1)
logits [[ 6.1985083 -2.7160394  3.3615468 -9.212505 ]]
Iteration 800 of 1000: loss=0.0898 " + "l1=0.089" + "l2=0.000814 f=-0.592 shape=(1, 9000, 1)
logits [[ 6.1914344 -2.7097876  3.3569264 -9.204689 ]]
Iteration 900 of 1000: loss=0.0899 " + "l1=0.0889" + "l2=0.00103 f=-0.591 shape=(1, 9000, 1)
logits [[ 6.184542  -2.7037268  3.3524559 -9.1970215]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.907 " + "l1=0.907" + "l2=0 f=-0.598 shape=(1, 9000, 1)
logits [[ 6.281379  -2.7918756  3.4146054 -9.29433  ]]
Iteration 100 of 1000: loss=0.869 " + "l1=0.846" + "l2=0.0234 f=-0.59 shape=(1, 9000, 1)
logits [[ 5.9371705 -2.5180302  3.2194486 -8.997499 ]]
Iteration 200 of 1000: loss=0.851 " + "l1=0.815" + "l2=0.0366 f=-0.587 shape=(1, 9000, 1)
logits [[ 5.765456  -2.3838916  3.1118917 -8.839747 ]]
Iteration 300 of 1000: loss=0.836 " + "l1=0.79" + "l2=0.0464 f=-0.581 shape=(1, 9000, 1)
logits [[ 5.6216173 -2.2735944  3.0275407 -8.69894  ]]
Iteration 400 of 1000: loss=0.823 " + "l1=0.773" + "l2=0.0505 f=-0.571 shape=(1, 9000, 1)
logits [[ 5.529073  -2.1999197  2.9798515 -8.594874 ]]
Iteration 500 of 1000: loss=0.812 " + "l1=0.755" + "l2=0.0574 f=-0.563 shape=(1, 9000, 1)
logits [[ 5.4227614 -2.1237748  2.929132  -8.479954 ]]
Iteration 600 of 1000: loss=0.802 " + "l1=0.739" + "l2=0.0626 f=-0.554 shape=(1, 9000, 1)
logits [[ 5.327918  -2.0633311  2.8902717 -8.371778 ]]
Iteration 700 of 1000: loss=0.792 " + "l1=0.723" + "l2=0.0683 f=-0.548 shape=(1, 9000, 1)
logits [[ 5.23043   -2.0022447  2.8434377 -8.263369 ]]
Iteration 800 of 1000: loss=0.782 " + "l1=0.708" + "l2=0.0737 f=-0.542 shape=(1, 9000, 1)
logits [[ 5.131995  -1.9479198  2.7997468 -8.152845 ]]
Iteration 900 of 1000: loss=0.772 " + "l1=0.694" + "l2=0.0785 f=-0.536 shape=(1, 9000, 1)
logits [[ 5.0376477 -1.8998837  2.7585814 -8.041974 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.07 " + "l1=9.07" + "l2=0 f=-0.598 shape=(1, 9000, 1)
logits [[ 6.281379  -2.7918756  3.4146054 -9.29433  ]]
Iteration 100 of 1000: loss=5.23 " + "l1=3.26" + "l2=1.97 f=-0.471 shape=(1, 9000, 1)
logits [[ 2.6160743  -0.64840996  2.0150287  -5.864859  ]]
Iteration 200 of 1000: loss=3.91 " + "l1=1.71" + "l2=2.2 f=-0.425 shape=(1, 9000, 1)
logits [[ 1.6249471  -0.08648599  1.6153541  -4.8530216 ]]
Iteration 300 of 1000: loss=3.45 " + "l1=1.31" + "l2=2.14 f=-0.394 shape=(1, 9000, 1)
logits [[ 1.4145821  0.1045903  1.4052867 -4.499045 ]]
Iteration 400 of 1000: loss=3.08 " + "l1=1.02" + "l2=2.06 f=-0.377 shape=(1, 9000, 1)
logits [[ 1.2601343   0.24276647  1.2433776  -4.2542973 ]]
Iteration 500 of 1000: loss=2.77 " + "l1=0.729" + "l2=2.04 f=-0.358 shape=(1, 9000, 1)
logits [[ 1.09046    0.3615472  1.0866404 -3.969457 ]]
Iteration 600 of 1000: loss=2.59 " + "l1=0.557" + "l2=2.03 f=-0.351 shape=(1, 9000, 1)
logits [[ 0.96274966  0.4075864   0.9645231  -3.7408502 ]]
Iteration 700 of 1000: loss=2.48 " + "l1=0.461" + "l2=2.02 f=-0.344 shape=(1, 9000, 1)
logits [[ 0.88619584  0.42487788  0.8820176  -3.5706775 ]]
Iteration 800 of 1000: loss=2.38 " + "l1=0.351" + "l2=2.03 f=-0.331 shape=(1, 9000, 1)
logits [[ 0.7992226   0.4477475   0.79281837 -3.3643377 ]]
Iteration 900 of 1000: loss=2.3 " + "l1=0.307" + "l2=1.99 f=-0.326 shape=(1, 9000, 1)
logits [[ 0.74666053  0.44205463  0.7495039  -3.2439575 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=90.7 " + "l1=90.7" + "l2=0 f=-0.598 shape=(1, 9000, 1)
logits [[ 6.281379  -2.7918756  3.4146054 -9.29433  ]]
Iteration 100 of 1000: loss=10 " + "l1=0.0977" + "l2=9.91 f=-0.419 shape=(1, 9000, 1)
logits [[ 0.48307964  0.7823403   0.7921128  -3.7334692 ]]
Iteration 200 of 1000: loss=6.39 " + "l1=0" + "l2=6.39 f=-0.397 shape=(1, 9000, 1)
logits [[ 0.73497146  0.74471927  0.7393065  -3.8083594 ]]
Iteration 300 of 1000: loss=5.39 " + "l1=0" + "l2=5.39 f=-0.404 shape=(1, 9000, 1)
logits [[ 0.7040336  0.7523929  0.7485303 -3.819368 ]]
Iteration 400 of 1000: loss=4.96 " + "l1=0" + "l2=4.96 f=-0.401 shape=(1, 9000, 1)
logits [[ 0.65807563  0.7502816   0.7411682  -3.7547607 ]]
Iteration 500 of 1000: loss=4.68 " + "l1=0" + "l2=4.68 f=-0.403 shape=(1, 9000, 1)
logits [[ 0.62198424  0.7439894   0.7299569  -3.7091722 ]]
Iteration 600 of 1000: loss=4.4 " + "l1=0" + "l2=4.4 f=-0.399 shape=(1, 9000, 1)
logits [[ 0.6849001   0.7265397   0.71828824 -3.7247405 ]]
Iteration 700 of 1000: loss=4.27 " + "l1=0" + "l2=4.27 f=-0.396 shape=(1, 9000, 1)
logits [[ 0.6156142  0.7280901  0.7121485 -3.6404877]]
Iteration 800 of 1000: loss=4.1 " + "l1=0" + "l2=4.1 f=-0.388 shape=(1, 9000, 1)
logits [[ 0.67997694  0.71745586  0.69984686 -3.6492517 ]]
Iteration 900 of 1000: loss=4.03 " + "l1=0" + "l2=4.03 f=-0.386 shape=(1, 9000, 1)
logits [[ 0.6064914   0.72275454  0.69760054 -3.5712528 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=49.9 " + "l1=49.9" + "l2=0 f=-0.598 shape=(1, 9000, 1)
logits [[ 6.281379  -2.7918756  3.4146054 -9.29433  ]]
Iteration 100 of 1000: loss=8.95 " + "l1=1.25" + "l2=7.7 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.8368232   0.65813386  0.88512206 -3.999749  ]]
Iteration 200 of 1000: loss=5.46 " + "l1=0.0119" + "l2=5.45 f=-0.392 shape=(1, 9000, 1)
logits [[ 0.70838857  0.753933    0.7561055  -3.785349  ]]
Iteration 300 of 1000: loss=4.74 " + "l1=0.0127" + "l2=4.72 f=-0.391 shape=(1, 9000, 1)
logits [[ 0.7265513  0.7360158  0.7383169 -3.7648933]]
Iteration 400 of 1000: loss=4.36 " + "l1=0" + "l2=4.36 f=-0.394 shape=(1, 9000, 1)
logits [[ 0.7134947   0.7298636   0.71640575 -3.7359476 ]]
Iteration 500 of 1000: loss=4.15 " + "l1=0" + "l2=4.15 f=-0.392 shape=(1, 9000, 1)
logits [[ 0.65748876  0.7257312   0.70421785 -3.6563935 ]]
Iteration 600 of 1000: loss=3.98 " + "l1=0" + "l2=3.98 f=-0.381 shape=(1, 9000, 1)
logits [[ 0.67272455  0.71534276  0.692637   -3.6043878 ]]
Iteration 700 of 1000: loss=3.82 " + "l1=0" + "l2=3.82 f=-0.371 shape=(1, 9000, 1)
logits [[ 0.69463646  0.70075417  0.692235   -3.5705512 ]]
Iteration 800 of 1000: loss=3.72 " + "l1=0" + "l2=3.72 f=-0.369 shape=(1, 9000, 1)
logits [[ 0.6539431  0.7003024  0.6848679 -3.5147455]]
Iteration 900 of 1000: loss=3.62 " + "l1=0" + "l2=3.62 f=-0.365 shape=(1, 9000, 1)
logits [[ 0.6317436   0.6948193   0.68143255 -3.4672842 ]]
--- 288.66867685317993 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0287 " + "l1=0.0287" + "l2=0 f=-0.598 shape=(1, 9000, 1)
logits [[ 6.281379  -2.7918756  3.4146054 -9.29433  ]]
Iteration 100 of 1000: loss=0.0286 " + "l1=0.0284" + "l2=0.00013 f=-0.597 shape=(1, 9000, 1)
logits [[ 6.262167  -2.793976   3.4183695 -9.275644 ]]
Iteration 200 of 1000: loss=0.0285 " + "l1=0.0284" + "l2=9.75e-05 f=-0.597 shape=(1, 9000, 1)
logits [[ 6.2618136 -2.7940133  3.4180346 -9.274778 ]]
Iteration 300 of 1000: loss=0.0285 " + "l1=0.0284" + "l2=0.000111 f=-0.597 shape=(1, 9000, 1)
logits [[ 6.2598333 -2.7943223  3.418111  -9.272558 ]]
Iteration 400 of 1000: loss=0.0285 " + "l1=0.0284" + "l2=0.000133 f=-0.597 shape=(1, 9000, 1)
logits [[ 6.2575383 -2.7946253  3.4182663 -9.270023 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.287 " + "l1=0.287" + "l2=0 f=-0.598 shape=(1, 9000, 1)
logits [[ 6.281379  -2.7918756  3.4146054 -9.29433  ]]
Iteration 100 of 1000: loss=0.277 " + "l1=0.27" + "l2=0.00686 f=-0.597 shape=(1, 9000, 1)
logits [[ 6.136286 -2.805451  3.438407 -9.15694 ]]
Iteration 200 of 1000: loss=0.273 " + "l1=0.265" + "l2=0.00892 f=-0.597 shape=(1, 9000, 1)
logits [[ 6.0873647 -2.8099644  3.4418702 -9.107107 ]]
Iteration 300 of 1000: loss=0.27 " + "l1=0.26" + "l2=0.0108 f=-0.597 shape=(1, 9000, 1)
logits [[ 6.0405493 -2.8152087  3.443749  -9.055387 ]]
Iteration 400 of 1000: loss=0.267 " + "l1=0.255" + "l2=0.0123 f=-0.596 shape=(1, 9000, 1)
logits [[ 5.998784  -2.8226562  3.4470325 -9.007504 ]]
Iteration 500 of 1000: loss=0.265 " + "l1=0.251" + "l2=0.0138 f=-0.595 shape=(1, 9000, 1)
logits [[ 5.9561872 -2.8270118  3.4494827 -8.957432 ]]
Iteration 600 of 1000: loss=0.261 " + "l1=0.247" + "l2=0.0149 f=-0.593 shape=(1, 9000, 1)
logits [[ 5.916516  -2.8290713  3.450933  -8.910043 ]]
Iteration 700 of 1000: loss=0.258 " + "l1=0.243" + "l2=0.0158 f=-0.59 shape=(1, 9000, 1)
logits [[ 5.8782897 -2.8290586  3.4512398 -8.861462 ]]
Iteration 800 of 1000: loss=0.255 " + "l1=0.239" + "l2=0.0165 f=-0.587 shape=(1, 9000, 1)
logits [[ 5.8406973 -2.8272226  3.4508386 -8.813041 ]]
Iteration 900 of 1000: loss=0.252 " + "l1=0.235" + "l2=0.0171 f=-0.584 shape=(1, 9000, 1)
logits [[ 5.803345  -2.8256903  3.4498644 -8.764503 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.87 " + "l1=2.87" + "l2=0 f=-0.598 shape=(1, 9000, 1)
logits [[ 6.281379  -2.7918756  3.4146054 -9.29433  ]]
Iteration 100 of 1000: loss=1.65 " + "l1=0.924" + "l2=0.724 f=-0.552 shape=(1, 9000, 1)
logits [[ 4.4638476 -2.901421   3.539661  -7.3084936]]
Iteration 200 of 1000: loss=1.14 " + "l1=0.0971" + "l2=1.04 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.659809  -2.943836   3.5626993 -6.2817125]]
Iteration 300 of 1000: loss=0.892 " + "l1=0.00173" + "l2=0.89 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.565067  -2.9955513  3.5633335 -6.1143527]]
Iteration 400 of 1000: loss=0.753 " + "l1=0.00194" + "l2=0.751 f=-0.484 shape=(1, 9000, 1)
logits [[ 3.5387783 -2.9960384  3.536836  -6.0154996]]
Iteration 500 of 1000: loss=0.643 " + "l1=0.00456" + "l2=0.639 f=-0.472 shape=(1, 9000, 1)
logits [[ 3.5442889 -3.005077   3.5397315 -5.966241 ]]
Iteration 600 of 1000: loss=0.533 " + "l1=0" + "l2=0.533 f=-0.465 shape=(1, 9000, 1)
logits [[ 3.5173252 -2.9736161  3.522843  -5.9273825]]
Iteration 700 of 1000: loss=0.453 " + "l1=0" + "l2=0.453 f=-0.466 shape=(1, 9000, 1)
logits [[ 3.4746423 -2.954864   3.4854033 -5.8695207]]
Iteration 800 of 1000: loss=0.391 " + "l1=0.0178" + "l2=0.374 f=-0.465 shape=(1, 9000, 1)
logits [[ 3.4528503 -2.903232   3.4350636 -5.842935 ]]
Iteration 900 of 1000: loss=0.328 " + "l1=0.00903" + "l2=0.318 f=-0.464 shape=(1, 9000, 1)
logits [[ 3.3940287 -2.8624027  3.384997  -5.7710967]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.58 " + "l1=1.58" + "l2=0 f=-0.598 shape=(1, 9000, 1)
logits [[ 6.281379  -2.7918756  3.4146054 -9.29433  ]]
Iteration 100 of 1000: loss=1.22 " + "l1=0.996" + "l2=0.224 f=-0.591 shape=(1, 9000, 1)
logits [[ 5.325163  -2.8760114  3.514954  -8.326391 ]]
Iteration 200 of 1000: loss=1.05 " + "l1=0.723" + "l2=0.33 f=-0.569 shape=(1, 9000, 1)
logits [[ 4.806375  -2.8832757  3.4911516 -7.68829  ]]
Iteration 300 of 1000: loss=0.931 " + "l1=0.55" + "l2=0.381 f=-0.546 shape=(1, 9000, 1)
logits [[ 4.4695945 -2.8725746  3.470447  -7.249965 ]]
Iteration 400 of 1000: loss=0.839 " + "l1=0.432" + "l2=0.406 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.223213  -2.8484027  3.4370883 -6.9337277]]
Iteration 500 of 1000: loss=0.768 " + "l1=0.34" + "l2=0.428 f=-0.516 shape=(1, 9000, 1)
logits [[ 3.9985847 -2.8111486  3.3809004 -6.632396 ]]
Iteration 600 of 1000: loss=0.688 " + "l1=0.243" + "l2=0.445 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.7699285 -2.7593682  3.3274026 -6.333723 ]]
Iteration 700 of 1000: loss=0.569 " + "l1=0.0951" + "l2=0.474 f=-0.482 shape=(1, 9000, 1)
logits [[ 3.4426486 -2.6854634  3.2697895 -5.953583 ]]
Iteration 800 of 1000: loss=0.437 " + "l1=0.00937" + "l2=0.427 f=-0.462 shape=(1, 9000, 1)
logits [[ 3.2185066 -2.6034408  3.2014744 -5.6628423]]
Iteration 900 of 1000: loss=0.367 " + "l1=0" + "l2=0.367 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.1057408 -2.5249643  3.120006  -5.500742 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.932 " + "l1=0.932" + "l2=0 f=-0.598 shape=(1, 9000, 1)
logits [[ 6.281379  -2.7918756  3.4146054 -9.29433  ]]
Iteration 100 of 1000: loss=0.814 " + "l1=0.738" + "l2=0.076 f=-0.594 shape=(1, 9000, 1)
logits [[ 5.735613  -2.8233583  3.4653397 -8.753979 ]]
Iteration 200 of 1000: loss=0.761 " + "l1=0.653" + "l2=0.108 f=-0.59 shape=(1, 9000, 1)
logits [[ 5.496004  -2.857393   3.4880602 -8.487081 ]]
Iteration 300 of 1000: loss=0.715 " + "l1=0.576" + "l2=0.139 f=-0.578 shape=(1, 9000, 1)
logits [[ 5.233071  -2.8402145  3.4615724 -8.1683655]]
Iteration 400 of 1000: loss=0.679 " + "l1=0.523" + "l2=0.156 f=-0.568 shape=(1, 9000, 1)
logits [[ 5.058527  -2.8395045  3.450091  -7.9428644]]
Iteration 500 of 1000: loss=0.644 " + "l1=0.472" + "l2=0.172 f=-0.561 shape=(1, 9000, 1)
logits [[ 4.886944  -2.835816   3.4359636 -7.730719 ]]
Iteration 600 of 1000: loss=0.613 " + "l1=0.431" + "l2=0.182 f=-0.552 shape=(1, 9000, 1)
logits [[ 4.736019  -2.8153696  3.4112434 -7.540899 ]]
Iteration 700 of 1000: loss=0.58 " + "l1=0.387" + "l2=0.193 f=-0.536 shape=(1, 9000, 1)
logits [[ 4.567536  -2.7739196  3.3758676 -7.313392 ]]
Iteration 800 of 1000: loss=0.548 " + "l1=0.352" + "l2=0.196 f=-0.521 shape=(1, 9000, 1)
logits [[ 4.4239535 -2.7340775  3.3397472 -7.1117263]]
Iteration 900 of 1000: loss=0.515 " + "l1=0.317" + "l2=0.198 f=-0.503 shape=(1, 9000, 1)
logits [[ 4.2741947 -2.6864884  3.2980843 -6.89959  ]]
--- 261.7142505645752 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.156 " + "l1=0.156" + "l2=0 f=-0.598 shape=(1, 9000, 1)
logits [[ 6.281379  -2.7918756  3.4146054 -9.29433  ]]
Iteration 100 of 1000: loss=0.155 " + "l1=0.155" + "l2=0.000436 f=-0.593 shape=(1, 9000, 1)
logits [[ 6.23121   -2.7736337  3.3945374 -9.225989 ]]
Iteration 200 of 1000: loss=0.155 " + "l1=0.154" + "l2=0.000499 f=-0.592 shape=(1, 9000, 1)
logits [[ 6.220553  -2.7692144  3.389313  -9.210616 ]]
Iteration 300 of 1000: loss=0.155 " + "l1=0.154" + "l2=0.000603 f=-0.591 shape=(1, 9000, 1)
logits [[ 6.2082376 -2.764228   3.383292  -9.193172 ]]
Iteration 400 of 1000: loss=0.154 " + "l1=0.154" + "l2=0.000758 f=-0.59 shape=(1, 9000, 1)
logits [[ 6.1960325 -2.7594671  3.377415  -9.175794 ]]
Iteration 500 of 1000: loss=0.154 " + "l1=0.153" + "l2=0.000852 f=-0.589 shape=(1, 9000, 1)
logits [[ 6.1836753 -2.7546272  3.3714836 -9.158375 ]]
Iteration 600 of 1000: loss=0.154 " + "l1=0.153" + "l2=0.00104 f=-0.588 shape=(1, 9000, 1)
logits [[ 6.171494  -2.7498171  3.3657203 -9.141241 ]]
Iteration 700 of 1000: loss=0.154 " + "l1=0.153" + "l2=0.00115 f=-0.587 shape=(1, 9000, 1)
logits [[ 6.1594567 -2.7450035  3.3600893 -9.124462 ]]
Iteration 800 of 1000: loss=0.154 " + "l1=0.153" + "l2=0.00131 f=-0.587 shape=(1, 9000, 1)
logits [[ 6.1477385 -2.7404037  3.3546894 -9.108103 ]]
Iteration 900 of 1000: loss=0.154 " + "l1=0.152" + "l2=0.00141 f=-0.586 shape=(1, 9000, 1)
logits [[ 6.1364517 -2.736341   3.3496861 -9.092428 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.56 " + "l1=1.56" + "l2=0 f=-0.598 shape=(1, 9000, 1)
logits [[ 6.281379  -2.7918756  3.4146054 -9.29433  ]]
Iteration 100 of 1000: loss=1.48 " + "l1=1.43" + "l2=0.046 f=-0.563 shape=(1, 9000, 1)
logits [[ 5.7472434 -2.6263568  3.2220795 -8.594676 ]]
Iteration 200 of 1000: loss=1.44 " + "l1=1.38" + "l2=0.0611 f=-0.543 shape=(1, 9000, 1)
logits [[ 5.53371   -2.5573773  3.1391282 -8.288508 ]]
Iteration 300 of 1000: loss=1.41 " + "l1=1.32" + "l2=0.0833 f=-0.522 shape=(1, 9000, 1)
logits [[ 5.2811837 -2.4649322  3.0398254 -7.9433227]]
Iteration 400 of 1000: loss=1.37 " + "l1=1.26" + "l2=0.102 f=-0.504 shape=(1, 9000, 1)
logits [[ 5.0314803 -2.3760107  2.9454052 -7.617022 ]]
Iteration 500 of 1000: loss=1.34 " + "l1=1.22" + "l2=0.119 f=-0.488 shape=(1, 9000, 1)
logits [[ 4.8301506 -2.3109493  2.8697834 -7.3420196]]
Iteration 600 of 1000: loss=1.3 " + "l1=1.17" + "l2=0.132 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.6352916 -2.250984   2.8049319 -7.08072  ]]
Iteration 700 of 1000: loss=1.27 " + "l1=1.13" + "l2=0.145 f=-0.456 shape=(1, 9000, 1)
logits [[ 4.4438834 -2.1949973  2.7432098 -6.8169227]]
Iteration 800 of 1000: loss=1.24 " + "l1=1.08" + "l2=0.155 f=-0.441 shape=(1, 9000, 1)
logits [[ 4.264822  -2.1263704  2.6733007 -6.576648 ]]
Iteration 900 of 1000: loss=1.21 " + "l1=1.04" + "l2=0.167 f=-0.427 shape=(1, 9000, 1)
logits [[ 4.09444   -2.0610583  2.604857  -6.3457003]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=15.6 " + "l1=15.6" + "l2=0 f=-0.598 shape=(1, 9000, 1)
logits [[ 6.281379  -2.7918756  3.4146054 -9.29433  ]]
Iteration 100 of 1000: loss=8.1 " + "l1=4.9" + "l2=3.2 f=-0.189 shape=(1, 9000, 1)
logits [[ 1.8528693 -1.4382975  1.863876  -3.0341885]]
Iteration 200 of 1000: loss=5.95 " + "l1=2.44" + "l2=3.51 f=-0.0761 shape=(1, 9000, 1)
logits [[ 1.0422779 -1.1009068  1.0986001 -1.3444816]]
Iteration 300 of 1000: loss=4.51 " + "l1=0.62" + "l2=3.89 f=-0.0628 shape=(1, 9000, 1)
logits [[-0.00793582 -0.8723918   0.62460285  0.00452067]]
Iteration 400 of 1000: loss=3.48 " + "l1=0.0209" + "l2=3.45 f=-0.0822 shape=(1, 9000, 1)
logits [[-0.29288667 -0.8309725   0.40795875  0.38701746]]
Iteration 500 of 1000: loss=2.94 " + "l1=0.0738" + "l2=2.86 f=-0.103 shape=(1, 9000, 1)
logits [[-0.21144316 -0.81173486  0.3419249   0.2681613 ]]
Iteration 600 of 1000: loss=2.52 " + "l1=0.0168" + "l2=2.51 f=-0.119 shape=(1, 9000, 1)
logits [[-0.21096689 -0.78509223  0.26765516  0.2508595 ]]
Iteration 700 of 1000: loss=2.28 " + "l1=0.0229" + "l2=2.26 f=-0.13 shape=(1, 9000, 1)
logits [[-0.19652052 -0.7773944   0.23864767  0.21574154]]
Iteration 800 of 1000: loss=2.11 " + "l1=0.00448" + "l2=2.1 f=-0.14 shape=(1, 9000, 1)
logits [[-0.20674653 -0.7662882   0.20881285  0.20433185]]
Iteration 900 of 1000: loss=1.97 " + "l1=0.00793" + "l2=1.96 f=-0.144 shape=(1, 9000, 1)
logits [[-0.18681759 -0.7784243   0.19872008  0.19078848]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=8.57 " + "l1=8.57" + "l2=0 f=-0.598 shape=(1, 9000, 1)
logits [[ 6.281379  -2.7918756  3.4146054 -9.29433  ]]
Iteration 100 of 1000: loss=5.93 " + "l1=4.51" + "l2=1.42 f=-0.341 shape=(1, 9000, 1)
logits [[ 3.146976  -1.8792192  2.4279869 -5.058943 ]]
Iteration 200 of 1000: loss=4.61 " + "l1=2.77" + "l2=1.83 f=-0.191 shape=(1, 9000, 1)
logits [[ 1.9096314 -1.4443228  1.9007465 -3.1293118]]
Iteration 300 of 1000: loss=3.89 " + "l1=2.07" + "l2=1.81 f=-0.133 shape=(1, 9000, 1)
logits [[ 1.478025  -1.1983591  1.4786209 -2.2916203]]
Iteration 400 of 1000: loss=3.28 " + "l1=1.5" + "l2=1.79 f=-0.118 shape=(1, 9000, 1)
logits [[ 1.0882123 -1.0546453  1.1074618 -1.6129423]]
Iteration 500 of 1000: loss=2.82 " + "l1=1.06" + "l2=1.76 f=-0.0857 shape=(1, 9000, 1)
logits [[ 0.8164933 -0.9631412  0.8624333 -1.0584662]]
Iteration 600 of 1000: loss=2.45 " + "l1=0.646" + "l2=1.8 f=-0.0538 shape=(1, 9000, 1)
logits [[ 0.5593709 -0.9217256  0.6608247 -0.5138614]]
Iteration 700 of 1000: loss=2.06 " + "l1=0.136" + "l2=1.93 f=-0.0361 shape=(1, 9000, 1)
logits [[ 0.18382338 -0.87553346  0.39764604  0.14970782]]
Iteration 800 of 1000: loss=1.77 " + "l1=0" + "l2=1.77 f=-0.0359 shape=(1, 9000, 1)
logits [[ 0.08918473 -0.92654586  0.3322377   0.36135337]]
Iteration 900 of 1000: loss=1.6 " + "l1=0" + "l2=1.6 f=-0.0416 shape=(1, 9000, 1)
logits [[ 0.13845472 -0.9684937   0.3318474   0.3319782 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.06 " + "l1=5.06" + "l2=0 f=-0.598 shape=(1, 9000, 1)
logits [[ 6.281379  -2.7918756  3.4146054 -9.29433  ]]
Iteration 100 of 1000: loss=4.14 " + "l1=3.6" + "l2=0.534 f=-0.449 shape=(1, 9000, 1)
logits [[ 4.3525043 -2.2011428  2.791514  -6.738329 ]]
Iteration 200 of 1000: loss=3.6 " + "l1=2.82" + "l2=0.778 f=-0.333 shape=(1, 9000, 1)
logits [[ 3.4116583 -1.9561286  2.4771466 -5.266442 ]]
Iteration 300 of 1000: loss=3.19 " + "l1=2.24" + "l2=0.954 f=-0.246 shape=(1, 9000, 1)
logits [[ 2.7191985 -1.7609392  2.2181656 -4.1601853]]
Iteration 400 of 1000: loss=2.77 " + "l1=1.69" + "l2=1.09 f=-0.187 shape=(1, 9000, 1)
logits [[ 2.0063653 -1.4933418  1.9215237 -3.182584 ]]
Iteration 500 of 1000: loss=2.4 " + "l1=1.31" + "l2=1.08 f=-0.155 shape=(1, 9000, 1)
logits [[ 1.5716983 -1.3127276  1.5780714 -2.4585998]]
Iteration 600 of 1000: loss=2.12 " + "l1=1.05" + "l2=1.07 f=-0.137 shape=(1, 9000, 1)
logits [[ 1.2938584 -1.2398694  1.310008  -1.9122767]]
Iteration 700 of 1000: loss=1.95 " + "l1=0.892" + "l2=1.06 f=-0.12 shape=(1, 9000, 1)
logits [[ 1.1523744 -1.1951243  1.1532581 -1.5924296]]
Iteration 800 of 1000: loss=1.82 " + "l1=0.758" + "l2=1.06 f=-0.0939 shape=(1, 9000, 1)
logits [[ 1.0308757 -1.1455084  1.0354261 -1.2963685]]
Iteration 900 of 1000: loss=1.7 " + "l1=0.615" + "l2=1.08 f=-0.069 shape=(1, 9000, 1)
logits [[ 0.8974346  -1.0746441   0.89700156 -0.99577135]]
--- 295.1493146419525 seconds ---
Adv result:3
Loading record A04030
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0534 " + "l1=0.0534" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.7488294 -2.5894382  2.3872163 -4.152818 ]]
Iteration 100 of 1000: loss=0.0531 " + "l1=0.0528" + "l2=0.000222 f=-0.399 shape=(1, 9000, 1)
logits [[ 2.7124083 -2.5707958  2.373333  -4.112846 ]]
Iteration 200 of 1000: loss=0.053 " + "l1=0.0527" + "l2=0.000224 f=-0.399 shape=(1, 9000, 1)
logits [[ 2.7056046 -2.5675523  2.370273  -4.1044445]]
Iteration 300 of 1000: loss=0.0529 " + "l1=0.0526" + "l2=0.00028 f=-0.399 shape=(1, 9000, 1)
logits [[ 2.69711   -2.5636275  2.3665304 -4.0945215]]
Iteration 400 of 1000: loss=0.0528 " + "l1=0.0525" + "l2=0.000338 f=-0.398 shape=(1, 9000, 1)
logits [[ 2.6883512 -2.5596871  2.3626394 -4.0842586]]
Iteration 500 of 1000: loss=0.0528 " + "l1=0.0523" + "l2=0.000404 f=-0.398 shape=(1, 9000, 1)
logits [[ 2.6792207 -2.555767   2.3586345 -4.0736346]]
Iteration 600 of 1000: loss=0.0527 " + "l1=0.0522" + "l2=0.000531 f=-0.398 shape=(1, 9000, 1)
logits [[ 2.6699612 -2.5518389  2.3545816 -4.0628824]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.534 " + "l1=0.534" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.7488294 -2.5894382  2.3872163 -4.152818 ]]
Iteration 100 of 1000: loss=0.505 " + "l1=0.489" + "l2=0.0159 f=-0.382 shape=(1, 9000, 1)
logits [[ 2.4536147 -2.434009   2.274513  -3.822238 ]]
Iteration 200 of 1000: loss=0.49 " + "l1=0.468" + "l2=0.0218 f=-0.373 shape=(1, 9000, 1)
logits [[ 2.3184748 -2.366021   2.2135715 -3.6581166]]
Iteration 300 of 1000: loss=0.476 " + "l1=0.449" + "l2=0.0263 f=-0.367 shape=(1, 9000, 1)
logits [[ 2.1864653 -2.305394   2.1516101 -3.4998753]]
Iteration 400 of 1000: loss=0.462 " + "l1=0.435" + "l2=0.0271 f=-0.365 shape=(1, 9000, 1)
logits [[ 2.0875425 -2.2566743  2.0884547 -3.3812275]]
Iteration 500 of 1000: loss=0.451 " + "l1=0.424" + "l2=0.0268 f=-0.363 shape=(1, 9000, 1)
logits [[ 2.0296664 -2.2097104  2.0305784 -3.3030386]]
Iteration 600 of 1000: loss=0.443 " + "l1=0.416" + "l2=0.0272 f=-0.361 shape=(1, 9000, 1)
logits [[ 1.9810443 -2.176345   1.9835334 -3.2338324]]
Iteration 700 of 1000: loss=0.437 " + "l1=0.409" + "l2=0.0282 f=-0.362 shape=(1, 9000, 1)
logits [[ 1.9371972 -2.149588   1.9398913 -3.1761975]]
Iteration 800 of 1000: loss=0.432 " + "l1=0.403" + "l2=0.0293 f=-0.363 shape=(1, 9000, 1)
logits [[ 1.8999467 -2.1259387  1.9000582 -3.1248455]]
Iteration 900 of 1000: loss=0.428 " + "l1=0.397" + "l2=0.0305 f=-0.363 shape=(1, 9000, 1)
logits [[ 1.8621424 -2.1050963  1.8661032 -3.0741096]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.34 " + "l1=5.34" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.7488294 -2.5894382  2.3872163 -4.152818 ]]
Iteration 100 of 1000: loss=3.68 " + "l1=3.06" + "l2=0.62 f=-0.339 shape=(1, 9000, 1)
logits [[ 1.4316854 -1.5804183  1.4777923 -2.6847305]]
Iteration 200 of 1000: loss=3.16 " + "l1=2.38" + "l2=0.781 f=-0.327 shape=(1, 9000, 1)
logits [[ 0.8820108 -1.2826257  1.1007192 -2.0073953]]
Iteration 300 of 1000: loss=2.78 " + "l1=1.85" + "l2=0.925 f=-0.318 shape=(1, 9000, 1)
logits [[ 0.44809845 -1.0619022   0.7912369  -1.4491479 ]]
Iteration 400 of 1000: loss=2.28 " + "l1=1.27" + "l2=1.01 f=-0.307 shape=(1, 9000, 1)
logits [[ 0.02689383 -0.8351317   0.43476534 -0.85472536]]
Iteration 500 of 1000: loss=1.78 " + "l1=0.774" + "l2=1.01 f=-0.279 shape=(1, 9000, 1)
logits [[-0.2838311  -0.601914    0.17205992 -0.40128547]]
Iteration 600 of 1000: loss=1.53 " + "l1=0.547" + "l2=0.987 f=-0.262 shape=(1, 9000, 1)
logits [[-0.36949053 -0.48643142  0.06094573 -0.25235847]]
Iteration 700 of 1000: loss=1.32 " + "l1=0.315" + "l2=1 f=-0.259 shape=(1, 9000, 1)
logits [[-0.49778065 -0.37979212 -0.06454136 -0.09322585]]
Iteration 800 of 1000: loss=1.2 " + "l1=0.222" + "l2=0.979 f=-0.27 shape=(1, 9000, 1)
logits [[-0.49393848 -0.3169745  -0.09492266 -0.17420092]]
Iteration 900 of 1000: loss=1.11 " + "l1=0.122" + "l2=0.985 f=-0.273 shape=(1, 9000, 1)
logits [[-0.5333825  -0.26301616 -0.14118211 -0.15298557]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=53.4 " + "l1=53.4" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.7488294 -2.5894382  2.3872163 -4.152818 ]]
Iteration 100 of 1000: loss=8.98 " + "l1=0.0823" + "l2=8.9 f=-0.331 shape=(1, 9000, 1)
logits [[-0.7605421  -0.17148997 -0.16326174 -0.22971633]]
Iteration 200 of 1000: loss=5.42 " + "l1=0.00848" + "l2=5.41 f=-0.298 shape=(1, 9000, 1)
logits [[-0.6774269  -0.1530978  -0.15224986 -0.20975769]]
Iteration 300 of 1000: loss=4.45 " + "l1=0" + "l2=4.45 f=-0.292 shape=(1, 9000, 1)
logits [[-0.6504841  -0.14697126 -0.15963799 -0.21011549]]
Iteration 400 of 1000: loss=3.95 " + "l1=0" + "l2=3.95 f=-0.287 shape=(1, 9000, 1)
logits [[-0.66620266 -0.13824113 -0.16719016 -0.17482778]]
Iteration 500 of 1000: loss=3.59 " + "l1=0.0768" + "l2=3.51 f=-0.295 shape=(1, 9000, 1)
logits [[-0.62979424 -0.14254065 -0.13485947 -0.2710831 ]]
Iteration 600 of 1000: loss=3.25 " + "l1=0.0276" + "l2=3.23 f=-0.291 shape=(1, 9000, 1)
logits [[-0.64262795 -0.15108739 -0.14832696 -0.22392666]]
Iteration 700 of 1000: loss=3.03 " + "l1=0" + "l2=3.03 f=-0.291 shape=(1, 9000, 1)
logits [[-0.6592738  -0.15242358 -0.16035587 -0.1927844 ]]
Iteration 800 of 1000: loss=2.83 " + "l1=0" + "l2=2.83 f=-0.291 shape=(1, 9000, 1)
logits [[-0.6523348  -0.1596353  -0.16059242 -0.1931605 ]]
Iteration 900 of 1000: loss=2.72 " + "l1=0.0684" + "l2=2.65 f=-0.295 shape=(1, 9000, 1)
logits [[-0.6518277  -0.16404356 -0.15720391 -0.20719713]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=29.4 " + "l1=29.4" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.7488294 -2.5894382  2.3872163 -4.152818 ]]
Iteration 100 of 1000: loss=8.46 " + "l1=2.41" + "l2=6.04 f=-0.325 shape=(1, 9000, 1)
logits [[-0.5040949  -0.3818714   0.05687709 -0.4715219 ]]
Iteration 200 of 1000: loss=4.4 " + "l1=0.023" + "l2=4.38 f=-0.291 shape=(1, 9000, 1)
logits [[-0.68140286 -0.15868933 -0.15451382 -0.1702896 ]]
Iteration 300 of 1000: loss=3.64 " + "l1=0.0219" + "l2=3.62 f=-0.289 shape=(1, 9000, 1)
logits [[-0.67365456 -0.15869139 -0.15471135 -0.17047825]]
Iteration 400 of 1000: loss=3.24 " + "l1=0" + "l2=3.24 f=-0.297 shape=(1, 9000, 1)
logits [[-0.69704133 -0.15736035 -0.16221114 -0.17253593]]
Iteration 500 of 1000: loss=2.97 " + "l1=0" + "l2=2.97 f=-0.297 shape=(1, 9000, 1)
logits [[-0.6800564  -0.15669684 -0.17019989 -0.17911774]]
Iteration 600 of 1000: loss=2.73 " + "l1=0" + "l2=2.73 f=-0.297 shape=(1, 9000, 1)
logits [[-0.67321485 -0.16252108 -0.17031412 -0.18048948]]
Iteration 700 of 1000: loss=2.52 " + "l1=0" + "l2=2.52 f=-0.302 shape=(1, 9000, 1)
logits [[-0.6654167  -0.16272195 -0.16533746 -0.21312886]]
Iteration 800 of 1000: loss=2.32 " + "l1=0.0109" + "l2=2.31 f=-0.3 shape=(1, 9000, 1)
logits [[-0.67822057 -0.17316633 -0.17118175 -0.17643335]]
Iteration 900 of 1000: loss=2.16 " + "l1=0" + "l2=2.16 f=-0.303 shape=(1, 9000, 1)
logits [[-0.70095307 -0.15450792 -0.17789704 -0.17738008]]
--- 272.126513004303 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00362 " + "l1=0.00362" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.7488294 -2.5894382  2.3872163 -4.152818 ]]
Iteration 100 of 1000: loss=0.00349 " + "l1=0.00337" + "l2=0.000116 f=-0.401 shape=(1, 9000, 1)
logits [[ 2.7250245 -2.5873773  2.3875327 -4.1286364]]
Iteration 200 of 1000: loss=0.00345 " + "l1=0.00335" + "l2=0.0001 f=-0.401 shape=(1, 9000, 1)
logits [[ 2.7226152 -2.5873837  2.3874316 -4.125652 ]]
Iteration 300 of 1000: loss=0.00344 " + "l1=0.00331" + "l2=0.000124 f=-0.401 shape=(1, 9000, 1)
logits [[ 2.7183752 -2.5872428  2.3872588 -4.1207147]]
Iteration 400 of 1000: loss=0.00345 " + "l1=0.00327" + "l2=0.000179 f=-0.4 shape=(1, 9000, 1)
logits [[ 2.7137437 -2.5870516  2.3870811 -4.115359 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0362 " + "l1=0.0362" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.7488294 -2.5894382  2.3872163 -4.152818 ]]
Iteration 100 of 1000: loss=0.0252 " + "l1=0.0192" + "l2=0.00598 f=-0.396 shape=(1, 9000, 1)
logits [[ 2.582372  -2.5754     2.3902783 -3.9832172]]
Iteration 200 of 1000: loss=0.0205 " + "l1=0.0125" + "l2=0.00807 f=-0.395 shape=(1, 9000, 1)
logits [[ 2.5121496 -2.5736418  2.3875346 -3.9051397]]
Iteration 300 of 1000: loss=0.0163 " + "l1=0.00651" + "l2=0.00975 f=-0.392 shape=(1, 9000, 1)
logits [[ 2.4482594 -2.570197   2.3831599 -3.8303592]]
Iteration 400 of 1000: loss=0.012 " + "l1=0.000916" + "l2=0.0111 f=-0.39 shape=(1, 9000, 1)
logits [[ 2.3902404 -2.5675724  2.3810847 -3.761938 ]]
Iteration 500 of 1000: loss=0.00907 " + "l1=0" + "l2=0.00907 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.375047  -2.5664446  2.375706  -3.7376847]]
Iteration 600 of 1000: loss=0.0075 " + "l1=9.72e-05" + "l2=0.00741 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.373337  -2.5646908  2.3723652 -3.729075 ]]
Iteration 700 of 1000: loss=0.00658 " + "l1=6.69e-05" + "l2=0.00651 f=-0.385 shape=(1, 9000, 1)
logits [[ 2.3703172 -2.5625534  2.3696485 -3.7185977]]
Iteration 800 of 1000: loss=0.00569 " + "l1=0" + "l2=0.00569 f=-0.384 shape=(1, 9000, 1)
logits [[ 2.3681452 -2.5611007  2.3683183 -3.7117164]]
Iteration 900 of 1000: loss=0.00505 " + "l1=7.96e-05" + "l2=0.00497 f=-0.383 shape=(1, 9000, 1)
logits [[ 2.367775  -2.5591547  2.3669791 -3.7075927]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0199 " + "l1=0.0199" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.7488294 -2.5894382  2.3872163 -4.152818 ]]
Iteration 100 of 1000: loss=0.0165 " + "l1=0.0146" + "l2=0.00187 f=-0.399 shape=(1, 9000, 1)
logits [[ 2.6545775 -2.5814514  2.3889892 -4.0563364]]
Iteration 200 of 1000: loss=0.0153 " + "l1=0.0129" + "l2=0.00236 f=-0.398 shape=(1, 9000, 1)
logits [[ 2.6222997 -2.5802882  2.387885  -4.0207105]]
Iteration 300 of 1000: loss=0.014 " + "l1=0.0111" + "l2=0.00289 f=-0.397 shape=(1, 9000, 1)
logits [[ 2.589199  -2.5791652  2.3865588 -3.9828079]]
Iteration 400 of 1000: loss=0.0128 " + "l1=0.00944" + "l2=0.00339 f=-0.395 shape=(1, 9000, 1)
logits [[ 2.5567782 -2.5775218  2.3850634 -3.9442596]]
Iteration 500 of 1000: loss=0.0116 " + "l1=0.00776" + "l2=0.00382 f=-0.393 shape=(1, 9000, 1)
logits [[ 2.5241385 -2.5754306  2.3830512 -3.905665 ]]
Iteration 600 of 1000: loss=0.0104 " + "l1=0.00619" + "l2=0.00424 f=-0.392 shape=(1, 9000, 1)
logits [[ 2.4935048 -2.5730562  2.3810024 -3.8690848]]
Iteration 700 of 1000: loss=0.00931 " + "l1=0.00457" + "l2=0.00474 f=-0.39 shape=(1, 9000, 1)
logits [[ 2.462389  -2.5704598  2.3792753 -3.8314369]]
Iteration 800 of 1000: loss=0.0083 " + "l1=0.00317" + "l2=0.00513 f=-0.389 shape=(1, 9000, 1)
logits [[ 2.4347925 -2.5675952  2.3772345 -3.7993107]]
Iteration 900 of 1000: loss=0.00735 " + "l1=0.00178" + "l2=0.00557 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.4065466 -2.5639558  2.374135  -3.7655137]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.028 " + "l1=0.028" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.7488294 -2.5894382  2.3872163 -4.152818 ]]
Iteration 100 of 1000: loss=0.0214 " + "l1=0.0178" + "l2=0.00361 f=-0.398 shape=(1, 9000, 1)
logits [[ 2.6191986 -2.578386   2.389505  -4.020369 ]]
Iteration 200 of 1000: loss=0.0187 " + "l1=0.0139" + "l2=0.00483 f=-0.396 shape=(1, 9000, 1)
logits [[ 2.5673945 -2.576797   2.3877742 -3.961997 ]]
Iteration 300 of 1000: loss=0.0162 " + "l1=0.0103" + "l2=0.00585 f=-0.394 shape=(1, 9000, 1)
logits [[ 2.5186288 -2.575257   2.3852093 -3.9059858]]
Iteration 400 of 1000: loss=0.0137 " + "l1=0.0071" + "l2=0.00662 f=-0.392 shape=(1, 9000, 1)
logits [[ 2.4739995 -2.5723014  2.3823264 -3.853596 ]]
Iteration 500 of 1000: loss=0.0113 " + "l1=0.00381" + "l2=0.00746 f=-0.39 shape=(1, 9000, 1)
logits [[ 2.4292233 -2.569723   2.3800704 -3.8000329]]
Iteration 600 of 1000: loss=0.00906 " + "l1=0.000916" + "l2=0.00815 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.388383  -2.5657766  2.376561  -3.7522392]]
Iteration 700 of 1000: loss=0.00722 " + "l1=0" + "l2=0.00722 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.3719704 -2.5632305  2.3722665 -3.728185 ]]
Iteration 800 of 1000: loss=0.00653 " + "l1=0.000133" + "l2=0.0064 f=-0.385 shape=(1, 9000, 1)
logits [[ 2.3716602 -2.5620599  2.369948  -3.7207768]]
Iteration 900 of 1000: loss=0.00555 " + "l1=4.41e-05" + "l2=0.0055 f=-0.384 shape=(1, 9000, 1)
logits [[ 2.368983  -2.5602276  2.3684142 -3.7134697]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.024 " + "l1=0.024" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.7488294 -2.5894382  2.3872163 -4.152818 ]]
Iteration 100 of 1000: loss=0.0191 " + "l1=0.0164" + "l2=0.00266 f=-0.398 shape=(1, 9000, 1)
logits [[ 2.637228 -2.579826  2.389383 -4.038824]]
Iteration 200 of 1000: loss=0.0172 " + "l1=0.0137" + "l2=0.0035 f=-0.397 shape=(1, 9000, 1)
logits [[ 2.5956948 -2.5784838  2.3882008 -3.9929082]]
Iteration 300 of 1000: loss=0.0154 " + "l1=0.0112" + "l2=0.00424 f=-0.395 shape=(1, 9000, 1)
logits [[ 2.554568  -2.5769677  2.3859785 -3.9444265]]
Iteration 400 of 1000: loss=0.0136 " + "l1=0.00871" + "l2=0.00491 f=-0.394 shape=(1, 9000, 1)
logits [[ 2.5153306 -2.5753481  2.383932  -3.8987162]]
Iteration 500 of 1000: loss=0.0119 " + "l1=0.00641" + "l2=0.00549 f=-0.392 shape=(1, 9000, 1)
logits [[ 2.4778996 -2.5726006  2.3811522 -3.8543842]]
Iteration 600 of 1000: loss=0.0102 " + "l1=0.00407" + "l2=0.00608 f=-0.39 shape=(1, 9000, 1)
logits [[ 2.4407096 -2.570155   2.3793054 -3.8099382]]
Iteration 700 of 1000: loss=0.00857 " + "l1=0.00194" + "l2=0.00663 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.405422  -2.5663948  2.3761463 -3.7685401]]
Iteration 800 of 1000: loss=0.00717 " + "l1=0.000207" + "l2=0.00696 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.375607  -2.5631537  2.3724847 -3.731511 ]]
Iteration 900 of 1000: loss=0.00627 " + "l1=4.27e-05" + "l2=0.00623 f=-0.385 shape=(1, 9000, 1)
logits [[ 2.3704607 -2.5615945  2.3698158 -3.7192047]]
--- 266.3389084339142 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.069 " + "l1=0.069" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.7488294 -2.5894382  2.3872163 -4.152818 ]]
Iteration 100 of 1000: loss=0.0681 " + "l1=0.0676" + "l2=0.000499 f=-0.396 shape=(1, 9000, 1)
logits [[ 2.6925652 -2.5753226  2.3689613 -4.0711665]]
Iteration 200 of 1000: loss=0.0678 " + "l1=0.0673" + "l2=0.000577 f=-0.395 shape=(1, 9000, 1)
logits [[ 2.676986  -2.5725658  2.36339   -4.0482087]]
Iteration 300 of 1000: loss=0.0675 " + "l1=0.0668" + "l2=0.000707 f=-0.394 shape=(1, 9000, 1)
logits [[ 2.6589537 -2.5692492  2.3568501 -4.022059 ]]
Iteration 400 of 1000: loss=0.0672 " + "l1=0.0664" + "l2=0.00085 f=-0.393 shape=(1, 9000, 1)
logits [[ 2.6411257 -2.5658548  2.3503993 -3.996557 ]]
Iteration 500 of 1000: loss=0.0669 " + "l1=0.0659" + "l2=0.00101 f=-0.392 shape=(1, 9000, 1)
logits [[ 2.622789  -2.5621173  2.343783  -3.970801 ]]
Iteration 600 of 1000: loss=0.0667 " + "l1=0.0655" + "l2=0.00118 f=-0.39 shape=(1, 9000, 1)
logits [[ 2.6044898 -2.5583549  2.337301  -3.9452872]]
Iteration 700 of 1000: loss=0.0665 " + "l1=0.0651" + "l2=0.00144 f=-0.389 shape=(1, 9000, 1)
logits [[ 2.586912  -2.5547044  2.331074  -3.9209273]]
Iteration 800 of 1000: loss=0.0662 " + "l1=0.0647" + "l2=0.0015 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.5693078 -2.5509589  2.3248382 -3.8966053]]
Iteration 900 of 1000: loss=0.0659 " + "l1=0.0642" + "l2=0.00173 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.5504155 -2.547043   2.317848  -3.8699937]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.69 " + "l1=0.69" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.7488294 -2.5894382  2.3872163 -4.152818 ]]
Iteration 100 of 1000: loss=0.608 " + "l1=0.566" + "l2=0.042 f=-0.353 shape=(1, 9000, 1)
logits [[ 2.2383542 -2.4534183  2.225268  -3.4216158]]
Iteration 200 of 1000: loss=0.575 " + "l1=0.535" + "l2=0.0403 f=-0.34 shape=(1, 9000, 1)
logits [[ 2.1295328 -2.4021266  2.129018  -3.2171497]]
Iteration 300 of 1000: loss=0.549 " + "l1=0.503" + "l2=0.0456 f=-0.325 shape=(1, 9000, 1)
logits [[ 2.0012283 -2.3468726  2.038133  -2.9913921]]
Iteration 400 of 1000: loss=0.52 " + "l1=0.466" + "l2=0.0532 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.8215044 -2.298792   1.9540628 -2.7094784]]
Iteration 500 of 1000: loss=0.49 " + "l1=0.429" + "l2=0.061 f=-0.298 shape=(1, 9000, 1)
logits [[ 1.6348859 -2.2626767  1.864504  -2.4276981]]
Iteration 600 of 1000: loss=0.457 " + "l1=0.387" + "l2=0.0695 f=-0.291 shape=(1, 9000, 1)
logits [[ 1.4169353 -2.2218637  1.7561636 -2.115588 ]]
Iteration 700 of 1000: loss=0.426 " + "l1=0.348" + "l2=0.0774 f=-0.287 shape=(1, 9000, 1)
logits [[ 1.2225697 -2.1851654  1.6480942 -1.8329209]]
Iteration 800 of 1000: loss=0.399 " + "l1=0.311" + "l2=0.0873 f=-0.282 shape=(1, 9000, 1)
logits [[ 1.0420135 -2.1445892  1.5424045 -1.5696461]]
Iteration 900 of 1000: loss=0.375 " + "l1=0.278" + "l2=0.0972 f=-0.274 shape=(1, 9000, 1)
logits [[ 0.884559  -2.0934496  1.4468563 -1.3329053]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.9 " + "l1=6.9" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.7488294 -2.5894382  2.3872163 -4.152818 ]]
Iteration 100 of 1000: loss=2.66 " + "l1=0.771" + "l2=1.88 f=-0.18 shape=(1, 9000, 1)
logits [[ 0.26281047 -1.9869319   0.8875394   0.11606319]]
Iteration 200 of 1000: loss=1.48 " + "l1=0.0132" + "l2=1.46 f=-0.182 shape=(1, 9000, 1)
logits [[-0.08967893 -1.9085344   0.6411861   0.628027  ]]
Iteration 300 of 1000: loss=1.05 " + "l1=0" + "l2=1.05 f=-0.186 shape=(1, 9000, 1)
logits [[-0.15883246 -1.9083803   0.65364003  0.67145115]]
Iteration 400 of 1000: loss=0.784 " + "l1=0" + "l2=0.784 f=-0.188 shape=(1, 9000, 1)
logits [[-0.21139872 -1.8889738   0.6720916   0.6745625 ]]
Iteration 500 of 1000: loss=0.646 " + "l1=0.0145" + "l2=0.631 f=-0.188 shape=(1, 9000, 1)
logits [[-0.24806811 -1.8718015   0.69046265  0.6759205 ]]
Iteration 600 of 1000: loss=0.543 " + "l1=0" + "l2=0.543 f=-0.188 shape=(1, 9000, 1)
logits [[-0.30069754 -1.8489751   0.6903188   0.70569104]]
Iteration 700 of 1000: loss=0.483 " + "l1=0.0112" + "l2=0.472 f=-0.188 shape=(1, 9000, 1)
logits [[-0.31186154 -1.8368896   0.703088    0.69189095]]
Iteration 800 of 1000: loss=0.428 " + "l1=0" + "l2=0.428 f=-0.188 shape=(1, 9000, 1)
logits [[-0.35052934 -1.8311325   0.7081348   0.72177804]]
Iteration 900 of 1000: loss=0.393 " + "l1=0" + "l2=0.393 f=-0.188 shape=(1, 9000, 1)
logits [[-0.37736237 -1.8207687   0.7173372   0.72724134]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.8 " + "l1=3.8" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.7488294 -2.5894382  2.3872163 -4.152818 ]]
Iteration 100 of 1000: loss=2.23 " + "l1=1.51" + "l2=0.715 f=-0.228 shape=(1, 9000, 1)
logits [[ 1.0419061 -2.092891   1.4444735 -1.3035303]]
Iteration 200 of 1000: loss=1.49 " + "l1=0.559" + "l2=0.932 f=-0.189 shape=(1, 9000, 1)
logits [[ 0.33850765 -2.0084994   0.96483594 -0.05207126]]
Iteration 300 of 1000: loss=0.829 " + "l1=0.00145" + "l2=0.828 f=-0.186 shape=(1, 9000, 1)
logits [[-0.18597522 -1.8924303   0.66943645  0.66680795]]
Iteration 400 of 1000: loss=0.579 " + "l1=0" + "l2=0.579 f=-0.191 shape=(1, 9000, 1)
logits [[-0.23121509 -1.8447998   0.6536208   0.65764993]]
Iteration 500 of 1000: loss=0.47 " + "l1=0.012" + "l2=0.458 f=-0.193 shape=(1, 9000, 1)
logits [[-0.25185254 -1.8096391   0.6566835   0.634801  ]]
Iteration 600 of 1000: loss=0.402 " + "l1=0.00267" + "l2=0.399 f=-0.195 shape=(1, 9000, 1)
logits [[-0.29886383 -1.7723112   0.6487744   0.64392686]]
Iteration 700 of 1000: loss=0.363 " + "l1=0.00298" + "l2=0.36 f=-0.198 shape=(1, 9000, 1)
logits [[-0.33553073 -1.7434556   0.6466747   0.64125764]]
Iteration 800 of 1000: loss=0.339 " + "l1=0" + "l2=0.339 f=-0.2 shape=(1, 9000, 1)
logits [[-0.3784593  -1.7223467   0.63555354  0.6637743 ]]
Iteration 900 of 1000: loss=0.32 " + "l1=0" + "l2=0.32 f=-0.202 shape=(1, 9000, 1)
logits [[-0.39911428 -1.7128973   0.633792    0.6694636 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.24 " + "l1=2.24" + "l2=0 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.7488294 -2.5894382  2.3872163 -4.152818 ]]
Iteration 100 of 1000: loss=1.61 " + "l1=1.34" + "l2=0.273 f=-0.271 shape=(1, 9000, 1)
logits [[ 1.6224531 -2.2354538  1.8257492 -2.2987463]]
Iteration 200 of 1000: loss=1.32 " + "l1=0.96" + "l2=0.359 f=-0.242 shape=(1, 9000, 1)
logits [[ 1.1043746 -2.1267514  1.5043519 -1.4482536]]
Iteration 300 of 1000: loss=0.992 " + "l1=0.561" + "l2=0.431 f=-0.218 shape=(1, 9000, 1)
logits [[ 0.5889348  -2.0324068   1.1501238  -0.57751137]]
Iteration 400 of 1000: loss=0.671 " + "l1=0.164" + "l2=0.507 f=-0.211 shape=(1, 9000, 1)
logits [[ 0.04006043 -1.885597    0.75311387  0.24855483]]
Iteration 500 of 1000: loss=0.462 " + "l1=6.54e-05" + "l2=0.462 f=-0.202 shape=(1, 9000, 1)
logits [[-0.22761327 -1.7642      0.5920462   0.591845  ]]
Iteration 600 of 1000: loss=0.392 " + "l1=0.0127" + "l2=0.379 f=-0.206 shape=(1, 9000, 1)
logits [[-0.24867064 -1.7348962   0.5990187   0.5600761 ]]
Iteration 700 of 1000: loss=0.343 " + "l1=0.00451" + "l2=0.339 f=-0.21 shape=(1, 9000, 1)
logits [[-0.29042494 -1.7008477   0.5826667   0.5687846 ]]
Iteration 800 of 1000: loss=0.31 " + "l1=0" + "l2=0.31 f=-0.214 shape=(1, 9000, 1)
logits [[-0.3170871  -1.6832603   0.5716447   0.57305205]]
Iteration 900 of 1000: loss=0.292 " + "l1=0.00462" + "l2=0.287 f=-0.218 shape=(1, 9000, 1)
logits [[-0.32166067 -1.6752034   0.57052755  0.5563089 ]]
--- 297.96761870384216 seconds ---
Adv result:3
Loading record A04048
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0282 " + "l1=0.0282" + "l2=0 f=-0.85 shape=(1, 9000, 1)
logits [[ 3.0027752   0.18729512  2.038063   -8.628761  ]]
Iteration 100 of 1000: loss=0.0265 " + "l1=0.0256" + "l2=0.000857 f=-0.86 shape=(1, 9000, 1)
logits [[ 2.872742    0.31275445  1.9966486  -8.620707  ]]
Iteration 200 of 1000: loss=0.0258 " + "l1=0.0246" + "l2=0.00117 f=-0.863 shape=(1, 9000, 1)
logits [[ 2.82302     0.36459965  1.9769721  -8.617595  ]]
Iteration 300 of 1000: loss=0.0252 " + "l1=0.0235" + "l2=0.00163 f=-0.867 shape=(1, 9000, 1)
logits [[ 2.7702386   0.41827625  1.9571891  -8.614391  ]]
Iteration 400 of 1000: loss=0.0246 " + "l1=0.0226" + "l2=0.00208 f=-0.871 shape=(1, 9000, 1)
logits [[ 2.721903   0.4665113  1.9394544 -8.611598 ]]
Iteration 500 of 1000: loss=0.0243 " + "l1=0.0218" + "l2=0.00253 f=-0.875 shape=(1, 9000, 1)
logits [[ 2.681455    0.50325155  1.9263895  -8.609687  ]]
Iteration 600 of 1000: loss=0.024 " + "l1=0.021" + "l2=0.00304 f=-0.878 shape=(1, 9000, 1)
logits [[ 2.6398284   0.54014534  1.9136602  -8.607378  ]]
Iteration 700 of 1000: loss=0.0238 " + "l1=0.0204" + "l2=0.00346 f=-0.882 shape=(1, 9000, 1)
logits [[ 2.6046464  0.5696432  1.9035974 -8.604615 ]]
Iteration 800 of 1000: loss=0.0237 " + "l1=0.0198" + "l2=0.00383 f=-0.884 shape=(1, 9000, 1)
logits [[ 2.5768478   0.59325165  1.8962835  -8.602868  ]]
Iteration 900 of 1000: loss=0.0235 " + "l1=0.0194" + "l2=0.00414 f=-0.886 shape=(1, 9000, 1)
logits [[ 2.553256   0.6134288  1.8904225 -8.601305 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.282 " + "l1=0.282" + "l2=0 f=-0.85 shape=(1, 9000, 1)
logits [[ 3.0027752   0.18729512  2.038063   -8.628761  ]]
Iteration 100 of 1000: loss=0.104 " + "l1=0.0442" + "l2=0.0597 f=-0.973 shape=(1, 9000, 1)
logits [[ 1.7071034  1.2666354  1.7082003 -8.57444  ]]
Iteration 200 of 1000: loss=0.0691 " + "l1=0.0215" + "l2=0.0476 f=-0.988 shape=(1, 9000, 1)
logits [[ 1.6150727  1.4143784  1.6294895 -8.609785 ]]
Iteration 300 of 1000: loss=0.0563 " + "l1=0.00587" + "l2=0.0505 f=-1 shape=(1, 9000, 1)
logits [[ 1.4981701  1.5270383  1.5857657 -8.614537 ]]
Iteration 400 of 1000: loss=0.0507 " + "l1=0.000389" + "l2=0.0503 f=-1 shape=(1, 9000, 1)
logits [[ 1.4456198  1.5719479  1.5758383 -8.608258 ]]
Iteration 500 of 1000: loss=0.0485 " + "l1=0.000161" + "l2=0.0483 f=-1 shape=(1, 9000, 1)
logits [[ 1.4418175  1.5759424  1.5775546 -8.6057415]]
Iteration 600 of 1000: loss=0.0468 " + "l1=0" + "l2=0.0468 f=-1 shape=(1, 9000, 1)
logits [[ 1.4348104  1.5800312  1.5798044 -8.601467 ]]
Iteration 700 of 1000: loss=0.0456 " + "l1=0" + "l2=0.0456 f=-1 shape=(1, 9000, 1)
logits [[ 1.4292212  1.5836806  1.5820447 -8.594718 ]]
Iteration 800 of 1000: loss=0.0444 " + "l1=0.000114" + "l2=0.0443 f=-0.998 shape=(1, 9000, 1)
logits [[ 1.4290454  1.5833535  1.5844945 -8.587032 ]]
Iteration 900 of 1000: loss=0.0435 " + "l1=0" + "l2=0.0435 f=-0.996 shape=(1, 9000, 1)
logits [[ 1.4221106  1.5862505  1.585551  -8.576473 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.155 " + "l1=0.155" + "l2=0 f=-0.85 shape=(1, 9000, 1)
logits [[ 3.0027752   0.18729512  2.038063   -8.628761  ]]
Iteration 100 of 1000: loss=0.0965 " + "l1=0.0661" + "l2=0.0305 f=-0.926 shape=(1, 9000, 1)
logits [[ 2.138912   0.9374603  1.7940521 -8.575277 ]]
Iteration 200 of 1000: loss=0.0669 " + "l1=0.0257" + "l2=0.0412 f=-0.973 shape=(1, 9000, 1)
logits [[ 1.7227103  1.2561138  1.7194498 -8.588688 ]]
Iteration 300 of 1000: loss=0.0548 " + "l1=0.019" + "l2=0.0358 f=-0.978 shape=(1, 9000, 1)
logits [[ 1.6756544  1.330488   1.6758822 -8.594954 ]]
Iteration 400 of 1000: loss=0.0505 " + "l1=0.0155" + "l2=0.035 f=-0.982 shape=(1, 9000, 1)
logits [[ 1.6477321  1.371153   1.6528369 -8.60055  ]]
Iteration 500 of 1000: loss=0.0482 " + "l1=0.0131" + "l2=0.0351 f=-0.985 shape=(1, 9000, 1)
logits [[ 1.633713   1.3978677  1.6357268 -8.60713  ]]
Iteration 600 of 1000: loss=0.0467 " + "l1=0.0114" + "l2=0.0353 f=-0.987 shape=(1, 9000, 1)
logits [[ 1.618694   1.4185437  1.6266297 -8.611208 ]]
Iteration 700 of 1000: loss=0.0457 " + "l1=0.0107" + "l2=0.035 f=-0.987 shape=(1, 9000, 1)
logits [[ 1.6114193  1.4281745  1.6226016 -8.608678 ]]
Iteration 800 of 1000: loss=0.0446 " + "l1=0.0105" + "l2=0.0342 f=-0.984 shape=(1, 9000, 1)
logits [[ 1.6151335  1.4302925  1.6203978 -8.603367 ]]
Iteration 900 of 1000: loss=0.0439 " + "l1=0.00984" + "l2=0.0341 f=-0.984 shape=(1, 9000, 1)
logits [[ 1.60126    1.4400833  1.6190449 -8.597033 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.218 " + "l1=0.218" + "l2=0 f=-0.85 shape=(1, 9000, 1)
logits [[ 3.0027752   0.18729512  2.038063   -8.628761  ]]
Iteration 100 of 1000: loss=0.102 " + "l1=0.0434" + "l2=0.0583 f=-0.968 shape=(1, 9000, 1)
logits [[ 1.7608459  1.2009975  1.7395501 -8.574903 ]]
Iteration 200 of 1000: loss=0.0677 " + "l1=0.0251" + "l2=0.0427 f=-0.981 shape=(1, 9000, 1)
logits [[ 1.6637611  1.3440583  1.6673408 -8.597313 ]]
Iteration 300 of 1000: loss=0.0569 " + "l1=0.0151" + "l2=0.0419 f=-0.988 shape=(1, 9000, 1)
logits [[ 1.6072272  1.427662   1.622035  -8.609848 ]]
Iteration 400 of 1000: loss=0.0522 " + "l1=0.00948" + "l2=0.0427 f=-0.993 shape=(1, 9000, 1)
logits [[ 1.5661905  1.4758618  1.5981346 -8.612382 ]]
Iteration 500 of 1000: loss=0.0495 " + "l1=0.00472" + "l2=0.0448 f=-0.999 shape=(1, 9000, 1)
logits [[ 1.4994549  1.5273561  1.5882173 -8.610488 ]]
Iteration 600 of 1000: loss=0.0475 " + "l1=0.000616" + "l2=0.0469 f=-1 shape=(1, 9000, 1)
logits [[ 1.4369465  1.5745202  1.5824674 -8.605731 ]]
Iteration 700 of 1000: loss=0.0461 " + "l1=0.000264" + "l2=0.0459 f=-1 shape=(1, 9000, 1)
logits [[ 1.4281592  1.5798299  1.5832309 -8.601229 ]]
Iteration 800 of 1000: loss=0.0449 " + "l1=0.000293" + "l2=0.0446 f=-1 shape=(1, 9000, 1)
logits [[ 1.4258082  1.5813687  1.5851437 -8.594542 ]]
Iteration 900 of 1000: loss=0.0436 " + "l1=0.00016" + "l2=0.0435 f=-0.999 shape=(1, 9000, 1)
logits [[ 1.4193153  1.5843798  1.5864435 -8.5850725]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.187 " + "l1=0.187" + "l2=0 f=-0.85 shape=(1, 9000, 1)
logits [[ 3.0027752   0.18729512  2.038063   -8.628761  ]]
Iteration 100 of 1000: loss=0.101 " + "l1=0.0591" + "l2=0.0423 f=-0.946 shape=(1, 9000, 1)
logits [[ 1.9584166  1.0669202  1.7648823 -8.575168 ]]
Iteration 200 of 1000: loss=0.0667 " + "l1=0.026" + "l2=0.0408 f=-0.976 shape=(1, 9000, 1)
logits [[ 1.6937528  1.3018217  1.6916239 -8.590545 ]]
Iteration 300 of 1000: loss=0.0562 " + "l1=0.0179" + "l2=0.0383 f=-0.983 shape=(1, 9000, 1)
logits [[ 1.6457886  1.3782535  1.6479427 -8.603148 ]]
Iteration 400 of 1000: loss=0.0517 " + "l1=0.0131" + "l2=0.0387 f=-0.987 shape=(1, 9000, 1)
logits [[ 1.6160718  1.4235965  1.6209023 -8.609784 ]]
Iteration 500 of 1000: loss=0.0493 " + "l1=0.0104" + "l2=0.0389 f=-0.989 shape=(1, 9000, 1)
logits [[ 1.5979855  1.4495196  1.6072525 -8.611899 ]]
Iteration 600 of 1000: loss=0.0479 " + "l1=0.00879" + "l2=0.0391 f=-0.99 shape=(1, 9000, 1)
logits [[ 1.5790642  1.4684247  1.6010685 -8.609166 ]]
Iteration 700 of 1000: loss=0.0467 " + "l1=0.00723" + "l2=0.0395 f=-0.991 shape=(1, 9000, 1)
logits [[ 1.5530865  1.4882416  1.5973907 -8.604033 ]]
Iteration 800 of 1000: loss=0.0457 " + "l1=0.00574" + "l2=0.0399 f=-0.992 shape=(1, 9000, 1)
logits [[ 1.5260326  1.5077593  1.5943972 -8.597263 ]]
Iteration 900 of 1000: loss=0.0445 " + "l1=0.00336" + "l2=0.0412 f=-0.994 shape=(1, 9000, 1)
logits [[ 1.4790812  1.5409001  1.5915834 -8.588624 ]]
--- 298.3085207939148 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00965 " + "l1=0.00965" + "l2=0 f=-0.85 shape=(1, 9000, 1)
logits [[ 3.0027752   0.18729512  2.038063   -8.628761  ]]
Iteration 100 of 1000: loss=0.0093 " + "l1=0.00902" + "l2=0.000285 f=-0.858 shape=(1, 9000, 1)
logits [[ 2.9403563   0.21963285  2.0384116  -8.628641  ]]
Iteration 200 of 1000: loss=0.00919 " + "l1=0.00895" + "l2=0.000244 f=-0.859 shape=(1, 9000, 1)
logits [[ 2.931628    0.22578208  2.0368264  -8.628915  ]]
Iteration 300 of 1000: loss=0.00913 " + "l1=0.00882" + "l2=0.000306 f=-0.86 shape=(1, 9000, 1)
logits [[ 2.917565    0.23445512  2.0352716  -8.628534  ]]
Iteration 400 of 1000: loss=0.00908 " + "l1=0.00869" + "l2=0.000389 f=-0.862 shape=(1, 9000, 1)
logits [[ 2.903182    0.24316241  2.033903   -8.628184  ]]
Iteration 500 of 1000: loss=0.00904 " + "l1=0.00857" + "l2=0.000469 f=-0.864 shape=(1, 9000, 1)
logits [[ 2.889098   0.2521072  2.0324044 -8.627752 ]]
Iteration 600 of 1000: loss=0.00905 " + "l1=0.00845" + "l2=0.000599 f=-0.865 shape=(1, 9000, 1)
logits [[ 2.8760343  0.2599383  2.0313487 -8.627332 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0965 " + "l1=0.0965" + "l2=0 f=-0.85 shape=(1, 9000, 1)
logits [[ 3.0027752   0.18729512  2.038063   -8.628761  ]]
Iteration 100 of 1000: loss=0.0564 " + "l1=0.0327" + "l2=0.0237 f=-0.926 shape=(1, 9000, 1)
logits [[ 2.3556006  0.5312709  2.0282035 -8.620906 ]]
Iteration 200 of 1000: loss=0.0322 " + "l1=0.000237" + "l2=0.032 f=-0.964 shape=(1, 9000, 1)
logits [[ 2.0302522  0.736711   2.02788   -8.650249 ]]
Iteration 300 of 1000: loss=0.0242 " + "l1=9.74e-05" + "l2=0.0241 f=-0.966 shape=(1, 9000, 1)
logits [[ 2.0209565  0.7623458  2.019982  -8.666214 ]]
Iteration 400 of 1000: loss=0.0214 " + "l1=0" + "l2=0.0214 f=-0.967 shape=(1, 9000, 1)
logits [[ 2.0154665   0.76799935  2.017621   -8.668493  ]]
Iteration 500 of 1000: loss=0.0197 " + "l1=7.27e-05" + "l2=0.0196 f=-0.966 shape=(1, 9000, 1)
logits [[ 2.0187511   0.76477623  2.018024   -8.666418  ]]
Iteration 600 of 1000: loss=0.0185 " + "l1=6.46e-05" + "l2=0.0185 f=-0.965 shape=(1, 9000, 1)
logits [[ 2.0203543   0.76103055  2.0197086  -8.662472  ]]
Iteration 700 of 1000: loss=0.0178 " + "l1=0" + "l2=0.0178 f=-0.965 shape=(1, 9000, 1)
logits [[ 2.0168648  0.7588281  2.021598  -8.6563   ]]
Iteration 800 of 1000: loss=0.0174 " + "l1=0.00041" + "l2=0.017 f=-0.962 shape=(1, 9000, 1)
logits [[ 2.0268734   0.75067997  2.0227735  -8.649722  ]]
Iteration 900 of 1000: loss=0.0164 " + "l1=0" + "l2=0.0164 f=-0.961 shape=(1, 9000, 1)
logits [[ 2.0227494  0.7488081  2.025076  -8.641794 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0531 " + "l1=0.0531" + "l2=0 f=-0.85 shape=(1, 9000, 1)
logits [[ 3.0027752   0.18729512  2.038063   -8.628761  ]]
Iteration 100 of 1000: loss=0.0426 " + "l1=0.0368" + "l2=0.00582 f=-0.886 shape=(1, 9000, 1)
logits [[ 2.6989784  0.3507635  2.030305  -8.624354 ]]
Iteration 200 of 1000: loss=0.0368 " + "l1=0.0277" + "l2=0.00912 f=-0.907 shape=(1, 9000, 1)
logits [[ 2.5288804   0.44766146  2.0257287  -8.630442  ]]
Iteration 300 of 1000: loss=0.0314 " + "l1=0.0188" + "l2=0.0126 f=-0.926 shape=(1, 9000, 1)
logits [[ 2.3629334  0.5480887  2.0209606 -8.6359   ]]
Iteration 400 of 1000: loss=0.0268 " + "l1=0.0104" + "l2=0.0164 f=-0.944 shape=(1, 9000, 1)
logits [[ 2.2080657   0.64099354  2.01867    -8.645301  ]]
Iteration 500 of 1000: loss=0.0224 " + "l1=0.00181" + "l2=0.0206 f=-0.961 shape=(1, 9000, 1)
logits [[ 2.0496285   0.74512124  2.0166821  -8.656964  ]]
Iteration 600 of 1000: loss=0.0197 " + "l1=0.000259" + "l2=0.0195 f=-0.965 shape=(1, 9000, 1)
logits [[ 2.0218027   0.76381236  2.0171025  -8.663113  ]]
Iteration 700 of 1000: loss=0.0186 " + "l1=0" + "l2=0.0186 f=-0.965 shape=(1, 9000, 1)
logits [[ 2.0170562   0.76417476  2.0188699  -8.660475  ]]
Iteration 800 of 1000: loss=0.0174 " + "l1=2.79e-05" + "l2=0.0174 f=-0.964 shape=(1, 9000, 1)
logits [[ 2.0218458  0.7569701  2.0213385 -8.655882 ]]
Iteration 900 of 1000: loss=0.0169 " + "l1=5.88e-05" + "l2=0.0169 f=-0.963 shape=(1, 9000, 1)
logits [[ 2.024708    0.75122577  2.0236392  -8.650048  ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0314 " + "l1=0.0314" + "l2=0 f=-0.85 shape=(1, 9000, 1)
logits [[ 3.0027752   0.18729512  2.038063   -8.628761  ]]
Iteration 100 of 1000: loss=0.0278 " + "l1=0.0257" + "l2=0.00208 f=-0.871 shape=(1, 9000, 1)
logits [[ 2.8229609   0.28541103  2.0325782  -8.625761  ]]
Iteration 200 of 1000: loss=0.0264 " + "l1=0.0237" + "l2=0.00264 f=-0.879 shape=(1, 9000, 1)
logits [[ 2.758092    0.32475802  2.0283866  -8.628356  ]]
Iteration 300 of 1000: loss=0.0249 " + "l1=0.0213" + "l2=0.00364 f=-0.889 shape=(1, 9000, 1)
logits [[ 2.6799026   0.36924607  2.0251694  -8.630259  ]]
Iteration 400 of 1000: loss=0.0235 " + "l1=0.0187" + "l2=0.00482 f=-0.899 shape=(1, 9000, 1)
logits [[ 2.5989041   0.41439486  2.0230129  -8.631679  ]]
Iteration 500 of 1000: loss=0.0223 " + "l1=0.0165" + "l2=0.00584 f=-0.907 shape=(1, 9000, 1)
logits [[ 2.5277674   0.45691222  2.0208101  -8.633808  ]]
Iteration 600 of 1000: loss=0.0214 " + "l1=0.0144" + "l2=0.00697 f=-0.914 shape=(1, 9000, 1)
logits [[ 2.4651222  0.4922586  2.020773  -8.635388 ]]
Iteration 700 of 1000: loss=0.0206 " + "l1=0.0126" + "l2=0.00802 f=-0.921 shape=(1, 9000, 1)
logits [[ 2.4073188   0.52571875  2.020475   -8.636758  ]]
Iteration 800 of 1000: loss=0.0198 " + "l1=0.0109" + "l2=0.00895 f=-0.927 shape=(1, 9000, 1)
logits [[ 2.3547733  0.5553285  2.0195613 -8.637126 ]]
Iteration 900 of 1000: loss=0.019 " + "l1=0.0095" + "l2=0.00954 f=-0.931 shape=(1, 9000, 1)
logits [[ 2.3121839   0.57849735  2.0197837  -8.636135  ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0422 " + "l1=0.0422" + "l2=0 f=-0.85 shape=(1, 9000, 1)
logits [[ 3.0027752   0.18729512  2.038063   -8.628761  ]]
Iteration 100 of 1000: loss=0.0357 " + "l1=0.032" + "l2=0.00366 f=-0.878 shape=(1, 9000, 1)
logits [[ 2.7626143   0.31780842  2.0313022  -8.625455  ]]
Iteration 200 of 1000: loss=0.0326 " + "l1=0.0273" + "l2=0.00532 f=-0.893 shape=(1, 9000, 1)
logits [[ 2.650105    0.38213384  2.0267818  -8.629054  ]]
Iteration 300 of 1000: loss=0.0294 " + "l1=0.022" + "l2=0.00741 f=-0.908 shape=(1, 9000, 1)
logits [[ 2.5245347   0.45548904  2.0221648  -8.633745  ]]
Iteration 400 of 1000: loss=0.0267 " + "l1=0.0171" + "l2=0.00958 f=-0.921 shape=(1, 9000, 1)
logits [[ 2.4105992  0.5226162  2.0197442 -8.63665  ]]
Iteration 500 of 1000: loss=0.0243 " + "l1=0.0127" + "l2=0.0117 f=-0.933 shape=(1, 9000, 1)
logits [[ 2.3080056  0.5838803  2.0183754 -8.641511 ]]
Iteration 600 of 1000: loss=0.0224 " + "l1=0.00863" + "l2=0.0138 f=-0.944 shape=(1, 9000, 1)
logits [[ 2.2138798  0.6402093  2.016621  -8.644811 ]]
Iteration 700 of 1000: loss=0.0204 " + "l1=0.00413" + "l2=0.0163 f=-0.954 shape=(1, 9000, 1)
logits [[ 2.112947   0.7031171  2.0184646 -8.650935 ]]
Iteration 800 of 1000: loss=0.0187 " + "l1=0.000493" + "l2=0.0182 f=-0.963 shape=(1, 9000, 1)
logits [[ 2.0314567  0.7516329  2.0201814 -8.655346 ]]
Iteration 900 of 1000: loss=0.0175 " + "l1=9.08e-05" + "l2=0.0174 f=-0.963 shape=(1, 9000, 1)
logits [[ 2.0249577  0.7533397  2.022882  -8.654168 ]]
--- 276.5866765975952 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.116 " + "l1=0.116" + "l2=0 f=-0.85 shape=(1, 9000, 1)
logits [[ 3.0027752   0.18729512  2.038063   -8.628761  ]]
Iteration 100 of 1000: loss=0.116 " + "l1=0.115" + "l2=0.000458 f=-0.854 shape=(1, 9000, 1)
logits [[ 2.9190176   0.24769236  2.0135322  -8.596123  ]]
Iteration 200 of 1000: loss=0.115 " + "l1=0.115" + "l2=0.000488 f=-0.855 shape=(1, 9000, 1)
logits [[ 2.898385    0.26607487  2.0051835  -8.589625  ]]
Iteration 300 of 1000: loss=0.115 " + "l1=0.115" + "l2=0.000625 f=-0.856 shape=(1, 9000, 1)
logits [[ 2.873856    0.28569424  1.9968975  -8.581415  ]]
Iteration 400 of 1000: loss=0.115 " + "l1=0.114" + "l2=0.000772 f=-0.858 shape=(1, 9000, 1)
logits [[ 2.8501925   0.30355883  1.9897146  -8.573546  ]]
Iteration 500 of 1000: loss=0.115 " + "l1=0.114" + "l2=0.000968 f=-0.859 shape=(1, 9000, 1)
logits [[ 2.8286726   0.31963867  1.9833969  -8.566183  ]]
Iteration 600 of 1000: loss=0.115 " + "l1=0.114" + "l2=0.00116 f=-0.859 shape=(1, 9000, 1)
logits [[ 2.8077323   0.33649862  1.9768953  -8.559104  ]]
Iteration 700 of 1000: loss=0.115 " + "l1=0.113" + "l2=0.00135 f=-0.86 shape=(1, 9000, 1)
logits [[ 2.7894678   0.35083807  1.9715099  -8.552654  ]]
Iteration 800 of 1000: loss=0.115 " + "l1=0.113" + "l2=0.00152 f=-0.861 shape=(1, 9000, 1)
logits [[ 2.773798   0.3629682  1.9672043 -8.54682  ]]
Iteration 900 of 1000: loss=0.115 " + "l1=0.113" + "l2=0.00177 f=-0.861 shape=(1, 9000, 1)
logits [[ 2.7598512   0.37318826  1.9636999  -8.541234  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.16 " + "l1=1.16" + "l2=0 f=-0.85 shape=(1, 9000, 1)
logits [[ 3.0027752   0.18729512  2.038063   -8.628761  ]]
Iteration 100 of 1000: loss=1.08 " + "l1=1.03" + "l2=0.0493 f=-0.912 shape=(1, 9000, 1)
logits [[ 2.0129514   0.86988896  1.7884527  -8.320036  ]]
Iteration 200 of 1000: loss=1.04 " + "l1=0.988" + "l2=0.0537 f=-0.919 shape=(1, 9000, 1)
logits [[ 1.6995867  1.0975221  1.7010602 -8.175931 ]]
Iteration 300 of 1000: loss=1.02 " + "l1=0.971" + "l2=0.0515 f=-0.904 shape=(1, 9000, 1)
logits [[ 1.6533613  1.1321745  1.6526853 -8.054407 ]]
Iteration 400 of 1000: loss=1.01 " + "l1=0.955" + "l2=0.0545 f=-0.889 shape=(1, 9000, 1)
logits [[ 1.6156454  1.1454859  1.6158559 -7.933977 ]]
Iteration 500 of 1000: loss=0.999 " + "l1=0.94" + "l2=0.0592 f=-0.874 shape=(1, 9000, 1)
logits [[ 1.5830185  1.1445925  1.5872442 -7.80902  ]]
Iteration 600 of 1000: loss=0.988 " + "l1=0.924" + "l2=0.0641 f=-0.854 shape=(1, 9000, 1)
logits [[ 1.557073   1.1401966  1.5609176 -7.6746397]]
Iteration 700 of 1000: loss=0.975 " + "l1=0.905" + "l2=0.0702 f=-0.832 shape=(1, 9000, 1)
logits [[ 1.5332329  1.1229568  1.5323839 -7.5179253]]
Iteration 800 of 1000: loss=0.963 " + "l1=0.888" + "l2=0.075 f=-0.813 shape=(1, 9000, 1)
logits [[ 1.5041555  1.111678   1.5030696 -7.3715677]]
Iteration 900 of 1000: loss=0.95 " + "l1=0.87" + "l2=0.0796 f=-0.795 shape=(1, 9000, 1)
logits [[ 1.4675409  1.1163597  1.4694985 -7.234392 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.6 " + "l1=11.6" + "l2=0 f=-0.85 shape=(1, 9000, 1)
logits [[ 3.0027752   0.18729512  2.038063   -8.628761  ]]
Iteration 100 of 1000: loss=7.76 " + "l1=6.35" + "l2=1.41 f=-0.599 shape=(1, 9000, 1)
logits [[ 0.9716862  0.9844451  0.9973596 -5.3500667]]
Iteration 200 of 1000: loss=5.9 " + "l1=3.89" + "l2=2.01 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.5183968   0.58180445  0.5847271  -3.3067238 ]]
Iteration 300 of 1000: loss=4.23 " + "l1=1.44" + "l2=2.79 f=-0.252 shape=(1, 9000, 1)
logits [[-0.29708186  0.23893148  0.24607994 -1.1958455 ]]
Iteration 400 of 1000: loss=2.85 " + "l1=0.00554" + "l2=2.84 f=-0.223 shape=(1, 9000, 1)
logits [[-0.7695838  -0.02722882 -0.06071254 -0.03277137]]
Iteration 500 of 1000: loss=2.41 " + "l1=0.0146" + "l2=2.4 f=-0.263 shape=(1, 9000, 1)
logits [[-0.84976083 -0.06484359 -0.06179119 -0.07637104]]
Iteration 600 of 1000: loss=2.09 " + "l1=0" + "l2=2.09 f=-0.291 shape=(1, 9000, 1)
logits [[-0.9506437  -0.07930539 -0.09004284 -0.04389249]]
Iteration 700 of 1000: loss=1.88 " + "l1=0.00732" + "l2=1.88 f=-0.307 shape=(1, 9000, 1)
logits [[-1.0272434  -0.05539121 -0.08201176 -0.06270631]]
Iteration 800 of 1000: loss=1.74 " + "l1=0.0229" + "l2=1.72 f=-0.317 shape=(1, 9000, 1)
logits [[-1.0327497  -0.0752287  -0.06826128 -0.09111759]]
Iteration 900 of 1000: loss=1.61 " + "l1=0" + "l2=1.61 f=-0.318 shape=(1, 9000, 1)
logits [[-1.0424696  -0.08423336 -0.07937136 -0.06734125]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.4 " + "l1=6.4" + "l2=0 f=-0.85 shape=(1, 9000, 1)
logits [[ 3.0027752   0.18729512  2.038063   -8.628761  ]]
Iteration 100 of 1000: loss=5.01 " + "l1=4.54" + "l2=0.466 f=-0.769 shape=(1, 9000, 1)
logits [[ 1.3476318  1.1154897  1.3575919 -6.8985605]]
Iteration 200 of 1000: loss=4.29 " + "l1=3.5" + "l2=0.784 f=-0.613 shape=(1, 9000, 1)
logits [[ 0.9514937   0.97099113  0.9963232  -5.369988  ]]
Iteration 300 of 1000: loss=3.67 " + "l1=2.61" + "l2=1.06 f=-0.463 shape=(1, 9000, 1)
logits [[ 0.7259819  0.7110623  0.7321581 -4.0205054]]
Iteration 400 of 1000: loss=3.15 " + "l1=1.95" + "l2=1.2 f=-0.379 shape=(1, 9000, 1)
logits [[ 0.39592746  0.5439923   0.5381155  -2.9947264 ]]
Iteration 500 of 1000: loss=2.67 " + "l1=1.33" + "l2=1.34 f=-0.3 shape=(1, 9000, 1)
logits [[-0.03010034  0.4112543   0.4158595  -1.9977636 ]]
Iteration 600 of 1000: loss=2.22 " + "l1=0.767" + "l2=1.45 f=-0.269 shape=(1, 9000, 1)
logits [[-0.5149208   0.27932197  0.27642328 -1.115712  ]]
Iteration 700 of 1000: loss=1.68 " + "l1=0.00773" + "l2=1.67 f=-0.232 shape=(1, 9000, 1)
logits [[-0.88866115 -0.00944912 -0.00835045 -0.02241153]]
Iteration 800 of 1000: loss=1.38 " + "l1=0.00242" + "l2=1.38 f=-0.254 shape=(1, 9000, 1)
logits [[-0.9648112  -0.01240533 -0.02298823 -0.01679727]]
Iteration 900 of 1000: loss=1.22 " + "l1=0" + "l2=1.22 f=-0.252 shape=(1, 9000, 1)
logits [[-0.9544071  -0.02641737 -0.01953769 -0.00922962]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.78 " + "l1=3.78" + "l2=0 f=-0.85 shape=(1, 9000, 1)
logits [[ 3.0027752   0.18729512  2.038063   -8.628761  ]]
Iteration 100 of 1000: loss=3.18 " + "l1=2.99" + "l2=0.185 f=-0.86 shape=(1, 9000, 1)
logits [[ 1.5493786  1.1182513  1.546894  -7.6549916]]
Iteration 200 of 1000: loss=2.98 " + "l1=2.72" + "l2=0.261 f=-0.779 shape=(1, 9000, 1)
logits [[ 1.3656851  1.1554792  1.3666809 -7.0055833]]
Iteration 300 of 1000: loss=2.73 " + "l1=2.33" + "l2=0.396 f=-0.678 shape=(1, 9000, 1)
logits [[ 1.1163234  1.1054265  1.1224723 -6.0577097]]
Iteration 400 of 1000: loss=2.51 " + "l1=2.03" + "l2=0.485 f=-0.609 shape=(1, 9000, 1)
logits [[ 0.94070566  0.9504546   0.9534301  -5.2802515 ]]
Iteration 500 of 1000: loss=2.31 " + "l1=1.76" + "l2=0.555 f=-0.549 shape=(1, 9000, 1)
logits [[ 0.7879629  0.7944136  0.8105504 -4.590504 ]]
Iteration 600 of 1000: loss=2.11 " + "l1=1.48" + "l2=0.633 f=-0.479 shape=(1, 9000, 1)
logits [[ 0.6424714   0.66252416  0.6642414  -3.8849812 ]]
Iteration 700 of 1000: loss=1.92 " + "l1=1.23" + "l2=0.69 f=-0.42 shape=(1, 9000, 1)
logits [[ 0.43364823  0.5637812   0.55665505 -3.2344    ]]
Iteration 800 of 1000: loss=1.72 " + "l1=0.971" + "l2=0.748 f=-0.366 shape=(1, 9000, 1)
logits [[ 0.17654556  0.4513307   0.44436437 -2.5364523 ]]
Iteration 900 of 1000: loss=1.51 " + "l1=0.692" + "l2=0.82 f=-0.328 shape=(1, 9000, 1)
logits [[-0.12091078  0.30700782  0.31512517 -1.8127843 ]]
--- 296.16784405708313 seconds ---
Adv result:3
Loading record A04117
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0896 " + "l1=0.0896" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 5.9336157 -3.0260127  3.4173348 -8.793019 ]]
Iteration 100 of 1000: loss=0.0893 " + "l1=0.089" + "l2=0.000248 f=-0.614 shape=(1, 9000, 1)
logits [[ 5.9056077 -2.9984114  3.3963547 -8.758692 ]]
Iteration 200 of 1000: loss=0.0892 " + "l1=0.089" + "l2=0.000235 f=-0.613 shape=(1, 9000, 1)
logits [[ 5.9022737 -2.9929721  3.3922653 -8.753209 ]]
Iteration 300 of 1000: loss=0.0891 " + "l1=0.0888" + "l2=0.00027 f=-0.612 shape=(1, 9000, 1)
logits [[ 5.8972783 -2.9863615  3.38739   -8.746228 ]]
Iteration 400 of 1000: loss=0.0891 " + "l1=0.0887" + "l2=0.000345 f=-0.611 shape=(1, 9000, 1)
logits [[ 5.892387  -2.9797292  3.3824878 -8.739304 ]]
Iteration 500 of 1000: loss=0.0891 " + "l1=0.0886" + "l2=0.000443 f=-0.61 shape=(1, 9000, 1)
logits [[ 5.887631  -2.9731853  3.3777251 -8.732724 ]]
Iteration 600 of 1000: loss=0.0891 " + "l1=0.0885" + "l2=0.000548 f=-0.609 shape=(1, 9000, 1)
logits [[ 5.883213  -2.9672527  3.3734474 -8.726786 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.896 " + "l1=0.896" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 5.9336157 -3.0260127  3.4173348 -8.793019 ]]
Iteration 100 of 1000: loss=0.867 " + "l1=0.852" + "l2=0.0154 f=-0.59 shape=(1, 9000, 1)
logits [[ 5.7123365 -2.8083386  3.2518983 -8.515847 ]]
Iteration 200 of 1000: loss=0.858 " + "l1=0.839" + "l2=0.0188 f=-0.58 shape=(1, 9000, 1)
logits [[ 5.6406293 -2.7475238  3.2046287 -8.416793 ]]
Iteration 300 of 1000: loss=0.85 " + "l1=0.827" + "l2=0.0229 f=-0.571 shape=(1, 9000, 1)
logits [[ 5.573785  -2.6929781  3.162154  -8.326207 ]]
Iteration 400 of 1000: loss=0.842 " + "l1=0.815" + "l2=0.0274 f=-0.562 shape=(1, 9000, 1)
logits [[ 5.5096908 -2.6405487  3.1190739 -8.235971 ]]
Iteration 500 of 1000: loss=0.836 " + "l1=0.804" + "l2=0.0321 f=-0.554 shape=(1, 9000, 1)
logits [[ 5.444092  -2.5912688  3.0767083 -8.143718 ]]
Iteration 600 of 1000: loss=0.829 " + "l1=0.792" + "l2=0.0369 f=-0.546 shape=(1, 9000, 1)
logits [[ 5.376563  -2.544543   3.0380144 -8.054681 ]]
Iteration 700 of 1000: loss=0.823 " + "l1=0.782" + "l2=0.0411 f=-0.54 shape=(1, 9000, 1)
logits [[ 5.312221  -2.5044124  3.0063195 -7.974429 ]]
Iteration 800 of 1000: loss=0.817 " + "l1=0.772" + "l2=0.0455 f=-0.534 shape=(1, 9000, 1)
logits [[ 5.248714  -2.467096   2.9767764 -7.8944526]]
Iteration 900 of 1000: loss=0.812 " + "l1=0.763" + "l2=0.0491 f=-0.529 shape=(1, 9000, 1)
logits [[ 5.195934  -2.4359891  2.9526174 -7.826566 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.96 " + "l1=8.96" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 5.9336157 -3.0260127  3.4173348 -8.793019 ]]
Iteration 100 of 1000: loss=6.39 " + "l1=5.02" + "l2=1.38 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.4197671 -1.5953634  2.2608836 -5.882252 ]]
Iteration 200 of 1000: loss=5.28 " + "l1=3.17" + "l2=2.11 f=-0.429 shape=(1, 9000, 1)
logits [[ 1.9805417 -1.1861181  1.9675682 -4.479171 ]]
Iteration 300 of 1000: loss=4.75 " + "l1=2.8" + "l2=1.95 f=-0.393 shape=(1, 9000, 1)
logits [[ 1.7951005 -1.0091138  1.7872365 -4.1468267]]
Iteration 400 of 1000: loss=4.26 " + "l1=2.32" + "l2=1.94 f=-0.389 shape=(1, 9000, 1)
logits [[ 1.5709519 -0.7320861  1.5848707 -3.9810774]]
Iteration 500 of 1000: loss=3.79 " + "l1=1.97" + "l2=1.82 f=-0.403 shape=(1, 9000, 1)
logits [[ 1.4432529  -0.52618486  1.4353033  -3.963157  ]]
Iteration 600 of 1000: loss=3.62 " + "l1=1.82" + "l2=1.8 f=-0.413 shape=(1, 9000, 1)
logits [[ 1.373177   -0.44403133  1.3759181  -3.9577186 ]]
Iteration 700 of 1000: loss=3.53 " + "l1=1.73" + "l2=1.8 f=-0.408 shape=(1, 9000, 1)
logits [[ 1.3403645  -0.38990498  1.3258985  -3.907155  ]]
Iteration 800 of 1000: loss=3.45 " + "l1=1.64" + "l2=1.81 f=-0.4 shape=(1, 9000, 1)
logits [[ 1.2788911  -0.34124652  1.2946054  -3.8317862 ]]
Iteration 900 of 1000: loss=3.37 " + "l1=1.56" + "l2=1.81 f=-0.393 shape=(1, 9000, 1)
logits [[ 1.2454112  -0.30287364  1.2545639  -3.7688973 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=89.6 " + "l1=89.6" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 5.9336157 -3.0260127  3.4173348 -8.793019 ]]
Iteration 100 of 1000: loss=18.5 " + "l1=5" + "l2=13.5 f=-0.329 shape=(1, 9000, 1)
logits [[ 0.1516864   0.31302807  0.8130309  -2.5932043 ]]
Iteration 200 of 1000: loss=9.42 " + "l1=0" + "l2=9.42 f=-0.42 shape=(1, 9000, 1)
logits [[-0.48064634  0.7181944   0.7157771  -2.6350605 ]]
Iteration 300 of 1000: loss=7.82 " + "l1=0" + "l2=7.82 f=-0.451 shape=(1, 9000, 1)
logits [[-0.5343336   0.74808335  0.73273605 -2.7502725 ]]
Iteration 400 of 1000: loss=6.78 " + "l1=0" + "l2=6.78 f=-0.484 shape=(1, 9000, 1)
logits [[-0.5143271   0.7964354   0.76887333 -2.9866548 ]]
Iteration 500 of 1000: loss=6.18 " + "l1=0" + "l2=6.18 f=-0.51 shape=(1, 9000, 1)
logits [[-0.5584421  0.8205863  0.7730863 -3.0765293]]
Iteration 600 of 1000: loss=5.76 " + "l1=0" + "l2=5.76 f=-0.513 shape=(1, 9000, 1)
logits [[-0.50607204  0.7955069   0.7772479  -3.1189318 ]]
Iteration 700 of 1000: loss=5.62 " + "l1=0" + "l2=5.62 f=-0.522 shape=(1, 9000, 1)
logits [[-0.5470606   0.81765765  0.7571607  -3.1170814 ]]
Iteration 800 of 1000: loss=5.24 " + "l1=0" + "l2=5.24 f=-0.525 shape=(1, 9000, 1)
logits [[-0.46812078  0.7723604   0.7720735  -3.1752791 ]]
Iteration 900 of 1000: loss=5.15 " + "l1=0" + "l2=5.15 f=-0.534 shape=(1, 9000, 1)
logits [[-0.5558237   0.81540686  0.75340337 -3.1479099 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=49.3 " + "l1=49.3" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 5.9336157 -3.0260127  3.4173348 -8.793019 ]]
Iteration 100 of 1000: loss=15.4 " + "l1=7.66" + "l2=7.77 f=-0.337 shape=(1, 9000, 1)
logits [[ 1.1667712  -0.20493644  1.1879195  -3.4996133 ]]
Iteration 200 of 1000: loss=8.22 " + "l1=0" + "l2=8.22 f=-0.416 shape=(1, 9000, 1)
logits [[-0.42496693  0.69993526  0.69878846 -2.6382186 ]]
Iteration 300 of 1000: loss=6.66 " + "l1=0" + "l2=6.66 f=-0.465 shape=(1, 9000, 1)
logits [[-0.5108692   0.74016196  0.72621363 -2.8149166 ]]
Iteration 400 of 1000: loss=5.9 " + "l1=0.0584" + "l2=5.84 f=-0.484 shape=(1, 9000, 1)
logits [[-0.47056463  0.75093436  0.76154417 -2.9771812 ]]
Iteration 500 of 1000: loss=5.44 " + "l1=0.0431" + "l2=5.4 f=-0.501 shape=(1, 9000, 1)
logits [[-0.48591283  0.75233525  0.76016337 -3.0320163 ]]
Iteration 600 of 1000: loss=5.11 " + "l1=0.0548" + "l2=5.05 f=-0.509 shape=(1, 9000, 1)
logits [[-0.4780991  0.756358   0.7663242 -3.0813358]]
Iteration 700 of 1000: loss=4.78 " + "l1=0" + "l2=4.78 f=-0.525 shape=(1, 9000, 1)
logits [[-0.5063629  0.7714727  0.7707637 -3.1355205]]
Iteration 800 of 1000: loss=4.64 " + "l1=0.119" + "l2=4.53 f=-0.527 shape=(1, 9000, 1)
logits [[-0.47179568  0.7510389   0.7727358  -3.1610153 ]]
Iteration 900 of 1000: loss=4.38 " + "l1=0.00415" + "l2=4.38 f=-0.531 shape=(1, 9000, 1)
logits [[-0.4919805   0.75748515  0.758239   -3.1473815 ]]
--- 280.108359336853 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0252 " + "l1=0.0252" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 5.9336157 -3.0260127  3.4173348 -8.793019 ]]
Iteration 100 of 1000: loss=0.0251 " + "l1=0.0249" + "l2=0.000137 f=-0.618 shape=(1, 9000, 1)
logits [[ 5.9188924 -3.0304754  3.4248667 -8.784074 ]]
Iteration 200 of 1000: loss=0.025 " + "l1=0.0249" + "l2=9.55e-05 f=-0.618 shape=(1, 9000, 1)
logits [[ 5.92009   -3.0308573  3.4252806 -8.785133 ]]
Iteration 300 of 1000: loss=0.0251 " + "l1=0.0249" + "l2=0.000131 f=-0.618 shape=(1, 9000, 1)
logits [[ 5.919355 -3.031754  3.426547 -8.785011]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.252 " + "l1=0.252" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 5.9336157 -3.0260127  3.4173348 -8.793019 ]]
Iteration 100 of 1000: loss=0.243 " + "l1=0.238" + "l2=0.00527 f=-0.623 shape=(1, 9000, 1)
logits [[ 5.842567  -3.0599856  3.4654055 -8.738644 ]]
Iteration 200 of 1000: loss=0.24 " + "l1=0.233" + "l2=0.00677 f=-0.624 shape=(1, 9000, 1)
logits [[ 5.8174996 -3.0749931  3.4848394 -8.724627 ]]
Iteration 300 of 1000: loss=0.238 " + "l1=0.229" + "l2=0.00805 f=-0.625 shape=(1, 9000, 1)
logits [[ 5.7944446 -3.0845373  3.4995058 -8.709076 ]]
Iteration 400 of 1000: loss=0.235 " + "l1=0.226" + "l2=0.00949 f=-0.625 shape=(1, 9000, 1)
logits [[ 5.7701206 -3.0947602  3.5138395 -8.690259 ]]
Iteration 500 of 1000: loss=0.233 " + "l1=0.222" + "l2=0.0109 f=-0.626 shape=(1, 9000, 1)
logits [[ 5.7464924 -3.1058855  3.5271034 -8.670077 ]]
Iteration 600 of 1000: loss=0.23 " + "l1=0.218" + "l2=0.0121 f=-0.626 shape=(1, 9000, 1)
logits [[ 5.7238274 -3.116849   3.5401814 -8.65169  ]]
Iteration 700 of 1000: loss=0.228 " + "l1=0.214" + "l2=0.0135 f=-0.627 shape=(1, 9000, 1)
logits [[ 5.696918  -3.1287315  3.5543454 -8.630834 ]]
Iteration 800 of 1000: loss=0.225 " + "l1=0.21" + "l2=0.0146 f=-0.628 shape=(1, 9000, 1)
logits [[ 5.6711364 -3.1404488  3.5673158 -8.60898  ]]
Iteration 900 of 1000: loss=0.222 " + "l1=0.206" + "l2=0.016 f=-0.628 shape=(1, 9000, 1)
logits [[ 5.6367807 -3.1474864  3.5764525 -8.57735  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.52 " + "l1=2.52" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 5.9336157 -3.0260127  3.4173348 -8.793019 ]]
Iteration 100 of 1000: loss=1.43 " + "l1=0.784" + "l2=0.643 f=-0.652 shape=(1, 9000, 1)
logits [[ 4.6266274 -3.3514173  3.8428102 -7.727285 ]]
Iteration 200 of 1000: loss=0.941 " + "l1=0.0357" + "l2=0.905 f=-0.681 shape=(1, 9000, 1)
logits [[ 4.0271277 -3.5660176  3.9914203 -7.1752334]]
Iteration 300 of 1000: loss=0.691 " + "l1=0.00317" + "l2=0.688 f=-0.683 shape=(1, 9000, 1)
logits [[ 3.9574594 -3.5513923  3.9542868 -7.091836 ]]
Iteration 400 of 1000: loss=0.579 " + "l1=0.00582" + "l2=0.573 f=-0.678 shape=(1, 9000, 1)
logits [[ 3.9265225 -3.5304823  3.920701  -7.0277786]]
Iteration 500 of 1000: loss=0.502 " + "l1=0.00636" + "l2=0.496 f=-0.675 shape=(1, 9000, 1)
logits [[ 3.8983853 -3.5118341  3.8920228 -6.976986 ]]
Iteration 600 of 1000: loss=0.442 " + "l1=0" + "l2=0.442 f=-0.671 shape=(1, 9000, 1)
logits [[ 3.8492541 -3.4754992  3.8598754 -6.918612 ]]
Iteration 700 of 1000: loss=0.39 " + "l1=0.000191" + "l2=0.39 f=-0.667 shape=(1, 9000, 1)
logits [[ 3.8264954 -3.4330368  3.8263047 -6.8862286]]
Iteration 800 of 1000: loss=0.359 " + "l1=0" + "l2=0.359 f=-0.662 shape=(1, 9000, 1)
logits [[ 3.7892225 -3.4022315  3.7987168 -6.831719 ]]
Iteration 900 of 1000: loss=0.331 " + "l1=0" + "l2=0.331 f=-0.655 shape=(1, 9000, 1)
logits [[ 3.761378  -3.3806062  3.7733636 -6.7759285]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.38 " + "l1=1.38" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 5.9336157 -3.0260127  3.4173348 -8.793019 ]]
Iteration 100 of 1000: loss=1.08 " + "l1=0.872" + "l2=0.204 f=-0.645 shape=(1, 9000, 1)
logits [[ 5.2661586 -3.2300477  3.6809273 -8.296824 ]]
Iteration 200 of 1000: loss=0.921 " + "l1=0.636" + "l2=0.285 f=-0.649 shape=(1, 9000, 1)
logits [[ 4.9237285 -3.2976224  3.7676444 -7.989961 ]]
Iteration 300 of 1000: loss=0.782 " + "l1=0.444" + "l2=0.338 f=-0.653 shape=(1, 9000, 1)
logits [[ 4.6363373 -3.3647516  3.828548  -7.7104735]]
Iteration 400 of 1000: loss=0.649 " + "l1=0.286" + "l2=0.363 f=-0.648 shape=(1, 9000, 1)
logits [[ 4.387732  -3.4193301  3.8672068 -7.426323 ]]
Iteration 500 of 1000: loss=0.546 " + "l1=0.201" + "l2=0.345 f=-0.653 shape=(1, 9000, 1)
logits [[ 4.2672286 -3.4506798  3.9016514 -7.3287416]]
Iteration 600 of 1000: loss=0.451 " + "l1=0.0989" + "l2=0.352 f=-0.651 shape=(1, 9000, 1)
logits [[ 4.085592  -3.45648    3.9057045 -7.140219 ]]
Iteration 700 of 1000: loss=0.369 " + "l1=0.00988" + "l2=0.359 f=-0.647 shape=(1, 9000, 1)
logits [[ 3.8946197 -3.4356225  3.8766625 -6.92405  ]]
Iteration 800 of 1000: loss=0.301 " + "l1=0.00369" + "l2=0.297 f=-0.637 shape=(1, 9000, 1)
logits [[ 3.810285  -3.3790326  3.8035738 -6.7815447]]
Iteration 900 of 1000: loss=0.26 " + "l1=0.00523" + "l2=0.255 f=-0.63 shape=(1, 9000, 1)
logits [[ 3.737448  -3.3267496  3.727941  -6.656687 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.818 " + "l1=0.818" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 5.9336157 -3.0260127  3.4173348 -8.793019 ]]
Iteration 100 of 1000: loss=0.722 " + "l1=0.663" + "l2=0.0593 f=-0.633 shape=(1, 9000, 1)
logits [[ 5.608085  -3.140108   3.5680816 -8.568418 ]]
Iteration 200 of 1000: loss=0.676 " + "l1=0.585" + "l2=0.0915 f=-0.638 shape=(1, 9000, 1)
logits [[ 5.435215  -3.1924982  3.6362262 -8.430958 ]]
Iteration 300 of 1000: loss=0.627 " + "l1=0.51" + "l2=0.117 f=-0.638 shape=(1, 9000, 1)
logits [[ 5.2507544 -3.2261975  3.6825423 -8.260065 ]]
Iteration 400 of 1000: loss=0.582 " + "l1=0.448" + "l2=0.134 f=-0.638 shape=(1, 9000, 1)
logits [[ 5.091082  -3.2469218  3.7113197 -8.107501 ]]
Iteration 500 of 1000: loss=0.532 " + "l1=0.374" + "l2=0.158 f=-0.64 shape=(1, 9000, 1)
logits [[ 4.905441  -3.2939324  3.7548158 -7.9262214]]
Iteration 600 of 1000: loss=0.48 " + "l1=0.319" + "l2=0.161 f=-0.639 shape=(1, 9000, 1)
logits [[ 4.763626  -3.3248022  3.7807696 -7.775502 ]]
Iteration 700 of 1000: loss=0.417 " + "l1=0.246" + "l2=0.171 f=-0.636 shape=(1, 9000, 1)
logits [[ 4.5514913 -3.352619   3.79508   -7.537597 ]]
Iteration 800 of 1000: loss=0.369 " + "l1=0.202" + "l2=0.167 f=-0.632 shape=(1, 9000, 1)
logits [[ 4.4162307 -3.3594263  3.7945256 -7.3812885]]
Iteration 900 of 1000: loss=0.331 " + "l1=0.168" + "l2=0.163 f=-0.631 shape=(1, 9000, 1)
logits [[ 4.314127  -3.3465216  3.796538  -7.2893043]]
--- 261.9996645450592 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.147 " + "l1=0.147" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 5.9336157 -3.0260127  3.4173348 -8.793019 ]]
Iteration 100 of 1000: loss=0.147 " + "l1=0.146" + "l2=0.000397 f=-0.612 shape=(1, 9000, 1)
logits [[ 5.895465  -3.0049646  3.3959484 -8.734368 ]]
Iteration 200 of 1000: loss=0.147 " + "l1=0.146" + "l2=0.000405 f=-0.611 shape=(1, 9000, 1)
logits [[ 5.889703  -2.9997332  3.3911543 -8.724614 ]]
Iteration 300 of 1000: loss=0.146 " + "l1=0.146" + "l2=0.0005 f=-0.61 shape=(1, 9000, 1)
logits [[ 5.8823705 -2.9942915  3.3859243 -8.712402 ]]
Iteration 400 of 1000: loss=0.146 " + "l1=0.146" + "l2=0.000587 f=-0.608 shape=(1, 9000, 1)
logits [[ 5.875296  -2.9891715  3.3809214 -8.700305 ]]
Iteration 500 of 1000: loss=0.146 " + "l1=0.146" + "l2=0.000696 f=-0.607 shape=(1, 9000, 1)
logits [[ 5.8685837 -2.9843905  3.3762338 -8.6886635]]
Iteration 600 of 1000: loss=0.146 " + "l1=0.145" + "l2=0.000847 f=-0.606 shape=(1, 9000, 1)
logits [[ 5.8623548 -2.9797885  3.3717358 -8.677643 ]]
Iteration 700 of 1000: loss=0.146 " + "l1=0.145" + "l2=0.000995 f=-0.605 shape=(1, 9000, 1)
logits [[ 5.8568068 -2.9759605  3.3679464 -8.668055 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.47 " + "l1=1.47" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 5.9336157 -3.0260127  3.4173348 -8.793019 ]]
Iteration 100 of 1000: loss=1.42 " + "l1=1.39" + "l2=0.0309 f=-0.573 shape=(1, 9000, 1)
logits [[ 5.600315  -2.8418312  3.2308905 -8.281242 ]]
Iteration 200 of 1000: loss=1.39 " + "l1=1.35" + "l2=0.0448 f=-0.551 shape=(1, 9000, 1)
logits [[ 5.4521008 -2.7647119  3.1472995 -8.037969 ]]
Iteration 300 of 1000: loss=1.37 " + "l1=1.31" + "l2=0.0595 f=-0.532 shape=(1, 9000, 1)
logits [[ 5.3056397 -2.7081077  3.075466  -7.801903 ]]
Iteration 400 of 1000: loss=1.35 " + "l1=1.27" + "l2=0.0755 f=-0.518 shape=(1, 9000, 1)
logits [[ 5.1447983 -2.656708   3.0094547 -7.5691123]]
Iteration 500 of 1000: loss=1.32 " + "l1=1.23" + "l2=0.0926 f=-0.501 shape=(1, 9000, 1)
logits [[ 4.9835997 -2.605728   2.9411147 -7.3241253]]
Iteration 600 of 1000: loss=1.3 " + "l1=1.19" + "l2=0.108 f=-0.49 shape=(1, 9000, 1)
logits [[ 4.8394303 -2.5779345  2.8868678 -7.1084585]]
Iteration 700 of 1000: loss=1.28 " + "l1=1.16" + "l2=0.123 f=-0.477 shape=(1, 9000, 1)
logits [[ 4.710354  -2.54674    2.8391042 -6.910798 ]]
Iteration 800 of 1000: loss=1.27 " + "l1=1.14" + "l2=0.132 f=-0.469 shape=(1, 9000, 1)
logits [[ 4.609827  -2.5371737  2.8154192 -6.7644935]]
Iteration 900 of 1000: loss=1.25 " + "l1=1.11" + "l2=0.141 f=-0.463 shape=(1, 9000, 1)
logits [[ 4.5012646 -2.5323234  2.7892306 -6.6103096]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=14.7 " + "l1=14.7" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 5.9336157 -3.0260127  3.4173348 -8.793019 ]]
Iteration 100 of 1000: loss=8.55 " + "l1=5.42" + "l2=3.14 f=-0.337 shape=(1, 9000, 1)
logits [[ 2.0288868 -2.0147467  2.02404   -3.3868213]]
Iteration 200 of 1000: loss=6.7 " + "l1=3.69" + "l2=3.01 f=-0.213 shape=(1, 9000, 1)
logits [[ 1.582294  -1.9909543  1.6243697 -2.067154 ]]
Iteration 300 of 1000: loss=5.29 " + "l1=2.08" + "l2=3.2 f=-0.127 shape=(1, 9000, 1)
logits [[ 0.8886861 -1.7773458  1.2314097 -0.8496266]]
Iteration 400 of 1000: loss=4.41 " + "l1=1.41" + "l2=3 f=-0.106 shape=(1, 9000, 1)
logits [[ 0.5739801  -1.6717471   1.0421227  -0.36914667]]
Iteration 500 of 1000: loss=3.81 " + "l1=0.9" + "l2=2.91 f=-0.111 shape=(1, 9000, 1)
logits [[ 0.2557517  -1.5867885   0.89374083 -0.00624429]]
Iteration 600 of 1000: loss=3.23 " + "l1=0.364" + "l2=2.87 f=-0.107 shape=(1, 9000, 1)
logits [[-0.03112349 -1.5408044   0.7532637   0.38934928]]
Iteration 700 of 1000: loss=2.74 " + "l1=0.0156" + "l2=2.73 f=-0.114 shape=(1, 9000, 1)
logits [[-0.2182863  -1.5099684   0.64464796  0.6290467 ]]
Iteration 800 of 1000: loss=2.44 " + "l1=0.0183" + "l2=2.42 f=-0.116 shape=(1, 9000, 1)
logits [[-0.23903617 -1.4924172   0.6421553   0.6238542 ]]
Iteration 900 of 1000: loss=2.19 " + "l1=0.00583" + "l2=2.18 f=-0.122 shape=(1, 9000, 1)
logits [[-0.29140812 -1.481173    0.6445825   0.638755  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=8.1 " + "l1=8.1" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 5.9336157 -3.0260127  3.4173348 -8.793019 ]]
Iteration 100 of 1000: loss=6.1 " + "l1=4.93" + "l2=1.17 f=-0.418 shape=(1, 9000, 1)
logits [[ 3.5258408 -2.2515714  2.492181  -5.4386873]]
Iteration 200 of 1000: loss=4.86 " + "l1=3.1" + "l2=1.77 f=-0.325 shape=(1, 9000, 1)
logits [[ 2.1522334 -2.1290152  2.152307  -3.4760396]]
Iteration 300 of 1000: loss=4.23 " + "l1=2.57" + "l2=1.66 f=-0.256 shape=(1, 9000, 1)
logits [[ 1.9331439 -2.1354434  1.9276017 -2.747656 ]]
Iteration 400 of 1000: loss=3.75 " + "l1=2.08" + "l2=1.67 f=-0.207 shape=(1, 9000, 1)
logits [[ 1.6482886 -2.0008547  1.6555401 -2.1297286]]
Iteration 500 of 1000: loss=3.43 " + "l1=1.68" + "l2=1.75 f=-0.172 shape=(1, 9000, 1)
logits [[ 1.3381292 -1.8646988  1.4471314 -1.6104808]]
Iteration 600 of 1000: loss=3.17 " + "l1=1.36" + "l2=1.81 f=-0.146 shape=(1, 9000, 1)
logits [[ 1.0153937 -1.7411603  1.3026143 -1.1615294]]
Iteration 700 of 1000: loss=2.98 " + "l1=1.19" + "l2=1.79 f=-0.137 shape=(1, 9000, 1)
logits [[ 0.8646681 -1.7008611  1.221833  -0.9329652]]
Iteration 800 of 1000: loss=2.72 " + "l1=0.926" + "l2=1.79 f=-0.131 shape=(1, 9000, 1)
logits [[ 0.63811827 -1.6827515   1.103069   -0.5806311 ]]
Iteration 900 of 1000: loss=2.4 " + "l1=0.677" + "l2=1.72 f=-0.138 shape=(1, 9000, 1)
logits [[ 0.42504945 -1.6919707   0.97304815 -0.25871414]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=11.4 " + "l1=11.4" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 5.9336157 -3.0260127  3.4173348 -8.793019 ]]
Iteration 100 of 1000: loss=7.54 " + "l1=5.2" + "l2=2.34 f=-0.381 shape=(1, 9000, 1)
logits [[ 2.5422475 -2.1159582  2.2171757 -4.1657968]]
Iteration 200 of 1000: loss=5.86 " + "l1=3.61" + "l2=2.25 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.9006021 -2.079772   1.8998994 -2.7594109]]
Iteration 300 of 1000: loss=4.96 " + "l1=2.7" + "l2=2.26 f=-0.192 shape=(1, 9000, 1)
logits [[ 1.5266038 -1.98133    1.581679  -1.8967842]]
Iteration 400 of 1000: loss=4.14 " + "l1=1.68" + "l2=2.47 f=-0.128 shape=(1, 9000, 1)
logits [[ 0.9411143  -1.7884779   1.2509328  -0.91365176]]
Iteration 500 of 1000: loss=3.62 " + "l1=1.25" + "l2=2.37 f=-0.113 shape=(1, 9000, 1)
logits [[ 0.69888365 -1.6863191   1.0774142  -0.54186404]]
Iteration 600 of 1000: loss=3.16 " + "l1=0.913" + "l2=2.25 f=-0.123 shape=(1, 9000, 1)
logits [[ 0.4496294  -1.6549268   0.9468013  -0.23185903]]
Iteration 700 of 1000: loss=2.7 " + "l1=0.467" + "l2=2.23 f=-0.129 shape=(1, 9000, 1)
logits [[ 0.13791168 -1.620583    0.78434235  0.18152517]]
Iteration 800 of 1000: loss=2.26 " + "l1=0.00974" + "l2=2.25 f=-0.118 shape=(1, 9000, 1)
logits [[-0.16855052 -1.5399729   0.62357277  0.61100495]]
Iteration 900 of 1000: loss=1.97 " + "l1=0.00471" + "l2=1.96 f=-0.129 shape=(1, 9000, 1)
logits [[-0.1805527  -1.5444062   0.6082821   0.60220885]]
--- 283.3653109073639 seconds ---
Adv result:3
Loading record A04122
(1, 12078)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.105 " + "l1=0.105" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 6.4430814 -4.095742   4.3404546 -9.156489 ]]
Iteration 100 of 1000: loss=0.105 " + "l1=0.105" + "l2=0.000226 f=-0.616 shape=(1, 9000, 1)
logits [[ 6.4130926 -4.08036    4.330365  -9.125955 ]]
Iteration 200 of 1000: loss=0.105 " + "l1=0.105" + "l2=0.000183 f=-0.616 shape=(1, 9000, 1)
logits [[ 6.4120703 -4.0792007  4.3296657 -9.125459 ]]
Iteration 300 of 1000: loss=0.105 " + "l1=0.105" + "l2=0.000224 f=-0.616 shape=(1, 9000, 1)
logits [[ 6.4083076 -4.0765333  4.3279653 -9.122363 ]]
Iteration 400 of 1000: loss=0.105 " + "l1=0.105" + "l2=0.000252 f=-0.616 shape=(1, 9000, 1)
logits [[ 6.4042435 -4.0738206  4.3262076 -9.118979 ]]
Iteration 500 of 1000: loss=0.105 " + "l1=0.105" + "l2=0.000324 f=-0.616 shape=(1, 9000, 1)
logits [[ 6.4002066 -4.071167   4.3245454 -9.115642 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.05 " + "l1=1.05" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 6.4430814 -4.095742   4.3404546 -9.156489 ]]
Iteration 100 of 1000: loss=1.03 " + "l1=1.02" + "l2=0.0113 f=-0.607 shape=(1, 9000, 1)
logits [[ 6.2358403 -3.9865541  4.2726793 -8.950966 ]]
Iteration 200 of 1000: loss=1.03 " + "l1=1.01" + "l2=0.0158 f=-0.605 shape=(1, 9000, 1)
logits [[ 6.1517043 -3.9447818  4.2391825 -8.867515 ]]
Iteration 300 of 1000: loss=1.02 " + "l1=0.997" + "l2=0.0213 f=-0.603 shape=(1, 9000, 1)
logits [[ 6.065841  -3.9004087  4.207083  -8.782779 ]]
Iteration 400 of 1000: loss=1.01 " + "l1=0.984" + "l2=0.0266 f=-0.601 shape=(1, 9000, 1)
logits [[ 5.9827905 -3.8580215  4.1743865 -8.703511 ]]
Iteration 500 of 1000: loss=1 " + "l1=0.972" + "l2=0.0315 f=-0.601 shape=(1, 9000, 1)
logits [[ 5.903439 -3.819545  4.142809 -8.630191]]
Iteration 600 of 1000: loss=0.997 " + "l1=0.961" + "l2=0.0361 f=-0.601 shape=(1, 9000, 1)
logits [[ 5.823734  -3.7818484  4.1113715 -8.556478 ]]
Iteration 700 of 1000: loss=0.99 " + "l1=0.949" + "l2=0.0407 f=-0.6 shape=(1, 9000, 1)
logits [[ 5.743004  -3.7470205  4.080908  -8.477706 ]]
Iteration 800 of 1000: loss=0.983 " + "l1=0.938" + "l2=0.0445 f=-0.6 shape=(1, 9000, 1)
logits [[ 5.667872 -3.714514  4.050512 -8.40388 ]]
Iteration 900 of 1000: loss=0.976 " + "l1=0.928" + "l2=0.0476 f=-0.599 shape=(1, 9000, 1)
logits [[ 5.595111  -3.6846032  4.0238657 -8.331786 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.5 " + "l1=10.5" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 6.4430814 -4.095742   4.3404546 -9.156489 ]]
Iteration 100 of 1000: loss=7.94 " + "l1=6.45" + "l2=1.48 f=-0.581 shape=(1, 9000, 1)
logits [[ 3.6022112 -2.8518057  3.1655855 -6.24192  ]]
Iteration 200 of 1000: loss=6.83 " + "l1=5.02" + "l2=1.8 f=-0.525 shape=(1, 9000, 1)
logits [[ 2.683851  -2.3366864  2.685241  -5.1318107]]
Iteration 300 of 1000: loss=6.2 " + "l1=4.31" + "l2=1.89 f=-0.479 shape=(1, 9000, 1)
logits [[ 2.3754091 -1.9317946  2.3686097 -4.727059 ]]
Iteration 400 of 1000: loss=5.56 " + "l1=3.31" + "l2=2.25 f=-0.439 shape=(1, 9000, 1)
logits [[ 1.9544085 -1.3453863  1.9636123 -4.329076 ]]
Iteration 500 of 1000: loss=5.15 " + "l1=2.85" + "l2=2.3 f=-0.406 shape=(1, 9000, 1)
logits [[ 1.7570577 -1.0926864  1.7481949 -4.037444 ]]
Iteration 600 of 1000: loss=4.8 " + "l1=2.43" + "l2=2.37 f=-0.365 shape=(1, 9000, 1)
logits [[ 1.5543287 -0.8753887  1.5569468 -3.6950104]]
Iteration 700 of 1000: loss=4.52 " + "l1=2.11" + "l2=2.42 f=-0.334 shape=(1, 9000, 1)
logits [[ 1.3930218 -0.7112961  1.3941495 -3.413428 ]]
Iteration 800 of 1000: loss=4.33 " + "l1=1.91" + "l2=2.42 f=-0.309 shape=(1, 9000, 1)
logits [[ 1.2866622 -0.6090257  1.300278  -3.2148373]]
Iteration 900 of 1000: loss=4.15 " + "l1=1.72" + "l2=2.44 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.1830192 -0.5100096  1.2055707 -3.0039067]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=105 " + "l1=105" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 6.4430814 -4.095742   4.3404546 -9.156489 ]]
Iteration 100 of 1000: loss=28.9 " + "l1=14" + "l2=14.9 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.9952034  -0.39386803  1.0029438  -2.818419  ]]
Iteration 200 of 1000: loss=14.2 " + "l1=0" + "l2=14.2 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.10635853  0.5211647   0.51676625 -2.1361108 ]]
Iteration 300 of 1000: loss=12.1 " + "l1=0" + "l2=12.1 f=-0.244 shape=(1, 9000, 1)
logits [[ 0.1523636   0.5070658   0.49845645 -2.1337092 ]]
Iteration 400 of 1000: loss=11.1 " + "l1=0" + "l2=11.1 f=-0.238 shape=(1, 9000, 1)
logits [[ 0.19276403  0.488235    0.48276955 -2.1158533 ]]
Iteration 500 of 1000: loss=10.3 " + "l1=0.0318" + "l2=10.3 f=-0.233 shape=(1, 9000, 1)
logits [[ 0.26608214  0.4705294   0.47371298 -2.143335  ]]
Iteration 600 of 1000: loss=9.77 " + "l1=0" + "l2=9.77 f=-0.227 shape=(1, 9000, 1)
logits [[ 0.23102173  0.48108923  0.46177852 -2.0828762 ]]
Iteration 700 of 1000: loss=9.39 " + "l1=0.222" + "l2=9.17 f=-0.217 shape=(1, 9000, 1)
logits [[ 0.28641313  0.45767385  0.47984794 -2.090672  ]]
Iteration 800 of 1000: loss=8.85 " + "l1=0" + "l2=8.85 f=-0.213 shape=(1, 9000, 1)
logits [[ 0.2670643   0.47536337  0.46761024 -2.0636094 ]]
Iteration 900 of 1000: loss=8.47 " + "l1=0.0496" + "l2=8.42 f=-0.209 shape=(1, 9000, 1)
logits [[ 0.274946   0.4562314  0.4611933 -2.0280082]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=58 " + "l1=58" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 6.4430814 -4.095742   4.3404546 -9.156489 ]]
Iteration 100 of 1000: loss=21.4 " + "l1=11.8" + "l2=9.6 f=-0.381 shape=(1, 9000, 1)
logits [[ 1.3610607 -0.7865144  1.3621563 -3.4609437]]
Iteration 200 of 1000: loss=11.9 " + "l1=0.534" + "l2=11.4 f=-0.256 shape=(1, 9000, 1)
logits [[ 0.4229249  0.4680522  0.5651693 -2.4783478]]
Iteration 300 of 1000: loss=9.99 " + "l1=0.117" + "l2=9.88 f=-0.262 shape=(1, 9000, 1)
logits [[ 0.32969394  0.48965216  0.5109066  -2.379471  ]]
Iteration 400 of 1000: loss=8.96 " + "l1=0" + "l2=8.96 f=-0.255 shape=(1, 9000, 1)
logits [[ 0.27878353  0.49913165  0.4989501  -2.2954693 ]]
Iteration 500 of 1000: loss=8.31 " + "l1=0.08" + "l2=8.23 f=-0.239 shape=(1, 9000, 1)
logits [[ 0.3221168   0.46583077  0.48037317 -2.223148  ]]
Iteration 600 of 1000: loss=7.77 " + "l1=0" + "l2=7.77 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.329908    0.46240065  0.45921135 -2.1725862 ]]
Iteration 700 of 1000: loss=7.32 " + "l1=0.0113" + "l2=7.31 f=-0.224 shape=(1, 9000, 1)
logits [[ 0.3127429   0.4467322   0.44879386 -2.1055393 ]]
Iteration 800 of 1000: loss=6.95 " + "l1=0.0141" + "l2=6.94 f=-0.222 shape=(1, 9000, 1)
logits [[ 0.27526173  0.4308412   0.4334054  -2.0283985 ]]
Iteration 900 of 1000: loss=6.67 " + "l1=0" + "l2=6.67 f=-0.221 shape=(1, 9000, 1)
logits [[ 0.24650094  0.42376667  0.41718313 -1.9722152 ]]
--- 275.53960609436035 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.021 " + "l1=0.021" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 6.4430814 -4.095742   4.3404546 -9.156489 ]]
Iteration 100 of 1000: loss=0.0209 " + "l1=0.0207" + "l2=0.000188 f=-0.617 shape=(1, 9000, 1)
logits [[ 6.4161506 -4.0997324  4.345759  -9.130604 ]]
Iteration 200 of 1000: loss=0.0208 " + "l1=0.0207" + "l2=0.000132 f=-0.617 shape=(1, 9000, 1)
logits [[ 6.417441  -4.0998263  4.3460045 -9.131992 ]]
Iteration 300 of 1000: loss=0.0208 " + "l1=0.0207" + "l2=0.000155 f=-0.617 shape=(1, 9000, 1)
logits [[ 6.4154925 -4.100257   4.3466144 -9.130445 ]]
Iteration 400 of 1000: loss=0.0208 " + "l1=0.0207" + "l2=0.000185 f=-0.617 shape=(1, 9000, 1)
logits [[ 6.4129863 -4.1007648  4.3472795 -9.128468 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.21 " + "l1=0.21" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 6.4430814 -4.095742   4.3404546 -9.156489 ]]
Iteration 100 of 1000: loss=0.198 " + "l1=0.19" + "l2=0.00719 f=-0.616 shape=(1, 9000, 1)
logits [[ 6.2787504 -4.1210003  4.3752575 -8.997494 ]]
Iteration 200 of 1000: loss=0.194 " + "l1=0.184" + "l2=0.0095 f=-0.617 shape=(1, 9000, 1)
logits [[ 6.2262964 -4.128286   4.3831997 -8.948691 ]]
Iteration 300 of 1000: loss=0.19 " + "l1=0.179" + "l2=0.0119 f=-0.618 shape=(1, 9000, 1)
logits [[ 6.17436   -4.1333413  4.388149  -8.900071 ]]
Iteration 400 of 1000: loss=0.187 " + "l1=0.174" + "l2=0.0138 f=-0.619 shape=(1, 9000, 1)
logits [[ 6.1277843 -4.137996   4.391422  -8.858327 ]]
Iteration 500 of 1000: loss=0.185 " + "l1=0.169" + "l2=0.0156 f=-0.621 shape=(1, 9000, 1)
logits [[ 6.084951  -4.142335   4.3944116 -8.820751 ]]
Iteration 600 of 1000: loss=0.182 " + "l1=0.165" + "l2=0.0172 f=-0.623 shape=(1, 9000, 1)
logits [[ 6.0442467 -4.145688   4.3968983 -8.7864685]]
Iteration 700 of 1000: loss=0.179 " + "l1=0.161" + "l2=0.0185 f=-0.624 shape=(1, 9000, 1)
logits [[ 6.004549  -4.1463113  4.3975396 -8.752706 ]]
Iteration 800 of 1000: loss=0.176 " + "l1=0.156" + "l2=0.02 f=-0.625 shape=(1, 9000, 1)
logits [[ 5.9620385 -4.147844   4.397917  -8.713791 ]]
Iteration 900 of 1000: loss=0.174 " + "l1=0.152" + "l2=0.0216 f=-0.625 shape=(1, 9000, 1)
logits [[ 5.9204326 -4.1448336  4.398469  -8.675919 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.1 " + "l1=2.1" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 6.4430814 -4.095742   4.3404546 -9.156489 ]]
Iteration 100 of 1000: loss=0.745 " + "l1=0" + "l2=0.745 f=-0.638 shape=(1, 9000, 1)
logits [[ 4.3806195 -4.2771845  4.3836203 -7.0409174]]
Iteration 200 of 1000: loss=0.492 " + "l1=0.00379" + "l2=0.488 f=-0.636 shape=(1, 9000, 1)
logits [[ 4.430809  -4.3468375  4.4270225 -7.0561438]]
Iteration 300 of 1000: loss=0.422 " + "l1=0" + "l2=0.422 f=-0.637 shape=(1, 9000, 1)
logits [[ 4.4170413 -4.3468575  4.42167   -7.0393643]]
Iteration 400 of 1000: loss=0.387 " + "l1=0" + "l2=0.387 f=-0.639 shape=(1, 9000, 1)
logits [[ 4.40363   -4.335518   4.414344  -7.0377393]]
Iteration 500 of 1000: loss=0.354 " + "l1=0.00218" + "l2=0.352 f=-0.641 shape=(1, 9000, 1)
logits [[ 4.3952107 -4.3121486  4.393033  -7.039775 ]]
Iteration 600 of 1000: loss=0.328 " + "l1=0.000322" + "l2=0.328 f=-0.639 shape=(1, 9000, 1)
logits [[ 4.3841248 -4.294378   4.3838024 -7.0286474]]
Iteration 700 of 1000: loss=0.307 " + "l1=0" + "l2=0.307 f=-0.638 shape=(1, 9000, 1)
logits [[ 4.3696017 -4.2723083  4.372562  -7.0233645]]
Iteration 800 of 1000: loss=0.291 " + "l1=0" + "l2=0.291 f=-0.641 shape=(1, 9000, 1)
logits [[ 4.353773 -4.263069  4.3635   -7.018672]]
Iteration 900 of 1000: loss=0.274 " + "l1=0" + "l2=0.274 f=-0.64 shape=(1, 9000, 1)
logits [[ 4.339138  -4.245837   4.3477554 -7.000969 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.16 " + "l1=1.16" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 6.4430814 -4.095742   4.3404546 -9.156489 ]]
Iteration 100 of 1000: loss=0.74 " + "l1=0.5" + "l2=0.24 f=-0.619 shape=(1, 9000, 1)
logits [[ 5.328955  -4.193156   4.4206142 -8.033706 ]]
Iteration 200 of 1000: loss=0.559 " + "l1=0.225" + "l2=0.334 f=-0.625 shape=(1, 9000, 1)
logits [[ 4.8085914 -4.2175574  4.398992  -7.488585 ]]
Iteration 300 of 1000: loss=0.424 " + "l1=0.0116" + "l2=0.412 f=-0.637 shape=(1, 9000, 1)
logits [[ 4.4003053 -4.2705145  4.3791947 -7.056532 ]]
Iteration 400 of 1000: loss=0.37 " + "l1=0.0109" + "l2=0.359 f=-0.641 shape=(1, 9000, 1)
logits [[ 4.3762136 -4.259483   4.356366  -7.037274 ]]
Iteration 500 of 1000: loss=0.33 " + "l1=0.00666" + "l2=0.324 f=-0.642 shape=(1, 9000, 1)
logits [[ 4.3551064 -4.2371163  4.343002  -7.0280695]]
Iteration 600 of 1000: loss=0.296 " + "l1=0.00191" + "l2=0.294 f=-0.642 shape=(1, 9000, 1)
logits [[ 4.3329635 -4.216897   4.329496  -7.0141854]]
Iteration 700 of 1000: loss=0.272 " + "l1=0.00563" + "l2=0.267 f=-0.643 shape=(1, 9000, 1)
logits [[ 4.332352  -4.1867976  4.3221107 -7.0409446]]
Iteration 800 of 1000: loss=0.25 " + "l1=0" + "l2=0.25 f=-0.643 shape=(1, 9000, 1)
logits [[ 4.3107967 -4.17356    4.3120623 -7.021038 ]]
Iteration 900 of 1000: loss=0.234 " + "l1=0.00219" + "l2=0.232 f=-0.64 shape=(1, 9000, 1)
logits [[ 4.3051686 -4.161285   4.301178  -7.0062885]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.683 " + "l1=0.683" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 6.4430814 -4.095742   4.3404546 -9.156489 ]]
Iteration 100 of 1000: loss=0.546 " + "l1=0.468" + "l2=0.0776 f=-0.621 shape=(1, 9000, 1)
logits [[ 5.853757  -4.1638174  4.4137135 -8.588483 ]]
Iteration 200 of 1000: loss=0.486 " + "l1=0.367" + "l2=0.119 f=-0.619 shape=(1, 9000, 1)
logits [[ 5.544501 -4.178175  4.415794 -8.257919]]
Iteration 300 of 1000: loss=0.433 " + "l1=0.273" + "l2=0.16 f=-0.618 shape=(1, 9000, 1)
logits [[ 5.2371254 -4.1737094  4.396151  -7.9298444]]
Iteration 400 of 1000: loss=0.388 " + "l1=0.205" + "l2=0.183 f=-0.621 shape=(1, 9000, 1)
logits [[ 5.008556  -4.1603827  4.376388  -7.7092824]]
Iteration 500 of 1000: loss=0.358 " + "l1=0.171" + "l2=0.187 f=-0.623 shape=(1, 9000, 1)
logits [[ 4.883034  -4.1424956  4.356845  -7.5908175]]
Iteration 600 of 1000: loss=0.332 " + "l1=0.131" + "l2=0.201 f=-0.627 shape=(1, 9000, 1)
logits [[ 4.7430835 -4.1357327  4.3402033 -7.4558425]]
Iteration 700 of 1000: loss=0.307 " + "l1=0.097" + "l2=0.21 f=-0.634 shape=(1, 9000, 1)
logits [[ 4.626158  -4.1389103  4.3277693 -7.351149 ]]
Iteration 800 of 1000: loss=0.285 " + "l1=0.0743" + "l2=0.211 f=-0.634 shape=(1, 9000, 1)
logits [[ 4.548863  -4.131917   4.320147  -7.2717237]]
Iteration 900 of 1000: loss=0.263 " + "l1=0.0465" + "l2=0.217 f=-0.632 shape=(1, 9000, 1)
logits [[ 4.4686203 -4.136138   4.3256526 -7.187514 ]]
--- 270.82771253585815 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.156 " + "l1=0.156" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 6.4430814 -4.095742   4.3404546 -9.156489 ]]
Iteration 100 of 1000: loss=0.155 " + "l1=0.155" + "l2=0.00053 f=-0.614 shape=(1, 9000, 1)
logits [[ 6.393141  -4.094356   4.3301883 -9.084757 ]]
Iteration 200 of 1000: loss=0.155 " + "l1=0.155" + "l2=0.000527 f=-0.614 shape=(1, 9000, 1)
logits [[ 6.386637 -4.093791  4.328421 -9.076297]]
Iteration 300 of 1000: loss=0.155 " + "l1=0.154" + "l2=0.000637 f=-0.613 shape=(1, 9000, 1)
logits [[ 6.377714  -4.0930057  4.3262453 -9.064675 ]]
Iteration 400 of 1000: loss=0.155 " + "l1=0.154" + "l2=0.000768 f=-0.613 shape=(1, 9000, 1)
logits [[ 6.3696127 -4.0922585  4.3242564 -9.054495 ]]
Iteration 500 of 1000: loss=0.155 " + "l1=0.154" + "l2=0.000844 f=-0.613 shape=(1, 9000, 1)
logits [[ 6.362     -4.091535   4.3224573 -9.045282 ]]
Iteration 600 of 1000: loss=0.155 " + "l1=0.154" + "l2=0.000925 f=-0.613 shape=(1, 9000, 1)
logits [[ 6.3551097 -4.0909333  4.3208914 -9.0371275]]
Iteration 700 of 1000: loss=0.155 " + "l1=0.154" + "l2=0.00106 f=-0.613 shape=(1, 9000, 1)
logits [[ 6.3484783 -4.0903287  4.319505  -9.029601 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.56 " + "l1=1.56" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 6.4430814 -4.095742   4.3404546 -9.156489 ]]
Iteration 100 of 1000: loss=1.49 " + "l1=1.45" + "l2=0.0387 f=-0.596 shape=(1, 9000, 1)
logits [[ 6.005431  -4.088262   4.2410965 -8.543845 ]]
Iteration 200 of 1000: loss=1.46 " + "l1=1.4" + "l2=0.0656 f=-0.589 shape=(1, 9000, 1)
logits [[ 5.749197  -4.0679774  4.1682262 -8.204612 ]]
Iteration 300 of 1000: loss=1.43 " + "l1=1.35" + "l2=0.0872 f=-0.581 shape=(1, 9000, 1)
logits [[ 5.5319376 -4.032234   4.1012015 -7.9266453]]
Iteration 400 of 1000: loss=1.41 " + "l1=1.3" + "l2=0.108 f=-0.578 shape=(1, 9000, 1)
logits [[ 5.3230968 -3.9952192  4.032814  -7.672718 ]]
Iteration 500 of 1000: loss=1.38 " + "l1=1.25" + "l2=0.13 f=-0.574 shape=(1, 9000, 1)
logits [[ 5.1033964 -3.9501414  3.958977  -7.4102073]]
Iteration 600 of 1000: loss=1.36 " + "l1=1.22" + "l2=0.145 f=-0.572 shape=(1, 9000, 1)
logits [[ 4.9450107 -3.9255397  3.9130187 -7.220618 ]]
Iteration 700 of 1000: loss=1.35 " + "l1=1.19" + "l2=0.153 f=-0.57 shape=(1, 9000, 1)
logits [[ 4.8364363 -3.9022486  3.8773172 -7.090863 ]]
Iteration 800 of 1000: loss=1.33 " + "l1=1.17" + "l2=0.159 f=-0.568 shape=(1, 9000, 1)
logits [[ 4.7374463 -3.8756797  3.8373463 -6.971733 ]]
Iteration 900 of 1000: loss=1.32 " + "l1=1.15" + "l2=0.164 f=-0.565 shape=(1, 9000, 1)
logits [[ 4.6537585 -3.8593967  3.8082836 -6.8632483]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=15.6 " + "l1=15.6" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 6.4430814 -4.095742   4.3404546 -9.156489 ]]
Iteration 100 of 1000: loss=9.3 " + "l1=6.84" + "l2=2.46 f=-0.401 shape=(1, 9000, 1)
logits [[ 2.8228872 -3.4721134  2.9429634 -3.8976686]]
Iteration 200 of 1000: loss=7.86 " + "l1=5.07" + "l2=2.8 f=-0.29 shape=(1, 9000, 1)
logits [[ 2.108152  -3.2238262  2.5123522 -2.5547955]]
Iteration 300 of 1000: loss=6.95 " + "l1=3.83" + "l2=3.12 f=-0.206 shape=(1, 9000, 1)
logits [[ 1.5975218 -3.0248723  2.2156162 -1.6120602]]
Iteration 400 of 1000: loss=6.26 " + "l1=2.76" + "l2=3.5 f=-0.155 shape=(1, 9000, 1)
logits [[ 1.1214827 -2.7914028  1.9065684 -0.8554492]]
Iteration 500 of 1000: loss=5.61 " + "l1=1.7" + "l2=3.91 f=-0.0943 shape=(1, 9000, 1)
logits [[ 0.69363743 -2.4799438   1.5544866  -0.14539614]]
Iteration 600 of 1000: loss=5.01 " + "l1=0.782" + "l2=4.23 f=-0.0802 shape=(1, 9000, 1)
logits [[ 0.43160993 -2.365922    1.1977452   0.41580188]]
Iteration 700 of 1000: loss=4.65 " + "l1=0.449" + "l2=4.2 f=-0.0833 shape=(1, 9000, 1)
logits [[ 0.3739255 -2.312111   1.0267642  0.5780786]]
Iteration 800 of 1000: loss=4.32 " + "l1=0.17" + "l2=4.15 f=-0.082 shape=(1, 9000, 1)
logits [[ 0.2792299 -2.2027495  0.8826998  0.7126405]]
Iteration 900 of 1000: loss=3.87 " + "l1=0.00686" + "l2=3.87 f=-0.0916 shape=(1, 9000, 1)
logits [[ 0.18535765 -2.183198    0.81923664  0.8123777 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=8.58 " + "l1=8.58" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 6.4430814 -4.095742   4.3404546 -9.156489 ]]
Iteration 100 of 1000: loss=6.06 " + "l1=4.73" + "l2=1.34 f=-0.496 shape=(1, 9000, 1)
logits [[ 3.4704113 -3.8233812  3.4829822 -5.1140523]]
Iteration 200 of 1000: loss=5.28 " + "l1=3.92" + "l2=1.35 f=-0.416 shape=(1, 9000, 1)
logits [[ 2.995383  -3.5288992  2.9997134 -4.130055 ]]
Iteration 300 of 1000: loss=4.93 " + "l1=3.48" + "l2=1.45 f=-0.36 shape=(1, 9000, 1)
logits [[ 2.7177699 -3.3788733  2.7741828 -3.55346  ]]
Iteration 400 of 1000: loss=4.73 " + "l1=3.19" + "l2=1.53 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.4951901 -3.229088   2.6224146 -3.1833045]]
Iteration 500 of 1000: loss=4.56 " + "l1=2.96" + "l2=1.6 f=-0.297 shape=(1, 9000, 1)
logits [[ 2.3225212 -3.150814   2.512498  -2.8710852]]
Iteration 600 of 1000: loss=4.39 " + "l1=2.68" + "l2=1.71 f=-0.266 shape=(1, 9000, 1)
logits [[ 2.108824  -3.070041   2.38756   -2.4894516]]
Iteration 700 of 1000: loss=4.22 " + "l1=2.4" + "l2=1.83 f=-0.243 shape=(1, 9000, 1)
logits [[ 1.8853796 -2.9768662  2.2377844 -2.1174226]]
Iteration 800 of 1000: loss=4.06 " + "l1=2.22" + "l2=1.84 f=-0.231 shape=(1, 9000, 1)
logits [[ 1.7365923 -2.8952532  2.138165  -1.9036996]]
Iteration 900 of 1000: loss=3.82 " + "l1=2.01" + "l2=1.81 f=-0.216 shape=(1, 9000, 1)
logits [[ 1.5456259 -2.832276   2.034763  -1.6108986]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=12.1 " + "l1=12.1" + "l2=0 f=-0.617 shape=(1, 9000, 1)
logits [[ 6.4430814 -4.095742   4.3404546 -9.156489 ]]
Iteration 100 of 1000: loss=7.77 " + "l1=5.95" + "l2=1.83 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.1646883 -3.6392412  3.1793365 -4.4932284]]
Iteration 200 of 1000: loss=6.66 " + "l1=4.68" + "l2=1.98 f=-0.344 shape=(1, 9000, 1)
logits [[ 2.5281544 -3.3890584  2.7609372 -3.2747025]]
Iteration 300 of 1000: loss=6.09 " + "l1=3.88" + "l2=2.21 f=-0.275 shape=(1, 9000, 1)
logits [[ 2.1405275 -3.1743922  2.4719849 -2.5393174]]
Iteration 400 of 1000: loss=5.7 " + "l1=3.25" + "l2=2.45 f=-0.227 shape=(1, 9000, 1)
logits [[ 1.8192025 -3.0389073  2.2509747 -1.9386818]]
Iteration 500 of 1000: loss=5.4 " + "l1=2.8" + "l2=2.6 f=-0.198 shape=(1, 9000, 1)
logits [[ 1.5366728 -2.9088943  2.0950663 -1.5145003]]
Iteration 600 of 1000: loss=5.06 " + "l1=2.19" + "l2=2.87 f=-0.161 shape=(1, 9000, 1)
logits [[ 1.1934178 -2.6721697  1.8311648 -0.9972281]]
Iteration 700 of 1000: loss=4.76 " + "l1=1.76" + "l2=3 f=-0.126 shape=(1, 9000, 1)
logits [[ 0.9453316  -2.5157447   1.6689185  -0.60341454]]
Iteration 800 of 1000: loss=4.48 " + "l1=1.4" + "l2=3.09 f=-0.103 shape=(1, 9000, 1)
logits [[ 0.78435457 -2.4077487   1.50651    -0.29412916]]
Iteration 900 of 1000: loss=4.11 " + "l1=1.02" + "l2=3.09 f=-0.0936 shape=(1, 9000, 1)
logits [[ 0.6416787  -2.4080546   1.3551534   0.03670034]]
--- 286.0728886127472 seconds ---
Adv result:3
Loading record A04123
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0294 " + "l1=0.0294" + "l2=0 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.6047586 -1.3383827  1.568753  -3.252443 ]]
Iteration 100 of 1000: loss=0.0288 " + "l1=0.0285" + "l2=0.000351 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.5420939 -1.3057374  1.541062  -3.1945245]]
Iteration 200 of 1000: loss=0.0287 " + "l1=0.0283" + "l2=0.000336 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.5336536 -1.2985619  1.5336474 -3.1858528]]
Iteration 300 of 1000: loss=0.0285 " + "l1=0.0282" + "l2=0.000367 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.5257605 -1.2909046  1.5258838 -3.1776698]]
Iteration 400 of 1000: loss=0.0284 " + "l1=0.028" + "l2=0.000437 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.5181206 -1.2829217  1.5180255 -3.1699746]]
Iteration 500 of 1000: loss=0.0284 " + "l1=0.0279" + "l2=0.000525 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.5098109 -1.2749363  1.5101048 -3.1613905]]
Iteration 600 of 1000: loss=0.0283 " + "l1=0.0277" + "l2=0.000595 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.5023412 -1.2677455  1.5027382 -3.1535459]]
Iteration 700 of 1000: loss=0.0283 " + "l1=0.0276" + "l2=0.000734 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.4951673 -1.2608097  1.4956307 -3.1460376]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.294 " + "l1=0.294" + "l2=0 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.6047586 -1.3383827  1.568753  -3.252443 ]]
Iteration 100 of 1000: loss=0.259 " + "l1=0.244" + "l2=0.0156 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.3455261 -1.0875529  1.3504567 -3.0237563]]
Iteration 200 of 1000: loss=0.245 " + "l1=0.225" + "l2=0.0205 f=-0.357 shape=(1, 9000, 1)
logits [[ 1.2365764  -0.99023384  1.2553599  -2.9309683 ]]
Iteration 300 of 1000: loss=0.233 " + "l1=0.208" + "l2=0.0254 f=-0.36 shape=(1, 9000, 1)
logits [[ 1.1369954 -0.9095454  1.1667552 -2.836133 ]]
Iteration 400 of 1000: loss=0.222 " + "l1=0.191" + "l2=0.0311 f=-0.364 shape=(1, 9000, 1)
logits [[ 1.0289612  -0.83079946  1.0744656  -2.7279265 ]]
Iteration 500 of 1000: loss=0.211 " + "l1=0.174" + "l2=0.0364 f=-0.366 shape=(1, 9000, 1)
logits [[ 0.9250476 -0.7579438  0.9849844 -2.6177983]]
Iteration 600 of 1000: loss=0.202 " + "l1=0.161" + "l2=0.041 f=-0.369 shape=(1, 9000, 1)
logits [[ 0.8390093 -0.6968908  0.90945   -2.529159 ]]
Iteration 700 of 1000: loss=0.194 " + "l1=0.15" + "l2=0.0445 f=-0.373 shape=(1, 9000, 1)
logits [[ 0.7686035  -0.65244734  0.846554   -2.4550464 ]]
Iteration 800 of 1000: loss=0.189 " + "l1=0.141" + "l2=0.0473 f=-0.376 shape=(1, 9000, 1)
logits [[ 0.7096075  -0.6180492   0.79544055 -2.3920379 ]]
Iteration 900 of 1000: loss=0.183 " + "l1=0.134" + "l2=0.0495 f=-0.378 shape=(1, 9000, 1)
logits [[ 0.6663065  -0.58559704  0.7520457  -2.3428524 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.94 " + "l1=2.94" + "l2=0 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.6047586 -1.3383827  1.568753  -3.252443 ]]
Iteration 100 of 1000: loss=0.964 " + "l1=0.346" + "l2=0.618 f=-0.354 shape=(1, 9000, 1)
logits [[-0.11414281 -0.01121554  0.33435765 -1.6232989 ]]
Iteration 200 of 1000: loss=0.423 " + "l1=0.00214" + "l2=0.421 f=-0.377 shape=(1, 9000, 1)
logits [[-0.37666714  0.11237652  0.11451262 -1.359026  ]]
Iteration 300 of 1000: loss=0.325 " + "l1=0.00172" + "l2=0.323 f=-0.377 shape=(1, 9000, 1)
logits [[-0.36088952  0.09412312  0.09584342 -1.3368111 ]]
Iteration 400 of 1000: loss=0.286 " + "l1=0" + "l2=0.286 f=-0.378 shape=(1, 9000, 1)
logits [[-0.34717643  0.08942217  0.08021145 -1.3361986 ]]
Iteration 500 of 1000: loss=0.26 " + "l1=0" + "l2=0.26 f=-0.379 shape=(1, 9000, 1)
logits [[-0.32892618  0.07866564  0.0766119  -1.3426945 ]]
Iteration 600 of 1000: loss=0.247 " + "l1=0" + "l2=0.247 f=-0.378 shape=(1, 9000, 1)
logits [[-0.32983994  0.08042004  0.06923314 -1.3318231 ]]
Iteration 700 of 1000: loss=0.233 " + "l1=0.00212" + "l2=0.231 f=-0.376 shape=(1, 9000, 1)
logits [[-0.31613126  0.07152031  0.07364468 -1.3320186 ]]
Iteration 800 of 1000: loss=0.224 " + "l1=0" + "l2=0.224 f=-0.374 shape=(1, 9000, 1)
logits [[-0.32508013  0.07270437  0.06511713 -1.3074888 ]]
Iteration 900 of 1000: loss=0.217 " + "l1=0" + "l2=0.217 f=-0.372 shape=(1, 9000, 1)
logits [[-0.33327505  0.07540176  0.05703191 -1.289142  ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.62 " + "l1=1.62" + "l2=0 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.6047586 -1.3383827  1.568753  -3.252443 ]]
Iteration 100 of 1000: loss=0.854 " + "l1=0.56" + "l2=0.294 f=-0.352 shape=(1, 9000, 1)
logits [[ 0.40884548 -0.35290086  0.66480035 -2.1275542 ]]
Iteration 200 of 1000: loss=0.512 " + "l1=0.16" + "l2=0.351 f=-0.369 shape=(1, 9000, 1)
logits [[-0.1407799  -0.02138777  0.27026024 -1.582803  ]]
Iteration 300 of 1000: loss=0.315 " + "l1=0.00335" + "l2=0.311 f=-0.386 shape=(1, 9000, 1)
logits [[-0.32123515  0.09824882  0.10434164 -1.4246198 ]]
Iteration 400 of 1000: loss=0.269 " + "l1=0" + "l2=0.269 f=-0.384 shape=(1, 9000, 1)
logits [[-0.32401776  0.09427059  0.08734587 -1.3940196 ]]
Iteration 500 of 1000: loss=0.245 " + "l1=0.00301" + "l2=0.242 f=-0.38 shape=(1, 9000, 1)
logits [[-0.30920058  0.07884948  0.08432601 -1.3736739 ]]
Iteration 600 of 1000: loss=0.229 " + "l1=0" + "l2=0.229 f=-0.377 shape=(1, 9000, 1)
logits [[-0.31600675  0.07976751  0.07370579 -1.3469393 ]]
Iteration 700 of 1000: loss=0.215 " + "l1=0" + "l2=0.215 f=-0.375 shape=(1, 9000, 1)
logits [[-0.31331363  0.07494482  0.07160857 -1.3333775 ]]
Iteration 800 of 1000: loss=0.204 " + "l1=0" + "l2=0.204 f=-0.373 shape=(1, 9000, 1)
logits [[-0.30645055  0.07230997  0.06941953 -1.3264201 ]]
Iteration 900 of 1000: loss=0.194 " + "l1=0" + "l2=0.194 f=-0.37 shape=(1, 9000, 1)
logits [[-0.30422953  0.0702529   0.06677009 -1.3135439 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.957 " + "l1=0.957" + "l2=0 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.6047586 -1.3383827  1.568753  -3.252443 ]]
Iteration 100 of 1000: loss=0.653 " + "l1=0.527" + "l2=0.126 f=-0.355 shape=(1, 9000, 1)
logits [[ 0.8293665  -0.65895885  0.9640128  -2.5564106 ]]
Iteration 200 of 1000: loss=0.514 " + "l1=0.351" + "l2=0.163 f=-0.363 shape=(1, 9000, 1)
logits [[ 0.4483399  -0.41544908  0.6640235  -2.1485775 ]]
Iteration 300 of 1000: loss=0.383 " + "l1=0.194" + "l2=0.189 f=-0.377 shape=(1, 9000, 1)
logits [[ 0.11860187 -0.19281165  0.40382305 -1.8361626 ]]
Iteration 400 of 1000: loss=0.302 " + "l1=0.0873" + "l2=0.215 f=-0.384 shape=(1, 9000, 1)
logits [[-0.13020638 -0.03591505  0.23278664 -1.6008831 ]]
Iteration 500 of 1000: loss=0.259 " + "l1=0.0249" + "l2=0.234 f=-0.381 shape=(1, 9000, 1)
logits [[-0.2673456   0.05425507  0.13089374 -1.442088  ]]
Iteration 600 of 1000: loss=0.229 " + "l1=0.00151" + "l2=0.228 f=-0.38 shape=(1, 9000, 1)
logits [[-0.3137      0.0828886   0.08752719 -1.3780998 ]]
Iteration 700 of 1000: loss=0.213 " + "l1=0.00117" + "l2=0.211 f=-0.377 shape=(1, 9000, 1)
logits [[-0.31673744  0.07233474  0.07594419 -1.3414999 ]]
Iteration 800 of 1000: loss=0.2 " + "l1=0.00207" + "l2=0.198 f=-0.376 shape=(1, 9000, 1)
logits [[-0.31518698  0.06308909  0.06946216 -1.3204728 ]]
Iteration 900 of 1000: loss=0.191 " + "l1=0.0043" + "l2=0.186 f=-0.373 shape=(1, 9000, 1)
logits [[-0.31187573  0.05374608  0.06698161 -1.2989827 ]]
--- 288.79835176467896 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00036 " + "l1=0.00036" + "l2=0 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.6047586 -1.3383827  1.568753  -3.252443 ]]
Iteration 100 of 1000: loss=0.000154 " + "l1=1.84e-06" + "l2=0.000152 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.567501  -1.3366576  1.567317  -3.215518 ]]
Iteration 200 of 1000: loss=0.000104 " + "l1=1.82e-06" + "l2=0.000102 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.5671697 -1.3370122  1.5669873 -3.2146728]]
Iteration 300 of 1000: loss=9.04e-05 " + "l1=0" + "l2=9.04e-05 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.5670416 -1.3377776  1.5671    -3.2139258]]
Iteration 400 of 1000: loss=9.22e-05 " + "l1=1.14e-07" + "l2=9.21e-05 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.5673    -1.3386198  1.5672885 -3.2135246]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.00018 " + "l1=0.00018" + "l2=0 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.6047586 -1.3383827  1.568753  -3.252443 ]]
Iteration 100 of 1000: loss=0.000134 " + "l1=5.72e-05" + "l2=7.68e-05 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.5792007 -1.3373709  1.5677645 -3.2267337]]
Iteration 200 of 1000: loss=0.000111 " + "l1=5.48e-05" + "l2=5.59e-05 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.5784681 -1.3373228  1.5675129 -3.2259   ]]
Iteration 300 of 1000: loss=0.000104 " + "l1=3.93e-05" + "l2=6.49e-05 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.5753726 -1.3376595  1.5675055 -3.2225983]]
Iteration 400 of 1000: loss=0.000142 " + "l1=2.13e-05" + "l2=0.000121 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.571728  -1.3381164  1.5674707 -3.218584 ]]
const [0.0025]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9e-05 " + "l1=9e-05" + "l2=0 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.6047586 -1.3383827  1.568753  -3.252443 ]]
Iteration 100 of 1000: loss=9.36e-05 " + "l1=4.35e-05" + "l2=5.02e-05 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.5853568 -1.3377292  1.5679761 -3.2325659]]
const [0.00125]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.5e-05 " + "l1=4.5e-05" + "l2=0 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.6047586 -1.3383827  1.568753  -3.252443 ]]
Iteration 100 of 1000: loss=6.31e-05 " + "l1=2.59e-05" + "l2=3.72e-05 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.5888155 -1.3378781  1.5680594 -3.235825 ]]
const [0.000625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.25e-05 " + "l1=2.25e-05" + "l2=0 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.6047586 -1.3383827  1.568753  -3.252443 ]]
Iteration 100 of 1000: loss=4.28e-05 " + "l1=1.45e-05" + "l2=2.83e-05 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.5913155 -1.3379643  1.568129  -3.2383163]]
--- 75.96782207489014 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0486 " + "l1=0.0486" + "l2=0 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.6047586 -1.3383827  1.568753  -3.252443 ]]
Iteration 100 of 1000: loss=0.0473 " + "l1=0.0468" + "l2=0.000475 f=-0.351 shape=(1, 9000, 1)
logits [[ 1.5294714 -1.3220851  1.5366813 -3.1461432]]
Iteration 200 of 1000: loss=0.047 " + "l1=0.0464" + "l2=0.00056 f=-0.349 shape=(1, 9000, 1)
logits [[ 1.5120203 -1.3175673  1.5257518 -3.117508 ]]
Iteration 300 of 1000: loss=0.0467 " + "l1=0.046" + "l2=0.000708 f=-0.348 shape=(1, 9000, 1)
logits [[ 1.4910829 -1.3126848  1.5139053 -3.0850966]]
Iteration 400 of 1000: loss=0.0464 " + "l1=0.0455" + "l2=0.000885 f=-0.347 shape=(1, 9000, 1)
logits [[ 1.4701624 -1.3081987  1.502355  -3.0525022]]
Iteration 500 of 1000: loss=0.0462 " + "l1=0.0451" + "l2=0.00112 f=-0.346 shape=(1, 9000, 1)
logits [[ 1.4496729 -1.3037131  1.4912809 -3.020894 ]]
Iteration 600 of 1000: loss=0.046 " + "l1=0.0447" + "l2=0.00126 f=-0.345 shape=(1, 9000, 1)
logits [[ 1.4309751 -1.2999018  1.4814951 -2.9926703]]
Iteration 700 of 1000: loss=0.0458 " + "l1=0.0444" + "l2=0.00145 f=-0.344 shape=(1, 9000, 1)
logits [[ 1.4127662 -1.296437   1.472208  -2.9651158]]
Iteration 800 of 1000: loss=0.0457 " + "l1=0.044" + "l2=0.0017 f=-0.343 shape=(1, 9000, 1)
logits [[ 1.3948792 -1.2938782  1.4634366 -2.9378357]]
Iteration 900 of 1000: loss=0.0455 " + "l1=0.0437" + "l2=0.00185 f=-0.343 shape=(1, 9000, 1)
logits [[ 1.3777814 -1.2913162  1.4550644 -2.9118962]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.486 " + "l1=0.486" + "l2=0 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.6047586 -1.3383827  1.568753  -3.252443 ]]
Iteration 100 of 1000: loss=0.401 " + "l1=0.366" + "l2=0.0358 f=-0.32 shape=(1, 9000, 1)
logits [[ 1.005242  -1.2013042  1.2863703 -2.3701642]]
Iteration 200 of 1000: loss=0.353 " + "l1=0.294" + "l2=0.0591 f=-0.303 shape=(1, 9000, 1)
logits [[ 0.66702324 -1.143316    1.1002827  -1.8372049 ]]
Iteration 300 of 1000: loss=0.31 " + "l1=0.23" + "l2=0.0794 f=-0.285 shape=(1, 9000, 1)
logits [[ 0.3985708 -1.0809932  0.9234994 -1.3803399]]
Iteration 400 of 1000: loss=0.265 " + "l1=0.161" + "l2=0.105 f=-0.26 shape=(1, 9000, 1)
logits [[ 0.11590889 -1.0151572   0.7333913  -0.87387806]]
Iteration 500 of 1000: loss=0.223 " + "l1=0.0977" + "l2=0.125 f=-0.242 shape=(1, 9000, 1)
logits [[-0.1337748  -0.96540076  0.5532122  -0.42392278]]
Iteration 600 of 1000: loss=0.187 " + "l1=0.0486" + "l2=0.139 f=-0.225 shape=(1, 9000, 1)
logits [[-0.31397104 -0.9178082   0.40854427 -0.07794935]]
Iteration 700 of 1000: loss=0.16 " + "l1=0.0189" + "l2=0.141 f=-0.215 shape=(1, 9000, 1)
logits [[-0.42242762 -0.90031564  0.32528856  0.13626769]]
Iteration 800 of 1000: loss=0.138 " + "l1=0.0011" + "l2=0.137 f=-0.207 shape=(1, 9000, 1)
logits [[-0.4864146  -0.89305395  0.28123182  0.27025634]]
Iteration 900 of 1000: loss=0.125 " + "l1=0" + "l2=0.125 f=-0.206 shape=(1, 9000, 1)
logits [[-0.49467784 -0.9218482   0.29462436  0.29864767]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.267 " + "l1=0.267" + "l2=0 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.6047586 -1.3383827  1.568753  -3.252443 ]]
Iteration 100 of 1000: loss=0.241 " + "l1=0.23" + "l2=0.0109 f=-0.337 shape=(1, 9000, 1)
logits [[ 1.2690159 -1.2617607  1.413752  -2.7679722]]
Iteration 200 of 1000: loss=0.228 " + "l1=0.212" + "l2=0.0161 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.1117252 -1.2304858  1.3323792 -2.5238883]]
Iteration 300 of 1000: loss=0.217 " + "l1=0.195" + "l2=0.0216 f=-0.321 shape=(1, 9000, 1)
logits [[ 0.963388  -1.2040293  1.2536277 -2.2969043]]
Iteration 400 of 1000: loss=0.205 " + "l1=0.178" + "l2=0.0275 f=-0.314 shape=(1, 9000, 1)
logits [[ 0.8211985 -1.1767293  1.1654177 -2.0666993]]
Iteration 500 of 1000: loss=0.194 " + "l1=0.162" + "l2=0.0323 f=-0.309 shape=(1, 9000, 1)
logits [[ 0.6949273 -1.1504791  1.0843046 -1.8628564]]
Iteration 600 of 1000: loss=0.186 " + "l1=0.149" + "l2=0.0366 f=-0.302 shape=(1, 9000, 1)
logits [[ 0.59119046 -1.1232634   1.0180193  -1.6954724 ]]
Iteration 700 of 1000: loss=0.177 " + "l1=0.135" + "l2=0.0421 f=-0.295 shape=(1, 9000, 1)
logits [[ 0.47265276 -1.1005509   0.9470638  -1.499047  ]]
Iteration 800 of 1000: loss=0.167 " + "l1=0.118" + "l2=0.0485 f=-0.285 shape=(1, 9000, 1)
logits [[ 0.34706602 -1.074851    0.86884296 -1.2817303 ]]
Iteration 900 of 1000: loss=0.157 " + "l1=0.104" + "l2=0.0529 f=-0.274 shape=(1, 9000, 1)
logits [[ 0.243889  -1.0463718  0.8013588 -1.0947317]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.376 " + "l1=0.376" + "l2=0 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.6047586 -1.3383827  1.568753  -3.252443 ]]
Iteration 100 of 1000: loss=0.325 " + "l1=0.303" + "l2=0.0217 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.1368649 -1.2288734  1.3483552 -2.5663784]]
Iteration 200 of 1000: loss=0.299 " + "l1=0.265" + "l2=0.0335 f=-0.316 shape=(1, 9000, 1)
logits [[ 0.89714503 -1.1873692   1.2240534  -2.199156  ]]
Iteration 300 of 1000: loss=0.272 " + "l1=0.226" + "l2=0.046 f=-0.305 shape=(1, 9000, 1)
logits [[ 0.6722225 -1.1451967  1.0874252 -1.8344464]]
Iteration 400 of 1000: loss=0.25 " + "l1=0.194" + "l2=0.0563 f=-0.293 shape=(1, 9000, 1)
logits [[ 0.49333534 -1.1014621   0.9714439  -1.5334185 ]]
Iteration 500 of 1000: loss=0.227 " + "l1=0.157" + "l2=0.0704 f=-0.277 shape=(1, 9000, 1)
logits [[ 0.29584986 -1.0599024   0.8397909  -1.1851488 ]]
Iteration 600 of 1000: loss=0.204 " + "l1=0.122" + "l2=0.0823 f=-0.262 shape=(1, 9000, 1)
logits [[ 0.1076939  -1.0147514   0.7161459  -0.85685873]]
Iteration 700 of 1000: loss=0.183 " + "l1=0.0901" + "l2=0.0926 f=-0.251 shape=(1, 9000, 1)
logits [[-0.06266659 -0.98440343  0.60345846 -0.5587715 ]]
Iteration 800 of 1000: loss=0.164 " + "l1=0.0635" + "l2=0.1 f=-0.236 shape=(1, 9000, 1)
logits [[-0.18580413 -0.9567644   0.50968754 -0.3100026 ]]
Iteration 900 of 1000: loss=0.148 " + "l1=0.0425" + "l2=0.105 f=-0.224 shape=(1, 9000, 1)
logits [[-0.28292596 -0.9347898   0.4359795  -0.11261559]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.431 " + "l1=0.431" + "l2=0 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.6047586 -1.3383827  1.568753  -3.252443 ]]
Iteration 100 of 1000: loss=0.364 " + "l1=0.336" + "l2=0.0281 f=-0.324 shape=(1, 9000, 1)
logits [[ 1.0724651 -1.2140969  1.3175273 -2.4705381]]
Iteration 200 of 1000: loss=0.328 " + "l1=0.283" + "l2=0.0455 f=-0.31 shape=(1, 9000, 1)
logits [[ 0.78448486 -1.1658719   1.1625264  -2.0215917 ]]
Iteration 300 of 1000: loss=0.294 " + "l1=0.233" + "l2=0.0608 f=-0.296 shape=(1, 9000, 1)
logits [[ 0.53655565 -1.112012    1.0083477  -1.6156508 ]]
Iteration 400 of 1000: loss=0.262 " + "l1=0.184" + "l2=0.0786 f=-0.278 shape=(1, 9000, 1)
logits [[ 0.31106517 -1.0610023   0.85499567 -1.2153227 ]]
Iteration 500 of 1000: loss=0.229 " + "l1=0.133" + "l2=0.0961 f=-0.259 shape=(1, 9000, 1)
logits [[ 0.07650675 -1.0076082   0.6987491  -0.803327  ]]
Iteration 600 of 1000: loss=0.199 " + "l1=0.0875" + "l2=0.111 f=-0.243 shape=(1, 9000, 1)
logits [[-0.13029183 -0.96971875  0.55674374 -0.42866874]]
Iteration 700 of 1000: loss=0.173 " + "l1=0.0531" + "l2=0.12 f=-0.227 shape=(1, 9000, 1)
logits [[-0.27041653 -0.92946255  0.44437346 -0.15426153]]
Iteration 800 of 1000: loss=0.152 " + "l1=0.024" + "l2=0.128 f=-0.218 shape=(1, 9000, 1)
logits [[-0.38961852 -0.9036028   0.34684435  0.07608197]]
Iteration 900 of 1000: loss=0.134 " + "l1=0.00555" + "l2=0.129 f=-0.209 shape=(1, 9000, 1)
logits [[-0.467559   -0.8996461   0.29741618  0.23484081]]
--- 309.12842178344727 seconds ---
Adv result:3
Loading record A04128
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.128 " + "l1=0.128" + "l2=0 f=-1.36 shape=(1, 9000, 1)
logits [[  6.660396   -6.145873    5.3161855 -11.287919 ]]
Iteration 100 of 1000: loss=0.128 " + "l1=0.128" + "l2=0.000241 f=-1.36 shape=(1, 9000, 1)
logits [[  6.632798   -6.118044    5.2957354 -11.25228  ]]
Iteration 200 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.000225 f=-1.36 shape=(1, 9000, 1)
logits [[  6.6301737  -6.1141562   5.2922726 -11.247888 ]]
Iteration 300 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.000264 f=-1.36 shape=(1, 9000, 1)
logits [[  6.625239   -6.107733    5.2868724 -11.2401905]]
Iteration 400 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.000371 f=-1.36 shape=(1, 9000, 1)
logits [[  6.61983    -6.1007743   5.2810636 -11.231559 ]]
Iteration 500 of 1000: loss=0.128 " + "l1=0.127" + "l2=0.000421 f=-1.36 shape=(1, 9000, 1)
logits [[  6.61451    -6.094083    5.275419  -11.2229805]]
Iteration 600 of 1000: loss=0.127 " + "l1=0.127" + "l2=0.000506 f=-1.36 shape=(1, 9000, 1)
logits [[  6.6093426  -6.0877986   5.270063  -11.2146435]]
Iteration 700 of 1000: loss=0.127 " + "l1=0.127" + "l2=0.000616 f=-1.35 shape=(1, 9000, 1)
logits [[  6.6044464  -6.081654    5.264745  -11.206516 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.28 " + "l1=1.28" + "l2=0 f=-1.36 shape=(1, 9000, 1)
logits [[  6.660396   -6.145873    5.3161855 -11.287919 ]]
Iteration 100 of 1000: loss=1.25 " + "l1=1.23" + "l2=0.0164 f=-1.33 shape=(1, 9000, 1)
logits [[  6.4350686  -5.905279    5.146358  -11.001397 ]]
Iteration 200 of 1000: loss=1.23 " + "l1=1.21" + "l2=0.0255 f=-1.31 shape=(1, 9000, 1)
logits [[  6.3114963  -5.7595277   5.0302534 -10.821558 ]]
Iteration 300 of 1000: loss=1.22 " + "l1=1.18" + "l2=0.0343 f=-1.29 shape=(1, 9000, 1)
logits [[  6.2025685  -5.623307    4.919715  -10.646638 ]]
Iteration 400 of 1000: loss=1.19 " + "l1=1.15" + "l2=0.0476 f=-1.24 shape=(1, 9000, 1)
logits [[  6.080203   -5.38919     4.7521563 -10.393968 ]]
Iteration 500 of 1000: loss=1.17 " + "l1=1.1" + "l2=0.0616 f=-1.17 shape=(1, 9000, 1)
logits [[  5.9662757  -5.075665    4.525366  -10.109929 ]]
Iteration 600 of 1000: loss=1.15 " + "l1=1.07" + "l2=0.0716 f=-1.14 shape=(1, 9000, 1)
logits [[ 5.833153  -4.909862   4.4048276 -9.885766 ]]
Iteration 700 of 1000: loss=1.13 " + "l1=1.04" + "l2=0.0824 f=-1.11 shape=(1, 9000, 1)
logits [[ 5.6817646 -4.7673397  4.305229  -9.6438875]]
Iteration 800 of 1000: loss=1.11 " + "l1=1.02" + "l2=0.0905 f=-1.07 shape=(1, 9000, 1)
logits [[ 5.545349  -4.6354995  4.2116103 -9.415464 ]]
Iteration 900 of 1000: loss=1.09 " + "l1=0.988" + "l2=0.0986 f=-1.03 shape=(1, 9000, 1)
logits [[ 5.412147  -4.469245   4.0979924 -9.179321 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.8 " + "l1=12.8" + "l2=0 f=-1.36 shape=(1, 9000, 1)
logits [[  6.660396   -6.145873    5.3161855 -11.287919 ]]
Iteration 100 of 1000: loss=8.2 " + "l1=5.49" + "l2=2.71 f=-0.648 shape=(1, 9000, 1)
logits [[ 3.3260958 -2.16335    2.4015605 -6.154788 ]]
Iteration 200 of 1000: loss=5.8 " + "l1=1.93" + "l2=3.87 f=-0.538 shape=(1, 9000, 1)
logits [[ 1.2171555 -0.6933644  1.2413634 -3.9154656]]
Iteration 300 of 1000: loss=4.89 " + "l1=1.29" + "l2=3.61 f=-0.486 shape=(1, 9000, 1)
logits [[ 0.8845962  -0.39299008  0.8927887  -3.3301673 ]]
Iteration 400 of 1000: loss=4.43 " + "l1=0.755" + "l2=3.67 f=-0.421 shape=(1, 9000, 1)
logits [[ 0.60461235 -0.13773389  0.6172915  -2.76702   ]]
Iteration 500 of 1000: loss=4.07 " + "l1=0.423" + "l2=3.64 f=-0.37 shape=(1, 9000, 1)
logits [[ 0.42817414  0.00565463  0.41929743 -2.332713  ]]
Iteration 600 of 1000: loss=3.8 " + "l1=0.228" + "l2=3.57 f=-0.341 shape=(1, 9000, 1)
logits [[ 0.33435014  0.10684142  0.3350481  -2.1388233 ]]
Iteration 700 of 1000: loss=3.56 " + "l1=0.0851" + "l2=3.48 f=-0.323 shape=(1, 9000, 1)
logits [[ 0.24740312  0.17792578  0.2630518  -1.9809214 ]]
Iteration 800 of 1000: loss=3.38 " + "l1=0.0128" + "l2=3.37 f=-0.311 shape=(1, 9000, 1)
logits [[ 0.1740579   0.19485259  0.20765422 -1.8225079 ]]
Iteration 900 of 1000: loss=3.22 " + "l1=0" + "l2=3.22 f=-0.301 shape=(1, 9000, 1)
logits [[ 0.16503534  0.16879791  0.16705377 -1.7067187 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.04 " + "l1=7.04" + "l2=0 f=-1.36 shape=(1, 9000, 1)
logits [[  6.660396   -6.145873    5.3161855 -11.287919 ]]
Iteration 100 of 1000: loss=5.62 " + "l1=4.73" + "l2=0.882 f=-0.947 shape=(1, 9000, 1)
logits [[ 4.8398337 -3.7679067  3.7082338 -8.569743 ]]
Iteration 200 of 1000: loss=4.81 " + "l1=3.48" + "l2=1.33 f=-0.689 shape=(1, 9000, 1)
logits [[ 3.8161352 -2.503668   2.556026  -6.623564 ]]
Iteration 300 of 1000: loss=4.29 " + "l1=2.69" + "l2=1.6 f=-0.614 shape=(1, 9000, 1)
logits [[ 2.9613352 -1.9235684  1.9414562 -5.4351015]]
Iteration 400 of 1000: loss=3.91 " + "l1=2.12" + "l2=1.8 f=-0.57 shape=(1, 9000, 1)
logits [[ 2.2057087 -1.6456631  1.6581163 -4.498383 ]]
Iteration 500 of 1000: loss=3.48 " + "l1=1.57" + "l2=1.9 f=-0.488 shape=(1, 9000, 1)
logits [[ 1.437453  -1.4258994  1.4338176 -3.3965077]]
Iteration 600 of 1000: loss=3.09 " + "l1=1.4" + "l2=1.69 f=-0.423 shape=(1, 9000, 1)
logits [[ 1.2307603 -1.3059403  1.2071308 -2.822765 ]]
Iteration 700 of 1000: loss=2.82 " + "l1=1.16" + "l2=1.66 f=-0.401 shape=(1, 9000, 1)
logits [[ 1.0065559 -1.1095446  1.0086254 -2.5079796]]
Iteration 800 of 1000: loss=2.69 " + "l1=1.06" + "l2=1.63 f=-0.382 shape=(1, 9000, 1)
logits [[ 0.87997127 -1.0272069   0.8960546  -2.278165  ]]
Iteration 900 of 1000: loss=2.6 " + "l1=1.01" + "l2=1.6 f=-0.369 shape=(1, 9000, 1)
logits [[ 0.8364195 -0.9837957  0.8439054 -2.1728272]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=9.92 " + "l1=9.92" + "l2=0 f=-1.36 shape=(1, 9000, 1)
logits [[  6.660396   -6.145873    5.3161855 -11.287919 ]]
Iteration 100 of 1000: loss=7.12 " + "l1=5.51" + "l2=1.61 f=-0.789 shape=(1, 9000, 1)
logits [[ 4.1225038 -2.991451   3.0394304 -7.3279653]]
Iteration 200 of 1000: loss=5.59 " + "l1=3" + "l2=2.59 f=-0.591 shape=(1, 9000, 1)
logits [[ 2.404438  -1.4638952  1.7000697 -5.0043736]]
Iteration 300 of 1000: loss=4.63 " + "l1=1.56" + "l2=3.07 f=-0.543 shape=(1, 9000, 1)
logits [[ 1.2216606 -0.7907622  1.1933047 -3.795793 ]]
Iteration 400 of 1000: loss=4.27 " + "l1=1.29" + "l2=2.98 f=-0.5 shape=(1, 9000, 1)
logits [[ 1.0004773  -0.66354084  0.98848027 -3.3237422 ]]
Iteration 500 of 1000: loss=3.99 " + "l1=1.08" + "l2=2.92 f=-0.465 shape=(1, 9000, 1)
logits [[ 0.810547  -0.5783872  0.8029741 -2.8952923]]
Iteration 600 of 1000: loss=3.74 " + "l1=0.856" + "l2=2.88 f=-0.405 shape=(1, 9000, 1)
logits [[ 0.6057798  -0.4842934   0.62079555 -2.3613877 ]]
Iteration 700 of 1000: loss=3.49 " + "l1=0.729" + "l2=2.76 f=-0.343 shape=(1, 9000, 1)
logits [[ 0.49596354 -0.42924318  0.5114511  -1.9499766 ]]
Iteration 800 of 1000: loss=3.27 " + "l1=0.684" + "l2=2.59 f=-0.299 shape=(1, 9000, 1)
logits [[ 0.4486551  -0.43355995  0.44091293 -1.653759  ]]
Iteration 900 of 1000: loss=3.14 " + "l1=0.635" + "l2=2.5 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.38663128 -0.43305647  0.38380656 -1.4703424 ]]
--- 287.3331518173218 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0134 " + "l1=0.0134" + "l2=0 f=-1.36 shape=(1, 9000, 1)
logits [[  6.660396   -6.145873    5.3161855 -11.287919 ]]
Iteration 100 of 1000: loss=0.0133 " + "l1=0.0131" + "l2=0.000186 f=-1.37 shape=(1, 9000, 1)
logits [[  6.6387177  -6.158637    5.330524  -11.277385 ]]
Iteration 200 of 1000: loss=0.0132 " + "l1=0.0131" + "l2=0.00015 f=-1.37 shape=(1, 9000, 1)
logits [[  6.638334   -6.160024    5.3309555 -11.277347 ]]
Iteration 300 of 1000: loss=0.0132 " + "l1=0.013" + "l2=0.000178 f=-1.37 shape=(1, 9000, 1)
logits [[  6.636045   -6.1627      5.3330264 -11.276609 ]]
Iteration 400 of 1000: loss=0.0132 " + "l1=0.013" + "l2=0.000226 f=-1.37 shape=(1, 9000, 1)
logits [[  6.6334004  -6.165537    5.3353467 -11.275634 ]]
Iteration 500 of 1000: loss=0.0132 " + "l1=0.0129" + "l2=0.000263 f=-1.37 shape=(1, 9000, 1)
logits [[  6.630731  -6.168501   5.337767 -11.274716]]
Iteration 600 of 1000: loss=0.0132 " + "l1=0.0129" + "l2=0.000321 f=-1.37 shape=(1, 9000, 1)
logits [[  6.6282797  -6.1712313   5.340014  -11.273838 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.134 " + "l1=0.134" + "l2=0 f=-1.36 shape=(1, 9000, 1)
logits [[  6.660396   -6.145873    5.3161855 -11.287919 ]]
Iteration 100 of 1000: loss=0.119 " + "l1=0.112" + "l2=0.00793 f=-1.38 shape=(1, 9000, 1)
logits [[  6.5212717  -6.2219205   5.406236  -11.219006 ]]
Iteration 200 of 1000: loss=0.114 " + "l1=0.104" + "l2=0.0108 f=-1.38 shape=(1, 9000, 1)
logits [[  6.4700747  -6.2491617   5.434214  -11.190809 ]]
Iteration 300 of 1000: loss=0.11 " + "l1=0.0968" + "l2=0.0132 f=-1.39 shape=(1, 9000, 1)
logits [[  6.4235554  -6.275143    5.455881  -11.16288  ]]
Iteration 400 of 1000: loss=0.106 " + "l1=0.0906" + "l2=0.0154 f=-1.39 shape=(1, 9000, 1)
logits [[  6.3789935  -6.299697    5.473481  -11.130283 ]]
Iteration 500 of 1000: loss=0.102 " + "l1=0.0845" + "l2=0.0179 f=-1.4 shape=(1, 9000, 1)
logits [[  6.3313355  -6.3204746   5.4860296 -11.090479 ]]
Iteration 600 of 1000: loss=0.0991 " + "l1=0.0791" + "l2=0.02 f=-1.4 shape=(1, 9000, 1)
logits [[  6.287573  -6.339197   5.496279 -11.051369]]
Iteration 700 of 1000: loss=0.0962 " + "l1=0.0736" + "l2=0.0226 f=-1.4 shape=(1, 9000, 1)
logits [[  6.240431  -6.355841   5.504468 -11.008213]]
Iteration 800 of 1000: loss=0.0936 " + "l1=0.0689" + "l2=0.0247 f=-1.41 shape=(1, 9000, 1)
logits [[  6.1968884  -6.366184    5.508185  -10.963472 ]]
Iteration 900 of 1000: loss=0.0912 " + "l1=0.0643" + "l2=0.0269 f=-1.41 shape=(1, 9000, 1)
logits [[  6.152353   -6.3750553   5.5091934 -10.918012 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.34 " + "l1=1.34" + "l2=0 f=-1.36 shape=(1, 9000, 1)
logits [[  6.660396   -6.145873    5.3161855 -11.287919 ]]
Iteration 100 of 1000: loss=0.267 " + "l1=0.0129" + "l2=0.254 f=-1.41 shape=(1, 9000, 1)
logits [[  5.6726456  -6.4244895   5.6597257 -10.545721 ]]
Iteration 200 of 1000: loss=0.195 " + "l1=0.00134" + "l2=0.193 f=-1.41 shape=(1, 9000, 1)
logits [[  5.6376653  -6.429732    5.636322  -10.480639 ]]
Iteration 300 of 1000: loss=0.158 " + "l1=0" + "l2=0.158 f=-1.41 shape=(1, 9000, 1)
logits [[  5.591554   -6.4428325   5.6062913 -10.40984  ]]
Iteration 400 of 1000: loss=0.137 " + "l1=0.01" + "l2=0.127 f=-1.41 shape=(1, 9000, 1)
logits [[  5.583006  -6.444231   5.572968 -10.371034]]
Iteration 500 of 1000: loss=0.114 " + "l1=0" + "l2=0.114 f=-1.42 shape=(1, 9000, 1)
logits [[  5.539712   -6.4494505   5.5544114 -10.313279 ]]
Iteration 600 of 1000: loss=0.105 " + "l1=0" + "l2=0.105 f=-1.42 shape=(1, 9000, 1)
logits [[  5.505749   -6.445392    5.5339913 -10.26196  ]]
Iteration 700 of 1000: loss=0.0937 " + "l1=0" + "l2=0.0937 f=-1.41 shape=(1, 9000, 1)
logits [[  5.493924   -6.4343514   5.5124927 -10.230897 ]]
Iteration 800 of 1000: loss=0.0868 " + "l1=0" + "l2=0.0868 f=-1.41 shape=(1, 9000, 1)
logits [[  5.4834933  -6.4295735   5.49957   -10.205956 ]]
Iteration 900 of 1000: loss=0.0832 " + "l1=0.00401" + "l2=0.0791 f=-1.41 shape=(1, 9000, 1)
logits [[  5.488474   -6.4209995   5.4844613 -10.193639 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.739 " + "l1=0.739" + "l2=0 f=-1.36 shape=(1, 9000, 1)
logits [[  6.660396   -6.145873    5.3161855 -11.287919 ]]
Iteration 100 of 1000: loss=0.268 " + "l1=0.00929" + "l2=0.259 f=-1.41 shape=(1, 9000, 1)
logits [[  5.665684  -6.413624   5.648788 -10.539204]]
Iteration 200 of 1000: loss=0.187 " + "l1=0.00206" + "l2=0.185 f=-1.41 shape=(1, 9000, 1)
logits [[  5.6307898  -6.4189763   5.6270533 -10.467398 ]]
Iteration 300 of 1000: loss=0.144 " + "l1=0.00379" + "l2=0.14 f=-1.41 shape=(1, 9000, 1)
logits [[  5.5990686  -6.4334564   5.592169  -10.399754 ]]
Iteration 400 of 1000: loss=0.116 " + "l1=0.00225" + "l2=0.114 f=-1.41 shape=(1, 9000, 1)
logits [[  5.5634947  -6.4364643   5.55941   -10.331215 ]]
Iteration 500 of 1000: loss=0.1 " + "l1=0" + "l2=0.1 f=-1.41 shape=(1, 9000, 1)
logits [[  5.531728   -6.4311905   5.5340886 -10.281309 ]]
Iteration 600 of 1000: loss=0.0927 " + "l1=0.00313" + "l2=0.0896 f=-1.41 shape=(1, 9000, 1)
logits [[  5.5153055  -6.422814    5.509623  -10.24361  ]]
Iteration 700 of 1000: loss=0.0846 " + "l1=0" + "l2=0.0846 f=-1.41 shape=(1, 9000, 1)
logits [[  5.491143  -6.420974   5.497169 -10.20328 ]]
Iteration 800 of 1000: loss=0.0815 " + "l1=0.003" + "l2=0.0785 f=-1.41 shape=(1, 9000, 1)
logits [[  5.486366  -6.41196    5.480909 -10.179954]]
Iteration 900 of 1000: loss=0.0767 " + "l1=0" + "l2=0.0767 f=-1.4 shape=(1, 9000, 1)
logits [[  5.4716625  -6.4109426   5.475011  -10.1526985]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.437 " + "l1=0.437" + "l2=0 f=-1.36 shape=(1, 9000, 1)
logits [[  6.660396   -6.145873    5.3161855 -11.287919 ]]
Iteration 100 of 1000: loss=0.279 " + "l1=0.186" + "l2=0.0925 f=-1.4 shape=(1, 9000, 1)
logits [[  6.145917   -6.3540235   5.572567  -10.9651985]]
Iteration 200 of 1000: loss=0.214 " + "l1=0.0751" + "l2=0.139 f=-1.41 shape=(1, 9000, 1)
logits [[  5.85807   -6.407564   5.626944 -10.698301]]
Iteration 300 of 1000: loss=0.152 " + "l1=0.000315" + "l2=0.152 f=-1.41 shape=(1, 9000, 1)
logits [[  5.6246085  -6.436205    5.623639  -10.435029 ]]
Iteration 400 of 1000: loss=0.119 " + "l1=0" + "l2=0.119 f=-1.41 shape=(1, 9000, 1)
logits [[  5.576655   -6.4250617   5.579383  -10.352187 ]]
Iteration 500 of 1000: loss=0.102 " + "l1=0" + "l2=0.102 f=-1.4 shape=(1, 9000, 1)
logits [[  5.5413265  -6.419265    5.5504727 -10.284129 ]]
Iteration 600 of 1000: loss=0.0907 " + "l1=0.000401" + "l2=0.0903 f=-1.4 shape=(1, 9000, 1)
logits [[  5.524983   -6.40889     5.5237503 -10.239675 ]]
Iteration 700 of 1000: loss=0.0847 " + "l1=0.00115" + "l2=0.0836 f=-1.4 shape=(1, 9000, 1)
logits [[  5.51039    -6.400481    5.5068398 -10.205791 ]]
Iteration 800 of 1000: loss=0.0808 " + "l1=0.000523" + "l2=0.0803 f=-1.4 shape=(1, 9000, 1)
logits [[  5.495404  -6.394744   5.493796 -10.178037]]
Iteration 900 of 1000: loss=0.078 " + "l1=0.00099" + "l2=0.077 f=-1.4 shape=(1, 9000, 1)
logits [[  5.486544   -6.393048    5.4834976 -10.158067 ]]
--- 280.83677315711975 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.179 " + "l1=0.179" + "l2=0 f=-1.36 shape=(1, 9000, 1)
logits [[  6.660396   -6.145873    5.3161855 -11.287919 ]]
Iteration 100 of 1000: loss=0.179 " + "l1=0.178" + "l2=0.000377 f=-1.36 shape=(1, 9000, 1)
logits [[  6.6182323  -6.1310782   5.2991004 -11.229464 ]]
Iteration 200 of 1000: loss=0.179 " + "l1=0.178" + "l2=0.000396 f=-1.36 shape=(1, 9000, 1)
logits [[  6.6112213  -6.1278625   5.2947755 -11.218389 ]]
Iteration 300 of 1000: loss=0.179 " + "l1=0.178" + "l2=0.000478 f=-1.36 shape=(1, 9000, 1)
logits [[  6.601789   -6.123443    5.2892075 -11.203702 ]]
Iteration 400 of 1000: loss=0.178 " + "l1=0.178" + "l2=0.000578 f=-1.36 shape=(1, 9000, 1)
logits [[  6.5920544  -6.1186943   5.283314  -11.188269 ]]
Iteration 500 of 1000: loss=0.178 " + "l1=0.178" + "l2=0.000728 f=-1.36 shape=(1, 9000, 1)
logits [[  6.5822043  -6.114066    5.2775297 -11.172563 ]]
Iteration 600 of 1000: loss=0.178 " + "l1=0.177" + "l2=0.000869 f=-1.36 shape=(1, 9000, 1)
logits [[  6.572688   -6.1097164   5.271946  -11.157091 ]]
Iteration 700 of 1000: loss=0.178 " + "l1=0.177" + "l2=0.000953 f=-1.35 shape=(1, 9000, 1)
logits [[  6.5634036  -6.105411    5.2665076 -11.141781 ]]
Iteration 800 of 1000: loss=0.178 " + "l1=0.177" + "l2=0.00125 f=-1.35 shape=(1, 9000, 1)
logits [[  6.554208   -6.1009707   5.2609153 -11.126389 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.79 " + "l1=1.79" + "l2=0 f=-1.36 shape=(1, 9000, 1)
logits [[  6.660396   -6.145873    5.3161855 -11.287919 ]]
Iteration 100 of 1000: loss=1.74 " + "l1=1.71" + "l2=0.0297 f=-1.33 shape=(1, 9000, 1)
logits [[  6.2918754  -5.9869347   5.1492853 -10.778846 ]]
Iteration 200 of 1000: loss=1.7 " + "l1=1.65" + "l2=0.0504 f=-1.31 shape=(1, 9000, 1)
logits [[  6.0490475  -5.884983    5.030015  -10.429521 ]]
Iteration 300 of 1000: loss=1.66 " + "l1=1.59" + "l2=0.0718 f=-1.28 shape=(1, 9000, 1)
logits [[  5.808422   -5.7717667   4.9082546 -10.0617075]]
Iteration 400 of 1000: loss=1.61 " + "l1=1.51" + "l2=0.103 f=-1.24 shape=(1, 9000, 1)
logits [[ 5.4897676 -5.6027184  4.74068   -9.570785 ]]
Iteration 500 of 1000: loss=1.55 " + "l1=1.42" + "l2=0.131 f=-1.19 shape=(1, 9000, 1)
logits [[ 5.1604085 -5.4302435  4.5671253 -9.049378 ]]
Iteration 600 of 1000: loss=1.49 " + "l1=1.33" + "l2=0.162 f=-1.13 shape=(1, 9000, 1)
logits [[ 4.8098016 -5.2311063  4.367324  -8.462421 ]]
Iteration 700 of 1000: loss=1.42 " + "l1=1.23" + "l2=0.19 f=-1.08 shape=(1, 9000, 1)
logits [[ 4.4670362 -5.088144   4.1911864 -7.8743854]]
Iteration 800 of 1000: loss=1.37 " + "l1=1.15" + "l2=0.22 f=-1.01 shape=(1, 9000, 1)
logits [[ 4.159422  -4.9071937  4.01715   -7.3014913]]
Iteration 900 of 1000: loss=1.3 " + "l1=1.06" + "l2=0.241 f=-0.93 shape=(1, 9000, 1)
logits [[ 3.8875113 -4.6853466  3.8282845 -6.749171 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=17.9 " + "l1=17.9" + "l2=0 f=-1.36 shape=(1, 9000, 1)
logits [[  6.660396   -6.145873    5.3161855 -11.287919 ]]
Iteration 100 of 1000: loss=9.67 " + "l1=5.76" + "l2=3.91 f=-0.532 shape=(1, 9000, 1)
logits [[ 2.2327082 -3.063905   2.2327    -3.530579 ]]
Iteration 200 of 1000: loss=6.89 " + "l1=2.24" + "l2=4.65 f=-0.286 shape=(1, 9000, 1)
logits [[ 0.8015941 -1.8564777  1.0773543 -1.1675236]]
Iteration 300 of 1000: loss=5.5 " + "l1=0.735" + "l2=4.77 f=-0.214 shape=(1, 9000, 1)
logits [[ 0.10957074 -1.56315     0.667115   -0.06797585]]
Iteration 400 of 1000: loss=4.5 " + "l1=0" + "l2=4.5 f=-0.187 shape=(1, 9000, 1)
logits [[-0.10206072 -1.4168326   0.38184518  0.38953444]]
Iteration 500 of 1000: loss=3.89 " + "l1=0" + "l2=3.89 f=-0.166 shape=(1, 9000, 1)
logits [[-0.02359044 -1.4313161   0.39235398  0.3990309 ]]
Iteration 600 of 1000: loss=3.39 " + "l1=0.0315" + "l2=3.35 f=-0.149 shape=(1, 9000, 1)
logits [[ 0.06418239 -1.4488251   0.4097423   0.37825537]]
Iteration 700 of 1000: loss=2.92 " + "l1=0.00238" + "l2=2.92 f=-0.141 shape=(1, 9000, 1)
logits [[ 0.0949892  -1.4295081   0.38560626  0.38322487]]
Iteration 800 of 1000: loss=2.6 " + "l1=0.018" + "l2=2.59 f=-0.12 shape=(1, 9000, 1)
logits [[ 0.13961197 -1.4244497   0.41105932  0.3930601 ]]
Iteration 900 of 1000: loss=2.37 " + "l1=0.0268" + "l2=2.34 f=-0.108 shape=(1, 9000, 1)
logits [[ 0.15744844 -1.4330753   0.43530908  0.40854266]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=9.87 " + "l1=9.87" + "l2=0 f=-1.36 shape=(1, 9000, 1)
logits [[  6.660396   -6.145873    5.3161855 -11.287919 ]]
Iteration 100 of 1000: loss=7.09 " + "l1=5.6" + "l2=1.49 f=-0.919 shape=(1, 9000, 1)
logits [[ 3.6896956 -4.553646   3.6738842 -6.487612 ]]
Iteration 200 of 1000: loss=5.5 " + "l1=3.38" + "l2=2.13 f=-0.575 shape=(1, 9000, 1)
logits [[ 2.3996143 -3.361418   2.4004307 -3.739194 ]]
Iteration 300 of 1000: loss=4.55 " + "l1=2.42" + "l2=2.13 f=-0.427 shape=(1, 9000, 1)
logits [[ 1.7997112 -2.716259   1.7991226 -2.5917714]]
Iteration 400 of 1000: loss=3.75 " + "l1=1.74" + "l2=2.01 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.327618  -2.3531961  1.4378331 -1.7252893]]
Iteration 500 of 1000: loss=3.19 " + "l1=1.13" + "l2=2.07 f=-0.284 shape=(1, 9000, 1)
logits [[ 0.84235847 -2.1996636   1.1341453  -0.91232216]]
Iteration 600 of 1000: loss=2.79 " + "l1=0.734" + "l2=2.06 f=-0.249 shape=(1, 9000, 1)
logits [[ 0.58483493 -2.0025325   0.8785624  -0.45604032]]
Iteration 700 of 1000: loss=2.29 " + "l1=0.231" + "l2=2.06 f=-0.203 shape=(1, 9000, 1)
logits [[ 0.2952801  -1.821091    0.56799155  0.14748359]]
Iteration 800 of 1000: loss=1.82 " + "l1=0.0071" + "l2=1.81 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.21456745 -1.8295739   0.44935617  0.43644524]]
Iteration 900 of 1000: loss=1.54 " + "l1=0" + "l2=1.54 f=-0.184 shape=(1, 9000, 1)
logits [[ 0.28821313 -1.917157    0.44598287  0.44649097]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.83 " + "l1=5.83" + "l2=0 f=-1.36 shape=(1, 9000, 1)
logits [[  6.660396   -6.145873    5.3161855 -11.287919 ]]
Iteration 100 of 1000: loss=4.9 " + "l1=4.27" + "l2=0.628 f=-1.15 shape=(1, 9000, 1)
logits [[ 4.67794   -5.242232   4.4344125 -8.4638815]]
Iteration 200 of 1000: loss=4.14 " + "l1=3.27" + "l2=0.871 f=-0.947 shape=(1, 9000, 1)
logits [[ 3.6508377 -4.677019   3.6446579 -6.4083276]]
Iteration 300 of 1000: loss=3.53 " + "l1=2.47" + "l2=1.06 f=-0.728 shape=(1, 9000, 1)
logits [[ 2.8757644 -3.94649    2.8709323 -4.713975 ]]
Iteration 400 of 1000: loss=3.04 " + "l1=1.89" + "l2=1.16 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.2822773 -3.2805984  2.2827008 -3.5182073]]
Iteration 500 of 1000: loss=2.67 " + "l1=1.48" + "l2=1.18 f=-0.44 shape=(1, 9000, 1)
logits [[ 1.8593727 -2.8017178  1.8721125 -2.6901782]]
Iteration 600 of 1000: loss=2.36 " + "l1=1.2" + "l2=1.17 f=-0.352 shape=(1, 9000, 1)
logits [[ 1.5567989 -2.4820662  1.599346  -2.0801337]]
Iteration 700 of 1000: loss=2.12 " + "l1=0.975" + "l2=1.15 f=-0.313 shape=(1, 9000, 1)
logits [[ 1.3002101 -2.3599463  1.4044987 -1.5967293]]
Iteration 800 of 1000: loss=1.91 " + "l1=0.787" + "l2=1.13 f=-0.283 shape=(1, 9000, 1)
logits [[ 1.0828118 -2.2855668  1.2462057 -1.1752229]]
Iteration 900 of 1000: loss=1.7 " + "l1=0.599" + "l2=1.1 f=-0.245 shape=(1, 9000, 1)
logits [[ 0.8802057 -2.1780534  1.0818092 -0.7623625]]
--- 297.19077706336975 seconds ---
Adv result:3
Loading record A04207
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0517 " + "l1=0.0517" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.7755    -2.391465   2.3707411 -4.0501466]]
Iteration 100 of 1000: loss=0.0513 " + "l1=0.051" + "l2=0.000272 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.7324474 -2.368269   2.3515704 -4.007371 ]]
Iteration 200 of 1000: loss=0.0512 " + "l1=0.0509" + "l2=0.000282 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.724629  -2.3630593  2.3467214 -4.0008   ]]
Iteration 300 of 1000: loss=0.0511 " + "l1=0.0507" + "l2=0.00035 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.7137077 -2.35644    2.34063   -3.9910178]]
Iteration 400 of 1000: loss=0.0509 " + "l1=0.0505" + "l2=0.000422 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.7019515 -2.3493075  2.3341095 -3.9804597]]
Iteration 500 of 1000: loss=0.0509 " + "l1=0.0503" + "l2=0.000547 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.6903157 -2.3421404  2.3274703 -3.969932 ]]
Iteration 600 of 1000: loss=0.0508 " + "l1=0.0502" + "l2=0.000657 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.6808798 -2.3366222  2.3221707 -3.9608796]]
Iteration 700 of 1000: loss=0.0507 " + "l1=0.05" + "l2=0.000694 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.672488  -2.3316245  2.3172321 -3.9525628]]
Iteration 800 of 1000: loss=0.0507 " + "l1=0.0499" + "l2=0.000836 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.6640518 -2.3264828  2.3121953 -3.9444203]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.517 " + "l1=0.517" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.7755    -2.391465   2.3707411 -4.0501466]]
Iteration 100 of 1000: loss=0.483 " + "l1=0.467" + "l2=0.0165 f=-0.318 shape=(1, 9000, 1)
logits [[ 2.4483206 -2.2175262  2.2249439 -3.7281718]]
Iteration 200 of 1000: loss=0.466 " + "l1=0.443" + "l2=0.0231 f=-0.317 shape=(1, 9000, 1)
logits [[ 2.3014176 -2.1315887  2.1511972 -3.5900238]]
Iteration 300 of 1000: loss=0.456 " + "l1=0.429" + "l2=0.0273 f=-0.315 shape=(1, 9000, 1)
logits [[ 2.205107  -2.0818937  2.106483  -3.4889867]]
Iteration 400 of 1000: loss=0.448 " + "l1=0.416" + "l2=0.0313 f=-0.31 shape=(1, 9000, 1)
logits [[ 2.1249309 -2.0385416  2.067125  -3.3936687]]
Iteration 500 of 1000: loss=0.44 " + "l1=0.404" + "l2=0.0355 f=-0.303 shape=(1, 9000, 1)
logits [[ 2.047959  -1.9945737  2.0298202 -3.2946758]]
Iteration 600 of 1000: loss=0.432 " + "l1=0.396" + "l2=0.036 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.0007002 -1.9626458  1.9985152 -3.2346172]]
Iteration 700 of 1000: loss=0.425 " + "l1=0.388" + "l2=0.0369 f=-0.297 shape=(1, 9000, 1)
logits [[ 1.9579732 -1.9194305  1.957667  -3.1833262]]
Iteration 800 of 1000: loss=0.415 " + "l1=0.377" + "l2=0.0383 f=-0.294 shape=(1, 9000, 1)
logits [[ 1.9014252 -1.8638415  1.905462  -3.1192088]]
Iteration 900 of 1000: loss=0.405 " + "l1=0.365" + "l2=0.0401 f=-0.29 shape=(1, 9000, 1)
logits [[ 1.8487513 -1.8020817  1.8488619 -3.05565  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.17 " + "l1=5.17" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.7755    -2.391465   2.3707411 -4.0501466]]
Iteration 100 of 1000: loss=2.93 " + "l1=1.99" + "l2=0.94 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.0839168 -0.898835   1.0909137 -2.317188 ]]
Iteration 200 of 1000: loss=2.45 " + "l1=1.51" + "l2=0.941 f=-0.254 shape=(1, 9000, 1)
logits [[ 0.8555584  -0.63540834  0.87178165 -2.1099157 ]]
Iteration 300 of 1000: loss=2.18 " + "l1=1.14" + "l2=1.04 f=-0.255 shape=(1, 9000, 1)
logits [[ 0.59752    -0.45740706  0.68257046 -1.844247  ]]
Iteration 400 of 1000: loss=2.02 " + "l1=0.958" + "l2=1.07 f=-0.253 shape=(1, 9000, 1)
logits [[ 0.4569336  -0.36448473  0.5937042  -1.6988733 ]]
Iteration 500 of 1000: loss=1.93 " + "l1=0.863" + "l2=1.06 f=-0.252 shape=(1, 9000, 1)
logits [[ 0.3688332  -0.31885257  0.54387015 -1.6013101 ]]
Iteration 600 of 1000: loss=1.82 " + "l1=0.77" + "l2=1.05 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.26240122 -0.27586278  0.49394128 -1.4723351 ]]
Iteration 700 of 1000: loss=1.73 " + "l1=0.666" + "l2=1.06 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.13370788 -0.22808595  0.43834314 -1.3362396 ]]
Iteration 800 of 1000: loss=1.6 " + "l1=0.521" + "l2=1.08 f=-0.248 shape=(1, 9000, 1)
logits [[-0.03921244 -0.1687659   0.352528   -1.137015  ]]
Iteration 900 of 1000: loss=1.48 " + "l1=0.391" + "l2=1.09 f=-0.255 shape=(1, 9000, 1)
logits [[-0.2212936  -0.10653371  0.2844959  -0.9774916 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=51.7 " + "l1=51.7" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.7755    -2.391465   2.3707411 -4.0501466]]
Iteration 100 of 1000: loss=5.98 " + "l1=0.0502" + "l2=5.93 f=-0.259 shape=(1, 9000, 1)
logits [[-0.4538578   0.25117368  0.256191   -1.0902137 ]]
Iteration 200 of 1000: loss=4.1 " + "l1=0" + "l2=4.1 f=-0.281 shape=(1, 9000, 1)
logits [[-0.41458702  0.2579458   0.24639235 -1.2154616 ]]
Iteration 300 of 1000: loss=3.44 " + "l1=0.0269" + "l2=3.41 f=-0.29 shape=(1, 9000, 1)
logits [[-0.34070146  0.24933185  0.25202313 -1.3209597 ]]
Iteration 400 of 1000: loss=3.03 " + "l1=0" + "l2=3.03 f=-0.294 shape=(1, 9000, 1)
logits [[-0.3241079   0.2522846   0.24520245 -1.3493975 ]]
Iteration 500 of 1000: loss=2.78 " + "l1=0" + "l2=2.78 f=-0.299 shape=(1, 9000, 1)
logits [[-0.34295356  0.25861904  0.23940286 -1.3493963 ]]
Iteration 600 of 1000: loss=2.57 " + "l1=0" + "l2=2.57 f=-0.3 shape=(1, 9000, 1)
logits [[-0.3569424   0.25676888  0.23899251 -1.3396854 ]]
Iteration 700 of 1000: loss=2.42 " + "l1=0" + "l2=2.42 f=-0.301 shape=(1, 9000, 1)
logits [[-0.35931927  0.24671209  0.24434888 -1.336986  ]]
Iteration 800 of 1000: loss=2.4 " + "l1=0" + "l2=2.4 f=-0.312 shape=(1, 9000, 1)
logits [[-0.44145033  0.2763137   0.22469202 -1.309276  ]]
Iteration 900 of 1000: loss=2.3 " + "l1=0" + "l2=2.3 f=-0.314 shape=(1, 9000, 1)
logits [[-0.4525068   0.2649229   0.22442503 -1.2933892 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=28.4 " + "l1=28.4" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.7755    -2.391465   2.3707411 -4.0501466]]
Iteration 100 of 1000: loss=5.11 " + "l1=0" + "l2=5.11 f=-0.268 shape=(1, 9000, 1)
logits [[-0.40919274  0.27549475  0.26308006 -1.2019887 ]]
Iteration 200 of 1000: loss=3.37 " + "l1=0" + "l2=3.37 f=-0.287 shape=(1, 9000, 1)
logits [[-0.33237302  0.25310746  0.24943484 -1.3194028 ]]
Iteration 300 of 1000: loss=2.84 " + "l1=0" + "l2=2.84 f=-0.291 shape=(1, 9000, 1)
logits [[-0.31432617  0.2533866   0.24320577 -1.3453697 ]]
Iteration 400 of 1000: loss=2.54 " + "l1=0" + "l2=2.54 f=-0.295 shape=(1, 9000, 1)
logits [[-0.31216276  0.24554719  0.24078992 -1.3541929 ]]
Iteration 500 of 1000: loss=2.37 " + "l1=0" + "l2=2.37 f=-0.299 shape=(1, 9000, 1)
logits [[-0.33995852  0.24098085  0.2400304  -1.3359302 ]]
Iteration 600 of 1000: loss=2.27 " + "l1=0" + "l2=2.27 f=-0.304 shape=(1, 9000, 1)
logits [[-0.37133554  0.24298134  0.23141162 -1.318752  ]]
Iteration 700 of 1000: loss=2.19 " + "l1=0" + "l2=2.19 f=-0.311 shape=(1, 9000, 1)
logits [[-0.4235491   0.2449574   0.22355907 -1.2879831 ]]
Iteration 800 of 1000: loss=2.09 " + "l1=0" + "l2=2.09 f=-0.312 shape=(1, 9000, 1)
logits [[-0.4409187   0.23231916  0.23006357 -1.2711989 ]]
Iteration 900 of 1000: loss=2.01 " + "l1=0" + "l2=2.01 f=-0.315 shape=(1, 9000, 1)
logits [[-0.4623883   0.22554679  0.22302173 -1.2458162 ]]
--- 297.2246849536896 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00405 " + "l1=0.00405" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.7755    -2.391465   2.3707411 -4.0501466]]
Iteration 100 of 1000: loss=0.00395 " + "l1=0.00382" + "l2=0.00013 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.7510326 -2.3889475  2.368904  -4.024742 ]]
Iteration 200 of 1000: loss=0.00392 " + "l1=0.00382" + "l2=9.97e-05 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.7508025 -2.388587   2.3685265 -4.024947 ]]
Iteration 300 of 1000: loss=0.00392 " + "l1=0.0038" + "l2=0.00012 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.7482765 -2.3881185  2.3680823 -4.02249  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0405 " + "l1=0.0405" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.7755    -2.391465   2.3707411 -4.0501466]]
Iteration 100 of 1000: loss=0.0305 " + "l1=0.0242" + "l2=0.00625 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.6055927 -2.3745484  2.3632457 -3.8830311]]
Iteration 200 of 1000: loss=0.0275 " + "l1=0.0197" + "l2=0.00787 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.5478394 -2.3625388  2.3511353 -3.8267696]]
Iteration 300 of 1000: loss=0.0248 " + "l1=0.0155" + "l2=0.00936 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.4945018 -2.3521826  2.3397818 -3.771323 ]]
Iteration 400 of 1000: loss=0.0226 " + "l1=0.012" + "l2=0.0106 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.4488018 -2.341716   2.3285153 -3.7234018]]
Iteration 500 of 1000: loss=0.0206 " + "l1=0.00894" + "l2=0.0116 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.4066615 -2.3298073  2.3172245 -3.6809564]]
Iteration 600 of 1000: loss=0.0188 " + "l1=0.00625" + "l2=0.0125 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.3673384 -2.3166234  2.3048763 -3.6418383]]
Iteration 700 of 1000: loss=0.0173 " + "l1=0.00367" + "l2=0.0136 f=-0.321 shape=(1, 9000, 1)
logits [[ 2.3324935 -2.3074384  2.2957587 -3.6064334]]
Iteration 800 of 1000: loss=0.0157 " + "l1=0.00131" + "l2=0.0144 f=-0.321 shape=(1, 9000, 1)
logits [[ 2.2994144 -2.2973452  2.2863004 -3.5736308]]
Iteration 900 of 1000: loss=0.0144 " + "l1=0.000299" + "l2=0.0141 f=-0.321 shape=(1, 9000, 1)
logits [[ 2.2833097 -2.2912269  2.2803202 -3.5560818]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0223 " + "l1=0.0223" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.7755    -2.391465   2.3707411 -4.0501466]]
Iteration 100 of 1000: loss=0.0192 " + "l1=0.0171" + "l2=0.00207 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.6756952 -2.3804114  2.3648121 -3.950471 ]]
Iteration 200 of 1000: loss=0.0183 " + "l1=0.0158" + "l2=0.00252 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.647514  -2.3751714  2.3599212 -3.923409 ]]
Iteration 300 of 1000: loss=0.0176 " + "l1=0.0147" + "l2=0.0029 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.6203713 -2.3686113  2.3533647 -3.897301 ]]
Iteration 400 of 1000: loss=0.0169 " + "l1=0.0137" + "l2=0.00327 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.5952132 -2.3622308  2.3468745 -3.8719082]]
Iteration 500 of 1000: loss=0.0164 " + "l1=0.0127" + "l2=0.0037 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.571036  -2.3552122  2.3400648 -3.847951 ]]
Iteration 600 of 1000: loss=0.0158 " + "l1=0.0118" + "l2=0.00406 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.5474124 -2.347977   2.3336182 -3.8251336]]
Iteration 700 of 1000: loss=0.0155 " + "l1=0.011" + "l2=0.00457 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.5274937 -2.3422284  2.3283567 -3.804828 ]]
Iteration 800 of 1000: loss=0.015 " + "l1=0.0101" + "l2=0.00491 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.5061789 -2.3353798  2.3221104 -3.783834 ]]
Iteration 900 of 1000: loss=0.0147 " + "l1=0.00936" + "l2=0.00534 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.4865263 -2.3291323  2.3163748 -3.765012 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0314 " + "l1=0.0314" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.7755    -2.391465   2.3707411 -4.0501466]]
Iteration 100 of 1000: loss=0.0253 " + "l1=0.0214" + "l2=0.00393 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.6399553 -2.37733    2.3642004 -3.9158204]]
Iteration 200 of 1000: loss=0.0236 " + "l1=0.0187" + "l2=0.00484 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.5971923 -2.3686628  2.35553   -3.8755016]]
Iteration 300 of 1000: loss=0.0221 " + "l1=0.0165" + "l2=0.00561 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.5584195 -2.3597336  2.3461094 -3.8362732]]
Iteration 400 of 1000: loss=0.0207 " + "l1=0.0143" + "l2=0.00641 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.521107  -2.3504803  2.3368175 -3.7987752]]
Iteration 500 of 1000: loss=0.0196 " + "l1=0.0124" + "l2=0.00721 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.489022  -2.3432815  2.3292    -3.7654307]]
Iteration 600 of 1000: loss=0.0184 " + "l1=0.0105" + "l2=0.00793 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.4549563 -2.333084   2.3193865 -3.7317185]]
Iteration 700 of 1000: loss=0.0176 " + "l1=0.00889" + "l2=0.00869 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.4254558 -2.3234522  2.3107326 -3.7026231]]
Iteration 800 of 1000: loss=0.0166 " + "l1=0.00737" + "l2=0.00925 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.398499  -2.3156164  2.3034558 -3.6749332]]
Iteration 900 of 1000: loss=0.0158 " + "l1=0.00599" + "l2=0.00979 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.3742602 -2.3082964  2.2969713 -3.650521 ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0359 " + "l1=0.0359" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.7755    -2.391465   2.3707411 -4.0501466]]
Iteration 100 of 1000: loss=0.028 " + "l1=0.0229" + "l2=0.00505 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.6222484 -2.3761263  2.3638608 -3.898913 ]]
Iteration 200 of 1000: loss=0.0257 " + "l1=0.0194" + "l2=0.00626 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.5725224 -2.3659043  2.353557  -3.851138 ]]
Iteration 300 of 1000: loss=0.0236 " + "l1=0.0163" + "l2=0.00734 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.5247865 -2.353738   2.3410873 -3.8033512]]
Iteration 400 of 1000: loss=0.0219 " + "l1=0.0135" + "l2=0.0084 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.4848297 -2.346947   2.3330748 -3.7603889]]
Iteration 500 of 1000: loss=0.0203 " + "l1=0.0109" + "l2=0.00938 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.4450119 -2.3361535  2.3222876 -3.720224 ]]
Iteration 600 of 1000: loss=0.0189 " + "l1=0.00859" + "l2=0.0103 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.408838  -2.324885   2.3120809 -3.6846805]]
Iteration 700 of 1000: loss=0.0175 " + "l1=0.00655" + "l2=0.011 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.3765726 -2.3150814  2.3028    -3.6517463]]
Iteration 800 of 1000: loss=0.0164 " + "l1=0.00465" + "l2=0.0117 f=-0.322 shape=(1, 9000, 1)
logits [[ 2.3471549 -2.30642    2.294781  -3.6222515]]
Iteration 900 of 1000: loss=0.0154 " + "l1=0.00299" + "l2=0.0124 f=-0.321 shape=(1, 9000, 1)
logits [[ 2.3216953 -2.2985065  2.2880409 -3.5964854]]
--- 268.16815662384033 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0683 " + "l1=0.0683" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.7755    -2.391465   2.3707411 -4.0501466]]
Iteration 100 of 1000: loss=0.0674 " + "l1=0.0669" + "l2=0.000528 f=-0.321 shape=(1, 9000, 1)
logits [[ 2.7156646 -2.3738244  2.3500772 -3.974859 ]]
Iteration 200 of 1000: loss=0.0672 " + "l1=0.0666" + "l2=0.000558 f=-0.321 shape=(1, 9000, 1)
logits [[ 2.7029653 -2.3687513  2.3441436 -3.9608848]]
Iteration 300 of 1000: loss=0.067 " + "l1=0.0663" + "l2=0.000664 f=-0.32 shape=(1, 9000, 1)
logits [[ 2.6874847 -2.3628128  2.3372333 -3.9435697]]
Iteration 400 of 1000: loss=0.0668 " + "l1=0.066" + "l2=0.000789 f=-0.32 shape=(1, 9000, 1)
logits [[ 2.6715443 -2.3563964  2.3297737 -3.9259171]]
Iteration 500 of 1000: loss=0.0666 " + "l1=0.0656" + "l2=0.000936 f=-0.32 shape=(1, 9000, 1)
logits [[ 2.6556158 -2.3499212  2.3222992 -3.9083488]]
Iteration 600 of 1000: loss=0.0665 " + "l1=0.0653" + "l2=0.00118 f=-0.32 shape=(1, 9000, 1)
logits [[ 2.6405928 -2.3435302  2.314947  -3.8914387]]
Iteration 700 of 1000: loss=0.0663 " + "l1=0.065" + "l2=0.00125 f=-0.319 shape=(1, 9000, 1)
logits [[ 2.6272073 -2.3382092  2.308523  -3.8755074]]
Iteration 800 of 1000: loss=0.0662 " + "l1=0.0647" + "l2=0.0015 f=-0.319 shape=(1, 9000, 1)
logits [[ 2.6143394 -2.332864   2.301892  -3.8598614]]
Iteration 900 of 1000: loss=0.0662 " + "l1=0.0645" + "l2=0.0017 f=-0.319 shape=(1, 9000, 1)
logits [[ 2.6017172 -2.327437   2.2953029 -3.8447826]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.683 " + "l1=0.683" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.7755    -2.391465   2.3707411 -4.0501466]]
Iteration 100 of 1000: loss=0.605 " + "l1=0.559" + "l2=0.0464 f=-0.292 shape=(1, 9000, 1)
logits [[ 2.2304192 -2.2264085  2.1832933 -3.3548114]]
Iteration 200 of 1000: loss=0.573 " + "l1=0.522" + "l2=0.0508 f=-0.284 shape=(1, 9000, 1)
logits [[ 2.0775049 -2.1555452  2.0809836 -3.1372597]]
Iteration 300 of 1000: loss=0.553 " + "l1=0.502" + "l2=0.0514 f=-0.28 shape=(1, 9000, 1)
logits [[ 2.0080245 -2.124292   2.008675  -3.0120313]]
Iteration 400 of 1000: loss=0.537 " + "l1=0.48" + "l2=0.0569 f=-0.276 shape=(1, 9000, 1)
logits [[ 1.9143865 -2.1027658  1.9449207 -2.859939 ]]
Iteration 500 of 1000: loss=0.521 " + "l1=0.457" + "l2=0.0641 f=-0.27 shape=(1, 9000, 1)
logits [[ 1.811216  -2.0820758  1.8822085 -2.6905997]]
Iteration 600 of 1000: loss=0.504 " + "l1=0.43" + "l2=0.074 f=-0.263 shape=(1, 9000, 1)
logits [[ 1.6867635 -2.0605159  1.81107   -2.4895403]]
Iteration 700 of 1000: loss=0.484 " + "l1=0.4" + "l2=0.0849 f=-0.253 shape=(1, 9000, 1)
logits [[ 1.5441561 -2.02756    1.7336459 -2.2617636]]
Iteration 800 of 1000: loss=0.464 " + "l1=0.373" + "l2=0.0916 f=-0.244 shape=(1, 9000, 1)
logits [[ 1.4240475 -1.9917668  1.6583544 -2.0686014]]
Iteration 900 of 1000: loss=0.446 " + "l1=0.347" + "l2=0.0992 f=-0.236 shape=(1, 9000, 1)
logits [[ 1.299207  -1.9563429  1.5921527 -1.878762 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.83 " + "l1=6.83" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.7755    -2.391465   2.3707411 -4.0501466]]
Iteration 100 of 1000: loss=2.37 " + "l1=0.523" + "l2=1.85 f=-0.0806 shape=(1, 9000, 1)
logits [[ 0.03254138 -1.655017    0.9115694   0.38838884]]
Iteration 200 of 1000: loss=1.4 " + "l1=0.00799" + "l2=1.39 f=-0.0694 shape=(1, 9000, 1)
logits [[-0.11380939 -1.660061    0.75219584  0.7442019 ]]
Iteration 300 of 1000: loss=1.13 " + "l1=0" + "l2=1.13 f=-0.0814 shape=(1, 9000, 1)
logits [[-0.1151332 -1.6607283  0.7149826  0.7351961]]
Iteration 400 of 1000: loss=0.962 " + "l1=0.00775" + "l2=0.954 f=-0.1 shape=(1, 9000, 1)
logits [[-0.09556111 -1.6931063   0.69801956  0.69027245]]
Iteration 500 of 1000: loss=0.844 " + "l1=0.00584" + "l2=0.838 f=-0.11 shape=(1, 9000, 1)
logits [[-0.08882072 -1.7131913   0.6847833   0.67894095]]
Iteration 600 of 1000: loss=0.742 " + "l1=0" + "l2=0.742 f=-0.122 shape=(1, 9000, 1)
logits [[-0.10145697 -1.73538     0.67239606  0.6783731 ]]
Iteration 700 of 1000: loss=0.667 " + "l1=0" + "l2=0.667 f=-0.133 shape=(1, 9000, 1)
logits [[-0.1329165 -1.7408956  0.6559818  0.6866091]]
Iteration 800 of 1000: loss=0.59 " + "l1=0" + "l2=0.59 f=-0.141 shape=(1, 9000, 1)
logits [[-0.12759131 -1.7485324   0.6446912   0.6669343 ]]
Iteration 900 of 1000: loss=0.528 " + "l1=0" + "l2=0.528 f=-0.148 shape=(1, 9000, 1)
logits [[-0.11416021 -1.7616559   0.6400862   0.6429931 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.75 " + "l1=3.75" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.7755    -2.391465   2.3707411 -4.0501466]]
Iteration 100 of 1000: loss=2.14 " + "l1=1.41" + "l2=0.733 f=-0.187 shape=(1, 9000, 1)
logits [[ 0.8456334 -1.8298435  1.3951591 -1.159499 ]]
Iteration 200 of 1000: loss=1.46 " + "l1=0.434" + "l2=1.02 f=-0.117 shape=(1, 9000, 1)
logits [[ 0.15802222 -1.7167335   0.9403034   0.15138683]]
Iteration 300 of 1000: loss=1 " + "l1=2.72e-05" + "l2=1 f=-0.0992 shape=(1, 9000, 1)
logits [[-0.11111568 -1.6902187   0.7023305   0.702281  ]]
Iteration 400 of 1000: loss=0.796 " + "l1=0" + "l2=0.796 f=-0.115 shape=(1, 9000, 1)
logits [[-0.12546664 -1.7235389   0.6797447   0.7102665 ]]
Iteration 500 of 1000: loss=0.667 " + "l1=0.00102" + "l2=0.666 f=-0.126 shape=(1, 9000, 1)
logits [[-0.1054612  -1.7460955   0.67445666  0.6726112 ]]
Iteration 600 of 1000: loss=0.582 " + "l1=0" + "l2=0.582 f=-0.138 shape=(1, 9000, 1)
logits [[-0.12783614 -1.7764953   0.6675039   0.6850923 ]]
Iteration 700 of 1000: loss=0.509 " + "l1=0" + "l2=0.509 f=-0.148 shape=(1, 9000, 1)
logits [[-0.14182524 -1.7960391   0.6607901   0.6854619 ]]
Iteration 800 of 1000: loss=0.456 " + "l1=0" + "l2=0.456 f=-0.152 shape=(1, 9000, 1)
logits [[-0.14769374 -1.8105963   0.66167307  0.6884019 ]]
Iteration 900 of 1000: loss=0.411 " + "l1=0" + "l2=0.411 f=-0.153 shape=(1, 9000, 1)
logits [[-0.13594691 -1.8144857   0.6683048   0.6694233 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.22 " + "l1=2.22" + "l2=0 f=-0.324 shape=(1, 9000, 1)
logits [[ 2.7755    -2.391465   2.3707411 -4.0501466]]
Iteration 100 of 1000: loss=1.58 " + "l1=1.3" + "l2=0.281 f=-0.236 shape=(1, 9000, 1)
logits [[ 1.516841  -1.9925064  1.7698735 -2.2363427]]
Iteration 200 of 1000: loss=1.33 " + "l1=0.953" + "l2=0.374 f=-0.217 shape=(1, 9000, 1)
logits [[ 1.044798  -1.9685775  1.4929577 -1.4383215]]
Iteration 300 of 1000: loss=1.09 " + "l1=0.64" + "l2=0.45 f=-0.186 shape=(1, 9000, 1)
logits [[ 0.6311932 -1.924905   1.2589263 -0.7098278]]
Iteration 400 of 1000: loss=0.835 " + "l1=0.302" + "l2=0.533 f=-0.141 shape=(1, 9000, 1)
logits [[ 0.2430087  -1.7987968   0.9590724   0.03111983]]
Iteration 500 of 1000: loss=0.622 " + "l1=0.0371" + "l2=0.585 f=-0.11 shape=(1, 9000, 1)
logits [[-0.07015847 -1.6813822   0.7124453   0.5982403 ]]
Iteration 600 of 1000: loss=0.494 " + "l1=0" + "l2=0.494 f=-0.116 shape=(1, 9000, 1)
logits [[-0.10098737 -1.6772815   0.65722376  0.6590272 ]]
Iteration 700 of 1000: loss=0.432 " + "l1=0.000512" + "l2=0.432 f=-0.123 shape=(1, 9000, 1)
logits [[-0.10261521 -1.6788682   0.6451403   0.64356434]]
Iteration 800 of 1000: loss=0.389 " + "l1=0.00212" + "l2=0.387 f=-0.128 shape=(1, 9000, 1)
logits [[-0.10340215 -1.6926563   0.6443813   0.63785976]]
Iteration 900 of 1000: loss=0.357 " + "l1=0" + "l2=0.357 f=-0.132 shape=(1, 9000, 1)
logits [[-0.11313896 -1.7022295   0.64325094  0.64480996]]
--- 312.2933621406555 seconds ---
Adv result:3
Loading record A04218
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0984 " + "l1=0.0984" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.429653  -3.4122105  3.430627  -8.719243 ]]
Iteration 100 of 1000: loss=0.0982 " + "l1=0.0979" + "l2=0.000247 f=-0.567 shape=(1, 9000, 1)
logits [[ 6.395779  -3.3976443  3.4222472 -8.687147 ]]
Iteration 200 of 1000: loss=0.0981 " + "l1=0.0979" + "l2=0.000214 f=-0.566 shape=(1, 9000, 1)
logits [[ 6.3947854 -3.3962166  3.4218826 -8.686215 ]]
Iteration 300 of 1000: loss=0.0981 " + "l1=0.0979" + "l2=0.000264 f=-0.566 shape=(1, 9000, 1)
logits [[ 6.3912153 -3.3942504  3.4210083 -8.683202 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.984 " + "l1=0.984" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.429653  -3.4122105  3.430627  -8.719243 ]]
Iteration 100 of 1000: loss=0.962 " + "l1=0.947" + "l2=0.0145 f=-0.558 shape=(1, 9000, 1)
logits [[ 6.1699    -3.3011436  3.3648515 -8.467534 ]]
Iteration 200 of 1000: loss=0.955 " + "l1=0.936" + "l2=0.0192 f=-0.556 shape=(1, 9000, 1)
logits [[ 6.0877233 -3.269582   3.3467228 -8.388889 ]]
Iteration 300 of 1000: loss=0.95 " + "l1=0.927" + "l2=0.0228 f=-0.555 shape=(1, 9000, 1)
logits [[ 6.022742  -3.24535    3.3330557 -8.33078  ]]
Iteration 400 of 1000: loss=0.945 " + "l1=0.919" + "l2=0.0257 f=-0.554 shape=(1, 9000, 1)
logits [[ 5.9671674 -3.2241535  3.322817  -8.280394 ]]
Iteration 500 of 1000: loss=0.94 " + "l1=0.912" + "l2=0.0282 f=-0.552 shape=(1, 9000, 1)
logits [[ 5.9145503 -3.2027853  3.3150642 -8.23574  ]]
Iteration 600 of 1000: loss=0.934 " + "l1=0.904" + "l2=0.0309 f=-0.55 shape=(1, 9000, 1)
logits [[ 5.8580494 -3.1771107  3.3082948 -8.188427 ]]
Iteration 700 of 1000: loss=0.929 " + "l1=0.896" + "l2=0.0325 f=-0.547 shape=(1, 9000, 1)
logits [[ 5.8052044 -3.1545331  3.3060033 -8.145065 ]]
Iteration 800 of 1000: loss=0.922 " + "l1=0.888" + "l2=0.0341 f=-0.543 shape=(1, 9000, 1)
logits [[ 5.7457666 -3.1325116  3.3038397 -8.090753 ]]
Iteration 900 of 1000: loss=0.915 " + "l1=0.879" + "l2=0.036 f=-0.538 shape=(1, 9000, 1)
logits [[ 5.6785073 -3.1078022  3.3010302 -8.025065 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.84 " + "l1=9.84" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.429653  -3.4122105  3.430627  -8.719243 ]]
Iteration 100 of 1000: loss=7.46 " + "l1=6.15" + "l2=1.3 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.7861545 -2.3682904  2.7998784 -6.004235 ]]
Iteration 200 of 1000: loss=6.58 " + "l1=4.96" + "l2=1.62 f=-0.381 shape=(1, 9000, 1)
logits [[ 3.015799  -1.9444258  2.488972  -5.0862083]]
Iteration 300 of 1000: loss=6.06 " + "l1=4.19" + "l2=1.88 f=-0.338 shape=(1, 9000, 1)
logits [[ 2.5315158 -1.65526    2.268891  -4.4972625]]
Iteration 400 of 1000: loss=5.49 " + "l1=3.31" + "l2=2.18 f=-0.303 shape=(1, 9000, 1)
logits [[ 1.9772329 -1.3353504  1.9586859 -3.8126333]]
Iteration 500 of 1000: loss=5.09 " + "l1=2.85" + "l2=2.24 f=-0.279 shape=(1, 9000, 1)
logits [[ 1.741465  -1.106167   1.7393175 -3.4901497]]
Iteration 600 of 1000: loss=4.74 " + "l1=2.52" + "l2=2.21 f=-0.27 shape=(1, 9000, 1)
logits [[ 1.5940305 -0.9287458  1.5844424 -3.3280368]]
Iteration 700 of 1000: loss=4.35 " + "l1=2.11" + "l2=2.24 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.3753984 -0.7311558  1.3830961 -3.069139 ]]
Iteration 800 of 1000: loss=4.08 " + "l1=1.9" + "l2=2.18 f=-0.258 shape=(1, 9000, 1)
logits [[ 1.2586889  -0.63344145  1.2653917  -2.9227946 ]]
Iteration 900 of 1000: loss=3.89 " + "l1=1.78" + "l2=2.11 f=-0.261 shape=(1, 9000, 1)
logits [[ 1.1853831  -0.58995956  1.1924266  -2.8338246 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=98.4 " + "l1=98.4" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.429653  -3.4122105  3.430627  -8.719243 ]]
Iteration 100 of 1000: loss=28 " + "l1=13.7" + "l2=14.3 f=-0.219 shape=(1, 9000, 1)
logits [[ 1.0233668 -0.3219729  1.0436873 -2.621428 ]]
Iteration 200 of 1000: loss=13.4 " + "l1=0.0624" + "l2=13.3 f=-0.227 shape=(1, 9000, 1)
logits [[ 0.5113545  0.5470221  0.5532652 -2.5193331]]
Iteration 300 of 1000: loss=10.8 " + "l1=0" + "l2=10.8 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.5415745   0.56354827  0.55686826 -2.7241147 ]]
Iteration 400 of 1000: loss=9.82 " + "l1=0.104" + "l2=9.72 f=-0.285 shape=(1, 9000, 1)
logits [[ 0.5735295   0.56912273  0.5795206  -2.8634024 ]]
Iteration 500 of 1000: loss=9.21 " + "l1=0" + "l2=9.21 f=-0.31 shape=(1, 9000, 1)
logits [[ 0.44919991  0.62529564  0.5815111  -2.895026  ]]
Iteration 600 of 1000: loss=8.6 " + "l1=0.0252" + "l2=8.57 f=-0.306 shape=(1, 9000, 1)
logits [[ 0.51423687  0.5899908   0.592508   -2.9205027 ]]
Iteration 700 of 1000: loss=8.3 " + "l1=0" + "l2=8.3 f=-0.312 shape=(1, 9000, 1)
logits [[ 0.5197794   0.61590314  0.5827612  -2.9657753 ]]
Iteration 800 of 1000: loss=7.95 " + "l1=0" + "l2=7.95 f=-0.317 shape=(1, 9000, 1)
logits [[ 0.5330515   0.5955217   0.57759535 -2.9761493 ]]
Iteration 900 of 1000: loss=7.73 " + "l1=0" + "l2=7.73 f=-0.323 shape=(1, 9000, 1)
logits [[ 0.49976954  0.59624994  0.5674897  -2.954899  ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=54.1 " + "l1=54.1" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.429653  -3.4122105  3.430627  -8.719243 ]]
Iteration 100 of 1000: loss=21 " + "l1=12.1" + "l2=8.86 f=-0.273 shape=(1, 9000, 1)
logits [[ 1.4268892 -0.7742905  1.4327577 -3.1781437]]
Iteration 200 of 1000: loss=12.3 " + "l1=0.538" + "l2=11.8 f=-0.24 shape=(1, 9000, 1)
logits [[ 0.466796    0.47806546  0.575873   -2.4812    ]]
Iteration 300 of 1000: loss=9.4 " + "l1=0" + "l2=9.4 f=-0.323 shape=(1, 9000, 1)
logits [[ 0.43130863  0.5544223   0.5265959  -2.806204  ]]
Iteration 400 of 1000: loss=8.39 " + "l1=0" + "l2=8.39 f=-0.348 shape=(1, 9000, 1)
logits [[ 0.44422278  0.5769399   0.5558276  -2.9687064 ]]
Iteration 500 of 1000: loss=7.82 " + "l1=0" + "l2=7.82 f=-0.36 shape=(1, 9000, 1)
logits [[ 0.4849986   0.5667815   0.55775595 -3.0501833 ]]
Iteration 600 of 1000: loss=7.41 " + "l1=0.0422" + "l2=7.37 f=-0.362 shape=(1, 9000, 1)
logits [[ 0.53399956  0.54501915  0.5526889  -3.0810633 ]]
Iteration 700 of 1000: loss=7.26 " + "l1=0" + "l2=7.26 f=-0.377 shape=(1, 9000, 1)
logits [[ 0.36651465  0.5846908   0.51389503 -2.9750648 ]]
Iteration 800 of 1000: loss=6.81 " + "l1=0" + "l2=6.81 f=-0.371 shape=(1, 9000, 1)
logits [[ 0.48800007  0.53013337  0.5165694  -3.019943  ]]
Iteration 900 of 1000: loss=6.54 " + "l1=0" + "l2=6.54 f=-0.38 shape=(1, 9000, 1)
logits [[ 0.4091928   0.52549237  0.5223233  -2.9786115 ]]
--- 271.7466871738434 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.03 " + "l1=0.03" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.429653  -3.4122105  3.430627  -8.719243 ]]
Iteration 100 of 1000: loss=0.0299 " + "l1=0.0297" + "l2=0.000177 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.4014783 -3.411964   3.4336038 -8.693613 ]]
Iteration 200 of 1000: loss=0.0298 " + "l1=0.0297" + "l2=0.000133 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.402422  -3.4123552  3.4342983 -8.695074 ]]
Iteration 300 of 1000: loss=0.0298 " + "l1=0.0296" + "l2=0.000168 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.399974  -3.4125733  3.4349744 -8.693556 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.3 " + "l1=0.3" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.429653  -3.4122105  3.430627  -8.719243 ]]
Iteration 100 of 1000: loss=0.287 " + "l1=0.278" + "l2=0.00845 f=-0.567 shape=(1, 9000, 1)
logits [[ 6.2308474 -3.4121249  3.449168  -8.536658 ]]
Iteration 200 of 1000: loss=0.282 " + "l1=0.271" + "l2=0.011 f=-0.567 shape=(1, 9000, 1)
logits [[ 6.170984  -3.4117792  3.4571583 -8.483326 ]]
Iteration 300 of 1000: loss=0.279 " + "l1=0.265" + "l2=0.0136 f=-0.567 shape=(1, 9000, 1)
logits [[ 6.115465  -3.413681   3.4656897 -8.435891 ]]
Iteration 400 of 1000: loss=0.275 " + "l1=0.259" + "l2=0.0154 f=-0.569 shape=(1, 9000, 1)
logits [[ 6.066575  -3.414897   3.4728446 -8.3991785]]
Iteration 500 of 1000: loss=0.271 " + "l1=0.254" + "l2=0.017 f=-0.57 shape=(1, 9000, 1)
logits [[ 6.0184717 -3.4146037  3.480112  -8.3652525]]
Iteration 600 of 1000: loss=0.267 " + "l1=0.248" + "l2=0.0183 f=-0.573 shape=(1, 9000, 1)
logits [[ 5.971703  -3.4141994  3.488307  -8.335893 ]]
Iteration 700 of 1000: loss=0.263 " + "l1=0.243" + "l2=0.0198 f=-0.574 shape=(1, 9000, 1)
logits [[ 5.924244  -3.4154603  3.496705  -8.303316 ]]
Iteration 800 of 1000: loss=0.258 " + "l1=0.237" + "l2=0.021 f=-0.575 shape=(1, 9000, 1)
logits [[ 5.875909  -3.4137454  3.5045083 -8.267705 ]]
Iteration 900 of 1000: loss=0.254 " + "l1=0.231" + "l2=0.0223 f=-0.575 shape=(1, 9000, 1)
logits [[ 5.8254857 -3.4109416  3.5128968 -8.226947 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3 " + "l1=3" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.429653  -3.4122105  3.430627  -8.719243 ]]
Iteration 100 of 1000: loss=1.45 " + "l1=0.648" + "l2=0.799 f=-0.525 shape=(1, 9000, 1)
logits [[ 4.2532797 -3.4151878  3.6051042 -6.5440235]]
Iteration 200 of 1000: loss=1.04 " + "l1=0.138" + "l2=0.899 f=-0.528 shape=(1, 9000, 1)
logits [[ 3.7620237 -3.4636197  3.6238136 -6.032579 ]]
Iteration 300 of 1000: loss=0.825 " + "l1=0.00528" + "l2=0.82 f=-0.54 shape=(1, 9000, 1)
logits [[ 3.6119504 -3.4418411  3.6066728 -5.937299 ]]
Iteration 400 of 1000: loss=0.72 " + "l1=0.00977" + "l2=0.71 f=-0.545 shape=(1, 9000, 1)
logits [[ 3.5998907 -3.42761    3.5901253 -5.941596 ]]
Iteration 500 of 1000: loss=0.635 " + "l1=0.000576" + "l2=0.634 f=-0.54 shape=(1, 9000, 1)
logits [[ 3.5770724 -3.4176269  3.5764968 -5.8971276]]
Iteration 600 of 1000: loss=0.56 " + "l1=0" + "l2=0.56 f=-0.539 shape=(1, 9000, 1)
logits [[ 3.5726922 -3.4185345  3.5742788 -5.88401  ]]
Iteration 700 of 1000: loss=0.498 " + "l1=0" + "l2=0.498 f=-0.54 shape=(1, 9000, 1)
logits [[ 3.5615764 -3.4155104  3.5673816 -5.874224 ]]
Iteration 800 of 1000: loss=0.418 " + "l1=0" + "l2=0.418 f=-0.543 shape=(1, 9000, 1)
logits [[ 3.5472398 -3.4103441  3.5490782 -5.8598   ]]
Iteration 900 of 1000: loss=0.364 " + "l1=0" + "l2=0.364 f=-0.547 shape=(1, 9000, 1)
logits [[ 3.5240026 -3.401852   3.5326416 -5.8431115]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.65 " + "l1=1.65" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.429653  -3.4122105  3.430627  -8.719243 ]]
Iteration 100 of 1000: loss=1.14 " + "l1=0.795" + "l2=0.349 f=-0.529 shape=(1, 9000, 1)
logits [[ 5.0010457 -3.3614776  3.5553164 -7.3106804]]
Iteration 200 of 1000: loss=0.952 " + "l1=0.538" + "l2=0.414 f=-0.527 shape=(1, 9000, 1)
logits [[ 4.563704  -3.3846698  3.586383  -6.872229 ]]
Iteration 300 of 1000: loss=0.835 " + "l1=0.395" + "l2=0.441 f=-0.522 shape=(1, 9000, 1)
logits [[ 4.321253  -3.3962312  3.6039357 -6.6157255]]
Iteration 400 of 1000: loss=0.729 " + "l1=0.277" + "l2=0.452 f=-0.527 shape=(1, 9000, 1)
logits [[ 4.099027  -3.3862088  3.596132  -6.4161572]]
Iteration 500 of 1000: loss=0.654 " + "l1=0.203" + "l2=0.451 f=-0.528 shape=(1, 9000, 1)
logits [[ 3.950309  -3.3724205  3.5807846 -6.2716966]]
Iteration 600 of 1000: loss=0.584 " + "l1=0.144" + "l2=0.439 f=-0.531 shape=(1, 9000, 1)
logits [[ 3.8339863 -3.3668008  3.572129  -6.165036 ]]
Iteration 700 of 1000: loss=0.511 " + "l1=0.0873" + "l2=0.424 f=-0.532 shape=(1, 9000, 1)
logits [[ 3.7263277 -3.3639538  3.5675626 -6.057942 ]]
Iteration 800 of 1000: loss=0.43 " + "l1=0.0189" + "l2=0.411 f=-0.529 shape=(1, 9000, 1)
logits [[ 3.6021893 -3.3743548  3.5678716 -5.9110165]]
Iteration 900 of 1000: loss=0.338 " + "l1=0.0013" + "l2=0.337 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.5539472 -3.3760576  3.5515802 -5.8311553]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.975 " + "l1=0.975" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.429653  -3.4122105  3.430627  -8.719243 ]]
Iteration 100 of 1000: loss=0.817 " + "l1=0.708" + "l2=0.109 f=-0.556 shape=(1, 9000, 1)
logits [[ 5.6777425 -3.3979485  3.4998546 -8.0047   ]]
Iteration 200 of 1000: loss=0.747 " + "l1=0.589" + "l2=0.158 f=-0.561 shape=(1, 9000, 1)
logits [[ 5.34232   -3.4089699  3.5308535 -7.709327 ]]
Iteration 300 of 1000: loss=0.695 " + "l1=0.51" + "l2=0.185 f=-0.563 shape=(1, 9000, 1)
logits [[ 5.1158485 -3.414984   3.5477817 -7.502587 ]]
Iteration 400 of 1000: loss=0.654 " + "l1=0.458" + "l2=0.196 f=-0.567 shape=(1, 9000, 1)
logits [[ 4.9701977 -3.4171495  3.5596569 -7.380111 ]]
Iteration 500 of 1000: loss=0.609 " + "l1=0.406" + "l2=0.203 f=-0.561 shape=(1, 9000, 1)
logits [[ 4.8199234 -3.4015474  3.5696979 -7.2327247]]
Iteration 600 of 1000: loss=0.558 " + "l1=0.335" + "l2=0.223 f=-0.549 shape=(1, 9000, 1)
logits [[ 4.609665  -3.3614073  3.578006  -7.0233874]]
Iteration 700 of 1000: loss=0.499 " + "l1=0.263" + "l2=0.236 f=-0.54 shape=(1, 9000, 1)
logits [[ 4.3945627 -3.336751   3.584316  -6.803201 ]]
Iteration 800 of 1000: loss=0.452 " + "l1=0.228" + "l2=0.224 f=-0.539 shape=(1, 9000, 1)
logits [[ 4.2811136 -3.3208623  3.5799315 -6.6947875]]
Iteration 900 of 1000: loss=0.408 " + "l1=0.193" + "l2=0.216 f=-0.534 shape=(1, 9000, 1)
logits [[ 4.160856  -3.3047597  3.5684054 -6.561113 ]]
--- 267.7385528087616 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.151 " + "l1=0.151" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.429653  -3.4122105  3.430627  -8.719243 ]]
Iteration 100 of 1000: loss=0.151 " + "l1=0.15" + "l2=0.000604 f=-0.564 shape=(1, 9000, 1)
logits [[ 6.3754196 -3.4062333  3.4204304 -8.64383  ]]
Iteration 200 of 1000: loss=0.151 " + "l1=0.15" + "l2=0.00059 f=-0.563 shape=(1, 9000, 1)
logits [[ 6.370574  -3.405445   3.4195375 -8.637195 ]]
Iteration 300 of 1000: loss=0.151 " + "l1=0.15" + "l2=0.000672 f=-0.563 shape=(1, 9000, 1)
logits [[ 6.363544  -3.404627   3.418345  -8.6280775]]
Iteration 400 of 1000: loss=0.151 " + "l1=0.15" + "l2=0.00075 f=-0.562 shape=(1, 9000, 1)
logits [[ 6.357183  -3.4040327  3.4173079 -8.620098 ]]
Iteration 500 of 1000: loss=0.15 " + "l1=0.15" + "l2=0.000858 f=-0.562 shape=(1, 9000, 1)
logits [[ 6.351128  -3.4034228  3.4166071 -8.612609 ]]
Iteration 600 of 1000: loss=0.15 " + "l1=0.15" + "l2=0.000943 f=-0.562 shape=(1, 9000, 1)
logits [[ 6.3455176 -3.4028232  3.41603   -8.605796 ]]
Iteration 700 of 1000: loss=0.15 " + "l1=0.149" + "l2=0.00104 f=-0.561 shape=(1, 9000, 1)
logits [[ 6.340291  -3.402297   3.4155889 -8.599551 ]]
Iteration 800 of 1000: loss=0.15 " + "l1=0.149" + "l2=0.0012 f=-0.561 shape=(1, 9000, 1)
logits [[ 6.3353763 -3.4018779  3.4153047 -8.593819 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.51 " + "l1=1.51" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.429653  -3.4122105  3.430627  -8.719243 ]]
Iteration 100 of 1000: loss=1.44 " + "l1=1.39" + "l2=0.0506 f=-0.531 shape=(1, 9000, 1)
logits [[ 5.91564   -3.3619504  3.3411388 -8.0199995]]
Iteration 200 of 1000: loss=1.42 " + "l1=1.35" + "l2=0.0726 f=-0.52 shape=(1, 9000, 1)
logits [[ 5.71296   -3.3502965  3.3096867 -7.752664 ]]
Iteration 300 of 1000: loss=1.4 " + "l1=1.31" + "l2=0.089 f=-0.513 shape=(1, 9000, 1)
logits [[ 5.547938  -3.35236    3.2916381 -7.541149 ]]
Iteration 400 of 1000: loss=1.38 " + "l1=1.28" + "l2=0.099 f=-0.503 shape=(1, 9000, 1)
logits [[ 5.429636  -3.3470697  3.2788744 -7.3740983]]
Iteration 500 of 1000: loss=1.36 " + "l1=1.25" + "l2=0.11 f=-0.487 shape=(1, 9000, 1)
logits [[ 5.308975  -3.329639   3.2694294 -7.196826 ]]
Iteration 600 of 1000: loss=1.34 " + "l1=1.22" + "l2=0.116 f=-0.475 shape=(1, 9000, 1)
logits [[ 5.2000246 -3.3132653  3.256934  -7.0420203]]
Iteration 700 of 1000: loss=1.32 " + "l1=1.19" + "l2=0.125 f=-0.458 shape=(1, 9000, 1)
logits [[ 5.0629153 -3.2819586  3.243184  -6.8564687]]
Iteration 800 of 1000: loss=1.29 " + "l1=1.16" + "l2=0.132 f=-0.439 shape=(1, 9000, 1)
logits [[ 4.9299026 -3.2353003  3.2261434 -6.6762204]]
Iteration 900 of 1000: loss=1.27 " + "l1=1.13" + "l2=0.14 f=-0.418 shape=(1, 9000, 1)
logits [[ 4.7978516 -3.1987443  3.2135706 -6.486643 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=15.1 " + "l1=15.1" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.429653  -3.4122105  3.430627  -8.719243 ]]
Iteration 100 of 1000: loss=8.81 " + "l1=6.01" + "l2=2.8 f=-0.244 shape=(1, 9000, 1)
logits [[ 2.6830432 -3.0163207  2.6842668 -3.3253036]]
Iteration 200 of 1000: loss=7.92 " + "l1=5.28" + "l2=2.64 f=-0.191 shape=(1, 9000, 1)
logits [[ 2.4446566 -2.8259158  2.4480522 -2.8319657]]
Iteration 300 of 1000: loss=7.44 " + "l1=4.73" + "l2=2.72 f=-0.165 shape=(1, 9000, 1)
logits [[ 2.2410362 -2.6726627  2.2478287 -2.4774888]]
Iteration 400 of 1000: loss=6.96 " + "l1=4.3" + "l2=2.67 f=-0.156 shape=(1, 9000, 1)
logits [[ 2.038007  -2.5524118  2.0939362 -2.2018478]]
Iteration 500 of 1000: loss=6.57 " + "l1=3.88" + "l2=2.69 f=-0.14 shape=(1, 9000, 1)
logits [[ 1.8186096 -2.4415786  1.970372  -1.906502 ]]
Iteration 600 of 1000: loss=6.04 " + "l1=3.28" + "l2=2.76 f=-0.118 shape=(1, 9000, 1)
logits [[ 1.5210601 -2.3712046  1.8296528 -1.4530315]]
Iteration 700 of 1000: loss=5.2 " + "l1=2.6" + "l2=2.6 f=-0.0831 shape=(1, 9000, 1)
logits [[ 1.226498  -2.3162365  1.6799076 -0.9225466]]
Iteration 800 of 1000: loss=4.7 " + "l1=2.13" + "l2=2.58 f=-0.0627 shape=(1, 9000, 1)
logits [[ 1.0373847 -2.2013788  1.5192899 -0.6062524]]
Iteration 900 of 1000: loss=4.27 " + "l1=1.61" + "l2=2.66 f=-0.042 shape=(1, 9000, 1)
logits [[ 0.87182146 -2.0078485   1.2897874  -0.3217531 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=151 " + "l1=151" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.429653  -3.4122105  3.430627  -8.719243 ]]
Iteration 100 of 1000: loss=23.3 " + "l1=1.16" + "l2=22.1 f=-0.0228 shape=(1, 9000, 1)
logits [[-0.07220753 -2.0197012   1.0585971   0.9422389 ]]
Iteration 200 of 1000: loss=15.8 " + "l1=0" + "l2=15.8 f=-0.0247 shape=(1, 9000, 1)
logits [[-0.11800697 -1.8816968   0.9364686   0.96460944]]
Iteration 300 of 1000: loss=13.7 " + "l1=0" + "l2=13.7 f=-0.027 shape=(1, 9000, 1)
logits [[-0.06760509 -1.8511173   0.904541    0.90627056]]
Iteration 400 of 1000: loss=12.8 " + "l1=0.0563" + "l2=12.7 f=-0.0267 shape=(1, 9000, 1)
logits [[-0.02463676 -1.8020476   0.8627661   0.8571327 ]]
Iteration 500 of 1000: loss=12.2 " + "l1=0.24" + "l2=11.9 f=-0.0295 shape=(1, 9000, 1)
logits [[ 0.0061122 -1.7872273  0.8435833  0.8195524]]
Iteration 600 of 1000: loss=11.5 " + "l1=0" + "l2=11.5 f=-0.0308 shape=(1, 9000, 1)
logits [[-0.00193209 -1.7557907   0.8131866   0.8211665 ]]
Iteration 700 of 1000: loss=11.1 " + "l1=0" + "l2=11.1 f=-0.0363 shape=(1, 9000, 1)
logits [[-0.01150176 -1.7270442   0.7907544   0.80269927]]
Iteration 800 of 1000: loss=10.8 " + "l1=0" + "l2=10.8 f=-0.0393 shape=(1, 9000, 1)
logits [[-0.03985606 -1.6877978   0.76376456  0.8067077 ]]
Iteration 900 of 1000: loss=10.4 " + "l1=0" + "l2=10.4 f=-0.0436 shape=(1, 9000, 1)
logits [[-0.04563841 -1.6579906   0.75125283  0.7781306 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=83.3 " + "l1=83.3" + "l2=0 f=-0.568 shape=(1, 9000, 1)
logits [[ 6.429653  -3.4122105  3.430627  -8.719243 ]]
Iteration 100 of 1000: loss=20.8 " + "l1=6.8" + "l2=14 f=-0.0417 shape=(1, 9000, 1)
logits [[ 0.42630133 -2.2007117   1.4218551   0.1859008 ]]
Iteration 200 of 1000: loss=13.7 " + "l1=0" + "l2=13.7 f=-0.0264 shape=(1, 9000, 1)
logits [[-0.06353843 -1.8774786   0.91046447  0.92487246]]
Iteration 300 of 1000: loss=12.1 " + "l1=0.0261" + "l2=12.1 f=-0.0342 shape=(1, 9000, 1)
logits [[-0.00769198 -1.8477634   0.8616559   0.856908  ]]
Iteration 400 of 1000: loss=11.2 " + "l1=0.0328" + "l2=11.2 f=-0.0326 shape=(1, 9000, 1)
logits [[ 0.01592836 -1.775714    0.8177066   0.8117447 ]]
Iteration 500 of 1000: loss=10.6 " + "l1=0.118" + "l2=10.5 f=-0.0321 shape=(1, 9000, 1)
logits [[ 0.00394808 -1.6931466   0.7911615   0.76976043]]
Iteration 600 of 1000: loss=10 " + "l1=0.06" + "l2=9.95 f=-0.0311 shape=(1, 9000, 1)
logits [[ 1.2329984e-03 -1.6212767e+00  7.5336474e-01  7.4245596e-01]]
Iteration 700 of 1000: loss=9.54 " + "l1=0" + "l2=9.54 f=-0.0356 shape=(1, 9000, 1)
logits [[-1.6461127e-04 -1.5840696e+00  7.1977031e-01  7.2197545e-01]]
Iteration 800 of 1000: loss=9.19 " + "l1=0" + "l2=9.19 f=-0.0421 shape=(1, 9000, 1)
logits [[-0.01261999 -1.540803    0.6803403   0.7047473 ]]
Iteration 900 of 1000: loss=8.78 " + "l1=0.0383" + "l2=8.74 f=-0.0532 shape=(1, 9000, 1)
logits [[-0.00431642 -1.5378665   0.66821694  0.66125757]]
--- 300.28649520874023 seconds ---
Adv result:3
Loading record A04220
(1, 5998)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0476 " + "l1=0.0476" + "l2=0 f=-0.674 shape=(1, 9000, 1)
logits [[ 2.0750046 -2.6818504  1.0527729 -3.141991 ]]
Iteration 100 of 1000: loss=0.047 " + "l1=0.0468" + "l2=0.000273 f=-0.669 shape=(1, 9000, 1)
logits [[ 2.0203614 -2.6546717  1.0336493 -3.073895 ]]
Iteration 200 of 1000: loss=0.0468 " + "l1=0.0466" + "l2=0.000286 f=-0.667 shape=(1, 9000, 1)
logits [[ 2.0069745 -2.648974   1.0296769 -3.0550876]]
Iteration 300 of 1000: loss=0.0467 " + "l1=0.0463" + "l2=0.000356 f=-0.665 shape=(1, 9000, 1)
logits [[ 1.990273  -2.6413035  1.0241171 -3.0323606]]
Iteration 400 of 1000: loss=0.0465 " + "l1=0.0461" + "l2=0.000444 f=-0.663 shape=(1, 9000, 1)
logits [[ 1.9740844 -2.63327    1.0179119 -3.0097678]]
Iteration 500 of 1000: loss=0.0464 " + "l1=0.0458" + "l2=0.000536 f=-0.661 shape=(1, 9000, 1)
logits [[ 1.9577867 -2.625066   1.0113826 -2.9869738]]
Iteration 600 of 1000: loss=0.0462 " + "l1=0.0456" + "l2=0.00063 f=-0.659 shape=(1, 9000, 1)
logits [[ 1.94114   -2.6168222  1.0047909 -2.963759 ]]
Iteration 700 of 1000: loss=0.0461 " + "l1=0.0453" + "l2=0.000734 f=-0.657 shape=(1, 9000, 1)
logits [[ 1.9250706  -2.6091332   0.99835366 -2.9410703 ]]
Iteration 800 of 1000: loss=0.0459 " + "l1=0.0451" + "l2=0.00082 f=-0.655 shape=(1, 9000, 1)
logits [[ 1.9082924 -2.6013172  0.9918246 -2.9174964]]
Iteration 900 of 1000: loss=0.0459 " + "l1=0.0449" + "l2=0.00103 f=-0.653 shape=(1, 9000, 1)
logits [[ 1.892004  -2.593626   0.9856629 -2.894527 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.476 " + "l1=0.476" + "l2=0 f=-0.674 shape=(1, 9000, 1)
logits [[ 2.0750046 -2.6818504  1.0527729 -3.141991 ]]
Iteration 100 of 1000: loss=0.43 " + "l1=0.411" + "l2=0.0192 f=-0.633 shape=(1, 9000, 1)
logits [[ 1.6643578  -2.4436152   0.90187395 -2.6552083 ]]
Iteration 200 of 1000: loss=0.403 " + "l1=0.372" + "l2=0.0306 f=-0.602 shape=(1, 9000, 1)
logits [[ 1.4248514 -2.295849   0.8142222 -2.3530657]]
Iteration 300 of 1000: loss=0.378 " + "l1=0.339" + "l2=0.0397 f=-0.576 shape=(1, 9000, 1)
logits [[ 1.217412  -2.1703804  0.7330939 -2.0857174]]
Iteration 400 of 1000: loss=0.357 " + "l1=0.311" + "l2=0.0458 f=-0.558 shape=(1, 9000, 1)
logits [[ 1.0521752 -2.0616305  0.663932  -1.8868394]]
Iteration 500 of 1000: loss=0.339 " + "l1=0.289" + "l2=0.0495 f=-0.543 shape=(1, 9000, 1)
logits [[ 0.91753757 -1.9767756   0.5999057  -1.7138318 ]]
Iteration 600 of 1000: loss=0.323 " + "l1=0.27" + "l2=0.0529 f=-0.531 shape=(1, 9000, 1)
logits [[ 0.799266   -1.8985416   0.53443205 -1.5608182 ]]
Iteration 700 of 1000: loss=0.305 " + "l1=0.248" + "l2=0.0575 f=-0.522 shape=(1, 9000, 1)
logits [[ 0.67420864 -1.8049641   0.4586544  -1.4152489 ]]
Iteration 800 of 1000: loss=0.289 " + "l1=0.228" + "l2=0.0612 f=-0.508 shape=(1, 9000, 1)
logits [[ 0.5539528  -1.7220179   0.39110345 -1.253821  ]]
Iteration 900 of 1000: loss=0.266 " + "l1=0.197" + "l2=0.069 f=-0.49 shape=(1, 9000, 1)
logits [[ 0.3902962  -1.5771614   0.34855413 -1.1231468 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.76 " + "l1=4.76" + "l2=0 f=-0.674 shape=(1, 9000, 1)
logits [[ 2.0750046 -2.6818504  1.0527729 -3.141991 ]]
Iteration 100 of 1000: loss=1.74 " + "l1=0.736" + "l2=0.999 f=-0.441 shape=(1, 9000, 1)
logits [[ 0.04849494 -0.6877741   0.03758121 -1.1617167 ]]
Iteration 200 of 1000: loss=0.948 " + "l1=0.00341" + "l2=0.945 f=-0.4 shape=(1, 9000, 1)
logits [[-0.2685072  -0.27191648 -0.27262607 -0.78711915]]
Iteration 300 of 1000: loss=0.733 " + "l1=0" + "l2=0.733 f=-0.398 shape=(1, 9000, 1)
logits [[-0.29349515 -0.27971342 -0.28190038 -0.73814744]]
Iteration 400 of 1000: loss=0.603 " + "l1=0.00323" + "l2=0.6 f=-0.4 shape=(1, 9000, 1)
logits [[-0.27132392 -0.2745526  -0.27641603 -0.77616936]]
Iteration 500 of 1000: loss=0.515 " + "l1=0" + "l2=0.515 f=-0.39 shape=(1, 9000, 1)
logits [[-0.24920365 -0.24261026 -0.24622342 -0.82082325]]
Iteration 600 of 1000: loss=0.463 " + "l1=0" + "l2=0.463 f=-0.391 shape=(1, 9000, 1)
logits [[-0.264698   -0.25651842 -0.2653229  -0.77859783]]
Iteration 700 of 1000: loss=0.43 " + "l1=0" + "l2=0.43 f=-0.387 shape=(1, 9000, 1)
logits [[-0.29054177 -0.26570654 -0.27306554 -0.7192862 ]]
Iteration 800 of 1000: loss=0.401 " + "l1=0" + "l2=0.401 f=-0.387 shape=(1, 9000, 1)
logits [[-0.30265588 -0.28615096 -0.29765916 -0.66021115]]
Iteration 900 of 1000: loss=0.373 " + "l1=0" + "l2=0.373 f=-0.385 shape=(1, 9000, 1)
logits [[-0.32761756 -0.32224196 -0.32289946 -0.56741923]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.62 " + "l1=2.62" + "l2=0 f=-0.674 shape=(1, 9000, 1)
logits [[ 2.0750046 -2.6818504  1.0527729 -3.141991 ]]
Iteration 100 of 1000: loss=1.5 " + "l1=1.07" + "l2=0.423 f=-0.493 shape=(1, 9000, 1)
logits [[ 0.41152465 -1.538772    0.38521662 -1.2312994 ]]
Iteration 200 of 1000: loss=1.08 " + "l1=0.609" + "l2=0.471 f=-0.446 shape=(1, 9000, 1)
logits [[ 0.08356745 -1.0232652   0.07683586 -0.9214713 ]]
Iteration 300 of 1000: loss=0.743 " + "l1=0.26" + "l2=0.484 f=-0.376 shape=(1, 9000, 1)
logits [[-0.10045427 -0.57110333 -0.09893028 -0.73181784]]
Iteration 400 of 1000: loss=0.575 " + "l1=0.124" + "l2=0.45 f=-0.353 shape=(1, 9000, 1)
logits [[-0.17698707 -0.39492184 -0.16865173 -0.67213225]]
Iteration 500 of 1000: loss=0.44 " + "l1=0.0184" + "l2=0.422 f=-0.338 shape=(1, 9000, 1)
logits [[-0.22662303 -0.26010695 -0.22719619 -0.6362733 ]]
Iteration 600 of 1000: loss=0.37 " + "l1=0" + "l2=0.37 f=-0.337 shape=(1, 9000, 1)
logits [[-0.28212526 -0.27642316 -0.28000253 -0.5088376 ]]
Iteration 700 of 1000: loss=0.33 " + "l1=0" + "l2=0.33 f=-0.335 shape=(1, 9000, 1)
logits [[-0.31800637 -0.3101378  -0.31409174 -0.39722127]]
Iteration 800 of 1000: loss=0.307 " + "l1=0" + "l2=0.307 f=-0.333 shape=(1, 9000, 1)
logits [[-0.33004156 -0.32837743 -0.33136603 -0.342935  ]]
Iteration 900 of 1000: loss=0.295 " + "l1=0.00105" + "l2=0.294 f=-0.336 shape=(1, 9000, 1)
logits [[-0.3294723  -0.32182762 -0.31992716 -0.37388635]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.55 " + "l1=1.55" + "l2=0 f=-0.674 shape=(1, 9000, 1)
logits [[ 2.0750046 -2.6818504  1.0527729 -3.141991 ]]
Iteration 100 of 1000: loss=1.09 " + "l1=0.912" + "l2=0.182 f=-0.534 shape=(1, 9000, 1)
logits [[ 0.9005572 -1.9057522  0.5955238 -1.7243546]]
Iteration 200 of 1000: loss=0.897 " + "l1=0.663" + "l2=0.234 f=-0.506 shape=(1, 9000, 1)
logits [[ 0.43921524 -1.6000183   0.3786694  -1.2432517 ]]
Iteration 300 of 1000: loss=0.73 " + "l1=0.484" + "l2=0.246 f=-0.479 shape=(1, 9000, 1)
logits [[ 0.16988681 -1.3149782   0.17527987 -0.94460654]]
Iteration 400 of 1000: loss=0.568 " + "l1=0.325" + "l2=0.243 f=-0.418 shape=(1, 9000, 1)
logits [[ 0.03195033 -0.9643418   0.03418285 -0.77384007]]
Iteration 500 of 1000: loss=0.472 " + "l1=0.242" + "l2=0.231 f=-0.387 shape=(1, 9000, 1)
logits [[-0.06769234 -0.81146896 -0.0680572  -0.599848  ]]
Iteration 600 of 1000: loss=0.402 " + "l1=0.168" + "l2=0.234 f=-0.365 shape=(1, 9000, 1)
logits [[-0.12905797 -0.64566636 -0.13046908 -0.55474025]]
Iteration 700 of 1000: loss=0.345 " + "l1=0.108" + "l2=0.237 f=-0.345 shape=(1, 9000, 1)
logits [[-0.15493087 -0.4870351  -0.15462156 -0.58281356]]
Iteration 800 of 1000: loss=0.316 " + "l1=0.0803" + "l2=0.235 f=-0.332 shape=(1, 9000, 1)
logits [[-0.19437256 -0.44157764 -0.19763222 -0.49449486]]
Iteration 900 of 1000: loss=0.29 " + "l1=0.0482" + "l2=0.242 f=-0.328 shape=(1, 9000, 1)
logits [[-0.26301828 -0.41016    -0.2619024  -0.3750396 ]]
--- 313.76192569732666 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0102 " + "l1=0.0102" + "l2=0 f=-0.674 shape=(1, 9000, 1)
logits [[ 2.0750046 -2.6818504  1.0527729 -3.141991 ]]
Iteration 100 of 1000: loss=0.00994 " + "l1=0.00975" + "l2=0.00019 f=-0.672 shape=(1, 9000, 1)
logits [[ 2.034068  -2.6820166  1.059531  -3.0999177]]
Iteration 200 of 1000: loss=0.00985 " + "l1=0.00967" + "l2=0.00018 f=-0.671 shape=(1, 9000, 1)
logits [[ 2.0278382 -2.681488   1.0608114 -3.0922499]]
Iteration 300 of 1000: loss=0.00979 " + "l1=0.00957" + "l2=0.000222 f=-0.67 shape=(1, 9000, 1)
logits [[ 2.019377  -2.680556   1.0623224 -3.0823226]]
Iteration 400 of 1000: loss=0.00973 " + "l1=0.00947" + "l2=0.000258 f=-0.669 shape=(1, 9000, 1)
logits [[ 2.0104282 -2.6794753  1.0637169 -3.07175  ]]
Iteration 500 of 1000: loss=0.00968 " + "l1=0.00936" + "l2=0.000316 f=-0.668 shape=(1, 9000, 1)
logits [[ 2.0012767 -2.67831    1.0649916 -3.060846 ]]
Iteration 600 of 1000: loss=0.00966 " + "l1=0.00926" + "l2=0.000398 f=-0.667 shape=(1, 9000, 1)
logits [[ 1.9923611 -2.6771374  1.0662845 -3.0502987]]
Iteration 700 of 1000: loss=0.00969 " + "l1=0.00916" + "l2=0.000532 f=-0.666 shape=(1, 9000, 1)
logits [[ 1.9836268 -2.6757255  1.0673953 -3.0398006]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.102 " + "l1=0.102" + "l2=0 f=-0.674 shape=(1, 9000, 1)
logits [[ 2.0750046 -2.6818504  1.0527729 -3.141991 ]]
Iteration 100 of 1000: loss=0.0805 " + "l1=0.0713" + "l2=0.00925 f=-0.665 shape=(1, 9000, 1)
logits [[ 1.8199534 -2.6798377  1.1072716 -2.9071112]]
Iteration 200 of 1000: loss=0.07 " + "l1=0.0568" + "l2=0.0132 f=-0.656 shape=(1, 9000, 1)
logits [[ 1.693991  -2.6649654  1.1255636 -2.7780564]]
Iteration 300 of 1000: loss=0.0607 " + "l1=0.0441" + "l2=0.0166 f=-0.646 shape=(1, 9000, 1)
logits [[ 1.5929987 -2.6526592  1.1515212 -2.6776328]]
Iteration 400 of 1000: loss=0.0516 " + "l1=0.0316" + "l2=0.0201 f=-0.644 shape=(1, 9000, 1)
logits [[ 1.5023085 -2.650786   1.186755  -2.613955 ]]
Iteration 500 of 1000: loss=0.0429 " + "l1=0.0191" + "l2=0.0238 f=-0.642 shape=(1, 9000, 1)
logits [[ 1.4234233 -2.6617332  1.2325236 -2.5631752]]
Iteration 600 of 1000: loss=0.0355 " + "l1=0.0084" + "l2=0.0271 f=-0.642 shape=(1, 9000, 1)
logits [[ 1.3559661 -2.683027   1.2719532 -2.5138164]]
Iteration 700 of 1000: loss=0.0294 " + "l1=0.000535" + "l2=0.0289 f=-0.638 shape=(1, 9000, 1)
logits [[ 1.3082148 -2.6999726  1.3028672 -2.463156 ]]
Iteration 800 of 1000: loss=0.0256 " + "l1=0" + "l2=0.0256 f=-0.634 shape=(1, 9000, 1)
logits [[ 1.3072182 -2.705681   1.307547  -2.444306 ]]
Iteration 900 of 1000: loss=0.023 " + "l1=0" + "l2=0.023 f=-0.631 shape=(1, 9000, 1)
logits [[ 1.3109833 -2.7106738  1.3112704 -2.436079 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0562 " + "l1=0.0562" + "l2=0 f=-0.674 shape=(1, 9000, 1)
logits [[ 2.0750046 -2.6818504  1.0527729 -3.141991 ]]
Iteration 100 of 1000: loss=0.0494 " + "l1=0.0464" + "l2=0.00292 f=-0.668 shape=(1, 9000, 1)
logits [[ 1.9279093 -2.681315   1.083703  -3.0032954]]
Iteration 200 of 1000: loss=0.0464 " + "l1=0.0422" + "l2=0.00411 f=-0.664 shape=(1, 9000, 1)
logits [[ 1.8639256 -2.6779222  1.0957603 -2.93867  ]]
Iteration 300 of 1000: loss=0.0436 " + "l1=0.0382" + "l2=0.0054 f=-0.66 shape=(1, 9000, 1)
logits [[ 1.8014067 -2.671275   1.1066581 -2.8751416]]
Iteration 400 of 1000: loss=0.041 " + "l1=0.0344" + "l2=0.0066 f=-0.654 shape=(1, 9000, 1)
logits [[ 1.7428597 -2.662027   1.1173753 -2.8129652]]
Iteration 500 of 1000: loss=0.0384 " + "l1=0.0309" + "l2=0.00756 f=-0.648 shape=(1, 9000, 1)
logits [[ 1.6906236 -2.6524162  1.1295363 -2.7591813]]
Iteration 600 of 1000: loss=0.0362 " + "l1=0.0276" + "l2=0.00853 f=-0.643 shape=(1, 9000, 1)
logits [[ 1.644819  -2.6461928  1.1422428 -2.7137747]]
Iteration 700 of 1000: loss=0.0339 " + "l1=0.0244" + "l2=0.00955 f=-0.639 shape=(1, 9000, 1)
logits [[ 1.5981802 -2.6392004  1.1552669 -2.6705885]]
Iteration 800 of 1000: loss=0.032 " + "l1=0.0217" + "l2=0.0103 f=-0.636 shape=(1, 9000, 1)
logits [[ 1.5621835 -2.6350782  1.1677246 -2.6375434]]
Iteration 900 of 1000: loss=0.0301 " + "l1=0.0188" + "l2=0.0113 f=-0.633 shape=(1, 9000, 1)
logits [[ 1.524389  -2.6336799  1.1824621 -2.6037838]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0792 " + "l1=0.0792" + "l2=0 f=-0.674 shape=(1, 9000, 1)
logits [[ 2.0750046 -2.6818504  1.0527729 -3.141991 ]]
Iteration 100 of 1000: loss=0.0659 " + "l1=0.0603" + "l2=0.00561 f=-0.666 shape=(1, 9000, 1)
logits [[ 1.8734684 -2.6796272  1.0951927 -2.9536576]]
Iteration 200 of 1000: loss=0.0596 " + "l1=0.0514" + "l2=0.00824 f=-0.66 shape=(1, 9000, 1)
logits [[ 1.7746032 -2.6705728  1.1116266 -2.8549974]]
Iteration 300 of 1000: loss=0.0539 " + "l1=0.0432" + "l2=0.0107 f=-0.651 shape=(1, 9000, 1)
logits [[ 1.6863114 -2.6566336  1.1282709 -2.762993 ]]
Iteration 400 of 1000: loss=0.0487 " + "l1=0.0361" + "l2=0.0126 f=-0.645 shape=(1, 9000, 1)
logits [[ 1.6145751 -2.648986   1.1483295 -2.6928806]]
Iteration 500 of 1000: loss=0.0438 " + "l1=0.0295" + "l2=0.0143 f=-0.64 shape=(1, 9000, 1)
logits [[ 1.5490069 -2.6430678  1.168829  -2.6361058]]
Iteration 600 of 1000: loss=0.0387 " + "l1=0.022" + "l2=0.0167 f=-0.639 shape=(1, 9000, 1)
logits [[ 1.4862392 -2.6462257  1.2021463 -2.5974026]]
Iteration 700 of 1000: loss=0.0345 " + "l1=0.0158" + "l2=0.0188 f=-0.639 shape=(1, 9000, 1)
logits [[ 1.4357288 -2.6580827  1.2323421 -2.5643053]]
Iteration 800 of 1000: loss=0.0307 " + "l1=0.0102" + "l2=0.0205 f=-0.638 shape=(1, 9000, 1)
logits [[ 1.38898   -2.6723983  1.2576698 -2.5274105]]
Iteration 900 of 1000: loss=0.0273 " + "l1=0.0056" + "l2=0.0217 f=-0.634 shape=(1, 9000, 1)
logits [[ 1.3494258 -2.6824017  1.277155  -2.4818153]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0907 " + "l1=0.0907" + "l2=0 f=-0.674 shape=(1, 9000, 1)
logits [[ 2.0750046 -2.6818504  1.0527729 -3.141991 ]]
Iteration 100 of 1000: loss=0.0735 " + "l1=0.0662" + "l2=0.00735 f=-0.665 shape=(1, 9000, 1)
logits [[ 1.8474039 -2.6800427  1.1016486 -2.9309614]]
Iteration 200 of 1000: loss=0.0653 " + "l1=0.0547" + "l2=0.0105 f=-0.658 shape=(1, 9000, 1)
logits [[ 1.7351041 -2.6690006  1.1183249 -2.8163545]]
Iteration 300 of 1000: loss=0.058 " + "l1=0.0446" + "l2=0.0134 f=-0.649 shape=(1, 9000, 1)
logits [[ 1.6412879 -2.6558251  1.1390173 -2.7209163]]
Iteration 400 of 1000: loss=0.0511 " + "l1=0.0352" + "l2=0.0159 f=-0.643 shape=(1, 9000, 1)
logits [[ 1.5588658 -2.6476574  1.1621909 -2.6454093]]
Iteration 500 of 1000: loss=0.0442 " + "l1=0.0254" + "l2=0.0188 f=-0.642 shape=(1, 9000, 1)
logits [[ 1.4859723 -2.6499372  1.1996684 -2.602919 ]]
Iteration 600 of 1000: loss=0.0379 " + "l1=0.0163" + "l2=0.0216 f=-0.641 shape=(1, 9000, 1)
logits [[ 1.4215126 -2.6634612  1.2381166 -2.5609386]]
Iteration 700 of 1000: loss=0.0326 " + "l1=0.00868" + "l2=0.0239 f=-0.641 shape=(1, 9000, 1)
logits [[ 1.3675523 -2.6813362  1.2697444 -2.5188031]]
Iteration 800 of 1000: loss=0.028 " + "l1=0.00256" + "l2=0.0254 f=-0.636 shape=(1, 9000, 1)
logits [[ 1.3223752 -2.6918962  1.2935137 -2.4670675]]
Iteration 900 of 1000: loss=0.0244 " + "l1=9.97e-05" + "l2=0.0243 f=-0.633 shape=(1, 9000, 1)
logits [[ 1.3077226 -2.7043304  1.3065993 -2.441317 ]]
--- 295.07149386405945 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0522 " + "l1=0.0522" + "l2=0 f=-0.674 shape=(1, 9000, 1)
logits [[ 2.0750046 -2.6818504  1.0527729 -3.141991 ]]
Iteration 100 of 1000: loss=0.0506 " + "l1=0.05" + "l2=0.000605 f=-0.663 shape=(1, 9000, 1)
logits [[ 1.9869967 -2.6598117  1.0288194 -3.0082145]]
Iteration 200 of 1000: loss=0.0499 " + "l1=0.0492" + "l2=0.000749 f=-0.659 shape=(1, 9000, 1)
logits [[ 1.9583106 -2.6530573  1.0195748 -2.9610949]]
Iteration 300 of 1000: loss=0.0493 " + "l1=0.0483" + "l2=0.000986 f=-0.655 shape=(1, 9000, 1)
logits [[ 1.9264253 -2.644894   1.0083141 -2.9080431]]
Iteration 400 of 1000: loss=0.0487 " + "l1=0.0475" + "l2=0.00124 f=-0.65 shape=(1, 9000, 1)
logits [[ 1.8936901  -2.6355317   0.99582475 -2.8534727 ]]
Iteration 500 of 1000: loss=0.0481 " + "l1=0.0466" + "l2=0.00148 f=-0.645 shape=(1, 9000, 1)
logits [[ 1.8608618 -2.6262822  0.9836973 -2.7990875]]
Iteration 600 of 1000: loss=0.0475 " + "l1=0.0457" + "l2=0.00181 f=-0.641 shape=(1, 9000, 1)
logits [[ 1.827969  -2.6167002  0.9709587 -2.744401 ]]
Iteration 700 of 1000: loss=0.0469 " + "l1=0.0449" + "l2=0.00205 f=-0.637 shape=(1, 9000, 1)
logits [[ 1.7959279 -2.6076145  0.9575933 -2.6920133]]
Iteration 800 of 1000: loss=0.0464 " + "l1=0.0441" + "l2=0.00227 f=-0.633 shape=(1, 9000, 1)
logits [[ 1.7671328 -2.5980694  0.9445497 -2.6445494]]
Iteration 900 of 1000: loss=0.0459 " + "l1=0.0434" + "l2=0.00257 f=-0.629 shape=(1, 9000, 1)
logits [[ 1.7394077 -2.5881038  0.9317619 -2.5979986]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.522 " + "l1=0.522" + "l2=0 f=-0.674 shape=(1, 9000, 1)
logits [[ 2.0750046 -2.6818504  1.0527729 -3.141991 ]]
Iteration 100 of 1000: loss=0.39 " + "l1=0.341" + "l2=0.0489 f=-0.571 shape=(1, 9000, 1)
logits [[ 1.3709452 -2.458107   0.8412893 -2.0375752]]
Iteration 200 of 1000: loss=0.318 " + "l1=0.243" + "l2=0.0749 f=-0.517 shape=(1, 9000, 1)
logits [[ 1.0100328 -2.3356187  0.67626   -1.4205943]]
Iteration 300 of 1000: loss=0.263 " + "l1=0.174" + "l2=0.0885 f=-0.489 shape=(1, 9000, 1)
logits [[ 0.7616472 -2.2766783  0.5402099 -0.9823137]]
Iteration 400 of 1000: loss=0.219 " + "l1=0.121" + "l2=0.0977 f=-0.47 shape=(1, 9000, 1)
logits [[ 0.5648479  -2.2215638   0.42403844 -0.6476838 ]]
Iteration 500 of 1000: loss=0.179 " + "l1=0.0721" + "l2=0.107 f=-0.451 shape=(1, 9000, 1)
logits [[ 0.38500917 -2.1523175   0.29904255 -0.33596376]]
Iteration 600 of 1000: loss=0.144 " + "l1=0.0284" + "l2=0.116 f=-0.435 shape=(1, 9000, 1)
logits [[ 0.21717244 -2.0662827   0.17573284 -0.06663641]]
Iteration 700 of 1000: loss=0.117 " + "l1=0.000866" + "l2=0.116 f=-0.425 shape=(1, 9000, 1)
logits [[ 0.11275828 -2.003182    0.08825032  0.10409552]]
Iteration 800 of 1000: loss=0.0998 " + "l1=0.000251" + "l2=0.0996 f=-0.429 shape=(1, 9000, 1)
logits [[ 0.1094957  -1.9896423   0.05892229  0.10698872]]
Iteration 900 of 1000: loss=0.0886 " + "l1=0" + "l2=0.0886 f=-0.431 shape=(1, 9000, 1)
logits [[ 0.10465888 -1.9699578   0.03756389  0.10555328]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.287 " + "l1=0.287" + "l2=0 f=-0.674 shape=(1, 9000, 1)
logits [[ 2.0750046 -2.6818504  1.0527729 -3.141991 ]]
Iteration 100 of 1000: loss=0.245 " + "l1=0.231" + "l2=0.0146 f=-0.622 shape=(1, 9000, 1)
logits [[ 1.6742046  -2.5722144   0.93215954 -2.5202467 ]]
Iteration 200 of 1000: loss=0.223 " + "l1=0.199" + "l2=0.0236 f=-0.586 shape=(1, 9000, 1)
logits [[ 1.4599055  -2.490949    0.85447425 -2.1670275 ]]
Iteration 300 of 1000: loss=0.203 " + "l1=0.171" + "l2=0.0316 f=-0.558 shape=(1, 9000, 1)
logits [[ 1.2659128 -2.4197152  0.7667012 -1.8465073]]
Iteration 400 of 1000: loss=0.184 " + "l1=0.148" + "l2=0.0369 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.1101415  -2.3687499   0.68745714 -1.5727383 ]]
Iteration 500 of 1000: loss=0.168 " + "l1=0.127" + "l2=0.0411 f=-0.516 shape=(1, 9000, 1)
logits [[ 0.9782189 -2.327814   0.6167952 -1.3303347]]
Iteration 600 of 1000: loss=0.154 " + "l1=0.11" + "l2=0.045 f=-0.502 shape=(1, 9000, 1)
logits [[ 0.86382747 -2.2925637   0.54942375 -1.1276963 ]]
Iteration 700 of 1000: loss=0.143 " + "l1=0.0952" + "l2=0.0474 f=-0.493 shape=(1, 9000, 1)
logits [[ 0.7671749  -2.2555661   0.48163277 -0.9645727 ]]
Iteration 800 of 1000: loss=0.131 " + "l1=0.08" + "l2=0.0507 f=-0.482 shape=(1, 9000, 1)
logits [[ 0.6637386  -2.2108188   0.40884253 -0.7902053 ]]
Iteration 900 of 1000: loss=0.119 " + "l1=0.0656" + "l2=0.0536 f=-0.47 shape=(1, 9000, 1)
logits [[ 0.5676721  -2.1632586   0.34046927 -0.625405  ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.404 " + "l1=0.404" + "l2=0 f=-0.674 shape=(1, 9000, 1)
logits [[ 2.0750046 -2.6818504  1.0527729 -3.141991 ]]
Iteration 100 of 1000: loss=0.324 " + "l1=0.295" + "l2=0.0289 f=-0.596 shape=(1, 9000, 1)
logits [[ 1.5252551 -2.5131936  0.8863773 -2.2808921]]
Iteration 200 of 1000: loss=0.279 " + "l1=0.233" + "l2=0.0463 f=-0.549 shape=(1, 9000, 1)
logits [[ 1.2223247 -2.4021404  0.7623407 -1.7785767]]
Iteration 300 of 1000: loss=0.241 " + "l1=0.182" + "l2=0.0596 f=-0.513 shape=(1, 9000, 1)
logits [[ 0.9853759  -2.3271866   0.64899516 -1.3574524 ]]
Iteration 400 of 1000: loss=0.21 " + "l1=0.145" + "l2=0.0654 f=-0.494 shape=(1, 9000, 1)
logits [[ 0.81361777 -2.2870374   0.551835   -1.0551524 ]]
Iteration 500 of 1000: loss=0.185 " + "l1=0.114" + "l2=0.0707 f=-0.481 shape=(1, 9000, 1)
logits [[ 0.6677959  -2.2456346   0.45887697 -0.8031676 ]]
Iteration 600 of 1000: loss=0.161 " + "l1=0.0832" + "l2=0.0775 f=-0.464 shape=(1, 9000, 1)
logits [[ 0.52284986 -2.1860175   0.35732836 -0.55085456]]
Iteration 700 of 1000: loss=0.14 " + "l1=0.0591" + "l2=0.0812 f=-0.452 shape=(1, 9000, 1)
logits [[ 0.40575323 -2.1273677   0.26866996 -0.3568303 ]]
Iteration 800 of 1000: loss=0.12 " + "l1=0.0335" + "l2=0.0868 f=-0.437 shape=(1, 9000, 1)
logits [[ 0.28147867 -2.0487413   0.1711451  -0.15121004]]
Iteration 900 of 1000: loss=0.104 " + "l1=0.0139" + "l2=0.0899 f=-0.428 shape=(1, 9000, 1)
logits [[ 0.18266405 -1.999962    0.10102659  0.00375442]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.346 " + "l1=0.346" + "l2=0 f=-0.674 shape=(1, 9000, 1)
logits [[ 2.0750046 -2.6818504  1.0527729 -3.141991 ]]
Iteration 100 of 1000: loss=0.286 " + "l1=0.265" + "l2=0.0212 f=-0.609 shape=(1, 9000, 1)
logits [[ 1.600384   -2.5450594   0.91065997 -2.4021974 ]]
Iteration 200 of 1000: loss=0.253 " + "l1=0.219" + "l2=0.0345 f=-0.567 shape=(1, 9000, 1)
logits [[ 1.3353975  -2.4445431   0.80977696 -1.9667027 ]]
Iteration 300 of 1000: loss=0.225 " + "l1=0.181" + "l2=0.0443 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.1244456 -2.373169   0.7067103 -1.6030662]]
Iteration 400 of 1000: loss=0.2 " + "l1=0.149" + "l2=0.0511 f=-0.511 shape=(1, 9000, 1)
logits [[ 0.95129365 -2.3195384   0.61815095 -1.2933806 ]]
Iteration 500 of 1000: loss=0.179 " + "l1=0.124" + "l2=0.0553 f=-0.497 shape=(1, 9000, 1)
logits [[ 0.81243813 -2.2830954   0.53674096 -1.0524704 ]]
Iteration 600 of 1000: loss=0.161 " + "l1=0.102" + "l2=0.0599 f=-0.485 shape=(1, 9000, 1)
logits [[ 0.6896091 -2.2405076  0.4530014 -0.8429596]]
Iteration 700 of 1000: loss=0.144 " + "l1=0.0793" + "l2=0.0649 f=-0.47 shape=(1, 9000, 1)
logits [[ 0.56822616 -2.1843252   0.36537224 -0.6287833 ]]
Iteration 800 of 1000: loss=0.129 " + "l1=0.0611" + "l2=0.0676 f=-0.458 shape=(1, 9000, 1)
logits [[ 0.4681248  -2.1342952   0.28888962 -0.45442623]]
Iteration 900 of 1000: loss=0.115 " + "l1=0.0443" + "l2=0.0703 f=-0.446 shape=(1, 9000, 1)
logits [[ 0.37543583 -2.0770066   0.21046248 -0.29321074]]
--- 312.03181076049805 seconds ---
Adv result:3
Loading model
Loading ground truth file
Attack diff is running...
Loading record A04230
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0396 " + "l1=0.0396" + "l2=0 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.778447  -2.182735   1.581082  -3.3636944]]
Iteration 100 of 1000: loss=0.039 " + "l1=0.0386" + "l2=0.000433 f=-0.546 shape=(1, 9000, 1)
logits [[ 1.7320305 -2.1258607  1.5295669 -3.3197362]]
Iteration 200 of 1000: loss=0.0389 " + "l1=0.0384" + "l2=0.000453 f=-0.546 shape=(1, 9000, 1)
logits [[ 1.7249106 -2.1171658  1.5218723 -3.3125606]]
Iteration 300 of 1000: loss=0.0388 " + "l1=0.0382" + "l2=0.000524 f=-0.545 shape=(1, 9000, 1)
logits [[ 1.7163856 -2.1076188  1.5134132 -3.3040702]]
Iteration 400 of 1000: loss=0.0387 " + "l1=0.0381" + "l2=0.000601 f=-0.545 shape=(1, 9000, 1)
logits [[ 1.7084405 -2.099023   1.506258  -3.2954504]]
Iteration 500 of 1000: loss=0.0386 " + "l1=0.0379" + "l2=0.000657 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.7006572 -2.0904012  1.499147  -3.2868512]]
Iteration 600 of 1000: loss=0.0386 " + "l1=0.0377" + "l2=0.000828 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.692758  -2.0807946  1.4910842 -3.27821  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.396 " + "l1=0.396" + "l2=0 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.778447  -2.182735   1.581082  -3.3636944]]
Iteration 100 of 1000: loss=0.341 " + "l1=0.305" + "l2=0.0358 f=-0.549 shape=(1, 9000, 1)
logits [[ 1.3853921 -1.6616914  1.1200924 -3.0411544]]
Iteration 200 of 1000: loss=0.323 " + "l1=0.275" + "l2=0.0478 f=-0.546 shape=(1, 9000, 1)
logits [[ 1.2656145  -1.4876214   0.98745775 -2.948676  ]]
Iteration 300 of 1000: loss=0.309 " + "l1=0.254" + "l2=0.0549 f=-0.541 shape=(1, 9000, 1)
logits [[ 1.1761168 -1.3620877  0.8998769 -2.877619 ]]
Iteration 400 of 1000: loss=0.295 " + "l1=0.23" + "l2=0.0652 f=-0.532 shape=(1, 9000, 1)
logits [[ 1.0767263 -1.2201655  0.8003327 -2.785185 ]]
Iteration 500 of 1000: loss=0.282 " + "l1=0.212" + "l2=0.0702 f=-0.522 shape=(1, 9000, 1)
logits [[ 0.99375415 -1.1234933   0.73481005 -2.692407  ]]
Iteration 600 of 1000: loss=0.269 " + "l1=0.195" + "l2=0.0744 f=-0.51 shape=(1, 9000, 1)
logits [[ 0.9079838  -1.0382675   0.67372555 -2.5841048 ]]
Iteration 700 of 1000: loss=0.257 " + "l1=0.182" + "l2=0.075 f=-0.496 shape=(1, 9000, 1)
logits [[ 0.82682425 -0.98929816  0.6587066  -2.479273  ]]
Iteration 800 of 1000: loss=0.245 " + "l1=0.168" + "l2=0.0762 f=-0.481 shape=(1, 9000, 1)
logits [[ 0.7423646  -0.9411933   0.64757884 -2.3740597 ]]
Iteration 900 of 1000: loss=0.234 " + "l1=0.158" + "l2=0.0766 f=-0.47 shape=(1, 9000, 1)
logits [[ 0.670485  -0.9072629  0.6416968 -2.2830586]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.96 " + "l1=3.96" + "l2=0 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.778447  -2.182735   1.581082  -3.3636944]]
Iteration 100 of 1000: loss=0.733 " + "l1=0" + "l2=0.733 f=-0.502 shape=(1, 9000, 1)
logits [[-0.06901398 -0.05734733 -0.05914368 -1.820938  ]]
Iteration 200 of 1000: loss=0.536 " + "l1=0.0206" + "l2=0.515 f=-0.479 shape=(1, 9000, 1)
logits [[-0.04758538 -0.06818648 -0.05087872 -1.7501134 ]]
Iteration 300 of 1000: loss=0.456 " + "l1=0" + "l2=0.456 f=-0.457 shape=(1, 9000, 1)
logits [[-0.07982615 -0.03518985 -0.05991771 -1.6539972 ]]
Iteration 400 of 1000: loss=0.392 " + "l1=0" + "l2=0.392 f=-0.437 shape=(1, 9000, 1)
logits [[-0.04058067 -0.03957932 -0.05787353 -1.6096319 ]]
Iteration 500 of 1000: loss=0.362 " + "l1=0" + "l2=0.362 f=-0.424 shape=(1, 9000, 1)
logits [[-0.07623796 -0.03220449 -0.04089199 -1.5461407 ]]
Iteration 600 of 1000: loss=0.33 " + "l1=0.00079" + "l2=0.33 f=-0.412 shape=(1, 9000, 1)
logits [[-0.05681048 -0.0369073  -0.03611699 -1.5168355 ]]
Iteration 700 of 1000: loss=0.32 " + "l1=0" + "l2=0.32 f=-0.402 shape=(1, 9000, 1)
logits [[-0.06036486 -0.01301884 -0.05622373 -1.4766837 ]]
Iteration 800 of 1000: loss=0.304 " + "l1=0" + "l2=0.304 f=-0.393 shape=(1, 9000, 1)
logits [[-0.05330908 -0.0151473  -0.05805208 -1.4467132 ]]
Iteration 900 of 1000: loss=0.288 " + "l1=0.00706" + "l2=0.281 f=-0.389 shape=(1, 9000, 1)
logits [[-0.06446971 -0.0421795  -0.03512023 -1.4157386 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.18 " + "l1=2.18" + "l2=0 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.778447  -2.182735   1.581082  -3.3636944]]
Iteration 100 of 1000: loss=0.791 " + "l1=0.218" + "l2=0.573 f=-0.513 shape=(1, 9000, 1)
logits [[ 0.11261091 -0.2832777   0.09793116 -1.9809875 ]]
Iteration 200 of 1000: loss=0.503 " + "l1=0" + "l2=0.503 f=-0.463 shape=(1, 9000, 1)
logits [[-0.05443425 -0.05258755 -0.05263391 -1.6910241 ]]
Iteration 300 of 1000: loss=0.415 " + "l1=0.0162" + "l2=0.399 f=-0.437 shape=(1, 9000, 1)
logits [[-0.02996292 -0.05937724 -0.04179672 -1.6149896 ]]
Iteration 400 of 1000: loss=0.356 " + "l1=0.00283" + "l2=0.354 f=-0.418 shape=(1, 9000, 1)
logits [[-0.046984   -0.04465592 -0.03951054 -1.5424777 ]]
Iteration 500 of 1000: loss=0.327 " + "l1=0" + "l2=0.327 f=-0.404 shape=(1, 9000, 1)
logits [[-0.05075251 -0.02678396 -0.04856598 -1.4903772 ]]
Iteration 600 of 1000: loss=0.299 " + "l1=0.000191" + "l2=0.299 f=-0.397 shape=(1, 9000, 1)
logits [[-0.04000799 -0.04003926 -0.03969237 -1.4684343 ]]
Iteration 700 of 1000: loss=0.287 " + "l1=0.0038" + "l2=0.283 f=-0.391 shape=(1, 9000, 1)
logits [[-0.04340419 -0.04206454 -0.03515527 -1.4424936 ]]
Iteration 800 of 1000: loss=0.273 " + "l1=0" + "l2=0.273 f=-0.385 shape=(1, 9000, 1)
logits [[-0.0478689  -0.03283778 -0.04302664 -1.4174575 ]]
Iteration 900 of 1000: loss=0.262 " + "l1=0.00148" + "l2=0.26 f=-0.38 shape=(1, 9000, 1)
logits [[-0.03727046 -0.03996496 -0.04820109 -1.3939787 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.29 " + "l1=1.29" + "l2=0 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.778447  -2.182735   1.581082  -3.3636944]]
Iteration 100 of 1000: loss=0.721 " + "l1=0.421" + "l2=0.301 f=-0.54 shape=(1, 9000, 1)
logits [[ 0.6016879 -0.6927292  0.3674898 -2.435605 ]]
Iteration 200 of 1000: loss=0.546 " + "l1=0.207" + "l2=0.338 f=-0.494 shape=(1, 9000, 1)
logits [[ 0.24872872 -0.38955644  0.21627049 -2.0505395 ]]
Iteration 300 of 1000: loss=0.437 " + "l1=0.0845" + "l2=0.352 f=-0.455 shape=(1, 9000, 1)
logits [[ 0.07930047 -0.180611    0.07519177 -1.7955569 ]]
Iteration 400 of 1000: loss=0.367 " + "l1=0.028" + "l2=0.339 f=-0.42 shape=(1, 9000, 1)
logits [[ 0.00533242 -0.08084666  0.00313091 -1.6080145 ]]
Iteration 500 of 1000: loss=0.322 " + "l1=0.00187" + "l2=0.32 f=-0.403 shape=(1, 9000, 1)
logits [[-0.02760759 -0.03336948 -0.03092722 -1.5214628 ]]
Iteration 600 of 1000: loss=0.296 " + "l1=0.00465" + "l2=0.291 f=-0.395 shape=(1, 9000, 1)
logits [[-0.02841124 -0.04232962 -0.02803252 -1.4813213 ]]
Iteration 700 of 1000: loss=0.279 " + "l1=0.00476" + "l2=0.274 f=-0.388 shape=(1, 9000, 1)
logits [[-0.03573514 -0.0437484  -0.02910403 -1.4450222 ]]
Iteration 800 of 1000: loss=0.264 " + "l1=0.00654" + "l2=0.258 f=-0.384 shape=(1, 9000, 1)
logits [[-0.03251132 -0.05262516 -0.03257862 -1.4186143 ]]
Iteration 900 of 1000: loss=0.253 " + "l1=0.00353" + "l2=0.25 f=-0.38 shape=(1, 9000, 1)
logits [[-0.03634303 -0.04720082 -0.0377318  -1.398937  ]]
--- 272.41366314888 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00197 " + "l1=0.00197" + "l2=0 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.778447  -2.182735   1.581082  -3.3636944]]
Iteration 100 of 1000: loss=0.00162 " + "l1=0.0013" + "l2=0.000316 f=-0.549 shape=(1, 9000, 1)
logits [[ 1.747259  -2.2151706  1.6169769 -3.3444164]]
Iteration 200 of 1000: loss=0.00158 " + "l1=0.00124" + "l2=0.000333 f=-0.549 shape=(1, 9000, 1)
logits [[ 1.7452989 -2.2187302  1.6209114 -3.3437917]]
Iteration 300 of 1000: loss=0.00155 " + "l1=0.00117" + "l2=0.000372 f=-0.549 shape=(1, 9000, 1)
logits [[ 1.7425473 -2.222549   1.6251664 -3.3420904]]
Iteration 400 of 1000: loss=0.00152 " + "l1=0.00111" + "l2=0.000416 f=-0.549 shape=(1, 9000, 1)
logits [[ 1.7399421 -2.226261   1.6293172 -3.3406696]]
Iteration 500 of 1000: loss=0.00154 " + "l1=0.00105" + "l2=0.000489 f=-0.549 shape=(1, 9000, 1)
logits [[ 1.7375779 -2.229237   1.632802  -3.3390958]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.000987 " + "l1=0.000987" + "l2=0 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.778447  -2.182735   1.581082  -3.3636944]]
Iteration 100 of 1000: loss=0.000908 " + "l1=0.000784" + "l2=0.000124 f=-0.548 shape=(1, 9000, 1)
logits [[ 1.7594435 -2.201602   1.6026229 -3.3512068]]
Iteration 200 of 1000: loss=0.000885 " + "l1=0.000789" + "l2=9.62e-05 f=-0.548 shape=(1, 9000, 1)
logits [[ 1.7604432 -2.2016091  1.6026198 -3.3518262]]
Iteration 300 of 1000: loss=0.000886 " + "l1=0.000779" + "l2=0.000107 f=-0.548 shape=(1, 9000, 1)
logits [[ 1.7596705 -2.2027557  1.6038847 -3.3512523]]
const [0.0025]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.000493 " + "l1=0.000493" + "l2=0 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.778447  -2.182735   1.581082  -3.3636944]]
Iteration 100 of 1000: loss=0.000489 " + "l1=0.000427" + "l2=6.24e-05 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.765683  -2.1943688  1.5950235 -3.3552842]]
Iteration 200 of 1000: loss=0.000471 " + "l1=0.000437" + "l2=3.4e-05 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.7679319 -2.1928022  1.5930605 -3.356517 ]]
Iteration 300 of 1000: loss=0.000494 " + "l1=0.000437" + "l2=5.63e-05 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.7680631 -2.1930485  1.5931475 -3.3564992]]
const [0.00375]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00074 " + "l1=0.00074" + "l2=0 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.778447  -2.182735   1.581082  -3.3636944]]
Iteration 100 of 1000: loss=0.000704 " + "l1=0.000613" + "l2=9.07e-05 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.7624513 -2.1981688  1.5990357 -3.3530781]]
Iteration 200 of 1000: loss=0.000684 " + "l1=0.000624" + "l2=6.07e-05 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.7641604 -2.19716    1.5978162 -3.3541   ]]
Iteration 300 of 1000: loss=0.000714 " + "l1=0.00062" + "l2=9.36e-05 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.7638463 -2.1978464  1.5984927 -3.353826 ]]
const [0.004375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.000863 " + "l1=0.000863" + "l2=0 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.778447  -2.182735   1.581082  -3.3636944]]
Iteration 100 of 1000: loss=0.000806 " + "l1=0.0007" + "l2=0.000107 f=-0.548 shape=(1, 9000, 1)
logits [[ 1.7608483 -2.200009   1.6009552 -3.3520994]]
Iteration 200 of 1000: loss=0.000785 " + "l1=0.000709" + "l2=7.61e-05 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.7622666 -2.199423   1.6002766 -3.3529503]]
Iteration 300 of 1000: loss=0.000799 " + "l1=0.000702" + "l2=9.66e-05 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.7617416 -2.200378   1.6012821 -3.3525538]]
--- 105.07658648490906 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0514 " + "l1=0.0514" + "l2=0 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.778447  -2.182735   1.581082  -3.3636944]]
Iteration 100 of 1000: loss=0.0505 " + "l1=0.0499" + "l2=0.00064 f=-0.545 shape=(1, 9000, 1)
logits [[ 1.7078966 -2.167156   1.5576239 -3.2771428]]
Iteration 200 of 1000: loss=0.0503 " + "l1=0.0496" + "l2=0.000681 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.6964995 -2.1606364  1.5496051 -3.262514 ]]
Iteration 300 of 1000: loss=0.0501 " + "l1=0.0493" + "l2=0.000784 f=-0.544 shape=(1, 9000, 1)
logits [[ 1.6844065 -2.1547174  1.5424309 -3.2467694]]
Iteration 400 of 1000: loss=0.0499 " + "l1=0.049" + "l2=0.000871 f=-0.543 shape=(1, 9000, 1)
logits [[ 1.6734006 -2.1494246  1.5363635 -3.2315745]]
Iteration 500 of 1000: loss=0.0498 " + "l1=0.0488" + "l2=0.000997 f=-0.542 shape=(1, 9000, 1)
logits [[ 1.6624944 -2.1438942  1.5301661 -3.2162404]]
Iteration 600 of 1000: loss=0.0497 " + "l1=0.0485" + "l2=0.00115 f=-0.541 shape=(1, 9000, 1)
logits [[ 1.6514863 -2.1379204  1.5236119 -3.2007174]]
Iteration 700 of 1000: loss=0.0496 " + "l1=0.0483" + "l2=0.0013 f=-0.54 shape=(1, 9000, 1)
logits [[ 1.6411169 -2.1322997  1.5175085 -3.186445 ]]
Iteration 800 of 1000: loss=0.0495 " + "l1=0.048" + "l2=0.00143 f=-0.539 shape=(1, 9000, 1)
logits [[ 1.6318078 -2.1262734  1.5115474 -3.1729128]]
Iteration 900 of 1000: loss=0.0493 " + "l1=0.0478" + "l2=0.00149 f=-0.538 shape=(1, 9000, 1)
logits [[ 1.6221755 -2.120165   1.5057367 -3.1589835]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.514 " + "l1=0.514" + "l2=0 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.778447  -2.182735   1.581082  -3.3636944]]
Iteration 100 of 1000: loss=0.441 " + "l1=0.401" + "l2=0.0409 f=-0.53 shape=(1, 9000, 1)
logits [[ 1.2809256 -1.9543228  1.2775178 -2.7246962]]
Iteration 200 of 1000: loss=0.422 " + "l1=0.373" + "l2=0.0483 f=-0.521 shape=(1, 9000, 1)
logits [[ 1.1689093 -1.850732   1.1617025 -2.5628688]]
Iteration 300 of 1000: loss=0.401 " + "l1=0.344" + "l2=0.057 f=-0.51 shape=(1, 9000, 1)
logits [[ 1.0505673 -1.7506682  1.0513972 -2.3924415]]
Iteration 400 of 1000: loss=0.381 " + "l1=0.315" + "l2=0.0654 f=-0.496 shape=(1, 9000, 1)
logits [[ 0.94052297 -1.6519963   0.9411367  -2.2126598 ]]
Iteration 500 of 1000: loss=0.361 " + "l1=0.289" + "l2=0.072 f=-0.484 shape=(1, 9000, 1)
logits [[ 0.83572197 -1.5619016   0.8387514  -2.049369  ]]
Iteration 600 of 1000: loss=0.339 " + "l1=0.26" + "l2=0.0792 f=-0.465 shape=(1, 9000, 1)
logits [[ 0.72318816 -1.4479555   0.73381937 -1.8677609 ]]
Iteration 700 of 1000: loss=0.321 " + "l1=0.24" + "l2=0.081 f=-0.448 shape=(1, 9000, 1)
logits [[ 0.6533905  -1.36287     0.65663856 -1.7386341 ]]
Iteration 800 of 1000: loss=0.305 " + "l1=0.222" + "l2=0.0832 f=-0.434 shape=(1, 9000, 1)
logits [[ 0.59288865 -1.3006116   0.5953104  -1.6244848 ]]
Iteration 900 of 1000: loss=0.294 " + "l1=0.206" + "l2=0.0873 f=-0.421 shape=(1, 9000, 1)
logits [[ 0.5441142 -1.247265   0.5391703 -1.5190754]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.14 " + "l1=5.14" + "l2=0 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.778447  -2.182735   1.581082  -3.3636944]]
Iteration 100 of 1000: loss=1.07 " + "l1=0.00119" + "l2=1.07 f=-0.372 shape=(1, 9000, 1)
logits [[-0.23241904 -0.79748255 -0.2293806  -0.23056659]]
Iteration 200 of 1000: loss=0.751 " + "l1=0" + "l2=0.751 f=-0.36 shape=(1, 9000, 1)
logits [[-0.24839431 -0.7594613  -0.224425   -0.2073487 ]]
Iteration 300 of 1000: loss=0.624 " + "l1=0" + "l2=0.624 f=-0.342 shape=(1, 9000, 1)
logits [[-0.24329025 -0.72736454 -0.21065691 -0.18822658]]
Iteration 400 of 1000: loss=0.558 " + "l1=0" + "l2=0.558 f=-0.326 shape=(1, 9000, 1)
logits [[-0.24166882 -0.67343795 -0.22875412 -0.16125065]]
Iteration 500 of 1000: loss=0.49 " + "l1=0" + "l2=0.49 f=-0.319 shape=(1, 9000, 1)
logits [[-0.22608417 -0.65317756 -0.21499231 -0.18175584]]
Iteration 600 of 1000: loss=0.441 " + "l1=0" + "l2=0.441 f=-0.317 shape=(1, 9000, 1)
logits [[-0.21220651 -0.64904666 -0.20439802 -0.20157593]]
Iteration 700 of 1000: loss=0.417 " + "l1=0" + "l2=0.417 f=-0.312 shape=(1, 9000, 1)
logits [[-0.23401637 -0.6457203  -0.20092233 -0.16792402]]
Iteration 800 of 1000: loss=0.389 " + "l1=0.0085" + "l2=0.381 f=-0.311 shape=(1, 9000, 1)
logits [[-0.22451377 -0.6526475  -0.17842047 -0.18692341]]
Iteration 900 of 1000: loss=0.36 " + "l1=0.000157" + "l2=0.36 f=-0.31 shape=(1, 9000, 1)
logits [[-0.23998699 -0.6581276  -0.17039353 -0.17055088]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.83 " + "l1=2.83" + "l2=0 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.778447  -2.182735   1.581082  -3.3636944]]
Iteration 100 of 1000: loss=1.14 " + "l1=0.359" + "l2=0.777 f=-0.391 shape=(1, 9000, 1)
logits [[ 0.00545307 -0.9671305   0.02511415 -0.6281301 ]]
Iteration 200 of 1000: loss=0.661 " + "l1=0.00691" + "l2=0.654 f=-0.35 shape=(1, 9000, 1)
logits [[-0.23823386 -0.7326834  -0.2079253  -0.22048277]]
Iteration 300 of 1000: loss=0.539 " + "l1=0" + "l2=0.539 f=-0.331 shape=(1, 9000, 1)
logits [[-0.25226766 -0.6928963  -0.19786967 -0.17980292]]
Iteration 400 of 1000: loss=0.46 " + "l1=0.00652" + "l2=0.454 f=-0.322 shape=(1, 9000, 1)
logits [[-0.22276032 -0.6445127  -0.20485702 -0.21671605]]
Iteration 500 of 1000: loss=0.411 " + "l1=0.00333" + "l2=0.408 f=-0.317 shape=(1, 9000, 1)
logits [[-0.23500527 -0.6405366  -0.19289103 -0.19894657]]
Iteration 600 of 1000: loss=0.377 " + "l1=0" + "l2=0.377 f=-0.311 shape=(1, 9000, 1)
logits [[-0.25574955 -0.6351572  -0.18317948 -0.17093015]]
Iteration 700 of 1000: loss=0.348 " + "l1=0.00328" + "l2=0.344 f=-0.312 shape=(1, 9000, 1)
logits [[-0.2640187  -0.6451093  -0.1660818  -0.17203966]]
Iteration 800 of 1000: loss=0.328 " + "l1=0" + "l2=0.328 f=-0.31 shape=(1, 9000, 1)
logits [[-0.27416715 -0.6635371  -0.16684122 -0.1370534 ]]
Iteration 900 of 1000: loss=0.309 " + "l1=0" + "l2=0.309 f=-0.31 shape=(1, 9000, 1)
logits [[-0.26866812 -0.6819499  -0.15390204 -0.13470903]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.67 " + "l1=1.67" + "l2=0 f=-0.547 shape=(1, 9000, 1)
logits [[ 1.778447  -2.182735   1.581082  -3.3636944]]
Iteration 100 of 1000: loss=1.02 " + "l1=0.699" + "l2=0.323 f=-0.473 shape=(1, 9000, 1)
logits [[ 0.5420781  -1.3867632   0.55156034 -1.5995542 ]]
Iteration 200 of 1000: loss=0.774 " + "l1=0.352" + "l2=0.422 f=-0.399 shape=(1, 9000, 1)
logits [[ 0.16613099 -1.0122087   0.16707642 -0.9153231 ]]
Iteration 300 of 1000: loss=0.574 " + "l1=0.079" + "l2=0.495 f=-0.345 shape=(1, 9000, 1)
logits [[-0.15572917 -0.69220036 -0.14509785 -0.3880723 ]]
Iteration 400 of 1000: loss=0.447 " + "l1=0.00381" + "l2=0.444 f=-0.324 shape=(1, 9000, 1)
logits [[-0.2574936  -0.6091073  -0.20923615 -0.22095579]]
Iteration 500 of 1000: loss=0.39 " + "l1=0" + "l2=0.39 f=-0.319 shape=(1, 9000, 1)
logits [[-0.2888972  -0.6189765  -0.19192441 -0.17687756]]
Iteration 600 of 1000: loss=0.349 " + "l1=0.00853" + "l2=0.34 f=-0.32 shape=(1, 9000, 1)
logits [[-0.27322713 -0.6545397  -0.16380405 -0.19005567]]
Iteration 700 of 1000: loss=0.321 " + "l1=0.00363" + "l2=0.317 f=-0.322 shape=(1, 9000, 1)
logits [[-0.27943882 -0.67558485 -0.16135441 -0.1725353 ]]
Iteration 800 of 1000: loss=0.304 " + "l1=0" + "l2=0.304 f=-0.321 shape=(1, 9000, 1)
logits [[-0.28622422 -0.6932335  -0.15761891 -0.14783654]]
Iteration 900 of 1000: loss=0.29 " + "l1=0.00315" + "l2=0.287 f=-0.321 shape=(1, 9000, 1)
logits [[-0.27636528 -0.71206003 -0.14201707 -0.15172389]]
--- 297.7408173084259 seconds ---
Adv result:3
Loading record A04272
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0741 " + "l1=0.0741" + "l2=0 f=-0.542 shape=(1, 9000, 1)
logits [[ 4.472534  -2.9404552  2.8027315 -6.502551 ]]
Iteration 100 of 1000: loss=0.0735 " + "l1=0.0731" + "l2=0.000348 f=-0.536 shape=(1, 9000, 1)
logits [[ 4.416258  -2.8950489  2.7732298 -6.437311 ]]
Iteration 200 of 1000: loss=0.0732 " + "l1=0.0728" + "l2=0.000394 f=-0.534 shape=(1, 9000, 1)
logits [[ 4.3993893 -2.8827987  2.7654192 -6.4167776]]
Iteration 300 of 1000: loss=0.073 " + "l1=0.0725" + "l2=0.000517 f=-0.531 shape=(1, 9000, 1)
logits [[ 4.3794413 -2.8683197  2.756802  -6.3928013]]
Iteration 400 of 1000: loss=0.0728 " + "l1=0.0721" + "l2=0.000659 f=-0.529 shape=(1, 9000, 1)
logits [[ 4.358611  -2.8535275  2.748294  -6.3680453]]
Iteration 500 of 1000: loss=0.0726 " + "l1=0.0718" + "l2=0.000797 f=-0.526 shape=(1, 9000, 1)
logits [[ 4.33836   -2.8395338  2.7407308 -6.3436756]]
Iteration 600 of 1000: loss=0.0725 " + "l1=0.0714" + "l2=0.00103 f=-0.523 shape=(1, 9000, 1)
logits [[ 4.318537  -2.8259277  2.733767  -6.319352 ]]
Iteration 700 of 1000: loss=0.0723 " + "l1=0.0711" + "l2=0.00118 f=-0.52 shape=(1, 9000, 1)
logits [[ 4.2987847 -2.8123167  2.7270179 -6.294992 ]]
Iteration 800 of 1000: loss=0.0722 " + "l1=0.0708" + "l2=0.00139 f=-0.517 shape=(1, 9000, 1)
logits [[ 4.2787075 -2.7981722  2.7200832 -6.269965 ]]
Iteration 900 of 1000: loss=0.072 " + "l1=0.0704" + "l2=0.00156 f=-0.514 shape=(1, 9000, 1)
logits [[ 4.2587085 -2.7839987  2.7135146 -6.24456  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.741 " + "l1=0.741" + "l2=0 f=-0.542 shape=(1, 9000, 1)
logits [[ 4.472534  -2.9404552  2.8027315 -6.502551 ]]
Iteration 100 of 1000: loss=0.675 " + "l1=0.645" + "l2=0.0298 f=-0.485 shape=(1, 9000, 1)
logits [[ 3.9320512 -2.5159795  2.52743   -5.8820014]]
Iteration 200 of 1000: loss=0.637 " + "l1=0.592" + "l2=0.0453 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.590365  -2.3282619  2.4059014 -5.4659677]]
Iteration 300 of 1000: loss=0.605 " + "l1=0.546" + "l2=0.0589 f=-0.42 shape=(1, 9000, 1)
logits [[ 3.267606  -2.1942682  2.319915  -5.0748487]]
Iteration 400 of 1000: loss=0.579 " + "l1=0.509" + "l2=0.07 f=-0.394 shape=(1, 9000, 1)
logits [[ 3.0042195 -2.0818524  2.2416968 -4.739685 ]]
Iteration 500 of 1000: loss=0.557 " + "l1=0.479" + "l2=0.0779 f=-0.367 shape=(1, 9000, 1)
logits [[ 2.8085804 -1.98604    2.1775353 -4.469787 ]]
Iteration 600 of 1000: loss=0.54 " + "l1=0.457" + "l2=0.0837 f=-0.342 shape=(1, 9000, 1)
logits [[ 2.6725554 -1.8943338  2.1180422 -4.26539  ]]
Iteration 700 of 1000: loss=0.524 " + "l1=0.434" + "l2=0.0899 f=-0.309 shape=(1, 9000, 1)
logits [[ 2.5420706 -1.8010952  2.0643685 -4.0431123]]
Iteration 800 of 1000: loss=0.51 " + "l1=0.414" + "l2=0.0956 f=-0.281 shape=(1, 9000, 1)
logits [[ 2.421798  -1.7214     2.0193214 -3.8451455]]
Iteration 900 of 1000: loss=0.497 " + "l1=0.396" + "l2=0.101 f=-0.254 shape=(1, 9000, 1)
logits [[ 2.3119757 -1.6440763  1.9731227 -3.6580963]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.41 " + "l1=7.41" + "l2=0 f=-0.542 shape=(1, 9000, 1)
logits [[ 4.472534  -2.9404552  2.8027315 -6.502551 ]]
Iteration 100 of 1000: loss=2.94 " + "l1=1.44" + "l2=1.49 f=-0.215 shape=(1, 9000, 1)
logits [[ 1.0257859 -0.3953467  1.0460306 -2.5364797]]
Iteration 200 of 1000: loss=1.95 " + "l1=0.525" + "l2=1.42 f=-0.186 shape=(1, 9000, 1)
logits [[ 0.6359405   0.13085966  0.65634793 -2.167035  ]]
Iteration 300 of 1000: loss=1.34 " + "l1=0.0174" + "l2=1.32 f=-0.151 shape=(1, 9000, 1)
logits [[ 0.43112448  0.42840868  0.44583625 -1.9098676 ]]
Iteration 400 of 1000: loss=1.09 " + "l1=0" + "l2=1.09 f=-0.146 shape=(1, 9000, 1)
logits [[ 0.35431814  0.43666852  0.4323432  -1.8069168 ]]
Iteration 500 of 1000: loss=0.959 " + "l1=0.00325" + "l2=0.956 f=-0.134 shape=(1, 9000, 1)
logits [[ 0.3937416  0.407111   0.4103605 -1.7474464]]
Iteration 600 of 1000: loss=0.879 " + "l1=0" + "l2=0.879 f=-0.12 shape=(1, 9000, 1)
logits [[ 0.35302803  0.3986529   0.3978039  -1.6290973 ]]
Iteration 700 of 1000: loss=0.803 " + "l1=0" + "l2=0.803 f=-0.0981 shape=(1, 9000, 1)
logits [[ 0.3688882   0.39043337  0.3900012  -1.5417471 ]]
Iteration 800 of 1000: loss=0.741 " + "l1=0" + "l2=0.741 f=-0.0767 shape=(1, 9000, 1)
logits [[ 0.34592596  0.37894088  0.36420423 -1.3959635 ]]
Iteration 900 of 1000: loss=0.69 " + "l1=0" + "l2=0.69 f=-0.0702 shape=(1, 9000, 1)
logits [[ 0.29366237  0.36094248  0.35290766 -1.2883129 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.08 " + "l1=4.08" + "l2=0 f=-0.542 shape=(1, 9000, 1)
logits [[ 4.472534  -2.9404552  2.8027315 -6.502551 ]]
Iteration 100 of 1000: loss=2.27 " + "l1=1.44" + "l2=0.83 f=-0.289 shape=(1, 9000, 1)
logits [[ 1.56466   -1.0453535  1.5609741 -3.2372072]]
Iteration 200 of 1000: loss=1.66 " + "l1=0.887" + "l2=0.773 f=-0.213 shape=(1, 9000, 1)
logits [[ 1.1286274  -0.48410332  1.1288463  -2.6268604 ]]
Iteration 300 of 1000: loss=1.35 " + "l1=0.598" + "l2=0.748 f=-0.179 shape=(1, 9000, 1)
logits [[ 0.8883563  -0.19574322  0.89120543 -2.3003688 ]]
Iteration 400 of 1000: loss=1.13 " + "l1=0.379" + "l2=0.754 f=-0.142 shape=(1, 9000, 1)
logits [[ 6.7707711e-01 -1.3409499e-03  6.8709219e-01 -1.9293334e+00]]
Iteration 500 of 1000: loss=0.952 " + "l1=0.195" + "l2=0.757 f=-0.109 shape=(1, 9000, 1)
logits [[ 0.4716474   0.1640619   0.51780576 -1.5880837 ]]
Iteration 600 of 1000: loss=0.814 " + "l1=0.0972" + "l2=0.717 f=-0.101 shape=(1, 9000, 1)
logits [[ 0.3871357   0.21348034  0.39024422 -1.3947065 ]]
Iteration 700 of 1000: loss=0.704 " + "l1=0.008" + "l2=0.696 f=-0.0902 shape=(1, 9000, 1)
logits [[ 0.24311683  0.2866363   0.30119056 -1.1917207 ]]
Iteration 800 of 1000: loss=0.642 " + "l1=0.00743" + "l2=0.634 f=-0.071 shape=(1, 9000, 1)
logits [[ 0.26223442  0.2755577   0.28906092 -1.1107635 ]]
Iteration 900 of 1000: loss=0.593 " + "l1=0.0106" + "l2=0.582 f=-0.0613 shape=(1, 9000, 1)
logits [[ 0.27028158  0.26252902  0.28179187 -1.0599198 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.41 " + "l1=2.41" + "l2=0 f=-0.542 shape=(1, 9000, 1)
logits [[ 4.472534  -2.9404552  2.8027315 -6.502551 ]]
Iteration 100 of 1000: loss=1.72 " + "l1=1.37" + "l2=0.353 f=-0.354 shape=(1, 9000, 1)
logits [[ 2.5597177 -1.6556555  1.9608215 -4.2805862]]
Iteration 200 of 1000: loss=1.37 " + "l1=0.911" + "l2=0.462 f=-0.262 shape=(1, 9000, 1)
logits [[ 1.642915  -1.159196   1.6387728 -3.1714623]]
Iteration 300 of 1000: loss=1.16 " + "l1=0.712" + "l2=0.443 f=-0.22 shape=(1, 9000, 1)
logits [[ 1.3542558  -0.82567453  1.3654013  -2.7758927 ]]
Iteration 400 of 1000: loss=0.996 " + "l1=0.552" + "l2=0.444 f=-0.182 shape=(1, 9000, 1)
logits [[ 1.1366063 -0.562156   1.1362363 -2.4367864]]
Iteration 500 of 1000: loss=0.88 " + "l1=0.438" + "l2=0.442 f=-0.15 shape=(1, 9000, 1)
logits [[ 0.95669216 -0.3830541   0.96509707 -2.1376848 ]]
Iteration 600 of 1000: loss=0.797 " + "l1=0.378" + "l2=0.42 f=-0.137 shape=(1, 9000, 1)
logits [[ 0.86626804 -0.29545695  0.8652389  -1.9854895 ]]
Iteration 700 of 1000: loss=0.723 " + "l1=0.314" + "l2=0.409 f=-0.13 shape=(1, 9000, 1)
logits [[ 0.75406975 -0.20678312  0.7596191  -1.8263183 ]]
Iteration 800 of 1000: loss=0.666 " + "l1=0.25" + "l2=0.416 f=-0.123 shape=(1, 9000, 1)
logits [[ 0.6426125  -0.12497916  0.6453538  -1.6548786 ]]
Iteration 900 of 1000: loss=0.622 " + "l1=0.203" + "l2=0.419 f=-0.118 shape=(1, 9000, 1)
logits [[ 0.53623897 -0.0776257   0.54778314 -1.4775617 ]]
--- 297.00892639160156 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0167 " + "l1=0.0167" + "l2=0 f=-0.542 shape=(1, 9000, 1)
logits [[ 4.472534  -2.9404552  2.8027315 -6.502551 ]]
Iteration 100 of 1000: loss=0.0163 " + "l1=0.0161" + "l2=0.000219 f=-0.542 shape=(1, 9000, 1)
logits [[ 4.4295588 -2.9505465  2.8164992 -6.4624014]]
Iteration 200 of 1000: loss=0.0163 " + "l1=0.016" + "l2=0.000223 f=-0.542 shape=(1, 9000, 1)
logits [[ 4.4215    -2.9507833  2.8180866 -6.454965 ]]
Iteration 300 of 1000: loss=0.0162 " + "l1=0.0159" + "l2=0.00027 f=-0.541 shape=(1, 9000, 1)
logits [[ 4.4109993 -2.95121    2.8203537 -6.445198 ]]
Iteration 400 of 1000: loss=0.0161 " + "l1=0.0158" + "l2=0.000337 f=-0.541 shape=(1, 9000, 1)
logits [[ 4.40009   -2.9513423  2.8225255 -6.4350176]]
Iteration 500 of 1000: loss=0.0161 " + "l1=0.0156" + "l2=0.000432 f=-0.541 shape=(1, 9000, 1)
logits [[ 4.3892584 -2.9511955  2.8246205 -6.424701 ]]
Iteration 600 of 1000: loss=0.016 " + "l1=0.0155" + "l2=0.000524 f=-0.54 shape=(1, 9000, 1)
logits [[ 4.378864  -2.9505632  2.8264923 -6.4146385]]
Iteration 700 of 1000: loss=0.016 " + "l1=0.0154" + "l2=0.000617 f=-0.539 shape=(1, 9000, 1)
logits [[ 4.3681684 -2.949538   2.8283165 -6.404192 ]]
Iteration 800 of 1000: loss=0.0161 " + "l1=0.0153" + "l2=0.000775 f=-0.539 shape=(1, 9000, 1)
logits [[ 4.3578525 -2.9480886  2.830151  -6.394033 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.167 " + "l1=0.167" + "l2=0 f=-0.542 shape=(1, 9000, 1)
logits [[ 4.472534  -2.9404552  2.8027315 -6.502551 ]]
Iteration 100 of 1000: loss=0.138 " + "l1=0.126" + "l2=0.0126 f=-0.536 shape=(1, 9000, 1)
logits [[ 4.1638308 -3.009448   2.9047143 -6.2018704]]
Iteration 200 of 1000: loss=0.125 " + "l1=0.107" + "l2=0.0183 f=-0.526 shape=(1, 9000, 1)
logits [[ 3.9989824 -3.004529   2.9315095 -6.0304704]]
Iteration 300 of 1000: loss=0.112 " + "l1=0.0888" + "l2=0.0233 f=-0.518 shape=(1, 9000, 1)
logits [[ 3.829273  -2.9906497  2.9415553 -5.85292  ]]
Iteration 400 of 1000: loss=0.1 " + "l1=0.0717" + "l2=0.0286 f=-0.51 shape=(1, 9000, 1)
logits [[ 3.6642177 -2.9794579  2.947303  -5.6709685]]
Iteration 500 of 1000: loss=0.0898 " + "l1=0.0565" + "l2=0.0333 f=-0.498 shape=(1, 9000, 1)
logits [[ 3.508736 -2.960238  2.943652 -5.485127]]
Iteration 600 of 1000: loss=0.0797 " + "l1=0.0415" + "l2=0.0382 f=-0.482 shape=(1, 9000, 1)
logits [[ 3.3550897 -2.9313858  2.9397333 -5.292754 ]]
Iteration 700 of 1000: loss=0.0697 " + "l1=0.0286" + "l2=0.0411 f=-0.466 shape=(1, 9000, 1)
logits [[ 3.2297847 -2.9040022  2.9438894 -5.132675 ]]
Iteration 800 of 1000: loss=0.0609 " + "l1=0.0178" + "l2=0.0431 f=-0.452 shape=(1, 9000, 1)
logits [[ 3.1352262 -2.890072   2.957359  -5.011298 ]]
Iteration 900 of 1000: loss=0.054 " + "l1=0.0108" + "l2=0.0432 f=-0.444 shape=(1, 9000, 1)
logits [[ 3.0751207 -2.881596   2.9666963 -4.9369636]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.67 " + "l1=1.67" + "l2=0 f=-0.542 shape=(1, 9000, 1)
logits [[ 4.472534  -2.9404552  2.8027315 -6.502551 ]]
Iteration 100 of 1000: loss=0.199 " + "l1=0" + "l2=0.199 f=-0.472 shape=(1, 9000, 1)
logits [[ 3.0689409 -3.0778031  3.07083   -4.9484577]]
Iteration 200 of 1000: loss=0.127 " + "l1=0" + "l2=0.127 f=-0.465 shape=(1, 9000, 1)
logits [[ 3.0204144 -3.0314212  3.032683  -4.8818398]]
Iteration 300 of 1000: loss=0.104 " + "l1=0" + "l2=0.104 f=-0.462 shape=(1, 9000, 1)
logits [[ 2.9719307 -2.9945688  3.0082748 -4.834268 ]]
Iteration 400 of 1000: loss=0.0847 " + "l1=0" + "l2=0.0847 f=-0.458 shape=(1, 9000, 1)
logits [[ 2.9775398 -2.9601746  2.9890351 -4.8393226]]
Iteration 500 of 1000: loss=0.0745 " + "l1=0" + "l2=0.0745 f=-0.455 shape=(1, 9000, 1)
logits [[ 2.9640622 -2.9382267  2.9805238 -4.825997 ]]
Iteration 600 of 1000: loss=0.0651 " + "l1=0" + "l2=0.0651 f=-0.452 shape=(1, 9000, 1)
logits [[ 2.9707923 -2.919538   2.9744816 -4.833137 ]]
Iteration 700 of 1000: loss=0.0603 " + "l1=0" + "l2=0.0603 f=-0.449 shape=(1, 9000, 1)
logits [[ 2.964493  -2.909448   2.9745114 -4.8254137]]
Iteration 800 of 1000: loss=0.0568 " + "l1=0" + "l2=0.0568 f=-0.446 shape=(1, 9000, 1)
logits [[ 2.9519854 -2.9042137  2.9781082 -4.8101163]]
Iteration 900 of 1000: loss=0.0518 " + "l1=0" + "l2=0.0518 f=-0.445 shape=(1, 9000, 1)
logits [[ 2.9623575 -2.8942516  2.975136  -4.823537 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.918 " + "l1=0.918" + "l2=0 f=-0.542 shape=(1, 9000, 1)
logits [[ 4.472534  -2.9404552  2.8027315 -6.502551 ]]
Iteration 100 of 1000: loss=0.198 " + "l1=0.00604" + "l2=0.192 f=-0.467 shape=(1, 9000, 1)
logits [[ 3.0724087 -3.0516853  3.0614307 -4.9498878]]
Iteration 200 of 1000: loss=0.121 " + "l1=0.00513" + "l2=0.116 f=-0.462 shape=(1, 9000, 1)
logits [[ 3.0431747 -3.0194156  3.033849  -4.9045744]]
Iteration 300 of 1000: loss=0.0926 " + "l1=0" + "l2=0.0926 f=-0.458 shape=(1, 9000, 1)
logits [[ 3.001718  -2.987413   3.0102596 -4.857021 ]]
Iteration 400 of 1000: loss=0.0771 " + "l1=0" + "l2=0.0771 f=-0.453 shape=(1, 9000, 1)
logits [[ 2.9925597 -2.9600189  2.9960256 -4.841873 ]]
Iteration 500 of 1000: loss=0.0695 " + "l1=0.00333" + "l2=0.0662 f=-0.449 shape=(1, 9000, 1)
logits [[ 2.9929345 -2.937699   2.9868853 -4.839972 ]]
Iteration 600 of 1000: loss=0.0622 " + "l1=0" + "l2=0.0622 f=-0.445 shape=(1, 9000, 1)
logits [[ 2.9659388 -2.9272346  2.9880135 -4.8066907]]
Iteration 700 of 1000: loss=0.0553 " + "l1=0" + "l2=0.0553 f=-0.443 shape=(1, 9000, 1)
logits [[ 2.9704375 -2.9127176  2.983562  -4.812747 ]]
Iteration 800 of 1000: loss=0.0514 " + "l1=0" + "l2=0.0514 f=-0.441 shape=(1, 9000, 1)
logits [[ 2.9682522 -2.9027085  2.9836555 -4.8122907]]
Iteration 900 of 1000: loss=0.0464 " + "l1=0" + "l2=0.0464 f=-0.44 shape=(1, 9000, 1)
logits [[ 2.9764776 -2.8941123  2.9824495 -4.8252654]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.543 " + "l1=0.543" + "l2=0 f=-0.542 shape=(1, 9000, 1)
logits [[ 4.472534  -2.9404552  2.8027315 -6.502551 ]]
Iteration 100 of 1000: loss=0.249 " + "l1=0.121" + "l2=0.128 f=-0.497 shape=(1, 9000, 1)
logits [[ 3.4049094 -3.0642924  3.0312555 -5.3614407]]
Iteration 200 of 1000: loss=0.126 " + "l1=0" + "l2=0.126 f=-0.462 shape=(1, 9000, 1)
logits [[ 3.036645  -3.0210278  3.037606  -4.903105 ]]
Iteration 300 of 1000: loss=0.0932 " + "l1=0.00453" + "l2=0.0887 f=-0.457 shape=(1, 9000, 1)
logits [[ 3.025872  -2.9869504  3.0119376 -4.8788567]]
Iteration 400 of 1000: loss=0.0759 " + "l1=0" + "l2=0.0759 f=-0.45 shape=(1, 9000, 1)
logits [[ 2.9923    -2.9627569  3.0023575 -4.831606 ]]
Iteration 500 of 1000: loss=0.0644 " + "l1=0" + "l2=0.0644 f=-0.444 shape=(1, 9000, 1)
logits [[ 2.9901278 -2.9395134  2.9936926 -4.8192353]]
Iteration 600 of 1000: loss=0.0573 " + "l1=0" + "l2=0.0573 f=-0.441 shape=(1, 9000, 1)
logits [[ 2.9821882 -2.9232392  2.9888248 -4.811103 ]]
Iteration 700 of 1000: loss=0.053 " + "l1=0.00228" + "l2=0.0508 f=-0.439 shape=(1, 9000, 1)
logits [[ 2.9909503 -2.9074132  2.9839358 -4.823768 ]]
Iteration 800 of 1000: loss=0.0477 " + "l1=0" + "l2=0.0477 f=-0.438 shape=(1, 9000, 1)
logits [[ 2.9821167 -2.901285   2.9859023 -4.8169656]]
Iteration 900 of 1000: loss=0.0447 " + "l1=0" + "l2=0.0447 f=-0.437 shape=(1, 9000, 1)
logits [[ 2.9812748 -2.8941593  2.9867573 -4.8208604]]
--- 284.1652400493622 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.11 " + "l1=0.11" + "l2=0 f=-0.542 shape=(1, 9000, 1)
logits [[ 4.472534  -2.9404552  2.8027315 -6.502551 ]]
Iteration 100 of 1000: loss=0.108 " + "l1=0.108" + "l2=0.000619 f=-0.533 shape=(1, 9000, 1)
logits [[ 4.3852315 -2.9127162  2.7828844 -6.38608  ]]
Iteration 200 of 1000: loss=0.108 " + "l1=0.107" + "l2=0.000759 f=-0.529 shape=(1, 9000, 1)
logits [[ 4.356194  -2.9006553  2.7754006 -6.3476143]]
Iteration 300 of 1000: loss=0.107 " + "l1=0.106" + "l2=0.00101 f=-0.525 shape=(1, 9000, 1)
logits [[ 4.32245   -2.88673    2.7668676 -6.3032875]]
Iteration 400 of 1000: loss=0.107 " + "l1=0.105" + "l2=0.0013 f=-0.521 shape=(1, 9000, 1)
logits [[ 4.288477  -2.871934   2.7581446 -6.257788 ]]
Iteration 500 of 1000: loss=0.106 " + "l1=0.105" + "l2=0.00161 f=-0.516 shape=(1, 9000, 1)
logits [[ 4.254715  -2.8575375  2.7500987 -6.2116175]]
Iteration 600 of 1000: loss=0.106 " + "l1=0.104" + "l2=0.00195 f=-0.511 shape=(1, 9000, 1)
logits [[ 4.2197905 -2.8427594  2.7424176 -6.1634693]]
Iteration 700 of 1000: loss=0.105 " + "l1=0.103" + "l2=0.00233 f=-0.505 shape=(1, 9000, 1)
logits [[ 4.184535  -2.8269532  2.7347581 -6.1140504]]
Iteration 800 of 1000: loss=0.105 " + "l1=0.102" + "l2=0.0027 f=-0.5 shape=(1, 9000, 1)
logits [[ 4.1489944 -2.811203   2.7273188 -6.0640373]]
Iteration 900 of 1000: loss=0.104 " + "l1=0.101" + "l2=0.00307 f=-0.494 shape=(1, 9000, 1)
logits [[ 4.1154385 -2.796341   2.7199144 -6.0162606]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.1 " + "l1=1.1" + "l2=0 f=-0.542 shape=(1, 9000, 1)
logits [[ 4.472534  -2.9404552  2.8027315 -6.502551 ]]
Iteration 100 of 1000: loss=0.947 " + "l1=0.883" + "l2=0.0649 f=-0.457 shape=(1, 9000, 1)
logits [[ 3.534931  -2.6169174  2.5458534 -5.290475 ]]
Iteration 200 of 1000: loss=0.835 " + "l1=0.724" + "l2=0.111 f=-0.391 shape=(1, 9000, 1)
logits [[ 2.8654928 -2.4480243  2.394636  -4.377514 ]]
Iteration 300 of 1000: loss=0.753 " + "l1=0.608" + "l2=0.145 f=-0.312 shape=(1, 9000, 1)
logits [[ 2.4010243 -2.2474003  2.273785  -3.6761854]]
Iteration 400 of 1000: loss=0.691 " + "l1=0.536" + "l2=0.155 f=-0.246 shape=(1, 9000, 1)
logits [[ 2.14965   -2.0764983  2.1521928 -3.207785 ]]
Iteration 500 of 1000: loss=0.651 " + "l1=0.495" + "l2=0.156 f=-0.194 shape=(1, 9000, 1)
logits [[ 2.0438917 -1.9544792  2.0423176 -2.9087899]]
Iteration 600 of 1000: loss=0.619 " + "l1=0.458" + "l2=0.16 f=-0.151 shape=(1, 9000, 1)
logits [[ 1.9436991 -1.856835   1.9456632 -2.6378224]]
Iteration 700 of 1000: loss=0.585 " + "l1=0.416" + "l2=0.169 f=-0.107 shape=(1, 9000, 1)
logits [[ 1.8244804 -1.7419636  1.8247312 -2.3365307]]
Iteration 800 of 1000: loss=0.554 " + "l1=0.376" + "l2=0.178 f=-0.0684 shape=(1, 9000, 1)
logits [[ 1.7060205 -1.6342307  1.7057106 -2.0511072]]
Iteration 900 of 1000: loss=0.526 " + "l1=0.342" + "l2=0.184 f=-0.0407 shape=(1, 9000, 1)
logits [[ 1.6000862 -1.5497339  1.6026584 -1.8157367]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11 " + "l1=11" + "l2=0 f=-0.542 shape=(1, 9000, 1)
logits [[ 4.472534  -2.9404552  2.8027315 -6.502551 ]]
Iteration 100 of 1000: loss=3.22 " + "l1=0.448" + "l2=2.77 f=0.0519 shape=(1, 9000, 1)
logits [[ 0.17559256 -0.7560989   0.6178306   0.17029431]]
Iteration 200 of 1000: loss=1.83 " + "l1=0.0137" + "l2=1.82 f=0.055 shape=(1, 9000, 1)
logits [[ 0.0895488  -0.7660502   0.4551349   0.44145212]]
Iteration 300 of 1000: loss=1.43 " + "l1=0" + "l2=1.43 f=0.0721 shape=(1, 9000, 1)
logits [[ 0.16118947 -0.6855477   0.406       0.40675488]]
Iteration 400 of 1000: loss=1.21 " + "l1=0" + "l2=1.21 f=0.073 shape=(1, 9000, 1)
logits [[ 0.18389735 -0.6668485   0.3858447   0.3893062 ]]
Iteration 500 of 1000: loss=1.09 " + "l1=0" + "l2=1.09 f=0.0779 shape=(1, 9000, 1)
logits [[ 0.20695126 -0.6576396   0.3727561   0.38946253]]
Iteration 600 of 1000: loss=0.988 " + "l1=0" + "l2=0.988 f=0.079 shape=(1, 9000, 1)
logits [[ 0.23191339 -0.6754073   0.3767144   0.38285947]]
Iteration 700 of 1000: loss=0.927 " + "l1=0" + "l2=0.927 f=0.0782 shape=(1, 9000, 1)
logits [[ 0.2251801  -0.6725078   0.35819635  0.40199283]]
Iteration 800 of 1000: loss=0.865 " + "l1=0" + "l2=0.865 f=0.0788 shape=(1, 9000, 1)
logits [[ 0.25275475 -0.6676551   0.35077813  0.3793108 ]]
Iteration 900 of 1000: loss=0.807 " + "l1=0" + "l2=0.807 f=0.0771 shape=(1, 9000, 1)
logits [[ 0.28191024 -0.6538979   0.33827144  0.34210464]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.04 " + "l1=6.04" + "l2=0 f=-0.542 shape=(1, 9000, 1)
logits [[ 4.472534  -2.9404552  2.8027315 -6.502551 ]]
Iteration 100 of 1000: loss=2.84 " + "l1=1.73" + "l2=1.12 f=-0.098 shape=(1, 9000, 1)
logits [[ 1.3606714 -1.3471469  1.3662444 -1.7716185]]
Iteration 200 of 1000: loss=1.85 " + "l1=0.492" + "l2=1.36 f=0.0393 shape=(1, 9000, 1)
logits [[ 0.4896054  -0.9157282   0.7385576  -0.15513471]]
Iteration 300 of 1000: loss=1.24 " + "l1=0" + "l2=1.24 f=0.0534 shape=(1, 9000, 1)
logits [[ 0.1546382  -0.8711794   0.46314707  0.4669918 ]]
Iteration 400 of 1000: loss=1.03 " + "l1=0.000968" + "l2=1.02 f=0.0553 shape=(1, 9000, 1)
logits [[ 0.19534716 -0.8759372   0.4518253   0.45006514]]
Iteration 500 of 1000: loss=0.888 " + "l1=0.00158" + "l2=0.887 f=0.0571 shape=(1, 9000, 1)
logits [[ 0.21320365 -0.8650381   0.44155115  0.43867964]]
Iteration 600 of 1000: loss=0.793 " + "l1=0" + "l2=0.793 f=0.0588 shape=(1, 9000, 1)
logits [[ 0.21375592 -0.8549959   0.42505226  0.45119986]]
Iteration 700 of 1000: loss=0.714 " + "l1=0.00334" + "l2=0.71 f=0.0599 shape=(1, 9000, 1)
logits [[ 0.2409142  -0.8443275   0.42461044  0.41852885]]
Iteration 800 of 1000: loss=0.658 " + "l1=0" + "l2=0.658 f=0.0637 shape=(1, 9000, 1)
logits [[ 0.25705412 -0.81697994  0.39340913  0.4214454 ]]
Iteration 900 of 1000: loss=0.589 " + "l1=0.000939" + "l2=0.588 f=0.0681 shape=(1, 9000, 1)
logits [[ 0.31370583 -0.7826964   0.37158665  0.36987936]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.57 " + "l1=3.57" + "l2=0 f=-0.542 shape=(1, 9000, 1)
logits [[ 4.472534  -2.9404552  2.8027315 -6.502551 ]]
Iteration 100 of 1000: loss=2.13 " + "l1=1.6" + "l2=0.523 f=-0.269 shape=(1, 9000, 1)
logits [[ 1.9620863 -2.0332227  1.9655964 -2.969926 ]]
Iteration 200 of 1000: loss=1.63 " + "l1=1.04" + "l2=0.59 f=-0.0884 shape=(1, 9000, 1)
logits [[ 1.4344187 -1.4851975  1.447796  -1.750558 ]]
Iteration 300 of 1000: loss=1.3 " + "l1=0.65" + "l2=0.652 f=0.0111 shape=(1, 9000, 1)
logits [[ 1.0256788  -1.158915    1.0886278  -0.91117364]]
Iteration 400 of 1000: loss=1.03 " + "l1=0.297" + "l2=0.735 f=0.0581 shape=(1, 9000, 1)
logits [[ 0.5978913  -1.0431347   0.7953237  -0.11774135]]
Iteration 500 of 1000: loss=0.845 " + "l1=0.113" + "l2=0.731 f=0.0765 shape=(1, 9000, 1)
logits [[ 0.42718536 -0.989919    0.6088803   0.2598821 ]]
Iteration 600 of 1000: loss=0.718 " + "l1=0.0152" + "l2=0.703 f=0.0821 shape=(1, 9000, 1)
logits [[ 0.31822327 -0.9144669   0.4856141   0.43887445]]
Iteration 700 of 1000: loss=0.63 " + "l1=0.000106" + "l2=0.63 f=0.084 shape=(1, 9000, 1)
logits [[ 0.29723012 -0.85635096  0.44771954  0.4473924 ]]
Iteration 800 of 1000: loss=0.561 " + "l1=0.00297" + "l2=0.558 f=0.0856 shape=(1, 9000, 1)
logits [[ 0.29824856 -0.8182646   0.43579534  0.42666256]]
Iteration 900 of 1000: loss=0.508 " + "l1=0" + "l2=0.508 f=0.088 shape=(1, 9000, 1)
logits [[ 0.2833757  -0.8026031   0.4346663   0.43651968]]
--- 298.55698442459106 seconds ---
Adv result:3
Loading record A04299
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0808 " + "l1=0.0808" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 5.1821384 -2.9020529  3.5538943 -7.981495 ]]
Iteration 100 of 1000: loss=0.0803 " + "l1=0.08" + "l2=0.000337 f=-0.534 shape=(1, 9000, 1)
logits [[ 5.136645  -2.858591   3.5184445 -7.9327736]]
Iteration 200 of 1000: loss=0.0801 " + "l1=0.0798" + "l2=0.000348 f=-0.533 shape=(1, 9000, 1)
logits [[ 5.128454  -2.8504472  3.5112686 -7.923121 ]]
Iteration 300 of 1000: loss=0.08 " + "l1=0.0796" + "l2=0.000448 f=-0.533 shape=(1, 9000, 1)
logits [[ 5.1175256 -2.839388   3.501764  -7.910778 ]]
Iteration 400 of 1000: loss=0.0799 " + "l1=0.0793" + "l2=0.000537 f=-0.532 shape=(1, 9000, 1)
logits [[ 5.1062427 -2.8282242  3.4921522 -7.8981147]]
Iteration 500 of 1000: loss=0.0798 " + "l1=0.0791" + "l2=0.000659 f=-0.531 shape=(1, 9000, 1)
logits [[ 5.095325  -2.8173552  3.4828188 -7.8858852]]
Iteration 600 of 1000: loss=0.0797 " + "l1=0.0789" + "l2=0.000783 f=-0.531 shape=(1, 9000, 1)
logits [[ 5.08506   -2.8072076  3.4741616 -7.874307 ]]
Iteration 700 of 1000: loss=0.0796 " + "l1=0.0787" + "l2=0.000867 f=-0.53 shape=(1, 9000, 1)
logits [[ 5.075141  -2.7979336  3.4662378 -7.8630176]]
Iteration 800 of 1000: loss=0.0796 " + "l1=0.0785" + "l2=0.00107 f=-0.529 shape=(1, 9000, 1)
logits [[ 5.0655003 -2.7893884  3.4590409 -7.85247  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.808 " + "l1=0.808" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 5.1821384 -2.9020529  3.5538943 -7.981495 ]]
Iteration 100 of 1000: loss=0.748 " + "l1=0.712" + "l2=0.036 f=-0.519 shape=(1, 9000, 1)
logits [[ 4.707187  -2.4161327  3.180982  -7.5481243]]
Iteration 200 of 1000: loss=0.712 " + "l1=0.661" + "l2=0.051 f=-0.515 shape=(1, 9000, 1)
logits [[ 4.446365  -2.1590972  2.976145  -7.3242984]]
Iteration 300 of 1000: loss=0.69 " + "l1=0.626" + "l2=0.0642 f=-0.512 shape=(1, 9000, 1)
logits [[ 4.2634506 -1.9944001  2.8304346 -7.1470766]]
Iteration 400 of 1000: loss=0.674 " + "l1=0.601" + "l2=0.073 f=-0.51 shape=(1, 9000, 1)
logits [[ 4.1174817 -1.8884574  2.7275136 -6.997194 ]]
Iteration 500 of 1000: loss=0.659 " + "l1=0.577" + "l2=0.0815 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.9727998 -1.7982998  2.6419697 -6.8428764]]
Iteration 600 of 1000: loss=0.644 " + "l1=0.556" + "l2=0.0879 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.8397658 -1.7206779  2.5743518 -6.6974344]]
Iteration 700 of 1000: loss=0.629 " + "l1=0.533" + "l2=0.0959 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.6843503 -1.6473994  2.5103004 -6.522071 ]]
Iteration 800 of 1000: loss=0.614 " + "l1=0.514" + "l2=0.0996 f=-0.482 shape=(1, 9000, 1)
logits [[ 3.5447164 -1.5974141  2.4647453 -6.3407373]]
Iteration 900 of 1000: loss=0.599 " + "l1=0.497" + "l2=0.102 f=-0.473 shape=(1, 9000, 1)
logits [[ 3.417459  -1.5511245  2.4158478 -6.174481 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.08 " + "l1=8.08" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 5.1821384 -2.9020529  3.5538943 -7.981495 ]]
Iteration 100 of 1000: loss=2.6 " + "l1=0.571" + "l2=2.03 f=-0.514 shape=(1, 9000, 1)
logits [[ 0.98845315  0.41899937  0.9897785  -4.4539523 ]]
Iteration 200 of 1000: loss=1.57 " + "l1=0" + "l2=1.57 f=-0.533 shape=(1, 9000, 1)
logits [[ 0.66321844  0.7197648   0.70535403 -4.221755  ]]
Iteration 300 of 1000: loss=1.32 " + "l1=0" + "l2=1.32 f=-0.529 shape=(1, 9000, 1)
logits [[ 0.66770357  0.67392546  0.6724726  -4.1304574 ]]
Iteration 400 of 1000: loss=1.22 " + "l1=0" + "l2=1.22 f=-0.526 shape=(1, 9000, 1)
logits [[ 0.62751037  0.65953285  0.6530572  -4.044376  ]]
Iteration 500 of 1000: loss=1.16 " + "l1=0" + "l2=1.16 f=-0.528 shape=(1, 9000, 1)
logits [[ 0.5969849   0.65622723  0.6192287  -3.9855123 ]]
Iteration 600 of 1000: loss=1.09 " + "l1=0" + "l2=1.09 f=-0.524 shape=(1, 9000, 1)
logits [[ 0.58127993  0.6244529   0.61028963 -3.9130092 ]]
Iteration 700 of 1000: loss=1.04 " + "l1=0.0205" + "l2=1.02 f=-0.522 shape=(1, 9000, 1)
logits [[ 0.57372963  0.5888787   0.60942227 -3.8591406 ]]
Iteration 800 of 1000: loss=0.993 " + "l1=0.0176" + "l2=0.976 f=-0.519 shape=(1, 9000, 1)
logits [[ 0.5763396   0.57380027  0.5913503  -3.8176782 ]]
Iteration 900 of 1000: loss=0.938 " + "l1=0" + "l2=0.938 f=-0.515 shape=(1, 9000, 1)
logits [[ 0.55446    0.5849096  0.5748011 -3.773678 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.45 " + "l1=4.45" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 5.1821384 -2.9020529  3.5538943 -7.981495 ]]
Iteration 100 of 1000: loss=2.47 " + "l1=1.31" + "l2=1.16 f=-0.471 shape=(1, 9000, 1)
logits [[ 1.961744   -0.42195964  1.5991721  -5.023858  ]]
Iteration 200 of 1000: loss=1.61 " + "l1=0.375" + "l2=1.23 f=-0.484 shape=(1, 9000, 1)
logits [[ 0.9919348   0.30994433  0.98248875 -4.2214074 ]]
Iteration 300 of 1000: loss=1.26 " + "l1=0.0974" + "l2=1.16 f=-0.489 shape=(1, 9000, 1)
logits [[ 0.7472225  0.5725004  0.7496492 -4.0236316]]
Iteration 400 of 1000: loss=1.11 " + "l1=0.013" + "l2=1.09 f=-0.489 shape=(1, 9000, 1)
logits [[ 0.64920896  0.6256397   0.64865327 -3.8789818 ]]
Iteration 500 of 1000: loss=1.02 " + "l1=0.0201" + "l2=0.999 f=-0.488 shape=(1, 9000, 1)
logits [[ 0.61664873  0.58473676  0.6213614  -3.7728248 ]]
Iteration 600 of 1000: loss=0.944 " + "l1=0.0119" + "l2=0.932 f=-0.488 shape=(1, 9000, 1)
logits [[ 0.59138066  0.56970996  0.58258986 -3.695937  ]]
Iteration 700 of 1000: loss=0.869 " + "l1=0.0123" + "l2=0.857 f=-0.484 shape=(1, 9000, 1)
logits [[ 0.5667773  0.544331   0.559122  -3.6073203]]
Iteration 800 of 1000: loss=0.793 " + "l1=0" + "l2=0.793 f=-0.482 shape=(1, 9000, 1)
logits [[ 0.52340215  0.529982    0.5223421  -3.5034754 ]]
Iteration 900 of 1000: loss=0.729 " + "l1=0" + "l2=0.729 f=-0.475 shape=(1, 9000, 1)
logits [[ 0.49214205  0.5132955   0.49117184 -3.3981469 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.63 " + "l1=2.63" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 5.1821384 -2.9020529  3.5538943 -7.981495 ]]
Iteration 100 of 1000: loss=1.95 " + "l1=1.57" + "l2=0.38 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.4342499 -1.4067168  2.3852074 -6.410652 ]]
Iteration 200 of 1000: loss=1.58 " + "l1=0.99" + "l2=0.594 f=-0.461 shape=(1, 9000, 1)
logits [[ 2.3386772 -0.7061654  1.7494464 -5.227811 ]]
Iteration 300 of 1000: loss=1.31 " + "l1=0.613" + "l2=0.694 f=-0.474 shape=(1, 9000, 1)
logits [[ 1.6048412  -0.28149158  1.3498116  -4.5710087 ]]
Iteration 400 of 1000: loss=1.15 " + "l1=0.406" + "l2=0.74 f=-0.452 shape=(1, 9000, 1)
logits [[ 1.1861277  -0.06374115  1.173695   -4.103063  ]]
Iteration 500 of 1000: loss=1.05 " + "l1=0.313" + "l2=0.732 f=-0.438 shape=(1, 9000, 1)
logits [[ 1.0323699   0.06825238  1.0295197  -3.8838012 ]]
Iteration 600 of 1000: loss=0.956 " + "l1=0.212" + "l2=0.744 f=-0.431 shape=(1, 9000, 1)
logits [[ 0.89523804  0.24345012  0.89262724 -3.7537985 ]]
Iteration 700 of 1000: loss=0.871 " + "l1=0.142" + "l2=0.729 f=-0.423 shape=(1, 9000, 1)
logits [[ 0.789636    0.35345376  0.79038435 -3.626766  ]]
Iteration 800 of 1000: loss=0.791 " + "l1=0.0933" + "l2=0.698 f=-0.419 shape=(1, 9000, 1)
logits [[ 0.70046836  0.4156021   0.70253634 -3.4942575 ]]
Iteration 900 of 1000: loss=0.717 " + "l1=0.0526" + "l2=0.665 f=-0.413 shape=(1, 9000, 1)
logits [[ 0.6373946  0.4754227  0.6373705 -3.4006815]]
--- 286.75420904159546 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0163 " + "l1=0.0163" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 5.1821384 -2.9020529  3.5538943 -7.981495 ]]
Iteration 100 of 1000: loss=0.016 " + "l1=0.0158" + "l2=0.000195 f=-0.536 shape=(1, 9000, 1)
logits [[ 5.156663  -2.9144185  3.572265  -7.958803 ]]
Iteration 200 of 1000: loss=0.016 " + "l1=0.0158" + "l2=0.000167 f=-0.536 shape=(1, 9000, 1)
logits [[ 5.154669  -2.9160755  3.5742612 -7.957826 ]]
Iteration 300 of 1000: loss=0.0159 " + "l1=0.0157" + "l2=0.000201 f=-0.536 shape=(1, 9000, 1)
logits [[ 5.150505  -2.9190784  3.5781584 -7.9549646]]
Iteration 400 of 1000: loss=0.0159 " + "l1=0.0156" + "l2=0.000283 f=-0.536 shape=(1, 9000, 1)
logits [[ 5.1457343 -2.9222312  3.5822752 -7.9515343]]
Iteration 500 of 1000: loss=0.0159 " + "l1=0.0155" + "l2=0.000341 f=-0.537 shape=(1, 9000, 1)
logits [[ 5.1408124 -2.9252636  3.5862968 -7.947904 ]]
Iteration 600 of 1000: loss=0.0159 " + "l1=0.0155" + "l2=0.000446 f=-0.537 shape=(1, 9000, 1)
logits [[ 5.135872 -2.928029  3.590047 -7.944228]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.163 " + "l1=0.163" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 5.1821384 -2.9020529  3.5538943 -7.981495 ]]
Iteration 100 of 1000: loss=0.143 " + "l1=0.134" + "l2=0.00872 f=-0.533 shape=(1, 9000, 1)
logits [[ 5.0124545 -2.9781008  3.668667  -7.834065 ]]
Iteration 200 of 1000: loss=0.135 " + "l1=0.122" + "l2=0.0122 f=-0.531 shape=(1, 9000, 1)
logits [[ 4.9396462 -3.0110545  3.7156637 -7.768706 ]]
Iteration 300 of 1000: loss=0.127 " + "l1=0.112" + "l2=0.0154 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.8608737 -3.0293396  3.7436743 -7.6949644]]
Iteration 400 of 1000: loss=0.12 " + "l1=0.102" + "l2=0.0185 f=-0.528 shape=(1, 9000, 1)
logits [[ 4.782614  -3.0430868  3.7639453 -7.6173973]]
Iteration 500 of 1000: loss=0.113 " + "l1=0.0913" + "l2=0.022 f=-0.526 shape=(1, 9000, 1)
logits [[ 4.6956105 -3.0585892  3.7829626 -7.5254507]]
Iteration 600 of 1000: loss=0.106 " + "l1=0.0811" + "l2=0.0254 f=-0.523 shape=(1, 9000, 1)
logits [[ 4.618103 -3.078125  3.807475 -7.440998]]
Iteration 700 of 1000: loss=0.0993 " + "l1=0.0702" + "l2=0.0291 f=-0.521 shape=(1, 9000, 1)
logits [[ 4.526386  -3.0879025  3.824407  -7.346622 ]]
Iteration 800 of 1000: loss=0.0918 " + "l1=0.0593" + "l2=0.0325 f=-0.518 shape=(1, 9000, 1)
logits [[ 4.431456  -3.0944397  3.838449  -7.2490454]]
Iteration 900 of 1000: loss=0.0824 " + "l1=0.0459" + "l2=0.0366 f=-0.513 shape=(1, 9000, 1)
logits [[ 4.3084598 -3.0907185  3.8498058 -7.119103 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.63 " + "l1=1.63" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 5.1821384 -2.9020529  3.5538943 -7.981495 ]]
Iteration 100 of 1000: loss=0.287 " + "l1=0.00735" + "l2=0.279 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.9780366 -3.1153133  3.9706864 -6.78356  ]]
Iteration 200 of 1000: loss=0.178 " + "l1=0" + "l2=0.178 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.9291348 -3.1108627  3.9319386 -6.72668  ]]
Iteration 300 of 1000: loss=0.129 " + "l1=0" + "l2=0.129 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.8788657 -3.080867   3.8847444 -6.6597505]]
Iteration 400 of 1000: loss=0.104 " + "l1=0.00315" + "l2=0.101 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.8658018 -3.0636663  3.862655  -6.6347723]]
Iteration 500 of 1000: loss=0.0866 " + "l1=0" + "l2=0.0866 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.8417563 -3.0562904  3.8495107 -6.6025248]]
Iteration 600 of 1000: loss=0.0755 " + "l1=0" + "l2=0.0755 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.833294  -3.0477529  3.8358777 -6.5854306]]
Iteration 700 of 1000: loss=0.0686 " + "l1=0" + "l2=0.0686 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.818674  -3.041524   3.8287833 -6.5629663]]
Iteration 800 of 1000: loss=0.0632 " + "l1=0" + "l2=0.0632 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.8074205 -3.0360613  3.8224008 -6.546056 ]]
Iteration 900 of 1000: loss=0.0569 " + "l1=0" + "l2=0.0569 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.8104694 -3.0311038  3.8131444 -6.541984 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.896 " + "l1=0.896" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 5.1821384 -2.9020529  3.5538943 -7.981495 ]]
Iteration 100 of 1000: loss=0.307 " + "l1=0.0185" + "l2=0.289 f=-0.493 shape=(1, 9000, 1)
logits [[ 4.028386  -3.1280322  3.9947584 -6.8654075]]
Iteration 200 of 1000: loss=0.172 " + "l1=0.002" + "l2=0.17 f=-0.498 shape=(1, 9000, 1)
logits [[ 3.9530451 -3.1216085  3.949406  -6.77372  ]]
Iteration 300 of 1000: loss=0.121 " + "l1=0" + "l2=0.121 f=-0.496 shape=(1, 9000, 1)
logits [[ 3.8973422 -3.0954957  3.905794  -6.691537 ]]
Iteration 400 of 1000: loss=0.0956 " + "l1=0" + "l2=0.0956 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.8768787 -3.0795143  3.885043  -6.6560645]]
Iteration 500 of 1000: loss=0.0815 " + "l1=0" + "l2=0.0815 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.8588555 -3.0689235  3.8710082 -6.6299443]]
Iteration 600 of 1000: loss=0.0699 " + "l1=0" + "l2=0.0699 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.8540154 -3.0583005  3.8540683 -6.615053 ]]
Iteration 700 of 1000: loss=0.0639 " + "l1=0" + "l2=0.0639 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.8338706 -3.0482805  3.845937  -6.585662 ]]
Iteration 800 of 1000: loss=0.0597 " + "l1=0.0028" + "l2=0.0569 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.8368442 -3.0409696  3.8317447 -6.581383 ]]
Iteration 900 of 1000: loss=0.0533 " + "l1=0" + "l2=0.0533 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.823682  -3.0382612  3.828664  -6.561133 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.529 " + "l1=0.529" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 5.1821384 -2.9020529  3.5538943 -7.981495 ]]
Iteration 100 of 1000: loss=0.329 " + "l1=0.228" + "l2=0.1 f=-0.519 shape=(1, 9000, 1)
logits [[ 4.5560555 -3.080199   3.8537571 -7.406151 ]]
Iteration 200 of 1000: loss=0.215 " + "l1=0.0638" + "l2=0.151 f=-0.506 shape=(1, 9000, 1)
logits [[ 4.1409497 -3.1229193  3.9446945 -6.986638 ]]
Iteration 300 of 1000: loss=0.13 " + "l1=6.28e-05" + "l2=0.13 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.9319155 -3.1124158  3.9317224 -6.747056 ]]
Iteration 400 of 1000: loss=0.096 " + "l1=0" + "l2=0.096 f=-0.496 shape=(1, 9000, 1)
logits [[ 3.8966177 -3.089484   3.8999014 -6.690992 ]]
Iteration 500 of 1000: loss=0.0789 " + "l1=0.000925" + "l2=0.078 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.8851552 -3.0740316  3.8823085 -6.670981 ]]
Iteration 600 of 1000: loss=0.0676 " + "l1=0" + "l2=0.0676 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.8701732 -3.0648665  3.8711421 -6.6466627]]
Iteration 700 of 1000: loss=0.0605 " + "l1=0" + "l2=0.0605 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.8557916 -3.0536387  3.860266  -6.621685 ]]
Iteration 800 of 1000: loss=0.0545 " + "l1=0.000559" + "l2=0.0539 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.8528972 -3.0475843  3.8511767 -6.61079  ]]
Iteration 900 of 1000: loss=0.051 " + "l1=0" + "l2=0.051 f=-0.486 shape=(1, 9000, 1)
logits [[ 3.8353045 -3.0428126  3.8475385 -6.585445 ]]
--- 275.73006319999695 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.132 " + "l1=0.132" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 5.1821384 -2.9020529  3.5538943 -7.981495 ]]
Iteration 100 of 1000: loss=0.131 " + "l1=0.13" + "l2=0.000479 f=-0.532 shape=(1, 9000, 1)
logits [[ 5.121517  -2.8765018  3.5301473 -7.901653 ]]
Iteration 200 of 1000: loss=0.13 " + "l1=0.13" + "l2=0.000524 f=-0.531 shape=(1, 9000, 1)
logits [[ 5.1079335 -2.870706   3.5238054 -7.883165 ]]
Iteration 300 of 1000: loss=0.13 " + "l1=0.13" + "l2=0.000668 f=-0.529 shape=(1, 9000, 1)
logits [[ 5.09125   -2.8634243  3.5161896 -7.860461 ]]
Iteration 400 of 1000: loss=0.13 " + "l1=0.129" + "l2=0.000844 f=-0.528 shape=(1, 9000, 1)
logits [[ 5.074276  -2.8559563  3.5084581 -7.837196 ]]
Iteration 500 of 1000: loss=0.13 " + "l1=0.129" + "l2=0.000951 f=-0.526 shape=(1, 9000, 1)
logits [[ 5.0575905 -2.848691   3.5008733 -7.8142953]]
Iteration 600 of 1000: loss=0.13 " + "l1=0.128" + "l2=0.00118 f=-0.525 shape=(1, 9000, 1)
logits [[ 5.04113   -2.8420534  3.4938455 -7.791982 ]]
Iteration 700 of 1000: loss=0.129 " + "l1=0.128" + "l2=0.0013 f=-0.523 shape=(1, 9000, 1)
logits [[ 5.0249443 -2.8359513  3.4874163 -7.7699666]]
Iteration 800 of 1000: loss=0.129 " + "l1=0.128" + "l2=0.00151 f=-0.522 shape=(1, 9000, 1)
logits [[ 5.008812  -2.83041    3.4813006 -7.7481995]]
Iteration 900 of 1000: loss=0.129 " + "l1=0.127" + "l2=0.0017 f=-0.521 shape=(1, 9000, 1)
logits [[ 4.993005  -2.8250015  3.4753773 -7.7266383]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.32 " + "l1=1.32" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 5.1821384 -2.9020529  3.5538943 -7.981495 ]]
Iteration 100 of 1000: loss=1.23 " + "l1=1.18" + "l2=0.041 f=-0.494 shape=(1, 9000, 1)
logits [[ 4.5963783 -2.6405966  3.3154073 -7.248066 ]]
Iteration 200 of 1000: loss=1.17 " + "l1=1.1" + "l2=0.0661 f=-0.476 shape=(1, 9000, 1)
logits [[ 4.2359467 -2.5043008  3.1643586 -6.800994 ]]
Iteration 300 of 1000: loss=1.11 " + "l1=1.01" + "l2=0.0954 f=-0.451 shape=(1, 9000, 1)
logits [[ 3.8205903 -2.322799   3.0170925 -6.319417 ]]
Iteration 400 of 1000: loss=1.05 " + "l1=0.932" + "l2=0.118 f=-0.427 shape=(1, 9000, 1)
logits [[ 3.4478555 -2.1828773  2.8960664 -5.8708982]]
Iteration 500 of 1000: loss=0.999 " + "l1=0.863" + "l2=0.136 f=-0.408 shape=(1, 9000, 1)
logits [[ 3.148194  -2.0812259  2.786414  -5.4866834]]
Iteration 600 of 1000: loss=0.955 " + "l1=0.807" + "l2=0.149 f=-0.391 shape=(1, 9000, 1)
logits [[ 2.898074  -2.0067093  2.7142627 -5.168315 ]]
Iteration 700 of 1000: loss=0.909 " + "l1=0.745" + "l2=0.164 f=-0.379 shape=(1, 9000, 1)
logits [[ 2.6241238 -1.9375147  2.623179  -4.8250566]]
Iteration 800 of 1000: loss=0.866 " + "l1=0.712" + "l2=0.153 f=-0.371 shape=(1, 9000, 1)
logits [[ 2.5069802 -1.8771621  2.505483  -4.617989 ]]
Iteration 900 of 1000: loss=0.83 " + "l1=0.681" + "l2=0.149 f=-0.36 shape=(1, 9000, 1)
logits [[ 2.3927634 -1.8040427  2.3926363 -4.4216976]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=13.2 " + "l1=13.2" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 5.1821384 -2.9020529  3.5538943 -7.981495 ]]
Iteration 100 of 1000: loss=6.12 " + "l1=3.83" + "l2=2.29 f=-0.243 shape=(1, 9000, 1)
logits [[ 1.0575863 -0.784564   1.2920332 -2.5365455]]
Iteration 200 of 1000: loss=3.22 " + "l1=0.0556" + "l2=3.17 f=-0.141 shape=(1, 9000, 1)
logits [[-5.4122156e-01 -7.7207409e-02  5.5708475e-02  1.0595843e-04]]
Iteration 300 of 1000: loss=2.49 " + "l1=0" + "l2=2.49 f=-0.115 shape=(1, 9000, 1)
logits [[-0.39560732 -0.14909221  0.03910594  0.04699249]]
Iteration 400 of 1000: loss=2.21 " + "l1=0.0145" + "l2=2.2 f=-0.111 shape=(1, 9000, 1)
logits [[-0.3518942  -0.19864444  0.05982985  0.04532577]]
Iteration 500 of 1000: loss=1.97 " + "l1=0" + "l2=1.97 f=-0.113 shape=(1, 9000, 1)
logits [[-0.3323832  -0.22663735  0.04786471  0.05983885]]
Iteration 600 of 1000: loss=1.8 " + "l1=0" + "l2=1.8 f=-0.114 shape=(1, 9000, 1)
logits [[-0.3202687  -0.2229807   0.0399377   0.04627328]]
Iteration 700 of 1000: loss=1.67 " + "l1=0" + "l2=1.67 f=-0.117 shape=(1, 9000, 1)
logits [[-0.2990407  -0.21956842  0.01986447  0.03204615]]
Iteration 800 of 1000: loss=1.56 " + "l1=0" + "l2=1.56 f=-0.12 shape=(1, 9000, 1)
logits [[-0.28804225 -0.2282618   0.01200108  0.02414455]]
Iteration 900 of 1000: loss=1.48 " + "l1=0.0206" + "l2=1.46 f=-0.121 shape=(1, 9000, 1)
logits [[-0.26952657 -0.24183504  0.0231241   0.00254675]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.24 " + "l1=7.24" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 5.1821384 -2.9020529  3.5538943 -7.981495 ]]
Iteration 100 of 1000: loss=4.34 " + "l1=3.2" + "l2=1.14 f=-0.3 shape=(1, 9000, 1)
logits [[ 1.95194   -1.2594438  1.9622849 -3.8553834]]
Iteration 200 of 1000: loss=3.31 " + "l1=1.9" + "l2=1.4 f=-0.235 shape=(1, 9000, 1)
logits [[ 0.96968156 -0.75842047  1.1543113  -2.3053606 ]]
Iteration 300 of 1000: loss=2.48 " + "l1=0.752" + "l2=1.72 f=-0.197 shape=(1, 9000, 1)
logits [[ 0.00781287 -0.3578626   0.46543777 -0.90246254]]
Iteration 400 of 1000: loss=2 " + "l1=0.176" + "l2=1.82 f=-0.129 shape=(1, 9000, 1)
logits [[-0.36737314 -0.23069976  0.20084514 -0.11995418]]
Iteration 500 of 1000: loss=1.66 " + "l1=0.0112" + "l2=1.65 f=-0.124 shape=(1, 9000, 1)
logits [[-0.47067893 -0.18504688  0.09079803  0.07039399]]
Iteration 600 of 1000: loss=1.44 " + "l1=0.0118" + "l2=1.43 f=-0.124 shape=(1, 9000, 1)
logits [[-0.445733   -0.2192655   0.09446375  0.07297   ]]
Iteration 700 of 1000: loss=1.31 " + "l1=0.0162" + "l2=1.29 f=-0.128 shape=(1, 9000, 1)
logits [[-0.4274617  -0.24278887  0.09431923  0.06495485]]
Iteration 800 of 1000: loss=1.2 " + "l1=0" + "l2=1.2 f=-0.127 shape=(1, 9000, 1)
logits [[-0.4241362  -0.2571056   0.07833201  0.09568438]]
Iteration 900 of 1000: loss=1.12 " + "l1=0.0141" + "l2=1.1 f=-0.126 shape=(1, 9000, 1)
logits [[-0.37328354 -0.29751298  0.09580783  0.07014776]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.28 " + "l1=4.28" + "l2=0 f=-0.537 shape=(1, 9000, 1)
logits [[ 5.1821384 -2.9020529  3.5538943 -7.981495 ]]
Iteration 100 of 1000: loss=3.07 " + "l1=2.38" + "l2=0.694 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.5198941 -1.685855   2.5291033 -4.79592  ]]
Iteration 200 of 1000: loss=2.56 " + "l1=1.86" + "l2=0.693 f=-0.314 shape=(1, 9000, 1)
logits [[ 1.9203885 -1.2903479  1.9230903 -3.8105047]]
Iteration 300 of 1000: loss=2.24 " + "l1=1.49" + "l2=0.75 f=-0.272 shape=(1, 9000, 1)
logits [[ 1.4988956 -1.0181057  1.5115044 -3.0803735]]
Iteration 400 of 1000: loss=1.94 " + "l1=1.06" + "l2=0.882 f=-0.239 shape=(1, 9000, 1)
logits [[ 0.9727466  -0.77671325  1.0477295  -2.2002478 ]]
Iteration 500 of 1000: loss=1.7 " + "l1=0.754" + "l2=0.948 f=-0.187 shape=(1, 9000, 1)
logits [[ 0.6049395 -0.6797272  0.8236914 -1.4965359]]
Iteration 600 of 1000: loss=1.51 " + "l1=0.552" + "l2=0.956 f=-0.162 shape=(1, 9000, 1)
logits [[ 0.3171018  -0.57039005  0.65176445 -1.0467895 ]]
Iteration 700 of 1000: loss=1.36 " + "l1=0.39" + "l2=0.965 f=-0.145 shape=(1, 9000, 1)
logits [[ 0.10897917 -0.47712258  0.49474314 -0.70615524]]
Iteration 800 of 1000: loss=1.22 " + "l1=0.207" + "l2=1.01 f=-0.129 shape=(1, 9000, 1)
logits [[-0.11721845 -0.4001179   0.31794107 -0.31826407]]
Iteration 900 of 1000: loss=1.09 " + "l1=0.0837" + "l2=1.01 f=-0.112 shape=(1, 9000, 1)
logits [[-0.24150664 -0.35447842  0.2036554  -0.05388262]]
--- 300.33722496032715 seconds ---
Adv result:3
Loading record A04320
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0471 " + "l1=0.0471" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.543912  -1.1710691  2.3899567 -7.0945535]]
Iteration 100 of 1000: loss=0.0462 " + "l1=0.0455" + "l2=0.0006 f=-0.577 shape=(1, 9000, 1)
logits [[ 3.4695535 -1.0854036  2.3417184 -7.034503 ]]
Iteration 200 of 1000: loss=0.0458 " + "l1=0.0451" + "l2=0.000693 f=-0.574 shape=(1, 9000, 1)
logits [[ 3.4526074 -1.0609777  2.3283029 -7.017459 ]]
Iteration 300 of 1000: loss=0.0456 " + "l1=0.0447" + "l2=0.000881 f=-0.572 shape=(1, 9000, 1)
logits [[ 3.4324594 -1.0358405  2.3144767 -6.9975176]]
Iteration 400 of 1000: loss=0.0453 " + "l1=0.0443" + "l2=0.00105 f=-0.569 shape=(1, 9000, 1)
logits [[ 3.4130726 -1.0127772  2.3017411 -6.9779787]]
Iteration 500 of 1000: loss=0.0451 " + "l1=0.0439" + "l2=0.00118 f=-0.567 shape=(1, 9000, 1)
logits [[ 3.395103  -0.9925534  2.2909043 -6.959502 ]]
Iteration 600 of 1000: loss=0.0449 " + "l1=0.0435" + "l2=0.00141 f=-0.564 shape=(1, 9000, 1)
logits [[ 3.3780363 -0.9717455  2.2801461 -6.9412827]]
Iteration 700 of 1000: loss=0.0447 " + "l1=0.0432" + "l2=0.00154 f=-0.561 shape=(1, 9000, 1)
logits [[ 3.3624372 -0.9529473  2.2704046 -6.923959 ]]
Iteration 800 of 1000: loss=0.0445 " + "l1=0.0428" + "l2=0.00169 f=-0.558 shape=(1, 9000, 1)
logits [[ 3.347858   -0.93448615  2.2609994  -6.907628  ]]
Iteration 900 of 1000: loss=0.0444 " + "l1=0.0425" + "l2=0.00188 f=-0.556 shape=(1, 9000, 1)
logits [[ 3.3344548  -0.91539615  2.2507951  -6.8922257 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.471 " + "l1=0.471" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.543912  -1.1710691  2.3899567 -7.0945535]]
Iteration 100 of 1000: loss=0.383 " + "l1=0.343" + "l2=0.0399 f=-0.531 shape=(1, 9000, 1)
logits [[ 2.950394  -0.4779903  1.9845501 -6.58253  ]]
Iteration 200 of 1000: loss=0.336 " + "l1=0.273" + "l2=0.0634 f=-0.514 shape=(1, 9000, 1)
logits [[ 2.56828    -0.15922897  1.7730646  -6.2383685 ]]
Iteration 300 of 1000: loss=0.297 " + "l1=0.214" + "l2=0.0831 f=-0.512 shape=(1, 9000, 1)
logits [[ 2.2201858   0.07682867  1.5970032  -5.9422846 ]]
Iteration 400 of 1000: loss=0.256 " + "l1=0.157" + "l2=0.0998 f=-0.52 shape=(1, 9000, 1)
logits [[ 1.8784856   0.31195316  1.4517359  -5.7210245 ]]
Iteration 500 of 1000: loss=0.213 " + "l1=0.0909" + "l2=0.122 f=-0.546 shape=(1, 9000, 1)
logits [[ 1.4836682  0.5743924  1.3256962 -5.5694923]]
Iteration 600 of 1000: loss=0.178 " + "l1=0.0543" + "l2=0.124 f=-0.558 shape=(1, 9000, 1)
logits [[ 1.2589146   0.71725863  1.260425   -5.4667506 ]]
Iteration 700 of 1000: loss=0.157 " + "l1=0.0438" + "l2=0.113 f=-0.556 shape=(1, 9000, 1)
logits [[ 1.2164712   0.77895707  1.2133223  -5.432641  ]]
Iteration 800 of 1000: loss=0.144 " + "l1=0.039" + "l2=0.105 f=-0.553 shape=(1, 9000, 1)
logits [[ 1.1872253   0.79958755  1.1895502  -5.3903456 ]]
Iteration 900 of 1000: loss=0.136 " + "l1=0.0352" + "l2=0.101 f=-0.551 shape=(1, 9000, 1)
logits [[ 1.1625303  0.8109003  1.1626209 -5.338297 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.71 " + "l1=4.71" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.543912  -1.1710691  2.3899567 -7.0945535]]
Iteration 100 of 1000: loss=0.584 " + "l1=0.0081" + "l2=0.576 f=-0.64 shape=(1, 9000, 1)
logits [[ 0.9995215  1.0039953  1.0120916 -5.5756154]]
Iteration 200 of 1000: loss=0.391 " + "l1=0" + "l2=0.391 f=-0.626 shape=(1, 9000, 1)
logits [[ 0.9398482  0.9952171  0.982945  -5.4234285]]
Iteration 300 of 1000: loss=0.312 " + "l1=0" + "l2=0.312 f=-0.615 shape=(1, 9000, 1)
logits [[ 0.9500882  0.978199   0.9709977 -5.3589673]]
Iteration 400 of 1000: loss=0.274 " + "l1=0" + "l2=0.274 f=-0.611 shape=(1, 9000, 1)
logits [[ 0.9227985  0.9788095  0.9681244 -5.3143635]]
Iteration 500 of 1000: loss=0.244 " + "l1=0" + "l2=0.244 f=-0.606 shape=(1, 9000, 1)
logits [[ 0.9301679   0.9775408   0.96410185 -5.2976403 ]]
Iteration 600 of 1000: loss=0.222 " + "l1=0.00445" + "l2=0.218 f=-0.599 shape=(1, 9000, 1)
logits [[ 0.9333179   0.96528953  0.96973634 -5.2624135 ]]
Iteration 700 of 1000: loss=0.195 " + "l1=0" + "l2=0.195 f=-0.595 shape=(1, 9000, 1)
logits [[ 0.9202143  0.9748138  0.9698065 -5.2448683]]
Iteration 800 of 1000: loss=0.18 " + "l1=0" + "l2=0.18 f=-0.594 shape=(1, 9000, 1)
logits [[ 0.9063067  1.0000026  0.9679216 -5.2521205]]
Iteration 900 of 1000: loss=0.162 " + "l1=0" + "l2=0.162 f=-0.589 shape=(1, 9000, 1)
logits [[ 0.9401117  0.986175   0.9827975 -5.265125 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.59 " + "l1=2.59" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.543912  -1.1710691  2.3899567 -7.0945535]]
Iteration 100 of 1000: loss=0.54 " + "l1=0.00502" + "l2=0.535 f=-0.635 shape=(1, 9000, 1)
logits [[ 0.98661554  1.007112    1.0162444  -5.5510745 ]]
Iteration 200 of 1000: loss=0.337 " + "l1=0" + "l2=0.337 f=-0.613 shape=(1, 9000, 1)
logits [[ 0.9733492   0.9845918   0.97879845 -5.388945  ]]
Iteration 300 of 1000: loss=0.273 " + "l1=0.00263" + "l2=0.271 f=-0.603 shape=(1, 9000, 1)
logits [[ 0.977098   0.9723235  0.9697138 -5.3331304]]
Iteration 400 of 1000: loss=0.232 " + "l1=0" + "l2=0.232 f=-0.601 shape=(1, 9000, 1)
logits [[ 0.95296544  0.9801698   0.9715032  -5.306664  ]]
Iteration 500 of 1000: loss=0.195 " + "l1=0" + "l2=0.195 f=-0.592 shape=(1, 9000, 1)
logits [[ 0.9675674  0.9733635  0.9714471 -5.279198 ]]
Iteration 600 of 1000: loss=0.173 " + "l1=0.00206" + "l2=0.171 f=-0.587 shape=(1, 9000, 1)
logits [[ 0.97272223  0.97432375  0.97806174 -5.2730465 ]]
Iteration 700 of 1000: loss=0.158 " + "l1=9.95e-05" + "l2=0.158 f=-0.586 shape=(1, 9000, 1)
logits [[ 0.9616771   0.98546284  0.9856437  -5.2784104 ]]
Iteration 800 of 1000: loss=0.151 " + "l1=0" + "l2=0.151 f=-0.583 shape=(1, 9000, 1)
logits [[ 0.947646   1.001819   0.9773932 -5.257303 ]]
Iteration 900 of 1000: loss=0.138 " + "l1=0" + "l2=0.138 f=-0.576 shape=(1, 9000, 1)
logits [[ 0.9747745  0.9857744  0.9838528 -5.2481422]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.53 " + "l1=1.53" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.543912  -1.1710691  2.3899567 -7.0945535]]
Iteration 100 of 1000: loss=0.574 " + "l1=0.156" + "l2=0.418 f=-0.606 shape=(1, 9000, 1)
logits [[ 1.2173698  0.7562402  1.2355204 -5.632943 ]]
Iteration 200 of 1000: loss=0.338 " + "l1=0.000633" + "l2=0.337 f=-0.608 shape=(1, 9000, 1)
logits [[ 0.9718162   0.98602706  0.9879757  -5.3789377 ]]
Iteration 300 of 1000: loss=0.257 " + "l1=0" + "l2=0.257 f=-0.599 shape=(1, 9000, 1)
logits [[ 0.95715034  0.97989184  0.9741738  -5.306203  ]]
Iteration 400 of 1000: loss=0.206 " + "l1=0.00164" + "l2=0.205 f=-0.595 shape=(1, 9000, 1)
logits [[ 0.97535753  0.9786718   0.98371303 -5.31631   ]]
Iteration 500 of 1000: loss=0.174 " + "l1=0.00263" + "l2=0.171 f=-0.59 shape=(1, 9000, 1)
logits [[ 0.9794698   0.97501326  0.9830957  -5.2960534 ]]
Iteration 600 of 1000: loss=0.157 " + "l1=0" + "l2=0.157 f=-0.588 shape=(1, 9000, 1)
logits [[ 0.95526963  0.9858679   0.98086894 -5.2729583 ]]
Iteration 700 of 1000: loss=0.145 " + "l1=0" + "l2=0.145 f=-0.582 shape=(1, 9000, 1)
logits [[ 0.9681932   0.9830007   0.97604996 -5.2544765 ]]
Iteration 800 of 1000: loss=0.136 " + "l1=0.00113" + "l2=0.135 f=-0.575 shape=(1, 9000, 1)
logits [[ 0.97840285  0.97579455  0.97927415 -5.2332544 ]]
Iteration 900 of 1000: loss=0.13 " + "l1=0.00223" + "l2=0.128 f=-0.572 shape=(1, 9000, 1)
logits [[ 0.95909154  0.9711581   0.9780073  -5.197657  ]]
--- 300.51104402542114 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0115 " + "l1=0.0115" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.543912  -1.1710691  2.3899567 -7.0945535]]
Iteration 100 of 1000: loss=0.0112 " + "l1=0.0109" + "l2=0.000263 f=-0.585 shape=(1, 9000, 1)
logits [[ 3.4971623 -1.1788695  2.4068837 -7.0654683]]
Iteration 200 of 1000: loss=0.0111 " + "l1=0.0108" + "l2=0.00024 f=-0.585 shape=(1, 9000, 1)
logits [[ 3.4904828 -1.1778915  2.4090047 -7.060086 ]]
Iteration 300 of 1000: loss=0.011 " + "l1=0.0107" + "l2=0.000309 f=-0.584 shape=(1, 9000, 1)
logits [[ 3.4804516 -1.1768941  2.4124398 -7.05311  ]]
Iteration 400 of 1000: loss=0.0109 " + "l1=0.0105" + "l2=0.000361 f=-0.584 shape=(1, 9000, 1)
logits [[ 3.4703472 -1.1761132  2.4162831 -7.0460835]]
Iteration 500 of 1000: loss=0.0109 " + "l1=0.0104" + "l2=0.000452 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.4607072 -1.1757377  2.4201863 -7.039118 ]]
Iteration 600 of 1000: loss=0.0108 " + "l1=0.0103" + "l2=0.000525 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.451398  -1.17559    2.4240758 -7.0325956]]
Iteration 700 of 1000: loss=0.0107 " + "l1=0.0101" + "l2=0.000599 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.4424968 -1.1750878  2.4275725 -7.0264473]]
Iteration 800 of 1000: loss=0.0108 " + "l1=0.01" + "l2=0.000737 f=-0.582 shape=(1, 9000, 1)
logits [[ 3.4336677 -1.174599   2.4314153 -7.0203247]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.115 " + "l1=0.115" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.543912  -1.1710691  2.3899567 -7.0945535]]
Iteration 100 of 1000: loss=0.0859 " + "l1=0.0728" + "l2=0.0131 f=-0.591 shape=(1, 9000, 1)
logits [[ 3.2412255 -1.2167234  2.513295  -6.902271 ]]
Iteration 200 of 1000: loss=0.0713 " + "l1=0.0508" + "l2=0.0205 f=-0.593 shape=(1, 9000, 1)
logits [[ 3.076464  -1.2204138  2.5688658 -6.796293 ]]
Iteration 300 of 1000: loss=0.0586 " + "l1=0.0331" + "l2=0.0255 f=-0.602 shape=(1, 9000, 1)
logits [[ 2.940658  -1.2372428  2.6097324 -6.719524 ]]
Iteration 400 of 1000: loss=0.0462 " + "l1=0.0156" + "l2=0.0305 f=-0.61 shape=(1, 9000, 1)
logits [[ 2.8140144 -1.2556454  2.657711  -6.6555967]]
Iteration 500 of 1000: loss=0.033 " + "l1=0.000395" + "l2=0.0326 f=-0.617 shape=(1, 9000, 1)
logits [[ 2.7039928 -1.2779754  2.700045  -6.59245  ]]
Iteration 600 of 1000: loss=0.0264 " + "l1=0.000194" + "l2=0.0262 f=-0.613 shape=(1, 9000, 1)
logits [[ 2.7056737 -1.2733525  2.7037354 -6.588558 ]]
Iteration 700 of 1000: loss=0.0224 " + "l1=0.000247" + "l2=0.0221 f=-0.609 shape=(1, 9000, 1)
logits [[ 2.7130253 -1.2727846  2.7105556 -6.5859685]]
Iteration 800 of 1000: loss=0.0198 " + "l1=0" + "l2=0.0198 f=-0.605 shape=(1, 9000, 1)
logits [[ 2.7120805 -1.2710024  2.713484  -6.575694 ]]
Iteration 900 of 1000: loss=0.0181 " + "l1=0.000325" + "l2=0.0178 f=-0.602 shape=(1, 9000, 1)
logits [[ 2.716959  -1.268623   2.7137053 -6.569987 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0635 " + "l1=0.0635" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.543912  -1.1710691  2.3899567 -7.0945535]]
Iteration 100 of 1000: loss=0.0541 " + "l1=0.0498" + "l2=0.0043 f=-0.588 shape=(1, 9000, 1)
logits [[ 3.367232  -1.2012331  2.4625757 -6.9823527]]
Iteration 200 of 1000: loss=0.0503 " + "l1=0.0443" + "l2=0.00598 f=-0.588 shape=(1, 9000, 1)
logits [[ 3.2918918 -1.2008905  2.48642   -6.9292107]]
Iteration 300 of 1000: loss=0.0468 " + "l1=0.0393" + "l2=0.00755 f=-0.586 shape=(1, 9000, 1)
logits [[ 3.2209241 -1.1936325  2.506462  -6.8789973]]
Iteration 400 of 1000: loss=0.0432 " + "l1=0.0339" + "l2=0.00926 f=-0.586 shape=(1, 9000, 1)
logits [[ 3.1510513 -1.1930923  2.5347602 -6.8367424]]
Iteration 500 of 1000: loss=0.0397 " + "l1=0.0291" + "l2=0.0106 f=-0.587 shape=(1, 9000, 1)
logits [[ 3.0893903 -1.1948395  2.5604656 -6.8020573]]
Iteration 600 of 1000: loss=0.0363 " + "l1=0.0247" + "l2=0.0116 f=-0.588 shape=(1, 9000, 1)
logits [[ 3.03162   -1.1991477  2.5828717 -6.769205 ]]
Iteration 700 of 1000: loss=0.033 " + "l1=0.0205" + "l2=0.0125 f=-0.591 shape=(1, 9000, 1)
logits [[ 2.9763656 -1.2042664  2.6038187 -6.7400794]]
Iteration 800 of 1000: loss=0.03 " + "l1=0.0162" + "l2=0.0138 f=-0.593 shape=(1, 9000, 1)
logits [[ 2.9205382 -1.210878   2.625284  -6.7064824]]
Iteration 900 of 1000: loss=0.0265 " + "l1=0.0114" + "l2=0.0151 f=-0.594 shape=(1, 9000, 1)
logits [[ 2.861847  -1.2212987  2.6548576 -6.6715994]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0894 " + "l1=0.0894" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.543912  -1.1710691  2.3899567 -7.0945535]]
Iteration 100 of 1000: loss=0.0713 " + "l1=0.0632" + "l2=0.00814 f=-0.59 shape=(1, 9000, 1)
logits [[ 3.3043077 -1.2114222  2.4888763 -6.941926 ]]
Iteration 200 of 1000: loss=0.0633 " + "l1=0.0512" + "l2=0.0121 f=-0.588 shape=(1, 9000, 1)
logits [[ 3.1849194 -1.2041003  2.524671  -6.859269 ]]
Iteration 300 of 1000: loss=0.0555 " + "l1=0.04" + "l2=0.0155 f=-0.59 shape=(1, 9000, 1)
logits [[ 3.077166  -1.2063804  2.561357  -6.7938423]]
Iteration 400 of 1000: loss=0.0483 " + "l1=0.0304" + "l2=0.0179 f=-0.596 shape=(1, 9000, 1)
logits [[ 2.984789  -1.218099   2.592661  -6.7422733]]
Iteration 500 of 1000: loss=0.0413 " + "l1=0.0209" + "l2=0.0204 f=-0.601 shape=(1, 9000, 1)
logits [[ 2.8972309 -1.2305893  2.6275887 -6.6965976]]
Iteration 600 of 1000: loss=0.0338 " + "l1=0.0102" + "l2=0.0236 f=-0.605 shape=(1, 9000, 1)
logits [[ 2.8062394 -1.2504749  2.6746194 -6.651277 ]]
Iteration 700 of 1000: loss=0.0265 " + "l1=0.000257" + "l2=0.0263 f=-0.61 shape=(1, 9000, 1)
logits [[ 2.7131388 -1.2711978  2.7098205 -6.5912695]]
Iteration 800 of 1000: loss=0.0217 " + "l1=8.64e-05" + "l2=0.0217 f=-0.606 shape=(1, 9000, 1)
logits [[ 2.712683  -1.2691926  2.7115679 -6.5801525]]
Iteration 900 of 1000: loss=0.0196 " + "l1=0.000136" + "l2=0.0194 f=-0.603 shape=(1, 9000, 1)
logits [[ 2.713193  -1.2672759  2.7114358 -6.57036  ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0764 " + "l1=0.0764" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.543912  -1.1710691  2.3899567 -7.0945535]]
Iteration 100 of 1000: loss=0.0631 " + "l1=0.0571" + "l2=0.00601 f=-0.59 shape=(1, 9000, 1)
logits [[ 3.3365283 -1.2063339  2.4747415 -6.9631195]]
Iteration 200 of 1000: loss=0.0576 " + "l1=0.0491" + "l2=0.00848 f=-0.589 shape=(1, 9000, 1)
logits [[ 3.2431705 -1.2032174  2.5022328 -6.897408 ]]
Iteration 300 of 1000: loss=0.052 " + "l1=0.0407" + "l2=0.0112 f=-0.588 shape=(1, 9000, 1)
logits [[ 3.1498172 -1.1996706  2.5348306 -6.836905 ]]
Iteration 400 of 1000: loss=0.0467 " + "l1=0.0334" + "l2=0.0132 f=-0.59 shape=(1, 9000, 1)
logits [[ 3.0686967 -1.2021832  2.5641978 -6.7897024]]
Iteration 500 of 1000: loss=0.0416 " + "l1=0.0267" + "l2=0.0149 f=-0.593 shape=(1, 9000, 1)
logits [[ 2.9962418 -1.210895   2.5926647 -6.749734 ]]
Iteration 600 of 1000: loss=0.0367 " + "l1=0.0202" + "l2=0.0165 f=-0.597 shape=(1, 9000, 1)
logits [[ 2.9239678 -1.2171215  2.6186867 -6.71155  ]]
Iteration 700 of 1000: loss=0.0316 " + "l1=0.0128" + "l2=0.0188 f=-0.6 shape=(1, 9000, 1)
logits [[ 2.851428  -1.2341803  2.657666  -6.6749754]]
Iteration 800 of 1000: loss=0.0264 " + "l1=0.00562" + "l2=0.0208 f=-0.603 shape=(1, 9000, 1)
logits [[ 2.7761488 -1.2517635  2.6913204 -6.6266465]]
Iteration 900 of 1000: loss=0.0216 " + "l1=0.000152" + "l2=0.0215 f=-0.605 shape=(1, 9000, 1)
logits [[ 2.7137318 -1.2656034  2.7114425 -6.5781136]]
--- 292.89429783821106 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.106 " + "l1=0.106" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.543912  -1.1710691  2.3899567 -7.0945535]]
Iteration 100 of 1000: loss=0.105 " + "l1=0.104" + "l2=0.000645 f=-0.58 shape=(1, 9000, 1)
logits [[ 3.4472332 -1.1422505  2.355381  -6.9792213]]
Iteration 200 of 1000: loss=0.104 " + "l1=0.104" + "l2=0.000799 f=-0.578 shape=(1, 9000, 1)
logits [[ 3.417676  -1.131335   2.343343  -6.9432936]]
Iteration 300 of 1000: loss=0.104 " + "l1=0.103" + "l2=0.00106 f=-0.577 shape=(1, 9000, 1)
logits [[ 3.3840604 -1.120061   2.3303926 -6.9013762]]
Iteration 400 of 1000: loss=0.103 " + "l1=0.102" + "l2=0.00133 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.3528914 -1.1092582  2.3183012 -6.861619 ]]
Iteration 500 of 1000: loss=0.103 " + "l1=0.101" + "l2=0.00166 f=-0.573 shape=(1, 9000, 1)
logits [[ 3.3239498 -1.0991694  2.3072174 -6.8238063]]
Iteration 600 of 1000: loss=0.103 " + "l1=0.101" + "l2=0.00192 f=-0.571 shape=(1, 9000, 1)
logits [[ 3.2963035 -1.0893387  2.296829  -6.7868557]]
Iteration 700 of 1000: loss=0.102 " + "l1=0.1" + "l2=0.00222 f=-0.569 shape=(1, 9000, 1)
logits [[ 3.2701986 -1.080111   2.2873003 -6.7519445]]
Iteration 800 of 1000: loss=0.102 " + "l1=0.0997" + "l2=0.00254 f=-0.567 shape=(1, 9000, 1)
logits [[ 3.2465827 -1.0715578  2.2781441 -6.7203383]]
Iteration 900 of 1000: loss=0.102 " + "l1=0.0992" + "l2=0.00274 f=-0.565 shape=(1, 9000, 1)
logits [[ 3.2252195 -1.0637697  2.2702944 -6.690699 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.06 " + "l1=1.06" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.543912  -1.1710691  2.3899567 -7.0945535]]
Iteration 100 of 1000: loss=0.931 " + "l1=0.88" + "l2=0.0511 f=-0.561 shape=(1, 9000, 1)
logits [[ 2.6962514  -0.91298884  2.075256   -6.1017303 ]]
Iteration 200 of 1000: loss=0.848 " + "l1=0.754" + "l2=0.0941 f=-0.543 shape=(1, 9000, 1)
logits [[ 2.1309383 -0.7241723  1.8300779 -5.4095764]]
Iteration 300 of 1000: loss=0.781 " + "l1=0.654" + "l2=0.127 f=-0.519 shape=(1, 9000, 1)
logits [[ 1.7015829  -0.56723267  1.6292591  -4.839091  ]]
Iteration 400 of 1000: loss=0.728 " + "l1=0.579" + "l2=0.149 f=-0.487 shape=(1, 9000, 1)
logits [[ 1.4036859  -0.37134984  1.4050816  -4.383658  ]]
Iteration 500 of 1000: loss=0.683 " + "l1=0.524" + "l2=0.159 f=-0.458 shape=(1, 9000, 1)
logits [[ 1.2083259  -0.22494422  1.2121527  -4.028786  ]]
Iteration 600 of 1000: loss=0.641 " + "l1=0.464" + "l2=0.177 f=-0.431 shape=(1, 9000, 1)
logits [[ 1.0169619  -0.12790179  1.0155412  -3.6268516 ]]
Iteration 700 of 1000: loss=0.604 " + "l1=0.415" + "l2=0.189 f=-0.411 shape=(1, 9000, 1)
logits [[ 0.8388077  -0.01600896  0.8394593  -3.3063455 ]]
Iteration 800 of 1000: loss=0.575 " + "l1=0.375" + "l2=0.2 f=-0.391 shape=(1, 9000, 1)
logits [[ 0.70871913  0.0527871   0.7120183  -3.0374591 ]]
Iteration 900 of 1000: loss=0.55 " + "l1=0.339" + "l2=0.212 f=-0.374 shape=(1, 9000, 1)
logits [[ 0.59529096  0.09353334  0.6004648  -2.7872443 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.6 " + "l1=10.6" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.543912  -1.1710691  2.3899567 -7.0945535]]
Iteration 100 of 1000: loss=2.64 " + "l1=0.0476" + "l2=2.6 f=-0.339 shape=(1, 9000, 1)
logits [[-1.049797   -0.08463877 -0.08966164 -0.13221079]]
Iteration 200 of 1000: loss=1.54 " + "l1=0" + "l2=1.54 f=-0.328 shape=(1, 9000, 1)
logits [[-0.990255   -0.12113845 -0.11544354 -0.08497215]]
Iteration 300 of 1000: loss=1.26 " + "l1=0.0141" + "l2=1.24 f=-0.324 shape=(1, 9000, 1)
logits [[-0.9152579  -0.14625356 -0.10954434 -0.12366966]]
Iteration 400 of 1000: loss=1.1 " + "l1=0" + "l2=1.1 f=-0.319 shape=(1, 9000, 1)
logits [[-0.8772342  -0.14115866 -0.13207746 -0.12475132]]
Iteration 500 of 1000: loss=1.01 " + "l1=0.00602" + "l2=1 f=-0.318 shape=(1, 9000, 1)
logits [[-0.83385295 -0.14547208 -0.14253424 -0.14855006]]
Iteration 600 of 1000: loss=0.938 " + "l1=0.000634" + "l2=0.937 f=-0.314 shape=(1, 9000, 1)
logits [[-0.7984121  -0.16869216 -0.14377785 -0.14441165]]
Iteration 700 of 1000: loss=0.891 " + "l1=0.00967" + "l2=0.881 f=-0.313 shape=(1, 9000, 1)
logits [[-0.789651   -0.15234399 -0.15060939 -0.16028008]]
Iteration 800 of 1000: loss=0.841 " + "l1=0" + "l2=0.841 f=-0.314 shape=(1, 9000, 1)
logits [[-0.78633606 -0.16907732 -0.15413712 -0.14702821]]
Iteration 900 of 1000: loss=0.811 " + "l1=0" + "l2=0.811 f=-0.315 shape=(1, 9000, 1)
logits [[-0.80388296 -0.16883539 -0.16643916 -0.12099875]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.85 " + "l1=5.85" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.543912  -1.1710691  2.3899567 -7.0945535]]
Iteration 100 of 1000: loss=2.6 " + "l1=1.46" + "l2=1.14 f=-0.418 shape=(1, 9000, 1)
logits [[ 0.07056724 -0.03421179  0.47052476 -2.1794631 ]]
Iteration 200 of 1000: loss=1.38 " + "l1=0.00828" + "l2=1.37 f=-0.337 shape=(1, 9000, 1)
logits [[-0.9435179  -0.12773307 -0.13336775 -0.14279437]]
Iteration 300 of 1000: loss=1.08 " + "l1=0" + "l2=1.08 f=-0.326 shape=(1, 9000, 1)
logits [[-0.87724435 -0.14240281 -0.14613134 -0.13713545]]
Iteration 400 of 1000: loss=0.946 " + "l1=0.0078" + "l2=0.939 f=-0.312 shape=(1, 9000, 1)
logits [[-0.81682616 -0.13926244 -0.13864881 -0.15282312]]
Iteration 500 of 1000: loss=0.865 " + "l1=0.000317" + "l2=0.865 f=-0.301 shape=(1, 9000, 1)
logits [[-0.80353177 -0.16195498 -0.11860535 -0.11918116]]
Iteration 600 of 1000: loss=0.797 " + "l1=0" + "l2=0.797 f=-0.292 shape=(1, 9000, 1)
logits [[-0.7886766  -0.13063729 -0.12736511 -0.12197808]]
Iteration 700 of 1000: loss=0.746 " + "l1=0.00959" + "l2=0.737 f=-0.296 shape=(1, 9000, 1)
logits [[-0.7859905  -0.13340536 -0.12443534 -0.14186278]]
Iteration 800 of 1000: loss=0.692 " + "l1=0" + "l2=0.692 f=-0.301 shape=(1, 9000, 1)
logits [[-0.8111715  -0.1381688  -0.13872792 -0.11679595]]
Iteration 900 of 1000: loss=0.651 " + "l1=0" + "l2=0.651 f=-0.303 shape=(1, 9000, 1)
logits [[-0.80161756 -0.15202798 -0.13154341 -0.12767991]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.46 " + "l1=3.46" + "l2=0 f=-0.583 shape=(1, 9000, 1)
logits [[ 3.543912  -1.1710691  2.3899567 -7.0945535]]
Iteration 100 of 1000: loss=2.08 " + "l1=1.58" + "l2=0.504 f=-0.481 shape=(1, 9000, 1)
logits [[ 1.0433143 -0.2095891  1.0460026 -3.8021271]]
Iteration 200 of 1000: loss=1.49 " + "l1=0.769" + "l2=0.72 f=-0.401 shape=(1, 9000, 1)
logits [[ 0.06705324 -0.04550898  0.37002325 -1.9956303 ]]
Iteration 300 of 1000: loss=1.11 " + "l1=0.254" + "l2=0.858 f=-0.35 shape=(1, 9000, 1)
logits [[-0.55539876 -0.02884656 -0.01732511 -0.7989989 ]]
Iteration 400 of 1000: loss=0.896 " + "l1=0.0177" + "l2=0.878 f=-0.321 shape=(1, 9000, 1)
logits [[-0.80212146 -0.14178216 -0.14574602 -0.19627416]]
Iteration 500 of 1000: loss=0.76 " + "l1=0.00248" + "l2=0.757 f=-0.309 shape=(1, 9000, 1)
logits [[-0.7735932  -0.15854047 -0.14759792 -0.15523672]]
Iteration 600 of 1000: loss=0.69 " + "l1=0.00713" + "l2=0.683 f=-0.297 shape=(1, 9000, 1)
logits [[-0.755491   -0.13491769 -0.13929614 -0.15684372]]
Iteration 700 of 1000: loss=0.635 " + "l1=0" + "l2=0.635 f=-0.286 shape=(1, 9000, 1)
logits [[-0.7679515  -0.1313784  -0.12664568 -0.11870956]]
Iteration 800 of 1000: loss=0.582 " + "l1=0.00148" + "l2=0.581 f=-0.279 shape=(1, 9000, 1)
logits [[-0.7483647  -0.12412813 -0.11952697 -0.12409104]]
Iteration 900 of 1000: loss=0.543 " + "l1=0.0031" + "l2=0.54 f=-0.277 shape=(1, 9000, 1)
logits [[-0.7342112  -0.13076247 -0.11762379 -0.12716168]]
--- 303.7126557826996 seconds ---
Adv result:3
Loading record A04349
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0626 " + "l1=0.0626" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 3.4537883 -2.8109353  2.4370322 -5.1415634]]
Iteration 100 of 1000: loss=0.0621 " + "l1=0.0616" + "l2=0.000411 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.399602  -2.7650652  2.3958802 -5.0761323]]
Iteration 200 of 1000: loss=0.0619 " + "l1=0.0615" + "l2=0.000422 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.3916528 -2.7566645  2.3880699 -5.0662885]]
Iteration 300 of 1000: loss=0.0618 " + "l1=0.0613" + "l2=0.000519 f=-0.51 shape=(1, 9000, 1)
logits [[ 3.3811343 -2.7472832  2.3792393 -5.053655 ]]
Iteration 400 of 1000: loss=0.0617 " + "l1=0.0611" + "l2=0.000618 f=-0.51 shape=(1, 9000, 1)
logits [[ 3.3702662 -2.7380457  2.3703961 -5.040725 ]]
Iteration 500 of 1000: loss=0.0617 " + "l1=0.0609" + "l2=0.000798 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.3594053 -2.7291543  2.361787  -5.028219 ]]
Iteration 600 of 1000: loss=0.0616 " + "l1=0.0607" + "l2=0.000871 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.3495584 -2.721738   2.3543015 -5.0171905]]
Iteration 700 of 1000: loss=0.0616 " + "l1=0.0605" + "l2=0.00103 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.3401341 -2.714736   2.3472786 -5.006936 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.626 " + "l1=0.626" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 3.4537883 -2.8109353  2.4370322 -5.1415634]]
Iteration 100 of 1000: loss=0.575 " + "l1=0.548" + "l2=0.0274 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.011704  -2.4679854  2.1359172 -4.604526 ]]
Iteration 200 of 1000: loss=0.558 " + "l1=0.523" + "l2=0.0349 f=-0.474 shape=(1, 9000, 1)
logits [[ 2.8501964 -2.3801231  2.032108  -4.3979173]]
Iteration 300 of 1000: loss=0.542 " + "l1=0.5" + "l2=0.0429 f=-0.467 shape=(1, 9000, 1)
logits [[ 2.6914675 -2.3041995  1.9360968 -4.1916857]]
Iteration 400 of 1000: loss=0.527 " + "l1=0.474" + "l2=0.0527 f=-0.456 shape=(1, 9000, 1)
logits [[ 2.5194936 -2.2187653  1.8414494 -3.9650195]]
Iteration 500 of 1000: loss=0.509 " + "l1=0.448" + "l2=0.0616 f=-0.44 shape=(1, 9000, 1)
logits [[ 2.3481913 -2.1305294  1.757777  -3.7355807]]
Iteration 600 of 1000: loss=0.493 " + "l1=0.427" + "l2=0.0665 f=-0.427 shape=(1, 9000, 1)
logits [[ 2.2092187 -2.0599613  1.6960078 -3.5529773]]
Iteration 700 of 1000: loss=0.477 " + "l1=0.405" + "l2=0.072 f=-0.414 shape=(1, 9000, 1)
logits [[ 2.0654378 -1.9819818  1.6318316 -3.3723142]]
Iteration 800 of 1000: loss=0.461 " + "l1=0.384" + "l2=0.0773 f=-0.403 shape=(1, 9000, 1)
logits [[ 1.9265263 -1.9128053  1.5742382 -3.1986914]]
Iteration 900 of 1000: loss=0.447 " + "l1=0.365" + "l2=0.082 f=-0.393 shape=(1, 9000, 1)
logits [[ 1.8084118 -1.8439468  1.5225642 -3.0604708]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.26 " + "l1=6.26" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 3.4537883 -2.8109353  2.4370322 -5.1415634]]
Iteration 100 of 1000: loss=3.09 " + "l1=1.99" + "l2=1.1 f=-0.29 shape=(1, 9000, 1)
logits [[ 0.89150125 -1.1014253   0.8826783  -1.8313789 ]]
Iteration 200 of 1000: loss=2.45 " + "l1=1.37" + "l2=1.08 f=-0.222 shape=(1, 9000, 1)
logits [[ 0.6094049 -0.7629587  0.6078985 -1.3440044]]
Iteration 300 of 1000: loss=2.16 " + "l1=1.07" + "l2=1.09 f=-0.201 shape=(1, 9000, 1)
logits [[ 0.46325    -0.60215974  0.4615575  -1.1248443 ]]
Iteration 400 of 1000: loss=1.96 " + "l1=0.801" + "l2=1.16 f=-0.181 shape=(1, 9000, 1)
logits [[ 0.32107237 -0.47755978  0.32349196 -0.8903741 ]]
Iteration 500 of 1000: loss=1.81 " + "l1=0.646" + "l2=1.17 f=-0.168 shape=(1, 9000, 1)
logits [[ 0.23789418 -0.40378404  0.24267843 -0.74684423]]
Iteration 600 of 1000: loss=1.68 " + "l1=0.523" + "l2=1.16 f=-0.158 shape=(1, 9000, 1)
logits [[ 0.17306899 -0.3488609   0.17375924 -0.6319532 ]]
Iteration 700 of 1000: loss=1.57 " + "l1=0.402" + "l2=1.16 f=-0.155 shape=(1, 9000, 1)
logits [[ 0.10298537 -0.29592592  0.10654806 -0.5336677 ]]
Iteration 800 of 1000: loss=1.44 " + "l1=0.273" + "l2=1.16 f=-0.152 shape=(1, 9000, 1)
logits [[ 0.04974815 -0.22303689  0.05007045 -0.48617724]]
Iteration 900 of 1000: loss=1.24 " + "l1=0.0397" + "l2=1.2 f=-0.131 shape=(1, 9000, 1)
logits [[-0.01701898 -0.05121806 -0.01148473 -0.4436355 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.45 " + "l1=3.45" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 3.4537883 -2.8109353  2.4370322 -5.1415634]]
Iteration 100 of 1000: loss=2.14 " + "l1=1.56" + "l2=0.581 f=-0.346 shape=(1, 9000, 1)
logits [[ 1.2671267 -1.5653191  1.2647568 -2.3494651]]
Iteration 200 of 1000: loss=1.83 " + "l1=1.28" + "l2=0.545 f=-0.286 shape=(1, 9000, 1)
logits [[ 1.0370692 -1.2888498  1.0415168 -1.9333954]]
Iteration 300 of 1000: loss=1.62 " + "l1=1.03" + "l2=0.583 f=-0.254 shape=(1, 9000, 1)
logits [[ 0.8387388 -1.0405332  0.8370007 -1.6497952]]
Iteration 400 of 1000: loss=1.49 " + "l1=0.907" + "l2=0.579 f=-0.239 shape=(1, 9000, 1)
logits [[ 0.7314969 -0.9108831  0.7378432 -1.5142634]]
Iteration 500 of 1000: loss=1.41 " + "l1=0.843" + "l2=0.565 f=-0.234 shape=(1, 9000, 1)
logits [[ 0.6828273  -0.8507312   0.68216413 -1.450788  ]]
Iteration 600 of 1000: loss=1.35 " + "l1=0.795" + "l2=0.559 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.64387435 -0.80121845  0.638696   -1.4053913 ]]
Iteration 700 of 1000: loss=1.31 " + "l1=0.749" + "l2=0.564 f=-0.228 shape=(1, 9000, 1)
logits [[ 0.6016087  -0.7575951   0.60501254 -1.3593404 ]]
Iteration 800 of 1000: loss=1.28 " + "l1=0.706" + "l2=0.576 f=-0.222 shape=(1, 9000, 1)
logits [[ 0.5660857  -0.7127632   0.57080966 -1.312708  ]]
Iteration 900 of 1000: loss=1.25 " + "l1=0.664" + "l2=0.584 f=-0.216 shape=(1, 9000, 1)
logits [[ 0.5382928 -0.667561   0.5403538 -1.2743086]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.86 " + "l1=4.86" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 3.4537883 -2.8109353  2.4370322 -5.1415634]]
Iteration 100 of 1000: loss=2.67 " + "l1=1.85" + "l2=0.821 f=-0.319 shape=(1, 9000, 1)
logits [[ 1.0651379 -1.3221223  1.0611053 -2.078209 ]]
Iteration 200 of 1000: loss=2.16 " + "l1=1.31" + "l2=0.848 f=-0.252 shape=(1, 9000, 1)
logits [[ 0.7421918  -0.9437901   0.74070966 -1.5484488 ]]
Iteration 300 of 1000: loss=1.9 " + "l1=1.09" + "l2=0.809 f=-0.222 shape=(1, 9000, 1)
logits [[ 0.62005097 -0.7806943   0.62780184 -1.3531843 ]]
Iteration 400 of 1000: loss=1.77 " + "l1=0.978" + "l2=0.793 f=-0.212 shape=(1, 9000, 1)
logits [[ 0.5661042 -0.6955633  0.5604007 -1.2776617]]
Iteration 500 of 1000: loss=1.67 " + "l1=0.854" + "l2=0.819 f=-0.203 shape=(1, 9000, 1)
logits [[ 0.48250702 -0.61848456  0.4829818  -1.1579477 ]]
Iteration 600 of 1000: loss=1.58 " + "l1=0.732" + "l2=0.851 f=-0.194 shape=(1, 9000, 1)
logits [[ 0.3935407  -0.5472501   0.39717096 -1.0190318 ]]
Iteration 700 of 1000: loss=1.5 " + "l1=0.633" + "l2=0.866 f=-0.19 shape=(1, 9000, 1)
logits [[ 0.32792994 -0.48900265  0.32679993 -0.92733294]]
Iteration 800 of 1000: loss=1.41 " + "l1=0.533" + "l2=0.875 f=-0.188 shape=(1, 9000, 1)
logits [[ 0.2695279  -0.41773093  0.26667127 -0.8692279 ]]
Iteration 900 of 1000: loss=1.3 " + "l1=0.456" + "l2=0.846 f=-0.183 shape=(1, 9000, 1)
logits [[ 0.23013242 -0.35817906  0.23064674 -0.8364765 ]]
--- 283.89421701431274 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0102 " + "l1=0.0102" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 3.4537883 -2.8109353  2.4370322 -5.1415634]]
Iteration 100 of 1000: loss=0.01 " + "l1=0.00984" + "l2=0.000173 f=-0.517 shape=(1, 9000, 1)
logits [[ 3.4270647 -2.8227684  2.4427779 -5.116595 ]]
Iteration 200 of 1000: loss=0.00996 " + "l1=0.00982" + "l2=0.000137 f=-0.518 shape=(1, 9000, 1)
logits [[ 3.4266236 -2.8243747  2.4441748 -5.1168456]]
Iteration 300 of 1000: loss=0.00994 " + "l1=0.00978" + "l2=0.000167 f=-0.518 shape=(1, 9000, 1)
logits [[ 3.4234855 -2.826663   2.445952  -5.1149273]]
Iteration 400 of 1000: loss=0.00994 " + "l1=0.00972" + "l2=0.00022 f=-0.519 shape=(1, 9000, 1)
logits [[ 3.419968  -2.829199   2.4478452 -5.112745 ]]
Iteration 500 of 1000: loss=0.00996 " + "l1=0.00967" + "l2=0.000287 f=-0.519 shape=(1, 9000, 1)
logits [[ 3.4163373 -2.831458   2.449453  -5.1105533]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.102 " + "l1=0.102" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 3.4537883 -2.8109353  2.4370322 -5.1415634]]
Iteration 100 of 1000: loss=0.086 " + "l1=0.077" + "l2=0.00902 f=-0.532 shape=(1, 9000, 1)
logits [[ 3.2749646 -2.9175296  2.50519   -4.990696 ]]
Iteration 200 of 1000: loss=0.0798 " + "l1=0.0679" + "l2=0.0119 f=-0.539 shape=(1, 9000, 1)
logits [[ 3.2125607 -2.9610426  2.5336664 -4.9422493]]
Iteration 300 of 1000: loss=0.0748 " + "l1=0.0602" + "l2=0.0146 f=-0.544 shape=(1, 9000, 1)
logits [[ 3.1622465 -2.9988985  2.559901  -4.900326 ]]
Iteration 400 of 1000: loss=0.0696 " + "l1=0.0516" + "l2=0.0181 f=-0.548 shape=(1, 9000, 1)
logits [[ 3.1054325 -3.0392656  2.5895548 -4.84929  ]]
Iteration 500 of 1000: loss=0.0643 " + "l1=0.0424" + "l2=0.022 f=-0.551 shape=(1, 9000, 1)
logits [[ 3.0370677 -3.0700192  2.6132987 -4.785602 ]]
Iteration 600 of 1000: loss=0.059 " + "l1=0.0337" + "l2=0.0254 f=-0.554 shape=(1, 9000, 1)
logits [[ 2.9673884 -3.091208   2.630729  -4.7230344]]
Iteration 700 of 1000: loss=0.0536 " + "l1=0.0253" + "l2=0.0284 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.8997238 -3.1171699  2.6470804 -4.660497 ]]
Iteration 800 of 1000: loss=0.0487 " + "l1=0.017" + "l2=0.0317 f=-0.561 shape=(1, 9000, 1)
logits [[ 2.830931  -3.1422472  2.6613624 -4.5950828]]
Iteration 900 of 1000: loss=0.043 " + "l1=0.00523" + "l2=0.0378 f=-0.564 shape=(1, 9000, 1)
logits [[ 2.730234  -3.1637087  2.677947  -4.500393 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0559 " + "l1=0.0559" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 3.4537883 -2.8109353  2.4370322 -5.1415634]]
Iteration 100 of 1000: loss=0.0513 " + "l1=0.0486" + "l2=0.00268 f=-0.524 shape=(1, 9000, 1)
logits [[ 3.3539784 -2.8665748  2.4704804 -5.055782 ]]
Iteration 200 of 1000: loss=0.0495 " + "l1=0.046" + "l2=0.00349 f=-0.528 shape=(1, 9000, 1)
logits [[ 3.3238127 -2.8902342  2.486591  -5.032042 ]]
Iteration 300 of 1000: loss=0.048 " + "l1=0.0436" + "l2=0.00442 f=-0.531 shape=(1, 9000, 1)
logits [[ 3.293542  -2.9100204  2.500422  -5.0093956]]
Iteration 400 of 1000: loss=0.0467 " + "l1=0.0415" + "l2=0.00518 f=-0.535 shape=(1, 9000, 1)
logits [[ 3.2675874 -2.9273329  2.5123727 -4.991087 ]]
Iteration 500 of 1000: loss=0.0455 " + "l1=0.0396" + "l2=0.00588 f=-0.537 shape=(1, 9000, 1)
logits [[ 3.241185  -2.93827    2.5203044 -4.9700007]]
Iteration 600 of 1000: loss=0.0445 " + "l1=0.0379" + "l2=0.0066 f=-0.538 shape=(1, 9000, 1)
logits [[ 3.2153568 -2.9469411  2.5268736 -4.9488964]]
Iteration 700 of 1000: loss=0.0434 " + "l1=0.0362" + "l2=0.00721 f=-0.541 shape=(1, 9000, 1)
logits [[ 3.1929147 -2.9594667  2.5353918 -4.93283  ]]
Iteration 800 of 1000: loss=0.0424 " + "l1=0.0346" + "l2=0.00779 f=-0.543 shape=(1, 9000, 1)
logits [[ 3.1725073 -2.9690046  2.5435188 -4.9197936]]
Iteration 900 of 1000: loss=0.0414 " + "l1=0.0331" + "l2=0.00828 f=-0.545 shape=(1, 9000, 1)
logits [[ 3.1502304 -2.9746122  2.5479958 -4.903666 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0788 " + "l1=0.0788" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 3.4537883 -2.8109353  2.4370322 -5.1415634]]
Iteration 100 of 1000: loss=0.0695 " + "l1=0.0641" + "l2=0.00536 f=-0.529 shape=(1, 9000, 1)
logits [[ 3.3160036 -2.8934884  2.4883668 -5.024946 ]]
Iteration 200 of 1000: loss=0.0658 " + "l1=0.0586" + "l2=0.00721 f=-0.533 shape=(1, 9000, 1)
logits [[ 3.2673686 -2.9267333  2.5110483 -4.9853435]]
Iteration 300 of 1000: loss=0.0628 " + "l1=0.054" + "l2=0.00878 f=-0.538 shape=(1, 9000, 1)
logits [[ 3.226167  -2.954319   2.5291438 -4.9549565]]
Iteration 400 of 1000: loss=0.0602 " + "l1=0.0502" + "l2=0.00999 f=-0.542 shape=(1, 9000, 1)
logits [[ 3.1940086 -2.9774299  2.5459633 -4.9324617]]
Iteration 500 of 1000: loss=0.0577 " + "l1=0.0464" + "l2=0.0113 f=-0.545 shape=(1, 9000, 1)
logits [[ 3.1601055 -2.99762    2.5615711 -4.9060283]]
Iteration 600 of 1000: loss=0.0551 " + "l1=0.0423" + "l2=0.0129 f=-0.548 shape=(1, 9000, 1)
logits [[ 3.1220112 -3.0179138  2.576661  -4.8719616]]
Iteration 700 of 1000: loss=0.0527 " + "l1=0.0382" + "l2=0.0145 f=-0.55 shape=(1, 9000, 1)
logits [[ 3.078502  -3.03168    2.5860262 -4.83243  ]]
Iteration 800 of 1000: loss=0.05 " + "l1=0.0331" + "l2=0.0169 f=-0.551 shape=(1, 9000, 1)
logits [[ 3.0232835 -3.047319   2.5964396 -4.778376 ]]
Iteration 900 of 1000: loss=0.047 " + "l1=0.0279" + "l2=0.0191 f=-0.554 shape=(1, 9000, 1)
logits [[ 2.9668977 -3.0605605  2.606828  -4.72722  ]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0902 " + "l1=0.0902" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 3.4537883 -2.8109353  2.4370322 -5.1415634]]
Iteration 100 of 1000: loss=0.078 " + "l1=0.0708" + "l2=0.00713 f=-0.531 shape=(1, 9000, 1)
logits [[ 3.2956285 -2.906159   2.4973798 -5.0088673]]
Iteration 200 of 1000: loss=0.0731 " + "l1=0.0636" + "l2=0.00946 f=-0.536 shape=(1, 9000, 1)
logits [[ 3.2387567 -2.9434807  2.5220287 -4.9629083]]
Iteration 300 of 1000: loss=0.0692 " + "l1=0.0579" + "l2=0.0113 f=-0.542 shape=(1, 9000, 1)
logits [[ 3.1957908 -2.97461    2.5431955 -4.930551 ]]
Iteration 400 of 1000: loss=0.0656 " + "l1=0.0523" + "l2=0.0133 f=-0.546 shape=(1, 9000, 1)
logits [[ 3.1550305 -3.0051274  2.5653532 -4.8973665]]
Iteration 500 of 1000: loss=0.0619 " + "l1=0.0462" + "l2=0.0157 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.1084678 -3.0356336  2.5875316 -4.8564367]]
Iteration 600 of 1000: loss=0.0581 " + "l1=0.0392" + "l2=0.0188 f=-0.551 shape=(1, 9000, 1)
logits [[ 3.0469775 -3.0582354  2.6048834 -4.799554 ]]
Iteration 700 of 1000: loss=0.054 " + "l1=0.0323" + "l2=0.0217 f=-0.554 shape=(1, 9000, 1)
logits [[ 2.9831085 -3.075865   2.618718  -4.741268 ]]
Iteration 800 of 1000: loss=0.05 " + "l1=0.0261" + "l2=0.0239 f=-0.556 shape=(1, 9000, 1)
logits [[ 2.9220407 -3.0894809  2.6277018 -4.682677 ]]
Iteration 900 of 1000: loss=0.0465 " + "l1=0.0205" + "l2=0.026 f=-0.558 shape=(1, 9000, 1)
logits [[ 2.8648987 -3.1021264  2.6340597 -4.6277895]]
--- 278.1261200904846 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.086 " + "l1=0.086" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 3.4537883 -2.8109353  2.4370322 -5.1415634]]
Iteration 100 of 1000: loss=0.0848 " + "l1=0.0841" + "l2=0.000704 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.3743174 -2.781285   2.3952687 -5.035136 ]]
Iteration 200 of 1000: loss=0.0845 " + "l1=0.0837" + "l2=0.000768 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.3578506 -2.7747984  2.38522   -5.0131187]]
Iteration 300 of 1000: loss=0.0842 " + "l1=0.0833" + "l2=0.000961 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.3387682 -2.7682736  2.3740644 -4.986937 ]]
Iteration 400 of 1000: loss=0.0839 " + "l1=0.0828" + "l2=0.00114 f=-0.51 shape=(1, 9000, 1)
logits [[ 3.3195877 -2.7618105  2.3628073 -4.960282 ]]
Iteration 500 of 1000: loss=0.0837 " + "l1=0.0824" + "l2=0.00136 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.30114   -2.7562664  2.3520625 -4.9345484]]
Iteration 600 of 1000: loss=0.0835 " + "l1=0.0819" + "l2=0.00159 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.2833877 -2.7513564  2.3417754 -4.9098663]]
Iteration 700 of 1000: loss=0.0834 " + "l1=0.0816" + "l2=0.00185 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.267536  -2.7476108  2.3328333 -4.8877907]]
Iteration 800 of 1000: loss=0.0833 " + "l1=0.0812" + "l2=0.00206 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.2526665 -2.7441647  2.324217  -4.8670826]]
Iteration 900 of 1000: loss=0.0831 " + "l1=0.0809" + "l2=0.00223 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.2383409 -2.741031   2.31563   -4.8473787]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.86 " + "l1=0.86" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 3.4537883 -2.8109353  2.4370322 -5.1415634]]
Iteration 100 of 1000: loss=0.739 " + "l1=0.671" + "l2=0.068 f=-0.466 shape=(1, 9000, 1)
logits [[ 2.660187  -2.5255203  2.0456421 -4.046131 ]]
Iteration 200 of 1000: loss=0.671 " + "l1=0.563" + "l2=0.107 f=-0.43 shape=(1, 9000, 1)
logits [[ 2.235344  -2.4124286  1.8572925 -3.3993943]]
Iteration 300 of 1000: loss=0.609 " + "l1=0.471" + "l2=0.138 f=-0.393 shape=(1, 9000, 1)
logits [[ 1.8671852 -2.3019993  1.7035282 -2.8411126]]
Iteration 400 of 1000: loss=0.563 " + "l1=0.415" + "l2=0.148 f=-0.37 shape=(1, 9000, 1)
logits [[ 1.6425127 -2.2390459  1.6270496 -2.509432 ]]
Iteration 500 of 1000: loss=0.529 " + "l1=0.388" + "l2=0.141 f=-0.352 shape=(1, 9000, 1)
logits [[ 1.5432345 -2.1576383  1.5430831 -2.338579 ]]
Iteration 600 of 1000: loss=0.504 " + "l1=0.369" + "l2=0.135 f=-0.341 shape=(1, 9000, 1)
logits [[ 1.4714898 -2.092773   1.4718597 -2.2163446]]
Iteration 700 of 1000: loss=0.484 " + "l1=0.349" + "l2=0.135 f=-0.33 shape=(1, 9000, 1)
logits [[ 1.4003518 -2.0355768  1.4024806 -2.086707 ]]
Iteration 800 of 1000: loss=0.467 " + "l1=0.332" + "l2=0.135 f=-0.32 shape=(1, 9000, 1)
logits [[ 1.344301  -1.9962555  1.3461696 -1.9747627]]
Iteration 900 of 1000: loss=0.453 " + "l1=0.317" + "l2=0.136 f=-0.313 shape=(1, 9000, 1)
logits [[ 1.2950757 -1.9713786  1.2968608 -1.873216 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.6 " + "l1=8.6" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 3.4537883 -2.8109353  2.4370322 -5.1415634]]
Iteration 100 of 1000: loss=2.37 " + "l1=0.0319" + "l2=2.34 f=-0.133 shape=(1, 9000, 1)
logits [[-0.13478409 -1.4984609   0.5659497   0.5340223 ]]
Iteration 200 of 1000: loss=1.63 " + "l1=0.0149" + "l2=1.61 f=-0.132 shape=(1, 9000, 1)
logits [[-0.07954899 -1.4420516   0.5048305   0.48989275]]
Iteration 300 of 1000: loss=1.33 " + "l1=0.00455" + "l2=1.32 f=-0.131 shape=(1, 9000, 1)
logits [[-0.05165973 -1.4451804   0.48781088  0.48326102]]
Iteration 400 of 1000: loss=1.14 " + "l1=0.0107" + "l2=1.13 f=-0.132 shape=(1, 9000, 1)
logits [[-0.01009983 -1.4704477   0.48249096  0.47180045]]
Iteration 500 of 1000: loss=1.01 " + "l1=0" + "l2=1.01 f=-0.135 shape=(1, 9000, 1)
logits [[-0.01550435 -1.468544    0.47123957  0.4733569 ]]
Iteration 600 of 1000: loss=0.911 " + "l1=0" + "l2=0.911 f=-0.132 shape=(1, 9000, 1)
logits [[-0.01141257 -1.4564115   0.46429187  0.47689554]]
Iteration 700 of 1000: loss=0.845 " + "l1=0" + "l2=0.845 f=-0.131 shape=(1, 9000, 1)
logits [[-1.4016237e-03 -1.4619999e+00  4.6263894e-01  4.7641137e-01]]
Iteration 800 of 1000: loss=0.8 " + "l1=0" + "l2=0.8 f=-0.132 shape=(1, 9000, 1)
logits [[-0.00456512 -1.4719523   0.4627163   0.48533264]]
Iteration 900 of 1000: loss=0.766 " + "l1=0" + "l2=0.766 f=-0.135 shape=(1, 9000, 1)
logits [[-0.00288681 -1.4722276   0.45897573  0.47729093]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.73 " + "l1=4.73" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 3.4537883 -2.8109353  2.4370322 -5.1415634]]
Iteration 100 of 1000: loss=2.12 " + "l1=1.24" + "l2=0.889 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.87969077 -1.8244231   1.0804224  -1.165144  ]]
Iteration 200 of 1000: loss=1.51 " + "l1=0.483" + "l2=1.03 f=-0.171 shape=(1, 9000, 1)
logits [[ 0.32142913 -1.6445394   0.7579506  -0.11960856]]
Iteration 300 of 1000: loss=1.16 " + "l1=0.08" + "l2=1.08 f=-0.139 shape=(1, 9000, 1)
logits [[ 0.05439396 -1.5512979   0.5431332   0.39761287]]
Iteration 400 of 1000: loss=0.934 " + "l1=0.00755" + "l2=0.927 f=-0.15 shape=(1, 9000, 1)
logits [[ 0.01705381 -1.5533981   0.47576302  0.46202844]]
Iteration 500 of 1000: loss=0.831 " + "l1=0.00887" + "l2=0.822 f=-0.152 shape=(1, 9000, 1)
logits [[ 0.04514306 -1.5618964   0.46236533  0.44623747]]
Iteration 600 of 1000: loss=0.767 " + "l1=0.00429" + "l2=0.763 f=-0.153 shape=(1, 9000, 1)
logits [[ 0.07019379 -1.5759295   0.4505419   0.44273943]]
Iteration 700 of 1000: loss=0.726 " + "l1=0.00982" + "l2=0.716 f=-0.156 shape=(1, 9000, 1)
logits [[ 0.09160408 -1.5891455   0.44649106  0.42863557]]
Iteration 800 of 1000: loss=0.689 " + "l1=0" + "l2=0.689 f=-0.155 shape=(1, 9000, 1)
logits [[ 0.08881089 -1.591128    0.43268293  0.44843397]]
Iteration 900 of 1000: loss=0.656 " + "l1=0" + "l2=0.656 f=-0.156 shape=(1, 9000, 1)
logits [[ 0.10741529 -1.5965108   0.43249914  0.43284777]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.79 " + "l1=2.79" + "l2=0 f=-0.515 shape=(1, 9000, 1)
logits [[ 3.4537883 -2.8109353  2.4370322 -5.1415634]]
Iteration 100 of 1000: loss=1.57 " + "l1=1.1" + "l2=0.471 f=-0.327 shape=(1, 9000, 1)
logits [[ 1.3654122 -2.0239303  1.3699552 -2.0184982]]
Iteration 200 of 1000: loss=1.29 " + "l1=0.798" + "l2=0.491 f=-0.262 shape=(1, 9000, 1)
logits [[ 1.0062048 -1.8610157  1.1312296 -1.3226981]]
Iteration 300 of 1000: loss=1.11 " + "l1=0.569" + "l2=0.54 f=-0.219 shape=(1, 9000, 1)
logits [[ 0.7247976  -1.7410444   0.94552577 -0.80465513]]
Iteration 400 of 1000: loss=0.975 " + "l1=0.415" + "l2=0.56 f=-0.189 shape=(1, 9000, 1)
logits [[ 0.5595101  -1.6915238   0.8262735  -0.45103404]]
Iteration 500 of 1000: loss=0.854 " + "l1=0.256" + "l2=0.598 f=-0.173 shape=(1, 9000, 1)
logits [[ 0.3644205  -1.6301056   0.6813271  -0.10584395]]
Iteration 600 of 1000: loss=0.763 " + "l1=0.141" + "l2=0.622 f=-0.163 shape=(1, 9000, 1)
logits [[ 0.24265102 -1.5870982   0.5634583   0.12828512]]
Iteration 700 of 1000: loss=0.691 " + "l1=0.0426" + "l2=0.648 f=-0.154 shape=(1, 9000, 1)
logits [[ 0.13927454 -1.5749971   0.4756142   0.3446152 ]]
Iteration 800 of 1000: loss=0.618 " + "l1=0.00153" + "l2=0.617 f=-0.145 shape=(1, 9000, 1)
logits [[ 0.12197015 -1.6031663   0.4525099   0.4478078 ]]
Iteration 900 of 1000: loss=0.573 " + "l1=0.00765" + "l2=0.566 f=-0.138 shape=(1, 9000, 1)
logits [[ 0.15431076 -1.637902    0.4778005   0.45425227]]
--- 306.424236536026 seconds ---
Adv result:3
Loading record A04383
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0715 " + "l1=0.0715" + "l2=0 f=-0.501 shape=(1, 9000, 1)
logits [[ 4.081577  -3.0659719  2.9399161 -5.957601 ]]
Iteration 100 of 1000: loss=0.0713 " + "l1=0.0711" + "l2=0.000187 f=-0.5 shape=(1, 9000, 1)
logits [[ 4.0584445 -3.0518982  2.9308615 -5.9354105]]
Iteration 200 of 1000: loss=0.0712 " + "l1=0.0711" + "l2=0.00016 f=-0.499 shape=(1, 9000, 1)
logits [[ 4.0581036 -3.0507178  2.9304492 -5.9352508]]
Iteration 300 of 1000: loss=0.0712 " + "l1=0.0711" + "l2=0.000198 f=-0.499 shape=(1, 9000, 1)
logits [[ 4.0561724 -3.0489514  2.9294896 -5.933639 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.715 " + "l1=0.715" + "l2=0 f=-0.501 shape=(1, 9000, 1)
logits [[ 4.081577  -3.0659719  2.9399161 -5.957601 ]]
Iteration 100 of 1000: loss=0.698 " + "l1=0.687" + "l2=0.0108 f=-0.493 shape=(1, 9000, 1)
logits [[ 3.90849   -2.9638724  2.870532  -5.7886996]]
Iteration 200 of 1000: loss=0.693 " + "l1=0.679" + "l2=0.0142 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.8615239 -2.931032   2.8488188 -5.7386465]]
Iteration 300 of 1000: loss=0.689 " + "l1=0.673" + "l2=0.0168 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.8217368 -2.9049199  2.8313043 -5.697537 ]]
Iteration 400 of 1000: loss=0.686 " + "l1=0.666" + "l2=0.0195 f=-0.485 shape=(1, 9000, 1)
logits [[ 3.780328  -2.8795083  2.815113  -5.6552877]]
Iteration 500 of 1000: loss=0.681 " + "l1=0.66" + "l2=0.0213 f=-0.482 shape=(1, 9000, 1)
logits [[ 3.7441874 -2.8566012  2.8009825 -5.617798 ]]
Iteration 600 of 1000: loss=0.676 " + "l1=0.654" + "l2=0.0229 f=-0.479 shape=(1, 9000, 1)
logits [[ 3.7040753 -2.831816   2.785214  -5.5739646]]
Iteration 700 of 1000: loss=0.67 " + "l1=0.645" + "l2=0.0251 f=-0.475 shape=(1, 9000, 1)
logits [[ 3.6503828 -2.8017657  2.764352  -5.511795 ]]
Iteration 800 of 1000: loss=0.662 " + "l1=0.634" + "l2=0.0278 f=-0.468 shape=(1, 9000, 1)
logits [[ 3.5752993 -2.7647004  2.7347322 -5.4192023]]
Iteration 900 of 1000: loss=0.653 " + "l1=0.624" + "l2=0.0295 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.5010984 -2.734531   2.7096584 -5.328431 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.15 " + "l1=7.15" + "l2=0 f=-0.501 shape=(1, 9000, 1)
logits [[ 4.081577  -3.0659719  2.9399161 -5.957601 ]]
Iteration 100 of 1000: loss=5.33 " + "l1=4.38" + "l2=0.945 f=-0.407 shape=(1, 9000, 1)
logits [[ 2.2745128 -2.1062124  2.2658348 -4.060515 ]]
Iteration 200 of 1000: loss=4.72 " + "l1=3.65" + "l2=1.07 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.9451342 -1.7032567  1.9475943 -3.5883868]]
Iteration 300 of 1000: loss=4.24 " + "l1=3.07" + "l2=1.17 f=-0.297 shape=(1, 9000, 1)
logits [[ 1.7169626 -1.3491777  1.7215729 -3.2788503]]
Iteration 400 of 1000: loss=3.89 " + "l1=2.65" + "l2=1.24 f=-0.267 shape=(1, 9000, 1)
logits [[ 1.5217717 -1.1313479  1.5203564 -2.980214 ]]
Iteration 500 of 1000: loss=3.69 " + "l1=2.47" + "l2=1.23 f=-0.239 shape=(1, 9000, 1)
logits [[ 1.4075541 -1.0536892  1.4131663 -2.7222874]]
Iteration 600 of 1000: loss=3.5 " + "l1=2.26" + "l2=1.25 f=-0.211 shape=(1, 9000, 1)
logits [[ 1.2808816  -0.95817107  1.2985966  -2.4655573 ]]
Iteration 700 of 1000: loss=3.31 " + "l1=2.06" + "l2=1.25 f=-0.193 shape=(1, 9000, 1)
logits [[ 1.1820254 -0.8739198  1.1864369 -2.2648175]]
Iteration 800 of 1000: loss=3.11 " + "l1=1.87" + "l2=1.24 f=-0.172 shape=(1, 9000, 1)
logits [[ 1.0727041 -0.7929218  1.0757344 -2.0454648]]
Iteration 900 of 1000: loss=2.88 " + "l1=1.62" + "l2=1.26 f=-0.149 shape=(1, 9000, 1)
logits [[ 0.92018557 -0.6890866   0.9301684  -1.7567475 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=71.5 " + "l1=71.5" + "l2=0 f=-0.501 shape=(1, 9000, 1)
logits [[ 4.081577  -3.0659719  2.9399161 -5.957601 ]]
Iteration 100 of 1000: loss=19.2 " + "l1=6.97" + "l2=12.2 f=-0.129 shape=(1, 9000, 1)
logits [[ 0.50015545 -0.16681619  0.5305397  -1.3810855 ]]
Iteration 200 of 1000: loss=10.6 " + "l1=0.0216" + "l2=10.6 f=-0.166 shape=(1, 9000, 1)
logits [[ 0.13404247  0.24685691  0.24902178 -1.2956892 ]]
Iteration 300 of 1000: loss=8.82 " + "l1=0.162" + "l2=8.65 f=-0.169 shape=(1, 9000, 1)
logits [[ 0.24085495  0.22915128  0.24537705 -1.3909919 ]]
Iteration 400 of 1000: loss=7.76 " + "l1=0.0437" + "l2=7.71 f=-0.187 shape=(1, 9000, 1)
logits [[ 0.10893011  0.26563576  0.27000993 -1.391175  ]]
Iteration 500 of 1000: loss=7.09 " + "l1=0.0727" + "l2=7.01 f=-0.167 shape=(1, 9000, 1)
logits [[ 0.22021604  0.23987035  0.24713702 -1.3739233 ]]
Iteration 600 of 1000: loss=6.66 " + "l1=0.107" + "l2=6.55 f=-0.166 shape=(1, 9000, 1)
logits [[ 0.19243908  0.23536028  0.24607803 -1.3359829 ]]
Iteration 700 of 1000: loss=6.27 " + "l1=0" + "l2=6.27 f=-0.166 shape=(1, 9000, 1)
logits [[ 0.11657175  0.24091862  0.23200153 -1.2518257 ]]
Iteration 800 of 1000: loss=5.93 " + "l1=0.0677" + "l2=5.86 f=-0.165 shape=(1, 9000, 1)
logits [[ 0.06990527  0.22793335  0.23470329 -1.1912589 ]]
Iteration 900 of 1000: loss=5.56 " + "l1=0" + "l2=5.56 f=-0.163 shape=(1, 9000, 1)
logits [[-0.04214971  0.2410727   0.23091048 -1.082066  ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=39.3 " + "l1=39.3" + "l2=0 f=-0.501 shape=(1, 9000, 1)
logits [[ 4.081577  -3.0659719  2.9399161 -5.957601 ]]
Iteration 100 of 1000: loss=15.3 " + "l1=8.13" + "l2=7.21 f=-0.21 shape=(1, 9000, 1)
logits [[ 0.9684812  -0.50898653  0.95940053 -2.2596922 ]]
Iteration 200 of 1000: loss=9.48 " + "l1=1.54" + "l2=7.94 f=-0.163 shape=(1, 9000, 1)
logits [[ 0.38973376  0.17615254  0.45694157 -1.6741034 ]]
Iteration 300 of 1000: loss=7.54 " + "l1=0.00137" + "l2=7.54 f=-0.169 shape=(1, 9000, 1)
logits [[ 0.23804903  0.30950177  0.30975094 -1.5333247 ]]
Iteration 400 of 1000: loss=6.65 " + "l1=0" + "l2=6.65 f=-0.163 shape=(1, 9000, 1)
logits [[ 0.21700338  0.27413708  0.2718115  -1.4146526 ]]
Iteration 500 of 1000: loss=6.09 " + "l1=0.0606" + "l2=6.03 f=-0.158 shape=(1, 9000, 1)
logits [[ 0.17194054  0.24387039  0.254882   -1.3042465 ]]
Iteration 600 of 1000: loss=5.62 " + "l1=0.00803" + "l2=5.61 f=-0.156 shape=(1, 9000, 1)
logits [[ 0.09912321  0.23155153  0.23301125 -1.1871372 ]]
Iteration 700 of 1000: loss=5.16 " + "l1=0" + "l2=5.16 f=-0.156 shape=(1, 9000, 1)
logits [[-0.05869436  0.2156384   0.21221511 -0.99406916]]
Iteration 800 of 1000: loss=4.73 " + "l1=0" + "l2=4.73 f=-0.16 shape=(1, 9000, 1)
logits [[-0.26588815  0.2239505   0.20816354 -0.8073668 ]]
Iteration 900 of 1000: loss=4.35 " + "l1=0" + "l2=4.35 f=-0.164 shape=(1, 9000, 1)
logits [[-0.35295492  0.20844023  0.20393479 -0.71425456]]
--- 262.44373846054077 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0114 " + "l1=0.0114" + "l2=0 f=-0.501 shape=(1, 9000, 1)
logits [[ 4.081577  -3.0659719  2.9399161 -5.957601 ]]
Iteration 100 of 1000: loss=0.0114 " + "l1=0.0113" + "l2=9.87e-05 f=-0.501 shape=(1, 9000, 1)
logits [[ 4.065831  -3.0650017  2.939109  -5.9426446]]
Iteration 200 of 1000: loss=0.0113 " + "l1=0.0113" + "l2=6.51e-05 f=-0.501 shape=(1, 9000, 1)
logits [[ 4.067252  -3.0651205  2.9394448 -5.9445577]]
Iteration 300 of 1000: loss=0.0113 " + "l1=0.0113" + "l2=7.21e-05 f=-0.501 shape=(1, 9000, 1)
logits [[ 4.066721  -3.0651357  2.939597  -5.944441 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.114 " + "l1=0.114" + "l2=0 f=-0.501 shape=(1, 9000, 1)
logits [[ 4.081577  -3.0659719  2.9399161 -5.957601 ]]
Iteration 100 of 1000: loss=0.109 " + "l1=0.105" + "l2=0.0038 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.982564  -3.0617437  2.935015  -5.865281 ]]
Iteration 200 of 1000: loss=0.107 " + "l1=0.103" + "l2=0.00465 f=-0.503 shape=(1, 9000, 1)
logits [[ 3.9623272 -3.06272    2.9361815 -5.8471155]]
Iteration 300 of 1000: loss=0.106 " + "l1=0.101" + "l2=0.00526 f=-0.503 shape=(1, 9000, 1)
logits [[ 3.9456627 -3.0634139  2.93704   -5.8328147]]
Iteration 400 of 1000: loss=0.105 " + "l1=0.0993" + "l2=0.00574 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.9299974 -3.0628004  2.9372869 -5.820202 ]]
Iteration 500 of 1000: loss=0.104 " + "l1=0.0976" + "l2=0.00624 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.9132836 -3.0613053  2.9368129 -5.806723 ]]
Iteration 600 of 1000: loss=0.103 " + "l1=0.096" + "l2=0.00676 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.8955593 -3.0593297  2.9354079 -5.791378 ]]
Iteration 700 of 1000: loss=0.102 " + "l1=0.0945" + "l2=0.00717 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.8784037 -3.0570009  2.9335768 -5.7760396]]
Iteration 800 of 1000: loss=0.1 " + "l1=0.0928" + "l2=0.00763 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.8599963 -3.0539665  2.9320395 -5.760176 ]]
Iteration 900 of 1000: loss=0.099 " + "l1=0.0905" + "l2=0.00851 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.8358197 -3.0496564  2.9310777 -5.7390885]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.14 " + "l1=1.14" + "l2=0 f=-0.501 shape=(1, 9000, 1)
logits [[ 4.081577  -3.0659719  2.9399161 -5.957601 ]]
Iteration 100 of 1000: loss=0.441 " + "l1=0.00756" + "l2=0.434 f=-0.502 shape=(1, 9000, 1)
logits [[ 2.898553  -2.9980128  2.890989  -4.7980103]]
Iteration 200 of 1000: loss=0.338 " + "l1=0" + "l2=0.338 f=-0.503 shape=(1, 9000, 1)
logits [[ 2.8966217 -3.0230792  2.8989155 -4.786164 ]]
Iteration 300 of 1000: loss=0.292 " + "l1=0" + "l2=0.292 f=-0.507 shape=(1, 9000, 1)
logits [[ 2.8882205 -3.0213807  2.8940413 -4.786935 ]]
Iteration 400 of 1000: loss=0.25 " + "l1=0.000441" + "l2=0.25 f=-0.507 shape=(1, 9000, 1)
logits [[ 2.8767302 -3.0121222  2.8762891 -4.7689395]]
Iteration 500 of 1000: loss=0.215 " + "l1=0.000404" + "l2=0.215 f=-0.507 shape=(1, 9000, 1)
logits [[ 2.8530734 -3.0091667  2.8526695 -4.7234135]]
Iteration 600 of 1000: loss=0.186 " + "l1=0.00245" + "l2=0.184 f=-0.505 shape=(1, 9000, 1)
logits [[ 2.8338654 -2.9931395  2.831414  -4.690657 ]]
Iteration 700 of 1000: loss=0.161 " + "l1=0" + "l2=0.161 f=-0.502 shape=(1, 9000, 1)
logits [[ 2.7998447 -2.9662142  2.807614  -4.64827  ]]
Iteration 800 of 1000: loss=0.141 " + "l1=0" + "l2=0.141 f=-0.499 shape=(1, 9000, 1)
logits [[ 2.7899978 -2.949811   2.7907796 -4.626463 ]]
Iteration 900 of 1000: loss=0.127 " + "l1=0" + "l2=0.127 f=-0.496 shape=(1, 9000, 1)
logits [[ 2.78206   -2.9423168  2.7838566 -4.607544 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.628 " + "l1=0.628" + "l2=0 f=-0.501 shape=(1, 9000, 1)
logits [[ 4.081577  -3.0659719  2.9399161 -5.957601 ]]
Iteration 100 of 1000: loss=0.446 " + "l1=0.307" + "l2=0.139 f=-0.503 shape=(1, 9000, 1)
logits [[ 3.461256 -3.02212   2.903621 -5.355351]]
Iteration 200 of 1000: loss=0.368 " + "l1=0.144" + "l2=0.224 f=-0.498 shape=(1, 9000, 1)
logits [[ 3.1650474 -2.9975436  2.9032211 -5.0618706]]
Iteration 300 of 1000: loss=0.314 " + "l1=0.0668" + "l2=0.247 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.012503  -2.9880893  2.891014  -4.913077 ]]
Iteration 400 of 1000: loss=0.247 " + "l1=0.00685" + "l2=0.24 f=-0.499 shape=(1, 9000, 1)
logits [[ 2.8755515 -2.9931412  2.8631005 -4.742187 ]]
Iteration 500 of 1000: loss=0.199 " + "l1=0.0047" + "l2=0.194 f=-0.5 shape=(1, 9000, 1)
logits [[ 2.840259  -2.9819288  2.8317099 -4.6893578]]
Iteration 600 of 1000: loss=0.154 " + "l1=0" + "l2=0.154 f=-0.501 shape=(1, 9000, 1)
logits [[ 2.8272955 -2.9882932  2.8289747 -4.6733356]]
Iteration 700 of 1000: loss=0.126 " + "l1=0.0019" + "l2=0.124 f=-0.502 shape=(1, 9000, 1)
logits [[ 2.8272333 -2.9740505  2.8237753 -4.683086 ]]
Iteration 800 of 1000: loss=0.107 " + "l1=0" + "l2=0.107 f=-0.5 shape=(1, 9000, 1)
logits [[ 2.8158514 -2.9620247  2.8161159 -4.6712384]]
Iteration 900 of 1000: loss=0.0938 " + "l1=0" + "l2=0.0938 f=-0.499 shape=(1, 9000, 1)
logits [[ 2.8106582 -2.9559028  2.8119774 -4.664398 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.371 " + "l1=0.371" + "l2=0 f=-0.501 shape=(1, 9000, 1)
logits [[ 4.081577  -3.0659719  2.9399161 -5.957601 ]]
Iteration 100 of 1000: loss=0.312 " + "l1=0.27" + "l2=0.0416 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.7543488 -3.056902   2.922884  -5.6457806]]
Iteration 200 of 1000: loss=0.294 " + "l1=0.24" + "l2=0.0544 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.659902  -3.0458798  2.9214876 -5.5578227]]
Iteration 300 of 1000: loss=0.276 " + "l1=0.211" + "l2=0.065 f=-0.508 shape=(1, 9000, 1)
logits [[ 3.563955  -3.030387   2.9143488 -5.4798794]]
Iteration 400 of 1000: loss=0.258 " + "l1=0.186" + "l2=0.0725 f=-0.508 shape=(1, 9000, 1)
logits [[ 3.4840639 -3.022124   2.9127374 -5.408601 ]]
Iteration 500 of 1000: loss=0.238 " + "l1=0.157" + "l2=0.0808 f=-0.508 shape=(1, 9000, 1)
logits [[ 3.389114 -3.012962  2.906625 -5.314952]]
Iteration 600 of 1000: loss=0.216 " + "l1=0.126" + "l2=0.0907 f=-0.503 shape=(1, 9000, 1)
logits [[ 3.2704725 -2.9859755  2.883908  -5.180687 ]]
Iteration 700 of 1000: loss=0.191 " + "l1=0.095" + "l2=0.0956 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.1537902 -2.966976   2.8615992 -5.043236 ]]
Iteration 800 of 1000: loss=0.154 " + "l1=0.0395" + "l2=0.115 f=-0.498 shape=(1, 9000, 1)
logits [[ 2.971931  -2.9711711  2.8504562 -4.8428006]]
Iteration 900 of 1000: loss=0.117 " + "l1=0.002" + "l2=0.115 f=-0.499 shape=(1, 9000, 1)
logits [[ 2.84638   -2.9655178  2.8402228 -4.7151527]]
--- 263.28935503959656 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.1 " + "l1=0.1" + "l2=0 f=-0.501 shape=(1, 9000, 1)
logits [[ 4.081577  -3.0659719  2.9399161 -5.957601 ]]
Iteration 100 of 1000: loss=0.1 " + "l1=0.0996" + "l2=0.000375 f=-0.499 shape=(1, 9000, 1)
logits [[ 4.0476203 -3.0598638  2.928619  -5.9124126]]
Iteration 200 of 1000: loss=0.0999 " + "l1=0.0995" + "l2=0.000352 f=-0.499 shape=(1, 9000, 1)
logits [[ 4.0453925 -3.0589314  2.927596  -5.909473 ]]
Iteration 300 of 1000: loss=0.0999 " + "l1=0.0995" + "l2=0.000408 f=-0.499 shape=(1, 9000, 1)
logits [[ 4.0418177 -3.0581014  2.9261808 -5.904647 ]]
Iteration 400 of 1000: loss=0.0998 " + "l1=0.0994" + "l2=0.000437 f=-0.499 shape=(1, 9000, 1)
logits [[ 4.0381064 -3.057255   2.9246972 -5.899572 ]]
Iteration 500 of 1000: loss=0.0998 " + "l1=0.0993" + "l2=0.000531 f=-0.498 shape=(1, 9000, 1)
logits [[ 4.034263  -3.0564072  2.9231548 -5.8943634]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1 " + "l1=1" + "l2=0 f=-0.501 shape=(1, 9000, 1)
logits [[ 4.081577  -3.0659719  2.9399161 -5.957601 ]]
Iteration 100 of 1000: loss=0.964 " + "l1=0.935" + "l2=0.0285 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.781849  -3.0051618  2.8359153 -5.5707855]]
Iteration 200 of 1000: loss=0.952 " + "l1=0.913" + "l2=0.039 f=-0.482 shape=(1, 9000, 1)
logits [[ 3.688615  -2.9788656  2.802568  -5.441923 ]]
Iteration 300 of 1000: loss=0.942 " + "l1=0.896" + "l2=0.046 f=-0.477 shape=(1, 9000, 1)
logits [[ 3.6171408 -2.9577603  2.7749217 -5.3415585]]
Iteration 400 of 1000: loss=0.93 " + "l1=0.879" + "l2=0.0511 f=-0.471 shape=(1, 9000, 1)
logits [[ 3.5476658 -2.9337766  2.7474427 -5.2460713]]
Iteration 500 of 1000: loss=0.913 " + "l1=0.853" + "l2=0.06 f=-0.461 shape=(1, 9000, 1)
logits [[ 3.4364288 -2.8892283  2.705806  -5.096664 ]]
Iteration 600 of 1000: loss=0.889 " + "l1=0.82" + "l2=0.0685 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.3006911 -2.8434014  2.654036  -4.9000845]]
Iteration 700 of 1000: loss=0.864 " + "l1=0.789" + "l2=0.0757 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.1728466 -2.8106894  2.6079223 -4.7142572]]
Iteration 800 of 1000: loss=0.842 " + "l1=0.761" + "l2=0.0804 f=-0.427 shape=(1, 9000, 1)
logits [[ 3.0621357 -2.7840812  2.565179  -4.5516253]]
Iteration 900 of 1000: loss=0.819 " + "l1=0.736" + "l2=0.0829 f=-0.419 shape=(1, 9000, 1)
logits [[ 2.9573624 -2.7582934  2.5255458 -4.3988986]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10 " + "l1=10" + "l2=0 f=-0.501 shape=(1, 9000, 1)
logits [[ 4.081577  -3.0659719  2.9399161 -5.957601 ]]
Iteration 100 of 1000: loss=5.91 " + "l1=4.09" + "l2=1.82 f=-0.288 shape=(1, 9000, 1)
logits [[ 1.5789117 -2.4898186  1.9248148 -2.1647942]]
Iteration 200 of 1000: loss=4 " + "l1=1.15" + "l2=2.85 f=-0.197 shape=(1, 9000, 1)
logits [[ 0.331311  -2.1982608  1.1153016 -0.0351207]]
Iteration 300 of 1000: loss=2.88 " + "l1=0.0168" + "l2=2.86 f=-0.15 shape=(1, 9000, 1)
logits [[-0.19326505 -2.0639677   0.8374764   0.8206912 ]]
Iteration 400 of 1000: loss=2.41 " + "l1=0.0189" + "l2=2.39 f=-0.135 shape=(1, 9000, 1)
logits [[-0.21718724 -1.9776031   0.8366036   0.8177272 ]]
Iteration 500 of 1000: loss=2.12 " + "l1=0.00767" + "l2=2.11 f=-0.131 shape=(1, 9000, 1)
logits [[-0.22294953 -1.9342716   0.81990117  0.8122292 ]]
Iteration 600 of 1000: loss=1.86 " + "l1=0.00558" + "l2=1.86 f=-0.133 shape=(1, 9000, 1)
logits [[-0.25063545 -1.8966731   0.80950475  0.8039283 ]]
Iteration 700 of 1000: loss=1.65 " + "l1=0" + "l2=1.65 f=-0.137 shape=(1, 9000, 1)
logits [[-0.28353542 -1.8860027   0.8097903   0.8111875 ]]
Iteration 800 of 1000: loss=1.49 " + "l1=0" + "l2=1.49 f=-0.136 shape=(1, 9000, 1)
logits [[-0.3022609 -1.8740066  0.8055402  0.8268112]]
Iteration 900 of 1000: loss=1.35 " + "l1=0" + "l2=1.35 f=-0.135 shape=(1, 9000, 1)
logits [[-0.30033186 -1.8504053   0.7977284   0.8139495 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.52 " + "l1=5.52" + "l2=0 f=-0.501 shape=(1, 9000, 1)
logits [[ 4.081577  -3.0659719  2.9399161 -5.957601 ]]
Iteration 100 of 1000: loss=3.99 " + "l1=3.19" + "l2=0.792 f=-0.382 shape=(1, 9000, 1)
logits [[ 2.3227048 -2.68709    2.3228157 -3.4848745]]
Iteration 200 of 1000: loss=3.51 " + "l1=2.53" + "l2=0.977 f=-0.299 shape=(1, 9000, 1)
logits [[ 1.8863481 -2.4863014  2.005258  -2.6002083]]
Iteration 300 of 1000: loss=3.02 " + "l1=1.86" + "l2=1.16 f=-0.228 shape=(1, 9000, 1)
logits [[ 1.3838954 -2.2756388  1.682702  -1.7021242]]
Iteration 400 of 1000: loss=2.52 " + "l1=1.04" + "l2=1.48 f=-0.208 shape=(1, 9000, 1)
logits [[ 0.696095  -2.1022625  1.2279937 -0.6544457]]
Iteration 500 of 1000: loss=2.06 " + "l1=0.55" + "l2=1.51 f=-0.178 shape=(1, 9000, 1)
logits [[ 0.27842113 -2.0129602   1.010871    0.01034879]]
Iteration 600 of 1000: loss=1.54 " + "l1=0.0288" + "l2=1.52 f=-0.125 shape=(1, 9000, 1)
logits [[-0.09123835 -1.8929696   0.7673142   0.71490675]]
Iteration 700 of 1000: loss=1.21 " + "l1=0" + "l2=1.21 f=-0.103 shape=(1, 9000, 1)
logits [[-0.05754773 -1.8315679   0.72932696  0.74643236]]
Iteration 800 of 1000: loss=1.06 " + "l1=0" + "l2=1.06 f=-0.096 shape=(1, 9000, 1)
logits [[-0.03007659 -1.8265443   0.7337296   0.73907644]]
Iteration 900 of 1000: loss=0.964 " + "l1=0.00783" + "l2=0.956 f=-0.0935 shape=(1, 9000, 1)
logits [[-0.01613716 -1.824575    0.7404929   0.7262493 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.26 " + "l1=3.26" + "l2=0 f=-0.501 shape=(1, 9000, 1)
logits [[ 4.081577  -3.0659719  2.9399161 -5.957601 ]]
Iteration 100 of 1000: loss=2.73 " + "l1=2.35" + "l2=0.375 f=-0.435 shape=(1, 9000, 1)
logits [[ 2.8687444 -2.807569   2.565594  -4.366868 ]]
Iteration 200 of 1000: loss=2.49 " + "l1=1.97" + "l2=0.52 f=-0.394 shape=(1, 9000, 1)
logits [[ 2.4001076 -2.7216625  2.398896  -3.6539152]]
Iteration 300 of 1000: loss=2.28 " + "l1=1.79" + "l2=0.488 f=-0.348 shape=(1, 9000, 1)
logits [[ 2.2332432 -2.5645     2.2309375 -3.2897305]]
Iteration 400 of 1000: loss=2.13 " + "l1=1.64" + "l2=0.488 f=-0.309 shape=(1, 9000, 1)
logits [[ 2.085454  -2.4608433  2.0939693 -2.9548395]]
Iteration 500 of 1000: loss=1.99 " + "l1=1.46" + "l2=0.524 f=-0.264 shape=(1, 9000, 1)
logits [[ 1.8941512 -2.3170907  1.9342862 -2.5676584]]
Iteration 600 of 1000: loss=1.85 " + "l1=1.31" + "l2=0.535 f=-0.23 shape=(1, 9000, 1)
logits [[ 1.7216046 -2.2145338  1.8064876 -2.2333872]]
Iteration 700 of 1000: loss=1.69 " + "l1=1.14" + "l2=0.552 f=-0.188 shape=(1, 9000, 1)
logits [[ 1.4878738 -2.0895543  1.6741062 -1.8238344]]
Iteration 800 of 1000: loss=1.52 " + "l1=0.943" + "l2=0.575 f=-0.159 shape=(1, 9000, 1)
logits [[ 1.2271719 -2.0087543  1.5245346 -1.3782091]]
Iteration 900 of 1000: loss=1.28 " + "l1=0.575" + "l2=0.702 f=-0.146 shape=(1, 9000, 1)
logits [[ 0.6894523 -1.8765407  1.1859671 -0.5841852]]
--- 277.78432726860046 seconds ---
Adv result:3
Loading record A04431
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0629 " + "l1=0.0629" + "l2=0 f=-0.79 shape=(1, 9000, 1)
logits [[ 4.3567333 -1.9314232  2.2549744 -7.839416 ]]
Iteration 100 of 1000: loss=0.062 " + "l1=0.0615" + "l2=0.000565 f=-0.788 shape=(1, 9000, 1)
logits [[ 4.270653  -1.8777987  2.232898  -7.7767787]]
Iteration 200 of 1000: loss=0.0618 " + "l1=0.0612" + "l2=0.000605 f=-0.788 shape=(1, 9000, 1)
logits [[ 4.2519703 -1.8668141  2.2289515 -7.7669716]]
Iteration 300 of 1000: loss=0.0616 " + "l1=0.0608" + "l2=0.000741 f=-0.789 shape=(1, 9000, 1)
logits [[ 4.230654  -1.8541436  2.2241013 -7.7549863]]
Iteration 400 of 1000: loss=0.0614 " + "l1=0.0606" + "l2=0.000848 f=-0.789 shape=(1, 9000, 1)
logits [[ 4.212785  -1.8432975  2.2196138 -7.745246 ]]
Iteration 500 of 1000: loss=0.0613 " + "l1=0.0603" + "l2=0.00101 f=-0.789 shape=(1, 9000, 1)
logits [[ 4.194604  -1.8322954  2.2153008 -7.7355714]]
Iteration 600 of 1000: loss=0.0611 " + "l1=0.0599" + "l2=0.00118 f=-0.79 shape=(1, 9000, 1)
logits [[ 4.1736917 -1.8205117  2.2122474 -7.7249246]]
Iteration 700 of 1000: loss=0.061 " + "l1=0.0597" + "l2=0.00138 f=-0.79 shape=(1, 9000, 1)
logits [[ 4.154901  -1.8101889  2.2094781 -7.716089 ]]
Iteration 800 of 1000: loss=0.0609 " + "l1=0.0594" + "l2=0.00154 f=-0.791 shape=(1, 9000, 1)
logits [[ 4.1364713 -1.8004111  2.206841  -7.7072787]]
Iteration 900 of 1000: loss=0.0608 " + "l1=0.0591" + "l2=0.00167 f=-0.792 shape=(1, 9000, 1)
logits [[ 4.1211414 -1.7918606  2.2038527 -7.699479 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.629 " + "l1=0.629" + "l2=0 f=-0.79 shape=(1, 9000, 1)
logits [[ 4.3567333 -1.9314232  2.2549744 -7.839416 ]]
Iteration 100 of 1000: loss=0.526 " + "l1=0.464" + "l2=0.0617 f=-0.796 shape=(1, 9000, 1)
logits [[ 3.3087957 -1.3311281  2.097334  -7.2592993]]
Iteration 200 of 1000: loss=0.478 " + "l1=0.388" + "l2=0.09 f=-0.825 shape=(1, 9000, 1)
logits [[ 2.8044412 -1.0767733  2.0557408 -7.084939 ]]
Iteration 300 of 1000: loss=0.44 " + "l1=0.326" + "l2=0.115 f=-0.846 shape=(1, 9000, 1)
logits [[ 2.4049482 -0.8515005  2.0063446 -6.942595 ]]
Iteration 400 of 1000: loss=0.403 " + "l1=0.26" + "l2=0.143 f=-0.856 shape=(1, 9000, 1)
logits [[ 2.0094655 -0.5925851  1.945486  -6.7854786]]
Iteration 500 of 1000: loss=0.369 " + "l1=0.228" + "l2=0.141 f=-0.844 shape=(1, 9000, 1)
logits [[ 1.8808091  -0.40265605  1.8798121  -6.734345  ]]
Iteration 600 of 1000: loss=0.347 " + "l1=0.21" + "l2=0.137 f=-0.832 shape=(1, 9000, 1)
logits [[ 1.8178574  -0.28697133  1.8093266  -6.6682277 ]]
Iteration 700 of 1000: loss=0.33 " + "l1=0.192" + "l2=0.139 f=-0.827 shape=(1, 9000, 1)
logits [[ 1.7390602  -0.17949647  1.7348284  -6.603693  ]]
Iteration 800 of 1000: loss=0.317 " + "l1=0.18" + "l2=0.137 f=-0.822 shape=(1, 9000, 1)
logits [[ 1.6809652  -0.11094134  1.6868536  -6.5465765 ]]
Iteration 900 of 1000: loss=0.305 " + "l1=0.171" + "l2=0.134 f=-0.816 shape=(1, 9000, 1)
logits [[ 1.648474   -0.06552338  1.6376425  -6.4846587 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.29 " + "l1=6.29" + "l2=0 f=-0.79 shape=(1, 9000, 1)
logits [[ 4.3567333 -1.9314232  2.2549744 -7.839416 ]]
Iteration 100 of 1000: loss=1.58 " + "l1=0.594" + "l2=0.988 f=-0.828 shape=(1, 9000, 1)
logits [[ 0.9666009  0.4270025  1.0213867 -5.725588 ]]
Iteration 200 of 1000: loss=0.874 " + "l1=0.00208" + "l2=0.872 f=-0.849 shape=(1, 9000, 1)
logits [[ 0.47198173  0.7817918   0.7838757  -5.434524  ]]
Iteration 300 of 1000: loss=0.71 " + "l1=0.00351" + "l2=0.706 f=-0.853 shape=(1, 9000, 1)
logits [[ 0.51037097  0.7603058   0.76381534 -5.448385  ]]
Iteration 400 of 1000: loss=0.625 " + "l1=0" + "l2=0.625 f=-0.847 shape=(1, 9000, 1)
logits [[ 0.5346431   0.744434    0.73308694 -5.3997817 ]]
Iteration 500 of 1000: loss=0.548 " + "l1=0.00369" + "l2=0.544 f=-0.839 shape=(1, 9000, 1)
logits [[ 0.5861864   0.70957655  0.713271   -5.366345  ]]
Iteration 600 of 1000: loss=0.492 " + "l1=0" + "l2=0.492 f=-0.835 shape=(1, 9000, 1)
logits [[ 0.6077577   0.6915481   0.68840766 -5.326921  ]]
Iteration 700 of 1000: loss=0.454 " + "l1=0" + "l2=0.454 f=-0.828 shape=(1, 9000, 1)
logits [[ 0.6435884  0.6734671  0.6680959 -5.2956204]]
Iteration 800 of 1000: loss=0.432 " + "l1=0" + "l2=0.432 f=-0.837 shape=(1, 9000, 1)
logits [[ 0.5467477   0.6863734   0.66582674 -5.245938  ]]
Iteration 900 of 1000: loss=0.401 " + "l1=0" + "l2=0.401 f=-0.821 shape=(1, 9000, 1)
logits [[ 0.62391245  0.6575554   0.64690244 -5.2139616 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.46 " + "l1=3.46" + "l2=0 f=-0.79 shape=(1, 9000, 1)
logits [[ 4.3567333 -1.9314232  2.2549744 -7.839416 ]]
Iteration 100 of 1000: loss=1.28 " + "l1=0.686" + "l2=0.598 f=-0.83 shape=(1, 9000, 1)
logits [[ 1.3647314   0.12530452  1.3732963  -6.1821384 ]]
Iteration 200 of 1000: loss=0.936 " + "l1=0.377" + "l2=0.559 f=-0.824 shape=(1, 9000, 1)
logits [[ 1.0725099   0.43761176  1.1236757  -5.9316115 ]]
Iteration 300 of 1000: loss=0.744 " + "l1=0.17" + "l2=0.574 f=-0.811 shape=(1, 9000, 1)
logits [[ 0.87204266  0.6440993   0.95258194 -5.7114267 ]]
Iteration 400 of 1000: loss=0.619 " + "l1=0.0311" + "l2=0.588 f=-0.834 shape=(1, 9000, 1)
logits [[ 0.6302924  0.7463035  0.8029289 -5.514823 ]]
Iteration 500 of 1000: loss=0.492 " + "l1=0" + "l2=0.492 f=-0.834 shape=(1, 9000, 1)
logits [[ 0.59272444  0.7472852   0.7404245  -5.4177766 ]]
Iteration 600 of 1000: loss=0.428 " + "l1=0.00202" + "l2=0.426 f=-0.824 shape=(1, 9000, 1)
logits [[ 0.6443414  0.7079561  0.7116323 -5.3590245]]
Iteration 700 of 1000: loss=0.392 " + "l1=0.00292" + "l2=0.389 f=-0.819 shape=(1, 9000, 1)
logits [[ 0.59581405  0.6995829   0.7048942  -5.2769203 ]]
Iteration 800 of 1000: loss=0.363 " + "l1=0" + "l2=0.363 f=-0.802 shape=(1, 9000, 1)
logits [[ 0.656066   0.6691964  0.6688829 -5.2036858]]
Iteration 900 of 1000: loss=0.343 " + "l1=0.000258" + "l2=0.343 f=-0.8 shape=(1, 9000, 1)
logits [[ 0.6223886  0.6631178  0.6635869 -5.1480227]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.04 " + "l1=2.04" + "l2=0 f=-0.79 shape=(1, 9000, 1)
logits [[ 4.3567333 -1.9314232  2.2549744 -7.839416 ]]
Iteration 100 of 1000: loss=1.05 " + "l1=0.674" + "l2=0.375 f=-0.839 shape=(1, 9000, 1)
logits [[ 1.7678347 -0.3046904  1.7580649 -6.575931 ]]
Iteration 200 of 1000: loss=0.796 " + "l1=0.442" + "l2=0.354 f=-0.832 shape=(1, 9000, 1)
logits [[ 1.4501743   0.10190879  1.4610851  -6.3410707 ]]
Iteration 300 of 1000: loss=0.679 " + "l1=0.339" + "l2=0.34 f=-0.817 shape=(1, 9000, 1)
logits [[ 1.3200947  0.29421    1.3384283 -6.2195272]]
Iteration 400 of 1000: loss=0.589 " + "l1=0.255" + "l2=0.334 f=-0.815 shape=(1, 9000, 1)
logits [[ 1.1996565  0.431661   1.2154434 -6.107321 ]]
Iteration 500 of 1000: loss=0.521 " + "l1=0.182" + "l2=0.339 f=-0.826 shape=(1, 9000, 1)
logits [[ 1.0474163   0.52845323  1.0883048  -5.967967  ]]
Iteration 600 of 1000: loss=0.458 " + "l1=0.119" + "l2=0.34 f=-0.829 shape=(1, 9000, 1)
logits [[ 0.912488    0.605486    0.97015774 -5.8042045 ]]
Iteration 700 of 1000: loss=0.416 " + "l1=0.0867" + "l2=0.329 f=-0.815 shape=(1, 9000, 1)
logits [[ 0.88340163  0.62735933  0.8940451  -5.6656938 ]]
Iteration 800 of 1000: loss=0.388 " + "l1=0.0597" + "l2=0.328 f=-0.808 shape=(1, 9000, 1)
logits [[ 0.82456565  0.6453032   0.82912254 -5.5292106 ]]
Iteration 900 of 1000: loss=0.364 " + "l1=0.0335" + "l2=0.331 f=-0.804 shape=(1, 9000, 1)
logits [[ 0.74598616  0.6567116   0.7597143  -5.3771186 ]]
--- 307.37566471099854 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.021 " + "l1=0.021" + "l2=0 f=-0.79 shape=(1, 9000, 1)
logits [[ 4.3567333 -1.9314232  2.2549744 -7.839416 ]]
Iteration 100 of 1000: loss=0.0206 " + "l1=0.0203" + "l2=0.00029 f=-0.793 shape=(1, 9000, 1)
logits [[ 4.2966423 -1.9253656  2.2624464 -7.807101 ]]
Iteration 200 of 1000: loss=0.0205 " + "l1=0.0202" + "l2=0.000287 f=-0.794 shape=(1, 9000, 1)
logits [[ 4.286432  -1.9229023  2.262701  -7.803096 ]]
Iteration 300 of 1000: loss=0.0204 " + "l1=0.0201" + "l2=0.000373 f=-0.796 shape=(1, 9000, 1)
logits [[ 4.2709856 -1.9199219  2.2639608 -7.797195 ]]
Iteration 400 of 1000: loss=0.0204 " + "l1=0.0199" + "l2=0.000451 f=-0.797 shape=(1, 9000, 1)
logits [[ 4.257104  -1.9176458  2.2655067 -7.792262 ]]
Iteration 500 of 1000: loss=0.0203 " + "l1=0.0198" + "l2=0.000529 f=-0.798 shape=(1, 9000, 1)
logits [[ 4.243896  -1.9156467  2.2672007 -7.787936 ]]
Iteration 600 of 1000: loss=0.0203 " + "l1=0.0196" + "l2=0.000658 f=-0.799 shape=(1, 9000, 1)
logits [[ 4.232922  -1.9145192  2.2689278 -7.784904 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.21 " + "l1=0.21" + "l2=0 f=-0.79 shape=(1, 9000, 1)
logits [[ 4.3567333 -1.9314232  2.2549744 -7.839416 ]]
Iteration 100 of 1000: loss=0.167 " + "l1=0.142" + "l2=0.0257 f=-0.827 shape=(1, 9000, 1)
logits [[ 3.7232707 -1.7819322  2.3052666 -7.5531955]]
Iteration 200 of 1000: loss=0.135 " + "l1=0.0879" + "l2=0.0469 f=-0.865 shape=(1, 9000, 1)
logits [[ 3.2567894 -1.671274   2.3779874 -7.4222507]]
Iteration 300 of 1000: loss=0.11 " + "l1=0.0483" + "l2=0.0618 f=-0.897 shape=(1, 9000, 1)
logits [[ 2.940188  -1.6385278  2.4568996 -7.3476863]]
Iteration 400 of 1000: loss=0.0931 " + "l1=0.0157" + "l2=0.0774 f=-0.926 shape=(1, 9000, 1)
logits [[ 2.6817086 -1.6176139  2.5245745 -7.293033 ]]
Iteration 500 of 1000: loss=0.0803 " + "l1=0.001" + "l2=0.0793 f=-0.943 shape=(1, 9000, 1)
logits [[ 2.5753176 -1.631651   2.5652711 -7.2795825]]
Iteration 600 of 1000: loss=0.0741 " + "l1=0.00109" + "l2=0.073 f=-0.946 shape=(1, 9000, 1)
logits [[ 2.5804107 -1.6456277  2.5695016 -7.2868023]]
Iteration 700 of 1000: loss=0.0696 " + "l1=0" + "l2=0.0696 f=-0.948 shape=(1, 9000, 1)
logits [[ 2.5725148 -1.6520246  2.5754058 -7.2874203]]
Iteration 800 of 1000: loss=0.067 " + "l1=0.000711" + "l2=0.0662 f=-0.948 shape=(1, 9000, 1)
logits [[ 2.5833972 -1.662981   2.5762882 -7.2900004]]
Iteration 900 of 1000: loss=0.0648 " + "l1=0" + "l2=0.0648 f=-0.949 shape=(1, 9000, 1)
logits [[ 2.573274  -1.6644629  2.5780046 -7.283474 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.116 " + "l1=0.116" + "l2=0 f=-0.79 shape=(1, 9000, 1)
logits [[ 4.3567333 -1.9314232  2.2549744 -7.839416 ]]
Iteration 100 of 1000: loss=0.104 " + "l1=0.0978" + "l2=0.00633 f=-0.809 shape=(1, 9000, 1)
logits [[ 4.0642996 -1.8842125  2.2863882 -7.702001 ]]
Iteration 200 of 1000: loss=0.0986 " + "l1=0.0892" + "l2=0.00934 f=-0.82 shape=(1, 9000, 1)
logits [[ 3.9180305 -1.8463935  2.2960532 -7.6462903]]
Iteration 300 of 1000: loss=0.0925 " + "l1=0.0789" + "l2=0.0137 f=-0.833 shape=(1, 9000, 1)
logits [[ 3.7422643 -1.7983173  2.3083844 -7.584833 ]]
Iteration 400 of 1000: loss=0.0863 " + "l1=0.0684" + "l2=0.0179 f=-0.846 shape=(1, 9000, 1)
logits [[ 3.5767813 -1.7583345  2.3337262 -7.5376906]]
Iteration 500 of 1000: loss=0.0811 " + "l1=0.0592" + "l2=0.0219 f=-0.859 shape=(1, 9000, 1)
logits [[ 3.4351864 -1.7305108  2.3585396 -7.497868 ]]
Iteration 600 of 1000: loss=0.0773 " + "l1=0.0519" + "l2=0.0254 f=-0.869 shape=(1, 9000, 1)
logits [[ 3.3279474 -1.7168447  2.384908  -7.4710317]]
Iteration 700 of 1000: loss=0.0745 " + "l1=0.0467" + "l2=0.0278 f=-0.877 shape=(1, 9000, 1)
logits [[ 3.2560484 -1.7136915  2.4072766 -7.455966 ]]
Iteration 800 of 1000: loss=0.0722 " + "l1=0.0417" + "l2=0.0305 f=-0.886 shape=(1, 9000, 1)
logits [[ 3.188402  -1.7178391  2.429823  -7.443281 ]]
Iteration 900 of 1000: loss=0.0701 " + "l1=0.0374" + "l2=0.0327 f=-0.892 shape=(1, 9000, 1)
logits [[ 3.1263063 -1.7129979  2.4456189 -7.42772  ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.163 " + "l1=0.163" + "l2=0 f=-0.79 shape=(1, 9000, 1)
logits [[ 4.3567333 -1.9314232  2.2549744 -7.839416 ]]
Iteration 100 of 1000: loss=0.139 " + "l1=0.125" + "l2=0.0139 f=-0.816 shape=(1, 9000, 1)
logits [[ 3.9093566 -1.8399689  2.29526   -7.6304355]]
Iteration 200 of 1000: loss=0.124 " + "l1=0.1" + "l2=0.0234 f=-0.837 shape=(1, 9000, 1)
logits [[ 3.6089284 -1.7503024  2.3170803 -7.524976 ]]
Iteration 300 of 1000: loss=0.108 " + "l1=0.0738" + "l2=0.034 f=-0.863 shape=(1, 9000, 1)
logits [[ 3.319238  -1.6892687  2.3667712 -7.446919 ]]
Iteration 400 of 1000: loss=0.0965 " + "l1=0.0536" + "l2=0.0428 f=-0.884 shape=(1, 9000, 1)
logits [[ 3.1146698 -1.6731651  2.4227242 -7.400989 ]]
Iteration 500 of 1000: loss=0.0884 " + "l1=0.0394" + "l2=0.049 f=-0.9 shape=(1, 9000, 1)
logits [[ 2.9717538 -1.665006   2.4628646 -7.3697286]]
Iteration 600 of 1000: loss=0.0818 " + "l1=0.0259" + "l2=0.056 f=-0.916 shape=(1, 9000, 1)
logits [[ 2.83566   -1.658472   2.5020685 -7.3446283]]
Iteration 700 of 1000: loss=0.0756 " + "l1=0.0138" + "l2=0.0618 f=-0.93 shape=(1, 9000, 1)
logits [[ 2.709954  -1.6444637  2.5314398 -7.315361 ]]
Iteration 800 of 1000: loss=0.0706 " + "l1=0.00543" + "l2=0.0652 f=-0.94 shape=(1, 9000, 1)
logits [[ 2.625478  -1.6465951  2.5554721 -7.295107 ]]
Iteration 900 of 1000: loss=0.0668 " + "l1=0.00122" + "l2=0.0656 f=-0.947 shape=(1, 9000, 1)
logits [[ 2.5863194 -1.6576743  2.5705535 -7.2862406]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.139 " + "l1=0.139" + "l2=0 f=-0.79 shape=(1, 9000, 1)
logits [[ 4.3567333 -1.9314232  2.2549744 -7.839416 ]]
Iteration 100 of 1000: loss=0.122 " + "l1=0.113" + "l2=0.0094 f=-0.813 shape=(1, 9000, 1)
logits [[ 3.996717  -1.8675004  2.2912266 -7.6715255]]
Iteration 200 of 1000: loss=0.113 " + "l1=0.0978" + "l2=0.0153 f=-0.828 shape=(1, 9000, 1)
logits [[ 3.7784803 -1.8062828  2.3028357 -7.587536 ]]
Iteration 300 of 1000: loss=0.102 " + "l1=0.0804" + "l2=0.022 f=-0.845 shape=(1, 9000, 1)
logits [[ 3.5454385 -1.7414892  2.3315    -7.5156403]]
Iteration 400 of 1000: loss=0.0932 " + "l1=0.0643" + "l2=0.0289 f=-0.863 shape=(1, 9000, 1)
logits [[ 3.3408747 -1.7035394  2.3702922 -7.460706 ]]
Iteration 500 of 1000: loss=0.0865 " + "l1=0.0519" + "l2=0.0346 f=-0.879 shape=(1, 9000, 1)
logits [[ 3.1947117 -1.6927251  2.4109972 -7.4282694]]
Iteration 600 of 1000: loss=0.0815 " + "l1=0.042" + "l2=0.0395 f=-0.893 shape=(1, 9000, 1)
logits [[ 3.077838  -1.688745   2.4444296 -7.4049015]]
Iteration 700 of 1000: loss=0.0776 " + "l1=0.0347" + "l2=0.0429 f=-0.903 shape=(1, 9000, 1)
logits [[ 2.9934723 -1.6861173  2.46973   -7.387854 ]]
Iteration 800 of 1000: loss=0.0742 " + "l1=0.0273" + "l2=0.0469 f=-0.912 shape=(1, 9000, 1)
logits [[ 2.9050837 -1.6801184  2.493246  -7.3659472]]
Iteration 900 of 1000: loss=0.0707 " + "l1=0.0189" + "l2=0.0518 f=-0.923 shape=(1, 9000, 1)
logits [[ 2.8028307 -1.6715692  2.5175877 -7.3410535]]
--- 285.7915961742401 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.122 " + "l1=0.122" + "l2=0 f=-0.79 shape=(1, 9000, 1)
logits [[ 4.3567333 -1.9314232  2.2549744 -7.839416 ]]
Iteration 100 of 1000: loss=0.121 " + "l1=0.12" + "l2=0.000722 f=-0.788 shape=(1, 9000, 1)
logits [[ 4.2574434 -1.892116   2.2362475 -7.752573 ]]
Iteration 200 of 1000: loss=0.12 " + "l1=0.12" + "l2=0.000808 f=-0.788 shape=(1, 9000, 1)
logits [[ 4.233337  -1.8833531  2.2321122 -7.735699 ]]
Iteration 300 of 1000: loss=0.12 " + "l1=0.119" + "l2=0.000977 f=-0.789 shape=(1, 9000, 1)
logits [[ 4.209715  -1.8754536  2.2280097 -7.7189016]]
Iteration 400 of 1000: loss=0.12 " + "l1=0.119" + "l2=0.00116 f=-0.79 shape=(1, 9000, 1)
logits [[ 4.1872773 -1.8678294  2.2241304 -7.702969 ]]
Iteration 500 of 1000: loss=0.12 " + "l1=0.119" + "l2=0.00135 f=-0.791 shape=(1, 9000, 1)
logits [[ 4.166528  -1.8607904  2.2205217 -7.688787 ]]
Iteration 600 of 1000: loss=0.12 " + "l1=0.118" + "l2=0.00156 f=-0.791 shape=(1, 9000, 1)
logits [[ 4.1460032 -1.8540504  2.2174861 -7.6753902]]
Iteration 700 of 1000: loss=0.12 " + "l1=0.118" + "l2=0.00167 f=-0.792 shape=(1, 9000, 1)
logits [[ 4.1274705 -1.847281   2.2147424 -7.664151 ]]
Iteration 800 of 1000: loss=0.12 " + "l1=0.118" + "l2=0.00192 f=-0.793 shape=(1, 9000, 1)
logits [[ 4.109559  -1.8409628  2.2122915 -7.653376 ]]
Iteration 900 of 1000: loss=0.119 " + "l1=0.117" + "l2=0.00206 f=-0.794 shape=(1, 9000, 1)
logits [[ 4.0917716 -1.8346484  2.2098536 -7.6425986]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.22 " + "l1=1.22" + "l2=0 f=-0.79 shape=(1, 9000, 1)
logits [[ 4.3567333 -1.9314232  2.2549744 -7.839416 ]]
Iteration 100 of 1000: loss=1.1 " + "l1=1.04" + "l2=0.0641 f=-0.799 shape=(1, 9000, 1)
logits [[ 3.2913373 -1.4998026  2.1174273 -7.10313  ]]
Iteration 200 of 1000: loss=1.06 " + "l1=0.965" + "l2=0.0906 f=-0.83 shape=(1, 9000, 1)
logits [[ 2.7874048 -1.3445635  2.096561  -6.860154 ]]
Iteration 300 of 1000: loss=1.02 " + "l1=0.918" + "l2=0.107 f=-0.849 shape=(1, 9000, 1)
logits [[ 2.4918275 -1.2654523  2.0612016 -6.68455  ]]
Iteration 400 of 1000: loss=0.995 " + "l1=0.866" + "l2=0.129 f=-0.869 shape=(1, 9000, 1)
logits [[ 2.166725  -1.1542277  2.0055232 -6.4924874]]
Iteration 500 of 1000: loss=0.968 " + "l1=0.825" + "l2=0.143 f=-0.878 shape=(1, 9000, 1)
logits [[ 1.9376173 -1.0578598  1.9221934 -6.3123546]]
Iteration 600 of 1000: loss=0.937 " + "l1=0.792" + "l2=0.144 f=-0.878 shape=(1, 9000, 1)
logits [[ 1.7995338 -0.9814268  1.7940954 -6.1244154]]
Iteration 700 of 1000: loss=0.907 " + "l1=0.763" + "l2=0.144 f=-0.879 shape=(1, 9000, 1)
logits [[ 1.6716264  -0.89889526  1.6713105  -5.958745  ]]
Iteration 800 of 1000: loss=0.874 " + "l1=0.729" + "l2=0.145 f=-0.874 shape=(1, 9000, 1)
logits [[ 1.5250956  -0.78124946  1.5224586  -5.760837  ]]
Iteration 900 of 1000: loss=0.843 " + "l1=0.694" + "l2=0.149 f=-0.867 shape=(1, 9000, 1)
logits [[ 1.3822874  -0.67206293  1.3761007  -5.5555496 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.2 " + "l1=12.2" + "l2=0 f=-0.79 shape=(1, 9000, 1)
logits [[ 4.3567333 -1.9314232  2.2549744 -7.839416 ]]
Iteration 100 of 1000: loss=6.05 " + "l1=4.02" + "l2=2.03 f=-0.666 shape=(1, 9000, 1)
logits [[ 0.46714142 -0.18936025  0.5357632  -3.4795153 ]]
Iteration 200 of 1000: loss=3.79 " + "l1=1.14" + "l2=2.65 f=-0.53 shape=(1, 9000, 1)
logits [[-0.24629727 -0.25204724 -0.24125578 -1.3819485 ]]
Iteration 300 of 1000: loss=2.83 " + "l1=0.196" + "l2=2.63 f=-0.46 shape=(1, 9000, 1)
logits [[-0.43175837 -0.4223826  -0.39563856 -0.5913207 ]]
Iteration 400 of 1000: loss=2.39 " + "l1=0.000731" + "l2=2.39 f=-0.429 shape=(1, 9000, 1)
logits [[-0.44463202 -0.42987388 -0.4203435  -0.4210747 ]]
Iteration 500 of 1000: loss=2.08 " + "l1=0.00468" + "l2=2.08 f=-0.412 shape=(1, 9000, 1)
logits [[-0.42096293 -0.4100108  -0.40552798 -0.41020623]]
Iteration 600 of 1000: loss=1.89 " + "l1=0.0113" + "l2=1.88 f=-0.405 shape=(1, 9000, 1)
logits [[-0.44747797 -0.3757488  -0.410254   -0.38709575]]
Iteration 700 of 1000: loss=1.7 " + "l1=0" + "l2=1.7 f=-0.397 shape=(1, 9000, 1)
logits [[-0.41050866 -0.4031092  -0.38987777 -0.3847632 ]]
Iteration 800 of 1000: loss=1.56 " + "l1=0.0036" + "l2=1.55 f=-0.398 shape=(1, 9000, 1)
logits [[-0.4195809  -0.39194882 -0.38888615 -0.3924886 ]]
Iteration 900 of 1000: loss=1.45 " + "l1=0" + "l2=1.45 f=-0.39 shape=(1, 9000, 1)
logits [[-0.41258818 -0.3936342  -0.3885801  -0.36694214]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.71 " + "l1=6.71" + "l2=0 f=-0.79 shape=(1, 9000, 1)
logits [[ 4.3567333 -1.9314232  2.2549744 -7.839416 ]]
Iteration 100 of 1000: loss=4.29 " + "l1=3.37" + "l2=0.919 f=-0.764 shape=(1, 9000, 1)
logits [[ 1.1906826 -0.4989096  1.1840937 -4.931127 ]]
Iteration 200 of 1000: loss=3.44 " + "l1=2.24" + "l2=1.2 f=-0.703 shape=(1, 9000, 1)
logits [[ 0.49044654 -0.24032538  0.509043   -3.5707827 ]]
Iteration 300 of 1000: loss=2.79 " + "l1=1.4" + "l2=1.4 f=-0.629 shape=(1, 9000, 1)
logits [[ 0.03738919 -0.14569727  0.06543949 -2.4711664 ]]
Iteration 400 of 1000: loss=2.36 " + "l1=0.984" + "l2=1.37 f=-0.542 shape=(1, 9000, 1)
logits [[-0.0935766  -0.09661602 -0.09515242 -1.8825865 ]]
Iteration 500 of 1000: loss=1.94 " + "l1=0.543" + "l2=1.39 f=-0.476 shape=(1, 9000, 1)
logits [[-0.24983746 -0.2191749  -0.22875357 -1.2064078 ]]
Iteration 600 of 1000: loss=1.59 " + "l1=0.329" + "l2=1.26 f=-0.432 shape=(1, 9000, 1)
logits [[-0.29209784 -0.27800822 -0.28174198 -0.8762805 ]]
Iteration 700 of 1000: loss=1.35 " + "l1=0.162" + "l2=1.19 f=-0.4 shape=(1, 9000, 1)
logits [[-0.3258334 -0.3254295 -0.3286943 -0.6202263]]
Iteration 800 of 1000: loss=1.2 " + "l1=0.0635" + "l2=1.13 f=-0.389 shape=(1, 9000, 1)
logits [[-0.40388057 -0.34834293 -0.34432885 -0.4598586 ]]
Iteration 900 of 1000: loss=1.05 " + "l1=0.0113" + "l2=1.04 f=-0.38 shape=(1, 9000, 1)
logits [[-0.38575262 -0.3810156  -0.3664765  -0.3869499 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.96 " + "l1=3.96" + "l2=0 f=-0.79 shape=(1, 9000, 1)
logits [[ 4.3567333 -1.9314232  2.2549744 -7.839416 ]]
Iteration 100 of 1000: loss=2.93 " + "l1=2.52" + "l2=0.416 f=-0.828 shape=(1, 9000, 1)
logits [[ 1.7593389  -0.84243697  1.7590821  -5.9891844 ]]
Iteration 200 of 1000: loss=2.56 " + "l1=2.06" + "l2=0.508 f=-0.807 shape=(1, 9000, 1)
logits [[ 1.2173264 -0.5463841  1.2108306 -5.1102614]]
Iteration 300 of 1000: loss=2.28 " + "l1=1.7" + "l2=0.575 f=-0.805 shape=(1, 9000, 1)
logits [[ 0.80061525 -0.37556562  0.798284   -4.441837  ]]
Iteration 400 of 1000: loss=2.04 " + "l1=1.42" + "l2=0.615 f=-0.757 shape=(1, 9000, 1)
logits [[ 0.52970105 -0.24823885  0.53507394 -3.84298   ]]
Iteration 500 of 1000: loss=1.81 " + "l1=1.16" + "l2=0.649 f=-0.695 shape=(1, 9000, 1)
logits [[ 0.3104513  -0.17121518  0.3211012  -3.241506  ]]
Iteration 600 of 1000: loss=1.43 " + "l1=0.665" + "l2=0.767 f=-0.599 shape=(1, 9000, 1)
logits [[-0.05250882 -0.23150228 -0.03319356 -2.0797062 ]]
Iteration 700 of 1000: loss=1.15 " + "l1=0.428" + "l2=0.719 f=-0.552 shape=(1, 9000, 1)
logits [[-0.2400257  -0.22474904 -0.21360017 -1.5313138 ]]
Iteration 800 of 1000: loss=0.975 " + "l1=0.318" + "l2=0.657 f=-0.524 shape=(1, 9000, 1)
logits [[-0.28043234 -0.29206145 -0.27348617 -1.250726  ]]
Iteration 900 of 1000: loss=0.842 " + "l1=0.22" + "l2=0.622 f=-0.506 shape=(1, 9000, 1)
logits [[-0.36698014 -0.3272972  -0.32549384 -1.0037477 ]]
--- 306.2827444076538 seconds ---
Adv result:3
Loading record A04454
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0784 " + "l1=0.0784" + "l2=0 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.513125  -3.3271103  3.5278604 -6.603139 ]]
Iteration 100 of 1000: loss=0.078 " + "l1=0.0777" + "l2=0.000304 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.476474  -3.2924275  3.4956732 -6.5671954]]
Iteration 200 of 1000: loss=0.0779 " + "l1=0.0776" + "l2=0.000298 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.4720883 -3.2840924  3.4873135 -6.5619473]]
Iteration 300 of 1000: loss=0.0777 " + "l1=0.0774" + "l2=0.000358 f=-0.471 shape=(1, 9000, 1)
logits [[ 4.4657755 -3.2731564  3.4767535 -6.5545263]]
Iteration 400 of 1000: loss=0.0777 " + "l1=0.0772" + "l2=0.000464 f=-0.471 shape=(1, 9000, 1)
logits [[ 4.459104  -3.261477   3.465704  -6.5470147]]
Iteration 500 of 1000: loss=0.0776 " + "l1=0.077" + "l2=0.00057 f=-0.471 shape=(1, 9000, 1)
logits [[ 4.45272   -3.2511172  3.4558334 -6.539807 ]]
Iteration 600 of 1000: loss=0.0776 " + "l1=0.0769" + "l2=0.000698 f=-0.47 shape=(1, 9000, 1)
logits [[ 4.4466863 -3.242099   3.4473002 -6.5330296]]
Iteration 700 of 1000: loss=0.0775 " + "l1=0.0768" + "l2=0.000791 f=-0.47 shape=(1, 9000, 1)
logits [[ 4.440882  -3.234689   3.4404292 -6.526606 ]]
Iteration 800 of 1000: loss=0.0775 " + "l1=0.0766" + "l2=0.000913 f=-0.47 shape=(1, 9000, 1)
logits [[ 4.435534  -3.227993   3.4342718 -6.5205727]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.784 " + "l1=0.784" + "l2=0 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.513125  -3.3271103  3.5278604 -6.603139 ]]
Iteration 100 of 1000: loss=0.745 " + "l1=0.726" + "l2=0.0194 f=-0.47 shape=(1, 9000, 1)
logits [[ 4.1998367 -3.0598145  3.2681692 -6.286788 ]]
Iteration 200 of 1000: loss=0.726 " + "l1=0.697" + "l2=0.029 f=-0.464 shape=(1, 9000, 1)
logits [[ 4.0197806 -2.9539645  3.1773734 -6.0996623]]
Iteration 300 of 1000: loss=0.711 " + "l1=0.673" + "l2=0.0375 f=-0.46 shape=(1, 9000, 1)
logits [[ 3.8578713 -2.875911   3.1214743 -5.942336 ]]
Iteration 400 of 1000: loss=0.699 " + "l1=0.654" + "l2=0.0453 f=-0.458 shape=(1, 9000, 1)
logits [[ 3.7228632 -2.814877   3.0731025 -5.812804 ]]
Iteration 500 of 1000: loss=0.688 " + "l1=0.635" + "l2=0.0533 f=-0.458 shape=(1, 9000, 1)
logits [[ 3.6007652 -2.746495   3.0064793 -5.6932983]]
Iteration 600 of 1000: loss=0.677 " + "l1=0.616" + "l2=0.0611 f=-0.46 shape=(1, 9000, 1)
logits [[ 3.489784  -2.669881   2.9238205 -5.5839257]]
Iteration 700 of 1000: loss=0.664 " + "l1=0.594" + "l2=0.0696 f=-0.466 shape=(1, 9000, 1)
logits [[ 3.3560739 -2.5867639  2.8316078 -5.4649653]]
Iteration 800 of 1000: loss=0.652 " + "l1=0.577" + "l2=0.0751 f=-0.468 shape=(1, 9000, 1)
logits [[ 3.2432234 -2.5257413  2.765664  -5.3555017]]
Iteration 900 of 1000: loss=0.641 " + "l1=0.559" + "l2=0.0821 f=-0.47 shape=(1, 9000, 1)
logits [[ 3.1145482 -2.474583   2.7137368 -5.2328725]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.84 " + "l1=7.84" + "l2=0 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.513125  -3.3271103  3.5278604 -6.603139 ]]
Iteration 100 of 1000: loss=4.54 " + "l1=3.28" + "l2=1.26 f=-0.515 shape=(1, 9000, 1)
logits [[ 1.8892349 -1.3904163  1.8860953 -4.4460535]]
Iteration 200 of 1000: loss=3.6 " + "l1=2.27" + "l2=1.33 f=-0.502 shape=(1, 9000, 1)
logits [[ 1.4565022 -0.7978804  1.4675382 -4.1357536]]
Iteration 300 of 1000: loss=3.03 " + "l1=1.59" + "l2=1.44 f=-0.507 shape=(1, 9000, 1)
logits [[ 0.7863487 -0.4286006  1.1634194 -3.5502424]]
Iteration 400 of 1000: loss=2.58 " + "l1=0.932" + "l2=1.64 f=-0.504 shape=(1, 9000, 1)
logits [[ 0.05000464 -0.07885094  0.85355794 -2.8388412 ]]
Iteration 500 of 1000: loss=2.17 " + "l1=0.42" + "l2=1.75 f=-0.501 shape=(1, 9000, 1)
logits [[-0.61836535  0.19651194  0.6167013  -2.19997   ]]
Iteration 600 of 1000: loss=1.86 " + "l1=0.133" + "l2=1.73 f=-0.502 shape=(1, 9000, 1)
logits [[-1.0445701   0.3276756   0.46096426 -1.7525578 ]]
Iteration 700 of 1000: loss=1.66 " + "l1=0" + "l2=1.66 f=-0.503 shape=(1, 9000, 1)
logits [[-1.216759    0.3517649   0.35170332 -1.5005007 ]]
Iteration 800 of 1000: loss=1.5 " + "l1=0.00673" + "l2=1.5 f=-0.485 shape=(1, 9000, 1)
logits [[-1.2037072   0.30327538  0.3100046  -1.3498623 ]]
Iteration 900 of 1000: loss=1.36 " + "l1=0.00781" + "l2=1.35 f=-0.475 shape=(1, 9000, 1)
logits [[-1.2161505   0.25458556  0.2623994  -1.1998487 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.31 " + "l1=4.31" + "l2=0 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.513125  -3.3271103  3.5278604 -6.603139 ]]
Iteration 100 of 1000: loss=3 " + "l1=2.32" + "l2=0.677 f=-0.518 shape=(1, 9000, 1)
logits [[ 2.284701  -1.9226347  2.2920809 -4.7243805]]
Iteration 200 of 1000: loss=2.59 " + "l1=1.92" + "l2=0.665 f=-0.531 shape=(1, 9000, 1)
logits [[ 1.9473109 -1.5441139  1.9505949 -4.476313 ]]
Iteration 300 of 1000: loss=2.38 " + "l1=1.71" + "l2=0.67 f=-0.514 shape=(1, 9000, 1)
logits [[ 1.7592247 -1.3488853  1.7608502 -4.2276998]]
Iteration 400 of 1000: loss=2.21 " + "l1=1.52" + "l2=0.682 f=-0.5 shape=(1, 9000, 1)
logits [[ 1.5776372 -1.1922473  1.579773  -3.963654 ]]
Iteration 500 of 1000: loss=1.99 " + "l1=1.19" + "l2=0.796 f=-0.477 shape=(1, 9000, 1)
logits [[ 1.2964802 -0.8314052  1.3402932 -3.7138205]]
Iteration 600 of 1000: loss=1.88 " + "l1=1.09" + "l2=0.792 f=-0.469 shape=(1, 9000, 1)
logits [[ 1.1144245 -0.7420575  1.2374536 -3.4846828]]
Iteration 700 of 1000: loss=1.8 " + "l1=0.999" + "l2=0.799 f=-0.46 shape=(1, 9000, 1)
logits [[ 0.92403984 -0.679458    1.1369593  -3.2201345 ]]
Iteration 800 of 1000: loss=1.72 " + "l1=0.898" + "l2=0.823 f=-0.456 shape=(1, 9000, 1)
logits [[ 0.7178016 -0.6092428  1.0241079 -2.956719 ]]
Iteration 900 of 1000: loss=1.61 " + "l1=0.725" + "l2=0.885 f=-0.459 shape=(1, 9000, 1)
logits [[ 0.26321715 -0.44679588  0.8721179  -2.5260148 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=6.08 " + "l1=6.08" + "l2=0 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.513125  -3.3271103  3.5278604 -6.603139 ]]
Iteration 100 of 1000: loss=3.79 " + "l1=2.83" + "l2=0.964 f=-0.521 shape=(1, 9000, 1)
logits [[ 2.0405178 -1.6061934  2.0461755 -4.564928 ]]
Iteration 200 of 1000: loss=3.25 " + "l1=2.3" + "l2=0.954 f=-0.524 shape=(1, 9000, 1)
logits [[ 1.6749262 -1.2472656  1.7152361 -4.238235 ]]
Iteration 300 of 1000: loss=2.69 " + "l1=1.67" + "l2=1.02 f=-0.5 shape=(1, 9000, 1)
logits [[ 1.3516009 -0.7665742  1.3875935 -3.9713228]]
Iteration 400 of 1000: loss=2.41 " + "l1=1.3" + "l2=1.11 f=-0.496 shape=(1, 9000, 1)
logits [[ 0.88334846 -0.50860906  1.1643084  -3.524713  ]]
Iteration 500 of 1000: loss=2.22 " + "l1=1.03" + "l2=1.19 f=-0.493 shape=(1, 9000, 1)
logits [[ 0.4639005  -0.32165545  1.0024968  -3.1186876 ]]
Iteration 600 of 1000: loss=1.97 " + "l1=0.632" + "l2=1.34 f=-0.484 shape=(1, 9000, 1)
logits [[-0.22606581 -0.06939285  0.74660367 -2.3888347 ]]
Iteration 700 of 1000: loss=1.72 " + "l1=0.339" + "l2=1.38 f=-0.477 shape=(1, 9000, 1)
logits [[-0.7933493   0.11543686  0.5523507  -1.7828754 ]]
Iteration 800 of 1000: loss=1.55 " + "l1=0.235" + "l2=1.32 f=-0.465 shape=(1, 9000, 1)
logits [[-0.92364526  0.13772437  0.44095662 -1.5169575 ]]
Iteration 900 of 1000: loss=1.39 " + "l1=0.0772" + "l2=1.31 f=-0.464 shape=(1, 9000, 1)
logits [[-1.0946896   0.18322153  0.2828034  -1.2278335 ]]
--- 296.7681391239166 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00985 " + "l1=0.00985" + "l2=0 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.513125  -3.3271103  3.5278604 -6.603139 ]]
Iteration 100 of 1000: loss=0.00952 " + "l1=0.00925" + "l2=0.000264 f=-0.471 shape=(1, 9000, 1)
logits [[ 4.4819207 -3.346806   3.5565722 -6.5754347]]
Iteration 200 of 1000: loss=0.00938 " + "l1=0.00912" + "l2=0.000264 f=-0.471 shape=(1, 9000, 1)
logits [[ 4.478759  -3.3549337  3.5667236 -6.574388 ]]
Iteration 300 of 1000: loss=0.00933 " + "l1=0.00901" + "l2=0.000316 f=-0.471 shape=(1, 9000, 1)
logits [[ 4.4752984 -3.3610232  3.5743582 -6.5720925]]
Iteration 400 of 1000: loss=0.00929 " + "l1=0.00892" + "l2=0.000375 f=-0.471 shape=(1, 9000, 1)
logits [[ 4.472267  -3.3658135  3.5807388 -6.569999 ]]
Iteration 500 of 1000: loss=0.00926 " + "l1=0.00883" + "l2=0.000425 f=-0.471 shape=(1, 9000, 1)
logits [[ 4.4692783 -3.3696747  3.5861454 -6.567868 ]]
Iteration 600 of 1000: loss=0.00932 " + "l1=0.00877" + "l2=0.000559 f=-0.47 shape=(1, 9000, 1)
logits [[ 4.466916  -3.3725827  3.5903683 -6.566089 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0985 " + "l1=0.0985" + "l2=0 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.513125  -3.3271103  3.5278604 -6.603139 ]]
Iteration 100 of 1000: loss=0.0726 " + "l1=0.0593" + "l2=0.0133 f=-0.454 shape=(1, 9000, 1)
logits [[ 4.301905  -3.4393053  3.7093353 -6.3889694]]
Iteration 200 of 1000: loss=0.0665 " + "l1=0.0513" + "l2=0.0152 f=-0.448 shape=(1, 9000, 1)
logits [[ 4.2502785 -3.4510355  3.7377002 -6.329486 ]]
Iteration 300 of 1000: loss=0.0621 " + "l1=0.0451" + "l2=0.017 f=-0.443 shape=(1, 9000, 1)
logits [[ 4.208327  -3.4571838  3.7577672 -6.282337 ]]
Iteration 400 of 1000: loss=0.0584 " + "l1=0.0404" + "l2=0.0181 f=-0.44 shape=(1, 9000, 1)
logits [[ 4.174144  -3.4616616  3.7705443 -6.2449822]]
Iteration 500 of 1000: loss=0.0553 " + "l1=0.0353" + "l2=0.02 f=-0.437 shape=(1, 9000, 1)
logits [[ 4.1408257 -3.469847   3.7880936 -6.207324 ]]
Iteration 600 of 1000: loss=0.0523 " + "l1=0.0305" + "l2=0.0218 f=-0.434 shape=(1, 9000, 1)
logits [[ 4.106765  -3.476191   3.802037  -6.1679997]]
Iteration 700 of 1000: loss=0.0493 " + "l1=0.0263" + "l2=0.0231 f=-0.431 shape=(1, 9000, 1)
logits [[ 4.0746655 -3.4824665  3.8121605 -6.129666 ]]
Iteration 800 of 1000: loss=0.0466 " + "l1=0.0228" + "l2=0.0238 f=-0.429 shape=(1, 9000, 1)
logits [[ 4.048178  -3.487002   3.820211  -6.0973287]]
Iteration 900 of 1000: loss=0.0443 " + "l1=0.0192" + "l2=0.0251 f=-0.426 shape=(1, 9000, 1)
logits [[ 4.019253  -3.4890087  3.827037  -6.0619454]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.985 " + "l1=0.985" + "l2=0 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.513125  -3.3271103  3.5278604 -6.603139 ]]
Iteration 100 of 1000: loss=0.123 " + "l1=0" + "l2=0.123 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.8302147 -3.4957824  3.8396578 -5.8656273]]
Iteration 200 of 1000: loss=0.0945 " + "l1=0" + "l2=0.0945 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.80464   -3.4702542  3.8182993 -5.8450627]]
Iteration 300 of 1000: loss=0.0772 " + "l1=0" + "l2=0.0772 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.7905447 -3.4521675  3.8021522 -5.83876  ]]
Iteration 400 of 1000: loss=0.0639 " + "l1=0" + "l2=0.0639 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.7868366 -3.4390116  3.7887096 -5.841364 ]]
Iteration 500 of 1000: loss=0.0553 " + "l1=0" + "l2=0.0553 f=-0.428 shape=(1, 9000, 1)
logits [[ 3.7800875 -3.433141   3.7800972 -5.8382545]]
Iteration 600 of 1000: loss=0.0513 " + "l1=0" + "l2=0.0513 f=-0.428 shape=(1, 9000, 1)
logits [[ 3.7689342 -3.4325235  3.7790802 -5.8259296]]
Iteration 700 of 1000: loss=0.0467 " + "l1=0" + "l2=0.0467 f=-0.427 shape=(1, 9000, 1)
logits [[ 3.770551  -3.4328532  3.7798753 -5.8251753]]
Iteration 800 of 1000: loss=0.0439 " + "l1=0" + "l2=0.0439 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.7728322 -3.4340415  3.7817254 -5.822741 ]]
Iteration 900 of 1000: loss=0.0413 " + "l1=0" + "l2=0.0413 f=-0.424 shape=(1, 9000, 1)
logits [[ 3.7723393 -3.4371116  3.7858615 -5.8163357]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.542 " + "l1=0.542" + "l2=0 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.513125  -3.3271103  3.5278604 -6.603139 ]]
Iteration 100 of 1000: loss=0.117 " + "l1=0" + "l2=0.117 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.8400767 -3.5004797  3.8458557 -5.871778 ]]
Iteration 200 of 1000: loss=0.0839 " + "l1=0" + "l2=0.0839 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.8247445 -3.47589    3.825968  -5.862879 ]]
Iteration 300 of 1000: loss=0.0679 " + "l1=0" + "l2=0.0679 f=-0.423 shape=(1, 9000, 1)
logits [[ 3.8041732 -3.4568183  3.8081834 -5.8468695]]
Iteration 400 of 1000: loss=0.0577 " + "l1=0" + "l2=0.0577 f=-0.424 shape=(1, 9000, 1)
logits [[ 3.7954168 -3.4503715  3.8009207 -5.841504 ]]
Iteration 500 of 1000: loss=0.0521 " + "l1=0.00216" + "l2=0.0499 f=-0.424 shape=(1, 9000, 1)
logits [[ 3.8000157 -3.4458675  3.796093  -5.8464413]]
Iteration 600 of 1000: loss=0.0471 " + "l1=0" + "l2=0.0471 f=-0.422 shape=(1, 9000, 1)
logits [[ 3.7863116 -3.4425719  3.794951  -5.8284664]]
Iteration 700 of 1000: loss=0.0432 " + "l1=0" + "l2=0.0432 f=-0.421 shape=(1, 9000, 1)
logits [[ 3.78545   -3.439697   3.7937536 -5.8243704]]
Iteration 800 of 1000: loss=0.0395 " + "l1=0" + "l2=0.0395 f=-0.419 shape=(1, 9000, 1)
logits [[ 3.7936168 -3.4407315  3.797831  -5.8260493]]
Iteration 900 of 1000: loss=0.0368 " + "l1=0" + "l2=0.0368 f=-0.416 shape=(1, 9000, 1)
logits [[ 3.7952878 -3.4402356  3.7999506 -5.8208604]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.32 " + "l1=0.32" + "l2=0 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.513125  -3.3271103  3.5278604 -6.603139 ]]
Iteration 100 of 1000: loss=0.122 " + "l1=0.0254" + "l2=0.0965 f=-0.426 shape=(1, 9000, 1)
logits [[ 3.9200542 -3.5092692  3.8417847 -5.9566083]]
Iteration 200 of 1000: loss=0.081 " + "l1=2.23e-05" + "l2=0.081 f=-0.419 shape=(1, 9000, 1)
logits [[ 3.8416626 -3.4873953  3.841594  -5.871574 ]]
Iteration 300 of 1000: loss=0.0632 " + "l1=0" + "l2=0.0632 f=-0.419 shape=(1, 9000, 1)
logits [[ 3.820875  -3.4645894  3.8214865 -5.854235 ]]
Iteration 400 of 1000: loss=0.0541 " + "l1=0" + "l2=0.0541 f=-0.42 shape=(1, 9000, 1)
logits [[ 3.808063  -3.4543219  3.8120835 -5.84443  ]]
Iteration 500 of 1000: loss=0.0473 " + "l1=0.000311" + "l2=0.047 f=-0.419 shape=(1, 9000, 1)
logits [[ 3.8048444 -3.4433746  3.803886  -5.8397408]]
Iteration 600 of 1000: loss=0.0427 " + "l1=2.92e-05" + "l2=0.0426 f=-0.417 shape=(1, 9000, 1)
logits [[ 3.8052454 -3.4430623  3.8051555 -5.8364944]]
Iteration 700 of 1000: loss=0.0401 " + "l1=0" + "l2=0.0401 f=-0.415 shape=(1, 9000, 1)
logits [[ 3.8024817 -3.4448     3.8099635 -5.828374 ]]
Iteration 800 of 1000: loss=0.0365 " + "l1=0.000172" + "l2=0.0363 f=-0.414 shape=(1, 9000, 1)
logits [[ 3.8097875 -3.4437897  3.809258  -5.830546 ]]
Iteration 900 of 1000: loss=0.0352 " + "l1=0" + "l2=0.0352 f=-0.412 shape=(1, 9000, 1)
logits [[ 3.7977476 -3.4416227  3.8092082 -5.8119254]]
--- 285.8501994609833 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.111 " + "l1=0.111" + "l2=0 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.513125  -3.3271103  3.5278604 -6.603139 ]]
Iteration 100 of 1000: loss=0.11 " + "l1=0.11" + "l2=0.000563 f=-0.47 shape=(1, 9000, 1)
logits [[ 4.451892  -3.3194036  3.5170178 -6.528578 ]]
Iteration 200 of 1000: loss=0.11 " + "l1=0.11" + "l2=0.000611 f=-0.469 shape=(1, 9000, 1)
logits [[ 4.440882  -3.317128   3.5150151 -6.5150285]]
Iteration 300 of 1000: loss=0.11 " + "l1=0.109" + "l2=0.000745 f=-0.468 shape=(1, 9000, 1)
logits [[ 4.428516  -3.3134623  3.5112457 -6.499073 ]]
Iteration 400 of 1000: loss=0.11 " + "l1=0.109" + "l2=0.00088 f=-0.467 shape=(1, 9000, 1)
logits [[ 4.417351  -3.3089736  3.5065203 -6.484052 ]]
Iteration 500 of 1000: loss=0.11 " + "l1=0.109" + "l2=0.00103 f=-0.466 shape=(1, 9000, 1)
logits [[ 4.407302  -3.3042827  3.5015595 -6.4701653]]
Iteration 600 of 1000: loss=0.11 " + "l1=0.109" + "l2=0.00112 f=-0.466 shape=(1, 9000, 1)
logits [[ 4.3981476 -3.299855   3.4968383 -6.4572864]]
Iteration 700 of 1000: loss=0.11 " + "l1=0.108" + "l2=0.00127 f=-0.465 shape=(1, 9000, 1)
logits [[ 4.3896575 -3.2961702  3.4927754 -6.445063 ]]
Iteration 800 of 1000: loss=0.11 " + "l1=0.108" + "l2=0.00148 f=-0.464 shape=(1, 9000, 1)
logits [[ 4.3822107 -3.2927465  3.4889438 -6.433953 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.11 " + "l1=1.11" + "l2=0 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.513125  -3.3271103  3.5278604 -6.603139 ]]
Iteration 100 of 1000: loss=1.03 " + "l1=0.983" + "l2=0.0475 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.9332473 -3.242719   3.4044476 -5.895934 ]]
Iteration 200 of 1000: loss=0.988 " + "l1=0.921" + "l2=0.0662 f=-0.437 shape=(1, 9000, 1)
logits [[ 3.657113  -3.1178527  3.2692182 -5.557883 ]]
Iteration 300 of 1000: loss=0.956 " + "l1=0.872" + "l2=0.0832 f=-0.425 shape=(1, 9000, 1)
logits [[ 3.441109  -3.044645   3.1873932 -5.282489 ]]
Iteration 400 of 1000: loss=0.925 " + "l1=0.823" + "l2=0.102 f=-0.411 shape=(1, 9000, 1)
logits [[ 3.232032  -2.9925559  3.1193755 -5.00092  ]]
Iteration 500 of 1000: loss=0.894 " + "l1=0.779" + "l2=0.115 f=-0.404 shape=(1, 9000, 1)
logits [[ 3.0393417 -2.9430995  3.037634  -4.75053  ]]
Iteration 600 of 1000: loss=0.866 " + "l1=0.752" + "l2=0.113 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.9303813 -2.876107   2.9311192 -4.593844 ]]
Iteration 700 of 1000: loss=0.836 " + "l1=0.724" + "l2=0.112 f=-0.397 shape=(1, 9000, 1)
logits [[ 2.8161805 -2.7980435  2.8145764 -4.419936 ]]
Iteration 800 of 1000: loss=0.808 " + "l1=0.693" + "l2=0.115 f=-0.39 shape=(1, 9000, 1)
logits [[ 2.6911998 -2.7077632  2.6924677 -4.2371826]]
Iteration 900 of 1000: loss=0.78 " + "l1=0.661" + "l2=0.119 f=-0.383 shape=(1, 9000, 1)
logits [[ 2.5615318 -2.6220496  2.568967  -4.0417194]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.1 " + "l1=11.1" + "l2=0 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.513125  -3.3271103  3.5278604 -6.603139 ]]
Iteration 100 of 1000: loss=6.16 " + "l1=4.09" + "l2=2.07 f=-0.325 shape=(1, 9000, 1)
logits [[ 1.3271234 -2.0156286  1.7373219 -2.3479722]]
Iteration 200 of 1000: loss=3.87 " + "l1=0.498" + "l2=3.37 f=-0.248 shape=(1, 9000, 1)
logits [[-0.63293487 -1.298372    0.7184911   0.22069293]]
Iteration 300 of 1000: loss=2.63 " + "l1=0.0274" + "l2=2.6 f=-0.202 shape=(1, 9000, 1)
logits [[-0.7825125  -1.2387916   0.62015384  0.59271115]]
Iteration 400 of 1000: loss=2.11 " + "l1=0.00917" + "l2=2.1 f=-0.202 shape=(1, 9000, 1)
logits [[-0.79945487 -1.2362186   0.61749226  0.60831946]]
Iteration 500 of 1000: loss=1.83 " + "l1=0" + "l2=1.83 f=-0.199 shape=(1, 9000, 1)
logits [[-0.81474674 -1.2482715   0.6249172   0.6424938 ]]
Iteration 600 of 1000: loss=1.67 " + "l1=0" + "l2=1.67 f=-0.192 shape=(1, 9000, 1)
logits [[-0.7733118  -1.2899144   0.6427477   0.65256876]]
Iteration 700 of 1000: loss=1.53 " + "l1=0" + "l2=1.53 f=-0.198 shape=(1, 9000, 1)
logits [[-0.77893215 -1.3008165   0.6414709   0.64566964]]
Iteration 800 of 1000: loss=1.42 " + "l1=0" + "l2=1.42 f=-0.196 shape=(1, 9000, 1)
logits [[-0.7763812 -1.3180012  0.6439703  0.6660453]]
Iteration 900 of 1000: loss=1.32 " + "l1=0" + "l2=1.32 f=-0.19 shape=(1, 9000, 1)
logits [[-0.7363486 -1.3532377  0.6610352  0.6696835]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.11 " + "l1=6.11" + "l2=0 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.513125  -3.3271103  3.5278604 -6.603139 ]]
Iteration 100 of 1000: loss=4.18 " + "l1=3.4" + "l2=0.786 f=-0.378 shape=(1, 9000, 1)
logits [[ 2.3730402 -2.5345345  2.410653  -3.7628179]]
Iteration 200 of 1000: loss=3.51 " + "l1=2.46" + "l2=1.06 f=-0.339 shape=(1, 9000, 1)
logits [[ 1.5172058 -2.095371   1.8423687 -2.6213214]]
Iteration 300 of 1000: loss=2.53 " + "l1=1.07" + "l2=1.46 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.1763555  -1.5630256   1.1017033  -0.83999616]]
Iteration 400 of 1000: loss=1.73 " + "l1=0.0356" + "l2=1.7 f=-0.2 shape=(1, 9000, 1)
logits [[-0.66281855 -1.2864001   0.6076415   0.542928  ]]
Iteration 500 of 1000: loss=1.39 " + "l1=0.00318" + "l2=1.38 f=-0.193 shape=(1, 9000, 1)
logits [[-0.68491364 -1.3117445   0.6148161   0.60904336]]
Iteration 600 of 1000: loss=1.15 " + "l1=0" + "l2=1.15 f=-0.197 shape=(1, 9000, 1)
logits [[-0.71682686 -1.3269514   0.62292874  0.6332166 ]]
Iteration 700 of 1000: loss=1 " + "l1=0.00909" + "l2=0.992 f=-0.193 shape=(1, 9000, 1)
logits [[-0.69399863 -1.3584261   0.6475701   0.6310491 ]]
Iteration 800 of 1000: loss=0.896 " + "l1=0" + "l2=0.896 f=-0.191 shape=(1, 9000, 1)
logits [[-0.67769843 -1.4117821   0.658417    0.6659182 ]]
Iteration 900 of 1000: loss=0.83 " + "l1=0.00343" + "l2=0.826 f=-0.191 shape=(1, 9000, 1)
logits [[-0.62988865 -1.47156     0.671519    0.6652841 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.61 " + "l1=3.61" + "l2=0 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.513125  -3.3271103  3.5278604 -6.603139 ]]
Iteration 100 of 1000: loss=2.78 " + "l1=2.39" + "l2=0.386 f=-0.418 shape=(1, 9000, 1)
logits [[ 2.8384707 -2.8212984  2.838419  -4.5277095]]
Iteration 200 of 1000: loss=2.51 " + "l1=2.08" + "l2=0.429 f=-0.403 shape=(1, 9000, 1)
logits [[ 2.4474795 -2.5443547  2.4495766 -3.963113 ]]
Iteration 300 of 1000: loss=2.28 " + "l1=1.73" + "l2=0.545 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.9275832 -2.3178134  2.1094012 -3.218763 ]]
Iteration 400 of 1000: loss=1.93 " + "l1=1.22" + "l2=0.707 f=-0.338 shape=(1, 9000, 1)
logits [[ 1.1234505 -1.9931902  1.6426599 -2.1254072]]
Iteration 500 of 1000: loss=1.48 " + "l1=0.612" + "l2=0.867 f=-0.268 shape=(1, 9000, 1)
logits [[ 0.22250901 -1.662232    1.1267009  -0.75790536]]
Iteration 600 of 1000: loss=1.11 " + "l1=0.153" + "l2=0.958 f=-0.204 shape=(1, 9000, 1)
logits [[-0.43108043 -1.4352906   0.758898    0.28947383]]
Iteration 700 of 1000: loss=0.878 " + "l1=0.00237" + "l2=0.876 f=-0.202 shape=(1, 9000, 1)
logits [[-0.69995934 -1.3790064   0.6396835   0.632396  ]]
Iteration 800 of 1000: loss=0.751 " + "l1=0" + "l2=0.751 f=-0.213 shape=(1, 9000, 1)
logits [[-0.7444798 -1.3838273  0.6368972  0.6390686]]
Iteration 900 of 1000: loss=0.667 " + "l1=0" + "l2=0.667 f=-0.22 shape=(1, 9000, 1)
logits [[-0.74623054 -1.4096543   0.6352833   0.6386779 ]]
--- 299.34585547447205 seconds ---
Adv result:3
Loading record A04508
(1, 6028)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0505 " + "l1=0.0505" + "l2=0 f=-0.38 shape=(1, 9000, 1)
logits [[ 3.545438  -1.5062071  1.3984534 -4.956419 ]]
Iteration 100 of 1000: loss=0.0496 " + "l1=0.0491" + "l2=0.00046 f=-0.381 shape=(1, 9000, 1)
logits [[ 3.4663923 -1.4450812  1.3751848 -4.921713 ]]
Iteration 200 of 1000: loss=0.0492 " + "l1=0.0487" + "l2=0.000547 f=-0.382 shape=(1, 9000, 1)
logits [[ 3.441431  -1.426077   1.3680235 -4.9099245]]
Iteration 300 of 1000: loss=0.0489 " + "l1=0.0482" + "l2=0.0007 f=-0.382 shape=(1, 9000, 1)
logits [[ 3.4122531 -1.4041326  1.3602828 -4.896517 ]]
Iteration 400 of 1000: loss=0.0485 " + "l1=0.0476" + "l2=0.000865 f=-0.382 shape=(1, 9000, 1)
logits [[ 3.382073  -1.3815802  1.3525779 -4.8830037]]
Iteration 500 of 1000: loss=0.0481 " + "l1=0.0471" + "l2=0.00105 f=-0.383 shape=(1, 9000, 1)
logits [[ 3.3507345 -1.3579223  1.3446729 -4.8691025]]
Iteration 600 of 1000: loss=0.0479 " + "l1=0.0465" + "l2=0.00135 f=-0.383 shape=(1, 9000, 1)
logits [[ 3.3191395 -1.3339523  1.3370829 -4.8558283]]
Iteration 700 of 1000: loss=0.0476 " + "l1=0.046" + "l2=0.00158 f=-0.384 shape=(1, 9000, 1)
logits [[ 3.2884035 -1.3105359  1.329639  -4.842884 ]]
Iteration 800 of 1000: loss=0.0473 " + "l1=0.0455" + "l2=0.00185 f=-0.384 shape=(1, 9000, 1)
logits [[ 3.2578819 -1.2878087  1.3227509 -4.8296275]]
Iteration 900 of 1000: loss=0.0471 " + "l1=0.0449" + "l2=0.00213 f=-0.385 shape=(1, 9000, 1)
logits [[ 3.228091  -1.2658379  1.3163373 -4.817187 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.505 " + "l1=0.505" + "l2=0 f=-0.38 shape=(1, 9000, 1)
logits [[ 3.545438  -1.5062071  1.3984534 -4.956419 ]]
Iteration 100 of 1000: loss=0.411 " + "l1=0.365" + "l2=0.0457 f=-0.408 shape=(1, 9000, 1)
logits [[ 2.747896  -0.9069736  1.1602623 -4.6340423]]
Iteration 200 of 1000: loss=0.344 " + "l1=0.273" + "l2=0.0706 f=-0.422 shape=(1, 9000, 1)
logits [[ 2.2023816 -0.5321552  1.0010347 -4.3606577]]
Iteration 300 of 1000: loss=0.278 " + "l1=0.183" + "l2=0.095 f=-0.435 shape=(1, 9000, 1)
logits [[ 1.6321906 -0.1989669  0.8734639 -4.0469985]]
Iteration 400 of 1000: loss=0.199 " + "l1=0.077" + "l2=0.122 f=-0.451 shape=(1, 9000, 1)
logits [[ 0.9554138   0.18561156  0.7307206  -3.673895  ]]
Iteration 500 of 1000: loss=0.131 " + "l1=0.0204" + "l2=0.111 f=-0.452 shape=(1, 9000, 1)
logits [[ 0.6199397   0.4157659   0.61729705 -3.462702  ]]
Iteration 600 of 1000: loss=0.09 " + "l1=0" + "l2=0.09 f=-0.453 shape=(1, 9000, 1)
logits [[ 0.5194317  0.5296552  0.5291229 -3.3890343]]
Iteration 700 of 1000: loss=0.0764 " + "l1=0" + "l2=0.0764 f=-0.458 shape=(1, 9000, 1)
logits [[ 0.506474   0.5215188  0.5181981 -3.3794613]]
Iteration 800 of 1000: loss=0.0696 " + "l1=0" + "l2=0.0696 f=-0.461 shape=(1, 9000, 1)
logits [[ 0.50889295  0.5104419   0.5097303  -3.3726337 ]]
Iteration 900 of 1000: loss=0.0668 " + "l1=2.38e-06" + "l2=0.0668 f=-0.463 shape=(1, 9000, 1)
logits [[ 0.50327134  0.5056983   0.5057221  -3.3650925 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.278 " + "l1=0.278" + "l2=0 f=-0.38 shape=(1, 9000, 1)
logits [[ 3.545438  -1.5062071  1.3984534 -4.956419 ]]
Iteration 100 of 1000: loss=0.251 " + "l1=0.238" + "l2=0.0127 f=-0.391 shape=(1, 9000, 1)
logits [[ 3.139273  -1.1924707  1.2767118 -4.7877417]]
Iteration 200 of 1000: loss=0.234 " + "l1=0.215" + "l2=0.0191 f=-0.397 shape=(1, 9000, 1)
logits [[ 2.8970785 -1.0140227  1.2047068 -4.67682  ]]
Iteration 300 of 1000: loss=0.216 " + "l1=0.19" + "l2=0.026 f=-0.403 shape=(1, 9000, 1)
logits [[ 2.6288354 -0.8327304  1.1283414 -4.535982 ]]
Iteration 400 of 1000: loss=0.198 " + "l1=0.165" + "l2=0.0338 f=-0.41 shape=(1, 9000, 1)
logits [[ 2.3420794 -0.6512419  1.0539409 -4.3862753]]
Iteration 500 of 1000: loss=0.181 " + "l1=0.139" + "l2=0.0419 f=-0.419 shape=(1, 9000, 1)
logits [[ 2.0472257  -0.47346306  0.9855399  -4.237005  ]]
Iteration 600 of 1000: loss=0.16 " + "l1=0.109" + "l2=0.0506 f=-0.43 shape=(1, 9000, 1)
logits [[ 1.7124058  -0.27673975  0.9051986  -4.0591054 ]]
Iteration 700 of 1000: loss=0.136 " + "l1=0.0769" + "l2=0.0592 f=-0.439 shape=(1, 9000, 1)
logits [[ 1.3532472  -0.04518493  0.8154855  -3.8799706 ]]
Iteration 800 of 1000: loss=0.113 " + "l1=0.0458" + "l2=0.0669 f=-0.451 shape=(1, 9000, 1)
logits [[ 0.9898602   0.15661477  0.7379552  -3.690067  ]]
Iteration 900 of 1000: loss=0.0848 " + "l1=0.0151" + "l2=0.0697 f=-0.458 shape=(1, 9000, 1)
logits [[ 0.63243085  0.35778302  0.6323295  -3.4535298 ]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.392 " + "l1=0.392" + "l2=0 f=-0.38 shape=(1, 9000, 1)
logits [[ 3.545438  -1.5062071  1.3984534 -4.956419 ]]
Iteration 100 of 1000: loss=0.336 " + "l1=0.31" + "l2=0.0268 f=-0.399 shape=(1, 9000, 1)
logits [[ 2.9455717 -1.0492011  1.2198204 -4.7141676]]
Iteration 200 of 1000: loss=0.299 " + "l1=0.258" + "l2=0.041 f=-0.41 shape=(1, 9000, 1)
logits [[ 2.5514874  -0.77334833  1.1016574  -4.5190773 ]]
Iteration 300 of 1000: loss=0.26 " + "l1=0.206" + "l2=0.0544 f=-0.42 shape=(1, 9000, 1)
logits [[ 2.1446342  -0.51176846  0.9944565  -4.3055167 ]]
Iteration 400 of 1000: loss=0.22 " + "l1=0.148" + "l2=0.072 f=-0.432 shape=(1, 9000, 1)
logits [[ 1.6672585 -0.2391109  0.8938903 -4.048782 ]]
Iteration 500 of 1000: loss=0.172 " + "l1=0.084" + "l2=0.0881 f=-0.444 shape=(1, 9000, 1)
logits [[ 1.1542987   0.07044908  0.77776724 -3.776926  ]]
Iteration 600 of 1000: loss=0.122 " + "l1=0.0246" + "l2=0.097 f=-0.458 shape=(1, 9000, 1)
logits [[ 0.6650395   0.3478342   0.66543937 -3.5119064 ]]
Iteration 700 of 1000: loss=0.0888 " + "l1=0.00602" + "l2=0.0828 f=-0.455 shape=(1, 9000, 1)
logits [[ 0.54878384  0.47872853  0.556438   -3.4039516 ]]
Iteration 800 of 1000: loss=0.0734 " + "l1=0" + "l2=0.0734 f=-0.459 shape=(1, 9000, 1)
logits [[ 0.50807726  0.5152758   0.5135059  -3.37439   ]]
Iteration 900 of 1000: loss=0.0686 " + "l1=0.000439" + "l2=0.0681 f=-0.462 shape=(1, 9000, 1)
logits [[ 0.51004165  0.50437534  0.50814116 -3.369627  ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.335 " + "l1=0.335" + "l2=0 f=-0.38 shape=(1, 9000, 1)
logits [[ 3.545438  -1.5062071  1.3984534 -4.956419 ]]
Iteration 100 of 1000: loss=0.295 " + "l1=0.276" + "l2=0.0189 f=-0.395 shape=(1, 9000, 1)
logits [[ 3.0450037 -1.1231452  1.248138  -4.7513723]]
Iteration 200 of 1000: loss=0.269 " + "l1=0.24" + "l2=0.0286 f=-0.404 shape=(1, 9000, 1)
logits [[ 2.7300737 -0.8992661  1.1533297 -4.5984716]]
Iteration 300 of 1000: loss=0.241 " + "l1=0.202" + "l2=0.0395 f=-0.412 shape=(1, 9000, 1)
logits [[ 2.3762429 -0.6683905  1.0582615 -4.413884 ]]
Iteration 400 of 1000: loss=0.214 " + "l1=0.164" + "l2=0.0508 f=-0.421 shape=(1, 9000, 1)
logits [[ 2.019039   -0.45241684  0.97752386 -4.228588  ]]
Iteration 500 of 1000: loss=0.184 " + "l1=0.12" + "l2=0.0638 f=-0.433 shape=(1, 9000, 1)
logits [[ 1.604853   -0.21270308  0.8836969  -4.0086637 ]]
Iteration 600 of 1000: loss=0.149 " + "l1=0.0741" + "l2=0.075 f=-0.444 shape=(1, 9000, 1)
logits [[ 1.1721106   0.05378022  0.7822116  -3.7842755 ]]
Iteration 700 of 1000: loss=0.112 " + "l1=0.0247" + "l2=0.0871 f=-0.46 shape=(1, 9000, 1)
logits [[ 0.6924536   0.31965953  0.68033445 -3.5335963 ]]
Iteration 800 of 1000: loss=0.0845 " + "l1=0.009" + "l2=0.0755 f=-0.456 shape=(1, 9000, 1)
logits [[ 0.56910723  0.4395702   0.575435   -3.406788  ]]
Iteration 900 of 1000: loss=0.0719 " + "l1=0.000345" + "l2=0.0716 f=-0.459 shape=(1, 9000, 1)
logits [[ 0.51005316  0.5081505   0.5133511  -3.36797   ]]
--- 312.333309173584 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0215 " + "l1=0.0215" + "l2=0 f=-0.38 shape=(1, 9000, 1)
logits [[ 3.545438  -1.5062071  1.3984534 -4.956419 ]]
Iteration 100 of 1000: loss=0.0212 " + "l1=0.021" + "l2=0.000175 f=-0.381 shape=(1, 9000, 1)
logits [[ 3.5003161 -1.4914072  1.402561  -4.9354076]]
Iteration 200 of 1000: loss=0.021 " + "l1=0.0209" + "l2=0.000168 f=-0.381 shape=(1, 9000, 1)
logits [[ 3.4897506 -1.4881034  1.4034193 -4.930224 ]]
Iteration 300 of 1000: loss=0.0209 " + "l1=0.0207" + "l2=0.000212 f=-0.382 shape=(1, 9000, 1)
logits [[ 3.475315  -1.483533   1.4047563 -4.923415 ]]
Iteration 400 of 1000: loss=0.0208 " + "l1=0.0205" + "l2=0.000283 f=-0.382 shape=(1, 9000, 1)
logits [[ 3.459963  -1.4786766  1.4062508 -4.9158964]]
Iteration 500 of 1000: loss=0.0207 " + "l1=0.0204" + "l2=0.000345 f=-0.382 shape=(1, 9000, 1)
logits [[ 3.4438388 -1.473861   1.4082953 -4.9076233]]
Iteration 600 of 1000: loss=0.0206 " + "l1=0.0202" + "l2=0.000453 f=-0.383 shape=(1, 9000, 1)
logits [[ 3.4273317 -1.4691988  1.4106691 -4.8993654]]
Iteration 700 of 1000: loss=0.0206 " + "l1=0.02" + "l2=0.0006 f=-0.383 shape=(1, 9000, 1)
logits [[ 3.4101975 -1.4644167  1.4132017 -4.891049 ]]
Iteration 800 of 1000: loss=0.0205 " + "l1=0.0198" + "l2=0.000711 f=-0.384 shape=(1, 9000, 1)
logits [[ 3.393161  -1.4594791  1.4156791 -4.8833833]]
Iteration 900 of 1000: loss=0.0204 " + "l1=0.0196" + "l2=0.000862 f=-0.384 shape=(1, 9000, 1)
logits [[ 3.37626   -1.4547664  1.4183261 -4.8762875]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.215 " + "l1=0.215" + "l2=0 f=-0.38 shape=(1, 9000, 1)
logits [[ 3.545438  -1.5062071  1.3984534 -4.956419 ]]
Iteration 100 of 1000: loss=0.187 " + "l1=0.176" + "l2=0.0117 f=-0.392 shape=(1, 9000, 1)
logits [[ 3.1782303 -1.3666761  1.4214638 -4.801432 ]]
Iteration 200 of 1000: loss=0.167 " + "l1=0.149" + "l2=0.0176 f=-0.404 shape=(1, 9000, 1)
logits [[ 2.9255252 -1.2938747  1.4362906 -4.682618 ]]
Iteration 300 of 1000: loss=0.139 " + "l1=0.114" + "l2=0.0251 f=-0.413 shape=(1, 9000, 1)
logits [[ 2.5851517 -1.2020937  1.4495025 -4.4832673]]
Iteration 400 of 1000: loss=0.107 " + "l1=0.0727" + "l2=0.0342 f=-0.426 shape=(1, 9000, 1)
logits [[ 2.1868699 -1.1077662  1.4600533 -4.2444663]]
Iteration 500 of 1000: loss=0.0792 " + "l1=0.0369" + "l2=0.0423 f=-0.442 shape=(1, 9000, 1)
logits [[ 1.8372613 -1.0337743  1.4679401 -4.040986 ]]
Iteration 600 of 1000: loss=0.0523 " + "l1=0.00166" + "l2=0.0507 f=-0.456 shape=(1, 9000, 1)
logits [[ 1.4803498  -0.92656696  1.46374    -3.8412137 ]]
Iteration 700 of 1000: loss=0.0402 " + "l1=0.000128" + "l2=0.0401 f=-0.456 shape=(1, 9000, 1)
logits [[ 1.4603142  -0.91542995  1.4590383  -3.8269105 ]]
Iteration 800 of 1000: loss=0.0344 " + "l1=0.000188" + "l2=0.0342 f=-0.455 shape=(1, 9000, 1)
logits [[ 1.453721  -0.9043144  1.451838  -3.8227406]]
Iteration 900 of 1000: loss=0.0306 " + "l1=0.000244" + "l2=0.0304 f=-0.457 shape=(1, 9000, 1)
logits [[ 1.4434406  -0.89215106  1.4410042  -3.8199768 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.118 " + "l1=0.118" + "l2=0 f=-0.38 shape=(1, 9000, 1)
logits [[ 3.545438  -1.5062071  1.3984534 -4.956419 ]]
Iteration 100 of 1000: loss=0.11 " + "l1=0.106" + "l2=0.00346 f=-0.386 shape=(1, 9000, 1)
logits [[ 3.3469946 -1.4329954  1.4131705 -4.869348 ]]
Iteration 200 of 1000: loss=0.105 " + "l1=0.1" + "l2=0.00486 f=-0.39 shape=(1, 9000, 1)
logits [[ 3.2370162 -1.3973813  1.4192464 -4.817909 ]]
Iteration 300 of 1000: loss=0.0988 " + "l1=0.0921" + "l2=0.00666 f=-0.395 shape=(1, 9000, 1)
logits [[ 3.1042452 -1.3592006  1.429245  -4.7527866]]
Iteration 400 of 1000: loss=0.0918 " + "l1=0.0832" + "l2=0.00864 f=-0.399 shape=(1, 9000, 1)
logits [[ 2.9533305 -1.319643   1.4414362 -4.6707716]]
Iteration 500 of 1000: loss=0.0837 " + "l1=0.0723" + "l2=0.0114 f=-0.402 shape=(1, 9000, 1)
logits [[ 2.7680593 -1.2734871  1.4533211 -4.5576324]]
Iteration 600 of 1000: loss=0.0751 " + "l1=0.0607" + "l2=0.0144 f=-0.408 shape=(1, 9000, 1)
logits [[ 2.5724745 -1.2272421  1.4679357 -4.4456286]]
Iteration 700 of 1000: loss=0.0664 " + "l1=0.049" + "l2=0.0175 f=-0.415 shape=(1, 9000, 1)
logits [[ 2.3682096 -1.1860942  1.4780414 -4.3209424]]
Iteration 800 of 1000: loss=0.0589 " + "l1=0.0388" + "l2=0.0201 f=-0.422 shape=(1, 9000, 1)
logits [[ 2.1832194 -1.1412405  1.4771729 -4.208564 ]]
Iteration 900 of 1000: loss=0.0513 " + "l1=0.0285" + "l2=0.0228 f=-0.429 shape=(1, 9000, 1)
logits [[ 1.9994614 -1.1003172  1.4818051 -4.0982447]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.166 " + "l1=0.166" + "l2=0 f=-0.38 shape=(1, 9000, 1)
logits [[ 3.545438  -1.5062071  1.3984534 -4.956419 ]]
Iteration 100 of 1000: loss=0.15 " + "l1=0.143" + "l2=0.00686 f=-0.389 shape=(1, 9000, 1)
logits [[ 3.266333  -1.4020214  1.4181758 -4.8367376]]
Iteration 200 of 1000: loss=0.139 " + "l1=0.129" + "l2=0.0101 f=-0.397 shape=(1, 9000, 1)
logits [[ 3.0893729 -1.3484125  1.4296675 -4.7566605]]
Iteration 300 of 1000: loss=0.125 " + "l1=0.111" + "l2=0.0139 f=-0.403 shape=(1, 9000, 1)
logits [[ 2.8703208 -1.2893758  1.443019  -4.637581 ]]
Iteration 400 of 1000: loss=0.107 " + "l1=0.0881" + "l2=0.0191 f=-0.41 shape=(1, 9000, 1)
logits [[ 2.5939226 -1.2195714  1.4565355 -4.4709845]]
Iteration 500 of 1000: loss=0.0885 " + "l1=0.0636" + "l2=0.0249 f=-0.42 shape=(1, 9000, 1)
logits [[ 2.2907145 -1.1526611  1.4702659 -4.2879634]]
Iteration 600 of 1000: loss=0.0724 " + "l1=0.0432" + "l2=0.0293 f=-0.43 shape=(1, 9000, 1)
logits [[ 2.0295281 -1.0937501  1.4724976 -4.1291265]]
Iteration 700 of 1000: loss=0.0563 " + "l1=0.021" + "l2=0.0353 f=-0.442 shape=(1, 9000, 1)
logits [[ 1.7457908 -1.0207939  1.4744889 -3.9657137]]
Iteration 800 of 1000: loss=0.0433 " + "l1=0.00334" + "l2=0.04 f=-0.453 shape=(1, 9000, 1)
logits [[ 1.5124745 -0.9374748  1.4694238 -3.854999 ]]
Iteration 900 of 1000: loss=0.0351 " + "l1=0.00025" + "l2=0.0349 f=-0.455 shape=(1, 9000, 1)
logits [[ 1.463146   -0.91531557  1.4599205  -3.8261657 ]]
const [0.06625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.142 " + "l1=0.142" + "l2=0 f=-0.38 shape=(1, 9000, 1)
logits [[ 3.545438  -1.5062071  1.3984534 -4.956419 ]]
Iteration 100 of 1000: loss=0.13 " + "l1=0.125" + "l2=0.00494 f=-0.387 shape=(1, 9000, 1)
logits [[ 3.3079054 -1.4184287  1.4156007 -4.853349 ]]
Iteration 200 of 1000: loss=0.122 " + "l1=0.115" + "l2=0.00734 f=-0.393 shape=(1, 9000, 1)
logits [[ 3.1614347 -1.3717643  1.4240154 -4.7860727]]
Iteration 300 of 1000: loss=0.113 " + "l1=0.103" + "l2=0.00976 f=-0.399 shape=(1, 9000, 1)
logits [[ 2.9926212 -1.3265182  1.4360029 -4.698142 ]]
Iteration 400 of 1000: loss=0.101 " + "l1=0.0878" + "l2=0.0134 f=-0.404 shape=(1, 9000, 1)
logits [[ 2.774368  -1.2696288  1.4486039 -4.5696206]]
Iteration 500 of 1000: loss=0.0884 " + "l1=0.071" + "l2=0.0174 f=-0.41 shape=(1, 9000, 1)
logits [[ 2.5356255 -1.2122924  1.4638077 -4.4290257]]
Iteration 600 of 1000: loss=0.0752 " + "l1=0.0533" + "l2=0.0219 f=-0.419 shape=(1, 9000, 1)
logits [[ 2.277395  -1.1564692  1.47274   -4.2703424]]
Iteration 700 of 1000: loss=0.0639 " + "l1=0.0385" + "l2=0.0254 f=-0.428 shape=(1, 9000, 1)
logits [[ 2.0571198 -1.1070613  1.4761657 -4.13719  ]]
Iteration 800 of 1000: loss=0.0527 " + "l1=0.0234" + "l2=0.0293 f=-0.436 shape=(1, 9000, 1)
logits [[ 1.8292754 -1.0482196  1.476597  -4.0016637]]
Iteration 900 of 1000: loss=0.0437 " + "l1=0.0111" + "l2=0.0326 f=-0.446 shape=(1, 9000, 1)
logits [[ 1.6368647  -0.98107356  1.4697348  -3.9077852 ]]
--- 315.73928594589233 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.085 " + "l1=0.085" + "l2=0 f=-0.38 shape=(1, 9000, 1)
logits [[ 3.545438  -1.5062071  1.3984534 -4.956419 ]]
Iteration 100 of 1000: loss=0.084 " + "l1=0.0835" + "l2=0.000466 f=-0.377 shape=(1, 9000, 1)
logits [[ 3.4670372 -1.4721197  1.3789363 -4.8823376]]
Iteration 200 of 1000: loss=0.0835 " + "l1=0.083" + "l2=0.000559 f=-0.376 shape=(1, 9000, 1)
logits [[ 3.441101  -1.4610339  1.3737184 -4.8577895]]
Iteration 300 of 1000: loss=0.0831 " + "l1=0.0824" + "l2=0.000729 f=-0.375 shape=(1, 9000, 1)
logits [[ 3.4113963 -1.4490302  1.3682747 -4.829655 ]]
Iteration 400 of 1000: loss=0.0828 " + "l1=0.0818" + "l2=0.000955 f=-0.373 shape=(1, 9000, 1)
logits [[ 3.3802311 -1.4364989  1.3629988 -4.8004227]]
Iteration 500 of 1000: loss=0.0824 " + "l1=0.0812" + "l2=0.00117 f=-0.372 shape=(1, 9000, 1)
logits [[ 3.349188  -1.4239037  1.3576589 -4.771949 ]]
Iteration 600 of 1000: loss=0.0821 " + "l1=0.0806" + "l2=0.00147 f=-0.371 shape=(1, 9000, 1)
logits [[ 3.317377  -1.4113091  1.3526336 -4.743956 ]]
Iteration 700 of 1000: loss=0.0817 " + "l1=0.08" + "l2=0.00171 f=-0.37 shape=(1, 9000, 1)
logits [[ 3.2858396 -1.3994565  1.3483645 -4.7166276]]
Iteration 800 of 1000: loss=0.0815 " + "l1=0.0794" + "l2=0.00202 f=-0.37 shape=(1, 9000, 1)
logits [[ 3.2543135 -1.3876207  1.3439218 -4.6896615]]
Iteration 900 of 1000: loss=0.0812 " + "l1=0.0789" + "l2=0.00231 f=-0.369 shape=(1, 9000, 1)
logits [[ 3.2234697 -1.3765819  1.3397053 -4.6634707]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.85 " + "l1=0.85" + "l2=0 f=-0.38 shape=(1, 9000, 1)
logits [[ 3.545438  -1.5062071  1.3984534 -4.956419 ]]
Iteration 100 of 1000: loss=0.749 " + "l1=0.706" + "l2=0.043 f=-0.362 shape=(1, 9000, 1)
logits [[ 2.7759902 -1.1399112  1.1972328 -4.2809114]]
Iteration 200 of 1000: loss=0.663 " + "l1=0.589" + "l2=0.0736 f=-0.355 shape=(1, 9000, 1)
logits [[ 2.146246   -0.91896003  1.0943722  -3.7431228 ]]
Iteration 300 of 1000: loss=0.564 " + "l1=0.454" + "l2=0.11 f=-0.358 shape=(1, 9000, 1)
logits [[ 1.417408  -0.6876071  0.9604902 -3.1216564]]
Iteration 400 of 1000: loss=0.479 " + "l1=0.346" + "l2=0.133 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.83945745 -0.44650334  0.83885574 -2.6192303 ]]
Iteration 500 of 1000: loss=0.416 " + "l1=0.297" + "l2=0.119 f=-0.302 shape=(1, 9000, 1)
logits [[ 0.7033428  -0.35214993  0.70498115 -2.2634978 ]]
Iteration 600 of 1000: loss=0.372 " + "l1=0.254" + "l2=0.118 f=-0.284 shape=(1, 9000, 1)
logits [[ 0.5475632  -0.27313226  0.56225747 -1.9744885 ]]
Iteration 700 of 1000: loss=0.317 " + "l1=0.191" + "l2=0.126 f=-0.285 shape=(1, 9000, 1)
logits [[ 0.22139595 -0.13537194  0.34484357 -1.5699983 ]]
Iteration 800 of 1000: loss=0.266 " + "l1=0.139" + "l2=0.127 f=-0.29 shape=(1, 9000, 1)
logits [[-0.08892581 -0.0352127   0.17852312 -1.212627  ]]
Iteration 900 of 1000: loss=0.229 " + "l1=0.106" + "l2=0.123 f=-0.288 shape=(1, 9000, 1)
logits [[-0.23846233 -0.03116446  0.08899875 -0.97266364]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.5 " + "l1=8.5" + "l2=0 f=-0.38 shape=(1, 9000, 1)
logits [[ 3.545438  -1.5062071  1.3984534 -4.956419 ]]
Iteration 100 of 1000: loss=2.72 " + "l1=0.915" + "l2=1.81 f=-0.267 shape=(1, 9000, 1)
logits [[-0.01310429 -0.19411427  0.02744339 -0.8873916 ]]
Iteration 200 of 1000: loss=1.09 " + "l1=0" + "l2=1.09 f=-0.215 shape=(1, 9000, 1)
logits [[-0.17596701 -0.39457026 -0.15217352 -0.13661736]]
Iteration 300 of 1000: loss=0.742 " + "l1=0" + "l2=0.742 f=-0.21 shape=(1, 9000, 1)
logits [[-0.137291   -0.47962517 -0.11777392 -0.10461541]]
Iteration 400 of 1000: loss=0.587 " + "l1=0" + "l2=0.587 f=-0.203 shape=(1, 9000, 1)
logits [[-0.12322389 -0.52680314 -0.10652865 -0.05422303]]
Iteration 500 of 1000: loss=0.484 " + "l1=0" + "l2=0.484 f=-0.195 shape=(1, 9000, 1)
logits [[-0.09185353 -0.5613778  -0.08261248 -0.04442   ]]
Iteration 600 of 1000: loss=0.416 " + "l1=0" + "l2=0.416 f=-0.192 shape=(1, 9000, 1)
logits [[-0.07565693 -0.59840363 -0.06095664 -0.03308222]]
Iteration 700 of 1000: loss=0.363 " + "l1=0" + "l2=0.363 f=-0.189 shape=(1, 9000, 1)
logits [[-0.04951123 -0.64300597 -0.03628864 -0.02688564]]
Iteration 800 of 1000: loss=0.322 " + "l1=0" + "l2=0.322 f=-0.186 shape=(1, 9000, 1)
logits [[-0.03377452 -0.6947695  -0.02036105  0.00420263]]
Iteration 900 of 1000: loss=0.29 " + "l1=0" + "l2=0.29 f=-0.181 shape=(1, 9000, 1)
logits [[-0.02025216 -0.7426937   0.00512606  0.03366344]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.68 " + "l1=4.68" + "l2=0 f=-0.38 shape=(1, 9000, 1)
logits [[ 3.545438  -1.5062071  1.3984534 -4.956419 ]]
Iteration 100 of 1000: loss=2.24 " + "l1=1.3" + "l2=0.939 f=-0.344 shape=(1, 9000, 1)
logits [[ 0.36867404 -0.12460238  0.3733663  -1.9944391 ]]
Iteration 200 of 1000: loss=1.11 " + "l1=0.17" + "l2=0.936 f=-0.239 shape=(1, 9000, 1)
logits [[-0.24336016 -0.138984   -0.13169676 -0.4415345 ]]
Iteration 300 of 1000: loss=0.603 " + "l1=0" + "l2=0.603 f=-0.217 shape=(1, 9000, 1)
logits [[-0.23322053 -0.25197455 -0.20396139 -0.18081427]]
Iteration 400 of 1000: loss=0.46 " + "l1=0" + "l2=0.46 f=-0.217 shape=(1, 9000, 1)
logits [[-0.18753174 -0.307126   -0.18895634 -0.18370104]]
Iteration 500 of 1000: loss=0.383 " + "l1=0.00432" + "l2=0.379 f=-0.222 shape=(1, 9000, 1)
logits [[-0.18279049 -0.34520426 -0.1770105  -0.18485978]]
Iteration 600 of 1000: loss=0.33 " + "l1=0" + "l2=0.33 f=-0.225 shape=(1, 9000, 1)
logits [[-0.17720929 -0.40956283 -0.16504562 -0.14668846]]
Iteration 700 of 1000: loss=0.286 " + "l1=0" + "l2=0.286 f=-0.225 shape=(1, 9000, 1)
logits [[-0.15476586 -0.46103314 -0.1437936  -0.1404584 ]]
Iteration 800 of 1000: loss=0.251 " + "l1=0.00143" + "l2=0.25 f=-0.225 shape=(1, 9000, 1)
logits [[-0.14699757 -0.49597198 -0.12753782 -0.13013789]]
Iteration 900 of 1000: loss=0.224 " + "l1=0" + "l2=0.224 f=-0.224 shape=(1, 9000, 1)
logits [[-0.1398131  -0.5223841  -0.1268553  -0.10559288]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.76 " + "l1=2.76" + "l2=0 f=-0.38 shape=(1, 9000, 1)
logits [[ 3.545438  -1.5062071  1.3984534 -4.956419 ]]
Iteration 100 of 1000: loss=1.74 " + "l1=1.29" + "l2=0.456 f=-0.377 shape=(1, 9000, 1)
logits [[ 1.0871696  -0.4895481   0.76283616 -2.8667698 ]]
Iteration 200 of 1000: loss=1.09 " + "l1=0.653" + "l2=0.432 f=-0.296 shape=(1, 9000, 1)
logits [[ 0.288123   -0.09905907  0.31768787 -1.6922992 ]]
Iteration 300 of 1000: loss=0.678 " + "l1=0.183" + "l2=0.495 f=-0.221 shape=(1, 9000, 1)
logits [[-0.11173286 -0.07060109 -0.06956843 -0.63143814]]
Iteration 400 of 1000: loss=0.416 " + "l1=0.000245" + "l2=0.416 f=-0.209 shape=(1, 9000, 1)
logits [[-0.2514449  -0.21372189 -0.1860024  -0.18675676]]
Iteration 500 of 1000: loss=0.32 " + "l1=0.00249" + "l2=0.318 f=-0.223 shape=(1, 9000, 1)
logits [[-0.24162814 -0.24488367 -0.1995092  -0.2071729 ]]
Iteration 600 of 1000: loss=0.261 " + "l1=0" + "l2=0.261 f=-0.23 shape=(1, 9000, 1)
logits [[-0.21264319 -0.31527922 -0.1977111  -0.19594413]]
Iteration 700 of 1000: loss=0.222 " + "l1=0" + "l2=0.222 f=-0.23 shape=(1, 9000, 1)
logits [[-0.19157739 -0.37414798 -0.18310346 -0.17012754]]
Iteration 800 of 1000: loss=0.192 " + "l1=0" + "l2=0.192 f=-0.23 shape=(1, 9000, 1)
logits [[-0.18142569 -0.4269432  -0.1659108  -0.14520884]]
Iteration 900 of 1000: loss=0.166 " + "l1=0" + "l2=0.166 f=-0.229 shape=(1, 9000, 1)
logits [[-0.15237437 -0.4816198  -0.14591786 -0.13801017]]
--- 317.00787711143494 seconds ---
Adv result:3
Loading record A04587
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.000964 " + "l1=0.000964" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.03026821 -0.06615544 -0.5728886  -0.7810717 ]]
Iteration 100 of 1000: loss=0.000461 " + "l1=0.000168" + "l2=0.000292 f=-0.35 shape=(1, 9000, 1)
logits [[-0.01404021 -0.03086344 -0.589535   -0.7648033 ]]
Iteration 200 of 1000: loss=0.000289 " + "l1=4.16e-07" + "l2=0.000289 f=-0.35 shape=(1, 9000, 1)
logits [[-0.02278113 -0.02282269 -0.5943934  -0.7604873 ]]
Iteration 300 of 1000: loss=0.000223 " + "l1=7.99e-08" + "l2=0.000222 f=-0.35 shape=(1, 9000, 1)
logits [[-0.02296951 -0.0229775  -0.59494364 -0.75959784]]
Iteration 400 of 1000: loss=0.000208 " + "l1=0" + "l2=0.000208 f=-0.35 shape=(1, 9000, 1)
logits [[-0.02344959 -0.0233897  -0.5951403  -0.75869817]]
Iteration 500 of 1000: loss=0.000249 " + "l1=0" + "l2=0.000249 f=-0.35 shape=(1, 9000, 1)
logits [[-0.02413683 -0.0237178  -0.59527415 -0.75791097]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.000482 " + "l1=0.000482" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.03026821 -0.06615544 -0.5728886  -0.7810717 ]]
Iteration 100 of 1000: loss=0.000349 " + "l1=0.000234" + "l2=0.000115 f=-0.349 shape=(1, 9000, 1)
logits [[ 0.00231657 -0.04446095 -0.5827371  -0.7718834 ]]
Iteration 200 of 1000: loss=0.000303 " + "l1=0.000199" + "l2=0.000104 f=-0.349 shape=(1, 9000, 1)
logits [[-0.00111012 -0.04086641 -0.58518374 -0.76936704]]
Iteration 300 of 1000: loss=0.000273 " + "l1=0.000147" + "l2=0.000126 f=-0.349 shape=(1, 9000, 1)
logits [[-0.0067673  -0.03617407 -0.58801466 -0.7662173 ]]
Iteration 400 of 1000: loss=0.000265 " + "l1=9.56e-05" + "l2=0.000169 f=-0.35 shape=(1, 9000, 1)
logits [[-0.01257814 -0.03169174 -0.59063876 -0.7632015 ]]
Iteration 500 of 1000: loss=0.000282 " + "l1=4.51e-05" + "l2=0.000237 f=-0.35 shape=(1, 9000, 1)
logits [[-0.0184457  -0.02746447 -0.5931298  -0.7602116 ]]
const [0.0025]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.000241 " + "l1=0.000241" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.03026821 -0.06615544 -0.5728886  -0.7810717 ]]
Iteration 100 of 1000: loss=0.000215 " + "l1=0.000154" + "l2=6.12e-05 f=-0.349 shape=(1, 9000, 1)
logits [[ 0.01040324 -0.05125421 -0.57953286 -0.77487355]]
Iteration 200 of 1000: loss=0.000192 " + "l1=0.000156" + "l2=3.65e-05 f=-0.349 shape=(1, 9000, 1)
logits [[ 0.01117397 -0.05113607 -0.5799536  -0.7744929 ]]
Iteration 300 of 1000: loss=0.000213 " + "l1=0.000147" + "l2=6.6e-05 f=-0.349 shape=(1, 9000, 1)
logits [[ 0.00926586 -0.04948105 -0.5810628  -0.77312016]]
const [0.00125]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.000121 " + "l1=0.000121" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.03026821 -0.06615544 -0.5728886  -0.7810717 ]]
Iteration 100 of 1000: loss=0.000128 " + "l1=8.64e-05" + "l2=4.21e-05 f=-0.349 shape=(1, 9000, 1)
logits [[ 0.01445873 -0.05463397 -0.57796574 -0.77621233]]
const [0.000625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=6.03e-05 " + "l1=6.03e-05" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.03026821 -0.06615544 -0.5728886  -0.7810717 ]]
Iteration 100 of 1000: loss=7.72e-05 " + "l1=4.64e-05" + "l2=3.07e-05 f=-0.348 shape=(1, 9000, 1)
logits [[ 0.01739267 -0.05687962 -0.5769528  -0.77714324]]
--- 107.56594181060791 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00603 " + "l1=0.00603" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.03026821 -0.06615544 -0.5728886  -0.7810717 ]]
Iteration 100 of 1000: loss=0.00571 " + "l1=0.00547" + "l2=0.00024 f=-0.357 shape=(1, 9000, 1)
logits [[-0.0046499  -0.06612947 -0.5512368  -0.80676293]]
Iteration 200 of 1000: loss=0.00559 " + "l1=0.00536" + "l2=0.00023 f=-0.359 shape=(1, 9000, 1)
logits [[-0.00960301 -0.06658386 -0.54601735 -0.81476206]]
Iteration 300 of 1000: loss=0.0055 " + "l1=0.00521" + "l2=0.000285 f=-0.362 shape=(1, 9000, 1)
logits [[-0.01780168 -0.06661828 -0.53920585 -0.82462114]]
Iteration 400 of 1000: loss=0.00541 " + "l1=0.00504" + "l2=0.00037 f=-0.366 shape=(1, 9000, 1)
logits [[-0.02736223 -0.06692144 -0.5315478  -0.8363564 ]]
Iteration 500 of 1000: loss=0.00535 " + "l1=0.00488" + "l2=0.000465 f=-0.369 shape=(1, 9000, 1)
logits [[-0.03620426 -0.06763996 -0.52437973 -0.8471396 ]]
Iteration 600 of 1000: loss=0.00532 " + "l1=0.00472" + "l2=0.000597 f=-0.372 shape=(1, 9000, 1)
logits [[-0.04504994 -0.06809528 -0.517231   -0.8578953 ]]
Iteration 700 of 1000: loss=0.00525 " + "l1=0.00456" + "l2=0.000694 f=-0.375 shape=(1, 9000, 1)
logits [[-0.05459382 -0.06794618 -0.5103784  -0.8689373 ]]
Iteration 800 of 1000: loss=0.00536 " + "l1=0.00442" + "l2=0.000941 f=-0.378 shape=(1, 9000, 1)
logits [[-0.06258386 -0.06778818 -0.50469923 -0.87775606]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0603 " + "l1=0.0603" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.03026821 -0.06615544 -0.5728886  -0.7810717 ]]
Iteration 100 of 1000: loss=0.0287 " + "l1=0.0123" + "l2=0.0164 f=-0.455 shape=(1, 9000, 1)
logits [[-0.18710664 -0.18309264 -0.30658346 -1.1431199 ]]
Iteration 200 of 1000: loss=0.0211 " + "l1=0.00242" + "l2=0.0186 f=-0.468 shape=(1, 9000, 1)
logits [[-0.21857704 -0.22219296 -0.24280465 -1.1903477 ]]
Iteration 300 of 1000: loss=0.0163 " + "l1=4.31e-05" + "l2=0.0162 f=-0.468 shape=(1, 9000, 1)
logits [[-0.22489458 -0.2306438  -0.22532524 -1.1908795 ]]
Iteration 400 of 1000: loss=0.0139 " + "l1=9.85e-05" + "l2=0.0138 f=-0.463 shape=(1, 9000, 1)
logits [[-0.22204429 -0.2290093  -0.22302938 -1.1790947 ]]
Iteration 500 of 1000: loss=0.0126 " + "l1=0" + "l2=0.0126 f=-0.463 shape=(1, 9000, 1)
logits [[-0.21694532 -0.233698   -0.21439312 -1.1867766 ]]
Iteration 600 of 1000: loss=0.011 " + "l1=0" + "l2=0.011 f=-0.46 shape=(1, 9000, 1)
logits [[-0.21872815 -0.22185574 -0.21840838 -1.1808116 ]]
Iteration 700 of 1000: loss=0.0103 " + "l1=0" + "l2=0.0103 f=-0.459 shape=(1, 9000, 1)
logits [[-0.21765539 -0.21792881 -0.21581788 -1.1835514 ]]
Iteration 800 of 1000: loss=0.00999 " + "l1=0.000119" + "l2=0.00987 f=-0.458 shape=(1, 9000, 1)
logits [[-0.2091052  -0.22164325 -0.2102975  -1.1907823 ]]
Iteration 900 of 1000: loss=0.00916 " + "l1=2.25e-05" + "l2=0.00914 f=-0.457 shape=(1, 9000, 1)
logits [[-0.21511906 -0.21163924 -0.21186374 -1.1902497 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0332 " + "l1=0.0332" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.03026821 -0.06615544 -0.5728886  -0.7810717 ]]
Iteration 100 of 1000: loss=0.0233 " + "l1=0.0168" + "l2=0.00652 f=-0.414 shape=(1, 9000, 1)
logits [[-0.11872194 -0.11982808 -0.423314   -0.99405533]]
Iteration 200 of 1000: loss=0.0201 " + "l1=0.0115" + "l2=0.00859 f=-0.435 shape=(1, 9000, 1)
logits [[-0.15199417 -0.15342969 -0.36164042 -1.0720011 ]]
Iteration 300 of 1000: loss=0.018 " + "l1=0.00863" + "l2=0.00941 f=-0.442 shape=(1, 9000, 1)
logits [[-0.17126349 -0.17123517 -0.3281704  -1.0986435 ]]
Iteration 400 of 1000: loss=0.0163 " + "l1=0.00597" + "l2=0.0103 f=-0.449 shape=(1, 9000, 1)
logits [[-0.1868959  -0.18807438 -0.29551002 -1.1273916 ]]
Iteration 500 of 1000: loss=0.0146 " + "l1=0.00389" + "l2=0.0107 f=-0.454 shape=(1, 9000, 1)
logits [[-0.19707604 -0.20248918 -0.26775846 -1.1468838 ]]
Iteration 600 of 1000: loss=0.0129 " + "l1=0.00163" + "l2=0.0113 f=-0.458 shape=(1, 9000, 1)
logits [[-0.21382043 -0.21286751 -0.24246933 -1.1633322 ]]
Iteration 700 of 1000: loss=0.0113 " + "l1=0.000307" + "l2=0.011 f=-0.46 shape=(1, 9000, 1)
logits [[-0.21758907 -0.22191145 -0.22316274 -1.1792712 ]]
Iteration 800 of 1000: loss=0.0102 " + "l1=0.000173" + "l2=0.0101 f=-0.46 shape=(1, 9000, 1)
logits [[-0.2168315  -0.2172765  -0.21998064 -1.1845881 ]]
Iteration 900 of 1000: loss=0.00956 " + "l1=3.4e-05" + "l2=0.00953 f=-0.459 shape=(1, 9000, 1)
logits [[-0.21395344 -0.216962   -0.21457215 -1.1918274 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0196 " + "l1=0.0196" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.03026821 -0.06615544 -0.5728886  -0.7810717 ]]
Iteration 100 of 1000: loss=0.0162 " + "l1=0.0142" + "l2=0.00201 f=-0.379 shape=(1, 9000, 1)
logits [[-0.06423804 -0.07747274 -0.50131243 -0.87455934]]
Iteration 200 of 1000: loss=0.015 " + "l1=0.0126" + "l2=0.00244 f=-0.39 shape=(1, 9000, 1)
logits [[-0.08608443 -0.08939481 -0.4741081  -0.9117152 ]]
Iteration 300 of 1000: loss=0.014 " + "l1=0.0113" + "l2=0.00266 f=-0.399 shape=(1, 9000, 1)
logits [[-0.1008008  -0.10223847 -0.4489022  -0.94454575]]
Iteration 400 of 1000: loss=0.013 " + "l1=0.0101" + "l2=0.00291 f=-0.407 shape=(1, 9000, 1)
logits [[-0.11293478 -0.11419114 -0.42499682 -0.9770965 ]]
Iteration 500 of 1000: loss=0.0123 " + "l1=0.00907" + "l2=0.00327 f=-0.414 shape=(1, 9000, 1)
logits [[-0.12313941 -0.12596053 -0.40236598 -1.0065149 ]]
Iteration 600 of 1000: loss=0.0117 " + "l1=0.00802" + "l2=0.00372 f=-0.421 shape=(1, 9000, 1)
logits [[-0.1331284  -0.13653259 -0.37987927 -1.0337458 ]]
Iteration 700 of 1000: loss=0.0111 " + "l1=0.00695" + "l2=0.00419 f=-0.427 shape=(1, 9000, 1)
logits [[-0.14351091 -0.1460176  -0.35724747 -1.0621684 ]]
Iteration 800 of 1000: loss=0.0107 " + "l1=0.00601" + "l2=0.00471 f=-0.433 shape=(1, 9000, 1)
logits [[-0.15201779 -0.15461268 -0.33690348 -1.0864819 ]]
Iteration 900 of 1000: loss=0.0101 " + "l1=0.00518" + "l2=0.00496 f=-0.437 shape=(1, 9000, 1)
logits [[-0.15934597 -0.16095199 -0.3186662  -1.1078461 ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0264 " + "l1=0.0264" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.03026821 -0.06615544 -0.5728886  -0.7810717 ]]
Iteration 100 of 1000: loss=0.0203 " + "l1=0.0165" + "l2=0.00376 f=-0.394 shape=(1, 9000, 1)
logits [[-0.09208106 -0.09224515 -0.46950287 -0.92145765]]
Iteration 200 of 1000: loss=0.0184 " + "l1=0.0134" + "l2=0.00497 f=-0.411 shape=(1, 9000, 1)
logits [[-0.1170121  -0.11861309 -0.4238997  -0.9843218 ]]
Iteration 300 of 1000: loss=0.0169 " + "l1=0.0106" + "l2=0.00626 f=-0.425 shape=(1, 9000, 1)
logits [[-0.13871934 -0.14229752 -0.38095826 -1.0372121 ]]
Iteration 400 of 1000: loss=0.0157 " + "l1=0.00887" + "l2=0.00683 f=-0.431 shape=(1, 9000, 1)
logits [[-0.15539703 -0.15301697 -0.35584992 -1.0587406 ]]
Iteration 500 of 1000: loss=0.0145 " + "l1=0.00751" + "l2=0.00699 f=-0.434 shape=(1, 9000, 1)
logits [[-0.16255796 -0.16411214 -0.33429316 -1.0749223 ]]
Iteration 600 of 1000: loss=0.0135 " + "l1=0.00639" + "l2=0.00715 f=-0.437 shape=(1, 9000, 1)
logits [[-0.17172128 -0.17005993 -0.3161975  -1.0904559 ]]
Iteration 700 of 1000: loss=0.0125 " + "l1=0.00512" + "l2=0.0074 f=-0.441 shape=(1, 9000, 1)
logits [[-0.18109092 -0.17775284 -0.29478684 -1.1112944 ]]
Iteration 800 of 1000: loss=0.0116 " + "l1=0.00365" + "l2=0.00796 f=-0.446 shape=(1, 9000, 1)
logits [[-0.1893149  -0.18774748 -0.271124   -1.1357459 ]]
Iteration 900 of 1000: loss=0.0104 " + "l1=0.00226" + "l2=0.00816 f=-0.45 shape=(1, 9000, 1)
logits [[-0.1958571  -0.19714047 -0.24760322 -1.1610469 ]]
--- 304.76576042175293 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00811 " + "l1=0.00811" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.03026821 -0.06615544 -0.5728886  -0.7810717 ]]
Iteration 100 of 1000: loss=0.00729 " + "l1=0.00679" + "l2=0.000503 f=-0.339 shape=(1, 9000, 1)
logits [[-0.00829463 -0.046809   -0.6137189  -0.6872431 ]]
Iteration 200 of 1000: loss=0.00699 " + "l1=0.00645" + "l2=0.000543 f=-0.338 shape=(1, 9000, 1)
logits [[-0.02078424 -0.03853969 -0.6262301  -0.66541946]]
Iteration 300 of 1000: loss=0.00673 " + "l1=0.00609" + "l2=0.000637 f=-0.336 shape=(1, 9000, 1)
logits [[-0.03179518 -0.0323448  -0.6393171  -0.64125896]]
Iteration 400 of 1000: loss=0.00652 " + "l1=0.00587" + "l2=0.00065 f=-0.334 shape=(1, 9000, 1)
logits [[-0.03436796 -0.034478   -0.6474521  -0.6213529 ]]
Iteration 500 of 1000: loss=0.00642 " + "l1=0.00566" + "l2=0.000764 f=-0.333 shape=(1, 9000, 1)
logits [[-0.03668096 -0.03700557 -0.65470105 -0.6027805 ]]
Iteration 600 of 1000: loss=0.00625 " + "l1=0.00546" + "l2=0.000792 f=-0.331 shape=(1, 9000, 1)
logits [[-0.03900062 -0.03914589 -0.66175884 -0.58522505]]
Iteration 700 of 1000: loss=0.00614 " + "l1=0.00526" + "l2=0.000876 f=-0.33 shape=(1, 9000, 1)
logits [[-0.04166809 -0.04172947 -0.66853696 -0.5677199 ]]
Iteration 800 of 1000: loss=0.00606 " + "l1=0.00506" + "l2=0.001 f=-0.329 shape=(1, 9000, 1)
logits [[-0.044372   -0.04405642 -0.6754599  -0.55044675]]
Iteration 900 of 1000: loss=0.00592 " + "l1=0.00486" + "l2=0.00106 f=-0.327 shape=(1, 9000, 1)
logits [[-0.04737681 -0.04628363 -0.6825857  -0.53234726]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0811 " + "l1=0.0811" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.03026821 -0.06615544 -0.5728886  -0.7810717 ]]
Iteration 100 of 1000: loss=0.0254 " + "l1=0" + "l2=0.0254 f=-0.281 shape=(1, 9000, 1)
logits [[-0.10829754 -0.11146019 -0.79843587 -0.10389363]]
Iteration 200 of 1000: loss=0.0143 " + "l1=0" + "l2=0.0143 f=-0.274 shape=(1, 9000, 1)
logits [[-0.0958929  -0.09068925 -0.828356   -0.07948736]]
Iteration 300 of 1000: loss=0.0103 " + "l1=1.44e-05" + "l2=0.0102 f=-0.271 shape=(1, 9000, 1)
logits [[-0.08830795 -0.07751564 -0.8413514  -0.07765997]]
Iteration 400 of 1000: loss=0.00863 " + "l1=0" + "l2=0.00863 f=-0.27 shape=(1, 9000, 1)
logits [[-0.07674853 -0.08805127 -0.8422577  -0.07214624]]
Iteration 500 of 1000: loss=0.00747 " + "l1=0" + "l2=0.00747 f=-0.272 shape=(1, 9000, 1)
logits [[-0.08260404 -0.08227158 -0.84461445 -0.07689207]]
Iteration 600 of 1000: loss=0.00705 " + "l1=0" + "l2=0.00705 f=-0.272 shape=(1, 9000, 1)
logits [[-0.08305332 -0.08418643 -0.8459295  -0.07450415]]
Iteration 700 of 1000: loss=0.00648 " + "l1=0" + "l2=0.00648 f=-0.273 shape=(1, 9000, 1)
logits [[-0.08606685 -0.08299138 -0.8463475  -0.07737776]]
Iteration 800 of 1000: loss=0.00647 " + "l1=0" + "l2=0.00647 f=-0.273 shape=(1, 9000, 1)
logits [[-0.0923     -0.08913475 -0.8469837  -0.06357473]]
Iteration 900 of 1000: loss=0.00552 " + "l1=0" + "l2=0.00552 f=-0.276 shape=(1, 9000, 1)
logits [[-0.10368542 -0.08594454 -0.83552134 -0.07829823]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0446 " + "l1=0.0446" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.03026821 -0.06615544 -0.5728886  -0.7810717 ]]
Iteration 100 of 1000: loss=0.027 " + "l1=0.0195" + "l2=0.00756 f=-0.313 shape=(1, 9000, 1)
logits [[-0.06505654 -0.06376273 -0.7051369  -0.41759044]]
Iteration 200 of 1000: loss=0.0199 " + "l1=0.00913" + "l2=0.0108 f=-0.294 shape=(1, 9000, 1)
logits [[-0.08137143 -0.08313589 -0.76500297 -0.24737456]]
Iteration 300 of 1000: loss=0.0119 " + "l1=0" + "l2=0.0119 f=-0.274 shape=(1, 9000, 1)
logits [[-0.09303167 -0.08767482 -0.82859236 -0.08668499]]
Iteration 400 of 1000: loss=0.00889 " + "l1=9.85e-06" + "l2=0.00888 f=-0.272 shape=(1, 9000, 1)
logits [[-0.08273625 -0.08350492 -0.838285   -0.08291534]]
Iteration 500 of 1000: loss=0.00772 " + "l1=0" + "l2=0.00772 f=-0.272 shape=(1, 9000, 1)
logits [[-0.08115716 -0.08555499 -0.84195477 -0.07813587]]
Iteration 600 of 1000: loss=0.00725 " + "l1=0" + "l2=0.00725 f=-0.272 shape=(1, 9000, 1)
logits [[-0.08483781 -0.08485609 -0.8457759  -0.0721112 ]]
Iteration 700 of 1000: loss=0.00659 " + "l1=0" + "l2=0.00659 f=-0.273 shape=(1, 9000, 1)
logits [[-0.08989987 -0.081239   -0.8468777  -0.07509425]]
Iteration 800 of 1000: loss=0.00592 " + "l1=0.00021" + "l2=0.00571 f=-0.276 shape=(1, 9000, 1)
logits [[-0.09027196 -0.08673473 -0.83451307 -0.09054973]]
Iteration 900 of 1000: loss=0.00544 " + "l1=0" + "l2=0.00544 f=-0.276 shape=(1, 9000, 1)
logits [[-0.0985049  -0.0966279  -0.82413673 -0.08571196]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0264 " + "l1=0.0264" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.03026821 -0.06615544 -0.5728886  -0.7810717 ]]
Iteration 100 of 1000: loss=0.0193 " + "l1=0.0164" + "l2=0.00298 f=-0.326 shape=(1, 9000, 1)
logits [[-0.04609028 -0.04494072 -0.6658657  -0.5484737 ]]
Iteration 200 of 1000: loss=0.0173 " + "l1=0.0137" + "l2=0.00357 f=-0.318 shape=(1, 9000, 1)
logits [[-0.0524158  -0.05377867 -0.6926696  -0.47406256]]
Iteration 300 of 1000: loss=0.0152 " + "l1=0.0108" + "l2=0.00437 f=-0.309 shape=(1, 9000, 1)
logits [[-0.06249763 -0.06010281 -0.72211486 -0.39271763]]
Iteration 400 of 1000: loss=0.0129 " + "l1=0.00747" + "l2=0.00538 f=-0.3 shape=(1, 9000, 1)
logits [[-0.07370176 -0.070636   -0.75340205 -0.3005791 ]]
Iteration 500 of 1000: loss=0.0104 " + "l1=0.00375" + "l2=0.00664 f=-0.288 shape=(1, 9000, 1)
logits [[-0.0838423  -0.08425792 -0.78283983 -0.19921467]]
Iteration 600 of 1000: loss=0.00715 " + "l1=0.000115" + "l2=0.00703 f=-0.277 shape=(1, 9000, 1)
logits [[-0.10027606 -0.10122271 -0.80200565 -0.10382173]]
Iteration 700 of 1000: loss=0.0055 " + "l1=7.38e-05" + "l2=0.00542 f=-0.279 shape=(1, 9000, 1)
logits [[-0.10771262 -0.11217063 -0.786569   -0.10998402]]
Iteration 800 of 1000: loss=0.00454 " + "l1=0" + "l2=0.00454 f=-0.283 shape=(1, 9000, 1)
logits [[-0.1177991  -0.12719026 -0.77128917 -0.11400717]]
Iteration 900 of 1000: loss=0.00384 " + "l1=0" + "l2=0.00384 f=-0.284 shape=(1, 9000, 1)
logits [[-0.11639947 -0.15213929 -0.7559317  -0.11109175]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0172 " + "l1=0.0172" + "l2=0 f=-0.347 shape=(1, 9000, 1)
logits [[ 0.03026821 -0.06615544 -0.5728886  -0.7810717 ]]
Iteration 100 of 1000: loss=0.0138 " + "l1=0.0122" + "l2=0.00165 f=-0.333 shape=(1, 9000, 1)
logits [[-0.03691089 -0.03720762 -0.6463234  -0.6098293 ]]
Iteration 200 of 1000: loss=0.0129 " + "l1=0.0112" + "l2=0.00165 f=-0.329 shape=(1, 9000, 1)
logits [[-0.04150856 -0.04141048 -0.66244704 -0.569012  ]]
Iteration 300 of 1000: loss=0.0121 " + "l1=0.0102" + "l2=0.00188 f=-0.324 shape=(1, 9000, 1)
logits [[-0.04691061 -0.04549015 -0.6794711  -0.52532154]]
Iteration 400 of 1000: loss=0.0113 " + "l1=0.0091" + "l2=0.0022 f=-0.32 shape=(1, 9000, 1)
logits [[-0.05187921 -0.05091631 -0.69606215 -0.47934926]]
Iteration 500 of 1000: loss=0.0104 " + "l1=0.00786" + "l2=0.00259 f=-0.314 shape=(1, 9000, 1)
logits [[-0.05830061 -0.05545469 -0.7154186  -0.425277  ]]
Iteration 600 of 1000: loss=0.00966 " + "l1=0.00659" + "l2=0.00307 f=-0.309 shape=(1, 9000, 1)
logits [[-0.06664031 -0.06547419 -0.72883064 -0.37548783]]
Iteration 700 of 1000: loss=0.00873 " + "l1=0.00516" + "l2=0.00357 f=-0.304 shape=(1, 9000, 1)
logits [[-0.07752685 -0.07830235 -0.7404626  -0.32054406]]
Iteration 800 of 1000: loss=0.0072 " + "l1=0.00285" + "l2=0.00435 f=-0.295 shape=(1, 9000, 1)
logits [[-0.09728716 -0.0956203  -0.7574572  -0.2296964 ]]
Iteration 900 of 1000: loss=0.00496 " + "l1=0" + "l2=0.00496 f=-0.285 shape=(1, 9000, 1)
logits [[-0.12334927 -0.13248934 -0.7622677  -0.12324353]]
--- 318.5731942653656 seconds ---
Adv result:3
