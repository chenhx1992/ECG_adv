Updating 912353f..7b65ebe
Fast-forward
 EOT_tile-test.py | 7 +++++--
 EOT_tile_tf.py   | 4 ++--
 2 files changed, 7 insertions(+), 4 deletions(-)
Loading model
Loading ground truth file
Attack diff is running...
Loading record A05138
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0648 " + "l1=0.0648" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.9696596 -2.5057962  2.5008185 -5.9815674]]
Iteration 100 of 1000: loss=0.0643 " + "l1=0.0641" + "l2=0.000241 f=-0.503 shape=(1, 9000, 1)
logits [[ 3.9287684 -2.4810357  2.4863472 -5.945635 ]]
Iteration 200 of 1000: loss=0.0642 " + "l1=0.064" + "l2=0.000239 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.92084   -2.474936   2.482806  -5.9375825]]
Iteration 300 of 1000: loss=0.0641 " + "l1=0.0638" + "l2=0.000305 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.9099588 -2.4674094  2.4785378 -5.927324 ]]
Iteration 400 of 1000: loss=0.064 " + "l1=0.0636" + "l2=0.000403 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.8987885 -2.4594316  2.4741557 -5.9168854]]
Iteration 500 of 1000: loss=0.0639 " + "l1=0.0634" + "l2=0.000542 f=-0.5 shape=(1, 9000, 1)
logits [[ 3.8875275 -2.4513788  2.4698284 -5.9064813]]
Iteration 600 of 1000: loss=0.0638 " + "l1=0.0632" + "l2=0.000584 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.8764539 -2.4433     2.4656026 -5.896522 ]]
Iteration 700 of 1000: loss=0.0638 " + "l1=0.063" + "l2=0.000768 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.8661098 -2.435675   2.4616876 -5.887162 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.648 " + "l1=0.648" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.9696596 -2.5057962  2.5008185 -5.9815674]]
Iteration 100 of 1000: loss=0.613 " + "l1=0.6" + "l2=0.0135 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.6792526 -2.3168263  2.3908772 -5.7334547]]
Iteration 200 of 1000: loss=0.593 " + "l1=0.571" + "l2=0.0216 f=-0.485 shape=(1, 9000, 1)
logits [[ 3.5164492 -2.195544   2.3190987 -5.5791783]]
Iteration 300 of 1000: loss=0.573 " + "l1=0.543" + "l2=0.0302 f=-0.475 shape=(1, 9000, 1)
logits [[ 3.3492346 -2.0835943  2.2532074 -5.4193525]]
Iteration 400 of 1000: loss=0.557 " + "l1=0.521" + "l2=0.0362 f=-0.466 shape=(1, 9000, 1)
logits [[ 3.2119026 -1.999055   2.2039928 -5.2788897]]
Iteration 500 of 1000: loss=0.542 " + "l1=0.499" + "l2=0.0428 f=-0.457 shape=(1, 9000, 1)
logits [[ 3.0705395 -1.9198159  2.1556795 -5.133594 ]]
Iteration 600 of 1000: loss=0.527 " + "l1=0.478" + "l2=0.0488 f=-0.448 shape=(1, 9000, 1)
logits [[ 2.936441  -1.8413303  2.102854  -4.989707 ]]
Iteration 700 of 1000: loss=0.512 " + "l1=0.457" + "l2=0.0547 f=-0.441 shape=(1, 9000, 1)
logits [[ 2.7999585 -1.767733   2.0456524 -4.839985 ]]
Iteration 800 of 1000: loss=0.497 " + "l1=0.436" + "l2=0.0615 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.6599839 -1.6972371  1.9897276 -4.6956453]]
Iteration 900 of 1000: loss=0.485 " + "l1=0.419" + "l2=0.0657 f=-0.43 shape=(1, 9000, 1)
logits [[ 2.5494168 -1.6398445  1.9518286 -4.582973 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.48 " + "l1=6.48" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.9696596 -2.5057962  2.5008185 -5.9815674]]
Iteration 100 of 1000: loss=3.91 " + "l1=2.82" + "l2=1.09 f=-0.458 shape=(1, 9000, 1)
logits [[ 1.6398357 -1.1793987  1.6173996 -3.9106407]]
Iteration 200 of 1000: loss=3.09 " + "l1=2.09" + "l2=0.999 f=-0.445 shape=(1, 9000, 1)
logits [[ 1.2642926 -0.8140936  1.2715504 -3.500174 ]]
Iteration 300 of 1000: loss=2.62 " + "l1=1.69" + "l2=0.931 f=-0.423 shape=(1, 9000, 1)
logits [[ 1.0595062  -0.62755555  1.065352   -3.1890597 ]]
Iteration 400 of 1000: loss=2.26 " + "l1=1.35" + "l2=0.907 f=-0.401 shape=(1, 9000, 1)
logits [[ 0.855104   -0.48565948  0.86236584 -2.8350008 ]]
Iteration 500 of 1000: loss=1.99 " + "l1=1.1" + "l2=0.887 f=-0.395 shape=(1, 9000, 1)
logits [[ 0.69299114 -0.39194146  0.7115139  -2.5920413 ]]
Iteration 600 of 1000: loss=1.81 " + "l1=0.933" + "l2=0.88 f=-0.392 shape=(1, 9000, 1)
logits [[ 0.5983775 -0.3256088  0.6070891 -2.4490254]]
Iteration 700 of 1000: loss=1.68 " + "l1=0.751" + "l2=0.924 f=-0.396 shape=(1, 9000, 1)
logits [[ 0.42355895 -0.26348418  0.48772192 -2.232947  ]]
Iteration 800 of 1000: loss=1.54 " + "l1=0.55" + "l2=0.986 f=-0.39 shape=(1, 9000, 1)
logits [[ 0.29291937 -0.19099754  0.3589024  -2.0198245 ]]
Iteration 900 of 1000: loss=1.43 " + "l1=0.434" + "l2=0.991 f=-0.383 shape=(1, 9000, 1)
logits [[ 0.24814376 -0.15749411  0.27655068 -1.8992579 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=64.8 " + "l1=64.8" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.9696596 -2.5057962  2.5008185 -5.9815674]]
Iteration 100 of 1000: loss=11.7 " + "l1=2.47" + "l2=9.26 f=-0.48 shape=(1, 9000, 1)
logits [[-0.05293471  0.23398362  0.48083273 -2.5806327 ]]
Iteration 200 of 1000: loss=5.87 " + "l1=0" + "l2=5.87 f=-0.501 shape=(1, 9000, 1)
logits [[-0.0605808   0.38729572  0.38702157 -2.7188995 ]]
Iteration 300 of 1000: loss=4.78 " + "l1=0" + "l2=4.78 f=-0.492 shape=(1, 9000, 1)
logits [[ 0.0692845   0.3764518   0.37231058 -2.7879844 ]]
Iteration 400 of 1000: loss=4.18 " + "l1=0" + "l2=4.18 f=-0.491 shape=(1, 9000, 1)
logits [[ 0.130941   0.3586654  0.3573554 -2.8121536]]
Iteration 500 of 1000: loss=3.8 " + "l1=0" + "l2=3.8 f=-0.488 shape=(1, 9000, 1)
logits [[ 0.14349264  0.35214645  0.33938774 -2.7859137 ]]
Iteration 600 of 1000: loss=3.47 " + "l1=0" + "l2=3.47 f=-0.483 shape=(1, 9000, 1)
logits [[ 0.16440722  0.3336947   0.32690093 -2.758894  ]]
Iteration 700 of 1000: loss=3.21 " + "l1=0" + "l2=3.21 f=-0.48 shape=(1, 9000, 1)
logits [[ 0.1831827   0.3222627   0.31446722 -2.7393222 ]]
Iteration 800 of 1000: loss=3.03 " + "l1=0" + "l2=3.03 f=-0.475 shape=(1, 9000, 1)
logits [[ 0.17613529  0.31262246  0.30044857 -2.688824  ]]
Iteration 900 of 1000: loss=2.91 " + "l1=0" + "l2=2.91 f=-0.471 shape=(1, 9000, 1)
logits [[ 0.16092807  0.31426248  0.28482917 -2.6436913 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=35.6 " + "l1=35.6" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.9696596 -2.5057962  2.5008185 -5.9815674]]
Iteration 100 of 1000: loss=9.9 " + "l1=4.71" + "l2=5.19 f=-0.481 shape=(1, 9000, 1)
logits [[ 0.529303   -0.13706163  0.72016877 -3.0372877 ]]
Iteration 200 of 1000: loss=4.83 " + "l1=0" + "l2=4.83 f=-0.481 shape=(1, 9000, 1)
logits [[ 0.05847681  0.38011768  0.3796411  -2.7440467 ]]
Iteration 300 of 1000: loss=3.95 " + "l1=0.0564" + "l2=3.89 f=-0.476 shape=(1, 9000, 1)
logits [[ 0.15699701  0.34905812  0.35930425 -2.7709658 ]]
Iteration 400 of 1000: loss=3.45 " + "l1=0" + "l2=3.45 f=-0.471 shape=(1, 9000, 1)
logits [[ 0.14555606  0.35390776  0.33190215 -2.7167313 ]]
Iteration 500 of 1000: loss=3.07 " + "l1=0.0312" + "l2=3.04 f=-0.466 shape=(1, 9000, 1)
logits [[ 0.18121737  0.3230333   0.32871374 -2.6976357 ]]
Iteration 600 of 1000: loss=2.81 " + "l1=0" + "l2=2.81 f=-0.461 shape=(1, 9000, 1)
logits [[ 0.1711277   0.31299365  0.31261176 -2.6420984 ]]
Iteration 700 of 1000: loss=2.64 " + "l1=0" + "l2=2.64 f=-0.461 shape=(1, 9000, 1)
logits [[ 0.13278043  0.29846397  0.29754278 -2.5734317 ]]
Iteration 800 of 1000: loss=2.49 " + "l1=0" + "l2=2.49 f=-0.459 shape=(1, 9000, 1)
logits [[ 0.08329099  0.28054333  0.2765024  -2.478094  ]]
Iteration 900 of 1000: loss=2.36 " + "l1=0.00561" + "l2=2.35 f=-0.457 shape=(1, 9000, 1)
logits [[ 0.04623581  0.25702453  0.2580444  -2.3878493 ]]
--- 267.58336663246155 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0147 " + "l1=0.0147" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.9696596 -2.5057962  2.5008185 -5.9815674]]
Iteration 100 of 1000: loss=0.0145 " + "l1=0.0144" + "l2=0.000144 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.940804  -2.5033593  2.501245  -5.9582376]]
Iteration 200 of 1000: loss=0.0145 " + "l1=0.0144" + "l2=0.000102 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.939003  -2.5031135  2.5009356 -5.9558797]]
Iteration 300 of 1000: loss=0.0145 " + "l1=0.0143" + "l2=0.000127 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.934369  -2.5024514  2.5008473 -5.9516425]]
Iteration 400 of 1000: loss=0.0144 " + "l1=0.0143" + "l2=0.000156 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.928964  -2.5017624  2.5008647 -5.946783 ]]
Iteration 500 of 1000: loss=0.0144 " + "l1=0.0142" + "l2=0.000212 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.9232612 -2.5011163  2.5009606 -5.941671 ]]
Iteration 600 of 1000: loss=0.0144 " + "l1=0.0142" + "l2=0.000256 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.9174407 -2.5004573  2.5011244 -5.9365587]]
Iteration 700 of 1000: loss=0.0145 " + "l1=0.0141" + "l2=0.000365 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.9116492 -2.4998171  2.5013144 -5.9315343]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.147 " + "l1=0.147" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.9696596 -2.5057962  2.5008185 -5.9815674]]
Iteration 100 of 1000: loss=0.135 " + "l1=0.131" + "l2=0.00463 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.8075259 -2.4869964  2.5005696 -5.8499684]]
Iteration 200 of 1000: loss=0.13 " + "l1=0.124" + "l2=0.0064 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.7366605 -2.4761636  2.4985936 -5.7871   ]]
Iteration 300 of 1000: loss=0.126 " + "l1=0.118" + "l2=0.00784 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.6734233 -2.463407   2.4949496 -5.729961 ]]
Iteration 400 of 1000: loss=0.121 " + "l1=0.111" + "l2=0.00949 f=-0.505 shape=(1, 9000, 1)
logits [[ 3.6033583 -2.4477777  2.4903784 -5.665047 ]]
Iteration 500 of 1000: loss=0.115 " + "l1=0.104" + "l2=0.0115 f=-0.503 shape=(1, 9000, 1)
logits [[ 3.5232697 -2.4322977  2.4852757 -5.5902457]]
Iteration 600 of 1000: loss=0.109 " + "l1=0.0957" + "l2=0.0136 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.440561  -2.4213796  2.4832644 -5.512071 ]]
Iteration 700 of 1000: loss=0.103 " + "l1=0.0868" + "l2=0.0162 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.3502445 -2.4117246  2.481861  -5.427763 ]]
Iteration 800 of 1000: loss=0.0964 " + "l1=0.0775" + "l2=0.0188 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.24948   -2.3977704  2.4742584 -5.334051 ]]
Iteration 900 of 1000: loss=0.0906 " + "l1=0.0695" + "l2=0.0211 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.1611094 -2.386953   2.4659781 -5.247643 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.47 " + "l1=1.47" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.9696596 -2.5057962  2.5008185 -5.9815674]]
Iteration 100 of 1000: loss=0.434 " + "l1=0.0184" + "l2=0.416 f=-0.494 shape=(1, 9000, 1)
logits [[ 2.4990165 -2.3258123  2.4806476 -4.6309786]]
Iteration 200 of 1000: loss=0.219 " + "l1=0.000911" + "l2=0.219 f=-0.486 shape=(1, 9000, 1)
logits [[ 2.4592135 -2.3073914  2.458303  -4.5552926]]
Iteration 300 of 1000: loss=0.155 " + "l1=0" + "l2=0.155 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.42133   -2.261424   2.4219904 -4.5045676]]
Iteration 400 of 1000: loss=0.122 " + "l1=0" + "l2=0.122 f=-0.478 shape=(1, 9000, 1)
logits [[ 2.395942  -2.2399054  2.3974254 -4.465452 ]]
Iteration 500 of 1000: loss=0.101 " + "l1=0.000502" + "l2=0.101 f=-0.477 shape=(1, 9000, 1)
logits [[ 2.382578  -2.23085    2.3820758 -4.442823 ]]
Iteration 600 of 1000: loss=0.0883 " + "l1=0" + "l2=0.0883 f=-0.476 shape=(1, 9000, 1)
logits [[ 2.3656125 -2.219283   2.3694808 -4.4206786]]
Iteration 700 of 1000: loss=0.0809 " + "l1=0" + "l2=0.0809 f=-0.476 shape=(1, 9000, 1)
logits [[ 2.3437877 -2.2119899  2.3574717 -4.392054 ]]
Iteration 800 of 1000: loss=0.0714 " + "l1=0" + "l2=0.0714 f=-0.475 shape=(1, 9000, 1)
logits [[ 2.3469417 -2.2099996  2.3473754 -4.3838534]]
Iteration 900 of 1000: loss=0.066 " + "l1=0" + "l2=0.066 f=-0.472 shape=(1, 9000, 1)
logits [[ 2.3359666 -2.207915   2.3397627 -4.3556943]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.808 " + "l1=0.808" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.9696596 -2.5057962  2.5008185 -5.9815674]]
Iteration 100 of 1000: loss=0.495 " + "l1=0.363" + "l2=0.132 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.1412215 -2.3928099  2.4812481 -5.2561884]]
Iteration 200 of 1000: loss=0.278 " + "l1=0.067" + "l2=0.211 f=-0.487 shape=(1, 9000, 1)
logits [[ 2.5821514 -2.321755   2.4603593 -4.6691017]]
Iteration 300 of 1000: loss=0.159 " + "l1=0" + "l2=0.159 f=-0.479 shape=(1, 9000, 1)
logits [[ 2.4114633 -2.2517855  2.4151108 -4.489688 ]]
Iteration 400 of 1000: loss=0.116 " + "l1=0.00116" + "l2=0.115 f=-0.476 shape=(1, 9000, 1)
logits [[ 2.3866613 -2.2263918  2.384548  -4.4506745]]
Iteration 500 of 1000: loss=0.0944 " + "l1=0" + "l2=0.0944 f=-0.476 shape=(1, 9000, 1)
logits [[ 2.3644845 -2.2155747  2.364551  -4.418536 ]]
Iteration 600 of 1000: loss=0.0811 " + "l1=0" + "l2=0.0811 f=-0.476 shape=(1, 9000, 1)
logits [[ 2.3485487 -2.209392   2.3490841 -4.390479 ]]
Iteration 700 of 1000: loss=0.0732 " + "l1=0.0012" + "l2=0.072 f=-0.474 shape=(1, 9000, 1)
logits [[ 2.3410513 -2.2050536  2.338861  -4.3727717]]
Iteration 800 of 1000: loss=0.0662 " + "l1=0" + "l2=0.0662 f=-0.472 shape=(1, 9000, 1)
logits [[ 2.3276653 -2.2024183  2.3312414 -4.3438377]]
Iteration 900 of 1000: loss=0.0605 " + "l1=0" + "l2=0.0605 f=-0.472 shape=(1, 9000, 1)
logits [[ 2.3229105 -2.1996639  2.3249774 -4.335794 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.477 " + "l1=0.477" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.9696596 -2.5057962  2.5008185 -5.9815674]]
Iteration 100 of 1000: loss=0.37 " + "l1=0.327" + "l2=0.0427 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.49923   -2.4439642  2.4923513 -5.5898876]]
Iteration 200 of 1000: loss=0.298 " + "l1=0.226" + "l2=0.0726 f=-0.502 shape=(1, 9000, 1)
logits [[ 3.1686926 -2.3844635  2.474434  -5.267903 ]]
Iteration 300 of 1000: loss=0.225 " + "l1=0.132" + "l2=0.0927 f=-0.491 shape=(1, 9000, 1)
logits [[ 2.856251  -2.3273063  2.4505026 -4.9422445]]
Iteration 400 of 1000: loss=0.156 " + "l1=0.0483" + "l2=0.108 f=-0.486 shape=(1, 9000, 1)
logits [[ 2.5591745 -2.2758842  2.4106858 -4.637664 ]]
Iteration 500 of 1000: loss=0.109 " + "l1=0" + "l2=0.109 f=-0.481 shape=(1, 9000, 1)
logits [[ 2.3620586 -2.2160022  2.363485  -4.4321513]]
Iteration 600 of 1000: loss=0.0869 " + "l1=8.89e-05" + "l2=0.0868 f=-0.48 shape=(1, 9000, 1)
logits [[ 2.3405254 -2.2036061  2.340252  -4.396074 ]]
Iteration 700 of 1000: loss=0.0755 " + "l1=0.000631" + "l2=0.0749 f=-0.48 shape=(1, 9000, 1)
logits [[ 2.3311126 -2.1992939  2.32917   -4.3794236]]
Iteration 800 of 1000: loss=0.0666 " + "l1=0" + "l2=0.0666 f=-0.477 shape=(1, 9000, 1)
logits [[ 2.325155  -2.199062   2.3257163 -4.361552 ]]
Iteration 900 of 1000: loss=0.0605 " + "l1=0" + "l2=0.0605 f=-0.477 shape=(1, 9000, 1)
logits [[ 2.3208718 -2.1966891  2.320933  -4.352141 ]]
--- 269.2071132659912 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0995 " + "l1=0.0995" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.9696596 -2.5057962  2.5008185 -5.9815674]]
Iteration 100 of 1000: loss=0.0987 " + "l1=0.0983" + "l2=0.000407 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.914721  -2.4905317  2.485238  -5.915198 ]]
Iteration 200 of 1000: loss=0.0984 " + "l1=0.098" + "l2=0.000452 f=-0.5 shape=(1, 9000, 1)
logits [[ 3.900485  -2.4855738  2.4809024 -5.897717 ]]
Iteration 300 of 1000: loss=0.0982 " + "l1=0.0976" + "l2=0.000596 f=-0.499 shape=(1, 9000, 1)
logits [[ 3.8832154 -2.479788   2.476041  -5.876905 ]]
Iteration 400 of 1000: loss=0.098 " + "l1=0.0972" + "l2=0.000741 f=-0.498 shape=(1, 9000, 1)
logits [[ 3.8665638 -2.474126   2.4714572 -5.8569813]]
Iteration 500 of 1000: loss=0.0978 " + "l1=0.0969" + "l2=0.000933 f=-0.497 shape=(1, 9000, 1)
logits [[ 3.8504522 -2.468788   2.4672616 -5.8379803]]
Iteration 600 of 1000: loss=0.0976 " + "l1=0.0966" + "l2=0.00107 f=-0.496 shape=(1, 9000, 1)
logits [[ 3.8349862 -2.463793   2.4634316 -5.820172 ]]
Iteration 700 of 1000: loss=0.0975 " + "l1=0.0962" + "l2=0.0013 f=-0.496 shape=(1, 9000, 1)
logits [[ 3.8200815 -2.4589062  2.4598825 -5.8031545]]
Iteration 800 of 1000: loss=0.0973 " + "l1=0.0959" + "l2=0.00142 f=-0.495 shape=(1, 9000, 1)
logits [[ 3.8057091 -2.4542053  2.4565666 -5.7867184]]
Iteration 900 of 1000: loss=0.0972 " + "l1=0.0956" + "l2=0.00157 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.7916527 -2.4494493  2.4534974 -5.7707777]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.995 " + "l1=0.995" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.9696596 -2.5057962  2.5008185 -5.9815674]]
Iteration 100 of 1000: loss=0.929 " + "l1=0.903" + "l2=0.0253 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.5573764 -2.3832664  2.3744662 -5.4744625]]
Iteration 200 of 1000: loss=0.884 " + "l1=0.84" + "l2=0.0435 f=-0.457 shape=(1, 9000, 1)
logits [[ 3.287989  -2.290969   2.2904577 -5.114838 ]]
Iteration 300 of 1000: loss=0.84 " + "l1=0.778" + "l2=0.0626 f=-0.432 shape=(1, 9000, 1)
logits [[ 3.0217123 -2.210391   2.215966  -4.755754 ]]
Iteration 400 of 1000: loss=0.793 " + "l1=0.711" + "l2=0.0821 f=-0.412 shape=(1, 9000, 1)
logits [[ 2.7346249 -2.1490276  2.140599  -4.373978 ]]
Iteration 500 of 1000: loss=0.749 " + "l1=0.651" + "l2=0.0983 f=-0.396 shape=(1, 9000, 1)
logits [[ 2.4849668 -2.1175246  2.0716722 -4.0248346]]
Iteration 600 of 1000: loss=0.711 " + "l1=0.6" + "l2=0.111 f=-0.38 shape=(1, 9000, 1)
logits [[ 2.2781107 -2.0773416  2.0043254 -3.7261434]]
Iteration 700 of 1000: loss=0.675 " + "l1=0.556" + "l2=0.119 f=-0.37 shape=(1, 9000, 1)
logits [[ 2.089523  -2.0391014  1.9341913 -3.4663074]]
Iteration 800 of 1000: loss=0.646 " + "l1=0.522" + "l2=0.123 f=-0.366 shape=(1, 9000, 1)
logits [[ 1.9452388 -2.0097833  1.8771596 -3.2773483]]
Iteration 900 of 1000: loss=0.62 " + "l1=0.494" + "l2=0.126 f=-0.36 shape=(1, 9000, 1)
logits [[ 1.8253776 -1.9768687  1.8244956 -3.1121426]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.95 " + "l1=9.95" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.9696596 -2.5057962  2.5008185 -5.9815674]]
Iteration 100 of 1000: loss=5.35 " + "l1=3.88" + "l2=1.48 f=-0.282 shape=(1, 9000, 1)
logits [[ 1.4960046 -1.769941   1.5117716 -2.3650727]]
Iteration 200 of 1000: loss=3.93 " + "l1=2.25" + "l2=1.67 f=-0.188 shape=(1, 9000, 1)
logits [[ 0.88979554 -1.6530145   1.1326684  -1.1202983 ]]
Iteration 300 of 1000: loss=2.65 " + "l1=0.636" + "l2=2.02 f=-0.117 shape=(1, 9000, 1)
logits [[ 0.29799464 -1.4923056   0.6814948   0.04537607]]
Iteration 400 of 1000: loss=1.65 " + "l1=0.00532" + "l2=1.64 f=-0.0792 shape=(1, 9000, 1)
logits [[ 0.16014116 -1.4707572   0.49953303  0.4942179 ]]
Iteration 500 of 1000: loss=1.25 " + "l1=0.00583" + "l2=1.25 f=-0.0847 shape=(1, 9000, 1)
logits [[ 0.21480772 -1.5061934   0.4791814   0.4733521 ]]
Iteration 600 of 1000: loss=1.05 " + "l1=0.00413" + "l2=1.05 f=-0.0953 shape=(1, 9000, 1)
logits [[ 0.21972236 -1.5229136   0.46298948  0.45885625]]
Iteration 700 of 1000: loss=0.924 " + "l1=0" + "l2=0.924 f=-0.102 shape=(1, 9000, 1)
logits [[ 0.20160627 -1.5264771   0.4577936   0.45979354]]
Iteration 800 of 1000: loss=0.831 " + "l1=0" + "l2=0.831 f=-0.103 shape=(1, 9000, 1)
logits [[ 0.19009256 -1.5311598   0.45997593  0.47007796]]
Iteration 900 of 1000: loss=0.753 " + "l1=0" + "l2=0.753 f=-0.104 shape=(1, 9000, 1)
logits [[ 0.18046303 -1.5376797   0.4663178   0.47565395]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.47 " + "l1=5.47" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.9696596 -2.5057962  2.5008185 -5.9815674]]
Iteration 100 of 1000: loss=3.6 " + "l1=2.86" + "l2=0.744 f=-0.362 shape=(1, 9000, 1)
logits [[ 1.9135559 -1.9721959  1.8897781 -3.279929 ]]
Iteration 200 of 1000: loss=2.86 " + "l1=2.12" + "l2=0.738 f=-0.283 shape=(1, 9000, 1)
logits [[ 1.5114911 -1.8631674  1.5368326 -2.3180254]]
Iteration 300 of 1000: loss=2.35 " + "l1=1.53" + "l2=0.822 f=-0.233 shape=(1, 9000, 1)
logits [[ 1.0988162 -1.7329364  1.2423211 -1.5418648]]
Iteration 400 of 1000: loss=1.96 " + "l1=1.1" + "l2=0.86 f=-0.203 shape=(1, 9000, 1)
logits [[ 0.76906353 -1.6118228   1.019137   -0.98789805]]
Iteration 500 of 1000: loss=1.56 " + "l1=0.609" + "l2=0.951 f=-0.168 shape=(1, 9000, 1)
logits [[ 0.39419833 -1.5216968   0.7809101  -0.32718128]]
Iteration 600 of 1000: loss=1.11 " + "l1=0.0996" + "l2=1.01 f=-0.135 shape=(1, 9000, 1)
logits [[ 0.09681619 -1.4270514   0.48542953  0.304325  ]]
Iteration 700 of 1000: loss=0.766 " + "l1=0" + "l2=0.766 f=-0.128 shape=(1, 9000, 1)
logits [[ 0.12645438 -1.4006315   0.38054207  0.3816216 ]]
Iteration 800 of 1000: loss=0.63 " + "l1=0.00284" + "l2=0.628 f=-0.133 shape=(1, 9000, 1)
logits [[ 0.13544637 -1.401357    0.3702902   0.36512077]]
Iteration 900 of 1000: loss=0.539 " + "l1=0.000287" + "l2=0.538 f=-0.135 shape=(1, 9000, 1)
logits [[ 0.1413283  -1.4011588   0.36090556  0.3603837 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.23 " + "l1=3.23" + "l2=0 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.9696596 -2.5057962  2.5008185 -5.9815674]]
Iteration 100 of 1000: loss=2.52 " + "l1=2.24" + "l2=0.277 f=-0.412 shape=(1, 9000, 1)
logits [[ 2.6360602 -2.118875   2.1064918 -4.2697597]]
Iteration 200 of 1000: loss=2.04 " + "l1=1.63" + "l2=0.408 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.865325  -1.9927374  1.8594747 -3.1423578]]
Iteration 300 of 1000: loss=1.77 " + "l1=1.38" + "l2=0.397 f=-0.301 shape=(1, 9000, 1)
logits [[ 1.6440221 -1.9169557  1.6500357 -2.5818145]]
Iteration 400 of 1000: loss=1.59 " + "l1=1.18" + "l2=0.408 f=-0.283 shape=(1, 9000, 1)
logits [[ 1.4037167 -1.8421059  1.4741269 -2.1681225]]
Iteration 500 of 1000: loss=1.45 " + "l1=1.02" + "l2=0.434 f=-0.268 shape=(1, 9000, 1)
logits [[ 1.1693212 -1.7745031  1.3302785 -1.798809 ]]
Iteration 600 of 1000: loss=1.3 " + "l1=0.849" + "l2=0.451 f=-0.254 shape=(1, 9000, 1)
logits [[ 0.9423089 -1.6978896  1.1766168 -1.4362389]]
Iteration 700 of 1000: loss=1.11 " + "l1=0.648" + "l2=0.465 f=-0.233 shape=(1, 9000, 1)
logits [[ 0.6794085  -1.5877482   0.98576236 -1.008643  ]]
Iteration 800 of 1000: loss=0.912 " + "l1=0.443" + "l2=0.469 f=-0.214 shape=(1, 9000, 1)
logits [[ 0.3841972  -1.4550691   0.78861266 -0.57517636]]
Iteration 900 of 1000: loss=0.68 " + "l1=0.198" + "l2=0.482 f=-0.211 shape=(1, 9000, 1)
logits [[ 0.0450965  -1.4322122   0.57565993 -0.03313453]]
--- 287.6341173648834 seconds ---
Adv result:3
Loading record A05140
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0697 " + "l1=0.0697" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.1056504 -3.8665848  2.842135  -4.128576 ]]
Iteration 100 of 1000: loss=0.069 " + "l1=0.0685" + "l2=0.000472 f=-0.507 shape=(1, 9000, 1)
logits [[ 3.034353  -3.816232   2.7958627 -4.041434 ]]
Iteration 200 of 1000: loss=0.0688 " + "l1=0.0683" + "l2=0.000523 f=-0.506 shape=(1, 9000, 1)
logits [[ 3.0205524 -3.80462    2.7857263 -4.0238457]]
Iteration 300 of 1000: loss=0.0686 " + "l1=0.068" + "l2=0.000611 f=-0.504 shape=(1, 9000, 1)
logits [[ 3.006207  -3.7925704  2.7754922 -4.005369 ]]
Iteration 400 of 1000: loss=0.0685 " + "l1=0.0677" + "l2=0.000721 f=-0.503 shape=(1, 9000, 1)
logits [[ 2.9930184 -3.781399   2.7663174 -3.9880507]]
Iteration 500 of 1000: loss=0.0684 " + "l1=0.0675" + "l2=0.000826 f=-0.501 shape=(1, 9000, 1)
logits [[ 2.9815545 -3.7714067  2.7583606 -3.9732845]]
Iteration 600 of 1000: loss=0.0683 " + "l1=0.0673" + "l2=0.000948 f=-0.5 shape=(1, 9000, 1)
logits [[ 2.9698372 -3.7612915  2.7503436 -3.9582088]]
Iteration 700 of 1000: loss=0.0682 " + "l1=0.0671" + "l2=0.0011 f=-0.499 shape=(1, 9000, 1)
logits [[ 2.9582806 -3.751336   2.742309  -3.9433348]]
Iteration 800 of 1000: loss=0.0681 " + "l1=0.0669" + "l2=0.0012 f=-0.497 shape=(1, 9000, 1)
logits [[ 2.9469671 -3.74205    2.7347643 -3.9290447]]
Iteration 900 of 1000: loss=0.0681 " + "l1=0.0667" + "l2=0.0014 f=-0.496 shape=(1, 9000, 1)
logits [[ 2.9356947 -3.73285    2.7274616 -3.9146507]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.697 " + "l1=0.697" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.1056504 -3.8665848  2.842135  -4.128576 ]]
Iteration 100 of 1000: loss=0.637 " + "l1=0.605" + "l2=0.0317 f=-0.473 shape=(1, 9000, 1)
logits [[ 2.5550003 -3.4953568  2.512366  -3.462017 ]]
Iteration 200 of 1000: loss=0.617 " + "l1=0.576" + "l2=0.0401 f=-0.456 shape=(1, 9000, 1)
logits [[ 2.3990567 -3.3650844  2.3964326 -3.252863 ]]
Iteration 300 of 1000: loss=0.601 " + "l1=0.554" + "l2=0.0468 f=-0.439 shape=(1, 9000, 1)
logits [[ 2.2963793 -3.2447333  2.2987766 -3.1069388]]
Iteration 400 of 1000: loss=0.588 " + "l1=0.535" + "l2=0.0525 f=-0.426 shape=(1, 9000, 1)
logits [[ 2.2179496 -3.1351182  2.2121255 -2.9976902]]
Iteration 500 of 1000: loss=0.571 " + "l1=0.51" + "l2=0.0614 f=-0.411 shape=(1, 9000, 1)
logits [[ 2.1028335 -2.9977076  2.098682  -2.8458402]]
Iteration 600 of 1000: loss=0.551 " + "l1=0.479" + "l2=0.072 f=-0.392 shape=(1, 9000, 1)
logits [[ 1.9585576 -2.8357706  1.9592065 -2.650809 ]]
Iteration 700 of 1000: loss=0.532 " + "l1=0.446" + "l2=0.0859 f=-0.369 shape=(1, 9000, 1)
logits [[ 1.8089187 -2.6547718  1.8076155 -2.4380984]]
Iteration 800 of 1000: loss=0.516 " + "l1=0.422" + "l2=0.0939 f=-0.347 shape=(1, 9000, 1)
logits [[ 1.7000662 -2.5179846  1.7027788 -2.274427 ]]
Iteration 900 of 1000: loss=0.501 " + "l1=0.399" + "l2=0.102 f=-0.326 shape=(1, 9000, 1)
logits [[ 1.599019  -2.3874285  1.6015404 -2.1181612]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.97 " + "l1=6.97" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.1056504 -3.8665848  2.842135  -4.128576 ]]
Iteration 100 of 1000: loss=2.99 " + "l1=1.4" + "l2=1.59 f=-0.142 shape=(1, 9000, 1)
logits [[ 0.3851056  -1.0108217   0.38184783 -0.3256299 ]]
Iteration 200 of 1000: loss=2.06 " + "l1=0.621" + "l2=1.44 f=-0.111 shape=(1, 9000, 1)
logits [[ 0.05254018 -0.5685278   0.04710461  0.02289459]]
Iteration 300 of 1000: loss=1.71 " + "l1=0.45" + "l2=1.26 f=-0.12 shape=(1, 9000, 1)
logits [[-2.7389638e-04 -4.5062882e-01 -9.8038418e-04 -2.7461343e-02]]
Iteration 400 of 1000: loss=1.5 " + "l1=0.333" + "l2=1.17 f=-0.129 shape=(1, 9000, 1)
logits [[-0.04685115 -0.3765999  -0.04405758 -0.04735552]]
Iteration 500 of 1000: loss=1.39 " + "l1=0.304" + "l2=1.08 f=-0.132 shape=(1, 9000, 1)
logits [[-0.04290334 -0.3438577  -0.03983166 -0.10199414]]
Iteration 600 of 1000: loss=1.29 " + "l1=0.248" + "l2=1.04 f=-0.13 shape=(1, 9000, 1)
logits [[-0.08459246 -0.3064385  -0.06957965 -0.05842543]]
Iteration 700 of 1000: loss=1.21 " + "l1=0.218" + "l2=0.988 f=-0.13 shape=(1, 9000, 1)
logits [[-0.07556375 -0.2871425  -0.06881523 -0.09032612]]
Iteration 800 of 1000: loss=1.13 " + "l1=0.173" + "l2=0.956 f=-0.13 shape=(1, 9000, 1)
logits [[-0.0941875  -0.25638092 -0.08330604 -0.08738155]]
Iteration 900 of 1000: loss=1.06 " + "l1=0.134" + "l2=0.93 f=-0.131 shape=(1, 9000, 1)
logits [[-0.10832743 -0.22357206 -0.10492083 -0.08912398]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=69.7 " + "l1=69.7" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.1056504 -3.8665848  2.842135  -4.128576 ]]
Iteration 100 of 1000: loss=6.19 " + "l1=0" + "l2=6.19 f=-0.147 shape=(1, 9000, 1)
logits [[-0.1401453  -0.12878148 -0.14191933 -0.17853719]]
Iteration 200 of 1000: loss=3.87 " + "l1=0" + "l2=3.87 f=-0.133 shape=(1, 9000, 1)
logits [[-0.13936156 -0.1203858  -0.13094608 -0.14239794]]
Iteration 300 of 1000: loss=3.25 " + "l1=0" + "l2=3.25 f=-0.14 shape=(1, 9000, 1)
logits [[-0.15198186 -0.10314164 -0.12687755 -0.17946121]]
Iteration 400 of 1000: loss=2.85 " + "l1=0" + "l2=2.85 f=-0.138 shape=(1, 9000, 1)
logits [[-0.16196567 -0.10570981 -0.13207592 -0.15052658]]
Iteration 500 of 1000: loss=2.62 " + "l1=0" + "l2=2.62 f=-0.148 shape=(1, 9000, 1)
logits [[-0.16187161 -0.09711898 -0.12864554 -0.2044895 ]]
Iteration 600 of 1000: loss=2.42 " + "l1=0" + "l2=2.42 f=-0.152 shape=(1, 9000, 1)
logits [[-0.16132334 -0.10483202 -0.12439081 -0.2157788 ]]
Iteration 700 of 1000: loss=2.28 " + "l1=0" + "l2=2.28 f=-0.153 shape=(1, 9000, 1)
logits [[-0.16736656 -0.1064148  -0.12494428 -0.21387744]]
Iteration 800 of 1000: loss=2.16 " + "l1=0.0516" + "l2=2.11 f=-0.144 shape=(1, 9000, 1)
logits [[-0.18140468 -0.12653074 -0.14695455 -0.12136673]]
Iteration 900 of 1000: loss=2.09 " + "l1=0" + "l2=2.09 f=-0.152 shape=(1, 9000, 1)
logits [[-0.19942437 -0.09751511 -0.15932354 -0.15010807]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=38.3 " + "l1=38.3" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.1056504 -3.8665848  2.842135  -4.128576 ]]
Iteration 100 of 1000: loss=4.99 " + "l1=0" + "l2=4.99 f=-0.149 shape=(1, 9000, 1)
logits [[-0.15070945 -0.12879041 -0.13391937 -0.18184152]]
Iteration 200 of 1000: loss=3.25 " + "l1=0.062" + "l2=3.18 f=-0.131 shape=(1, 9000, 1)
logits [[-0.12016264 -0.13116081 -0.11988266 -0.1542458 ]]
Iteration 300 of 1000: loss=2.69 " + "l1=0" + "l2=2.69 f=-0.138 shape=(1, 9000, 1)
logits [[-0.13393208 -0.12364743 -0.12536761 -0.16867805]]
Iteration 400 of 1000: loss=2.4 " + "l1=0" + "l2=2.4 f=-0.14 shape=(1, 9000, 1)
logits [[-0.1517935  -0.11949105 -0.13848443 -0.1511234 ]]
Iteration 500 of 1000: loss=2.23 " + "l1=0" + "l2=2.23 f=-0.146 shape=(1, 9000, 1)
logits [[-0.16951203 -0.11488561 -0.14627658 -0.15283391]]
Iteration 600 of 1000: loss=2.07 " + "l1=0" + "l2=2.07 f=-0.15 shape=(1, 9000, 1)
logits [[-0.17599976 -0.11525925 -0.1437997  -0.1634919 ]]
Iteration 700 of 1000: loss=1.91 " + "l1=0" + "l2=1.91 f=-0.15 shape=(1, 9000, 1)
logits [[-0.1549811  -0.12836248 -0.13812885 -0.17772353]]
Iteration 800 of 1000: loss=1.8 " + "l1=0" + "l2=1.8 f=-0.151 shape=(1, 9000, 1)
logits [[-0.14664316 -0.1312723  -0.13850544 -0.18924367]]
Iteration 900 of 1000: loss=1.73 " + "l1=0" + "l2=1.73 f=-0.156 shape=(1, 9000, 1)
logits [[-0.15065935 -0.12623408 -0.1388807  -0.20684496]]
--- 286.99061393737793 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00264 " + "l1=0.00264" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.1056504 -3.8665848  2.842135  -4.128576 ]]
Iteration 100 of 1000: loss=0.00234 " + "l1=0.0021" + "l2=0.000237 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.063839  -3.8816364  2.8539877 -4.078194 ]]
Iteration 200 of 1000: loss=0.00226 " + "l1=0.00203" + "l2=0.000226 f=-0.511 shape=(1, 9000, 1)
logits [[ 3.0589778 -3.884242   2.855895  -4.0727167]]
Iteration 300 of 1000: loss=0.00221 " + "l1=0.00194" + "l2=0.000273 f=-0.51 shape=(1, 9000, 1)
logits [[ 3.0520108 -3.8876045  2.8582015 -4.064521 ]]
Iteration 400 of 1000: loss=0.00218 " + "l1=0.00185" + "l2=0.000338 f=-0.51 shape=(1, 9000, 1)
logits [[ 3.0450537 -3.890855   2.860499  -4.056257 ]]
Iteration 500 of 1000: loss=0.00218 " + "l1=0.00176" + "l2=0.000426 f=-0.51 shape=(1, 9000, 1)
logits [[ 3.0384634 -3.8938267  2.862654  -4.048488 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0264 " + "l1=0.0264" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.1056504 -3.8665848  2.842135  -4.128576 ]]
Iteration 100 of 1000: loss=0.0058 " + "l1=0" + "l2=0.0058 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.906253  -3.9489584  2.9094706 -3.8898923]]
Iteration 200 of 1000: loss=0.00415 " + "l1=0" + "l2=0.00415 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.907227  -3.9534092  2.9116077 -3.8911815]]
Iteration 300 of 1000: loss=0.0034 " + "l1=0.000181" + "l2=0.00322 f=-0.507 shape=(1, 9000, 1)
logits [[ 2.9107063 -3.951487   2.9088922 -3.8947337]]
Iteration 400 of 1000: loss=0.00315 " + "l1=0" + "l2=0.00315 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.9036894 -3.9531324  2.9096751 -3.8858516]]
Iteration 500 of 1000: loss=0.00271 " + "l1=0" + "l2=0.00271 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.9048193 -3.951885   2.9084795 -3.8866472]]
Iteration 600 of 1000: loss=0.00257 " + "l1=0" + "l2=0.00257 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.9054632 -3.9503703  2.9078336 -3.8876107]]
Iteration 700 of 1000: loss=0.0025 " + "l1=0" + "l2=0.0025 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.9040306 -3.9489393  2.907742  -3.8868725]]
Iteration 800 of 1000: loss=0.00238 " + "l1=0" + "l2=0.00238 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.9044855 -3.9467776  2.9071982 -3.888294 ]]
Iteration 900 of 1000: loss=0.00226 " + "l1=0" + "l2=0.00226 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.903629  -3.9444895  2.9067004 -3.8883767]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0145 " + "l1=0.0145" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.1056504 -3.8665848  2.842135  -4.128576 ]]
Iteration 100 of 1000: loss=0.0065 " + "l1=0.00215" + "l2=0.00434 f=-0.507 shape=(1, 9000, 1)
logits [[ 2.935937  -3.9331036  2.8968158 -3.9283586]]
Iteration 200 of 1000: loss=0.00421 " + "l1=2.07e-05" + "l2=0.00419 f=-0.507 shape=(1, 9000, 1)
logits [[ 2.9108374 -3.9515069  2.910462  -3.8964763]]
Iteration 300 of 1000: loss=0.00344 " + "l1=0.000131" + "l2=0.00331 f=-0.507 shape=(1, 9000, 1)
logits [[ 2.911373  -3.9517615  2.9089942 -3.8969903]]
Iteration 400 of 1000: loss=0.003 " + "l1=9.7e-05" + "l2=0.00291 f=-0.507 shape=(1, 9000, 1)
logits [[ 2.9096956 -3.951087   2.9079328 -3.8944297]]
Iteration 500 of 1000: loss=0.00271 " + "l1=0.00014" + "l2=0.00257 f=-0.507 shape=(1, 9000, 1)
logits [[ 2.9095893 -3.9502282  2.9070473 -3.8937998]]
Iteration 600 of 1000: loss=0.0025 " + "l1=0" + "l2=0.0025 f=-0.507 shape=(1, 9000, 1)
logits [[ 2.9055471 -3.9504342  2.9075837 -3.8888116]]
Iteration 700 of 1000: loss=0.0025 " + "l1=0" + "l2=0.0025 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.9027138 -3.9494812  2.9076936 -3.8860836]]
Iteration 800 of 1000: loss=0.00246 " + "l1=0.000128" + "l2=0.00233 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.9081657 -3.9455106  2.905837  -3.893331 ]]
Iteration 900 of 1000: loss=0.00211 " + "l1=0" + "l2=0.00211 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.904437  -3.9442763  2.9063358 -3.8900602]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00856 " + "l1=0.00856" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.1056504 -3.8665848  2.842135  -4.128576 ]]
Iteration 100 of 1000: loss=0.00568 " + "l1=0.00402" + "l2=0.00166 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.997906  -3.9066513  2.8742378 -4.0010853]]
Iteration 200 of 1000: loss=0.00475 " + "l1=0.00258" + "l2=0.00217 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.9653537 -3.9221473  2.8859007 -3.9634333]]
Iteration 300 of 1000: loss=0.00398 " + "l1=0.00134" + "l2=0.00264 f=-0.508 shape=(1, 9000, 1)
logits [[ 2.9367387 -3.934855   2.895512  -3.9295049]]
Iteration 400 of 1000: loss=0.00336 " + "l1=0.000384" + "l2=0.00298 f=-0.507 shape=(1, 9000, 1)
logits [[ 2.915359  -3.9455688  2.9035501 -3.9032805]]
Iteration 500 of 1000: loss=0.00289 " + "l1=3.04e-05" + "l2=0.00286 f=-0.507 shape=(1, 9000, 1)
logits [[ 2.90782   -3.9500906  2.9068835 -3.8930066]]
Iteration 600 of 1000: loss=0.00263 " + "l1=0" + "l2=0.00263 f=-0.507 shape=(1, 9000, 1)
logits [[ 2.9064028 -3.9496937  2.906654  -3.8907278]]
Iteration 700 of 1000: loss=0.00249 " + "l1=0" + "l2=0.00249 f=-0.507 shape=(1, 9000, 1)
logits [[ 2.9052877 -3.948732   2.9065192 -3.889401 ]]
Iteration 800 of 1000: loss=0.00235 " + "l1=0" + "l2=0.00235 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.9052973 -3.9468482  2.906104  -3.8900185]]
Iteration 900 of 1000: loss=0.00215 " + "l1=4.65e-05" + "l2=0.00211 f=-0.506 shape=(1, 9000, 1)
logits [[ 2.906785  -3.9442105  2.9053545 -3.8924215]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0056 " + "l1=0.0056" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.1056504 -3.8665848  2.842135  -4.128576 ]]
Iteration 100 of 1000: loss=0.00432 " + "l1=0.00354" + "l2=0.000778 f=-0.51 shape=(1, 9000, 1)
logits [[ 3.0307877 -3.8939276  2.8640182 -4.0396285]]
Iteration 200 of 1000: loss=0.00395 " + "l1=0.00301" + "l2=0.000943 f=-0.51 shape=(1, 9000, 1)
logits [[ 3.0124993 -3.9027007  2.8707952 -4.0186887]]
Iteration 300 of 1000: loss=0.00365 " + "l1=0.00251" + "l2=0.00113 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.9952    -3.9113443  2.8768568 -3.9983847]]
Iteration 400 of 1000: loss=0.00341 " + "l1=0.00206" + "l2=0.00135 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.9789698 -3.9183714  2.8820763 -3.979243 ]]
Iteration 500 of 1000: loss=0.00322 " + "l1=0.00164" + "l2=0.00157 f=-0.509 shape=(1, 9000, 1)
logits [[ 2.9638898 -3.9244041  2.8865728 -3.9613476]]
Iteration 600 of 1000: loss=0.00302 " + "l1=0.00125" + "l2=0.00177 f=-0.508 shape=(1, 9000, 1)
logits [[ 2.9500818 -3.9303012  2.8912146 -3.9449546]]
Iteration 700 of 1000: loss=0.00284 " + "l1=0.000895" + "l2=0.00194 f=-0.508 shape=(1, 9000, 1)
logits [[ 2.9373193 -3.935353   2.895191  -3.9298792]]
Iteration 800 of 1000: loss=0.00265 " + "l1=0.000589" + "l2=0.00207 f=-0.508 shape=(1, 9000, 1)
logits [[ 2.9261973 -3.9386482  2.898458  -3.916691 ]]
Iteration 900 of 1000: loss=0.00257 " + "l1=0.000289" + "l2=0.00228 f=-0.507 shape=(1, 9000, 1)
logits [[ 2.91537   -3.9412894  2.9017496 -3.9039345]]
--- 257.3763132095337 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0723 " + "l1=0.0723" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.1056504 -3.8665848  2.842135  -4.128576 ]]
Iteration 100 of 1000: loss=0.0706 " + "l1=0.0696" + "l2=0.000996 f=-0.503 shape=(1, 9000, 1)
logits [[ 2.9909923 -3.8409538  2.8022377 -3.9655232]]
Iteration 200 of 1000: loss=0.0701 " + "l1=0.0689" + "l2=0.00116 f=-0.501 shape=(1, 9000, 1)
logits [[ 2.964776  -3.83431    2.7928197 -3.9275587]]
Iteration 300 of 1000: loss=0.0697 " + "l1=0.0683" + "l2=0.00139 f=-0.499 shape=(1, 9000, 1)
logits [[ 2.938987  -3.8275971  2.7836802 -3.8896   ]]
Iteration 400 of 1000: loss=0.0693 " + "l1=0.0677" + "l2=0.0016 f=-0.496 shape=(1, 9000, 1)
logits [[ 2.9144108 -3.8207588  2.7748487 -3.8527648]]
Iteration 500 of 1000: loss=0.069 " + "l1=0.0671" + "l2=0.00189 f=-0.493 shape=(1, 9000, 1)
logits [[ 2.890503  -3.8137512  2.7660077 -3.81642  ]]
Iteration 600 of 1000: loss=0.0687 " + "l1=0.0665" + "l2=0.00216 f=-0.491 shape=(1, 9000, 1)
logits [[ 2.8677535 -3.8069184  2.7575135 -3.781253 ]]
Iteration 700 of 1000: loss=0.0684 " + "l1=0.066" + "l2=0.00242 f=-0.488 shape=(1, 9000, 1)
logits [[ 2.846388  -3.8001845  2.7496812 -3.7486713]]
Iteration 800 of 1000: loss=0.0681 " + "l1=0.0654" + "l2=0.00264 f=-0.486 shape=(1, 9000, 1)
logits [[ 2.826177  -3.793328   2.7418094 -3.7176123]]
Iteration 900 of 1000: loss=0.0678 " + "l1=0.0649" + "l2=0.00288 f=-0.483 shape=(1, 9000, 1)
logits [[ 2.8067498 -3.7867136  2.7345943 -3.6873686]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.723 " + "l1=0.723" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.1056504 -3.8665848  2.842135  -4.128576 ]]
Iteration 100 of 1000: loss=0.6 " + "l1=0.545" + "l2=0.0549 f=-0.444 shape=(1, 9000, 1)
logits [[ 2.367715  -3.5772817  2.4436722 -3.0100355]]
Iteration 200 of 1000: loss=0.564 " + "l1=0.488" + "l2=0.0759 f=-0.411 shape=(1, 9000, 1)
logits [[ 2.1087801 -3.4664829  2.2976537 -2.5828326]]
Iteration 300 of 1000: loss=0.535 " + "l1=0.448" + "l2=0.0872 f=-0.384 shape=(1, 9000, 1)
logits [[ 1.9275792 -3.40337    2.2073162 -2.2682583]]
Iteration 400 of 1000: loss=0.511 " + "l1=0.413" + "l2=0.0979 f=-0.36 shape=(1, 9000, 1)
logits [[ 1.7828112 -3.3527112  2.1305244 -2.0008798]]
Iteration 500 of 1000: loss=0.486 " + "l1=0.38" + "l2=0.106 f=-0.338 shape=(1, 9000, 1)
logits [[ 1.6413485 -3.2940333  2.0504396 -1.74911  ]]
Iteration 600 of 1000: loss=0.462 " + "l1=0.348" + "l2=0.114 f=-0.318 shape=(1, 9000, 1)
logits [[ 1.5066046 -3.2319868  1.9692632 -1.5156077]]
Iteration 700 of 1000: loss=0.439 " + "l1=0.315" + "l2=0.124 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.3493634 -3.1099916  1.8386077 -1.3082898]]
Iteration 800 of 1000: loss=0.417 " + "l1=0.281" + "l2=0.136 f=-0.296 shape=(1, 9000, 1)
logits [[ 1.1871033 -2.9994612  1.7180605 -1.0912763]]
Iteration 900 of 1000: loss=0.396 " + "l1=0.249" + "l2=0.147 f=-0.289 shape=(1, 9000, 1)
logits [[ 1.0394454 -2.9124477  1.6034827 -0.8870214]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.23 " + "l1=7.23" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.1056504 -3.8665848  2.842135  -4.128576 ]]
Iteration 100 of 1000: loss=1.41 " + "l1=0.0364" + "l2=1.38 f=-0.0844 shape=(1, 9000, 1)
logits [[ 0.20533758 -1.9676459   0.73055863  0.69412553]]
Iteration 200 of 1000: loss=1.02 " + "l1=0" + "l2=1.02 f=-0.0681 shape=(1, 9000, 1)
logits [[ 0.17329443 -1.8118762   0.6512056   0.7150995 ]]
Iteration 300 of 1000: loss=0.829 " + "l1=0" + "l2=0.829 f=-0.078 shape=(1, 9000, 1)
logits [[ 0.18617381 -1.8002516   0.6506443   0.65150535]]
Iteration 400 of 1000: loss=0.722 " + "l1=0" + "l2=0.722 f=-0.0826 shape=(1, 9000, 1)
logits [[ 0.14939451 -1.7859709   0.6420212   0.6639741 ]]
Iteration 500 of 1000: loss=0.628 " + "l1=0.00146" + "l2=0.627 f=-0.085 shape=(1, 9000, 1)
logits [[ 0.14891568 -1.7806696   0.6467009   0.64523876]]
Iteration 600 of 1000: loss=0.561 " + "l1=0" + "l2=0.561 f=-0.0824 shape=(1, 9000, 1)
logits [[ 0.15117283 -1.7786723   0.640734    0.6570861 ]]
Iteration 700 of 1000: loss=0.514 " + "l1=0.00884" + "l2=0.505 f=-0.0817 shape=(1, 9000, 1)
logits [[ 0.17338374 -1.7710371   0.639903    0.63106245]]
Iteration 800 of 1000: loss=0.479 " + "l1=0" + "l2=0.479 f=-0.0779 shape=(1, 9000, 1)
logits [[ 0.16120625 -1.747666    0.6133523   0.6613557 ]]
Iteration 900 of 1000: loss=0.439 " + "l1=0" + "l2=0.439 f=-0.082 shape=(1, 9000, 1)
logits [[ 0.18833141 -1.7523326   0.61674714  0.61912054]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.98 " + "l1=3.98" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.1056504 -3.8665848  2.842135  -4.128576 ]]
Iteration 100 of 1000: loss=1.47 " + "l1=0.406" + "l2=1.07 f=-0.15 shape=(1, 9000, 1)
logits [[ 0.3765299 -2.3978639  1.0792912  0.3414691]]
Iteration 200 of 1000: loss=0.874 " + "l1=0" + "l2=0.874 f=-0.0737 shape=(1, 9000, 1)
logits [[ 0.17266414 -1.8157926   0.6647582   0.6835777 ]]
Iteration 300 of 1000: loss=0.692 " + "l1=0.00494" + "l2=0.687 f=-0.082 shape=(1, 9000, 1)
logits [[ 0.16358523 -1.778973    0.6480928   0.6391142 ]]
Iteration 400 of 1000: loss=0.58 " + "l1=0" + "l2=0.58 f=-0.0848 shape=(1, 9000, 1)
logits [[ 0.14923197 -1.759953    0.63163275  0.63996595]]
Iteration 500 of 1000: loss=0.521 " + "l1=0" + "l2=0.521 f=-0.081 shape=(1, 9000, 1)
logits [[ 0.13267593 -1.7503402   0.6118539   0.6819355 ]]
Iteration 600 of 1000: loss=0.467 " + "l1=0.0153" + "l2=0.451 f=-0.085 shape=(1, 9000, 1)
logits [[ 0.17748207 -1.7818503   0.64602655  0.6182236 ]]
Iteration 700 of 1000: loss=0.424 " + "l1=0.00743" + "l2=0.417 f=-0.0864 shape=(1, 9000, 1)
logits [[ 0.17978856 -1.7768637   0.6324178   0.6189062 ]]
Iteration 800 of 1000: loss=0.391 " + "l1=0.00353" + "l2=0.387 f=-0.0889 shape=(1, 9000, 1)
logits [[ 0.17936109 -1.7746285   0.6229634   0.61654615]]
Iteration 900 of 1000: loss=0.367 " + "l1=0" + "l2=0.367 f=-0.0903 shape=(1, 9000, 1)
logits [[ 0.16232532 -1.7582959   0.60369456  0.6312126 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.35 " + "l1=2.35" + "l2=0 f=-0.512 shape=(1, 9000, 1)
logits [[ 3.1056504 -3.8665848  2.842135  -4.128576 ]]
Iteration 100 of 1000: loss=1.32 " + "l1=0.832" + "l2=0.484 f=-0.279 shape=(1, 9000, 1)
logits [[ 1.0633872  -3.0048797   1.6910666  -0.86750025]]
Iteration 200 of 1000: loss=0.987 " + "l1=0.357" + "l2=0.63 f=-0.166 shape=(1, 9000, 1)
logits [[ 0.54768556 -2.433544    1.159332    0.06182442]]
Iteration 300 of 1000: loss=0.669 " + "l1=0.00988" + "l2=0.659 f=-0.0776 shape=(1, 9000, 1)
logits [[ 0.1674294  -1.8258734   0.6891257   0.65872717]]
Iteration 400 of 1000: loss=0.527 " + "l1=0.00608" + "l2=0.521 f=-0.0832 shape=(1, 9000, 1)
logits [[ 0.15513249 -1.773534    0.6522471   0.63353896]]
Iteration 500 of 1000: loss=0.457 " + "l1=0.0115" + "l2=0.446 f=-0.0857 shape=(1, 9000, 1)
logits [[ 0.17654087 -1.7803241   0.6481377   0.6129032 ]]
Iteration 600 of 1000: loss=0.409 " + "l1=0.0102" + "l2=0.399 f=-0.0882 shape=(1, 9000, 1)
logits [[ 0.18073021 -1.7858621   0.64169985  0.61045575]]
Iteration 700 of 1000: loss=0.37 " + "l1=0" + "l2=0.37 f=-0.0897 shape=(1, 9000, 1)
logits [[ 0.1597805 -1.7711366  0.617217   0.6353768]]
Iteration 800 of 1000: loss=0.339 " + "l1=0" + "l2=0.339 f=-0.0952 shape=(1, 9000, 1)
logits [[ 0.15048385 -1.7652988   0.6116046   0.6225205 ]]
Iteration 900 of 1000: loss=0.321 " + "l1=0" + "l2=0.321 f=-0.0989 shape=(1, 9000, 1)
logits [[ 0.13927458 -1.7584932   0.5980206   0.6255805 ]]
--- 286.36613059043884 seconds ---
Adv result:3
Loading record A05200
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0445 " + "l1=0.0445" + "l2=0 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.2127934 -2.2340727  2.0689702 -3.249143 ]]
Iteration 100 of 1000: loss=0.0441 " + "l1=0.0438" + "l2=0.000285 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.1629684 -2.2138479  2.0443532 -3.1915576]]
Iteration 200 of 1000: loss=0.0439 " + "l1=0.0437" + "l2=0.000276 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.1548815 -2.2115989  2.0397243 -3.182541 ]]
Iteration 300 of 1000: loss=0.0439 " + "l1=0.0435" + "l2=0.000344 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.1442487 -2.2084303  2.0339253 -3.1703165]]
Iteration 400 of 1000: loss=0.0438 " + "l1=0.0434" + "l2=0.000402 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.1327043 -2.2051919  2.0276709 -3.1568317]]
Iteration 500 of 1000: loss=0.0437 " + "l1=0.0432" + "l2=0.000502 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.1207714 -2.2020912  2.0212493 -3.1427422]]
Iteration 600 of 1000: loss=0.0436 " + "l1=0.0431" + "l2=0.000566 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.1083932 -2.1988254  2.014625  -3.1282954]]
Iteration 700 of 1000: loss=0.0436 " + "l1=0.0429" + "l2=0.000719 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.096741  -2.1959026  2.0086641 -3.114566 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.445 " + "l1=0.445" + "l2=0 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.2127934 -2.2340727  2.0689702 -3.249143 ]]
Iteration 100 of 1000: loss=0.411 " + "l1=0.394" + "l2=0.017 f=-0.294 shape=(1, 9000, 1)
logits [[ 1.875246  -2.0600846  1.875591  -2.8667834]]
Iteration 200 of 1000: loss=0.399 " + "l1=0.378" + "l2=0.021 f=-0.289 shape=(1, 9000, 1)
logits [[ 1.7949812 -1.9806495  1.7949766 -2.766496 ]]
Iteration 300 of 1000: loss=0.388 " + "l1=0.365" + "l2=0.0229 f=-0.285 shape=(1, 9000, 1)
logits [[ 1.7282048 -1.9220965  1.728237  -2.6744556]]
Iteration 400 of 1000: loss=0.378 " + "l1=0.352" + "l2=0.026 f=-0.279 shape=(1, 9000, 1)
logits [[ 1.6599985 -1.8615122  1.6624173 -2.5787308]]
Iteration 500 of 1000: loss=0.369 " + "l1=0.338" + "l2=0.0309 f=-0.272 shape=(1, 9000, 1)
logits [[ 1.5897114 -1.7866724  1.5883063 -2.479809 ]]
Iteration 600 of 1000: loss=0.359 " + "l1=0.323" + "l2=0.0361 f=-0.262 shape=(1, 9000, 1)
logits [[ 1.5172895 -1.7106997  1.5183395 -2.3735192]]
Iteration 700 of 1000: loss=0.345 " + "l1=0.3" + "l2=0.0448 f=-0.239 shape=(1, 9000, 1)
logits [[ 1.4348276 -1.5698172  1.4340714 -2.256676 ]]
Iteration 800 of 1000: loss=0.336 " + "l1=0.288" + "l2=0.0473 f=-0.231 shape=(1, 9000, 1)
logits [[ 1.3798573 -1.5038645  1.378792  -2.1794631]]
Iteration 900 of 1000: loss=0.329 " + "l1=0.282" + "l2=0.0471 f=-0.228 shape=(1, 9000, 1)
logits [[ 1.342594  -1.4751031  1.3421937 -2.120946 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.45 " + "l1=4.45" + "l2=0 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.2127934 -2.2340727  2.0689702 -3.249143 ]]
Iteration 100 of 1000: loss=2.05 " + "l1=0.966" + "l2=1.08 f=-0.21 shape=(1, 9000, 1)
logits [[ 0.40539443 -0.5506075   0.4155291  -1.1117804 ]]
Iteration 200 of 1000: loss=1.21 " + "l1=0.121" + "l2=1.09 f=-0.243 shape=(1, 9000, 1)
logits [[-0.10841828 -0.20636533 -0.08510488 -0.5721205 ]]
Iteration 300 of 1000: loss=0.87 " + "l1=0" + "l2=0.87 f=-0.221 shape=(1, 9000, 1)
logits [[-0.16889378 -0.14712416 -0.15469106 -0.4130876 ]]
Iteration 400 of 1000: loss=0.733 " + "l1=0" + "l2=0.733 f=-0.207 shape=(1, 9000, 1)
logits [[-0.16615371 -0.15285794 -0.15757664 -0.34947956]]
Iteration 500 of 1000: loss=0.654 " + "l1=0.00724" + "l2=0.647 f=-0.202 shape=(1, 9000, 1)
logits [[-0.15897712 -0.16241114 -0.15517403 -0.33181328]]
Iteration 600 of 1000: loss=0.596 " + "l1=0.00392" + "l2=0.592 f=-0.203 shape=(1, 9000, 1)
logits [[-0.16893417 -0.16024126 -0.15632316 -0.32818925]]
Iteration 700 of 1000: loss=0.552 " + "l1=0.00557" + "l2=0.547 f=-0.206 shape=(1, 9000, 1)
logits [[-0.16043635 -0.16194014 -0.156367   -0.34536952]]
Iteration 800 of 1000: loss=0.527 " + "l1=0" + "l2=0.527 f=-0.208 shape=(1, 9000, 1)
logits [[-0.2046427  -0.14865024 -0.15267348 -0.32601961]]
Iteration 900 of 1000: loss=0.497 " + "l1=0.00348" + "l2=0.494 f=-0.205 shape=(1, 9000, 1)
logits [[-0.16971913 -0.16295862 -0.15948178 -0.32586044]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.45 " + "l1=2.45" + "l2=0 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.2127934 -2.2340727  2.0689702 -3.249143 ]]
Iteration 100 of 1000: loss=1.59 " + "l1=1.1" + "l2=0.497 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.9714483 -1.0202192  0.9711139 -1.8032464]]
Iteration 200 of 1000: loss=1.24 " + "l1=0.699" + "l2=0.541 f=-0.209 shape=(1, 9000, 1)
logits [[ 0.56900764 -0.6903735   0.5797429  -1.2945437 ]]
Iteration 300 of 1000: loss=0.923 " + "l1=0.359" + "l2=0.564 f=-0.226 shape=(1, 9000, 1)
logits [[ 0.24634698 -0.40285236  0.250153   -0.99867314]]
Iteration 400 of 1000: loss=0.754 " + "l1=0.204" + "l2=0.55 f=-0.226 shape=(1, 9000, 1)
logits [[ 0.07952331 -0.2856202   0.08524796 -0.7828635 ]]
Iteration 500 of 1000: loss=0.645 " + "l1=0.0813" + "l2=0.564 f=-0.218 shape=(1, 9000, 1)
logits [[-0.07271851 -0.21337216 -0.06560578 -0.5208161 ]]
Iteration 600 of 1000: loss=0.539 " + "l1=3.73e-06" + "l2=0.539 f=-0.215 shape=(1, 9000, 1)
logits [[-0.15239787 -0.14775817 -0.14775139 -0.41161606]]
Iteration 700 of 1000: loss=0.491 " + "l1=0" + "l2=0.491 f=-0.211 shape=(1, 9000, 1)
logits [[-0.16081274 -0.15397008 -0.15462615 -0.37412298]]
Iteration 800 of 1000: loss=0.457 " + "l1=0" + "l2=0.457 f=-0.206 shape=(1, 9000, 1)
logits [[-0.17474845 -0.16259448 -0.16757478 -0.3176613 ]]
Iteration 900 of 1000: loss=0.432 " + "l1=0.00794" + "l2=0.424 f=-0.201 shape=(1, 9000, 1)
logits [[-0.167508   -0.17697416 -0.16253063 -0.29664642]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.45 " + "l1=1.45" + "l2=0 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.2127934 -2.2340727  2.0689702 -3.249143 ]]
Iteration 100 of 1000: loss=1.15 " + "l1=0.986" + "l2=0.16 f=-0.252 shape=(1, 9000, 1)
logits [[ 1.4412673 -1.5889851  1.4437184 -2.3035326]]
Iteration 200 of 1000: loss=1 " + "l1=0.782" + "l2=0.22 f=-0.221 shape=(1, 9000, 1)
logits [[ 1.1631626 -1.2444211  1.161703  -1.964669 ]]
Iteration 300 of 1000: loss=0.875 " + "l1=0.647" + "l2=0.228 f=-0.201 shape=(1, 9000, 1)
logits [[ 0.95139384 -1.0391974   0.9501641  -1.6662186 ]]
Iteration 400 of 1000: loss=0.808 " + "l1=0.567" + "l2=0.241 f=-0.187 shape=(1, 9000, 1)
logits [[ 0.7979459  -0.9439048   0.80066323 -1.4029574 ]]
Iteration 500 of 1000: loss=0.755 " + "l1=0.513" + "l2=0.241 f=-0.172 shape=(1, 9000, 1)
logits [[ 0.69784164 -0.8813691   0.6953437  -1.2004845 ]]
Iteration 600 of 1000: loss=0.705 " + "l1=0.459" + "l2=0.246 f=-0.154 shape=(1, 9000, 1)
logits [[ 0.6013011 -0.806072   0.6051851 -1.0156729]]
Iteration 700 of 1000: loss=0.658 " + "l1=0.407" + "l2=0.25 f=-0.136 shape=(1, 9000, 1)
logits [[ 0.52187157 -0.7292483   0.5243494  -0.8607606 ]]
Iteration 800 of 1000: loss=0.615 " + "l1=0.366" + "l2=0.249 f=-0.123 shape=(1, 9000, 1)
logits [[ 0.44660082 -0.6770335   0.44997337 -0.7121909 ]]
Iteration 900 of 1000: loss=0.575 " + "l1=0.319" + "l2=0.256 f=-0.114 shape=(1, 9000, 1)
logits [[ 0.38293168 -0.5979047   0.38412282 -0.625498  ]]
--- 270.87605452537537 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00144 " + "l1=0.00144" + "l2=0 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.2127934 -2.2340727  2.0689702 -3.249143 ]]
Iteration 100 of 1000: loss=0.00125 " + "l1=0.00107" + "l2=0.000174 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.1772668 -2.2421186  2.069876  -3.210601 ]]
Iteration 200 of 1000: loss=0.0012 " + "l1=0.00105" + "l2=0.000151 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.1739705 -2.2434185  2.0693078 -3.2075913]]
Iteration 300 of 1000: loss=0.00117 " + "l1=0.000994" + "l2=0.000178 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.168007  -2.2450693  2.0685842 -3.2015061]]
Iteration 400 of 1000: loss=0.00116 " + "l1=0.000937" + "l2=0.000228 f=-0.303 shape=(1, 9000, 1)
logits [[ 2.1613784 -2.246651   2.0676954 -3.194557 ]]
Iteration 500 of 1000: loss=0.00117 " + "l1=0.00088" + "l2=0.000287 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.154779  -2.2481737  2.066742  -3.18742  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0144 " + "l1=0.0144" + "l2=0 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.2127934 -2.2340727  2.0689702 -3.249143 ]]
Iteration 100 of 1000: loss=0.00265 " + "l1=0" + "l2=0.00265 f=-0.306 shape=(1, 9000, 1)
logits [[ 2.0721688 -2.2689629  2.072812  -3.099686 ]]
Iteration 200 of 1000: loss=0.00185 " + "l1=0" + "l2=0.00185 f=-0.308 shape=(1, 9000, 1)
logits [[ 2.0660713 -2.2716708  2.0669572 -3.0930874]]
Iteration 300 of 1000: loss=0.00145 " + "l1=0" + "l2=0.00145 f=-0.309 shape=(1, 9000, 1)
logits [[ 2.0636382 -2.2725697  2.0637028 -3.089905 ]]
Iteration 400 of 1000: loss=0.00128 " + "l1=0" + "l2=0.00128 f=-0.309 shape=(1, 9000, 1)
logits [[ 2.060189  -2.273315   2.0615385 -3.0854082]]
Iteration 500 of 1000: loss=0.00138 " + "l1=0" + "l2=0.00138 f=-0.309 shape=(1, 9000, 1)
logits [[ 2.0571628 -2.2731152  2.0599115 -3.0811937]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.00791 " + "l1=0.00791" + "l2=0 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.2127934 -2.2340727  2.0689702 -3.249143 ]]
Iteration 100 of 1000: loss=0.00297 " + "l1=0.000392" + "l2=0.00258 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.0815442 -2.2670562  2.0744212 -3.110408 ]]
Iteration 200 of 1000: loss=0.00185 " + "l1=0" + "l2=0.00185 f=-0.308 shape=(1, 9000, 1)
logits [[ 2.067677  -2.2716644  2.0678132 -3.0950594]]
Iteration 300 of 1000: loss=0.00149 " + "l1=0" + "l2=0.00149 f=-0.309 shape=(1, 9000, 1)
logits [[ 2.0635858 -2.2731335  2.0644362 -3.090183 ]]
Iteration 400 of 1000: loss=0.00125 " + "l1=0" + "l2=0.00125 f=-0.309 shape=(1, 9000, 1)
logits [[ 2.0613966 -2.273412   2.061752  -3.0870047]]
Iteration 500 of 1000: loss=0.00115 " + "l1=0" + "l2=0.00115 f=-0.309 shape=(1, 9000, 1)
logits [[ 2.0591702 -2.2731457  2.0601249 -3.083678 ]]
Iteration 600 of 1000: loss=0.00115 " + "l1=1.73e-05" + "l2=0.00114 f=-0.309 shape=(1, 9000, 1)
logits [[ 2.05847   -2.2718582  2.0581548 -3.0813744]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00467 " + "l1=0.00467" + "l2=0 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.2127934 -2.2340727  2.0689702 -3.249143 ]]
Iteration 100 of 1000: loss=0.00287 " + "l1=0.0019" + "l2=0.000972 f=-0.303 shape=(1, 9000, 1)
logits [[ 2.1309767 -2.2538993  2.0726094 -3.1616604]]
Iteration 200 of 1000: loss=0.00224 " + "l1=0.000945" + "l2=0.00129 f=-0.306 shape=(1, 9000, 1)
logits [[ 2.0989075 -2.2634606  2.0698228 -3.1289313]]
Iteration 300 of 1000: loss=0.0017 " + "l1=0.000108" + "l2=0.00159 f=-0.308 shape=(1, 9000, 1)
logits [[ 2.0701883 -2.2714725  2.0668736 -3.0981736]]
Iteration 400 of 1000: loss=0.00137 " + "l1=0" + "l2=0.00137 f=-0.309 shape=(1, 9000, 1)
logits [[ 2.063143  -2.2731812  2.0633204 -3.0895824]]
Iteration 500 of 1000: loss=0.00118 " + "l1=1.79e-05" + "l2=0.00116 f=-0.309 shape=(1, 9000, 1)
logits [[ 2.061499  -2.2731314  2.0609481 -3.0868983]]
Iteration 600 of 1000: loss=0.00111 " + "l1=0" + "l2=0.00111 f=-0.309 shape=(1, 9000, 1)
logits [[ 2.0587006 -2.2725751  2.0592434 -3.0825071]]
Iteration 700 of 1000: loss=0.00113 " + "l1=0" + "l2=0.00113 f=-0.309 shape=(1, 9000, 1)
logits [[ 2.0571432 -2.2716177  2.0577228 -3.0797482]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.00306 " + "l1=0.00306" + "l2=0 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.2127934 -2.2340727  2.0689702 -3.249143 ]]
Iteration 100 of 1000: loss=0.00224 " + "l1=0.00174" + "l2=0.000498 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.1534512 -2.247874   2.071358  -3.1854756]]
Iteration 200 of 1000: loss=0.00202 " + "l1=0.00144" + "l2=0.000574 f=-0.303 shape=(1, 9000, 1)
logits [[ 2.1382337 -2.2525375  2.070311  -3.1699615]]
Iteration 300 of 1000: loss=0.0018 " + "l1=0.00111" + "l2=0.000693 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.1202981 -2.2578285  2.0681665 -3.1513758]]
Iteration 400 of 1000: loss=0.00159 " + "l1=0.000789" + "l2=0.000804 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.1028228 -2.262599   2.0656805 -3.1328158]]
Iteration 500 of 1000: loss=0.00145 " + "l1=0.000496" + "l2=0.000952 f=-0.308 shape=(1, 9000, 1)
logits [[ 2.0867739 -2.2664363  2.063443  -3.1149657]]
Iteration 600 of 1000: loss=0.00132 " + "l1=0.000221" + "l2=0.0011 f=-0.309 shape=(1, 9000, 1)
logits [[ 2.0722127 -2.2698274  2.061802  -3.0983403]]
Iteration 700 of 1000: loss=0.0012 " + "l1=0" + "l2=0.0012 f=-0.309 shape=(1, 9000, 1)
logits [[ 2.0598662 -2.2722206  2.0599935 -3.0839148]]
Iteration 800 of 1000: loss=0.00111 " + "l1=1.16e-05" + "l2=0.0011 f=-0.309 shape=(1, 9000, 1)
logits [[ 2.0585327 -2.2712276  2.057988  -3.0810335]]
Iteration 900 of 1000: loss=0.00105 " + "l1=2.25e-05" + "l2=0.00103 f=-0.309 shape=(1, 9000, 1)
logits [[ 2.0575597 -2.2700386  2.0564995 -3.079006 ]]
--- 193.2239167690277 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0546 " + "l1=0.0546" + "l2=0 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.2127934 -2.2340727  2.0689702 -3.249143 ]]
Iteration 100 of 1000: loss=0.0533 " + "l1=0.0526" + "l2=0.000699 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.1252866 -2.229487   2.0388553 -3.1347535]]
Iteration 200 of 1000: loss=0.0528 " + "l1=0.052" + "l2=0.000796 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.1002815 -2.2316313  2.0297024 -3.1047027]]
Iteration 300 of 1000: loss=0.0524 " + "l1=0.0514" + "l2=0.000992 f=-0.303 shape=(1, 9000, 1)
logits [[ 2.0714176 -2.233211   2.0190663 -3.0692265]]
Iteration 400 of 1000: loss=0.052 " + "l1=0.0508" + "l2=0.00118 f=-0.303 shape=(1, 9000, 1)
logits [[ 2.0458267 -2.2330534  2.0090632 -3.0355103]]
Iteration 500 of 1000: loss=0.0516 " + "l1=0.0503" + "l2=0.00135 f=-0.303 shape=(1, 9000, 1)
logits [[ 2.0226958 -2.2320707  1.999704  -3.003806 ]]
Iteration 600 of 1000: loss=0.0513 " + "l1=0.0497" + "l2=0.00157 f=-0.303 shape=(1, 9000, 1)
logits [[ 2.0004783 -2.230889   1.9909401 -2.972429 ]]
Iteration 700 of 1000: loss=0.051 " + "l1=0.0493" + "l2=0.00174 f=-0.302 shape=(1, 9000, 1)
logits [[ 1.9829922 -2.2287798  1.982794  -2.946486 ]]
Iteration 800 of 1000: loss=0.0507 " + "l1=0.049" + "l2=0.00167 f=-0.301 shape=(1, 9000, 1)
logits [[ 1.9739693 -2.2234113  1.9736879 -2.9290345]]
Iteration 900 of 1000: loss=0.0507 " + "l1=0.0488" + "l2=0.00192 f=-0.3 shape=(1, 9000, 1)
logits [[ 1.9652137 -2.2180834  1.964992  -2.9118273]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.546 " + "l1=0.546" + "l2=0 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.2127934 -2.2340727  2.0689702 -3.249143 ]]
Iteration 100 of 1000: loss=0.467 " + "l1=0.437" + "l2=0.0306 f=-0.29 shape=(1, 9000, 1)
logits [[ 1.724211  -2.1304984  1.8077257 -2.5603426]]
Iteration 200 of 1000: loss=0.438 " + "l1=0.397" + "l2=0.0409 f=-0.275 shape=(1, 9000, 1)
logits [[ 1.5516824 -2.0889628  1.7027408 -2.266304 ]]
Iteration 300 of 1000: loss=0.41 " + "l1=0.363" + "l2=0.0467 f=-0.262 shape=(1, 9000, 1)
logits [[ 1.4155443 -2.0536668  1.6122656 -2.020464 ]]
Iteration 400 of 1000: loss=0.384 " + "l1=0.332" + "l2=0.0511 f=-0.245 shape=(1, 9000, 1)
logits [[ 1.3012273 -2.0134673  1.528408  -1.7956141]]
Iteration 500 of 1000: loss=0.358 " + "l1=0.301" + "l2=0.0574 f=-0.226 shape=(1, 9000, 1)
logits [[ 1.1768479 -1.9718472  1.4479856 -1.5574918]]
Iteration 600 of 1000: loss=0.332 " + "l1=0.266" + "l2=0.0666 f=-0.208 shape=(1, 9000, 1)
logits [[ 1.0521038 -1.9294264  1.350361  -1.3051889]]
Iteration 700 of 1000: loss=0.308 " + "l1=0.236" + "l2=0.072 f=-0.191 shape=(1, 9000, 1)
logits [[ 0.9545396 -1.8889325  1.2660972 -1.0941179]]
Iteration 800 of 1000: loss=0.28 " + "l1=0.196" + "l2=0.0837 f=-0.168 shape=(1, 9000, 1)
logits [[ 0.8227969 -1.815467   1.139667  -0.820808 ]]
Iteration 900 of 1000: loss=0.252 " + "l1=0.165" + "l2=0.087 f=-0.149 shape=(1, 9000, 1)
logits [[ 0.73784715 -1.7531637   1.0322055  -0.6130748 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.46 " + "l1=5.46" + "l2=0 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.2127934 -2.2340727  2.0689702 -3.249143 ]]
Iteration 100 of 1000: loss=1.14 " + "l1=0.0196" + "l2=1.12 f=-0.125 shape=(1, 9000, 1)
logits [[-0.03901538 -1.4459968   0.50300276  0.48341858]]
Iteration 200 of 1000: loss=0.854 " + "l1=0" + "l2=0.854 f=-0.121 shape=(1, 9000, 1)
logits [[-0.02625847 -1.4617348   0.48888004  0.5142504 ]]
Iteration 300 of 1000: loss=0.707 " + "l1=0.0226" + "l2=0.684 f=-0.11 shape=(1, 9000, 1)
logits [[ 0.03996836 -1.43248     0.48828563  0.46566114]]
Iteration 400 of 1000: loss=0.587 " + "l1=0" + "l2=0.587 f=-0.101 shape=(1, 9000, 1)
logits [[ 0.06856424 -1.3908433   0.45490512  0.4616997 ]]
Iteration 500 of 1000: loss=0.515 " + "l1=0.00687" + "l2=0.508 f=-0.0989 shape=(1, 9000, 1)
logits [[ 0.1058737  -1.3736584   0.43953177  0.43266675]]
Iteration 600 of 1000: loss=0.457 " + "l1=0" + "l2=0.457 f=-0.095 shape=(1, 9000, 1)
logits [[ 0.13172504 -1.3692486   0.42247164  0.43517318]]
Iteration 700 of 1000: loss=0.434 " + "l1=0" + "l2=0.434 f=-0.0931 shape=(1, 9000, 1)
logits [[ 0.11907622 -1.3655729   0.38399348  0.49014264]]
Iteration 800 of 1000: loss=0.389 " + "l1=0.0115" + "l2=0.378 f=-0.0948 shape=(1, 9000, 1)
logits [[ 0.17524196 -1.3935318   0.42525187  0.41377926]]
Iteration 900 of 1000: loss=0.357 " + "l1=0" + "l2=0.357 f=-0.0939 shape=(1, 9000, 1)
logits [[ 0.17697799 -1.3966063   0.40985343  0.43401265]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3 " + "l1=3" + "l2=0 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.2127934 -2.2340727  2.0689702 -3.249143 ]]
Iteration 100 of 1000: loss=1.07 " + "l1=0.00668" + "l2=1.06 f=-0.125 shape=(1, 9000, 1)
logits [[-0.03310394 -1.4437135   0.4946574   0.48250955]]
Iteration 200 of 1000: loss=0.739 " + "l1=0.0128" + "l2=0.727 f=-0.119 shape=(1, 9000, 1)
logits [[ 0.02026727 -1.4532589   0.4901118   0.46689963]]
Iteration 300 of 1000: loss=0.578 " + "l1=0" + "l2=0.578 f=-0.104 shape=(1, 9000, 1)
logits [[ 0.0618064  -1.4195961   0.4539813   0.48581654]]
Iteration 400 of 1000: loss=0.458 " + "l1=0" + "l2=0.458 f=-0.0959 shape=(1, 9000, 1)
logits [[ 0.13567257 -1.4043134   0.44236958  0.4427339 ]]
Iteration 500 of 1000: loss=0.393 " + "l1=0.00685" + "l2=0.387 f=-0.0955 shape=(1, 9000, 1)
logits [[ 0.18729542 -1.4179927   0.43055242  0.41809827]]
Iteration 600 of 1000: loss=0.34 " + "l1=0.00517" + "l2=0.335 f=-0.0923 shape=(1, 9000, 1)
logits [[ 0.22948764 -1.4501507   0.43038857  0.42099124]]
Iteration 700 of 1000: loss=0.299 " + "l1=0" + "l2=0.299 f=-0.088 shape=(1, 9000, 1)
logits [[ 0.24591312 -1.4819785   0.43899703  0.4449388 ]]
Iteration 800 of 1000: loss=0.271 " + "l1=0.000494" + "l2=0.271 f=-0.0836 shape=(1, 9000, 1)
logits [[ 0.25382027 -1.5009356   0.4567632   0.45586452]]
Iteration 900 of 1000: loss=0.251 " + "l1=0" + "l2=0.251 f=-0.0825 shape=(1, 9000, 1)
logits [[ 0.24633563 -1.5127257   0.46093276  0.4756391 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.78 " + "l1=1.78" + "l2=0 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.2127934 -2.2340727  2.0689702 -3.249143 ]]
Iteration 100 of 1000: loss=1.07 " + "l1=0.712" + "l2=0.355 f=-0.199 shape=(1, 9000, 1)
logits [[ 0.7967387 -1.8141346  1.2056966 -0.985257 ]]
Iteration 200 of 1000: loss=0.771 " + "l1=0.249" + "l2=0.522 f=-0.143 shape=(1, 9000, 1)
logits [[ 0.29701868 -1.6115667   0.75487524 -0.01174848]]
Iteration 300 of 1000: loss=0.502 " + "l1=0" + "l2=0.502 f=-0.108 shape=(1, 9000, 1)
logits [[ 0.11706239 -1.4928252   0.45962748  0.48526835]]
Iteration 400 of 1000: loss=0.37 " + "l1=0" + "l2=0.37 f=-0.0953 shape=(1, 9000, 1)
logits [[ 0.20437136 -1.5092647   0.4508511   0.47272095]]
Iteration 500 of 1000: loss=0.299 " + "l1=0" + "l2=0.299 f=-0.0942 shape=(1, 9000, 1)
logits [[ 0.21761906 -1.5254478   0.46457207  0.46630672]]
Iteration 600 of 1000: loss=0.258 " + "l1=0.00385" + "l2=0.254 f=-0.0907 shape=(1, 9000, 1)
logits [[ 0.22190355 -1.5353324   0.4811685   0.469312  ]]
Iteration 700 of 1000: loss=0.224 " + "l1=0" + "l2=0.224 f=-0.0864 shape=(1, 9000, 1)
logits [[ 0.2204012  -1.554371    0.49381545  0.49450397]]
Iteration 800 of 1000: loss=0.201 " + "l1=0" + "l2=0.201 f=-0.0811 shape=(1, 9000, 1)
logits [[ 0.23338684 -1.5778327   0.503867    0.5160877 ]]
Iteration 900 of 1000: loss=0.18 " + "l1=0" + "l2=0.18 f=-0.078 shape=(1, 9000, 1)
logits [[ 0.24881718 -1.6071278   0.51889265  0.5273023 ]]
--- 289.83979296684265 seconds ---
Adv result:3
Loading record A05228
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.084 " + "l1=0.084" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.6667256 -3.7377152  3.5402563 -6.6833825]]
Iteration 100 of 1000: loss=0.0839 " + "l1=0.0838" + "l2=0.000159 f=-0.552 shape=(1, 9000, 1)
logits [[ 4.64982   -3.7289534  3.5343885 -6.6648383]]
Iteration 200 of 1000: loss=0.0839 " + "l1=0.0838" + "l2=0.000113 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.650506  -3.7288854  3.5344882 -6.6666346]]
Iteration 300 of 1000: loss=0.0839 " + "l1=0.0838" + "l2=0.000123 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.6490283 -3.7279716  3.5339468 -6.6657715]]
Iteration 400 of 1000: loss=0.0839 " + "l1=0.0837" + "l2=0.000145 f=-0.553 shape=(1, 9000, 1)
logits [[ 4.6471744 -3.72686    3.5332983 -6.6645064]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.84 " + "l1=0.84" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.6667256 -3.7377152  3.5402563 -6.6833825]]
Iteration 100 of 1000: loss=0.83 " + "l1=0.823" + "l2=0.00699 f=-0.546 shape=(1, 9000, 1)
logits [[ 4.5537896 -3.6775577  3.4984155 -6.5577087]]
Iteration 200 of 1000: loss=0.827 " + "l1=0.819" + "l2=0.00836 f=-0.545 shape=(1, 9000, 1)
logits [[ 4.526891  -3.662319   3.4886363 -6.532555 ]]
Iteration 300 of 1000: loss=0.824 " + "l1=0.815" + "l2=0.00935 f=-0.544 shape=(1, 9000, 1)
logits [[ 4.5016804 -3.648928   3.4801576 -6.510215 ]]
Iteration 400 of 1000: loss=0.822 " + "l1=0.812" + "l2=0.00996 f=-0.544 shape=(1, 9000, 1)
logits [[ 4.479027  -3.636503   3.4744346 -6.4914117]]
Iteration 500 of 1000: loss=0.819 " + "l1=0.808" + "l2=0.0103 f=-0.544 shape=(1, 9000, 1)
logits [[ 4.4594135 -3.6246176  3.4687383 -6.4782534]]
Iteration 600 of 1000: loss=0.816 " + "l1=0.805" + "l2=0.0107 f=-0.544 shape=(1, 9000, 1)
logits [[ 4.4415154 -3.613051   3.4633667 -6.467031 ]]
Iteration 700 of 1000: loss=0.814 " + "l1=0.803" + "l2=0.0109 f=-0.544 shape=(1, 9000, 1)
logits [[ 4.424167  -3.6022694  3.458425  -6.4568396]]
Iteration 800 of 1000: loss=0.811 " + "l1=0.8" + "l2=0.0112 f=-0.545 shape=(1, 9000, 1)
logits [[ 4.4069695 -3.5914986  3.4524186 -6.44646  ]]
Iteration 900 of 1000: loss=0.809 " + "l1=0.797" + "l2=0.0117 f=-0.545 shape=(1, 9000, 1)
logits [[ 4.39095   -3.5804539  3.4464855 -6.4383154]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.4 " + "l1=8.4" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.6667256 -3.7377152  3.5402563 -6.6833825]]
Iteration 100 of 1000: loss=7.4 " + "l1=6.68" + "l2=0.721 f=-0.465 shape=(1, 9000, 1)
logits [[ 3.5478067 -3.1283057  3.11073   -5.388615 ]]
Iteration 200 of 1000: loss=7.2 " + "l1=6.31" + "l2=0.889 f=-0.446 shape=(1, 9000, 1)
logits [[ 3.2979531 -3.0095558  3.0216198 -5.094918 ]]
Iteration 300 of 1000: loss=7.01 " + "l1=6.03" + "l2=0.974 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.1363118 -2.8955755  2.9299848 -4.914205 ]]
Iteration 400 of 1000: loss=6.79 " + "l1=5.8" + "l2=0.985 f=-0.428 shape=(1, 9000, 1)
logits [[ 2.961555  -2.8429286  2.876293  -4.7086782]]
Iteration 500 of 1000: loss=6.58 " + "l1=5.56" + "l2=1.02 f=-0.417 shape=(1, 9000, 1)
logits [[ 2.7988212 -2.7642062  2.7908278 -4.491917 ]]
Iteration 600 of 1000: loss=6.31 " + "l1=5.3" + "l2=1.01 f=-0.403 shape=(1, 9000, 1)
logits [[ 2.66791   -2.6351392  2.660557  -4.304321 ]]
Iteration 700 of 1000: loss=6.08 " + "l1=5.04" + "l2=1.04 f=-0.39 shape=(1, 9000, 1)
logits [[ 2.514552  -2.5226     2.5138974 -4.0643983]]
Iteration 800 of 1000: loss=5.93 " + "l1=4.87" + "l2=1.06 f=-0.379 shape=(1, 9000, 1)
logits [[ 2.4115126 -2.456408   2.4140925 -3.8861327]]
Iteration 900 of 1000: loss=5.45 " + "l1=4.21" + "l2=1.24 f=-0.349 shape=(1, 9000, 1)
logits [[ 2.109981  -2.1018653  2.1130402 -3.517168 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=84 " + "l1=84" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.6667256 -3.7377152  3.5402563 -6.6833825]]
Iteration 100 of 1000: loss=43.8 " + "l1=32.3" + "l2=11.5 f=-0.238 shape=(1, 9000, 1)
logits [[ 1.6351852 -1.5843214  1.6427702 -2.6439652]]
Iteration 200 of 1000: loss=26.5 " + "l1=11.9" + "l2=14.6 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.6821094  -0.42651892  0.7642978  -2.0135722 ]]
Iteration 300 of 1000: loss=15.9 " + "l1=0.0981" + "l2=15.8 f=-0.375 shape=(1, 9000, 1)
logits [[-0.48705488  0.38501772  0.39483166 -1.7937828 ]]
Iteration 400 of 1000: loss=13.1 " + "l1=0" + "l2=13.1 f=-0.411 shape=(1, 9000, 1)
logits [[-0.39025465  0.36443737  0.35999635 -1.9770466 ]]
Iteration 500 of 1000: loss=12.1 " + "l1=0.209" + "l2=11.9 f=-0.414 shape=(1, 9000, 1)
logits [[-0.44295558  0.38918304  0.41005334 -2.0105472 ]]
Iteration 600 of 1000: loss=11.6 " + "l1=0" + "l2=11.6 f=-0.428 shape=(1, 9000, 1)
logits [[-0.49263614  0.44663492  0.4004633  -2.068002  ]]
Iteration 700 of 1000: loss=11.1 " + "l1=0.0335" + "l2=11 f=-0.427 shape=(1, 9000, 1)
logits [[-0.4245165   0.4157127   0.41906548 -2.1194527 ]]
Iteration 800 of 1000: loss=10.9 " + "l1=0" + "l2=10.9 f=-0.433 shape=(1, 9000, 1)
logits [[-0.4673436   0.43786627  0.40887937 -2.113256  ]]
Iteration 900 of 1000: loss=10.6 " + "l1=0" + "l2=10.6 f=-0.441 shape=(1, 9000, 1)
logits [[-0.4930376   0.4333591   0.40769404 -2.111189  ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=46.2 " + "l1=46.2" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.6667256 -3.7377152  3.5402563 -6.6833825]]
Iteration 100 of 1000: loss=29.4 " + "l1=23.5" + "l2=5.97 f=-0.288 shape=(1, 9000, 1)
logits [[ 2.1650264 -2.1028001  2.1631243 -3.3792284]]
Iteration 200 of 1000: loss=21.1 " + "l1=13.2" + "l2=7.96 f=-0.316 shape=(1, 9000, 1)
logits [[ 1.3157063 -1.0782567  1.3131028 -2.812588 ]]
Iteration 300 of 1000: loss=17.3 " + "l1=8.4" + "l2=8.89 f=-0.337 shape=(1, 9000, 1)
logits [[ 0.9029055  -0.5387833   0.98893076 -2.7030103 ]]
Iteration 400 of 1000: loss=15.1 " + "l1=5.34" + "l2=9.8 f=-0.376 shape=(1, 9000, 1)
logits [[ 0.5286988  -0.22782531  0.7437601  -2.5494869 ]]
Iteration 500 of 1000: loss=12.4 " + "l1=1.12" + "l2=11.3 f=-0.444 shape=(1, 9000, 1)
logits [[-0.2730015   0.28693226  0.49107876 -2.2814486 ]]
Iteration 600 of 1000: loss=10.6 " + "l1=0.0747" + "l2=10.5 f=-0.475 shape=(1, 9000, 1)
logits [[-0.50833124  0.38265753  0.39624333 -2.172372  ]]
Iteration 700 of 1000: loss=9.63 " + "l1=0.028" + "l2=9.6 f=-0.481 shape=(1, 9000, 1)
logits [[-0.6703483   0.36158973  0.36667514 -1.9804057 ]]
Iteration 800 of 1000: loss=8.43 " + "l1=0.00167" + "l2=8.43 f=-0.481 shape=(1, 9000, 1)
logits [[-0.77725464  0.3441174   0.34442183 -1.8372563 ]]
Iteration 900 of 1000: loss=7.57 " + "l1=0" + "l2=7.57 f=-0.512 shape=(1, 9000, 1)
logits [[-1.0026007   0.28813735  0.28793493 -1.6199396 ]]
--- 257.42380475997925 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0113 " + "l1=0.0113" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.6667256 -3.7377152  3.5402563 -6.6833825]]
Iteration 100 of 1000: loss=0.0112 " + "l1=0.0111" + "l2=0.000102 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.654186  -3.737262   3.5418444 -6.6728516]]
Iteration 200 of 1000: loss=0.0112 " + "l1=0.0111" + "l2=6.21e-05 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.655661  -3.7379696  3.5424368 -6.6753263]]
Iteration 300 of 1000: loss=0.0112 " + "l1=0.0111" + "l2=7.26e-05 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.6548405 -3.7382863  3.5428913 -6.675403 ]]
Iteration 400 of 1000: loss=0.0112 " + "l1=0.0111" + "l2=0.000103 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.653667  -3.7384994  3.543321  -6.6751547]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.113 " + "l1=0.113" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.6667256 -3.7377152  3.5402563 -6.6833825]]
Iteration 100 of 1000: loss=0.107 " + "l1=0.104" + "l2=0.00334 f=-0.555 shape=(1, 9000, 1)
logits [[ 4.5929275 -3.7396538  3.5518482 -6.6260095]]
Iteration 200 of 1000: loss=0.106 " + "l1=0.102" + "l2=0.00384 f=-0.556 shape=(1, 9000, 1)
logits [[ 4.577577  -3.7418313  3.556983  -6.6182127]]
Iteration 300 of 1000: loss=0.105 " + "l1=0.1" + "l2=0.00432 f=-0.557 shape=(1, 9000, 1)
logits [[ 4.5633163 -3.7421713  3.5612729 -6.611746 ]]
Iteration 400 of 1000: loss=0.103 " + "l1=0.0983" + "l2=0.00485 f=-0.558 shape=(1, 9000, 1)
logits [[ 4.5479355 -3.741557   3.565249  -6.6051793]]
Iteration 500 of 1000: loss=0.102 " + "l1=0.0961" + "l2=0.00548 f=-0.559 shape=(1, 9000, 1)
logits [[ 4.5294824 -3.7404702  3.5689077 -6.595737 ]]
Iteration 600 of 1000: loss=0.1 " + "l1=0.0941" + "l2=0.00595 f=-0.561 shape=(1, 9000, 1)
logits [[ 4.5136576 -3.740361   3.5726836 -6.5899105]]
Iteration 700 of 1000: loss=0.0986 " + "l1=0.0922" + "l2=0.00641 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.4987726 -3.7403417  3.5764496 -6.5853615]]
Iteration 800 of 1000: loss=0.0973 " + "l1=0.0905" + "l2=0.00679 f=-0.564 shape=(1, 9000, 1)
logits [[ 4.4853997 -3.7403336  3.5802855 -6.5828786]]
Iteration 900 of 1000: loss=0.0959 " + "l1=0.0887" + "l2=0.00719 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.4718456 -3.7403173  3.5848694 -6.580113 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.13 " + "l1=1.13" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.6667256 -3.7377152  3.5402563 -6.6833825]]
Iteration 100 of 1000: loss=0.69 " + "l1=0.43" + "l2=0.259 f=-0.558 shape=(1, 9000, 1)
logits [[ 4.044336  -3.7270212  3.613915  -6.1641717]]
Iteration 200 of 1000: loss=0.55 " + "l1=0.201" + "l2=0.349 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.8568501 -3.7455456  3.6558967 -6.007037 ]]
Iteration 300 of 1000: loss=0.406 " + "l1=0.00778" + "l2=0.398 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.7055042 -3.7660902  3.697722  -5.8853345]]
Iteration 400 of 1000: loss=0.296 " + "l1=0.00471" + "l2=0.291 f=-0.564 shape=(1, 9000, 1)
logits [[ 3.7247372 -3.768855   3.7200267 -5.932201 ]]
Iteration 500 of 1000: loss=0.231 " + "l1=0.00251" + "l2=0.229 f=-0.559 shape=(1, 9000, 1)
logits [[ 3.7167883 -3.7460775  3.7142777 -5.9219856]]
Iteration 600 of 1000: loss=0.192 " + "l1=0" + "l2=0.192 f=-0.556 shape=(1, 9000, 1)
logits [[ 3.7067633 -3.7349966  3.7070985 -5.903634 ]]
Iteration 700 of 1000: loss=0.171 " + "l1=0" + "l2=0.171 f=-0.552 shape=(1, 9000, 1)
logits [[ 3.694506  -3.7226632  3.6992083 -5.8798013]]
Iteration 800 of 1000: loss=0.153 " + "l1=0.00129" + "l2=0.152 f=-0.549 shape=(1, 9000, 1)
logits [[ 3.6908836 -3.7101579  3.6895928 -5.8657994]]
Iteration 900 of 1000: loss=0.14 " + "l1=0.000233" + "l2=0.14 f=-0.545 shape=(1, 9000, 1)
logits [[ 3.6831088 -3.699129   3.6828759 -5.846273 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.62 " + "l1=0.62" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.6667256 -3.7377152  3.5402563 -6.6833825]]
Iteration 100 of 1000: loss=0.475 " + "l1=0.389" + "l2=0.0869 f=-0.557 shape=(1, 9000, 1)
logits [[ 4.299286  -3.7354584  3.5928323 -6.386308 ]]
Iteration 200 of 1000: loss=0.433 " + "l1=0.335" + "l2=0.0975 f=-0.563 shape=(1, 9000, 1)
logits [[ 4.2333174 -3.7479422  3.6237624 -6.362283 ]]
Iteration 300 of 1000: loss=0.394 " + "l1=0.291" + "l2=0.104 f=-0.568 shape=(1, 9000, 1)
logits [[ 4.1792736 -3.7600179  3.6509075 -6.3417377]]
Iteration 400 of 1000: loss=0.352 " + "l1=0.239" + "l2=0.113 f=-0.57 shape=(1, 9000, 1)
logits [[ 4.1106944 -3.7656233  3.6757002 -6.299352 ]]
Iteration 500 of 1000: loss=0.306 " + "l1=0.184" + "l2=0.122 f=-0.569 shape=(1, 9000, 1)
logits [[ 4.032314  -3.7632082  3.6983652 -6.241688 ]]
Iteration 600 of 1000: loss=0.259 " + "l1=0.124" + "l2=0.136 f=-0.565 shape=(1, 9000, 1)
logits [[ 3.9340048 -3.7520494  3.7091877 -6.1522446]]
Iteration 700 of 1000: loss=0.211 " + "l1=0.0553" + "l2=0.156 f=-0.559 shape=(1, 9000, 1)
logits [[ 3.8099606 -3.730105   3.7094524 -6.025551 ]]
Iteration 800 of 1000: loss=0.17 " + "l1=0.00582" + "l2=0.164 f=-0.55 shape=(1, 9000, 1)
logits [[ 3.7090764 -3.7009888  3.6984937 -5.906165 ]]
Iteration 900 of 1000: loss=0.145 " + "l1=0.0023" + "l2=0.142 f=-0.544 shape=(1, 9000, 1)
logits [[ 3.69459   -3.686775   3.6904035 -5.8737597]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.366 " + "l1=0.366" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.6667256 -3.7377152  3.5402563 -6.6833825]]
Iteration 100 of 1000: loss=0.315 " + "l1=0.283" + "l2=0.032 f=-0.556 shape=(1, 9000, 1)
logits [[ 4.442884  -3.7376552  3.5720801 -6.5018296]]
Iteration 200 of 1000: loss=0.297 " + "l1=0.256" + "l2=0.0405 f=-0.557 shape=(1, 9000, 1)
logits [[ 4.377346  -3.739457   3.5894465 -6.455853 ]]
Iteration 300 of 1000: loss=0.281 " + "l1=0.238" + "l2=0.0431 f=-0.562 shape=(1, 9000, 1)
logits [[ 4.3392887 -3.745701   3.6066356 -6.4485946]]
Iteration 400 of 1000: loss=0.267 " + "l1=0.221" + "l2=0.0454 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.3047056 -3.749034   3.6241417 -6.4449644]]
Iteration 500 of 1000: loss=0.252 " + "l1=0.204" + "l2=0.0481 f=-0.569 shape=(1, 9000, 1)
logits [[ 4.2671504 -3.7536433  3.6408372 -6.43156  ]]
Iteration 600 of 1000: loss=0.236 " + "l1=0.185" + "l2=0.0515 f=-0.572 shape=(1, 9000, 1)
logits [[ 4.227462  -3.7588804  3.6591842 -6.4164696]]
Iteration 700 of 1000: loss=0.221 " + "l1=0.166" + "l2=0.0548 f=-0.573 shape=(1, 9000, 1)
logits [[ 4.1845226 -3.7602003  3.6726832 -6.3881693]]
Iteration 800 of 1000: loss=0.207 " + "l1=0.147" + "l2=0.0602 f=-0.572 shape=(1, 9000, 1)
logits [[ 4.1335874 -3.758184   3.6820984 -6.34622  ]]
Iteration 900 of 1000: loss=0.195 " + "l1=0.13" + "l2=0.0643 f=-0.571 shape=(1, 9000, 1)
logits [[ 4.0856953 -3.7511966  3.684772  -6.3024287]]
--- 257.0086922645569 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.114 " + "l1=0.114" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.6667256 -3.7377152  3.5402563 -6.6833825]]
Iteration 100 of 1000: loss=0.113 " + "l1=0.113" + "l2=0.000309 f=-0.552 shape=(1, 9000, 1)
logits [[ 4.642881  -3.7312617  3.533311  -6.651133 ]]
Iteration 200 of 1000: loss=0.113 " + "l1=0.113" + "l2=0.00025 f=-0.552 shape=(1, 9000, 1)
logits [[ 4.6424212 -3.7312973  3.5331051 -6.6512322]]
Iteration 300 of 1000: loss=0.113 " + "l1=0.113" + "l2=0.000276 f=-0.552 shape=(1, 9000, 1)
logits [[ 4.63967   -3.7307446  3.5322084 -6.648113 ]]
Iteration 400 of 1000: loss=0.113 " + "l1=0.113" + "l2=0.000314 f=-0.552 shape=(1, 9000, 1)
logits [[ 4.6367393 -3.7301266  3.5312045 -6.6447597]]
Iteration 500 of 1000: loss=0.113 " + "l1=0.113" + "l2=0.000378 f=-0.552 shape=(1, 9000, 1)
logits [[ 4.6337175 -3.7294374  3.5301454 -6.6413136]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.14 " + "l1=1.14" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.6667256 -3.7377152  3.5402563 -6.6833825]]
Iteration 100 of 1000: loss=1.11 " + "l1=1.09" + "l2=0.019 f=-0.538 shape=(1, 9000, 1)
logits [[ 4.4767203 -3.6878881  3.4812617 -6.4210567]]
Iteration 200 of 1000: loss=1.1 " + "l1=1.08" + "l2=0.0225 f=-0.535 shape=(1, 9000, 1)
logits [[ 4.433905  -3.6784673  3.470613  -6.364607 ]]
Iteration 300 of 1000: loss=1.1 " + "l1=1.07" + "l2=0.0241 f=-0.533 shape=(1, 9000, 1)
logits [[ 4.4059925 -3.6713974  3.4630086 -6.3280835]]
Iteration 400 of 1000: loss=1.09 " + "l1=1.07" + "l2=0.0248 f=-0.532 shape=(1, 9000, 1)
logits [[ 4.3849244 -3.66512    3.4566076 -6.3032336]]
Iteration 500 of 1000: loss=1.09 " + "l1=1.06" + "l2=0.0256 f=-0.531 shape=(1, 9000, 1)
logits [[ 4.3658104 -3.659433   3.4508548 -6.281251 ]]
Iteration 600 of 1000: loss=1.09 " + "l1=1.06" + "l2=0.0257 f=-0.531 shape=(1, 9000, 1)
logits [[ 4.349874  -3.654279   3.444308  -6.2620573]]
Iteration 700 of 1000: loss=1.08 " + "l1=1.06" + "l2=0.0267 f=-0.53 shape=(1, 9000, 1)
logits [[ 4.330909  -3.6497736  3.4367752 -6.2390676]]
Iteration 800 of 1000: loss=1.08 " + "l1=1.05" + "l2=0.0276 f=-0.529 shape=(1, 9000, 1)
logits [[ 4.3124022 -3.6427062  3.4280233 -6.214587 ]]
Iteration 900 of 1000: loss=1.08 " + "l1=1.05" + "l2=0.0286 f=-0.528 shape=(1, 9000, 1)
logits [[ 4.29356   -3.6357982  3.4182074 -6.1873775]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.4 " + "l1=11.4" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.6667256 -3.7377152  3.5402563 -6.6833825]]
Iteration 100 of 1000: loss=8.74 " + "l1=7.03" + "l2=1.71 f=-0.382 shape=(1, 9000, 1)
logits [[ 2.924842  -3.2677824  2.9238567 -4.109357 ]]
Iteration 200 of 1000: loss=8.33 " + "l1=6.54" + "l2=1.8 f=-0.345 shape=(1, 9000, 1)
logits [[ 2.7772021 -3.1790752  2.778342  -3.7582633]]
Iteration 300 of 1000: loss=8.02 " + "l1=6.18" + "l2=1.84 f=-0.333 shape=(1, 9000, 1)
logits [[ 2.6546206 -3.1135492  2.6530337 -3.5257807]]
Iteration 400 of 1000: loss=7.64 " + "l1=5.75" + "l2=1.88 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.5159767 -2.996683   2.516684  -3.237511 ]]
Iteration 500 of 1000: loss=7.03 " + "l1=4.99" + "l2=2.05 f=-0.266 shape=(1, 9000, 1)
logits [[ 2.2144103 -2.810732   2.2583127 -2.726713 ]]
Iteration 600 of 1000: loss=6.26 " + "l1=4.05" + "l2=2.21 f=-0.23 shape=(1, 9000, 1)
logits [[ 1.7912067 -2.6150563  1.9747282 -2.0720637]]
Iteration 700 of 1000: loss=5.41 " + "l1=3.04" + "l2=2.37 f=-0.185 shape=(1, 9000, 1)
logits [[ 1.3704708 -2.39048    1.660507  -1.3798028]]
Iteration 800 of 1000: loss=4.47 " + "l1=1.96" + "l2=2.51 f=-0.127 shape=(1, 9000, 1)
logits [[ 0.97929025 -2.1076884   1.2927829  -0.67045796]]
Iteration 900 of 1000: loss=3.5 " + "l1=0.957" + "l2=2.54 f=-0.0719 shape=(1, 9000, 1)
logits [[ 0.67207646 -1.9353261   0.96643156  0.00906771]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=114 " + "l1=114" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.6667256 -3.7377152  3.5402563 -6.6833825]]
Iteration 100 of 1000: loss=26.9 " + "l1=1.18" + "l2=25.7 f=-0.0424 shape=(1, 9000, 1)
logits [[-0.11371441 -2.253346    1.1579621   1.039549  ]]
Iteration 200 of 1000: loss=17.4 " + "l1=0.0992" + "l2=17.3 f=-0.0318 shape=(1, 9000, 1)
logits [[-0.05051542 -2.0568185   0.9949656   0.98504215]]
Iteration 300 of 1000: loss=15.3 " + "l1=0.506" + "l2=14.8 f=-0.0387 shape=(1, 9000, 1)
logits [[ 6.8813749e-04 -1.9881400e+00  9.4167531e-01  8.9110297e-01]]
Iteration 400 of 1000: loss=13.6 " + "l1=0" + "l2=13.6 f=-0.0456 shape=(1, 9000, 1)
logits [[-0.00272755 -1.9071554   0.8626839   0.8649276 ]]
Iteration 500 of 1000: loss=12.6 " + "l1=0.0883" + "l2=12.5 f=-0.0788 shape=(1, 9000, 1)
logits [[-0.0131237  -1.8433026   0.77500266  0.7661701 ]]
Iteration 600 of 1000: loss=11.9 " + "l1=0.333" + "l2=11.6 f=-0.104 shape=(1, 9000, 1)
logits [[-0.05771779 -1.7873279   0.7303661   0.697114  ]]
Iteration 700 of 1000: loss=10.9 " + "l1=0" + "l2=10.9 f=-0.109 shape=(1, 9000, 1)
logits [[-0.10426635 -1.7090536   0.6881535   0.68959117]]
Iteration 800 of 1000: loss=10.3 " + "l1=0" + "l2=10.3 f=-0.122 shape=(1, 9000, 1)
logits [[-0.1580871  -1.6492256   0.652545    0.66738707]]
Iteration 900 of 1000: loss=9.75 " + "l1=0.0137" + "l2=9.74 f=-0.134 shape=(1, 9000, 1)
logits [[-0.17472894 -1.6259784   0.63288325  0.631509  ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=62.4 " + "l1=62.4" + "l2=0 f=-0.554 shape=(1, 9000, 1)
logits [[ 4.6667256 -3.7377152  3.5402563 -6.6833825]]
Iteration 100 of 1000: loss=25.4 " + "l1=10.9" + "l2=14.5 f=-0.133 shape=(1, 9000, 1)
logits [[ 0.70572335 -2.603216    1.6758641  -0.31126687]]
Iteration 200 of 1000: loss=14.8 " + "l1=0" + "l2=14.8 f=-0.045 shape=(1, 9000, 1)
logits [[-0.03363398 -2.034075    0.94360983  0.9440355 ]]
Iteration 300 of 1000: loss=12.7 " + "l1=0.227" + "l2=12.5 f=-0.0787 shape=(1, 9000, 1)
logits [[-0.03474878 -1.9326043   0.8468528   0.8056493 ]]
Iteration 400 of 1000: loss=10.9 " + "l1=0" + "l2=10.9 f=-0.111 shape=(1, 9000, 1)
logits [[-0.20277864 -1.7296654   0.7340239   0.7553103 ]]
Iteration 500 of 1000: loss=9.92 " + "l1=0" + "l2=9.92 f=-0.129 shape=(1, 9000, 1)
logits [[-0.27867445 -1.6683133   0.70031023  0.7311405 ]]
Iteration 600 of 1000: loss=9.24 " + "l1=0.155" + "l2=9.09 f=-0.142 shape=(1, 9000, 1)
logits [[-0.27176782 -1.6677815   0.6992743   0.6711752 ]]
Iteration 700 of 1000: loss=8.51 " + "l1=0" + "l2=8.51 f=-0.154 shape=(1, 9000, 1)
logits [[-0.34326497 -1.5941608   0.63925004  0.6833854 ]]
Iteration 800 of 1000: loss=8.01 " + "l1=0.0482" + "l2=7.96 f=-0.159 shape=(1, 9000, 1)
logits [[-0.30853266 -1.6003525   0.64020085  0.6314362 ]]
Iteration 900 of 1000: loss=7.65 " + "l1=0" + "l2=7.65 f=-0.165 shape=(1, 9000, 1)
logits [[-0.33914542 -1.5820552   0.61112005  0.6494102 ]]
--- 263.40525126457214 seconds ---
Adv result:3
Loading record A05230
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0204 " + "l1=0.0204" + "l2=0 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.7785181  -1.2569753   0.69094795 -1.1344417 ]]
Iteration 100 of 1000: loss=0.0194 " + "l1=0.019" + "l2=0.000486 f=-0.233 shape=(1, 9000, 1)
logits [[ 0.707951  -1.1881751  0.647551  -1.0980432]]
Iteration 200 of 1000: loss=0.0192 " + "l1=0.0186" + "l2=0.000579 f=-0.233 shape=(1, 9000, 1)
logits [[ 0.6895292  -1.1690896   0.63682425 -1.0909454 ]]
Iteration 300 of 1000: loss=0.0189 " + "l1=0.0182" + "l2=0.00075 f=-0.234 shape=(1, 9000, 1)
logits [[ 0.66872966 -1.1477479   0.6246307  -1.0828372 ]]
Iteration 400 of 1000: loss=0.0187 " + "l1=0.0178" + "l2=0.000926 f=-0.235 shape=(1, 9000, 1)
logits [[ 0.64899206 -1.1283891   0.61349034 -1.0736212 ]]
Iteration 500 of 1000: loss=0.0185 " + "l1=0.0175" + "l2=0.00106 f=-0.235 shape=(1, 9000, 1)
logits [[ 0.6329918 -1.1143044  0.6052523 -1.0641687]]
Iteration 600 of 1000: loss=0.0185 " + "l1=0.0172" + "l2=0.00126 f=-0.235 shape=(1, 9000, 1)
logits [[ 0.61930656 -1.1026827   0.5984102  -1.0554426 ]]
Iteration 700 of 1000: loss=0.0184 " + "l1=0.017" + "l2=0.00141 f=-0.235 shape=(1, 9000, 1)
logits [[ 0.60627294 -1.0918881   0.59305257 -1.0468622 ]]
Iteration 800 of 1000: loss=0.0183 " + "l1=0.0168" + "l2=0.00156 f=-0.235 shape=(1, 9000, 1)
logits [[ 0.5947804 -1.0826209  0.5882653 -1.0384804]]
Iteration 900 of 1000: loss=0.0183 " + "l1=0.0166" + "l2=0.00171 f=-0.234 shape=(1, 9000, 1)
logits [[ 0.5834892 -1.0731741  0.5829502 -1.0304503]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.204 " + "l1=0.204" + "l2=0 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.7785181  -1.2569753   0.69094795 -1.1344417 ]]
Iteration 100 of 1000: loss=0.13 " + "l1=0.0887" + "l2=0.0416 f=-0.266 shape=(1, 9000, 1)
logits [[ 0.22064528 -0.6646237   0.22280183 -0.8409825 ]]
Iteration 200 of 1000: loss=0.103 " + "l1=0.053" + "l2=0.0501 f=-0.29 shape=(1, 9000, 1)
logits [[ 0.00190302 -0.47650152  0.05314146 -0.739607  ]]
Iteration 300 of 1000: loss=0.0718 " + "l1=0.00392" + "l2=0.0679 f=-0.333 shape=(1, 9000, 1)
logits [[-0.47560552 -0.17753083 -0.13830157 -0.5417255 ]]
Iteration 400 of 1000: loss=0.0552 " + "l1=0.00115" + "l2=0.0541 f=-0.333 shape=(1, 9000, 1)
logits [[-0.5178073  -0.16081776 -0.14933959 -0.50306743]]
Iteration 500 of 1000: loss=0.0471 " + "l1=0" + "l2=0.0471 f=-0.331 shape=(1, 9000, 1)
logits [[-0.5326409  -0.15105309 -0.15819375 -0.4831061 ]]
Iteration 600 of 1000: loss=0.0421 " + "l1=0.000693" + "l2=0.0414 f=-0.33 shape=(1, 9000, 1)
logits [[-0.5261227 -0.1584528 -0.1515249 -0.4834338]]
Iteration 700 of 1000: loss=0.0379 " + "l1=0" + "l2=0.0379 f=-0.329 shape=(1, 9000, 1)
logits [[-0.52275306 -0.15753138 -0.15822892 -0.47712368]]
Iteration 800 of 1000: loss=0.0355 " + "l1=0.000622" + "l2=0.0349 f=-0.327 shape=(1, 9000, 1)
logits [[-0.5142815  -0.1610676  -0.15485185 -0.4794953 ]]
Iteration 900 of 1000: loss=0.0329 " + "l1=0" + "l2=0.0329 f=-0.328 shape=(1, 9000, 1)
logits [[-0.5215462  -0.15524553 -0.15771422 -0.47609082]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.112 " + "l1=0.112" + "l2=0 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.7785181  -1.2569753   0.69094795 -1.1344417 ]]
Iteration 100 of 1000: loss=0.0896 " + "l1=0.0798" + "l2=0.00986 f=-0.241 shape=(1, 9000, 1)
logits [[ 0.48996612 -0.95943266  0.4906834  -0.98369056]]
Iteration 200 of 1000: loss=0.0815 " + "l1=0.0655" + "l2=0.016 f=-0.252 shape=(1, 9000, 1)
logits [[ 0.3666995  -0.8196722   0.37112615 -0.9245524 ]]
Iteration 300 of 1000: loss=0.0759 " + "l1=0.0562" + "l2=0.0197 f=-0.259 shape=(1, 9000, 1)
logits [[ 0.28513536 -0.7333522   0.28833875 -0.87530875]]
Iteration 400 of 1000: loss=0.0709 " + "l1=0.0473" + "l2=0.0236 f=-0.265 shape=(1, 9000, 1)
logits [[ 0.20388049 -0.651329    0.20916344 -0.8221534 ]]
Iteration 500 of 1000: loss=0.0649 " + "l1=0.0374" + "l2=0.0275 f=-0.276 shape=(1, 9000, 1)
logits [[ 0.0965629  -0.5546392   0.12497731 -0.7693754 ]]
Iteration 600 of 1000: loss=0.0576 " + "l1=0.026" + "l2=0.0316 f=-0.287 shape=(1, 9000, 1)
logits [[-0.04569264 -0.43758905  0.03436315 -0.6977392 ]]
Iteration 700 of 1000: loss=0.0493 " + "l1=0.0125" + "l2=0.0368 f=-0.307 shape=(1, 9000, 1)
logits [[-0.29592317 -0.2887058  -0.06134579 -0.58131176]]
Iteration 800 of 1000: loss=0.0431 " + "l1=0.00369" + "l2=0.0394 f=-0.321 shape=(1, 9000, 1)
logits [[-0.44791535 -0.19757552 -0.13044459 -0.50948435]]
Iteration 900 of 1000: loss=0.0383 " + "l1=0.000297" + "l2=0.038 f=-0.325 shape=(1, 9000, 1)
logits [[-0.4947936  -0.1666798  -0.1612878  -0.47729525]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0662 " + "l1=0.0662" + "l2=0 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.7785181  -1.2569753   0.69094795 -1.1344417 ]]
Iteration 100 of 1000: loss=0.0576 " + "l1=0.0537" + "l2=0.00389 f=-0.236 shape=(1, 9000, 1)
logits [[ 0.5818819  -1.0714778   0.57718384 -1.0323608 ]]
Iteration 200 of 1000: loss=0.0547 " + "l1=0.0498" + "l2=0.00485 f=-0.238 shape=(1, 9000, 1)
logits [[ 0.52841   -1.0042877  0.5281156 -1.0054435]]
Iteration 300 of 1000: loss=0.0528 " + "l1=0.0467" + "l2=0.00603 f=-0.241 shape=(1, 9000, 1)
logits [[ 0.4850833  -0.951377    0.48619702 -0.9849745 ]]
Iteration 400 of 1000: loss=0.0513 " + "l1=0.0443" + "l2=0.00697 f=-0.243 shape=(1, 9000, 1)
logits [[ 0.45134783 -0.9111943   0.45115903 -0.9622862 ]]
Iteration 500 of 1000: loss=0.05 " + "l1=0.0422" + "l2=0.00784 f=-0.243 shape=(1, 9000, 1)
logits [[ 0.42001587 -0.8765687   0.4214572  -0.938447  ]]
Iteration 600 of 1000: loss=0.0488 " + "l1=0.0403" + "l2=0.00846 f=-0.244 shape=(1, 9000, 1)
logits [[ 0.39463156 -0.84516954  0.39402574 -0.9176676 ]]
Iteration 700 of 1000: loss=0.0472 " + "l1=0.0376" + "l2=0.00953 f=-0.245 shape=(1, 9000, 1)
logits [[ 0.35912007 -0.79863656  0.35888463 -0.9007235 ]]
Iteration 800 of 1000: loss=0.0454 " + "l1=0.0348" + "l2=0.0105 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.32061264 -0.7487175   0.32258287 -0.8845032 ]]
Iteration 900 of 1000: loss=0.0438 " + "l1=0.0323" + "l2=0.0114 f=-0.25 shape=(1, 9000, 1)
logits [[ 0.28602824 -0.70598066  0.28917626 -0.8687095 ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0891 " + "l1=0.0891" + "l2=0 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.7785181  -1.2569753   0.69094795 -1.1344417 ]]
Iteration 100 of 1000: loss=0.0744 " + "l1=0.0681" + "l2=0.00625 f=-0.237 shape=(1, 9000, 1)
logits [[ 0.5379331  -1.0186576   0.53774995 -1.006593  ]]
Iteration 200 of 1000: loss=0.0694 " + "l1=0.0606" + "l2=0.00878 f=-0.243 shape=(1, 9000, 1)
logits [[ 0.4618833  -0.92263764  0.4613147  -0.9741063 ]]
Iteration 300 of 1000: loss=0.066 " + "l1=0.0545" + "l2=0.0115 f=-0.248 shape=(1, 9000, 1)
logits [[ 0.3957201  -0.84908336  0.39628628 -0.9335967 ]]
Iteration 400 of 1000: loss=0.0631 " + "l1=0.049" + "l2=0.014 f=-0.252 shape=(1, 9000, 1)
logits [[ 0.33414966 -0.7835892   0.3372544  -0.89653087]]
Iteration 500 of 1000: loss=0.0604 " + "l1=0.0449" + "l2=0.0155 f=-0.256 shape=(1, 9000, 1)
logits [[ 0.28780696 -0.7343942   0.29208872 -0.8687659 ]]
Iteration 600 of 1000: loss=0.0575 " + "l1=0.0406" + "l2=0.0169 f=-0.258 shape=(1, 9000, 1)
logits [[ 0.24231842 -0.679903    0.24902453 -0.8418223 ]]
Iteration 700 of 1000: loss=0.054 " + "l1=0.0353" + "l2=0.0187 f=-0.262 shape=(1, 9000, 1)
logits [[ 0.17371683 -0.60735005  0.19988267 -0.8141183 ]]
Iteration 800 of 1000: loss=0.0512 " + "l1=0.0308" + "l2=0.0204 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.10006553 -0.5496991   0.15457575 -0.7744689 ]]
Iteration 900 of 1000: loss=0.0487 " + "l1=0.0269" + "l2=0.0218 f=-0.274 shape=(1, 9000, 1)
logits [[ 0.01703646 -0.4971525   0.1184332  -0.73503715]]
--- 292.4461371898651 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.000876 " + "l1=0.000876" + "l2=0 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.7785181  -1.2569753   0.69094795 -1.1344417 ]]
Iteration 100 of 1000: loss=0.000668 " + "l1=0.000486" + "l2=0.000183 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.7490177  -1.2556605   0.70043445 -1.1181871 ]]
Iteration 200 of 1000: loss=0.000605 " + "l1=0.000453" + "l2=0.000153 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.7464999  -1.2550771   0.70124835 -1.1160728 ]]
Iteration 300 of 1000: loss=0.000563 " + "l1=0.000375" + "l2=0.000188 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.7403959  -1.254054    0.70286286 -1.1120154 ]]
Iteration 400 of 1000: loss=0.000547 " + "l1=0.000298" + "l2=0.000249 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.7342881 -1.2533183  0.7045037 -1.1077769]]
Iteration 500 of 1000: loss=0.000548 " + "l1=0.000224" + "l2=0.000323 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.7285173 -1.2528034  0.7060733 -1.1037544]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.000438 " + "l1=0.000438" + "l2=0 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.7785181  -1.2569753   0.69094795 -1.1344417 ]]
Iteration 100 of 1000: loss=0.000396 " + "l1=0.000306" + "l2=9.02e-05 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.7586185  -1.2561862   0.69749314 -1.123712  ]]
Iteration 200 of 1000: loss=0.000367 " + "l1=0.000312" + "l2=5.48e-05 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.7596461 -1.2559164  0.6972289 -1.1239247]]
Iteration 300 of 1000: loss=0.000368 " + "l1=0.000302" + "l2=6.63e-05 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.75803477 -1.2555728   0.6976106  -1.122627  ]]
const [0.0025]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.000219 " + "l1=0.000219" + "l2=0 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.7785181  -1.2569753   0.69094795 -1.1344417 ]]
Iteration 100 of 1000: loss=0.000227 " + "l1=0.00017" + "l2=5.76e-05 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.7638612 -1.2568235  0.6959579 -1.1265187]]
const [0.00375]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.000328 " + "l1=0.000328" + "l2=0 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.7785181  -1.2569753   0.69094795 -1.1344417 ]]
Iteration 100 of 1000: loss=0.000314 " + "l1=0.000241" + "l2=7.3e-05 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.7611912 -1.2565482  0.6968287 -1.1252145]]
Iteration 200 of 1000: loss=0.000288 " + "l1=0.00025" + "l2=3.73e-05 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.76299477 -1.2562392   0.6962625  -1.1259587 ]]
Iteration 300 of 1000: loss=0.000312 " + "l1=0.000247" + "l2=6.48e-05 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.7622231  -1.255872    0.69632334 -1.1252264 ]]
const [0.004375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.000383 " + "l1=0.000383" + "l2=0 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.7785181  -1.2569753   0.69094795 -1.1344417 ]]
Iteration 100 of 1000: loss=0.000356 " + "l1=0.000274" + "l2=8.22e-05 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.7598983  -1.2564254   0.69721687 -1.1244409 ]]
Iteration 200 of 1000: loss=0.000332 " + "l1=0.000282" + "l2=4.93e-05 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.76136965 -1.2561361   0.69680405 -1.124958  ]]
Iteration 300 of 1000: loss=0.000337 " + "l1=0.000277" + "l2=6.04e-05 f=-0.231 shape=(1, 9000, 1)
logits [[ 0.7602458 -1.2557957  0.6970134 -1.1239839]]
--- 94.39909934997559 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0191 " + "l1=0.0191" + "l2=0 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.7785181  -1.2569753   0.69094795 -1.1344417 ]]
Iteration 100 of 1000: loss=0.0181 " + "l1=0.0175" + "l2=0.000577 f=-0.226 shape=(1, 9000, 1)
logits [[ 0.70636845 -1.2243913   0.65624154 -1.0414213 ]]
Iteration 200 of 1000: loss=0.0177 " + "l1=0.0171" + "l2=0.000667 f=-0.224 shape=(1, 9000, 1)
logits [[ 0.6880411 -1.2163328  0.6495803 -1.0178629]]
Iteration 300 of 1000: loss=0.0174 " + "l1=0.0166" + "l2=0.000846 f=-0.222 shape=(1, 9000, 1)
logits [[ 0.6673323  -1.2075095   0.64187586 -0.9898622 ]]
Iteration 400 of 1000: loss=0.0171 " + "l1=0.0161" + "l2=0.00105 f=-0.22 shape=(1, 9000, 1)
logits [[ 0.64765733 -1.1990803   0.6345017  -0.9620886 ]]
Iteration 500 of 1000: loss=0.0169 " + "l1=0.0156" + "l2=0.00125 f=-0.218 shape=(1, 9000, 1)
logits [[ 0.62789845 -1.190497    0.6275178  -0.9350874 ]]
Iteration 600 of 1000: loss=0.0167 " + "l1=0.0153" + "l2=0.00136 f=-0.216 shape=(1, 9000, 1)
logits [[ 0.6183125  -1.1844343   0.61826634 -0.91433966]]
Iteration 700 of 1000: loss=0.0166 " + "l1=0.015" + "l2=0.00153 f=-0.214 shape=(1, 9000, 1)
logits [[ 0.60975826 -1.1796231   0.6096937  -0.8944406 ]]
Iteration 800 of 1000: loss=0.0164 " + "l1=0.0148" + "l2=0.00157 f=-0.212 shape=(1, 9000, 1)
logits [[ 0.6019183 -1.1746995  0.6016929 -0.8764779]]
Iteration 900 of 1000: loss=0.0162 " + "l1=0.0145" + "l2=0.00164 f=-0.21 shape=(1, 9000, 1)
logits [[ 0.5939656  -1.1701895   0.59418195 -0.85825694]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.191 " + "l1=0.191" + "l2=0 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.7785181  -1.2569753   0.69094795 -1.1344417 ]]
Iteration 100 of 1000: loss=0.115 " + "l1=0.0799" + "l2=0.0351 f=-0.198 shape=(1, 9000, 1)
logits [[ 0.33396387 -0.99393386  0.334517   -0.46474844]]
Iteration 200 of 1000: loss=0.0815 " + "l1=0.0245" + "l2=0.0569 f=-0.184 shape=(1, 9000, 1)
logits [[ 0.11212921 -0.8525172   0.12532462 -0.11993661]]
Iteration 300 of 1000: loss=0.0575 " + "l1=0.00234" + "l2=0.0552 f=-0.181 shape=(1, 9000, 1)
logits [[ 0.01322817 -0.79154605  0.0390623   0.01568015]]
Iteration 400 of 1000: loss=0.0458 " + "l1=0" + "l2=0.0458 f=-0.187 shape=(1, 9000, 1)
logits [[-0.0560398  -0.7649944   0.03179961  0.03956996]]
Iteration 500 of 1000: loss=0.0396 " + "l1=0.000558" + "l2=0.039 f=-0.188 shape=(1, 9000, 1)
logits [[-0.06744628 -0.76099515  0.04201259  0.03642844]]
Iteration 600 of 1000: loss=0.0359 " + "l1=0" + "l2=0.0359 f=-0.186 shape=(1, 9000, 1)
logits [[-0.07710693 -0.7587925   0.04329413  0.04699064]]
Iteration 700 of 1000: loss=0.0329 " + "l1=0" + "l2=0.0329 f=-0.185 shape=(1, 9000, 1)
logits [[-0.07888234 -0.7613432   0.04844693  0.05085242]]
Iteration 800 of 1000: loss=0.0318 " + "l1=0" + "l2=0.0318 f=-0.184 shape=(1, 9000, 1)
logits [[-0.08396322 -0.76359564  0.05118046  0.06002505]]
Iteration 900 of 1000: loss=0.0297 " + "l1=0.000281" + "l2=0.0294 f=-0.183 shape=(1, 9000, 1)
logits [[-0.07865571 -0.77182746  0.06113617  0.05833008]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.105 " + "l1=0.105" + "l2=0 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.7785181  -1.2569753   0.69094795 -1.1344417 ]]
Iteration 100 of 1000: loss=0.0802 " + "l1=0.0704" + "l2=0.00987 f=-0.212 shape=(1, 9000, 1)
logits [[ 0.51496506 -1.1128448   0.5147257  -0.76453245]]
Iteration 200 of 1000: loss=0.0713 " + "l1=0.0569" + "l2=0.0144 f=-0.202 shape=(1, 9000, 1)
logits [[ 0.42783147 -1.0601571   0.42998222 -0.60434484]]
Iteration 300 of 1000: loss=0.0635 " + "l1=0.0448" + "l2=0.0188 f=-0.191 shape=(1, 9000, 1)
logits [[ 0.35495284 -1.0273494   0.36075538 -0.4533117 ]]
Iteration 400 of 1000: loss=0.0566 " + "l1=0.0348" + "l2=0.0219 f=-0.184 shape=(1, 9000, 1)
logits [[ 0.29646507 -0.99678427  0.29901758 -0.33281237]]
Iteration 500 of 1000: loss=0.0505 " + "l1=0.0257" + "l2=0.0248 f=-0.178 shape=(1, 9000, 1)
logits [[ 0.23761284 -0.96136314  0.23860008 -0.22833881]]
Iteration 600 of 1000: loss=0.0448 " + "l1=0.0178" + "l2=0.027 f=-0.173 shape=(1, 9000, 1)
logits [[ 0.17700459 -0.93517834  0.19490531 -0.12925458]]
Iteration 700 of 1000: loss=0.0388 " + "l1=0.00847" + "l2=0.0303 f=-0.168 shape=(1, 9000, 1)
logits [[ 0.09515301 -0.90003914  0.1428558  -0.0110673 ]]
Iteration 800 of 1000: loss=0.0321 " + "l1=0" + "l2=0.0321 f=-0.166 shape=(1, 9000, 1)
logits [[-0.01185633 -0.8556273   0.10038264  0.10292637]]
Iteration 900 of 1000: loss=0.0273 " + "l1=0.000273" + "l2=0.027 f=-0.167 shape=(1, 9000, 1)
logits [[-0.03055502 -0.85368204  0.11135901  0.10639606]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0622 " + "l1=0.0622" + "l2=0 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.7785181  -1.2569753   0.69094795 -1.1344417 ]]
Iteration 100 of 1000: loss=0.0522 " + "l1=0.0481" + "l2=0.00416 f=-0.218 shape=(1, 9000, 1)
logits [[ 0.59107333 -1.1654211   0.59072477 -0.88803285]]
Iteration 200 of 1000: loss=0.0491 " + "l1=0.044" + "l2=0.00509 f=-0.212 shape=(1, 9000, 1)
logits [[ 0.5480077 -1.1375332  0.5482414 -0.8066487]]
Iteration 300 of 1000: loss=0.0466 " + "l1=0.0403" + "l2=0.00625 f=-0.207 shape=(1, 9000, 1)
logits [[ 0.5084939  -1.11387     0.5090046  -0.73203987]]
Iteration 400 of 1000: loss=0.0443 " + "l1=0.0371" + "l2=0.00726 f=-0.201 shape=(1, 9000, 1)
logits [[ 0.4762834  -1.0977407   0.47782737 -0.66218746]]
Iteration 500 of 1000: loss=0.042 " + "l1=0.0337" + "l2=0.00826 f=-0.195 shape=(1, 9000, 1)
logits [[ 0.44691858 -1.0868193   0.4493992  -0.58895445]]
Iteration 600 of 1000: loss=0.0399 " + "l1=0.0306" + "l2=0.00936 f=-0.189 shape=(1, 9000, 1)
logits [[ 0.41501075 -1.0724945   0.42017663 -0.5204454 ]]
Iteration 700 of 1000: loss=0.0378 " + "l1=0.0277" + "l2=0.0101 f=-0.185 shape=(1, 9000, 1)
logits [[ 0.3899722  -1.0625806   0.3932082  -0.45926735]]
Iteration 800 of 1000: loss=0.0357 " + "l1=0.0249" + "l2=0.0108 f=-0.181 shape=(1, 9000, 1)
logits [[ 0.3604799  -1.0484997   0.36424285 -0.4013356 ]]
Iteration 900 of 1000: loss=0.0339 " + "l1=0.0221" + "l2=0.0118 f=-0.178 shape=(1, 9000, 1)
logits [[ 0.32977527 -1.0330662   0.33568677 -0.34543115]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0837 " + "l1=0.0837" + "l2=0 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.7785181  -1.2569753   0.69094795 -1.1344417 ]]
Iteration 100 of 1000: loss=0.067 " + "l1=0.0604" + "l2=0.00655 f=-0.215 shape=(1, 9000, 1)
logits [[ 0.55421877 -1.1410736   0.5545526  -0.8265292 ]]
Iteration 200 of 1000: loss=0.0614 " + "l1=0.0525" + "l2=0.00892 f=-0.207 shape=(1, 9000, 1)
logits [[ 0.4905844 -1.100748   0.4915714 -0.7088421]]
Iteration 300 of 1000: loss=0.0568 " + "l1=0.0454" + "l2=0.0114 f=-0.199 shape=(1, 9000, 1)
logits [[ 0.43561772 -1.0711945   0.43824703 -0.59952956]]
Iteration 400 of 1000: loss=0.0524 " + "l1=0.039" + "l2=0.0134 f=-0.191 shape=(1, 9000, 1)
logits [[ 0.3890567  -1.0541962   0.39609405 -0.49440855]]
Iteration 500 of 1000: loss=0.0484 " + "l1=0.0331" + "l2=0.0152 f=-0.184 shape=(1, 9000, 1)
logits [[ 0.34985518 -1.0335221   0.35235235 -0.40525523]]
Iteration 600 of 1000: loss=0.0447 " + "l1=0.0281" + "l2=0.0166 f=-0.179 shape=(1, 9000, 1)
logits [[ 0.3129312  -1.015313    0.31520462 -0.32706958]]
Iteration 700 of 1000: loss=0.041 " + "l1=0.0232" + "l2=0.0178 f=-0.174 shape=(1, 9000, 1)
logits [[ 0.2749826  -0.99885505  0.2791888  -0.25197014]]
Iteration 800 of 1000: loss=0.0374 " + "l1=0.0184" + "l2=0.019 f=-0.17 shape=(1, 9000, 1)
logits [[ 0.23206857 -0.97846496  0.24256504 -0.1772969 ]]
Iteration 900 of 1000: loss=0.0338 " + "l1=0.013" + "l2=0.0208 f=-0.167 shape=(1, 9000, 1)
logits [[ 0.18348195 -0.9523426   0.19845895 -0.09889892]]
--- 293.4895718097687 seconds ---
Adv result:3
Loading record A05238
(1, 7594)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0626 " + "l1=0.0626" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.443612 -0.813736  2.034764 -9.3569  ]]
Iteration 100 of 1000: loss=0.0618 " + "l1=0.0614" + "l2=0.00042 f=-0.676 shape=(1, 9000, 1)
logits [[ 5.3817763  -0.75730914  2.0011585  -9.328837  ]]
Iteration 200 of 1000: loss=0.0616 " + "l1=0.0611" + "l2=0.000474 f=-0.676 shape=(1, 9000, 1)
logits [[ 5.367408   -0.74062234  1.9905955  -9.320876  ]]
Iteration 300 of 1000: loss=0.0613 " + "l1=0.0607" + "l2=0.000592 f=-0.676 shape=(1, 9000, 1)
logits [[ 5.3501368 -0.7219683  1.9787726 -9.311332 ]]
Iteration 400 of 1000: loss=0.0611 " + "l1=0.0604" + "l2=0.000743 f=-0.676 shape=(1, 9000, 1)
logits [[ 5.3332977  -0.70543516  1.9682931  -9.3002825 ]]
Iteration 500 of 1000: loss=0.061 " + "l1=0.0601" + "l2=0.000929 f=-0.676 shape=(1, 9000, 1)
logits [[ 5.316364  -0.6888537  1.9580762 -9.289559 ]]
Iteration 600 of 1000: loss=0.0609 " + "l1=0.0597" + "l2=0.00113 f=-0.676 shape=(1, 9000, 1)
logits [[ 5.3000336 -0.6734857  1.9488236 -9.279294 ]]
Iteration 700 of 1000: loss=0.0607 " + "l1=0.0594" + "l2=0.00126 f=-0.676 shape=(1, 9000, 1)
logits [[ 5.2847204  -0.65954185  1.940775   -9.269613  ]]
Iteration 800 of 1000: loss=0.0606 " + "l1=0.0592" + "l2=0.00145 f=-0.676 shape=(1, 9000, 1)
logits [[ 5.270803  -0.6471604  1.9338354 -9.260199 ]]
Iteration 900 of 1000: loss=0.0605 " + "l1=0.0589" + "l2=0.00155 f=-0.675 shape=(1, 9000, 1)
logits [[ 5.257445   -0.63601226  1.9273993  -9.250763  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.626 " + "l1=0.626" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.443612 -0.813736  2.034764 -9.3569  ]]
Iteration 100 of 1000: loss=0.55 " + "l1=0.511" + "l2=0.0393 f=-0.719 shape=(1, 9000, 1)
logits [[ 4.8106985  -0.29988775  1.715379   -9.100888  ]]
Iteration 200 of 1000: loss=0.498 " + "l1=0.43" + "l2=0.0679 f=-0.758 shape=(1, 9000, 1)
logits [[ 4.3351355   0.03018716  1.5228952  -8.920793  ]]
Iteration 300 of 1000: loss=0.45 " + "l1=0.344" + "l2=0.106 f=-0.801 shape=(1, 9000, 1)
logits [[ 3.7959456   0.35451287  1.3632847  -8.7184305 ]]
Iteration 400 of 1000: loss=0.417 " + "l1=0.286" + "l2=0.131 f=-0.819 shape=(1, 9000, 1)
logits [[ 3.4402926   0.57612884  1.2586131  -8.551564  ]]
Iteration 500 of 1000: loss=0.391 " + "l1=0.237" + "l2=0.154 f=-0.832 shape=(1, 9000, 1)
logits [[ 3.12337    0.7525739  1.1987557 -8.400806 ]]
Iteration 600 of 1000: loss=0.363 " + "l1=0.191" + "l2=0.172 f=-0.843 shape=(1, 9000, 1)
logits [[ 2.8180451   0.90514797  1.1598793  -8.253105  ]]
Iteration 700 of 1000: loss=0.333 " + "l1=0.158" + "l2=0.175 f=-0.845 shape=(1, 9000, 1)
logits [[ 2.587071   1.0112636  1.1344885 -8.113573 ]]
Iteration 800 of 1000: loss=0.307 " + "l1=0.126" + "l2=0.181 f=-0.847 shape=(1, 9000, 1)
logits [[ 2.369544   1.1120205  1.1006271 -7.9693394]]
Iteration 900 of 1000: loss=0.286 " + "l1=0.0981" + "l2=0.187 f=-0.845 shape=(1, 9000, 1)
logits [[ 2.1801567  1.199091   1.0673501 -7.827424 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.26 " + "l1=6.26" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.443612 -0.813736  2.034764 -9.3569  ]]
Iteration 100 of 1000: loss=0.996 " + "l1=0" + "l2=0.996 f=-0.955 shape=(1, 9000, 1)
logits [[ 1.6261538  1.6822374  1.0510323 -8.180599 ]]
Iteration 200 of 1000: loss=0.7 " + "l1=0.0194" + "l2=0.681 f=-0.956 shape=(1, 9000, 1)
logits [[ 1.6460974  1.6266723  1.0298402 -8.124951 ]]
Iteration 300 of 1000: loss=0.578 " + "l1=0.0232" + "l2=0.554 f=-0.955 shape=(1, 9000, 1)
logits [[ 1.6198652  1.5967091  1.0220587 -8.057636 ]]
Iteration 400 of 1000: loss=0.494 " + "l1=0" + "l2=0.494 f=-0.952 shape=(1, 9000, 1)
logits [[ 1.5736716  1.5951384  1.0184234 -7.996041 ]]
Iteration 500 of 1000: loss=0.454 " + "l1=0" + "l2=0.454 f=-0.946 shape=(1, 9000, 1)
logits [[ 1.5518587  1.5828035  1.0051901 -7.92481  ]]
Iteration 600 of 1000: loss=0.424 " + "l1=0" + "l2=0.424 f=-0.941 shape=(1, 9000, 1)
logits [[ 1.529428    1.5764669   0.98793846 -7.8573246 ]]
Iteration 700 of 1000: loss=0.391 " + "l1=0" + "l2=0.391 f=-0.932 shape=(1, 9000, 1)
logits [[ 1.5418763  1.5657139  0.9752496 -7.810305 ]]
Iteration 800 of 1000: loss=0.372 " + "l1=0" + "l2=0.372 f=-0.929 shape=(1, 9000, 1)
logits [[ 1.5226359  1.5608684  0.9665352 -7.766179 ]]
Iteration 900 of 1000: loss=0.371 " + "l1=0" + "l2=0.371 f=-0.932 shape=(1, 9000, 1)
logits [[ 1.4352261  1.5813329  0.9641213 -7.709958 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.44 " + "l1=3.44" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.443612 -0.813736  2.034764 -9.3569  ]]
Iteration 100 of 1000: loss=0.865 " + "l1=0.00179" + "l2=0.863 f=-0.957 shape=(1, 9000, 1)
logits [[ 1.6586002  1.6553531  1.0467964 -8.187796 ]]
Iteration 200 of 1000: loss=0.581 " + "l1=0" + "l2=0.581 f=-0.958 shape=(1, 9000, 1)
logits [[ 1.6020782  1.6242718  1.029456  -8.087242 ]]
Iteration 300 of 1000: loss=0.479 " + "l1=0" + "l2=0.479 f=-0.946 shape=(1, 9000, 1)
logits [[ 1.5901095  1.5931516  1.0180045 -7.9868894]]
Iteration 400 of 1000: loss=0.436 " + "l1=0" + "l2=0.436 f=-0.941 shape=(1, 9000, 1)
logits [[ 1.5414732   1.5906026   0.99693304 -7.892315  ]]
Iteration 500 of 1000: loss=0.391 " + "l1=0" + "l2=0.391 f=-0.929 shape=(1, 9000, 1)
logits [[ 1.5615127   1.5672938   0.97969663 -7.8236523 ]]
Iteration 600 of 1000: loss=0.378 " + "l1=0" + "l2=0.378 f=-0.929 shape=(1, 9000, 1)
logits [[ 1.4790941   1.5791804   0.96895325 -7.7451167 ]]
Iteration 700 of 1000: loss=0.338 " + "l1=0" + "l2=0.338 f=-0.919 shape=(1, 9000, 1)
logits [[ 1.5257593   1.5324497   0.96944326 -7.7021303 ]]
Iteration 800 of 1000: loss=0.325 " + "l1=0" + "l2=0.325 f=-0.91 shape=(1, 9000, 1)
logits [[ 1.4904681  1.5255573  0.9642132 -7.6188774]]
Iteration 900 of 1000: loss=0.31 " + "l1=0" + "l2=0.31 f=-0.899 shape=(1, 9000, 1)
logits [[ 1.4685684  1.5132251  0.9542133 -7.5333815]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.03 " + "l1=2.03" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.443612 -0.813736  2.034764 -9.3569  ]]
Iteration 100 of 1000: loss=0.945 " + "l1=0.327" + "l2=0.619 f=-0.925 shape=(1, 9000, 1)
logits [[ 2.2764285  1.27172    1.118673  -8.365026 ]]
Iteration 200 of 1000: loss=0.536 " + "l1=0" + "l2=0.536 f=-0.962 shape=(1, 9000, 1)
logits [[ 1.5895215  1.5920722  1.0236686 -8.052938 ]]
Iteration 300 of 1000: loss=0.437 " + "l1=0.00187" + "l2=0.436 f=-0.944 shape=(1, 9000, 1)
logits [[ 1.5753024  1.5695395  1.0028768 -7.9219112]]
Iteration 400 of 1000: loss=0.387 " + "l1=0" + "l2=0.387 f=-0.927 shape=(1, 9000, 1)
logits [[ 1.559323   1.5714369  0.9877031 -7.8272324]]
Iteration 500 of 1000: loss=0.354 " + "l1=0" + "l2=0.354 f=-0.912 shape=(1, 9000, 1)
logits [[ 1.5401611   1.5700111   0.97984254 -7.736796  ]]
Iteration 600 of 1000: loss=0.325 " + "l1=0" + "l2=0.325 f=-0.9 shape=(1, 9000, 1)
logits [[ 1.5286381  1.545016   0.9850825 -7.656807 ]]
Iteration 700 of 1000: loss=0.301 " + "l1=0" + "l2=0.301 f=-0.891 shape=(1, 9000, 1)
logits [[ 1.5179766  1.519795   0.9815612 -7.5815215]]
Iteration 800 of 1000: loss=0.285 " + "l1=0" + "l2=0.285 f=-0.882 shape=(1, 9000, 1)
logits [[ 1.4992665  1.5050898  0.978372  -7.5108547]]
Iteration 900 of 1000: loss=0.274 " + "l1=0" + "l2=0.274 f=-0.875 shape=(1, 9000, 1)
logits [[ 1.4572314  1.4973121  0.9686025 -7.421452 ]]
--- 291.79051637649536 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0341 " + "l1=0.0341" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.443612 -0.813736  2.034764 -9.3569  ]]
Iteration 100 of 1000: loss=0.0339 " + "l1=0.0337" + "l2=0.000198 f=-0.677 shape=(1, 9000, 1)
logits [[ 5.410964  -0.8154708  2.0450697 -9.346843 ]]
Iteration 200 of 1000: loss=0.0338 " + "l1=0.0336" + "l2=0.00017 f=-0.677 shape=(1, 9000, 1)
logits [[ 5.4082975  -0.81587505  2.0463383  -9.345868  ]]
Iteration 300 of 1000: loss=0.0338 " + "l1=0.0335" + "l2=0.000208 f=-0.677 shape=(1, 9000, 1)
logits [[ 5.403235  -0.8166344  2.048588  -9.344523 ]]
Iteration 400 of 1000: loss=0.0337 " + "l1=0.0335" + "l2=0.000259 f=-0.678 shape=(1, 9000, 1)
logits [[ 5.397706  -0.8173349  2.050893  -9.34297  ]]
Iteration 500 of 1000: loss=0.0337 " + "l1=0.0334" + "l2=0.000308 f=-0.679 shape=(1, 9000, 1)
logits [[ 5.3922634 -0.8181225  2.0531757 -9.341409 ]]
Iteration 600 of 1000: loss=0.0337 " + "l1=0.0333" + "l2=0.000359 f=-0.679 shape=(1, 9000, 1)
logits [[ 5.3869395 -0.8189448  2.055406  -9.339867 ]]
Iteration 700 of 1000: loss=0.0338 " + "l1=0.0332" + "l2=0.000516 f=-0.68 shape=(1, 9000, 1)
logits [[ 5.38178   -0.819764   2.0575366 -9.338346 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.341 " + "l1=0.341" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.443612 -0.813736  2.034764 -9.3569  ]]
Iteration 100 of 1000: loss=0.319 " + "l1=0.307" + "l2=0.012 f=-0.705 shape=(1, 9000, 1)
logits [[ 5.1833525 -0.8225608  2.112202  -9.294029 ]]
Iteration 200 of 1000: loss=0.31 " + "l1=0.294" + "l2=0.0165 f=-0.716 shape=(1, 9000, 1)
logits [[ 5.0764446  -0.82438797  2.1401167  -9.25554   ]]
Iteration 300 of 1000: loss=0.302 " + "l1=0.281" + "l2=0.0208 f=-0.725 shape=(1, 9000, 1)
logits [[ 4.9732013 -0.8283021  2.1641304 -9.21031  ]]
Iteration 400 of 1000: loss=0.294 " + "l1=0.269" + "l2=0.0253 f=-0.734 shape=(1, 9000, 1)
logits [[ 4.857108  -0.8101333  2.170719  -9.153022 ]]
Iteration 500 of 1000: loss=0.287 " + "l1=0.259" + "l2=0.0285 f=-0.739 shape=(1, 9000, 1)
logits [[ 4.7647967 -0.7981915  2.1788425 -9.100012 ]]
Iteration 600 of 1000: loss=0.281 " + "l1=0.249" + "l2=0.0314 f=-0.741 shape=(1, 9000, 1)
logits [[ 4.68083   -0.7915396  2.1884894 -9.041088 ]]
Iteration 700 of 1000: loss=0.274 " + "l1=0.24" + "l2=0.0345 f=-0.744 shape=(1, 9000, 1)
logits [[ 4.5886216 -0.7789992  2.1908472 -8.975229 ]]
Iteration 800 of 1000: loss=0.268 " + "l1=0.23" + "l2=0.0374 f=-0.745 shape=(1, 9000, 1)
logits [[ 4.491592  -0.766033   2.1900077 -8.895767 ]]
Iteration 900 of 1000: loss=0.26 " + "l1=0.219" + "l2=0.0408 f=-0.748 shape=(1, 9000, 1)
logits [[ 4.3775215 -0.749546   2.184757  -8.8031645]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.41 " + "l1=3.41" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.443612 -0.813736  2.034764 -9.3569  ]]
Iteration 100 of 1000: loss=0.865 " + "l1=0.0192" + "l2=0.846 f=-0.93 shape=(1, 9000, 1)
logits [[ 2.316465   0.0435474  2.2972517 -8.376765 ]]
Iteration 200 of 1000: loss=0.58 " + "l1=0" + "l2=0.58 f=-0.916 shape=(1, 9000, 1)
logits [[ 2.2553196   0.01772061  2.256712   -8.192776  ]]
Iteration 300 of 1000: loss=0.477 " + "l1=0.00829" + "l2=0.468 f=-0.911 shape=(1, 9000, 1)
logits [[ 2.2434802e+00 -4.7946814e-03  2.2351947e+00 -8.1160603e+00]]
Iteration 400 of 1000: loss=0.422 " + "l1=0" + "l2=0.422 f=-0.914 shape=(1, 9000, 1)
logits [[ 2.1898243  -0.02032934  2.2339735  -8.06128   ]]
Iteration 500 of 1000: loss=0.381 " + "l1=0" + "l2=0.381 f=-0.911 shape=(1, 9000, 1)
logits [[ 2.190339  -0.0523528  2.2249663 -8.005472 ]]
Iteration 600 of 1000: loss=0.339 " + "l1=0" + "l2=0.339 f=-0.9 shape=(1, 9000, 1)
logits [[ 2.2122881  -0.08488955  2.2158775  -7.942159  ]]
Iteration 700 of 1000: loss=0.314 " + "l1=0.00402" + "l2=0.31 f=-0.888 shape=(1, 9000, 1)
logits [[ 2.2181814  -0.12420603  2.2141626  -7.858809  ]]
Iteration 800 of 1000: loss=0.286 " + "l1=0" + "l2=0.286 f=-0.863 shape=(1, 9000, 1)
logits [[ 2.2595427  -0.21529882  2.2647476  -7.7617135 ]]
Iteration 900 of 1000: loss=0.268 " + "l1=0" + "l2=0.268 f=-0.843 shape=(1, 9000, 1)
logits [[ 2.2881489 -0.2959391  2.3109453 -7.674745 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.87 " + "l1=1.87" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.443612 -0.813736  2.034764 -9.3569  ]]
Iteration 100 of 1000: loss=0.971 " + "l1=0.411" + "l2=0.561 f=-0.915 shape=(1, 9000, 1)
logits [[ 3.0082319  -0.23310402  2.261569   -8.697275  ]]
Iteration 200 of 1000: loss=0.493 " + "l1=0.00404" + "l2=0.489 f=-0.942 shape=(1, 9000, 1)
logits [[ 2.2537198e+00  8.1695057e-03  2.2463725e+00 -8.2744303e+00]]
Iteration 300 of 1000: loss=0.389 " + "l1=0.00201" + "l2=0.387 f=-0.926 shape=(1, 9000, 1)
logits [[ 2.2304435e+00 -4.4633541e-03  2.2267935e+00 -8.1565027e+00]]
Iteration 400 of 1000: loss=0.341 " + "l1=0" + "l2=0.341 f=-0.915 shape=(1, 9000, 1)
logits [[ 2.1970048  -0.02499702  2.227792   -8.060275  ]]
Iteration 500 of 1000: loss=0.301 " + "l1=0.0011" + "l2=0.299 f=-0.901 shape=(1, 9000, 1)
logits [[ 2.2149239  -0.05726844  2.2129164  -7.974055  ]]
Iteration 600 of 1000: loss=0.277 " + "l1=0" + "l2=0.277 f=-0.89 shape=(1, 9000, 1)
logits [[ 2.2057812  -0.08987749  2.2099576  -7.8861    ]]
Iteration 700 of 1000: loss=0.257 " + "l1=0" + "l2=0.257 f=-0.877 shape=(1, 9000, 1)
logits [[ 2.2030532 -0.1331304  2.2105298 -7.788558 ]]
Iteration 800 of 1000: loss=0.246 " + "l1=0" + "l2=0.246 f=-0.86 shape=(1, 9000, 1)
logits [[ 2.192938   -0.20776051  2.2420006  -7.6660566 ]]
Iteration 900 of 1000: loss=0.223 " + "l1=0" + "l2=0.223 f=-0.834 shape=(1, 9000, 1)
logits [[ 2.2625473  -0.30481458  2.2777188  -7.571645  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.11 " + "l1=1.11" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.443612 -0.813736  2.034764 -9.3569  ]]
Iteration 100 of 1000: loss=0.852 " + "l1=0.695" + "l2=0.158 f=-0.802 shape=(1, 9000, 1)
logits [[ 4.357782  -0.7104292  2.2207813 -9.076196 ]]
Iteration 200 of 1000: loss=0.641 " + "l1=0.331" + "l2=0.31 f=-0.891 shape=(1, 9000, 1)
logits [[ 3.2040217  -0.26778454  2.1868398  -8.68626   ]]
Iteration 300 of 1000: loss=0.442 " + "l1=0.0116" + "l2=0.43 f=-0.93 shape=(1, 9000, 1)
logits [[ 2.2592373e+00  4.7629792e-04  2.2236369e+00 -8.2035971e+00]]
Iteration 400 of 1000: loss=0.334 " + "l1=0.000767" + "l2=0.333 f=-0.909 shape=(1, 9000, 1)
logits [[ 2.2179208  -0.02871178  2.2155592  -8.04179   ]]
Iteration 500 of 1000: loss=0.29 " + "l1=0" + "l2=0.29 f=-0.895 shape=(1, 9000, 1)
logits [[ 2.2137992  -0.06423967  2.2149029  -7.9439726 ]]
Iteration 600 of 1000: loss=0.264 " + "l1=0.00443" + "l2=0.259 f=-0.883 shape=(1, 9000, 1)
logits [[ 2.2226143  -0.10915063  2.2089708  -7.852983  ]]
Iteration 700 of 1000: loss=0.243 " + "l1=0.00397" + "l2=0.239 f=-0.87 shape=(1, 9000, 1)
logits [[ 2.2181482  -0.14515387  2.2059333  -7.7576985 ]]
Iteration 800 of 1000: loss=0.224 " + "l1=0" + "l2=0.224 f=-0.854 shape=(1, 9000, 1)
logits [[ 2.2180457  -0.21036652  2.2224212  -7.646728  ]]
Iteration 900 of 1000: loss=0.21 " + "l1=0.000905" + "l2=0.209 f=-0.828 shape=(1, 9000, 1)
logits [[ 2.268284   -0.31101766  2.2654984  -7.536371  ]]
--- 276.70037841796875 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.148 " + "l1=0.148" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.443612 -0.813736  2.034764 -9.3569  ]]
Iteration 100 of 1000: loss=0.147 " + "l1=0.147" + "l2=0.000427 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.381383  -0.7880697  2.0084317 -9.291822 ]]
Iteration 200 of 1000: loss=0.147 " + "l1=0.146" + "l2=0.000476 f=-0.672 shape=(1, 9000, 1)
logits [[ 5.366503   -0.78029937  2.0005982  -9.274324  ]]
Iteration 300 of 1000: loss=0.147 " + "l1=0.146" + "l2=0.000624 f=-0.671 shape=(1, 9000, 1)
logits [[ 5.3486686 -0.7712147  1.991386  -9.253233 ]]
Iteration 400 of 1000: loss=0.146 " + "l1=0.146" + "l2=0.000772 f=-0.67 shape=(1, 9000, 1)
logits [[ 5.329873  -0.7616098  1.9818475 -9.230983 ]]
Iteration 500 of 1000: loss=0.146 " + "l1=0.145" + "l2=0.00093 f=-0.669 shape=(1, 9000, 1)
logits [[ 5.3117323  -0.75263244  1.9728227  -9.209073  ]]
Iteration 600 of 1000: loss=0.146 " + "l1=0.145" + "l2=0.00124 f=-0.668 shape=(1, 9000, 1)
logits [[ 5.2943115 -0.744016   1.9642698 -9.187816 ]]
Iteration 700 of 1000: loss=0.146 " + "l1=0.144" + "l2=0.00133 f=-0.667 shape=(1, 9000, 1)
logits [[ 5.2766805  -0.73520964  1.9558678  -9.166968  ]]
Iteration 800 of 1000: loss=0.146 " + "l1=0.144" + "l2=0.00153 f=-0.667 shape=(1, 9000, 1)
logits [[ 5.25932   -0.7267452  1.9478279 -9.1467   ]]
Iteration 900 of 1000: loss=0.145 " + "l1=0.144" + "l2=0.00171 f=-0.666 shape=(1, 9000, 1)
logits [[ 5.2416353 -0.7180818  1.9395764 -9.126088 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.48 " + "l1=1.48" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.443612 -0.813736  2.034764 -9.3569  ]]
Iteration 100 of 1000: loss=1.4 " + "l1=1.36" + "l2=0.0377 f=-0.676 shape=(1, 9000, 1)
logits [[ 4.8392053 -0.5549138  1.7877413 -8.774277 ]]
Iteration 200 of 1000: loss=1.35 " + "l1=1.29" + "l2=0.0607 f=-0.67 shape=(1, 9000, 1)
logits [[ 4.4644413  -0.39845657  1.6472108  -8.393955  ]]
Iteration 300 of 1000: loss=1.29 " + "l1=1.2" + "l2=0.0912 f=-0.672 shape=(1, 9000, 1)
logits [[ 4.027167   -0.21699221  1.491455   -7.988886  ]]
Iteration 400 of 1000: loss=1.25 " + "l1=1.13" + "l2=0.118 f=-0.666 shape=(1, 9000, 1)
logits [[ 3.662728   -0.07945145  1.3683167  -7.6163163 ]]
Iteration 500 of 1000: loss=1.2 " + "l1=1.05" + "l2=0.145 f=-0.662 shape=(1, 9000, 1)
logits [[ 3.2795446  0.0498373  1.2577684 -7.235283 ]]
Iteration 600 of 1000: loss=1.14 " + "l1=0.977" + "l2=0.166 f=-0.657 shape=(1, 9000, 1)
logits [[ 2.9072812  0.1684071  1.1560549 -6.859179 ]]
Iteration 700 of 1000: loss=1.08 " + "l1=0.893" + "l2=0.189 f=-0.642 shape=(1, 9000, 1)
logits [[ 2.5315945  0.2317174  1.0689676 -6.39912  ]]
Iteration 800 of 1000: loss=1.02 " + "l1=0.807" + "l2=0.212 f=-0.623 shape=(1, 9000, 1)
logits [[ 2.1521204   0.31292003  0.9635193  -5.920447  ]]
Iteration 900 of 1000: loss=0.955 " + "l1=0.724" + "l2=0.231 f=-0.608 shape=(1, 9000, 1)
logits [[ 1.7836478   0.40186155  0.8408183  -5.456868  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=14.8 " + "l1=14.8" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.443612 -0.813736  2.034764 -9.3569  ]]
Iteration 100 of 1000: loss=7.86 " + "l1=5.6" + "l2=2.26 f=-0.605 shape=(1, 9000, 1)
logits [[ 0.80683476  0.7703167   0.7966365  -4.794624  ]]
Iteration 200 of 1000: loss=5.35 " + "l1=2.81" + "l2=2.54 f=-0.433 shape=(1, 9000, 1)
logits [[ 0.27190164  0.2706568   0.26460218 -2.537955  ]]
Iteration 300 of 1000: loss=3.32 " + "l1=0.176" + "l2=3.14 f=-0.313 shape=(1, 9000, 1)
logits [[-0.54202896 -0.18535274 -0.17536154 -0.35105556]]
Iteration 400 of 1000: loss=2.29 " + "l1=0" + "l2=2.29 f=-0.296 shape=(1, 9000, 1)
logits [[-0.44823936 -0.29868394 -0.22524948 -0.21355987]]
Iteration 500 of 1000: loss=1.86 " + "l1=0" + "l2=1.86 f=-0.298 shape=(1, 9000, 1)
logits [[-0.36656514 -0.27773672 -0.27412426 -0.27374855]]
Iteration 600 of 1000: loss=1.63 " + "l1=0" + "l2=1.63 f=-0.291 shape=(1, 9000, 1)
logits [[-0.31590924 -0.3439738  -0.25556985 -0.24842548]]
Iteration 700 of 1000: loss=1.44 " + "l1=0" + "l2=1.44 f=-0.28 shape=(1, 9000, 1)
logits [[-0.27230725 -0.4109872  -0.21930355 -0.21883783]]
Iteration 800 of 1000: loss=1.29 " + "l1=0" + "l2=1.29 f=-0.272 shape=(1, 9000, 1)
logits [[-0.21194114 -0.47628993 -0.20066914 -0.19719025]]
Iteration 900 of 1000: loss=1.18 " + "l1=0" + "l2=1.18 f=-0.272 shape=(1, 9000, 1)
logits [[-0.19534352 -0.51085097 -0.19289693 -0.18876761]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=8.14 " + "l1=8.14" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.443612 -0.813736  2.034764 -9.3569  ]]
Iteration 100 of 1000: loss=5.28 " + "l1=3.82" + "l2=1.46 f=-0.737 shape=(1, 9000, 1)
logits [[ 1.0021708  0.9754019  1.0105742 -5.934658 ]]
Iteration 200 of 1000: loss=4.03 " + "l1=2.79" + "l2=1.24 f=-0.597 shape=(1, 9000, 1)
logits [[ 0.67169404  0.67367005  0.66939265 -4.403528  ]]
Iteration 300 of 1000: loss=3.18 " + "l1=1.78" + "l2=1.4 f=-0.49 shape=(1, 9000, 1)
logits [[ 0.2894922   0.3188673   0.33243454 -2.902791  ]]
Iteration 400 of 1000: loss=2.47 " + "l1=0.943" + "l2=1.53 f=-0.386 shape=(1, 9000, 1)
logits [[ 0.02733965  0.04859722  0.04745413 -1.666446  ]]
Iteration 500 of 1000: loss=1.75 " + "l1=0.0809" + "l2=1.67 f=-0.298 shape=(1, 9000, 1)
logits [[-0.4152482  -0.22255865 -0.20445292 -0.3514693 ]]
Iteration 600 of 1000: loss=1.35 " + "l1=0" + "l2=1.35 f=-0.301 shape=(1, 9000, 1)
logits [[-0.43643698 -0.29507852 -0.24141774 -0.23280877]]
Iteration 700 of 1000: loss=1.14 " + "l1=0" + "l2=1.14 f=-0.314 shape=(1, 9000, 1)
logits [[-0.35192034 -0.36774954 -0.2703067  -0.26481265]]
Iteration 800 of 1000: loss=1 " + "l1=0" + "l2=1 f=-0.312 shape=(1, 9000, 1)
logits [[-0.30581734 -0.41511762 -0.27111435 -0.25556424]]
Iteration 900 of 1000: loss=0.909 " + "l1=0" + "l2=0.909 f=-0.308 shape=(1, 9000, 1)
logits [[-0.2874528  -0.44745022 -0.24999586 -0.24572027]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.81 " + "l1=4.81" + "l2=0 f=-0.673 shape=(1, 9000, 1)
logits [[ 5.443612 -0.813736  2.034764 -9.3569  ]]
Iteration 100 of 1000: loss=3.79 " + "l1=3.26" + "l2=0.525 f=-0.707 shape=(1, 9000, 1)
logits [[ 2.7998474   0.30718967  1.3048424  -7.2417755 ]]
Iteration 200 of 1000: loss=3.05 " + "l1=2.21" + "l2=0.844 f=-0.719 shape=(1, 9000, 1)
logits [[ 1.0619773   0.81005335  0.981222   -5.730108  ]]
Iteration 300 of 1000: loss=2.57 " + "l1=1.76" + "l2=0.806 f=-0.634 shape=(1, 9000, 1)
logits [[ 0.7225903  0.7136278  0.7212623 -4.692224 ]]
Iteration 400 of 1000: loss=2.21 " + "l1=1.37" + "l2=0.838 f=-0.557 shape=(1, 9000, 1)
logits [[ 0.4890339   0.49769694  0.5040438  -3.7204866 ]]
Iteration 500 of 1000: loss=1.87 " + "l1=0.986" + "l2=0.886 f=-0.474 shape=(1, 9000, 1)
logits [[ 0.287043    0.27363616  0.28771582 -2.745686  ]]
Iteration 600 of 1000: loss=1.5 " + "l1=0.59" + "l2=0.912 f=-0.409 shape=(1, 9000, 1)
logits [[ 0.00598004  0.05537974  0.05806104 -1.7563292 ]]
Iteration 700 of 1000: loss=1.19 " + "l1=0.254" + "l2=0.941 f=-0.351 shape=(1, 9000, 1)
logits [[-0.21783853 -0.13972317 -0.13240014 -0.91469014]]
Iteration 800 of 1000: loss=0.934 " + "l1=0.0122" + "l2=0.922 f=-0.312 shape=(1, 9000, 1)
logits [[-0.42742753 -0.2679844  -0.25694415 -0.29453236]]
Iteration 900 of 1000: loss=0.787 " + "l1=0" + "l2=0.787 f=-0.305 shape=(1, 9000, 1)
logits [[-0.44303936 -0.2583009  -0.25927377 -0.25803146]]
--- 294.7483274936676 seconds ---
Adv result:3
Loading record A05268
(1, 18000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0752 " + "l1=0.0752" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 4.091907  -3.4310136  3.4696298 -5.9611154]]
Iteration 100 of 1000: loss=0.0745 " + "l1=0.0741" + "l2=0.000389 f=-0.454 shape=(1, 9000, 1)
logits [[ 4.0205626 -3.3907964  3.4336672 -5.8798647]]
Iteration 200 of 1000: loss=0.0743 " + "l1=0.0739" + "l2=0.0004 f=-0.453 shape=(1, 9000, 1)
logits [[ 4.00495   -3.3809419  3.4248838 -5.862143 ]]
Iteration 300 of 1000: loss=0.0741 " + "l1=0.0736" + "l2=0.000491 f=-0.452 shape=(1, 9000, 1)
logits [[ 3.9861465 -3.370187   3.4153242 -5.840556 ]]
Iteration 400 of 1000: loss=0.0738 " + "l1=0.0732" + "l2=0.000567 f=-0.451 shape=(1, 9000, 1)
logits [[ 3.9660017 -3.3587554  3.4050763 -5.817427 ]]
Iteration 500 of 1000: loss=0.0736 " + "l1=0.0729" + "l2=0.000699 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.9456716 -3.3474438  3.3945909 -5.7939506]]
Iteration 600 of 1000: loss=0.0734 " + "l1=0.0726" + "l2=0.000811 f=-0.449 shape=(1, 9000, 1)
logits [[ 3.9248931 -3.3361313  3.3837402 -5.769641 ]]
Iteration 700 of 1000: loss=0.0733 " + "l1=0.0723" + "l2=0.00101 f=-0.448 shape=(1, 9000, 1)
logits [[ 3.9035053 -3.3245642  3.3725429 -5.7448215]]
Iteration 800 of 1000: loss=0.0731 " + "l1=0.072" + "l2=0.00116 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.8820715 -3.3131275  3.3613486 -5.7198224]]
Iteration 900 of 1000: loss=0.0729 " + "l1=0.0716" + "l2=0.00125 f=-0.446 shape=(1, 9000, 1)
logits [[ 3.8614411 -3.3025336  3.3509288 -5.695799 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.752 " + "l1=0.752" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 4.091907  -3.4310136  3.4696298 -5.9611154]]
Iteration 100 of 1000: loss=0.693 " + "l1=0.666" + "l2=0.0268 f=-0.435 shape=(1, 9000, 1)
logits [[ 3.5273936 -3.1336114  3.1900177 -5.322337 ]]
Iteration 200 of 1000: loss=0.662 " + "l1=0.621" + "l2=0.0406 f=-0.424 shape=(1, 9000, 1)
logits [[ 3.22581   -2.9827397  3.0466533 -4.9849453]]
Iteration 300 of 1000: loss=0.633 " + "l1=0.587" + "l2=0.0463 f=-0.41 shape=(1, 9000, 1)
logits [[ 2.9998007 -2.8693917  2.9437585 -4.7146893]]
Iteration 400 of 1000: loss=0.609 " + "l1=0.562" + "l2=0.0467 f=-0.396 shape=(1, 9000, 1)
logits [[ 2.8515782 -2.7686882  2.8507094 -4.5192904]]
Iteration 500 of 1000: loss=0.591 " + "l1=0.544" + "l2=0.0469 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.7626586 -2.6791682  2.7641668 -4.398797 ]]
Iteration 600 of 1000: loss=0.575 " + "l1=0.525" + "l2=0.0498 f=-0.38 shape=(1, 9000, 1)
logits [[ 2.664062  -2.583905   2.6651597 -4.2633643]]
Iteration 700 of 1000: loss=0.558 " + "l1=0.505" + "l2=0.0536 f=-0.374 shape=(1, 9000, 1)
logits [[ 2.5599277 -2.4850433  2.5601778 -4.1297746]]
Iteration 800 of 1000: loss=0.543 " + "l1=0.484" + "l2=0.0585 f=-0.372 shape=(1, 9000, 1)
logits [[ 2.4492006 -2.3910995  2.4488003 -3.9954598]]
Iteration 900 of 1000: loss=0.528 " + "l1=0.464" + "l2=0.0645 f=-0.374 shape=(1, 9000, 1)
logits [[ 2.3332567 -2.301935   2.3365147 -3.8623981]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.52 " + "l1=7.52" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 4.091907  -3.4310136  3.4696298 -5.9611154]]
Iteration 100 of 1000: loss=4.63 " + "l1=3.74" + "l2=0.895 f=-0.331 shape=(1, 9000, 1)
logits [[ 1.854411  -1.8678435  1.8699963 -3.1795142]]
Iteration 200 of 1000: loss=3.49 " + "l1=2.23" + "l2=1.25 f=-0.255 shape=(1, 9000, 1)
logits [[ 1.0544246 -1.170723   1.063995  -1.9670777]]
Iteration 300 of 1000: loss=2.6 " + "l1=1.29" + "l2=1.31 f=-0.224 shape=(1, 9000, 1)
logits [[ 0.5345225 -0.7419211  0.5508329 -1.2393521]]
Iteration 400 of 1000: loss=2.09 " + "l1=0.837" + "l2=1.26 f=-0.199 shape=(1, 9000, 1)
logits [[ 0.30563563 -0.52429295  0.31302443 -0.88965815]]
Iteration 500 of 1000: loss=1.82 " + "l1=0.564" + "l2=1.26 f=-0.178 shape=(1, 9000, 1)
logits [[ 0.15502644 -0.39959353  0.16482766 -0.63423103]]
Iteration 600 of 1000: loss=1.61 " + "l1=0.385" + "l2=1.22 f=-0.165 shape=(1, 9000, 1)
logits [[ 0.02702455 -0.3352821   0.05015153 -0.40142947]]
Iteration 700 of 1000: loss=1.42 " + "l1=0.266" + "l2=1.15 f=-0.163 shape=(1, 9000, 1)
logits [[-0.08573756 -0.30723697 -0.04154616 -0.21758372]]
Iteration 800 of 1000: loss=1.29 " + "l1=0.152" + "l2=1.14 f=-0.173 shape=(1, 9000, 1)
logits [[-0.2120854  -0.25396505 -0.10234245 -0.12362964]]
Iteration 900 of 1000: loss=1.21 " + "l1=0.125" + "l2=1.09 f=-0.183 shape=(1, 9000, 1)
logits [[-0.25648338 -0.23819228 -0.11314066 -0.1246355 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=75.2 " + "l1=75.2" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 4.091907  -3.4310136  3.4696298 -5.9611154]]
Iteration 100 of 1000: loss=10.7 " + "l1=0.144" + "l2=10.6 f=-0.138 shape=(1, 9000, 1)
logits [[-0.15584302 -0.08138318 -0.06693818 -0.24664024]]
Iteration 200 of 1000: loss=7.08 " + "l1=0.0315" + "l2=7.04 f=-0.14 shape=(1, 9000, 1)
logits [[-0.14133497 -0.03291569 -0.02976272 -0.35538247]]
Iteration 300 of 1000: loss=5.87 " + "l1=0" + "l2=5.87 f=-0.149 shape=(1, 9000, 1)
logits [[-0.05039157 -0.02646068 -0.04582869 -0.47184592]]
Iteration 400 of 1000: loss=5.18 " + "l1=0" + "l2=5.18 f=-0.155 shape=(1, 9000, 1)
logits [[-0.1337438  -0.00542693 -0.02473585 -0.45795953]]
Iteration 500 of 1000: loss=4.62 " + "l1=0.0227" + "l2=4.6 f=-0.152 shape=(1, 9000, 1)
logits [[-0.03867383 -0.02553174 -0.02325681 -0.51990414]]
Iteration 600 of 1000: loss=4.19 " + "l1=0" + "l2=4.19 f=-0.149 shape=(1, 9000, 1)
logits [[-0.02519287 -0.02198906 -0.02881509 -0.52026683]]
Iteration 700 of 1000: loss=3.87 " + "l1=0" + "l2=3.87 f=-0.147 shape=(1, 9000, 1)
logits [[-0.0542517  -0.01392937 -0.02943133 -0.49234223]]
Iteration 800 of 1000: loss=3.56 " + "l1=0" + "l2=3.56 f=-0.145 shape=(1, 9000, 1)
logits [[-0.15112025 -0.000718   -0.0019797  -0.42594832]]
Iteration 900 of 1000: loss=3.28 " + "l1=0" + "l2=3.28 f=-0.141 shape=(1, 9000, 1)
logits [[-0.10964765 -0.00235352 -0.00933956 -0.44325382]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=41.4 " + "l1=41.4" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 4.091907  -3.4310136  3.4696298 -5.9611154]]
Iteration 100 of 1000: loss=9.6 " + "l1=1.17" + "l2=8.43 f=-0.152 shape=(1, 9000, 1)
logits [[-0.03233621 -0.18207777  0.03007824 -0.42229253]]
Iteration 200 of 1000: loss=5.81 " + "l1=0" + "l2=5.81 f=-0.143 shape=(1, 9000, 1)
logits [[-0.12472603 -0.02357812 -0.02732465 -0.39756995]]
Iteration 300 of 1000: loss=4.75 " + "l1=0.0084" + "l2=4.75 f=-0.146 shape=(1, 9000, 1)
logits [[-0.10152194 -0.01435192 -0.01282445 -0.45536545]]
Iteration 400 of 1000: loss=4.14 " + "l1=0" + "l2=4.14 f=-0.145 shape=(1, 9000, 1)
logits [[-0.06820014 -0.01144585 -0.0299721  -0.46908942]]
Iteration 500 of 1000: loss=3.61 " + "l1=0" + "l2=3.61 f=-0.145 shape=(1, 9000, 1)
logits [[-0.05603749 -0.0152872  -0.01693287 -0.49084067]]
Iteration 600 of 1000: loss=3.19 " + "l1=0" + "l2=3.19 f=-0.144 shape=(1, 9000, 1)
logits [[-0.07651711 -0.0071748  -0.01223422 -0.4783604 ]]
Iteration 700 of 1000: loss=2.86 " + "l1=0.0376" + "l2=2.82 f=-0.139 shape=(1, 9000, 1)
logits [[-0.09904593 -0.00979314 -0.00296333 -0.4434093 ]]
Iteration 800 of 1000: loss=2.56 " + "l1=0" + "l2=2.56 f=-0.134 shape=(1, 9000, 1)
logits [[-0.11318399  0.00513703 -0.01535824 -0.41155937]]
Iteration 900 of 1000: loss=2.33 " + "l1=0" + "l2=2.33 f=-0.128 shape=(1, 9000, 1)
logits [[-0.09471423 -0.00651259 -0.00980361 -0.39897975]]
--- 296.81049942970276 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00622 " + "l1=0.00622" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 4.091907  -3.4310136  3.4696298 -5.9611154]]
Iteration 100 of 1000: loss=0.00599 " + "l1=0.00581" + "l2=0.000184 f=-0.458 shape=(1, 9000, 1)
logits [[ 4.051823  -3.4284596  3.4708774 -5.9247656]]
Iteration 200 of 1000: loss=0.00592 " + "l1=0.00576" + "l2=0.000155 f=-0.458 shape=(1, 9000, 1)
logits [[ 4.04903   -3.429379   3.4725761 -5.9236794]]
Iteration 300 of 1000: loss=0.00586 " + "l1=0.00568" + "l2=0.000186 f=-0.458 shape=(1, 9000, 1)
logits [[ 4.0419354 -3.4297795  3.4741251 -5.9183564]]
Iteration 400 of 1000: loss=0.00583 " + "l1=0.00558" + "l2=0.000244 f=-0.458 shape=(1, 9000, 1)
logits [[ 4.03379   -3.4300199  3.475507  -5.9118834]]
Iteration 500 of 1000: loss=0.0058 " + "l1=0.00548" + "l2=0.000319 f=-0.458 shape=(1, 9000, 1)
logits [[ 4.025136  -3.430101   3.476692  -5.9049177]]
Iteration 600 of 1000: loss=0.00579 " + "l1=0.00538" + "l2=0.00041 f=-0.458 shape=(1, 9000, 1)
logits [[ 4.016157  -3.4300663  3.4777036 -5.8975654]]
Iteration 700 of 1000: loss=0.00576 " + "l1=0.00529" + "l2=0.000477 f=-0.459 shape=(1, 9000, 1)
logits [[ 4.0072393 -3.4300086  3.478664  -5.890354 ]]
Iteration 800 of 1000: loss=0.0057 " + "l1=0.00519" + "l2=0.000509 f=-0.459 shape=(1, 9000, 1)
logits [[ 3.9988246 -3.4301195  3.4795196 -5.8834424]]
Iteration 900 of 1000: loss=0.00578 " + "l1=0.0051" + "l2=0.000682 f=-0.459 shape=(1, 9000, 1)
logits [[ 3.9901133 -3.4300337  3.480174  -5.876237 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0622 " + "l1=0.0622" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 4.091907  -3.4310136  3.4696298 -5.9611154]]
Iteration 100 of 1000: loss=0.0423 " + "l1=0.0329" + "l2=0.00941 f=-0.461 shape=(1, 9000, 1)
logits [[ 3.8144944 -3.4330957  3.4857812 -5.7130113]]
Iteration 200 of 1000: loss=0.0318 " + "l1=0.0188" + "l2=0.0129 f=-0.466 shape=(1, 9000, 1)
logits [[ 3.6863368 -3.4412086  3.497969  -5.60573  ]]
Iteration 300 of 1000: loss=0.021 " + "l1=0.00384" + "l2=0.0171 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.556678  -3.452979   3.5182443 -5.498649 ]]
Iteration 400 of 1000: loss=0.0137 " + "l1=0.000249" + "l2=0.0134 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.5306363 -3.4576423  3.528147  -5.4785237]]
Iteration 500 of 1000: loss=0.011 " + "l1=0.000373" + "l2=0.0106 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.5348577 -3.4579868  3.5311325 -5.4832683]]
Iteration 600 of 1000: loss=0.00936 " + "l1=0" + "l2=0.00936 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.5306425 -3.4581234  3.5325243 -5.4804068]]
Iteration 700 of 1000: loss=0.00853 " + "l1=0" + "l2=0.00853 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.5299907 -3.4565737  3.532221  -5.4800496]]
Iteration 800 of 1000: loss=0.00732 " + "l1=0" + "l2=0.00732 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.5278265 -3.454523   3.5314078 -5.4801626]]
Iteration 900 of 1000: loss=0.00672 " + "l1=0" + "l2=0.00672 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.5266275 -3.4522045  3.5301855 -5.481451 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0342 " + "l1=0.0342" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 4.091907  -3.4310136  3.4696298 -5.9611154]]
Iteration 100 of 1000: loss=0.0282 " + "l1=0.0253" + "l2=0.00289 f=-0.459 shape=(1, 9000, 1)
logits [[ 3.9385138 -3.4300516  3.4788415 -5.8235855]]
Iteration 200 of 1000: loss=0.0254 " + "l1=0.0215" + "l2=0.00388 f=-0.46 shape=(1, 9000, 1)
logits [[ 3.876247  -3.4320285  3.485188  -5.7704062]]
Iteration 300 of 1000: loss=0.0226 " + "l1=0.0176" + "l2=0.00496 f=-0.462 shape=(1, 9000, 1)
logits [[ 3.8101509 -3.4335368  3.4898715 -5.7130895]]
Iteration 400 of 1000: loss=0.0196 " + "l1=0.0135" + "l2=0.00606 f=-0.464 shape=(1, 9000, 1)
logits [[ 3.7422533 -3.4386525  3.4964728 -5.655914 ]]
Iteration 500 of 1000: loss=0.0168 " + "l1=0.00977" + "l2=0.00707 f=-0.467 shape=(1, 9000, 1)
logits [[ 3.681629 -3.444476  3.503962 -5.607445]]
Iteration 600 of 1000: loss=0.0142 " + "l1=0.00611" + "l2=0.00814 f=-0.468 shape=(1, 9000, 1)
logits [[ 3.6232195 -3.4482954  3.5121913 -5.5603843]]
Iteration 700 of 1000: loss=0.0116 " + "l1=0.00231" + "l2=0.0093 f=-0.47 shape=(1, 9000, 1)
logits [[ 3.5643125 -3.4548087  3.5222266 -5.510641 ]]
Iteration 800 of 1000: loss=0.00897 " + "l1=0" + "l2=0.00897 f=-0.47 shape=(1, 9000, 1)
logits [[ 3.5300212 -3.4560742  3.530325  -5.48368  ]]
Iteration 900 of 1000: loss=0.00793 " + "l1=0" + "l2=0.00793 f=-0.47 shape=(1, 9000, 1)
logits [[ 3.528928  -3.4538193  3.5306222 -5.4845433]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0202 " + "l1=0.0202" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 4.091907  -3.4310136  3.4696298 -5.9611154]]
Iteration 100 of 1000: loss=0.018 " + "l1=0.0169" + "l2=0.00112 f=-0.458 shape=(1, 9000, 1)
logits [[ 3.9950428 -3.4281693  3.474847  -5.8742156]]
Iteration 200 of 1000: loss=0.0172 " + "l1=0.0159" + "l2=0.00133 f=-0.459 shape=(1, 9000, 1)
logits [[ 3.9672654 -3.4298851  3.479335  -5.851698 ]]
Iteration 300 of 1000: loss=0.0163 " + "l1=0.0146" + "l2=0.00168 f=-0.459 shape=(1, 9000, 1)
logits [[ 3.9335866 -3.431477   3.483448  -5.8231463]]
Iteration 400 of 1000: loss=0.0154 " + "l1=0.0134" + "l2=0.00205 f=-0.46 shape=(1, 9000, 1)
logits [[ 3.898722  -3.431954   3.4868646 -5.7933526]]
Iteration 500 of 1000: loss=0.0146 " + "l1=0.0122" + "l2=0.00246 f=-0.461 shape=(1, 9000, 1)
logits [[ 3.863891  -3.4324648  3.4893343 -5.763508 ]]
Iteration 600 of 1000: loss=0.0138 " + "l1=0.0109" + "l2=0.00286 f=-0.461 shape=(1, 9000, 1)
logits [[ 3.8270502 -3.432566   3.4910252 -5.731393 ]]
Iteration 700 of 1000: loss=0.0129 " + "l1=0.00959" + "l2=0.00331 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.7872853 -3.4337962  3.4923525 -5.696413 ]]
Iteration 800 of 1000: loss=0.012 " + "l1=0.00824" + "l2=0.00375 f=-0.464 shape=(1, 9000, 1)
logits [[ 3.7477021 -3.435475   3.4942026 -5.6621847]]
Iteration 900 of 1000: loss=0.0112 " + "l1=0.0072" + "l2=0.004 f=-0.465 shape=(1, 9000, 1)
logits [[ 3.7198262 -3.4379091  3.4982572 -5.6415434]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0272 " + "l1=0.0272" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 4.091907  -3.4310136  3.4696298 -5.9611154]]
Iteration 100 of 1000: loss=0.0233 " + "l1=0.0214" + "l2=0.00189 f=-0.459 shape=(1, 9000, 1)
logits [[ 3.9670932 -3.4294355  3.47736   -5.8494444]]
Iteration 200 of 1000: loss=0.0216 " + "l1=0.0192" + "l2=0.00246 f=-0.46 shape=(1, 9000, 1)
logits [[ 3.9213781 -3.4314997  3.4829664 -5.8111134]]
Iteration 300 of 1000: loss=0.02 " + "l1=0.0169" + "l2=0.00309 f=-0.46 shape=(1, 9000, 1)
logits [[ 3.8735876 -3.4326725  3.4879506 -5.7703805]]
Iteration 400 of 1000: loss=0.0183 " + "l1=0.0145" + "l2=0.00381 f=-0.461 shape=(1, 9000, 1)
logits [[ 3.8225799 -3.4337418  3.4916108 -5.7261434]]
Iteration 500 of 1000: loss=0.0165 " + "l1=0.0119" + "l2=0.00465 f=-0.463 shape=(1, 9000, 1)
logits [[ 3.766849  -3.4365847  3.4954746 -5.677738 ]]
Iteration 600 of 1000: loss=0.0148 " + "l1=0.00961" + "l2=0.00517 f=-0.465 shape=(1, 9000, 1)
logits [[ 3.72088   -3.4404252  3.501246  -5.6419244]]
Iteration 700 of 1000: loss=0.0133 " + "l1=0.00746" + "l2=0.0058 f=-0.467 shape=(1, 9000, 1)
logits [[ 3.6759124 -3.4441597  3.505327  -5.6053915]]
Iteration 800 of 1000: loss=0.0117 " + "l1=0.00532" + "l2=0.00639 f=-0.468 shape=(1, 9000, 1)
logits [[ 3.6323354 -3.4464228  3.5106313 -5.570111 ]]
Iteration 900 of 1000: loss=0.0102 " + "l1=0.00309" + "l2=0.00711 f=-0.469 shape=(1, 9000, 1)
logits [[ 3.5876727 -3.4489295  3.5170717 -5.533047 ]]
--- 291.65165758132935 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.101 " + "l1=0.101" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 4.091907  -3.4310136  3.4696298 -5.9611154]]
Iteration 100 of 1000: loss=0.099 " + "l1=0.0982" + "l2=0.000794 f=-0.451 shape=(1, 9000, 1)
logits [[ 3.9886618 -3.3930278  3.4257135 -5.8270783]]
Iteration 200 of 1000: loss=0.0984 " + "l1=0.0975" + "l2=0.000891 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.960168  -3.3819606  3.4125285 -5.789153 ]]
Iteration 300 of 1000: loss=0.0978 " + "l1=0.0967" + "l2=0.00113 f=-0.447 shape=(1, 9000, 1)
logits [[ 3.9266918 -3.3700416  3.3977988 -5.7440324]]
Iteration 400 of 1000: loss=0.0972 " + "l1=0.0959" + "l2=0.00138 f=-0.445 shape=(1, 9000, 1)
logits [[ 3.891076  -3.3577225  3.3823044 -5.695865 ]]
Iteration 500 of 1000: loss=0.0966 " + "l1=0.095" + "l2=0.00165 f=-0.443 shape=(1, 9000, 1)
logits [[ 3.8531315 -3.344869   3.365941  -5.6450076]]
Iteration 600 of 1000: loss=0.096 " + "l1=0.0941" + "l2=0.00191 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.8147292 -3.3317986  3.3493006 -5.593004 ]]
Iteration 700 of 1000: loss=0.0955 " + "l1=0.0932" + "l2=0.00232 f=-0.438 shape=(1, 9000, 1)
logits [[ 3.7764971 -3.3194928  3.3329659 -5.5414176]]
Iteration 800 of 1000: loss=0.0948 " + "l1=0.0923" + "l2=0.00255 f=-0.436 shape=(1, 9000, 1)
logits [[ 3.738707  -3.3076434  3.3164668 -5.49026  ]]
Iteration 900 of 1000: loss=0.0943 " + "l1=0.0914" + "l2=0.00285 f=-0.434 shape=(1, 9000, 1)
logits [[ 3.7019331 -3.2961411  3.300452  -5.442285 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.01 " + "l1=1.01" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 4.091907  -3.4310136  3.4696298 -5.9611154]]
Iteration 100 of 1000: loss=0.859 " + "l1=0.793" + "l2=0.0665 f=-0.416 shape=(1, 9000, 1)
logits [[ 3.1518095 -3.1346953  3.0909276 -4.7734613]]
Iteration 200 of 1000: loss=0.795 " + "l1=0.725" + "l2=0.0694 f=-0.383 shape=(1, 9000, 1)
logits [[ 2.9028971 -2.998992   2.9081786 -4.3448577]]
Iteration 300 of 1000: loss=0.751 " + "l1=0.675" + "l2=0.0761 f=-0.357 shape=(1, 9000, 1)
logits [[ 2.6957347 -2.8914864  2.758291  -3.9921043]]
Iteration 400 of 1000: loss=0.716 " + "l1=0.634" + "l2=0.0827 f=-0.34 shape=(1, 9000, 1)
logits [[ 2.506182  -2.806789   2.6375706 -3.6987321]]
Iteration 500 of 1000: loss=0.681 " + "l1=0.582" + "l2=0.0999 f=-0.319 shape=(1, 9000, 1)
logits [[ 2.2785773 -2.6927323  2.4776688 -3.338068 ]]
Iteration 600 of 1000: loss=0.648 " + "l1=0.535" + "l2=0.113 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.0924168 -2.5808315  2.3172534 -3.0332463]]
Iteration 700 of 1000: loss=0.613 " + "l1=0.483" + "l2=0.13 f=-0.29 shape=(1, 9000, 1)
logits [[ 1.8949431 -2.47006    2.1246994 -2.7081587]]
Iteration 800 of 1000: loss=0.578 " + "l1=0.435" + "l2=0.143 f=-0.28 shape=(1, 9000, 1)
logits [[ 1.7086713 -2.3378384  1.9302788 -2.4216874]]
Iteration 900 of 1000: loss=0.548 " + "l1=0.393" + "l2=0.154 f=-0.275 shape=(1, 9000, 1)
logits [[ 1.5351694 -2.2136045  1.7547739 -2.176629 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=10.1 " + "l1=10.1" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 4.091907  -3.4310136  3.4696298 -5.9611154]]
Iteration 100 of 1000: loss=4.54 " + "l1=2.79" + "l2=1.76 f=-0.219 shape=(1, 9000, 1)
logits [[ 0.9536057 -2.1962006  1.5772284 -1.2102934]]
Iteration 200 of 1000: loss=2.54 " + "l1=0.28" + "l2=2.26 f=-0.138 shape=(1, 9000, 1)
logits [[ 0.05035794 -1.6421424   0.66070706  0.38025188]]
Iteration 300 of 1000: loss=1.57 " + "l1=0" + "l2=1.57 f=-0.124 shape=(1, 9000, 1)
logits [[ 0.00459999 -1.6953363   0.5850882   0.6099001 ]]
Iteration 400 of 1000: loss=1.2 " + "l1=0.000614" + "l2=1.2 f=-0.125 shape=(1, 9000, 1)
logits [[ 0.02901778 -1.7125745   0.59206563  0.5914514 ]]
Iteration 500 of 1000: loss=1.01 " + "l1=0" + "l2=1.01 f=-0.126 shape=(1, 9000, 1)
logits [[ 0.01890439 -1.684808    0.57005733  0.59002084]]
Iteration 600 of 1000: loss=0.899 " + "l1=0.00276" + "l2=0.896 f=-0.125 shape=(1, 9000, 1)
logits [[ 0.024867   -1.6569448   0.5669941   0.56423503]]
Iteration 700 of 1000: loss=0.827 " + "l1=0" + "l2=0.827 f=-0.118 shape=(1, 9000, 1)
logits [[ 0.03328986 -1.6424408   0.56811017  0.56884825]]
Iteration 800 of 1000: loss=0.783 " + "l1=0" + "l2=0.783 f=-0.112 shape=(1, 9000, 1)
logits [[ 0.02683643 -1.6106733   0.5584616   0.5783378 ]]
Iteration 900 of 1000: loss=0.744 " + "l1=0.00528" + "l2=0.739 f=-0.105 shape=(1, 9000, 1)
logits [[ 0.04245743 -1.5920388   0.5683869   0.56310517]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.53 " + "l1=5.53" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 4.091907  -3.4310136  3.4696298 -5.9611154]]
Iteration 100 of 1000: loss=3.16 " + "l1=2.42" + "l2=0.736 f=-0.276 shape=(1, 9000, 1)
logits [[ 1.6067783 -2.5000408  2.0980465 -2.309656 ]]
Iteration 200 of 1000: loss=2.27 " + "l1=1.35" + "l2=0.924 f=-0.211 shape=(1, 9000, 1)
logits [[ 0.8021493  -2.1250045   1.4640876  -0.98331714]]
Iteration 300 of 1000: loss=1.57 " + "l1=0.514" + "l2=1.05 f=-0.178 shape=(1, 9000, 1)
logits [[ 0.25806567 -1.7930118   0.87906325 -0.05536068]]
Iteration 400 of 1000: loss=0.979 " + "l1=0" + "l2=0.979 f=-0.148 shape=(1, 9000, 1)
logits [[-0.05281556 -1.5815374   0.5122299   0.5320651 ]]
Iteration 500 of 1000: loss=0.792 " + "l1=0.00191" + "l2=0.79 f=-0.136 shape=(1, 9000, 1)
logits [[ 0.0079163 -1.5580995  0.5038935  0.5004164]]
Iteration 600 of 1000: loss=0.708 " + "l1=0.000984" + "l2=0.707 f=-0.128 shape=(1, 9000, 1)
logits [[ 0.03485787 -1.5243418   0.49017134  0.48838237]]
Iteration 700 of 1000: loss=0.663 " + "l1=0.00643" + "l2=0.656 f=-0.12 shape=(1, 9000, 1)
logits [[ 0.05954336 -1.4939773   0.4829672   0.47127694]]
Iteration 800 of 1000: loss=0.63 " + "l1=0" + "l2=0.63 f=-0.118 shape=(1, 9000, 1)
logits [[ 0.05801667 -1.4830428   0.47311884  0.48122284]]
Iteration 900 of 1000: loss=0.607 " + "l1=0.00534" + "l2=0.602 f=-0.117 shape=(1, 9000, 1)
logits [[ 0.07344289 -1.4799173   0.47371107  0.46400455]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.27 " + "l1=3.27" + "l2=0 f=-0.458 shape=(1, 9000, 1)
logits [[ 4.091907  -3.4310136  3.4696298 -5.9611154]]
Iteration 100 of 1000: loss=2.21 " + "l1=1.88" + "l2=0.335 f=-0.326 shape=(1, 9000, 1)
logits [[ 2.2286773 -2.722015   2.4872005 -3.2979922]]
Iteration 200 of 1000: loss=1.77 " + "l1=1.31" + "l2=0.464 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.4560281 -2.3934715  1.9622409 -2.0637536]]
Iteration 300 of 1000: loss=1.45 " + "l1=0.936" + "l2=0.519 f=-0.224 shape=(1, 9000, 1)
logits [[ 1.0070982 -2.1386526  1.5585359 -1.3213111]]
Iteration 400 of 1000: loss=1.14 " + "l1=0.565" + "l2=0.571 f=-0.2 shape=(1, 9000, 1)
logits [[ 0.59689736 -1.8491285   1.095284   -0.6437254 ]]
Iteration 500 of 1000: loss=0.901 " + "l1=0.305" + "l2=0.596 f=-0.167 shape=(1, 9000, 1)
logits [[ 0.30495748 -1.6502473   0.8088432  -0.1304619 ]]
Iteration 600 of 1000: loss=0.769 " + "l1=0.131" + "l2=0.638 f=-0.154 shape=(1, 9000, 1)
logits [[ 0.12407409 -1.5295501   0.59746003  0.19313902]]
Iteration 700 of 1000: loss=0.67 " + "l1=0.0107" + "l2=0.659 f=-0.145 shape=(1, 9000, 1)
logits [[ 0.00975368 -1.4302186   0.43689698  0.40398952]]
Iteration 800 of 1000: loss=0.61 " + "l1=0.00378" + "l2=0.606 f=-0.149 shape=(1, 9000, 1)
logits [[ 0.01931234 -1.4089067   0.4032752   0.39163792]]
Iteration 900 of 1000: loss=0.571 " + "l1=0.0013" + "l2=0.569 f=-0.158 shape=(1, 9000, 1)
logits [[ 0.01641771 -1.3965845   0.3767982   0.3728033 ]]
--- 297.6742470264435 seconds ---
Adv result:3
Loading record A05289
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0841 " + "l1=0.0841" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 3.96281   -4.45093    3.9363403 -5.8465962]]
Iteration 100 of 1000: loss=0.0837 " + "l1=0.0835" + "l2=0.000282 f=-0.595 shape=(1, 9000, 1)
logits [[ 3.9178755 -4.427871   3.915073  -5.786955 ]]
Iteration 200 of 1000: loss=0.0836 " + "l1=0.0833" + "l2=0.00029 f=-0.595 shape=(1, 9000, 1)
logits [[ 3.9112728 -4.423061   3.9109967 -5.777952 ]]
Iteration 300 of 1000: loss=0.0836 " + "l1=0.0832" + "l2=0.000321 f=-0.594 shape=(1, 9000, 1)
logits [[ 3.9068942 -4.417418   3.9066737 -5.770981 ]]
Iteration 400 of 1000: loss=0.0835 " + "l1=0.0831" + "l2=0.00038 f=-0.593 shape=(1, 9000, 1)
logits [[ 3.9022264 -4.4114723  3.9019935 -5.7636313]]
Iteration 500 of 1000: loss=0.0835 " + "l1=0.083" + "l2=0.000469 f=-0.592 shape=(1, 9000, 1)
logits [[ 3.8972194 -4.405759   3.8973904 -5.755926 ]]
Iteration 600 of 1000: loss=0.0835 " + "l1=0.0829" + "l2=0.000565 f=-0.591 shape=(1, 9000, 1)
logits [[ 3.8930905 -4.4003825  3.8930733 -5.749317 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.841 " + "l1=0.841" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 3.96281   -4.45093    3.9363403 -5.8465962]]
Iteration 100 of 1000: loss=0.815 " + "l1=0.802" + "l2=0.013 f=-0.567 shape=(1, 9000, 1)
logits [[ 3.772407  -4.251125   3.7727957 -5.5628533]]
Iteration 200 of 1000: loss=0.805 " + "l1=0.788" + "l2=0.0171 f=-0.552 shape=(1, 9000, 1)
logits [[ 3.7094166 -4.1672964  3.7079947 -5.459084 ]]
Iteration 300 of 1000: loss=0.795 " + "l1=0.773" + "l2=0.022 f=-0.538 shape=(1, 9000, 1)
logits [[ 3.6445289 -4.085307   3.6437309 -5.354451 ]]
Iteration 400 of 1000: loss=0.786 " + "l1=0.759" + "l2=0.0274 f=-0.524 shape=(1, 9000, 1)
logits [[ 3.5798354 -4.004501   3.5823753 -5.251817 ]]
Iteration 500 of 1000: loss=0.778 " + "l1=0.745" + "l2=0.0335 f=-0.509 shape=(1, 9000, 1)
logits [[ 3.5222545 -3.923161   3.5213993 -5.1563435]]
Iteration 600 of 1000: loss=0.77 " + "l1=0.73" + "l2=0.04 f=-0.492 shape=(1, 9000, 1)
logits [[ 3.4603    -3.8362973  3.4597752 -5.0529575]]
Iteration 700 of 1000: loss=0.763 " + "l1=0.718" + "l2=0.0454 f=-0.48 shape=(1, 9000, 1)
logits [[ 3.408941  -3.7689252  3.4076247 -4.969237 ]]
Iteration 800 of 1000: loss=0.757 " + "l1=0.707" + "l2=0.051 f=-0.47 shape=(1, 9000, 1)
logits [[ 3.3610518 -3.7044206  3.3593628 -4.8950176]]
Iteration 900 of 1000: loss=0.752 " + "l1=0.696" + "l2=0.0563 f=-0.46 shape=(1, 9000, 1)
logits [[ 3.3097575 -3.64354    3.313401  -4.8186846]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.41 " + "l1=8.41" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 3.96281   -4.45093    3.9363403 -5.8465962]]
Iteration 100 of 1000: loss=5.95 " + "l1=4.6" + "l2=1.35 f=-0.299 shape=(1, 9000, 1)
logits [[ 2.3170483 -2.283053   2.3091497 -3.5391948]]
Iteration 200 of 1000: loss=4.51 " + "l1=2.84" + "l2=1.67 f=-0.201 shape=(1, 9000, 1)
logits [[ 1.579512  -1.2496102  1.5890416 -2.7247238]]
Iteration 300 of 1000: loss=3.69 " + "l1=2.01" + "l2=1.68 f=-0.152 shape=(1, 9000, 1)
logits [[ 1.2130122 -0.7419287  1.2693235 -2.3464947]]
Iteration 400 of 1000: loss=3.22 " + "l1=1.48" + "l2=1.74 f=-0.143 shape=(1, 9000, 1)
logits [[ 0.82376665 -0.43498293  1.0415407  -2.0021267 ]]
Iteration 500 of 1000: loss=2.79 " + "l1=0.924" + "l2=1.87 f=-0.15 shape=(1, 9000, 1)
logits [[ 0.35583478 -0.10234271  0.8213222  -1.673658  ]]
Iteration 600 of 1000: loss=2.51 " + "l1=0.519" + "l2=1.99 f=-0.147 shape=(1, 9000, 1)
logits [[-0.1165489   0.12944949  0.6483466  -1.249743  ]]
Iteration 700 of 1000: loss=2.3 " + "l1=0.279" + "l2=2.02 f=-0.153 shape=(1, 9000, 1)
logits [[-0.3987478   0.2431929   0.52239144 -0.9772846 ]]
Iteration 800 of 1000: loss=2.06 " + "l1=0.0393" + "l2=2.02 f=-0.164 shape=(1, 9000, 1)
logits [[-0.7022889   0.32460648  0.36386856 -0.6430502 ]]
Iteration 900 of 1000: loss=1.91 " + "l1=0.00995" + "l2=1.9 f=-0.166 shape=(1, 9000, 1)
logits [[-0.7222198   0.31889272  0.32884625 -0.58782023]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.63 " + "l1=4.63" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 3.96281   -4.45093    3.9363403 -5.8465962]]
Iteration 100 of 1000: loss=3.86 " + "l1=3.42" + "l2=0.436 f=-0.412 shape=(1, 9000, 1)
logits [[ 2.9993353 -3.2217517  2.9933126 -4.4203715]]
Iteration 200 of 1000: loss=3.4 " + "l1=2.77" + "l2=0.634 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.500968  -2.5319238  2.5046113 -3.766616 ]]
Iteration 300 of 1000: loss=2.92 " + "l1=2.11" + "l2=0.809 f=-0.273 shape=(1, 9000, 1)
logits [[ 1.9811959 -1.8478988  1.9880178 -3.2118065]]
Iteration 400 of 1000: loss=2.63 " + "l1=1.74" + "l2=0.889 f=-0.222 shape=(1, 9000, 1)
logits [[ 1.7161565 -1.4519641  1.7096379 -2.8608947]]
Iteration 500 of 1000: loss=2.44 " + "l1=1.48" + "l2=0.964 f=-0.189 shape=(1, 9000, 1)
logits [[ 1.5178447 -1.1585227  1.5263859 -2.6428638]]
Iteration 600 of 1000: loss=2.35 " + "l1=1.35" + "l2=0.994 f=-0.168 shape=(1, 9000, 1)
logits [[ 1.4313185 -1.0204916  1.4398001 -2.5214047]]
Iteration 700 of 1000: loss=2.29 " + "l1=1.26" + "l2=1.02 f=-0.149 shape=(1, 9000, 1)
logits [[ 1.3612921  -0.92773634  1.3711624  -2.4007454 ]]
Iteration 800 of 1000: loss=2.24 " + "l1=1.18" + "l2=1.05 f=-0.138 shape=(1, 9000, 1)
logits [[ 1.2527909  -0.85425985  1.2998637  -2.2495766 ]]
Iteration 900 of 1000: loss=2.17 " + "l1=1.09" + "l2=1.08 f=-0.127 shape=(1, 9000, 1)
logits [[ 1.1307888  -0.75363827  1.2206814  -2.1069064 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=6.52 " + "l1=6.52" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 3.96281   -4.45093    3.9363403 -5.8465962]]
Iteration 100 of 1000: loss=5.02 " + "l1=4.18" + "l2=0.836 f=-0.346 shape=(1, 9000, 1)
logits [[ 2.6507707 -2.7394764  2.6533027 -3.9471061]]
Iteration 200 of 1000: loss=4.07 " + "l1=2.89" + "l2=1.17 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.9510247 -1.7836953  1.9506316 -3.1597717]]
Iteration 300 of 1000: loss=3.38 " + "l1=2.11" + "l2=1.27 f=-0.192 shape=(1, 9000, 1)
logits [[ 1.5315533 -1.1751105  1.5414041 -2.66711  ]]
Iteration 400 of 1000: loss=3 " + "l1=1.67" + "l2=1.33 f=-0.168 shape=(1, 9000, 1)
logits [[ 1.2907755  -0.82943994  1.3258581  -2.4593608 ]]
Iteration 500 of 1000: loss=2.76 " + "l1=1.34" + "l2=1.42 f=-0.149 shape=(1, 9000, 1)
logits [[ 0.9957572 -0.5811441  1.1481397 -2.1606977]]
Iteration 600 of 1000: loss=2.53 " + "l1=1.05" + "l2=1.48 f=-0.146 shape=(1, 9000, 1)
logits [[ 0.68964314 -0.37122026  0.98854697 -1.8920975 ]]
Iteration 700 of 1000: loss=2.37 " + "l1=0.83" + "l2=1.54 f=-0.142 shape=(1, 9000, 1)
logits [[ 0.4210158  -0.21158312  0.85985655 -1.6390675 ]]
Iteration 800 of 1000: loss=2.25 " + "l1=0.655" + "l2=1.59 f=-0.136 shape=(1, 9000, 1)
logits [[ 0.17821106 -0.08513436  0.7602475  -1.3981271 ]]
Iteration 900 of 1000: loss=2.1 " + "l1=0.449" + "l2=1.65 f=-0.134 shape=(1, 9000, 1)
logits [[-0.12012928  0.04993892  0.62869424 -1.0935546 ]]
--- 275.96260690689087 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.000265 " + "l1=0.000265" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 3.96281   -4.45093    3.9363403 -5.8465962]]
Iteration 100 of 1000: loss=0.000103 " + "l1=1.81e-07" + "l2=0.000102 f=-0.599 shape=(1, 9000, 1)
logits [[ 3.937845  -4.4551444  3.9378269 -5.8180118]]
Iteration 200 of 1000: loss=8.4e-05 " + "l1=0" + "l2=8.4e-05 f=-0.599 shape=(1, 9000, 1)
logits [[ 3.9379554 -4.4554543  3.9380505 -5.818252 ]]
Iteration 300 of 1000: loss=8.78e-05 " + "l1=0" + "l2=8.78e-05 f=-0.599 shape=(1, 9000, 1)
logits [[ 3.938368  -4.4557114  3.9383836 -5.819018 ]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.000132 " + "l1=0.000132" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 3.96281   -4.45093    3.9363403 -5.8465962]]
Iteration 100 of 1000: loss=9.42e-05 " + "l1=3.23e-05" + "l2=6.19e-05 f=-0.599 shape=(1, 9000, 1)
logits [[ 3.9442413 -4.4545403  3.9377725 -5.825345 ]]
Iteration 200 of 1000: loss=8.78e-05 " + "l1=3.21e-05" + "l2=5.57e-05 f=-0.599 shape=(1, 9000, 1)
logits [[ 3.944201  -4.454513   3.9377859 -5.8254137]]
Iteration 300 of 1000: loss=9.3e-05 " + "l1=2.46e-05" + "l2=6.84e-05 f=-0.6 shape=(1, 9000, 1)
logits [[ 3.9429183 -4.4548235  3.9380026 -5.8241506]]
const [0.0025]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.62e-05 " + "l1=6.62e-05" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 3.96281   -4.45093    3.9363403 -5.8465962]]
Iteration 100 of 1000: loss=7.03e-05 " + "l1=2.98e-05" + "l2=4.05e-05 f=-0.6 shape=(1, 9000, 1)
logits [[ 3.9497848 -4.4540935  3.9378514 -5.8317785]]
const [0.00125]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.31e-05 " + "l1=3.31e-05" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 3.96281   -4.45093    3.9363403 -5.8465962]]
Iteration 100 of 1000: loss=4.79e-05 " + "l1=1.89e-05" + "l2=2.9e-05 f=-0.6 shape=(1, 9000, 1)
logits [[ 3.9529097 -4.4537535  3.9377763 -5.835319 ]]
const [0.000625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.65e-05 " + "l1=1.65e-05" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 3.96281   -4.45093    3.9363403 -5.8465962]]
Iteration 100 of 1000: loss=3.22e-05 " + "l1=1.08e-05" + "l2=2.14e-05 f=-0.6 shape=(1, 9000, 1)
logits [[ 3.9549234 -4.4534507  3.9376986 -5.8376245]]
--- 64.91360259056091 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0981 " + "l1=0.0981" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 3.96281   -4.45093    3.9363403 -5.8465962]]
Iteration 100 of 1000: loss=0.0971 " + "l1=0.0966" + "l2=0.00051 f=-0.594 shape=(1, 9000, 1)
logits [[ 3.9006665 -4.4352508  3.9100263 -5.74958  ]]
Iteration 200 of 1000: loss=0.0969 " + "l1=0.0963" + "l2=0.000565 f=-0.592 shape=(1, 9000, 1)
logits [[ 3.8899813 -4.429199   3.9027946 -5.732016 ]]
Iteration 300 of 1000: loss=0.0968 " + "l1=0.0961" + "l2=0.000677 f=-0.59 shape=(1, 9000, 1)
logits [[ 3.8791456 -4.4235873  3.8961258 -5.7135854]]
Iteration 400 of 1000: loss=0.0966 " + "l1=0.0959" + "l2=0.00079 f=-0.589 shape=(1, 9000, 1)
logits [[ 3.8689644 -4.417672   3.8893666 -5.695966 ]]
Iteration 500 of 1000: loss=0.0965 " + "l1=0.0956" + "l2=0.000887 f=-0.587 shape=(1, 9000, 1)
logits [[ 3.8597937 -4.4122286  3.8830912 -5.67953  ]]
Iteration 600 of 1000: loss=0.0965 " + "l1=0.0954" + "l2=0.0011 f=-0.586 shape=(1, 9000, 1)
logits [[ 3.851365  -4.4072256  3.877277  -5.66418  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.981 " + "l1=0.981" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 3.96281   -4.45093    3.9363403 -5.8465962]]
Iteration 100 of 1000: loss=0.914 " + "l1=0.876" + "l2=0.0383 f=-0.544 shape=(1, 9000, 1)
logits [[ 3.4589205 -4.3124337  3.7175798 -5.039416 ]]
Iteration 200 of 1000: loss=0.89 " + "l1=0.841" + "l2=0.0495 f=-0.522 shape=(1, 9000, 1)
logits [[ 3.3106394 -4.255136   3.6314085 -4.7768583]]
Iteration 300 of 1000: loss=0.869 " + "l1=0.811" + "l2=0.0588 f=-0.501 shape=(1, 9000, 1)
logits [[ 3.1858063 -4.1901007  3.5525045 -4.5532513]]
Iteration 400 of 1000: loss=0.849 " + "l1=0.78" + "l2=0.0686 f=-0.479 shape=(1, 9000, 1)
logits [[ 3.0523372 -4.1169763  3.4760985 -4.3286843]]
Iteration 500 of 1000: loss=0.831 " + "l1=0.753" + "l2=0.0782 f=-0.46 shape=(1, 9000, 1)
logits [[ 2.9329047 -4.054275   3.4066525 -4.124997 ]]
Iteration 600 of 1000: loss=0.816 " + "l1=0.73" + "l2=0.086 f=-0.442 shape=(1, 9000, 1)
logits [[ 2.8366008 -4.000677   3.3464696 -3.9490423]]
Iteration 700 of 1000: loss=0.801 " + "l1=0.709" + "l2=0.0929 f=-0.423 shape=(1, 9000, 1)
logits [[ 2.7579634 -3.9481113  3.2916257 -3.793585 ]]
Iteration 800 of 1000: loss=0.787 " + "l1=0.686" + "l2=0.101 f=-0.403 shape=(1, 9000, 1)
logits [[ 2.6726787 -3.8989904  3.2382445 -3.6259139]]
Iteration 900 of 1000: loss=0.774 " + "l1=0.666" + "l2=0.108 f=-0.386 shape=(1, 9000, 1)
logits [[ 2.593545  -3.8521454  3.187939  -3.4718478]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.81 " + "l1=9.81" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 3.96281   -4.45093    3.9363403 -5.8465962]]
Iteration 100 of 1000: loss=5.51 " + "l1=3.33" + "l2=2.17 f=-0.192 shape=(1, 9000, 1)
logits [[ 1.0333819 -3.160371   2.3466125 -0.9859278]]
Iteration 200 of 1000: loss=3.89 " + "l1=1.31" + "l2=2.58 f=-0.0457 shape=(1, 9000, 1)
logits [[ 0.31161216 -2.5762055   1.6953572   0.38645953]]
Iteration 300 of 1000: loss=2.69 " + "l1=0.0316" + "l2=2.66 f=-0.0418 shape=(1, 9000, 1)
logits [[-0.31201372 -1.945582    1.0610813   1.0294921 ]]
Iteration 400 of 1000: loss=2.08 " + "l1=0.00711" + "l2=2.08 f=-0.0455 shape=(1, 9000, 1)
logits [[-0.36336568 -1.7863449   0.9874229   0.980313  ]]
Iteration 500 of 1000: loss=1.78 " + "l1=0.00116" + "l2=1.78 f=-0.0497 shape=(1, 9000, 1)
logits [[-0.3773367  -1.7506564   0.9652435   0.96408075]]
Iteration 600 of 1000: loss=1.61 " + "l1=0" + "l2=1.61 f=-0.0505 shape=(1, 9000, 1)
logits [[-0.38394114 -1.724465    0.95067626  0.95575625]]
Iteration 700 of 1000: loss=1.52 " + "l1=0" + "l2=1.52 f=-0.0525 shape=(1, 9000, 1)
logits [[-0.39713404 -1.7119428   0.92873186  0.9704609 ]]
Iteration 800 of 1000: loss=1.43 " + "l1=0.00525" + "l2=1.42 f=-0.058 shape=(1, 9000, 1)
logits [[-0.37767965 -1.7356128   0.9433369   0.9380841 ]]
Iteration 900 of 1000: loss=1.37 " + "l1=0.00237" + "l2=1.37 f=-0.0609 shape=(1, 9000, 1)
logits [[-0.37562874 -1.7579815   0.9461047   0.9437352 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.4 " + "l1=5.4" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 3.96281   -4.45093    3.9363403 -5.8465962]]
Iteration 100 of 1000: loss=3.82 " + "l1=3.02" + "l2=0.797 f=-0.351 shape=(1, 9000, 1)
logits [[ 1.9057761 -3.7636068  2.9738133 -2.520801 ]]
Iteration 200 of 1000: loss=3.26 " + "l1=2.27" + "l2=0.989 f=-0.245 shape=(1, 9000, 1)
logits [[ 1.3746055 -3.4504526  2.6129615 -1.516449 ]]
Iteration 300 of 1000: loss=2.69 " + "l1=1.59" + "l2=1.1 f=-0.156 shape=(1, 9000, 1)
logits [[ 0.92183286 -3.0860622   2.212322   -0.67322284]]
Iteration 400 of 1000: loss=2.24 " + "l1=0.993" + "l2=1.24 f=-0.0885 shape=(1, 9000, 1)
logits [[ 0.50084203 -2.7292736   1.8401309   0.03416122]]
Iteration 500 of 1000: loss=1.91 " + "l1=0.52" + "l2=1.39 f=-0.0476 shape=(1, 9000, 1)
logits [[ 0.13989273 -2.4015954   1.5082747   0.56314814]]
Iteration 600 of 1000: loss=1.65 " + "l1=0.135" + "l2=1.51 f=-0.0295 shape=(1, 9000, 1)
logits [[-0.11501131 -2.1311183   1.1871544   0.94113046]]
Iteration 700 of 1000: loss=1.45 " + "l1=0" + "l2=1.45 f=-0.033 shape=(1, 9000, 1)
logits [[-0.19727921 -2.0663536   1.0628362   1.0686209 ]]
Iteration 800 of 1000: loss=1.29 " + "l1=0.0361" + "l2=1.26 f=-0.035 shape=(1, 9000, 1)
logits [[-0.15831177 -2.109553    1.0966947   1.0311006 ]]
Iteration 900 of 1000: loss=1.17 " + "l1=0.0269" + "l2=1.14 f=-0.0317 shape=(1, 9000, 1)
logits [[-0.15292618 -2.1301866   1.102495    1.0536711 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.19 " + "l1=3.19" + "l2=0 f=-0.6 shape=(1, 9000, 1)
logits [[ 3.96281   -4.45093    3.9363403 -5.8465962]]
Iteration 100 of 1000: loss=2.56 " + "l1=2.23" + "l2=0.335 f=-0.434 shape=(1, 9000, 1)
logits [[ 2.5489073 -4.0162525  3.2898698 -3.5601885]]
Iteration 200 of 1000: loss=2.34 " + "l1=1.94" + "l2=0.401 f=-0.375 shape=(1, 9000, 1)
logits [[ 2.159773  -3.8325844  3.0751462 -2.9010954]]
Iteration 300 of 1000: loss=2.14 " + "l1=1.67" + "l2=0.47 f=-0.303 shape=(1, 9000, 1)
logits [[ 1.8370676 -3.625749   2.850814  -2.2747405]]
Iteration 400 of 1000: loss=1.9 " + "l1=1.34" + "l2=0.556 f=-0.216 shape=(1, 9000, 1)
logits [[ 1.4895406 -3.3798525  2.580505  -1.5549456]]
Iteration 500 of 1000: loss=1.73 " + "l1=1.1" + "l2=0.634 f=-0.159 shape=(1, 9000, 1)
logits [[ 1.1875209 -3.171648   2.363569  -1.0148389]]
Iteration 600 of 1000: loss=1.62 " + "l1=0.947" + "l2=0.676 f=-0.133 shape=(1, 9000, 1)
logits [[ 0.986451  -3.0449836  2.2203536 -0.6922115]]
Iteration 700 of 1000: loss=1.52 " + "l1=0.805" + "l2=0.715 f=-0.111 shape=(1, 9000, 1)
logits [[ 0.8076212  -2.9053135   2.0653756  -0.41223472]]
Iteration 800 of 1000: loss=1.41 " + "l1=0.646" + "l2=0.764 f=-0.0917 shape=(1, 9000, 1)
logits [[ 0.6067943 -2.750065   1.8828452 -0.1063523]]
Iteration 900 of 1000: loss=1.29 " + "l1=0.474" + "l2=0.814 f=-0.0842 shape=(1, 9000, 1)
logits [[ 0.36610386 -2.6187904   1.6868082   0.22927564]]
--- 275.9256148338318 seconds ---
Adv result:3
Loading record A05293
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0455 " + "l1=0.0455" + "l2=0 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.6545024 -1.897638   2.1265423 -3.9411168]]
Iteration 100 of 1000: loss=0.0451 " + "l1=0.0448" + "l2=0.000295 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.611398  -1.8708466  2.1025848 -3.9032438]]
Iteration 200 of 1000: loss=0.045 " + "l1=0.0447" + "l2=0.000295 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.6048207 -1.8653607  2.0973463 -3.898535 ]]
Iteration 300 of 1000: loss=0.0449 " + "l1=0.0446" + "l2=0.000351 f=-0.266 shape=(1, 9000, 1)
logits [[ 2.596396  -1.8589383  2.091469  -3.8923469]]
Iteration 400 of 1000: loss=0.0448 " + "l1=0.0444" + "l2=0.000425 f=-0.266 shape=(1, 9000, 1)
logits [[ 2.5875401 -1.8520942  2.085505  -3.8858204]]
Iteration 500 of 1000: loss=0.0447 " + "l1=0.0442" + "l2=0.000506 f=-0.267 shape=(1, 9000, 1)
logits [[ 2.5785928 -1.8453692  2.0796888 -3.879212 ]]
Iteration 600 of 1000: loss=0.0447 " + "l1=0.0441" + "l2=0.000654 f=-0.267 shape=(1, 9000, 1)
logits [[ 2.5700245 -1.8389186  2.074531  -3.8729227]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.455 " + "l1=0.455" + "l2=0 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.6545024 -1.897638   2.1265423 -3.9411168]]
Iteration 100 of 1000: loss=0.417 " + "l1=0.395" + "l2=0.0217 f=-0.273 shape=(1, 9000, 1)
logits [[ 2.285879  -1.6628314  1.9174258 -3.6336002]]
Iteration 200 of 1000: loss=0.401 " + "l1=0.373" + "l2=0.0278 f=-0.277 shape=(1, 9000, 1)
logits [[ 2.147643  -1.5851231  1.8515607 -3.5219448]]
Iteration 300 of 1000: loss=0.387 " + "l1=0.354" + "l2=0.033 f=-0.28 shape=(1, 9000, 1)
logits [[ 2.0268455 -1.517851   1.793723  -3.4210372]]
Iteration 400 of 1000: loss=0.376 " + "l1=0.338" + "l2=0.0385 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.9130974 -1.4636577  1.7421849 -3.3148692]]
Iteration 500 of 1000: loss=0.367 " + "l1=0.325" + "l2=0.0423 f=-0.282 shape=(1, 9000, 1)
logits [[ 1.8234015 -1.4276356  1.7078174 -3.2331378]]
Iteration 600 of 1000: loss=0.36 " + "l1=0.314" + "l2=0.0454 f=-0.285 shape=(1, 9000, 1)
logits [[ 1.74065   -1.4000325  1.677136  -3.155868 ]]
Iteration 700 of 1000: loss=0.352 " + "l1=0.306" + "l2=0.0466 f=-0.283 shape=(1, 9000, 1)
logits [[ 1.6779903 -1.378775   1.6577739 -3.087854 ]]
Iteration 800 of 1000: loss=0.346 " + "l1=0.3" + "l2=0.0461 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.6382756 -1.3599004  1.6394283 -3.0430157]]
Iteration 900 of 1000: loss=0.341 " + "l1=0.297" + "l2=0.0438 f=-0.278 shape=(1, 9000, 1)
logits [[ 1.6282661 -1.3454516  1.6267688 -3.021901 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.55 " + "l1=4.55" + "l2=0 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.6545024 -1.897638   2.1265423 -3.9411168]]
Iteration 100 of 1000: loss=2.54 " + "l1=1.89" + "l2=0.647 f=-0.265 shape=(1, 9000, 1)
logits [[ 1.1182493 -0.7594087  1.132825  -2.5528831]]
Iteration 200 of 1000: loss=2.03 " + "l1=1.28" + "l2=0.745 f=-0.285 shape=(1, 9000, 1)
logits [[ 0.8282971 -0.4554567  0.8238273 -2.3370383]]
Iteration 300 of 1000: loss=1.72 " + "l1=0.885" + "l2=0.836 f=-0.294 shape=(1, 9000, 1)
logits [[ 0.6034449  -0.2701713   0.61516744 -2.1263406 ]]
Iteration 400 of 1000: loss=1.48 " + "l1=0.606" + "l2=0.874 f=-0.301 shape=(1, 9000, 1)
logits [[ 0.44800684 -0.13318768  0.47312117 -1.9915323 ]]
Iteration 500 of 1000: loss=1.24 " + "l1=0.284" + "l2=0.961 f=-0.297 shape=(1, 9000, 1)
logits [[ 0.2766347   0.03269792  0.31684944 -1.8126979 ]]
Iteration 600 of 1000: loss=1.05 " + "l1=0.0179" + "l2=1.04 f=-0.299 shape=(1, 9000, 1)
logits [[ 0.03967817  0.18435334  0.20226933 -1.6203738 ]]
Iteration 700 of 1000: loss=0.933 " + "l1=0.000573" + "l2=0.932 f=-0.304 shape=(1, 9000, 1)
logits [[-0.0112243  0.1961083  0.1966816 -1.5977602]]
Iteration 800 of 1000: loss=0.869 " + "l1=0" + "l2=0.869 f=-0.3 shape=(1, 9000, 1)
logits [[-0.01815987  0.1925144   0.1882284  -1.5641863 ]]
Iteration 900 of 1000: loss=0.827 " + "l1=0" + "l2=0.827 f=-0.298 shape=(1, 9000, 1)
logits [[-0.01676705  0.19033559  0.18702862 -1.5534142 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.5 " + "l1=2.5" + "l2=0 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.6545024 -1.897638   2.1265423 -3.9411168]]
Iteration 100 of 1000: loss=1.68 " + "l1=1.39" + "l2=0.291 f=-0.274 shape=(1, 9000, 1)
logits [[ 1.4229208 -1.1050295  1.4257561 -2.8392818]]
Iteration 200 of 1000: loss=1.46 " + "l1=1.14" + "l2=0.322 f=-0.277 shape=(1, 9000, 1)
logits [[ 1.2045144  -0.86093116  1.2083119  -2.661449  ]]
Iteration 300 of 1000: loss=1.33 " + "l1=0.975" + "l2=0.353 f=-0.279 shape=(1, 9000, 1)
logits [[ 1.0708586 -0.7018158  1.0715982 -2.555919 ]]
Iteration 400 of 1000: loss=1.24 " + "l1=0.852" + "l2=0.385 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.9520174  -0.59780604  0.95207506 -2.4541278 ]]
Iteration 500 of 1000: loss=1.17 " + "l1=0.763" + "l2=0.408 f=-0.29 shape=(1, 9000, 1)
logits [[ 0.8614561  -0.52323425  0.86315155 -2.3606648 ]]
Iteration 600 of 1000: loss=1.11 " + "l1=0.683" + "l2=0.432 f=-0.29 shape=(1, 9000, 1)
logits [[ 0.7726313 -0.45651    0.7849396 -2.2622185]]
Iteration 700 of 1000: loss=1.06 " + "l1=0.602" + "l2=0.457 f=-0.295 shape=(1, 9000, 1)
logits [[ 0.6858622  -0.3912336   0.70273924 -2.176507  ]]
Iteration 800 of 1000: loss=1.01 " + "l1=0.518" + "l2=0.49 f=-0.299 shape=(1, 9000, 1)
logits [[ 0.5865492  -0.32463673  0.61644256 -2.072361  ]]
Iteration 900 of 1000: loss=0.956 " + "l1=0.43" + "l2=0.526 f=-0.294 shape=(1, 9000, 1)
logits [[ 0.5068834  -0.24709035  0.5343212  -1.9700902 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.53 " + "l1=3.53" + "l2=0 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.6545024 -1.897638   2.1265423 -3.9411168]]
Iteration 100 of 1000: loss=2.15 " + "l1=1.7" + "l2=0.452 f=-0.265 shape=(1, 9000, 1)
logits [[ 1.270706   -0.92553973  1.2693583  -2.6759384 ]]
Iteration 200 of 1000: loss=1.8 " + "l1=1.29" + "l2=0.511 f=-0.276 shape=(1, 9000, 1)
logits [[ 1.022766  -0.6372253  1.0222325 -2.5116417]]
Iteration 300 of 1000: loss=1.58 " + "l1=1.02" + "l2=0.562 f=-0.289 shape=(1, 9000, 1)
logits [[ 0.8311852  -0.47401983  0.839618   -2.3524601 ]]
Iteration 400 of 1000: loss=1.42 " + "l1=0.807" + "l2=0.617 f=-0.295 shape=(1, 9000, 1)
logits [[ 0.6731897  -0.34680185  0.6938674  -2.199031  ]]
Iteration 500 of 1000: loss=1.27 " + "l1=0.588" + "l2=0.686 f=-0.302 shape=(1, 9000, 1)
logits [[ 0.5232462  -0.21462908  0.5437008  -2.0591328 ]]
Iteration 600 of 1000: loss=1.13 " + "l1=0.401" + "l2=0.733 f=-0.298 shape=(1, 9000, 1)
logits [[ 0.40549466 -0.08556798  0.43242523 -1.9429123 ]]
Iteration 700 of 1000: loss=1.03 " + "l1=0.23" + "l2=0.798 f=-0.299 shape=(1, 9000, 1)
logits [[ 0.25109455  0.02899716  0.3257102  -1.8031846 ]]
Iteration 800 of 1000: loss=0.927 " + "l1=0.0742" + "l2=0.853 f=-0.3 shape=(1, 9000, 1)
logits [[ 0.08034596  0.1382602   0.23396334 -1.6515031 ]]
Iteration 900 of 1000: loss=0.855 " + "l1=0.0175" + "l2=0.837 f=-0.297 shape=(1, 9000, 1)
logits [[ 0.00876494  0.17378762  0.19631739 -1.5674361 ]]
--- 276.67842650413513 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00528 " + "l1=0.00528" + "l2=0 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.6545024 -1.897638   2.1265423 -3.9411168]]
Iteration 100 of 1000: loss=0.00519 " + "l1=0.00507" + "l2=0.000123 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.6337996 -1.8962128  2.126661  -3.923433 ]]
Iteration 200 of 1000: loss=0.00515 " + "l1=0.00507" + "l2=8e-05 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.6337168 -1.8964349  2.1269486 -3.9232721]]
Iteration 300 of 1000: loss=0.00513 " + "l1=0.00504" + "l2=9.27e-05 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.631502  -1.8965998  2.1274269 -3.921235 ]]
Iteration 400 of 1000: loss=0.00514 " + "l1=0.00501" + "l2=0.000134 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.628821  -1.8966728  2.1278975 -3.918692 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0528 " + "l1=0.0528" + "l2=0 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.6545024 -1.897638   2.1265423 -3.9411168]]
Iteration 100 of 1000: loss=0.044 " + "l1=0.0394" + "l2=0.00458 f=-0.267 shape=(1, 9000, 1)
logits [[ 2.519781  -1.8883194  2.1259634 -3.8248723]]
Iteration 200 of 1000: loss=0.0402 " + "l1=0.0336" + "l2=0.00668 f=-0.267 shape=(1, 9000, 1)
logits [[ 2.4697356 -1.8912947  2.1340625 -3.7792425]]
Iteration 300 of 1000: loss=0.037 " + "l1=0.0285" + "l2=0.00848 f=-0.266 shape=(1, 9000, 1)
logits [[ 2.4281082 -1.8924114  2.1430376 -3.7413473]]
Iteration 400 of 1000: loss=0.0341 " + "l1=0.0241" + "l2=0.00997 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.38733   -1.888003   2.1462827 -3.703326 ]]
Iteration 500 of 1000: loss=0.0315 " + "l1=0.0202" + "l2=0.0112 f=-0.263 shape=(1, 9000, 1)
logits [[ 2.3495498 -1.8820877  2.1472354 -3.6667953]]
Iteration 600 of 1000: loss=0.029 " + "l1=0.0167" + "l2=0.0123 f=-0.262 shape=(1, 9000, 1)
logits [[ 2.3143914 -1.8765345  2.1470501 -3.6322782]]
Iteration 700 of 1000: loss=0.0266 " + "l1=0.0138" + "l2=0.0128 f=-0.261 shape=(1, 9000, 1)
logits [[ 2.2845435 -1.8711151  2.1461473 -3.6030223]]
Iteration 800 of 1000: loss=0.0246 " + "l1=0.0111" + "l2=0.0135 f=-0.26 shape=(1, 9000, 1)
logits [[ 2.2555788 -1.8654392  2.1447165 -3.5762117]]
Iteration 900 of 1000: loss=0.0226 " + "l1=0.00833" + "l2=0.0142 f=-0.26 shape=(1, 9000, 1)
logits [[ 2.226181  -1.8606617  2.142849  -3.5497105]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.528 " + "l1=0.528" + "l2=0 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.6545024 -1.897638   2.1265423 -3.9411168]]
Iteration 100 of 1000: loss=0.0672 " + "l1=0.00371" + "l2=0.0635 f=-0.273 shape=(1, 9000, 1)
logits [[ 2.120443  -1.8382142  2.1167343 -3.489974 ]]
Iteration 200 of 1000: loss=0.046 " + "l1=0" + "l2=0.046 f=-0.271 shape=(1, 9000, 1)
logits [[ 2.11927   -1.8447353  2.1217918 -3.4821804]]
Iteration 300 of 1000: loss=0.0363 " + "l1=0" + "l2=0.0363 f=-0.269 shape=(1, 9000, 1)
logits [[ 2.1235642 -1.8469642  2.1261325 -3.479405 ]]
Iteration 400 of 1000: loss=0.0311 " + "l1=0.00187" + "l2=0.0292 f=-0.266 shape=(1, 9000, 1)
logits [[ 2.1302264 -1.8464597  2.128354  -3.4777799]]
Iteration 500 of 1000: loss=0.0265 " + "l1=0" + "l2=0.0265 f=-0.266 shape=(1, 9000, 1)
logits [[ 2.1234577 -1.8449773  2.1287467 -3.4697094]]
Iteration 600 of 1000: loss=0.0236 " + "l1=0" + "l2=0.0236 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.122456  -1.8450959  2.1298876 -3.4690378]]
Iteration 700 of 1000: loss=0.0213 " + "l1=0" + "l2=0.0213 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.1237133 -1.844114   2.1299703 -3.4698765]]
Iteration 800 of 1000: loss=0.019 " + "l1=0" + "l2=0.019 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.1256428 -1.8439894  2.1310122 -3.470306 ]]
Iteration 900 of 1000: loss=0.0185 " + "l1=0" + "l2=0.0185 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.1162264 -1.8418145  2.1308436 -3.464986 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.29 " + "l1=0.29" + "l2=0 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.6545024 -1.897638   2.1265423 -3.9411168]]
Iteration 100 of 1000: loss=0.0652 " + "l1=0" + "l2=0.0652 f=-0.273 shape=(1, 9000, 1)
logits [[ 2.117965  -1.8399491  2.1184466 -3.4879658]]
Iteration 200 of 1000: loss=0.0445 " + "l1=0" + "l2=0.0445 f=-0.271 shape=(1, 9000, 1)
logits [[ 2.1238644 -1.8479918  2.1239731 -3.4829705]]
Iteration 300 of 1000: loss=0.0356 " + "l1=0" + "l2=0.0356 f=-0.268 shape=(1, 9000, 1)
logits [[ 2.1209185 -1.8466485  2.1266825 -3.4738271]]
Iteration 400 of 1000: loss=0.0285 " + "l1=0" + "l2=0.0285 f=-0.266 shape=(1, 9000, 1)
logits [[ 2.1257274 -1.8441318  2.1281564 -3.472105 ]]
Iteration 500 of 1000: loss=0.0249 " + "l1=0.000969" + "l2=0.024 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.1313086 -1.8449885  2.129547  -3.4737885]]
Iteration 600 of 1000: loss=0.0213 " + "l1=0" + "l2=0.0213 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.1302898 -1.8441741  2.1307073 -3.4726574]]
Iteration 700 of 1000: loss=0.0195 " + "l1=0" + "l2=0.0195 f=-0.263 shape=(1, 9000, 1)
logits [[ 2.127157  -1.8426844  2.1310608 -3.4687696]]
Iteration 800 of 1000: loss=0.0179 " + "l1=0" + "l2=0.0179 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.123951  -1.8410152  2.130718  -3.468043 ]]
Iteration 900 of 1000: loss=0.0161 " + "l1=0" + "l2=0.0161 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.124725  -1.8377565  2.12966   -3.472036 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.172 " + "l1=0.172" + "l2=0 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.6545024 -1.897638   2.1265423 -3.9411168]]
Iteration 100 of 1000: loss=0.0766 " + "l1=0.0292" + "l2=0.0474 f=-0.269 shape=(1, 9000, 1)
logits [[ 2.215747  -1.8516635  2.1258304 -3.5657015]]
Iteration 200 of 1000: loss=0.0477 " + "l1=0.00226" + "l2=0.0455 f=-0.27 shape=(1, 9000, 1)
logits [[ 2.1323078 -1.8493161  2.1253467 -3.4866724]]
Iteration 300 of 1000: loss=0.0356 " + "l1=0" + "l2=0.0356 f=-0.267 shape=(1, 9000, 1)
logits [[ 2.1260126 -1.847552   2.12874   -3.475528 ]]
Iteration 400 of 1000: loss=0.0286 " + "l1=0" + "l2=0.0286 f=-0.265 shape=(1, 9000, 1)
logits [[ 2.1275527 -1.8450282  2.130145  -3.4707105]]
Iteration 500 of 1000: loss=0.0242 " + "l1=0" + "l2=0.0242 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.129547  -1.8451345  2.1313    -3.4698322]]
Iteration 600 of 1000: loss=0.0213 " + "l1=0" + "l2=0.0213 f=-0.263 shape=(1, 9000, 1)
logits [[ 2.12851   -1.8445767  2.1319416 -3.4680965]]
Iteration 700 of 1000: loss=0.0193 " + "l1=0" + "l2=0.0193 f=-0.262 shape=(1, 9000, 1)
logits [[ 2.1277952 -1.8436469  2.1319716 -3.4659505]]
Iteration 800 of 1000: loss=0.017 " + "l1=0.000485" + "l2=0.0165 f=-0.262 shape=(1, 9000, 1)
logits [[ 2.1334624 -1.8419193  2.131971  -3.4696593]]
Iteration 900 of 1000: loss=0.0158 " + "l1=0.000243" + "l2=0.0155 f=-0.262 shape=(1, 9000, 1)
logits [[ 2.1313539 -1.8374547  2.1306074 -3.4707274]]
--- 268.74247193336487 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.066 " + "l1=0.066" + "l2=0 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.6545024 -1.897638   2.1265423 -3.9411168]]
Iteration 100 of 1000: loss=0.0652 " + "l1=0.0647" + "l2=0.000499 f=-0.263 shape=(1, 9000, 1)
logits [[ 2.5993817 -1.8774861  2.1014209 -3.8734043]]
Iteration 200 of 1000: loss=0.065 " + "l1=0.0645" + "l2=0.000519 f=-0.262 shape=(1, 9000, 1)
logits [[ 2.589917  -1.8736773  2.0969348 -3.862451 ]]
Iteration 300 of 1000: loss=0.0649 " + "l1=0.0643" + "l2=0.000607 f=-0.262 shape=(1, 9000, 1)
logits [[ 2.5787761 -1.8693198  2.0918617 -3.8493338]]
Iteration 400 of 1000: loss=0.0647 " + "l1=0.064" + "l2=0.000702 f=-0.262 shape=(1, 9000, 1)
logits [[ 2.567608  -1.8650552  2.0869312 -3.835879 ]]
Iteration 500 of 1000: loss=0.0646 " + "l1=0.0638" + "l2=0.000829 f=-0.261 shape=(1, 9000, 1)
logits [[ 2.5568633 -1.861019   2.08245   -3.822724 ]]
Iteration 600 of 1000: loss=0.0645 " + "l1=0.0636" + "l2=0.00098 f=-0.261 shape=(1, 9000, 1)
logits [[ 2.5466795 -1.8571155  2.0781913 -3.8101883]]
Iteration 700 of 1000: loss=0.0644 " + "l1=0.0633" + "l2=0.00107 f=-0.26 shape=(1, 9000, 1)
logits [[ 2.536509  -1.853297   2.074115  -3.7974775]]
Iteration 800 of 1000: loss=0.0643 " + "l1=0.0631" + "l2=0.0012 f=-0.26 shape=(1, 9000, 1)
logits [[ 2.5279636 -1.8498284  2.0705335 -3.786762 ]]
Iteration 900 of 1000: loss=0.0643 " + "l1=0.0629" + "l2=0.00139 f=-0.259 shape=(1, 9000, 1)
logits [[ 2.5192204 -1.8461213  2.0667212 -3.7757704]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.66 " + "l1=0.66" + "l2=0 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.6545024 -1.897638   2.1265423 -3.9411168]]
Iteration 100 of 1000: loss=0.595 " + "l1=0.559" + "l2=0.036 f=-0.257 shape=(1, 9000, 1)
logits [[ 2.1831644 -1.7099667  1.9082223 -3.4096184]]
Iteration 200 of 1000: loss=0.567 " + "l1=0.515" + "l2=0.0522 f=-0.255 shape=(1, 9000, 1)
logits [[ 1.9745989 -1.6449614  1.8227977 -3.1709456]]
Iteration 300 of 1000: loss=0.54 " + "l1=0.478" + "l2=0.0628 f=-0.251 shape=(1, 9000, 1)
logits [[ 1.8013927 -1.5820206  1.7514637 -2.974868 ]]
Iteration 400 of 1000: loss=0.518 " + "l1=0.454" + "l2=0.0638 f=-0.247 shape=(1, 9000, 1)
logits [[ 1.6938771 -1.529687   1.6945249 -2.8478973]]
Iteration 500 of 1000: loss=0.503 " + "l1=0.444" + "l2=0.0598 f=-0.241 shape=(1, 9000, 1)
logits [[ 1.6561985 -1.4968154  1.6556388 -2.7800255]]
Iteration 600 of 1000: loss=0.492 " + "l1=0.432" + "l2=0.0595 f=-0.233 shape=(1, 9000, 1)
logits [[ 1.6158319 -1.4653082  1.6177593 -2.7022529]]
Iteration 700 of 1000: loss=0.481 " + "l1=0.423" + "l2=0.0583 f=-0.228 shape=(1, 9000, 1)
logits [[ 1.5886092 -1.4470823  1.5885848 -2.64061  ]]
Iteration 800 of 1000: loss=0.472 " + "l1=0.412" + "l2=0.0594 f=-0.223 shape=(1, 9000, 1)
logits [[ 1.5448493 -1.4270172  1.555589  -2.5665154]]
Iteration 900 of 1000: loss=0.462 " + "l1=0.4" + "l2=0.0612 f=-0.22 shape=(1, 9000, 1)
logits [[ 1.4919653 -1.4115841  1.5208828 -2.4820812]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.6 " + "l1=6.6" + "l2=0 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.6545024 -1.897638   2.1265423 -3.9411168]]
Iteration 100 of 1000: loss=3.28 " + "l1=2.05" + "l2=1.23 f=-0.144 shape=(1, 9000, 1)
logits [[ 0.5486325 -1.1584333  1.0402669 -1.0081863]]
Iteration 200 of 1000: loss=2.54 " + "l1=1.05" + "l2=1.49 f=-0.102 shape=(1, 9000, 1)
logits [[ 0.09728264 -1.0445352   0.7947025  -0.25434905]]
Iteration 300 of 1000: loss=1.99 " + "l1=0.255" + "l2=1.74 f=-0.0532 shape=(1, 9000, 1)
logits [[-0.16767085 -0.9942692   0.6019453   0.34709108]]
Iteration 400 of 1000: loss=1.65 " + "l1=0.0345" + "l2=1.61 f=-0.0449 shape=(1, 9000, 1)
logits [[-0.22758114 -0.96255404  0.5224772   0.4879492 ]]
Iteration 500 of 1000: loss=1.44 " + "l1=0.000897" + "l2=1.43 f=-0.0459 shape=(1, 9000, 1)
logits [[-0.22760482 -0.9662001   0.5056111   0.5047138 ]]
Iteration 600 of 1000: loss=1.28 " + "l1=0.0191" + "l2=1.26 f=-0.0511 shape=(1, 9000, 1)
logits [[-0.20567182 -0.9911106   0.50570595  0.48665398]]
Iteration 700 of 1000: loss=1.14 " + "l1=0" + "l2=1.14 f=-0.0551 shape=(1, 9000, 1)
logits [[-0.21079572 -1.0030891   0.4956739   0.49774185]]
Iteration 800 of 1000: loss=1.04 " + "l1=0.0137" + "l2=1.03 f=-0.0628 shape=(1, 9000, 1)
logits [[-0.21503708 -1.0158054   0.496761    0.48302856]]
Iteration 900 of 1000: loss=0.939 " + "l1=0.00237" + "l2=0.936 f=-0.0609 shape=(1, 9000, 1)
logits [[-0.21029904 -1.025554    0.4973379   0.49496624]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.63 " + "l1=3.63" + "l2=0 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.6545024 -1.897638   2.1265423 -3.9411168]]
Iteration 100 of 1000: loss=2.28 " + "l1=1.76" + "l2=0.528 f=-0.201 shape=(1, 9000, 1)
logits [[ 1.1121336 -1.296059   1.286769  -1.9069227]]
Iteration 200 of 1000: loss=1.97 " + "l1=1.37" + "l2=0.6 f=-0.176 shape=(1, 9000, 1)
logits [[ 0.7737788 -1.1841917  1.0976565 -1.3892722]]
Iteration 300 of 1000: loss=1.74 " + "l1=1.07" + "l2=0.674 f=-0.151 shape=(1, 9000, 1)
logits [[ 0.47106108 -1.0915934   0.97796756 -0.96212274]]
Iteration 400 of 1000: loss=1.55 " + "l1=0.838" + "l2=0.711 f=-0.145 shape=(1, 9000, 1)
logits [[ 0.24231917 -1.0271735   0.865023   -0.65841657]]
Iteration 500 of 1000: loss=1.39 " + "l1=0.674" + "l2=0.721 f=-0.138 shape=(1, 9000, 1)
logits [[ 0.11639613 -1.0271772   0.79145783 -0.4334864 ]]
Iteration 600 of 1000: loss=1.23 " + "l1=0.445" + "l2=0.785 f=-0.123 shape=(1, 9000, 1)
logits [[-0.04546995 -1.0191483   0.6899518  -0.11823522]]
Iteration 700 of 1000: loss=1.07 " + "l1=0.279" + "l2=0.788 f=-0.11 shape=(1, 9000, 1)
logits [[-0.13118055 -1.0194134   0.6091765   0.1027092 ]]
Iteration 800 of 1000: loss=0.923 " + "l1=0.113" + "l2=0.81 f=-0.0994 shape=(1, 9000, 1)
logits [[-0.21706365 -1.0172961   0.52143425  0.31547546]]
Iteration 900 of 1000: loss=0.757 " + "l1=0.0025" + "l2=0.754 f=-0.0933 shape=(1, 9000, 1)
logits [[-0.25052524 -1.042237    0.4620856   0.45753333]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.14 " + "l1=2.14" + "l2=0 f=-0.264 shape=(1, 9000, 1)
logits [[ 2.6545024 -1.897638   2.1265423 -3.9411168]]
Iteration 100 of 1000: loss=1.56 " + "l1=1.33" + "l2=0.23 f=-0.223 shape=(1, 9000, 1)
logits [[ 1.5499196 -1.463019   1.5527009 -2.530153 ]]
Iteration 200 of 1000: loss=1.41 " + "l1=1.12" + "l2=0.283 f=-0.208 shape=(1, 9000, 1)
logits [[ 1.2543827 -1.325607   1.3480945 -2.110114 ]]
Iteration 300 of 1000: loss=1.3 " + "l1=0.996" + "l2=0.3 f=-0.198 shape=(1, 9000, 1)
logits [[ 1.060583  -1.2253741  1.2185308 -1.8457444]]
Iteration 400 of 1000: loss=1.22 " + "l1=0.908" + "l2=0.311 f=-0.196 shape=(1, 9000, 1)
logits [[ 0.9057841 -1.1758991  1.1408697 -1.654432 ]]
Iteration 500 of 1000: loss=1.15 " + "l1=0.818" + "l2=0.328 f=-0.194 shape=(1, 9000, 1)
logits [[ 0.7348348 -1.1312765  1.0693831 -1.4489841]]
Iteration 600 of 1000: loss=1.07 " + "l1=0.729" + "l2=0.342 f=-0.183 shape=(1, 9000, 1)
logits [[ 0.60305065 -1.1076597   1.0082065  -1.2341119 ]]
Iteration 700 of 1000: loss=0.997 " + "l1=0.631" + "l2=0.366 f=-0.172 shape=(1, 9000, 1)
logits [[ 0.46356133 -1.0827156   0.93618333 -1.0066705 ]]
Iteration 800 of 1000: loss=0.927 " + "l1=0.551" + "l2=0.377 f=-0.165 shape=(1, 9000, 1)
logits [[ 0.35454023 -1.0672843   0.8746107  -0.8200252 ]]
Iteration 900 of 1000: loss=0.866 " + "l1=0.5" + "l2=0.366 f=-0.164 shape=(1, 9000, 1)
logits [[ 0.2863128  -1.049118    0.82308644 -0.7146187 ]]
--- 297.7780034542084 seconds ---
Adv result:3
Loading record A05366
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0663 " + "l1=0.0663" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 3.280023  -3.3539858  2.918109  -4.407644 ]]
Iteration 100 of 1000: loss=0.0658 " + "l1=0.0654" + "l2=0.000343 f=-0.388 shape=(1, 9000, 1)
logits [[ 3.2203176 -3.3245997  2.8925855 -4.3392425]]
Iteration 200 of 1000: loss=0.0656 " + "l1=0.0653" + "l2=0.000357 f=-0.387 shape=(1, 9000, 1)
logits [[ 3.2095501 -3.3185313  2.8872347 -4.32678  ]]
Iteration 300 of 1000: loss=0.0655 " + "l1=0.0651" + "l2=0.000431 f=-0.386 shape=(1, 9000, 1)
logits [[ 3.196622  -3.310928   2.8809226 -4.3118415]]
Iteration 400 of 1000: loss=0.0654 " + "l1=0.0649" + "l2=0.000511 f=-0.385 shape=(1, 9000, 1)
logits [[ 3.1837683 -3.3032694  2.8746316 -4.2969694]]
Iteration 500 of 1000: loss=0.0653 " + "l1=0.0647" + "l2=0.000655 f=-0.385 shape=(1, 9000, 1)
logits [[ 3.171426  -3.295754   2.8683715 -4.2828126]]
Iteration 600 of 1000: loss=0.0653 " + "l1=0.0645" + "l2=0.000787 f=-0.384 shape=(1, 9000, 1)
logits [[ 3.1606753 -3.2887783  2.8624067 -4.270633 ]]
Iteration 700 of 1000: loss=0.0652 " + "l1=0.0643" + "l2=0.000866 f=-0.383 shape=(1, 9000, 1)
logits [[ 3.1499584 -3.281772   2.8566153 -4.2583876]]
Iteration 800 of 1000: loss=0.0651 " + "l1=0.0641" + "l2=0.000985 f=-0.383 shape=(1, 9000, 1)
logits [[ 3.1398702 -3.2749836  2.8511147 -4.246614 ]]
Iteration 900 of 1000: loss=0.0651 " + "l1=0.064" + "l2=0.00112 f=-0.382 shape=(1, 9000, 1)
logits [[ 3.1298509 -3.268234   2.845546  -4.2347426]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.663 " + "l1=0.663" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 3.280023  -3.3539858  2.918109  -4.407644 ]]
Iteration 100 of 1000: loss=0.614 " + "l1=0.586" + "l2=0.028 f=-0.36 shape=(1, 9000, 1)
logits [[ 2.7586467 -3.1021593  2.704299  -3.7990746]]
Iteration 200 of 1000: loss=0.592 " + "l1=0.561" + "l2=0.0309 f=-0.355 shape=(1, 9000, 1)
logits [[ 2.607996  -3.0050025  2.6060486 -3.6291487]]
Iteration 300 of 1000: loss=0.578 " + "l1=0.546" + "l2=0.0326 f=-0.351 shape=(1, 9000, 1)
logits [[ 2.5282264 -2.9287634  2.5289702 -3.5326767]]
Iteration 400 of 1000: loss=0.568 " + "l1=0.533" + "l2=0.0355 f=-0.344 shape=(1, 9000, 1)
logits [[ 2.4669354 -2.8600342  2.4685383 -3.452989 ]]
Iteration 500 of 1000: loss=0.561 " + "l1=0.522" + "l2=0.039 f=-0.339 shape=(1, 9000, 1)
logits [[ 2.413702  -2.8010824  2.415626  -3.3841166]]
Iteration 600 of 1000: loss=0.554 " + "l1=0.511" + "l2=0.043 f=-0.333 shape=(1, 9000, 1)
logits [[ 2.3682096 -2.7458854  2.3672056 -3.3223937]]
Iteration 700 of 1000: loss=0.549 " + "l1=0.501" + "l2=0.0475 f=-0.328 shape=(1, 9000, 1)
logits [[ 2.3178902 -2.6938698  2.3178136 -3.2556028]]
Iteration 800 of 1000: loss=0.543 " + "l1=0.491" + "l2=0.052 f=-0.323 shape=(1, 9000, 1)
logits [[ 2.275256  -2.6384332  2.2734962 -3.2027519]]
Iteration 900 of 1000: loss=0.538 " + "l1=0.479" + "l2=0.0587 f=-0.321 shape=(1, 9000, 1)
logits [[ 2.216267  -2.5734499  2.215618  -3.1428657]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=6.63 " + "l1=6.63" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 3.280023  -3.3539858  2.918109  -4.407644 ]]
Iteration 100 of 1000: loss=3.98 " + "l1=2.85" + "l2=1.13 f=-0.274 shape=(1, 9000, 1)
logits [[ 1.2619256 -1.5892186  1.2597035 -2.0293045]]
Iteration 200 of 1000: loss=2.58 " + "l1=1.01" + "l2=1.57 f=-0.19 shape=(1, 9000, 1)
logits [[ 0.47035244 -0.5232256   0.49000123 -1.1956412 ]]
Iteration 300 of 1000: loss=1.73 " + "l1=0.039" + "l2=1.69 f=-0.125 shape=(1, 9000, 1)
logits [[-0.01542339 -0.0223567   0.01660191 -0.4786807 ]]
Iteration 400 of 1000: loss=1.47 " + "l1=0.00773" + "l2=1.47 f=-0.127 shape=(1, 9000, 1)
logits [[-0.02566804  0.00178229  0.00951189 -0.49293315]]
Iteration 500 of 1000: loss=1.38 " + "l1=0.0138" + "l2=1.37 f=-0.129 shape=(1, 9000, 1)
logits [[-0.02877935 -0.00972648  0.00410998 -0.48096025]]
Iteration 600 of 1000: loss=1.31 " + "l1=0.00505" + "l2=1.3 f=-0.127 shape=(1, 9000, 1)
logits [[-0.04288832 -0.01438768 -0.00933517 -0.43980154]]
Iteration 700 of 1000: loss=1.26 " + "l1=0" + "l2=1.26 f=-0.123 shape=(1, 9000, 1)
logits [[-0.02653302 -0.01817821 -0.02073957 -0.42481852]]
Iteration 800 of 1000: loss=1.24 " + "l1=0.0061" + "l2=1.23 f=-0.119 shape=(1, 9000, 1)
logits [[-0.04213191 -0.02099336 -0.01488983 -0.3979242 ]]
Iteration 900 of 1000: loss=1.21 " + "l1=0.00213" + "l2=1.21 f=-0.116 shape=(1, 9000, 1)
logits [[-0.03548973 -0.02361088 -0.02148116 -0.3834421 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.65 " + "l1=3.65" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 3.280023  -3.3539858  2.918109  -4.407644 ]]
Iteration 100 of 1000: loss=2.72 " + "l1=2.34" + "l2=0.374 f=-0.318 shape=(1, 9000, 1)
logits [[ 1.9275239 -2.3235297  1.9368414 -2.8112242]]
Iteration 200 of 1000: loss=2.26 " + "l1=1.74" + "l2=0.524 f=-0.279 shape=(1, 9000, 1)
logits [[ 1.4341348 -1.7229832  1.4357764 -2.2611182]]
Iteration 300 of 1000: loss=1.86 " + "l1=1.17" + "l2=0.687 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.9733855 -1.1455039  0.9785573 -1.83496  ]]
Iteration 400 of 1000: loss=1.52 " + "l1=0.712" + "l2=0.81 f=-0.221 shape=(1, 9000, 1)
logits [[ 0.5881775 -0.6996768  0.5949814 -1.3687019]]
Iteration 500 of 1000: loss=1.37 " + "l1=0.431" + "l2=0.936 f=-0.196 shape=(1, 9000, 1)
logits [[ 0.32789934 -0.44440615  0.3391492  -1.0059646 ]]
Iteration 600 of 1000: loss=1.28 " + "l1=0.282" + "l2=0.997 f=-0.169 shape=(1, 9000, 1)
logits [[ 0.19272573 -0.31325984  0.20001481 -0.7571298 ]]
Iteration 700 of 1000: loss=1.23 " + "l1=0.2" + "l2=1.03 f=-0.149 shape=(1, 9000, 1)
logits [[ 0.11768577 -0.23695357  0.12730494 -0.60218734]]
Iteration 800 of 1000: loss=1.2 " + "l1=0.171" + "l2=1.02 f=-0.138 shape=(1, 9000, 1)
logits [[ 0.09204787 -0.21037236  0.10114986 -0.5356209 ]]
Iteration 900 of 1000: loss=1.17 " + "l1=0.127" + "l2=1.04 f=-0.127 shape=(1, 9000, 1)
logits [[ 0.0603125  -0.1595913   0.0707644  -0.47986108]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=5.14 " + "l1=5.14" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 3.280023  -3.3539858  2.918109  -4.407644 ]]
Iteration 100 of 1000: loss=3.43 " + "l1=2.71" + "l2=0.723 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.5683233 -1.9203818  1.5709745 -2.398539 ]]
Iteration 200 of 1000: loss=2.53 " + "l1=1.52" + "l2=1.01 f=-0.249 shape=(1, 9000, 1)
logits [[ 0.9023669  -1.0544299   0.91150576 -1.7569848 ]]
Iteration 300 of 1000: loss=1.82 " + "l1=0.572" + "l2=1.25 f=-0.181 shape=(1, 9000, 1)
logits [[ 0.3400075  -0.38783115  0.3497984  -1.025463  ]]
Iteration 400 of 1000: loss=1.45 " + "l1=0.0688" + "l2=1.38 f=-0.136 shape=(1, 9000, 1)
logits [[-0.00106896 -0.06417999  0.02460095 -0.5016737 ]]
Iteration 500 of 1000: loss=1.31 " + "l1=0.00513" + "l2=1.31 f=-0.131 shape=(1, 9000, 1)
logits [[-0.00878687 -0.01541244 -0.01036189 -0.4910447 ]]
Iteration 600 of 1000: loss=1.25 " + "l1=0.00566" + "l2=1.24 f=-0.127 shape=(1, 9000, 1)
logits [[-0.03278634 -0.01803783 -0.01073454 -0.44833302]]
Iteration 700 of 1000: loss=1.21 " + "l1=0" + "l2=1.21 f=-0.121 shape=(1, 9000, 1)
logits [[-0.0485665  -0.01726979 -0.02130083 -0.3980173 ]]
Iteration 800 of 1000: loss=1.19 " + "l1=0.0101" + "l2=1.18 f=-0.117 shape=(1, 9000, 1)
logits [[-0.03182074 -0.02888594 -0.01581763 -0.39201316]]
Iteration 900 of 1000: loss=1.17 " + "l1=0.00589" + "l2=1.16 f=-0.112 shape=(1, 9000, 1)
logits [[-0.0377629  -0.03009574 -0.02249961 -0.35775283]]
--- 303.28134179115295 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00362 " + "l1=0.00362" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 3.280023  -3.3539858  2.918109  -4.407644 ]]
Iteration 100 of 1000: loss=0.00343 " + "l1=0.00326" + "l2=0.00017 f=-0.39 shape=(1, 9000, 1)
logits [[ 3.2430327 -3.354013   2.9173717 -4.365621 ]]
Iteration 200 of 1000: loss=0.00338 " + "l1=0.00323" + "l2=0.000149 f=-0.39 shape=(1, 9000, 1)
logits [[ 3.2397804 -3.353926   2.9170892 -4.362268 ]]
Iteration 300 of 1000: loss=0.00338 " + "l1=0.00317" + "l2=0.000206 f=-0.39 shape=(1, 9000, 1)
logits [[ 3.234126  -3.353852   2.916997  -4.3563604]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0362 " + "l1=0.0362" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 3.280023  -3.3539858  2.918109  -4.407644 ]]
Iteration 100 of 1000: loss=0.0188 " + "l1=0.00881" + "l2=0.00996 f=-0.383 shape=(1, 9000, 1)
logits [[ 2.9984581 -3.3515575  2.9103653 -4.08887  ]]
Iteration 200 of 1000: loss=0.0116 " + "l1=0.000596" + "l2=0.011 f=-0.382 shape=(1, 9000, 1)
logits [[ 2.916638  -3.3526719  2.9106762 -4.002913 ]]
Iteration 300 of 1000: loss=0.00891 " + "l1=0.000118" + "l2=0.00879 f=-0.385 shape=(1, 9000, 1)
logits [[ 2.9156814 -3.3600256  2.9145002 -4.0088363]]
Iteration 400 of 1000: loss=0.00773 " + "l1=0.000108" + "l2=0.00762 f=-0.386 shape=(1, 9000, 1)
logits [[ 2.9183502 -3.362344   2.9172707 -4.016644 ]]
Iteration 500 of 1000: loss=0.0069 " + "l1=7.27e-05" + "l2=0.00683 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.9211447 -3.364167   2.9204175 -4.024276 ]]
Iteration 600 of 1000: loss=0.00654 " + "l1=0" + "l2=0.00654 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.9145143 -3.3645196  2.9227037 -4.0207286]]
Iteration 700 of 1000: loss=0.00575 " + "l1=0" + "l2=0.00575 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.923067  -3.3649616  2.9241188 -4.0338635]]
Iteration 800 of 1000: loss=0.0057 " + "l1=0" + "l2=0.0057 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.9193711 -3.364612   2.9249313 -4.0333266]]
Iteration 900 of 1000: loss=0.00539 " + "l1=0" + "l2=0.00539 f=-0.389 shape=(1, 9000, 1)
logits [[ 2.9245985 -3.3646107  2.9258766 -4.042392 ]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0199 " + "l1=0.0199" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 3.280023  -3.3539858  2.918109  -4.407644 ]]
Iteration 100 of 1000: loss=0.0146 " + "l1=0.0116" + "l2=0.00305 f=-0.387 shape=(1, 9000, 1)
logits [[ 3.1251912 -3.3537793  2.9150128 -4.233515 ]]
Iteration 200 of 1000: loss=0.0128 " + "l1=0.0088" + "l2=0.00399 f=-0.386 shape=(1, 9000, 1)
logits [[ 3.0719626 -3.3533268  2.9120412 -4.1749806]]
Iteration 300 of 1000: loss=0.0111 " + "l1=0.00609" + "l2=0.00504 f=-0.385 shape=(1, 9000, 1)
logits [[ 3.021387  -3.353324   2.910741  -4.1202774]]
Iteration 400 of 1000: loss=0.00954 " + "l1=0.00333" + "l2=0.00621 f=-0.385 shape=(1, 9000, 1)
logits [[ 2.9705348 -3.3531609  2.9099615 -4.066667 ]]
Iteration 500 of 1000: loss=0.00808 " + "l1=0.000705" + "l2=0.00737 f=-0.385 shape=(1, 9000, 1)
logits [[ 2.924955  -3.3555624  2.9121401 -4.0210333]]
Iteration 600 of 1000: loss=0.0069 " + "l1=3.01e-05" + "l2=0.00687 f=-0.386 shape=(1, 9000, 1)
logits [[ 2.9175806 -3.3598766  2.9170327 -4.0199265]]
Iteration 700 of 1000: loss=0.00624 " + "l1=0.000115" + "l2=0.00613 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.9229507 -3.3624172  2.9208612 -4.03104  ]]
Iteration 800 of 1000: loss=0.00605 " + "l1=0" + "l2=0.00605 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.92178   -3.363096   2.9230702 -4.0336485]]
Iteration 900 of 1000: loss=0.00548 " + "l1=7.47e-05" + "l2=0.00541 f=-0.389 shape=(1, 9000, 1)
logits [[ 2.9255424 -3.363359   2.9241843 -4.0415735]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0118 " + "l1=0.0118" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 3.280023  -3.3539858  2.918109  -4.407644 ]]
Iteration 100 of 1000: loss=0.00987 " + "l1=0.00873" + "l2=0.00113 f=-0.388 shape=(1, 9000, 1)
logits [[ 3.1845078 -3.3526275  2.915767  -4.2997823]]
Iteration 200 of 1000: loss=0.00929 " + "l1=0.0079" + "l2=0.00139 f=-0.388 shape=(1, 9000, 1)
logits [[ 3.1578083 -3.3525138  2.914879  -4.270605 ]]
Iteration 300 of 1000: loss=0.00881 " + "l1=0.00713" + "l2=0.00168 f=-0.388 shape=(1, 9000, 1)
logits [[ 3.1342123 -3.3533692  2.9147367 -4.245738 ]]
Iteration 400 of 1000: loss=0.00839 " + "l1=0.00641" + "l2=0.00198 f=-0.387 shape=(1, 9000, 1)
logits [[ 3.1112144 -3.353615   2.913856  -4.2213984]]
Iteration 500 of 1000: loss=0.00802 " + "l1=0.00569" + "l2=0.00233 f=-0.388 shape=(1, 9000, 1)
logits [[ 3.0886834 -3.3541706  2.9135573 -4.1983585]]
Iteration 600 of 1000: loss=0.00768 " + "l1=0.00503" + "l2=0.00265 f=-0.388 shape=(1, 9000, 1)
logits [[ 3.0682507 -3.3547976  2.9134543 -4.1774635]]
Iteration 700 of 1000: loss=0.0074 " + "l1=0.00438" + "l2=0.00302 f=-0.388 shape=(1, 9000, 1)
logits [[ 3.04706   -3.3542275  2.9123118 -4.1563854]]
Iteration 800 of 1000: loss=0.00716 " + "l1=0.00376" + "l2=0.0034 f=-0.388 shape=(1, 9000, 1)
logits [[ 3.027467  -3.3541367  2.9118154 -4.1373906]]
Iteration 900 of 1000: loss=0.00681 " + "l1=0.00317" + "l2=0.00364 f=-0.388 shape=(1, 9000, 1)
logits [[ 3.0095117 -3.3538547  2.911844  -4.119687 ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0158 " + "l1=0.0158" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 3.280023  -3.3539858  2.918109  -4.407644 ]]
Iteration 100 of 1000: loss=0.0124 " + "l1=0.0104" + "l2=0.002 f=-0.387 shape=(1, 9000, 1)
logits [[ 3.153472  -3.3522944  2.914695  -4.264748 ]]
Iteration 200 of 1000: loss=0.0113 " + "l1=0.00887" + "l2=0.00248 f=-0.387 shape=(1, 9000, 1)
logits [[ 3.116579  -3.3533964  2.9138608 -4.225063 ]]
Iteration 300 of 1000: loss=0.0104 " + "l1=0.0073" + "l2=0.0031 f=-0.387 shape=(1, 9000, 1)
logits [[ 3.0793273 -3.3537686  2.912513  -4.1848936]]
Iteration 400 of 1000: loss=0.00952 " + "l1=0.00574" + "l2=0.00378 f=-0.386 shape=(1, 9000, 1)
logits [[ 3.0423508 -3.3540883  2.9111803 -4.1453204]]
Iteration 500 of 1000: loss=0.00875 " + "l1=0.00429" + "l2=0.00446 f=-0.386 shape=(1, 9000, 1)
logits [[ 3.008815  -3.353901   2.9108112 -4.110245 ]]
Iteration 600 of 1000: loss=0.008 " + "l1=0.00298" + "l2=0.00502 f=-0.386 shape=(1, 9000, 1)
logits [[ 2.9800162 -3.3537233  2.9118538 -4.0814657]]
Iteration 700 of 1000: loss=0.00731 " + "l1=0.00161" + "l2=0.0057 f=-0.386 shape=(1, 9000, 1)
logits [[ 2.9495225 -3.354339   2.9127324 -4.0513544]]
Iteration 800 of 1000: loss=0.00657 " + "l1=0.00014" + "l2=0.00643 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.9210505 -3.3585021  2.9178586 -4.027551 ]]
Iteration 900 of 1000: loss=0.00604 " + "l1=9.64e-06" + "l2=0.00603 f=-0.388 shape=(1, 9000, 1)
logits [[ 2.9212458 -3.360488   2.9210255 -4.0323734]]
--- 263.65632939338684 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0769 " + "l1=0.0769" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 3.280023  -3.3539858  2.918109  -4.407644 ]]
Iteration 100 of 1000: loss=0.0754 " + "l1=0.0746" + "l2=0.000847 f=-0.384 shape=(1, 9000, 1)
logits [[ 3.1847005 -3.3349094  2.8866088 -4.271939 ]]
Iteration 200 of 1000: loss=0.075 " + "l1=0.074" + "l2=0.00099 f=-0.383 shape=(1, 9000, 1)
logits [[ 3.1593847 -3.3288083  2.8769598 -4.2376533]]
Iteration 300 of 1000: loss=0.0746 " + "l1=0.0734" + "l2=0.0012 f=-0.381 shape=(1, 9000, 1)
logits [[ 3.1352785 -3.323337   2.8674295 -4.204018 ]]
Iteration 400 of 1000: loss=0.0743 " + "l1=0.0728" + "l2=0.00144 f=-0.38 shape=(1, 9000, 1)
logits [[ 3.1122108 -3.3175933  2.8580546 -4.1711535]]
Iteration 500 of 1000: loss=0.0741 " + "l1=0.0723" + "l2=0.00175 f=-0.378 shape=(1, 9000, 1)
logits [[ 3.0907366 -3.3117414  2.8490086 -4.1403427]]
Iteration 600 of 1000: loss=0.0737 " + "l1=0.0718" + "l2=0.00195 f=-0.376 shape=(1, 9000, 1)
logits [[ 3.0694783 -3.305665   2.8401985 -4.1099105]]
Iteration 700 of 1000: loss=0.0735 " + "l1=0.0713" + "l2=0.00222 f=-0.375 shape=(1, 9000, 1)
logits [[ 3.0487387 -3.29922    2.8309639 -4.0796757]]
Iteration 800 of 1000: loss=0.0733 " + "l1=0.0708" + "l2=0.00251 f=-0.373 shape=(1, 9000, 1)
logits [[ 3.030225  -3.2929416  2.822141  -4.052136 ]]
Iteration 900 of 1000: loss=0.0731 " + "l1=0.0704" + "l2=0.00269 f=-0.372 shape=(1, 9000, 1)
logits [[ 3.0128362 -3.286776   2.8136175 -4.026177 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.769 " + "l1=0.769" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 3.280023  -3.3539858  2.918109  -4.407644 ]]
Iteration 100 of 1000: loss=0.646 " + "l1=0.596" + "l2=0.0499 f=-0.334 shape=(1, 9000, 1)
logits [[ 2.571745  -3.1764338  2.614704  -3.3469718]]
Iteration 200 of 1000: loss=0.61 " + "l1=0.55" + "l2=0.0599 f=-0.321 shape=(1, 9000, 1)
logits [[ 2.3426502 -3.1104128  2.4912496 -3.0064569]]
Iteration 300 of 1000: loss=0.583 " + "l1=0.511" + "l2=0.072 f=-0.307 shape=(1, 9000, 1)
logits [[ 2.1683624 -3.0455103  2.3799388 -2.7314858]]
Iteration 400 of 1000: loss=0.561 " + "l1=0.478" + "l2=0.0833 f=-0.293 shape=(1, 9000, 1)
logits [[ 2.0262525 -2.9863536  2.2822065 -2.4943342]]
Iteration 500 of 1000: loss=0.543 " + "l1=0.45" + "l2=0.0929 f=-0.281 shape=(1, 9000, 1)
logits [[ 1.9144516 -2.936969   2.1988068 -2.2998729]]
Iteration 600 of 1000: loss=0.529 " + "l1=0.428" + "l2=0.101 f=-0.27 shape=(1, 9000, 1)
logits [[ 1.8289168 -2.910349   2.1392305 -2.1397462]]
Iteration 700 of 1000: loss=0.517 " + "l1=0.409" + "l2=0.108 f=-0.261 shape=(1, 9000, 1)
logits [[ 1.7542758 -2.8901055  2.089623  -1.9982331]]
Iteration 800 of 1000: loss=0.506 " + "l1=0.394" + "l2=0.112 f=-0.253 shape=(1, 9000, 1)
logits [[ 1.695334  -2.8702993  2.050867  -1.8863376]]
Iteration 900 of 1000: loss=0.496 " + "l1=0.379" + "l2=0.116 f=-0.244 shape=(1, 9000, 1)
logits [[ 1.6390343 -2.8501048  2.0134265 -1.7791793]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.69 " + "l1=7.69" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 3.280023  -3.3539858  2.918109  -4.407644 ]]
Iteration 100 of 1000: loss=2.79 " + "l1=0.953" + "l2=1.84 f=-0.102 shape=(1, 9000, 1)
logits [[ 0.38002512 -2.3960483   1.280967    0.32784414]]
Iteration 200 of 1000: loss=1.73 " + "l1=0.00931" + "l2=1.72 f=-0.0498 shape=(1, 9000, 1)
logits [[ 0.0282765  -2.0275226   0.90474236  0.89543504]]
Iteration 300 of 1000: loss=1.39 " + "l1=0.0202" + "l2=1.37 f=-0.0528 shape=(1, 9000, 1)
logits [[ 0.00575344 -1.9698792   0.88663715  0.86644036]]
Iteration 400 of 1000: loss=1.22 " + "l1=0.0296" + "l2=1.19 f=-0.0614 shape=(1, 9000, 1)
logits [[-0.01961528 -1.9532745   0.8784789   0.8488937 ]]
Iteration 500 of 1000: loss=1.08 " + "l1=0" + "l2=1.08 f=-0.0593 shape=(1, 9000, 1)
logits [[-0.04395723 -1.9460058   0.8650766   0.88763195]]
Iteration 600 of 1000: loss=0.964 " + "l1=0" + "l2=0.964 f=-0.0589 shape=(1, 9000, 1)
logits [[-0.03906903 -1.9450138   0.87199837  0.8766062 ]]
Iteration 700 of 1000: loss=0.881 " + "l1=0" + "l2=0.881 f=-0.058 shape=(1, 9000, 1)
logits [[-0.04383977 -1.9337368   0.86543155  0.8801768 ]]
Iteration 800 of 1000: loss=0.822 " + "l1=0" + "l2=0.822 f=-0.0551 shape=(1, 9000, 1)
logits [[-0.04646137 -1.9122047   0.8503289   0.8880893 ]]
Iteration 900 of 1000: loss=0.77 " + "l1=0.0211" + "l2=0.749 f=-0.0551 shape=(1, 9000, 1)
logits [[-0.0101778 -1.899871   0.855447   0.8343047]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=4.23 " + "l1=4.23" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 3.280023  -3.3539858  2.918109  -4.407644 ]]
Iteration 100 of 1000: loss=2.21 " + "l1=1.33" + "l2=0.88 f=-0.166 shape=(1, 9000, 1)
logits [[ 0.9476203 -2.6297967  1.7157618 -0.6988055]]
Iteration 200 of 1000: loss=1.68 " + "l1=0.789" + "l2=0.895 f=-0.122 shape=(1, 9000, 1)
logits [[ 0.5567286  -2.4266875   1.4084405  -0.02523577]]
Iteration 300 of 1000: loss=1.34 " + "l1=0.407" + "l2=0.935 f=-0.0835 shape=(1, 9000, 1)
logits [[ 0.29616112 -2.184227    1.1471997   0.4070048 ]]
Iteration 400 of 1000: loss=1.05 " + "l1=0" + "l2=1.05 f=-0.0303 shape=(1, 9000, 1)
logits [[ 0.07289848 -1.877961    0.8380787   0.84579444]]
Iteration 500 of 1000: loss=0.876 " + "l1=0.0108" + "l2=0.865 f=-0.0257 shape=(1, 9000, 1)
logits [[ 0.10916504 -1.8496025   0.82875824  0.8090337 ]]
Iteration 600 of 1000: loss=0.778 " + "l1=0" + "l2=0.778 f=-0.0208 shape=(1, 9000, 1)
logits [[ 0.12161082 -1.8670822   0.8227159   0.839579  ]]
Iteration 700 of 1000: loss=0.699 " + "l1=0.0118" + "l2=0.687 f=-0.0226 shape=(1, 9000, 1)
logits [[ 0.15795651 -1.8975452   0.8353244   0.81389606]]
Iteration 800 of 1000: loss=0.619 " + "l1=0" + "l2=0.619 f=-0.0209 shape=(1, 9000, 1)
logits [[ 0.15993047 -1.9159584   0.8286355   0.8436984 ]]
Iteration 900 of 1000: loss=0.551 " + "l1=0.00129" + "l2=0.549 f=-0.0147 shape=(1, 9000, 1)
logits [[ 0.19357422 -1.9315361   0.8406569   0.8383107 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.5 " + "l1=2.5" + "l2=0 f=-0.391 shape=(1, 9000, 1)
logits [[ 3.280023  -3.3539858  2.918109  -4.407644 ]]
Iteration 100 of 1000: loss=1.63 " + "l1=1.27" + "l2=0.355 f=-0.254 shape=(1, 9000, 1)
logits [[ 1.6034707 -2.8908014  2.0906508 -1.8180159]]
Iteration 200 of 1000: loss=1.35 " + "l1=0.916" + "l2=0.437 f=-0.194 shape=(1, 9000, 1)
logits [[ 1.1461954 -2.686943   1.7918986 -1.02752  ]]
Iteration 300 of 1000: loss=1.15 " + "l1=0.664" + "l2=0.49 f=-0.145 shape=(1, 9000, 1)
logits [[ 0.8343446 -2.4845572  1.5567153 -0.485942 ]]
Iteration 400 of 1000: loss=1.04 " + "l1=0.524" + "l2=0.513 f=-0.124 shape=(1, 9000, 1)
logits [[ 0.6719695  -2.3315747   1.3885244  -0.22341514]]
Iteration 500 of 1000: loss=0.943 " + "l1=0.395" + "l2=0.547 f=-0.106 shape=(1, 9000, 1)
logits [[ 0.5156334  -2.2037356   1.2396398   0.02296996]]
Iteration 600 of 1000: loss=0.845 " + "l1=0.272" + "l2=0.573 f=-0.0871 shape=(1, 9000, 1)
logits [[ 0.37570956 -2.0853238   1.099112    0.26198032]]
Iteration 700 of 1000: loss=0.746 " + "l1=0.137" + "l2=0.609 f=-0.058 shape=(1, 9000, 1)
logits [[ 0.24647704 -1.9699445   0.9564808   0.5349528 ]]
Iteration 800 of 1000: loss=0.625 " + "l1=0.00686" + "l2=0.618 f=-0.0259 shape=(1, 9000, 1)
logits [[ 0.16072422 -1.881141    0.81901056  0.79790133]]
Iteration 900 of 1000: loss=0.51 " + "l1=0.00843" + "l2=0.501 f=-0.0136 shape=(1, 9000, 1)
logits [[ 0.21870327 -1.921698    0.8372906   0.8113401 ]]
--- 301.0818359851837 seconds ---
Adv result:3
Loading model
Loading ground truth file
Attack diff is running...
Loading record A05392
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0472 " + "l1=0.0472" + "l2=0 f=-0.86 shape=(1, 9000, 1)
logits [[ 2.8460045 -1.876845   2.1067512 -6.515999 ]]
Iteration 100 of 1000: loss=0.0464 " + "l1=0.0458" + "l2=0.000586 f=-0.863 shape=(1, 9000, 1)
logits [[ 2.768815  -1.8101207  2.065839  -6.4772086]]
Iteration 200 of 1000: loss=0.0462 " + "l1=0.0455" + "l2=0.000668 f=-0.864 shape=(1, 9000, 1)
logits [[ 2.754476  -1.7964152  2.0579288 -6.4706497]]
Iteration 300 of 1000: loss=0.046 " + "l1=0.0453" + "l2=0.000767 f=-0.864 shape=(1, 9000, 1)
logits [[ 2.741862  -1.7847978  2.05101   -6.4640965]]
Iteration 400 of 1000: loss=0.0459 " + "l1=0.0451" + "l2=0.000812 f=-0.865 shape=(1, 9000, 1)
logits [[ 2.7320974 -1.7779174  2.047002  -6.4597883]]
Iteration 500 of 1000: loss=0.0459 " + "l1=0.0449" + "l2=0.000994 f=-0.865 shape=(1, 9000, 1)
logits [[ 2.722938  -1.7705171  2.042872  -6.4544945]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.472 " + "l1=0.472" + "l2=0 f=-0.86 shape=(1, 9000, 1)
logits [[ 2.8460045 -1.876845   2.1067512 -6.515999 ]]
Iteration 100 of 1000: loss=0.393 " + "l1=0.348" + "l2=0.0452 f=-0.881 shape=(1, 9000, 1)
logits [[ 2.1720228 -1.3071418  1.8136159 -6.202723 ]]
Iteration 200 of 1000: loss=0.366 " + "l1=0.304" + "l2=0.0619 f=-0.899 shape=(1, 9000, 1)
logits [[ 1.9236394 -1.1136725  1.7442529 -6.149738 ]]
Iteration 300 of 1000: loss=0.347 " + "l1=0.271" + "l2=0.0756 f=-0.915 shape=(1, 9000, 1)
logits [[ 1.7426968  -0.97214764  1.6878469  -6.117428  ]]
Iteration 400 of 1000: loss=0.334 " + "l1=0.255" + "l2=0.0792 f=-0.918 shape=(1, 9000, 1)
logits [[ 1.6580882  -0.89349914  1.639244   -6.077472  ]]
Iteration 500 of 1000: loss=0.322 " + "l1=0.24" + "l2=0.0819 f=-0.925 shape=(1, 9000, 1)
logits [[ 1.5900761  -0.81484854  1.5862422  -6.059668  ]]
Iteration 600 of 1000: loss=0.314 " + "l1=0.23" + "l2=0.0836 f=-0.922 shape=(1, 9000, 1)
logits [[ 1.53803   -0.7632815  1.5387018 -6.002975 ]]
Iteration 700 of 1000: loss=0.307 " + "l1=0.221" + "l2=0.086 f=-0.922 shape=(1, 9000, 1)
logits [[ 1.4990568  -0.70690566  1.4840444  -5.9649534 ]]
Iteration 800 of 1000: loss=0.3 " + "l1=0.209" + "l2=0.0913 f=-0.923 shape=(1, 9000, 1)
logits [[ 1.4411329 -0.6468172  1.426221  -5.9105945]]
Iteration 900 of 1000: loss=0.293 " + "l1=0.199" + "l2=0.0948 f=-0.922 shape=(1, 9000, 1)
logits [[ 1.3878658 -0.5973885  1.3830006 -5.8627877]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.72 " + "l1=4.72" + "l2=0 f=-0.86 shape=(1, 9000, 1)
logits [[ 2.8460045 -1.876845   2.1067512 -6.515999 ]]
Iteration 100 of 1000: loss=0.911 " + "l1=0.00788" + "l2=0.903 f=-0.996 shape=(1, 9000, 1)
logits [[ 0.48005846  0.5386294   0.5465103  -5.550472  ]]
Iteration 200 of 1000: loss=0.672 " + "l1=0" + "l2=0.672 f=-0.991 shape=(1, 9000, 1)
logits [[ 0.53812987  0.54209185  0.53269947 -5.5780625 ]]
Iteration 300 of 1000: loss=0.593 " + "l1=0.00271" + "l2=0.59 f=-0.987 shape=(1, 9000, 1)
logits [[ 0.5311162   0.53323305  0.5359416  -5.54666   ]]
Iteration 400 of 1000: loss=0.548 " + "l1=0" + "l2=0.548 f=-0.981 shape=(1, 9000, 1)
logits [[ 0.52482533  0.5321465   0.5011841  -5.48288   ]]
Iteration 500 of 1000: loss=0.499 " + "l1=0" + "l2=0.499 f=-0.978 shape=(1, 9000, 1)
logits [[ 0.48680362  0.51938105  0.5123447  -5.429035  ]]
Iteration 600 of 1000: loss=0.474 " + "l1=0" + "l2=0.474 f=-0.974 shape=(1, 9000, 1)
logits [[ 0.47672445  0.53849876  0.49504387 -5.4050913 ]]
Iteration 700 of 1000: loss=0.436 " + "l1=0.00844" + "l2=0.427 f=-0.966 shape=(1, 9000, 1)
logits [[ 0.50088197  0.50267017  0.51111215 -5.3781133 ]]
Iteration 800 of 1000: loss=0.431 " + "l1=0" + "l2=0.431 f=-0.971 shape=(1, 9000, 1)
logits [[ 0.40066245  0.5451538   0.48765603 -5.3163037 ]]
Iteration 900 of 1000: loss=0.398 " + "l1=0" + "l2=0.398 f=-0.959 shape=(1, 9000, 1)
logits [[ 0.44432196  0.5190639   0.4725443  -5.2737546 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.6 " + "l1=2.6" + "l2=0 f=-0.86 shape=(1, 9000, 1)
logits [[ 2.8460045 -1.876845   2.1067512 -6.515999 ]]
Iteration 100 of 1000: loss=0.948 " + "l1=0.302" + "l2=0.646 f=-0.987 shape=(1, 9000, 1)
logits [[ 0.7550316   0.21636069  0.76608557 -5.6858234 ]]
Iteration 200 of 1000: loss=0.643 " + "l1=0" + "l2=0.643 f=-0.996 shape=(1, 9000, 1)
logits [[ 0.51367176  0.5407815   0.5330987  -5.5722384 ]]
Iteration 300 of 1000: loss=0.548 " + "l1=0.00385" + "l2=0.544 f=-0.988 shape=(1, 9000, 1)
logits [[ 0.50542915  0.5191656   0.5261651  -5.5023117 ]]
Iteration 400 of 1000: loss=0.484 " + "l1=0.00208" + "l2=0.482 f=-0.975 shape=(1, 9000, 1)
logits [[ 0.5070982   0.503312    0.50215346 -5.414519  ]]
Iteration 500 of 1000: loss=0.443 " + "l1=0.00233" + "l2=0.441 f=-0.97 shape=(1, 9000, 1)
logits [[ 0.49036184  0.4996437   0.5038891  -5.372095  ]]
Iteration 600 of 1000: loss=0.407 " + "l1=0.00122" + "l2=0.406 f=-0.959 shape=(1, 9000, 1)
logits [[ 0.49171123  0.48949274  0.4915883  -5.3103647 ]]
Iteration 700 of 1000: loss=0.389 " + "l1=0.00837" + "l2=0.381 f=-0.96 shape=(1, 9000, 1)
logits [[ 0.4334545   0.478397    0.49362057 -5.2435837 ]]
Iteration 800 of 1000: loss=0.362 " + "l1=0" + "l2=0.362 f=-0.951 shape=(1, 9000, 1)
logits [[ 0.43560764  0.48009133  0.46902812 -5.1892695 ]]
Iteration 900 of 1000: loss=0.339 " + "l1=0" + "l2=0.339 f=-0.943 shape=(1, 9000, 1)
logits [[ 0.45114434  0.4628219   0.46228483 -5.146664  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.53 " + "l1=1.53" + "l2=0 f=-0.86 shape=(1, 9000, 1)
logits [[ 2.8460045 -1.876845   2.1067512 -6.515999 ]]
Iteration 100 of 1000: loss=0.838 " + "l1=0.525" + "l2=0.313 f=-0.954 shape=(1, 9000, 1)
logits [[ 1.2115782  -0.39735594  1.2176905  -5.848657  ]]
Iteration 200 of 1000: loss=0.669 " + "l1=0.301" + "l2=0.368 f=-0.972 shape=(1, 9000, 1)
logits [[ 0.9300144   0.02145268  0.9485697  -5.7877183 ]]
Iteration 300 of 1000: loss=0.576 " + "l1=0.178" + "l2=0.399 f=-0.973 shape=(1, 9000, 1)
logits [[ 0.7695466   0.22950609  0.7765671  -5.6693006 ]]
Iteration 400 of 1000: loss=0.503 " + "l1=0.0794" + "l2=0.424 f=-0.973 shape=(1, 9000, 1)
logits [[ 0.60973483  0.37923312  0.62365454 -5.5045424 ]]
Iteration 500 of 1000: loss=0.426 " + "l1=0.00242" + "l2=0.424 f=-0.967 shape=(1, 9000, 1)
logits [[ 0.48456708  0.49092406  0.4983841  -5.34256   ]]
Iteration 600 of 1000: loss=0.371 " + "l1=0" + "l2=0.371 f=-0.956 shape=(1, 9000, 1)
logits [[ 0.4833698   0.48673332  0.48407993 -5.277756  ]]
Iteration 700 of 1000: loss=0.336 " + "l1=0" + "l2=0.336 f=-0.948 shape=(1, 9000, 1)
logits [[ 0.4564959   0.47863537  0.47702166 -5.2041183 ]]
Iteration 800 of 1000: loss=0.308 " + "l1=0" + "l2=0.308 f=-0.94 shape=(1, 9000, 1)
logits [[ 0.4632197   0.47018713  0.4628164  -5.157518  ]]
Iteration 900 of 1000: loss=0.286 " + "l1=0" + "l2=0.286 f=-0.932 shape=(1, 9000, 1)
logits [[ 0.44450635  0.463319    0.45572492 -5.092708  ]]
--- 258.292103767395 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00739 " + "l1=0.00739" + "l2=0 f=-0.86 shape=(1, 9000, 1)
logits [[ 2.8460045 -1.876845   2.1067512 -6.515999 ]]
Iteration 100 of 1000: loss=0.00708 " + "l1=0.00681" + "l2=0.000265 f=-0.863 shape=(1, 9000, 1)
logits [[ 2.8037457 -1.8833039  2.1222951 -6.495057 ]]
Iteration 200 of 1000: loss=0.00701 " + "l1=0.00675" + "l2=0.000255 f=-0.864 shape=(1, 9000, 1)
logits [[ 2.7998328 -1.8853949  2.124694  -6.4934683]]
Iteration 300 of 1000: loss=0.00696 " + "l1=0.00667" + "l2=0.000289 f=-0.864 shape=(1, 9000, 1)
logits [[ 2.7946112 -1.8870909  2.1275518 -6.4915323]]
Iteration 400 of 1000: loss=0.00695 " + "l1=0.00659" + "l2=0.000362 f=-0.865 shape=(1, 9000, 1)
logits [[ 2.7894886 -1.8886255  2.1303499 -6.489693 ]]
Iteration 500 of 1000: loss=0.00692 " + "l1=0.00651" + "l2=0.000409 f=-0.865 shape=(1, 9000, 1)
logits [[ 2.7847102 -1.8901347  2.1332238 -6.4883084]]
Iteration 600 of 1000: loss=0.00696 " + "l1=0.00645" + "l2=0.000513 f=-0.866 shape=(1, 9000, 1)
logits [[ 2.7805748 -1.8915323  2.1360452 -6.4872527]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0739 " + "l1=0.0739" + "l2=0 f=-0.86 shape=(1, 9000, 1)
logits [[ 2.8460045 -1.876845   2.1067512 -6.515999 ]]
Iteration 100 of 1000: loss=0.0434 " + "l1=0.0234" + "l2=0.0201 f=-0.89 shape=(1, 9000, 1)
logits [[ 2.4688344 -1.9306532  2.2353308 -6.333589 ]]
Iteration 200 of 1000: loss=0.0336 " + "l1=0.00709" + "l2=0.0265 f=-0.898 shape=(1, 9000, 1)
logits [[ 2.3532135 -1.9444739  2.2822697 -6.283192 ]]
Iteration 300 of 1000: loss=0.0262 " + "l1=0.00041" + "l2=0.0258 f=-0.901 shape=(1, 9000, 1)
logits [[ 2.3183212 -1.9578129  2.3142245 -6.279197 ]]
Iteration 400 of 1000: loss=0.0222 " + "l1=0.000656" + "l2=0.0216 f=-0.9 shape=(1, 9000, 1)
logits [[ 2.3320947 -1.962549   2.325539  -6.2961125]]
Iteration 500 of 1000: loss=0.0195 " + "l1=0.000808" + "l2=0.0187 f=-0.9 shape=(1, 9000, 1)
logits [[ 2.3459663 -1.9709034  2.3378847 -6.3119392]]
Iteration 600 of 1000: loss=0.0173 " + "l1=0.000121" + "l2=0.0172 f=-0.901 shape=(1, 9000, 1)
logits [[ 2.3516393 -1.9766833  2.350428  -6.327857 ]]
Iteration 700 of 1000: loss=0.0159 " + "l1=0.000333" + "l2=0.0156 f=-0.902 shape=(1, 9000, 1)
logits [[ 2.3612566 -1.9808682  2.357922  -6.345634 ]]
Iteration 800 of 1000: loss=0.0146 " + "l1=2.42e-05" + "l2=0.0146 f=-0.902 shape=(1, 9000, 1)
logits [[ 2.365065  -1.9829631  2.3648233 -6.3561387]]
Iteration 900 of 1000: loss=0.0138 " + "l1=0" + "l2=0.0138 f=-0.903 shape=(1, 9000, 1)
logits [[ 2.3665226 -1.9856089  2.371343  -6.3639975]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0407 " + "l1=0.0407" + "l2=0 f=-0.86 shape=(1, 9000, 1)
logits [[ 2.8460045 -1.876845   2.1067512 -6.515999 ]]
Iteration 100 of 1000: loss=0.0316 " + "l1=0.0257" + "l2=0.00587 f=-0.876 shape=(1, 9000, 1)
logits [[ 2.6454978 -1.9116659  2.178553  -6.4169445]]
Iteration 200 of 1000: loss=0.029 " + "l1=0.0215" + "l2=0.00745 f=-0.88 shape=(1, 9000, 1)
logits [[ 2.594308  -1.9265032  2.2026284 -6.3885736]]
Iteration 300 of 1000: loss=0.0268 " + "l1=0.0178" + "l2=0.00895 f=-0.884 shape=(1, 9000, 1)
logits [[ 2.544921  -1.929473   2.2208776 -6.37236  ]]
Iteration 400 of 1000: loss=0.0247 " + "l1=0.0146" + "l2=0.0101 f=-0.886 shape=(1, 9000, 1)
logits [[ 2.508019  -1.9388554  2.2426233 -6.3560114]]
Iteration 500 of 1000: loss=0.0228 " + "l1=0.0115" + "l2=0.0113 f=-0.888 shape=(1, 9000, 1)
logits [[ 2.4750273 -1.9481289  2.265264  -6.3460402]]
Iteration 600 of 1000: loss=0.021 " + "l1=0.00867" + "l2=0.0123 f=-0.89 shape=(1, 9000, 1)
logits [[ 2.4454892 -1.9566171  2.287861  -6.336893 ]]
Iteration 700 of 1000: loss=0.0192 " + "l1=0.00593" + "l2=0.0133 f=-0.892 shape=(1, 9000, 1)
logits [[ 2.4156723 -1.9606655  2.3078954 -6.330596 ]]
Iteration 800 of 1000: loss=0.0174 " + "l1=0.0034" + "l2=0.014 f=-0.895 shape=(1, 9000, 1)
logits [[ 2.3893435 -1.9655751  2.3275974 -6.3331003]]
Iteration 900 of 1000: loss=0.0159 " + "l1=0.00121" + "l2=0.0147 f=-0.9 shape=(1, 9000, 1)
logits [[ 2.370507  -1.9761109  2.3485384 -6.341523 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.024 " + "l1=0.024" + "l2=0 f=-0.86 shape=(1, 9000, 1)
logits [[ 2.8460045 -1.876845   2.1067512 -6.515999 ]]
Iteration 100 of 1000: loss=0.0208 " + "l1=0.0187" + "l2=0.0021 f=-0.87 shape=(1, 9000, 1)
logits [[ 2.7249153 -1.8950336  2.1490219 -6.457982 ]]
Iteration 200 of 1000: loss=0.02 " + "l1=0.0174" + "l2=0.00261 f=-0.872 shape=(1, 9000, 1)
logits [[ 2.6966634 -1.9031266  2.1616414 -6.4438767]]
Iteration 300 of 1000: loss=0.0193 " + "l1=0.0163" + "l2=0.00305 f=-0.874 shape=(1, 9000, 1)
logits [[ 2.6744487 -1.9105556  2.1736364 -6.433621 ]]
Iteration 400 of 1000: loss=0.0187 " + "l1=0.0153" + "l2=0.00344 f=-0.875 shape=(1, 9000, 1)
logits [[ 2.6556816 -1.9172295  2.185199  -6.4249845]]
Iteration 500 of 1000: loss=0.0182 " + "l1=0.0144" + "l2=0.00377 f=-0.876 shape=(1, 9000, 1)
logits [[ 2.6395276 -1.9230047  2.1962078 -6.4172416]]
Iteration 600 of 1000: loss=0.0177 " + "l1=0.0135" + "l2=0.00413 f=-0.877 shape=(1, 9000, 1)
logits [[ 2.623831  -1.928271   2.2077384 -6.409618 ]]
Iteration 700 of 1000: loss=0.0171 " + "l1=0.0126" + "l2=0.0045 f=-0.878 shape=(1, 9000, 1)
logits [[ 2.6056578 -1.9295741  2.218033  -6.406369 ]]
Iteration 800 of 1000: loss=0.0165 " + "l1=0.0117" + "l2=0.00481 f=-0.879 shape=(1, 9000, 1)
logits [[ 2.5879838 -1.9299184  2.2274928 -6.4031644]]
Iteration 900 of 1000: loss=0.016 " + "l1=0.0109" + "l2=0.00508 f=-0.881 shape=(1, 9000, 1)
logits [[ 2.574101  -1.9337447  2.2376034 -6.401937 ]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0323 " + "l1=0.0323" + "l2=0 f=-0.86 shape=(1, 9000, 1)
logits [[ 2.8460045 -1.876845   2.1067512 -6.515999 ]]
Iteration 100 of 1000: loss=0.0266 " + "l1=0.0229" + "l2=0.00371 f=-0.873 shape=(1, 9000, 1)
logits [[ 2.686785  -1.903673   2.1640825 -6.4376216]]
Iteration 200 of 1000: loss=0.025 " + "l1=0.0203" + "l2=0.00474 f=-0.876 shape=(1, 9000, 1)
logits [[ 2.6453257 -1.915221   2.182442  -6.415934 ]]
Iteration 300 of 1000: loss=0.0237 " + "l1=0.0182" + "l2=0.00553 f=-0.878 shape=(1, 9000, 1)
logits [[ 2.6142704 -1.9242166  2.1982508 -6.399823 ]]
Iteration 400 of 1000: loss=0.0225 " + "l1=0.0162" + "l2=0.00629 f=-0.881 shape=(1, 9000, 1)
logits [[ 2.5839658 -1.9278115  2.21255   -6.3908186]]
Iteration 500 of 1000: loss=0.0213 " + "l1=0.0144" + "l2=0.00696 f=-0.882 shape=(1, 9000, 1)
logits [[ 2.5569663 -1.9326179  2.22803   -6.381565 ]]
Iteration 600 of 1000: loss=0.0203 " + "l1=0.0127" + "l2=0.00761 f=-0.884 shape=(1, 9000, 1)
logits [[ 2.5331504 -1.9379665  2.2431874 -6.373285 ]]
Iteration 700 of 1000: loss=0.0192 " + "l1=0.0111" + "l2=0.00808 f=-0.886 shape=(1, 9000, 1)
logits [[ 2.5120742 -1.9431539  2.257864  -6.3688664]]
Iteration 800 of 1000: loss=0.0182 " + "l1=0.00959" + "l2=0.00861 f=-0.887 shape=(1, 9000, 1)
logits [[ 2.492559 -1.948128  2.273404 -6.365474]]
Iteration 900 of 1000: loss=0.0172 " + "l1=0.00799" + "l2=0.00919 f=-0.889 shape=(1, 9000, 1)
logits [[ 2.4721262 -1.954884   2.2894301 -6.362996 ]]
--- 263.5632231235504 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0936 " + "l1=0.0936" + "l2=0 f=-0.86 shape=(1, 9000, 1)
logits [[ 2.8460045 -1.876845   2.1067512 -6.515999 ]]
Iteration 100 of 1000: loss=0.0926 " + "l1=0.0918" + "l2=0.000737 f=-0.857 shape=(1, 9000, 1)
logits [[ 2.7604535 -1.8462688  2.080488  -6.4234858]]
Iteration 200 of 1000: loss=0.0924 " + "l1=0.0915" + "l2=0.000829 f=-0.857 shape=(1, 9000, 1)
logits [[ 2.7450688 -1.8402717  2.0753412 -6.4080024]]
Iteration 300 of 1000: loss=0.0922 " + "l1=0.0912" + "l2=0.000985 f=-0.857 shape=(1, 9000, 1)
logits [[ 2.7303984 -1.8342005  2.070221  -6.3926244]]
Iteration 400 of 1000: loss=0.0921 " + "l1=0.091" + "l2=0.00115 f=-0.856 shape=(1, 9000, 1)
logits [[ 2.717113  -1.8281554  2.0653598 -6.37889  ]]
Iteration 500 of 1000: loss=0.092 " + "l1=0.0907" + "l2=0.00128 f=-0.856 shape=(1, 9000, 1)
logits [[ 2.7056215 -1.8227993  2.061011  -6.3660674]]
Iteration 600 of 1000: loss=0.0919 " + "l1=0.0905" + "l2=0.0014 f=-0.855 shape=(1, 9000, 1)
logits [[ 2.695134  -1.817831   2.0571914 -6.354303 ]]
Iteration 700 of 1000: loss=0.0919 " + "l1=0.0903" + "l2=0.00158 f=-0.854 shape=(1, 9000, 1)
logits [[ 2.6862664 -1.8139634  2.0539546 -6.343658 ]]
Iteration 800 of 1000: loss=0.0918 " + "l1=0.0901" + "l2=0.00172 f=-0.854 shape=(1, 9000, 1)
logits [[ 2.6778245 -1.8101095  2.0509303 -6.3334765]]
Iteration 900 of 1000: loss=0.0918 " + "l1=0.0899" + "l2=0.00187 f=-0.853 shape=(1, 9000, 1)
logits [[ 2.6699233 -1.8065306  2.0481894 -6.324204 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.936 " + "l1=0.936" + "l2=0 f=-0.86 shape=(1, 9000, 1)
logits [[ 2.8460045 -1.876845   2.1067512 -6.515999 ]]
Iteration 100 of 1000: loss=0.835 " + "l1=0.771" + "l2=0.0635 f=-0.823 shape=(1, 9000, 1)
logits [[ 2.0713396 -1.6245979  1.8996273 -5.6397076]]
Iteration 200 of 1000: loss=0.804 " + "l1=0.719" + "l2=0.0847 f=-0.809 shape=(1, 9000, 1)
logits [[ 1.8352028 -1.5377718  1.8219497 -5.35497  ]]
Iteration 300 of 1000: loss=0.783 " + "l1=0.695" + "l2=0.0882 f=-0.798 shape=(1, 9000, 1)
logits [[ 1.7407297 -1.4670564  1.7380441 -5.2051444]]
Iteration 400 of 1000: loss=0.767 " + "l1=0.674" + "l2=0.0934 f=-0.787 shape=(1, 9000, 1)
logits [[ 1.6629944 -1.4044113  1.6665429 -5.071946 ]]
Iteration 500 of 1000: loss=0.752 " + "l1=0.653" + "l2=0.099 f=-0.776 shape=(1, 9000, 1)
logits [[ 1.590331  -1.3418732  1.590276  -4.943403 ]]
Iteration 600 of 1000: loss=0.739 " + "l1=0.637" + "l2=0.102 f=-0.766 shape=(1, 9000, 1)
logits [[ 1.5336745 -1.2918535  1.5314076 -4.8361526]]
Iteration 700 of 1000: loss=0.726 " + "l1=0.619" + "l2=0.107 f=-0.754 shape=(1, 9000, 1)
logits [[ 1.4737239 -1.2516279  1.4745483 -4.71454  ]]
Iteration 800 of 1000: loss=0.713 " + "l1=0.601" + "l2=0.112 f=-0.743 shape=(1, 9000, 1)
logits [[ 1.4167213 -1.2221962  1.4231988 -4.5887203]]
Iteration 900 of 1000: loss=0.701 " + "l1=0.583" + "l2=0.118 f=-0.732 shape=(1, 9000, 1)
logits [[ 1.3627877 -1.1897137  1.3628755 -4.4656186]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.36 " + "l1=9.36" + "l2=0 f=-0.86 shape=(1, 9000, 1)
logits [[ 2.8460045 -1.876845   2.1067512 -6.515999 ]]
Iteration 100 of 1000: loss=4.27 " + "l1=2.47" + "l2=1.81 f=-0.603 shape=(1, 9000, 1)
logits [[ 0.01342291 -0.35977808  0.20061547 -2.2671652 ]]
Iteration 200 of 1000: loss=3.08 " + "l1=0.853" + "l2=2.23 f=-0.578 shape=(1, 9000, 1)
logits [[-0.7706521  -0.23934747 -0.2239467  -1.0767329 ]]
Iteration 300 of 1000: loss=2.34 " + "l1=0.0334" + "l2=2.3 f=-0.537 shape=(1, 9000, 1)
logits [[-1.0331843  -0.37877455 -0.35218492 -0.38558835]]
Iteration 400 of 1000: loss=1.88 " + "l1=0" + "l2=1.88 f=-0.519 shape=(1, 9000, 1)
logits [[-1.025246   -0.35409528 -0.3527617  -0.34417877]]
Iteration 500 of 1000: loss=1.6 " + "l1=0.0227" + "l2=1.58 f=-0.499 shape=(1, 9000, 1)
logits [[-0.97024256 -0.36030358 -0.32113907 -0.34385645]]
Iteration 600 of 1000: loss=1.41 " + "l1=0" + "l2=1.41 f=-0.481 shape=(1, 9000, 1)
logits [[-0.94987386 -0.34933016 -0.3132303  -0.31058908]]
Iteration 700 of 1000: loss=1.29 " + "l1=0.0158" + "l2=1.27 f=-0.466 shape=(1, 9000, 1)
logits [[-0.909634   -0.3576673  -0.29112864 -0.30690455]]
Iteration 800 of 1000: loss=1.18 " + "l1=0" + "l2=1.18 f=-0.46 shape=(1, 9000, 1)
logits [[-0.90398467 -0.31583083 -0.31300944 -0.30682588]]
Iteration 900 of 1000: loss=1.11 " + "l1=0.0217" + "l2=1.09 f=-0.457 shape=(1, 9000, 1)
logits [[-0.88551646 -0.31767097 -0.30154365 -0.32327873]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.15 " + "l1=5.15" + "l2=0 f=-0.86 shape=(1, 9000, 1)
logits [[ 2.8460045 -1.876845   2.1067512 -6.515999 ]]
Iteration 100 of 1000: loss=3.12 " + "l1=2.28" + "l2=0.844 f=-0.674 shape=(1, 9000, 1)
logits [[ 0.7168325  -0.7458479   0.74036115 -3.4055889 ]]
Iteration 200 of 1000: loss=2.6 " + "l1=1.61" + "l2=0.989 f=-0.611 shape=(1, 9000, 1)
logits [[ 0.3025513  -0.42765778  0.30576605 -2.6257699 ]]
Iteration 300 of 1000: loss=2.23 " + "l1=1.16" + "l2=1.07 f=-0.573 shape=(1, 9000, 1)
logits [[-0.0341439  -0.28168726  0.06355655 -2.0398293 ]]
Iteration 400 of 1000: loss=1.88 " + "l1=0.785" + "l2=1.09 f=-0.506 shape=(1, 9000, 1)
logits [[-0.24361649 -0.21977906 -0.0669244  -1.4946955 ]]
Iteration 500 of 1000: loss=1.53 " + "l1=0.354" + "l2=1.17 f=-0.485 shape=(1, 9000, 1)
logits [[-0.6657107  -0.23720087 -0.19692127 -0.84062105]]
Iteration 600 of 1000: loss=1.24 " + "l1=0.0468" + "l2=1.19 f=-0.459 shape=(1, 9000, 1)
logits [[-0.87933147 -0.28886557 -0.29432917 -0.37398702]]
Iteration 700 of 1000: loss=1.06 " + "l1=0.0109" + "l2=1.05 f=-0.451 shape=(1, 9000, 1)
logits [[-0.8952482  -0.3161475  -0.28737792 -0.30719066]]
Iteration 800 of 1000: loss=0.942 " + "l1=0" + "l2=0.942 f=-0.446 shape=(1, 9000, 1)
logits [[-0.8832323 -0.3514376 -0.2772609 -0.2712809]]
Iteration 900 of 1000: loss=0.859 " + "l1=0" + "l2=0.859 f=-0.443 shape=(1, 9000, 1)
logits [[-0.8573372  -0.40841416 -0.2543367  -0.25325334]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.04 " + "l1=3.04" + "l2=0 f=-0.86 shape=(1, 9000, 1)
logits [[ 2.8460045 -1.876845   2.1067512 -6.515999 ]]
Iteration 100 of 1000: loss=2.2 " + "l1=1.83" + "l2=0.372 f=-0.731 shape=(1, 9000, 1)
logits [[ 1.272267  -1.1270393  1.276263  -4.3465357]]
Iteration 200 of 1000: loss=1.98 " + "l1=1.49" + "l2=0.489 f=-0.7 shape=(1, 9000, 1)
logits [[ 0.85831505 -0.8021236   0.8600632  -3.7154326 ]]
Iteration 300 of 1000: loss=1.81 " + "l1=1.27" + "l2=0.535 f=-0.67 shape=(1, 9000, 1)
logits [[ 0.6268264  -0.64102155  0.6244639  -3.2888737 ]]
Iteration 400 of 1000: loss=1.65 " + "l1=1.08" + "l2=0.57 f=-0.637 shape=(1, 9000, 1)
logits [[ 0.43269357 -0.53859204  0.44196358 -2.883067  ]]
Iteration 500 of 1000: loss=1.51 " + "l1=0.942" + "l2=0.57 f=-0.597 shape=(1, 9000, 1)
logits [[ 0.3321549  -0.51476836  0.3462688  -2.5522685 ]]
Iteration 600 of 1000: loss=1.35 " + "l1=0.74" + "l2=0.613 f=-0.528 shape=(1, 9000, 1)
logits [[ 0.19276388 -0.4328125   0.20248906 -2.074166  ]]
Iteration 700 of 1000: loss=1.24 " + "l1=0.604" + "l2=0.632 f=-0.487 shape=(1, 9000, 1)
logits [[ 0.06598672 -0.37958962  0.11158389 -1.7472827 ]]
Iteration 800 of 1000: loss=1.14 " + "l1=0.477" + "l2=0.661 f=-0.462 shape=(1, 9000, 1)
logits [[-0.12440547 -0.3743907   0.05937567 -1.4074919 ]]
Iteration 900 of 1000: loss=0.989 " + "l1=0.295" + "l2=0.694 f=-0.441 shape=(1, 9000, 1)
logits [[-0.44026765 -0.3427272  -0.03717034 -0.9443945 ]]
--- 291.8908636569977 seconds ---
Adv result:3
Loading record A05410
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0363 " + "l1=0.0363" + "l2=0 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.829136  -1.8042402  1.4993936 -2.7566931]]
Iteration 100 of 1000: loss=0.0359 " + "l1=0.0356" + "l2=0.000291 f=-0.304 shape=(1, 9000, 1)
logits [[ 1.7898004 -1.769268   1.4764751 -2.7133152]]
Iteration 200 of 1000: loss=0.0358 " + "l1=0.0354" + "l2=0.000309 f=-0.303 shape=(1, 9000, 1)
logits [[ 1.7824987 -1.7618754  1.4715016 -2.7056324]]
Iteration 300 of 1000: loss=0.0357 " + "l1=0.0353" + "l2=0.000395 f=-0.303 shape=(1, 9000, 1)
logits [[ 1.7735733 -1.7533438  1.465764  -2.6962025]]
Iteration 400 of 1000: loss=0.0356 " + "l1=0.0351" + "l2=0.000487 f=-0.302 shape=(1, 9000, 1)
logits [[ 1.7647494 -1.7455468  1.4603345 -2.6867926]]
Iteration 500 of 1000: loss=0.0355 " + "l1=0.035" + "l2=0.000575 f=-0.301 shape=(1, 9000, 1)
logits [[ 1.7567129 -1.7389328  1.4554223 -2.6777554]]
Iteration 600 of 1000: loss=0.0355 " + "l1=0.0348" + "l2=0.000721 f=-0.3 shape=(1, 9000, 1)
logits [[ 1.7493141 -1.7329527  1.4509205 -2.6690588]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.363 " + "l1=0.363" + "l2=0 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.829136  -1.8042402  1.4993936 -2.7566931]]
Iteration 100 of 1000: loss=0.321 " + "l1=0.299" + "l2=0.0214 f=-0.284 shape=(1, 9000, 1)
logits [[ 1.4877224 -1.5037583  1.2929718 -2.4147298]]
Iteration 200 of 1000: loss=0.299 " + "l1=0.265" + "l2=0.0337 f=-0.271 shape=(1, 9000, 1)
logits [[ 1.2998277 -1.3544778  1.1915139 -2.2202258]]
Iteration 300 of 1000: loss=0.283 " + "l1=0.237" + "l2=0.0463 f=-0.261 shape=(1, 9000, 1)
logits [[ 1.1382477 -1.2269038  1.0955002 -2.05091  ]]
Iteration 400 of 1000: loss=0.266 " + "l1=0.208" + "l2=0.0578 f=-0.253 shape=(1, 9000, 1)
logits [[ 0.98598695 -1.0956595   0.98399997 -1.8857872 ]]
Iteration 500 of 1000: loss=0.248 " + "l1=0.185" + "l2=0.0633 f=-0.247 shape=(1, 9000, 1)
logits [[ 0.8744798 -0.9745366  0.8729149 -1.7620946]]
Iteration 600 of 1000: loss=0.23 " + "l1=0.161" + "l2=0.0685 f=-0.245 shape=(1, 9000, 1)
logits [[ 0.7512951 -0.8588965  0.7522008 -1.6241091]]
Iteration 700 of 1000: loss=0.213 " + "l1=0.143" + "l2=0.07 f=-0.241 shape=(1, 9000, 1)
logits [[ 0.65753824 -0.7667052   0.6601918  -1.5159944 ]]
Iteration 800 of 1000: loss=0.201 " + "l1=0.13" + "l2=0.0707 f=-0.238 shape=(1, 9000, 1)
logits [[ 0.58777285 -0.71146584  0.590584   -1.419229  ]]
Iteration 900 of 1000: loss=0.19 " + "l1=0.118" + "l2=0.072 f=-0.235 shape=(1, 9000, 1)
logits [[ 0.5254543 -0.6548986  0.526866  -1.3357141]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.63 " + "l1=3.63" + "l2=0 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.829136  -1.8042402  1.4993936 -2.7566931]]
Iteration 100 of 1000: loss=0.844 " + "l1=0.00372" + "l2=0.841 f=-0.182 shape=(1, 9000, 1)
logits [[-0.11431112 -0.07769597 -0.07397926 -0.46038297]]
Iteration 200 of 1000: loss=0.532 " + "l1=0" + "l2=0.532 f=-0.194 shape=(1, 9000, 1)
logits [[-0.12776674 -0.05827963 -0.06797419 -0.52113706]]
Iteration 300 of 1000: loss=0.424 " + "l1=0.0128" + "l2=0.411 f=-0.191 shape=(1, 9000, 1)
logits [[-0.07302617 -0.06884184 -0.05608181 -0.56780154]]
Iteration 400 of 1000: loss=0.363 " + "l1=0" + "l2=0.363 f=-0.195 shape=(1, 9000, 1)
logits [[-0.12801266 -0.06037856 -0.07262176 -0.5209607 ]]
Iteration 500 of 1000: loss=0.327 " + "l1=0" + "l2=0.327 f=-0.193 shape=(1, 9000, 1)
logits [[-0.09180336 -0.06917719 -0.07625274 -0.5354228 ]]
Iteration 600 of 1000: loss=0.308 " + "l1=0" + "l2=0.308 f=-0.191 shape=(1, 9000, 1)
logits [[-0.10878237 -0.07075716 -0.08407407 -0.5000469 ]]
Iteration 700 of 1000: loss=0.293 " + "l1=0" + "l2=0.293 f=-0.192 shape=(1, 9000, 1)
logits [[-0.13451684 -0.0735312  -0.08397894 -0.47775272]]
Iteration 800 of 1000: loss=0.28 " + "l1=0" + "l2=0.28 f=-0.192 shape=(1, 9000, 1)
logits [[-0.11678094 -0.08158549 -0.08506235 -0.4828045 ]]
Iteration 900 of 1000: loss=0.273 " + "l1=0" + "l2=0.273 f=-0.19 shape=(1, 9000, 1)
logits [[-0.10931823 -0.0799986  -0.09348005 -0.47711003]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2 " + "l1=2" + "l2=0 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.829136  -1.8042402  1.4993936 -2.7566931]]
Iteration 100 of 1000: loss=0.844 " + "l1=0.415" + "l2=0.429 f=-0.218 shape=(1, 9000, 1)
logits [[ 0.2761806  -0.44879586  0.30528677 -1.0062823 ]]
Iteration 200 of 1000: loss=0.493 " + "l1=0.0319" + "l2=0.461 f=-0.206 shape=(1, 9000, 1)
logits [[-0.06149291 -0.09032344 -0.03223639 -0.6410917 ]]
Iteration 300 of 1000: loss=0.358 " + "l1=0.00323" + "l2=0.354 f=-0.198 shape=(1, 9000, 1)
logits [[-0.06749275 -0.07306994 -0.0672018  -0.5847967 ]]
Iteration 400 of 1000: loss=0.31 " + "l1=0.0015" + "l2=0.309 f=-0.195 shape=(1, 9000, 1)
logits [[-0.10346005 -0.0806177  -0.07788612 -0.51985174]]
Iteration 500 of 1000: loss=0.287 " + "l1=0" + "l2=0.287 f=-0.194 shape=(1, 9000, 1)
logits [[-0.11792127 -0.08575998 -0.08727494 -0.48405623]]
Iteration 600 of 1000: loss=0.274 " + "l1=0.00327" + "l2=0.271 f=-0.194 shape=(1, 9000, 1)
logits [[-0.11532911 -0.09342463 -0.08747379 -0.48063532]]
Iteration 700 of 1000: loss=0.262 " + "l1=0" + "l2=0.262 f=-0.194 shape=(1, 9000, 1)
logits [[-0.11900556 -0.09152495 -0.09499413 -0.46993408]]
Iteration 800 of 1000: loss=0.254 " + "l1=0" + "l2=0.254 f=-0.193 shape=(1, 9000, 1)
logits [[-0.12156472 -0.0938379  -0.09713538 -0.46102417]]
Iteration 900 of 1000: loss=0.251 " + "l1=0" + "l2=0.251 f=-0.191 shape=(1, 9000, 1)
logits [[-0.1256627  -0.08887368 -0.10940988 -0.44080883]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.18 " + "l1=1.18" + "l2=0 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.829136  -1.8042402  1.4993936 -2.7566931]]
Iteration 100 of 1000: loss=0.705 " + "l1=0.488" + "l2=0.217 f=-0.229 shape=(1, 9000, 1)
logits [[ 0.70207435 -0.79736096  0.7033648  -1.5247664 ]]
Iteration 200 of 1000: loss=0.532 " + "l1=0.277" + "l2=0.255 f=-0.23 shape=(1, 9000, 1)
logits [[ 0.36829874 -0.47553346  0.37702912 -1.1907803 ]]
Iteration 300 of 1000: loss=0.414 " + "l1=0.132" + "l2=0.281 f=-0.229 shape=(1, 9000, 1)
logits [[ 0.13548608 -0.2591074   0.14829703 -0.93942803]]
Iteration 400 of 1000: loss=0.333 " + "l1=0.0347" + "l2=0.299 f=-0.211 shape=(1, 9000, 1)
logits [[-0.01555732 -0.11537511 -0.00872753 -0.7056075 ]]
Iteration 500 of 1000: loss=0.286 " + "l1=0.00263" + "l2=0.284 f=-0.196 shape=(1, 9000, 1)
logits [[-0.06925236 -0.07733764 -0.06963599 -0.5675077 ]]
Iteration 600 of 1000: loss=0.268 " + "l1=0" + "l2=0.268 f=-0.188 shape=(1, 9000, 1)
logits [[-0.09733689 -0.0780211  -0.08658233 -0.48953328]]
Iteration 700 of 1000: loss=0.256 " + "l1=0" + "l2=0.256 f=-0.187 shape=(1, 9000, 1)
logits [[-0.12576933 -0.08328121 -0.08693639 -0.45372397]]
Iteration 800 of 1000: loss=0.245 " + "l1=0.00281" + "l2=0.242 f=-0.185 shape=(1, 9000, 1)
logits [[-0.09784079 -0.09445759 -0.08581094 -0.46129853]]
Iteration 900 of 1000: loss=0.237 " + "l1=0" + "l2=0.237 f=-0.185 shape=(1, 9000, 1)
logits [[-0.12048209 -0.08935423 -0.09568219 -0.43479803]]
--- 265.340457201004 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0033 " + "l1=0.0033" + "l2=0 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.829136  -1.8042402  1.4993936 -2.7566931]]
Iteration 100 of 1000: loss=0.00314 " + "l1=0.00298" + "l2=0.00016 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.805032  -1.8094608  1.507299  -2.735734 ]]
Iteration 200 of 1000: loss=0.0031 " + "l1=0.00295" + "l2=0.00015 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.8039612 -1.8105007  1.5091798 -2.7366154]]
Iteration 300 of 1000: loss=0.00305 " + "l1=0.00289" + "l2=0.00016 f=-0.309 shape=(1, 9000, 1)
logits [[ 1.8006257 -1.811967   1.5114766 -2.735194 ]]
Iteration 400 of 1000: loss=0.00305 " + "l1=0.00283" + "l2=0.000211 f=-0.309 shape=(1, 9000, 1)
logits [[ 1.7971854 -1.8135557  1.5137467 -2.733598 ]]
Iteration 500 of 1000: loss=0.00303 " + "l1=0.00278" + "l2=0.00025 f=-0.309 shape=(1, 9000, 1)
logits [[ 1.793999 -1.815418  1.516163 -2.732474]]
Iteration 600 of 1000: loss=0.00311 " + "l1=0.00273" + "l2=0.000388 f=-0.31 shape=(1, 9000, 1)
logits [[ 1.7909808 -1.8171955  1.5183988 -2.731362 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.033 " + "l1=0.033" + "l2=0 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.829136  -1.8042402  1.4993936 -2.7566931]]
Iteration 100 of 1000: loss=0.0175 " + "l1=0.0101" + "l2=0.00742 f=-0.315 shape=(1, 9000, 1)
logits [[ 1.6695324 -1.8588008  1.5689396 -2.638882 ]]
Iteration 200 of 1000: loss=0.0101 " + "l1=1.82e-05" + "l2=0.0101 f=-0.319 shape=(1, 9000, 1)
logits [[ 1.6108507 -1.8892698  1.6106688 -2.6084719]]
Iteration 300 of 1000: loss=0.00749 " + "l1=4.4e-05" + "l2=0.00745 f=-0.32 shape=(1, 9000, 1)
logits [[ 1.613974  -1.8873794  1.6135343 -2.619442 ]]
Iteration 400 of 1000: loss=0.00641 " + "l1=0" + "l2=0.00641 f=-0.32 shape=(1, 9000, 1)
logits [[ 1.6166    -1.8896064  1.6167816 -2.624359 ]]
Iteration 500 of 1000: loss=0.00572 " + "l1=0.000127" + "l2=0.0056 f=-0.32 shape=(1, 9000, 1)
logits [[ 1.6219969 -1.8939996  1.6207292 -2.630123 ]]
Iteration 600 of 1000: loss=0.00528 " + "l1=0.000158" + "l2=0.00513 f=-0.32 shape=(1, 9000, 1)
logits [[ 1.625279  -1.8974266  1.6236942 -2.6323464]]
Iteration 700 of 1000: loss=0.005 " + "l1=0" + "l2=0.005 f=-0.32 shape=(1, 9000, 1)
logits [[ 1.6255887 -1.9005077  1.6263319 -2.6315916]]
Iteration 800 of 1000: loss=0.00484 " + "l1=0" + "l2=0.00484 f=-0.319 shape=(1, 9000, 1)
logits [[ 1.6247983 -1.902067   1.6275911 -2.6282005]]
Iteration 900 of 1000: loss=0.00466 " + "l1=0" + "l2=0.00466 f=-0.319 shape=(1, 9000, 1)
logits [[ 1.625399  -1.9026763  1.6278784 -2.6257362]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0181 " + "l1=0.0181" + "l2=0 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.829136  -1.8042402  1.4993936 -2.7566931]]
Iteration 100 of 1000: loss=0.0134 " + "l1=0.011" + "l2=0.00236 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.7396783 -1.8352135  1.5392731 -2.6904433]]
Iteration 200 of 1000: loss=0.0114 " + "l1=0.00808" + "l2=0.00329 f=-0.314 shape=(1, 9000, 1)
logits [[ 1.7061998 -1.8470602  1.5592304 -2.673686 ]]
Iteration 300 of 1000: loss=0.00959 " + "l1=0.00526" + "l2=0.00433 f=-0.317 shape=(1, 9000, 1)
logits [[ 1.6746471 -1.8622407  1.5790764 -2.657934 ]]
Iteration 400 of 1000: loss=0.00804 " + "l1=0.00274" + "l2=0.00531 f=-0.319 shape=(1, 9000, 1)
logits [[ 1.6470714 -1.8760525  1.5972975 -2.6438353]]
Iteration 500 of 1000: loss=0.00669 " + "l1=0.000403" + "l2=0.00628 f=-0.32 shape=(1, 9000, 1)
logits [[ 1.6217021 -1.8890762  1.6143795 -2.6287448]]
Iteration 600 of 1000: loss=0.00582 " + "l1=2.24e-05" + "l2=0.00579 f=-0.321 shape=(1, 9000, 1)
logits [[ 1.6215775 -1.8949505  1.6211711 -2.6306481]]
Iteration 700 of 1000: loss=0.00537 " + "l1=0" + "l2=0.00537 f=-0.32 shape=(1, 9000, 1)
logits [[ 1.6238647 -1.8984375  1.6243333 -2.6315815]]
Iteration 800 of 1000: loss=0.00497 " + "l1=0" + "l2=0.00497 f=-0.32 shape=(1, 9000, 1)
logits [[ 1.6257776 -1.9002597  1.6259719 -2.6315918]]
Iteration 900 of 1000: loss=0.00474 " + "l1=0" + "l2=0.00474 f=-0.319 shape=(1, 9000, 1)
logits [[ 1.6264771 -1.9011036  1.6265241 -2.629415 ]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0107 " + "l1=0.0107" + "l2=0 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.829136  -1.8042402  1.4993936 -2.7566931]]
Iteration 100 of 1000: loss=0.00906 " + "l1=0.00815" + "l2=0.000907 f=-0.31 shape=(1, 9000, 1)
logits [[ 1.7732121 -1.8213793  1.5224988 -2.71347  ]]
Iteration 200 of 1000: loss=0.00841 " + "l1=0.00719" + "l2=0.00121 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.756352  -1.8306468  1.5349827 -2.7078857]]
Iteration 300 of 1000: loss=0.00782 " + "l1=0.00626" + "l2=0.00156 f=-0.313 shape=(1, 9000, 1)
logits [[ 1.7387509 -1.8372494  1.5461231 -2.7000124]]
Iteration 400 of 1000: loss=0.00738 " + "l1=0.00548" + "l2=0.0019 f=-0.314 shape=(1, 9000, 1)
logits [[ 1.7233664 -1.8426614  1.5546955 -2.6923296]]
Iteration 500 of 1000: loss=0.00697 " + "l1=0.00475" + "l2=0.00222 f=-0.315 shape=(1, 9000, 1)
logits [[ 1.7093434 -1.8488787  1.5631524 -2.6842473]]
Iteration 600 of 1000: loss=0.00656 " + "l1=0.00404" + "l2=0.00252 f=-0.316 shape=(1, 9000, 1)
logits [[ 1.6963254 -1.8561198  1.572029  -2.6771991]]
Iteration 700 of 1000: loss=0.00629 " + "l1=0.00338" + "l2=0.00291 f=-0.317 shape=(1, 9000, 1)
logits [[ 1.6844652 -1.8626664  1.5803796 -2.6694117]]
Iteration 800 of 1000: loss=0.00597 " + "l1=0.00275" + "l2=0.00322 f=-0.317 shape=(1, 9000, 1)
logits [[ 1.6731708 -1.8690066  1.5885797 -2.6605132]]
Iteration 900 of 1000: loss=0.00565 " + "l1=0.00219" + "l2=0.00346 f=-0.317 shape=(1, 9000, 1)
logits [[ 1.6631606 -1.8750088  1.5958866 -2.6528175]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0144 " + "l1=0.0144" + "l2=0 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.829136  -1.8042402  1.4993936 -2.7566931]]
Iteration 100 of 1000: loss=0.0114 " + "l1=0.00984" + "l2=0.00155 f=-0.311 shape=(1, 9000, 1)
logits [[ 1.7560612 -1.8286889  1.5312067 -2.7022266]]
Iteration 200 of 1000: loss=0.0101 " + "l1=0.00793" + "l2=0.00219 f=-0.313 shape=(1, 9000, 1)
logits [[ 1.7299418 -1.8402444  1.5486344 -2.6913738]]
Iteration 300 of 1000: loss=0.00907 " + "l1=0.00631" + "l2=0.00275 f=-0.315 shape=(1, 9000, 1)
logits [[ 1.7063485 -1.8485068  1.5620918 -2.678713 ]]
Iteration 400 of 1000: loss=0.00813 " + "l1=0.00472" + "l2=0.00341 f=-0.317 shape=(1, 9000, 1)
logits [[ 1.6845617 -1.860221   1.5767772 -2.668144 ]]
Iteration 500 of 1000: loss=0.00734 " + "l1=0.0033" + "l2=0.00405 f=-0.318 shape=(1, 9000, 1)
logits [[ 1.6651992 -1.8702443  1.5898558 -2.6574738]]
Iteration 600 of 1000: loss=0.00659 " + "l1=0.00199" + "l2=0.00461 f=-0.319 shape=(1, 9000, 1)
logits [[ 1.6476134 -1.8796637  1.6022161 -2.6463137]]
Iteration 700 of 1000: loss=0.00594 " + "l1=0.000817" + "l2=0.00512 f=-0.32 shape=(1, 9000, 1)
logits [[ 1.6314443 -1.8877405  1.6127654 -2.6347768]]
Iteration 800 of 1000: loss=0.00524 " + "l1=5.79e-05" + "l2=0.00518 f=-0.32 shape=(1, 9000, 1)
logits [[ 1.6238343 -1.8964987  1.6225107 -2.6301203]]
Iteration 900 of 1000: loss=0.00511 " + "l1=7.92e-05" + "l2=0.00503 f=-0.32 shape=(1, 9000, 1)
logits [[ 1.6261544 -1.8984834  1.624344  -2.630868 ]]
--- 264.4671673774719 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0459 " + "l1=0.0459" + "l2=0 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.829136  -1.8042402  1.4993936 -2.7566931]]
Iteration 100 of 1000: loss=0.045 " + "l1=0.0445" + "l2=0.000503 f=-0.302 shape=(1, 9000, 1)
logits [[ 1.7752173 -1.7820038  1.4772547 -2.6789541]]
Iteration 200 of 1000: loss=0.0448 " + "l1=0.0443" + "l2=0.00054 f=-0.301 shape=(1, 9000, 1)
logits [[ 1.76449   -1.7757704  1.4725151 -2.664484 ]]
Iteration 300 of 1000: loss=0.0446 " + "l1=0.044" + "l2=0.000648 f=-0.299 shape=(1, 9000, 1)
logits [[ 1.7517192 -1.7688329  1.4670377 -2.6469438]]
Iteration 400 of 1000: loss=0.0445 " + "l1=0.0437" + "l2=0.000775 f=-0.298 shape=(1, 9000, 1)
logits [[ 1.7392039 -1.762182   1.4615417 -2.6293268]]
Iteration 500 of 1000: loss=0.0443 " + "l1=0.0434" + "l2=0.000929 f=-0.296 shape=(1, 9000, 1)
logits [[ 1.7270378 -1.7555196  1.456429  -2.6119561]]
Iteration 600 of 1000: loss=0.0442 " + "l1=0.0431" + "l2=0.00112 f=-0.294 shape=(1, 9000, 1)
logits [[ 1.7157264 -1.7496471  1.4515413 -2.5951407]]
Iteration 700 of 1000: loss=0.0441 " + "l1=0.0428" + "l2=0.00125 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.7052349 -1.7445244  1.4470811 -2.5789502]]
Iteration 800 of 1000: loss=0.044 " + "l1=0.0426" + "l2=0.00143 f=-0.291 shape=(1, 9000, 1)
logits [[ 1.6951218 -1.7398744  1.4429432 -2.5627742]]
Iteration 900 of 1000: loss=0.0438 " + "l1=0.0423" + "l2=0.00153 f=-0.29 shape=(1, 9000, 1)
logits [[ 1.6853484 -1.7354299  1.4387596 -2.5467234]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.459 " + "l1=0.459" + "l2=0 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.829136  -1.8042402  1.4993936 -2.7566931]]
Iteration 100 of 1000: loss=0.378 " + "l1=0.331" + "l2=0.0472 f=-0.256 shape=(1, 9000, 1)
logits [[ 1.2979654 -1.5898688  1.2764618 -2.008376 ]]
Iteration 200 of 1000: loss=0.342 " + "l1=0.284" + "l2=0.0579 f=-0.223 shape=(1, 9000, 1)
logits [[ 1.123066  -1.4193273  1.1226772 -1.717431 ]]
Iteration 300 of 1000: loss=0.31 " + "l1=0.242" + "l2=0.069 f=-0.191 shape=(1, 9000, 1)
logits [[ 0.97059876 -1.2639204   0.97170204 -1.4436079 ]]
Iteration 400 of 1000: loss=0.282 " + "l1=0.202" + "l2=0.0798 f=-0.168 shape=(1, 9000, 1)
logits [[ 0.833003   -1.1521056   0.83301055 -1.1852973 ]]
Iteration 500 of 1000: loss=0.253 " + "l1=0.166" + "l2=0.0867 f=-0.141 shape=(1, 9000, 1)
logits [[ 0.72300065 -1.0743896   0.7247822  -0.93910134]]
Iteration 600 of 1000: loss=0.226 " + "l1=0.133" + "l2=0.0931 f=-0.121 shape=(1, 9000, 1)
logits [[ 0.62570393 -1.0375766   0.6302185  -0.70149326]]
Iteration 700 of 1000: loss=0.201 " + "l1=0.102" + "l2=0.0994 f=-0.107 shape=(1, 9000, 1)
logits [[ 0.5283737  -1.0004333   0.53045166 -0.48483962]]
Iteration 800 of 1000: loss=0.173 " + "l1=0.0669" + "l2=0.106 f=-0.107 shape=(1, 9000, 1)
logits [[ 0.36546087 -0.9169179   0.39628989 -0.27280167]]
Iteration 900 of 1000: loss=0.146 " + "l1=0.037" + "l2=0.109 f=-0.113 shape=(1, 9000, 1)
logits [[ 0.20372432 -0.84340715  0.27941614 -0.09061249]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.59 " + "l1=4.59" + "l2=0 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.829136  -1.8042402  1.4993936 -2.7566931]]
Iteration 100 of 1000: loss=0.683 " + "l1=0" + "l2=0.683 f=-0.103 shape=(1, 9000, 1)
logits [[ 0.00368531 -0.8815468   0.22713818  0.23961583]]
Iteration 200 of 1000: loss=0.506 " + "l1=0" + "l2=0.506 f=-0.105 shape=(1, 9000, 1)
logits [[-0.00531871 -0.8571135   0.20061818  0.24304673]]
Iteration 300 of 1000: loss=0.418 " + "l1=0" + "l2=0.418 f=-0.107 shape=(1, 9000, 1)
logits [[-0.01063183 -0.83354425  0.17906962  0.23726314]]
Iteration 400 of 1000: loss=0.357 " + "l1=0" + "l2=0.357 f=-0.105 shape=(1, 9000, 1)
logits [[ 0.02246361 -0.82938534  0.17959942  0.20752427]]
Iteration 500 of 1000: loss=0.319 " + "l1=0" + "l2=0.319 f=-0.102 shape=(1, 9000, 1)
logits [[ 0.03666327 -0.82470345  0.1680397   0.21017474]]
Iteration 600 of 1000: loss=0.272 " + "l1=0" + "l2=0.272 f=-0.105 shape=(1, 9000, 1)
logits [[ 0.06034673 -0.80483013  0.16214623  0.16270825]]
Iteration 700 of 1000: loss=0.243 " + "l1=0" + "l2=0.243 f=-0.107 shape=(1, 9000, 1)
logits [[ 0.05011562 -0.78128946  0.13981849  0.16211471]]
Iteration 800 of 1000: loss=0.216 " + "l1=0.00661" + "l2=0.21 f=-0.11 shape=(1, 9000, 1)
logits [[ 0.07378327 -0.7795899   0.13713223  0.13052407]]
Iteration 900 of 1000: loss=0.19 " + "l1=0" + "l2=0.19 f=-0.107 shape=(1, 9000, 1)
logits [[ 0.08336131 -0.7879425   0.13245827  0.14443624]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.52 " + "l1=2.52" + "l2=0 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.829136  -1.8042402  1.4993936 -2.7566931]]
Iteration 100 of 1000: loss=0.615 " + "l1=0.00322" + "l2=0.611 f=-0.106 shape=(1, 9000, 1)
logits [[ 0.00097902 -0.86312634  0.22210005  0.21624213]]
Iteration 200 of 1000: loss=0.428 " + "l1=0.00889" + "l2=0.419 f=-0.109 shape=(1, 9000, 1)
logits [[ 0.01317604 -0.83719283  0.20123807  0.18508202]]
Iteration 300 of 1000: loss=0.351 " + "l1=0.004" + "l2=0.347 f=-0.108 shape=(1, 9000, 1)
logits [[ 0.02808634 -0.821338    0.18359125  0.17632177]]
Iteration 400 of 1000: loss=0.296 " + "l1=0.00407" + "l2=0.292 f=-0.105 shape=(1, 9000, 1)
logits [[ 0.04858224 -0.80173606  0.16969346  0.16229233]]
Iteration 500 of 1000: loss=0.248 " + "l1=0.00126" + "l2=0.247 f=-0.108 shape=(1, 9000, 1)
logits [[ 0.045171   -0.7721336   0.14879417  0.14650932]]
Iteration 600 of 1000: loss=0.21 " + "l1=0" + "l2=0.21 f=-0.11 shape=(1, 9000, 1)
logits [[ 0.05656645 -0.76534015  0.13155241  0.13705614]]
Iteration 700 of 1000: loss=0.184 " + "l1=0" + "l2=0.184 f=-0.108 shape=(1, 9000, 1)
logits [[ 0.07249832 -0.7667312   0.12735114  0.13290325]]
Iteration 800 of 1000: loss=0.167 " + "l1=0" + "l2=0.167 f=-0.105 shape=(1, 9000, 1)
logits [[ 0.07938251 -0.7688924   0.12917572  0.14012897]]
Iteration 900 of 1000: loss=0.155 " + "l1=0.00374" + "l2=0.151 f=-0.102 shape=(1, 9000, 1)
logits [[ 0.09581634 -0.7737608   0.13863704  0.13183022]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.49 " + "l1=1.49" + "l2=0 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.829136  -1.8042402  1.4993936 -2.7566931]]
Iteration 100 of 1000: loss=0.676 " + "l1=0.25" + "l2=0.426 f=-0.132 shape=(1, 9000, 1)
logits [[ 0.2913341 -0.9487026  0.4483891 -0.3198132]]
Iteration 200 of 1000: loss=0.405 " + "l1=0.00389" + "l2=0.401 f=-0.11 shape=(1, 9000, 1)
logits [[ 0.00388976 -0.82785255  0.197154    0.18519017]]
Iteration 300 of 1000: loss=0.315 " + "l1=0" + "l2=0.315 f=-0.102 shape=(1, 9000, 1)
logits [[ 0.04513095 -0.8090922   0.17796761  0.17838931]]
Iteration 400 of 1000: loss=0.251 " + "l1=0.000258" + "l2=0.251 f=-0.1 shape=(1, 9000, 1)
logits [[ 0.06622157 -0.77852774  0.15556394  0.15476865]]
Iteration 500 of 1000: loss=0.205 " + "l1=0.00388" + "l2=0.202 f=-0.105 shape=(1, 9000, 1)
logits [[ 0.07446003 -0.75733584  0.138044    0.12609664]]
Iteration 600 of 1000: loss=0.177 " + "l1=0" + "l2=0.177 f=-0.105 shape=(1, 9000, 1)
logits [[ 0.06562514 -0.74927115  0.123955    0.13870776]]
Iteration 700 of 1000: loss=0.157 " + "l1=0" + "l2=0.157 f=-0.102 shape=(1, 9000, 1)
logits [[ 0.07379186 -0.7524238   0.12940699  0.14208117]]
Iteration 800 of 1000: loss=0.141 " + "l1=0" + "l2=0.141 f=-0.0967 shape=(1, 9000, 1)
logits [[ 0.08396468 -0.7501739   0.13346808  0.14605695]]
Iteration 900 of 1000: loss=0.13 " + "l1=0" + "l2=0.13 f=-0.0919 shape=(1, 9000, 1)
logits [[ 0.07666932 -0.7482145   0.13100256  0.172966  ]]
--- 289.11233377456665 seconds ---
Adv result:3
Loading record A05431
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0567 " + "l1=0.0567" + "l2=0 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.6234338 -2.0432518  2.3022504 -5.84487  ]]
Iteration 100 of 1000: loss=0.0562 " + "l1=0.0559" + "l2=0.000321 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.5750275 -2.0129519  2.2805915 -5.80479  ]]
Iteration 200 of 1000: loss=0.0561 " + "l1=0.0558" + "l2=0.000316 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.5680192 -2.00819    2.2768357 -5.798425 ]]
Iteration 300 of 1000: loss=0.056 " + "l1=0.0556" + "l2=0.000383 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.5588427 -2.001646   2.2721493 -5.790174 ]]
Iteration 400 of 1000: loss=0.0559 " + "l1=0.0554" + "l2=0.000491 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.5495787 -1.9950763  2.2675421 -5.781937 ]]
Iteration 500 of 1000: loss=0.0558 " + "l1=0.0553" + "l2=0.000546 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.5404599 -1.988593   2.2631533 -5.7740693]]
Iteration 600 of 1000: loss=0.0558 " + "l1=0.0551" + "l2=0.000662 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.5312178 -1.9820962  2.2588205 -5.766043 ]]
Iteration 700 of 1000: loss=0.0557 " + "l1=0.055" + "l2=0.000744 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.5222516 -1.9758528  2.2547288 -5.7584386]]
Iteration 800 of 1000: loss=0.0557 " + "l1=0.0548" + "l2=0.000874 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.513244  -1.9695216  2.2507472 -5.751139 ]]
Iteration 900 of 1000: loss=0.0556 " + "l1=0.0547" + "l2=0.000943 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.5046704 -1.9636126  2.2470832 -5.7445226]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.567 " + "l1=0.567" + "l2=0 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.6234338 -2.0432518  2.3022504 -5.84487  ]]
Iteration 100 of 1000: loss=0.526 " + "l1=0.504" + "l2=0.0218 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.2392733 -1.8033571  2.1422098 -5.5352807]]
Iteration 200 of 1000: loss=0.51 " + "l1=0.48" + "l2=0.0304 f=-0.488 shape=(1, 9000, 1)
logits [[ 3.087167  -1.7135247  2.073802  -5.3989234]]
Iteration 300 of 1000: loss=0.497 " + "l1=0.458" + "l2=0.0392 f=-0.486 shape=(1, 9000, 1)
logits [[ 2.947262  -1.6296664  2.0084    -5.271649 ]]
Iteration 400 of 1000: loss=0.483 " + "l1=0.436" + "l2=0.0473 f=-0.485 shape=(1, 9000, 1)
logits [[ 2.8060563 -1.550405   1.9463497 -5.141789 ]]
Iteration 500 of 1000: loss=0.466 " + "l1=0.408" + "l2=0.0584 f=-0.483 shape=(1, 9000, 1)
logits [[ 2.6223521 -1.4537083  1.8817025 -4.983402 ]]
Iteration 600 of 1000: loss=0.449 " + "l1=0.388" + "l2=0.0612 f=-0.479 shape=(1, 9000, 1)
logits [[ 2.492739  -1.388152   1.8376598 -4.859515 ]]
Iteration 700 of 1000: loss=0.434 " + "l1=0.369" + "l2=0.0653 f=-0.477 shape=(1, 9000, 1)
logits [[ 2.3601573 -1.3290461  1.7929524 -4.7317386]]
Iteration 800 of 1000: loss=0.42 " + "l1=0.349" + "l2=0.0707 f=-0.476 shape=(1, 9000, 1)
logits [[ 2.2177794 -1.2728498  1.7515055 -4.601657 ]]
Iteration 900 of 1000: loss=0.408 " + "l1=0.334" + "l2=0.0738 f=-0.475 shape=(1, 9000, 1)
logits [[ 2.1026223 -1.2357328  1.7219929 -4.490292 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.67 " + "l1=5.67" + "l2=0 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.6234338 -2.0432518  2.3022504 -5.84487  ]]
Iteration 100 of 1000: loss=2.4 " + "l1=1.29" + "l2=1.11 f=-0.515 shape=(1, 9000, 1)
logits [[ 1.0539559  -0.22355624  1.0656767  -3.9566574 ]]
Iteration 200 of 1000: loss=1.43 " + "l1=0.237" + "l2=1.2 f=-0.466 shape=(1, 9000, 1)
logits [[ 0.53289056  0.3462619   0.58368903 -3.3286552 ]]
Iteration 300 of 1000: loss=0.995 " + "l1=0" + "l2=0.995 f=-0.468 shape=(1, 9000, 1)
logits [[ 0.41186553  0.47631294  0.46383306 -3.223103  ]]
Iteration 400 of 1000: loss=0.863 " + "l1=0" + "l2=0.863 f=-0.469 shape=(1, 9000, 1)
logits [[ 0.40011537  0.4605895   0.45968822 -3.1950526 ]]
Iteration 500 of 1000: loss=0.8 " + "l1=0" + "l2=0.8 f=-0.474 shape=(1, 9000, 1)
logits [[ 0.37193194  0.44855464  0.4446596  -3.1595385 ]]
Iteration 600 of 1000: loss=0.755 " + "l1=0.0104" + "l2=0.745 f=-0.472 shape=(1, 9000, 1)
logits [[ 0.40628886  0.41766086  0.4280723  -3.1398113 ]]
Iteration 700 of 1000: loss=0.721 " + "l1=0.0026" + "l2=0.718 f=-0.475 shape=(1, 9000, 1)
logits [[ 0.39499468  0.40428     0.40687984 -3.1052666 ]]
Iteration 800 of 1000: loss=0.7 " + "l1=0.00125" + "l2=0.698 f=-0.478 shape=(1, 9000, 1)
logits [[ 0.36683908  0.3965571   0.39780527 -3.0730362 ]]
Iteration 900 of 1000: loss=0.682 " + "l1=0" + "l2=0.682 f=-0.482 shape=(1, 9000, 1)
logits [[ 0.3598029   0.3852581   0.38523912 -3.0572631 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.12 " + "l1=3.12" + "l2=0 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.6234338 -2.0432518  2.3022504 -5.84487  ]]
Iteration 100 of 1000: loss=1.81 " + "l1=1.2" + "l2=0.609 f=-0.526 shape=(1, 9000, 1)
logits [[ 1.4738998 -0.7039256  1.4663404 -4.3400292]]
Iteration 200 of 1000: loss=1.4 " + "l1=0.773" + "l2=0.622 f=-0.504 shape=(1, 9000, 1)
logits [[ 1.1073921 -0.2927363  1.1131082 -3.9440627]]
Iteration 300 of 1000: loss=1.1 " + "l1=0.449" + "l2=0.652 f=-0.48 shape=(1, 9000, 1)
logits [[ 0.8322561   0.01630188  0.8290573  -3.5994864 ]]
Iteration 400 of 1000: loss=0.929 " + "l1=0.243" + "l2=0.685 f=-0.48 shape=(1, 9000, 1)
logits [[ 0.592002    0.18787669  0.6305017  -3.3301227 ]]
Iteration 500 of 1000: loss=0.804 " + "l1=0.0743" + "l2=0.73 f=-0.481 shape=(1, 9000, 1)
logits [[ 0.39467114  0.3342708   0.46941063 -3.123792  ]]
Iteration 600 of 1000: loss=0.74 " + "l1=0.00255" + "l2=0.737 f=-0.485 shape=(1, 9000, 1)
logits [[ 0.24660498  0.39121476  0.39585793 -2.9726608 ]]
Iteration 700 of 1000: loss=0.698 " + "l1=0" + "l2=0.698 f=-0.489 shape=(1, 9000, 1)
logits [[ 0.17778532  0.37941477  0.37144563 -2.8833807 ]]
Iteration 800 of 1000: loss=0.664 " + "l1=0.00553" + "l2=0.658 f=-0.491 shape=(1, 9000, 1)
logits [[ 0.14759214  0.3578442   0.3678993  -2.838156  ]]
Iteration 900 of 1000: loss=0.643 " + "l1=0" + "l2=0.643 f=-0.495 shape=(1, 9000, 1)
logits [[ 0.0906039   0.36766943  0.36398444 -2.803585  ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.84 " + "l1=1.84" + "l2=0 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.6234338 -2.0432518  2.3022504 -5.84487  ]]
Iteration 100 of 1000: loss=1.38 " + "l1=1.12" + "l2=0.263 f=-0.504 shape=(1, 9000, 1)
logits [[ 2.233271  -1.2126408  1.7701243 -4.807943 ]]
Iteration 200 of 1000: loss=1.13 " + "l1=0.745" + "l2=0.388 f=-0.523 shape=(1, 9000, 1)
logits [[ 1.5069178  -0.77828723  1.5148884  -4.335272  ]]
Iteration 300 of 1000: loss=0.979 " + "l1=0.595" + "l2=0.384 f=-0.521 shape=(1, 9000, 1)
logits [[ 1.2923512  -0.53829527  1.2861357  -4.124657  ]]
Iteration 400 of 1000: loss=0.86 " + "l1=0.468" + "l2=0.392 f=-0.518 shape=(1, 9000, 1)
logits [[ 1.0950581  -0.34267762  1.0959041  -3.919799  ]]
Iteration 500 of 1000: loss=0.785 " + "l1=0.395" + "l2=0.39 f=-0.51 shape=(1, 9000, 1)
logits [[ 0.9750086  -0.24154277  0.9704929  -3.743023  ]]
Iteration 600 of 1000: loss=0.735 " + "l1=0.359" + "l2=0.376 f=-0.507 shape=(1, 9000, 1)
logits [[ 0.9005007  -0.20524201  0.9007553  -3.6244662 ]]
Iteration 700 of 1000: loss=0.703 " + "l1=0.337" + "l2=0.366 f=-0.507 shape=(1, 9000, 1)
logits [[ 0.83217156 -0.19486009  0.8416393  -3.5063944 ]]
Iteration 800 of 1000: loss=0.676 " + "l1=0.321" + "l2=0.356 f=-0.516 shape=(1, 9000, 1)
logits [[ 0.78662914 -0.19574293  0.7906943  -3.4468887 ]]
Iteration 900 of 1000: loss=0.656 " + "l1=0.306" + "l2=0.35 f=-0.523 shape=(1, 9000, 1)
logits [[ 0.75018686 -0.1900077   0.7501986  -3.401573  ]]
--- 290.91665387153625 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0132 " + "l1=0.0132" + "l2=0 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.6234338 -2.0432518  2.3022504 -5.84487  ]]
Iteration 100 of 1000: loss=0.0131 " + "l1=0.0129" + "l2=0.000153 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.5959349 -2.0398135  2.3051703 -5.8210964]]
Iteration 200 of 1000: loss=0.013 " + "l1=0.0129" + "l2=0.000131 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.594995  -2.0396411  2.305594  -5.819691 ]]
Iteration 300 of 1000: loss=0.013 " + "l1=0.0129" + "l2=0.000155 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.5917392 -2.0392904  2.3063421 -5.8163815]]
Iteration 400 of 1000: loss=0.013 " + "l1=0.0128" + "l2=0.000178 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.5879538 -2.0388305  2.3070602 -5.812839 ]]
Iteration 500 of 1000: loss=0.013 " + "l1=0.0128" + "l2=0.000232 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.5839577 -2.0382419  2.3076801 -5.8092947]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.132 " + "l1=0.132" + "l2=0 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.6234338 -2.0432518  2.3022504 -5.84487  ]]
Iteration 100 of 1000: loss=0.119 " + "l1=0.112" + "l2=0.00714 f=-0.484 shape=(1, 9000, 1)
logits [[ 3.4394734 -2.0139987  2.3216207 -5.68312  ]]
Iteration 200 of 1000: loss=0.114 " + "l1=0.104" + "l2=0.00972 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.3696494 -2.0021908  2.326216  -5.618137 ]]
Iteration 300 of 1000: loss=0.109 " + "l1=0.0964" + "l2=0.0128 f=-0.48 shape=(1, 9000, 1)
logits [[ 3.2892447 -1.9832143  2.3248138 -5.549355 ]]
Iteration 400 of 1000: loss=0.105 " + "l1=0.0897" + "l2=0.0149 f=-0.478 shape=(1, 9000, 1)
logits [[ 3.2233102 -1.9678378  2.3262439 -5.492978 ]]
Iteration 500 of 1000: loss=0.0999 " + "l1=0.083" + "l2=0.017 f=-0.476 shape=(1, 9000, 1)
logits [[ 3.156977  -1.9513936  2.3272634 -5.4374213]]
Iteration 600 of 1000: loss=0.0946 " + "l1=0.0757" + "l2=0.0189 f=-0.474 shape=(1, 9000, 1)
logits [[ 3.0885212 -1.9335873  2.3311348 -5.3832846]]
Iteration 700 of 1000: loss=0.0891 " + "l1=0.0686" + "l2=0.0205 f=-0.473 shape=(1, 9000, 1)
logits [[ 3.0187714 -1.9117719  2.33298   -5.3307796]]
Iteration 800 of 1000: loss=0.0842 " + "l1=0.062" + "l2=0.0223 f=-0.472 shape=(1, 9000, 1)
logits [[ 2.9483738 -1.888961   2.328663  -5.276544 ]]
Iteration 900 of 1000: loss=0.0801 " + "l1=0.0557" + "l2=0.0244 f=-0.471 shape=(1, 9000, 1)
logits [[ 2.8797262 -1.8663034  2.322758  -5.2210197]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.32 " + "l1=1.32" + "l2=0 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.6234338 -2.0432518  2.3022504 -5.84487  ]]
Iteration 100 of 1000: loss=0.239 " + "l1=0" + "l2=0.239 f=-0.476 shape=(1, 9000, 1)
logits [[ 2.3761446 -1.7341002  2.3887959 -4.935538 ]]
Iteration 200 of 1000: loss=0.169 " + "l1=0" + "l2=0.169 f=-0.475 shape=(1, 9000, 1)
logits [[ 2.3700924 -1.7114289  2.379477  -4.938669 ]]
Iteration 300 of 1000: loss=0.139 " + "l1=0" + "l2=0.139 f=-0.473 shape=(1, 9000, 1)
logits [[ 2.3648672 -1.7009376  2.3741498 -4.928474 ]]
Iteration 400 of 1000: loss=0.122 " + "l1=0" + "l2=0.122 f=-0.471 shape=(1, 9000, 1)
logits [[ 2.3665376 -1.6981745  2.371831  -4.9228096]]
Iteration 500 of 1000: loss=0.111 " + "l1=0" + "l2=0.111 f=-0.47 shape=(1, 9000, 1)
logits [[ 2.3563874 -1.6893647  2.3663378 -4.9145894]]
Iteration 600 of 1000: loss=0.1 " + "l1=0.000233" + "l2=0.0998 f=-0.47 shape=(1, 9000, 1)
logits [[ 2.359844  -1.6865644  2.359611  -4.913418 ]]
Iteration 700 of 1000: loss=0.0933 " + "l1=0" + "l2=0.0933 f=-0.473 shape=(1, 9000, 1)
logits [[ 2.3434439 -1.6870688  2.3576224 -4.9044456]]
Iteration 800 of 1000: loss=0.0845 " + "l1=0" + "l2=0.0845 f=-0.473 shape=(1, 9000, 1)
logits [[ 2.345189  -1.6919979  2.3529897 -4.8993945]]
Iteration 900 of 1000: loss=0.0774 " + "l1=0" + "l2=0.0774 f=-0.474 shape=(1, 9000, 1)
logits [[ 2.330425  -1.6919706  2.3446352 -4.8800287]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.727 " + "l1=0.727" + "l2=0 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.6234338 -2.0432518  2.3022504 -5.84487  ]]
Iteration 100 of 1000: loss=0.244 " + "l1=0.00245" + "l2=0.242 f=-0.478 shape=(1, 9000, 1)
logits [[ 2.3879368 -1.7434293  2.3834746 -4.9412546]]
Iteration 200 of 1000: loss=0.163 " + "l1=0.00766" + "l2=0.156 f=-0.476 shape=(1, 9000, 1)
logits [[ 2.38949   -1.7160405  2.375556  -4.9527707]]
Iteration 300 of 1000: loss=0.13 " + "l1=0.00262" + "l2=0.127 f=-0.472 shape=(1, 9000, 1)
logits [[ 2.3820548 -1.708383   2.3772993 -4.939715 ]]
Iteration 400 of 1000: loss=0.113 " + "l1=0" + "l2=0.113 f=-0.472 shape=(1, 9000, 1)
logits [[ 2.3667088 -1.7010654  2.3726196 -4.9250607]]
Iteration 500 of 1000: loss=0.0996 " + "l1=0" + "l2=0.0996 f=-0.471 shape=(1, 9000, 1)
logits [[ 2.361227  -1.6926717  2.362214  -4.9160724]]
Iteration 600 of 1000: loss=0.0925 " + "l1=0" + "l2=0.0925 f=-0.472 shape=(1, 9000, 1)
logits [[ 2.3362505 -1.6841695  2.3568559 -4.896994 ]]
Iteration 700 of 1000: loss=0.0804 " + "l1=0" + "l2=0.0804 f=-0.475 shape=(1, 9000, 1)
logits [[ 2.344988  -1.6901544  2.3465142 -4.9018974]]
Iteration 800 of 1000: loss=0.0737 " + "l1=0" + "l2=0.0737 f=-0.477 shape=(1, 9000, 1)
logits [[ 2.3283224 -1.6903292  2.342589  -4.8870974]]
Iteration 900 of 1000: loss=0.0678 " + "l1=0" + "l2=0.0678 f=-0.477 shape=(1, 9000, 1)
logits [[ 2.3196518 -1.6897359  2.3344247 -4.8707356]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.429 " + "l1=0.429" + "l2=0 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.6234338 -2.0432518  2.3022504 -5.84487  ]]
Iteration 100 of 1000: loss=0.277 " + "l1=0.183" + "l2=0.0941 f=-0.472 shape=(1, 9000, 1)
logits [[ 2.9139366 -1.904602   2.3521702 -5.249017 ]]
Iteration 200 of 1000: loss=0.197 " + "l1=0.0452" + "l2=0.152 f=-0.469 shape=(1, 9000, 1)
logits [[ 2.5168078 -1.808287   2.3778086 -4.963343 ]]
Iteration 300 of 1000: loss=0.132 " + "l1=0" + "l2=0.132 f=-0.47 shape=(1, 9000, 1)
logits [[ 2.3830402 -1.7285435  2.3835227 -4.919783 ]]
Iteration 400 of 1000: loss=0.108 " + "l1=0" + "l2=0.108 f=-0.472 shape=(1, 9000, 1)
logits [[ 2.370239  -1.7094127  2.3712208 -4.91815  ]]
Iteration 500 of 1000: loss=0.0915 " + "l1=0.000328" + "l2=0.0912 f=-0.473 shape=(1, 9000, 1)
logits [[ 2.3556972 -1.6975983  2.3546867 -4.9058604]]
Iteration 600 of 1000: loss=0.08 " + "l1=0" + "l2=0.08 f=-0.474 shape=(1, 9000, 1)
logits [[ 2.3418987 -1.6940315  2.349007  -4.8925114]]
Iteration 700 of 1000: loss=0.0697 " + "l1=0.000431" + "l2=0.0692 f=-0.475 shape=(1, 9000, 1)
logits [[ 2.3419762 -1.6987715  2.3406494 -4.8835573]]
Iteration 800 of 1000: loss=0.0618 " + "l1=0" + "l2=0.0618 f=-0.474 shape=(1, 9000, 1)
logits [[ 2.3333354 -1.7064195  2.3374622 -4.8623056]]
Iteration 900 of 1000: loss=0.0552 " + "l1=0.000193" + "l2=0.055 f=-0.474 shape=(1, 9000, 1)
logits [[ 2.3290699 -1.7076784  2.3284764 -4.844811 ]]
--- 262.35528540611267 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0947 " + "l1=0.0947" + "l2=0 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.6234338 -2.0432518  2.3022504 -5.84487  ]]
Iteration 100 of 1000: loss=0.0939 " + "l1=0.0934" + "l2=0.000491 f=-0.487 shape=(1, 9000, 1)
logits [[ 3.564015  -2.021094   2.2835426 -5.773265 ]]
Iteration 200 of 1000: loss=0.0936 " + "l1=0.0931" + "l2=0.000537 f=-0.486 shape=(1, 9000, 1)
logits [[ 3.5523763 -2.0164056  2.2794418 -5.7587276]]
Iteration 300 of 1000: loss=0.0935 " + "l1=0.0928" + "l2=0.00068 f=-0.485 shape=(1, 9000, 1)
logits [[ 3.5389292 -2.0110042  2.2746632 -5.741761 ]]
Iteration 400 of 1000: loss=0.0933 " + "l1=0.0925" + "l2=0.000783 f=-0.484 shape=(1, 9000, 1)
logits [[ 3.5257683 -2.0054984  2.2699838 -5.7251854]]
Iteration 500 of 1000: loss=0.0932 " + "l1=0.0922" + "l2=0.000947 f=-0.483 shape=(1, 9000, 1)
logits [[ 3.5129256 -2.000131   2.265363  -5.7091475]]
Iteration 600 of 1000: loss=0.093 " + "l1=0.0919" + "l2=0.0011 f=-0.482 shape=(1, 9000, 1)
logits [[ 3.5002935 -1.9948593  2.2609134 -5.6936193]]
Iteration 700 of 1000: loss=0.0929 " + "l1=0.0917" + "l2=0.00123 f=-0.481 shape=(1, 9000, 1)
logits [[ 3.488477  -1.9899341  2.2568898 -5.679266 ]]
Iteration 800 of 1000: loss=0.0929 " + "l1=0.0914" + "l2=0.00144 f=-0.48 shape=(1, 9000, 1)
logits [[ 3.4764884 -1.9849055  2.2528954 -5.665234 ]]
Iteration 900 of 1000: loss=0.0928 " + "l1=0.0912" + "l2=0.00163 f=-0.479 shape=(1, 9000, 1)
logits [[ 3.4649947 -1.9802036  2.2491636 -5.651928 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.947 " + "l1=0.947" + "l2=0 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.6234338 -2.0432518  2.3022504 -5.84487  ]]
Iteration 100 of 1000: loss=0.874 " + "l1=0.837" + "l2=0.0366 f=-0.459 shape=(1, 9000, 1)
logits [[ 3.1138577 -1.8505545  2.162167  -5.2598157]]
Iteration 200 of 1000: loss=0.837 " + "l1=0.778" + "l2=0.059 f=-0.44 shape=(1, 9000, 1)
logits [[ 2.8445442 -1.7562249  2.0897524 -4.9373927]]
Iteration 300 of 1000: loss=0.803 " + "l1=0.727" + "l2=0.0761 f=-0.423 shape=(1, 9000, 1)
logits [[ 2.6133826 -1.6661334  2.0153742 -4.6534786]]
Iteration 400 of 1000: loss=0.765 " + "l1=0.677" + "l2=0.0883 f=-0.408 shape=(1, 9000, 1)
logits [[ 2.389617  -1.5867884  1.9436694 -4.3769   ]]
Iteration 500 of 1000: loss=0.729 " + "l1=0.631" + "l2=0.0981 f=-0.397 shape=(1, 9000, 1)
logits [[ 2.1790953 -1.526782   1.8843457 -4.126021 ]]
Iteration 600 of 1000: loss=0.686 " + "l1=0.575" + "l2=0.111 f=-0.384 shape=(1, 9000, 1)
logits [[ 1.9248296 -1.4699131  1.8317314 -3.8211334]]
Iteration 700 of 1000: loss=0.648 " + "l1=0.536" + "l2=0.112 f=-0.356 shape=(1, 9000, 1)
logits [[ 1.7959828 -1.454186   1.7979288 -3.5633023]]
Iteration 800 of 1000: loss=0.617 " + "l1=0.513" + "l2=0.104 f=-0.336 shape=(1, 9000, 1)
logits [[ 1.7485077 -1.4640621  1.7507569 -3.3774512]]
Iteration 900 of 1000: loss=0.595 " + "l1=0.49" + "l2=0.105 f=-0.326 shape=(1, 9000, 1)
logits [[ 1.680073  -1.4505488  1.6830422 -3.2169802]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.47 " + "l1=9.47" + "l2=0 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.6234338 -2.0432518  2.3022504 -5.84487  ]]
Iteration 100 of 1000: loss=4.82 " + "l1=3.38" + "l2=1.45 f=-0.291 shape=(1, 9000, 1)
logits [[ 0.96326584 -0.8345405   1.042006   -2.333914  ]]
Iteration 200 of 1000: loss=2.84 " + "l1=0.552" + "l2=2.29 f=-0.17 shape=(1, 9000, 1)
logits [[-0.45399764 -0.314949    0.31961676 -0.23194453]]
Iteration 300 of 1000: loss=1.84 " + "l1=0" + "l2=1.84 f=-0.148 shape=(1, 9000, 1)
logits [[-0.5426978  -0.37924105  0.15968248  0.16850546]]
Iteration 400 of 1000: loss=1.43 " + "l1=0.015" + "l2=1.42 f=-0.165 shape=(1, 9000, 1)
logits [[-0.47286826 -0.53129905  0.17916137  0.16412249]]
Iteration 500 of 1000: loss=1.19 " + "l1=0" + "l2=1.19 f=-0.173 shape=(1, 9000, 1)
logits [[-0.42124978 -0.6195      0.17403063  0.17517853]]
Iteration 600 of 1000: loss=1.05 " + "l1=0.00238" + "l2=1.05 f=-0.182 shape=(1, 9000, 1)
logits [[-0.40777403 -0.68415856  0.1833539   0.18097794]]
Iteration 700 of 1000: loss=0.958 " + "l1=0" + "l2=0.958 f=-0.186 shape=(1, 9000, 1)
logits [[-0.40232456 -0.72038233  0.18288241  0.1942234 ]]
Iteration 800 of 1000: loss=0.885 " + "l1=0" + "l2=0.885 f=-0.189 shape=(1, 9000, 1)
logits [[-0.4079442  -0.7339299   0.18882865  0.196881  ]]
Iteration 900 of 1000: loss=0.828 " + "l1=0.00782" + "l2=0.82 f=-0.193 shape=(1, 9000, 1)
logits [[-0.40730247 -0.7700447   0.20666023  0.19883737]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.21 " + "l1=5.21" + "l2=0 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.6234338 -2.0432518  2.3022504 -5.84487  ]]
Iteration 100 of 1000: loss=3.3 " + "l1=2.63" + "l2=0.671 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.5104517 -1.166391   1.5102886 -3.270222 ]]
Iteration 200 of 1000: loss=2.62 " + "l1=1.78" + "l2=0.836 f=-0.275 shape=(1, 9000, 1)
logits [[ 0.9438003  -0.93276644  1.0655493  -2.1775033 ]]
Iteration 300 of 1000: loss=2.06 " + "l1=1" + "l2=1.06 f=-0.207 shape=(1, 9000, 1)
logits [[ 0.22612354 -0.73492825  0.7524386  -1.0708034 ]]
Iteration 400 of 1000: loss=1.58 " + "l1=0.448" + "l2=1.13 f=-0.2 shape=(1, 9000, 1)
logits [[-0.29542676 -0.6199332   0.46564248 -0.34885257]]
Iteration 500 of 1000: loss=1.1 " + "l1=0" + "l2=1.1 f=-0.218 shape=(1, 9000, 1)
logits [[-0.6621985  -0.5236473   0.15236859  0.1598615 ]]
Iteration 600 of 1000: loss=0.867 " + "l1=0.00572" + "l2=0.862 f=-0.217 shape=(1, 9000, 1)
logits [[-0.5594652  -0.6338522   0.16690081  0.15650624]]
Iteration 700 of 1000: loss=0.771 " + "l1=0" + "l2=0.771 f=-0.218 shape=(1, 9000, 1)
logits [[-0.54164445 -0.68391335  0.17179933  0.18006203]]
Iteration 800 of 1000: loss=0.712 " + "l1=0.00917" + "l2=0.703 f=-0.206 shape=(1, 9000, 1)
logits [[-0.4825623  -0.76635563  0.2204708   0.20380703]]
Iteration 900 of 1000: loss=0.659 " + "l1=0.00324" + "l2=0.656 f=-0.197 shape=(1, 9000, 1)
logits [[-0.4660657  -0.7957881   0.2408052   0.23490801]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.08 " + "l1=3.08" + "l2=0 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.6234338 -2.0432518  2.3022504 -5.84487  ]]
Iteration 100 of 1000: loss=2.26 " + "l1=1.87" + "l2=0.392 f=-0.401 shape=(1, 9000, 1)
logits [[ 1.8532584 -1.4033011  1.8526293 -3.9074094]]
Iteration 200 of 1000: loss=1.95 " + "l1=1.52" + "l2=0.421 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.4905009 -1.2025498  1.491224  -3.1970158]]
Iteration 300 of 1000: loss=1.69 " + "l1=1.25" + "l2=0.441 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.2336806 -1.0803827  1.2625347 -2.5946608]]
Iteration 400 of 1000: loss=1.51 " + "l1=1.04" + "l2=0.463 f=-0.257 shape=(1, 9000, 1)
logits [[ 0.9224173 -1.038971   1.1497198 -2.059643 ]]
Iteration 500 of 1000: loss=1.31 " + "l1=0.799" + "l2=0.513 f=-0.237 shape=(1, 9000, 1)
logits [[ 0.49845043 -0.99949783  1.0059959  -1.4517959 ]]
Iteration 600 of 1000: loss=1.11 " + "l1=0.548" + "l2=0.566 f=-0.224 shape=(1, 9000, 1)
logits [[ 0.11620519 -0.9359027   0.8052189  -0.881953  ]]
Iteration 700 of 1000: loss=0.949 " + "l1=0.36" + "l2=0.589 f=-0.197 shape=(1, 9000, 1)
logits [[-0.10213468 -0.90672165  0.6648513  -0.44278115]]
Iteration 800 of 1000: loss=0.749 " + "l1=0.0934" + "l2=0.656 f=-0.169 shape=(1, 9000, 1)
logits [[-0.3342158  -0.9454675   0.44638947  0.15912312]]
Iteration 900 of 1000: loss=0.612 " + "l1=0" + "l2=0.612 f=-0.153 shape=(1, 9000, 1)
logits [[-0.40272024 -0.9894245   0.38860196  0.39037055]]
--- 291.4102072715759 seconds ---
Adv result:3
Loading record A05458
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0588 " + "l1=0.0588" + "l2=0 f=-0.476 shape=(1, 9000, 1)
logits [[ 4.5437922 -1.3331519  1.7293348 -6.8441453]]
Iteration 100 of 1000: loss=0.0582 " + "l1=0.0578" + "l2=0.000374 f=-0.475 shape=(1, 9000, 1)
logits [[ 4.4921083 -1.292112   1.7078787 -6.807088 ]]
Iteration 200 of 1000: loss=0.058 " + "l1=0.0576" + "l2=0.000389 f=-0.475 shape=(1, 9000, 1)
logits [[ 4.4816937 -1.2829075  1.7026129 -6.7996116]]
Iteration 300 of 1000: loss=0.0579 " + "l1=0.0574" + "l2=0.000486 f=-0.474 shape=(1, 9000, 1)
logits [[ 4.4691367 -1.2717084  1.696558  -6.7904925]]
Iteration 400 of 1000: loss=0.0578 " + "l1=0.0572" + "l2=0.000606 f=-0.474 shape=(1, 9000, 1)
logits [[ 4.456407  -1.2602899  1.6903179 -6.781176 ]]
Iteration 500 of 1000: loss=0.0576 " + "l1=0.0569" + "l2=0.000713 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.4438853 -1.2491153  1.6842667 -6.772082 ]]
Iteration 600 of 1000: loss=0.0576 " + "l1=0.0567" + "l2=0.000915 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.4317718 -1.2382208  1.6784338 -6.763524 ]]
Iteration 700 of 1000: loss=0.0575 " + "l1=0.0565" + "l2=0.00103 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.42009   -1.2279621  1.6729606 -6.755422 ]]
Iteration 800 of 1000: loss=0.0574 " + "l1=0.0563" + "l2=0.0011 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.409077  -1.2184547  1.6679156 -6.7478614]]
Iteration 900 of 1000: loss=0.0573 " + "l1=0.0561" + "l2=0.0012 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.3982873 -1.2095786  1.6632075 -6.740471 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.588 " + "l1=0.588" + "l2=0 f=-0.476 shape=(1, 9000, 1)
logits [[ 4.5437922 -1.3331519  1.7293348 -6.8441453]]
Iteration 100 of 1000: loss=0.531 " + "l1=0.498" + "l2=0.0328 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.044603   -0.93958545  1.5179396  -6.5148225 ]]
Iteration 200 of 1000: loss=0.502 " + "l1=0.455" + "l2=0.0473 f=-0.471 shape=(1, 9000, 1)
logits [[ 3.8018925 -0.7440246  1.4133066 -6.3542933]]
Iteration 300 of 1000: loss=0.476 " + "l1=0.414" + "l2=0.0613 f=-0.475 shape=(1, 9000, 1)
logits [[ 3.5688214  -0.57560974  1.3192585  -6.212673  ]]
Iteration 400 of 1000: loss=0.452 " + "l1=0.374" + "l2=0.0784 f=-0.48 shape=(1, 9000, 1)
logits [[ 3.3274846 -0.4099577  1.2283041 -6.064357 ]]
Iteration 500 of 1000: loss=0.429 " + "l1=0.339" + "l2=0.0901 f=-0.484 shape=(1, 9000, 1)
logits [[ 3.1055498 -0.280473   1.1603104 -5.920864 ]]
Iteration 600 of 1000: loss=0.405 " + "l1=0.31" + "l2=0.0957 f=-0.488 shape=(1, 9000, 1)
logits [[ 2.9153938  -0.18103984  1.1068655  -5.794598  ]]
Iteration 700 of 1000: loss=0.383 " + "l1=0.284" + "l2=0.099 f=-0.494 shape=(1, 9000, 1)
logits [[ 2.7431812 -0.1010178  1.0581989 -5.676614 ]]
Iteration 800 of 1000: loss=0.36 " + "l1=0.252" + "l2=0.108 f=-0.504 shape=(1, 9000, 1)
logits [[ 2.5250654e+00  2.8872434e-03  9.9323219e-01 -5.5368514e+00]]
Iteration 900 of 1000: loss=0.337 " + "l1=0.222" + "l2=0.115 f=-0.51 shape=(1, 9000, 1)
logits [[ 2.3120494   0.09436941  0.92239755 -5.3669877 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.88 " + "l1=5.88" + "l2=0 f=-0.476 shape=(1, 9000, 1)
logits [[ 4.5437922 -1.3331519  1.7293348 -6.8441453]]
Iteration 100 of 1000: loss=1.36 " + "l1=0" + "l2=1.36 f=-0.674 shape=(1, 9000, 1)
logits [[ 0.7795578   0.81592923  0.7203895  -5.0113063 ]]
Iteration 200 of 1000: loss=0.928 " + "l1=0.0104" + "l2=0.918 f=-0.673 shape=(1, 9000, 1)
logits [[ 0.82282656  0.8123876   0.6407124  -4.967436  ]]
Iteration 300 of 1000: loss=0.804 " + "l1=0" + "l2=0.804 f=-0.67 shape=(1, 9000, 1)
logits [[ 0.7356454   0.83140785  0.5959224  -4.8430667 ]]
Iteration 400 of 1000: loss=0.698 " + "l1=0" + "l2=0.698 f=-0.652 shape=(1, 9000, 1)
logits [[ 0.78799784  0.7955931   0.58296716 -4.7740116 ]]
Iteration 500 of 1000: loss=0.661 " + "l1=0" + "l2=0.661 f=-0.646 shape=(1, 9000, 1)
logits [[ 0.7395138   0.80391306  0.55719894 -4.683793  ]]
Iteration 600 of 1000: loss=0.621 " + "l1=0" + "l2=0.621 f=-0.64 shape=(1, 9000, 1)
logits [[ 0.7194485  0.7938701  0.5472887 -4.621742 ]]
Iteration 700 of 1000: loss=0.577 " + "l1=0" + "l2=0.577 f=-0.633 shape=(1, 9000, 1)
logits [[ 0.7128043  0.7704823  0.5429979 -4.560266 ]]
Iteration 800 of 1000: loss=0.534 " + "l1=0" + "l2=0.534 f=-0.627 shape=(1, 9000, 1)
logits [[ 0.7150094   0.74467134  0.5394515  -4.5082335 ]]
Iteration 900 of 1000: loss=0.502 " + "l1=0" + "l2=0.502 f=-0.621 shape=(1, 9000, 1)
logits [[ 0.70167226  0.7341654   0.53511643 -4.4565334 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.23 " + "l1=3.23" + "l2=0 f=-0.476 shape=(1, 9000, 1)
logits [[ 4.5437922 -1.3331519  1.7293348 -6.8441453]]
Iteration 100 of 1000: loss=1.3 " + "l1=0.131" + "l2=1.17 f=-0.668 shape=(1, 9000, 1)
logits [[ 0.96731216  0.7282473   0.7428042  -5.110379  ]]
Iteration 200 of 1000: loss=0.799 " + "l1=0.00973" + "l2=0.79 f=-0.664 shape=(1, 9000, 1)
logits [[ 0.8087734   0.79107696  0.6169548  -4.87383   ]]
Iteration 300 of 1000: loss=0.681 " + "l1=0.0123" + "l2=0.669 f=-0.645 shape=(1, 9000, 1)
logits [[ 0.79663837  0.77424043  0.582619   -4.7340765 ]]
Iteration 400 of 1000: loss=0.6 " + "l1=0.00329" + "l2=0.597 f=-0.636 shape=(1, 9000, 1)
logits [[ 0.7717633   0.76577646  0.5658376  -4.649328  ]]
Iteration 500 of 1000: loss=0.551 " + "l1=0" + "l2=0.551 f=-0.634 shape=(1, 9000, 1)
logits [[ 0.71845436  0.76473564  0.5639979  -4.5833607 ]]
Iteration 600 of 1000: loss=0.504 " + "l1=0.00861" + "l2=0.496 f=-0.624 shape=(1, 9000, 1)
logits [[ 0.7441219  0.728464   0.5734445 -4.5402455]]
Iteration 700 of 1000: loss=0.465 " + "l1=0" + "l2=0.465 f=-0.622 shape=(1, 9000, 1)
logits [[ 0.7036896   0.72228456  0.57521975 -4.4896264 ]]
Iteration 800 of 1000: loss=0.434 " + "l1=0.00255" + "l2=0.431 f=-0.614 shape=(1, 9000, 1)
logits [[ 0.7068338   0.7021927   0.58302784 -4.448671  ]]
Iteration 900 of 1000: loss=0.415 " + "l1=0" + "l2=0.415 f=-0.613 shape=(1, 9000, 1)
logits [[ 0.6530916  0.711135   0.57966   -4.394095 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.91 " + "l1=1.91" + "l2=0 f=-0.476 shape=(1, 9000, 1)
logits [[ 4.5437922 -1.3331519  1.7293348 -6.8441453]]
Iteration 100 of 1000: loss=1.22 " + "l1=0.785" + "l2=0.436 f=-0.54 shape=(1, 9000, 1)
logits [[ 2.4935153   0.07730944  1.0529448  -5.7847595 ]]
Iteration 200 of 1000: loss=0.842 " + "l1=0.204" + "l2=0.638 f=-0.64 shape=(1, 9000, 1)
logits [[ 1.2176131   0.5886491   0.76316696 -5.1280565 ]]
Iteration 300 of 1000: loss=0.592 " + "l1=0" + "l2=0.592 f=-0.656 shape=(1, 9000, 1)
logits [[ 0.74218726  0.75690454  0.6118415  -4.733167  ]]
Iteration 400 of 1000: loss=0.507 " + "l1=0.0107" + "l2=0.496 f=-0.644 shape=(1, 9000, 1)
logits [[ 0.7567362  0.7239475  0.6242944 -4.6810565]]
Iteration 500 of 1000: loss=0.448 " + "l1=0.00824" + "l2=0.439 f=-0.634 shape=(1, 9000, 1)
logits [[ 0.7329993   0.70764774  0.62796426 -4.604154  ]]
Iteration 600 of 1000: loss=0.394 " + "l1=0" + "l2=0.394 f=-0.628 shape=(1, 9000, 1)
logits [[ 0.70110047  0.70859987  0.6305532  -4.5510416 ]]
Iteration 700 of 1000: loss=0.366 " + "l1=0.0174" + "l2=0.349 f=-0.617 shape=(1, 9000, 1)
logits [[ 0.73840106  0.68498284  0.6486687  -4.5402865 ]]
Iteration 800 of 1000: loss=0.33 " + "l1=0" + "l2=0.33 f=-0.613 shape=(1, 9000, 1)
logits [[ 0.68815506  0.7019219   0.64133567 -4.483428  ]]
Iteration 900 of 1000: loss=0.306 " + "l1=0.000108" + "l2=0.306 f=-0.603 shape=(1, 9000, 1)
logits [[ 0.6934508   0.69312     0.63781005 -4.4359083 ]]
--- 292.6669132709503 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0281 " + "l1=0.0281" + "l2=0 f=-0.476 shape=(1, 9000, 1)
logits [[ 4.5437922 -1.3331519  1.7293348 -6.8441453]]
Iteration 100 of 1000: loss=0.028 " + "l1=0.0278" + "l2=0.000164 f=-0.477 shape=(1, 9000, 1)
logits [[ 4.5129533 -1.3289768  1.7298992 -6.8214674]]
Iteration 200 of 1000: loss=0.028 " + "l1=0.0278" + "l2=0.000131 f=-0.477 shape=(1, 9000, 1)
logits [[ 4.5115724 -1.3288096  1.7294981 -6.820314 ]]
Iteration 300 of 1000: loss=0.0279 " + "l1=0.0278" + "l2=0.000154 f=-0.477 shape=(1, 9000, 1)
logits [[ 4.507926  -1.3280603  1.7292912 -6.8175163]]
Iteration 400 of 1000: loss=0.028 " + "l1=0.0277" + "l2=0.000222 f=-0.477 shape=(1, 9000, 1)
logits [[ 4.5038238 -1.3270586  1.7290361 -6.814451 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.281 " + "l1=0.281" + "l2=0 f=-0.476 shape=(1, 9000, 1)
logits [[ 4.5437922 -1.3331519  1.7293348 -6.8441453]]
Iteration 100 of 1000: loss=0.267 " + "l1=0.258" + "l2=0.00896 f=-0.484 shape=(1, 9000, 1)
logits [[ 4.3069444 -1.2990452  1.7283117 -6.6723   ]]
Iteration 200 of 1000: loss=0.261 " + "l1=0.248" + "l2=0.013 f=-0.486 shape=(1, 9000, 1)
logits [[ 4.210601  -1.2804503  1.726156  -6.6012993]]
Iteration 300 of 1000: loss=0.257 " + "l1=0.241" + "l2=0.0158 f=-0.487 shape=(1, 9000, 1)
logits [[ 4.1328025 -1.2567462  1.7229893 -6.548322 ]]
Iteration 400 of 1000: loss=0.253 " + "l1=0.234" + "l2=0.0184 f=-0.488 shape=(1, 9000, 1)
logits [[ 4.063886  -1.2379558  1.7212698 -6.5002933]]
Iteration 500 of 1000: loss=0.249 " + "l1=0.228" + "l2=0.0205 f=-0.489 shape=(1, 9000, 1)
logits [[ 4.003158  -1.2202113  1.718505  -6.456633 ]]
Iteration 600 of 1000: loss=0.245 " + "l1=0.223" + "l2=0.0226 f=-0.489 shape=(1, 9000, 1)
logits [[ 3.9419425 -1.2013179  1.7158006 -6.4131947]]
Iteration 700 of 1000: loss=0.242 " + "l1=0.217" + "l2=0.0245 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.8831246 -1.182961   1.7125238 -6.3707232]]
Iteration 800 of 1000: loss=0.238 " + "l1=0.211" + "l2=0.0264 f=-0.49 shape=(1, 9000, 1)
logits [[ 3.8251796 -1.166264   1.7107296 -6.3301706]]
Iteration 900 of 1000: loss=0.234 " + "l1=0.205" + "l2=0.0283 f=-0.491 shape=(1, 9000, 1)
logits [[ 3.7618854 -1.1455498  1.7074436 -6.2867785]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.81 " + "l1=2.81" + "l2=0 f=-0.476 shape=(1, 9000, 1)
logits [[ 4.5437922 -1.3331519  1.7293348 -6.8441453]]
Iteration 100 of 1000: loss=0.893 " + "l1=0.0218" + "l2=0.871 f=-0.634 shape=(1, 9000, 1)
logits [[ 1.7554699  -0.63387454  1.7336502  -5.3917685 ]]
Iteration 200 of 1000: loss=0.603 " + "l1=0" + "l2=0.603 f=-0.643 shape=(1, 9000, 1)
logits [[ 1.8223537 -0.6526511  1.8452389 -5.587755 ]]
Iteration 300 of 1000: loss=0.513 " + "l1=0.0125" + "l2=0.5 f=-0.641 shape=(1, 9000, 1)
logits [[ 1.867725   -0.67399013  1.8552303  -5.6143804 ]]
Iteration 400 of 1000: loss=0.449 " + "l1=0" + "l2=0.449 f=-0.639 shape=(1, 9000, 1)
logits [[ 1.8643    -0.6781153  1.8645964 -5.605538 ]]
Iteration 500 of 1000: loss=0.422 " + "l1=0" + "l2=0.422 f=-0.635 shape=(1, 9000, 1)
logits [[ 1.8375752 -0.6770356  1.8745595 -5.576714 ]]
Iteration 600 of 1000: loss=0.389 " + "l1=0.0169" + "l2=0.372 f=-0.622 shape=(1, 9000, 1)
logits [[ 1.8880885  -0.68075526  1.8712146  -5.5659556 ]]
Iteration 700 of 1000: loss=0.351 " + "l1=0" + "l2=0.351 f=-0.62 shape=(1, 9000, 1)
logits [[ 1.8383688 -0.6494235  1.8657403 -5.5329423]]
Iteration 800 of 1000: loss=0.314 " + "l1=0" + "l2=0.314 f=-0.607 shape=(1, 9000, 1)
logits [[ 1.8611639  -0.63967687  1.8630604  -5.5137563 ]]
Iteration 900 of 1000: loss=0.291 " + "l1=0" + "l2=0.291 f=-0.597 shape=(1, 9000, 1)
logits [[ 1.8519874 -0.6213576  1.8655134 -5.483265 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.55 " + "l1=1.55" + "l2=0 f=-0.476 shape=(1, 9000, 1)
logits [[ 4.5437922 -1.3331519  1.7293348 -6.8441453]]
Iteration 100 of 1000: loss=0.929 " + "l1=0.518" + "l2=0.412 f=-0.567 shape=(1, 9000, 1)
logits [[ 2.774892  -1.1013157  1.8337947 -5.774363 ]]
Iteration 200 of 1000: loss=0.558 " + "l1=0.0141" + "l2=0.544 f=-0.629 shape=(1, 9000, 1)
logits [[ 1.950223  -0.8304978  1.9246087 -5.561284 ]]
Iteration 300 of 1000: loss=0.447 " + "l1=0" + "l2=0.447 f=-0.629 shape=(1, 9000, 1)
logits [[ 1.8729416  -0.72968596  1.875528   -5.5340805 ]]
Iteration 400 of 1000: loss=0.388 " + "l1=0" + "l2=0.388 f=-0.62 shape=(1, 9000, 1)
logits [[ 1.8657596  -0.71536016  1.8671046  -5.4994082 ]]
Iteration 500 of 1000: loss=0.344 " + "l1=0" + "l2=0.344 f=-0.611 shape=(1, 9000, 1)
logits [[ 1.8613274 -0.7141894  1.8647231 -5.455223 ]]
Iteration 600 of 1000: loss=0.31 " + "l1=0" + "l2=0.31 f=-0.6 shape=(1, 9000, 1)
logits [[ 1.8556895  -0.70797914  1.8652356  -5.412415  ]]
Iteration 700 of 1000: loss=0.277 " + "l1=0.00364" + "l2=0.273 f=-0.581 shape=(1, 9000, 1)
logits [[ 1.8587697 -0.67529    1.8521594 -5.3599973]]
Iteration 800 of 1000: loss=0.253 " + "l1=0" + "l2=0.253 f=-0.568 shape=(1, 9000, 1)
logits [[ 1.8350571  -0.66370606  1.8518494  -5.2943087 ]]
Iteration 900 of 1000: loss=0.235 " + "l1=0" + "l2=0.235 f=-0.554 shape=(1, 9000, 1)
logits [[ 1.8234286 -0.6581888  1.8437496 -5.2261114]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.915 " + "l1=0.915" + "l2=0 f=-0.476 shape=(1, 9000, 1)
logits [[ 4.5437922 -1.3331519  1.7293348 -6.8441453]]
Iteration 100 of 1000: loss=0.729 " + "l1=0.599" + "l2=0.13 f=-0.517 shape=(1, 9000, 1)
logits [[ 3.6162777 -1.2173198  1.7727456 -6.241057 ]]
Iteration 200 of 1000: loss=0.631 " + "l1=0.418" + "l2=0.213 f=-0.544 shape=(1, 9000, 1)
logits [[ 3.0833497 -1.1322733  1.7957991 -5.9222684]]
Iteration 300 of 1000: loss=0.54 " + "l1=0.265" + "l2=0.275 f=-0.555 shape=(1, 9000, 1)
logits [[ 2.569147   -0.93846154  1.7528406  -5.603765  ]]
Iteration 400 of 1000: loss=0.446 " + "l1=0.131" + "l2=0.314 f=-0.576 shape=(1, 9000, 1)
logits [[ 2.0903568 -0.7322305  1.6868205 -5.347749 ]]
Iteration 500 of 1000: loss=0.341 " + "l1=0.00653" + "l2=0.334 f=-0.587 shape=(1, 9000, 1)
logits [[ 1.7883481  -0.66581494  1.7682422  -5.237706  ]]
Iteration 600 of 1000: loss=0.285 " + "l1=0.000816" + "l2=0.284 f=-0.572 shape=(1, 9000, 1)
logits [[ 1.7708019  -0.64761573  1.7682904  -5.177864  ]]
Iteration 700 of 1000: loss=0.246 " + "l1=0.00159" + "l2=0.244 f=-0.551 shape=(1, 9000, 1)
logits [[ 1.7690237  -0.63389635  1.7641431  -5.1049695 ]]
Iteration 800 of 1000: loss=0.216 " + "l1=0" + "l2=0.216 f=-0.536 shape=(1, 9000, 1)
logits [[ 1.7592231  -0.63852394  1.7644109  -5.028935  ]]
Iteration 900 of 1000: loss=0.192 " + "l1=0.0011" + "l2=0.191 f=-0.523 shape=(1, 9000, 1)
logits [[ 1.7587795  -0.63761437  1.7553883  -4.968517  ]]
--- 258.80691170692444 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.114 " + "l1=0.114" + "l2=0 f=-0.476 shape=(1, 9000, 1)
logits [[ 4.5437922 -1.3331519  1.7293348 -6.8441453]]
Iteration 100 of 1000: loss=0.113 " + "l1=0.113" + "l2=0.000512 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.4813876 -1.3109627  1.710533  -6.7735314]]
Iteration 200 of 1000: loss=0.113 " + "l1=0.112" + "l2=0.000573 f=-0.473 shape=(1, 9000, 1)
logits [[ 4.4679575 -1.3049153  1.7058203 -6.7591767]]
Iteration 300 of 1000: loss=0.113 " + "l1=0.112" + "l2=0.00068 f=-0.472 shape=(1, 9000, 1)
logits [[ 4.453157  -1.2975816  1.7002265 -6.7429276]]
Iteration 400 of 1000: loss=0.112 " + "l1=0.112" + "l2=0.000843 f=-0.471 shape=(1, 9000, 1)
logits [[ 4.4382415 -1.2898883  1.6944658 -6.7265615]]
Iteration 500 of 1000: loss=0.112 " + "l1=0.111" + "l2=0.000991 f=-0.47 shape=(1, 9000, 1)
logits [[ 4.4237614 -1.2820066  1.6886414 -6.710787 ]]
Iteration 600 of 1000: loss=0.112 " + "l1=0.111" + "l2=0.00116 f=-0.469 shape=(1, 9000, 1)
logits [[ 4.4104276 -1.274606   1.6832626 -6.6961236]]
Iteration 700 of 1000: loss=0.112 " + "l1=0.111" + "l2=0.00131 f=-0.468 shape=(1, 9000, 1)
logits [[ 4.39822   -1.2675445  1.6782604 -6.6828666]]
Iteration 800 of 1000: loss=0.112 " + "l1=0.111" + "l2=0.00142 f=-0.468 shape=(1, 9000, 1)
logits [[ 4.386355  -1.2607467  1.6733983 -6.670135 ]]
Iteration 900 of 1000: loss=0.112 " + "l1=0.11" + "l2=0.00157 f=-0.467 shape=(1, 9000, 1)
logits [[ 4.3751903 -1.2544162  1.6688801 -6.658325 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.14 " + "l1=1.14" + "l2=0 f=-0.476 shape=(1, 9000, 1)
logits [[ 4.5437922 -1.3331519  1.7293348 -6.8441453]]
Iteration 100 of 1000: loss=1.06 " + "l1=1.02" + "l2=0.0424 f=-0.46 shape=(1, 9000, 1)
logits [[ 3.9593005 -1.1221023  1.5529495 -6.231327 ]]
Iteration 200 of 1000: loss=1.02 " + "l1=0.961" + "l2=0.0627 f=-0.45 shape=(1, 9000, 1)
logits [[ 3.6766293  -0.99789447  1.4521334  -5.9295726 ]]
Iteration 300 of 1000: loss=0.986 " + "l1=0.905" + "l2=0.0812 f=-0.44 shape=(1, 9000, 1)
logits [[ 3.404791   -0.87342286  1.3508042  -5.640548  ]]
Iteration 400 of 1000: loss=0.946 " + "l1=0.842" + "l2=0.104 f=-0.428 shape=(1, 9000, 1)
logits [[ 3.1064553  -0.74266326  1.2377692  -5.3146925 ]]
Iteration 500 of 1000: loss=0.904 " + "l1=0.777" + "l2=0.127 f=-0.417 shape=(1, 9000, 1)
logits [[ 2.802702  -0.6188105  1.120534  -4.970906 ]]
Iteration 600 of 1000: loss=0.854 " + "l1=0.699" + "l2=0.156 f=-0.408 shape=(1, 9000, 1)
logits [[ 2.4280663 -0.4677821  0.9675125 -4.5588703]]
Iteration 700 of 1000: loss=0.813 " + "l1=0.645" + "l2=0.167 f=-0.394 shape=(1, 9000, 1)
logits [[ 2.1805418  -0.35949737  0.87385154 -4.2720766 ]]
Iteration 800 of 1000: loss=0.772 " + "l1=0.594" + "l2=0.179 f=-0.383 shape=(1, 9000, 1)
logits [[ 1.9379317  -0.27480605  0.8032852  -3.9978073 ]]
Iteration 900 of 1000: loss=0.725 " + "l1=0.533" + "l2=0.192 f=-0.369 shape=(1, 9000, 1)
logits [[ 1.6793638  -0.23200504  0.730596   -3.6534576 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=11.4 " + "l1=11.4" + "l2=0 f=-0.476 shape=(1, 9000, 1)
logits [[ 4.5437922 -1.3331519  1.7293348 -6.8441453]]
Iteration 100 of 1000: loss=4.84 " + "l1=2.22" + "l2=2.62 f=-0.438 shape=(1, 9000, 1)
logits [[ 0.1170914   0.10306038  0.12661225 -2.0982416 ]]
Iteration 200 of 1000: loss=3.22 " + "l1=0.701" + "l2=2.52 f=-0.374 shape=(1, 9000, 1)
logits [[-0.23449506 -0.183073   -0.1940356  -0.88402116]]
Iteration 300 of 1000: loss=2.32 " + "l1=0.0212" + "l2=2.3 f=-0.336 shape=(1, 9000, 1)
logits [[-0.34826416 -0.3248783  -0.32593414 -0.34607768]]
Iteration 400 of 1000: loss=1.85 " + "l1=0.0275" + "l2=1.83 f=-0.324 shape=(1, 9000, 1)
logits [[-0.33591005 -0.3025463  -0.32642886 -0.33001694]]
Iteration 500 of 1000: loss=1.58 " + "l1=0" + "l2=1.58 f=-0.312 shape=(1, 9000, 1)
logits [[-0.3388379  -0.2978211  -0.32561865 -0.28478888]]
Iteration 600 of 1000: loss=1.39 " + "l1=0.0108" + "l2=1.38 f=-0.299 shape=(1, 9000, 1)
logits [[-0.29433745 -0.3136305  -0.28897282 -0.29975304]]
Iteration 700 of 1000: loss=1.25 " + "l1=0" + "l2=1.25 f=-0.299 shape=(1, 9000, 1)
logits [[-0.3204599  -0.29239684 -0.29752266 -0.28428876]]
Iteration 800 of 1000: loss=1.13 " + "l1=0" + "l2=1.13 f=-0.293 shape=(1, 9000, 1)
logits [[-0.321005   -0.27814892 -0.30367684 -0.2685498 ]]
Iteration 900 of 1000: loss=1.02 " + "l1=0" + "l2=1.02 f=-0.285 shape=(1, 9000, 1)
logits [[-0.29494786 -0.29325175 -0.2822097  -0.26793465]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.26 " + "l1=6.26" + "l2=0 f=-0.476 shape=(1, 9000, 1)
logits [[ 4.5437922 -1.3331519  1.7293348 -6.8441453]]
Iteration 100 of 1000: loss=3.75 " + "l1=2.27" + "l2=1.48 f=-0.517 shape=(1, 9000, 1)
logits [[ 0.69744617  0.07177346  0.59506804 -3.432191  ]]
Iteration 200 of 1000: loss=2.6 " + "l1=1.35" + "l2=1.25 f=-0.445 shape=(1, 9000, 1)
logits [[ 0.1699653   0.15830019  0.17260554 -2.279687  ]]
Iteration 300 of 1000: loss=2.02 " + "l1=0.807" + "l2=1.21 f=-0.381 shape=(1, 9000, 1)
logits [[-0.02330377 -0.01365457 -0.01048862 -1.4769115 ]]
Iteration 400 of 1000: loss=1.67 " + "l1=0.464" + "l2=1.2 f=-0.339 shape=(1, 9000, 1)
logits [[-0.13573003 -0.12622918 -0.12504974 -0.969564  ]]
Iteration 500 of 1000: loss=1.38 " + "l1=0.109" + "l2=1.28 f=-0.288 shape=(1, 9000, 1)
logits [[-0.25449127 -0.23091434 -0.23919871 -0.42933506]]
Iteration 600 of 1000: loss=1.15 " + "l1=0.00603" + "l2=1.15 f=-0.27 shape=(1, 9000, 1)
logits [[-0.2909838  -0.25795904 -0.2623861  -0.2689267 ]]
Iteration 700 of 1000: loss=0.992 " + "l1=0.00204" + "l2=0.99 f=-0.264 shape=(1, 9000, 1)
logits [[-0.26514643 -0.27586928 -0.2549394  -0.25864074]]
Iteration 800 of 1000: loss=0.868 " + "l1=0.000748" + "l2=0.867 f=-0.269 shape=(1, 9000, 1)
logits [[-0.302206   -0.250001   -0.27256033 -0.2513602 ]]
Iteration 900 of 1000: loss=0.768 " + "l1=0" + "l2=0.768 f=-0.261 shape=(1, 9000, 1)
logits [[-0.28687683 -0.25397447 -0.26349685 -0.24055919]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.7 " + "l1=3.7" + "l2=0 f=-0.476 shape=(1, 9000, 1)
logits [[ 4.5437922 -1.3331519  1.7293348 -6.8441453]]
Iteration 100 of 1000: loss=2.82 " + "l1=2.3" + "l2=0.525 f=-0.463 shape=(1, 9000, 1)
logits [[ 2.3215222  -0.56736237  1.1362811  -4.741774  ]]
Iteration 200 of 1000: loss=2.16 " + "l1=1.36" + "l2=0.8 f=-0.476 shape=(1, 9000, 1)
logits [[ 0.81692827  0.07087765  0.5701213  -3.3607218 ]]
Iteration 300 of 1000: loss=1.69 " + "l1=0.918" + "l2=0.769 f=-0.417 shape=(1, 9000, 1)
logits [[ 0.35077047  0.11215408  0.34266114 -2.4748356 ]]
Iteration 400 of 1000: loss=1.4 " + "l1=0.662" + "l2=0.74 f=-0.376 shape=(1, 9000, 1)
logits [[ 0.12708694  0.13416967  0.13605088 -1.9020948 ]]
Iteration 500 of 1000: loss=1.22 " + "l1=0.526" + "l2=0.699 f=-0.341 shape=(1, 9000, 1)
logits [[ 0.06959504  0.05328418  0.06254575 -1.5477914 ]]
Iteration 600 of 1000: loss=1.05 " + "l1=0.356" + "l2=0.698 f=-0.312 shape=(1, 9000, 1)
logits [[-0.03864552 -0.04121596 -0.03622801 -1.1323779 ]]
Iteration 700 of 1000: loss=0.9 " + "l1=0.243" + "l2=0.657 f=-0.292 shape=(1, 9000, 1)
logits [[-0.10624375 -0.1095643  -0.10243531 -0.8505174 ]]
Iteration 800 of 1000: loss=0.762 " + "l1=0.114" + "l2=0.649 f=-0.268 shape=(1, 9000, 1)
logits [[-0.18544252 -0.17832942 -0.181069   -0.5280673 ]]
Iteration 900 of 1000: loss=0.618 " + "l1=0.00693" + "l2=0.611 f=-0.248 shape=(1, 9000, 1)
logits [[-0.25278813 -0.23700611 -0.24190788 -0.2583221 ]]
--- 292.4453375339508 seconds ---
Adv result:3
Loading record A05459
(1, 4386)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0512 " + "l1=0.0512" + "l2=0 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.711455  -2.403737   1.0176052 -2.5317118]]
Iteration 100 of 1000: loss=0.0499 " + "l1=0.0493" + "l2=0.000623 f=-0.303 shape=(1, 9000, 1)
logits [[ 2.6010637  -2.3271165   0.96637326 -2.453502  ]]
Iteration 200 of 1000: loss=0.0494 " + "l1=0.0486" + "l2=0.00076 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.5588493 -2.304357   0.9506174 -2.4208202]]
Iteration 300 of 1000: loss=0.049 " + "l1=0.048" + "l2=0.000987 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.5162258 -2.2805705  0.9347708 -2.3883255]]
Iteration 400 of 1000: loss=0.0485 " + "l1=0.0473" + "l2=0.0012 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.47494   -2.256775   0.9198434 -2.3574443]]
Iteration 500 of 1000: loss=0.0481 " + "l1=0.0467" + "l2=0.00143 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.4354994 -2.2337556  0.9066946 -2.3276393]]
Iteration 600 of 1000: loss=0.0478 " + "l1=0.0461" + "l2=0.00167 f=-0.305 shape=(1, 9000, 1)
logits [[ 2.397193  -2.2124689  0.8950743 -2.2982812]]
Iteration 700 of 1000: loss=0.0473 " + "l1=0.0455" + "l2=0.00186 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.3569353  -2.1906986   0.88316345 -2.2666523 ]]
Iteration 800 of 1000: loss=0.0471 " + "l1=0.0448" + "l2=0.00222 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.314476   -2.1690834   0.87093997 -2.2327802 ]]
Iteration 900 of 1000: loss=0.0466 " + "l1=0.0442" + "l2=0.00244 f=-0.304 shape=(1, 9000, 1)
logits [[ 2.271593   -2.147425    0.85872895 -2.200205  ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.512 " + "l1=0.512" + "l2=0 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.711455  -2.403737   1.0176052 -2.5317118]]
Iteration 100 of 1000: loss=0.385 " + "l1=0.323" + "l2=0.0618 f=-0.328 shape=(1, 9000, 1)
logits [[ 1.5889382 -1.6446242  0.5045367 -1.7620206]]
Iteration 200 of 1000: loss=0.326 " + "l1=0.247" + "l2=0.0793 f=-0.336 shape=(1, 9000, 1)
logits [[ 1.0420954 -1.4272499  0.3472096 -1.3075496]]
Iteration 300 of 1000: loss=0.262 " + "l1=0.162" + "l2=0.0999 f=-0.331 shape=(1, 9000, 1)
logits [[ 0.40915242 -1.2139087   0.21208143 -0.730969  ]]
Iteration 400 of 1000: loss=0.21 " + "l1=0.121" + "l2=0.09 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.12179908 -1.0811343   0.12421063 -0.3790514 ]]
Iteration 500 of 1000: loss=0.179 " + "l1=0.0958" + "l2=0.0832 f=-0.272 shape=(1, 9000, 1)
logits [[ 0.02081458 -0.93098813  0.02720854 -0.20387533]]
Iteration 600 of 1000: loss=0.148 " + "l1=0.0723" + "l2=0.0755 f=-0.238 shape=(1, 9000, 1)
logits [[-0.0585153  -0.776501   -0.05365435 -0.06531962]]
Iteration 700 of 1000: loss=0.123 " + "l1=0.0502" + "l2=0.0729 f=-0.21 shape=(1, 9000, 1)
logits [[-0.09234536 -0.5809639  -0.08559835 -0.07926123]]
Iteration 800 of 1000: loss=0.104 " + "l1=0.0327" + "l2=0.0716 f=-0.2 shape=(1, 9000, 1)
logits [[-0.12054497 -0.44429103 -0.11956163 -0.11690918]]
Iteration 900 of 1000: loss=0.0949 " + "l1=0.025" + "l2=0.0699 f=-0.205 shape=(1, 9000, 1)
logits [[-0.13959235 -0.3896351  -0.14105852 -0.15106574]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.12 " + "l1=5.12" + "l2=0 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.711455  -2.403737   1.0176052 -2.5317118]]
Iteration 100 of 1000: loss=0.674 " + "l1=0" + "l2=0.674 f=-0.355 shape=(1, 9000, 1)
logits [[-0.34033164 -0.3172288  -0.3264235  -0.43483526]]
Iteration 200 of 1000: loss=0.434 " + "l1=0" + "l2=0.434 f=-0.361 shape=(1, 9000, 1)
logits [[-0.34186533 -0.32103467 -0.34013    -0.43982998]]
Iteration 300 of 1000: loss=0.337 " + "l1=0" + "l2=0.337 f=-0.367 shape=(1, 9000, 1)
logits [[-0.36373922 -0.3420484  -0.3596644  -0.4012954 ]]
Iteration 400 of 1000: loss=0.278 " + "l1=0" + "l2=0.278 f=-0.368 shape=(1, 9000, 1)
logits [[-0.36644003 -0.36278832 -0.3692162  -0.3753391 ]]
Iteration 500 of 1000: loss=0.254 " + "l1=0.0093" + "l2=0.245 f=-0.371 shape=(1, 9000, 1)
logits [[-0.3490375  -0.35588762 -0.3465837  -0.43186802]]
Iteration 600 of 1000: loss=0.225 " + "l1=0.000802" + "l2=0.224 f=-0.371 shape=(1, 9000, 1)
logits [[-0.35481474 -0.34973487 -0.34893295 -0.42943913]]
Iteration 700 of 1000: loss=0.207 " + "l1=0" + "l2=0.207 f=-0.367 shape=(1, 9000, 1)
logits [[-0.36521617 -0.34782255 -0.36152753 -0.3930295 ]]
Iteration 800 of 1000: loss=0.197 " + "l1=0" + "l2=0.197 f=-0.366 shape=(1, 9000, 1)
logits [[-0.3697651  -0.33014828 -0.3630979  -0.40146825]]
Iteration 900 of 1000: loss=0.181 " + "l1=0" + "l2=0.181 f=-0.359 shape=(1, 9000, 1)
logits [[-0.38240966 -0.3327586  -0.37887242 -0.3434099 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.81 " + "l1=2.81" + "l2=0 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.711455  -2.403737   1.0176052 -2.5317118]]
Iteration 100 of 1000: loss=0.599 " + "l1=0.0106" + "l2=0.588 f=-0.349 shape=(1, 9000, 1)
logits [[-0.3236738  -0.3428751  -0.33880866 -0.39035016]]
Iteration 200 of 1000: loss=0.364 " + "l1=0.000224" + "l2=0.364 f=-0.355 shape=(1, 9000, 1)
logits [[-0.34621784 -0.3466243  -0.35302648 -0.3744409 ]]
Iteration 300 of 1000: loss=0.283 " + "l1=0" + "l2=0.283 f=-0.364 shape=(1, 9000, 1)
logits [[-0.36055064 -0.35661072 -0.3624244  -0.37745643]]
Iteration 400 of 1000: loss=0.239 " + "l1=0" + "l2=0.239 f=-0.363 shape=(1, 9000, 1)
logits [[-0.36145988 -0.35928503 -0.36025015 -0.37072825]]
Iteration 500 of 1000: loss=0.212 " + "l1=0" + "l2=0.212 f=-0.36 shape=(1, 9000, 1)
logits [[-0.35638487 -0.34586447 -0.36507335 -0.37228113]]
Iteration 600 of 1000: loss=0.19 " + "l1=0" + "l2=0.19 f=-0.357 shape=(1, 9000, 1)
logits [[-0.34965232 -0.34646815 -0.35150608 -0.37850618]]
Iteration 700 of 1000: loss=0.175 " + "l1=0" + "l2=0.175 f=-0.351 shape=(1, 9000, 1)
logits [[-0.34834158 -0.33424762 -0.3531047  -0.37007192]]
Iteration 800 of 1000: loss=0.159 " + "l1=0.00318" + "l2=0.156 f=-0.345 shape=(1, 9000, 1)
logits [[-0.33163223 -0.33742085 -0.3372718  -0.37201056]]
Iteration 900 of 1000: loss=0.149 " + "l1=0.00661" + "l2=0.143 f=-0.332 shape=(1, 9000, 1)
logits [[-0.3169162  -0.32893518 -0.32732102 -0.3562634 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.66 " + "l1=1.66" + "l2=0 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.711455  -2.403737   1.0176052 -2.5317118]]
Iteration 100 of 1000: loss=0.613 " + "l1=0.171" + "l2=0.442 f=-0.35 shape=(1, 9000, 1)
logits [[-0.11765537 -0.6449924  -0.13749586 -0.500716  ]]
Iteration 200 of 1000: loss=0.341 " + "l1=0.00837" + "l2=0.333 f=-0.362 shape=(1, 9000, 1)
logits [[-0.35000113 -0.37575638 -0.358264   -0.3659237 ]]
Iteration 300 of 1000: loss=0.252 " + "l1=0.0034" + "l2=0.249 f=-0.363 shape=(1, 9000, 1)
logits [[-0.3511835  -0.36165443 -0.35183695 -0.3871855 ]]
Iteration 400 of 1000: loss=0.21 " + "l1=0.00188" + "l2=0.208 f=-0.35 shape=(1, 9000, 1)
logits [[-0.34597197 -0.35176387 -0.3502742  -0.3534689 ]]
Iteration 500 of 1000: loss=0.185 " + "l1=0.00452" + "l2=0.18 f=-0.343 shape=(1, 9000, 1)
logits [[-0.33833563 -0.3468826  -0.33297908 -0.35402316]]
Iteration 600 of 1000: loss=0.161 " + "l1=0.00197" + "l2=0.159 f=-0.33 shape=(1, 9000, 1)
logits [[-0.32483092 -0.33089066 -0.3263932  -0.33641967]]
Iteration 700 of 1000: loss=0.144 " + "l1=0" + "l2=0.144 f=-0.314 shape=(1, 9000, 1)
logits [[-0.30451667 -0.301424   -0.30263    -0.34884462]]
Iteration 800 of 1000: loss=0.132 " + "l1=0" + "l2=0.132 f=-0.296 shape=(1, 9000, 1)
logits [[-0.30115563 -0.28591383 -0.3002033  -0.29819852]]
Iteration 900 of 1000: loss=0.125 " + "l1=0.00184" + "l2=0.123 f=-0.286 shape=(1, 9000, 1)
logits [[-0.2954996  -0.28572965 -0.28005323 -0.28403723]]
--- 290.91209077835083 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0169 " + "l1=0.0169" + "l2=0 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.711455  -2.403737   1.0176052 -2.5317118]]
Iteration 100 of 1000: loss=0.0164 " + "l1=0.0161" + "l2=0.000248 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.6444287 -2.4057658  1.0294403 -2.4728076]]
Iteration 200 of 1000: loss=0.0162 " + "l1=0.0159" + "l2=0.000266 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.6213346 -2.406424   1.0327897 -2.4522843]]
Iteration 300 of 1000: loss=0.0159 " + "l1=0.0156" + "l2=0.000345 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.593224  -2.4080534  1.0374869 -2.4270625]]
Iteration 400 of 1000: loss=0.0156 " + "l1=0.0152" + "l2=0.000475 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.5603979 -2.4111552  1.0445384 -2.3988953]]
Iteration 500 of 1000: loss=0.0154 " + "l1=0.0148" + "l2=0.000587 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.5286374 -2.413138   1.05054   -2.3726432]]
Iteration 600 of 1000: loss=0.0151 " + "l1=0.0144" + "l2=0.000737 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.496267  -2.414596   1.0564375 -2.3461483]]
Iteration 700 of 1000: loss=0.0149 " + "l1=0.014" + "l2=0.000893 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.4631405 -2.4144948  1.0620755 -2.319419 ]]
Iteration 800 of 1000: loss=0.0146 " + "l1=0.0136" + "l2=0.00103 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.4296234 -2.413918   1.0678405 -2.2923295]]
Iteration 900 of 1000: loss=0.0145 " + "l1=0.0132" + "l2=0.00126 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.3940563 -2.4126189  1.0737101 -2.2641082]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.169 " + "l1=0.169" + "l2=0 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.711455  -2.403737   1.0176052 -2.5317118]]
Iteration 100 of 1000: loss=0.12 " + "l1=0.102" + "l2=0.0174 f=-0.295 shape=(1, 9000, 1)
logits [[ 2.1401165 -2.3933644  1.1172864 -2.0429614]]
Iteration 200 of 1000: loss=0.0781 " + "l1=0.0503" + "l2=0.0278 f=-0.31 shape=(1, 9000, 1)
logits [[ 1.6513662 -2.35626    1.1485084 -1.6836473]]
Iteration 300 of 1000: loss=0.0328 " + "l1=0.000255" + "l2=0.0325 f=-0.321 shape=(1, 9000, 1)
logits [[ 1.1586876 -2.325442   1.1561368 -1.2752393]]
Iteration 400 of 1000: loss=0.0208 " + "l1=4.65e-05" + "l2=0.0207 f=-0.316 shape=(1, 9000, 1)
logits [[ 1.1561568 -2.333247   1.1556915 -1.2434032]]
Iteration 500 of 1000: loss=0.0162 " + "l1=4.13e-05" + "l2=0.0162 f=-0.31 shape=(1, 9000, 1)
logits [[ 1.1539533 -2.3354228  1.1535405 -1.2139146]]
Iteration 600 of 1000: loss=0.0137 " + "l1=5.01e-05" + "l2=0.0136 f=-0.306 shape=(1, 9000, 1)
logits [[ 1.1483746 -2.3342545  1.147874  -1.1876484]]
Iteration 700 of 1000: loss=0.012 " + "l1=0" + "l2=0.012 f=-0.303 shape=(1, 9000, 1)
logits [[ 1.1411395 -2.3302684  1.1419716 -1.1665496]]
Iteration 800 of 1000: loss=0.0108 " + "l1=0" + "l2=0.0108 f=-0.301 shape=(1, 9000, 1)
logits [[ 1.1355274 -2.325879   1.1378362 -1.1524701]]
Iteration 900 of 1000: loss=0.00989 " + "l1=0" + "l2=0.00989 f=-0.3 shape=(1, 9000, 1)
logits [[ 1.1312099 -2.3206956  1.1335031 -1.1428157]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0932 " + "l1=0.0932" + "l2=0 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.711455  -2.403737   1.0176052 -2.5317118]]
Iteration 100 of 1000: loss=0.0785 " + "l1=0.0736" + "l2=0.00497 f=-0.298 shape=(1, 9000, 1)
logits [[ 2.4097166 -2.4063861  1.0719825 -2.2657187]]
Iteration 200 of 1000: loss=0.0675 " + "l1=0.0593" + "l2=0.00821 f=-0.299 shape=(1, 9000, 1)
logits [[ 2.1805425 -2.3993797  1.1026449 -2.0805852]]
Iteration 300 of 1000: loss=0.0547 " + "l1=0.0428" + "l2=0.0118 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.9087418 -2.3872335  1.1298373 -1.8710924]]
Iteration 400 of 1000: loss=0.0412 " + "l1=0.0257" + "l2=0.0155 f=-0.31 shape=(1, 9000, 1)
logits [[ 1.6165882 -2.3694007  1.1485723 -1.6358851]]
Iteration 500 of 1000: loss=0.0256 " + "l1=0.00572" + "l2=0.0199 f=-0.31 shape=(1, 9000, 1)
logits [[ 1.2609372 -2.3381672  1.1569897 -1.3209634]]
Iteration 600 of 1000: loss=0.0164 " + "l1=3.96e-05" + "l2=0.0164 f=-0.308 shape=(1, 9000, 1)
logits [[ 1.1508778 -2.3293452  1.1501571 -1.2024143]]
Iteration 700 of 1000: loss=0.0136 " + "l1=4.8e-05" + "l2=0.0135 f=-0.303 shape=(1, 9000, 1)
logits [[ 1.1465721 -2.3292093  1.1456989 -1.1758643]]
Iteration 800 of 1000: loss=0.0117 " + "l1=6.96e-05" + "l2=0.0116 f=-0.3 shape=(1, 9000, 1)
logits [[ 1.142107  -2.3261285  1.1408414 -1.1587679]]
Iteration 900 of 1000: loss=0.0105 " + "l1=0" + "l2=0.0105 f=-0.298 shape=(1, 9000, 1)
logits [[ 1.135899  -2.321346   1.1367903 -1.1447992]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.0551 " + "l1=0.0551" + "l2=0 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.711455  -2.403737   1.0176052 -2.5317118]]
Iteration 100 of 1000: loss=0.0498 " + "l1=0.048" + "l2=0.00183 f=-0.299 shape=(1, 9000, 1)
logits [[ 2.5258682 -2.408289   1.0497097 -2.363668 ]]
Iteration 200 of 1000: loss=0.0465 " + "l1=0.0438" + "l2=0.00269 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.415029  -2.4081237  1.0663648 -2.2734842]]
Iteration 300 of 1000: loss=0.0428 " + "l1=0.039" + "l2=0.00387 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.2849052 -2.4059231  1.0863693 -2.165916 ]]
Iteration 400 of 1000: loss=0.0387 " + "l1=0.0335" + "l2=0.00522 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.1352587 -2.403833   1.1053349 -2.0400763]]
Iteration 500 of 1000: loss=0.0342 " + "l1=0.0275" + "l2=0.0067 f=-0.303 shape=(1, 9000, 1)
logits [[ 1.9722774 -2.401129   1.1251305 -1.9087151]]
Iteration 600 of 1000: loss=0.0298 " + "l1=0.0218" + "l2=0.00807 f=-0.305 shape=(1, 9000, 1)
logits [[ 1.8161807 -2.3952258  1.1461402 -1.786668 ]]
Iteration 700 of 1000: loss=0.0249 " + "l1=0.0152" + "l2=0.00964 f=-0.304 shape=(1, 9000, 1)
logits [[ 1.6254177 -2.3799462  1.1564795 -1.6194865]]
Iteration 800 of 1000: loss=0.0199 " + "l1=0.00849" + "l2=0.0114 f=-0.303 shape=(1, 9000, 1)
logits [[ 1.4208548 -2.3622372  1.1597644 -1.4323283]]
Iteration 900 of 1000: loss=0.015 " + "l1=0.00188" + "l2=0.0131 f=-0.304 shape=(1, 9000, 1)
logits [[ 1.2102835 -2.3377094  1.1523836 -1.2396455]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.036 " + "l1=0.036" + "l2=0 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.711455  -2.403737   1.0176052 -2.5317118]]
Iteration 100 of 1000: loss=0.0337 " + "l1=0.0329" + "l2=0.00083 f=-0.3 shape=(1, 9000, 1)
logits [[ 2.5873523 -2.4066036  1.0384512 -2.4201832]]
Iteration 200 of 1000: loss=0.0324 " + "l1=0.0313" + "l2=0.00115 f=-0.301 shape=(1, 9000, 1)
logits [[ 2.5211012 -2.4098547  1.0497726 -2.3652012]]
Iteration 300 of 1000: loss=0.031 " + "l1=0.0295" + "l2=0.00157 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.4489048 -2.411459   1.0619625 -2.3070986]]
Iteration 400 of 1000: loss=0.0296 " + "l1=0.0275" + "l2=0.00207 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.3713026 -2.411615   1.075183  -2.243858 ]]
Iteration 500 of 1000: loss=0.0281 " + "l1=0.0254" + "l2=0.00269 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.2832787 -2.411883   1.0897076 -2.1686177]]
Iteration 600 of 1000: loss=0.0264 " + "l1=0.0231" + "l2=0.00332 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.1888015 -2.4112082  1.1030854 -2.08866  ]]
Iteration 700 of 1000: loss=0.0247 " + "l1=0.0207" + "l2=0.00394 f=-0.303 shape=(1, 9000, 1)
logits [[ 2.0897758 -2.407897   1.1138781 -2.0069966]]
Iteration 800 of 1000: loss=0.0229 " + "l1=0.0181" + "l2=0.0048 f=-0.304 shape=(1, 9000, 1)
logits [[ 1.9845059 -2.4084413  1.1307235 -1.9208754]]
Iteration 900 of 1000: loss=0.0211 " + "l1=0.0158" + "l2=0.00533 f=-0.304 shape=(1, 9000, 1)
logits [[ 1.889551  -2.4038775  1.1457014 -1.8461571]]
--- 291.8876967430115 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0524 " + "l1=0.0524" + "l2=0 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.711455  -2.403737   1.0176052 -2.5317118]]
Iteration 100 of 1000: loss=0.0501 " + "l1=0.0492" + "l2=0.000902 f=-0.293 shape=(1, 9000, 1)
logits [[ 2.56554   -2.3699248  0.9811446 -2.34999  ]]
Iteration 200 of 1000: loss=0.0489 " + "l1=0.0476" + "l2=0.00126 f=-0.29 shape=(1, 9000, 1)
logits [[ 2.4954515 -2.3621294  0.9702797 -2.2641497]]
Iteration 300 of 1000: loss=0.0477 " + "l1=0.046" + "l2=0.00169 f=-0.287 shape=(1, 9000, 1)
logits [[ 2.422388  -2.3515282  0.9588149 -2.1789188]]
Iteration 400 of 1000: loss=0.0464 " + "l1=0.0442" + "l2=0.00221 f=-0.284 shape=(1, 9000, 1)
logits [[ 2.34051   -2.3422832  0.9488487 -2.0820193]]
Iteration 500 of 1000: loss=0.0451 " + "l1=0.0423" + "l2=0.00276 f=-0.28 shape=(1, 9000, 1)
logits [[ 2.2547915  -2.3331141   0.94020754 -1.980019  ]]
Iteration 600 of 1000: loss=0.0438 " + "l1=0.0404" + "l2=0.00333 f=-0.275 shape=(1, 9000, 1)
logits [[ 2.1673424 -2.325133   0.9337778 -1.8774377]]
Iteration 700 of 1000: loss=0.0424 " + "l1=0.0383" + "l2=0.00404 f=-0.271 shape=(1, 9000, 1)
logits [[ 2.0673313  -2.3169792   0.92713475 -1.7633412 ]]
Iteration 800 of 1000: loss=0.041 " + "l1=0.0363" + "l2=0.00465 f=-0.268 shape=(1, 9000, 1)
logits [[ 1.9756522 -2.3111336  0.9200122 -1.6564051]]
Iteration 900 of 1000: loss=0.0396 " + "l1=0.0343" + "l2=0.00531 f=-0.265 shape=(1, 9000, 1)
logits [[ 1.8802878 -2.3036616  0.9132051 -1.549239 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.524 " + "l1=0.524" + "l2=0 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.711455  -2.403737   1.0176052 -2.5317118]]
Iteration 100 of 1000: loss=0.291 " + "l1=0.193" + "l2=0.0982 f=-0.23 shape=(1, 9000, 1)
logits [[ 1.2038565 -2.0081372  0.6114661 -0.7260079]]
Iteration 200 of 1000: loss=0.11 " + "l1=0.00211" + "l2=0.108 f=-0.201 shape=(1, 9000, 1)
logits [[ 0.3461348 -1.8292942  0.3510705  0.3299999]]
Iteration 300 of 1000: loss=0.063 " + "l1=0" + "l2=0.063 f=-0.193 shape=(1, 9000, 1)
logits [[ 0.35947827 -1.8762445   0.36887372  0.37696123]]
Iteration 400 of 1000: loss=0.0467 " + "l1=0" + "l2=0.0467 f=-0.186 shape=(1, 9000, 1)
logits [[ 0.37070826 -1.9022563   0.38505664  0.40242594]]
Iteration 500 of 1000: loss=0.0376 " + "l1=0" + "l2=0.0376 f=-0.182 shape=(1, 9000, 1)
logits [[ 0.3759378  -1.91885     0.40182474  0.41272712]]
Iteration 600 of 1000: loss=0.032 " + "l1=0" + "l2=0.032 f=-0.179 shape=(1, 9000, 1)
logits [[ 0.37708813 -1.9293423   0.41563496  0.4203922 ]]
Iteration 700 of 1000: loss=0.0282 " + "l1=0" + "l2=0.0282 f=-0.176 shape=(1, 9000, 1)
logits [[ 0.36970958 -1.93147     0.42218456  0.43483227]]
Iteration 800 of 1000: loss=0.0252 " + "l1=0" + "l2=0.0252 f=-0.174 shape=(1, 9000, 1)
logits [[ 0.36976436 -1.9363751   0.4319935   0.43891257]]
Iteration 900 of 1000: loss=0.0229 " + "l1=0" + "l2=0.0229 f=-0.171 shape=(1, 9000, 1)
logits [[ 0.36934388 -1.9381214   0.43858403  0.44592315]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.288 " + "l1=0.288" + "l2=0 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.711455  -2.403737   1.0176052 -2.5317118]]
Iteration 100 of 1000: loss=0.221 " + "l1=0.195" + "l2=0.0262 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.9433602 -2.204054   0.8212339 -1.5989329]]
Iteration 200 of 1000: loss=0.159 " + "l1=0.111" + "l2=0.0478 f=-0.241 shape=(1, 9000, 1)
logits [[ 1.2273382 -2.0930223  0.6922352 -0.7890928]]
Iteration 300 of 1000: loss=0.087 " + "l1=0.028" + "l2=0.059 f=-0.218 shape=(1, 9000, 1)
logits [[ 0.5340476  -1.9669389   0.53566676  0.02614587]]
Iteration 400 of 1000: loss=0.0559 " + "l1=0.00014" + "l2=0.0557 f=-0.187 shape=(1, 9000, 1)
logits [[ 0.31865138 -1.9003019   0.41894513  0.41639364]]
Iteration 500 of 1000: loss=0.0413 " + "l1=0" + "l2=0.0413 f=-0.181 shape=(1, 9000, 1)
logits [[ 0.32104027 -1.9236509   0.4375719   0.44035667]]
Iteration 600 of 1000: loss=0.0337 " + "l1=0" + "l2=0.0337 f=-0.177 shape=(1, 9000, 1)
logits [[ 0.3239313  -1.9338082   0.45004338  0.4525377 ]]
Iteration 700 of 1000: loss=0.029 " + "l1=0.000243" + "l2=0.0287 f=-0.174 shape=(1, 9000, 1)
logits [[ 0.32639775 -1.9415793   0.46153882  0.4571262 ]]
Iteration 800 of 1000: loss=0.0255 " + "l1=0" + "l2=0.0255 f=-0.172 shape=(1, 9000, 1)
logits [[ 0.321466   -1.9428113   0.46566346  0.46801955]]
Iteration 900 of 1000: loss=0.0231 " + "l1=0" + "l2=0.0231 f=-0.17 shape=(1, 9000, 1)
logits [[ 0.31630638 -1.9406376   0.46826202  0.47637114]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.17 " + "l1=0.17" + "l2=0 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.711455  -2.403737   1.0176052 -2.5317118]]
Iteration 100 of 1000: loss=0.148 " + "l1=0.139" + "l2=0.00863 f=-0.277 shape=(1, 9000, 1)
logits [[ 2.2778344  -2.2911584   0.90733594 -2.0014663 ]]
Iteration 200 of 1000: loss=0.13 " + "l1=0.115" + "l2=0.0147 f=-0.267 shape=(1, 9000, 1)
logits [[ 1.9396363 -2.2443717  0.8469102 -1.6104597]]
Iteration 300 of 1000: loss=0.109 " + "l1=0.0875" + "l2=0.0218 f=-0.257 shape=(1, 9000, 1)
logits [[ 1.5354565 -2.192861   0.7864925 -1.1557071]]
Iteration 400 of 1000: loss=0.0836 " + "l1=0.0536" + "l2=0.03 f=-0.24 shape=(1, 9000, 1)
logits [[ 1.039908  -2.1222723  0.7326486 -0.6087792]]
Iteration 500 of 1000: loss=0.0584 " + "l1=0.0252" + "l2=0.0332 f=-0.221 shape=(1, 9000, 1)
logits [[ 0.6458517  -2.046289    0.6455494  -0.12890771]]
Iteration 600 of 1000: loss=0.0469 " + "l1=0.0156" + "l2=0.0313 f=-0.203 shape=(1, 9000, 1)
logits [[ 0.52548474 -2.0129309   0.57843304  0.09863269]]
Iteration 700 of 1000: loss=0.0376 " + "l1=0.00489" + "l2=0.0327 f=-0.185 shape=(1, 9000, 1)
logits [[ 0.35775447 -1.9647163   0.50929826  0.3589516 ]]
Iteration 800 of 1000: loss=0.0298 " + "l1=0" + "l2=0.0298 f=-0.174 shape=(1, 9000, 1)
logits [[ 0.28223953 -1.9432955   0.48044592  0.48356396]]
Iteration 900 of 1000: loss=0.0256 " + "l1=0" + "l2=0.0256 f=-0.172 shape=(1, 9000, 1)
logits [[ 0.2845477  -1.9470584   0.4858434   0.48895678]]
const [0.02125]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.111 " + "l1=0.111" + "l2=0 f=-0.302 shape=(1, 9000, 1)
logits [[ 2.711455  -2.403737   1.0176052 -2.5317118]]
Iteration 100 of 1000: loss=0.102 " + "l1=0.098" + "l2=0.0036 f=-0.285 shape=(1, 9000, 1)
logits [[ 2.429817   -2.3347528   0.94702137 -2.181868  ]]
Iteration 200 of 1000: loss=0.0952 " + "l1=0.0894" + "l2=0.00577 f=-0.278 shape=(1, 9000, 1)
logits [[ 2.24191   -2.3039594  0.9131361 -1.964756 ]]
Iteration 300 of 1000: loss=0.0881 " + "l1=0.0798" + "l2=0.00837 f=-0.271 shape=(1, 9000, 1)
logits [[ 2.033      -2.2792294   0.88455397 -1.7212325 ]]
Iteration 400 of 1000: loss=0.0802 " + "l1=0.069" + "l2=0.0112 f=-0.263 shape=(1, 9000, 1)
logits [[ 1.7981737  -2.2569396   0.85756904 -1.4497627 ]]
Iteration 500 of 1000: loss=0.0714 " + "l1=0.0568" + "l2=0.0146 f=-0.255 shape=(1, 9000, 1)
logits [[ 1.5244517 -2.2261431  0.8311844 -1.1479354]]
Iteration 600 of 1000: loss=0.0603 " + "l1=0.042" + "l2=0.0183 f=-0.244 shape=(1, 9000, 1)
logits [[ 1.191011   -2.1812391   0.8018611  -0.78589284]]
Iteration 700 of 1000: loss=0.0487 " + "l1=0.0266" + "l2=0.0221 f=-0.229 shape=(1, 9000, 1)
logits [[ 0.84911466 -2.1242466   0.761421   -0.40274757]]
Iteration 800 of 1000: loss=0.0402 " + "l1=0.019" + "l2=0.0212 f=-0.218 shape=(1, 9000, 1)
logits [[ 0.70267373 -2.0911427   0.70424485 -0.18788892]]
Iteration 900 of 1000: loss=0.0357 " + "l1=0.0149" + "l2=0.0208 f=-0.207 shape=(1, 9000, 1)
logits [[ 0.62348914 -2.0646136   0.6560026  -0.04481694]]
--- 292.80964493751526 seconds ---
Adv result:3
Loading record A05465
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0937 " + "l1=0.0937" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.871869 -3.501144  3.434823 -8.410658]]
Iteration 100 of 1000: loss=0.0931 " + "l1=0.0928" + "l2=0.000374 f=-0.647 shape=(1, 9000, 1)
logits [[ 5.828775 -3.447349  3.393147 -8.362044]]
Iteration 200 of 1000: loss=0.093 " + "l1=0.0926" + "l2=0.000404 f=-0.646 shape=(1, 9000, 1)
logits [[ 5.8191624 -3.4365816  3.384916  -8.35215  ]]
Iteration 300 of 1000: loss=0.0928 " + "l1=0.0923" + "l2=0.000508 f=-0.645 shape=(1, 9000, 1)
logits [[ 5.808359  -3.424409   3.3756444 -8.341011 ]]
Iteration 400 of 1000: loss=0.0927 " + "l1=0.0921" + "l2=0.000614 f=-0.645 shape=(1, 9000, 1)
logits [[ 5.798251  -3.4132318  3.3673117 -8.33087  ]]
Iteration 500 of 1000: loss=0.0927 " + "l1=0.0919" + "l2=0.00074 f=-0.644 shape=(1, 9000, 1)
logits [[ 5.7890563 -3.4028382  3.359782  -8.32217  ]]
Iteration 600 of 1000: loss=0.0926 " + "l1=0.0917" + "l2=0.000885 f=-0.644 shape=(1, 9000, 1)
logits [[ 5.780721  -3.3936372  3.3532004 -8.314504 ]]
Iteration 700 of 1000: loss=0.0927 " + "l1=0.0916" + "l2=0.00105 f=-0.643 shape=(1, 9000, 1)
logits [[ 5.7732563 -3.386583   3.348148  -8.308276 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.937 " + "l1=0.937" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.871869 -3.501144  3.434823 -8.410658]]
Iteration 100 of 1000: loss=0.886 " + "l1=0.861" + "l2=0.0255 f=-0.616 shape=(1, 9000, 1)
logits [[ 5.528263  -3.0811403  3.1083481 -8.017665 ]]
Iteration 200 of 1000: loss=0.864 " + "l1=0.829" + "l2=0.0355 f=-0.598 shape=(1, 9000, 1)
logits [[ 5.3777785 -2.9084172  2.9796586 -7.8400135]]
Iteration 300 of 1000: loss=0.847 " + "l1=0.802" + "l2=0.0449 f=-0.587 shape=(1, 9000, 1)
logits [[ 5.2355146 -2.7808044  2.8770669 -7.67921  ]]
Iteration 400 of 1000: loss=0.83 " + "l1=0.776" + "l2=0.0542 f=-0.579 shape=(1, 9000, 1)
logits [[ 5.0974407 -2.6634429  2.7818005 -7.5314674]]
Iteration 500 of 1000: loss=0.811 " + "l1=0.745" + "l2=0.066 f=-0.569 shape=(1, 9000, 1)
logits [[ 4.927342  -2.5227463  2.6742518 -7.354522 ]]
Iteration 600 of 1000: loss=0.79 " + "l1=0.713" + "l2=0.0769 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.73891   -2.3878295  2.5532103 -7.1683702]]
Iteration 700 of 1000: loss=0.767 " + "l1=0.676" + "l2=0.0905 f=-0.564 shape=(1, 9000, 1)
logits [[ 4.5164804 -2.2481587  2.4292126 -6.9536138]]
Iteration 800 of 1000: loss=0.747 " + "l1=0.644" + "l2=0.103 f=-0.566 shape=(1, 9000, 1)
logits [[ 4.3127294 -2.130615   2.3200746 -6.7661757]]
Iteration 900 of 1000: loss=0.73 " + "l1=0.619" + "l2=0.111 f=-0.569 shape=(1, 9000, 1)
logits [[ 4.1547985 -2.0329733  2.219768  -6.61724  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=9.37 " + "l1=9.37" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.871869 -3.501144  3.434823 -8.410658]]
Iteration 100 of 1000: loss=5.18 " + "l1=3" + "l2=2.18 f=-0.482 shape=(1, 9000, 1)
logits [[ 2.1935844 -0.8030287  1.5050191 -4.8254194]]
Iteration 200 of 1000: loss=3.18 " + "l1=1.04" + "l2=2.14 f=-0.529 shape=(1, 9000, 1)
logits [[ 0.84266883 -0.1964664   0.84018177 -3.6022465 ]]
Iteration 300 of 1000: loss=2.4 " + "l1=0.497" + "l2=1.9 f=-0.553 shape=(1, 9000, 1)
logits [[ 0.5419829   0.04528663  0.5347191  -3.333178  ]]
Iteration 400 of 1000: loss=1.95 " + "l1=0.2" + "l2=1.75 f=-0.569 shape=(1, 9000, 1)
logits [[ 0.3554461   0.1635919   0.36314303 -3.1599255 ]]
Iteration 500 of 1000: loss=1.66 " + "l1=0.00615" + "l2=1.66 f=-0.565 shape=(1, 9000, 1)
logits [[ 0.2519881   0.24727531  0.25342968 -3.0130606 ]]
Iteration 600 of 1000: loss=1.53 " + "l1=0.0135" + "l2=1.51 f=-0.563 shape=(1, 9000, 1)
logits [[ 0.2325834   0.21906161  0.22966826 -2.9344854 ]]
Iteration 700 of 1000: loss=1.43 " + "l1=0.00446" + "l2=1.42 f=-0.558 shape=(1, 9000, 1)
logits [[ 0.1848251   0.20618577  0.21064326 -2.834086  ]]
Iteration 800 of 1000: loss=1.34 " + "l1=0.00515" + "l2=1.33 f=-0.555 shape=(1, 9000, 1)
logits [[ 0.1881372   0.1852084   0.19036208 -2.7834609 ]]
Iteration 900 of 1000: loss=1.26 " + "l1=0" + "l2=1.26 f=-0.555 shape=(1, 9000, 1)
logits [[ 0.16342056  0.17039272  0.17021254 -2.7248256 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=5.16 " + "l1=5.16" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.871869 -3.501144  3.434823 -8.410658]]
Iteration 100 of 1000: loss=3.78 " + "l1=3.06" + "l2=0.713 f=-0.508 shape=(1, 9000, 1)
logits [[ 3.8932388 -1.6779286  2.0712163 -6.319078 ]]
Iteration 200 of 1000: loss=2.88 " + "l1=1.85" + "l2=1.03 f=-0.511 shape=(1, 9000, 1)
logits [[ 2.433045  -0.9309705  1.5233831 -5.0691853]]
Iteration 300 of 1000: loss=2.12 " + "l1=0.916" + "l2=1.21 f=-0.541 shape=(1, 9000, 1)
logits [[ 1.1684706 -0.4966156  1.0655577 -3.8995132]]
Iteration 400 of 1000: loss=1.72 " + "l1=0.591" + "l2=1.13 f=-0.566 shape=(1, 9000, 1)
logits [[ 0.7781554  -0.29304373  0.78081423 -3.5315607 ]]
Iteration 500 of 1000: loss=1.54 " + "l1=0.468" + "l2=1.07 f=-0.569 shape=(1, 9000, 1)
logits [[ 0.6596361  -0.19126861  0.65945154 -3.4053118 ]]
Iteration 600 of 1000: loss=1.41 " + "l1=0.409" + "l2=1 f=-0.566 shape=(1, 9000, 1)
logits [[ 0.6059413  -0.13714986  0.6066747  -3.3405626 ]]
Iteration 700 of 1000: loss=1.31 " + "l1=0.353" + "l2=0.953 f=-0.567 shape=(1, 9000, 1)
logits [[ 0.5383496  -0.10378551  0.53663445 -3.2398167 ]]
Iteration 800 of 1000: loss=1.23 " + "l1=0.313" + "l2=0.914 f=-0.569 shape=(1, 9000, 1)
logits [[ 0.48620483 -0.0804814   0.48868588 -3.170343  ]]
Iteration 900 of 1000: loss=1.18 " + "l1=0.283" + "l2=0.894 f=-0.564 shape=(1, 9000, 1)
logits [[ 0.43046436 -0.07334341  0.44083977 -3.0547733 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=7.26 " + "l1=7.26" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.871869 -3.501144  3.434823 -8.410658]]
Iteration 100 of 1000: loss=4.63 " + "l1=3.2" + "l2=1.43 f=-0.488 shape=(1, 9000, 1)
logits [[ 2.9815333 -1.1443677  1.7381897 -5.527622 ]]
Iteration 200 of 1000: loss=3.03 " + "l1=1.18" + "l2=1.85 f=-0.51 shape=(1, 9000, 1)
logits [[ 1.0871555  -0.43071035  1.0800072  -3.778105  ]]
Iteration 300 of 1000: loss=2.28 " + "l1=0.704" + "l2=1.57 f=-0.553 shape=(1, 9000, 1)
logits [[ 0.7296112  -0.17721577  0.73071206 -3.4970384 ]]
Iteration 400 of 1000: loss=1.83 " + "l1=0.423" + "l2=1.41 f=-0.572 shape=(1, 9000, 1)
logits [[ 0.52165633 -0.02203928  0.5237055  -3.3096392 ]]
Iteration 500 of 1000: loss=1.64 " + "l1=0.278" + "l2=1.36 f=-0.571 shape=(1, 9000, 1)
logits [[ 0.40558067  0.04976453  0.40909684 -3.1486635 ]]
Iteration 600 of 1000: loss=1.5 " + "l1=0.202" + "l2=1.3 f=-0.566 shape=(1, 9000, 1)
logits [[ 0.34401605  0.08436144  0.3447086  -3.0388079 ]]
Iteration 700 of 1000: loss=1.38 " + "l1=0.144" + "l2=1.24 f=-0.56 shape=(1, 9000, 1)
logits [[ 0.2895271   0.10591879  0.29172546 -2.9252548 ]]
Iteration 800 of 1000: loss=1.28 " + "l1=0.0885" + "l2=1.19 f=-0.558 shape=(1, 9000, 1)
logits [[ 0.2297737   0.12575153  0.2398846  -2.828691  ]]
Iteration 900 of 1000: loss=1.21 " + "l1=0.0454" + "l2=1.17 f=-0.556 shape=(1, 9000, 1)
logits [[ 0.19618428  0.14282899  0.20134647 -2.7638042 ]]
--- 278.1994848251343 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0244 " + "l1=0.0244" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.871869 -3.501144  3.434823 -8.410658]]
Iteration 100 of 1000: loss=0.0242 " + "l1=0.024" + "l2=0.000197 f=-0.654 shape=(1, 9000, 1)
logits [[ 5.8472614 -3.5216537  3.4511714 -8.393101 ]]
Iteration 200 of 1000: loss=0.0241 " + "l1=0.0239" + "l2=0.000161 f=-0.654 shape=(1, 9000, 1)
logits [[ 5.8461285 -3.522175   3.4522896 -8.393598 ]]
Iteration 300 of 1000: loss=0.0241 " + "l1=0.0239" + "l2=0.00019 f=-0.655 shape=(1, 9000, 1)
logits [[ 5.8434916 -3.5240457  3.4543774 -8.392562 ]]
Iteration 400 of 1000: loss=0.0241 " + "l1=0.0238" + "l2=0.000232 f=-0.655 shape=(1, 9000, 1)
logits [[ 5.840597  -3.5261426  3.456626  -8.391108 ]]
Iteration 500 of 1000: loss=0.024 " + "l1=0.0238" + "l2=0.00026 f=-0.655 shape=(1, 9000, 1)
logits [[ 5.8375607 -3.5281122  3.458763  -8.389443 ]]
Iteration 600 of 1000: loss=0.0241 " + "l1=0.0237" + "l2=0.000368 f=-0.656 shape=(1, 9000, 1)
logits [[ 5.834546  -3.5298622  3.4607382 -8.387702 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.244 " + "l1=0.244" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.871869 -3.501144  3.434823 -8.410658]]
Iteration 100 of 1000: loss=0.227 " + "l1=0.218" + "l2=0.00869 f=-0.668 shape=(1, 9000, 1)
logits [[ 5.7229342 -3.63414    3.5444283 -8.304218 ]]
Iteration 200 of 1000: loss=0.22 " + "l1=0.209" + "l2=0.0116 f=-0.672 shape=(1, 9000, 1)
logits [[ 5.666209  -3.6725664  3.579519  -8.260362 ]]
Iteration 300 of 1000: loss=0.215 " + "l1=0.2" + "l2=0.0143 f=-0.675 shape=(1, 9000, 1)
logits [[ 5.608239  -3.6996572  3.6055608 -8.215599 ]]
Iteration 400 of 1000: loss=0.209 " + "l1=0.193" + "l2=0.0167 f=-0.677 shape=(1, 9000, 1)
logits [[ 5.555623  -3.7198346  3.628692  -8.172742 ]]
Iteration 500 of 1000: loss=0.204 " + "l1=0.185" + "l2=0.0189 f=-0.678 shape=(1, 9000, 1)
logits [[ 5.5025697 -3.7369173  3.649475  -8.128019 ]]
Iteration 600 of 1000: loss=0.199 " + "l1=0.178" + "l2=0.0209 f=-0.678 shape=(1, 9000, 1)
logits [[ 5.4482665 -3.747012   3.663857  -8.077676 ]]
Iteration 700 of 1000: loss=0.194 " + "l1=0.171" + "l2=0.0233 f=-0.677 shape=(1, 9000, 1)
logits [[ 5.3825336 -3.7532227  3.6744485 -8.0117855]]
Iteration 800 of 1000: loss=0.189 " + "l1=0.163" + "l2=0.0258 f=-0.676 shape=(1, 9000, 1)
logits [[ 5.313712  -3.7583618  3.6826649 -7.9423795]]
Iteration 900 of 1000: loss=0.182 " + "l1=0.153" + "l2=0.0291 f=-0.675 shape=(1, 9000, 1)
logits [[ 5.226565  -3.767623   3.6929722 -7.85186  ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.44 " + "l1=2.44" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.871869 -3.501144  3.434823 -8.410658]]
Iteration 100 of 1000: loss=0.991 " + "l1=0.291" + "l2=0.7 f=-0.726 shape=(1, 9000, 1)
logits [[ 4.1315174 -4.0785446  3.8408124 -6.799252 ]]
Iteration 200 of 1000: loss=0.468 " + "l1=0.00534" + "l2=0.463 f=-0.709 shape=(1, 9000, 1)
logits [[ 3.775072  -3.9623919  3.7697303 -6.4188037]]
Iteration 300 of 1000: loss=0.34 " + "l1=0" + "l2=0.34 f=-0.705 shape=(1, 9000, 1)
logits [[ 3.7160075 -3.893353   3.7283962 -6.3703213]]
Iteration 400 of 1000: loss=0.265 " + "l1=0" + "l2=0.265 f=-0.7 shape=(1, 9000, 1)
logits [[ 3.676583  -3.8284864  3.690243  -6.336896 ]]
Iteration 500 of 1000: loss=0.219 " + "l1=0" + "l2=0.219 f=-0.692 shape=(1, 9000, 1)
logits [[ 3.648524  -3.7749794  3.6625028 -6.3033314]]
Iteration 600 of 1000: loss=0.193 " + "l1=0" + "l2=0.193 f=-0.683 shape=(1, 9000, 1)
logits [[ 3.6221955 -3.737691   3.649463  -6.265407 ]]
Iteration 700 of 1000: loss=0.171 " + "l1=0.00398" + "l2=0.167 f=-0.674 shape=(1, 9000, 1)
logits [[ 3.632539  -3.6985204  3.6285622 -6.2575274]]
Iteration 800 of 1000: loss=0.157 " + "l1=0" + "l2=0.157 f=-0.669 shape=(1, 9000, 1)
logits [[ 3.6048145 -3.6790037  3.6215236 -6.221707 ]]
Iteration 900 of 1000: loss=0.144 " + "l1=0" + "l2=0.144 f=-0.662 shape=(1, 9000, 1)
logits [[ 3.6052687 -3.656672   3.6102579 -6.2074876]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.34 " + "l1=1.34" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.871869 -3.501144  3.434823 -8.410658]]
Iteration 100 of 1000: loss=0.879 " + "l1=0.644" + "l2=0.235 f=-0.7 shape=(1, 9000, 1)
logits [[ 4.9561157 -3.9270766  3.785482  -7.613237 ]]
Iteration 200 of 1000: loss=0.632 " + "l1=0.317" + "l2=0.315 f=-0.701 shape=(1, 9000, 1)
logits [[ 4.3959975 -3.9831545  3.8197114 -7.038382 ]]
Iteration 300 of 1000: loss=0.343 " + "l1=0.00309" + "l2=0.34 f=-0.681 shape=(1, 9000, 1)
logits [[ 3.7515657 -3.8668892  3.7459555 -6.3538985]]
Iteration 400 of 1000: loss=0.246 " + "l1=0" + "l2=0.246 f=-0.672 shape=(1, 9000, 1)
logits [[ 3.6906352 -3.7878027  3.6964428 -6.287267 ]]
Iteration 500 of 1000: loss=0.202 " + "l1=0" + "l2=0.202 f=-0.669 shape=(1, 9000, 1)
logits [[ 3.6668174 -3.7413797  3.6712348 -6.271895 ]]
Iteration 600 of 1000: loss=0.179 " + "l1=0.00505" + "l2=0.174 f=-0.663 shape=(1, 9000, 1)
logits [[ 3.657678  -3.7033894  3.6484983 -6.2564507]]
Iteration 700 of 1000: loss=0.16 " + "l1=0.00291" + "l2=0.158 f=-0.658 shape=(1, 9000, 1)
logits [[ 3.6364388 -3.6747103  3.6311426 -6.2236466]]
Iteration 800 of 1000: loss=0.148 " + "l1=0.00342" + "l2=0.145 f=-0.653 shape=(1, 9000, 1)
logits [[ 3.625112  -3.6541977  3.6188982 -6.200773 ]]
Iteration 900 of 1000: loss=0.136 " + "l1=0.000474" + "l2=0.135 f=-0.647 shape=(1, 9000, 1)
logits [[ 3.6113737 -3.6367776  3.610511  -6.1736803]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.792 " + "l1=0.792" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.871869 -3.501144  3.434823 -8.410658]]
Iteration 100 of 1000: loss=0.628 " + "l1=0.55" + "l2=0.078 f=-0.69 shape=(1, 9000, 1)
logits [[ 5.3821483 -3.8061738  3.6888292 -8.02505  ]]
Iteration 200 of 1000: loss=0.553 " + "l1=0.441" + "l2=0.112 f=-0.697 shape=(1, 9000, 1)
logits [[ 5.1052732 -3.8754404  3.7492034 -7.7655134]]
Iteration 300 of 1000: loss=0.471 " + "l1=0.323" + "l2=0.148 f=-0.692 shape=(1, 9000, 1)
logits [[ 4.7836733 -3.9135122  3.7910745 -7.4306426]]
Iteration 400 of 1000: loss=0.365 " + "l1=0.191" + "l2=0.173 f=-0.681 shape=(1, 9000, 1)
logits [[ 4.3784666 -3.8868635  3.7899418 -7.0071244]]
Iteration 500 of 1000: loss=0.272 " + "l1=0.0763" + "l2=0.196 f=-0.671 shape=(1, 9000, 1)
logits [[ 3.9823422 -3.8197014  3.7474668 -6.594357 ]]
Iteration 600 of 1000: loss=0.202 " + "l1=0" + "l2=0.202 f=-0.664 shape=(1, 9000, 1)
logits [[ 3.706306  -3.7563279  3.708149  -6.315745 ]]
Iteration 700 of 1000: loss=0.169 " + "l1=0.00298" + "l2=0.166 f=-0.656 shape=(1, 9000, 1)
logits [[ 3.677776  -3.6987128  3.6686006 -6.272626 ]]
Iteration 800 of 1000: loss=0.149 " + "l1=0.00108" + "l2=0.148 f=-0.65 shape=(1, 9000, 1)
logits [[ 3.6534169 -3.6684105  3.6500828 -6.2335744]]
Iteration 900 of 1000: loss=0.136 " + "l1=0.000474" + "l2=0.136 f=-0.644 shape=(1, 9000, 1)
logits [[ 3.642252  -3.6532378  3.6407924 -6.205562 ]]
--- 272.2732229232788 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.143 " + "l1=0.143" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.871869 -3.501144  3.434823 -8.410658]]
Iteration 100 of 1000: loss=0.142 " + "l1=0.141" + "l2=0.000544 f=-0.647 shape=(1, 9000, 1)
logits [[ 5.810507  -3.4764497  3.4046857 -8.324949 ]]
Iteration 200 of 1000: loss=0.142 " + "l1=0.141" + "l2=0.000612 f=-0.646 shape=(1, 9000, 1)
logits [[ 5.7973394 -3.4684734  3.3969488 -8.308243 ]]
Iteration 300 of 1000: loss=0.141 " + "l1=0.141" + "l2=0.000756 f=-0.644 shape=(1, 9000, 1)
logits [[ 5.782317  -3.4600873  3.3885455 -8.288534 ]]
Iteration 400 of 1000: loss=0.141 " + "l1=0.14" + "l2=0.00093 f=-0.643 shape=(1, 9000, 1)
logits [[ 5.7683077 -3.4526339  3.380989  -8.269914 ]]
Iteration 500 of 1000: loss=0.141 " + "l1=0.14" + "l2=0.00115 f=-0.642 shape=(1, 9000, 1)
logits [[ 5.7554364 -3.4460127  3.37421   -8.252691 ]]
Iteration 600 of 1000: loss=0.141 " + "l1=0.14" + "l2=0.0013 f=-0.641 shape=(1, 9000, 1)
logits [[ 5.744005  -3.4403305  3.3683538 -8.237259 ]]
Iteration 700 of 1000: loss=0.141 " + "l1=0.14" + "l2=0.00153 f=-0.64 shape=(1, 9000, 1)
logits [[ 5.73353   -3.4355154  3.36331   -8.222932 ]]
Iteration 800 of 1000: loss=0.141 " + "l1=0.139" + "l2=0.00166 f=-0.64 shape=(1, 9000, 1)
logits [[ 5.7242627 -3.4313424  3.3590393 -8.210326 ]]
Iteration 900 of 1000: loss=0.141 " + "l1=0.139" + "l2=0.00182 f=-0.639 shape=(1, 9000, 1)
logits [[ 5.7158747 -3.4279544  3.3554413 -8.199001 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.43 " + "l1=1.43" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.871869 -3.501144  3.434823 -8.410658]]
Iteration 100 of 1000: loss=1.34 " + "l1=1.3" + "l2=0.0426 f=-0.609 shape=(1, 9000, 1)
logits [[ 5.3395295 -3.265282   3.171595  -7.680535 ]]
Iteration 200 of 1000: loss=1.3 " + "l1=1.24" + "l2=0.0626 f=-0.587 shape=(1, 9000, 1)
logits [[ 5.0867677 -3.1559858  3.0491447 -7.328119 ]]
Iteration 300 of 1000: loss=1.27 " + "l1=1.18" + "l2=0.0845 f=-0.569 shape=(1, 9000, 1)
logits [[ 4.836807  -3.0601196  2.9473534 -6.9993157]]
Iteration 400 of 1000: loss=1.23 " + "l1=1.12" + "l2=0.109 f=-0.556 shape=(1, 9000, 1)
logits [[ 4.555382  -2.9697926  2.8443801 -6.6548705]]
Iteration 500 of 1000: loss=1.18 " + "l1=1.04" + "l2=0.141 f=-0.545 shape=(1, 9000, 1)
logits [[ 4.170643  -2.8426905  2.6957297 -6.2029567]]
Iteration 600 of 1000: loss=1.12 " + "l1=0.947" + "l2=0.172 f=-0.527 shape=(1, 9000, 1)
logits [[ 3.7563221 -2.7109816  2.5571504 -5.7122865]]
Iteration 700 of 1000: loss=1.07 " + "l1=0.877" + "l2=0.197 f=-0.51 shape=(1, 9000, 1)
logits [[ 3.443384  -2.6365292  2.4791794 -5.3252645]]
Iteration 800 of 1000: loss=1.04 " + "l1=0.821" + "l2=0.214 f=-0.496 shape=(1, 9000, 1)
logits [[ 3.1957    -2.6114204  2.4433928 -5.0115438]]
Iteration 900 of 1000: loss=0.997 " + "l1=0.768" + "l2=0.229 f=-0.488 shape=(1, 9000, 1)
logits [[ 2.9549122 -2.5713868  2.3888955 -4.725691 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=14.3 " + "l1=14.3" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.871869 -3.501144  3.434823 -8.410658]]
Iteration 100 of 1000: loss=7.13 " + "l1=4.27" + "l2=2.86 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.5336711 -1.7482616  1.5393656 -2.7257874]]
Iteration 200 of 1000: loss=4.78 " + "l1=1.4" + "l2=3.39 f=-0.271 shape=(1, 9000, 1)
logits [[ 0.25426584 -1.196318    0.6286609  -0.77028847]]
Iteration 300 of 1000: loss=3.13 " + "l1=0.00699" + "l2=3.12 f=-0.277 shape=(1, 9000, 1)
logits [[-0.3572106  -1.0973662   0.17586955  0.1688838 ]]
Iteration 400 of 1000: loss=2.63 " + "l1=0.0209" + "l2=2.61 f=-0.303 shape=(1, 9000, 1)
logits [[-0.35156614 -1.1331849   0.14652033  0.12562376]]
Iteration 500 of 1000: loss=2.3 " + "l1=0" + "l2=2.3 f=-0.32 shape=(1, 9000, 1)
logits [[-0.35008746 -1.1436163   0.10593585  0.107181  ]]
Iteration 600 of 1000: loss=2.03 " + "l1=0" + "l2=2.03 f=-0.33 shape=(1, 9000, 1)
logits [[-0.31968224 -1.1716776   0.07592248  0.09548941]]
Iteration 700 of 1000: loss=1.84 " + "l1=0" + "l2=1.84 f=-0.341 shape=(1, 9000, 1)
logits [[-0.2917217  -1.2156651   0.06997612  0.0724471 ]]
Iteration 800 of 1000: loss=1.71 " + "l1=0" + "l2=1.71 f=-0.348 shape=(1, 9000, 1)
logits [[-0.29251024 -1.2550423   0.0655043   0.09192101]]
Iteration 900 of 1000: loss=1.59 " + "l1=0.0131" + "l2=1.57 f=-0.355 shape=(1, 9000, 1)
logits [[-0.27203715 -1.3051114   0.084818    0.07174834]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.86 " + "l1=7.86" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.871869 -3.501144  3.434823 -8.410658]]
Iteration 100 of 1000: loss=5.18 " + "l1=3.63" + "l2=1.55 f=-0.429 shape=(1, 9000, 1)
logits [[ 2.515235  -2.2350392  2.0969722 -4.092481 ]]
Iteration 200 of 1000: loss=3.93 " + "l1=2.4" + "l2=1.53 f=-0.371 shape=(1, 9000, 1)
logits [[ 1.5600063 -1.8183697  1.5652097 -2.7912798]]
Iteration 300 of 1000: loss=3.19 " + "l1=1.56" + "l2=1.63 f=-0.345 shape=(1, 9000, 1)
logits [[ 0.9040171 -1.495654   1.0257745 -1.8140328]]
Iteration 400 of 1000: loss=2.49 " + "l1=0.775" + "l2=1.72 f=-0.345 shape=(1, 9000, 1)
logits [[ 0.26562533 -1.4012777   0.5814723  -0.8271562 ]]
Iteration 500 of 1000: loss=2.07 " + "l1=0.386" + "l2=1.69 f=-0.35 shape=(1, 9000, 1)
logits [[ 0.02808114 -1.4016762   0.33861426 -0.36315483]]
Iteration 600 of 1000: loss=1.7 " + "l1=0.0849" + "l2=1.61 f=-0.345 shape=(1, 9000, 1)
logits [[-0.13993354 -1.3623618   0.13822441 -0.01622137]]
Iteration 700 of 1000: loss=1.44 " + "l1=0.0126" + "l2=1.42 f=-0.342 shape=(1, 9000, 1)
logits [[-0.13695315 -1.3909521   0.09088586  0.06796863]]
Iteration 800 of 1000: loss=1.24 " + "l1=0.0128" + "l2=1.23 f=-0.353 shape=(1, 9000, 1)
logits [[-0.12483138 -1.4610901   0.09864657  0.07535697]]
Iteration 900 of 1000: loss=1.06 " + "l1=0" + "l2=1.06 f=-0.363 shape=(1, 9000, 1)
logits [[-0.1441014  -1.5036505   0.09510532  0.10258991]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.64 " + "l1=4.64" + "l2=0 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.871869 -3.501144  3.434823 -8.410658]]
Iteration 100 of 1000: loss=3.72 " + "l1=3.23" + "l2=0.49 f=-0.523 shape=(1, 9000, 1)
logits [[ 4.0030093 -2.807639   2.6440318 -5.929909 ]]
Iteration 200 of 1000: loss=3.06 " + "l1=2.24" + "l2=0.823 f=-0.44 shape=(1, 9000, 1)
logits [[ 2.6534884 -2.3804395  2.2015672 -4.233407 ]]
Iteration 300 of 1000: loss=2.56 " + "l1=1.63" + "l2=0.93 f=-0.384 shape=(1, 9000, 1)
logits [[ 1.8295767 -2.0049598  1.832098  -3.1913292]]
Iteration 400 of 1000: loss=2.27 " + "l1=1.37" + "l2=0.9 f=-0.358 shape=(1, 9000, 1)
logits [[ 1.5251257 -1.8207475  1.5324761 -2.6703472]]
Iteration 500 of 1000: loss=1.99 " + "l1=1.11" + "l2=0.882 f=-0.347 shape=(1, 9000, 1)
logits [[ 1.2388681 -1.7767358  1.2797408 -2.1295705]]
Iteration 600 of 1000: loss=1.75 " + "l1=0.864" + "l2=0.882 f=-0.332 shape=(1, 9000, 1)
logits [[ 0.988253  -1.7541065  1.0488541 -1.6098354]]
Iteration 700 of 1000: loss=1.51 " + "l1=0.601" + "l2=0.906 f=-0.328 shape=(1, 9000, 1)
logits [[ 0.67954123 -1.7115784   0.7830381  -1.0648183 ]]
Iteration 800 of 1000: loss=1.3 " + "l1=0.411" + "l2=0.885 f=-0.318 shape=(1, 9000, 1)
logits [[ 0.4752256 -1.6801226  0.5974821 -0.6658137]]
Iteration 900 of 1000: loss=1.12 " + "l1=0.249" + "l2=0.874 f=-0.303 shape=(1, 9000, 1)
logits [[ 0.29103836 -1.6906555   0.47757432 -0.28987178]]
--- 297.0832622051239 seconds ---
Adv result:3
Loading record A05470
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0706 " + "l1=0.0706" + "l2=0 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.768615  -2.2924292  2.392606  -7.3429003]]
Iteration 100 of 1000: loss=0.0702 " + "l1=0.0699" + "l2=0.000274 f=-0.615 shape=(1, 9000, 1)
logits [[ 4.729795  -2.2641895  2.3723783 -7.299305 ]]
Iteration 200 of 1000: loss=0.0701 " + "l1=0.0698" + "l2=0.000253 f=-0.615 shape=(1, 9000, 1)
logits [[ 4.7249737 -2.2596204  2.3691187 -7.2945642]]
Iteration 300 of 1000: loss=0.07 " + "l1=0.0697" + "l2=0.000306 f=-0.615 shape=(1, 9000, 1)
logits [[ 4.7166324 -2.2535396  2.3644066 -7.2858567]]
Iteration 400 of 1000: loss=0.0699 " + "l1=0.0695" + "l2=0.000396 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.7075586 -2.2472956  2.3594875 -7.2762475]]
Iteration 500 of 1000: loss=0.0699 " + "l1=0.0694" + "l2=0.000473 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.6981807 -2.241101   2.3545346 -7.266242 ]]
Iteration 600 of 1000: loss=0.0698 " + "l1=0.0692" + "l2=0.000557 f=-0.613 shape=(1, 9000, 1)
logits [[ 4.6888475 -2.2352784  2.3497276 -7.2562   ]]
Iteration 700 of 1000: loss=0.0698 " + "l1=0.0691" + "l2=0.000716 f=-0.613 shape=(1, 9000, 1)
logits [[ 4.6796727 -2.2297962  2.3451962 -7.246303 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.706 " + "l1=0.706" + "l2=0 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.768615  -2.2924292  2.392606  -7.3429003]]
Iteration 100 of 1000: loss=0.671 " + "l1=0.654" + "l2=0.0179 f=-0.596 shape=(1, 9000, 1)
logits [[ 4.470265  -2.0648546  2.2313724 -7.021222 ]]
Iteration 200 of 1000: loss=0.653 " + "l1=0.628" + "l2=0.0258 f=-0.59 shape=(1, 9000, 1)
logits [[ 4.3119454 -1.9647586  2.1471636 -6.8538375]]
Iteration 300 of 1000: loss=0.637 " + "l1=0.605" + "l2=0.0321 f=-0.583 shape=(1, 9000, 1)
logits [[ 4.167253  -1.8820038  2.0736685 -6.6892595]]
Iteration 400 of 1000: loss=0.623 " + "l1=0.585" + "l2=0.0381 f=-0.574 shape=(1, 9000, 1)
logits [[ 4.0385175 -1.814445   2.004902  -6.5269046]]
Iteration 500 of 1000: loss=0.612 " + "l1=0.569" + "l2=0.043 f=-0.566 shape=(1, 9000, 1)
logits [[ 3.9282672 -1.7569082  1.9423286 -6.3788843]]
Iteration 600 of 1000: loss=0.601 " + "l1=0.553" + "l2=0.0474 f=-0.559 shape=(1, 9000, 1)
logits [[ 3.823243  -1.7092587  1.8876033 -6.2382245]]
Iteration 700 of 1000: loss=0.589 " + "l1=0.537" + "l2=0.0521 f=-0.551 shape=(1, 9000, 1)
logits [[ 3.7113569 -1.6578844  1.83208   -6.090287 ]]
Iteration 800 of 1000: loss=0.577 " + "l1=0.522" + "l2=0.0554 f=-0.545 shape=(1, 9000, 1)
logits [[ 3.6044812 -1.6150941  1.780266  -5.948384 ]]
Iteration 900 of 1000: loss=0.565 " + "l1=0.506" + "l2=0.0596 f=-0.536 shape=(1, 9000, 1)
logits [[ 3.4966524 -1.5621626  1.72411   -5.8037477]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=7.06 " + "l1=7.06" + "l2=0 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.768615  -2.2924292  2.392606  -7.3429003]]
Iteration 100 of 1000: loss=3.28 " + "l1=1.34" + "l2=1.94 f=-0.444 shape=(1, 9000, 1)
logits [[ 0.8021254  -0.53856194  0.792206   -2.8326468 ]]
Iteration 200 of 1000: loss=2.1 " + "l1=0.554" + "l2=1.55 f=-0.352 shape=(1, 9000, 1)
logits [[ 0.4729595  -0.07002497  0.48387498 -2.2950823 ]]
Iteration 300 of 1000: loss=1.55 " + "l1=0.0959" + "l2=1.46 f=-0.332 shape=(1, 9000, 1)
logits [[ 0.27265432  0.18843527  0.28437284 -2.072538  ]]
Iteration 400 of 1000: loss=1.24 " + "l1=0" + "l2=1.24 f=-0.324 shape=(1, 9000, 1)
logits [[ 0.20540878  0.22111808  0.22032355 -1.94244   ]]
Iteration 500 of 1000: loss=1.1 " + "l1=0" + "l2=1.1 f=-0.319 shape=(1, 9000, 1)
logits [[ 0.20529911  0.21215321  0.21022229 -1.9052559 ]]
Iteration 600 of 1000: loss=0.992 " + "l1=0.00404" + "l2=0.988 f=-0.309 shape=(1, 9000, 1)
logits [[ 0.20785712  0.21291746  0.21695979 -1.8747038 ]]
Iteration 700 of 1000: loss=0.921 " + "l1=0" + "l2=0.921 f=-0.302 shape=(1, 9000, 1)
logits [[ 0.2015645   0.21155193  0.20512274 -1.8277516 ]]
Iteration 800 of 1000: loss=0.873 " + "l1=0.0128" + "l2=0.86 f=-0.296 shape=(1, 9000, 1)
logits [[ 0.21191041  0.1990609   0.19620045 -1.7919877 ]]
Iteration 900 of 1000: loss=0.814 " + "l1=0" + "l2=0.814 f=-0.297 shape=(1, 9000, 1)
logits [[ 0.19652289  0.19892605  0.19309556 -1.7747166 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=3.88 " + "l1=3.88" + "l2=0 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.768615  -2.2924292  2.392606  -7.3429003]]
Iteration 100 of 1000: loss=2.64 " + "l1=1.93" + "l2=0.711 f=-0.472 shape=(1, 9000, 1)
logits [[ 2.516943  -0.9881386  1.3248397 -4.7406507]]
Iteration 200 of 1000: loss=1.95 " + "l1=1.06" + "l2=0.888 f=-0.413 shape=(1, 9000, 1)
logits [[ 1.3312112 -0.5960584  0.9170427 -3.302494 ]]
Iteration 300 of 1000: loss=1.45 " + "l1=0.529" + "l2=0.923 f=-0.33 shape=(1, 9000, 1)
logits [[ 0.6354617 -0.3151797  0.6474561 -2.287702 ]]
Iteration 400 of 1000: loss=1.24 " + "l1=0.398" + "l2=0.838 f=-0.304 shape=(1, 9000, 1)
logits [[ 0.52996486 -0.19235961  0.5315348  -2.0856516 ]]
Iteration 500 of 1000: loss=1.13 " + "l1=0.313" + "l2=0.817 f=-0.289 shape=(1, 9000, 1)
logits [[ 0.45845    -0.09779979  0.4710506  -1.9864684 ]]
Iteration 600 of 1000: loss=1.03 " + "l1=0.217" + "l2=0.817 f=-0.285 shape=(1, 9000, 1)
logits [[ 0.40592536  0.01116956  0.40351796 -1.9596537 ]]
Iteration 700 of 1000: loss=0.942 " + "l1=0.118" + "l2=0.824 f=-0.289 shape=(1, 9000, 1)
logits [[ 0.31747577  0.11311702  0.32735202 -1.9155008 ]]
Iteration 800 of 1000: loss=0.845 " + "l1=0.00923" + "l2=0.836 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.20851775  0.19174062  0.2076659  -1.7316375 ]]
Iteration 900 of 1000: loss=0.766 " + "l1=0.0064" + "l2=0.759 f=-0.281 shape=(1, 9000, 1)
logits [[ 0.17591491  0.16427454  0.17436998 -1.6400348 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.29 " + "l1=2.29" + "l2=0 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.768615  -2.2924292  2.392606  -7.3429003]]
Iteration 100 of 1000: loss=1.9 " + "l1=1.68" + "l2=0.22 f=-0.55 shape=(1, 9000, 1)
logits [[ 3.6087766 -1.5505776  1.796768  -6.055078 ]]
Iteration 200 of 1000: loss=1.64 " + "l1=1.25" + "l2=0.393 f=-0.47 shape=(1, 9000, 1)
logits [[ 2.791115  -1.0417746  1.3792714 -5.006698 ]]
Iteration 300 of 1000: loss=1.4 " + "l1=0.938" + "l2=0.465 f=-0.409 shape=(1, 9000, 1)
logits [[ 2.113452   -0.77394533  1.1161233  -4.092358  ]]
Iteration 400 of 1000: loss=1.22 " + "l1=0.715" + "l2=0.503 f=-0.342 shape=(1, 9000, 1)
logits [[ 1.6389948  -0.56005484  0.9819852  -3.4294374 ]]
Iteration 500 of 1000: loss=1.09 " + "l1=0.538" + "l2=0.551 f=-0.304 shape=(1, 9000, 1)
logits [[ 1.2212034  -0.43349117  0.85073775 -2.855624  ]]
Iteration 600 of 1000: loss=0.967 " + "l1=0.348" + "l2=0.619 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.738415   -0.33284825  0.66824543 -2.2227955 ]]
Iteration 700 of 1000: loss=0.886 " + "l1=0.279" + "l2=0.608 f=-0.282 shape=(1, 9000, 1)
logits [[ 0.58142316 -0.27638885  0.5741996  -2.0086455 ]]
Iteration 800 of 1000: loss=0.842 " + "l1=0.247" + "l2=0.595 f=-0.274 shape=(1, 9000, 1)
logits [[ 0.5245207  -0.23623513  0.510724   -1.8936388 ]]
Iteration 900 of 1000: loss=0.793 " + "l1=0.196" + "l2=0.597 f=-0.264 shape=(1, 9000, 1)
logits [[ 0.42760655 -0.171486    0.43114874 -1.742509  ]]
--- 279.91755867004395 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0238 " + "l1=0.0238" + "l2=0 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.768615  -2.2924292  2.392606  -7.3429003]]
Iteration 100 of 1000: loss=0.0236 " + "l1=0.0234" + "l2=0.000192 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.7393446 -2.3006794  2.4014843 -7.3176727]]
Iteration 200 of 1000: loss=0.0235 " + "l1=0.0234" + "l2=0.000148 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.738044  -2.3013911  2.4023712 -7.317364 ]]
Iteration 300 of 1000: loss=0.0235 " + "l1=0.0233" + "l2=0.000184 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.733538  -2.3027434  2.403875  -7.314118 ]]
Iteration 400 of 1000: loss=0.0235 " + "l1=0.0232" + "l2=0.000238 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.7284226 -2.3040612  2.4053514 -7.3102455]]
Iteration 500 of 1000: loss=0.0235 " + "l1=0.0232" + "l2=0.00029 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.723153  -2.3052928  2.406749  -7.3062015]]
Iteration 600 of 1000: loss=0.0235 " + "l1=0.0231" + "l2=0.000382 f=-0.621 shape=(1, 9000, 1)
logits [[ 4.7179923 -2.3062198  2.407838  -7.3021436]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.238 " + "l1=0.238" + "l2=0 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.768615  -2.2924292  2.392606  -7.3429003]]
Iteration 100 of 1000: loss=0.219 " + "l1=0.209" + "l2=0.0103 f=-0.628 shape=(1, 9000, 1)
logits [[ 4.558274 -2.365231  2.468375 -7.174749]]
Iteration 200 of 1000: loss=0.211 " + "l1=0.196" + "l2=0.0143 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.469343  -2.4028852  2.5061018 -7.10265  ]]
Iteration 300 of 1000: loss=0.203 " + "l1=0.185" + "l2=0.0179 f=-0.635 shape=(1, 9000, 1)
logits [[ 4.380839  -2.4344938  2.5330448 -7.021055 ]]
Iteration 400 of 1000: loss=0.196 " + "l1=0.175" + "l2=0.021 f=-0.639 shape=(1, 9000, 1)
logits [[ 4.298101  -2.4593654  2.5492342 -6.9420147]]
Iteration 500 of 1000: loss=0.19 " + "l1=0.166" + "l2=0.0242 f=-0.641 shape=(1, 9000, 1)
logits [[ 4.2162595 -2.4797482  2.5611124 -6.8618197]]
Iteration 600 of 1000: loss=0.184 " + "l1=0.156" + "l2=0.0273 f=-0.643 shape=(1, 9000, 1)
logits [[ 4.1365347 -2.4983637  2.572165  -6.7828417]]
Iteration 700 of 1000: loss=0.178 " + "l1=0.147" + "l2=0.0306 f=-0.645 shape=(1, 9000, 1)
logits [[ 4.053586  -2.5146654  2.5828254 -6.700191 ]]
Iteration 800 of 1000: loss=0.172 " + "l1=0.139" + "l2=0.0332 f=-0.646 shape=(1, 9000, 1)
logits [[ 3.9758606 -2.529144   2.5901978 -6.621034 ]]
Iteration 900 of 1000: loss=0.166 " + "l1=0.132" + "l2=0.0349 f=-0.647 shape=(1, 9000, 1)
logits [[ 3.911068  -2.538148   2.5955617 -6.5552063]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=2.38 " + "l1=2.38" + "l2=0 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.768615  -2.2924292  2.392606  -7.3429003]]
Iteration 100 of 1000: loss=0.677 " + "l1=0.00251" + "l2=0.675 f=-0.642 shape=(1, 9000, 1)
logits [[ 2.8109906 -2.9520583  2.8084853 -5.237042 ]]
Iteration 200 of 1000: loss=0.45 " + "l1=0" + "l2=0.45 f=-0.65 shape=(1, 9000, 1)
logits [[ 2.7961826 -3.00475    2.803602  -5.196806 ]]
Iteration 300 of 1000: loss=0.357 " + "l1=0.00746" + "l2=0.35 f=-0.655 shape=(1, 9000, 1)
logits [[ 2.796822  -3.0222807  2.7893658 -5.1857142]]
Iteration 400 of 1000: loss=0.308 " + "l1=0" + "l2=0.308 f=-0.66 shape=(1, 9000, 1)
logits [[ 2.756916  -3.0257788  2.7743266 -5.143975 ]]
Iteration 500 of 1000: loss=0.273 " + "l1=0" + "l2=0.273 f=-0.66 shape=(1, 9000, 1)
logits [[ 2.757579  -3.03018    2.7709904 -5.1367054]]
Iteration 600 of 1000: loss=0.246 " + "l1=0.00278" + "l2=0.244 f=-0.658 shape=(1, 9000, 1)
logits [[ 2.7640634 -3.017498   2.7612786 -5.139889 ]]
Iteration 700 of 1000: loss=0.228 " + "l1=0" + "l2=0.228 f=-0.657 shape=(1, 9000, 1)
logits [[ 2.7452276 -3.0142698  2.759367  -5.118329 ]]
Iteration 800 of 1000: loss=0.211 " + "l1=0" + "l2=0.211 f=-0.656 shape=(1, 9000, 1)
logits [[ 2.7394948 -3.00817    2.7561226 -5.112394 ]]
Iteration 900 of 1000: loss=0.19 " + "l1=0.000111" + "l2=0.19 f=-0.655 shape=(1, 9000, 1)
logits [[ 2.7472773 -2.9969316  2.7471664 -5.117861 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.31 " + "l1=1.31" + "l2=0 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.768615  -2.2924292  2.392606  -7.3429003]]
Iteration 100 of 1000: loss=0.703 " + "l1=0.378" + "l2=0.325 f=-0.657 shape=(1, 9000, 1)
logits [[ 3.4350767 -2.7945652  2.7473688 -6.0172596]]
Iteration 200 of 1000: loss=0.476 " + "l1=0.0733" + "l2=0.403 f=-0.664 shape=(1, 9000, 1)
logits [[ 2.9528592 -3.012511   2.8195417 -5.4158187]]
Iteration 300 of 1000: loss=0.328 " + "l1=0.00705" + "l2=0.321 f=-0.662 shape=(1, 9000, 1)
logits [[ 2.8152716 -3.0531042  2.8024516 -5.2130747]]
Iteration 400 of 1000: loss=0.266 " + "l1=0.00207" + "l2=0.264 f=-0.671 shape=(1, 9000, 1)
logits [[ 2.7893965 -3.0573137  2.7856345 -5.2023664]]
Iteration 500 of 1000: loss=0.23 " + "l1=0.00146" + "l2=0.228 f=-0.674 shape=(1, 9000, 1)
logits [[ 2.7724178 -3.0448008  2.7697544 -5.193304 ]]
Iteration 600 of 1000: loss=0.203 " + "l1=0.00227" + "l2=0.201 f=-0.676 shape=(1, 9000, 1)
logits [[ 2.7571473 -3.0302868  2.753028  -5.1819987]]
Iteration 700 of 1000: loss=0.185 " + "l1=0.0026" + "l2=0.182 f=-0.675 shape=(1, 9000, 1)
logits [[ 2.7468014 -3.0130413  2.742066  -5.1744375]]
Iteration 800 of 1000: loss=0.17 " + "l1=0.00373" + "l2=0.166 f=-0.673 shape=(1, 9000, 1)
logits [[ 2.7356586 -2.9968216  2.7288694 -5.1596746]]
Iteration 900 of 1000: loss=0.154 " + "l1=0" + "l2=0.154 f=-0.67 shape=(1, 9000, 1)
logits [[ 2.7184377 -2.9812543  2.7187843 -5.1356525]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.772 " + "l1=0.772" + "l2=0 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.768615  -2.2924292  2.392606  -7.3429003]]
Iteration 100 of 1000: loss=0.558 " + "l1=0.424" + "l2=0.134 f=-0.651 shape=(1, 9000, 1)
logits [[ 3.9430413 -2.608825   2.6375232 -6.576671 ]]
Iteration 200 of 1000: loss=0.461 " + "l1=0.294" + "l2=0.168 f=-0.659 shape=(1, 9000, 1)
logits [[ 3.6265526 -2.762324   2.72311   -6.2240233]]
Iteration 300 of 1000: loss=0.381 " + "l1=0.189" + "l2=0.192 f=-0.668 shape=(1, 9000, 1)
logits [[ 3.3607812 -2.9053338  2.7792313 -5.9079814]]
Iteration 400 of 1000: loss=0.307 " + "l1=0.089" + "l2=0.218 f=-0.676 shape=(1, 9000, 1)
logits [[ 3.0605226 -3.0062532  2.7865555 -5.546578 ]]
Iteration 500 of 1000: loss=0.242 " + "l1=0.0186" + "l2=0.223 f=-0.686 shape=(1, 9000, 1)
logits [[ 2.8323746 -3.0666702  2.7750735 -5.28537  ]]
Iteration 600 of 1000: loss=0.201 " + "l1=0.000439" + "l2=0.2 f=-0.689 shape=(1, 9000, 1)
logits [[ 2.7534482 -3.061563   2.752098  -5.1987343]]
Iteration 700 of 1000: loss=0.182 " + "l1=0" + "l2=0.182 f=-0.684 shape=(1, 9000, 1)
logits [[ 2.7199576 -3.0249724  2.72834   -5.1585746]]
Iteration 800 of 1000: loss=0.165 " + "l1=0.00237" + "l2=0.163 f=-0.685 shape=(1, 9000, 1)
logits [[ 2.7179184 -2.9984562  2.7106285 -5.169675 ]]
Iteration 900 of 1000: loss=0.153 " + "l1=0.00293" + "l2=0.15 f=-0.68 shape=(1, 9000, 1)
logits [[ 2.6979945 -2.9654198  2.6889884 -5.142345 ]]
--- 273.2188036441803 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.121 " + "l1=0.121" + "l2=0 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.768615  -2.2924292  2.392606  -7.3429003]]
Iteration 100 of 1000: loss=0.12 " + "l1=0.12" + "l2=0.000506 f=-0.615 shape=(1, 9000, 1)
logits [[ 4.7090063 -2.281169   2.375989  -7.264969 ]]
Iteration 200 of 1000: loss=0.12 " + "l1=0.119" + "l2=0.000521 f=-0.615 shape=(1, 9000, 1)
logits [[ 4.697257  -2.2786808  2.3718884 -7.249342 ]]
Iteration 300 of 1000: loss=0.12 " + "l1=0.119" + "l2=0.000621 f=-0.614 shape=(1, 9000, 1)
logits [[ 4.6815042 -2.2756002  2.3664346 -7.2283206]]
Iteration 400 of 1000: loss=0.119 " + "l1=0.119" + "l2=0.000752 f=-0.613 shape=(1, 9000, 1)
logits [[ 4.6650553 -2.2724018  2.360648  -7.2063146]]
Iteration 500 of 1000: loss=0.119 " + "l1=0.118" + "l2=0.000903 f=-0.612 shape=(1, 9000, 1)
logits [[ 4.6487384 -2.2691586  2.3548043 -7.184349 ]]
Iteration 600 of 1000: loss=0.119 " + "l1=0.118" + "l2=0.00112 f=-0.612 shape=(1, 9000, 1)
logits [[ 4.6327405 -2.265926   2.3488874 -7.1626196]]
Iteration 700 of 1000: loss=0.119 " + "l1=0.118" + "l2=0.00124 f=-0.611 shape=(1, 9000, 1)
logits [[ 4.6169972 -2.262529   2.342869  -7.1412616]]
Iteration 800 of 1000: loss=0.119 " + "l1=0.117" + "l2=0.00142 f=-0.61 shape=(1, 9000, 1)
logits [[ 4.6010284 -2.2590578  2.3368003 -7.119716 ]]
Iteration 900 of 1000: loss=0.118 " + "l1=0.117" + "l2=0.00163 f=-0.61 shape=(1, 9000, 1)
logits [[ 4.5851636 -2.255562   2.330779  -7.098439 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.21 " + "l1=1.21" + "l2=0 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.768615  -2.2924292  2.392606  -7.3429003]]
Iteration 100 of 1000: loss=1.13 " + "l1=1.08" + "l2=0.0431 f=-0.594 shape=(1, 9000, 1)
logits [[ 4.212643  -2.2030118  2.2431238 -6.629437 ]]
Iteration 200 of 1000: loss=1.08 " + "l1=1.01" + "l2=0.068 f=-0.58 shape=(1, 9000, 1)
logits [[ 3.882435  -2.1630485  2.152184  -6.190367 ]]
Iteration 300 of 1000: loss=1.02 " + "l1=0.922" + "l2=0.0978 f=-0.563 shape=(1, 9000, 1)
logits [[ 3.5213444 -2.1239388  2.0493176 -5.697605 ]]
Iteration 400 of 1000: loss=0.968 " + "l1=0.845" + "l2=0.122 f=-0.548 shape=(1, 9000, 1)
logits [[ 3.206417  -2.0950968  1.9442402 -5.2474   ]]
Iteration 500 of 1000: loss=0.909 " + "l1=0.749" + "l2=0.159 f=-0.522 shape=(1, 9000, 1)
logits [[ 2.817617  -2.0522094  1.8237513 -4.677158 ]]
Iteration 600 of 1000: loss=0.855 " + "l1=0.667" + "l2=0.188 f=-0.486 shape=(1, 9000, 1)
logits [[ 2.4964664 -1.9699441  1.7053963 -4.1745296]]
Iteration 700 of 1000: loss=0.813 " + "l1=0.605" + "l2=0.208 f=-0.456 shape=(1, 9000, 1)
logits [[ 2.2593179 -1.9093674  1.6132553 -3.7885416]]
Iteration 800 of 1000: loss=0.771 " + "l1=0.543" + "l2=0.228 f=-0.424 shape=(1, 9000, 1)
logits [[ 2.0270607 -1.8585373  1.5390729 -3.4044564]]
Iteration 900 of 1000: loss=0.737 " + "l1=0.499" + "l2=0.237 f=-0.394 shape=(1, 9000, 1)
logits [[ 1.8719096 -1.8070446  1.4799329 -3.1207051]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=12.1 " + "l1=12.1" + "l2=0 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.768615  -2.2924292  2.392606  -7.3429003]]
Iteration 100 of 1000: loss=3.35 " + "l1=0" + "l2=3.35 f=-0.145 shape=(1, 9000, 1)
logits [[ 0.06441541 -0.8793675   0.10925643  0.12410524]]
Iteration 200 of 1000: loss=2.06 " + "l1=0" + "l2=2.06 f=-0.117 shape=(1, 9000, 1)
logits [[ 0.12332375 -0.8642457   0.12901863  0.14202797]]
Iteration 300 of 1000: loss=1.66 " + "l1=0" + "l2=1.66 f=-0.0999 shape=(1, 9000, 1)
logits [[ 0.14378962 -0.895086    0.15799056  0.19387832]]
Iteration 400 of 1000: loss=1.46 " + "l1=0" + "l2=1.46 f=-0.097 shape=(1, 9000, 1)
logits [[ 0.17399433 -0.94612277  0.18243757  0.20161611]]
Iteration 500 of 1000: loss=1.34 " + "l1=0" + "l2=1.34 f=-0.0935 shape=(1, 9000, 1)
logits [[ 0.1791184  -0.97647816  0.18259117  0.24072343]]
Iteration 600 of 1000: loss=1.26 " + "l1=0" + "l2=1.26 f=-0.0959 shape=(1, 9000, 1)
logits [[ 0.17107192 -0.99287707  0.17255105  0.2654581 ]]
Iteration 700 of 1000: loss=1.17 " + "l1=0" + "l2=1.17 f=-0.109 shape=(1, 9000, 1)
logits [[ 0.19289884 -1.0262882   0.19538544  0.20221478]]
Iteration 800 of 1000: loss=1.13 " + "l1=0.0158" + "l2=1.11 f=-0.117 shape=(1, 9000, 1)
logits [[ 0.19485284 -1.0410528   0.19708072  0.18125325]]
Iteration 900 of 1000: loss=1.1 " + "l1=0" + "l2=1.1 f=-0.116 shape=(1, 9000, 1)
logits [[ 0.1405357  -1.0300335   0.15855004  0.2669649 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=6.66 " + "l1=6.66" + "l2=0 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.768615  -2.2924292  2.392606  -7.3429003]]
Iteration 100 of 1000: loss=3.31 " + "l1=1.47" + "l2=1.85 f=-0.321 shape=(1, 9000, 1)
logits [[ 0.9321389 -1.4303353  0.9385402 -1.72623  ]]
Iteration 200 of 1000: loss=1.94 " + "l1=0.187" + "l2=1.75 f=-0.175 shape=(1, 9000, 1)
logits [[ 0.19097872 -0.9870512   0.21770652 -0.12272807]]
Iteration 300 of 1000: loss=1.37 " + "l1=0.0233" + "l2=1.35 f=-0.108 shape=(1, 9000, 1)
logits [[ 0.19524056 -0.9792427   0.19728148  0.15496424]]
Iteration 400 of 1000: loss=1.18 " + "l1=0.00985" + "l2=1.17 f=-0.103 shape=(1, 9000, 1)
logits [[ 0.20073041 -0.9909665   0.19577608  0.18282452]]
Iteration 500 of 1000: loss=1.08 " + "l1=0" + "l2=1.08 f=-0.103 shape=(1, 9000, 1)
logits [[ 0.1874207  -0.9930672   0.19169515  0.20052624]]
Iteration 600 of 1000: loss=1 " + "l1=0" + "l2=1 f=-0.103 shape=(1, 9000, 1)
logits [[ 0.18754041 -0.99121577  0.19156907  0.20087224]]
Iteration 700 of 1000: loss=0.947 " + "l1=0" + "l2=0.947 f=-0.0991 shape=(1, 9000, 1)
logits [[ 0.18121125 -0.96815914  0.18787533  0.20247266]]
Iteration 800 of 1000: loss=0.893 " + "l1=0" + "l2=0.893 f=-0.095 shape=(1, 9000, 1)
logits [[ 0.18449196 -0.93957007  0.18721719  0.18772885]]
Iteration 900 of 1000: loss=0.85 " + "l1=0" + "l2=0.85 f=-0.0912 shape=(1, 9000, 1)
logits [[ 0.18063663 -0.9196512   0.18543978  0.18872651]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=3.94 " + "l1=3.94" + "l2=0 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.768615  -2.2924292  2.392606  -7.3429003]]
Iteration 100 of 1000: loss=2.8 " + "l1=2.12" + "l2=0.682 f=-0.477 shape=(1, 9000, 1)
logits [[ 2.3857775 -1.883313   1.7206829 -4.1296554]]
Iteration 200 of 1000: loss=2.02 " + "l1=1" + "l2=1.01 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.0739043 -1.5386515  1.075983  -2.0123315]]
Iteration 300 of 1000: loss=1.51 " + "l1=0.491" + "l2=1.02 f=-0.242 shape=(1, 9000, 1)
logits [[ 0.5875202  -1.2242124   0.58997244 -0.91968924]]
Iteration 400 of 1000: loss=1.14 " + "l1=0.0783" + "l2=1.06 f=-0.126 shape=(1, 9000, 1)
logits [[ 0.24376795 -1.0001538   0.24626689  0.00549307]]
Iteration 500 of 1000: loss=0.97 " + "l1=0.00214" + "l2=0.968 f=-0.0982 shape=(1, 9000, 1)
logits [[ 0.18175499 -0.9606903   0.19626693  0.1896807 ]]
Iteration 600 of 1000: loss=0.876 " + "l1=0" + "l2=0.876 f=-0.0925 shape=(1, 9000, 1)
logits [[ 0.18421416 -0.9298214   0.18373063  0.19200876]]
Iteration 700 of 1000: loss=0.812 " + "l1=7.64e-05" + "l2=0.812 f=-0.0966 shape=(1, 9000, 1)
logits [[ 0.16926047 -0.89382064  0.16922294  0.16902542]]
Iteration 800 of 1000: loss=0.771 " + "l1=0" + "l2=0.771 f=-0.0998 shape=(1, 9000, 1)
logits [[ 0.1461228  -0.86757594  0.15365967  0.16861862]]
Iteration 900 of 1000: loss=0.726 " + "l1=0.00332" + "l2=0.722 f=-0.0978 shape=(1, 9000, 1)
logits [[ 0.15911715 -0.8586876   0.15934975  0.14914364]]
--- 296.5797052383423 seconds ---
Adv result:3
Loading record A05500
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.085 " + "l1=0.085" + "l2=0 f=-0.665 shape=(1, 9000, 1)
logits [[ 5.2802005 -3.2213893  3.2938666 -8.011317 ]]
Iteration 100 of 1000: loss=0.0847 " + "l1=0.0844" + "l2=0.000264 f=-0.661 shape=(1, 9000, 1)
logits [[ 5.2424726 -3.2013154  3.2806513 -7.967718 ]]
Iteration 200 of 1000: loss=0.0846 " + "l1=0.0844" + "l2=0.000245 f=-0.661 shape=(1, 9000, 1)
logits [[ 5.2390027 -3.199076   3.279284  -7.963856 ]]
Iteration 300 of 1000: loss=0.0846 " + "l1=0.0843" + "l2=0.000288 f=-0.661 shape=(1, 9000, 1)
logits [[ 5.232946  -3.1958323  3.277207  -7.9571104]]
Iteration 400 of 1000: loss=0.0845 " + "l1=0.0842" + "l2=0.000339 f=-0.66 shape=(1, 9000, 1)
logits [[ 5.2263646 -3.19254    3.275116  -7.9499083]]
Iteration 500 of 1000: loss=0.0845 " + "l1=0.0841" + "l2=0.000392 f=-0.66 shape=(1, 9000, 1)
logits [[ 5.219762  -3.189298   3.2730348 -7.942893 ]]
Iteration 600 of 1000: loss=0.0844 " + "l1=0.084" + "l2=0.000438 f=-0.659 shape=(1, 9000, 1)
logits [[ 5.212945  -3.1859782  3.2710319 -7.935682 ]]
Iteration 700 of 1000: loss=0.0844 " + "l1=0.0839" + "l2=0.000539 f=-0.659 shape=(1, 9000, 1)
logits [[ 5.205821  -3.1825833  3.2690287 -7.928292 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.85 " + "l1=0.85" + "l2=0 f=-0.665 shape=(1, 9000, 1)
logits [[ 5.2802005 -3.2213893  3.2938666 -8.011317 ]]
Iteration 100 of 1000: loss=0.82 " + "l1=0.799" + "l2=0.0203 f=-0.633 shape=(1, 9000, 1)
logits [[ 4.955378  -3.0389674  3.1765537 -7.6252403]]
Iteration 200 of 1000: loss=0.808 " + "l1=0.783" + "l2=0.0253 f=-0.625 shape=(1, 9000, 1)
logits [[ 4.8473344 -2.9844787  3.1379023 -7.500841 ]]
Iteration 300 of 1000: loss=0.797 " + "l1=0.768" + "l2=0.0291 f=-0.618 shape=(1, 9000, 1)
logits [[ 4.7413716 -2.9343843  3.1024473 -7.382481 ]]
Iteration 400 of 1000: loss=0.784 " + "l1=0.751" + "l2=0.0329 f=-0.613 shape=(1, 9000, 1)
logits [[ 4.627116  -2.8809676  3.065711  -7.261867 ]]
Iteration 500 of 1000: loss=0.772 " + "l1=0.736" + "l2=0.0361 f=-0.607 shape=(1, 9000, 1)
logits [[ 4.5263796 -2.8343987  3.0310872 -7.1526017]]
Iteration 600 of 1000: loss=0.763 " + "l1=0.724" + "l2=0.0386 f=-0.603 shape=(1, 9000, 1)
logits [[ 4.4431143 -2.7978864  3.001867  -7.0586424]]
Iteration 700 of 1000: loss=0.754 " + "l1=0.712" + "l2=0.0417 f=-0.599 shape=(1, 9000, 1)
logits [[ 4.361649  -2.7629833  2.9747758 -6.969165 ]]
Iteration 800 of 1000: loss=0.746 " + "l1=0.702" + "l2=0.0444 f=-0.595 shape=(1, 9000, 1)
logits [[ 4.2863345 -2.733236   2.9510248 -6.8840537]]
Iteration 900 of 1000: loss=0.739 " + "l1=0.693" + "l2=0.0467 f=-0.592 shape=(1, 9000, 1)
logits [[ 4.2215405 -2.704266   2.9274116 -6.8112197]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=8.5 " + "l1=8.5" + "l2=0 f=-0.665 shape=(1, 9000, 1)
logits [[ 5.2802005 -3.2213893  3.2938666 -8.011317 ]]
Iteration 100 of 1000: loss=6.06 " + "l1=4.86" + "l2=1.19 f=-0.436 shape=(1, 9000, 1)
logits [[ 2.780624  -2.0823493  2.5634909 -5.0073385]]
Iteration 200 of 1000: loss=5.31 " + "l1=4.1" + "l2=1.21 f=-0.364 shape=(1, 9000, 1)
logits [[ 2.3258786 -1.7788033  2.316366  -4.317555 ]]
Iteration 300 of 1000: loss=4.83 " + "l1=3.54" + "l2=1.29 f=-0.294 shape=(1, 9000, 1)
logits [[ 2.0673625 -1.4732344  2.068486  -3.8399007]]
Iteration 400 of 1000: loss=4.34 " + "l1=3.02" + "l2=1.32 f=-0.248 shape=(1, 9000, 1)
logits [[ 1.8465044 -1.1758143  1.8356818 -3.4969935]]
Iteration 500 of 1000: loss=4.03 " + "l1=2.64" + "l2=1.39 f=-0.231 shape=(1, 9000, 1)
logits [[ 1.6463814 -0.9782278  1.6656457 -3.2597492]]
Iteration 600 of 1000: loss=3.83 " + "l1=2.43" + "l2=1.39 f=-0.216 shape=(1, 9000, 1)
logits [[ 1.5675138  -0.86599916  1.5651208  -3.1307578 ]]
Iteration 700 of 1000: loss=3.69 " + "l1=2.29" + "l2=1.4 f=-0.198 shape=(1, 9000, 1)
logits [[ 1.4828012 -0.7961056  1.4933809 -2.9716055]]
Iteration 800 of 1000: loss=3.58 " + "l1=2.17" + "l2=1.41 f=-0.182 shape=(1, 9000, 1)
logits [[ 1.4239278 -0.7428684  1.4206088 -2.8305767]]
Iteration 900 of 1000: loss=3.49 " + "l1=2.05" + "l2=1.43 f=-0.162 shape=(1, 9000, 1)
logits [[ 1.361316   -0.69101846  1.3612161  -2.6797051 ]]
const [10.]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=85 " + "l1=85" + "l2=0 f=-0.665 shape=(1, 9000, 1)
logits [[ 5.2802005 -3.2213893  3.2938666 -8.011317 ]]
Iteration 100 of 1000: loss=23.8 " + "l1=10.5" + "l2=13.3 f=-0.227 shape=(1, 9000, 1)
logits [[ 0.74832726 -0.20594932  0.8408446  -2.2906888 ]]
Iteration 200 of 1000: loss=13.3 " + "l1=0.142" + "l2=13.2 f=-0.241 shape=(1, 9000, 1)
logits [[-0.02653614  0.32981813  0.3439779  -1.612822  ]]
Iteration 300 of 1000: loss=10.6 " + "l1=0" + "l2=10.6 f=-0.254 shape=(1, 9000, 1)
logits [[ 0.01806656  0.34639722  0.34509033 -1.7247847 ]]
Iteration 400 of 1000: loss=9.26 " + "l1=0" + "l2=9.26 f=-0.26 shape=(1, 9000, 1)
logits [[-0.00380176  0.36540455  0.3469116  -1.7465159 ]]
Iteration 500 of 1000: loss=8.24 " + "l1=0.0624" + "l2=8.18 f=-0.266 shape=(1, 9000, 1)
logits [[-0.02510823  0.34904492  0.35528603 -1.7413526 ]]
Iteration 600 of 1000: loss=7.6 " + "l1=0" + "l2=7.6 f=-0.267 shape=(1, 9000, 1)
logits [[-0.077516    0.37936947  0.36576334 -1.7347007 ]]
Iteration 700 of 1000: loss=7.27 " + "l1=0" + "l2=7.27 f=-0.272 shape=(1, 9000, 1)
logits [[-0.13813718  0.39535043  0.36073667 -1.7056162 ]]
Iteration 800 of 1000: loss=6.85 " + "l1=0" + "l2=6.85 f=-0.281 shape=(1, 9000, 1)
logits [[-0.14018825  0.3945546   0.38242793 -1.7599088 ]]
Iteration 900 of 1000: loss=6.53 " + "l1=0.0376" + "l2=6.49 f=-0.285 shape=(1, 9000, 1)
logits [[-0.14172167  0.39151692  0.3952751  -1.7842675 ]]
const [5.5]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=46.8 " + "l1=46.8" + "l2=0 f=-0.665 shape=(1, 9000, 1)
logits [[ 5.2802005 -3.2213893  3.2938666 -8.011317 ]]
Iteration 100 of 1000: loss=18.2 " + "l1=10.3" + "l2=7.95 f=-0.252 shape=(1, 9000, 1)
logits [[ 1.2245696  -0.62630945  1.241659   -2.8478682 ]]
Iteration 200 of 1000: loss=12 " + "l1=3.11" + "l2=8.91 f=-0.256 shape=(1, 9000, 1)
logits [[ 0.43568543  0.07778728  0.6441366  -2.1825776 ]]
Iteration 300 of 1000: loss=8.84 " + "l1=0.0767" + "l2=8.76 f=-0.309 shape=(1, 9000, 1)
logits [[-0.13298945  0.3681029   0.38204497 -1.8527796 ]]
Iteration 400 of 1000: loss=7.76 " + "l1=0.0562" + "l2=7.7 f=-0.32 shape=(1, 9000, 1)
logits [[-0.22159243  0.34914836  0.35936588 -1.7676859 ]]
Iteration 500 of 1000: loss=7.2 " + "l1=0.186" + "l2=7.02 f=-0.321 shape=(1, 9000, 1)
logits [[-0.22770748  0.3332523   0.36698812 -1.7551267 ]]
Iteration 600 of 1000: loss=6.61 " + "l1=0.0396" + "l2=6.57 f=-0.307 shape=(1, 9000, 1)
logits [[-0.29977486  0.34111124  0.34831274 -1.6193628 ]]
Iteration 700 of 1000: loss=6.17 " + "l1=0" + "l2=6.17 f=-0.291 shape=(1, 9000, 1)
logits [[-0.38611466  0.34992164  0.34560156 -1.4748522 ]]
Iteration 800 of 1000: loss=5.84 " + "l1=0" + "l2=5.84 f=-0.275 shape=(1, 9000, 1)
logits [[-0.37297368  0.34839046  0.34789208 -1.423356  ]]
Iteration 900 of 1000: loss=5.66 " + "l1=0.089" + "l2=5.57 f=-0.27 shape=(1, 9000, 1)
logits [[-0.36890048  0.32882437  0.34499922 -1.3851714 ]]
--- 282.0479345321655 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0199 " + "l1=0.0199" + "l2=0 f=-0.665 shape=(1, 9000, 1)
logits [[ 5.2802005 -3.2213893  3.2938666 -8.011317 ]]
Iteration 100 of 1000: loss=0.0197 " + "l1=0.0196" + "l2=0.000151 f=-0.664 shape=(1, 9000, 1)
logits [[ 5.2531238 -3.22149    3.2963877 -7.98278  ]]
Iteration 200 of 1000: loss=0.0197 " + "l1=0.0196" + "l2=0.000119 f=-0.664 shape=(1, 9000, 1)
logits [[ 5.2522554 -3.2216349  3.296925  -7.9819536]]
Iteration 300 of 1000: loss=0.0197 " + "l1=0.0195" + "l2=0.00014 f=-0.663 shape=(1, 9000, 1)
logits [[ 5.2485538 -3.2217174  3.2974737 -7.978297 ]]
Iteration 400 of 1000: loss=0.0196 " + "l1=0.0195" + "l2=0.000179 f=-0.663 shape=(1, 9000, 1)
logits [[ 5.2443056 -3.221717   3.2979684 -7.974088 ]]
Iteration 500 of 1000: loss=0.0197 " + "l1=0.0194" + "l2=0.000266 f=-0.663 shape=(1, 9000, 1)
logits [[ 5.239864 -3.221686  3.298478 -7.969773]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.199 " + "l1=0.199" + "l2=0 f=-0.665 shape=(1, 9000, 1)
logits [[ 5.2802005 -3.2213893  3.2938666 -8.011317 ]]
Iteration 100 of 1000: loss=0.185 " + "l1=0.178" + "l2=0.00775 f=-0.656 shape=(1, 9000, 1)
logits [[ 5.083215  -3.2153172  3.3078866 -7.798768 ]]
Iteration 200 of 1000: loss=0.179 " + "l1=0.169" + "l2=0.01 f=-0.656 shape=(1, 9000, 1)
logits [[ 5.013163  -3.2262924  3.3187916 -7.7284293]]
Iteration 300 of 1000: loss=0.173 " + "l1=0.161" + "l2=0.0124 f=-0.657 shape=(1, 9000, 1)
logits [[ 4.941446  -3.238415   3.3318405 -7.662685 ]]
Iteration 400 of 1000: loss=0.167 " + "l1=0.15" + "l2=0.0166 f=-0.657 shape=(1, 9000, 1)
logits [[ 4.8506603 -3.253506   3.3472989 -7.57261  ]]
Iteration 500 of 1000: loss=0.161 " + "l1=0.142" + "l2=0.0196 f=-0.657 shape=(1, 9000, 1)
logits [[ 4.77775   -3.262256   3.359327  -7.5047393]]
Iteration 600 of 1000: loss=0.157 " + "l1=0.135" + "l2=0.0215 f=-0.657 shape=(1, 9000, 1)
logits [[ 4.7211885 -3.263068   3.3665147 -7.4525747]]
Iteration 700 of 1000: loss=0.152 " + "l1=0.129" + "l2=0.0234 f=-0.656 shape=(1, 9000, 1)
logits [[ 4.6539392 -3.2526083  3.366305  -7.3908205]]
Iteration 800 of 1000: loss=0.148 " + "l1=0.123" + "l2=0.0246 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.597099  -3.244166   3.3647635 -7.339148 ]]
Iteration 900 of 1000: loss=0.144 " + "l1=0.118" + "l2=0.0258 f=-0.655 shape=(1, 9000, 1)
logits [[ 4.542425  -3.2362719  3.3632784 -7.287928 ]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=1.99 " + "l1=1.99" + "l2=0 f=-0.665 shape=(1, 9000, 1)
logits [[ 5.2802005 -3.2213893  3.2938666 -8.011317 ]]
Iteration 100 of 1000: loss=0.702 " + "l1=0.108" + "l2=0.594 f=-0.579 shape=(1, 9000, 1)
logits [[ 3.5583866 -3.292466   3.4503267 -6.0333977]]
Iteration 200 of 1000: loss=0.441 " + "l1=0.0165" + "l2=0.424 f=-0.562 shape=(1, 9000, 1)
logits [[ 3.5069964 -3.3512802  3.4904556 -5.8945193]]
Iteration 300 of 1000: loss=0.364 " + "l1=0.0142" + "l2=0.349 f=-0.559 shape=(1, 9000, 1)
logits [[ 3.5024726 -3.356498   3.4882238 -5.8695865]]
Iteration 400 of 1000: loss=0.313 " + "l1=0" + "l2=0.313 f=-0.557 shape=(1, 9000, 1)
logits [[ 3.4805357 -3.3540087  3.4860783 -5.8401775]]
Iteration 500 of 1000: loss=0.288 " + "l1=0" + "l2=0.288 f=-0.556 shape=(1, 9000, 1)
logits [[ 3.4594808 -3.3479657  3.4787984 -5.8126917]]
Iteration 600 of 1000: loss=0.261 " + "l1=0.00589" + "l2=0.255 f=-0.556 shape=(1, 9000, 1)
logits [[ 3.4655802 -3.3275893  3.4596932 -5.820519 ]]
Iteration 700 of 1000: loss=0.242 " + "l1=0.00475" + "l2=0.237 f=-0.557 shape=(1, 9000, 1)
logits [[ 3.4564173 -3.3198268  3.4516704 -5.8161774]]
Iteration 800 of 1000: loss=0.226 " + "l1=0" + "l2=0.226 f=-0.559 shape=(1, 9000, 1)
logits [[ 3.4413784 -3.318966   3.4470646 -5.8071046]]
Iteration 900 of 1000: loss=0.214 " + "l1=0" + "l2=0.214 f=-0.56 shape=(1, 9000, 1)
logits [[ 3.4307926 -3.317216   3.4423943 -5.7965918]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.09 " + "l1=1.09" + "l2=0 f=-0.665 shape=(1, 9000, 1)
logits [[ 5.2802005 -3.2213893  3.2938666 -8.011317 ]]
Iteration 100 of 1000: loss=0.653 " + "l1=0.442" + "l2=0.211 f=-0.62 shape=(1, 9000, 1)
logits [[ 4.1936483 -3.243298   3.3906405 -6.819359 ]]
Iteration 200 of 1000: loss=0.486 " + "l1=0.22" + "l2=0.266 f=-0.604 shape=(1, 9000, 1)
logits [[ 3.8475535 -3.3016746  3.4472506 -6.410459 ]]
Iteration 300 of 1000: loss=0.393 " + "l1=0.0917" + "l2=0.301 f=-0.588 shape=(1, 9000, 1)
logits [[ 3.6064737 -3.3076568  3.4397678 -6.092438 ]]
Iteration 400 of 1000: loss=0.307 " + "l1=0.00741" + "l2=0.3 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.467312  -3.335788   3.4538352 -5.8871646]]
Iteration 500 of 1000: loss=0.263 " + "l1=0" + "l2=0.263 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.4552014 -3.347037   3.460532  -5.868173 ]]
Iteration 600 of 1000: loss=0.232 " + "l1=0.00321" + "l2=0.229 f=-0.576 shape=(1, 9000, 1)
logits [[ 3.4789755 -3.3556104  3.4731367 -5.902227 ]]
Iteration 700 of 1000: loss=0.21 " + "l1=0" + "l2=0.21 f=-0.575 shape=(1, 9000, 1)
logits [[ 3.4746718 -3.3621058  3.4839902 -5.8971786]]
Iteration 800 of 1000: loss=0.187 " + "l1=0.00277" + "l2=0.184 f=-0.574 shape=(1, 9000, 1)
logits [[ 3.4952745 -3.3583577  3.4902446 -5.922342 ]]
Iteration 900 of 1000: loss=0.167 " + "l1=0.00378" + "l2=0.164 f=-0.572 shape=(1, 9000, 1)
logits [[ 3.5005894 -3.349698   3.4937198 -5.9334984]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.646 " + "l1=0.646" + "l2=0 f=-0.665 shape=(1, 9000, 1)
logits [[ 5.2802005 -3.2213893  3.2938666 -8.011317 ]]
Iteration 100 of 1000: loss=0.488 " + "l1=0.404" + "l2=0.0839 f=-0.642 shape=(1, 9000, 1)
logits [[ 4.614925  -3.2695124  3.3724146 -7.286026 ]]
Iteration 200 of 1000: loss=0.414 " + "l1=0.301" + "l2=0.113 f=-0.631 shape=(1, 9000, 1)
logits [[ 4.338153  -3.2772017  3.4111054 -6.9979296]]
Iteration 300 of 1000: loss=0.361 " + "l1=0.234" + "l2=0.127 f=-0.626 shape=(1, 9000, 1)
logits [[ 4.1534796 -3.2908952  3.4346013 -6.8000245]]
Iteration 400 of 1000: loss=0.325 " + "l1=0.192" + "l2=0.133 f=-0.619 shape=(1, 9000, 1)
logits [[ 4.0157285 -3.277471   3.4256718 -6.6417365]]
Iteration 500 of 1000: loss=0.298 " + "l1=0.162" + "l2=0.137 f=-0.616 shape=(1, 9000, 1)
logits [[ 3.9187722 -3.2784472  3.4216034 -6.5256047]]
Iteration 600 of 1000: loss=0.273 " + "l1=0.127" + "l2=0.145 f=-0.607 shape=(1, 9000, 1)
logits [[ 3.8165014 -3.2805965  3.4246325 -6.387951 ]]
Iteration 700 of 1000: loss=0.25 " + "l1=0.0934" + "l2=0.157 f=-0.599 shape=(1, 9000, 1)
logits [[ 3.7202988 -3.2918148  3.4328325 -6.256804 ]]
Iteration 800 of 1000: loss=0.226 " + "l1=0.0609" + "l2=0.165 f=-0.594 shape=(1, 9000, 1)
logits [[ 3.6487331 -3.3290627  3.461334  -6.158875 ]]
Iteration 900 of 1000: loss=0.201 " + "l1=0.025" + "l2=0.176 f=-0.586 shape=(1, 9000, 1)
logits [[ 3.564039  -3.3591113  3.4870858 -6.037594 ]]
--- 269.3520014286041 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.133 " + "l1=0.133" + "l2=0 f=-0.665 shape=(1, 9000, 1)
logits [[ 5.2802005 -3.2213893  3.2938666 -8.011317 ]]
Iteration 100 of 1000: loss=0.132 " + "l1=0.131" + "l2=0.000646 f=-0.658 shape=(1, 9000, 1)
logits [[ 5.2186666 -3.2082984  3.277179  -7.92152  ]]
Iteration 200 of 1000: loss=0.132 " + "l1=0.131" + "l2=0.000658 f=-0.658 shape=(1, 9000, 1)
logits [[ 5.209102  -3.2062304  3.275085  -7.908161 ]]
Iteration 300 of 1000: loss=0.132 " + "l1=0.131" + "l2=0.000764 f=-0.656 shape=(1, 9000, 1)
logits [[ 5.196713  -3.2037275  3.272275  -7.8907557]]
Iteration 400 of 1000: loss=0.131 " + "l1=0.131" + "l2=0.000875 f=-0.655 shape=(1, 9000, 1)
logits [[ 5.184049  -3.2013702  3.2695386 -7.8734975]]
Iteration 500 of 1000: loss=0.131 " + "l1=0.13" + "l2=0.00103 f=-0.654 shape=(1, 9000, 1)
logits [[ 5.1711426 -3.199025   3.2667694 -7.8560915]]
Iteration 600 of 1000: loss=0.131 " + "l1=0.13" + "l2=0.00115 f=-0.653 shape=(1, 9000, 1)
logits [[ 5.158414  -3.1965673  3.2641146 -7.839166 ]]
Iteration 700 of 1000: loss=0.131 " + "l1=0.13" + "l2=0.00133 f=-0.652 shape=(1, 9000, 1)
logits [[ 5.1450896 -3.1937537  3.2614064 -7.8218794]]
Iteration 800 of 1000: loss=0.131 " + "l1=0.129" + "l2=0.00147 f=-0.651 shape=(1, 9000, 1)
logits [[ 5.1314774 -3.1907587  3.2585986 -7.8047614]]
Iteration 900 of 1000: loss=0.131 " + "l1=0.129" + "l2=0.0018 f=-0.65 shape=(1, 9000, 1)
logits [[ 5.117891  -3.1876945  3.255906  -7.787763 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=1.33 " + "l1=1.33" + "l2=0 f=-0.665 shape=(1, 9000, 1)
logits [[ 5.2802005 -3.2213893  3.2938666 -8.011317 ]]
Iteration 100 of 1000: loss=1.24 " + "l1=1.18" + "l2=0.0586 f=-0.604 shape=(1, 9000, 1)
logits [[ 4.678691  -3.093637   3.1355875 -7.13599  ]]
Iteration 200 of 1000: loss=1.2 " + "l1=1.12" + "l2=0.0765 f=-0.582 shape=(1, 9000, 1)
logits [[ 4.4506545 -3.0878136  3.0935853 -6.7851167]]
Iteration 300 of 1000: loss=1.16 " + "l1=1.07" + "l2=0.0915 f=-0.564 shape=(1, 9000, 1)
logits [[ 4.2367506 -3.0606725  3.0474882 -6.4794216]]
Iteration 400 of 1000: loss=1.13 " + "l1=1.03" + "l2=0.101 f=-0.55 shape=(1, 9000, 1)
logits [[ 4.0543485 -3.0289621  3.0008655 -6.2261558]]
Iteration 500 of 1000: loss=1.1 " + "l1=0.997" + "l2=0.107 f=-0.538 shape=(1, 9000, 1)
logits [[ 3.9267929 -2.998585   2.9627297 -6.0433326]]
Iteration 600 of 1000: loss=1.08 " + "l1=0.967" + "l2=0.116 f=-0.525 shape=(1, 9000, 1)
logits [[ 3.8050036 -2.964985   2.9219398 -5.86156  ]]
Iteration 700 of 1000: loss=1.06 " + "l1=0.938" + "l2=0.123 f=-0.51 shape=(1, 9000, 1)
logits [[ 3.6916447 -2.935451   2.886039  -5.6835785]]
Iteration 800 of 1000: loss=1.04 " + "l1=0.908" + "l2=0.132 f=-0.494 shape=(1, 9000, 1)
logits [[ 3.5797987 -2.903048   2.8496013 -5.5028253]]
Iteration 900 of 1000: loss=1.02 " + "l1=0.883" + "l2=0.139 f=-0.479 shape=(1, 9000, 1)
logits [[ 3.480855  -2.871504   2.8185322 -5.3455367]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=13.3 " + "l1=13.3" + "l2=0 f=-0.665 shape=(1, 9000, 1)
logits [[ 5.2802005 -3.2213893  3.2938666 -8.011317 ]]
Iteration 100 of 1000: loss=7.26 " + "l1=5.23" + "l2=2.04 f=-0.306 shape=(1, 9000, 1)
logits [[ 2.041915  -2.602868   2.2808743 -2.9443376]]
Iteration 200 of 1000: loss=5.91 " + "l1=3.46" + "l2=2.44 f=-0.21 shape=(1, 9000, 1)
logits [[ 1.2344186 -2.4099185  1.9001436 -1.5639957]]
Iteration 300 of 1000: loss=4.79 " + "l1=2.07" + "l2=2.72 f=-0.138 shape=(1, 9000, 1)
logits [[ 0.746246   -2.1486356   1.460688   -0.61226195]]
Iteration 400 of 1000: loss=3.83 " + "l1=0.96" + "l2=2.87 f=-0.0941 shape=(1, 9000, 1)
logits [[ 0.29997677 -1.926927    1.1051631   0.14527434]]
Iteration 500 of 1000: loss=2.97 " + "l1=0.092" + "l2=2.88 f=-0.084 shape=(1, 9000, 1)
logits [[-0.12199625 -1.7672994   0.82253194  0.7305801 ]]
Iteration 600 of 1000: loss=2.37 " + "l1=0" + "l2=2.37 f=-0.11 shape=(1, 9000, 1)
logits [[-0.27206174 -1.6937581   0.75548816  0.7696046 ]]
Iteration 700 of 1000: loss=2.05 " + "l1=0.00872" + "l2=2.04 f=-0.13 shape=(1, 9000, 1)
logits [[-0.29449734 -1.6851141   0.73377883  0.72506183]]
Iteration 800 of 1000: loss=1.87 " + "l1=0.0019" + "l2=1.87 f=-0.135 shape=(1, 9000, 1)
logits [[-0.3193837  -1.6722165   0.72676414  0.7248635 ]]
Iteration 900 of 1000: loss=1.74 " + "l1=0.00491" + "l2=1.73 f=-0.137 shape=(1, 9000, 1)
logits [[-0.32816553 -1.677702    0.73062223  0.7257099 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=7.31 " + "l1=7.31" + "l2=0 f=-0.665 shape=(1, 9000, 1)
logits [[ 5.2802005 -3.2213893  3.2938666 -8.011317 ]]
Iteration 100 of 1000: loss=4.78 " + "l1=3.65" + "l2=1.14 f=-0.387 shape=(1, 9000, 1)
logits [[ 2.6200926 -2.7695305  2.6141322 -4.0112457]]
Iteration 200 of 1000: loss=4.24 " + "l1=3.14" + "l2=1.11 f=-0.318 shape=(1, 9000, 1)
logits [[ 2.320141  -2.7040722  2.4064064 -3.294427 ]]
Iteration 300 of 1000: loss=3.84 " + "l1=2.6" + "l2=1.24 f=-0.258 shape=(1, 9000, 1)
logits [[ 1.8389295 -2.5870357  2.2214582 -2.5051112]]
Iteration 400 of 1000: loss=3.44 " + "l1=2.08" + "l2=1.36 f=-0.211 shape=(1, 9000, 1)
logits [[ 1.4440945 -2.4699857  1.9803035 -1.8002892]]
Iteration 500 of 1000: loss=3.03 " + "l1=1.56" + "l2=1.47 f=-0.163 shape=(1, 9000, 1)
logits [[ 1.1043805 -2.2844326  1.6844156 -1.1562072]]
Iteration 600 of 1000: loss=2.68 " + "l1=1.22" + "l2=1.46 f=-0.151 shape=(1, 9000, 1)
logits [[ 0.82016647 -2.2044191   1.4973924  -0.7163038 ]]
Iteration 700 of 1000: loss=2.37 " + "l1=0.852" + "l2=1.52 f=-0.131 shape=(1, 9000, 1)
logits [[ 0.5165222  -2.0929554   1.3010019  -0.24760342]]
Iteration 800 of 1000: loss=2.03 " + "l1=0.456" + "l2=1.57 f=-0.134 shape=(1, 9000, 1)
logits [[ 0.14375573 -1.9473968   1.0485433   0.22030991]]
Iteration 900 of 1000: loss=1.7 " + "l1=0.127" + "l2=1.57 f=-0.151 shape=(1, 9000, 1)
logits [[-0.20142516 -1.8568887   0.8424831   0.6115674 ]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=4.32 " + "l1=4.32" + "l2=0 f=-0.665 shape=(1, 9000, 1)
logits [[ 5.2802005 -3.2213893  3.2938666 -8.011317 ]]
Iteration 100 of 1000: loss=3.37 " + "l1=2.82" + "l2=0.552 f=-0.47 shape=(1, 9000, 1)
logits [[ 3.4398482 -2.9245467  2.8399792 -5.2366867]]
Iteration 200 of 1000: loss=2.96 " + "l1=2.24" + "l2=0.724 f=-0.394 shape=(1, 9000, 1)
logits [[ 2.7187917 -2.858172   2.7208269 -4.1581397]]
Iteration 300 of 1000: loss=2.75 " + "l1=2.1" + "l2=0.653 f=-0.358 shape=(1, 9000, 1)
logits [[ 2.611032  -2.8045304  2.6079962 -3.8460584]]
Iteration 400 of 1000: loss=2.63 " + "l1=1.99" + "l2=0.637 f=-0.334 shape=(1, 9000, 1)
logits [[ 2.5000215 -2.7273138  2.5075445 -3.6147692]]
Iteration 500 of 1000: loss=2.52 " + "l1=1.88" + "l2=0.647 f=-0.315 shape=(1, 9000, 1)
logits [[ 2.367775  -2.6443875  2.3935275 -3.3765838]]
Iteration 600 of 1000: loss=2.41 " + "l1=1.75" + "l2=0.665 f=-0.292 shape=(1, 9000, 1)
logits [[ 2.243175  -2.5285664  2.2443984 -3.1263819]]
Iteration 700 of 1000: loss=2.3 " + "l1=1.57" + "l2=0.723 f=-0.256 shape=(1, 9000, 1)
logits [[ 2.0423243 -2.4084191  2.0896854 -2.7495816]]
Iteration 800 of 1000: loss=2.18 " + "l1=1.4" + "l2=0.78 f=-0.223 shape=(1, 9000, 1)
logits [[ 1.8371872 -2.3197582  1.9541767 -2.3645468]]
Iteration 900 of 1000: loss=2.05 " + "l1=1.21" + "l2=0.844 f=-0.196 shape=(1, 9000, 1)
logits [[ 1.5975467 -2.255161   1.7938076 -1.9198343]]
--- 292.13335609436035 seconds ---
Adv result:3
Loading record A05511
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0357 " + "l1=0.0357" + "l2=0 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.6253335 -1.9476781  1.6052452 -2.5294735]]
Iteration 100 of 1000: loss=0.0355 " + "l1=0.0353" + "l2=0.000198 f=-0.311 shape=(1, 9000, 1)
logits [[ 1.5965717 -1.9330789  1.596538  -2.504914 ]]
Iteration 200 of 1000: loss=0.0354 " + "l1=0.0353" + "l2=0.00017 f=-0.311 shape=(1, 9000, 1)
logits [[ 1.5957344 -1.9313616  1.5956503 -2.504311 ]]
Iteration 300 of 1000: loss=0.0354 " + "l1=0.0352" + "l2=0.000185 f=-0.311 shape=(1, 9000, 1)
logits [[ 1.5944742 -1.9291395  1.5944335 -2.5033965]]
Iteration 400 of 1000: loss=0.0354 " + "l1=0.0352" + "l2=0.000236 f=-0.311 shape=(1, 9000, 1)
logits [[ 1.5933661 -1.9270575  1.5932459 -2.5025182]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.357 " + "l1=0.357" + "l2=0 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.6253335 -1.9476781  1.6052452 -2.5294735]]
Iteration 100 of 1000: loss=0.345 " + "l1=0.339" + "l2=0.00567 f=-0.302 shape=(1, 9000, 1)
logits [[ 1.5359249 -1.8541776  1.5361648 -2.4243946]]
Iteration 200 of 1000: loss=0.341 " + "l1=0.332" + "l2=0.00831 f=-0.298 shape=(1, 9000, 1)
logits [[ 1.5038458 -1.8157263  1.5067908 -2.3881433]]
Iteration 300 of 1000: loss=0.337 " + "l1=0.326" + "l2=0.0109 f=-0.297 shape=(1, 9000, 1)
logits [[ 1.4760809 -1.7795513  1.4783498 -2.3617883]]
Iteration 400 of 1000: loss=0.333 " + "l1=0.32" + "l2=0.0131 f=-0.296 shape=(1, 9000, 1)
logits [[ 1.4519922 -1.7472321  1.4536077 -2.3411407]]
Iteration 500 of 1000: loss=0.329 " + "l1=0.314" + "l2=0.0158 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.4212462 -1.7117182  1.4233861 -2.3125384]]
Iteration 600 of 1000: loss=0.325 " + "l1=0.307" + "l2=0.0186 f=-0.293 shape=(1, 9000, 1)
logits [[ 1.3925258 -1.6734415  1.3912746 -2.28097  ]]
Iteration 700 of 1000: loss=0.321 " + "l1=0.3" + "l2=0.0209 f=-0.291 shape=(1, 9000, 1)
logits [[ 1.3655782 -1.6372879  1.364512  -2.2569833]]
Iteration 800 of 1000: loss=0.318 " + "l1=0.296" + "l2=0.0227 f=-0.289 shape=(1, 9000, 1)
logits [[ 1.3425289 -1.6104718  1.3454708 -2.2337587]]
Iteration 900 of 1000: loss=0.316 " + "l1=0.292" + "l2=0.0244 f=-0.286 shape=(1, 9000, 1)
logits [[ 1.3277364 -1.5879189  1.3286314 -2.2115664]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.57 " + "l1=3.57" + "l2=0 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.6253335 -1.9476781  1.6052452 -2.5294735]]
Iteration 100 of 1000: loss=2.52 " + "l1=1.99" + "l2=0.529 f=-0.24 shape=(1, 9000, 1)
logits [[ 0.86741173 -1.0755345   0.9147539  -1.6655344 ]]
Iteration 200 of 1000: loss=1.83 " + "l1=1.08" + "l2=0.744 f=-0.26 shape=(1, 9000, 1)
logits [[ 0.45622882 -0.6026409   0.47852638 -1.3719085 ]]
Iteration 300 of 1000: loss=1.42 " + "l1=0.569" + "l2=0.852 f=-0.3 shape=(1, 9000, 1)
logits [[ 0.0712347  -0.2853557   0.28321558 -1.270645  ]]
Iteration 400 of 1000: loss=1.2 " + "l1=0.303" + "l2=0.9 f=-0.341 shape=(1, 9000, 1)
logits [[-0.26687604 -0.07940678  0.2232305  -1.2402464 ]]
Iteration 500 of 1000: loss=1.07 " + "l1=0.142" + "l2=0.924 f=-0.348 shape=(1, 9000, 1)
logits [[-0.40178064  0.01190522  0.15392655 -1.1574188 ]]
Iteration 600 of 1000: loss=0.955 " + "l1=0.029" + "l2=0.926 f=-0.348 shape=(1, 9000, 1)
logits [[-0.47800323  0.06948467  0.0984872  -1.0806104 ]]
Iteration 700 of 1000: loss=0.863 " + "l1=0.00959" + "l2=0.853 f=-0.341 shape=(1, 9000, 1)
logits [[-0.49517596  0.06865317  0.07824565 -1.0176296 ]]
Iteration 800 of 1000: loss=0.803 " + "l1=0.0214" + "l2=0.782 f=-0.331 shape=(1, 9000, 1)
logits [[-0.4745213   0.04536849  0.06674041 -0.96176976]]
Iteration 900 of 1000: loss=0.757 " + "l1=0" + "l2=0.757 f=-0.324 shape=(1, 9000, 1)
logits [[-0.4719254   0.04748489  0.03971933 -0.9111981 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.97 " + "l1=1.97" + "l2=0 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.6253335 -1.9476781  1.6052452 -2.5294735]]
Iteration 100 of 1000: loss=1.64 " + "l1=1.48" + "l2=0.158 f=-0.26 shape=(1, 9000, 1)
logits [[ 1.2119241 -1.4622282  1.228868  -2.019806 ]]
Iteration 200 of 1000: loss=1.43 " + "l1=1.18" + "l2=0.252 f=-0.26 shape=(1, 9000, 1)
logits [[ 0.96665865 -1.1738935   0.9750632  -1.809269  ]]
Iteration 300 of 1000: loss=1.23 " + "l1=0.89" + "l2=0.338 f=-0.26 shape=(1, 9000, 1)
logits [[ 0.7291845  -0.8607934   0.75664616 -1.6651034 ]]
Iteration 400 of 1000: loss=1.11 " + "l1=0.727" + "l2=0.382 f=-0.264 shape=(1, 9000, 1)
logits [[ 0.6072316  -0.7092543   0.61329776 -1.5689576 ]]
Iteration 500 of 1000: loss=1.02 " + "l1=0.596" + "l2=0.422 f=-0.271 shape=(1, 9000, 1)
logits [[ 0.4748653 -0.586094   0.4966935 -1.4703004]]
Iteration 600 of 1000: loss=0.932 " + "l1=0.456" + "l2=0.476 f=-0.289 shape=(1, 9000, 1)
logits [[ 0.32840714 -0.45501465  0.37438527 -1.4026077 ]]
Iteration 700 of 1000: loss=0.874 " + "l1=0.398" + "l2=0.476 f=-0.288 shape=(1, 9000, 1)
logits [[ 0.28702703 -0.4033527   0.31972155 -1.3563148 ]]
Iteration 800 of 1000: loss=0.827 " + "l1=0.343" + "l2=0.484 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.23253748 -0.3550555   0.26838896 -1.2933538 ]]
Iteration 900 of 1000: loss=0.787 " + "l1=0.291" + "l2=0.496 f=-0.283 shape=(1, 9000, 1)
logits [[ 0.1719257  -0.30935097  0.21999662 -1.2164545 ]]
const [0.775]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=2.77 " + "l1=2.77" + "l2=0 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.6253335 -1.9476781  1.6052452 -2.5294735]]
Iteration 100 of 1000: loss=2.13 " + "l1=1.82" + "l2=0.312 f=-0.249 shape=(1, 9000, 1)
logits [[ 1.0384529 -1.270454   1.0792437 -1.843362 ]]
Iteration 200 of 1000: loss=1.68 " + "l1=1.17" + "l2=0.506 f=-0.25 shape=(1, 9000, 1)
logits [[ 0.6903133 -0.8178378  0.6931081 -1.5659196]]
Iteration 300 of 1000: loss=1.4 " + "l1=0.83" + "l2=0.57 f=-0.277 shape=(1, 9000, 1)
logits [[ 0.41304693 -0.5843262   0.48641238 -1.4234588 ]]
Iteration 400 of 1000: loss=1.19 " + "l1=0.531" + "l2=0.662 f=-0.298 shape=(1, 9000, 1)
logits [[ 0.16243188 -0.3540608   0.33065107 -1.3311453 ]]
Iteration 500 of 1000: loss=1.06 " + "l1=0.371" + "l2=0.693 f=-0.317 shape=(1, 9000, 1)
logits [[-0.00923476 -0.22482452  0.2542872  -1.2899711 ]]
Iteration 600 of 1000: loss=0.975 " + "l1=0.278" + "l2=0.696 f=-0.315 shape=(1, 9000, 1)
logits [[-0.11569434 -0.15798636  0.2011389  -1.1883416 ]]
Iteration 700 of 1000: loss=0.901 " + "l1=0.19" + "l2=0.711 f=-0.314 shape=(1, 9000, 1)
logits [[-0.1998708  -0.10213224  0.14314096 -1.0952895 ]]
Iteration 800 of 1000: loss=0.827 " + "l1=0.103" + "l2=0.724 f=-0.31 shape=(1, 9000, 1)
logits [[-0.27442324 -0.06715081  0.06632291 -0.96672684]]
Iteration 900 of 1000: loss=0.764 " + "l1=0.0422" + "l2=0.722 f=-0.31 shape=(1, 9000, 1)
logits [[-0.3328368  -0.02906998  0.02542574 -0.9037617 ]]
--- 262.93833446502686 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.000201 " + "l1=0.000201" + "l2=0 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.6253335 -1.9476781  1.6052452 -2.5294735]]
Iteration 100 of 1000: loss=9.8e-05 " + "l1=3.21e-07" + "l2=9.77e-05 f=-0.313 shape=(1, 9000, 1)
logits [[ 1.6063337 -1.9459656  1.6063017 -2.517064 ]]
Iteration 200 of 1000: loss=6.9e-05 " + "l1=5.56e-07" + "l2=6.85e-05 f=-0.313 shape=(1, 9000, 1)
logits [[ 1.6067224 -1.9460541  1.6066668 -2.517833 ]]
Iteration 300 of 1000: loss=6.93e-05 " + "l1=1.18e-06" + "l2=6.81e-05 f=-0.313 shape=(1, 9000, 1)
logits [[ 1.6071364 -1.9460535  1.6070186 -2.5185435]]
const [0.005]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0001 " + "l1=0.0001" + "l2=0 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.6253335 -1.9476781  1.6052452 -2.5294735]]
Iteration 100 of 1000: loss=8.73e-05 " + "l1=2.35e-05" + "l2=6.38e-05 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.6107227 -1.9463569  1.6060184 -2.5197167]]
Iteration 200 of 1000: loss=6.79e-05 " + "l1=2.88e-05" + "l2=3.91e-05 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.6120371 -1.9464988  1.6062866 -2.5210402]]
Iteration 300 of 1000: loss=8.14e-05 " + "l1=2.53e-05" + "l2=5.61e-05 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.6116538 -1.9464282  1.6065905 -2.5212119]]
const [0.0025]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=5.02e-05 " + "l1=5.02e-05" + "l2=0 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.6253335 -1.9476781  1.6052452 -2.5294735]]
Iteration 100 of 1000: loss=6.65e-05 " + "l1=1.92e-05" + "l2=4.73e-05 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.6135485 -1.9466236  1.605867  -2.5214007]]
const [0.00125]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.51e-05 " + "l1=2.51e-05" + "l2=0 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.6253335 -1.9476781  1.6052452 -2.5294735]]
Iteration 100 of 1000: loss=5.04e-05 " + "l1=1.21e-05" + "l2=3.82e-05 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.6155041 -1.9468786  1.6057857 -2.5226674]]
const [0.000625]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.26e-05 " + "l1=1.26e-05" + "l2=0 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.6253335 -1.9476781  1.6052452 -2.5294735]]
Iteration 100 of 1000: loss=3.52e-05 " + "l1=7.01e-06" + "l2=2.82e-05 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.6168939 -1.9470097  1.6056728 -2.523567 ]]
--- 65.73409819602966 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0415 " + "l1=0.0415" + "l2=0 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.6253335 -1.9476781  1.6052452 -2.5294735]]
Iteration 100 of 1000: loss=0.0411 " + "l1=0.0408" + "l2=0.000285 f=-0.31 shape=(1, 9000, 1)
logits [[ 1.5931482 -1.9380562  1.5932367 -2.4884298]]
Iteration 200 of 1000: loss=0.041 " + "l1=0.0408" + "l2=0.000268 f=-0.31 shape=(1, 9000, 1)
logits [[ 1.5915145 -1.9367237  1.5915825 -2.4856887]]
Iteration 300 of 1000: loss=0.041 " + "l1=0.0407" + "l2=0.000307 f=-0.309 shape=(1, 9000, 1)
logits [[ 1.5896956 -1.935303   1.5897951 -2.4820228]]
Iteration 400 of 1000: loss=0.041 " + "l1=0.0407" + "l2=0.000341 f=-0.309 shape=(1, 9000, 1)
logits [[ 1.588252  -1.9340277  1.5881956 -2.4786847]]
Iteration 500 of 1000: loss=0.041 " + "l1=0.0406" + "l2=0.000406 f=-0.309 shape=(1, 9000, 1)
logits [[ 1.5864724 -1.9327877  1.586706  -2.475194 ]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.415 " + "l1=0.415" + "l2=0 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.6253335 -1.9476781  1.6052452 -2.5294735]]
Iteration 100 of 1000: loss=0.389 " + "l1=0.375" + "l2=0.0141 f=-0.295 shape=(1, 9000, 1)
logits [[ 1.440449  -1.8800879  1.5039872 -2.2456012]]
Iteration 200 of 1000: loss=0.381 " + "l1=0.36" + "l2=0.0214 f=-0.289 shape=(1, 9000, 1)
logits [[ 1.3729669 -1.8501866  1.4602369 -2.1373067]]
Iteration 300 of 1000: loss=0.375 " + "l1=0.35" + "l2=0.0258 f=-0.282 shape=(1, 9000, 1)
logits [[ 1.3349696 -1.8290707  1.4302167 -2.0657136]]
Iteration 400 of 1000: loss=0.37 " + "l1=0.342" + "l2=0.0286 f=-0.277 shape=(1, 9000, 1)
logits [[ 1.3067839 -1.813513   1.4077885 -2.0094974]]
Iteration 500 of 1000: loss=0.366 " + "l1=0.335" + "l2=0.0303 f=-0.273 shape=(1, 9000, 1)
logits [[ 1.2862298 -1.8011141  1.3889834 -1.9643103]]
Iteration 600 of 1000: loss=0.361 " + "l1=0.328" + "l2=0.0327 f=-0.267 shape=(1, 9000, 1)
logits [[ 1.2657658 -1.7882271  1.3676167 -1.9136292]]
Iteration 700 of 1000: loss=0.356 " + "l1=0.321" + "l2=0.035 f=-0.262 shape=(1, 9000, 1)
logits [[ 1.2467141 -1.7754796  1.3461058 -1.8654268]]
Iteration 800 of 1000: loss=0.351 " + "l1=0.313" + "l2=0.038 f=-0.257 shape=(1, 9000, 1)
logits [[ 1.2239958 -1.7616587  1.3214196 -1.8112259]]
Iteration 900 of 1000: loss=0.347 " + "l1=0.306" + "l2=0.0408 f=-0.253 shape=(1, 9000, 1)
logits [[ 1.1990163 -1.7475976  1.2981049 -1.7598398]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=4.15 " + "l1=4.15" + "l2=0 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.6253335 -1.9476781  1.6052452 -2.5294735]]
Iteration 100 of 1000: loss=1.79 " + "l1=0.546" + "l2=1.24 f=-0.153 shape=(1, 9000, 1)
logits [[ 0.3101861  -1.4873769   0.55668885  0.0104    ]]
Iteration 200 of 1000: loss=1.2 " + "l1=0.00761" + "l2=1.2 f=-0.14 shape=(1, 9000, 1)
logits [[ 0.17601997 -1.460819    0.36555284  0.35794455]]
Iteration 300 of 1000: loss=1.04 " + "l1=0" + "l2=1.04 f=-0.14 shape=(1, 9000, 1)
logits [[ 0.16170117 -1.4039925   0.33545518  0.34759888]]
Iteration 400 of 1000: loss=0.901 " + "l1=0.000555" + "l2=0.901 f=-0.14 shape=(1, 9000, 1)
logits [[ 0.15364832 -1.3521118   0.32046145  0.3199065 ]]
Iteration 500 of 1000: loss=0.806 " + "l1=0" + "l2=0.806 f=-0.137 shape=(1, 9000, 1)
logits [[ 0.16672328 -1.3367136   0.30871308  0.31361488]]
Iteration 600 of 1000: loss=0.732 " + "l1=0" + "l2=0.732 f=-0.133 shape=(1, 9000, 1)
logits [[ 0.18579975 -1.3218344   0.2933297   0.3093915 ]]
Iteration 700 of 1000: loss=0.667 " + "l1=0" + "l2=0.667 f=-0.128 shape=(1, 9000, 1)
logits [[ 0.21155015 -1.3137765   0.28933638  0.3025895 ]]
Iteration 800 of 1000: loss=0.614 " + "l1=0.0109" + "l2=0.603 f=-0.12 shape=(1, 9000, 1)
logits [[ 0.24157023 -1.3048029   0.2961993   0.28529885]]
Iteration 900 of 1000: loss=0.57 " + "l1=0" + "l2=0.57 f=-0.116 shape=(1, 9000, 1)
logits [[ 0.24824956 -1.2935529   0.27549416  0.3076452 ]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=2.29 " + "l1=2.29" + "l2=0 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.6253335 -1.9476781  1.6052452 -2.5294735]]
Iteration 100 of 1000: loss=1.51 " + "l1=1.06" + "l2=0.444 f=-0.206 shape=(1, 9000, 1)
logits [[ 0.7308758 -1.6501695  1.0143491 -0.9187056]]
Iteration 200 of 1000: loss=1.25 " + "l1=0.665" + "l2=0.586 f=-0.179 shape=(1, 9000, 1)
logits [[ 0.45274106 -1.5195444   0.77988607 -0.4298397 ]]
Iteration 300 of 1000: loss=1.05 " + "l1=0.338" + "l2=0.715 f=-0.158 shape=(1, 9000, 1)
logits [[ 0.2664777  -1.3839917   0.5503619  -0.06365406]]
Iteration 400 of 1000: loss=0.837 " + "l1=0.0429" + "l2=0.794 f=-0.131 shape=(1, 9000, 1)
logits [[ 0.19590613 -1.3176801   0.33725938  0.2592882 ]]
Iteration 500 of 1000: loss=0.698 " + "l1=0.0103" + "l2=0.688 f=-0.125 shape=(1, 9000, 1)
logits [[ 0.21628663 -1.301511    0.30255884  0.28381404]]
Iteration 600 of 1000: loss=0.612 " + "l1=0.00353" + "l2=0.608 f=-0.118 shape=(1, 9000, 1)
logits [[ 0.24496284 -1.2934982   0.29074     0.28432417]]
Iteration 700 of 1000: loss=0.545 " + "l1=0" + "l2=0.545 f=-0.11 shape=(1, 9000, 1)
logits [[ 0.27384576 -1.2868996   0.28598586  0.28691638]]
Iteration 800 of 1000: loss=0.495 " + "l1=0.00413" + "l2=0.491 f=-0.106 shape=(1, 9000, 1)
logits [[ 0.2723181  -1.2807037   0.29690254  0.28938928]]
Iteration 900 of 1000: loss=0.453 " + "l1=0" + "l2=0.453 f=-0.0968 shape=(1, 9000, 1)
logits [[ 0.29580203 -1.2782631   0.2968247   0.29831958]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.35 " + "l1=1.35" + "l2=0 f=-0.312 shape=(1, 9000, 1)
logits [[ 1.6253335 -1.9476781  1.6052452 -2.5294735]]
Iteration 100 of 1000: loss=1.08 " + "l1=0.923" + "l2=0.154 f=-0.252 shape=(1, 9000, 1)
logits [[ 1.0554602 -1.7504501  1.2637732 -1.5759642]]
Iteration 200 of 1000: loss=0.976 " + "l1=0.732" + "l2=0.244 f=-0.215 shape=(1, 9000, 1)
logits [[ 0.84054226 -1.658361    1.1048311  -1.147361  ]]
Iteration 300 of 1000: loss=0.897 " + "l1=0.616" + "l2=0.281 f=-0.2 shape=(1, 9000, 1)
logits [[ 0.70996565 -1.5892082   0.98713434 -0.9078322 ]]
Iteration 400 of 1000: loss=0.82 " + "l1=0.511" + "l2=0.309 f=-0.192 shape=(1, 9000, 1)
logits [[ 0.59902143 -1.532116    0.8687842  -0.7044832 ]]
Iteration 500 of 1000: loss=0.748 " + "l1=0.426" + "l2=0.321 f=-0.179 shape=(1, 9000, 1)
logits [[ 0.5250183 -1.4620101  0.7657981 -0.5460758]]
Iteration 600 of 1000: loss=0.687 " + "l1=0.357" + "l2=0.331 f=-0.17 shape=(1, 9000, 1)
logits [[ 0.47265354 -1.3964423   0.67096156 -0.42702603]]
Iteration 700 of 1000: loss=0.636 " + "l1=0.277" + "l2=0.359 f=-0.155 shape=(1, 9000, 1)
logits [[ 0.40917918 -1.3377161   0.58157873 -0.27120936]]
Iteration 800 of 1000: loss=0.578 " + "l1=0.177" + "l2=0.4 f=-0.126 shape=(1, 9000, 1)
logits [[ 0.37321588 -1.2751483   0.47135764 -0.0746929 ]]
Iteration 900 of 1000: loss=0.523 " + "l1=0.108" + "l2=0.415 f=-0.109 shape=(1, 9000, 1)
logits [[ 0.36961773 -1.2543459   0.39013588  0.05764669]]
--- 268.9973201751709 seconds ---
Adv result:3
Loading record A05524
(1, 9000)
Ground truth:0
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0359 " + "l1=0.0359" + "l2=0 f=-0.356 shape=(1, 9000, 1)
logits [[ 1.4545841 -2.1373703  1.1784554 -1.9216199]]
Iteration 100 of 1000: loss=0.0354 " + "l1=0.0351" + "l2=0.000331 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.4151518 -2.0944388  1.1470603 -1.877907 ]]
Iteration 200 of 1000: loss=0.0353 " + "l1=0.0349" + "l2=0.000336 f=-0.352 shape=(1, 9000, 1)
logits [[ 1.4091614 -2.0854058  1.1403406 -1.8703084]]
Iteration 300 of 1000: loss=0.0352 " + "l1=0.0348" + "l2=0.000426 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.4008559 -2.0750854  1.1328849 -1.8606278]]
Iteration 400 of 1000: loss=0.0351 " + "l1=0.0346" + "l2=0.000496 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.3926374 -2.0653555  1.1258721 -1.8513055]]
Iteration 500 of 1000: loss=0.035 " + "l1=0.0344" + "l2=0.00062 f=-0.349 shape=(1, 9000, 1)
logits [[ 1.3849988 -2.0564294  1.1196578 -1.8426672]]
Iteration 600 of 1000: loss=0.035 " + "l1=0.0343" + "l2=0.000742 f=-0.348 shape=(1, 9000, 1)
logits [[ 1.377988  -2.048551   1.1142579 -1.8348773]]
Iteration 700 of 1000: loss=0.035 " + "l1=0.0341" + "l2=0.000881 f=-0.347 shape=(1, 9000, 1)
logits [[ 1.370757  -2.0405648  1.108662  -1.8266909]]
Iteration 800 of 1000: loss=0.035 " + "l1=0.034" + "l2=0.00102 f=-0.346 shape=(1, 9000, 1)
logits [[ 1.3638151 -2.0330176  1.1034393 -1.8189409]]
Iteration 900 of 1000: loss=0.035 " + "l1=0.0338" + "l2=0.00112 f=-0.346 shape=(1, 9000, 1)
logits [[ 1.3574569 -2.0267076  1.098861  -1.8125696]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.359 " + "l1=0.359" + "l2=0 f=-0.356 shape=(1, 9000, 1)
logits [[ 1.4545841 -2.1373703  1.1784554 -1.9216199]]
Iteration 100 of 1000: loss=0.303 " + "l1=0.272" + "l2=0.0309 f=-0.321 shape=(1, 9000, 1)
logits [[ 1.0417008 -1.6818511  0.8713023 -1.5146052]]
Iteration 200 of 1000: loss=0.274 " + "l1=0.225" + "l2=0.049 f=-0.295 shape=(1, 9000, 1)
logits [[ 0.81896704 -1.4347259   0.7130583  -1.2776971 ]]
Iteration 300 of 1000: loss=0.255 " + "l1=0.198" + "l2=0.0576 f=-0.278 shape=(1, 9000, 1)
logits [[ 0.66933614 -1.3093706   0.6260498  -1.0977411 ]]
Iteration 400 of 1000: loss=0.241 " + "l1=0.181" + "l2=0.0602 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.5755111  -1.2305509   0.57301813 -0.986794  ]]
Iteration 500 of 1000: loss=0.23 " + "l1=0.171" + "l2=0.0592 f=-0.264 shape=(1, 9000, 1)
logits [[ 0.5343363 -1.1784999  0.5346842 -0.9478952]]
Iteration 600 of 1000: loss=0.221 " + "l1=0.164" + "l2=0.057 f=-0.261 shape=(1, 9000, 1)
logits [[ 0.5071628 -1.1352623  0.5055302 -0.9212091]]
Iteration 700 of 1000: loss=0.213 " + "l1=0.157" + "l2=0.0562 f=-0.258 shape=(1, 9000, 1)
logits [[ 0.47330678 -1.0942185   0.47293496 -0.8853646 ]]
Iteration 800 of 1000: loss=0.205 " + "l1=0.15" + "l2=0.0545 f=-0.252 shape=(1, 9000, 1)
logits [[ 0.44404957 -1.0598596   0.4429743  -0.83464986]]
Iteration 900 of 1000: loss=0.198 " + "l1=0.145" + "l2=0.0529 f=-0.246 shape=(1, 9000, 1)
logits [[ 0.41770026 -1.0303098   0.4209032  -0.79115885]]
const [1.]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=3.59 " + "l1=3.59" + "l2=0 f=-0.356 shape=(1, 9000, 1)
logits [[ 1.4545841 -2.1373703  1.1784554 -1.9216199]]
Iteration 100 of 1000: loss=1.08 " + "l1=0.425" + "l2=0.658 f=-0.268 shape=(1, 9000, 1)
logits [[-0.19262764 -0.34838107  0.07625403 -0.60640705]]
Iteration 200 of 1000: loss=0.707 " + "l1=0.0809" + "l2=0.626 f=-0.301 shape=(1, 9000, 1)
logits [[-0.57744926 -0.12753175 -0.04663925 -0.45296484]]
Iteration 300 of 1000: loss=0.534 " + "l1=0.0101" + "l2=0.524 f=-0.29 shape=(1, 9000, 1)
logits [[-0.634328   -0.10080027 -0.09072338 -0.33425707]]
Iteration 400 of 1000: loss=0.467 " + "l1=0" + "l2=0.467 f=-0.278 shape=(1, 9000, 1)
logits [[-0.64926755 -0.10839844 -0.11322412 -0.24055639]]
Iteration 500 of 1000: loss=0.415 " + "l1=0" + "l2=0.415 f=-0.267 shape=(1, 9000, 1)
logits [[-0.64223605 -0.11534027 -0.12555388 -0.18317768]]
Iteration 600 of 1000: loss=0.381 " + "l1=0.000723" + "l2=0.381 f=-0.256 shape=(1, 9000, 1)
logits [[-0.6186931  -0.1268719  -0.12614869 -0.15289864]]
Iteration 700 of 1000: loss=0.364 " + "l1=0.00567" + "l2=0.358 f=-0.248 shape=(1, 9000, 1)
logits [[-0.6024723  -0.13128196 -0.1256164  -0.13207436]]
Iteration 800 of 1000: loss=0.35 " + "l1=0.00177" + "l2=0.349 f=-0.245 shape=(1, 9000, 1)
logits [[-0.57099086 -0.11740648 -0.11563345 -0.17619476]]
Iteration 900 of 1000: loss=0.34 " + "l1=0" + "l2=0.34 f=-0.243 shape=(1, 9000, 1)
logits [[-0.5688569  -0.11100478 -0.1200899  -0.17150238]]
const [0.55]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=1.98 " + "l1=1.98" + "l2=0 f=-0.356 shape=(1, 9000, 1)
logits [[ 1.4545841 -2.1373703  1.1784554 -1.9216199]]
Iteration 100 of 1000: loss=0.857 " + "l1=0.516" + "l2=0.341 f=-0.243 shape=(1, 9000, 1)
logits [[ 0.24019083 -0.675645    0.2624641  -0.7997827 ]]
Iteration 200 of 1000: loss=0.653 " + "l1=0.313" + "l2=0.34 f=-0.26 shape=(1, 9000, 1)
logits [[-0.05530347 -0.4413687   0.12796837 -0.67117256]]
Iteration 300 of 1000: loss=0.524 " + "l1=0.186" + "l2=0.339 f=-0.265 shape=(1, 9000, 1)
logits [[-0.27162656 -0.30563462  0.03174831 -0.5128988 ]]
Iteration 400 of 1000: loss=0.435 " + "l1=0.0734" + "l2=0.362 f=-0.258 shape=(1, 9000, 1)
logits [[-0.46613345 -0.18671128 -0.05329047 -0.32602313]]
Iteration 500 of 1000: loss=0.372 " + "l1=0" + "l2=0.372 f=-0.258 shape=(1, 9000, 1)
logits [[-0.6050128  -0.11518674 -0.11573379 -0.19479492]]
Iteration 600 of 1000: loss=0.336 " + "l1=0.00171" + "l2=0.334 f=-0.248 shape=(1, 9000, 1)
logits [[-0.573342   -0.12692346 -0.12380927 -0.16679755]]
Iteration 700 of 1000: loss=0.318 " + "l1=0" + "l2=0.318 f=-0.244 shape=(1, 9000, 1)
logits [[-0.57497334 -0.12479366 -0.12931642 -0.1454564 ]]
Iteration 800 of 1000: loss=0.305 " + "l1=0.00127" + "l2=0.304 f=-0.241 shape=(1, 9000, 1)
logits [[-0.56920993 -0.13041309 -0.12809941 -0.13731113]]
Iteration 900 of 1000: loss=0.299 " + "l1=0.000682" + "l2=0.299 f=-0.24 shape=(1, 9000, 1)
logits [[-0.56479543 -0.12743871 -0.1261985  -0.13964051]]
const [0.325]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=1.17 " + "l1=1.17" + "l2=0 f=-0.356 shape=(1, 9000, 1)
logits [[ 1.4545841 -2.1373703  1.1784554 -1.9216199]]
Iteration 100 of 1000: loss=0.651 " + "l1=0.456" + "l2=0.195 f=-0.256 shape=(1, 9000, 1)
logits [[ 0.4329364 -0.9696278  0.4333772 -0.9203922]]
Iteration 200 of 1000: loss=0.54 " + "l1=0.334" + "l2=0.205 f=-0.237 shape=(1, 9000, 1)
logits [[ 0.30119228 -0.72659963  0.30172768 -0.8262278 ]]
Iteration 300 of 1000: loss=0.479 " + "l1=0.269" + "l2=0.21 f=-0.238 shape=(1, 9000, 1)
logits [[ 0.15242194 -0.6172471   0.20993103 -0.69721615]]
Iteration 400 of 1000: loss=0.426 " + "l1=0.213" + "l2=0.213 f=-0.232 shape=(1, 9000, 1)
logits [[ 0.02341843 -0.5165914   0.13865598 -0.572544  ]]
Iteration 500 of 1000: loss=0.385 " + "l1=0.16" + "l2=0.225 f=-0.231 shape=(1, 9000, 1)
logits [[-0.08997884 -0.42091143  0.07003111 -0.48499465]]
Iteration 600 of 1000: loss=0.346 " + "l1=0.116" + "l2=0.23 f=-0.23 shape=(1, 9000, 1)
logits [[-0.21333975 -0.3449063   0.01211686 -0.37367833]]
Iteration 700 of 1000: loss=0.317 " + "l1=0.0892" + "l2=0.228 f=-0.22 shape=(1, 9000, 1)
logits [[-0.28550962 -0.30054313 -0.02600352 -0.26924875]]
Iteration 800 of 1000: loss=0.304 " + "l1=0.0747" + "l2=0.229 f=-0.219 shape=(1, 9000, 1)
logits [[-0.3378748  -0.2824125  -0.05249576 -0.20147026]]
Iteration 900 of 1000: loss=0.297 " + "l1=0.0669" + "l2=0.23 f=-0.218 shape=(1, 9000, 1)
logits [[-0.375778   -0.27023488 -0.06453224 -0.16097483]]
--- 299.5239260196686 seconds ---
Adv result:1
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.00276 " + "l1=0.00276" + "l2=0 f=-0.356 shape=(1, 9000, 1)
logits [[ 1.4545841 -2.1373703  1.1784554 -1.9216199]]
Iteration 100 of 1000: loss=0.00263 " + "l1=0.0025" + "l2=0.000136 f=-0.359 shape=(1, 9000, 1)
logits [[ 1.4357843 -2.1487832  1.1862454 -1.9096465]]
Iteration 200 of 1000: loss=0.00259 " + "l1=0.00248" + "l2=0.000102 f=-0.359 shape=(1, 9000, 1)
logits [[ 1.4350142 -2.1496034  1.1866031 -1.9089789]]
Iteration 300 of 1000: loss=0.00258 " + "l1=0.00245" + "l2=0.000128 f=-0.36 shape=(1, 9000, 1)
logits [[ 1.4326215 -2.1515465  1.187716  -1.9073825]]
Iteration 400 of 1000: loss=0.00258 " + "l1=0.00241" + "l2=0.000166 f=-0.36 shape=(1, 9000, 1)
logits [[ 1.4299363 -2.1535935  1.188895  -1.9055266]]
Iteration 500 of 1000: loss=0.00259 " + "l1=0.00237" + "l2=0.000215 f=-0.361 shape=(1, 9000, 1)
logits [[ 1.4272608 -2.155638   1.1900866 -1.9037244]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.0276 " + "l1=0.0276" + "l2=0 f=-0.356 shape=(1, 9000, 1)
logits [[ 1.4545841 -2.1373703  1.1784554 -1.9216199]]
Iteration 100 of 1000: loss=0.0153 " + "l1=0.00888" + "l2=0.00641 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.327341  -2.2219315  1.238546  -1.8435595]]
Iteration 200 of 1000: loss=0.00986 " + "l1=0.000432" + "l2=0.00943 f=-0.383 shape=(1, 9000, 1)
logits [[ 1.2761816 -2.2684252  1.2718664 -1.8103111]]
Iteration 300 of 1000: loss=0.00723 " + "l1=0.000117" + "l2=0.00712 f=-0.384 shape=(1, 9000, 1)
logits [[ 1.2785215 -2.279862   1.2773501 -1.8117058]]
Iteration 400 of 1000: loss=0.00603 " + "l1=2.95e-05" + "l2=0.006 f=-0.385 shape=(1, 9000, 1)
logits [[ 1.2779413 -2.2826061  1.2776463 -1.8110611]]
Iteration 500 of 1000: loss=0.0053 " + "l1=2.42e-05" + "l2=0.00527 f=-0.385 shape=(1, 9000, 1)
logits [[ 1.2777188 -2.2836528  1.2774773 -1.8108798]]
Iteration 600 of 1000: loss=0.00495 " + "l1=0" + "l2=0.00495 f=-0.385 shape=(1, 9000, 1)
logits [[ 1.2762736 -2.285992   1.2790436 -1.8104944]]
Iteration 700 of 1000: loss=0.00464 " + "l1=0" + "l2=0.00464 f=-0.386 shape=(1, 9000, 1)
logits [[ 1.2768762 -2.2871015  1.2796075 -1.8115804]]
Iteration 800 of 1000: loss=0.00415 " + "l1=0" + "l2=0.00415 f=-0.385 shape=(1, 9000, 1)
logits [[ 1.2786293 -2.2861526  1.279056  -1.8133966]]
Iteration 900 of 1000: loss=0.00425 " + "l1=0.000112" + "l2=0.00413 f=-0.385 shape=(1, 9000, 1)
logits [[ 1.2793614 -2.2850037  1.2782421 -1.8142229]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.0152 " + "l1=0.0152" + "l2=0 f=-0.356 shape=(1, 9000, 1)
logits [[ 1.4545841 -2.1373703  1.1784554 -1.9216199]]
Iteration 100 of 1000: loss=0.0116 " + "l1=0.00967" + "l2=0.00192 f=-0.367 shape=(1, 9000, 1)
logits [[ 1.386063  -2.1834733  1.2101811 -1.8810111]]
Iteration 200 of 1000: loss=0.0101 " + "l1=0.00734" + "l2=0.00271 f=-0.372 shape=(1, 9000, 1)
logits [[ 1.3603159 -2.2083995  1.2267957 -1.8650938]]
Iteration 300 of 1000: loss=0.00876 " + "l1=0.00537" + "l2=0.00339 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.3377701 -2.2296844  1.2401407 -1.8488876]]
Iteration 400 of 1000: loss=0.00768 " + "l1=0.00364" + "l2=0.00404 f=-0.378 shape=(1, 9000, 1)
logits [[ 1.3172427 -2.2460546  1.2510344 -1.8350283]]
Iteration 500 of 1000: loss=0.00665 " + "l1=0.00194" + "l2=0.00471 f=-0.381 shape=(1, 9000, 1)
logits [[ 1.298932  -2.2633715  1.2636691 -1.824768 ]]
Iteration 600 of 1000: loss=0.00566 " + "l1=0.000172" + "l2=0.00548 f=-0.385 shape=(1, 9000, 1)
logits [[ 1.2810225 -2.2824907  1.2778994 -1.8154204]]
Iteration 700 of 1000: loss=0.00496 " + "l1=1.87e-05" + "l2=0.00494 f=-0.385 shape=(1, 9000, 1)
logits [[ 1.2789218 -2.2849994  1.2785822 -1.8139615]]
Iteration 800 of 1000: loss=0.00463 " + "l1=0" + "l2=0.00463 f=-0.386 shape=(1, 9000, 1)
logits [[ 1.2785724 -2.285599   1.2786597 -1.8138508]]
Iteration 900 of 1000: loss=0.00437 " + "l1=2.97e-05" + "l2=0.00434 f=-0.386 shape=(1, 9000, 1)
logits [[ 1.2789477 -2.2853234  1.2784077 -1.8145547]]
const [0.0325]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.00897 " + "l1=0.00897" + "l2=0 f=-0.356 shape=(1, 9000, 1)
logits [[ 1.4545841 -2.1373703  1.1784554 -1.9216199]]
Iteration 100 of 1000: loss=0.0077 " + "l1=0.00699" + "l2=0.000713 f=-0.363 shape=(1, 9000, 1)
logits [[ 1.4121131 -2.1643422  1.196989  -1.8959539]]
Iteration 200 of 1000: loss=0.00727 " + "l1=0.00639" + "l2=0.000882 f=-0.365 shape=(1, 9000, 1)
logits [[ 1.4011217 -2.1760628  1.2044276 -1.8894551]]
Iteration 300 of 1000: loss=0.00685 " + "l1=0.0057" + "l2=0.00115 f=-0.367 shape=(1, 9000, 1)
logits [[ 1.3877175 -2.188773   1.2123649 -1.8811982]]
Iteration 400 of 1000: loss=0.00646 " + "l1=0.00504" + "l2=0.00143 f=-0.37 shape=(1, 9000, 1)
logits [[ 1.3743833 -2.2003453  1.2194533 -1.8725023]]
Iteration 500 of 1000: loss=0.00612 " + "l1=0.00443" + "l2=0.00169 f=-0.372 shape=(1, 9000, 1)
logits [[ 1.3622178 -2.211542   1.2260412 -1.8640157]]
Iteration 600 of 1000: loss=0.00586 " + "l1=0.0039" + "l2=0.00196 f=-0.374 shape=(1, 9000, 1)
logits [[ 1.3522081 -2.2216153  1.2322773 -1.8572332]]
Iteration 700 of 1000: loss=0.00566 " + "l1=0.00343" + "l2=0.00223 f=-0.375 shape=(1, 9000, 1)
logits [[ 1.342228  -2.2290454  1.2367117 -1.8502791]]
Iteration 800 of 1000: loss=0.00534 " + "l1=0.00292" + "l2=0.00242 f=-0.377 shape=(1, 9000, 1)
logits [[ 1.3317864 -2.2365081  1.2418845 -1.8435941]]
Iteration 900 of 1000: loss=0.00525 " + "l1=0.00254" + "l2=0.00271 f=-0.378 shape=(1, 9000, 1)
logits [[ 1.3237324 -2.2416878  1.2456298 -1.8393452]]
const [0.04375]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.0121 " + "l1=0.0121" + "l2=0 f=-0.356 shape=(1, 9000, 1)
logits [[ 1.4545841 -2.1373703  1.1784554 -1.9216199]]
Iteration 100 of 1000: loss=0.0098 " + "l1=0.00855" + "l2=0.00125 f=-0.365 shape=(1, 9000, 1)
logits [[ 1.3997054 -2.1746416  1.2041843 -1.8889204]]
Iteration 200 of 1000: loss=0.00891 " + "l1=0.00724" + "l2=0.00168 f=-0.368 shape=(1, 9000, 1)
logits [[ 1.381337  -2.1928248  1.2159323 -1.8781103]]
Iteration 300 of 1000: loss=0.00807 " + "l1=0.0059" + "l2=0.00217 f=-0.372 shape=(1, 9000, 1)
logits [[ 1.3617554 -2.2103662  1.2269994 -1.8651198]]
Iteration 400 of 1000: loss=0.00734 " + "l1=0.00479" + "l2=0.00255 f=-0.374 shape=(1, 9000, 1)
logits [[ 1.3458027 -2.2257683  1.2363476 -1.8539212]]
Iteration 500 of 1000: loss=0.00677 " + "l1=0.00375" + "l2=0.00302 f=-0.377 shape=(1, 9000, 1)
logits [[ 1.3304285 -2.238571   1.2446783 -1.8434759]]
Iteration 600 of 1000: loss=0.00626 " + "l1=0.00288" + "l2=0.00338 f=-0.379 shape=(1, 9000, 1)
logits [[ 1.3170877 -2.2479126  1.251239  -1.8353496]]
Iteration 700 of 1000: loss=0.00578 " + "l1=0.00189" + "l2=0.00389 f=-0.381 shape=(1, 9000, 1)
logits [[ 1.3034333 -2.2602644  1.2603285 -1.8283207]]
Iteration 800 of 1000: loss=0.00519 " + "l1=0.000901" + "l2=0.00428 f=-0.383 shape=(1, 9000, 1)
logits [[ 1.2907112 -2.2740297  1.270126  -1.8207684]]
Iteration 900 of 1000: loss=0.00472 " + "l1=9.85e-05" + "l2=0.00463 f=-0.386 shape=(1, 9000, 1)
logits [[ 1.2789624 -2.2836683  1.2767103 -1.8140291]]
--- 265.98048305511475 seconds ---
Adv result:2
const [0.01]
  Binary search step 0 of 5
Iteration 0 of 1000: loss=0.0338 " + "l1=0.0338" + "l2=0 f=-0.356 shape=(1, 9000, 1)
logits [[ 1.4545841 -2.1373703  1.1784554 -1.9216199]]
Iteration 100 of 1000: loss=0.033 " + "l1=0.0326" + "l2=0.000433 f=-0.354 shape=(1, 9000, 1)
logits [[ 1.4031656 -2.112689   1.1505901 -1.85613  ]]
Iteration 200 of 1000: loss=0.0328 " + "l1=0.0323" + "l2=0.000465 f=-0.353 shape=(1, 9000, 1)
logits [[ 1.3925848 -2.1070669  1.1440288 -1.8418307]]
Iteration 300 of 1000: loss=0.0326 " + "l1=0.032" + "l2=0.000588 f=-0.352 shape=(1, 9000, 1)
logits [[ 1.3790073 -2.100384   1.136113  -1.8238328]]
Iteration 400 of 1000: loss=0.0325 " + "l1=0.0317" + "l2=0.000742 f=-0.352 shape=(1, 9000, 1)
logits [[ 1.3654437 -2.0944817  1.1286927 -1.8058927]]
Iteration 500 of 1000: loss=0.0323 " + "l1=0.0314" + "l2=0.0009 f=-0.351 shape=(1, 9000, 1)
logits [[ 1.352444  -2.0888252  1.1217362 -1.7885602]]
Iteration 600 of 1000: loss=0.0323 " + "l1=0.0312" + "l2=0.00108 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.3417623 -2.0840292  1.116174  -1.7750357]]
Iteration 700 of 1000: loss=0.0321 " + "l1=0.0309" + "l2=0.00118 f=-0.35 shape=(1, 9000, 1)
logits [[ 1.3316349 -2.0795095  1.1106886 -1.7621695]]
Iteration 800 of 1000: loss=0.0321 " + "l1=0.0307" + "l2=0.00134 f=-0.349 shape=(1, 9000, 1)
logits [[ 1.3220068 -2.0750847  1.1053921 -1.7501044]]
Iteration 900 of 1000: loss=0.032 " + "l1=0.0305" + "l2=0.0015 f=-0.349 shape=(1, 9000, 1)
logits [[ 1.3132389 -2.0712059  1.1007683 -1.7391531]]
const [0.1]
  Binary search step 1 of 5
Iteration 0 of 1000: loss=0.338 " + "l1=0.338" + "l2=0 f=-0.356 shape=(1, 9000, 1)
logits [[ 1.4545841 -2.1373703  1.1784554 -1.9216199]]
Iteration 100 of 1000: loss=0.264 " + "l1=0.221" + "l2=0.0426 f=-0.331 shape=(1, 9000, 1)
logits [[ 0.91771317 -1.8424244   0.89884514 -1.2969713 ]]
Iteration 200 of 1000: loss=0.225 " + "l1=0.178" + "l2=0.0478 f=-0.311 shape=(1, 9000, 1)
logits [[ 0.7380269 -1.681504   0.7377233 -1.0380929]]
Iteration 300 of 1000: loss=0.2 " + "l1=0.144" + "l2=0.0558 f=-0.297 shape=(1, 9000, 1)
logits [[ 0.59088683 -1.5904022   0.6280919  -0.81524694]]
Iteration 400 of 1000: loss=0.179 " + "l1=0.111" + "l2=0.0679 f=-0.284 shape=(1, 9000, 1)
logits [[ 0.4324219  -1.4997313   0.52255285 -0.59244084]]
Iteration 500 of 1000: loss=0.159 " + "l1=0.0808" + "l2=0.0778 f=-0.267 shape=(1, 9000, 1)
logits [[ 0.2867001  -1.3999327   0.42772028 -0.3805982 ]]
Iteration 600 of 1000: loss=0.137 " + "l1=0.0534" + "l2=0.0838 f=-0.26 shape=(1, 9000, 1)
logits [[ 0.14644602 -1.3487588   0.34864813 -0.18495044]]
Iteration 700 of 1000: loss=0.116 " + "l1=0.0274" + "l2=0.0886 f=-0.254 shape=(1, 9000, 1)
logits [[ 0.02446175 -1.3215281   0.27766532  0.00379227]]
Iteration 800 of 1000: loss=0.0987 " + "l1=0.0109" + "l2=0.0878 f=-0.25 shape=(1, 9000, 1)
logits [[-0.05285942 -1.3133167   0.23796275  0.12922484]]
Iteration 900 of 1000: loss=0.0849 " + "l1=8.37e-05" + "l2=0.0848 f=-0.247 shape=(1, 9000, 1)
logits [[-0.11019178 -1.310684    0.21761318  0.21677595]]
const [0.055]
  Binary search step 2 of 5
Iteration 0 of 1000: loss=0.186 " + "l1=0.186" + "l2=0 f=-0.356 shape=(1, 9000, 1)
logits [[ 1.4545841 -2.1373703  1.1784554 -1.9216199]]
Iteration 100 of 1000: loss=0.165 " + "l1=0.155" + "l2=0.0104 f=-0.342 shape=(1, 9000, 1)
logits [[ 1.2043715 -2.001194   1.0388702 -1.6103028]]
Iteration 200 of 1000: loss=0.155 " + "l1=0.139" + "l2=0.0156 f=-0.337 shape=(1, 9000, 1)
logits [[ 1.0754255  -1.9333835   0.97168785 -1.4603078 ]]
Iteration 300 of 1000: loss=0.145 " + "l1=0.122" + "l2=0.0228 f=-0.33 shape=(1, 9000, 1)
logits [[ 0.9248406  -1.8481433   0.89343363 -1.2900007 ]]
Iteration 400 of 1000: loss=0.135 " + "l1=0.107" + "l2=0.0273 f=-0.321 shape=(1, 9000, 1)
logits [[ 0.8112499 -1.7650434  0.8101762 -1.1404908]]
Iteration 500 of 1000: loss=0.128 " + "l1=0.0986" + "l2=0.0291 f=-0.314 shape=(1, 9000, 1)
logits [[ 0.7504728 -1.7171972  0.7513455 -1.0421586]]
Iteration 600 of 1000: loss=0.122 " + "l1=0.092" + "l2=0.0301 f=-0.307 shape=(1, 9000, 1)
logits [[ 0.7078718  -1.6796743   0.70771366 -0.96502584]]
Iteration 700 of 1000: loss=0.117 " + "l1=0.0859" + "l2=0.0311 f=-0.3 shape=(1, 9000, 1)
logits [[ 0.66532135 -1.645026    0.6700901  -0.8920982 ]]
Iteration 800 of 1000: loss=0.111 " + "l1=0.0785" + "l2=0.0329 f=-0.293 shape=(1, 9000, 1)
logits [[ 0.60190064 -1.6079302   0.6300889  -0.797345  ]]
Iteration 900 of 1000: loss=0.106 " + "l1=0.072" + "l2=0.0342 f=-0.287 shape=(1, 9000, 1)
logits [[ 0.5476841 -1.5719434  0.5924539 -0.7160791]]
const [0.0775]
  Binary search step 3 of 5
Iteration 0 of 1000: loss=0.262 " + "l1=0.262" + "l2=0 f=-0.356 shape=(1, 9000, 1)
logits [[ 1.4545841 -2.1373703  1.1784554 -1.9216199]]
Iteration 100 of 1000: loss=0.22 " + "l1=0.197" + "l2=0.0222 f=-0.337 shape=(1, 9000, 1)
logits [[ 1.0772908  -1.9311864   0.97483504 -1.4694281 ]]
Iteration 200 of 1000: loss=0.193 " + "l1=0.159" + "l2=0.0344 f=-0.325 shape=(1, 9000, 1)
logits [[ 0.8467634 -1.793695   0.846622  -1.2007517]]
Iteration 300 of 1000: loss=0.174 " + "l1=0.136" + "l2=0.0383 f=-0.311 shape=(1, 9000, 1)
logits [[ 0.728873  -1.6840194  0.730905  -1.0181577]]
Iteration 400 of 1000: loss=0.162 " + "l1=0.12" + "l2=0.0422 f=-0.301 shape=(1, 9000, 1)
logits [[ 0.65243363 -1.6300001   0.66130006 -0.8868262 ]]
Iteration 500 of 1000: loss=0.151 " + "l1=0.103" + "l2=0.048 f=-0.292 shape=(1, 9000, 1)
logits [[ 0.5493107  -1.5680019   0.59202564 -0.7410843 ]]
Iteration 600 of 1000: loss=0.139 " + "l1=0.0861" + "l2=0.0534 f=-0.279 shape=(1, 9000, 1)
logits [[ 0.44485536 -1.4949182   0.5218221  -0.5885413 ]]
Iteration 700 of 1000: loss=0.128 " + "l1=0.07" + "l2=0.0577 f=-0.268 shape=(1, 9000, 1)
logits [[ 0.3440693  -1.4313157   0.45883256 -0.44386482]]
Iteration 800 of 1000: loss=0.114 " + "l1=0.0518" + "l2=0.0623 f=-0.26 shape=(1, 9000, 1)
logits [[ 0.22534725 -1.3794312   0.3903402  -0.27809834]]
Iteration 900 of 1000: loss=0.101 " + "l1=0.0351" + "l2=0.0661 f=-0.254 shape=(1, 9000, 1)
logits [[ 0.12639096 -1.3555408   0.3337318  -0.11894982]]
const [0.08875]
  Binary search step 4 of 5
Iteration 0 of 1000: loss=0.3 " + "l1=0.3" + "l2=0 f=-0.356 shape=(1, 9000, 1)
logits [[ 1.4545841 -2.1373703  1.1784554 -1.9216199]]
Iteration 100 of 1000: loss=0.243 " + "l1=0.212" + "l2=0.0313 f=-0.334 shape=(1, 9000, 1)
logits [[ 1.001188  -1.8866357  0.9366069 -1.3871403]]
Iteration 200 of 1000: loss=0.21 " + "l1=0.168" + "l2=0.0417 f=-0.318 shape=(1, 9000, 1)
logits [[ 0.7835305 -1.7296944  0.7844054 -1.1093023]]
Iteration 300 of 1000: loss=0.188 " + "l1=0.141" + "l2=0.0463 f=-0.303 shape=(1, 9000, 1)
logits [[ 0.66324115 -1.6387548   0.67852545 -0.91436756]]
Iteration 400 of 1000: loss=0.172 " + "l1=0.118" + "l2=0.0543 f=-0.292 shape=(1, 9000, 1)
logits [[ 0.5412628  -1.5612177   0.59152025 -0.7396053 ]]
Iteration 500 of 1000: loss=0.156 " + "l1=0.0939" + "l2=0.0625 f=-0.278 shape=(1, 9000, 1)
logits [[ 0.41726637 -1.4796706   0.50479704 -0.5537136 ]]
Iteration 600 of 1000: loss=0.14 " + "l1=0.071" + "l2=0.0694 f=-0.265 shape=(1, 9000, 1)
logits [[ 0.2886938  -1.3980297   0.4250753  -0.37536132]]
Iteration 700 of 1000: loss=0.123 " + "l1=0.0482" + "l2=0.0745 f=-0.258 shape=(1, 9000, 1)
logits [[ 0.15939704 -1.3522226   0.35136142 -0.19158319]]
Iteration 800 of 1000: loss=0.106 " + "l1=0.0285" + "l2=0.0775 f=-0.253 shape=(1, 9000, 1)
logits [[ 0.05403327 -1.3330622   0.29405418 -0.02749861]]
Iteration 900 of 1000: loss=0.0927 " + "l1=0.0154" + "l2=0.0773 f=-0.249 shape=(1, 9000, 1)
logits [[-0.01022526 -1.3221306   0.25567627  0.08257539]]
--- 299.67364168167114 seconds ---
Adv result:3
